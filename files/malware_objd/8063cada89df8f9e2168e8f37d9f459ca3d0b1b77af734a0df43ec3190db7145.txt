
8063cada89df8f9e2168e8f37d9f459ca3d0b1b77af734a0df43ec3190db7145.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [ecx],edi
  402e93:	add    dh,dh
  402e95:	je     0x402f13
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x5d],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	push   ss
  402f42:	out    dx,al
  402f43:	addr16 nop
  402f45:	aaa    
  402f46:	cmp    al,BYTE PTR [ecx-0x72]
  402f49:	add    al,0x7d
  402f4b:	(bad)  [ecx+0x75]
  402f4e:	jmp    DWORD PTR [eax+ecx*8]
  402f51:	push   cs
  402f52:	cs pop eax
  402f54:	dec    ecx
  402f55:	je     0x402f0c
  402f57:	mov    ecx,0x4f7fa0c7
  402f5c:	add    cl,bl
  402f5e:	mov    ds:0x627c48a,al
  402f63:	jno    0x402f2b
  402f65:	jmp    DWORD PTR [ecx+0x345b28e5]
  402f6b:	loope  0x402f8e
  402f6d:	inc    edx
  402f6e:	and    al,0x9e
  402f70:	das    
  402f71:	fsub   QWORD PTR [ebx+0x59]
  402f74:	adc    eax,0xcf8ef1db
  402f79:	jp     0x402f70
  402f7b:	pusha  
  402f7c:	or     ecx,DWORD PTR [edx+0x14]
  402f7f:	lds    ebp,FWORD PTR [esi-0x33]
  402f82:	jne    0x402f05
  402f84:	mov    ss,WORD PTR [eax+esi*8]
  402f87:	add    DWORD PTR gs:[ecx+0x79],eax
  402f8b:	call   0xecf7980
  402f90:	xor    eax,0x7841733b
  402f95:	jno    0x402ffb
  402f97:	mov    dh,0x6b
  402f99:	dec    esp
  402f9a:	mov    al,0x54
  402f9c:	mov    esi,0x178700c6
  402fa1:	repz hlt 
  402fa3:	jmp    0x79a0b13f
  402fa8:	pop    es
  402fa9:	enter  0xc90e,0x8a
  402fad:	inc    esi
  402fae:	lahf   
  402faf:	and    al,0x74
  402fb1:	pop    esp
  402fb2:	loope  0x40301e
  402fb4:	add    eax,0x34e3acca
  402fb9:	jne    0x402fc0
  402fbb:	add    eax,0xc756d47b
  402fc0:	std    
  402fc1:	sar    ebx,0xc2
  402fc4:	fdivr  st,st(5)
  402fc6:	lds    esi,FWORD PTR [edi-0x494e2ca1]
  402fcc:	mov    al,0xfd
  402fce:	add    ebx,DWORD PTR [ecx-0x76c42a90]
  402fd4:	cmp    al,0x4f
  402fd6:	sbb    DWORD PTR [edi],0xbd11cb5f
  402fdc:	aad    0x8e
  402fde:	mov    ch,BYTE PTR [eax+0x729e1ffb]
  402fe4:	add    cl,BYTE PTR [ebp+0xc]
  402fe7:	push   edi
  402fe8:	shl    dh,1
  402fea:	mov    eax,0xc0aaee46
  402fef:	outs   dx,DWORD PTR ds:[esi]
  402ff0:	mov    DWORD PTR [ecx-0x5934a398],edi
  402ff6:	ret    0xa469
  402ff9:	pop    edx
  402ffa:	rcr    edi,0x1
  402ffd:	js     0x402fa0
  402fff:	ins    DWORD PTR es:[edi],dx
  403000:	xchg   ebp,eax
  403001:	pop    esp
  403002:	mov    esp,0x83a80f21
  403007:	retf   0xb948
  40300a:	xchg   DWORD PTR [eax-0x6f],edi
  40300d:	jne    0x402fc4
  40300f:	into   
  403010:	push   ds
  403011:	shr    ch,cl
  403013:	and    BYTE PTR [edi+0x66017b22],dl
  403019:	add    al,0xe4
  40301b:	xor    al,0xf
  40301d:	in     eax,0x96
  40301f:	jns    0x403088
  403021:	pop    ebx
  403022:	clc    
  403023:	push   ds
  403024:	data16 js 0x403098
  403027:	jmp    0x5132:0x54e13850
  40302e:	jae    0x402ff0
  403030:	jae    0x40303c
  403032:	sbb    DWORD PTR [ebp+eax*4+0xb],ebp
  403036:	stc    
  403037:	(bad)  
  403038:	cmp    BYTE PTR [ebp+0x49],bl
  40303b:	add    bh,ch
  40303d:	add    eax,0xfb0221a0
  403042:	lods   eax,DWORD PTR ds:[esi]
  403043:	std    
  403044:	arpl   WORD PTR gs:[esi],bp
  403047:	fsin   
  403049:	jno    0x403065
  40304b:	shr    BYTE PTR [edi+0x26],0x41
  40304f:	add    cl,BYTE PTR [ebp-0x59]
  403052:	das    
  403053:	push   edi
  403054:	sahf   
  403055:	xchg   edi,eax
  403056:	inc    edi
  403057:	or     al,0x9b
  403059:	jo     0x402ff9
  40305b:	leave  
  40305c:	dec    esp
  40305d:	push   ebx
  40305e:	dec    edx
  40305f:	or     BYTE PTR ds:0x32bed6dd,ch
  403065:	loop   0x4030ca
  403067:	data16 fistp QWORD PTR [ebx-0x651db3e]
  40306e:	test   al,0x96
  403070:	aad    0x7c
  403072:	fsubr  QWORD PTR [ecx+0x38]
  403075:	pop    ds
  403076:	add    DWORD PTR [ecx],edx
  403078:	add    DWORD PTR [ebx],edi
  40307a:	mov    ds:0x4006da46,al
  40307f:	(bad)  
  403080:	mov    esp,0x786053dd
  403085:	mov    al,0x7b
  403087:	sub    ah,dh
  403089:	inc    eax
  40308a:	rcr    DWORD PTR [eax+0x1ca18b9d],cl
  403090:	sar    DWORD PTR [ebp+ebx*2+0x60e156ab],0xe
  403098:	inc    edx
  403099:	mov    ebx,0xc2e53b8d
  40309e:	jno    0x4030ec
  4030a0:	lods   eax,DWORD PTR ds:[esi]
  4030a1:	add    dh,dh
  4030a3:	and    al,0x3b
  4030a5:	arpl   ax,sp
  4030a7:	jecxz  0x40304a
  4030a9:	ror    ch,1
  4030ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ac:	mov    ecx,0x77540fe
  4030b1:	mov    ds:0x522e0d46,al
  4030b6:	call   0x57db:0xa48ed712
  4030bd:	cmp    bl,bh
  4030bf:	cmp    esp,DWORD PTR [ecx+0x51]
  4030c2:	ret    0x9cdf
  4030c5:	(bad)  
  4030c6:	inc    edi
  4030c7:	mov    al,0xd1
  4030c9:	mov    ds:0xa8341757,al
  4030ce:	leave  
  4030cf:	inc    ebp
  4030d0:	or     BYTE PTR [esi-0xe86c3c6],ah
  4030d6:	cdq    
  4030d7:	inc    eax
  4030d8:	jecxz  0x40307e
  4030da:	add    al,0x48
  4030dc:	jo     0x4030fd
  4030de:	inc    ecx
  4030df:	add    eax,0xd90327ff
  4030e4:	dec    ecx
  4030e5:	scas   eax,DWORD PTR es:[edi]
  4030e6:	dec    eax
  4030e7:	fs cwde 
  4030e9:	push   0x32
  4030eb:	dec    esi
  4030ec:	retf   0xe231
  4030ef:	dec    esi
  4030f0:	adc    al,0xc8
  4030f2:	xor    ebx,0x62
  4030f5:	fnstsw WORD PTR [edx-0x8]
  4030f8:	mov    ah,BYTE PTR [esi-0x3f]
  4030fb:	mov    edx,0xf3e3e833
  403100:	fld    DWORD PTR [esi+edx*4]
  403103:	mov    esp,0x88747151
  403108:	jae    0x4030ce
  40310a:	add    BYTE PTR ss:0x8e943a94,cl
  403111:	push   0xf829d893
  403116:	xchg   esp,esi
  403118:	sub    eax,0xebdb6983
  40311d:	or     eax,0x1925136d
  403122:	inc    esp
  403123:	test   eax,0x93149aa3
  403128:	inc    ecx
  403129:	push   ds
  40312a:	adc    BYTE PTR [esi-0x41],bl
  40312d:	and    eax,0x90e3d8ab
  403132:	std    
  403133:	cmp    DWORD PTR [ecx+esi*8],0xffffffd4
  403137:	cmp    DWORD PTR [ecx+ecx*8+0x35570818],ebp
  40313e:	jg     0x403101
  403140:	sbb    DWORD PTR ds:0x80c0b428,edi
  403146:	fwait
  403147:	adc    esi,edi
  403149:	mov    edx,0x1d02f431
  40314e:	cmc    
  40314f:	mov    edx,0x7503e283
  403154:	pop    edx
  403155:	mov    ebp,0x85fc5178
  40315a:	inc    eax
  40315b:	sub    ah,BYTE PTR [ecx-0xb458b72]
  403161:	cmc    
  403162:	sub    al,BYTE PTR [esi+0x74cb1160]
  403168:	or     esp,edi
  40316a:	daa    
  40316b:	mov    ch,0xa2
  40316d:	mov    edx,0x366c149e
  403172:	pop    ebx
  403173:	stos   DWORD PTR es:[edi],eax
  403174:	popa   
  403175:	aas    
  403176:	popa   
  403177:	shr    BYTE PTR [ecx+0x75618e5d],cl
  40317d:	add    BYTE PTR [ebx+ebp*1-0x62],ch
  403181:	cmp    eax,0x9b576fbe
  403186:	out    0x9e,eax
  403188:	test   ah,ch
  40318a:	cmp    ah,ch
  40318c:	xor    BYTE PTR [ebx],dl
  40318e:	mov    ebx,0x13ffa227
  403193:	xchg   edi,eax
  403194:	dec    ecx
  403195:	shl    edi,cl
  403197:	xlat   BYTE PTR ds:[ebx]
  403198:	mov    dh,0x7e
  40319a:	xor    al,0xb5
  40319c:	lds    edx,FWORD PTR [edx]
  40319e:	and    ebx,DWORD PTR [ecx+0x29e49611]
  4031a4:	jbe    0x403162
  4031a6:	outs   dx,BYTE PTR ds:[esi]
  4031a7:	retf   
  4031a8:	jl     0x4031e0
  4031aa:	sahf   
  4031ab:	dec    eax
  4031ac:	dec    edx
  4031ad:	(bad)  
  4031ae:	and    dl,bh
  4031b0:	xor    cl,BYTE PTR [ebx+0x3f049b6b]
  4031b6:	mov    eax,0x288c1755
  4031bb:	add    DWORD PTR [esi-0x10],ecx
  4031be:	stos   DWORD PTR es:[edi],eax
  4031bf:	pop    ebp
  4031c0:	leave  
  4031c1:	ja     0x403174
  4031c3:	jmp    0x4031ce
  4031c5:	mov    ebp,0x14b3d00e
  4031ca:	pop    eax
  4031cb:	sub    al,0x2c
  4031cd:	sub    eax,0x4238ffdb
  4031d2:	das    
  4031d3:	leave  
  4031d4:	es in  al,0x2d
  4031d7:	push   0x6a09e237
  4031dc:	sub    al,0x44
  4031de:	data16 mov ch,0x7f
  4031e1:	aaa    
  4031e2:	push   esi
  4031e3:	enter  0x3f60,0xda
  4031e7:	add    dh,al
  4031e9:	lds    edx,FWORD PTR [edx+ebp*4-0x49bdc857]
  4031f0:	out    dx,al
  4031f1:	mov    bl,0xf4
  4031f3:	sahf   
  4031f4:	cld    
  4031f5:	push   ebp
  4031f6:	mov    bh,0x7c
  4031f8:	int    0x2c
  4031fa:	arpl   si,bp
  4031fc:	mov    edi,0x6a98cb77
  403201:	loopne 0x403261
  403203:	push   ds
  403204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403205:	mov    dh,0x4f
  403207:	jmp    0xcc01cc3b
  40320c:	adc    eax,0x947b4d95
  403211:	pop    eax
  403212:	fimul  WORD PTR [ecx]
  403214:	push   es
  403215:	dec    ebx
  403216:	inc    edx
  403217:	add    cl,BYTE PTR [esi]
  403219:	cli    
  40321a:	dec    eax
  40321b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40321c:	push   ecx
  40321d:	daa    
  40321e:	test   DWORD PTR [ecx-0x73],esi
  403221:	ja     0x4031ef
  403223:	popf   
  403224:	or     eax,0xa8879872
  403229:	adc    DWORD PTR [edx-0x6b],eax
  40322c:	cmp    eax,0x9704be32
  403231:	dec    ecx
  403232:	lds    edx,FWORD PTR [esi-0x1f]
  403235:	in     eax,0x3c
  403237:	sub    ah,BYTE PTR [edi+0x2f]
  40323a:	out    dx,eax
  40323b:	pop    ds
  40323c:	xor    al,0x8c
  40323e:	sbb    al,dh
  403240:	and    ch,BYTE PTR [edi+0x1b]
  403243:	mov    al,ds:0xc4238eb0
  403248:	ins    DWORD PTR es:[edi],dx
  403249:	push   esi
  40324a:	frstor [ecx]
  40324c:	data16 fsubr DWORD PTR [ebp-0x74]
  403250:	adc    bh,al
  403252:	outs   dx,DWORD PTR ds:[esi]
  403253:	xchg   BYTE PTR [esi],dh
  403255:	mov    edi,0x58e36e0b
  40325a:	icebp  
  40325b:	outs   dx,BYTE PTR ds:[esi]
  40325c:	adc    al,0x8f
  40325e:	adc    BYTE PTR [ecx-0x3e],0xa9
  403262:	popa   
  403263:	mov    al,ds:0xa3014182
  403268:	inc    eax
  403269:	xchg   BYTE PTR [ebp+0x1d],al
  40326c:	sbb    DWORD PTR [ecx],ebx
  40326e:	call   0x93e6c4ce
  403273:	mov    bl,0x23
  403275:	mov    bl,0x5d
  403277:	jecxz  0x403271
  403279:	xor    eax,DWORD PTR [edx+0x6f]
  40327c:	into   
  40327d:	xchg   edi,eax
  40327e:	push   cs
  40327f:	loopne 0x4032cd
  403281:	fadd   DWORD PTR [ecx]
  403283:	cmc    
  403284:	sub    eax,0x51552b1f
  403289:	js     0x4032a5
  40328b:	mov    ebx,gs
  40328d:	es mov esp,0xfc6714bf
  403293:	or     edi,DWORD PTR [eax-0x31d8de2b]
  403299:	push   ecx
  40329a:	push   es
  40329b:	cmp    al,0x92
  40329d:	enter  0x666b,0x43
  4032a1:	pop    ebx
  4032a2:	mov    eax,0x24325246
  4032a7:	xchg   esp,eax
  4032a8:	push   0x78dc2690
  4032ad:	imul   esi,edi,0xffffff8d
  4032b0:	adc    DWORD PTR [ebx+ecx*8],edx
  4032b3:	xchg   esi,eax
  4032b4:	push   edx
  4032b5:	mov    ebx,0x17c3ca16
  4032ba:	cwde   
  4032bb:	push   esi
  4032bc:	xor    eax,0xbd6289b5
  4032c1:	add    eax,0xb5f7ebfd
  4032c6:	push   esi
  4032c7:	jns    0x40329b
  4032c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ca:	dec    ebp
  4032cb:	inc    ebp
  4032cc:	pop    edx
  4032cd:	and    dh,dl
  4032cf:	in     eax,dx
  4032d0:	inc    ebx
  4032d1:	push   0xffffffec
  4032d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d4:	inc    edx
  4032d5:	cmp    edx,DWORD PTR [edi+0x3e16809f]
  4032db:	mov    gs,WORD PTR [esi]
  4032dd:	ret    
  4032de:	mov    edi,0x5864680e
  4032e3:	sub    al,0x1f
  4032e5:	ret    
  4032e6:	push   edi
  4032e7:	fldcw  WORD PTR [edx-0x94ba43d]
  4032ed:	jmp    0x363f5eee
  4032f2:	xchg   edi,eax
  4032f3:	pushf  
  4032f4:	pop    ebp
  4032f5:	(bad)  
  4032f7:	jbe    0x4032ce
  4032f9:	ins    BYTE PTR es:[edi],dx
  4032fa:	in     al,dx
  4032fb:	mov    ss:0x53ce2427,al
  403301:	pop    ebp
  403302:	test   al,0x5c
  403304:	sub    eax,ecx
  403306:	jb     0x40329e
  403308:	nop
  403309:	nop
  40330a:	not    ecx
  40330c:	pushf  
  40330d:	push   cs
  40330e:	pop    ds
  40330f:	pop    eax
  403310:	or     al,0xe
  403312:	mov    ebx,0xafdaa2a6
  403317:	les    ebp,FWORD PTR [edi+0x22e10239]
  40331d:	push   ebx
  40331e:	pop    esi
  40331f:	loopne 0x4032e1
  403321:	xchg   ebx,eax
  403322:	push   ecx
  403323:	call   DWORD PTR [ebx+0x4bbba757]
  403329:	and    ebp,DWORD PTR [esi+eax*8+0x53]
  40332d:	sti    
  40332e:	or     ebp,edx
  403330:	stc    
  403331:	repz popf 
  403333:	sbb    BYTE PTR [edx+0x13],0xeb
  403337:	(bad)  
  403338:	loop   0x4032bf
  40333a:	jge    0x4032bc
  40333c:	mov    ah,0x31
  40333e:	sar    DWORD PTR [ebp+edx*1+0x2b],1
  403342:	mov    ah,0x4c
  403344:	test   eax,0x64ab1025
  403349:	or     edi,DWORD PTR [eax-0x6ba80903]
  40334f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403350:	ror    BYTE PTR [edi],0x8b
  403353:	rol    ebp,1
  403355:	and    ah,ah
  403357:	push   ss
  403358:	add    bh,ch
  40335a:	(bad)  
  40335b:	xor    al,0x66
  40335d:	nop
  40335e:	pusha  
  40335f:	fxch   st(1)
  403361:	sub    BYTE PTR [eax-0x7f],bl
  403364:	pop    edx
  403365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403366:	ins    BYTE PTR es:[edi],dx
  403367:	sub    eax,0x76756015
  40336c:	leave  
  40336d:	push   ebp
  40336e:	outs   dx,BYTE PTR ds:[esi]
  40336f:	adc    cl,BYTE PTR [ebx+0x6a]
  403372:	inc    esi
  403373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403374:	and    eax,0x2ff74312
  403379:	(bad)  
  40337a:	cli    
  40337b:	and    BYTE PTR ds:0xccce6ec,0x75
  403382:	mov    ds,WORD PTR [edi+0x10a1a619]
  403388:	or     dl,BYTE PTR [edx-0x47]
  40338b:	fstp   st(5)
  40338d:	sub    bh,ah
  40338f:	dec    ebx
  403390:	je     0x4033b5
  403392:	pop    eax
  403393:	jmp    0x3760:0xbbb2fc66
  40339a:	(bad)  
  40339b:	out    dx,eax
  40339c:	nop
  40339d:	add    ecx,DWORD PTR [edx+ebx*2-0x729a0b54]
  4033a4:	jo     0x403382
  4033a6:	in     al,0xb9
  4033a8:	loop   0x40339c
  4033aa:	cmp    ebx,esp
  4033ac:	cld    
  4033ad:	scas   eax,DWORD PTR es:[edi]
  4033ae:	pop    ebx
  4033af:	inc    eax
  4033b0:	inc    ecx
  4033b1:	cdq    
  4033b2:	dec    ebx
  4033b3:	lahf   
  4033b4:	add    edx,DWORD PTR [esi-0x24]
  4033b7:	jne    0x4033e8
  4033b9:	ret    
  4033ba:	inc    edi
  4033bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033bc:	cmp    BYTE PTR [edx+0x56a5019f],dl
  4033c2:	das    
  4033c3:	in     eax,0xde
  4033c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c6:	je     0x403410
  4033c8:	pop    eax
  4033c9:	mov    al,0x26
  4033cb:	sub    edx,esp
  4033cd:	xor    BYTE PTR fs:[edx],dh
  4033d0:	aaa    
  4033d1:	cmp    BYTE PTR [ebp+0x4f02f92],ah
  4033d7:	xor    al,0x38
  4033d9:	cmc    
  4033da:	xor    dh,cl
  4033dc:	test   eax,0xe6ec3542
  4033e1:	xchg   edx,eax
  4033e2:	xchg   esi,eax
  4033e3:	jnp    0x403399
  4033e5:	inc    ebp
  4033e6:	push   edi
  4033e7:	call   0x29763e11
  4033ec:	and    ch,BYTE PTR [ecx+eiz*2-0x6c207bb6]
  4033f3:	mov    bh,0xb7
  4033f5:	add    cl,dl
  4033f7:	ret    0x4a6d
  4033fa:	daa    
  4033fb:	pop    esp
  4033fc:	std    
  4033fd:	and    edi,ebx
  4033ff:	clc    
  403400:	push   ecx
  403401:	xchg   DWORD PTR [edx-0x18],eax
  403404:	and    eax,0x6035faf7
  403409:	fs popf 
  40340b:	fist   DWORD PTR [ebx+0x2d485bc]
  403411:	iret   
  403412:	mov    esi,0x7bb15d23
  403417:	pop    ds
  403418:	test   BYTE PTR [eax-0x46],ch
  40341b:	aad    0xd1
  40341d:	cld    
  40341e:	addr16 jl 0x4033f1
  403421:	nop
  403422:	cmp    DWORD PTR [edx-0x1d],esi
  403425:	out    0xbc,al
  403427:	fiadd  DWORD PTR [edx]
  403429:	data16 out dx,al
  40342b:	(bad)  
  40342c:	cmc    
  40342d:	sub    esi,ebp
  40342f:	adc    ebx,eax
  403431:	retf   
  403432:	sub    cl,0x1d
  403435:	xor    DWORD PTR [ecx+0x36],ebp
  403438:	fwait
  403439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343b:	leave  
  40343c:	aaa    
  40343d:	jno    0x403437
  40343f:	cld    
  403440:	stos   DWORD PTR es:[edi],eax
  403441:	sbb    eax,0xe46133ab
  403446:	jae    0x4034b3
  403448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403449:	or     DWORD PTR [edx+edi*4-0x17],ecx
  40344d:	cld    
  40344e:	sbb    dl,ch
  403450:	adc    al,BYTE PTR [esi-0x383c0f71]
  403456:	mov    edx,0x7219e10b
  40345b:	fdiv   st,st(0)
  40345d:	sbb    DWORD PTR [ecx],ebp
  40345f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403460:	daa    
  403461:	mov    ch,0xc4
  403463:	dec    eax
  403464:	fld    QWORD PTR [edx+0x5f]
  403467:	rcl    BYTE PTR [eax],0xaa
  40346a:	sub    ah,BYTE PTR [ecx-0x5bb7fc54]
  403470:	pop    ebp
  403471:	adc    BYTE PTR [edi],cl
  403473:	and    eax,0xbffa6cb5
  403478:	sbb    eax,0x8f7c012c
  40347d:	push   eax
  40347e:	(bad)  
  40347f:	int3   
  403480:	test   eax,0x3b85c836
  403485:	pop    ds
  403486:	inc    esp
  403487:	fild   DWORD PTR [ecx+ebx*2-0x57]
  40348b:	sub    BYTE PTR [ecx-0x99a62d1],ah
  403491:	call   FWORD PTR [ecx-0x17]
  403494:	cmp    DWORD PTR [ebp-0x16],ebx
  403497:	mov    eax,ds:0x1e99bed9
  40349c:	sbb    eax,0x7ec3fbdf
  4034a1:	jmp    0x2fe5:0xa725c201
  4034a8:	pop    ebx
  4034a9:	jle    0x403432
  4034ab:	add    eax,0x13dd6e98
  4034b0:	(bad)  
  4034b1:	cwde   
  4034b2:	mov    edx,0xf10d9c3d
  4034b7:	call   0xc7a54d5
  4034bc:	push   esp
  4034bd:	pop    esi
  4034be:	xchg   esi,eax
  4034bf:	jne    0x40352d
  4034c1:	xor    ebx,DWORD PTR [esi+ebx*2-0x48249b27]
  4034c8:	(bad)  
  4034c9:	push   esp
  4034ca:	jne    0x403548
  4034cc:	popf   
  4034cd:	add    eax,0x712ae087
  4034d2:	and    esi,DWORD PTR [eax+0x4fc50f90]
  4034d8:	cli    
  4034d9:	les    ebx,FWORD PTR [edi+0x37]
  4034dc:	test   BYTE PTR [ecx+0x66fa0fbd],ch
  4034e2:	mov    ds:0x1992a32d,eax
  4034e7:	lods   eax,DWORD PTR ds:[esi]
  4034e8:	lahf   
  4034e9:	(bad)  
  4034ea:	xchg   ebx,eax
  4034eb:	jp     0x4034ca
  4034ed:	shl    ah,0xf4
  4034f0:	or     ecx,ebx
  4034f2:	lock push cx
  4034f5:	mov    al,ds:0x35e967fd
  4034fa:	adc    eax,0x63be12f8
  4034ff:	stos   DWORD PTR es:[edi],eax
  403500:	aas    
  403501:	pop    ebp
  403502:	rcr    BYTE PTR [edi-0x4f],0xe6
  403506:	inc    esp
  403507:	or     edi,DWORD PTR [edi-0x2c6e6af0]
  40350d:	cmp    eax,0xc14c1163
  403512:	and    BYTE PTR [edi+0x5b],0xd6
  403516:	fstp   TBYTE PTR [ebx]
  403518:	jle    0x4034f7
  40351a:	shl    BYTE PTR [esi-0x225e760],1
  403520:	inc    esi
  403521:	loope  0x40352a
  403523:	jae    0x4034cf
  403525:	jne    0x40352c
  403527:	mov    al,ds:0x1a563f12
  40352c:	pushf  
  40352d:	push   edi
  40352e:	clc    
  40352f:	pushf  
  403530:	jmp    0x6a98:0x17f24e8b
  403537:	sbb    dh,ah
  403539:	lea    esi,[ebx-0xd]
  40353c:	jbe    0x403567
  40353e:	push   ss
  40353f:	retf   
  403540:	dec    esp
  403541:	xchg   esp,eax
  403542:	outs   dx,BYTE PTR ds:[esi]
  403543:	call   0x469d:0xf0e76ba
  40354a:	pop    ss
  40354b:	and    edx,DWORD PTR [edx+0x1c]
  40354e:	in     al,dx
  40354f:	xor    ch,BYTE PTR [edx-0x71]
  403552:	mov    dl,0x2d
  403554:	push   eax
  403555:	sahf   
  403556:	adc    esi,DWORD PTR [edi*4+0x1b288e2a]
  40355d:	adc    ebp,DWORD PTR [esi-0x6a]
  403560:	sbb    al,bl
  403562:	xchg   edx,eax
  403563:	aas    
  403564:	imul   ecx,DWORD PTR [ebx],0x6406de71
  40356a:	outs   dx,BYTE PTR gs:[esi]
  40356c:	mov    al,ds:0x363dbab8
  403571:	dec    BYTE PTR [edx-0x3900990]
  403577:	xor    BYTE PTR [esi-0x632ccc97],dh
  40357d:	test   DWORD PTR ds:0x6f757e25,0xd7c0260e
  403587:	mov    ch,0x25
  403589:	dec    al
  40358b:	mov    ds,WORD PTR [edx-0x44]
  40358e:	shr    edi,cl
  403590:	mov    dl,0xb0
  403592:	cmp    al,0xc1
  403594:	loopne 0x40352c
  403596:	pop    ecx
  403597:	(bad)  
  403598:	in     al,0xd
  40359a:	add    bl,ch
  40359c:	lds    esp,FWORD PTR [ebx+0x6e]
  40359f:	or     DWORD PTR [edx+0x11],0xffffffdf
  4035a3:	mov    eax,0xa8495ce
  4035a8:	dec    ecx
  4035a9:	shr    DWORD PTR [ecx-0x69f6d896],1
  4035af:	xchg   edx,eax
  4035b0:	jecxz  0x403612
  4035b2:	jle    0x4035d9
  4035b4:	ret    0x22c1
  4035b7:	sub    al,0x2e
  4035b9:	inc    edi
  4035ba:	in     al,0xef
  4035bc:	dec    esp
  4035bd:	and    cl,dl
  4035bf:	sub    cl,BYTE PTR [ebx+0x5acbe6f7]
  4035c5:	xchg   ebp,eax
  4035c6:	sub    BYTE PTR [edx+eiz*2],cl
  4035c9:	imul   ebx,ebp,0xf1e28d42
  4035cf:	fwait
  4035d0:	sbb    BYTE PTR [edi+0x467f3b83],dl
  4035d6:	or     bl,BYTE PTR [ebp*2-0x580ade8f]
  4035dd:	and    BYTE PTR [ebp-0x3f12df88],cl
  4035e3:	cli    
  4035e4:	inc    ebx
  4035e5:	jg     0x4035aa
  4035e7:	test   bl,dl
  4035e9:	xlat   BYTE PTR ds:[ebx]
  4035ea:	inc    esp
  4035eb:	lods   eax,DWORD PTR ds:[esi]
  4035ec:	sub    eax,0xa8178989
  4035f1:	cmp    ah,0xe
  4035f4:	adc    BYTE PTR [edi-0x2b994663],cl
  4035fa:	dec    edi
  4035fb:	xchg   ebp,eax
  4035fc:	push   ds
  4035fd:	add    bl,ah
  4035ff:	mov    ebp,0x7817fa98
  403604:	dec    eax
  403605:	hlt    
  403606:	dec    ebp
  403607:	xor    eax,0x374c7398
  40360c:	test   DWORD PTR [eax-0x4ef5326c],esi
  403612:	xor    bh,BYTE PTR [ecx+0x65]
  403615:	mov    ebp,DWORD PTR [esi+edi*8+0xf]
  403619:	mov    ebp,0xce6881a5
  40361e:	pop    ebp
  40361f:	push   ebp
  403621:	jecxz  0x403641
  403623:	pop    ss
  403624:	mov    edi,0xe8de5de0
  403629:	mov    ebp,0x33c51b04
  40362e:	ds iret 
  403630:	popa   
  403631:	add    dl,dh
  403633:	dec    edx
  403634:	aaa    
  403635:	jecxz  0x4036ab
  403637:	mov    dl,0x4
  403639:	mov    DWORD PTR [edi+0x28f428ad],edi
  40363f:	pop    esp
  403640:	fild   DWORD PTR [ecx-0x25]
  403643:	or     edi,esp
  403645:	outs   dx,BYTE PTR ds:[esi]
  403646:	inc    ecx
  403647:	push   0xcb8a0468
  40364c:	std    
  40364d:	sbb    esp,DWORD PTR [edi+0x5d]
  403650:	pop    ecx
  403651:	inc    esi
  403652:	cmp    al,0x2a
  403654:	sbb    eax,edx
  403656:	sti    
  403657:	fsub   DWORD PTR [edi]
  403659:	(bad)  
  40365a:	and    al,0x6b
  40365c:	shr    DWORD PTR [ebp-0x20],1
  40365f:	repnz lods eax,DWORD PTR ds:[esi]
  403661:	sbb    cl,BYTE PTR [eax]
  403663:	enter  0x816f,0x6b
  403667:	xchg   edx,eax
  403668:	outs   dx,DWORD PTR ds:[esi]
  403669:	in     eax,dx
  40366a:	push   0x7e001b54
  40366f:	stos   BYTE PTR es:[edi],al
  403670:	jbe    0x403613
  403672:	imul   edx,DWORD PTR [esi+0x46a6ae33],0xd3735e2f
  40367c:	push   es
  40367d:	pop    eax
  40367e:	push   es
  40367f:	sbb    al,0xc0
  403681:	test   BYTE PTR [ecx+0x18],dh
  403684:	xchg   DWORD PTR [eax-0x70],eax
  403687:	and    bl,BYTE PTR ds:0x3f092ecd
  40368d:	xor    ebx,esi
  40368f:	outs   dx,DWORD PTR ds:[esi]
  403690:	out    0xfa,al
  403692:	mov    al,0xb8
  403694:	jg     0x4036ff
  403696:	sti    
  403697:	sbb    al,0x6e
  403699:	test   eax,0xfa839762
  40369e:	dec    eax
  40369f:	retf   
  4036a0:	adc    dh,bh
  4036a2:	rol    eax,1
  4036a4:	dec    ecx
  4036a5:	xor    eax,0xf0cf1725
  4036aa:	sbb    DWORD PTR [ebx+ebx*1],edi
  4036ad:	imul   ebp,DWORD PTR [edi],0xffffff8a
  4036b0:	inc    eax
  4036b1:	stos   DWORD PTR es:[edi],eax
  4036b2:	ja     0x40372f
  4036b4:	dec    ebx
  4036b5:	cli    
  4036b6:	mov    al,0xd1
  4036b8:	mov    ds:0x7a00bb94,eax
  4036bd:	cld    
  4036be:	mov    ebp,0x2307e4cc
  4036c3:	fild   QWORD PTR [edi-0x524b668]
  4036c9:	adc    DWORD PTR [ebp+0x39],ebp
  4036cc:	add    DWORD PTR [eax],ecx
  4036ce:	xchg   edx,eax
  4036cf:	hlt    
  4036d0:	outs   dx,DWORD PTR ds:[esi]
  4036d1:	bound  edi,QWORD PTR fs:[ebx+edx*8+0x213e1662]
  4036d9:	(bad)  
  4036da:	das    
  4036db:	stos   BYTE PTR es:[edi],al
  4036dc:	jo     0x403713
  4036de:	pop    ebp
  4036df:	adc    eax,0xbe00da2b
  4036e4:	push   ss
  4036e5:	mov    esp,0x68d36ef8
  4036ea:	ins    BYTE PTR es:[edi],dx
  4036eb:	cmp    ch,BYTE PTR ds:0x858a77a6
  4036f1:	jmp    0x1ef019bd
  4036f6:	sbb    al,0xeb
  4036f8:	sbb    dh,BYTE PTR [ebp-0xf]
  4036fb:	push   edi
  4036fc:	icebp  
  4036fd:	sbb    DWORD PTR [edi-0x44b55a64],edx
  403703:	push   ds
  403704:	in     eax,dx
  403705:	pop    ebp
  403706:	cmp    eax,DWORD PTR [esi+0xf94f034]
  40370c:	pop    es
  40370d:	push   es
  40370e:	shr    BYTE PTR [ebx],0x6c
  403711:	gs out 0xd5,eax
  403714:	loop   0x4036eb
  403716:	sti    
  403717:	xor    DWORD PTR [esi],ecx
  403719:	scas   eax,DWORD PTR es:[edi]
  40371a:	cmp    BYTE PTR [esi+0x44],0xa7
  40371e:	mov    edi,0xea85627
  403723:	mov    al,0x9f
  403725:	test   eax,0x9f83747f
  40372a:	int    0xef
  40372c:	lods   al,BYTE PTR ds:[esi]
  40372d:	imul   esp,esp,0xbf7da625
  403733:	and    BYTE PTR [edi-0x52],al
  403736:	mov    dl,0xd1
  403738:	xor    dh,BYTE PTR [eax-0x178a54b6]
  40373e:	lahf   
  40373f:	and    BYTE PTR [edi-0x280c9724],0x0
  403746:	ins    DWORD PTR es:[edi],dx
  403747:	add    eax,0xe35044ee
  40374c:	adc    DWORD PTR ds:0x38d9d9d6,0xffffff9e
  403753:	inc    ebx
  403754:	jle    0x403799
  403756:	add    DWORD PTR [edi],esi
  403758:	mov    dl,0xac
  40375a:	int3   
  40375b:	cmp    eax,0x497bbd90
  403760:	ret    0x42f5
  403763:	mov    BYTE PTR gs:[eax+0x4e],ah
  403767:	popf   
  403768:	jmp    0x696a:0x88722866
  40376f:	push   esp
  403770:	mov    edi,0x690dee8c
  403775:	cmc    
  403776:	fwait
  403777:	mov    eax,0x98be126c
  40377c:	call   0x785ade21
  403781:	test   DWORD PTR [edi+edi*4],ebp
  403784:	sub    esi,esp
  403786:	dec    eax
  403787:	fucomi st,st(0)
  403789:	adc    BYTE PTR [edx+0x377c0d27],bh
  40378f:	sub    eax,0x91734185
  403794:	push   eax
  403795:	xlat   BYTE PTR ds:[ebx]
  403796:	lods   eax,DWORD PTR ds:[esi]
  403797:	cdq    
  403798:	pop    ebx
  403799:	arpl   WORD PTR [edx-0x21],si
  40379c:	sbb    al,0xef
  40379e:	out    0x65,eax
  4037a0:	sahf   
  4037a1:	jbe    0x403759
  4037a3:	scas   al,BYTE PTR es:[edi]
  4037a4:	shl    BYTE PTR [edx],1
  4037a6:	cmp    eax,DWORD PTR [ecx+0x71]
  4037a9:	and    eax,0x7bf966d6
  4037ae:	inc    ebx
  4037af:	int    0xda
  4037b1:	mov    ecx,0xe3af3b30
  4037b6:	cmp    eax,0xc68fa468
  4037bb:	aad    0x6e
  4037bd:	cmp    BYTE PTR [edi+0x627eebc4],ch
  4037c3:	sub    al,0x20
  4037c5:	xchg   esi,eax
  4037c6:	ins    DWORD PTR es:[edi],dx
  4037c7:	sub    bh,cl
  4037c9:	(bad)  
  4037ca:	(bad)  
  4037cb:	jp     0x403799
  4037cd:	jg     0x403826
  4037cf:	stos   DWORD PTR es:[edi],eax
  4037d0:	leave  
  4037d1:	fbstp  TBYTE PTR [ecx]
  4037d3:	cmp    eax,0xc3a105ca
  4037d8:	add    BYTE PTR [esi-0x3],dh
  4037db:	push   ds
  4037dc:	imul   ebx,DWORD PTR [edx],0x13
  4037df:	(bad)  
  4037e0:	and    dl,BYTE PTR [edx]
  4037e2:	lock ror DWORD PTR [ebx+0x1d6d21b8],cl
  4037e9:	sbb    DWORD PTR [edx+0x453a03c7],ecx
  4037ef:	ins    BYTE PTR es:[edi],dx
  4037f0:	pop    ecx
  4037f1:	cld    
  4037f2:	jle    0x40380b
  4037f4:	rcl    DWORD PTR [edi],1
  4037f6:	dec    ecx
  4037f7:	push   esi
  4037f8:	adc    BYTE PTR [esp+ebp*2],0x9f
  4037fc:	mov    DWORD PTR [eax-0x1f],ebx
  4037ff:	std    
  403800:	push   eax
  403801:	adc    DWORD PTR [edi+edx*4+0xe3f560c],0x27942e8
  40380c:	sub    BYTE PTR [edi-0x9],al
  40380f:	push   DWORD PTR [ebp+edx*4+0x3e95afab]
  403816:	popa   
  403817:	or     BYTE PTR [eax+0x5b],dl
  40381a:	and    ecx,esi
  40381c:	push   esi
  40381d:	xchg   BYTE PTR [edx-0x32916f3b],ah
  403823:	pusha  
  403824:	stos   DWORD PTR es:[edi],eax
  403825:	mov    dl,BYTE PTR [edx]
  403827:	dec    esp
  403828:	call   0x7a65:0xd62edc69
  40382f:	add    BYTE PTR [edi+esi*2],ch
  403832:	inc    ebx
  403833:	ja     0x4037fc
  403835:	mov    al,BYTE PTR [esi+0x2c14067d]
  40383b:	fmul   QWORD PTR [eax]
  40383d:	aaa    
  40383e:	pop    edi
  40383f:	or     DWORD PTR [eax-0x7],eax
  403842:	push   0xffffffc5
  403844:	push   edi
  403845:	or     edx,edi
  403847:	push   0xffffff80
  403849:	pop    ss
  40384a:	lahf   
  40384b:	sbb    BYTE PTR [esi+0x21],bh
  40384e:	and    al,0x8
  403850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403851:	imul   edx,DWORD PTR [esi-0x5dcd3645]
  403858:	daa    
  403859:	mov    ebp,0xbf000fe2
  40385e:	(bad)  
  40385f:	in     eax,dx
  403860:	sub    al,0xe7
  403862:	cmp    edx,ecx
  403864:	sbb    edi,DWORD PTR [eax+0x2a]
  403867:	adc    edx,eax
  403869:	ds aad 0x1f
  40386c:	adc    esi,ebp
  40386e:	pop    esi
  40386f:	loope  0x4037f5
  403871:	inc    edx
  403872:	xor    DWORD PTR [eax+0x6d3ce44e],esp
  403878:	mov    edx,ecx
  40387a:	pop    ds
  40387b:	shl    ch,cl
  40387d:	adc    al,0x67
  40387f:	leave  
  403880:	inc    edi
  403881:	sbb    al,0xd
  403883:	jmp    0x403840
  403885:	shr    BYTE PTR cs:[ebp+0x5a],0xb1
  40388a:	lods   al,BYTE PTR ds:[esi]
  40388b:	in     eax,0x7c
  40388d:	enter  0x9c9,0x31
  403891:	jmp    0x9426:0x3199b4c8
  403898:	jno    0x4038b9
  40389a:	repnz jecxz 0x403909
  40389d:	mov    edi,0xd7507e36
  4038a2:	fisubr WORD PTR [edi-0x5742686e]
  4038a8:	shl    esp,1
  4038aa:	nop
  4038ab:	jbe    0x403884
  4038ad:	shl    edx,cl
  4038af:	ret    0x3dc
  4038b2:	and    esi,DWORD PTR [edi+edi*4+0x33d4d156]
  4038b9:	fdiv   DWORD PTR ds:[edx+edi*1]
  4038bd:	or     dh,BYTE PTR [edi]
  4038bf:	mov    ebp,0xe7608101
  4038c4:	xor    eax,0xa6c7dbc4
  4038c9:	push   eax
  4038ca:	addr16 jmp 0xfb74be95
  4038d0:	repz inc eax
  4038d2:	mov    al,0x5d
  4038d4:	aad    0xe1
  4038d6:	mov    al,0x63
  4038d8:	jecxz  0x40385c
  4038da:	inc    esp
  4038db:	xor    eax,0x6df7e8f4
  4038e0:	(bad)  
  4038e1:	mov    WORD PTR gs:[ebx+0x5c66eb44],?
  4038e8:	jae    0x40390e
  4038ea:	in     eax,dx
  4038eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ec:	dec    esp
  4038ed:	fmul   QWORD PTR [esi+eiz*2+0x22]
  4038f1:	push   ecx
  4038f2:	dec    edi
  4038f3:	pop    esp
  4038f4:	test   DWORD PTR [ebx+0x1f8cc4eb],edx
  4038fa:	or     bh,ch
  4038fc:	fldcw  WORD PTR ds:0xf760c172
  403902:	push   DWORD PTR [ebx+0x26c09c08]
  403908:	cdq    
  403909:	js     0x403979
  40390b:	mov    esi,DWORD PTR [ebx+ebp*1-0x31]
  40390f:	mov    ds:0xdb4da52e,al
  403914:	test   eax,0xe9b7579b
  403919:	xchg   edi,eax
  40391a:	pop    edx
  40391b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40391c:	std    
  40391d:	adc    al,0xac
  40391f:	cli    
  403920:	add    edi,DWORD PTR [eax]
  403922:	xchg   dh,cl
  403924:	mov    BYTE PTR [ebx],0x63
  403927:	add    al,dh
  403929:	add    BYTE PTR [edx-0x5bfcff84],bl
  40392f:	push   ss
  403930:	mov    edx,0xbfe42143
  403935:	outs   dx,DWORD PTR ds:[esi]
  403936:	mov    dh,0x29
  403938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403939:	out    dx,eax
  40393a:	mov    ch,0xc6
  40393c:	lds    esi,FWORD PTR [esi]
  40393e:	leave  
  40393f:	outs   dx,BYTE PTR ds:[esi]
  403940:	mov    ah,0xdb
  403942:	cmp    BYTE PTR [eax+0xf],bh
  403945:	ja     0x403965
  403947:	or     DWORD PTR [eax],eax
  403949:	aam    0xaa
  40394b:	inc    ecx
  40394c:	pop    es
  40394d:	push   es
  40394e:	outs   dx,BYTE PTR ds:[esi]
  40394f:	fadd   QWORD PTR [esi-0x2132583b]
  403955:	jae    0x4039c2
  403957:	adc    ebx,DWORD PTR [ebx-0x28747af5]
  40395d:	retf   0xd5a0
  403960:	fimul  DWORD PTR [ebp+0x48]
  403963:	mov    fs,WORD PTR [ecx-0x4a3cc827]
  403969:	mov    esi,0x7fe11997
  40396e:	jge    0x4039d8
  403970:	ins    DWORD PTR es:[edi],dx
  403971:	aas    
  403972:	xchg   esi,eax
  403973:	popa   
  403974:	xor    edi,esp
  403976:	shl    DWORD PTR [ecx],1
  403978:	inc    DWORD PTR [esi]
  40397a:	je     0x403986
  40397c:	repnz mov eax,0xee9b0cff
  403982:	push   ebx
  403983:	or     bh,BYTE PTR [ebp-0x57c77518]
  403989:	or     dh,BYTE PTR [ecx-0x10]
  40398c:	sbb    al,0x4e
  40398e:	inc    esp
  40398f:	dec    ecx
  403990:	int3   
  403991:	dec    eax
  403992:	retf   0x481b
  403995:	cmp    DWORD PTR [ecx],0xe8c7ea47
  40399b:	and    ch,BYTE PTR [ebx-0x277fe720]
  4039a1:	cmp    bh,BYTE PTR [ecx-0x4e]
  4039a4:	jmp    0x5d230872
  4039a9:	add    BYTE PTR [ecx-0x591b39c0],0xb6
  4039b0:	or     edi,edi
  4039b2:	aaa    
  4039b3:	loopne 0x40398a
  4039b5:	(bad)  
  4039b6:	icebp  
  4039b7:	imul   ebp,esi,0x51
  4039ba:	cmp    ah,0x95
  4039bd:	sbb    DWORD PTR [ebx+0xd874248],ebx
  4039c3:	rcr    DWORD PTR [edi+0x57b3ced9],cl
  4039c9:	fild   WORD PTR [ecx-0x4e]
  4039cc:	aaa    
  4039cd:	cs mov bl,0x7b
  4039d0:	pop    ss
  4039d1:	test   DWORD PTR [ebx-0xa],0xd1541075
  4039d8:	mov    eax,ds:0x829e8534
  4039dd:	jmp    edx
  4039df:	popa   
  4039e0:	sti    
  4039e1:	xchg   ebx,eax
  4039e2:	mov    esi,0x8b71c691
  4039e7:	mov    ds:0xe9e98ecf,al
  4039ec:	dec    edx
  4039ed:	cmp    DWORD PTR [eax],0xffffffbf
  4039f0:	jo     0x40399c
  4039f2:	lahf   
  4039f3:	outs   dx,DWORD PTR ds:[esi]
  4039f4:	xchg   ecx,eax
  4039f5:	mov    ch,0xe4
  4039f7:	gs push edx
  4039f9:	and    al,bh
  4039fb:	ss push ss
  4039fd:	or     DWORD PTR [ebp-0x51],0x1367b24a
  403a04:	ja     0x403a82
  403a06:	es sti 
  403a08:	int    0xcf
  403a0a:	push   esi
  403a0b:	leave  
  403a0c:	loopne 0x4039ad
  403a0e:	shl    edi,0xd9
  403a11:	stc    
  403a12:	mov    ecx,0x7774ab95
  403a17:	outs   dx,BYTE PTR ds:[esi]
  403a18:	mov    ch,0x4e
  403a1a:	xchg   esp,eax
  403a1b:	and    eax,0x6c86f568
  403a20:	xor    eax,0x55d4a172
  403a25:	mov    dh,0xf6
  403a27:	jmp    DWORD PTR [edx]
  403a29:	jle    0x403a14
  403a2b:	or     DWORD PTR [edi],esi
  403a2d:	adc    al,0xbb
  403a2f:	adc    eax,0xeccd16c9
  403a34:	sti    
  403a35:	or     al,0xa2
  403a37:	inc    ecx
  403a38:	data16 (bad) 
  403a3a:	jns    0x403a52
  403a3c:	test   eax,0x826716da
  403a41:	cs retf 
  403a43:	les    esi,FWORD PTR [esi]
  403a45:	lock aas 
  403a47:	push   cs
  403a48:	jbe    0x403a9c
  403a4a:	leave  
  403a4b:	outs   dx,DWORD PTR ds:[esi]
  403a4c:	stos   DWORD PTR es:[edi],eax
  403a4d:	mov    edx,0xd882fb70
  403a52:	test   al,0x3d
  403a54:	ret    
  403a55:	aam    0x5f
  403a57:	xor    al,0xa3
  403a59:	add    bh,BYTE PTR [ebp-0x6296807b]
  403a5f:	in     eax,0x4a
  403a61:	or     eax,0xb0e8705
  403a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a67:	sahf   
  403a68:	push   es
  403a69:	and    ecx,DWORD PTR [eax+0x41]
  403a6c:	inc    ecx
  403a6d:	das    
  403a6e:	inc    edx
  403a6f:	cmp    eax,0xe1150ab1
  403a74:	sbb    al,0x59
  403a76:	ss call 0x68b1:0x5f9754d5
  403a7e:	sbb    al,0x4
  403a80:	push   ds
  403a81:	(bad)  
  403a82:	rcr    edx,cl
  403a84:	mov    bl,BYTE PTR [edi+0x4036310d]
  403a8a:	xchg   edi,eax
  403a8b:	mov    eax,ds:0x8704ae8
  403a90:	dec    ebx
  403a91:	mov    esi,0x1dc22848
  403a96:	leave  
  403a97:	rcl    DWORD PTR [ebx],cl
  403a99:	fcom   DWORD PTR [esp+ebp*8-0x33]
  403a9d:	popa   
  403a9e:	xor    eax,0xd2c91827
  403aa3:	hlt    
  403aa4:	shl    edx,cl
  403aa6:	call   0x54d94a38
  403aab:	jnp    0x403a70
  403aad:	adc    al,0x7
  403aaf:	pop    esi
  403ab0:	mov    edx,DWORD PTR [esi-0x23]
  403ab3:	xor    DWORD PTR [edi],ebx
  403ab5:	push   esp
  403ab6:	js     0x403a3a
  403ab8:	mov    ebx,0xbf399c95
  403abd:	mov    fs,WORD PTR [eax-0x25]
  403ac0:	lock mov edi,0x3bf30194
  403ac6:	mov    edi,edx
  403ac8:	imul   esi,DWORD PTR [eax+0x5e],0x3d821bd6
  403acf:	jne    0x403ae9
  403ad1:	sahf   
  403ad2:	leave  
  403ad3:	push   esi
  403ad4:	fwait
  403ad5:	sbb    cl,BYTE PTR [edi]
  403ad7:	iret   
  403ad8:	push   eax
  403ad9:	lods   eax,DWORD PTR ds:[esi]
  403ada:	test   eax,0x6528e1c7
  403adf:	xchg   esi,eax
  403ae0:	rol    BYTE PTR [eax],0x30
  403ae3:	mov    ecx,0x749b6df4
  403ae8:	jns    0x403b53
  403aea:	mov    dh,0x62
  403aec:	fwait
  403aed:	mov    esi,0xaaa4b18c
  403af2:	push   es
  403af3:	mov    dh,0xcd
  403af5:	stc    
  403af6:	mov    dh,0x1c
  403af8:	push   ds
  403af9:	push   esi
  403afa:	jns    0x403ae1
  403afc:	push   esi
  403afd:	data16 cmp BYTE PTR [edi-0x4a],dl
  403b01:	je     0x403ac0
  403b03:	in     al,0x11
  403b05:	fmul   QWORD PTR [esi+0x3b]
  403b08:	popf   
  403b09:	je     0x403b29
  403b0b:	shl    edi,1
  403b0d:	and    al,0xac
  403b0f:	push   ds
  403b10:	lds    edi,FWORD PTR [ecx+ebp*2+0x1fadc54e]
  403b17:	fdiv   QWORD PTR [eax+0x62217c59]
  403b1d:	jmp    0xc0f033d5
  403b22:	imul   ecx
  403b24:	push   cs
  403b25:	test   bh,ah
  403b27:	pop    edx
  403b28:	mov    esp,DWORD PTR ds:[eax-0x47]
  403b2c:	mov    dl,0x81
  403b2e:	mov    ds:0xe44f269c,al
  403b33:	dec    edi
  403b34:	je     0x403ba6
  403b36:	mov    ebx,0x83f0bbec
  403b3b:	add    al,0xf9
  403b3d:	inc    edi
  403b3e:	jne    0x403acc
  403b40:	adc    al,0x58
  403b42:	dec    ebx
  403b43:	add    eax,0xf29bf80f
  403b48:	mov    esp,DWORD PTR [ebx+0x10]
  403b4b:	mov    eax,ds:0x6a90ba2c
  403b50:	cmp    eax,0x5c1db300
  403b55:	adc    eax,0xf7bd7740
  403b5a:	icebp  
  403b5b:	enter  0xcfbf,0xe4
  403b5f:	xlat   BYTE PTR ds:[ebx]
  403b60:	cmp    BYTE PTR [ebx+ebp*1+0x2f6544ea],0xa9
  403b68:	(bad)  
  403b69:	mov    bl,0x3f
  403b6b:	icebp  
  403b6c:	aas    
  403b6d:	cmp    eax,0xaafbc301
  403b72:	sahf   
  403b73:	fs out 0x93,eax
  403b76:	xchg   esp,eax
  403b77:	in     al,dx
  403b78:	adc    bh,dh
  403b7a:	xor    DWORD PTR [edx+ebp*1-0xc],eax
  403b7e:	cmp    cl,bh
  403b80:	add    bh,BYTE PTR [ebx-0x33bd83f]
  403b86:	push   0xffffffc3
  403b88:	mov    ?,WORD PTR ds:0x37464a18
  403b8e:	jl     0x403bf0
  403b90:	sbb    DWORD PTR [eax+0x7d],0x31d40498
  403b97:	mov    edi,0x72bc3c40
  403b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b9d:	push   edx
  403b9e:	lock aam 0xf7
  403ba1:	imul   esi,DWORD PTR [ebx+edx*2],0xaed15f42
  403ba8:	sub    DWORD PTR [esi+ecx*8],ebp
  403bab:	nop
  403bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bad:	imul   BYTE PTR [edx]
  403baf:	jl     0x403c1e
  403bb1:	sbb    al,BYTE PTR [ebp+0x33]
  403bb4:	mov    DWORD PTR [esi-0x48],edx
  403bb7:	fidiv  DWORD PTR [edx]
  403bb9:	in     al,0xea
  403bbb:	cmp    DWORD PTR [edi],0x3ccd09e7
  403bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc2:	pop    edx
  403bc3:	test   BYTE PTR [ecx+ebx*4-0x7e],ah
  403bc7:	cmp    al,0x4c
  403bc9:	xchg   ebp,eax
  403bca:	clc    
  403bcb:	fadd   DWORD PTR [eax-0x7a0b89b2]
  403bd1:	jbe    0x403b57
  403bd3:	gs rcr ah,1
  403bd6:	or     BYTE PTR [ebx-0x707047ad],bh
  403bdc:	test   BYTE PTR [edx-0x7e],ch
  403bdf:	push   cs
  403be0:	int    0xa7
  403be2:	retf   
  403be3:	push   0x47d5192f
  403be8:	sar    DWORD PTR [ebp-0x18],0x5d
  403bec:	cmp    al,0x32
  403bef:	mov    bh,0x55
  403bf1:	jge    0x403bc5
  403bf3:	in     eax,dx
  403bf4:	mov    ch,0x68
  403bf6:	mov    cl,0xe9
  403bf8:	test   al,0x9b
  403bfa:	or     edx,DWORD PTR [eax+0x41088967]
  403c00:	jg     0x403c43
  403c02:	push   esp
  403c03:	cmp    al,0x9d
  403c05:	mov    bl,BYTE PTR [ecx+0x12]
  403c08:	dec    ecx
  403c09:	or     ecx,DWORD PTR [esi-0x44]
  403c0c:	push   edx
  403c0d:	aam    0xbc
  403c0f:	adc    eax,0xa8bc61a7
  403c14:	scas   al,BYTE PTR es:[edi]
  403c15:	outs   dx,BYTE PTR ds:[esi]
  403c16:	mov    al,ds:0xb0428086
  403c1b:	xor    ebp,DWORD PTR [ecx-0x5]
  403c1e:	jns    0x403bcc
  403c20:	repz cmp ebx,DWORD PTR [ebp-0x54]
  403c24:	and    esi,edi
  403c26:	mov    WORD PTR [ebx+ebp*2],ss
  403c29:	repz scas eax,DWORD PTR es:[edi]
  403c2b:	pop    ss
  403c2c:	imul   esi,esp,0xabfa89c5
  403c32:	sbb    DWORD PTR [esi+0x56],edx
  403c35:	jbe    0x403bef
  403c37:	cld    
  403c38:	icebp  
  403c39:	fwait
  403c3a:	in     eax,dx
  403c3b:	add    al,0x8e
  403c3d:	popf   
  403c3e:	and    eax,0x14c78fd7
  403c43:	test   cl,0x5
  403c46:	push   ebp
  403c47:	aaa    
  403c48:	dec    ecx
  403c49:	mov    al,ds:0xdfeea1c
  403c4e:	cmp    eax,0x869124b3
  403c53:	rcl    DWORD PTR [eax+ebp*8-0x2b],0x7b
  403c58:	(bad)  
  403c59:	rcr    BYTE PTR [ecx-0x62],cl
  403c5c:	pop    ss
  403c5d:	jmp    0x2aa1:0xbdfff74e
  403c64:	fldenv [ecx-0x35]
  403c67:	inc    esi
  403c68:	xor    al,BYTE PTR [ebx-0x35eecdcb]
  403c6e:	arpl   WORD PTR [ebp-0x43],cx
  403c71:	frstor [eax-0x403e739b]
  403c77:	rcr    ebx,0x3d
  403c7a:	sub    BYTE PTR [edi],dl
  403c7c:	xchg   edi,eax
  403c7d:	aad    0x5b
  403c7f:	and    al,0xd1
  403c81:	push   0x6a
  403c83:	sub    edi,DWORD PTR ss:[esi+0x21]
  403c87:	and    esi,DWORD PTR [edx-0x3fc25d1b]
  403c8d:	test   al,0xc6
  403c8f:	out    dx,al
  403c90:	out    dx,al
  403c91:	push   cs
  403c92:	push   cs
  403c93:	clc    
  403c94:	mov    ah,0x9d
  403c96:	shr    BYTE PTR [ebx+0x2c06cdef],1
  403c9c:	mov    WORD PTR [ecx],fs
  403c9e:	push   ds
  403c9f:	xchg   ebx,eax
  403ca0:	enter  0x5507,0x9b
  403ca4:	mov    al,0x55
  403ca6:	stc    
  403ca7:	pop    es
  403ca8:	xor    DWORD PTR [ecx+ebp*4],eax
  403cab:	mov    esi,0x6fb64f3e
  403cb0:	popa   
  403cb1:	aas    
  403cb2:	inc    eax
  403cb3:	gs and al,0x1b
  403cb6:	push   ss
  403cb7:	and    bh,BYTE PTR [eax-0x2f491e17]
  403cbd:	sti    
  403cbe:	in     al,0x3f
  403cc0:	xor    eax,0x8baa6911
  403cc5:	mov    cl,0x50
  403cc7:	dec    ebx
  403cc8:	jae    0x403c67
  403cca:	sbb    eax,0x43b9aaae
  403ccf:	adc    bl,0x3a
  403cd2:	mov    es,ebx
  403cd4:	aas    
  403cd5:	(bad)  
  403cd9:	sahf   
  403cda:	or     dx,bx
  403cdd:	call   0xc4eff84
  403ce2:	xlat   BYTE PTR ds:[ebx]
  403ce3:	test   BYTE PTR [edx-0x585ab67b],cl
  403ce9:	jne    0x403cdc
  403ceb:	mul    DWORD PTR [edi+0x2e437638]
  403cf1:	dec    esi
  403cf2:	jns    0x403cd7
  403cf4:	sub    DWORD PTR [eax+0x3286991],eax
  403cfa:	test   BYTE PTR [ecx-0x42],dl
  403cfd:	mov    ds:0xecf684cb,al
  403d02:	or     BYTE PTR [edx-0x3227f47e],0x5b
  403d09:	jg     0x403d66
  403d0b:	or     al,0xa
  403d0d:	adc    BYTE PTR [esi],ah
  403d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d10:	mov    dh,0x39
  403d12:	dec    esp
  403d13:	jmp    0x403c9d
  403d15:	mov    bh,0xa7
  403d17:	xchg   BYTE PTR [edi-0x45],cl
  403d1a:	sub    bh,BYTE PTR [eax]
  403d1c:	int3   
  403d1d:	cmp    al,0x0
  403d1f:	mov    eax,ds:0x4b8b048d
  403d24:	xor    esp,ebp
  403d26:	bound  edi,QWORD PTR [edi-0x5e]
  403d29:	and    al,0x29
  403d2b:	mul    esp
  403d2d:	popa   
  403d2e:	adc    eax,0x460ee553
  403d33:	repnz (bad) [ecx+0x6a]
  403d37:	scas   al,BYTE PTR es:[edi]
  403d38:	rcl    BYTE PTR [edi-0x6c],0x42
  403d3c:	je     0x403cc2
  403d3e:	xchg   ebp,eax
  403d3f:	inc    edi
  403d40:	bound  eax,QWORD PTR [ebx-0x11]
  403d43:	sar    BYTE PTR [edi],1
  403d45:	pushf  
  403d46:	(bad)  
  403d47:	call   0x98a65263
  403d4c:	adc    al,0x49
  403d4e:	push   edx
  403d4f:	xor    al,0x63
  403d51:	inc    ebp
  403d52:	add    BYTE PTR [ecx+0x1f7d46e0],al
  403d58:	faddp  st(6),st
  403d5a:	sbb    eax,0xa8ccce9c
  403d5f:	inc    ebx
  403d60:	icebp  
  403d61:	ins    DWORD PTR es:[edi],dx
  403d62:	les    ebx,FWORD PTR [ebp+0x18ee1199]
  403d68:	pop    es
  403d69:	push   edi
  403d6a:	shl    DWORD PTR [ecx-0x49],0xe
  403d6e:	cmp    bl,ch
  403d70:	out    0x66,al
  403d72:	clc    
  403d73:	mov    WORD PTR [ebp+0x61],ss
  403d76:	sub    bh,BYTE PTR [edx-0x7980666d]
  403d7c:	(bad)  
  403d7e:	js     0x403d7b
  403d80:	or     ch,cl
  403d82:	fistp  DWORD PTR [eax]
  403d84:	or     DWORD PTR [eax+0x5],eax
  403d87:	or     ecx,0x4c6e348f
  403d8d:	mov    DWORD PTR [esi],esi
  403d8f:	dec    esi
  403d90:	loope  0x403d58
  403d92:	inc    esi
  403d93:	jecxz  0x403ded
  403d95:	mov    DWORD PTR [ecx],esp
  403d97:	cmp    BYTE PTR [esp+ecx*8],bh
  403d9a:	into   
  403d9b:	pop    eax
  403d9c:	or     ecx,edi
  403d9e:	cmc    
  403d9f:	std    
  403da0:	push   edx
  403da1:	loope  0x403e22
  403da3:	add    bh,bh
  403da5:	jge    0x403d55
  403da7:	stos   BYTE PTR es:[edi],al
  403da8:	out    0x6e,eax
  403daa:	xor    eax,DWORD PTR [edi-0x2a]
  403dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dae:	jl     0x403df4
  403db0:	int3   
  403db1:	and    eax,0xb04331b
  403db6:	push   cs
  403db7:	mov    bh,0xf3
  403db9:	test   BYTE PTR [esi+0x41],cl
  403dbc:	inc    edx
  403dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbe:	sbb    esp,ebp
  403dc0:	es loope 0x403dda
  403dc3:	mov    ecx,0xe5379ea0
  403dc8:	mov    eax,0x7461b81a
  403dcd:	pop    ebp
  403dce:	shl    BYTE PTR [ebx-0xcadba34],1
  403dd4:	loopne 0x403dcd
  403dd6:	mov    eax,ds:0x5a98133e
  403ddb:	inc    esp
  403ddc:	cmp    DWORD PTR [ebx+edx*1+0x7a],eax
  403de0:	jae    0x403d9b
  403de2:	jle    0x403e31
  403de4:	pop    ds
  403de5:	shr    DWORD PTR [eax-0x25957fbe],1
  403deb:	xor    ah,BYTE PTR [edx-0x23]
  403dee:	(bad)  
  403def:	repnz add eax,0x4eabc17c
  403df5:	icebp  
  403df6:	outs   dx,DWORD PTR ds:[esi]
  403df7:	retf   
  403df8:	js     0x403dd1
  403dfa:	and    al,0x4f
  403dfc:	bound  esi,QWORD PTR [ebp+0x4]
  403dff:	pop    edi
  403e00:	rcl    BYTE PTR fs:[bx+di-0x9],1
  403e05:	adc    ah,dl
  403e07:	pop    ebx
  403e08:	sbb    DWORD PTR [esi+0x3f],0x60
  403e0c:	dec    ecx
  403e0d:	inc    edx
  403e0e:	add    ah,BYTE PTR [edi-0x23]
  403e11:	jo     0x403e90
  403e13:	(bad)  ds:0xbdbaff54
  403e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1a:	push   esp
  403e1b:	or     eax,0xdd878913
  403e20:	adc    al,0xbd
  403e22:	inc    ebx
  403e23:	mov    esp,0x40456ede
  403e28:	lods   eax,DWORD PTR ds:[esi]
  403e29:	mov    ebx,0xafafd27d
  403e2e:	mul    BYTE PTR ds:0xa07dfdd5
  403e34:	shl    BYTE PTR [ebp-0x78],cl
  403e37:	adc    DWORD PTR [edx-0x1d],eax
  403e3a:	and    al,0x53
  403e3c:	rol    BYTE PTR [edi],1
  403e3e:	stos   DWORD PTR es:[edi],eax
  403e3f:	into   
  403e40:	xchg   edi,eax
  403e41:	mov    bl,0x86
  403e43:	dec    ecx
  403e44:	pop    ecx
  403e45:	jnp    0x403df4
  403e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e48:	push   cs
  403e49:	push   0xe4838fa1
  403e4e:	jnp    0x403e90
  403e50:	push   ebx
  403e51:	out    0x96,al
  403e53:	es inc ebx
  403e55:	jge    0x403ed5
  403e57:	aad    0x72
  403e59:	jge    0x403e30
  403e5b:	fwait
  403e5c:	sub    BYTE PTR [eax],bl
  403e5e:	push   ebp
  403e5f:	mov    edx,0x9000b9c7
  403e64:	lock mov bl,bl
  403e67:	in     al,0x28
  403e69:	rcl    al,cl
  403e6b:	add    BYTE PTR [esi+0x4e79f511],dh
  403e71:	push   ebx
  403e72:	jns    0x403e63
  403e74:	stc    
  403e75:	pop    ds
  403e76:	inc    ebp
  403e77:	test   BYTE PTR [eax+ebp*2-0x4],bh
  403e7b:	mov    bl,0xa9
  403e7d:	and    ch,dl
  403e7f:	(bad)  
  403e80:	or     BYTE PTR [ecx-0x67],dl
  403e83:	xchg   ebx,eax
  403e84:	ror    DWORD PTR [esi+0x15ae5466],cl
  403e8a:	mov    esi,0x220c4593
  403e8f:	inc    edi
  403e90:	push   ss
  403e91:	std    
  403e92:	(bad)  
  403e93:	pop    ecx
  403e94:	inc    ebp
  403e95:	pop    ds
  403e96:	pop    esp
  403e97:	retf   0x639e
  403e9a:	pushf  
  403e9b:	ja     0x403ea0
  403e9d:	nop
  403e9e:	pop    ebx
  403e9f:	and    ebp,DWORD PTR [ebx-0x74]
  403ea2:	ror    DWORD PTR [eax+0x6b],0x7a
  403ea6:	(bad)  [edi-0x67332e9c]
  403eac:	mov    eax,0x20bbce4b
  403eb1:	pop    ss
  403eb2:	fwait
  403eb3:	jp     0x403e9b
  403eb5:	jae    0x403e7a
  403eb7:	push   es
  403eb8:	cmc    
  403eb9:	dec    edx
  403eba:	pusha  
  403ebb:	mov    al,ds:0x9e11b291
  403ec0:	outs   dx,BYTE PTR ds:[esi]
  403ec1:	mov    esi,0xb6386982
  403ec6:	bound  ecx,QWORD PTR [ebx+ebx*4]
  403ec9:	inc    ebp
  403eca:	xor    BYTE PTR [ebx-0x66],bh
  403ecd:	push   es
  403ece:	mov    ?,ebp
  403ed0:	mov    al,ch
  403ed2:	bound  ebx,QWORD PTR [edx-0x14]
  403ed5:	cmp    ebx,DWORD PTR [edx-0x4d]
  403ed8:	pop    ss
  403ed9:	mov    edi,0xe36dd23
  403ede:	inc    esi
  403edf:	pop    esp
  403ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee1:	pop    edx
  403ee2:	or     esi,edx
  403ee4:	in     eax,0xa6
  403ee6:	add    ch,ah
  403ee8:	sub    dl,bl
  403eea:	cld    
  403eeb:	pop    ebx
  403eec:	inc    eax
  403eed:	lods   al,BYTE PTR ds:[esi]
  403eee:	mov    ecx,0x14dc178
  403ef3:	push   ss
  403ef4:	stc    
  403ef5:	adc    BYTE PTR [ebx+0x5758c072],0x35
  403efc:	shl    BYTE PTR [esi-0x32],1
  403eff:	jmp    0xc3e:0xf4627aa5
  403f06:	add    BYTE PTR [eax+esi*1],dl
  403f09:	or     ecx,0x52af9599
  403f0f:	jne    0x403f19
  403f11:	cli    
  403f12:	fisubr WORD PTR [ebp+0x2e]
  403f15:	pop    ebx
  403f16:	setns  BYTE PTR ds:[ecx]
  403f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1b:	bound  esi,QWORD PTR [ebp-0x40]
  403f1e:	and    al,dh
  403f20:	call   0x78b7d54
  403f25:	lds    edx,FWORD PTR [ecx]
  403f27:	xor    ah,BYTE PTR [ebx-0x7a]
  403f2a:	mov    al,ds:0x4c3cd936
  403f2f:	fwait
  403f30:	mov    sp,WORD PTR [ecx+0x17b60f60]
  403f37:	in     eax,dx
  403f38:	xlat   BYTE PTR ds:[ebx]
  403f39:	and    al,0x22
  403f3b:	lods   eax,DWORD PTR ds:[esi]
  403f3c:	popa   
  403f3d:	sub    al,0xd0
  403f3f:	je     0x403efb
  403f41:	mov    bh,BYTE PTR [ecx+0x12]
  403f44:	sub    DWORD PTR [esi-0x720246c4],esi
  403f4a:	adc    al,0x57
  403f4c:	add    ebp,esi
  403f4e:	scas   al,BYTE PTR es:[edi]
  403f4f:	repz ret 0xad00
  403f53:	cld    
  403f54:	fbld   TBYTE PTR [edx-0x25]
  403f57:	xchg   ebx,eax
  403f58:	popf   
  403f59:	push   esp
  403f5a:	mov    cl,0xad
  403f5c:	push   edi
  403f5d:	lahf   
  403f5e:	outs   dx,DWORD PTR ds:[esi]
  403f5f:	sub    DWORD PTR [ecx-0x60],edi
  403f62:	stc    
  403f63:	test   BYTE PTR [edx-0x40af86c7],0xd8
  403f6a:	mov    al,ds:0xd8ece024
  403f6f:	stos   BYTE PTR es:[edi],al
  403f70:	and    esp,DWORD PTR [esi]
  403f72:	inc    ebp
  403f73:	dec    ecx
  403f74:	jo     0x403fda
  403f76:	stos   DWORD PTR es:[edi],eax
  403f77:	out    0x9b,eax
  403f79:	loopne 0x403fe0
  403f7b:	ss ds jne 0x403fb2
  403f7f:	sti    
  403f80:	lods   al,BYTE PTR ds:[esi]
  403f81:	mov    edi,0xa6407be9
  403f86:	lahf   
  403f87:	cdq    
  403f88:	jns    0x404002
  403f8a:	sub    BYTE PTR [edi],0x8d
  403f8d:	jle    0x403f89
  403f8f:	aas    
  403f90:	rol    bl,cl
  403f92:	es add al,0xd7
  403f95:	mov    cl,0x8e
  403f97:	stc    
  403f98:	mov    DWORD PTR [ebx-0x31414765],0x3298e4f
  403fa2:	scas   eax,DWORD PTR es:[edi]
  403fa3:	les    eax,FWORD PTR [edx-0x1c]
  403fa6:	sub    cl,BYTE PTR [ebx+edx*1-0xb]
  403faa:	lahf   
  403fab:	iret   
  403fac:	xchg   edx,eax
  403fad:	mov    al,0x3c
  403faf:	or     ebx,0xffffffd7
  403fb2:	dec    ebx
  403fb3:	xor    al,0xc3
  403fb5:	and    DWORD PTR [eax],ebx
  403fb7:	push   cs
  403fb8:	jbe    0x40400b
  403fba:	push   0xdba8bd69
  403fbf:	add    ebp,DWORD PTR [ecx-0x4872df2e]
  403fc5:	cwde   
  403fc6:	jge    0x403f6e
  403fc8:	mov    esp,0xf747604b
  403fcd:	test   DWORD PTR [ebp+0x6d3dc9bf],eax
  403fd3:	addr16 jg 0x403fad
  403fd6:	rcr    bh,0x69
  403fd9:	sbb    ah,BYTE PTR [ecx+ebp*1-0x237722ff]
  403fe0:	or     eax,0xcc9e756a
  403fe5:	pop    esp
  403fe6:	xor    BYTE PTR [eax],dl
  403fe8:	sbb    al,0xce
  403fea:	arpl   WORD PTR [esi],si
  403fec:	je     0x403fcb
  403fee:	hlt    
  403fef:	iret   
  403ff0:	inc    ebp
  403ff1:	icebp  
  403ff2:	aas    
  403ff3:	inc    edi
  403ff4:	jo     0x404051
  403ff6:	sbb    BYTE PTR [eax+0x37a49683],al
  403ffc:	scas   al,BYTE PTR es:[edi]
  403ffd:	ins    BYTE PTR es:[edi],dx
  403ffe:	mov    bl,0x0
  404000:	into   
  404001:	jge    0x404071
  404003:	(bad)  
  404004:	aad    0x78
  404006:	div    BYTE PTR [ebp-0x4e]
  404009:	add    al,0x4e
  40400b:	jge    0x404006
  40400d:	adc    ch,BYTE PTR [ecx+0x549569dd]
  404013:	sub    BYTE PTR [edi+eax*8-0x6b],bl
  404017:	jns    0x403fb6
  404019:	xor    esp,DWORD PTR [ebx+ecx*2]
  40401c:	mov    esi,0x76fb93d3
  404021:	mov    ebx,0x18da949f
  404026:	mov    ebp,0x22a10bb9
  40402b:	ficom  WORD PTR [edi+0x6cff37da]
  404031:	ret    
  404032:	add    al,0x6f
  404034:	out    0x9,eax
  404036:	sahf   
  404037:	arpl   WORD PTR [esi],sp
  404039:	push   edi
  40403a:	ins    BYTE PTR es:[edi],dx
  40403b:	add    al,0x4b
  40403d:	xlat   BYTE PTR ds:[ebx]
  40403e:	mov    ds:0x695ebe54,eax
  404043:	pop    ecx
  404044:	xchg   BYTE PTR [esi-0x26c3b31c],dl
  40404a:	push   cs
  40404b:	es xor eax,0x4550464b
  404051:	ficom  WORD PTR [edi+0xcb7648b]
  404057:	push   edi
  404058:	mov    bl,0x49
  40405a:	pop    eax
  40405b:	pop    esp
  40405c:	dec    edx
  40405d:	inc    edx
  40405e:	sbb    BYTE PTR [eax+0x40],0x4e
  404062:	cli    
  404063:	mov    ds:0xf44fb018,eax
  404068:	cmp    al,0x53
  40406a:	add    ebp,ecx
  40406c:	mov    ecx,0x212caf5e
  404071:	test   eax,0xd13f247
  404076:	pop    eax
  404077:	pop    ds
  404078:	test   eax,0x60bd2da8
  40407d:	sbb    al,0x28
  40407f:	adc    al,0x2d
  404081:	sub    DWORD PTR [edx+0x51f60378],edi
  404087:	push   ebx
  404088:	out    dx,al
  404089:	pop    eax
  40408a:	(bad)  
  40408c:	or     DWORD PTR [ebp-0x3e5910d3],0x1efda0a4
  404096:	jne    0x404115
  404098:	je     0x404025
  40409a:	inc    ebp
  40409b:	scas   al,BYTE PTR es:[edi]
  40409c:	inc    esi
  40409d:	and    al,0xde
  40409f:	ins    BYTE PTR es:[edi],dx
  4040a0:	sub    BYTE PTR [edx-0x209afa7b],bh
  4040a6:	ins    BYTE PTR es:[edi],dx
  4040a7:	dec    edx
  4040a8:	and    DWORD PTR [ebx+esi*4],edx
  4040ab:	jmp    0xfbae:0xcf75592d
  4040b2:	dec    ecx
  4040b3:	mov    edx,0x4792075c
  4040b8:	test   BYTE PTR [edi+0x1d],0xf7
  4040bc:	add    ebx,DWORD PTR [edi]
  4040be:	pop    edi
  4040bf:	and    eax,esp
  4040c1:	hlt    
  4040c2:	imul   esi,DWORD PTR [edx+ebx*1-0x4db74922],0xfe7d5a90
  4040cd:	loopne 0x404106
  4040cf:	lods   eax,DWORD PTR ds:[esi]
  4040d0:	(bad)  
  4040d1:	cli    
  4040d2:	aad    0x81
  4040d4:	mov    al,ds:0xfab8e67d
  4040d9:	je     0x40409e
  4040db:	push   esp
  4040dc:	sahf   
  4040dd:	std    
  4040de:	pop    ebx
  4040df:	cmp    eax,0x124cc390
  4040e4:	out    dx,al
  4040e5:	inc    esi
  4040e6:	mov    al,0x21
  4040e8:	addr16 xor al,0xc0
  4040eb:	mov    edx,0x33220bdc
  4040f0:	jmp    0xbf1d:0xbc2c541d
  4040f7:	js     0x4040de
  4040f9:	mov    bh,0xb5
  4040fb:	ins    BYTE PTR es:[edi],dx
  4040fc:	sar    DWORD PTR [eax-0x41],0x40
  404100:	mov    dl,0x14
  404102:	adc    eax,0xfc278173
  404107:	loopne 0x4040b3
  404109:	iret   
  40410a:	enter  0xdde6,0x6e
  40410e:	push   eax
  40410f:	push   cs
  404110:	fidiv  DWORD PTR [ecx-0x6e]
  404113:	in     eax,dx
  404114:	push   esi
  404115:	iret   
  404116:	sub    esi,esi
  404118:	icebp  
  404119:	xor    ah,ah
  40411b:	xcrypt-ctr (bad)
  40411c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411d:	call   0x6f:0xf37845f5
  404124:	cli    
  404125:	(bad)  
  404126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404127:	iret   
  404128:	sti    
  404129:	inc    edi
  40412a:	frstor [ebp+0x5eeb40de]
  404130:	xor    al,0x2b
  404132:	call   FWORD PTR [ecx-0x877fcfc]
  404138:	in     al,0x61
  40413a:	inc    eax
  40413b:	sub    dl,0xcf
  40413e:	jbe    0x4041b5
  404140:	fcomp  QWORD PTR [esi-0x733af0f2]
  404146:	mov    cs,WORD PTR [edx]
  404148:	sub    dh,BYTE PTR [edi]
  40414a:	push   ebp
  40414b:	pop    ebx
  40414c:	in     eax,dx
  40414d:	cmp    BYTE PTR [ebx-0x1a],bh
  404150:	or     al,0xc2
  404152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404153:	int3   
  404154:	or     al,0xc1
  404156:	fimul  WORD PTR [ecx+0x3e1fe3d0]
  40415c:	lock stos BYTE PTR es:[edi],al
  40415e:	out    dx,eax
  40415f:	clc    
  404160:	jmp    0xc1f2:0xc0b6aa34
  404167:	and    al,0x56
  404169:	xchg   esp,eax
  40416a:	ficomp WORD PTR [ebx]
  40416c:	pop    esp
  40416d:	push   ebp
  40416e:	call   0xa796:0xb483ebc3
  404175:	shl    BYTE PTR [eax],1
  404177:	jnp    0x404112
  404179:	dec    edx
  40417a:	inc    ebp
  40417b:	xchg   DWORD PTR [esi+0x1d4c859f],esp
  404181:	mov    cl,0xeb
  404183:	test   DWORD PTR [edx+0x5eb945c7],0x1d43ec7d
  40418d:	pop    ecx
  40418e:	adc    DWORD PTR [esi-0x3d],0xffffffd9
  404192:	sub    eax,0x44fd9a8d
  404197:	popf   
  404198:	mov    ebp,0x65648d28
  40419d:	sub    DWORD PTR [edx-0x5],ebx
  4041a0:	ror    DWORD PTR [ecx],cl
  4041a2:	test   eax,0xec6fb8c9
  4041a7:	pushw  ds
  4041a9:	not    BYTE PTR [ebp-0x45708de5]
  4041af:	loopne 0x40416c
  4041b1:	mov    cl,0x58
  4041b3:	out    0xc3,al
  4041b5:	stc    
  4041b6:	stos   BYTE PTR es:[edi],al
  4041b7:	cmp    ebx,esi
  4041b9:	jp     0x4041f9
  4041bb:	xor    BYTE PTR [ecx],dh
  4041bd:	and    eax,DWORD PTR [ebp-0x5b]
  4041c0:	add    eax,0x4c8af34d
  4041c5:	adc    bh,cl
  4041c7:	adc    esi,DWORD PTR [ebx+0x2c]
  4041ca:	push   ecx
  4041cb:	ja     0x4041eb
  4041cd:	int3   
  4041ce:	xchg   ah,bl
  4041d0:	cmc    
  4041d1:	inc    esp
  4041d2:	nop
  4041d3:	fs int 0x10
  4041d6:	cmovns ebx,DWORD PTR [ebp+0x60547998]
  4041dd:	stos   BYTE PTR es:[edi],al
  4041de:	sub    cl,BYTE PTR [edi-0x4a]
  4041e1:	jae    0x404232
  4041e3:	cld    
  4041e4:	repz dec esi
  4041e6:	pop    ebp
  4041e7:	call   0xd44a:0xfd8a3a4b
  4041ee:	ins    DWORD PTR es:[edi],dx
  4041ef:	loop   0x40424d
  4041f1:	and    ebp,edx
  4041f3:	dec    eax
  4041f4:	test   eax,0x7d0eb32c
  4041f9:	mov    edi,0x50710b9c
  4041fe:	out    0x9c,al
  404200:	(bad)  
  404201:	shl    BYTE PTR [esi-0x4afd419],1
  404207:	in     al,0x62
  404209:	push   ds
  40420a:	pop    esp
  40420b:	sub    bh,BYTE PTR [edx-0x7948a729]
  404211:	or     eax,0xffd84eac
  404216:	xchg   ebx,eax
  404217:	jmp    0x8140a42
  40421c:	jge    0x40427d
  40421e:	out    dx,al
  40421f:	loop   0x4041a1
  404221:	mov    al,ds:0x64383425
  404226:	xor    BYTE PTR [eax-0x14aef926],al
  40422c:	test   eax,0x76672a67
  404231:	jle    0x4041b3
  404233:	adc    ch,bl
  404235:	lahf   
  404236:	mov    DWORD PTR [eax+0x38ab41c7],esi
  40423c:	sbb    DWORD PTR fs:[ebp-0x57],ecx
  404240:	add    eax,0x6bde6e3c
  404245:	jne    0x4042a6
  404247:	arpl   sp,di
  404249:	push   es
  40424a:	int3   
  40424b:	sbb    DWORD PTR [eax-0x21],esi
  40424e:	gs xchg esp,eax
  404250:	lods   eax,DWORD PTR ds:[esi]
  404251:	clc    
  404252:	loopne 0x4042c6
  404254:	fidivr DWORD PTR [eax+0x19]
  404257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404258:	loop   0x4042c6
  40425a:	scas   eax,DWORD PTR es:[edi]
  40425b:	pop    ss
  40425c:	mov    ebp,eax
  40425e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40425f:	fcomip st,st(3)
  404261:	or     BYTE PTR [edx-0xf],al
  404264:	and    ah,BYTE PTR [ebx-0x21]
  404267:	and    BYTE PTR [eax-0x9],al
  40426a:	nop
  40426b:	sbb    edi,DWORD PTR [eax]
  40426d:	xor    BYTE PTR [esi+0x3d],ch
  404270:	fwait
  404271:	jbe    0x404286
  404273:	pop    edx
  404274:	push   ds
  404275:	retf   
  404276:	push   0x76
  404278:	imul   BYTE PTR [eax+0x20]
  40427b:	test   eax,0xee38c0f2
  404280:	sub    eax,0x2deac0e4
  404285:	fnstenv [eax]
  404287:	lds    ebx,FWORD PTR [edi]
  404289:	sub    bl,BYTE PTR ds:0x65599144
  40428f:	xor    cl,dl
  404291:	fwait
  404292:	stos   BYTE PTR es:[edi],al
  404293:	outs   dx,BYTE PTR ds:[esi]
  404294:	cwde   
  404295:	cwde   
  404296:	leave  
  404297:	add    DWORD PTR [ebx+ebp*2+0x6],eax
  40429b:	call   0x9a814789
  4042a0:	fidivr WORD PTR [ebx-0x2d]
  4042a3:	(bad)  
  4042a4:	lock jne 0x404286
  4042a7:	add    eax,0x9ef05e98
  4042ac:	adc    esi,DWORD PTR [eax]
  4042ae:	pop    DWORD PTR [edx]
  4042b0:	sub    ebp,0xffffffde
  4042b3:	out    dx,eax
  4042b4:	ficom  DWORD PTR [edi+0x16de2858]
  4042ba:	mov    bl,0x7d
  4042bc:	test   eax,0x2a304ddf
  4042c1:	xchg   edx,esp
  4042c3:	pop    ds
  4042c4:	mov    eax,0x4158a18d
  4042c9:	lahf   
  4042ca:	or     eax,0x1a80817f
  4042cf:	call   0x7bdb4e91
  4042d4:	shl    DWORD PTR [eax-0x1e],cl
  4042d7:	xchg   edx,eax
  4042d8:	out    0x8d,eax
  4042da:	sti    
  4042db:	push   esi
  4042dc:	xchg   esp,eax
  4042dd:	adc    BYTE PTR [ecx],0xdb
  4042e0:	add    al,0xbf
  4042e2:	mov    edi,0xc8ae706c
  4042e7:	fwait
  4042e8:	mov    edi,0x3f17742c
  4042ed:	test   BYTE PTR [ebp+ecx*1+0x6d],dl
  4042f1:	div    DWORD PTR [edx]
  4042f3:	pop    edx
  4042f4:	enter  0x5a48,0x26
  4042f8:	mov    DWORD PTR [ecx-0x71570b13],edx
  4042fe:	cmp    al,0x9b
  404300:	push   0xffffffe9
  404302:	mov    eax,DWORD PTR [eax]
  404304:	test   al,0xb6
  404306:	ins    BYTE PTR es:[edi],dx
  404307:	fidiv  DWORD PTR [ecx-0x98ab0a8]
  40430d:	xchg   edx,eax
  40430e:	(bad)  [esi-0x79]
  404311:	loopne 0x404365
  404313:	loopne 0x4042eb
  404315:	inc    esi
  404316:	or     eax,0xbca4484d
  40431b:	loop   0x404351
  40431d:	(bad)  
  40431e:	add    cl,BYTE PTR [edx+0x6836c304]
  404324:	lds    ecx,FWORD PTR [edx-0xf24b141]
  40432a:	mov    edx,0xaea9a408
  40432f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404330:	mov    BYTE PTR [ebp-0xf],0x94
  404334:	pop    ecx
  404335:	mov    ah,0x25
  404337:	fimul  WORD PTR [edx+edi*4-0x32]
  40433b:	or     eax,0xf4d6ee59
  404340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404341:	adc    al,0x1c
  404343:	jbe    0x404363
  404345:	ds xchg edi,eax
  404347:	loop   0x4042d0
  404349:	fwait
  40434a:	push   es
  40434b:	arpl   WORD PTR [edx-0x26704148],bp
  404351:	(bad)  
  404352:	pop    es
  404353:	or     dl,BYTE PTR [edi+0x53]
  404356:	or     bh,BYTE PTR [ecx+0x3ca39ea7]
  40435c:	jno    0x4043be
  40435e:	stc    
  40435f:	and    al,0x8
  404361:	cli    
  404362:	test   eax,0x6775c1b7
  404367:	sahf   
  404368:	adc    ecx,DWORD PTR ss:[ecx+0x73]
  40436c:	mov    edx,0x858eace2
  404371:	cld    
  404372:	ja     0x404356
  404374:	data16 adc bh,0xa7
  404378:	and    eax,0x7d4fb805
  40437d:	pusha  
  40437e:	aaa    
  40437f:	daa    
  404380:	and    eax,0xe1444873
  404385:	mov    ah,0x43
  404387:	fcmovbe st,st(0)
  404389:	pop    esi
  40438a:	div    BYTE PTR [edi-0x19]
  40438d:	jns    0x40438e
  40438f:	test   edx,0x1afe5c8a
  404395:	push   0xae29477
  40439a:	mov    cl,0xba
  40439c:	pop    es
  40439d:	jl     0x4043bf
  40439f:	arpl   WORD PTR [edx],bp
  4043a1:	fild   DWORD PTR [eax+0x3645674e]
  4043a7:	jmp    0x4043ae
  4043a9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ac:	xchg   ecx,eax
  4043ad:	stos   DWORD PTR es:[edi],eax
  4043ae:	mov    ebx,0x8a004910
  4043b3:	mov    edi,0x6ae028d4
  4043b8:	inc    edx
  4043b9:	inc    ebp
  4043ba:	mov    eax,ds:0xaefe93c6
  4043bf:	ja     0x40442d
  4043c1:	push   es
  4043c2:	cmp    al,0x3d
  4043c4:	mov    ebx,0x9eba9162
  4043c9:	xchg   ebp,eax
  4043ca:	dec    esp
  4043cb:	push   esp
  4043cc:	fcom   QWORD PTR [edi]
  4043ce:	lods   al,BYTE PTR ds:[esi]
  4043cf:	retf   0x7e40
  4043d2:	xchg   edi,eax
  4043d3:	or     ebx,edx
  4043d5:	mov    bl,0x89
  4043d7:	(bad)  
  4043d8:	repnz test eax,0xe7fe892b
  4043de:	jmp    0x8d1:0x5a8ff987
  4043e5:	dec    esi
  4043e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e7:	xchg   edx,eax
  4043e8:	mov    bl,0xad
  4043ea:	mov    fs:0x3c6bef44,eax
  4043f0:	(bad)  
  4043f1:	outs   dx,DWORD PTR ds:[esi]
  4043f2:	xor    dl,BYTE PTR [ebx-0x131c3fd0]
  4043f8:	data16 lahf 
  4043fa:	fucom  st(4)
  4043fc:	add    edi,DWORD PTR [esi]
  4043fe:	or     eax,0xd137935c
  404403:	jle    0x40439f
  404405:	mov    ah,0xa9
  404407:	xchg   edi,eax
  404408:	jns    0x4043bd
  40440a:	adc    DWORD PTR [ebx+ebp*1+0x6],ebx
  40440e:	or     edi,edx
  404410:	jg     0x40441a
  404412:	dec    ecx
  404413:	andps  xmm2,XMMWORD PTR [esi-0x57]
  404417:	add    esi,edx
  404419:	jg     0x40446a
  40441b:	mov    bl,al
  40441d:	mov    ss,WORD PTR [esi+0x5cb7f5ac]
  404423:	or     eax,0x1393bca9
  404428:	jo     0x4043f7
  40442a:	aas    
  40442b:	add    bh,BYTE PTR [ecx+0x4e152aad]
  404431:	std    
  404432:	rcl    DWORD PTR [edx-0x1a52cdc3],1
  404438:	adc    esi,DWORD PTR [esi-0x39]
  40443b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40443c:	dec    ebx
  40443d:	add    al,0xe9
  40443f:	leave  
  404440:	js     0x4043fe
  404442:	loope  0x4044a6
  404444:	dec    ecx
  404445:	mov    eax,0x7665ade0
  40444a:	fistp  QWORD PTR [ebp+0xe]
  40444d:	pop    esp
  40444e:	ret    0x19c6
  404451:	inc    edx
  404452:	call   0x6d718b72
  404457:	lods   eax,DWORD PTR ds:[esi]
  404458:	adc    DWORD PTR [eax+0x7f],ebp
  40445b:	aas    
  40445c:	test   DWORD PTR [edi+0x2a8faf88],ebx
  404462:	inc    ebx
  404463:	xlat   BYTE PTR ds:[ebx]
  404464:	push   edi
  404465:	push   ecx
  404466:	push   eax
  404467:	sbb    DWORD PTR [ecx+0x12],ebp
  40446a:	ret    
  40446b:	jmp    0x77a5:0x9b5aaf5a
  404472:	call   0x69c8e21e
  404477:	adc    eax,esp
  404479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40447a:	jl     0x4044fb
  40447c:	dec    esi
  40447d:	add    DWORD PTR [esi],ebp
  40447f:	ror    BYTE PTR [eax],1
  404481:	addr16 addr16 jl 0x404488
  404485:	lahf   
  404486:	xchg   ebp,eax
  404487:	jmp    0xbcbd:0xfa6a1145
  40448e:	xchg   ecx,eax
  40448f:	inc    edi
  404490:	and    al,0x8b
  404492:	add    bl,BYTE PTR [ecx-0x6aa20bd7]
  404498:	push   eax
  404499:	xchg   ebx,eax
  40449a:	add    BYTE PTR ds:0x23655270,0xee
  4044a1:	das    
  4044a2:	dec    ebp
  4044a3:	or     eax,0x78159645
  4044a8:	fimul  WORD PTR [eax]
  4044aa:	ret    0x6329
  4044ad:	mov    bh,0x7
  4044af:	imul   ebp,DWORD PTR [edx],0xce485029
  4044b5:	jmp    0x4044bb
  4044b7:	dec    ebp
  4044b8:	lock call DWORD PTR [eax+eiz*8+0x79]
  4044bd:	shl    BYTE PTR [ebx-0x76],0x8c
  4044c1:	std    
  4044c2:	pop    ss
  4044c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c4:	test   BYTE PTR [esi],dh
  4044c6:	xchg   DWORD PTR [edi-0x1e],edx
  4044c9:	out    0xfb,al
  4044cb:	sbb    bl,dh
  4044cd:	test   BYTE PTR [edi-0x4f],0xf
  4044d1:	dec    eax
  4044d2:	xor    DWORD PTR [ebx+edx*4],esi
  4044d5:	mov    ds:0xbda54612,eax
  4044da:	repz popf 
  4044dc:	sub    al,0x56
  4044de:	push   ecx
  4044df:	mov    eax,0x6ecc18d2
  4044e4:	jp     0x404477
  4044e6:	jne    0x404493
  4044e8:	data16 int 0xb5
  4044eb:	mov    DWORD PTR ds:0x906d3442,0xb8b2b46c
  4044f5:	(bad)  
  4044f6:	and    eax,0x2d3d7fb4
  4044fb:	sbb    ecx,DWORD PTR [ebp-0x1044a4e2]
  404501:	cwde   
  404502:	lea    ebp,[ebx+0x22]
  404505:	adc    cl,cl
  404507:	les    edx,FWORD PTR [ecx]
  404509:	add    BYTE PTR [eax],ch
  40450b:	add    ch,ch
  40450d:	mov    edi,0x6c99b4d3
  404512:	mov    esi,DWORD PTR [edx+0x42d9df73]
  404518:	sahf   
  404519:	ss and DWORD PTR gs:[eax],edx
  40451d:	jnp    0x404577
  40451f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404520:	mov    ebp,DWORD PTR [ebx-0x5d34c27c]
  404526:	dec    ebx
  404527:	stos   BYTE PTR es:[edi],al
  404528:	out    0x48,al
  40452a:	popf   
  40452b:	ret    
  40452c:	mov    ds:0x7226710b,al
  404531:	jmp    0x8e891704
  404536:	adc    BYTE PTR [edi-0x62],al
  404539:	mov    dh,0x59
  40453b:	push   eax
  40453c:	mov    esp,0x7b569f9f
  404541:	not    BYTE PTR [esp+eax*1-0x4edf5c3]
  404548:	push   es
  404549:	loopne 0x40457e
  40454b:	xchg   BYTE PTR [eax-0x3a],ch
  40454e:	sbb    al,0xc
  404550:	test   BYTE PTR [esi+0x4d],ah
  404553:	or     bl,0xa7
  404556:	sti    
  404557:	xchg   esi,eax
  404558:	xor    al,0x25
  40455a:	pop    ss
  40455b:	mov    al,ds:0xd6f11329
  404560:	and    ah,ah
  404562:	xor    ebx,DWORD PTR [eax-0x356665ea]
  404568:	xor    al,0xf
  40456a:	aam    0xac
  40456c:	call   0x5534:0x67c9b227
  404573:	out    dx,eax
  404574:	jle    0x404579
  404576:	mov    edi,0xb3d1c88d
  40457b:	add    DWORD PTR [ecx+0x7835f1d],0x53
  404582:	mov    ecx,0x626d476a
  404587:	mov    dh,0x50
  404589:	repnz cli 
  40458b:	ficomp WORD PTR [edx-0x421e126]
  404591:	mov    al,0xf1
  404593:	(bad)  
  404594:	push   ecx
  404595:	scas   eax,DWORD PTR es:[edi]
  404596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404597:	cmc    
  404598:	sbb    eax,0xceaf61f4
  40459d:	add    al,0xab
  40459f:	jo     0x4045d3
  4045a1:	add    DWORD PTR [ecx+0x2],0x1f1ade12
  4045a8:	and    DWORD PTR [esi+0x1a],0xe8f1d7f7
  4045af:	cmp    BYTE PTR [edi],0x7
  4045b2:	aas    
  4045b3:	adc    BYTE PTR [ebx-0x5bbabe45],0x0
  4045ba:	pop    edx
  4045bb:	adc    dh,BYTE PTR [ecx+edx*8+0x7f5744c9]
  4045c2:	jmp    0xa7ac96f0
  4045c7:	mov    esp,0x37ac6354
  4045cc:	cmc    
  4045cd:	int3   
  4045ce:	add    bl,ah
  4045d0:	push   es
  4045d1:	pop    ebp
  4045d2:	sar    BYTE PTR ds:0xe7131a24,0x2f
  4045d9:	inc    ebp
  4045da:	test   BYTE PTR [edi-0x367f7b85],ch
  4045e0:	mov    BYTE PTR [ecx-0x697863bd],cl
  4045e6:	cwde   
  4045e7:	inc    edi
  4045e8:	(bad)  
  4045ea:	and    bh,BYTE PTR [esi+ebx*4]
  4045ed:	add    dl,ch
  4045ef:	fmul   QWORD PTR [esi-0x86edade]
  4045f5:	ret    
  4045f6:	or     DWORD PTR es:[ecx+edi*8-0x75a0dd7],edx
  4045fe:	das    
  4045ff:	pop    edx
  404600:	push   ebp
  404601:	add    DWORD PTR [ebp+0x7952de03],esp
  404607:	cwde   
  404608:	jne    0x404648
  40460a:	retf   0x81fc
  40460d:	imul   esp,DWORD PTR [ecx],0xffffffd1
  404610:	sbb    al,0x19
  404612:	jnp    0x404665
  404614:	nop
  404615:	fdivp  st(0),st
  404617:	into   
  404618:	and    BYTE PTR [ebx],dh
  40461a:	loopne 0x40464d
  40461c:	(bad)  
  40461d:	cld    
  40461e:	scas   eax,DWORD PTR es:[edi]
  40461f:	and    eax,0x16df2d0d
  404624:	push   ebp
  404625:	arpl   WORD PTR [ebp+0x2b],sp
  404628:	rcr    DWORD PTR [ebx+0x78],1
  40462b:	push   esp
  40462c:	sbb    al,BYTE PTR [edi+ebx*8+0x562f0f4e]
  404633:	xor    DWORD PTR [ebp-0x68],0xb9108172
  40463a:	dec    ebp
  40463b:	iret   
  40463c:	clc    
  40463d:	mov    ebp,DWORD PTR [ebx-0x7bf19780]
  404643:	adc    eax,esi
  404645:	mov    ebp,0xc0665bde
  40464a:	push   ss
  40464b:	out    dx,al
  40464c:	fisttp QWORD PTR [eax+0x57]
  40464f:	sub    BYTE PTR [edi],cl
  404651:	and    BYTE PTR [ebx+0x30],bh
  404654:	mov    bh,0x3
  404656:	out    0x7a,eax
  404658:	in     eax,0x89
  40465a:	dec    esi
  40465b:	icebp  
  40465c:	int    0x5f
  40465e:	test   bp,dx
  404661:	push   edx
  404662:	cwde   
  404663:	mov    esp,0x1e1a7b94
  404668:	jp     0x4046d6
  40466a:	out    0x92,eax
  40466c:	xor    bh,BYTE PTR ds:[ecx-0x77]
  404670:	test   al,0xcb
  404672:	das    
  404673:	dec    edi
  404674:	xchg   ebx,eax
  404675:	pop    es
  404676:	adc    ecx,edi
  404678:	call   DWORD PTR [edx+0x46]
  40467b:	push   esi
  40467c:	xchg   BYTE PTR [esp+eax*1+0x37],ch
  404680:	cmc    
  404681:	std    
  404682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404683:	inc    esp
  404684:	add    DWORD PTR ds:0x749abb,0xfffffff2
  40468b:	retf   
  40468c:	cld    
  40468d:	cmp    al,0x9c
  40468f:	add    dh,ch
  404691:	hlt    
  404692:	jnp    0x404701
  404694:	adc    ecx,DWORD PTR [esp+edx*1]
  404697:	adc    DWORD PTR [eax],ebx
  404699:	mov    bl,0xc0
  40469b:	inc    esp
  40469c:	jno    0x404712
  40469e:	or     DWORD PTR [ecx+0x4943ca63],edi
  4046a4:	pop    edx
  4046a5:	mov    cl,0x28
  4046a7:	cmp    eax,0x55b25dc8
  4046ac:	(bad)  
  4046ad:	fidivr DWORD PTR [eax]
  4046af:	sbb    dl,BYTE PTR [edx]
  4046b1:	mov    ds:0xb391a3a5,al
  4046b6:	js     0x404655
  4046b8:	jb     0x40471a
  4046ba:	and    BYTE PTR [edx+esi*4-0x1c146e29],bh
  4046c1:	arpl   WORD PTR [edx+0x35],bp
  4046c4:	pop    esp
  4046c5:	mov    bh,0xb8
  4046c7:	(bad)  
  4046c8:	scas   eax,DWORD PTR es:[edi]
  4046c9:	repz adc eax,0xef0e5b34
  4046cf:	(bad)  
  4046d0:	rcr    DWORD PTR [edi+0x6d],cl
  4046d3:	mov    ebx,0xd9cbbd4b
  4046d9:	inc    edx
  4046da:	retf   
  4046db:	fisttp QWORD PTR [eax+0x5de1b51d]
  4046e1:	and    DWORD PTR [eax-0x3f],ecx
  4046e4:	pop    es
  4046e5:	jb     0x404702
  4046e7:	das    
  4046e8:	and    al,ah
  4046ea:	mov    ds:0xf55e1325,al
  4046ef:	dec    ebx
  4046f0:	push   esi
  4046f1:	inc    esp
  4046f2:	hlt    
  4046f3:	icebp  
  4046f4:	dec    ebx
  4046f5:	cmc    
  4046f6:	and    DWORD PTR [edx+0x25],ecx
  4046f9:	call   0x8710b0d1
  4046fe:	push   edi
  4046ff:	jmp    0xff74:0x19505bec
  404706:	imul   BYTE PTR [edi-0x2b0494f4]
  40470c:	jne    0x404736
  40470e:	inc    eax
  40470f:	out    dx,eax
  404710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404711:	ja     0x4046eb
  404713:	(bad)  
  404714:	pop    ebx
  404715:	adc    al,BYTE PTR [edx]
  404717:	call   0x764b:0x95c171bf
  40471e:	jl     0x404705
  404720:	add    al,0xe9
  404722:	fisttp DWORD PTR [edi+0x4]
  404725:	fld    DWORD PTR [ecx]
  404727:	pop    edi
  404728:	mov    ds:0x25d9da1b,al
  40472d:	sub    ah,BYTE PTR [ecx]
  40472f:	dec    eax
  404730:	ins    BYTE PTR es:[edi],dx
  404731:	stos   BYTE PTR es:[edi],al
  404732:	mov    edi,DWORD PTR [esp+ebp*1+0x459c23e1]
  404739:	push   edx
  40473a:	and    eax,esp
  40473c:	in     al,dx
  40473d:	not    BYTE PTR [eax+0x74f5b076]
  404743:	lahf   
  404744:	and    BYTE PTR [esi],ch
  404746:	push   0x53
  404748:	pop    esp
  404749:	pusha  
  40474a:	inc    edx
  40474b:	pop    es
  40474c:	scas   al,BYTE PTR es:[edi]
  40474d:	jle    0x4047be
  40474f:	ds push eax
  404751:	mov    ch,0xa5
  404753:	(bad)  
  404755:	(bad)  
  404756:	mov    ebp,0xbc7cecb3
  40475b:	je     0x404787
  40475d:	cmp    al,0x9c
  40475f:	push   esi
  404760:	cdq    
  404761:	nop
  404762:	adc    eax,0x3e8d221e
  404767:	gs scas al,BYTE PTR es:[edi]
  404769:	fld    QWORD PTR es:[edx+0x48]
  40476d:	into   
  40476e:	pusha  
  40476f:	fdiv   st(3),st
  404771:	rcr    ah,1
  404773:	dec    eax
  404774:	mov    al,ds:0x1e1427a6
  404779:	jae    0x404797
  40477b:	pop    ecx
  40477c:	push   0xffffffeb
  40477e:	cmp    esi,DWORD PTR [esp+eiz*4]
  404781:	mov    dl,0xee
  404783:	cmc    
  404784:	push   cs
  404785:	arpl   cx,di
  404787:	mov    edx,0xd446bd05
  40478c:	inc    esi
  40478d:	sbb    ecx,DWORD PTR [edx+0x13]
  404790:	mov    al,0xbd
  404792:	add    al,BYTE PTR [ecx+esi*1+0x73]
  404796:	mov    bh,0xd5
  404798:	cwde   
  404799:	mov    ah,0x6
  40479b:	or     bh,al
  40479d:	pusha  
  40479e:	in     eax,dx
  40479f:	add    eax,0x624c9107
  4047a4:	cmp    al,BYTE PTR [edi-0x76]
  4047a7:	push   ss
  4047a8:	inc    edx
  4047a9:	dec    edx
  4047aa:	mov    cl,0x9f
  4047ac:	add    DWORD PTR [esi-0x39],esi
  4047af:	jnp    0x404770
  4047b1:	push   ss
  4047b2:	aad    0xb1
  4047b4:	loop   0x4047a3
  4047b6:	mov    ah,0x79
  4047b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b9:	out    dx,eax
  4047ba:	xchg   BYTE PTR [ebp+0x7f],dh
  4047bd:	imul   eax,DWORD PTR [edx-0x7f],0x8c86984f
  4047c4:	stc    
  4047c5:	into   
  4047c6:	ins    BYTE PTR es:[edi],dx
  4047c7:	inc    ebp
  4047c8:	inc    esp
  4047c9:	add    eax,DWORD PTR ds:0x9292b562
  4047cf:	test   BYTE PTR [edx],dh
  4047d1:	cli    
  4047d2:	jge    0x404841
  4047d4:	fdivr  QWORD PTR [eax+0x4ce6a848]
  4047da:	iret   
  4047db:	mov    ss,esi
  4047dd:	icebp  
  4047de:	fwait
  4047df:	in     eax,dx
  4047e0:	loope  0x4047a2
  4047e2:	lahf   
  4047e3:	mov    ecx,DWORD PTR [eax+0x25]
  4047e6:	adc    eax,0xc962c0c6
  4047eb:	jg     0x404860
  4047ed:	pop    eax
  4047ee:	dec    esi
  4047ef:	push   esp
  4047f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f1:	or     BYTE PTR [ebx+0x782b3685],ch
  4047f7:	mov    es,WORD PTR [esi]
  4047f9:	mov    eax,0xfaf2cb36
  4047fe:	(bad)  
  4047ff:	fwait
  404800:	outs   dx,DWORD PTR ds:[esi]
  404801:	adc    al,0x6f
  404803:	mov    ds:0x42974e1e,al
  404808:	push   ebx
  404809:	addr16 inc ebx
  40480b:	dec    ecx
  40480c:	pop    eax
  40480d:	push   edx
  40480e:	test   esi,edi
  404810:	je     0x40483a
  404812:	mov    cl,0xe3
  404814:	mov    edi,0xfb1b40cd
  404819:	pusha  
  40481a:	cmp    dh,BYTE PTR [eax-0x46]
  40481d:	inc    edi
  40481e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481f:	mov    WORD PTR [eax+ecx*2-0x272dbbcb],es
  404826:	lods   eax,DWORD PTR ds:[esi]
  404827:	test   eax,0xb3736a92
  40482c:	ins    DWORD PTR es:[edi],dx
  40482d:	xchg   DWORD PTR [eax+eax*8+0x7bfcfb6b],esp
  404834:	hlt    
  404835:	push   ebx
  404836:	push   es
  404837:	call   FWORD PTR [eax]
  404839:	or     DWORD PTR [edi+0x79],ebp
  40483c:	int3   
  40483d:	and    DWORD PTR [eax-0x38],0x7e4ff85e
  404844:	je     0x404846
  404846:	idiv   DWORD PTR [ebx+0x18c911bc]
  40484c:	idiv   BYTE PTR [edi+0x56]
  40484f:	xchg   BYTE PTR [esi-0x55],al
  404852:	pop    es
  404853:	daa    
  404854:	push   ss
  404855:	retf   0x46fd
  404858:	test   DWORD PTR [ecx],0xcad286f9
  40485e:	out    dx,eax
  40485f:	loop   0x4047ff
  404861:	jecxz  0x4048cb
  404863:	jp     0x40482e
  404865:	push   esp
  404866:	jb     0x4048e2
  404868:	fs jbe 0x404850
  40486b:	jno    0x404868
  40486d:	ins    DWORD PTR es:[edi],dx
  40486e:	and    eax,0xe4d8966e
  404873:	xchg   ecx,eax
  404874:	jmp    0x4048bd
  404876:	mov    cs,WORD PTR [ebp-0xb41d5af]
  40487c:	or     al,0x86
  40487e:	sbb    eax,0x1d44c31b
  404883:	es adc al,0xdc
  404886:	mov    ah,0xf3
  404888:	lds    edi,FWORD PTR gs:[edx]
  40488b:	pop    ecx
  40488c:	aad    0x96
  40488e:	xchg   ecx,eax
  40488f:	or     esi,DWORD PTR [edx]
  404891:	pop    esp
  404892:	out    0x1d,eax
  404894:	scas   eax,DWORD PTR es:[edi]
  404895:	pop    ebp
  404896:	int3   
  404897:	retf   
  404898:	push   0x46
  40489a:	cmp    ecx,0x42
  40489d:	dec    edx
  40489e:	aad    0x7a
  4048a0:	aas    
  4048a1:	push   eax
  4048a2:	fcomip st,st(4)
  4048a4:	nop
  4048a5:	icebp  
  4048a6:	cmp    DWORD PTR [eax-0x4db794ed],esi
  4048ac:	mov    cl,0x46
  4048ae:	push   DWORD PTR [edi-0x346d9e9d]
  4048b4:	pop    eax
  4048b5:	push   ds
  4048b6:	stos   BYTE PTR es:[edi],al
  4048b7:	stos   DWORD PTR es:[edi],eax
  4048b8:	mov    bl,0x68
  4048ba:	add    al,0xeb
  4048bc:	fld    QWORD PTR [esi]
  4048be:	ret    
  4048bf:	sbb    esi,ebx
  4048c1:	xor    eax,0x30f3284a
  4048c6:	mov    ch,0xf4
  4048c8:	call   0xc4054f2c
  4048cd:	fisub  DWORD PTR [eax-0x67]
  4048d0:	xchg   ebx,eax
  4048d1:	or     bl,ah
  4048d3:	mov    ch,BYTE PTR [edi+0x6f8669cb]
  4048d9:	outs   dx,BYTE PTR ds:[esi]
  4048da:	xchg   edi,eax
  4048db:	es pop esp
  4048dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048de:	sbb    cl,BYTE PTR [ecx-0x9]
  4048e1:	repnz lods eax,DWORD PTR ds:[esi]
  4048e3:	pop    ds
  4048e4:	lods   al,BYTE PTR ds:[esi]
  4048e5:	gs fucom st(6)
  4048e8:	gs neg ebp
  4048eb:	adc    BYTE PTR [edx+0x43],0x92
  4048ef:	add    edx,ebx
  4048f1:	push   edx
  4048f2:	(bad)  
  4048f4:	xchg   ebx,eax
  4048f5:	vpshlw ymm8,xmm3,xmm1
  4048fa:	popa   
  4048fb:	xchg   edi,eax
  4048fc:	ins    BYTE PTR es:[edi],dx
  4048fd:	jnp    0x40492e
  4048ff:	mov    edi,0x1b619dc4
  404904:	nop
  404905:	mov    edi,ecx
  404907:	fiadd  WORD PTR [ebx+0x7d]
  40490a:	adc    BYTE PTR [eax+ebx*8],bh
  40490d:	std    
  40490e:	loope  0x4048b9
  404910:	push   es
  404911:	(bad)  
  404912:	push   ecx
  404913:	fisubr WORD PTR [esi-0x6a5383fe]
  404919:	addr16 aam 0x40
  40491c:	test   BYTE PTR [ebx-0x57a77127],bl
  404922:	mov    bh,0x4
  404924:	inc    edi
  404925:	out    0x2d,al
  404927:	xchg   esp,eax
  404928:	inc    edx
  404929:	sbb    eax,0x53914d8
  40492e:	inc    edx
  40492f:	dec    ebx
  404930:	jb     0x404918
  404932:	mov    bl,0x61
  404934:	aas    
  404935:	fadd   DWORD PTR [ebp+0x37a80127]
  40493b:	cli    
  40493c:	shl    edx,0xa8
  40493f:	xchg   esi,eax
  404940:	mov    WORD PTR ds:0xecc88d3f,cs
  404946:	or     ch,bl
  404948:	dec    edx
  404949:	aas    
  40494a:	inc    ebp
  40494b:	test   DWORD PTR [esi+0x7913c6bf],eax
  404951:	aam    0xd8
  404953:	xor    ch,cl
  404955:	push   ds
  404956:	xlat   BYTE PTR ds:[ebx]
  404958:	cli    
  404959:	jge    0x4049d2
  40495b:	(bad)
  404960:	push   esi
  404961:	loop   0x4049cd
  404963:	push   cs
  404964:	pxor   mm7,QWORD PTR [edi-0x7e324637]
  40496b:	cmp    al,0x44
  40496d:	xor    bl,BYTE PTR fs:[bx+si-0x79]
  404972:	stc    
  404973:	call   0xc5bd7c79
  404978:	mov    ebx,edx
  40497a:	mov    ebp,0xe3babe7c
  40497f:	fist   DWORD PTR [edx]
  404981:	out    dx,eax
  404982:	dec    ebp
  404983:	pop    ss
  404984:	jmp    0x404958
  404986:	push   ds
  404987:	outs   dx,DWORD PTR ds:[esi]
  404988:	ins    BYTE PTR es:[edi],dx
  404989:	mov    eax,ds:0x9936908b
  40498e:	or     eax,DWORD PTR [ebx-0x60]
  404991:	(bad)  
  404992:	ss ds (bad) 
  404995:	pop    es
  404996:	pushf  
  404997:	and    BYTE PTR [ecx-0x38b1541c],dh
  40499d:	push   ecx
  40499e:	inc    ecx
  40499f:	push   es
  4049a0:	cmp    eax,0xb2564056
  4049a5:	cld    
  4049a6:	les    ebp,FWORD PTR ds:0x580257e
  4049ac:	fadd   DWORD PTR [edx+0x4]
  4049af:	inc    esp
  4049b0:	jg     0x4049e9
  4049b2:	push   ebx
  4049b3:	sahf   
  4049b4:	mov    esi,0x44a25191
  4049b9:	mov    DWORD PTR [eax+0x24763885],ebx
  4049bf:	xor    BYTE PTR [ecx],dh
  4049c1:	xchg   edx,eax
  4049c2:	icebp  
  4049c3:	dec    esp
  4049c4:	jg     0x4049e5
  4049c6:	out    0x3f,al
  4049c8:	pushf  
  4049c9:	enter  0x8de7,0x9d
  4049cd:	ins    BYTE PTR es:[edi],dx
  4049ce:	sbb    ebp,DWORD PTR [ebp-0x48bce571]
  4049d4:	nop
  4049d5:	stc    
  4049d6:	out    0x89,eax
  4049d8:	inc    esp
  4049d9:	xor    ah,bl
  4049db:	ret    
  4049dc:	mov    esi,0x3fb0cbf5
  4049e1:	mov    ebp,0xa74d4fb0
  4049e6:	ss in  eax,0xc3
  4049e9:	xor    ecx,DWORD PTR [ebx-0x75c3796f]
  4049ef:	or     bl,dh
  4049f1:	or     al,0x10
  4049f3:	add    eax,ebx
  4049f5:	dec    esp
  4049f6:	mov    bh,0x22
  4049f8:	mov    cl,0xa7
  4049fa:	sbb    dl,BYTE PTR [ebx-0x5c30bff0]
  404a00:	jbe    0x404a76
  404a02:	sub    BYTE PTR [edi-0x2b],0xc1
  404a06:	inc    ebx
  404a07:	push   edi
  404a08:	test   al,0xc2
  404a0a:	push   0xffffff98
  404a0c:	addr16 pop ds
  404a0e:	sub    ebx,edi
  404a10:	mov    ch,0xad
  404a12:	cmp    eax,0x2d4f0d04
  404a17:	out    0x9b,al
  404a19:	loopne 0x404a7f
  404a1b:	cmp    ecx,esi
  404a1d:	dec    esp
  404a1e:	add    eax,0x4691cb3c
  404a23:	mov    dh,0x4d
  404a25:	(bad)  
  404a26:	aad    0xbc
  404a28:	nop
  404a29:	mov    BYTE PTR [ebp+ebp*4+0x28],al
  404a2d:	cmp    bh,BYTE PTR [ecx]
  404a2f:	sti    
  404a30:	jne    0x4049c9
  404a32:	add    al,dh
  404a34:	imul   esp,DWORD PTR [edi-0x5f],0x1e
  404a38:	(bad)  [bp+di-0x874]
  404a3d:	ja     0x404a0c
  404a3f:	pop    ebp
  404a40:	push   ebx
  404a41:	pop    ds
  404a42:	mov    ebp,DWORD PTR [ecx]
  404a44:	add    al,dh
  404a46:	daa    
  404a47:	sub    ecx,ebp
  404a49:	and    eax,DWORD PTR [edx-0x9a87afe]
  404a4f:	mov    ecx,0xd7549ded
  404a54:	xchg   ecx,eax
  404a55:	sar    DWORD PTR [esi],0x6b
  404a58:	sbb    al,0xf4
  404a5a:	out    0xf8,al
  404a5c:	sub    bl,BYTE PTR [ebx-0x5aede492]
  404a62:	(bad)  
  404a63:	xchg   esp,eax
  404a64:	mov    ebx,0xed58bb1b
  404a69:	icebp  
  404a6a:	push   0xe423788c
  404a6f:	hlt    
  404a70:	sbb    ah,BYTE PTR [ebp+ecx*1-0x77]
  404a74:	rcr    al,0xd0
  404a77:	mov    WORD PTR [ecx+0x5b6866df],fs
  404a7d:	push   esp
  404a7e:	rol    ecx,cl
  404a80:	ins    DWORD PTR es:[edi],dx
  404a81:	popa   
  404a82:	push   es
  404a83:	nop
  404a84:	xchg   esp,eax
  404a85:	bound  eax,QWORD PTR [esi+0x2f]
  404a88:	(bad)  
  404a89:	enter  0x2d36,0x3d
  404a8d:	fst    DWORD PTR [ebx+0x1]
  404a90:	adc    ecx,DWORD PTR [ecx+0x5e]
  404a93:	outs   dx,DWORD PTR ds:[esi]
  404a94:	pop    ds
  404a95:	sbb    ecx,edi
  404a97:	lea    esi,[eax+edx*1+0x1a519de1]
  404a9e:	or     dl,bh
  404aa0:	pop    ds
  404aa1:	or     eax,edi
  404aa3:	mov    WORD PTR [ecx-0x52],gs
  404aa6:	add    eax,0xeb46efed
  404aab:	mov    ch,0xd6
  404aad:	mov    ch,0xde
  404aaf:	xor    esp,ebx
  404ab1:	or     eax,0x515aac3c
  404ab6:	sti    
  404ab7:	xor    eax,0x67b52f50
  404abc:	cmp    edi,edx
  404abe:	fisub  DWORD PTR [ecx+0x4405eb7b]
  404ac4:	jg     0x404a8f
  404ac6:	cmp    al,BYTE PTR [ebp-0x4b]
  404ac9:	inc    eax
  404aca:	outs   dx,DWORD PTR ds:[esi]
  404acb:	frndint 
  404acd:	cdq    
  404ace:	xchg   ecx,eax
  404acf:	sub    eax,0x4dd9aa96
  404ad4:	push   ecx
  404ad5:	stc    
  404ad6:	xlat   BYTE PTR ds:[ebx]
  404ad7:	xchg   ebx,eax
  404ad8:	ss push ss
  404ada:	mov    esp,DWORD PTR [ecx-0x4d]
  404add:	xchg   ecx,eax
  404ade:	les    ebx,FWORD PTR [edi+0x32]
  404ae1:	mov    WORD PTR [edx-0xa],cs
  404ae4:	xor    eax,0x2250b18
  404ae9:	in     eax,dx
  404aea:	and    eax,DWORD PTR [ecx]
  404aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aed:	std    
  404aee:	mov    esi,esi
  404af0:	cli    
  404af1:	test   eax,0xa8768b35
  404af6:	sbb    DWORD PTR [ebx-0x4d424e6d],esp
  404afc:	bound  ebp,QWORD PTR [edi+edi*4+0x11]
  404b00:	push   ss
  404b01:	push   eax
  404b02:	xor    ah,BYTE PTR [edx]
  404b04:	jge    0x404b7c
  404b06:	loop   0x404b7d
  404b08:	or     edi,edx
  404b0a:	daa    
  404b0b:	ds scas eax,DWORD PTR es:[edi]
  404b0d:	sbb    al,0x23
  404b0f:	and    BYTE PTR [ebp-0x60],dl
  404b12:	ficomp DWORD PTR [esi+0x74]
  404b15:	adc    eax,0x1a268f00
  404b1a:	push   ss
  404b1b:	xchg   ecx,eax
  404b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1d:	lea    esi,[esp+eiz*2]
  404b20:	xchg   edx,eax
  404b21:	jge    0x404b5c
  404b23:	sub    eax,0xe25332d3
  404b28:	or     al,0xe1
  404b2a:	adc    edi,DWORD PTR gs:[esi+0x10]
  404b2e:	fistp  WORD PTR [ebx-0x1d]
  404b31:	xor    BYTE PTR [ebx+0xa],ch
  404b34:	cmp    DWORD PTR [ebp+esi*8-0x5645fd9c],esp
  404b3b:	xor    al,BYTE PTR [ecx]
  404b3d:	(bad)
  404b40:	mov    ecx,0x4982128d
  404b45:	pop    ecx
  404b46:	jne    0x404bae
  404b48:	sub    DWORD PTR [eax],esp
  404b4a:	add    al,0xe2
  404b4c:	jns    0x404b06
  404b4e:	into   
  404b4f:	js     0x404aee
  404b51:	inc    ebx
  404b52:	pop    esi
  404b53:	stos   BYTE PTR es:[edi],al
  404b54:	pop    ebx
  404b55:	sub    al,cl
  404b57:	lods   al,BYTE PTR ds:[esi]
  404b59:	leave  
  404b5a:	(bad)  
  404b5b:	not    BYTE PTR [edi]
  404b5d:	mov    DWORD PTR [edx+0x1865a1a6],ecx
  404b63:	add    eax,0xd597187a
  404b68:	in     eax,0x89
  404b6a:	mov    WORD PTR [edi+0x73008bbd],ss
  404b70:	adc    ah,BYTE PTR [edx+0x2a]
  404b73:	and    ecx,eax
  404b75:	aad    0xde
  404b77:	je     0x404bea
  404b79:	mov    ebx,0x12fdba6b
  404b7e:	mov    esp,0xe68d2f0b
  404b83:	or     al,0x5f
  404b85:	test   BYTE PTR [ecx-0x43],ch
  404b88:	add    BYTE PTR [ecx+0x1b],0x4f
  404b8c:	mov    eax,ds:0xe1e3d03b
  404b91:	sub    ecx,edx
  404b93:	dec    ecx
  404b94:	pop    eax
  404b95:	or     bl,ch
  404b97:	data16 sar BYTE PTR [ebx+0x34],cl
  404b9b:	and    esi,DWORD PTR [ebx]
  404b9d:	test   eax,0x4c441d07
  404ba2:	sub    BYTE PTR [edx+esi*8],cl
  404ba5:	xchg   bh,bh
  404ba7:	lock sub eax,0x5a803e9a
  404bad:	mov    bl,0x5d
  404baf:	adc    bl,bh
  404bb1:	repz aam 0x89
  404bb4:	int3   
  404bb5:	xchg   ebx,eax
  404bb6:	xor    eax,0x4e583b32
  404bbb:	push   es
  404bbc:	dec    esi
  404bbd:	out    0x83,al
  404bbf:	daa    
  404bc0:	pop    eax
  404bc1:	push   esi
  404bc2:	mov    dh,0x1f
  404bc4:	mov    bh,0x4a
  404bc6:	xchg   DWORD PTR [esp+edi*2],esp
  404bc9:	inc    bl
  404bcb:	push   cs
  404bcc:	xchg   BYTE PTR [ebx-0x77005919],bh
  404bd2:	and    eax,ecx
  404bd4:	rcr    DWORD PTR [ebp-0x61],cl
  404bd7:	sbb    BYTE PTR [ebp+ebp*4-0x42697f51],0x1d
  404bdf:	out    dx,al
  404be0:	push   eax
  404be1:	imul   ecx,eax,0x54
  404be4:	outs   dx,DWORD PTR ds:[esi]
  404be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be6:	cdq    
  404be7:	rcr    BYTE PTR [ecx+ebp*2-0x52036e68],0x53
  404bef:	in     al,dx
  404bf0:	pop    ebp
  404bf1:	xchg   esi,eax
  404bf2:	push   cs
  404bf3:	lds    edi,FWORD PTR [ebx]
  404bf5:	mov    cl,0x58
  404bf7:	sbb    BYTE PTR [edi-0x79720fbf],ch
  404bfd:	cmp    BYTE PTR [esi+0x33],cl
  404c00:	dec    ebx
  404c01:	add    eax,0x96a993ac
  404c06:	das    
  404c07:	inc    ebx
  404c08:	jp     0x404bcc
  404c0a:	xchg   ebx,eax
  404c0b:	enter  0x1000,0x8b
  404c0f:	(bad)  
  404c10:	std    
  404c11:	retf   0x19cf
  404c14:	push   ebx
  404c15:	repnz lods eax,DWORD PTR ds:[esi]
  404c17:	jo     0x404c07
  404c19:	lock and esp,DWORD PTR [ecx]
  404c1c:	mov    bl,0x9a
  404c1e:	arpl   si,bp
  404c20:	push   cs
  404c21:	test   DWORD PTR [esi+0x570668e3],esi
  404c27:	jo     0x404ca6
  404c29:	sbb    DWORD PTR [ebx-0x7ae07123],0x7bf2c8b1
  404c33:	inc    edx
  404c34:	jnp    0x404cac
  404c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c37:	outs   dx,BYTE PTR ds:[esi]
  404c38:	sub    al,0xec
  404c3a:	mov    ebx,0xe0bd011d
  404c3f:	icebp  
  404c40:	dec    edx
  404c41:	mov    DWORD PTR [eax],ebp
  404c43:	or     esi,esp
  404c45:	xlat   BYTE PTR ds:[ebx]
  404c46:	jae    0x404c81
  404c48:	cld    
  404c49:	pop    edx
  404c4a:	mov    esp,0x4fab2143
  404c4f:	xchg   esi,eax
  404c50:	xor    eax,0x758ca978
  404c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c56:	(bad)  
  404c58:	addr16 mov esi,0x1ef15d86
  404c5e:	in     al,0xcb
  404c60:	xchg   esi,eax
  404c61:	pop    es
  404c62:	dec    edi
  404c63:	sbb    al,BYTE PTR [ecx]
  404c65:	add    BYTE PTR [ebx+0x69],dh
  404c68:	dec    ecx
  404c69:	cdq    
  404c6a:	inc    ecx
  404c6b:	mov    BYTE PTR cs:[edx],bl
  404c6e:	test   DWORD PTR [esi+edx*2],ebx
  404c71:	in     ax,dx
  404c73:	cmp    DWORD PTR [edx],edi
  404c75:	imul   ebp,DWORD PTR [edx+ebp*8-0x1169ffbb],0x8af488a9
  404c80:	nop
  404c81:	test   DWORD PTR [eax+0x60],0xf2328837
  404c88:	les    ebp,FWORD PTR [ebx+0x61]
  404c8b:	stc    
  404c8c:	cmc    
  404c8d:	sub    BYTE PTR [ebp-0x3c7fc3cc],al
  404c93:	inc    edi
  404c94:	push   ebx
  404c95:	sahf   
  404c96:	(bad)  [edi]
  404c98:	mov    ebp,0x3da7a866
  404c9d:	fisttp QWORD PTR [ebp+0x32]
  404ca0:	loopne 0x404cb1
  404ca2:	sub    al,0xd5
  404ca4:	fnstcw WORD PTR [esi*8-0x45102eb7]
  404cab:	aad    0xe3
  404cad:	ficom  DWORD PTR [ebx]
  404caf:	dec    ecx
  404cb0:	push   DWORD PTR [eax]
  404cb2:	push   es
  404cb3:	mov    bl,0xcb
  404cb5:	push   esp
  404cb6:	sbb    al,0x55
  404cb8:	dec    ecx
  404cb9:	(bad)  
  404cba:	clc    
  404cbb:	aam    0x3c
  404cbd:	ror    DWORD PTR [ebp+0x2e8b6d47],1
  404cc3:	or     DWORD PTR [edi+ecx*4],esi
  404cc6:	stos   BYTE PTR es:[edi],al
  404cc7:	in     al,0xb4
  404cc9:	push   es
  404cca:	shl    BYTE PTR [edx],0x54
  404ccd:	inc    esp
  404cce:	xor    ah,0x8
  404cd1:	pop    ss
  404cd2:	add    BYTE PTR [edi+esi*8],ch
  404cd5:	sub    al,0x29
  404cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd8:	sti    
  404cd9:	pusha  
  404cda:	mov    bh,0x4c
  404cdc:	add    eax,0x22ef6fb
  404ce1:	pop    edx
  404ce2:	cmp    BYTE PTR [ecx+0x74f5763f],al
  404ce8:	in     al,0xe5
  404cea:	test   DWORD PTR [ebx+0x10],edx
  404ced:	jbe    0x404d5e
  404cef:	rcl    DWORD PTR [edx],cl
  404cf1:	ror    BYTE PTR [esi],cl
  404cf3:	sub    al,0x1a
  404cf5:	inc    edx
  404cf6:	in     eax,dx
  404cf7:	retf   0x92e8
  404cfa:	xor    bl,dh
  404cfc:	sub    bl,BYTE PTR [eax+eiz*1+0x56919daa]
  404d03:	mov    WORD PTR [ebp-0x1],cs
  404d06:	cs jns 0x404c96
  404d09:	inc    edx
  404d0a:	mov    edx,0x530743ca
  404d0f:	shr    esp,0xda
  404d12:	mov    esp,0x32ab2d67
  404d17:	jg     0x404ccd
  404d19:	mov    edi,0x6b73c769
  404d1e:	add    al,0x5
  404d20:	and    eax,0xf8ebd48d
  404d25:	or     ecx,esi
  404d27:	mov    dh,0xcf
  404d29:	stos   DWORD PTR es:[edi],eax
  404d2a:	push   0xb639db04
  404d2f:	xchg   esi,eax
  404d30:	dec    esi
  404d31:	mov    al,0x39
  404d33:	pop    ecx
  404d34:	test   DWORD PTR [esp+edx*1-0x3ed4005f],ebp
  404d3b:	jmp    0x5520:0x14809571
  404d42:	(bad)  
  404d44:	xchg   ecx,eax
  404d45:	popf   
  404d46:	outs   dx,DWORD PTR ds:[esi]
  404d47:	ret    
  404d48:	rol    DWORD PTR [ebp+0x2cfd5a31],1
  404d4e:	dec    edi
  404d4f:	push   cs
  404d50:	push   0x52
  404d52:	dec    eax
  404d53:	xor    bh,BYTE PTR [edx]
  404d55:	xor    al,0x1a
  404d57:	dec    esi
  404d58:	call   0xfe23:0xcfd5fda9
  404d5f:	xchg   DWORD PTR [edi+0x2bc85935],esi
  404d65:	dec    ecx
  404d66:	or     bh,BYTE PTR [eax+0x5a]
  404d69:	out    dx,eax
  404d6a:	and    al,0xda
  404d6c:	sbb    dl,cl
  404d6e:	cli    
  404d6f:	add    ebp,0xffffffef
  404d72:	mov    ds:0xabae3ceb,al
  404d77:	out    0xa6,eax
  404d79:	lods   al,BYTE PTR ds:[esi]
  404d7a:	push   eax
  404d7b:	xchg   ebx,eax
  404d7c:	and    esi,eax
  404d7e:	(bad)  
  404d7f:	retf   
  404d80:	(bad)  
  404d81:	and    eax,0xa02cb6a4
  404d86:	clc    
  404d87:	inc    ebx
  404d88:	pop    eax
  404d89:	fcom   QWORD PTR [edi+ecx*8-0x6]
  404d8d:	push   es
  404d8e:	pop    esp
  404d8f:	sub    ecx,0xffffff92
  404d92:	add    eax,edi
  404d94:	adc    esp,edi
  404d96:	adc    al,0x18
  404d98:	sbb    ah,ch
  404d9a:	loope  0x404dca
  404d9c:	adc    esp,DWORD PTR [esi]
  404d9e:	mov    ebp,DWORD PTR [edi+0xe]
  404da1:	xor    DWORD PTR [ecx+0x8],eax
  404da4:	fimul  WORD PTR [esp+ebp*8-0x6d19f31d]
  404dab:	add    esi,edi
  404dad:	mov    ch,0x47
  404daf:	dec    esi
  404db0:	pop    ecx
  404db1:	outs   dx,DWORD PTR ds:[esi]
  404db2:	or     BYTE PTR [esi],ch
  404db4:	ins    BYTE PTR es:[edi],dx
  404db5:	dec    eax
  404db6:	or     eax,0x4b75dc60
  404dbb:	lods   eax,DWORD PTR ds:[esi]
  404dbc:	sub    esi,DWORD PTR [ebp-0x5d2626cc]
  404dc2:	or     al,0xc3
  404dc4:	cwde   
  404dc5:	jns    0x404e02
  404dc7:	xor    eax,0xe92d70c1
  404dcc:	stc    
  404dcd:	aaa    
  404dce:	sbb    cl,BYTE PTR [esi]
  404dd0:	bound  edi,QWORD PTR [edi-0x5e]
  404dd3:	mov    edx,DWORD PTR ss:[edi]
  404dd6:	loop   0x404e29
  404dd8:	dec    esi
  404dd9:	or     DWORD PTR [ecx],ebx
  404ddb:	(bad)  
  404ddc:	nop    DWORD PTR [esi+ecx*4-0x63490b7c]
  404de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de5:	or     eax,0x5e246511
  404dea:	mov    bl,0x3e
  404dec:	jno    0x404dcd
  404dee:	sub    cl,dl
  404df0:	lods   eax,DWORD PTR ds:[esi]
  404df1:	nop
  404df2:	std    
  404df3:	sub    al,0xf0
  404df5:	mov    edi,0x419470b4
  404dfa:	pop    esp
  404dfb:	jo     0x404da1
  404dfd:	xchg   ecx,eax
  404dfe:	jle    0x404e3f
  404e00:	inc    edi
  404e01:	cmovg  edi,DWORD PTR [esi]
  404e04:	lock jmp 0x6ea6:0x956ad06c
  404e0c:	js     0x404e56
  404e0e:	fisub  DWORD PTR [edx-0x4fafb4d1]
  404e14:	stc    
  404e15:	mov    ebp,0x3fb664be
  404e1a:	lods   al,BYTE PTR ds:[esi]
  404e1b:	ja     0x404da9
  404e1d:	adc    eax,0xfef2577c
  404e22:	mov    eax,0xe6e83f43
  404e27:	pop    esi
  404e28:	xchg   ebx,eax
  404e29:	rcr    eax,0x15
  404e2c:	popa   
  404e2d:	jmp    0x404ea9
  404e2f:	jmp    0x404dfc
  404e31:	(bad)  
  404e32:	(bad)  
  404e33:	repnz jmp FWORD PTR [esi+0xd]
  404e37:	gs xchg edx,eax
  404e39:	out    dx,eax
  404e3a:	lock lahf 
  404e3c:	aam    0x57
  404e3e:	sti    
  404e3f:	cli    
  404e40:	jb     0x404eb7
  404e42:	ins    DWORD PTR es:[edi],dx
  404e43:	loopne 0x404e71
  404e45:	bound  esp,QWORD PTR [eax]
  404e47:	and    bh,bl
  404e49:	sbb    DWORD PTR [ecx*1+0x75fe44b6],edx
  404e50:	push   0xb8417f1
  404e55:	push   ebp
  404e56:	clc    
  404e57:	rcr    BYTE PTR [eax],1
  404e59:	mov    bh,BYTE PTR [edx+0xb889862]
  404e5f:	dec    ebx
  404e60:	xor    cl,dh
  404e62:	adc    edi,ecx
  404e64:	or     eax,0xf25ad698
  404e69:	jl     0x404e90
  404e6b:	inc    ebx
  404e6c:	adc    BYTE PTR [eax+0x5260f12c],dl
  404e72:	out    dx,al
  404e73:	test   eax,0x7bacf49c
  404e78:	xchg   edx,eax
  404e79:	ror    DWORD PTR [ecx],0xa4
  404e7c:	iret   
  404e7d:	xchg   eax,ecx
  404e7f:	and    BYTE PTR [eax-0x3dc7f6e6],ah
  404e85:	jne    0x404f04
  404e87:	xchg   esi,eax
  404e88:	aad    0x41
  404e8a:	jmp    0xd24f:0xf944ea88
  404e91:	fcomp  st(5)
  404e93:	imul   ecx,ebp,0x37bb6f03
  404e99:	push   ebp
  404e9a:	gs sbb eax,0x82c8a3c9
  404ea0:	aad    0x6d
  404ea2:	or     al,0x36
  404ea4:	sbb    bl,BYTE PTR [esi]
  404ea6:	cmp    cl,bl
  404ea8:	mov    ds:0x7a146d16,eax
  404ead:	xor    edx,DWORD PTR [ecx]
  404eaf:	xor    ebx,DWORD PTR ds:0xbd2f05ee
  404eb5:	mov    BYTE PTR [edi-0x5d84be85],ah
  404ebb:	pop    esi
  404ebc:	es cli 
  404ebe:	aas    
  404ebf:	adc    eax,eax
  404ec1:	iret   
  404ec2:	icebp  
  404ec3:	mov    cl,0xc3
  404ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec6:	das    
  404ec7:	out    0x65,al
  404ec9:	fsub   DWORD PTR [ecx+0x7f8a33c8]
  404ecf:	ja     0x404efe
  404ed1:	or     edx,eax
  404ed3:	repz rol BYTE PTR [edi],1
  404ed6:	je     0x404eed
  404ed8:	pushf  
  404ed9:	loop   0x404f56
  404edb:	ja     0x404ee7
  404edd:	push   es
  404ede:	or     eax,0x2f6b10e
  404ee3:	mov    ch,0xd8
  404ee5:	push   ebp
  404ee6:	push   esp
  404ee7:	out    dx,eax
  404ee8:	imul   ebp,DWORD PTR [ebx],0x6b
  404eeb:	adc    al,0xd6
  404eed:	jnp    0x404ed7
  404eef:	inc    esp
  404ef0:	out    dx,al
  404ef1:	push   es
  404ef2:	adc    bl,dl
  404ef4:	cmp    ah,bh
  404ef6:	mov    dl,0x32
  404ef8:	fs jmp 0x283b4988
  404efe:	rcr    ebx,cl
  404f00:	xor    cl,0x90
  404f03:	test   eax,0x87f6434
  404f08:	rcl    esp,1
  404f0a:	push   ebp
  404f0b:	cmp    DWORD PTR [esi+0x44],ebx
  404f0e:	dec    edx
  404f0f:	es ins BYTE PTR es:[edi],dx
  404f11:	cmc    
  404f12:	jbe    0x404f0e
  404f14:	rcr    DWORD PTR [edi],0xe2
  404f17:	inc    esi
  404f18:	adc    edx,DWORD PTR [ebx-0x5c13da23]
  404f1e:	pop    ecx
  404f1f:	pusha  
  404f20:	hlt    
  404f21:	cmp    ebx,DWORD PTR [esi+0x2a]
  404f24:	or     al,0xc9
  404f26:	xor    ch,bh
  404f28:	sbb    al,BYTE PTR [eax+0x33]
  404f2b:	sti    
  404f2c:	ins    BYTE PTR es:[edi],dx
  404f2d:	mov    ebx,DWORD PTR [edi+0x31]
  404f30:	shl    DWORD PTR [eax+edi*8-0x288fbf42],cl
  404f37:	rcl    DWORD PTR [eax+ebx*4+0x34a9794a],1
  404f3e:	das    
  404f3f:	inc    esi
  404f40:	test   ecx,ecx
  404f42:	inc    edx
  404f43:	adc    ecx,edi
  404f45:	sub    al,dl
  404f47:	pop    ebp
  404f48:	clc    
  404f49:	jg     0x404f41
  404f4b:	lds    edx,FWORD PTR [ebx+0x15]
  404f4e:	and    bl,ch
  404f50:	mov    ecx,0x4c737dc4
  404f55:	jne    0x404f8a
  404f57:	and    esp,DWORD PTR [eax+0x2b040603]
  404f5d:	call   0xaad9:0x105bc62a
  404f64:	inc    esi
  404f65:	sub    al,0xd1
  404f67:	cmp    DWORD PTR [esi+0x67d33df4],ebx
  404f6d:	sar    BYTE PTR fs:[esi+esi*1+0x7b0456fb],cl
  404f75:	jmp    0x5487:0x7e2132ec
  404f7c:	aam    0x48
  404f7e:	(bad)  
  404f7f:	pop    ecx
  404f80:	loopne 0x404f17
  404f82:	js     0x404f9c
  404f84:	sbb    eax,0xe0774341
  404f89:	(bad)  
  404f8b:	mov    ecx,0x6874ae5a
  404f90:	ds scas al,BYTE PTR es:[edi]
  404f92:	cld    
  404f93:	pop    es
  404f94:	loopne 0x404fa3
  404f96:	loopne 0x404f34
  404f98:	test   BYTE PTR [ebx+0x0],ch
  404f9b:	ss dec edi
  404f9d:	push   es
  404f9e:	loopne 0x404f92
  404fa0:	mov    ebp,0xc1978b54
  404fa5:	cmp    al,bh
  404fa7:	dec    ecx
  404fa8:	mov    al,0xb6
  404faa:	mov    DWORD PTR [ecx+edi*1],esi
  404fad:	mov    edx,0x42f24ffe
  404fb2:	mov    ch,0xb8
  404fb4:	mov    edi,0x856eed17
  404fb9:	xchg   edi,eax
  404fba:	popf   
  404fbb:	or     DWORD PTR [edi+0x4c],0xab6a94ca
  404fc2:	outs   dx,BYTE PTR ds:[esi]
  404fc3:	outs   dx,BYTE PTR ds:[esi]
  404fc4:	cmp    BYTE PTR [edx+0x62],bh
  404fc7:	adc    eax,0x1a122697
  404fcc:	arpl   WORD PTR [edi+0x4a],ax
  404fcf:	adc    edx,edx
  404fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd2:	adc    bh,ch
  404fd4:	jno    0xbd84d280
  404fda:	push   edx
  404fdb:	add    eax,0x2a9c67cf
  404fe0:	xor    dl,BYTE PTR [ebx]
  404fe2:	push   esp
  404fe3:	rol    DWORD PTR [edx-0x49],cl
  404fe6:	daa    
  404fe7:	push   cs
  404fe8:	xchg   ebp,eax
  404fe9:	mov    edi,0xfa39f4fd
  404fee:	push   es
  404fef:	mov    esp,0xc019d543
  404ff4:	clc    
  404ff5:	enter  0x4804,0x1e
  404ff9:	popf   
  404ffa:	enter  0x2ac4,0x59
  404ffe:	xor    dl,BYTE PTR [edx]
  405000:	push   0xffffffc0
  405002:	pop    edx
  405003:	out    0x20,al
  405005:	jne    0x404fde
  405007:	iret   
  405008:	rcl    BYTE PTR [eax+0x36da595d],0xad
  40500f:	sbb    al,0xe1
  405011:	push   edi
  405012:	enter  0x4bf4,0x5a
  405016:	xor    ecx,DWORD PTR [edi+0x12]
  405019:	mov    edx,0xf5c4af95
  40501e:	jmp    0x4e98a309
  405023:	jmp    0xd0c8131b
  405028:	fnstsw WORD PTR [edx]
  40502a:	pop    esi
  40502b:	shl    al,1
  40502d:	je     0x405004
  40502f:	jmp    0xdcaaa97a
  405034:	or     DWORD PTR [ecx],ebp
  405036:	sbb    DWORD PTR [edx-0x61bc019],esi
  40503c:	outs   dx,DWORD PTR ds:[esi]
  40503d:	and    eax,0x7177c255
  405042:	push   edi
  405043:	adc    ah,bh
  405045:	jg     0x405081
  405047:	cmp    ebx,DWORD PTR [edx]
  405049:	stos   BYTE PTR es:[edi],al
  40504a:	pop    edi
  40504b:	sbb    al,0xa0
  40504d:	mov    dl,0x24
  40504f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405050:	std    
  405051:	and    al,0x9a
  405053:	and    al,0x8d
  405055:	aaa    
  405056:	jns    0x405064
  405058:	cld    
  405059:	(bad)  
  40505a:	jge    0x40505d
  40505c:	ins    BYTE PTR es:[edi],dx
  40505d:	hlt    
  40505e:	les    esp,FWORD PTR [edx-0x4f65ab3c]
  405064:	les    ebx,FWORD PTR [ecx]
  405066:	push   0x587335c6
  40506b:	and    eax,0x1f630b4
  405070:	cmp    ah,ch
  405072:	test   eax,0xa4155cc8
  405077:	sub    eax,0xd8a88c8
  40507c:	jmp    0xaa637d3c
  405081:	xor    DWORD PTR [eax+0x39],0x1e
  405085:	loope  0x4050e0
  405087:	vmread DWORD PTR [eax+0x3375718c],edi
  40508e:	or     edx,edi
  405090:	rcr    BYTE PTR [ebx+0xb],cl
  405093:	inc    edi
  405094:	ja     0x405081
  405096:	int3   
  405097:	(bad)  
  405099:	cmp    eax,0x79d8b96f
  40509e:	lds    esp,FWORD PTR [edi]
  4050a0:	push   0x8
  4050a2:	or     ecx,DWORD PTR [ecx+0x48]
  4050a5:	xchg   ebx,eax
  4050a6:	pcmpgtb mm4,QWORD PTR [edi-0x40]
  4050aa:	xchg   BYTE PTR [ebx+0x3d],ah
  4050ad:	sbb    DWORD PTR [ebp+0x7cac5048],0x69
  4050b4:	cmp    BYTE PTR [eax+0x4bb866e3],bl
  4050ba:	dec    esp
  4050bb:	xor    BYTE PTR [edi],0x9a
  4050be:	adc    cl,BYTE PTR [edx]
  4050c0:	sbb    esi,DWORD PTR [esi-0x34bba0b1]
  4050c6:	ss aas 
  4050c8:	adc    eax,0xe97972a5
  4050cd:	mov    esi,gs
  4050cf:	pushf  
  4050d0:	xchg   edx,eax
  4050d1:	pusha  
  4050d2:	test   al,0x67
  4050d4:	xchg   ecx,eax
  4050d5:	test   eax,0xeb6baa21
  4050da:	cld    
  4050db:	(bad)  
  4050dc:	loopne 0x4050eb
  4050de:	les    esp,FWORD PTR [esi]
  4050e0:	fstp   DWORD PTR [ecx+0x4d86d5b]
  4050e6:	inc    esp
  4050e7:	out    0x27,al
  4050e9:	hlt    
  4050ea:	sti    
  4050eb:	mov    dh,0x1a
  4050ed:	aam    0xab
  4050ef:	mov    esp,0x78ea6c31
  4050f4:	push   ebp
  4050f5:	jle    0x40516b
  4050f7:	rcl    BYTE PTR [edi],0x96
  4050fa:	dec    edx
  4050fb:	call   0xd515927c
  405100:	pop    edx
  405101:	cs nop
  405103:	push   ss
  405104:	iret   
  405105:	xchg   edx,eax
  405106:	push   0xffffffb5
  405108:	popf   
  405109:	mov    ds:0x772f57d8,eax
  40510e:	outs   dx,BYTE PTR ds:[esi]
  40510f:	mov    esp,0xba452208
  405114:	or     eax,0xd3b05a08
  405119:	dec    esi
  40511a:	inc    ebp
  40511b:	popf   
  40511c:	jecxz  0x4050ec
  40511e:	leave  
  40511f:	in     al,dx
  405120:	xchg   ebx,eax
  405121:	shl    DWORD PTR [ebx+0x7b],cl
  405124:	jp     0x4050ce
  405126:	jge    0x405179
  405128:	int    0xf2
  40512a:	dec    esi
  40512b:	jmp    0x9b806ace
  405130:	sbb    eax,0x7db75bb
  405135:	sbb    dh,BYTE PTR [edi-0x11af56a1]
  40513b:	adc    edi,esp
  40513d:	push   ss
  40513e:	mov    esi,0xc49b256d
  405143:	addr16 xchg edi,eax
  405145:	pop    edx
  405146:	(bad)  
  405147:	cmp    al,0x4e
  405149:	js     0x405110
  40514b:	sahf   
  40514c:	pop    esi
  40514d:	test   eax,0xa00a4c94
  405152:	push   edi
  405153:	sub    al,0x96
  405155:	mov    al,ds:0x5a3604f4
  40515a:	sub    ecx,esp
  40515c:	dec    eax
  40515d:	dec    eax
  40515e:	sub    bl,0xb8
  405161:	inc    eax
  405162:	inc    edi
  405163:	and    BYTE PTR [ecx+0x4b],0x0
  405167:	inc    ebp
  405168:	inc    DWORD PTR [edx+ecx*2+0x52]
  40516c:	push   ebx
  40516d:	push   ebp
  40516e:	je     0x4051dd
  405170:	int    0x92
  405172:	je     0x405179
  405174:	ins    BYTE PTR es:[edi],dx
  405175:	jl     0x4051ae
  405177:	push   cs
  405178:	mov    al,0xbe
  40517a:	call   0xa566:0x19210dff
  405181:	cmc    
  405182:	pop    ds
  405183:	test   eax,0xa4b5b4a1
  405188:	jb     0x40518c
  40518a:	es lock js 0x4051f3
  40518e:	jl     0x405194
  405190:	push   ebx
  405191:	gs pusha 
  405193:	(bad)
  405197:	(bad)  
  405198:	mov    edi,0xb2924e15
  40519d:	mov    al,ds:0x959c58c9
  4051a2:	enter  0x2779,0xa2
  4051a6:	and    BYTE PTR [eax-0x25839458],dl
  4051ac:	dec    ebx
  4051ad:	push   cs
  4051ae:	inc    esp
  4051af:	jge    0x405166
  4051b1:	outs   dx,BYTE PTR ds:[esi]
  4051b2:	es je  0x40513d
  4051b5:	ret    
  4051b6:	(bad)  
  4051b7:	dec    esi
  4051b8:	(bad)  
  4051b9:	dec    ecx
  4051ba:	cmp    eax,0x166e883e
  4051bf:	dec    esi
  4051c0:	mov    bh,0x68
  4051c2:	out    0xed,al
  4051c4:	leave  
  4051c5:	and    ah,BYTE PTR [ebp+0x3]
  4051c8:	pop    ebp
  4051c9:	(bad)  
  4051ca:	lds    ecx,FWORD PTR [edx-0x1d]
  4051cd:	xor    DWORD PTR [ebx+0x5c],esi
  4051d0:	sbb    ecx,DWORD PTR [ebx+0x215fbf3]
  4051d6:	iret   
  4051d7:	xor    eax,0x937ac1c9
  4051dc:	dec    ebp
  4051dd:	retf   0x78fc
  4051e0:	fdivr  DWORD PTR [edx-0x5cb6a554]
  4051e6:	add    ebp,DWORD PTR [edx-0x1d]
  4051e9:	outs   dx,BYTE PTR ds:[esi]
  4051ea:	mov    DWORD PTR [edx+0x20],ecx
  4051ed:	adc    ebx,edi
  4051ef:	mov    eax,0xdd649ed4
  4051f4:	mov    dh,0x98
  4051f6:	jmp    0xf0d7c7bf
  4051fb:	push   ebp
  4051fc:	iret   
  4051fd:	popa   
  4051fe:	shl    BYTE PTR [edx-0x7d87a5ff],1
  405204:	mov    ds:0x90d1769c,eax
  405209:	test   DWORD PTR [ebx-0x5c8a114c],eax
  40520f:	adc    eax,0x216725c5
  405214:	or     BYTE PTR [edi-0x31147a20],0xbc
  40521b:	mov    ds:0xf6d9701c,al
  405220:	and    dl,al
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x533794ee
  405804:	div    esi
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	or     eax,0x219929c3
  405813:	loope  0x4057e0
  405815:	xchg   ecx,eax
  405816:	mov    esp,0xb5e2d6d
  40581b:	es scas eax,DWORD PTR es:[edi]
  40581d:	push   edi
  40581e:	sub    dl,BYTE PTR [edx+0x50]
  405821:	(bad)  
  405823:	cdq    
  405824:	in     eax,dx
  405825:	repz scas al,BYTE PTR es:[edi]
  405827:	test   eax,0x30d2c884
  40582c:	rcl    BYTE PTR [edi-0x74],cl
  40582f:	cld    
  405830:	inc    ebp
  405831:	mov    ds:0x590ea6f7,eax
  405836:	cdq    
  405837:	pop    ebx
  405838:	sti    
  405839:	sbb    ecx,0x472b278a
  40583f:	ja     0x4057f8
  405841:	mov    al,BYTE PTR [ecx+ecx*2-0x71]
  405845:	in     al,0x76
  405847:	pop    ss
  405848:	adc    al,0xee
  40584a:	or     eax,0x12cdc9d8
  40584f:	mov    ah,0x20
  405851:	shr    BYTE PTR [edx-0x7de072b2],cl
  405857:	mul    BYTE PTR [edi+0x7c1ecba9]
  40585d:	jle    0x4057fa
  40585f:	test   eax,0x5ee2ba9f
  405864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405865:	mov    edi,0x66a787c4
  40586a:	or     dl,BYTE PTR [ebx]
  40586c:	pop    eax
  40586d:	cmp    BYTE PTR [ebx+0x77b36c44],ah
  405873:	mov    ecx,0xf98a1eca
  405878:	pop    ss
  405879:	and    DWORD PTR [ecx],0xffffffd0
  40587c:	call   FWORD PTR [esi]
  40587e:	(bad)  
  40587f:	push   ebx
  405880:	js     0x405828
  405882:	jmp    0xa5c3fa9e
  405887:	pop    ss
  405888:	add    al,0xa5
  40588a:	loope  0x40581c
  40588c:	adc    ecx,0xfb842479
  405892:	push   ebp
  405893:	lahf   
  405894:	shl    BYTE PTR [esi+ebp*8],cl
  405897:	scas   al,BYTE PTR es:[edi]
  405898:	or     BYTE PTR [ecx+0xf],0x2b
  40589c:	jle    0x405908
  40589e:	jns    0x40588f
  4058a0:	cmp    BYTE PTR [edi],0xfe
  4058a3:	dec    eax
  4058a4:	sub    eax,0x41f0c28
  4058a9:	xchg   ecx,eax
  4058aa:	and    cl,BYTE PTR [edx+0x4fe57844]
  4058b0:	aaa    
  4058b1:	sub    DWORD PTR [edi],edx
  4058b3:	mov    esi,0x57bcd01
  4058b8:	or     ch,BYTE PTR [ebp+0x3c27529e]
  4058be:	leave  
  4058bf:	mov    ecx,0x4ca0b422
  4058c4:	pop    ebp
  4058c5:	push   ds
  4058c6:	jg     0x40584c
  4058c8:	sbb    eax,0xda10425b
  4058cd:	test   BYTE PTR [eax],al
  4058cf:	add    eax,0xf41086a5
  4058d4:	sub    eax,esi
  4058d6:	sbb    ch,BYTE PTR [edi-0x1c59cf1c]
  4058dc:	inc    ebx
  4058dd:	loope  0x4058ad
  4058df:	hlt    
  4058e0:	fist   WORD PTR [eax-0x7d]
  4058e3:	(bad)  
  4058e4:	sti    
  4058e5:	add    al,0x28
  4058e7:	add    eax,0x49b69098
  4058ec:	stos   BYTE PTR es:[edi],al
  4058ed:	xor    BYTE PTR [eax-0x61],0xcf
  4058f1:	nop
  4058f2:	scas   al,BYTE PTR es:[edi]
  4058f3:	add    al,0x7a
  4058f5:	(bad)  
  4058f7:	add    eax,DWORD PTR [edx]
  4058f9:	pop    ebx
  4058fa:	(bad)  
  4058fb:	jno    0x40592d
  4058fd:	cli    
  4058fe:	push   esi
  4058ff:	mov    DWORD PTR [ecx],eax
  405901:	imul   DWORD PTR [esi]
  405903:	popf   
  405904:	in     al,dx
  405905:	cmp    DWORD PTR [esi-0x46],0x3ea8667
  40590c:	push   edi
  40590d:	mov    dh,0x34
  40590f:	cmp    eax,0xc0556120
  405914:	mov    edx,0xd492100f
  405919:	test   eax,0x32aedcde
  40591e:	cs icebp 
  405920:	jnp    0x40598e
  405922:	call   0x33eb3109
  405927:	sub    BYTE PTR ds:0xca8e8d77,0x82
  40592e:	sub    eax,0x3918460d
  405933:	jns    0x405955
  405935:	scas   eax,DWORD PTR es:[edi]
  405936:	adc    BYTE PTR [ebp-0x75e62b75],al
  40593c:	add    eax,0x8a7a1f1f
  405941:	jmp    0x2d36:0x47021e63
  405948:	xchg   bh,ch
  40594a:	sar    BYTE PTR [ebx+edi*8-0x30],0x3e
  40594f:	loop   0x405944
  405951:	push   edx
  405952:	inc    ebp
  405953:	retf   
  405954:	mov    ds:0x8cd46cc9,al
  405959:	adc    eax,0x851adaf1
  40595e:	sub    BYTE PTR [ebp-0x5c],ah
  405961:	push   es
  405962:	dec    eax
  405963:	jno    0x4059d7
  405965:	sahf   
  405966:	hlt    
  405967:	rcl    edi,1
  405969:	shl    BYTE PTR [ecx],1
  40596b:	jmp    0x5444:0xc0a91845
  405972:	neg    esi
  405974:	shl    BYTE PTR [ebx+0x1f],cl
  405977:	retf   
  405978:	ror    BYTE PTR [ebx+0x69693e3f],1
  40597e:	es jbe 0x405955
  405981:	xchg   edi,eax
  405982:	in     eax,dx
  405983:	push   DWORD PTR [ebp+ebp*2+0x1bcce97c]
  40598a:	push   ds
  40598b:	mov    esi,0x81ebf0dc
  405990:	xlat   BYTE PTR ds:[ebx]
  405991:	lahf   
  405992:	call   0x6ea76c10
  405997:	call   0x25db:0x3eff5aec
  40599e:	stc    
  40599f:	adc    BYTE PTR cs:[ebx],bl
  4059a2:	adc    eax,0xed4d3c69
  4059a7:	xchg   ebp,eax
  4059a8:	xchg   edx,eax
  4059a9:	outs   dx,DWORD PTR ds:[esi]
  4059aa:	xor    BYTE PTR [edx],ch
  4059ac:	mov    esi,0xdf4a6f83
  4059b1:	popf   
  4059b2:	arpl   WORD PTR [ebp+eiz*2-0x3c],bp
  4059b6:	movhps xmm0,QWORD PTR [eax+0x757a8ac8]
  4059bd:	push   edi
  4059be:	mov    ebx,0xded2df26
  4059c3:	data16 xchg BYTE PTR [ecx-0x63a8f228],dl
  4059ca:	add    bh,BYTE PTR [edx]
  4059cc:	fstp   QWORD PTR [edi+0x434b49e6]
  4059d2:	shl    ch,cl
  4059d4:	and    cl,0x68
  4059d7:	mov    al,cl
  4059d9:	out    dx,al
  4059da:	adc    dl,ah
  4059dc:	retf   
  4059dd:	cmp    DWORD PTR [edx+0x79],ebp
  4059e0:	(bad)
  4059e3:	shl    BYTE PTR [ebx+0x1fb9d017],0x75
  4059ea:	dec    ebx
  4059eb:	sub    bl,BYTE PTR [ebp+edx*8-0x250ae4cc]
  4059f2:	fnstsw WORD PTR [edi+0x4]
  4059f5:	dec    edx
  4059f6:	loop   0x4059a9
  4059f8:	inc    ecx
  4059f9:	fidivr DWORD PTR [ecx]
  4059fb:	popa   
  4059fc:	cmp    DWORD PTR [esi+0x5e],eax
  4059ff:	inc    ecx
  405a00:	outs   dx,DWORD PTR ds:[esi]
  405a01:	std    
  405a02:	jg     0x4059f9
  405a04:	stos   DWORD PTR es:[edi],eax
  405a05:	outs   dx,BYTE PTR ds:[esi]
  405a06:	push   es
  405a07:	pop    eax
  405a08:	clc    
  405a09:	cdq    
  405a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a0b:	ror    BYTE PTR [ebx-0x51],1
  405a0e:	xor    al,0x4f
  405a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a11:	pop    esi
  405a12:	pop    edi
  405a13:	mov    esp,0x2000cdcc
  405a18:	mov    bl,ch
  405a1a:	cmovb  edi,DWORD PTR [ecx-0x46fcd9f5]
  405a21:	sub    eax,0x7fc8f177
  405a26:	and    BYTE PTR [esi+0x7893bcd6],dl
  405a2c:	inc    ebp
  405a2d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2f:	pushf  
  405a30:	retw   
  405a32:	dec    ebx
  405a33:	fadd   QWORD PTR [ecx+ebp*2+0x17]
  405a37:	sub    eax,DWORD PTR [edx-0x70dc91c5]
  405a3d:	stos   BYTE PTR es:[edi],al
  405a3e:	(bad)  
  405a3f:	sub    ah,BYTE PTR [ecx+0x7a5657c3]
  405a45:	ret    0xf4b4
  405a48:	(bad)  
  405a49:	xor    DWORD PTR [esi],ecx
  405a4b:	push   ds
  405a4c:	out    0x1b,al
  405a4e:	sti    
  405a4f:	mov    al,0x60
  405a51:	call   0x8c38:0x5e9f8165
  405a58:	iret   
  405a59:	xor    eax,0xb3c4cb71
  405a5e:	lods   eax,DWORD PTR ds:[esi]
  405a5f:	inc    ebx
  405a60:	sbb    BYTE PTR [esi-0x4e05b390],bl
  405a66:	mov    edi,0xd72e28b1
  405a6b:	xor    eax,edx
  405a6d:	pop    ss
  405a6e:	sti    
  405a6f:	rcl    BYTE PTR [ecx+0x1fc96f8a],1
  405a75:	fnstenv ds:0x444a9ea3
  405a7b:	inc    esp
  405a7c:	xor    eax,0x37f3ee77
  405a81:	pusha  
  405a82:	xchg   esi,eax
  405a83:	test   BYTE PTR [eax+0x3db332c6],ah
  405a89:	ret    0xfab2
  405a8c:	jne    0x405afc
  405a8e:	or     al,0xfa
  405a90:	mov    ebx,0x71688a8b
  405a95:	rcr    DWORD PTR [ebx+0x53688e05],cl
  405a9b:	dec    esi
  405a9c:	jmp    0x645f:0x5251a6a1
  405aa3:	outs   dx,BYTE PTR ds:[esi]
  405aa4:	(bad)  
  405aa5:	clc    
  405aa6:	and    eax,0xa128b25c
  405aab:	mov    ds:0xa1331080,al
  405ab0:	jo     0x405a98
  405ab2:	pop    ecx
  405ab3:	(bad)
  405ab6:	add    DWORD PTR [esi],0xffffff8d
  405ab9:	stos   BYTE PTR es:[edi],al
  405aba:	and    BYTE PTR [edi+ebx*1-0x78],dh
  405abe:	sub    al,0xbf
  405ac0:	repnz dec eax
  405ac2:	clc    
  405ac3:	sbb    al,0x2c
  405ac5:	mov    dh,0xd1
  405ac7:	mov    al,0xe
  405ac9:	jmp    0x41add4cc
  405ace:	ret    
  405acf:	push   0xffffffb6
  405ad1:	je     0x405ab1
  405ad3:	cmp    BYTE PTR [esi],0xab
  405ad6:	mov    ebp,0xe7d84ff4
  405adb:	jge    0x405b0f
  405add:	in     al,0xc
  405adf:	mov    ecx,0x68cf8997
  405ae4:	cmp    dh,BYTE PTR [ebx-0x569127d3]
  405aea:	mov    esp,0x97506617
  405aef:	in     eax,0x62
  405af1:	mov    ecx,0x810d465a
  405af6:	inc    edx
  405af7:	add    al,0x26
  405af9:	pop    esp
  405afa:	in     eax,dx
  405afb:	call   0x842d:0x87795ab2
  405b02:	mov    esp,0xce3d307e
  405b07:	adc    edx,DWORD PTR [esi+0x28315b4c]
  405b0d:	inc    edi
  405b0e:	out    0x8b,al
  405b10:	out    dx,al
  405b11:	fnstsw WORD PTR [ebp+0xf]
  405b14:	repz sbb eax,0xeac753dd
  405b1a:	dec    ebp
  405b1b:	in     al,0xd9
  405b1d:	adc    esi,edi
  405b1f:	inc    esi
  405b20:	xchg   ebp,eax
  405b21:	popf   
  405b22:	sti    
  405b23:	sbb    eax,0x7bf3e3b2
  405b28:	xchg   edx,eax
  405b29:	mov    al,0x25
  405b2b:	mov    ebx,0xcb3259d
  405b30:	and    eax,0x1474b4e
  405b35:	(bad)  
  405b36:	imul   DWORD PTR ds:0xcc742602
  405b3c:	ret    0x6163
  405b3f:	daa    
  405b40:	mov    cl,0x63
  405b42:	inc    eax
  405b43:	jg     0x405af1
  405b45:	in     eax,0xd1
  405b47:	sub    eax,0x2bd5b3d2
  405b4c:	cli    
  405b4d:	int3   
  405b4e:	jmp    0x405b46
  405b50:	mov    fs,WORD PTR [ebp+esi*4-0x7f1130e7]
  405b57:	sub    dl,BYTE PTR [edi+0x5cba8d43]
  405b5d:	jnp    0x405b41
  405b5f:	les    esi,FWORD PTR [ecx-0x3f]
  405b62:	inc    ebx
  405b63:	cs aad 0xb
  405b66:	in     al,dx
  405b67:	mov    dl,0xce
  405b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b6a:	adc    al,0xe4
  405b6c:	dec    esi
  405b6d:	repnz mov ecx,0x4a6204d1
  405b73:	jg     0x405b32
  405b75:	inc    eax
  405b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b77:	retf   0x7655
  405b7a:	test   BYTE PTR [ecx],ch
  405b7c:	fadd   QWORD PTR [ebx+0x9da3288]
  405b82:	into   
  405b83:	stos   DWORD PTR es:[edi],eax
  405b84:	pop    edi
  405b85:	cmc    
  405b86:	dec    ebp
  405b87:	cwde   
  405b88:	bnd jg 0x405b3e
  405b8b:	shl    BYTE PTR [esi],cl
  405b8d:	mov    edx,0xb083942e
  405b92:	xchg   esp,eax
  405b93:	push   ebx
  405b94:	xor    bh,ch
  405b96:	in     al,0xdf
  405b98:	mov    ds:0x72d24de5,al
  405b9d:	ds sub al,0xd9
  405ba0:	xor    al,0xc1
  405ba2:	pop    ecx
  405ba3:	jmp    FWORD PTR [ebp-0x621be1cd]
  405ba9:	and    dl,dl
  405bab:	imul   ebp,DWORD PTR [esi+0x4c1c8741],0x7f
  405bb2:	fdiv   DWORD PTR [esi]
  405bb4:	jno    0x405b58
  405bb6:	or     DWORD PTR [esi],edi
  405bb8:	adc    eax,0x80ec7e54
  405bbd:	stc    
  405bbe:	stos   BYTE PTR es:[edi],al
  405bbf:	push   0xffffffb8
  405bc1:	mov    dh,bh
  405bc3:	shr    ah,cl
  405bc5:	mov    bl,0x90
  405bc7:	mov    ch,0x49
  405bc9:	sbb    ebp,esp
  405bcb:	fistp  DWORD PTR [ecx+eiz*2]
  405bce:	popf   
  405bcf:	cmp    al,0x3a
  405bd1:	xchg   BYTE PTR [ecx+ecx*4-0x445aed53],dl
  405bd8:	cmp    esp,DWORD PTR [eax+0x4]
  405bdb:	pop    esp
  405bdc:	aas    
  405bdd:	lods   al,BYTE PTR ds:[esi]
  405bde:	cmp    DWORD PTR [edi],0x3030fa2a
  405be4:	xor    DWORD PTR [ebp-0x6e],ebp
  405be7:	leave  
  405be8:	add    BYTE PTR [esi-0x153d9e93],cl
  405bee:	pop    ebp
  405bef:	jmp    0x3f52f720
  405bf4:	outs   dx,BYTE PTR ds:[esi]
  405bf5:	pop    esp
  405bf6:	xor    al,0x20
  405bf8:	mov    WORD PTR [esi+0x54],ss
  405bfb:	jg     0x405c30
  405bfd:	inc    ebp
  405bfe:	jmp    0x405bca
  405c00:	(bad)  
  405c01:	lock out dx,al
  405c03:	push   ebp
  405c04:	jo     0x405bb4
  405c06:	mov    dl,0x1d
  405c08:	sar    cl,1
  405c0a:	ins    BYTE PTR es:[edi],dx
  405c0b:	repz fisttp DWORD PTR [esi+ebp*2]
  405c0f:	cmp    dh,cl
  405c11:	push   0xffffffa7
  405c13:	das    
  405c14:	and    eax,0xa3236c9c
  405c19:	and    DWORD PTR [eax],ecx
  405c1b:	mov    BYTE PTR [eax],bl
  405c1d:	and    eax,0x424f1ad3
  405c22:	mov    eax,0xc4a8b437
  405c27:	sbb    DWORD PTR [esi+0x130ddb81],0x7eec8e51
  405c31:	cwde   
  405c32:	ror    ebx,0x8e
  405c35:	xor    al,0x4f
  405c37:	lods   eax,DWORD PTR ds:[esi]
  405c38:	hlt    
  405c39:	or     al,BYTE PTR [ecx-0x17]
  405c3c:	cmp    DWORD PTR [eax-0x7e2e7ea1],ebx
  405c42:	or     dh,BYTE PTR [ebx+0x41]
  405c45:	jmp    0x5090:0x98d1dfea
  405c4c:	imul   edx,DWORD PTR [ebp+0x4c],0xeb5b2ee8
  405c53:	xchg   DWORD PTR [eax-0x36dfffd8],esi
  405c59:	jo     0x405c85
  405c5b:	repz sub BYTE PTR [edi+0x46],ah
  405c5f:	inc    bh
  405c61:	aad    0x92
  405c63:	ss push cs
  405c65:	cli    
  405c66:	cmp    DWORD PTR [ecx+0x6394989e],ecx
  405c6c:	rcr    cl,cl
  405c6e:	add    ebp,ecx
  405c70:	xor    DWORD PTR [eax+0x3c],ebx
  405c73:	jg     0x405c58
  405c75:	adc    ebx,edi
  405c77:	mov    esi,0x328a2c0e
  405c7c:	push   esi
  405c7d:	mov    ?,WORD PTR [edi]
  405c7f:	imul   ebx,DWORD PTR [esi],0xe58d6dff
  405c85:	push   0x76
  405c87:	aad    0x21
  405c89:	xor    BYTE PTR ds:0xdf6bc7eb,cl
  405c8f:	cld    
  405c90:	scas   al,BYTE PTR es:[edi]
  405c91:	mov    esi,0x96c0051f
  405c96:	ins    BYTE PTR es:[edi],dx
  405c97:	cld    
  405c98:	push   ecx
  405c99:	retf   0x2c0a
  405c9c:	jg     0x405c4d
  405c9e:	scas   al,BYTE PTR es:[edi]
  405c9f:	cmp    DWORD PTR [ebx+ebp*4],esi
  405ca2:	pop    edi
  405ca3:	and    al,0x46
  405ca5:	inc    esp
  405ca6:	inc    ecx
  405ca7:	push   edi
  405ca8:	dec    ebx
  405ca9:	sbb    BYTE PTR [ecx],0xe2
  405cac:	xor    dh,bh
  405cae:	(bad)  ds:[esi+0x7f9c4a7d]
  405cb5:	mov    ch,0x5a
  405cb7:	adc    bl,ah
  405cb9:	test   eax,0x24b2df1c
  405cbe:	xor    BYTE PTR [edi-0x13],dh
  405cc1:	stos   BYTE PTR es:[edi],al
  405cc2:	xor    cl,ah
  405cc4:	imul   esp,DWORD PTR [ecx-0x282c56dc],0x30
  405ccb:	pop    edi
  405ccc:	lea    ecx,[edi+ebx*1]
  405ccf:	fs aaa 
  405cd1:	cmp    DWORD PTR [edx+edx*1-0x6c],0x1bf636d0
  405cd9:	pop    edx
  405cda:	mov    ah,0x52
  405cdc:	jmp    0xd52bab06
  405ce1:	mov    cl,0x55
  405ce3:	popf   
  405ce4:	hlt    
  405ce5:	jns    0x405ccc
  405ce7:	or     bl,0x3
  405cea:	lods   eax,DWORD PTR ds:[esi]
  405ceb:	hlt    
  405cec:	repz je 0x405ccc
  405cef:	arpl   WORD PTR [esp+esi*4-0x4f],di
  405cf3:	enter  0x3b7d,0x1a
  405cf7:	xchg   esi,eax
  405cf8:	cmp    bh,BYTE PTR [eax]
  405cfa:	pop    ecx
  405cfb:	jnp    0x405d18
  405cfd:	xchg   edi,eax
  405cfe:	das    
  405cff:	cld    
  405d00:	cmp    DWORD PTR [esi+ecx*4-0x6bb85c49],edx
  405d07:	mov    ds:0xadadb37b,eax
  405d0c:	dec    edx
  405d0d:	mov    ebx,0x6c9abbe6
  405d12:	push   edx
  405d13:	clc    
  405d14:	pop    ebx
  405d15:	lahf   
  405d16:	mov    ?,ecx
  405d18:	or     BYTE PTR [ebp+0x15],bl
  405d1b:	test   DWORD PTR [ebp+0x4],esi
  405d1e:	pop    esp
  405d1f:	ins    BYTE PTR es:[edi],dx
  405d20:	iret   
  405d21:	lds    eax,FWORD PTR [ecx]
  405d23:	in     al,dx
  405d24:	jmp    0x1e2c:0x80569f35
  405d2b:	mov    ebp,0xe9041582
  405d30:	mov    al,0x89
  405d32:	pop    ds
  405d33:	or     al,BYTE PTR ds:0x6bc714a
  405d39:	ret    0xa1b
  405d3c:	fadd   st,st(5)
  405d3e:	cmp    bl,BYTE PTR [ebp-0x1b]
  405d41:	jmp    0x405d87
  405d43:	test   al,0x3c
  405d45:	or     bl,ch
  405d47:	push   cs
  405d48:	sub    ecx,DWORD PTR [eax]
  405d4a:	aaa    
  405d4b:	lea    ecx,[ebx-0x65]
  405d4e:	mov    ebp,0x6eea699b
  405d53:	sbb    esi,edi
  405d55:	adc    ah,ch
  405d57:	shl    BYTE PTR [edi-0x54f7b3d],1
  405d5d:	jno    0x405d21
  405d5f:	cmp    BYTE PTR [esp+edx*1],ch
  405d62:	loop   0x405d04
  405d64:	ret    0x283d
  405d67:	stos   BYTE PTR es:[edi],al
  405d68:	das    
  405d69:	push   0xf3fe95d5
  405d6e:	xchg   DWORD PTR [edi-0x7c4ea212],esi
  405d74:	inc    esp
  405d75:	pop    esi
  405d76:	cwde   
  405d77:	gs outs dx,BYTE PTR fs:[esi]
  405d7a:	mov    al,0x9d
  405d7c:	push   0xffffffe1
  405d7e:	sbb    edi,DWORD PTR [ebx-0xbc99f93]
  405d84:	lea    edi,[edx+edi*8+0x7d]
  405d88:	pop    esp
  405d89:	mov    esp,0xcc2d7320
  405d8e:	cmp    DWORD PTR [edx],eax
  405d90:	repz or DWORD PTR [eax-0x6f],edi
  405d94:	inc    ebp
  405d95:	push   ebp
  405d96:	jbe    0x405e10
  405d98:	ret    0x14c0
  405d9b:	inc    edi
  405d9c:	(bad)  
  405d9d:	push   esi
  405d9e:	in     al,dx
  405d9f:	stos   BYTE PTR es:[di],al
  405da1:	cmp    ebx,DWORD PTR [ecx+0xf]
  405da4:	sbb    al,cl
  405da6:	jp     0x405dc0
  405da8:	jmp    0x4b26:0xebc05c0
  405daf:	shl    esi,0x4b
  405db2:	gs sar edx,0x28
  405db6:	fldcw  WORD PTR [ebp-0x6]
  405db9:	add    eax,0x821e72ce
  405dbe:	lods   eax,DWORD PTR ds:[esi]
  405dbf:	into   
  405dc0:	dec    ebx
  405dc1:	call   0x1346f1c
  405dc6:	retf   
  405dc7:	(bad)  
  405dc8:	in     al,dx
  405dc9:	mov    ecx,0x511c33e5
  405dce:	adc    edi,DWORD PTR [ebp+0x596908eb]
  405dd4:	pushf  
  405dd5:	add    al,0xc6
  405dd7:	inc    esp
  405dd8:	pusha  
  405dd9:	stc    
  405dda:	add    dl,BYTE PTR [ecx+0x1]
  405ddd:	xchg   BYTE PTR [esi+0x41],bl
  405de0:	outs   dx,BYTE PTR ds:[esi]
  405de1:	leave  
  405de2:	pop    esi
  405de3:	sub    edi,DWORD PTR [edx-0x7e]
  405de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de7:	sbb    al,0xa4
  405de9:	shr    BYTE PTR [edx+ebp*4],0x1f
  405ded:	xchg   DWORD PTR [edi+0x2ee6537f],ebx
  405df3:	popa   
  405df4:	std    
  405df5:	fisubr DWORD PTR [ebp-0x40]
  405df8:	cmp    al,0x91
  405dfa:	arpl   WORD PTR [edx],si
  405dfc:	loope  0x405dd6
  405dfe:	sbb    al,0x6a
  405e00:	mov    ecx,0x94795b12
  405e05:	arpl   WORD PTR [ecx],dx
  405e07:	mov    ah,0xd9
  405e09:	or     al,0x15
  405e0b:	lock mov eax,eax
  405e0e:	sub    BYTE PTR [ebx+0xfb599a6],0x22
  405e15:	mov    esi,ecx
  405e17:	push   esp
  405e18:	jmp    0xc8a2:0x11a33b82
  405e1f:	jl     0x405e04
  405e21:	push   es
  405e22:	ret    0xc6c4
  405e25:	and    DWORD PTR [edx-0x104776c5],ebx
  405e2b:	pop    ds
  405e2c:	xor    al,0xb0
  405e2e:	int    0x4c
  405e30:	cmp    al,0xc0
  405e32:	fnsave [edx+ecx*4-0x3673bce5]
  405e39:	aad    0xc6
  405e3b:	push   eax
  405e3c:	inc    ecx
  405e3d:	cmp    ebx,DWORD PTR [eax]
  405e3f:	retf   
  405e40:	scas   eax,DWORD PTR es:[edi]
  405e41:	(bad)  
  405e43:	mov    dl,0xbe
  405e45:	test   eax,0x1de0af10
  405e4a:	push   ds
  405e4b:	and    BYTE PTR [edx-0x5d],0xa2
  405e4f:	ret    
  405e50:	ror    DWORD PTR ds:0xadf015a1,cl
  405e56:	clc    
  405e57:	mov    al,0xb1
  405e59:	jae    0x405e05
  405e5b:	lods   eax,DWORD PTR ds:[esi]
  405e5c:	sbb    al,BYTE PTR [ebx-0x33788440]
  405e62:	jl     0x405e89
  405e64:	lock addr16 fcomp st(1)
  405e68:	fistp  DWORD PTR [esi+0x16]
  405e6b:	fst    QWORD PTR [esi-0x62]
  405e6e:	and    BYTE PTR [eax],bh
  405e70:	sub    edx,DWORD PTR [edx-0x3c]
  405e73:	adc    eax,0xd30d1c94
  405e78:	sbb    dh,cl
  405e7a:	call   0x7114859d
  405e7f:	aam    0x24
  405e81:	jnp    0x405e58
  405e83:	mov    ch,0xa9
  405e85:	(bad)  
  405e86:	push   ebx
  405e87:	pop    eax
  405e88:	mov    BYTE PTR [ecx],bh
  405e8a:	lds    edx,FWORD PTR [eax+esi*4-0x5b]
  405e8e:	xchg   ax,ax
  405e90:	xchg   DWORD PTR [edx-0x3b],edx
  405e93:	push   0x6d
  405e95:	mov    al,0x66
  405e97:	pop    ss
  405e98:	std    
  405e99:	pop    edi
  405e9a:	lock sahf 
  405e9c:	and    BYTE PTR [ecx+0x77cdd6ed],bh
  405ea2:	das    
  405ea3:	iret   
  405ea4:	xchg   ecx,eax
  405ea5:	inc    ebx
  405ea6:	inc    edx
  405ea7:	adc    eax,0x2d853098
  405eac:	dec    esp
  405ead:	xchg   ecx,eax
  405eae:	iret   
  405eaf:	xchg   edx,eax
  405eb0:	jnp    0x405efe
  405eb2:	mov    ah,0x3d
  405eb4:	xlat   BYTE PTR ds:[ebx]
  405eb5:	call   DWORD PTR [ecx]
  405eb7:	jbe    0x405e74
  405eb9:	push   esp
  405eba:	sahf   
  405ebb:	or     ch,BYTE PTR [eax+0xbba8b4f]
  405ec1:	repz xchg ebp,eax
  405ec3:	cmc    
  405ec4:	test   dl,cl
  405ec6:	pop    eax
  405ec7:	test   eax,0xaf59c049
  405ecc:	push   es
  405ecd:	cdq    
  405ece:	cdq    
  405ecf:	adc    BYTE PTR [ebx-0x64e1f7b3],ch
  405ed5:	call   0x37cfdad2
  405eda:	pop    esp
  405edb:	dec    esi
  405edc:	sbb    al,al
  405ede:	imul   WORD PTR [eax+0x4c7527c4]
  405ee5:	inc    eax
  405ee6:	inc    ecx
  405ee7:	mov    WORD PTR [edx+0x62bd4fbc],cs
  405eed:	or     DWORD PTR [esp+edx*1-0x11bef846],eax
  405ef4:	in     al,dx
  405ef5:	sbb    DWORD PTR [ecx],0x7ed59b8f
  405efb:	lds    ebp,FWORD PTR [edx]
  405efd:	sbb    al,0x9c
  405eff:	fnsave ds:0xcad3967b
  405f05:	popa   
  405f06:	jmp    0x405f33
  405f08:	pop    ecx
  405f09:	popf   
  405f0a:	(bad)  
  405f0b:	adc    BYTE PTR [edi+ebp*1],cl
  405f0e:	push   0xffffffd0
  405f10:	test   eax,esp
  405f12:	xor    DWORD PTR [edi+0x40172cb6],esp
  405f18:	pop    eax
  405f19:	dec    ebp
  405f1a:	sbb    DWORD PTR [ebx+esi*4+0x54b0728d],eax
  405f21:	mov    fs,WORD PTR [edx+0x6c9cbc50]
  405f27:	pop    ebx
  405f28:	mov    ebx,0x4ac65dce
  405f2d:	rcl    DWORD PTR [eax+edi*2],cl
  405f30:	dec    ebx
  405f31:	mov    eax,ds:0xa88292c
  405f36:	sbb    bl,BYTE PTR [esp+eiz*4-0x2f]
  405f3a:	sub    edx,DWORD PTR [eax-0xf]
  405f3d:	cli    
  405f3e:	aas    
  405f3f:	pop    ebp
  405f40:	and    esi,DWORD PTR [eax+0x13cd8be9]
  405f46:	pop    eax
  405f47:	mov    ebx,0x3f905c42
  405f4c:	mov    BYTE PTR [edi+0x625eafef],dl
  405f52:	dec    esp
  405f53:	mov    al,0xd3
  405f55:	inc    ebx
  405f56:	mov    dl,0x37
  405f58:	mov    ds:0xc4b0b29e,eax
  405f5d:	aaa    
  405f5e:	fwait
  405f5f:	sub    ebp,DWORD PTR [edx]
  405f61:	pushf  
  405f62:	lods   eax,DWORD PTR ds:[esi]
  405f63:	adc    ecx,ebp
  405f65:	cmp    al,BYTE PTR [edx+0x7b]
  405f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f69:	je     0x405efc
  405f6b:	jno    0x405f8e
  405f6d:	fs sbb ch,dh
  405f70:	push   ss
  405f71:	cli    
  405f72:	sbb    ebp,DWORD PTR [edi+0x300308fc]
  405f78:	sbb    eax,0x2e7b60e7
  405f7d:	aad    0xdf
  405f7f:	(bad)  
  405f80:	in     eax,0x93
  405f82:	sbb    al,0xb3
  405f84:	cmp    DWORD PTR [ebp-0x36f6260b],ecx
  405f8a:	xchg   esi,eax
  405f8b:	ror    DWORD PTR [esi+edi*2-0x207db59d],1
  405f92:	pop    edi
  405f93:	imul   esp,esi,0x8
  405f96:	sahf   
  405f97:	or     bl,BYTE PTR [edx+0x6]
  405f9a:	mov    ch,0x38
  405f9c:	adc    al,0x69
  405f9e:	pop    ebp
  405f9f:	sub    cl,bl
  405fa1:	lock add esi,ecx
  405fa4:	mov    al,0x9c
  405fa6:	mov    ch,0x8c
  405fa8:	adc    al,0xdc
  405faa:	pop    ecx
  405fab:	je     0x405f73
  405fad:	xchg   esp,eax
  405fae:	retf   
  405faf:	dec    esi
  405fb0:	test   DWORD PTR [edx+0x7d],ebx
  405fb3:	imul   eax,DWORD PTR [ebx-0x71],0xa9cd6fa9
  405fba:	out    0xea,al
  405fbc:	loop   0x406001
  405fbe:	mov    cl,0x26
  405fc0:	cmc    
  405fc1:	xchg   ecx,eax
  405fc2:	(bad)  
  405fc3:	mov    dh,0x2b
  405fc5:	inc    edx
  405fc6:	ds (bad) 
  405fc8:	shl    dh,1
  405fca:	clc    
  405fcb:	push   ss
  405fcc:	aad    0xf0
  405fce:	out    dx,eax
  405fcf:	mov    sp,0x16dd
  405fd3:	jb     0x405fc5
  405fd5:	xlat   BYTE PTR ds:[ebx]
  405fd6:	(bad)  
  405fd7:	not    BYTE PTR [edx+edi*2]
  405fda:	out    0x84,eax
  405fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fdd:	das    
  405fde:	outs   dx,DWORD PTR ds:[esi]
  405fdf:	pop    esi
  405fe0:	out    0xd9,al
  405fe2:	inc    edx
  405fe3:	mov    ah,0xb2
  405fe5:	div    DWORD PTR [edi-0x576e4ffa]
  405feb:	es jge 0x406043
  405fee:	push   eax
  405fef:	bound  esp,QWORD PTR [ebx+eiz*4-0x4d]
  405ff3:	add    DWORD PTR [eax+0x7e],0x370538cb
  405ffa:	test   eax,0x27b5bdb3
  405fff:	mov    cl,0x87
  406001:	ja     0x406061
  406003:	push   ds
  406004:	cmp    eax,0x265b5015
  406009:	or     dl,BYTE PTR [esp+esi*1-0x69]
  40600d:	sbb    al,0xd4
  40600f:	push   0xffffffef
  406011:	sub    DWORD PTR [edx+0x77],edx
  406014:	add    esi,DWORD PTR [ebp+ebp*8+0x72132fd0]
  40601b:	lds    ecx,FWORD PTR [esi+0x76b36f43]
  406021:	pop    esp
  406022:	ficom  WORD PTR [ebx+0x322eb9ed]
  406028:	out    0xe5,al
  40602a:	fs push ss
  40602c:	popf   
  40602d:	ret    0x27f
  406030:	sbb    eax,0x22edae0d
  406035:	cmp    eax,0x485b28bb
  40603a:	(bad)  
  40603b:	and    cl,BYTE PTR [ebp+0x685bc638]
  406041:	rol    BYTE PTR [edx+0xc],1
  406044:	out    0x47,al
  406046:	xor    eax,0x945606fc
  40604b:	popf   
  40604c:	pop    esi
  40604d:	xchg   esp,eax
  40604e:	lea    ecx,[ecx+esi*2-0x63]
  406052:	stos   BYTE PTR es:[edi],al
  406053:	add    eax,0x3a44c51f
  406058:	xchg   bx,ax
  40605a:	out    0xa2,eax
  40605c:	mov    bl,cl
  40605e:	shl    DWORD PTR [ebp-0x5b9ab87e],0x3a
  406065:	into   
  406066:	sub    DWORD PTR [eax-0x21],0x88099b07
  40606d:	imul   esi,DWORD PTR [eax+0x69],0x584ab36e
  406074:	imul   esp,eax,0x60b74b9b
  40607a:	add    al,0x6f
  40607c:	or     dh,BYTE PTR [esi]
  40607e:	pop    es
  40607f:	mov    bl,0xe9
  406081:	out    0x43,eax
  406083:	aam    0xc4
  406085:	jge    0x406019
  406087:	mov    ds:0xf2e21ea,al
  40608c:	pop    es
  40608d:	xor    DWORD PTR [esi],ebx
  40608f:	jecxz  0x4060c9
  406091:	pop    ebp
  406092:	fsubr  DWORD PTR [ecx]
  406094:	shl    DWORD PTR [ebp-0x68],cl
  406097:	fld    QWORD PTR [ebx]
  406099:	xor    BYTE PTR [ebp+0x2767a44f],bh
  40609f:	cmp    BYTE PTR [eax+0x5c4a1d7d],dl
  4060a5:	(bad)
  4060a8:	jmp    0x90f94f6c
  4060ad:	dec    eax
  4060ae:	xchg   edx,eax
  4060af:	or     eax,0xd8eba70f
  4060b4:	mov    al,0x84
  4060b6:	adc    cl,BYTE PTR [esi+0x71bfa53]
  4060bc:	sbb    esp,ebp
  4060be:	mov    bl,0xf8
  4060c0:	adc    esi,DWORD PTR [ebx+0x6752f3da]
  4060c6:	mov    edx,0xb7027b90
  4060cb:	ret    
  4060cc:	dec    eax
  4060cd:	aad    0xd3
  4060cf:	inc    ebp
  4060d0:	fistp  DWORD PTR [ebx-0x36]
  4060d3:	dec    ebp
  4060d4:	jno    0x406057
  4060d6:	inc    ecx
  4060d7:	nop
  4060d8:	rcr    BYTE PTR [edx-0x247e4b49],0xc
  4060df:	mov    bl,0x3e
  4060e1:	mov    ds:0x59d453ba,eax
  4060e6:	clc    
  4060e7:	push   ecx
  4060e8:	repnz mov al,ds:0x712b3275
  4060ee:	and    al,0x6f
  4060f0:	sub    BYTE PTR [edi+edi*4],bh
  4060f3:	add    eax,0xd19ad523
  4060f8:	xchg   esi,edi
  4060fa:	cld    
  4060fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060fc:	add    eax,0x1324e9b8
  406101:	add    BYTE PTR [esp+edi*1],0xd2
  406105:	repnz arpl WORD PTR [ebp-0x34180e27],dx
  40610c:	je     0x4060ee
  40610e:	dec    esp
  40610f:	scas   eax,DWORD PTR es:[edi]
  406110:	push   ds
  406111:	in     al,dx
  406112:	dec    edi
  406113:	pusha  
  406114:	clc    
  406115:	xchg   BYTE PTR [ecx+edi*2+0x2058a1fb],cl
  40611c:	std    
  40611d:	jge    0x4060dd
  40611f:	popf   
  406120:	test   eax,0xbb2df4c5
  406125:	outs   dx,BYTE PTR ds:[esi]
  406126:	inc    ecx
  406127:	and    eax,0x98f62016
  40612c:	cmp    ebp,0xffffffe4
  40612f:	jle    0x406180
  406131:	int3   
  406132:	cli    
  406133:	mov    cs,WORD PTR [ecx+0x43386303]
  406139:	std    
  40613a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40613b:	dec    esi
  40613c:	or     DWORD PTR [ebx],ebp
  40613e:	ret    
  40613f:	cmp    bl,cl
  406141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406142:	arpl   bx,sp
  406144:	cmp    al,BYTE PTR [edx+eax*1]
  406147:	pusha  
  406148:	in     eax,0xd9
  40614a:	ins    DWORD PTR es:[edi],dx
  40614b:	les    eax,FWORD PTR [ebx+0x3b]
  40614e:	aas    
  40614f:	js     0x4061aa
  406151:	lahf   
  406152:	jnp    0x406135
  406154:	scas   al,BYTE PTR es:[edi]
  406155:	push   ds
  406156:	mov    ebx,0x6b20ca7a
  40615b:	xchg   edi,eax
  40615c:	cwde   
  40615d:	pop    es
  40615e:	arpl   WORD PTR [esi-0x7dd4ddd1],bp
  406164:	jge    0x4061d6
  406166:	test   ch,ch
  406168:	push   eax
  406169:	pop    esp
  40616a:	push   ebp
  40616b:	push   0xf2782b2
  406170:	popa   
  406171:	mov    DWORD PTR [esp+ecx*4],ecx
  406174:	push   edi
  406175:	push   edi
  406176:	jae    0x406199
  406178:	ss out dx,eax
  40617a:	mov    al,ds:0x6deb1c6c
  40617f:	add    bh,bl
  406181:	inc    edx
  406182:	xchg   edi,eax
  406183:	popf   
  406184:	fcmovu st,st(5)
  406186:	call   0xdf3e:0x7854c128
  40618d:	push   0xffffff8b
  40618f:	enter  0xf0b,0x2d
  406193:	ins    BYTE PTR es:[edi],dx
  406194:	js     0x40614e
  406196:	aaa    
  406197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406198:	clc    
  406199:	mov    cl,0xeb
  40619b:	out    dx,al
  40619c:	rcl    DWORD PTR [eax],0xd5
  40619f:	and    DWORD PTR [eax-0x6b056e9e],eax
  4061a5:	cmp    dl,0x19
  4061a8:	arpl   WORD PTR [ebx-0x21],si
  4061ab:	mov    esi,?
  4061ad:	mov    dh,0x17
  4061af:	push   0x6c
  4061b1:	mov    dh,0x2c
  4061b3:	ret    
  4061b4:	ja     0x406137
  4061b6:	push   edi
  4061b7:	enter  0xe261,0x92
  4061bb:	nop
  4061bc:	push   0x70
  4061be:	sub    al,0xb
  4061c0:	(bad)  
  4061c1:	sbb    ebx,DWORD PTR [ecx-0x70]
  4061c4:	push   ebx
  4061c5:	leave  
  4061c6:	dec    ecx
  4061c7:	sbb    al,0x2a
  4061c9:	imul   esp,DWORD PTR [eax+0x7b],0xb33ef084
  4061d0:	mov    eax,DWORD PTR [edi-0x4d466a26]
  4061d6:	xlat   BYTE PTR ds:[ebx]
  4061d7:	ins    BYTE PTR es:[edi],dx
  4061d8:	inc    ebx
  4061d9:	add    eax,DWORD PTR [ebp+0x33]
  4061dc:	ffree  st(0)
  4061de:	or     eax,0x8ac78bcf
  4061e3:	cmc    
  4061e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e5:	sub    ebx,DWORD PTR [ebx+0x7f1e8e13]
  4061eb:	pop    ecx
  4061ec:	imul   esp,DWORD PTR [edi-0x13],0xffffff82
  4061f0:	fdiv   st,st(4)
  4061f2:	out    dx,al
  4061f3:	dec    ebx
  4061f4:	mov    eax,edi
  4061f6:	popf   
  4061f7:	aam    0xb0
  4061f9:	xchg   eax,edx
  4061fb:	push   ebx
  4061fc:	and    BYTE PTR [esi-0x6c],bh
  4061ff:	out    0x63,al
  406201:	sbb    al,0x32
  406203:	hlt    
  406204:	loope  0x4061dc
  406206:	std    
  406207:	call   0x9870:0xb5de559c
  40620e:	xchg   ebp,eax
  40620f:	int3   
  406210:	adc    DWORD PTR [edx-0x70],edx
  406213:	test   DWORD PTR [ecx+edx*1-0xf],esi
  406217:	test   DWORD PTR [esi-0x7c95ec3c],ecx
  40621d:	adc    eax,0x1d1eeaae
  406222:	lea    esi,[edi-0x1e9f7279]
  406228:	cld    
  406229:	push   es
  40622a:	pop    ebp
  40622b:	push   ebx
  40622c:	aam    0xb2
  40622e:	jl     0x40627a
  406230:	push   ecx
  406231:	mov    eax,ds:0xa79e0dca
  406236:	sub    al,BYTE PTR [eax]
  406238:	stc    
  406239:	sbb    edx,DWORD PTR [edi]
  40623b:	scas   eax,DWORD PTR es:[edi]
  40623c:	sti    
  40623d:	xor    bl,ah
  40623f:	xchg   BYTE PTR [esi],dl
  406241:	imul   ebp,DWORD PTR [ebx+0x182c5869],0xffffffe1
  406248:	bound  esp,QWORD PTR [eax-0x15fae4cd]
  40624e:	mov    al,0xef
  406250:	jmp    0xfe7b:0x6c0f57d9
  406257:	mov    WORD PTR [eax+0x3d103760],?
  40625d:	jle    0x4062c4
  40625f:	out    dx,eax
  406260:	pusha  
  406261:	or     DWORD PTR [ecx-0xfe28960],ecx
  406267:	mov    WORD PTR [ecx+0x5a],cs
  40626a:	jg     0x40624d
  40626c:	push   edx
  40626d:	push   ds
  40626e:	jge    0x406222
  406270:	jecxz  0x4062ab
  406272:	jno    0x4062c8
  406274:	push   esi
  406275:	scas   eax,DWORD PTR es:[edi]
  406276:	dec    eax
  406277:	and    al,0x9a
  406279:	cmp    edi,edx
  40627b:	xor    ecx,DWORD PTR [ecx]
  40627d:	mov    bl,0xc9
  40627f:	popa   
  406280:	inc    ebx
  406281:	nop
  406282:	ror    DWORD PTR ds:0xc5acb2e9,1
  406288:	ja     0x406213
  40628a:	xchg   BYTE PTR [edi+ebp*8+0x63],ah
  40628e:	aaa    
  40628f:	(bad)  
  406290:	je     0x406294
  406292:	pop    ebx
  406293:	inc    edx
  406294:	fidiv  DWORD PTR [ebx]
  406296:	ret    
  406297:	sub    al,0x8
  406299:	mov    ebp,0x9ccaddfe
  40629e:	mov    ecx,0xe59569d3
  4062a3:	sbb    al,0x93
  4062a5:	(bad)  
  4062a6:	mov    bl,0xbc
  4062a8:	jnp    0x40628a
  4062aa:	lds    esp,FWORD PTR [esi+eax*1-0x1eebd13b]
  4062b1:	test   al,0x36
  4062b3:	xchg   ebp,eax
  4062b4:	adc    DWORD PTR [esi+0x64],edx
  4062b7:	into   
  4062b8:	adc    dl,ah
  4062ba:	ins    BYTE PTR es:[edi],dx
  4062bb:	add    eax,0x7e9a87fc
  4062c0:	inc    ebp
  4062c1:	mov    eax,ds:0x821a875e
  4062c6:	sub    BYTE PTR [edi-0x2fea7501],0xc1
  4062cd:	cmc    
  4062ce:	jle    0x4062eb
  4062d0:	add    DWORD PTR [ecx+ecx*4],edi
  4062d3:	jae    0x40634e
  4062d5:	pop    ss
  4062d6:	add    DWORD PTR [eax+0x209c6d4a],esi
  4062dc:	popa   
  4062dd:	jbe    0x406273
  4062df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e0:	cwde   
  4062e1:	shl    ch,0x2e
  4062e4:	xchg   DWORD PTR [edx-0x5ad4b3ac],ecx
  4062ea:	je     0x40628f
  4062ec:	mov    al,ds:0x1970739f
  4062f1:	mov    edx,0xd521f77b
  4062f6:	pop    ebx
  4062f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062f8:	pusha  
  4062f9:	xchg   ebp,eax
  4062fa:	adc    al,0x1d
  4062fc:	adc    BYTE PTR [ebp+0x1b45f7ce],dh
  406302:	mov    al,BYTE PTR [edi-0x67]
  406305:	xlat   BYTE PTR ds:[ebx]
  406306:	sbb    DWORD PTR [edi],esp
  406308:	outs   dx,DWORD PTR ds:[esi]
  406309:	push   eax
  40630a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630b:	fimul  DWORD PTR [esi]
  40630d:	dec    esp
  40630e:	jo     0x4062f6
  406310:	aas    
  406311:	push   ebx
  406312:	dec    ecx
  406313:	dec    ebx
  406314:	(bad)  
  406316:	mov    eax,0x7c61e042
  40631b:	idiv   BYTE PTR ds:0xbaa29f2f
  406321:	mov    ah,0x85
  406323:	pop    esi
  406324:	popf   
  406325:	ss fwait
  406327:	cld    
  406328:	inc    esp
  406329:	add    edi,ebp
  40632b:	aad    0xd2
  40632d:	add    al,0x11
  40632f:	mov    esp,0x8477e1eb
  406334:	adc    esi,DWORD PTR [esi+0x5ba44925]
  40633a:	jge    0x40635c
  40633c:	push   ds
  40633d:	adc    DWORD PTR [eax],ecx
  40633f:	dec    edi
  406340:	xchg   ebp,eax
  406341:	dec    ebx
  406342:	mov    ebp,DWORD PTR ds:0x7aa8fdca
  406348:	pop    edx
  406349:	lods   eax,DWORD PTR ds:[esi]
  40634a:	repz jnp 0x4062d7
  40634d:	dec    esp
  40634e:	(bad)  
  406350:	(bad)  
  406351:	hlt    
  406352:	es int 0xc0
  406355:	std    
  406356:	adc    ah,BYTE PTR [ecx-0x42acbc0b]
  40635c:	adc    eax,0xa884198e
  406361:	cmc    
  406362:	jle    0x406344
  406364:	and    DWORD PTR [ecx+0x10f65e66],esp
  40636a:	mov    al,ds:0x6844b9ed
  40636f:	sbb    BYTE PTR [edi],0x48
  406372:	ja     0x4063cf
  406374:	push   ds
  406375:	std    
  406376:	outs   dx,BYTE PTR ds:[esi]
  406377:	sub    BYTE PTR [edx+ecx*1+0x60],bl
  40637b:	(bad)  
  40637c:	sbb    edi,ebp
  40637e:	sub    eax,0x7a3e7a47
  406383:	sub    BYTE PTR [eax-0xc],cl
  406386:	call   0x48e71522
  40638b:	or     ah,ch
  40638d:	daa    
  40638e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638f:	jg     0x40631f
  406391:	mov    esi,0x16f0cd96
  406396:	imul   BYTE PTR cs:[ebx]
  406399:	out    0xe7,al
  40639b:	cmp    DWORD PTR [esi],ebp
  40639d:	sub    DWORD PTR [ecx],ebx
  40639f:	xchg   DWORD PTR [ebx],edx
  4063a1:	retf   
  4063a2:	or     eax,0x600354f4
  4063a7:	inc    edi
  4063a8:	dec    edx
  4063a9:	mov    dl,0xde
  4063ab:	jns    0x4063d0
  4063ad:	xchg   esi,eax
  4063ae:	xchg   esi,eax
  4063af:	test   DWORD PTR ds:0x1623c711,0x41d94c75
  4063b9:	jle    0x4063ce
  4063bb:	int    0x18
  4063bd:	aaa    
  4063be:	or     eax,0x6ee66a28
  4063c3:	aam    0x82
  4063c5:	aaa    
  4063c6:	popa   
  4063c7:	or     dh,dh
  4063c9:	push   0x41
  4063cb:	retf   
  4063cc:	fild   WORD PTR [esi+0x7dd98d70]
  4063d2:	in     eax,0x8
  4063d4:	in     al,dx
  4063d5:	fnsave [edi]
  4063d7:	xchg   ecx,eax
  4063d8:	or     al,0x30
  4063da:	add    edi,edx
  4063dc:	sbb    eax,0xe11679c6
  4063e1:	xchg   esi,eax
  4063e2:	pop    ecx
  4063e3:	dec    ebx
  4063e4:	inc    edi
  4063e5:	sbb    eax,0x78c4ed5a
  4063ea:	cmp    BYTE PTR [edx+0x49],dh
  4063ed:	loopne 0x40643e
  4063ef:	or     eax,0x72f68d3c
  4063f4:	test   al,0xab
  4063f6:	sahf   
  4063f7:	ss retf 0x8cac
  4063fb:	mov    cl,0xba
  4063fd:	lods   eax,DWORD PTR ds:[esi]
  4063fe:	fcom   QWORD PTR [ebp-0x62]
  406401:	push   edi
  406402:	(bad)  
  406403:	call   0x7fdc:0xcae2c032
  40640a:	lock ret 0xa12f
  40640e:	mov    edi,DWORD PTR [eax-0x29]
  406411:	ret    0x42c0
  406414:	and    al,0xdc
  406416:	repnz and edx,DWORD PTR ds:0xd90b287e
  40641d:	imul   dh
  40641f:	loope  0x406465
  406421:	lahf   
  406422:	jmp    DWORD PTR [ebp+0x3b]
  406425:	push   eax
  406426:	std    
  406427:	dec    esi
  406428:	adc    al,0x3a
  40642a:	mov    al,0x13
  40642c:	mov    eax,ds:0x5815288a
  406431:	mov    edi,0xa716ab99
  406436:	dec    edi
  406437:	data16 je 0x4063ed
  40643a:	xor    dh,al
  40643c:	or     BYTE PTR [edx+edx*8],0xe7
  406440:	in     al,0x33
  406442:	adc    DWORD PTR [ebp+0x1443cd39],ebp
  406448:	js     0x406495
  40644a:	leave  
  40644b:	mov    ecx,0x3f7702f6
  406450:	lea    esp,[ebx]
  406452:	int    0xcf
  406454:	repnz sub eax,0x880ebd58
  40645a:	fucomi st,st(2)
  40645c:	daa    
  40645d:	gs aam 0xb2
  406460:	sub    al,0x60
  406462:	and    eax,0xbfee7bab
  406467:	sub    dh,BYTE PTR [bx+si+0x19b6]
  40646c:	es pop edx
  40646e:	scas   al,BYTE PTR es:[edi]
  40646f:	ja     0x4064c3
  406471:	fsubr  QWORD PTR [esi]
  406473:	pop    esi
  406474:	fsubr  st(2),st
  406476:	xchg   esp,eax
  406477:	adc    ch,ah
  406479:	les    ebp,FWORD PTR [esi-0x5674b30d]
  40647f:	mov    al,0x14
  406481:	(bad)
  406486:	sbb    al,0xcd
  406488:	jmp    0x4064db
  40648a:	in     al,dx
  40648b:	jecxz  0x4064b0
  40648d:	sbb    bh,dl
  40648f:	out    0xd3,eax
  406491:	jl     0x4064a0
  406493:	inc    edx
  406494:	int3   
  406495:	jg     0x40649d
  406497:	pop    ebp
  406498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406499:	int    0x49
  40649b:	cmp    BYTE PTR [ecx-0x1a58e43c],ah
  4064a1:	enter  0xa614,0xe6
  4064a5:	or     eax,0xffd8c9b7
  4064aa:	jmp    0x4064ae
  4064ac:	pop    ss
  4064ad:	sahf   
  4064ae:	jmp    0x4064cf
  4064b0:	(bad)  
  4064b1:	loop   0x406519
  4064b3:	out    0x73,eax
  4064b5:	std    
  4064b6:	out    dx,eax
  4064b7:	xor    DWORD PTR [eax-0x54b730e4],edx
  4064bd:	cmc    
  4064be:	int    0x7a
  4064c0:	outs   dx,BYTE PTR ds:[esi]
  4064c1:	push   edx
  4064c2:	aaa    
  4064c3:	jmp    0x9788f7c6
  4064c8:	sbb    al,0x57
  4064ca:	loop   0x4064b1
  4064cc:	push   esp
  4064cd:	ds mov dh,0xec
  4064d0:	or     esi,edi
  4064d2:	sti    
  4064d3:	mov    ds:0x40b700a,al
  4064d8:	pop    ss
  4064d9:	mov    al,0x72
  4064db:	or     DWORD PTR [edx+esi*2+0x52],ecx
  4064df:	pusha  
  4064e0:	xchg   esp,eax
  4064e1:	fcomp  QWORD PTR [ebp+0x23]
  4064e4:	or     cl,BYTE PTR [ecx-0xf0c8a59]
  4064ea:	or     ah,bh
  4064ec:	popa   
  4064ed:	rcl    BYTE PTR ds:0x58bf524b,0x7e
  4064f4:	stos   DWORD PTR es:[edi],eax
  4064f5:	retf   0xa679
  4064f8:	jle    0x40652d
  4064fa:	not    DWORD PTR [ecx]
  4064fc:	inc    ecx
  4064fd:	ret    0xddbc
  406500:	in     eax,dx
  406501:	push   ebp
  406502:	and    DWORD PTR ss:[ecx+0x75],esi
  406506:	dec    esi
  406507:	rep ins DWORD PTR es:[edi],dx
  406509:	outs   dx,DWORD PTR ds:[esi]
  40650a:	jp     0x406532
  40650c:	sbb    ch,BYTE PTR ds:0xcbe0a6c9
  406512:	lods   eax,DWORD PTR ds:[esi]
  406513:	xlat   BYTE PTR ds:[ebx]
  406514:	pop    esi
  406515:	retf   0x8d1e
  406518:	adc    eax,0x226a3bd8
  40651d:	jmp    0x4288:0x9c4212eb
  406524:	cmc    
  406525:	into   
  406526:	adc    esi,eax
  406528:	sub    BYTE PTR [edi+0x56],al
  40652b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40652c:	dec    edx
  40652d:	inc    edx
  40652e:	adc    DWORD PTR ds:0x600fe902,edi
  406534:	jbe    0x4064dd
  406536:	int    0xa4
  406538:	in     eax,dx
  406539:	fisttp DWORD PTR ds:0xc96e3862
  40653f:	iret   
  406540:	sahf   
  406541:	mov    edi,0x4eec424a
  406546:	mov    cl,0xb7
  406548:	cmc    
  406549:	out    0xdf,al
  40654b:	mov    esp,0x45da70dd
  406550:	iret   
  406551:	fwait
  406552:	mov    ss,WORD PTR [ebx+esi*8]
  406555:	push   ebx
  406556:	mov    esi,0x723cd6bc
  40655b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655c:	xchg   edx,eax
  40655d:	aas    
  40655e:	add    BYTE PTR [eax-0x5210c92f],cl
  406564:	(bad)  
  406565:	mov    ah,0x3c
  406567:	fist   WORD PTR [edi+0x6d04715d]
  40656d:	bound  edx,QWORD PTR [edx]
  40656f:	mov    ecx,0x384c05f
  406574:	add    al,0x72
  406576:	sub    al,0x97
  406578:	sti    
  406579:	iret   
  40657a:	ds in  eax,dx
  40657c:	scas   al,BYTE PTR es:[edi]
  40657d:	scas   al,BYTE PTR es:[edi]
  40657e:	retf   
  40657f:	pusha  
  406580:	inc    esp
  406581:	sub    al,0xb2
  406583:	out    0x3a,eax
  406585:	out    0x91,al
  406587:	clc    
  406588:	fs jno 0x4065c4
  40658b:	(bad)  
  40658d:	cdq    
  40658e:	pop    ebx
  40658f:	retf   
  406590:	scas   al,BYTE PTR es:[edi]
  406591:	adc    BYTE PTR [ebx+ecx*4-0x71c7f679],al
  406598:	retf   
  406599:	or     edx,DWORD PTR [ebp+0xfae0d61]
  40659f:	fwait
  4065a0:	push   eax
  4065a1:	loopne 0x406543
  4065a3:	je     0x4065e0
  4065a5:	cmp    DWORD PTR [ecx],ebx
  4065a7:	jb     0x40660b
  4065a9:	adc    al,BYTE PTR [edx]
  4065ab:	inc    edi
  4065ac:	adc    eax,0x8306735
  4065b1:	xchg   edx,eax
  4065b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b3:	jnp    0x40659b
  4065b5:	test   DWORD PTR [esi],esp
  4065b7:	repnz push cs
  4065b9:	jnp    0x40660e
  4065bb:	dec    esi
  4065bc:	mov    bh,0xa7
  4065be:	jl     0x406543
  4065c0:	xchg   ebx,eax
  4065c1:	shl    BYTE PTR [edx+esi*8],1
  4065c4:	call   FWORD PTR [edi+ebx*2-0x42]
  4065c8:	int    0x70
  4065ca:	push   es
  4065cb:	cmp    BYTE PTR [ebp+esi*4+0x5cc132a],dh
  4065d2:	arpl   WORD PTR [ebx+0x58],bp
  4065d5:	sti    
  4065d6:	push   0x763c01a
  4065db:	js     0x40665a
  4065dd:	and    dh,0x29
  4065e0:	gs push edx
  4065e2:	popf   
  4065e3:	scas   al,BYTE PTR es:[edi]
  4065e4:	stos   BYTE PTR es:[edi],al
  4065e5:	sub    eax,0xb10fa39b
  4065ea:	clc    
  4065eb:	(bad)  
  4065ec:	sbb    BYTE PTR [edx+0x72dcce16],bh
  4065f2:	das    
  4065f3:	jbe    0x4065e3
  4065f5:	mov    al,ds:0xe870db9c
  4065fa:	add    DWORD PTR [esi+eax*2],eax
  4065fd:	xor    al,0x5a
  4065ff:	mov    bl,0x37
  406601:	xor    eax,0xbc91c3a4
  406606:	adc    al,BYTE PTR [edi]
  406608:	push   es
  406609:	leave  
  40660a:	(bad)  
  40660c:	lods   al,BYTE PTR ds:[esi]
  40660d:	xchg   DWORD PTR [ebx+eiz*2],esi
  406610:	loope  0x40660e
  406612:	jg     0x406628
  406614:	dec    esp
  406615:	lods   eax,DWORD PTR ds:[esi]
  406616:	inc    edi
  406617:	jge    0x40663b
  406619:	inc    edi
  40661a:	int3   
  40661b:	aad    0xe8
  40661d:	test   DWORD PTR [edi-0x5d874747],edx
  406623:	jae    0x37f3933e
  406629:	aam    0xaf
  40662b:	pop    ss
  40662c:	repnz pop ss
  40662e:	jmp    0x4065ea
  406630:	mov    ss,WORD PTR [ebx-0x5]
  406633:	push   es
  406634:	dec    ecx
  406635:	inc    esp
  406636:	pop    edx
  406637:	mov    ebx,0x807ff344
  40663c:	lods   eax,DWORD PTR ds:[esi]
  40663d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40663e:	sbb    cl,BYTE PTR [ebp+0x74]
  406641:	retf   0xb052
  406644:	jmp    0x4065d0
  406646:	pop    edx
  406647:	int3   
  406648:	mov    sp,si
  40664b:	xchg   ecx,eax
  40664c:	lahf   
  40664d:	and    al,BYTE PTR [ebx-0x36b138aa]
  406653:	xor    BYTE PTR [edx+0xb],dl
  406656:	clc    
  406657:	xor    BYTE PTR [esi+0x21],0x48
  40665b:	sbb    ecx,esp
  40665d:	sahf   
  40665e:	ins    BYTE PTR es:[edi],dx
  40665f:	or     eax,0x587d6385
  406664:	and    dl,BYTE PTR ds:0x73f823a1
  40666a:	stc    
  40666b:	cmp    edi,DWORD PTR ds:0x2d16b95f
  406671:	dec    ebp
  406672:	cmp    bl,BYTE PTR [edi+0x15]
  406675:	jp     0x40661c
  406677:	test   eax,0xc39ace8
  40667c:	(bad)  
  40667d:	sub    al,0xd5
  40667f:	imul   edi,DWORD PTR [edx+esi*8],0x6bcac11a
  406686:	popa   
  406687:	cld    
  406688:	and    eax,0xa7f1fb0c
  40668d:	outs   dx,DWORD PTR ds:[esi]
  40668e:	xor    eax,0xd22aa8b5
  406693:	add    DWORD PTR [ebp-0x44],eax
  406696:	gs jae 0x406693
  406699:	into   
  40669a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40669b:	pusha  
  40669c:	jo     0x406620
  40669e:	arpl   WORD PTR [edx-0x20187f83],sp
  4066a4:	inc    edx
  4066a5:	jo     0x406661
  4066a7:	mov    esi,0xe84c3e16
  4066ac:	test   al,0x9a
  4066ae:	test   DWORD PTR [esi-0x2f75d1ef],esp
  4066b4:	(bad)  
  4066b5:	in     eax,0xd6
  4066b7:	in     eax,dx
  4066b8:	popa   
  4066b9:	call   0xd203:0xb2d66877
  4066c0:	jecxz  0x406651
  4066c2:	and    ebp,DWORD PTR [edx-0x5c]
  4066c5:	loope  0x406699
  4066c7:	mov    al,0x84
  4066c9:	adc    esi,DWORD PTR [eax-0x61]
  4066cc:	(bad)
  4066d0:	fist   WORD PTR [ebx+0x1f4d56d]
  4066d6:	(bad)  
  4066d7:	into   
  4066d8:	adc    ah,bl
  4066da:	sub    ebp,DWORD PTR [ecx+0x737c3fd2]
  4066e0:	mov    ebp,DWORD PTR [ecx]
  4066e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e3:	call   0x3c6d:0x66e00800
  4066ea:	scas   eax,DWORD PTR es:[edi]
  4066eb:	sub    DWORD PTR [esi+0x66],esi
  4066ee:	fiadd  WORD PTR [ebx]
  4066f0:	aad    0x8d
  4066f2:	sub    DWORD PTR [ecx],ebp
  4066f4:	gs aam 0x43
  4066f7:	(bad)  
  4066f9:	dec    esi
  4066fa:	dec    BYTE PTR [eax-0x12604e51]
  406700:	dec    esp
  406701:	test   eax,0x4dc1476b
  406706:	aad    0x42
  406708:	outs   dx,DWORD PTR ds:[esi]
  406709:	sbb    eax,0xc086701e
  40670e:	mov    cl,0x7e
  406710:	and    ah,BYTE PTR [eax-0x6df98a6d]
  406716:	or     eax,0x8ddde71f
  40671b:	fld    st(7)
  40671d:	inc    eax
  40671e:	adc    ch,BYTE PTR ds:0xc2e356fd
  406724:	cmovs  esp,DWORD PTR [edi]
  406727:	mov    BYTE PTR [edi-0x1f],bh
  40672a:	pop    esp
  40672b:	bound  ebx,QWORD PTR [eax-0x131ebef2]
  406731:	(bad)  
  406732:	leave  
  406733:	dec    ebx
  406734:	inc    eax
  406735:	(bad)
  406738:	call   0xc585:0x43a61e56
  40673f:	cmp    al,0x11
  406741:	es xchg ebp,eax
  406743:	cdq    
  406744:	sbb    al,0x5a
  406746:	add    DWORD PTR [esp+ebp*2+0xf],ebp
  40674a:	lock div BYTE PTR [ecx]
  40674d:	push   0x72
  40674f:	outs   dx,DWORD PTR ds:[esi]
  406750:	jl     0x406789
  406752:	pop    edi
  406753:	mov    edx,0xed3d6a90
  406758:	mov    ds:0xed710de7,al
  40675d:	inc    ebx
  40675e:	jno    0x4066fc
  406760:	sbb    BYTE PTR [ebp+0x7384c777],0xd3
  406767:	mov    ds:0x6182ac4d,eax
  40676c:	repz or edi,esp
  40676f:	or     cl,BYTE PTR gs:[edi-0x1a8d47c9]
  406776:	loope  0x406798
  406778:	stos   DWORD PTR es:[edi],eax
  406779:	adc    eax,0xdb10127f
  40677e:	std    
  40677f:	inc    ebx
  406780:	and    ch,BYTE PTR [ebx]
  406782:	xchg   BYTE PTR [eax+0x186e06a6],dl
  406788:	or     al,0x30
  40678a:	nop
  40678b:	push   edi
  40678c:	adc    BYTE PTR [edx],0x71
  40678f:	sbb    eax,0x332e6b7e
  406794:	jmp    0xcfa1:0x75ae0d2f
  40679b:	in     al,0x77
  40679d:	xchg   edx,eax
  40679e:	and    ch,BYTE PTR [ecx+0x3a]
  4067a1:	stos   BYTE PTR es:[edi],al
  4067a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a3:	xchg   esi,eax
  4067a4:	aas    
  4067a5:	retf   
  4067a6:	aam    0x8f
  4067a8:	mov    ecx,0x13ee2792
  4067ad:	xlat   BYTE PTR ds:[ebx]
  4067ae:	repz or al,0x54
  4067b1:	test   BYTE PTR [esi-0x7c],cl
  4067b4:	mov    fs,WORD PTR [eax]
  4067b6:	scas   al,BYTE PTR es:[edi]
  4067b7:	inc    esp
  4067b8:	les    ebx,FWORD PTR [eax-0x72]
  4067bb:	test   al,0x3f
  4067bd:	cmp    DWORD PTR [edx],eax
  4067bf:	xor    esp,DWORD PTR [eax+0x61]
  4067c2:	invd   
  4067c4:	das    
  4067c5:	inc    ebp
  4067c6:	test   BYTE PTR ds:[ecx+0x1069c39b],0xf3
  4067ce:	sub    eax,0xe9c8861
  4067d3:	push   ecx
  4067d4:	pop    esi
  4067d5:	mov    WORD PTR [ebx],?
  4067d7:	xor    ebp,DWORD PTR [edx+0x6f38e29d]
  4067dd:	push   0x128e8952
  4067e2:	mov    edi,0x7cf7ce0
  4067e7:	jae    0x406865
  4067e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ea:	ja     0x4067aa
  4067ec:	jmp    0x40681b
  4067ee:	repnz push edx
  4067f0:	fsub   st(1),st
  4067f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f3:	or     BYTE PTR [esi-0x254adc1a],ch
  4067f9:	pop    eax
  4067fa:	xchg   edi,eax
  4067fb:	shr    BYTE PTR [eax+0x7f],1
  4067fe:	daa    
  4067ff:	or     cl,BYTE PTR [ebx+esi*1]
  406802:	push   edi
  406803:	in     al,dx
  406804:	out    dx,eax
  406805:	fcomp  st(2)
  406807:	sub    DWORD PTR ds:0x46dd90b6,0x480706a8
  406811:	cld    
  406812:	cli    
  406813:	xchg   esi,eax
  406814:	or     al,0x53
  406816:	cmp    esi,DWORD PTR [ebx]
  406818:	repz mov dh,0x83
  40681b:	mov    bl,0x10
  40681d:	mov    ds:0xba0ab0ce,eax
  406822:	adc    bl,al
  406824:	mov    eax,0xa5379d83
  406829:	xor    ah,BYTE PTR [ebp-0xf48ed63]
  40682f:	fs fistp QWORD PTR fs:[edx-0x13]
  406834:	loope  0x406801
  406836:	out    dx,al
  406837:	or     BYTE PTR [esi+edi*4+0x70],0x92
  40683c:	aas    
  40683d:	(bad)  
  40683f:	push   ebx
  406840:	mov    esp,0xb83f13d0
  406845:	js     0x406810
  406847:	inc    eax
  406848:	dec    edi
  406849:	add    eax,0x8eb1d3a8
  40684e:	sahf   
  40684f:	sub    edi,DWORD PTR [esp+eiz*2-0x10]
  406853:	dec    esp
  406854:	jmp    0x2a492f29
  406859:	dec    ecx
  40685a:	popa   
  40685b:	sub    ebx,edx
  40685d:	jp     0x40684d
  40685f:	adc    esp,eax
  406861:	stos   BYTE PTR es:[edi],al
  406862:	xor    al,0x63
  406864:	mov    eax,gs:0x2c3a7b64
  40686a:	fwait
  40686b:	cdq    
  40686c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686d:	push   cs
  40686e:	sbb    ecx,0x9f04297f
  406874:	pop    ss
  406875:	dec    edx
  406876:	fnsetpm(287 only) 
  406878:	sbb    al,0x8b
  40687a:	jp     0x4068b8
  40687c:	mov    WORD PTR [esi],ds
  40687e:	adc    DWORD PTR [esi-0x364972f4],esi
  406884:	inc    esi
  406885:	pop    ebx
  406886:	mov    ecx,0x2b36e3ce
  40688b:	(bad)  
  40688d:	jno    0x406836
  40688f:	fdiv   st(3),st
  406891:	stos   BYTE PTR es:[edi],al
  406892:	retf   0x3c59
  406895:	jge    0x4068a8
  406897:	or     eax,0x633ca06d
  40689c:	sub    al,0x3c
  40689e:	dec    edx
  40689f:	in     al,0x4a
  4068a1:	inc    ebx
  4068a2:	int    0xcd
  4068a4:	(bad)  
  4068a5:	es arpl dx,ax
  4068a8:	cwde   
  4068a9:	ss dec ebx
  4068ab:	out    dx,al
  4068ac:	jmp    0xfe8b17e4
  4068b1:	dec    edi
  4068b2:	nop
  4068b3:	mov    eax,ds:0xa3dd91b4
  4068b8:	add    esi,DWORD PTR [ecx]
  4068ba:	dec    ebx
  4068bb:	add    edx,ebx
  4068bd:	out    0x5f,eax
  4068bf:	and    eax,0x633932bd
  4068c4:	outs   dx,DWORD PTR ds:[esi]
  4068c5:	mov    ch,0xb0
  4068c7:	adc    eax,0x90f41dca
  4068cc:	and    BYTE PTR [edx],dh
  4068ce:	xor    BYTE PTR [edx],bh
  4068d0:	cmp    dh,BYTE PTR [ecx+edi*8-0x55]
  4068d4:	inc    ebx
  4068d5:	retf   0x6df5
  4068d8:	test   BYTE PTR [esi-0x314ab358],0x7e
  4068df:	mov    ebx,0xe91f7d03
  4068e4:	jg     0x406908
  4068e6:	lock push ebp
  4068e8:	jae    0x4068bf
  4068ea:	stos   DWORD PTR es:[edi],eax
  4068eb:	pop    esp
  4068ec:	fcom   QWORD PTR [ebx+0x9]
  4068ef:	ss cli 
  4068f1:	mov    ebx,0x6eb0f125
  4068f6:	leave  
  4068f7:	cmc    
  4068f8:	adc    DWORD PTR [esi],0xb6234f13
  4068fe:	mov    al,0x16
  406900:	scas   al,BYTE PTR es:[edi]
  406901:	ja     0x406947
  406903:	mov    al,0xf8
  406905:	mov    DWORD PTR [edx+0x6be109e6],edi
  40690b:	and    esi,DWORD PTR [ebx+0x19]
  40690e:	int    0x64
  406910:	jmp    0x98440e3c
  406915:	fwait
  406916:	add    esi,esi
  406918:	and    dh,BYTE PTR [ecx+eiz*8-0x1767eba0]
  40691f:	jb     0x4068f1
  406921:	pop    esp
  406922:	enter  0xba0,0x9a
  406926:	mov    dl,0x39
  406928:	mov    ds:0x8e6911ed,eax
  40692d:	cwde   
  40692e:	pop    eax
  40692f:	leave  
  406930:	sbb    esp,esi
  406932:	pusha  
  406933:	pop    ds
  406934:	ss popf 
  406936:	icebp  
  406937:	adc    bl,BYTE PTR [ebx+0x8c00c6c]
  40693d:	add    BYTE PTR [ecx],ch
  40693f:	adc    esi,DWORD PTR [edi-0x1a]
  406942:	jbe    0x406974
  406944:	jae    0x40693a
  406946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406947:	pushf  
  406948:	pop    esp
  406949:	lods   eax,DWORD PTR ds:[esi]
  40694a:	das    
  40694b:	jae    0x40698d
  40694d:	ret    
  40694e:	ja     0x4069c1
  406950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406951:	rcr    BYTE PTR [eax+0x1ca6c650],1
  406957:	aaa    
  406958:	popf   
  406959:	dec    esi
  40695a:	dec    esp
  40695b:	add    bl,ah
  40695d:	xchg   ecx,eax
  40695e:	cs xchg ebp,eax
  406960:	mov    WORD PTR [eax+0x28a355fa],?
  406966:	fisttp DWORD PTR [ebp+0x5e1ed675]
  40696c:	adc    BYTE PTR [eax+0x8],ch
  40696f:	cld    
  406970:	mov    eax,ds:0x402223ee
  406975:	call   0x9f477438
  40697a:	pop    ebp
  40697b:	dec    eax
  40697c:	jge    0x406909
  40697e:	and    al,0x3f
  406980:	cdq    
  406981:	adc    esp,edi
  406983:	aaa    
  406984:	aad    0xfd
  406986:	xchg   DWORD PTR [esi-0x5832c731],ecx
  40698c:	sti    
  40698d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698f:	inc    edx
  406990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406991:	push   cs
  406992:	mov    edx,0xeb47f29e
  406997:	sbb    DWORD PTR [edi+0x31],eax
  40699a:	bound  ebx,QWORD PTR [eax-0x675f9b1f]
  4069a0:	jle    0x406971
  4069a2:	es call 0xd8fa:0x6560082f
  4069aa:	into   
  4069ab:	mov    BYTE PTR [ecx],0x4c
  4069ae:	pop    ebx
  4069af:	pop    ebp
  4069b0:	scas   al,BYTE PTR es:[edi]
  4069b1:	mov    ah,cl
  4069b3:	pusha  
  4069b4:	mov    DWORD PTR [ebx+0x53082a87],eax
  4069ba:	jp     0x406961
  4069bc:	pop    edx
  4069bd:	xor    BYTE PTR [ebx+0x1348cdc4],bh
  4069c3:	dec    ebx
  4069c4:	adc    al,0xb7
  4069c6:	mov    es,WORD PTR [esi-0x715733a4]
  4069cc:	into   
  4069cd:	or     al,0xc6
  4069cf:	push   esp
  4069d0:	fs mov ah,0xfb
  4069d3:	and    al,0x3f
  4069d5:	adc    eax,0xdd1d8ec4
  4069da:	pop    ecx
  4069db:	dec    eax
  4069dc:	pop    es
  4069dd:	xor    al,0xdd
  4069df:	jno    0x406a10
  4069e1:	ja     0x406a38
  4069e3:	xchg   edx,eax
  4069e4:	call   0x440c8e28
  4069e9:	cmp    al,0x57
  4069eb:	adc    eax,0x6bfdb717
  4069f0:	fisubr DWORD PTR [ecx]
  4069f2:	jmp    0xd09b:0xbab
  4069f8:	cdq    
  4069f9:	ret    0x9030
  4069fc:	xchg   DWORD PTR [eax-0x5a900a23],ebp
  406a02:	mov    esi,0x5a760f2a
  406a07:	jl     0x406a2a
  406a09:	sub    al,0xb
  406a0b:	dec    edx
  406a0c:	ret    0xcd7e
  406a0f:	popf   
  406a10:	push   edi
  406a11:	popf   
  406a12:	imul   ebp,DWORD PTR [edx-0x57cdebf4],0xffffffdc
  406a19:	sub    cl,BYTE PTR [edi]
  406a1b:	mov    eax,0xf28867d6
  406a20:	aam    0x86
  406a22:	pushf  
  406a23:	test   BYTE PTR [ecx+ecx*1],dl
  406a26:	in     eax,dx
  406a27:	ror    DWORD PTR [ebx-0x53],1
  406a2a:	adc    al,0x5e
  406a2c:	mov    cl,0x52
  406a2e:	scas   eax,DWORD PTR es:[edi]
  406a2f:	les    esp,FWORD PTR [edx-0x24a1af12]
  406a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a36:	mov    eax,0x367f1262
  406a3b:	mov    edi,esi
  406a3d:	cs cli 
  406a3f:	and    ebp,ebx
  406a41:	arpl   WORD PTR ds:0xc7929284,dx
  406a47:	dec    esp
  406a48:	xchg   ecx,eax
  406a49:	repnz out 0xaa,al
  406a4c:	packuswb mm1,QWORD PTR [esi+0x66]
  406a50:	xchg   ecx,eax
  406a51:	dec    ecx
  406a52:	cmp    BYTE PTR [ecx-0x1b],dl
  406a55:	adc    al,0xac
  406a57:	add    ecx,DWORD PTR [edx]
  406a59:	inc    ebx
  406a5a:	fs in  eax,0x9a
  406a5d:	jb     0x406a07
  406a5f:	jae    0x406ace
  406a61:	ret    0xdaa6
  406a64:	mov    ebp,0x4eccfea8
  406a69:	aad    0x2
  406a6b:	push   eax
  406a6c:	adc    ah,al
  406a6e:	mov    ebx,0xbbe9cc73
  406a73:	mov    eax,0xc82e7a8e
  406a78:	mov    ds:0x1b76a3af,al
  406a7d:	jns    0x406ac2
  406a7f:	sub    BYTE PTR [esi+ebp*2],ch
  406a82:	in     eax,0x1b
  406a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a85:	jp     0x406ad4
  406a87:	paddb  mm5,mm6
  406a8a:	shr    eax,cl
  406a8c:	ret    
  406a8d:	call   0xb69d:0xc6c8ed9c
  406a94:	push   0x8189b79e
  406a99:	inc    ebp
  406a9a:	jmp    0x70d17c09
  406a9f:	loope  0x406aea
  406aa1:	mov    esp,0xaf1a936
  406aa6:	inc    ecx
  406aa7:	inc    edi
  406aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa9:	cld    
  406aaa:	jmp    0x8eb4f8a5
  406aaf:	aaa    
  406ab0:	jmp    0x20e:0xd51595e
  406ab7:	xchg   esi,eax
  406ab8:	daa    
  406ab9:	retf   
  406aba:	(bad)  
  406abb:	addr16 loopne 0x406aa3
  406abe:	or     eax,0xb98b77e7
  406ac3:	push   edx
  406ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac5:	mov    edx,0x2b09a094
  406aca:	imul   ebx,DWORD PTR [eax],0x78
  406acd:	outs   dx,BYTE PTR ds:[esi]
  406ace:	out    dx,al
  406acf:	and    al,0x27
  406ad1:	add    eax,0x60916d17
  406ad6:	cmp    eax,esp
  406ad8:	aam    0x53
  406ada:	lods   al,BYTE PTR ds:[esi]
  406adb:	pop    ds
  406adc:	test   eax,0x70062712
  406ae1:	cmp    eax,0xb1217bba
  406ae6:	pop    ds
  406ae7:	and    BYTE PTR [edx-0x41],dh
  406aea:	(bad)  
  406aeb:	lock es icebp 
  406aee:	xor    dh,BYTE PTR [edx+0x3c]
  406af1:	or     al,0xee
  406af3:	hlt    
  406af4:	fisubr WORD PTR [ecx+0x5a]
  406af7:	push   edx
  406af8:	cmp    BYTE PTR ds:0xc14caaca,ah
  406afe:	jp     0x406b59
  406b00:	(bad)  
  406b01:	mov    esp,0x3238addf
  406b06:	fst    DWORD PTR [edx]
  406b08:	or     al,0x98
  406b0a:	icebp  
  406b0b:	xchg   esi,eax
  406b0c:	mov    ds:0x83de507d,al
  406b11:	aas    
  406b12:	push   0x665133e6
  406b17:	sbb    eax,esi
  406b19:	jne    0x406b88
  406b1b:	sub    ax,si
  406b1e:	mov    dh,0xd4
  406b20:	mov    dh,0x36
  406b22:	xchg   esi,eax
  406b23:	pop    eax
  406b24:	enter  0xb54f,0xc4
  406b28:	sub    al,0xf4
  406b2a:	lds    ebx,FWORD PTR [ebx-0x8]
  406b2d:	xor    cl,ah
  406b2f:	lods   eax,DWORD PTR ds:[esi]
  406b30:	and    ebp,0x6e70a5c1
  406b36:	push   0x39c01bc5
  406b3b:	and    al,0x62
  406b3d:	jae    0x406b36
  406b3f:	nop
  406b40:	(bad)  
  406b41:	lods   al,BYTE PTR ds:[esi]
  406b42:	inc    esi
  406b43:	pop    edx
  406b44:	mov    bl,0xaa
  406b46:	pop    ss
  406b47:	sub    edx,DWORD PTR [edx+esi*8+0x73e4478]
  406b4e:	dec    edi
  406b4f:	lahf   
  406b50:	cmp    BYTE PTR [esi+0x1b55cbec],cl
  406b56:	push   edx
  406b57:	cmp    al,0xd7
  406b59:	mov    bl,bh
  406b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b5c:	or     esp,DWORD PTR [ecx+0x4c27532]
  406b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b63:	cmp    bl,ah
  406b65:	add    dl,cl
  406b67:	cmp    BYTE PTR [eax-0x3c],cl
  406b6a:	dec    eax
  406b6b:	xor    eax,0x753efa54
  406b70:	popf   
  406b71:	dec    ecx
  406b72:	out    0x2c,al
  406b74:	test   al,0xcb
  406b76:	and    eax,0xb4a00a8f
  406b7b:	or     eax,0xe573b59d
  406b80:	out    0x4b,eax
  406b82:	popa   
  406b83:	xchg   edx,eax
  406b84:	pop    ebp
  406b85:	mov    ah,BYTE PTR [ebx-0x29f97b5b]
  406b8b:	(bad)  
  406b8c:	les    esi,FWORD PTR [eax+eiz*1-0x61]
  406b90:	mov    eax,ds:0x94758236
  406b95:	xlat   BYTE PTR ds:[ebx]
  406b96:	jb     0x406b95
  406b98:	sub    eax,ecx
  406b9a:	mov    ch,0x4b
  406b9c:	out    0x5f,al
  406b9e:	sahf   
  406b9f:	nop
  406ba0:	arpl   WORD PTR [eax-0x47],bx
  406ba3:	push   ebx
  406ba4:	out    0x12,al
  406ba6:	jg     0x406b97
  406ba8:	je     0x406b2f
  406baa:	mov    ds:0x44b42ee4,al
  406baf:	xchg   edx,eax
  406bb0:	add    DWORD PTR [ebx-0xad2d361],eax
  406bb6:	lock cmp BYTE PTR [edx+ebp*2+0x5409b71],dh
  406bbe:	and    edi,ebp
  406bc0:	inc    ebp
  406bc1:	or     ch,BYTE PTR [esi-0x1e0df239]
  406bc7:	xchg   edi,eax
  406bc8:	loope  0x406bc4
  406bca:	xchg   edi,eax
  406bcb:	repnz push ds
  406bcd:	jae    0x406c00
  406bcf:	xchg   edi,eax
  406bd0:	and    ch,0x91
  406bd3:	cmp    al,0xf5
  406bd5:	shl    DWORD PTR [edi],0x74
  406bd8:	and    BYTE PTR [ebx-0x12],dl
  406bdb:	xlat   BYTE PTR ds:[ebx]
  406bdc:	cs in  eax,0xfb
  406bdf:	cmp    WORD PTR [eax+0x73],sp
  406be3:	je     0x406c13
  406be5:	lods   eax,DWORD PTR ds:[esi]
  406be6:	das    
  406be7:	lahf   
  406be8:	and    al,0xe0
  406bea:	int    0xed
  406bec:	(bad)  
  406bed:	rcr    BYTE PTR [esi+eax*1-0x12101d6b],cl
  406bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf5:	or     ebp,DWORD PTR [edi+ebp*1+0x4c]
  406bf9:	push   ebx
  406bfa:	sbb    esp,DWORD PTR [ebx+0x6204acec]
  406c00:	push   es
  406c01:	lock or bh,BYTE PTR [ebx]
  406c04:	push   ebp
  406c05:	or     DWORD PTR [edx],ebx
  406c07:	mov    edx,0x849c491c
  406c0c:	inc    edi
  406c0d:	mov    bl,0x25
  406c0f:	add    BYTE PTR [esi],dl
  406c11:	mov    edx,0x40932644
  406c16:	fnstsw WORD PTR [edx]
  406c18:	fcmovnbe st,st(1)
  406c1a:	jns    0x406bb9
  406c1c:	shl    DWORD PTR [edi+0x24],1
  406c1f:	call   0xf51679f9
  406c24:	mov    al,0xde
  406c26:	add    ecx,DWORD PTR [edx+0x799221cc]
  406c2c:	leave  
  406c2d:	or     esi,DWORD PTR [eax+0x14f53e74]
  406c33:	dec    ebx
  406c34:	xor    DWORD PTR [esi+0x2f],edx
  406c37:	inc    esi
  406c38:	fs test eax,0x62ae6b95
  406c3e:	loopne 0x406c9f
  406c40:	rcr    BYTE PTR [esi+0x7a],0x27
  406c44:	xor    eax,0x8b0c53b2
  406c49:	iret   
  406c4a:	imul   esi,DWORD PTR [ecx],0xffffffaa
  406c4d:	push   ss
  406c4e:	fsubr  DWORD PTR [edi+0x3b9727e4]
  406c54:	stc    
  406c55:	data16 cld 
  406c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c58:	mov    dl,0xeb
  406c5a:	sbb    eax,0xd66ce9b1
  406c5f:	vmulss xmm0,xmm7,DWORD PTR [ecx]
  406c63:	push   ss
  406c64:	bound  ecx,QWORD PTR [ebp-0x4ad34147]
  406c6a:	fisub  WORD PTR [eax+eax*2+0x4a0487cc]
  406c71:	push   ecx
  406c72:	xchg   edx,eax
  406c73:	push   eax
  406c74:	or     eax,0x50dc1935
  406c79:	loop   0x406c58
  406c7b:	xchg   esp,eax
  406c7c:	adc    al,0xed
  406c7e:	call   0x761d16bb
  406c83:	lods   eax,DWORD PTR ds:[esi]
  406c84:	and    DWORD PTR [edx+0x49],ebx
  406c87:	sbb    ebp,0xa2a06da
  406c8d:	loop   0x406cb3
  406c8f:	dec    edi
  406c90:	retf   0xe7a6
  406c93:	push   esi
  406c94:	add    eax,0x9bd90f16
  406c99:	pop    ss
  406c9a:	cli    
  406c9b:	popf   
  406c9c:	loope  0x406c53
  406c9e:	ret    
  406c9f:	outs   dx,BYTE PTR ds:[esi]
  406ca0:	sar    BYTE PTR [edi+0x10],0x69
  406ca4:	mov    WORD PTR [ecx],ss
  406ca6:	test   esp,esi
  406ca8:	mov    bh,0xf3
  406caa:	sub    BYTE PTR [eax-0x4a528234],bl
  406cb0:	outs   dx,DWORD PTR ds:[esi]
  406cb1:	fist   WORD PTR [ecx+esi*1]
  406cb4:	mov    cl,0xe6
  406cb6:	cmp    al,BYTE PTR [esi+0x7e]
  406cb9:	stos   DWORD PTR es:[edi],eax
  406cba:	jecxz  0x406cfb
  406cbc:	cdq    
  406cbd:	loope  0x406c84
  406cbf:	fiadd  WORD PTR [edi]
  406cc1:	(bad)  
  406cc2:	fs enter 0x848b,0x66
  406cc7:	and    cl,ch
  406cc9:	fild   DWORD PTR [esi]
  406ccb:	and    eax,DWORD PTR [ebp+0xaa20d5e]
  406cd1:	or     si,ax
  406cd4:	sahf   
  406cd5:	sbb    dl,BYTE PTR ds:0x1ab08835
  406cdb:	loope  0x406c85
  406cdd:	fwait
  406cde:	out    0xa,eax
  406ce0:	in     al,0xcc
  406ce2:	stos   DWORD PTR es:[edi],eax
  406ce3:	push   es
  406ce4:	in     eax,0x41
  406ce6:	jp     0x406d47
  406ce8:	(bad)  
  406ce9:	xor    esp,ebp
  406ceb:	pop    ds
  406cec:	mov    al,0xe8
  406cee:	add    DWORD PTR [ebp+0x5234c264],esi
  406cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf5:	std    
  406cf6:	inc    ebx
  406cf7:	loopne 0x406d22
  406cf9:	mov    ebx,0x849684c5
  406cfe:	adc    ch,BYTE PTR [edi+0x18f8203b]
  406d04:	xor    BYTE PTR [ebx-0xc48b98b],bl
  406d0a:	cmp    esp,DWORD PTR [ebp-0xdabcf1f]
  406d10:	sbb    al,0xa7
  406d12:	inc    ecx
  406d13:	jns    0x406cbb
  406d15:	and    DWORD PTR fs:[ebx],ebp
  406d18:	mov    WORD PTR [edi],ds
  406d1a:	retf   0x7e43
  406d1d:	and    al,0x5b
  406d1f:	(bad)  
  406d20:	sub    dh,bl
  406d22:	or     DWORD PTR [edi+edx*1+0x74],edi
  406d26:	sub    ecx,DWORD PTR [eax+0x41]
  406d29:	push   eax
  406d2a:	adc    BYTE PTR [edi],0x37
  406d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2e:	mov    ch,0x7a
  406d30:	sub    eax,0x213ba494
  406d35:	das    
  406d36:	sub    DWORD PTR [ecx-0x69],edi
  406d39:	mov    al,0xe7
  406d3b:	ret    
  406d3c:	test   al,0x85
  406d3e:	in     eax,0x28
  406d40:	sub    BYTE PTR [ebx],dl
  406d42:	gs cmp al,0x41
  406d45:	cdq    
  406d46:	mov    ch,0x28
  406d48:	mov    ecx,0x879b2a58
  406d4d:	xchg   ebx,eax
  406d4e:	out    dx,al
  406d4f:	xor    al,0x50
  406d52:	stc    
  406d53:	add    eax,ebx
  406d55:	mov    al,ds:0xe8c89d76
  406d5a:	ficom  DWORD PTR [ecx+0x30]
  406d5d:	nop
  406d5e:	lock arpl WORD PTR [edx+0x40],sp
  406d62:	dec    eax
  406d63:	mov    DWORD PTR [esi],eax
  406d65:	shr    edx,0xa2
  406d68:	test   al,0xb3
  406d6a:	pop    edx
  406d6b:	xchg   BYTE PTR [ebp-0x17],al
  406d6e:	(bad)  
  406d6f:	scas   al,BYTE PTR es:[edi]
  406d70:	xlat   BYTE PTR ds:[ebx]
  406d71:	(bad)  
  406d72:	push   es
  406d73:	aam    0x13
  406d75:	mov    BYTE PTR [ebx+ecx*8-0x1e],bl
  406d79:	aam    0x7b
  406d7b:	jl     0x406d12
  406d7d:	or     DWORD PTR [esi],ebx
  406d7f:	jl     0x406dc4
  406d81:	or     bl,BYTE PTR [edi]
  406d83:	xlat   BYTE PTR ds:[ebx]
  406d84:	xor    eax,0x63481a60
  406d89:	mov    ebp,0x91182c0b
  406d8e:	sbb    edx,ebp
  406d90:	inc    edi
  406d91:	cmp    DWORD PTR [ecx-0x60],edx
  406d94:	xchg   BYTE PTR [esi],bl
  406d96:	push   esp
  406d97:	je     0x406dbd
  406d99:	ficom  DWORD PTR [ebp-0x769dedc0]
  406d9f:	xor    BYTE PTR [esi+edi*4+0x40],cl
  406da3:	or     cl,ah
  406da5:	stc    
  406da6:	inc    ecx
  406da7:	inc    ebx
  406da8:	cdq    
  406da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406daa:	sub    esp,DWORD PTR [edx+0x63818f7]
  406db0:	sahf   
  406db1:	push   edx
  406db2:	pop    esp
  406db3:	clc    
  406db4:	sub    DWORD PTR [esi],eax
  406db6:	fidiv  WORD PTR [edi-0x11]
  406db9:	pop    edx
  406dba:	xor    al,0xa6
  406dbc:	mov    esp,0x3ac70d83
  406dc1:	inc    ebp
  406dc2:	mov    ah,0xac
  406dc4:	add    DWORD PTR [ebx-0xe],0xffffffb3
  406dc8:	mov    gs,WORD PTR [ecx]
  406dca:	scas   al,BYTE PTR es:[edi]
  406dcb:	mov    ds:0x367de815,al
  406dd0:	inc    ebx
  406dd1:	dec    edx
  406dd2:	cmp    esi,esp
  406dd4:	out    0xa9,al
  406dd6:	out    dx,eax
  406dd7:	inc    esi
  406dd8:	pop    ebp
  406dd9:	inc    ebp
  406dda:	cmp    DWORD PTR [ecx],edi
  406ddc:	in     eax,0xfa
  406dde:	pop    ss
  406ddf:	dec    eax
  406de0:	xor    ch,BYTE PTR [edx]
  406de2:	jmp    0xb1bf:0x597d
  406de8:	add    esi,ecx
  406dea:	int3   
  406deb:	sub    edx,DWORD PTR [ebx]
  406ded:	(bad)  
  406def:	xor    eax,0x85e3662c
  406df4:	js     0x406e2a
  406df6:	xchg   edi,eax
  406df7:	adc    bl,BYTE PTR [esi]
  406df9:	sti    
  406dfa:	xchg   ecx,eax
  406dfb:	or     edx,DWORD PTR [eax]
  406dfd:	out    0x9c,al
  406dff:	mov    ebx,0xc5b91861
  406e04:	pushf  
  406e05:	mov    ebp,0x4558279a
  406e0a:	xor    DWORD PTR [eax],ebx
  406e0c:	adc    edx,DWORD PTR [edi-0x22]
  406e0f:	fwait
  406e10:	inc    ebp
  406e11:	mov    ah,BYTE PTR fs:[ecx+0x6608571a]
  406e18:	jmp    0x22b8:0xb0578a16
  406e1f:	ror    al,1
  406e21:	and    bh,BYTE PTR [edx-0x5729c866]
  406e27:	sub    DWORD PTR ds:0x7bad5aa8,0xd
  406e2e:	loope  0x406e60
  406e30:	mov    ds:0x9a70f1f0,eax
  406e35:	stos   DWORD PTR es:[edi],eax
  406e36:	xor    edx,edi
  406e38:	loope  0x406e08
  406e3a:	mov    eax,0xc73dc37c
  406e3f:	dec    ebx
  406e40:	mov    esp,0xffb02019
  406e45:	ins    DWORD PTR es:[edi],dx
  406e46:	ficom  DWORD PTR [esi-0x45e77485]
  406e4c:	mov    dh,ah
  406e4e:	xchg   ecx,eax
  406e4f:	mov    esp,DWORD PTR [edi]
  406e51:	cmp    eax,DWORD PTR [edx+0x61b31fa9]
  406e57:	rcr    BYTE PTR [eax-0x22],0x5f
  406e5b:	adc    eax,0x8b42bf9b
  406e60:	pop    es
  406e61:	lods   eax,DWORD PTR ds:[esi]
  406e62:	dec    esp
  406e63:	pop    es
  406e64:	lock push ebx
  406e66:	jne    0x406e59
  406e68:	push   edx
  406e69:	mov    eax,ds:0x1039c1f5
  406e6e:	(bad)  
  406e6f:	xchg   ebx,eax
  406e70:	jecxz  0x406e8e
  406e72:	dec    ebp
  406e73:	sbb    al,0x44
  406e75:	pop    ds
  406e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e77:	in     al,dx
  406e78:	push   ebp
  406e79:	push   esi
  406e7a:	adc    DWORD PTR [ebp+0xe],ebp
  406e7d:	int3   
  406e7e:	dec    ebp
  406e7f:	adc    bl,BYTE PTR [edi-0x6a]
  406e82:	adc    al,0x44
  406e84:	ins    DWORD PTR es:[edi],dx
  406e85:	inc    ebx
  406e86:	lods   al,BYTE PTR ds:[esi]
  406e87:	aas    
  406e88:	nop
  406e89:	imul   ebx,DWORD PTR [edx-0x7c7203f7],0xc18bcbb7
  406e93:	mov    bh,ch
  406e95:	pop    edx
  406e96:	cmp    eax,0x530be214
  406e9b:	scas   eax,DWORD PTR es:[edi]
  406e9c:	dec    ecx
  406e9d:	(bad)  
  406e9e:	pop    ds
  406e9f:	sbb    eax,0xb4136063
  406ea4:	push   ebp
  406ea5:	adc    eax,DWORD PTR [edx]
  406ea7:	mov    bl,0x76
  406ea9:	test   BYTE PTR [ecx],0x70
  406eac:	jg     0x406ebe
  406eae:	xor    cl,BYTE PTR [esi]
  406eb0:	and    al,0x5d
  406eb2:	lods   al,BYTE PTR ds:[esi]
  406eb3:	and    eax,0x2de13a61
  406eb8:	test   DWORD PTR [ebp-0x2e],0x93cebca0
  406ebf:	imul   ecx,DWORD PTR ds:0x9ae3957a,0xfffffff9
  406ec6:	loopne 0x406eb0
  406ec8:	jmp    0x6a6e3b8b
  406ecd:	push   esp
  406ece:	lahf   
  406ecf:	pop    ss
  406ed0:	mov    ebp,0x89b0fd4b
  406ed5:	mov    BYTE PTR [ebx+ebx*1],0x8c
  406ed9:	test   eax,0x416920c9
  406ede:	push   edi
  406edf:	sti    
  406ee0:	dec    esi
  406ee1:	mov    DWORD PTR [edi+0x42e35e36],edi
  406ee7:	fadd   st,st(7)
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	xchg   esp,eax
  406eeb:	mov    esp,0x42a03b4e
  406ef0:	sub    esi,DWORD PTR [ebp+0x5aaca068]
  406ef6:	sahf   
  406ef7:	into   
  406ef8:	cwde   
  406ef9:	sbb    ecx,DWORD PTR [ebx-0x4bb3d401]
  406eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f00:	inc    esp
  406f01:	call   0x2460:0xdefb0ed3
  406f08:	sbb    eax,0xffb8868d
  406f0d:	mov    dl,BYTE PTR [edi-0x3e]
  406f10:	fcom   st(0)
  406f12:	not    eax
  406f14:	in     eax,0x67
  406f16:	inc    ecx
  406f17:	push   0xf4a9556
  406f1c:	push   ss
  406f1d:	mov    eax,ds:0xa2d06851
  406f22:	call   0x23b1d801
  406f27:	test   BYTE PTR [eax-0x3f],bh
  406f2a:	rcl    DWORD PTR [edi+esi*2],0x9b
  406f2e:	lahf   
  406f2f:	rcl    BYTE PTR [edi-0x12],0x14
  406f33:	add    al,0xa6
  406f35:	add    BYTE PTR [edi+ebp*2+0x4eb38d39],dl
  406f3c:	arpl   WORD PTR [ecx+0x1af5a016],bp
  406f42:	(bad)  
  406f43:	in     eax,dx
  406f44:	pop    esi
  406f45:	xor    bl,BYTE PTR [bx+di-0x2e]
  406f49:	data16 into 
  406f4b:	xor    al,0xa9
  406f4d:	enter  0x6df0,0xc5
  406f51:	mov    ds:0x7c848e16,eax
  406f56:	inc    esi
  406f57:	xor    eax,0x20534209
  406f5c:	xchg   edx,eax
  406f5d:	ins    DWORD PTR es:[edi],dx
  406f5e:	xchg   al,cl
  406f60:	mul    DWORD PTR [ebx+0x6b]
  406f63:	mov    ecx,DWORD PTR [ecx]
  406f65:	retf   
  406f66:	mov    bl,0x2f
  406f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f69:	and    cl,BYTE PTR [edx]
  406f6b:	add    ch,BYTE PTR [edx+esi*4+0x4fc2d934]
  406f72:	jnp    0x406f66
  406f74:	jp     0x406fe0
  406f76:	inc    ebp
  406f77:	icebp  
  406f78:	push   ss
  406f79:	push   edi
  406f7a:	pop    ds
  406f7b:	add    cl,al
  406f7d:	mov    ebx,esp
  406f7f:	mov    dl,0xe5
  406f81:	inc    ebp
  406f82:	mov    bl,0x48
  406f84:	add    DWORD PTR [edx+ebx*1-0x265d6a28],ebx
  406f8b:	push   ebp
  406f8c:	pop    eax
  406f8d:	das    
  406f8e:	(bad)  
  406f8f:	ret    0xe29b
  406f92:	lahf   
  406f93:	aas    
  406f94:	popa   
  406f95:	in     al,dx
  406f96:	loope  0x406fb7
  406f98:	dec    ebx
  406f99:	jle    0x406f6d
  406f9b:	or     eax,0x7b90da08
  406fa0:	stos   BYTE PTR es:[edi],al
  406fa1:	bound  edi,QWORD PTR [eax]
  406fa3:	sar    BYTE PTR [eax-0x59d8aa7d],cl
  406fa9:	(bad)  
  406fab:	sbb    esi,DWORD PTR [esi-0x19]
  406fae:	and    edx,DWORD PTR [edi]
  406fb0:	outs   dx,BYTE PTR ds:[esi]
  406fb1:	dec    eax
  406fb2:	sub    ebx,ebp
  406fb4:	ror    BYTE PTR [esi+ebp*4],cl
  406fb7:	xor    DWORD PTR [ecx],edx
  406fb9:	xchg   edi,eax
  406fba:	dec    edx
  406fbb:	push   ds
  406fbc:	cmc    
  406fbd:	lea    esp,[ebx]
  406fbf:	les    esi,FWORD PTR [ebp-0x4c]
  406fc2:	sar    BYTE PTR [edx-0x5d76d55c],1
  406fc8:	imul   DWORD PTR [esi-0x5b]
  406fcb:	enter  0xa66a,0xb3
  406fcf:	mov    bh,ch
  406fd1:	xchg   ebx,eax
  406fd2:	xlat   BYTE PTR ds:[ebx]
  406fd3:	mov    edi,0xd1f6ac6d
  406fd8:	imul   eax,ebp,0x44
  406fdb:	push   esi
  406fdc:	fadd   QWORD PTR [ebp-0x46]
  406fdf:	or     DWORD PTR [esi],0xffffff89
  406fe2:	add    DWORD PTR [eax+0x6c],0x9e836420
  406fe9:	add    DWORD PTR [eax+eiz*4+0x29],ebx
  406fed:	xor    DWORD PTR [ecx-0x2de5ae2b],0x646dd4ea
  406ff7:	data16 cld 
  406ff9:	pop    ecx
  406ffa:	lods   eax,DWORD PTR ds:[esi]
  406ffb:	std    
  406ffc:	fdivr  st,st(6)
  406ffe:	and    eax,0xe2a06dcb
  407003:	pushf  
  407004:	xor    BYTE PTR [esi-0x4],ch
  407007:	idiv   DWORD PTR [esi+0x64ae6ba6]
  40700d:	je     0x406fea
  40700f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407010:	js     0x406fd5
  407012:	repnz mov ah,BYTE PTR [edi-0x26]
  407016:	and    al,0xae
  407018:	dec    esp
  407019:	mov    esp,0xe45f5115
  40701e:	xchg   edx,eax
  40701f:	dec    edx
  407020:	nop
  407021:	jle    0x407083
  407023:	int    0xee
  407025:	cmp    eax,0x5c3914f1
  40702a:	add    al,0xe1
  40702c:	ins    DWORD PTR es:[edi],dx
  40702d:	push   esp
  40702e:	mov    al,ds:0xcd57dd25
  407033:	loope  0x4070b1
  407035:	aad    0x7
  407037:	inc    ebp
  407038:	mov    ds:0xc283eb52,al
  40703d:	mov    al,gs:0xa1b2062b
  407043:	hlt    
  407044:	sbb    al,0x26
  407046:	inc    edi
  407047:	push   ebp
  407048:	xor    DWORD PTR [edx],0xffffffdb
  40704b:	ins    DWORD PTR es:[edi],dx
  40704c:	mov    esp,DWORD PTR ds:0x65154718
  407052:	cmp    DWORD PTR [ecx-0x5f],ecx
  407055:	jg     0x40701c
  407057:	mov    DWORD PTR [eax+esi*1],esp
  40705a:	pop    esi
  40705b:	xchg   ebx,eax
  40705c:	adc    al,0x15
  40705e:	lods   eax,DWORD PTR ds:[esi]
  40705f:	pop    eax
  407060:	lea    ecx,[ecx+ebp*1]
  407063:	loopne 0x407039
  407065:	jnp    0x406fed
  407067:	jp     0x4070c9
  407069:	sub    BYTE PTR [ebx],bl
  40706b:	jbe    0x4070c3
  40706d:	mov    BYTE PTR [eax-0x21],bh
  407070:	add    eax,0xa70d87da
  407075:	push   ds
  407076:	mul    BYTE PTR es:[ebx]
  407079:	mov    bl,0x72
  40707b:	dec    edi
  40707c:	scas   eax,DWORD PTR es:[edi]
  40707d:	cli    
  40707e:	dec    ebx
  40707f:	xor    al,cl
  407081:	push   cs
  407082:	pop    eax
  407083:	pop    ebp
  407084:	dec    dx
  407086:	sub    ch,cl
  407088:	xchg   edx,eax
  407089:	xor    eax,0x99069549
  40708e:	outs   dx,DWORD PTR ds:[esi]
  40708f:	mov    edi,0xc3d92e55
  407094:	ds mov dh,0x83
  407097:	std    
  407098:	xor    esi,DWORD PTR [eax-0x52]
  40709b:	(bad)  
  40709c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40709d:	lods   eax,DWORD PTR ds:[esi]
  40709e:	vmovdqa xmm0,xmm2
  4070a2:	aam    0x36
  4070a4:	push   esp
  4070a5:	not    esp
  4070a7:	pop    esi
  4070a8:	cmp    ebx,esp
  4070aa:	pop    esp
  4070ab:	inc    esp
  4070ac:	pop    ds
  4070ad:	imul   eax,edx,0x6d
  4070b0:	sti    
  4070b1:	jb     0x407105
  4070b3:	and    bl,BYTE PTR [edx-0x25a4a974]
  4070b9:	ror    dl,1
  4070bb:	jle    0x407070
  4070bd:	retf   0x3390
  4070c0:	mov    ebp,0x2d18c562
  4070c5:	sub    ch,BYTE PTR [eax+ebx*4-0x7c]
  4070c9:	imul   ecx,esp,0xd910aa13
  4070cf:	push   edx
  4070d0:	xchg   bx,ax
  4070d2:	pop    esp
  4070d3:	and    ebx,DWORD PTR [edx+0x31c462f9]
  4070d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070da:	cld    
  4070db:	mov    edx,0x8b1aeaf9
  4070e0:	xchg   edi,esi
  4070e2:	retf   
  4070e3:	fwait
  4070e4:	inc    ebp
  4070e5:	lods   al,BYTE PTR ds:[esi]
  4070e6:	mov    cl,0xbe
  4070e8:	mov    ds:0x38be1e85,eax
  4070ed:	xor    BYTE PTR [edi-0x5ffdcb86],bh
  4070f3:	inc    ebp
  4070f4:	scas   eax,DWORD PTR es:[edi]
  4070f5:	mov    dh,0xb8
  4070f7:	push   eax
  4070f8:	les    esp,FWORD PTR fs:[edi+ebp*1+0x6d1353ef]
  407100:	and    dh,BYTE PTR [eax-0x3]
  407103:	or     cl,BYTE PTR [edi+0x67a2f12a]
  407109:	jl     0x407145
  40710b:	addr16 jle 0x4070fb
  40710e:	dec    edx
  40710f:	or     DWORD PTR [ebx+esi*8+0x73],0x41a718e
  407117:	sub    DWORD PTR [eax-0x48],edx
  40711a:	jne    0x40710a
  40711c:	sub    edi,DWORD PTR [ebx+0x51]
  40711f:	shl    DWORD PTR [ecx+0x7a],cl
  407122:	call   0x3de8c423
  407127:	fwait
  407128:	mov    ebx,0x122a95ab
  40712d:	sti    
  40712e:	test   DWORD PTR [di-0x4c],ecx
  407132:	lods   al,BYTE PTR ds:[esi]
  407133:	sti    
  407134:	inc    esi
  407135:	mov    DWORD PTR [edx+0x112928f7],edi
  40713b:	mov    ?,ecx
  40713d:	pop    eax
  40713e:	jmp    0x407168
  407140:	clc    
  407141:	inc    ebx
  407142:	pop    ebp
  407143:	sbb    eax,DWORD PTR [edi-0x2f]
  407146:	push   edi
  407147:	mov    ah,0x7f
  407149:	test   BYTE PTR [ebp-0x52],0x81
  40714d:	repnz sub eax,0x3ba93e06
  407153:	cmp    eax,ebp
  407155:	sub    eax,0x7ef22685
  40715a:	jnp    0x40713d
  40715c:	out    dx,al
  40715d:	pop    ss
  40715e:	and    ebp,esi
  407160:	jne    0x4071a5
  407162:	repz jbe 0x4070ea
  407165:	push   ecx
  407166:	addr16 jp 0x40719d
  407169:	(bad)  
  40716a:	dec    edi
  40716b:	lods   al,BYTE PTR ds:[esi]
  40716c:	ins    DWORD PTR es:[edi],dx
  40716d:	outs   dx,DWORD PTR ds:[esi]
  40716e:	adc    BYTE PTR [ebx+0x342c87c0],al
  407174:	ret    0x648d
  407177:	mov    edi,0xc722e554
  40717c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40717d:	mov    al,ds:0x1bd12e1
  407182:	(bad)  
  407183:	lock mov BYTE PTR ds:0xf2d4504f,al
  40718a:	daa    
  40718b:	retf   0x8670
  40718e:	inc    ebx
  40718f:	and    al,0x42
  407191:	jo     0x407115
  407193:	add    DWORD PTR [ecx-0x70],0x31e78875
  40719a:	mov    ebp,0xcf04bd7f
  40719f:	shl    BYTE PTR [esi+0x2bef4a70],cl
  4071a5:	lods   al,BYTE PTR ds:[esi]
  4071a6:	or     eax,0xcb5516d7
  4071ab:	mov    ch,0xc8
  4071ad:	into   
  4071ae:	mov    cl,0x89
  4071b0:	mov    edx,0x8005b97b
  4071b5:	or     edx,esp
  4071b7:	je     0x407223
  4071b9:	pop    ebx
  4071ba:	mov    cl,0x2f
  4071bc:	leave  
  4071bd:	leave  
  4071be:	xlat   BYTE PTR ds:[ebx]
  4071bf:	inc    ecx
  4071c0:	pop    ebp
  4071c1:	mov    eax,0x36057635
  4071c6:	fsubr  st,st(7)
  4071c8:	dec    esi
  4071c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071cb:	bound  ebp,QWORD PTR ds:0xac8ef791
  4071d1:	inc    esp
  4071d2:	adc    eax,0x95c1c060
  4071d7:	pop    ebp
  4071d8:	adc    ebp,DWORD PTR [esi+0x1042bc38]
  4071de:	sbb    DWORD PTR [ebx],0xf369bbcb
  4071e4:	test   DWORD PTR [esi*1+0x62f8e01a],ebx
  4071eb:	mov    eax,0x3d9e66f1
  4071f0:	mov    ch,0x90
  4071f2:	cmp    eax,0x5c5ce5e3
  4071f7:	call   0xd2e668ff
  4071fc:	shl    edx,0x1f
  4071ff:	ss jecxz 0x407182
  407202:	sbb    cl,BYTE PTR [ecx+0x3062d836]
  407208:	imul   edi,esi,0x42
  40720b:	push   ds
  40720c:	hlt    
  40720d:	adc    BYTE PTR [edx+ebp*1],al
  407210:	jg     0x4071da
  407212:	push   ebx
  407213:	in     al,dx
  407214:	push   ebp
  407215:	ja     0x407200
  407217:	(bad)  
  407218:	mov    edi,DWORD PTR [esi+0xb7d892c]
  40721e:	mov    edx,0x1e9b40e3
  407223:	adc    BYTE PTR [eax],ch
  407225:	sub    BYTE PTR [edx+0x64],cl
  407228:	ja     0x40720d
  40722a:	test   al,0x28
  40722c:	pop    edx
  40722d:	xor    ecx,ebx
  40722f:	loop   0x407209
  407231:	add    BYTE PTR [eax+0x64871680],al
  407237:	fs push esi
  407239:	fucomi st,st(7)
  40723b:	in     al,dx
  40723c:	gs sbb eax,0x48f33e84
  407242:	jb     0x4072ad
  407244:	sbb    cl,BYTE PTR [ebx+ebp*1]
  407247:	mov    al,0x55
  407249:	call   0xffd01fab
  40724e:	fist   DWORD PTR [ebp+ebp*4+0x44]
  407252:	add    ah,BYTE PTR [edi-0x3851c139]
  407258:	add    DWORD PTR [esi+edi*1+0x34],edx
  40725c:	cmp    BYTE PTR [edi],bh
  40725e:	stos   DWORD PTR es:[edi],eax
  40725f:	inc    edx
  407260:	xchg   esp,eax
  407261:	xchg   esi,eax
  407262:	scas   eax,DWORD PTR es:[edi]
  407263:	scas   al,BYTE PTR es:[edi]
  407264:	xchg   esi,eax
  407265:	pop    edx
  407266:	and    ch,BYTE PTR [edx+0x6e34afe3]
  40726c:	ret    0x40ce
  40726f:	xchg   edi,eax
  407270:	(bad)  
  407272:	iret   
  407273:	xor    dl,BYTE PTR [esi+0x6193550e]
  407279:	pop    ebx
  40727a:	jmp    0x407223
  40727c:	sub    al,0xb5
  40727e:	mov    bh,0xad
  407280:	sbb    eax,0xaf650a57
  407285:	push   ecx
  407286:	lds    edx,FWORD PTR [ebx]
  407288:	inc    edx
  407289:	jle    0x40722b
  40728b:	pushf  
  40728c:	test   al,0xd2
  40728e:	or     al,0x49
  407290:	out    dx,eax
  407291:	test   DWORD PTR [edi],edx
  407293:	rcl    eax,1
  407295:	sub    ecx,esi
  407297:	shl    BYTE PTR [ecx],cl
  407299:	mov    gs,ebp
  40729b:	sub    eax,0x98bba10c
  4072a0:	ror    bh,cl
  4072a2:	jmp    0xbf785f1
  4072a7:	sahf   
  4072a8:	mov    BYTE PTR [edx],al
  4072aa:	push   ebp
  4072ab:	int3   
  4072ac:	add    DWORD PTR [ebx],esi
  4072ae:	les    esp,FWORD PTR [ebx-0x21]
  4072b1:	adc    eax,0xa5b38dfc
  4072b6:	jns    0x4072c3
  4072b8:	xchg   ebp,eax
  4072b9:	call   0x8be9d823
  4072be:	inc    eax
  4072bf:	retf   
  4072c0:	dec    eax
  4072c1:	pop    ebp
  4072c2:	xor    al,0x5a
  4072c4:	shl    edi,0x26
  4072c7:	or     ebx,DWORD PTR [ecx+0x20a44eee]
  4072cd:	xor    eax,0xa58a46ca
  4072d2:	mov    eax,edx
  4072d4:	fisttp WORD PTR [ebp+0x280d1b3d]
  4072da:	ret    
  4072db:	xor    al,0xc0
  4072dd:	xor    BYTE PTR [ecx-0x37cb54fe],0x59
  4072e4:	pop    esp
  4072e5:	add    al,0xff
  4072e7:	and    eax,0x8f5bb118
  4072ec:	cmp    DWORD PTR [eax],ebx
  4072ee:	retf   
  4072ef:	fucom  st(2)
  4072f1:	pop    es
  4072f2:	mov    ecx,0xe5d81f2e
  4072f7:	mov    ah,0xf1
  4072f9:	mov    ds:0xa9e538cd,al
  4072fe:	cli    
  4072ff:	push   edi
  407300:	mov    esi,0x678ca47e
  407305:	ja     0x4072c6
  407307:	xlat   BYTE PTR ds:[ebx]
  407308:	adc    eax,0x7adb4b59
  40730d:	scas   eax,DWORD PTR es:[edi]
  40730e:	xor    al,0xfb
  407310:	or     ebx,edx
  407312:	sub    ecx,eax
  407314:	jmp    0x8b097ea
  407319:	(bad)  
  40731a:	jmp    0x4072bd
  40731c:	dec    eax
  40731d:	arpl   WORD PTR [edx+0x59deb35f],dx
  407323:	dec    eax
  407324:	popa   
  407325:	fisttp WORD PTR [esi+0x254707d9]
  40732b:	test   DWORD PTR [ecx+esi*1-0x5],0x60be1dae
  407333:	mov    ah,BYTE PTR [esi+0x7c]
  407336:	jl     0x407327
  407338:	jmp    0x4072e3
  40733a:	outs   dx,BYTE PTR ds:[esi]
  40733b:	and    eax,0x7463c748
  407340:	adc    eax,0xda5ca352
  407345:	inc    edi
  407346:	(bad)  
  407347:	mov    al,ds:0x67c80867
  40734c:	pop    edx
  40734d:	das    
  40734e:	test   esi,0x583db108
  407354:	lsl    ecx,WORD PTR [ebp-0x1]
  407358:	lock xchg edx,eax
  40735a:	arpl   WORD PTR [ebx+ecx*2],dx
  40735d:	adc    DWORD PTR ds:[eax-0x52],edx
  407361:	dec    eax
  407362:	jns    0x407384
  407364:	pop    esi
  407365:	mov    ds:0x526939e6,al
  40736a:	aam    0xde
  40736c:	pop    edx
  40736d:	shr    BYTE PTR [ebx],1
  40736f:	sahf   
  407370:	xor    edi,DWORD PTR [edi-0x2df702d6]
  407376:	sbb    dh,bh
  407378:	out    dx,eax
  407379:	ret    0xfb61
  40737c:	fcomp  QWORD PTR [esi+ebp*2+0x1ab46ddf]
  407383:	cli    
  407384:	(bad)  
  407385:	gs (bad) 
  407388:	dec    edi
  407389:	bound  esi,QWORD PTR [ebx+0x304d8e0c]
  40738f:	es loopne 0x40740e
  407392:	iret   
  407393:	fistp  WORD PTR [eax-0x5]
  407396:	cmp    ebx,DWORD PTR [ebx]
  407398:	stc    
  407399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739b:	repz sbb eax,0xf8d40545
  4073a1:	les    esp,FWORD PTR [edi]
  4073a3:	mov    ebp,0xe75ba0b5
  4073a8:	out    0x2f,al
  4073aa:	jp     0x4073fc
  4073ac:	xchg   ecx,eax
  4073ad:	or     ebp,DWORD PTR [ebp-0xdc6ad3c]
  4073b3:	sub    BYTE PTR [edi-0x72],bl
  4073b6:	ret    
  4073b7:	mov    dl,BYTE PTR [ecx-0x29]
  4073ba:	pop    edi
  4073bb:	out    0x42,al
  4073bd:	loopne 0x40742f
  4073bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c0:	jg     0x4073ef
  4073c2:	inc    esp
  4073c3:	mov    WORD PTR [ebp-0x74],gs
  4073c6:	imul   ch
  4073c8:	imul   edx,DWORD PTR [edi-0x5d],0x54
  4073cc:	or     DWORD PTR [esi],ebp
  4073ce:	out    dx,eax
  4073cf:	in     eax,0xc0
  4073d1:	sub    al,0xe6
  4073d3:	mov    ebp,0xa09fd7b7
  4073d8:	cdq    
  4073d9:	xchg   ecx,eax
  4073da:	aad    0xde
  4073dc:	and    DWORD PTR [esi],ecx
  4073de:	in     eax,0x95
  4073e0:	nop
  4073e1:	adc    al,ch
  4073e3:	aas    
  4073e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e5:	push   ss
  4073e6:	cdq    
  4073e7:	sub    al,0x7b
  4073e9:	retf   
  4073ea:	sbb    BYTE PTR [esi+edx*8],dh
  4073ed:	mov    al,ds:0xd99d7cb7
  4073f2:	ss xchg ecx,eax
  4073f4:	inc    esi
  4073f5:	sub    DWORD PTR [eax+0x614cbccd],ebx
  4073fb:	repnz or eax,edx
  4073fe:	fcmovnu st,st(6)
  407400:	ret    0x5df5
  407403:	adc    bh,0xae
  407406:	in     al,0x53
  407408:	fs jge 0x407424
  40740b:	mov    ebx,0x164df258
  407410:	mov    DWORD PTR [ebp+ecx*4-0x726b394e],0xaabd8b5c
  40741b:	xchg   edx,eax
  40741c:	mov    edi,0x5d05e23a
  407421:	lods   eax,DWORD PTR ds:[esi]
  407422:	lahf   
  407423:	mov    esp,ss
  407425:	enter  0x6322,0xa8
  407429:	or     dl,ch
  40742b:	stos   BYTE PTR es:[edi],al
  40742c:	inc    ebx
  40742d:	pushf  
  40742e:	in     eax,dx
  40742f:	xor    DWORD PTR [ecx],esp
  407431:	xchg   BYTE PTR [esi-0x3247434f],dl
  407437:	loopne 0x40745e
  407439:	stos   BYTE PTR es:[edi],al
  40743a:	fisubr WORD PTR [ecx+0x2e]
  40743d:	fwait
  40743e:	xchg   ebx,eax
  40743f:	mov    al,ds:0xc5ddb150
  407444:	inc    ecx
  407445:	mov    eax,ds:0x82a1acc
  40744a:	pop    ebp
  40744b:	pop    ebx
  40744c:	mov    ecx,0xa23f594c
  407451:	data16 (bad) 
  407453:	in     eax,dx
  407454:	mov    edx,0xfafb7c2c
  407459:	adc    bh,BYTE PTR [edi-0x5fe9ab80]
  40745f:	lds    edx,FWORD PTR [ecx+0x7f7c58bb]
  407465:	add    DWORD PTR [edi+esi*2-0x80],esi
  407469:	mov    ch,0x64
  40746b:	mov    edx,0xd778b8c3
  407470:	ins    DWORD PTR es:[edi],dx
  407471:	les    edi,FWORD PTR [ecx+0x40]
  407474:	(bad)  
  407475:	enter  0x709c,0x9d
  407479:	mov    al,ds:0x53b8436
  40747e:	push   edx
  40747f:	js     0x4074ed
  407481:	addr16 mov ds:0x2495,eax
  407485:	xor    esi,DWORD PTR [edi-0x67483717]
  40748b:	push   esi
  40748c:	pop    edx
  40748d:	enterw 0x295,0x54
  407492:	test   esi,0x8a1313be
  407498:	mov    cl,0x18
  40749a:	xor    al,0x43
  40749c:	and    ebx,DWORD PTR ds:0xbff7cdce
  4074a2:	aas    
  4074a3:	sbb    DWORD PTR [edx+0x57daadb5],ebx
  4074a9:	(bad)  
  4074aa:	inc    edx
  4074ab:	pop    ss
  4074ac:	dec    eax
  4074ad:	outs   dx,DWORD PTR ss:[esi]
  4074af:	cmp    eax,0xb3c9bab3
  4074b4:	loop   0x4074bd
  4074b6:	add    al,0x96
  4074b8:	and    ebp,DWORD PTR [edi]
  4074ba:	cmp    DWORD PTR [ecx],eax
  4074bc:	cmp    BYTE PTR [ebx+0x5345bb84],0x72
  4074c3:	ror    DWORD PTR [ebx+0x58],1
  4074c6:	and    esp,eax
  4074c8:	int3   
  4074c9:	or     DWORD PTR [ecx],0xffffffd5
  4074cc:	call   esi
  4074ce:	or     eax,DWORD PTR [ecx]
  4074d0:	xchg   ebp,eax
  4074d1:	cmp    esi,DWORD PTR [esi+0x7be900ca]
  4074d7:	push   0x6017d2fd
  4074dc:	adc    eax,ebp
  4074de:	int    0x69
  4074e0:	shr    bl,1
  4074e2:	mov    dh,0xc9
  4074e4:	mov    ebx,0x120ca30
  4074e9:	add    ecx,DWORD PTR [edx+0xbbb9d76]
  4074ef:	and    dl,BYTE PTR [edi-0x64]
  4074f2:	ret    
  4074f3:	mov    bh,0x6
  4074f5:	mov    ah,0xb4
  4074f7:	push   edi
  4074f8:	inc    ebp
  4074f9:	mov    ebp,0xaee3d30
  4074fe:	mov    edx,0x1e808b89
  407503:	pop    edi
  407504:	xlat   BYTE PTR ds:[ebx]
  407505:	pushw  es
  407507:	mov    al,ds:0xafc24262
  40750c:	and    dl,BYTE PTR [edi+0x2f]
  40750f:	test   eax,0x50e450f3
  407514:	mov    edx,0xb4468598
  407519:	mov    esp,0xabbfa1ac
  40751e:	sbb    al,0x15
  407520:	lahf   
  407521:	int    0x13
  407523:	inc    esi
  407524:	ss adc edx,eax
  407527:	inc    edi
  407528:	in     eax,0xc6
  40752a:	cs adc eax,0x6fa38de9
  407530:	inc    eax
  407531:	add    al,0xff
  407533:	pop    esp
  407534:	inc    edi
  407535:	and    al,0xa7
  407537:	aas    
  407538:	out    dx,al
  407539:	rol    DWORD PTR [ebx-0x42],0x61
  40753d:	pop    edi
  40753e:	nop    DWORD PTR [edi]
  407541:	or     DWORD PTR [ebx],edx
  407543:	inc    esp
  407544:	outs   dx,DWORD PTR ds:[esi]
  407545:	dec    ebx
  407546:	add    esp,esi
  407548:	scas   eax,DWORD PTR es:[edi]
  407549:	xor    eax,0x93ccfd35
  40754e:	fucomip st,st(1)
  407550:	dec    esi
  407551:	and    edx,DWORD PTR [eax-0x73432a36]
  407557:	mov    ds:0x5076df68,eax
  40755c:	add    BYTE PTR [ebx],cl
  40755e:	repz cmp edi,DWORD PTR gs:[ebx]
  407562:	test   al,0x65
  407564:	sbb    bh,bl
  407566:	push   ebp
  407567:	mov    esi,DWORD PTR [eax-0x7649b112]
  40756d:	mov    ebx,0x92149b69
  407572:	cwde   
  407573:	mov    eax,ds:0x2bc959e5
  407578:	push   edx
  407579:	mov    ebp,0xe887c145
  40757e:	pop    ebp
  40757f:	mov    cl,0x98
  407581:	rol    DWORD PTR [esi-0x6180217e],cl
  407587:	jl     0x4075e9
  407589:	pop    esi
  40758a:	repnz add eax,0x55c6909
  407590:	jbe    0x407603
  407592:	adc    edi,0x6446636c
  407598:	and    BYTE PTR [ebx-0x1e],0x85
  40759c:	imul   esp,eax,0x18
  40759f:	outs   dx,DWORD PTR ds:[esi]
  4075a0:	pusha  
  4075a1:	lea    edi,[esi+0x61]
  4075a4:	(bad)  
  4075a5:	les    edx,FWORD PTR [eax+eiz*4]
  4075a8:	fnstenv [edi+eiz*4]
  4075ab:	outs   dx,BYTE PTR ds:[esi]
  4075ac:	and    al,0x1a
  4075ae:	scas   al,BYTE PTR es:[edi]
  4075af:	(bad)  [ecx+0x6d]
  4075b2:	xchg   BYTE PTR [ecx],dl
  4075b4:	xor    eax,DWORD PTR [ebp-0x7843f41a]
  4075ba:	push   ebp
  4075bb:	out    0x6e,eax
  4075bd:	jge    0x407583
  4075bf:	cmp    BYTE PTR [ebx-0x27],ch
  4075c2:	mov    edi,0x80a7cbc4
  4075c7:	cmp    ebx,ebp
  4075c9:	mov    al,ds:0x21bd3edf
  4075ce:	pop    ebp
  4075cf:	out    dx,al
  4075d0:	mov    edx,0xb8f35ec2
  4075d5:	inc    eax
  4075d6:	xor    al,0x8
  4075d8:	dec    ebp
  4075d9:	dec    eax
  4075da:	stos   BYTE PTR es:[edi],al
  4075db:	dec    BYTE PTR [edi-0x3c1c7773]
  4075e1:	retf   0xcfc4
  4075e4:	sbb    DWORD PTR [eax+0x145bf4bd],esi
  4075ea:	jnp    0x407593
  4075ec:	call   0x1a54a59d
  4075f1:	cmp    BYTE PTR [eax],dl
  4075f3:	lahf   
  4075f4:	jmp    0xd76a58cf
  4075f9:	and    dl,cl
  4075fb:	dec    ecx
  4075fc:	push   edi
  4075fd:	test   al,0x8b
  4075ff:	mov    ebp,0xd9563092
  407604:	jmp    0x4075a4
  407606:	js     0x407592
  407608:	mov    ch,0x8f
  40760a:	sub    al,0xca
  40760c:	jecxz  0x40762d
  40760e:	mov    esi,0xaa91bf25
  407613:	mov    esi,0xce1b08c7
  407618:	(bad)  
  407619:	fistp  QWORD PTR [ebx]
  40761b:	rcr    eax,0x10
  40761e:	or     esi,DWORD PTR [ebx-0x20]
  407621:	mov    eax,0x29139a3e
  407626:	gs out 0x4c,al
  407629:	shl    DWORD PTR [edi+0x1b],0x84
  40762d:	inc    eax
  40762e:	shl    DWORD PTR [eax],1
  407630:	popa   
  407631:	test   eax,0xf7747df9
  407636:	retf   
  407637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407638:	mov    es,WORD PTR [ebx+0x5d021609]
  40763e:	inc    eax
  40763f:	cmp    eax,DWORD PTR [esi]
  407641:	mov    esp,0xc57cf34b
  407646:	not    DWORD PTR [ebp-0xe]
  407649:	pop    es
  40764a:	and    ch,BYTE PTR [ecx+0x243f0523]
  407650:	fadd   st(6),st
  407652:	push   edi
  407653:	repz out dx,eax
  407655:	jo     0x40769e
  407657:	sar    BYTE PTR [ebp+0x5a],1
  40765a:	jnp    0x407602
  40765c:	ficomp WORD PTR [eax+0x45d2409d]
  407662:	jae    0x4076e0
  407664:	add    DWORD PTR [ecx*1+0x58c63050],esi
  40766b:	push   ebx
  40766c:	sbb    BYTE PTR [ebp+0x7],ah
  40766f:	jl     0x4076b6
  407671:	sub    DWORD PTR [ecx-0x2dc86ce6],0x18ec7438
  40767b:	and    ecx,DWORD PTR [esi+0x585bb194]
  407681:	fistp  DWORD PTR [eax+edx*1+0x6e]
  407685:	iret   
  407686:	xor    edx,DWORD PTR [ecx]
  407688:	fisttp DWORD PTR [eax+0x6ae64eea]
  40768e:	push   edi
  40768f:	xchg   BYTE PTR [edi*4+0x6934c953],cl
  407696:	jbe    0x407640
  407698:	aas    
  407699:	mov    al,ds:0x4019f396
  40769e:	or     ebx,edx
  4076a0:	inc    ah
  4076a2:	loope  0x40771d
  4076a4:	mov    ds:0xc30e64ab,eax
  4076a9:	(bad)
  4076ac:	add    eax,0xa4b98024
  4076b1:	dec    esi
  4076b2:	cmp    eax,0x54fc22c8
  4076b7:	push   ds
  4076b8:	ds iret 
  4076ba:	and    eax,0x592684c8
  4076bf:	mov    dl,0x95
  4076c1:	push   ecx
  4076c2:	push   ebp
  4076c3:	fisttp WORD PTR gs:[edi-0x1a2ee90b]
  4076ca:	clc    
  4076cb:	xchg   esp,eax
  4076cc:	cli    
  4076cd:	jmp    0x5f38:0x513b63d1
  4076d4:	arpl   WORD PTR [ecx+ecx*8+0x3bc29f9e],bp
  4076db:	jmp    0x4076fd
  4076dd:	fsubr  st(5),st
  4076df:	inc    ecx
  4076e0:	fstp   QWORD PTR [ebx-0x6da2e2a5]
  4076e6:	or     eax,0x596e92e
  4076eb:	cmp    ecx,edx
  4076ed:	push   edx
  4076ee:	inc    eax
  4076ef:	sbb    ebp,DWORD PTR ds:0x54c04afb
  4076f5:	stc    
  4076f6:	int3   
  4076f7:	stc    
  4076f8:	retf   0x1442
  4076fb:	or     eax,0x7b97fbed
  407700:	ins    BYTE PTR es:[edi],dx
  407701:	(bad)  
  407702:	mov    edx,0xea1c4217
  407707:	ds ins DWORD PTR es:[edi],dx
  407709:	xor    eax,0x40504733
  40770e:	inc    ebx
  40770f:	lock pop edi
  407712:	cwde   
  407713:	sbb    al,0x23
  407715:	outs   dx,BYTE PTR ds:[esi]
  407716:	add    DWORD PTR [edx+ebx*1-0x4c],0x271288b9
  40771e:	ss dec esp
  407720:	ds stc 
  407722:	cmp    eax,DWORD PTR [ebp-0x67]
  407725:	jmp    0x407757
  407727:	xchg   edi,eax
  407728:	adc    eax,0xf00773bf
  40772d:	es cs rol BYTE PTR ss:[esp+edi*1],cl
  407733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407735:	xchg   ebx,eax
  407736:	das    
  407737:	cwde   
  407738:	bound  ebx,QWORD PTR [esi+0x1af87a0]
  40773e:	iret   
  40773f:	mov    eax,ecx
  407741:	aam    0xe3
  407743:	inc    edi
  407744:	(bad)  
  407745:	push   ecx
  407746:	sbb    eax,0x595cf8e5
  40774b:	idiv   BYTE PTR [edi-0x52]
  40774e:	dec    esi
  40774f:	add    eax,0xfdbb618b
  407754:	pop    ss
  407755:	das    
  407756:	xchg   dh,bl
  407758:	fist   DWORD PTR [edx+0x7]
  40775b:	sbb    esp,DWORD PTR [ecx+0x4683a659]
  407761:	call   0x2b46:0x6c8d9416
  407768:	fsub   st(2),st
  40776a:	cdq    
  40776b:	(bad)  
  40776c:	push   0xffffff97
  40776e:	xchg   cx,ax
  407770:	mov    WORD PTR [edi],ss
  407772:	call   DWORD PTR ds:0x9ab4c5f5
  407778:	cmp    cl,BYTE PTR [ecx]
  40777a:	dec    ecx
  40777b:	(bad)  
  40777c:	outs   dx,DWORD PTR ds:[esi]
  40777d:	(bad)  
  40777f:	je     0x4077fe
  407781:	push   ecx
  407782:	call   0x1ddf1faf
  407787:	mov    ds:0x2830dfae,eax
  40778c:	ja     0x4077a4
  40778e:	mov    cl,0x40
  407790:	jbe    0x407753
  407792:	outs   dx,DWORD PTR ds:[esi]
  407793:	push   ecx
  407794:	inc    esp
  407795:	das    
  407796:	mov    bh,0xda
  407798:	retf   0xc8b2
  40779b:	xchg   DWORD PTR [bp+di+0x715a],esi
  4077a0:	cmc    
  4077a1:	es loope 0x407795
  4077a4:	popa   
  4077a5:	dec    edi
  4077a6:	retf   
  4077a7:	outs   dx,DWORD PTR ds:[esi]
  4077a8:	mov    ds:0xce37ac63,eax
  4077ad:	jecxz  0x40778d
  4077af:	push   ds
  4077b0:	call   0x64983710
  4077b5:	add    bl,BYTE PTR [esi]
  4077b7:	or     DWORD PTR [edi],edi
  4077b9:	push   eax
  4077ba:	cmp    BYTE PTR [edx-0x2f58b303],bl
  4077c0:	fs mov dh,0x8f
  4077c3:	dec    eax
  4077c4:	and    DWORD PTR [eax+0x17],0xfffffffa
  4077c8:	jb     0x4077ee
  4077ca:	ins    DWORD PTR es:[edi],dx
  4077cb:	mov    eax,0x9f380e99
  4077d0:	mov    edx,0xe755b471
  4077d5:	jle    0x4077d5
  4077d7:	push   esi
  4077d8:	cli    
  4077d9:	cwde   
  4077da:	push   esi
  4077db:	fs (bad) 
  4077de:	stc    
  4077df:	pop    ds
  4077e0:	xlat   BYTE PTR ds:[ebx]
  4077e1:	je     0x40776d
  4077e3:	push   ebp
  4077e4:	xor    cl,cl
  4077e6:	or     dl,al
  4077e8:	imul   esi,ebx,0xffffff83
  4077eb:	lahf   
  4077ec:	xchg   edx,eax
  4077ed:	pop    ss
  4077ee:	into   
  4077ef:	pop    ss
  4077f0:	dec    edi
  4077f1:	and    al,0x77
  4077f3:	enter  0xe1cb,0x7
  4077f7:	and    eax,0xb3d03cfd
  4077fc:	jo     0x40781e
  4077fe:	mov    ch,0x1f
  407800:	pop    ss
  407801:	xchg   esp,eax
  407802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407803:	jne    0x407883
  407805:	xor    al,0xf1
  407807:	sub    eax,0xdb35c5d8
  40780c:	jo     0x4077fb
  40780e:	inc    ebx
  40780f:	cmp    al,0x50
  407811:	and    al,0x5d
  407813:	pop    ebp
  407814:	or     eax,0xe60edbfa
  407819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40781a:	cwde   
  40781b:	stos   BYTE PTR es:[edi],al
  40781c:	or     cl,dl
  40781e:	inc    eax
  40781f:	cmp    ebx,ebp
  407821:	pop    edx
  407822:	ret    0x9a1f
  407825:	outs   dx,DWORD PTR ds:[esi]
  407826:	xor    bl,BYTE PTR [edi-0x69]
  407829:	xlat   BYTE PTR ds:[ebx]
  40782a:	dec    ebx
  40782b:	and    DWORD PTR [eax+edi*8+0x5e],0xffffffb9
  407830:	or     cl,BYTE PTR [ecx]
  407832:	in     eax,0x8c
  407834:	sbb    DWORD PTR [ecx+0x33281b78],ecx
  40783a:	jle    0x407855
  40783c:	add    cl,0xd0
  40783f:	and    DWORD PTR [ebx],ebp
  407841:	jle    0x407818
  407843:	jmp    0x46ab:0x1d898cfa
  40784a:	sahf   
  40784b:	std    
  40784c:	pop    eax
  40784d:	gs push edi
  40784f:	jp     0x40789e
  407851:	sbb    BYTE PTR [esi+0x16],0x3f
  407855:	push   esi
  407856:	test   esp,edx
  407858:	inc    eax
  407859:	das    
  40785a:	rcr    BYTE PTR [edi+0x6b],1
  40785d:	sbb    edi,DWORD PTR [ecx+0x18]
  407860:	fcmovnu st,st(1)
  407862:	jge    0x4078db
  407864:	inc    esi
  407865:	sub    ebx,edx
  407867:	pop    esp
  407868:	(bad)  
  407869:	pushf  
  40786a:	adc    eax,0x1c0d95b7
  40786f:	bound  edx,QWORD PTR [esi-0x190b51a2]
  407875:	das    
  407876:	mov    dh,0x83
  407878:	icebp  
  407879:	push   cs
  40787a:	lds    ecx,FWORD PTR [ebx+0x41]
  40787d:	les    ecx,FWORD PTR [edx+0x15]
  407880:	mov    dl,0xc
  407882:	mov    WORD PTR ds:0xe48a09fa,es
  407888:	test   eax,0x7b06d491
  40788d:	add    DWORD PTR [edx],esi
  40788f:	jno    0x407882
  407891:	or     dh,al
  407893:	mov    esi,0x1ce43a90
  407898:	popf   
  407899:	mov    eax,0x856626da
  40789e:	adc    ecx,DWORD PTR ds:0x3f29c4c1
  4078a4:	adc    al,0xff
  4078a6:	scas   al,BYTE PTR es:[edi]
  4078a7:	js     0x40783d
  4078a9:	pusha  
  4078aa:	stc    
  4078ab:	ja     0x407858
  4078ad:	ja     0x4078ef
  4078af:	ins    DWORD PTR es:[edi],dx
  4078b0:	mov    ds:0x36fe2e61,al
  4078b5:	fmul   QWORD PTR [edx+0x4c]
  4078b8:	or     bh,BYTE PTR [ebx+0x43]
  4078bb:	inc    ebx
  4078bc:	nop
  4078bd:	xor    esi,DWORD PTR [edi+0xb29aa71]
  4078c3:	dec    ebp
  4078c4:	imul   eax,DWORD PTR [esi],0xe05657fd
  4078ca:	mov    dh,0x45
  4078cc:	xlat   BYTE PTR ds:[ebx]
  4078cd:	imul   esi,DWORD PTR [edi-0x4246a26b],0x7a
  4078d4:	dec    edx
  4078d5:	pop    esi
  4078d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d7:	adc    eax,0x73c0873
  4078dc:	(bad)  [ebp-0x3f]
  4078df:	push   edi
  4078e0:	and    al,BYTE PTR [ecx-0x5f]
  4078e3:	ds cwde 
  4078e5:	popf   
  4078e6:	cmp    DWORD PTR [ebx],edx
  4078e8:	sahf   
  4078e9:	sbb    ebx,esi
  4078eb:	and    ebx,DWORD PTR [edx+0x6b]
  4078ee:	push   esi
  4078ef:	ret    
  4078f0:	or     ah,cl
  4078f2:	xor    DWORD PTR [si-0x7a29],edi
  4078f7:	(bad)  
  4078f8:	(bad)  
  4078f9:	rol    DWORD PTR [edx],1
  4078fb:	jbe    0x407934
  4078fd:	in     al,dx
  4078fe:	mov    ax,0xe7d0
  407902:	iret   
  407903:	mov    WORD PTR [ebx-0x112bdc65],gs
  407909:	sahf   
  40790a:	call   0xb6db:0xe9d2daeb
  407911:	sbb    DWORD PTR [edi+0x3f],ebp
  407914:	or     ebp,0x39
  407917:	sbb    al,0xb4
  407919:	test   DWORD PTR [ebx-0x21454a54],ebx
  40791f:	(bad)  
  407920:	fcmovnu st,st(3)
  407922:	retf   
  407923:	adc    DWORD PTR [esi+0x6f],ecx
  407926:	mov    ah,0xa4
  407928:	sub    al,0x61
  40792a:	xchg   BYTE PTR [ebx+0x1e],ch
  40792d:	adc    DWORD PTR [ebx],0xffffffe5
  407930:	outs   dx,DWORD PTR ds:[esi]
  407931:	push   0x2c
  407933:	cmp    bh,BYTE PTR ds:0xf793aecb
  407939:	or     eax,0xc7916d6d
  40793e:	cmp    cl,BYTE PTR [edi]
  407940:	pop    ds
  407941:	jnp    0x40799b
  407943:	out    0x3e,eax
  407945:	mov    DWORD PTR [esi+0x4d],ebx
  407948:	xchg   edi,eax
  407949:	sbb    eax,0x8af14d8d
  40794e:	xchg   edx,eax
  40794f:	and    DWORD PTR [ecx-0x167a3561],eax
  407955:	cmc    
  407956:	repnz fsub QWORD PTR [ebx]
  407959:	hlt    
  40795a:	dec    esp
  40795b:	arpl   bx,di
  40795d:	sub    al,0x44
  40795f:	stos   DWORD PTR es:[edi],eax
  407960:	lock jno 0x407956
  407963:	sub    eax,0xd0ad82f
  407968:	loope  0x407961
  40796a:	dec    esi
  40796b:	imul   esp,esi,0x29
  40796e:	jns    0x407978
  407970:	xor    ebx,0xf1a2ae18
  407976:	out    0x18,al
  407978:	daa    
  407979:	call   0x9cb8843c
  40797e:	xor    DWORD PTR [edi],eax
  407980:	or     al,0x71
  407982:	inc    ebx
  407983:	mul    BYTE PTR [esi+0xf46241b]
  407989:	fdivr  DWORD PTR [edx-0x47]
  40798c:	pop    edi
  40798d:	les    esp,FWORD PTR [edi-0x2abecaa2]
  407993:	mov    DWORD PTR [edx],edx
  407995:	lods   al,BYTE PTR ds:[esi]
  407996:	cmc    
  407997:	(bad)  
  407998:	cld    
  407999:	in     al,dx
  40799a:	push   ebx
  40799b:	popf   
  40799c:	loop   0x4079af
  40799e:	pusha  
  40799f:	push   0x8c96f33b
  4079a4:	push   es
  4079a5:	call   0x852d726c
  4079aa:	shl    BYTE PTR [ebp+0x7d],1
  4079ad:	shl    BYTE PTR [edx],0xfc
  4079b0:	mov    al,ds:0x6f5809d
  4079b5:	sbb    ah,dl
  4079b7:	mov    esp,0x1b0c1a90
  4079bc:	inc    esp
  4079bd:	xor    BYTE PTR [edx-0x69],bl
  4079c0:	mov    esi,0xc692b36d
  4079c5:	fwait
  4079c6:	jae    0x4079a7
  4079c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c9:	push   0xb080b13c
  4079ce:	xor    DWORD PTR [edi+0x77b044f7],ecx
  4079d4:	enter  0xf4bd,0x7d
  4079d8:	inc    esi
  4079d9:	mov    dl,0x9a
  4079db:	ret    0xd758
  4079de:	inc    esi
  4079df:	adc    ah,bl
  4079e1:	or     dl,bl
  4079e3:	int3   
  4079e4:	sti    
  4079e5:	xchg   ecx,eax
  4079e6:	adc    cl,bl
  4079e8:	mov    ebp,0xd785ea97
  4079ed:	sub    DWORD PTR [ebx-0xa72b5bd],edx
  4079f3:	(bad)  
  4079f4:	mov    es,eax
  4079f6:	mov    eax,0x107afe09
  4079fb:	add    ebx,DWORD PTR [esi-0x56e681c]
  407a01:	scas   al,BYTE PTR es:[edi]
  407a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a03:	sub    eax,0xcf9f5b01
  407a08:	mov    bl,0xf4
  407a0a:	je     0x407a1c
  407a0c:	inc    ebp
  407a0d:	or     al,0x98
  407a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a10:	test   DWORD PTR [ecx],0xe8b5f7a0
  407a16:	(bad)  [eax+0x778affb9]
  407a1c:	jp     0x407a29
  407a1e:	jp     0x4079b4
  407a20:	icebp  
  407a21:	les    ecx,FWORD PTR [edi]
  407a23:	mov    edx,0xa450bdd9
  407a28:	cmp    cl,BYTE PTR [edx+eiz*8-0xf96e6fa]
  407a2f:	pop    es
  407a30:	jnp    0x407a04
  407a32:	fldln2 
  407a34:	fisub  WORD PTR [ebx+0x43c62a60]
  407a3a:	mov    bl,0x10
  407a3c:	stos   DWORD PTR es:[edi],eax
  407a3d:	mov    ah,0xcd
  407a3f:	call   0x9a9f:0xc7ce635e
  407a46:	push   esp
  407a47:	hlt    
  407a48:	outs   dx,BYTE PTR ds:[esi]
  407a49:	xlat   BYTE PTR ds:[ebx]
  407a4a:	pop    esp
  407a4b:	sahf   
  407a4c:	jo     0x407a69
  407a4e:	rcl    eax,1
  407a50:	dec    ecx
  407a51:	xchg   edi,eax
  407a52:	inc    BYTE PTR [ecx-0x3c]
  407a55:	fisubr WORD PTR [esp+ebx*1+0x71199d30]
  407a5c:	cmp    eax,0x966de0a7
  407a61:	fadd   QWORD PTR [ecx-0x60]
  407a64:	loope  0x407ac7
  407a66:	mov    esi,0x98a03aee
  407a6c:	sbb    cl,BYTE PTR [ebx+0x22]
  407a6f:	imul   ebp,esp,0x45
  407a72:	mov    bh,0x75
  407a74:	addr16 cmp al,0xf1
  407a77:	loopne 0x407a37
  407a79:	inc    ebx
  407a7a:	jns    0x407a94
  407a7c:	push   es
  407a7d:	in     eax,0xb7
  407a7f:	jne    0x407a37
  407a81:	rcl    BYTE PTR [edi-0xef25180],cl
  407a87:	(bad)  
  407a88:	push   ebx
  407a89:	leave  
  407a8a:	mov    eax,ds:0xf360f26b
  407a8f:	sub    BYTE PTR [ebx+0x4655a8be],dl
  407a95:	sub    al,dh
  407a97:	pop    edi
  407a98:	and    esp,ebp
  407a9a:	dec    esp
  407a9b:	mov    dh,0x64
  407a9d:	sar    DWORD PTR [edx+0x49],1
  407aa0:	adc    al,0xd0
  407aa2:	retf   
  407aa3:	mov    cl,BYTE PTR [eax+0x7151b7a]
  407aa9:	adc    al,0xb9
  407aab:	xchg   edi,eax
  407aac:	xchg   ebp,eax
  407aad:	push   ebx
  407aae:	or     dl,al
  407ab0:	pop    esp
  407ab1:	test   DWORD PTR [edx+0x78],0x69860e35
  407ab8:	lahf   
  407ab9:	cwde   
  407aba:	add    eax,0x17ada56d
  407abf:	cmp    dh,BYTE PTR [ecx+0x77528dde]
  407ac5:	sub    ebx,edi
  407ac7:	fistp  WORD PTR [edx+0x2ceae06b]
  407acd:	sub    eax,DWORD PTR [ebx-0x77a2bea9]
  407ad3:	push   esp
  407ad4:	cmc    
  407ad5:	dec    eax
  407ad6:	fnsave [esi+0x56c51b0c]
  407adc:	mov    dh,0x1
  407ade:	mov    DWORD PTR [ebp+0x6893ef3d],eax
  407ae4:	rcr    DWORD PTR [eax+eax*4],0x20
  407ae8:	jl     0x407b14
  407aea:	out    0x1d,al
  407aec:	mov    ecx,0x405209b6
  407af1:	xchg   esi,eax
  407af2:	and    dl,BYTE PTR [ebp-0x6fe91987]
  407af8:	dec    esi
  407af9:	mov    ecx,0xe6295352
  407afe:	or     BYTE PTR [ebx+0x0],bh
  407b01:	retf   0x193f
  407b04:	xlat   BYTE PTR ds:[ebx]
  407b05:	cmp    eax,0xbbd16a5a
  407b0a:	ret    0x271c
  407b0d:	cmp    DWORD PTR [ebp-0x2bce5415],eax
  407b13:	sub    al,0x8b
  407b15:	xor    al,0x6e
  407b17:	sbb    DWORD PTR [ebp+0x17],esp
  407b1a:	cmp    ah,bl
  407b1c:	shrd   esi,ebx,cl
  407b1f:	stos   DWORD PTR es:[edi],eax
  407b20:	mov    al,ds:0x8602560d
  407b25:	or     BYTE PTR [eax-0x2c],0x32
  407b29:	mov    BYTE PTR [ebx],0x3f
  407b2c:	push   ss
  407b2d:	das    
  407b2e:	lahf   
  407b2f:	(bad)  [esi+0x3b340ae]
  407b35:	vpavgw ymm4,ymm6,YMMWORD PTR [edi+eax*8+0x79]
  407b3b:	pop    eax
  407b3c:	inc    eax
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x445370e0
  407e5b:	pop    esp
  407e5c:	out    dx,al
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	and    dl,BYTE PTR [eax+ebx*8+0x11]
  407e69:	jp     0x407eaf
  407e6b:	xor    ecx,DWORD PTR [ebx]
  407e6d:	loop   0x407e7f
  407e6f:	in     eax,0x90
  407e71:	fwait
  407e72:	stos   BYTE PTR es:[edi],al
  407e73:	pop    es
  407e74:	add    edx,esp
  407e76:	mov    ebx,0xcc7b1574
  407e7b:	mov    fs,ecx
  407e7d:	in     al,0x34
  407e7f:	mov    ss,WORD PTR [edi+0x2a]
  407e82:	mov    fs,WORD PTR [ebp+0xb543dae]
  407e88:	push   ebp
  407e89:	add    ch,BYTE PTR [ebx-0x5cb6828d]
  407e8f:	dec    eax
  407e90:	or     esi,DWORD PTR [ebx]
  407e92:	aam    0x17
  407e94:	push   ds
  407e95:	loope  0x407eb2
  407e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e98:	(bad)  ds:0x67909afc
  407e9e:	sub    ecx,ebx
  407ea0:	into   
  407ea1:	pusha  
  407ea2:	aaa    
  407ea3:	mov    ah,0x2
  407ea5:	jp     0x407e3b
  407ea7:	push   0xfffffffa
  407ea9:	retf   
  407eaa:	xchg   BYTE PTR [ebx-0x518d30f7],al
  407eb0:	ret    
  407eb1:	mov    al,0xef
  407eb3:	cmc    
  407eb4:	inc    edi
  407eb5:	data16 (bad) 
  407eb7:	fs pop es
  407eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eba:	stos   DWORD PTR es:[edi],eax
  407ebb:	lods   eax,DWORD PTR ds:[esi]
  407ebc:	mov    ah,0x44
  407ebe:	and    eax,edx
  407ec0:	xor    DWORD PTR [ebx+0x6a],edx
  407ec3:	jno    0x407e9b
  407ec5:	xchg   esi,eax
  407ec6:	enter  0x496d,0xe7
  407eca:	loope  0x407e74
  407ecc:	add    DWORD PTR [ecx-0x6b],esi
  407ecf:	xchg   edx,eax
  407ed0:	js     0x407ec8
  407ed2:	cs popa 
  407ed4:	sub    eax,0x1ed1b8f4
  407ed9:	inc    ebp
  407eda:	stos   BYTE PTR es:[edi],al
  407edb:	scas   eax,DWORD PTR es:[edi]
  407edc:	mov    WORD PTR [eax+0x10],es
  407edf:	push   esp
  407ee0:	call   0x200b564b
  407ee5:	test   BYTE PTR [edi-0x1242dc83],dl
  407eeb:	push   ds
  407eec:	nop
  407eed:	jle    0x407efe
  407eef:	stc    
  407ef0:	mov    cl,0x58
  407ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef3:	jb     0x407f0b
  407ef5:	repnz aad 0xda
  407ef8:	jecxz  0x407ede
  407efa:	shr    bl,1
  407efc:	fs sahf 
  407efe:	mov    eax,ds:0xade691ea
  407f03:	sub    DWORD PTR [edi*1-0x2a272be4],ebx
  407f0a:	ins    BYTE PTR es:[edi],dx
  407f0b:	loop   0x407e9a
  407f0d:	mov    esi,0x2c0f19df
  407f12:	retf   
  407f13:	pop    es
  407f14:	mov    eax,0x2b8588b6
  407f19:	adc    al,0xc2
  407f1b:	je     0x407f3c
  407f1d:	mov    ah,0xbb
  407f1f:	fsub   st,st(4)
  407f21:	movzx  ebx,al
  407f24:	push   edx
  407f25:	aad    0x5c
  407f27:	clc    
  407f28:	fwait
  407f29:	(bad)  
  407f2a:	in     al,dx
  407f2b:	inc    ebp
  407f2c:	pushf  
  407f2d:	mov    edx,0x3dcc41df
  407f32:	lea    ebx,[ebx-0x73]
  407f35:	mov    cl,0xb8
  407f37:	imul   esp,ebx,0xffffffc7
  407f3a:	aam    0x72
  407f3c:	mov    esi,DWORD PTR [edx-0x45b07720]
  407f42:	leave  
  407f43:	xchg   BYTE PTR [esi+0x439efda3],cl
  407f49:	ror    BYTE PTR [edi-0xc1f332f],1
  407f4f:	mov    ebx,0xf84fe62a
  407f54:	mov    ebx,0x48d1e66d
  407f59:	(bad)  
  407f5a:	out    dx,eax
  407f5b:	push   cs
  407f5c:	test   al,0x33
  407f5e:	test   BYTE PTR ds:0xa4f3dbbe,bh
  407f64:	pop    ecx
  407f65:	xchg   ebx,eax
  407f66:	dec    ebx
  407f67:	ror    DWORD PTR [eiz*2-0x54d89b14],0x6c
  407f6f:	inc    edi
  407f70:	mov    ah,0xd0
  407f72:	(bad)  
  407f73:	fadd   DWORD PTR [ebx]
  407f75:	test   eax,0xd7b4ebfd
  407f7a:	mov    DWORD PTR [edx+0x33374f34],eax
  407f80:	test   eax,0x55d72562
  407f85:	and    eax,0x33249663
  407f8a:	in     al,0xfe
  407f8c:	mov    ds:0xc78514ad,al
  407f91:	fld    DWORD PTR [edi]
  407f93:	sub    al,0x3b
  407f95:	ror    esi,cl
  407f97:	sbb    BYTE PTR [ebp+0x44900b61],cl
  407f9d:	fnstcw WORD PTR [ecx+0x2a]
  407fa0:	push   0xce83961e
  407fa5:	ins    DWORD PTR es:[edi],dx
  407fa6:	push   cs
  407fa7:	pop    ebp
  407fa8:	jmp    0x99fb2b3a
  407fad:	add    BYTE PTR [edx+0x3a],bl
  407fb0:	call   0x185f:0xe8d1da39
  407fb7:	(bad)  
  407fb8:	jg     0x407fc3
  407fba:	cmp    eax,0xbd75b7b4
  407fbf:	push   cs
  407fc0:	sbb    BYTE PTR [esp+eiz*8-0x6f921918],ch
  407fc7:	lahf   
  407fc8:	fisubr WORD PTR [esi-0x9404e4]
  407fce:	aad    0xca
  407fd0:	inc    esp
  407fd1:	sub    al,BYTE PTR [edx-0x37172816]
  407fd7:	mov    dh,0xf9
  407fd9:	out    0x89,al
  407fdb:	pop    edx
  407fdc:	test   eax,0xc2420a8a
  407fe1:	mov    ebx,0xb521f611
  407fe6:	xchg   edx,eax
  407fe7:	pop    ss
  407fe8:	push   eax
  407fe9:	sub    eax,0x7da62fc7
  407fee:	js     0x407ff1
  407ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff1:	mov    esp,?
  407ff3:	sbb    edi,DWORD PTR [eax+0x3130a8e6]
  407ff9:	mov    ebx,0xeb633327
  407ffe:	inc    esp
  407fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408001:	fsub   st(5),st
  408003:	(bad)  
  408004:	in     al,0xa5
  408006:	ret    0x4fd5
  408009:	mov    bh,0xa4
  40800b:	mov    esi,0xc3f41eb0
  408010:	out    dx,eax
  408011:	or     dh,ah
  408013:	xlat   BYTE PTR ds:[ebx]
  408014:	(bad)  
  408015:	pop    edi
  408016:	mov    ecx,0x1c423ec1
  40801b:	xor    esp,DWORD PTR [esi+0x1e763c10]
  408021:	xor    al,0x7b
  408023:	xlat   BYTE PTR ds:[ebx]
  408024:	dec    edx
  408025:	mov    edi,0x649b3646
  40802a:	add    al,0xdf
  40802c:	jmp    0xec6602d9
  408031:	lea    edi,[edx+edx*8-0x2ed5973f]
  408038:	cdq    
  408039:	and    al,dl
  40803b:	cwde   
  40803c:	sbb    BYTE PTR [ebp-0x34],ah
  40803f:	jg     0x407feb
  408041:	les    ecx,FWORD PTR [eax+0x4f4edf27]
  408047:	jb     0x408007
  408049:	fsubrp st(6),st
  40804b:	test   al,0xe4
  40804d:	cmp    al,0x66
  40804f:	cmp    eax,0x14365916
  408054:	mov    ch,0xc8
  408056:	ja     0x408021
  408058:	sub    ecx,DWORD PTR [esi+0x25a2f4f0]
  40805e:	mov    ch,0xa8
  408060:	pushf  
  408061:	adc    DWORD PTR [ecx-0x7bc48c06],eax
  408067:	into   
  408068:	clc    
  408069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806a:	adc    BYTE PTR ds:0x6b40e1c2,ch
  408070:	call   0x8ac7bc35
  408075:	(bad)  
  408076:	cmp    edi,edi
  408078:	das    
  408079:	mov    bh,0x37
  40807b:	nop
  40807c:	rcl    DWORD PTR [eax],1
  40807e:	add    esp,DWORD PTR [eax]
  408080:	xchg   ebp,eax
  408081:	and    eax,0x31fa8f2d
  408086:	mov    ch,0x3d
  408088:	jo     0x408101
  40808a:	ins    BYTE PTR es:[edi],dx
  40808b:	xor    dl,BYTE PTR [ecx-0x10944c50]
  408091:	or     eax,DWORD PTR [edx]
  408093:	lods   al,BYTE PTR ds:[esi]
  408094:	xchg   esi,eax
  408095:	or     DWORD PTR [esi-0xb9a51cb],eax
  40809b:	add    DWORD PTR [edi-0xb09a850],ebp
  4080a1:	or     eax,0xd3af2088
  4080a6:	sub    DWORD PTR [edx+0x22],eax
  4080a9:	lahf   
  4080aa:	(bad)  
  4080ab:	(bad)  
  4080ac:	mov    al,ds:0x33315eeb
  4080b1:	cmp    al,0xd3
  4080b3:	stos   BYTE PTR es:[edi],al
  4080b4:	pop    ds
  4080b5:	inc    ebp
  4080b6:	fs mov esi,0xbb1635f7
  4080bc:	icebp  
  4080bd:	or     eax,0x6e01b31c
  4080c2:	cmp    ebx,ebp
  4080c4:	pop    ebp
  4080c6:	scas   eax,DWORD PTR es:[edi]
  4080c7:	mov    edi,0x24bba8ef
  4080cc:	xor    DWORD PTR [ebx+0x7c],edx
  4080cf:	mov    ds:0x437e20d7,al
  4080d4:	fadd   st(2),st
  4080d6:	xor    ebp,DWORD PTR [edx]
  4080d8:	pop    ss
  4080d9:	mov    bl,0xcc
  4080db:	test   DWORD PTR [esi],0x1154dcd9
  4080e1:	mov    edx,0x7cc3d0c0
  4080e6:	imul   edi,eax,0x10
  4080e9:	and    edx,ecx
  4080eb:	mov    dl,0x26
  4080ed:	xor    BYTE PTR [ebp-0x5f8327ec],0x6
  4080f4:	sub    ebx,ecx
  4080f6:	(bad)  
  4080f7:	or     al,0xb2
  4080f9:	push   esp
  4080fa:	enter  0x655c,0x1c
  4080fe:	int    0x75
  408100:	dec    esi
  408101:	push   ebp
  408102:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408104:	or     ah,BYTE PTR [esi]
  408106:	out    dx,al
  408107:	sbb    al,0x8f
  408109:	int    0x8f
  40810b:	adc    eax,0xe3b52ae5
  408110:	mov    ah,0xd5
  408112:	cdq    
  408113:	sbb    DWORD PTR [ebx],edx
  408115:	pop    esi
  408116:	iret   
  408117:	mov    eax,DWORD PTR [ebp+0x23f8bfb1]
  40811d:	test   eax,esp
  40811f:	inc    eax
  408120:	clc    
  408121:	xor    eax,DWORD PTR [esi+edx*4-0x734e9160]
  408128:	out    0xac,al
  40812a:	jl     0x408130
  40812c:	mov    al,0x1b
  40812e:	and    DWORD PTR [ecx],ecx
  408130:	in     al,0xbd
  408132:	loopne 0x408176
  408134:	pushf  
  408135:	addr16 push 0x4a
  408138:	inc    esi
  408139:	shl    DWORD PTR [ecx-0x5b],0x26
  40813d:	mov    bh,0x47
  40813f:	stos   DWORD PTR es:[edi],eax
  408140:	mov    ecx,0xd9b3661e
  408145:	ror    DWORD PTR [ebx-0x7c6c4142],1
  40814b:	lahf   
  40814c:	in     al,0x82
  40814e:	jo     0x4081cc
  408150:	mov    al,0xb1
  408152:	shl    DWORD PTR [esi],cl
  408154:	or     bl,al
  408156:	addr16 ret 
  408158:	in     eax,dx
  408159:	cwde   
  40815a:	test   BYTE PTR [esi+0x22f3b3fc],dh
  408160:	scas   eax,DWORD PTR es:[edi]
  408161:	jb     0x408127
  408163:	inc    ebp
  408164:	jns    0x408150
  408166:	and    ebx,eax
  408168:	mov    bl,0xb5
  40816a:	imul   ebp,DWORD PTR [edx],0x3ed0824c
  408170:	inc    eax
  408171:	cs (bad) 
  408173:	pop    ebp
  408174:	add    al,0x7
  408176:	inc    ebx
  408177:	mov    BYTE PTR ds:[edi+0x31],dl
  40817b:	int3   
  40817c:	inc    ebx
  40817d:	sahf   
  40817e:	ins    DWORD PTR es:[edi],dx
  40817f:	adc    al,0xea
  408181:	fnclex 
  408183:	ficomp WORD PTR [eax+ebp*1-0x6c]
  408187:	sbb    al,0xc8
  408189:	xchg   edi,eax
  40818a:	xchg   DWORD PTR [edi-0x118bc47c],ebp
  408190:	fild   QWORD PTR [ebx+0x59]
  408193:	push   0xffffffb1
  408195:	push   eax
  408196:	mov    ch,0x82
  408198:	mov    bl,BYTE PTR [ecx-0x4a]
  40819b:	pusha  
  40819c:	mov    ?,WORD PTR [eax-0x7d]
  40819f:	int    0xb8
  4081a1:	call   0x3dc3:0x9b1847b8
  4081a8:	xlat   BYTE PTR ds:[ebx]
  4081a9:	push   ebp
  4081aa:	push   0x77
  4081ac:	sar    edx,0x6f
  4081af:	daa    
  4081b0:	pop    ss
  4081b1:	mov    ah,0xee
  4081b3:	adc    eax,0x40f85dc6
  4081b8:	js     0x4081f5
  4081ba:	or     esp,DWORD PTR [eax+eax*2-0x28]
  4081be:	mov    ah,0xa8
  4081c0:	test   DWORD PTR [eax],ebp
  4081c2:	push   ds
  4081c3:	push   ecx
  4081c4:	stc    
  4081c5:	sub    BYTE PTR [ebx-0x1c93a33f],dl
  4081cb:	das    
  4081cc:	shl    BYTE PTR ds:0x1e6749ab,1
  4081d2:	xchg   DWORD PTR [ecx-0x55],esi
  4081d5:	push   0xe5b55eb
  4081da:	cli    
  4081db:	pushf  
  4081dc:	inc    eax
  4081dd:	or     ah,BYTE PTR [esi]
  4081df:	inc    esi
  4081e0:	xlat   BYTE PTR ds:[ebx]
  4081e1:	lock mov edx,0xc1f90441
  4081e7:	jmp    0x9c38:0x55f2477a
  4081ee:	jnp    0x4081a9
  4081f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f1:	inc    esi
  4081f2:	in     eax,dx
  4081f3:	jmp    0x408265
  4081f5:	jecxz  0x4081e7
  4081f7:	cld    
  4081f8:	retf   
  4081f9:	push   ecx
  4081fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081fb:	data16 (bad) 
  4081fd:	and    al,0x81
  4081ff:	scas   al,BYTE PTR es:[edi]
  408200:	ret    
  408201:	inc    ecx
  408202:	dec    ebp
  408203:	dec    esi
  408204:	xchg   ebp,eax
  408205:	iret   
  408206:	inc    esp
  408207:	mov    bh,0x56
  408209:	fcom   QWORD PTR [ebp-0x72]
  40820c:	call   0x3bff:0x7e287930
  408213:	xor    edi,edx
  408215:	inc    edi
  408216:	add    eax,0x758d6d4b
  40821b:	pop    esp
  40821c:	and    DWORD PTR [eax-0x79],edx
  40821f:	ss cmp al,cl
  408222:	sti    
  408223:	pop    edx
  408224:	data16 jbe 0x408218
  408227:	or     edx,DWORD PTR [ebp-0x8]
  40822a:	xor    eax,0x72314c62
  40822f:	pusha  
  408230:	out    dx,al
  408231:	sbb    esi,eax
  408233:	xor    eax,DWORD PTR [esp+eiz*2-0xaa8a9f1]
  40823a:	bound  esi,QWORD PTR [edi]
  40823c:	cwde   
  40823d:	fcomp  QWORD PTR ds:0xb27664da
  408243:	mov    DWORD PTR [ebx+ebp*2],ecx
  408246:	jecxz  0x40824a
  408248:	loopne 0x408274
  40824a:	mov    BYTE PTR [ecx+0x6],0x8d
  40824e:	ja     0x4082ba
  408250:	xor    DWORD PTR [ecx+0x260d85b5],0x97c32002
  40825a:	jmp    0x408217
  40825c:	push   cs
  40825d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825e:	fnstenv [edi-0x6a]
  408261:	aas    
  408262:	lea    ebx,[edi+0xa2df99e]
  408268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408269:	and    edi,eax
  40826b:	push   esi
  40826c:	bound  ebx,QWORD PTR [edx-0x6984527f]
  408272:	xor    BYTE PTR [edi+0x78439cda],al
  408278:	(bad)  
  408279:	cmp    al,0x92
  40827b:	mov    al,0x3e
  40827d:	fadd   DWORD PTR ds:0x498126fd
  408283:	add    dh,BYTE PTR [edx+0x2d0e70b6]
  408289:	jmp    0x1edc8594
  40828e:	scas   eax,DWORD PTR es:[edi]
  40828f:	jg     0x4082af
  408291:	cmp    ebp,DWORD PTR ss:[edi]
  408294:	jg     0x408261
  408296:	imul   eax,DWORD PTR [edx],0x13
  408299:	lock dec esi
  40829b:	mov    WORD PTR [edx+0x1af24109],?
  4082a1:	xlat   BYTE PTR ds:[ebx]
  4082a2:	stos   BYTE PTR es:[edi],al
  4082a3:	hlt    
  4082a4:	xor    al,0xb8
  4082a6:	out    0xaa,al
  4082a8:	jnp    0x4082b9
  4082aa:	or     ecx,DWORD PTR [ecx]
  4082ac:	xchg   DWORD PTR [esi-0x68cc2e13],esi
  4082b2:	pop    ebp
  4082b3:	pop    ebx
  4082b4:	out    dx,eax
  4082b5:	and    eax,0xd66e0935
  4082ba:	mov    eax,ds:0xa11b20da
  4082bf:	push   DWORD PTR [ecx+0x3069c5a0]
  4082c5:	test   eax,0x70606f53
  4082ca:	mov    BYTE PTR [ebx+0x9],bh
  4082cd:	lods   eax,DWORD PTR ds:[esi]
  4082ce:	clc    
  4082cf:	sub    al,BYTE PTR [eax-0x3b308eb]
  4082d5:	dec    edx
  4082d6:	push   esp
  4082d7:	or     al,0x8
  4082d9:	and    dl,al
  4082db:	mov    fs,WORD PTR [eax+edx*1]
  4082de:	cdq    
  4082df:	loope  0x40835e
  4082e1:	inc    ebx
  4082e2:	cmp    BYTE PTR ds:0xce399ed1,bh
  4082e8:	xor    BYTE PTR [edx-0x6e],dh
  4082eb:	(bad)  
  4082ec:	xchg   DWORD PTR [esi-0x1dfe1c44],ebp
  4082f2:	test   BYTE PTR ds:0x55d094e7,al
  4082f8:	neg    bh
  4082fa:	dec    ebp
  4082fb:	test   BYTE PTR [ebx+0x6073fec4],ch
  408301:	loop   0x4082ab
  408303:	popf   
  408304:	sub    BYTE PTR [eax],bh
  408306:	lods   eax,DWORD PTR ds:[esi]
  408307:	retf   
  408308:	leave  
  408309:	fcom   DWORD PTR [ebp+0x7bf2bf8a]
  40830f:	pop    ds
  408310:	dec    edi
  408311:	mov    dh,0x7
  408313:	(bad)  
  408315:	fist   DWORD PTR [ebp-0x6]
  408318:	pop    ebx
  408319:	fs sub cl,dl
  40831c:	jmp    0xff25:0x9a42a356
  408323:	xor    al,0x4f
  408325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408326:	enter  0x9e66,0x73
  40832a:	imul   edx,DWORD PTR [edx-0x3dc5fba8],0xffffffc6
  408331:	mov    edi,0x26b40d9b
  408336:	(bad)  [ebp-0x6e45e005]
  40833c:	lds    esi,FWORD PTR [ebx]
  40833e:	jae    0x40832c
  408340:	fstp   QWORD PTR [ebx-0x3d7de2f9]
  408346:	stos   DWORD PTR es:[edi],eax
  408347:	cmp    ch,BYTE PTR [esp+ecx*8+0x48]
  40834b:	push   esi
  40834c:	push   ss
  40834d:	jmp    0x40839a
  40834f:	sbb    BYTE PTR [eax],dh
  408351:	fs push edi
  408353:	inc    ebx
  408354:	pop    ecx
  408355:	ss pop ebp
  408357:	and    al,0x17
  408359:	je     0x4083b8
  40835b:	sbb    DWORD PTR [edi],0xffffffac
  40835e:	cli    
  40835f:	push   ebx
  408360:	in     eax,0xc3
  408362:	jmp    0x40836a
  408364:	sar    dh,0x21
  408367:	scas   al,BYTE PTR es:[edi]
  408368:	xchg   edx,eax
  408369:	mov    bl,0x26
  40836b:	xor    BYTE PTR cs:[esi-0x38],bh
  40836f:	mov    BYTE PTR [ecx],cl
  408371:	add    al,0x15
  408373:	jle    0x4083e5
  408375:	sti    
  408376:	test   al,0xd9
  408378:	jl     0x408338
  40837a:	mov    eax,ds:0x7342c99f
  40837f:	pop    eax
  408380:	out    0xfb,eax
  408382:	xchg   ecx,eax
  408383:	adc    dh,BYTE PTR [esi+0x4e]
  408386:	xor    al,0x46
  408388:	push   0x68
  40838a:	(bad)  [ecx+0x3d]
  40838d:	add    eax,0xbfccad5
  408392:	push   cs
  408393:	dec    edx
  408394:	stos   BYTE PTR es:[edi],al
  408395:	mov    WORD PTR [ebp+0x4d43ecd],fs
  40839b:	popa   
  40839c:	test   eax,0xe0faed8c
  4083a1:	leave  
  4083a2:	mov    BYTE PTR [eax+0x7e],ch
  4083a5:	into   
  4083a6:	sub    BYTE PTR [eax-0x5d],dl
  4083a9:	cmp    al,0x2e
  4083ab:	jo     0x4083fa
  4083ad:	mov    ?,WORD PTR [edx-0x6a]
  4083b0:	dec    edi
  4083b1:	xchg   edi,eax
  4083b2:	and    al,0x43
  4083b4:	ror    BYTE PTR [edx+ecx*2-0x26],cl
  4083b8:	xchg   ebp,eax
  4083b9:	adc    DWORD PTR [edi-0x50],edi
  4083bc:	test   DWORD PTR [edi-0xc0b4f2e],esp
  4083c2:	mov    gs,WORD PTR [esi-0x256a1308]
  4083c8:	lods   al,BYTE PTR ds:[esi]
  4083c9:	mov    eax,0x23922fbd
  4083ce:	pop    ds
  4083cf:	test   DWORD PTR [ebx+esi*8+0x21c2e152],0x5d32b756
  4083da:	sub    al,0x80
  4083dc:	(bad)  
  4083dd:	jmp    0x1fe2:0x1a1b5982
  4083e4:	mov    ah,0x97
  4083e6:	or     al,BYTE PTR [edx+0xe]
  4083e9:	or     DWORD PTR [edx+0x57],esp
  4083ec:	test   BYTE PTR [ebx],0x6c
  4083ef:	repz jnp 0x408428
  4083f2:	xchg   ebp,eax
  4083f3:	sub    DWORD PTR [edi],ebp
  4083f5:	pop    edi
  4083f6:	pop    ebx
  4083f7:	sub    DWORD PTR [esi+esi*2+0x3c6a186d],edx
  4083fe:	aas    
  4083ff:	push   eax
  408400:	(bad)  
  408401:	mov    esp,esi
  408403:	stos   BYTE PTR es:[edi],al
  408404:	push   0xfc3f7928
  408409:	popa   
  40840a:	dec    esp
  40840b:	aad    0xbf
  40840d:	push   0xbb7a286e
  408412:	shl    BYTE PTR [ebp+0x4554c818],1
  408418:	inc    esp
  408419:	aas    
  40841a:	push   es
  40841b:	popf   
  40841c:	dec    edx
  40841d:	jge    0x408418
  40841f:	scas   al,BYTE PTR es:[edi]
  408420:	dec    esp
  408421:	stos   BYTE PTR es:[edi],al
  408422:	ins    BYTE PTR es:[edi],dx
  408423:	mov    ebx,DWORD PTR [ecx+0x579ed598]
  408429:	aas    
  40842a:	fidivr WORD PTR [esi]
  40842c:	cmc    
  40842d:	call   0xd80f:0x65753464
  408434:	js     0x40848d
  408436:	push   edi
  408437:	adc    eax,0xfd952e52
  40843c:	xchg   esp,eax
  40843d:	push   ds
  40843e:	outs   dx,DWORD PTR ds:[esi]
  40843f:	mov    ah,0xec
  408441:	pop    esp
  408442:	popa   
  408443:	jo     0x40849b
  408445:	in     eax,0x68
  408447:	jae    0x4083df
  408449:	cmp    BYTE PTR [ebp+0x78],bh
  40844c:	ja     0x4084b3
  40844e:	gs cli 
  408450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408451:	pop    esi
  408452:	mov    cs,WORD PTR [eax]
  408454:	popf   
  408455:	cmp    DWORD PTR [eiz*1+0x6870817e],ebp
  40845c:	cmp    al,0x7d
  40845e:	push   ebx
  40845f:	xor    DWORD PTR [esi-0x5e],esp
  408462:	mov    bl,0x40
  408464:	stc    
  408465:	push   0x3f1455a0
  40846a:	loope  0x4084af
  40846c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846d:	add    eax,0xa8da4960
  408472:	out    dx,al
  408473:	lock loopne 0x408460
  408476:	push   es
  408477:	ja     0x40840c
  408479:	ror    BYTE PTR [ebx+0x39],1
  40847c:	mov    dh,0x7f
  40847e:	test   edi,ecx
  408480:	mov    al,0x4b
  408482:	cmp    dl,BYTE PTR [ebp+0x52eb1cc9]
  408488:	es test ebx,esi
  40848b:	pop    sp
  40848d:	stos   DWORD PTR es:[edi],eax
  40848e:	mov    ch,0x7c
  408490:	mov    bl,0xf9
  408492:	cmp    esp,ebp
  408494:	mov    al,ds:0x462d45b5
  408499:	xchg   esp,eax
  40849a:	jno    0x408452
  40849c:	sbb    al,0xa0
  40849e:	mov    dh,0x43
  4084a0:	sub    esp,DWORD PTR [edx-0x23]
  4084a3:	dec    edx
  4084a4:	cdq    
  4084a5:	pop    ebx
  4084a6:	out    0x1e,al
  4084a8:	add    BYTE PTR [eax+ebp*8+0x1bf01b88],bh
  4084af:	int    0x7b
  4084b1:	gs out dx,al
  4084b3:	fsub   st(6),st
  4084b5:	mov    ebx,0xbd977cf
  4084ba:	inc    ebx
  4084bb:	outs   dx,DWORD PTR ds:[esi]
  4084bc:	popa   
  4084bd:	push   cs
  4084be:	push   eax
  4084bf:	add    dh,dh
  4084c1:	stc    
  4084c2:	jmp    0xfe47:0x5bd9d65d
  4084c9:	cld    
  4084ca:	dec    edx
  4084cb:	inc    ecx
  4084cc:	scas   al,BYTE PTR es:[edi]
  4084cd:	call   0x331c:0x6e7ad67b
  4084d4:	or     al,0xb7
  4084d6:	sbb    ecx,DWORD PTR [ecx]
  4084d8:	cmc    
  4084d9:	dec    eax
  4084da:	add    ah,bh
  4084dc:	lahf   
  4084dd:	mov    esp,0x7620bb4f
  4084e2:	inc    ecx
  4084e3:	rcl    ebp,0x6
  4084e6:	add    al,0xcd
  4084e8:	jne    0x40855b
  4084ea:	dec    ebp
  4084eb:	push   ds
  4084ec:	xor    al,0xab
  4084ee:	or     ebp,DWORD PTR [eax]
  4084f0:	and    al,0x3c
  4084f2:	je     0x4084fb
  4084f4:	stos   BYTE PTR es:[edi],al
  4084f5:	push   cs
  4084f6:	mul    DWORD PTR [ebp+0x39465671]
  4084fc:	dec    eax
  4084fd:	sub    al,0x57
  4084ff:	mov    ds,ebx
  408501:	xor    ah,BYTE PTR [esi]
  408503:	fdivr  DWORD PTR [esi+0x3c]
  408506:	hlt    
  408507:	test   al,0xb1
  408509:	or     BYTE PTR cs:[edx],al
  40850c:	aaa    
  40850d:	mov    esi,0xefa3c4aa
  408512:	xchg   edi,eax
  408513:	sbb    BYTE PTR [eax+0x484400c7],ch
  408519:	adc    bh,BYTE PTR [esi+ecx*2-0x3a]
  40851d:	lock xor bl,BYTE PTR [ecx]
  408520:	fwait
  408521:	test   al,0x26
  408523:	shl    DWORD PTR [ecx-0x76969662],1
  408529:	int3   
  40852a:	test   ecx,ebp
  40852c:	push   cs
  40852d:	ret    0x3d1a
  408530:	and    al,0x62
  408532:	fld    TBYTE PTR [esi+edx*4]
  408535:	aam    0xec
  408537:	dec    eax
  408538:	cdq    
  408539:	dec    esi
  40853a:	jecxz  0x40859d
  40853c:	(bad)  [ecx]
  40853e:	adc    eax,0x64b3ceee
  408543:	lods   al,BYTE PTR ds:[esi]
  408544:	xlat   BYTE PTR ds:[ebx]
  408545:	in     al,0x42
  408547:	sbb    al,0xfd
  408549:	and    eax,0x6b5ff5ec
  40854e:	add    DWORD PTR [ebx+0x13],0x17
  408552:	fs mov ah,0xd5
  408555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408556:	xor    BYTE PTR [edx+0xc007472],0x1a
  40855d:	popa   
  40855e:	inc    ebx
  40855f:	sbb    esi,DWORD PTR [eax]
  408561:	mov    WORD PTR [edx+0x6b0015ea],gs
  408567:	in     al,dx
  408568:	cli    
  408569:	push   edi
  40856a:	in     al,dx
  40856b:	sbb    ch,BYTE PTR [eax*4+0x2bbccbf3]
  408572:	loopne 0x408561
  408574:	fnop   
  408576:	fidiv  WORD PTR [ecx]
  408578:	add    al,0xc3
  40857a:	pop    edx
  40857b:	inc    eax
  40857c:	mov    bh,0xe8
  40857e:	xchg   BYTE PTR [eax],al
  408580:	data16 jnp 0x408559
  408583:	aas    
  408584:	out    dx,al
  408585:	inc    ecx
  408586:	and    DWORD PTR [ecx-0x45],eax
  408589:	imul   edi,DWORD PTR [edx-0x55],0x493bc8d9
  408590:	icebp  
  408591:	aaa    
  408592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408593:	daa    
  408594:	fldenv [eax+esi*8+0x15]
  408598:	arpl   WORD PTR [ecx-0x7b],ax
  40859b:	iret   
  40859c:	xchg   DWORD PTR [edi],ebp
  40859e:	je     0x408576
  4085a0:	or     DWORD PTR [ebp+0x6637ff62],ecx
  4085a6:	add    BYTE PTR [ecx],al
  4085a8:	xor    BYTE PTR [esi],dl
  4085aa:	push   ebx
  4085ab:	and    esp,DWORD PTR [edx]
  4085ad:	cwde   
  4085ae:	mov    ah,0x77
  4085b0:	and    DWORD PTR [esi+0x6a],ebp
  4085b3:	jbe    0x408630
  4085b5:	out    0x99,eax
  4085b7:	ss jno 0x408624
  4085ba:	mov    WORD PTR [eax],cs
  4085bc:	cdq    
  4085bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085be:	enter  0xd4a0,0xde
  4085c2:	mov    esi,0x24f80cdb
  4085c7:	or     eax,0x6297d202
  4085cc:	mov    edx,DWORD PTR [edx+edx*2]
  4085cf:	aas    
  4085d0:	add    ch,BYTE PTR ds:0x440a638b
  4085d6:	(bad)  
  4085d7:	mov    eax,0xd5d85a29
  4085dc:	ss lahf 
  4085de:	add    bh,al
  4085e0:	push   esi
  4085e1:	cwde   
  4085e2:	addr16 or eax,0x9f8c2a5b
  4085e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e9:	in     eax,dx
  4085ea:	mov    ecx,0xa522dcc3
  4085ef:	mov    BYTE PTR [ebp+0x14c8e091],ch
  4085f5:	cmp    eax,0x768ffe0b
  4085fa:	sub    al,bh
  4085fc:	push   esp
  4085fd:	in     al,0xd1
  4085ff:	test   ebp,ecx
  408601:	push   0xfe31ddb6
  408606:	aaa    
  408607:	dec    ebp
  408608:	and    bl,BYTE PTR gs:[edi+0x42]
  40860c:	mov    DWORD PTR [esi-0x3f76abcc],edx
  408612:	ret    
  408613:	inc    ebx
  408614:	jle    0x4085fb
  408616:	or     eax,0x13983
  40861b:	cdq    
  40861c:	cmp    cl,BYTE PTR [edi-0x45]
  40861f:	repz inc esi
  408621:	popa   
  408622:	push   cs
  408623:	jae    0x4085f8
  408625:	out    dx,al
  408626:	jecxz  0x40869b
  408628:	inc    ebp
  408629:	xchg   ebx,eax
  40862a:	xchg   esp,eax
  40862b:	jp     0x408607
  40862d:	cmp    DWORD PTR [ebp+0x675dcf0c],esp
  408633:	loop   0x4086a0
  408635:	xchg   DWORD PTR [edx+esi*4+0x41438ea5],edi
  40863c:	pop    ebx
  40863d:	pcmpgtb mm0,QWORD PTR [esi+0x4d]
  408641:	adc    ebx,DWORD PTR [edi-0x6d5ff5b7]
  408647:	dec    eax
  408648:	ins    DWORD PTR es:[edi],dx
  408649:	pop    ds
  40864a:	pop    ebx
  40864b:	fs mov bh,0xb3
  40864e:	dec    eax
  40864f:	in     eax,dx
  408650:	js     0x40865c
  408652:	jae    0x4086c2
  408654:	lods   eax,DWORD PTR ds:[esi]
  408655:	add    DWORD PTR [ecx+ebp*2-0x4f],esp
  408659:	ins    DWORD PTR es:[edi],dx
  40865a:	fild   WORD PTR [edx]
  40865c:	sbb    DWORD PTR [edi],ebx
  40865e:	mov    ds:0xe9f177b3,al
  408663:	out    0xb7,eax
  408665:	ss add al,0x4a
  408668:	mov    ds:0xf25b6b56,al
  40866d:	mov    DWORD PTR [edi-0x5b93f001],0x6bbf13e2
  408677:	and    al,0x9e
  408679:	adc    esi,DWORD PTR [edx+0x281e9cef]
  40867f:	pusha  
  408680:	inc    ebp
  408681:	(bad)  
  408682:	lea    edx,[ecx-0x3b]
  408685:	sbb    cl,ch
  408687:	(bad)  
  408688:	aad    0xe1
  40868a:	sub    DWORD PTR [ebx],ecx
  40868c:	es call 0x5cf7:0x193bc614
  408694:	adc    eax,0x61781a84
  408699:	into   
  40869a:	mov    ecx,0x5fef6fbf
  40869f:	je     0x408668
  4086a1:	popf   
  4086a2:	bound  edi,QWORD PTR [ebp-0x22]
  4086a5:	imul   ebx,DWORD PTR [edx],0xe3728366
  4086ab:	push   ebp
  4086ac:	push   edi
  4086ad:	int3   
  4086ae:	mov    edx,0x81cb8c96
  4086b3:	push   cs
  4086b4:	dec    eax
  4086b5:	in     eax,0x11
  4086b7:	inc    ebx
  4086b8:	icebp  
  4086b9:	loop   0x40866f
  4086bb:	inc    edx
  4086bc:	pop    ss
  4086bd:	xchg   edi,eax
  4086be:	inc    esp
  4086bf:	nop
  4086c0:	xor    eax,0xc573a2b0
  4086c5:	xchg   ebx,eax
  4086c6:	jb     0x40865d
  4086c8:	inc    esp
  4086c9:	sahf   
  4086ca:	gs (bad) 
  4086cc:	mov    cl,0xf7
  4086ce:	or     BYTE PTR [edx-0x37c20f91],dh
  4086d4:	and    DWORD PTR [esi+eax*2],ecx
  4086d7:	ins    BYTE PTR es:[edi],dx
  4086d8:	jae    0x4086fc
  4086da:	mov    al,ds:0x3b494bd8
  4086df:	push   esi
  4086e0:	mov    eax,ds:0x76c04278
  4086e5:	dec    ebx
  4086e6:	push   cs
  4086e7:	in     al,0xdc
  4086e9:	lahf   
  4086ea:	sub    ch,ah
  4086ec:	popf   
  4086ed:	int    0x8d
  4086ef:	cmp    dl,BYTE PTR [edi-0x763032d8]
  4086f5:	out    0x1d,eax
  4086f7:	(bad)  
  4086f8:	fimul  WORD PTR [edi]
  4086fa:	(bad)  
  4086fb:	sbb    dh,al
  4086fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086fe:	add    dh,ch
  408700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408701:	cwde   
  408702:	stos   DWORD PTR es:[edi],eax
  408703:	fistp  DWORD PTR [ebp-0x44dbafb0]
  408709:	in     ax,0x1b
  40870c:	mov    esi,ss
  40870e:	dec    edi
  40870f:	rcl    DWORD PTR [edx-0x13],0x69
  408713:	mov    WORD PTR [edi],fs
  408715:	mov    ds:0x267bef79,eax
  40871a:	retf   0x146e
  40871d:	mov    ebp,0x1f0aa57d
  408722:	leave  
  408723:	int    0xd0
  408725:	test   eax,0xbfad6361
  40872a:	not    BYTE PTR [edi]
  40872c:	mov    eax,ds:0xaed2d89f
  408731:	pop    ecx
  408732:	jge    0x408785
  408734:	mov    bl,bl
  408736:	das    
  408737:	xor    al,0xd1
  408739:	xor    DWORD PTR [ecx+0x2a],ebp
  40873c:	fwait
  40873d:	jge    0x408787
  40873f:	mov    ebx,esi
  408741:	or     al,al
  408743:	or     ebp,DWORD PTR ds:0x9a3a0ee4
  408749:	and    eax,0xf89ee91f
  40874e:	cld    
  40874f:	out    dx,al
  408750:	out    dx,al
  408751:	cdq    
  408752:	mov    cl,0xe1
  408754:	add    al,0xc3
  408756:	mov    ebx,0x17886000
  40875b:	ins    BYTE PTR es:[edi],dx
  40875c:	xchg   DWORD PTR ss:[eax+esi*4+0x28cecb6b],esi
  408764:	jns    0x4087ab
  408766:	cmp    BYTE PTR [edx-0x67fa339b],dl
  40876c:	loop   0x408739
  40876e:	push   ecx
  40876f:	(bad)  
  408770:	dec    esp
  408771:	(bad)  
  408772:	mov    ah,BYTE PTR [edx+0x512668d6]
  408778:	add    DWORD PTR [edx],ebp
  40877a:	arpl   WORD PTR [ecx-0x785b9d98],bp
  408780:	sbb    dl,BYTE PTR [ebp+0x1d860e3f]
  408786:	jle    0x408743
  408788:	(bad)  
  408789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40878a:	push   esi
  40878b:	leave  
  40878c:	js     0x40878a
  40878e:	idiv   BYTE PTR [edx-0xeeb50ce]
  408794:	and    bl,ah
  408796:	adc    DWORD PTR [ecx-0x5391b437],0xfffffffd
  40879d:	mov    DWORD PTR [edi+0x15],ebp
  4087a0:	cli    
  4087a1:	lods   al,BYTE PTR ds:[esi]
  4087a2:	sub    al,0x9d
  4087a4:	aam    0xaa
  4087a6:	sbb    ah,BYTE PTR [ebx-0x18aa7d5b]
  4087ac:	and    eax,0x450e87cc
  4087b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b2:	adc    DWORD PTR [edi],0x241ef570
  4087b8:	repnz push es
  4087ba:	xor    cl,bl
  4087bc:	ret    0xaaf5
  4087bf:	stc    
  4087c0:	sti    
  4087c1:	dec    ebp
  4087c2:	inc    ebp
  4087c3:	bound  eax,QWORD PTR [edi-0x740d0dfc]
  4087c9:	sbb    eax,0xc24a4eb9
  4087ce:	fsubr  st,st(6)
  4087d0:	mov    dh,0x4d
  4087d2:	gs mov eax,0x15bf43e8
  4087d8:	out    dx,al
  4087d9:	ins    BYTE PTR es:[edi],dx
  4087da:	sahf   
  4087db:	outs   dx,DWORD PTR ds:[esi]
  4087dc:	cs dec edi
  4087de:	push   ecx
  4087df:	cmp    bl,ah
  4087e1:	inc    eax
  4087e2:	fadd   st,st(1)
  4087e4:	add    ebx,DWORD PTR [edx+0x5485fee4]
  4087ea:	arpl   bp,sp
  4087ec:	loop   0x4087d8
  4087ee:	scas   al,BYTE PTR es:[di]
  4087f0:	cmp    BYTE PTR [ecx-0x3a],bl
  4087f3:	xchg   edx,eax
  4087f4:	xchg   ecx,eax
  4087f5:	pop    edi
  4087f6:	mov    cl,0xf9
  4087f8:	jmp    DWORD PTR [esi-0x38]
  4087fb:	cld    
  4087fc:	cmp    al,0xd
  4087fe:	(bad)  [ebp+eiz*8-0x64d142a3]
  408805:	inc    esi
  408806:	fadd   DWORD PTR [esi+edi*8+0x26]
  40880a:	push   ds
  40880b:	mov    ah,0xba
  40880d:	and    BYTE PTR [ecx+0x6e],bh
  408810:	das    
  408811:	stc    
  408812:	repnz cs add al,0x16
  408816:	push   ss
  408817:	xchg   edx,eax
  408818:	out    0x16,al
  40881a:	test   DWORD PTR [ecx-0x8],edi
  40881d:	jmp    0x780f:0x4a7cdd72
  408824:	add    eax,0x5adf082a
  408829:	mov    ds:0xce5d8fbd,eax
  40882e:	cmp    eax,0xfaac7265
  408833:	xlat   BYTE PTR ds:[ebx]
  408834:	pop    ss
  408835:	dec    edi
  408836:	ins    DWORD PTR es:[edi],dx
  408837:	es aas 
  408839:	sbb    eax,0x1591827c
  40883e:	test   BYTE PTR [edi+0x3f],ch
  408841:	in     eax,0x22
  408843:	or     dl,BYTE PTR [edx+ebp*2+0x39f6dad9]
  40884a:	shl    cl,0x31
  40884d:	shr    BYTE PTR [si],cl
  408850:	rcr    dl,1
  408852:	aad    0x6e
  408854:	mov    DWORD PTR [ebp+0x54b9893f],esi
  40885a:	or     edi,DWORD PTR es:[edx-0x63]
  40885e:	jp     0x4088a1
  408860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408861:	mov    ds:0xd5ba655f,al
  408866:	scas   al,BYTE PTR es:[edi]
  408867:	sti    
  408868:	aaa    
  408869:	xor    BYTE PTR [ecx],ah
  40886b:	adc    BYTE PTR [ebp+0x60a594cb],bl
  408871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408872:	or     ebx,DWORD PTR [ebx]
  408874:	xor    bh,BYTE PTR [ebx-0x8b19732]
  40887a:	add    BYTE PTR [ebp-0x73d3248d],ah
  408880:	mov    bh,0x6c
  408882:	pop    ebx
  408883:	js     0x408818
  408885:	inc    ebp
  408886:	lds    edx,FWORD PTR [ecx]
  408888:	adc    BYTE PTR [eax+eax*4+0xc],bh
  40888c:	xchg   esp,eax
  40888d:	pushf  
  40888e:	cmp    al,0xa1
  408890:	adc    al,0x6e
  408892:	sub    ecx,edx
  408894:	jle    0x408886
  408896:	sar    BYTE PTR [eax+esi*4-0xd],0x1a
  40889b:	adc    DWORD PTR [edx-0x22],ebp
  40889e:	adc    BYTE PTR [ebp-0x78],al
  4088a1:	idiv   DWORD PTR [eax-0x25f72375]
  4088a7:	sub    BYTE PTR [ebp-0x782a534b],0xc8
  4088ae:	dec    ecx
  4088af:	pop    esp
  4088b0:	fst    DWORD PTR [edx+0x6e]
  4088b3:	fwait
  4088b4:	add    BYTE PTR [ebx],cl
  4088b6:	retf   
  4088b7:	ja     0x408926
  4088b9:	ss test al,0x51
  4088bc:	dec    edi
  4088bd:	cli    
  4088be:	pop    ebp
  4088bf:	mov    ds:0xaf154e19,eax
  4088c4:	push   bp
  4088c6:	or     ebp,edx
  4088c8:	es popa 
  4088ca:	out    0xda,eax
  4088cc:	mov    cl,0x40
  4088ce:	and    DWORD PTR [ebp+0x8de08ae],ecx
  4088d4:	mov    eax,0x6133750c
  4088d9:	icebp  
  4088da:	shr    DWORD PTR [edx+0x39],cl
  4088dd:	rcl    DWORD PTR ds:0x7fee6796,cl
  4088e4:	shl    DWORD PTR [ecx+0x70f2c93a],1
  4088ea:	ror    bh,cl
  4088ec:	test   DWORD PTR [edi],0x4d388aa2
  4088f2:	and    eax,0x728622ff
  4088f7:	in     eax,dx
  4088f8:	adc    eax,0xf56a3c93
  4088fd:	mov    bl,0x73
  4088ff:	sahf   
  408900:	test   BYTE PTR [eax],al
  408902:	ins    DWORD PTR es:[edi],dx
  408903:	fadd   DWORD PTR [ebx+0x2a9a0eac]
  408909:	and    al,0xcc
  40890b:	std    
  40890c:	(bad)  
  40890d:	mov    eax,0x7d4cf37a
  408912:	pusha  
  408913:	mov    ch,0x76
  408915:	mov    ecx,DWORD PTR [eax+edi*2-0x718a90ea]
  40891c:	shl    BYTE PTR [ecx+0x67776f34],1
  408922:	xchg   edx,eax
  408923:	int    0xd4
  408925:	ss out 0xfe,al
  408928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408929:	xor    al,0xec
  40892b:	adc    bl,BYTE PTR [ebx-0x62574301]
  408931:	adc    eax,0x189f8aad
  408936:	in     eax,0x54
  408938:	pop    edi
  408939:	add    al,0x77
  40893b:	je     0x408900
  40893d:	iret   
  40893e:	nop
  40893f:	imul   bh
  408941:	jb     0x4088cd
  408943:	enter  0xf68f,0xe1
  408947:	push   0xffffffbf
  408949:	sub    al,ah
  40894b:	ss xor al,0x7
  40894e:	push   0x2c85e6ae
  408953:	clc    
  408954:	xlat   BYTE PTR ds:[ebx]
  408955:	bound  ebp,QWORD PTR [esi+0x28eb1416]
  40895b:	mov    eax,ds:0x72f07217
  408960:	js     0x408904
  408962:	and    al,0x36
  408964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408965:	pop    ebx
  408966:	cld    
  408967:	jnp    0x4089d1
  408969:	mov    al,0x63
  40896b:	rol    esp,cl
  40896d:	mov    esi,0xa3d534c6
  408972:	jb     0x40895a
  408974:	int    0x1e
  408976:	dec    ebx
  408977:	sbb    eax,0x748ef7ef
  40897c:	out    0x32,eax
  40897e:	les    ebx,FWORD PTR ds:0x16f84d23
  408984:	jb     0x408a03
  408986:	jg     0x40898b
  408988:	xchg   ebp,eax
  408989:	cmp    cl,BYTE PTR [edx+0x4c]
  40898c:	jnp    0x40894c
  40898e:	mov    al,0x12
  408990:	iret   
  408991:	sbb    DWORD PTR [ecx-0x12],esi
  408994:	and    ah,BYTE PTR [eax-0x4e8796ac]
  40899a:	inc    ecx
  40899b:	imul   edi,DWORD PTR [esi],0x20
  40899e:	pop    ds
  40899f:	sti    
  4089a0:	mov    ebp,cs
  4089a2:	rcl    DWORD PTR [eax],1
  4089a4:	scas   eax,DWORD PTR es:[edi]
  4089a5:	iret   
  4089a6:	mov    ds:0xe475904f,eax
  4089ab:	xchg   DWORD PTR ds:0xa8ad7dc4,esp
  4089b1:	xor    cl,BYTE PTR [ebx+0x7a346042]
  4089b7:	jmp    0xee76:0x8f0e1926
  4089be:	repnz or eax,0x5e8c9520
  4089c4:	aaa    
  4089c5:	stc    
  4089c6:	int3   
  4089c7:	call   FWORD PTR [esi+0x59ecf4f]
  4089cd:	xchg   ch,al
  4089cf:	pop    ebx
  4089d0:	sub    eax,0x1bb7fb2
  4089d5:	jle    0x408986
  4089d7:	mov    edx,0x965990c1
  4089dc:	test   BYTE PTR [ecx+esi*8],ah
  4089df:	jmp    0x408a18
  4089e1:	jmp    0xda6ceac7
  4089e6:	ins    BYTE PTR es:[edi],dx
  4089e7:	sahf   
  4089e8:	test   al,0xe4
  4089ea:	mov    ds:0xe98af55f,al
  4089ef:	data16 jle 0x40898f
  4089f2:	into   
  4089f3:	pop    esp
  4089f4:	jmp    0x408a23
  4089f6:	lock imul ecx,DWORD PTR [esi],0xe29985d5
  4089fd:	dec    edi
  4089fe:	out    0xac,al
  408a00:	icebp  
  408a01:	push   ss
  408a02:	cmp    al,0xd0
  408a04:	(bad)
  408a08:	cmp    eax,0xa37f3bba
  408a0d:	sub    BYTE PTR [edx],bl
  408a0f:	pop    ebp
  408a10:	push   ebp
  408a11:	not    eax
  408a13:	mov    DWORD PTR [ecx+0x26],ebp
  408a16:	fbstp  TBYTE PTR [eax]
  408a18:	xchg   ebx,eax
  408a19:	mov    dl,0x67
  408a1b:	xchg   DWORD PTR [eax+0x34dda8fb],eax
  408a21:	imul   eax,edx,0xffffff81
  408a24:	xor    ebp,0xaf929b06
  408a2a:	pop    eax
  408a2b:	lock mov ebp,0x18ddab10
  408a31:	mov    cl,0xf6
  408a33:	lock mov ch,BYTE PTR [ecx]
  408a36:	dec    ebp
  408a37:	pusha  
  408a38:	cdq    
  408a39:	pop    esi
  408a3a:	scas   eax,DWORD PTR es:[edi]
  408a3b:	out    0xc3,eax
  408a3d:	lock inc ebx
  408a3f:	dec    edx
  408a40:	sbb    eax,0xecd182eb
  408a45:	sub    esi,eax
  408a47:	jp     0x408ac0
  408a49:	scas   eax,DWORD PTR es:[edi]
  408a4a:	xor    eax,0xde69929a
  408a4f:	iret   
  408a50:	or     al,0xa5
  408a52:	sbb    eax,0x11c52626
  408a57:	push   ebp
  408a58:	pushf  
  408a59:	(bad)  
  408a5a:	lds    ecx,FWORD PTR [ebp-0x38ba8344]
  408a60:	push   0xffffffc7
  408a62:	xor    eax,DWORD PTR [ecx-0x65]
  408a65:	jmp    0x4089fb
  408a67:	xor    ch,ah
  408a69:	dec    ecx
  408a6a:	pop    esp
  408a6b:	mov    ds:0xfd1097f8,al
  408a70:	nop
  408a71:	cdq    
  408a72:	ins    BYTE PTR es:[edi],dx
  408a73:	aas    
  408a74:	jle    0x408a74
  408a76:	stos   DWORD PTR es:[edi],eax
  408a77:	dec    esp
  408a78:	ins    BYTE PTR es:[edi],dx
  408a79:	loope  0x408a28
  408a7b:	stos   BYTE PTR es:[edi],al
  408a7c:	cdq    
  408a7d:	out    0x5a,al
  408a7f:	fsub   DWORD PTR [esi+0x73]
  408a82:	mov    ds:0x4f5ba698,eax
  408a87:	jp     0x408a3e
  408a89:	mov    ah,0xf6
  408a8b:	xor    al,0xa
  408a8d:	mov    esp,0xee62f472
  408a92:	pop    edx
  408a93:	cdq    
  408a94:	mov    esp,0x6cca387d
  408a99:	cli    
  408a9a:	pop    esp
  408a9b:	test   BYTE PTR [eax-0x6c],cl
  408a9e:	rcl    edi,0x1a
  408aa1:	dec    ecx
  408aa2:	pusha  
  408aa3:	sub    BYTE PTR [ecx-0x14],cl
  408aa6:	aad    0x52
  408aa8:	movzx  esp,WORD PTR [edi]
  408aab:	or     eax,0x524cb562
  408ab0:	enter  0x9eb3,0xce
  408ab4:	jo     0x408a63
  408ab6:	mov    ds:0x3490d628,al
  408abb:	in     eax,dx
  408abc:	cwde   
  408abd:	adc    ebp,eax
  408abf:	shl    eax,0x17
  408ac2:	test   al,cl
  408ac4:	call   0x753e5340
  408ac9:	and    eax,0x16
  408acc:	xor    eax,0x5ad194ab
  408ad1:	xchg   ecx,eax
  408ad2:	repnz popa 
  408ad4:	push   ebp
  408ad5:	in     al,0x91
  408ad7:	push   ds
  408ad8:	xchg   ebp,eax
  408ad9:	push   0xffffffac
  408adb:	push   ebx
  408adc:	inc    ebx
  408add:	stos   DWORD PTR es:[edi],eax
  408ade:	or     eax,0x365e8863
  408ae3:	ins    DWORD PTR es:[edi],dx
  408ae4:	bound  edx,QWORD PTR fs:[edx*4+0x749a856b]
  408aec:	iret   
  408aed:	push   0x76
  408aef:	jae    0x408aed
  408af1:	sbb    BYTE PTR [edx+0x48],0x54
  408af5:	xchg   edx,eax
  408af6:	out    dx,eax
  408af7:	std    
  408af8:	lods   eax,DWORD PTR ds:[esi]
  408af9:	cmovne eax,DWORD PTR [edx+0x6b021c27]
  408b00:	push   esp
  408b01:	cmp    esi,DWORD PTR [ebp+0x4d]
  408b04:	bound  ebp,QWORD PTR [edi-0x7a]
  408b07:	mov    edi,0x6d563515
  408b0c:	ss xchg ecx,eax
  408b0e:	xchg   esp,eax
  408b0f:	aaa    
  408b10:	pop    ebp
  408b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b12:	loop   0x408b20
  408b14:	jo     0x408aca
  408b16:	sbb    eax,0x21cb2391
  408b1b:	push   es
  408b1c:	mov    ebp,0x91b4adec
  408b21:	mov    fs,WORD PTR ds:0xc4e7ecbc
  408b27:	xchg   edx,eax
  408b28:	inc    esi
  408b29:	or     eax,0xd7469ebe
  408b2e:	pushf  
  408b2f:	sbb    eax,0xcea8fae
  408b34:	loope  0x408b9f
  408b36:	fiadd  WORD PTR [eax+0x6e]
  408b39:	mov    edx,0xdce21e8b
  408b3e:	mov    cl,0xda
  408b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b41:	popf   
  408b42:	sbb    al,0x98
  408b44:	test   BYTE PTR [esi],0x29
  408b47:	or     dl,BYTE PTR [ebx-0x3305fdd5]
  408b4d:	jp     0x408b94
  408b4f:	clc    
  408b50:	ret    0xd31d
  408b53:	adc    DWORD PTR [ecx+0x77],ebx
  408b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b57:	mov    ecx,ebx
  408b59:	mov    ax,ds:0xd9b94fa2
  408b5f:	lock pop esp
  408b61:	shr    edx,1
  408b63:	jne    0x408b4f
  408b65:	lock cmp esi,DWORD PTR [eax-0x43]
  408b69:	leave  
  408b6a:	jns    0x408b1c
  408b6c:	int3   
  408b6d:	repz shl DWORD PTR [ecx+0x60],1
  408b71:	cld    
  408b72:	inc    eax
  408b73:	or     edx,DWORD PTR [ecx]
  408b75:	sbb    bl,BYTE PTR [esi]
  408b77:	dec    ebp
  408b78:	ins    BYTE PTR es:[edi],dx
  408b79:	adc    DWORD PTR [ecx-0x5e25c53f],eax
  408b7f:	add    al,0x5d
  408b81:	xchg   esp,eax
  408b82:	(bad)
  408b85:	mov    ebp,0xc5736380
  408b8a:	sti    
  408b8b:	add    DWORD PTR [edi-0x156850de],eax
  408b91:	in     eax,0x26
  408b93:	sub    esi,eax
  408b95:	ret    
  408b96:	jbe    0x408b49
  408b98:	push   ss
  408b99:	add    edi,0xffffff9f
  408b9c:	(bad)  
  408b9d:	adc    dh,BYTE PTR [ebp+0x568ffc12]
  408ba3:	xor    edi,DWORD PTR [edi-0x60b26709]
  408ba9:	mov    dh,BYTE PTR [esi-0x7059ddc3]
  408baf:	xchg   ebp,eax
  408bb0:	in     eax,dx
  408bb1:	jae    0x408c01
  408bb3:	and    eax,esp
  408bb5:	aam    0x8d
  408bb7:	scas   eax,DWORD PTR es:[edi]
  408bb8:	add    cl,BYTE PTR [eax+0x2efede69]
  408bbe:	jae    0x408c03
  408bc0:	frndint 
  408bc2:	test   DWORD PTR [esi+0x35c546e3],esp
  408bc8:	inc    esi
  408bc9:	xor    eax,0x3d049c19
  408bce:	stos   DWORD PTR es:[edi],eax
  408bcf:	adc    esi,DWORD PTR [eax-0x69]
  408bd2:	adc    esp,DWORD PTR [ebp+0x466081f2]
  408bd8:	push   esp
  408bd9:	push   ds
  408bda:	add    dh,BYTE PTR [edx+0x6f93aa4]
  408be0:	xchg   ecx,eax
  408be1:	cmp    BYTE PTR [edi],ch
  408be3:	fisttp WORD PTR [eax+0x1]
  408be6:	and    ebx,DWORD PTR [eax]
  408be8:	div    bl
  408bea:	loop   0x408c21
  408bec:	outs   dx,BYTE PTR ds:[esi]
  408bed:	jmp    0x408ba0
  408bef:	push   eax
  408bf0:	add    DWORD PTR [edi+0x60bdb15],0x76e49a5d
  408bfa:	push   es
  408bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bfc:	mov    bh,0x98
  408bfe:	and    DWORD PTR [ebp+0xfdda69a],0xffffff83
  408c05:	mov    ah,0xc0
  408c07:	cmp    DWORD PTR [ecx-0x41e1959e],esi
  408c0d:	jle    0x408bb4
  408c0f:	sub    DWORD PTR [ebp+0x1c],edi
  408c12:	mov    edx,0xbcdd57c6
  408c17:	or     edx,DWORD PTR [esi]
  408c19:	and    bh,0xfc
  408c1c:	jmp    FWORD PTR [ebx]
  408c1e:	lds    ecx,FWORD PTR [edi-0x40]
  408c21:	xchg   esp,eax
  408c22:	adc    DWORD PTR [ecx],0xffffffa1
  408c25:	in     eax,dx
  408c26:	or     DWORD PTR [edx*2+0x29eb3d0d],esi
  408c2d:	cdq    
  408c2e:	xor    eax,0xbcdbd1bf
  408c33:	mov    WORD PTR [edx],gs
  408c35:	xchg   ebx,eax
  408c36:	mov    dh,0x87
  408c38:	dec    ebx
  408c39:	aas    
  408c3a:	(bad)  
  408c3b:	jne    0x408c62
  408c3d:	popa   
  408c3e:	imul   eax,eax,0xc10727b3
  408c44:	std    
  408c45:	xchg   esi,eax
  408c46:	xchg   ebp,eax
  408c47:	call   0x1238:0xf87aab03
  408c4e:	mov    edx,0x10a029f8
  408c53:	sbb    al,0x11
  408c55:	es inc ebx
  408c57:	fcomp  DWORD PTR [edx+0x586f9271]
  408c5d:	ret    0xc27d
  408c60:	sbb    BYTE PTR ss:[esi*4-0x3810a24b],cl
  408c68:	inc    ebx
  408c69:	sbb    al,0x89
  408c6b:	daa    
  408c6c:	popa   
  408c6d:	push   0x14cfb98c
  408c72:	out    dx,eax
  408c73:	add    ecx,esi
  408c75:	in     al,dx
  408c76:	cdq    
  408c77:	pop    esp
  408c78:	les    esp,FWORD PTR [ebp-0x44]
  408c7b:	mov    ebx,DWORD PTR [esi]
  408c7d:	pop    ecx
  408c7e:	jnp    0x408c32
  408c80:	adc    eax,0xe694d0b
  408c85:	ins    DWORD PTR es:[edi],dx
  408c86:	cmp    al,0x32
  408c88:	and    cl,BYTE PTR [esi+eax*1-0x12]
  408c8c:	in     eax,dx
  408c8d:	(bad)  
  408c8e:	out    0x82,al
  408c90:	lods   eax,DWORD PTR ds:[esi]
  408c91:	mov    fs,WORD PTR [ecx+0x6df0029e]
  408c97:	cmp    eax,0xee264944
  408c9c:	ins    BYTE PTR es:[edi],dx
  408c9d:	sub    dl,0x53
  408ca0:	push   esp
  408ca1:	dec    ebx
  408ca2:	sub    esi,DWORD PTR [ecx-0x2d912357]
  408ca8:	out    dx,eax
  408ca9:	xchg   esp,eax
  408caa:	sbb    esi,DWORD PTR [esi]
  408cac:	add    al,0x64
  408cae:	in     al,0x6b
  408cb0:	jmp    0x401b5cd8
  408cb5:	repnz add di,sp
  408cb9:	or     DWORD PTR [eax],ecx
  408cbb:	es int3 
  408cbd:	sub    esi,DWORD PTR [ebx]
  408cbf:	add    dl,dh
  408cc1:	inc    esp
  408cc2:	mov    bl,0x97
  408cc4:	push   ds
  408cc5:	or     al,0xd4
  408cc7:	xchg   ecx,eax
  408cc8:	xchg   edx,eax
  408cc9:	xchg   ecx,eax
  408cca:	jl     0x408d42
  408ccc:	add    DWORD PTR [edx+0x6d],ebx
  408ccf:	jbe    0x408d46
  408cd1:	rcl    BYTE PTR [ebx+0x1f],1
  408cd4:	or     DWORD PTR [edx+0x5af5205e],0x6da32185
  408cde:	add    bl,BYTE PTR [esi]
  408ce0:	pop    ebx
  408ce1:	imul   edi,DWORD PTR [ebx+0xf],0x334e2571
  408ce8:	cmc    
  408ce9:	xor    edx,ebx
  408ceb:	dec    ecx
  408cec:	in     eax,dx
  408ced:	rol    DWORD PTR [edi+0x7af73813],cl
  408cf3:	js     0x408cc6
  408cf5:	lods   al,BYTE PTR ds:[esi]
  408cf6:	mov    DWORD PTR [ebx+ebx*4+0x79235df5],ebp
  408cfd:	jo     0x408d6f
  408cff:	dec    edi
  408d00:	jae    0x408cd9
  408d02:	push   ebp
  408d03:	pushf  
  408d04:	mov    al,0x54
  408d06:	fucomp st(6)
  408d08:	and    esi,DWORD PTR [esi-0x11]
  408d0b:	jnp    0x408cf3
  408d0d:	nop
  408d0e:	adc    DWORD PTR [esp+esi*1],ebp
  408d11:	xor    DWORD PTR [esi-0x77],edx
  408d14:	mov    eax,ds:0x478996e
  408d19:	sub    eax,0xa053c55e
  408d1e:	nop
  408d1f:	or     DWORD PTR [edi-0x5f],edi
  408d22:	ja     0x408d97
  408d24:	in     eax,dx
  408d25:	sar    BYTE PTR [edx-0x66],0x82
  408d29:	ror    ah,0x69
  408d2c:	cmp    BYTE PTR [edi-0xf],ah
  408d2f:	jge    0x408d08
  408d31:	into   
  408d32:	push   ecx
  408d33:	(bad)  
  408d34:	fnsave [edx+0x4afe9196]
  408d3a:	shr    BYTE PTR [ebp-0x2975dbdb],0x0
  408d41:	pop    ds
  408d42:	std    
  408d43:	pop    esp
  408d44:	fs xchg ebp,eax
  408d46:	and    eax,0x7f91f2e5
  408d4b:	data16 add dl,BYTE PTR [edi+0x75]
  408d4f:	dec    ebx
  408d50:	inc    esi
  408d51:	leave  
  408d52:	and    edi,DWORD PTR [eax+ebp*8+0x46923bb0]
  408d59:	and    DWORD PTR [ebx],eax
  408d5b:	call   0xa3c2504
  408d60:	fisub  WORD PTR ds:0x40ec05ae
  408d66:	sub    al,dl
  408d68:	sub    dh,BYTE PTR [edx]
  408d6a:	in     eax,0x1c
  408d6c:	add    BYTE PTR [esi+0x66468675],0xe9
  408d73:	aad    0xe8
  408d75:	xor    al,0x46
  408d77:	into   
  408d78:	popa   
  408d79:	push   esi
  408d7a:	xor    DWORD PTR [esi+0x15],edi
  408d7d:	lods   eax,DWORD PTR ds:[esi]
  408d7e:	lods   eax,DWORD PTR ds:[esi]
  408d7f:	sti    
  408d80:	je     0x408d4f
  408d82:	xor    DWORD PTR ds:0x22bdc4b2,edi
  408d88:	scas   al,BYTE PTR es:[edi]
  408d89:	into   
  408d8a:	sbb    ch,BYTE PTR [edx]
  408d8c:	or     eax,0x314d64d4
  408d91:	xlat   BYTE PTR ds:[ebx]
  408d92:	rcl    ebx,0x19
  408d95:	bound  edx,QWORD PTR [ecx+0x29f4194e]
  408d9b:	push   esi
  408d9c:	sub    al,0xf4
  408d9e:	sub    cl,cl
  408da0:	xchg   ebp,eax
  408da1:	pop    ecx
  408da2:	in     al,0x71
  408da4:	fadd   QWORD PTR [ebx+0x33]
  408da7:	pop    ebp
  408da8:	sbb    eax,DWORD PTR [ecx-0x623b0cad]
  408dae:	push   ecx
  408daf:	add    BYTE PTR [ecx-0x42],al
  408db2:	cs pop es
  408db4:	int    0x94
  408db6:	and    DWORD PTR [eax-0x2f95af61],ebp
  408dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dbd:	imul   DWORD PTR [esi-0x2baede56]
  408dc3:	pop    edx
  408dc4:	dec    DWORD PTR [ebx+0x9]
  408dc7:	mov    edi,0xe84cb005
  408dcc:	dec    edi
  408dcd:	cld    
  408dce:	jecxz  0x408e2a
  408dd0:	sbb    DWORD PTR [edx+0x4b],edx
  408dd3:	jl     0x408d75
  408dd5:	jne    0x408e1e
  408dd7:	xor    DWORD PTR [edi-0x23639acf],0x220d9a48
  408de1:	jmp    0x408e2d
  408de3:	jb     0x408de5
  408de5:	mov    ch,0x29
  408de7:	clc    
  408de8:	adc    BYTE PTR [ecx+0x31],bh
  408deb:	test   bh,ch
  408ded:	adc    eax,0x542ebd0a
  408df2:	or     ebx,DWORD PTR ds:0xb3e68fce
  408df8:	lahf   
  408df9:	int3   
  408dfa:	(bad)
  408dfd:	scas   al,BYTE PTR es:[edi]
  408dfe:	dec    esp
  408dff:	mov    ecx,0x54c79c27
  408e04:	xor    esi,DWORD PTR [eax+0x1e33debe]
  408e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0b:	and    al,0x21
  408e0d:	lods   al,BYTE PTR ds:[esi]
  408e0e:	stos   DWORD PTR es:[edi],eax
  408e0f:	sbb    esi,DWORD PTR [edi]
  408e11:	add    eax,0x2bde3b7a
  408e16:	cld    
  408e17:	jne    0x408e54
  408e19:	ins    BYTE PTR es:[edi],dx
  408e1a:	dec    edi
  408e1b:	ins    BYTE PTR es:[edi],dx
  408e1c:	aad    0x72
  408e1e:	xchg   esp,eax
  408e1f:	mov    edi,0xa370f4b3
  408e24:	add    al,cl
  408e26:	neg    BYTE PTR [eax+0x4fbae0f0]
  408e2c:	sbb    al,0x2d
  408e2e:	(bad)  
  408e2f:	(bad)  
  408e30:	fdivr  QWORD PTR [ebx+0x10013d56]
  408e36:	add    DWORD PTR [ebx-0x1b],0x5e81935
  408e3d:	mov    edi,0x366b1d4b
  408e42:	loop   0x408e4f
  408e44:	push   ds
  408e45:	ret    0x2dc2
  408e48:	push   0xffffff82
  408e4a:	loop   0x408e79
  408e4c:	rol    BYTE PTR [eax-0x5a56bf39],cl
  408e52:	sbb    al,0xfa
  408e54:	mov    edx,0xbe5bab15
  408e59:	sbb    ah,cl
  408e5b:	popf   
  408e5c:	sbb    DWORD PTR [eax-0x62],edi
  408e5f:	inc    ebx
  408e60:	stc    
  408e61:	xchg   ebx,eax
  408e62:	nop
  408e63:	jae    0x408e81
  408e65:	or     eax,0xee77f5ee
  408e6a:	mov    ebx,0xbfc65ea2
  408e6f:	add    eax,0xfe1f774f
  408e74:	bound  esp,QWORD PTR [ebx]
  408e76:	pop    ecx
  408e78:	add    DWORD PTR [eax-0x1],0x73
  408e7c:	mov    edx,0x9996481
  408e81:	jno    0x408ecb
  408e83:	and    al,BYTE PTR [edi]
  408e85:	aas    
  408e86:	mov    eax,ds:0x5505578f
  408e8b:	lods   al,BYTE PTR ds:[esi]
  408e8c:	js     0x408e3a
  408e8e:	nop
  408e8f:	out    0x5e,al
  408e91:	in     al,0xc
  408e93:	xor    eax,0x91b5f824
  408e98:	push   0x16
  408e9a:	jmp    0xbae:0xd54f05b6
  408ea1:	dec    esi
  408ea2:	ds xchg esi,eax
  408ea4:	stos   BYTE PTR es:[edi],al
  408ea5:	call   0x3113:0x57f6969b
  408eac:	ficom  WORD PTR [eax+eax*4]
  408eaf:	xchg   ebx,eax
  408eb0:	in     eax,0x65
  408eb2:	xor    ebp,DWORD PTR [ecx+0x18]
  408eb5:	(bad)  
  408eb6:	nop
  408eb7:	jge    0x408ef8
  408eb9:	leave  
  408eba:	ins    DWORD PTR es:[edi],dx
  408ebb:	out    0x4,eax
  408ebd:	aam    0x4
  408ebf:	retf   0xa4fb
  408ec2:	aam    0x1e
  408ec4:	dec    ebx
  408ec5:	call   0x6a81:0x6bc5c0b8
  408ecc:	iret   
  408ecd:	cmp    dh,BYTE PTR [esi]
  408ecf:	clc    
  408ed0:	aas    
  408ed1:	loopne 0x408ec0
  408ed3:	jae    0x408f21
  408ed5:	dec    edx
  408ed6:	push   esp
  408ed7:	mov    eax,0x4faec26
  408edc:	gs lock pop ss
  408edf:	xchg   DWORD PTR [ecx+0x737c0ce6],ebx
  408ee5:	mov    ds:0xdd677c76,al
  408eea:	push   ebp
  408eeb:	(bad)  
  408eec:	lahf   
  408eed:	sbb    al,0x2
  408eef:	aam    0xde
  408ef1:	push   cs
  408ef2:	dec    edx
  408ef3:	mov    bh,0x50
  408ef5:	lock add al,BYTE PTR [edx]
  408ef8:	fcmove st,st(5)
  408efa:	mov    ebp,0xcca17199
  408eff:	and    al,0xb6
  408f01:	cld    
  408f02:	sar    DWORD PTR [ecx+edi*4-0x11],1
  408f06:	data16 in al,dx
  408f08:	scas   eax,DWORD PTR es:[edi]
  408f09:	out    dx,al
  408f0a:	xlat   BYTE PTR ds:[ebx]
  408f0b:	mov    al,0x6e
  408f0d:	push   ds
  408f0e:	dec    esi
  408f0f:	or     ch,BYTE PTR [eax]
  408f11:	xchg   DWORD PTR [ebx+edi*1+0x5f],ebp
  408f15:	jle    0x408ece
  408f17:	or     dl,BYTE PTR ss:[ebx]
  408f1a:	xchg   esp,eax
  408f1b:	adc    BYTE PTR [ebp-0x7a135e11],bl
  408f21:	inc    esp
  408f22:	push   ebx
  408f23:	push   ebx
  408f24:	iret   
  408f25:	(bad)  
  408f26:	cwde   
  408f27:	add    eax,0x6ba3fb5e
  408f2c:	pop    ecx
  408f2d:	inc    ebx
  408f2e:	(bad)  
  408f2f:	aaa    
  408f30:	mov    bl,0x2
  408f32:	loope  0x408f10
  408f34:	sbb    ebx,esp
  408f36:	loope  0x408ee6
  408f38:	lods   al,BYTE PTR ds:[esi]
  408f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3a:	pop    esp
  408f3b:	stos   DWORD PTR es:[edi],eax
  408f3c:	jae    0x408f97
  408f3e:	inc    esi
  408f3f:	push   ebp
  408f40:	fist   WORD PTR [edi]
  408f42:	pusha  
  408f43:	jae    0x408f39
  408f45:	mov    edx,DWORD PTR [edi]
  408f47:	adc    esp,DWORD PTR [eax+0x5b]
  408f4a:	or     DWORD PTR [ecx-0x50],0x4b
  408f4e:	sbb    eax,0x486ae4e
  408f53:	cmp    al,0xc7
  408f55:	add    ch,ah
  408f57:	fbld   TBYTE PTR [ebp+0x185defc7]
  408f5d:	daa    
  408f5e:	and    eax,DWORD PTR [edi-0x45]
  408f61:	add    edx,DWORD PTR [ecx+eax*4+0x4ffbdd8a]
  408f68:	sub    eax,0xf646b166
  408f6d:	mov    ah,0x6e
  408f6f:	int3   
  408f70:	sbb    bl,BYTE PTR [edx]
  408f72:	scas   al,BYTE PTR es:[edi]
  408f73:	dec    edi
  408f74:	loope  0x408f2f
  408f76:	xor    ebp,DWORD PTR [ebp-0x3c4aff0a]
  408f7c:	outs   dx,DWORD PTR ds:[esi]
  408f7d:	jb     0x408fad
  408f7f:	sub    al,BYTE PTR [esi+0x3bfcbe79]
  408f85:	ficomp DWORD PTR [edx-0x715bac8f]
  408f8b:	aad    0xfc
  408f8d:	jp     0x409009
  408f8f:	ret    
  408f90:	add    BYTE PTR [ebp+0x22],dh
  408f93:	addr16 mov bl,bl
  408f96:	cmp    eax,0xb5438a44
  408f9b:	jne    0x408f6c
  408f9d:	jmp    0x90b3:0x3cc325a
  408fa4:	fsubr  DWORD PTR [edi]
  408fa6:	test   al,0xae
  408fa8:	fldcw  WORD PTR [ebx]
  408faa:	jo     0x408f4e
  408fac:	dec    ecx
  408fad:	cmp    edi,DWORD PTR [eax-0x1636f7d2]
  408fb3:	les    ecx,FWORD PTR [edi+ebx*1-0x6c]
  408fb7:	lea    esi,[ebp+0x12]
  408fba:	sub    DWORD PTR [ebp+0x58],edi
  408fbd:	loope  0x408fcd
  408fbf:	in     al,0x9b
  408fc1:	push   ds
  408fc2:	and    BYTE PTR [ecx-0x33],ah
  408fc5:	loop   0x408ffc
  408fc7:	loopne 0x409021
  408fc9:	mov    ebx,0x5591c63d
  408fce:	js     0x409032
  408fd0:	int    0x86
  408fd2:	push   eax
  408fd3:	dec    ebx
  408fd4:	sbb    al,0x9
  408fd6:	inc    esi
  408fd7:	inc    ebp
  408fd8:	inc    ecx
  408fd9:	add    eax,0xe64a6d8c
  408fde:	and    BYTE PTR [ebx-0x4],al
  408fe1:	jb     0x40900a
  408fe3:	dec    edx
  408fe4:	sbb    dh,BYTE PTR [edi-0x3ebd3226]
  408fea:	push   cs
  408feb:	mov    bh,0xad
  408fed:	xchg   esp,eax
  408fee:	aaa    
  408fef:	mov    ax,sp
  408ff2:	ret    0x827c
  408ff5:	adc    eax,DWORD PTR [ebx]
  408ff7:	loope  0x409069
  408ff9:	stos   DWORD PTR es:[edi],eax
  408ffa:	xor    ebx,edx
  408ffc:	mov    edi,0xaedf2374
  409001:	mov    esi,0x3e8f4a01
  409006:	push   edx
  409007:	jl     0x40906e
  409009:	stos   BYTE PTR es:[edi],al
  40900a:	pop    esp
  40900b:	adc    eax,esi
  40900d:	cs iret 
  40900f:	mov    dl,0xd8
  409011:	ja     0x408fd6
  409013:	mov    cl,0x22
  409015:	cs dec esi
  409017:	or     ebx,DWORD PTR [edx]
  409019:	mov    eax,0xead8adc8
  40901e:	mov    ch,0xf2
  409020:	sub    BYTE PTR [esp+edx*2+0x16],bl
  409024:	mov    dl,0x97
  409026:	leave  
  409027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409028:	(bad)  
  409029:	jp     0x409003
  40902b:	test   BYTE PTR [edi+0x68d3cfe],0xaa
  409032:	int3   
  409033:	jg     0x40905d
  409035:	and    edi,DWORD PTR [edi]
  409037:	shl    eax,1
  409039:	mov    ds:0x22eabc71,al
  40903e:	in     eax,0x12
  409040:	fisttp WORD PTR [eax+0x4e]
  409043:	lds    ebx,FWORD PTR [ebx]
  409045:	mov    ah,0x42
  409047:	jecxz  0x409029
  409049:	js     0x409078
  40904b:	jb     0x409014
  40904d:	pop    esp
  40904e:	fidivr WORD PTR [ebx+0x1ef0f613]
  409054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409055:	jge    0x409071
  409057:	es scas eax,DWORD PTR es:[edi]
  409059:	fidiv  DWORD PTR [esi+edx*1-0x2e8ef06c]
  409060:	inc    edx
  409061:	jecxz  0x409081
  409063:	xor    esp,edi
  409065:	ror    ebx,0xea
  409068:	test   eax,0x4344d8d7
  40906d:	cmc    
  40906e:	push   ss
  40906f:	dec    ebx
  409070:	mov    bh,0xc4
  409072:	dec    ecx
  409073:	lds    ecx,FWORD PTR [edx+0x564931c8]
  409079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907a:	xor    ecx,ebp
  40907c:	ins    BYTE PTR es:[edi],dx
  40907d:	xlat   BYTE PTR ds:[ebx]
  40907e:	push   esp
  40907f:	les    ebx,FWORD PTR [ebx]
  409081:	js     0x409040
  409083:	cdq    
  409084:	lahf   
  409085:	(bad)  
  409086:	fadd   st(4),st
  409088:	int3   
  409089:	lds    si,DWORD PTR [ebx-0x278eb6aa]
  409090:	xchg   ebp,eax
  409091:	dec    eax
  409092:	cmp    DWORD PTR [eax+0xa],ecx
  409095:	jb     0x409105
  409097:	inc    ecx
  409098:	or     eax,0x974cd458
  40909d:	push   ebx
  40909e:	or     BYTE PTR [eax+0x7f5ef43],ah
  4090a4:	cmp    al,0x7
  4090a6:	jmp    0x409108
  4090a8:	rcl    DWORD PTR [ebp+0x14adafd5],0xf2
  4090af:	cmp    bl,BYTE PTR [edx-0x25cf6992]
  4090b5:	pop    edx
  4090b6:	add    BYTE PTR [eax+0x27],bl
  4090b9:	cmp    eax,0x32236726
  4090be:	popa   
  4090bf:	call   ebp
  4090c1:	in     eax,dx
  4090c2:	ror    DWORD PTR [edi],0x6
  4090c5:	and    eax,edi
  4090c7:	popf   
  4090c8:	sar    edx,1
  4090ca:	jmp    0x53f1:0xc4c05565
  4090d1:	push   ss
  4090d2:	add    DWORD PTR [ecx+0x3e],eax
  4090d5:	shl    cl,cl
  4090d7:	loope  0x4090de
  4090d9:	mov    ?,WORD PTR [ebx-0x63]
  4090dc:	ret    0x2430
  4090df:	in     al,dx
  4090e0:	ror    ch,1
  4090e2:	aaa    
  4090e3:	mov    BYTE PTR [edi+0x46],dl
  4090e6:	lea    eax,[esi-0x31c7a705]
  4090ec:	clc    
  4090ed:	or     DWORD PTR [ebx],ebx
  4090ef:	into   
  4090f0:	jae    0x409085
  4090f2:	jmp    0x37ab:0xc7c46d9b
  4090f9:	jp     0x409112
  4090fb:	and    eax,0x76a5318
  409100:	retf   
  409101:	xchg   ebp,eax
  409102:	lds    eax,FWORD PTR [ecx+0x54]
  409105:	mov    ebp,0x34a68ace
  40910a:	push   ds
  40910b:	sti    
  40910c:	mov    ecx,0xc6966058
  409111:	sub    ebx,DWORD PTR [edi+ebp*4+0x5529c381]
  409118:	dec    ebp
  409119:	sbb    DWORD PTR [esi+ebx*8],0x8b8f22e6
  409120:	outs   dx,DWORD PTR ds:[esi]
  409121:	neg    BYTE PTR [ebx-0x68787537]
  409127:	jmp    0x1579:0x865cdcc3
  40912e:	or     DWORD PTR [ebx-0x24],edi
  409131:	push   esi
  409132:	lea    ecx,[ecx]
  409134:	int3   
  409135:	test   BYTE PTR [edx],0x41
  409138:	hlt    
  409139:	call   0x5e212b92
  40913e:	and    eax,DWORD PTR [eax]
  409140:	dec    eax
  409141:	add    DWORD PTR ds:0xdd99be84,esp
  409147:	(bad)  
  409148:	out    dx,al
  409149:	hlt    
  40914a:	(bad)  
  40914b:	leave  
  40914c:	dec    ebp
  40914d:	sub    DWORD PTR [ebx+0x16f611b],eax
  409153:	xor    ch,ah
  409155:	adc    bl,BYTE PTR [edi-0x655b565f]
  40915b:	sub    edx,DWORD PTR [ebx-0xd88693e]
  409161:	test   DWORD PTR ds:0x27c0e6f9,eax
  409167:	push   cs
  409168:	dec    edx
  409169:	pop    es
  40916a:	or     al,0xed
  40916c:	cdq    
  40916d:	imul   ebx,DWORD PTR [ebx+eax*2-0x64],0x826a95c1
  409175:	jns    0x6a58216d
  40917b:	adc    al,0x80
  40917d:	cli    
  40917e:	ret    0x95ec
  409181:	mov    al,0x15
  409183:	cmp    esp,ecx
  409185:	popf   
  409186:	add    eax,0x75430e7a
  40918b:	sbb    al,BYTE PTR ds:0x1427800b
  409191:	mov    ebx,0x512720b1
  409196:	jg     0x409207
  409198:	(bad)  
  409199:	sahf   
  40919a:	ds fcmove st,st(7)
  40919d:	daa    
  40919e:	stos   DWORD PTR es:[edi],eax
  40919f:	sahf   
  4091a0:	jne    0x40919b
  4091a2:	push   0xffffffe2
  4091a4:	and    bh,BYTE PTR ds:0x444c83c6
  4091aa:	pop    esi
  4091ab:	xor    eax,0xcc30d698
  4091b0:	out    dx,al
  4091b1:	rcr    BYTE PTR [eax-0x65cc380d],0x6a
  4091b8:	ins    BYTE PTR es:[edi],dx
  4091b9:	loop   0x409156
  4091bb:	test   al,0x64
  4091bd:	dec    eax
  4091be:	sbb    al,0xad
  4091c0:	and    DWORD PTR [edi-0x7c],eax
  4091c3:	jb     0x409218
  4091c5:	das    
  4091c6:	or     DWORD PTR [ebx],ecx
  4091c8:	dec    edx
  4091c9:	mov    ch,0xea
  4091cb:	pop    eax
  4091cc:	add    edi,DWORD PTR [ecx-0x32b509]
  4091d2:	mov    ch,0xd9
  4091d4:	jmp    0x4091cd
  4091d6:	jg     0x4091c8
  4091d8:	test   al,0x3e
  4091da:	rcr    BYTE PTR [edx],1
  4091dc:	rcr    DWORD PTR [edi+eiz*4],1
  4091df:	cmp    BYTE PTR [esi+0x4fdb7610],ah
  4091e5:	test   BYTE PTR [eax+0x14],ah
  4091e8:	repnz adc esi,0xfffffffa
  4091ec:	xchg   edx,eax
  4091ed:	(bad)  
  4091ee:	sub    esi,DWORD PTR [ecx+edi*2+0x42f7248]
  4091f5:	pop    edi
  4091f6:	jmp    0x409230
  4091f8:	sahf   
  4091f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fa:	cmp    DWORD PTR [esi+0x32d5ba72],esi
  409200:	popf   
  409201:	cmp    eax,0x32912a18
  409206:	mov    ch,ah
  409208:	cwde   
  409209:	add    al,0xb1
  40920b:	aaa    
  40920c:	adc    eax,0xe32b32bb
  409211:	loope  0x409216
  409213:	bnd je 0x4091ed
  409216:	enter  0x75d0,0x55
  40921a:	dec    esp
  40921b:	sub    DWORD PTR [esi+0x2e],0xd7c85453
  409222:	pop    edx
  409223:	ficomp WORD PTR [edx+0x5e]
  409226:	pop    ebx
  409227:	mov    eax,edx
  409229:	add    dh,BYTE PTR [ecx]
  40922b:	adc    al,0xe2
  40922d:	out    dx,eax
  40922e:	test   BYTE PTR [ecx],ch
  409230:	add    bl,BYTE PTR [ebx+0x35]
  409233:	jo     0x40928e
  409235:	pop    ebx
  409236:	mov    dh,BYTE PTR [ebx+0x66bd42a5]
  40923c:	shl    BYTE PTR [ebp-0x2ad1b952],cl
  409242:	add    BYTE PTR [ebx+edi*2],dl
  409245:	pop    es
  409246:	std    
  409247:	sti    
  409248:	mov    DWORD PTR [edi],ebx
  40924a:	inc    ebx
  40924b:	adc    cl,BYTE PTR [edi]
  40924d:	retf   
  40924e:	sub    BYTE PTR [edi+eiz*1-0x494b0508],bh
  409255:	dec    edi
  409256:	mul    BYTE PTR [edx+0x4473004d]
  40925c:	sbb    bl,BYTE PTR [ebx+0x51a94984]
  409262:	daa    
  409263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409264:	mov    al,ds:0xbc6bd183
  409269:	mov    gs,WORD PTR [edi-0x76]
  40926c:	sub    eax,DWORD PTR [edi]
  40926e:	lods   eax,DWORD PTR ds:[esi]
  40926f:	xchg   esp,eax
  409270:	pop    ss
  409271:	add    BYTE PTR [ecx],cl
  409273:	xchg   ebp,edi
  409275:	xor    eax,DWORD PTR [ebx+0x6bd4accb]
  40927b:	xchg   ebp,eax
  40927c:	mov    dl,0x8f
  40927e:	inc    esi
  40927f:	pop    ebp
  409280:	cmp    eax,0x328a8275
  409285:	jmp    0x7ce2ed0d
  40928a:	sub    edx,DWORD PTR [edi+0x220157e8]
  409290:	cli    
  409291:	aas    
  409292:	hlt    
  409293:	xor    DWORD PTR [edi+eiz*4+0x51],eax
  409297:	inc    edx
  409298:	or     eax,0xe7f8a910
  40929d:	cmc    
  40929e:	lea    esi,[esi]
  4092a0:	in     al,dx
  4092a1:	imul   esp,DWORD PTR [ecx+0x7d052238],0x5
  4092a8:	xchg   BYTE PTR ds:0xca45359e,ch
  4092ae:	mov    esi,0xb35e4690
  4092b3:	cmp    ebx,DWORD PTR [edi-0x5f6a037d]
  4092b9:	or     dh,0x6
  4092bc:	shl    esi,1
  4092be:	dec    edi
  4092bf:	pop    esp
  4092c0:	lods   al,BYTE PTR ds:[esi]
  4092c1:	ins    DWORD PTR es:[edi],dx
  4092c2:	or     bl,0x95
  4092c5:	jmp    0x6a782f44
  4092ca:	mov    BYTE PTR ds:0x759eca09,bh
  4092d0:	add    edi,0x2f5551ca
  4092d6:	mov    ds:0x5c123671,eax
  4092db:	popf   
  4092dc:	ja     0x4092b3
  4092de:	out    0xfa,eax
  4092e0:	arpl   WORD PTR [edx-0x59404274],bx
  4092e6:	jnp    0x4092a7
  4092e8:	ss jle 0x40929f
  4092eb:	inc    ecx
  4092ec:	sti    
  4092ed:	fst    DWORD PTR [ecx+0x4]
  4092f0:	adc    edx,ecx
  4092f2:	gs sbb bh,0xe7
  4092f6:	cdq    
  4092f7:	stos   BYTE PTR es:[edi],al
  4092f8:	repnz sbb DWORD PTR [edx],edx
  4092fb:	fst    DWORD PTR [esi]
  4092fd:	imul   esi,DWORD PTR [ebx],0x49f4f702
  409303:	xchg   ecx,eax
  409304:	mov    al,0x8e
  409307:	ja     0x40937c
  409309:	mov    dh,0x80
  40930b:	je     0x4092c5
  40930d:	push   ebx
  40930e:	mov    esp,ds
  409310:	data16 (bad) 
  409312:	sbb    eax,0x35dc290a
  409317:	pushf  
  409318:	mov    ds:0x35e8de0f,al
  40931d:	retf   
  40931e:	fsubp  st(0),st
  409320:	int3   
  409321:	clc    
  409322:	dec    edx
  409323:	xchg   ecx,eax
  409324:	jne    0x409312
  409326:	inc    edi
  409327:	mul    edi
  409329:	mov    eax,ds:0xf5664d1c
  40932e:	jle    0x409395
  409330:	adc    al,0xbc
  409332:	add    BYTE PTR [eax],bl
  409334:	push   esp
  409335:	stc    
  409336:	fsubr  DWORD PTR ds:0xa76101f
  40933c:	inc    esi
  40933d:	mov    eax,ds:0x63a1d7ae
  409342:	test   DWORD PTR [ecx+eax*2],ebx
  409345:	inc    esi
  409346:	xchg   esp,eax
  409347:	jg     0x4092f9
  409349:	or     al,0x55
  40934b:	dec    ebp
  40934c:	test   eax,0x2e011eac
  409351:	jbe    0x409390
  409353:	stos   DWORD PTR es:[edi],eax
  409354:	push   esi
  409355:	cdq    
  409356:	aad    0x8d
  409358:	fcomp  QWORD PTR [edx+0x26]
  40935b:	or     cl,BYTE PTR es:[edi+0x3b]
  40935f:	mov    dh,0x24
  409361:	jnp    0x40935a
  409363:	mov    ebx,0xed82d397
  409368:	push   cs
  409369:	mov    al,ds:0x91b0f062
  40936e:	fbld   TBYTE PTR ds:0x14702763
  409374:	outs   dx,DWORD PTR ds:[esi]
  409375:	jb     0x409307
  409377:	outs   dx,DWORD PTR ds:[esi]
  409378:	ffree  st(4)
  40937a:	loopne 0x4093c6
  40937c:	dec    edx
  40937d:	sub    al,0xe6
  40937f:	xchg   ecx,eax
  409380:	aad    0xa7
  409382:	sub    edi,DWORD PTR [ecx]
  409384:	jnp    0x4093ac
  409386:	loopne 0x4093db
  409388:	jle    0x4093ff
  40938a:	add    WORD PTR [edx+0x29],sp
  40938e:	fsubr  DWORD PTR [ecx-0x37]
  409391:	mov    bl,BYTE PTR [edx+0x7f]
  409394:	stc    
  409395:	mov    edi,0xaf902f7b
  40939a:	sahf   
  40939b:	nop
  40939c:	es mov eax,0x5aa50c31
  4093a2:	aas    
  4093a3:	test   DWORD PTR [esi],0xc4fbd76d
  4093a9:	in     al,dx
  4093aa:	jne    0x40935f
  4093ac:	cmp    ch,BYTE PTR [eax+0x42]
  4093af:	sbb    dl,al
  4093b1:	je     0x4093f0
  4093b3:	dec    eax
  4093b4:	jle    0x40940d
  4093b6:	sbb    eax,DWORD PTR [ebx+0x201ebe41]
  4093bc:	nop
  4093bd:	push   edi
  4093be:	call   0xe28df570
  4093c3:	pusha  
  4093c4:	pop    ss
  4093c5:	hlt    
  4093c6:	aad    0x62
  4093c8:	loop   0x409412
  4093ca:	jl     0x4093ce
  4093cc:	jb     0x40941c
  4093ce:	dec    esi
  4093cf:	retf   0x1b70
  4093d2:	add    ebp,edi
  4093d4:	xchg   edi,eax
  4093d5:	cmp    esp,DWORD PTR [esi+0x4b807992]
  4093db:	pop    ebp
  4093dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093dd:	jae    0x4093d8
  4093df:	mov    ds:0x163c4a4a,eax
  4093e4:	cmc    
  4093e5:	push   esi
  4093e6:	in     eax,dx
  4093e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093e8:	sub    ebx,eax
  4093ea:	fcom   QWORD PTR [esi+0x5afba703]
  4093f0:	mov    BYTE PTR [ecx-0x59],ch
  4093f3:	jb     0x4093da
  4093f5:	call   DWORD PTR [ebp+ebp*2-0x80]
  4093f9:	je     0x409441
  4093fb:	cmp    BYTE PTR [edx+0x0],dl
  4093fe:	lods   al,BYTE PTR ds:[esi]
  4093ff:	push   ss
  409400:	rol    esi,1
  409402:	or     al,0x7c
  409404:	jno    0x409387
  409406:	imul   esp,DWORD PTR [ebx+0x64],0x42e52066
  40940d:	ret    0xf843
  409410:	mov    ebx,0x12c51ef6
  409415:	jmp    0x409452
  409417:	pop    esi
  409418:	mov    ecx,0xbd0ee159
  40941d:	jae    0x4093bf
  40941f:	and    ebp,DWORD PTR [eax-0x2f970222]
  409425:	ins    BYTE PTR es:[edi],dx
  409426:	jne    0x409432
  409428:	cwde   
  409429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942a:	pop    ss
  40942b:	ficomp DWORD PTR [eax]
  40942d:	mov    ds:0x8c1bdbdc,al
  409432:	imul   eax,DWORD PTR [ebx-0x24ea4b6d],0x4475a61a
  40943c:	shl    BYTE PTR [esi-0x1b70340f],cl
  409442:	pop    esp
  409443:	or     BYTE PTR [edx+0x52b173b9],0x50
  40944a:	add    ah,BYTE PTR [edi+0x1eeccb10]
  409450:	int3   
  409451:	mov    al,0xd1
  409453:	or     dh,BYTE PTR [eax-0x32520c6a]
  409459:	mov    al,0x12
  40945b:	pop    edx
  40945c:	stc    
  40945d:	cmp    eax,0x159af144
  409462:	jecxz  0x409442
  409464:	mov    cx,0xaa65
  409468:	stos   DWORD PTR es:[edi],eax
  409469:	adc    DWORD PTR [eax+ecx*2],eax
  40946c:	mov    dh,0xe9
  40946e:	xor    BYTE PTR [ebx],0x87
  409471:	jae    0x409420
  409473:	cmp    bl,BYTE PTR [esi]
  409475:	inc    esp
  409476:	mov    WORD PTR [edx+ecx*4+0x69a28ef0],?
  40947d:	sub    DWORD PTR [eax],eax
  40947f:	add    al,0x6c
  409481:	std    
  409482:	jmp    0x65f9:0xa865ead
  409489:	cmp    BYTE PTR [edi+0x59],bl
  40948c:	jp     0x40945c
  40948e:	sbb    al,0x5
  409490:	adc    al,0xe8
  409492:	cmp    al,0xd9
  409494:	cmp    eax,0xe3297723
  409499:	and    edx,0xdd602f27
  40949f:	outs   dx,BYTE PTR ds:[esi]
  4094a0:	(bad)  
  4094a1:	mov    bh,0x22
  4094a3:	jmp    0xd06ab50f
  4094a8:	lods   al,BYTE PTR ds:[esi]
  4094a9:	lods   eax,DWORD PTR ds:[esi]
  4094aa:	call   FWORD PTR [eax+esi*2+0x24]
  4094ae:	push   ds
  4094af:	fmul   st,st(5)
  4094b1:	retf   0x84f0
  4094b4:	out    dx,al
  4094b5:	jne    0x4094d2
  4094b7:	(bad)  
  4094ba:	or     al,0x23
  4094bc:	inc    edx
  4094bd:	push   edi
  4094be:	mov    ebp,0xfc109b5c
  4094c3:	fsub   QWORD PTR [ecx]
  4094c5:	cmp    BYTE PTR [eax],al
  4094c7:	repnz fs clc 
  4094ca:	add    dl,BYTE PTR ds:0x3bef115b
  4094d0:	enter  0xe841,0x13
  4094d4:	leave  
  4094d5:	mov    dh,0x8c
  4094d7:	mov    eax,ds:0xa6ccf3ae
  4094dc:	mov    DWORD PTR [ebp+ebp*4-0x2e642eb],edx
  4094e3:	mov    ebp,0x236e7511
  4094e8:	cmp    eax,0x4d85fd9f
  4094ed:	add    al,0x81
  4094ef:	push   cs
  4094f0:	fiadd  WORD PTR [di+0x29]
  4094f4:	add    bh,BYTE PTR [edx]
  4094f6:	xor    ah,BYTE PTR [ebp+ecx*1-0x4e74df05]
  4094fd:	jb     0x409515
  4094ff:	xor    edx,0xab63a22e
  409505:	icebp  
  409506:	add    BYTE PTR [ebp+0x10ba063e],bl
  40950c:	push   eax
  40950d:	aaa    
  40950e:	cwde   
  40950f:	nop
  409510:	sbb    ebx,esp
  409512:	sbb    BYTE PTR [esi],0xa3
  409515:	das    
  409516:	cli    
  409517:	loopne 0x409553
  409519:	adc    eax,0x6d4ee6d1
  40951e:	pop    esp
  40951f:	retf   0x95e6
  409522:	sub    DWORD PTR [ecx-0x3bbaa0d2],esi
  409528:	addr16 pop ebx
  40952a:	jb     0x409531
  40952c:	xor    bl,BYTE PTR [ebx]
  40952e:	aaa    
  40952f:	mov    cs,esp
  409531:	sbb    eax,0xfffa181c
  409536:	add    eax,0xebfe2b89
  40953b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40953c:	add    bh,BYTE PTR [edi+0x5]
  40953f:	aas    
  409540:	mov    ebx,0x3c395954
  409545:	mov    dl,0x9c
  409547:	(bad)  
  409548:	cld    
  409549:	sbb    BYTE PTR [ebx],bl
  40954b:	ins    BYTE PTR es:[edi],dx
  40954c:	or     DWORD PTR [edi],edi
  40954e:	ficomp WORD PTR [esi+0x527d64b]
  409554:	jno    0x40954a
  409556:	leave  
  409557:	daa    
  409558:	scas   eax,DWORD PTR es:[edi]
  409559:	js     0x4094f3
  40955b:	std    
  40955c:	adc    edi,edx
  40955e:	xchg   edi,eax
  40955f:	jg     0x409525
  409561:	push   eax
  409562:	idiv   BYTE PTR [edi]
  409564:	adc    bh,ch
  409566:	dec    ebx
  409567:	lods   al,BYTE PTR ds:[esi]
  409568:	hlt    
  409569:	loop   0x409587
  40956b:	clts   
  40956d:	cs push 0xffffffe2
  409570:	mov    edx,0x93f07527
  409575:	pop    ss
  409576:	retf   0xc789
  409579:	hlt    
  40957a:	sbb    eax,DWORD PTR [esi]
  40957c:	hlt    
  40957d:	xchg   ebx,eax
  40957e:	mov    eax,ds:0x72ed7df
  409583:	aas    
  409584:	test   eax,0x5ae5e68
  409589:	test   al,0x40
  40958b:	in     eax,0x77
  40958d:	fadd   DWORD PTR [edi-0xd]
  409590:	stos   BYTE PTR es:[edi],al
  409591:	cmc    
  409592:	gs and al,0x60
  409595:	cli    
  409596:	cmp    ch,BYTE PTR [ecx]
  409598:	xor    ebp,eax
  40959a:	js     0x409578
  40959c:	repnz fisttp QWORD PTR [edx+edx*1-0x6f]
  4095a1:	lahf   
  4095a2:	jbe    0x40952a
  4095a4:	(bad)  
  4095a5:	mov    ch,0x63
  4095a7:	and    BYTE PTR [eax-0x56bddee2],0xe1
  4095ae:	xchg   BYTE PTR [eax+0x1fec3648],dl
  4095b4:	push   edi
  4095b5:	push   0xcb7a44a2
  4095ba:	stos   DWORD PTR es:[edi],eax
  4095bb:	jle    0x40962b
  4095bd:	push   ecx
  4095be:	(bad)  
  4095bf:	xchg   ebp,eax
  4095c0:	stos   BYTE PTR es:[edi],al
  4095c1:	add    BYTE PTR [ebx+0x44],ch
  4095c4:	adc    edx,DWORD PTR [edx+ebp*1]
  4095c7:	in     al,0xd6
  4095c9:	stos   BYTE PTR es:[edi],al
  4095ca:	(bad)  
  4095cb:	out    dx,al
  4095cc:	stos   DWORD PTR es:[edi],eax
  4095cd:	aaa    
  4095ce:	mov    dl,0xd9
  4095d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d1:	cld    
  4095d2:	out    dx,eax
  4095d3:	test   al,0x21
  4095d5:	sti    
  4095d6:	dec    eax
  4095d7:	dec    esp
  4095d8:	test   al,0x59
  4095da:	loopne 0x40956d
  4095dc:	inc    edx
  4095dd:	repnz leave 
  4095df:	mov    ah,0xc8
  4095e1:	mov    DWORD PTR [ebp-0x33],eax
  4095e4:	sti    
  4095e5:	inc    edi
  4095e6:	sub    ah,BYTE PTR ds:0xa20b7a07
  4095ec:	jmp    0xfe3d2055
  4095f1:	rol    BYTE PTR [ebx-0xf561290],1
  4095f7:	inc    edx
  4095f8:	sbb    DWORD PTR [edx],edx
  4095fa:	adc    ebx,DWORD PTR [esi+eiz*4]
  4095fd:	gs je  0x409594
  409600:	in     eax,dx
  409601:	call   0xf44052fa
  409606:	pop    DWORD PTR [edi+ebp*2-0x61]
  40960a:	add    al,0xf
  40960c:	popf   
  40960d:	sbb    dl,ch
  40960f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409610:	neg    BYTE PTR [edx+0x57]
  409613:	adc    bh,cl
  409615:	out    0xa8,al
  409617:	push   ebx
  409618:	xlat   BYTE PTR ds:[ebx]
  409619:	dec    edx
  40961a:	mov    ah,0xb
  40961c:	std    
  40961d:	jo     0x409617
  40961f:	mov    esi,0x45d51ae5
  409624:	push   ebx
  409625:	dec    esi
  409626:	nop
  409627:	jo     0x409662
  409629:	xchg   ecx,eax
  40962a:	test   al,0xcd
  40962c:	pop    edi
  40962d:	jl     0x4095ec
  40962f:	push   ds
  409630:	push   0xf538f9f
  409635:	out    0xe1,al
  409637:	mov    bl,0x73
  409639:	sub    BYTE PTR [ecx+0x66887f97],cl
  40963f:	imul   BYTE PTR [ebx+0x8]
  409642:	popf   
  409643:	daa    
  409644:	shl    al,1
  409646:	xchg   DWORD PTR [ebp+0x62513547],edi
  40964c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40964d:	imul   BYTE PTR [edi]
  40964f:	call   0x67697054
  409654:	and    eax,0xb11fedcb
  409659:	repz or ah,BYTE PTR [edi-0xe]
  40965d:	push   0xde1b9730
  409662:	inc    edx
  409663:	mov    edi,0x8ab0ba29
  409668:	and    esi,DWORD PTR ds:0x14297a65
  40966e:	imul   ebp,DWORD PTR [edi+0x0],0x13410a31
  409675:	xchg   edx,eax
  409676:	add    edi,ecx
  409678:	popf   
  409679:	jmp    0x409642
  40967b:	lahf   
  40967c:	or     edx,ebx
  40967e:	arpl   WORD PTR [edi+0x7e95d82b],di
  409684:	jo     0x409677
  409686:	idiv   DWORD PTR [ebx+0x4aeb31b0]
  40968c:	je     0x40960f
  40968e:	jb     0x40962e
  409690:	dec    ebp
  409691:	mov    ds,ebx
  409693:	sar    eax,1
  409695:	and    dl,BYTE PTR [ecx]
  409697:	and    eax,0xe1eaa707
  40969c:	fisubr DWORD PTR [esi]
  40969e:	stos   BYTE PTR es:[edi],al
  40969f:	(bad)  
  4096a0:	xor    al,0x80
  4096a2:	cmc    
  4096a3:	outs   dx,BYTE PTR ds:[esi]
  4096a4:	mov    DWORD PTR [ebx+0x6],edx
  4096a7:	call   0xc175:0xfc7824ed
  4096ae:	jb     0x40963c
  4096b0:	xchg   BYTE PTR [ebx],ah
  4096b2:	in     al,dx
  4096b3:	aaa    
  4096b4:	mov    bh,0x85
  4096b6:	ins    DWORD PTR es:[edi],dx
  4096b7:	mov    ebp,0xcbc18b43
  4096bc:	jno    0x409708
  4096be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096bf:	sub    eax,0x690ff8eb
  4096c4:	mov    esp,0x71f87678
  4096c9:	iret   
  4096ca:	adc    DWORD PTR [esi-0x488e72ac],eax
  4096d0:	js     0x409750
  4096d2:	popa   
  4096d3:	pop    ds
  4096d4:	mov    esp,0x1f920af4
  4096d9:	pop    esi
  4096da:	mov    cl,BYTE PTR [eax]
  4096dc:	sbb    ch,BYTE PTR [edx]
  4096de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096df:	sti    
  4096e0:	xor    al,0x70
  4096e2:	pop    ecx
  4096e3:	dec    edi
  4096e4:	cmc    
  4096e5:	push   ds
  4096e6:	es and ah,bh
  4096e9:	in     al,0x8a
  4096eb:	icebp  
  4096ec:	push   ebp
  4096ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ee:	jp     0x409767
  4096f0:	leave  
  4096f1:	xchg   esi,eax
  4096f2:	ret    0x92d8
  4096f5:	cmp    DWORD PTR [edi],ecx
  4096f7:	inc    ebp
  4096f8:	inc    ebp
  4096f9:	stc    
  4096fa:	mov    ds:0xa3aa735,al
  4096ff:	(bad)  
  409700:	and    BYTE PTR [ebp-0x74],dl
  409703:	push   ebp
  409704:	imul   edi,DWORD PTR [ebp-0x664cf633],0x2564f3b
  40970e:	lea    edx,[edi+0x47]
  409711:	sbb    dl,BYTE PTR [ebp-0x1b]
  409714:	ins    DWORD PTR es:[edi],dx
  409715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409716:	das    
  409717:	data16 test BYTE PTR [edx],dh
  40971a:	in     eax,0x2d
  40971c:	cmp    DWORD PTR [ecx-0x41],0x6e
  409720:	icebp  
  409721:	push   ss
  409722:	(bad)
  409725:	retf   
  409726:	xchg   ebp,eax
  409727:	cmp    ebp,DWORD PTR [edi]
  409729:	das    
  40972a:	jl     0x4096ff
  40972c:	out    dx,al
  40972d:	arpl   WORD PTR [edi+0x10],dx
  409730:	mov    BYTE PTR ds:0xad4575e8,al
  409736:	xchg   DWORD PTR [ebp-0x73fb3f1a],edi
  40973c:	xchg   ebp,eax
  40973d:	jg     0x409792
  40973f:	inc    ecx
  409740:	add    BYTE PTR [ebp+0x23],ah
  409743:	es sub dl,cl
  409746:	add    DWORD PTR [edx+0x75],ecx
  409749:	fcmovnb st,st(7)
  40974b:	sahf   
  40974c:	test   al,0x1e
  40974e:	mov    eax,ds:0x99d6af67
  409753:	jnp    0x40973a
  409755:	and    BYTE PTR [ebx+0xd],0x73
  409759:	mov    cl,0x39
  40975b:	dec    ecx
  40975c:	mov    ebx,0x27e2604b
  409761:	rcl    bh,cl
  409763:	rol    edx,1
  409765:	mul    DWORD PTR [edi]
  409767:	cmp    bh,cl
  409769:	nop
  40976a:	leave  
  40976b:	fidivr DWORD PTR [esi+eiz*1+0x2f]
  40976f:	and    edi,0xb6664732
  409775:	mov    ecx,ebp
  409777:	ror    DWORD PTR [ebx+0x590b762f],0x8c
  40977e:	add    al,BYTE PTR [esi+0x5a]
  409781:	add    eax,0x8173fcc2
  409786:	inc    ebp
  409787:	xor    ebp,DWORD PTR [esi+0x32]
  40978a:	inc    ebp
  40978b:	or     DWORD PTR [edx-0x20],0xfbc31ae
  409792:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409794:	out    dx,al
  409795:	mov    esp,0x18b58b57
  40979a:	or     ebp,ebx
  40979c:	mov    eax,ds:0xe7588ad8
  4097a1:	inc    edx
  4097a2:	jno    0x4097f4
  4097a4:	mul    BYTE PTR [eax-0x73]
  4097a7:	inc    ebx
  4097a8:	repnz (bad) 
  4097aa:	jno    0x4097f7
  4097ac:	repnz sbb al,dh
  4097af:	gs cmp eax,0x936b8e0a
  4097b5:	nop
  4097b6:	mov    esi,0xf72d16a8
  4097bb:	cmp    ch,dh
  4097bd:	xchg   edi,eax
  4097be:	in     eax,0xd0
  4097c0:	and    edx,DWORD PTR [ecx]
  4097c2:	xor    BYTE PTR [edi],bl
  4097c4:	cdq    
  4097c5:	inc    edi
  4097c6:	push   esp
  4097c7:	or     BYTE PTR [eax],dl
  4097c9:	and    eax,0x22d000de
  4097ce:	leave  
  4097cf:	mov    ch,0xce
  4097d1:	cdq    
  4097d2:	jge    0x4097bc
  4097d4:	sub    DWORD PTR [ebp+0x3a],edx
  4097d7:	btr    DWORD PTR [eax],edi
  4097da:	lahf   
  4097db:	aaa    
  4097dc:	xor    DWORD PTR [ebx+0x43bae93],esp
  4097e2:	jbe    0x4097c2
  4097e4:	sbb    al,0x49
  4097e6:	push   ebp
  4097e7:	(bad)  
  4097e8:	fimul  WORD PTR [ebx]
  4097ea:	cmp    BYTE PTR [esp+eiz*4+0x74622e29],dl
  4097f1:	xchg   ecx,eax
  4097f2:	push   edx
  4097f3:	mov    eax,0x76686bbd
  4097f8:	sbb    eax,0x679abdfa
  4097fd:	lods   eax,DWORD PTR ds:[esi]
  4097fe:	sti    
  4097ff:	sbb    esp,ebp
  409801:	cli    
  409802:	jle    0x40982c
  409804:	and    DWORD PTR [eax+0x1],ebx
  409807:	xor    cl,BYTE PTR ds:0x3ba9c892
  40980d:	pop    edx
  40980e:	stos   BYTE PTR es:[edi],al
  40980f:	dec    ecx
  409810:	mov    ebp,0x81ebd963
  409815:	sbb    al,0x90
  409817:	push   esi
  409818:	fisubr WORD PTR [ecx-0x6b43e1bb]
  40981e:	jp     0x409898
  409820:	mov    edx,0x5b0d88c2
  409825:	loop   0x40980d
  409827:	mov    ah,0x5
  409829:	xchg   edi,eax
  40982a:	push   esi
  40982b:	push   cs
  40982c:	ins    DWORD PTR es:[edi],dx
  40982d:	push   0x8ab60b09
  409832:	xor    BYTE PTR [eax-0x5c15fe7a],0x52
  409839:	shr    DWORD PTR [edi+0x2c],1
  40983c:	xchg   DWORD PTR [ecx+0xb],esp
  40983f:	cli    
  409840:	add    BYTE PTR [edx+0x5bec60a1],cl
  409846:	sti    
  409847:	or     eax,0x666cc289
  40984c:	pusha  
  40984d:	and    ebx,esi
  40984f:	out    dx,eax
  409850:	inc    ecx
  409851:	push   edx
  409852:	adc    ch,bh
  409854:	js     0x4098b3
  409856:	icebp  
  409857:	jae    0x40986e
  409859:	or     BYTE PTR [esi+0x7c],al
  40985c:	icebp  
  40985d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40985e:	mov    edi,DWORD PTR [esi]
  409860:	inc    edx
  409861:	popa   
  409862:	add    al,0x83
  409864:	mov    dh,0xa3
  409866:	mov    dl,0xde
  409868:	pop    ecx
  409869:	mov    DWORD PTR [edx+0x3d],edi
  40986c:	pop    ebp
  40986d:	not    bh
  40986f:	inc    ebx
  409870:	(bad)  
  409871:	cli    
  409872:	fsubrp st(5),st
  409874:	mov    dh,0x62
  409876:	sti    
  409877:	arpl   WORD PTR [ecx+0x33e6e0bd],di
  40987d:	and    DWORD PTR [edx+0x375a43ea],eax
  409883:	xor    bl,BYTE PTR [ebx]
  409885:	jmp    0x7ce4:0x223404d5
  40988c:	add    edx,esp
  40988e:	inc    esi
  40988f:	es stos BYTE PTR es:[edi],al
  409891:	jg     0x40984e
  409893:	sub    DWORD PTR [ebp-0x231eae8e],0x2c413c93
  40989d:	jo     0x4098c4
  40989f:	gs inc ecx
  4098a1:	xlat   BYTE PTR ds:[ebx]
  4098a2:	stos   DWORD PTR es:[edi],eax
  4098a3:	mov    ecx,0x7095cc1b
  4098a8:	and    al,0x8b
  4098aa:	cld    
  4098ab:	adc    dh,dl
  4098ad:	mov    eax,0xbb20009e
  4098b2:	mov    BYTE PTR [edi+0x7c],dh
  4098b5:	(bad)  
  4098b6:	and    dl,BYTE PTR [ebx]
  4098b8:	push   edx
  4098b9:	mov    dl,0xd2
  4098bb:	sbb    eax,0xbcb8eb30
  4098c1:	into   
  4098c2:	inc    edi
  4098c3:	dec    ebp
  4098c4:	mov    esi,0xd79f0758
  4098c9:	loopne 0x4098dc
  4098cb:	dec    edi
  4098cc:	pop    ds
  4098cd:	jecxz  0x409945
  4098cf:	int3   
  4098d0:	(bad)  
  4098d2:	jb     0x4098d2
  4098d4:	add    eax,0x1ba1b123
  4098d9:	mov    dl,0xb0
  4098db:	lahf   
  4098dc:	out    dx,al
  4098dd:	inc    esi
  4098de:	out    dx,al
  4098df:	adc    ah,BYTE PTR [eax+esi*8]
  4098e2:	jae    0x409887
  4098e4:	and    cl,ch
  4098e6:	in     al,dx
  4098e7:	jecxz  0x4098b9
  4098e9:	cdq    
  4098ea:	jno    0x4098c8
  4098ec:	xor    dh,BYTE PTR [eax+esi*8]
  4098ef:	(bad)  
  4098f0:	lea    ebp,[esi+0xd]
  4098f3:	jno    0x40993f
  4098f5:	jmp    0xcf42:0x329b59
  4098fc:	(bad)  
  4098fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fe:	retf   0x4ae9
  409901:	sahf   
  409902:	popf   
  409903:	mov    ds:0x1fda8214,eax
  409908:	mov    bh,0xa4
  40990a:	push   0xffffff84
  40990c:	jg     0x40994c
  40990e:	dec    ecx
  40990f:	jnp    0x40991b
  409911:	int3   
  409912:	ret    0x549a
  409915:	dec    ecx
  409916:	lods   eax,DWORD PTR ds:[esi]
  409917:	ret    
  409918:	call   0x2e208c3c
  40991d:	mov    WORD PTR [edx],fs
  40991f:	jo     0x40994f
  409921:	push   0xf081508b
  409926:	xlat   BYTE PTR ds:[ebx]
  409927:	xchg   esi,eax
  409928:	pop    esp
  409929:	mov    ah,0xaa
  40992b:	adc    al,0x9a
  40992d:	mov    dl,BYTE PTR [edi+0x5501790f]
  409933:	mov    ds:0xafe249cb,eax
  409938:	add    BYTE PTR [esi-0x5efbdee4],bh
  40993e:	pop    esi
  40993f:	pop    ss
  409940:	fcmovu st,st(6)
  409942:	mov    eax,ds:0xb5a236f5
  409947:	sar    DWORD PTR [esi+edi*8],0x4a
  40994b:	jo     0x4098df
  40994d:	pop    eax
  40994e:	or     DWORD PTR [eax+edx*2-0x1f],eax
  409952:	hlt    
  409953:	or     DWORD PTR [ebx+edx*1],esp
  409956:	mov    esi,0x47890a4a
  40995b:	xchg   ebp,eax
  40995c:	and    al,0x30
  40995e:	enter  0x5c2c,0x7
  409962:	pushf  
  409963:	mov    edx,0xf7712924
  409968:	ret    0x183a
  40996b:	sbb    al,0x6e
  40996d:	and    DWORD PTR [ebp-0x1d1c6fab],ebp
  409973:	test   al,0xc
  409975:	pop    eax
  409976:	aas    
  409977:	jnp    0x4099a5
  409979:	into   
  40997a:	adc    bh,cl
  40997c:	xchg   edi,eax
  40997d:	adc    bl,BYTE PTR [ebx+0x7b]
  409980:	and    eax,DWORD PTR [ebx-0x29]
  409983:	xchg   ecx,eax
  409984:	out    dx,al
  409985:	xchg   esp,eax
  409986:	mov    bh,BYTE PTR [edx+0x4d4c18fc]
  40998c:	pop    ss
  40998d:	inc    ebp
  40998e:	add    eax,0xaf44bd05
  409993:	add    al,0xc5
  409995:	aas    
  409996:	aas    
  409997:	add    DWORD PTR [esi+0x25],0x694cacde
  40999e:	pop    gs
  4099a0:	mov    DWORD PTR [ecx],0x6c58d625
  4099a6:	add    esi,ecx
  4099a8:	stos   BYTE PTR es:[edi],al
  4099a9:	cmp    al,0xa3
  4099ab:	pop    es
  4099ac:	lahf   
  4099ad:	jg     0x409a09
  4099af:	push   0x64
  4099b1:	inc    edi
  4099b2:	push   ds
  4099b3:	mov    WORD PTR [ebx],ss
  4099b5:	mov    edi,0xf576e7e8
  4099ba:	ins    BYTE PTR es:[edi],dx
  4099bb:	je     0x4099c9
  4099bd:	add    ebp,DWORD PTR [edi+0x66d32e38]
  4099c3:	cmc    
  4099c4:	ret    
  4099c5:	jge    0x409a1a
  4099c7:	mov    eax,?
  4099c9:	in     eax,dx
  4099ca:	out    dx,al
  4099cb:	sbb    al,0x4c
  4099cd:	arpl   WORD PTR [ebx+0x242666d5],bx
  4099d3:	enter  0x20ac,0xb1
  4099d7:	test   BYTE PTR [esi+0x1cd491de],al
  4099dd:	inc    esp
  4099de:	sbb    al,0x4b
  4099e0:	jl     0x409a00
  4099e2:	and    al,0xe9
  4099e4:	lahf   
  4099e5:	jge    0x409a4e
  4099e7:	adc    edi,edx
  4099e9:	int3   
  4099ea:	daa    
  4099eb:	xchg   esi,eax
  4099ec:	call   FWORD PTR [esp+edx*1-0x11]
  4099f0:	inc    ecx
  4099f1:	and    BYTE PTR ds:0x43de11f1,0x14
  4099f8:	xor    DWORD PTR [ebp+0x5069178d],ecx
  4099fe:	xchg   edx,eax
  4099ff:	mov    al,BYTE PTR [edi+0x609c58f6]
  409a05:	or     dh,BYTE PTR [ebx]
  409a07:	xchg   esp,eax
  409a08:	inc    eax
  409a09:	in     eax,dx
  409a0a:	add    al,0x2b
  409a0c:	mov    esp,0x8b91c3b0
  409a11:	mov    ch,0x6d
  409a13:	add    al,0x16
  409a15:	mov    BYTE PTR [ebx],ch
  409a17:	sbb    al,0xa7
  409a19:	(bad)  
  409a1a:	(bad)  
  409a1b:	cdq    
  409a1c:	lods   al,BYTE PTR ds:[esi]
  409a1d:	xlat   BYTE PTR ds:[ebx]
  409a1e:	dec    esp
  409a1f:	cmp    BYTE PTR [esi+ebx*1],ah
  409a22:	lock add al,0xdd
  409a25:	lods   al,BYTE PTR ds:[esi]
  409a26:	call   0x643fd5d
  409a2b:	sub    edi,DWORD PTR [edx-0xb]
  409a2e:	dec    ebx
  409a2f:	les    edx,FWORD PTR [eax]
  409a31:	jmp    0xa2d2d22f
  409a36:	and    bl,BYTE PTR [edx]
  409a38:	dec    edi
  409a39:	aas    
  409a3a:	aad    0x8b
  409a3c:	rol    DWORD PTR [ebx-0x12673cd1],cl
  409a42:	cmc    
  409a43:	sbb    al,0x38
  409a45:	gs xchg edx,eax
  409a47:	nop
  409a48:	aad    0xca
  409a4a:	xchg   edx,edx
  409a4c:	in     eax,0x14
  409a4e:	cmp    al,0x4d
  409a50:	jge    0x4099d6
  409a52:	mov    ebp,ebx
  409a54:	jnp    0x409a1e
  409a56:	jmp    0x4099e8
  409a58:	xchg   esp,eax
  409a59:	inc    ebp
  409a5a:	stc    
  409a5b:	and    eax,0x222f08a
  409a60:	push   ecx
  409a61:	aaa    
  409a62:	popf   
  409a63:	or     al,0xd0
  409a65:	sub    BYTE PTR [ebp+0x71],0x21
  409a69:	inc    esi
  409a6a:	cmp    al,BYTE PTR [eax+0x48]
  409a6d:	push   ds
  409a6e:	stc    
  409a6f:	adc    cl,bh
  409a71:	sbb    eax,0x4b85eeb2
  409a76:	jno    0x409a99
  409a78:	jae    0x409a31
  409a7a:	sub    al,0x5c
  409a7c:	(bad)  
  409a7e:	bound  ebp,QWORD PTR [ecx+edx*2]
  409a81:	xlat   BYTE PTR ds:[ebx]
  409a82:	push   esi
  409a83:	sar    ch,cl
  409a85:	pusha  
  409a86:	sub    bl,BYTE PTR [ebp+0x6]
  409a89:	jmp    0xb335f50a
  409a8e:	xchg   edi,eax
  409a8f:	mov    bh,0xb6
  409a91:	test   DWORD PTR [ebp-0x5b],edx
  409a94:	mov    ds:0x2d49e4bd,eax
  409a99:	in     al,dx
  409a9a:	jl     0x409af9
  409a9c:	dec    edi
  409a9d:	and    ch,BYTE PTR [edi]
  409a9f:	pop    eax
  409aa0:	sbb    edi,DWORD PTR ss:[esi-0x31739cff]
  409aa7:	data16 or cl,bh
  409aaa:	outs   dx,BYTE PTR ds:[esi]
  409aab:	mov    al,bh
  409aad:	xchg   BYTE PTR [esi+0x46],ch
  409ab0:	into   
  409ab1:	in     eax,0xb5
  409ab3:	push   cs
  409ab4:	xchg   ebx,eax
  409ab5:	or     dl,ch
  409ab7:	adc    eax,0xf9491568
  409abc:	xor    ebp,eax
  409abe:	pop    es
  409abf:	mov    edi,DWORD PTR [ecx]
  409ac1:	(bad)  
  409ac2:	fstp   QWORD PTR [ebx]
  409ac4:	mov    ecx,ebx
  409ac6:	mov    ecx,0x6f10fb59
  409acb:	jmp    0xf4797ffd
  409ad0:	(bad)  [ecx]
  409ad2:	pop    ecx
  409ad3:	jb     0x409ad4
  409ad5:	mov    al,0x3d
  409ad7:	adc    ebx,DWORD PTR [ebp+0x25]
  409ada:	test   edx,edi
  409adc:	pop    esi
  409add:	sub    al,0xd
  409adf:	int3   
  409ae0:	jbe    0x409a85
  409ae2:	dec    edi
  409ae3:	inc    edi
  409ae4:	out    dx,al
  409ae5:	pop    edx
  409ae6:	sub    eax,0x449ef74f
  409aeb:	shl    DWORD PTR [ecx],0x2c
  409aee:	aas    
  409aef:	pop    edi
  409af0:	pop    di
  409af2:	fmul   QWORD PTR [ecx+0x1ce1c3ce]
  409af8:	imul   esp,DWORD PTR [esi-0x38b22346],0x5b
  409aff:	scas   al,BYTE PTR es:[edi]
  409b00:	jge    0x409b1d
  409b02:	fdivr  DWORD PTR [esi+0x6]
  409b05:	add    dh,bh
  409b07:	inc    edi
  409b08:	cs pop esp
  409b0a:	pushf  
  409b0b:	mov    esp,DWORD PTR [edi-0x56]
  409b0e:	or     al,0x44
  409b10:	mov    edi,0xc4869a0
  409b15:	nop
  409b16:	mov    edx,0x5220d2e6
  409b1b:	in     al,dx
  409b1c:	jmp    0xf99f:0xb71a4bef
  409b23:	mov    ch,0x90
  409b25:	mov    esp,cs
  409b27:	gs or  al,0xd6
  409b2a:	lds    esi,FWORD PTR [ecx-0x34]
  409b2d:	icebp  
  409b2e:	sbb    eax,0xe81a463f
  409b33:	pop    es
  409b34:	rol    esi,cl
  409b36:	in     eax,0x41
  409b38:	adc    ah,cl
  409b3a:	push   0x41
  409b3c:	or     al,0xb1
  409b3e:	sub    ebx,DWORD PTR [ecx+edx*2+0x65]
  409b42:	jp     0x409b87
  409b44:	shr    BYTE PTR [edi+0x13125f2c],0x64
  409b4b:	and    edi,DWORD PTR [edi+0x6d37def0]
  409b51:	push   ebx
  409b52:	iret   
  409b53:	out    dx,al
  409b54:	int    0xae
  409b56:	lea    esp,[edi+ecx*2]
  409b59:	jb     0x409b94
  409b5b:	inc    esp
  409b5c:	mov    al,0x79
  409b5e:	outs   dx,DWORD PTR ds:[esi]
  409b5f:	or     eax,0xe85f95fd
  409b64:	cwde   
  409b65:	arpl   WORD PTR [ebp-0x4a],cx
  409b68:	pop    edi
  409b69:	enter  0x67dd,0x8b
  409b6d:	adc    DWORD PTR [edi+esi*4+0x47],esp
  409b71:	ss repnz pop edi
  409b74:	iret   
  409b75:	push   ss
  409b76:	enter  0x45cf,0xb0
  409b7a:	xor    ebp,DWORD PTR [edx+0x61bda149]
  409b80:	test   DWORD PTR [edi],eax
  409b82:	(bad)  
  409b84:	je     0x409b37
  409b86:	lods   eax,DWORD PTR ds:[esi]
  409b87:	(bad)  
  409b88:	popf   
  409b89:	xchg   esp,eax
  409b8a:	loop   0x409b41
  409b8c:	addr16 add al,0x13
  409b8f:	scas   al,BYTE PTR es:[edi]
  409b90:	jge    0x409bc8
  409b92:	fidivr WORD PTR [edx]
  409b94:	(bad)  
  409b96:	repnz shl DWORD PTR [edi],1
  409b99:	test   eax,0x2c71d5a5
  409b9e:	jno    0x409b5d
  409ba0:	inc    esi
  409ba1:	mov    edi,0x733733d4
  409ba6:	sbb    esi,DWORD PTR [eax-0x1]
  409ba9:	sub    esi,DWORD PTR [edi]
  409bab:	add    edx,DWORD PTR [eax]
  409bad:	out    dx,al
  409bae:	push   ebx
  409baf:	xchg   DWORD PTR [ebx-0x20825371],ebp
  409bb5:	popf   
  409bb6:	aaa    
  409bb7:	jmp    0xaca8296b
  409bbc:	retf   0x302f
  409bbf:	xor    eax,0xa2fdd562
  409bc4:	push   ebp
  409bc5:	aam    0x7b
  409bc7:	and    BYTE PTR [edx+0x30388ff1],0x1b
  409bce:	ficomp DWORD PTR [ebp-0x4c]
  409bd1:	std    
  409bd2:	out    0x99,al
  409bd4:	cmp    BYTE PTR [eax-0x77],dh
  409bd7:	pop    ecx
  409bd8:	cld    
  409bd9:	stos   BYTE PTR es:[edi],al
  409bda:	dec    esp
  409bdb:	shr    ebp,1
  409bdd:	jge    0x409ba6
  409bdf:	loopne 0x409c19
  409be1:	fild   DWORD PTR [ebx]
  409be3:	bound  edi,QWORD PTR [esi+0x64]
  409be6:	add    al,0x51
  409be8:	daa    
  409be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bea:	jmp    0x1d45:0x146dd398
  409bf1:	retf   0x90c2
  409bf4:	inc    ebp
  409bf5:	adc    ebp,DWORD PTR [ecx+0x3934ac78]
  409bfb:	xlat   BYTE PTR ds:[ebx]
  409bfc:	pop    esp
  409bfd:	daa    
  409bfe:	and    dh,al
  409c00:	and    eax,DWORD PTR [ebx+0x5797c07a]
  409c06:	xor    eax,0x565a346b
  409c0b:	inc    ebx
  409c0c:	(bad)  
  409c0d:	fist   WORD PTR [edi+0x64]
  409c10:	jno    0x409c1b
  409c12:	mov    ch,0x7
  409c14:	jg     0x409c85
  409c16:	adc    eax,0x33042ae9
  409c1b:	mov    edi,0x730a2e3a
  409c20:	mov    WORD PTR [ebx],?
  409c22:	inc    esi
  409c23:	test   DWORD PTR [ebx-0x71],ebx
  409c26:	inc    ebx
  409c27:	(bad)  
  409c28:	stos   DWORD PTR es:[edi],eax
  409c29:	inc    ebx
  409c2a:	stos   DWORD PTR es:[edi],eax
  409c2b:	dec    ebp
  409c2c:	xchg   edx,eax
  409c2d:	pop    ds
  409c2e:	cmp    BYTE PTR [ecx-0x74],0x6d
  409c32:	xor    al,0xf1
  409c34:	xor    ebp,DWORD PTR [esi-0x17e942ea]
  409c3a:	or     al,0x89
  409c3c:	cmp    bl,BYTE PTR [ecx]
  409c3e:	or     eax,0x2fd4bf1b
  409c43:	daa    
  409c44:	mov    al,0xc4
  409c46:	mov    esi,0x65a47e16
  409c4b:	inc    esp
  409c4c:	mov    WORD PTR [ecx+edi*2],es
  409c4f:	mov    esp,edi
  409c51:	sub    al,0xc
  409c53:	mov    ch,0x69
  409c55:	fld    DWORD PTR ds:0x76b2dd61
  409c5b:	pop    ebp
  409c5c:	mov    ecx,0x2fc71fe2
  409c61:	mov    edi,0xede4224d
  409c66:	adc    eax,0x5937cbb8
  409c6b:	ja     0x409c52
  409c6d:	sbb    al,BYTE PTR [esi]
  409c6f:	jl     0x409c91
  409c71:	test   BYTE PTR ds:0x1bd4264,0xf
  409c78:	test   cl,ah
  409c7a:	das    
  409c7b:	cli    
  409c7c:	jae    0x409cac
  409c7e:	push   eax
  409c7f:	fistp  DWORD PTR [eax]
  409c81:	dec    DWORD PTR [esi-0x17a19c02]
  409c87:	push   eax
  409c88:	cmp    BYTE PTR [ebp-0x74],bh
  409c8b:	rcr    al,1
  409c8d:	push   0x4c
  409c8f:	add    eax,0xd1fe69f4
  409c94:	in     eax,dx
  409c95:	inc    DWORD PTR [edi-0x7d]
  409c98:	cld    
  409c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9a:	pop    eax
  409c9b:	fcmovnb st,st(0)
  409c9d:	jp     0x409cee
  409c9f:	dec    eax
  409ca0:	(bad)  
  409ca1:	mov    ah,0x3e
  409ca3:	aas    
  409ca4:	add    BYTE PTR [ecx+0x31669cc0],ch
  409caa:	test   al,0x55
  409cac:	fadd   DWORD PTR [eax-0x3a3a9a93]
  409cb2:	push   cs
  409cb3:	add    eax,0x3a2e4ce6
  409cb8:	sbb    BYTE PTR [esi+ebx*4],ch
  409cbb:	inc    edx
  409cbc:	loope  0x409cf8
  409cbe:	push   ss
  409cbf:	hlt    
  409cc0:	mov    edi,0xd15ce01
  409cc5:	mov    al,0x51
  409cc7:	inc    edx
  409cc8:	in     eax,0x6f
  409cca:	in     al,0x53
  409ccc:	xor    ebx,ecx
  409cce:	pop    ds
  409ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd0:	or     esp,DWORD PTR [edx]
  409cd2:	loopne 0x409ca7
  409cd4:	dec    ebx
  409cd5:	sub    eax,0x5a7603e6
  409cda:	xchg   ecx,eax
  409cdb:	dec    esp
  409cdc:	jae    0x409d04
  409cde:	jns    0x409cfd
  409ce0:	mov    bh,0x50
  409ce3:	inc    ebp
  409ce4:	sbb    edi,DWORD PTR [edi+0x5298839f]
  409cea:	pop    ds
  409ceb:	(bad)  [eax]
  409ced:	jmp    0x409cdb
  409cef:	out    0x7f,al
  409cf1:	scas   eax,DWORD PTR es:[edi]
  409cf2:	sbb    ebp,esp
  409cf4:	push   esi
  409cf5:	in     al,0xf1
  409cf7:	out    dx,eax
  409cf8:	xchg   BYTE PTR [ebx],cl
  409cfa:	imul   ecx,DWORD PTR [eax],0x251ab3b8
  409d00:	jb     0x409d56
  409d02:	cmp    ebx,0x2
  409d05:	adc    ebp,DWORD PTR [ecx]
  409d07:	or     BYTE PTR [ebx+0x57feda54],bl
  409d0d:	push   edx
  409d0e:	loope  0x409d66
  409d10:	mov    al,0xd7
  409d12:	push   ebx
  409d13:	mov    edx,0x6b7d83b3
  409d18:	dec    esi
  409d19:	jo     0x409d1c
  409d1b:	cwde   
  409d1c:	ret    0x94f4
  409d1f:	(bad)
  409d22:	je     0x409d91
  409d24:	push   ebx
  409d25:	in     al,dx
  409d26:	jb     0x409d26
  409d28:	js     0x409cda
  409d2a:	fmul   QWORD PTR [eax-0x173bbcbe]
  409d30:	jmp    0x89ed:0xe3b237de
  409d37:	sbb    BYTE PTR [edi-0x47],0x18
  409d3b:	out    0x6a,eax
  409d3d:	xchg   edx,eax
  409d3e:	lods   eax,DWORD PTR ds:[esi]
  409d3f:	jle    0x409ccc
  409d41:	and    bh,BYTE PTR [ecx]
  409d43:	sub    ch,cl
  409d45:	imul   eax,esp,0xfffffffb
  409d48:	xchg   ecx,eax
  409d49:	or     ecx,DWORD PTR [edx+0x18ea5db9]
  409d4f:	mov    edx,0x5dc114ee
  409d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d55:	push   esi
  409d56:	lods   eax,DWORD PTR ds:[esi]
  409d57:	jg     0x409db5
  409d59:	dec    ecx
  409d5a:	mov    ebp,0x308b551b
  409d5f:	retf   
  409d60:	dec    ebp
  409d61:	fs cli 
  409d63:	shl    DWORD PTR [esi],cl
  409d65:	imul   ecx,edx,0x368c56f2
  409d6b:	cmp    BYTE PTR [edi+0x3c],cl
  409d6e:	sub    DWORD PTR [edi-0x12],ebp
  409d71:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d73:	sub    ebp,DWORD PTR [ebp+edx*2+0x7b240c6a]
  409d7a:	mov    bl,0xef
  409d7c:	inc    eax
  409d7d:	in     eax,0xd0
  409d7f:	stc    
  409d80:	stos   BYTE PTR es:[edi],al
  409d81:	or     DWORD PTR [esi+ebx*1-0x403a6e67],ebx
  409d88:	in     eax,dx
  409d89:	fwait
  409d8a:	xchg   esp,eax
  409d8b:	and    dl,al
  409d8d:	adc    al,0x91
  409d8f:	cmp    DWORD PTR [esi],0x7444b77b
  409d95:	sub    BYTE PTR [eax+0x4e11aeaa],0x1a
  409d9c:	test   eax,0x903d1ddb
  409da1:	xchg   esi,ebx
  409da3:	lahf   
  409da4:	xchg   esp,eax
  409da5:	dec    ebx
  409da6:	stos   DWORD PTR es:[edi],eax
  409da7:	pop    esp
  409da8:	xchg   edi,eax
  409da9:	sti    
  409daa:	push   ebx
  409dab:	mov    cl,0xb6
  409dad:	cld    
  409dae:	or     cl,bh
  409db0:	sub    al,0xca
  409db2:	bound  eax,QWORD PTR [esi+0x11457094]
  409db8:	push   eax
  409db9:	mov    esp,0x85b39ff1
  409dbe:	push   ebx
  409dbf:	into   
  409dc0:	outs   dx,DWORD PTR ds:[esi]
  409dc1:	in     eax,0xd9
  409dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc5:	mov    edx,0x57fa6f3
  409dca:	repnz out 0x28,eax
  409dcd:	popf   
  409dce:	out    0x15,al
  409dd0:	into   
  409dd1:	arpl   dx,si
  409dd3:	dec    edx
  409dd4:	sub    dl,cl
  409dd6:	test   eax,0x54a46e7f
  409ddb:	jo     0x409d90
  409ddd:	dec    ecx
  409dde:	cmc    
  409ddf:	xor    al,0x5
  409de1:	call   0xb652119f
  409de6:	cmp    bl,BYTE PTR [ecx]
  409de8:	shl    BYTE PTR [ebx],cl
  409dea:	inc    edi
  409deb:	je     0x409e4c
  409ded:	dec    edx
  409dee:	dec    ebp
  409def:	ins    DWORD PTR es:[edi],dx
  409df0:	repnz ficom DWORD PTR [ecx+0x2f]
  409df4:	jnp    0x409e01
  409df6:	movq   QWORD PTR [eax-0x4408e21e],mm4
  409dfd:	mov    dh,0x42
  409dff:	xchg   edx,eax
  409e00:	imul   eax,DWORD PTR [eax-0x39],0xffffffdb
  409e04:	rol    BYTE PTR [ebx-0x16],1
  409e07:	pop    esp
  409e08:	sub    eax,0xae436e2b
  409e0d:	fist   DWORD PTR [ecx+eiz*2+0x5c]
  409e11:	ins    DWORD PTR es:[edi],dx
  409e12:	mov    esp,0x37bd70b9
  409e17:	ds jae 0x409e78
  409e1a:	stc    
  409e1b:	pop    edi
  409e1c:	jmp    0xa71245ef
  409e21:	test   ah,bh
  409e23:	out    0x26,eax
  409e25:	ins    BYTE PTR es:[edi],dx
  409e26:	pop    esi
  409e27:	les    eax,FWORD PTR [edi]
  409e29:	(bad)  
  409e2a:	dec    edi
  409e2b:	aam    0x82
  409e2d:	mov    WORD PTR [ecx+0x23],ss
  409e30:	cmp    BYTE PTR [ebp+ebp*1-0x6e],0xe
  409e35:	sbb    eax,DWORD PTR [esi]
  409e37:	jge    0x409e98
  409e39:	fnstcw WORD PTR [edi+0x1185f518]
  409e3f:	mov    esi,0x8eec4d2a
  409e44:	sahf   
  409e45:	xchg   ecx,eax
  409e46:	sub    DWORD PTR [esi-0x67],esi
  409e49:	sub    ebx,DWORD PTR [ebx-0x20ba935e]
  409e4f:	dec    ebx
  409e50:	popa   
  409e51:	mov    ds:0xbdbb5f07,al
  409e56:	test   BYTE PTR [ecx+0x75],bl
  409e59:	adc    al,0x19
  409e5b:	xor    eax,0x7f3dec4b
  409e60:	sti    
  409e61:	loope  0x409eaa
  409e63:	push   ss
  409e64:	sbb    eax,0x9ad1a5c0
  409e69:	bound  esi,QWORD PTR [edi-0x10238d41]
  409e6f:	xor    eax,0x763ba48a
  409e74:	lds    esp,FWORD PTR [edx+0x42ee1ec8]
  409e7a:	bound  edx,QWORD PTR [edi-0x7c]
  409e7d:	mov    ebp,0xc20e0227
  409e82:	shl    DWORD PTR ds:0xf1159347,0x22
  409e89:	popa   
  409e8a:	dec    eax
  409e8b:	mov    ds:0x29b95760,eax
  409e90:	jne    0x409ee9
  409e92:	pushw  0x6
  409e95:	mov    ecx,0x6be1bd6c
  409e9a:	jbe    0x409f0e
  409e9c:	rcl    BYTE PTR [edx],0xa2
  409e9f:	xchg   ebx,eax
  409ea0:	inc    ecx
  409ea1:	push   esi
  409ea2:	hlt    
  409ea3:	or     BYTE PTR [edx],bl
  409ea5:	jmp    0xcac5:0x7d5935df
  409eac:	push   esi
  409ead:	adc    BYTE PTR [ebx-0x14ca6d38],ah
  409eb3:	popa   
  409eb4:	leave  
  409eb5:	adc    DWORD PTR ds:0x48fe9ce1,esi
  409ebb:	aaa    
  409ebc:	aam    0xa6
  409ebe:	add    BYTE PTR [ebp-0x6b6cd228],al
  409ec4:	cmp    esi,DWORD PTR [ecx+ebx*4-0x7f7c8f39]
  409ecb:	outs   dx,DWORD PTR ds:[esi]
  409ecc:	mov    WORD PTR [esi],ds
  409ece:	xor    al,0x2f
  409ed0:	pop    edx
  409ed1:	sar    BYTE PTR [ebp-0x4dafa234],0x40
  409ed8:	stos   BYTE PTR es:[edi],al
  409ed9:	push   0x58
  409edb:	jbe    0x409f38
  409edd:	shl    DWORD PTR [ebp-0x9],0xe0
  409ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ee2:	pushf  
  409ee3:	je     0x409ef0
  409ee5:	jmp    0xe3e4:0x2f3acc28
  409eec:	and    eax,0x5979d834
  409ef1:	cmp    esp,DWORD PTR [edi]
  409ef3:	and    ch,BYTE PTR [ecx+ebp*8+0x40]
  409ef7:	jae    0x409f4c
  409ef9:	pusha  
  409efa:	call   0xc29adf73
  409eff:	adc    eax,0x2612642c
  409f04:	inc    eax
  409f05:	pop    es
  409f06:	mov    eax,ds:0x235d59ec
  409f0b:	add    eax,0xa37c7994
  409f10:	xchg   esi,eax
  409f11:	jmp    0x409f74
  409f13:	out    dx,al
  409f14:	adc    dl,BYTE PTR [ebp+ebp*1+0x36]
  409f18:	mov    ds:0xb9a2da00,al
  409f1d:	push   eax
  409f1e:	ins    DWORD PTR es:[edi],dx
  409f1f:	pusha  
  409f20:	daa    
  409f21:	mov    dh,0xd5
  409f23:	ss retf 0xbe4c
  409f27:	mov    ebp,0xc5ccdb7b
  409f2c:	imul   ebp,DWORD PTR [ebp+0x2d4abdb6],0xfffffffc
  409f33:	and    dh,BYTE PTR [eax-0x14]
  409f36:	xor    BYTE PTR [esp+ebx*4-0x1e37ae60],al
  409f3d:	hlt    
  409f3e:	pop    edx
  409f3f:	sahf   
  409f40:	sub    ch,ch
  409f42:	sub    al,0x9
  409f44:	test   al,0x24
  409f46:	pop    ebx
  409f47:	xor    al,0x72
  409f49:	and    eax,0xf28816b4
  409f4e:	lods   al,BYTE PTR ds:[esi]
  409f4f:	sbb    eax,0x45cf6364
  409f54:	sbb    al,0xe5
  409f56:	repnz arpl WORD PTR [ebx],ax
  409f59:	sub    bl,BYTE PTR [edi-0x74]
  409f5c:	hlt    
  409f5d:	shl    esp,0x56
  409f60:	loop   0x409f99
  409f62:	jp     0x409f4a
  409f64:	mov    bh,0x7
  409f66:	mov    bl,0x9a
  409f68:	jne    0x409fbd
  409f6a:	retf   
  409f6b:	cld    
  409f6c:	sub    cl,BYTE PTR [esi+0x6afaf73a]
  409f72:	mov    eax,0x2efff785
  409f77:	jle    0x409f59
  409f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f7a:	out    dx,al
  409f7b:	adc    al,0xfb
  409f7d:	lods   al,BYTE PTR ds:[esi]
  409f7e:	mov    cl,0xcb
  409f80:	xor    dh,BYTE PTR [eax-0x53]
  409f83:	es mov bl,0xb6
  409f86:	mov    ebx,0xb6cfa84c
  409f8b:	push   0x8
  409f8d:	push   es
  409f8e:	pop    edx
  409f8f:	sti    
  409f90:	mov    ds:0xecae1183,eax
  409f95:	xchg   BYTE PTR [ebx],ch
  409f97:	xchg   dl,cl
  409f99:	xchg   ebp,eax
  409f9a:	sbb    bl,BYTE PTR [ebx+0x54340707]
  409fa0:	int    0xef
  409fa2:	test   al,0x6
  409fa4:	and    DWORD PTR [ebx+0x465a9fdf],esp
  409faa:	sbb    eax,0xd2b8885c
  409faf:	mov    esi,0xe710818e
  409fb4:	inc    ebx
  409fb5:	aas    
  409fb6:	test   al,0x35
  409fb8:	pushw  ss
  409fba:	pop    ebx
  409fbb:	lds    edi,FWORD PTR [ebp-0x3c]
  409fbe:	xchg   ebx,eax
  409fbf:	or     BYTE PTR [esi],0xfa
  409fc2:	sbb    eax,0x11dac3e9
  409fc7:	sub    al,0xe4
  409fc9:	test   DWORD PTR [ecx],esp
  409fcb:	mov    dh,0x6b
  409fcd:	pop    ebp
  409fce:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409fd0:	xor    eax,0xd873516
  409fd5:	(bad)  
  409fd7:	test   DWORD PTR [ecx-0x24d78c5d],esp
  409fdd:	inc    eax
  409fde:	pop    esp
  409fdf:	add    bh,bl
  409fe1:	xchg   DWORD PTR [ebp+edi*8+0x747445b2],esi
  409fe8:	aas    
  409fe9:	out    0x95,al
  409feb:	out    0x7c,al
  409fed:	fcompp 
  409fef:	pop    esp
  409ff0:	into   
  409ff1:	not    al
  409ff3:	adc    eax,0xdb64fc6e
  409ff8:	retf   
  409ff9:	scas   al,BYTE PTR es:[edi]
  409ffa:	inc    esi
  409ffb:	mov    esi,0xac99c3ac
  40a000:	push   0x2ec73509
  40a005:	bound  ebp,QWORD PTR [edx]
  40a007:	jns    0x409fcc
  40a009:	stos   BYTE PTR es:[edi],al
  40a00a:	shl    DWORD PTR ds:0x42e7e4be,0xf3
  40a011:	(bad)  [ebx-0x38]
  40a014:	adc    ch,BYTE PTR [ebx-0xc]
  40a017:	test   eax,0x3acffa8b
  40a01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a01d:	xor    DWORD PTR [esi-0x3c],0x2a6150d4
  40a024:	(bad)  
  40a025:	loop   0x40a062
  40a027:	imul   edx,eax,0x1c61cef2
  40a02d:	or     BYTE PTR [edx+ecx*2-0x3],ch
  40a031:	(bad)  
  40a032:	pop    ebp
  40a033:	add    DWORD PTR [eax-0x30],esi
  40a036:	pop    es
  40a037:	pop    ds
  40a038:	jl     0x40a0b9
  40a03a:	inc    edi
  40a03b:	mov    ebp,0xc1fe05d7
  40a040:	(bad)  
  40a042:	mov    ebx,0xed4c20bf
  40a047:	jno    0x40a022
  40a049:	mov    ah,0x75
  40a04b:	out    dx,eax
  40a04c:	stc    
  40a04d:	or     ah,BYTE PTR [eax+0x2c]
  40a050:	sbb    esp,ecx
  40a052:	adc    DWORD PTR [ebp+0x15],edx
  40a055:	mov    dh,0x10
  40a057:	xlat   BYTE PTR ds:[ebx]
  40a058:	lock mov edi,DWORD PTR [esi]
  40a05b:	outs   dx,BYTE PTR es:[esi]
  40a05d:	or     esp,DWORD PTR [ecx]
  40a05f:	stos   DWORD PTR es:[edi],eax
  40a060:	sub    esp,DWORD PTR [edi+ebp*4+0x674ae7b0]
  40a067:	cwde   
  40a068:	pop    eax
  40a069:	xchg   esp,eax
  40a06a:	stos   DWORD PTR es:[edi],eax
  40a06b:	xor    ch,BYTE PTR [eax-0x40]
  40a06e:	push   ds
  40a06f:	sbb    ch,BYTE PTR [eax+0x5b]
  40a072:	rol    DWORD PTR [ebx+0x48a5bfaa],1
  40a078:	mov    DWORD PTR [ebp+0x3faeb4ef],edi
  40a07e:	pop    edi
  40a07f:	inc    edx
  40a080:	inc    esi
  40a081:	clc    
  40a082:	(bad)  
  40a084:	sub    ebp,DWORD PTR [ecx+0x6bcee9fd]
  40a08a:	stos   DWORD PTR es:[edi],eax
  40a08b:	in     eax,dx
  40a08c:	and    ah,bl
  40a08e:	aas    
  40a08f:	fnsave [edi]
  40a091:	push   es
  40a092:	stos   DWORD PTR es:[edi],eax
  40a093:	sar    bl,cl
  40a095:	or     esi,eax
  40a097:	aam    0xdc
  40a099:	mov    ecx,ecx
  40a09b:	inc    edi
  40a09c:	push   esp
  40a09d:	not    BYTE PTR [ebp-0x43]
  40a0a0:	add    ebp,DWORD PTR [ecx]
  40a0a2:	sbb    eax,0x4446d30
  40a0a7:	jg     0x40a08f
  40a0a9:	gs loopne 0x40a030
  40a0ac:	mov    eax,ds:0x310246bf
  40a0b1:	ror    BYTE PTR [ebp-0x72e005dc],0x93
  40a0b8:	sbb    ch,0x7b
  40a0bb:	jmp    FWORD PTR [edi+0x3d]
  40a0be:	jbe    0x40a0db
  40a0c0:	and    BYTE PTR [ebp+0x61ac0dfb],0xaa
  40a0c7:	xchg   DWORD PTR [ebx+0x132eb69b],edx
  40a0cd:	call   0xcc6435fb
  40a0d2:	or     DWORD PTR [edi+0x3e918af6],ebx
  40a0d8:	xor    edx,DWORD PTR [ebx-0x42]
  40a0db:	jno    0x40a124
  40a0dd:	adc    ah,BYTE PTR [edx+0x6a]
  40a0e0:	mov    ebx,edi
  40a0e2:	cmp    bl,BYTE PTR [edi+0x6b]
  40a0e5:	xor    esp,DWORD PTR [ebx-0x5cbd760e]
  40a0eb:	ss or  eax,0x8abb934b
  40a0f1:	push   ebp
  40a0f2:	fild   QWORD PTR [ecx]
  40a0f4:	push   edi
  40a0f5:	jle    0x40a0c3
  40a0f7:	inc    ecx
  40a0f8:	neg    BYTE PTR [ebx+0x3f]
  40a0fb:	jg     0x40a084
  40a0fd:	cmp    al,BYTE PTR [esi+0x3]
  40a100:	inc    edx
  40a101:	int    0xec
  40a103:	out    0x8a,al
  40a105:	cdq    
  40a106:	enter  0xc837,0x3b
  40a10a:	lds    edx,FWORD PTR [ebp-0x8]
  40a10d:	mov    eax,ds:0xa7626e85
  40a112:	stos   DWORD PTR es:[edi],eax
  40a113:	sub    eax,0x8347b6fe
  40a118:	cmp    edx,edi
  40a11a:	and    esi,DWORD PTR ds:0x133d9570
  40a120:	mov    al,0x1a
  40a122:	and    al,0x58
  40a124:	leave  
  40a125:	scas   eax,DWORD PTR es:[edi]
  40a126:	jge    0x40a0ff
  40a128:	mov    al,cl
  40a12a:	sub    esi,DWORD PTR [esi-0x39]
  40a12d:	cmp    edx,DWORD PTR [eax]
  40a12f:	and    BYTE PTR [ecx-0x18],bl
  40a132:	dec    edi
  40a133:	inc    esi
  40a134:	jnp    0x40a0eb
  40a136:	xor    al,0xfa
  40a138:	lock fldcw WORD PTR cs:[edx+0x59e67ab3]
  40a140:	xchg   BYTE PTR [ebx+0x43],al
  40a143:	ret    
  40a144:	leave  
  40a145:	repnz sbb ecx,edx
  40a148:	mov    cl,BYTE PTR [ebp+0x6177a6b8]
  40a14e:	in     eax,0xc6
  40a150:	xchg   esp,eax
  40a151:	and    BYTE PTR [ecx-0x4b98ed65],bh
  40a157:	xchg   dh,cl
  40a159:	and    edx,DWORD PTR [esi+0x53]
  40a15c:	cld    
  40a15d:	mov    ecx,DWORD PTR ds:0x17f19b6b
  40a163:	dec    DWORD PTR [ebp+0x7c2720ff]
  40a169:	xchg   edi,eax
  40a16a:	into   
  40a16b:	sar    DWORD PTR [eax+0x2c],0xd8
  40a16f:	mov    ds:0xe6429aef,al
  40a174:	mov    ch,0x1a
  40a176:	out    dx,al
  40a177:	and    bl,ah
  40a179:	(bad)  
  40a17a:	xchg   esi,eax
  40a17b:	popa   
  40a17c:	clc    
  40a17d:	lods   eax,DWORD PTR ds:[esi]
  40a17e:	rcl    DWORD PTR [ebx+0x42],0xfb
  40a182:	ds cmp al,0xc9
  40a185:	test   eax,0x781bc667
  40a18a:	nop
  40a18b:	addr16 mov ch,0xf
  40a18e:	mov    esi,fs
  40a190:	aad    0x8b
  40a192:	sahf   
  40a193:	imul   esi,ebp,0x288fd5dd
  40a199:	adc    BYTE PTR [eax+0xd994078],cl
  40a19f:	icebp  
  40a1a0:	cli    
  40a1a1:	push   esp
  40a1a2:	push   edx
  40a1a3:	outs   dx,DWORD PTR ds:[esi]
  40a1a4:	scas   al,BYTE PTR es:[edi]
  40a1a5:	in     eax,dx
  40a1a6:	adc    BYTE PTR [edx],dh
  40a1a8:	loope  0x40a1f9
  40a1aa:	pop    edx
  40a1ab:	mov    ds:0xabcdb5ae,al
  40a1b0:	pop    edi
  40a1b1:	fwait
  40a1b2:	icebp  
  40a1b3:	out    0x45,eax
  40a1b5:	imul   esi,DWORD PTR [ebx-0x4f446ccb],0xffffff84
  40a1bc:	imul   edi,ebx,0x4b
  40a1bf:	imul   esp,esi,0x85317cd
  40a1c5:	ins    BYTE PTR es:[edi],dx
  40a1c6:	jbe    0x40a1d6
  40a1c8:	loop   0x40a1d5
  40a1ca:	(bad)  
  40a1cb:	jp     0x40a17d
  40a1cd:	not    edi
  40a1cf:	push   ebx
  40a1d0:	mov    ds:0x34571347,al
  40a1d5:	mov    ?,edi
  40a1d7:	mov    fs,WORD PTR [ecx-0x6c83a655]
  40a1dd:	sbb    DWORD PTR [esi+0x6c],ecx
  40a1e0:	mov    ds:0xc5dab144,eax
  40a1e5:	push   0x69626e9a
  40a1ea:	jge    0x40a23b
  40a1ec:	mov    WORD PTR [esi],?
  40a1ee:	test   al,0x14
  40a1f0:	pop    ss
  40a1f1:	lods   eax,DWORD PTR es:[esi]
  40a1f3:	hlt    
  40a1f4:	mov    ch,0xe7
  40a1f6:	bound  ecx,QWORD PTR [ebp-0x3b]
  40a1f9:	xor    eax,DWORD PTR [ecx+0x1f]
  40a1fc:	inc    esp
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	dec    edx
  40a5e9:	inc    edx
  40a5ea:	cdq    
  40a5eb:	mov    dl,0x27
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	push   edx
  40a5f5:	adc    ebx,ecx
  40a5f7:	(bad)  
  40a5f8:	pcmpeqw mm0,QWORD PTR [edi-0x6f]
  40a5fc:	add    ecx,edi
  40a5fe:	push   ecx
  40a5ff:	push   edx
  40a600:	xchg   ebx,eax
  40a601:	fst    DWORD PTR ss:[ebp-0x17]
  40a605:	pop    ebx
  40a606:	pop    esi
  40a607:	into   
  40a608:	pop    esp
  40a609:	lods   eax,DWORD PTR ds:[esi]
  40a60a:	lods   eax,DWORD PTR ds:[esi]
  40a60b:	out    0xd6,eax
  40a60d:	xchg   ecx,eax
  40a60e:	lea    edi,[esi-0x7d104725]
  40a614:	xor    edi,esi
  40a616:	cld    
  40a617:	outs   dx,DWORD PTR ds:[esi]
  40a618:	fcomi  st,st(5)
  40a61a:	hlt    
  40a61b:	xor    esp,DWORD PTR [ebp-0x18]
  40a61e:	jmp    0x41c5:0x2aa2f0fe
  40a625:	repz push eax
  40a627:	cmp    ecx,DWORD PTR [eax+0x13dfbf8f]
  40a62d:	xor    al,bh
  40a62f:	xchg   esp,eax
  40a630:	dec    ecx
  40a631:	shl    BYTE PTR [esi],cl
  40a633:	jne    0x40a64a
  40a635:	das    
  40a636:	add    BYTE PTR [edx-0x2f7bd59c],cl
  40a63c:	popf   
  40a63d:	nop
  40a63e:	add    al,0x7b
  40a641:	sbb    eax,0xa4e1140d
  40a646:	ins    DWORD PTR es:[edi],dx
  40a647:	sbb    DWORD PTR [esi-0x2b89d6ff],ebx
  40a64d:	pop    ebx
  40a64e:	sub    DWORD PTR [ecx*2-0x64a936ac],ebp
  40a655:	mov    bh,0xe3
  40a657:	dec    esi
  40a658:	popa   
  40a659:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a65b:	icebp  
  40a65c:	xchg   ebx,eax
  40a65d:	cmp    BYTE PTR [edi+0x60fe976d],0xa3
  40a664:	in     al,dx
  40a665:	call   0x5b35:0x643a19b9
  40a66c:	out    0x53,eax
  40a66e:	ficomp WORD PTR [ebp-0x7b9d52ed]
  40a674:	fistp  DWORD PTR [esi+0xa]
  40a677:	push   ecx
  40a678:	lahf   
  40a679:	adc    bl,cl
  40a67b:	ss pusha 
  40a67d:	inc    edx
  40a67e:	mov    ah,0xaa
  40a680:	sahf   
  40a681:	push   edi
  40a682:	fcmovbe st,st(4)
  40a684:	pop    ss
  40a685:	mov    ebp,DWORD PTR [edx+0x530e3bbb]
  40a68b:	dec    esi
  40a68c:	mov    dl,0x47
  40a68e:	arpl   bp,cx
  40a690:	clc    
  40a691:	jmp    0xca141bfa
  40a696:	cmp    BYTE PTR [edx+ecx*4+0x558390d2],bh
  40a69d:	ret    0xbaf2
  40a6a0:	ins    BYTE PTR es:[edi],dx
  40a6a1:	dec    edx
  40a6a2:	inc    ecx
  40a6a3:	sbb    al,0x4e
  40a6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a6:	jp     0x40a684
  40a6a8:	in     eax,0xc6
  40a6aa:	ret    0xf870
  40a6ad:	mov    ch,0x51
  40a6af:	imul   edi,DWORD PTR [ecx-0x54],0xc98295ac
  40a6b6:	dec    esi
  40a6b7:	divps  xmm3,XMMWORD PTR [eax+esi*2]
  40a6bb:	xor    al,dl
  40a6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6be:	sbb    BYTE PTR [edx],cl
  40a6c0:	pop    edx
  40a6c1:	js     0x40a6f5
  40a6c3:	outs   dx,DWORD PTR ds:[si]
  40a6c5:	jno    0x40a687
  40a6c7:	outs   dx,DWORD PTR ds:[esi]
  40a6c8:	inc    edi
  40a6c9:	or     eax,ebp
  40a6cb:	icebp  
  40a6cc:	ja     0x40a6a9
  40a6ce:	test   al,0xf3
  40a6d0:	mov    ebp,0x2538627a
  40a6d5:	popa   
  40a6d6:	mov    ds,edi
  40a6d8:	push   cx
  40a6da:	push   ebx
  40a6db:	popa   
  40a6dc:	sti    
  40a6dd:	div    DWORD PTR [ecx-0x45c898bc]
  40a6e3:	or     DWORD PTR [ebx-0x3b],ebx
  40a6e6:	bound  esi,QWORD PTR ds:0x51cbf971
  40a6ec:	test   DWORD PTR [ebx+esi*4+0x35064a43],ebp
  40a6f3:	in     al,0x26
  40a6f5:	test   eax,0x677abec5
  40a6fa:	repz xchg ebp,eax
  40a6fc:	retf   0xf19e
  40a6ff:	aad    0x87
  40a701:	out    dx,al
  40a702:	push   ds
  40a703:	sar    esp,1
  40a705:	mov    esp,0x96c66a5a
  40a70a:	xchg   ecx,eax
  40a70b:	jl     0x40a6f8
  40a70d:	mov    bh,0x7e
  40a70f:	cli    
  40a710:	jmp    0xafdb28df
  40a715:	ins    BYTE PTR es:[edi],dx
  40a716:	call   0x3588:0xdadf2006
  40a71d:	sub    eax,0x191a9ba2
  40a722:	mov    BYTE PTR ds:0xefd4a9cd,bh
  40a728:	in     eax,0x5e
  40a72a:	lods   eax,DWORD PTR ds:[esi]
  40a72b:	push   esi
  40a72c:	out    dx,eax
  40a72d:	push   ecx
  40a72e:	dec    edi
  40a72f:	push   edx
  40a730:	arpl   WORD PTR [edi+0x14],di
  40a733:	inc    ebx
  40a734:	jns    0x40a71f
  40a736:	pop    ebp
  40a737:	in     eax,dx
  40a738:	jne    0x40a6e7
  40a73a:	test   BYTE PTR [edi],dl
  40a73c:	adc    DWORD PTR [eax+esi*2+0x48],esi
  40a740:	jmp    DWORD PTR [edx+0x30768b4a]
  40a746:	stos   BYTE PTR es:[edi],al
  40a747:	xchg   edi,eax
  40a748:	mov    WORD PTR [ebp-0x3304df7b],gs
  40a74e:	cld    
  40a74f:	push   ecx
  40a750:	iret   
  40a751:	icebp  
  40a752:	mov    edi,DWORD PTR [ebp+0x73feea22]
  40a758:	jl     0x40a7cf
  40a75a:	repnz dec esp
  40a75c:	sti    
  40a75d:	or     al,0x7c
  40a75f:	pop    ecx
  40a760:	push   edi
  40a761:	sahf   
  40a762:	or     DWORD PTR [edx],edi
  40a764:	loope  0x40a77b
  40a766:	addr16 repnz mov ds:0x5f28,al
  40a76b:	lods   eax,DWORD PTR ds:[esi]
  40a76c:	jge    0x40a71f
  40a76e:	out    dx,al
  40a76f:	arpl   WORD PTR [eax],bx
  40a771:	ret    
  40a772:	popa   
  40a773:	data16 (bad) 
  40a775:	sbb    eax,DWORD PTR [edx-0xc]
  40a778:	fld    TBYTE PTR [ebx+0x6389bbb9]
  40a77e:	inc    ebp
  40a77f:	test   al,0x14
  40a781:	shl    dl,cl
  40a783:	pop    eax
  40a784:	icebp  
  40a785:	xchg   edx,eax
  40a786:	adc    al,0x16
  40a788:	enter  0x7a28,0xb8
  40a78c:	and    DWORD PTR [ecx+0x6a],eax
  40a78f:	jb     0x40a77b
  40a791:	icebp  
  40a792:	ins    DWORD PTR es:[edi],dx
  40a793:	ja     0x40a771
  40a795:	out    0xf9,al
  40a797:	cdq    
  40a798:	and    al,0xb4
  40a79a:	xchg   esi,eax
  40a79b:	mov    edi,0x4c3023b8
  40a7a0:	daa    
  40a7a1:	push   cs
  40a7a2:	fidiv  DWORD PTR fs:[ebx-0x23]
  40a7a6:	lea    ebp,[eax]
  40a7a8:	cmp    eax,0xb8b53ccc
  40a7ad:	mov    dh,0x1a
  40a7af:	loopne 0x40a7f3
  40a7b1:	frstor [ecx+edx*8-0x15bd582a]
  40a7b8:	xchg   ecx,eax
  40a7b9:	sub    dh,BYTE PTR [edi-0x56]
  40a7bc:	jne    0x40a7e2
  40a7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bf:	enter  0x6c53,0x93
  40a7c3:	jnp    0x40a7b5
  40a7c5:	shl    BYTE PTR [ebx+0x45],cl
  40a7c8:	enter  0x7e72,0x80
  40a7cc:	dec    ecx
  40a7cd:	jne    0x40a800
  40a7cf:	out    0x57,eax
  40a7d1:	or     DWORD PTR ds:0x48b7fa12,ecx
  40a7d7:	push   ebp
  40a7d8:	dec    edx
  40a7d9:	hlt    
  40a7da:	rol    DWORD PTR [ecx+0x4e],0xc4
  40a7de:	inc    ebp
  40a7df:	pusha  
  40a7e0:	loop   0x40a787
  40a7e2:	sbb    ch,dh
  40a7e4:	jp     0x40a790
  40a7e6:	fdivr  QWORD PTR [ebx]
  40a7e8:	stc    
  40a7e9:	dec    edi
  40a7ea:	mov    al,ds:0xd1c3fd97
  40a7ef:	rcl    DWORD PTR [eax-0x2048d77d],1
  40a7f5:	inc    esi
  40a7f6:	ins    BYTE PTR es:[edi],dx
  40a7f7:	fiadd  WORD PTR [ebx]
  40a7f9:	jno    0x40a798
  40a7fb:	pop    ds
  40a7fc:	mov    ah,0x1a
  40a7fe:	jl     0x40a7fb
  40a800:	test   al,0xc4
  40a802:	pop    esp
  40a803:	(bad)  
  40a804:	fsubr  st,st(2)
  40a806:	arpl   WORD PTR [edi],si
  40a808:	adc    ebp,eax
  40a80a:	jmp    0x40a86f
  40a80c:	shr    BYTE PTR [edi],1
  40a80e:	jb     0x40a86e
  40a810:	fdiv   QWORD PTR [eax]
  40a812:	mov    cl,0x5d
  40a814:	cmp    DWORD PTR [ecx+0x18112b28],esi
  40a81a:	fsub   DWORD PTR [esi]
  40a81c:	das    
  40a81d:	xchg   esi,eax
  40a81e:	xchg   ch,dh
  40a820:	jbe    0x40a7f8
  40a822:	inc    BYTE PTR [ebx+edx*8+0x383fb288]
  40a829:	out    dx,eax
  40a82a:	xchg   DWORD PTR [edx],eax
  40a82c:	or     eax,0xecee2e1
  40a831:	dec    edi
  40a832:	xchg   ebp,eax
  40a833:	hlt    
  40a834:	mov    al,0x40
  40a836:	adc    eax,0x3cea84cf
  40a83b:	fwait
  40a83c:	imul   edi,DWORD PTR [ecx+ebp*8-0x7],0xffffffc5
  40a841:	repnz cmp bl,BYTE PTR [ebp-0x39]
  40a845:	push   ecx
  40a846:	and    BYTE PTR [ecx-0x4391866b],dh
  40a84c:	and    esi,DWORD PTR [edx]
  40a84e:	sub    eax,0xef9b2a9b
  40a853:	sbb    BYTE PTR [edi+0x33cbabc8],al
  40a859:	mov    bh,0xa4
  40a85b:	in     al,0x5d
  40a85d:	mov    al,ds:0x230e8f9e
  40a862:	mov    al,0xb2
  40a864:	jmp    0x4b9607a
  40a869:	iret   
  40a86a:	jbe    0x40a8a6
  40a86c:	xchg   ebp,eax
  40a86d:	xchg   ebp,eax
  40a86e:	in     al,dx
  40a86f:	mov    bl,0xe6
  40a871:	jp     0x40a846
  40a873:	or     DWORD PTR [eax+0x5],eax
  40a876:	jmp    0x651f83f8
  40a87b:	adc    DWORD PTR [ebx+0x16630dbe],esi
  40a881:	jmp    0x40a8ba
  40a883:	mov    bl,dh
  40a885:	push   es
  40a886:	push   0xf5367ba8
  40a88b:	and    bl,al
  40a88d:	cmp    al,0x7d
  40a88f:	xor    BYTE PTR [esi-0x34],ah
  40a892:	lahf   
  40a893:	lea    ecx,[eax-0xbdf89a1]
  40a899:	inc    esp
  40a89a:	mov    ds:0x2859b029,eax
  40a89f:	adc    DWORD PTR [esi+0x689feebd],esi
  40a8a5:	xor    ah,BYTE PTR [eax-0x3d4c105a]
  40a8ab:	mov    ?,WORD PTR [esi]
  40a8ad:	lea    edx,[eax+0x4d]
  40a8b0:	adc    eax,0x2eee5ffc
  40a8b5:	cmp    bh,BYTE PTR [ebx+0x49763580]
  40a8bb:	pop    eax
  40a8bc:	into   
  40a8bd:	ja     0x40a851
  40a8bf:	inc    eax
  40a8c0:	adc    ebx,DWORD PTR [edx+0x59]
  40a8c3:	fisub  DWORD PTR [esi+0x15]
  40a8c6:	add    eax,0x1810fd61
  40a8cb:	fcom   DWORD PTR [edi]
  40a8cd:	cmp    BYTE PTR [esi],dh
  40a8cf:	or     ebp,eax
  40a8d1:	cmp    eax,0x213b174f
  40a8d6:	ss or  bh,0xb5
  40a8da:	xchg   ebx,eax
  40a8db:	clc    
  40a8dc:	(bad)  
  40a8dd:	lods   eax,DWORD PTR ds:[esi]
  40a8de:	pop    ebx
  40a8df:	out    0xd2,al
  40a8e1:	mov    eax,ds:0x8091bae0
  40a8e6:	test   DWORD PTR [ecx],edi
  40a8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e9:	or     eax,0xf2398de0
  40a8ee:	cwde   
  40a8ef:	jg     0x40a92b
  40a8f1:	push   ebp
  40a8f2:	or     DWORD PTR [ecx],edx
  40a8f4:	fdivr  st(3),st
  40a8f6:	sub    al,0xbd
  40a8f8:	dec    esp
  40a8f9:	out    dx,eax
  40a8fa:	sar    ebx,cl
  40a8fc:	out    dx,eax
  40a8fd:	test   al,0x6d
  40a8ff:	lahf   
  40a900:	mov    ch,0xc2
  40a902:	jb     0x40a893
  40a904:	sbb    esi,DWORD PTR [esi]
  40a906:	rcl    BYTE PTR es:[edi-0x6f83e6f7],cl
  40a90d:	nop
  40a90e:	fild   QWORD PTR [edi+0x56]
  40a911:	mov    al,0xaa
  40a913:	inc    ecx
  40a914:	clc    
  40a915:	push   eax
  40a916:	sbb    ebx,DWORD PTR [ebp+0x4cea0f46]
  40a91c:	mov    cl,0xe3
  40a91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a91f:	call   0x47bb:0x4a5c5770
  40a926:	push   esp
  40a927:	mov    edx,0xa870cc16
  40a92c:	xchg   DWORD PTR [ebx],eax
  40a92e:	add    al,0xf1
  40a930:	cs jg  0x40a942
  40a933:	pop    ebp
  40a934:	ror    bh,cl
  40a936:	lea    ebp,[ebx]
  40a938:	ins    BYTE PTR es:[edi],dx
  40a939:	dec    edx
  40a93a:	sbb    eax,0x5e02be2
  40a93f:	jne    0x40a9b5
  40a941:	retf   
  40a942:	sub    edx,DWORD PTR [edi+0x23df8dda]
  40a948:	xor    BYTE PTR [eax+0x72],0xeb
  40a94c:	jmp    0x40a9b5
  40a94e:	test   eax,0x8d0851a8
  40a953:	sbb    DWORD PTR [edx-0x7f11b325],ebx
  40a959:	xor    al,0x7e
  40a95b:	sti    
  40a95c:	call   DWORD PTR [ecx]
  40a95e:	xor    ebx,DWORD PTR [edx-0x54e32cbb]
  40a964:	cdq    
  40a965:	iret   
  40a966:	sbb    bl,dh
  40a968:	adc    al,0x86
  40a96a:	cs das 
  40a96c:	das    
  40a96d:	adc    al,0x5b
  40a96f:	cmp    eax,0x52ddf1bd
  40a974:	cmp    eax,0x2533a141
  40a979:	dec    esi
  40a97a:	cmp    eax,0x693fe905
  40a97f:	les    ebx,FWORD PTR [edi-0x6b]
  40a982:	pushfw 
  40a984:	jo     0x40a916
  40a986:	push   esi
  40a987:	rcr    BYTE PTR [ebx+0x6f5e8c0c],0x56
  40a98e:	adc    BYTE PTR [edi+0x4441747c],al
  40a994:	mov    ebx,0x3501c20d
  40a999:	ficomp WORD PTR [edx+0x6]
  40a99c:	sbb    eax,0xd99d4f97
  40a9a1:	mov    ebp,0x6e3be863
  40a9a6:	sbb    al,0x8c
  40a9a8:	xchg   ebx,eax
  40a9a9:	ins    BYTE PTR es:[edi],dx
  40a9aa:	das    
  40a9ab:	out    0x90,al
  40a9ad:	stc    
  40a9ae:	mov    ds:0xf73e5077,eax
  40a9b3:	(bad)  
  40a9b4:	push   ecx
  40a9b5:	aad    0x3c
  40a9b7:	adc    edi,0xffffffbc
  40a9ba:	sub    edi,esp
  40a9bc:	push   DWORD PTR [edi]
  40a9be:	push   ebp
  40a9bf:	out    dx,al
  40a9c0:	push   es
  40a9c1:	mov    DWORD PTR [edx-0x66],edi
  40a9c4:	cmp    eax,0xee309966
  40a9c9:	popf   
  40a9ca:	nop
  40a9cb:	enter  0x8763,0xfb
  40a9cf:	push   ds
  40a9d0:	jo     0x40a9cb
  40a9d2:	ret    
  40a9d3:	js     0x40a95a
  40a9d5:	sub    al,0xf6
  40a9d7:	(bad)  
  40a9d8:	rcl    bh,0x6b
  40a9db:	push   ebp
  40a9dc:	test   DWORD PTR [edx],edx
  40a9de:	mov    ecx,0x150ce9f5
  40a9e3:	aaa    
  40a9e4:	addr16 pop es
  40a9e6:	aaa    
  40a9e7:	or     al,0xe2
  40a9e9:	sbb    eax,0xc0c4c47a
  40a9ee:	repnz push es
  40a9f0:	adc    al,bl
  40a9f2:	add    al,0x8b
  40a9f4:	lea    ecx,[ebp-0x51]
  40a9f7:	addr16 inc cx
  40a9fa:	test   ecx,0x9207cd49
  40aa00:	lea    esi,[ebp+0x33]
  40aa03:	repz in eax,0xb2
  40aa06:	mov    dl,0xda
  40aa08:	popf   
  40aa09:	ins    DWORD PTR es:[edi],dx
  40aa0a:	div    BYTE PTR [ebp+0x69]
  40aa0d:	and    bh,al
  40aa0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa10:	fwait
  40aa11:	pop    edx
  40aa12:	jmp    0x874b190a
  40aa17:	imul   ecx,DWORD PTR ds:[edx-0x248073c8],0xb807eb43
  40aa22:	adc    eax,0x8acdb716
  40aa27:	inc    esp
  40aa28:	or     BYTE PTR [ecx+0x5e617e41],al
  40aa2e:	test   al,0x26
  40aa30:	adc    dl,BYTE PTR [edi+edx*8-0x80]
  40aa34:	jbe    0x40aa46
  40aa36:	jno    0x40aa4d
  40aa38:	mov    edi,DWORD PTR [edi]
  40aa3a:	iret   
  40aa3b:	mov    dh,0x8
  40aa3d:	das    
  40aa3e:	xor    BYTE PTR [edx+0x248436b6],al
  40aa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa45:	popf   
  40aa46:	jmp    0x3a00c4c7
  40aa4b:	sub    esi,DWORD PTR [ecx-0x6e]
  40aa4e:	push   0x65
  40aa50:	daa    
  40aa51:	jmp    0xdc51:0xcc24619a
  40aa58:	inc    eax
  40aa59:	pop    ss
  40aa5a:	xchg   DWORD PTR [ebp+0x77],ecx
  40aa5d:	sbb    edi,DWORD PTR [ebx-0x6c]
  40aa60:	jecxz  0x40aa64
  40aa62:	jmp    0x4522:0x40ed6e6e
  40aa69:	out    dx,eax
  40aa6a:	sub    esp,DWORD PTR [edx-0x13]
  40aa6d:	mov    esi,0xc9db0483
  40aa72:	test   BYTE PTR [edx+0x356145fb],cl
  40aa78:	mov    ds:0xab6d4664,eax
  40aa7d:	retf   
  40aa7e:	cmp    BYTE PTR [edx-0x42864a24],dl
  40aa84:	add    DWORD PTR [ebx+0x21],eax
  40aa87:	sub    bl,BYTE PTR [edi+0x43ddff36]
  40aa8d:	push   esp
  40aa8e:	mov    ?,WORD PTR [edx+0x7c]
  40aa91:	sbb    eax,0x4f42588a
  40aa96:	aaa    
  40aa97:	loope  0x40aa54
  40aa99:	jge    0x40aadd
  40aa9b:	stc    
  40aa9c:	cmp    DWORD PTR [edx+edx*8+0x5c3a1961],ebx
  40aaa3:	(bad)  
  40aaa4:	or     edi,DWORD PTR [edx]
  40aaa6:	mov    ds:0x4f03cc5e,eax
  40aaab:	inc    eax
  40aaac:	or     al,0x21
  40aaae:	jmp    0x91b0:0x99658a65
  40aab5:	test   eax,0xd3ebf840
  40aaba:	ja     0x40ab1f
  40aabc:	adc    ebx,DWORD PTR [edx-0x6d]
  40aabf:	and    bl,BYTE PTR [ebp+eiz*2-0x50]
  40aac3:	xchg   esp,eax
  40aac4:	aam    0xbf
  40aac6:	or     BYTE PTR [ecx+0x65],al
  40aac9:	mov    dh,0x3
  40aacb:	retf   0x1ee4
  40aace:	xor    al,0x5e
  40aad0:	cmc    
  40aad1:	pop    esi
  40aad2:	jno    0x40ab13
  40aad4:	sar    BYTE PTR [ebp+0x51f187ce],0x8d
  40aadb:	adc    ebx,DWORD PTR [eax-0xf]
  40aade:	cwde   
  40aadf:	inc    edx
  40aae0:	jle    0x40aab2
  40aae2:	fninit 
  40aae4:	lock retf 
  40aae6:	mov    esi,0xcceddd99
  40aaeb:	call   0xc3a9:0x62ff15bd
  40aaf2:	dec    ebp
  40aaf3:	in     eax,0x60
  40aaf5:	jl     0x40ab63
  40aaf7:	clc    
  40aaf8:	jbe    0x40aadf
  40aafa:	test   DWORD PTR [esp+ebx*2-0x6d864dba],edi
  40ab01:	sbb    esp,DWORD PTR [ebp+0x7b]
  40ab04:	leave  
  40ab05:	gs pop ebx
  40ab07:	ins    DWORD PTR es:[edi],dx
  40ab08:	push   ss
  40ab09:	(bad)  
  40ab0a:	lock mov edi,0x9057d138
  40ab11:	iret   
  40ab12:	mov    edi,0xefc65520
  40ab17:	dec    ebx
  40ab18:	mov    eax,0x29d0693e
  40ab1d:	call   0x5846c5e7
  40ab22:	stos   BYTE PTR es:[edi],al
  40ab23:	sti    
  40ab24:	mov    esi,0x5dbfe2b5
  40ab29:	popa   
  40ab2a:	pushf  
  40ab2b:	sbb    eax,0xd7781823
  40ab30:	sub    esp,esp
  40ab32:	loop   0x40ab89
  40ab34:	popf   
  40ab35:	stos   DWORD PTR es:[edi],eax
  40ab36:	mov    esp,0x309ce030
  40ab3b:	xchg   edi,eax
  40ab3c:	mov    ah,0x41
  40ab3e:	xchg   ebp,eax
  40ab3f:	pop    ebp
  40ab40:	stos   BYTE PTR es:[edi],al
  40ab41:	call   0xb59b59b7
  40ab46:	mov    ds:0x7784a089,al
  40ab4b:	in     eax,0x81
  40ab4d:	jno    0x40ab22
  40ab4f:	jbe    0x40abc9
  40ab51:	test   ebp,esi
  40ab53:	xchg   edx,ebx
  40ab55:	pop    ebx
  40ab56:	sub    BYTE PTR [ebx+edi*8-0x30],bh
  40ab5a:	adc    eax,0xbba381eb
  40ab5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab60:	sub    eax,0x90e6808c
  40ab65:	aam    0xb2
  40ab67:	inc    ebp
  40ab68:	nop
  40ab69:	repnz adc eax,0xf9b1f73b
  40ab6f:	dec    ebx
  40ab70:	sub    BYTE PTR [esi+0x1e7e9707],ch
  40ab76:	pop    ebx
  40ab77:	lods   eax,DWORD PTR ds:[esi]
  40ab78:	mov    dl,0x9a
  40ab7a:	popf   
  40ab7b:	adc    al,0xa5
  40ab7d:	inc    eax
  40ab7e:	test   DWORD PTR [eax-0x48],eax
  40ab81:	fcom   DWORD PTR [ecx+edx*1]
  40ab84:	test   eax,0xf2cb2643
  40ab89:	cli    
  40ab8a:	outs   dx,DWORD PTR ds:[si]
  40ab8c:	or     DWORD PTR [edx-0x72cacb49],ebp
  40ab92:	mov    ds:0xbf035445,al
  40ab97:	not    bh
  40ab99:	xchg   esi,eax
  40ab9a:	lods   al,BYTE PTR ds:[esi]
  40ab9b:	mov    bh,0xef
  40ab9d:	lds    ebx,FWORD PTR [eax+ecx*1+0x5e]
  40aba1:	repnz loope 0x40ab44
  40aba4:	adc    al,0xeb
  40aba6:	cwde   
  40aba7:	data16 test BYTE PTR [ebp-0x6e95c792],al
  40abae:	xor    DWORD PTR [ecx-0x56],0x750c85f2
  40abb5:	push   ebx
  40abb6:	aad    0x45
  40abb8:	mov    eax,ds:0x43e1d5c0
  40abbd:	push   cs
  40abbe:	jp     0x40abf9
  40abc0:	mov    dh,0x32
  40abc2:	push   esp
  40abc3:	inc    eax
  40abc4:	cwde   
  40abc5:	or     bl,al
  40abc7:	sbb    BYTE PTR [esi],al
  40abc9:	jns    0x40ab6f
  40abcb:	jecxz  0x40ab99
  40abcd:	test   eax,0xe44ce6ec
  40abd2:	in     eax,0x62
  40abd4:	arpl   WORD PTR [esi],bx
  40abd6:	in     eax,0xbd
  40abd8:	xor    al,0xbf
  40abda:	pop    esi
  40abdb:	push   ds
  40abdc:	add    al,0xaa
  40abde:	adc    eax,0x337b9dfb
  40abe3:	push   edx
  40abe4:	jl     0x40ab8c
  40abe6:	or     DWORD PTR [ebp+0x7412e18b],ecx
  40abec:	mov    esp,0x34caaee0
  40abf1:	inc    ecx
  40abf2:	das    
  40abf3:	ret    0x577f
  40abf6:	push   ss
  40abf7:	retf   0xac3b
  40abfa:	add    eax,0x22a784d8
  40abff:	sbb    ebx,DWORD PTR [edi]
  40ac01:	xchg   esi,eax
  40ac02:	xchg   ebx,eax
  40ac03:	test   BYTE PTR ds:0x8428f537,0x76
  40ac0a:	or     eax,0x742ed753
  40ac0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac10:	sbb    BYTE PTR [esi+eiz*4+0x27],dl
  40ac14:	data16 stos BYTE PTR es:[edi],al
  40ac16:	ffree  st(7)
  40ac18:	jp     0x40abd9
  40ac1a:	fwait
  40ac1b:	xor    al,0xf9
  40ac1d:	push   edx
  40ac1e:	mov    ch,0x7
  40ac20:	xchg   ebp,eax
  40ac21:	mov    bh,0x11
  40ac23:	cmp    ecx,DWORD PTR [eax+0x7519451]
  40ac29:	(bad)  
  40ac2a:	xlat   BYTE PTR ds:[ebx]
  40ac2b:	stc    
  40ac2c:	and    dh,dh
  40ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac2f:	mov    edx,0x9604f7a
  40ac34:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ac36:	dec    ebx
  40ac37:	lock scas eax,DWORD PTR es:[edi]
  40ac39:	push   ds
  40ac3a:	ret    
  40ac3b:	dec    ebp
  40ac3c:	jns    0x40ac98
  40ac3e:	ja     0x40ac98
  40ac40:	mov    al,ds:0xc56fd5ab
  40ac45:	mov    ebx,0x56b49681
  40ac4a:	jb     0x40ac2d
  40ac4c:	sub    BYTE PTR [ecx-0x6d],0xbe
  40ac50:	add    ecx,DWORD PTR [eax+0x64]
  40ac53:	ja     0x40ac06
  40ac55:	sub    DWORD PTR [edx],esp
  40ac57:	lds    eax,FWORD PTR [eax+0x49]
  40ac5a:	add    ebx,ebp
  40ac5c:	div    DWORD PTR [esi-0x2d]
  40ac5f:	sub    esi,DWORD PTR [eax]
  40ac61:	shr    BYTE PTR [edx-0x61e8ccdf],0x11
  40ac68:	ins    BYTE PTR es:[edi],dx
  40ac69:	mov    eax,0xb66011b8
  40ac6e:	test   DWORD PTR [ebx+0x37],0xd476ed85
  40ac75:	xchg   ebp,eax
  40ac76:	adc    eax,ebx
  40ac78:	sub    BYTE PTR [eax+ebp*2-0x27e8ce68],dl
  40ac7f:	and    BYTE PTR [ecx],dl
  40ac81:	jmp    0x40accb
  40ac83:	pop    ds
  40ac84:	loope  0x40ac83
  40ac86:	iret   
  40ac87:	push   ebp
  40ac88:	cli    
  40ac89:	cmp    eax,0x79c309b9
  40ac8e:	fisub  DWORD PTR [edi+ecx*4+0x610185b4]
  40ac95:	dec    ebp
  40ac96:	xchg   DWORD PTR [edi+0x3a70310],ecx
  40ac9c:	outs   dx,BYTE PTR ds:[esi]
  40ac9d:	mov    eax,ds:0xf2635354
  40aca2:	sbb    BYTE PTR [esi+ecx*8+0x2a],al
  40aca6:	leave  
  40aca7:	aaa    
  40aca8:	test   DWORD PTR [ebp-0x306c6db0],ebx
  40acae:	xchg   ebp,eax
  40acaf:	mov    edx,0x9a45aad8
  40acb4:	(bad)  
  40acb5:	sti    
  40acb6:	push   esp
  40acb7:	retf   0x233c
  40acba:	add    al,0x1f
  40acbc:	adc    al,cl
  40acbe:	(bad)  
  40acbf:	retf   0x256e
  40acc2:	repnz mov ds:0x432bac5e,al
  40acc8:	add    ebx,DWORD PTR [ecx-0x2fc77f88]
  40acce:	mov    edx,0xf3c676fa
  40acd3:	cmc    
  40acd4:	repz imul cl
  40acd7:	adc    dl,dh
  40acd9:	lods   eax,DWORD PTR ds:[esi]
  40acda:	push   cs
  40acdb:	das    
  40acdc:	push   0xfb135193
  40ace1:	xchg   ebx,eax
  40ace2:	je     0x40acc8
  40ace4:	inc    esp
  40ace5:	xchg   esp,eax
  40ace6:	or     eax,0x6cf867c1
  40aceb:	pop    ss
  40acec:	pop    esi
  40aced:	div    BYTE PTR [eax-0x4c]
  40acf0:	ins    BYTE PTR es:[edi],dx
  40acf1:	scas   eax,DWORD PTR es:[edi]
  40acf2:	mov    WORD PTR [edi+0x4b],?
  40acf5:	mov    edi,0xecc03c08
  40acfa:	mov    edi,0x5c8f4d9c
  40acff:	add    DWORD PTR [edi+esi*4],ebx
  40ad02:	push   0x0
  40ad04:	cmp    ebp,DWORD PTR [ebp+0x426d0ab9]
  40ad0a:	mov    eax,0xe702a3eb
  40ad0f:	xchg   ebp,eax
  40ad10:	lahf   
  40ad11:	xor    esi,0x87041967
  40ad17:	pop    eax
  40ad18:	mov    al,0xef
  40ad1a:	nop
  40ad1b:	push   0xffffff88
  40ad1d:	in     al,dx
  40ad1e:	and    BYTE PTR [esp+eiz*2],al
  40ad21:	leave  
  40ad22:	pop    esi
  40ad23:	adc    DWORD PTR ds:0xdcd8fd22,esi
  40ad29:	jle    0x40acfb
  40ad2b:	mov    ecx,0x2454385f
  40ad30:	sbb    eax,DWORD PTR [ebx+0x74]
  40ad33:	push   ss
  40ad34:	pusha  
  40ad35:	push   0xe8a19efe
  40ad3a:	stos   DWORD PTR es:[edi],eax
  40ad3b:	psubusb mm4,QWORD PTR [ecx-0x4f6d5145]
  40ad42:	in     al,dx
  40ad43:	sub    eax,DWORD PTR [edi-0x61e679ce]
  40ad49:	and    eax,0xf06718f7
  40ad4e:	fidivr DWORD PTR [ecx-0x784c11da]
  40ad54:	mov    eax,ds:0x3238c14e
  40ad59:	sahf   
  40ad5a:	dec    ebp
  40ad5b:	pop    eax
  40ad5c:	jnp    0x40ad6b
  40ad5e:	sar    dl,1
  40ad60:	hlt    
  40ad61:	and    al,0x4d
  40ad63:	popf   
  40ad64:	push   edi
  40ad65:	daa    
  40ad66:	stc    
  40ad67:	rcr    BYTE PTR [ebp-0x40],1
  40ad6a:	imul   eax,DWORD PTR [edx-0x402881e5],0xb01021fc
  40ad74:	lods   al,BYTE PTR ds:[esi]
  40ad75:	hlt    
  40ad76:	(bad)  
  40ad77:	mov    ch,0x82
  40ad79:	call   0xc7590545
  40ad7e:	inc    ebx
  40ad7f:	int    0x44
  40ad81:	fcomp  DWORD PTR [eax+0x6d]
  40ad85:	lods   al,BYTE PTR ds:[esi]
  40ad86:	mov    al,0xb
  40ad88:	and    eax,0x8540eb2d
  40ad8d:	push   ss
  40ad8e:	xchg   edx,eax
  40ad8f:	(bad)  
  40ad90:	jnp    0x40adb2
  40ad92:	stos   DWORD PTR es:[edi],eax
  40ad93:	push   esi
  40ad94:	fwait
  40ad95:	das    
  40ad96:	cli    
  40ad97:	dec    esi
  40ad98:	jb     0x40ad57
  40ad9a:	pop    ds
  40ad9b:	out    dx,al
  40ad9c:	pushf  
  40ad9d:	mov    edi,0xd52c9ab1
  40ada2:	call   0x53c87d28
  40ada7:	xchg   esp,eax
  40ada8:	mov    edx,0xe2bd3543
  40adad:	loopne 0x40ade5
  40adaf:	jb     0x40adaa
  40adb1:	mov    edi,0x82570ad8
  40adb6:	out    0x4b,al
  40adb8:	addr16 mov ebp,0xceee5451
  40adbe:	imul   edx,DWORD PTR [ebp+0x8],0xc5e38ac5
  40adc5:	pop    ebp
  40adc6:	push   cs
  40adc7:	in     al,dx
  40adc8:	dec    edi
  40adc9:	push   ebx
  40adca:	sti    
  40adcb:	adc    al,0xba
  40adcd:	sahf   
  40adce:	in     al,dx
  40adcf:	das    
  40add0:	sub    ecx,edi
  40add2:	test   dh,bl
  40add4:	cwde   
  40add5:	sub    ebx,edi
  40add7:	fistp  WORD PTR [esi+0x46]
  40adda:	mov    esp,0xd5a741fb
  40addf:	outs   dx,BYTE PTR ds:[esi]
  40ade0:	dec    ebp
  40ade1:	xchg   edi,eax
  40ade2:	push   edi
  40ade3:	sub    BYTE PTR [ecx+0x6d],ch
  40ade6:	sbb    bh,BYTE PTR [ebp+0x7d1f3f58]
  40adec:	popa   
  40aded:	ins    DWORD PTR es:[edi],dx
  40adee:	imul   esp,DWORD PTR [ebx+0x2e3ae2e5],0xffffff90
  40adf5:	jle    0x40add2
  40adf7:	fdivp  st(4),st
  40adf9:	and    DWORD PTR [esi+0x34],esp
  40adfc:	pop    edx
  40adfd:	mov    ebx,0x5e17ad4b
  40ae02:	xor    al,0x63
  40ae04:	mov    cl,0xa
  40ae06:	aad    0x56
  40ae08:	inc    ebx
  40ae09:	ss mov esp,0x1c78c3b4
  40ae0f:	and    al,0xaf
  40ae11:	fisttp DWORD PTR [ebx+0x17f1b64f]
  40ae17:	jnp    0x40addd
  40ae19:	popa   
  40ae1a:	push   esp
  40ae1b:	xor    al,0x60
  40ae1d:	or     edx,DWORD PTR [esi-0x1f]
  40ae20:	loope  0x40ae14
  40ae22:	push   0xffffff88
  40ae24:	es jle 0x40ade4
  40ae27:	dec    ebp
  40ae28:	sahf   
  40ae29:	mov    DWORD PTR [eax],eax
  40ae2b:	out    0x3d,eax
  40ae2d:	(bad)
  40ae30:	mov    ebp,0xdb62715
  40ae35:	push   es
  40ae36:	jns    0x40add1
  40ae38:	or     eax,ecx
  40ae3a:	iret   
  40ae3b:	xor    eax,0x38c4afd4
  40ae40:	retf   
  40ae41:	or     edx,DWORD PTR [ecx+0x73]
  40ae44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae45:	or     al,0x66
  40ae47:	add    DWORD PTR [ebp-0x37],esi
  40ae4a:	push   ebx
  40ae4b:	xchg   BYTE PTR [ebp+0x44dafd87],bh
  40ae51:	or     dh,bh
  40ae53:	mov    ah,BYTE PTR [ecx*8-0x75df552a]
  40ae5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5b:	aad    0xb2
  40ae5d:	pop    ss
  40ae5e:	mov    edx,ebp
  40ae60:	inc    eax
  40ae61:	cs loopne 0x40ae5a
  40ae64:	cmp    DWORD PTR [eax-0x47],0xffffffd4
  40ae68:	or     al,0xbe
  40ae6a:	adc    al,0x47
  40ae6c:	mov    ch,0xd7
  40ae6e:	add    ebp,DWORD PTR [edx]
  40ae70:	stos   DWORD PTR es:[edi],eax
  40ae71:	inc    edx
  40ae72:	xor    edi,esp
  40ae74:	lods   eax,DWORD PTR ds:[esi]
  40ae75:	lods   eax,DWORD PTR ds:[esi]
  40ae76:	hlt    
  40ae77:	pop    es
  40ae78:	dec    edi
  40ae79:	rol    DWORD PTR [eax-0x70],0xd6
  40ae7d:	lods   al,BYTE PTR ds:[esi]
  40ae7e:	test   BYTE PTR [ecx+0x7b895228],ch
  40ae84:	cmp    al,0xe5
  40ae86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae87:	sub    BYTE PTR [edi+0x31e5ee03],ah
  40ae8d:	mov    esi,DWORD PTR [eax+0x3d09ef70]
  40ae93:	ret    
  40ae94:	mov    cl,0x65
  40ae96:	inc    edi
  40ae97:	ror    DWORD PTR [edx],0xd3
  40ae9a:	loope  0x40ae45
  40ae9c:	jp     0x40ae57
  40ae9e:	repnz popw ss
  40aea1:	rcr    edi,0x38
  40aea4:	sbb    eax,DWORD PTR [eax-0x12f09542]
  40aeaa:	(bad)  
  40aeab:	pop    ss
  40aeac:	pop    eax
  40aead:	loopne 0x40aee4
  40aeaf:	cmp    DWORD PTR [edi],eax
  40aeb1:	cmp    ch,bh
  40aeb3:	push   eax
  40aeb4:	clc    
  40aeb5:	mov    esi,0xe4f43f9d
  40aeba:	pushf  
  40aebb:	cwde   
  40aebc:	rcr    dh,cl
  40aebe:	(bad)
  40aec1:	pop    ss
  40aec2:	pop    ds
  40aec3:	jge    0x40ae70
  40aec5:	xchg   ecx,eax
  40aec6:	aas    
  40aec7:	xchg   BYTE PTR [ebx+eax*2+0x9],dl
  40aecb:	and    DWORD PTR [ebp+0x1f31c6c],ebx
  40aed1:	fwait
  40aed2:	cs mov ah,0x20
  40aed5:	test   BYTE PTR [edx+0x7d190fc1],bh
  40aedb:	arpl   di,bx
  40aedd:	cmp    esp,DWORD PTR [esi+0x240f3b3f]
  40aee3:	sub    ch,BYTE PTR [ebx]
  40aee5:	dec    ebp
  40aee6:	pushf  
  40aee7:	sub    esp,edi
  40aee9:	cmc    
  40aeea:	js     0x40aef4
  40aeec:	and    BYTE PTR [edx+0x6c466710],dh
  40aef2:	lods   eax,DWORD PTR ds:[esi]
  40aef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aef4:	loope  0x40af14
  40aef6:	ins    DWORD PTR es:[edi],dx
  40aef7:	addr16 ss iret 
  40aefa:	jae    0x40af1e
  40aefc:	adc    al,0x78
  40aefe:	push   esi
  40aeff:	(bad)  
  40af00:	jle    0x40af02
  40af02:	dec    ecx
  40af03:	int3   
  40af04:	rcl    BYTE PTR [ecx],cl
  40af06:	xchg   dl,ah
  40af08:	aad    0x85
  40af0a:	pop    es
  40af0b:	jo     0x40aec6
  40af0d:	int    0x12
  40af0f:	fs cmp bh,dl
  40af12:	pusha  
  40af13:	dec    eax
  40af14:	fist   DWORD PTR [ecx+0x5510d5e]
  40af1a:	les    ebp,FWORD PTR [ebp-0x4d]
  40af1d:	ficomp WORD PTR [eax]
  40af1f:	fld    DWORD PTR [eax]
  40af21:	lods   eax,DWORD PTR ds:[esi]
  40af22:	into   
  40af23:	in     eax,dx
  40af24:	jge    0x40af5a
  40af26:	fisub  DWORD PTR [eax+0x60de99b7]
  40af2c:	adc    esi,DWORD PTR [edx+0x6e]
  40af2f:	pop    ecx
  40af30:	fs stc 
  40af32:	xchg   esi,eax
  40af33:	fwait
  40af34:	call   0xce81:0xe7ddda82
  40af3b:	aas    
  40af3c:	xor    eax,0xf1a7e850
  40af41:	and    BYTE PTR [edx-0x33],cl
  40af44:	adc    BYTE PTR [ecx],dh
  40af46:	leave  
  40af47:	cmp    DWORD PTR [edx-0x3b],esi
  40af4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af4b:	push   esi
  40af4c:	jmp    0x305d:0x6b3aaecc
  40af53:	add    eax,0xcb7b5508
  40af58:	popa   
  40af59:	sub    al,BYTE PTR [edi-0x15]
  40af5c:	jg     0x40af02
  40af5e:	mov    ds,WORD PTR [ebx+0xf]
  40af61:	mov    eax,0x42ae5e8e
  40af66:	inc    ebp
  40af67:	adc    al,0x35
  40af69:	daa    
  40af6a:	outs   dx,BYTE PTR ds:[esi]
  40af6b:	ins    DWORD PTR es:[edi],dx
  40af6c:	jg     0x40aefa
  40af6e:	add    al,BYTE PTR cs:[ebx-0x2fbd5ecb]
  40af75:	ins    BYTE PTR es:[edi],dx
  40af76:	bound  ecx,QWORD PTR [esi-0x4ace93e8]
  40af7c:	stos   DWORD PTR es:[edi],eax
  40af7d:	cmp    ecx,0x2f
  40af80:	jmp    0x40af1c
  40af82:	ret    0xb4e4
  40af85:	push   0xf4d03e17
  40af8a:	cmp    WORD PTR [edx],bp
  40af8d:	rcr    BYTE PTR [eax-0x56],1
  40af90:	into   
  40af91:	cmp    eax,0x361a85f3
  40af96:	xor    ebp,ecx
  40af98:	scas   al,BYTE PTR es:[edi]
  40af99:	or     ebx,DWORD PTR [esi]
  40af9b:	jo     0x40afb4
  40af9d:	sub    eax,0x8236489
  40afa2:	dec    esp
  40afa3:	mov    dh,0xcc
  40afa5:	cmp    BYTE PTR [ecx],dl
  40afa7:	xchg   ebx,eax
  40afa8:	test   al,0x29
  40afaa:	mov    dl,0x5c
  40afac:	faddp  st(1),st
  40afae:	cmp    al,0x10
  40afb0:	or     dh,BYTE PTR [ebp-0x716b029d]
  40afb6:	xor    ebx,DWORD PTR [ebp-0x74]
  40afb9:	cmp    eax,0x619f9a1c
  40afbe:	and    cl,BYTE PTR [esi-0x7b243696]
  40afc4:	call   0xb9c7:0xa070acce
  40afcb:	les    ecx,FWORD PTR [ebp-0xa]
  40afce:	or     esi,DWORD PTR [ebx]
  40afd0:	mov    dh,0xdf
  40afd2:	inc    DWORD PTR [ebx]
  40afd4:	or     dh,BYTE PTR [ebp-0x24]
  40afd7:	into   
  40afd8:	cmp    DWORD PTR [ecx-0x52],edi
  40afdb:	out    0x71,al
  40afdd:	jge    0x40afad
  40afdf:	pop    edx
  40afe0:	inc    ebx
  40afe1:	(bad)  
  40afe2:	jmp    0xe04a:0x344ab099
  40afe9:	gs inc ebp
  40afeb:	xlat   BYTE PTR ds:[ebx]
  40afec:	mov    eax,ds:0xcd9078bc
  40aff1:	sub    DWORD PTR [edx+ebp*1],0x3f5fd4ff
  40aff8:	add    DWORD PTR [eax-0x24e24eb9],0x4f
  40afff:	inc    ebp
  40b000:	jecxz  0x40b030
  40b002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b003:	sahf   
  40b004:	int3   
  40b005:	mov    edx,0xa7f14a
  40b00a:	test   al,0xc2
  40b00c:	in     al,dx
  40b00d:	clc    
  40b00e:	mov    DWORD PTR [edi+0x1],ebp
  40b011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b012:	out    dx,al
  40b013:	jno    0x40afae
  40b015:	mov    edi,0x128f9287
  40b01a:	push   cs
  40b01b:	test   al,0x99
  40b01d:	fchs   
  40b01f:	adc    dh,BYTE PTR [esi+0x5b]
  40b022:	test   BYTE PTR [eax-0x478902d9],0x5d
  40b029:	mov    ebx,0x119082fc
  40b02e:	(bad)  [eax+ebx*1-0x1cca7258]
  40b035:	fwait
  40b036:	pop    ss
  40b037:	(bad)  
  40b038:	pop    ebx
  40b039:	xchg   esp,eax
  40b03a:	fst    DWORD PTR [edi-0x588a21aa]
  40b040:	pop    ebx
  40b041:	das    
  40b042:	fxam   
  40b044:	(bad)  [esi+0x6e6ea52d]
  40b04a:	sbb    ecx,DWORD PTR [ebp+0x22]
  40b04d:	jl     0x40b044
  40b04f:	xor    esi,DWORD PTR gs:[ebp-0x9]
  40b053:	(bad)  
  40b054:	sbb    BYTE PTR [ecx+eax*2+0x56fe6c69],cl
  40b05b:	xchg   ecx,eax
  40b05c:	dec    ecx
  40b05d:	arpl   si,di
  40b05f:	and    eax,0x584dfd74
  40b064:	mov    WORD PTR [edx-0x7f7cfbbd],ds
  40b06a:	ja     0x40b069
  40b06c:	push   ecx
  40b06d:	mov    al,BYTE PTR [eax+0x6426d82b]
  40b073:	sub    ebx,eax
  40b075:	fdivr  st,st(5)
  40b077:	mov    eax,ds:0xc822f8ab
  40b07c:	adc    bl,BYTE PTR [edx]
  40b07e:	mov    ds:0x6a5550ff,eax
  40b083:	imul   ecx,DWORD PTR [ebx+0x4b],0x51fd80d5
  40b08a:	dec    esi
  40b08b:	(bad)  
  40b08c:	adc    BYTE PTR [esi+0x40],al
  40b08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b090:	sub    BYTE PTR [ecx],ch
  40b092:	push   ss
  40b093:	pusha  
  40b094:	add    eax,DWORD PTR [ebx]
  40b096:	pop    es
  40b097:	jae    0x40b055
  40b099:	ror    ch,cl
  40b09b:	sbb    eax,0xb2bc527c
  40b0a0:	mul    BYTE PTR [edi-0x4fed1c62]
  40b0a6:	shr    DWORD PTR [edi+0x14],1
  40b0a9:	cmp    cl,BYTE PTR [eax+0x54de5621]
  40b0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b0:	and    ch,BYTE PTR [eax-0x42]
  40b0b3:	rol    ebx,0xb3
  40b0b6:	xchg   edi,eax
  40b0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b8:	sub    al,al
  40b0ba:	sbb    bl,BYTE PTR [eax]
  40b0bc:	adc    al,0x49
  40b0be:	scas   al,BYTE PTR es:[edi]
  40b0bf:	mov    al,ds:0x4f54d06d
  40b0c4:	adc    eax,0xe09bc9c8
  40b0c9:	ja     0x40b0fb
  40b0cb:	aam    0xbe
  40b0cd:	mov    bh,0xd9
  40b0cf:	pop    edx
  40b0d0:	and    al,0x4a
  40b0d2:	pop    ds
  40b0d3:	jmp    0x47414b3e
  40b0d8:	push   cs
  40b0d9:	clc    
  40b0da:	sbb    BYTE PTR [edx],bh
  40b0dc:	out    dx,eax
  40b0dd:	repz std 
  40b0df:	vmwrite ecx,DWORD PTR [edi]
  40b0e2:	retf   0x1370
  40b0e5:	lahf   
  40b0e6:	xor    dh,BYTE PTR [edi-0x186f0efa]
  40b0ec:	(bad)  
  40b0ed:	fwait
  40b0ee:	aaa    
  40b0ef:	cwde   
  40b0f0:	adc    DWORD PTR [eax+0x47],0xf357bae3
  40b0f7:	xchg   esp,eax
  40b0f8:	sbb    BYTE PTR [ebp+0x4581a5f],ch
  40b0fe:	(bad)  
  40b0ff:	jge    0x40b0ce
  40b101:	pushf  
  40b102:	repz loop 0x40b0ac
  40b105:	test   DWORD PTR ds:0x112cfb24,ecx
  40b10b:	mov    dl,0x2f
  40b10d:	cmp    al,0xd1
  40b10f:	repnz es cld 
  40b112:	pop    esi
  40b113:	mov    ds:0xbfeade28,eax
  40b118:	xchg   ebp,eax
  40b119:	out    dx,al
  40b11a:	inc    esp
  40b11b:	rcr    bh,0xa5
  40b11e:	mov    edx,0xa1156003
  40b123:	cdq    
  40b124:	dec    edx
  40b125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b126:	adc    al,0xef
  40b128:	ja     0x40b108
  40b12a:	bnd je 0x40b0d2
  40b12d:	jno    0x40b0ef
  40b12f:	push   edi
  40b130:	aas    
  40b131:	stc    
  40b132:	(bad)  
  40b134:	idiv   BYTE PTR [ebx]
  40b136:	xchg   edx,eax
  40b137:	xchg   edi,eax
  40b138:	and    al,0x57
  40b13a:	leave  
  40b13b:	pop    ebx
  40b13c:	pop    ds
  40b13d:	push   es
  40b13e:	int3   
  40b13f:	xor    eax,0x8f25d41f
  40b144:	jg     0x40b0e8
  40b146:	inc    edx
  40b147:	and    al,0x9c
  40b149:	mov    ds:0x184419e2,al
  40b14e:	xchg   DWORD PTR [edi+edx*2-0x34],ebp
  40b152:	adc    al,0xd7
  40b154:	jl     0x40b196
  40b156:	inc    esp
  40b157:	cmp    BYTE PTR [eax-0x40],0x3b
  40b15b:	xor    DWORD PTR [edi+ecx*1],esi
  40b15e:	mov    ah,BYTE PTR [edi+0xc]
  40b161:	or     BYTE PTR [eax],al
  40b163:	imul   esp,esp,0xffffff87
  40b166:	les    esp,FWORD PTR [edi-0x3a]
  40b169:	pmaxsw mm5,QWORD PTR ss:[edi]
  40b16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16e:	and    eax,0xeae46ee4
  40b173:	mov    bl,0x54
  40b175:	pop    edi
  40b176:	mov    DWORD PTR [eax+0x77],ecx
  40b179:	popa   
  40b17a:	iret   
  40b17b:	and    edi,DWORD PTR [ebx]
  40b17d:	jg     0x40b15d
  40b17f:	mov    ds:0x80692e08,al
  40b184:	not    BYTE PTR [edx+0x19]
  40b187:	push   ebx
  40b188:	or     BYTE PTR [edx-0x68],ch
  40b18b:	jp     0x40b208
  40b18d:	xor    BYTE PTR [edx+0x49],ah
  40b190:	sub    BYTE PTR [ebx+0x52],bh
  40b193:	mov    al,ds:0x7ad0cb78
  40b198:	mov    dl,0xc1
  40b19a:	add    BYTE PTR [ecx],bh
  40b19c:	xor    edi,DWORD PTR [eax+0x23b64418]
  40b1a2:	and    eax,ecx
  40b1a4:	jns    0x40b18d
  40b1a6:	push   cs
  40b1a7:	jno    0x40b14a
  40b1a9:	sti    
  40b1aa:	cwde   
  40b1ab:	mov    edx,0x4bb339d0
  40b1b0:	mov    dl,0xa4
  40b1b2:	stos   DWORD PTR es:[edi],eax
  40b1b3:	fisub  WORD PTR [edx+0x255310d9]
  40b1b9:	jecxz  0x40b233
  40b1bb:	(bad)  
  40b1bd:	pop    edx
  40b1be:	test   al,0x21
  40b1c0:	or     bh,dh
  40b1c2:	pop    es
  40b1c3:	(bad)  
  40b1c4:	xor    bh,dh
  40b1c6:	adc    ebx,eax
  40b1c8:	leave  
  40b1c9:	inc    eax
  40b1ca:	int    0x2
  40b1cc:	sar    DWORD PTR [eax+0x8],1
  40b1cf:	repz mov ?,WORD PTR [edi]
  40b1d2:	inc    edi
  40b1d3:	retf   
  40b1d4:	shl    DWORD PTR [eax-0x28db933b],1
  40b1da:	jge    0x40b23f
  40b1dc:	in     eax,0x31
  40b1de:	fadd   QWORD PTR [ebx]
  40b1e0:	imul   ecx,DWORD PTR [edx],0xffffffee
  40b1e3:	jmp    0xa9f7b626
  40b1e8:	mov    esi,0xd2fecfd7
  40b1ed:	out    dx,eax
  40b1ee:	dec    ebp
  40b1ef:	jle    0x40b201
  40b1f1:	ret    
  40b1f2:	xor    cl,BYTE PTR [edx+0x5b]
  40b1f5:	ds jmp 0xb07ac36a
  40b1fb:	jp     0x40b279
  40b1fd:	pop    ds
  40b1fe:	cmp    eax,0x5df44108
  40b203:	lds    ebx,FWORD PTR [edx+0x4b]
  40b206:	lods   al,BYTE PTR ds:[esi]
  40b207:	not    edi
  40b209:	popa   
  40b20a:	neg    DWORD PTR [edi+0x69]
  40b20d:	fstp   st(0)
  40b20f:	out    0x77,eax
  40b211:	xor    al,0x87
  40b213:	xchg   edx,eax
  40b214:	idiv   BYTE PTR [esi+0x3cf276bd]
  40b21a:	outs   dx,BYTE PTR ds:[esi]
  40b21b:	jl     0x40b217
  40b21d:	neg    BYTE PTR [eax-0x63922e66]
  40b223:	test   BYTE PTR [ebx-0x49],0x3a
  40b227:	pushf  
  40b228:	dec    esi
  40b229:	cmc    
  40b22a:	mov    esp,0xda1910a2
  40b22f:	sbb    al,0xf1
  40b231:	mov    cl,0x84
  40b233:	rol    BYTE PTR [eax+0x7ce6c81c],cl
  40b239:	sbb    eax,0x8c382adf
  40b23e:	mov    edi,0x2b509be2
  40b243:	hlt    
  40b244:	pop    edi
  40b245:	jge    0x40b1d1
  40b247:	in     al,dx
  40b248:	cmp    bl,BYTE PTR [eax+0x20ca91ac]
  40b24e:	pop    ebp
  40b24f:	adc    al,0xac
  40b251:	jle    0x40b293
  40b253:	mov    al,BYTE PTR [edx-0x4730f18e]
  40b259:	sbb    cl,ah
  40b25b:	cdq    
  40b25c:	pop    ebp
  40b25d:	ret    0x456a
  40b260:	cld    
  40b261:	jle    0x40b2d1
  40b263:	push   esp
  40b264:	xchg   edx,eax
  40b265:	outs   dx,DWORD PTR ds:[esi]
  40b266:	add    DWORD PTR [edx+0x254baa11],eax
  40b26c:	out    0xfa,eax
  40b26e:	push   ss
  40b26f:	add    DWORD PTR [edi-0x79],ecx
  40b272:	pop    edi
  40b273:	nop
  40b274:	pop    edx
  40b275:	call   0x377c13af
  40b27a:	cmp    edi,0xfffffffe
  40b27d:	iret   
  40b27e:	test   BYTE PTR [edx-0x6f],0xba
  40b282:	pop    ss
  40b283:	repz test DWORD PTR [esi+edx*2+0x5b],0xf5c4ead7
  40b28c:	mov    ah,0x4b
  40b28e:	(bad)  
  40b28f:	(bad)  
  40b291:	(bad)  
  40b292:	out    0x72,eax
  40b294:	mov    edi,0x9770f03d
  40b299:	cmp    dl,BYTE PTR [ebx]
  40b29b:	xlat   BYTE PTR ds:[ebx]
  40b29c:	add    esp,DWORD PTR [esi-0x1aa973cd]
  40b2a2:	jl     0x40b275
  40b2a4:	mov    cl,0x18
  40b2a6:	dec    eax
  40b2a7:	fs push edi
  40b2a9:	stos   BYTE PTR es:[edi],al
  40b2aa:	out    0xdc,al
  40b2ac:	cmp    BYTE PTR ds:0x7679b5c2,dh
  40b2b2:	jecxz  0x40b324
  40b2b4:	adc    BYTE PTR [edx-0x42],0xa
  40b2b8:	adc    esp,DWORD PTR [esi+0x6c]
  40b2bb:	push   ebx
  40b2bc:	inc    edx
  40b2bd:	push   eax
  40b2be:	cmp    eax,0xf19dd217
  40b2c3:	and    al,BYTE PTR [eax-0x5c]
  40b2c6:	xchg   ch,ah
  40b2c8:	pop    eax
  40b2c9:	sbb    DWORD PTR [edx],ebp
  40b2cb:	pop    edx
  40b2cc:	add    al,0xb3
  40b2ce:	add    bl,BYTE PTR fs:[ebx]
  40b2d1:	ins    DWORD PTR es:[edi],dx
  40b2d2:	les    edi,FWORD PTR [ebx-0x48176783]
  40b2d8:	call   0xe01495ca
  40b2dd:	es pop ss
  40b2df:	cli    
  40b2e0:	mov    al,0x3e
  40b2e2:	adc    cl,BYTE PTR [edi-0x2fafc018]
  40b2e8:	inc    edx
  40b2e9:	sbb    eax,edx
  40b2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ec:	push   ss
  40b2ed:	shl    DWORD PTR [ebx-0x41d8c4fe],cl
  40b2f3:	mov    WORD PTR [edi+0x35],ds
  40b2f6:	in     al,0xc5
  40b2f8:	sub    cl,ah
  40b2fa:	dec    edx
  40b2fb:	icebp  
  40b2fc:	adc    al,0x4f
  40b2fe:	sub    al,0x15
  40b300:	pop    edx
  40b301:	add    BYTE PTR [edi-0x16],ch
  40b304:	lods   al,BYTE PTR ds:[esi]
  40b305:	push   0x566c0a06
  40b30a:	and    dh,al
  40b30c:	(bad)  
  40b30d:	mov    edi,0xafc2a8ee
  40b312:	sbb    DWORD PTR [ebx],ecx
  40b314:	lods   al,BYTE PTR ds:[esi]
  40b315:	stos   DWORD PTR es:[edi],eax
  40b316:	xchg   esi,eax
  40b317:	pusha  
  40b318:	cdq    
  40b319:	pop    edi
  40b31a:	pop    eax
  40b31b:	jns    0x40b393
  40b31d:	pop    esp
  40b31e:	sar    DWORD PTR [ebx+0x6ff8156a],0xb4
  40b325:	dec    esi
  40b326:	dec    esp
  40b327:	(bad)  
  40b328:	leave  
  40b329:	scas   eax,DWORD PTR es:[edi]
  40b32a:	mov    WORD PTR [edx+0x597f8669],?
  40b330:	gs aam 0xde
  40b333:	mul    BYTE PTR [ecx]
  40b335:	cwde   
  40b336:	or     dh,BYTE PTR [edx-0x5ef4d466]
  40b33c:	mov    ch,0x80
  40b33e:	mov    esi,0x3182c5d1
  40b343:	pop    ecx
  40b344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b345:	push   edi
  40b346:	or     DWORD PTR [ecx+0x0],eax
  40b349:	fs retf 
  40b34b:	mov    al,0xf3
  40b34d:	mov    esp,0x1c976367
  40b352:	fist   DWORD PTR [edi-0x75]
  40b355:	shl    BYTE PTR ds:0xad4a4048,cl
  40b35b:	loope  0x40b3b1
  40b35d:	lds    eax,FWORD PTR [ecx+ebx*1+0x49c7fe8d]
  40b364:	popf   
  40b365:	add    DWORD PTR [esi+0x54b172f2],esp
  40b36b:	jecxz  0x40b382
  40b36d:	push   ss
  40b36e:	xchg   BYTE PTR [ecx+0x695cd7e8],bh
  40b374:	or     eax,0x14090e31
  40b379:	mov    ds:0xda98aa71,eax
  40b37e:	repnz push esi
  40b380:	mov    esi,0x5fc4acfb
  40b385:	add    al,0x37
  40b387:	dec    ebp
  40b388:	push   ebp
  40b389:	dec    ecx
  40b38a:	clc    
  40b38b:	pop    edx
  40b38c:	cmp    bl,dh
  40b38e:	mov    dl,0x8d
  40b390:	pop    esi
  40b391:	loopne 0x40b394
  40b393:	add    al,0xf7
  40b395:	pop    ss
  40b396:	xor    ebx,0xbba5c7ed
  40b39c:	cld    
  40b39d:	or     BYTE PTR [esi+0x6b],cl
  40b3a0:	xlat   BYTE PTR ds:[ebx]
  40b3a1:	mov    eax,0xd5e7ee1b
  40b3a6:	clc    
  40b3a7:	int3   
  40b3a8:	jecxz  0x40b3c4
  40b3aa:	rol    DWORD PTR [edx],cl
  40b3ac:	lds    esp,FWORD PTR [ecx-0x2b]
  40b3af:	scas   al,BYTE PTR es:[edi]
  40b3b0:	or     DWORD PTR [edx],edx
  40b3b2:	out    0x3c,eax
  40b3b4:	in     eax,dx
  40b3b5:	retf   0xfc13
  40b3b8:	pushf  
  40b3b9:	add    eax,DWORD PTR [edi+eax*1+0x1961e329]
  40b3c0:	lds    esi,FWORD PTR [ecx]
  40b3c2:	jnp    0x40b393
  40b3c4:	fmul   st(3),st
  40b3c6:	int    0xfd
  40b3c8:	mov    dh,dh
  40b3ca:	out    0x96,eax
  40b3cc:	icebp  
  40b3cd:	mov    DWORD PTR [ecx+0x58],0x8b929b23
  40b3d4:	adc    ch,bl
  40b3d6:	mov    ecx,0x3546afba
  40b3db:	mov    ch,0xe6
  40b3dd:	mov    ds:0x5edec99,eax
  40b3e2:	lock jne 0x40b40e
  40b3e5:	in     al,0x65
  40b3e7:	out    dx,al
  40b3e8:	mov    WORD PTR [edi+0x55],?
  40b3eb:	loope  0x40b384
  40b3ed:	sbb    ecx,ecx
  40b3ef:	sbb    DWORD PTR [eax+0x35],ecx
  40b3f2:	dec    esi
  40b3f3:	cmp    ecx,DWORD PTR [esi+0x73]
  40b3f6:	jg     0x40b408
  40b3f8:	(bad)  
  40b3fa:	test   DWORD PTR [esi-0x13],esp
  40b3fd:	ins    DWORD PTR es:[edi],dx
  40b3fe:	jl     0x40b3d7
  40b400:	jno    0x40b384
  40b402:	daa    
  40b403:	mov    eax,ds:0x88de7a6a
  40b408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b409:	es in  al,dx
  40b40b:	test   al,0x44
  40b40d:	mov    ebx,0xce463e90
  40b412:	ins    DWORD PTR es:[edi],dx
  40b413:	push   esp
  40b414:	add    esi,DWORD PTR [eax]
  40b416:	xchg   ebp,eax
  40b417:	test   DWORD PTR [eax+eax*8+0x4fc30c57],ebp
  40b41e:	or     al,BYTE PTR [eax+edx*8]
  40b421:	into   
  40b422:	(bad)  
  40b423:	xchg   edx,eax
  40b424:	ret    
  40b425:	pop    ebp
  40b426:	dec    eax
  40b427:	popa   
  40b428:	xlat   BYTE PTR ds:[ebx]
  40b429:	cdq    
  40b42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b42b:	inc    edx
  40b42c:	and    al,0x2b
  40b42e:	gs inc ebx
  40b430:	jne    0x40b436
  40b432:	mov    BYTE PTR [ecx+0x7cf6e1bb],cl
  40b438:	xchg   esi,eax
  40b439:	cs in  eax,0xf
  40b43c:	inc    eax
  40b43d:	or     DWORD PTR [eax+0x374b8946],eax
  40b443:	or     BYTE PTR [edi],bh
  40b445:	(bad)  
  40b446:	xor    edx,DWORD PTR [eax+0x5]
  40b449:	ds jb  0x40b424
  40b44c:	pop    ds
  40b44d:	call   0xa10cea3c
  40b452:	jecxz  0x40b4a1
  40b454:	push   ds
  40b455:	fcmovnb st,st(3)
  40b457:	out    dx,al
  40b458:	pop    esi
  40b459:	movaps XMMWORD PTR [ecx-0x4d],xmm7
  40b45d:	or     edi,DWORD PTR [ebp+0x3a]
  40b460:	nop
  40b461:	fimul  WORD PTR [ebp+0x51]
  40b464:	stos   DWORD PTR es:[edi],eax
  40b465:	ja     0x40b4be
  40b467:	outs   dx,DWORD PTR ds:[esi]
  40b468:	xor    DWORD PTR [ebp+0x2d],edi
  40b46b:	sbb    ch,BYTE PTR [edi-0x1c86ee70]
  40b471:	sub    ah,bh
  40b473:	(bad)  
  40b474:	jno    0x40b40c
  40b476:	call   0x6689:0xaafc8f0e
  40b47d:	lds    esp,FWORD PTR [eax-0x41bd1cb1]
  40b483:	mov    dh,0xf
  40b485:	call   0x80e8:0x58e4c05e
  40b48c:	mov    dl,BYTE PTR [ebx+0x31dd0a81]
  40b492:	and    eax,0xbb7c18da
  40b497:	cld    
  40b498:	jno    0x40b421
  40b49a:	ret    
  40b49b:	je     0x40b49a
  40b49d:	sti    
  40b49e:	pop    esp
  40b49f:	add    al,0x6a
  40b4a2:	loopne 0x40b4ec
  40b4a4:	mov    dh,0xf
  40b4a6:	jnp    0x40b4ae
  40b4a8:	sbb    ecx,ebp
  40b4aa:	cmp    BYTE PTR [eax+0x69],dh
  40b4ad:	push   ds
  40b4ae:	enter  0x95b2,0xad
  40b4b2:	arpl   WORD PTR [eax+0x2d],dx
  40b4b5:	loopne 0x40b4f5
  40b4b7:	mov    bl,0xc0
  40b4b9:	sbb    cl,al
  40b4bb:	push   ebx
  40b4bc:	push   0x7a
  40b4be:	pop    eax
  40b4bf:	adc    eax,0xf314f39
  40b4c4:	out    dx,eax
  40b4c5:	sbb    BYTE PTR [edx-0x6d5552cb],ah
  40b4cb:	(bad)  
  40b4cc:	sbb    BYTE PTR [esi],bh
  40b4ce:	rcr    DWORD PTR [ecx+esi*4-0x35],0x85
  40b4d3:	inc    eax
  40b4d4:	cli    
  40b4d5:	cmc    
  40b4d6:	sbb    DWORD PTR [ecx],0x953c0b73
  40b4dc:	mov    BYTE PTR [ebp+0x70d85ee7],ch
  40b4e2:	mov    edi,0xd297de02
  40b4e7:	sub    al,0xf1
  40b4e9:	stc    
  40b4ea:	sbb    DWORD PTR [edx-0x3],eax
  40b4ed:	pushf  
  40b4ee:	pop    esi
  40b4ef:	shl    DWORD PTR [edx+0x37ef4e30],1
  40b4f5:	fistp  WORD PTR [esi-0x365b5539]
  40b4fb:	in     eax,dx
  40b4fc:	popf   
  40b4fd:	and    dl,BYTE PTR [edi-0x7b]
  40b500:	imul   ecx,DWORD PTR [ebx],0x30682a8d
  40b506:	sub    BYTE PTR [ebx],bl
  40b508:	scas   eax,DWORD PTR es:[edi]
  40b509:	jmp    0x40b581
  40b50b:	jb     0x40b4c2
  40b50d:	jecxz  0x40b561
  40b50f:	inc    eax
  40b510:	leave  
  40b511:	arpl   bx,cx
  40b513:	shl    BYTE PTR [edi+0x0],0x88
  40b517:	outs   dx,BYTE PTR fs:[esi]
  40b519:	pop    ds
  40b51a:	out    dx,al
  40b51b:	add    BYTE PTR [esi],bl
  40b51d:	rcr    ch,cl
  40b51f:	push   edi
  40b520:	jecxz  0x40b583
  40b522:	mov    WORD PTR [edx],ds
  40b524:	rcl    DWORD PTR [edi-0x22],1
  40b527:	adc    eax,0xb64043e6
  40b52c:	js     0x40b591
  40b52e:	das    
  40b52f:	mov    edx,0x3ed15c37
  40b534:	fxch   st(2)
  40b536:	cwde   
  40b537:	push   cs
  40b538:	adc    eax,0xee699a24
  40b53d:	push   edi
  40b53e:	mov    bh,ch
  40b540:	jecxz  0x40b5b9
  40b542:	jl     0x40b567
  40b544:	mov    cl,0xf4
  40b546:	mov    dh,BYTE PTR [esi+0x6cd97abb]
  40b54c:	(bad)  
  40b54d:	fucomip st,st(3)
  40b54f:	jle    0x40b541
  40b551:	cmc    
  40b552:	pop    ss
  40b553:	aaa    
  40b554:	std    
  40b555:	cmp    bh,bl
  40b557:	xor    edx,DWORD PTR [ecx]
  40b559:	cld    
  40b55a:	xchg   DWORD PTR [edx],ebp
  40b55c:	push   esi
  40b55d:	add    ch,ch
  40b55f:	sub    bl,bl
  40b561:	lods   eax,DWORD PTR ds:[esi]
  40b562:	sbb    eax,0xfffd0f8e
  40b567:	jb     0x40b572
  40b569:	jecxz  0x40b584
  40b56b:	stos   BYTE PTR es:[edi],al
  40b56c:	sbb    al,0x52
  40b56e:	cs into 
  40b570:	cmp    bh,cl
  40b572:	sub    bl,BYTE PTR [esi]
  40b574:	ror    BYTE PTR [ebx+0x34],1
  40b577:	and    DWORD PTR [ebp+eax*1+0x44],0xd2d8b32e
  40b57f:	ret    
  40b580:	outs   dx,BYTE PTR ds:[esi]
  40b581:	push   edi
  40b582:	xchg   esp,eax
  40b583:	ins    BYTE PTR es:[edi],dx
  40b584:	mov    DWORD PTR [ebx+0x77],ebx
  40b587:	push   esi
  40b588:	jg     0x40b58a
  40b58a:	cli    
  40b58b:	lock mov eax,ds:0x2377c4f3
  40b591:	test   al,0xb2
  40b593:	mov    WORD PTR [eax],gs
  40b595:	xchg   esp,eax
  40b596:	je     0x40b531
  40b598:	sbb    ecx,DWORD PTR [edx+0x5be22226]
  40b59e:	sub    BYTE PTR [eax],cl
  40b5a0:	cmp    eax,0x9218e996
  40b5a5:	test   al,0x76
  40b5a7:	push   ss
  40b5a8:	sti    
  40b5a9:	inc    eax
  40b5aa:	adc    eax,0x1b7cb745
  40b5af:	push   ebx
  40b5b0:	and    BYTE PTR [ebp-0x4f42a757],dh
  40b5b6:	nop
  40b5b7:	and    eax,0x71ee399f
  40b5bc:	arpl   bp,bx
  40b5be:	mov    bl,0x99
  40b5c1:	je     0x40b58b
  40b5c3:	dec    edi
  40b5c4:	and    BYTE PTR [esi+0x2cb92af0],ch
  40b5ca:	int    0xa1
  40b5cc:	int3   
  40b5cd:	jl     0x40b59d
  40b5cf:	sub    al,0xa1
  40b5d1:	push   ds
  40b5d2:	mov    edx,0xbcec3a3a
  40b5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d8:	dec    ebx
  40b5d9:	mov    bl,0xe5
  40b5db:	pop    edi
  40b5dc:	and    BYTE PTR [esi-0x42],bl
  40b5df:	nop
  40b5e0:	das    
  40b5e1:	sub    esi,edi
  40b5e3:	and    bl,BYTE PTR ds:0xbfb23382
  40b5e9:	push   ebp
  40b5ea:	xchg   esi,eax
  40b5eb:	cmp    eax,0x44a817d6
  40b5f0:	push   0x1a
  40b5f2:	push   esi
  40b5f3:	iret   
  40b5f4:	sar    BYTE PTR [edx+ecx*4],cl
  40b5f7:	mov    ch,0x9
  40b5f9:	adc    ebp,DWORD PTR [eax-0x4d]
  40b5fc:	into   
  40b5fd:	cmp    ah,BYTE PTR [ecx]
  40b5ff:	sbb    edx,ecx
  40b601:	int    0xd1
  40b603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b604:	fsubr  QWORD PTR [eax+eax*1-0x5f438e4a]
  40b60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b60c:	cs fs push ss
  40b60f:	aas    
  40b610:	pop    esi
  40b611:	(bad)  
  40b612:	movhps xmm7,QWORD PTR [eax-0x1272e55]
  40b619:	cld    
  40b61a:	push   0xc69d2ff5
  40b61f:	mov    ds:0x8ed212f4,al
  40b624:	mov    bh,0x8b
  40b626:	jmp    ebp
  40b628:	cmp    DWORD PTR [eax+ebp*8-0x171cd4a5],ebp
  40b62f:	dec    edi
  40b630:	loope  0x40b69c
  40b632:	mov    WORD PTR [ebx+0xf8de6c6],ds
  40b638:	iret   
  40b639:	adc    DWORD PTR [ebp-0x2dd551b3],esi
  40b63f:	jge    0x40b668
  40b641:	stos   BYTE PTR es:[edi],al
  40b642:	loopne 0x40b6b6
  40b644:	int3   
  40b645:	gs cmp esp,ebx
  40b648:	pop    ecx
  40b649:	ss test al,0x30
  40b64c:	in     al,dx
  40b64d:	sar    BYTE PTR [ebx+0x12],cl
  40b650:	pop    ss
  40b651:	mov    edi,DWORD PTR [edx]
  40b653:	mov    bh,0x83
  40b655:	xor    BYTE PTR [esp+ebx*8-0x42],0x5f
  40b65a:	fst    DWORD PTR [eax-0xf]
  40b65d:	inc    ecx
  40b65e:	popa   
  40b65f:	lods   al,BYTE PTR ds:[esi]
  40b660:	pushf  
  40b661:	mov    ebp,0x155cb85a
  40b666:	pop    edx
  40b667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b668:	pusha  
  40b669:	mov    ebp,DWORD PTR [bp+si]
  40b66c:	mov    ds:0xae2b41be,eax
  40b671:	data16 and BYTE PTR [eax+0x27],ch
  40b675:	test   BYTE PTR [ebx+0x61],al
  40b678:	mov    ah,0x0
  40b67a:	into   
  40b67b:	ret    
  40b67c:	aaa    
  40b67d:	pop    ss
  40b67e:	das    
  40b67f:	sub    al,bh
  40b681:	inc    ebp
  40b682:	neg    BYTE PTR [ecx+0x28]
  40b685:	adc    ebx,DWORD PTR [eax-0x7f23784c]
  40b68b:	or     esi,ebx
  40b68d:	xchg   esi,eax
  40b68e:	add    BYTE PTR [ebx-0x33de2889],0x19
  40b695:	bound  edx,QWORD PTR [edx+0x7efba334]
  40b69b:	inc    ebx
  40b69c:	xor    BYTE PTR [eax+0x42712f76],al
  40b6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a3:	aam    0xfb
  40b6a5:	stos   BYTE PTR es:[edi],al
  40b6a6:	mov    ds:0x575c0ff3,eax
  40b6ab:	jnp    0x40b671
  40b6ad:	popa   
  40b6ae:	pop    eax
  40b6af:	mov    esi,0xce4cde4f
  40b6b4:	cmp    eax,0xb18e3d2c
  40b6b9:	jbe    0x40b72a
  40b6bb:	nop
  40b6bc:	dec    BYTE PTR [ebx-0x6f]
  40b6bf:	test   eax,0xcd0c150
  40b6c4:	ret    
  40b6c5:	sar    BYTE PTR [ebx+0x2f],0xf3
  40b6c9:	jmp    0x3b2d:0xec1e9e9c
  40b6d0:	xor    BYTE PTR [edx+0x6c],al
  40b6d3:	push   ss
  40b6d4:	js     0x40b71d
  40b6d6:	jb     0x40b67b
  40b6d8:	ret    0x19fe
  40b6db:	popf   
  40b6dc:	and    eax,0x270bc824
  40b6e1:	pop    ss
  40b6e2:	dec    eax
  40b6e3:	ds loop 0x40b6d1
  40b6e6:	es test edx,esi
  40b6e9:	jmp    0x71f9:0xcc029fa3
  40b6f0:	xor    al,0x6f
  40b6f2:	addr16 addr16 jae 0x40b732
  40b6f6:	in     eax,0x5b
  40b6f8:	fnstsw WORD PTR [esi-0x77b7b80e]
  40b6fe:	stc    
  40b6ff:	loope  0x40b751
  40b701:	xchg   ebp,eax
  40b702:	in     eax,0x81
  40b704:	push   0x63
  40b706:	(bad)  
  40b707:	cld    
  40b708:	jae    0x40b68d
  40b70a:	jnp    0x40b745
  40b70c:	or     al,0x65
  40b70e:	push   esp
  40b70f:	retf   
  40b710:	mov    ecx,0x5bc9006c
  40b715:	mov    ebx,0xf147f464
  40b71a:	jnp    0x40b6be
  40b71c:	das    
  40b71d:	push   ebx
  40b71e:	outs   dx,DWORD PTR ds:[esi]
  40b71f:	(bad)
  40b723:	push   ds
  40b724:	out    0xad,eax
  40b726:	arpl   WORD PTR [esi],di
  40b728:	inc    eax
  40b729:	mov    eax,0x51fe154d
  40b72e:	jb     0x40b71c
  40b730:	inc    edi
  40b731:	lods   eax,DWORD PTR ds:[esi]
  40b732:	or     edi,DWORD PTR [ecx+0x2c3352b9]
  40b738:	(bad)  
  40b739:	pop    ds
  40b73a:	add    edi,edi
  40b73c:	sahf   
  40b73d:	addr16 sti 
  40b73f:	in     eax,dx
  40b740:	mov    DWORD PTR [edi-0x699662a],edx
  40b746:	int3   
  40b747:	and    cl,BYTE PTR [eax]
  40b749:	cli    
  40b74a:	cmp    eax,0x11b0169b
  40b74f:	mov    ds:0x38119ce4,eax
  40b754:	mov    es,WORD PTR [ebx]
  40b756:	and    ch,0x68
  40b759:	cli    
  40b75a:	inc    esp
  40b75b:	stos   DWORD PTR es:[edi],eax
  40b75c:	sahf   
  40b75d:	sbb    al,0x79
  40b75f:	(bad)  
  40b760:	enter  0x9d33,0xc6
  40b764:	fstp   st(2)
  40b766:	adc    al,0x29
  40b768:	pop    edx
  40b769:	scas   al,BYTE PTR es:[edi]
  40b76a:	hlt    
  40b76b:	aas    
  40b76c:	fs in  al,dx
  40b76e:	add    BYTE PTR [ecx],al
  40b770:	push   eax
  40b771:	xchg   bh,bh
  40b773:	cmp    ch,BYTE PTR [eax]
  40b775:	add    al,0xfd
  40b777:	mov    ds:0xf004707b,al
  40b77c:	sar    dh,cl
  40b77e:	push   esi
  40b77f:	sahf   
  40b780:	or     BYTE PTR [esi],0x55
  40b783:	scas   eax,DWORD PTR es:[edi]
  40b784:	ins    BYTE PTR es:[edi],dx
  40b785:	and    dl,BYTE PTR [eax+0x42]
  40b788:	push   ebx
  40b789:	push   cs
  40b78a:	stc    
  40b78b:	lahf   
  40b78c:	ror    ebx,1
  40b78e:	add    ecx,DWORD PTR [edi+eiz*8]
  40b791:	(bad)  
  40b792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b793:	sbb    BYTE PTR [ebx*1-0x32ae28aa],ch
  40b79a:	mov    ds:0x30a66957,eax
  40b79f:	push   edx
  40b7a0:	sub    bh,0x57
  40b7a3:	sbb    eax,DWORD PTR [edi]
  40b7a5:	fistp  DWORD PTR [esp+edi*8]
  40b7a8:	lea    ebx,[esp+esi*1-0x4e]
  40b7ac:	inc    ebx
  40b7ad:	scas   al,BYTE PTR es:[edi]
  40b7ae:	loop   0x40b74f
  40b7b0:	(bad)  
  40b7b1:	rcl    ecx,cl
  40b7b3:	push   ss
  40b7b4:	loop   0x40b819
  40b7b6:	popf   
  40b7b7:	cs xchg esp,eax
  40b7b9:	pop    ds
  40b7ba:	pop    ds
  40b7bb:	js     0x40b7a0
  40b7bd:	fucomip st,st(1)
  40b7bf:	out    dx,al
  40b7c0:	push   ebp
  40b7c1:	adc    WORD PTR [esi-0x4],0x4c
  40b7c6:	es into 
  40b7c8:	or     bh,bh
  40b7ca:	add    dh,dl
  40b7cc:	call   0x53432a1
  40b7d1:	lods   eax,DWORD PTR ds:[esi]
  40b7d2:	inc    ebx
  40b7d3:	les    ebx,FWORD PTR [ebx]
  40b7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d6:	call   0x3056:0xdb24d308
  40b7dd:	fsub   QWORD PTR [esi-0x20]
  40b7e0:	mov    esp,0x3db43a44
  40b7e5:	mov    edx,0x1dec6dc0
  40b7ea:	cmc    
  40b7eb:	push   es
  40b7ec:	rol    DWORD PTR [ebx],0xe
  40b7ef:	rol    esi,0xdf
  40b7f2:	and    ch,BYTE PTR [edi]
  40b7f4:	rol    BYTE PTR [eax-0x34],cl
  40b7f7:	cmp    DWORD PTR [edx+esi*4],ebx
  40b7fa:	jg     0x40b79f
  40b7fc:	dec    edx
  40b7fd:	adc    DWORD PTR [ebx+0x2b],edi
  40b800:	loop   0x40b84d
  40b802:	lock jl 0x40b7d0
  40b805:	dec    edi
  40b806:	stc    
  40b807:	sbb    bh,BYTE PTR [eax-0x56]
  40b80a:	mov    ecx,0xf125af2
  40b80f:	mov    esi,0xc7bce483
  40b814:	aad    0xff
  40b816:	cmp    ebx,ecx
  40b818:	icebp  
  40b819:	add    al,BYTE PTR [eax-0x52]
  40b81c:	push   esi
  40b81d:	push   0x5abbd9a
  40b822:	mov    ss,WORD PTR [ecx-0x28db4e27]
  40b828:	fdivr  st(0),st
  40b82a:	push   cs
  40b82b:	test   al,0x9
  40b82d:	inc    ecx
  40b82e:	push   es
  40b82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b830:	jge    0x40b89b
  40b832:	in     eax,dx
  40b833:	(bad)  
  40b834:	cmp    eax,0x23669ddc
  40b839:	jae    0x40b885
  40b83b:	inc    esp
  40b83c:	(bad)  
  40b83e:	mov    esp,0x4862564d
  40b843:	jmp    0xb59a:0x21e9de41
  40b84a:	ja     0x40b8b2
  40b84c:	test   BYTE PTR [edx],ch
  40b84e:	pop    eax
  40b84f:	xchg   esp,eax
  40b850:	xchg   esp,eax
  40b851:	pop    ebp
  40b852:	in     eax,dx
  40b853:	cdq    
  40b854:	push   esp
  40b855:	call   0x8e34681f
  40b85a:	push   esp
  40b85b:	scas   al,BYTE PTR es:[edi]
  40b85c:	ffree  st(4)
  40b85e:	fmul   QWORD PTR [eax+0x74e2f741]
  40b864:	jge    0x40b815
  40b866:	popa   
  40b867:	sub    ebx,DWORD PTR [edx+eiz*4-0x56]
  40b86b:	outs   dx,BYTE PTR ds:[esi]
  40b86c:	adc    al,0xcc
  40b86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86f:	xor    DWORD PTR [edi-0x6a],eax
  40b872:	inc    esp
  40b873:	sar    DWORD PTR ds:0x4fd31989,cl
  40b879:	mov    esi,0x42e3e4d2
  40b87e:	add    al,0xca
  40b880:	fwait
  40b881:	dec    edi
  40b882:	jne    0x40b83f
  40b884:	pinsrw mm2,WORD PTR cs:[esi+0x14],0x9d
  40b88a:	add    al,0xc7
  40b88c:	cli    
  40b88d:	sbb    edi,DWORD PTR [eax-0x32a55c98]
  40b893:	cmp    ah,BYTE PTR [edx+0x7d]
  40b896:	cmc    
  40b897:	fmul   QWORD PTR [esp+ecx*2-0x5a57b215]
  40b89e:	in     eax,dx
  40b89f:	push   eax
  40b8a0:	dec    edx
  40b8a1:	js     0x40b903
  40b8a3:	push   cs
  40b8a4:	rol    cl,cl
  40b8a6:	into   
  40b8a7:	cmp    al,0x21
  40b8a9:	scas   al,BYTE PTR es:[edi]
  40b8aa:	test   DWORD PTR [ebx+esi*8-0x5d],0x1076a114
  40b8b2:	shl    BYTE PTR [eax],cl
  40b8b4:	pop    ecx
  40b8b5:	mov    edi,DWORD PTR [ebx+0x51240c42]
  40b8bb:	xor    al,0xf
  40b8bd:	bound  edi,QWORD PTR [ebx-0x2d51fc04]
  40b8c3:	xlat   BYTE PTR ds:[ebx]
  40b8c4:	dec    edx
  40b8c5:	add    al,BYTE PTR [edi]
  40b8c7:	test   BYTE PTR [edx+0x6c4935b8],bh
  40b8cd:	and    BYTE PTR [esi],dh
  40b8cf:	push   0xffffffc1
  40b8d1:	inc    eax
  40b8d2:	faddp  st(2),st
  40b8d4:	sub    DWORD PTR [eax-0x66],edx
  40b8d7:	adc    al,0xa3
  40b8d9:	shr    BYTE PTR [ebx],1
  40b8db:	icebp  
  40b8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8dd:	push   ebx
  40b8de:	fdecstp 
  40b8e0:	mov    bl,0xd9
  40b8e2:	ds adc dh,bl
  40b8e5:	ret    0x2a0a
  40b8e8:	cld    
  40b8e9:	cmp    edx,eax
  40b8eb:	jp     0x40b8d7
  40b8ed:	js     0x40b932
  40b8ef:	jecxz  0x40b932
  40b8f1:	push   es
  40b8f2:	stos   BYTE PTR es:[edi],al
  40b8f3:	cwde   
  40b8f4:	arpl   WORD PTR [edi*2+0x1bf42858],sp
  40b8fb:	push   0xffffffb0
  40b8fd:	int3   
  40b8fe:	mov    al,ds:0x3184a5d5
  40b903:	(bad)  
  40b904:	cmp    cl,ch
  40b906:	call   0xeb47:0xa991a909
  40b90d:	icebp  
  40b90e:	(bad)  
  40b910:	sub    ebx,DWORD PTR cs:[esi]
  40b913:	xchg   ebx,eax
  40b914:	int3   
  40b915:	push   ebx
  40b916:	mov    ecx,0xc737550b
  40b91b:	xchg   ecx,eax
  40b91c:	mov    ?,WORD PTR [edx]
  40b91e:	pop    esi
  40b91f:	jo     0x40b98a
  40b921:	ins    DWORD PTR es:[edi],dx
  40b922:	nop
  40b923:	jns    0x40b8c2
  40b925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b926:	leave  
  40b927:	jg     0x40b91c
  40b929:	ds nop
  40b92b:	(bad)  
  40b92c:	fistp  WORD PTR [eax+0x58]
  40b92f:	add    edi,esp
  40b931:	and    DWORD PTR [ebp-0x134fff7f],ebx
  40b937:	mov    esi,0xd418d9e3
  40b93c:	sub    al,0xd5
  40b93e:	push   0xca75349c
  40b943:	push   esi
  40b944:	stos   DWORD PTR es:[edi],eax
  40b945:	bound  esp,QWORD PTR [ebp+0x102910f6]
  40b94b:	outs   dx,BYTE PTR ds:[esi]
  40b94c:	fsub   QWORD PTR cs:[esi-0x2b]
  40b950:	in     eax,0x2c
  40b952:	ret    0xfb79
  40b955:	mov    bh,0xa
  40b957:	xor    BYTE PTR [ecx+0x66],ch
  40b95a:	mov    al,dh
  40b95c:	xor    DWORD PTR [ebp+0x1b],ebp
  40b95f:	frstor [ecx]
  40b961:	dec    edi
  40b962:	xchg   edi,eax
  40b963:	outs   dx,BYTE PTR ds:[esi]
  40b964:	cwde   
  40b965:	mov    eax,ds:0x49fe37b0
  40b96a:	push   edi
  40b96b:	push   0xfffffff4
  40b96d:	into   
  40b96e:	lods   eax,DWORD PTR ds:[esi]
  40b96f:	mov    esp,0x36ecde9f
  40b974:	adc    ch,BYTE PTR [ecx-0x35]
  40b977:	mov    eax,DWORD PTR [eax-0x5ceb2567]
  40b97d:	cmp    BYTE PTR [eax-0x51e4e8d0],al
  40b983:	repnz add edi,DWORD PTR [eax-0x6a]
  40b987:	repnz cdq 
  40b989:	add    ah,BYTE PTR [eax]
  40b98b:	div    DWORD PTR [eax]
  40b98d:	imul   ecx,DWORD PTR [edx+0xe],0xc36c2226
  40b994:	test   DWORD PTR [eax],0xf6f244a7
  40b99a:	pop    ebx
  40b99b:	pop    ebx
  40b99c:	icebp  
  40b99d:	push   ebp
  40b99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b99f:	addr16 jmp 0x7314:0x4f4f3eb5
  40b9a7:	push   edx
  40b9a8:	xor    dl,BYTE PTR [edi+0x53e9deff]
  40b9ae:	adc    al,0x27
  40b9b0:	xor    eax,0xa4ea70a7
  40b9b5:	into   
  40b9b6:	and    eax,0x15dbde98
  40b9bb:	sahf   
  40b9bc:	mov    eax,ds:0x723037cc
  40b9c1:	sub    BYTE PTR [esi+0x795962dc],0x13
  40b9c8:	inc    edi
  40b9c9:	not    ch
  40b9cb:	scas   eax,DWORD PTR es:[edi]
  40b9cc:	inc    esp
  40b9cd:	(bad)  
  40b9ce:	add    al,0x94
  40b9d0:	sub    edx,ecx
  40b9d2:	push   eax
  40b9d3:	aad    0xc9
  40b9d5:	mov    cl,al
  40b9d7:	jo     0x40ba3c
  40b9d9:	jns    0x40ba32
  40b9db:	sbb    al,0xd5
  40b9dd:	dec    ebp
  40b9de:	cmp    al,0xa9
  40b9e0:	mov    edx,ebp
  40b9e2:	push   esp
  40b9e3:	jge    0x40b992
  40b9e5:	pop    esi
  40b9e6:	pop    eax
  40b9e7:	cmp    dh,BYTE PTR [ecx-0x15c5638b]
  40b9ed:	cli    
  40b9ee:	ss stos BYTE PTR es:[edi],al
  40b9f0:	jg     0x40b9e0
  40b9f2:	out    dx,al
  40b9f3:	mov    WORD PTR [ebx+0x25],?
  40b9f6:	mov    ebp,0xf08fa400
  40b9fb:	fnstsw WORD PTR [ecx-0x27]
  40b9fe:	repnz out dx,al
  40ba00:	call   0x1c64879
  40ba05:	scas   eax,DWORD PTR es:[edi]
  40ba06:	mov    WORD PTR [ebp+0x1d],?
  40ba09:	adc    eax,0xdc1c21ef
  40ba0e:	aaa    
  40ba0f:	mov    DWORD PTR [edx+0x0],ebp
  40ba12:	pushf  
  40ba13:	and    DWORD PTR [edi+eax*4],esp
  40ba16:	xor    ebx,DWORD PTR [edx-0x6d]
  40ba19:	pop    es
  40ba1a:	cmc    
  40ba1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1c:	mov    ah,0xa5
  40ba1e:	sub    DWORD PTR [eax+0x5f],eax
  40ba21:	out    0x16,al
  40ba23:	push   esi
  40ba24:	lods   al,BYTE PTR ds:[esi]
  40ba25:	push   esp
  40ba26:	sar    BYTE PTR [edx+0x3],0xf2
  40ba2a:	cmp    esp,edi
  40ba2c:	ja     0x40ba6b
  40ba2e:	sub    edi,DWORD PTR [edx+0x1bbdf2cd]
  40ba34:	push   0xffffffa6
  40ba36:	or     esi,edx
  40ba38:	mov    dh,0xa0
  40ba3a:	xor    eax,0x79d1e6c3
  40ba3f:	daa    
  40ba40:	xor    BYTE PTR [esi],dh
  40ba42:	lea    ecx,ds:0x4846fa12
  40ba48:	mov    bh,0x11
  40ba4a:	test   eax,0xd98979f6
  40ba4f:	cli    
  40ba50:	dec    esp
  40ba51:	jns    0x40baba
  40ba53:	push   cs
  40ba54:	xchg   ecx,eax
  40ba55:	xchg   edx,eax
  40ba56:	stos   DWORD PTR es:[edi],eax
  40ba57:	add    esp,DWORD PTR [edi-0x77bd54c8]
  40ba5d:	ja     0x40bac2
  40ba5f:	mov    eax,ds:0x14aef0a5
  40ba64:	mov    bh,0x5a
  40ba66:	lahf   
  40ba67:	push   esi
  40ba68:	xchg   esp,eax
  40ba69:	jo     0x40ba5e
  40ba6b:	mov    edi,gs
  40ba6d:	es push esi
  40ba6f:	xchg   ebp,eax
  40ba70:	ss push edx
  40ba72:	mov    esp,0xf6efd588
  40ba77:	cmp    cl,0xf0
  40ba7a:	push   ds
  40ba7b:	ds add al,0xe0
  40ba7e:	push   ds
  40ba7f:	mul    BYTE PTR [ebx-0x4139bdf]
  40ba85:	push   0x8281a718
  40ba8a:	add    al,BYTE PTR [ecx]
  40ba8c:	dec    esp
  40ba8d:	dec    ebx
  40ba8e:	inc    eax
  40ba8f:	lds    ebx,FWORD PTR [ebp+eax*1+0x2d]
  40ba93:	push   ebp
  40ba94:	jg     0x40bad7
  40ba96:	or     BYTE PTR [ebx],ch
  40ba98:	or     al,0x11
  40ba9a:	sbb    ecx,edx
  40ba9c:	jmp    0x40ba3f
  40ba9e:	stos   DWORD PTR es:[edi],eax
  40ba9f:	sub    al,0x78
  40baa1:	jmp    0x40ba7d
  40baa3:	lods   al,BYTE PTR ds:[esi]
  40baa4:	lea    esi,[ecx-0x71]
  40baa7:	add    DWORD PTR [edi+esi*2],edx
  40baaa:	adc    DWORD PTR [edi],ebp
  40baac:	jmp    0x40bad8
  40baae:	jg     0x40bab3
  40bab0:	fild   DWORD PTR [esi]
  40bab2:	stos   DWORD PTR es:[edi],eax
  40bab3:	sub    esi,DWORD PTR ds:0xe0abd6c1
  40bab9:	loopne 0x40bb35
  40babb:	sub    eax,0x9019e4d1
  40bac0:	or     DWORD PTR [ecx+0x22],esp
  40bac3:	into   
  40bac4:	or     ebp,DWORD PTR [esi+0xc316881]
  40baca:	cmp    dh,BYTE PTR [ebx]
  40bacc:	jb     0x40bb3b
  40bace:	pop    ebp
  40bacf:	mov    ss,WORD PTR [ebp-0x50]
  40bad2:	inc    edx
  40bad3:	sbb    DWORD PTR [ecx+0x3c],0x23
  40bad7:	bound  edi,QWORD PTR [edx+0x2b195e9f]
  40badd:	pop    esp
  40bade:	imul   DWORD PTR [esi+0x270c9898]
  40bae4:	push   edx
  40bae5:	pop    ds
  40bae6:	mov    dh,0x80
  40bae8:	push   si
  40baea:	fistp  QWORD PTR [esi-0x2e]
  40baed:	jmp    DWORD PTR [ebp-0x20]
  40baf0:	push   edx
  40baf1:	add    DWORD PTR [edx],esp
  40baf3:	jnp    0x40bb1e
  40baf5:	enter  0x3570,0x9c
  40baf9:	pop    eax
  40bafa:	adc    DWORD PTR [ecx],ecx
  40bafc:	inc    edi
  40bafd:	ins    DWORD PTR es:[edi],dx
  40bafe:	scas   eax,DWORD PTR es:[edi]
  40baff:	or     al,0x9b
  40bb01:	call   0xbb898b96
  40bb06:	icebp  
  40bb07:	cmp    eax,DWORD PTR [eax]
  40bb09:	inc    esi
  40bb0a:	lods   eax,DWORD PTR ds:[esi]
  40bb0b:	jge    0x40baac
  40bb0d:	push   es
  40bb0e:	jmp    0x7c161a3e
  40bb13:	jb     0x40bad6
  40bb15:	sub    ebx,ebp
  40bb17:	lods   eax,DWORD PTR ds:[esi]
  40bb18:	pop    esp
  40bb19:	pop    ds
  40bb1a:	lahf   
  40bb1b:	hlt    
  40bb1c:	sub    eax,0x971cf9ac
  40bb21:	mov    bh,0x8c
  40bb23:	sub    edi,DWORD PTR [edi+0x41]
  40bb26:	push   edx
  40bb27:	neg    edi
  40bb29:	popf   
  40bb2a:	loop   0x40bb05
  40bb2c:	jle    0x40bb3e
  40bb2e:	dec    ebp
  40bb2f:	sbb    bl,dl
  40bb31:	ret    0xb3d2
  40bb34:	mov    eax,ds:0xea50f1bc
  40bb39:	rcr    BYTE PTR [eax+0x4a],1
  40bb3c:	mov    ds:0x7b23a79,al
  40bb41:	(bad)  
  40bb42:	adc    BYTE PTR [esi-0x11742359],ah
  40bb48:	fimul  DWORD PTR [eax+esi*8-0x488b72a8]
  40bb4f:	clc    
  40bb50:	and    al,BYTE PTR [eax+edx*1]
  40bb53:	mov    gs,esi
  40bb55:	ret    0x3aba
  40bb58:	pop    edx
  40bb59:	sub    bh,BYTE PTR [edi+0x14]
  40bb5c:	sti    
  40bb5d:	mov    es,edx
  40bb5f:	sbb    al,0x78
  40bb61:	ret    0x1f0b
  40bb64:	mov    ds:0xc20f5ebd,al
  40bb69:	mov    al,ds:0xeb786f73
  40bb6f:	mov    ecx,0x36e20e2a
  40bb74:	push   es
  40bb75:	cdq    
  40bb76:	dec    esi
  40bb77:	mov    ch,0xb6
  40bb79:	lods   al,BYTE PTR ds:[esi]
  40bb7a:	int3   
  40bb7b:	sbb    BYTE PTR [edi-0x58],dl
  40bb7e:	mov    eax,0x16a5d4c6
  40bb83:	xchg   esi,eax
  40bb84:	jnp    0x40bb4a
  40bb86:	mov    esi,ecx
  40bb88:	pop    ss
  40bb89:	mov    edx,0x40efe24b
  40bb8e:	cwde   
  40bb8f:	pop    esi
  40bb90:	sbb    edi,edx
  40bb92:	cmp    BYTE PTR ds:0xb5bf3554,dl
  40bb98:	sar    bl,cl
  40bb9a:	jle    0x40bbb0
  40bb9c:	cmp    BYTE PTR [ecx],0xe9
  40bb9f:	mov    BYTE PTR [esi-0x3e],ch
  40bba2:	mov    ah,0xf5
  40bba4:	xchg   DWORD PTR [edi+0x6d],edx
  40bba7:	jle    0x40bb58
  40bba9:	pop    ebp
  40bbaa:	iret   
  40bbab:	xor    BYTE PTR [ecx+0x23],dh
  40bbae:	pop    esi
  40bbaf:	jo     0x40bbb9
  40bbb1:	add    eax,0x41d184a9
  40bbb6:	jge    0x40bba0
  40bbb8:	inc    ebp
  40bbb9:	mov    WORD PTR [ecx+0x4f24dc51],ds
  40bbbf:	cmp    dh,BYTE PTR [ecx-0x329c3550]
  40bbc5:	jp     0x40bc0e
  40bbc7:	push   ebp
  40bbc8:	jb     0x40bb98
  40bbca:	rcl    BYTE PTR [ebp+0x50],1
  40bbcd:	mov    edi,0x91069b98
  40bbd2:	leave  
  40bbd3:	mov    ebp,0xe2be4e8c
  40bbd8:	fwait
  40bbd9:	aam    0x44
  40bbdb:	aas    
  40bbdc:	add    al,0x61
  40bbde:	js     0x40bc2d
  40bbe0:	pop    ss
  40bbe1:	mov    fs,WORD PTR [ebx-0xd2211b]
  40bbe7:	daa    
  40bbe8:	mov    dl,dh
  40bbea:	(bad)  
  40bbeb:	idiv   BYTE PTR [edi]
  40bbed:	retf   
  40bbee:	xor    BYTE PTR [esi],0x28
  40bbf1:	sahf   
  40bbf2:	cmp    al,0xd9
  40bbf4:	out    dx,eax
  40bbf5:	xor    ah,BYTE PTR [esi-0xec19322]
  40bbfb:	mov    ecx,0xda37ad62
  40bc00:	mov    eax,ds:0x205185cb
  40bc05:	sub    BYTE PTR [edx+eax*8-0x12a12898],dl
  40bc0c:	xor    al,bh
  40bc0e:	xchg   ebx,eax
  40bc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc10:	add    al,BYTE PTR [eax]
  40bc12:	ja     0x40bbdd
  40bc14:	mov    esp,0x4efb9024
  40bc19:	out    dx,eax
  40bc1a:	call   0xb0c1:0x16118670
  40bc21:	jbe    0x40bc81
  40bc23:	cs int3 
  40bc25:	jb     0x40bca2
  40bc27:	cdq    
  40bc28:	punpckhdq mm7,QWORD PTR [ebx+0x4bc7916f]
  40bc2f:	mov    WORD PTR [ebx-0x2cfe98cb],cs
  40bc35:	cs pop eax
  40bc37:	inc    edx
  40bc38:	stos   DWORD PTR es:[edi],eax
  40bc39:	(bad)  
  40bc3a:	fstp   st(2)
  40bc3c:	sahf   
  40bc3d:	mov    ecx,0xcc2ab0d8
  40bc42:	mov    esp,0x32755c6b
  40bc47:	inc    ebx
  40bc48:	rcl    DWORD PTR [edi+0x1a],0x9f
  40bc4c:	push   edi
  40bc4d:	ins    DWORD PTR es:[edi],dx
  40bc4e:	ror    eax,cl
  40bc50:	cmp    BYTE PTR [edi-0x559731eb],ch
  40bc56:	aaa    
  40bc57:	push   0x17
  40bc59:	cdq    
  40bc5a:	cld    
  40bc5b:	sti    
  40bc5c:	xchg   ah,dl
  40bc5e:	adc    al,al
  40bc60:	out    0x12,al
  40bc62:	sti    
  40bc63:	bound  ecx,QWORD PTR [esi+0x43534dc5]
  40bc69:	mov    eax,edx
  40bc6b:	and    ch,bh
  40bc6d:	es (bad) 
  40bc6f:	jmp    0x1d96daa0
  40bc74:	cmp    eax,0xc14e205e
  40bc79:	adc    BYTE PTR [ebp+0x202b37a7],al
  40bc7f:	das    
  40bc80:	and    bl,BYTE PTR [edx+0x27075c94]
  40bc86:	push   ebp
  40bc87:	bound  ebp,QWORD PTR [esi-0x5ebd1a7c]
  40bc8d:	imul   ebx,DWORD PTR [esi-0x13],0xffffff90
  40bc91:	mov    ch,0xb1
  40bc93:	push   ss
  40bc94:	test   DWORD PTR [edx+0x3],eax
  40bc97:	je     0x40bc51
  40bc99:	cmp    bh,BYTE PTR [esi]
  40bc9b:	cli    
  40bc9c:	push   eax
  40bc9d:	and    al,0x3e
  40bc9f:	sub    edx,DWORD PTR [eax]
  40bca1:	xor    eax,0x454e83fb
  40bca6:	retf   
  40bca7:	adc    eax,0x57b87474
  40bcac:	cwde   
  40bcad:	mov    fs,WORD PTR [esi+0xa8c738c]
  40bcb3:	sbb    bl,BYTE PTR [edi-0x21]
  40bcb6:	mov    bh,0xb5
  40bcb8:	xchg   ebp,eax
  40bcb9:	push   eax
  40bcba:	test   BYTE PTR [esi],cl
  40bcbc:	push   eax
  40bcbd:	push   edi
  40bcbe:	xchg   edi,eax
  40bcbf:	sub    ebx,DWORD PTR [ebx]
  40bcc1:	jmp    0x40bc88
  40bcc3:	jg     0x40bd43
  40bcc5:	xor    BYTE PTR ds:0x53eb4e67,dh
  40bccb:	xor    DWORD PTR [ecx+0x66],esi
  40bcce:	xchg   DWORD PTR [edi-0x72e7ef68],ebp
  40bcd4:	neg    edx
  40bcd6:	xchg   ebx,eax
  40bcd7:	sbb    eax,0x51041973
  40bcdc:	fdiv   DWORD PTR [ebx]
  40bcde:	push   ecx
  40bcdf:	sbb    bh,BYTE PTR [ecx-0x73]
  40bce2:	sti    
  40bce3:	xor    ch,BYTE PTR [eax]
  40bce5:	loopne 0x40bca6
  40bce7:	push   ecx
  40bce8:	push   cs
  40bce9:	out    dx,eax
  40bcea:	ja     0x40bcea
  40bcec:	shl    DWORD PTR [ebp+0x96a95fa],0x15
  40bcf3:	ds mov ecx,0xd40520af
  40bcf9:	dec    edx
  40bcfa:	push   0xdb28a9f9
  40bcff:	xchg   edx,eax
  40bd00:	dec    eax
  40bd01:	call   0x7987ecc9
  40bd06:	push   esp
  40bd07:	clc    
  40bd08:	inc    ecx
  40bd09:	stos   BYTE PTR es:[edi],al
  40bd0a:	and    esp,ebp
  40bd0c:	aad    0x0
  40bd0e:	popa   
  40bd0f:	dec    eax
  40bd10:	(bad)  
  40bd11:	mov    ch,0xa2
  40bd13:	sti    
  40bd14:	cmp    BYTE PTR [edx+0x46de5fa5],ah
  40bd1a:	push   ecx
  40bd1b:	rcr    DWORD PTR [eax],cl
  40bd1d:	icebp  
  40bd1e:	or     eax,0x85a2926d
  40bd23:	pop    ss
  40bd24:	push   edi
  40bd25:	repnz pop ebp
  40bd27:	mov    al,BYTE PTR [eax+0x10]
  40bd2a:	popa   
  40bd2b:	inc    esi
  40bd2c:	cmp    BYTE PTR [ecx-0x61],ah
  40bd2f:	jle    0x40bcc8
  40bd31:	mov    WORD PTR [ebx+0x7d],?
  40bd34:	mov    ah,0x58
  40bd36:	cmp    bh,BYTE PTR [ebp-0x3e3ed009]
  40bd3c:	in     al,0x2e
  40bd3e:	test   al,0x19
  40bd40:	xchg   esp,esi
  40bd42:	frstor [edx+0x44]
  40bd45:	out    dx,eax
  40bd46:	rol    DWORD PTR [edx+eax*1-0x58378972],0x5e
  40bd4e:	xor    eax,0x2d3c4286
  40bd53:	xor    al,0xb2
  40bd55:	jae    0x40bdb7
  40bd57:	adc    al,0x85
  40bd59:	sti    
  40bd5a:	shl    DWORD PTR [ebp+0x26488869],1
  40bd60:	mov    ah,ah
  40bd62:	push   esp
  40bd63:	inc    edi
  40bd64:	pop    edx
  40bd65:	mov    ch,0x54
  40bd67:	dec    ecx
  40bd68:	sub    eax,0x677685c0
  40bd6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd6e:	push   cs
  40bd6f:	and    eax,0xf1dee142
  40bd74:	pop    ebx
  40bd75:	mov    ah,0x60
  40bd77:	not    BYTE PTR [ecx+0x3c]
  40bd7a:	test   ch,dl
  40bd7c:	cs jmp 0x40bd55
  40bd7f:	lods   eax,DWORD PTR ds:[esi]
  40bd80:	jne    0x40bd69
  40bd82:	not    BYTE PTR [ebx+0x3dc39237]
  40bd88:	fisttp DWORD PTR [ebp+0x313437bd]
  40bd8e:	xchg   edx,eax
  40bd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd90:	sbb    BYTE PTR [ebx-0x4f],0x32
  40bd94:	mov    edi,ecx
  40bd96:	fcmovnb st,st(4)
  40bd98:	mov    dl,0xf5
  40bd9a:	pushf  
  40bd9b:	loope  0x40bd73
  40bd9d:	jne    0x40bda5
  40bd9f:	retf   
  40bda0:	ss pop esi
  40bda2:	fwait
  40bda3:	sbb    edi,DWORD PTR [ecx-0x34]
  40bda6:	dec    esi
  40bda7:	inc    ebp
  40bda8:	add    edx,edi
  40bdaa:	mov    WORD PTR [esi-0x61],gs
  40bdad:	or     BYTE PTR [edx+0x2c],al
  40bdb0:	xchg   edx,eax
  40bdb1:	add    eax,0xcb7293f0
  40bdb6:	xchg   ecx,eax
  40bdb7:	data16 mov ds:0x31b57d06,al
  40bdbd:	mov    dh,cl
  40bdbf:	xchg   ecx,eax
  40bdc0:	adc    DWORD PTR [ecx+0x63bb1eb],eax
  40bdc6:	sub    esi,0xffffffdb
  40bdc9:	mov    ah,BYTE PTR [ebp+ebp*4+0x3b9b824c]
  40bdd0:	xchg   ebp,eax
  40bdd1:	or     esp,edx
  40bdd3:	es jmp 0x40bd87
  40bdd6:	xchg   ecx,eax
  40bdd7:	pusha  
  40bdd8:	mov    bl,0x77
  40bdda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bddb:	inc    edx
  40bddc:	push   esp
  40bddd:	push   cs
  40bdde:	jle    0x40be4f
  40bde0:	push   es
  40bde1:	jbe    0x40bd6a
  40bde3:	inc    ebx
  40bde4:	mov    ds:0xb31d4e77,al
  40bde9:	add    DWORD PTR [ebx+0x7414cf38],ebp
  40bdef:	and    ch,0xd5
  40bdf2:	dec    ecx
  40bdf3:	dec    eax
  40bdf4:	xor    eax,0x1521a12c
  40bdf9:	pop    ebx
  40bdfa:	dec    ebx
  40bdfb:	inc    eax
  40bdfc:	repnz push ss
  40bdfe:	sub    DWORD PTR ds:0x50d268af,edi
  40be04:	fsubr  st,st(0)
  40be06:	xlat   BYTE PTR ds:[ebx]
  40be07:	inc    ecx
  40be08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be09:	mov    ch,0xe8
  40be0b:	sbb    al,bl
  40be0d:	mov    edx,0x8a515051
  40be12:	stc    
  40be13:	add    bl,ch
  40be15:	ss mov dl,0x72
  40be18:	cmp    DWORD PTR [ebx],edi
  40be1a:	imul   ecx,DWORD PTR [eax+edx*1-0x2],0x68adc405
  40be22:	ins    DWORD PTR es:[edi],dx
  40be23:	in     eax,0x6b
  40be25:	enter  0xc0be,0x5e
  40be29:	jecxz  0x40be59
  40be2b:	cmc    
  40be2c:	cwde   
  40be2d:	lock pushf 
  40be2f:	(bad)  
  40be30:	aad    0xab
  40be32:	stc    
  40be33:	stos   DWORD PTR es:[edi],eax
  40be34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be35:	test   DWORD PTR [ebx+0x1a],ebx
  40be38:	nop
  40be39:	mov    eax,ds:0xc9a5d185
  40be3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be40:	shl    DWORD PTR [edi-0x5ed45863],0x5c
  40be47:	sbb    BYTE PTR [ebx],dl
  40be49:	popa   
  40be4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4b:	out    dx,al
  40be4c:	cld    
  40be4d:	icebp  
  40be4e:	sbb    ch,BYTE PTR [ecx+0x49]
  40be51:	jno    0x40bdfb
  40be53:	cmp    al,0xa6
  40be55:	sbb    BYTE PTR [ebx+0x74],0x6d
  40be59:	sub    dh,cl
  40be5b:	arpl   cx,si
  40be5d:	mov    ch,0x33
  40be5f:	mov    ecx,eax
  40be61:	inc    esp
  40be62:	test   BYTE PTR [ebx+eiz*1+0x7],ch
  40be66:	push   ecx
  40be67:	repnz dec ebp
  40be69:	mov    ds:0xf402fc7a,al
  40be6e:	gs pop esp
  40be70:	sub    ebp,ecx
  40be72:	bound  edx,QWORD PTR [ebx-0x78]
  40be75:	jae    0x40beeb
  40be77:	mov    DWORD PTR ds:0x767fa61f,esp
  40be7d:	jmp    DWORD PTR [ebp+0x5640568b]
  40be83:	add    BYTE PTR [ecx+0x1e],bh
  40be86:	scas   al,BYTE PTR es:[edi]
  40be87:	fcmovbe st,st(6)
  40be89:	xor    cl,BYTE PTR [esi+0x7a]
  40be8c:	lahf   
  40be8d:	jb     0x40be4c
  40be8f:	add    al,0xf6
  40be91:	ja     0x40be7b
  40be93:	aaa    
  40be94:	add    BYTE PTR [ebx],bh
  40be96:	push   ebp
  40be97:	xchg   BYTE PTR [ebp-0x32bebb5e],bl
  40be9d:	xchg   edi,eax
  40be9e:	mov    bl,0x99
  40bea0:	fidivr DWORD PTR [esi+0x60]
  40bea3:	lahf   
  40bea4:	inc    ebp
  40bea5:	adc    bh,dl
  40bea7:	lds    eax,FWORD PTR [esi+ecx*1-0x7a]
  40beab:	jmp    0x40be8d
  40bead:	and    eax,0xfda161a6
  40beb2:	ins    DWORD PTR es:[edi],dx
  40beb3:	adc    esi,DWORD PTR [edx-0x21]
  40beb6:	mov    al,0x39
  40beb8:	xchg   ecx,eax
  40beb9:	rol    BYTE PTR [edi-0x2a],cl
  40bebc:	ins    DWORD PTR es:[edi],dx
  40bebd:	xor    edx,DWORD PTR [edi+0x3a083434]
  40bec3:	push   ss
  40bec4:	jge    0x40bf28
  40bec6:	sub    edx,DWORD PTR [edi]
  40bec8:	xor    eax,0xacb6ab8a
  40becd:	lods   al,BYTE PTR ds:[esi]
  40bece:	aas    
  40becf:	inc    ecx
  40bed0:	neg    edi
  40bed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed3:	enter  0x2494,0x77
  40bed7:	ret    0xeacc
  40beda:	push   ds
  40bedb:	dec    esp
  40bedc:	clc    
  40bedd:	and    bh,0xf0
  40bee0:	pop    ebx
  40bee1:	add    eax,0x41150523
  40bee6:	jmp    0xf152:0xe9e0a3b1
  40beed:	pop    ebx
  40beee:	mov    ?,ebp
  40bef0:	aam    0x2c
  40bef2:	je     0x40be8f
  40bef4:	jl     0x40be82
  40bef6:	loop   0x40bf08
  40bef8:	push   esp
  40bef9:	jge    0x40bee7
  40befb:	sbb    BYTE PTR [eax-0x1892c68d],bh
  40bf01:	popa   
  40bf02:	fistp  DWORD PTR [esi]
  40bf04:	popf   
  40bf05:	mov    eax,0x6442530d
  40bf0a:	jmp    0x2447293e
  40bf0f:	(bad)  
  40bf11:	cmp    ch,BYTE PTR [ebx+0x292deb8]
  40bf17:	pushf  
  40bf18:	pop    ds
  40bf19:	inc    edi
  40bf1a:	test   DWORD PTR [esp+edx*1+0xe7903eb],ebx
  40bf21:	push   cs
  40bf22:	adc    DWORD PTR ds:0xbced7b8b,esp
  40bf28:	add    esi,edi
  40bf2a:	mov    BYTE PTR [ebp+0x2e],al
  40bf2d:	fs and esp,esi
  40bf30:	sbb    ebp,esp
  40bf32:	and    BYTE PTR [ecx],dh
  40bf34:	sub    dh,BYTE PTR [eax+0xc]
  40bf37:	xchg   ebp,eax
  40bf38:	mov    ch,0x1d
  40bf3a:	stos   DWORD PTR es:[edi],eax
  40bf3b:	ja     0x40bf9b
  40bf3d:	call   0xe54132a2
  40bf42:	stos   DWORD PTR es:[edi],eax
  40bf43:	call   0xe8f3:0x974a7d56
  40bf4a:	xlat   BYTE PTR ds:[ebx]
  40bf4b:	pusha  
  40bf4c:	call   0x8a23f407
  40bf51:	sub    bh,BYTE PTR [ebx+0x28]
  40bf54:	ret    0x67fc
  40bf57:	not    BYTE PTR [ecx+0x581dfa62]
  40bf5d:	loopne 0x40bf10
  40bf5f:	mov    dl,0xd
  40bf61:	(bad)  
  40bf62:	adc    edi,edi
  40bf64:	xlat   BYTE PTR ds:[ebx]
  40bf65:	mov    ecx,0xa4437795
  40bf6a:	in     al,0x79
  40bf6c:	add    BYTE PTR [ebx+ecx*1-0x80],ch
  40bf70:	and    al,0x7f
  40bf72:	sub    DWORD PTR [eax],esp
  40bf74:	mov    dl,ah
  40bf76:	les    ebx,FWORD PTR [ecx]
  40bf78:	out    dx,al
  40bf79:	pop    esp
  40bf7a:	push   esi
  40bf7b:	out    0x2a,eax
  40bf7d:	mov    edx,0xae1d24fa
  40bf82:	ror    bl,cl
  40bf84:	sahf   
  40bf85:	mov    cl,0x47
  40bf87:	retf   0xaa55
  40bf8a:	mov    ch,0x8e
  40bf8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf8d:	addr16 jo 0x40bfea
  40bf90:	jl     0x40bfe6
  40bf92:	pop    ecx
  40bf93:	dec    edx
  40bf94:	sti    
  40bf95:	fiadd  DWORD PTR [edx-0x73f14525]
  40bf9b:	arpl   WORD PTR [esi+0xdfeb991],bp
  40bfa1:	add    DWORD PTR [ebp+0x5bf082f6],esp
  40bfa7:	sub    ch,BYTE PTR [esi]
  40bfa9:	mov    dl,0xae
  40bfab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfac:	dec    eax
  40bfad:	fld    TBYTE PTR [edi]
  40bfaf:	cdq    
  40bfb0:	xchg   ebx,eax
  40bfb1:	mov    ebx,0x858eef6e
  40bfb6:	cmc    
  40bfb7:	xor    eax,0x176c70f0
  40bfbc:	xor    ch,bl
  40bfbe:	outs   dx,DWORD PTR ds:[esi]
  40bfbf:	push   es
  40bfc0:	int    0xa5
  40bfc2:	int3   
  40bfc3:	arpl   WORD PTR [esi],dx
  40bfc5:	cmp    ecx,DWORD PTR [ecx+eiz*1-0x1910aed2]
  40bfcc:	fsubr  st(0),st
  40bfce:	lods   al,BYTE PTR ds:[esi]
  40bfcf:	xchg   ecx,eax
  40bfd0:	inc    esi
  40bfd1:	dec    edi
  40bfd2:	xchg   ebp,eax
  40bfd3:	dec    ebx
  40bfd4:	mov    eax,0x2e753490
  40bfd9:	adc    ecx,DWORD PTR [esp+eax*1-0xa9d31a9]
  40bfe0:	sbb    edi,DWORD PTR [ecx+0x6]
  40bfe3:	mov    ch,0x50
  40bfe5:	jbe    0x40bfb7
  40bfe7:	jae    0x40bfd4
  40bfe9:	call   0x1aa1:0xf444af8f
  40bff0:	inc    ecx
  40bff1:	xchg   ebp,eax
  40bff2:	add    DWORD PTR [edx+eax*4-0x6f],ebp
  40bff6:	in     eax,0x83
  40bff8:	or     edx,DWORD PTR [edx+edi*2-0x63]
  40bffc:	cmp    al,0x41
  40bffe:	add    ebp,DWORD PTR [edx]
  40c000:	sub    ah,ch
  40c002:	fs mov esp,0xfc77478b
  40c008:	pop    ecx
  40c009:	ret    
  40c00a:	or     eax,0xdf79301
  40c00f:	inc    esp
  40c010:	pushf  
  40c011:	xor    al,0x37
  40c013:	cs out dx,eax
  40c015:	cwde   
  40c016:	repnz sub cl,BYTE PTR [edi-0x71e14e17]
  40c01d:	in     eax,dx
  40c01e:	out    dx,al
  40c01f:	and    dh,0x9d
  40c022:	xchg   edi,eax
  40c023:	sti    
  40c024:	jns    0x40bfaa
  40c026:	int3   
  40c027:	sbb    DWORD PTR [edx],ebp
  40c029:	mov    WORD PTR [ebx],ss
  40c02b:	adc    edx,0x9c4c3c9f
  40c031:	repnz stc 
  40c033:	inc    edi
  40c034:	scas   eax,DWORD PTR es:[edi]
  40c035:	imul   DWORD PTR [esi]
  40c037:	sbb    BYTE PTR [edi+0x50],al
  40c03a:	nop
  40c03b:	mov    dl,BYTE PTR [edx+edx*4-0x393926d7]
  40c042:	and    DWORD PTR [ebx+0x49835a31],esi
  40c048:	adc    DWORD PTR [edi+0x2],ebp
  40c04b:	fisttp WORD PTR [esi-0x387898b9]
  40c051:	pop    eax
  40c052:	push   ecx
  40c053:	mov    ah,0xd5
  40c055:	cli    
  40c056:	ss pushf 
  40c058:	outs   dx,BYTE PTR ds:[esi]
  40c059:	inc    esi
  40c05a:	push   ecx
  40c05b:	dec    ebx
  40c05c:	cmp    bh,BYTE PTR [esp+ebx*1]
  40c05f:	aas    
  40c060:	push   edi
  40c061:	xor    dh,al
  40c063:	data16 ja 0x40bffb
  40c066:	cs xchg edi,eax
  40c068:	jb     0x40c089
  40c06a:	popa   
  40c06b:	xchg   BYTE PTR [eax+0x18fd23f5],dl
  40c071:	jl     0x40c00d
  40c073:	xor    dh,BYTE PTR [ecx+edi*1+0x5a052e8b]
  40c07a:	test   DWORD PTR [esi+eiz*2-0x48],ebp
  40c07e:	loope  0x40c0db
  40c080:	adc    DWORD PTR [eax-0x1c2e8183],ebp
  40c086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c087:	pop    ds
  40c088:	ret    0xdfcb
  40c08b:	mov    eax,0x37c60df4
  40c090:	mov    ds:0xe49b834f,al
  40c095:	or     BYTE PTR [esp+ecx*2],dl
  40c098:	or     ch,BYTE PTR [eax]
  40c09a:	mov    ds,esi
  40c09c:	fcmovbe st,st(5)
  40c09e:	rol    DWORD PTR [esi-0x4a943407],0x55
  40c0a5:	inc    ecx
  40c0a6:	mov    ebx,0xafbbdd32
  40c0ab:	adc    al,0x3d
  40c0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ae:	cdq    
  40c0af:	cwde   
  40c0b0:	add    eax,0xa18d3381
  40c0b5:	pmaxub mm3,mm5
  40c0b8:	mov    ds:0x2ddf8674,eax
  40c0bd:	pop    edx
  40c0be:	std    
  40c0bf:	mov    WORD PTR [eax+0x642fd959],?
  40c0c5:	xchg   esi,eax
  40c0c6:	xchg   ebp,eax
  40c0c7:	repnz or BYTE PTR [eax],ch
  40c0ca:	ins    DWORD PTR es:[edi],dx
  40c0cb:	cmp    ah,BYTE PTR [eax+edi*8]
  40c0ce:	es out 0xcf,al
  40c0d1:	ror    BYTE PTR [eax],0x23
  40c0d4:	jle    0x40c083
  40c0d6:	iret   
  40c0d7:	dec    edi
  40c0d8:	in     eax,0x5c
  40c0da:	mov    eax,ds:0xa166685f
  40c0df:	adc    bh,BYTE PTR [ecx+eiz*8+0x70]
  40c0e3:	pop    es
  40c0e4:	mov    ds:0x3bfc18d2,eax
  40c0e9:	adc    cl,BYTE PTR [edx-0x5ceb632c]
  40c0ef:	xchg   ebx,eax
  40c0f0:	jmp    0x7e22:0xd6a633bd
  40c0f7:	cmp    cl,BYTE PTR [ebx+0x7a54ddb3]
  40c0fd:	mov    ds:0x2bb4b848,al
  40c102:	clc    
  40c103:	fidivr DWORD PTR [eax+0x62]
  40c106:	(bad)  
  40c107:	in     eax,0x57
  40c109:	sub    dh,al
  40c10b:	ins    BYTE PTR es:[edi],dx
  40c10c:	adc    eax,0xc9238016
  40c111:	mov    ecx,0x3d83a6c2
  40c116:	pop    ebx
  40c117:	add    al,0xcb
  40c119:	in     al,dx
  40c11a:	push   ebx
  40c11b:	(bad)  
  40c11c:	ret    
  40c11d:	in     al,0xa1
  40c11f:	sbb    eax,0x3bfaf87f
  40c124:	or     al,0xa6
  40c126:	aas    
  40c127:	and    DWORD PTR [eax+0x7844b34b],ecx
  40c12d:	or     edx,DWORD PTR [ebp-0x4f]
  40c130:	push   ss
  40c131:	int3   
  40c132:	icebp  
  40c133:	cmp    al,0x30
  40c135:	pop    ecx
  40c136:	xchg   ecx,eax
  40c137:	sbb    eax,0x758297d9
  40c13c:	mov    eax,0x47b8f972
  40c141:	cld    
  40c142:	es sub dl,bl
  40c145:	inc    eax
  40c146:	aaa    
  40c147:	fmul   st,st(1)
  40c149:	sbb    DWORD PTR [eax+0x72],ecx
  40c14c:	add    al,0x1e
  40c14e:	je     0x40c15a
  40c150:	ret    0x7398
  40c153:	push   0x5c
  40c155:	int    0x2c
  40c157:	pop    es
  40c158:	sti    
  40c159:	mov    al,ds:0x66cba32a
  40c15e:	mov    ah,al
  40c160:	lods   eax,DWORD PTR ds:[esi]
  40c161:	xchg   BYTE PTR [ebx+0x619f7239],dh
  40c167:	enter  0xbf15,0x44
  40c16b:	cmp    ebx,DWORD PTR [ecx+0x41]
  40c16e:	loop   0x40c0f6
  40c170:	rcr    DWORD PTR [ebx+0x5a],cl
  40c173:	retf   0x633
  40c176:	pop    ebp
  40c177:	retf   
  40c178:	pop    ebx
  40c179:	cmp    BYTE PTR [ebp-0x68f07a41],bh
  40c17f:	mov    ds:0x2871d648,eax
  40c184:	pop    ds
  40c185:	mov    edi,0x78edb8fe
  40c18a:	mov    eax,0x9bbacbac
  40c18f:	mov    ebx,0x73007939
  40c194:	cmp    dh,BYTE PTR [edi]
  40c196:	inc    edx
  40c197:	jb     0x40c124
  40c199:	ins    DWORD PTR es:[edi],dx
  40c19a:	lahf   
  40c19b:	push   ss
  40c19c:	xchg   ebx,eax
  40c19d:	jg     0x40c149
  40c19f:	or     al,0x4
  40c1a1:	loopne 0x40c20c
  40c1a3:	sub    BYTE PTR [edx],ch
  40c1a5:	out    dx,al
  40c1a6:	gs pushw 0x9bf9
  40c1ab:	and    al,BYTE PTR [ebp-0x77c0e728]
  40c1b1:	xchg   BYTE PTR [edx+0x66],dh
  40c1b4:	int3   
  40c1b5:	sbb    ebx,0xbe456192
  40c1bb:	add    BYTE PTR [ecx+eax*1+0x12],ch
  40c1bf:	mov    al,0x50
  40c1c1:	call   0xf1116543
  40c1c6:	fwait
  40c1c7:	mov    cl,0xa7
  40c1c9:	icebp  
  40c1ca:	sbb    dh,dh
  40c1cc:	stc    
  40c1cd:	jl     0x40c16a
  40c1cf:	(bad)  
  40c1d0:	jb     0x40c24e
  40c1d2:	clc    
  40c1d3:	cwde   
  40c1d4:	pushf  
  40c1d5:	outs   dx,BYTE PTR ds:[esi]
  40c1d6:	dec    edx
  40c1d7:	ins    DWORD PTR es:[edi],dx
  40c1d8:	out    dx,eax
  40c1d9:	cli    
  40c1da:	sub    BYTE PTR [ebp+0x3],bh
  40c1dd:	hlt    
  40c1de:	pop    es
  40c1df:	loopne 0x40c250
  40c1e1:	inc    ebp
  40c1e2:	test   al,0x27
  40c1e4:	jmp    0x40c1f2
  40c1e6:	cmp    edx,DWORD PTR [esi]
  40c1e8:	adc    BYTE PTR [ebp+0x40],ch
  40c1eb:	cli    
  40c1ec:	lock xor BYTE PTR [ecx],ch
  40c1ef:	dec    edi
  40c1f0:	sub    eax,0xb970bec0
  40c1f5:	mov    eax,ds:0xfc1b0334
  40c1fa:	xor    bl,ch
  40c1fc:	mov    al,0x7d
  40c1fe:	add    BYTE PTR [esi],dh
  40c200:	mov    eax,0x11ffc2cc
  40c205:	ins    BYTE PTR es:[edi],dx
  40c206:	and    DWORD PTR [eax],esi
  40c208:	pusha  
  40c209:	frstor [esp+ecx*8+0x7256bd6d]
  40c210:	and    ebx,eax
  40c212:	(bad)  
  40c213:	pop    ecx
  40c214:	repz sub DWORD PTR [edi],eax
  40c217:	dec    esp
  40c218:	pop    eax
  40c219:	pop    es
  40c21a:	dec    ebx
  40c21b:	inc    esi
  40c21c:	retf   
  40c21d:	les    esp,FWORD PTR [edx+0x13]
  40c220:	mov    bl,0x50
  40c222:	inc    esp
  40c223:	(bad)  
  40c224:	outs   dx,BYTE PTR ds:[esi]
  40c225:	push   0x39
  40c227:	in     al,0x8e
  40c229:	(bad)  
  40c22a:	stos   BYTE PTR es:[edi],al
  40c22b:	je     0x40c272
  40c22d:	push   es
  40c22e:	cmp    eax,esi
  40c230:	cmp    ch,BYTE PTR [edx+ecx*4-0x5c]
  40c234:	cmp    eax,0xe53b6e71
  40c239:	pop    esi
  40c23a:	iret   
  40c23b:	sbb    al,BYTE PTR [ebp+0x2a]
  40c23e:	and    eax,0x29e0b991
  40c243:	call   FWORD PTR [edx+0x39d104ae]
  40c249:	lds    ecx,FWORD PTR [edi-0x43]
  40c24c:	sbb    dl,BYTE PTR [edx+0x44c5a512]
  40c252:	jecxz  0x40c2cf
  40c254:	dec    edi
  40c255:	pop    ebp
  40c256:	lods   al,BYTE PTR ds:[esi]
  40c257:	jmp    0x74fab75d
  40c25c:	push   esi
  40c25d:	cld    
  40c25e:	pop    esp
  40c25f:	inc    edx
  40c260:	dec    ecx
  40c261:	or     al,0x7
  40c263:	arpl   sp,cx
  40c265:	(bad)  
  40c266:	int    0x6f
  40c268:	ds ret 
  40c26a:	fist   DWORD PTR [esi-0x43]
  40c26d:	stos   DWORD PTR es:[edi],eax
  40c26e:	sbb    bh,BYTE PTR [edx-0x188d1c9b]
  40c274:	lea    ebp,[ebx+0x4f42ea47]
  40c27a:	inc    edx
  40c27b:	add    BYTE PTR [esi],bl
  40c27d:	sahf   
  40c27e:	ss cli 
  40c280:	jmp    0x2a9a:0xfd0301eb
  40c287:	add    al,0xa9
  40c289:	push   ecx
  40c28a:	mov    ds:0x1d3de940,al
  40c28f:	loope  0x40c240
  40c291:	in     eax,0x83
  40c293:	sbb    ah,BYTE PTR [ecx-0x4e5935af]
  40c299:	popf   
  40c29a:	ficom  WORD PTR [esi-0x7bdf02eb]
  40c2a0:	shl    DWORD PTR [edi],1
  40c2a2:	adc    al,0xb5
  40c2a4:	xor    ecx,DWORD PTR [edx-0x15b482f7]
  40c2aa:	ss push ss
  40c2ac:	jne    0x40c316
  40c2ae:	xor    eax,0x52675107
  40c2b3:	mov    ebp,0xefc3f8f6
  40c2b8:	hlt    
  40c2b9:	push   ds
  40c2ba:	into   
  40c2bb:	test   eax,0x2bb563d9
  40c2c0:	mov    ds:0xb38cb43c,al
  40c2c5:	daa    
  40c2c6:	pop    ss
  40c2c7:	pop    ebx
  40c2c8:	sbb    al,0xd8
  40c2ca:	and    ecx,DWORD PTR [edi]
  40c2cc:	sub    dl,dl
  40c2ce:	pop    esp
  40c2cf:	xchg   ebp,eax
  40c2d0:	loopne 0x40c25e
  40c2d2:	es or  al,al
  40c2d5:	lds    edi,FWORD PTR [esi+0x4e62c9aa]
  40c2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2dc:	mov    ebx,0xc0d88ade
  40c2e1:	jl     0x40c2e7
  40c2e3:	sbb    ecx,DWORD PTR [esi+0x19]
  40c2e6:	mov    ?,WORD PTR [ebp+ecx*1+0x4e]
  40c2ea:	test   al,0xc6
  40c2ec:	cmp    cl,BYTE PTR [ecx+0x49]
  40c2ef:	mov    DWORD PTR [ecx+ebp*8-0x234e1f98],esp
  40c2f6:	shl    BYTE PTR [eax-0x55],cl
  40c2f9:	in     eax,dx
  40c2fa:	outs   dx,BYTE PTR ds:[esi]
  40c2fb:	mov    dl,0xac
  40c2fd:	fmul   st,st(5)
  40c2ff:	ror    BYTE PTR [edx-0x77b8fe14],cl
  40c305:	push   es
  40c306:	in     eax,dx
  40c307:	call   0xdc12:0xa08ac5fd
  40c30e:	mov    eax,ds:0xf6b9d90b
  40c313:	jecxz  0x40c2b7
  40c315:	jnp    0x40c341
  40c317:	scas   al,BYTE PTR es:[edi]
  40c318:	lahf   
  40c319:	jno    0x40c357
  40c31b:	mov    BYTE PTR [ecx],cl
  40c31d:	fldenv [esi+0x6bfaf3ad]
  40c323:	jmp    0x740a:0xffbb90
  40c32a:	pushf  
  40c32b:	lock pop edi
  40c32d:	in     eax,dx
  40c32e:	stos   DWORD PTR es:[edi],eax
  40c32f:	push   0x10
  40c331:	aaa    
  40c332:	ret    0x7996
  40c335:	and    al,0x4f
  40c337:	xor    al,BYTE PTR [edi-0x1b9882d3]
  40c33d:	and    eax,0x43be2e9a
  40c342:	jecxz  0x40c2c9
  40c344:	enter  0x1833,0xd3
  40c348:	mov    esp,0xde942429
  40c34d:	pop    ds
  40c34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c34f:	loope  0x40c309
  40c351:	mov    DWORD PTR [edi-0xfb6290c],esp
  40c357:	push   cs
  40c358:	pusha  
  40c359:	ins    BYTE PTR es:[edi],dx
  40c35a:	ins    DWORD PTR es:[edi],dx
  40c35b:	mov    ebp,0x4413c52f
  40c360:	xor    eax,0x7f44fd85
  40c365:	push   cs
  40c366:	imul   edx,DWORD PTR [ecx+0x721e088a],0xb2839265
  40c370:	pop    edx
  40c371:	and    DWORD PTR [esi+0x14],edx
  40c374:	neg    BYTE PTR [ebx+0x58]
  40c377:	or     esp,DWORD PTR [eax-0x22]
  40c37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37b:	push   eax
  40c37c:	int3   
  40c37d:	adc    DWORD PTR [edi+0x2b],esp
  40c380:	pusha  
  40c381:	adc    BYTE PTR [eax+0x43e475ec],0xcf
  40c388:	cld    
  40c389:	call   0x23b4:0x376654b2
  40c390:	(bad)  
  40c392:	xor    eax,0x14d01986
  40c397:	push   esi
  40c398:	inc    ebp
  40c399:	push   0xffffffca
  40c39b:	push   ebp
  40c39c:	in     al,0xb9
  40c39e:	fild   WORD PTR [edx]
  40c3a0:	imul   ebp,DWORD PTR [edi],0xffffffa1
  40c3a3:	loopne 0x40c398
  40c3a5:	stos   BYTE PTR es:[edi],al
  40c3a6:	sbb    ecx,0xd617b7f3
  40c3ac:	pop    ecx
  40c3ad:	or     al,dh
  40c3af:	xor    al,0x4a
  40c3b1:	pop    ebp
  40c3b2:	rcl    DWORD PTR [esi],0x56
  40c3b5:	sbb    al,dl
  40c3b7:	xchg   DWORD PTR [edi],eax
  40c3b9:	sub    DWORD PTR [edi+0x6362508],0x15
  40c3c0:	cli    
  40c3c1:	push   edi
  40c3c2:	cwde   
  40c3c3:	sbb    eax,0xbaaa4b4
  40c3c8:	int3   
  40c3c9:	inc    ebx
  40c3ca:	xchg   edi,eax
  40c3cb:	mov    ah,0x31
  40c3cd:	xor    edi,DWORD PTR [ebx+0x26c5ff2f]
  40c3d3:	test   BYTE PTR [eax+0x46],dh
  40c3d6:	push   esi
  40c3d7:	cli    
  40c3d8:	jg     0x40c379
  40c3da:	mov    al,ds:0x627b621b
  40c3df:	dec    esi
  40c3e0:	adc    BYTE PTR ds:0xb59375e2,bh
  40c3e6:	mov    ecx,0xad3e2c55
  40c3eb:	dec    edx
  40c3ec:	push   edx
  40c3ed:	xchg   esp,eax
  40c3ee:	or     DWORD PTR [ebx-0x79],ebp
  40c3f1:	jmp    0x1ff71233
  40c3f6:	pushaw 
  40c3f8:	mov    cl,0xa1
  40c3fa:	mov    cl,0x9e
  40c3fc:	popa   
  40c3fd:	outs   dx,DWORD PTR ds:[esi]
  40c3fe:	cs je  0x40c3da
  40c401:	icebp  
  40c402:	push   ss
  40c403:	js     0x40c39e
  40c405:	loop   0x40c39b
  40c407:	into   
  40c408:	sahf   
  40c409:	cmp    ebx,DWORD PTR [ebx+ecx*4]
  40c40c:	iret   
  40c40d:	push   cs
  40c40e:	retf   0xa40e
  40c411:	sub    ah,al
  40c413:	nop
  40c414:	leave  
  40c415:	adc    DWORD PTR [edx+0x8e3b262],ecx
  40c41b:	jmp    0xdde9456a
  40c420:	inc    eax
  40c421:	loopne 0x40c3ac
  40c423:	and    esi,DWORD PTR [ebx+0x6a]
  40c426:	in     ax,dx
  40c428:	jmp    FWORD PTR [eax]
  40c42a:	pop    edx
  40c42b:	push   ds
  40c42c:	imul   ebx,DWORD PTR [ecx+edi*4+0x44],0x13
  40c431:	cmp    BYTE PTR [edx],bh
  40c433:	dec    edi
  40c434:	in     eax,0x38
  40c436:	xchg   esp,eax
  40c437:	cwde   
  40c438:	mov    edx,0x4347b8a6
  40c43d:	pushf  
  40c43e:	(bad)  
  40c43f:	cmc    
  40c440:	aas    
  40c441:	shl    DWORD PTR [edx+0x209269cb],1
  40c447:	addr16 and al,0x41
  40c44a:	mov    ds:0x4bf77f69,eax
  40c44f:	ret    
  40c450:	push   ss
  40c451:	dec    ebp
  40c452:	mov    esp,0x67fbf778
  40c457:	cmp    BYTE PTR [edx],ah
  40c459:	stos   DWORD PTR es:[edi],eax
  40c45a:	call   0x6b03:0x6303f2ae
  40c461:	pusha  
  40c462:	cmp    al,0x22
  40c464:	fsubr  DWORD PTR [ebp+0x5b]
  40c467:	mov    ds:0x1c7f1890,eax
  40c46c:	push   es
  40c46d:	test   al,0xd8
  40c46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c470:	mov    ds:0x8d274581,al
  40c475:	fidiv  DWORD PTR [edi-0x62]
  40c478:	pop    ebx
  40c479:	adc    DWORD PTR [ebp+0x63d08908],esi
  40c47f:	retf   
  40c480:	shr    BYTE PTR [eax],0xc9
  40c483:	jne    0x40c4e7
  40c485:	imul   edi,DWORD PTR [ecx+0x63],0x4f923fe4
  40c48c:	mov    edx,0x57a112bc
  40c491:	jle    0x40c459
  40c493:	dec    esi
  40c494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c495:	popf   
  40c496:	push   eax
  40c497:	cmp    DWORD PTR [ecx],esp
  40c499:	lea    esp,[esi-0x63]
  40c49c:	mov    WORD PTR [ecx-0x5a],cs
  40c49f:	or     al,0x6c
  40c4a1:	js     0x40c4aa
  40c4a3:	xor    bl,al
  40c4a5:	fs cld 
  40c4a7:	xchg   ebx,eax
  40c4a8:	or     DWORD PTR ds:0x8859a73b,eax
  40c4ae:	mov    edi,db5
  40c4b1:	mov    BYTE PTR [ebx-0x6ab75ed6],ch
  40c4b7:	jae    0x40c43b
  40c4b9:	stc    
  40c4ba:	retf   
  40c4bb:	cwde   
  40c4bc:	xor    ah,bl
  40c4be:	stc    
  40c4bf:	loop   0x40c4d6
  40c4c1:	sar    bl,1
  40c4c3:	outs   dx,BYTE PTR ds:[esi]
  40c4c4:	adc    edi,DWORD PTR [esi-0x79]
  40c4c7:	mov    ebx,0x8940a7f5
  40c4cc:	jle    0x40c472
  40c4ce:	pop    edi
  40c4cf:	dec    edi
  40c4d0:	dec    esp
  40c4d1:	(bad)  
  40c4d2:	cmc    
  40c4d3:	xor    al,0x86
  40c4d5:	scas   al,BYTE PTR es:[edi]
  40c4d6:	sub    DWORD PTR [ebx+ecx*2+0xcd9bed8],0xffffff85
  40c4de:	jne    0x40c4ef
  40c4e0:	mov    esi,0xa68b7bc6
  40c4e5:	pop    edi
  40c4e6:	push   ss
  40c4e7:	inc    ecx
  40c4e8:	loopne 0x40c513
  40c4ea:	mov    DWORD PTR [esi],edi
  40c4ec:	jbe    0x40c504
  40c4ee:	call   0x935b:0x2bebbca1
  40c4f5:	jmp    0x40c551
  40c4f7:	pushf  
  40c4f8:	or     eax,0x57946494
  40c4fd:	retf   0x7bc8
  40c500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c501:	pop    ecx
  40c502:	sub    eax,0x1b418052
  40c507:	push   ecx
  40c508:	int    0x2d
  40c50a:	mov    bl,0xb6
  40c50c:	jo     0x40c56c
  40c50e:	je     0x40c55e
  40c510:	mov    ah,0xba
  40c512:	ds or  eax,edx
  40c515:	xchg   esp,eax
  40c516:	fisttp DWORD PTR [esp+ebx*1]
  40c519:	(bad)  
  40c51a:	into   
  40c51b:	jmp    0x40c4f3
  40c51d:	int    0x2a
  40c51f:	mov    esp,0x11cf9dee
  40c524:	int    0x22
  40c526:	dec    edx
  40c527:	xor    DWORD PTR [ebx-0x4ff30f7d],0xffffff83
  40c52e:	lds    edx,FWORD PTR [eax+eiz*4-0x63]
  40c532:	jbe    0x40c5a3
  40c534:	inc    edx
  40c535:	cwde   
  40c536:	sub    eax,0x677c511e
  40c53b:	inc    edi
  40c53c:	mov    eax,ds:0xf2a9cd00
  40c541:	aad    0xe0
  40c543:	popa   
  40c544:	leave  
  40c545:	cmp    BYTE PTR [edi-0x2346ff53],0xb7
  40c54c:	popaw  
  40c54e:	rol    DWORD PTR [ebp+0x65],0x86
  40c552:	retf   
  40c553:	lahf   
  40c554:	jge    0x40c575
  40c556:	dec    esi
  40c557:	std    
  40c558:	aad    0xef
  40c55a:	mov    ecx,0xa68dc7a3
  40c55f:	sub    eax,0xcd552ae2
  40c564:	aam    0xf5
  40c566:	pop    esp
  40c567:	sbb    al,BYTE PTR [edx-0x1f]
  40c56a:	sub    al,0xd
  40c56c:	call   0x12c0531e
  40c571:	and    ecx,ebx
  40c573:	sbb    al,0xd4
  40c575:	push   edi
  40c576:	adc    cl,BYTE PTR [esi+0x3d]
  40c579:	push   0xa
  40c57b:	sub    esi,DWORD PTR [ecx-0x34d3082e]
  40c581:	dec    esi
  40c582:	dec    eax
  40c583:	jmp    0x937ab50d
  40c588:	or     BYTE PTR [eax-0x2f],dh
  40c58b:	xor    dl,BYTE PTR [ebp-0x59]
  40c58e:	clc    
  40c58f:	mov    dh,0xa3
  40c591:	push   0xffffffa4
  40c593:	sti    
  40c594:	mov    ah,BYTE PTR [ebx-0x377067ba]
  40c59a:	jbe    0x40c5f9
  40c59c:	outs   dx,BYTE PTR ds:[esi]
  40c59d:	into   
  40c59e:	mov    ecx,0xd6ba67fd
  40c5a3:	test   dl,cl
  40c5a5:	or     bh,BYTE PTR [edi+edi*2+0x76e351ad]
  40c5ac:	lods   al,BYTE PTR ds:[esi]
  40c5ad:	sti    
  40c5ae:	pop    es
  40c5af:	outs   dx,DWORD PTR ds:[esi]
  40c5b0:	xor    al,0x72
  40c5b2:	jbe    0x40c56d
  40c5b4:	hlt    
  40c5b5:	push   edi
  40c5b6:	lahf   
  40c5b7:	mul    DWORD PTR [eax+eax*1+0x18]
  40c5bb:	clc    
  40c5bc:	call   0x28fa:0xb1ee0a15
  40c5c3:	je     0x40c5ed
  40c5c5:	adc    BYTE PTR [eax+ebx*2+0x3dc53009],dh
  40c5cc:	mov    esp,0xb39d02a
  40c5d1:	pop    ebx
  40c5d2:	push   ds
  40c5d3:	data16 ins BYTE PTR es:[edi],dx
  40c5d5:	fwait
  40c5d6:	xchg   ebp,eax
  40c5d7:	push   eax
  40c5d8:	mov    eax,ds:0x54e5fb1c
  40c5dd:	xor    ebx,ebx
  40c5df:	adc    eax,0x3c327212
  40c5e4:	pop    edi
  40c5e5:	in     al,dx
  40c5e6:	mov    ah,0x67
  40c5e8:	jmp    0x40c570
  40c5ea:	arpl   cx,dx
  40c5ec:	jae    0x40c56e
  40c5ee:	loopne 0x40c5a8
  40c5f0:	xor    al,0xd1
  40c5f2:	jle    0x40c5cb
  40c5f4:	mov    esp,0x4af4a91a
  40c5f9:	pop    ebp
  40c5fa:	cmc    
  40c5fb:	iret   
  40c5fc:	dec    ecx
  40c5fd:	and    esi,eax
  40c5ff:	nop
  40c600:	cmp    DWORD PTR [eax+0x52],ebx
  40c603:	icebp  
  40c604:	jle    0x40c667
  40c606:	mov    cl,0x17
  40c608:	jne    0x40c61d
  40c60a:	pop    esp
  40c60b:	push   es
  40c60c:	sub    dl,BYTE PTR [ecx-0x7c]
  40c60f:	pop    ebx
  40c610:	cmp    ebx,eax
  40c612:	mov    DWORD PTR [ebx-0x1749d588],esi
  40c618:	and    BYTE PTR [edi],ah
  40c61a:	cld    
  40c61b:	cmp    BYTE PTR [ecx+ebp*1+0x188751c2],bh
  40c622:	imul   ecx,DWORD PTR [esi+eax*1+0x7f],0x39cf21af
  40c62a:	mov    bl,0x76
  40c62c:	(bad)  
  40c62d:	xlat   BYTE PTR ds:[ebx]
  40c62e:	push   edi
  40c62f:	jmp    FWORD PTR [ebp+0x61]
  40c632:	pop    esi
  40c633:	jbe    0x40c5ff
  40c635:	dec    ebp
  40c636:	ja     0x40c634
  40c638:	jns    0x40c648
  40c63a:	mov    bl,0xa4
  40c63c:	mov    bl,BYTE PTR [ebp+0x61870bbc]
  40c642:	xlat   BYTE PTR ds:[ebx]
  40c643:	push   ss
  40c644:	push   0x7235c48b
  40c649:	imul   eax,DWORD PTR [ebp+0x37],0xc
  40c64d:	adc    dl,BYTE PTR [edx]
  40c64f:	pop    es
  40c650:	pop    edi
  40c651:	fcom   QWORD PTR [ecx-0x4d]
  40c654:	jle    0x40c649
  40c656:	cli    
  40c657:	fisttp DWORD PTR [edi+0x3d]
  40c65a:	fild   WORD PTR [eax+0x7d1b12e8]
  40c660:	lea    esi,[edx+0xf]
  40c663:	pusha  
  40c664:	and    esp,ecx
  40c666:	popf   
  40c667:	sub    DWORD PTR [ecx+0x7f0a724a],edi
  40c66d:	ficomp WORD PTR [esi-0x78713dfb]
  40c673:	cmp    ah,BYTE PTR [eax]
  40c675:	fbld   TBYTE PTR [ebp+edx*2-0x44ac44ca]
  40c67c:	jae    0x40c63c
  40c67e:	jmp    0xbc876ab0
  40c683:	mov    ch,0x61
  40c685:	ins    BYTE PTR es:[edi],dx
  40c686:	les    edi,FWORD PTR [edi]
  40c688:	add    esp,edi
  40c68a:	jae    0x40c6e4
  40c68c:	push   ecx
  40c68d:	pop    ecx
  40c68e:	out    dx,al
  40c68f:	jne    0x40c70d
  40c691:	xchg   ebx,eax
  40c692:	int3   
  40c693:	mov    ebx,0xe8fb4d2
  40c698:	pop    eax
  40c699:	sbb    cl,ch
  40c69b:	(bad)  
  40c69d:	out    0x42,al
  40c69f:	add    DWORD PTR [edi+0x2],0x827bc5cf
  40c6a6:	mov    ch,0xf
  40c6a8:	call   0xa3cd49ed
  40c6ad:	xor    BYTE PTR ss:[edx+0x21],al
  40c6b1:	sbb    eax,0xd240328c
  40c6b6:	inc    ecx
  40c6b7:	dec    esp
  40c6b8:	pop    esp
  40c6b9:	retf   0xdeae
  40c6bc:	mov    ds:0xdc7d1c95,al
  40c6c1:	inc    ebp
  40c6c2:	pop    edx
  40c6c3:	cld    
  40c6c4:	mov    bl,bl
  40c6c6:	adc    eax,DWORD PTR [esi+ebp*1]
  40c6c9:	ret    
  40c6ca:	mul    BYTE PTR [edi]
  40c6cc:	enter  0xc348,0xe3
  40c6d0:	or     al,0x87
  40c6d2:	dec    ecx
  40c6d3:	mov    ch,0x2e
  40c6d5:	dec    esp
  40c6d6:	sbb    esp,DWORD PTR [edx-0x2]
  40c6d9:	mov    bl,0xab
  40c6db:	add    al,0xc3
  40c6dd:	ficom  DWORD PTR [esi]
  40c6df:	xor    DWORD PTR [esp+eiz*2-0x2535bede],0xffffffbd
  40c6e7:	fist   DWORD PTR [ebx+0x32]
  40c6ea:	jle    0x40c687
  40c6ec:	scas   eax,DWORD PTR es:[edi]
  40c6ed:	jmp    0x40c756
  40c6ef:	pop    ebx
  40c6f0:	fist   WORD PTR [esi+0x261dc475]
  40c6f6:	and    eax,0x7f3babfe
  40c6fb:	and    al,0xa9
  40c6fd:	mov    dh,0x1e
  40c6ff:	add    BYTE PTR [ecx+0x16973dcc],ch
  40c705:	inc    ebp
  40c706:	cmp    ch,0x7c
  40c709:	push   es
  40c70a:	jo     0x40c698
  40c70c:	jae    0x40c725
  40c70e:	cli    
  40c70f:	mov    bl,0x2
  40c711:	mov    eax,0x7360a289
  40c716:	push   edx
  40c718:	mov    al,cl
  40c71a:	sbb    dl,BYTE PTR [ebx+0x42958c9e]
  40c720:	adc    DWORD PTR [edi],ebx
  40c722:	out    0x10,eax
  40c724:	mov    ch,0x7b
  40c726:	inc    eax
  40c727:	add    al,0xed
  40c729:	mov    dl,0xf1
  40c72b:	pop    ebx
  40c72c:	std    
  40c72d:	or     BYTE PTR [eax],cl
  40c72f:	outs   dx,DWORD PTR ds:[esi]
  40c730:	imul   dh
  40c732:	mul    BYTE PTR [edx+0x5985c437]
  40c738:	(bad)  [ebx]
  40c73a:	cdq    
  40c73b:	stos   DWORD PTR es:[edi],eax
  40c73c:	mov    WORD PTR [edi+0x70],cs
  40c73f:	mov    BYTE PTR [ebp+ebp*2-0x42],dl
  40c743:	mov    ah,0x3c
  40c745:	xor    eax,0x8fa62908
  40c74a:	mov    bl,0x27
  40c74c:	cmp    al,0xb8
  40c74e:	inc    edi
  40c74f:	(bad)  
  40c750:	xor    dh,BYTE PTR [ebp+ebx*1+0x2d]
  40c754:	sub    ecx,esi
  40c756:	fnsave [edi]
  40c758:	adc    dl,bh
  40c75a:	lea    esi,[edx]
  40c75c:	test   al,0xa4
  40c75f:	or     ebp,DWORD PTR ds:0x4b9f6b4f
  40c765:	cdq    
  40c766:	es jle 0x40c793
  40c769:	dec    esp
  40c76a:	test   DWORD PTR [ebp-0x7c],edi
  40c76d:	repz (bad) 
  40c76f:	push   edi
  40c770:	mov    bl,0x9e
  40c772:	ds sbb cl,ah
  40c775:	and    BYTE PTR [ebx],dl
  40c777:	icebp  
  40c778:	(bad)  
  40c779:	push   0x6a2994b4
  40c77e:	and    BYTE PTR ds:0xd45d4df5,al
  40c784:	aaa    
  40c785:	mov    al,ds:0xba77926d
  40c78a:	sub    DWORD PTR [eax-0x51523304],ebp
  40c790:	jmp    0xef7555f9
  40c795:	pop    edi
  40c796:	and    al,BYTE PTR [esi+eax*1-0x7ca3bbdf]
  40c79d:	jae    0x40c749
  40c79f:	pop    esp
  40c7a0:	out    dx,eax
  40c7a1:	push   ecx
  40c7a2:	hlt    
  40c7a3:	mov    ebx,0x90792693
  40c7a8:	jne    0x40c791
  40c7aa:	dec    edx
  40c7ac:	sbb    BYTE PTR [edi+0x1ff194e1],bl
  40c7b2:	push   ecx
  40c7b3:	adc    eax,0xf710a86a
  40c7b8:	dec    edx
  40c7b9:	xchg   ebx,eax
  40c7ba:	inc    edx
  40c7bb:	js     0x40c770
  40c7bd:	mov    eax,0x4975c30
  40c7c2:	jg     0x40c771
  40c7c4:	(bad)  
  40c7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c6:	cmp    DWORD PTR [ebx-0x244d6894],edx
  40c7cc:	push   esp
  40c7cd:	ret    
  40c7ce:	popf   
  40c7cf:	cmp    DWORD PTR [ecx+esi*8-0x18],esp
  40c7d3:	aaa    
  40c7d4:	(bad)
  40c7d8:	mov    DWORD PTR [eax-0x420c8780],ebx
  40c7de:	mov    cl,0x8d
  40c7e0:	cmp    edx,DWORD PTR [eax+0x7b]
  40c7e3:	(bad)  
  40c7e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7e5:	clc    
  40c7e6:	pusha  
  40c7e7:	xchg   edi,eax
  40c7e8:	push   eax
  40c7e9:	add    DWORD PTR [ebx+0x7e],eax
  40c7ec:	inc    edx
  40c7ed:	xor    esi,ecx
  40c7ef:	sti    
  40c7f0:	xchg   ecx,eax
  40c7f1:	push   0xffffffba
  40c7f3:	daa    
  40c7f4:	dec    esi
  40c7f5:	(bad)  
  40c7f6:	das    
  40c7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7f8:	(bad)  
  40c7f9:	adc    DWORD PTR [ecx-0x2c],ebp
  40c7fc:	xchg   esp,eax
  40c7fd:	jge    0x40c7ec
  40c7ff:	not    DWORD PTR [esi+ecx*1-0x6f5dda8c]
  40c806:	xchg   edi,eax
  40c807:	aad    0xfc
  40c809:	pop    edx
  40c80a:	jns    0x40c83c
  40c80c:	mov    ds:0x9d836809,eax
  40c811:	inc    esi
  40c812:	push   0xffffffbc
  40c814:	fcomp  QWORD PTR [ebp+0x7a]
  40c817:	outs   dx,BYTE PTR ds:[esi]
  40c818:	mov    ebx,0x80c078b5
  40c81d:	jae    0x40c875
  40c81f:	mov    edi,0x5756107b
  40c824:	es dec ecx
  40c826:	mov    ebp,ebx
  40c828:	mov    bh,0xbd
  40c82a:	or     DWORD PTR [ecx+0x2a],eax
  40c82d:	data16 (bad) 
  40c82f:	retf   
  40c830:	xchg   DWORD PTR [ebx-0xd9f1b9],eax
  40c836:	xchg   edx,eax
  40c837:	je     0x40c7d6
  40c839:	std    
  40c83a:	(bad)  
  40c83b:	enter  0x2bd2,0x67
  40c83f:	inc    BYTE PTR [eax]
  40c841:	jge    0x40c81f
  40c843:	out    0xed,al
  40c845:	push   0xffffffd1
  40c847:	mov    esp,0x1dce7780
  40c84c:	jo     0x40c82b
  40c84e:	retf   
  40c84f:	mov    bh,0xdf
  40c851:	ss jecxz 0x40c85a
  40c854:	pop    edx
  40c855:	sub    ebx,edi
  40c857:	pavgw  mm2,QWORD PTR ds:0x7ceb8b42
  40c85e:	les    edx,FWORD PTR [eax-0x73]
  40c861:	fs xchg edi,eax
  40c863:	xchg   edx,eax
  40c864:	pop    ecx
  40c865:	dec    ebx
  40c866:	std    
  40c867:	sub    al,BYTE PTR [ecx+0x30c0bd36]
  40c86d:	mov    esi,0x17938ed4
  40c872:	ficomp DWORD PTR [eax-0x478f309b]
  40c878:	mov    al,ds:0x4b330ad
  40c87d:	mov    edi,0x565a9d51
  40c882:	add    cl,al
  40c884:	sar    BYTE PTR [esi+0x64],cl
  40c887:	(bad)  
  40c889:	dec    eax
  40c88a:	mov    bl,0xd3
  40c88c:	inc    esp
  40c88d:	mov    cl,BYTE PTR ds:0xc746cb2c
  40c893:	xchg   edi,eax
  40c894:	jge    0x40c839
  40c896:	int    0x7e
  40c898:	ja     0x40c8d9
  40c89a:	mov    ebx,0xabdaa2b1
  40c89f:	sbb    eax,0x10757162
  40c8a4:	ja     0x40c882
  40c8a6:	std    
  40c8a7:	mov    al,ds:0x9c4cb9bd
  40c8ac:	scas   al,BYTE PTR es:[edi]
  40c8ad:	xor    ch,BYTE PTR [edx]
  40c8af:	jmp    ebx
  40c8b1:	(bad)  
  40c8b2:	dec    ecx
  40c8b3:	mov    ah,0x5e
  40c8b5:	cmp    al,BYTE PTR [edi+0x2b457cdc]
  40c8bb:	inc    edx
  40c8bc:	arpl   di,ax
  40c8be:	jge    0x40c87e
  40c8c0:	iret   
  40c8c1:	cs pop es
  40c8c3:	aam    0x9d
  40c8c5:	scas   eax,DWORD PTR es:[edi]
  40c8c6:	mov    BYTE PTR [ebp-0x18],al
  40c8c9:	int    0x72
  40c8cb:	jg     0x40c8d4
  40c8cd:	sahf   
  40c8ce:	xor    esp,DWORD PTR [eax+0x6a18cae3]
  40c8d4:	push   esp
  40c8d5:	out    0xfc,eax
  40c8d7:	add    ebp,edi
  40c8d9:	sahf   
  40c8da:	aad    0xf8
  40c8dc:	sub    eax,0xa8873bbc
  40c8e1:	push   ebx
  40c8e2:	xchg   edi,eax
  40c8e3:	outs   dx,BYTE PTR ds:[esi]
  40c8e4:	sub    eax,0x67e33a0
  40c8e9:	fnsave [ebp-0x27418968]
  40c8ef:	fistp  QWORD PTR [ebx]
  40c8f1:	outs   dx,BYTE PTR ds:[esi]
  40c8f2:	(bad)  
  40c8f5:	fs jp  0x40c8ae
  40c8f8:	or     ax,0x4fee
  40c8fc:	jo     0x40c8b8
  40c8fe:	mov    bl,0xc6
  40c900:	fadd   st(5),st
  40c902:	cld    
  40c903:	out    dx,al
  40c904:	xor    eax,ebp
  40c906:	xor    eax,0xdf8a8ed5
  40c90b:	add    BYTE PTR [ecx-0x10bbc4fe],0x72
  40c912:	push   ebp
  40c913:	dec    ebp
  40c914:	cwde   
  40c915:	push   ebp
  40c916:	xchg   esi,eax
  40c917:	push   edx
  40c918:	pop    edx
  40c919:	xor    DWORD PTR [ebx-0x3],esi
  40c91c:	loope  0x40c8b6
  40c91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c91f:	pop    ecx
  40c920:	and    DWORD PTR [edi+ebx*4],ebp
  40c923:	jns    0x40c97c
  40c925:	test   al,0x40
  40c927:	dec    ecx
  40c928:	aas    
  40c929:	sub    al,0x53
  40c92b:	push   eax
  40c92c:	fbstp  TBYTE PTR [esi-0x18]
  40c92f:	sub    ch,BYTE PTR [ebp+0x5df15cfb]
  40c935:	pop    es
  40c936:	pop    ds
  40c937:	stc    
  40c938:	das    
  40c939:	fnstenv [esi]
  40c93b:	das    
  40c93c:	std    
  40c93d:	stos   DWORD PTR es:[edi],eax
  40c93e:	imul   ebx,DWORD PTR [ebx+eax*8+0x41],0xde260aa0
  40c946:	cmc    
  40c947:	shl    DWORD PTR [ebx-0xe],0xe
  40c94b:	shl    DWORD PTR [esi+ecx*2-0x711009e8],cl
  40c952:	mov    ss,ebp
  40c954:	sti    
  40c955:	push   esi
  40c956:	and    BYTE PTR [edi-0x64],cl
  40c959:	jecxz  0x40c946
  40c95b:	adc    ah,BYTE PTR [esp+edx*4-0x23]
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x30364ca3]
  40d00c:	cdq    
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	mov    BYTE PTR [ebx-0x7f92bb3c],ch
  40d01b:	sub    DWORD PTR cs:[eax+0x1d],ecx
  40d01f:	jno    0x40d07b
  40d021:	cmp    al,0x60
  40d023:	jnp    0x40d020
  40d025:	stc    
  40d026:	dec    esp
  40d027:	(bad)  
  40d028:	cmp    esi,DWORD PTR [edx]
  40d02a:	test   BYTE PTR [eax],cl
  40d02c:	fst    QWORD PTR [ebx-0x4eb73ed5]
  40d032:	(bad)  
  40d033:	adc    eax,0x78c33ab2
  40d038:	pop    edx
  40d039:	test   al,0x4c
  40d03b:	in     al,0x8b
  40d03d:	les    ebp,FWORD PTR [edi+edx*8]
  40d040:	mov    dl,0x79
  40d042:	cdq    
  40d043:	cmp    ebx,DWORD PTR [ecx+esi*2-0x6167ba3e]
  40d04a:	dec    ebp
  40d04b:	sub    BYTE PTR [ebx],ch
  40d04d:	popf   
  40d04e:	call   0x2382:0x31c41643
  40d055:	lods   eax,DWORD PTR ds:[esi]
  40d056:	push   edi
  40d057:	div    BYTE PTR [ecx]
  40d059:	repnz cmp DWORD PTR [eax],edi
  40d05c:	jns    0x40d0bb
  40d05e:	mov    al,ds:0xc7c7f211
  40d063:	mov    edi,0x7919bb1
  40d068:	push   0xade62481
  40d06d:	dec    ecx
  40d06e:	das    
  40d06f:	jnp    0x40d08f
  40d071:	inc    edi
  40d072:	push   ebp
  40d073:	daa    
  40d074:	dec    ebx
  40d075:	sbb    ebx,0x6d10d897
  40d07b:	jmp    0x40d0c5
  40d07d:	(bad)  
  40d07e:	dec    ebx
  40d07f:	inc    eax
  40d080:	aaa    
  40d081:	test   dh,al
  40d083:	fs dec edx
  40d085:	ja     0x40d07d
  40d087:	xor    BYTE PTR [ebx-0x7fcf5ffe],bh
  40d08d:	ret    0xc6df
  40d090:	and    al,dh
  40d092:	and    BYTE PTR [edi],bl
  40d094:	mov    ds:0x3a9843f7,eax
  40d099:	add    ah,bh
  40d09b:	mov    cl,0x14
  40d09d:	sub    eax,0xfe8a8cb7
  40d0a2:	sbb    eax,0x59067213
  40d0a7:	sahf   
  40d0a8:	retf   
  40d0a9:	jo     0x40d090
  40d0ab:	idiv   DWORD PTR [edx]
  40d0ad:	test   DWORD PTR [edx-0x1e],edi
  40d0b0:	icebp  
  40d0b1:	scas   al,BYTE PTR es:[edi]
  40d0b2:	pusha  
  40d0b3:	jg     0x40d047
  40d0b5:	outs   dx,BYTE PTR ds:[esi]
  40d0b6:	pop    ss
  40d0b7:	jno    0x40d0a2
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0bb:	into   
  40d0bc:	mov    ebp,0x475f9f50
  40d0c1:	mov    eax,eax
  40d0c3:	inc    esi
  40d0c4:	push   ecx
  40d0c5:	sahf   
  40d0c6:	dec    edi
  40d0c7:	xor    eax,0x49c7d7a2
  40d0cc:	test   al,cl
  40d0ce:	sti    
  40d0cf:	sub    BYTE PTR [esi+0x7367e260],bl
  40d0d5:	imul   ebp,DWORD PTR [edi],0xffffff90
  40d0d8:	sbb    esi,DWORD PTR [ecx+edx*2+0x11]
  40d0dc:	mov    bh,cl
  40d0de:	in     al,0x55
  40d0e0:	pop    edi
  40d0e1:	pop    ebp
  40d0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e3:	das    
  40d0e4:	pop    eax
  40d0e5:	cmp    BYTE PTR [ebp+0x2f391ecd],dl
  40d0eb:	rol    BYTE PTR [esi+0x2b],1
  40d0ee:	add    DWORD PTR [edi],ebp
  40d0f0:	xchg   DWORD PTR [ebx+0x5f],ecx
  40d0f3:	aaa    
  40d0f4:	or     al,0x6e
  40d0f6:	hlt    
  40d0f7:	dec    edx
  40d0f8:	fs xchg ebp,eax
  40d0fa:	xor    BYTE PTR [edi],dl
  40d0fc:	and    al,0x2e
  40d0fe:	xchg   DWORD PTR [esi],edi
  40d100:	mov    ds:0x31bdd13d,eax
  40d105:	fnsave [ecx+0x1b9aafc0]
  40d10b:	xor    eax,0xcfc3df10
  40d110:	add    eax,0x4ceae24c
  40d115:	mov    al,0xa5
  40d117:	cmp    al,0xdd
  40d119:	pop    edx
  40d11a:	retf   
  40d11b:	adc    edx,DWORD PTR [esp+eiz*2+0x22]
  40d11f:	in     eax,dx
  40d120:	pop    ebp
  40d121:	jle    0x40d0c5
  40d123:	mov    dl,0xf0
  40d125:	xor    esp,DWORD PTR [ebx-0xf7deaeb]
  40d12b:	fistp  QWORD PTR [esi+0x3de4fc34]
  40d131:	ficom  DWORD PTR [ebx+0x6e1a5e50]
  40d137:	das    
  40d138:	or     bl,BYTE PTR ss:[edi-0x5ce704bf]
  40d13f:	mov    WORD PTR [edx+ebp*1+0x3a116459],?
  40d146:	add    BYTE PTR [ebx+ebx*1],ch
  40d149:	and    edi,esp
  40d14b:	jmp    0xac585f4a
  40d150:	cmp    DWORD PTR [edx],ebp
  40d152:	adc    edx,DWORD PTR [edi+eax*2-0x2906ee5]
  40d159:	stc    
  40d15a:	ins    BYTE PTR es:[edi],dx
  40d15b:	cdq    
  40d15c:	int    0x2e
  40d15e:	inc    esp
  40d15f:	psubq  mm7,mm6
  40d162:	jmp    0x34ae:0x67e18371
  40d169:	xchg   esp,eax
  40d16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d16b:	cmc    
  40d16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16d:	fcomp  DWORD PTR [edi]
  40d16f:	in     eax,dx
  40d170:	test   al,0xf7
  40d172:	mov    cs,WORD PTR [ebp-0x6f]
  40d175:	sbb    eax,ecx
  40d177:	xor    al,0xf5
  40d179:	int3   
  40d17a:	inc    ebx
  40d17c:	iret   
  40d17d:	retf   
  40d17e:	(bad)  
  40d17f:	fild   DWORD PTR [esi+0x506a65ed]
  40d185:	and    eax,0x6bcdd91a
  40d18a:	aas    
  40d18b:	add    eax,0x4bf399f
  40d190:	out    dx,eax
  40d191:	sbb    dl,BYTE PTR [ecx]
  40d193:	imul   eax
  40d195:	dec    edi
  40d196:	imul   ebx,ebp,0xffffff8a
  40d199:	jns    0x40d189
  40d19b:	push   edi
  40d19c:	push   0x52d3937c
  40d1a1:	mov    esp,0x3f84c176
  40d1a6:	stos   DWORD PTR es:[edi],eax
  40d1a7:	mov    dh,0xb1
  40d1a9:	xchg   edi,eax
  40d1aa:	ja     0x40d1c5
  40d1ac:	push   ss
  40d1ad:	outs   dx,DWORD PTR ds:[esi]
  40d1ae:	pop    ss
  40d1af:	adc    BYTE PTR [esi+edx*8+0x2eb994ff],dl
  40d1b6:	push   ds
  40d1b7:	adc    al,0xca
  40d1b9:	lock add esp,DWORD PTR [esi+ecx*4+0x15]
  40d1be:	jb     0x40d1ae
  40d1c0:	div    DWORD PTR [esi-0x2e5cb27a]
  40d1c6:	ss dec ecx
  40d1c8:	test   al,0x12
  40d1ca:	arpl   WORD PTR [esi],di
  40d1cc:	pop    esp
  40d1cd:	popa   
  40d1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cf:	xor    BYTE PTR [ecx],0x3a
  40d1d2:	mov    edx,0x1d0fbb08
  40d1d7:	hlt    
  40d1d8:	imul   ebp,DWORD PTR [edx+0x4e],0xa6d0425
  40d1df:	xchg   ecx,eax
  40d1e0:	xchg   DWORD PTR [esi+0x32234aaa],esi
  40d1e6:	dec    ebp
  40d1e7:	mov    ebp,0xd84d7c96
  40d1ec:	cwde   
  40d1ed:	aaa    
  40d1ee:	popa   
  40d1ef:	ins    BYTE PTR es:[edi],dx
  40d1f0:	in     al,0xf8
  40d1f2:	dec    esi
  40d1f3:	xor    bh,BYTE PTR [esi+0x6fd0594a]
  40d1f9:	sub    eax,ecx
  40d1fb:	jns    0x40d1be
  40d1fd:	aas    
  40d1fe:	push   esp
  40d1ff:	fs js  0x40d1cc
  40d202:	push   0x2b55f51f
  40d207:	outs   dx,BYTE PTR ds:[esi]
  40d208:	jo     0x40d200
  40d20a:	shl    BYTE PTR [esi+esi*8-0x684fe56],0xbb
  40d212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d213:	inc    edi
  40d214:	and    BYTE PTR [eax-0x69],bh
  40d217:	add    al,0x5a
  40d219:	lahf   
  40d21a:	adc    edx,DWORD PTR [ebx]
  40d21c:	shl    DWORD PTR [edi+0x5ce70596],cl
  40d222:	dec    DWORD PTR [ebx-0x18f4301f]
  40d228:	xor    al,BYTE PTR [ebx-0x1c111fee]
  40d22e:	daa    
  40d22f:	dec    ecx
  40d230:	sub    BYTE PTR [edx],dl
  40d232:	xchg   esi,eax
  40d233:	loopne 0x40d252
  40d235:	cmp    ebx,DWORD PTR [edi+0x583f0ba7]
  40d23b:	sbb    ecx,DWORD PTR [ecx+edi*2+0x7fbb1f32]
  40d242:	adc    eax,0xa98c4690
  40d247:	xchg   edx,eax
  40d248:	shl    DWORD PTR [ebp-0xa],cl
  40d24b:	cmp    al,0x6
  40d24d:	adc    al,0x64
  40d24f:	ficomp WORD PTR [esi+esi*4]
  40d252:	ficomp WORD PTR [ecx]
  40d254:	xchg   ebp,eax
  40d255:	or     ch,BYTE PTR [esi+ebx*4]
  40d258:	and    DWORD PTR [edi+0x6428c52f],edx
  40d25e:	mov    edi,cs
  40d260:	and    dh,ah
  40d262:	push   esi
  40d263:	dec    di
  40d265:	pop    ds
  40d266:	jb     0x40d238
  40d268:	add    bl,ah
  40d26a:	ins    DWORD PTR es:[edi],dx
  40d26b:	cmp    DWORD PTR [ebp+0x78161074],edx
  40d271:	cmp    eax,DWORD PTR [ebx+0x49d66488]
  40d277:	sub    DWORD PTR [edi+0x4c],ebx
  40d27a:	pop    ecx
  40d27b:	cmp    esi,DWORD PTR [ecx+0x14]
  40d27e:	mov    al,ds:0xedfbc8cd
  40d283:	xor    bl,BYTE PTR [edx+0x7f]
  40d286:	out    0x79,eax
  40d288:	mov    ebx,0x5c11d44e
  40d28d:	out    dx,eax
  40d28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d28f:	sub    al,0x1
  40d291:	xchg   ebp,eax
  40d292:	xchg   esi,eax
  40d293:	test   eax,0x8e0089c6
  40d298:	push   0x9
  40d29a:	pusha  
  40d29b:	sub    edx,DWORD PTR [edi+0x32c69197]
  40d2a1:	retf   0xb54b
  40d2a4:	or     esp,edx
  40d2a6:	jns    0x40d327
  40d2a8:	out    dx,al
  40d2a9:	xor    esi,esp
  40d2ab:	add    ebx,edi
  40d2ad:	add    dh,BYTE PTR [edx-0x3c75f358]
  40d2b3:	jge    0x40d326
  40d2b5:	outs   dx,BYTE PTR ds:[esi]
  40d2b6:	loope  0x40d31e
  40d2b8:	adc    cl,ah
  40d2ba:	sub    BYTE PTR [edx-0x4],cl
  40d2bd:	retf   0xcc60
  40d2c0:	pushf  
  40d2c1:	loop   0x40d276
  40d2c3:	test   DWORD PTR [ebx-0x52b071ef],ebp
  40d2c9:	mov    WORD PTR [edi-0x4ddf55a3],cs
  40d2cf:	mov    dl,0xa9
  40d2d1:	inc    edi
  40d2d2:	cdq    
  40d2d3:	fisub  WORD PTR [edx-0x35]
  40d2d6:	pushf  
  40d2d7:	mov    eax,0x1817267
  40d2dc:	repnz imul edx,eax,0x33a7ed20
  40d2e3:	xor    BYTE PTR [ecx-0xd9b8c7b],al
  40d2e9:	mov    edx,0xb482739c
  40d2ee:	mov    eax,ds:0x69c5391f
  40d2f3:	mov    eax,0x8020d4b8
  40d2f8:	mov    al,BYTE PTR [esi+edx*1+0x43]
  40d2fc:	fisubr DWORD PTR [edi+0x758d9ff8]
  40d302:	push   0xce9f2dd8
  40d307:	pop    ecx
  40d308:	add    dl,BYTE PTR [esi]
  40d30a:	jbe    0x40d375
  40d30c:	xchg   DWORD PTR [ebp+0x67],eax
  40d30f:	rcr    DWORD PTR [edx+0x52617793],0x5c
  40d316:	int3   
  40d317:	add    al,0xf8
  40d319:	loopne 0x40d330
  40d31b:	in     eax,0x8a
  40d31d:	cmp    dh,BYTE PTR [ecx]
  40d31f:	(bad)  
  40d320:	mov    ebp,0xe9ab63b8
  40d325:	das    
  40d326:	retf   
  40d327:	xchg   BYTE PTR [edx+0x39cea249],dh
  40d32d:	lock je 0x40d3a6
  40d330:	clc    
  40d331:	sub    al,BYTE PTR [edi]
  40d333:	cmc    
  40d334:	xrelease mov BYTE PTR fs:[esi+esi*1-0x6a],ah
  40d33a:	loopne 0x40d2fd
  40d33c:	mov    ebp,0xe461e4aa
  40d341:	add    al,0x2f
  40d343:	ins    DWORD PTR es:[edi],dx
  40d344:	lds    esp,FWORD PTR [ecx]
  40d346:	mov    ah,BYTE PTR [esi-0x46]
  40d349:	lea    ebx,[ebx-0xe5838e8]
  40d34f:	ja     0x40d2d7
  40d351:	scas   eax,DWORD PTR es:[edi]
  40d352:	mov    ah,BYTE PTR [ecx+0x445ff561]
  40d358:	shl    DWORD PTR [edx+ecx*1],1
  40d35b:	mov    ah,0x9
  40d35d:	out    dx,eax
  40d35e:	xor    ebp,DWORD PTR [ebp+0x19]
  40d361:	push   edx
  40d362:	sub    eax,0xb308256
  40d367:	test   DWORD PTR [eax+0x70c6ca80],edi
  40d36d:	jg     0x40d331
  40d36f:	fiadd  WORD PTR [ebp-0x2e0c9457]
  40d375:	cli    
  40d376:	dec    ebp
  40d377:	loopne 0x40d31a
  40d379:	push   esi
  40d37a:	mov    esi,0x7e2f393d
  40d37f:	clc    
  40d380:	(bad)  
  40d381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d382:	inc    esi
  40d383:	mov    dh,0x6f
  40d385:	sbb    BYTE PTR [ecx-0x78],ch
  40d388:	outs   dx,BYTE PTR ds:[esi]
  40d389:	sub    al,al
  40d38b:	daa    
  40d38c:	xchg   DWORD PTR [eax],edx
  40d38e:	loopne 0x40d401
  40d390:	adc    al,0x2f
  40d392:	xor    eax,0xadadaa2f
  40d397:	fnstcw WORD PTR [edx+edx*2+0x61]
  40d39b:	pop    esi
  40d39c:	pop    edi
  40d39d:	jae    0x40d3e6
  40d39f:	pop    ebp
  40d3a0:	add    edi,DWORD PTR ds:0xc199d883
  40d3a6:	inc    edi
  40d3a7:	js     0x40d385
  40d3a9:	das    
  40d3aa:	jb     0x40d410
  40d3ac:	jp     0x40d35c
  40d3ae:	and    ch,BYTE PTR [ecx]
  40d3b0:	fs push ebx
  40d3b2:	fwait
  40d3b3:	mov    WORD PTR [esi+0x318d399],fs
  40d3b9:	sub    ebp,ebp
  40d3bb:	sub    al,0x5f
  40d3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3be:	jl     0x40d40e
  40d3c0:	dec    esi
  40d3c1:	data16 or ah,BYTE PTR [ecx-0x4]
  40d3c5:	xor    DWORD PTR [ecx+0x5fbf19da],edi
  40d3cb:	mov    dh,0x8f
  40d3cd:	pushf  
  40d3ce:	int    0xfc
  40d3d0:	inc    esp
  40d3d1:	lods   eax,DWORD PTR ds:[esi]
  40d3d2:	test   eax,0x4f66cb17
  40d3d7:	mov    ch,0xa2
  40d3d9:	and    DWORD PTR [ebx+0x20],ebx
  40d3dc:	popf   
  40d3dd:	cmp    edx,ecx
  40d3df:	fstp   DWORD PTR [ebp+0x49]
  40d3e2:	mov    ecx,0x722eeef5
  40d3e7:	push   esp
  40d3e8:	add    ch,BYTE PTR [esi]
  40d3ea:	add    DWORD PTR [edx],eax
  40d3ec:	push   ebx
  40d3ed:	call   0x73796fea
  40d3f2:	bound  edi,QWORD PTR ds:0xace41f76
  40d3f8:	inc    edx
  40d3f9:	push   ebp
  40d3fa:	repnz mov ?,edi
  40d3fd:	pop    eax
  40d3fe:	mov    eax,ds:0xed8bf17a
  40d403:	das    
  40d404:	daa    
  40d405:	adc    DWORD PTR [edi],esi
  40d407:	cmp    ch,BYTE PTR [eax+0x43]
  40d40a:	xor    dl,BYTE PTR [edi-0x14]
  40d40d:	or     ch,BYTE PTR [ecx+edx*2]
  40d410:	imul   eax,DWORD PTR [edi-0x79],0x16
  40d414:	sbb    eax,0xb46a9b02
  40d419:	sar    bl,0xb3
  40d41c:	push   ecx
  40d41d:	arpl   di,bx
  40d41f:	mov    bl,0x9f
  40d421:	dec    ebp
  40d422:	dec    ecx
  40d423:	dec    ebx
  40d424:	mov    DWORD PTR [ebx-0x11a7865],edx
  40d42a:	dec    esp
  40d42b:	push   cs
  40d42c:	jbe    0x40d416
  40d42e:	ins    DWORD PTR es:[edi],dx
  40d42f:	pushf  
  40d430:	pop    ecx
  40d431:	jle    0x40d45f
  40d433:	dec    esi
  40d434:	icebp  
  40d435:	and    BYTE PTR [edx-0x4fdb602f],bh
  40d43b:	pop    edx
  40d43c:	aaa    
  40d43d:	(bad)  
  40d43e:	and    DWORD PTR [edi+0xe],esi
  40d441:	xchg   esp,eax
  40d442:	ds fucom st(6)
  40d445:	sbb    eax,0xe7e23a6c
  40d44a:	dec    esp
  40d44b:	out    0x25,al
  40d44d:	jmp    FWORD PTR [edx]
  40d44f:	into   
  40d450:	test   BYTE PTR [ebx-0x76],al
  40d453:	ja     0x40d485
  40d455:	setnp  BYTE PTR [esi]
  40d458:	clc    
  40d459:	mov    DWORD PTR es:0x542c,ecx
  40d45f:	sbb    ch,0xcd
  40d462:	(bad)  
  40d463:	dec    esi
  40d464:	mov    dh,BYTE PTR [ebp+edi*4+0x3f7641d1]
  40d46b:	jbe    0x40d4cc
  40d46d:	xor    DWORD PTR [edi+0x38],ecx
  40d470:	pusha  
  40d471:	fistp  DWORD PTR [edx]
  40d473:	out    dx,al
  40d474:	fcom   QWORD PTR [ecx-0x4cb07c02]
  40d47a:	loope  0x40d455
  40d47c:	jae    0x40d4a4
  40d47e:	out    dx,al
  40d47f:	xor    bl,BYTE PTR [esi+0x3af02bf]
  40d485:	inc    esp
  40d486:	enter  0xa171,0xd8
  40d48a:	sbb    cl,BYTE PTR [ecx-0x68]
  40d48d:	(bad)  
  40d48f:	repz icebp 
  40d491:	xchg   ecx,eax
  40d492:	xchg   edx,eax
  40d493:	inc    esp
  40d494:	popf   
  40d495:	call   0x554eba31
  40d49a:	sub    esp,DWORD PTR [edi-0x4bcd8583]
  40d4a0:	push   0xb5fa65f3
  40d4a5:	mov    DWORD PTR [edi+0x40],esp
  40d4a8:	jno    0x40d433
  40d4aa:	xchg   edi,eax
  40d4ab:	mov    DWORD PTR [edx],ebp
  40d4ad:	xchg   edx,eax
  40d4ae:	fcomp  DWORD PTR [eax]
  40d4b0:	xor    cl,BYTE PTR [ebx+0x77ff263a]
  40d4b6:	or     BYTE PTR [ebx],bl
  40d4b8:	push   eax
  40d4b9:	in     al,0x45
  40d4bb:	fsub   st(7),st
  40d4bd:	(bad)  
  40d4be:	retf   0x2487
  40d4c1:	or     bl,BYTE PTR [edi-0x477cfc67]
  40d4c7:	dec    esi
  40d4c8:	imul   esp,DWORD PTR [edi],0xc
  40d4cb:	mov    ds:0xa0d460e1,al
  40d4d0:	mov    ecx,0x9f58fae0
  40d4d5:	inc    eax
  40d4d6:	fst    QWORD PTR [ecx]
  40d4d8:	arpl   WORD PTR [edi-0x5e5b3874],ax
  40d4de:	inc    ecx
  40d4df:	stos   BYTE PTR es:[edi],al
  40d4e0:	mov    WORD PTR [edx+0x6fa41ab9],gs
  40d4e6:	inc    ecx
  40d4e7:	ins    BYTE PTR es:[edi],dx
  40d4e8:	adc    DWORD PTR [ebp+0x64],eax
  40d4eb:	inc    esi
  40d4ec:	mov    al,ds:0x297c677d
  40d4f1:	cmp    ecx,DWORD PTR [edi]
  40d4f3:	pop    esi
  40d4f4:	sbb    edi,DWORD PTR [edx]
  40d4f6:	stc    
  40d4f7:	cmp    eax,0xa615c72
  40d4fc:	pushf  
  40d4fd:	aaa    
  40d4fe:	scas   eax,DWORD PTR es:[edi]
  40d4ff:	out    0x2a,eax
  40d501:	jecxz  0x40d54e
  40d503:	pushf  
  40d504:	icebp  
  40d505:	mov    al,ds:0x61a392db
  40d50a:	cwde   
  40d50b:	pop    es
  40d50c:	and    al,0xb7
  40d50e:	push   ebp
  40d50f:	jb     0x40d49d
  40d511:	iret   
  40d512:	pop    edx
  40d513:	icebp  
  40d514:	popf   
  40d515:	test   ecx,esi
  40d517:	out    dx,al
  40d518:	xor    al,0xf7
  40d51a:	ja     0x40d542
  40d51c:	xchg   esp,eax
  40d51d:	or     BYTE PTR [edi],0x77
  40d520:	(bad)  
  40d521:	popf   
  40d522:	in     al,dx
  40d523:	leave  
  40d524:	std    
  40d525:	std    
  40d526:	lahf   
  40d527:	bound  ecx,QWORD PTR [esi+0xa91360c]
  40d52d:	inc    ecx
  40d52e:	fld    DWORD PTR [eax-0x38]
  40d531:	rcl    al,1
  40d533:	adc    al,bh
  40d535:	inc    edx
  40d536:	lods   eax,DWORD PTR ds:[esi]
  40d537:	pop    eax
  40d538:	push   ebp
  40d539:	popf   
  40d53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d53b:	arpl   ax,dx
  40d53d:	xchg   esp,eax
  40d53e:	pusha  
  40d53f:	cs inc edx
  40d541:	test   BYTE PTR ds:0x17b079e6,cl
  40d547:	fsubrp st(1),st
  40d549:	or     BYTE PTR [esi],0xbf
  40d54c:	dec    esp
  40d54d:	and    ecx,esp
  40d54f:	sub    al,0x52
  40d551:	bound  esi,QWORD PTR [eax-0x47e917d]
  40d557:	stos   DWORD PTR es:[edi],eax
  40d558:	stos   BYTE PTR es:[edi],al
  40d559:	inc    BYTE PTR [edx+eiz*2-0x27]
  40d55d:	(bad)  
  40d560:	ja     0x40d5cf
  40d562:	fild   DWORD PTR [ecx-0x4797cb17]
  40d569:	scas   al,BYTE PTR es:[edi]
  40d56a:	add    al,0x3f
  40d56c:	imul   edx,DWORD PTR [edx-0x6742eba5],0x23
  40d573:	or     DWORD PTR [eax],edi
  40d575:	cmp    BYTE PTR [eax+0x42],ah
  40d578:	pop    ds
  40d579:	es sub dl,al
  40d57c:	and    ch,BYTE PTR [ebx]
  40d57e:	lock push eax
  40d580:	arpl   WORD PTR [ebp+0x24],cx
  40d583:	mov    bl,0x8c
  40d585:	pushf  
  40d586:	int3   
  40d587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d588:	push   edi
  40d589:	in     eax,0xcc
  40d58b:	in     eax,dx
  40d58c:	pushf  
  40d58d:	es std 
  40d58f:	mov    ch,0xa3
  40d591:	xor    DWORD PTR [edi-0x793286db],esp
  40d597:	imul   eax,DWORD PTR [edi],0x1579dfa8
  40d59d:	mov    esi,0x439e37e5
  40d5a2:	xor    ch,BYTE PTR [ebx]
  40d5a4:	shl    eax,1
  40d5a6:	ret    0x6dfd
  40d5a9:	jg     0x40d579
  40d5ab:	pop    es
  40d5ac:	fsub   DWORD PTR [ecx+0x76]
  40d5af:	imul   edi,DWORD PTR [eax+0x21],0x773904ad
  40d5b6:	xchg   BYTE PTR [ebx-0x39],ch
  40d5b9:	mov    ebx,0x208094c
  40d5be:	imul   esi,DWORD PTR [esi-0x45],0x6e281b6
  40d5c5:	mov    esi,0x7f2dfee0
  40d5ca:	sub    BYTE PTR [ebx+ebp*4],ah
  40d5cd:	sar    BYTE PTR [ebp-0x1e],0x99
  40d5d1:	or     ch,BYTE PTR [ecx-0x50ad8f2e]
  40d5d7:	push   ds
  40d5d8:	or     ebx,DWORD PTR [eax+0x502b3542]
  40d5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5df:	call   0x8f3295df
  40d5e4:	jb     0x40d5d1
  40d5e6:	cdq    
  40d5e7:	and    edx,ebp
  40d5e9:	aam    0xe1
  40d5eb:	ins    DWORD PTR es:[edi],dx
  40d5ec:	xchg   edx,eax
  40d5ed:	imul   ebp,DWORD PTR [edi+0x21],0x4c
  40d5f1:	or     al,0x8b
  40d5f3:	xor    DWORD PTR [esi],ebp
  40d5f5:	lock sbb BYTE PTR [eax-0x27],bh
  40d5f9:	leave  
  40d5fa:	adc    eax,DWORD PTR [ecx]
  40d5fc:	rcl    BYTE PTR [eax-0x3e792358],cl
  40d602:	loopne 0x40d648
  40d604:	sti    
  40d605:	mov    ebx,ebp
  40d607:	mov    cl,0xb8
  40d609:	and    ecx,DWORD PTR [bp+si+0x306b]
  40d60e:	(bad)  
  40d60f:	jge    0x40d67b
  40d611:	(bad)  
  40d612:	inc    ebp
  40d613:	jp     0x40d5da
  40d615:	clc    
  40d616:	pusha  
  40d617:	out    0x47,al
  40d619:	and    BYTE PTR [ebp+0x78a32646],bl
  40d61f:	inc    esp
  40d620:	imul   edx,DWORD PTR [edx-0x9323d7d],0xa028e23b
  40d62a:	inc    edi
  40d62b:	loope  0x40d679
  40d62d:	sti    
  40d62e:	sbb    al,0xa7
  40d631:	shl    BYTE PTR [edx],1
  40d633:	and    BYTE PTR cs:0x6c0c5e00,cl
  40d63a:	mov    ah,0xa2
  40d63c:	pop    ds
  40d63d:	cmp    ch,BYTE PTR [ecx-0x1e]
  40d640:	out    0x9e,al
  40d642:	or     al,0x8a
  40d644:	icebp  
  40d645:	pop    esi
  40d646:	xor    eax,0xcb05fbaa
  40d64b:	adc    eax,0x67a38f
  40d650:	lock cwde 
  40d652:	(bad)  
  40d653:	in     al,0x23
  40d655:	ficomp DWORD PTR [edx]
  40d657:	mov    ebx,0x8e1fb1b2
  40d65c:	sub    BYTE PTR [esp+ecx*8-0x4abb677c],0xef
  40d664:	addr16 loopne 0x40d668
  40d667:	jnp    0x40d646
  40d669:	lds    edx,FWORD PTR [edi+0xe423a58]
  40d66f:	jecxz  0x40d624
  40d671:	bound  ebx,QWORD PTR [ebp-0xa]
  40d674:	or     eax,DWORD PTR [esi]
  40d676:	push   ebp
  40d677:	xor    edi,DWORD PTR [esi]
  40d679:	(bad)  
  40d67a:	neg    DWORD PTR [ecx-0x5b]
  40d67d:	(bad)  
  40d67f:	inc    esi
  40d680:	or     esi,DWORD PTR [edx]
  40d682:	jmp    0x88cd1332
  40d687:	pop    ebx
  40d688:	popf   
  40d689:	xor    BYTE PTR ds:[esi+ebx*2-0x56],dh
  40d68e:	aam    0x13
  40d690:	jb     0x40d6bd
  40d692:	mov    eax,ds:0x9f346277
  40d697:	push   eax
  40d698:	pushf  
  40d699:	cmc    
  40d69a:	cmp    eax,0xa2bc27f5
  40d69f:	pusha  
  40d6a0:	push   edi
  40d6a1:	push   ebx
  40d6a2:	xor    al,0xaf
  40d6a4:	jo     0x40d632
  40d6a6:	fdiv   QWORD PTR [esp+edx*4+0x7d]
  40d6aa:	popa   
  40d6ab:	cdq    
  40d6ac:	dec    eax
  40d6ad:	sub    BYTE PTR [eax],bl
  40d6af:	pop    ss
  40d6b0:	mov    ecx,DWORD PTR [ebx]
  40d6b2:	inc    ebp
  40d6b3:	(bad)  
  40d6b4:	idiv   ah
  40d6b6:	add    BYTE PTR [edi+esi*4-0x2ef723f6],0x55
  40d6be:	sbb    edx,DWORD PTR [ebx-0x48753464]
  40d6c4:	or     al,0x69
  40d6c6:	jmp    0xf162cf22
  40d6cb:	adc    BYTE PTR [edx+0x609919d7],ah
  40d6d1:	ret    0x1cf6
  40d6d4:	gs push ds
  40d6d6:	shl    DWORD PTR [edi+0x13dc958a],0x2e
  40d6dd:	lea    ebx,[edx-0x3d18b933]
  40d6e3:	xchg   ebx,eax
  40d6e4:	add    bh,cl
  40d6e6:	jnp    0x40d6c6
  40d6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e9:	mov    DWORD PTR [esi+0x39],ecx
  40d6ec:	repz icebp 
  40d6ee:	hlt    
  40d6ef:	cmp    ebp,ebx
  40d6f1:	pop    edx
  40d6f2:	sbb    ah,bl
  40d6f4:	mov    bh,0x8f
  40d6f6:	cdq    
  40d6f7:	(bad)  
  40d6f8:	js     0x40d6b8
  40d6fa:	outs   dx,DWORD PTR ds:[esi]
  40d6fb:	out    0x33,eax
  40d6fd:	aas    
  40d6fe:	stos   DWORD PTR es:[edi],eax
  40d6ff:	cmp    al,0x47
  40d701:	(bad)  
  40d703:	ins    DWORD PTR es:[edi],dx
  40d704:	jg     0x40d6cb
  40d706:	jo     0x40d695
  40d708:	jo     0x40d6d6
  40d70a:	cmp    eax,0x42db63e7
  40d70f:	inc    esi
  40d710:	fwait
  40d711:	sub    eax,0xb1937469
  40d716:	dec    esi
  40d717:	sbb    DWORD PTR [edx+edx*1-0x6c],ebx
  40d71b:	and    al,0xbf
  40d71d:	or     al,0x42
  40d71f:	je     0x40d78d
  40d721:	test   eax,0x4c964863
  40d726:	lock (bad) 
  40d728:	call   0xdce9fe25
  40d72d:	dec    edx
  40d72e:	push   es
  40d72f:	scas   eax,DWORD PTR es:[edi]
  40d730:	(bad)  
  40d731:	jp     0x40d6b4
  40d733:	cmp    eax,eax
  40d735:	push   esp
  40d736:	sti    
  40d737:	adc    edx,edi
  40d739:	mov    WORD PTR [edi+0x3996cf00],ss
  40d73f:	mov    ah,BYTE PTR [esi+0x27]
  40d742:	test   al,0xa5
  40d744:	add    eax,0x89babe13
  40d749:	cmp    BYTE PTR [ebp+0xb],ch
  40d74c:	jbe    0x40d7ac
  40d74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d74f:	mov    edx,0x98580185
  40d754:	out    0xda,al
  40d756:	cmp    cl,BYTE PTR [edx]
  40d758:	fldcw  WORD PTR [esi]
  40d75a:	mov    ds,WORD PTR [esi-0x1a]
  40d75d:	inc    esi
  40d75e:	inc    ebx
  40d75f:	and    bh,ah
  40d761:	lahf   
  40d762:	(bad)
  40d767:	clc    
  40d768:	ret    0xe6b9
  40d76b:	test   al,0x13
  40d76d:	call   0xf71c05a
  40d772:	es fcmovnbe st,st(4)
  40d775:	dec    edx
  40d776:	inc    ecx
  40d777:	ret    
  40d778:	jmp    0x9826dc42
  40d77d:	push   0x39
  40d77f:	pop    eax
  40d780:	pop    ss
  40d781:	ss sti 
  40d783:	jp     0x40d7f5
  40d785:	int3   
  40d786:	dec    eax
  40d787:	call   0xac8c:0xafa9c93c
  40d78e:	jmp    0x40d715
  40d790:	jne    0x40d781
  40d792:	out    0x82,eax
  40d794:	lock in eax,dx
  40d796:	xor    al,0xe9
  40d798:	enter  0x1da5,0x95
  40d79c:	jno    0x40d73b
  40d79e:	pop    ds
  40d79f:	aas    
  40d7a0:	les    eax,FWORD PTR [esi]
  40d7a2:	pop    ss
  40d7a3:	add    bl,BYTE PTR [edx]
  40d7a5:	or     BYTE PTR [esi],0x27
  40d7a8:	fild   WORD PTR [edi+ebx*2]
  40d7ab:	push   ebp
  40d7ac:	xor    eax,0x921a31dd
  40d7b1:	test   DWORD PTR [eax-0x43],edx
  40d7b4:	shl    BYTE PTR [edi+edi*1],cl
  40d7b7:	bound  edx,QWORD PTR [ecx]
  40d7b9:	sub    esi,0xffffffa8
  40d7bc:	mov    al,ds:0x656821c8
  40d7c1:	inc    esp
  40d7c2:	test   eax,0x19ff90e0
  40d7c7:	and    BYTE PTR [eax],ch
  40d7c9:	inc    esp
  40d7ca:	ins    BYTE PTR es:[edi],dx
  40d7cb:	mov    edi,0x7c11f736
  40d7d0:	xlat   BYTE PTR ds:[ebx]
  40d7d1:	sub    ch,0x78
  40d7d4:	sbb    DWORD PTR [esi],ecx
  40d7d6:	mov    al,0xea
  40d7d8:	jmp    0x8662633c
  40d7dd:	jb     0x40d818
  40d7df:	shl    DWORD PTR [eax],0xde
  40d7e2:	pop    esi
  40d7e3:	(bad)
  40d7e7:	in     al,0xed
  40d7e9:	sbb    al,BYTE PTR [ecx]
  40d7eb:	js     0x40d7ca
  40d7ed:	(bad)  
  40d7ee:	cmp    eax,0xb2d0ffa0
  40d7f3:	mov    DWORD PTR [edi-0x1c1c03e7],esi
  40d7f9:	icebp  
  40d7fa:	scas   eax,DWORD PTR es:[edi]
  40d7fb:	sub    eax,0xfd3d216d
  40d800:	in     eax,0xa
  40d802:	mov    esp,0x5e857e54
  40d807:	and    DWORD PTR [edx+0x35],edx
  40d80a:	mov    ds:0x48c2b412,eax
  40d80f:	in     al,dx
  40d810:	xor    al,0xb2
  40d812:	mov    ds:0x3edd2c44,eax
  40d817:	hlt    
  40d818:	test   BYTE PTR ds:0x62724dde,0x45
  40d81f:	enter  0xe210,0x76
  40d823:	pop    ecx
  40d824:	loopne 0x40d7d9
  40d826:	sub    eax,DWORD PTR [ebx+eax*8+0x7aae07e4]
  40d82d:	scas   al,BYTE PTR es:[edi]
  40d82e:	sbb    bh,BYTE PTR [edx-0x5f267a9f]
  40d834:	mov    esp,0x4a69a698
  40d839:	mov    al,ds:0x2cf3430a
  40d83e:	inc    ecx
  40d83f:	(bad)  
  40d840:	es rcr edi,1
  40d843:	xor    BYTE PTR [edi],0x6f
  40d846:	rcr    BYTE PTR [esi+0x40dbae92],0x7d
  40d84d:	lds    ecx,FWORD PTR [edi+0x229cd7cc]
  40d853:	ffreep st(6)
  40d855:	retf   
  40d856:	add    ebx,edi
  40d858:	sbb    esi,DWORD PTR [eax+0xe]
  40d85b:	(bad)  
  40d85c:	lods   eax,DWORD PTR ds:[esi]
  40d85d:	lock sub BYTE PTR [esi+0x3f],ah
  40d861:	loope  0x40d836
  40d863:	lds    ebp,FWORD PTR [edx+ecx*2+0x4]
  40d867:	push   esi
  40d868:	imul   edi,edx,0x488904c1
  40d86e:	or     esp,edx
  40d870:	pop    edi
  40d871:	mov    al,ds:0x2bb536ec
  40d876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d877:	(bad)  
  40d878:	arpl   bp,sp
  40d87a:	adc    BYTE PTR [ebp+ecx*2-0x54a72c45],cl
  40d881:	loopne 0x40d8eb
  40d883:	dec    edx
  40d884:	fist   DWORD PTR [edx+0x65]
  40d887:	popa   
  40d888:	popa   
  40d889:	das    
  40d88a:	mov    bl,0x96
  40d88c:	repz pop es
  40d88e:	sub    DWORD PTR ds:0x27638805,ebp
  40d894:	jae    0x40d90c
  40d896:	(bad)  
  40d897:	shl    bl,0xc8
  40d89a:	ret    0x9e59
  40d89d:	push   0xffffffdb
  40d89f:	inc    ebp
  40d8a0:	sti    
  40d8a1:	inc    edi
  40d8a2:	mov    edi,DWORD PTR [edi-0x3e]
  40d8a5:	fwait
  40d8a6:	mov    ebp,0x8e84f10
  40d8ab:	jno    0x40d8f7
  40d8ad:	ror    BYTE PTR [edi],1
  40d8af:	or     BYTE PTR [eax+0x55],dl
  40d8b2:	dec    edi
  40d8b3:	add    al,0x9a
  40d8b5:	call   0x28def8b3
  40d8ba:	das    
  40d8bb:	or     eax,0xd93db8b1
  40d8c0:	push   ecx
  40d8c1:	adc    DWORD PTR [eax-0x16fcf0cf],edx
  40d8c7:	dec    edi
  40d8c8:	clc    
  40d8c9:	mov    ch,0x29
  40d8cb:	inc    esi
  40d8cc:	pop    es
  40d8cd:	adc    eax,DWORD PTR [ebx]
  40d8cf:	icebp  
  40d8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d1:	add    eax,0x8d1058c3
  40d8d6:	fstp   TBYTE PTR [edx+0xfa830b2]
  40d8dc:	push   edx
  40d8dd:	dec    DWORD PTR [edi-0x7e]
  40d8e0:	adc    ch,BYTE PTR [ebx-0x68b394c7]
  40d8e6:	repz mov WORD PTR [esi],fs
  40d8e9:	mov    al,ds:0x15f63621
  40d8ee:	mov    ecx,esi
  40d8f0:	mov    DWORD PTR [ebp-0x4e],esp
  40d8f3:	idiv   DWORD PTR [eax-0x4]
  40d8f6:	mov    edx,0x298a4a3
  40d8fb:	sbb    al,dh
  40d8fd:	sbb    BYTE PTR [eax-0x5f8132cf],0x92
  40d904:	mov    esi,0xda2d3dc3
  40d909:	cwde   
  40d90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d90b:	vhaddps xmm6,xmm5,XMMWORD PTR [ebx+0x74]
  40d910:	push   ds
  40d911:	sub    bl,ch
  40d913:	fldenv [ecx+edx*2-0x5952e1e9]
  40d91a:	je     0x40d8e0
  40d91c:	cmp    BYTE PTR [ebx-0x49227fb8],bh
  40d922:	loopne 0x40d8d6
  40d924:	icebp  
  40d925:	and    al,0xf1
  40d927:	dec    esi
  40d928:	pusha  
  40d929:	call   0x785d6fa
  40d92e:	sbb    BYTE PTR [eax-0x71c45099],0xc1
  40d935:	cmp    cl,BYTE PTR [esi+0x6c]
  40d938:	fnstsw WORD PTR ds:[eax-0x11]
  40d93c:	mov    bh,0x12
  40d93e:	(bad)  
  40d93f:	std    
  40d940:	mov    bh,BYTE PTR [ecx-0x7e]
  40d943:	jbe    0x40d9a8
  40d945:	das    
  40d946:	lods   eax,DWORD PTR ds:[esi]
  40d947:	mov    al,BYTE PTR [ebx+0x25587d6e]
  40d94d:	mov    bh,0xeb
  40d94f:	frstpm(287 only) 
  40d951:	arpl   WORD PTR [esi-0x8],cx
  40d954:	dec    ebp
  40d955:	cmp    BYTE PTR [edi-0x18],dh
  40d958:	mov    eax,DWORD PTR [edi]
  40d95a:	out    0xbb,al
  40d95c:	(bad)  
  40d95e:	and    BYTE PTR [bx+di+0x50],dh
  40d962:	push   0x36
  40d964:	ds hlt 
  40d966:	out    dx,al
  40d967:	push   es
  40d968:	data16 in al,0x49
  40d96b:	push   ebp
  40d96c:	popa   
  40d96d:	les    edx,FWORD PTR [ebx+0x245dbc8d]
  40d973:	or     al,bl
  40d975:	pusha  
  40d976:	fild   DWORD PTR [ebp+0x73]
  40d979:	outs   dx,DWORD PTR ds:[esi]
  40d97a:	in     eax,0xfb
  40d97c:	ficomp WORD PTR ds:0x4b787179
  40d982:	jbe    0x40da02
  40d984:	ja     0x40d9fb
  40d986:	lock add ch,BYTE PTR [ebp+0x34]
  40d98a:	mov    ss,WORD PTR [edi-0x32609fc5]
  40d990:	outs   dx,BYTE PTR ds:[esi]
  40d991:	fnsave [esi+0x7d]
  40d994:	xor    dh,dh
  40d996:	mov    ds:0x998f9257,al
  40d99b:	aad    0x93
  40d99d:	push   ebp
  40d99e:	pop    ss
  40d99f:	dec    ebp
  40d9a0:	xchg   esp,eax
  40d9a1:	fld    TBYTE PTR [ecx+0x65dcc56]
  40d9a7:	sahf   
  40d9a8:	ficomp DWORD PTR [eax]
  40d9aa:	push   ds
  40d9ab:	cmp    BYTE PTR [esi],cl
  40d9ad:	stos   BYTE PTR es:[edi],al
  40d9ae:	cmp    eax,0x4b15c029
  40d9b3:	add    DWORD PTR [edx],0x70
  40d9b6:	add    BYTE PTR fs:[edi+0x14],al
  40d9ba:	test   BYTE PTR es:[edi-0x47],cl
  40d9be:	push   esi
  40d9bf:	mov    esp,DWORD PTR ss:[edi-0x399a244d]
  40d9c6:	and    al,bl
  40d9c8:	js     0x40da28
  40d9ca:	not    BYTE PTR ds:0x2ba4028e
  40d9d0:	enter  0xbb1d,0x24
  40d9d4:	sub    esp,edi
  40d9d6:	fldcw  WORD PTR [ebx]
  40d9d8:	jo     0x40d9f5
  40d9da:	push   cs
  40d9db:	and    edi,ecx
  40d9dd:	fs dec ecx
  40d9df:	xchg   BYTE PTR [esi-0x17],cl
  40d9e2:	stos   DWORD PTR es:[edi],eax
  40d9e3:	jecxz  0x40d98f
  40d9e5:	dec    edx
  40d9e6:	adc    DWORD PTR ss:[ecx-0x60],0xffffffbb
  40d9eb:	xor    dh,BYTE PTR [ecx-0x8]
  40d9ee:	push   ebp
  40d9ef:	in     al,dx
  40d9f0:	fsubr  QWORD PTR [ebx]
  40d9f2:	mov    dh,0x15
  40d9f4:	sbb    ebp,DWORD PTR [edx+0xed7c161]
  40d9fa:	into   
  40d9fb:	out    0x2d,al
  40d9fd:	fwait
  40d9fe:	out    dx,al
  40d9ff:	sbb    esp,DWORD PTR [esp+ecx*2+0x36]
  40da03:	ins    BYTE PTR es:[edi],dx
  40da04:	das    
  40da05:	jl     0x40da7d
  40da07:	mov    ecx,DWORD PTR [ebp+0x3a]
  40da0a:	arpl   WORD PTR [eax+0x5f986ad8],sp
  40da10:	pop    esp
  40da11:	clc    
  40da12:	inc    ebx
  40da13:	popf   
  40da14:	cli    
  40da15:	hlt    
  40da16:	div    DWORD PTR [eax+0x62]
  40da19:	push   0xf8873d25
  40da1e:	repnz std 
  40da20:	mov    eax,ds:0xa59255a2
  40da25:	pop    esp
  40da26:	loope  0x40da8d
  40da28:	sub    esp,DWORD PTR [edx+0x3d276193]
  40da2e:	adc    eax,DWORD PTR [edi]
  40da30:	(bad)  
  40da31:	fisub  DWORD PTR [eax+0x7f3071f8]
  40da37:	pop    esi
  40da38:	fisubr DWORD PTR [ebx+ecx*8]
  40da3b:	std    
  40da3c:	mov    esi,ecx
  40da3e:	sub    eax,0x981b23f7
  40da43:	test   BYTE PTR [ebp-0x167a54c3],ah
  40da49:	in     eax,0xb3
  40da4b:	jecxz  0x40da85
  40da4d:	dec    ebp
  40da4e:	lods   al,BYTE PTR ds:[esi]
  40da4f:	lea    ebp,[ebp-0x11d58c0d]
  40da55:	mov    ebp,ebx
  40da57:	cmp    BYTE PTR [ecx],ah
  40da59:	aas    
  40da5a:	bound  ebx,QWORD PTR [ebx]
  40da5c:	dec    ebp
  40da5d:	xlat   BYTE PTR ds:[ebx]
  40da5e:	sbb    DWORD PTR [ebp-0x73],edx
  40da61:	push   cs
  40da62:	adc    BYTE PTR [edx+0x3d09d884],bl
  40da68:	jne    0x40da69
  40da6a:	ds sahf 
  40da6c:	or     BYTE PTR [ecx],dh
  40da6e:	xchg   esp,eax
  40da6f:	fadd   DWORD PTR [edi]
  40da71:	mov    ch,0x55
  40da73:	xor    dh,BYTE PTR [ecx]
  40da75:	push   ss
  40da76:	push   ebp
  40da77:	jmp    0x40da1c
  40da79:	out    0xdf,al
  40da7b:	imul   esp,DWORD PTR [edx+0x494122ae],0xffffff85
  40da82:	sbb    BYTE PTR [edx-0x28a1d604],ch
  40da88:	cmp    DWORD PTR [ecx+eiz*2-0x4a936546],ebp
  40da8f:	ja     0x40dae9
  40da91:	sbb    ch,BYTE PTR [esp+ebp*1]
  40da94:	mov    ebp,0xdb51126c
  40da99:	rcr    BYTE PTR [eax+0x1b46933e],0x35
  40daa0:	inc    edx
  40daa1:	and    eax,DWORD PTR [edx]
  40daa3:	jecxz  0x40da4b
  40daa5:	xchg   esi,eax
  40daa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa7:	sbb    ecx,ebx
  40daa9:	aaa    
  40daaa:	out    0x50,al
  40daac:	sbb    al,0x87
  40daae:	adc    BYTE PTR [edx-0x77e7f992],ah
  40dab4:	adc    ebx,eax
  40dab6:	scas   al,BYTE PTR es:[edi]
  40dab7:	push   eax
  40dab8:	add    DWORD PTR [eax-0x42],0xdf9ec8c0
  40dabf:	pop    ds
  40dac0:	pop    edx
  40dac1:	pushf  
  40dac2:	aam    0x92
  40dac4:	retf   
  40dac5:	ins    DWORD PTR es:[edi],dx
  40dac6:	loop   0x40db16
  40dac8:	enter  0x88ff,0x5e
  40dacc:	adc    al,0x26
  40dace:	pop    eax
  40dacf:	mov    bh,0x26
  40dad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dad2:	ret    0xdabc
  40dad5:	and    BYTE PTR [eax-0x27],bh
  40dad8:	add    eax,0x2cc4d05b
  40dadd:	call   FWORD PTR [edi+0x4d]
  40dae0:	repz (bad) 
  40dae3:	xor    al,0x8c
  40dae5:	lock mov edi,DWORD PTR [ebx+0x11f6ba87]
  40daec:	xchg   esp,eax
  40daed:	nop
  40daee:	or     eax,0x94d63e35
  40daf3:	xchg   ecx,eax
  40daf5:	ret    
  40daf6:	pop    ds
  40daf7:	cmp    al,BYTE PTR [ecx-0x27]
  40dafa:	es adc ecx,ebp
  40dafd:	add    bl,BYTE PTR [ebx+eiz*2-0x38]
  40db01:	and    esi,ebx
  40db03:	xchg   esp,eax
  40db04:	sti    
  40db05:	arpl   WORD PTR [esi+0x23d1fcc6],bx
  40db0b:	dec    esp
  40db0c:	data16 mov al,ds:0x42554cb5
  40db12:	push   ebp
  40db13:	push   ss
  40db14:	push   ecx
  40db15:	jmp    0x162:0x4a6e3475
  40db1c:	jmp    FWORD PTR [edx+0x6f5945e0]
  40db22:	mov    al,BYTE PTR [edi]
  40db24:	frstor [esi-0x3a91ab4f]
  40db2a:	test   al,0xd6
  40db2c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db2e:	mov    eax,ds:0xbc5193d2
  40db33:	inc    ebp
  40db34:	mul    BYTE PTR [edi+0x2f]
  40db37:	xlat   BYTE PTR ds:[ebx]
  40db38:	push   0x1f51c239
  40db3d:	int    0x5
  40db3f:	mov    dh,0x91
  40db41:	outs   dx,BYTE PTR ds:[esi]
  40db42:	stos   BYTE PTR es:[edi],al
  40db43:	cwde   
  40db44:	inc    esi
  40db45:	cmp    ecx,DWORD PTR [esi-0x2f62842d]
  40db4b:	pop    ds
  40db4c:	sbb    eax,0xd4ab7061
  40db51:	leave  
  40db52:	pop    ds
  40db53:	and    ch,BYTE PTR [eax-0x405a0897]
  40db59:	sub    DWORD PTR [edi+0x656853e4],ebp
  40db5f:	imul   esp,DWORD PTR [edi],0xccbc2ba
  40db65:	cli    
  40db66:	xor    eax,0xd5233b35
  40db6b:	xor    DWORD PTR [ebp+0x1e],0x455ea5dd
  40db72:	out    0x78,eax
  40db74:	jbe    0x40dbdb
  40db76:	mov    esp,0x69b8592a
  40db7b:	xchg   ebx,eax
  40db7c:	scas   al,BYTE PTR es:[edi]
  40db7d:	add    esi,esp
  40db7f:	and    eax,0x703db374
  40db84:	or     eax,esp
  40db86:	sub    BYTE PTR [ebx-0x1],0x63
  40db8a:	clc    
  40db8b:	sbb    cl,BYTE PTR [ebx-0x18badb7d]
  40db91:	in     eax,0x6b
  40db93:	(bad)  
  40db94:	cld    
  40db95:	add    BYTE PTR [ecx],al
  40db97:	add    eax,0xdb1de7e7
  40db9c:	inc    DWORD PTR [edi-0x608432d9]
  40dba2:	lea    eax,[eax-0x5658cd15]
  40dba8:	div    DWORD PTR [esi*1+0x6f38b61d]
  40dbaf:	jb     0x40db50
  40dbb1:	ins    DWORD PTR es:[edi],dx
  40dbb2:	adc    eax,0x498c93e6
  40dbb7:	or     eax,0x207f9ecc
  40dbbc:	or     eax,0x5093273f
  40dbc1:	fmul   QWORD PTR [esi+0x131b7f42]
  40dbc7:	xor    esp,eax
  40dbc9:	jno    0x40dba5
  40dbcb:	leave  
  40dbcc:	into   
  40dbcd:	scas   eax,DWORD PTR es:[edi]
  40dbce:	mov    ah,dh
  40dbd0:	call   0xc3a3:0x79d5354d
  40dbd7:	adc    bl,BYTE PTR ds:0xa1245f99
  40dbdd:	or     ah,BYTE PTR [edi+0x6b]
  40dbe0:	imul   ax,WORD PTR [esi+0x42],0x1a02
  40dbe6:	out    0xa7,eax
  40dbe8:	mov    esp,DWORD PTR [edi]
  40dbea:	in     al,dx
  40dbeb:	jle    0x40dbbc
  40dbed:	call   0x55dd:0x96431401
  40dbf4:	mov    dl,0x8a
  40dbf6:	cmp    ebx,ebx
  40dbf8:	stos   DWORD PTR es:[edi],eax
  40dbf9:	cmc    
  40dbfa:	dec    ebx
  40dbfb:	loope  0x40dc28
  40dbfd:	cmp    BYTE PTR [ebx-0x249030e3],ah
  40dc03:	sbb    DWORD PTR [eax],ecx
  40dc05:	jmp    0x281ee513
  40dc0a:	jg     0x40dbe9
  40dc0c:	xlat   BYTE PTR ds:[ebx]
  40dc0d:	add    eax,DWORD PTR [ebx]
  40dc0f:	jmp    0xa3f597dc
  40dc14:	(bad)  
  40dc15:	pushf  
  40dc16:	shl    DWORD PTR [ebp+0x13039940],0x86
  40dc1d:	(bad)  [ecx-0x39ae77f0]
  40dc23:	loope  0x40dbf4
  40dc25:	lods   al,BYTE PTR cs:[esi]
  40dc27:	int3   
  40dc28:	add    bl,BYTE PTR [ebp+0x67]
  40dc2b:	push   esi
  40dc2c:	outs   dx,DWORD PTR ds:[esi]
  40dc2d:	pop    esp
  40dc2e:	in     eax,dx
  40dc2f:	mov    DWORD PTR gs:[ecx+0x2af89673],ebp
  40dc36:	fsub   QWORD PTR [esi+0x6a3f715c]
  40dc3c:	gs aam 0x8b
  40dc3f:	pushf  
  40dc40:	call   DWORD PTR ds:0xf7e4cbe1
  40dc46:	jo     0x40dc58
  40dc48:	jbe    0x40dcb0
  40dc4a:	inc    eax
  40dc4b:	ret    0x58ae
  40dc4e:	add    eax,0xada64e5a
  40dc53:	in     al,0x2c
  40dc55:	push   es
  40dc56:	dec    eax
  40dc57:	(bad)  [esi]
  40dc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc5a:	push   edx
  40dc5b:	cli    
  40dc5c:	xor    DWORD PTR [ebx-0x4a],esp
  40dc5f:	rol    eax,cl
  40dc61:	imul   esp,DWORD PTR [ebx],0x4ceda692
  40dc67:	add    ebp,ebx
  40dc69:	inc    ebx
  40dc6a:	adc    ecx,DWORD PTR [edx]
  40dc6c:	push   cs
  40dc6d:	ja     0x40dc99
  40dc6f:	push   ecx
  40dc70:	aas    
  40dc71:	dec    edi
  40dc72:	add    esi,DWORD PTR [eax+0x763be8c6]
  40dc78:	fld    TBYTE PTR [ebx]
  40dc7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc7b:	jae    0x40dc71
  40dc7d:	call   0x54:0x342d306a
  40dc84:	dec    esi
  40dc85:	into   
  40dc86:	fcmovbe st,st(3)
  40dc88:	cli    
  40dc89:	inc    esp
  40dc8a:	pusha  
  40dc8b:	sti    
  40dc8c:	loopne 0x40dc8e
  40dc8e:	scas   al,BYTE PTR es:[edi]
  40dc8f:	pushf  
  40dc90:	scas   al,BYTE PTR es:[edi]
  40dc91:	retf   
  40dc92:	retf   0x630f
  40dc95:	cld    
  40dc96:	aad    0x64
  40dc98:	sub    eax,ebx
  40dc9a:	into   
  40dc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc9c:	or     BYTE PTR [edi+0x611148ff],0xc2
  40dca3:	jl     0x40dc69
  40dca5:	ficomp WORD PTR [ecx]
  40dca7:	xor    al,0xc
  40dca9:	jne    0x40dca4
  40dcab:	xor    bh,cl
  40dcad:	rol    DWORD PTR [ebx+0x1d],1
  40dcb0:	fldenv [edx-0x4ab20905]
  40dcb6:	shl    DWORD PTR [edx-0x30],1
  40dcb9:	test   BYTE PTR [edi+esi*1],cl
  40dcbc:	fbstp  TBYTE PTR [esi+edx*4+0x5c357c9d]
  40dcc3:	call   0x4b52:0x97b48220
  40dcca:	mov    al,0x6c
  40dccc:	fld    TBYTE PTR [edx]
  40dcce:	arpl   di,si
  40dcd0:	loop   0x40dd15
  40dcd2:	or     ebp,ebx
  40dcd4:	mov    BYTE PTR [ecx+0x5ec4f38a],bl
  40dcda:	jmp    0x9fed:0x93370e6
  40dce1:	cmp    eax,0x4f992247
  40dce6:	and    ebp,edi
  40dce8:	sbb    ebp,esi
  40dcea:	outs   dx,BYTE PTR ds:[esi]
  40dceb:	test   al,0xc0
  40dced:	xchg   ebp,eax
  40dcee:	cmp    esp,DWORD PTR [eax]
  40dcf0:	mov    WORD PTR [edi+eax*1],ss
  40dcf3:	data16 (bad) 
  40dcf5:	mov    cl,0xc6
  40dcf7:	and    bl,0x6d
  40dcfa:	xor    DWORD PTR [esi+0x59aa15c0],0xc93582dd
  40dd04:	outs   dx,DWORD PTR ds:[esi]
  40dd05:	loop   0x40dca7
  40dd07:	xchg   ebx,eax
  40dd08:	cmp    ebp,DWORD PTR [ebp+0x1d8710f8]
  40dd0e:	inc    eax
  40dd0f:	push   es
  40dd10:	mov    al,0xe8
  40dd12:	cld    
  40dd13:	mov    bl,0xc
  40dd15:	repnz leave 
  40dd17:	in     al,dx
  40dd18:	mov    edx,0x5062cbd1
  40dd1d:	into   
  40dd1e:	mov    bl,0x1
  40dd20:	das    
  40dd21:	pop    esi
  40dd22:	arpl   WORD PTR [edx+0x6c],bx
  40dd25:	add    BYTE PTR [edi+0x5c],dl
  40dd28:	xor    BYTE PTR [esi-0x1efd11e],cl
  40dd2e:	jns    0x40dd15
  40dd30:	call   0x9272:0x50683f9c
  40dd37:	push   esp
  40dd38:	jp     0x40dd19
  40dd3a:	or     eax,0x152590a3
  40dd3f:	mov    bl,0xe7
  40dd41:	push   edx
  40dd42:	push   esp
  40dd43:	call   DWORD PTR [eax]
  40dd45:	daa    
  40dd46:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd48:	test   DWORD PTR [esi-0x6b182b41],esp
  40dd4e:	push   edx
  40dd4f:	adc    eax,0x71f08b5c
  40dd54:	cmp    eax,0xd7d41aa9
  40dd59:	aaa    
  40dd5a:	les    edi,FWORD PTR [eax-0x3f]
  40dd5d:	mov    WORD PTR [ecx-0x6b1a898],ds
  40dd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd64:	sbb    edx,DWORD PTR [ecx+0x7279afa7]
  40dd6a:	imul   edi,DWORD PTR [esi],0xffffff97
  40dd6d:	out    dx,al
  40dd6e:	jnp    0x40dd69
  40dd70:	add    BYTE PTR fs:[ebx-0x6a],0x40
  40dd75:	jnp    0x40dda3
  40dd77:	pop    esi
  40dd78:	pop    ebx
  40dd79:	mov    dl,0x71
  40dd7b:	mov    BYTE PTR [eax+0x34],bl
  40dd7e:	mov    ebx,0x7d8d7a5e
  40dd83:	scas   eax,DWORD PTR es:[edi]
  40dd84:	or     DWORD PTR [ecx-0x6fa1749a],ebp
  40dd8a:	and    bl,BYTE PTR [esi+edx*8-0x49]
  40dd8e:	xchg   esp,eax
  40dd8f:	push   cs
  40dd90:	jae    0x40ddc3
  40dd92:	jle    0x40dda2
  40dd94:	and    eax,0xc7f1f749
  40dd99:	cmp    ecx,DWORD PTR [ebp+0x2003db9c]
  40dd9f:	jecxz  0x40dd47
  40dda1:	jle    0x40ddf3
  40dda3:	loopne 0x40dd2f
  40dda5:	fadd   DWORD PTR [eax]
  40dda7:	cmp    DWORD PTR [ebx],0xffffffea
  40ddaa:	jns    0x40ddb0
  40ddac:	or     eax,0x8bceae3
  40ddb1:	jecxz  0x40de14
  40ddb3:	in     eax,0x75
  40ddb5:	pop    edi
  40ddb6:	clc    
  40ddb7:	(bad)  
  40ddb9:	push   0x49
  40ddbb:	je     0x40dd5c
  40ddbd:	xor    eax,0x240a416c
  40ddc2:	push   es
  40ddc3:	sub    al,0xb
  40ddc5:	jo     0x40dd55
  40ddc7:	mov    edx,0x8988a584
  40ddcc:	dec    esi
  40ddcd:	pop    ds
  40ddce:	js     0x40dd5f
  40ddd0:	dec    esp
  40ddd1:	jp     0x40ddc4
  40ddd3:	xor    al,0xd7
  40ddd5:	sub    BYTE PTR [ebp-0x7f23c2f],bl
  40dddb:	fs addr16 mov edi,0xeba4dd65
  40dde2:	std    
  40dde3:	retf   
  40dde4:	sbb    ebp,0x42e26770
  40ddea:	pop    ecx
  40ddeb:	test   eax,0x3d6ad565
  40ddf0:	test   al,0x9a
  40ddf2:	cmp    BYTE PTR [edx+ebx*4],ch
  40ddf5:	add    eax,0x5322eb5c
  40ddfa:	push   cs
  40ddfb:	mov    esp,0x47af3f4a
  40de00:	mov    eax,DWORD PTR [ebp+0x53bc6c37]
  40de06:	rol    BYTE PTR [edx-0x53],1
  40de09:	(bad)  
  40de0a:	(bad)  
  40de0b:	and    dl,BYTE PTR [edx+0x7b5ebc47]
  40de11:	out    0x8a,al
  40de13:	fsubr  st(5),st
  40de15:	daa    
  40de16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de17:	and    al,0x7d
  40de19:	jmp    0x76b3ec1d
  40de1e:	jae    0x40ddd5
  40de20:	xor    ebx,DWORD PTR ds:[ebx+0x63]
  40de24:	pop    esp
  40de25:	sub    esp,DWORD PTR [edx+0x16]
  40de28:	leave  
  40de29:	popf   
  40de2a:	xchg   esi,eax
  40de2b:	mov    bl,0x81
  40de2d:	ror    ch,0xf9
  40de30:	sub    eax,0x7119df95
  40de35:	fs in  al,dx
  40de37:	gs (bad) 
  40de39:	div    ecx
  40de3b:	repz sbb DWORD PTR [eax+0x2f07cf73],eax
  40de42:	mov    ch,0xe7
  40de44:	rcr    DWORD PTR [eax],0x43
  40de47:	cdq    
  40de48:	sbb    bl,dl
  40de4a:	xor    BYTE PTR [ecx],ah
  40de4c:	xor    al,0xd1
  40de4e:	pop    ebp
  40de4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de50:	dec    ebp
  40de51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de52:	mov    esi,DWORD PTR [edi-0x5e]
  40de55:	ficomp DWORD PTR ds:0xf4dcf2d7
  40de5b:	jne    0x40de17
  40de5d:	cld    
  40de5e:	and    ah,al
  40de60:	cdq    
  40de61:	and    DWORD PTR [eax],eax
  40de63:	repnz clc 
  40de65:	inc    ecx
  40de66:	mov    esp,0xed7a85dd
  40de6b:	sahf   
  40de6c:	lock jp 0x40de77
  40de6f:	jae    0x40dee7
  40de71:	cs pop es
  40de73:	cmp    DWORD PTR ds:0x25c52c4f,ebx
  40de79:	sub    edi,DWORD PTR [ebp+0x46]
  40de7c:	pushf  
  40de7d:	add    DWORD PTR [eax+ebx*8-0x39964808],ebp
  40de84:	mov    cl,0x3c
  40de86:	inc    ebp
  40de87:	cld    
  40de88:	xchg   ebx,eax
  40de89:	int3   
  40de8a:	(bad)  
  40de8b:	mov    ebx,0xf4767f31
  40de90:	jne    0x40dec6
  40de92:	shl    dh,0xfa
  40de95:	int    0xb1
  40de97:	cmp    eax,0xbc943be4
  40de9c:	test   eax,0x93e477b3
  40dea1:	xor    cl,BYTE PTR [ecx]
  40dea3:	push   0x1795bce7
  40dea8:	cs xchg edx,eax
  40deaa:	mov    ebp,DWORD PTR [edi-0x20fe9a5]
  40deb0:	gs imul bl
  40deb3:	xor    al,0x66
  40deb5:	xchg   edx,eax
  40deb6:	(bad)  
  40deb7:	js     0x40df36
  40deb9:	mov    ds:0x3cb9e802,al
  40debe:	dec    edx
  40debf:	cmp    BYTE PTR [ecx],ah
  40dec1:	cli    
  40dec2:	cmc    
  40dec3:	xchg   esi,eax
  40dec4:	jmp    0x3c500575
  40dec9:	ret    
  40deca:	ins    BYTE PTR es:[edi],dx
  40decb:	inc    esp
  40decc:	push   ebx
  40decd:	repnz mov dl,0xb7
  40ded0:	jb     0x40dec6
  40ded2:	mov    ebp,ss
  40ded4:	pusha  
  40ded5:	or     BYTE PTR [edi+edx*2+0x66],dh
  40ded9:	cdq    
  40deda:	lds    ebp,FWORD PTR [ebx]
  40dedc:	dec    esi
  40dedd:	rcl    BYTE PTR [esi],cl
  40dedf:	pop    esp
  40dee0:	cmp    DWORD PTR [edx+0x4b],eax
  40dee3:	cwde   
  40dee4:	fimul  DWORD PTR [ebx]
  40dee6:	pop    ebp
  40dee7:	mov    ebx,0xb6d8241a
  40deec:	fild   WORD PTR [ecx-0x6423f4b2]
  40def2:	or     edi,DWORD PTR [esi]
  40def4:	loop   0x40dee2
  40def6:	ficom  WORD PTR [ecx-0x9]
  40def9:	jge    0x40df08
  40defb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40defc:	xchg   BYTE PTR [ebp-0x5f],al
  40deff:	jmp    FWORD PTR [esp+ebp*1+0x127f9903]
  40df06:	cmovb  ebp,DWORD PTR [edi]
  40df09:	sbb    al,0xf3
  40df0b:	jmp    0x5fdf:0xc929ec1f
  40df12:	cmc    
  40df13:	and    cl,BYTE PTR [edi+0x3b]
  40df16:	sbb    BYTE PTR [esp+edi*8-0x4],bh
  40df1a:	fsubrp st(5),st
  40df1c:	mov    eax,0xa06247ea
  40df21:	pusha  
  40df22:	inc    edx
  40df23:	adc    al,0xfe
  40df25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df26:	adc    edi,DWORD PTR [ebx+0x691080ce]
  40df2c:	and    DWORD PTR [esi+edx*2],esp
  40df2f:	pushf  
  40df30:	fcom   QWORD PTR [eax-0x16]
  40df33:	push   cs
  40df34:	push   0xffffffb6
  40df36:	test   al,0x12
  40df38:	leave  
  40df39:	outs   dx,BYTE PTR ds:[esi]
  40df3a:	push   edi
  40df3b:	shl    BYTE PTR [eax-0x2c8cb1df],1
  40df41:	mov    dl,0xf9
  40df43:	push   eax
  40df44:	xchg   edx,edi
  40df46:	out    dx,al
  40df47:	jno    0x40df49
  40df49:	and    DWORD PTR [edx-0x58],esp
  40df4c:	fs push edi
  40df4e:	loope  0x40dedb
  40df50:	mov    ds:0x742fae1b,al
  40df55:	push   es
  40df56:	cmp    eax,0x778ead99
  40df5b:	arpl   WORD PTR [ecx],sp
  40df5d:	mov    esp,0xe4a1648c
  40df62:	inc    esi
  40df63:	push   es
  40df64:	dec    ebp
  40df65:	jge    0x40df2c
  40df67:	mov    edi,0x96fcc244
  40df6c:	mov    ecx,0xc004463e
  40df71:	push   0x7
  40df73:	(bad)  
  40df74:	(bad)  [esi]
  40df76:	pop    eax
  40df77:	adc    ah,BYTE PTR [ebx-0x3f]
  40df7a:	jmp    DWORD PTR [edi-0x899c924]
  40df80:	mov    dl,0x96
  40df82:	push   0x86b5aa62
  40df87:	outs   dx,BYTE PTR ds:[esi]
  40df88:	loop   0x40dfae
  40df8a:	fcom   QWORD PTR [ebx+0x18]
  40df8d:	jmp    0x73681981
  40df92:	or     al,0xf3
  40df94:	cs ror eax,1
  40df97:	pop    esp
  40df98:	push   ebp
  40df99:	inc    ebx
  40df9a:	test   eax,0xeb7ca457
  40df9f:	pop    ebp
  40dfa0:	adc    ch,BYTE PTR [edi+0x28]
  40dfa3:	push   ds
  40dfa4:	push   esi
  40dfa5:	ins    BYTE PTR es:[edi],dx
  40dfa6:	add    BYTE PTR [edi+0x2a4e468b],al
  40dfac:	xor    edi,DWORD PTR [eax+edx*2]
  40dfaf:	fstp   TBYTE PTR gs:[ecx+esi*8-0x5d]
  40dfb4:	lds    edi,FWORD PTR [ecx-0x50]
  40dfb7:	bound  esi,QWORD PTR [edx]
  40dfb9:	mov    edx,0x56c45a90
  40dfbe:	lea    ebp,[ecx-0x7d65f0c]
  40dfc4:	data16 sbb BYTE PTR [esi+0xc159f48],dl
  40dfcb:	jae    0x40dfe4
  40dfcd:	shl    DWORD PTR [edx+0x4e],1
  40dfd0:	inc    esp
  40dfd1:	xor    BYTE PTR [edx-0x47],0x64
  40dfd5:	(bad)  [eax+0x3e]
  40dfd8:	or     al,BYTE PTR [esi]
  40dfda:	dec    edx
  40dfdb:	xchg   ebp,eax
  40dfdc:	sub    DWORD PTR [ecx-0x2],esp
  40dfdf:	imul   ecx,DWORD PTR [ecx],0x4fd5a1c6
  40dfe5:	sbb    DWORD PTR [esi],ebx
  40dfe7:	fisubr DWORD PTR [ecx]
  40dfe9:	sub    eax,0x7e4824ab
  40dfee:	and    bh,BYTE PTR [eax+0x2f18db30]
  40dff4:	mov    BYTE PTR [edi],bh
  40dff6:	repz inc ebp
  40dff8:	cmp    ah,bh
  40dffa:	pop    es
  40dffb:	add    DWORD PTR fs:[ecx],eax
  40dffe:	pushf  
  40dfff:	inc    ebx
  40e000:	push   esi
  40e001:	retf   0xb4f5
  40e004:	in     al,dx
  40e005:	or     BYTE PTR [ecx+0x39b76bd0],al
  40e00b:	ja     0x40e000
  40e00d:	push   edx
  40e00e:	add    al,0x22
  40e010:	jp     0x40e037
  40e012:	lahf   
  40e013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e014:	das    
  40e015:	jmp    0x40e055
  40e017:	cmp    BYTE PTR [esi+ebp*8+0x7e],al
  40e01b:	and    BYTE PTR [ecx+eiz*4-0x57b33546],ah
  40e022:	add    DWORD PTR [eax+0x7b],0xffffffa5
  40e026:	push   0xba49a64c
  40e02b:	push   edx
  40e02c:	mov    esp,?
  40e02e:	jl     0x40e02a
  40e030:	adc    esp,DWORD PTR [ebp-0x2a]
  40e033:	sub    ah,BYTE PTR [ecx-0x80]
  40e036:	imul   edx,edi,0x2a1dcabf
  40e03c:	xor    ebx,DWORD PTR [edi+ebp*1]
  40e03f:	mov    edx,0xdfb195c0
  40e044:	push   ebp
  40e045:	jmp    0x40dfc8
  40e047:	xchg   BYTE PTR [edi+0x529a5e88],cl
  40e04d:	add    DWORD PTR [ebx],edx
  40e04f:	ficomp WORD PTR [esi]
  40e051:	xchg   eax,esp
  40e053:	popa   
  40e054:	les    ecx,FWORD PTR [eax]
  40e056:	ret    0xad8
  40e059:	mov    edx,0x71988f81
  40e05e:	push   ss
  40e05f:	loope  0x40e050
  40e061:	(bad)  
  40e063:	arpl   bp,cx
  40e065:	dec    ecx
  40e066:	retf   
  40e067:	int    0xc8
  40e069:	in     eax,dx
  40e06a:	or     eax,0x8636a08f
  40e06f:	ins    BYTE PTR es:[edi],dx
  40e070:	inc    ebx
  40e071:	retf   
  40e072:	inc    esp
  40e073:	test   DWORD PTR [edi],0xa8a32741
  40e079:	rol    BYTE PTR [edx-0x7],0x2b
  40e07d:	push   ds
  40e07e:	inc    ebp
  40e07f:	sbb    eax,0x592edad7
  40e084:	rol    BYTE PTR [edi+0x2e79ada6],1
  40e08a:	shl    BYTE PTR [edi+0x48],0xea
  40e08e:	enter  0x37da,0x32
  40e092:	push   esi
  40e093:	cmc    
  40e094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e095:	mov    dh,0x59
  40e097:	mov    eax,ds:0x91645611
  40e09c:	and    edi,ebp
  40e09e:	sahf   
  40e09f:	mov    ah,bl
  40e0a1:	add    DWORD PTR [esp+ecx*8-0x1b3ab0a7],edi
  40e0a8:	and    ah,BYTE PTR [ecx+0x35]
  40e0ab:	mov    al,0xb9
  40e0ad:	sbb    BYTE PTR [esi-0x12],ah
  40e0b0:	scas   al,BYTE PTR es:[edi]
  40e0b1:	pop    esp
  40e0b2:	ret    
  40e0b3:	sbb    bl,cl
  40e0b5:	mov    edi,0x219b3c5d
  40e0ba:	cmp    DWORD PTR [edx+0x23],esp
  40e0bd:	push   ds
  40e0be:	sahf   
  40e0bf:	fnsave [esi]
  40e0c1:	adc    eax,0x4497b754
  40e0c6:	dec    ecx
  40e0c7:	xor    al,0x70
  40e0c9:	add    DWORD PTR [bx-0x5672],esp
  40e0ce:	and    al,0x15
  40e0d0:	out    0xaa,eax
  40e0d2:	sub    BYTE PTR [edi+0xf85ea9e],dl
  40e0d8:	fidivr WORD PTR [edx+eax*4-0x7e]
  40e0dc:	dec    edx
  40e0dd:	xchg   esp,eax
  40e0de:	(bad)  
  40e0df:	mov    dh,BYTE PTR [esi+0x3]
  40e0e2:	cmc    
  40e0e3:	push   ebx
  40e0e4:	adc    bl,BYTE PTR [ebx+ebx*2]
  40e0e7:	loop   0x40e15a
  40e0e9:	pop    ds
  40e0ea:	cmp    BYTE PTR [edi+0x9],dl
  40e0ed:	aad    0x4b
  40e0ef:	loop   0x40e09d
  40e0f1:	inc    esp
  40e0f2:	cmp    al,0x89
  40e0f4:	inc    esp
  40e0f5:	aam    0xf0
  40e0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0f8:	push   ebx
  40e0f9:	xor    ch,ah
  40e0fb:	pop    ebp
  40e0fc:	mov    eax,ds:0xc753d3b5
  40e101:	add    al,0x78
  40e103:	cmp    eax,0x5268bea2
  40e108:	scas   eax,DWORD PTR es:[edi]
  40e109:	dec    esi
  40e10a:	cmp    DWORD PTR [eax+0x70],0x6415ca9d
  40e111:	and    al,0x10
  40e113:	call   0xd5bf:0x2231caa5
  40e11a:	sbb    bl,BYTE PTR [eax+0x5b0a09c6]
  40e120:	mov    DWORD PTR [ebx-0x77bd7bc4],edi
  40e126:	(bad)  
  40e128:	ja     0x40e193
  40e12a:	adc    DWORD PTR [ecx+ecx*1],esi
  40e12d:	into   
  40e12e:	jmp    0xd0cbf196
  40e133:	scas   eax,DWORD PTR es:[edi]
  40e134:	dec    al
  40e136:	hlt    
  40e137:	loope  0x40e0ba
  40e139:	sbb    eax,0xe523742f
  40e13e:	das    
  40e13f:	nop
  40e140:	xchg   ecx,eax
  40e141:	call   0x22eb:0xb6d8eadf
  40e148:	push   ecx
  40e149:	mov    eax,0xd79bd84b
  40e14e:	pusha  
  40e14f:	add    al,0x6b
  40e151:	bound  esp,QWORD PTR [eax-0xe1e1909]
  40e157:	loope  0x40e163
  40e159:	push   eax
  40e15a:	pop    es
  40e15b:	(bad)  
  40e15d:	cmp    bh,al
  40e15f:	cld    
  40e160:	cld    
  40e161:	fstp   DWORD PTR [ecx]
  40e163:	jbe    0x40e189
  40e165:	jo     0x40e100
  40e167:	adc    BYTE PTR [ebp+0x66],cl
  40e16a:	and    DWORD PTR [edi+0x8a112f2],esi
  40e170:	lock stos BYTE PTR es:[edi],al
  40e172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e173:	loope  0x40e17d
  40e175:	or     BYTE PTR [esi],dl
  40e177:	mov    ch,0xe9
  40e179:	add    ah,dh
  40e17b:	cs je  0x40e109
  40e17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e17f:	ins    BYTE PTR es:[edi],dx
  40e180:	int3   
  40e181:	adc    dl,BYTE PTR [edx-0x61]
  40e184:	inc    ebx
  40e185:	sbb    ebx,eax
  40e187:	mov    ecx,0xa3d11983
  40e18c:	in     eax,dx
  40e18d:	dec    esi
  40e18e:	pop    ds
  40e18f:	je     0x40e1a9
  40e191:	sbb    eax,0xd32a862e
  40e196:	mov    al,ds:0xe672003a
  40e19b:	mov    dh,0x65
  40e19d:	jmp    FWORD PTR [ecx]
  40e19f:	std    
  40e1a0:	enter  0xc823,0xe5
  40e1a4:	fld    DWORD PTR [eax]
  40e1a6:	repz mov bl,0xdb
  40e1a9:	sub    BYTE PTR [edx+eax*1-0x4c],bh
  40e1ad:	neg    DWORD PTR [ebx]
  40e1af:	cmp    al,0x6a
  40e1b1:	push   es
  40e1b2:	and    BYTE PTR [ecx+edx*4-0x696ea0c1],cl
  40e1b9:	dec    edx
  40e1ba:	inc    ebx
  40e1bb:	cli    
  40e1bc:	mov    ?,WORD PTR [ebx-0x499656cc]
  40e1c2:	js     0x40e21b
  40e1c4:	cli    
  40e1c5:	jns    0x40e1e5
  40e1c7:	mov    al,0xbb
  40e1c9:	push   ss
  40e1ca:	or     al,BYTE PTR [ecx-0x37]
  40e1cd:	push   edi
  40e1ce:	jmp    0xb1968401
  40e1d3:	cmp    DWORD PTR [esp+ecx*2],0xffffffb3
  40e1d7:	loop   0x40e24d
  40e1d9:	rol    DWORD PTR [ebx+0x47c02106],0x4a
  40e1e0:	jle    0x40e210
  40e1e2:	out    0xb9,al
  40e1e4:	and    BYTE PTR [ecx+0x3e72a752],bl
  40e1ea:	jg     0x40e1a1
  40e1ec:	push   0xffffffae
  40e1ee:	sub    bh,dl
  40e1f0:	xchg   ebx,eax
  40e1f1:	rcr    BYTE PTR [esi-0x79a7b8e5],cl
  40e1f7:	ret    
  40e1f8:	sub    ch,ah
  40e1fa:	pop    ds
  40e1fb:	and    ch,BYTE PTR [eax]
  40e1fd:	adc    dh,BYTE PTR ds:0x39500b49
  40e203:	ins    BYTE PTR es:[edi],dx
  40e204:	cmovne esi,DWORD PTR [edx]
  40e207:	mov    ebp,0x6212f82
  40e20c:	pop    edx
  40e20d:	loope  0x40e1e1
  40e20f:	jmp    0x7b7118fc
  40e214:	fbstp  TBYTE PTR [edi+0x31]
  40e217:	push   0xffffffcf
  40e219:	inc    ecx
  40e21a:	repz fild DWORD PTR [ebx+0x70]
  40e21e:	xchg   ebp,eax
  40e21f:	daa    
  40e220:	cmc    
  40e221:	out    0xf8,al
  40e223:	mov    cs,WORD PTR [eax+edx*1-0x7f]
  40e227:	out    0x9e,eax
  40e229:	cli    
  40e22a:	mov    esi,DWORD PTR [eax-0xf]
  40e22d:	adc    al,0x8c
  40e22f:	test   BYTE PTR [edi+0x1462c3d0],al
  40e235:	shl    BYTE PTR ds:0x8939dc88,1
  40e23b:	test   DWORD PTR [edx],esp
  40e23d:	xchg   ebx,eax
  40e23e:	out    dx,al
  40e23f:	jle    0x40e24e
  40e241:	retf   
  40e242:	stos   DWORD PTR es:[edi],eax
  40e243:	jb     0x40e2c1
  40e245:	sub    DWORD PTR [edx+0x46f6ad75],ebx
  40e24b:	push   ecx
  40e24c:	mov    ds:0x39c070a5,al
  40e251:	ror    ecx,cl
  40e253:	fs mov edx,0xf2c1920d
  40e259:	xchg   edi,eax
  40e25a:	or     bh,BYTE PTR [esi-0x1d9705f2]
  40e260:	sbb    ch,al
  40e262:	int    0xf7
  40e264:	out    dx,eax
  40e265:	pushf  
  40e266:	mul    DWORD PTR [edi]
  40e268:	inc    esp
  40e269:	xchg   DWORD PTR [eax+0x1c],esp
  40e26c:	fs dec esi
  40e26e:	ror    BYTE PTR [edi-0x11babf5b],1
  40e274:	adc    bl,BYTE PTR [ecx+ecx*4+0x711851b6]
  40e27b:	mov    ds:0x2cdec9c4,eax
  40e280:	sub    ch,BYTE PTR [eax-0x2b7bcb5f]
  40e286:	mov    esi,0x2023a91a
  40e28b:	fs cmp eax,0x27d2e78a
  40e291:	mov    DWORD PTR [esi-0x4dc2a428],edx
  40e297:	sub    BYTE PTR [ecx+0x4c6007b9],bl
  40e29d:	mov    ss,WORD PTR [edx]
  40e29f:	sub    BYTE PTR [esi],ah
  40e2a1:	fcmovne st,st(7)
  40e2a3:	xchg   esp,eax
  40e2a4:	(bad)  
  40e2a5:	sub    al,0xe9
  40e2a7:	cmp    ebp,esi
  40e2a9:	frndint 
  40e2ab:	sbb    BYTE PTR [eax-0x1e0eec77],dl
  40e2b1:	xor    BYTE PTR [ebx-0x6dc408d0],al
  40e2b7:	addr16 inc edi
  40e2b9:	jbe    0x40e26e
  40e2bb:	mov    eax,ds:0x5e5b811b
  40e2c0:	xor    al,0xe6
  40e2c2:	test   DWORD PTR [eax],0x9c508951
  40e2c8:	add    BYTE PTR [ebx],ch
  40e2ca:	or     edx,DWORD PTR [ecx+eiz*2-0x3dfea0f9]
  40e2d1:	sbb    bh,BYTE PTR [edx-0x27]
  40e2d4:	ins    BYTE PTR es:[edi],dx
  40e2d5:	jns    0x40e2ff
  40e2d7:	in     eax,0xa
  40e2d9:	xchg   BYTE PTR [esi+0x1d],ch
  40e2dc:	dec    ebp
  40e2dd:	cwde   
  40e2de:	les    edx,FWORD PTR [esi+edx*8-0x13ab6ce1]
  40e2e5:	aaa    
  40e2e6:	mov    edi,0xf6b8e626
  40e2eb:	lods   al,BYTE PTR ds:[esi]
  40e2ec:	cli    
  40e2ed:	mov    eax,ds:0x6160fc3
  40e2f2:	call   0x3ebac26c
  40e2f7:	in     eax,0xbe
  40e2f9:	push   ecx
  40e2fa:	and    cl,bh
  40e2fc:	mov    ds,WORD PTR [edx+edi*1]
  40e2ff:	inc    edx
  40e300:	into   
  40e301:	dec    ecx
  40e302:	xchg   ebx,eax
  40e303:	push   esi
  40e304:	aas    
  40e305:	pop    edi
  40e306:	out    0x57,al
  40e308:	mov    esi,0xffcf9949
  40e30d:	cs cs pop esp
  40e310:	repz lea ebp,[edi+0x5055fee6]
  40e317:	ret    
  40e318:	out    dx,eax
  40e319:	push   esi
  40e31a:	fld1   
  40e31c:	retf   0x3d13
  40e31f:	adc    eax,0x98c654aa
  40e324:	dec    esi
  40e325:	xchg   ecx,eax
  40e326:	jns    0x40e393
  40e328:	sbb    esi,edx
  40e32a:	ret    0x68db
  40e32d:	fmul   QWORD PTR [ebx+0x20]
  40e330:	mov    edi,0xc5c64f8b
  40e335:	out    0x6b,al
  40e337:	pop    ebp
  40e338:	idiv   DWORD PTR [eax]
  40e33a:	inc    edi
  40e33b:	pop    eax
  40e33c:	mov    DWORD PTR [edx-0xd2c8a73],esp
  40e342:	xlat   BYTE PTR ds:[ebx]
  40e343:	(bad)  [esi]
  40e345:	(bad)  
  40e346:	lods   al,BYTE PTR ds:[esi]
  40e347:	cmp    al,0x76
  40e349:	test   DWORD PTR [ebp-0x32],ebp
  40e34c:	addr16 pop ecx
  40e34e:	pushf  
  40e34f:	pop    edi
  40e350:	in     eax,dx
  40e351:	(bad)  
  40e353:	sti    
  40e354:	lock in eax,0x86
  40e357:	es jo  0x40e3cd
  40e35a:	ret    0xdaaa
  40e35d:	in     al,0x1d
  40e35f:	dec    BYTE PTR [edi]
  40e361:	bound  edi,QWORD PTR [ecx-0xc]
  40e364:	inc    edx
  40e365:	aaa    
  40e366:	jge    0x40e3e1
  40e368:	adc    dh,dl
  40e36a:	repnz mov cl,0x8a
  40e36d:	scas   eax,DWORD PTR es:[edi]
  40e36e:	and    esp,DWORD PTR [eax]
  40e370:	rcl    bl,1
  40e372:	adc    DWORD PTR [edx],ecx
  40e374:	adc    DWORD PTR [ecx],eax
  40e376:	mov    bh,0xc8
  40e379:	cmc    
  40e37a:	dec    edi
  40e37b:	jg     0x40e392
  40e37d:	je     0x40e311
  40e37f:	dec    ebx
  40e380:	(bad)  
  40e381:	cmp    al,0xbd
  40e383:	mov    dl,BYTE PTR [edx]
  40e385:	push   ss
  40e386:	outs   dx,BYTE PTR ds:[esi]
  40e387:	adc    edx,DWORD PTR [esi+0x6c7b0707]
  40e38d:	(bad)  
  40e38e:	std    
  40e38f:	fcmovnb st,st(2)
  40e391:	mov    eax,ds:0x71fc8d6d
  40e396:	clc    
  40e397:	out    dx,eax
  40e398:	call   0x1a7a0ab2
  40e39d:	in     eax,0xa4
  40e39f:	fisttp WORD PTR [eax+ebx*4]
  40e3a2:	push   edi
  40e3a3:	xchg   edx,eax
  40e3a4:	sbb    eax,DWORD PTR [esi]
  40e3a6:	out    0x43,al
  40e3a8:	imul   edi,DWORD PTR [eax-0x23],0xfffffff6
  40e3ac:	cmp    al,0x5b
  40e3ae:	jno    0x40e40d
  40e3b0:	jl     0x40e3b4
  40e3b2:	iret   
  40e3b3:	cmp    bh,dh
  40e3b5:	mov    DWORD PTR [eax+ebp*4],0xefe0aad8
  40e3bc:	add    eax,DWORD PTR [ecx+0x7f75e278]
  40e3c2:	jecxz  0x40e42c
  40e3c4:	pop    ds
  40e3c5:	and    DWORD PTR [esi+edi*4-0x13],0x9dd7b195
  40e3cd:	and    BYTE PTR [esi],bl
  40e3cf:	leave  
  40e3d0:	mov    bl,0x1a
  40e3d2:	mov    ebx,0x7908fe2c
  40e3d7:	add    eax,0xea8060a2
  40e3dc:	xlat   BYTE PTR ds:[ebx]
  40e3dd:	das    
  40e3de:	cmp    dl,BYTE PTR [esi]
  40e3e0:	pop    ecx
  40e3e1:	pop    ss
  40e3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e3:	mov    ds:0xdc65686a,al
  40e3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e9:	xchg   esi,eax
  40e3ea:	aam    0xcf
  40e3ec:	pop    ecx
  40e3ed:	fldcw  WORD PTR [eax]
  40e3ef:	mov    ecx,0x5d51b370
  40e3f4:	fcmove st,st(4)
  40e3f6:	mov    eax,0x3d4a9140
  40e3fb:	inc    BYTE PTR [edi]
  40e3fd:	nop
  40e3fe:	shl    BYTE PTR [ebp-0x72],0xd7
  40e402:	mov    edx,ecx
  40e404:	test   al,0x62
  40e406:	fidiv  WORD PTR [edi+0x283a2c72]
  40e40c:	dec    eax
  40e40d:	shr    edi,1
  40e40f:	adc    ecx,DWORD PTR [edx+0x38aadcc6]
  40e415:	stos   BYTE PTR es:[edi],al
  40e416:	dec    esp
  40e417:	or     BYTE PTR [esi-0x1e],bl
  40e41a:	inc    esp
  40e41b:	pop    esi
  40e41c:	or     ebp,esp
  40e41e:	cmp    cl,BYTE PTR [esi+0x723311c9]
  40e424:	jb     0x40e42b
  40e426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e428:	int    0x38
  40e42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e42b:	sbb    esi,edi
  40e42d:	jl     0x40e423
  40e42f:	sbb    edx,0x3b
  40e432:	loop   0x40e408
  40e434:	call   0x21033513
  40e439:	call   0x93f7:0xfaac52ec
  40e440:	dec    edi
  40e441:	int3   
  40e442:	out    dx,eax
  40e443:	jb     0x40e3fc
  40e445:	in     al,dx
  40e446:	ficom  DWORD PTR [edx-0x60]
  40e449:	aad    0x3a
  40e44b:	std    
  40e44c:	xlat   BYTE PTR ds:[ebx]
  40e44d:	in     al,dx
  40e44e:	and    al,BYTE PTR [esi+esi*8]
  40e451:	mov    ds:0x446a3755,eax
  40e456:	jo     0x40e4d3
  40e458:	xor    al,0x6b
  40e45a:	repnz fidivr DWORD PTR [eax+0x53]
  40e45e:	adc    al,0xc4
  40e460:	jno    0x40e45d
  40e462:	push   cs
  40e463:	push   ebx
  40e464:	add    al,0xa0
  40e466:	fimul  DWORD PTR ds:0x4fa361e1
  40e46c:	xlat   BYTE PTR ds:[ebx]
  40e46d:	imul   edi,DWORD PTR [edx-0x65b1c2d5],0xffffff99
  40e474:	adc    eax,0xd78bad2b
  40e479:	inc    ebp
  40e47a:	cs retf 0xd981
  40e47e:	aas    
  40e47f:	push   ecx
  40e480:	test   eax,0xe84235c6
  40e485:	or     al,0x35
  40e487:	jne    0x40e4b6
  40e489:	dec    bl
  40e48b:	sub    edi,eax
  40e48d:	dec    eax
  40e48e:	fidiv  WORD PTR [esi+0x55]
  40e491:	mov    ebx,DWORD PTR [edi]
  40e493:	rol    esi,0xcb
  40e496:	xlat   BYTE PTR ds:[ebx]
  40e497:	int    0xe3
  40e499:	jo     0x40e4de
  40e49b:	add    al,0x21
  40e49d:	into   
  40e49e:	stos   BYTE PTR es:[edi],al
  40e49f:	scas   al,BYTE PTR es:[edi]
  40e4a0:	call   0xf636f124
  40e4a5:	pop    eax
  40e4a6:	cwde   
  40e4a7:	sbb    BYTE PTR [esp+ebp*8],ah
  40e4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ab:	add    al,0x4b
  40e4ad:	jecxz  0x40e4b8
  40e4af:	fdiv   QWORD PTR [ecx]
  40e4b1:	je     0x40e44b
  40e4b3:	pop    eax
  40e4b4:	cmp    esi,ebx
  40e4b6:	or     ah,dh
  40e4b8:	xchg   edi,eax
  40e4b9:	mov    edi,0x6202cc77
  40e4be:	xchg   edi,eax
  40e4bf:	lds    ebx,FWORD PTR [edx]
  40e4c1:	test   al,0x5b
  40e4c3:	fdiv   QWORD PTR [edi+0x301e0a8]
  40e4c9:	shl    al,0xa0
  40e4cc:	aam    0xe1
  40e4ce:	inc    ebx
  40e4cf:	enter  0xefd,0xa9
  40e4d3:	div    ebx
  40e4d5:	ficom  WORD PTR [ecx-0x46]
  40e4d8:	inc    ebx
  40e4d9:	sub    eax,0xfe0762c5
  40e4de:	mov    ds:0x1ecab627,al
  40e4e3:	jg     0x40e562
  40e4e5:	cmp    BYTE PTR [esi],al
  40e4e7:	push   edi
  40e4e8:	mov    esp,0x6a25d3ea
  40e4ed:	xor    eax,0x42339ff9
  40e4f2:	jnp    0x40e54d
  40e4f4:	ss pop edx
  40e4f6:	fcomip st,st(3)
  40e4f8:	xchg   edi,eax
  40e4f9:	add    eax,0xa3a481d4
  40e4fe:	fs jge 0x40e4bd
  40e501:	sbb    eax,esp
  40e503:	loop   0x40e551
  40e505:	popf   
  40e506:	or     DWORD PTR ds:0xa245b728,0xffffffad
  40e50d:	call   0xe750:0xc0d18057
  40e514:	es ins BYTE PTR es:[edi],dx
  40e516:	push   ss
  40e517:	int3   
  40e518:	popf   
  40e519:	mov    al,0x64
  40e51b:	(bad)  
  40e51d:	adc    eax,0xf74c8bbf
  40e522:	(bad)  
  40e523:	xchg   edx,eax
  40e524:	push   ebp
  40e525:	xor    edi,DWORD PTR [ecx+0x3d25fecc]
  40e52b:	add    eax,0x2b6507e6
  40e530:	repz mov ebp,DWORD PTR [esi]
  40e533:	(bad)  
  40e534:	cmp    BYTE PTR [edi],bl
  40e536:	(bad)  
  40e537:	pushf  
  40e538:	stos   BYTE PTR es:[edi],al
  40e539:	mov    dl,0xa8
  40e53b:	imul   esi,DWORD PTR [esi+0x3a],0xb90a440
  40e542:	cmc    
  40e543:	mov    edi,0x52da0a54
  40e548:	xor    dh,dl
  40e54a:	xchg   ebp,eax
  40e54b:	mov    dl,0xaa
  40e54d:	(bad)  
  40e54e:	inc    ebp
  40e54f:	xlat   BYTE PTR ds:[ebx]
  40e550:	leave  
  40e551:	stos   BYTE PTR es:[edi],al
  40e552:	stc    
  40e553:	fdivr  DWORD PTR [edx-0x285b9555]
  40e559:	adc    BYTE PTR [ecx-0x4e],ch
  40e55c:	cmp    bl,bl
  40e55e:	mov    DWORD PTR [esp+eax*2+0x32],esp
  40e562:	pop    ss
  40e563:	adc    eax,0xfae58d87
  40e568:	es sti 
  40e56a:	cwde   
  40e56b:	in     eax,0x28
  40e56d:	mov    ebp,0x6d837105
  40e572:	pop    ecx
  40e573:	(bad)  
  40e574:	push   edx
  40e575:	dec    edx
  40e576:	xchg   ebx,eax
  40e577:	mov    edx,0x2bf9a929
  40e57c:	sbb    al,0xac
  40e57e:	popf   
  40e57f:	mov    gs,WORD PTR [eax+esi*1-0x17]
  40e583:	push   eax
  40e584:	inc    ebp
  40e585:	mov    eax,0xc56ec0b
  40e58a:	es jmp 0xc1c0:0xaf6e36b3
  40e592:	xchg   esp,eax
  40e593:	(bad)  
  40e594:	das    
  40e595:	lock scas eax,DWORD PTR es:[edi]
  40e597:	gs mov al,0xe2
  40e59a:	shr    ebp,cl
  40e59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e59d:	leave  
  40e59e:	daa    
  40e59f:	arpl   WORD PTR [ecx-0x2a],bp
  40e5a2:	jb     0x40e534
  40e5a4:	clc    
  40e5a5:	cwde   
  40e5a6:	test   DWORD PTR [esi],0xe2d435e0
  40e5ac:	cmp    DWORD PTR es:[edi+0xca121e6],ecx
  40e5b3:	dec    ebx
  40e5b4:	adc    al,0x77
  40e5b6:	add    al,0xe3
  40e5b8:	sub    BYTE PTR [ebp-0x7c],dl
  40e5bb:	mov    al,0x65
  40e5bd:	outs   dx,BYTE PTR ds:[esi]
  40e5be:	ins    BYTE PTR es:[edi],dx
  40e5bf:	pushf  
  40e5c0:	xor    edi,esp
  40e5c2:	mov    cl,0x8b
  40e5c4:	dec    edi
  40e5c5:	or     al,0xd2
  40e5c7:	retf   0x68c2
  40e5ca:	cs cld 
  40e5cc:	(bad)  
  40e5cd:	iret   
  40e5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5cf:	xchg   ax,ax
  40e5d1:	sub    BYTE PTR [eax+0x45],bl
  40e5d4:	aam    0x9e
  40e5d6:	inc    edi
  40e5d7:	xchg   esp,eax
  40e5d8:	data16 and BYTE PTR [ebx-0x527998d3],ah
  40e5df:	or     al,0x5e
  40e5e1:	add    DWORD PTR es:[eax+0x39],0xf38e5e07
  40e5e9:	mov    ds:0xa61c4fa6,al
  40e5ee:	pop    ebx
  40e5ef:	inc    edx
  40e5f0:	mov    ds:0x144427b9,al
  40e5f5:	dec    edx
  40e5f6:	mov    bh,0x3a
  40e5f8:	ds cmp eax,0x6e06ea90
  40e5fe:	repz addr16 pop ds
  40e601:	loope  0x40e610
  40e603:	clc    
  40e604:	pushf  
  40e605:	idiv   DWORD PTR [ecx-0x78b87e33]
  40e60b:	cmp    dl,BYTE PTR [ecx-0x31]
  40e60e:	inc    esp
  40e60f:	ds pop eax
  40e611:	add    DWORD PTR [esi],eax
  40e613:	aaa    
  40e614:	icebp  
  40e615:	adc    DWORD PTR [esp+eiz*2-0x23f674e5],esp
  40e61c:	sub    eax,0x94d9369a
  40e621:	xor    BYTE PTR [eax-0x25],bh
  40e624:	mov    eax,ds:0xbdf3bcbb
  40e629:	pop    ebp
  40e62a:	sar    esp,cl
  40e62c:	push   edi
  40e62d:	leave  
  40e62e:	leave  
  40e62f:	and    eax,0xa004321f
  40e634:	mov    edi,0xd88f6f1
  40e639:	mov    esi,0x7e281b64
  40e63e:	cdq    
  40e63f:	inc    edx
  40e640:	jae    0x40e5d0
  40e642:	(bad)  
  40e643:	shr    BYTE PTR [ebp+0x6b],0xcd
  40e647:	push   cs
  40e648:	aaa    
  40e649:	jge    0x40e5f6
  40e64b:	jp     0x40e677
  40e64d:	ficom  DWORD PTR [edx]
  40e64f:	std    
  40e650:	sti    
  40e651:	and    eax,0xe5101c82
  40e656:	pop    ecx
  40e657:	mov    ecx,0x291f6e83
  40e65c:	(bad)  
  40e65d:	sti    
  40e65e:	xor    bl,bh
  40e660:	popf   
  40e661:	add    eax,0xdba6a98d
  40e666:	mov    edi,0xf344aa4a
  40e66b:	xor    dl,al
  40e66d:	and    al,0xe1
  40e66f:	sub    BYTE PTR [ebx+0x1b6580fb],ah
  40e675:	sub    BYTE PTR [eax],ch
  40e677:	pushf  
  40e678:	adc    eax,0x22812d51
  40e67d:	cs ret 
  40e67f:	add    eax,DWORD PTR [eax+0x7b]
  40e682:	mov    ecx,eax
  40e684:	ror    DWORD PTR [ecx+0x4],1
  40e687:	stc    
  40e688:	mov    esp,0x7ca32ab8
  40e68d:	or     bl,BYTE PTR [edx-0x10c064c2]
  40e693:	outs   dx,BYTE PTR ds:[esi]
  40e694:	mov    al,ds:0xeb5fc649
  40e699:	pop    ebp
  40e69a:	mov    bh,0x3e
  40e69c:	xchg   ebp,eax
  40e69d:	imul   ebx,DWORD PTR [eax+0x29],0x1bb3af8c
  40e6a4:	xchg   ecx,eax
  40e6a5:	jo     0x40e710
  40e6a7:	ins    DWORD PTR es:[edi],dx
  40e6a8:	ja     0x40e686
  40e6aa:	sbb    BYTE PTR [ebx+0xf4b2c43],0xd0
  40e6b1:	call   0xfe0b:0xb4e9dc8
  40e6b8:	sti    
  40e6b9:	xchg   ebp,eax
  40e6ba:	jg     0x40e6ce
  40e6bc:	std    
  40e6bd:	out    dx,al
  40e6be:	xor    eax,0x11b3a6f6
  40e6c3:	stos   BYTE PTR es:[edi],al
  40e6c4:	scas   al,BYTE PTR es:[edi]
  40e6c5:	pop    edx
  40e6c6:	mov    ecx,0xaad73fce
  40e6cb:	cmp    bl,BYTE PTR [edx+ecx*1-0x1bed75c4]
  40e6d2:	sub    ebp,ecx
  40e6d4:	add    eax,0x3b1ca8b7
  40e6d9:	xchg   esp,eax
  40e6da:	pop    ebp
  40e6db:	jo     0x40e6eb
  40e6dd:	mov    al,ds:0x517fbba3
  40e6e2:	sbb    DWORD PTR [edx+0x52],ebp
  40e6e5:	js     0x40e6c9
  40e6e7:	jno    0x40e72d
  40e6e9:	pusha  
  40e6ea:	cmp    DWORD PTR [ecx+0x2eae527e],ebx
  40e6f0:	pop    ebx
  40e6f1:	dec    ebx
  40e6f2:	das    
  40e6f3:	pop    ebp
  40e6f4:	repz cmc 
  40e6f6:	mov    bl,0xa4
  40e6f8:	jno    0x40e778
  40e6fa:	aaa    
  40e6fb:	cld    
  40e6fc:	lods   al,BYTE PTR ds:[esi]
  40e6fd:	xchg   edi,eax
  40e6fe:	inc    esp
  40e6ff:	pop    edx
  40e700:	ins    DWORD PTR es:[edi],dx
  40e701:	out    0xed,eax
  40e703:	adc    DWORD PTR [edi],esp
  40e705:	jmp    DWORD PTR [ecx-0x38d904dd]
  40e70b:	stos   DWORD PTR es:[edi],eax
  40e70c:	pop    edx
  40e70d:	inc    ecx
  40e70e:	shr    DWORD PTR fs:[ebp-0x7e5a3a5],cl
  40e715:	bound  edi,QWORD PTR [ebp+0x31089779]
  40e71b:	loop   0x40e799
  40e71d:	pusha  
  40e71e:	xor    BYTE PTR [ebp-0x74],0x67
  40e722:	cdq    
  40e723:	push   ebx
  40e724:	and    BYTE PTR [ebp-0x6f],bh
  40e727:	push   cs
  40e728:	or     BYTE PTR [esi-0x3],ch
  40e72b:	push   cs
  40e72c:	sbb    ebp,ebp
  40e72e:	call   0x99fe0e70
  40e733:	retf   
  40e734:	adc    DWORD PTR [ebx+edi*2+0x16],edi
  40e738:	add    DWORD PTR [edi],0xffffffe8
  40e73b:	lds    esp,FWORD PTR [esi+0x18]
  40e73e:	and    DWORD PTR [esi-0x1b50721a],ebp
  40e744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e745:	or     cl,cl
  40e747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e748:	jae    0x40e756
  40e74a:	xchg   ecx,eax
  40e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74c:	push   ss
  40e74d:	out    0x59,eax
  40e74f:	call   0xf9ed:0x818ddf48
  40e756:	mov    ch,0x76
  40e758:	cli    
  40e759:	jl     0x40e767
  40e75b:	cs cmp eax,0x3bb645de
  40e761:	lock sub ebp,DWORD PTR [edi]
  40e764:	cdq    
  40e765:	call   0x58f2fcf8
  40e76a:	sahf   
  40e76b:	xchg   esp,eax
  40e76c:	lds    edi,FWORD PTR [eax-0x46]
  40e76f:	fldenv [ecx]
  40e771:	jo     0x40e7b1
  40e773:	jnp    0x40e723
  40e775:	pop    ds
  40e776:	into   
  40e777:	shr    BYTE PTR [ebp+0x17163b6e],cl
  40e77d:	pop    esi
  40e77e:	stos   BYTE PTR es:[edi],al
  40e77f:	and    eax,0xc0c0c1c6
  40e784:	and    dh,BYTE PTR [edi+0x626ea274]
  40e78a:	sub    eax,0x35e66c7d
  40e78f:	stos   DWORD PTR es:[edi],eax
  40e790:	call   0xa457b1bc
  40e795:	inc    edi
  40e796:	arpl   WORD PTR [eax+0xc9ca5fb],si
  40e79c:	jo     0x40e728
  40e79e:	adc    bl,BYTE PTR [ecx+ebx*8+0x25ed7a13]
  40e7a5:	adc    dh,BYTE PTR [edi+0x33c58f28]
  40e7ab:	inc    esi
  40e7ac:	arpl   WORD PTR [edi+eiz*8+0x1f965705],cx
  40e7b3:	xor    eax,0x63c8b1b8
  40e7b8:	scas   al,BYTE PTR es:[edi]
  40e7b9:	ret    
  40e7ba:	inc    edx
  40e7bb:	jo     0x40e77c
  40e7bd:	(bad)  
  40e7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7bf:	in     eax,dx
  40e7c0:	fwait
  40e7c1:	lods   al,BYTE PTR ds:[esi]
  40e7c2:	dec    esp
  40e7c3:	repnz sub DWORD PTR [edi+0x334a8079],0x1f
  40e7cb:	dec    edx
  40e7cc:	dec    esp
  40e7cd:	into   
  40e7ce:	cmp    BYTE PTR [ebx-0x496bc0b6],dh
  40e7d4:	arpl   bp,si
  40e7d6:	imul   ebp,DWORD PTR ss:[esi+0x4e1409cb],0xb77a3d5b
  40e7e1:	adc    esi,DWORD PTR [eax+0x39740bce]
  40e7e7:	pop    ebx
  40e7e8:	mov    edx,0xe6f35b63
  40e7ed:	dec    esi
  40e7ee:	fucomp st(0)
  40e7f0:	call   0xe84b983f
  40e7f5:	leave  
  40e7f6:	fs (bad) 
  40e7f8:	dec    ebp
  40e7f9:	xchg   edx,eax
  40e7fa:	into   
  40e7fb:	mov    cl,0x95
  40e7fd:	mov    ebp,0x28d590f9
  40e802:	cmp    esi,DWORD PTR [edx]
  40e804:	out    0xc3,eax
  40e806:	inc    esi
  40e807:	cmp    ah,BYTE PTR [edx]
  40e809:	push   0x7a
  40e80b:	(bad)  
  40e80c:	aad    0xca
  40e80e:	sub    BYTE PTR [ebx+0x9b8293a],dh
  40e814:	les    ebp,FWORD PTR [ebp-0x410fca9e]
  40e81a:	add    eax,0x232ec700
  40e81f:	scas   al,BYTE PTR es:[edi]
  40e820:	out    dx,al
  40e821:	inc    eax
  40e822:	jle    0x40e834
  40e824:	adc    ah,BYTE PTR [ecx]
  40e826:	pusha  
  40e827:	int3   
  40e828:	push   eax
  40e829:	call   0x1f847772
  40e82e:	stc    
  40e82f:	scas   eax,DWORD PTR es:[edi]
  40e830:	xchg   ebp,eax
  40e831:	cwde   
  40e832:	cmp    DWORD PTR [edi],0x57
  40e835:	fs mov esi,0x3772f0a1
  40e83b:	hlt    
  40e83c:	jne    0x40e8ae
  40e83e:	aad    0xd7
  40e840:	cmc    
  40e841:	imul   eax,DWORD PTR [ecx+ecx*1+0x7e],0x21e10ce6
  40e849:	mov    DWORD PTR [edi-0x4fb7091e],0xc1c5c4f2
  40e853:	push   edi
  40e854:	or     BYTE PTR [eax-0x3eac84d0],cl
  40e85a:	addr16 jb 0x40e85f
  40e85d:	pop    edi
  40e85e:	fnstcw WORD PTR [esi]
  40e860:	adc    eax,ebx
  40e862:	mov    ds:0xd120805d,al
  40e867:	xchg   ecx,eax
  40e868:	repnz dec edi
  40e86a:	aam    0x74
  40e86c:	rol    DWORD PTR [ecx],cl
  40e86e:	pop    ds
  40e86f:	xor    esp,eax
  40e871:	fsubr  QWORD PTR [esi]
  40e873:	fst    DWORD PTR [edi]
  40e875:	clc    
  40e876:	or     edi,ebp
  40e878:	push   ebx
  40e879:	and    eax,0xcf0b112e
  40e87e:	shl    BYTE PTR [esi],cl
  40e880:	add    ecx,DWORD PTR [ebp+0x74]
  40e883:	data16 repnz div BYTE PTR [edx]
  40e887:	data16 loop 0x40e8eb
  40e88a:	mov    dl,0x46
  40e88c:	or     ebp,DWORD PTR [ecx]
  40e88e:	nop
  40e88f:	jo     0x40e8fd
  40e891:	xor    al,0x47
  40e893:	jno    0x40e8c0
  40e895:	retf   0x9cc6
  40e898:	enter  0x3a16,0x34
  40e89c:	sub    al,0x37
  40e89e:	fmul   DWORD PTR [edx-0x74]
  40e8a1:	loopne 0x40e8d0
  40e8a3:	cmp    edi,DWORD PTR [esi+0x61]
  40e8a6:	clc    
  40e8a7:	imul   edi,DWORD PTR [edx-0x20],0xffffffc1
  40e8ab:	pop    ebp
  40e8ac:	lahf   
  40e8ad:	inc    edi
  40e8ae:	out    dx,al
  40e8af:	ins    DWORD PTR es:[edi],dx
  40e8b0:	and    al,0xcd
  40e8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b3:	popa   
  40e8b4:	in     eax,0x8f
  40e8b6:	xchg   ebp,eax
  40e8b7:	add    eax,DWORD PTR [ecx+0x637a69f5]
  40e8bd:	add    ebx,DWORD PTR [edx-0x4f]
  40e8c0:	lods   eax,DWORD PTR ds:[esi]
  40e8c1:	jl     0x40e8e8
  40e8c3:	pusha  
  40e8c4:	test   DWORD PTR [edx],0xca410906
  40e8ca:	das    
  40e8cb:	dec    ebx
  40e8cc:	xchg   esi,eax
  40e8cd:	pop    ss
  40e8ce:	xor    BYTE PTR [ebx],dh
  40e8d0:	push   0x83f2697d
  40e8d5:	add    DWORD PTR [esp+edi*2-0x65],ecx
  40e8d9:	out    dx,eax
  40e8da:	sbb    BYTE PTR [edi],bl
  40e8dc:	aas    
  40e8dd:	scas   al,BYTE PTR es:[edi]
  40e8de:	dec    edi
  40e8df:	cli    
  40e8e0:	xor    eax,0x56d33dcb
  40e8e5:	push   esi
  40e8e6:	bound  esi,QWORD PTR [esi+0x539488f9]
  40e8ec:	cmc    
  40e8ed:	sub    al,bh
  40e8ef:	xchg   ebp,eax
  40e8f0:	push   es
  40e8f1:	jl     0x40e965
  40e8f3:	test   BYTE PTR [eax-0x8],bl
  40e8f6:	stc    
  40e8f7:	mov    ebx,0x80d71150
  40e8fc:	int3   
  40e8fd:	xlat   BYTE PTR ds:[ebx]
  40e8fe:	mov    dh,0x2e
  40e900:	inc    ebp
  40e901:	jo     0x40e906
  40e903:	cmp    eax,0x7c68bd5a
  40e908:	daa    
  40e909:	xchg   ebp,eax
  40e90a:	and    ebp,DWORD PTR [edi-0xd71f732]
  40e910:	dec    ecx
  40e911:	inc    ebx
  40e912:	sub    BYTE PTR [ecx],dl
  40e914:	stc    
  40e915:	jl     0x40e951
  40e917:	jge    0x40e954
  40e919:	cwde   
  40e91a:	cdq    
  40e91b:	enter  0xf4d3,0x3c
  40e91f:	out    dx,al
  40e920:	push   0xffffffd2
  40e922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e923:	push   ss
  40e924:	call   0x2908:0x1a3a7694
  40e92b:	sbb    eax,DWORD PTR ds:0xd8d6b1a4
  40e931:	std    
  40e932:	mov    ebx,0x163c7bf8
  40e937:	nop
  40e938:	pop    esi
  40e939:	cmp    eax,0x800e8a18
  40e93e:	fst    QWORD PTR [ebx+0x1f]
  40e941:	mov    edi,0x64e56083
  40e946:	ss popf 
  40e948:	mov    BYTE PTR [esi],dh
  40e94a:	xor    al,ch
  40e94c:	nop
  40e94d:	int    0x45
  40e94f:	sub    eax,0xfdba5d97
  40e954:	jb     0x40e961
  40e956:	mov    dh,0x74
  40e958:	inc    esp
  40e959:	cwde   
  40e95a:	test   DWORD PTR [ebx],eax
  40e95c:	ficomp DWORD PTR [esi-0x3ba3c79d]
  40e962:	aad    0x2b
  40e964:	mov    bl,0x52
  40e966:	xor    ch,dl
  40e968:	bound  esi,QWORD PTR [ebx-0x64]
  40e96b:	iret   
  40e96c:	cs mov ebp,0x2fb95795
  40e972:	enter  0x7c6b,0x86
  40e976:	icebp  
  40e977:	pushf  
  40e978:	mov    dh,BYTE PTR [edi]
  40e97a:	mov    esp,0xece755f5
  40e97f:	jmp    edi
  40e981:	adc    dh,BYTE PTR [eax+0xdb43fae]
  40e987:	fistp  QWORD PTR [ecx+edi*1+0x784e6595]
  40e98e:	popa   
  40e98f:	lahf   
  40e990:	shl    DWORD PTR [eax],cl
  40e992:	sbb    BYTE PTR [esi+0x77c2c76e],dh
  40e998:	jmp    0x40e91a
  40e99a:	xor    al,0x4e
  40e99c:	xor    eax,0x59164461
  40e9a1:	mov    bl,0x5d
  40e9a3:	jae    0x40e936
  40e9a5:	cwd    
  40e9a7:	pushf  
  40e9a8:	call   0xa5bdbccf
  40e9ad:	xchg   esp,eax
  40e9ae:	push   ebx
  40e9af:	add    BYTE PTR [ecx+0x1e78724],bl
  40e9b5:	sub    eax,0xa5967367
  40e9ba:	add    ch,BYTE PTR [eax-0x485b15b]
  40e9c0:	and    al,0x9f
  40e9c2:	in     eax,0x55
  40e9c4:	pop    ecx
  40e9c5:	mov    BYTE PTR ss:[ebx],cl
  40e9c8:	sbb    BYTE PTR [edx-0x43],ah
  40e9cb:	shl    esp,0x89
  40e9ce:	push   ss
  40e9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9d0:	sub    al,0x81
  40e9d2:	jbe    0x40e9d9
  40e9d4:	add    ebx,DWORD PTR ds:0xb65fb548
  40e9da:	mov    edi,0xdc90adc6
  40e9df:	dec    esp
  40e9e0:	jmp    ebp
  40e9e2:	adc    al,0x2f
  40e9e4:	push   ss
  40e9e5:	and    ecx,esp
  40e9e7:	retf   0xd33d
  40e9ea:	or     eax,0x1ecd75fd
  40e9ef:	add    al,0x71
  40e9f1:	or     DWORD PTR [esi-0x24b5d85e],ebp
  40e9f7:	cli    
  40e9f8:	gs test eax,0xf09e9d9e
  40e9fe:	mov    ecx,0xf58ef098
  40ea03:	in     al,0xa6
  40ea05:	xlat   BYTE PTR ds:[ebx]
  40ea06:	ins    DWORD PTR es:[edi],dx
  40ea07:	pushf  
  40ea08:	lods   eax,DWORD PTR ds:[esi]
  40ea09:	inc    esp
  40ea0a:	lds    edx,FWORD PTR [edi]
  40ea0c:	xchg   esi,eax
  40ea0d:	xchg   ecx,edi
  40ea0f:	fucomi st,st(5)
  40ea11:	mov    DWORD PTR [ecx+0x46],eax
  40ea14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea15:	push   ecx
  40ea16:	mov    ch,0x42
  40ea18:	mov    ds:0x1f2b6ad3,al
  40ea1d:	mov    esp,0xddc49571
  40ea22:	sub    DWORD PTR [ecx],ebp
  40ea24:	push   es
  40ea25:	push   esp
  40ea26:	and    BYTE PTR [eax+0x4976917],dl
  40ea2c:	call   0x9c30:0xd1c206a8
  40ea33:	stos   BYTE PTR es:[edi],al
  40ea34:	test   al,0xfb
  40ea36:	ja     0x40ea76
  40ea38:	jne    0x40ea25
  40ea3a:	jo     0x40eaac
  40ea3c:	xchg   ebp,eax
  40ea3d:	les    ecx,FWORD PTR [ecx+0x1f79f2e5]
  40ea43:	lea    ebp,[eax-0x64]
  40ea46:	les    ebp,FWORD PTR ds:0x9de4e806
  40ea4c:	(bad)  
  40ea4d:	push   edi
  40ea4e:	fidivr DWORD PTR [edx+0x50]
  40ea51:	or     al,0x46
  40ea53:	xchg   esi,eax
  40ea54:	add    ebx,edx
  40ea56:	adc    BYTE PTR [ebp-0x5e11c5eb],bh
  40ea5c:	or     cl,BYTE PTR [esi]
  40ea5e:	das    
  40ea5f:	(bad)  
  40ea60:	fstp   QWORD PTR [edx+0x498e33aa]
  40ea66:	xor    al,0x13
  40ea68:	test   bl,dl
  40ea6a:	xor    DWORD PTR [ebx-0x31],0x541d33e1
  40ea71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea72:	arpl   WORD PTR fs:[ecx+0x1],ax
  40ea76:	popf   
  40ea77:	cmp    edi,DWORD PTR [esi]
  40ea79:	push   cs
  40ea7a:	jns    0x40eabb
  40ea7c:	mov    al,0x7
  40ea7e:	imul   esi,ebx,0xffffffed
  40ea81:	cld    
  40ea82:	add    al,0x3
  40ea84:	jno    0x40eae6
  40ea86:	in     eax,0xe2
  40ea88:	clc    
  40ea89:	(bad)  
  40ea8a:	iret   
  40ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8c:	jecxz  0x40eac5
  40ea8e:	mov    edi,0xd18f4c67
  40ea93:	popa   
  40ea94:	pop    ss
  40ea95:	call   FWORD PTR [esi]
  40ea97:	inc    ecx
  40ea98:	mov    ebp,0x89b676cc
  40ea9d:	sti    
  40ea9e:	dec    BYTE PTR [esi]
  40eaa0:	loope  0x40eaf8
  40eaa2:	xlat   BYTE PTR ds:[ebx]
  40eaa3:	icebp  
  40eaa4:	jae    0x40ead7
  40eaa6:	test   al,0x21
  40eaa8:	aad    0xd9
  40eaaa:	or     al,0x78
  40eaac:	lods   al,BYTE PTR ds:[esi]
  40eaad:	jle    0x40eb26
  40eaaf:	ins    DWORD PTR es:[edi],dx
  40eab0:	pop    ebp
  40eab1:	iret   
  40eab2:	test   al,0x73
  40eab4:	jnp    0x40eadb
  40eab6:	les    ebp,FWORD PTR [edi+ebx*8-0x7db43a75]
  40eabd:	in     al,0x73
  40eabf:	repz int3 
  40eac1:	add    eax,0x1e4c35e3
  40eac6:	or     eax,0x8d58a558
  40eacb:	sar    DWORD PTR [edi+0x483a5642],1
  40ead1:	adc    ebx,DWORD PTR [ecx-0x34]
  40ead4:	dec    ebx
  40ead5:	fwait
  40ead6:	sub    cl,0xdb
  40ead9:	in     al,0xba
  40eadb:	cmp    ah,BYTE PTR [edx+0x87201e6]
  40eae1:	xlat   BYTE PTR ds:[ebx]
  40eae2:	jmp    FWORD PTR [esi-0x570e9f9]
  40eae8:	in     eax,dx
  40eae9:	adc    ch,BYTE PTR [edi]
  40eaeb:	xor    dl,BYTE PTR [ebp+0x1a]
  40eaee:	inc    edx
  40eaef:	movhps QWORD PTR [esi-0x7f],xmm7
  40eaf3:	jo     0x40ea8c
  40eaf5:	and    ebx,0xd07efd25
  40eafb:	rcl    cl,0x72
  40eafe:	arpl   WORD PTR [eax],bx
  40eb00:	xor    ah,BYTE PTR [esi]
  40eb02:	or     eax,0xcc542a85
  40eb07:	mov    ds:0x5afe26e6,eax
  40eb0c:	xchg   ecx,eax
  40eb0d:	fidivr DWORD PTR [eax-0x4e]
  40eb10:	hlt    
  40eb11:	jge    0x40eaff
  40eb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb14:	shr    DWORD PTR [ecx],cl
  40eb16:	fist   WORD PTR [edi+eiz*2+0x30]
  40eb1a:	push   edi
  40eb1b:	js     0x40eaeb
  40eb1d:	push   edi
  40eb1e:	sbb    esi,DWORD PTR [ebx]
  40eb20:	clc    
  40eb21:	mov    ecx,0xda43401b
  40eb26:	add    eax,0x8be0e0ce
  40eb2b:	out    0x72,eax
  40eb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb2e:	pop    ebx
  40eb2f:	xlat   BYTE PTR ds:[ebx]
  40eb30:	push   esp
  40eb31:	imul   ebp,DWORD PTR [ebp+0x58],0x3d
  40eb35:	ja     0x40eb09
  40eb37:	adc    ah,BYTE PTR [ecx-0x2f]
  40eb3a:	xchg   BYTE PTR [ecx+0x43],ch
  40eb3d:	test   al,0x24
  40eb3f:	scas   al,BYTE PTR es:[edi]
  40eb40:	ficom  DWORD PTR [ecx+0x54]
  40eb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb44:	jmp    0x1fa3:0x5af796b0
  40eb4b:	push   esi
  40eb4c:	nop
  40eb4d:	jg     0x40eb40
  40eb4f:	lahf   
  40eb50:	test   eax,0xd512a760
  40eb55:	ror    cl,cl
  40eb57:	imul   ecx,DWORD PTR [edx-0x7],0x7706baeb
  40eb5e:	bound  esp,QWORD PTR [eax-0x33ee32aa]
  40eb64:	add    esi,esp
  40eb66:	in     al,dx
  40eb67:	and    al,0xce
  40eb69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb6a:	lods   eax,DWORD PTR ds:[esi]
  40eb6b:	stos   DWORD PTR es:[edi],eax
  40eb6c:	arpl   WORD PTR [ebx],bx
  40eb6e:	daa    
  40eb6f:	enter  0x5ae3,0xb9
  40eb73:	push   edi
  40eb74:	xchg   DWORD PTR [eax+0x47],edi
  40eb77:	int3   
  40eb78:	push   edx
  40eb79:	repz retf 0x1e01
  40eb7d:	sub    ecx,DWORD PTR [eax+edx*4-0x44]
  40eb81:	jg     0x40eb8f
  40eb83:	scas   al,BYTE PTR es:[edi]
  40eb84:	test   DWORD PTR [esi-0x25],edx
  40eb87:	dec    edi
  40eb88:	cld    
  40eb89:	in     eax,dx
  40eb8a:	scas   eax,DWORD PTR es:[edi]
  40eb8b:	mov    ebp,0x19623f52
  40eb90:	cmp    eax,0x7f7146a3
  40eb95:	ins    DWORD PTR es:[edi],dx
  40eb96:	and    al,0x1d
  40eb98:	push   0x7b
  40eb9a:	or     edx,DWORD PTR ds:0xefbbcc11
  40eba0:	or     al,0xa3
  40eba2:	pop    edi
  40eba3:	out    0xf2,al
  40eba5:	jo     0x40ebf8
  40eba7:	mov    esi,0xf2adb40b
  40ebac:	ret    0xd745
  40ebaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb0:	cmp    BYTE PTR [edx-0x4e],bh
  40ebb3:	(bad)  
  40ebb4:	xchg   ecx,eax
  40ebb5:	(bad)  
  40ebb6:	in     eax,0x62
  40ebb8:	ins    BYTE PTR es:[edi],dx
  40ebb9:	inc    si
  40ebbb:	cmp    al,dl
  40ebbd:	sub    eax,0x3e66d60e
  40ebc2:	pop    esi
  40ebc3:	push   esi
  40ebc4:	inc    esi
  40ebc5:	aaa    
  40ebc6:	mov    al,0x6d
  40ebc8:	lock mov cl,0x56
  40ebcb:	outs   dx,BYTE PTR ds:[esi]
  40ebcc:	jbe    0x40eb6f
  40ebce:	sub    al,0xe8
  40ebd0:	daa    
  40ebd1:	inc    esi
  40ebd2:	pop    ds
  40ebd3:	xchg   esp,eax
  40ebd4:	ja     0x40eb9f
  40ebd6:	adc    DWORD PTR [edx+0x55],ecx
  40ebd9:	cs aam 0x17
  40ebdc:	inc    esi
  40ebdd:	sbb    ch,dh
  40ebdf:	cmp    eax,DWORD PTR [ecx-0x21]
  40ebe2:	icebp  
  40ebe3:	xor    edx,esi
  40ebe5:	iret   
  40ebe6:	push   edi
  40ebe7:	adc    BYTE PTR [edx],ah
  40ebe9:	push   eax
  40ebea:	xor    al,0x23
  40ebec:	imul   edx,DWORD PTR [ecx],0x7fd27ab1
  40ebf2:	loop   0x40ec58
  40ebf4:	push   edi
  40ebf5:	and    ebx,edi
  40ebf7:	jmp    0x40ec32
  40ebf9:	aam    0x1d
  40ebfb:	adc    al,0x3e
  40ebfd:	sbb    ch,dl
  40ebff:	dec    ebx
  40ec00:	jmp    0x8ad693f9
  40ec05:	sti    
  40ec06:	(bad)  
  40ec07:	pushw  es
  40ec09:	and    eax,DWORD PTR [edi]
  40ec0b:	inc    eax
  40ec0c:	xor    DWORD PTR [eax+0x5a],edi
  40ec0f:	jb     0x40ec48
  40ec11:	js     0x40ec7f
  40ec13:	sub    DWORD PTR [ecx],0x377011f5
  40ec19:	sub    BYTE PTR [esi-0x27],bl
  40ec1c:	jae    0x40ebe9
  40ec1e:	jl     0x40ec37
  40ec20:	repz aad 0xaa
  40ec23:	arpl   WORD PTR [edi-0x56],sp
  40ec26:	xor    eax,0x69fd8228
  40ec2b:	sub    BYTE PTR [ebx+0x23],dh
  40ec2e:	push   ecx
  40ec2f:	dec    esi
  40ec30:	bound  edx,QWORD PTR [ecx+0x4]
  40ec33:	mov    ebp,0x3116f2f1
  40ec38:	jb     0x40ebca
  40ec3a:	adc    DWORD PTR [esi-0x32],edx
  40ec3d:	sub    eax,0xbfe99d06
  40ec42:	adc    DWORD PTR [eiz*8+0x70061e72],esi
  40ec49:	add    eax,0x4a42636e
  40ec4e:	mov    esp,0x30a115b7
  40ec54:	jmp    0x4eeed255
  40ec59:	hlt    
  40ec5a:	fstp   QWORD PTR [esi]
  40ec5c:	ins    BYTE PTR es:[edi],dx
  40ec5d:	sbb    DWORD PTR [eax+eiz*4-0x7c],esi
  40ec61:	cmp    BYTE PTR [eax+0x77bdb854],bl
  40ec67:	mov    dh,BYTE PTR [esi+0x74]
  40ec6a:	addr16 and ebp,esp
  40ec6d:	cmp    al,0x95
  40ec6f:	dec    ecx
  40ec70:	add    eax,0x9f7e6a
  40ec75:	push   0xffffffe9
  40ec77:	outs   dx,BYTE PTR ds:[esi]
  40ec78:	dec    esi
  40ec79:	mov    al,0x3
  40ec7b:	mov    dl,0xfc
  40ec7d:	jbe    0x40ecd3
  40ec7f:	in     al,dx
  40ec80:	adc    al,ah
  40ec82:	sbb    DWORD PTR [ebx-0x1f64b598],edi
  40ec88:	add    esi,ebx
  40ec8a:	push   eax
  40ec8b:	dec    esp
  40ec8c:	mov    al,ds:0x3a69f70e
  40ec91:	mov    al,0x3
  40ec93:	clc    
  40ec94:	cmp    edx,DWORD PTR [esi+0x5fa9cf4c]
  40ec9a:	in     al,dx
  40ec9b:	leave  
  40ec9c:	sbb    al,0x3d
  40ec9e:	or     eax,0x1a5b5fd4
  40eca3:	xchg   edi,eax
  40eca4:	aaa    
  40eca5:	or     WORD PTR [eax-0x4f],0x7d
  40ecaa:	mov    ebx,0xe024726a
  40ecaf:	jmp    0x40ec7a
  40ecb1:	ja     0x40eca3
  40ecb3:	or     BYTE PTR [edi+0x44],dl
  40ecb6:	adc    al,0xe4
  40ecb9:	mov    cl,0x40
  40ecbb:	or     BYTE PTR [ebx],0x1b
  40ecbe:	inc    eax
  40ecbf:	mov    ds:0x147076bf,eax
  40ecc4:	jmp    0xedf9454e
  40ecc9:	xor    esp,DWORD PTR [ebx]
  40eccb:	js     0x40ed3e
  40eccd:	fadd   QWORD PTR [esi+0x4e]
  40ecd0:	jmp    0xab340a1d
  40ecd5:	mov    BYTE PTR [ecx+0x40],0x35
  40ecd9:	mov    ah,0x2b
  40ecdb:	mov    BYTE PTR [ebx+0x48],bh
  40ecde:	mov    esp,0xa5ac8dff
  40ece3:	xor    ecx,DWORD PTR [eax+0x79]
  40ece6:	cld    
  40ece7:	int    0xeb
  40ece9:	xchg   esp,eax
  40ecea:	scas   eax,DWORD PTR es:[edi]
  40eceb:	cmp    DWORD PTR [esp+esi*2],edx
  40ecee:	cmp    DWORD PTR [esi-0x6b],0xffffffbd
  40ecf2:	jns    0x40ecc5
  40ecf4:	stos   BYTE PTR es:[edi],al
  40ecf5:	test   eax,0x58cf3db0
  40ecfa:	cmp    DWORD PTR [esi+eiz*4-0x1b],edi
  40ecfe:	arpl   WORD PTR [esi+0x52],di
  40ed01:	sub    DWORD PTR [edi],0xffffffb2
  40ed04:	sub    eax,0x1ab83901
  40ed09:	mov    dh,dl
  40ed0b:	xchg   edi,eax
  40ed0c:	fldenv [eax-0x3f]
  40ed0f:	mov    cl,0xd6
  40ed11:	or     edx,DWORD PTR [ebx]
  40ed13:	sub    edi,ebx
  40ed15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed16:	mov    esi,0x65e90693
  40ed1b:	and    DWORD PTR [ebx],ebx
  40ed1d:	mov    DWORD PTR [edi+edx*8],edx
  40ed20:	sub    eax,0x567b314d
  40ed25:	and    BYTE PTR [si],ah
  40ed28:	add    ah,dh
  40ed2a:	ins    DWORD PTR es:[edi],dx
  40ed2b:	sar    DWORD PTR [ebp-0x13fa8d6],1
  40ed31:	std    
  40ed32:	repnz push ebx
  40ed34:	cli    
  40ed35:	adc    BYTE PTR [eax],0x55
  40ed38:	dec    edi
  40ed39:	pop    es
  40ed3a:	inc    esi
  40ed3b:	sub    esi,DWORD PTR [ebp+0x565d375]
  40ed41:	imul   esi,DWORD PTR [esi],0xae27d8e5
  40ed47:	xlat   BYTE PTR ds:[ebx]
  40ed48:	mov    ebx,esp
  40ed4a:	dec    edx
  40ed4b:	xor    eax,0x4953fafe
  40ed50:	bound  ecx,QWORD PTR [ebx-0xd]
  40ed53:	out    0x23,eax
  40ed55:	or     eax,0x97db03af
  40ed5a:	mov    ds,WORD PTR [edi]
  40ed5c:	(bad)  
  40ed5d:	jo     0x40eddd
  40ed5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed60:	push   edi
  40ed61:	dec    edx
  40ed62:	mov    esp,0x4ecf4cca
  40ed67:	inc    ebx
  40ed68:	(bad)  
  40ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6a:	in     eax,0x82
  40ed6c:	add    al,0x4e
  40ed6e:	scas   al,BYTE PTR es:[edi]
  40ed6f:	mul    cl
  40ed71:	les    edi,FWORD PTR ds:0x908e0cd5
  40ed77:	rcl    ebx,0x34
  40ed7a:	adc    BYTE PTR [edx],ah
  40ed7c:	inc    edx
  40ed7d:	cmp    dh,dl
  40ed7f:	(bad)  
  40ed81:	ss icebp 
  40ed83:	mov    ds:0xe11d227d,al
  40ed88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed89:	out    0x51,al
  40ed8b:	or     BYTE PTR [esi-0x6b],bl
  40ed8e:	mov    al,0x8e
  40ed90:	push   eax
  40ed91:	(bad)  
  40ed92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed93:	shr    BYTE PTR [edx-0x4efc8f36],0x56
  40ed9a:	(bad)  
  40ed9b:	xchg   ebx,eax
  40ed9c:	sub    eax,DWORD PTR [ecx-0x1b5b4826]
  40eda2:	add    DWORD PTR [ebx-0xfe671bf],ebp
  40eda8:	xor    eax,0xe20ece11
  40edad:	ins    BYTE PTR es:[edi],dx
  40edae:	arpl   WORD PTR ds:0xcfe5503c,si
  40edb4:	lods   al,BYTE PTR ds:[esi]
  40edb5:	cld    
  40edb6:	shl    BYTE PTR [ebx+edx*8-0x3f],0x27
  40edbb:	mov    cl,0x3b
  40edbd:	rol    edi,0xdd
  40edc0:	mov    ds:0x844a0d8e,al
  40edc5:	mov    edx,0xb49241d7
  40edca:	mov    DWORD PTR [ecx+0x47ba4ff3],ebp
  40edd0:	stc    
  40edd1:	iret   
  40edd2:	jge    0x40ee50
  40edd4:	xchg   ebp,eax
  40edd5:	add    al,0xc3
  40edd7:	mov    edi,ss
  40edd9:	mov    esi,eax
  40eddb:	sti    
  40eddc:	and    ebp,eax
  40edde:	std    
  40eddf:	rcr    DWORD PTR [eax-0x40],cl
  40ede2:	mov    fs,WORD PTR [edx+0x7893a000]
  40ede8:	xchg   eax,ecx
  40edea:	lock in eax,0xef
  40eded:	pop    esi
  40edee:	stc    
  40edef:	mov    al,ds:0x748eb4aa
  40edf4:	add    al,0x2f
  40edf6:	xchg   ebx,eax
  40edf7:	in     eax,dx
  40edf8:	and    eax,0x6dd1bae7
  40edfd:	push   edx
  40edfe:	push   es
  40edff:	(bad)  
  40ee00:	nop
  40ee01:	sar    BYTE PTR [esi+0x32f7f851],0x26
  40ee08:	mov    al,0x23
  40ee0a:	out    0xfb,al
  40ee0c:	xchg   esi,eax
  40ee0d:	xchg   bh,dl
  40ee0f:	xor    edi,edi
  40ee11:	and    DWORD PTR [edi+0x73],esp
  40ee14:	xchg   esp,eax
  40ee15:	call   0xfa3e:0xc0d486a
  40ee1c:	push   ecx
  40ee1d:	push   ebp
  40ee1e:	mov    bl,0x27
  40ee20:	stos   BYTE PTR es:[edi],al
  40ee21:	ds out dx,eax
  40ee23:	aad    0xaa
  40ee25:	retf   
  40ee26:	mov    esp,0xd038b85c
  40ee2b:	div    BYTE PTR [edx-0x8594758]
  40ee31:	rcr    BYTE PTR [ebx+0x7de0e108],1
  40ee37:	bound  esp,QWORD PTR [edi+0x61]
  40ee3a:	fldcw  WORD PTR [ecx]
  40ee3c:	lds    ebx,FWORD PTR [ebx]
  40ee3e:	sub    DWORD PTR [edi+0x77],esp
  40ee41:	mov    cl,0xab
  40ee43:	enter  0x21c2,0x14
  40ee47:	je     0x40ee22
  40ee49:	test   edi,edi
  40ee4b:	je     0x40ee28
  40ee4d:	inc    esp
  40ee4e:	xchg   bl,dh
  40ee50:	mov    ds:0x4b50f190,eax
  40ee55:	adc    eax,0x7029c423
  40ee5a:	jle    0x40eeb5
  40ee5c:	(bad)  
  40ee5d:	ja     0x40eebd
  40ee5f:	inc    edx
  40ee60:	jge    0x40eede
  40ee62:	push   edx
  40ee63:	lods   al,BYTE PTR ds:[esi]
  40ee64:	cmp    eax,0xadfe487a
  40ee69:	inc    esi
  40ee6a:	ja     0x40eee7
  40ee6c:	imul   BYTE PTR [edx+0x4bd2b0e7]
  40ee72:	pop    ss
  40ee73:	mov    BYTE PTR [ebp+0x1e],ah
  40ee76:	mov    eax,ds:0x91a1f476
  40ee7b:	loopne 0x40ee95
  40ee7d:	pop    eax
  40ee7e:	call   0x3214:0xc09d5d8b
  40ee85:	sbb    esi,DWORD PTR [ebx+0x58]
  40ee88:	imul   DWORD PTR [ebx+0x7c9841e2]
  40ee8e:	mov    ah,0xb4
  40ee90:	lods   eax,DWORD PTR ds:[esi]
  40ee91:	dec    edx
  40ee92:	mov    esp,0xf7fe5fb3
  40ee97:	das    
  40ee98:	and    DWORD PTR [esi-0x729ef635],ebx
  40ee9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee9f:	fld    QWORD PTR [esi]
  40eea1:	and    ecx,DWORD PTR [ebx]
  40eea3:	imul   edi,DWORD PTR [ebp-0x4f],0xd6b82def
  40eeaa:	xor    al,0xb9
  40eeac:	mov    cl,0x99
  40eeae:	imul   ecx,DWORD PTR [ebx],0xffffffb3
  40eeb1:	xor    BYTE PTR [edi+ecx*2],0x99
  40eeb5:	mov    ds:0xa6612f9a,eax
  40eeba:	pop    ss
  40eebb:	lock inc ecx
  40eebd:	bound  eax,QWORD PTR [ebp+eiz*4-0x13]
  40eec1:	unpckhps xmm7,xmm0
  40eec4:	loope  0x40eec5
  40eec6:	das    
  40eec7:	repnz fs add eax,0x62ef7464
  40eece:	pop    edi
  40eecf:	jecxz  0x40ef07
  40eed1:	cmp    dl,BYTE PTR [ebx+0x2d]
  40eed4:	icebp  
  40eed5:	into   
  40eed6:	dec    esi
  40eed7:	aaa    
  40eed8:	retf   0x5513
  40eedb:	out    0xfc,al
  40eedd:	push   ss
  40eede:	xchg   ebx,eax
  40eedf:	jg     0x40eeb5
  40eee1:	adc    al,BYTE PTR [eax+0x21]
  40eee4:	cmp    BYTE PTR [esi-0x6436e534],0x5a
  40eeeb:	mov    ds:0xfe996da4,al
  40eef0:	rol    ebx,cl
  40eef2:	sub    eax,0xfaef9ccd
  40eef7:	xchg   ecx,eax
  40eef8:	jne    0x40eec3
  40eefa:	cdq    
  40eefb:	out    dx,al
  40eefc:	add    BYTE PTR [esi],al
  40eefe:	adc    eax,DWORD PTR [edi+ebx*8+0x7b]
  40ef02:	dec    edx
  40ef03:	or     BYTE PTR [eax],dl
  40ef05:	push   ebx
  40ef06:	stos   DWORD PTR es:[edi],eax
  40ef07:	pop    esi
  40ef08:	jecxz  0x40eecb
  40ef0a:	data16 je 0x40ef2e
  40ef0d:	test   al,0x5c
  40ef0f:	pop    esi
  40ef10:	fist   WORD PTR [ebx]
  40ef12:	scas   eax,DWORD PTR es:[edi]
  40ef13:	mov    dh,0xa2
  40ef15:	imul   edx,DWORD PTR [ecx+0x2f],0x46
  40ef19:	pop    es
  40ef1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1b:	jg     0x40eee4
  40ef1d:	or     BYTE PTR [edi-0x185f72aa],bl
  40ef23:	xor    BYTE PTR [edx+0x3c1453c6],0xbf
  40ef2a:	lea    eax,[esi+0xf]
  40ef2d:	fdivr  QWORD PTR ds:0x9b608464
  40ef33:	out    0x1a,al
  40ef35:	sub    DWORD PTR [edi-0x31],edx
  40ef38:	add    DWORD PTR [eax-0x5c],ebx
  40ef3b:	mov    esi,0xf9a2d901
  40ef40:	sub    eax,0x79dadcef
  40ef45:	loop   0x40ef93
  40ef47:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef49:	pop    ds
  40ef4a:	pop    eax
  40ef4b:	xor    al,0x68
  40ef4d:	pop    ebp
  40ef4e:	jmp    0x40ef4c
  40ef50:	test   eax,0x69daaabd
  40ef55:	mov    esi,0xa664aaab
  40ef5a:	adc    ebx,DWORD PTR [ebp+esi*2-0x5960015a]
  40ef61:	xlat   BYTE PTR ds:[ebx]
  40ef62:	mov    edx,0x49209261
  40ef67:	out    dx,eax
  40ef68:	mov    edx,0x1918d891
  40ef6d:	and    ebp,edi
  40ef6f:	jo     0x40ef5b
  40ef71:	fnsave [ebp-0x49]
  40ef74:	inc    edx
  40ef75:	in     eax,dx
  40ef76:	adc    ah,BYTE PTR [ecx+0x1c]
  40ef79:	fstp   DWORD PTR [ecx+0x70f94704]
  40ef7f:	xchg   ecx,eax
  40ef80:	and    BYTE PTR cs:[eax+0x71],0xa6
  40ef85:	mov    eax,ds:0x46e9313d
  40ef8a:	cdq    
  40ef8b:	es inc ebx
  40ef8d:	dec    eax
  40ef8e:	or     esi,DWORD PTR [eax]
  40ef90:	pop    eax
  40ef91:	add    esp,DWORD PTR [edx-0x59adb47d]
  40ef97:	test   BYTE PTR [ebx-0x4],0x22
  40ef9b:	std    
  40ef9c:	lock shl BYTE PTR [edi],0xb0
  40efa0:	adc    ah,BYTE PTR [eax]
  40efa2:	inc    edi
  40efa3:	mov    dl,0x3d
  40efa5:	sti    
  40efa6:	daa    
  40efa7:	mov    dh,0x4a
  40efa9:	adc    BYTE PTR [eax+0x69],0xce
  40efad:	mov    al,bh
  40efaf:	mov    al,ds:0xbb2976fc
  40efb4:	xchg   esp,eax
  40efb5:	add    al,0x76
  40efb7:	je     0x40f035
  40efb9:	scas   al,BYTE PTR es:[edi]
  40efba:	ins    DWORD PTR es:[edi],dx
  40efbb:	(bad)  
  40efbc:	retf   0xe21f
  40efbf:	push   ecx
  40efc0:	imul   edx,DWORD PTR [ebx-0x18980cb9],0x3e
  40efc7:	and    eax,0x38552577
  40efcc:	xor    ecx,ebx
  40efce:	std    
  40efcf:	inc    esp
  40efd0:	jno    0x40f026
  40efd2:	mov    BYTE PTR [ebx+0x7632ac0f],ah
  40efd8:	dec    eax
  40efd9:	fcom   QWORD PTR [ebx]
  40efdb:	dec    esi
  40efdc:	mov    ds:0x52efc55f,eax
  40efe1:	ins    DWORD PTR es:[edi],dx
  40efe2:	test   BYTE PTR [edi],ah
  40efe4:	test   BYTE PTR [edi],0x35
  40efe7:	jb     0x40efb7
  40efe9:	aaa    
  40efea:	push   es
  40efeb:	aam    0xd
  40efed:	dec    edx
  40efee:	and    al,0xa0
  40eff0:	mov    ds:0xf40199a4,eax
  40eff5:	fsubr  DWORD PTR [edi-0x37d0734b]
  40effb:	pushf  
  40effc:	pop    eax
  40effd:	xchg   edx,eax
  40effe:	lods   al,BYTE PTR ds:[esi]
  40efff:	adc    BYTE PTR [edi+0x54],bh
  40f002:	outs   dx,BYTE PTR ds:[esi]
  40f003:	xor    DWORD PTR ds:0xfddf7c25,ecx
  40f009:	adc    eax,0xd1875195
  40f00e:	les    ebp,FWORD PTR [edi+0xc]
  40f011:	mov    DWORD PTR [ecx+0x6d],0xfda05c3
  40f018:	dec    ecx
  40f019:	jmp    0x40f027
  40f01b:	jl     0x40efe3
  40f01d:	jl     0x40f000
  40f01f:	sbb    eax,0xa4983fd6
  40f024:	and    dl,BYTE PTR [esi-0xa1447f7]
  40f02a:	or     bl,dl
  40f02c:	push   edi
  40f02d:	mov    cl,0x95
  40f02f:	dec    edi
  40f030:	jae    0x40efc1
  40f032:	fdiv   st(6),st
  40f034:	xor    al,BYTE PTR [ebp+ebp*1+0x31]
  40f038:	push   esp
  40f039:	xchg   esi,eax
  40f03a:	(bad)  
  40f03b:	cmp    eax,0x268c78b4
  40f040:	bound  ecx,QWORD PTR [ebx]
  40f042:	(bad)  
  40f043:	in     eax,dx
  40f044:	mov    eax,0xddb8d5de
  40f049:	push   ss
  40f04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f04b:	and    DWORD PTR [eax],ecx
  40f04d:	push   cs
  40f04e:	shr    BYTE PTR [esi-0x3f4fc5c7],0xe5
  40f055:	cmp    al,0x45
  40f057:	adc    al,BYTE PTR [ecx-0x75d3e4ae]
  40f05d:	outs   dx,DWORD PTR ds:[esi]
  40f05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05f:	sbb    esi,edi
  40f061:	dec    edi
  40f062:	scas   eax,DWORD PTR es:[edi]
  40f063:	sbb    cl,ch
  40f065:	xchg   BYTE PTR [ebp+edx*1-0x61],bh
  40f069:	cmovb  esi,DWORD PTR [edi+0x7e]
  40f06d:	test   al,0xd8
  40f06f:	ins    BYTE PTR es:[edi],dx
  40f070:	jmp    0x5c790a72
  40f075:	pushf  
  40f076:	mov    ds:0xf8c771ee,al
  40f07b:	sub    ebp,DWORD PTR [ecx+0x7c171f78]
  40f081:	sahf   
  40f082:	data16 jb 0x40f0de
  40f085:	and    edi,DWORD PTR [edi+0x7e]
  40f088:	xor    dl,BYTE PTR [eax+0x43ed87d6]
  40f08e:	and    eax,0xb14d552d
  40f093:	add    edi,DWORD PTR [edi+0x2db3bcf]
  40f099:	dec    ebp
  40f09a:	sub    DWORD PTR [edi+0x8a72425],0x2b
  40f0a1:	jnp    0x40f104
  40f0a3:	xor    BYTE PTR [edx-0x4ae60309],dl
  40f0a9:	jg     0x40f071
  40f0ab:	push   ecx
  40f0ac:	(bad)  
  40f0ad:	jmp    0x40f09a
  40f0af:	jne    0x40f0b9
  40f0b1:	(bad)  
  40f0b2:	jge    0x40f045
  40f0b4:	je     0x40f0ae
  40f0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0b7:	inc    ebp
  40f0b8:	push   ebp
  40f0b9:	mov    bh,BYTE PTR [edx+eiz*4+0x5c]
  40f0bd:	mov    al,ds:0xe63dc651
  40f0c2:	test   BYTE PTR [edx-0x2f30b9a7],dl
  40f0c8:	mov    ds:0xa16f7b35,eax
  40f0cd:	leave  
  40f0ce:	in     eax,dx
  40f0cf:	pop    ebx
  40f0d0:	lahf   
  40f0d1:	rol    DWORD PTR [edi+0x7863ee1d],cl
  40f0d7:	xlat   BYTE PTR ds:[ebx]
  40f0d8:	adc    eax,0xc759095a
  40f0dd:	sub    BYTE PTR [esi-0x3c],al
  40f0e0:	iret   
  40f0e1:	and    cl,BYTE PTR [ecx+0x78fd2f9e]
  40f0e7:	fs popf 
  40f0e9:	push   esp
  40f0ea:	dec    edx
  40f0eb:	mov    al,0x74
  40f0ed:	neg    DWORD PTR [eax]
  40f0ef:	inc    ebx
  40f0f0:	dec    edi
  40f0f1:	pop    esp
  40f0f2:	and    al,0xdb
  40f0f4:	bound  ebp,QWORD PTR [edi]
  40f0f6:	fidiv  WORD PTR [edi+0x3ce9efbd]
  40f0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0fd:	fst    DWORD PTR fs:[edi]
  40f100:	ds jo  0x40f15d
  40f103:	scas   al,BYTE PTR es:[edi]
  40f104:	mov    al,0xe8
  40f106:	jmp    0x3982:0xfb6eec76
  40f10d:	mov    eax,ds:0xd76ac38e
  40f112:	mov    al,0xe3
  40f114:	ficom  WORD PTR [ebp+0x25336aff]
  40f11a:	mov    bl,0xfa
  40f11c:	nop
  40f11d:	(bad)  
  40f11e:	xor    eax,0xeae6271e
  40f123:	stos   DWORD PTR es:[edi],eax
  40f124:	mov    al,0x98
  40f126:	lods   eax,DWORD PTR ds:[esi]
  40f127:	outs   dx,BYTE PTR ds:[esi]
  40f128:	jbe    0x40f12c
  40f12a:	mov    ecx,0xafce5fb8
  40f12f:	in     eax,dx
  40f130:	iret   
  40f131:	jmp    0x40f0c4
  40f133:	aam    0x84
  40f135:	and    DWORD PTR [ebx+0x66],eax
  40f138:	push   0x22f3636e
  40f13d:	add    cl,cl
  40f13f:	frstor [edx-0xf]
  40f142:	fwait
  40f143:	div    bh
  40f145:	jp     0x40f128
  40f147:	push   ecx
  40f148:	add    esi,DWORD PTR [ecx-0x73]
  40f14b:	push   eax
  40f14c:	xchg   BYTE PTR [ebx-0x16],bh
  40f14f:	rcr    BYTE PTR [eax+0xe],cl
  40f152:	push   es
  40f153:	cmp    DWORD PTR [esp+ebp*1+0x46a55656],esp
  40f15a:	adc    eax,0x72ecdc7
  40f15f:	or     esp,DWORD PTR [edi+0x63833b8d]
  40f165:	imul   ebx,DWORD PTR [ebp-0x62a5860d],0x5881af1b
  40f16f:	sbb    al,0x39
  40f171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f172:	mov    eax,ds:0x71b76519
  40f177:	ins    DWORD PTR es:[edi],dx
  40f178:	xor    ah,BYTE PTR ds:0x8c9edc46
  40f17e:	imul   esi,DWORD PTR [ebx],0x5f8eb271
  40f184:	dec    ebp
  40f185:	fldenv [ebx+eax*4-0x32]
  40f189:	scas   eax,DWORD PTR es:[edi]
  40f18a:	and    BYTE PTR [ebp+edx*2+0x54198b92],0x6b
  40f192:	xchg   ebp,eax
  40f193:	push   eax
  40f194:	add    bl,0xae
  40f197:	push   ebx
  40f198:	clc    
  40f199:	adc    BYTE PTR [bx-0x28],0x44
  40f19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a0:	cdq    
  40f1a1:	mov    cl,0x6
  40f1a3:	mov    ds:0x113d83df,al
  40f1a8:	cmc    
  40f1a9:	in     eax,0x91
  40f1ab:	sti    
  40f1ac:	sub    DWORD PTR [ecx],0xffffffa9
  40f1af:	push   ebp
  40f1b0:	cwde   
  40f1b1:	and    BYTE PTR [eax+0x79048bc2],cl
  40f1b7:	fld    QWORD PTR [edx+eiz*1-0x35]
  40f1bb:	pop    edi
  40f1bc:	pop    esp
  40f1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1be:	push   esi
  40f1bf:	aaa    
  40f1c0:	or     DWORD PTR [ecx+0x10],esi
  40f1c3:	cmp    al,0xbc
  40f1c5:	mov    cl,0xf0
  40f1c7:	cmp    ch,0x67
  40f1ca:	sub    edx,DWORD PTR [esi-0x4a]
  40f1cd:	xchg   ebp,eax
  40f1ce:	call   FWORD PTR [ebx+0x38]
  40f1d1:	sahf   
  40f1d2:	mov    esi,0x9a2016d8
  40f1d7:	xchg   DWORD PTR [esi],esi
  40f1d9:	jno    0x40f1f9
  40f1db:	aam    0xa7
  40f1dd:	jp     0x40f23c
  40f1df:	push   0x12
  40f1e1:	gs push 0x28
  40f1e4:	fcomp  DWORD PTR ds:0xbad39e05
  40f1ea:	psubusw mm0,mm3
  40f1ed:	or     al,BYTE PTR [ebx-0x6c]
  40f1f0:	sbb    esp,ebp
  40f1f2:	or     edx,0x4c
  40f1f5:	hlt    
  40f1f6:	pop    ss
  40f1f7:	and    eax,DWORD PTR [esi-0x452d2500]
  40f1fd:	or     al,0x25
  40f1ff:	or     dh,BYTE PTR [edi-0x1761eb2]
  40f205:	add    al,0x2a
  40f207:	cwde   
  40f208:	call   0xe0f6b7a7
  40f20d:	imul   ecx,DWORD PTR [edi],0x55
  40f210:	jmp    0xf339:0x21294aa7
  40f217:	ret    0x6e08
  40f21a:	mov    bl,0x63
  40f21c:	mov    eax,0xa61680dc
  40f221:	bswap  eax
  40f223:	mov    esp,0x4d33d93e
  40f228:	call   0x65b0b0c5
  40f22d:	jo     0x40f28d
  40f22f:	addr16 ret 
  40f231:	inc    edi
  40f232:	and    al,BYTE PTR [ecx+0x20cd7d21]
  40f238:	mov    dh,BYTE PTR [ebp-0x3b]
  40f23b:	scas   al,BYTE PTR es:[edi]
  40f23c:	mov    DWORD PTR [edi],eax
  40f23e:	mov    eax,fs
  40f240:	lds    esp,FWORD PTR [edx-0x46c7ab37]
  40f246:	(bad)  
  40f248:	jbe    0x40f225
  40f24a:	data16 fdivr QWORD PTR [ebp-0x58]
  40f24e:	sub    bh,BYTE PTR [eax]
  40f250:	sub    bl,BYTE PTR [edx-0x402f1871]
  40f256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f257:	mov    ds:0x1b609b85,eax
  40f25c:	out    0xbf,eax
  40f25e:	cmp    ch,bh
  40f260:	add    BYTE PTR [edx],0xa4
  40f263:	aaa    
  40f264:	test   BYTE PTR [edi],ah
  40f266:	fdivr  QWORD PTR [edi-0x414f2241]
  40f26c:	jge    0x40f2a6
  40f26e:	push   ebx
  40f26f:	adc    BYTE PTR [eax+0x78],ch
  40f272:	aad    0x8
  40f274:	stos   BYTE PTR es:[edi],al
  40f275:	ret    0x6898
  40f278:	rol    DWORD PTR [edi+0x16],cl
  40f27b:	stc    
  40f27c:	mul    BYTE PTR [esi]
  40f27e:	or     DWORD PTR [ecx+0x61],ecx
  40f281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f282:	bound  ebp,QWORD PTR [edx-0x56b517c3]
  40f288:	inc    edi
  40f289:	push   ebx
  40f28a:	(bad)  
  40f28b:	pop    ds
  40f28c:	push   ecx
  40f28d:	pop    ss
  40f28e:	aas    
  40f28f:	jnp    0x40f21f
  40f291:	push   ebx
  40f292:	shl    BYTE PTR [eax-0x79],1
  40f295:	les    ecx,FWORD PTR [eax]
  40f297:	out    0x8d,eax
  40f299:	lea    edi,[ecx+0x6791b947]
  40f29f:	aad    0x6e
  40f2a1:	sub    ebx,DWORD PTR [esi]
  40f2a3:	mov    ch,0x19
  40f2a5:	stos   BYTE PTR es:[edi],al
  40f2a6:	dec    esi
  40f2a7:	add    al,0x42
  40f2a9:	and    eax,0x3d7de9d9
  40f2ae:	pop    ebp
  40f2af:	or     BYTE PTR [edi],bh
  40f2b1:	and    al,0xa3
  40f2b3:	push   esp
  40f2b4:	test   DWORD PTR gs:[edx+0x4b5749ce],esp
  40f2bb:	lds    esp,FWORD PTR [esi+ecx*2-0x6a664827]
  40f2c2:	push   edx
  40f2c3:	add    edx,DWORD PTR [edx+ebx*8]
  40f2c6:	sub    BYTE PTR [ebp+0x6cf81e8],cl
  40f2cc:	sbb    eax,esp
  40f2ce:	push   es
  40f2cf:	mov    dh,dl
  40f2d1:	or     esi,DWORD PTR [ebx]
  40f2d3:	pop    esi
  40f2d4:	ja     0x40f275
  40f2d6:	xor    eax,0x71dcfe7f
  40f2db:	stc    
  40f2dc:	iret   
  40f2dd:	repz je 0x40f2d9
  40f2e0:	in     eax,dx
  40f2e1:	adc    DWORD PTR [esi+0x9],esp
  40f2e4:	test   BYTE PTR ds:0x9b8dacbd,0xd8
  40f2eb:	clc    
  40f2ec:	cmp    DWORD PTR [edx-0x112e25ba],0x3a
  40f2f3:	inc    ebx
  40f2f4:	mov    DWORD PTR [esi-0x360f873],0x7647e87b
  40f2fe:	out    0x35,al
  40f300:	imul   eax,DWORD PTR [ecx+eax*1-0x1888d9f1],0x397e628d
  40f30b:	leave  
  40f30c:	(bad)  
  40f30d:	mov    edx,0x35547d94
  40f312:	sub    DWORD PTR [eax],esp
  40f314:	push   es
  40f315:	ret    
  40f316:	add    eax,DWORD PTR [edi]
  40f318:	sti    
  40f319:	scas   al,BYTE PTR es:[edi]
  40f31a:	outs   dx,DWORD PTR ds:[esi]
  40f31b:	sti    
  40f31c:	mov    dh,BYTE PTR [edi+edi*8+0x5a]
  40f320:	cwde   
  40f321:	sbb    ch,BYTE PTR [ebp-0x1c]
  40f324:	cmc    
  40f325:	jp     0x40f351
  40f327:	xor    esi,DWORD PTR [ecx-0x3fa93b3a]
  40f32d:	fsubr  DWORD PTR [ebp-0x4d]
  40f330:	iret   
  40f331:	mov    esp,0x3516cfe4
  40f336:	imul   esp,DWORD PTR [edi-0x2d2f3cbf],0xfffffffc
  40f33d:	mov    cl,0x67
  40f33f:	scas   eax,DWORD PTR es:[edi]
  40f340:	sbb    dh,BYTE PTR [ebx-0x7b]
  40f343:	call   0xe8aa:0xebe2c87
  40f34a:	pop    ecx
  40f34b:	and    edi,ebx
  40f34d:	ret    0x9c6d
  40f350:	sbb    BYTE PTR [esi],ch
  40f352:	pop    esi
  40f353:	iret   
  40f354:	add    BYTE PTR [esi+eiz*2],al
  40f357:	nop
  40f358:	mov    ds:0x778a6f17,al
  40f35d:	mov    dl,0xb
  40f35f:	loop   0x40f350
  40f361:	dec    esp
  40f362:	sub    BYTE PTR [ebp+0x62f63761],0x63
  40f369:	cmp    BYTE PTR [edx+0xb49063a],dh
  40f36f:	jb     0x40f34c
  40f371:	mov    ah,0xb6
  40f373:	add    eax,0x1a66ede1
  40f378:	or     eax,0x94c05b2a
  40f37d:	data16 loopne 0x40f37c
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x7df860f6,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	in     al,0xa1
  40f485:	js     0x40f478
  40f487:	pop    ecx
  40f488:	add    al,0x20
  40f48a:	fwait
  40f48b:	in     eax,0x79
  40f48d:	leave  
  40f48e:	rol    BYTE PTR [ebp+0x6235da36],cl
  40f494:	imul   ebp,DWORD PTR [ebp-0x7d],0xfffffff9
  40f498:	mov    edx,0xe956b70a
  40f49d:	push   ebx
  40f49e:	mov    cl,0xab
  40f4a0:	fdivr  DWORD PTR [ecx-0x2d]
  40f4a3:	fdiv   DWORD PTR [ebx+0x7a]
  40f4a6:	cwde   
  40f4a7:	ins    BYTE PTR es:[edi],dx
  40f4a8:	add    eax,DWORD PTR [edi-0x243f2345]
  40f4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4af:	mov    bl,0x90
  40f4b1:	jp     0x40f4ad
  40f4b3:	pop    ds
  40f4b4:	mov    ebp,0xc1013f20
  40f4b9:	add    al,0x5c
  40f4bb:	je     0x40f4de
  40f4bd:	cmp    al,0xee
  40f4bf:	mov    ecx,0x2e5c725f
  40f4c4:	clc    
  40f4c5:	push   cs
  40f4c6:	jp     0x40f475
  40f4c8:	jb     0x40f47a
  40f4ca:	xor    al,0x78
  40f4cc:	es (bad) 
  40f4ce:	fwait
  40f4cf:	push   0x5e
  40f4d1:	mov    esi,0xbc135d54
  40f4d6:	into   
  40f4d7:	(bad)  
  40f4d8:	(bad)  
  40f4d9:	jb     0x40f4c6
  40f4db:	jnp    0x40f53e
  40f4dd:	ret    
  40f4de:	cmp    eax,0x5df04267
  40f4e3:	sbb    BYTE PTR [esi+eiz*1-0x6b8288d6],cl
  40f4ea:	enter  0x534d,0x61
  40f4ee:	loopne 0x40f564
  40f4f0:	sahf   
  40f4f1:	push   esi
  40f4f2:	dec    dx
  40f4f4:	xor    BYTE PTR [edi-0x76],al
  40f4f7:	fdivr  st(5),st
  40f4f9:	sbb    al,0xb
  40f4fb:	jecxz  0x40f49d
  40f4fd:	xchg   DWORD PTR [eax+0x67],eax
  40f500:	enter  0x168d,0x89
  40f504:	neg    dh
  40f506:	sahf   
  40f507:	rol    BYTE PTR [ebx+ebx*2],0x45
  40f50b:	mov    ebx,0xc9d7ca67
  40f510:	mov    eax,edx
  40f512:	lods   eax,DWORD PTR ds:[esi]
  40f513:	or     ch,BYTE PTR es:[esp+ebp*4-0x26]
  40f518:	mov    edi,0x781ab125
  40f51d:	(bad)  
  40f51e:	push   esp
  40f51f:	xor    bh,dl
  40f521:	cli    
  40f522:	(bad)  
  40f524:	mov    dl,0x8b
  40f526:	and    ah,BYTE PTR [edi]
  40f528:	mov    dh,0xd1
  40f52a:	xchg   edx,eax
  40f52b:	push   edx
  40f52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52d:	cmp    BYTE PTR [edi-0x1d],al
  40f530:	pop    esp
  40f531:	mov    bl,0xbd
  40f533:	push   edi
  40f534:	cld    
  40f535:	jg     0x40f4fa
  40f537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f538:	dec    edx
  40f539:	lds    edi,FWORD PTR [ebx-0x13]
  40f53c:	test   eax,0xc2f7bf5c
  40f541:	push   0xffffffee
  40f543:	dec    edi
  40f544:	sub    dl,ah
  40f546:	ret    
  40f547:	adc    esi,eax
  40f549:	inc    edi
  40f54a:	mov    ds:0x1ce2eee4,eax
  40f54f:	outs   dx,BYTE PTR ds:[esi]
  40f550:	das    
  40f551:	sbb    ebx,DWORD PTR [edx-0x67]
  40f554:	in     eax,dx
  40f555:	leave  
  40f556:	scas   eax,DWORD PTR es:[edi]
  40f557:	add    dh,BYTE PTR [eax+0x47ec0c9e]
  40f55d:	xchg   ebx,eax
  40f55e:	inc    esi
  40f55f:	call   0x4fa3e4b4
  40f564:	dec    ebx
  40f565:	out    0xaf,al
  40f567:	mov    gs,WORD PTR [esi]
  40f569:	fdivrp st(3),st
  40f56b:	iret   
  40f56c:	mov    al,0xb
  40f56e:	in     al,0x9f
  40f570:	enter  0xedbb,0x70
  40f574:	out    dx,eax
  40f575:	pop    ebp
  40f576:	add    eax,eax
  40f578:	mov    eax,edi
  40f57a:	sub    eax,0x784e766
  40f57f:	iret   
  40f580:	mov    bh,0x3b
  40f582:	cmc    
  40f583:	jmp    0x33d:0x5912be2c
  40f58a:	and    DWORD PTR [edx],edx
  40f58c:	sbb    esp,DWORD PTR [ecx+0x6]
  40f58f:	out    0xfe,al
  40f591:	test   eax,0x1749d5ee
  40f596:	inc    ebx
  40f597:	and    BYTE PTR [ecx-0x3d],0x43
  40f59b:	ins    DWORD PTR es:[edi],dx
  40f59c:	in     eax,0x0
  40f59e:	dec    ebp
  40f59f:	ror    DWORD PTR [edi],0xc7
  40f5a2:	jp     0x40f531
  40f5a4:	sbb    DWORD PTR [ebx],0x7a4e0b76
  40f5aa:	ret    
  40f5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ac:	mov    al,ds:0x2638205d
  40f5b1:	push   ss
  40f5b2:	int    0xe3
  40f5b4:	inc    esi
  40f5b5:	pop    esp
  40f5b6:	and    eax,0x564b6170
  40f5bb:	inc    esp
  40f5bc:	(bad)  
  40f5be:	xor    DWORD PTR [esi],0xc4a3bafc
  40f5c4:	sbb    edi,ebx
  40f5c6:	sbb    BYTE PTR [ebx],ch
  40f5c8:	dec    ecx
  40f5c9:	sbb    DWORD PTR [ecx+0x370144a9],ebp
  40f5cf:	repnz sbb ecx,DWORD PTR [esp+eiz*2-0x34]
  40f5d4:	scas   eax,DWORD PTR es:[edi]
  40f5d5:	add    BYTE PTR [ebx-0x7d],al
  40f5d8:	leave  
  40f5d9:	ret    
  40f5da:	(bad)  
  40f5db:	push   esp
  40f5dc:	(bad)  
  40f5de:	pop    ebx
  40f5df:	pop    esp
  40f5e0:	call   0x73f35af5
  40f5e5:	add    eax,0xacce5e76
  40f5ea:	xor    eax,0xca1ec9f2
  40f5ef:	jecxz  0x40f63a
  40f5f1:	test   DWORD PTR [edi+0x3e],0xf914f70f
  40f5f8:	xchg   edx,eax
  40f5f9:	jmp    0x7d7a:0xe4e4c086
  40f600:	or     edx,esp
  40f602:	loope  0x40f66a
  40f604:	sbb    dl,ch
  40f606:	mov    ds:0xe2e7c47a,al
  40f60b:	test   BYTE PTR [esi*8+0x47de9fc],ah
  40f612:	or     DWORD PTR [esi+0x2cf1b1fe],esp
  40f618:	lea    ebx,[esp+eax*1]
  40f61b:	jecxz  0x40f666
  40f61d:	xor    BYTE PTR [ecx-0x7db060],0xed
  40f624:	fadd   st(5),st
  40f626:	add    al,0x81
  40f628:	push   edi
  40f629:	fcomp  QWORD PTR [ebx+0x26]
  40f62c:	xchg   edi,eax
  40f62d:	and    BYTE PTR [ebx],al
  40f62f:	dec    ecx
  40f630:	xchg   ebp,eax
  40f631:	jbe    0x40f5c5
  40f633:	rol    BYTE PTR ds:0xfcd38c01,1
  40f639:	xchg   ebp,eax
  40f63a:	shl    BYTE PTR [ecx+0x19],0x48
  40f63e:	cmc    
  40f63f:	int    0xcd
  40f641:	inc    esp
  40f642:	cmp    al,0x17
  40f644:	pop    ecx
  40f645:	push   esp
  40f646:	mov    ds:0x1fe1c268,al
  40f64b:	mul    bh
  40f64d:	push   eax
  40f64e:	fidivr WORD PTR [ebx-0x1070d]
  40f654:	inc    ebx
  40f655:	mov    ds:0x2bd94d40,al
  40f65a:	add    al,ch
  40f65c:	pop    eax
  40f65d:	sti    
  40f65e:	das    
  40f65f:	pop    ecx
  40f660:	and    edi,DWORD PTR [edi]
  40f662:	fnsave [eax-0x1e88d96e]
  40f668:	push   di
  40f66a:	sti    
  40f66b:	neg    BYTE PTR [ecx]
  40f66d:	pop    es
  40f66e:	adc    DWORD PTR [ebp+ebx*2-0x312d759a],esp
  40f675:	vmptrld QWORD PTR [ebx]
  40f678:	adc    BYTE PTR [ecx-0x2b],ch
  40f67b:	inc    ecx
  40f67c:	adc    bl,dh
  40f67e:	outs   dx,DWORD PTR ds:[esi]
  40f67f:	sahf   
  40f680:	shl    DWORD PTR [ebx],cl
  40f682:	mov    ch,0x1d
  40f684:	cmc    
  40f685:	inc    esp
  40f686:	or     BYTE PTR [ecx+0x4da213ed],al
  40f68c:	out    0x63,al
  40f68e:	sbb    al,0xe7
  40f690:	out    dx,al
  40f691:	aas    
  40f692:	push   esi
  40f693:	cmp    dh,BYTE PTR [esi+esi*8]
  40f696:	add    edx,eax
  40f698:	xor    ah,dl
  40f69a:	push   eax
  40f69b:	inc    ecx
  40f69c:	sbb    BYTE PTR [eax-0x71deeaba],bl
  40f6a2:	sbb    DWORD PTR [ebx-0x3e],edx
  40f6a5:	daa    
  40f6a6:	std    
  40f6a7:	cmp    DWORD PTR [eax+ecx*4-0x24],edx
  40f6ab:	mov    esi,0x82efbec8
  40f6b0:	ss or  al,0xa7
  40f6b3:	mov    ebx,DWORD PTR [ebx-0x10]
  40f6b6:	cmp    BYTE PTR [edi],al
  40f6b8:	loopne 0x40f72a
  40f6ba:	push   ebp
  40f6bb:	cld    
  40f6bc:	adc    DWORD PTR [ebp+0x5c],ebp
  40f6bf:	loopne 0x40f6ef
  40f6c1:	adc    BYTE PTR [ebp+0x1d26c3ca],ah
  40f6c7:	cld    
  40f6c8:	mov    ebx,0xac88a0ad
  40f6cd:	sub    eax,DWORD PTR cs:[edi-0xd4aa50]
  40f6d4:	ds stos DWORD PTR es:[edi],eax
  40f6d6:	out    0x51,al
  40f6d8:	xchg   DWORD PTR [ebp+0x65146464],esi
  40f6de:	popf   
  40f6df:	dec    eax
  40f6e0:	or     edx,esi
  40f6e2:	call   0x3aa011b0
  40f6e7:	mul    BYTE PTR [edx+0x1c859794]
  40f6ed:	in     eax,0xfb
  40f6ef:	in     eax,dx
  40f6f0:	lahf   
  40f6f1:	xlat   BYTE PTR ds:[ebx]
  40f6f2:	aas    
  40f6f3:	xchg   ch,al
  40f6f5:	dec    ebp
  40f6f6:	bound  esp,QWORD PTR [eax+0x6a55f1b4]
  40f6fc:	push   edx
  40f6fd:	pop    ecx
  40f6fe:	leave  
  40f6ff:	test   eax,0x3d581f7
  40f704:	popa   
  40f705:	sub    al,0x50
  40f707:	stc    
  40f708:	xchg   edx,eax
  40f709:	adc    cl,al
  40f70b:	lock mov cl,0xd0
  40f70e:	xchg   ecx,eax
  40f70f:	add    bh,BYTE PTR [ebp-0x136d595c]
  40f715:	fdivr  QWORD PTR es:[ecx+ecx*2-0x3464613b]
  40f71d:	not    DWORD PTR [ebx+esi*8]
  40f720:	jnp    0x40f732
  40f722:	lock jp 0x40f764
  40f725:	pop    esi
  40f726:	pusha  
  40f727:	cmp    DWORD PTR cs:[ecx],ebp
  40f72a:	add    ecx,ebp
  40f72c:	jmp    0x4392:0x1d5772bc
  40f733:	aas    
  40f734:	int    0xf5
  40f736:	outs   dx,DWORD PTR ds:[esi]
  40f737:	pushf  
  40f738:	fstp   TBYTE PTR [ecx+0x49781375]
  40f73e:	retf   
  40f73f:	in     al,dx
  40f740:	sahf   
  40f741:	jge    0x40f71f
  40f743:	arpl   WORD PTR [esi+0x7a316d2],dx
  40f749:	mov    esp,0xb35c478
  40f74e:	push   eax
  40f74f:	sar    DWORD PTR ds:0xfc473960,0x89
  40f756:	in     eax,0x21
  40f758:	push   0xffffffe3
  40f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f75b:	bnd jne 0x40f759
  40f75e:	sbb    al,BYTE PTR [ecx+0x4b]
  40f761:	call   0x1433bd24
  40f766:	ficomp DWORD PTR ds:0xef98dca0
  40f76c:	rcr    BYTE PTR [edi-0x6b24e9ba],cl
  40f772:	pusha  
  40f773:	jp     0x40f776
  40f775:	inc    ebp
  40f776:	xchg   BYTE PTR [edx+0x29],bl
  40f779:	je     0x40f71e
  40f77b:	out    dx,eax
  40f77c:	cs aas 
  40f77e:	fisub  DWORD PTR [edi-0x2270021e]
  40f784:	push   ebp
  40f785:	stos   DWORD PTR es:[edi],eax
  40f786:	and    al,0xb8
  40f788:	pop    ecx
  40f789:	sbb    al,al
  40f78b:	or     ebp,eax
  40f78d:	gs cld 
  40f78f:	pop    esp
  40f790:	or     BYTE PTR [ebx-0x53],bl
  40f793:	je     0x40f7ee
  40f795:	cmp    DWORD PTR [ecx],ecx
  40f797:	stos   BYTE PTR es:[edi],al
  40f798:	mov    eax,0x2e9dd7fc
  40f79d:	sbb    al,0xf
  40f79f:	push   ebp
  40f7a0:	js     0x40f803
  40f7a2:	sbb    al,0xb5
  40f7a4:	outs   dx,BYTE PTR ds:[esi]
  40f7a5:	les    ebx,FWORD PTR [ebp+0x5eb2077b]
  40f7ab:	and    ecx,DWORD PTR [ebp-0x15]
  40f7ae:	arpl   WORD PTR [edi+0x6beb71e4],sp
  40f7b4:	sbb    eax,0x2604983b
  40f7b9:	xor    ah,bl
  40f7bb:	and    DWORD PTR [esp+esi*1],ebp
  40f7be:	cmp    eax,0xa7876934
  40f7c3:	mov    dl,0xe8
  40f7c5:	ds xor eax,0xcee7d6b5
  40f7cb:	ret    
  40f7cc:	div    cl
  40f7ce:	push   ebx
  40f7cf:	cmp    BYTE PTR [esi+0x3d],cl
  40f7d2:	gs mov dl,0x0
  40f7d5:	adc    BYTE PTR [esi+0x36a92ab0],0x27
  40f7dc:	mov    ?,WORD PTR [edx-0x62]
  40f7df:	inc    ecx
  40f7e0:	inc    esp
  40f7e1:	xor    dl,ch
  40f7e3:	stos   BYTE PTR es:[edi],al
  40f7e4:	cwde   
  40f7e5:	dec    ebx
  40f7e6:	xor    DWORD PTR [ebx+0x70],eax
  40f7e9:	loop   0x40f79c
  40f7eb:	xor    edi,0xff699cba
  40f7f1:	pop    ebx
  40f7f2:	fsub   st,st(0)
  40f7f4:	jnp    0x40f7a0
  40f7f6:	in     eax,dx
  40f7f7:	je     0x40f7d1
  40f7f9:	daa    
  40f7fa:	gs push 0xf363ec85
  40f800:	xor    eax,0x5db7eb00
  40f805:	es jmp 0x40f85e
  40f808:	ins    DWORD PTR es:[edi],dx
  40f809:	outs   dx,BYTE PTR ds:[esi]
  40f80a:	sbb    al,0x22
  40f80c:	mov    dl,0x2
  40f80e:	loop   0x40f7ae
  40f810:	fdivrp st(1),st
  40f812:	and    cx,WORD PTR [edi+0x2c]
  40f816:	jl     0x40f853
  40f818:	lods   al,BYTE PTR ds:[esi]
  40f819:	test   DWORD PTR [eax],esp
  40f81b:	add    DWORD PTR [edi+ebx*4-0x63],ecx
  40f81f:	ror    ah,0xc4
  40f822:	mov    dl,0x3c
  40f824:	lods   al,BYTE PTR ds:[esi]
  40f825:	xlat   BYTE PTR ds:[ebx]
  40f826:	enter  0x316,0x54
  40f82a:	inc    eax
  40f82b:	sbb    eax,0xcb6043b2
  40f830:	popa   
  40f831:	mov    BYTE PTR [eax-0x9bf7e39],al
  40f837:	aad    0x74
  40f839:	dec    ebp
  40f83a:	shl    ecx,0xc5
  40f83d:	pop    ebx
  40f83e:	(bad)  
  40f83f:	lods   al,BYTE PTR ds:[esi]
  40f840:	nop
  40f841:	mov    ah,0x97
  40f843:	fist   WORD PTR [esi+0x7d8f27bf]
  40f849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84a:	mov    edi,0x4c2fd510
  40f84f:	ds cmp al,0x76
  40f852:	aam    0xc1
  40f854:	pop    esp
  40f855:	shr    BYTE PTR [ebp-0x54],cl
  40f858:	sub    ecx,0xffffffcc
  40f85b:	sub    edi,DWORD PTR [edx]
  40f85d:	jne    0x40f7df
  40f85f:	or     cl,bh
  40f861:	push   ecx
  40f862:	shl    DWORD PTR ds:0x873737d9,0x1f
  40f869:	pop    esi
  40f86a:	and    bl,BYTE PTR [eax]
  40f86c:	xchg   bl,ah
  40f86e:	loop   0x40f857
  40f870:	stos   BYTE PTR es:[edi],al
  40f871:	in     eax,dx
  40f872:	jle    0x40f8e9
  40f874:	or     ah,BYTE PTR ds:0xc03ae6a1
  40f87a:	cmp    eax,ebp
  40f87c:	or     bh,BYTE PTR [edi-0x7e376353]
  40f882:	add    BYTE PTR [ebp+0x12096deb],0x98
  40f889:	(bad)  
  40f88a:	(bad)  
  40f88b:	or     al,0x91
  40f88d:	outs   dx,BYTE PTR cs:[esi]
  40f88f:	call   FWORD PTR [eax*1-0x4c25babb]
  40f896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f897:	outs   dx,BYTE PTR ds:[esi]
  40f898:	sub    al,0x41
  40f89a:	xchg   DWORD PTR [edx],ebp
  40f89c:	jb     0x40f8ef
  40f89e:	xlat   BYTE PTR ds:[ebx]
  40f89f:	lock ja 0x40f892
  40f8a2:	jbe    0x40f8ce
  40f8a4:	dec    ebx
  40f8a5:	pop    ebp
  40f8a6:	xor    BYTE PTR [ecx-0x4f],bh
  40f8a9:	cmp    ch,bl
  40f8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ac:	adc    eax,DWORD PTR [ebp-0x4f]
  40f8af:	jmp    0xfd06f35d
  40f8b4:	in     eax,0xc0
  40f8b6:	mov    ebx,0x1ab68c3c
  40f8bb:	call   0xf740:0xf4179d6d
  40f8c2:	jb     0x40f87e
  40f8c4:	xchg   ebp,eax
  40f8c5:	jl     0x40f8f4
  40f8c7:	push   ebp
  40f8c8:	out    dx,al
  40f8c9:	inc    edx
  40f8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8cb:	mov    ecx,0x71febf50
  40f8d0:	mov    ah,0xd4
  40f8d2:	mov    gs,WORD PTR [ecx-0x22]
  40f8d5:	stos   BYTE PTR es:[edi],al
  40f8d6:	xchg   ecx,ebx
  40f8d8:	inc    ebp
  40f8d9:	cdq    
  40f8da:	xor    eax,0x7c30f213
  40f8df:	xor    al,0x6a
  40f8e1:	lahf   
  40f8e2:	loop   0x40f94e
  40f8e4:	xor    BYTE PTR [ecx+0x55],dl
  40f8e7:	setnp  BYTE PTR [ecx+ebp*1+0x61276161]
  40f8ef:	xchg   ebx,eax
  40f8f0:	fisttp DWORD PTR [ecx]
  40f8f2:	dec    ebx
  40f8f3:	test   cl,0xcb
  40f8f6:	shl    al,cl
  40f8f8:	jno    0x40f886
  40f8fa:	fdivr  DWORD PTR [eax-0x5605a828]
  40f900:	popf   
  40f901:	jb     0x40f8d3
  40f903:	lahf   
  40f904:	test   DWORD PTR [edi+eiz*2-0x231395fd],ecx
  40f90b:	hlt    
  40f90c:	and    BYTE PTR [ebx+0x75],0xa5
  40f910:	gs repz sbb edi,esi
  40f914:	push   0x3c8a7211
  40f919:	mov    eax,0xca2b7f83
  40f91e:	and    dl,BYTE PTR [eax-0x7904285]
  40f924:	cmp    cl,BYTE PTR [ecx+0xdb70be1]
  40f92a:	mov    esp,0x5243186a
  40f92f:	lock bsr edi,edx
  40f933:	jo     0x40f94c
  40f935:	imul   BYTE PTR [ebx]
  40f937:	cs js  0x40f976
  40f93a:	or     esi,edx
  40f93c:	jne    0x40f92c
  40f93e:	mov    cl,0x73
  40f940:	mov    WORD PTR [edx-0x1],ds
  40f943:	inc    eax
  40f944:	inc    eax
  40f945:	in     eax,0x0
  40f947:	scas   eax,DWORD PTR es:[edi]
  40f948:	sbb    esp,ecx
  40f94a:	and    al,0x9b
  40f94c:	ins    BYTE PTR es:[edi],dx
  40f94d:	cmp    dl,BYTE PTR [edx]
  40f94f:	mov    ch,0xd
  40f951:	mov    BYTE PTR [eax],ah
  40f953:	mov    ch,0x3
  40f955:	xchg   ebx,eax
  40f956:	(bad)  
  40f957:	loopne 0x40f910
  40f959:	fisub  DWORD PTR [ebp-0xc]
  40f95c:	inc    edi
  40f95d:	or     eax,0x77ed7ddc
  40f962:	push   ds
  40f963:	mov    al,0x4e
  40f965:	stc    
  40f966:	push   esp
  40f967:	hlt    
  40f968:	xchg   ebx,eax
  40f969:	addr16 sar edx,0x9d
  40f96d:	xor    BYTE PTR [ebx-0x6d8c8358],0x7c
  40f974:	mov    bh,0xb5
  40f976:	adc    DWORD PTR [eax*2-0x207234bc],esp
  40f97d:	leave  
  40f97e:	js     0x40f90d
  40f980:	inc    esi
  40f981:	inc    esp
  40f982:	jae    0x40f9d4
  40f984:	sbb    DWORD PTR [esi+0x309aef74],edi
  40f98a:	xor    eax,0x92aff468
  40f98f:	sub    DWORD PTR [edx],esp
  40f991:	sbb    al,0xb
  40f993:	out    0x5e,al
  40f995:	push   edi
  40f996:	mov    dh,0x2e
  40f998:	js     0x40f9a0
  40f99a:	or     ch,BYTE PTR [edx]
  40f99c:	push   0xffffffab
  40f99e:	ins    BYTE PTR es:[edi],dx
  40f99f:	pop    ebp
  40f9a0:	adc    eax,0x52618a8d
  40f9a5:	add    dh,BYTE PTR [esi]
  40f9a7:	fwait
  40f9a8:	xchg   esi,edx
  40f9aa:	mov    ds:0x14b6bcfb,al
  40f9af:	mov    dl,0xc7
  40f9b1:	aad    0x18
  40f9b3:	repz mov ds:0x66175b5f,eax
  40f9b9:	mov    eax,ds:0xe4eb9a2
  40f9be:	jl     0x40f9cb
  40f9c0:	sub    eax,0xf22a964b
  40f9c5:	jnp    0x40f9e7
  40f9c7:	jne    0x40f9b3
  40f9c9:	mov    esp,0x5c2a8c35
  40f9ce:	xchg   DWORD PTR [esi-0x3],esi
  40f9d1:	push   es
  40f9d2:	fs mov ah,0x4d
  40f9d5:	push   ebx
  40f9d6:	mov    WORD PTR [ebx],ds
  40f9d8:	jg     0x40f9fa
  40f9da:	jae    0x40fa1e
  40f9dc:	push   esi
  40f9dd:	mov    al,ds:0xa7a25be1
  40f9e2:	push   0xa06fb5a3
  40f9e7:	push   eax
  40f9e8:	adc    eax,0x6b667353
  40f9ed:	icebp  
  40f9ee:	inc    ebp
  40f9ef:	sbb    edx,edx
  40f9f1:	mov    ebp,0xe757a1ab
  40f9f6:	scas   al,BYTE PTR es:[edi]
  40f9f7:	xlat   BYTE PTR ds:[ebx]
  40f9f8:	sti    
  40f9f9:	ret    
  40f9fa:	mov    eax,0xca0e52b4
  40f9ff:	add    esp,DWORD PTR [ecx]
  40fa01:	(bad)  
  40fa02:	es shl bl,cl
  40fa05:	jo     0x40f99a
  40fa07:	push   es
  40fa08:	fs add dl,ch
  40fa0b:	out    dx,eax
  40fa0c:	sub    ecx,esi
  40fa0e:	xchg   ebx,eax
  40fa0f:	test   al,0xd1
  40fa11:	js     0x40fa8e
  40fa13:	test   al,ch
  40fa15:	(bad)  
  40fa16:	mov    edx,0xf6f2d07
  40fa1b:	iret   
  40fa1c:	add    ecx,edx
  40fa1e:	dec    eax
  40fa1f:	ins    DWORD PTR es:[edi],dx
  40fa20:	mov    ecx,0x20ddbb8b
  40fa25:	cmp    DWORD PTR [ebp+0x2f],esp
  40fa28:	sub    cl,BYTE PTR [edx]
  40fa2a:	in     al,0xec
  40fa2c:	mov    dh,0x4d
  40fa2e:	js     0x40fa2a
  40fa30:	nop
  40fa31:	xor    al,0x5f
  40fa33:	lea    ecx,[esi]
  40fa35:	fstp   TBYTE PTR [ebx-0x1a]
  40fa38:	jge    0x40fa8a
  40fa3a:	pop    edx
  40fa3b:	jecxz  0x40f9c8
  40fa3d:	xor    ebp,DWORD PTR [ecx+0x1b]
  40fa40:	add    ebp,0x7a
  40fa43:	lock jb 0x40f9e1
  40fa46:	shl    DWORD PTR [ecx+0x1fb7a66e],0xea
  40fa4d:	mov    eax,0xd2c85992
  40fa52:	cmc    
  40fa53:	push   ecx
  40fa54:	(bad)  
  40fa55:	fsubr  DWORD PTR [esi]
  40fa57:	push   es
  40fa58:	pop    es
  40fa59:	pop    esi
  40fa5a:	or     ebp,DWORD PTR [edi+0x16]
  40fa5d:	bound  edx,QWORD PTR [ecx+0x7ff645ba]
  40fa63:	jnp    0x40faa1
  40fa65:	in     al,dx
  40fa66:	sahf   
  40fa67:	adc    BYTE PTR [esi+0x47f80141],cl
  40fa6d:	arpl   WORD PTR [edx-0xa],bp
  40fa70:	or     eax,0xd6f1c14
  40fa75:	jb     0x40fa5a
  40fa77:	clc    
  40fa78:	push   ss
  40fa79:	je     0x40fa0d
  40fa7b:	pop    ds
  40fa7c:	leave  
  40fa7d:	stos   DWORD PTR es:[edi],eax
  40fa7e:	ret    0xd667
  40fa81:	aaa    
  40fa82:	xchg   edx,eax
  40fa83:	hlt    
  40fa84:	ja     0x40facb
  40fa86:	cld    
  40fa87:	and    ah,BYTE PTR [edi]
  40fa89:	repz pop esi
  40fa8b:	dec    ebx
  40fa8c:	sahf   
  40fa8d:	in     al,dx
  40fa8e:	std    
  40fa8f:	mov    eax,0xe47ba478
  40fa94:	adc    al,0x2b
  40fa96:	jmp    DWORD PTR [ebx-0x6d]
  40fa99:	add    DWORD PTR [ebp+0x3a],edx
  40fa9c:	je     0x40fafb
  40fa9e:	sub    eax,0x1498a9f2
  40faa3:	mov    dh,0xda
  40faa5:	call   0x3865:0x583b
  40faab:	push   eax
  40faac:	call   0x9ae1:0x65d7
  40fab2:	(bad)  
  40fab3:	retf   0x6ba0
  40fab6:	test   eax,0xf8b5298c
  40fabb:	nop
  40fabc:	stos   BYTE PTR es:[edi],al
  40fabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabe:	ret    
  40fabf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fac0:	pop    ds
  40fac1:	dec    edx
  40fac2:	or     BYTE PTR [edx],dl
  40fac4:	sub    eax,0x34474453
  40fac9:	lds    edi,FWORD PTR [ebx+edi*2]
  40facc:	call   0x8bb6:0x2fb23be9
  40fad3:	js     0x40fad6
  40fad5:	xchg   edx,eax
  40fad6:	ins    BYTE PTR es:[edi],dx
  40fad7:	neg    BYTE PTR [esi+0x3ae6b204]
  40fadd:	xchg   BYTE PTR [edi+0x4a103de5],bl
  40fae3:	fist   DWORD PTR ds:0x31924dcb
  40fae9:	aam    0x4f
  40faeb:	scas   eax,DWORD PTR es:[edi]
  40faec:	push   DWORD PTR [edi+0x8]
  40faef:	sahf   
  40faf0:	pushf  
  40faf1:	ret    
  40faf2:	xor    al,0x8f
  40faf4:	xchg   edi,eax
  40faf5:	ret    0xa3e5
  40faf8:	rcr    ch,cl
  40fafa:	lahf   
  40fafb:	into   
  40fafc:	jle    0x40fb3e
  40fafe:	push   edx
  40faff:	mov    cs,WORD PTR [eax-0x53f243c6]
  40fb05:	sbb    DWORD PTR [ecx],edx
  40fb07:	push   eax
  40fb08:	jmp    0x40fadb
  40fb0a:	daa    
  40fb0b:	das    
  40fb0c:	outs   dx,DWORD PTR ds:[esi]
  40fb0d:	dec    eax
  40fb0e:	sar    DWORD PTR [ecx-0x351a110b],0xd6
  40fb15:	dec    esi
  40fb16:	xor    DWORD PTR [eax+0x4e],esi
  40fb19:	jae    0x40fb28
  40fb1b:	in     al,dx
  40fb1c:	and    esi,DWORD PTR [eax-0x32]
  40fb1f:	cmp    ah,BYTE PTR [ebx-0x3103497a]
  40fb25:	sub    ebp,DWORD PTR [ecx+0x2b3deb42]
  40fb2b:	mov    ah,0x5f
  40fb2d:	ret    
  40fb2e:	mov    dh,0x44
  40fb30:	cmp    BYTE PTR [eax],ch
  40fb32:	fisttp DWORD PTR [eax-0x51]
  40fb35:	sbb    BYTE PTR [edi],bl
  40fb37:	cmp    eax,0xd2f0b09f
  40fb3c:	out    0x47,al
  40fb3e:	fdivr  DWORD PTR [edx]
  40fb40:	jp     0x40fbb6
  40fb42:	and    BYTE PTR [edi-0x68c0289e],dl
  40fb48:	shr    ecx,cl
  40fb4a:	psrld  mm1,QWORD PTR [edx+0x29d5421f]
  40fb51:	aam    0x2b
  40fb53:	bound  esi,QWORD PTR [ebx+0x5a]
  40fb56:	loopne 0x40fbba
  40fb58:	stc    
  40fb59:	repnz push cs
  40fb5b:	pop    ss
  40fb5c:	inc    edi
  40fb5d:	push   eax
  40fb5e:	lock pop ds
  40fb60:	mov    edx,0xb0d45f2e
  40fb65:	lock sub DWORD PTR [ebp+edi*1-0x1cc261cd],edi
  40fb6d:	push   eax
  40fb6e:	ins    BYTE PTR es:[edi],dx
  40fb6f:	shl    BYTE PTR [ebx],0x93
  40fb72:	and    ebx,DWORD PTR [edx+0x65]
  40fb75:	push   ecx
  40fb76:	retf   0x7a2d
  40fb79:	inc    ebp
  40fb7a:	repz loopne 0x40fbca
  40fb7d:	repnz in al,0xfa
  40fb80:	push   es
  40fb81:	(bad)  
  40fb82:	cmp    eax,DWORD PTR [ebp-0x1a]
  40fb85:	adc    BYTE PTR [ecx+0x33a181c2],ah
  40fb8b:	ins    BYTE PTR es:[edi],dx
  40fb8c:	pop    ss
  40fb8d:	adc    DWORD PTR [edi-0x4d],esi
  40fb90:	or     DWORD PTR [ecx+0x6f1a6178],0x23771f84
  40fb9a:	cmp    al,0x59
  40fb9c:	xchg   edx,eax
  40fb9d:	popa   
  40fb9e:	adc    esi,DWORD PTR [eax]
  40fba0:	jg     0x40fc1e
  40fba2:	(bad)  [edi-0x3b]
  40fba5:	aam    0x4b
  40fba7:	leave  
  40fba8:	jb     0x40fbb5
  40fbaa:	sub    eax,0x1eaa8560
  40fbaf:	mov    al,0x76
  40fbb1:	rcr    DWORD PTR [eax+0x7d],1
  40fbb4:	std    
  40fbb5:	xor    bh,BYTE PTR [eax-0x40]
  40fbb8:	xor    al,0xe0
  40fbba:	dec    esp
  40fbbb:	sub    al,0x99
  40fbbd:	inc    dx
  40fbbf:	ja     0x40fbe0
  40fbc1:	cmp    DWORD PTR [esi-0x60],esi
  40fbc4:	iret   
  40fbc5:	xlat   BYTE PTR ds:[ebx]
  40fbc6:	sbb    DWORD PTR [ecx-0x77],ebp
  40fbc9:	mov    al,BYTE PTR [edi]
  40fbcb:	cmp    bl,al
  40fbcd:	xchg   ecx,eax
  40fbce:	outs   dx,DWORD PTR ds:[esi]
  40fbcf:	jmp    0x40fc35
  40fbd1:	jg     0x40fbad
  40fbd3:	adc    eax,0x1b3ed2b9
  40fbd8:	mov    edi,0xd675b4da
  40fbdd:	lock mov ch,BYTE PTR [ecx-0x2f41de67]
  40fbe4:	inc    eax
  40fbe5:	inc    edx
  40fbe6:	xor    edx,ebp
  40fbe8:	xchg   esp,eax
  40fbe9:	mov    es,WORD PTR [ecx+0x27]
  40fbec:	cmp    eax,0x5e03502a
  40fbf1:	add    eax,0x87dff7b3
  40fbf6:	push   cs
  40fbf7:	je     0x40fc19
  40fbf9:	cmp    esp,DWORD PTR ds:0x3c1fc7c6
  40fbff:	test   DWORD PTR [edx+0x57c1678],ecx
  40fc05:	xor    BYTE PTR [edi+0x19699f2a],ah
  40fc0b:	adc    DWORD PTR [esi+0x397ceeb8],edi
  40fc11:	daa    
  40fc12:	mov    eax,0xcf47f6f9
  40fc17:	mov    esp,0xa5d078d6
  40fc1c:	dec    ecx
  40fc1d:	xchg   ebx,eax
  40fc1e:	je     0x40fbd4
  40fc20:	outs   dx,BYTE PTR ds:[esi]
  40fc21:	or     eax,0x4ea4a34f
  40fc26:	mov    eax,ds:0xdb4b6e51
  40fc2b:	nop
  40fc2c:	add    ebx,DWORD PTR [esi]
  40fc2e:	inc    esi
  40fc2f:	cmp    esp,DWORD PTR ds:0xbcc0f7b1
  40fc35:	inc    edx
  40fc36:	popf   
  40fc37:	fsubr  QWORD PTR [ebx+0x1e]
  40fc3a:	out    0x5c,eax
  40fc3c:	xchg   ebx,eax
  40fc3d:	idiv   BYTE PTR [ebx+eax*4+0x28]
  40fc41:	rol    DWORD PTR [ebx],1
  40fc43:	and    al,0xeb
  40fc45:	loop   0x40fc5b
  40fc47:	or     eax,0xdd2eeea5
  40fc4c:	cmp    eax,edx
  40fc4e:	add    BYTE PTR [eax+0x66],ch
  40fc51:	es fdivrp st(2),st
  40fc54:	inc    edx
  40fc55:	xchg   edi,eax
  40fc56:	adc    DWORD PTR ds:0xfca3dd43,ebx
  40fc5c:	and    esp,DWORD PTR [edx]
  40fc5e:	cld    
  40fc5f:	daa    
  40fc60:	mov    ebp,0xd70ceab7
  40fc65:	xchg   ebp,eax
  40fc66:	out    0x9f,al
  40fc68:	cld    
  40fc69:	push   esp
  40fc6a:	adc    DWORD PTR [esi],edx
  40fc6c:	repnz sahf 
  40fc6e:	cmp    DWORD PTR [edx],edx
  40fc70:	rcl    BYTE PTR [edi+0x56c68d72],1
  40fc76:	out    0x91,eax
  40fc78:	mov    edx,0xa1c77af1
  40fc7d:	in     eax,dx
  40fc7e:	dec    ebp
  40fc7f:	retf   0x7f69
  40fc82:	loopne 0x40fc2d
  40fc84:	sbb    al,0x63
  40fc86:	call   0x787b2946
  40fc8b:	add    BYTE PTR [edx+0x683871fc],dl
  40fc91:	push   0x39
  40fc93:	in     al,dx
  40fc94:	mov    WORD PTR [edi],ds
  40fc96:	outs   dx,DWORD PTR ds:[esi]
  40fc97:	cli    
  40fc98:	and    edx,edx
  40fc9a:	fiadd  DWORD PTR [ebp-0x78f69368]
  40fca0:	mov    ds,WORD PTR [edi+0x6]
  40fca3:	arpl   WORD PTR [esi+0x76],dx
  40fca6:	and    esi,ebx
  40fca8:	push   ecx
  40fca9:	mov    ds:0xa5739758,eax
  40fcae:	pop    edi
  40fcaf:	stc    
  40fcb0:	dec    esi
  40fcb1:	loop   0x40fc54
  40fcb3:	lahf   
  40fcb4:	xchg   esp,eax
  40fcb5:	dec    edi
  40fcb6:	jb     0x40fd37
  40fcb8:	sbb    ah,0xca
  40fcbb:	aas    
  40fcbc:	adc    eax,0xa2dd4e45
  40fcc1:	push   es
  40fcc2:	popf   
  40fcc3:	push   cs
  40fcc4:	ds jae 0x40fd30
  40fcc7:	fs aas 
  40fcc9:	adc    eax,0x18781014
  40fcce:	xchg   ebx,eax
  40fccf:	iret   
  40fcd0:	int3   
  40fcd1:	dec    ebx
  40fcd2:	and    eax,0xf832ba32
  40fcd7:	pop    ds
  40fcd8:	mov    al,ds:0x7f6741e4
  40fcdd:	add    edx,esi
  40fcdf:	or     BYTE PTR [eax],ch
  40fce1:	and    ecx,DWORD PTR [ebp-0x54]
  40fce4:	clc    
  40fce5:	xchg   edi,eax
  40fce6:	in     al,dx
  40fce7:	stc    
  40fce8:	lods   al,BYTE PTR ds:[esi]
  40fce9:	push   eax
  40fcea:	mov    ecx,0x801e4a7e
  40fcef:	add    edi,DWORD PTR [esi]
  40fcf1:	ficom  DWORD PTR [eax-0x47]
  40fcf4:	sar    DWORD PTR [edi],cl
  40fcf6:	fidiv  WORD PTR [esi]
  40fcf8:	shr    cl,1
  40fcfa:	sbb    al,0xde
  40fcfc:	mov    ds:0x24b8523,eax
  40fd01:	dec    edi
  40fd02:	jmp    0x40fcda
  40fd04:	stos   BYTE PTR es:[edi],al
  40fd05:	stc    
  40fd06:	mov    ah,0x11
  40fd08:	push   ds
  40fd09:	bound  edi,QWORD PTR [esi]
  40fd0b:	ds leave 
  40fd0d:	scas   eax,DWORD PTR es:[edi]
  40fd0e:	pop    eax
  40fd0f:	push   esi
  40fd10:	cmp    eax,0xd2c59a88
  40fd15:	cdq    
  40fd16:	jg     0x40fcda
  40fd18:	ret    
  40fd19:	call   0x5d544ed0
  40fd1e:	ret    0x1d09
  40fd21:	fld    DWORD PTR [eax+0x42]
  40fd24:	mov    BYTE PTR [ebx+ebx*8-0x3a],bh
  40fd28:	add    esp,edi
  40fd2a:	pop    ebx
  40fd2b:	adc    dh,0x51
  40fd2e:	cmp    ebx,DWORD PTR [eax+0x2371ebcb]
  40fd34:	repz or ah,al
  40fd37:	sub    bh,BYTE PTR [eax]
  40fd39:	pop    ebx
  40fd3a:	jle    0x40fd13
  40fd3c:	imul   cx,WORD PTR gs:[eax],0x33c7
  40fd42:	lea    esp,[eax+0x27]
  40fd45:	pop    ebp
  40fd46:	fnsave [eax-0x6b]
  40fd49:	lods   eax,DWORD PTR cs:[esi]
  40fd4b:	or     BYTE PTR [ecx+ecx*2-0x2af0f7a8],0x34
  40fd53:	fnstcw WORD PTR [ecx+0x63]
  40fd56:	inc    ebp
  40fd57:	dec    edi
  40fd58:	or     al,0x28
  40fd5a:	pop    ss
  40fd5b:	outs   dx,BYTE PTR ds:[esi]
  40fd5c:	stc    
  40fd5d:	sbb    dh,0xb2
  40fd60:	mov    WORD PTR [esi+0x30],gs
  40fd63:	sub    BYTE PTR ds:0x86451b53,dh
  40fd69:	out    0x93,al
  40fd6b:	and    BYTE PTR [ebp+0x415aea33],bh
  40fd71:	mov    eax,ds:0x5a685a60
  40fd76:	retf   
  40fd77:	int    0xce
  40fd79:	pop    ebx
  40fd7a:	pop    ebx
  40fd7b:	push   gs
  40fd7d:	sbb    dl,0xbd
  40fd80:	shr    BYTE PTR [ebp+0x31],0xa8
  40fd84:	mov    dh,0xce
  40fd86:	push   esp
  40fd87:	not    DWORD PTR [eax+0x47]
  40fd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd8b:	imul   esi,DWORD PTR [eax+eiz*2],0x2c9b9580
  40fd92:	adc    ebp,DWORD PTR [esi+0x2ab48820]
  40fd98:	pop    ss
  40fd99:	mov    DWORD PTR [edx+eiz*4+0x19],edx
  40fd9d:	mov    cl,0xa9
  40fd9f:	cld    
  40fda0:	adc    al,0xf2
  40fda2:	mov    ds:0x1b1abed4,eax
  40fda7:	mov    DWORD PTR [eax+0x78],esi
  40fdaa:	cdq    
  40fdab:	ds inc esi
  40fdad:	fidivr DWORD PTR [eax]
  40fdaf:	ins    DWORD PTR es:[edi],dx
  40fdb0:	or     ecx,esi
  40fdb2:	mov    eax,0xf502754b
  40fdb7:	xor    bl,BYTE PTR [edi]
  40fdb9:	mov    ebx,0x9c3dbba7
  40fdbe:	in     eax,dx
  40fdbf:	(bad)  
  40fdc0:	mov    DWORD PTR [eax],ebx
  40fdc2:	jmp    0xa90571d5
  40fdc7:	or     ah,BYTE PTR [edi-0x53]
  40fdca:	jnp    0x40fddf
  40fdcc:	lea    esp,[edi+0x13ee8e2e]
  40fdd2:	sub    esp,esi
  40fdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdd5:	adc    al,0xd6
  40fdd7:	mov    ebp,0x810cca6
  40fddc:	pop    ecx
  40fddd:	push   ss
  40fdde:	push   ebp
  40fddf:	test   al,0xb9
  40fde1:	sub    DWORD PTR [edi+0x55],ebp
  40fde4:	ja     0x40fdf3
  40fde6:	add    DWORD PTR [edx+0x6bb6e904],ebx
  40fdec:	retf   0x7a4e
  40fdef:	pop    ecx
  40fdf0:	push   esi
  40fdf1:	test   esi,ebx
  40fdf3:	adc    dl,bl
  40fdf5:	fdivr  DWORD PTR ds:0x39173919
  40fdfb:	stos   BYTE PTR es:[edi],al
  40fdfc:	test   DWORD PTR [eax+0x1db29fd2],eax
  40fe02:	test   eax,0x71dccbe0
  40fe07:	in     eax,dx
  40fe08:	arpl   WORD PTR [eax],bp
  40fe0a:	nop
  40fe0b:	cld    
  40fe0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0d:	push   ebx
  40fe0e:	xor    ah,BYTE PTR [edx]
  40fe10:	push   esp
  40fe11:	ds test eax,0x21e9971e
  40fe17:	xchg   esp,eax
  40fe18:	lahf   
  40fe19:	loopne 0x40fe37
  40fe1b:	jge    0x40fe77
  40fe1d:	int3   
  40fe1e:	pusha  
  40fe1f:	mov    dh,BYTE PTR [ecx]
  40fe21:	retf   
  40fe22:	ret    0x8f5e
  40fe25:	jno    0x40fe52
  40fe27:	push   esi
  40fe28:	pop    es
  40fe29:	ret    0xdbe0
  40fe2c:	mov    WORD PTR [edi+0x3c30999c],fs
  40fe32:	fwait
  40fe33:	rcr    al,0xae
  40fe36:	adc    DWORD PTR [edx+edi*2-0x51],ecx
  40fe3a:	pop    esi
  40fe3b:	adc    BYTE PTR [ebx+0x69],dh
  40fe3e:	sbb    al,0xf5
  40fe40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe41:	stc    
  40fe42:	mov    ch,0x10
  40fe44:	inc    ecx
  40fe45:	jmp    FWORD PTR [edi-0x5]
  40fe48:	sar    BYTE PTR [ebx],0xf0
  40fe4b:	mov    ah,0x3b
  40fe4d:	int    0x98
  40fe4f:	mov    ebx,DWORD PTR [edx+0x50]
  40fe52:	shr    BYTE PTR [edi],0x57
  40fe55:	sub    ch,BYTE PTR [ebp+0x53]
  40fe58:	popa   
  40fe59:	xchg   esp,eax
  40fe5a:	idiv   BYTE PTR [ecx+0x70abc23f]
  40fe60:	hlt    
  40fe61:	mov    ebx,0xcd64455
  40fe66:	div    BYTE PTR [ebx-0x51]
  40fe69:	(bad)  
  40fe6c:	ss jne 0x40fe88
  40fe6f:	je     0x40fea6
  40fe71:	mov    ah,BYTE PTR ds:0x7c08fa51
  40fe77:	ins    BYTE PTR es:[edi],dx
  40fe78:	outs   dx,BYTE PTR ds:[esi]
  40fe79:	mov    fs,ebp
  40fe7b:	push   ebx
  40fe7c:	repz dec ebx
  40fe7e:	mov    bl,al
  40fe80:	ds sbb eax,0x9cc87cbb
  40fe86:	shr    bh,0xf1
  40fe89:	sub    dl,BYTE PTR [esi-0x62e6baf4]
  40fe8f:	(bad)  
  40fe90:	sbb    edi,DWORD PTR [ebx+0x5ceefa7]
  40fe96:	out    dx,al
  40fe97:	repz mov dh,BYTE PTR [ecx]
  40fe9a:	test   al,0x3c
  40fe9c:	(bad)  
  40fe9d:	push   edi
  40fe9e:	clc    
  40fe9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fea0:	xchg   edx,eax
  40fea1:	or     al,0x57
  40fea3:	ret    
  40fea4:	sti    
  40fea5:	fs dec edi
  40fea7:	dec    ecx
  40fea8:	cmp    eax,0xbfadc90a
  40fead:	fcom   DWORD PTR [ebx+0x33]
  40feb0:	add    ecx,DWORD PTR ds:0xad6065ed
  40feb6:	inc    eax
  40feb7:	cld    
  40feb8:	fcomi  st,st(0)
  40feba:	sar    BYTE PTR [edi],1
  40febc:	mov    ch,0x28
  40febe:	ss scas al,BYTE PTR es:[edi]
  40fec0:	mov    al,fs:0x67e91cf0
  40fec6:	dec    edx
  40fec7:	int    0x54
  40fec9:	in     eax,dx
  40feca:	push   ebp
  40fecb:	mov    esp,0xbf66f484
  40fed0:	js     0x40feae
  40fed2:	clc    
  40fed3:	mov    ds:0xb3fa559a,al
  40fed8:	push   cs
  40fed9:	dec    edi
  40feda:	mov    esp,0x23dc9d1a
  40fedf:	stos   BYTE PTR es:[edi],al
  40fee0:	and    BYTE PTR ds:0x83d56df6,al
  40fee6:	mov    edx,0x70ff15df
  40feeb:	rcr    esp,1
  40feed:	push   0xb48a386d
  40fef2:	iret   
  40fef3:	cld    
  40fef4:	dec    ebp
  40fef5:	mov    eax,ds:0x99bf9d31
  40fefa:	fwait
  40fefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fefc:	or     ah,BYTE PTR [esp+ecx*8+0x5fc7379f]
  40ff03:	cmp    al,0xa4
  40ff05:	sbb    al,bh
  40ff07:	dec    esi
  40ff08:	sbb    BYTE PTR [edi+eax*1+0x32],cl
  40ff0c:	cmp    ch,BYTE PTR [eax-0x70]
  40ff0f:	cmp    BYTE PTR [edi-0x13],ch
  40ff12:	scas   eax,DWORD PTR es:[edi]
  40ff13:	aas    
  40ff14:	xchg   BYTE PTR [eax+0x377458fc],ah
  40ff1a:	jmp    0x40ff0c
  40ff1c:	(bad)  
  40ff1d:	pop    ebp
  40ff1e:	(bad)  
  40ff1f:	std    
  40ff20:	and    dl,ah
  40ff22:	retf   0xc29
  40ff25:	ror    BYTE PTR [edx],1
  40ff27:	fcom   QWORD PTR [ecx-0x7957daa0]
  40ff2d:	dec    ebp
  40ff2e:	xchg   esi,eax
  40ff2f:	adc    eax,0x8175a94d
  40ff34:	xor    eax,0x3975fb84
  40ff39:	int3   
  40ff3a:	pop    esp
  40ff3b:	cli    
  40ff3c:	and    DWORD PTR [esi],esi
  40ff3e:	retf   
  40ff3f:	mov    cs,WORD PTR [edi-0x1aa2b082]
  40ff45:	inc    ebp
  40ff46:	pop    ebp
  40ff47:	inc    esi
  40ff48:	mov    ds:0xc482a9aa,eax
  40ff4d:	addr16 cs fs popa 
  40ff51:	cmp    BYTE PTR [eax-0x29c03649],bh
  40ff57:	sub    al,0xe2
  40ff59:	jl     0x40ffa7
  40ff5b:	or     al,0x11
  40ff5d:	push   eax
  40ff5e:	xor    esp,DWORD PTR [esi]
  40ff60:	pushf  
  40ff61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff62:	ficom  WORD PTR [esi]
  40ff64:	aaa    
  40ff65:	xor    al,0xa8
  40ff67:	cmp    al,0x38
  40ff69:	stc    
  40ff6a:	(bad)  
  40ff6b:	rcl    DWORD PTR [edi+0x4e],1
  40ff6e:	pop    ebx
  40ff6f:	sbb    DWORD PTR fs:[ebx],ebp
  40ff72:	xor    al,0x9
  40ff74:	test   BYTE PTR [esi+0x6e],0x3
  40ff78:	pop    ebx
  40ff79:	je     0x40ff09
  40ff7b:	pop    edx
  40ff7c:	xchg   ecx,eax
  40ff7d:	mov    ds:0xcb8de1d2,al
  40ff82:	sbb    eax,0x15a227f6
  40ff87:	mov    cl,0xf5
  40ff89:	rcr    BYTE PTR [edx+edi*4+0x6f],0xf9
  40ff8e:	neg    BYTE PTR [ebx-0x7d]
  40ff91:	mov    edi,DWORD PTR [esp+edx*1]
  40ff94:	jmp    0x40ffb8
  40ff96:	retf   
  40ff97:	scas   eax,DWORD PTR es:[edi]
  40ff98:	test   edx,esp
  40ff9a:	push   ecx
  40ff9b:	mov    ah,0x5c
  40ff9d:	aas    
  40ff9e:	das    
  40ff9f:	adc    ebp,eax
  40ffa1:	imul   ecx,DWORD PTR [edx+ebx*4-0x49],0x392b2a80
  40ffa9:	push   es
  40ffaa:	retf   
  40ffab:	(bad)  
  40ffac:	stos   DWORD PTR es:[edi],eax
  40ffad:	add    eax,0xcb7eae7b
  40ffb2:	xor    BYTE PTR [ecx-0x5a],0x12
  40ffb6:	(bad)
  40ffb9:	push   es
  40ffba:	or     BYTE PTR [edx-0x50],0x1b
  40ffbe:	repz out 0x74,eax
  40ffc1:	xor    eax,0x9f1af111
  40ffc6:	scas   eax,DWORD PTR es:[edi]
  40ffc7:	sbb    BYTE PTR [ebp-0x28a09f84],cl
  40ffcd:	xor    DWORD PTR [ebx+0x6d],eax
  40ffd0:	fsub   st,st(4)
  40ffd2:	or     eax,0x9115abaa
  40ffd7:	pop    ds
  40ffd8:	xchg   ecx,esi
  40ffda:	bnd jmp 0xb4cb43e2
  40ffe0:	aad    0xf7
  40ffe2:	inc    esp
  40ffe3:	mov    BYTE PTR [edi-0x5a],cl
  40ffe6:	out    0x71,al
  40ffe8:	sahf   
  40ffe9:	push   ss
  40ffea:	adc    bl,BYTE PTR [esp+eiz*2]
  40ffed:	jo     0x40fff4
  40ffef:	fisttp WORD PTR [edi+0x39]
  40fff2:	dec    ebp
  40fff3:	jo     0x410038
  40fff5:	popa   
  40fff6:	(bad)  
  40fff7:	jae    0x40ff83
  40fff9:	and    DWORD PTR [esi+esi*8+0x4c],ecx
  40fffd:	test   al,ah
  40ffff:	mov    edx,0xc8da5b10
  410004:	mov    al,0x7
  410006:	jb     0x40fffe
  410008:	rcl    BYTE PTR [ebp-0x13ec0e0d],0x3e
  41000f:	out    0x4e,al
  410011:	dec    esi
  410012:	xchg   ebx,eax
  410013:	jp     0x410034
  410015:	dec    esp
  410016:	mov    BYTE PTR [ebx-0x79],bh
  410019:	cmp    edx,DWORD PTR [edx]
  41001b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001c:	and    DWORD PTR [ebp+0x78adc53c],ebp
  410022:	int    0xcf
  410024:	aad    0x6d
  410026:	push   0x80953438
  41002b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002c:	lock sbb DWORD PTR [edx-0x8],ebp
  410030:	jmp    0x42db:0xeb7cc8b8
  410037:	std    
  410038:	dec    edx
  410039:	xchg   esp,eax
  41003a:	xlat   BYTE PTR ds:[ebx]
  41003b:	xlat   BYTE PTR ds:[ebx]
  41003c:	adc    al,0xf6
  41003e:	inc    edi
  41003f:	icebp  
  410040:	mov    ch,0xf8
  410042:	stos   DWORD PTR es:[edi],eax
  410043:	jne    0x57ec9a95
  410049:	push   esp
  41004a:	push   eax
  41004b:	pop    esi
  41004c:	xor    BYTE PTR [edx+0x8],al
  41004f:	pop    ss
  410050:	xchg   DWORD PTR [ebx-0x11],esi
  410053:	mov    ch,0x9f
  410055:	repz pop esp
  410057:	scas   eax,DWORD PTR es:[edi]
  410058:	mov    ah,0xfc
  41005a:	add    eax,0x5863f12a
  41005f:	(bad)
  410062:	mov    DWORD PTR [edi+0x2f0c3b9d],edi
  410068:	sub    eax,0xc774fe86
  41006d:	cs mov esi,0x10ca2dfd
  410073:	fsubr  st(7),st
  410075:	faddp  st(3),st
  410077:	and    ebp,DWORD PTR ds:0xffb2d79e
  41007d:	cmp    al,0x53
  41007f:	lahf   
  410080:	lods   eax,DWORD PTR ds:[esi]
  410081:	outs   dx,BYTE PTR ds:[esi]
  410082:	cmp    DWORD PTR [eax],esp
  410084:	ret    
  410085:	jmp    0x4100ea
  410087:	mov    eax,0x7170a78e
  41008c:	mov    ecx,0x257b8f9d
  410091:	loop   0x4100a0
  410093:	ins    BYTE PTR es:[edi],dx
  410094:	xchg   esp,eax
  410095:	fist   WORD PTR [esi+edi*1-0x2a9d5e37]
  41009c:	or     eax,ecx
  41009e:	aam    0xc3
  4100a0:	(bad)  
  4100a1:	leave  
  4100a2:	enter  0xac23,0xfb
  4100a6:	js     0x410048
  4100a8:	das    
  4100a9:	xchg   DWORD PTR [ebx-0x4d2a53b2],ebp
  4100af:	cli    
  4100b0:	cld    
  4100b1:	or     DWORD PTR [edi],ebp
  4100b3:	mov    dh,0x30
  4100b5:	and    al,0x26
  4100b7:	ins    DWORD PTR es:[edi],dx
  4100b8:	and    dl,bh
  4100ba:	lea    ebx,[ebx-0x457dd11a]
  4100c0:	add    BYTE PTR [ebx],ch
  4100c2:	xchg   ebp,esi
  4100c4:	push   eax
  4100c5:	fidivr WORD PTR ss:0x35543674
  4100cc:	lods   eax,DWORD PTR ds:[esi]
  4100cd:	clc    
  4100ce:	push   esp
  4100cf:	and    BYTE PTR [eax+0x23],0x79
  4100d3:	pop    esi
  4100d4:	xchg   edi,eax
  4100d5:	sub    eax,0x850cd936
  4100da:	shl    DWORD PTR [edx+0x33],cl
  4100dd:	shl    BYTE PTR [ebp-0x54],1
  4100e0:	gs stc 
  4100e2:	pop    ss
  4100e3:	out    dx,eax
  4100e4:	mov    ch,BYTE PTR [edi-0x53c5646c]
  4100ea:	add    ch,BYTE PTR [edi]
  4100ec:	and    ebx,eax
  4100ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ef:	cmp    esp,DWORD PTR [edi+0x4263f6c5]
  4100f5:	inc    DWORD PTR [edx+0x58]
  4100f8:	lods   eax,DWORD PTR ds:[esi]
  4100f9:	rcl    DWORD PTR [ebp-0x7e],cl
  4100fc:	or     al,dl
  4100fe:	ins    DWORD PTR es:[edi],dx
  4100ff:	in     al,0x8
  410101:	sub    ebx,DWORD PTR [edx]
  410103:	and    dh,ch
  410105:	ror    BYTE PTR [ebx-0x41],1
  410108:	xchg   edx,eax
  41010a:	lods   eax,DWORD PTR ds:[esi]
  41010b:	lods   al,BYTE PTR ds:[esi]
  41010c:	jns    0x410092
  41010e:	push   esp
  41010f:	retf   0x4a9e
  410112:	and    eax,0xb8d4ac0e
  410117:	inc    esi
  410118:	xchg   ecx,eax
  410119:	nop
  41011a:	int    0x6
  41011c:	xchg   BYTE PTR [esi+0x32ff9fda],cl
  410122:	popa   
  410123:	std    
  410124:	fidiv  DWORD PTR [ebx]
  410126:	lock sub eax,0x14eb0687
  41012c:	add    DWORD PTR [ebx-0x60a3906d],edi
  410132:	mov    dl,BYTE PTR [edx+0x6a]
  410135:	call   0xa39b:0xbdb32c1e
  41013c:	test   al,0x3f
  41013e:	stos   BYTE PTR es:[edi],al
  41013f:	fdivr  QWORD PTR [edi+0x7e]
  410142:	mov    ebp,0xa8b8ce5c
  410147:	mov    ds:0x2318a435,al
  41014c:	mov    dl,0x5a
  41014e:	fdivr  st(4),st
  410150:	out    0xc,eax
  410152:	imul   edi,DWORD PTR [eax],0x59
  410155:	pushf  
  410156:	xor    bl,BYTE PTR [ebx]
  410158:	sub    DWORD PTR [ebp-0x58],0xffffffa6
  41015c:	cmc    
  41015d:	aam    0xb6
  41015f:	push   esi
  410160:	das    
  410161:	retf   
  410162:	popa   
  410163:	clc    
  410164:	loopne 0x4101ac
  410166:	xchg   esp,eax
  410167:	sub    eax,0xec29c413
  41016c:	mov    edi,0xfa909587
  410171:	popf   
  410172:	test   BYTE PTR [ebp-0x65abfa46],dh
  410178:	xor    al,0x22
  41017a:	scas   al,BYTE PTR es:[edi]
  41017b:	call   0x38864518
  410180:	dec    edi
  410181:	out    0x97,al
  410183:	and    al,0xb9
  410185:	icebp  
  410186:	and    BYTE PTR [edi-0x3],ah
  410189:	imul   ebx,DWORD PTR ds:0xe6770d00,0xcce61162
  410193:	retf   0xbb6d
  410196:	push   0x4a
  410198:	cli    
  410199:	lahf   
  41019a:	pop    eax
  41019b:	stos   BYTE PTR es:[edi],al
  41019c:	and    ah,al
  41019e:	or     ch,BYTE PTR [esi]
  4101a0:	pop    eax
  4101a1:	loop   0x410209
  4101a3:	fisub  WORD PTR [esp+edx*8+0x75c6b929]
  4101aa:	dec    ebp
  4101ab:	pop    es
  4101ac:	ja     0x410229
  4101ae:	xchg   BYTE PTR ds:0x8cc0556b,bl
  4101b4:	sub    ecx,DWORD PTR [eax]
  4101b6:	std    
  4101b7:	test   BYTE PTR [ebp-0x28],cl
  4101ba:	cmp    al,0x10
  4101bc:	popf   
  4101bd:	bnd jae 0x41021a
  4101c0:	div    BYTE PTR [eax+eax*8+0x6f37cccb]
  4101c7:	add    eax,0x6aed047a
  4101cc:	jmp    0x410232
  4101ce:	dec    edi
  4101cf:	lods   al,BYTE PTR ds:[esi]
  4101d0:	leave  
  4101d1:	dec    eax
  4101d2:	xchg   edi,eax
  4101d3:	div    BYTE PTR [esi-0x7f9fe570]
  4101d9:	mov    edi,0x97cecc16
  4101de:	mov    esp,0x8f88db79
  4101e3:	int3   
  4101e4:	(bad)  
  4101e5:	inc    DWORD PTR [eax-0x65c73604]
  4101eb:	mov    eax,ds:0xbd99c6da
  4101f0:	(bad)  
  4101f1:	cmc    
  4101f2:	xchg   esp,eax
  4101f3:	jl     0x4101bb
  4101f5:	jnp    0x4101c3
  4101f7:	ss out 0x69,eax
  4101fa:	adc    cl,cl
  4101fc:	pop    edx
  4101fd:	(bad)  
  4101fe:	lock mov ds:0xc32f5ade,eax
  410204:	xlat   BYTE PTR ds:[ebx]
  410205:	inc    esp
  410206:	inc    ecx
  410207:	cmc    
  410208:	dec    eax
  410209:	add    BYTE PTR [edx+ecx*8],0xeb
  41020d:	ret    
  41020e:	fisubr WORD PTR [ebx-0x6a]
  410211:	xchg   ebp,eax
  410212:	push   0xba8bffe0
  410217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410218:	or     BYTE PTR [edx-0x15],dl
  41021b:	mov    eax,0x43a1ba67
  410220:	sbb    eax,0xa6958b8b
  410225:	pop    es
  410226:	retf   0xdf5f
  410229:	fidiv  DWORD PTR [edx]
  41022b:	shl    DWORD PTR [eax-0x31730a67],0x48
  410232:	imul   ecx,DWORD PTR [edi],0x5d776745
  410238:	mov    ebx,0xe7d0147f
  41023d:	dec    ebp
  41023e:	jmp    0x410254
  410240:	inc    ecx
  410241:	pop    ss
  410242:	xchg   ebp,edx
  410244:	es xor ch,dh
  410247:	cmp    bl,BYTE PTR [edi]
  410249:	jp     0x410229
  41024b:	adc    eax,0x5c3e31e0
  410250:	in     al,dx
  410251:	xor    ah,BYTE PTR [ebx-0x41431101]
  410257:	mov    ds:0xd50f0137,al
  41025c:	rcl    DWORD PTR es:[edi],1
  41025f:	xchg   BYTE PTR [eax+edx*8-0x57],bl
  410263:	int3   
  410264:	xchg   edi,eax
  410265:	mov    al,0xfc
  410267:	inc    ebp
  410268:	inc    ecx
  410269:	jge    0x410207
  41026b:	mov    ch,ch
  41026d:	mov    eax,ds:0x4ac03c39
  410272:	jnp    0x4101fe
  410274:	loop   0x4102c9
  410276:	dec    esi
  410277:	in     eax,0xd
  410279:	xchg   ebx,eax
  41027a:	adc    BYTE PTR fs:[ecx],cl
  41027d:	xchg   ebp,eax
  41027e:	cmp    bh,BYTE PTR [esi-0x58]
  410281:	dec    ecx
  410282:	push   ecx
  410283:	xor    DWORD PTR [esi+0x42f2f876],edi
  410289:	call   0xe126d4d3
  41028e:	pop    ebp
  41028f:	or     eax,0xc3662b61
  410294:	jmp    0x4102e6
  410296:	push   edi
  410297:	sub    eax,0xef9371fa
  41029c:	dec    esp
  41029d:	mov    ah,0x79
  41029f:	pop    ebp
  4102a0:	fist   WORD PTR [ecx+0x15e185f5]
  4102a6:	cmc    
  4102a7:	sbb    al,0x98
  4102a9:	jo     0x4102cc
  4102ab:	jl     0x4102fa
  4102ad:	inc    ecx
  4102ae:	fst    DWORD PTR [eax+0x3fb4af75]
  4102b4:	inc    edx
  4102b5:	retf   
  4102b6:	and    dl,BYTE PTR [eax+0x406eba10]
  4102bc:	pop    ecx
  4102bd:	(bad)  
  4102be:	and    dl,BYTE PTR [esi]
  4102c0:	jb     0x41025e
  4102c2:	xor    BYTE PTR [esi-0x79430ca5],bl
  4102c8:	(bad)  
  4102c9:	ins    DWORD PTR es:[edi],dx
  4102ca:	in     al,dx
  4102cb:	xchg   ebp,eax
  4102cc:	mov    ebx,0x904d6f01
  4102d1:	sub    al,0xa9
  4102d3:	imul   edx,eax,0x45
  4102d6:	sub    DWORD PTR [esi+0x62],esp
  4102d9:	mov    ah,0x3a
  4102db:	pop    ebp
  4102dc:	sar    DWORD PTR [edi-0x5d],1
  4102df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e0:	pop    edx
  4102e1:	scas   eax,DWORD PTR es:[edi]
  4102e2:	push   ebx
  4102e3:	mov    bh,0x2b
  4102e5:	imul   edx,DWORD PTR ds:0x8739cdb9,0xcb4e143a
  4102ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f0:	stos   BYTE PTR es:[edi],al
  4102f1:	dec    esp
  4102f2:	adc    esp,esi
  4102f4:	int    0x41
  4102f6:	add    al,0xd9
  4102f8:	xchg   BYTE PTR [esi+0x30bfa850],dh
  4102fe:	xchg   ebx,eax
  4102ff:	mov    edi,0xcfd99638
  410304:	lods   al,BYTE PTR ds:[esi]
  410305:	mov    bh,0xd3
  410307:	scas   eax,DWORD PTR es:[edi]
  410308:	push   ebx
  410309:	imul   eax,DWORD PTR [edx+0xdd510a9],0x2445b1ca
  410313:	mov    bl,cl
  410315:	push   ecx
  410316:	mov    bh,0xfc
  410318:	or     ax,0x3d1b
  41031c:	inc    edx
  41031d:	hlt    
  41031e:	in     eax,dx
  41031f:	gs cld 
  410321:	fwait
  410322:	bound  edx,QWORD PTR [eax-0x6f]
  410325:	les    eax,FWORD PTR ds:0x43839e4f
  41032b:	lods   eax,DWORD PTR ds:[esi]
  41032c:	addr16 sti 
  41032e:	push   esi
  41032f:	gs mov ebx,0xe7264ffa
  410335:	dec    ebp
  410336:	mov    BYTE PTR cs:[eax-0x4f],al
  41033a:	xchg   ecx,eax
  41033b:	aad    0x7e
  41033d:	jp     0x41031c
  41033f:	dec    ebp
  410340:	cmp    DWORD PTR [edx+eiz*2-0x64a79977],ecx
  410347:	mov    cl,0xad
  410349:	cmp    eax,0x62d47a54
  41034e:	push   es
  41034f:	mov    dl,0x57
  410351:	loop   0x410381
  410353:	push   esi
  410354:	xor    BYTE PTR [ecx+0x20],cl
  410357:	or     BYTE PTR [eax+0x4d8362c],dl
  41035d:	dec    ebp
  41035e:	add    al,0xe1
  410360:	inc    esp
  410361:	mov    dh,0x1f
  410363:	js     0x4103b9
  410365:	adc    DWORD PTR [eax-0x33],esi
  410368:	ret    
  410369:	pop    eax
  41036a:	and    eax,0x9c91b07e
  41036f:	leave  
  410370:	fmul   QWORD PTR [ebp+0x6b]
  410373:	jnp    0x4103ab
  410375:	das    
  410376:	and    BYTE PTR [esi],dl
  410378:	nop
  410379:	mov    DWORD PTR [edi],ebp
  41037b:	dec    ecx
  41037c:	addr16 es pop edi
  41037f:	xchg   ecx,eax
  410380:	push   ecx
  410381:	neg    BYTE PTR [eax+0x54c08462]
  410387:	cwde   
  410388:	popf   
  410389:	mov    WORD PTR [edi+0x1b2f9431],ds
  41038f:	popa   
  410390:	call   0x7ecb8854
  410395:	add    al,0xf7
  410397:	shr    BYTE PTR [ecx-0xdb525bc],cl
  41039d:	cli    
  41039e:	and    ebp,eax
  4103a0:	cli    
  4103a1:	mov    esp,0x6f42299e
  4103a6:	imul   edi,DWORD PTR [edi],0x647b7c9
  4103ac:	icebp  
  4103ad:	xchg   esi,eax
  4103ae:	into   
  4103af:	or     BYTE PTR [edi+ebx*8+0x75f37e1e],dl
  4103b6:	stos   BYTE PTR es:[edi],al
  4103b7:	rcl    ch,1
  4103b9:	cmp    ecx,edx
  4103bb:	cli    
  4103bc:	add    al,0xcb
  4103be:	mov    ebp,0xe3378b8a
  4103c3:	in     al,dx
  4103c4:	sub    al,BYTE PTR [esp+ebx*4]
  4103c7:	jmp    0x8d4328de
  4103cc:	mov    ch,0xf8
  4103ce:	repnz in al,0xc7
  4103d1:	in     al,dx
  4103d2:	out    dx,al
  4103d3:	imul   esp,DWORD PTR [esi+edx*2-0x6b126493],0x66d82ccd
  4103de:	xchg   ebp,eax
  4103df:	jge    0x410460
  4103e1:	mov    bh,0x78
  4103e3:	adc    al,0xc1
  4103e5:	xchg   esi,esi
  4103e7:	out    0x52,al
  4103e9:	js     0x410437
  4103eb:	or     ah,BYTE PTR [ebx-0x33004384]
  4103f1:	sub    dl,bl
  4103f3:	xchg   ebp,eax
  4103f4:	repz into 
  4103f6:	mov    ds:0xe0aa0a1f,eax
  4103fb:	retf   0xf8b7
  4103fe:	sahf   
  4103ff:	mov    ds:0xc8f2add,al
  410404:	cli    
  410405:	adc    eax,0x707c465f
  41040a:	mov    ecx,0x993d569d
  41040f:	add    DWORD PTR [eax],esi
  410411:	mov    esp,0x6c2d9266
  410416:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410418:	sahf   
  410419:	aam    0x51
  41041b:	outs   dx,BYTE PTR ds:[esi]
  41041c:	retf   
  41041d:	xor    edx,DWORD PTR [esi+0x6a]
  410420:	cmp    BYTE PTR [ebp-0x39e4f2cd],ah
  410426:	and    DWORD PTR [edx+0x75d8af07],ebx
  41042c:	xor    al,0xc4
  41042e:	pushf  
  41042f:	push   0xc1b0c22b
  410434:	mov    ds,WORD PTR [edx+0x2]
  410437:	xor    DWORD PTR [edi+0x156cfc94],edx
  41043d:	jae    0x410437
  41043f:	adc    ebx,DWORD PTR [ecx]
  410441:	dec    ebp
  410442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410443:	outs   dx,DWORD PTR ds:[esi]
  410444:	ins    BYTE PTR es:[edi],dx
  410445:	sbb    DWORD PTR [edx-0xc],ebx
  410448:	dec    esp
  410449:	inc    edi
  41044a:	push   ebx
  41044b:	sbb    eax,0xdfc312cb
  410450:	icebp  
  410451:	mov    esi,edx
  410453:	bound  ebx,QWORD PTR ds:0x97a7ca1a
  410459:	rol    BYTE PTR [ecx+0x2e],0x9
  41045d:	data16 mov ?,WORD PTR [edx]
  410460:	loopne 0x4104d3
  410462:	lahf   
  410463:	fidivr DWORD PTR [edi+0x491106a9]
  410469:	scas   eax,DWORD PTR es:[edi]
  41046a:	sbb    dl,BYTE PTR [edi]
  41046c:	hlt    
  41046d:	jo     0x4104b4
  41046f:	mov    ah,0x6f
  410471:	sub    eax,0xea95e13e
  410476:	xor    DWORD PTR [eax+0x6],edx
  410479:	mov    fs,WORD PTR [ebx-0x2fbf268a]
  41047f:	pextrw edx,(bad),0xc5
  410481:	push   esp
  410482:	push   ss
  410483:	push   edi
  410484:	call   0xcc9a8777
  410489:	jbe    0x41047a
  41048b:	imul   edx,DWORD PTR [ecx],0x446e4974
  410491:	push   cs
  410492:	mov    eax,DWORD PTR [esi+0x3cd9199b]
  410498:	adc    dl,al
  41049a:	cs push eax
  41049c:	(bad)  
  41049d:	mov    eax,ds:0xc51d6d77
  4104a2:	adc    BYTE PTR [edi],0xa3
  4104a5:	lfs    ecx,FWORD PTR [ecx-0x46]
  4104a9:	push   0x40
  4104ab:	cs fsub st,st(2)
  4104ae:	dec    edi
  4104af:	lea    edi,[edx+0x11]
  4104b2:	mov    edx,DWORD PTR [edx+ebx*4+0x79]
  4104b6:	ja     0x41050f
  4104b8:	pop    eax
  4104b9:	fsubr  DWORD PTR [edi]
  4104bb:	xor    al,0x90
  4104bd:	dec    eax
  4104be:	repnz adc DWORD PTR [ecx],eax
  4104c1:	mov    bh,0xf2
  4104c3:	sbb    dh,cl
  4104c5:	add    DWORD PTR [esi+0x1ffeb87a],esp
  4104cb:	out    0xd7,eax
  4104cd:	pop    ecx
  4104ce:	cwde   
  4104cf:	fdiv   st,st(6)
  4104d1:	hlt    
  4104d2:	cmc    
  4104d3:	xchg   ebp,eax
  4104d4:	loopne 0x4104dc
  4104d6:	or     ch,BYTE PTR [eax]
  4104d8:	mov    ds:0x802991a3,al
  4104dd:	jbe    0x41047d
  4104df:	rcl    BYTE PTR [esi],1
  4104e1:	sti    
  4104e2:	jl     0x41052e
  4104e4:	retf   0xcb1e
  4104e7:	inc    esp
  4104e8:	inc    edx
  4104e9:	out    0xbf,al
  4104eb:	mov    ds:0x2d5c5a05,al
  4104f0:	popf   
  4104f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f2:	xchg   ebp,eax
  4104f3:	push   edi
  4104f4:	test   al,0x1b
  4104f6:	into   
  4104f7:	sub    DWORD PTR [edi-0x1c573c21],esp
  4104fd:	jl     0x41055f
  4104ff:	(bad)  
  410500:	(bad)  
  410501:	neg    ch
  410503:	push   0x18
  410505:	addr16 dec sp
  410508:	mov    ?,WORD PTR [edx]
  41050a:	outs   dx,DWORD PTR ds:[esi]
  41050b:	and    ebx,DWORD PTR [eax+0x40]
  41050e:	sub    DWORD PTR [ebp+ebp*8-0x195f471e],edi
  410515:	test   DWORD PTR [eax-0x4c778024],esp
  41051b:	xchg   DWORD PTR [ebx-0x2ee0bdb6],ecx
  410521:	retf   0x2e54
  410524:	jae    0x4104e8
  410526:	xchg   ecx,eax
  410527:	ja     0x4105a0
  410529:	rol    ecx,0x3b
  41052c:	add    BYTE PTR [ecx-0x56],dh
  41052f:	(bad)  
  410530:	xchg   ebp,eax
  410531:	mov    al,ds:0xaf0c20d6
  410536:	dec    ebx
  410537:	(bad)  
  410539:	lods   eax,DWORD PTR ds:[esi]
  41053a:	push   eax
  41053b:	iret   
  41053c:	fcmovnb st,st(3)
  41053e:	int3   
  41053f:	adc    esp,DWORD PTR [ebx-0x70]
  410542:	fldenv [edx+0x586cac2b]
  410548:	outs   dx,DWORD PTR ds:[esi]
  410549:	add    ch,bh
  41054b:	pop    ss
  41054c:	jmp    0x4105c1
  41054e:	push   eax
  41054f:	cli    
  410550:	xchg   edi,eax
  410551:	imul   eax,esi,0xa48d012c
  410557:	hlt    
  410558:	aaa    
  410559:	fidivr WORD PTR [esi-0x6069aa6]
  41055f:	pop    esp
  410560:	outs   dx,DWORD PTR ds:[esi]
  410561:	ja     0x41053c
  410563:	xchg   esi,eax
  410564:	rcr    DWORD PTR [eax+0x657ef8fe],1
  41056a:	cmp    edx,DWORD PTR [edx]
  41056c:	mov    ebp,0x20183a8e
  410571:	(bad)  
  410572:	xchg   ecx,eax
  410573:	mov    dh,ah
  410575:	add    ch,cl
  410577:	sub    eax,0xe0d9f67e
  41057c:	xor    esp,DWORD PTR [edi+0x38]
  41057f:	mov    edx,0x4c8f8ae2
  410584:	push   es
  410585:	lahf   
  410586:	mov    edi,0x7813e712
  41058b:	add    DWORD PTR [ecx+edx*8],edi
  41058e:	mov    ch,0x70
  410590:	aaa    
  410591:	sbb    al,0x5c
  410593:	pop    es
  410594:	adc    ebx,DWORD PTR [ecx+eax*8-0x1e]
  410598:	cmp    eax,0xb1f4a47
  41059d:	mov    WORD PTR [edi-0x7cc72b3],ds
  4105a3:	push   edi
  4105a4:	pop    ebp
  4105a5:	push   0xd5957e10
  4105aa:	dec    BYTE PTR [ebp+0x1c]
  4105ad:	cld    
  4105ae:	(bad)  
  4105af:	fist   DWORD PTR [eax+0x5e3d90d]
  4105b5:	mov    al,ds:0x9dbfa54c
  4105ba:	lods   al,BYTE PTR ds:[esi]
  4105bb:	dec    esp
  4105bc:	pop    edx
  4105bd:	iret   
  4105be:	repnz lods al,BYTE PTR ss:[esi]
  4105c1:	fcom   QWORD PTR [ecx+0x2c8b3fd1]
  4105c7:	cmp    esp,DWORD PTR [ebx]
  4105c9:	call   0x1c94d85e
  4105ce:	in     al,0xe
  4105d0:	push   ebp
  4105d1:	fsubp  st(4),st
  4105d3:	rol    DWORD PTR [edi],0x57
  4105d6:	mov    ch,0x49
  4105d8:	cli    
  4105d9:	jp     0x410620
  4105db:	fwait
  4105dc:	cmc    
  4105dd:	mov    edx,0x917cd485
  4105e2:	push   ss
  4105e3:	jmp    0xd82b:0x11d5be09
  4105ea:	rcr    DWORD PTR ds:0xb0d02f70,cl
  4105f0:	xchg   edx,eax
  4105f1:	mov    edx,0x8342c492
  4105f6:	add    DWORD PTR [esi-0x23f71a7c],esi
  4105fc:	jo     0x410588
  4105fe:	cmp    edi,DWORD PTR [eax+0x59cecc1f]
  410604:	lods   eax,DWORD PTR ds:[esi]
  410605:	fs ins BYTE PTR es:[edi],dx
  410607:	(bad)  [esi-0x28]
  41060a:	mov    edi,0x3e2fef0c
  41060f:	mov    dl,0x6a
  410611:	scas   eax,DWORD PTR es:[edi]
  410612:	dec    eax
  410613:	ret    0x9b17
  410616:	fwait
  410617:	push   esp
  410618:	push   ds
  410619:	xor    ah,BYTE PTR [esi-0x16793d4c]
  41061f:	cmc    
  410620:	and    bh,BYTE PTR [edi-0x5a]
  410623:	fstp   DWORD PTR [edi-0x27]
  410626:	push   0x49e58474
  41062b:	sbb    eax,DWORD PTR [edx]
  41062d:	lods   eax,DWORD PTR ds:[esi]
  41062e:	sbb    esi,ecx
  410630:	je     0x410609
  410632:	mov    ecx,0x21ad0a80
  410637:	test   al,0xfa
  410639:	jb     0x41064e
  41063b:	rcl    DWORD PTR [ebp-0x76],1
  41063e:	xchg   esi,eax
  41063f:	or     eax,0xc7b73f1c
  410644:	inc    esp
  410645:	xor    DWORD PTR [ebp+0x10cf8fab],eax
  41064b:	mov    dl,0x2
  41064d:	add    ah,cl
  41064f:	fcomp  DWORD PTR [edx]
  410651:	sub    ecx,0x6a735a4
  410657:	or     eax,0xa3a09721
  41065c:	imul   DWORD PTR [ecx+0x10]
  41065f:	ds xchg esp,edx
  410662:	xchg   esp,eax
  410663:	sub    BYTE PTR [eax+0x3a],0xd4
  410667:	xchg   ebx,eax
  410668:	xchg   edi,eax
  410669:	jns    0x41066e
  41066b:	xor    DWORD PTR [ecx],esp
  41066d:	clc    
  41066e:	aas    
  41066f:	inc    edi
  410670:	push   edi
  410671:	jg     0x41069a
  410673:	rol    DWORD PTR [esi],1
  410675:	(bad)  
  410677:	je     0x410615
  410679:	out    dx,al
  41067a:	add    DWORD PTR [edx],ebx
  41067c:	sbb    al,0x3c
  41067e:	or     BYTE PTR [eax+eax*2-0x34f9badc],al
  410685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410686:	test   al,0x93
  410688:	test   dl,dl
  41068a:	int3   
  41068b:	test   eax,ebp
  41068d:	or     edx,DWORD PTR [esi]
  41068f:	push   ds
  410690:	nop
  410691:	push   es
  410692:	mov    edi,0xef6e6afb
  410697:	vpsraw ymm2,ymm6,XMMWORD PTR [edi]
  41069b:	mov    esi,DWORD PTR [ebx+0x2f]
  41069e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069f:	cwde   
  4106a0:	pop    ds
  4106a1:	xor    edi,ecx
  4106a3:	jnp    0x4106eb
  4106a5:	sar    DWORD PTR [eax],1
  4106a7:	test   ch,0x63
  4106aa:	aas    
  4106ab:	mul    DWORD PTR [ebx]
  4106ad:	sub    dl,0xdc
  4106b0:	pop    esi
  4106b1:	and    eax,0x857de0d6
  4106b6:	int3   
  4106b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b8:	dec    BYTE PTR [edx]
  4106ba:	fcomp  QWORD PTR [ecx-0x46b24cf7]
  4106c0:	retf   0x46f
  4106c3:	iret   
  4106c4:	inc    eax
  4106c5:	loopne 0x410685
  4106c7:	aad    0xcd
  4106c9:	sub    edi,DWORD PTR [eax-0x36]
  4106cc:	add    dl,BYTE PTR [esi+0x464c20a7]
  4106d2:	test   eax,0x610868a5
  4106d7:	daa    
  4106d8:	ins    DWORD PTR es:[edi],dx
  4106d9:	or     DWORD PTR [ebx-0x54],ecx
  4106dc:	loope  0x4106ba
  4106de:	and    DWORD PTR [edi-0x36cfa41c],ebx
  4106e4:	idiv   BYTE PTR ds:0x438bc209
  4106ea:	inc    eax
  4106eb:	mov    esi,0x302f207
  4106f0:	push   ds
  4106f1:	fs repnz inc esi
  4106f4:	push   es
  4106f5:	ficomp DWORD PTR [edx]
  4106f7:	jae    0x4106ab
  4106f9:	inc    esp
  4106fa:	sbb    al,0x79
  4106fc:	pop    ebp
  4106fd:	xor    ch,dl
  4106ff:	add    al,al
  410701:	sahf   
  410702:	adc    edi,DWORD PTR [esi-0x5e9b51a0]
  410708:	adc    BYTE PTR [eax+0x458e5d6],bh
  41070e:	bound  eax,QWORD PTR [edi-0x4d47813e]
  410714:	mov    esp,0x9c5764c8
  410719:	es ret 
  41071b:	push   0xe973ebbf
  410720:	cmp    DWORD PTR ss:0xa3ca8f39,0x1bb5193e
  41072b:	ins    DWORD PTR es:[edi],dx
  41072c:	dec    ebx
  41072d:	adc    DWORD PTR ds:0xb4759a0d,edi
  410733:	or     al,0x18
  410735:	add    eax,0xa7e4aa8
  41073a:	in     eax,dx
  41073b:	push   cs
  41073c:	xor    ecx,DWORD PTR [eax+0x1ed03d41]
  410742:	or     ebp,DWORD PTR [edi-0x27]
  410745:	and    eax,0x9e9c1109
  41074a:	ins    WORD PTR es:[edi],dx
  41074c:	outs   dx,BYTE PTR ds:[esi]
  41074d:	and    ebx,DWORD PTR [ebx+0xa6f1325]
  410753:	aad    0xe7
  410755:	imul   edx,DWORD PTR [edx],0xa81d73c0
  41075b:	stc    
  41075c:	and    dl,BYTE PTR [ecx]
  41075e:	mov    dh,0xfe
  410760:	sar    DWORD PTR [ebp-0x1e],cl
  410763:	popa   
  410764:	sub    ecx,DWORD PTR [ecx+0x301e0c76]
  41076a:	lods   eax,DWORD PTR ds:[esi]
  41076b:	fistp  WORD PTR [eax-0x19f15447]
  410771:	jle    0x410737
  410773:	dec    ecx
  410774:	mov    ds:0xddde4193,eax
  410779:	imul   esi,DWORD PTR [ebp+0x3d],0xffffff9c
  41077d:	ss loop 0x410743
  410780:	xor    BYTE PTR [edx],ch
  410782:	fs pusha 
  410784:	sti    
  410785:	cmp    al,0xf8
  410787:	jp     0x410712
  410789:	sub    esp,DWORD PTR [esi]
  41078b:	dec    BYTE PTR [ecx]
  41078d:	dec    eax
  41078e:	pop    edi
  41078f:	ret    0xcf7c
  410792:	loop   0x41072e
  410794:	inc    ecx
  410795:	cmc    
  410796:	ja     0x410794
  410798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410799:	jb     0x4107fa
  41079b:	(bad)  
  41079c:	int3   
  41079d:	and    BYTE PTR [esi-0x6f],0xd2
  4107a1:	or     BYTE PTR es:[ebp+edx*8-0x46],dh
  4107a6:	add    edx,DWORD PTR [edx+0x211a68c]
  4107ac:	push   edi
  4107ad:	(bad)  
  4107ae:	(bad)  
  4107af:	(bad)  
  4107b0:	xor    ah,BYTE PTR [ecx+0x17403c4f]
  4107b6:	out    0x8b,eax
  4107b8:	sbb    eax,0x9d053087
  4107bd:	sahf   
  4107be:	mov    esi,0x234dffe0
  4107c3:	imul   edi,DWORD PTR [ecx],0x515ad235
  4107c9:	test   ebx,esp
  4107cb:	(bad)  
  4107cc:	hlt    
  4107cd:	test   BYTE PTR [edx+esi*1+0x0],ch
  4107d1:	out    dx,eax
  4107d2:	and    eax,0x221e4869
  4107d7:	lods   eax,DWORD PTR ds:[esi]
  4107d8:	sbb    DWORD PTR [edi+ecx*4],esp
  4107db:	mov    al,0xb2
  4107dd:	mov    cl,0x46
  4107df:	or     DWORD PTR [ecx+0x597323b8],edx
  4107e5:	shr    BYTE PTR [eax+0x3],cl
  4107e8:	xchg   ebx,eax
  4107e9:	int3   
  4107ea:	jge    0x410782
  4107ec:	into   
  4107ed:	or     DWORD PTR [ecx],ecx
  4107ef:	ret    0xa43a
  4107f2:	stc    
  4107f3:	cmc    
  4107f4:	jbe    0x4107ec
  4107f6:	in     eax,dx
  4107f7:	stos   BYTE PTR es:[edi],al
  4107f8:	cmp    al,0x8d
  4107fa:	xchg   edx,eax
  4107fb:	hlt    
  4107fc:	js     0x410784
  4107fe:	stos   DWORD PTR es:[edi],eax
  4107ff:	cmp    ah,BYTE PTR [eax-0x20257ca5]
  410805:	and    BYTE PTR [ecx+0x5e1c0a04],bl
  41080b:	push   es
  41080c:	or     BYTE PTR cs:[edx+0x38],ch
  410810:	in     al,dx
  410811:	mov    ds:0xde4c2c58,eax
  410816:	jle    0x41088f
  410818:	xor    ebp,DWORD PTR [ebp-0x3828410a]
  41081e:	mov    ds,WORD PTR [eax+ecx*2-0x47232cc6]
  410825:	pop    es
  410826:	cmp    DWORD PTR ds:0xf0cd3400,eax
  41082c:	push   0x5e
  41082e:	xchg   ebx,eax
  41082f:	leave  
  410830:	ret    
  410831:	xchg   ebx,eax
  410832:	daa    
  410833:	push   0x3
  410835:	sbb    BYTE PTR [esp+ecx*4+0x4d],dh
  410839:	gs pop esp
  41083b:	xor    ebp,DWORD PTR [edx+0x4d08f46c]
  410841:	or     DWORD PTR [ebx+0x3bfd511f],edi
  410847:	fwait
  410848:	inc    ebp
  410849:	xor    edx,DWORD PTR [eax+0x51044071]
  41084f:	sub    bh,BYTE PTR [esp-0x6]
  410853:	xor    al,0x8c
  410855:	call   0xb45e292b
  41085a:	inc    edx
  41085b:	rol    DWORD PTR [ebp-0x1791723b],1
  410861:	add    edi,esp
  410863:	mov    bl,0xcd
  410865:	mov    edi,0x80e3af17
  41086a:	iret   
  41086b:	imul   DWORD PTR [edx+0x7a]
  41086e:	lds    ebp,FWORD PTR [ebp-0x41]
  410871:	jnp    0x410884
  410873:	dec    edx
  410874:	push   edx
  410875:	outs   dx,BYTE PTR ds:[esi]
  410876:	push   esi
  410877:	mov    ds:0x7d93f756,al
  41087c:	pop    es
  41087d:	outs   dx,BYTE PTR ds:[esi]
  41087e:	fnstcw WORD PTR [eax+0x53]
  410881:	in     al,dx
  410882:	xor    dl,0xeb
  410885:	sub    al,0xd9
  410887:	sub    dh,BYTE PTR [ecx+0x71]
  41088a:	out    dx,al
  41088b:	daa    
  41088c:	mov    eax,ds:0xd4fda8ee
  410891:	push   ds
  410892:	pop    edx
  410893:	test   eax,0xcfbe7f4c
  410898:	jbe    0x4108e6
  41089a:	lds    edx,FWORD PTR [ecx]
  41089c:	mov    ds:0x23a1e99,eax
  4108a1:	hlt    
  4108a2:	mov    al,0xeb
  4108a4:	inc    esi
  4108a5:	inc    ebx
  4108a6:	(bad)  
  4108a7:	(bad)  [esi]
  4108a9:	in     eax,0xba
  4108ab:	mov    ecx,0x3ed02e23
  4108b0:	lods   eax,DWORD PTR ds:[esi]
  4108b1:	ftst   
  4108b3:	inc    ebp
  4108b4:	or     eax,0x9006b671
  4108b9:	inc    esi
  4108ba:	pushf  
  4108bb:	jnp    0x4108ea
  4108bd:	or     dh,dl
  4108bf:	xor    DWORD PTR [esi-0xf1d516c],edx
  4108c5:	adc    BYTE PTR [edx-0x539dc48e],0x6d
  4108cc:	out    dx,eax
  4108cd:	mov    cl,BYTE PTR [edi]
  4108cf:	test   BYTE PTR [ecx+0x26],dh
  4108d2:	stc    
  4108d3:	lsl    ebp,WORD PTR [edi]
  4108d6:	and    bh,ah
  4108d8:	ins    BYTE PTR es:[edi],dx
  4108d9:	inc    edx
  4108da:	and    eax,0xf6b947c6
  4108df:	inc    edi
  4108e0:	xchg   ebp,eax
  4108e1:	es sub dh,ah
  4108e4:	add    esi,DWORD PTR [eax]
  4108e6:	jae    0x41089c
  4108e8:	pop    ss
  4108e9:	xchg   edx,eax
  4108ea:	xor    ecx,DWORD PTR [edx-0x73]
  4108ed:	push   0xf6d26de0
  4108f2:	retf   
  4108f3:	es sub eax,0x937a4fea
  4108f9:	cld    
  4108fa:	fwait
  4108fb:	shr    BYTE PTR [ebx-0x75],1
  4108fe:	sbb    BYTE PTR [ecx],dl
  410900:	out    dx,al
  410901:	adc    eax,0xc6601fe5
  410906:	add    eax,0x5086d6eb
  41090b:	scas   al,BYTE PTR es:[edi]
  41090c:	frstor ds:0x4301f47f
  410912:	push   edi
  410913:	xor    esp,ebx
  410915:	sub    ah,ch
  410917:	and    BYTE PTR [esi+0x5945d817],ah
  41091d:	xchg   ebx,eax
  41091e:	ror    BYTE PTR [ebx+0x538e095f],cl
  410924:	lds    eax,FWORD PTR [eax+esi*4]
  410927:	in     al,dx
  410928:	fs inc ecx
  41092a:	les    eax,FWORD PTR [esi+0x67]
  41092d:	leave  
  41092e:	mov    edx,0xccd25bea
  410933:	jmp    0xfef9:0xcf9fcedc
  41093a:	sar    DWORD PTR [esi+0x7b],1
  41093d:	iret   
  41093e:	xor    ebx,ecx
  410940:	div    BYTE PTR [esi-0x52]
  410943:	fs mov ebp,0xbe333c78
  410949:	ds mov ecx,0xc6069e1
  41094f:	xchg   esi,eax
  410950:	out    dx,eax
  410951:	inc    ecx
  410952:	cs cmc 
  410954:	and    BYTE PTR [edx+esi*1+0x56],ah
  410958:	test   eax,0x93a6608e
  41095d:	and    eax,0xd7d6ebf4
  410962:	push   edi
  410963:	clc    
  410964:	sbb    DWORD PTR [edx],edx
  410966:	push   eax
  410967:	and    DWORD PTR [ebx],ebp
  410969:	pop    es
  41096a:	call   0x5abb:0x4bb924c3
  410971:	sub    ecx,DWORD PTR [esi]
  410973:	jmp    0x8d03:0x138094cf
  41097a:	or     eax,DWORD PTR [ecx-0x58]
  41097d:	shl    BYTE PTR [ecx+0x170c05c4],0x2d
  410984:	mov    edx,0x23e601e2
  410989:	fldenv [eax+edx*4]
  41098c:	add    eax,0xcf8b1f1d
  410991:	mov    ebp,esi
  410993:	xor    BYTE PTR [ecx-0x5e94a58a],bh
  410999:	retf   
  41099a:	addr16 adc ebp,0x5b
  41099e:	rol    BYTE PTR [esi],cl
  4109a0:	xchg   ebx,eax
  4109a1:	sub    al,BYTE PTR [edi-0x2d2109e8]
  4109a7:	mov    DWORD PTR [eax-0x1b],eax
  4109aa:	jg     0x410932
  4109ac:	mov    bh,0x49
  4109ae:	xchg   ecx,eax
  4109af:	or     BYTE PTR [edx-0x1d],0x87
  4109b3:	cld    
  4109b4:	jae    0x410968
  4109b6:	dec    edx
  4109b7:	jmp    0x59ec:0xcaf5bbbc
  4109be:	cld    
  4109bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c0:	lods   eax,DWORD PTR ds:[esi]
  4109c1:	jl     0x410999
  4109c3:	add    ecx,ecx
  4109c5:	mov    edi,0x35f2fb95
  4109ca:	cmp    al,0x9f
  4109cc:	in     al,dx
  4109cd:	jo     0x410950
  4109cf:	pop    ecx
  4109d0:	pop    ds
  4109d1:	sub    bh,bh
  4109d3:	pop    es
  4109d4:	adc    eax,0x28f74393
  4109d9:	aad    0x1f
  4109db:	and    eax,0xf45668c4
  4109e0:	loopne 0x4109de
  4109e2:	add    al,0x31
  4109e4:	inc    ecx
  4109e5:	dec    ebp
  4109e6:	jl     0x4109e5
  4109e8:	sbb    al,0xe
  4109ea:	enter  0x6504,0xfd
  4109ee:	cmc    
  4109ef:	(bad)
  4109f2:	lds    ebp,FWORD PTR [ebx-0x299d27e6]
  4109f8:	xchg   ebx,eax
  4109f9:	sub    al,0xb0
  4109fb:	daa    
  4109fc:	mov    BYTE PTR [edi+0xd],bl
  4109ff:	(bad)  
  410a00:	xor    al,bl
  410a02:	cmp    al,0x69
  410a04:	xor    al,BYTE PTR [eax]
  410a06:	jbe    0x410997
  410a08:	dec    esi
  410a09:	aas    
  410a0a:	mov    edx,0x78e6e6d5
  410a0f:	jo     0x410a76
  410a11:	sahf   
  410a12:	push   edi
  410a13:	push   ss
  410a14:	sub    eax,0x461e3cf5
  410a19:	mov    bh,0x5b
  410a1b:	mov    cl,0x8b
  410a1d:	adc    ah,BYTE PTR [edi-0x1a]
  410a20:	jl     0x410a33
  410a22:	adc    al,0xfb
  410a24:	in     al,dx
  410a25:	jecxz  0x410a57
  410a27:	int3   
  410a28:	xchg   ebx,ecx
  410a2a:	mov    ds:0x5f901c26,eax
  410a2f:	push   es
  410a30:	dec    ecx
  410a31:	xor    DWORD PTR ds:0xe22dc6e7,0x54
  410a38:	(bad)  
  410a39:	fcomp  DWORD PTR [ebp-0x416568d1]
  410a3f:	out    dx,eax
  410a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a42:	in     eax,0xdb
  410a44:	rol    ecx,1
  410a46:	fadd   st,st(3)
  410a48:	jecxz  0x410a90
  410a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a4b:	rcr    DWORD PTR [ebx-0x14],1
  410a4e:	rol    DWORD PTR [eax+edx*2+0x641b3588],1
  410a55:	jmp    0x410a30
  410a57:	sbb    DWORD PTR [ecx-0x33a928d4],ebp
  410a5d:	jo     0x410ab4
  410a5f:	loope  0x410ab0
  410a61:	add    ebp,ebp
  410a63:	mov    al,ds:0xc5f86f9d
  410a68:	xchg   DWORD PTR [edi],esp
  410a6a:	fld    QWORD PTR ds:0x6c777ffc
  410a70:	inc    edi
  410a71:	ds xchg edi,eax
  410a73:	and    bl,al
  410a75:	cli    
  410a76:	mov    ah,0x62
  410a78:	add    eax,0x8382af84
  410a7d:	mov    bh,dl
  410a7f:	pop    esp
  410a80:	arpl   WORD PTR [ebp-0x33],bx
  410a83:	into   
  410a84:	xchg   ebx,eax
  410a85:	out    dx,eax
  410a86:	(bad)  
  410a87:	adc    eax,0xba716b9c
  410a8c:	cmp    dl,ah
  410a8e:	push   ecx
  410a8f:	jl     0x410ae0
  410a91:	inc    ecx
  410a92:	jmp    DWORD PTR [ebx+edx*8]
  410a95:	mov    al,0x96
  410a97:	or     BYTE PTR [eax-0x417a63d6],bh
  410a9d:	leave  
  410a9e:	jae    0x410b00
  410aa0:	xchg   ecx,eax
  410aa1:	mov    ch,bl
  410aa3:	aas    
  410aa4:	adc    bl,BYTE PTR [edi]
  410aa6:	cwde   
  410aa7:	cmp    BYTE PTR [esi-0x76],dl
  410aaa:	adc    dh,BYTE PTR [edx-0xd6edec1]
  410ab0:	mov    ebp,0xf0b886f
  410ab5:	ja     0x410a89
  410ab7:	mov    edi,0xa82ac741
  410abc:	and    DWORD PTR [eax+edx*8-0x63be636c],edi
  410ac3:	fwait
  410ac4:	jmp    0xc52e3b4f
  410ac9:	xor    ebx,DWORD PTR [edx+eiz*8-0x7fb31322]
  410ad0:	cmp    BYTE PTR [ebp+0x2ab0f55f],ah
  410ad6:	and    eax,0xab5aac7b
  410adb:	call   0x94ec92c
  410ae0:	push   ecx
  410ae1:	fdivr  DWORD PTR [ebp+0x3c]
  410ae4:	cmp    ecx,DWORD PTR [edi-0x6c38bbee]
  410aea:	xchg   BYTE PTR [esi*8-0x726e702f],dh
  410af1:	sub    DWORD PTR [ecx+0x1afa3d85],0xe34b53b7
  410afb:	push   esp
  410afc:	push   ebx
  410afd:	stos   BYTE PTR es:[edi],al
  410afe:	(bad)  
  410aff:	in     al,0xf2
  410b01:	scas   al,BYTE PTR es:[edi]
  410b02:	in     al,dx
  410b03:	fwait
  410b04:	ins    DWORD PTR es:[edi],dx
  410b05:	mov    eax,ds:0xa11885c8
  410b0a:	loop   0x410b8b
  410b0c:	jmp    0x410af6
  410b0e:	cmp    ah,dh
  410b10:	jle    0x410b58
  410b12:	and    eax,0x93aae89f
  410b17:	mov    edi,0x64207461
  410b1c:	(bad)  
  410b1e:	mov    ch,0x3e
  410b20:	out    0x11,eax
  410b22:	adc    eax,0x3d113e9a
  410b27:	fcmovnb st,st(6)
  410b29:	jns    0x410b14
  410b2b:	add    DWORD PTR [edi],0xffffffa0
  410b2e:	(bad)  
  410b2f:	out    0xb,eax
  410b31:	jae    0x410b1a
  410b33:	pushf  
  410b34:	push   cs
  410b35:	inc    eax
  410b36:	jp     0x410b64
  410b38:	cmc    
  410b39:	adc    DWORD PTR [eax+edi*8-0x1d71560c],0x86992f94
  410b44:	inc    esi
  410b45:	lods   al,BYTE PTR ds:[esi]
  410b46:	aam    0xd4
  410b48:	pop    eax
  410b49:	inc    ebx
  410b4a:	mul    DWORD PTR es:[edx+eax*2-0x772663bb]
  410b52:	sbb    BYTE PTR [esi+0x3fa16d96],bl
  410b58:	retf   0x34cb
  410b5b:	rcl    DWORD PTR [ebp+0x45],0xa2
  410b5f:	mov    ecx,0xe53f3a7d
  410b64:	imul   edi,esp,0xffffff84
  410b67:	inc    esp
  410b68:	inc    edi
  410b69:	xor    bl,0x75
  410b6c:	cwde   
  410b6d:	dec    ecx
  410b6e:	outs   dx,DWORD PTR ds:[esi]
  410b6f:	mov    esi,ecx
  410b71:	hlt    
  410b72:	outs   dx,BYTE PTR ds:[esi]
  410b73:	push   ebx
  410b74:	neg    ecx
  410b76:	in     eax,dx
  410b77:	mov    ecx,0xe3d4afa
  410b7c:	shl    DWORD PTR [edx-0x2336af66],cl
  410b82:	arpl   WORD PTR [esi],si
  410b84:	xchg   ebx,eax
  410b85:	push   ds
  410b86:	pop    edx
  410b87:	mov    ecx,0x1fa26170
  410b8c:	push   eax
  410b8d:	int3   
  410b8e:	xor    DWORD PTR [ebp-0x2b252d18],0xfffffffc
  410b95:	adc    DWORD PTR [esp+edx*8+0x6a0aa9bd],0x5fa80d06
  410ba0:	sbb    eax,0xa8d2686d
  410ba5:	jle    0x410bda
  410ba7:	test   eax,0x85cb0002
  410bac:	(bad)  
  410bad:	xchg   esp,eax
  410bae:	cmp    ch,BYTE PTR [edx+0x37]
  410bb1:	loop   0x410bfd
  410bb3:	(bad)  
  410bb4:	mov    WORD PTR [edx],fs
  410bb6:	test   al,0x20
  410bb8:	retf   0xe1a2
  410bbb:	and    DWORD PTR [esi-0x1a],edx
  410bbe:	stos   DWORD PTR es:[edi],eax
  410bbf:	mov    bh,0xb0
  410bc1:	imul   esi,esi,0xd21c630b
  410bc7:	sbb    DWORD PTR ds:0xa0fd5473,edx
  410bcd:	or     DWORD PTR [edx],edi
  410bcf:	inc    ebp
  410bd0:	(bad)  
  410bd1:	ins    DWORD PTR es:[edi],dx
  410bd2:	push   ds
  410bd3:	sub    al,0x14
  410bd5:	xor    cl,dh
  410bd7:	retf   
  410bd8:	cdq    
  410bd9:	in     eax,dx
  410bda:	icebp  
  410bdb:	mov    al,ds:0x773da827
  410be0:	adc    ecx,edi
  410be2:	ficom  DWORD PTR [esi]
  410be4:	inc    ebx
  410be5:	push   eax
  410be6:	in     eax,0x71
  410be8:	popa   
  410be9:	ror    DWORD PTR [eax],0x37
  410bec:	push   0x9156685b
  410bf1:	dec    ecx
  410bf2:	retf   0x2dcd
  410bf5:	jl     0x410c00
  410bf7:	cmp    cl,dl
  410bf9:	mov    bh,0x53
  410bfb:	mov    ch,0x1
  410bfd:	and    eax,0x10c56834
  410c02:	(bad)  [esi]
  410c04:	test   al,0xad
  410c06:	(bad)  
  410c07:	scas   eax,DWORD PTR es:[edi]
  410c08:	dec    eax
  410c09:	pop    ebp
  410c0a:	mov    ebx,0x99e2f4f1
  410c0f:	push   ds
  410c10:	bound  eax,QWORD PTR [edx+0x3ced936b]
  410c16:	jae    0x410bc9
  410c18:	mov    dh,0x4b
  410c1a:	add    DWORD PTR [eax],esp
  410c1c:	(bad)  
  410c1d:	pop    esp
  410c1e:	cmp    edi,DWORD PTR [ebp-0x5d]
  410c21:	mov    bl,0x5d
  410c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c24:	lods   eax,DWORD PTR ds:[esi]
  410c25:	jmp    0x8a04:0x8136db80
  410c2c:	pop    esi
  410c2d:	jns    0x410c1a
  410c2f:	shl    BYTE PTR [esi-0x58cf6ec5],1
  410c35:	arpl   WORD PTR [ecx-0x2a],bx
  410c38:	push   cs
  410c39:	jmp    0x2e3da021
  410c3e:	or     ah,BYTE PTR [edi-0x7214e362]
  410c44:	pop    ebp
  410c45:	jmp    0x410cac
  410c47:	inc    bl
  410c49:	out    0x74,al
  410c4b:	mov    dl,0x22
  410c4d:	dec    eax
  410c4e:	jmp    0x410bda
  410c50:	dec    ebp
  410c51:	inc    edi
  410c52:	jnp    0x410c42
  410c54:	lahf   
  410c55:	push   0x6973320c
  410c5a:	pushf  
  410c5b:	test   DWORD PTR [ebx],ecx
  410c5d:	ret    
  410c5e:	sub    dh,BYTE PTR ds:0xc1e720ab
  410c64:	clc    
  410c65:	mov    dl,0xb
  410c67:	add    eax,0xf8216238
  410c6c:	or     al,0x3c
  410c6e:	(bad)  
  410c6f:	(bad)  [edi+ebx*4-0x177f359a]
  410c76:	mov    esp,0x6364eeb
  410c7b:	stos   BYTE PTR es:[edi],al
  410c7c:	vcvtps2dq xmm5,XMMWORD PTR [eax+ebp*8+0x26]
  410c82:	out    dx,eax
  410c83:	in     eax,0xa6
  410c85:	jg     0x410c3a
  410c87:	xchg   esi,eax
  410c88:	mov    ebx,0x6a279f2e
  410c8d:	xor    eax,0x9ed664b2
  410c92:	into   
  410c93:	jl     0x410cb5
  410c95:	stc    
  410c96:	inc    edi
  410c97:	mov    ah,0x7d
  410c99:	push   esp
  410c9a:	adc    eax,DWORD PTR [eax-0x7a]
  410c9d:	call   FWORD PTR [ebx+ebp*1]
  410ca0:	repz push ss
  410ca2:	inc    edi
  410ca3:	das    
  410ca4:	ja     0x410ce6
  410ca6:	(bad)  
  410ca7:	imul   edi,DWORD PTR [edx-0x92160a0],0xffffffc7
  410cae:	test   eax,0xabcfcd27
  410cb3:	rcl    BYTE PTR [ebx],cl
  410cb5:	imul   edx,ecx,0x4b5bf627
  410cbb:	arpl   WORD PTR [ecx],di
  410cbd:	or     DWORD PTR [eax+0x17bd63ac],edx
  410cc3:	cli    
  410cc4:	mov    WORD PTR [edi+0x69100c1c],gs
  410cca:	jnp    0x410d32
  410ccc:	mov    dl,ah
  410cce:	or     ah,BYTE PTR [edx+0x78d303e4]
  410cd4:	xchg   DWORD PTR [eax],eax
  410cd6:	or     eax,0x2e51df80
  410cdb:	test   eax,0xf604ab9a
  410ce0:	mov    eax,0xcd0fd9f7
  410ce5:	push   esi
  410ce6:	ins    DWORD PTR es:[edi],dx
  410ce7:	in     eax,0x8b
  410ce9:	inc    ebp
  410cea:	lahf   
  410ceb:	or     al,0xaf
  410ced:	shl    DWORD PTR [esi+0x46],1
  410cf0:	jp     0x410d1c
  410cf2:	adc    eax,0x4b1cf703
  410cf7:	ret    0x75fb
  410cfa:	cmp    cl,ch
  410cfc:	mov    al,ds:0x6872d40f
  410d01:	jle    0x410cb1
  410d03:	jle    0x410ce5
  410d05:	pop    eax
  410d06:	ror    BYTE PTR [eax-0x75194075],1
  410d0c:	sub    cl,BYTE PTR [esi-0x51bf85a8]
  410d12:	aas    
  410d13:	adc    esp,DWORD PTR [edx-0x10]
  410d16:	fiadd  WORD PTR [eax-0xd7d73c]
  410d1c:	jp     0x410d00
  410d1e:	leave  
  410d1f:	lock push ss
  410d21:	fneni(8087 only) 
  410d23:	inc    ecx
  410d24:	dec    edi
  410d25:	cs nop
  410d27:	xchg   edi,eax
  410d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d29:	stc    
  410d2a:	mov    esp,gs
  410d2c:	mov    edx,0x2c66b144
  410d31:	inc    edx
  410d32:	pusha  
  410d33:	xor    DWORD PTR ds:0xc38d4596,edi
  410d39:	mov    ds:0x6f8ccb19,eax
  410d3e:	jmp    0xf1dbcdc7
  410d43:	stc    
  410d44:	sub    DWORD PTR [esp+eax*2-0x7e],eax
  410d48:	fild   DWORD PTR [ecx]
  410d4a:	pop    esi
  410d4b:	mov    eax,0xb44ec906
  410d50:	aam    0x8e
  410d52:	es xchg esp,eax
  410d54:	pop    ebx
  410d55:	sbb    ebx,ebp
  410d57:	mov    al,0x66
  410d59:	ror    ah,1
  410d5b:	sbb    DWORD PTR [esi-0x617f957f],0x1a77dbe
  410d65:	call   0xb4284e9e
  410d6a:	pop    ebp
  410d6b:	data16 std 
  410d6d:	(bad)  
  410d6e:	mov    edi,0xa54988e8
  410d73:	xor    ecx,0xffffff90
  410d76:	fist   DWORD PTR [edi+0x2]
  410d79:	jle    0x410dcb
  410d7b:	lock stos BYTE PTR es:[edi],al
  410d7d:	pop    ebx
  410d7e:	and    BYTE PTR ds:0x11b7d2c7,dh
  410d84:	pop    ds
  410d85:	jno    0x410d2c
  410d87:	add    eax,DWORD PTR [ecx+ebp*2-0x3]
  410d8b:	dec    esp
  410d8c:	push   edx
  410d8d:	pop    eax
  410d8e:	lahf   
  410d8f:	retf   0x1f76
  410d92:	cmp    BYTE PTR [edi+0x25d883af],dl
  410d98:	sbb    eax,0x5c7bc82e
  410d9d:	mov    eax,0xee77a4b6
  410da2:	es cwde 
  410da4:	add    BYTE PTR [edx+0x78a64285],cl
  410daa:	cdq    
  410dab:	lea    esi,[ebx]
  410dad:	shufps xmm6,xmm6,0xd6
  410db1:	fdiv   st(5),st
  410db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db4:	xor    esp,esp
  410db6:	add    DWORD PTR [edx+0x28],esi
  410db9:	clc    
  410dba:	push   esi
  410dbb:	ss mov al,0x8b
  410dbe:	hlt    
  410dbf:	inc    esi
  410dc0:	stos   DWORD PTR es:[edi],eax
  410dc1:	inc    ebx
  410dc2:	es fwait
  410dc4:	arpl   WORD PTR [ecx],di
  410dc6:	jae    0x410d76
  410dc8:	cmp    ebx,ebp
  410dca:	pop    eax
  410dcb:	cmp    DWORD PTR [edx+eax*1+0x5e442d03],edx
  410dd2:	pop    ebx
  410dd3:	jns    0x410dc2
  410dd5:	in     al,0x24
  410dd7:	mov    dl,0x88
  410dd9:	lahf   
  410dda:	mov    ds:0x77fa3350,al
  410ddf:	sbb    al,0xbc
  410de1:	sbb    DWORD PTR [esi-0x71d46083],ebx
  410de7:	daa    
  410de8:	loop   0x410d88
  410dea:	jae    0x410de3
  410dec:	cmp    ah,al
  410dee:	pop    ds
  410def:	rcl    DWORD PTR [ecx+edx*4],0x98
  410df3:	fwait
  410df4:	mov    ebp,0xd6236fad
  410df9:	imul   BYTE PTR [edx-0x40]
  410dfc:	inc    eax
  410dfd:	push   ds
  410dfe:	push   eax
  410dff:	loopne 0x410dd2
  410e01:	sahf   
  410e02:	rcr    DWORD PTR [edi+ebx*2+0x75a5107c],1
  410e09:	xchg   ecx,eax
  410e0a:	mov    al,0x74
  410e0c:	lock and BYTE PTR [eax+ebx*4+0x568c338c],0x82
  410e15:	pop    ebx
  410e16:	mov    eax,eax
  410e18:	repnz sti 
  410e1a:	mov    ecx,eax
  410e1c:	pop    es
  410e1d:	nop
  410e1e:	(bad)  
  410e1f:	adc    DWORD PTR [esi],ebp
  410e21:	xchg   ebp,eax
  410e22:	sbb    dl,bh
  410e24:	xchg   BYTE PTR [esi+0x6db18548],bl
  410e2a:	dec    edi
  410e2b:	and    BYTE PTR [edx],bh
  410e2d:	xor    BYTE PTR gs:[esi+0x68],bl
  410e31:	push   ds
  410e32:	adc    BYTE PTR [esi+0x24],cl
  410e35:	dec    eax
  410e36:	dec    eax
  410e37:	jmp    0xadeb:0x175c4254
  410e3e:	nop
  410e3f:	mov    ch,0x10
  410e41:	xchg   edi,eax
  410e42:	pushf  
  410e43:	shl    BYTE PTR [edx+0x35fb6cc1],cl
  410e49:	inc    edx
  410e4a:	xor    dl,BYTE PTR ds:0x24ca8d35
  410e50:	xchg   ebx,eax
  410e51:	pop    ebp
  410e52:	retf   
  410e53:	pop    ds
  410e54:	or     esp,DWORD PTR [ebp+0x4dc568a4]
  410e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5b:	outs   dx,BYTE PTR ds:[esi]
  410e5c:	mov    ecx,?
  410e5e:	in     eax,0x68
  410e60:	ffreep st(2)
  410e62:	cmp    DWORD PTR [eax+0x16c149f4],eax
  410e68:	into   
  410e69:	stos   BYTE PTR es:[edi],al
  410e6a:	(bad)  
  410e6c:	dec    ebx
  410e6d:	mov    bh,0x12
  410e6f:	rcr    BYTE PTR [edx+0x18ada727],0xf4
  410e76:	int3   
  410e77:	add    ecx,DWORD PTR [edx]
  410e79:	jo     0x410e88
  410e7b:	cld    
  410e7c:	fisttp QWORD PTR [ecx+0x7d]
  410e7f:	push   es
  410e80:	popf   
  410e81:	xchg   DWORD PTR [edi],eax
  410e83:	ins    BYTE PTR es:[edi],dx
  410e84:	jle    0x410e35
  410e86:	push   edi
  410e87:	jecxz  0x410e60
  410e89:	jbe    0x410e9e
  410e8b:	cmp    edx,DWORD PTR [esi-0x3]
  410e8e:	fst    DWORD PTR [esi]
  410e90:	or     edx,DWORD PTR ds:0xf11d0694
  410e96:	xchg   ebx,eax
  410e97:	aam    0xd7
  410e99:	jae    0x410eb8
  410e9b:	dec    esi
  410e9c:	xor    al,0xf9
  410e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9f:	retf   0xfec9
  410ea2:	sbb    ch,ch
  410ea4:	mov    ebp,DWORD PTR [edx]
  410ea6:	mov    ds:0xb3a12533,eax
  410eab:	leave  
  410eac:	call   0xa569:0x3767f49a
  410eb3:	aaa    
  410eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb5:	fst    DWORD PTR [edi]
  410eb7:	dec    eax
  410eb8:	cli    
  410eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eba:	int    0x86
  410ebc:	add    BYTE PTR [ecx-0x23f549f],ch
  410ec2:	sbb    ch,bh
  410ec4:	inc    ecx
  410ec5:	push   0x60d50f8c
  410eca:	icebp  
  410ecb:	stos   DWORD PTR es:[edi],eax
  410ecc:	int    0xd8
  410ece:	bound  esp,QWORD PTR [esi+0x2c]
  410ed1:	in     eax,0xac
  410ed3:	push   0xe94bfcc1
  410ed8:	int3   
  410ed9:	pop    ebp
  410eda:	leave  
  410edb:	pop    edx
  410edc:	ja     0x410f2b
  410ede:	jns    0x410e9c
  410ee0:	int    0xea
  410ee2:	aam    0x76
  410ee4:	repnz cdq 
  410ee6:	mov    edi,0xaf605fb4
  410eeb:	or     DWORD PTR [ecx+0x38],esp
  410eee:	lahf   
  410eef:	je     0x410ef6
  410ef1:	xchg   ecx,eax
  410ef2:	mov    ah,0xf
  410ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef5:	in     al,0xe2
  410ef7:	jmp    0xcbfb4821
  410efc:	shr    esp,cl
  410efe:	rcl    BYTE PTR [ecx-0x7c],1
  410f01:	mov    dl,0x49
  410f03:	xchg   esi,eax
  410f04:	pop    edi
  410f05:	jp     0x410f79
  410f07:	push   cs
  410f08:	(bad)  
  410f09:	(bad)  
  410f0a:	cwde   
  410f0b:	pushf  
  410f0c:	dec    ebp
  410f0d:	ins    DWORD PTR es:[edi],dx
  410f0e:	imul   BYTE PTR [ebx+0x65a73aa4]
  410f14:	inc    ebx
  410f15:	cli    
  410f16:	ret    
  410f17:	retf   0x7fbe
  410f1a:	fmul   st(4),st
  410f1c:	and    BYTE PTR [esi],ch
  410f1e:	add    DWORD PTR [ebx+0x2be7f248],esp
  410f24:	mov    ebp,fs
  410f26:	jmp    0x410f75
  410f28:	(bad)  
  410f29:	fisub  DWORD PTR [ebx-0x61643ff2]
  410f2f:	sbb    DWORD PTR [edx-0x14ba3e72],eax
  410f35:	cmp    DWORD PTR [edx-0x3],0x17e09229
  410f3c:	icebp  
  410f3d:	enter  0x1479,0x61
  410f41:	inc    edi
  410f42:	fs test al,0x3e
  410f45:	xchg   edi,eax
  410f46:	lahf   
  410f47:	xchg   ecx,eax
  410f48:	outs   dx,BYTE PTR ds:[esi]
  410f49:	lods   al,BYTE PTR ds:[esi]
  410f4a:	push   ss
  410f4b:	loopne 0x410f07
  410f4d:	iret   
  410f4e:	xchg   ebx,eax
  410f4f:	popa   
  410f50:	pushf  
  410f51:	add    eax,esp
  410f53:	stos   BYTE PTR es:[edi],al
  410f54:	ret    0x89da
  410f57:	jl     0x410f6f
  410f59:	inc    bl
  410f5b:	sbb    BYTE PTR [ebx-0x6a],dh
  410f5e:	shl    edi,1
  410f60:	adc    BYTE PTR [edx-0x4c],ch
  410f63:	pop    edx
  410f64:	bound  esi,QWORD PTR [edi+0x4b]
  410f67:	mov    ebp,0x14e1a35e
  410f6c:	pop    ebx
  410f6d:	push   esp
  410f6f:	jnp    0x410f3a
  410f71:	push   0xa7b23ad4
  410f76:	ss adc al,0xe2
  410f79:	lock sub ch,BYTE PTR [edi]
  410f7c:	jl     0x410f8c
  410f7e:	aam    0x8a
  410f80:	push   edi
  410f81:	aad    0x50
  410f83:	stc    
  410f84:	data16 out dx,al
  410f86:	add    eax,0x8e7bd8be
  410f8b:	mov    ah,ch
  410f8d:	or     DWORD PTR [ebx],0x5f
  410f90:	and    esi,DWORD PTR [ecx+0x6a699147]
  410f96:	daa    
  410f97:	xchg   esp,edx
  410f99:	das    
  410f9a:	int3   
  410f9b:	rcl    DWORD PTR [ebx+0x60b3f569],0x72
  410fa2:	xlat   BYTE PTR ds:[ebx]
  410fa3:	lods   al,BYTE PTR ds:[esi]
  410fa4:	in     al,dx
  410fa5:	mov    cl,BYTE PTR [edx-0xe]
  410fa8:	mov    ds:0xb0a578d0,eax
  410fad:	data16 gs data16 clc 
  410fb1:	pop    ecx
  410fb2:	pop    edx
  410fb3:	and    al,0x5a
  410fb5:	mov    WORD PTR [ebx+edi*4-0x29d5a99d],ds
  410fbc:	jl     0x410fa3
  410fbe:	or     edi,DWORD PTR [ebx]
  410fc0:	mov    al,BYTE PTR [ebp+0x43]
  410fc3:	jge    0x410f5e
  410fc5:	(bad)  
  410fc6:	in     eax,dx
  410fc7:	pop    ebp
  410fc8:	pop    esi
  410fc9:	mov    ah,0x56
  410fcb:	mov    ebx,0xee2c1473
  410fd0:	jle    0x41104b
  410fd2:	retf   
  410fd3:	jmp    0x41104d
  410fd5:	repz mov esp,0x6c566baa
  410fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fdc:	cli    
  410fdd:	push   ds
  410fde:	inc    esp
  410fdf:	out    0xcb,al
  410fe1:	inc    esi
  410fe2:	pushf  
  410fe3:	xchg   edx,eax
  410fe4:	add    edx,DWORD PTR [ebx]
  410fe6:	pushf  
  410fe7:	push   eax
  410fe8:	jb     0x410fd6
  410fea:	mov    ch,BYTE PTR [edi+0x4]
  410fed:	adc    al,0x43
  410fef:	repnz fdiv st,st(7)
  410ff2:	lds    esp,FWORD PTR [ebx-0xe]
  410ff5:	sbb    edx,esp
  410ff7:	mov    edi,0x4a8b0ba6
  410ffc:	adc    al,0x7f
  410ffe:	lahf   
  410fff:	es call 0x90ce:0xfc805560
  411007:	emms   
  411009:	fld    st(0)
  41100b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41100c:	sbb    eax,0xa2a09642
  411011:	xor    eax,0xcaf72bcd
  411016:	inc    ecx
  411017:	inc    edx
  411018:	(bad)  
  411019:	shl    DWORD PTR [edi-0xf99dbb4],cl
  41101f:	icebp  
  411020:	mov    ch,dl
  411022:	cmc    
  411023:	sar    DWORD PTR [edx-0x2e5d2abc],1
  411029:	pop    eax
  41102a:	sti    
  41102b:	cmp    bl,0xfe
  41102e:	jecxz  0x410fb7
  411030:	inc    edi
  411031:	ja     0x410fbe
  411033:	mov    DWORD PTR [ebx+ecx*8-0x35],ecx
  411037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411038:	repnz add al,0x27
  41103b:	xchg   DWORD PTR [ebx+0x7977a275],esi
  411041:	imul   ebx,DWORD PTR [edx],0xf7dfde7e
  411047:	sbb    ebx,DWORD PTR [esi+0x20]
  41104a:	mov    eax,0x925d9a7f
  41104f:	loopne 0x411074
  411051:	inc    ebp
  411052:	sbb    eax,0xe52fb387
  411057:	loopne 0x411010
  411059:	(bad)  
  41105a:	jp     0x41103d
  41105c:	mov    ebx,0xaacb5aaf
  411061:	xlat   BYTE PTR ds:[ebx]
  411062:	cdq    
  411063:	test   BYTE PTR [ebx+0x53],0x8
  411067:	mov    BYTE PTR [edx+0x31f3e8d3],bh
  41106d:	nop
  41106e:	mov    DWORD PTR [eax-0x2b59c400],esi
  411074:	shr    DWORD PTR [esi-0x5a02fabf],0xb
  41107b:	inc    ecx
  41107c:	clc    
  41107d:	int3   
  41107e:	pop    edi
  41107f:	xor    al,0x38
  411081:	pop    ds
  411082:	loope  0x4110e7
  411084:	iret   
  411085:	repz cmp BYTE PTR [ebp-0x63],cl
  411089:	les    esi,FWORD PTR [eax+0x4b6218ae]
  41108f:	push   esi
  411090:	dec    ebp
  411091:	push   esi
  411092:	sbb    bl,0x7c
  411095:	sbb    eax,0x92806245
  41109a:	jns    0x411108
  41109c:	jmp    0x5da5:0xaabef1f6
  4110a3:	jno    0x41109d
  4110a5:	add    eax,0xa9e2c668
  4110aa:	mov    al,ds:0xe6372f48
  4110af:	shr    eax,cl
  4110b1:	retf   
  4110b2:	aad    0x80
  4110b4:	xcrypt-ctr (bad)
  4110b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b6:	ffree  st(4)
  4110b8:	ret    0x38fc
  4110bb:	out    0x5a,al
  4110bd:	aaa    
  4110be:	pop    eax
  4110bf:	outs   dx,DWORD PTR ds:[esi]
  4110c0:	inc    eax
  4110c1:	dec    eax
  4110c2:	mov    ds:0x7485179d,eax
  4110c7:	sub    ecx,DWORD PTR [ebx-0x6a]
  4110ca:	sub    esp,0xff4e9e5f
  4110d0:	and    ecx,edi
  4110d2:	punpcklbw mm4,DWORD PTR [eax-0x4f5fb7f9]
  4110d9:	in     al,0xab
  4110db:	cmc    
  4110dc:	sbb    eax,0xf861be8
  4110e1:	pusha  
  4110e2:	shl    BYTE PTR [si-0x76],cl
  4110e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e7:	fsubr  DWORD PTR [esi-0x6b7615f4]
  4110ed:	dec    edi
  4110ee:	loope  0x4110e7
  4110f0:	mov    ds:0x53c3ddcb,eax
  4110f5:	cs int 0xca
  4110f8:	out    dx,eax
  4110f9:	adc    DWORD PTR [edi+0x45],0xffffffa4
  4110fd:	push   0x4c
  4110ff:	sub    DWORD PTR [eax+0x54],eax
  411102:	xchg   DWORD PTR [ecx-0x34],ecx
  411105:	adc    al,0xa0
  411107:	inc    edx
  411108:	out    dx,al
  411109:	(bad)  
  41110a:	fisttp DWORD PTR [edx+0x6e1e91c2]
  411110:	push   edi
  411111:	dec    ebp
  411112:	pop    edx
  411113:	sti    
  411114:	imul   ecx,DWORD PTR [eax+0x40],0xffffff8b
  411118:	push   esi
  411119:	push   es
  41111a:	mov    ah,BYTE PTR [esi]
  41111c:	test   eax,0x7f8d2657
  411121:	add    DWORD PTR [edi],edx
  411123:	std    
  411124:	sbb    dh,0xf4
  411127:	rcr    BYTE PTR [ebx],0x62
  41112a:	fwait
  41112b:	imul   DWORD PTR [edi+0x7b]
  41112e:	lods   al,BYTE PTR ds:[esi]
  41112f:	dec    ebx
  411130:	add    al,0x19
  411132:	adc    edi,DWORD PTR [ebp+0x3ff93e86]
  411138:	ret    0xd449
  41113b:	xor    al,0xdb
  41113d:	adc    BYTE PTR [edx],ch
  41113f:	mov    ch,0x9d
  411141:	mov    ebx,0xf056bb42
  411146:	scas   eax,DWORD PTR es:[edi]
  411147:	jns    0x41110b
  411149:	ins    DWORD PTR es:[edi],dx
  41114a:	dec    ebp
  41114b:	push   edx
  41114c:	bnd jne 0x411139
  41114f:	jmp    0x6d520f7
  411154:	sub    ch,BYTE PTR [ebp-0x2955733d]
  41115a:	into   
  41115b:	ret    0xbcaa
  41115e:	and    ebx,DWORD PTR [edx]
  411160:	push   ss
  411161:	pusha  
  411162:	xor    eax,0x2fa954f1
  411167:	and    ebp,DWORD PTR [ebp+0x2a3bff4f]
  41116d:	jb     0x41112b
  41116f:	repz inc eax
  411171:	popf   
  411172:	sub    eax,0x4d523e4f
  411177:	es popf 
  411179:	loop   0x4111d4
  41117b:	cs push 0x4b896752
  411181:	mov    WORD PTR [edi+0x3f9d503e],gs
  411187:	mov    gs,WORD PTR [edi-0x14]
  41118a:	neg    DWORD PTR [edi]
  41118c:	popa   
  41118d:	rcl    esi,cl
  41118f:	repz add dh,dh
  411192:	mov    dh,0xca
  411194:	stos   BYTE PTR es:[edi],al
  411195:	fnstenv [edx-0xb7427ee]
  41119b:	lock xchg esp,edx
  41119e:	dec    esp
  41119f:	mov    bh,BYTE PTR [ebx]
  4111a1:	cvtps2pi mm2,QWORD PTR [esi+0x12]
  4111a5:	mov    eax,0xa1c811d5
  4111aa:	fld    TBYTE PTR [ebp+0x52]
  4111ad:	sbb    edi,DWORD PTR [esi]
  4111af:	push   0x2e0daa21
  4111b4:	fwait
  4111b5:	repnz adc ch,BYTE PTR [ecx+esi*2+0x4c]
  4111ba:	(bad)  
  4111bb:	cmp    al,0x7a
  4111bd:	jae    0x41118e
  4111bf:	stc    
  4111c0:	call   0x802e5922
  4111c5:	out    dx,al
  4111c6:	lea    ebx,[edx]
  4111c8:	xchg   ah,dh
  4111ca:	dec    ebp
  4111cb:	cmp    dl,dl
  4111cd:	pop    eax
  4111ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111cf:	dec    ebx
  4111d0:	in     al,0xf9
  4111d2:	dec    ecx
  4111d3:	jge    0x411246
  4111d5:	xchg   esi,eax
  4111d7:	sub    DWORD PTR [esi],0xfffffff7
  4111da:	test   DWORD PTR [ebx+0x7b],eax
  4111dd:	xor    eax,0xdcfa26a6
  4111e2:	(bad)  [esi+0xd5d8e1]
  4111e8:	ins    BYTE PTR es:[edi],dx
  4111e9:	pop    ecx
  4111ea:	inc    esi
  4111eb:	mov    edx,0xd3cff111
  4111f0:	sbb    al,0x6a
  4111f2:	push   eax
  4111f3:	mov    DWORD PTR [ebx+0x7d],ecx
  4111f6:	mov    dh,0x92
  4111f8:	pop    esp
  4111f9:	repz dec edx
  4111fb:	test   DWORD PTR [ebp+eiz*4-0x59],0x90ce5e55
  411203:	jb     0x4111d2
  411205:	outs   dx,DWORD PTR ds:[esi]
  411206:	mov    esp,ebp
  411208:	daa    
  411209:	jno    0x41119a
  41120b:	dec    ecx
  41120c:	popf   
  41120d:	cmp    al,0x96
  41120f:	in     al,0x7b
  411211:	mov    ch,0xa6
  411213:	jmp    0x6e64:0xa33af04
  41121a:	ret    0x833a
  41121d:	call   0x79a8:0x7828e1e7
  411224:	jge    0x411268
  411226:	push   ss
  411227:	jmp    0xc08ec28c
  41122c:	fist   WORD PTR [ebx+0x29785dfa]
  411232:	jge    0x4111e0
  411234:	repz mov dl,0xfc
  411237:	cmp    BYTE PTR [esp+esi*1-0x2e],bh
  41123b:	adc    DWORD PTR [eax+edx*2],edx
  41123e:	add    al,0xd7
  411240:	jo     0x4112af
  411242:	or     DWORD PTR [edi-0x1f80e9ca],eax
  411248:	pop    ebp
  411249:	inc    esi
  41124a:	sub    dx,WORD PTR [edi+0xdf2b608]
  411251:	sbb    al,0xfb
  411253:	loope  0x411269
  411255:	nop
  411256:	jb     0x41121b
  411258:	adc    ax,0x6d5b
  41125c:	fisttp WORD PTR [eax]
  41125e:	pop    ds
  41125f:	daa    
  411260:	inc    esi
  411261:	push   edx
  411262:	xor    edi,esp
  411264:	jge    0x411233
  411266:	adc    DWORD PTR [ecx-0x150f9f6e],edx
  41126c:	inc    esp
  41126d:	adc    ebp,edx
  41126f:	cs mov dl,0x23
  411272:	popf   
  411273:	mov    ds:0x3626069c,al
  411278:	and    BYTE PTR [edi],0xec
  41127b:	(bad)  
  41127c:	and    edi,eax
  41127e:	and    al,0x7c
  411280:	test   bh,dl
  411282:	xor    ch,cl
  411284:	and    eax,0xc74c8e28
  411289:	pop    edi
  41128a:	jl     0x4112df
  41128c:	fidivr DWORD PTR [edi-0x49]
  41128f:	into   
  411290:	mov    ecx,0xdb57f690
  411295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411296:	push   ds
  411297:	enter  0x738c,0x2b
  41129b:	cld    
  41129c:	add    ah,BYTE PTR [edi+eiz*1]
  41129f:	das    
  4112a0:	mov    edx,0xff3fc3ad
  4112a5:	adc    eax,DWORD PTR [esi-0x571744e6]
  4112ab:	push   esp
  4112ac:	sar    BYTE PTR [ebx+0x1502ab4d],1
  4112b2:	in     al,dx
  4112b3:	imul   eax,DWORD PTR [ecx-0x4ddc4a4a],0x59dd6fd1
  4112bd:	ret    0x5270
  4112c0:	cmp    bh,BYTE PTR [ebp+0xde983c2]
  4112c6:	pop    ecx
  4112c7:	aam    0xc5
  4112c9:	sub    ebx,DWORD PTR [eax]
  4112cb:	shl    BYTE PTR [ebp+0x5a],cl
  4112ce:	inc    eax
  4112cf:	fwait
  4112d0:	add    BYTE PTR [edx+0x13fd4035],bh
  4112d6:	inc    ebp
  4112d7:	xor    DWORD PTR [edx-0x71],0x55e47c10
  4112de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112df:	fsubr  DWORD PTR [edx+eax*8]
  4112e2:	jmp    0x8d9c7804
  4112e7:	repz fist WORD PTR [ecx-0x45256a3]
  4112ee:	pushf  
  4112ef:	push   cs
  4112f0:	or     DWORD PTR [edx+0x12a1803c],ebp
  4112f6:	cdq    
  4112f7:	xchg   edi,eax
  4112f8:	pop    esi
  4112f9:	sub    ebp,DWORD PTR [ebx+0x5a391744]
  4112ff:	sbb    eax,0x6ef12fda
  411304:	out    dx,al
  411305:	pop    ecx
  411306:	aas    
  411307:	cmp    eax,0xad295f21
  41130c:	ret    
  41130d:	fidiv  WORD PTR [edi+0x3b]
  411310:	mov    ecx,0xc0601721
  411315:	sbb    al,BYTE PTR [esi]
  411317:	mov    ?,WORD PTR [eax]
  411319:	adc    DWORD PTR [edi+0x1eb52618],eax
  41131f:	xor    al,0x43
  411321:	cmp    al,0x0
  411323:	test   eax,0x8a9b756f
  411328:	pop    ds
  411329:	dec    ebx
  41132a:	sub    esi,DWORD PTR [eax]
  41132c:	jmp    0x9e20:0x45117fb6
  411333:	rol    BYTE PTR [edi-0x479a07c7],0x18
  41133a:	pop    edi
  41133b:	ret    0x78fa
  41133e:	sbb    eax,0xa4bb8700
  411343:	xor    edx,esp
  411345:	mov    al,0x77
  411347:	hlt    
  411348:	aaa    
  411349:	xor    BYTE PTR [ebp-0x489f75f9],dh
  41134f:	cmp    al,0x66
  411351:	jmp    0x411306
  411353:	mov    ebx,0x947a6480
  411358:	sbb    al,0x97
  41135a:	nop
  41135b:	jo     0x41136b
  41135d:	popa   
  41135e:	les    esp,FWORD PTR ds:0xecb09b9d
  411364:	sbb    edi,0x85306764
  41136a:	fwait
  41136b:	mov    bh,0x40
  41136d:	inc    ebp
  41136e:	mov    BYTE PTR [edx+0x419d1b01],bh
  411374:	in     eax,0x4b
  411376:	pushf  
  411377:	sbb    eax,0x561a950b
  41137c:	push   ds
  41137d:	jp     0x411332
  41137f:	dec    edi
  411380:	push   es
  411381:	mov    bl,0xd4
  411383:	mov    cl,0x3
  411385:	jge    0x4113d9
  411387:	retf   0x7e9b
  41138a:	mov    cl,0x14
  41138c:	or     DWORD PTR [edi],ecx
  41138e:	push   ss
  41138f:	push   edx
  411390:	jb     0x411372
  411392:	aas    
  411393:	mov    bl,0xdd
  411395:	and    bh,BYTE PTR [ebp-0x69]
  411398:	ficomp DWORD PTR [ebx-0x4cdd8fd]
  41139e:	cmc    
  41139f:	jl     0x411380
  4113a1:	loopne 0x4113c1
  4113a3:	and    ah,BYTE PTR [edi]
  4113a5:	inc    eax
  4113a6:	ret    
  4113a7:	and    ah,BYTE PTR [ebp+0x37]
  4113aa:	add    DWORD PTR [ebx-0x3b3a5db8],ebp
  4113b0:	jmp    0x8a732b07
  4113b5:	in     eax,0x97
  4113b7:	xchg   edi,eax
  4113b9:	repnz mov eax,DWORD PTR ds:0x4a27b6e4
  4113c0:	les    ecx,FWORD PTR [ebx]
  4113c2:	push   edi
  4113c3:	fldenv [edi+edi*2]
  4113c6:	or     al,0xda
  4113c8:	sti    
  4113c9:	out    0x22,al
  4113cb:	mov    esp,0x8aa754b3
  4113d0:	jle    0x4113b4
  4113d2:	mov    edi,0x4c13e43f
  4113d7:	or     ah,BYTE PTR [edx]
  4113d9:	xlat   BYTE PTR ds:[ebx]
  4113da:	cmp    DWORD PTR [edi-0x5805705d],esp
  4113e0:	mov    dl,0x3
  4113e2:	sbb    eax,0x5695dfba
  4113e7:	cld    
  4113e8:	test   DWORD PTR [esi],edi
  4113ea:	push   edi
  4113eb:	sar    DWORD PTR [esi+0x72c7033e],1
  4113f1:	xor    BYTE PTR [eax-0x4837c67e],bl
  4113f7:	jecxz  0x4113e9
  4113f9:	inc    esi
  4113fa:	inc    eax
  4113fb:	iret   
  4113fc:	xchg   esp,eax
  4113fd:	and    BYTE PTR [esi+eiz*2+0x12],bl
  411401:	adc    dh,BYTE PTR [bx-0x194]
  411406:	test   BYTE PTR [esi],bl
  411408:	rcr    BYTE PTR [esi+0x2c],1
  41140b:	sbb    al,0x2
  41140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140e:	imul   eax,DWORD PTR [edi-0x20af6aef],0xb088cefc
  411418:	(bad)  
  411419:	xchg   edi,eax
  41141a:	mov    al,ds:0x811023c0
  41141f:	dec    eax
  411420:	inc    ecx
  411421:	xor    BYTE PTR [edx+0x69],ch
  411424:	and    cl,BYTE PTR [ebp-0x2024dc5f]
  41142a:	retf   
  41142b:	mov    DWORD PTR [ebx-0x56],ebx
  41142e:	cmp    al,0xfe
  411430:	adc    BYTE PTR [esi+0x4d],dh
  411433:	bound  ecx,QWORD PTR [edx-0x62]
  411436:	dec    edx
  411437:	push   eax
  411438:	enter  0xb8e0,0x73
  41143c:	sahf   
  41143d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143e:	and    eax,0x46979418
  411443:	jle    0x411411
  411445:	lods   eax,DWORD PTR ds:[esi]
  411446:	in     eax,dx
  411447:	sub    al,0x1e
  411449:	push   ax
  41144b:	cvtdq2ps xmm0,XMMWORD PTR [si+0x7a]
  411450:	and    eax,0x864d9123
  411455:	ja     0x4114cc
  411457:	retf   0x1117
  41145a:	sub    ch,BYTE PTR [ecx+0x34f1d0cc]
  411460:	cwde   
  411461:	fdiv   DWORD PTR [eax]
  411463:	jle    0x411422
  411465:	add    BYTE PTR ds:0x82a5098f,0x1
  41146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146d:	dec    ecx
  41146e:	add    al,0x4a
  411470:	out    dx,al
  411471:	xlat   BYTE PTR ds:[ebx]
  411472:	in     eax,0x5f
  411474:	jnp    0x4114d8
  411476:	cmp    al,0x67
  411478:	cmp    al,0x77
  41147a:	or     bh,BYTE PTR [ecx-0x55c4c00f]
  411480:	enter  0x1fe9,0x11
  411484:	ss popa 
  411486:	inc    edx
  411487:	pop    ecx
  411488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148a:	cmp    BYTE PTR [esi+eiz*4],bl
  41148d:	inc    edx
  41148e:	push   ebp
  41148f:	xor    eax,esi
  411491:	xor    eax,0xe445e718
  411496:	test   BYTE PTR [ebp+0x30],bl
  411499:	iret   
  41149a:	scas   al,BYTE PTR es:[edi]
  41149b:	lods   eax,DWORD PTR ds:[esi]
  41149c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41149d:	sub    bh,BYTE PTR [edx-0x53a6d66d]
  4114a3:	jo     0x411518
  4114a5:	mov    esi,0xbfce3418
  4114aa:	mov    ch,0x44
  4114ac:	adc    cl,ah
  4114ae:	mov    ecx,0x5e41ba26
  4114b3:	adc    al,0xe7
  4114b5:	fisttp QWORD PTR [edx]
  4114b7:	xchg   edi,ecx
  4114b9:	test   DWORD PTR [ebx+ebx*2],ebp
  4114bc:	aas    
  4114bd:	mov    dh,0x7e
  4114bf:	call   0x6ca3061b
  4114c4:	in     al,dx
  4114c5:	cwde   
  4114c6:	dec    edx
  4114c7:	sub    al,0x30
  4114c9:	dec    esp
  4114ca:	and    DWORD PTR [eax+0x1e27f342],ebp
  4114d0:	in     al,0xf7
  4114d2:	fs sti 
  4114d4:	out    dx,al
  4114d5:	sub    ecx,DWORD PTR [edi-0x5344d3b7]
  4114db:	lahf   
  4114dc:	jecxz  0x4114aa
  4114de:	mov    ds:0x5f97f22c,al
  4114e3:	mov    DWORD PTR ds:0x337bd433,esi
  4114e9:	mov    bl,0xb1
  4114eb:	mov    al,ds:0x368bdb9f
  4114f0:	xchg   esi,eax
  4114f1:	jle    0x411534
  4114f3:	xor    eax,0x52ff9a45
  4114f8:	sbb    cl,BYTE PTR [esi+0x2f6fb241]
  4114fe:	int3   
  4114ff:	std    
  411500:	in     al,0xdc
  411502:	fild   QWORD PTR [ebp+esi*4+0x75]
  411506:	mov    ch,0xa1
  411508:	ins    DWORD PTR es:[edi],dx
  411509:	lods   eax,DWORD PTR ds:[esi]
  41150a:	xor    BYTE PTR [edx+0x53f642a0],dh
  411510:	add    al,0xcc
  411512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411513:	jnp    0x411583
  411515:	or     DWORD PTR [ebx],ecx
  411517:	je     0x4114b7
  411519:	fs jne 0x4114e6
  41151c:	sar    BYTE PTR [eax+0x1d],0x1e
  411520:	mov    ah,BYTE PTR [edi-0x5fea05c6]
  411526:	les    ecx,FWORD PTR [ebp+0x12]
  411529:	jne    0x411552
  41152b:	add    al,0x72
  41152d:	test   al,0x8a
  41152f:	sbb    al,0x4d
  411531:	mov    bh,0xc
  411533:	push   edi
  411534:	popa   
  411535:	xor    edi,esp
  411537:	scas   eax,DWORD PTR es:[edi]
  411538:	fimul  DWORD PTR [ecx-0x79]
  41153b:	and    DWORD PTR [eax+0x5531a79c],0x7451ef8c
  411545:	xchg   ebp,eax
  411546:	js     0x41151d
  411548:	adc    al,0x8c
  41154a:	and    esp,DWORD PTR [ecx+edi*8+0x2c]
  41154e:	xchg   ebp,eax
  41154f:	jbe    0x411552
  411551:	mov    edi,0x3dbaa51a
  411556:	cld    
  411557:	or     edx,DWORD PTR [edx-0x7a]
  41155a:	adc    ebp,0x646b7808
  411560:	sahf   
  411561:	scas   al,BYTE PTR es:[edi]
  411562:	in     eax,0x5b
  411564:	sar    bl,cl
  411566:	dec    ebx
  411567:	je     0x411593
  411569:	ret    
  41156a:	inc    edx
  41156b:	push   eax
  41156c:	(bad)  [ebx+0x1799e7f5]
  411572:	pop    ecx
  411573:	dec    edx
  411574:	imul   ebp,DWORD PTR [ecx+0x1e7f7cf8],0xffffffcf
  41157b:	into   
  41157c:	sbb    BYTE PTR [edx+eiz*2+0x7b],bl
  411580:	fcom   QWORD PTR [ebp-0x48]
  411583:	pop    ebx
  411584:	mov    edx,0x768cbcdc
  411589:	cli    
  41158a:	sbb    al,0xc
  41158c:	div    DWORD PTR [edi]
  41158e:	fdivr  DWORD PTR [edx-0x1ec84c6b]
  411594:	or     ebx,edx
  411596:	add    al,0xa9
  411598:	lds    esp,FWORD PTR [ecx-0x30]
  41159b:	mov    ebp,0xb2c4bf6
  4115a0:	fs stos BYTE PTR es:[edi],al
  4115a2:	ret    
  4115a3:	xchg   edx,eax
  4115a4:	mov    edi,0x3a2550a6
  4115a9:	fdivr  QWORD PTR [edi-0x6ce48071]
  4115af:	mov    eax,ds:0xcc372108
  4115b4:	imul   esp,esi,0xe0e1cbdc
  4115ba:	ss push 0x29
  4115bd:	pop    ss
  4115be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115bf:	mov    ds:0xd6b31f71,al
  4115c4:	cli    
  4115c5:	imul   edx,edx,0xa2bc1b46
  4115cb:	xlat   BYTE PTR ds:[ebx]
  4115cc:	sbb    al,0x7a
  4115ce:	neg    DWORD PTR ds:0x7602e4c1
  4115d4:	dec    ebx
  4115d5:	test   eax,0xb6f40e3
  4115da:	ja     0x411626
  4115dc:	mov    eax,ds:0xdb233cb2
  4115e1:	rcl    DWORD PTR [ebx-0x5416fdcd],0x6e
  4115e8:	mov    al,0xa9
  4115eb:	cmp    BYTE PTR [ebx+0xe898f44],0x1b
  4115f2:	add    bl,BYTE PTR [esp+edi*1+0x4a]
  4115f6:	xchg   esp,eax
  4115f7:	xchg   esi,eax
  4115f8:	push   cs
  4115f9:	jmp    0xea77a414
  4115fe:	push   ebp
  4115ff:	jbe    0x4115ae
  411601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411602:	popf   
  411603:	jecxz  0x4115fe
  411605:	(bad)  
  411606:	fs je  0x411641
  411609:	push   ebx
  41160a:	lds    eax,FWORD PTR [edx+0x4aa03bd]
  411610:	sbb    ah,bh
  411612:	iret   
  411613:	sti    
  411614:	retf   
  411615:	push   edi
  411616:	mov    ebx,0xb62f8060
  41161b:	mov    esi,0x11417784
  411620:	mov    edi,0xb025f466
  411625:	jmp    0xcb78:0xe2c54a6a
  41162c:	mov    eax,ds:0xe03eb85
  411631:	cwde   
  411632:	test   DWORD PTR [ebp-0x2aaff0ef],edi
  411638:	or     eax,0x878df6eb
  41163d:	inc    DWORD PTR [ecx+0x40]
  411640:	sub    BYTE PTR [edx+0x4109556b],cl
  411646:	mov    ah,0xe4
  411648:	lock test DWORD PTR [esi+eax*8],edi
  41164c:	pusha  
  41164d:	adc    DWORD PTR ds:0x2643a2e7,esi
  411653:	into   
  411654:	stc    
  411655:	mov    eax,ds:0x978aabf2
  41165a:	cs mov al,0x1b
  41165d:	sti    
  41165e:	mov    ds:0x625d11ff,eax
  411663:	leave  
  411664:	jne    0x4116c6
  411666:	adc    eax,0xc4e6a1b5
  41166b:	scas   eax,DWORD PTR es:[edi]
  41166c:	jmp    0x6859708b
  411671:	jmp    0x4116eb
  411673:	lock jo 0x411653
  411676:	lock mov dl,0xd
  411679:	aad    0xff
  41167b:	das    
  41167c:	pusha  
  41167d:	mov    esp,0xe3e0837d
  411682:	lock and eax,0x9502a5bc
  411688:	dec    ebx
  411689:	in     eax,0xed
  41168b:	push   0xfffffff3
  41168d:	test   al,0x1d
  41168f:	lahf   
  411690:	xor    eax,0xef248b1c
  411695:	push   eax
  411696:	cmp    ebp,DWORD PTR [esi]
  411698:	data16 jae 0x41166c
  41169b:	cld    
  41169c:	ror    esi,1
  41169e:	sbb    DWORD PTR [ebx],ecx
  4116a0:	ror    esi,cl
  4116a2:	in     al,0xb3
  4116a4:	adc    eax,0x37cdbc34
  4116a9:	test   DWORD PTR ds:0x214e85fa,0xdaa2de4f
  4116b3:	jnp    0x4116c9
  4116b5:	inc    edx
  4116b6:	cmp    eax,0x6b3dea96
  4116bc:	rol    DWORD PTR [edx],1
  4116be:	rcr    edx,1
  4116c0:	sbb    al,0x93
  4116c2:	cwde   
  4116c3:	cmc    
  4116c4:	jno    0x411649
  4116c6:	adc    BYTE PTR [eax],dl
  4116c8:	cmp    ebx,esi
  4116ca:	test   eax,0xdd5d8d8
  4116cf:	mov    dh,0x3
  4116d1:	jno    0x41171d
  4116d3:	and    dh,BYTE PTR [ebx+0x70]
  4116d6:	dec    edx
  4116d7:	ds popf 
  4116d9:	outs   dx,BYTE PTR ds:[esi]
  4116da:	test   DWORD PTR [esi+edx*2-0x2a859063],esi
  4116e1:	inc    esi
  4116e2:	mov    ch,0x68
  4116e4:	lods   eax,DWORD PTR ds:[esi]
  4116e5:	(bad)  
  4116e6:	cmove  ebp,ebx
  4116e9:	adc    bl,dh
  4116eb:	ss repz jb 0x4116ee
  4116ef:	bound  ebp,QWORD PTR [edi]
  4116f1:	lock add dh,bl
  4116f4:	pop    esi
  4116f5:	scas   eax,DWORD PTR es:[edi]
  4116f6:	(bad)  
  4116f7:	sar    cl,cl
  4116f9:	mov    ch,cl
  4116fb:	jg     0x411761
  4116fd:	adc    cl,0xc9
  411700:	popa   
  411701:	pop    ebp
  411702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411703:	popa   
  411704:	add    DWORD PTR [edi],ebp
  411706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411707:	outs   dx,DWORD PTR ds:[esi]
  411708:	ret    
  411709:	add    dl,BYTE PTR [edx]
  41170b:	xor    ecx,DWORD PTR ds:0x6106508d
  411711:	dec    ebp
  411712:	add    BYTE PTR [edx],0x43
  411715:	outs   dx,BYTE PTR ds:[esi]
  411716:	in     eax,0xbe
  411718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411719:	pop    ecx
  41171a:	add    al,0x93
  41171c:	cmp    bh,al
  41171e:	sbb    BYTE PTR [eax-0x46],0x48
  411722:	outs   dx,DWORD PTR ds:[esi]
  411723:	mov    ebx,ebx
  411725:	into   
  411726:	pop    esi
  411727:	jmp    0xd9f9:0xa45814e3
  41172e:	inc    edx
  41172f:	cmp    ebp,DWORD PTR [ebx+eiz*1-0x11]
  411733:	inc    eax
  411734:	ficomp DWORD PTR [eax+0x38]
  411737:	(bad)  
  411738:	aas    
  411739:	mov    al,BYTE PTR [edi-0x55136658]
  41173f:	sub    al,BYTE PTR [esi+0x5dbaf124]
  411745:	add    ebx,DWORD PTR ds:0x482918cc
  41174b:	pusha  
  41174c:	in     al,0x39
  41174e:	inc    eax
  41174f:	xor    eax,0xf856b8b0
  411754:	sub    al,0x6e
  411756:	test   al,0xb6
  411758:	arpl   WORD PTR [edx+edi*1],sp
  41175b:	push   ss
  41175c:	and    DWORD PTR [edi-0x4d],edx
  41175f:	adc    DWORD PTR [ebp-0x79],ebx
  411762:	jp     0x411732
  411764:	inc    ebx
  411765:	inc    edx
  411766:	lahf   
  411767:	in     eax,dx
  411768:	outs   dx,DWORD PTR ds:[esi]
  411769:	xor    BYTE PTR [edi+0x40711e4b],bl
  41176f:	add    eax,0x3e78e67b
  411774:	sub    DWORD PTR [esi+ebx*8+0x41],ecx
  411778:	sub    BYTE PTR cs:[eax+edi*1+0x1368eb0a],ch
  411780:	test   BYTE PTR [edi+0x77c37bf3],bl
  411786:	shl    bh,1
  411788:	sub    ecx,esp
  41178a:	push   cs
  41178b:	iret   
  41178c:	and    al,0x35
  41178e:	out    0xff,eax
  411790:	int    0x6c
  411792:	retf   0x6091
  411795:	cld    
  411796:	(bad)  
  411798:	cmp    edx,DWORD PTR [ebp+0x64cf0860]
  41179e:	mov    ecx,0xca70eb8d
  4117a3:	stos   BYTE PTR es:[edi],al
  4117a4:	push   0xc9a69db0
  4117a9:	cmp    eax,0x46a908e6
  4117ae:	inc    eax
  4117af:	enter  0xde1c,0xe6
  4117b3:	(bad)  
  4117b4:	add    al,0x90
  4117b6:	jecxz  0x411821
  4117b8:	xchg   ebx,eax
  4117b9:	dec    ebx
  4117ba:	fisttp WORD PTR [ecx-0x6]
  4117bd:	gs nop
  4117bf:	rsm    
  4117c1:	cli    
  4117c2:	add    eax,0x40ef51ec
  4117c7:	xchg   edi,eax
  4117c8:	jle    0x411814
  4117ca:	or     bl,BYTE PTR [esi+0x58]
  4117cd:	xchg   ecx,eax
  4117ce:	sbb    esi,ecx
  4117d0:	loope  0x411770
  4117d2:	div    BYTE PTR [eax+0x31]
  4117d5:	mov    eax,0x25b43724
  4117da:	sti    
  4117db:	sub    dh,BYTE PTR [ecx]
  4117dd:	pop    esp
  4117de:	sub    al,0xe1
  4117e0:	aad    0xff
  4117e2:	push   esi
  4117e3:	pop    ebx
  4117e4:	xchg   ebx,eax
  4117e5:	les    esi,FWORD PTR [ebp+0x3d]
  4117e8:	sub    ch,ah
  4117ea:	fcomip st,st(0)
  4117ec:	inc    edi
  4117ed:	mov    ah,0x2b
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	jae    0x41183e
  41186e:	adc    edx,DWORD PTR [ecx-0x18]
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	(bad)  
  411879:	jmp    0xf87d:0xe541de58
  411880:	int3   
  411881:	push   ebx
  411882:	in     al,0x41
  411884:	in     al,0x34
  411886:	cs dec ebp
  411888:	jle    0x411898
  41188a:	es push eax
  41188c:	fwait
  41188d:	mov    ah,0xc4
  41188f:	je     0x411906
  411891:	sbb    eax,0xe16bc356
  411896:	add    BYTE PTR [ebx+0x2a517b29],al
  41189c:	sar    BYTE PTR [eax+0x246678c7],0x7e
  4118a3:	jmp    DWORD PTR [ebp+0x5d217f58]
  4118a9:	shl    BYTE PTR [ecx],cl
  4118ab:	dec    ebx
  4118ac:	jge    0x41191f
  4118ae:	push   esp
  4118af:	sbb    eax,0x939b3786
  4118b4:	add    bl,BYTE PTR [ebp-0x15]
  4118b7:	jae    0x4118df
  4118b9:	adc    edx,DWORD PTR [ecx-0x62]
  4118bc:	sub    BYTE PTR [edx+0x4fcad608],dh
  4118c2:	mov    dl,0xe6
  4118c4:	test   eax,0xeccd3297
  4118c9:	cmc    
  4118ca:	mov    al,ds:0xbc2401cb
  4118cf:	call   0x5cfcfea6
  4118d4:	(bad)  
  4118d5:	(bad)  
  4118d6:	popf   
  4118d7:	push   0x67
  4118d9:	sbb    al,0x91
  4118db:	or     ah,BYTE PTR ds:0x105efd00
  4118e1:	ret    0xa470
  4118e4:	xor    ecx,0x48d794fb
  4118ea:	push   ds
  4118eb:	loope  0x41188f
  4118ed:	cmp    BYTE PTR [ecx+eax*2-0x323cc248],cl
  4118f4:	das    
  4118f5:	int    0x6e
  4118f7:	fmul   DWORD PTR [ebp+0x6d5b90d6]
  4118fd:	in     eax,dx
  4118fe:	xor    eax,0x9fa98a06
  411903:	xchg   ebx,eax
  411904:	mov    dl,0x7c
  411906:	add    eax,0x6d2d8bb
  41190b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190c:	scas   eax,DWORD PTR es:[edi]
  41190d:	add    al,0xb4
  41190f:	and    edx,esp
  411911:	stos   BYTE PTR es:[edi],al
  411912:	pop    edi
  411913:	ins    DWORD PTR es:[edi],dx
  411914:	push   es
  411915:	mov    DWORD PTR [esp+ecx*2],esp
  411918:	mov    fs,WORD PTR [edx+0x5fca37f8]
  41191e:	in     al,0x73
  411920:	je     0x4118bd
  411922:	jbe    0x4118b2
  411924:	shr    BYTE PTR [ecx],0x97
  411927:	popa   
  411928:	inc    ebx
  411929:	jmp    0x41199d
  41192b:	test   BYTE PTR [ecx-0x2d0e562c],ch
  411931:	mov    ecx,0x60887282
  411936:	jmp    0xfe96508e
  41193b:	out    0xa,eax
  41193d:	dec    edx
  41193e:	in     eax,dx
  41193f:	test   eax,0xc4a7919c
  411944:	popa   
  411945:	shl    al,1
  411947:	dec    esp
  411948:	jmp    0x813c6665
  41194d:	push   ax
  41194f:	fst    DWORD PTR [ecx+esi*1-0x53c774bc]
  411956:	inc    ebp
  411957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411958:	push   esi
  411959:	xchg   edx,eax
  41195a:	push   ebx
  41195b:	or     esi,0x53dac461
  411961:	or     al,0x43
  411963:	icebp  
  411964:	das    
  411965:	push   eax
  411966:	hlt    
  411967:	je     0x411986
  411969:	inc    eax
  41196a:	and    al,0xc0
  41196c:	cmp    DWORD PTR [edx],edx
  41196e:	dec    edi
  41196f:	jb     0x41190f
  411971:	mov    eax,0x13f9857b
  411976:	int    0x1d
  411978:	in     al,dx
  411979:	call   0x4d797f94
  41197e:	jno    0x411958
  411980:	daa    
  411981:	or     DWORD PTR [eax+0x48],ebx
  411984:	add    eax,0x2ce55fc4
  411989:	imul   edx,DWORD PTR [edi],0x7a
  41198c:	lea    esi,[ebx]
  41198e:	sahf   
  41198f:	ret    0x6e05
  411992:	outs   dx,DWORD PTR ds:[esi]
  411993:	sbb    ebp,DWORD PTR [eax+eax*2]
  411996:	add    eax,0xda919d07
  41199b:	xchg   ecx,eax
  41199c:	comiss xmm1,DWORD PTR [edx]
  41199f:	mov    ds:0xe4c6b56d,al
  4119a4:	add    esi,esi
  4119a6:	cmp    ecx,DWORD PTR [edx-0x7c61ae8e]
  4119ac:	call   0x286c:0x2b99b5ba
  4119b3:	mov    ?,esp
  4119b5:	adc    al,0x76
  4119b7:	bound  edx,QWORD PTR [edx+0x74]
  4119ba:	js     0x41195f
  4119bc:	pop    esi
  4119bd:	cdq    
  4119be:	sbb    DWORD PTR [ecx],ebp
  4119c0:	je     0x4119b9
  4119c2:	loopne 0x411989
  4119c4:	xchg   BYTE PTR [eax+ebx*4],bh
  4119c7:	rcr    DWORD PTR [edi],cl
  4119c9:	jg     0x4119c4
  4119cb:	test   al,0x38
  4119cd:	ins    BYTE PTR es:[edi],dx
  4119ce:	and    DWORD PTR [eax-0x58],esp
  4119d1:	adc    al,bh
  4119d3:	mov    al,ds:0xdc460009
  4119d8:	cmp    eax,0x3f67faea
  4119dd:	imul   edi,DWORD PTR [ecx],0x8b8dfd52
  4119e3:	inc    ecx
  4119e4:	cmp    BYTE PTR [edi],ah
  4119e6:	je     0x4119bc
  4119e8:	rcr    DWORD PTR [edx+eax*1-0x57b3eb0],1
  4119ef:	pop    es
  4119f0:	sahf   
  4119f1:	out    dx,al
  4119f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f3:	push   cs
  4119f4:	test   BYTE PTR [ebx+0x1d],dl
  4119f7:	inc    ebx
  4119f8:	inc    BYTE PTR [edi+edi*8-0x3e]
  4119fc:	sbb    DWORD PTR [ebp+0x1e98260a],edx
  411a02:	jle    0x411a66
  411a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a05:	loop   0x411a1f
  411a07:	inc    eax
  411a08:	ss es dec esp
  411a0b:	call   0x6f8d:0xacaa80a5
  411a12:	hlt    
  411a13:	cs or  ecx,esi
  411a16:	fst    QWORD PTR ds:[eax-0x49]
  411a1a:	(bad)  [edx+0x4ad7c069]
  411a20:	inc    ebx
  411a21:	retf   
  411a22:	push   es
  411a23:	sub    eax,0xe96203af
  411a28:	fsubr  DWORD PTR [ebx-0x51]
  411a2b:	xor    DWORD PTR [eax-0x44],ecx
  411a2e:	popf   
  411a2f:	dec    esi
  411a30:	mov    ds:0x9033418e,al
  411a35:	out    0xa3,eax
  411a37:	pusha  
  411a38:	mov    bl,0x14
  411a3a:	sbb    dl,BYTE PTR [edx+0x2c]
  411a3d:	jge    0x411a60
  411a3f:	loope  0x411a45
  411a41:	ficom  DWORD PTR [ebx+0x3f2fed8a]
  411a47:	pop    ebx
  411a48:	daa    
  411a49:	add    dl,BYTE PTR [esi+eiz*1-0x42]
  411a4d:	fistp  QWORD PTR [esi]
  411a50:	loop   0x411a34
  411a52:	mov    ds:0xdcda345a,eax
  411a57:	cld    
  411a58:	lods   eax,DWORD PTR ds:[esi]
  411a59:	out    0xcb,al
  411a5b:	ins    BYTE PTR es:[edi],dx
  411a5c:	or     eax,0xce4edd5f
  411a61:	dec    eax
  411a62:	xchg   ecx,eax
  411a63:	sti    
  411a64:	ret    
  411a65:	sbb    esi,eax
  411a67:	jg     0x411adc
  411a69:	or     BYTE PTR [ecx-0x7],dl
  411a6c:	les    esp,FWORD PTR [edx+0x4d8f13a5]
  411a72:	jbe    0x411ac6
  411a74:	jp     0x411a8a
  411a76:	std    
  411a77:	pop    ebx
  411a79:	pop    es
  411a7a:	inc    eax
  411a7b:	std    
  411a7c:	int    0xd6
  411a7e:	mov    bh,0x94
  411a80:	inc    edi
  411a81:	mov    dl,0xa1
  411a83:	out    dx,eax
  411a84:	fdiv   st(3),st
  411a86:	loope  0x411a55
  411a88:	not    edx
  411a8a:	and    eax,DWORD PTR [edi+0x40]
  411a8d:	(bad)  
  411a8e:	daa    
  411a8f:	jb     0x411a9a
  411a91:	add    ah,al
  411a93:	arpl   WORD PTR [edi],cx
  411a95:	repz ds dec edx
  411a98:	scas   al,BYTE PTR es:[edi]
  411a99:	enter  0x1fb9,0x76
  411a9d:	xchg   BYTE PTR cs:[ecx+eax*8+0x9d34230],ah
  411aa5:	xchg   ebp,eax
  411aa7:	pop    esi
  411aa8:	mov    ch,bh
  411aaa:	xor    DWORD PTR [ebx+0x5e],edx
  411aad:	pop    ebp
  411aae:	dec    esp
  411aaf:	xchg   esi,eax
  411ab0:	and    al,0xeb
  411ab2:	add    al,0x20
  411ab4:	mov    BYTE PTR [edx],ch
  411ab6:	or     BYTE PTR [ecx+0x4fe54ae4],0x1a
  411abd:	sbb    DWORD PTR [esi-0x18fbcf4a],esi
  411ac3:	mov    edi,0x9e788698
  411ac8:	mov    bl,0x8
  411aca:	lods   eax,DWORD PTR ds:[esi]
  411acb:	rcr    DWORD PTR [edi+0x73a52cac],1
  411ad1:	dec    esp
  411ad2:	sbb    al,al
  411ad4:	fld    QWORD PTR [ecx]
  411ad6:	nop
  411ad7:	mov    ch,0x55
  411ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ada:	out    0x6,eax
  411adc:	or     BYTE PTR [edx-0x57],ah
  411adf:	div    BYTE PTR [edx-0x7ac1f3d0]
  411ae5:	dec    edx
  411ae6:	lea    eax,[esi-0x21]
  411ae9:	pusha  
  411aea:	push   ebp
  411aeb:	hlt    
  411aec:	adc    bl,al
  411aee:	gs sub ah,bl
  411af1:	or     BYTE PTR [edi],cl
  411af3:	sub    DWORD PTR [eax-0x7e],eax
  411af6:	mov    ebp,0x71f270fb
  411afb:	ds scas al,BYTE PTR es:[edi]
  411afd:	daa    
  411afe:	xor    BYTE PTR [edx],dh
  411b00:	xor    DWORD PTR [esp+edx*8+0x34],esi
  411b04:	lods   al,BYTE PTR ds:[esi]
  411b05:	ins    BYTE PTR es:[edi],dx
  411b06:	mov    ebx,DWORD PTR [bx-0x5f2d]
  411b0b:	cmp    ebx,DWORD PTR [esi]
  411b0d:	mov    ds:0xbaff1800,eax
  411b12:	jmp    0x8c945d89
  411b17:	fcmovnu st,st(2)
  411b19:	xor    DWORD PTR [ebx],eax
  411b1b:	and    edx,DWORD PTR [eax]
  411b1d:	(bad)  
  411b1e:	dec    edx
  411b1f:	std    
  411b20:	or     ah,0xa
  411b23:	sbb    DWORD PTR [edx-0x69],edx
  411b26:	sub    ah,BYTE PTR [ecx+0x63]
  411b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b2a:	push   ss
  411b2b:	and    bl,BYTE PTR [ebx+0x6d]
  411b2e:	fnstcw WORD PTR [edx-0x2b5c3824]
  411b34:	pop    esp
  411b35:	dec    esp
  411b36:	lahf   
  411b37:	test   DWORD PTR [esi],esp
  411b39:	push   0xffffffdf
  411b3b:	out    dx,eax
  411b3c:	or     ah,bh
  411b3e:	dec    ecx
  411b3f:	loopne 0x411b84
  411b41:	sbb    bl,BYTE PTR [edx+eax*8+0x52e42b1f]
  411b48:	or     BYTE PTR [eax],0x92
  411b4b:	pop    es
  411b4c:	cwde   
  411b4d:	mov    ebx,0x36c4ef55
  411b52:	imul   ebx,DWORD PTR [esi],0xffffffad
  411b55:	or     eax,0x36bd842f
  411b5a:	lods   eax,DWORD PTR ds:[esi]
  411b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5c:	xchg   esp,eax
  411b5d:	imul   eax,esi,0xffffff8c
  411b60:	int3   
  411b61:	adc    al,0x7d
  411b63:	pop    ecx
  411b65:	out    dx,eax
  411b66:	push   ecx
  411b67:	sub    eax,DWORD PTR [ebx]
  411b69:	mov    ?,WORD PTR [edx+eiz*2]
  411b6c:	sub    BYTE PTR [esi+0x2d477a71],0xd0
  411b73:	cdq    
  411b74:	call   DWORD PTR [edi-0x1eab5464]
  411b7a:	mov    dh,0x9b
  411b7c:	mov    BYTE PTR [edi+0x73],0xa8
  411b80:	inc    edx
  411b81:	fcomp  DWORD PTR [ebx+edi*1-0x6c]
  411b85:	mov    esi,0xd400c24e
  411b8a:	sbb    DWORD PTR [ebx+0x74],edi
  411b8d:	mov    dh,0x37
  411b8f:	shl    ecx,cl
  411b91:	clc    
  411b92:	icebp  
  411b93:	jb     0x411b6b
  411b95:	push   ebp
  411b96:	sub    ecx,DWORD PTR [ecx]
  411b98:	inc    edi
  411b99:	(bad)  
  411b9a:	addr16 push esp
  411b9c:	xchg   ebx,eax
  411b9d:	(bad)  
  411b9e:	fsubr  DWORD PTR [esi-0x64]
  411ba1:	test   eax,0xd64db62d
  411ba6:	into   
  411ba7:	mov    al,ch
  411ba9:	(bad)  
  411baa:	out    0x36,eax
  411bac:	out    0x46,eax
  411bae:	(bad)  
  411baf:	pop    ss
  411bb0:	shr    BYTE PTR [edi],cl
  411bb2:	sub    bl,BYTE PTR [edi+0x8]
  411bb5:	cli    
  411bb6:	fs jmp 0xb3ac:0x5114c1e5
  411bbe:	dec    esp
  411bbf:	adc    dh,ah
  411bc1:	daa    
  411bc2:	mov    ds:0xcfec08e9,al
  411bc7:	ins    DWORD PTR es:[edi],dx
  411bc8:	jnp    0x411c38
  411bca:	ss jb  0x411b98
  411bcd:	call   FWORD PTR [esi+0x69a7b259]
  411bd3:	call   0xc38e1980
  411bd8:	mov    bh,0x1e
  411bda:	ja     0x411b7f
  411bdc:	dec    ebp
  411bdd:	sbb    cl,BYTE PTR [edx+edi*2]
  411be0:	sub    ebx,DWORD PTR [eax]
  411be2:	dec    esi
  411be3:	(bad)  
  411be4:	not    DWORD PTR [ebx+edi*2-0x3]
  411be8:	or     esp,DWORD PTR [ecx+0x4179ce5a]
  411bee:	pop    esp
  411bef:	add    DWORD PTR [esi-0x15],ebp
  411bf2:	sub    al,0x61
  411bf4:	sti    
  411bf5:	jge    0x411c21
  411bf7:	mov    eax,DWORD PTR [ebx+0x69]
  411bfa:	fiadd  WORD PTR [esi]
  411bfc:	or     edi,DWORD PTR [edx-0x4]
  411bff:	push   eax
  411c00:	imul   esi,DWORD PTR [esi+0x1],0x2a
  411c04:	aas    
  411c05:	imul   edi,DWORD PTR [ebx+eiz*8+0x4d],0xcfea61d9
  411c0d:	clc    
  411c0e:	xchg   ebx,eax
  411c0f:	iret   
  411c10:	jns    0x411c6e
  411c12:	sub    bl,BYTE PTR [ecx]
  411c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c15:	sub    ecx,DWORD PTR [edi-0x490a72ef]
  411c1b:	fmul   QWORD PTR [eax-0x73]
  411c1e:	add    al,0x62
  411c20:	pop    ebx
  411c21:	push   edx
  411c22:	push   ds
  411c23:	or     eax,0x8d8debaf
  411c28:	fcom   DWORD PTR [edi]
  411c2a:	mov    al,ds:0xaa753e8
  411c2f:	add    BYTE PTR [esi+0x77],ah
  411c32:	sbb    cl,dh
  411c34:	xor    ebx,eax
  411c36:	pushf  
  411c37:	stc    
  411c38:	cwde   
  411c39:	mov    ds:0x6c3f086f,eax
  411c3e:	mov    es,WORD PTR [esp+eiz*4]
  411c41:	aas    
  411c42:	in     al,dx
  411c43:	int3   
  411c44:	sub    al,0xe5
  411c46:	retf   0x18b
  411c49:	push   0xffffffd2
  411c4b:	in     al,0x2f
  411c4d:	and    al,0xda
  411c4f:	push   esi
  411c50:	fisubr WORD PTR fs:[esi+edi*8+0x40]
  411c55:	sub    edx,DWORD PTR [edx+0x37613a5b]
  411c5b:	rol    DWORD PTR [esi-0x1ab7ea83],0xa
  411c62:	ss xor ah,dl
  411c65:	mov    cl,dh
  411c67:	jl     0x411c63
  411c69:	gs sbb eax,0x9be67a95
  411c6f:	in     al,0x69
  411c71:	mov    ebp,0x4c5c5bde
  411c76:	jle    0x411cdb
  411c78:	and    ecx,eax
  411c7a:	xchg   edi,eax
  411c7b:	fstp   TBYTE PTR [ebp-0x6]
  411c7e:	mov    BYTE PTR [ecx-0x3],bh
  411c81:	jae    0x411cfb
  411c83:	dec    ebx
  411c84:	rcl    DWORD PTR [ecx+0x1423e4a2],0x9
  411c8b:	mov    ebp,0x66935550
  411c90:	xchg   edi,eax
  411c91:	or     BYTE PTR [edx-0x70],bl
  411c94:	push   ss
  411c95:	adc    ebx,ecx
  411c97:	add    esp,esp
  411c99:	or     DWORD PTR [ebx],edx
  411c9b:	adc    bl,ah
  411c9d:	jno    0x411c43
  411c9f:	jg     0x411cc7
  411ca1:	fstp   QWORD PTR [esi]
  411ca3:	pop    edx
  411ca4:	out    0x60,eax
  411ca6:	sub    eax,DWORD PTR [edi+0x447aa2fa]
  411cac:	sbb    BYTE PTR [ebp-0x62b5bcfe],dh
  411cb2:	dec    edx
  411cb3:	xchg   BYTE PTR cs:[esp+eiz*4-0x53],dh
  411cb8:	mov    al,0xee
  411cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbb:	jno    0x411cce
  411cbd:	xor    al,0x36
  411cbf:	mov    esi,0xe3a7a503
  411cc4:	aam    0x91
  411cc6:	dec    eax
  411cc7:	retf   
  411cc8:	adc    ebp,eax
  411cca:	push   0xffffffac
  411ccc:	ror    BYTE PTR [eax],cl
  411cce:	cmc    
  411ccf:	das    
  411cd0:	enter  0x2fb0,0x19
  411cd4:	sbb    al,BYTE PTR [eax-0x7a07bf4c]
  411cda:	or     eax,ebp
  411cdc:	stos   DWORD PTR es:[edi],eax
  411cdd:	repnz aad 0x60
  411ce0:	mov    ecx,DWORD PTR gs:0xaa32587d
  411ce7:	pop    eax
  411ce8:	mov    ch,ch
  411cea:	leave  
  411ceb:	out    0x5,eax
  411ced:	out    0x6c,eax
  411cef:	dec    esi
  411cf0:	ds mov esp,0x5511647a
  411cf6:	jo     0x411cc0
  411cf8:	add    al,0x82
  411cfa:	outs   dx,DWORD PTR ds:[esi]
  411cfb:	mov    esp,0x33512373
  411d00:	cmp    DWORD PTR [ecx-0x4a7baed2],edi
  411d06:	fcomp  QWORD PTR [ebx+0x7c9ad858]
  411d0c:	push   0x6c
  411d0e:	dec    ecx
  411d0f:	xchg   DWORD PTR [ebp-0x52],ebp
  411d12:	adc    cl,ah
  411d14:	cli    
  411d15:	test   DWORD PTR [ebp+0x2e],0x900a3a52
  411d1c:	cmp    al,0x8b
  411d1e:	push   es
  411d1f:	xchg   ecx,eax
  411d20:	ds loop 0x411d40
  411d23:	fisub  WORD PTR [edx+edi*4-0x762fbd88]
  411d2a:	or     BYTE PTR [esi+0x4deffa6a],0xd5
  411d31:	pop    ebp
  411d32:	xchg   DWORD PTR [esi-0x346c9534],esi
  411d38:	rcl    ch,cl
  411d3a:	add    eax,0x88ff19a4
  411d3f:	add    edi,edx
  411d41:	xlat   BYTE PTR ds:[ebx]
  411d42:	push   cs
  411d43:	jne    0x411d30
  411d45:	xor    al,0x45
  411d47:	std    
  411d48:	call   0x910e:0x6421f1cb
  411d4f:	add    al,0xfe
  411d51:	cmp    edi,DWORD PTR [edx+0x482edeee]
  411d57:	xchg   esp,eax
  411d58:	fsubp  st(4),st
  411d5a:	imul   esi,DWORD PTR [esi+ebp*2+0x61],0x13a7b66e
  411d62:	mov    DWORD PTR [edx-0x7d],esi
  411d65:	push   ss
  411d66:	pop    esi
  411d67:	and    ah,ch
  411d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6a:	mov    al,0x9b
  411d6c:	cmc    
  411d6d:	push   edi
  411d6e:	ins    DWORD PTR es:[edi],dx
  411d6f:	adc    BYTE PTR [esi-0x6f],0x9c
  411d73:	retf   
  411d74:	dec    ecx
  411d75:	lea    edx,[eax]
  411d77:	mov    edi,0x25d8ca6f
  411d7c:	loop   0x411d2f
  411d7e:	jmp    0xa9ee6176
  411d83:	cld    
  411d84:	in     al,dx
  411d85:	fcomi  st,st(0)
  411d87:	mov    dl,0x8e
  411d89:	sub    DWORD PTR [esi+edx*8-0x27],ebp
  411d8d:	jmp    DWORD PTR [esi+0x3b30d36b]
  411d93:	mov    eax,0x1963f60e
  411d98:	out    0xf4,eax
  411d9a:	push   esi
  411d9b:	pop    esi
  411d9c:	lods   eax,DWORD PTR ds:[esi]
  411d9d:	ja     0x411d41
  411d9f:	es je  0x411d3c
  411da2:	mov    ebx,fs
  411da4:	sub    al,BYTE PTR [ebx]
  411da6:	sub    BYTE PTR [edi+ebx*2-0x7],ah
  411daa:	jg     0x411d5a
  411dac:	js     0x411dee
  411dae:	jmp    0x5ec4ade4
  411db3:	push   ds
  411db4:	push   edx
  411db5:	cld    
  411db6:	xor    al,0x82
  411db8:	cld    
  411db9:	ss cmc 
  411dbb:	test   al,0x6f
  411dbd:	dec    esi
  411dbe:	and    BYTE PTR [edx-0x7d28e4ee],dh
  411dc4:	xor    ebp,DWORD PTR [eax]
  411dc6:	mov    WORD PTR [eax+0x24a48a9d],es
  411dcc:	std    
  411dcd:	mov    ah,0x27
  411dcf:	mov    edi,0x4370d5f3
  411dd4:	jg     0x411df6
  411dd6:	and    dl,BYTE PTR [ebp+ebp*1+0x399f8148]
  411ddd:	inc    esp
  411dde:	adc    DWORD PTR [edi],edi
  411de0:	mov    ds:0x786b6e23,al
  411de5:	jnp    0x411de5
  411de7:	loop   0x411e29
  411de9:	dec    ebx
  411dea:	pop    es
  411deb:	sbb    bh,al
  411ded:	enter  0x9564,0xdd
  411df1:	inc    eax
  411df2:	mov    esi,0xd6ca9918
  411df7:	mov    ebp,0x34f723f4
  411dfc:	sub    eax,0xae9161a2
  411e01:	std    
  411e02:	sti    
  411e03:	xchg   esp,edx
  411e05:	cmp    eax,0x18954999
  411e0a:	xor    DWORD PTR [eax+0x5a],esp
  411e0d:	loopne 0x411e6f
  411e0f:	add    BYTE PTR [eax+0x51],0x4d
  411e13:	sub    eax,DWORD PTR [edx+ebp*4-0x8e006be]
  411e1a:	inc    edi
  411e1b:	into   
  411e1c:	or     al,0x54
  411e1e:	sub    BYTE PTR [ebx-0x7b74a271],bl
  411e24:	dec    edi
  411e25:	ja     0x411ea1
  411e27:	aad    0x9c
  411e29:	mov    ecx,0x9cc1f65c
  411e2e:	lahf   
  411e2f:	xchg   ebp,eax
  411e30:	daa    
  411e31:	jecxz  0x411e44
  411e33:	mov    bl,BYTE PTR [ebx]
  411e35:	lea    esp,[eax-0x7e412176]
  411e3b:	push   eax
  411e3c:	jb     0x411e0c
  411e3e:	in     al,0x99
  411e40:	(bad)  
  411e41:	mov    ebx,0xe4139ec
  411e46:	(bad)  
  411e47:	imul   ecx,DWORD PTR [eax+0x5200e622],0xffffffb5
  411e4e:	xchg   DWORD PTR [edx-0x49],esp
  411e51:	mov    ch,0xc0
  411e53:	stos   DWORD PTR es:[edi],eax
  411e54:	mov    ch,0x8e
  411e56:	stc    
  411e57:	std    
  411e58:	adc    al,dh
  411e5a:	idiv   BYTE PTR [edx+0x3509c3f]
  411e60:	out    dx,al
  411e61:	cmc    
  411e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e63:	cmc    
  411e64:	pop    ebx
  411e65:	inc    esp
  411e66:	jno    0x411eac
  411e68:	es jnp 0x411edc
  411e6b:	mov    dh,0x65
  411e6d:	stos   DWORD PTR es:[edi],eax
  411e6e:	jmp    0x411ec0
  411e70:	retf   
  411e71:	pop    edi
  411e72:	and    al,0x9f
  411e74:	cwde   
  411e75:	jle    0x411e8a
  411e77:	jns    0x411e52
  411e79:	(bad)  
  411e7a:	lods   eax,DWORD PTR ds:[esi]
  411e7b:	sub    eax,0x3d5479f5
  411e80:	fsubrp st(2),st
  411e82:	mov    edx,0x2ab1fafc
  411e87:	popa   
  411e88:	imul   esi,DWORD PTR [ebp-0x4d03fe66],0xa75ec792
  411e92:	add    DWORD PTR [ebp+0x69c3023e],ecx
  411e98:	bound  eax,QWORD PTR [ebx]
  411e9a:	sbb    eax,0x87605424
  411e9f:	jp     0x411e9a
  411ea1:	jmp    0xf36e6e4c
  411ea6:	int    0x16
  411ea8:	mov    esp,0x290e98e5
  411ead:	fwait
  411eae:	pop    ebx
  411eaf:	idiv   DWORD PTR ss:[ebp+0x7b]
  411eb3:	in     eax,0x79
  411eb5:	cmp    bl,ah
  411eb7:	mov    ebp,0x7ad4cf65
  411ebc:	mov    es,WORD PTR [eax+0x6ae91694]
  411ec2:	adc    eax,0x24453d70
  411ec7:	cmp    ebp,DWORD PTR [ebx]
  411ec9:	dec    ebp
  411eca:	mov    esi,esi
  411ecc:	pop    ss
  411ecd:	sahf   
  411ece:	lods   al,BYTE PTR ds:[esi]
  411ecf:	sar    DWORD PTR [eax-0x19],0xce
  411ed3:	and    eax,0x8b9ffca1
  411ed8:	mov    esi,0x46a1d81c
  411edd:	fistp  WORD PTR [eax+0x1d5de059]
  411ee3:	loope  0x411f08
  411ee5:	pop    edx
  411ee6:	sbb    eax,0xed20cee5
  411eeb:	cmp    eax,esp
  411eed:	aad    0xe3
  411eef:	mov    WORD PTR [edx],cs
  411ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ef3:	pop    ebp
  411ef4:	out    0xd6,eax
  411ef6:	adc    bl,bh
  411ef8:	add    eax,0x2c4bc3a7
  411efd:	das    
  411efe:	jl     0x411e8e
  411f00:	rcr    DWORD PTR [edx],cl
  411f02:	inc    eax
  411f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f04:	or     DWORD PTR [ebp+ebp*1-0x74],ecx
  411f08:	adc    al,0xb3
  411f0a:	sbb    ebp,esp
  411f0c:	unpckhps xmm6,XMMWORD PTR [eax-0x1f]
  411f10:	in     al,0x25
  411f12:	pushf  
  411f13:	mov    esp,0x4eee990d
  411f18:	adc    eax,0x7f0c089a
  411f1d:	in     al,0x63
  411f1f:	xchg   esp,eax
  411f20:	in     eax,dx
  411f21:	push   0xfffffff9
  411f23:	(bad)  [ebx+0x1b]
  411f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f27:	lods   al,BYTE PTR ds:[esi]
  411f28:	push   ss
  411f29:	lods   al,BYTE PTR ds:[esi]
  411f2a:	arpl   ax,ax
  411f2c:	xchg   esi,eax
  411f2d:	or     eax,0x27174c8f
  411f32:	sti    
  411f33:	jne    0x411f55
  411f35:	cdq    
  411f36:	dec    edi
  411f37:	push   ss
  411f38:	add    eax,0xdf26ef48
  411f3d:	mov    cl,0xef
  411f3f:	outs   dx,DWORD PTR ds:[esi]
  411f40:	setl   BYTE PTR gs:[ecx]
  411f44:	cli    
  411f45:	pushf  
  411f46:	pop    esi
  411f47:	lods   al,BYTE PTR ds:[esi]
  411f48:	test   al,0x1a
  411f4a:	mov    ds:0xa36687d2,al
  411f4f:	ja     0x411f85
  411f51:	mov    ecx,ds
  411f53:	das    
  411f54:	push   ecx
  411f55:	pop    ss
  411f56:	or     al,0xc7
  411f58:	nop
  411f59:	js     0x411fbc
  411f5b:	cli    
  411f5c:	sbb    BYTE PTR [edx+0x5f],cl
  411f5f:	(bad)  
  411f60:	jl     0x411f13
  411f62:	ja     0x411f76
  411f64:	xor    dl,dl
  411f66:	jb     0x411fdb
  411f68:	xor    eax,0x8661644e
  411f6d:	xchg   edx,eax
  411f6e:	retf   
  411f6f:	pop    esi
  411f70:	lea    edi,[edi-0x25f90311]
  411f76:	sbb    BYTE PTR [ecx],ch
  411f78:	xor    eax,0xa62abdc0
  411f7d:	dec    esi
  411f7e:	cmc    
  411f7f:	sbb    BYTE PTR [edx],dl
  411f81:	clc    
  411f82:	or     BYTE PTR [esi+0x48],bl
  411f85:	xor    eax,0xe1fbe091
  411f8a:	sub    bh,bl
  411f8c:	lds    eax,FWORD PTR [esi]
  411f8e:	adc    BYTE PTR [eax-0x4be5bca9],0x78
  411f95:	mov    bh,0xb0
  411f97:	sbb    BYTE PTR [esp+esi*2],bl
  411f9a:	add    eax,0x48d3eb81
  411fa0:	ins    BYTE PTR es:[edi],dx
  411fa1:	jg     0x411fe7
  411fa3:	mov    ds:0x8817c490,eax
  411fa8:	in     al,0xb2
  411faa:	retf   
  411fab:	push   esp
  411fac:	aam    0x35
  411fae:	sbb    DWORD PTR [ebp-0x1322ef82],eax
  411fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb5:	pop    esp
  411fb6:	mov    ebp,0x21da6f50
  411fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbc:	fmul   QWORD PTR [ebp-0x72]
  411fbf:	mov    bh,BYTE PTR [edx+0x4]
  411fc2:	popa   
  411fc3:	repz inc esi
  411fc5:	pop    edx
  411fc6:	jl     0x411fc5
  411fc8:	adc    al,ch
  411fca:	pop    esi
  411fcb:	sbb    eax,DWORD PTR [esi+eiz*4]
  411fce:	lahf   
  411fcf:	int    0x66
  411fd1:	push   esi
  411fd3:	push   ecx
  411fd4:	sbb    eax,0xc651856b
  411fd9:	cmp    esp,edx
  411fdb:	sub    esp,0xe980baeb
  411fe1:	dec    ebx
  411fe2:	test   eax,0xc2da9e17
  411fe7:	out    0x8c,eax
  411fe9:	rcl    DWORD PTR [eax+0x188495e8],0x4d
  411ff0:	in     al,dx
  411ff1:	add    al,bh
  411ff3:	jecxz  0x412002
  411ff5:	xchg   esi,eax
  411ff6:	inc    ebx
  411ff7:	cld    
  411ff8:	or     al,0x51
  411ffa:	inc    ebp
  411ffb:	and    eax,DWORD PTR [ebx+0xdb3783b]
  412001:	add    DWORD PTR [eax+0x447de0d9],esp
  412007:	fs mov edi,0xdcd1f37f
  41200d:	push   ebx
  41200e:	int3   
  41200f:	(bad)  
  412010:	push   esp
  412011:	add    eax,0x1ca18c4e
  412016:	xor    eax,0xaf910115
  41201b:	dec    edi
  41201c:	add    eax,0xa52e5776
  412021:	adc    BYTE PTR [ecx],bh
  412023:	add    ebp,ebp
  412025:	mov    DWORD PTR [ecx+0xb],esi
  412028:	repz pop ebp
  41202a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41202b:	xor    al,BYTE PTR [ebx]
  41202d:	push   ebp
  41202e:	and    esp,ecx
  412030:	scas   al,BYTE PTR es:[edi]
  412031:	mov    dl,BYTE PTR es:[ecx+0x1462d781]
  412038:	mov    DWORD PTR ds:0x8fd26d10,0xab5dcea0
  412042:	add    BYTE PTR [edi+0x76],bl
  412045:	cld    
  412046:	cld    
  412047:	test   eax,0x41c69f65
  41204c:	gs in  al,0x82
  41204f:	data16 out 0xe5,al
  412052:	retf   0x4457
  412055:	xor    ah,BYTE PTR [edi-0x75f0655c]
  41205b:	sub    BYTE PTR [eax+0x36],0xd4
  41205f:	adc    BYTE PTR [esp+ebp*4],ch
  412062:	add    BYTE PTR [edx-0x606f95c6],cl
  412068:	adc    bh,0x8
  41206b:	dec    ebp
  41206c:	pop    esp
  41206d:	out    0x9c,eax
  41206f:	sbb    BYTE PTR [edx],bh
  412071:	nop
  412072:	xchg   esi,eax
  412073:	sbb    DWORD PTR [edi],ecx
  412075:	call   0xc617e55a
  41207a:	and    bl,BYTE PTR [ebx+0x1fa6bbc3]
  412080:	sub    eax,0x8f217ece
  412085:	imul   edx,DWORD PTR [ebp-0x10],0x5a
  412089:	pushf  
  41208a:	inc    ecx
  41208b:	push   eax
  41208c:	pop    ecx
  41208d:	mov    dl,0x7d
  41208f:	out    0x95,al
  412091:	aas    
  412092:	push   ss
  412093:	inc    ebx
  412094:	test   al,0xed
  412096:	mov    bh,0x4b
  412098:	retf   0x6b30
  41209b:	aad    0x6d
  41209d:	(bad)  
  41209e:	loopne 0x412090
  4120a0:	or     ebp,DWORD PTR [edx-0x747d754]
  4120a6:	icebp  
  4120a7:	mov    ebp,0xde7bb673
  4120ac:	and    dh,BYTE PTR [edx]
  4120ae:	call   DWORD PTR [ebx-0x6]
  4120b1:	scas   eax,DWORD PTR es:[edi]
  4120b2:	hlt    
  4120b3:	jnp    0x412092
  4120b5:	outs   dx,BYTE PTR ds:[esi]
  4120b6:	not    DWORD PTR [eax-0xbeccc61]
  4120bc:	mov    ah,BYTE PTR [edi-0x3f]
  4120bf:	icebp  
  4120c0:	sub    al,0x4d
  4120c2:	mov    cl,0x16
  4120c4:	cwde   
  4120c5:	aaa    
  4120c6:	xchg   ebx,eax
  4120c7:	xadd   DWORD PTR [ecx],esp
  4120ca:	inc    esp
  4120cb:	mov    bh,0xed
  4120cd:	cdq    
  4120ce:	jbe    0x4120d8
  4120d0:	add    ch,BYTE PTR [ecx]
  4120d2:	jne    0x4120d3
  4120d4:	int3   
  4120d5:	rcr    dh,cl
  4120d7:	stos   BYTE PTR es:[edi],al
  4120d8:	push   ecx
  4120d9:	pop    ecx
  4120da:	shl    DWORD PTR [esi],cl
  4120dc:	add    BYTE PTR [eax-0x5c74d2e7],ah
  4120e2:	pop    ebx
  4120e3:	sti    
  4120e4:	clc    
  4120e5:	lock (bad) 
  4120e7:	outs   dx,BYTE PTR ds:[esi]
  4120e9:	mov    bh,0xdb
  4120eb:	dec    edx
  4120ec:	adc    eax,0xe2dc7a9
  4120f1:	inc    ecx
  4120f2:	cmp    dl,al
  4120f4:	cmp    bl,BYTE PTR [edi-0x77ea2d18]
  4120fa:	loopne 0x4120fa
  4120fc:	inc    edx
  4120fd:	cmp    al,0x2
  4120ff:	repz jmp 0x4a3e:0x7d7e3a6a
  412107:	lahf   
  412108:	jne    0x412151
  41210a:	mov    bl,0x4c
  41210c:	mov    ecx,0x49690a3a
  412111:	je     0x412169
  412113:	sar    BYTE PTR [ecx+ebx*2-0x60],0x75
  412118:	mov    dl,0x4f
  41211a:	sub    al,bh
  41211c:	retf   
  41211d:	or     BYTE PTR [eax-0x4dba6233],dl
  412123:	retf   
  412124:	in     al,0xc6
  412126:	inc    ebx
  412127:	or     esi,DWORD PTR [esi+ebx*4]
  41212a:	mov    bl,0xc6
  41212c:	into   
  41212d:	adc    DWORD PTR [edx+0xfa1c248],0xc03a52c0
  412137:	ins    BYTE PTR es:[edi],dx
  412138:	mov    dh,0xcc
  41213a:	add    BYTE PTR [ebp-0x66b5e98c],dl
  412140:	fstp   QWORD PTR [edi]
  412142:	cmc    
  412143:	xchg   ecx,eax
  412144:	cmp    BYTE PTR [ebx],al
  412146:	lods   al,BYTE PTR ds:[esi]
  412147:	sbb    al,0xda
  412149:	and    dl,BYTE PTR [edi+0x5f]
  41214c:	push   edi
  41214d:	push   ecx
  41214e:	pop    ecx
  41214f:	mov    BYTE PTR [eax+0x2e92d5f2],bl
  412155:	pop    edi
  412156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412157:	arpl   WORD PTR [ecx+0x4d],si
  41215a:	jns    0x412198
  41215c:	scas   eax,DWORD PTR es:[edi]
  41215d:	or     ebx,DWORD PTR ds:0xf94b52cd
  412163:	and    eax,0x9956a79e
  412168:	fucomi st,st(3)
  41216a:	inc    eax
  41216b:	fcomp  st(0)
  41216d:	adc    al,0xc6
  41216f:	ja     0x412150
  412171:	popf   
  412172:	outs   dx,BYTE PTR ds:[esi]
  412173:	call   0x60:0x5c599793
  41217a:	push   ecx
  41217b:	inc    eax
  41217c:	(bad)  
  41217d:	mov    cl,BYTE PTR [ebp-0x58]
  412180:	scas   eax,DWORD PTR es:[edi]
  412181:	cmc    
  412182:	fs mov esp,0x847e1a13
  412188:	or     al,0xb9
  41218a:	sub    esi,DWORD PTR [edx-0x46]
  41218d:	and    dl,al
  41218f:	hlt    
  412190:	xchg   ebx,eax
  412191:	push   ds
  412192:	jne    0x412163
  412194:	lods   eax,DWORD PTR ds:[esi]
  412195:	push   es
  412196:	sbb    BYTE PTR [edi],0x4
  412199:	mov    dl,0xf
  41219b:	or     ah,bh
  41219d:	or     al,0xb0
  41219f:	jbe    0x4121c8
  4121a1:	fistp  DWORD PTR [eax-0x20f965b9]
  4121a7:	pop    esi
  4121a8:	or     cl,ch
  4121aa:	cmp    eax,0x59447fea
  4121af:	and    BYTE PTR [ebx],0x7
  4121b2:	xchg   ebx,eax
  4121b3:	imul   edi,DWORD PTR [eax-0x14],0x971dbd0a
  4121ba:	mov    edi,0x6d49cec6
  4121bf:	and    al,0x8c
  4121c1:	div    DWORD PTR cs:[edi-0x30]
  4121c5:	sbb    edx,DWORD PTR [esi-0x5e]
  4121c8:	jbe    0x4121b4
  4121ca:	and    ebx,DWORD PTR [esi]
  4121cc:	dec    ebx
  4121cd:	jp     0x4121a3
  4121cf:	jae    0x41224f
  4121d1:	jne    0x4121db
  4121d3:	jl     0x412233
  4121d5:	sbb    ah,bl
  4121d7:	mov    esi,0xa87dc6e
  4121dc:	aad    0x2e
  4121de:	xchg   esi,eax
  4121df:	lds    edi,FWORD PTR [edx]
  4121e1:	fnstsw WORD PTR [ebx-0x35924153]
  4121e7:	jbe    0x4121f6
  4121e9:	test   BYTE PTR [ebx+0x19],bl
  4121ec:	sub    eax,0x9f34f689
  4121f1:	inc    edx
  4121f2:	scas   eax,DWORD PTR es:[edi]
  4121f3:	rcr    edx,cl
  4121f5:	dec    ebx
  4121f6:	retf   0x2996
  4121f9:	dec    eax
  4121fa:	cmp    ebx,edi
  4121fc:	mov    esi,0xf9bf5a03
  412201:	mov    ah,0xaa
  412203:	addr16 icebp 
  412205:	xchg   esi,eax
  412206:	sbb    esp,DWORD PTR [esi-0x20]
  412209:	fs or  eax,0x92ee1977
  41220f:	lea    ebx,[edi-0x10]
  412212:	sub    DWORD PTR [edx+esi*8-0x6e],esp
  412216:	fst    QWORD PTR [edi+0x58]
  412219:	dec    ebp
  41221a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221b:	(bad)  
  41221c:	das    
  41221d:	and    BYTE PTR [ebp+eax*8-0x1f],ch
  412221:	stc    
  412222:	push   es
  412223:	cwde   
  412224:	mov    cl,0xfc
  412226:	les    ebx,FWORD PTR [eax+0x4b67e3c5]
  41222c:	or     al,0xae
  41222e:	imul   BYTE PTR [esi+0x48b4a886]
  412234:	jge    0x4121c9
  412236:	mov    BYTE PTR [eax-0x580fe887],bl
  41223c:	adc    eax,0xe7d57b7d
  412241:	mov    al,ds:0x2bc88616
  412246:	xchg   ecx,eax
  412247:	retf   
  412248:	cmp    bl,cl
  41224a:	or     al,0x41
  41224c:	inc    ecx
  41224d:	hlt    
  41224e:	out    dx,eax
  41224f:	(bad)  
  412250:	sbb    al,0xec
  412252:	mov    eax,0xcaef47b8
  412257:	dec    edx
  412258:	call   0xf44eb254
  41225d:	stc    
  41225e:	out    dx,eax
  41225f:	xchg   edx,eax
  412260:	xchg   edi,eax
  412261:	xor    eax,0xc10e007d
  412266:	xchg   eax,ebx
  412268:	loop   0x412289
  41226a:	mov    edx,0xe8ba76f4
  41226f:	(bad)  
  412270:	ficom  WORD PTR [edx]
  412272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412273:	mov    dh,0x74
  412275:	pop    ebx
  412276:	jle    0x41228e
  412278:	lds    eax,FWORD PTR [ecx]
  41227a:	push   ds
  41227b:	sbb    eax,0x4e55a619
  412280:	pop    es
  412281:	adc    edx,DWORD PTR [ebx+edi*8]
  412284:	ja     0x412207
  412286:	push   esp
  412287:	(bad)  
  412288:	push   edx
  412289:	mov    ebx,0xe09a1163
  41228e:	or     eax,0xa5ee7287
  412293:	sets   BYTE PTR [esi-0x65]
  412297:	xchg   BYTE PTR [ebp+0x65],cl
  41229a:	mov    bl,0xb0
  41229c:	(bad)  
  41229d:	jmp    0x41223e
  41229f:	adc    BYTE PTR [ecx-0x3a],cl
  4122a2:	jle    0x412237
  4122a4:	clc    
  4122a5:	call   0x84a0:0x47e61c14
  4122ac:	test   DWORD PTR [eax+edi*2-0x70abfff7],ebp
  4122b3:	jp     0x412324
  4122b5:	adc    BYTE PTR [edx],bl
  4122b7:	cmp    DWORD PTR [ecx-0x4dfc1710],esi
  4122bd:	scas   al,BYTE PTR es:[edi]
  4122be:	ss or  al,0xa2
  4122c1:	sti    
  4122c2:	jns    0x412318
  4122c4:	push   cs
  4122c5:	fwait
  4122c6:	push   edi
  4122c7:	jle    0x4122d7
  4122c9:	push   cs
  4122ca:	push   0xffffffa7
  4122cc:	mov    ah,0x88
  4122ce:	pop    es
  4122cf:	add    ch,dh
  4122d1:	adc    ch,BYTE PTR [esi+0x7288a2e3]
  4122d7:	or     eax,0x1ff1f5a7
  4122dc:	leave  
  4122dd:	scas   al,BYTE PTR es:[edi]
  4122de:	mov    al,ds:0xb94b1eea
  4122e3:	cmp    edi,esp
  4122e5:	in     eax,dx
  4122e6:	fucompp 
  4122e8:	ss push ecx
  4122ea:	add    eax,0x1e1c406a
  4122ef:	mov    esi,0xcf3651e9
  4122f4:	adc    DWORD PTR [edx],0x8ff639fd
  4122fa:	ja     0x4122a4
  4122fc:	adc    ebp,DWORD PTR [ecx]
  4122fe:	adc    dl,0xe2
  412301:	leave  
  412302:	pop    esp
  412303:	ins    DWORD PTR es:[edi],dx
  412304:	cmp    al,0x53
  412306:	inc    ebx
  412307:	cmp    al,0x9e
  412309:	scas   al,BYTE PTR es:[edi]
  41230a:	mov    ebp,0x433ad616
  41230f:	scas   al,BYTE PTR es:[edi]
  412310:	int    0x52
  412312:	push   0xd1a66af7
  412317:	les    eax,FWORD PTR [esi-0x60]
  41231a:	sub    esi,edx
  41231c:	dec    ecx
  41231d:	push   0xffffffb9
  41231f:	scas   eax,DWORD PTR es:[edi]
  412320:	push   ebp
  412321:	daa    
  412322:	(bad)  [ecx+0x579f6a80]
  412328:	ins    DWORD PTR es:[edi],dx
  412329:	push   0xffffffc2
  41232b:	outs   dx,DWORD PTR ds:[esi]
  41232c:	adc    al,0x55
  41232e:	outs   dx,DWORD PTR ds:[esi]
  41232f:	enter  0x7afe,0x0
  412333:	lods   eax,DWORD PTR ds:[esi]
  412334:	cmc    
  412335:	dec    esp
  412336:	je     0x41234e
  412338:	inc    ebx
  412339:	pop    ss
  41233a:	mov    dl,BYTE PTR [ebx]
  41233c:	sub    al,0x64
  41233e:	addr16 jns 0x41232e
  412341:	fsub   DWORD PTR [esi+0x10]
  412344:	jle    0x412322
  412346:	pop    eax
  412347:	or     BYTE PTR [edi-0x2ddd84b0],0x5c
  41234e:	fadd   st(6),st
  412350:	jae    0x412359
  412352:	arpl   WORD PTR [ebp-0x7d],bp
  412355:	(bad)  
  412356:	ss jo  0x412321
  412359:	cs rcl esp,1
  41235c:	mov    BYTE PTR [eax],al
  41235e:	jo     0x412397
  412360:	popw   ss
  412362:	dec    esp
  412363:	fcomp  DWORD PTR [edi+0x1]
  412366:	daa    
  412367:	add    ecx,DWORD PTR [esi+edx*1]
  41236a:	pop    esi
  41236b:	js     0x4123dc
  41236d:	sbb    bl,bh
  41236f:	test   al,0x34
  412371:	xor    eax,0xd28b6c92
  412376:	call   0x210e:0xe89221c
  41237d:	test   al,0x31
  41237f:	push   esp
  412380:	call   0x8706:0x4f72bfeb
  412387:	mov    DWORD PTR [ebx+0x7],ebx
  41238a:	js     0x412326
  41238c:	add    al,0xf
  41238e:	xor    dh,al
  412390:	stc    
  412391:	add    bh,bh
  412393:	push   edx
  412394:	add    esp,ecx
  412396:	or     DWORD PTR [ecx-0x2ef977cd],ecx
  41239c:	sbb    eax,0xbd823772
  4123a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a2:	lds    ecx,FWORD PTR [ecx-0x70993f48]
  4123a8:	add    al,BYTE PTR [edx+ecx*1+0x7a]
  4123ac:	push   ds
  4123ad:	std    
  4123ae:	jno    0x412373
  4123b0:	out    dx,eax
  4123b1:	mov    dl,0xdb
  4123b3:	(bad)  
  4123b4:	mov    dh,0x3a
  4123b6:	mov    bl,0xd7
  4123b8:	xlat   BYTE PTR ds:[ebx]
  4123b9:	retf   0xbe16
  4123bc:	(bad)  
  4123bd:	sbb    al,0xb5
  4123bf:	sti    
  4123c0:	(bad)  
  4123c2:	add    ch,bh
  4123c4:	adc    al,0xfa
  4123c6:	data16 loope 0x41236e
  4123c9:	fs aad 0x2b
  4123cc:	cld    
  4123cd:	out    dx,eax
  4123ce:	aad    0x57
  4123d0:	aaa    
  4123d1:	ins    DWORD PTR es:[edi],dx
  4123d2:	pusha  
  4123d3:	fcomp  DWORD PTR [edx+0x125cb238]
  4123d9:	not    BYTE PTR [edx]
  4123db:	aas    
  4123dc:	clc    
  4123dd:	ror    cl,1
  4123df:	loop   0x412439
  4123e1:	out    0x41,eax
  4123e3:	add    eax,0x617d0c92
  4123e8:	and    DWORD PTR [ebx],ecx
  4123ea:	jbe    0x4123ea
  4123ec:	xchg   ebp,eax
  4123ed:	xchg   ecx,eax
  4123ee:	stc    
  4123ef:	iret   
  4123f0:	sbb    eax,ecx
  4123f2:	inc    esi
  4123f3:	mov    ds:0x28a95198,al
  4123f8:	dec    ebx
  4123f9:	push   esi
  4123fa:	mov    ah,0xd1
  4123fc:	jae    0x4123c2
  4123fe:	nop
  4123ff:	and    bl,ch
  412401:	add    bl,dh
  412403:	jb     0x4123c5
  412405:	push   ss
  412406:	sbb    eax,0x344c061b
  41240b:	cmp    eax,0xda91862
  412410:	mov    DWORD PTR [edx],0xb6dc0053
  412416:	push   es
  412417:	or     DWORD PTR ds:0x606e1a69,0xffffffe8
  41241e:	leave  
  41241f:	(bad)  
  412420:	mov    ah,0x3b
  412422:	nop
  412423:	jg     0x412476
  412425:	ins    DWORD PTR es:[edi],dx
  412426:	lea    eax,[ebx+0x83960f0]
  41242c:	pop    ebx
  41242d:	in     eax,0xe5
  41242f:	mov    al,0xea
  412431:	pop    esp
  412432:	xor    bh,cl
  412434:	xor    edi,DWORD PTR ds:0xb6d984ae
  41243a:	ret    
  41243b:	das    
  41243c:	aad    0x72
  41243e:	jecxz  0x412407
  412440:	in     al,0xf9
  412442:	push   ss
  412443:	hlt    
  412444:	xchg   esp,eax
  412445:	pop    ds
  412446:	cmp    DWORD PTR gs:[eax],edx
  412449:	iret   
  41244a:	stc    
  41244b:	dec    ecx
  41244c:	enter  0x4f42,0x1a
  412450:	jae    0x4123f0
  412452:	push   cs
  412453:	add    ch,BYTE PTR [edi-0x7f]
  412456:	mov    ebx,0x84890c35
  41245b:	aad    0xa5
  41245d:	jno    0x412496
  41245f:	pop    ss
  412460:	push   esp
  412461:	or     DWORD PTR [ebp-0x1e4ee81e],0xffffffa7
  412468:	out    dx,al
  412469:	iret   
  41246a:	push   es
  41246b:	mov    ebp,eax
  41246d:	mov    eax,ds:0x90646838
  412472:	xchg   BYTE PTR [edi-0x48369353],ah
  412478:	lds    ecx,FWORD PTR [esi-0x619f05c3]
  41247e:	add    DWORD PTR [eax],0x4163fb78
  412484:	push   edi
  412485:	das    
  412486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412487:	xor    eax,0x61eb0df8
  41248c:	mov    DWORD PTR [edi-0x17cf198a],edx
  412492:	fwait
  412493:	mov    eax,ds:0xfa0c9bae
  412498:	fist   DWORD PTR [eax+0x1fa9f2c]
  41249e:	jge    0x41246c
  4124a0:	xor    DWORD PTR fs:[edi],esp
  4124a3:	arpl   WORD PTR [ebp+0x70],ax
  4124a6:	or     eax,0xa87e18a5
  4124ab:	sub    al,0xe8
  4124ad:	mov    dh,0x58
  4124af:	push   ds
  4124b0:	in     eax,0xad
  4124b2:	inc    edx
  4124b3:	call   0x22858800
  4124b8:	jno    0x4124cf
  4124ba:	pop    esi
  4124bb:	pop    ebp
  4124bc:	aam    0x7c
  4124be:	jge    0x4124de
  4124c0:	lods   eax,DWORD PTR ds:[esi]
  4124c1:	or     al,0x57
  4124c3:	mov    dl,0x24
  4124c5:	lods   al,BYTE PTR ds:[esi]
  4124c6:	in     eax,dx
  4124c7:	add    BYTE PTR [ecx],bh
  4124c9:	repnz or DWORD PTR [esi+0x47],0x62
  4124ce:	and    BYTE PTR [eax+ebp*2+0x679637a7],cl
  4124d5:	mov    edx,0x3b648547
  4124da:	fiadd  DWORD PTR [ebx+eax*8-0x48]
  4124de:	and    ecx,edi
  4124e0:	add    al,dl
  4124e2:	sub    BYTE PTR [edx-0x2b6e5116],al
  4124e8:	aam    0x1b
  4124ea:	int    0x66
  4124ec:	push   0xe
  4124ee:	dec    eax
  4124ef:	mov    dh,0x47
  4124f1:	pop    edi
  4124f2:	inc    edx
  4124f3:	adc    DWORD PTR [ebp-0x74dcf7b1],esp
  4124f9:	mov    cl,0xe1
  4124fb:	sahf   
  4124fc:	inc    eax
  4124fd:	or     ebp,edi
  4124ff:	out    0x9e,al
  412501:	xchg   ebx,eax
  412502:	(bad)  
  412503:	repnz mov ecx,DWORD PTR [esi+edi*1+0x30]
  412508:	and    al,0xca
  41250a:	xor    ebp,DWORD PTR [ebx-0x6f]
  41250d:	inc    edi
  41250e:	fild   WORD PTR [ecx+0x26]
  412511:	sbb    DWORD PTR [edx+0x56],0xffffffe9
  412515:	mov    ecx,0x407f1191
  41251a:	cs jge 0x41255e
  41251d:	sub    eax,edx
  41251f:	jne    0x41252c
  412521:	push   eax
  412522:	in     al,0xa6
  412524:	mov    ss,edx
  412526:	jmp    0x412573
  412528:	push   esp
  412529:	dec    ecx
  41252a:	enter  0x6136,0x14
  41252e:	jl     0x41255d
  412530:	test   al,0xb
  412532:	fwait
  412533:	sub    eax,0x3518abf7
  412538:	xor    BYTE PTR ds:0xabc6d073,0x8d
  41253f:	jne    0x4124e8
  412541:	fstp   QWORD PTR [ebx+0x189615c2]
  412547:	adc    ebx,eax
  412549:	mov    esi,0xe8bdb93
  41254e:	mov    ebp,0x35fd4a3a
  412553:	loope  0x4125b4
  412555:	lods   eax,DWORD PTR ds:[esi]
  412556:	and    cl,BYTE PTR [eax+0x1d2ec374]
  41255c:	js     0x412583
  41255e:	adc    eax,0xf2647b4f
  412563:	repnz aas 
  412565:	add    dh,bh
  412567:	adc    edi,eax
  412569:	pop    esi
  41256a:	add    ecx,DWORD PTR [eax+eiz*2-0x7568760d]
  412571:	fs xchg edi,eax
  412573:	jecxz  0x412509
  412575:	push   eax
  412576:	int    0xdd
  412578:	push   esi
  412579:	pop    ax
  41257b:	mov    bl,0xed
  41257d:	push   edi
  41257e:	inc    esp
  41257f:	pop    edi
  412580:	into   
  412581:	addr16 inc ebx
  412583:	dec    edi
  412584:	hlt    
  412585:	ins    BYTE PTR es:[edi],dx
  412586:	es (bad) 
  412588:	sbb    eax,0xb652125b
  41258d:	fucomi st,st(1)
  41258f:	xchg   BYTE PTR [edx],bh
  412591:	js     0x412561
  412593:	shr    BYTE PTR [eax+0x18],1
  412596:	aas    
  412597:	outs   dx,DWORD PTR ds:[esi]
  412598:	jbe    0x412547
  41259a:	test   eax,0x1152d335
  41259f:	mov    dh,0x78
  4125a1:	push   ecx
  4125a2:	(bad)  
  4125a3:	pusha  
  4125a4:	ss lock mov cl,0x28
  4125a8:	out    dx,eax
  4125a9:	add    DWORD PTR [eax],ecx
  4125ab:	xchg   DWORD PTR [ebx+0x469b7e6c],ebx
  4125b1:	adc    al,0x96
  4125b3:	call   0x22b50d43
  4125b8:	mov    ecx,DWORD PTR [esp+eiz*2]
  4125bb:	test   DWORD PTR [bx+di-0x76f],0x42635568
  4125c4:	imul   ecx,DWORD PTR [edx],0x32c952e3
  4125ca:	mov    ds:0x4985f355,eax
  4125cf:	xchg   edx,eax
  4125d0:	(bad)  [esi-0x796d7da8]
  4125d6:	mov    eax,0x43a106e2
  4125db:	add    BYTE PTR [edx+0x1c88e06c],dl
  4125e1:	loopne 0x4125f6
  4125e3:	aas    
  4125e4:	jmp    0x27ef:0x5595d3ff
  4125eb:	out    dx,eax
  4125ec:	and    DWORD PTR [esi],eax
  4125ee:	cmp    eax,0x4e6cc598
  4125f3:	fidiv  WORD PTR [ecx]
  4125f5:	inc    ecx
  4125f6:	int3   
  4125f7:	mov    bl,0x6b
  4125f9:	cld    
  4125fa:	push   ebp
  4125fb:	icebp  
  4125fc:	sbb    dl,ah
  4125fe:	lahf   
  4125ff:	pop    eax
  412600:	or     DWORD PTR [eax+ebp*2],esi
  412603:	cmp    DWORD PTR [ecx-0x44fcbf79],esi
  412609:	lock test eax,0x108ebb75
  41260f:	dec    esp
  412610:	mov    ecx,0xfcee5e75
  412615:	iret   
  412616:	or     cl,BYTE PTR [eax+0x6d]
  412619:	clc    
  41261a:	jmp    0x7f55:0xf8546d03
  412621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412622:	ins    BYTE PTR es:[edi],dx
  412623:	fnstenv [eax-0xf]
  412626:	or     bl,BYTE PTR [edi+0x1829eac9]
  41262c:	std    
  41262d:	stc    
  41262e:	mov    eax,0x79ffc6e2
  412633:	inc    edx
  412634:	dec    ebp
  412635:	and    al,BYTE PTR [ebx+0x4ff1c94c]
  41263b:	sar    bl,0xb8
  41263e:	arpl   cx,ax
  412640:	clc    
  412641:	mov    BYTE PTR [ecx-0x27],dh
  412644:	cli    
  412645:	jae    0x412619
  412647:	xor    dl,ch
  412649:	mov    cl,0xb1
  41264b:	xchg   edx,eax
  41264c:	mov    ds:0xc6f8b28c,al
  412651:	outs   dx,DWORD PTR ds:[esi]
  412652:	pusha  
  412653:	out    dx,al
  412654:	xor    bl,BYTE PTR [edi-0x7a]
  412657:	sahf   
  412658:	gs adc eax,0xa6f36bb9
  41265e:	outs   dx,DWORD PTR ds:[esi]
  41265f:	adc    BYTE PTR [ecx],0xfd
  412662:	lods   eax,DWORD PTR ds:[esi]
  412663:	nop
  412664:	jle    0x41269f
  412666:	sti    
  412667:	or     edx,ebx
  412669:	aas    
  41266a:	adc    dh,BYTE PTR [ebp+0x58]
  41266d:	inc    esi
  41266e:	data16 int 0x69
  412671:	test   al,0x65
  412673:	in     al,dx
  412674:	cmp    al,0xf0
  412676:	call   0x206ebc0e
  41267b:	lods   al,BYTE PTR ds:[esi]
  41267c:	xchg   edx,eax
  41267d:	(bad)  
  41267e:	addr16 push 0xee4e654
  412684:	jne    0x412689
  412686:	sbb    BYTE PTR [esi-0x55afca0d],ah
  41268c:	call   0x5038:0x7dfa6fda
  412693:	idiv   edx
  412695:	sub    BYTE PTR [edi],ch
  412697:	cmp    BYTE PTR [ebx+0x5529892f],al
  41269d:	cmc    
  41269e:	ins    BYTE PTR es:[edi],dx
  41269f:	mov    bl,0xbf
  4126a1:	inc    ecx
  4126a2:	rcl    BYTE PTR ss:[ebp-0x47],cl
  4126a6:	jl     0x412654
  4126a8:	call   0xa2e1:0x31e84954
  4126af:	cmp    ch,BYTE PTR [edx-0x4f]
  4126b2:	and    edi,edi
  4126b4:	sub    eax,0xfc9a5a36
  4126b9:	inc    esp
  4126ba:	pushf  
  4126bb:	adc    al,0xef
  4126bd:	test   DWORD PTR [ebp-0x7d],eax
  4126c0:	int3   
  4126c1:	xor    al,0xee
  4126c3:	inc    ebx
  4126c4:	cmp    cl,BYTE PTR [ebp+0x2d]
  4126c7:	inc    edx
  4126c8:	fnstsw WORD PTR [edi]
  4126ca:	mov    bl,0xa
  4126cc:	ds test eax,0xa170e84
  4126d2:	cmp    DWORD PTR [ebp+0x2e],esi
  4126d5:	inc    ebx
  4126d6:	jns    0x4126d6
  4126d8:	sbb    DWORD PTR [ebp+eax*1+0x15],edi
  4126dc:	jp     0x4126c7
  4126de:	jmp    0xc187:0xa3704c00
  4126e5:	(bad)  
  4126e6:	dec    edi
  4126e7:	sub    bh,BYTE PTR [edx+0x5b]
  4126ea:	fnsave [ebx+0x52]
  4126ed:	cmp    al,0x73
  4126ef:	(bad)  
  4126f0:	and    ch,BYTE PTR [edx-0x178a9bc9]
  4126f6:	in     al,dx
  4126f7:	dec    ebp
  4126f8:	gs mov ebp,0xdcf1cc41
  4126fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ff:	jl     0x41273c
  412701:	popa   
  412702:	inc    eax
  412703:	pop    es
  412704:	fwait
  412705:	arpl   WORD PTR [edi-0x44],ax
  412708:	(bad)  
  412709:	inc    DWORD PTR [eax-0x7f]
  41270c:	call   0x74c1:0x56d8aadd
  412713:	fisub  WORD PTR [edx]
  412715:	ja     0x4126e7
  412717:	lds    esi,FWORD PTR [edx-0x12]
  41271a:	loopne 0x41273d
  41271c:	scas   al,BYTE PTR es:[edi]
  41271d:	sbb    eax,0xf4263827
  412722:	leave  
  412723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412724:	push   0x3e
  412726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412727:	push   cs
  412728:	and    al,0x8c
  41272a:	(bad)  
  41272c:	mov    eax,DWORD PTR [ebp-0x4b7cee0f]
  412732:	lds    eax,FWORD PTR [ebx-0x5f]
  412735:	aas    
  412736:	cs cmp eax,0x7813bd10
  41273c:	das    
  41273d:	cmp    al,0x90
  41273f:	test   DWORD PTR [edi],esp
  412741:	test   BYTE PTR [edi-0x39],0x37
  412745:	add    al,0x5c
  412747:	sub    esp,DWORD PTR [edi]
  412749:	cmp    dh,ch
  41274b:	jo     0x4126d3
  41274d:	and    BYTE PTR [ebx+ebx*4+0x71],cl
  412751:	outs   dx,DWORD PTR ds:[esi]
  412752:	fmul   QWORD PTR [ecx+eax*1+0x23]
  412756:	xchg   edi,eax
  412757:	ror    bl,0x7b
  41275a:	jp     0x412710
  41275c:	(bad)  
  41275d:	jb     0x4127c7
  41275f:	xchg   esi,eax
  412760:	jne    0x412764
  412762:	shr    BYTE PTR [esi],1
  412764:	adc    dl,BYTE PTR [edx+0x5a5fbfe7]
  41276a:	clc    
  41276b:	and    DWORD PTR [eax],ebp
  41276d:	out    0xec,eax
  41276f:	inc    ecx
  412770:	int    0x5a
  412772:	pusha  
  412773:	in     eax,0xd5
  412775:	xchg   DWORD PTR [ebx+ecx*2-0x57882054],edi
  41277c:	ret    
  41277d:	xchg   ebp,eax
  41277e:	xor    al,0xba
  412780:	dec    ebp
  412781:	jecxz  0x4127e0
  412783:	gs and cl,ah
  412786:	js     0x4127cf
  412788:	dec    eax
  412789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41278a:	ja     0x4127ec
  41278c:	pop    esi
  41278d:	stos   DWORD PTR es:[edi],eax
  41278e:	(bad)  
  41278f:	dec    edi
  412790:	add    BYTE PTR [esi+0x4040974b],0x89
  412797:	and    BYTE PTR [edx],cl
  412799:	push   esi
  41279a:	aam    0xeb
  41279c:	pop    esp
  41279d:	leave  
  41279e:	das    
  41279f:	hlt    
  4127a0:	mov    bl,0x5a
  4127a2:	dec    ebx
  4127a3:	mov    ebp,0xd4bfbfbb
  4127a8:	xor    al,0xbd
  4127aa:	nop
  4127ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ac:	gs mov bl,0xbb
  4127af:	pop    esi
  4127b0:	add    eax,ebx
  4127b2:	add    al,0xa2
  4127b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b5:	ja     0x4127f4
  4127b7:	sbb    BYTE PTR [edi-0x25],bl
  4127ba:	mov    ss,WORD PTR [esi-0x2e]
  4127bd:	in     al,dx
  4127be:	into   
  4127bf:	bound  esp,QWORD PTR [ecx-0x4c81c9f0]
  4127c5:	ficomp WORD PTR [edx]
  4127c7:	(bad)  
  4127c8:	aam    0xb1
  4127ca:	int3   
  4127cb:	cwde   
  4127cc:	ins    DWORD PTR es:[edi],dx
  4127cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ce:	sbb    DWORD PTR [esi+edx*2],eax
  4127d1:	adc    ch,BYTE PTR [ebx]
  4127d3:	addr16 dec esp
  4127d5:	aas    
  4127d6:	xchg   esi,eax
  4127d7:	dec    esi
  4127d8:	adc    DWORD PTR [edx+0x1f29b0e7],esp
  4127de:	jns    0x412796
  4127e0:	mov    eax,ds:0x5cbad1cd
  4127e5:	cmp    DWORD PTR [edi],ebp
  4127e7:	lock mov ecx,0xf7e52b0f
  4127ed:	xchg   edi,eax
  4127ee:	std    
  4127ef:	adc    BYTE PTR [eax-0x7d9ba0f6],ah
  4127f5:	divps  xmm7,XMMWORD PTR ds:0xb8699ff4
  4127fc:	repz cmp al,0x38
  4127ff:	push   ebp
  412800:	push   0xfffffffd
  412802:	cwde   
  412803:	data16 (bad) 
  412805:	into   
  412806:	lods   eax,DWORD PTR ds:[esi]
  412807:	idiv   DWORD PTR [edi+ebx*4]
  41280a:	or     DWORD PTR [ecx-0xa],eax
  41280d:	les    edi,FWORD PTR [ecx-0x6d]
  412810:	xor    eax,0xda7eacb7
  412815:	outs   dx,DWORD PTR ds:[esi]
  412816:	neg    BYTE PTR [esi+0x51dd712f]
  41281c:	pop    es
  41281d:	sbb    eax,DWORD PTR ds:[edx-0x4904e933]
  412824:	jbe    0x41282d
  412826:	mov    ds:0x60748192,al
  41282b:	mov    dh,0xc6
  41282d:	pop    es
  41282e:	lea    esp,[ebx*8-0x3cfcea8c]
  412835:	mov    ah,0x86
  412837:	adc    esp,ecx
  412839:	mov    al,bl
  41283b:	inc    ebx
  41283c:	ds inc esp
  41283e:	out    0xe4,al
  412840:	mov    ch,0x4b
  412842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412843:	out    dx,al
  412844:	test   BYTE PTR [ecx-0x723b9ce9],ah
  41284a:	xor    ecx,DWORD PTR [ebx+0x57]
  41284d:	daa    
  41284e:	cmp    eax,0x7104d46f
  412853:	cli    
  412854:	in     eax,dx
  412855:	cs mov esi,0xebe57b34
  41285b:	icebp  
  41285c:	hlt    
  41285d:	in     eax,dx
  41285e:	xor    BYTE PTR [esp+edi*4+0x314f22fb],bh
  412865:	or     ah,BYTE PTR [ecx+0x3d]
  412868:	mov    ebp,0x40e73c02
  41286d:	inc    ecx
  41286e:	mov    esp,?
  412870:	mov    bl,BYTE PTR [esi+0x43e7a5c]
  412876:	(bad)  
  412877:	jmp    0x4128f4
  412879:	popf   
  41287a:	dec    esi
  41287b:	call   0x85876a09
  412880:	dec    ecx
  412881:	and    DWORD PTR ds:0x6290499,0x185415d3
  41288b:	fs popf 
  41288d:	ss jl  0x412874
  412890:	popf   
  412891:	int3   
  412892:	and    edx,esi
  412894:	adc    DWORD PTR [ebx+0x68e76936],esp
  41289a:	retf   0x23fb
  41289d:	in     al,dx
  41289e:	pop    es
  41289f:	cmc    
  4128a0:	fwait
  4128a1:	xor    eax,0xaba8a61
  4128a6:	mov    ds,WORD PTR [eax+0x2ba52e7d]
  4128ac:	jg     0x4128d0
  4128ae:	jg     0x4128cc
  4128b0:	inc    esi
  4128b1:	ret    0x385f
  4128b4:	arpl   WORD PTR [edx+0x2651d103],sp
  4128ba:	adc    BYTE PTR [edx-0x61],0x96
  4128be:	pop    ebx
  4128bf:	cs aas 
  4128c1:	aam    0x66
  4128c3:	push   es
  4128c4:	shr    BYTE PTR [eax+0x19],0xb5
  4128c8:	sbb    BYTE PTR ds:0x796175d3,dl
  4128ce:	aad    0xf6
  4128d0:	cmp    al,cl
  4128d2:	enter  0x6d6b,0x85
  4128d6:	push   eax
  4128d7:	mov    DWORD PTR [esi],ebx
  4128d9:	add    ecx,ebp
  4128db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dc:	pop    es
  4128dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128de:	dec    edi
  4128df:	std    
  4128e0:	out    dx,al
  4128e1:	mov    esi,DWORD PTR [ebx-0x7c28b67]
  4128e7:	imul   BYTE PTR [ebx+0x7b]
  4128ea:	xor    BYTE PTR [ebx-0x64],ah
  4128ed:	jnp    0x4128b6
  4128ef:	repnz rep outs dx,BYTE PTR ds:[esi]
  4128f2:	pop    eax
  4128f3:	pop    ss
  4128f4:	push   ebx
  4128f5:	add    eax,0xd50a75a5
  4128fa:	ss jge 0x412946
  4128fd:	push   es
  4128fe:	aaa    
  4128ff:	dec    edx
  412900:	mov    esi,0xcf37aa4
  412905:	push   ebp
  412906:	mov    dh,0xfe
  412908:	jno    0x4128aa
  41290a:	mov    ch,0x10
  41290c:	pop    ebp
  41290d:	dec    esp
  41290e:	rcr    BYTE PTR [ebp+esi*2-0x278cf1cb],1
  412915:	int    0x9c
  412917:	data16 xchg BYTE PTR [esi-0x614599b7],dl
  41291e:	sbb    BYTE PTR [edi],ch
  412920:	cld    
  412921:	ret    0x71eb
  412924:	lahf   
  412925:	pop    esi
  412926:	jl     0x4128fa
  412928:	jge    0x412983
  41292a:	sbb    eax,0x3b5183d6
  41292f:	cs in  al,0x4c
  412932:	neg    DWORD PTR [ebp-0x6c]
  412935:	gs add al,0x6e
  412938:	cwde   
  412939:	pop    ebp
  41293a:	pop    eax
  41293b:	(bad)  
  41293d:	sti    
  41293e:	sbb    ebp,DWORD PTR [edi-0x333a4857]
  412944:	inc    ebx
  412945:	sbb    BYTE PTR [edx-0x75],dl
  412948:	sub    eax,0xc5c7dd5f
  41294d:	xchg   edx,eax
  41294e:	in     eax,dx
  41294f:	test   al,0xa6
  412951:	jb     0x4128e0
  412953:	jns    0x4129c8
  412955:	sbb    BYTE PTR [eax+0x1e433949],dl
  41295b:	add    DWORD PTR [edi],ebp
  41295d:	xor    BYTE PTR [ebx+0x2c145b36],ah
  412963:	jmp    0xd086c6bf
  412968:	jnp    0x41293f
  41296a:	sub    ah,BYTE PTR [eax-0x25573226]
  412970:	in     eax,dx
  412971:	sar    dh,cl
  412973:	mov    cl,0x9f
  412975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412976:	pop    ebp
  412977:	imul   BYTE PTR [esi+0x18]
  41297a:	inc    esp
  41297b:	sub    al,0xab
  41297d:	rcl    BYTE PTR [ecx-0x1bdf1730],0x7a
  412984:	push   es
  412985:	aad    0x2f
  412987:	(bad)  
  412988:	xor    eax,0x6ffe7d8f
  41298d:	xchg   edx,eax
  41298e:	ffreep st(4)
  412990:	cwde   
  412991:	xchg   BYTE PTR ds:0x3ad94eae,ah
  412997:	ret    
  412998:	push   ecx
  412999:	outs   dx,BYTE PTR ds:[esi]
  41299a:	(bad)  
  41299b:	mov    ebx,0x506e6ff2
  4129a0:	adc    BYTE PTR [esi-0x48],dl
  4129a3:	jno    0x4129ae
  4129a5:	mov    edi,0x36136544
  4129aa:	mov    ecx,0x4d2cc2b9
  4129af:	mov    bh,0x40
  4129b1:	jns    0x4129e7
  4129b3:	push   ds
  4129b4:	adc    ecx,DWORD PTR [ebp+0x16]
  4129b7:	mov    DWORD PTR [edx-0x281aa61f],edx
  4129bd:	int3   
  4129be:	mov    al,ds:0x4940830f
  4129c3:	push   esp
  4129c4:	mov    edx,0x4d5f8f52
  4129c9:	pop    edx
  4129ca:	xchg   ebx,eax
  4129cb:	loopne 0x4129b6
  4129cd:	xor    DWORD PTR [esi-0x4c980442],esi
  4129d3:	xor    bl,BYTE PTR [ecx-0x75ef4b58]
  4129d9:	imul   eax,DWORD PTR [ebx],0x5da91fca
  4129df:	ds mov esi,0x752620a
  4129e5:	cli    
  4129e6:	jnp    0x41297e
  4129e8:	neg    dl
  4129ea:	rcl    BYTE PTR [edx+0x0],0xe3
  4129ee:	cli    
  4129ef:	mov    ebp,0x13b48060
  4129f4:	call   0xe333:0x7141d052
  4129fb:	and    dh,BYTE PTR [ebp+0x69]
  4129fe:	sbb    al,0x4c
  412a00:	lahf   
  412a01:	mov    ds:0x9376ed27,al
  412a06:	pop    esp
  412a07:	mov    edx,0x23b6e9a7
  412a0c:	pop    ecx
  412a0d:	push   esi
  412a0e:	imul   ebx,DWORD PTR [eax],0x7b
  412a11:	pop    ecx
  412a12:	xchg   edx,eax
  412a13:	test   eax,0x2d51b978
  412a18:	leave  
  412a19:	inc    esi
  412a1a:	out    0x82,al
  412a1c:	mov    esi,0x177a5709
  412a21:	pushf  
  412a22:	scas   eax,DWORD PTR es:[edi]
  412a23:	in     al,dx
  412a24:	dec    ecx
  412a25:	popa   
  412a26:	(bad)  [ecx+0x30712d59]
  412a2c:	xchg   edx,eax
  412a2d:	jmp    0x707e:0x6c8c6b05
  412a34:	retf   0xb478
  412a37:	xor    eax,0x19c7964d
  412a3c:	fisttp WORD PTR [edx+0x4c]
  412a3f:	js     0x412a06
  412a41:	mov    ebx,0xaaab06a6
  412a46:	mov    dh,BYTE PTR [edx+0x45]
  412a49:	push   edx
  412a4a:	push   ebx
  412a4b:	gs js  0x4129d0
  412a4e:	les    esi,FWORD PTR ds:0xe003444
  412a54:	sar    DWORD PTR [eax+0x690c71dd],1
  412a5a:	push   ds
  412a5b:	or     bh,BYTE PTR [ecx+0x55708244]
  412a61:	jb     0x412abd
  412a63:	shl    edx,cl
  412a65:	jno    0x412a71
  412a67:	mov    al,ds:0xeda25d0d
  412a6c:	sub    ebp,edi
  412a6e:	and    ebx,DWORD PTR [ecx+0x6d53816]
  412a74:	mov    WORD PTR ds:0x3d6d3539,gs
  412a7a:	mov    al,ds:0x8a98341b
  412a7f:	sahf   
  412a80:	jmp    0xa132:0x4abbcb6d
  412a87:	je     0x412a38
  412a89:	mov    cl,0x4e
  412a8b:	add    bl,cl
  412a8d:	xor    DWORD PTR [esi],esp
  412a8f:	xlat   BYTE PTR ds:[ebx]
  412a90:	enter  0x8f10,0xb
  412a94:	pushf  
  412a95:	push   ebp
  412a96:	jb     0x412abd
  412a98:	push   ecx
  412a99:	sub    eax,0x7cd90319
  412a9e:	add    bh,BYTE PTR [edx-0x67]
  412aa1:	dec    eax
  412aa2:	ins    BYTE PTR es:[edi],dx
  412aa3:	cmp    eax,0x8e546da0
  412aa8:	jl     0x412a87
  412aaa:	jbe    0x412afe
  412aac:	fwait
  412aad:	test   DWORD PTR [ebp+0x59],ebx
  412ab0:	popf   
  412ab1:	ins    DWORD PTR es:[edi],dx
  412ab2:	adc    al,0xca
  412ab4:	loopne 0x412a3f
  412ab6:	iret   
  412ab7:	hlt    
  412ab8:	adc    DWORD PTR [ebp-0x1d],ecx
  412abb:	fs jb  0x412b10
  412abe:	into   
  412abf:	imul   edx,DWORD PTR [edx-0x5a904290],0x409758dd
  412ac9:	inc    eax
  412aca:	and    cl,BYTE PTR [ecx-0x7]
  412acd:	sbb    eax,0xedd4c3b6
  412ad2:	adc    al,0x43
  412ad4:	add    edx,edx
  412ad6:	xchg   ecx,eax
  412ad7:	mov    eax,0x987d7041
  412adc:	scas   eax,DWORD PTR es:[edi]
  412add:	cwde   
  412ade:	push   esi
  412adf:	das    
  412ae0:	cdq    
  412ae1:	ficom  DWORD PTR [ecx-0xf5c2096]
  412ae7:	(bad)  [ebx+edx*1-0x47]
  412aeb:	jmp    0x412b4b
  412aed:	jl     0x412ac5
  412aef:	test   BYTE PTR [edi+0x674c8953],dh
  412af5:	push   0x6a
  412af7:	mov    cl,0xaf
  412af9:	cdq    
  412afa:	es aad 0x70
  412afd:	sub    eax,0x9d585ba0
  412b02:	push   ecx
  412b03:	stc    
  412b04:	repz push es
  412b06:	push   edx
  412b07:	mov    ecx,ds
  412b09:	and    esi,edx
  412b0b:	sub    BYTE PTR ds:0x21f2e107,0x0
  412b12:	ret    
  412b13:	add    dh,BYTE PTR [eax]
  412b15:	daa    
  412b16:	mov    eax,0xfab2fb71
  412b1b:	and    bl,BYTE PTR [esi]
  412b1d:	aas    
  412b1e:	jne    0x412afb
  412b20:	(bad)  
  412b21:	test   al,0x26
  412b23:	jg     0x412ab2
  412b25:	fwait
  412b26:	mov    dl,0x13
  412b28:	js     0x412ad8
  412b2a:	jae    0x412af9
  412b2c:	cmp    eax,0x2c9d45a9
  412b31:	mov    WORD PTR [eax-0x7e],?
  412b34:	mov    ebx,0xe8a06575
  412b39:	mov    esi,0x54a59c86
  412b3e:	jb     0x412b18
  412b40:	push   dx
  412b42:	inc    esp
  412b43:	(bad)
  412b46:	loopne 0x412bb9
  412b48:	pop    ss
  412b49:	and    dl,0x64
  412b4c:	les    ebx,FWORD PTR [edx+0x6b]
  412b4f:	dec    esi
  412b50:	sbb    dh,BYTE PTR [edx]
  412b52:	mov    al,ds:0xb9827b24
  412b57:	jl     0x412b9a
  412b59:	mov    dh,0x13
  412b5b:	mov    dl,0x7c
  412b5d:	imul   ecx,DWORD PTR [edi-0x4c47e2b],0x8448f95
  412b67:	repnz xor al,BYTE PTR [ebp-0x12d2132c]
  412b6e:	inc    ecx
  412b6f:	(bad)  
  412b72:	push   ebx
  412b73:	in     eax,0xe8
  412b75:	mov    DWORD PTR [ebx+0x3465e4eb],esi
  412b7b:	jg     0x412bac
  412b7d:	mov    bh,0xa9
  412b7f:	fsub   DWORD PTR [esi]
  412b81:	push   esp
  412b82:	xor    bh,BYTE PTR [edx+0x16413a30]
  412b88:	push   ebp
  412b89:	out    0x3a,al
  412b8b:	das    
  412b8c:	leave  
  412b8d:	loopne 0x412b2f
  412b8f:	jb     0x412bfc
  412b91:	mov    ebp,0x12628a96
  412b96:	push   ss
  412b97:	push   ss
  412b98:	adc    al,BYTE PTR [edi+ecx*8]
  412b9b:	and    al,0x4e
  412b9d:	adc    bh,bl
  412b9f:	xor    cl,bl
  412ba1:	mov    dl,0x94
  412ba3:	xor    ah,BYTE PTR [ebp-0x19d804ea]
  412ba9:	cld    
  412baa:	mov    esi,0xd41c1fe2
  412baf:	and    ebp,DWORD PTR [ebp+0x2e]
  412bb2:	daa    
  412bb3:	aam    0xcd
  412bb5:	jl     0x412bf2
  412bb7:	call   0x7ec2:0xfb731348
  412bbe:	mov    al,ds:0xc910914c
  412bc3:	imul   ebp,DWORD PTR [edx+0x68bf9e5a],0x65
  412bca:	(bad)  
  412bcb:	fmulp  st(6),st
  412bcd:	lods   al,BYTE PTR ds:[esi]
  412bce:	(bad)
  412bd2:	jne    0x412be1
  412bd4:	add    cl,0x33
  412bd7:	cwde   
  412bd8:	not    BYTE PTR [ecx]
  412bda:	xor    al,0x60
  412bdc:	jecxz  0x412c5c
  412bde:	and    edi,DWORD PTR ds:0x8fd72bd2
  412be4:	inc    ebx
  412be5:	cdq    
  412be6:	test   bl,ch
  412be8:	pop    ebp
  412be9:	jge    0x412bb5
  412beb:	sbb    bh,ch
  412bed:	jge    0x412b80
  412bef:	sbb    ah,BYTE PTR [edx]
  412bf1:	pop    esp
  412bf2:	cwde   
  412bf3:	xor    DWORD PTR [esi+0x2a3d26cf],ecx
  412bf9:	scas   eax,DWORD PTR es:[edi]
  412bfa:	push   ds
  412bfb:	out    0xf7,al
  412bfd:	adc    BYTE PTR [esi],0x16
  412c00:	test   DWORD PTR [edi-0x62886ab3],ebx
  412c06:	mov    ecx,0x32d7371d
  412c0b:	inc    edx
  412c0c:	mov    esi,0x2098eca9
  412c11:	call   0x92c:0x429b4f5f
  412c18:	dec    edx
  412c19:	jmp    0xe76d70db
  412c1e:	repz addr16 je 0x412be9
  412c22:	fidivr DWORD PTR [ebx-0x38c88157]
  412c28:	pop    edi
  412c29:	or     esp,DWORD PTR ds:0x91663a98
  412c2f:	mov    ebx,ebx
  412c31:	add    dh,BYTE PTR [esi+ecx*1]
  412c34:	arpl   WORD PTR [esi+0x5f9a357e],sp
  412c3a:	mov    esp,0x9a9586f8
  412c3f:	push   ss
  412c40:	or     dh,dl
  412c42:	fadd   QWORD PTR [ebp-0x1f]
  412c45:	push   0x72
  412c47:	out    dx,al
  412c48:	fs push 0x28225812
  412c4e:	adc    ebp,ebp
  412c50:	mov    BYTE PTR [esp+edx*1+0x65],dl
  412c54:	cs inc edi
  412c56:	popa   
  412c57:	aad    0x20
  412c59:	repnz fidivr WORD PTR fs:[edx]
  412c5d:	jmp    0x2054:0x80c6ef26
  412c64:	sbb    BYTE PTR [edx+0x75],ah
  412c67:	add    ah,ah
  412c69:	push   ds
  412c6a:	lods   eax,DWORD PTR ds:[esi]
  412c6b:	imul   ebp,DWORD PTR [eax],0x5fdbf3fe
  412c71:	stc    
  412c72:	mov    DWORD PTR cs:0x784aa89b,edx
  412c79:	stos   DWORD PTR es:[edi],eax
  412c7a:	out    0x20,eax
  412c7c:	sbb    al,0xee
  412c7e:	mov    ds:0xd5f4f79c,eax
  412c83:	pop    esp
  412c84:	dec    esi
  412c85:	ins    BYTE PTR es:[edi],dx
  412c86:	outs   dx,BYTE PTR ds:[esi]
  412c87:	sahf   
  412c88:	mov    edi,0x112b0f1e
  412c8d:	shl    esp,cl
  412c8f:	push   edx
  412c90:	out    0xdc,eax
  412c92:	lea    edx,[ebp+ebp*2-0x2d53a8c6]
  412c99:	int3   
  412c9a:	mov    eax,0xbe2d8c5d
  412c9f:	mov    dh,0x17
  412ca1:	cli    
  412ca2:	lahf   
  412ca3:	outs   dx,DWORD PTR ds:[esi]
  412ca4:	scas   al,BYTE PTR es:[edi]
  412ca5:	jne    0x412d0b
  412ca7:	sbb    DWORD PTR ds:0x4be0e5fb,esi
  412cad:	dec    esp
  412cae:	pusha  
  412caf:	ret    0x3351
  412cb2:	cwde   
  412cb3:	dec    ecx
  412cb4:	test   BYTE PTR ds:0xef9bf79e,ah
  412cba:	enter  0x9c7b,0x68
  412cbe:	push   ss
  412cbf:	jmp    0xa3e5e8e
  412cc4:	sbb    DWORD PTR [ebx],ebx
  412cc6:	cmp    bl,BYTE PTR [ebp+ecx*4+0x6c]
  412cca:	cmovns edi,DWORD PTR [ecx+0x44780ae2]
  412cd1:	jo     0x412c7b
  412cd3:	push   cs
  412cd4:	fcomp  DWORD PTR [esp+ebx*4]
  412cd7:	xchg   esi,eax
  412cd8:	imul   DWORD PTR [ebx+0x45]
  412cdb:	and    ebp,edi
  412cdd:	add    al,BYTE PTR [eax-0x24adb53]
  412ce3:	jmp    FWORD PTR [eax]
  412ce5:	mov    bh,0xc7
  412ce7:	sbb    edx,esi
  412ce9:	pop    ss
  412cea:	cli    
  412ceb:	mov    cs,WORD PTR [ebp+0x49]
  412cee:	das    
  412cef:	test   al,0xe5
  412cf1:	leave  
  412cf2:	dec    edi
  412cf3:	dec    esi
  412cf4:	sbb    eax,0xbf287eea
  412cf9:	sub    al,0x62
  412cfb:	or     eax,0x333b29c0
  412d00:	int3   
  412d01:	neg    DWORD PTR [ebx]
  412d03:	pusha  
  412d04:	dec    edx
  412d05:	mov    edx,0x7702042f
  412d0a:	dec    ebx
  412d0b:	inc    edx
  412d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d0d:	fdiv   DWORD PTR [edi]
  412d0f:	jns    0x412d38
  412d11:	mov    dh,0xff
  412d13:	mov    bh,0x32
  412d15:	scas   eax,DWORD PTR es:[edi]
  412d16:	mov    dh,0xc0
  412d18:	jns    0x412d41
  412d1a:	in     eax,0x21
  412d1c:	sub    eax,0x79da210d
  412d21:	add    al,0xc1
  412d23:	bound  edx,QWORD PTR [esi-0xeaeb0b0]
  412d29:	sub    ebx,edi
  412d2b:	mov    edx,0x8b20db62
  412d30:	retw   0x9a87
  412d34:	bound  eax,QWORD PTR [edi+0x6d]
  412d37:	xchg   dh,ah
  412d39:	aad    0x16
  412d3b:	mov    ah,0x1
  412d3d:	adc    DWORD PTR [ecx],ebp
  412d3f:	or     al,0x3a
  412d41:	ficomp WORD PTR [ebp+0x14]
  412d44:	cmp    ecx,ebx
  412d46:	ss (bad) 
  412d48:	mov    ah,0x2d
  412d4a:	push   ds
  412d4b:	idiv   BYTE PTR [ebx-0x7c3ddb36]
  412d51:	or     al,0x6c
  412d53:	or     DWORD PTR [ecx+0x70f03601],edi
  412d59:	outs   dx,BYTE PTR ds:[si]
  412d5b:	mov    al,ds:0xc1f927aa
  412d60:	mov    ch,0xca
  412d62:	loopne 0x412cf2
  412d64:	adc    eax,0x726e37ff
  412d69:	mov    bl,BYTE PTR [ecx-0x729e713b]
  412d6f:	mov    al,0x2f
  412d71:	jle    0x412d90
  412d73:	sub    eax,0xad731a8f
  412d78:	mov    dl,cl
  412d7a:	je     0x412d02
  412d7c:	push   eax
  412d7d:	mov    ch,0x75
  412d7f:	clc    
  412d80:	ror    esp,1
  412d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d83:	in     al,dx
  412d84:	bound  esp,QWORD PTR [esi+0x7c75e737]
  412d8a:	fdiv   st(1),st
  412d8c:	push   ss
  412d8d:	xchg   ecx,eax
  412d8e:	iret   
  412d8f:	(bad)  [edi+0x2f]
  412d92:	mov    ebx,0x65d6f438
  412d97:	popf   
  412d98:	xchg   bl,al
  412d9a:	call   0x9e30aebf
  412d9f:	das    
  412da0:	les    ebp,FWORD PTR [ebp-0x6f]
  412da3:	popf   
  412da4:	lock retf 
  412da6:	cmp    eax,0xd5e90871
  412dab:	das    
  412dac:	dec    edx
  412dad:	stos   BYTE PTR es:[edi],al
  412dae:	outs   dx,BYTE PTR ds:[esi]
  412daf:	out    dx,eax
  412db0:	inc    edi
  412db1:	jnp    0x412d62
  412db3:	(bad)
  412db6:	lods   al,BYTE PTR ds:[esi]
  412db7:	clc    
  412db8:	mov    edi,0x2bf2c635
  412dbd:	sbb    eax,0xf774a10
  412dc2:	ja     0x412d92
  412dc4:	loope  0x412e3f
  412dc6:	enter  0x27fd,0xbb
  412dca:	cld    
  412dcb:	shl    bh,cl
  412dcd:	aam    0x14
  412dcf:	aas    
  412dd0:	add    eax,0x3d7774dc
  412dd5:	fdivr  QWORD PTR [edx+0x27dcf846]
  412ddb:	(bad)  
  412ddc:	iret   
  412ddd:	dec    esi
  412dde:	test   al,0x2b
  412de0:	dec    edx
  412de1:	mov    DWORD PTR [ebx-0x34],esp
  412de4:	pop    ebp
  412de5:	pop    edi
  412de6:	xlat   BYTE PTR ds:[ebx]
  412de7:	fadd   DWORD PTR [edx+ebx*2+0x3b]
  412deb:	mov    edx,tr5
  412dee:	mov    bl,0xc0
  412df0:	sub    esp,edx
  412df2:	xor    eax,0x953c150
  412df7:	and    ch,bh
  412df9:	jge    0x412de7
  412dfb:	and    dh,BYTE PTR [ebx]
  412dfd:	mov    ds:0xe68532b5,al
  412e02:	mov    al,BYTE PTR [esp+esi*8+0x6a]
  412e06:	enter  0x6096,0x4
  412e0a:	pop    ebx
  412e0b:	hlt    
  412e0c:	cmp    cl,dh
  412e0e:	xor    al,0x96
  412e10:	pop    ebx
  412e11:	xlat   BYTE PTR ds:[ebx]
  412e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e13:	sub    eax,0x9a0000b6
  412e18:	cwde   
  412e19:	mov    bh,0xbd
  412e1b:	sbb    eax,DWORD PTR [ecx]
  412e1d:	das    
  412e1e:	sbb    BYTE PTR [edi-0x105351f0],ah
  412e24:	and    al,0xb2
  412e26:	pop    esp
  412e27:	dec    edx
  412e28:	pop    ss
  412e29:	cld    
  412e2a:	int    0x80
  412e2c:	mov    bl,0x5d
  412e2e:	push   edx
  412e2f:	adc    eax,0x69b0baff
  412e34:	and    eax,0x4d426c1
  412e39:	mov    bh,BYTE PTR [esi]
  412e3b:	jle    0x412ebb
  412e3d:	mov    ebx,eax
  412e3f:	add    al,0xb5
  412e41:	add    eax,0x2d68a908
  412e46:	or     BYTE PTR [ecx+edi*4-0x1c],cl
  412e4a:	call   0x5327f828
  412e4f:	mov    ch,0x70
  412e51:	fwait
  412e52:	dec    ebx
  412e53:	int3   
  412e54:	pop    esp
  412e55:	push   ebp
  412e56:	xchg   ebx,eax
  412e57:	(bad)  
  412e58:	pop    ecx
  412e59:	or     al,0x8e
  412e5b:	adc    edi,DWORD PTR [eax+0x6485de55]
  412e61:	sbb    al,0x24
  412e63:	mov    ah,0xc5
  412e65:	sbb    eax,eax
  412e67:	sbb    DWORD PTR [ebp-0x76],edi
  412e6a:	popa   
  412e6b:	cs ret 
  412e6d:	lods   al,BYTE PTR ds:[esi]
  412e6e:	clc    
  412e6f:	mov    BYTE PTR [ebp+0x7a1faf46],dl
  412e75:	and    BYTE PTR [ebx-0x61da54c5],cl
  412e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7c:	jnp    0x412e8b
  412e7e:	scas   al,BYTE PTR es:[edi]
  412e7f:	dec    ebx
  412e80:	sets   BYTE PTR [eax]
  412e83:	jle    0x412e8f
  412e85:	pop    ds
  412e86:	imul   ecx,DWORD PTR [edi],0x7246902
  412e8c:	scas   eax,DWORD PTR es:[edi]
  412e8d:	into   
  412e8e:	push   ebp
  412e8f:	outs   dx,DWORD PTR ds:[esi]
  412e90:	add    BYTE PTR [esi],dh
  412e92:	mov    ebp,DWORD PTR [ebx]
  412e94:	push   esi
  412e95:	gs mov ah,0xbe
  412e98:	or     DWORD PTR [edi],esi
  412e9a:	adc    eax,ebx
  412e9c:	or     eax,0x2329e604
  412ea1:	int    0x81
  412ea3:	test   eax,0xca3022bb
  412ea8:	bound  ecx,QWORD PTR [ecx+0x158d4085]
  412eae:	mov    bl,0xab
  412eb0:	cmp    DWORD PTR [edx+0x106a37eb],eax
  412eb6:	idiv   al
  412eb8:	pushf  
  412eb9:	fwait
  412eba:	in     al,dx
  412ebb:	mov    esi,DWORD PTR [eax]
  412ebd:	sub    eax,0xbef95609
  412ec2:	sbb    bl,dl
  412ec4:	sti    
  412ec5:	or     al,0xea
  412ec7:	leave  
  412ec8:	push   ebx
  412ec9:	sbb    edx,0xf
  412ecc:	mov    DWORD PTR [ecx+0x6c],0x57df5ef0
  412ed3:	adc    cl,BYTE PTR [ebp-0x3ca97c26]
  412ed9:	inc    ebx
  412eda:	mov    bl,dl
  412edc:	pusha  
  412edd:	inc    ebp
  412ede:	xchg   esp,eax
  412edf:	mov    eax,ds:0x12c30252
  412ee4:	sbb    al,0x97
  412ee6:	mov    BYTE PTR [ebx-0x6f40a283],bh
  412eec:	jecxz  0x412e8e
  412eee:	scas   al,BYTE PTR es:[edi]
  412eef:	mov    ebp,0x9dc5e064
  412ef4:	or     al,0x4
  412ef6:	ficomp DWORD PTR [edi+0x22]
  412ef9:	cmp    BYTE PTR ds:0x71386c18,0xb2
  412f00:	mov    bh,0xfc
  412f02:	add    eax,0xfaf51a7a
  412f07:	mov    es,WORD PTR [ebx-0x7b4093f3]
  412f0d:	icebp  
  412f0e:	cs (bad) 
  412f10:	dec    eax
  412f11:	inc    eax
  412f12:	(bad)  
  412f13:	hlt    
  412f14:	sub    BYTE PTR [edi],al
  412f16:	inc    ebx
  412f17:	add    BYTE PTR [ecx+0x3216c3c3],al
  412f1d:	inc    edi
  412f1e:	mov    ecx,0xd7a6c321
  412f23:	mov    esi,0x660299c2
  412f28:	test   BYTE PTR [ebp+0x1f],cl
  412f2b:	bound  esp,QWORD PTR [ebp-0x7f]
  412f2e:	stos   DWORD PTR es:[edi],eax
  412f2f:	sbb    al,0x9b
  412f31:	xor    al,0xaa
  412f33:	mov    eax,0x6d15111f
  412f38:	mov    edi,0x208a587a
  412f3d:	int3   
  412f3e:	les    eax,FWORD PTR [ebp-0x26685446]
  412f44:	dec    edx
  412f45:	push   ss
  412f46:	sub    ch,al
  412f48:	sub    eax,0x70239032
  412f4d:	test   DWORD PTR [ebx+0x38dde637],ecx
  412f53:	sub    ch,BYTE PTR [eax+0xb7db16b]
  412f59:	jp     0x412f0a
  412f5b:	or     BYTE PTR [esp+ebp*4+0x71],ch
  412f5f:	xor    esi,DWORD PTR [eax]
  412f61:	add    eax,0xacf278e7
  412f66:	or     eax,0x143664d3
  412f6b:	xchg   edi,eax
  412f6c:	xchg   esi,eax
  412f6d:	aaa    
  412f6e:	push   cs
  412f6f:	mov    edi,0x9e645238
  412f74:	pop    es
  412f75:	loop   0x412fe9
  412f77:	dec    ebp
  412f78:	add    BYTE PTR [edi-0x4319af51],cl
  412f7e:	add    eax,0xb605c883
  412f84:	dec    esp
  412f85:	pop    ebp
  412f86:	xchg   BYTE PTR [edi-0x3b9948f1],cl
  412f8c:	mov    ebx,0x3ecbb18f
  412f91:	mov    esp,0xbac29415
  412f96:	stc    
  412f97:	or     ebp,DWORD PTR [edx+0x19]
  412f9a:	adc    BYTE PTR [eax-0x6e],bl
  412f9d:	in     al,dx
  412f9e:	je     0x412fdc
  412fa0:	mov    al,0x8d
  412fa2:	dec    edx
  412fa3:	xchg   DWORD PTR [esi],edi
  412fa5:	xlat   BYTE PTR ds:[ebx]
  412fa6:	imul   edx,DWORD PTR ds:0x17dc3160,0xffffffbe
  412fad:	rcr    esi,0x53
  412fb0:	jmp    0x371cdf33
  412fb5:	into   
  412fb6:	pop    ds
  412fb7:	sbb    eax,0x5ccebe22
  412fbc:	add    al,0xe1
  412fbe:	mov    edx,0x5fb64e03
  412fc3:	cld    
  412fc4:	push   ecx
  412fc5:	add    ecx,DWORD PTR ds:0x7fe6894a
  412fcb:	pop    es
  412fcc:	cmp    BYTE PTR [edx+0x48],cl
  412fcf:	inc    ebx
  412fd0:	sub    DWORD PTR [ecx+0x62000b19],ecx
  412fd6:	fwait
  412fd7:	adc    BYTE PTR [edi-0x55],0xa4
  412fdb:	addr16 mov ds:0x9596,eax
  412fdf:	addr16 add dh,cl
  412fe2:	push   edx
  412fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe4:	xor    al,0x12
  412fe6:	push   es
  412fe7:	jp     0x412ff3
  412fe9:	push   ss
  412fea:	fwait
  412feb:	mov    WORD PTR [ecx+0x131c01c4],gs
  412ff1:	cwde   
  412ff2:	ins    DWORD PTR es:[edi],dx
  412ff3:	pop    ss
  412ff4:	cwde   
  412ff5:	jb     0x412fe2
  412ff7:	push   ds
  412ff8:	iret   
  412ff9:	jmp    0xf31a:0x60d801d5
  413000:	call   0xf697:0x9b3c7a2b
  413007:	lds    ebp,FWORD PTR [edi]
  413009:	adc    eax,0x8fa94c83
  41300e:	jbe    0x412f91
  413010:	fimul  DWORD PTR [ebp-0x53b4e9aa]
  413016:	dec    esi
  413017:	int3   
  413018:	aaa    
  413019:	popf   
  41301a:	rol    BYTE PTR [edx+0x66],0xfe
  41301e:	pop    esp
  41301f:	in     al,0xd0
  413021:	push   edx
  413022:	pusha  
  413023:	jno    0x412feb
  413025:	xchg   ecx,eax
  413026:	sub    ecx,DWORD PTR [ebx+0x39a866e4]
  41302c:	(bad)  
  41302d:	fistp  QWORD PTR [eax+0x34b88893]
  413033:	cmc    
  413034:	sbb    dl,BYTE PTR [esp+ebx*4-0x49]
  413038:	jbe    0x413046
  41303a:	shr    DWORD PTR [edi-0x31],0x1a
  41303e:	sbb    DWORD PTR [ebx],esp
  413040:	lods   al,BYTE PTR ds:[esi]
  413041:	jae    0x413098
  413043:	pop    es
  413044:	cli    
  413045:	adc    dh,BYTE PTR [eax]
  413047:	xchg   esi,eax
  413048:	pop    eax
  413049:	int    0x7
  41304b:	(bad)  
  41304c:	inc    edx
  41304d:	cdq    
  41304e:	push   esp
  41304f:	out    0x3f,al
  413051:	jns    0x413024
  413053:	cmp    ebx,DWORD PTR [esi]
  413055:	imul   edi,DWORD PTR [eax],0xa08ce547
  41305b:	push   esp
  41305c:	xchg   esi,eax
  41305d:	test   eax,0xe0a9d8f4
  413062:	mov    ds:0x88bfd309,al
  413067:	mov    ebp,0xb389f494
  41306c:	int3   
  41306d:	ins    BYTE PTR es:[edi],dx
  41306e:	(bad)  
  41306f:	sub    DWORD PTR [ecx-0x4f],ebp
  413072:	sbb    al,0x81
  413074:	jo     0x41305b
  413076:	dec    ecx
  413077:	mov    ebp,0x52dc2cad
  41307c:	dec    ebx
  41307d:	aaa    
  41307e:	div    BYTE PTR [eax+ebx*8-0x20]
  413082:	popf   
  413083:	clc    
  413084:	xchg   edi,eax
  413085:	push   ds
  413086:	pop    ebx
  413087:	xlat   BYTE PTR ds:[ebx]
  413088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413089:	pop    edi
  41308a:	loop   0x41309a
  41308c:	clc    
  41308d:	leave  
  41308e:	add    bh,dh
  413090:	in     al,0x41
  413092:	mov    ecx,0xb9914ef5
  413097:	adc    eax,0xd1ef1b50
  41309c:	inc    ebx
  41309d:	sub    DWORD PTR ds:0xb7196774,ecx
  4130a3:	jns    0x4130e3
  4130a5:	adc    al,0xb5
  4130a7:	arpl   WORD PTR [edx+0x460068d9],si
  4130ad:	cmp    edi,DWORD PTR [ecx+0x4c0d26bf]
  4130b3:	aam    0x48
  4130b5:	dec    eax
  4130b6:	pop    ebx
  4130b7:	pushf  
  4130b8:	mov    esi,0xfec9f4d7
  4130bd:	es jne 0x41313f
  4130c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c1:	jmp    0x4130ca
  4130c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c4:	add    DWORD PTR [ecx],esp
  4130c6:	test   cl,bl
  4130c8:	adc    dh,0x29
  4130cb:	inc    ebx
  4130cc:	cmp    DWORD PTR [esi+0x3097dea7],0xa6cafa4e
  4130d6:	mov    ebp,0x38010942
  4130db:	out    0x4a,al
  4130dd:	test   ecx,ecx
  4130df:	add    ecx,DWORD PTR [edi+0x48171bbc]
  4130e5:	lock pop esp
  4130e7:	imul   ebp,DWORD PTR [ebx],0xf38924d0
  4130ed:	int3   
  4130ee:	int3   
  4130ef:	pop    eax
  4130f0:	sbb    ch,BYTE PTR [esi-0x1dcc58e6]
  4130f6:	inc    eax
  4130f7:	dec    edx
  4130f8:	ret    
  4130f9:	imul   esp,DWORD PTR [ebp+0x1e],0x2e
  4130fd:	mov    ds:0x8317cf64,eax
  413102:	fsub   QWORD PTR [esi-0x55]
  413105:	cmp    al,0x94
  413107:	lea    ebx,[edx]
  413109:	out    0x8f,eax
  41310b:	rcl    ch,cl
  41310d:	fcomi  st,st(7)
  41310f:	sub    ebx,ecx
  413111:	jmp    0x4130f1
  413113:	loopne 0x4130e8
  413115:	loopne 0x41310e
  413117:	stc    
  413118:	add    ch,BYTE PTR [eax+0xc87cdef]
  41311e:	icebp  
  41311f:	call   0x303dca91
  413124:	loopne 0x4130eb
  413126:	xor    ebp,0xd41845c1
  41312c:	xchg   ecx,eax
  41312d:	adc    cl,ch
  41312f:	or     ecx,esp
  413131:	jle    0x41318b
  413133:	int3   
  413134:	push   esi
  413135:	gs sbb eax,0x6e17ca48
  41313b:	cmp    BYTE PTR ds:0x4be3fba6,0xf6
  413142:	inc    ecx
  413143:	or     esi,DWORD PTR [ebx-0x28aacf09]
  413149:	stos   BYTE PTR es:[edi],al
  41314a:	dec    ebp
  41314b:	push   0x116b5f1a
  413150:	pop    esi
  413151:	sbb    al,0xd5
  413154:	or     esp,DWORD PTR [ebx]
  413156:	inc    eax
  413157:	xchg   ebp,eax
  413158:	cwde   
  413159:	stos   BYTE PTR es:[edi],al
  41315a:	sub    dh,ch
  41315c:	adc    bl,BYTE PTR [ebp+0x2e]
  41315f:	push   esp
  413160:	data16 lahf 
  413162:	test   al,0xea
  413164:	out    dx,al
  413165:	out    dx,al
  413166:	cmc    
  413167:	outs   dx,BYTE PTR ds:[esi]
  413168:	aad    0x8c
  41316a:	neg    BYTE PTR [ebx-0x1fb4fd68]
  413170:	xchg   edi,eax
  413171:	jecxz  0x413121
  413173:	sbb    DWORD PTR [ecx],ebp
  413175:	mov    eax,ds:0x34893ba2
  41317a:	sub    eax,0xa3fc1ff9
  41317f:	cmp    BYTE PTR ds:0xbc9f83fd,dh
  413185:	cmp    al,0xd4
  413187:	push   0x52
  413189:	pop    ebx
  41318a:	pop    edi
  41318b:	rcr    esi,0x1f
  41318e:	inc    ebx
  41318f:	xor    al,0x37
  413191:	lahf   
  413192:	or     eax,0x8f5ad803
  413197:	je     0x413160
  413199:	in     al,dx
  41319a:	sbb    al,BYTE PTR [ebx+0x331825e9]
  4131a0:	mov    ah,0x4e
  4131a2:	mov    eax,0x69f0e87f
  4131a7:	aad    0x1f
  4131a9:	aas    
  4131aa:	pop    si
  4131ac:	ret    
  4131ad:	or     eax,0xbc6b03f6
  4131b2:	sahf   
  4131b3:	dec    ecx
  4131b4:	sar    DWORD PTR [esi],1
  4131b6:	adc    eax,0xd4f86348
  4131bb:	xor    DWORD PTR [esi+0x51],0x59
  4131bf:	cwde   
  4131c0:	cmp    eax,0xacbaacf4
  4131c5:	not    DWORD PTR [edi]
  4131c7:	arpl   ax,ax
  4131c9:	pop    esi
  4131ca:	or     DWORD PTR [edx+0x430cbfeb],esp
  4131d0:	jne    0x41322d
  4131d2:	pop    ebp
  4131d3:	(bad)  
  4131d4:	in     al,0xd8
  4131d6:	outs   dx,BYTE PTR ds:[esi]
  4131d7:	xchg   BYTE PTR [edi],dl
  4131d9:	nop
  4131da:	int3   
  4131db:	pop    esi
  4131dc:	add    al,0x94
  4131de:	inc    BYTE PTR [ecx]
  4131e0:	cdq    
  4131e1:	mov    cl,0xb2
  4131e3:	pop    es
  4131e4:	aas    
  4131e5:	lea    edi,[esi+0x50e749fb]
  4131eb:	retf   0xcca1
  4131ee:	sub    bh,BYTE PTR [ebx+0x1e]
  4131f1:	lods   al,BYTE PTR ds:[esi]
  4131f2:	out    dx,eax
  4131f3:	cld    
  4131f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f5:	sbb    eax,0xbc000c46
  4131fa:	ret    0x3bef
  4131fd:	or     DWORD PTR [ebx-0x53fac6cc],esi
  413203:	jmp    0x4131ff
  413205:	add    BYTE PTR [esi-0x76337574],cl
  41320b:	xor    DWORD PTR [esi+0x6e],ebx
  41320e:	jns    0x41324d
  413210:	adc    WORD PTR ds:0x2c955ee9,0x40
  413218:	push   ecx
  413219:	jne    0x41324c
  41321b:	dec    eax
  41321c:	out    0xec,al
  41321e:	mov    bl,0x34
  413220:	mov    ds:0x50fa8a39,eax
  413225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413226:	(bad)  
  413227:	mov    edx,DWORD PTR [ebx]
  413229:	xchg   ecx,eax
  41322a:	ret    
  41322b:	popf   
  41322c:	pushf  
  41322d:	dec    edi
  41322e:	jle    0x41324c
  413230:	lods   al,BYTE PTR ds:[esi]
  413231:	not    BYTE PTR [edx-0x8]
  413234:	xor    DWORD PTR [eax+0x12],esi
  413237:	les    ebx,FWORD PTR [eax-0x7275d028]
  41323d:	xchg   ecx,eax
  41323e:	inc    edx
  41323f:	stos   BYTE PTR es:[edi],al
  413240:	call   0xcf56fb92
  413245:	fldcw  WORD PTR [eax]
  413247:	bound  edx,QWORD PTR [ebp-0x1]
  41324a:	mov    ebp,0xc735f5c
  41324f:	pop    es
  413250:	lods   al,BYTE PTR ds:[esi]
  413251:	fdivr  DWORD PTR [esp+edx*1]
  413254:	push   ss
  413255:	test   al,0x7b
  413257:	or     al,0x3c
  413259:	mov    fs,WORD PTR [edx]
  41325b:	fild   WORD PTR [ebx+0x70]
  41325e:	stc    
  41325f:	and    ah,al
  413261:	mov    ds:0x5c4f85df,al
  413266:	jns    0x4132bd
  413268:	stc    
  413269:	pop    ds
  41326a:	jg     0x41320b
  41326c:	or     BYTE PTR [edi],ah
  41326e:	push   esi
  41326f:	push   eax
  413270:	or     DWORD PTR [ecx+0x271aa782],0xffffff84
  413277:	add    bh,BYTE PTR [eax-0x51]
  41327a:	into   
  41327b:	xlat   BYTE PTR ds:[ebx]
  41327c:	arpl   WORD PTR [esp+edi*2],ax
  41327f:	shl    DWORD PTR [edx+0x6a],1
  413282:	mov    fs,WORD PTR [edi-0x8f2be68]
  413288:	mov    bl,0x40
  41328a:	jo     0x413309
  41328c:	inc    BYTE PTR [ebx-0x3699c50]
  413292:	dec    edi
  413293:	and    dh,bl
  413295:	xor    eax,0x8467e6cc
  41329a:	or     al,0x6b
  41329c:	fdivr  st(2),st
  41329e:	in     al,dx
  41329f:	push   ecx
  4132a0:	inc    esi
  4132a1:	mov    ch,0xdb
  4132a3:	popa   
  4132a4:	jae    0x4132c6
  4132a6:	push   ds
  4132a7:	mov    edx,0x4ff90ff6
  4132ac:	sbb    ebx,DWORD PTR ds:0xb3b3332b
  4132b2:	push   ebp
  4132b3:	mov    ah,0x56
  4132b5:	fwait
  4132b6:	aad    0xdc
  4132b8:	rcl    DWORD PTR [ebp-0x416ca48e],1
  4132be:	ins    BYTE PTR es:[edi],dx
  4132bf:	outs   dx,DWORD PTR ds:[esi]
  4132c0:	cs cmc 
  4132c2:	mov    dl,0x7b
  4132c4:	test   eax,0xf85dacc2
  4132ca:	jne    0x4132ac
  4132cc:	xchg   edi,eax
  4132cd:	ins    DWORD PTR es:[edi],dx
  4132ce:	ds push edi
  4132d0:	pop    edi
  4132d1:	ret    
  4132d2:	sbb    BYTE PTR [eax+0x755f3e25],cl
  4132d8:	imul   edi,DWORD PTR [eax+0x1],0x4b
  4132dc:	mov    ebp,0x7f15c36c
  4132e1:	rcr    ah,1
  4132e3:	retf   0x3c5
  4132e6:	mov    al,0xe9
  4132e8:	adc    BYTE PTR [ebx],bh
  4132ea:	xor    al,0xa5
  4132ec:	ins    BYTE PTR es:[edi],dx
  4132ed:	cmp    eax,0xc0977164
  4132f2:	cs ja  0x413363
  4132f5:	xor    DWORD PTR [eax-0x1db3d606],0xd18bd7c
  4132ff:	xlat   BYTE PTR ds:[ebx]
  413300:	add    eax,DWORD PTR [ebx]
  413302:	lods   eax,DWORD PTR ds:[esi]
  413303:	jg     0x41335e
  413305:	xor    DWORD PTR ds:0xd8ee3992,ecx
  41330b:	push   cs
  41330c:	outs   dx,DWORD PTR ds:[esi]
  41330d:	xor    BYTE PTR [eax],dh
  41330f:	mov    dh,0x5d
  413311:	push   0xf
  413313:	sbb    DWORD PTR [edx-0xc075f4b],ebx
  413319:	inc    ebx
  41331a:	jp     0x413393
  41331c:	mov    al,0x80
  41331e:	mov    ch,0x39
  413320:	es enter 0x96a2,0x28
  413325:	repnz adc DWORD PTR [ebx-0x442d84d5],0x35
  41332d:	dec    ebp
  41332e:	jmp    FWORD PTR [ebp+esi*2+0x4c]
  413332:	inc    ebx
  413333:	leave  
  413334:	xor    esp,DWORD PTR [ebp+0x35]
  413337:	pop    ebx
  413338:	xchg   esp,eax
  413339:	nop
  41333a:	cld    
  41333b:	mov    ebp,0x6064c37d
  413340:	mov    ebp,0xa8114c2f
  413345:	inc    eax
  413346:	call   0x70977997
  41334b:	sbb    al,0x3c
  41334d:	outs   dx,BYTE PTR ds:[esi]
  41334e:	int    0x4a
  413350:	push   ss
  413351:	mov    al,ds:0x7015f82d
  413356:	std    
  413357:	pop    esp
  413358:	lock pusha 
  41335a:	jb     0x413378
  41335c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41335d:	inc    ebp
  41335e:	or     dl,BYTE PTR [ebx-0x490f6e88]
  413364:	sbb    bl,BYTE PTR [eax+0x3264c8b]
  41336a:	push   eax
  41336b:	jmp    0xd3cf:0x6eafd674
  413372:	aad    0x99
  413374:	mov    ah,0xa8
  413376:	cmp    eax,0x343db932
  41337b:	hlt    
  41337c:	jae    0x413399
  41337e:	mov    WORD PTR [ecx],?
  413380:	mov    esi,0xb28f5c
  413385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413386:	inc    ebp
  413387:	add    eax,edi
  413389:	push   ebp
  41338a:	out    dx,al
  41338b:	cmp    eax,edx
  41338d:	retf   
  41338e:	adc    eax,0x72f9c36b
  413393:	mov    al,BYTE PTR [eax+0x47]
  413396:	mov    bl,0xa9
  413398:	sbb    al,BYTE PTR [ecx+0x403e07c1]
  41339e:	push   ss
  41339f:	and    eax,0x15fdb5a3
  4133a4:	div    DWORD PTR ds:0xa1ab45bf
  4133aa:	and    BYTE PTR ds:0x1a4efe88,bh
  4133b0:	mov    eax,0xe92574a0
  4133b5:	sbb    eax,ebx
  4133b7:	pop    ebp
  4133b8:	push   eax
  4133b9:	ds imul edi,edi,0xc511bdf9
  4133c0:	outs   dx,BYTE PTR ds:[esi]
  4133c1:	repnz (bad) 
  4133c3:	(bad)  
  4133c4:	bound  edi,QWORD PTR [ebx+0x10]
  4133c7:	int3   
  4133c8:	loopne 0x413403
  4133ca:	sbb    dl,BYTE PTR [ebx+0x7dca6e1a]
  4133d0:	dec    edx
  4133d1:	cli    
  4133d2:	sbb    BYTE PTR [edx+0x3c],dh
  4133d5:	mov    al,ds:0x17f83170
  4133da:	push   edi
  4133db:	ret    0x7974
  4133de:	or     DWORD PTR [eax],esi
  4133e0:	shl    esp,1
  4133e2:	in     al,0xca
  4133e4:	lods   al,BYTE PTR ds:[esi]
  4133e5:	pop    edx
  4133e6:	lods   al,BYTE PTR ds:[esi]
  4133e7:	jmp    0xa8140e33
  4133ec:	adc    ebp,edx
  4133ee:	cmp    DWORD PTR [eax-0x25c6d66],edx
  4133f4:	cdq    
  4133f5:	(bad)  
  4133f7:	or     cl,BYTE PTR [ecx-0x563a4290]
  4133fd:	mov    ch,0xfe
  4133ff:	dec    eax
  413400:	retf   
  413401:	adc    DWORD PTR [edi],edx
  413403:	adc    al,0xfd
  413405:	or     eax,0x7928b2f0
  41340a:	sub    ch,BYTE PTR [ebx-0x42223504]
  413410:	mov    esi,0x3f2155e5
  413415:	aas    
  413416:	mov    dl,0xa0
  413418:	out    dx,al
  413419:	mov    bh,BYTE PTR [esi+0x53]
  41341c:	out    0x9c,al
  41341e:	aaa    
  41341f:	xor    DWORD PTR [esi],edx
  413421:	fistp  DWORD PTR [ecx+0x31]
  413424:	scas   al,BYTE PTR es:[edi]
  413425:	jl     0x413454
  413427:	jmp    edi
  413429:	sbb    DWORD PTR [esi],esp
  41342b:	mov    al,ds:0x1d81faf8
  413430:	fdivr  QWORD PTR ds:[edx+0x18f00cf7]
  413437:	addr16 jge 0x4133d2
  41343a:	adc    al,0x24
  41343c:	in     al,0x58
  41343e:	push   ebx
  41343f:	(bad)  
  413440:	repnz loop 0x413408
  413443:	sbb    cl,BYTE PTR [eax]
  413445:	jg     0x41349d
  413447:	push   ecx
  413448:	rol    BYTE PTR [ebx],0x5e
  41344b:	fwait
  41344c:	adc    ah,BYTE PTR [esi]
  41344e:	test   eax,0x51de1584
  413453:	xchg   ecx,eax
  413454:	sbb    bl,BYTE PTR [ebx+0x2e]
  413457:	ins    DWORD PTR es:[edi],dx
  413458:	stc    
  413459:	arpl   WORD PTR [esi],dx
  41345b:	mov    WORD PTR [ebx-0x26],?
  41345e:	lods   al,BYTE PTR ds:[esi]
  41345f:	jbe    0x4134d6
  413461:	in     al,dx
  413462:	out    0x0,al
  413464:	cmc    
  413465:	pop    ss
  413466:	test   DWORD PTR [ecx+0xa5887ea],edx
  41346c:	mov    dl,0xa8
  41346e:	add    BYTE PTR [ebx+0x7edd612e],0x4f
  413475:	xchg   BYTE PTR ds:0x84eebb7f,bl
  41347b:	mov    ah,0xdd
  41347d:	add    DWORD PTR [esi+edi*2+0x2e4d12b1],edx
  413484:	cli    
  413485:	push   0xffffffaf
  413487:	cmp    DWORD PTR [eax-0x5cd91d4f],0x2f
  41348e:	shr    BYTE PTR [edx],cl
  413490:	pushf  
  413491:	nop
  413492:	mov    eax,ds:0x20ee977b
  413497:	or     ecx,DWORD PTR [edx+eax*8-0x2b]
  41349b:	push   esp
  41349c:	fld    TBYTE PTR [esi]
  41349e:	adc    BYTE PTR [esi+0x69],dl
  4134a1:	jns    0x4134d5
  4134a3:	push   cs
  4134a4:	xchg   DWORD PTR [edx+edi*2-0x37cd42c7],edx
  4134ab:	cmp    eax,0x7e9df377
  4134b0:	je     0x413441
  4134b2:	mov    bl,0x1e
  4134b4:	out    0x2f,al
  4134b6:	mov    ch,0x9
  4134b8:	mov    eax,0x4b8d917b
  4134bd:	or     eax,0xb204a16d
  4134c2:	push   ebp
  4134c3:	add    eax,DWORD PTR [ebp-0x3a791bf0]
  4134c9:	jbe    0x4134e8
  4134cb:	push   eax
  4134cc:	mov    dl,0xd3
  4134ce:	bound  eax,QWORD PTR [ebx-0x4999b760]
  4134d4:	jmp    0x413495
  4134d6:	in     eax,dx
  4134d7:	cld    
  4134d8:	inc    ebp
  4134d9:	out    0x57,eax
  4134db:	into   
  4134dc:	and    BYTE PTR [edi+0x14],dh
  4134df:	cdq    
  4134e0:	leave  
  4134e1:	enter  0x4227,0x55
  4134e5:	push   ebp
  4134e6:	push   eax
  4134e7:	bound  esi,QWORD PTR ds:0xbbf036bf
  4134ed:	cdq    
  4134ee:	inc    ecx
  4134ef:	dec    esp
  4134f0:	mov    ebx,0x39f85dc9
  4134f5:	adc    BYTE PTR [edx+0x79dec3d7],ch
  4134fb:	cmp    DWORD PTR [eax],0xffffffc8
  4134fe:	pop    esp
  4134ff:	out    0xbd,al
  413501:	xchg   esi,eax
  413502:	mov    cl,0x7f
  413504:	es jbe 0x41351d
  413507:	adc    al,0x3b
  413509:	std    
  41350a:	mov    DWORD PTR [ebx-0x36],esi
  41350d:	lahf   
  41350e:	je     0x413578
  413510:	hlt    
  413511:	push   edx
  413512:	mov    esp,DWORD PTR [ebp+0x50]
  413515:	jge    0x4134a4
  413517:	xor    BYTE PTR [ecx+0x5c4bfb31],cl
  41351d:	std    
  41351e:	push   esp
  41351f:	cwde   
  413520:	pop    esp
  413521:	mov    al,cl
  413523:	lea    esi,[ebx]
  413525:	imul   esp,DWORD PTR [eax+0x5741e7f8],0xffffffde
  41352c:	rol    ch,0x23
  41352f:	ins    BYTE PTR es:[edi],dx
  413530:	add    al,0x14
  413532:	mov    eax,ds:0x2421cf52
  413537:	pushf  
  413538:	arpl   WORD PTR [eax],dx
  41353a:	(bad)  
  41353b:	mov    esp,0x5fe837c8
  413540:	cmp    BYTE PTR [edi],0xf3
  413543:	hlt    
  413544:	ss lahf 
  413546:	sbb    dl,BYTE PTR [edx+0x7270d3e2]
  41354c:	call   DWORD PTR [ecx]
  41354e:	mov    bh,0xd8
  413550:	mov    ds:0xef3f2fcf,al
  413555:	aam    0x67
  413557:	int3   
  413558:	xor    edx,ebx
  41355a:	retf   
  41355b:	pop    esi
  41355c:	inc    esp
  41355d:	dec    edi
  41355e:	push   es
  41355f:	cmp    BYTE PTR [ebx+0x2a],dl
  413562:	pop    edi
  413563:	xor    DWORD PTR [ebx+eiz*4],ebp
  413566:	pop    ds
  413567:	jmp    0x4135e2
  413569:	inc    eax
  41356a:	out    0xb5,al
  41356c:	ss push ss
  41356e:	mov    bh,0xfb
  413570:	dec    esp
  413571:	stos   DWORD PTR es:[edi],eax
  413572:	push   esp
  413573:	das    
  413574:	vmulss xmm1,xmm2,xmm4
  413578:	inc    edx
  413579:	adc    al,0x9a
  41357b:	cld    
  41357c:	jp     0x4135f9
  41357e:	iret   
  41357f:	hlt    
  413580:	adc    eax,0xe3eafa8b
  413585:	jb     0x4135e6
  413587:	adc    eax,0xc7d721fe
  41358c:	das    
  41358d:	or     DWORD PTR [ebp+0x32],edx
  413590:	gs mov bl,0x35
  413593:	mov    eax,ds:0xce39f6d2
  413598:	loopne 0x41360b
  41359a:	sub    eax,0x13268959
  41359f:	lds    edi,FWORD PTR [edx+esi*4+0x2c8e23ea]
  4135a6:	mov    DWORD PTR [esi-0x47],esp
  4135a9:	mov    edi,0xf141ed48
  4135af:	jl     0x4135d4
  4135b1:	mov    DWORD PTR [ebx],edi
  4135b3:	inc    ebp
  4135b4:	fdiv   st,st(6)
  4135b6:	daa    
  4135b7:	scas   eax,DWORD PTR es:[edi]
  4135b8:	mov    edi,0x6b2a86f9
  4135bd:	xor    bl,ch
  4135bf:	jl     0x41360e
  4135c1:	or     BYTE PTR [edi-0x17],ah
  4135c4:	rol    DWORD PTR [ebp+0x7b1ff092],0x4b
  4135cb:	fbld   TBYTE PTR [eax-0x623d07fb]
  4135d1:	adc    BYTE PTR [edi],bl
  4135d3:	and    BYTE PTR [ecx],0x15
  4135d6:	jmp    0x413653
  4135d8:	fnstcw WORD PTR [edx+0x2befb22a]
  4135de:	pop    esp
  4135df:	xchg   ebx,eax
  4135e0:	mov    ah,dh
  4135e2:	aaa    
  4135e3:	and    al,0x7d
  4135e5:	daa    
  4135e6:	xlat   BYTE PTR ds:[ebx]
  4135e7:	loopne 0x41363c
  4135e9:	shl    DWORD PTR [bp+0x41],cl
  4135ed:	dec    esp
  4135ee:	pop    ebx
  4135ef:	xchg   esp,eax
  4135f0:	sub    dl,ch
  4135f2:	inc    edx
  4135f3:	(bad)  
  4135f4:	jmp    0x8d026e1e
  4135f9:	aaa    
  4135fa:	stc    
  4135fb:	and    eax,0x96bc2b24
  413600:	rcl    bl,1
  413602:	lea    esi,[ecx+0x37]
  413605:	lds    ebx,FWORD PTR [edi-0x521ef171]
  41360b:	lods   al,BYTE PTR ds:[esi]
  41360c:	mov    ebx,DWORD PTR [ecx-0x1f]
  41360f:	lds    edi,FWORD PTR [ebx-0x7c]
  413612:	sub    al,BYTE PTR [ecx]
  413614:	dec    eax
  413615:	nop
  413616:	pop    ss
  413617:	lahf   
  413618:	xchg   esp,eax
  413619:	adc    DWORD PTR [eax-0x3f],esi
  41361c:	test   esp,esp
  41361e:	cmp    edi,esp
  413620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413621:	sti    
  413622:	xor    ah,dl
  413624:	mov    ds:0x52402801,eax
  413629:	les    ebx,FWORD PTR [ebx+0x16]
  41362c:	jg     0x41364b
  41362e:	iret   
  41362f:	ins    BYTE PTR es:[edi],dx
  413630:	cli    
  413631:	mov    eax,0xf3d1a82b
  413636:	aaa    
  413637:	jmp    0x8510:0x781a4bfd
  41363e:	daa    
  41363f:	retf   
  413640:	inc    ecx
  413641:	or     BYTE PTR [ecx],bl
  413643:	jae    0x413621
  413645:	jecxz  0x413672
  413647:	aaa    
  413648:	sbb    eax,0x5b0d84cd
  41364d:	pop    esp
  41364e:	push   edx
  41364f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413650:	xor    BYTE PTR [edx-0x61],ah
  413653:	mov    eax,0xd0039388
  413658:	fsubr  DWORD PTR [edi-0x43b5adca]
  41365e:	retf   0x922c
  413661:	mov    bl,0x23
  413663:	inc    ebp
  413664:	mov    ch,0xf7
  413666:	lds    esi,FWORD PTR [edx-0x4c]
  413669:	(bad)  
  41366a:	mov    ebp,ecx
  41366c:	inc    eax
  41366d:	cmp    DWORD PTR [ebp+0x11],ebx
  413670:	adc    eax,0x101c05f7
  413675:	std    
  413676:	in     al,dx
  413677:	test   al,0x82
  413679:	inc    ebx
  41367a:	add    DWORD PTR [edx+0x5a204277],esp
  413680:	xor    ebp,DWORD PTR [ecx-0x5b19f09b]
  413686:	adc    ch,al
  413688:	ret    0xb48d
  41368b:	repnz mov ?,WORD PTR [edx+esi*4-0x67]
  413690:	dec    ebp
  413691:	rol    BYTE PTR [esi],1
  413693:	mov    eax,ds:0x47edfbd6
  413698:	mov    ecx,0x74ff3d27
  41369d:	sbb    al,BYTE PTR [esi]
  41369f:	imul   DWORD PTR [ecx]
  4136a1:	dec    ebx
  4136a2:	aaa    
  4136a3:	and    BYTE PTR [edx-0x22],dl
  4136a6:	cwde   
  4136a7:	(bad)  
  4136a8:	aad    0x16
  4136aa:	adc    bh,BYTE PTR [edx]
  4136ac:	jae    0x413651
  4136ae:	jae    0x413705
  4136b0:	fwait
  4136b1:	lods   eax,DWORD PTR ds:[esi]
  4136b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b3:	sbb    ebx,esp
  4136b5:	add    al,0x8d
  4136b7:	sbb    esp,ebx
  4136b9:	push   ss
  4136ba:	and    ebp,DWORD PTR [esi-0x5]
  4136bd:	cmp    bh,BYTE PTR [edx-0x13e3df95]
  4136c3:	ror    BYTE PTR [eax],0xce
  4136c6:	jno    0x4136bc
  4136c8:	cmp    ebx,0x2ee791f5
  4136ce:	loopne 0x4136b1
  4136d0:	mov    esi,0x1c8be235
  4136d5:	dec    sp
  4136d7:	lds    ecx,FWORD PTR [edi+ecx*8+0x7643b65]
  4136de:	sbb    eax,0x627d2462
  4136e3:	adc    DWORD PTR cs:[edx+0x666aeffa],ebp
  4136ea:	cld    
  4136eb:	sbb    BYTE PTR ds:0xb62ceace,bh
  4136f1:	lds    ebp,FWORD PTR [eax-0xe0065a]
  4136f7:	sub    eax,0xba922002
  4136fc:	icebp  
  4136fd:	loope  0x413774
  4136ff:	fisttp WORD PTR [edi+0x3623f0ac]
  413705:	retf   
  413706:	cmc    
  413707:	or     DWORD PTR [edx-0x6fa17fa],edi
  41370d:	out    0x51,al
  41370f:	xor    ah,BYTE PTR [ebx-0x19]
  413712:	and    DWORD PTR [edi+esi*4+0x65ab56d4],edi
  413719:	ds loope 0x4136e6
  41371c:	mov    dh,0x5e
  41371e:	and    al,bl
  413720:	jge    0x4136f9
  413722:	adc    dl,BYTE PTR [eax-0x10]
  413725:	mov    ebp,0x931a588c
  41372a:	lods   al,BYTE PTR ds:[esi]
  41372b:	jge    0x413798
  41372d:	mov    edi,0xa27d64c4
  413732:	out    0x51,al
  413734:	xor    cl,BYTE PTR [ecx]
  413736:	sub    BYTE PTR [edx+0x2],dh
  413739:	dec    esp
  41373a:	fcom   DWORD PTR [ecx+0x63]
  41373d:	out    0x83,eax
  41373f:	inc    esp
  413740:	in     al,0x3c
  413742:	ss jmp 0x41378e
  413745:	mov    cl,0xdf
  413747:	das    
  413748:	fisub  WORD PTR [ebp+0x1c]
  41374b:	loop   0x4137bc
  41374d:	ins    BYTE PTR es:[edi],dx
  41374e:	push   0x67
  413750:	pushf  
  413751:	adc    al,ch
  413753:	(bad)  [ebx+0x33eac086]
  413759:	push   ebx
  41375a:	int    0xc8
  41375c:	push   0x38
  41375e:	and    eax,esp
  413760:	jae    0x413738
  413762:	call   0xe518:0xf676e146
  413769:	jmp    0xb7d:0x2dc4bb05
  413770:	jnp    0x41376b
  413772:	jae    0x4137bd
  413774:	fs push edx
  413776:	enter  0xe1e2,0x86
  41377a:	stc    
  41377b:	pop    esp
  41377c:	and    al,0x57
  41377e:	xor    eax,0x46721a66
  413783:	fs xchg ecx,eax
  413785:	loope  0x41371e
  413787:	and    al,0xe0
  413789:	mov    dh,0x28
  41378b:	xchg   BYTE PTR [eax-0x6b766e35],dl
  413791:	outs   dx,DWORD PTR ds:[esi]
  413792:	pop    ds
  413793:	mov    ebp,0xa0d3e2a2
  413798:	and    eax,0x2d7fe17e
  41379d:	mov    ecx,0x1109db46
  4137a2:	iret   
  4137a3:	bound  esi,QWORD PTR cs:[eax+eiz*8]
  4137a7:	xor    al,0xa5
  4137a9:	jp     0x4137d3
  4137ab:	pop    esp
  4137ac:	push   0xffffffab
  4137ae:	(bad)  
  4137af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b0:	fist   DWORD PTR [esi-0x2ad01992]
  4137b6:	dec    esp
  4137b7:	and    DWORD PTR [ebp-0x2f346ed8],esp
  4137bd:	sbb    al,0x75
  4137bf:	lods   al,BYTE PTR ds:[esi]
  4137c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137c1:	es mov edx,0x6e7df229
  4137c7:	cmp    al,0x24
  4137c9:	jmp    0x4137b9
  4137cb:	sbb    ebx,DWORD PTR [edi]
  4137cd:	and    cl,ch
  4137cf:	fadd   DWORD PTR [ecx+ebx*2]
  4137d2:	int    0x39
  4137d4:	inc    edx
  4137d5:	cmp    DWORD PTR ds:0xa5c3309e,esi
  4137db:	hlt    
  4137dc:	push   ebp
  4137dd:	pop    esi
  4137de:	pop    ss
  4137df:	xchg   BYTE PTR [edx],ch
  4137e1:	adc    ecx,DWORD PTR [eax]
  4137e3:	jg     0x413788
  4137e5:	out    dx,al
  4137e6:	sub    dl,BYTE PTR [edi-0x355b1c85]
  4137ec:	scas   al,BYTE PTR es:[edi]
  4137ed:	adc    DWORD PTR [ebp+0x10],esi
  4137f0:	pop    ds
  4137f1:	mov    ebp,0x6eda258a
  4137f6:	jbe    0x4137ac
  4137f8:	or     esi,DWORD PTR [esi+ecx*2-0x2882e272]
  4137ff:	add    DWORD PTR [ecx-0x53],esi
  413802:	and    esi,DWORD PTR ds:0x2c6142f9
  413808:	cdq    
  413809:	or     eax,0x8aedbecb
  41380e:	aam    0x10
  413810:	push   esi
  413811:	in     al,0xd0
  413813:	mov    eax,DWORD PTR fs:[ecx-0x61]
  413817:	and    cl,BYTE PTR [ebx]
  413819:	cmc    
  41381a:	ficomp DWORD PTR [ebx+0x5d]
  41381d:	popf   
  41381e:	push   cs
  41381f:	xchg   ebp,eax
  413820:	pop    esi
  413821:	retf   
  413822:	xor    esp,DWORD PTR [edi+0x23]
  413825:	xor    BYTE PTR [ebx+0x76],ch
  413828:	iret   
  413829:	popf   
  41382a:	sub    eax,0xefcaedb3
  41382f:	lods   al,BYTE PTR ds:[esi]
  413830:	je     0x4138a9
  413832:	out    0x2f,eax
  413834:	out    0x77,al
  413836:	mov    cl,al
  413838:	xor    al,0x11
  41383a:	fwait
  41383b:	jle    0x4138a9
  41383d:	ficom  WORD PTR [edi+0x47d4c187]
  413843:	je     0x4137c8
  413845:	jle    0x41389d
  413847:	push   cs
  413848:	(bad)  
  413849:	hlt    
  41384a:	jae    0x413895
  41384c:	mov    bh,0x68
  41384e:	in     eax,0x74
  413850:	rol    eax,cl
  413852:	mov    ds:0x9dc5f333,al
  413857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413858:	pusha  
  413859:	into   
  41385a:	jge    0x4138ad
  41385c:	jmp    0x44b0:0xb3be9106
  413863:	or     eax,0x7e19e41a
  413868:	xchg   ebp,eax
  413869:	rcl    BYTE PTR [eax+edi*4+0x4c],1
  41386d:	imul   esi,ebx,0x77
  413870:	mov    esi,0xd61fdedc
  413875:	xchg   esp,eax
  413876:	loopne 0x413854
  413878:	pop    esi
  413879:	sbb    al,bh
  41387b:	add    edx,0xfffffff3
  41387e:	and    BYTE PTR [eax+0x5c],al
  413881:	inc    edi
  413882:	mov    fs,WORD PTR ss:[eax-0x12]
  413886:	pusha  
  413887:	sbb    DWORD PTR [esi+0x6474e536],edx
  41388d:	push   ss
  41388e:	loop   0x41381b
  413890:	dec    esi
  413891:	fadd   DWORD PTR [edi]
  413893:	inc    edi
  413894:	data16 loop 0x4138ed
  413897:	arpl   WORD PTR [ecx],bx
  413899:	ja     0x413915
  41389b:	inc    ecx
  41389c:	jl     0x413851
  41389e:	inc    ebp
  41389f:	add    al,0x10
  4138a1:	add    ah,BYTE PTR [ebx+ebp*4]
  4138a4:	daa    
  4138a5:	cmp    BYTE PTR [edi+0x68],0x29
  4138a9:	or     BYTE PTR [ebp-0x2e892ad1],dh
  4138af:	loop   0x413921
  4138b1:	mov    ebx,0xf55f1b34
  4138b6:	mov    esi,0x8f37dd76
  4138bb:	fild   QWORD PTR [edi]
  4138bd:	outs   dx,DWORD PTR ds:[esi]
  4138be:	mov    eax,0xacd314f1
  4138c3:	sub    DWORD PTR [esi],esp
  4138c5:	sub    ebx,eax
  4138c7:	jmp    0x2e6fae31
  4138cc:	test   al,0xeb
  4138ce:	rcr    BYTE PTR [ebx],0x55
  4138d1:	stos   DWORD PTR es:[edi],eax
  4138d2:	cmp    eax,0x8f65b45f
  4138d7:	push   eax
  4138d8:	jo     0x413926
  4138da:	pop    ss
  4138db:	sbb    al,0xe7
  4138dd:	mov    bl,0xf6
  4138df:	fs and ebp,edi
  4138e2:	mov    ebp,0x81ac76b6
  4138e7:	aas    
  4138e8:	or     al,BYTE PTR [esi]
  4138ea:	retf   
  4138eb:	dec    edx
  4138ec:	aad    0x28
  4138ee:	mov    bl,BYTE PTR [esi-0x19]
  4138f1:	aad    0xc6
  4138f3:	sbb    eax,0x8eb1198d
  4138f8:	jp     0x4138a6
  4138fa:	add    cl,BYTE PTR [ecx+0x5f0c4089]
  413900:	cdq    
  413901:	in     eax,dx
  413902:	rol    dl,1
  413904:	pop    esp
  413905:	stos   DWORD PTR es:[edi],eax
  413906:	popf   
  413907:	aad    0xa9
  413909:	cld    
  41390a:	push   ebp
  41390b:	push   esp
  41390c:	arpl   WORD PTR [ecx-0x5e],bp
  41390f:	fs jns 0x4138a5
  413912:	dec    ebx
  413913:	pop    esi
  413914:	pop    esp
  413915:	push   ecx
  413916:	dec    eax
  413917:	in     eax,dx
  413918:	jbe    0x41398d
  41391a:	xchg   ebx,eax
  41391b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41391c:	addr16 dec ebp
  41391e:	add    bl,0x72
  413921:	fnstenv [ebx]
  413923:	dec    ebp
  413924:	sub    al,0x3d
  413926:	mov    ch,0x67
  413928:	push   esp
  413929:	dec    esp
  41392a:	repz push edx
  41392c:	sbb    BYTE PTR [ebp-0x30413d05],ah
  413932:	ins    BYTE PTR es:[edi],dx
  413933:	in     eax,dx
  413934:	or     DWORD PTR [esi-0x467b3e49],ebx
  41393a:	popf   
  41393b:	jbe    0x413980
  41393d:	repz push eax
  41393f:	mov    eax,ds:0xd6ec4e0e
  413944:	jge    0x4138e8
  413946:	mov    edi,0x15e406e5
  41394b:	inc    ecx
  41394c:	clc    
  41394d:	xchg   esp,eax
  41394e:	aam    0x86
  413950:	fdivr  QWORD PTR [edi+0x3a]
  413953:	iret   
  413954:	mov    esi,0x494eaf73
  413959:	push   esp
  41395a:	fild   QWORD PTR [edi]
  41395c:	rcl    bh,1
  41395e:	sar    DWORD PTR [esi],cl
  413960:	dec    ecx
  413961:	mov    esp,ecx
  413963:	scas   eax,DWORD PTR es:[edi]
  413964:	mov    DWORD PTR [eax-0x323160ee],esi
  41396a:	pop    ebp
  41396b:	icebp  
  41396c:	in     al,0x1c
  41396e:	mov    ebp,0x1fa7f5cf
  413973:	mov    ecx,0x401d341
  413978:	mov    cl,0xd6
  41397a:	pusha  
  41397b:	cmc    
  41397c:	or     dh,dh
  41397e:	int3   
  41397f:	jle    0x413914
  413981:	loopne 0x413903
  413983:	ins    BYTE PTR es:[edi],dx
  413984:	jno    0x41399c
  413986:	dec    edx
  413987:	pop    es
  413988:	jecxz  0x41391e
  41398a:	mov    WORD PTR [ebx-0x513321e9],es
  413990:	inc    esi
  413991:	jle    0x41392e
  413993:	fsubr  QWORD PTR [eax+0x649e98a]
  413999:	add    al,BYTE PTR [ebx+eiz*2]
  41399c:	in     al,0x85
  41399e:	mov    ah,0x80
  4139a0:	sbb    BYTE PTR [eax-0x28],cl
  4139a3:	les    esp,FWORD PTR [edx+0x7d2b21ef]
  4139a9:	repz jnp 0x4139ca
  4139ac:	sub    ch,BYTE PTR [edx+ebp*1-0x75]
  4139b0:	and    DWORD PTR [ecx],ebx
  4139b2:	test   BYTE PTR [ebp+ecx*4-0x24553adb],dl
  4139b9:	es scas al,BYTE PTR es:[edi]
  4139bb:	loope  0x413a1e
  4139bd:	ret    
  4139be:	jp     0x413985
  4139c0:	pop    ebp
  4139c1:	or     BYTE PTR ds:0x9458d860,cl
  4139c7:	popa   
  4139c8:	pushf  
  4139c9:	pop    eax
  4139ca:	dec    ecx
  4139cb:	ins    DWORD PTR es:[edi],dx
  4139cc:	into   
  4139cd:	arpl   sp,bp
  4139cf:	mov    DWORD PTR [ebx],ebp
  4139d1:	ret    
  4139d2:	lock xlat BYTE PTR ds:[ebx]
  4139d4:	inc    eax
  4139d5:	popf   
  4139d6:	aas    
  4139d7:	sub    DWORD PTR [edx+0x3a26156c],eax
  4139dd:	jno    0x413976
  4139df:	inc    ebp
  4139e0:	test   eax,0xe4d1c7c1
  4139e5:	mov    ds:0xd028a034,eax
  4139ea:	cwde   
  4139eb:	loop   0x413a29
  4139ed:	adc    eax,0xf82d93a8
  4139f2:	outs   dx,DWORD PTR ds:[esi]
  4139f4:	sub    bh,BYTE PTR [edx-0x2d]
  4139f7:	push   esp
  4139f8:	adc    DWORD PTR [eax],esp
  4139fa:	cmp    DWORD PTR [ecx-0x79],ebx
  4139fd:	outs   dx,BYTE PTR ds:[esi]
  4139fe:	sbb    bh,ah
  413a00:	inc    eax
  413a01:	mov    eax,0x32b1e5ed
  413a06:	sar    ch,cl
  413a08:	and    ah,BYTE PTR [ebx]
  413a0a:	imul   eax,DWORD PTR [edx+edi*4-0x7b],0xa6e58c6c
  413a12:	mov    al,ds:0x4d77fbf6
  413a17:	(bad)  
  413a18:	ficom  DWORD PTR [ecx]
  413a1a:	mov    edx,0xf808f4fe
  413a1f:	rcl    DWORD PTR [ecx+eiz*4],1
  413a22:	inc    esi
  413a23:	push   ecx
  413a24:	inc    edx
  413a25:	lock dec eax
  413a27:	xchg   ecx,eax
  413a28:	std    
  413a29:	leave  
  413a2a:	daa    
  413a2b:	or     cl,dh
  413a2d:	cmp    cl,BYTE PTR [ebp+0x3b]
  413a30:	cmp    DWORD PTR [ecx-0x3b],edi
  413a33:	sahf   
  413a34:	sahf   
  413a35:	pop    ds
  413a36:	hlt    
  413a37:	(bad)  [edx]
  413a39:	or     esp,eax
  413a3b:	sub    bl,dh
  413a3d:	das    
  413a3e:	(bad)  
  413a3f:	xor    bl,bl
  413a41:	mov    dl,0x9a
  413a43:	xor    al,0xce
  413a45:	scas   eax,DWORD PTR es:[edi]
  413a46:	cli    
  413a47:	push   es
  413a48:	pusha  
  413a49:	or     dl,ah
  413a4b:	repz mov ebx,0xc5596619
  413a51:	outs   dx,DWORD PTR ds:[esi]
  413a52:	out    0x3b,eax
  413a54:	ss fwait
  413a56:	je     0x413ac9
  413a58:	and    al,0x37
  413a5a:	xchg   edi,eax
  413a5b:	enter  0xf9ae,0xa6
  413a5f:	xor    eax,0x3e966427
  413a64:	mov    ebp,0x820d6532
  413a69:	push   ebp
  413a6a:	scas   eax,DWORD PTR es:[edi]
  413a6b:	test   al,0xce
  413a6d:	sbb    eax,0xa9c0ef72
  413a72:	mov    eax,0x3081777f
  413a77:	dec    ebx
  413a78:	push   0x12
  413a7a:	and    DWORD PTR [ebx],edx
  413a7c:	sar    ah,cl
  413a7e:	mov    eax,0xacb33a8
  413a83:	and    BYTE PTR [edx+eax*1-0x73],ah
  413a87:	pop    esp
  413a88:	in     al,dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	push   eax
  413a8b:	xor    eax,0xf653d490
  413a90:	jp     0x413a3e
  413a92:	test   al,0x38
  413a94:	jle    0x413ac7
  413a96:	stos   DWORD PTR es:[edi],eax
  413a97:	das    
  413a98:	ror    al,1
  413a9a:	sub    al,0xe4
  413a9c:	xchg   esp,eax
  413a9d:	and    BYTE PTR [edx],0xe3
  413aa0:	mov    bl,0xb2
  413aa2:	mov    al,0x34
  413aa4:	xor    DWORD PTR [edi],eax
  413aa6:	int3   
  413aa7:	inc    edi
  413aa8:	ins    DWORD PTR es:[edi],dx
  413aa9:	push   esi
  413aaa:	adc    eax,0x1c435c94
  413aaf:	xor    DWORD PTR [ebp-0x29],edx
  413ab2:	mov    bl,0xfa
  413ab4:	fidiv  WORD PTR [eax+0x2f35554d]
  413aba:	add    edx,ebx
  413abc:	std    
  413abd:	out    0x3,al
  413abf:	not    ebx
  413ac1:	mov    ebp,0x7f4e611a
  413ac6:	mov    ah,0xf2
  413ac8:	das    
  413ac9:	bound  ebp,QWORD PTR [ebp-0x60c2cc3e]
  413acf:	mov    edx,0x53f75ab8
  413ad4:	stos   BYTE PTR es:[edi],al
  413ad5:	mov    bl,0x7a
  413ad7:	mov    al,0xbb
  413ad9:	xor    DWORD PTR [ebp+0x40],edx
  413adc:	xchg   esp,eax
  413add:	inc    ebx
  413ade:	cmp    bh,BYTE PTR [esi-0x71]
  413ae1:	in     al,0x11
  413ae3:	jo     0x413a7c
  413ae5:	das    
  413ae6:	cwde   
  413ae7:	xor    eax,0xe87c8c29
  413aec:	xchg   esi,eax
  413aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aee:	adc    bl,BYTE PTR [ebp+0x1b]
  413af1:	sbb    eax,0x97bd780
  413af6:	dec    edi
  413af7:	addr16 in al,0x8d
  413afa:	dec    esi
  413afb:	mov    dl,BYTE PTR ds:0xdbc6fea1
  413b01:	popa   
  413b02:	loopne 0x413af1
  413b04:	loop   0x413a87
  413b06:	cmp    edi,DWORD PTR [edi]
  413b08:	pushf  
  413b09:	lods   eax,DWORD PTR ds:[esi]
  413b0a:	mov    al,0xb1
  413b0c:	mov    esp,0xc0a003d2
  413b11:	push   esi
  413b12:	and    dh,BYTE PTR [ebx+ecx*8-0x3e]
  413b16:	aad    0xc
  413b18:	ja     0x413b5f
  413b1a:	sar    DWORD PTR [ebp-0x62f2a0b8],cl
  413b20:	cmp    dh,BYTE PTR [ebx]
  413b22:	fstp   TBYTE PTR [ebx-0x2b]
  413b25:	mov    ah,0xeb
  413b27:	jno    0x413b2c
  413b29:	sub    esp,edi
  413b2b:	je     0x413b7c
  413b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2e:	mov    eax,ds:0x773b5a4c
  413b33:	mov    ebx,0x31a1e53e
  413b38:	sub    DWORD PTR [ebx-0x3d],edx
  413b3b:	mov    ds:0x43cc849a,eax
  413b40:	inc    edi
  413b41:	fisttp QWORD PTR [eax]
  413b43:	data16 mov dl,0x91
  413b46:	sbb    DWORD PTR [ecx-0x3d],0x63
  413b4a:	loopne 0x413b01
  413b4c:	push   ss
  413b4d:	aas    
  413b4e:	mov    esi,0x909925e9
  413b53:	pop    ds
  413b54:	cmp    BYTE PTR [ecx+0x337fb8ea],dh
  413b5a:	arpl   WORD PTR [eax],ax
  413b5c:	push   edi
  413b5d:	mov    DWORD PTR [esi-0x6],ecx
  413b60:	lods   al,BYTE PTR ds:[esi]
  413b61:	(bad)  
  413b62:	sub    DWORD PTR [edx-0x7570f5e5],eax
  413b68:	sub    eax,0xb193e171
  413b6d:	inc    ebx
  413b6e:	popf   
  413b6f:	push   DWORD PTR [eax]
  413b71:	cwde   
  413b72:	test   DWORD PTR [edx],eax
  413b74:	mov    dl,0x23
  413b76:	bound  esp,QWORD PTR [edx]
  413b78:	push   DWORD PTR [edx-0x73]
  413b7b:	cmp    esp,esi
  413b7d:	mov    edi,0x1ecac508
  413b82:	out    dx,eax
  413b83:	or     eax,0xa223e7f9
  413b88:	mov    al,ds:0xa81d26ec
  413b8d:	or     al,BYTE PTR [ecx+0x5c]
  413b90:	in     al,dx
  413b91:	imul   eax,DWORD PTR [esi],0xffffffee
  413b94:	in     al,0xa2
  413b96:	push   edx
  413b97:	(bad)  
  413b98:	icebp  
  413b99:	(bad)  
  413b9a:	jo     0x413b22
  413b9c:	jno    0x413b56
  413b9e:	push   eax
  413b9f:	repnz std 
  413ba1:	jp     0x413b97
  413ba3:	mov    bh,0xe9
  413ba5:	or     eax,0x162b23a0
  413baa:	leave  
  413bab:	iret   
  413bac:	or     DWORD PTR [ebp-0x1508c62c],esi
  413bb2:	push   esi
  413bb3:	and    bh,ah
  413bb5:	cmp    al,0x81
  413bb7:	push   ebp
  413bb8:	(bad)  
  413bb9:	xchg   ecx,eax
  413bba:	into   
  413bbb:	mov    dl,bh
  413bbd:	lea    eax,[edx+edi*4+0x67]
  413bc1:	mov    DWORD PTR [ecx-0x36bff008],edx
  413bc7:	and    eax,0xb3d2547b
  413bcc:	mov    WORD PTR [ecx],?
  413bce:	ss ss je 0x413c1e
  413bd2:	adc    DWORD PTR ds:0xdf339d95,ebx
  413bd8:	loop   0x413c07
  413bda:	int3   
  413bdb:	enter  0xaeaa,0xff
  413bdf:	and    al,0xb
  413be1:	mov    edi,0xf84d8b34
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	mov    edi,DWORD PTR [edi-0x75]
  413d47:	sbb    eax,0x46b26be2
  413d4c:	call   0x8d23:0x78dcfcae
  413d53:	or     eax,DWORD PTR [ecx]
  413d55:	add    BYTE PTR [eax],al
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
